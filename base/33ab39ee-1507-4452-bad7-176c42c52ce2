{
    "title": "Modeling Her New Toy for Him",
    "pages": [
        "Jenelle's adventurous soul lived in every aspect of her daily activities. Her job: the fast-paced world of commodities trading. Her apartment: A trendy loft in a part of the city barely inside an area the realtors would tell you is undergoing gentrification. Her food: anything new, spicy, exotic. Her men: wildly different, each and every one, but all drawn to Jenelle's smoky sensuality and lithe body like gamblers to a roulette wheel.\n\nThe sex she enjoyed was adventurous, too. Always safe, but always a bit toward the edge. It suited her.\n\nOccasionally women, especially young, pretty, naive ladies who found her exciting to be around.\n\nMostly men. She loved their scent, their strong arms and shoulders, the way they could enfold her yet treasure her. \n\nAnd firm, rounded butts. Jenelle loved boy butts and girl butts. Mostly with the women it was to gaze at a truly beautiful work of nature. Sometimes to touch, but far more often to gaze appreciatively at a well-chosen pair of snug jeans as a sassy lady walked in the opposite direction or to savor the enormously fetching sight of a tight pair of boy shorts on a toned female body at the beach.\n\nWith her men, though, Jenelle reveled in the view of their naked backsides. Loved to touch, to graze her lips across the rounded globes while she held their firm, erect cocks in a reach-around. Adored the feeling of her hands gripping their cheeks and kneading the strong muscles there.\n\nAnd lately, the insane sexiness of spreading them open to her view, to teasing them, making them beg for her gentle caresses of their cute little puckered orifices.\n\nIt was such a turn-on to see their hidden openings, the places she loved to slide her fingers inside while she sucked their throbbing cocks.\n\nAll her men had great asses. It was a prerequisite for her attentions. Handsome faces were, too, but merely a handsome face without the body that promised firm glutes would not get far with Jenelle. That her blonde good looks, perky B-cup tits, and flat belly and toned bottom from her aerobics and spinning classes guaranteed she had the goods to attract such men was, well, perfect.\n\nSo with Duncan it had progressed to massage and penetration of his twitching opening after a playful spanking of his nude bottom as he stretched across her lap (following, of course, some purely manufactured reason that he had been naughty and needed to be punished with open-palmed smacks administered to his naked butt). Duncan enjoyed the role play, especially the sensuous lotioning of his bottom after the brief spanking had turned his cheeks just the palest shade of pink.\n\nGod, that pinkness on his firm, sexy butt! thought Janelle. It was incredibly erotic.\n\nThe lotioning after the spanking\u2014how delicious was that? His warm skin under her palms as she cooed to him, \"Poor baby. You need some lotion on your naughty little butt, don't you?\"\n\nHe usually didn't answer. He didn't have to. The way he squirmed and arched his butt up under her hands said everything both of them needed to know.\n\nThat and the erect seven inches that forced itself between Jenelle's thighs as she continued her tease.\n\nHis breathing would become heavier as she tightened the circles of her massage inward, working ever closer to the center of his sexual soul.\n\nThen, in what was inevitably accompanied by Duncan's indrawn breath of anticipation, she would slide a lotioned finger in between his cheeks to begin a torturously intense tease of his eager asshole.\n\n\"Maybe you've learned your lesson, young man, and deserve a reward,\" she often said, sliding a slick fingertip directly across his crinkled opening, intimating what his reward would be. \"You'd like a reward, wouldn't you?\"\n\n\"Yes. Please.\" \n\nThe answer was always the same.\n\nNo response from her at that point. She loved to tease him because it made her so incredibly horny. It was absolutely delicious knowing that it made him horny, as well.\n\nJust more lazy circles around the edge of his asshole with one slippery finger while she pried him open with the other hand.\n\n\"Please.\"\n\nThe second request always made her smile, made her pussy twitch and get even wetter.\n\n\"Show me.\" With those words she would place her hands on his cheeks and pull him completely open to her gaze, thrilled at what he was going to surrender to her, how he was going to be absolutely exposed and vulnerable in utter, naked lust for her to give him the most intimate sexual caress possible. \n\nWhat a sexy display he would put on for her then! What he did inevitably caused ripples of electricity to shiver up her spine when she saw him release, surrender, and invite, all with an unmistakable desperation communicated with the simple act of allowing a small opening to appear at the center of where she would enter him.\n\nShe would savor the moment, barely able to contain her lust to be inside of him, yet desperate to draw out the anticipation for them both in order to amp up the intensity of the exchange. It was so very, very sexy, erotic, even loving, to know that he trusted her to share this special tease with him, trusted her with a part of him hidden from everyone, even from previous lovers.\n\n\"Please.\"\n\nThe third time is the charm, she once thought during their little games, and she released one cheek to tap him lightly where he had opened for her. \"Here?\"\n\nHis cock was always throbbing at this point. She could feel its pulse between her thighs.\n\nHe would moan in desperation and arch upward, trying to draw her finger inside.\n\nIt was too much for her to stand. She would slide the length of her finger inside, probing deeply. Her erect clit, snug inside its tunnel as she squirmed, trying to get some kind of pressure against it, was her personal testament to how erotic she found the act of finger-fucking her man in the ass.\n\nOver the months with Duncan\u2014who remained a sexy, hunky lover who took her breath away by carrying her to bed and fucking her to dizzying orgasms in between the times when they played their naughty-boy games\u2014she had introduced a second finger, fascinated at how he accommodated it. She was entranced at the sight and powerfully aroused at his groans as she did him with two fingers while he squirmed underneath her ministrations, panting, his pre-cum oozing out to leave sticky trails on her thighs.\n\nBefore he erupted in his always-powerful orgasm, she would withdraw, and he would scramble up, knowing that she would be hastily sliding down the short skirt she liked to wear for the game because it made it easy to open her legs and trap his cock as he lay over her on the couch where she administered her spankings and sexy penetrations. Her panties would immediately follow, and Jenelle would lie back against the cushions, spread her legs as he stood before her with his erection pointing to the ceiling, and tug apart her pussy lips to show him how wet she was.\n\n\"Eat me, baby.\"\n\nAs his tongue lapped at her pussy and sucked on her clit, he would stroke his cock until he could take no more. Standing to gather her in his arms, he would carry her to the bedroom, lay her on the bed, and drive his dick deep inside her sopping pussy, and the two of them would fuck in total abandon until she sensed his approaching orgasm.\n\n\"Hand me the lube.\"\n\nHe would obey, eager to feel her again invade his asshole. She would squeeze some of the cool lube between his cheeks then hastily push the bottle back on the night stand.\n\n\"You are so sexy,\" he often said, voice low and incredibly erotic in her ear as she slid the lubricant in between his cheeks with her fingers while he lay on top of her. \"You drive me crazy.\"\n\nThen, she would slide inside him, using her finger as one part of the way she grasped him to pull him deeper into her soaking pussy.\n\nAs they worked their way toward a blinding climax, she would press deeper, eager to get as much of her finger inside him, knowing how divinely erotic it was going to feel when he spurted inside her and gripped her finger with his asshole in powerful contractions that came in concert with the pulsing ejaculation from his sturdy cock buried deep inside her pussy.\n\nSo satisfying. So pleasurable. So erotic. And so much fun. Jenelle began seeing more of Duncan and less of her other men, men not so willing to discover how much she enjoyed showing them how to find pleasures she could give them, then savor along with them.\n\nJenelle increasingly found her thoughts drawn to the sinfully sexy idea of fucking Duncan.\n\nFucking him in his ass with a strapon dildo she would buy for the explicit purpose of taking his boy-butt cherry.\n\nThe idea thrilled her, and she knew he would love it. The way he offered his ass to her during their sexy games made her know that sliding her strapon cock inside his asshole and then fucking him there the way she adored being taken doggy style by him would give them both incredible orgasms.\n\nShe got hot thinking of how good she would make him feel in such an intimate, sexy way, then she got even hotter thinking about how good it would feel for her. \n\nThere would be the sexy sight of the shaft of her dildo slipping into his bottomhole\u2014damn! Jenelle's mental vision of the act, herself strapped in and otherwise nude behind his upturned ass, her hands gripping his cheeks to hold him open, the tip of the dildo positioned at the center of his asshole, well . . . she could not indulge that fantasy without her hard clit demanding immediate attention.\n\nHer lust for this outrageous, sexy, erotic act drew her to web sites where she investigated vendors' descriptions and customers' reviews of the wide array of toys designed for this purpose. Along the way, Jenelle's search engine inquiries turned up deliciously arousing stories and fantasies of man-fucking, and she indulged herself on multiple evenings in front of her computer, her legs splayed apart comfortably in the padded leather chair at her desk at home as she stroked her clit while her favorite dildo with the twisting, squirming motion was inside her pussy and feeling divinely wonderful as it nudged against her G-spot.\n\nShe found a story site that had many such tales, and she quickly bookmarked the URL. \"StraponDiva\" and \"FtoMSexiness\" became favorite authors. Stories of lustful women who savored the erotic delight of fucking their men in the ass with dildos strapped to their crotches were artfully told by these authors because their narratives teased the reader, built up the anticipation, and drew out the sexy situation as skillfully with their words as Jenelle did with her fingers when she had Duncan over her lap, petting and teasing his proffered and eager asshole.\n\nIt took a few nights of careful perusing before she made her decision. Reader reviews and a couple of incredibly arousing stories by StraponDiva about her heroine's skillful use of the \"feeldoe\" dildo settled the issue. Jenelle ordered the feeldoe version that would be best suited to Duncan's initiation\u2014a slender, not too intimidating size\u2014and then went shopping for a pair of snug, no-nonsense and well made panties that could be altered in the fashion advised by more than one feeldoe reviewer as the best way to secure it and keep it from slipping out of an intensely aroused woman's gushing vagina as she fucked her man.\n\nThe feature of the feeldoe that made Jenelle know instantly it was the best choice for her was that it was designed specifically to provide the woman the maximum amount of pleasure. The bulb on one end of the dildo slipped inside the wearer's vagina while the curve designed into the inventive toy meant that the shaft protruded at the perfect angle from the woman's crotch to fuck her man in the ass.\n\nThe pictures of women she found on one vendor's site, nude with hard nipples on firm breasts as they stood, hands on hips with the shafts of the toys upthrust from their crotches as they smiled sexily into the camera, were incredibly arousing. She imagined herself in their place, the feel of the bulb inside her pussy full and satisfying as she contemplated doing the handsome photographer in his ass when he was done taking pictures.\n\n(The handsome photographer taking the pictures for the catalog, not surprisingly, would look a lot like Duncan. As he coached her into multiple poses, she would tease him: \"Maybe if I move a little bit this way it will make the picture better. They told me when they hired me that presenting the dildo realistically always increases sales. When I asked what they meant by 'realistic,' they said poses that would make women imagine themselves wearing the dildo and men imagine themselves in front of me, naked, eager for me to fuck them with it.\" Then she would trace a fingertip along the length of the shaft and ask innocently, \"Is this what they meant?\" as she smiled evilly into Duncan-photographer's camera.\n\n(As her fantasy continued, Jenelle's fingers strummed her throbbing clit and her eyes closed to focus more intently on the screen before her mind's eye. Duncan-photographer would click a few more pictures, finally put down his camera, then look at her and say, his voice husky with desire, \"You know you can't do that and not make me crazy with lust.\" He would approach her. She would unzip his jeans, draw out his cock, grip it in her hand. \"You've used this on women, stroking it into their wet pussies, making them come from your hard cock, haven't you?\" She would squeeze his now-erect dick. \"They've sucked your cock, haven't they?\" His hands would be on her breasts, tugging at her nipples. \"They've been on their knees in front of you, sucking this beautiful hard cock, isn't that right?\" He would moan, his stiff dick pulsing in excitement as her fist wrapped around it. \"What do you think it would feel like to be the one opening up and taking a cock inside, a cock like mine?\" she would ask. \"You want me to fuck you with my cock, don't you?\"\n\n(Jenelle came hard at that point in her fantasy.)\n\nShit! How long would it take for the feeldoe to arrive? Had she remembered to pay extra for expedited shipping?\n\nStill breathless from her intense orgasm and slumped against the back of the chair as her gaze flitted over the sexy model's body and down to the blue, proud shaft upthrust from the model's crotch, Jenelle reached for the phone. A puddle of her juices had pooled between her legs, slick on the leather of the chair's seat. A warm glow spreading through her entire body, she punched in Duncan's number.\n\n\"Would you mind a change in plans, baby?\" she asked. \"We can see the movie some other night.\"\n\n\"Umm, sure, Jenelle, as long as we still get together on Friday.\"\n\n\"I am very sure you'll have been naughty by Friday night, and I believe it's my duty not to let your silly bad-boy pranks become too frequent.\"\n\nIt had been a couple of weeks since their last role play.\n\n\"I can always count on you to know when I need a bit of correctional attention,\" he said, voice dipping into that masculine chest-space that Jenelle so adored hearing him tap into. \n\nDuncan enjoyed teasing her when he took on his role: \"You're very good about keeping my naughtiness in check,\" he said. \"It's uncanny how you know when I've been bad, when I need your hand spanking my naked butt to teach me a lesson.\"\n\nIn spite of her intense climax of only a few minutes earlier, Jenelle's pussy tingled and moistened at Duncan's tease over the phone. \n\n\"And then you're always so kind to spread some lotion on me, to soothe my punishment.\"\n\nHe was being very naughty right now!\n\n\"Maybe it's a good thing I'm bad every now and then? I mean, sometimes I think you like the feel and the sight of it when you push your finger inside me to massage and relax me after my spanking.\"\n\nSuch a naughty boy! He would definitely need a spanking, saying such things!\n\nJenelle's nipples and clit both hardened in reaction to Duncan's phone sex dirty talk.\n\nTwo nights later, his lovely ass pink from her playful spanking, she reached for the lotion as part of their exciting role play. \n\nShe made sure he didn't see her fish the slim butt plug out from between the sofa cushions where she had hidden it. \n\nIt was not long before Jenelle was working two fingers inside him, teasing him unmercifully with her motions inside his snug anus and with her words.\n\n\"God, you're so sexy like this, babe, naked, just spanked, and my fingers inside your asshole, massaging you. I love it that you give it up to me like this. It's so damned hot to play with your naked ass. I love massaging your nice, pink butt cheeks after my playful spanks.\" Jenelle paused, slowly withdrawing her fingers almost completely, then said, \"And finger fucking you just like this---\" and she slid her fingers slowly but insistently inside him \"---makes me crazy hot.\"\n\nHe moaned, his ass arching up to drive her fingers even deeper inside.\n\n\"It feels so good. No other woman has ever done this to me,\" he gasped, squirming beneath her. \"How many guys miss out on this, do you think?\" he managed, dragging consciousness momentarily away from the feeling of her fingers dipping inside and stroking his prostate. \"What would I have been missing if I hadn't said yes the first time you squirted lotion on my ass?\"\n\n\"And I absolutely adore doing it to you,\" she said, smiling that things were progressing exactly as she had hoped. She withdrew slowly.\n\nTaking what he thought was his cue to get up so their playtime would continue as it had on previous occasions, Duncan started to rise. She pushed on the small of his back, indicating that he was to stay in place.\n\n\"If you like my fingers, I'll bet you will like this,\" Jenelle said, picking up the butt plug and holding it for him to see as he craned his neck around to look back at her, a puzzled expression on his face.\n\nJenelle watched his expression intently, desperate to read into it some indication that what she was suggesting turned him on.\n\nI want to push this inside your gorgeous bottomhole so bad, she thought. Let me do it. You're becoming something special, Duncan. I want to make you feel really, really good. ASK me to do it!\n\nHe swallowed hard. Turning his head back to the cushion, his chest sagged into it.\n\nAnd then, the most amazing, sexy, erotic, arousing thing he had ever done came next.\n\nHe raised his ass, flexed open, and invited her to plug him.\n\n\"I got a small one, baby,\" she said, spreading lotion on the pink toy. \"It's about the same diameter as two fingers, and I know you love that.\"\n\nHe moaned,. The sound was muffled into the cushion.\n\n\"But it has a nice little flare at the base that will let your pretty little rosebud close around it and keep it in place.\"\n\nShe placed the tip of the plug at his opening.\n\n\"Then I'll know you're my plugged little butt boy, and that is so hot, babe. It'll drive me crazy.\"\n\nJenelle began an agonizingly slow push into his asshole, her gaze intent on the erotic sight of the plug sliding into him. She paused.\n\n\"This is so-o-o-o sexy.\"\n\nMore moans from Duncan.\n\n\"Oh, damn! I can't take it!\" She plunged the toy completely into him, her thumb pressing against the base of the plug to seat it completely inside.\n\nDuncan threw his head up. \"Unngh! Oh, hell! Oh, shit! God, that feels good,\" he panted, squirming his ass on her lap.\n\n\"NOW get up and eat me,\" she commanded, so aroused by what she had just done that if she didn't come in the next five seconds she believed she would explode. \"Stroke your cock like you always do, babe, but knowing that you're plugged for me while you're doing it is going to take the top of my head off when I come on your face.\"\n\nHis face was, indeed, drenched with her juices when he pulled away and leaned up against her to kiss her lips. By then she had come down sufficiently that the spasms and jerks her orgasm produced finally yielded their control of her body back to her. \"When did you dream that up?\" he asked. \"And you know you're going to have to take care of me immediately. You've driven me insane and not let me come, and now this plug in my ass is doing things inside me every time I move that make me want to shoot my cum so bad I can't stand it.\"",
        "She reached down to his cock and circled a thumb and forefinger at the base, squeezing there, afraid he was going to ejaculate at any second.\n\nJenelle wanted to tap the base of the plug when his cock was buried inside her pussy as he lay on top of her. She wanted to feel the ripple effect that would have on his hard dick as he fucked her deep and hard. She wanted to give him more pleasure than he had ever experienced.\n\nKeeping her grip on his cock, she rose, tugging him to his feet beside her, and pulled him to the bedroom.\n\n***\n\nSo the plug was a huge success.\n\nShe was desperate to fuck him with the feeldoe.\n\nIt arrived the following Monday. Hopeful it was there, she had rushed home. The package had been held for her at the lofts' management office, the usual process for deliveries when residents were away. Its innocuous wrapping with only a P.O. Box as the return address gave away nothing, and Jenelle nonchalantly signed for it and smiled at the assistant behind the counter. \"Been waiting for this,\" she said. \"Thank you!\" \n\nSmiling broadly, Jenelle walked out of the little office to the elevator, her package under one arm, her briefcase under the other.\n\nWithin 15 minutes after she closed the door to her loft behind her, she was nude in her bathroom, the shipping box hastily torn open, the feeldoe's packaging cut apart, and the smooth contours of the toy weighing delightfully in her hand. She scooted to the edge of the chair in front of the long mirror at the make-up counter and looked down between her legs to cradle the dildo in her hand. Slowly, she inserted the blue ovoid into her pussy, mimicking what she had seen done in a demonstration video thoughtfully provided by a satisfied purchaser who blogged some instructions about using the feeldoe.\n\nIt felt wonderful!\n\nWatching in the mirror, entranced as she slid the bulb inside her, Jenelle knew no lubricant was needed. She was wet in anticipation. Grabbing the base of the shaft, she moved the smooth bulb into place, seating it, nudging it into the perfect position. Satisfied that it felt right, she looked at herself, the blue shaft jutting from between her legs as she perched on the edge of her seat.\n\nThen, fascinated at the image reflected at her, she rose, the phallus bobbing slightly. Standing to gaze at her lithe, naked form, seeing it for the first time sporting a handsome, blue, erect phallus that jutted proud and stiff from her crotch, Jenelle was incredibly turned on. Even more than seeing the women modeling the feeldoe. Even more than seeing women in videos who used their strapon dildos to fuck the men that they rode to orgasm.\n\nThe sight was so intensely erotic. It felt divine, too. She was turned on incredibly, her taut nipples distended, areolae dimpled tight, and her breathing ragged as she watched one hand drift to the shaft between her legs and close around it.\n\nShe tugged just a bit, felt the bulb of the feeldoe press against her pussy wall.\n\nNever\u2014NEVER\u2014had Jenelle been this turned on.\n\nWhy?\n\nWho cared?\n\nThen she thought, Am I crazy with lust right now because this is going to give both of us the most intimate pleasure two lovers can share? Because he trusts me completely to take him? Because he's going to give me a present no one else will ever have?\n\nHis virginity.\n\nJenelle spent the rest of the night playing with her fake cock. She used it to masturbate by gripping the shaft in her fist and levering the toy in a way that pressed the bulb against her G-spot while she rubbed her erect clit with the fingers of her other hand. She preened in front of the mirror, whispering nasty things to turn herself on: \"Yeah, Duncan. This is for you, for your hungry little boy butt, and I'm gonna fuck you in your asshole slow and deep and so good that you're gonna come until you can't come any more.\" She swung her hips from side to side, accustoming herself to the feel and weight of the toy as it moved in response. \n\nShe placed her hands on the edge of the counter, watching in the mirror as she stiff-armed the surface and backed up enough so she could pump her hips back and forth, watching the blue shaft's motion, imaging what it would feel like when it met the resistance of Duncan's snug anal tunnel.\n\nShe was desperate to fuck his gorgeous ass!\n\n***\n\nJenelle planned Duncan's taking carefully. Though it took all her willpower, she built slowly to the night of his deflowering. Two weeks after her introduction of the plug into their sexy role play, they were at a restaurant following a so-so movie that was supposed to be far better than it turned out to be. \n\nShe had worn one of her favorite skirts, one that flattered her long legs by reaching to just above her knees. It wasn't too tight, but it hugged her hips and her ass just right. The linen-like material moved easily but stayed in place. It covered her plain cotton panties nicely.\n\nAfter the meal but before dessert, Jenelle snuggled close to Duncan in the dimly lit booth. She reached into her purse beside her and drew out the butt plug that had been secreted there. \n\nHe couldn't see anything under the table, nor could anyone else. She reached back into the purse to retrieve the little bottle into which she'd squeezed some lube. Holding the two items together in one hand, she propped her other elbow on the table in order to trace one fingertip around the outer edge of his ear as she whispered, \"I want you to take these into the men's room, Duncan, and get comfortable.\" She pressed her hand to his under the table, transferring the plug and the lube as she looked into his eyes. Puzzlement there turned into a shock of recognition as she drew her hand away and rested it on his thigh.\n\n\"You have no idea how hot it will make me to see you walking back out here, the little bottle in your pocket and the plug where it's designed to be.\"\n\nShe moved her hand under the table to his crotch, careful to be unobtrusive about the action. \"Do it,\" she whispered, lightly running the tip of her tongue against his ear lobe in a manner she knew drove him wild. \"Thinking about the plug pressed deep into your asshole as you sit next to me here in the booth and then in the car on the way home will make me so wet, baby.\"\n\n\"Jenelle!\" he rasped, his tone of voice giving him away. \"You can't mean you want me to . . . to go into a stall in the men's room of this restaurant and . . . and-\"\n\n\"That's EXACTLY what I mean, Duncan,\" she replied, thrilled that he was reacting as he was. His protestations were for show. \n\nHe was as excited about doing it as she was.\n\n\"Your cock's gonna be hard when you walk back out here, so make sure it's lying up against your belly and trapped underneath the band of your briefs, baby. Maybe the people in here won't be able to tell your cock is erect if you do that.\"\n\nJenelle was worried that the crotch of her panties would not soak up all the juices she was producing as she toyed with him.\n\nThe waitress appeared to ask about dessert.\n\n\"Mmmm, yes, I would love some dessert,\" Jenelle said, looking away from her lover's eyes and moving her hand from beneath the table.\n\nWould the waitress think she had been fondling him? Would Duncan worry that the waitress would think that? God, she was wet!\n\n\"What do you have that's sweet and gooey?\" Jenelle asked innocently.\n\n\"Our chocolate volcano cake has a gooey, dark chocolate filling,\" the pretty waitress answered, smiling. \"It's delicious.\"\n\n\"Perfect!\" Jenelle responded. \"Bring us one and we'll share.\" She looked at Duncan. \"Sound good, babe?\"\n\nHe managed a nod and a silly smile. \"Sounds fine.\"\n\nAs the waitress turned and walked away, Duncan put a hand on the back of Jenelle's neck, massaging lightly, being publicly intimate with her. \"Dammit, woman,\" he said, smiling all the while, \"you didn't just ask me to do what I think you did . . . did you?\"\n\n\"Stop stalling,\" she replied, rolling on one thigh to press herself tightly against him, a firm breast with its hard nipple pushing into his arm through her comfortable bra and stretchy T-shirt, \"the thought of it makes your cock as hard as it makes my pussy wet.\" \n\nShe looked at him, expectant.\n\n\"Go. Get back here before our dessert arrives. I want to eat some warm, gooey chocolate while I sit here and tease you horribly as I tell you about why you're going to come so hard you won't believe it tonight when we get back to my loft.\"\n\nFortunately, the pockets in his khakis accommodated the slim plug without giving away the tell-tale shape. Same for the other pocket, into which he slid the little bottle of lube.\n\n\"You're the sexiest, most adventurous man in the universe,\" Jenelle purred as Duncan slid out of the booth.\n\nShe watched him walk away until he disappeared around the corner to the restrooms, then waited a few more seconds. Spotting the waitress, Jenelle slid out of the booth herself and gave a we'll-be-back motion to the server as she headed for the restrooms after Duncan. Once inside the women's restroom, she stepped quickly into a stall, shut the door behind her, and slid her panties down, stepping out of them to fold the moist material into a small enough shape to fit inside her hand so it would look to any casual observer that she carried only a tissue or a handkerchief or some other innocuous material.\n\nExiting the stall, she paused only long enough before the mirror to check her hair, brush a few errant strands back into place, and then walked back into the restaurant and wound her way through the tables to return to their booth.\n\nDuncan returned a couple of minutes later, moving slowly.\n\nShe smiled.\n\n\"Is it in?\" she asked in a whisper as he moved into position beside her.\n\n\"Just as you asked,\" he answered, surprising her by grabbing her head with both hands to bring her lips to his for brief, but very passionate, kiss. \"And you are the sexiest, naughtiest, most inventive woman. I am desperate to make love to you. Isn't that damned dessert here yet?\"\n\nJenelle placed her panties on the table in front of him.\n\n\"I couldn't ask you to do something so arousing unless I did, too,\" she said, batting her lashes at him in an exaggerated display meant to communicate, \"What? Little ol' me as a sexy vamp?\"\n\nDuncan looked confused until he reached for the pile of material and shook it open. Quickly realizing what he was holding, he snatched his hand under the table and looked around worriedly, anxious that someone had seen him holding a pair of panties momentarily above the table.\n\n\"They're really wet, baby. I'm much more comfortable with them off.\"\n\nJenelle reached under the table for Duncan's hand\u2014the hand that wasn't grasping her wet panties\u2014and moved it to her crotch, opening her thighs so her skirt would ride up and make her naked pussy available to his touch. \"See?\"\n\nThe waitress arrived with their chocolate volcano cake and set it before them, careful to keep a firm grip on the edge of the plate. As she put a plate and fork from her other hand in front of each of them, she smiled at Jenelle.\n\nIt was a knowing smile.\n\n\"Enjoy,\" the pretty server said, looking briefly at Duncan before walking away.\n\nAnd they did. Back at her loft, Duncan's spanking was extra tantalizing.\n\nJenelle aimed her playful smacks so that sometimes her palm would land on the end of the plug, and it would nudge against his prostate, creating an indescribably intense, almost mystical sensation that would send an erotic tingle up to a spot just behind his belly button. Other times\u2014most of the time\u2014she would deny him, her palm landing squarely on a cheek, creating a lovely tingle and pleasurable in its own right, but not something that created a . . .\n\nDuncan realized after the third nudge what it created: a fucking motion. \n\nIt was subtle, the amount of motion of the plug couldn't have been, what\u2014half an inch back and forth inside him when Jenelle's teasing smacks landed on the base of the plug?\n\nHe came between her thighs, a guttural moan communicating his intense pleasure.\n\nDisappointed that this meant it would be a few minutes before he recovered enough to fuck her silly with his hard cock, Jenelle reveled in the knowledge that her carefully planned seduction this night produced evidence of the most tangible kind that Duncan would love it when she fucked him in the ass with her dildo.\n\n***\n\nThen, god only knew how she made it that long, it was a month later. Two more sessions with the plug in the intervening time had, Jenelle hoped, ensured that her sexy lover was well trained to the feel of a smooth toy being pistoned in and out of his delectable bottom. The most recent session had Duncan on his back, his legs drawn up at the edge of the bed as Jenelle pumped the plug into him and stroked his hard cock at the same time.\n\nHe came with intense spurts, groaning in ecstasy and gripping the sheets tightly as she aimed his cum up on his chest, watching it pool in little ponds between his strong pecs or run down his ribs in thick rivulets until the bedding soaked it up beneath him.\n\nThe intense pleasure she derived from seeing him in such sexual ecstasy strengthened the bond she and Duncan were developing as lovers.\n\nWhy am I this lucky? she wondered. Why am I one of the pitifully small percentage of women who are with a man secure enough as a lover and with his masculinity that he would allow his woman to give him pleasure by opening up to her completely?\n\nJenelle's carefully guarded comments during girls' nights out with her friends or coffee klatching on lazy Saturday mornings brought responses that told her that Cathy, Debbie, Suzanne, and Torie did not fuck their husbands in the ass. Did not caress their husbands' assholes. Did not spank their husbands' nude butts and then massage lotion into their pink backsides.\n\nAnd never would.\n\nBut Jenelle was going to fuck Duncan with her dildo, was going to reach a crashing orgasm from doing it, and was . . . well, dammit, it was time to admit this\u2014was going to love him so much as a result that she wanted to be with him, not just as a sex mate (though, YES! YES! ALWAYS as that), but for . . .\n\nLove. Plain, simple, hold-me-in-your-arms Love. Big-L Love.\n\nFucking Duncan in the ass is the revelation moment that I LOVE him?\n\nUh-huh. A little voice answered in Jenelle's head.\n\nShe loved him.\n\nSo it was even that much MORE important to make his deflowering perfect. She was going to take her man's virginity in the most arousing, loving way possible. It was going to be a moment that would not only give both of them intense orgasms, it was also going to be a moment when Jenelle knew she would say, \"I love you.\" \n\n***\n\nThe time between when she bought her delightful dildo and when she would take her man's anal virginity provided Jenelle plenty of time to accustom herself to the feeldoe. She became quite practiced at moving with it, at feeling the shaft as an extension of her sex, connected as it was to the part that she gripped with her pussy and which nudged and pressed against her G-spot. She developed the ability to walk comfortably without having the feeldoe slip from its place in her pussy. \n\nJenelle walked around her loft nude on Sunday mornings, the feeldoe jutting from her crotch, feeling the sway and motion of the shaft as it bobbed in front of her. She spent much time passing in front of mirrors as she did so, admiring the sight, always aroused at the sexiness of the phallus upthrust and broadcasting its ability to go inside her lover's ass.\n\nShe masturbated with the feeldoe frequently, imagining Duncan on the other end, lustful moans rumbling from his chest as she fucked him in ways that brought him to intense orgasm, powerful spurts of his delicious cum jetting from the end of his cock.\n\nThen, the Saturday night had finally arrived.\n\nJenelle planned an hour-long tease of her man. He would be naked, allowed to stroke his cock during her show but not allowed to come. (Naughty boys must, after all, be reminded now and then that their stiff, lovely cocks provide their girls visual delights which need to be displayed for extended periods of time on occasion.)\n\nAs she progressed with her tease, she would watch him masturbate for her. She would grab his naked butt and play with it, spreading it open to gaze at his pink asshole. She would stroke him there, torturing him with her gentle caresses but not entering. \n\nJenelle wanted Duncan so hot to be fucked, so hot to open to her thrusts, that he could not stand it.\n\nThis would follow the set-up, the conversation, the gut-clenchingly erotic description of what she was going to do to him.\n\n\"You have no idea how much I like it that we play the way we do, baby,\" Jenelle said, having just poured them an excellent wine that they both enjoyed as they sat on the sofa in her loft. \"I mean, when you make love to me, you are incredible. I love it, just love it.\" She smiled at him over the lip of her glass.\n\n\"And you don't think I feel the same way?\" he teased.\n\n\"I hope you do,\" Jenelle answered, lowering her glass to the sofa table in front of them. \"I love having your stiff cock inside me. I love the feeling of you sliding inside me. I love how you stroke your cock in and out of my pussy, hitting just the right spot inside of me, making me crazy to come hard for you.\"\n\nDuncan swallowed quickly, almost sputtering through the sip of wine he had just taken. \"Damn, Jenelle! How do you know exactly what to say with your dirty talk? You get me so excited with your explicit descriptions, but, shit! Just hearing you say things like that is going to make me have to do them,\" he said, reaching for her breast, cupping it and moving his mouth close to hers for a kiss.\n\nShe pulled back slightly, grinning. \"And you have no idea how much I love it when I see you naked in front of me, your stiff, beautiful dick pointing to the ceiling, eager to go inside me.\" She moved a hand to his crotch, knowing that he was getting an erection. \"And watching you walk naked in front of me when I follow you to the bedroom, oh, how I love that sight! Your tight little ass just begging me to grip it. Damn, that always makes me so hot.\"\n\nHis hard-on was becoming more pronounced under Jenelle's continued attention. She began unzipping him.\n\n\"That one time when we were playing and your spanking was only after you walked around a little bit for me so I could watch your lovely cock bob and move in front of you\u2014do you remember that?\" Jenelle didn't wait for an answer. She knew he remembered it. \"Shit, baby, that was the sexiest thing I've ever seen! I was desperate for you to fuck me that night. I had to have that stiff, hard dick inside me after seeing you like that.\"\n\nShe had his cock out of his pants. Duncan was squirming around, maneuvering into a position that would let Jenelle unbuckle his belt.\n\n\"I want to see it again, baby. I masturbate thinking about it. I want you naked in front of me, your cock hard and pulsing. Right now.\"\n\nDuncan stood up, hastily shed every article of clothing, and stood before her, just as she asked: naked, stiff, aroused, sexy, gorgeous, and making her incredibly wet.\n\n\"Oooh, yeah, my handsome man. Turn around. Let me see that amazing ass.\"\n\nHe did. She placed her hands on his nude butt and massaged his firm glutes. Smacking one cheek, she said, \"Turn around and masturbate for me.\"\n\nBefore Jenelle settled back into the couch, she reached around him for her glass of wine, her lips capturing his hard cock for a moment before sliding off him as she picked up her wine glass. She took a brief sip, then set the glass on the end table next to the sofa. Getting comfortable, she said, \"Stroke your cock for me, Duncan.\"\n\n\"Like this?\"\n\nHe was smiling, looking into her eyes, his fist wrapped his cock.\n\nJenelle unhooked her jeans, unzipped, and skinned them off with her panties, reaching down to gather them up\u2014and to again slip his lovely cock momentarily into her mouth\u2014before tossing her jeans and panties aside. Once more leaning back against the cushion, she spread her legs, dropped her hand to her pussy, and said, \"Masturbate for me while I watch you. I'm going to play with my clit while you do it.\"",
        "Duncan began sliding his fist up his shaft, then slowly back down, enjoying the sensation but obviously interested in putting on a show that he hoped would make Jenelle incredibly hot and eager to be fucked.\n\nWith a hungry gaze, she enjoyed his show as she drew circles around her clit with a moistened finger. He was so sexy.\n\nHis eyes were drawn to her crotch, watching her play with herself. Jenelle noticed a small droplet of pre-cum at the tip of his dick.\n\nShe slipped a finger inside her wet pussy.\n\n\"Oh, god, Jenelle!\" he said, his motions momentarily pausing as he gazed intently at what she was doing. \"You're going to make me come just watching you.\"\n\nAnd that was her cue.\n\nShe rose, embraced him, feeling his hard cock push into her belly and slip up between them as she pressed close to him for a long, deep kiss.\n\n\"See how much fun it is, baby, to give me a sexy show with your hard cock? See how much fun it is to watch me masturbate while you stroke your erection, desperate to slide your stiff hard-on inside me?\"\n\nHe had her in a tight embrace. She felt his cock throb against her belly.\n\n\"I'll put on this show anytime, Jenelle. You know I love making you hot and wet.\"\n\nThose words thrilled her.\n\nThey also could not have been more perfectly scripted as the introduction to what was coming.\n\n\"Since you know how sexy it is for me to watch you playing with your nice, hard cock in front of me, masturbating while I play with myself,\" she said, disengaging from his embrace, \"I'm going to do the same thing for you.\"\n\n\"That sounds like more fun than I can stand,\" Duncan said, his hand dropping back to his dick as Jenelle moved away and squeezed past him between the sofa and the coffee table in front of it. \"But if you're going to get completely naked and stand in front of me while you masturbate as I'm sitting on the couch playing with myself, you know it won't be long before I'm going to have to pick you up and carry you into that bedroom.\"\n\nHe had turned around to watch Jenelle walk into her bedroom as she unbuttoned her blouse in the process, her sexy butt swaying as she looked over her shoulder at him. \"Oh, I have a special surprise for you, Duncan, that's going to mean you're going to beg me to fuck you, but dirty little boys who jerk off in front of nice ladies don't get what they want.\" She paused, turned around, and shrugged off her blouse. \"At least, not right away. Not until the lady says it's time.\"\n\nA smile began to form on Duncan's lips.\n\n\"The show I'm going to give you means you should move that coffee table out of the way and get comfortable on the couch. I'll enjoy seeing you playing with your cock while you watch me do the same thing you did a minute ago.\" She disappeared into the bedroom, the blouse falling to the side of the doorway as Jenelle reached behind her to unhook her bra.\n\nDuncan's smile grew, and he quickly bent to pick up the coffee table, carefully removing his wine glass first to set on the end table, then moving the coffee table to the corner of the room. Quickly settling back onto the couch, his still-hard cock bouncing against his abdomen as he sat down, Duncan spread his legs and got comfortable. He began to lazily stroke his erection, keeping himself at a point that was not imminent ejaculation\u2014just enjoyable stimulation.\n\n\"So you liked seeing me stroke for you, huh, Jenelle?\" he called out. \"You must like naughty boys being bad in front of you, playing with their hard cocks for you.\"\n\nJenelle's explicit, very nasty, and VERY arousing talk earlier in the evening warranted some of the same from him, Duncan figured.\n\n\"So you think I'm going to like it just as much to sit here and masturbate in front of you while I watch you stroke your hard little clit?\"\n\nJenelle called out from the bathroom inside her bedroom. \"Something like that, I suppose.\"\n\nIf only you knew, Duncan, Jenelle thought.\n\n\"Who's being bad, Jenelle?\" Duncan asked. \"I think you're the naughty one. You're the one who-\"\n\nDuncan's voice caught in his throat as Jenelle stepped into view from her bedroom door. The blue shaft was stiff and pointing upward as she walked sexily toward him. She carried the improvised panties-harness in one hand at her side.\n\nHis eyes wide in shock, his mouth partially open, Duncan stopped stroking his cock. Jenelle strode forward, covering the few steps quickly between the bedroom door and the couch where Duncan was seated and splayed open in front of her. The bulb of the dildo was more arousing inside her than it had ever been when she walked with it in place. The shaft bouncing slightly in front of her turned her on more than it ever had in her previous nude meanderings through her loft as she became practiced in moving with it in place.\n\nMore arousing because now she was showing it off in front of him. More arousing because the shock that had highjacked his brain was slowly giving way to a realization that Jenelle saw playing out on Duncan's face.\n\nShe was more excited than she had ever been with this delightful toy because for the first time she was playing with it in front of Duncan.\n\nBefore she would fuck him with it.\n\n\"If you recall exactly what I said, baby,\" Jenelle said softly as she stood close in front of him, placing herself between his legs, hands on her hips, \"I asked you if you realized how exciting it was for me to masturbate while I watched you stroke your hard cock, knowing that I was desperate for you to put your hard-on inside of me.\"\n\nThe full weight of recognition flashed across Duncan's face. Jenelle leaned forward, bracing herself against the back of the sofa, a hand on either side of his shoulders. \"I said I loved to masturbate while you put on a show for me, stroking your cock, and getting horny to fuck me with your stiff dick.\"\n\nPushing herself back up, Jenelle walked to the end table (damn! it felt sexy!) and opened the drawer, pulling out a bottle of lube. She walked back to stand in front of Duncan and dangled the bottle in front of him. \"You may want a little of this for your cock while you masturbate during my show.\" She handed him the bottle. \"Then you will probably want a whole lot of it.\"\n\nJenelle let the implication hang in the air.\n\nIt was the sexiest, most erotic moment of her entire life. Her nipples were achingly stiff, little bolts of electricity shooting between those hard nubs and the hard nub of her clit. She reached up and tugged on one nipple, a small moan of satisfaction escaping from between her lips.\n\n\"Now watch me stroke my stiff cock just like you did for me.\"\n\nShe dropped one hand to the shaft of the feeldoe and wrapped her fist around the base, imitating Duncan's motions of a few minutes earlier.\n\nHe was holding his breath.\n\nJenelle began slowly drawing her fist up the shaft, feeling the satisfying motion of the bulb inside her pussy. \"Ooh, yeah, baby, that really feels good. Is this how good it feels when you jerk off?\"\n\nDuncan had no answer. He was still stunned.\n\n\"I like this, you watching me stroke MY hard cock, Me putting on a show for YOU.\" She threw her head back, blonde hair dropping behind her as she thrust out her chest and tugged upward on the shaft of the feeldoe to make the bulb inside her pussy move deliciously.\n\nShe waggled her cock, the feeling indescribable as she shamelessly pleasured herself with the fake cock between her legs.\n\nDuncan was mesmerized. It was the most erotic sight he had ever witnessed. His hand began moving slowly on his erect dick for a moment, then he paused just long enough to pop the top on the bottle of lube and pour a small amount into his fist. He thumbed the bottle top closed, dropped the bottle to the sofa cushion next to him, and closed his hand around his cock. The lube felt good as he began to stroke while he continued watching in fascination as Jenelle's show continued.\n\n\"I love my erection, Duncan,\" she said, smiling sexily at him as she moved her hips side to side to make the shaft of the feeldoe wag in front of him. \"I love looking at it, touching it, watching myself in the mirror as I use it to masturbate.\"\n\n\"Shit, Jenelle,\" Duncan said in that sexy voice which rumbled up from his chest. \"You've masturbated with that dildo?\"\n\n\"It feels so good, baby,\" she answered. Then, in a quick motion that surprised him, she pulled the end that was inside her pussy out from between her vaginal lips. It slurped out, a satisfying tingle running up Jenelle's spine.\n\nDuncan was squirming in sexual excitement. \"Damn!\"\n\n\"Yeah, Duncan, this bulb inside my pussy feels really, really good. I grip the shaft and pull on it to make the bulb nudge up against my G-spot. I come hard when I fist the shaft of this dildo and the part inside me keeps hitting that perfect spot.\" She leaned closer to him, bending over slightly as she stood in front of him. \"Stroking my cock, baby, watching how sexy it looks in the mirror, and feeling incredible inside my pussy all at the same time,\" Jenelle said in a whisper.\n\nThen she slid the bulb of the feeldoe across her lips. \"I taste good.\" She held it in front of his face. \"Open.\"\n\nHe moaned. She pressed the bulb against his lips. \"Open for me.\"\n\nDuncan moaned again. Then he parted his lips. \n\n\"That's it, baby. It's a nice lollipop for you. Suck on it.\"\n\nJenelle could not stand how hot it looked to see him sucking the bulb inside his mouth and then hollowing his cheeks as he savored the taste of her on the blue ovoid. \"Damn, Duncan. That's so hot.\"\n\nA small smile formed at the corners of his mouth as he continued sucking.\n\nShe withdrew the bulb from his mouth and leaned in to kiss him.\n\n\"Thanks for getting it nice and wet,\" Jenelle said, breaking the kiss. Straightening, she said, \"Back into place for my favorite toy,\" and she slipped the feeldoe again inside her pussy. \"Ahh, that's it. Right where it belongs.\"\n\nShe dropped to her knees in front of him, reaching behind her with one hand to lean back, bracing herself, as she resumed her masturbation motions on the blue shaft. Her hard nipples pointed to the ceiling, Jenelle spent several seconds pleasuring herself, knowing this position really emphasized the stiff shaft jutting up from her crotch\u2014she had practiced many positions in front of the mirror, and this one was one of the sexiest. It also made the point about a nice, stiff cock being poised and ready to plunge inside her partner.\n\nJenelle pushed herself vertical, still on her knees in front of Duncan. \"Let's stroke our cocks together, baby,\" she whispered, her eyes wide with desire as she watched him slide his fist up and down the beautiful, stiff, glorious evidence of his arousal. \"Give me some lube.\" She released the shaft of the dildo and held out her palm. The other hand rose to her breasts. Jenelle pinched a nipple between thumb and forefinger, tugging forward, feeling the delicious sensation, enjoying the delicious ache.\n\nShe watched the droplet of pre-cum ooze out of the slit at the top of his cock.\n\nHis voice cracked. \"Jenelle. You're driving me crazy.\"\n\nShe smiled at him. \"Yeah, this is making me so hot that I know I'm gonna come like crazy.\" She pinched again on her nipple. \"Your cock is beautiful, baby. I love watching you stroke it for me.\"\n\nHe fumbled with the top of the bottle, finally working this thumb successfully under the lip to flick it open. He squeezed some of the shiny liquid into her palm.\n\n\"Give me the same amount you use when you jack off,\" Jenelle teased. \"I've only had my cock for a little while. I don't have much practice masturbating it.\"\n\nDuncan grinned at her. \"That should do it,\" he said, closing the top, dropping the bottle to the floor in front of the sofa.\n\nJenelle closed her fingers into a fist, coating them and her palms. \"Watch me.\"\n\nShe closed her fist around her faux cock and began stroking it. \"I watch myself in the mirror and pretend it's your hand, Duncan. That makes me really wet. It's so erotic.\"\n\nShe rose, her hand wrapped tightly around the base of the shaft, the slight molding of the shaft's insinuated head blatantly sticking out of her closed fist. Jenelle turned around in front of him, inching backward slightly. \"Stand up.\" He rose, and she reached behind, stretching her arm to grab one of his asscheeks, pulling him forward against her, his stiff cock jabbing into her bottom before quickly sliding upward, the lubricant easing his shaft up to lie between them as he pressed himself tight against her. Quickly reading her desire as guided by her hand on his ass to seal them together, Duncan slipped his arms around her stomach and pulled her into him, rocking his hips to guide his cock up and down slightly, nestling it at the top of the furrow between the globes of her ass.\n\nJenelle leaned her head back, eyes closed, smiling. \"Feels wonderful. So sexy.\" She wiggled her hips, the feeldoe's bulb in her pussy delightful inside her as she gripped the base of the shaft.\n\n\"Now, Duncan, show me how to masturbate my cock.\"\n\nShe released the shaft of the dildo, placed her hand over his, and guided it down to her fake cock. She closed his fist around it. \"You can use your other hand to play with my tits, baby. Tug on my nipples the way you know I like.\"\n\nJenelle felt the pulse of his steel-hard dick against her back. He was powerfully aroused, pre-cum mixing with the lube, his trapped cock squirming between them.\n\n\"Stroke my cock,\" she whispered, reaching her hands up, resting them on the nape of his neck. The motion thrust her breasts up and out, an obvious invitation for him to toy with them with the hand that wasn't occupied at her crotch.\n\nDuncan peered over her shoulder and her heaving breasts in fascination. He could see enough to watch his hand glide up and down the blue shaft of her fake cock.\n\n\"That's good baby,\" she breathed. \"It feels great inside me when you do that.\"\n\nHe ground more insistently against her. Jenelle knew he was close to ejaculating.\n\n\"This is making me crazy to fuck you,\" Duncan said, one hand stroking the shaft of the feeldoe, the other cupping her breast and toying with her nipple. \n\n\"Ummmm, baby, that sounds so-o-o-o good,\" she cooed. \"I'm so wet for you.\"\n\nShe closed her fist around his as he continued to masturbate her fake dick, and she stopped his motion. \"But before you fuck me, I'm gonna fuck you.\"\n\nHis breathing stopped. In an agonizingly intense fracture of time, it seemed to Jenelle that hours passed before Duncan took in a breath. \"Oh, shit,\" he whispered. \"Really?\"\n\n\"Tell me you want it, baby,\" she answered. \"Tell me how much you want my pretty cock.\"\n\n\"Oh, shit,\" he reiterated.\n\n\"I love sliding the butt plug up your beautiful ass,\" Jenelle said, turning around to face Duncan. \"I've been opening you up, my love, getting you ready for me to take your virginity with my cock, to go inside you deep, to stroke and fuck you so good, baby.\" The explicitness of her description was not just the continuation of her dirty talk from earlier. Saying the words thrilled her.\n\nShe was going to fuck him. She was going to feel what it's like to penetrate her lover, to push inside him, to grind her hips against his naked ass and stroke her beautiful blue cock into his opening the way he had fucked her so many times.\n\nWould it feel as good to him as it did to her when he fucked her?\n\nWould it feel as good to her as it did to him when he pushed inside her wet pussy?\n\nJenelle would find out in only a few moments.\n\nHer hand had trailed down between them to grasp his cock. She began stroking, but slowly. \"I want you to come when I'm fucking you. I want you to feel what it's like to be filled up when you open up wide for me, baby.\"\n\nStopping her motion on his cock, Jenelle looked into Duncan's eyes, locking his gaze with hers. \"I want to come hard when I'm fucking your ass.\"\n\nHer expression was pure lust. It almost frightened him. His hard cock gave him away, though. He grabbed her face and kissed her hungrily. \"You're driving me insane,\" he whispered, drawing away briefly from the passionate kiss before sealing his lips again on hers.\n\n\"Now, baby,\" she said urgently, breaking the kiss. \"I can't wait any longer. I'm so hot to fuck you. REALLY fuck you.\"\n\nJenelle looked at him, long seconds ticking by.\n\n\"So ask me,\" she said.\n\nThe range of emotions that raced across Duncan's face was fascinating to see. Then, the moment she had been waiting weeks for finally arrived. He pulled her tight against him, leaned his mouth close to her ear, and said, \"Jenelle, I want you to fuck me. I want you to push your sexy strapon dildo inside my ass and fuck me until you come.\"\n\nJenelle gripped his cock and tugged him along behind her as she strode quickly to the end of the sofa. \"Bend over.\" She pushed him forward over the thickly padded arm, and he fell into place in front of her. In a flash she was on her knees, her hands on his naked butt. She spread him open wide and speared his opening with her tongue.\n\nA jolt of electricity shot up his spine. \"Damn, Jenelle! Shit! Oh, shit!\" He squirmed under her assault. \n\n\"Open it, baby. Open it! I want to get my tongue deep inside you.\" She slapped his ass.\n\nIt felt good to him. The smack was somehow exactly the right thing, the right time, a playful swat but so satisfying.\n\nDuncan buried his face in the cushion and moaned. Then he relaxed and opened.\n\n\"That's it,\" Jenelle purred. \"I want you nice and relaxed for my stiff cock when I fuck you.\" She returned to his crinkled opening with gusto, licking up and down the length of his ass crack before again pointing her tongue to invade him.\n\nAfter a few seconds more of her oral attention to his crinkled opening, she leaned back on her haunches, the motion causing a satisfying nudge against her G-spot as the bulb of the feeldoe shifted inside her. Holding him wide open, she said, \"Are you ready to give me your virginity, Duncan? Are you ready to give me what you'll give no one again in your entire life?\"\n\nJenelle was crazy with lust, but she was crazy with love, too. Fucking him like this was just insanely hot, but knowing that he was taking her inside willingly, opening up so she could pleasure him in ways that no one had ever done\u2014it was all so . . . amazing!\n\nShe leaned forward to blow gently across his opening. She noticed with satisfaction the slight twitch there.\n\n\"Are you ready?\"\n\n\"God, Jenelle, if you don't fuck me right now, I'm going to go crazy!\"\n\nShe rose quickly, retrieved the altered panties into which she'd cut a hole in the crotch and then reinforced with stitching, and stepped into them, briefly struggling to line things up so the shaft finally slid through the opening. Tugging them snugly into place, the blue shaft thrust up and the bulb now secured in spite of the copious amounts of pussy juice that was escaping around it, Jenelle stepped behind Duncan and paused to excite herself even more just by looking at his naked, upthrust ass, his cock and balls hanging heavy beneath his crotch. She reached to her breasts, fondling them briefly, tugging a final time on her nipples to stretch them forward, feeling the satisfying sensations ripple back and forth between the hard nubs in her grasp and her soaked pussy.\n\n\"So sexy, baby, so very, very sexy,\" she gasped, thrilling to the sight before her and to the stimulation created by pinching and tugging on her hard nipples. \"I'm gonna remember this forever. God, you have me so hot! I can't even describe how sexy you look like that because I know what I'm going to do to you right now.\"\n\nShe stepped forward, planted her hands on his cheeks, and spread him wide apart. \"One more time, baby\u2014one more time. Open it up wide so I can slide my cock inside you.\"\n\nDuncan groaned. He opened immediately.\n\nThe sight was inconceivably erotic. He was inviting her to take him.\n\n\"Lots of lube, babe.\" Jenelle released her grip on his ass and scrambled for the bottle of lube as it lay on the floor a few feet away. Quickly returning to her position behind him, she popped open the top and held it poised over Duncan's upthrust butt. \"Spread your ass open for me,\" she directed, breathless with excitement. Duncan quickly did as she asked, and Jenelle immediately squirted the viscous liquid between his cheeks. Dropping the bottle, she said, \"Keep yourself open for me,\" and she dipped a finger into the liquid slowly rolling down his ass crack, pushing it forward to his hole and then sliding her finger quickly inside.",
        "He groaned. \"That feels so good.\" His words were muffled into the cushion.\n\nJenelle fucked him with her finger for several seconds before adding a second. As he adjusted, she became more aggressive. He was moaning and arching his ass upward, pressing into her fingers as she buried them deep inside him.\n\n\"Just like you did to me the first time we made love, baby,\" she purred, continuing to probe him deeply. \"You put your fingers into my pussy first before you shoved your beautiful cock inside me.\"\n\n\"I'm gonna come,\" he warned. \"Talk like that, and I'm gonna come!\"\n\n\"No!\" She withdrew her fingers immediately. His asshole was well lubed. He was holding himself open for her. \n\nHe was ready.\n\nJenelle scooted close to his ass and gripped the base of the feeldoe's shaft, pointing the tip at his opened hole. She made contact, the tip slipping only millimeters into the opening he had offered to her.\n\nWhether it was Duncan arching his butt up to take her inside, or whether it was Jenelle's lustful thrust that created the action, the shaft slid inside an inch. Then, in an action that she had imagined countless times as she had masturbated to the thought of his deflowering, she paused and said, \"I'm going to fuck you now, Duncan. Give me your cute little bottom. Open up for me and take me inside of you. I want to go deep. Take me deep, baby.\" With that, in one slow, sexy, gentle but insistent push, she entered him, sliding the shaft of her fake cock inch by inch into that part of him which had never before been opened and filled so completely, so lovingly.\n\nEntranced, Jenelle watched her blue cock disappear inside her lover's asshole. God, it was sexy! She trembled at the sight, her breasts shimmying with the motion. When she was sealed against his flanks, she backed out slowly. \n\nDuncan gasped. \"No. Don't take it out.\"\n\nShe pushed back in, this time faster.\n\nHe arched his butt up to meet her thrust.\n\n\"My god, Jenelle! What are you doing to me? It feels so good.\" He pushed himself up on his elbows to turn around and look at her. She smiled at him.\n\n\"I'm fucking you with my cock, Duncan. I love how it feels. I love how it looks. You're taking it so well, baby. Let me fuck you good.\" Jenelle pistoned in and out of his ass, the bulb in her vagina sliding across her G-spot with the action. Duncan buried his face in the cushion, groans coming in time with her thrusts into him.\n\nWhat a sound! What an erotic, incredibly sexy sound! She continued fucking him, reaching up to grab his shoulders and pushing in deep, bottoming out, her crotch sealed against his ass, and she began grinding, squirming against him.\n\nIt felt incredible!\n\nHe was panting. \n\n\"Take it, baby. Take my cock inside you. I'm your lover, fucking you, making you feel so good.\"\n\n\"Unngh,\" was his reply, followed quickly by, \"Oh, god\u2014you're touching me in places I didn't even know I could feel, Jenelle. It's fantastic.\"\n\n\"Shhh,\" she whispered into his ear. \"It's supposed to feel great, baby. I love fucking you.\"\n\nJenelle was getting close to a massive orgasm. Her actions were not only bumping the bulb end of the feeldoe repeatedly against her G-spot, they were also now forcing her hard and thrumming clit against the ridges in the crook of the divine toy she was wearing to fuck her lover. The intensity of the stimulation was bringing her dangerously close.\n\nHer breaths were coming in ragged excitement, rasping out of her heaving chest. She gripped Duncan's shoulders tightly, sensing the inevitable.\n\n\"I love you, baby,\" she managed, tears of happiness now escaping from the corner of her eyes. \"And I'm gonna come so hard. Spurt for me Duncan. Come with me!\" She tightened, and the orgasm hit her. \"Now! Come with me now!\"\n\nDropping her hands to encircle his chest, she grabbed him and squeezed, oblivious to anything except the explosive climax that was rocking her world. Her pussy was spasming around the bulb repeatedly, contracting, releasing, contracting again in waves of ecstasy.\n\nDuncan was grunting through his own orgasm, powerful jets of cum spurting from the end of his cock, landing on the side of the sofa, dribbling down to puddle on the rug as his asshole clenched and released the cock she had buried inside of him, ripples of pleasure swirling through his anal walls as his asshole hungrily gripped and clenched at the fullness that had invaded him.\n\nThey shuddered together through the final stages of their orgasms. With the last spasms, they lay spent. Exhausted. Utterly and blissfully emptied.\n\nPanting breaths soon quieted. She lay on his back, her breasts pressed tightly against him.\n\nHe stirred. \"Take it out, baby.\"\n\nShe moved a hand to the sofa cushion, planted it to the side of him, and pushed herself up, grimacing at the motion of the bulb inside her torturously sensitive pussy. She began backing the shaft out of his asshole.\n\n\"Slowly\u2014do it slow, Jenelle,\" he groaned. \n\nShe eased up on her motion, slowed to a careful, smooth, gingerly orchestrated extraction. Jenelle watched in satisfaction as her fake cock slid out of her lover's no-longer virginal bottomhole. Kneeling behind him, she planted tender kisses on his naked asscheeks.\n\n\"My baby,\" she soothed, her voice liquid and peaceful. \"My precious lover is now no longer a virgin. I've been inside you, Duncan. I've pushed deep into you and made you come by fucking you with my pretty blue cock.\" Jenelle was overcome with tenderness and love for her man.\n\nShe rose and pulled down the panties, sliding the opening over her fake cock, then used the panties to grip the shaft and pull the bulb out of her vagina. Laying the feeldoe to the side, she rose, stepped to the slumped and exhausted form of her man, and took his hand.\n\n\"Let's go to bed, baby,\" she said. \"I want your big, strong arms around me, holding me as I snuggle against you.\"\n\nHe looked at her dreamily, eyelids rising slowly as a smile formed on his face. His words made her tingle all over: \"I love that you were the one to take my virginity, Jenelle. Nobody else can have it now. You're my lady.\" "
    ],
    "authorname": "escriterra",
    "tags": [
        "asshole",
        "dildo",
        "feeldoe",
        "strapon",
        "masturbate",
        "g-spot",
        "finger fucking",
        "role play",
        "spanking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/modeling-her-new-toy-for-him"
}