{
    "title": "Look at Me",
    "pages": [
        "When yet another set of batteries died she decided that she'd had enough. It wasn't just her sex life that was dull and deficient, her entire married life was drab, dreary and monotonous, and she wanted out. She'd married when still young and inexperienced, wasted eleven years, and that was as far as she was prepared to go.\n\nSex with Larry was limited to a basic shag about once a week, and basic did mean basic. For him it was a case of fondle one breast, thirty seconds, fondle the other, thirty seconds, grope between her legs to find the entrance, twenty seconds, roll aboard, insert cock, thrust in and out accompanied by frenzied grunting, sixty seconds, ram cock in hard and shoot cum, fifteen seconds, lie panting, twenty seconds, quick kiss and roll over, five seconds. It almost took Jenny longer to wipe her pussy with tissue and rearrange her nightie than it did for Larry to fuck her. And as for an orgasm, well she had to rely on either her fingers or on Bugs, her wampant wabbit vibrator, to do that job.\n\nThere was a simple choice. She could either leave him or buy shares in Duracell, and leaving him looked to be the best option. She sighed, made her decision and set about the mechanics of starting over. Telling Larry of her decision had been strangely easy, but he had not reacted well, giving her until the end of the week to leave if she didn't want all her belongings burned. He meant it too.\n\nShe had a little money, but not enough to set up on properly on her own, and yet she urgently needed a base, somewhere to live until a divorce settlement could be arranged, with or without Larry's cooperation. She rang her sister, seeking advice and, if possible, ideas as to what to do next. Susan rang back within the hour.\n\n\"Right.\" Susan told Jenny imperiously. \"It's all arranged. You will go and stay with Kat and Adam. They're two very good friends of mine and they've plenty of room, and Larry won't find you there unless you want him to.\"\n\n\"But they don't know me, how can I expect to impose on strangers?\"\n\n\"They won't be strangers if you live with them, now will they?\" Susan had logic all of her own. \n\nKat and Adam, Katherine and Adam Machin to give them their full names, both turned out to be attractive, vivacious, happy go lucky thirty-somethings with infectious laughter. Kat was dark haired, tall and rangy, slim almost to the point of thin, and very attractive. Adam was big and outdoorsy, a wild mop of straw coloured hair over a tanned face and bulging biceps, but still equipped with the same sympathetic ears as his wife. \n\nWithin thirty minutes of meeting them Jenny was sitting at their kitchen table drinking coffee and telling then all her woes as if she'd known them for years, while they nodded their understanding and interposed perceptive but non-judgemental comments. They called a spade a spade and left digging implements to the glossy magazines. Jenny liked them instantly.\n\n\"Right, I've got things to do.\" Adam stood up and turned to Kat. \"Can you sort Jenny out with her room? It'll have to be the one next to us, I hope she won't mind.\" \"Why would I mind?\" Jenny asked, as the door closed behind Adam.\n\nKat giggled a little. \"Because the walls are a bit thin and I'm not known for my silence at certain moments.\" \n\n\"What moments?\" Then the light dawned. \"Oh, I see! No, I might be jealous but I won't mind.\"\n\nThey climbed the stairs carrying Jenny's suitcases between them, Kat showing Jenny to her bedroom where they dropped the suitcases on the floor with a certain amount of relief. \n\nJenny looked around, opening and closing her fingers to ease the effects of her luggage. The room was bright and welcoming, not too cluttered, but not Spartan either. It was just the sort of room she felt she could soon put her own stamp on and make her own. She was still contemplating what she wanted to do to it, when Kat spoke again.\n\n\"Look.\" She began, and then stopped gain. \"Look, you know I said I can be noisy at times?\"\n\nJenny nodded, not sure where this was going.\n\n\"Well, if you hear noises when Adam's out, it doesn't mean I've got a lover.\"\n\n\"I wouldn't think it did, and even if it did, it wouldn't be any of my business.\"\n\nShe still wasn't quite sure where Kat was leading.\n\nKat cleared her throat. \"I might as well tell you, 'cos you'll only hear me. I like to do it on my own, you know, play with myself. And when I do I often fantasize and then I yell out when I cum.\"\n\n\"That's all right, I'm not always silent either.\" Jenny tried to ease her new landlady's embarrassment. \"And I like to masturbate sometimes too.\" She smiled wryly. \"In fact, that has been my main source of fun for a while.\"\n\n\"Yes, but I can be very explicit.\" Kat was colouring slightly. \"I sometimes say out loud what I'm fantasising about doing, and sometimes I yell out the name of who I'm pretending to be with. I've always been like that and I can't stop it, no matter who might hear me.\"\n\n\"Ah.\" Jenny understood. \"That's why I might think you've got a lover.\" Don't worry, I'll realize what's happening now.\"\n\nShe thought about it briefly. \"Doesn't it bother you that people know what you're doing?\"\n\nKat shrugged. \"Not really, It used to, but then everybody does it, don't they?\"\n\n\"It wouldn't bother me, either.\" Jenny acknowledged, adding without thinking. \"I'd love to go further than that anyway.\"\n\nKat looked at her sharply. \"Further?\"\n\nJenny realised what she'd said and went red, staring at the carpet in confused embarrassment. She nodded mutely, vainly hoping Kat would let it go.\n\n\"How do you mean.\"\n\nJenny blushed deeper, trapped into admitting her number one fantasy.\n\n\"I'd love to have people watch me masturbate.\" She whispered the answer, still looking at the floor and still blushing.\n\nKat looked hard at her, not sure she'd heard what she thought she'd heard. \n\n\"I'm sorry, Jen, I didn't hear what you said.\"\n\n\"To have people watch me play with myself until I cum.\" This time Jenny looked directly at Kat and spoke defiantly loud.\n\n\"Really?\" Kat beamed at Jenny's words. \"Me too. I love doing that.\"\n\n\"Honestly? You've done it?\" Jenny reacted with surprise and relief, immediately feeling her pussy responding. \n\n\"Yes, twice, and it gave me a kick both times.\"\n\n\"Tell me about it.\" The words came out impulsively, to be immediately regretted. \"Oh, I'm sorry, I shouldn't have said that.\"\n\n\"No, I don't mind. What would you like me to tell you?\"\n\n\"Tell me about the first time. If you're sure.\"\n\n\"Ok. Well the first time was about five years ago, we were out in the Lake District, halfway up a hill on a brilliantly hot summer's day. The hill was steep and I was in need of a rest, so I sat down on the grass and let Adam do the last half mile on his own. I mean, you've seen him, half a mile up a forty-five degree slope is nothing to him, but it would knacker me. In any case I wasn't really dressed for it, all I'd got on was a summer skirt and blouse and ordinary shoes. So off he went and I lay back to sunbathe.\n\nNow, I must admit I was feeling rather horny, what with the heat of the sun and so on, and somehow my hand worked its way under my waistband and into my knickers. Don't look at me like that, you know how it is.\"\n\nJenny was regarding Kat with a certain amount of skepticism.\n\n\"So you were halfway up a hill, out in the open, on your own with your hand in your knickers. Didn't you feel a bit... I don't know... vulnerable?\"\n\n\"I suppose I should have done, but there was nobody around and it was so peaceful, so all it did was give me a bit of an extra thrill. But wait a minute, 'cos I haven't told you the rest. It gets better.'\n\n'I started to get really randy, so I took a quick look around and there was nobody anywhere, so I took my skirt off, then whipped off my panties and lay with my legs wide open. I knew there was nobody watching, but just exposing myself like that gave me one hell of a buzz.' \n\n'It wasn't long before I was well gone, eyes closed and my fingers working my clit like mad. Then I started fingering myself, pushing two fingers in and out and at the same time squeezing one of my tits. Of course my blouse and bra got in the way then, so off they came too and I was stark bloody naked on a barren hillside in the middle of one of England's best known National Parks, with no trees or bushes or anything for miles around to hide behind in case anybody turned up. Not that I expected them to, Adam had gone out of sight and there was not another soul to be seen.'\n\n'Of course what happened then was that my imagination took over and I with my eyes closed I pretended that there was another woman at the side of me doing exactly the same thing, and that I was watching her while she was watching me. God, did that make me hot. So in my head I'm watching this woman's fingers going in and out of one very wet pussy, while in real life mine were doing exactly the same thing. You can imagine, it wasn't long before I felt myself getting ready to cum.\"\n\nJenny felt a bit put out because Kat was describing a make-believe incident, while she had confessed to wanting the real thing. It was a bit embarrassing.\n\n\"Oh, I thought you meant that you really had done it with somebody watching.\"\n\n\"Wait a bit, I haven't told you all of it yet.\" Kat admonished her.\n\n\"Now, back to the story. I didn't want to stop picturing that woman, so I made myself last as long as I possibly could, taking my fingers away every time I got too close to cumming and changing from clit to cunt regularly. The result was that both me and my fantasy playmate got so fucking wound up that by the time I did cum I was ready to explode, I could feel my juices spread all over the inside of my legs and trickling over my bum-hole.\"\n\nJenny pictured this in her mind's eye and her own pussy began to lubricate freely. 'Oh well', she thought, 'a change of knickers is next on the agenda.'\n\nKat was still telling her story.\n\n\"I came like an express train, trying my damnedest to stop from yelling out but failing miserably. I think only my shoulders and my heels were actually touching the ground and I was jerking about like a puppet with its strings in a blender. You have to remember that I still had my eyes closed because just as I was sagging back down and starting to breath again I heard Adam's voice saying how sexy it had been to watch me. I've no idea how long he'd been stood there, even now he won't tell, but his voice startled me and frightened my pretend partner away. I just collapsed back in a heap with shock and looked up at him more red-faced than I've ever been in my life.\"\n\nThe idea of being caught like that somehow appealed to Jenny and she said so.\n\n\"That must have been such a kick. You know, to find out that he'd been watching.\"\n\n\"Actually, at first I felt ashamed of myself, but when I saw the lump in his trousers and realized that it really had turned him on, then it was a thrill, and I became glad I'd done it.'\n\n'But it didn't end there, because the next thing he told me not to stop and started taking off his own clothes. Christ, did he have a hard on. I don't think I've ever seen his cock look so hot and hard. I'm lucky, because I can cum more than once in one session.\"\n\n\"So can I!\" Jenny exclaimed unthinkingly.\n\n\"Good, then you'll know what I mean if I tell you that because my hand was still resting between my legs it was dead easy for me to start playing with my clit again. Not hard, just a gentle massage, round and round, you know. Then Adam came and stood between my legs and started to wank himself off, pointing his cock at me.'\n\n'He looked really hot standing there like that; he has a certain way of wanking that really gets me going. He doesn't rub himself at ninety miles an hour like most guys, but he does these long strokes along his shaft, squeezing as he goes, as if he's milking a cow, then he wraps his fingers around the root of his cock and starts again. I know it sounds a bit unusual, but it looks good and more important, it works for him. He soon had his eyes shut and his legs trembling as he worked himself to a climax.'\n\n'While he was doing that I was still gently playing with my clit, but because I wanted to watch Adam I'd kept my eyes open this time, and I saw a couple of walkers climbing up the path towards us. Really I should have warned Adam whilst we had time to get dressed quick, but the idea that they would get to see us gave me a sort of adrenalin jolt, and I didn't say anything at all.'\n\n'I played really hard with my clit up until I felt the beginnings of another orgasm and then I slowed right down, trying to time it so that I would cum just as they got near us. I know I shouldn't have, and I know it's not nice and all that, but I just wanted them to see me cum, and I couldn't for the life of me tell you why.\"\n\nJenny could envisage the scene perfectly in her imagination and she could feel herself getting more and more turned on as the tale unfolded.\n\n\"This time, because I hadn't been caught out masturbating, the thrill of being watched was less dramatic and far more erotic, just like when I fantasized about it before Adam came back. I could see these two people getting closer and closer and I recognized when they got too close for us to conceal what we were doing. At that point I was trying to hold my orgasm back, still watching Adam getting nearer and nearer to cumming and trying to work out when he would actually get there.'\n\n'The couple was approaching from behind Adam on a path that ran past about fifteen feet to one side, and in the end he started to shoot just before they got level. But they were close enough to hear him groaning and to know what he was doing, because they stopped dead and looked across at us as if they'd seen us for the first time, although that couldn't have been true in open countryside. I think that they'd been so engrossed in each other that they'd registered that we were there, but not that we were nude or what we were doing, because it genuinely seemed to surprise them.'\n\n'Fortunately it was a case of surprised rather then shocked, because once they saw what was going on they just stood there and openly stared. That did it for me. What with great blobs and strings of Adam's cream landing all over me and these two people watching my hand strumming my clit, I came like there was no tomorrow. If my first orgasm had been strong then this one was huge, so powerful that my mind reeled and I actually felt dizzy from the effects. There was no way I could keep quiet this time and I didn't even try, I just yelled and yelled, swearing like a trooper on heat and staring right back at them.'\n\n'I think my staring to one side alerted Adam to their presence, because he turned around just then and saw that we weren't on our own, but instead of being annoyed as I expected he called out to them asking them if they wanted to do it as well. I'm not sure who was the most surprised, me or our audience.\"\n\nKat grinned at the memory.\n\n\"I guess the answer to that was no, because they just looked away and walked off rather rapidly. That was a bit of a shame, I would have liked them to watch me mop Adams cum up with my fingers and suck it from them.\"\n\n\"It sounded really something, I wish I could have been there.\" \n\n\"As who, watcher or watched?\"\n\n\"I don't think I care, just thinking about it is making me wet.\" \n\nJenny wriggled her bottom on the bed, smiling a little bashfully at Kat, and then asked.\n\n\"Tell me about the other time.\"\n\n\"The other one was just plain kinky and there wasn't any men involved, so I'm not sure if you want to hear, but I'll tell you if you like. \n\n\"Go on then.\" Jenny was leaning forward eagerly.\n\n\"There were five of us, all women, and all a bit drunk, and we'd all stayed behind after an Ann Summers party. I don't know who suggested it, but somehow we ended up sat around in a circle with our legs open, watching each other playing with ourselves through our panties.'\n\n'At first it was just a bit of fun, but then we all started to get really turned on and we started masturbating properly. One by one we all stripped off and started doing naughty things, you know, showing off things like fingering ourselves from underneath so that we didn't hide our own clits, you get the idea, It didn't take long before Paula, the girl whose house it was, climaxed really strongly, and that set off a couple more, until there was only me and Beth who hadn't cum.'\n\n'I wasn't really bothered, I knew I'd cum in the end, but Beth was a bit anxious, as if we'd think she was letting the side down if she didn't cum, you know what I mean? Anyway, to cut a long story short, having three woman doing nothing but stare at my pussy and with another one sitting next to me frigging herself frantically finally made me cum like mad, which just left Beth.'\n\n'I think Beth was getting embarrassed, unable to cum but too close to stop, and she excused herself by saying that she normally used a vibe instead of her fingers. 'No problem' says Paula and grabbed one of the vibes she'd been demonstrating. She just took it across and pushed it straight into Beth's vagina, turning it full up at the same time. Beth looked at her in stunned silence and then exploded into the hardest orgasm we'd seen anybody have for ages. Jesus, I thought she'd never stop cumming.'\n\n'You've got to remember that we were all a bit squiffy, because after that somebody suggested we play 'pass the parcel' with the vibrator, on the grounds that we all needed to cum like that. How it worked was that we played music in short bursts and while it played we had to pass the vibrator around from one to the next, but as soon as it stopped we had to use it on ourselves with everybody else watching, until the music started again. Oh, and when you climaxed you dropped out. Beth was made music supervisor because she'd just cum, and off we went.'\n\n'That was really something because you half wanted the vibe to stop at you, and half wanted it to go past because of having to fuck yourself with a vibrator with everybody watching.'\n\n'There was a lot of giggling and messing about, and one girl burst into tears when the music started up just as she was going to cum, but it was a lot of fun and very sexy. I think I was third to cum using the vibrator, and let me tell you that by the time it got to me it was almost too wet and slippery to hold.\"\n\nKat quivered momentarily as the memories got to her. \"My God.\" She told Jenny. \"Thinking about that has got me going.\"\n\n\"Me too.\" \n\nThe pair fell silent, Kat looked at Jenny meaningfully with questioning eyebrows raised just a fraction. \n\nJenny looked back, trying to control her breathing, trying not to show just how aroused she was, all the time knowing that Kat had something on her mind and wondering just where things were likely to go next.\n\n\"Would you like to watch me?\" \n\nJenny had half foreseen the possibility, but once more the directness of Kat's question caught her unawares.\n\n\"Now?\" \n\nShe knew Kat meant now, but the partly instinctive question was asked to give herself time to think. In all her fantasies anybody involved had male, if they'd had a discernable sex at all, and they had watched her, not the other way about. Even so, she felt so horny hearing about Kat's experiences. Maybe they could both...?\n\n\"Yes, right now. While I feel so fucking randy from talking about it.\"\n\nKat's eyes shone and she was breathing harder in hopeful anticipation, while Jenny was teetering on the edge of yes.\n\n\"Come on Jenny, let me do it for you. I want to, if you're up for watching.\"\n\nDecision made. \"We'll both do it!\" \n\nJenny's words came out in a rush, spoken before she could change her mind, and Kat sucked in a quick breath of astonished pleasure.\n\n\"Even better.\" She said, beaming happily.\n\nThere was a gap of about ten seconds while both women thought about their commitment, and then Jenny started to undo her blouse. Her heart was pounding and she was full of adrenalin, but she knew that if she waited she would chicken out.",
        "Kat pushed herself away from the dressing table and went across to the door, quickly flipping the lock.\n\n\"I don't expect Adam would come in unannounced, but I guess we'd both feel better if he can't.\" She explained, hauling her own tee-shirt top over her head.\n\nAs Kat undressed Jenny couldn't help but admire her body. For a woman a few years older than her, Kat possessed the slim lithe figure of a girl, smooth skinned, toned, with small pert breasts and a board like stomach. 'If only' she thought looking down at her own fuller shape. Not that Jenny considered herself fat, but she did notice with regret how her breasts descended a little when her bra was removed, and how rounded her stomach was in comparison with her new landlady's.\n\n\"You know.\" Kat told her, gazing unashamedly at Jenny's nudity. \"I'd give my eye teeth for breasts like yours, mine are tiny.\"\n\n\"I'll swap you.\" Jenny told her laughingly. \"I think they're too big.\"\n\n\"Never content, are we?\" Kat asked rhetorically, padding across to the bed.\n\n\"If you lie on that side with your head against the headboard.\" She told Jenny. \"I'll lie next to you the opposite way so that my head at the foot, we'll be able to see better than just lying side by side.\"\n\n\"You've done this before, haven't you?\" Jenny asked, positioning herself as Kat suggested.\n\n\"As a matter of fact - no.\" Kat climbed on the bed with her and lay head to tail with Jenny.\n\n\"Ready?\" She asked.\n\n\"Ready.\" Jenny confirmed, her breaking voice betraying her nerves.\n\nKat raised her knees and opened her legs, giving Jenny a perfect view of her pussy.\n\n\"You shave!\" Jenny exclaimed, surprised at Kats smooth and naked pubes. She didn't know why she was so taken aback, it was something she'd thought of herself but never yet done, and it looked so beautiful.\n\n\"Yes, Adam does it for me every couple of days.\" \n\nThat level of easy intimacy surprised Jenny and she felt a pang of jealousy that her own marriage had never been so fulfilling. She raised her own legs, spreading them wide to display her own 'natural' pubes, feeling her heart-rate skyrocket again knowing that Kat could see her. Then as Kat as reached between her legs she followed suit, both women finding their own clits and gently massaging them for each other to watch.\n\nJenny looked at Kat's pussy and thought how lovely it looked, the smoothness of hairless skin lending it a kind of sophistication and style, much better, thought Jenny, than her own hairy slit. The pale skin of Kat's labia framed lovely pink folds of flesh that almost pointed the way to her clit, and opened and closed gently as she masturbated to reveal her very wet vagina. No wonder men prefer to go down on shaven women, she thought, wondering if this should be the last day that her own pussy would be framed by a curly bush.\n\nFor a while both women masturbated quietly apart from giving occasional little grunts or moans of pleasure, but as they began to feel their orgasms approach neither of them could prevent themselves from verbalizing soft exclamations, telling each other how good it felt, or giving short descriptions of what they were doing, even though each could see the other, and both were aroused even more by each other's words.\n\nSoon it was clear to Jenny that Kat was getting close to cumming, her pelvis was jerking slightly in response to surges of pleasure and her fingers were playing faster and faster at her clit. Jenny watched enraptured, still rubbing her own button and feeling her own orgasm start to stir inside her. Kat's vagina was gaping open, just as she imagined her own must be, and she could see juices trickling from its entrance to run out of sight over her anus and leave a damp spot on the bed where they had spilled from her cleft. Jenny shuddered with unexpected pleasure at the thought that this was the bed in which she would sleep tonight, wondering if she would feel Kat's dampness still present.\n\nThe suddenly Kat was there, her bottom lifting from the bed as her fingers did a mad dance over her clit and a long growling moan was torn from her throat. She stayed like that for several seconds, still moaning, before her bottom descended only to jerk and bounce up and down under the influence of continuing waves of pleasure. Jenny gasped at the sight, her own orgasm rising closer from the effects of seeing Kat.\n\nJenny closed her eyes and let her fingers hurry over her clit, wanting to get over that last stretch home, needing to cum while Kat's eyes were on her as she recovered from her own climax. Her fingers flew and she felt the fire in her belly get closer and closer to spilling down her vagina to her hard, sensitive little clit.\n\n\"Let me see, let me see!\"\n\nJenny heard Kat's voice calling urgently and felt her new friend's hand on her thigh pulling her legs apart, and then she realized that she had automatically closed her legs in an attempt to intensify her feelings. Without opening her eyes she let Kat's hand pull her leg away and hold it away, knowing that by doing so she could be sure that Kat would see her pussy react to the orgasm that was so nearly there.\n\nAnd then she made it, her orgasm erupted and flowed along her nervous system like lava from a volcano, overloading her senses, making her cry out from pure pleasure and judder in ecstatic spasm. She could feel Kat's hand still on her leg, holding it out, making sure that everything was on display and that every reaction from her pussy was clearly seen, and this added to Jenny's happiness. She knew that just like Kat's, her tunnel would be pulsating, gaping open but widening and narrowing in time to the power of her orgasm and that her own juices would be spreading over the bed. She couldn't help it, but a foolish grin spread across her face from the knowledge that she was cumming with someone else watching, and she rode the storm with pure delight written on her face.\n\n\"Phew. That looked real good,\" Kat told Jenny as she slowly returned to earth. \n\n\"And then some!\" Jenny told her, the foolish grin still on her face.\n\nJenny opened her eyes finally and looked at Kat. She was lying smiling at Jenny, one hand still on Jenny's leg just above the knee and the fingers of her other hand back at her clit, playing very softly with that tiny button.\n\n\"Can you go again?\" She asked.\n\n\"Give me a minute and I can.\" Jenny was eager to try, even though she wasn't sure if she still had anything left.\n\n\"Just watch me then, until you get your breath back.\"\n\nKat wriggled up the bed a little bringing herself closer to Jenny and letting her get an even better view of the two fingers that were still massaging her clit. Jenny watched, as enthralled as before and still getting the same buzz from watching Kat pleasure herself. If this was an example of staying with Kat and Adam, she'd have to remember to thank her sister for arranging it; Kat was beautiful and so fucking sexy.\n\nHer own hand had now drifted back to her pussy, her two longest fingers gently nipping her clit and lightly pulling on it, and she sighed from the pleasure of it. Kat looked at Jenny, saw what she was doing and smiled, her free hand giving Jenny's thigh a quick squeeze of appreciation. \n\nJenny smiled back and, without really thinking about it, placed her own free hand on Kat's slender leg and returned the affectionate contact. Kat murmured softly and ran her fingers along Jenny's inner thigh, softly stroking that tender skin, and still playing with herself as she did so. The gentleness of the touch made Jenny shiver slightly with contentment, and she let her knee fall open until it rested against Kat's side as an overt encouragement for a repeat. Kat smiled, her eyes now fastened on Jenny's pussy, and began to delicately stroke Jenny's thigh, running her fingers from her knee to just below her pussy.\n\n\"That's nice.\" Jenny whispered, enjoying the contact. \n\n\"You mean what you can see?\" Asked Kat. \"Or my hand on your leg.\"\n\n\"Well, both really, but I meant you touching my leg.\"\n\n\"I'm glad. I like touching you. But tell me what you can see. Describe it.\"\n\n\"I can see you playing with yourself. I can see the tip of your middle finger rubbing the end of your clit. You've pushed the hood back and you're rubbing the end of your button ever do gently, round and round.'\n\n'Now you've used your forefinger and ring finger to push open your pussy lips, and I can see right up into you. God, you're wet. You are gaping wide open, and I can see deep inside you, all red and shiny, and I bet it's slippery too.\"\n\nKat groaned and her finger picked up speed, urged on by Jenny's commentary. \n\n\"Have you seen inside a woman's cunt before?\" Kat asked, breathlessly.\n\n\"No, not even my own. Yours is the first.\" Jenny's voice was heavy with arousal. \"Do you like what you see?\" Kat asked, rubbing harder under the stimulation of her own words.\n\n\"Oh yes. I love it being shaved; I can see every fold of skin and every bit of your pussy.\"\n\n\"I like yours too. The hair makes it look really sexy; I'd forgotten how good a hairy pussy looks.\"\n\nUnthinkingly Jenny began to stroke Kat's thigh.\n\n\"You're all wet too.\" Kat went on. \"I bet you want to cum again, don't you?\" \n\n\"Oh yes.\" Jenny closed her eyes momentarily in anticipation. \"I might take a while though.\n\n\"I'll help you.\" \n\nJenny didn't know what was meant for a moment, and then she felt Kat's fingertips move up her thigh until they rested lightly on the bush surrounding her slit. She was shocked and excited at the same time, knowing she should refuse but wanting to feel Kat's fingers touching her.\n\n\"Would you like me to?\"\n\n\"Yes please.\" It was the quietest of whispers.\n\nKat shuffled a little closer, trying to give herself room to investigate Jenny properly, but inadvertently bringing Jenny's fingers into contact with her own pussy lips by doing so. Jenny's eyes widened with surprise at the sudden feel of Kat's warm labia touching the side of her fingers, but it somehow seemed right and almost immediately she was exploring the unfamiliar contours of another woman's pussy, feeling the flesh rhythmically as Kat's fingers worked at her clit. \n\nShe had to lean slightly to one side now to see around Kat's raised knee, but it was worth it to see her own hand resting between Kat's legs, her own fingertips only an inch or so away from her open tunnel. Fascinated by the sight, and by the feel of Kat's fingertips exploring in the same way, Jenny watched herself probe Kat's pussy, dipping inside her, feeling her slippery pussy juices and seeing the shine of wetness on her finger. Her heart was beating like a trip hammer now, more from the adrenalin of new experiences than from outright arousal, but even so, she told herself, she felt randy enough to try anything.\n\nShe noticed that Kat's fingers were now almost stationary, resting on her clit and moving only occasionally, and then she realized the she too was hardly playing anymore, concentrating instead on the feel of another woman's fingers touching her. Rousing herself from her absorption with Kat's actions she made a deliberate effort to rub her own clitoris, making her two fingers go round and round the tip, heightening her sense of daring with more open exhibitionism. Kat must have understood too, for she began consciously playing with herself once again, much to Jenny's delight, and the pair now purposely masturbated while watching themselves dabble their fingertips inside each others vaginas, both intensely turned on by their actions. \n\nTo her own surprise it was Jenny who took the next step and plunged her two fingers deep into Kat's pussy, burying them inside her in one hard thrust. It was the obvious thing to do, but she just hadn't expected to be the one to do it first. Kat reacted with a sibilant 'yes!' of shock and delight, pushing herself back against Jenny's fingers. Jenny watched herself fingering Kat, seeing her fingers slide in and out, becoming wet and slippery with Kat's fluids, watching Kat's two extended fingers manipulating her clit, pulling and pushing the rock hard little nubbin as she worked herself towards orgasm. She wanted to see Kat cum, but didn't want to miss out herself.\n\n\"Finger me, Kat. Push your fingers in.\"\n\nJenny could never have imagined saying such a thing before, nor would she have imagined having her own fingers buried inside another woman's vagina. Kat's fingers obediently slipped inside her and Jenny closed her eyes briefly in delight, knowing that Kat was looking at her pussy just as she was looking at Kat's, and it was a wonderful sensation.\n\nJenny could see that Kat wasn't far from cumming, and she could feel her own orgasm stirring, getting ready to erupt, and she drove her fingers into Kat in a hard rapid rhythm, trying to make her cum, wanting to see her explode before her own climax struck. But, of course, Kat was doing just the same with the same goal in mind, and so both of them were quickly thrusting deep into each other, watching each other and waiting for the end, at the same time rubbing themselves as hard as they could driven on by their own inescapable urge to cum.\n\nSoon they were both grunting and gasping, their legs trembling, their muscles tensing and their eyes half closed from the intensity of their impending orgasm. In the end they both came together, Kat's pelvis jerking and bucking, dislodging Jenny's fingers from her pussy and causing a cry of pleasure mixed with frustration in consequence. Jenny reacted to her orgasm as she sometimes did to particularly strong one, by going completely stiff, held in place by all her muscles contracting in unison, her back arched and her eyes squeezed shut, and a little keening sound coming from between gritted teeth. It occurred to her later that her husband of eleven years had never seen that happen, while a woman she had met only that day had been good enough to generate it.\n\nFor a while they lay, still head to toe on the bed, silently thinking over their actions of the last hour or so. Kat quietly smoked a cigarette while Jenny, a non-smoker, languidly ran her hand up and down Kat's thigh. Eventually Kat broke the silence.\n\n\"I hope you enjoyed that the same as I did?\"\n\n\"Only if you enjoyed it more than anything else in your whole life.\""
    ],
    "authorname": "Otazel",
    "tags": [
        "mutual masturbation",
        "female masturbation",
        "female exhibitionist"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/look-at-me-4"
}