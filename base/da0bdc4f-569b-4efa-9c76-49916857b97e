{
    "title": "Hit and Run",
    "pages": [
        "Hit and Run\n\nAuthor's Note: I've plugged away at this one for months and finally finished it. I hope you enjoy it.\n\n*****\n\n\"Todd! Let's go! You don't want to be late for the first day of school!\"\n\nHer seven-year old son came flying down the stairs and said, \"Or for your first day of work, right Mom?\"\n\nShe wanted to tell him not to go down the stairs like that, but he looked so cute in his new glasses and school clothes she let it go.\n\n\"Right. That would not be good for either one of us, would it?\" she said to her son as she handed him a brown paper bag.\n\nSuzanne Odd, 'odd' only by virtue of having married one Melvin Odd some ten years ago, was so stressed out it was all she could do to hold it together. As usual, her cheating ex was late with child support, and it would be two weeks from today before she got a first paycheck, and as usual, her bank balance was at zero.\n\nBut she was just happy to have found a job and couldn't wait to get started. The pay was decent, but almost as important to her, she needed something to do to keep her busy and take her mind off of the never-ending stresses in her life.\n\nOne of those stressors was getting her name changed back to Rivers, but she desperately wanted to be able to change Todd's name, too, but his father wouldn't allow it. He was a sweet little boy, but boys weren't all sweet. Some of them were merciless in their teasing, and with a last name like Odd, her son had been known as either \"Oddball\" or \"Odd Todd\" since Kindergarten. Making matters worse, he needed braces, and between that and the glasses he wore, he was a prime target for bullying. Without a dad at home it made for a lot of days when her son was clearly upset by it all, and the times she'd tried to intervene had only made it worse.\n\nNow, here they were, in a new town starting at a new school and a new job, respectively. Suzanne had high hopes that their situation would also change, and while she knew many people had it far worse, there only seemed to be one direction in which their situation could go. Up.\n\n\"Okay, when we get to school I'll run in and drop off the emergency contact list.\"\n\nShe saw her son look up at her and immediately knew why.\n\n\"Don't worry. I'm not going to walk you to class, okay?\"\n\nHe smiled and told her, \"Thanks, Mom!\"\n\nAs they got in the car she felt overwhelmed; too overwhelmed to think about things like hope or an improving situation whether it be financially or just with regard to Todd not being teased so much. But she also felt hopeful, and with that they headed out to start their new lives.\n\nSuzanne had driven around Medford in the beautiful state of Oregon quite a few times already but still didn't really know the town. With a population just under 90,000 it wasn't exactly a small town, but it was still small enough not to have a big city vibe, and that was one of the things she loved about it. That and the weather.\n\nThat, and her other worries only added to the stress as she tried to make sure she was in the correct lane before each turn. Traffic was heavy but manageable at 7:35 in the morning, and as she merged into the right lane she took a long, slow, deep breath and exhaled. She made the move without issue and put on her right turn signal as she slowed down from 35 to about 15 miles per hour.\n\n\"Mom! Guess what?\" Todd asked from the back seat just as she started the turn.\n\nFor the briefest of moments she glanced at him in the mirror. When she looked back at the road, panic welled up inside of her and her instincts took over. Suzanne jammed on the brakes causing a loud screech as Todd's shoulder harness locked out. The car rapidly slowed down but not rapidly enough to avoid hitting a runner who had darted across the street.\n\nShe not only hadn't seen him, she was totally unaware that he was in a crosswalk when she hit him. Instinct continued working as she jammed the transmission into park, flung the door open and ran around to the front of her car.\n\n\"Oh, my God, oh, my God, oh, my God! Are you okay?\" she asked of the younger man who'd sat up and had his head hung between his legs.\n\n\"I...I think so,\" she heard him say as he slowly raised his head to look at her.\n\n\"I am SO sorry. I...I didn't see, and I....\"\n\n\"It's okay,\" he told her as he went to stand up.\n\nHis legs were a little wobbly, and they nearly buckled when he put his weight on them. Suzanne grabbed his arm and steadied him, apologizing again as she did and asking one more time if he was okay.\n\nBefore he could answer, a horn honked and then so did another. She looked back and saw what looked like 20 cars waiting to turn right.\n\nThe runner, who was wearing just shorts and a tee shirt with his running shoes, said, \"You uh, you need to move out of the way, ma'am.\"\n\n\"But I...are you sure you're okay? Do you need a ride to the hospital?\" she asked, now feeling like she was going to vomit.\n\n\"I...I don't think so, but could you maybe take me to the end of this street?\" he asked as he gingerly limped toward the passenger door.\n\n\"Yes. Yes, of course,\" she said as she watched him get in, her hands covering her mouth to hide the horror she was feeling.\n\n\"Hey, Lady! Move your ass, would ya?\" someone hollered.\n\n\"Sorry!\" she yelled back as she hurried to her own door and got back in.\n\nShe went to put the car in gear but stopped on 'N' before hitting the gas. The engine revved but the car didn't move.\n\n\"You're in neutral,\" the jogger calmly told her.\n\n\"Oh. Jeez. Right,\" she said as her shaky hand pulled the gearshift down another notch.\n\nHer new passenger looked over and saw that she was either in shock or close to it.\n\n\"Ma'am? Why don't you pull in over here,\" he suggested as he pointed to a gas station.\n\n\"You look like you could use some time to um...settle down...a bit.\"\n\nToo frazzled to think, Suzanne did as she was told and pulled into the gas station but stopped in front of a pump.\n\n\"Maybe pull up there?\" the younger man suggested, now pointing to an empty parking spot near the door.\n\nWhen she finally got the car parked he asked if she was okay.\n\n\"Yeah, Mom. Are you okay?\" Todd asked, too, suddenly worried about his mother.\n\n\"I...I don't...no.\"\n\nTodd thought she'd said, \"I don't know,\" but the 20-something year old man knew she meant 'no' as in, \"No, I am not okay.\"\n\n\"Ma'am?\" he said rather quietly as he reached over and gently put his hand on her forearm.\n\nHe then said, \"I'm okay. Really. But I'm worried that maybe you aren't. Can I possibly help?\"\n\nThe immediate, acute stress she was feeling, added to the longterm stress she'd been under for months, was the straw that broke the camel's back. She went straight from tearing up to sobbing uncontrollably at light speed.\n\n\"Mom? What's wrong?\" Todd asked as he clicked off his seat belt and moved closer to his mother.\n\nUnable to speak his mom just shook her head, which was lowered onto the steering wheel, and continued heaving sobs.\n\n\"Do you know what's wrong with my mom?\" Todd asked the man he didn't even know.\n\n\"Not for sure, buddy, but I have a pretty good idea it's stress related. Maybe you could give her a hug?\"\n\nThe boy slid between the front seats and found a way to do that. His mom tried to put an arm around him, too, as she continued wailing, and at that point Todd got scared.\n\n\"Should we take her to the doctor?\" Todd asked.\n\nFinding the strength to say a few words, Suzanne got out, \"No. We need to take him to the doctor. Not me.\"\n\nThere was pauses between the words as she couldn't quite get them all at once.\n\nThe man who looked to be about 20 years older than Todd said, \"I'm okay, buddy. And your mom will be, too. She just needs to time to recover. That's all.\"\n\n\"Will you, Mom? Will you be okay?\"\n\nNow feeling strong enough to be embarrassed, Suzanne raised her head a bit and nodded weakly as she assured her son that she would.\n\n\"He's right, honey. It's...it's just stress. I'm okay. You can sit back down.\"\n\nHe waited until his mother said, \"No, I really am okay. I promise,\" before doing what she told him to do.\n\nToo embarrassed to look at her passenger, Suzanne asked again if he needed to go to the hospital.\n\n\"Absolutely not. And ma'am?\"\n\nHe waited for her to look his way then said, \"I'm not going to sue you.\"\n\nHe smiled then added, \"I give you my word.\"\n\nThose words were such a relief that she started crying again, but this time it was just crying. The kind of crying that happened when a huge amount of pressure was released all at once, and she couldn't help it even though she hated herself for doing it. The tears had to flow to reduce the stress that had built up inside of her. She was like a kind of human pressure cooker, and once the relief valve was opened, the steam had to be let out.\n\nThe younger man again put his hand on her forearm then quietly asked how he could help.\n\nThese words also touched her deeply but in a very different way.\n\n\"You? You're the one who needs help. My goodness, I just ran you over! And yet you're asking about me?\"\n\nShe couldn't not look at him any longer and when she turned his way, she was a mess of mascara and dried saline, at least where the earlier tears had dried.\n\nHer passenger noticed some dried snot on her upper lip but didn't mention it as she had enough to worry about.\n\n\"You didn't run me over,\" he told, a smile on his face. \"I saw your car and thought I could beat you across the sidewalk. Actually, I ran out in front of you.\"\n\n\"But you had the right of way. There was a crosswalk, and I didn't see it. Or you.\"\n\n\"Either way, I'm fine, and you're obviously going somewhere, so now I'm worried about you being able to get there safely. Would you at least consider letting me drive until you're feeling better?\"\n\nHe kind of squeezed her forearm and smiled again.\n\n\"I...my son is starting school at Oak Grove Elementary, and this is my first day at a new job.\"\n\n\"Then we should probably get going, huh?\" he said, understanding the reason for at least some of her stress, as he opened his door and ran over to her side to open hers.\n\nHe helped her out, and while Suzanne remembered to thank him, she was still too embarrassed to look at him.\n\nAs he started the car he said, \"My name's Jeff, by the way.\"\n\nShe gave him a quick look then told her she was Suzanne.\n\n\"And my son's name is Todd.\"\n\n\"Hey, Todd,\" Jeff said as he gave the boy a quick look while backing out.\n\n\"Hi,\" the boy shyly replied.\n\n\"I used to go to Oak Grove,\" Jeff said to the boy as he put the car in drive.\n\n\"You did?\"\n\n\"Uh-huh. About 20 years ago or so. Give or take.\"\n\n\"Cool! Did you like it?\"\n\nSuzanne was trying to fix the mess on her face but said, \"He's a little nervous. First day. New school.\"\n\n\"Ah, okay. Yeah, that makes sense.\"\n\n\"So what grade are you in this year?\" Jeff asked.\n\n\"Second!\"\n\n\"Nice. So you're what? Seven or eight?\"\n\n\"Seven. I'll be eight in April,\" the boy said as though April was just around the corner rather than eight months away.\n\n\"Okay. Got it.\"\n\n\"Turn left at the light,\" Suzanne said before remembering he knew where the school was and apologizing--again.\n\n\"It's okay. You just try and relax, all right?\"\n\nShe finally took a real first look at him then said, \"Thank you.\"\n\n\"My pleasure.\"\n\nSuzanne had been too preoccupied with thoughts of things like being arrested and jailed to notice, but she now realized he was a very attractive young man. He had thick, black hair, bright blue eyes, high cheekbones, and an amazing smile that showcased some of the whitest teeth she'd ever seen making her hope Todd's might one day look that good.\n\n\"Do you need to be somewhere?\" Suzanne asked once she was able to think again.\n\n\"Me? No. I have nowhere to be all day,\" he told her, that beautiful smile once again lighting up his very handsome face.\n\n\"Oh. Okay. I was just thinking you may have needed to get home in order to, you know....\"\n\n\"Get to work?\" he replied with a laugh.\n\n\"Sorry. It's none of my business,\" she said, now feeling a little embarrassed for a different reason as he pulled into the school parking lot.\n\n\"I have to drop off a piece of paper. Is that okay?\" she asked apologetically.\n\n\"Of course. I have nowhere to be, remember?\" he told her in a friendly, teasing kind of way.\n\nShe finally smiled back as she said, \"Right. I'll just be a minute. I promise.\"\n\n\"Take your time, and you have a great first day, okay, Todd?\"\n\n\"I will!\" he said as he hopped out of the car and slammed the door.\n\nJeff only chuckled when he heard his mom tell him to close it a little easier the next time.\n\nSuzanne was pleasantly shocked when her son took her hand and felt certain it was due to him worrying about her, a thought that almost made her tear up again. He let go in order to open the big door for her, and she told him 'thank, you, sir' as she went in first.\n\nTodd stopped then said, \"I'm gonna go find my classroom, okay, Mom?\"\n\n\"Oh. Sure thing, hon...Todd.\"\n\nHe looked around, and not seeing any older boys said, \"You can give me a hug if you want.\"\n\nAs his happy mother bent down to do just that he quietly told her, \"But NO kisses!\"\n\n\"No. No way,\" she said, making the hug brief. \"Have a good first day, okay?\"\n\n\"You too, Mom!\" he said before heading outside and down a sidewalk where he learned he needed to go to the cafeteria until the first bell rang.\n\nSuzanne dropped off the form then made sure the school secretary knew that, under no circumstances, was Todd's father--or anyone else--allowed to pick him up.\n\n\"Got it,\" she said as though that was a normal, everyday thing which it actually was.\n\nOn her way outside she walked as quickly as she could and apologized again for taking so long.\n\n\"Did you forget again? Already?\" Jeff asked, that smile still there.\n\n\"Oh, right. You have nowhere to be,\" she parroted before laughing.\n\n\"That's better!\" the younger man said when she laughed.\n\n\"Jeff? I really am sorry about...earlier.\"\n\n\"Thank you, but don't be. It really was my fault, crosswalk or not.\"\n\nAs he pulled out of the school parking lot he said, without looking at her, \"Do you maybe want to talk about whatever's been stressing you out?\"\n\nHe did glance over as he added, \"This morning's event aside?\"\n\nHe'd noticed she was a nice looking woman the first time he saw her after getting in the car, but as she walked out of the office he got a really good look at her. She had long, very dark hair that was parted on the side and fell to just above her shoulders. It was silky and smooth and looked perfect on her. It was also just the right look for the shape of her face; a face he found...attractive. In fact, were it not for the puffy, red eyes and the mascara that still wasn't right, he'd say she was very attractive.\n\nSuzanne was wearing a dress, and although it was one that was appropriate for the office, it was obvious that she had a very nice figure. Jeff wasn't a 'horn dog' by any means, but he was a healthy, red-blooded guy and couldn't help but notice such things. Things like what appeared to be C-cup breasts, a waist that might be 25-27 inches, and from just above the knee to the heels she was wearing, a pair of very shapely legs.\n\n\"I don't want to burden you with all of that. You've already gone 'above and beyond'.\"\n\n\"Nah. Just doing what any decent person would do in the same situation.\"\n\nShe made a little 'ha!' sound then said, \"You obviously haven't met my ex-husband.\"\n\nJeff raised his eyebrows but didn't say anything.\n\n\"Sorry. I said I wasn't going to dump any of my stuff on you.\"\n\n\"It's okay. I'm a pretty good listener, Suzanne.\"\n\n\"Oh. Turn right up here, please. My new office is about a mile down on the left from there.\"\n\nAs he told her 'will do' it hit her that he was driving her car.\n\n\"Oh, my goodness. How are you going to get home? Do you need me to take you?\"\n\n\"What? No. You need to get to work.\"\n\nHe glanced at the huge watch on his left wrist then said, \"I've got 7:58, and if work starts at 8am....\"\n\nSuzanne had lost track of time and nearly felt sick again at the thought of being late and getting fired as she walked in.\n\n\"It does, and no one would ever believe my story,\" she replied with a nervous laugh.\n\n\"I'll vouch for you if you need me to,\" Jeff told her with a little laugh of his own.\n\n\"I hope it won't come to that,\" she said, not sure they'd make it on time.\n\n\"Then let me give you my number. Just in case.\"\n\nSuzanne still got flirted with...a lot...but it had been a few years since anyone Jeff's age who looked like he did had done that. Seeing no reason to think he was flirting or that he was some kind of stalker--a stalker she'd run into--she agreed.\n\nJeff gave her his digits and his last name.\n\n\"Randall. Okay. Mine is O...Rivers,\" she told him, not wanting to get into the 'odd' nature of her married name.\n\n\"Suzanne Rivers. Nice to meet you,\" Jeff said as he slowed to turn into the parking lot she pointed out.\n\n\"You as well, Jeff Randle.\"\n\nWhen he stopped she thanked him, apologized one more time, then asked, \"How are you getting home?\"\n\nHe ran around and got her door, and as he helped her out, he said, \"I'll run.\"\n\nAnd with that, he smiled, pretended to tip an imaginary hat at her, closed the door, then turned around and started running.\n\n\"If only I were ten...no...15 years younger,\" the 42-year old brunette said to herself as she opened the office door to start her new job and her new life.\n\nThe morning flew by as she did her best to learn the basics of using the phone, the work-related apps on her computer, and other important first-day items like the names of the other people around her. Human resources had hired her, so when she walked in, Suzanne didn't know a single person there.\n\nBy noon, however, she'd made a friend, or at least an acquaintance, and they walked across the street together to a cozy little cafe for lunch. Like so many other women their age, this woman's name was Heather, one of the most popular girl names of the time. She was a few years older than Suzanne and as nice as anyone she'd ever met.\n\n\"So you're new to the city and starting a new job,\" Heather repeated back after she and Suzanne chatted for a minute or two. \"I'm envious. I've lived here all my life.\"\n\n\"I needed a fresh start after the divorce, and my ex has no interest in our son, so it only made sense to move somewhere new.\"\n\nBoth of Suzanne's parents had already passed away as she came along very late in their lives. They were 45 and 42, respectively, when she'd been born, and because she was an only child, so there wasn't much tying her to the place where she'd grown up.\n\n\"I have two brothers and a sister,\" Heather told her. \"And a husband and two children of my own.\"\n\nShe realized how that might sound and apologized.\n\n\"No. Don't. I'm happy for you. I'd still be happily married if my former husband didn't have a compulsive need to sleep with other women. Other...younger women.\"\n\n\"Oh, my heavens! What a pig. I mean, you're so beautiful! I can't believe you're over 40.\"\n\nSuzanne gave her a funny look and Heather assured her she was being serious.\n\n\"I'm 47 and people think I'm 55. You're 42 and look 35, so be thankful.\"\n\n\"That's very kind of you to say, but I feel 55 myself lately.\"\n\nThey talked a while longer about themselves before the conversation turned to work.\n\n\"I'm just so thankful to have this job,\" Suzanne told her new friend sincerely.\n\nShe almost didn't say it but felt comfortable enough to do so, and said, \"I came very close to being late this morning.\"\n\n\"We need people so bad I don't see you being fired for coming in a few minutes late, but I'm the same way. I'm early to everything, and I mean everything.\n\nShe leaned Suzanne's way then quietly said, \"I'll probably be early to my own funeral!\"\n\nSuzanne laughed and felt a little better.\n\n\"I...I ran into someone this morning,\" she said, not aware that those words had more than one meaning.",
        "\"Oh. So you were held up talking to someone?\"\n\nSuzanne understand the misunderstanding and laughed.\n\n\"No. I literally ran into someone.\"\n\nNow she leaned across the table a little then whispered, \"With my car!\"\n\n\"Oh, my word! Is the other person okay?\" a very concerned Heather asked as she covered her mouth with one hand.\n\n\"He's fine. But I was SO scared!\"\n\nShe explained how she was already frazzled and on her way to drop off her son as someone ran out in front of her.\n\n\"You poor thing!\" Heather said supportively. \"I can't believe he wasn't hurt.\"\n\n\"I know! I thought I killed him! When I saw him sit up I still thought he must have a few broken bones or...internal bleeding...or brain damage or....something.\"\n\nHeather then leaned over and quietly asked, \"Is he...suing you?\"\n\nSuzanne looked up for a moment then said, \"No. In fact, he was worried about ME!\"\n\n\"What? How...I...I don't understand.\"\n\nSuzanne explained the rest of what happened with Jeff as her friend listened with rapt interest.\n\n\"Let me guess. He's married. Or...he looks like the male version of me,\" Heather said with a laugh.\n\nIt was Suzanne's turn to be supportive, so she said, \"Be nice! You look just fine.\"\n\n\"For a woman who's 55,\" her friend replied with another laugh.\n\nSuzanne laughed, too, then said, \"Actually, he's...very attractive.\"\n\nHeather sat up straight and said, \"Oh, do tell! Please!\"\n\nHer fellow employee gave her the lowdown on just how attractive Jeff was then said, \"It's a moot point, though.\"\n\n\"Married, right? All the good ones are.\"\n\n\"No. He's single. And let's be honest. There's young and then there's...young. Jeff...young.\"\n\n\"Wait. Like...high school...young?\"\n\nSuzanne laughed at that then told Heather, \"No. Not that young, but maybe college young. Or...grad school young.\"\n\n\"Under 30, right?\"\n\n\"I didn't ask, but I'm sure he is. And even if he was 30, that's still 12 years. After the divorce I'm open to being...more open...but you have to draw the line somewhere, right?\"\n\n\"I suppose,\" Heather said with what sounded a little like resignation and a sigh.\n\n\"Did that long sigh have any particular meaning?\" Suzanne asked, hoping she wasn't being too nosy.\n\n\"It just reminded me of someone from my past. My very distant past.\"\n\nIt was obvious she wanted to elaborate, so Suzanne waited for her to talk were she so inclined.\n\n\"When I was 32, I was actually a fairly attractive woman, believe it or not,\" Heather said. \"I was able to wear a size 6 back then. Comfortably!\"\n\nThat was the size Suzanne still wore while Heather was closer to a 14. But then she'd had two children and was almost 50.\n\n\"Anyway, there was this guy.\"\n\n\"Oh?\" Suzanne said, in a 'do tell' kind of way of her own.\n\n\"I'd only just met my husband, and we weren't serious when this 20-year old...guy...started flirting with me at a party.\"\n\n\"And?\"\n\n\"And we, you know....\"\n\n\"Really?\"\n\n\"Really. And I saw him for a couple of months before Vince and I became exclusive.\"\n\n\"And?\" Suzanne repeated.\n\n\"I can't tell you how often I've wondered what might have happened if, you know.\"\n\nHeather sighed again then said, \"Don't get me wrong. I love my husband dearly, and our kids mean everything to us. But, well...Vince is...comfortable. But...Danny...the uh, the boy I nearly fell in love with...was....\"\n\n\"Exciting?\"\n\n\"I was going to say 'hot', but okay. Yes, he was definitely exciting. But I suppose we have a rational brain for a reason.\"\n\n\"To make rational decisions,\" Suzanne said, filling in the obvious even as her happy feelings about having met Jeff began to fade as her own rational brain engaged and regained control of her runaway thoughts.\n\nIt wasn't as though she had any belief that they'd ever fall in love. It was just so nice to even think about something so...exciting. But Suzanne was a rational woman, and as she'd already said, she had to draw a line somewhere, and Jeff was well beyond--or rather...below--that line as far as age was concerned.\n\nHeather returned to her chipper self and said, \"Speaking of being late, we should probably get ready to go back to work.\"\n\nSuzanne had lost all track of time and had that panicked feeling again for moment.\n\n\"Yes. I agree. And Heather? I can't tell you how nice it is to have someone to talk to.\"\n\n\"Ditto for me, too, Suzanne. I love talking with my husband, but there are things a girl just needs to be able to share with another girl, you know?\"\n\nSuzanne laughed politely, told her she agreed, and decided not to say anything about them not really being 'girls' anymore--especially now that her brief, mild, quasi-fantasy about the handsome, younger guy she'd nearly killed a few hours earlier, was over.\n\nAs they walked back to the office Suzanne said, \"He gave me his phone number. Just in case.\"\n\n\"Jeff?\"\n\n\"Uh-huh.\"\n\n\"Please tell me you're going to call him,\" Heather nearly pleaded as she grabbed her girlfriend's arm. \"Please?\"\n\n\"I really don't have any reason to.\"\n\n\"Um...don't you think you should at least check and see if he's doing okay?\"\n\nAnother weaker spark of hope flared up in her brain's non-rational area and caused her to rethink things.\n\n\"I suppose it wouldn't hurt. You know, just to be sure.\"\n\n\"Call him!\" Heather said immediately. \"Call him then tell me everything he says, okay?\"\n\nSuzanne laughed and promised she would.\n\n\"And if you can, you know, maybe get a picture or two of this hot, younger man, I wouldn't mind looking at them.\"\n\nSuzanne laughed loudly for the first time in recent memory as they got to the front door.\n\n\"You're terrible!\"\n\n\"That's not what Danny said!\"\n\nSuzanne pretended to be shocked then laughed again.\n\n\"I'm gonna have to keep my eye on you, aren't I?\"\n\nHeather opened the door then said, \"Unfortunately, at my age....\"\n\nShe leaned closer then added, \"And at my weight, no attractive guy his age is even going to notice I'm alive. But a girl can still dream!\"\n\n\"Hey, you're doing it again!\" Suzanne reminded her.\n\n\"What? Being honest?\"\n\nShe held the door another second then said, \"You, on the other hand....\"\n\nHeather gave her slender, well-proportioned new friend the once over like a guy would who was ogling a woman, and both of them laughed as they stepped inside and got ready to get back to work.\n\nTodd's school had an aftercare program that allowed Suzanne to leave him there until 5pm. She got off at 4:30 and only needed ten minutes to get to the campus, so it was perfect for both of them. Or at least she hoped it would be okay for her son.\n\n\"How was your first day?\" she asked when he got in the car.\n\n\"Okay.\"\n\nThe unenthusiastic response concerned his mom.\n\n\"Just okay?\"\n\n\"I guess.\"\n\n\"Did someone say something?\" his mom asked, a familiar feeling welling up inside of her.\n\n\"It's okay,\" her son replied unconvincingly.\n\n\"Do you want to talk about it?\" she asked as nicely as she could.\n\n\"No. Not really.\"\n\nHer heart hurt for her son, but she knew better than to keep digging. She also knew better than to try and get involved because he was old enough to be embarrassed at having his mother fight his battles for him. Still, it made her feel awful.\n\n\"Mom?\"\n\n\"Yes?\"\n\n\"Will we ever see Jeff again?\"\n\nThe question surprised his mom who thought for a moment before answering.\n\n\"I don't think so, honey. Why do you ask?\"\n\n\"He was nice.\"\n\n\"Yes, he was nice, wasn't he?\"\n\n\"Uh-huh.\"\n\n\"It that all?\" she asked.\n\nTodd was silent for several seconds then said, \"Well, you and Dad aren't married anymore, so couldn't you go out with him?\"\n\nNow her heart was breaking for a different reason.\n\n\"Todd, Jeff is a lot younger than me.\"\n\n\"But he's a grownup just like you.\"\n\n\"Well, yes, but still, people don't, you know, date, unless they're closer in age. And a whole bunch of other things, too.\"\n\nThe sound of dejection made her feel even worse when Todd said, \"Okay,\" again and didn't say another word on their way home.\n\nShe wanted to stop and buy him some ice cream, but she had just enough money to get by until payday, if nothing went wrong. And after paying for her lunch today, she felt guilty for having spent some of that money on herself. But she'd made a friend, so that helped her feel a little less like beating herself up--but only a little.\n\nAfter dinner that evening, Suzanne did her best to entertain Todd and keep his mind off of whatever had happened at school. But she had another reason for doing so, and that was to keep her from looking at her phone and calling someone she had no reason to call.\n\n\"You do have a reason, remember?\" one part of her mind insisted. \"You need to make sure he really is okay.\"\n\nAnother part said, \"Come on! You know exactly what you're doing. You have this ridiculous idea that Jeff will be thrilled to hear from you and suggest you get together again.\"\n\nThat same area of her brain then told her to grow up. So although she did look at her phone, and his number, just before going to bed, she set it down without calling him. An hour later she was still laying there wide awake and picked the phone up again.\n\nIt was now a little after 11 o'clock, and she had a strict rule about not calling after nine. So once again she laid it back down, but this time, she allowed her mind--all of it--to wander. And a few minutes later her left began to wander and made its way to somewhere it hadn't been in at least a month.\n\nA few minutes after that, and a whole lot of imagination about a handsome, younger man, her entire body shuddered so hard she had to stifle a scream. A little of it made its way out, but it was muffled enough not to wake her son who'd been out for hours and who normally slept like a log.\n\nIn less than two minutes after the mind-blowing orgasm she drifted off to sleep and slept like a log herself until her alarm went off at 6am. She smiled when she saw her phone next to the digital alarm clock by her bed, and for once, she didn't feel the least bit guilty about having pleasured herself. She knew there was never any reason to feel that way, but from as far back as she could remember, she'd always associated doing...that...with something shameful. She attributed it to her strict Catholic upbringing, but even so, she now knew that was absurd. And yet it was also true because guilt was what she nearly always felt whenever she 'diddled' herself. Just not this time.\n\nAfter a hot shower and a cup of coffee, Suzanne felt as good as she could remember since moving to Medford. When Todd came down for breakfast at 7am, she had two pancakes on his plate with a cold glass of milk sitting next to it.\n\n\"Pancakes? Yes!\" her son said as he said down and grabbed the syrup.\n\nHis mom poured herself a second cup of coffee then decided to take one more stab at the beast.\n\n\"Honey? Can you tell me what happened yesterday?\"\n\n\"Danny Hale called me 'the odd man out'. That doesn't even make any sense!\"\n\nTodd hadn't yet heard the saying, and his mother didn't explain it to him.\n\n\"Don't let that bother you, okay? He's just being...childish.\"\n\n\"I know. It's okay,\" he replied before shoving two huge pieces into his mouth and chomping away.\n\nAs she dropped Todd off at school his mom wished him a good day, and he said the same thing back to her. She felt slightly better as she headed to work, but as she pulled into the parking lot, two uniformed policemen approached her.\n\n\"Suzanne Odd?\" one of them said, stopping just in front of them.\n\n\"Yes?\"\n\n\"Ma'am? You're under arrest for hit and run. You have the right to remain silent,\" the male officer said as female partner handcuffed her.\n\nHeather was right behind her and saw what was going on and ran up to them.\n\n\"Suzanne? What's happening?\"\n\nOne of the officers told her to stay back as Suzanne called out, \"I'm being arrested for hit and run. Can you come to the police station?\"\n\n\"Yes! I'll be right behind you!\" her newest friend called back just as Suzanne disappeared into the police cruiser, her hands cuffed behind her back.\n\nThirty minutes later she'd been fingerprinted and booked and was sitting in a jail cell without her purse or her phone. The sense of frustration and confusion was too much, and after just a few minutes 'inside' she began crying, having no idea Heather was in the main office talking to the arresting officer.\n\n\"This is a mistake! The man she hit isn't pressing charges, and you need to call him!\"\n\n\"We received a call from someone who witnessed the accident happen, and his version of events is very different. It took us 24 hours to track down the vehicle, but from what you just said, she did indeed run into this man.\"\n\n\"But he's okay. And she didn't...hit and run. She gave him a ride, and he told her he was fine and that he wouldn't press charges, so this is all a big mistake!\"\n\n\"Then perhaps you can tell that to the judge when Ms...Odd...appears before him later today.\"\n\n\"Ms...Odd? Who's that?\"\n\nThe police officer looked at her like she was loony.\n\n\"You're here to help your friend, and you don't even know her name?\" he asked almost snidely.\n\n\"We...we just met. Yesterday. But I know what her....\"\n\n\"Ma'am? Save it, okay?\" the police told her.\n\n\"Can I see her? Can I at least talk to her?\"\n\n\"This is a felony charge, so no, you can't see her. But you can talk to the officer right over there and find out when...Ms. Odd...your um...friend...is scheduled to appear in court. If she knows yet.\"\n\nHeather spent the next few minutes on the phone. Her husband had a friend who was an attorney, and he agreed to represent Suzanne for the time being. This wasn't his area of expertise, but he could ask basic questions, and possibly help her out until she could retain proper counsel.\n\nIt was almost 3 o'clock before Suzanne showed up in the courtroom where Heather and the attorney, who'd already spoken with his client, were waiting. The attorney explained what happened to the judge and let her know that his client had this man's number.\n\n\"Your honor, if we could just give Mr. Randall a call, I'm sure this can all be cleared up.\"\n\nThe attorney for the state said she was fine with that, but insisted Ms. Odd remain in custody until this Mr. Randall could appear and verify that the defendant hadn't fled the scene.\n\nThe judge ordered Suzanne back to her cell while her attorney made the phone call. Suzanne hadn't made her phone call yet because she believed Heather was going to follow through.\n\n\"Your Honor? May I speak?\" Suzanne asked just as a uniformed female officer grabbed her arm to take her back to her cell.\n\n\"Yes?\" the judge asked.\n\n\"I haven't made my phone call yet, Your Honor. I was hoping I could call Mr. Randall myself. With the attorneys present if necessary.\"\n\n\"Is the State okay with that?\" she asked the junior, assistant DA.\n\n\"Yes, Your Honor.\"\n\nTwo minutes later, Jeff answered the phone.\n\n\"Well, well. Run anyone else over?\" he asked in a lighthearted tone.\n\nThere was silence in the conference room from which she was calling, and Suzanne didn't joke around back as the phone was on speaker.\n\n\"Jeff? I...I've been arrested. For hit and run. I'm at the jail, and....\"\n\n\"What? What the hell are you talking about? You didn't...run. You helped me, for God's sake!\"\n\n\"Mr. Randall?\" the assistant DA said as she told him who she was. \"Can you possibly come down here and swear to this? If we can verify what you just said, I'm happy to drop the charges, but until we have something in writing...an affidavit...Ms. Odd will need to remain in custody.\"\n\n\"Wait. Ms. Odd? I'm talking about Ms. Rivers. Mid-30's. Very attractive. She has a son named Todd.\"\n\nThe assistant DA looked at Suzanne who was still holding the phone.\n\n\"Jeff? Odd is my married name. I gave you my maiden name because....\"\n\nJeff laughed then apologized.\n\n\"I'm sorry, Suzanne. This is too serious to laugh about, but once we have you out of jail, you will owe me an explanation,\" he said with that same light tone of voice.\n\n\"I'm sorry, too, Jeff. All of this is my fault, and I just....\"\n\n\"None of this is your fault. None of it. I'll explain everything when I get there. Which will be in about....\"\n\nHe looked at his watch and said, \"Fifteen minutes. I'm about two and a half miles away, and it'll take me that long to run over there.\"\n\n\"Run?\" the assistant DA asked.\n\n\"He's a runner,\" Suzanne offered. \"That's how we...met. He was running when I, you know....\"\n\n\"Mr. Randall? Just get here as soon as you can,\" the female attorney said.\n\n\"I'm on my way!\" he told them as he ended the call and turned toward the police station.\n\nJeff arrived 14 minutes and 22 seconds later and needed just another 30 seconds for him to be able to breathe through his nose again and speak without effort after entering the building.\n\nHe told the officer at the front desk who he was, and after a quick intercom call, he was told to go ahead.\n\n\"Down the hall and to the right.\"\n\nHe knocked on the door but walked in without waiting. A half dozen heads turned his way, but the only one he noticed was the attractive woman wearing an orange jumpsuit. She still looked beautiful, but she looked small and fragile, and he had the sudden urge to hold her but knew that wouldn't be allowed. Even so, he smiled at her and quietly told her everything would be all right.\n\nShe smiled back, but Jeff didn't miss the tears welling up in her eyes as he introduced himself.\n\n\"Do you have ID with you?\" the assistant DA asked.\n\nJeff always had his phone and driver's license with him and showed it to her.\n\n\"So what's your version of what happened?\" the woman asked as she handed him back his ID.\n\n\"As you can see, I like to run,\" he began.\n\nHe looked at everyone in the room then looked only at Suzanne as he continued. As he did, she noticed the assistant DA giving Jeff's very fit body the once-over before giving it another longer, more-admiring look.\n\n\"Yesterday, I was doing a ten-mile course I haven't run for a month or so, and I was a little slow on my splits. Split times.\"\n\n\"I know what splits are, Mr. Randall,\" the state's attorney informed him with a smile that made Suzanne feel a momentary flash of anger borne of jealousy.\n\nJeff let her flirty tone go and finished up.\n\n\"I got to the sidewalk where this happened and thought I could beat Ms. Riv...Ms. Odd's car. I sped up and tried to sprint through the sidewalk, and the next thing I knew I was on the ground.\"\n\nHe paused then said, \"I was fine. I just got knocked down. It took me a moment to get my bearings but by then, Ms...Suzanne...was standing next to me, asking me if I was all right.\"\n\nHe continued until the state's attorney said, \"I've heard enough. It's obvious the defendant didn't flee the scene.\"\n\nShe turned toward the judge and requested all charges be dropped.\n\n\"So ordered,\" the judge said before asking for the next case, and just like that the nightmare was over.\n\nThe female attorney turned around, and without any kind of an apology to Suzanne, but making sure to smile at the man with the very 'cut' physique, left the room. Jeff had noticed Heather but had no idea who she was until he moved closer and sat down next to Suzanne once they were near a bench outside of the courtroom.\n\n\"Thank you,\" Suzanne told him as she tried to blink away the tears that been falling since she saw him.\n\n\"Are you okay?\" he asked as he reached out to touch her arm yet again.\n\nKnowing she was about to be released, the police officer didn't say anything to him about the physical contact.\n\n\"Yes. I'm okay. Now,\" she told him as she forced a smile.\n\nWhen she did, she lost control and suddenly started 'boo-hooing' again, as Jeff's mother referred to it. Something compelled him to reach out for her, and when he did, she nearly fell into his arms as she continued to cry, either unaware of or not concerned with the still-wet tank top he was wearing.",
        "\"It's okay. You're going home,\" he told her as he stroked the back of her head.\n\n\"My car. It's at work,\" she said, her voice choked with emotion.\n\n\"You can ride with me, honey,\" Heather offered as she moved closer and looked at Jeff.\n\n\"Oh. Sorry. Jeff? This is my friend. From work. Heather. Heather, this is....\"\n\n\"Jeff, right?\" she said, a big smile on her rather round face.\n\n\"Yes. It's a pleasure to meet you,\" he told her as she extended a hand.\n\nJeff shook it and thanked her for being there.\n\n\"Hey, she's my friend, too,\" Heather said as she shifted her gaze to Suzanne.\n\nHeather whispered, one hand covering one side of her mouth, but Jeff heard her say, \"You weren't kidding! He is...smoking hot!\"\n\nToo emotionally rattled to feel anything but relief, Suzanne just smiled and thanked her friend for being there.\n\n\"Anytime, sweetie. Anytime.\"\n\nShe then looked at Jeff, smiled at him and said, \"You, too, handsome.\"\n\nShe also winked at him which almost made Jeff laugh. Instead, he only thanked her then asked if he could do anything else.\n\nSuzanne thanked him, too, then told him 'no' as they all stood up.\n\nJeff put his hands on her upper arms then said, \"I really think you should have someone with you for awhile.\"\n\nShe looked at Jeff then asked almost demurely, \"You wouldn't mind, would you? I mean, not that you were referring to yourself.\"\n\n\"No. Of course I wouldn't mind. I'd be happy to. And yes, I was referring to myself.\"\n\n\"That'd be nice, but you don't have to do that,\" Suzanne told him as she shook her head. \"I'll be fine.\"\n\n\"Sweetie? I agree with Jeff. I think it'd be better if you had some company,\" Heather insisted. \"I'd volunteer, but I still have to get back to work. You, however, have what's left of the rest of the day off. Yes, I called our boss, and no, he's not mad, and no, you are not fired.\"\n\nSuzanne smiled but still couldn't laugh just as the assistant DA popped her head in and said, \"Ms. Odd? You're free to go.\"\n\n\"Thank the Lord!\" Heather said rather loudly before quietly saying, \"No thanks to you...bitch.\"\n\nShe'd also seen the attractive lawyer ogling her new friend's 'boyfriend' and already hated her, and that made Suzanne laugh as she moved to give Heather a hug.\n\n\"I think you owe someone else a hug, too,\" Heather said, nodding at Jeff.\n\n\"I'm...a mess. I'm all sweat....\" he started to say just as Suzanne threw her arms around him again.\n\n\"A don't suppose a little perspiration on this nasty jumpsuit will make it any worse for wear,\" she said as she held him tight.\n\nJeff held her back, and just before letting go, he said, \"It's amazing to me how you can look just as beautiful in this as you do in a dress.\"\n\n\"Beautiful. Listen to you,\" Suzanne said, as he let go of her, her head looking down at the floor as she said it.\n\n\"You're more than welcome to ride with us, too, Jeff,\" Heather told him, that 'gooey' look on her face again.\n\n\"I kind of...stink,\" he replied as he pulled the shirt he was wearing away from his skin.\n\n\"I don't think either of us will mind, right, sweetie?\" she said to Suzanne without taking her eyes off of the handsome, younger man whose body was as 'hunky' as his face which was...freaking gorgeous!\n\n\"I'll be back as soon as I can,\" Suzanne told them both after a female police officer asked her to come with her so she could change back into her clothes.\n\n\"We'll be right here,\" Heather promised. \"Both of us.\"\n\nHeather's attorney friend (via her husband) came back from signing some paperwork and said, \"It looks like that went rather well. If you don't need me, I really do need to get back to the office.\"\n\nHeather thanked him profusely then Jeff shook his hand before the older man departed.\n\n\"Well, here we are,\" Heather said once it was just the two of them.\n\n\"Indeed,\" Jeff replied, remembering to smile.\n\n\"I think my friend may have a little crush on you, so...be nice, okay?\"\n\nHeather was a 'buttinsky' and knew it. But she'd been one all her life and had long ago made peace with it and gave no thought to her comment or the look on Jeff's face.\n\n\"Really,\" Jeff replied, his head tilted slightly to one side.\n\n\"Listen. I know she's...a little older than you...but she's been through a lot. If you could, you know, maybe be...friendly...to her it would be very appreciated, I'm sure.\"\n\nJeff was only 27 years old, but he was already a very good judge of character and knew that Heather was a busybody, and that meant that anything he said to her would be repeated to Suzanne. So he kept his feelings about the beautiful, older woman who'd nearly run him over the day before to himself.\n\n\"I'll do my best,\" he told before the barrage of questions began.\n\nBy the time Suzanne showed back up wearing her own clothes, Jeff was at wit's ends.\n\n\"Suzanne!\" he said, standing back up out of relief as much as a sense of being genuinely glad to see her.\n\n\"I feel bad making you wait and take so much time out of your day,\" she told him. \"Again.\"\n\n\"Neither one of those things is true,\" Jeff assured her with a warm smile just as Heather, who was right behind him, was pointing at the back of his head and mouthing, \"he is SO hot!\"\n\nJeff sensed something was going on, but as he casually turned around, all he saw was that 'look' on Heather's face.\n\n\"What? I was just...pointing to my watch. Lordy, look at the time!\" Heather said as she began shooing them toward the door.\n\nOutside, Heather finally said 'goodbye' and left her new friend with her new...friend...as she went to get her car.\n\n\"I should probably apologize for Heather's...antics,\" Suzanne told Jeff.\n\n\"Oh? What antics would those be?\" he asked as though he had no idea what she was talking about.\n\n\"The way she...when she....\"\n\nJeff raised an eyebrow as he watched the beautiful, older woman search for words.\n\n\"She seems to have this...this...notion...that you and I should...um, I think she thinks....\"\n\nNow totally at a loss for words, Jeff finally chimed in to help.\n\n\"That we should be dating?\" he suggested as he raised the other eyebrow to make his question seem like a genuine question rather than a statement.\n\n\"Yes! Isn't that crazy! I have no idea where she got the idea from. I mean, we don't even know one another, and I'm, you know, like...a million years older than you.\"\n\n\"A million, huh? I wouldn't have guessed more than....\"\n\nHe paused for dramatic effect then said very seriously as he gave her a 'look over' of his own before saying, \"A thousand. Two thousand tops.\"\n\nSuzanne's eyes opened wide as she feigned disbelief before saying, \"Um...thank you?\"\n\nJeff laughed which made his handsome face look even more attractive, causing Suzanne to laugh, too.\n\n\"Even if it's only a thousand...or two...it's still pretty ridiculous,\" she said even as her heart began beating faster.\n\n\"Is it?\" Jeff asked, this time in a much more serious way.\n\n\"What?\" Suzanne said, caught off guard by his question.\n\n\"Is it really all that ridiculous? Especially if it's just a matter of a few years?\"\n\n\"I...I'm not following,\" she told him as her eyes darted between his.\n\n\"If you were seeing someone else or maybe if you just didn't care for...my antics,\" he began, smiling as he did. \"Then I could see you believing that it really is ridiculous. But if it's just about...time on planet...maybe it's not so ridiculous.\"\n\n\"Time on planet?\" Suzanne asked, even though she knew what he meant.\n\n\"Yes. The number of years one has existed here. On earth. Planet Earth.\"\n\n\"Right,\" she replied nervously and with an equally nervous laugh.\n\n\"So is it?\" Jeff asked, his head tilted a bit, indicating he was waiting for an answer.\n\n\"Is it...what?\"\n\n\"Time on planet. Years. You know--age.\"\n\n\"I...it...well, wouldn't you have to also, you know, be interested...to want to...to even do that?\"\n\n\"Do that? As in...go out with you?\"\n\nThose words made Suzanne's skin turn to goose bumps.\n\n\"Um...yes. You can't possibly want to. Do that.\"\n\n\"I can't?\" Jeff said, now enjoy the word play game even more.\n\n\"Wait. Are you just teasing?\" she asked, now believing that was what was really going on.\n\n\"No. I will admit to enjoying myself as you try and wrap your brain around me waiting to go out with you, but no, I am definitely not teasing. About us going out.\"\n\n\"You...you want to...go out. With...me,\" she said, making it more of a statement than a question.\n\nUnable to resist the desire to 'circle back', he smiled then asked her, \"Why? Is that really so...ridiculous?\"\n\nShe broke eye contact immediately and looked down at his feet for a moment before looking back up at him and asking, \"So...do you? Want to...go out with me?\"\n\nThis time it was definitely a question, and somehow Jeff managed not to laugh.\n\nHe moved a little closer then quietly said, \"I do. I'd very much like to go out with you.\"\n\nNow seriously rattled Suzanne blurted out the first thing that came to mind.\n\n\"But you know I...I have a child.\"\n\nJeff moved even closer as he reached out his hands for hers. There was a moment of hesitation before Suzanne's moved, but when they did, he took her fingers in his.\n\n\"I do. I met him, remember? And I really like him. Todd is great. And so is his mom.\"\n\nHe smiled then said, \"Who is quite beautiful, by the way.\"\n\nBefore she could respond, he put his serious face back on and said, \"Even if she is a couple of thousand years older than me.\"\n\nJeff laughed, and Suzanne knew she should do the same, but something inside wouldn't let her. She just stared up into his amazing eyes, unable to speak.\n\n\"Let me take you to dinner this Friday. Both of you.\"\n\nWhen several more seconds passed in silence, Jeff let go of her hands and put his behind the back of her upper arms and gently ran them up and down.\n\n\"This is where the girl is supposed to tell the boy 'yes' or 'no',\" he informed her.\n\n\"I...are you...is this...are you actually asking me out?\" was all she could say as though he hadn't already done that more than once.\n\nRather than beat the 'is this ridiculous' horse one more time he just said, \"Yes.\"\n\n\"I...don't understand,\" she said as her eyes continued moving between his.\n\n\"Then let me be more direct. You really are beautiful, Suzanne. And the truth is I can't remember ever meeting anyone as charming and likable as you. So if Todd is a big concern, and I think he should be, don't worry. I honestly like him, too.\"\n\nHe ran the back of the fingers of his right hand along her cheek then said, \"Does that help you understand?\"\n\n\"A little,\" she told him, her mind little more than a swirl of confusing emotions.\n\n\"What more can I say to convince you?\" Jeff asked as he slowly moved his hand away.\n\n\"Why me?\" she finally asked. \"You are so good looking it isn't funny. And joking or teasing aside, I really am a lot older than you.\"\n\n\"Now I'm confused,\" he told her. \"If you find me attractive and enjoy my company, why wouldn't you want to at least see whether or not we have something? It might even be something...special.\"\n\nHe took her hands again then told her, \"I'm not looking for a...hook up...in case you were wondering. Not to sound too serious here, I'm kind of looking for something longterm, and you're the first woman I've felt that way about. I'm really not trying to scare you off, but I think the age difference is where you're stuck, so I'm doing my best to let you know why I want to get to know you, Suzanne. If that's not enough, I'll respect your wishes and leave you alone, but I really do like you, and I was hoping we could....\"\n\nHis words were cut off when Suzanne suddenly stood on her tiptoes and kissed him in mid-sentence. Jeff tried to kiss her back, but before he could she pulled away and started apologizing, her eyes open wide in disbelief which quickly turned to horror.\n\n\"I'm so sorry! I...I've never done anything like before in my life! I was just so caught up in the moment that I....\"\n\nJeff then took her face in his hands and kissed her into silence just as she'd done to him. But unlike her short kiss, this one lasted for several seconds during which Suzanne put her hands on his chest as he put his in the small of her back and pulled her close.\n\nWhen it ended, Suzanne managed to say one word.\n\n\"Okay.\"\n\n\"Yeah?\" Jeff asked as he kind of leaned to the side to get her to look at him. \"So you'll go out with me?\"\n\n\"Yes,\" she told him even as her rational brain tried to warn her against it.\n\n\"Great! That's...great!\" he told her, the happiness in his voice coming through loudly and clearly. \"I'll uh, I'll call you. Later tonight, okay?\"\n\n\"Okay,\" she said again as her head continued to spin.\n\n\"I'm sorry all of this happened,\" Jeff told her as he nodded toward the police precinct.\n\nThe spinning slowed, and somehow Suzanne found her voice.\n\n\"I'm not,\" she told him, now wondering if all this was some kind of cosmic serendipity. \"I mean, if...if it hadn't, then you and I wouldn't have talked, and you wouldn't have....\"\n\n\"Asked you out?\"\n\nShe finally smiled before saying, \"Yes.\"\n\n\"Well, from that perspective, I'm kinda glad it did, too.\"\n\nNeither of them had any idea that Heather had pulled up to the curb and seen nearly all of the interaction between them--including the second kiss. Until she tapped on her horn.\n\nSuzanne flinched so hard it made Jeff laugh.\n\n\"Not funny!\" Suzanne said before laughing herself.\n\n\"I believe you're going to have a lot to listen to on the ride home,\" he told her as he walked her to the car. \"You may even 'have some 'splaining' to do.\"\n\nHe could tell that in spite of her being older than him that she didn't understand the reference to Ricky Ricardo from I Love Lucy, so he let go even though it should be her and not him who 'got it'.\n\n\"You're not coming with us?\" Suzanne asked rather hopefully.\n\n\"No. No way!\" Jeff told her in a way she understood and that made her laugh again.\n\n\"Gee, thanks,\" she told him playfully, as he opened the front passenger door.\n\n\"For what?\" Heather called out to them.\n\n\"Oh. Nothing!\" Suzanne said as she looked at Jeff wondering how she heard that.\n\nHe waited for her to get in then promised to call before closing the door.\n\n\"Jeff?\" Suzanne said as he looked through the window.\n\nHeather hit the down button and lowered it for her friend.\n\n\"Thank you. For everything.\"\n\n\"I'm just glad all of this is behind us.\"\n\nThe word 'us' sent a flash of warmth through her body as she said very sweetly, \"Me, too.\"\n\n\"Bye, Heather!\" Jeff said, standing up before giving the other woman a chance to pepper him with questions.\n\n\"Bye, handsome!\" she called back before putting the car in gear.\n\nThe window was still down as Heather pulled into traffic, and the only thing Jeff heard as she drove away was, \"Tell me EVERY WORD he said!\"\n\nThe younger man chuckled as he imagined what Suzanne was going through then glanced down at his watch.\n\n\"Another five miles couldn't hurt,\" he told himself before hitting the stopwatch function and heading toward his place feeling better than he had in a very long time.\n\nSuzanne was so relieved not to be facing a trial and jail time that the rapid-fire series of questions Heather threw at her didn't bother her in the least. She did her best to answer them but soon realized she didn't know how she really felt. The kiss, or rather both of them, had been nice. Pleasant even. But now that the crisis had passed, she wasn't sure to make of what had just happened.\n\n\"So you kissed him then he kissed you and after that he asked you out,\" Heather summarized after having asked the same question in some slightly different way several times.\n\n\"Um...yes.\"\n\n\"So...when are the two of you going on your date?\"\n\n\"I...I'm not sure,\" Suzanne told her as she wondered how she could have let herself get into this kind of a predicament.\n\n\"What do you mean you're not sure? He clearly likes you, he told you you're beautiful, he kissed you for crying out loud, and he asked you out. Oh. And he's freaking gorgeous! How can you not be sure?\"\n\nSuzanne understood that Heather's disappointment was projection on her part. The thought of finally having the chance to be with Danny again was in her grasp even if only via proxy. She probably even believed what she was saying, but Suzanne wasn't sure she believed it, and there were several very good reasons not to.\n\n\"Yes, but I barely know him, I have no idea what he does for a living, I have a son to worry about, and did you not notice how young he is?\"\n\nHeather used her free hand to reach over and touch Suzanne's lower left arm.\n\n\"Did you not notice how utterly handsome he is?\"\n\n\"He is a very attractive man,\" Suzanne admitted as her brain began arguing with itself again.\n\n\"It's just a date, hon. He's not proposing,\" Heather pointed out.\n\nSuzanne looked over at her newest friend then asked, \"You really think I should?\"\n\nThe look she got in return was enough to make her laugh.\n\n\"So that's a 'yes', I take it.\"\n\n\"Let me just say that if you don't go out with him I may never forgive you!\" Heather told her before laughing a little herself.\n\n\"It is just a date.\"\n\n\"See! That's the spirit!\" Heather said, as she grabbed her friend's hand just as they got to the office.\n\n\"Are you sure it's okay for me take off?\" Suzanne asked as Heather pulled in behind her car.\n\n\"Yes. Absolutely.\"\n\nNow it was Suzanne who reached over to touch her girlfriend's arm.\n\n\"I can't thank you enough. For being there, for arranging an attorney, and...for being my friend.\"\n\nHeather's faced beamed as she leaned over to give Suzanne a hug.\n\n\"I'm just glad I could help.\"\n\n\"I don't know how to repay you,\" Suzanne told her sincerely.\n\n\"Go on your date and we'll call it even. If you tell me everything!\" Heather bubbled before they both laughed and hugged one more time.\n\n\"Okay. I will,\" Suzanne said, mostly to convince herself that she would, and by the time she got home she found herself feeling much better about this first date. Her first and only date since the divorce.\n\nBy the time she got to home it was almost time to go get Todd, and as her thoughts shifted to her son her short-lived happiness faded as she realized she'd only thought about herself since dropping him off that morning. Yes, her problems were significantly bigger than her son's, but for a boy his age his problems were just as real as his mom's. As she drove to go get him she could only hope that he'd had a better second day at his new school.\n\nHer son's second day not only wasn't better, another boy had teased him about his name, too. Todd not only didn't want to talk about it, she could tell that he was on the verge of crying, and when she saw that, her heart broke.\n\nAgainst her better judgment Suzanne said, \"Guess who I saw today?\"\n\n\"Who?\" her son asked, the expression on his face changing from sad to hopeful.\n\n\"Jeff.\"\n\n\"You did?\"\n\n\"I did. And he told me he thinks you're pretty great.\"\n\nTodd smiled so big his mom nearly teared up but held it together.\n\n\"I thought you said we wouldn't see him again.\"\n\nCaught in a trap of her own making, his mom hoped she wasn't digging an even deeper hole.\n\n\"He came to the police station. To talk about when I, you know....\"\n\n\"Ran into him?\" the now-excited boy asked.\n\n\"Well, okay. Yes. When I...bumped into him.\"\n\n\"Wait. Did you get in trouble?\"\n\n\"No. They just wanted to ask me some questions about what happened.\"\n\n\"Oh,\" her son replied before asking, \"how did they find out?\"\n\n\"Um, well, someone who saw what happened thought I hit...bumped into him...and left.\"\n\n\"Is that bad?\"\n\n\"Yes. That's called 'hit and run' and it's very serious. But I didn't run.\"\n\n\"So Jeff told them you helped him, right?\" the little 'grownup' said more than asked.\n\n\"Yes. Yes, he did. He was very helpful,\" his mother said, without saying a word about having been arrested and having to sit in a jail cell for a couple of hours.",
        "\"Does that mean we can see him sometimes?\" the hopeful young boy asked.\n\n\"I don't want to promise you, but I think maybe he might....\"\n\n\"Could he come over tonight?\" her son nearly begged.\n\n\"Oh, I...I don't think so. It's already getting late, and....\"\n\n\"Please, Mom? It's not even five o'clock,\" Todd reminded her just as they pulled into their driveway.\n\nShe was preparing to tell him that people needed advanced notice and that she barely knew him, but the sad look had returned to his face, and so did the hurt she'd been feeling.\n\n\"I suppose I could call him,\" Suzanne said rather timidly, but within a second after getting the last word out, Todd threw his arms around her and told her she was awesome.\n\nNow between a rock and a hard place, also of her own making, she reached for her phone.\n\n\"Maybe you can say 'hi' to him, okay? If he's not too busy.\"\n\n\"Okay!\" came the immediate and enthusiastic response.\n\nSuzanne held her breath as the phone rang, and when she heard his voice, it not only made a smile, it sent a tingle through her body.\n\n\"Jeff. Hi. It's...me. Suzanne. Rivers.\"\n\nShe saw the puzzled look on Todd's face then said, \"Odd.\"\n\nShe heard Jeff chuckle as he said, \"I remember you. You're the beautiful woman with the awesome son.\"\n\nThe phone wasn't on speaker, but Todd heard it, and that same smile that was now a beam, was back.\n\n\"He...we...wanted to call and maybe see if you....\"\n\n\"Can he come over, Mom? Please?\"\n\n\"I heard that,\" Jeff said with another laugh. \"Can I...Mom?\"\n\n\"Oh. We...I...haven't even started dinner and....\"\n\n\"I'll bring it. Just tell me what you like.\"\n\n\"Can we have KFC?\" Todd asked, again nearly begging.\n\n\"I heard that, too. Is that okay with you, Mom?\" Jeff asked, using the 'mom' card again.\n\n\"Um...sure. But you don't have to....\"\n\n\"I'm happy to, and is an hour enough time?\" he asked before she could finish.\n\nTodd heard all of that, too, and did a huge fist pump and said, \"Yes!\" which Jeff also heard and that made him smile.\n\n\"That sounds perfect,\" Suzanne told her as her smiling son looked up at her in a way that made her so happy she forgot how uncomfortable she'd felt calling this younger man she'd nearly run over.\n\n\"Okay. I'll shower, change, and stop by the KFC on the way. I just need an address.\"\n\nSuzanne hesitated because their place was somewhere between modest and rundown, but she was now committed and gave him the information.\n\n\"I'll be there before six,\" Jeff promised before saying, \"see you soon, buddy!\"\n\nSuzanne turned the phone Todd's way as he called back, \"See you soon, Jeff!\"\n\nHe hung up before she could say anything else, but Todd was outside and running around celebrating, and as well...odd...as that phone call had been, it was more that worth it to see her son so happy.\n\nShe told him to go inside and straighten his room up, and rather than getting the standard response of, \"Do I have to?\" he cheerfully told her 'okay' and headed to his room which was all of about 10 feet away in their little, dumpy, two-bedroom rental house.\n\nSuzanne nearly cried when she heard her son in his room putting things away and doing something she hadn't heard in quite awhile. He was singing, and as she choked up, she quietly sang along, too, before going to her room to decide what to wear.\n\nWhile she was trying to make up her mind Todd finished cleaning his room and was back in the living room when his mom's phone rang. He looked and saw the name Jeff and answered without asking.\n\n\"Jeff!\" he said as he raised the phone to his ear.\n\n\"Hey, buddy. Is Coke okay?\"\n\n\"Um...my mom doesn't let me drink regular soda. Diet would be better.\"\n\nSuzanne popped her head out just in time to hear the last sentence, and that made her smile.\n\n\"Diet it is. How about cinnamon sticks?\"\n\nTodd turned and saw his mom and gave her a sheepish smile.\n\nShe nodded and smiled back. With the 'okay' in hand, Todd told Jeff that was fine.\n\n\"All right, my man. I'm on my way.\"\n\n\"See you soon!\" the boy said again, now so excited he couldn't stand it.\n\nStill watching, Suzanne felt guilty again. She loved seeing her boy happy, but Todd had to be told this was just a one-time get together and not to get too attached to Jeff. But now wasn't the time, and she had no intention of ruining the best day he'd had in months.\n\nShe returned to the task at hand which shouldn't have even been an issue because what she was wearing was just fine. So why then was she fretting over what to wear for a one-time....\n\nShe laughed quietly when the word 'date' came to mind. But as she made her decision, she couldn't help but think--and maybe even hope--that there might be a second...get together with the very attractive, younger man.\n\n\"Wow! You look really pretty, Mom!\" Todd said when he saw his mom.\n\n\"Oh. Thank you, honey. I thought it would be nice to, you know, look....\"\n\n\"Beautiful?\" her son suggested, the big smile still on his face.\n\n\"Well, I don't know about that, but thank you, anyway, kind sir!\"\n\nShe had a teal blue top she hadn't worn in at least two months, and she loved the way it hugged her figure, accenting her tight waist and ample breasts. It was ribbed and had a mock turtleneck and looked great with the black pants she was wearing. Todd didn't notice details, but his mom had also put on a silver necklace and some matching earrings and hoped that maybe the other....\n\nAgain, a word popped into her head, but this one didn't make her smile. She was thinking 'boy' but as young as Jeff was, he was definitely not a boy. Regardless, she knew some jewelry would neither make nor change his opinion of her, but she wanted to look as nice as she could without being too obvious by putting on her best dress.\n\nTodd's voice snapped her out of her mental daydreams as he proudly asked her if she wanted to come check out his room.\n\n\"Of course!\"\n\nShe took a quick look around and smiled then put her hands on her son's chest as he stood in front of her.\n\n\"Wow! You nailed it!,\" she told him as she bent down and looked at him.\n\n\"Thanks, Mom!\" he said before asking how long it would be before Jeff arrived.\n\nIt was only 5:40, so she got ready to say it would be about 20 more minutes when she heard a knock on their door.\n\n\"I'll get it!\" Todd said as he spun around, dodged his mom, and tore off for the door.\n\nSuzanne moved in the same direction and was maybe 10 feet behind her son when he flung the door open.\n\n\"Jeff!\" Todd said the moment he saw him.\n\n\"Todd! Hey, buddy. Can you take some of this for me?\"\n\nBoth of Jeff's arms were full of stuff, and although Suzanne noticed, she was more interested in how her son was reacting and how amazing Jeff looked in something other than running gear--and he'd looked very sexy in shorts and a tee shirt.\n\nHe smiled at her and said 'hello' as Todd grabbed the bucket of KFC. The smile turned to a laugh when both of them said, \"Wow! Look at you!\" at the same time.\n\n\"Jinx?\" Jeff said with a laugh as he stepped inside and Suzanne closed the door.\n\n\"Right!\" she told him with a chuckle before telling him he looked quite handsome.\n\n\"Oh, gosh. Thanks, but it's you who looks amazing.\"\n\nShe saw him quickly give her body a very fast once-over and loved the way it made her feel. She was a modest woman who tried to also be honest. She knew she was still attractive, but wasn't vain enough to think someone as handsome--and young--as Jeff would think she was beautiful. Still, the compliment was very welcome and made her feel happy, something that was as rare for her these days as it was for her son.\n\n\"I've never seen you in anything but running clothes,\" she told him with a smile as she took the other bags from him. \"And something smells heavenly!\"\n\n\"That would be the KFC. And I don't get dressed up for just anyone.\"\n\nThe way he smiled at her made her tummy do a flip flop.\n\n\"Well, you look very nice,\" she assured him as she admired the blue, pin-striped shirt under a gray sweater and a pair of jeans that fit just right.\n\n\"You do, too,\" he told her as she asked if he was ready to eat yet.\n\n\"I am!\" Todd hollered out, causing his mother to give him a gentle look.\n\n\"Sorry,\" the boy said as he looked up at Jeff.\n\n\"I think someone's as hungry as I am,\" he said, as he mussed Todd's hair.\n\n\"Jeff? Do you wanna sit by me?\"\n\nSuzanne smiled when she saw Jeff look at her. They had a tiny dinner table, and all three of them would be sitting next to each other.\n\n\"Of course. You're my favorite new friend,\" the older man told him.\n\nTodd beamed as he said, \"Come on. I'll show where we eat.\"\n\nSuzanne gave Jeff another look, but this one was more apologetic.\n\n\"It's uh, it's pretty small,\" she said, continue the apology theme.\n\n\"It's home, right?\" Jeff replied enthusiastically, another smile on his very handsome face.\n\n\"Yes. Yes, it is,\" the older woman who had another case of butterflies said. \"You guys go sit down, and I'll bring everything over.\"\n\n\"I'm happy to help,\" Jeff told her as Todd tugged at his arm.\n\nHe saw the way she looked at her son and understood.\n\n\"Then again, my best buddy and I could just take a seat.\"\n\nA couple of minutes later, all three plates were filled with chicken, mashed potatoes and gravy, along with coleslaw. The diet Coke and cinnamon sticks were within reach, and everyone was ready to get down to business.\n\n\"Can we eat now?\" Todd asked as though he was on the brink of starvation.\n\n\"Oh. Sure. Of course. Dig in!\" she said as she glanced at Jeff.\n\nBefore he could pick up his plastic spork, Todd was gnawing on a juicy piece of chicken breast.\n\n\"This is SO good!\" he said, his mouth full of food.\n\nHe got another small look, but his mom didn't say anything as she took a small bite of the slaw.\n\n\"Mmmm. This is better than I remembered.\"\n\n\"I haven't had KFC in...years,\" Jeff told her as he took a larger bite of the mashed potatoes.\n\n\"We haven't had it in forever!\" Todd announced before taking a second, equally large bite.\n\n\"Slow down, buddy!\" his mom said with a little laugh. \"The chicken isn't going anywhere.\"\n\n\"Sorry! It's just so good!\"\n\nThe three of them chewed in silence for a few seconds before Suzanne said, \"Thank you so much for all of this.\"\n\n\"Oh my goodness. You're more than welcome, and it was my pleasure.\"\n\n\"And thank you again for coming to....\"\n\nTodd didn't know about the arrest nor did his mother want him to find out.\n\n\"I was happy to,\" he told her, picking up on what was going on.\n\n\"And while I'm apologizing and thanking you, I am so very sorry for the um...hit and run incident today.\"\n\nJeff laughed before reminding her she didn't run.\n\n\"Well, someone evidently thought I did,\" she replied, hoping Todd wouldn't notice. He was so absorbed by the flavor of the chicken coating he didn't even hear her.\n\nTo her relief, Jeff changed the subject by asking her how she liked the new job.\n\n\"It's...fine. I'm really just happy to be working.\"\n\n\"And you made a friend.\"\n\nJeff kind of raised his eyebrows and Suzanne tried not to laugh.\n\n\"She's actually very sweet.\"\n\n\"All that matters is that she's your friend. I really am happy for you.\"\n\nThe sincerity of his words touched and gave her the courage to say, \"I'm also very happy to have another new friend.\"\n\nHer look told him who she meant, and Jeff said with a little smile, \"Yeah, same here.\"\n\n\"May I ask what you do--if it isn't too personal?\"\n\nSuzanne had been curious but didn't really care. Unless he was some kind of...drug dealer...what he did wasn't important to her, but she couldn't help but wonder.\n\n\"I uh, I'm kind of between jobs right now,\" Jeff told her truthfully.\n\n\"Oh. Well, I'm sure you'll find something soon.\"\n\nNot sure how his current employment status made her feel, Jeff explained.\n\n\"I got out of the Navy a few months ago.\"\n\n\"Oh. That's...that's wonderful. Thank you for your service.\"\n\n\"My pleasure. I'd have stayed in, but my dad's not doing well, and since my mom passed five years ago....\"\n\n\"Jeff, I'm so sorry.\"\n\nSuzanne felt bad for having asked and worse for finding out about his parents.\n\n\"I'm sure he's happy to have you home.\"\n\n\"He was diagnosed with MS a couple of years ago, but he was doing fine until six months back or so. Since then he's had a whole lot of problems, and I knew he'd be needing a lot of help, so I put in my resignation.\"\n\n\"Wait. Resignation?\"\n\n\"Yes. I was a Navy officer. A lieutenant. I'd just finished my five-year obligation after the Academy, so I was able to resign and come home.\"\n\n\"Ah, okay. So you went to the Naval Academy. Wow. Now I'm really impressed,\" she told him as she saw him in a whole new light. \"Dare I ask what you did while in the Navy.\"\n\n\"I uh, I was a SEAL,\" Jeff said quietly.\n\nTodd's head swiveled to his left so fast it startled his mom.\n\n\"You were a SEAL?\" the boy asked, now wide eyed and slack jawed.\n\n\"I was. For four years.\"\n\n\"Mom. Jeff was a Navy SEAL! They're awesome!\"\n\nShe loved the enthusiasm and agreed with her son.\n\n\"Yes, they are. I respect all of our men and women in uniform.\"\n\n\"Me, too, but SEALs are the most awesomenest of all the awesome!\"\n\nShe laughed and didn't tell her boy that wasn't a word. She only told him again that she agreed.\n\n\"That really is amazing,\" Suzanne told their guest.\n\n\"I enjoyed it. I'd have stayed for a career if Dad hadn't gotten so much worse, but as they say, 'It is what it is', right?\"\n\nJeff hated the saying, but there were times when it fit, and this was one of them.\n\n\"Yes. Yes, I suppose it is,\" Suzanne agreed before asking him if he needed anything else.\n\n\"No. I kind of have everything I want...right here.\"\n\nHe looked at the food, then at Todd, then right at her before saying that, and for the third time, her insides went flipitty flop.\n\n\"So are you staying with your father?\" she asked, hoping he didn't see that as a money question.\n\n\"Yes. Well, he's actually going to be staying with me, but for now, anyway, yes, I am staying with him.\"\n\nIf he wasn't currently employed, Suzanne wasn't sure how that would work, but she had no intention of probing into his personal life any deeper.\n\nTodd was reaching for a third piece of chicken and had barely slowed down.\n\n\"You gettin' full yet?\" Jeff asked with a smile.\n\n\"Not yet!\" the boy replied as he chomped away. \"I love KFC!\"\n\n\"I can tell,\" Jeff teased before asking if he wanted another piece.\n\n\"Maybe you could eat something else on your plate first?\" his mom said politely but in a way that told him it was time to put down the chicken.\n\nHe wolfed down half the potatoes and gravy and two bites of coleslaw then looked at his mom.\n\n\"I have no idea where he puts it,\" she said as she shook her head and nodded at the bucket of chicken.\n\n\"Another breast! Yes!\" he said as he pulled it out, causing both grownups to laugh.\n\n\"It's been pretty...sparse...around here. But payday is coming, so....\"\n\n\"Mom says we're like Old Mother Hubbard,\" Todd informed Jeff as he sunk his teeth into the juicy, white meat.\n\n\"Your cupboards are bare?\" Jeff replied, but not in a way that would hurt Suzanne if they really were.\n\n\"Well, we have a little bit of cereal, some bread, and...three cans of soup.\"\n\nSuzanne saw the concerned look and said, \"We're fine. It's not really that bad,\" even though it was.\n\nHe was going to have a second piece himself, but knew it would be just as tasty the next day to a hungry young boy--or his mom--so he finished what was on his plate and left the chicken. Instead he picked up a piece of cinnamon bread, tore it in half, then looked at Suzanne.\n\n\"Um...sure. I'm not big on sweets, but that looks really good.\"\n\n\"They're my favorite!\" Todd said, forgetting about the chicken. \"I can eat like ten of them!\"\n\nJeff chuckled as Suzanne shook her head and shrugged.\n\nThey finished the sweet bread and took a sip of the diet soda before Suzanne said, \"I'd offer you a glass of wine, but we're kind of...out.\"\n\nShe smiled bravely, and Jeff didn't let on that he could tell she was embarrassed.\n\n\"I'm not much of a drinker anyway, but thank you.\"\n\n\"Me, either,\" the beautiful, older woman said. \"But I do have some coffee if you'd like a cup.\"\n\n\"Yes. That'd be fantastic--if you're having one, too.\"\n\nThey made small talk as the coffee brewed then went and sat down as Todd continued eating.\n\n\"I think he must have a tapeworm,\" Suzanne said quietly with a little laugh.\n\nJeff chuckled and told her, \"He is thin. But when I was his age I was pretty skinny, too.\"\n\nThe mention of age made her want to ask Jeff his but bit her tongue.\n\n\"You're not thin anymore,\" she told him as she now gave his body the once over look. \"You uh, you look...quite nice.\"\n\nHe was a runner, but he didn't have the classic runner's body. He was lean yet very nicely muscled making her think he had to be in a gym several times a week but didn't ask about that, either.\n\nJeff smiled then said, \"I was trying to find a way to tell you you look amazing, and you stole my thunder.\"\n\nSuzanne felt wonderful and laughed again.\n\n\"Mom? Can I have another cinnamon stick?\"\n\nAs she said 'yes' Jeff mouthed 'tapeworm', and that made her laugh even harder. What he said next created an even deeper stir than before.\n\n\"You're even more beautiful when you smile.\"\n\n\"When you tell me that, I can almost believe it.\"\n\n\"Hey. Are you questioning my integrity?\" Jeff asked, pretending to be insulted.\n\n\"What? No! Heavens no. I just meant....\"\n\nHe took her hand in his then told her he was kidding.\n\nSuzanne looked down at her hand in his then apologized yet again.\n\n\"I'm not used to hearing things like that.\"\n\n\"If you stick around me for any length of time, you'll have to get used to it.\"\n\nHe leaned closer causing her heart to race just as Todd got up and ran over to her.\n\n\"Can I have the rest of your diet Coke, Mom?\" she heard as Jeff slowly moved his hand away. She could tell he hadn't notice that she'd almost been kissed and felt well, oddly relieved.\n\n\"Sure. But then go brush your teeth, okay?\"\n\n\"Okay!\" he said as he went back to the table.\n\n\"Todd really is great,\" Jeff told her.\n\n\"He really likes you. I haven't seen him like this is a long time.\"\n\n\"Well, I really like him, too.\"\n\nHe moved closer again then whispered, \"And...I really like his mom.\"\n\nSuzanne's confidence waned, and she pulled back a bit.\n\n\"Why?\" she asked out of the blue, starting this unwanted conversation again.\n\n\"What?\"\n\n\"Why do you like me?\"\n\n\"I don't understand,\" Jeff said, wondering how things went off the rails so quickly.\n\n\"I'm...I'm...you know. Older. And I'm guessing a lot older. There are a ton of beautiful women your age, and you're very handsome, so I...I don't understand why...you like me.\"\n\n\"Ah. Okay. I understand now,\" Jeff said, the smile back on his face.\n\n\"That makes one of us,\" Suzanne replied as she tried to smile back.\n\n\"You're a little...embarrassed.\"\n\nNow it was her turn to be surprised.\n\n\"What? Embarrassed? Why would you say that?\"\n\n\"Because you're thinking that when people see us together they'll think you have some kind of...issue.\"\n\n\"I...no. That's not...I only meant....\"\n\nJeff leaned over again and this time he didn't stop. It was only slightly more than a peck, but it was still very nice.\n\n\"If it does bother you, I can't help you with that. You'll have to decide whether you can deal with it. All I can say is I love spending time with you...and Todd...and I'm honestly hoping we can spend a lot more of it together.\"\n\nHis reply so stunned her that she didn't tell him she had the same concern only about him being embarrassed to be seen with her. Rather than say it she just sat there staring at him and tried to convince herself that maybe he really did like her.\n\nHer stare ended when Todd came back and announced that his teeth were clean just as Jeff and his mom sat down on the couch.",
        "\"Wanna see?\" he said, making like a Cheshire Cat before his mom could answer.\n\n\"Whoa! Dude, I need my sunglasses!\" Jeff teased as he raised an arm to cover his eyes. The gesture had the desired effect and got the boy to laugh.\n\n\"See?\" Suzanne said as she leaned Jeff's way.\n\n\"See what?\" Todd asked, clueless about the adults' conversation.\n\n\"It's just nice to see you so happy,\" his mother replied, feeling that way herself.\n\n\"Of course I'm happy. Jeff's here!\"\n\n\"Have a seat, buddy,\" Jeff told him as he patted the seat cushion next to him.\n\nTodd squeezed in between them then looked up at Jeff as if to ask 'what's next'.\n\n\"So what do you like to do?\" Jeff asked.\n\nHe leaned down a bit then said very seriously, \"Other than math. Cuz everyone loves math.\"\n\nTodd made a face then laughed.\n\n\"I actually do like math, but it isn't exactly fun.\"\n\nTodd turned and looked at his mom to see her reaction, and she made him laugh again when she feigned being shocked.\n\n\"Mom!\"\n\n\"Sorry. I just find it hard to believe you don't get excited about fractions and decimals.\"\n\n\"Mom! I'm seven. We don't do fractions yet!\" he told her.\n\n\"Ah! No wonder you're so happy,\" she replied, this time drawing a chuckle from Jeff.\n\n\"My mom's weird,\" Todd said to Jeff but turning back to see his mom's reaction again.\n\n\"Well, I can see I'm not wanted around here! Guess I better go clean up the mess on the table,\" Suzanne said as she tried again to pretend she was hurt.\n\n\"See?\" Todd said as she walked away.\n\n\"No, really. What do you like to do? Sports? Video games? Fast cars?\"\n\nTodd smiled so Jeff leaned close again then said loudly enough for Suzanne to hear, \"Pretty girls?\"\n\nTodd's face reddened a bit before he said, \"No way! Girls are...gross!\"\n\n\"Boys have cooties!\" his mom called out with a laugh.\n\n\"Uh-uh! GIRLS do!\" her son shot back.\n\n\"Okay, okay! No cootie wars!\" Jeff said with another laugh. \"But seriously. What's your thing?\"\n\n\"Um...I like video games. A lot.\"\n\n\"Do you have any?\" Jeff asked.\n\n\"The controller is broken and we don't have any data left on our plan, so I can't really play.\"\n\n\"Gimme a sec, okay?\"\n\nJeff walked over to Suzanne and asked if it was okay for Todd to play on his iPad.\n\n\"You don't have an iPad,\" she told him.\n\n\"It's in the car. I'll go get it if you don't mind.\"\n\n\"Oh. Well, I'm sure he would love that!\"\n\n\"Be right back.\"\n\nA minute later he came in and sat back down by Todd.\n\n\"What's your favorite game?\"\n\n\"Do you have Minecraft?\" Todd asked with no small amount of anticipation.\n\n\"No, but the App Store does. Gimme a sec.\"\n\n\"Wait. It costs money!\"\n\n\"Oh. How much?\" Jeff asked as though it mattered.\n\n\"It's like...five dollars.\"\n\nThe excitement was gone as Todd knew that was too much to spend on a video game. Even one dollar was out of the question lately.\n\n\"Whew. That's good because I have six dollars in the bank. So we're good!\"\n\nThe adult humor went right overt the seven-year old's head, but the smile was back in full bloom.\n\n\"As soon as it downloads, you can put in your user name and blast off.\"\n\n\"Awesome!\" the boy said.\n\n\"And what do you say?\" his mom called out as she filled a trash bag and tied it off. \"And while you're waiting, the trash needs to go outside.\"\n\n\"Thanks, Jeff! Okay, Mom!\" he called out as he jumped up to grab the bag as his game downloaded from the App Store.\n\n\"Need some help?\" Jeff asked as Todd picked up the bag.\n\n\"No, thanks. I got it!\"\n\nJeff did open and close the door for him then said, \"He is such a good kid.\"\n\n\"I just can't believe how different he is with you around.\"\n\nHe walked over to Suzanne and touched her lower arm and said, \"How about you? Is it different for you with me being around?\"\n\n\"It is,\" she told him, a happy smile on her face.\n\n\"In a...good way?\" Jeff asked as he moved closer.\n\n\"Uh-huh. Very good.\"\n\n\"Good enough for me to....\"\n\nJust as their lips met the door flung open.\n\n\"All done!\" Todd called out.\n\n\"Easy!\" his mom said just before he slammed the door shut.\n\n\"Sorry!\"\n\nOnly then did Todd realize how close Jeff was to his mom. When he did, he smiled.\n\n\"What's that for?\" his mom asked.\n\n\"I'm just happy, Mom,\" he told her, a new, mischievous grin on his face.\n\n\"Go play your game!\" she said before turning back to Jeff.\n\n\"I didn't really get a chance to show you how much I'm glad you're...around me,\" Suzanne said as she put her arms around Jeff's neck.\n\n\"Oh. Me likey how much you like me. Being around you,\" he told her as he wriggled his eyebrows.\n\nSuzanne smiled but didn't laugh. She looked at him and realized that in spite of the age difference, she might just be falling for this handsome, younger man she still knew very little about and kissed him anyway.\n\nShe didn't see her son turn and look nor did she know he pumped his fist and said, \"Yes!\" very quietly. Nor did she care as the tip of Jeff's tongue momentarily touched hers.\n\n\"I uh, I really like being around you,\" he told her quietly when the kiss ended.\n\n\"Yeah? I'm kind of liking this myself,\" she replied as Jeff took her in his arms and held her close.\n\nShe took his hand when he put his arms down and led them back to the couch.\n\n\"You all set?\" Jeff asked the happy boy.\n\n\"Uh-uh. I'm already gathering my first diamonds,\" Todd told him as though Jeff knew all about the game.\n\n\"Nice!\" Jeff said like he understood as he sat back down beside the boy who was fully immersed in the animation on the screen.\n\nHe and Suzanne talked quietly in between the calls of, \"Yes!\" and \"Dang it!\" that regularly came from the Head Minecrafter.\n\nShe hated to ask, but not knowing was killing her, so she casually brought up work again.\n\n\"So you left the Navy and you're in between jobs?\"\n\nJeff really wanted to tell her the truth, and even though he'd always been an excellent judge of character, he needed to be sure before sharing this with her. So rather than tell her about that part of his life he told her something else. It was true, too, but it wasn't the truth.\n\n\"Right. I was deployed all the time, so over the years the money kept piling up. I had an older car I got from my grandfather when I graduated from Annapolis, so I didn't even have a car payment.\"\n\n\"Oh, wow. That was incredibly nice of him,\" Suzanne said.\n\nHe chuckled then said, \"It was almost five years old when I got it. How many miles do you think were on it?\"\n\nShe saw the smile on his face and assumed it was well worn.\n\n\"I don't know. Over a hundred thousand?\"\n\nHe shook his head and started laughing.\n\n\"Two hundred thousand?\"\n\n\"Uh-uh. You ready for this?\" he asked.\n\nShe didn't say anything, so Jeff leaned closer and whispered, \"Not quite fifteen thousand.\"\n\n\"Wait. What? Fifteen thousand? After FIVE years? I drive more than that every year!\"\n\n\"My grandfather was a retired Navy Commander who'd been all around the world so many times that when he retired after 25 years he swore he'd never travel anywhere again.\"\n\nJeff shook his head and laughed then finished the story.\n\n\"He didn't stay home to avoid driving. If he wanted to go somewhere he went. He just had no desire to leave the home he and my grandmother bought after years of living on base or renting. They put a ton of money into it, and it truly was his castle.\"\n\n\"He sounds amazing.\"\n\n\"He was. He recently passed away just a year after my grandmother died. I'll never know, but it may have been from a broken heart. They were married for 57 years.\"\n\n\"I'm so sorry, but also...wow. Fifty-seven years. That's simply...amazing.\"\n\n\"It is. He really was an amazing man. Unfortunately, he and my dad had a serious falling out when I was too young to remember. They rarely spoke when I was growing up, and I didn't get to know my grandfather until he retired. A few short months later I was off to the Academy, and....\"\n\nSuzanne put her hand on his then said, \"And now you won't have the opportunity to get to know him even better.\"\n\nJeff nearly spilled the beans then and there but decided to hold off.\n\n\"So how's Todd doing in school?\" he asked, hoping the change of subject would be welcome.\n\nSuzanne smiled telling him it was before saying, \"Good. He's such a smart boy.\"\n\nShe looked over at her son who was still fully immersed in Minecrafting, whatever that was.\n\n\"Academically, he does really well.\"\n\n\"But?\"\n\nEven though her son wasn't paying any attention she still lowered her voice.\n\n\"He gets teased quite a bit.\"\n\n\"What about? Being skinny or wearing glasses?\" a very concerned Jeff asked.\n\n\"No. Well, he has been called 'Skinny Mini' and 'four eyes' a time or two, but most of it is due to our rather...odd...last name.\"\n\nNow confused, Todd turned her way a bit then said, \"What's so unusual about Rivers?\"\n\n\"That's my maiden name,\" Suzanne explained.\n\n\"Oh, right. Sorry. So your son is...Todd Odd?\" Jeff asked with a little wince.\n\n\"Yes. Todd Odd. He needs braces, too, and occasionally they pile on with that. His teeth aren't horrible, and braces will easily correct them, but it's just one more thing for him to deal with. Evidently, there's this boy named Danny Hale, who calls Todd 'the Odd Man out'.\"\n\n\"The odd man out, huh? How...original,\" Jess muttered before looking at Suzanne and saying, \"I uh, I was teased a lot too, when I was his age,\" Jeff quietly replied.\n\n\"You? Why? You're....\"\n\nShe gave his 'yummy' body another up and down then said, \"Gorgeous.\"\n\nJeff laughed and thanked her before telling what his childhood was like.\n\n\"For starters, my teeth were worse than Todd's. A lot worse.\"\n\nSuzanne gave him a 'you've gotta be kidding' look before he smiled at her making her disbelief even stronger.\n\n\"And I was....\"\n\nHe lowered his voice even more then said, \"A fat kid.\"\n\n\"You? You were...heavy?\"\n\n\"Oh, yes. By the ninth grade I was a good 40 pounds overweight.\"\n\n\"I...I can't even imagine,\" Suzanne told him as she tried to imagine this incredibly fit, very sexy man looking like that.\n\n\"My grandfather was the motivation for me to change.\"\n\n\"How so? I mean, you said you barely knew him, right?\"\n\n\"That's true. But he came back here one Christmas, and although my dad didn't want him at our house, Grandpa waited for me to come outside one day then called me over. I recognized him and he gave me this huge hug, and I think he may have even had tears in his eyes.\"\n\nJeff felt bad when he saw Suzanne's tearing up and told her he was sorry.\n\n\"No. Keep going. It's just so sad, and it makes me feel bad for you.\"\n\n\"Thanks, but it's all good now--as they say. Anyway, we walked around the block a couple of times and somehow the subject of fitness came up. I hated running or any kind of exercise for that matter, but my grandfather explained how it was possible to go from where I was to being 'the biggest, baddest stud in high school' before I graduated.\"\n\n\"So you must have taken his advice?\"\n\n\"I did. It took me a while to get going, but I started off by walking around that same block three times. Then four. Then five. Then ten. Eventually I ran around it once and from there I ended up on our track and cross country teams my junior year. I was eating right and running 30-40 miles a week and even started doing resistance training. Not to look like Mr. Universe but for the muscle tone.\"\n\nSuzanne looked at his sexy body again then told him it had worked for him.\n\n\"Extremely well, if I may say,\" she added.\n\n\"You look very fit yourself,\" Jeff told her as he also did a very quick once-over.\n\n\"I do Pilates. I know I should do more, but that keeps fit...and sane.\"\n\n\"The divorce?\" Jeff correctly assumed.\n\n\"That was the worst of it, and it's the cause of the other huge area of stress which is money. I'm not complaining. I had to get out of that relationship. But it's been a huge struggle for us, and I often end up eating junk food just because it's less expensive.\"\n\nJeff suddenly felt an even stronger connection with this beautiful, older woman and came 'this close' to telling her.\n\n\"I think you're amazing,\" he told her as he took her hand in which was still on his.\n\n\"Me? I'm just a divorced, middle-aged woman trying to raise a son...without a father. That's hardly amazing.\"\n\nJeff reached up and brushed her hair back then said, \"You're not giving yourself enough credit, Suzanne. You've gone through an incredibly painful time thanks to your ex, then the divorce, and yet here you are working full-time and not just raising Todd, but doing a remarkable job of it.\"\n\nThis time Jeff had no doubt about her eyes filling with tears. As the first one fell on her cheek, he gently wiped it away and smile at her.\n\n\"You are amazing, Suzanne.\"\n\nHe moved a little closer toward her then whispered, \"And you are so beautiful.\"\n\nShe wanted to make a 'pfft' noise to play down the compliment, but as his lips touched hers, she wanted to kiss him back more than anything else and just closed her eyes and enjoyed this tender moment.\n\n\"You're pretty incredible yourself,\" she quietly said as their lips parted.\n\nA little boy's giggle startled her, and as she looked Todd's way she saw him smiling at his mom.\n\n\"Is something wrong?\" she asked, now concerned about getting too close with a man--of any age--she really barely knew.\n\n\"Uh-uh. Everything is just right!\" her son said as he smiled at his mom and the older-to-him man sitting next to her.\n\nIt wasn't really late, but Jeff looked down at his watch and said it was to give Suzanne an out if she wanted to be alone.\n\n\"Oh. I...I guess it is,\" she said, thinking it was Jeff looking for a way to leave.\n\n\"I'm glad you let me come over,\" he told her as he again brushed her hair back.\n\n\"Me, too. This was really nice.\"\n\n\"I want to see you again, Suzanne. Soon.\"\n\n\"I...I'd like that.\"\n\n\"May I call you tomorrow?\"\n\n\"Yes. Anytime.\"\n\n\"Then let me just say goodbye to the Minecrafter in Chief, okay?\"\n\nSuzanne not only laughed, she felt as good as she could remember feeling in many, many months, and the realization of why she felt that way was crystal clear and now standing directly in front of her.\n\nJeff held out his hands and helped her stand up, too, then pulled her close and held her for a few seconds before moving back and kissing her again.\n\n\"Jeff?\"\n\n\"Yes?\"\n\n\"Thank you. Again. For...everything.\"\n\n\"No. Thank you,\" he said with a devilish smile before adding, \"for running me over.\"\n\nSuzanne made an 'uh' kind of sound as though she were hurt before returning his smile.\n\n\"Yeah. You see, if you'd been paying attention, I'd have never met you.\"\n\n\"Hey! You said you darted out in front of me!\" she replied, still pretending to be defending herself.\n\n\"I kinda did say that, didn't I,\" Jeff replied as he played along, too. \"Whoever was at fault, I'm just glad it happened.\"\n\n\"Am I terrible person if I say, 'Me, too'?\"\n\n\"Uh-uh. You're definitely not terrible.\"\n\nHe pulled her close again then whispered, \"You're wonderful. And...sexy as hell!\"\n\nShe playfully pushed him away and feigned more offense as she tried not to laugh.\n\n\"Well, aren't you just all kinds of forward!\"\n\n\"Are you complaining?\" Jeff asked as he pulled her back and put his arms around her waist.\n\nShe put hers around his neck, then told him, \"No. Not at all. Not even a little bit,\" before she kissed him more passionately than she ever had.\n\n\"See. You are amazing,\" Jeff told her after their first real French kiss ended.\n\nKnowing better than to keep putting herself down for being older and not as attractive--at least in her mind--she accepted the compliment then returned it.\n\n\"Okay. So let me sit down with the Big Guy over here for a minute and I'll be out of your hair.\"\n\nJeff sat next to Todd and asked him to show him what he was doing. He was still mining for some kind of ore so that he could build stuff, but what Jeff really wanted to do was build a connection.\n\n\"Okay. I get it,\" he said even though the game held no interest for him.\n\n\"Are you getting ready to leave?\" Todd asked, trying not to sound disappointed.\n\n\"I am. I just wanted to spend a little time with you first.\"\n\n\"Then I'll save my progress so you can have your iPad back.\"\n\nJeff used his phone 99% of the time, so he said, \"If it's all right with your mom you can keep it until I see you again.\"\n\nThe boy sat up straight, looked at his mom, and waited.\n\n\"That sounds okay,\" she told her son as she smiled at Jeff.\n\nBefore she could remind him, Todd said, \"Thank you!\"\n\nJeff mussed the boy's hair and told him he was welcome.\n\n\"So listen. If someone like...Danny Hale...ever you know, teases you again....\"\n\nTodd's eyes were wide open as he looked up at Jeff.\n\n\"Just say, 'Inhale, exhale' and that should do it.\"\n\nTodd didn't really fully understand it, but he couldn't wait to try it out.\n\nTo lighted the mood, Jeff mushed his hair again then said, \"Okay, dude. I gotta jet.\"\n\nTodd had never heard that before but understood it meant 'to leave' and said, \"Bye, Jeff!\"\n\n\"I'll see ya soon, okay, buddy?\"\n\n\"See you soon!\" Todd told him as he buried his head in the screen again.\n\n\"That was so nice of you,\" Suzanne said as she walked him to the door.\n\n\"He seems to enjoy it.\"\n\n\"That, but the...advice you gave him.\"\n\n\"I got picked on mercilessly, and I've never forgotten how it felt. Anything I can do to help someone 'level the playing field' makes me feel a little better.\"\n\nHe saw the look of gratitude in Suzanne's eyes but only said, \"Oh. He'll need a charger. Let me go get it.\"\n\n\"I'll walk out with you,\" Suzanne offered.\n\nWondering if she was going to say something about the iPad offer he agreed.\n\nWhen they got outside Jeff asked her if she was upset.\n\n\"What? Why would I be upset?\"\n\n\"Because I didn't check with you first. About the iPad.\"\n\n\"No! Heavens no. I'm truly grateful. He gets so bored, and that makes me feel very guilty. Along with being broke, and him not having a dad, and....\"\n\nThey were at the car where Jeff turned to her, took her hands in his, then said, \"You really need to stop that. You're doing just fine...Mom.\"\n\nShe smiled as her heart swelled even as she wondered how this could be happening. Jeff seemed too good to be true, and she knew that if something appeared to be that way it probably was.\n\nHe kissed her softly then told her, \"I really am very happy we met, Suzanne.\"\n\n\"I am, too,\" she told him, feeling slightly more secure about whatever this was.\n\n\"I'd like to do something with you guys. If you wouldn't mind.\"\n\n\"Hmmm. Let me see. My son adores you, and I think you're amazing. So....hmmm.\"\n\nJeff laughed then told her he'd call her the next day.\n\n\"And unlike a lot of guys, I really will call you.\"\n\nSuzanne laughed then stood on her toes and kissed him again. He kissed her back for several seconds, and both of them felt waves of emotions sweep over them.\n\n\"Wow,\" she said when the kiss ended.\n\n\"Yeah. Wow,\" Jeff agreed. \"Oh. The charger!\"\n\nHe opened the door, grabbed it, then handed it to Suzanne.\n\n\"Thank you,\" she said. \"And one more time, thank you for everything.\"\n\n\"I'll talk to you soon,\" he promised before giving her a quick peck and getting in.\n\nShe stood there and waved goodbye, and as she went back inside, she realized she hadn't felt this way since she was maybe 22 years old. And the person who was causing her to feel that way was only 27 himself.\n\nJeff didn't go directly home. He pulled over a few blocks from Suzanne's and got out his phone.\n\n\"Hi. I know it's getting late, but are you still delivering?\"\n\nFive minutes later his order was filled and 20 minutes after that it was on its way.\n\nTodd was just getting ready for bed when someone knocked on the door.\n\n\"I'll get it!\" he called out.\n\n\"No. Honey, it's late. Let me check and see who it is, okay?\"\n\nSuzanne went to the door, asked who it was and heard, \"Krogers delivery.\"",
        "She opened the door a tiny bit and saw the boy of maybe 17 standing there with bags of all around his feet.\n\n\"There must be some mistake,\" she said as Todd squeezed in to see what was going on.\n\n\"Hey, champ! You wanna help me bring these in?\" the boy asked.\n\n\"Can I, Mom?\"\n\n\"I...I still don't know what's going on.\n\n\"If you're Suzanne Rivers, then these are yours.\"\n\n\"I am, but I still don't know what's going on.\"\n\n\"Sorry, ma'am. I just deliver. Do you want me to bring them in or not?\"\n\nNow very curious, Suzanne stepped over the threshold and looked into the bags. There was fresh milk, granola cereal, bread, and even the brand of coffee she drank.\n\n\"So what'll it be?\" the boy asked a little more impatiently.\n\n\"These are really mine?\"\n\n\"Yes.\"\n\n\"And I won't have to pay you for them?\"\n\n\"Nope. They're paid for. And so is my tip.\"\n\nThe boy smiled then said, \"A hundred-dollar tip if I may say so--the biggest I've ever had.\"\n\nThe tip comment went right over her head as she tried to understand what was happening.\n\n\"Okay,\" she finally said.\n\nBefore she could say another word Todd was grabbing two light bags and carrying them in as the older boy grabbed one filled with chicken and shrimp, foods she hadn't eaten in...too long.\n\n\"Thank you. So much,\" she told the boy as he got ready to leave.\n\n\"My pleasure, and if you know who left me the tip, please tell him thank you.\"\n\n\"I...I will,\" Suzanne said as the light came on.\n\nShe grabbed her phone and when Jeff picked up she asked him if he'd gone to a store.\n\n\"What? What kind of store?\" he asked, again holding back the whole truth without lying.\n\n\"A...a grocery store.\"\n\n\"Tonight? No. I definitely did not go to any grocery store tonight.\"\n\n\"Oh. Uh, sorry. It's just that the most wonderful thing just happened, and I thought maybe it was you.\"\n\n\"If it makes you happy, I'd love to claim the credit, but I didn't go to any store of any kind on my way home.\"\n\n\"Okay. I'm sorry to bother you.\"\n\n\"You're not bothering me. I love hearing your voice,\" Jeff told her, causing her to momentarily forget about the treasure trove of food.\n\n\"Yeah, I kinda like hearing yours, too,\" she told him rather sweetly.\n\n\"Whatever's going on, I'm happy for you.\"\n\n\"It's just so...uncanny. I mentioned we were a little short on food, and then...all this just shows up.\"\n\nJeff laughed quietly then said, \"Well, you know what they say, right? God moves in mysterious ways.\"\n\n\"Yes. Yes, they do say that,\" she agreed, even more dumbfounded now that Jeff wasn't the reason why.\n\n\"Heather!\" she said out loud, causing Jeff to repeat her name.\n\n\"Sorry. I just think I figured out what's going on here, and I need to give her a call to thank her.\"\n\n\"Okay. Sure. G'night, Suzanne.\"\n\n\"Good night, Jeff,\" she said before hanging up and dialing another number as Todd found the things he liked and set them out to be put away.\n\nHeather had no idea what she was talking about and suggested Jeff until Suzanne told her about the call she'd just made to him.\n\n\"Maybe just accept that your fortunes are changing,\" her friend suggested. \"You met Jeff and now this? What else could it be?\"\n\nSuzanne was still perplexed, but Heather was right. She needed to stop trying to play detective and start being grateful. She thanked her friend, hung up the phone, then started putting things away; many of those things being very expensive items she couldn't afford to buy even with a steady paycheck.\n\nWhen Todd got up the next morning, he smelled something that made him go straight to the kitchen.\n\n\"Is that bacon?\" he asked.\n\n\"It is. And I made scrambled eggs and toast, too. Oh, and there's orange juice.\"\n\n\"Wow! Best breakfast ever!\" her son said as he sat down to eat as his mom did the same.\n\nThat day at work she asked Heather about the food again and received another, \"It wasn't me,\" reply.\n\nShe was still thinking about it around noon when her phone rang.\n\n\"Jeff? Hi!\"\n\n\"I promised I'd call. Is this is a bad time?\"\n\n\"No, I'm just getting ready for lunch, although I'm still full from breakfast.\"\n\n\"Right. The mystery delivery,\" he said with a chuckle.\n\n\"It was so good! I just wish I knew who it was so I could thank them. We haven't had a meal like that in ages.\"\n\n\"In that case, rather than ask you to have dinner with me, how would you two like to spend Saturday afternoon at an arcade with me?\"\n\nBefore she could answer Jeff told her, \"They have Skee Ball, so I don't see how you can turn that down.\"\n\nSuzanne laughed and told him that sounded wonderful before adding, \"Todd will love it, too.\"\n\n\"I'll stop by around 11 and take you guys to lunch first, if that sounds okay.\"\n\n\"It sounds very okay. And if you'd like, I could actually make dinner for you one night before then.\"\n\n\"You had me at 'dinner',\" Jeff told her, causing her to laugh.\n\n\"Is tomorrow okay? Say...7o'clock?\"\n\n\"I'll be there. With a bottle of wine.\"\n\n\"You don't have to that,\" she told him.\n\n\"It's the least I can do.\"\n\n\"Okay. I'll see you then.\"\n\n\"Bye, Suzanne.\"\n\nThe food mystery wasn't mentioned at dinner or during their time at the arcade. Suzanne and her son were too busy enjoying their time with Jeff to think about anything else. They really did play Skee Ball as well as laser tag, something neither Todd nor Suzanne had never done before. The best part of the game was when Jeff snuck up on them, shot them both, then kissed her as he apologized for 'killing' her.\n\n\"You can turn on my lights anytime, sailor,\" she teased after the kiss.\n\n\"I'd like that,\" he told her in a way that chills through her body, and later that night after Todd was asleep, Suzanne asked him if he'd like to 'light her up'.\n\nJeff laughed quietly but kissed her so passionately it made her knees weak. He felt her buckle before he picked her up and carried her to the bedroom where he lit up every light she had a couple she didn't know existed.\n\nAs they lay in one another's arms Jeff squeezed tight then said, \"I don't want to scare you, but I'm...I'm really falling for you.\"\n\nSuzanne's heart had just slowed down after her second orgasm and sped up again when she heard those words.\n\n\"I still don't understand this, but knowing you feel that way makes me happier than I can ever remember being.\"\n\nShe rolled over on top of him then told him, \"And the truth is I'm falling for you, too.\"\n\n\"Yeah?\" a smiling Jeff asked.\n\n\"Uh-huh. Very much so.\"\n\nHe flipped her over causing her to yelp then laugh before he entered her again and kissing her like she'd never been kissed before.\n\n*****\n\nSix months later\n\n\"What do you think?\" Jeff asked when he opened the door to their new house for her.\n\nAfter having met Suzanne, Jeff stayed at his father's place until this new home was finished. He would have a room of his own here for as long as he lived, but he was too ill to make the trip until they were ready to move in.\n\n\"Oh...my...gosh!\" she said as she looked around. \"It's amazing!\"\n\nTodd had already run off to find his room as Jeff took his mom's hand.\n\n\"So you like it?\"\n\n\"I LOVE it!\" she told him.\n\n\"And I love you,\" she told her handsome boyfriend.\n\nWhen Todd came tearing back to find them, Jeff asked him to slow down for a moment. He did so then waited for whatever Jeff had to say.\n\n\"You know I love your mom, right?\"\n\n\"Uh-huh.\"\n\n\"And you know I love you, too, right?\"\n\nThe boy smiled, nodded, then said, \"I love you, too, Jeff!\"\n\n\"So I was thinking maybe we could, you know....\"\n\nHe reached into his pocket and pulled out a small, white box and got down on one knee before looking at Todd then up at the beautiful, older woman he loved.\n\n\"Be a family.\"\n\nTodd was bursting at the seams as Jeff asked his mom to marry him. When she started shaking and crying he knew that meant 'yes'. She couldn't talk, but she was nodding her head.\n\nJeff asked Todd to take the ring out for him and help him put it on his mom's left hand. As they slid the ring on her finger, Jeff put his arm around the boy, stood up with Todd in one arm and put his other arm around Suzanne.\n\n\"I love you both so much,\" he said.\n\n\"And we love you,\" Suzanne told him through her tears of joy.\n\n\"That's right! We both love you!\" Todd told him before hugging the older man he loved like a father.\n\n\"Then maybe we should think about moving our stuff in here.\"\n\n\"Yeah! Into our new home!\" Todd said as the three of them held one another close for a good long time.\n\nNot long after they first made love, and Jeff was sure she loved him, too, he told her why he hadn't been working.\n\n\"Wait. Your grandfather was...a millionaire?\" she asked in disbelief.\n\n\"He was. But more like a multi-millionaire. I had no idea. He lived so frugally other than the house. But he'd saved and invested for years. He had stock in Apple and Coca Cola from way back and a ton of other tech stocks. All in all he was worth about $5.7 million. Plus the house.\"\n\nToo stunned to speak, Suzanne just listened.\n\n\"When my grandfather passed away, I had no idea why his attorney wanted to see me. And you can imagine my surprise when he informed my grandpa left everything to me.\"\n\nSuzanne had never cared about money and didn't love him any more or less because of the amount in his bank account. All she cared about was the way he made her feel and the way he loved her and her son.\n\nIt would be nice to never have to worry about money again, but were Jeff Randle anyone else, no amount of money could have made her love him. But because of who she was, she'd fallen deeply in love with and told him so again.\n\nNow they had a home of their own beyond her wildest dreams. A home where Todd could grow up, feel same, and have a mother and a dad who loved him like his own; a dad he'd been calling 'dad' for the last month or so. Little did they know he'd have a baby sister just 18 months later, but when Tiffany Anne Randall arrived, her big brother doted on her until he was old enough to start liking girls his own age.\n\nAdding to their good fortune, Jeff started teaching high school and coaching football. All the money he made from the new job went to charity starting will all new uniforms for every sports team, the school's marching band and the cheerleaders followed by new computers. All of it was done anonymously, and the community also benefited in many ways.\n\nThe braces Todd had needed came and went, and the glasses had been removed thanks to Lasik eye surgery. By the time Todd Randall, whose biological father had lost all interest in his son's life and let him be adopted--for a hefty fee--was a senior in high school, he was the most attractive and athletic boy in school.\n\nAnd with his father's service history and his 3.98 GPA and having lettered in football and wrestling (as well as volunteering at a homeless shelter and a hospice) it was no surprise when Todd was accepted to attend the US Naval Academy just like the dad who'd adopted and raised him.\n\nWhen he graduated four years later, his mom, dad, and not-so-little sister were there. Sadly, Jeff's father wasn't with them. He'd been at their wedding but was getting worse by the day, and just three months later they said goodbye to him.\n\nThose thoughts and more ran through Jeff's mind just before saying something to Suzanne.\n\n\"We did good, Mom,\" Jeff told his still-beautiful wife.\n\n\"Yes. Yes, we did, didn't we?\" Suzanne agreed.\n\nHe leaned her way, took her hand, then said, \"I am SO glad you ran me over.\"\n\nShe gave him a playful elbow then laughed.\n\n\"Yeah. Thank goodness for that whole 'hit and run' thing, huh?\"\n\nJeff chuckled then told his wife he loved her as they watched the graduating class throw their hats (or for the future Marine second lieutenants, their 'covers') into the air.\n\nWhen they did, Tiffany cheered for her brother then asked her father, \"Dad? Can girls be Navy SEALs?\"\n\nShe was too old to pick up now, but he gave her a hug and told her she could be anything she wanted as long as she was willing to work hard enough to earn it.\n\nThat was all she wanted to hear as she ran to find her brother and tell him how proud she was of him, and that she wanted to be just like him.\n\nOnly Suzanne Randall saw the tears in her handsome, younger husband's eyes as he watched their daughter run off. She squeezed his hand, rested her head on his shoulder then blinked away a few of her own."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "love",
        "romance",
        "older woman",
        "younger man",
        "attraction"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/hit-and-run-4"
}