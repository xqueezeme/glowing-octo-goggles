{
    "title": "The Trail West Ch. 08",
    "pages": [
        "Chapter 8 -- The Conclusion\n\nPlease read Chapters 1-7. They will give you a better understanding of the characters, situations, and obviously how we got to this point in the tale.\n\nThere are no graphic sex scenes in this story. As usual constructive comments and emails are welcome and appreciated.\n\nThank you for taking the time to read my tale and please enjoy.\n\n******************\n\nLate Thursday afternoon, the group set up a base camp and made ready to start the round up the next morning. Their camp site was at the entrance to a box canyon where they could hold the cattle until they started home. The canyon had water and some grazing for the captured animals.\n\nEach of the men had brought two horses with them; Charley White loaned a trained cow pony to Jacob to go with his Puma. Josh brought Diablo of course and his second horse was Joey.\n\n\"I'm surprised you didn't bring Sunny,\" Red said. He had brought Jasper and Queenie.\n\n\"Don't think I could've got him away from Danni. She's just about takin him for her own and I don't think Sunny would leave her either. Besides, Joey is a better stock horse than Sunny; he's smaller and quicker. He's just the horse for this rough country.\"\n\n*****************\n\nBy Tuesday evening five days later the men had rounded up 87 cattle. The box canyon was getting full; there wasn't a lot of room for many more animals. It had been a hard five days work; riding from sunup until sundown through scrub brush, cedar trees, and lots of rocks.\n\n\"One more day I think,\" Red offered at the campfire Tuesday night. \"Don't think our corral there will hold many more and the cattle are getting harder to find. We'll make one more sweep tomorrow morning and get geared up to leave Thursday early. That suit you boys?\"\n\nJosh, Jerry, and Jimbo Hughes, the hand from the Lazy L, all agreed it was time to head home. Jacob was the only hold out.\n\n\"I didn't get a chance to work the round up. Josh, I'd like to do more than just baby sit the cattle. Can I go out with you tomorrow?\" Jacob asked with a hopeful look.\n\nJosh had to smile; Jacob would do. He'd done most of the work around the camp, taken care of the remuda, and guarded the animals already collected. He never complained and was always ready to help take care of the horses after a hard day of riding.\n\n\"Okay Jacob. I'll stay here and be the baby sitter tomorrow. But you take Charley's extra horse; you don't want to get Puma all cut up in the brush. You can ride with Jerry; he'll show you what to do.\"\n\nJacob was awake and up before anyone else the next morning. He'd made coffee and was a bundle of nerves waiting for the men to ride out. When they left Jacob had a big smile on his face; he was finally going to be a cowboy.\n\nJosh left Diablo, ground tied, at the head of the box canyon and started to pack up unneeded items at the camp. The presence of the big horse would keep the cattle bunched in the canyon. He heard a strange noise just over a little rise, mounted Joey and went to investigate. Sounded like someone riding through the brush he thought.\n\nHe topped the rise and as he came around some cedars a rifle shoot rang out. Joey staggered, coughed, and went down in a heap. Josh was thrown and rolled as he hit; he stood up a little dazed. He shook his head to clear the cobwebs and saw four men riding toward him. Before he could pull his pistol the lead rider had a rifle pointed at his chest.\n\nJosh recognized Jake Stillwell and the other three drovers that he had run off the Lazy L. Douglas, the man that Josh had shot that day was with them and had an evil grin on his face.\n\n\"You should'a killed me when you could've Kelly,\" Stillwell said. \"Looks like it's our turn.\"\n\n\"Now I'll get you for shootin me,\" Douglas added pointing a pistol at Josh.\n\n\"You didn't ride all this way just to hunt me down Stillwell,\" Josh said ignoring Douglas and playing for time. \"You could have found me a lot closer to home.\" He hoped the men would relax a little and give him a chance to pull his pistol to defend himself. \"What'da you doing here?\"\n\n\"Heard you talkin in Victor when you stopped to get some supplies. Thought we'd let you do all the work and then take the cattle.\"\n\n\"So take em and go,\" Josh replied.\n\n\"We will, but first we're gonna settle our debt with you. After you threw us off the Lazy L the word got around and no one would hire us so we've living on slim pickins. When we're done with you we'll go find McCall and settle up with him too.\"\n\n\"You won't have to go far to find me; I'm right here.\"\n\nStillwell and the others spun around and saw Red sitting on his horse about 30 feet behind and to the side of them with his pistol drawn. Douglas turned back toward Josh raising his pistol but before he could bring the gun to bear Josh pulled his own pistol and shot him in the chest. He brought down another man and turned toward the others. Stillwell and the other man were on the ground; one dead and one fatally wounded. Red had put them down.\n\nRed rode over to Josh, \"Are you okay partner?\"\n\nJosh nodded and holstered his pistol. \"Little shook up from being thrown but I'm okay. Glad you decided to come back when you did.\"\n\n\"I didn't find enough cattle to stay out so I thought I'd come back and take it easy with you sittin around camp,\" Red replied with a big grin. \"Decided to make one last sweep through that gulley yonder. I heard the rifle shot and then heard you and these fellers talkin. Thought I'd better come and see what kind of trouble you'd got yourself into.\"\n\nJosh didn't return Red's grin and looked at the dead men. \"I guess we should bury em.\"\n\n\"Why? They wouldn't have buried you; they'd left you to rot. Besides coyotes and varmints got to eat too. Let's get back to camp.\" \n\n\"We just can't leave them here Red. It's not right.\"\n\nRed disagreed but knew that his friend was upset at the killings. Josh wasn't squeamish about defending himself or his friends but the wasted lives always bothered him. So Red didn't argue with him, he just said, \"Sorry about Joey. He was a good horse.\" \n\nJosh nodded and pulled his saddle and gear off his dead horse. He had tears in his eyes as he climbed up behind Red.\n\n\"Jasper now you behave yourself or I'll beat you with a brandin iron,\" Red told his horse. As they rode Red suggested that they roll the bodies in ground cloths and the next morning put them across their saddles. They could drop them off with the law in Victor.\n\nThey hadn't been in camp for more than a few minutes before the other three members of the crew came in riding hard. Jerry was the first in, holding his pistol at the ready. When he saw Josh and Red he holstered his weapon and said, \"We heard shots. What happened?\"\n\nRed quickly told the three about Stillwell and the gun battle on top of the rise. After answering a few questions Red took Jimbo and went back to the scene of the gunfight. They wrapped the bodies and rounded up the dead men's horses.\n\nAt daybreak Red and Josh started the herd back to Chico Basin. The dead men were tied across their saddles and lead ropes had been attached to their horses. It was Jerry's unpleasant task to lead that death train until they reached Victor. Jacob took Jerry's place on the left flank of the herd.\n\nLate that afternoon they bedded the cattle down just outside of town. Josh and Red went to find whatever law there was in Victor, leading the horses carrying the bodies. They took them to the undertaker and dropped the dead men off. The undertaker said that the town sheriff would be back to town around 4 PM.\n\n\"How much to bury a man?\" Red asked.\n\n\"Twenty dollars,\" answered the undertaker.\n\nBefore Josh could offer to pay for the burials, Red pointed to the bodies and said, \"Their horses, saddles, and guns should cover the cost, don't you think?\"\n\nThe man nodded, not wanting to cross the stranger with the wild eyes. Besides, he would make a very nice profit from selling the gear of the dead men.\n\nRed continued, \"The Sheriff will want to see the bodies before you put them in the ground. My name's Red McCall, this is Josh Kelly; we'll wait at the saloon until he gets back to town.\"\n\nJosh went with Red to the saloon to wait for the Sheriff. He really wanted to go back to camp but couldn't leave his friend to face the law by himself. It was a case of self defense but they were strangers to the area and sometimes the law was funny.\n\nThey sat at a table and Red had a quick whiskey while Josh nursed a beer. Red had just sat back down after getting a beer for himself when there was a commotion behind him.\n\n\"Is there a back shootin, horse stealin, cattle rustlin son of a bitch name Red McCall in here?\" A short, solid looking man about 40 asked. \n\nRed stood with a wild, mean look in his eyes and turned to face the man insulting him. When he saw the man asking about him, he smiled and then laughed. \"Watch who you're calling a son of a bitch, you old tub of lard,\" Red replied.\n\nJosh had stood when Red did and was prepared for a fight; his partner wouldn't let anyone get away with those deadly insults. He was surprised and puzzled at Red's reaction. The man confronting them had a Sheriff's badge pinned to his vest.\n\nRed saw that Josh was primed for trouble and put his hand on his friend's gun hand. \"Josh, this old fart is Jackson Slaughter. He's too lazy to find real work, so he came out here and became a Sheriff I guess,\" Red explained. \"He's John's older brother; Jackson is my cousin too.\"\n\nJackson shook hands with Josh and grabbed Red in a bear hug and spun him around. \"Damn, it's good to see someone from back home; even if it is a no account scoundrel like you.\"\n\n\"Put me down you old coot. Pa told me you'd come out to Colorado, but he didn't know where. Said you hadn't written or anything since you left,\" Red remarked. He paused and then asked, \"Why'd you leave anyway?\"\n\n\"My family didn't own slaves, never did and never would; didn't see any sense in gettin shot up in that damn stupid war over something I didn't abide with. So I left in late '60. Heard John went to fight in early '62; don't know if he's still kicking or not. My folks aren't real happy with me so I don't have much contact with them.\"\n\n\"John's fine, at least as of last month, according to the letter from Pa. He joined the Confederate Army but got real bad sick and was sent home. Now he's riding with the Texas Rangers.\" Red explained. \n\n\"Sorry to hear about your brothers Red. I did get word about them,\" Jackson said putting his hand on Red's shoulder. After a sad moment, he continued, \"So tell me about those four bodies over to the undertaker's.\"\n\nRed explained about Stillwell and the other dead men. \"They tried to kill us Jackson; we couldn't allow that to happen. Josh said we should bring them to the law; I wanted to leave them out on the prairie.\"\n\n\"Those boys were no good; I knew it and run them out of town just after you came through. But I'm glad you brought them in. You won't have any trouble over the shootin; not with what I knowed about them. Now, can you come over to the house for supper?\" \n\n\"No Jackson, we have to get back to our herd. Can't stay for a visit this time, but you're invited to my wedding next spring. I'm living just outside of Fountain; I'll write and tell you all about it,\" Red responded.\n\nOn the way back to camp Red asked Josh, \"Feel better now?\"\n\nJosh nodded.\n\n*******************\n\nTwo days later they completed the drive from Cripple Creek to the CBC. Josh and Red cut out about half of the herd and pushed them toward the grazing grounds on the Maggie M. Jerry and Jimbo drove the rest of the herd to the Lazy L.\n\nDanni was at the Maggie M, home for the weekend. She was at the corral with Sunny hoping Josh would come home soon; she wanted to see him before she had to go back to Fountain. \n\nSarah was the first to hear the cattle, mooing and bellowing as they got closer to the ranch house. She yelled, \"They're back.\" Sarah made a running leap, mounted her horse, and tore out toward the herd. Danni was right behind her on Sunny. The slowed as they got close to the cattle to keep from spooking them.\n\nAt point, leading the herd was their brother Jacob. He was dirty and covered in dust and looked dog tired; but he rode tall and proud. Josh and Red rode drag. Drag was the worse place to be on a cattle drive; the riders were almost obscured in the dust kicked up by the herd.\n\nDanni and Sarah smiled at each other; it was typical of their men to take the hardest job. They never asked their hands to do anything that they wouldn't do first. The girls waited for the herd to pass, then joined Josh and Red riding drag. They were quickly covered in the dust thrown up by the herd; neither cared, their men were back safe and sound.\n\nJosh had been wearing a bandana across his nose and mouth to protect him from the dust; Red also wore one. He pulled it down and greeted Danni with a big grin, \"Dang, it's good to see your but y'all gonna get covered in dust back here.\"\n\n\"It'll wash off. I didn't want to wait for you any longer,\" Danni replied riding Sunny closer to Josh and taking his hand in hers.\n\nRed didn't bother with words. He rode next to Sarah, leaned over, put his arm around her, and kissed her. \"I missed you girl,\" he said to a smiling Sarah. \"Didn't know how much until right now.\"\n\nThe dust settled as they drove the cattle onto the grass of the Maggie M and past the ranch house to the grazing grounds near Black Squirrel Creek. \"They'll settle down for the next few days,\" Red told the others. \"They're tired and hungry and won't leave the water and grass. Let's get back to the house.\"\n\nJacob was dead tired by the time they got back to the ranch house. He was a strong boy but he wasn't used to riding and working stock for 14 to 16 hours at a time. Maggie rushed off the porch and hugged her son, glad to have him home safe. Daniel tried to get by with just patting Jacob on the shoulder but couldn't help himself; he pulled the boy to him with a big hug and a kiss on the top of Jacob's head. He offered to take care of Jacob's horses for him.\n\nJacob turned down the help. \"My horses, my responsibility,\" he said and led Puma and the cowpony to the corral.\n\n\"Mother, I guess our boy has grown into a real cowboy,\" Daniel said with pride.\n\nRed smiled at Jacob as he passed and said, \"You'll do boy. Good job.\"\n\nThe three cowboys went to the creek for a bath. After supper everyone had to hear about the trip to Cripple Creek; they talked until nearly 10 PM. Josh finally stood and said, \"Maybe Jacob there isn't tired,\" he pointed to the boy asleep in a chair, \"but I sure am. See y'all in the morning. He kissed Danni and headed for the bunkhouse.\n\n******************\n\nThe cattle brought from Cripple Creek were allowed to graze and rest for about a month. Not all of the cattle from the wild round up or from the two ranches were ready for market this year; some would be held over and fattened up until the next year's round up. \n\nBetween the cattle rounded up from both parts of the CBC and the ones brought from Cripple Creek there were 250 some animals to be driven to the railhead for sale. Daniel, Josh, Red, Jerry and Jacob went on the cattle drive. They also brought Jimbo Hughes and Will Stinson another hand from the Lazy L; leaving Charlie White and the other two hands to take care of the ranch. When the men of the Chico Basin Cattle Company started the drive the quote was $15 a head. This would bring almost four thousand dollars for their cattle; more than double the amount that the ranches had ever brought in previously\n\nMaggie, Sarah, and Danni rode ahead of the cattle to Fountain; they wanted to look into some things from Mitchell's store for the upcoming weddings. They would wait in Fountain for the men to ride back from Colorado City after delivering the cattle. The girls and their mother had discussed wedding dresses but Saran and Danni decided they would rather get married in Sunday go to meeting dresses; maybe a little fancier than normal but something they could wear more than once.\n\n\"After the wedding and the shivaree, a special dress won't stay on any longer than it takes to get to the house anyway,\" Sarah said nudging Danni in the ribs and giggling. \"Rather spend the extra money on things to make the house at the Lazy L more of a home.\"\n\nIt took two full days for the men to drive the cattle to Colorado City's railhead. By the time they got there the price for cattle had gone up to $17.50 a head. The drive was finished on a Friday and Saturday morning early the crew started back for Fountain. Daniel had a bank draft for $4375 in his inside vest pocket. It's a great beginning for the Chico Basin Cattle Company, he thought. \n\nThe partners and the cow hands met the Maguire women in Fountain. Red suggested that they stand good for haircuts, shaves, and a hot bath for the two hands. \"Wouldn't be a bad thing for us to do the same thing; I'm a little ripe myself after two days on the trail with 250 cattle,\" Red suggested with a wrinkled nose and a laugh.\n\nJosh agreed saying that the men had worked hard on the drive; they deserved a little extra. \"What about paying them a bonus for the drive and giving them today and tomorrow off? They probably would like a night in town to blow off some steam.\"\n\nRed nodded and said, \"Next weekend we can give Charley, Will, and James a night in town.\" He turned to Jerry and explained, \"We pay the boys a salary but a cattle drive is extra work, so we'll give them a bonus with some time off. But you have to do that for all the hands. Jimbo went with us to Cripple Creek but the others took care of the ranch while we were gone. They deserve a little extra too.\"\n\nAll of the men made a trip to the barber shop to get spiffed up. After the baths, shaves, and haircuts Daniel gave each of the hired hands a $10 gold piece and some advice. \"We're givin you boys a week's pay as a bonus and the two days off. But remember, come Monday morning we expect you back at the ranch ready to work. Have a good time fellars.\"\n\nThe two cow hands thanked Daniel and headed for the saloon laughing and hollering. I'm afraid there's gonna be some headaches in that group come Monday, Daniel thought and smiled. Did the same thing when I was younger and before I met Maggie.\n\nAfter the happy cow hands left the rest of the group went to the caf\u00e9 for an early lunch. They wanted to get back to the ranch that day. It wasn't fair to leave Charley and the others doing the extra work for much longer. While they had been gone on the cattle drive the three hands back at the ranch had extra work to do. \n\nEven after a large portion of their cattle had been taken to market there was still a lot of work that had to be done at the ranch. Charley, Will, and James were the ones that stayed and made sure things were taken care of. They checked and counted the calves born that fall, branded most of the remaining cattle brought in from Cripple Creek, and did the day to day chores necessary on the place.\n\nFinishing lunch, the Maguire women made a visit to the seamstress, again to discuss the dresses that Sarah and Danni were having made for the wedding. Daniel and his three young partners went to the bank. On the way Daniel steered all of them to the saloon, including Jerry. Josh, Red, and now Daniel considered the youngster a man now; his hard work and attitude earned him that right.\n\n\"I thought we were going to the bank while we waited on the women,\" Red remarked with a big grin. \"Course I got no problem with a saloon, don't you know.\"\n\n\" We'll have to go gather up those women or we'll be here all afternoon. About the only thing I've learned about women is that when they start talking about dresses and such you'll end up having to throw a rope on em to drag em away,\" Daniel replied. \"Sides I got some business I want to talk over with you three and the saloon is as good a place as any.\"",
        "Walking into the saloon, Daniel led them to a table nodding at two men leaning on the bar. The bartender came over to see what they wanted to drink. Ralph Jennings was new to the area from back East somewhere. He was a bit of a dandy, wearing a collared shirt, string tie, and a brocade vest. Jennings believed he was better than most of the customers because he was from a big city; sometimes his arrogance showed.\n\nDaniel and Red ordered whiskey and Josh asked for a beer and took a little ribbing from his partners about his refusal to drink hard liquor. Before Jerry could order the bartender said, \"Can't serve you anything sonny. You're just a boy and too young to even be in here. I ought to throw you out but I guess I could get you a sarsaparilla.\"\n\nJerry hung his head for a few seconds and then looking Jennings in the eye said, \"I'd be happy to step outside and show you what a boy can do Mister.\"\n\nRed laughed out loud. \"Damn Jerry, you been spending too much time around me.\"\n\n\"What's your name Mister?\" Josh quickly asked before the man could react to Jerry's challenge.\n\n\"Ralph Jennings,\" the bartender answered.\n\n\"This 'boy' is a veteran of two guerrilla raids on the wagon train we were traveling with; he lost both of his parents during one of those raids. This 'boy' has backed our play in dangerous situations several times. This 'boy' held off two bandits so my fianc\u00e9 could go for help,\" Josh stopped and fixed Jennings with his cold, wild blue eyes.\n\n\"I'd go easy on that throw you out part Mister Jennings,\" Josh continued in an angry tone. \"That 'boy' has just returned from a cattle drive and before that did two men's work over to Cripple Creek. He's a full partner in our ranch and earned every bit of it. I'm right fond of that 'boy' and you might have trouble throwing him out.\"\n\nI can't let Josh have all the fun Red thought and added, \"Besides, he's with us and he'll have whatever he cares to.\" Red had the beginnings of the evil little grin he wore when trouble came up.\n\n\"And just who might you two be?\" Jennings still wasn't impressed with the group sitting at the table in spite of Josh's words; taking them for plain old cow hands off some hard scrapple ranch. He had been surprised at the boy's readiness to stand up to him.\n\n\"I'm Josh Kelly and this is Red McCall. And that 'boy' is Jerry Barnes.\"\n\nJennings turned a little pale at hearing those names. The one thing that's more available in a saloon than whiskey and beer is gossip. Men would come in to drink and talk about the news, rumors, and stories about town's people and visitors. He had heard the stories concerning Kelly and McCall, their run in with Tom Larson, how they ran Stillwell and the other three off the Lazy L, and the shoot out that left the four men belly up on the plains. \n\n\"Sorry Mr. Kelly, Mr. McCall. I didn't know who you were,\" he said backpedalling. Turning back to Jerry he asked, \"What can I get for you Mr. Barnes?\"\n\n\"Think I'll have a sarsaparilla,\" Jerry answered with a straight face.\n\nThis time it was Daniel that laughed out loud. Jennings nodded and quickly left to get their drinks. He was glad to get away.\n\n\"Okay, now that the funs over what did you want to talk about Daniel?\" Red asked. Josh turned to face Daniel as the anger bled out of him. He was surprised as anyone at his reaction to the insulting manner that Jennings had treated Jerry.\n\n\"When we formed the Chico Basin Cattle Company,\" Daniel started looking at Jerry with a smile, acknowledging his idea for the name, \"we agreed to split the profits 50/50 right?\" At a nod from his three companions he continued. \"I think we ought to rethink that agreement.\"\n\nJosh and Red were surprised at his statement and leaned forward in their chairs. They thought they'd made a fair and equal way to split the profits and couldn't understand why Daniel would want to change it. Of the three only Jerry seemed unconcerned. He smiled and leaned back in his chair.\n\nJennings returned and carefully sat the drinks on the table; he made a special effort and sat the sarsaparilla directly in front of Jerry. Red threw back the whiskey and ordered another. Daniel just sat there waiting for his partners to react.\n\nJosh motioned to Red to let him do the talking. I'm the one that pretty much got us into this, he thought. So I should be the one to find out what changed Daniel's mind.\n\n\"How do you want to change our agreement, Daniel?\"\n\nDaniel smiled to himself at the carefully controlled tone in Josh's voice. \"I reckon when we take this draft over to the bank that we take $400 off the top so you boys can pay off Nancy Larson; like you promised. The balance should be put into one account.\" Daniel paused to sip his whiskey, enjoying the looks on Josh and Red's faces.\n\n\"Our spread isn't the Lazy L or the Maggie M anymore; it's the CBC and it's one ranch. I propose that we put the balance of the money into one account for the Chico Basin Cattle Company.\"\n\nRed's big grin and Josh's smile at the teasing gave Daniel a lot of pleasure. \"Besides, I'm already trusting you with my girls and they mean a lot more than money.\"\n\n\"That's a mighty fine idea,\" Red responded. \"Let's have a drink to the new agreement.\" In a loud voice he said, \" Another round if you please barkeep.\"\n\nJosh looked toward the bartender and said, \"Mr. Jennings, bring four whiskey instead, if you will.\" Turning back to his partners he smiled and said, \"I reckon I can stand one whiskey to celebrate the Chico Basin Cattle Company's first round up.\"\n\nDaniel and Red laughed at the faces that Jerry and Josh made after drinking the whiskey. \"Now I remember why I don't like that stuff,\" Josh said with a grimace.\n\nThe four men went to the bank and set up the new account. Daniel handed the boys $400 in Double Eagle $20.00 gold coins. That was Red's idea. He remark was, \"I don't know about Mrs. Larson, but I trust gold a lot more than paper dollars right now. Anyway we told her cash money.\"\n\nGoing to meet the women, they found that Daniel was right; the ladies weren't ready to go and had to be persuaded to leave. \"We might have to use a brandin iron to get them apart,\" Daniel said.\n\n\"Hush Daniel, we're ready to go,\" Maggie said with a grin. When Josh explained the new money agreement to the women, Maggie turned to her husband, \"That's a fine thing to do honey. I'm proud of you.\" She put her arms around his neck and pulled his head down and kissed him.\n\nOn the ride back to the ranch, Josh had a thought. \"You know, Mr. Swede might be a mite upset if all the others get a bonus and he don't. I think we'd better give him a little extra and let him have a couple of days off too.\"\n\nRed laughed and agreed, \"I sure don't want to face a mad Mr. Swede. He might serve us skunk or somethin.\"\n\nAt the cutoff to the Lazy L, Josh and Red stopped to say good bye to Danni and Sarah. They would see the girls the next evening for Sunday supper but that was a long time to wait for the young couples. The rest of the Maguires and Jerry rode on toward the Maggie M to give them a little privacy. Daniel kept looking back over his shoulder until finally Maggie said with some exasperation, \"Daniel, mind your own business. The girls will be fine.\"\n\nSunday about midday, Josh, Red, and Jerry rode past the Maggie M to the S Bar S. They got to the ranch house and Bill Sanders stepped out onto the porch to greet them.\n\n\"Howdy boys. Good to see you, what can I do for you?\"\n\nAs usual Josh was the spokesman. \"We'd like to see Mrs. Larson if we could.\"\n\n\"Hey sis,\" Sanders called back into the house. \"There's three young gentlemen here to see you.\"\n\nNancy Larson came out of the house with a puzzle look until she saw her visitors. She walked over to stand next to her brother.\n\nJosh dismounted and walked onto the porch. \"Mrs. Larson we brung the rest of the money, $400, that we owe you for the Lazy L; just like we promised. Red here thought you'd appreciate cash money so it's in double eagle gold coins.\" He handed her a draw string pouch; she could hear the coins clinking together as she took the bag.\n\nNancy had a little smile playing around her mouth. \"Wait just a minute please, Mr. Kelly. She returned into the house but came back shortly with what looked like a letter.\n\n\"Bill told me that you gentlemen would be here as soon as you finished the cattle drive. I wrote this letter stating that you've paid for the ranch in full and had Bill witness it. I hope you and your ladies will be happy there. It was a good place to live at one time.\" She smiled, handed the letter to Josh, and returned to the house.\n\n\"The place has bad memories for her,\" Sanders said. \"It'll do her good to get shed of it. \n\nThe new owners of the Lazy L thanked Bill but turned down the offer of a drink or lunch and made the ride back to the Maggie M.\n\n*****************\n\nAfter the round up and drive to the railhead, things became a little more hectic for the two young couples. Sarah had to go back to Fountain to teach and now there were two young ladies traveling back and forth between town and the ranch. Neither of the girls was looking forward to the winter weather which would keep them in town. It was hard enough just seeing their men on weekends but when the snow and cold came in late October or early November they'd be lucky to see them once a month.\n\nBefore the weather changed there were several projects accomplished on the two ranches. An additional well was dug at the Lazy L. The corrals and barns were mended and the work on the bunk house enlarging it into a regular home was almost finished. \n\nDaniel, Josh and Red were riding the range checking on the late season grass. They were trying to decide which area would be best to winter the cattle. They were riding along Chico Creek where it wound through a basin and then between two hills as it flowed southeast from the Lazy L to the Maggie M. It was the outgoing, boisterous, joking Red that came up with an idea that would be a boon to the CBC in future years.\n\nRed stopped, looked at the stream, and rode to the top of one of the hills. He studied the countryside as Daniel and Josh joined him. Josh started to ask what he was doing but Red held up his hand; asking for quiet. After several minutes, while his two partners stared at him with questioning looks, they heard Red say, \"Thought so; just like back home.\"\n\nJosh couldn't keep quiet any longer. \"What's just like home Red?\"\n\nHe got down off his horse and squatted, picking up a stick to draw a in the dirt. \"See here where Chico Creek goes between these two hills? He asked, drawing line on his a diagram. \"If we build a low water rock dam from here to here,\" drawing another line, \"we could back up the water and make a good size lake.\"\n\n\"A lake?\" Daniel asked.\n\n\"Yes sir. My Pa did the same thing with Willow Creek back home.\" \n\n\"I don't have the knowhow to build a dam that would stop all the water, it will leak,\" Daniel objected. \n\n\"So, let it leak, that will take the water pressure off the dam\" Red answered.\n\nJosh began to see what Red was talking about. \"We won't stop the flow from Chico Creek; we'll just borrow it for a while until the lake is full.\"\n\n\"Yeah, that's the idea,\" Red replied. \n\n\"We could have good water for a lot more cattle,\" Josh remarked. He looked at the surrounding land closer; now the farmer in Josh took over. \"You know this land is pretty good for growing things, it's just short on water. If we dug a ditch to that plain yonder, we could get water down to it. We could grow some hay and even corn to help feed the cattle through the winter.\"\n\n\"Be a lot of work for our hands and us. With everything else going on I don't know if we'd have the time to work on the dam much,\" Daniel cautioned.\n\n\"Things are gonna slow down with winter comin on so we can work on it right through to spring; as long as we don't get a lot of snow. Maybe get done in time for the spring thaws,\" Josh offered.\n\nThe next two months were a bee hive of activity, at least as far as the dam was concerned; Jerry, Charley White and Jimbo Hughes handled the normal day to day operation of the ranch; the rest of the hands helped with building the dam. Red supervised building two rock levees from each of the hill sides toward the center where Chico Creek flowed. They left a space between the levees until they were at the correct height; then they filled in the space. \n\nThe weather was good and didn't slow down the construction; it began to get cold but there was no snow. It was nearing the end of October when the dam was finished and they got the first snow storm of the season the day after. Chico Creek began to back up into the basin; creating the small lake. When the proper depth was reached the water began to flow over the top of the dam and continue its journey south.\n\nA large ditch had been dug from the edge of the basin down to the plain that Josh had pointed out before the ground froze. A gate, or weir, as Red called it, was built that could be raised or lowered to allow water to flow to the plain. We'll have to wait until spring to plant and see if all this work was worth it, Josh thought as he looked at the ditch.\n\n*********************\n\nIt was two weeks before Christmas and Josh and Red went to Fountain to bring Sarah and Danni home. The school would be shut down until after the first of the year and freight wasn't moving due to the bad storms to the south around Pueblo. The boys went in a day early to buy some supplies and would ride back with their ladies the next day. \n\nJosh and Red lead the girls up the cutoff to the Lazy L and took them by the dam. Sarah and Danni were impressed with the idea for the dam and the amount of work that had been done. Sarah rode to top of one of the hills followed by the others.\n\n\"Didn't know I was marring an engineer,\" she teased Red as she inspected the dam.\n\nPointing to the irrigation ditch Danni said, \"Well I knew I was getting a farmer.\" Josh stuck his tongue out at her and she giggled.\n\nThat evening during and after supper the girls told all the news and gossip from town. The boys stayed in the bunk house that night and rode back to the Lazy L the next morning after breakfast. When they rode up to the front of the house, Charley White came from the bunk house and met them.\n\n\"Surprised to see you, thought you'd stay over to the Maggie M,\" Charley said. Before either Josh or Red could answer Charley continued, \"Y'all head back, there's nothing here that me and the boys can't handle. If anything comes up I'll send for you.\"\n\nRed slapped Charley on the shoulder and said, \"Yes sir, Mr. Boss Man, whatever you say.\" He got back on Jasper.\n\nJosh looked at Charley for a few seconds and mounted Diablo. \"Thanks Charley, we owe you one. Take care of things.\" Josh and Red retraced their steps back to Sarah and Danni. Jerry rode with them; he wanted to spend Christmas with his adopted family. \n\nAll too soon for the two young couples it was time for the girls to return to Fountain. The day was bright and sunny as they rode back to town. But on the way back that afternoon, the boys could see storm clouds building up over the mountains to the north of Chico Basin.\n\n\"We'd better ride a little faster Josh,\" Red suggested pointing to the gathering storm clouds.\n\nJosh nodded and replied, \"Yeah lets head for the Lazy L pronto. I'd like to be at the ranch, just in case, when that hits us. We'll ask Jerry and Jimbo to ride over to Daniel's and give him a hand.\"\n\nThe storm held off until late morning of the next day and then struck with an intensity that Josh hadn't seen since he came to Chico Basin. They were snowed in for three days. Twice Red or Josh tried to ride out and check on the cattle. Neither of them was able to make it much more than a mile from the house; the snow was just too deep. It was five days before they could get to the cattle.\n\nMost of the animals had taken shelter in the canyons and arroyos and so far they were okay. Red told Josh that they were going to lose some cattle if the weather got worse. \"Need time between storms for the snow to melt off some so the stock can graze a little,\" he told Josh.\n\nSo much for Danni and Sarah comin home, Josh thought. The size of Sarah's classes at the school dwindled as the weather turn bad but there were still enough town children to keep the school open. Danni could have come home because the freight wagons couldn't run due to the storms but she stayed; she didn't want Sarah to be left alone.\n\nFinally at the end of January, Josh had enough. Red found him in the barn saddling Diablo. Josh was wearing his full length oilskin drover's coat and his fur lined moccasins. Red dressed the same way.\n\nThe moccasins weren't much good when it came to working stock but they were a lot warmer in cold, snowy weather than boots. After their first winter in the Chico Basin, Josh traded a steer for the moccasins at the trading post just north of Colorado City. He got a pair for Red and Jerry at the same time. \"Don't need to be gettin no frostbite on our toes,\" Josh told them.\n\n\"Where you headed partner?\" He asked knowing the answer before Josh spoke. \n\n\"Going to see Danni. Last few days have been sunny so the snow should have melted off the trail some,\" he answered. \"It's been too long.\"\n\n\"Been thinkin the same thing myself,\" Red replied as he led Jasper from his stall. The horse was already saddled.\n\nAs they rode out of the barn, Josh yelled at Charley, \"Take care of things, will you Charley. We're headed to town. Don't know how long we're gonna be.\"\n\n\"It's a wonder it took this long. You both been mooning around here like lost calves,\" Charley yelled back.\n\nThe ride that normally took a little over an hour at an easy pace, took well over three hours. The men pushed their horses through the snow. It places it had melted until the trail was almost clear, but in places the snow had drifted to six or eight feet. Josh and Red took turns riding in front breaking the trail; they stopped several times to give the horses a breather.\n\nThey had left the ranch about an hour after midday; it was close to 5 when they rode into Fountain. Both the men and the horses were very tired. Josh and Red put Diablo and Jasper in the stable; telling the owner to feed them a warm corn mash. Then they walked to Mrs. Cassidy's boarding house to surprise Sarah and Danni.\n\nThey found that the girls had already walked to the caf\u00e9 for supper. Mrs. Cassidy insisted that they have a cup of coffee before going to meet the girls. \"You look half froze to death; it won't hurt you to sit and warm up for a few minutes,\" she said, mothering the boys.\n\nIt seemed like forever before Josh and Red could get away from Mrs. Cassidy; she was a widow and got lonely during the winter months. They stepped into the caf\u00e9 and saw Sarah and Danni sitting at a table with their backs to the door. Red nudged Josh and winked. When they got close to the table, Red disguised his voice.\n\n\"Here are two pretty fillies that would probably like some company. You know someone that they could warm up with.\"\n\nSarah turned with fire in her eyes to respond to the insulting words and voice. When she saw Red, her eyes got big and began to fill with tears; she stood and ran to Red. As fast as Sarah was, Danni reached Josh before Sarah got to Red. It was several minutes before the youngsters released each other.\n\nRed's own eyes were wet also and he said, \"C'mon girl, let's sit down. You're embarrassing me.\" But he was grinning when he said it.\n\nJosh and Danni couldn't have sat much closer unless they used the same chair. She was hanging onto Josh's arm and refused to let go. Danni said, \"I'm really glad to see you but how did you get here through the snow?\"\n\n\"Diablo wanted to see you pretty bad because when I pointed him toward town it was all I could do to hang on,\" Josh teased.\n\n\"And Jasper didn't want to be left out of getting pampered at the stables, at least that's what I think,\" Red added.",
        "\"You rode Diablo?\" Danni asked. \"Poor baby must be frozen. We better go see him after supper; I want to make sure he's okay.\"\n\n\"Guess that tells you who's got the upper hand,\" Red teased.\n\n\"Red!\" Danni responded, giggling.\n\n\"Quit teasing her Red; she's been very upset at not being able to get home,\" Sarah admonished her fianc\u00e9. \"Me too.\"\n\nThe young people finished supper and bundled up for the walk to the livery stables. Danni told Josh that she and Sarah had made a habit of going to see Sunny and Sarah's horse Johnny most nights after supper. \"Those little walks keep me from getting cabin fever.\"\n\nAs they got to the door to the livery, they heard Diablo whiney in welcome. He had his head hanging over the door to his stall and Danni went to him immediately to stoke his ears and neck. The big horse nuzzled her and sighed in contentment. Diablo's other human was there and he was happy.\n\nJosh went to talk with the stable owner and arrange special feeds and bedding for the horses. When he came back Danni was feeding his horse pieces of dried apple and whispering in his ear. Josh heard her softly say, \"Thank you Diablo for bringing him to me.\"\n\nBefore he could get Danni to leave she had to spend a few minutes with Sunny; she gave him his share of the apples and said \"I know you could've brought Josh to me but you stayed here to take care of me, didn't you?\" Horses still get better treatment than I do, Josh thought laughing.\n\nMrs. Cassidy was happy to rent the boys a room. During the winter months her boarding house was vacant except for the room upstairs shared by Sarah and Danni. Occasionally a drummer or cattleman would stop by but not often. She put the boys in a room on the first floor that had two beds. \"You boys stay put, ya hear? No funny business in my house,\" Mrs. Cassidy warned them.\n\nJosh got to spend most of the daytime with Danni but Red had to limit himself to the school's recesses and lunch time to be with Sarah. Of course they would spend the afternoons and evenings together. Josh and Red stayed in Fountain for two days. After discussing it with their ladies, they decided for the rest of the winter that they would come to town two times a month rather than the girls having to brace the weather.\n\nThe return trip to the ranch was considerably easier than the trip to town. The days had been cold but sunny and a lot of the snow had melted. The drifts they had fought through were almost completely gone so the ride back to the Lazy L took about two hours.\n\nTen days later, after another snow storm passed through; Josh and Red returned to Fountain. This time they rode in on a Friday, which would give them two full days with Sarah and Danni without Sarah's school interfering? The trail wasn't as bad as the last time they made the trip but it was far from easy. \n\nInstead of following the wagon trail all the time, they rode along the ridges and crests of hills where they could. Most of the snow had melted or been blown off up there. But there were still places where they had to force their way through deep drifts. \n\nSunday evening as the two couples got ready to go to the caf\u00e9 for supper, Red held back and told them he would catch up. He rejoined them at the caf\u00e9 about twenty minutes later. Josh looked at his friend and thought Red seemed to be in high spirits considering that he wouldn't see Sarah for another two weeks or so. \n\nThey were having a last cup of coffee before returning to Mrs. Cassidy's when Red spoke up. \"Josh, if you don't mind I'm gonna stay here. There's not much goin on at the ranch and I don't want to be away from Sarah anymore. It bothers me not to see her every few days.\" He took Sarah's hand as he talked.\n\nJosh had to chuckle at Red because he was blushing and looked so sad. \"Don't see a problem with it partner. Course Sarah may decide she don't want to marry you after having you around all the time,\" Josh teased. \n\n\"Not much chance of that,\" Sarah said with a big smile, taking hold of Red's arm.\n\n\"I reckon the CBC can afford to pay your room and board for a month or so,\" Josh said.\n\n\"Won't have to,\" Red replied, now grinning again. \"Made a deal with Mrs. Cassidy just afore I came over here. I'm gonna do some repairs around her place and give her a half beef come summer. She'll feed and board me in trade, at least until Sarah can come home.\"\n\n\"I guess I can find my way back to the ranch by myself,\" Josh replied with a grin. \"Done it before.\"\n\n\"You won't be by yourself,\" Danni said. At Josh's puzzled look she continued, \"I stayed because I didn't want to leave Sarah alone. With Red here she won't be alone and I'd just be in the way, so I'm coming with you.\"\n\nJosh grabbed Danni and hugged her, quickly letting her go when he remembered they were in public. Now it was Josh's turn to blush. \"Doggone fine idea, if you ask me,\" he responded.\n\nThe next morning after breakfast Sarah and Red walked Josh and Danni to the livery. \"I don't think you have to worry about Ma,\" Danni replied giggling. \"But Pa's going to get a burr under his saddle about this.\"\n\n\"I know Pa's not going to be too happy but tell him and Ma not to worry,\" Sarah said to Danni. \"Mrs. Cassidy is here to chaperone.\" \n\nRed gave Danni his drover's coat to wear back to the ranch; the weather was still cold and it would help protect her on the ride. Josh and Danni said good bye and mounted Diablo and Sunny. \"Glad to be going home Sunny?\" Danni asked the big buckskin. His ears perked up at her voice and he nodded his head as if answering her. In fact the horse was just glad to be going anywhere instead of being cooped up in the stables.\n\nTheir return to the ranch was easier than the ride into town. The trail had already been broken by the boys and the sun had melted more of the snow. They rode into the corral at the Maggie M in just over two hours. Daniel and Maggie came out of the house as they rode in; surprised that their daughter was home. Jerry and Jacob came out of the barn at Maggie's shout of surprise.\n\nDaniel, Maggie, and Jacob crowded around Danni, hugging her and welcoming her home. When they stepped back Jerry stuck out his hand and said, \"Welcome home Miss Danni.\"\n\nDanni pushed passed Jerry's hand and hugged him. \"Thank you Sir Knight,\" she told him. Jerry's face turned red and Josh chuckled at the comical look on his face. \n\n\"What are you doing home? I thought you were going to stay with Sarah,\" Maggie asked.\n\nJosh and Danni took turns explaining what happened. As predicted, Daniel wasn't very happy with Red staying in town and living in the same house as Sarah. He started to complain but Maggie interrupted him.\n\n\"Calm down dear. Sarah's a woman grown and we raised her right; she won't do anything to shame us. Besides in spite of your concerns, Red is an honorable young man,\" Maggie told him. \"He won't do anything to shame us either.\"\n\nAfter lunch Maggie and Danni spent the afternoon making plans and discussing the upcoming wedding. Daniel rode out to check on the cattle; Josh offered to go along but Daniel told him to rest a little and took Jerry and Jacob with him. Rather than just sit around listening to the women, Josh read the letters from his family that he'd picked up before leaving Fountain.\n\nThere were three letters from his folks; two for him, and one for Danni. The letters were full of the news concerning his family; his parents William and Molly were in good health, happy for Josh and Danni, and said they hoped to get to meet her after the war. William wrote that even through the danger posed by Fogerty and his Bushwhacker's was over, it was a dangerous time to be traveling. Josh's younger brother Samuel had grown like a weed to almost 6 feet tall. The letters also gave good news about his uncles and their families. His pa wrote that the war was going badly for the Confederacy; William looked for the war to come to an end within the next few months.\n\nJosh put the letters away and went to check on Diablo and Sunny. The trip from town hadn't been too bad but he wanted to make sure the animals were warm and well fed. While he was at the barn, Daniel, Jerry, and Jacob returned. He helped Daniel and Jerry with their horses but Jacob wouldn't let anybody but himself take care of his horse, Puma.\n\n\"How're the cattle holdin up?\" Josh asked Daniel.\n\n\"Doing pretty good. Most of them are hunkered down in some canyons and arroyos up to Black Squirrel Creek. There's good grazing now that some of the snow melted.\"\n\nAfter supper Josh said that he had to return to the Lazy L for a few days but would return to the Maggie M by the weekend. Danni wasn't especially happy with his going but understood that with Red living in town Josh had to put in a bit more time at the ranch.\n\n\"Now don't get all worried if I'm not back before Saturday,\" Josh told Danni the next morning before leaving. \"If there's any trouble over there I'll have to sort it all out before I can come back.\" \n\nDanni nodded but put her head down; she'd just spent weeks without seeing Josh and now he was leaving again. Josh put his hand under her chin and raised her head so he could look her in the eyes. \"Won't be long fore we're married and we'll be together all the time,\" he said tenderly. He paused, smiled, and teased her to lighten the mood, \"Heck, you'll probably get sick at the sight of me and run me off for a few days.\"\n\nShe had to smile back at him. Danni was touched that Josh understood how she felt and that he didn't just brush her disappointment off. I got myself a pretty good man, she thought as she waved good bye at him.\n\nThe weather had turned bad and it was the middle of March before Sarah and Red were able to come to the ranch for a long weekend. After supper Saturday evening Jerry and Jacob returned to the bunk house and the rest of the group sat around the fireplace talking.\n\n\"I told the town council that I'm not coming back to teach next fall,\" Sarah said. \"Told them I'd help find a replacement if they wanted but I'm not going back.\" She looked at Red with a small grin, \"Got a new job being a wife and it's going to take up all my time.\" \n\nRed grinned back at her and nodded. Obviously the two had talked and made this decision together. \"Hard to start a family if Sarah's in town and I'm out to the ranch,\" he said.\n\n\"Red, behave yourself,\" Sarah scolded him; she got a little red in the face but had a big smile.\n\n\"I was thinking the same think about Josh and me,\" Danni said. \"Told Mr. Whitworth that I wasn't coming back after the wedding. I think Red's right, it'd be hard to start a family with me living in town. Besides I'd rather help run the ranch.\"\n\nNow it was Josh who got red in the face, but he smiled also and then chuckled. \"Nothin bashful about the Maguire girls, is there?\"\n\nSunday when Sarah and Red returned to Fountain, Josh and Danni rode with them; they would stay overnight and return to the ranch Monday afternoon. Josh led a pack horse so they could pick up some supplies but mostly he wanted to check the telegraph office to see if there was any news from his folks and to mail the letters he'd written.\n\nAfter school, Sarah and Red accompanied Josh and Danni to the stables to say good bye. Josh had just finished loading the pack horse when they heard a man shouting and a horse making noise out in the corral; Josh went outside to see what the commotion was. When he didn't return for a few minutes, Red and the two girls followed him.\n\nAn older man had a young filly cornered and was trying to put a lead rope on her; there were two other horses sort of hiding behind her. Every time the horse tried to get away the man would use a yard whip to keep the horse cornered. The first time the man hit the horse with the whip she screamed, Josh climbed the corral and started forward.\n\n\"Easy Josh,\" Red cautioned his friend. Josh just waved his hand at Red and continued forward.\n\n\"Looks like you could use some help Mister,\" Josh said with a grim smile. \"Let me give you a hand.\"\n\nHe stepped between the man and the horse, taking the lead rope from him. Josh held the rope down at his side and took very slow small steps toward the young horse. He talked constantly in a soft voice and tone to the animal. He extended his hand so the horse could smell him and shortly was able to stroke the animal's forehead. Slowly Josh brought the lead rope up and showed it to the horse. After two minutes or so he was able to attach the rope to the animal's halter.\n\nJosh led the filly to a hitching post in the center of the corral and tied the lead rope to it. He picked up two more lead ropes off the ground and did the same with the other two horses in the corral. \n\n\"He surely do have a way with horses, don't he?\" Red remarked about his friend. \"With women too I guess,\" he continued grinning at Danni.\n\nDanni blushed but smiled and replied, \"He certainly does. And that's a fact.\" Red laughed at her reply.\n\n\"She's young and high spirited Mister. You have to treat her gentle,\" Josh told the man. \"She'll just fight you if you don't.\"\n\n\"Have to treat women the same way,\" Red remarked softly. Sarah dug her elbow into his ribs and punched his shoulder.\n\n\"Thanks son. She's been actin up and I can't control her.\" I'm Bill Sorenson,\" he said shaking hands with Josh.\n\n\"Howdy Mr. Sorenson, I'm Josh Kelly. Where ya headed with the horses, if you don't mind my askin.\"\n\n\"Tryin to sell them. My ranch is a day west of town and the winter's been tough on us. Thought I might get enough for these three to help us make it into spring.\" \n\n\"Had any takers?\" Josh asked.\n\n\"Naw, every time I get someone interested she,\" Sorenson pointed at the big grey filly, \"starts actin up and scares off the buyers. Nobody wants a horse that's half wild.\"\n\n\"How much you want for her?\"\n\n\"Got to sell them as a set, we need the money,\" Sorenson replied. \"I think the three are worth a hundred dollars. You interested son?\"\n\n\"Not at a hundred dollars, I'm not,\" Josh answered. \n\nSorenson knew from Josh's response that he had a buyer if they could agree on a price. Josh saw the calculating look in the man's eyes and knew it was time to do a little horse trading.\n\nRed chuckled as Sorenson and Josh went back and forth trying to get to a price that both could live with. Daniel and I may know more about cattle but Josh is about as good as they come when it comes to horses, Red thought. Finally the two came to an agreement. Josh paid Sorenson $65 cash money and got a bill of sale for the three horses.\n\n\"Not questioning you Josh, but what do we need with more horses?\" Red asked after Sorenson left. \"We got four between us, not countin Jerry's two.\"\n\n\"Actually I've only got Diablo. You don't really think I'll ever get Sunny back from Danni, do you? Josh said with a smile. \"Besides, I told you when we bought the ranch that I wanted to breed and raise horses. That filly is a very good animal; she'd make a fine mate for Diablo.\"\n\nRed walked slowly over to where the horses were tied and examined them closely. \"Yeah, she's a good one.\"\n\n\"That pinto is young and has the makins of a good cow pony; a lot like your Queenie. This one,\" Josh said putting his hand on the horse's reddish brown coat, \"will make a good saddle animal. Thought I might work with him a little and give him to Maggie. She hasn't had much to ride since we lost Joey.\"\n\nDanni came into the corral and very slowly walked up to the grey filly, talking softly. \"Poor baby's scared aren't you? Don't worry we'll take good care of you. I think we'll name you Lady Guinevere, after all you belong to Sir Knight there. We'll call you Lady.\" The young horse seemed to settle down and pushed her head against Danni.\n\n\"Looks like I'm not the only one that has a way with horses,\" Josh said with pride. \"C'mon on, let's get goin.\n\n**************\n\nThe cold weather and a couple of snow storms continued until the last week in April. The weather didn't stop the work being done at the Lazy L but it pushed back the spring round up. Josh and Red began to wonder if they'd be done in time for the wedding the second week of May. They pushed the men and themselves hard and were able to finish the week before the wedding.\n\nThe work on the bunk house was completed, turning it into a two bedroom log cabin. It wasn't as fancy as the big house but it would be cozy and warm during the winter and cool during the heat of the summer. The big ranch house at the Lazy L had just been finished about a year before Tom Larson went to prison. The only work done on the main house was the addition of a covered porch that wrapped around three sides of the building. Josh, Red, and their wives could sit on the porch and look out over the valley where Black Squirrel Creek ran.\n\nThe wedding was at the Lazy L; there was a flat area where the actual service was held and it gave room for a party afterwards. Maggie, the girls, and Mr. Swede had worked for a week organizing things and cooking. Several lodge poles had been set upright in the ground to hold lanterns which would provide light so the party could continue after dark. Ropes of wild flowers had been stretched between poles and the house had colored banners hanging from the new porch. The converted bunkhouse was open and had seating for whoever felt like taking a rest.\n\nJosh and Red approached Jerry a week before the wedding and asked him to be their best man. \"I thought you two would stand up for each other,\" Jerry said.\n\n\"Well, we're gonna be a mite busy partner,\" Red replied.\n\n\"We want someone we trust standing there with us,\" Josh said. \"You're as close as we got this side of home.\"\n\n\"You'll have to do double duty, you know hand us the rings at the right time and such,\" Red continued.\n\n\"Yeah, and keep us from passing out, don't you know,\" Josh added with a laugh. \n\nJerry was a little embarrassed as the tears welled up in his eyes; crying like a blamed kid he said to himself. These two had accepted, no wanted him as a partner, when they left the wagon train. They always treated him with respect; like a man and a full partner. He thought of them as the older brothers he'd never had. Jerry appreciated the Maguires taking him in and making him feel at home, but Josh and Red were his family. And now he could add Sarah and Danni too.\n\nSniffing back the tears Jerry said, \"I'd be right proud to stand up for you. Thank you.\"\n\n\"That means you can't get drunk until after the service you know,\" Red teased.\n\nSarah and Danni wore dresses made by Senora Hernandez, the seamstress in Fountain. They were a fancy Sunday Go To Meeting type that the girls could wear again. Maggie had put her foot down when Sarah and Danni wanted to wear split riding skirts and boots. Josh and Red wore suits bought at Mitchell's store and shirts with button on collars. They both wore string ties and pulled at the collars until the ceremony was over; the ties and collars were loosened as soon as possible.\n\nThe service itself went very well in spite of Josh stuttering and stumbling over the vows a couple of times. Red was typical Red, loud, smiling, and happy to be the center of attention. Jerry handed Josh and Red the plain gold bands at the proper time without fumbling them.\n\nReverend Stalls got to the end of the ceremony and said, \"I now pronounce you husbands and wives; you may kiss your brides.\" There were loud cheers and a couple of rebel yells from the crowd of friends and relatives.\n\nThe Maguires, Daniel, Maggie, and Jacob were sitting in front of the other guests who stood. Bill Sanders and his son William was there as was Nancy Larson. Nancy still felt responsible for her late husband's actions and wasn't going to come until Josh rode to the S Bar S to personally invite her.\n\nCharley White and the other three hands from the Chico Basin Cattle Company were there and three other hands, Will, James and Jimbo helped Mr. Swede serve the food and drink. Mrs. Cassidy had rented a surrey from the livery stable and Bill Thomas, the freighter, drove her out from town. Steve Mitchell, the owner of the general store in Fountain, and his wife rode in the surrey with Mrs. Cassidy. Sheriff Horton rode beside them on his horse.",
        "Two surprised guests showed up; they had both been invited but no one knew if they were actually coming. Jackson Slaughter, Red's cousin from Cripple Creek way rode over at Red's invitation. Ambrose Elliott came all the way from Denver to see the two little girls he'd watch grow up get married.\n\nAs the two couples turned to face their guests, Jerry spoke in a loud voice. \"May I present to you Mr. and Mrs. John McCall and Mr. and Mrs. Joshua Kelly.\" Another loud cheer and more rebel yells rang out; then the party started.\n\nThe ceremony had started about one and was relatively short. The party however continued until close to 9 PM. Josh and Danni changed clothes, mounted Diablo and Sunny, and rode to a line shack on the northwest corner of the Lazy L. There was a Comanche moon so they could see the trail to the cabin. Red and Sarah took off in the opposite direction without telling anyone where they were going. Most of the guests returned to Fountain but a few stayed over in the newly finished bunkhouse.\n\nJosh and Danni returned to the ranch house after three nights. They found Red sitting on the front porch leaning back in a chair with his feet propped against the railing.\n\n\"Took you long enough to get it right,\" Red teased. \"Always knew a Texas boy was smarter than a Missouri farmer.\"\n\n\"Hush Red,\" Sarah scolded him as she came out onto the porch. \"Sometimes I think you shouldn't be allowed around decent folk.\" She seemed upset but when Red looked at her in surprise she started to giggle.\n\n\"Dog gone it woman, I can never tell if you're serious or not.\"\n\nAfter greetings and hellos were exchanged, the two new brides went into the house to talk. Red told Josh, \"We'd better do some plannin for the trip.\"\n\n\"And what trip is that Red?\" Sarah asked as she came back out of the house. \n\n\"Yes, what trip Josh?\" Danni added.\n\nJosh and Red looked at each other and waited for the other one to speak first. The ladies didn't sound too happy about a trip and they for sure wouldn't like this one; especially so soon after getting married. Finally Red spoke out. \"We're goin back to Cripple Creek for more cattle,\" he said. \"It's a quick way to add to the herd; lot of hard work but worth the trouble.\"\n\n\"And when are we leaving?\" Sarah and Danni asked almost together.\n\n\"Josh and me and the hands are leavin in three days,\" Red replied. \"And what do you mean we?\"\n\n\"John McCall, you don't really think I'm going to let you ride off a few days after our wedding, do you? Danni and I are going too.\"\n\nRed started to argue but he'd learned during their courtship that when Sarah called him John, that he was in trouble. He turned to Josh for help and found him smiling and nodding at Danni. \n\n\"This ain't gonna be no honeymoon Sarah,\" Red told her. He tried to explain how hard and dangerous the work was, how hot and dusty it would be, and the fact that they'd be sleeping outdoors without any shelter. But he could see by her face that he hadn't changed her mind. \"Whatever you say dear,\" he said, giving up the battle.\n\nThey planned on taking Jerry, Jacob and one of the hands from the Lazy L; probably Jimbo as he had made the last trip to Cripple Creek. That would leave Daniel, Maggie, and the rest of the men from the Lazy L to run the ranch. They would make arrangements with Bill Sanders at the S Bar S to \"borrow\" a couple of cow hands for the ranch if needed. \n\n\"If there's all those cattle roaming around why don't the other ranchers go after them too?\" Danni asked, trying to understand.\n\nJosh grinned at her and answered, \"It's hard work and there's a chance we won't get enough cattle to make the trip worthwhile. Most of the others have bigger herds and can grow just by their calf crop. We're not that established yet........but we will be one day.\" He paused and added, \"It's a gamble but based on what we saw last year, I think it's a good one.\" \n\nThree days later the \"Crusade\" as Danni called it started to Cripple Creek. It took them a day and a half to get to the area they wanted. While Josh and the girls set up camp, Red and the rest of the crew gathered some downed trees and built a gate across the open end of the box canyon.\n\nRed pointed at the finished gate and said, \"No one will have to baby sit the cattle to keep them in the canyon.\" If we can find cattle to put in there, he thought to himself.\n\nSitting around the campfire that evening Red and Josh explained their plans to the rest of the group. They hoped to get enough cattle to fill the holding area in five or six days.\n\n\"Don't plan to be here more than eight or nine days and we could head back before then depending on how many cattle we can round up,\" Josh said.\n\n\"We hoped to get a hundred head or more fore we head home,\" Red added. \n\n\"What can we do to help?\" Sarah asked. \n\n\"The men will drive any cattle they find out onto that flat yonder; you and Danni take over and bring them back and put them in the canyon,\" Red answered.\n\nSarah glanced at Danni and at a nod from her said, \"We're going to help with the round up.\"\n\n\"No you're not Sarah,\" he replied, deadly serious. \"It's dangerous work chasing cattle through the canyons and the arroyos. There is a lot of scrub brush and small trees that tend to knock you off your horse.\"\n\n\"These cattle aren't like the ones on our ranch; these are totally wild and will fight if you corner them,\" Josh said. \"I don't want you or Sunny to get caught by a horn. Believe me it's not much fun. Remember my run in with the buffalo?\"\n\nDanni nodded remembering how lucky Josh had been. She didn't want him to worry and she really didn't want to put Sunny in danger, but she wanted to do more than sit around the camp. \n\n\"Sunny's not made for this type of work and neither is Diablo. That's why I brought Lady and Spot to work the cattle,\" Josh said. Then he laughed and continued, \"I can't believe I let you name my pinto Spot. Anyway those two are bred and trained for this. They're sure footed and quick on their feet. Sunny's a good horse but he's too big for this type of work.\" \n\nSarah was always the fiery one of the two and she wasn't about to give up. \"I don't think I like you telling me what I can and can't do Red,\" Sarah said. She wasn't angry but she was serious.\n\nRed looked at his new wife and asked, \"Sarah, how long have we known each other?\"\n\n\"About three years,\" she answered, surprised at the question.\n\n\"And how long have we been sweet on each other?\"\n\n\"Almost three years,\" Sarah said with a little smile. \"We didn't waste much time.\"\n\n\"In all that time, have I ever tried to tell you what to do?\"\n\nSarah returned Red's stare for a moment and replied, \"No, not that I can remember.\"\n\n\"Well this is the first time. If you won't listen to me as your husband, by God you will listen to me as the range boss. You two are greenhorns, on your first drive. So you'll do the work that all greenhorns do until they get some experience. Understood?\" \n\nThis is a different side to Red, Sarah thought. He's very forceful when he wants to be. Sarah paused for a bit, chuckled, and replied, \"Yes sir, range boss sir. Whatever you say?\" She gave Red a big grin, walked over and dropped onto his lap, and hugged him.\n\nEach morning after the cowboys left to look for cattle, the girls did the chores around the camp and took care of the remuda. For six days the men would bring two or three cattle at a time out onto the flat. Sarah and Danni drove the animals into the box canyon. The round up wasn't going well, so far they had only gathered about sixty cattle. \n\nAfter the crew left the camp on the morning of the seventh day, Danni turned to Sarah and said, \"They won't find any cattle for a while, let's go for a ride. I've got an idea.\"\n\nSarah knew her sister had something on her mind. \"What are you thinking Danni?\"\n\n\"I want to check that big clearing we passed on the way in. You know, the one with that little stream running through it. I think we might find some cattle there.\"\n\n\"But Red and Josh rode over there the second day we were here and didn't find anything,\" Sarah replied.\n\n\"I know, but if the cattle got spooked with the men riding around chasing them, maybe they'd go someplace quieter. It's not that far and besides me and Sunny are tired of sitting around the camp.\"\n\nSarah nodded and the two young women mounted their horses and rode east of camp. About midday they returned to the camp and waited for the cow hands to return for something to eat. The men came back without any cattle. After they finished eating, Sarah stood.\n\n\"Red, we'd like you Josh to take a little ride with us,\" Sarah requested. \"Let the men and horses have an afternoon off. They've been rode hard and it's not like they're bringing in a lot of cattle anyway.\" She saw him hesitate and added, \"Please Red Honey, come with us.\" \n\n\"Yes, please Josh,\" Danni joined in.\n\nThe men were bone weary but had to smile at their respective wives. Red knew he was lost, anytime Sarah called him Honey he pretty much did what she wanted.\n\n\"It wouldn't hurt to have an afternoon to rest,\" Josh said looking at Red. They agreed to go with the girls. \"You boys take it easy this afternoon; we start up again in the morning.\"\n\nAs they neared the clearing, Sarah led them to the east side. \"Have to get downwind so they can't smell us,\" she explained.\n\n\"So who can't smell us? Red asked but Sarah made a motion to be quiet.\n\nThe four rode slowly, stopping in the cedars at the edge of the clearing. Sarah and Danni pointed into the open space. Grazing along and around the stream were close to thirty head of cattle. The surprise on Red's face was funny and the girls had a hard time not laughing.\n\nDanni spoke in a low voice that wouldn't carry to the cattle, \"Figured the ones that got away from you in the scrub might return to a quieter place. And here they are.\"\n\nJosh chuckled and said to Red, \"You know partner, sometimes we're not smart enough to pour water out of a boot.\"\n\nSarah and Danni were excited and pleased that they had surprised their men. The girls rode point leading the cattle back to the corral with Josh and Red riding drag. Danni rode ahead and told Jerry to open the gate and the cattle were driven into the canyon. The hands were really surprise at the number of cattle and had a lot of questions. Explanations were made and a new plan was formed. \n\n\"That gives us about ninety head, so tomorrow we'll make one more sweep to the west and start home the next morning. On the way out we'll check Sarah and Danni's clearing again; there might be a few more head there. Good job and good thinking ladies. Don't think we can call you greenhorns anymore.\"\n\nThe next morning Jerry stayed at camp and loaned Sarah his horse Morgan. She wanted to experience combing cattle out of the scrub brush and rough country. Danni went also, mounted on Lady. It didn't take very long for them to understand Red and Josh's concerns for their safety. Each of the girls could have been injured as cattle charged them. The horses they rode were both well trained and stock savvy and were able to get Sarah and Danni out of harm's way.\n\nAt midday the crew returned to camp to eat and rest until early evening; they would go back as the cattle started to feed and look for water. Sarah and Danni unsaddled their horses, rubbed them down, and made sure they were fed and watered.\n\n\"Had enough ladies?\" Red asked with a big grin.\n\nSarah looked at Red and returned his grin. \"If you say I told you so I'll take a yard whip to you, but you were right Red. We don't have the experience to do that kind of work.\" \n\nDanni nodded at Josh agreeing with her sister. \"If I'd been on Sunny out there, we both might have gotten hurt. I got away from cattle that wanted to fight because Lady is well trained. You and Red were right, Josh.\"\n\nRed didn't tease the ladies, surprising them. \"Y'all are about the smartest women I've ever met. But when it comes to handling stock, Josh and I know a bit more than you. I'm glad you got to see things our way without anyone gettin hurt. Now, what's our next move Josh?\"\n\n\"Reckon we've got bout all we're gonna get this trip. I say we rest this afternoon and leave at first light. On the way back we'll check Sarah and Danni's clearing for more strays. Then it's the CBC and home.\"\n\nEveryone was happy and excited that they were going home. At first light the crew started driving the cattle back to the ranch. They did pick up ten more head from the clearing which gave them a total of just over a hundred animals. The whole crew had worked very hard and the trip was considered a success.\n\nRed decided to push the cattle a little harder than the last time. They traveled from sunup to dusk and got back to the ranch in two days. This time they drove the cattle close to the new lake.\n\n\"They'll settle down and feed now,\" Josh told Sarah and Danni. \"We'll let them fatten up until round up in September.\"\n\n\"If things go right we should be able to drive almost four hundred head to Colorado City,\" Red told them.\n\n*******************\n\nThe owners and wranglers of the Chico Basin Cattle Company drove 378 head of cattle to the railhead in Colorado City. They left about 300 head not counting calves at the ranch. Daniel, Josh, and Red talked about not driving so many head to market but the quoted prices for cattle were too much to pass up. \"The price might not be this high next year,\" Red said.\n\n\"We can always make another run to Cripple Creek if we have to,\" Josh added. \"Besides a lot of the calves from the last two years will be big enough to drive next year.\" \n\nDanni and Sarah were on the drive to Colorado City this year after their experience at Cripple Creek. The price for cattle was at an all time high bringing $20 a head which gave them well over seven thousand dollars for that year's hard work. The Chico Basin Cattle Company wasn't a struggling ranch anymore.\n\n\"I don't understand why the price is so high,\" Danni said. \"I'm not complainin, I just don't understand.\"\n\n\"Folks back east want beef and are willin to pay for it,\" Red answered. \"There's not much beef comin out of places like Texas and Oklahoma because of the war. Hell, there's not many cattle comin out of Kansas and Nebraska either. So the meat packers in the North are willin to pay more for cattle.\"\n\nRed paused for a bit and said, \"It's a Got and Want deal.\"\n\n\"It's the law of supply and demand, dear,\" Sarah told him.\n\n\"Maybe so, but we got cattle and they want em; Got and Want, don't you know.\"\n\nWhen they got back to the ranch, Josh started making plans to cut, dry, and store the feed that he'd grown on the flat plain near the new lake. This was their first crop of corn and the second cutting of the hay. \n\n\"You're pretty smart for a Missouri farm boy,\" Red teased as he and Josh harvested the corn. The whole crew of the CBC including Sarah, Danni, and Maggie were helping. \"This corn and the hay we cut earlier will help get more cattle through the winter.\"\n\n\"I guess I'm smart enough, but I've learned a lot from a feisty Texan I met up with,\" Josh replied.\n\nThe men of the CBC started to gear up for the cold weather. A wagon trail was built out to the lake; with the natural grass land there and the feed they had stored, it was a good place to winter the stock. Apparently Diablo agreed that Lady Guinevere was a good mate for him as she was going to have a foal. Queenie got into the act too, she mated with Spot; it would interesting to see the color of that foal, Red thought. There would be two new horses for the ranch come spring.\n\nThe big ranch house at the Lazy L had plenty of room and both young couples lived there. The converted bunkhouse was kept for guests like Daniel and Maggie when they visited. Josh and Red had offered it to Mr. Swede but he said he rather stay in the bunkhouse with the other hands. \"It'd be too quiet for me,\" he said.\n\nJosh and Red built an addition at the back of the house. It was basically a roofed room without walls; it would be used by Mr. Swede for cooking during the hotter summer months. The Chico Basin was a high plain but it still got plenty warm during June, July, and August.\n\nThe cold weather and snow storms were a little easier to take with Sarah and Danni both at home. No more time apart and trips back and forth to town, Josh thought. He had to chuckle because they had a mild winter. \n\nRed kidded that now he had to spend more time with Sarah, he didn't have an excuse to get away from her. Josh laughed at his friend and said, \"I couldn't pry you two apart with a branding iron Red.\"\n\n\"Yeah, but don't let Sarah know it,\" he replied laughing.\n\nJosh was able to spend time training the horse he'd bought when he got Lady and Spot. He called the horse Colorado because his coat was a reddish chestnut. The horse wasn't as big as Sunny but was sturdy and very gentle. \n\nMaggie was surprised and touched when Josh gave her Colorado at Christmas. \"A fine steed for a fine lady,\" Josh told her. She kissed Josh on the cheek and hugged him. Maggie stayed down at the barn with the horse for so long that Daniel sent Jacob to get her.\n\nIn addition to the normal gifts and surprises at Christmas, Sarah told Red she had a special gift for him. He sat in the kitchen at the Maggie M and waited for her to give the present to him.\n\n\"I won't be able to hand your present to you for about seven months,\" Sarah told him.\n\n\"What kind of present will take you that long to come up with?\" Red asked.\n\n\"In seven months or so I'll be able to hand you our first baby honey,\" she answered with a huge smile.\n\n\"What? I mean how......I mean when?\" Red stuttered and stammered, not quite sure how to react. After a bit he jumped up and hugged Sarah. It was obvious he was happy about becoming a father.\n\n********************\n\nMarch came quietly to the high plains of Chico Basin. It was a very early spring and the days began to grow warmer. The CBC had lost very few cattle during the winter and prospects for another good drive in the fall looked promising. The spring calf crop in late April was very good. The CBC was growing and maybe there would be no need for another tough and dangerous trip to Cripple Creek. \n\nIt was early June, Josh and Red were riding over the range checking on the new calves and the rest of the herd. They heard a shout and saw young Will Stinson, one of their hands riding toward them at a gallop. Josh and Red rode to meet him.\n\n\"Miss Danni and Miss Sarah need up you to the house,\" Will told them.\n\n\"What's wrong Will?\" Red asked with a worried look. \"Is something wrong with Sarah?\"\n\n\"No sir. They said to tell you there's some people at the house that they need help with.\"\n\nJosh saw a little smile playing around Will's face and wondered about it. Red had already started for the house at a gallop so he spurred Diablo and gave him his head. They had been about three miles out; it took Diablo less than two hundred yards to pass Red mounted on Jasper. Josh started to pull up but Red waved him on.\n\n\"Go on I'll get there as fast as I can,\" Red yelled.\n\n\"Let's go big guy,\" Josh said to Diablo. The big horse resumed his run toward the house. \n\nRed had to admire the speed of Diablo. Never seen a horse that big move so fast, he thought.\n\nAs fast as Diablo was it still took five minutes before Josh pulled up in front of his home. He jumped off Diablo before he came to a stop. Josh pulled his pistol and stepped onto the porch, noticing a strange surrey standing in front of the gate. If I scare anybody or insult them with the pistol I'll apologize later, he said to himself. But I'd rather have it ready if need be.\n\nJosh went to the side door and entered the ranch house. He figured if someone was waiting on him they wouldn't expect him to come in that way. He could hear people talking in the front parlor and he quietly stepped toward the front of the house. Josh was almost to the entry of the parlor when he heard a man talking, apparently to Danni.",
        "Damn, I know that voice he thought. No couldn't be. He stepped into the parlor with his pistol held down by his leg.\n\n\"I don't think you're gonna need that hog leg Josh,\" his father said, smiling at his son.\n\n\"Pa! Ma! And Samuel. I never expected ......\"\n\nBefore he could continue his mother, Molly, came to him and wrapped her arms around him. His father, William, and Samuel joined them for a family hug. Danni had tears in her eyes as she saw her husband reunited with his family. For several minutes no one spoke; they just held each other. Josh motioned Danni to join them and they included her in the hug.\n\nRed came charging into the room with his Henry, ready for any trouble. He slid to a stop, surprised at the people and Josh hugging. Sarah came to him; she had tears in her eyes too.\n\n\"It's his family honey. His Pa, Ma, and younger brother,\" she told him as she pushed down the rifle and put her arms around him.\n\nFinally Josh was able to step away from his family and sit with Danni. \"How'd you guys get here? I mean what about the farm? How long can you stay?\"\n\nWilliam smiled at his son; just like the boy to worry about us and the farm he thought. \"We got the spring plantin done and your uncles, Jake and Simon, are takin care of things until we get back. Figured we stay for a month or so, if that's okay with Danni.\" Then he turned to Red and Sarah, \"And if it's okay with the McCall's.\"\n\n\"You're welcome as long as you want to stay,\" Danni said, happy that she'd finally got to meet the people that meant so much to her husband. It was nice to be able to put faces to the people she'd been writing to.\n\n\"It's a big house with lots of room,\" Sarah responded.\n\n\"It'll give me a chance to tell you what your boy has really been up, not just what he wrote in his letters,\" Red added as he grinned at Josh. He walked over and shook hands with William and said, \"It's a pleasure to finally meet you Mr. Kelly.\"\n\nTaking Red's hand he said, \"Name's William to friends and family and I consider you part of the family Red. A close part after all those letters between Molly and you.\"\n\nMolly came to Red and hugged him. \"It's nice to finally meet my other son.\"\n\nRed blushed and returned the hug. Are those tears in his eyes, Josh asked himself. Can't blame him, my eyes are sorta blurry too.\n\nJosh turned to his brother to hide from the emotions. \"I can't get over how much you've grown Sam.\"\n\nSamuel at 6 feet was almost as tall as Josh. He hasn't filled out yet and will probably grow another inch or two in the next year or so, Josh thought. He's the spittin image of Pa; hard to believe he's 16 already. Guess I'll have to stop thinkin of him as a boy; he's almost a man now. \n\nHis \"little\" brother carried and handled himself more like a man than a 16 year old boy. After the first excitement of seeing Josh, he settled down. When someone asked him a question or talked directly to him, his response was thought out and calculated; he didn't ramble or talk more than was necessary with his answers.\n\nSamuel, almost at first meeting, had developed a crush on Danni. It was obvious to Molly and Danni that he already thought the world of his new sister and of Sarah too. When he met Red he was fascinated by the young Texan and the pistol he wore low on his hip. \n\n\"Did Texas John Slaughter really teach you to shoot, Mr. McCall?\" Samuel asked. \"That's what Josh wrote anyway.\"\n\nRed had to chuckle at Samuel's boyish enthusiasm. \"Yeah, he's my cousin and he thought I ought to be able to protect myself.\" Red whispered a question to William and getting a nod continued, \"Tell you what Sam, before you go I'll teach you a few things; just like I did with Josh.\"\n\nThe boy nodded his head and Red added, \"Just one thing. Your Pa says I'm part of the family so that makes you my little brother,\" he had to stop and laugh, shaking his head. Sam was almost 4 inches taller than him. \"You don't call you brothers by their last names; my names Red. Okay?\"\n\nSam nodded again and said, \"Really? That'd be great. When can we start? Pa, I'll need a pistol to practice with and........\" He realized he was acting like a young boy and stopped himself. \"Thank you Red. I really appreciate your help,\" he finished in a more sedate manner.\n\n\"One more thing, I'll show you how to be more accurate with a pistol, be a little quicker makin your shots, and pickin your targets. But I'm not teachin you to be a gun hand or gun fighter. Agreed?\"\n\n\"I understand Red and I'll remember what you said,\" Sam replied. William nodded silently at Red, happy that the young man had put some restriction on the lessons.\n\nIt was about an hour later that the Maguires, Daniel, Maggie, and Jacob rode up to the house. Jerry rode with them. Maggie rode Colorado, the horse Josh gave her for Christmas and Jacob rode Puma; another horse that Josh provided.\n\nJosh and Danni introduced the Maguires to the Kellys. Everyone was excited and pleased to meet the people that had become a part of their extended family. Jerry hung back a little, not wanting to intruded on what was basically a family meeting. Josh took his arm and pulled him over to his parents.\n\n\"Pa, Ma, this is Jerry Barnes. He's our partner,\" Josh said pointing to Red. \"Has been ever since we left Santa Fe.\"\n\n\"Jerry, this is my pa, William and my ma, Molly,\" he completed the introductions.\n\nMolly stepped to Jerry, put her arms around him, and kissed him on the cheek. \"Thank you for watching out for Josh; Red and Danni too. Josh wrote about how you covered them outside the store that day and how you protected Danni on the trail.\"\n\nJerry blushed and put his head on Molly's shoulder. When he stood back he had tears in his eyes as did Molly. William came over and offered his hand.\n\n\"This country must be pretty fertile; I just got here and I already got two new sons. You're part of the family too, Jerry,\" William said while shaking hands. \n\nThat night at supper Josh was glad that Tom Larson thought he was something special. Larson had bought a big dining room table that could seat twelve people. We just about fill it up Josh thought, looking at the eleven people sitting there. The evening was a happy time with everyone talking at once and having a good time.\n\nAfter a lot of talking it was decided that Daniel, Maggie, Jacob, and Jerry would stay for a few days at the Lazy L. Daniel and Maggie were given one of the four bedrooms in the big house; William and Molly took the other one. The arrangements filled the house so Jerry, Samuel, and Jacob bedded down in the converted bunkhouse. \n\nThat night in their bedroom Josh asked Danni, \"Did you know about them comin?\"\n\nDanni smiled and giggled. \"Yes, your folks and I have been planning this ever since we got married.\" Josh shook his head and chuckled pulling Danni to him.\n\nThe next morning Josh asked Charley and two of the hands to go over to the Maggie M and take care of the place for a while. \"Don't know how long it will be Charley so I'll send Mr. Swede with you to do the cookin.\"\n\n\"You sure he's gonna want to go Josh?\" Charley asked. \"You know how he is about his kitchen.\"\n\n\"Yeah, but Danni sweet talked him into goin. Mr. Swede said there were too many women around anyway,\" Josh answered with a laugh.\n\nRed asked the other hand James to take the surrey back to town but Jerry, Sam, and Jacob offered to do it. Sam was happy to go because he got to spend some time with people closer to his age and he got to ride Jerry's horse Morgan.\n\nWilliam, with Josh and Red guiding, took a tour of the Chico Basin Cattle Company over the next few days. On their rides Josh went into more detail about his trip from home to Fort Smith and to meeting up with Red east of Oklahoma City. When he got to that part, Red helped with the story of their adventures with the wagon train.\n\nThe young men told William about the raids on the train and meeting and bringing an end to John Fogerty and his band of cutthroats. \n\n\"Don't like to speak unkindly of the dead but that's one that the country can do without. No loss there,\" William said. It was quiet for a minute and he continued, \"Josh wrote about a few of your run ins Red. Heck, Danni ever wrote about them. I've got to ask, are you a gun fighter?\"\n\nRed looked William in the eyes and started to respond, but before he could Josh spoke up. \"Pa, I don't know what you heard but if it was anything bad about Red it was wrong.\"\n\n\"I was askin Red son,\" William replied.\n\n\"Yes sir, I know. But Red is my partner, no more than that, he's my friend. I guess you could say we're as close as brothers and I don't intend for anyone to talk bad about him. Not even you Pa,\" Josh replied.\n\n\"I didn't mean to bad mouth you Red. I was just askin a question.\"\n\n\"To answer your question Mr. Kelly....,\" Red began but at the look on Williams face he said, \"I mean William. No, I'm not a gun fighter. But I won't stand by when someone threatens my family, my friends, or me. I don't look for trouble but I can damn sure handle it if it comes to me.\" The last statement was said with a defiant look in Red's eyes.\n\nWilliam looked at Red for a minute or so and thought, this young Texan can be a hard man when need be. But I think you couldn't have a better one at your side if trouble comes. \n\nThese rides and talks took place over several days. Daniel returned to the Maggie M after two days but Maggie stayed on. He would come back to the Lazy L for two or three days and then go check on his part of the spread. The four women spent the days much like their men. Talking about how Josh and Red got to where they are and plans for the future. Sarah said she hoped the child she was carrying was the first of many. Danni said that she and Josh wanted a passel of kids too.\n\nDuring this time the younger men Jerry, Jacob, and Sam formed a close bond. Josh and Red were the guides for William and Jerry took over that task with Jacob and Sam. The \"boys\" would ride out early of a morning and often make it back to the ranch house just in time for supper. Red kept his promise to Sam and taught him how to handle a pistol. The youngster became skillful but always remembered that the gun was for protection and not for showing off.\n\nThe night that the extended clan dreaded came; the last night before the Kellys would start home. Josh, Jerry, and Jacob would ride into Colorado City with William, Molly, and Sam. Sarah was getting on in her pregnancy and she and Red stayed at the ranch. Now that the war was over and it was relatively safe to travel by rail, the Kelly's would board a train to begin the long journey back to Missouri; the trip home would take more than a week.\n\nThat night at supper the conversation was a little more serious. \"You know the war's over don't you Josh?\" Molly asked. \"It was over in early April, before we started out here.\n\n\"Yes em. We heard about it in Fountain at the telegraph office. Heard that someone shot and killed President Lincoln too. Gonna make puttin the country back together a lot harder.\"\n\n\"Now that it's over, do you think you'll ever come home?\" Molly asked hopefully.\n\nJosh looked at his mother and then at Danni, Red and Sarah. \"Ma, I am home,\" he answered with a lot of emotion. I miss y'all but I've got a life here now.\"\n\nMolly nodded as tears welled up in her eyes. \"I know and it's a good beginning. But I had to ask and hope.\"\n\nAt daybreak, William and Josh took one last ride together. They rode to the rise that overlooked the valley where Black Squirrel Creek ran. It was the same place that Josh had proposed to Danni.\n\n\"Nice place,\" William said. Josh nodded and explained the importance of that little hill to him and Danni.\n\n\"You've come a far piece Josh. Can't think of you as my little boy anymore, you've grown into a man. I'm proud of you son.\"\n\nJosh nodded but didn't answer; he and his father had always managed to embarrass themselves with their love for each other.\n\n\"I guess you've rode your last trail. You've come to the end here in Chico Basin,\" William said.\n\n\"No sir, I've got one more trail to follow.\"\n\n\"Where to?\" William asked puzzled.\n\n\"I've got to follow the trail to being a father. Danni told me this morning that she, I mean we, are gonna have a baby,\" Josh replied. He looked at his father, sharing the moment with him.\n\nWilliam couldn't talk for a few seconds. He cleared his throat and said, \"It's a good trail to follow Josh. I hope you'll be as lucky as I've been son.\" He paused and then said, \"You know what your Grandpa always said when there was a new baby born?\"\n\n\"Yes sir, I do. He always said \"Life goes on.\"\n\nTHE BEGINNING OF A NEW TRAIL"
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "historical",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-trail-west-ch-08"
}