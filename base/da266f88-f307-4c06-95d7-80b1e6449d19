{
    "title": "Guest Services",
    "pages": [
        "This Summer Lovin' submission involves fun, consensual sex between a 30-something man and a 40-something woman. Enjoy!\n\n\"Good morning, Loon Lodgers! It's another beautiful morning, so let's get to it! \n\nOur Little Loonies program will begin in ten minutes at the Crafts Building! Kids, don't forget to bring your bracelets or keychains if you didn't finish them yesterday. All you teenagers out there, come and join us for some tubing or water skiing in our Water Loonatics program! We'll meet down at the docks at 10:00 am. And for all of you older Loonies, the ping pong tournament will begin at 10:30! Don't miss out!\n\nThat's all for now, folks! We'll be back after lunch to tell you all about our afternoon activities! Have a fantastic Loon Lodge morning!\"\n\nShut. The fuck. Up, I think to myself, and pull my baseball cap down further over my eyes. \n\nI can't believe I am still here. Day three of this utter insanity. I have never felt less comfortable, less like I belonged anywhere. This morning I looked at my clothes, packed away in drawers that are not mine, in a cabin that is far too big for one person, and considered chucking everything in my car and just leaving. But my sister will be heartbroken if I leave. \n\nShe never could have talked me into coming here under any other circumstances. It has been a terrible year. I was lucky enough to keep my job during the pandemic, but I love my coworkers, and working from home has taken all of the fun out of the job. Even worse the pandemic proved to be the last nail in the coffin of my marriage; James had walked out of my life eight months ago. It had taken me by surprise; I knew we were not happy, but I had assumed we would continue to move forward, continue to at least try. \n\nWhat had taken me even more by surprise was the woman who was eagerly waiting for him to move out of my embrace and into hers. Younger, of course; perkier of course. Brunette, like me, but unlike me, the pandemic hadn't revealed two newly grey streaks of hair cascading from her temples.\n\nAt the time, I was embarrassed by it. I felt too young to be going grey. I'm only forty-two, I thought, despairing. But that's the thing about ageing. It doesn't matter if you feel ready for it or not; the grey hairs come just the same. \n\nJames said he didn't mind the hair. \"It's cool. You look kind of like Elsa Lancaster... you know, from 'The Bride of Frankenstein'?\" Then he laughed. He didn't have a single grey hair yet, despite the fact that he was seven years older than me. \"Honestly, you should just let it grow in. It looks good. You can't go to the hairdresser anyway. It doesn't matter.\"\n\nOf course it didn't matter. Why would it matter that I couldn't hide my own aging when he knew very well that he had a younger, perkier, shinier-haired girl with not a grey in sight, waiting patiently in the wings for him to make his escape?\n\nThat's probably unfair. Of course our marriage had problems, and I can't hold him responsible for all of them. But whatever. Like he said, it doesn't matter. I am alone and unhappy and he is gone and I can be as narrow-minded and unreasonable as I want to be. \n\nSandy will be so disappointed when she sees what a failure this experiment has been. I knew that she has been increasingly worried about me since James left, watching me listlessly move through routines, the bags growing darker and darker under my eyes. At the beginning I was washed away by sadness but, day by day, I feel myself retreating further into my flinty coldness, my bitchiness. \n\nFinally, in desperation, she invited me along to her annual family vacation at the resort.\n\n\"Come to Loon Lodge with us in August, Julie,\" she pleaded. We were at her house, doing the dishes. She had been inviting me over for dinner a lot over the past few months. \"The girls always end up sleeping in the same bedroom anyway, so we have an extra room in our cabin. They would love to have you there, and so would Mike and I. There's a pool, and a beautiful beach, and activities. And everything's included: food, drinks...well, the non alcoholic drinks are included, booze is extra, of course, but still...\" she trailed off, hopefully. \n\nI had been holding it together pretty well for the past few weeks, keeping my snide observations at bay, and not crying in front of anyone. But, at that moment, I thought that I might break down. There was no way I could be at that resort and not pull Sandy down into my churning sadness with me. She must have known that. And yet here she was, supporting me like she always did, opening up her family and her precious vacation time for me to ruin. \n\n\"Sandy, you guys don't want me there. Trust me. I'll be the spectre at the feast. I'm not myself right now, and it's not fair to Mike and the kids. Or you, for that matter. I'll just drag everyone down.\" \n\nShe smiled. \"Look, Ms. Spectre, I do not plan to let you drag everyone down. I know you're sad, but I'm not just going to let you ruin my vacation, for God's sake. Here's what I'm proposing. You come to the Lodge with us, and we agree that everybody does exactly what they want. There will be no pressure to hang out together. No expectations. The girls will be going to the kids' programming anyway. You don't even need to talk to us. If you want to, you can join us for dinners and the kids will talk our ears off about what they did that day. But if you don't want to hang out with us at all, that's cool too. Just hang out in your room if that's what you need. I'd just like to know that you won't have to be alone if you don't want to be. Please? For me?\"\n\nI was wavering. \"You promise? No pressure? Because if I'm feeling terrible, I'll just hole up with a book or something. I don't want you trying to convince me to go wakeboarding or bungee jumping or anything ridiculous once I'm there.\"\n\nSandy laughed. \"They don't even HAVE bungee jumping there, Julie. I'm taking you to a relaxing resort, not SEAL training, you know.\"\n\n\"And Mike's really okay with it?\"\n\n\"He really is. What do you say? If you're going to be sad, you might as well be sad on a beach. And then at dinner, if you do feel like talking, you can regale us with the tales of your very exciting misery!\"\n\nSandy always knew when she could tease me, even in the darkest situations. She also knew when she had me convinced. I threw a dish towel in her face and even managed a little laugh.\n\n\"Okay. I'll go. But don't expect to see much of me that week. I mean it.\" \n\nOf course, I had no idea then that she wouldn't see any of me this week. On the morning of our trip, Kyla, Sandy's youngest, felt sick and had a fever. Sandy phoned me, frantic with worry, asking if I could buy and drop off groceries for the next few days so that the entire family could quarantine. Mike had taken Kyla to the centre to go and get tested for COVID. \n\n\"Promise me you'll still go to the lodge,\" Sandy had pleaded with me through the screen door, when I brought the boxes of groceries to her house. \"You might as well. They'll never refund us on such short notice, and I really think it would do you good. Please? I can't have you over here anyway until we know for sure what's going on.\"\n\nI agreed, just to calm Sandy down. She was beside herself, and I didn't want her to worry about me on top of everything else. I'd just go. How bad could it be? And when the week was over, I'd surprise her and pay her back for the entire stay. Even if I hated every second of it. She and Mike had certainly done enough for me over the past year to warrant it. \n\nSo I dutifully loaded up my car and headed to the Loon Lodge alone. It was only 45 minutes from my house, which is why Sandy chose it in the first place.\n\nFrom the moment I drove through the front gates, I knew what a mistake I had made. Everything about the resort was geared to happy families. Kids ran to and fro between the pool, the splash pad, the playground, the beach, and a big, barn-like building that probably housed games or crafts or some such thing. Young, Instagram parents waved their fruity cocktails at each other from lounge chairs and cabin porches. All of the signs featured an anthropomorphized loon that looked like he was on speed. Wide-eyed and open-beaked, his wings pointed towards the resort's various amenities, which were listed in a bulbous, cartoonish font. Chipper staff in matching golf shirts and khaki shorts did their best to hide their surprise that a single, forty-something woman was checking into a three bedroom cabin, alone. \n\nThey did not hide it well. \n\n\"So, it's... just you, checking in?\"\n\nI smiled, tightly. \"Yep.\" \n\n\"Wow! Good for you!\"\n\nI couldn't deny the beauty of the grounds, however. The entire property swelled with mature, magnificent spruce, pine, and sugar maple trees, and their scent was heady and intoxicating. The gardens around the main buildings were stunning; not perfectly trimmed and manicured like some commercial gardens, but rather retaining a wild, unkempt beauty. The long sandy sweep of the beach led to a glinting lake that lapped lazily against the shore. \n\nAnd, best of all, my cabin was the perfect blend of rustic and luxurious; cedar planking and a stone fireplace gave everything a warm, cosy glow in the afternoon sunlight, and the bed was deep and comfortable. Despite the fact that all of the meals were provided in the main lodge, I had brought enough groceries to last a week, and planned to cook for myself in the tiny kitchenette. \n\nI staggered to and fro from the car to the cabin with my luggage and supplies. As I put my groceries away, I kept checking my phone for messages from Sandy. Nothing yet. I pushed my leaping worries out of my mind. \n\nI'll hide in this cabin all week, I decided. Just lock myself in, away from everyone's prying eyes, then emerge before sunrise next Saturday morning and drive out of the gates again. I'll be the witch of Cabin 8, the mysterious woman who checked in on her own and who was never seen again. Fine by me. \n\nFor the rest of the day, I busied myself around the cabin, unpacking my clothes into the dresser in the largest bedroom, and stowing my bags in one of the other bedrooms. I idly read the information about the resort, more for something to do than any real interest. Once everything was in place, I pulled out the copy of Getting Past Your Breakup that Sandy had bought for me last month. I spent the rest of the night reading and rereading the same pages as my mind wandered to Sandy, to poor little Kyla, and to James and his young, beautiful girlfriend. Finally, in frustration, I went to bed. \n\nI awoke at sunrise the next morning, feeling groggy and disoriented. I checked my phone: still no messages from Sandy. Oh God. Was that a good sign or a bad sign? I sent her a quick text.\n\nIs everything ok? \n\nNo response. \n\nI got out of bed, made coffee and sat on the sofa. I tried to read again, but I felt trapped and claustrophobic. I tried to read but, once again, I could not focus. I went out on the porch and tried to steady my breathing. It was all wrong, my coming here. What if Sandy's whole family had COVID? They'd need my help, then, surely. What the hell was I doing?\n\nIt hasn't even been twenty-four hours, my rational brain tried to assure me. You haven't heard anything because there is nothing to hear. But my emotions were swirling far too quickly for my rational brain to have any real impact. \n\nFinally, at lunchtime, my phone beeped. \n\nEverything's ok. Covid test negative. Seeing doc this aft but we think it's an ear infection. \n\nI exhaled. \n\nThank God, I texted back. Will you be able to come here after all?\n\nI doubt it. She's in rough shape. Maybe at the end of the week for a day or two?\n\nDamn. After a moment, I texted: \n\nMaybe I should come back? Help you look after her? \n\nThere it was. The perfect excuse to leave was within my reach. The little ellipsis on my phone flashed, taunting me as I waited for her reply. Then:\n\nI was hoping you'd say that yes please come I need your help I don't know how I will manage this terrible disease that has befallen my beloved youngest child please god let her live\n\nThen, a rapid pinging as texts flew onto my phone in quick succession:\n\nIt is an EAR INFECTION, Julie\n\nIt's not tuberculosis\n\nJFC just stay at the damn resort\n\nDo not use this as an excuse to leave\n\nGo to the fucking beach, Julie\n\nI sighed. It was worth a try. I texted:\n\nHow do you know I am not at the beach right now? \n\nA moment. Then:\n\nGO TO THE FUCKING BEACH, JULIE.\n\nI couldn't help but laugh. I texted back:\n\nYOU DON'T NEED TO SHOUT, SANDY.\n\nThe thing is, she was right. I actually was happier once I got to the beach. The air was fresh and warm, and the rhythmic wash of the waves over the sand was soothing and meditative. Most of all, I was relieved by Sandy's good news. I hadn't let myself realize how truly worried I had been. \n\nThe beach was crowded with parents and kids, but I had dragged my lounger into a shaded corner at the edge of the woods, where the sand ended and the carpet of pine needles began. It was easily the least desirable location on the shore, as it was furthest from the water, the snack shack, and the path back to the cabins, but that suited me just fine. \n\nIn my sunglasses and baseball cap, I felt almost invisible. I hadn't even bothered to put on a bathing suit; I just wore my most comfortable shorts and t-shirt. I couldn't bear to advertise my sorrow by bringing Getting Past Your Break Up to the beach. Instead, I flipped idly through a magazine and watched people splashing in the surf. I didn't interact with anyone except the girl who gave me a lemonade when I trudged over to the snack shack. After a few hours, I put down my magazine and closed my eyes. My restless night and the warm afternoon sun overcame me.\n\nI'll close my eyes for just a minute, I thought. \n\nIt felt like I had just drifted off to sleep when a voice pierced my dream:\n\n\"Ma'am? I'm sorry to disturb you but it's five o'clock.\" \n\nI opened my eyes just enough to see a tall, blurry figure next to my lounge chair. \n\n\"What?\"\n\n\"It's five o'clock. Dinner is being served in the lodge. I just didn't want you to miss it.\"\n\nI lifted my head and looked groggily around the beach. It was nearly deserted; just a few families remained, packing their things into tote bags. I looked back at the man again and took in his sandy blond hair, his open face and smile. He was probably about ten years younger than me, and his cheerful disposition irked me. He was wearing a ridiculous loon-shaped name tag, and on the outstretched wing was printed Tyler: Guest Services. I laid my head back down and closed my eyes again.\n\n\"Tyler, the only people who willingly eat dinner at five o'clock are seven-year olds, grandparents gunning for that sweet, sweet early-bird deal, and psychopaths. I'm good.\" \n\nI heard a strange sound next to me, a sort of muffled snort. I didn't know if it was laughter or indignation, and I was too sleepy to open my eyes again to see. I didn't care.\n\n\"Okay, ma'am. I'll remember that. Have a good night.\" I heard the soft swish of sandy footsteps walking away. \n\nHours later, I awoke with a start, panicked. The sun had set, and the beach was deserted. My neck felt stiff from lolling sideways on the lounge chair. I sat up groggily and looked around. All of the other loungers that had been strewn about and occupied all day on the beach had been gathered and neatly stacked about twenty feet away from me. I checked my watch. 8:30. I had been asleep for hours. My toes were chilled, and I pulled them up closer so that I could tuck them under the blanket.\n\nThe... blanket? \n\nI had not brought a blanket with me. I sat up and flipped it over, squinting at it. It was a soft blue fleece, plaid on one side, solid navy on the other. Embroidered in the corner were two Ls, with a picture of a loon underneath them. Humiliation washed over me. Someone, probably handsome, sandy-haired Tyler, had covered me up while I slept, as if I were his ailing grandmother. Looking around furtively, I quickly balled up the blanket, shoved it into my bag, and hurried up the darkening paths until I reached my cabin. \n\nI was surprised and disheartened by my embarrassment. I had convinced myself I did not care one bit what anyone thought of me here, and here I was, all flustered and self-conscious. Get over it, I told myself. You ARE the old spinster here. You might as well embrace it. \n\nAnd that's how I got here. Day three. I almost didn't come back to the beach today. But I forced myself to get my ass out of that cabin. The only thing worse than being embarrassed about last night was my absence showing that guy that I was embarrassed about last night. I even put my bikini on, although I did throw my oversized t-shirt over it. I folded up that damn blanket, dropping it in a housekeeping laundry bin on my way, and marched my ass back down there. I dragged my chair to the same, secluded spot as yesterday, wincing as the loudspeakers blared the customary morning announcements: \n\n\"Good morning, Loon Lodgers! It's another beautiful morning, so let's get to it! \n\nOur Little Loonies program will begin in ten minutes at the Crafts Building! Kids, don't forget to bring the bracelets or keychains if you didn't finish them yesterday. All you teenagers out there, come and join us for some tubing or water skiing in our Water Loonatics program! We'll meet down at the docks at 10:00. And for all of you older Loonies, the ping pong tournament will begin at 10:30! Don't miss out!\n\nThat's all for now, folks! We'll be back after lunch to tell you all about our afternoon activities! Have a fantastic Loon Lodge morning!\"\n\nI don't know how I slept through the loudspeaker announcements yesterday. They are inane and incessant. \"Good morning, Loon Lodgers! Time for lunch, Loon Lodgers! Let's hit the shuffleboard, older Loonies!\" It's like hearing the drills in the dentist's office. Except you know that, at some point in the day, you'll get to leave.\n\nYesterday, my relief and fatigue made the beach seem bearable, even idyllic. Today, all of my sadness and anger is rising again in me like bile. The sun feels glaring and hot, the sand burns my feet, and there is noise everywhere. But I have parked my ass in this lounger so that I can tell my sister I spent another day at the beach. Maybe two days of sun will satisfy her. When I call her tonight and say that it's not working out, she'll understand. \n\nAt noon, I go back to my cabin and eat lunch and have a little nap. Then I grab my beach bag and trudge right back to the same spot. My lounger is exactly where I left it. It's like I'm punching a clock, I think. Just filling in hours like a factory worker. \n\nI aimlessly flip through the same magazine I read yesterday, then I put it down on my lap and idly watch the others on the beach. I feel twitchy and resentful, and I direct my ire to the fathers in particular. As I study each man with his wife, I wonder if he is sleeping with someone on the side. I watch how the men interact with their wives, whether or not they reach out to touch them on their arms, their backs. I watch their eyes, to see if they wander. Some of them do. But maybe that's natural? There are so many women in bikinis. Or maybe they're all just pigs.\n\nAs I look at the couples, I label them based on how long I guess they have left in their marriage. Five years. Six months. It's over already and they are just fooling themselves. I know that what I am doing is further corroding my mood, but I don't care. I want to be angry. It feels good. \n\nI watch the men, one at a time, my eyeline and expression hidden behind my sunglasses. As I study each man, I wonder idly if I could lure him away from his wife. Which man could I pry away from his family? Which man could I bring into my cabin then into my bed?",
        "It's all nonsense. I don't want these men, and even if I did, I would never do anything like that. I know all too well how it feels to have someone shove their way into your marriage and then gradually inch you right out of it. It is the last thing I would ever do to someone else. \n\nI just want to know if I could.\n\nI want to know if it's even possible to make someone want me anymore. Because I have only slept with one man in the last twenty years and, deep down, some part of me thinks that I will never have sex again. \n\nThere is no one in particular that I actually want, but I feel the low, steady hum of my sex drive underscoring everything I do. It's infuriating. It persists through my sadness and through my anger. I want to make love to someone. I want to fuck someone. I want to feel excited again. And it is maddening that I might be at the age where my sex drive is strongest at the same moment that the only viable partner I had has been torn out of my life. \n\n\"Did you have a good sleep last night, Ma'am?\"\n\nI start. It's him. He approached from behind and I didn't see him coming. Oh well. I might as well get this over with. \n\n\"Hi. Yeah, sorry about that. I dropped that blanket off in a laundry basket, so it should be all good.\"\n\n\"Sorry about what?\" \n\nThis takes me aback. He's right. What am I sorry about? I didn't do anything wrong.\n\n\"Sorry for staying out here so long, I guess. And that you felt you had to bring me that blanket.\" \n\nHe chuckles. \"I hate to tell you this, but you are not the first person to fall asleep on the beach. Although you may be the first person to be smart enough to do it in the shade. I'm glad you're able to relax here. This is a great place to get away from stress.\" His smile is bright and he seems to be inviting more conversation.\n\nI want to be won over, but I just can't break through my bad mood. \"Yeah, well, I don't need you checking on me. I'm just fine on my own.\" \n\nHe smiles. \"Sorry, ma'am. Making sure that the guests are comfortable is part of my job. And, if you don't mind my saying, Loon Lake might not have been the best choice if you were looking for solitude.\" \n\nI glare at him. \"Tell me about it.\" \n\nTyler is unperturbed. \"Point taken. Before I leave you alone then, can I bring you a drink of some kind?\"\n\nI look at him and take in his blue eyes, his warm smile, his broad shoulders. He's even more handsome than I remember, and strong. He's not like the pretty boy husbands on the beach who spend hours in the gym honing each tiny muscle and meticulously waxing every hair off of their body, but the kind of strength that just comes from enjoying a variety of activities and moving happily through life. \n\nBut still. None of that matters if he is patronizing me. And I'm sure he is. Besides, I have already decided that I am spending this week alone, so handsome doesn't matter one bit. \"Guest services, huh? So what, you're a waiter?\"\n\n\"Nope. I'm not a waiter. We don't have wait service on the beach. Would you like me to bring you a drink of some kind?\"\n\nHe's trying to win me over. But I won't give him the satisfaction of a smile. I came here to be bitter and angry, thank you. If he's not a waiter, I decide, I'll call his bluff.\n\n\"Fine. Yes. You can bring me a drink.\" \n\n\"Great,\" he says, and turns away from me.\n\n\"Wait! Don't you want to know what drink I want?\" I call after him.\n\nHe turns, walking backwards for a few steps, and winks at me. \"Nope,\" he calls back. \"I'm good.\" He turns again and heads off towards the snack shack.\n\nAnd despite myself, I feel a flush creep up my neck. He is friendly and he is handsome and he winked at me. \n\nIt's his job, I tell myself. Guest Services. He must flirt with all of the women here. It's all about getting tips. I'm not going to fall for that.\n\nStill, I sit up and pull my t-shirt off. It's not for him, I tell myself. I was much too hot before. I tuck my hair back up into my baseball cap and lie down again. He probably won't even notice. \n\nStill, I know I look good in this bikini. I bought it for a cruise that James and I were going to take before the world fell into a global pandemic and my marriage fell to pieces. He never even saw it on me. It's pale pink, a colour that normally I would loathe, but it makes my skin look creamy and smooth. The halter top that ties behind my neck gives me the security of full coverage while, at the same time, showing a tantalizing amount of cleavage. \n\nAfter about ten minutes, Tyler returns. He stops a few feet away and, just for a second, I can see his eyes widen as they flick up and down my body. He refocuses on my face and finishes his walk up to my chair. \n\n\"Your drink, ma'am,\" he says. \n\nI take the fruity concoction from him, and sniff it, eyeing him suspiciously. \n\nHe laughs. \"I promise you, it's safe. And delicious. And nutritious!\" \n\n\"Uh huh.\" I deliver this skeptically, but I can't keep a little smile from creeping onto my face. \n\n\"Ma'am, if you don't absolutely love that drink, I promise you I will immediately fall on my sword and resign.\" \n\nI give up and let out a laugh. \"Well, those are some high stakes, Tyler,\" I say, lifting the drink to my lips. It's delicious. Fruity, crisp, bubbly, and with a substantial hit of alcohol. \n\nSo? What do you say? Do I get to keep my job?\"\n\nI nod sagely. \"Yes, you do. For today, at least.\"\n\nHe gives an elaborate bow. \"Thank you, ma'am. I appreciate your mercy and your excellent taste.\" \n\nI smile. \"Can we do away with the ma'am? It makes me feel like an old lady. I'm Julie.\" \n\n\"Nice to meet you, Julie,\" he reaches down and shakes my hand. \"And now I shall leave you in peace. Enjoy your afternoon.\" \n\nI suddenly feel off balance. Now I don't want him to go. But what did I think, that he was going to stand here and talk to me all day? He has a job to do. Quickly, I arrange my face into a smile. \n\n\"You too. And thanks for the drink. It really is delicious. You can bill it to Cabin 8.\" \n\nHe winks again. \"Nope. That one's on the house.\" And he's gone. \n\nIt's amazing what someone flirting with you can do for your spirits. I know that he was just being nice, just doing his job, but now I must admit that I am happy to be here on this beach. \n\nI even go into the lake. Not once, but twice. The cool water feels wonderful against my skin. I can't help but think about Tyler's eyes on my body. Under the dark lake water, I allow my hands to brush against my stomach, my thighs, my breasts. It's as if nerve endings that had been severed had suddenly sprung back to life under his gaze. \n\nI go back to my cabin, make myself a quick dinner, then rush back to plop myself on the lounger again. I'm not even trying to fool myself anymore. I want to see him again, and this is the only place where I know he might be tonight. I want to flirt and laugh and have someone pay attention to me. Maybe I want more. I let my brain spiral off into fantasies, and then reel it back in trying to shield myself from future disappointments. I apply and reapply sunscreen so that I don't cook myself to a crisp as I wait for him.\n\nIt's pathetic. I'm like a teenager with a movie-star crush. \n\nAs the sun begins to slip below the horizon, the last of the families begins to gather up their things and pack them away. I am prepared to wait it out, I brought books, a bottle of water and a snack. I've pulled on a plaid button down shirt to compensate for the cooling air, but left it open in case Tyler comes back and sees me. If anyone asks why I'm still on the beach after dark, I'll say that I'm out to look at the stars. No one will dare question the witch of cabin 8. \n\nAnd then I see him. He's at the far end of the beach, stacking lounge chairs. I watch him move, strong and confident. As the stack of chairs grows, he has to lift each lounger higher into the air. His shirt lifts, and I see just a little extra flesh around his middle. I love that, I hate it when a man is all sharp corners and hard angles. I want to put my arms around his waist. \n\nIt takes an eternity for him to make his way down the beach towards me, but when he does, he doesn't seem at all surprised to see me. \n\n\"Hi Julie,\" he says, hoisting the last of the empty loungers onto a pile. \"Did you have a good day?\"\n\n\"I did, thanks,\" I say, smiling.\n\n\"Well, it must be a Loon Lake miracle!\"\n\n\"Har, har,\" I say, smiling more widely. \n\n\"And I even saw you in the water a couple of times!\"\n\nA couple of times. I only went in twice. He must have been watching for me. A little thrill zings up my spine. \n\n\"I did,\" I say. \"It was lovely.\" \n\n\"Mind if I sit?\" he asks, gesturing at the end of my chair. I nod and pull my knees up, making room for him. He sits sideways, perpendicular to me.\n\n\"So, Tyler, do Loon Lake Guest Services representatives usually get the glamorous job of stacking chairs at the end of the night?\"\n\nHe laughs. \"No, not usually. Usually it's some teenager. But we've had a lot of trouble finding live-in staff during COVID, so we're all just kind of doing everything. This is actually my cousin's business,\" he continues. \"I've been working here for the last six summers. It's a good gig.\" \n\n\"What do you do over the winter?\"\n\n\"Ski Instructor. Total Canadian clich\u00e9. Just a couple hours north of here, so it's all pretty local.\" \n\n\"It sounds like a great life.\" \n\n\"It's fun. I'm probably getting a bit old for it, but I can't seem to give it up. Just a drifter, I guess,\" he smiles. \"Now can I ask you some questions?\"\n\n\"Wll, you can ASK,\" I say. \n\nHe laughs. \"If you're on your own and you wanted to relax... why did you come here? \n\nI sigh. \"I was supposed to be here with my sister's family. Then her daughter got a bad ear infection and they had to stay home. I promised her I'd still come, so... here I am.\" \n\nHis eyes widen. \"Wait. Do you mean Mike and Sandy's family?\"\n\n\"Yes!\" I exclaim. \"You know them?\"\n\n\"Well, you get to know the regulars, the folks who come up for the same week year after year. I should have clued in when you said you were in Cabin 8. I like Mike and Sandy. They're great.\" \n\n\"Yes, they are.\" I fall silent.\n\n\"But... you don't seem to be having a very good time here. When I first tried to talk to you, quills shot out of you like you were a porcupine.\"\n\nI feel ashamed. Even if I had wanted to be left alone, there was no excuse for me being such a bitch to someone who was just trying to be nice. \"I... recently went through a bad breakup. Sandy thought that me coming along with them would cheer me up. But now I'm alone, and... just seeing everyone here... it's just a lot of happy family togetherness to take in.\"\n\n\"I get that,\" he says. He has this way of holding my gaze thoughtfully, like he is trying to figure me out. I shift uncomfortably in the chair. It's quiet except for the gentle waves and the crickets in the grass. The silence becomes unbearable.\n\n\"Look, you don't have to stay here and talk to me,\" I say quickly, shifting again, trying to find room for my legs. \"It's fine. I'm fine.\" \n\nTyler smiles. \"I'll go if you want me to. But I'd like to stay. I like talking to you. Here, why don't you stretch out your legs? Just put them across mine?\"\n\n\"It's fine. You don't have to do that.\" \n\n\"Julie. If you think stretching out will make you less comfortable, then stay like that. If you think it will make you more comfortable, then pull those quills in and give me those legs,\" he jokes.\n\nAfter a second, I extend my legs over his. I can feel the wiry hairs of his thighs under my calves. His legs are warm and his quad muscles are toned. He rests his hands on my shins. \n\n\"Is that ok?\" he asks.\n\n\"Yes, that's much better. Thank you,\" I say, gratefully.\n\nHe cocks his head. \"Why are you so defensive every time someone tries to do something nice for you? I mean, you don't have to tell me if you don't want to. But it's okay to accept it when someone tries to make your day a little better.\"\n\n\"I don't know. I think when my husband left I forgot how to be myself.\" I had meant it to be a light quip, but suddenly my throat feels tight.\n\n\"I'm sorry,\" he says. \"That's rough.\" \n\nHe doesn't try to give me advice or tell me to see all of my blessings. I'm so grateful. \n\n\"Anyway. I'm sorry for the way I behaved when we first talked.\"\n\nTyler laughs. \"I didn't mind. I like a fiery woman. It kind of made me want to talk to you more.\" \n\nAnd before I know what I'm saying, I blurt out \"And I'm glad you came back. I was hoping you would.\" Dammit. I can't believe I said that. My face flushes, and I look away, down the beach. \n\nAlmost imperceptibly, his thumb begins to move on my shin. \n\n\"Truthfully?\" he says. \"I was hoping that you would be here when I got back.\" \n\nI force my eyes to meet his. \"You were?\"\n\nHe nods. \"Uh huh.\"\n\n\"Why?\n\nHe stops to consider for a second, and then says. \"I'm not sure. I just didn't believe that you really wanted to be left alone.\" Now he starts to run the palm of his hand up and down my leg, cupping my calf. \"And I just sort of felt that you were a person that I wanted to keep doing nice things for.\" \n\nFor a second, I'm so happy I can't speak. I'm too nervous to meet his eyes because I know where this is going to go, so I close my eyes and relax my head on the chair. \"Mmmmmm. That feels nice.\" \n\nHe continues stroking, up to my knee, down to my ankle, and back again. \"It sounds like you have been through a lot. We can stay here for as long as you want. I really like talking to you. But...\"\n\nI open my eyes. He is looking right into them. \n\n\"...what I'd really like to do is kiss you.\"\n\nI can't bring myself to speak. I nod. \n\nTyler moves my right leg off of his thigh and puts it on the lounger behind him so that he is sitting between my legs. He shifts himself further up the chair, and angles his body to face me. My hot centre is suddenly just inches from his hip. \n\nHe leans in and kisses me softly. He backs away, looking into my eyes. My eyelids flutter closed, and he leans in again. \n\nHe's such a good kisser. His lips are soft and firm, and after each time he explores my mouth, he backs off to gauge my reaction. I can tell that he is matching his passion to mine. It's a delicate interplay; soft kisses, his tongue running across my upper lip, his teeth gently pulling on my lower lip. It's not until I wrap my arms around him, one hand on his shoulder, the other creeping up into his hair, that he moans into my mouth and deepens the kiss. \n\nAfter a few breathless minutes, he slides his left arm around my back and pulls me up towards him. I wrap my arms around him more tightly and use my legs to pull my body closer to his. He pulls my baseball cap off, drops it to the sand, and pushes his right hand up into my hair. He gives it a gentle tug, and my head tilts back, exposing my throat to him. He drags his tongue down my jawline, kissing me down my neck, along my collarbone. \n\nJust when I think I can't bear it anymore, he gently pushes me against the slanted back of the lounger and looks at me with a smile. I'm breathing heavily and trying to keep my hips still. He turns his body to face me properly, one leg bent and resting on the chair, and strokes my thighs.\n\n\"That is a very, very nice bathing suit. I have been thinking about that bathing suit all day long.\" He says, running his fingertip between my breasts and down my stomach. \n\n\"Really?\" I say with a knowing smile, and fully open the plaid shirt covering it. \"I'm glad you like it.\" \n\n\"Mmmmm. It is so, so sexy,\" he says, shifting his body so that he can kiss me again. He devours my mouth with his, and then he moves slowly back down my neck, and then down to the space on my chest between the triangles of fabric. I can't keep my hips still anymore, they are rising and falling, desperate for some kind of friction. \n\nHis fingers trail along the edge of the halter top, and then just barely hook underneath the fabric. He raises his head to meet my eyes again.\n\n\"May I?\"\n\nI scan the beach. No one else is there. And if someone does come, I can quickly close my shirt. \n\nI meet his eyes, bite my lip and nod. \n\nHe gently lifts the triangle of fabric and pulls it to the side. The pressure of the ties push my breast up towards his mouth. Tyler lazily runs his tongue around my entire breast, and then continues in smaller circles, moving into the centre. By the time his tongue meets my hard nipple, I am whining. He's barely touching it, his tongue just glancing over the pebbled tip. I squeeze my arm against my side, trying to push my nipple further into his mouth.\n\nFinally he closes his lips around it, still flicking the sensitive tip. I let out a groan of relief, arching my back, my hands clasping the back of his head. He sucks, licks, bites at it. When I open my eyes to watch him, his eyes are on my face, seeing what sensations drive me higher, what my body responds to. \n\n\"God, that feels so good,\" I half whisper, half groan. \n\n\"Mmmmmmm.\" he responds around my nipple, and he reaches over to lift my other breast out of the bikini. He starts to kiss his way across my chest, but stops in the middle, raises his head, and puts two fingers and his thumb into his mouth, wetting them. Then he moves them to the nipple he just left, circling, pulling, teasing, and sucks my other nipple into his mouth. \n\n\"Ohhhhh fuck.\" It just comes out of my mouth. I quickly glance down at him. Maybe he doesn't like dirty talk. But he smiles and moans against my breast, and flicks his tongue rapidly against my nipple. The sensations are so sweet and so intense that I wrap my legs around his back. My pussy is aching, I need to grind against him, but I still can't quite make contact with him.\n\nTyler lifts his head from my nipple, takes one breast in each hand, and pushes them together. Then he starts running his tongue from one nipple to the other, back and forth, back and forth. He's devouring me with his lips and his tongue and it feels so, so good. My hips are working towards him and I'm gasping and I think I might come. But just as the sensations are reaching their peak, he lifts his face away from me. \n\n\"Mmmmmm. Not yet. I want to feel you come, but I want to be licking your pussy when you do. Would you like that, baby? Would you like to come in my mouth?\n\nOh fuck. He does like dirty talk. I moan, loudly. \"Oh, my God, yes. Please lick my pussy.\" \n\nHe quickly scans the beach again, and then moves his body down the lounger so that he can kiss my stomach. He runs his tongue along the edge of my bikini bottoms, and then sits up. He ghosts his fingers over my stomach, my hips, my thighs, then runs them gently down the crotch of my bathing suit. His eyes widen.\n\n\"Oh my God, baby. You're soaked right through.\" he pushes his fingers against me again, exploring my pussy through the bathing suit. All I can hear are my whimpers and the squelching sounds his fingers are making. When he lifts his hand again, I can see that it is glistening with my juices. \"You're so fucking wet, Julie. Fuck, that's sexy.\" \n\n\"That's yours,\" I whisper, gyrating my hips. \"Please. Make me come. I need it.\" \n\nHe groans and slides down again and kisses my pussy through the bathing suit. My clit is already so swollen that he finds it easily and teases his tongue against it. \n\n\"Mmmmmm, Your little clit is so hard right now. It's poking right through your bikini.\" He closes his lips around it and sucks gently. Then he licks it, flicking his tongue against the hard nub. \n\n\"Please Tyler,\" I beg him. \"Please. Take it off. I can't take it.\" \n\nHe chuckles gently at my desperation, and slowly moves the crotch of my bathing suit to one side. \"Is this what you want, sweetie?\" he asks, kissing my bare lips, the tip of my clit, so softly that I can barely feel him. \"Like this?\"\n\n\"Yes. God, yes. More.\" I manage, before he pushes the tip of his tongue into my dripping hole. I cry out briefly, forgetting where I am, and then he slowly, slowly, drags his tongue up my slit until it slides over my sensitive clit.",
        "Then he does it again. And again. And then he moves up and gently pulls my clit into his mouth, teasing it with the very tip of his tongue. \n\nI'm trembling, shaking, already on the edge. But he's not driving me straight to my orgasm. He's backing off, teasing me, not letting me find release. Not yet. His face is buried between my legs, doing everything I want him to do and yet not at the speed or pressure that I need to come. He's prolonging my pleasure. \n\nI keep trying to spread my legs further for him, but my legs are hemmed in by the curved, plastic arms of the lounge chair. \"Move down,\" I tell him. If I can move down past the arms, I can be fully open to him. \n\nHis eyes flick up to me, and he lifts his mouth from my pussy. He gently moves the crotch of the suit back into place to cover me.. \"Uh uh,\" he says, shaking his head. \"You move up. Push as far back as you can.\" \n\nI don't know what he's thinking, but I do what he says until I can feel the small of my back pressed against the inclined part of the chair. \n\n\"Bend your legs and lift up so we can take these off, baby.\" I do it. He hooks his fingers into my bikini bottoms, and slowly pulls them down over my ass. I lower myself to the chair and he pulls them the rest of the way down my legs and off. He tucks them into my beach bag.\n\n\"Now,\" he says, with a smile on his face. \"Let's try this.\" \n\nAnd with that, he puts his hand under one of my knees. Oh fuck. I know what he's doing. He lifts my leg, and hooks it over the top of the arm of the lounger. Then he does the same with the other leg. My legs are trapped on the outside of the chair, and I am spread wide open for him. \n\nMy head tips back and I revel in how fucking filthy this is. My shirt is gaping open, and my tits are fully visible, pulled out of my bikini top. From the waist down I am completely naked, my legs spread. My pussy wide open and I can feel my juices running down the crack of my ass and dripping onto the mesh beneath me.\n\n\"Fuuuuck, that is so, so beautiful,\" Tyler breathes. He slides back further on the chair, lowers his face to my pussy again, and begins to devour me. \n\nIt is so fucking intense. He's pushing his face into my cunt with abandon. He's sucking and licking, pushing his tongue deep inside me, making sweeping circles around my lips, down to my asshole, back up to my clit. I realize that my hands are on my breasts, pulling and teasing my nipples as I watch his face work in my pussy. I begin to shake. \n\nThen he lifts his face from my cunt and slides two fingers into his mouth. Pulling them out again, he moves them to my hole, and pushes them just inside me. Using his thumb to tease my clit, he watches my face as he slowly pushes them in deeper. \n\nImmediately, my pussy muscles clamp down around them, trying desperately to draw them in deeper.\"Yessssssss,\" I moan.\n\n\"Oh god, baby, your pussy's gripping me so tight. Do my fingers feel good in your needy pussy? You want more?\" \n\n\"Please, yes, I need more,\" I whine.\n\nHe takes his fingers out, and slowly licks my juices off of them. Then he puts three fingers into his mouth, pulls them out, and slides all three slowly back into my pussy.\n\nIt's so good. I feel so full, and my cunt spasms against them. He starts slowly and gently massaging the front wall of my pussy, and lowers his face to my clit again. And now I know there is no stopping my orgasm, it's just a question of how high I will climb before I plunge over the edge.\n\nAnd now he starts talking to me between licks. \"Fuck, Julie, you are so delicious. Mmmmmmmm. It's so good. I want you to come, sweetie.\" \n\nMy hands have flown behind my head to grip the top of the lounger. I can feel my stomach muscles tensing and I'm starting to shake.\n\n\"Ohhhhhh, your sweet cunt is squeezing my fingers so hard. Come on, baby. Come for me. I want it. Come in my mouth.\" \n\nMy breath is coming in great gasps. The pleasure is so intense that instinctively I want to close my legs as some kind of act of self-preservation, but the arms of the chair are preventing it. I am bound here, trembling on the edge, and then Tyler pushes his fingers into me as far as they can reach. The tether snaps and a blinding light explodes behind my eyes. I am flung apart, pulsing and throbbing and shaking over and over. \n\nAs my spasms begin to subside, Tyler locks his lips around my clit, not flicking or teasing, just applying soothing pressure. His fingers are deep inside me, just gently pushing up against my inner wall.. I keep my eyes closed as my body twitches through wave after wave of aftershocks, my pussy rhythmically contracting and releasing against his hand. \n\nWe stay like that for a long time. Just when I think I have come down completely, he gently licks my clit or twitches his fingers inside me, and the contractions and aftershocks start again. I have never had such a prolonged orgasm, and he is slowly teasing every last bit of it out of me. \n\nFinally, I feel my body relax completely. I let out a long exhale. I feel like I can't move, can't even open my eyes. Tyler slowly withdraws his fingers and tenderly kisses my pussy lips and my clit. He helps me lift my legs off of the arms of the chair and gently places them on the seat. He kisses each of my breasts before moving my bikini back into place to cover them. He kisses my cheek, then my forehead, and then pulls away and strokes my hair. \n\n\"Julie?\" he whispers. \"How are you doing?\"\n\n\"Mmmmmmm...\" I reply. I'm drifting on a sea of contentment and total relaxation. I haven't felt like this in years. \n\n\"Come on,\" he says. My eyes are still closed, but I can hear his smile. \"Let's get you dressed and then I'll walk you back to your cabin.\" \n\n\"Do we have to?\" I murmur. I feel like I could fall asleep. \n\nHe laughs. \"I'm afraid so.\" \n\nI open my eyes and smile at him. He's so handsome. He shifts on the chair, and as my eyes follow his movement, I realize how hard he is. \"Oh, God. Tyler. I'm sorry. I zoned out. Do you want to...\"\n\nHe shakes his head. \"No. Not tonight. Tonight was for you. You needed it.\"\n\n\"No, that's not right, I want...,\" I protest.\n\nHe shakes his head. \"Another time. Tomorrow, if you want. I promise you, I want to. But tonight I want you to go to bed with this feeling. I think I may have finally convinced you that I am a good guy, and that sometimes, a good guy will do nice things for you. I got all of those porcupine quills to fall out, and I want it to stay that way.\" \n\n\"Really?\" I'm taken aback. But I'm also so touched. \n\nHe nods. \"Really.\" \n\n\"Well, okay, but only on one condition. That you come to my cabin tomorrow night. I'll make you dinner.\" \n\n\"I cannot accept that offer. I will come to your cabin, yes. But I will bring dinner. Deal?\"\n\nI laugh. \"Are you serious? No, come on, let me make you dinner.\" \n\n\"No, ma'am. It goes against my solemn forsworn oath as a Loon Lake Guest Services Representative. Dinner is included in your stay, so dinner you shall have.\" \n\nTyler hands me my beach bag. My bikini bottoms are soaked, so I find my baggy shorts and pull them on instead. As we walk down the path, my hand in the crook of his elbow, I feel blissed out, euphoric.\n\nWhen we reach cabin 8, I turn to him. \"Tomorrow night, then?\"\n\nHe smiles, and kisses me gently. \"Tomorrow night. I can't wait.\" \n\n\"What time?\"\n\n\"I should be finished by 8:30 or so. I'll come by after that.\" he smiles. \"Besides, we don't want to eat too early anyway. The only people who eat dinner early are seven-year olds, grandparents gunning for that sweet, sweet early-bird deal, and psychopaths.\" \n\nI laugh. \"That is an excellent point. Tomorrow night, then.\" And I kiss him again, and drift into my cabin. \n\nWhen I wake up the next day, the sky is dark and rain is pattering on the roof above me. I snuggle under the blanket and listen for a minute to the staccato sound of the droplets hitting the wood, the soft plop when they hit the leaves outside my window. It's as if my senses are heightened and my nerves are tingling. I close my eyes again for a minute, and let the memories of last night flit through my mind. . \n\nEventually, I open my eyes again. I consider staying in bed, but I feel perfectly rested and my body is thrumming, eager for activity. I stretch luxuriously and think about how I should spend my day. The beach is out, obviously. \n\nI get out of bed, pad into the kitchen, and switch on the coffeemaker. The display on the microwave reads 11:00. I have not slept that late since I was in university. \n\nI look out the window. The sky is dark and foreboding, but the rain seems gentle for now. I'll go for a run, I decide. This is, on its face, ridiculous; I'm not a runner, but who cares? It's a lousy day, so there will hardly be anyone else outside to see me. If I can't run, I'll just walk. I just need to get outside. My body just wants to move. I feel so alive. \n\nI drag a pair of baggy shorts and a clean t-shirt out of my bag, and pull on my running shoes. I put my baseball cap on to keep the rain from running down my forehead and into my eyes, and pull my hair out over the clasp in the back. The screen door creaks as it closes behind me. \n\nI choose a trail adjacent to my cabin and begin to run. My form sucks, but I'm enjoying the exchange of air in and out of my lungs. The rain on my arms and face is soft and warm. The pine needles are wet under my feet, and the trees seem to be breathing with me. Everything smells fresh and earthy and new. \n\nThe main pathway is wide and well-maintained, but I don't want to circle back around to the main buildings and run into other people. I want to be on my own. So, at the first opportunity, I veer off onto a narrow footpath. \n\nI wave my way deeper and deeper into the woods. My legs and arms have found their rhythm now; I no longer have to focus on my pacing and breathing and balance. As my body's movements become rote and mechanical, my mind begins to drift once more to last night. Tyler is kissing me. He's opening my mouth with his tongue.\n\nThe path turns and winds up a steep hill. I continue, pushing my body ahead. My breathing quickens, and my legs push harder as I continue to move. Tyler is pulling my bathing suit to one side, exposing my breast. My breath is coming in rasps now. If I can make it to the top, I'll take a quick break, I promise myself. And, with a last push, I summit the hill and slow to a walk, putting my hands on trying to catch my breath. Tyler is kissing and licking his way down to my pussy. \n\nMy legs feel weak and shaky. I move off the path and walk into the dense woods so I can lean against an enormous tree, closing my eyes and taking deep breaths. Every nerve ending in my body is awake and singing. Tyler is lifting my legs over the arms of the chair. My fantasy is blending with the sounds and smells of the forest, and everything around me is thrumming with raw sexuality. It's as if I can feel the sap running through the tree, moving up and down my spine. \n\nAs if of its own accord, one of my hands moves up to my throat, then down into the collar of my t-shirt and into my bra. My nipple is hot and hard and waiting. I squeeze and tug at it with my fingers. I press my spine into the trunk of the tree and widen my stance. It's as if the tree is breathing with me, in and out. \n\nMy pussy twitches, leaking into my panties. I reach down to cup it, to push my fingers against my eager entrance through my shorts, but it's not enough. I flatten my hand against my stomach and slide it under the waistband of my shorts and into my panties. I gently slide my middle finger down over my clit and my hips buck forward and I give a little cry.\n\nIt's not going to take long. \n\nI push my hand under my breast and lift it out of my bra and shirt, so it's fully exposed to the air. The rain is still falling, and a drop hits my breast and runs down over my nipple. I use my thumb to stroke the wetness into my hard nub and my hips buck again. Tyler is looking up at me as he licks, watching my reaction as he pushes his fingers inside me. My finger is lightly flicking my clit and my breathing has turned into rhythmic pants. With each exhale, I give a breathy, needy moan. I can hear myself increasing in pitch and volume.\n\nI clamp my lips shut to stop myself from screaming, and I explode. I arch my back against the tree and feel the rain on my face, my arms, my chest. My fingers tug on my nipple as my body convulses. I shove two fingers as far as I can into my pussy and grind against them frantically. I press the flesh of my palm into my clit as my cunt spasms against my fingers. After what seems like hours, my convulsions slow and my pussy releases my fingers.\n\nI lean my head back against the tree, waiting for my breathing to normalize. As I regain my composure, I pull my bra back over my breast and let my hand drop to my side. I slowly extract my hand from my shorts, and it leaves a trail of wetness from my pussy lips up to my abdomen where I leave it to rise and fall. I take a moment to listen to the rain, the birds, the sound of my own breath. I can smell rain and leaves and dirt and sex. I feel renewed. \n\nAt last, I lift my head and open my eyes. I make small adjustments to my clothes, and find my way back to the path. I walk back down to the cabin at a leisurely pace, stopping to look at trees and wildflowers, to pick some wild raspberries off the bush. My hair is clinging to my shoulders in wet strands and I am sure there is bark in my hair, but I am blissful. \n\nAs I walk, I plan the rest of my day. I'll dry off, and then take my coffee and breakfast out onto my covered porch. Maybe I'll spend the afternoon there reading. Then I'll have a long bath before Tyler arrives. \n\nWhen he does come to my cabin that night, I'm on the porch, watching the last rays of the sun die out over the lake. My afternoon was perfect; I have had many hours of solitude over the past eight months, but I have not enjoyed them. Today, I wallowed in them. The rain clouds have scattered and are blending into a spectacular sunset, and the evening has cooled enough that I am in a sweater and jeans. \n\nTyler is early. I thought he might be; the beach must have been quiet today. He has a brown paper bag hooked into the crook of one arm, and that hand is clutching two bottles of wine. In his other hand is a mesh bag, loaded with a bundle of logs and kindling, and he has slung a backpack over that shoulder.\n\n\"Wow,\" I say, standing up to relieve him of some of his burden. \"Are you moving in?\"\n\n\"I like to be prepared,\" he says, grinning as he props open the screen door with his elbow. \n\nInside, I put the paper bag on the counter and peer inside. \"Is this dinner? There's... a lot of food in here.\"\n\nHe laughs. \"Well, I wasn't sure what you'd like!\" he says in mock defensiveness. He starts pulling containers out of the back. \"So we have two portions of salmon, pasta with mushrooms and white wine sauce, some salads... and you can eat the leftovers tomorrow!\"\n\n\"Where did you get all this?\" I asked.\n\n\"These are the \"Elite Dining\" options tonight at the lodge. You haven't eaten already, have you? Did you get the Elite Dining package when you booked?\"\n\n\"I don't know,\" I say, a little embarrassed. \"I just brought food so I could eat here.\"\n\nHis eyes meet mine, and I know he understands. He nods. \n\n\"Well, the food on the regular program is nothing special, but the 'Elite Dining program is really pretty good. Does this all work? Anything here you don't like? I can run back and swap it out for something else?\"\n\n\"This is perfect,\" I smile. \n\nI pile food onto two plates while he roots in the drawer for a corkscrew.\n\n\"Red? White? I wasn't sure what you'd like, so I brought both.\" \n\n\"Usually I like white in the summer when it's hot, but it's quite cool tonight. Just open whichever one you prefer and I'll have that.\"\n\nHe looks at me, then turns and leans against the counter, shaking his head. \"Don't do that. Think about what you want. Then tell me, and I'll give it to you. Red or white?\"\n\nI blush, and look down, but I do think about it. \"All right. I'll have white, please.\" \n\nHe smiles. \"Perfect. And I'll have red. See? We can both have what we want.\" \n\nHe opens both bottles and pours us each a glass as I take the plates and napkins over to the table. We begin to eat. I feel a giddy nervousness, and for a moment, I search for something to say. \n\n\"So, how was your day?\"\n\nHe smiles. \"It was a good day. Pretty easy, really. I helped my cousin do some admin work in the office since I couldn't mow the lawns. Hardly anyone was at the beach so there wasn't much to clean up there. Days like this are really the hardest on the kids' programmers. It would have been a long day of crafts, that's for sure. What did you do today?\"\n\n\"Oh, not much. I read a book for a while. And I went for a run.\" The memory of my run brings a tiny flush to my cheeks. \n\n\"Tell me about your family,\" he says. \"Your sister. You guys must get along well if she invited you here with them.\" \n\nAnd then the conversation is flowing as freely as water. I tell him all about Sandy, Mike and the kids, and about how our mom passed away four years earlier from cancer. He tells me about his mother's breast cancer scare two years ago. It turned out to be nothing but a wake-up-call, thank God, but his mom and stepdad began to travel more as a result, crossing things off their bucket lists. We talk about being the babies of the family, and what it is like to be constantly mothered by older sisters. He has it worse; he has two of them. \n\n\"Two older sisters, eh?\" I tease him. \"I bet you got away with murder when you were a kid.\" \n\nHe grins. \"I don't think I thought I did at the time. But, in retrospect, I can't deny that I probably charmed my way out of a few punishments.\" \n\n\"I bet you did.\" I say with a smile. \"You are very, very charming.\" \n\n\"I am very glad you think so.\" He stands, picks up my plate and his, and takes them to the sink. \"Do you want to go and sit on the couch? I can build us a fire.\"\n\n\"I would love that,\" I say, and pick up my glass of wine.\n\nAs he lays kindling in the fireplace, I watch the muscles of his back work under his sweatshirt. It's frayed around the collar, worn in, comfortable. He's so honest, so unpretentious. I feel like I could stay in this cabin with him forever. \n\nThe dry logs catch, and soon the fire is cracking cozily. He pulls the safety screen closed and joins me on the couch, taking a sip of his wine. He drapes his arm over the back, not touching me, but close.\n\nI run my finger around the rim of my wine glass. I can't bring myself to look into his eyes. \"Tyler? Can I ask you a question?\"\n\n\"Sure. Ask away.\" \n\n\"Do you... seduce a lot of the women who come here?\" I can't believe I am asking. It's none of my business. I'm embarrassed, but I have to know if he just finds someone new each week when the guest rosters turn over.\n\n\"Me... seduce?\" He puts a large hand on his chest in mock outrage. \"Julie, if anything, you seduced me!\"\n\n\"What?\" I laughed. \"I did not!\"\n\n\"Oh, so you just took off your t-shirt when I went to get your drink because you were too hot? It had nothing to do with me? Because when I came back and saw your body in that bikini I just about blacked out.\"\n\n\"Oh, right, I'm sure that's true.\" I'm still laughing, but I feel a little glow of happiness.\n\n\"But to answer your question, no. I don't just go around trying to sleep with the female guests. I don't know if you have noticed, but we do try to market ourselves to families with kids. It's subtle, I know.\" \n\n\"Oh, come on. Women must hit on you all the time. Are you saying you never take advantage of that?\"\n\nHe hesitates. \"Well, I can't say never. I have had a few flings with single moms over the years. And there was an incident that I wish I could take back. But just one.\" ",
        "\"Why do you want to take it back?\" I ask.\n\nHe sighs. \"It was my first year here. One of the moms was flirting with me a lot, and I started looking for her on the beach more and more until she slipped me a note two days before they left. We ended up sleeping together while her kids were at programs and her husband played golf. She was so beautiful and confident and I was still in my 20s and I wanted her so much. I thought about her all night afterwards.\"\n\n\"So what happened?\"\n\n\"I went back down to the beach the next day, their last day at the resort. I knew we couldn't talk, and that she was leaving anyway, but I just wanted to see her, give her a wink, something. And she saw me, but she just looked right through me. And then she looked back to her husband playing with her kids in the water, and he looked like a really good guy and a great dad. I felt really bad about it.\"\n\n\"Maybe they had an arrangement? Some couples do.\" \n\n\"Maybe. But I just... didn't want to do it anymore. I don't know. My dad ran off with someone else and... I guess I don't want to put myself into the middle of someone else's marriage, even if they think they want me there for a few hours.\"\n\n\"I get that.\" I'm quiet for a moment. \"So... why me?\"\n\n\"What, besides the bikini?\"\n\n\"Shut up,\" I laugh. \"I'm being serious.\"\n\n\"I was curious about you. It takes a lot of guts to come to a place like this by yourself. I checked you in, you know.\" \n\n\"You did?\" I think back. I can't really remember anything from that day. It feels like it was a hundred years ago.\n\n\"And then you made me laugh when you told me who eats an early dinner. You were so prickly and funny. I knew you'd call me on it if I gave you any shit, or worse, was insincere. You intrigued me.\" \n\nI really blush now. \"You intrigued me, too. I didn't think anyone was that positive or nice without it being an act.\" \n\n\"And then I saw your tits in that bikini and I was a goner.\" \n\n\"I should go put it on right now. I never want to wear anything else, if it has that kind of effect.\"\n\n\"I would not object to that, I assure you.\" \n\nThen he lowers his arm to my shoulder, and gently runs his fingers up, down and around my shoulder blade. \"Honestly, Julie, I really like you. I'm not here tallying women up week after week, I promise you. I'd like to see you again after you leave, too, if you want that.\" \n\nI look into his eyes and see that he is telling the truth. I close my eyes for a moment and just revel in this feeling. Pure happiness. I open my eyes again and take a sip of wine. Then I put my glass on the coffee table, reach over and take his glass out of his hand, and put it on the table next to mine. I turn my body, moving my leg over his lap, until I am straddling him, looking into his eyes. \n\n\"I want that.\" I tell him, and kiss him gently on the lips. Softly, at first. And then he moans and his hands slide up my back.. I dive into the kiss again and again and again. I can't get enough of his lips, his tongue. I let my head fall back and he trails his lips down my throat. \n\n\"God, baby,\" he whispers. He takes my arms and pushes them straight up in the air. Gripping my sweater and tank top at the hem, he pulls them up and off my body, running his hands back down my arms once he has dropped the sweater to the floor. He brings his mouth back up to mine.\n\nMy hips have started to move against him now, and I moan into his mouth. I can feel him hard against my pussy, pushing the seam of my jeans against my clit. His hands move on my back, the wide pads of his fingers gripping me, and just when I'm about to beg for it, he finds the clasp of my bra and releases it. Then he breaks away from our kiss and leans back on the couch, so he can watch as he gently pulls the straps of my bra forward and down my arms, dropping it on top of my sweater.\n\n\"Fuck, so beautiful,\" he groans. He runs his fingers down from my shoulders and over my hard nippes. I exhale a soft, keening noise as he runs his fingers over, under around my breast. Because he is leaning back against the couch, I take advantage of this improved angle and shift myself forward so that my pussy is seated directly on top of his cock. If we were naked, he'd be buried deep inside me.\n\n\"Oh, God, that feels good,\" I say, and I put my hands on the back of the sofa and use leverage to help me grind harder against his cock. His hands leave my breasts and he hooks his arms under mine, pushing down on my shoulders to increase the intensity. I moan, loudly.\n\n\"Oh, yes, honey,\" he says, flexing his hips against me. \"Are you gonna come before I even get you undressed?\" I whine, wordlessly. \"Is your pussy that needy for me? Are you gonna come on my cock through your pants?\" And he lowers his mouth to my nipple. \n\n\"Fuck,\" I whimper. I'm rolling my hips against him. \"God, just hearing you say that is so hot.\" \n\n\"Yeah?\" he looks up. \"You like hearing me talk about your needy little pussy? Fuck, my cock is just aching for it, baby. But I want you to come like this first. Come just thinking about it inside you while I push it against your little clit. I want you to soak me through your jeans.\"\n\nAs he talks, he moves his hands from my shoulders down to my hips. His hips jerk faster and faster, his hands pulling me back and forth along his cock. \n\n\"Come for me, sweetie. Come for me. I'll take care of you. Fuck. I'm going to fill you up so thick.\" And he moves his head forward and sucks my nipple into his mouth.\n\nMy mouth opens and my head tilts back and it seems like the room is shifting on its axis. I frantically hump my pussy into his cock and let out a long cry as I explode into my pants. I ride out the aftershocks, my hips twitching reflexively, and then I droop over his shoulder, panting.\n\n\"Oh my god, baby,\" he says, moving my hair out of his face. \"That was so goddamn hot.\" \n\n\"Mmmmmm.\" I lift myself off of him and smile blissfully. \"Yes it was.\"\n\nI shift back slightly so that I have access to the buttons on his pants. \"Mmmmmmm. Let's take these off.\" \n\nBut he takes my hands and moves them to my thighs. \"Uh uh. No way.\" \n\n\"But...\"\n\nHe grabs the back of my head and kisses me passionately. When he breaks away, I am panting.\n\n\"Last night it was the beach chair. And we've done our time on the sofa. So I think we have had enough constraints and potentially awkward positions to last us at least until tomorrow. Let's go to the bedroom. If I'm going to do all of the things that I want to do to you, then I am really going to need to spread you out properly.\"\n\n\"Ooohhhhhh\" I say, my imagination running wild. \"I can't argue with that.\" And I swing my leg back over his hips and stand up. \n\nWhen he stands up, I can see his cock pressing painfully against his jeans. \"Oh god, I can't wait to help you take care of that.\" \n\nWe kiss and fondle our way to the bedroom. He is pushing me toward the bed but, before he can do anything, I slip behind him. He turns to face me, his back towards the foot of the bed. \n\n\"Okay, we're here. And I can't wait to see what you have planned. But you know, I have plans too.\" I say, running my hands down his chest. I take a step away from him and, not moving my eyes from his, unbutton my jeans, push them down and step out of them. I give him a minute to take in my body. My pussy and thighs are glistening with my juices.\n\n\"Fuck, I want you,\" he breathes.\n\n\"Mmmmm,\" I say, a little smile playing on my lips. \"I can see that.\" And I close the gap between us, cupping his erection with my hand. Immediately, his hips press forward. \n\nI keep my body pressed up against his so that he can feel my nipples against his skin. Then, without taking my eyes off of his, I reach down and unbutton his jeans, pull down the fly. I pull them down just over his ass, then do the same with his boxers. His cock springs free, hard and ready. I reach down and grasp it.\n\n\"God, that feels so good,\" I say. It feels like I have been waiting an eternity for this moment, to feel him pulse and throb. I kiss his chest and then look back up at him. \"Sit on the edge of the bed.\" \n\nHe takes a few steps back and does. I pull his pants and boxers down his legs and then off altogether before kneeling between his knees. Very softly, I kiss the head of his cock. It's wet with precum. He takes a deep breath and leans back on his hands. \n\n\"You know, Tyler, I didn't tell you everything about my run today,\" I say casually, and circle my tongue around the head of his cock. Then I gently push the tip into his leaking slit. \n\n\"No?\" I can tell he's struggling to keep his voice steady. \n\n\"No.\" I flatten my tongue, place it at the base of his shaft, and then slowly drag it up along the underside. \"May I tell you?\"\n\n\"Yes, tell me, baby.\" \n\n\"Mmmmmm.\" I let my lips envelop just the head, and then pull back again so I can talk. \"I couldn't get you out of my mind while I was running. I kept flashing back to the things you were doing to me last night.\" I kiss the tip, then swirl my tongue around again.\n\nHe moans. \"Oh, yeah?\"\n\n\"Yeah. I stopped deep in the woods and I had to lean up against a tree so I could finger my pussy because I was so turned on.\" I move my face to the underside of his shaft and lightly flick my tongue across the vein just under the head.\n\n\"Ooooohhhhh my God, Julie.\" \n\n\"I couldn't help myself,\" I say, and take his cock into my mouth, just a little further again. Then back off. \"I pulled my tit out of my shirt so that I could pinch and flick my nipple while my other hand was in my panties.\" I move my face down and run my tongue over his balls. \n\nTyler groans loudly, leans back further and lifts his hips off the bed, desperate for my mouth. I rub his cock all over my face, feeling his cockhead against my chin, my cheeks, my eyelids. \n\n\"I made myself come so hard in the woods, Tyler. I was shaking and my hips were thrusting and I was pulling on my nipple with one hand and just as I was coming I pushed two fingers as deep as I could inside me, just imagining they were this cock. Fuck.\" \n\nAnd I wet my lips, open my throat and push my mouth down onto his dick, as far as I can take him. \n\n\"Oh God, Julie. Holy fuck!\"\n\nI hold there for a second, enjoying it, and then slowly pull back up and off, teasing the head with my tongue. \n\n\"Fuck, Tyler, it made me so wet. And I'm dripping now, just thinking about it. Do you want to feel how wet?\" And I run my hand down my stomach and into my pussy, scooping up some of my juices, and then smear them all over his cock, slowly jerking him. \n\n\"Ooohhhh fuck, baby, yes. Oh my God... that feels so good.\"\n\n\"Mmmmmmmmm,\" I say, and I take him back into my mouth, above my hand. Now I can slide up and down every inch of him, taking him as far as I can into my throat, and letting my hand do the rest. At the top of the stroke I swirl my tongue around his head, or lift right off and twist my hand. \n\nI flick my eyes up to his face and I find him watching, his mouth open, his eyes glassy. With each exhale he is moaning, and he is bracing his body between his arms on the bed and his feet on the floor, so he can jerk his hips up towards my face. I smile around his cock at him, then lift off so I can pull more of my juices out of my cunt for his cock. \n\n\"Oh fuck,\" he moans. \"Fuck, Julie, you've gotta stop or I'm going to come.\" \n\n\"Mmmmmmm. Promise? Because I need your cum in my mouth,\" I tease, and finally give him the speed he has been wanting. \n\nHis head drops backwards and his cries come faster now. They're getting higher in pitch, and I can feel him pulsing and throbbing in my mouth. My face is a sticky mess of my saliva and my juices. Suddenly, his hips still and I feel his cock swell in my mouth. \n\n\"Fuck! Fuck! Fuck!\" he gasps over and over, and I can feel his come moving up the shaft before it spurts into my throat. I rhythmically squeeze him and press my tongue against the back of his cockhead, drawing every drop out of him. I don't stop until his shudders cease, his hips drop to the bed, and he falls back on the mattress. I hold him cock gently in my hand and mouth for another few seconds until I am sure he is completely still, and then I release him and crawl up to collapse on the bed beside him. \n\nFor a few moments, we just lie there, and my arm across his chest is lifted and lowered by his rhythmic breathing. He's not asleep, his fingers are running back and forth across my arm. It's pure contentment, and I wallow in it, snuggling into him happily. I can't see his face, but I sense it when his eyes open.\n\n\"That..\" he begins, searching for words. \"That was... amazing. Holy God, that was incredible.\" \n\n\"For me, too,\" I sigh, and kiss him on the shoulder. \n\nHe turns his head to look at me and I meet his gaze. \"Did you really masturbate out in the woods today?\" \n\n\"Exactly like I told you. I couldn't help myself.\" \n\n\"So you're telling me,\" he runs his fingers down my stomach and lightly brushes them against my core, \"that this pretty little pussy was so desperate to come that you couldn't wait to get back to the cabin?\" He opens my folds with his fingers and begins to explore my lips. \n\n\"I couldn't wait. I was so turned on. I needed to come so badly.\" My eyes flutter closed as all of my concentration flees to where his fingers are probing me. \n\n\"That is so fucking hot, Julie. I'm never going to get that out of my mind.\" he circles two fingers around my clit, and then slides them into my cunt. My back arches and I cry out. \n\n\"Hmmmmm. It looks like you're still pretty desperate to come, baby. I can help you with that.\" While his fingers work inside me, he moves his thumb over my clit and strokes down over it. \"Does that feel good, honey? Is that what you need?\"\n\nI can't form words. I just let out a long whine. Tyler moves over me, swallowing my cries with his mouth, and his fingers continue to move relentlessly, driving me towards my release. In between kisses, he whispers to me:\n\n\"That's it Julie. Let yourself go. I want to feel you come for me. Ohhhhh yes, squeeze my fingers. Fuck, you're going to clamp down on my cock so good. But first, come on my fingers, baby. Let me feel it.\"\n\n\"Ohhhhhhhh Goooooooood!\" I can't control my cries as my hips convulse on him again and again. He pushes his fingers in as far as he can and presses down firmly on my clit with his thumb. I'm squirming all over the bed, the pleasure is too much, I have to get away, but his hand follows me everywhere, and as I start to shake, my orgasm consumes me like fire.\n\nTyler keeps his hand where it is, not releasing the pressure, letting me convulse around him. He drops kisses on my forehead, my mouth, my breasts. His cock is hard again, hot and insistent against my hip. I can tell that he thinks that I need to recover, but my body feels hot and frantic. I need him so badly. I sit up, move up the bed and run my hands over my body. \n\n\"Please. I need to feel you inside me,\" I beg. \n\nHe smiles, and slides back off the bed, picking up his pants and reaching into his pocket for a condom. I can't take my eyes off his hard cock.I am mesmerized by the life it exudes, bouncing as he moves. He rolls the condom on, and then crawls up the bed towards me. I reach my legs around him, drawing him in. \n\nBracing himself on one arm, he reaches between his legs and drags the head of his dick up through my folds, stopping to tease my clit. It feels so good, but I am so desperate to have him inside me that I tilt my hips, trying to catch his head on my hole on each pass so that I can push him into me. \n\n\"Patience,\" he teases me. \"I'll give you what you want, baby. You just have to be patient.\" And he puts his head just inside my entrance. And then stops moving.\n\n\"Oh God, Tyler, please!\" I feel like I might sob.\n\nAnd he pushes in a little more. Just a bit, but I can feel my lips split around him. \n\n\"You like that, baby?\"\n\n\"More, please, give me more!\"\n\nAnd he pushes further, just until the head of his cock nudges its way inside me. in. Then he stills again. \n\nThe pressure of his head inside me is enough to trigger a fresh flow of juices and my pussy clamps down on him. Just that feeling is almost enough to make me come.\n\n\"Oh God, honey, you're gripping my so tight. Your pussy is just trying to drag me inside. Oh my god, I love this pussy so much.\" And he pushes in another inch. \n\n\"Fuuuuuuuck,\" I moan, and I put my feet flat on the bed and buck my hips up towards him. This time he lets me, and another inch of his cock slides in. \n\n\"Ohhhh, that's so sexy, Julie. Your pussy is so hungry that it's coming up to meet me. Fuck.\" And this turns me on so much that I do it again. Another inch spreads me open. \n\n\"Oh God, Fuck, Fuck!\" Tyler slowly shoves his cock the rest of the way home and begins to thrust. I can't stop my hips from fucking up to him now, and our boddies slap in the middle. He's bracing himself on straight arms, and he lets his head hang and I lift my head so that we can both watch his dick sliding in and out of me. The sight is so erotic that I feel like I can't control my body, and I let my head drop back on the pillow and close my eyes.\n\n\"Jesus, you are so fucking wet,\" Tyler breathes. \"That is so, so sexy. Baby, look at this.\" \n\nI force myself to lift my head again, and look down to where our bodies are joined. Tyler slowly draws his dick out of me, and a long, unbroken strand of... precum? my juices? both? trails between his cock and my pussy. \n\n\"Oh my fucking God,\" he gasps, and grabs his dick and shoves it back inside me. Now he starts to fuck me in earnest, long, deep, instinctive strokes that rub the deepest parts of me. My legs fly around his waist and I grip his shoulders and I can feel my pussy muscles start to clench. Each time they spasm, his cock twitches, which only pushes me higher. He's watching his hips slap against my ass, his dick impaling me again and again. \n\n\"Oh, baby, I'm so close,\" he gasps. \"Are you close?\" \n\nI'm so close, I feel like the next stroke could push me over the edge. But I am watching him watch my pussy and I want to give him everything, show him everything, and I don't need it but it will feel so good. So I reach my hand between our bodies, open my lips with my index and ring finger, and swipe my middle finger over my clit while he watches. \n\n\"FFFFFUUUUUCK!\" he groans, and I can feel his cock swell inside me and my finger teasing my clit and I explode, arching my back and screaming for him. I keep my finger on my clit which makes my cunt clamp down on him even harder, over and over again. Tyler presses his lips together and moans.I feel the base of his cock swell and contract as he pumps again and again into the condom, and this sets me off and my hips shake as I come again. \n\nTyler drops to his elbows, and his forehead falls to the pillow next to me as he settles his body over mine for a moment. We are quiet as my cunt continues to flex against him, milking out the last of his come. Then he rolls off of me, breathing heavily.\n\nI feel like I can't move. My eyes are closed and my mind is drifting to the different parts of my body. I'm hyper aware of what every inch of my skin is touching, the position of every part of my body. I feel him shifting down the bed, heading for the bathroom, but I can't muster the energy to move a muscle. \n\nI don't really register when he stops moving, but all of a sudden I feel his lips on my clit. My eyes fly open, but before I can say anything, he has pushed my leg up and around so that he can push his face between my thighs. \n\nWhen he sucks my clit into his mouth and flicks it with his tongue, it's like I have been hit by a lightning bolt. It won't take long, my pussy is so wet and swollen and sensitive that within seconds I am teetering on the precipice again. He moves his hand up to my pussy and pushes two fingers inside, and my pussy starts gripping him furiously. And then, just when I think I can't build any higher, he lets his pinky finger wander down to my ass, just pressing it gently against my entrance. ",
        "My hips jerk off the bed and I let out a long, indistinguishable wail. He rides it out with me, latching on to my clit as I thrust myself onto his fingers. He knows what kind of pressure I need, how to draw it out for as long as he can, and how to sooth me after I go rigid for the last time and then collapse back down onto the bed. \n\nThen he leaves me for a moment, and I hear water running in the bathroom. I can't move. He comes back to the bed and lies next to me, running his hand slowly over my body. \n\n\"That... was...incredible,\" I manage, still unable to open my eyes. \n\n\"It was incredible. You are so responsive. God, I love making love to you.\" \n\n\"Mmmmmmm,\" I reply, my mind drifting. \n\nI hear Tyler let out an enormous yawn. \"Let's get under the covers, baby.\"\n\n\"It's impossible. I can't move. You broke me,\" I murmur, opening one eye to squint at him.\n\nHe chuckles. \"Okay, okay. Have it your way.\" And he gets off the bed and I hear him go and rummage through the hall closet. \"This is probably more fitting anyway.\" And he comes back into the room, gets back into bed, and pulls a spare blanket over us. \n\nThe next morning when I wake up, Tyler is in the bathroom. I can hear him showering. \n\nI must look like such a mess, I think, and blink my eyes a few times, trying to focus. Then I laugh.\n\nThe bed underneath me is still made, but rumpled. And of course, the blanket that Tyler found to pull over us in the night is plaid on one side, pale blue on the other. Two Ls and a loon. A Loon Lake blanket. \n\nTyler comes out of the bathroom and kisses me on the forehead. \"I'm sorry, honey, I didn't mean to wake you. I just have to get to work. Luckily, it's a short commute,\" he winks at me. \n\nI laugh. \"This has the potential to be a truly epic walk of shame, you know.\"\n\nHe shakes his head. \"No shame here. Greatest night of my life.\"\n\nI'm overcome. \"Mine too.\" \n\nHe studies my face for a minute, stroking my hair. He picks up one of the grey streaks and runs it through his hand. I feel myself flush. \n\n\"God. I know. Maybe I should go back to dyeing it. It makes me look so old.\"\n\n\"No it doesn't. It's only grey at the very front. It's really cool. You look like, you know...\"\n\n\"The Bride of Frankenstein?\" I supply, with a half smile.\n\nHe laughs. \"No! Not at all! No, you look like Rogue. You know, from the X-Men?\"\n\nHe doesn't know what this means to me, but I hug him like he does. He squeezes me back until I release him and he goes back to organizing his things. He goes back into the bathroom and, after a minute, calls out to me. \n\n\"Mind if I leave my toothbrush here?\" He says this ultra casually. He comes back out into the bedroom \"I mean, if you think I might be back sometime this week?\"\n\nI nod my head thoughtfully. \"Yes, I think I probably have room to store it here.\" \n\n\"Good. I like to be efficient. I'm a busy man, I just can't be carrying toothbrushes around everywhere.\" \n\n\"Understood.\"\n\nI throw on some clothes so that I can walk him out. At the door of the cabin, he takes my face in his hands and kisses me softly. \n\n\"I'll see you tonight?\" he asks. He knows the answer.\n\n\"I'll be here.\" \n\nHe grins, and then goes out, the screen door banging behind him. \n\nI yawn and put coffee in the pot, and flick the switch. I don't know if I'll drink it right away. Maybe I should go back to bed. Or I could have a long bath. Or maybe a quick shower and then just take my book down to the beach. But there is no rush to decide, I think with a smile. The day is full of possibilities. \n\nSuddenly my cell phone pings. It takes me a while to find it. When was the last time I even looked at my phone? It's Sandy. \n\nHey Julie, I don't think we're going to make it. Kyla's ear is getting better, but she's still pretty sore and she wouldn't be able to swim anyway. \n\nAre you doing okay?\n\nYou don't have to stay if you don't want to. I feel kind of bad. I forced you to go.\n\nI think for a moment, then I text:\n\nNo, you were right. It's good for me. Thank you. I really appreciate everything. \n\nWant to know what I'm doing today?\n\nA moment.\n\nWhat?\n\nI grin as I type: \n\nI'M GOING TO THE FUCKING BEACH!\n\nI wait for the response.\n\nLol. I AM VERY FUCKING HAPPY FOR YOU!\n\nWell, that settles it, I think to myself. A quick shower, coffee, then down to the beach. \n\nAs I'm moving towards the bathroom, there's a knock at the door. It's Tyler. I open the screen door. \n\n\"Hi!\" I say, surprised. \"Did you forget something?\n\n\"No,\" he says. I was just wondering... do you ski?\"\n\n\"What?\"\n\n\"Do you know how to ski?\" he repeats, a little smile playing around his lips. \n\nI shake my head. \"No.\" \n\n\"Huh.\" he says, thoughtfully. \"Okay. I was just wondering.\" He turns to go down the stairs again. As he reaches the bottom step, he turns. \n\n\"It's just that... this might be a really great time in your life to learn to ski. You know. This winter.\" \n\nI clue in, and smile. \"Oh really? Do you know anyone who gives lessons?\"\n\nHe grins back. \"Yeah. I know a guy. I could set it up for you. Just... think it over.\" And he starts to head back down the path.\n\nI lean against the door jamb and call out after him:\n\n\"Wow. You know, it's pretty impressive that this summer resort also arranges winter skiing lessons. It never would have occurred to me to even ask.\"\n\nHe turns back to me, gives an elaborate bow, and winks. \"All part of Guest Services, ma'am.\""
    ],
    "authorname": "LilyWaters",
    "tags": [
        "bikini",
        "blow job",
        "vacation",
        "cunnilingus",
        "mature",
        "masturbate",
        "outdoors",
        "younger man",
        "dirty talk"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/guest-services-1"
}