{
    "title": "The Letter",
    "pages": [
        "\"Sgt. Harmon. You got a minute?\" his platoon sergeant asked.\n\n\"Yeah, sure. What's up?\"\n\nThe staff sergeant was four years older than him, but at 25, he seemed ancient when most of the rest of the platoon was between 18 and 21. Grant Harmon was four months away from turning 22, and having nearly finished his four-year enlistment, he was now officially a 'short-timer'.\n\n\"You got a letter for me?\"\n\n\"Nah. I'm not married and I'm an only child. If shit goes sideways, two Marines in dress blues will show up at my parents' house and make their day. The last thing they need is a sappy letter from their dead son.\"\n\n\"So no letter for your next of kin? No one you want to say anything to after you've bought it?\"\n\n\"Nope. Not really,\" Sgt. Harmon told him truthfully. He'd come to terms with his possible death, and he didn't think a letter would jinx him. He just didn't see it as something he needed to do.\n\n\"Okay. Just checking. You're the only Marine in this platoon who hasn't written one, and I'm not gonna ask again,\" the staff sergeant told him. It wasn't a threat. It was a simple acknowledgement that it was Harmon's choice.\n\nWhat Sergeant Harmon didn't mention was that he did have a letter. It was just wasn't to his next of kin, and it was too private to talk about. He'd written it over the course of the last six months of their 8-month deployment, a little here and a little there, and he'd just finished it a few days earlier.\n\nHe had no intention of ever mailing it himself, but were he to 'buy the farm', he knew the staff sergeant would almost certainly be the one to inventory his personal effects, and when he did, he would find it. The only things left to do were to put in an envelope and address it. Or maybe not.\n\nAnyone in a combat zone could use the postal system for free. But it might be smarter to put a stamp on it\u2014just in case. The reason why was simple, or more specifically, it would make someone else's life simpler if they mailed it.\n\nHarmon knew how Marines were. Either the staff sergeant or some volunteer would spare no effort to find her once they got back stateside in order to hand deliver it, and he wasn't about to put anyone through that. So after assuring his platoon sergeant he still had no 'if-I-die letter' for him, Sergeant Harmon pulled an envelope out of his footlocker and penned her name on it.\n\nJust seeing it in writing made him think of her again, and as he wrote the address down from memory, he smiled as he thought back to that one day when the two of them had nearly become lovers. But at the time, she'd been married and his teacher, and in the end, he just couldn't go through with it. \n\nIt didn't matter that her husband was a first-rate shit who alternated between neglecting her and berating her, and on occasion, pushing her around. In his book, married was still married. But she was so beautiful it had nearly been impossible to say 'no', and there were times when he couldn't help but wish he'd been raised without a conscience. But he had, so nothing too serious had happened between them. And it wasn't that she lacked one herself. But after years of verbal and physical abuse, the temptation to cheat with someone she felt that way about had been extremely strong.\n\nSince leaving his hometown, Grant Harmon had often wondered if she'd stayed with her husband, but out of respect, he'd never once tried to contact her or ever told her how he really felt. But were something to happen to him, his final wish would be to let her know. \n\nHe had no way of knowing if she'd even read it or possibly tear the letter up in anger or perhaps just sit there and cry or something in between. But because he couldn't control her reaction, he wasn't going to spend time worrying about it. All that mattered to him was that she knew. \n\nHe still had no idea whether or not he'd make it home alive, but with less than six weeks to go, and the entire platoon having only lost one Marine with two others wounded, he liked his chances.\n\nHaving penned the final words there was nothing more to say. The letter was four pages, front and back, and written in his own sloppy handwriting on unlined stationary. But it was from the heart, and she was the only woman he'd ever loved, and although neither of them had ever spoken those three words, he knew she'd once loved him, too. By now, it was likely she'd mostly forgotten him, but he'd never forgotten her.\n\nSo he fished out an envelope he'd kept tucked between the pages of the book he was currently reading and addressed it to her.\n\nDenise Thomas\u2028\u2105 Auburn High School\u2028Auburn, WA 98002\n\nAnd with those memories fresh in his mind, he went to make sure everyone in his squad was ready to move out for what could well be their last op 'in country' on this deployment. More were possible, but so far, nothing else was on their radar.\n\nIt was a little after midnight when the convoy stopped, about halfway to the village they were going to in order to offer food and render medical aid. Sergeant Harmon quickly fell asleep underneath one of their vehicles knowing that a portion of the rifle company was always on watch. It would be his turn in a few hours, so he grabbed some shuteye while he could.\n\nHe normally slept under a Humvee, but this night he lucked out and found himself under an MRAP which stood for Mine-Resistant Ambush Protected, a heavily armored vehicle that could withstand the shock wave of an IED. If the only Marine they'd lost so far had been in one of them instead of an 'up-armored Hummer' he'd undoubtedly still be alive, and the other two men who'd been wounded wouldn't have had a scratch on them. But even now, after all these years in Afghanistan, not everyone got to ride in an MRAP, and that's just how it was.\n\nHe pulled his two-hour watch from 0200-0400 then fell back asleep. It was a few minutes before sunrise when the fire watch, the two Marines assigned to stay awake for rotating, two-hour shifts woke him up.\n\nHe sat up, shook off the cobwebs, then cursed the god-forsaken hellhole called Afghanistan before packing up his poncho liner then taking a leak and brushing his teeth with water from his canteen. The big change since around 2008 was that even Marines no longer had to shave when deployed to a combat zone, so Harmon thanked God for minor miracles as he tossed his pack into the Humvee he'd be riding in and waited for 'the word'.\n\nHe hadn't ridden point in over a month, but this was his turn. He'd be riding with the company commander, the company air officer, and the CO's driver, a lance corporal from third platoon.\n\n\"Sgt Harmon. You ready to get out of here?\" the Marine captain asked as he approached without saluting, something Marines also didn't do in combat zones.\n\n\"Oh, hell yeah, sir,\" he replied.\n\n\"I'll second that shit,\" the other captain, who wore aviator wings on a flight suit, something that still surprised the young sergeant, said. This officer was so good that the CO had made him the company operations officer, too, as he looked around scanning the area for any sign of bad guys. \n\nThe driver overheard and laughed but didn't say anything. His only job was to drive for the company commander, and he was waiting for the order to move out.\n\nThe CO met with the other three officers and the company first sergeant to discuss the route of travel and for the umpteenth time to go over rapid-reaction drills in the even of an IED or an ambush.\n\n\"All right. Saddle up!\" the first sergeant hollered after the meeting ended, his order sending Marines scurrying to their vehicles as lieutenants briefed sergeants who then briefed their men.\n\nAs they rode along, the air officer said, \"I'm thinking one more op before we start cleaning up gear and get ready to get the hell out of here.\"\n\n\"I agree,\" the company commander said. \"Barring anything unforeseen.\"\n\nEveryone listening knew that meant they could be extended for any reason at any time, but with any luck, they'd really have just one or maybe two tactical operations left. Or this one could be their last. No one really knew. It took time to clean vehicles and get them ready for embarkation back to the States, and that required a minimum of ten days. So with just around 40 scheduled days remaining, it was very possible that one last, 3-4 day op could be it.\n\n\"Okay, let's get off this road,\" the company CO said. \"See that little stream bed?\"\n\n\"Yes, sir,\" his driver responded. \n\n\"We're gonna go right through that then stay more or less parallel to the road.\"\n\n\"Aye aye, sir,\" the lance corporal replied.\n\nThe 'road' was really just some hard-packed sand, but anything of that nature was avoided like the plague wherever possible, because that's where the 'shitheads' buried IEDs. They'd learned to cover their work so well no one could visibly see anything of concern, so a lack of any trace of human activity didn't mean a lack of IEDs.\n\nIn the event a vehicle rolled over one, the dreaded 'click' of a pressure plate might or might not be heard. Most of the time it was too noisy to hear, but once the wheel that hit it rolled over it and released the pressure, all hell broke loose. It was rare for the enemy to sit and watch a road with a cell phone to detonate the explosives. Pressure plates were simple to use and didn't require a babysitter. They just sat there waiting for some unsuspecting American or Brit of other NATO vehicle to drive over them and\u2014-wham!\n\n\"With any luck, we'll back before your wife delivers,\" the CO told his air officer.\n\n\"Yeah, right. Trish is due the 10th of December, and...knock on wood...we should be back before Thanksgiving.\"\n\nThe CO turned around and smiled at the only other captain in the unit and said, \"Right. Knock on wood.\"\n\nThe hummer slowly made its way into the stream bed, a place where no IED could reasonably be buried, and as it jostled along, everyone's guard was lowered just a tad knowing they were temporarily safe.\n\nStreams were rare, and any stream as deep as this one was almost unheard of. The water level reached the middle of the doors and the air officer said, \"Hey, be careful up there. You're gettin' me all fuckin' wet!\"\n\n\"Sorry, sir!\" the lance corporal said as all four of them laughed.\n\nThe hummer passed through the deep water with ease then made its way back onto dry ground meaning\u2014loose sand.\n\n\"Okay. Let's stay about 50 meters or so away from the road as we head south,\" the commander told the driver.\n\n\"Roger that, sir,\" came the reply.\n\nThose words were the last thing Sergeant Harmon remembered hearing before waking up in a medevac helicopter.\n\n\"Where am I?\" he groggily asked as he slowly regained consciousness.\n\n\"You're on your way to Bagram, Marine,\" a Navy corpsman he didn't know told him.\n\n\"Am I okay?\" Sergeant Harmon asked as he tried moving his arms and legs.\n\n\"You will be,\" the young sailor hollered. \"Your left side took the brunt of the blast, but you'll be fine.\"\n\nWhat he really wanted to do was reach into his trousers and check his 'junk', but he wasn't about to do that then and there.\n\n\"What about the other guys?\" he asked, his head now pounding with pain like he'd never experienced.\n\n\"I uh, I don't know,\" the 19-year old 'doc' told him in a way that said he did know. \"Listen, I'm gonna give you some more morphine. You may fall back asleep, but trust me. You're gonna be okay.\"\n\nThat he wasn't being given anything stronger than morphine told Harmon he probably really was okay. But as the corpsman plunged the syringe releasing more of the clear liquid into his bloodstream, Grant Harmon found his eyelids too heavy to hold open, and the next time he woke up, there was a female nurse smiling at him.\n\n\"Hi there,\" she said with a smile as his eyes fought to focus.\n\n\"Hey,\" he replied, his brain still too foggy to notice the silver bar on her uniform. Had he seen it he'd have addressed her as ma'am, in spite of her 'only' being an Air Force lieutenant\u2014and a nurse.\n\n\"I need to change your dressing,\" the woman, who was about his platoon sergeant's age, said, the smile still there.\n\n\"How bad is it?\" he asked as she gently rolled him on his good side.\n\n\"I'll let the doctor explain. For now, we need to get everything cleaned up again and put some fresh gauze on that.\"\n\nWhen he flinched she apologized.\n\n\"No, it's okay,\" he told her in spite of the pain.\n\n\"I'll see about getting your pain meds adjusted.\"\n\n\"No. I'm fine. Really.\"\n\n\"Okay. Just let me know anytime you're not.\"\n\nHe fell back asleep after she finished then woke up to see an Army doctor looking down at him.\n\n\"Sergeant Harmon,\" the 34-year old major-doctor said as he read the name off of his chart. \n\n\"Yes, sir,\" he replied after seeing the huge brown oak leaf on his uniform used in lieu of the bright gold worn in garrison.\n\n\"You took some shrapnel to your left leg here and here,\" the major said as he gently touched the wounded areas. \"And you took another piece in your rib cage that went up under your body armor.\"\n\n\"So...I'll live?\" Grant tried to joke.\n\n\"You will. And with any luck we'll have you on a flight to Germany within the next 48 hours or so.\"\n\nGrant wanted to ask him about his fellow Marines, but it was unlikely he knew, and the young doctor turned and left before he could ask.\n\nBack at base camp, the entire contingent of Army soldiers and Marines were lining the way as their fallen comrade's flag-draped body was brought back. They saluted in pairs as the flag passed them then cut their salute as the next two raised their arms.\n\nEveryone of them knew the air officer who hadn't survived the blast. He was a Marine aviator, and the most likable officer any of them had ever known. He insisted on being addressed by his call sign and he talked to every man there using their first name. He was as proficient as he was friendly, and they'd all, at one time or the other, watched him call in airstrikes on enemy positions with deadly accuracy. No one knew how many Marine lives he saved, but to a man, they all respected him.\n\nAnd all of them knew he had a two-year old son and a pregnant wife waiting for him back home, and that they would never see the husband and father they loved again.\n\nTwo hours later his flag-draped body was loaded onto transport helo and headed to Bagram where Sergeant Harmon was recovering from the blast that had killed the captain and left the CO with a serious concussion. Only the driver had escaped without serious injury suffering no more than a gash in the forehead where the force of the blast shoved his kevlar (Marine-speak for a helmet) into the steering wheel.\n\nBut that's how IED blasts worked. It was all a matter of where one was sitting in relation to the shock wave and, of course, how much explosive material had been used. It could kill everyone in the vehicle or no one, or any combination of death or injury from scratches to missing limbs.\n\nOnce the company bid a final welfare to the slain officer, someone had to inventory his personal effects. And because Sergeant Harmon had been medevaced, his gear had to be inventoried, as well.\n\nThe company commander personally went through his friend's personal items and made sure there was nothing embarrassing before carefully cataloging them. He, of course, found the letter the captain had written to his wife, and set it aside to deliver to her in person when they got home, long after formal notification had been made. He would also call her himself, once she had a couple of days to try and deal with her world that was now spinning out of control. \n\nGrant's platoon sergeant was doing the same for the best squad leader he'd ever known. He, too, found a letter, but after having asked him about that very thing so soon before the blast, he wasn't sure what to do with it.\n\nHe knew this Thomas woman wasn't his Marine's wife, mother, or sister. And since it was addressed to her with a school address, he felt safe assuming it was meant to be mailed. Once the inventory was complete, he dropped it in the outgoing mailbox in the company office, honestly believing he was doing the right thing. \n\nHad Sergeant Harmon died, he'd have asked his lieutenant and maybe even the 1stSgt for advice. But this seemed like a no brainer, and with that the letter would soon be on its way.\n\nAs Grant lay in his hospital bed, and as his head began to clear, he was very grateful to not only be alive but have full use of his arms, legs, and...Mr. Happy. The fate of the other Marines in the vehicle weighed heavily on his mind, but there was nothing he could do for them, and the fact that he was there alone gave him hope that no one had been killed or seriously wounded.\n\nA few hours later someone brought a satellite phone around, and asked who he'd like to call. Moments later, two very worried, but very relieved parents breathed a sigh of relief when they heard their son's voice and received the good news.\n\n******\n\nThree days later at a US military hospital in Germany.\n\n\"Well, well. Look who's up and walking around,\" another female nurse said. She was Army and a captain, and Sergeant Grant Harmon addressed her with respect.\n\n\"Yes, ma'am. I'll be ready to run a PFT here in a few more days.\"\n\n\"PFT. Is that Marine-speak for a PT test?\" she asked, knowing only the Army term for it.\n\n\"Oh. Sorry. Yes, ma'am. We also go 'TAD' while you go 'TDY'.\"\n\nShe laughed then thanked him for the lesson on joint service etiquette.\n\n\"I also know that what you call a 201 file we jarheads call an SRB.\"\n\n\"Okay. I'll bite,\" she replied.\n\n\"Service Record Book.\"\n\n\"Ah, okay. Your personnel file. A 201.\"\n\nSergeant Harmon laughed and said, \"Yes, ma'am. Sort of, anyway.\"\n\nThe captain wasn't about to tell her young Marine how attractive she thought he was, but she couldn't help but notice he was an extremely good looking man. A little too young for her, but that didn't make him any less attractive.\n\n\"You keep up the therapy, Sergeant, and we'll have you back at Camp Pendleton in no time.\"\n\n\"Music to my ears, Captain!\" he told her as he forced himself to take a few more painful steps, putting a bit more weight on the injured leg before the pain stopped him.\n\n*****\n\nAuburn High School, one week after the blast.\n\n\"Oh. Ms. Thomas. I have a letter for you,\" the new school secretary said.\n\n\"Please don't let it be from another angry parent,\" she said, forcing a smile as she took the envelope.\n\nShe only glanced at it, but when she did, the secretary asked if she was all right.\n\n\"I...I'm not sure,\" the teacher replied as she took a second, longer look.\n\nShe recognized the handwriting immediately. And when she saw his name in the upper lefthand corner, she gasped.\n\n\"You sure you're okay?\" the older woman asked with even greater concern.\n\n\"Um...yes. I'm...I'm fine,\" Denise told her, forcing another-yet-different smile as she hurried out of the office toward her classroom.\n\nShe opened the door, tossed her purse on her desk then sat there staring at the letter, unable to open it as her mind raced in an attempt to figure why, after all this time, he'd written her. There'd been no contact whatsoever for nearly four years, and now, without warning, a letter had appeared at her place of work, no less. \n\nShe didn't need to wonder when the last time she saw him was. That was easy. It was graduation day. It had taken all of the willpower she had not to seek him out and tell him she was leaving her husband and that she still loved him. Well, maybe it was more accurate to let him know that she loved him, as she'd never said that before. She had trouble even admitting it to herself, but it was true.\n\nShe could have done so under the guise of congratulating him, but that would have been a lie. She'd fallen in love with him, and were she to have held him even one more time, she'd have done something she'd have deeply regretted...or perhaps he'd have told her he no longer felt that way and broken her heart.",
        "As she sat there staring at the letter and looking back, was it possible her biggest regret wasn't telling him how she really felt? Or would that have been a colossal mistake?\n\nHer hand trembled as she carefully ran a long, red nail under the flap to open it even as she recalled those the events that had had such an impact on her life.\n\nWhen all this happened, she'd just turned 31, and had been married for a little over five years to a man she'd once dearly loved and trusted. But all that had changed over time as his occasional binge drinking became a regular feature of their lives. \n\nAs bad as that was, she could have lived with that were it the only thing that was wrong in her life. But the drinking began causing other problems, the first of which had been impotence. Maybe it was the drinking itself or maybe it was the way seeing him drunk so often made her feel about him, and that may have made 'performing' impossible. Whatever the reason, they'd stopped having sex well over a year before Grant came along.\n\nAnd because of the friction these problems created, her ex-husband began getting angry with her more and more often. It began with short outbursts and then came the name calling and the humiliation. But all that paled in comparison to the first time he hit her.\n\nThere'd been some pushing and what her former husband called 'body checking' as he'd use his size and strength to move her out of 'his' way when he got mad. But that had been child's play by comparison. \n\nThe first time he hit her it was on the upper arm. He hit her so hard it knocked her over and left a bruise the size of his fist. She'd worn clothing that covered it up, but the bruise lingered for over a week and hurt the entire time. He apologized the next day and swore it would never happen again, but less than a week later it did.\n\nThat time he used his knee and drove it into her thigh. It didn't knock her down, but it hurt so bad she'd been unable to walk for two days; days she took off as sick days, which was actually true as she was very sick of being treated like she was dirt. She limped around the house using anything she could find to ease the pain each step caused. That bruise was so dark and so deep it scared her worse than her husband until it began to fade. She knew what a hematoma was, and this bruise qualified as one.\n\nShe smiled wistfully as she recalled that it was Spring break four years earlier when Grant showed up at her doorstep asking if he could mow her lawn to make some extra money. \n\n\"I'll give you a 20% discount, Ms. Thomas,\" he'd promised, hoping to make the sale.\n\nShe still recalled the way he'd smiled at her\u2014and the way it made her feel. Initially she'd been embarrassed to admit it, even to herself, as she'd never once had any similar kind of feeling for any student. Embarrassed or not, those feelings were real, and even though she feared being punished for saying 'yes' once her husband found out, she told him he could have the job. The lawn hadn't been mowed the entire year before, and with the warmer weather arriving, it was in desperate need of attention.\n\n\"Really?\" she recalled him saying when she agreed. \"That's great! You won't regret it. I promise!\"\n\nWhen he finished, the lawn had been mowed leaving a beautiful diagonal pattern where the overgrown grass had been just an hour before. Grant had also edged everything to include the curb, the driveway, and the flower beds that were filled with weeds. He'd even pulled all of them and then disposed of them with a leaf blower to send them to one central location where he bagged everything and hauled it away in his pickup.\n\nHer husband rarely worked, but he'd gotten a job painting a house that day, so he was gone while Grant mowed, and afterward he showed her the results of his labor.\n\n\"Wow! This looks great, Grant,\" she told him as she admired the detailed work everywhere she looked.\n\n\"Satisfaction guaranteed, Ms. Thomas,\" he told her with a smile.\n\nWhile just talking to him on the porch had created a stir deep inside her, watching him mow the lawn without a shirt on did so to an even greater degree. He was just 18 but he was already six feet tall and very muscular. Not like a body builder, but like someone who'd worked hard for several years, and that's exactly what he'd done working for his father's construction company. She didn't ask why he needed to mow lawns, but later it did strike her as odd knowing Grant routinely worked for his dad in his construction business during the summer and long breaks.\n\nHe wasn't just handsome, Grant also a very kind, very polite young man, and he was in her third-period chemistry class that semester. While many of his peers were interested in getting a laugh from their fellow students, Grant was always attentive. And yet, no matter how hard he tried, the basics of chemistry seemed to elude him, and he was struggling to maintain a passing grade.\n\nDenise felt almost certain he would never go to college, but she knew that with a work ethic like he had, and a family business to reply on, he'd have no trouble making a decent living. And were to stay there, it was almost a guarantee that he'd take over Harmon Construction, LLC., one day.\n\n\"What's that?\" she asked him, aware that she hadn't heard what he'd said. She also hoped he hadn't seen her staring at his upper body.\n\n\"I was just saying that I guarantee my work.\"\n\n\"Oh, right. Yes, it looks amazing,\" she told him, making sure to look at his face; a very handsome face that had an amazing smile and eyes that looked...well...pretty.\n\n\"Come on in and I'll pay you,\" she told him.\n\n\"I uh, I'm kind of a mess,\" he told her with a laugh as he looked down at his thick chest that was dripping sweat. It was usually warm for that time of year, but even so, Denise hadn't really noticed anything other than the tall, well-muscled boy mowing her lawn.\n\n\"I don't think I realized how warm it is out here,\" she told him after allowing herself a very quick glance at his sweaty, swollen pecs.\n\n\"I can just wait on the porch if that's okay.\"\n\n\"Um, sure. That's fine, but you're welcome to come in. It's not like you're gonna track in a big mess or anything.\"\n\nHe kicked off his grass-stained shoes, wiped his chest with the tee-shirt he was carrying, then followed her inside.\n\nAs she went to get her purse, Grant looked around the way any first-time visitor might, and said, \"You have a nice home, Ms. Thomas,\" when she came back.\n\nAfter agreeing to let him mow the lawn, she'd walked around the house and made sure there were no beer bottles or any sign of drinking anywhere just in case, and she'd picked some things up and put other things away.\n\n\"Thank you, Grant,\" she told him as she fished the cash out of her purse, knowing that writing a check was too dangerous to risk.\n\nShe handed it to her student then thanked him again for doing such a good job.\n\n\"Satisfaction guaranteed,\" he told her again, that wonderful smile still there until he saw the amount.\n\n\"Hold on. This is $10 more than we agreed on,\" he said as he tried to hand it back.\n\n\"You went above and beyond, so that only seems reasonable,\" she replied, holding a hand up letting him know she wasn't taking any of the money back.\n\n\"Well...thank you. That wasn't necessary, but it was very kind of you,\" he told her, the smile now gone.\n\n\"You earned it,\" his teacher told him as Grant stared into her eyes.\n\nThe way he was looking at her was so disarming and distressing, she had to look away.\n\n\"So, I guess I'll see you on Monday after Spring break,\" she said without looking at him.\n\n\"Oh, right. Yes. I can't afford to miss your class. I have to get a passing grade.\"\n\nAs she opened the letter she remembered saying the words she still couldn't believe she'd said.\n\n\"I...I could tutor you.\"\n\n\"What?\" Grant said, not sure he'd heard correctly.\n\n\"I'd be happy to work with you one on one. If you'd like. Over the rest of the break.\"\n\n\"You don't have to do that,\" he told her. \"This is your time away from students, and I'm sure the last thing you need is spending time with one of them.\"\n\n\"There are some students who prove to be exceptions to the rule,\" she recalled saying, a smile returning to her face; a face she'd been told many times was very pretty if not beautiful.\n\nIt had been several years since she felt beautiful, but as she stood there, once again looking into Grant's eyes, she suddenly felt that way again.\n\n\"If you're sure you really don't mind,\" he said in his usual, unassuming way.\n\n\"I don't mind,\" she told him, the smile even brighter than before.\n\n\"Okay. Sure. I could definitely use the help. Just let me know when and where and I'll be there.\"\n\n\"Um...how about in my classroom?\" she suggested. \"I can obviously get into my room even during Spring break, and it's the perfect place to do hands-on work.\"\n\n\"Um, okay. Sure. That sounds great. What time works for you?\"\n\nDenise suddenly realized she'd get the third degree about leaving to go anywhere else but to the school, and even then, going there during vacation would likely still make her husband suspicious\u2014and angry. Now committed, all she could do was hope and pray this job of his would last an extra day or two.\n\n\"Maybe...10am?\" she suggested, knowing he'd be gone by then\u2014if he was going to leave at all.\n\n\"Okay. I'll be there. Just not with bells on,\" Grant told her, that innocent, boyish look she loved on his face.\n\nIt wasn't very funny, but she still laughed a very happy laugh and said she'd see him there.\n\nTo her surprise, her husband told her he'd gotten another job at a different house, and that he'd be out all day again. As grateful as she was that he wouldn't be around to grill her or worse, she was thankful for the work because getting by on her salary alone was a real challenge. And that was even more so when her husband put away no less than a 12-pack of beer each night, with many nights ending up closer to a case before he finally passed out drunk.\n\nBeing alone the next morning also gave her time to not only do her hair but put on makeup, something there was clearly no need to do. Then again, there was no need to wear a very cute, yellow and white sundress or a pair of white sandals with high heels.\n\nGrant was already there waiting for her when she walked up, and when she looked at him he tilted his head and said, \"Wow. Look at you, Ms. T.\"\n\n\"Oh. Um...thank you, Grant,\" she said as though it was all no big deal as her heart fluttered when she walked in front of him to unlock the door.\n\nFor nearly three hours they went over everything that Grant had been struggling with which was pretty much everything. They covered everything from the difference between atoms and molecules to covalent bonding to isotopes, with Denise drilling home the answers until he told her he was on overload.\n\n\"It's lunchtime anyway,\" she replied with a smile. \"I hope this helped.\"\n\n\"It really did,\" he told her sincerely, as he stood just a foot or so away. \"Thank you for doing this, Ms. Thomas.\"\n\nDenise could still feel the way her heart was pounding at that moment as she looked up into his eyes.\n\n\"You're very welcome,\" she replied.\n\n\"I feel like I owe you something for all of the time you spent on me,\" he said just as sincerely. \n\n\"No. Don't be silly, Grant. It was my pleasure.\"\n\n\"I uh, I made a little extra money yesterday mowing some generous person's yard. I'd be happy to buy you lunch. If you're not sick of me by now.\"\n\nDenise also remembered feeling nearly sick...with want...as she continued looking at him.\n\n\"Grant. This isn't a small town, but if anyone saw us... People talk. Even if it's completely innocent...\"\n\n\"Oh. I understand,\" she remembered him saying before she could explain. \"I just wanted to offer.\"\n\nShe knew it was her emotions talking, but they seemed to force her to say, \"You could come back to my house. We could eat lunch there together without raising any eyebrows.\"\n\nDenise knew right then how she felt. What she didn't know was how Grant felt. But he, of course, most definitely knew, and he had always considered her the most beautiful woman he'd ever known. For that matter, so did nearly every other boy in high school. \n\nAs he looked at her, he wanted to kiss her more than he'd ever wanted anything in his life. \n\nHe knew better than to even try, so he quietly said, \"That sounds really nice.\"\n\nDenise didn't mention her fear of being caught should her husband return home early for whatever reason. All she knew was something was driving her to be near this very handsome boy who looked nothing like a boy as her eyes moved rapidly back and forth between his.\n\n\"Great. I'll...I'll meet you there then in a few minutes then,\" she said, forcing herself to look away from those mesmerizing eyes.\n\n\"All right. Sounds good.\"\n\nAs she drove home, Denise's rational, thinking brain tried arguing with her emotional brain, but it was to no avail. Yes, it had been well over a year since she'd made love. Yes, he was her student. And yes, she was a married woman. But she knew that if Grant was willing, she would risk everything to be with him. She knew she should care enough to put a stop to thoughts of that nature, but she would gladly be 'one of those teachers' were she given the chance and deal with the consequences later.\n\nBut some 90 minutes later, she realized that wasn't going to happen.\n\nDuring lunch, they talked about trivial things, then at some point, she mentioned the kind of problems she was having with her husband. It was just a subtle hint at first, but Grant's genuine care and concern allowed to open up and really share what life was like in this house.\n\n\"I can't even imagine treating you like that,\" he told her sympathetically. \"I hope this isn't out of line, but you're the nicest, kindest, and most beautiful woman I've ever known, and well, were I lucky enough to have a wife like you, I'd make sure to let her know every single day how much I loved her.\"\n\nWhen her eyes filled with tears, Denise suddenly stood up then had to look away again. Grant also got up the moment he noticed she was crying and moved toward her. After a moment of hesitation, he put his hands on her shoulders. When he did, Denise slowly turned around and looked up at him as tears rolled down her cheeks.\n\nThe way she looked at him was...powerful. It was a look that caused him to instinctively put his arms around her and pull her close. Denise did the same, and as tears continued to fall, Grant gently ran his hand up and down her back, mostly stroking her long, dark, silky hair as he did.\n\n\"I hope what I said wasn't out of line and what made you cry,\" he quietly told her as she rested her head in the crook of his neck.\n\n\"That wasn't out of line at all,\" she finally told him. \"In fact, it was exactly what I needed to hear.\"\n\nShe moved away just enough to look up at him again, smiled then said, \"Thank you, Grant.\"\n\nWhen he began moving his head toward hers, a rush of chemicals flooded her body; a flood that caused her to throw all caution to the wind. And when his lips pressed against hers, she held him tightly and kissed him back, savoring every second of the delicious, forbidden passion swirling through her body and in her mind.\n\nBut when he suddenly pulled away, the flood ended as she looked at him and asked, \"What's wrong?\"\n\n\"Nothing. I mean...everything.\"\n\n\"Grant. What is it? Why did you stop?\" she asked afraid to hear the answer.\n\n\"I...I've had the hugest crush on you all year,\" he began. \"And now that I've gotten to know you a little, I...I can't tell you how much I love being with you.\"\n\nHe hesitated then said, \"I...I even came over to mow your lawn just to be able to be near you.\"\n\n\"Then...be with me, Grant\" she told him. \"It's okay.\"\n\nHe hesitated for a second or two, then as though he were the adult, said, \"I can't think of anything I would rather do.\"\n\n\"Then what's stopping you?\" she asked, her eyes begging for his body as well as the truth.\n\n\"I...I just can't. I want to so bad it hurts, but...I can't.\"\n\n\"Is it me?\" she asked, expecting to hear something about how old she was or how she wasn't attractive enough.\n\nInstead, he gently lowered her arms then reached for her left hand.\n\nShe saw him look down at the diamond ring on it and that's when she knew. \n\n\"It isn't you,\" he quietly told her. \"It's...him.\"\n\nNow deeply ashamed as reality came rushing back to her with a force so hard it felt like it knocked the wind out of her, she couldn't even look at him.\n\n\"I'm so...sorry,\" she quietly told him. \"You must think I'm some kind of slu...\"\n\n\"Don't say that. Don't ever say that,\" he said, stopping her before she could get the word out.\n\n\"If you weren't married nothing on earth could stop me,\" he told her as he gently raised her chin and made her look up at him.\n\nDenise tried to smile but couldn't as she said, \"Maybe the more appropriate word for me is...fool.\"\n\n\"No. That's not right, either,\" he told her. \"Neglected. Abused. Hurt. Sad.\"\n\nGrant smiled at her then said, \"I'd use those words instead.\"\n\n\"Once again you've made me love you even...sorry. You've made me respect you even more,\" Denise told him.\n\n\"They say love at first sight happens. I don't know if it does or it doesn't, but I do know that I could so easily fall in love with you...Denise.\"\n\nTears filled her eyes again before she said, \"May I hug you one more time?\"\n\nWithout saying a word, Grant took her in his arms again and held her. She wasn't sure how long that hug lasted, but it was at least three minutes if not more before he slowly let her go. Even though she knew he was right, she'd wanted that hug, and so much more, to go on forever, and yet she also knew it had to end. And so did this extremely brief and deeply embarrassing relationship.\n\n\"I'm not sure how I'm ever going to be able to look at you in class again,\" she told him as she reached for a hand towel near the sink to dry her eyes.\n\n\"It won't be any easier for me,\" Grant assured her. \"But I do want you to know I'll never say anything to anyone about what happened today. Ever.\"\n\n\"Why doesn't that surprise me?\" Denise asked, a half smile appearing on her lips.\n\n\"You really are beautiful...Ms. Thomas,\" he told her, never again using her given name.\n\n\"Thank you, Grant, and you are the one and only student for whom I've ever had feelings,\" she let him know. \"Very inappropriate but very real feelings.\"\n\nShe still didn't know why he kissed her again before he left, but she treasured that moment above all else, because after that...she knew how he felt about her.\n\nSo as she unfolded the pages of the letter, she once again thought about his lips pressed against hers before walking away as though nothing had ever happened.\n\nFor some reason, try as she might, she couldn't see the words, and that's when she realized it was due to the tears filling her eyes. She pulled a tissue out of her purse, dabbed them, then took a deep breath before trying again.\n\n\"My dearest Denise,\" the letter began, causing her body to tremble.\n\n\"If you're reading this, it means that I have been killed during the war. I cannot apologize enough for doing this to you, but I realized that I had to finally let you know the way I felt about you, and even after nearly four long years, still feel about you.\"\n\nDenise's hands trembled first. But within seconds her entire body began to shake as her eyes again filled with tears. This time, it wasn't just a welling up but a full-blown event that caused her to not only cry but sit there and sob uncontrollably as she realized that Grant had paid the ultimate sacrifice for their country.\n\nUnable to read or even think, she picked up her purse and ran to her car. She would call the office as soon as she could speak, but there was no way she could teach that day.\n\nAn hour later, she was finally able to pick up the letter again and continue reading. It was read through a vale of tears, but she was able to read it through to the end before falling apart yet again then laying down on the sofa when she'd been sitting and crying herself to sleep.",
        "It was dark outside when she awoke. She couldn't remember going to her bedroom or collapsing on the bed. But when she realized she was curled up in the fetal position she knew why as she again thought of this boy she'd once loved who'd grown to be a man and who was now gone forever.\n\nAny outsider would have laughed off her description of being in love with him, but the only opinion that mattered was hers, and no matter how little she really knew him, she was certain that she'd loved him in some way she still couldn't quite explain. But all that was now moot as Grant Harmon had gone the way of all the earth. \n\nAs she sat up in bed, Denise's mind began to race. She knew where his parents lived, and it took all of the self control she could muster not to drive over there or call. Even in her state of shock, she could still imagine how awful things must be at their home, depending on exactly how long ago they'd learned the news.\n\nShe tried to force herself to eat something, but after a small bite of dry toast and a sip of water she gave up and sat down in her favorite chair to think. And to mourn. And...to remember.\n\nBy noon the following day, Denise could no longer stand it and drove by the home where Grant's parents lived. She wasn't sure what she expected to see, but for some reason she thought there might be a government vehicle out front or maybe someone in uniform standing guard.\n\nBut after slowly driving by and seeing nothing unusual, she realized there wouldn't be anything wrong with a former teacher stopping by to pay her condolences. \n\nOnce the idea was fixed in her mind, she drove to a flower shop and bought the nicest arrangement she could find along with a card offering her deepest sympathies. As she drove back down the same street she did her best to retain control then pulled up to the curb and turned off the engine. \n\nThe urge to cry hit her again as she walked up to the front door, but Denise took several long, slow breaths then rang the doorbell. A dog barked followed by the sound of a man hollering, \"Hush!\"\n\nThe door opened, and Denise stood face to face with Grant's father who asked if he could help her.\n\n\"Oh. No. I...I was Grant's teacher. In high school,\" she got out.\n\nHis wife walked up and said, \"I remember you! Not by name, but I do remember your face.\"\n\n\"Yes. Hi. I'm Denise. Thomas. I teach chemistry.\"\n\n\"Right! Ms. Thomas! Won't you please come in?\" the older woman said very cheerfully causing Denise to wonder how they could be so friendly considering the circumstances.\n\n\"Um...I don't want to intrude. I just wanted to stop by and, you know, pay my condolences and leave these.\"\n\n\"Condolences?\" her husband asked, a confused look on his face.\n\n\"Well, yes. I...I heard about Grant and I...just felt terrible,\" she told him.\n\n\"Wait. What is it you heard? Do you know something we don't?\" the man asked, a worried look now on his face.\n\n\"I'm confused,\" Denise admitted.\n\n\"That makes two of us,\" Mr. Harmon said. \n\n\"So...Grant's not...\"\n\n\"Dead?\" he asked with a strong sense of disbelief.\n\n\"Well, yes,\" Denise replied as politely as she could.\n\n\"You need to come in and sit down, young lady,\" he told her, finally smiling.\n\nAs she walked in, Mrs. Harmon took her arm and said, \"Grant is going to be just fine. He was hurt pretty bad, but he's not dead or anything close to it.\"\n\n\"But...how could he...what about...you know...\"\n\n\"I'm sorry, dear, but no, we don't know,\" Mrs. Harmon said as she asked Denise to have a seat, the flowers still in her hands.\n\nA dash of embarrassment mixed with Denise's confusion as she tried to understand what was going on.\n\n\"What made you think he died?\" Mr. Harmon asked once they were all seated.\n\nDenise mentioned the letter without saying a word about the romantic words from their son knowing it would lead to an admission of guilt, and that would only lead to even deeper embarrassment.\n\n\"His vehicle was blown up,\" Mr. Harmon explained. \"One Marine was killed, and Grant's left side has a few holes in it, but he's actually doing quite well. In fact, we're expecting him home in a few more days.\"\n\nA massive sense of relief washed over Denise, temporarily covering over the confusion.\n\n\"I...I am SO happy to hear that,\" she told them. \"I was so deeply saddened and hurt, and I wasn't sure if I should even stop by. And now I feel very silly and even foolish.\"\n\n\"Being concerned is never foolish, dear,\" Mrs. Harmon told her with a smile. \"I only wish more people cared as much as you do.\"\n\n\"Here, here,\" her husband added.\n\n\"Could we get you something, Ms. Thomas?\" Mrs. Harmon asked. \"Some coffee or tea or maybe just some water?\"\n\n\"No, thank you. I don't want to trouble you any more than I already have. I...I think I'll just go ahead and run along, if you don't mind.\"\n\n\"You don't need to run off,\" Mr. Harmon told her. \"We understand if you need to get somewhere, but we're glad to have you stay.\"\n\n\"And I was going to make some tea anyway,\" his wife said.\n\n\"Well, in that case, that might be nice,\" Denise said. \"And will you please call me Denise?\"\n\n\"Of course, dear. I'm Sylvia, and my husband over there is Wayne.\"\n\nDenise stayed another half hour as they talked about Grant, their common experiences with him, his time in the military, and what had happened since the explosion.\n\n\"As relieved as I am, I can only imagine how happy you are to know he's coming home.\"\n\n\"Oh, yes. We can't wait to have our son home again!\" Sylvia said. \"With any luck, he'll be able to stay here while he's convalescing until his discharge in August.\"\n\n\"Oh, right. Yes, that would be four years, wouldn't it?\" Denise noted as though she'd only connected the dots just then.\n\n\"I'm hoping he'll finally come to his senses and go to work for me,\" Wayne said. \"I tried like hell...\"\n\n\"Sorry,\" he said to Denise while looking at his wife who was really giving him the eye. \"I tried hard to convince him to stay here, but he kept insisting he had to leave.\"\n\n\"It was the strangest thing,\" his mom said. \"He only mentioned it once, but he said there was a woman here in town, and he needed to leave because even though he said he was in love with her, he also said he couldn't be.\"\n\n\"Love! Ha! He was 18. He didn't know love from his as...\"\n\nThis time he stopped before getting another visual dagger.\n\n\"He was too young to know what love is,\" the older man said dismissively.\n\n\"Yes. I...I'm sure that's right,\" Denise agreed, even though in her heart of hearts she hoped that wasn't true. It almost certainly was, but she had a recent letter from their son telling her it wasn't, and now that she'd met his parents, she felt even worse than she had four years ago when they'd kissed.\n\n\"But now that he's a little older, and once he gets settled, who knows?\" Wayne said. \"I have to admit I wouldn't mind having a grandson to take fishing with me.\"\n\n\"Or a granddaughter,\" his wife told her husband with another, different kind of look.\n\n\"Okay. That might not be half bad, either,\" the gruff man said.\n\nDenise tried not to even smile, but Mrs. Harmon noticed.\n\n\"He's hopeless, dear. But with any luck Grant will have a better outlook on the world when he's his father's age.\"\n\n\"My outlook is just fine!\" her husband thundered.\n\n\"Oh, look at the time,\" Denise said as she set her tea cup and saucer on the table. \"I really do need to run.\"\n\n\"What about your flowers?\" Sylvia asked.\n\n\"Would it be too inappropriate to ask you to keep them?\"\n\n\"No, not at all. It was the kindness of the thought behind them that counts, so we'd be happy to keep them,\" Mrs. Harmon told her.\n\nAs they walked to the front door together, Wayne shook her hand, and his wife gave Denise a hug.\n\n\"Don't be a stranger, okay? I'm sure Grant would love to see you once he gets back home.\"\n\n\"Oh. I...well, maybe I'll stop by sometime then,\" Denise said as the thought of doing so now brought back the feelings of guilt she'd experienced just minutes before.\n\nAs she left she had no intention of ever going back to avoid any chance of the truth getting out. It was extremely unlikely she'd face any disciplinary action from the school board even if word somehow leaked out about a four-year old kiss with an 18-year old boy, but the embarrassment of what she'd allowed to happen would be difficult to deal with.\n\nBy the time she got to back home, all Denise wanted to do was get back in bed, pull the covers over her head, and forget about Grant Harmon. Instead, she picked up his letter and read again and then reread it once more after that.\n\nBy the time she finished reading it for the third time, she felt pretty sure she would never completely forget him. But there was no chance she would ever be with him, and that was the thing she would have to come to terms with.\n\n\"It's time to grow up, Denise,\" she told herself as she carefully folded the letter and put it back in the envelope before putting in the back of a dresser drawer in her bedroom with the intention of never looking at it again.\n\n*****\n\nTwo Weeks Later\n\nNeither his mom nor his dad heard a sound when he quietly snuck in, so when he loudly cleared his throat, his mom assumed it was her husband. But when she turned around to look and saw her son, she screamed.\n\nThe scream caused her husband to jump up and run to her just as she was hugging Grant.\n\n\"Did I hurt you? Are you okay?\" his mom asked as she let him go as soon as she hugged him.\n\n\"It's fine, Mom,\" he said as his dad's voice boomed out.\n\n\"You're home!\"\n\n\"Don't hug him!\" his wife warned as the two men embraced, ignoring her completely.\n\nHis father wanted details while his mother just wanted to smother him with affection. She offered to get him a drink, make him a meal, wash his clothes, put them away, and several other things in the space of the first ten minutes.\n\n\"He's not an invalid, Sylvia!\" Grant's dad finally said.\n\n\"No, but he's still my little boy, and I am SO happy he's home!\" she replied, addressing her son and now ignoring her husband.\n\n\"So your leg and your side, huh?\" his dad repeated after the drama died down.\n\nGrant patiently repeated the story as his mother cringed several times as his father either nodded or grunted.\n\n\"Is it bad? Does it hurt? Can I get you something? Do you need extra blankets on your bed?\" she asked staccato style.\n\nGrant managed not to laugh then assured her again he really was fine.\n\n\"Any infection?\" his father asked.\n\n\"No. So far, so good. But I have antibiotics just in case.\"\n\nNeither of his parents thought to mention that one of his former teachers stopped by until late the following day when his mother thought of it.\n\n\"Oh. Do you remember Mrs. Thomas?\" she asked out of the blue.\n\nJust the mention of her name made Grant freeze.\n\n\"Is she okay? Did something happen to her?\" he asked, the worry so obvious it made him mom give him a funny look.\n\n\"Not unless it just happened,\" she replied.\n\n\"Mom. Be serious,\" her son said.\n\nSensing something, but not sure what it was, she told him about the visit.\n\n\"Poor woman was told you'd been killed in some letter someone sent her,\" she said with a laugh. \"I have no idea who did that, but she brought flowers for us.\"\n\nGrant not only didn't respond, a million thoughts ran through his mind in the course of a few seconds; the time it took for him to realize someone had mailed 'the letter'. \n\nA feeling resembling panic set in, and Grant had no idea his mom was asking what he wanted for dinner. When she repeated the question, he told her he wasn't really hungry.\n\n\"Where are you going?\" she asked as he stopped up and grabbed his cane. He'd gone from a walker to crutches in a few days, and had been given a cane during his final check before being sent home on convalescent leave until he could be evaluated and discharged. The cane relieved most of the pain caused in his left leg, but it the way it made him walk caused his side to hurt. Then again, he was extremely happy just to have both legs, so if a little pain was the price to pay, it was well worth it.\n\n\"Can I borrow the car?\" he asked, forgetting both of his parents had one.\n\n\"Can you drive?\" his mom asked.\n\n\"It's my left leg, and you have an automatic, Mom,\" he politely reminded her.\n\n\"Okay. Sure. Will you be home for dinner?\"\n\n\"I'm not sure, but don't worry. I'll be fine either way.\"\n\nAs a Marine sergeant, Grant wasn't exactly well off financially. But having saved everything he'd made during his time in country to include hazardous duty pay, with everything being tax free, he had a modest little stash saved up in Navy Federal Credit Union. He'd buy another car in the near future, but he needed one right now.\n\nWhen his mother handed him the keys he thanked her then kissed her on the cheek just as his father walked in on the conversation.\n\n\"Where the hell you goin' already?\" he asked.\n\n\"Just out,\" his son replied, having no desire to get into it.\n\n\"Can you even drive?\" he asked in his normal gruff way.\n\nThis time Grant chuckled as he assured his dad he could.\n\nSylvia Harmon had a hunch about where her son was going and knew her husband had no idea and would almost certainly try and talk his son out of it if he found out. She smiled as she watched her boy drive off and didn't care one bit about him seeing this former teacher of his as her woman's intuition began piecing together the parts of the puzzle. He was alive and well, and in her mind, nothing else mattered.\n\nDenise had been home for about an hour and was grading papers. The end of the school year was at hand, and as usual, several students needed every point on every test to pass her class. As she drew a red mark through one such student's answer, Denise heard the doorbell ring. \n\nShe'd done a reasonably good job of keeping the promise she'd made to herself in that she hadn't pulled the letter out to read it again. But when it came to not thinking about the words contained in it, she'd been a miserable failure. No one had ever said the kind of things Grant had written in the letter, and she'd run them through her mind almost continuously since the moment she left his parents' home that day.\n\n\"Hold on!\" she called out as she got up and headed to the front door.\n\nShe'd taken off the skirt and blouse she'd worn to school and was wearing sweatpants and a tee shirt. Having no idea who it was, the thought of putting something else on never crossed her mind. It was probably a neighbor or maybe Amazon delivering a package, anyway.\n\nBut when she peeked through the peephole in the door she nearly fainted.\n\n\"Oh, my God!\" she said out loud as her entire body began to shake.\n\nHer hand was trembling as she unlocked the deadbolt. She took a long, deep breath before opening it, and even though she now knew who it was, her knees still nearly gave out when she saw him standing there.\n\n\"Hi,\" he quietly said, a smile on his still-handsome face; a face that was even more attractive now that it had matured.\n\n\"Hi,\" Denise managed to say as she steadied herself.\n\n\"The uh, rumor of my death has been greatly exaggerated,\" Grant said, still smiling at his former teacher.\n\n\"I...I can't believe you're here,\" she said, still barely able to speak.\n\n\"May I come in?\" he asked.\n\n\"Oh. Yes. I'm sorry. Your...seeing you...shocked me,\" she told him as she stepped aside before finally noticing the cane.\n\n\"Oh, my goodness. Grant, are you okay? Do you need some help?\"\n\n\"No, thank you. I'm fine. Really.\"\n\n\"You don't look okay,\" she told him before realizing how that sounded. \"No. What I meant was you look like you need help. You actually look fine.\"\n\nGrant laughed and told her she did, too, just when it hit her that she'd changed clothes. She looked down at herself then apologized and said she'd go change.\n\nHe laughed again then said, \"You look amazing. Just like you are.\"\n\nShe watched him make his way to the living room where she again asked if she could help him sit down.\n\n\"Getting up is the hard part,\" he told her with a smile. \"At least from a soft chair.\"\n\n\"Do you want to sit on a wooden chair in the kitchen?\" she asked immediately.\n\n\"Those hurt my leg,\" he told her with a laugh.\n\n\"Oh, my goodness! Grant, you're not okay, are you?\" \n\nThe distress in her voice was almost palpable as he slowly and painfully sat in an upholstered chair that had a straight, stiff back.\n\nWhen she started in asking what she could get him like his mother had he asked her to please sit down.\n\n\"Sorry. I'm just so befuddled. I...I thought you were...you know, and then I found out you're alive, and now I see you limping, and I know you're in pain, and I...\"\n\n\"Denise?\" he said, cutting her off before asking, \"I can call you Denise now, right?\"\n\nShe felt a flutter when he smiled at her again then said, \"Yes. Of course. I...I'd like that.\"\n\n\"I'm doing okay, and I will be fine. Really.\"\n\nShe was already very emotional, and when he told her that, she couldn't stop herself from tearing up.\n\n\"Hey! What's that all about?\" he asked.\n\n\"Sorry. I'm just so glad you're all right.\"\n\nGrant grimaced as he shifted his weight then said with a smile, \"As I said, I'll be fine. As in a few more days.\"\n\nHe paused, and when she tried to smile, he added, \"Or maybe weeks.\"\n\n\"Can you show me where you're hurt?\" she asked, the hurt in her own eyes there for him to see.\n\n\"My left leg took the brunt of it. My side took a chunk of shrapnel, too, but...\"\n\nHe was pulling up his pant leg then thought about the captain everyone liked so much and stopped when she spoke again.\n\n\"No. On second thought, please don't show me, okay,\" she said, her eyes now filled with sympathy which had replaced her tears.\n\n\"All right,\" he told her gently as he sat up straight again. \n\n\"I'm really glad you stopped by, Grant,\" Denise told him. \"I was so worried.\"\n\n\"My mom kind of mentioned that,\" he told her, making sure to smile again.\n\n\"Oh, right. I can only imagine what she thought when I told her I thought her son was, you know.\"\n\n\"She thought it was extremely considerate of you to take the time to stop by and pay your respects.\"\n\n\"She's very nice.\"\n\n\"Yeah. I kind of like her,\" Grant said with another smile. \"My dad can be a little rough around the edges, but he's pretty awesome, too.\"\n\nDenise had been looking at him, but now she was looking down at the floor.\n\n\"What's wrong?\" Grant asked.\n\n\"Oh. Nothing,\" she told him unconvincingly.\n\n\"The letter, right?\" he said, knowing what it was.\n\n\"We don't have to talk about it. It's okay.\"\n\n\"When my vehicle got blown...hit...I was medev...they took me away in a helicopter. I'm certain someone from my unit found the letter I'd written to you and mailed it.\"\n\n\"It's okay. Really. You don't have to explain anything, Grant. It...it was very beautiful and...\" Denise told him as she finally looked at him.\n\n\"So you don't want to talk about it?\" he asked when she stopped speaking.\n\n\"I just didn't want you to feel like you owe me an explanation,\" she told him.\n\n\"I uh, I stopped by because I needed to tell you in person that I meant every word I wrote, Denise. If it made you feel...uncomfortable...I apologize. I just needed you to know how I felt. But it wasn't supposed to ever get mailed unless I was, you know.\"\n\n\"I'm just very thankful that you aren't,\" she told him with deep sincerity.\n\nWhen he didn't say anything, she managed to smile then said, \"I...I cried when I read your letter.\"\n\n\"I know I'm a terrible writer, but, geez...\"\n\n\"No! Stop! Grant, don't tease me.\"\n\n\"Sorry,\" he quietly replied, feeling bad for saying something so...immature.\n\nDenise waited a few seconds then said, \"I actually read it several times, and each time I hurt for you\u2014and your family\u2014even more.\"\n\n\"And?\" Grant asked as nicely as humanly possible.\n\n\"I...I don't know. I think maybe it scared me.\"\n\n\"Scared you?\" he asked, not sure what she meant.",
        "\"Well, yes. I mean, we...we had...you know, that...moment.\"\n\n\"Yes we did,\" Grant replied rather quietly.\n\n\"After it happened I tried to put you out of mind, but I couldn't. Just having someone...having you...be so kind to me made me realized I didn't have to live with the man I married; a man who changed so much I barely knew him anyone. That one short hour with you here gave me the courage to finally leave him.\"\n\nShe looked right at him then said, \"I really did try and forget about you. It never worked, but I really did try.\"\n\nShe paused, looked away for a moment then looked back at him before saying, \"And then, there was the letter.\"\n\n\"And?\" Grant asked again.\n\n\"And it stirred up so many feelings and emotions, many of them very, very deep.\"\n\n\"Like me being your student?\"\n\n\"Among many others,\" she admitted. \"I know that's irrational because you haven't been my student for four years, but yes, you were when, you know...\"\n\n\"I do know. And I've never forgotten it. Or you.\"\n\n\"Grant? You're a very attractive guy. Surely you've had girlfriends and...you know.\"\n\n\"I have, but there's never been anyone like you in my life, Denise.\"\n\n\"Is it maybe just a memory? A memory of forbidden love or even just lust? Something you hold onto because of how it happened or even with whom it happened?\" she asked, as her brain battled itself again for control.\n\nGrant waited for her to look at him before answering.\n\n\"No. It was none of those things. It was you, Denise. It was you, the person I fell in love with. Not what she did for a living.\"\n\n\"Fell in love with?\" she asked, as her heart began racing.\n\n\"I've had a lot of time to think back on our 'moment' and all that happened between us. Yes, you were my teacher at the time, but I have never felt about anyone the way I felt about you.\"\n\nHe paused then told her, \"The way I...still feel about you.\"\n\nDenise was more than a little surprised at how nervous she felt, but it made her laugh a goofy kind of laugh as she looked at herself then said, \"Well, how you could you not? I mean, just look at me!\"\n\nShe sat up straight, kind of flipped her hair then stuck a pose as she said, \"How could any man resist...this?\"\n\nGrant laughed at her silliness then told her that was one more thing he loved about her.\n\n\"Love is a very strong word, Grant,\" she told him as though he might not be aware of that.\n\n\"It is. But in this case I believe it's...the right word.\"\n\n\"But how can you know that? After all these years, and considering how little we knew each other, how can you possibly know that?\" she asked almost imploringly as though she were also asking herself the same question.\n\nWhen he slid forward to emphasize a point, he winced again, and Denise instinctively got up to help.\n\n\"I'm okay,\" he told her as he held his side and moved forward a little.\n\nHe smiled at her then said, \"Besides, it only hurts when I move. Or turn over. Or lean to the side, or...\"\n\n\"Grant! Stop!\" she said again as though she were back in high school herself.\n\n\"Come here,\" he said, surprising her as he held out a hand.\n\n\"What?\" Denise asked as her heart began racing.\n\n\"Come here,\" he said, tapping his right thigh.\n\nShe gave him a funny look then glanced at his hand but finally took it.\n\nHe gently pulled her his way, and when she knew he meant for her to sit there, she asked, \"Won't it hurt?\"\n\n\"Maybe, but it'll be so worth it,\" Grant replied, a happy smile on his face. \"Just don't hit the outside of my left leg, okay?\"\n\nDenise turned her legs to land on his right side then carefully sat down.\n\n\"See? No pain,\" he told her even though it made his side hurt a little. But he was right. It was so worth it.\n\nAgain, he waited for her to look at him then smiled at her before speaking.\n\n\"I'd like the opportunity to let you get to know me better,\" he began. \"I'd say to let me get to know you better, too, but unless there's some huge secret you're hiding, I'm pretty sure that would only confirm what I already know is true.\"\n\n\"And what might that be?\" she quietly asked him as she looked into his eyes.\n\n\"That you're the most amazing woman I've ever known,\" he told her in a way that moved her almost as much as his words had in the letter.\n\n\"Unless you're seeing someone else,\" he quickly tacked on.\n\n\"No. I'm not seeing anyone. I've been working on getting my master's degree, so between that and teaching, I really don't date all that much.\"\n\n\"Sorry, but I...I need to stand up,\" he said, causing her to almost jump off his lap for fear she was hurting him. But it was the sudden move that hurt the most and when he grabbed his side, she felt terrible.\n\n\"I am SO sorry!\" she said immediately as she threw her hands over her mouth.\n\nGrant told her he was fine then asked her to help him stand up. She held out both hands, and with her assistance, he stood up, still holding onto them.\n\n\"You have no idea how much I've wanted to kiss you again,\" he told her as she looked up into his eyes just inches away.\n\n\"I think maybe I do,\" she said so quietly he barely heard her.\n\n\"But I don't want to ruin anything before we have a chance to see if this really is something or just an old memory we're feeding,\" he told her as he gently touched her face.\n\n\"I can't say I'm not disappointed, but as usual, you are wise beyond your years,\" she said just as quietly as he put his arms around her causing her to ask what that was all about.\n\n\"It's just a hug. And for now, that's probably all we should do.\"\n\nShe carefully put her arms around his neck and held him, too, as her body and mind reconnected with what had happened four years before.\n\n\"Now what?\" Denise sweetly asked when it ended.\n\n\"Now we do what normal couples do. We go to dinner. We see a movie together. We hold hands. When the time is right, we kiss again. And then...\"\n\n\"Yes?\" she asked, a bright happy smile on her very pretty face.\n\n\"And then we see what follows.\"\n\n\"Oh, okay,\" she replied just as sweetly with a warm, happy smile.\n\n\"But for now I should probably let you get back to whatever you were doing,\" he told her.\n\nDenise wanted more, but she knew he was right. Both of them, but especially her, needed time to understand what was happening. Did she really have feelings for him or was it just wishful thinking based on lust that was four years old? \n\nShe told him she hadn't been doing anything important, but before he turned to leave she asked him a question.\n\n\"May I see now?\" \n\nShe looked at his side as she said it, and he understood what she meant.\n\n\"You'll only see a large gauze bandage,\" he said as he slowly and carefully raised the side of his shirt.\n\nShe bent down and the moment she saw it, she gasped, and put her hands over her mouth again. He then let go of the shirt and just as carefully raised the pants he was wearing up to his knee exposing two of the four places where he'd been hit.\n\n\"There are two others. Here and here,\" he explained, touching the cloth up higher over each wound.\n\nDenise teared up again, and without asking put her arms back around him and just held him for several more seconds.\n\n\"You are so brave,\" she told him.\n\n\"No. I was just at the wrong place at the wrong time,\" he told her.\n\n\"Was anyone else hurt?\" she asked after pulling away enough to look at him.\n\nHe hesitated then said, \"Yes.\"\n\nHer eyes darted with his indicating she needed to know.\n\n\"The man to my left in the back seat was killed,\" he told her. \"I didn't know that until I got a call from my former company first sergeant in Germany.\"\n\n\"Can you tell me how it happened?\" she asked, as tears fell from her eyes.\n\nHe told her what an IED was and how their vehicle went over one, omitting details like blast waves and concussions and shrapnel, and how the captain had been trapped inside and the way the Humvee burned and how the ammunition inside went off with him still in it or how they combed the desert to find anything large enough to send home.\n\n\"His poor family,\" Denise said, barely able to keep from crying. \"His wife. Those little children.\"\n\n\"He was a really great guy. A lot of Marines either don't like officers or they just tolerate them, but this guy was really different. He was a true professional, and yet he was like...one of us, you know? And of course, he's the one who was killed.\"\n\n\"Life can be so unfair,\" she offered supportively.\n\nGrant gently touched her cheek then said, \"Yes. Yes, it can. Or maybe it's just...indifferent.\"\n\nDenise understood what he meant and told him again, \"You really are wise beyond your years, Grant Harmon.\"\n\n\"And you are still the most beautiful woman I have ever known, Denise Thomas,\" he told her with a smile.\n\nBefore she let go of him, Grant could tell she wanted to say something else.\n\n\"What? What is it?\" he asked.\n\nDenise looked down for a moment then looked back up at him and asked, \"Do you know how old I am now?\"\n\nHe somehow managed not to laugh when he said, \"Let's see. I did take math up through algebra and geometry. And I passed them both. So yes, I can add.\"\n\nDenise tried to smile when she replied to his attempt at humor.\n\n\"You're also not blind, Grant.\"\n\nShe hesitated again for a second or two then said, \"While you've gotten older and even more handsome, I've just gotten...\"\n\nHe put a finger on her lips to stop her and said, \"Even more beautiful to me. Okay?\"\n\nAs she looked into his eyes, all she could say was a very quiet, \"Okay,\" as they let go of one another again.\n\nWhen she walked him to the door, Denise 'felt' every painful step Grant took. He had to be hurting, but he never once complained. In fact, when she opened the door for him, he said something that made her laugh.\n\n\"As we get to know each other keep in mind the hardest part is behind us.\"\n\n\"What part is that?\" she asked.\n\n\"You've already met my dad.\"\n\nHe laughed, too, and she admitted she found his father a little bit intimidating.\n\n\"He's a paper tiger,\" Grant told her. \"Once you get to know him, he's a big softy. He just puts up this front so no one who works for him will think he's weak.\"\n\n\"Ah. Good to know,\" she replied, another happy smile on face.\n\nKnowing he was about to leave, Denise told him how happy she was he'd stopped by.\n\n\"And thank you for writing the letter.\"\n\n\"I couldn't not write it,\" he told her with a level of sincerity that nearly took her breath away before shuffling outside onto the porch and then down to his mother's car.\n\nWhen he got there he turned around and said, \"I uh, I don't even have your phone number, Ms. Thomas!\"\n\nHis former teacher laughed, then walked to his car and asked for his phone.\n\nShe entered her information then handed it back to him.\n\n\"And now you do.\"\n\nGrant was staring at her, and that made her ask why.\n\n\"Because I want to kiss you so badly that if you don't leave, I'm not going to be able to stop myself.\"\n\n\"Who says I want you to?\" she asked, another happy smile on her face.\n\n\"You. Turn. Go. Leave,\" he told her playfully.\n\n\"Okay, okay. Gee. Pushy much?\" she teased.\n\nShe didn't leave. She did take a step backward then stood there and waved until he drove off then went inside to begin sorting through the jumble of feelings that were now overwhelming her mental circuitry.\n\nA few minutes later, when Grant got home, his mom smiled at him.\n\n\"What?\" Grant asked.\n\n\"Oh, nothing,\" she replied, the smile still there.\n\n\"I've heard of mother's intuition, but...seriously?\" he told his mother as he watched her smiling without looking at her son.\n\n\"I like her,\" his mom said, surprising him even more.\n\n\"How do you there's a woman let alone who it is?\"\n\n\"I saw the way she reacted when we told her you were alive. And then I saw how you reacted when I mentioned her.\"\n\nGrant ran a hand through his very closely cropped hair and sighed.\n\n\"I really like her, too, Mom.\"\n\n\"I know,\" she replied. \n\nThis time she smiled at her son, and that caused him to just shake his head in disbelief. \"Because of the age difference, your father may not warm up to her as quickly, but he'll come around. Eventually.\"\n\nGrant hobbled over to her and kissed her on the cheek.\n\n\"I love you, Mom.\"\n\n\"And I love you,\" she told him. \"And if you love this woman, then I'll love her, too.\"\n\n\"You're amazing. You know that?\" her son told her.\n\n\"I'm just a mother, honey. A mother who is thankful beyond words that her son is alive and will fully recover. A mother who just wants her son to be happy.\"\n\n\"Thank you, but you're not just a mother. You're my mother,\" he told her before kissing her again then asking what was for dinner.\n\n\"When do you go to the doctor again?\" she asked without telling him.\n\n\"Oh, right. Tomorrow. At McChord Air Force Base just south of Tacoma.\"\n\n\"I know exactly where it is,\" his mother replied. \"Unless you have someone else to take you.\"\n\n\"You know I can drive, right?\" he reminded her.\n\n\"You can do a lot of things, but I only have one son, and while he's home, I intend to dote on him constantly.\"\n\nShe smiled then said, \"But I'm willing to share his time with a certain former teacher of his if that would make him happy.\"\n\n\"When you say it like that it sounds pretty bad, doesn't it?\" Grant said, again running his hand through his hair.\n\n\"The important word there is 'former', honey. Now she's just a very beautiful young woman.\"\n\nHis mom smiled again then said, \"Who's young...to me.\"\n\nGrant laughed and so did his mom just as his dad came in asking what was for dinner.\n\nWhen his wife and son both laughed some more, Wayne threw up his hands and said, \"Fine. I'll make it myself then!\"\n\n\"If you do, I'm not eating here tonight,\" Grant muttered but loudly enough for his dad to hear.\n\n\"I'm not deaf you know!\" his father called out.\n\n\"Neither am I, sweetheart,\" Sylvia reminded her much-too-loud husband as she opened the fridge and pulled out a roast.\n\nAs he lay on his bed, Grant looked at her number and found himself staring at it as though that particular ten-digit combination was somehow her. He smiled when he thought about her and began began a text.\n\nWithin seconds after sending it his phone rang.\n\nHe saw her name and laughed as he answered it.\n\n\"Yes. I'll take you,\" she said without even saying 'hello' or telling him it was her.\n\n\"Don't you have class?\"\n\n\"Substitutes like getting calls to work,\" she told him in a way that let him know she was smiling.\n\n\"You do know how bad traffic is, right?\" he reminded her even though he hand't been to Seattle or Tacoma in a couple of years since he was home on leave.\n\n\"It's awful, but considering who I'll be with, I don't think I'll mind,\" she told him.\n\n\"Hmmm. My mom offered to drive me, but considering who I really want to be with, I had to ask.\"\n\n\"The answer is 'yes',\" Denise told him, the smile still on her face.\n\n\"Okay. I'll see you bright and early then.\"\n\n\"I'll be waiting,\" she promised before saying 'goodbye'.\n\nAgain, he lay there in the same bed he'd slept in during high school and laughed when he thought about how many times he'd 'taken care of business' while fantasizing about Ms. Thomas. Now, after these last four years, he wasn't even hard, even after talking to her. \n\nIt wasn't that he found her any less attractive. If anything, just the opposite was true. She was even more beautiful to him now than she'd been back then, and that made his lack of arousal al the more unusual. He also realized that if she turned out to be as wonderful a person as she was beautiful, that he would quickly fall in love with her\u2014for real this time\u2014and that caused him to wonder whether or not she could ever really feel that way about him.\n\nGrant, of course, had no way of knowing that she was thinking very similar thoughts as she went online to request a substitute. She listed a doctor's appointment as the reason, which was technically true. Then again, she didn't need a reason as she had nearly 40 days worth of time off saved up, the most the county allowed. Denise loved teaching so much that she never took time off unless she was actually ill, and she rarely ever got sick.\n\nAs she closed her laptop, she saw his handsome face again in her mind. Her eyes closed as she sat there and imagined him holding her again and wondered how long it would be until he realized she was a 35-year old woman and gave up on this outdated fantasy he was still clinging to\u2014and her, as well. And as she continued thinking about it, she had to admit it was definitely possible that she was using the past and the letter as a substitute for real, genuine feelings of love.\n\n\"Love,\" she said quietly to herself. \"After four years of thinking I'm in love with one of my former students, am I really?\"\n\nThat very pointed question was followed by one that was as equally troubling.\n\n\"Or am I just some kind of lonely, desperate fool?\"\n\nShe knew men, and even other women, considered her attractive. And yet the years of verbal abuse had taken their toll on her. Not her outward physical appearance but on her spirit. She didn't often feel beautiful and she couldn't help but wonder if she'd somehow been damaged beyond repair. And that feeling was reinforced by her belief that she'd been in love with an 18-year old boy and was still in love with him four years later when the truth was she barely even knew him.\n\nAfter batting those thoughts back and forth for the rest of the evening, she realized she couldn't yet answer her own question. And with that, she did her best to let it go until she could spend enough time with him to find out whether or not any of it was true.\n\nWhen she woke up the following morning, Denise felt less apprehensive and maybe even energized. She was finally getting to spend some time with Grant so she could find out how real this...belief...of hers really was.\n\nGrant insisted on driving to her place, and that made a lot of sense as a way to avoid having to meet his parents again until they were ready for that, if that time ever actually even came.\n\nHe pulled in right at 7:45 and Denise's heart fluttered when she opened the door to let him in. Grant smiled at her, hugged her, and told her she looked beautiful. She thanked him sincerely then reminded him that compared to sweats, anything would look nice.\n\n\"On you, anyway,\" he replied, his words making her feel wonderful inside again.\n\nAs always, traffic was terrible. It was slow going on Route 167 or as it was commonly called, the Valley Freeway, that led south toward the towns of Sumner and Puyallup. A few miles further and they took Highway 512 West toward Lakewood before a brief run south on Interstate 5 before exiting to McChord.\n\nThings started off slowly as they talked about the weather and how this was such an unusually nice day. The sky was a gorgeous blue with lots of puffy, white clouds, and it was even more unusual in that they could see Mt. Rainier off to their left and the tops of the Olympic Mountains to their right. There weren't many days like this except during July and August, but when they happened, the view was spectacular. Other than the snarl of traffic.\n\nBy the time they reached the 512 Denise was opening up about her marriage, and for the first time, providing details about the kinds of things she'd endured. She had Grant's full attention, and at one point he reached over and took her hand and told her how truly sorry he was.\n\n\"You didn't deserve that,\" he said.\n\n\"No. No, I didn't. But I...I felt like I was...trapped. On one level I knew I wasn't. But on another, I honestly couldn't see a way out. So I'd tell myself I'd deal with it after the school year ended and then after the Christmas break.\"\n\n\"And then after the next school year again,\" Grant said, once he understood.\n\n\"I've never told anyone about this other than my mom,\" Denise explained, her hand still in his as she carefully navigated her way through the endless maze of vehicles.",
        "\"I see at least one positive in what you just told me,\" Grant offered.\n\n\"Oh?\"\n\n\"It tells me that you're not one to easily give up. And, well, were you to find the right man, a man who'll treat you the way you deserve to be treated, he'll know that you'll always be there for him.\"\n\nDenise risked a quick glance over at her former student and smiled at him.\n\n\"You already know me better than my ex-husband did,\" she told him very sweetly.\n\nHe squeezed her hand then told her, \"I'd like to know everything about you, Denise.\"\n\nIt may have been nothing more than her feeling starved for that kind of attention, but something told her it wasn't just that. She could tell Grant was sincere, and as she saw him looking at her out of the corner of her eye, a wave of...warmth...washed over her.\n\nThe conversation turned to Grant's plans after his discharge as they continued poking along on I-5.\n\n\"My dad really wants to me to work for him. I think he wants me to learn the business so he can turn it over to his son whenever he retires.\"\n\n\"That makes sense, right? You work your whole life to build a business, and rather than sell it to a stranger, you turn it over to family.\"\n\n\"No. You're right. I'm just not sure that's what I want. It would be a very secure job and the income would be more than enough to take care of a family.\"\n\n\"Do you want children?\" Denise asked as neutrally as she could.\n\n\"I do. Definitely. One for sure and maybe two.\"\n\nHe looked her way then asked her the same thing.\n\n\"Oh, yes. Very much so. And like you, one or two.\"\n\n\"You'd be an amazing mom,\" Grant told her.\n\n\"And I think you'd be a fantastic dad,\" she replied with a smile even though she couldn't afford to look over at him due to the literal wall of traffic in every lane for miles. She'd had to let go of his hand several minutes ago, and staying focused was critically important.\n\nShe waited for a few seconds then asked, \"If you decided not to work for your father, do you have any idea yet what you might want to do?\"\n\n\"Don't laugh, okay?\" he told her with a little laugh of his own.\n\n\"I promise,\" she said.\n\n\"I might want to re-enlist.\"\n\nIn spite of the obvious potential danger, his answer surprised her to the point that she not only cut her eyes his way, she turned her head and said, \"What?\"\n\nShe looked away immediately, but the look on her face made Grant smile.\n\n\"At least you didn't laugh.\"\n\n\"Grant. Are you serious? You nearly died, and you want to stay in?\" an incredulous Denise asked.\n\n\"Crazy, huh?\" he replied as he stared at Mount Rainier's 14,000 foot summit.\n\n\"May I ask...why?\"\n\n\"Of course. I'm just not sure I can answer you yet. And unless my wounds heal to the point where I could stay on active duty, that's a moot point. But my rate of recovery has been really good, and I feel confident I'm going to be able to run again and do everything I could before.\"\n\n\"I'm sorry for not being more positive,\" Denise said apologetically. \"You just really, really surprised me.\"\n\n\"Well, that would also depend on how things go with us, and if they go as well as I hope they will, then your opinion would be extremely important to me.\"\n\nDenise braved another very quick look at him before saying, \"I can't remember my opinion ever mattering to my ex-husband.\"\n\nShe then reached over for his hand, and when she found it, said, \"You have no idea how wonderful it is to hear you say that.\"\n\nGrant gave her hand another gentle squeeze before letting go and reaching over and brushing her hair back.\n\n\"May I tell you something personal?\" he asked.\n\n\"Yes. Anything.\"\n\n\"You have no idea how many times I fantasized about, you know, with you and me together...\"\n\n\"Oh. I see,\" a very happy 35-year old woman replied as his words again warmed her heart.\n\n\"I'd ask you what kind of fantasies, but I'm afraid I might blush,\" she said with a nervous laugh.\n\nGrant gently twirled her hair in his fingers then said, \"Yeah, they get pretty racy sometimes.\"\n\n\"Get? As in...present tense?\" she asked with a happy smile.\n\n\"Well, not since...last night,\" Grant told her with a nervous laugh of his own. After initially being flaccid, continued thoughts of her in a pretty silk nightie did the trick.\n\n\"May I tell you a secret?\" Denise asked.\n\n\"Sure.\"\n\n\"I...I fantasize about you, too. Also as in...present tense.\"\n\n\"You do, huh?\" Grant teased. \"Do they get racy?\"\n\nHe saw her bite her lip before answering.\n\n\"Define racy.\"\n\nThis time, Grant actually laughed but didn't say anything. After nearly a minute of silence, Denise asked him what he was thinking.\n\n\"It's just that I've dreamed of this moment, of being with you, a thousand times. And now here I am, sitting next to the most beautiful woman I've ever known, and I feel like I can tell her anything.\"\n\n\"You can,\" she said.\n\n\"Oh. In that case, we need to move over. Our exit is coming up.\"\n\nDenise needed all the advanced warning she could get in order to move to the exit lane. She put her signal on and waited for someone to give her a chance. When they did, she slowly slid over in front of them then waved to say 'thanks'. When she was allowed to that again almost immediately, Grant huffed.\n\n\"What?\" Denise asked, perplexed by the noise.\n\n\"You know the only reason you got over so quickly is because you're hot.\"\n\nNow she made a noise but it wasn't a huff. It was more of an 'uh' kind of thing.\n\n\"You don't know that!\" she said as she got ready to exit the freeway.\n\n\"Both of the other drivers were men. I watched them look right past me, and when they saw you, they slowed down.\"\n\nHe paused then said, \"Can't say I blame them.\"\n\n\"Yeah, right,\" Denise replied as though he was crazy but secretly loving the sweet words.\n\nTo Denise, the base hospital felt like any civilian hospital with the exception of Grant's ID card serving as payment for all services. He asked her to sit in during the visit with the doctor who was expecting him, and after doing an interview and a quick check of his wounds, the doctor sent him to radiology for yet another CT scan of his leg.\n\nThe prognosis was very good, and Grant was cleared to walk as much as he could stand. And if he ever felt like running there was no reason not to as long as it wasn't too painful. He was told to come back one more time 30 days later, and from there a determination would be made as to whether or not he could be retained on active duty. Two Navy doctors would review his case to include all x-rays, CT scans, and MRIs as well as conduct a final interview before making their decision.\n\nA little over two hours later they were on their way back to Auburn and discussing the doctor's assessment and prognosis.\n\n\"You really are coming along well,\" Denise told him.\n\n\"The best part was hearing that I shouldn't need this cane much longer, and with some luck, I could be running...a little...in another month of so.\"\n\n\"That would be the middle of June. Don't you get discharged in August?\"\n\n\"Yes. The 15th. Unless I...\"\n\n\"Grant? Can you help me understand why you'd even consider that?\"\n\nHe could tell there was no judgment in her voice. She just needed to know.\n\n\"Wow. I uh, I can try. I'm just not sure it'll make sense.\"\n\nDenise reached for his hand again then said, \"I just want to understand.\"\n\nFor the next few minutes he tried to explain things like brotherhood and 'espirit de corps' and other words he used to mock when 'lifers' talked about staying in the Corps. But here he was not only saying them but believing them.\n\n\"I don't know if that helps or not, but that's the best I can do.\"\n\n\"No. It does help,\" Denise told him.\n\nThe look on her face said she was troubled, so Grant mentioned it and asked her to tell him what she was thinking.\n\n\"Well, I have to assume you wouldn't want the same things then.\"\n\n\"I...I don't understand,\" he said.\n\n\"You mentioned a family before. You know, when you talked about working for your father.\"\n\n\"I could still have a family,\" he informed her, and saw a look of surprise on her face this time.\n\n\"But...well, no offense, but how could you afford to do that? Wouldn't you need...help?\"\n\n\"What? Like food stamps?\" he asked once he saw where this was going.\n\n\"Well, yes. Don't military families struggle?\"\n\n\"Okay. I understand now.\"\n\nGrant told her that as a sergeant with four years in he could definitely support a wife. They wouldn't be rich, and things would be tight, but it could be done And by the time he made staff sergeant, E-6, he'd be able to support a child.\n\n\"But if my wife was say, oh, I don't know, a...teacher...or something like that, she could easily find a job wherever we lived, and we'd be doing quite nicely.\"\n\nAgain, his amazing words made her feel wonderful as she said, \"Then all you need to do is find a teacher willing to marry you, huh?\"\n\nGrant laughed put his hand on her shoulder, then said, \"Right. But where might I find such a rare creature?\"\n\nDenise laughed happily then reached up and took his hand and pulled it onto her lap.\n\nGrant insisted on buying her lunch, and when she mentioned money again, he reminded her he was still getting paid.\n\n\"So there's no way you are ever paying for me, got it?\" he told her.\n\n\"Well, excuse me!\" she said before adding, \"yes, sir!\"\n\nGrant moaned then said, \"Don't ever call me 'sir'. I work for a living, okay?\"\n\nDenise had never heard that before, so it was lost on her. That made Grant laugh again before explaining the old.\n\n\"I have a lot to learn, huh?\" she said as they pulled into a restaurant parking lot.\n\n\"I'll teach you everything you need to know,\" Grant assured her.\n\nDenise parked the car, turned off the engine, then said very coyly, \"Promise?\"\n\nIn spite of his very recent quasi-promise to hold off, Grant told her he couldn't and leaned over and kissed her. Denise moaned softly as their tongues touched then swirled for the first time.\n\n\"You are a very fast learner,\" Grant whispered as their lips parted.\n\nDenise tried not to laugh when she told him she had an amazing teacher.\n\nAs they sat and ate and talked, something changed. Or perhaps things...solidified. Whatever it was, both of them stopped worrying about there being something real between them and started focusing on all of the things they shared in common. And the more they learned about one another, the more things they discovered that they agreed on.\n\nBy the time they got back to her place around 2 o'clock, it was as though a dam had burst. Four long years of pent-up desire and wanting came crashing down on them both all at once. They'd barely gotten inside the house when Grant grabbed her arm and pulled her to him. Denise realized what it meant and literally glommed onto him as clothes flew off and fell wherever they landed.\n\nThe only slowdown was when she saw the huge scar under the area that had been covered by a bandage until a nurse removed it during the time Grant was at the VA. The nurse had pulled a curtain around so she hadn't yet seen the extent of the wound. \n\nAt first she only looked. Then, she slowly reached out her hand and gently touched it and traced its jagged, four-inch length with her finger from end to end.\n\n\"Does that hurt?\" she asked.\n\n\"No.\"\n\nShe then bent over and softly kissed it from one end to the other before standing back up and putting her arms around her nearly-naked lover to be.\n\n\"I can't wait another minute,\" she told him.\n\n\"I'm afraid you're gonna have to,\" Grant said very seriously.\n\n\"What? Why? What's wrong?\" she asked as she covered her bare breasts with her arms.\n\nGrant tried not to laugh as he slowly pulled her arms back down.\n\n\"I have to pee,\" he said, trying not to laugh. 'Bad.\"\n\nThe look on Denise's face was priceless as Grant took her hand as she led him to her bedroom with one brief stop along the way.\n\nIn spite of several moments when Grant winced from pain caused by certain movements, the two of them not only made love for the first time but realized that this was more than just a fantasy. It was also more than the culmination of four years of pent-up dreams and wondering whether or not it was even real. It was not only real, it was...evidence. Not the kind one would bring to a trial, but it was still very much evidence; evidence that these two unlikely people loved one another. Neither of them spoke those words, but the way they held one another long after it was over said more than any words could ever say.\n\nFor the better part of an hour they lay there in silence just holding one another while caressing each other's backs, arms, and faces. There were occasional smiles and a few kisses, but nothing more was said or done, and neither of them felt like anything was missing.\n\nFinally, Grant pulled away a little bit then asked, \"So you weren't disappointed?\"\n\nDenise shook her head in disbelief and asked what he meant by that.\n\n\"I haven't had any practice in a long time, and well, I don't exactly have a movie-star body.\"\n\nHe was trying to make it sound like he was joking, but Denise didn't think it was funny.\n\n\"Grant. You are so handsome it makes...it makes my heart hurt,\" she told him, her hand on his face. \"And I think your body is beautiful.\"\n\n\"Scars and all?\" he asked, still trying to play down his own fears.\n\n\"Listen to me. I'm the one who should be worried sick.\"\n\n\"You? Why?\" Grant asked.\n\n\"Duh! I'm 35 years old! You're young and everything is still tight and hard and amazing, and I'm...35.\"\n\n\"Now you listen,\" he told her firmly. \"You are the most beautiful woman I've ever known. Everything about you is...perfect. From your amazing, soft hair to your beautiful eyes to your amazing smile, and that killer body of yours. All of it. Okay?\"\n\nHappy beyond words, Denise finally smiled and said, \"You just made me feel wonderful.\"\n\nGrant smiled back then said, \"So would you like me to make you feel even more wonderful?\"\n\nShe tried not to laugh as she asked him what he had in mind.\n\nGrant grimaced as he used his right hand to move on top of her again. When the pain subsided he smiled at her then said, \"I think you know exactly what I mean.\"\n\n\"Oh. That!\" Denise said as though it was a big surprise. \"Yes, that is the one thing that could make feel even more wonderful than I already do.\"\n\nAs he entered her again, Denise moaned softly and pulled him close and kissed her young lover as passionately as she could as they made love for the second time.\n\nAfter some additional post-sex cuddling, Denise helped him get in the shower then joined him. She made sure to spend time on each area of his body that had been ravaged by war, her actions letting him know without words that she really did believe it was as beautiful as she'd said.\n\nHe, in turn, did the same with her, but Grant made sure to voice his feelings knowing how much the woman he loved needed to hear those things spoken out loud. But they weren't just words. Grant felt everything he said, and as they dried off together the bond that had formed between them grew stronger and more unbreakable.\n\n\"I'll go get your cane,\" she said as he slowly pulled his clothes back on.\n\n\"No. I...I want to try walking without it.\"\n\n\"Oh, okay. Then I'll help you,\" she said as she sat next to him, put her arm around him and let him she was ready.\n\n\"Uh-uh. I want to...I need...to do this by myself, okay?\"\n\n\"Okay,\" she said without conviction as fears of seeing him in pain or falling welled up inside her.\n\nHe did let her help him stand up, but after that he took one small step at a time on his own. Each one was done putting his right foot forward then painfully dragging the left beside it. Denise agonized over every step, but he made it back to the couch and then insisted on sitting down without her help.\n\n\"You're sweating,\" she told him when he turned around.\n\n\"Yeah. That was tough.\"\n\nShe brought him a hand towel and handed it to him. Grant thanked her then told her he was going to walk a lap around a track in a week.\n\n\"Grant. You...that's...\"\n\nShe knew he knew his body better than her. She also knew he had a mother and didn't need a second one. \n\n\"I believe you,\" she told him.\n\n\"And I'm going to add a lap a day until I can slowly run a lap. And then I'll run one more per day until I can run three miles again.\"\n\n\"Okay,\" Denise told him as she put her arms around him. \"And I'll be there as often as I can.\"\n\n\"I'd like that,\" Grant told her as he pulled her head over onto his shoulder. \"I want to start going to the gym, too. I haven't done any kind of resistance training since a few days before the blast in the makeshift gym we had at our base camp in Afghanistan.\"\n\nEven though he'd lost muscle mass from the time she'd seen him with his shirt off while mowing her yard so long ago, he was still very well defined, and Denise knew he would be even more well-defined in no time.\n\n\"I think I'd like to start working out myself. Not weightlifting but swimming or spinning or maybe even Pilates.\"\n\n\"Okay, but you need to wear a gunny sack and paint one of your front teeth black,\" Grant warned her as seriously as he could before he started laughing.\n\nDenise laughed, too, then said, \"Like you have anything to worry about. I, on the other hand, will be worried sick that every hot girl who sees you is going to try and give you her number.\"\n\n\"You don't need to worry...honey,\" Grant assured her. \"I already have the only girl's number I'm ever going to want.\"\n\nShe smiled then put her head back on his shoulder before sighing and saying, \"Girl. Yeah, right.\"\n\nGrant then pulled back again and in his best Forest Gump voice said, \"You'll always be mah gurl, Jennay. Or would that be...Denise-ay?\"\n\n\"You goof!\" she said as she looked into his eyes before sitting up so she could kiss him again.\n\n\"You are my girl. You know that, right?\" he asked after the kiss ended.\n\n\"Yes. I do know. And I always will be...Forest.\"\n\nGrant went to grab her, but Denise jumped up and got away.\n\n\"Ha! Your legs is crooked as a politician!\" she said, thinking she was also quoting a line from the hit movie.\n\nGrant laughed but didn't tell her it was Forests' spine that was crooked, or that his legs were strong, as strong as anyone had ever seen according to the old country doctor who examined him.\n\nDenise made dinner for them and as they ate, Grant started laying out his plan for getting back to his old self. The best time for them to work out together was before school, so they agreed to meet at 6am each morning and go a nearby gym called 24-Hour Fitness.\n\nIt was around 10pm when Grant left after kissing his new lover again and telling her he'd be back in eight hours.\n\n\"You better be,\" she play threatened before letting him go.\n\nWhen he got home, his dad was in bed, but his mom was waiting up for him.\n\n\"So?\" she asked with a smile when her son walked inside.\n\n\"I had a really good visit with the doctor this morning. In fact, he cleared me to start walking as much as I can whenever I'm ready.\"\n\n\"That's wonderful!\" his mom said. \"That won't be for some time, though, right?\"\n\n\"Oh, no. I'm gonna give it at least...\"\n\nGrant looked at his watch then said, \"Another seven hours or so.\"\n\nHis mom shook her head and asked what he meant. When he told her he was going to the gym the next morning she told him he was crazy.\n\n\"Crazy like a fox!\" he replied with a big smile.\n\nThat smile was also 'intel' for his very aware mother who asked how 'the rest of his day' went.\n\n\"On a scale of 1-10, it was about a twelve.\"\n\n\"You love her, don't you?\" she asked with a twinkle in her eye.\n\n\"I do, Mom.\"\n\n\"Then whenever you're ready to bring her here just let me know a day or so in advance, okay?\"\n\n\"Ah. Dad. Yeah, that's gonna be...interesting, huh?\"\n\n\"He'll be fine, honey. Trust me, okay?\"\n\nGrant gave his mother a hug and told her he did and that he loved her.\n\n\"I love you, too, and I am SO happy to have you home.\"",
        "For the next seven days in a row, the new couple met at 6am during the week at 8 o'clock on the weekend where Grant stayed on Saturday for the first time.\n\nAnd in exactly seven days, after walking a lap more per day with his cane, Grant handed it to his beautiful, older girlfriend near the bleachers at Auburn High School. With her by his side he walked one full, excruciating lap around the track without his walking stick. \n\nHe had tears in eyes the last 50 yards, but he refused to quit until he took the final step across the finish line. When he did, he reached for the chainlink fence to his left for support as the ungodly pounding in left leg felt like it might kill him.\n\n\"You okay?\" Denise asked after giving him a some time to recover.\n\n\"I am,\" he told her as the pain went from unbearable to awful. \n\nHe looked at her then said, \"Tomorrow should be fun.\"\n\n\"Grant? You don't have to walk two laps tomorrow,\" she told him, trying to be sympathetic.\n\n\"Ah, but I do,\" he informed her. \"And I will.\"\n\nAnd he did. And the following day he walked three and then four. Once he was able to walk two miles, he tried gingerly jogging a lap the day after and in spite of the pain, he limped to the finish line with a sense of satisfaction he hadn't had since completing The Crucible in boot camp almost four years earlier. And each and every time, the older woman he loved was with him every painful step of the way.\n\nThat weekend, Denise agreed to go back to the Harmon home to 'meet the parents'. Yes, she'd met them before, but this was different, and her stomach was in knots as they drove to there in spite of Grant's assurance everything would be fine.\n\nHis mom hadn't told his father until Grant left that afternoon, but when he left, he wished her luck with his dad.\n\n\"Wayne? We're having company for dinner tonight,\" she let him know.\n\n\"Oh? What's the occasion?\"\n\n\"Grant has a girlfriend.\"\n\n\"I knew it!\" her husband said. \"That's where he's been spending all of his time.\"\n\n\"Yes. Yes, it is.\"\n\n\"You know anything about her?\" he asked.\n\n\"Oh. A little,\" his wife replied in a nonchalant kind of way.\n\n\"Well? You gonna tell me or do I have to drag it out of you?\" he asked in his harmless growl.\n\n\"Just keep an open mind, okay?\" came the reply.\n\nWayne gave her the eye then asked, \"What? Is she...black or somethin'?\"\n\n\"No, but what if she was?\" his wife asked with no small amount of irritation.\n\n\"Well, I guess that'd be okay,\" her husband replied, the reluctance heavy in his voice.\n\n\"Shame on you, Wayne Harmon!\"\n\n\"Okay. Sorry! So what's the big secret?\"\n\n\"Let me start by saying you've met her. And then...keep an open mind.\"\n\nAfter some initial roaring and a comment like, \"What the hell's the matter with that boy?\" and a quick follow up with, \"No, what the hell is wrong with HER?\" Grant's mother got him to quiet down.\n\n\"You will not be rude. Do you understand me?\" she said waiting until he looked at her.\n\n\"Wayne?\" she said loudly when he didn't answer her.\n\n\"Okay, okay! Fine. I'll bite my tongue. But this is wrong! You here me?\"\n\n\"Honey? Our son is alive. And he loves this woman. I think being nice to her should be a whole lot easier than having someone hand us a folded flag instead. Don't you?\"\n\nHer husband mumbled something inaudible before saying, \"Anything would be better than that.\"\n\n\"Right. So you behave yourself.\"\n\nShe moved a little closer then kissed him and said, \"And who knows? Someone just might get lucky tonight!\"\n\nWayne Harmon was not only on his best behavior, his wife managed to talk him into wearing something other than jeans for the first time in years, and that made her recall how handsome he'd once been and how much she still loved him, his many faults aside. \n\nDenise was on edge the entire evening waiting for the age difference to come up, but to her very pleasant surprise it hadn't. The 'big elephant' in the room was work and more specifically, what Grant planned to do once he was released from active duty.\n\nThey were sitting and drinking a cup of coffee when it came up, and Denise set hers down as Grant got ready to answer his father's question.\n\n\"I don't know yet, Dad.\"\n\n\"What do you mean you don't know? The only thing that makes a lick of sense is you staying right here and working for me!\"\n\nDenise glanced at her younger boyfriend who said to his dad, \"I'm seriously thinking about staying in.\"\n\nIt was hard to decide who looked more shocked. Grant's mother or his father.\n\n\"What? What do you mean by 'staying in'?\" Sylvia asked with the utmost of concern.\n\nBefore he could explain his dad roared.\n\n\"That's the stupidest thing I've ever heard! You damn near got yourself killed, and you want to go back and finish the job? Are you out of your god da...your...cotton-pickin' mind?\"\n\n\"I don't know, Dad. Maybe I am,\" his son replied, not wanting to argue with the woman he loved sitting next to him.\n\n\"You must have. I mean, you come home with a woman twice your age and tell us you're in love with her. She's your teacher, for Christ's sake!\"\n\nWayne didn't even try and curb his language this time, and Sylvia apologized immediately for her husband and demanded he do the same.\n\n\"I'm not apologizing for telling the truth,\" Wayne said, clinging to his stubbornness in spite of the guilt welling up inside of him.\n\nWayne's words hit Denise so hard she couldn't help tearing up. Grant noticed and took her hand.\n\n\"Honey? It's okay. Come on.\"\n\n\"Oh, don't go run away!\" Wayne bellowed, but it was too late. \n\nGrant was on his feet and took Denise's hand. As he got ready to leave he thanked his mom for dinner, as did a very tearful Denise. Sylvia hugged her and told her again how sorry she was, but it did nothing to stop the flow of tears.\n\nAs they drove back to her house, Denise cried so hard it scared Grant.\n\n\"Hey. Don't let my dad get to you.\"\n\n\"He...he hates me,\" she said, speaking in between sobs.\n\n\"No. He doesn't hate you, honey. He's mad at me. He's hurt and he lashed out because...because that's just what he does.\"\n\nGrant expected to go inside with her, but Denise told him she needed to be alone. He gently pressed her to tell him why, and her answer stunned him.\n\n\"I don't know if I can do this.\"\n\n\"What? Denise. You can't...you know how much I love you, so...\"\n\n\"I do. And I love you, too, but I feel so...guilty. And ashamed. I'm not sure I can be part of a family that thinks I'm...that kind of woman.\"\n\nGrant tried to console her and put things in perspective, but she needed time to think, so he gave up trying to persuade her. As he drove home he wondered whether or not this might really be over along with a hundred other thoughts that swirled through his mind.\n\nThings got worse when he opened the door and heard his parents yelling at each other, something he'd never experienced before. The moment they noticed their son was home things got eerily quiet before Sylvia said to her husband, \"You make this right or I will never forgive you.\"\n\nShe walked over to her son, hugged him again, apologized for the third time, then left the room. The look on Wayne's face was one Grant had never seen before. It was a look he couldn't have ever imagined, because the look indicated both fear and remorse.\n\n\"Dad. Can we talk about this?\" Grant said as calmly as he could.\n\n\"No. I don't feel like talking right now,\" the older man said without looking at his son as he also walked out.\n\nNone of those four people slept much that night, and Wayne Harmon's bed was the couch. He was up earlier than normal and both Grant and his mother assumed he was going to work. But Wayne had different plans.\n\nThe knock on her door at 7am startled Denise, and when she saw who was standing just outside of it, she felt sick to her stomach. Even so, she opened the door and said 'good morning'.\n\n\"Good morning,\" a very subdued Wayne Harmon replied. \"May I please come in?\"\n\n\"Okay,\" Denise told him in spite of her misgivings. \"I have coffee ready. Would you like some?\"\n\n\"No thank you. This won't take long,\" he told her, never taking his eyes off the floor in front of him.\n\n\"Then please come in and sit down.\"\n\nWayne sat on the edge of his chair, look a long, deep breath then slowly exhaled. He forced himself to look at the beautiful, younger woman across from him, and when he did, she saw the tears welling up in his eyes.\n\n\"I've never been so ashamed in all my life,\" he began as a tear fell and rolled down the older man's face. \n\nHe blinked a couple of times then continued.\n\n\"I...I never wanted Grant to enlist. I was so afraid something like what happened would happen or that we'd never see him again.\"\n\nThe hardboiled construction man wiped his eyes with the back of his hand then said, \"The night they called us to tell us our son had been seriously hurt, I...nearly threw up. I didn't tell Sylvia because she was worse off than me.\"\n\nDenise's eyes began watering, too, as she sat and listened to this man pour out his heart to her, knowing this couldn't be easy for him.\n\n\"But he was alive. And that kept me goin' until we got some more information. And then he called us, and I knew everything would be okay.\"\n\nWayne used a shirtsleeve to finish drying his eyes which were now clear.\n\n\"I'm not very good at sayin' things, Miss...\"\n\nHe recalled her name and used it.\n\n\"All I want now that my son is still alive is for him to take over my business. But he needs a few years of experience to really learn it. So when he mentioned, you know, stayin' in the Marines, I...I just lost my mind.\"\n\nHe looked down for a moment then looked back at Denise.\n\n\"Worst of all, I took it out on you, and you don't deserve that. I can't say I understand this, but I know my son loves you. And...and well, it seems pretty obvious that you love him, too.\"\n\n\"I do,\" Denise replied very quietly.\n\nWayne tried to smile but it didn't really work even though Denise knew what he was doing.\n\n\"I...I just wanted to say two things. First, I am as sorry as sorry can be.\"\n\nHe fought off getting emotional again then, with all the sincerity he could muster, said, \"If my son loves you, then that's good enough for me. And if you two want to get married somewhere down the road, I'd be happy to welcome you to the family.\"\n\nThe tears that had been welling up started falling as Denise stood up and walked over to him with her arms held out. Wayne stood up and not only hugged her, he squeezed her so hard she could barely breath.\n\n\"Sorry!\" he told her when he heard her gasp.\n\n\"It's fine, Wayne,\" Denise replied with a warm smile when he let go. \"And thank you.\"\n\n\"No. Thank you for even letting me come in and at least try and pull my foot out of my big mouth,\" Wayne said as he looked down at the floor again.\n\n\"You sure you don't want some coffee?\" she asked.\n\n\"You know what? I really could use another cup. If you don't mind.\"\n\nDenise sat and talked with him for a good 20 minutes, and by the time she left, she was not only no longer hurt, she realized she really liked this gruff man with the very soft heart. She hugged him again before he left and thanked him for stopping by.\n\nAs they walked out to his truck, Grant pulled up in his mother's car. The smile on his face said it all.\n\n\"Mornin', Dad,\" he said as though he expected to find his father there.\n\n\"Mornin', buddy,\" his dad replied. \"I uh, I just wanted to say you got yourself a pretty amazin' woman there.\"\n\nDenise smiled at him when he looked her way, and Grant told him he couldn't agree more.\n\n\"Well, I should be gettin' to work, so I'll leave you two lovebirds to do whatever young folks in love do these days,\" Wayne said as he winked at his son.\n\n\"Dad?\" Grant said.\n\n\"Yeah?\"\n\nWhen Grant hugged his dad it surprised him to the point that it nearly made him tear up again.\n\n\"Okay. Okay. Enough of that!\" he said as though the hug was Kryptonite.\n\n\"And Dad? Thanks.\"\n\nAs he walked away Denise took Grant's hand.\n\n\"Your father's a good man,\" she said.\n\n\"Yes he is,\" Grant agreed before turning to look at her. \"Are we okay?\"\n\n\"Yes. More than okay.\"\n\n\"Yeah?\"\n\n\"Uh-huh. Definitely.\"\n\n\"How 'okay'?\" Grant asked, one eyebrow raised high.\n\n\"Why don't you come inside and I'll show you?\" she told him with a little flip of her head.\n\n\"Oh, wow. Okay. That sounds...great!\"\n\nAs Denise lay in her lover's arms an hour or so later, he said, \"I think I decided what I want to do.\"\n\n\"Oh?\"\n\n\"Uh-huh.\"\n\n\"And?\"\n\nGrant rolled over and looked at her then said, \"I can't ask you to follow me around the world and be alone for months at time when I'm gone.\"\n\n\"Grant, all I want is for you to be happy and do what makes you happy. You know that, right?\"\n\n\"I do. And that only makes me love you even more.\"\n\nAs Denise smiled, he ran the back of his hand along her cheek then said, \"I want to stay here and work for my dad. And I want...\"\n\n\"Yes?\" she asked as her heart pounded with anticipation.\n\n\"I want to marry you.\"\n\n\"Is that a statement or...something else?\" she asked with a little smile.\n\n\"I had every intention of waiting a few months then picking the perfect time and place to ask you, but I've loved you for four years, and so...I'm asking you if you will. Marry me.\"\n\n\"I've loved you for four years, too, Grant Harmon. And there's no need to wait for a better time or place, because right here with you is as perfect as perfect could be.\"\n\n\"So you'll marry me?\" he asked just to be sure.\n\n\"Of course I'll marry you. And I'll also love you every day of your life,\" Denise promised.\n\n\"Yeah?\"\n\n\"Yes.\"\n\nHe rolled over on top of her then said, \"My side didn't hurt that time. I feel like I could run a marathon!\"\n\n\"Maybe you start by making love to me again and then we'll go see if we can slowly jog one more lap together tomorrow instead.\"\n\n\"As long as you're by my side, I'm game for anything,\" he told her as he looked deeply into her eyes.\n\n\"I will always be by your side, honey. Always.\"\n\n\"I love you so much,\" Grant told her as she pulled him back inside of her.\n\n\"I know,\" she replied with another big smile. \"I read your letter, remember?\"\n\n*****\n\nOne year later, Mrs. Grant Harmon, who was almost 37 years old, gave birth to a beautiful baby girl they named Allison Anne Harmon. \n\nWhile everyone was thrilled with the new addition to the Harmon clan, no one doted more on little Allie than her grandfather, who'd forgotten all about having a grandson to take fishing. He was smitten in the worst way and as wrapped as any man could be. Well, with the possible exception of her father, Grant, who was working hard to take over the family business one day, and who was happily wrapped around another girl's finger\u2014her beautiful mother, Denise."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-letter-39"
}