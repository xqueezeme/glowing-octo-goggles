{
    "title": "The Shack: The Guardians",
    "pages": [
        "This story is one of the Tales from The Shack, and is posted In LW to keep it with the others. While this works fine as a standalone, it is a follow on to the story \"Monster.\" I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x and for editing and beta reading, and to Ckcppr and No1specific for beta reading. Any remaining errors are entirely mine -- probably added after their assistance. Thanks to everyone for the encouragement and support. \n\n***** \n\nThe Shack: The Guardians \n\nI'd heard the stories all my life. Kane, Pele, Maui, Kamapua'a; heroes and villains, impossibly beautiful women, tricksters, monsters and demons. \n\nIt's part of growing up in the Hawaiian tradition, part of the weave of life and the ocean. They'd always been far away though; from a distant time and place, lost in the years and the encroachment of the modern world. \n\nThey'd always been distant. Distant, that is, until I found myself meeting some of those things of legend, landlocked, on the mainland; far from the ocean, far from where I'd ever have expected to hear of them, much less meet them. \n\n### \n\nAs soon as the strains of Christina Aguilera's \"Dirrty\" started, I drifted over to the wildest part of the dance floor. Just as Christina growled \"sweatin' til my clothes come off,\" I raised a hand without really looking and snagged PeeGee's little black overshirt out of the air, then glanced to make sure she still had some kind of clothes on. \n\nOne tiny silver bandeau top, one black microskirt, her usual shiny dancing boots -- silver this time - and a wicked grin and wink as she spun back into the crowd. After a year, it was pretty much a ritual. She'd find me when we closed the club and retrieve her shirt. I stuffed it into a cargo pocket. It didn't take up much room. \n\nSylvia, the \"bar boss,\" was laughing and shaking her head, looking over the rail to the dance floor. \n\nI scowled down at her. \"What?\" \n\nShe tried to suppress her laughter, and looked up at me. I pretty much towered over her -- hell, I pretty much tower over everything. I'm just an inch over six and a half feet tall, and just a hair under 300 pounds if you catch me on the right side of that last piece of steak. \n\nThat makes me a little small by Mom's family standards. My two older brothers have me by a good two inches of height. Still, I've taken care of myself and they've run to fat, even though I'm the gimped up one. \n\nMy dad was a Ha'Ole, but my mom is pure native Hawaiian. \n\nDespite being a foot and a half shorter than me, Syl failed to look impressed. \"I think she loves you.\" \n\n\"PeeGee loves everyone. Hell, Syl, she thinks Molly and E are part of a balanced daily breakfast.\" \n\nWe did our best to keep the drugs out of the club -- keeping a license was tough enough without a bunch of drug busts. The Crimson had a reputation for being pretty clean and we tried to keep it that way. We'd been having more a problem lately. The police had been hammering a lot of the mid-level drug pushers and while that sounds great, for us it made a power vacuum. There were some rumors that Anthony Montage -- \"Tony Montana\" -- was trying to assert control over some of the clubs to use for distribution. \n\nI'd been stopping his pushers at the door on a regular basis lately, so that rumor was probably true. Not that I was too worried about that, I'm not really afraid of much. I grew up hunting kaku -- barracuda -- and ran into far more than my share of sharks, even the big man-eaters, the Niuhi. \n\nTourists that bother to learn anything at all usually think the only word for shark is mano -- but like the Inuit have so many words for snow and ice, we have different words for different classes of sharks. Mano are the smaller, less dangerous sharks; Niuhi are the true man-killers, the big Tigers and Great Whites. Once you've come face to face with a few of those, not very much can scare you. \n\nIn any case, while PeeGee wasn't exactly at the top of my list of potential would-be crime lords, she was always obviously already sailing on E before she ever hit the door. I sporadically checked her purse just to make sure; she cheerfully acquiesced, then crossed her eyes and stuck her tongue out at me when I didn't find anything. \n\nSylvia grinned. \"Can't argue that. Still, she trusts you, so keep an eye on her.\" \n\nThat too, right down to Sylvia's reminder, was ritual. PeeGee -- short for \"Party Girl\" was sort of an unofficial club mascot. She was an incredible, energetic dancer who spent nearly all her time on the floor. She couldn't stand it if people looked down or depressed. From her driver's license, her real name was Danni - another one of those \"i with a heart over it\" girls - and she was really pure positive energy at the club. She'd gleefully rush a table full of morose introverts and drag them out to the floor one by one. Men, women, whatever. She was a one woman party. \n\nShe'd once mentioned that she taught at a dance studio and it showed --she obviously had training and the endurance of a marathon runner. Tall and slender, runway model pretty, she was also the dirtiest dancer I'd ever seen. Dirty enough that I actually had to give her warnings, which she cheerfully apologized for with doe-eyes, fluttering lashes and a mock sad-face pout. Then she'd bring it down a notch. For a little while anyway. \n\nPeeGee being PeeGee, she was welcome at every table. I'd had to lift her down off of more than few of them. We tried to keep an eye on her; she was everybody's friend, but she rarely had a wing chick or a consistent group of friends, and that made her a little vulnerable, so we sort of adopted her and made sure she made it into a taxi when the club shut down. \n\nI glanced back at her and could see she was giving impromptu \"grinding lessons\" to a terribly embarrassed, slightly heavy set girl who must have looked morose enough to become her latest prey. I watched long enough to make sure PeeGee's remaining clothes stayed mostly on, and to see her victim finally give in and start dancing with abandon. PeeGee just has that effect on people. \n\nSyl pointed back towards the back of the club. \"The loading dock damn alarm is going off again. Nick says the company rep can't figure out what's going on with it.\" \n\nI shrugged. \"It's been doing this since I got here, so that's at least a year. I think that tech is down here at least once a month. I'll check it out.\" \n\nI carefully scanned the main dance floor for any problems - it's my club on Friday and Saturday nights. Well, mine and PeeGee's. I don't think she's ever missed a Friday or Saturday, ever. At least not since I started as security at the Crimson, a huge, loud, pulse pounding club in the center of the city. It'd started life as a brewery over one hundred years ago. \n\nI started working there in my second to last year of Law School, but I only really worked two days a week most of the time, as the one man riot squad at the club. Still, I took my job damned seriously. The other guys handle most of the routine stuff, but when it really hit the fan, I was on. \n\nAfter an encounter with me, most of the real problem children either reconsidered their evil ways or moved the hell on. I'd played football all thorough college -- not good enough to even dream about trying out for pro teams but trying to fight me was just a bad idea. Most martial arts aren't really suitable for guys my size, but I'd boxed growing up, and even studied Sumo for a while as a kid -- Sumo is pretty popular in Hawaii. \n\nReally though, there are weight class restrictions in combat sports for a reason, and there just aren't many people in my weight class. Besides, law school is a consolation career for me. I'd been a police officer for a whole two years after college, before I took a bullet through the knee and had to make another life choice. So I have some pretty good aikido-type grips-and-throws training to go with everything else. \n\nThe floor looked pretty peaceful, so I nodded to Ron working security on the balcony \"top deck\" to keep an eye on things for me -- he had a pretty good view from there. \n\nI warily skirted the dance floor, doing my best to discreetly sneak by -- not exactly the easiest feat for a guy my size. Not that it mattered, I didn't see my bane approaching as usual. I could never figure out how she did that. \n\nA stinging slap on my butt made me spin back around -- PeeGee was grinning ruefully, shaking her hand like it was broken. Her latest victim was standing in shock with her hand over her mouth, wide-eyed, along with half a dozen other women. \n\n\"Do I need to throw you out for a week, PeeGee? You can't touch the security or you get banned. You know the rules.\" \n\n\"It was an accident. Honest!\" \n\n\"Like the last ten times?\" \n\nShe wasn't even trying to conceal her smirk. \"Only ten? Oh, I mean 'yes.' I'm just really clumsy.\" \n\nThat was complete crap -- anybody who'd ever seen her dance knew that. \n\n\"Behave, PeeGee.\" I gave her my best police-glare. It was completely wasted on her. \n\n\"I will, I promise.\" \n\nAs I turned and headed back towards the loading dock, shaking my head, I could hear PeeGee's stage whisper. \n\n\"Careful girls, you could break a tooth on that ass!\" \n\nThat was answered with slightly inebriated howls of female laughter. \n\nPeeGee was safe and she knew it. Around the club, I'm viewed as sort of the patron guardian saint of single girls. That's no help at all when you're in the dating scene yourself. It's a permanent invitation to the \"big brother\" zone. \n\nNot that dating has ever been all that easy for me. I heard somewhere that \"androgyny\" is the in thing with women these days and that sure as hell puts me outside the mainstream. There seem to be two kinds of girls in the world -- the ones that like guys big and dumb, and the ones that like guys who are normal size and smart. Big and smart isn't the combination most of them are looking for. Hook-ups aren't too hard, but relationships with the kind of girls normally attracted to guys that look like me don't tend to work well. \n\nThose girls are usually from that \"hot-crazy\" zone trifecta -- redheads, strippers and girls named Tiffani. And while that can be fun, I prefer women who can think and don't spell their names with \"i\"s with hearts over them. And who aren't likely to go all scissor-stabby bunny-boiling crazy. \n\nPeeGee always struck me as flighty, and maybe a little ditzy, rather than dangerous or obsessive. She was certainly pretty enough, but it's also against the club rules for workers to pick up customers. \n\nSo PeeGee, for all her flirting, knew she was off limits. That's no doubt why she did it. \n\nI'd only had a few serious dates in the last year -- I'd taken out the leader of my four person study group a couple times. \n\nI'd stayed out of the lead in my main study group; when a big guy like me tries to lead, they usually end up being viewed as a bully and an asshole. A sparkly, smart little blonde named Abby quickly assumed command -- despite being smurfette-cute she was laser-focused, fully committed to success, and a natural born leader. She kind of amazed me; she had to fight twice as hard to get taken seriously, and worked four times as hard as anyone. The other guy in the group, Vince, listened to her because he was hoping to get into her pants, while the other woman, Jennifer, was an introvert with an eye on tax law. She was about one solid step from being a shut-in, and was happy to let anyone else lead the group. As a group, we actually hit it off pretty well, and stayed in touch even when we weren't studying. \n\nThe only time I'd seen her falter was when her father had a stroke, then died after six weeks in the hospital, just as he seemed to be getting better. It'd happened over summer break, so she hadn't lost her place in the program. When she'd returned, she'd buckled down even more determined and forced herself to stay upbeat. \n\nTough, funny, smart and cute as hell with a great personality, she was pretty much a dream-girl and it was a huge disappointment to me that we just didn't click the right way. For whatever reason, it was like taking a sister out on a date. Abby and I made damn good friends; we just didn't have the right chemistry. It was like finding a perfect pearl you couldn't keep. I think she was as disappointed as I was. \n\nAt least we recognized it in time to keep our friendship. \n\nAfter Abby, as far as I was concerned, any serious dating was going to be put off until after I passed the Bar. \n\nOf course, when I had time -- a rare commodity for most law students -- there were always the women who ended their names with \"i.\" I had a lot more spare time than the other students for a few reasons. I'd always been good at school, and there's a lot of memorization at law school and I'm really good at that. Mom says it's because of the Hawaiian tradition of oral history, but both my older brothers barely passed high school, so I'm not so sure about that. \n\nOther than my memory, I had a couple other advantages. I was a little older than the other students and I already had a bit of practice in some aspects of the law -- you don't get to be a beat cop very long without learning a thing or two about how the law, lawyers and especially prosecutors work. And you can end up with a lot of courtroom time in very short order. \n\nThose advantages gave me a lot more spare time than my peers, and once I'd recovered pretty well from being shot, I started looking for a job, mostly to prevent boredom, and buy a little better quality food -- it takes a hell of a lot of lean protein and greens to fuel me -- If I take in much in the way of carbs, I'll end up like my brothers, so I eat lean as hell and hit the gym like a religion. \n\nBy the time I reset the alarm and got back to my normal post, I could feel a little bit of a change in the floor. Quieter, less energy -- and that usually meant fewer problems. \n\nWhatever they tell you, good security takes people. And good security is critical in a large club in a big city. You can do a lot with cameras and alarms, but they don't make decisions. They can help settle guilt after something has happened, but don't do anything to stop the problem before it gets out of hand. They also malfunction -- our loading dock alarm was a great example of that. \n\nMost importantly, real people can sense problems before they really manifest, before they are actually problems. \n\nThe floor was still quiet when PeeGee came up followed by a small mob of women. \n\n\"Hey Big Guy.\" \n\n\"Working here, PeeGee.\" \n\n\"I know, but I've been telling the girls here about your tats.\" \n\nI sighed, not even bothering to cover it. PeeGee's weird obsession with my tattoos was another long running game. And once she was locked on she wouldn't let go until I cooperated. \n\n\"Why PeeGee?\" \n\n\"Because they're cool.\" She turned to her followers. \"His mom is real Hawaiian, those tattoos were done old-school, hand tapped into his skin with wood tools.\" \n\nI began rolling up my right sleeve. I learned when it was easier to go along with PeeGee. \"It's called kakua, and some of the tools are made from animal tusks. Hurts like hell.\" \n\nOne of the women leaned over and looked at the pattern. \"It's all triangles. Really neat, decorative triangles, but triangles. Why would you choose that?\" \n\n\"They're shark teeth. Rows and rows and circles and swirls of shark teeth.\" PeeGee grinned like a shark herself. \"Goes all the way up his arm, half his torso and down his leg. Even covers one cheek of that rock hard ass of his.\" She rolled her eyes like a teenager and gave an exasperated sigh. \"Not that he'll show that part to me.\" \n\nI scowled at PeeGee, then looked over at her friend. \"I didn't really choose them, the artist decides what you get, based on who you are and how he sees you. The sharks' teeth are a kind of protection.\" \n\nThe girl she'd been grinding with earlier reached over and timidly touched the back of my wrist. \"They protect you? Like bullet proof?\" \n\nI shook my head. \"Definitely not bullet proof, I can vouch for that. I used to patrol the old slaughterhouse district, the Dog Run, when I was cop. Messed up kid shot me. Three times in the back -- the vest stopped those, but he put bullet through my knee. That's why I have to wear the brace; took the insurance money and hobbled over to law school.\" \n\n\"What did you do to the guy that shot you?\" Her voice was hushed, probably expecting some kind of epic fight story. \n\n\"I didn't do a damn thing except try catch my breath and try to stop the bleeding. Getting shot hurts a lot. The guy who shot me ran from my partner and went right in front of a city bus.\" Every time I heard the hiss of bus brakes, I had a flash of watching the strung-out seventeen year old kid folding under the bumper of that bus. \n\n\"So maybe the tattoos got vengeance for you?\" \n\nPeeGee shook her head. \"They don't work that way, Cassie.\" I had no idea how PeeGee knew that, but she was right. \n\nI studied the patterns on my wrist for a second. \"They don't. It's hard to explain, but the tattoos kind of 'tell' sharks that we have kinship, that we have an agreement. Tell them that I belong there in the ocean.\" \n\nCassie looked puzzled. She obviously didn't get it and probably never would. People don't understand the ocean. The bright colors of plants and animals fool people, make them think it's a world of emotion and feeling. Like it's some kind of Disney-esque undersea rainforest full of funny, clever, humorous animals. \n\nIt's not. \n\nIt's a completely alien world; mammals and birds have emotions. Anger, love, sadness, all those feelings we share with our fellow air breathers are completely out of place in the ocean. We have few fellow travelers out there; the dolphins and whales, maybe the octopus and squid. But it's really a coldly rational world. Air doesn't belong, much less emotion. \n\nSharks and fish don't get angry, and their sense of self-preservation isn't the same as fear. The logic of survival rules everything. Kill, eat, avoid death, breed. \n\nIt's impossible to explain to anyone who hasn't been there, lived half on land and half in water. \n\nCassie shrugged. \"That's cool.\" Although to be honest, she didn't seem like she meant it. \n\nPeeGee sent me a secretive smile and roped her temporary posse back on to the dance floor. I went back to scanning the crowd -- the energy was building back up as the temporary calm passed. A glance at the clock told me why. It was nine o'clock; the \"dinner\" part of \"dinner and dancing\" was coming to an end, so we were starting that heavy rush of customers. \n\nIt wasn't long before Ron signaled to me that something was building on the floor -- by the time I got there, a full blown shouting and shoving match was underway. We always tried to have back up, but if I waited too long, this could blow up into a real brawl, so I waded on in and separated the two at the center of everything. \n\n\"One chance: back off and stay away from each other or you're out.\" \n\nEach began immediately blaming the other for the commotion. \n\n\"Shut up. If I wanted to hear this kind of shit, I'd be teaching preschool.\" \n\nThe glared at each other from either side of me, but stayed back just enough. Just as they started to back off, something slammed into my back, knocking me forward. \n\nI caught myself and spun around. \n\n\"sorrysorrysorry...\" PeeGee was detangling herself from a heap, stepping all over a guy who was curled up gripping an obviously broken wrist. \n\nShe managed to step away from him and stop stomping all over him for a minute and stared at me wide eyed. \"It wasn't my fault! I was just dancing and he ran right into me!\" \n\nHer friend Cassie was fiercely backing her up and nobody else seemed to have an opinion. The two idiots who started the whole thing faded out before PeeGee even had a chance to finish. ",
        "Ron reached me first since Nick had been back in the office when everything happened, almost falling himself when a pen rolled under his foot. He grabbed the pen and shoved it into his cargo pocket. \n\nNick and Ron helped me get the guy off the floor, then we sat him down while Syl called the ambulance. Ron headed back upstairs, while I walked back to my usual station with Nick, and explained how everything had gone down. \n\n\"PeeGee said he ran into her, and that girl, Cassie, backed her up. But, hell, Ron stepped on a pen or something so he could have slipped on that too.\" \n\nNick grimaced. \"I'd better check with Ron. This could be technically our fault. I'll have to get a statement from the guy and see if he mentions slipping on something.\" \n\n\"Yeah I remember that girl claiming she busted her tailbone and hurt her back stepping on an ice cube. Good thing the cameras caught her faking it.\" \n\nHe nodded. \"That's why the insurance company insists we have them, it's the only way to cut down on shit like that.\" \n\nNick glanced back over to our casualty. Or where our casualty had been. The chair where we'd left him was clearly empty. \n\n\"Idiot. I'll see if Syl knows where he went.\" \n\nIt turned out he'd disappeared without a trace. We talked it over until Ron came springing back down. \n\nHe pulled the \"pen\" out of his pocket. \"It's some kind of plastic spike.\" \n\nNick examined it. \"It's a cut down self-defense spike. Polymer of some kind. They aren't great tools, and they're pretty much only useful for stabbing someone. Walk right through our metal detector with one. We need to look over that video as soon as we shut down tonight.\" \n\nFrom the video, it was obvious I was being set up, the two guys ''arguing'' were deliberately holding my attention so the third guy could stab me. PeeGee's stumbling arrival was the only thing that saved my ass from a trip to the hospital or the morgue. \n\nNick scowled at the video. \"You never had a run in with these assholes?\" \n\n\"Never saw them before today.\" \n\nRon, it turned out, recognized one of the two distractions as having come in on Wednesday. Nick filed a report, but there wasn't much to go on. \n\nI waited and sent a snip of the video to my email after Nick went back out to talk with Syl. I'd been targeted and I had some friends who might be able to help me figure out why. \n\n### \n\nAs soon as I got home, I sent the video on to Kelly. She'd been my partner, a patrol officer with over 10 years on the street. After I'd had to leave, she'd finally taken the test to become a detective and moved over into Vice. It certainly wasn't as glorious as Homicide, but she'd worked the Dog Run for years before I joined the force and knew more about the flow of drugs and prostitution than anyone, so she was a damn good fit for it. \n\nMaybe she could put two and two together for me. \n\nI'd just finished showering, when someone rung up from the front door of the building. I grabbed a lavalava -- a man's waist wrap used across Polynesia -- and pulled it around me as I keyed the intercom. \n\n\"Hey, Big Guy, it's me. Buzz me up.\" \n\n\"PeeGee? What are you doing here?\" \n\n\"Freezing in the rain out here. I don't have a coat, let me in.\" \n\nA minute later she was standing at my door. I checked through the peephole in the door -- I'm a big guy but if I learned anything from being shot, it was not to be overconfident. Besides, the incident at the Crimson had me a little guarded. She was still in her club clothes, soaked and shivering. \n\nI let her in. \"What are you doing?\" \n\n\"Wondering if you're gonna keep my shirt. It's really cute, but I think it's a little small for you.\" \n\n\"Shit. I'm sorry\" She followed me I walked over to my hamper and fished out my cargo pants with her scrap of clothing. \n\nShe took it from me with a quirk of a smile, then turned serious. \"I wanted to apologize for causing trouble at the club today.\" \n\n\"Look, uh, Danni, it's no big deal. It wasn't your fault and those assholes may have been up to something.\" \n\nShe grinned when I said \"Danni\"- it was probably the first time I'd ever called her by her given name. \n\n\"So I don't need to apologize?\" \n\n\"No. We're good.\" \n\nShe glanced around. \"Nice place. I love the ocean theme.\" She seemed serious. \n\n\"I miss home sometimes. Some day I plan to head back to Hawaii, just not sure how that will work yet.\" \n\nShe hadn't said a word about the lavalava, which was a little odd considering her how much of a smart ass she usually was. It was basically a red skirt trimmed with orange and yellow flowers; it pretty much screamed for a comment from someone who didn't know what it was. \n\nShe picked up a picture of me with my mom and brothers. \"This is your family?\" \n\n\"Yeah, that's my mom and my older brothers.\" \n\n\"I like that, family is kind of a big deal to me.\" \n\n\"Me too. A lot of the time family is all you have.\" \n\nShe looked up at me from under a raised eyebrow. \"You're sure you don't blame me for the trouble at the club?\" \n\n\"I'm sure, I think you may have kept it from getting a whole lot `worse.\" \n\n\"Okay. That just leaves one thing.\" \n\n\"What?\" \n\n\"I'm not leaving until I see the rest of those tattoos.\" \n\n\"Danni, I'm not sure this is a good idea. The rules...\" \n\nShe smiled, stepping toward me and giving me a surprisingly hard shove back toward the open door of the bedroom. \"You didn't pick me up at the club, so you're not breaking the rules. I haven't gotten laid in six months and I know monks that have a better social life than you do. This is just some fun. No strings attached.\" \n\nFrom the look in her eye, she obviously wasn't going to take no for an answer. \n\nNot that I was saying no... \n\n### \n\nI woke up a bit confused -- the smell of fresh coffee was filling the house. And waking up to that smell is a bit unusual when you don't have a programmable coffee machine. \n\nI found Danni half curled up in my one of my big recliners. Reading a book, sipping coffee, and wearing one of my dark green \"Local Motion Hawaii\" T-shirts. On her, it went to her knees, even if she was pretty tall for a woman. And despite the fact that I would have always assumed she was a latte girl, it looked like she was drinking her coffee black. \n\nShe looked up when she heard me come in. \"You need to wear a warning label.\" \n\nFor a second I was a little concerned I'd been a little too rough. I'm usually pretty cautious with women, guys my size have to be, but she'd made it clear that she wasn't breakable. If anything, she seemed to be encouraging me in the other direction. She'd been even stronger than I expected from her dancing; a lithe, energetic bundle of rattan and whipcord. And very aggressive. Some girls like big guys because they have a submissive streak, but there wasn't even a hint of that with her. \n\nShe must have somehow caught my concern. She shook her head and gave a wry, humorous grimace. \"Big guys like you aren't usually 'in proportion', if you know what I mean. A girl could use a little warning so she can mentally prepare. Not that I'm complaining.\" \n\n\"Well, I'm glad I'm up to your standards.\" \n\n\"I think we made up a whole new set of standards last night.\" She smiled, a soft, bemused smile. \n\nI walked over and poured myself a cup of coffee. \"You surprised the hell out of me.\" \n\nShe shrugged, looking back down at the book for a second. \"It was a spur of the moment thing. I realized you had my shirt and decided to chase you down.\" \n\n\"How'd you know where I live?\" \n\n\"I asked Nick.\" \n\nThat meant Nick would know, but it was too late to worry about that. He wouldn't be stupid enough to think she just gone after a shirt at 2AM. Hopefully Danni's assessment of the rules was good enough for Nick too. \n\nShe caught my expression. \"He's cool with it Derek. I told him that I wasn't just chasing the shirt.\" \n\nI'd probably catch shit over that from Nick, but it'd be worth it. I pulled the ottoman over from the couch. \"What are you reading?\" \n\nShe held her book up. \"He's hilarious.\" \n\nI damn near dropped my coffee and shifted to cover my surprise. She was reading my copy of \"Scalia Dissents.\" I'd never really pictured her reading anything, but Party Girl reading the written dissenting opinions of a Supreme Court Justice was so surreal I wondered if I was still dreaming. \"Love him or hate him, he's never boring.\" \n\nShe sat up a little. \"I've read it before, but some parts never get old.\" \n\nI sipped my coffee to cover my shock at the hidden depths of Party Girl. Then tasted the coffee again. \"You found my Kona.\" \n\n\"I figured you'd think I was worth it.\" \n\nThere was absolutely no way to argue that without sounding like a complete ass, and besides, if I'd have gotten up first, I would have fixed the same thing. Last night was definitely worth it. \"No argument from me.\" \n\nShe flashed a broad smile then carefully closed the book and put it in her lap. \"So what are you doing on your day off?\" \n\n\"I didn't really plan anything, I should probably read over a couple things tonight before class tomorrow.\" \n\n\"You want to meet me down on the canal and get lunch? I have to run by home; I showered, but I'm not going to wander the Canal Walk in either your t-shirt or my club clothes.\" She stopped suddenly. \"Unless you have another lavalava? I could just wear it as a sarong.\" \n\nI walked back into my room and dug one out -- a watery looking blue and green batik style with sea turtles on it - and took it back out to her. \n\n\"You have to be careful with it, my mom picked this one for me to remind me of home.\" \n\nShe stood up and took it almost reverently. \"It's gorgeous.\" She put it gently in the chair, whipped the t-shirt off and wrapped herself in it expertly. \"See, fits like it was made for me.\" \n\nIt really did fit, and somehow the color was perfect for her, even if it was a far cry from the metallics and electric neon colors I normally saw her in. \n\nShe stalked over into the bathroom to admire herself in the mirror. \"I'll have to be careful until we get down to the Walk, but I can grab a pair of flip-flops at that little drug store -- the one on the corner of 12<sup>th</sup>, it's probably only a couple blocks from here.\" \n\nI showered and changed into shorts and t-shirt, then changed the t-shirt for a nicer blue one that kind of matched the sarong for some reason. \n\nWe walked down towards the canal. She refused to wear her boots, even to get to the drug store, and for about half a block she picked her way barefoot, watching for glass and rocks. \n\n\"Hold on Danni.\" \n\nI gripped her slender waist and hoisted her up sit on my shoulder. She gave a short gasp, and then easily balanced herself. She sighed. \"I could get used to this.\" \n\nI'll admit I did it to impress her -- I didn't get many chances to show off that didn't involve cracking heads at the club. I walked the two blocks to the drug store while we talked about nothing much in particular. The occasional passerby looked at us as if we were nuts. \n\nAs I set her down outside the drug store, an old grey-haired woman looked at us and laughed. She looked at Danni. \"That one's a keeper, girl. You don't even need a car.\" \n\nDanni snickered. \"I know, but I have to pay parking fees wherever we go!\" \n\nI shook my head. \"Try to be a nice guy...\" \n\nShe reached over and put a hand on my arm, looking a bit serious. \"You're always a nice guy Derek, I've known you for over a year now. That's why I showed up last night. Too many assholes out there.\" \n\n\"Well, I'm glad I was at the top of your list.\" \n\n\"It's not exactly a long list. Like I said, there are way too many assholes out there.\" She plucked a pair of blue flip flops off the rack and pulled a couple bills out of her tiny silver purse. \"Where do you want to eat?\" \n\n\"The Thai place, unless you don't like Thai food.\" \n\nShe lit up. \"I love Thai food, especially spicy noodles, Pad Woon Sen.\" \n\nShe really did -- while I ate red curry, she powered through her huge plate of the noodles. \n\nShe grinned when she caught me looking at her. \"This is comfort food for me. We have a family friend who fixes the best spicy noodles and I've been eating it all my life.\" \n\nWe talked aimlessly for a good hour, first at the restaurant, then walking up and down the Canal Walk. Danni, turned out, really was big on family. She loved her mom and her brothers, but she was a self-admitted \"Daddy's girl.\" \n\n\"He's always been about us kids, all the way. Everybody else's dad was too busy, or not interested. Dad made every lacrosse and baseball game. He made time for us, no matter what.\" \n\n\"He run off your boyfriends?\" \n\nThere was flicker of something in her eyes, but whatever it was, it was gone almost instantly. \"I think my brothers scared most of them off, but Dad was hit by a roadside bomb in the Army and he's got some pretty impressive scars that scare the hell out of most of the boys. I thought I'd never get asked to Prom.\" \n\n\"Seriously? As pretty as you are? That's hard to believe.\" \n\n\"My Dad's nickname was Monster before he got blown up. He can be pretty scary.\" \n\n\"Well, I'd have asked you out.\" \n\n\"Says the guy who wouldn't risk getting fired after I flirted with him for almost a year.\" \n\n\"Maybe I was waiting for the right moment?\" \n\nShe smiled, but it faded almost instantly. \"I like you Derek, but this is just fun, okay? I'm not... I can't get into a real relationship right now.\" \n\nEven though I'd never thought of PeeGee as \"relationship material,\" that just felt wrong to me. But she seemed deadly serious about it. \"That's okay, I wasn't looking for anything serious until I pass the Bar anyway.\" \n\nHer smile seemed a little relieved, but kind of weak at the same time. \"So what are your plans?\" \n\n\"I'm taking the Bar, but I really want to eventually specialize in Maritime Law, get back to Hawaii if I can.\" \n\n\"I love Hawaii, but I spent a lot of time growing up in Fiji. Well, near Fiji anyway.\" \n\nI couldn't help it, I started laughing. \n\n\"What?\" \n\n\"I've been trying to figure out why you knew about the tattoos and knew what a lavalava was.\" \n\n\"I can do most of the dances too. Fijian, Tahitian, and Hawaiian. I like the story telling of the Hawaiian Hula, but there's nothing like the Fijian or Tahitian dances to tone a girl's abs.\" \n\n\"That solves one mystery. It explains those jackhammer hip movements you used last night.\" \n\n\"I'm pretty sure that's the whole point of those kinds of dances.\" \n\n\"Do you teach those?\" \n\n\"I'd like to, I'm trying to talk the owners of the studio into letting me teach a ''World Dance'' class. Polynesia, Africa, Asia, that sort of stuff. We already do a big Latin class for adults, but there are a lot of other cool ones out there that people might enjoy.\" \n\n\"Where'd you learn all of them? Other than the Hulas?\" \n\n\"I actually have a degree in Dance. And yes, it's a real degree.\" She gave a slight scowl. \n\nI held my hands up defensively. \"Hey, I got the benefit it. I'm a believer.\" \n\n\"Sorry, I get a lot of flak for it.\" \n\n\"So are you staying with the studio? Dancing professionally?\" \n\n\"I like teaching kids, but trying to keep a straight face while some crazed soccer mom is planning her five year old daughter's career in the Bolshoi Ballet is pretty tough. Especially when Mommy's little wonderchild is standing behind her with her finger in her nose to the last knuckle. Not quite sure what I want to do in the long run. Dancers are pretty much a dime a dozen, and unless you get on with a top tier company, the pay sucks nearly as badly as the studio. I'm just not sure where I'm going to go from here. I'm working on a Master's so when I finish that, maybe I'll have a better idea.\" \n\nWe spent the rest of the afternoon just kicking around along the Canal, talking about pretty much anything. It was amazing how much I'd underestimated her over the last year. \n\nWe stayed a little later than I planned and as I opened the door to my apartment Danni pushed past me, handing me the lavalava, wearing just flip flops and a wicked \"PeeGee\" grin. \"Ever see a naked Tahitian Hula?\" \n\nI never did get around to re-reading the case law for the next day. Danni didn't leave until almost 5:30 in the morning, catching a cab to rush her back to her apartment. \n\n### \n\nFirst thing in the morning, I got an email from Kelly telling me to meet her at the water fountain in the park next to campus after class. \n\nShe was half sitting on the rail when I got there, with a large shopping bag at her feet. \n\n\"You look like shit.\" \n\n\"Thanks Kelly. Didn't get much sleep.\" I tried to suppress a smile at the thought of Danni. \n\nKelly studied me for a second. \"I saw that smile. You got laid last night. Anyone I know?\" \n\nI should have expected that. Kelly read people better than anyone. \"The only women you know are either drug dealers or hookers. Or drug-dealing hookers.\" \n\n\"Yeah? So? Anyone I know?\" \n\n\"No. I really don't think you need to worry about my love life.\" \n\nShe smirked. \"What love life? I'm trying to decide whether it was your right or left hand. Gotta be the hand; unless Goodyear started making steel belted ones, you're too damn big for a blow up doll.\" \n\n\"Ouch.\" \n\nShe settled in, a bit more serious. \"I couldn't get an ID on the three guys on the video. But it was a hit for sure. You owe that long drink of water that plowed into the guy with the spike big-time.\" \n\nI tried to catch my reaction, but around Kelly that's almost impossible. \"Holy shit. That the girl you hooked up with?\" \n\n\"Kelly...\" \n\nShe snickered. \"Can't fault your taste. I'd kill for legs like hers. Not much in the boob department though.\" \n\nI just waited; there was really no point to pushing Kelly, especially when she thought she was being funny. Besides, even when her mouth was running in smart ass mode, she was always thinking. \n\n\"I did learn one thing, though. No idea what it means. Two other club security guys have been spiked in the last two months. Nobody knows why. They seem to be going for the liver. Low chance of fatality, but seriously painful and disabling. Both the other guys were big guys like you.\" \n\n\"I heard Ted at the Morado was stabbed, just didn't know what happened.\" \n\n\"That big powerlifter at The Stand... Woodely. I think that's his name anyway. Got hit two weeks ago. Weapon wasn't recovered, but the doctors said it could have been a spike.\" \n\nWoodley was kind of an ass, but more of a blow hard than anything else. Still he had a few pounds on me, and it was mostly muscle, and Ted was bigger than either of us, so the perps were a pretty brave lot. \"It almost sounds like someone is big game hunting. Doesn't make any sense.\" \n\n\"I know. There has to be a reason Derek. We just don't know what it is.\" She hopped down off the rail and hefted the huge shopping bag up, handing it to me with a grunt of effort. \"I talked the Lieutenant into letting me take your old vest. They should have gotten rid of it by now anyway. It was already written off the inventory. I wouldn't expect the back to take any more bullets, but it should still be stab resistant. Wear the damn thing.\" \n\n\"I will.\" \n\n\"Seriously, this feels fucked up.\" She had more worry in her eyes than a simple case of lunacy would warrant. And the Lieutenant must have felt the same way or he'd have refused to let her take the vest. \n\n### \n\nAs I promised Kelly, I started wearing the vest to work. Not all vests are stab proof, and the ones that are stab proof can have trouble with spikes. The department had made a consolidated buy with the county sheriff and they purchased the same vests for patrol officers and jailers. One of the biggest threats to jailers is spikes, so they bought vests with that in mind. The vest was a bit bulky, but still worked under my shirts. \n\nWe were all a little edgy for next few weeks couple weeks, but nothing really happened. PeeGee showed up as usual at the club and acted exactly the same as she always had. I even checked her purse again, a little more seriously, trying to figure out how she could be the same girl who'd spent the day with me. ",
        "Four weeks later, just as I almost convinced myself that I had read more into her than was there, Danni showed up at my apartment after the Saturday shift. She'd brought an overnight bag this time, but still insisted on wearing the same lavalava as a sarong down to lunch on Sunday. After that, she came over nearly after nearly every Saturday shift, staying until Monday morning every time. \n\nDespite her repeated insistence that she didn't want a relationship, it felt more and more like one every day we spent together. I finally talked her into a Wednesday date, so we could go to a really nice steak house that was closed on Sundays. \n\nEven though my F150 wasn't exactly a limousine, it was a better choice than her little convertible -- the only way I'd be comfortable in that would be to keep the top off the whole time -- so I picked her up at a her apartment. \n\nHer place didn't have the security door like mine, so I was able to just head on up. \n\nMy suit was an almost perfect match for her little black dress. \n\nI gave her a gentle kiss. \"You look beautiful.\" \n\nShe smiled, a soft, almost embarrassed smile. \"You clean up pretty nice yourself. You had to get that suit tailored, didn't you?\" \n\n\"Can't exactly buy them off the rack in my size, at least not without a lot of tweaking. A guy has to have a least one good suit for weddings and funerals.\" \n\n\"And good steakhouses. Hold on, I need to get my wrap, it's a bit cooler than I expected.\" \n\nI glanced around, trying not to be obvious. The apartment was smaller than mine, but very neatly kept, with lots of pictures. I crossed over to look at a couple. \n\nHer father was immediately noticeable. She'd described his scars as impressive, but that was a huge understatement. The side of his face was a mass of angry scars, his eye clouded over and his mouth on that side twisted into an evil grin. I could see why prom had been problematic. \n\nNext to him in the picture was a woman who was obviously Danni's mother. She was clearly an older version of Danni. Tall, and still attractive, but something about her seemed odd, hard. Her smile didn't seem to reach her eyes and she seemed to have a core of stone. \n\nI glanced at the pictures on the nearest wall. More family pictures with her brothers, both in uniforms -- one a Marine, the other wearing the tan beret of an Army Ranger. \n\nThen there was the last picture on the wall. Danni and a blonde woman, wearing matching sarongs, with their arms draped across each other's shoulders; each holding some kind of tropical drink up to the camera. I blinked and almost shook my head to clear it. The blonde woman wasn't just beautiful, she seemed unreal, as if she couldn't really exist. \n\nI heard a snicker behind me and pulled away from the picture to look back at Danni, who was grinning from ear to ear. \n\n\"That's my best friend, Angel. Her real name is Zascha, but nobody calls her that.\" \n\n\"She's, uh...\" I could hear my own voice trail off and feel myself flush with embarrassment. \n\n\"Yes, she is, and it's a lot worse in person. You never get used to it.\" She paused, looking fondly at the picture. \"Funny thing is, she's about as down to earth as you'll ever meet. A great friend, and about as dedicated a mom and wife as you'll ever meet. She puts everything into her family and friends. She'd do anything for them. I think she'll approve of you.\" \n\nThat last bit jolted me -- she was talking as if we had a real, long term future. Something she'd been clear would never happen. That jolt helped me clear the afterimages of \"Angel\" from my brain. \n\nShe noticed my mood over dinner. \"What are you thinking about?\" \n\nNo time like the present. \"You're not secretly married are you?\" \n\n\"No. Why...\" \n\n\"A boyfriend I don't know about?\" \n\n\"No...\" She seemed suddenly nervous. Danni was smart enough to know where this might be heading. \n\n\"Then can we at least consider the possibility of something serious in the future?\" \n\nI think she seriously considered the possibility of running for the door. \n\n\"Derek, it's kind of complicated. It may be a long time before I can commit to a long term relationship.\" \n\n\"Then how about if we talk about it after I pass the Bar and you get your Masters?\" \n\nShe seemed relieved. \"I guess that could work.\" \n\nSo, without any fanfare, Danni basically agreed to a long term relationship. She started to come over after my Friday shift as well, though she was still exactly the same PeeGee on the dance floor as ever. I was starting to think that she just got high on dancing, since she never used anything when we were together. \n\n### \n\nEverything seemed pretty smooth, sometimes life is like that. Until Abby just didn't show up after Spring Break. Not for class, not for study group session. Nothing. We knew she'd planned to run up north to see her mom over the break, but we'd been expecting her back on Tuesday and she just didn't show. \n\nFour days passed with no word from Abby, no answer on her phone or at her apartment and nobody knowing why she wasn't in class. \n\nI was wondering if she'd finally cracked under the pressure and had just decided to file a police report when Vince hunted me down at work on Friday night. \n\n### \n\n\"Hey, Derek.\" \n\nVince was waving at me over the crowd. Even him being here was a bit odd. He preferred smaller clubs with less ear-punishing sound systems. Besides, Vince, Abby and Jennifer all felt uncomfortable partying where I worked. It was a little weird. \n\nHe looked serious as hell, clearly stressed and exhausted, which was particularly disturbing since Vince was never serious. Then I noticed Jennifer trailing him, and she'd obviously been crying. This was no social visit. \n\nI pointed over to the club office. \"In there.\" \n\nThe office door cut the pounding sound of the music off abruptly. It was s little oversize for an office, it'd been the testing room when the club was a brewery. It looked a little odd with only a metal desk and couple chairs in it. \n\n\"Abby's in the hospital.\" \n\n\"What happened?\" \n\n\"She was found drugged and unconscious over in a back storeroom at Morado Sky. She didn't have any identification so it took them a while to figure out who she was.\" \n\nI closed my eyes for a second. \"Was she... assaulted?\" I couldn't bring myself to say \"rape.\" I knew what the answer was going to be, and gripped the back of the office chair to steady myself. \n\n\"There was some... tearing. She had to go into surgery.\" \n\nI felt a crackle of rage slide up my spine. Vince and Jennifer hastily stepped back with wide eyes. It took a second for me to realize I'd snapped the headrest of the chair off and was holding it my hand. \n\nI took a deep breath. \"Do they have any idea who did it?\" \n\nVince shook his head, looking down at the floor. \"She hasn't really been coherent yet. And I overheard one of the doctors tell a detective that with the amount of drugs in her system, she probably won't remember anything.\" \n\n### \n\nDanni caught me at the door. \"Where you going?\" \n\n\"Sorry, leaving early. I have a friend who got... hurt.\" \n\n\"Will he be okay?\" \n\n\"She's a she. Abby, the girl from my study group. Somebody roofied her.\" \n\nShe knew what that meant as well as anyone, and a concerned look crossed her face. She shook her head and took the proffered shirt, a little of her spark diminished. \n\n\"That's been happening a lot lately. Where at?\" \n\n\"The Morado.\" \n\n\"They never have enough guys on security there.\" \n\n\"They'd better hope I never catch them doing that here. They'll be lucky to end up in the hospital.\" \n\nShe reached up and softly touched my arm. \"Sorry about your friend, Derek. You do a lot here to make sure girls are safe. You can't be everywhere. Just... keep your head, okay?\" \n\n\"Thanks Danni. I'll try.\" \n\nI walked out feeling a little better, although a degree better than shitty isn't that great. \n\n##### \n\nAbby lay in her bed, pale and drawn, her mom sitting next to her. Abby kept twitching sporadically at the IV in the back of her hand. She'd put me on her visitor list, but she hadn't been able to make eye contact with me since I'd come in. Even after a week of my visits she couldn't, she just kept staring at her own feet under the blanket. \n\n\"I'll be okay Derek. I don't need anything. It'll just take a little time.\" Her voice was dull and toneless. She was lying and I knew it. \n\nHer mom and I locked eyes and I could see she knew it too. She had a look of desperation and pain that I can only think a mom could ever get. \n\nAbby missed our wordless exchange and kept talking. \"I'll just be in here a couple more days. I'm finishing the program. I'll be Fine.\" \n\nI'd never claim to be an expert on women, but I flinched when she used the \"F-word.\" \n\nI looked back to her mom. \"How long are you going to be here?\" \n\n\"A week. I can't stay out of work much longer than that. I used almost all my leave last year when her father got sick.\" She looked like she was about to break down. Losing her husband had obviously been hard on her, and now this. \n\n\"Jennifer said she'll stay with her. Vince or I will sleep on her couch if Jennifer is away.\" \n\nAbby started to object, but I put on my \"bouncer face\" and shook my head at her. \"No arguments Abby, or I'll just sleep curled up in front of your door, like a really big dog.\" Even she gave a hint of a smile at that, letting her eyes flicker up to me, just for a second. \n\nWhen she finally fell back asleep, her mom stepped out of the room with me. \"Thank you. The three of you have been godsends.\" \n\n\"She'd do the same for any of us. If it wasn't for her, I don't think Vince would have made it through the program.\" \n\n\"He said that. He kind of likes her doesn't he?\" \n\n\"More than 'kind of.'\" \n\n\"I think she likes him too.\" She paused, looking up at me. \"Maybe more than 'kind of.'\" It took me a second to realize that she was trying to figure out if that was a problem. \n\n\"I'm glad to hear that. I'll bet Vince would be even happier to hear it.\" \n\n\"I don't know if she can... think along those lines right now.\" \n\n\"I think he'd be happy if she just lets him be here for her, at least for now.\" \n\nShe nodded grimly. \"They don't think she will remember any of it. There was just too much of that stuff in her system.\" \n\n\"I'm no psychiatrist but I'm not sure if maybe that isn't for the best.\" \n\n\"Just knowing it happened, though. It's been hard on her. She's a fighter; tough, always the first to stand up and face things. Always has been. This makes her feel weak and helpless. She isn't taking it well.\" \n\nI could see that too. \"Is she seeing the counselor yet?\" \n\nThe university was providing a counselor, even though everything had happened off-campus, but Abby had been resisting talking to her. \n\n\"Starting tomorrow. She promised. The woman from that special investigators office talked her into it yesterday.\" \n\n\"Not one of the city police?\" \n\n\"I don't think so. Came in right after you left yesterday. She said she was with a State drug task force of some kind. I think she's seen a lot of this before.\" \n\n\"I guess they would.\" \n\nShe studied the floor for a minute. \"Abby's a little worried about you, Derek.\" \n\n\"Why would she be worried about me?\" \n\n\"She says she knows you're going to go after them.\" \n\nI thought I'd been hiding that better. \"I have no idea who they are.\" \n\nThat was an outright lie. The informal network of bouncers and club security had already narrowed it down, although it was going to be problematic. \n\n\"Bullshit Derek. I'm not even that blind and I don't know you near as well as Abby. You're going to dig and dig until you find them. And then... Jennifer told me about that chair.\" \n\nI tried to shrug casually, but I knew it didn't come off quite right. \"Nobody gets to do things like this to my friends. But I'll try to just give them to the police.\" \n\nShe eyed me warily. \"Do more than try Derek. Abby would never forgive herself if you got into trouble over looking for revenge for her.\" \n\n\"Justice. Not revenge. And I'll keep out of trouble.\" \n\n************ \n\nI'd already figured out more or less what had happened, even if Abby couldn't remember any of it. Any halfway decent cop could have figured it out easily. I still had a lot of friends at the department and the informal network of club bouncers and security was more than willing to help. This hit us all. \n\nAbby had gotten back into town a little late on Monday, a little later than she'd planned. Apparently, she decided to grab a bite at the Morado. Unlike the Crimson, they actually had a full grill and were known to fix a pretty good -- and inexpensive -- plate of tapas. Abby had a weakness for them, and it certainly wasn't the first time she'd grabbed a quick bite there. Especially since she had to pass right by the Morado on her way into town. \n\nI'd already been over to the Morado and looked over a copy of the video footage. While it wasn't enough for to prosecute, it was pretty clear that three guys in their 20s had been hovering around Abby while she'd been eating. At one point, all three of them had kind of circled her table to talk her up before she ran them off. There was no way to see it on the video, not with them around her, but one of them must have spiked her drink then, because it was shortly after that she began to look unsteady. Since she'd only had a lime water to drink, it had to be the drugs. A mix, Kelly had told me, of Rohypnol and GHB. \n\nThey must have caught her when she tried to go back to the bathroom. The video camera in that hallway was on an open mount and had been knocked sideways from underneath at some point that evening and only showed the wall. A stolen key card had been used to access the store room. \n\nThey were smart enough to use condoms and it was obvious that they'd planned the whole thing. Maybe not for Abby specifically, but they'd certainly planned to do this to someone. And there were rumors that something similar had happened at a couple other clubs, although the victims hadn't been so badly injured. \n\nIt all felt \"off.\" The assholes that use the shit usually try to get the girls out of the clubs where the chances of discovery are lower, where a wandering bouncer isn't likely to intervene or call the police. From the hospital reports it looked like Abby had been hurt on purpose, while she was unconscious. \n\nThe real problem was the \"who\"; the video wasn't clear, but the clothing and the mannerisms looked all too familiar. \n\nAnthony Montagne had a nephew, a weasel of a kid named Joe Dunham -- he called himself \"Joey D.\" I'd never had a real run-in with him, but some of the other guys had -- usually their cars got vandalized shortly after. The self-important prick thought he was Eminem; copied his hair, clothes, accent, everything. He invariably had two sycophants hanging off of him, I never bother to learn their names. I just thought of them as Thing One and Thing Two. \n\nThey generally sat around, offending anyone in earshot and bragging about \"getting more ass than a toilet seat\" and spending a lot of money. From everything I'd heard, Joey D was generally useless to Tony Montana, but his wife loved the shithead and pressured Tony into giving him a paycheck and a \"job.\" \n\nIt wasn't real clear what the \"job\" was, and most of us thought he probably mostly paid Joey to stay out of his hair. \n\nThe police pulled them in and questioned them, of course, but there just wasn't any hard evidence, nothing they could really use. \n\nI wasn't really looking for a conviction in a court of law though, I was just looking for an opportunity to balance the scales a bit. All I really needed was time and a little carelessness on their part. \n\n### \n\nI ended up waiting a little longer than I expected. After they were questioned, Joey and his pals laid off the clubs for a bit. They probably made the natural assumption that the undermanned and overstretched police force would use their limited manpower to put a surveillance detail on them. It's only a natural assumption if you are both guilty and egotistical enough to assume everyone's priority revolves around you. It also probably doesn't hurt to be toking so much weed people are paranoid for five city blocks around you. \n\nI know I was on edge; I'd always liked fishing, but not traditional fishing, I really didn't have that much patience. I preferred spear fishing, where I could go plaster a fish whether it was hungry or not. Danni handled it just fine. Not only did she put up with my dark moodiness; she managed to blunt those moods. One time she asked me to pick her up at the dance studio where she taught, on a Tuesday so we could go out to eat. That, was a bit unusual, since between my classes, her classes and the dance classes she taught, we almost never saw each other during the week. \n\n\"Mandy's Dancers and Dreamers\" was a nice place, in a second floor walk-up with a tall, industrial ceiling and lots of windows. It was absolutely packed with what looked like every five-year old girl in the city, all in neat groups, all wearing pink leotards with purple sleeves, looking for all the world like a roomful of orchids. The instructors, one of them Danni, were all in matching leotards -- purple with pink sleeves. They were drifting around their classes, making little corrections. Danni shot me a little smile, but kept moving from one little girl to the next. \n\nA slightly harried-looking, middle-aged woman strode toward me, stopping nearly at my feet. \n\n\"Wow. She said you were big.\" She looked me over, appraising me like a farmer looking over a bull. \"I can see why Danni didn't want you coming by during the day classes. All aerobic exercise and Latin dance classes. Nothing but cougars in those, you'd have been lucky to escape with your life. I'm Amanda, by the way.\" \n\n\"Derek. Nice to meet you.\" \n\n\"You're about 15 minutes early, you can either wait here or in the parent's pick up area -- she gestured to a doorway next to a mirrored wall. We keep the parents penned up in there so they can watch their kids through the one way mirror without being distractions.\" \n\nI agreed to lean against the wall and watch. Even compared to the other instructors, Danni's grace and balance stood out as she led her little orchids through their steps. I decided I could just watch her move all day, her easy flowing motions were hypnotic, and gravity simply didn't seem to have any hold on her at all. \n\nWhen the class finally ended, the instructors began neatly sending their students into the parents waiting area, each child checked off on a list by Amanda as she was passed to her parent. One of Danni's little charges veered away from the line and stood staring up at me. \n\n\"Are you an ogre? Like Shrek?\" \n\nDanni came up behind her. \"Carli, this is my boyfriend.\" \n\nCarli turned towards Danni, wide-eyed. \"Your boyfriend is an ogre?\" \n\nI couldn't help it, breaking out laughing while Danni tried, unsuccessfully, to convince the concerned little girl that I wasn't an ogre. \n\nI crouched down. \"Ogres can be really good boyfriends. Watch.\" \n\nI stood up and stepped over behind Danni. Sensing what was coming, she tried not to smile but wasn't very successful. I hoisted her easily to my shoulder. \"See, she gets to ride everywhere she wants like this.\" \n\nCarli immediately decided that maybe ogre boyfriends weren't the worst idea in the world. We chatted for a while and I pretended to forget Danni was on my shoulder, looking around to find her, much to Carli's squealing amusement. \n\nLater, as we ate, I asked Danni about her job. She'd only ever talked about it in generalities. \"What's your favorite part of it?\" \n\n\"The kids. The parents will drive you crazy, but the kids are amazing. Everything they learn is a whole new world for them, there's a sense of wonder to them, especially at first.\" \n\n\"That's the best part about kids. I must have spent thousands of hours babysitting my cousins. At first it was annoying, but later you realize how great their world is. Like Carli, when she went left, she was telling her mom how she met a real ogre and he didn't eat anyone.\" ",
        "She laughed. \"I heard. I also saw the way her mom was looking at my ogre today, and you're never going anywhere near the Wednesday Latin Dance class she takes. Honest to God, from the look on her face, she'd bring climbing ropes and lederhosen and start trying to scale the Eiger.\" \n\nI stared at her for a second. She sounded seriously possessive, and I wasn't terribly unhappy about that. \n\nShe misunderstood. \"Eiger is German for Ogre, it's a mountain in Switzerland.\" \n\n\"I know that, I was just thinking how great you handled those kids. You'll be a great mom someday.\" \n\nShe looked down at her plate for a bit. \"I'd like to be. Someday. I want to be as strong as my mom and as loving as Angel.\" \n\n\"If you're anything to go by, your mom did a great job.\" \n\n\"She's been great. I was too little to remember anything about it now, but her and Dad got divorced. We all ended up back together by the time I was 4 or so after Dad got hurt and had to get out of the Army. They never remarried. Mom said they didn't need a piece of paper. It's kind of a running joke with Dad's old Army friends, they call her 'Ex.'\" \n\n\"Sounds a little harsh.\" \n\n\"She doesn't mind. Nicknames are kind of their way of showing that you're part of the pack.\" \n\n\"Kind of like my old squad room.\" \n\nWe finished up dinner and instead of heading home, Danni ended up staying the night. She left early to get back to her apartment -- it was the first time she'd ever stayed the night during the week and I was starting to wonder what it would be like to wake up next to her every morning. \n\nDespite classes and papers, Danni ended up the only thing on my mind, I'd even almost forgotten about the three guys I was hunting. \n\nJust almost though. Eventually my targets walked into my hunting ground. \n\n### \n\nI'd seen them come in and watched them for nearly an hour -- they were moving around a lot, but eventually they picked a target. Syl was the first one to notice, she had a nose for predators -- years of watching over girls drinking at bars had honed it to a fine point. And she hated, absolutely hated, the kinds of guys that did it. I don't know for sure, but it felt angry, personal, but she'd never shared whatever the reason was. \n\nShe waved me over and gestured to the three with her sharp chin. \"I think those assholes are up to something. That frizzy blonde over there is a bit more out of it than she should be, she hasn't drunk all that much.\" \n\nI watched them for a second, trying to pretend I didn't have a stake in the game. \"Could be, they're orbiting her pretty tight. You tell Nick, make sure they don't take her out to their car.\" \n\nGrim-faced, Syl leveled a stare at me. \"Not yet, something's wrong. The one in the stupid hat snuck back towards the back, he could have been using the bathroom, but he acted odd, like he was up to something. I just get a feeling, like maybe they want do it here, like that girl at the Morado.\" \n\nEverybody who worked in the clubs had heard the story -- it was so odd and out of character -- hell, even the customers had heard. The Morado was having a lot of problems. Rumor had it that they were barely breaking even these days. Syl's voice was heavy, she knew what she was saying. \n\n\"Nothing back there but the bathrooms, the store room and the loading dock. As busy as we are, the bathrooms are pretty busy.\" I was trying to look like I was passing time, just talking, but I wasn't sure how it would come off to my three targets. \"Syl, I need to move off a bit -- we need to catch these guys in the act. If I don't keep moving around, they may notice. Give me a sign when they really make their move.\" \n\n\"Got it.\" She paused. \"I can probably stall a minute or two after that before I send Nick and Ron after you, but not much more. They deserve whatever you're gonna do.\" \n\nI looked down, her eyes were glassy. \"The police can have them, but they'll be going to the hospital first.\" \n\nHer breath caught for a second. A sharp sliver of raw rage slipped into her voice. \"Just make them remember it.\" \n\n\"I will.\" \n\nLess than five minutes after that, Syl caught my eye and signaled me to look to the back where I just saw Joey D lead the unsteady girl into the back. \n\nGetting across the crowded dance floor was slower than I'd wanted, and, of course, I ran right into Cassie. It took more than a few seconds to get away from her and I ended up having to force my way through the crowd with brute strength. That cost me time I really didn't have. I was risking the blonde girl's safety for this, and I really hoped I hadn't bet wrong. \n\nI was really beginning to worry that I wasn't going to make it in time. Syl must have decided the same thing, I saw her signal Ron and Nick to back me up just as I reached the doorway and turned down the hall. \n\nI didn't have much time, I knew Nick and Ron would be right behind me and they'd stop me as soon as they caught up. \n\nStill, the pounding music of the club drowned out nearly everything. It would be perfect cover for what was about to happen to three bottom feeders. \n\nI slammed my foot right next to the door latch to the club's storage room, just like I'd learned at the Municipal Police Academy. \n\nI'm not exactly small or delicately built. The door gave way on that first kick and popped inward. Taking a chunk of door frame with it. Being my size can be a pain in the ass at times, but it does have perks. \n\nThe jolt made my knee flash with pain, but I'd been expecting that. The knee isn't even real, so it never seems very fair that it hurts like that, but it does, even despite the Mad Max brace. \n\nI slammed through that door with every intention of beating three men to as close to death as I could. \n\nAnd stared at a blood-spattered room. The blonde girl who Silvia had been worried about was slumped in a corner, still dressed, but completely unconscious, and apparently unharmed. Gently snoring. \n\nJoey and his two buddies were not so lucky. They'd been beaten badly and were gasping pained breaths through shattered teeth. \"Joey D's\" eyes were open, but rolled back into his head so only the whites showed. \n\nNick spun through the door, with Ron right behind him. \n\n\"Jesus, Derek, how the hell did you...\" He stopped. \"You didn't have time to do this. What the fuck.\" \n\nI held my hands up helplessly. \"Nick. You'd better call the police.\" I looked around. \"And a couple ambulances.\" \n\nAs we settled things out, Nick came over. \"I saw you round that corner, we were less than 30 seconds behind you.\" \n\n\"They were out of my sight for maybe three or four minutes at most. Well, Joey D and the girl, I lost track of the other two earlier. Nobody went by me from the loading dock either.\" \n\nAfter the police and ambulances arrived, Nick an I had a chance to talk. \n\n\"The paramedic is rattling off a list of injuries like a damn high-speed car accident. Broken bones, concussion, serious internal injuries. One of the punks sprayed the camera dome in the hallway with black paint so I got nothing there.\" \n\nThe camera domes were already black, so unless you looked close, you'd never notice the paint. \n\n\"What about the loading dock? Whoever did this could have gone out through there.\" \n\nNick grimaced. \"That camera hasn't sync'd properly in a month, it might as well be on the far side of the moon for all the good it's doing. I think the whole loading dock circuit needs replaced. Every other alarm and camera works -- entry, main floor, upper deck, office, restroom hallway, just not the damn loading dock area.\" \n\nEven with the confusion, I enjoyed seeing the three assholes who'd raped Abby headed towards the hospital. \n\nThe pleasant feeling only lasted three weeks. \n\n### \n\nI suddenly realized I was pretty much alone on the floor -- unheard of on a Friday night. I couldn't see Ron or Nick. We were packed, probably a lot of former Morado customers. I drifted over to the bar. \n\n\"Syl, what the hell is going on? Nick and Ron have disappeared.\" \n\n\"I don't know, been too damn busy to even notice. Somebody could've driven a herd of elephants by and I'd have probably missed it.\" \n\n\"I'll keep looping through here, but try to keep an eye on things while I figure out what's going on. \n\nI checked the loading dock, the storeroom and the floor again with no luck. \n\nI finally found them in the office. \n\nFor all the good it did me. \n\nThe first thing I saw was the business end of an automatic. Looked like a Smith and Wesson SD, but to honest I wasn't making a study of it. \n\nAnthony Montagne was sitting in the chair behind the desk, flanked by a couple of goons. Two other heavies had been standing to either side of the door. The one with the gun gestured for me to shut the door behind me. \n\nNick was zip-stripped into another chair, while another guy, bald, barrel chested and considerably larger than me looming over him. Nick looked rather the worse for wear, blood streaming from his nose. Ron was slumped over in a corner, a massive bruise forming on the whole side of his face. At first glance, he looked unconscious, but I thought I caught a glimmer of an eye watching between mostly closed lids. \n\nThe goon waived me back further, stepping with me to keep me covered. \"Back up against the wall. Big fucker like you makes any trouble and I'm just going to shoot you.\" He appraised me for a second. \"A lot.\" \n\nHe backed away slightly to my left while the other guy stayed near the door. \n\nTony Montana leaned back in the desk chair. \"We were just explaining the facts of life to your boss. We need my people free run in here. We have product to move and your customers are an outstanding market opportunity.\" \n\n\"Shit. The guys with the spike, they were yours weren't they? Take out the big guys on the club security detail and everyone gets more worried about their own safety than doing their job.\" \n\nHe cocked his head, amused. \"Of course.\" \n\nI studied him for a second. \"What was the point of having the girl raped at the Morado? I know it was your asshole nephew. He tried the same thing here.\" \n\nHe looked distinctly less amused. \"I would like to come into possession of the Morado. It's a nice location for a major distribution point. The owner felt selling a club that was almost printing money wasn't in his interests. It's not making him near as much money now. As to doing it here, I think Joey got a taste for it. The little shit doesn't have two brain cells to rub together. I need these other clubs as retail locations for the product. Dumbass.\" He shrugged. \"Still, somebody has to pay for what happened to him. He had a shitload of broken bones, like somebody worked him over with a hammer and he got brain damage from whoever it was force feeding him and his friends their whole stash at once. His memory doesn't work right. Now he has to relearn how to feed himself and actually shit in a toilet.\" \n\nThe thought of Joey as a drooling vegetable warmed my heart a bit. I shrugged. \"Wasn't us. Would've been if I'd caught the little kefe first. But he'd have remembered every second of it for the rest of his life.\" \n\nI could feel my anger over Abby surfacing. The guy with the gun saw it; he stepped a half step sideways, rearranging his grip nervously. \n\nThe big guy over by Nick seemed to notice me, like a bull in a field catching sight of another bull. \n\nTony Montana gave a grim smile. \"I know it wasn't you guys. I got copies of the police reports, I have a few friends there. Still, doesn't matter as long as everyone thinks somebody paid.\" From the way he was eyeing me, it was clear who that was going to be. \n\nI'd figured that, though. Tony Montana wasn't going to have any discussions with us unless he was absolutely sure there'd be no witnesses. I started calculating if I could get over the desk, at least try to take him with us. \n\nSuddenly, the door popped open. Laughing and giggling, Danni stumbled in, barely able to stay on her feet, followed by a blast of music from the floor. She glanced around, not showing the slightest comprehension. \n\n\"Sorry. I was looking for the bathroom.\" She shook her head drunkenly. \"I don't feel so good.\" \n\nDanni staggered slightly sideways while the goon on my right stepped over to grab her arm, while pushing the door shut behind her. She squeezed her eyes shut. \"I think I'm going to...\" \n\nShe bent over suddenly, grabbing her knees with gasping, heaving noises. \n\nHe let go of her arm and stepped away a bit -- nobody wants to be hurled on. Tony Montana shook his head, annoyed. \"Jesus.\" \n\nDani's head snapped up to catch my eye. Only it really didn't seem like it was her. Not the pleasant, wonderful girl I knew. Not the silly devil-may-care Party Girl either. Her face was tight, cold as ice, expressionless and calculating. \n\nShe suddenly straightened up, twisting toward the guy by the door, arms snapping up and out in a mockery of crucifixion. Twin rods snapped out, extending from her hands with sharp metallic clicks. \n\nThings seemed to freeze for a timeless moment. Probably no more than a fraction of a second. Then she moved. \n\nShe was just a blur of motion as she spun the rest of the way towards her victim with a staccato of snaps and meat cleaver sounds as she hammered him with the rods. I could hear bones breaking. I'd never seen anyone move that way. It almost seemed impossible, like some kind of an illusion. \n\nThe guy with the gun stared in shock for a second then began to shift his aim to her. Big mistake. I caught the gun over the top, freezing the slide and hammer. Then I began to fold his arm where there weren't any joints. And the wrong way where there were. I shut his scream down by driving my fist into his face and let him drop, pulling the gun from his hand. I turned just in time to see Danni blurring towards the desk, her first victim crumbling to the floor as bloody heap. The big guy over by Nick was struggling to pull loose of Ron, who'd wrapped himself around his leg and wasn't letting go. Tony was pushing his chair back, trying to gain some distance while one of his guys moved to try to intercept Danni and the other began to draw his gun. \n\nShe slammed into her next target in a tornado of steel; he never had a chance. He probably took four or five bone-breaking hits in the first couple seconds. But the other guy was bringing his piece up, and from the panic on his face, he wasn't concerned with maybe accidently hitting someone on his team. I had the gun I'd taken, but I was holding it by the barrel, there was no chance I'd get a shot off before he took her down. \n\nI did the only thing I could do, diving between them, trying to shield her with my body. \n\nEven the trip hammer blows of the bullets slamming into my back didn't stop me from catching Danni by the waist and tossing her away from the line of fire. \n\nShe landed lightly, rolling gracefully back to her feet as if she'd choreographed the whole damn thing. Then she snapped one of the rods towards the gunman; it actually made a sizzling sound before catching him on the temple, dropping him. \n\nThe icy expression dropped from her as she turned back to me, but her initial expression of concern turned to a silly Party Girl grin when she saw me pulling myself to my feet and stepping towards her. \n\nShe started to say something, but it was cut off abruptly when the truck hit us. \n\nIt wasn't really a truck of course, it was the office desk. It slammed into us with no warning at all, smashing us into the wall. \n\nI lost my grip on the gun and heard it skittering across the floor. \n\nIt took me a second to shrug off the impact, I grabbed the desk edge of the desk with both hands, levered my good leg under it and heaved it off. \n\nDanni was slumped against the wall, nose bleeding, all her energy and lightning speed gone; she was trying to open her eyes but having problems focusing. \n\nThe big guy had finally stomped his way loose of Ron. I guess he decided fighting both Danni and I was a bad idea and chose the \"bigger hammer\" method of dealing with us. He was stepping slowly towards us, while Tony watched confidently. \n\nI pushed myself to my feet while the big guy waited, flexing his arms. He wanted to make a show of this for his boss. \n\nAs I straightened up, a spasm of coughs caught me, along with a sharp pain on the right side of my back. I saw the fine spray of blood on my palm. Kelly did warn me that the vest probably couldn't stop any more rounds. \n\nI could see the big guy's irritation build as I just stood waiting for him. If he was smart, he'd have waited for the wounds to weaken me, make it easy. But I'd figured right, he wanted to impress Tony Montana and waiting wouldn't do that. \n\nI stepped back as he surged forward, another fit of bloody coughs sapping me. His first punch slammed into my stomach, but it was barely noticeable compared to the pain of the coughs. \n\nI just managed to block the strike at my face. \n\nI saw confusion cross his features. He'd expected me to double over from the gut punch; his face punch hadn't really been on target because of that. Of course he probably rarely had to deal with guys even close to his size, and damn few that would be in any kind of shape. Probably none wearing a protective vest. \n\nI rocked his head back with a hard jab, then followed with a right cross with as much as I could put into it. I had to end this fast, before the injuries caught up to me. \n\nHe staggered back, dazed. Most martial arts don't translate well to guys my size, but boxing does. So does Sumo; hell, it's designed for dealing with big guys. \n\nI clinched with him, grabbing his belt, and heaving him into the air, turning and throwing him down onto the smashed desk in a classic Tsukaminage, lifting throw. It's an ungraceful, brutal move; potentially crippling even on a mat. The larger the victim, the more damage they take. For an untrained guy, coming down onto a broken metal desk, it's a finisher. \n\nI turned towards Tony Montana, fully expecting to see a gun his hand. But he stood frozen hands up. Danni was poised next to him, extendable rod in one hand, one of the handguns leveled towards his head. \n\nI stopped, coughing again. The corner of Danni's mouth twisted down. She snapped the steel rod across his face, splitting his cheek and dropping him. \n\n\"He looked like he was going for a gun.\" \n\nI laughed weakly, spitting blood onto the ground. \"He did to me, too.\" \n\n\"Hey.\" Nick looked over at us, one eye swollen shut. \"I know it's been a long night, but I'd rather not spend the rest of it tied to this fucking chair. We need to get a bunch of ambulances here.\" \n\nDanni, keeping one eye on me produced a small lockblade from her boot and began cutting Nick loose. \n\nHe rubbed his wrist. \"Derek, this is Danni Wolfe.\" \n\nBlack clouds were starting to edge my vision, and a ringing sound was building in my ears. He wasn't making sense. \"I know her name Nick. We've been seeing each other for months.\" \n\n\"Derek. This is Special Agent Danni Wolfe with the State Office of Special Investigations. Department of Criminal Investigations. Narcotics Division.\" \n\nI stared at her. As much sense as it made after what I'd just seen, I had a hard time making it click. \n\nShe looked at me, pensive. \"I'm sorry, Derek.\" \n\nI started to say something, though I'm not sure what. Blood loss, shock and the surprise finally dragged me down. I saw Danni rushing toward me as the black at the edges of my vision closed in. \n\n### \n\nI spent nearly two weeks in the hospital; I was damn lucky. Only one of the bullets had penetrated the vest, and that one was slowed down a lot by the vest. I'd come off with a couple broken ribs and a nicked lung. \n\nDanni had been in and out, constantly -- she'd only gotten a slightly fractured arm and a light concussion. She never stayed long and she always seemed uncertain about what to talk about. She'd diverted every question I tried to ask. Nick apologized for keeping me in the dark. ",
        "He'd been brought in because he'd worked for Danni's boss at one point. She needed cover in the club. He hid her batons in the women's restroom inside one of the towel dispensers. She'd walk right in through the metal detectors and go straight to the bathroom. He also kept the loading dock cameras and alarm offline to make sure she always had a way in or out if she needed it. \n\nMom threatened to fly out, but I talked her out of it with a promise to come out and visit after I got out of the hospital. \n\nRon was actually worse off than I was, skull fractures and a collapsed lung were likely to keep him in the hospital for months. \n\nMy last morning in the hospital I woke up to an oddly familiar face. \n\nA slender, older black woman with oddly pale green eyes was sitting in a visitor chair on the side of the bed. I recognized the eyes. \n\n\"Good morning, Derek.\" \n\n\"You're Lieutenant Markham.\" \n\n\"I retired as Commissioner a few years ago. And the name is Belle Anderson now. Has been for many years.\" \n\n\"Your picture was on the wall down at the precinct in the Dog Run. You're a legend down there.\" \n\n\"They still remember me after all these years.\" \n\n\"Hard to forget. The Dog Run is still a shithole, but I heard it was a hundred times worse before you cleaned it up.\" \n\n\"I don't know about a 'hundred times worse.' But I do like to think I made some improvements.\" \n\nThe name ''Belle Markham\" was still spoken in hushed, reverent tones at the precinct. Sometimes as a prayer when days turned bad. Rumor had it she'd dropped the rules and laid waste to the gangs that had owned the Dog Run with sword and fire. Some of the older perps literally cringed when they saw her picture on the wall. \n\n\"From what I've heard, you made a huge impression.\" \n\n\"Hmmm. You've been too polite to ask why I'm here. I apparently owe you a favor.\" \n\n\"How so?\" \n\n\"They lured me out of retirement to head up the State OSI after the last Director was arrested for federal corruption charges. When you took a bullet for Special Agent Wolfe, you took one for me. So I owe you. I take things like that very seriously.\" \n\n\"The only thing I want is Danni.\" \n\n\"That's really not up to me. A bit beyond my authority.\" \n\n\"Just let her know she can talk to me, so I can figure out what's real, and what's not.\" \n\n\"If it helps, I've never seen her date anyone seriously at all until now. I recruited her out of an intern program, the usual bunch of useless Criminal Justice majors we see every summer. Managed to get her on part time until she finishes her Masters.\" \n\n\"I thought her degree was in Dance.\" \n\n\"She had a double major. It was one of the reasons those idiots sent her into the clubs. Everyone knows cops can't dance. Makes a damn good cover.\" \n\n\"Fooled the hell out of me.\" \n\nShe peeled a card out of her handbag and wrote a number on it. \"Here's the phone number for the operations officer. Show up next week and he'll have someone take you to see Danni at work. Danni can answer your questions there. Anything else?\" \n\n\"Not unless you're willing to tell me if the rumors are true.\" \n\n\"What rumors?\" \n\n\"How you did it, cleaned up the Dog Run. How you broke the gangs. Rumor is you killed Jack Church and The Chinaman.\" \n\nShe sighed, but she smiled slightly. \"It's been a long time Derek. I'm getting old, I just can't rightly remember just what happened to them.\" She got up. \"I just did my damn job.\" \n\nShe started to walk out, then stopped at the door without looking back. \"It's been nice meeting you Derek. I hope everything works out for you and Danni.\" \n\n### \n\nIt was a Monday when Nick drove me back from the hospital; Danni had been caught up in the paperwork and meetings surrounding the arrest of Anthony Montange. I expected to have a lot of class work to catch up on, but it was surprisingly simple. Which actually made things worse, since I didn't have anything to distract me from worrying about how much of whatever Danni and I had was real, how much wasn't. Trying to figure out how much of \"us\" was actually a cover story. \n\nI must have looked at the card a hundred times, but by Wednesday, I'd made up my mind. If I left it to Danni, her determination to avoid relationships might override everything, real or not. She just wouldn't show up on Friday night, she'd drop me along with her cover. \n\nIf even half of what we had was real, I knew I needed to hold on with both hands. \n\nI made one expensive stop before heading over to her office. \n\nWhen my escort arrived at the front guard desk of Danni's building, I grimaced. Cassie. \n\n\"Derek.\" She took a visitor badge from the guard, as she checked my driver's license against the visitor log. \"Last name Keawe.\" \n\n\"I'd think you'd know who I am by now, Cassie.\" \n\nShe shrugged. \"Procedure, you know how it is.\" \n\nWe rode the elevator in uncomfortable silence, then she led me down a hall to a dull cookie cutter conference room. \n\n\"You'll need to wait here, I'll go get Danni.\" \n\nIt took her almost ten minutes to drag Danni into the conference room. From the look of things, she hadn't come entirely willingly. \n\nShe was wearing a basic black government-standard suit with skirt, and an expression that screamed discomfort. \n\n\"Derek, I could have come over if you really needed to talk.\" \n\n\"We need to talk now. And we need to do it on your ground.\" \n\n\"Cassie just gave me the message from Director Anderson.\" \n\n\"I just want to know where we really stand.\" \n\nDanni looked down at the carpet for a long few seconds. \"I screwed up. This whole thing was supposed to last a couple weeks at most.\" \n\n\"Us?\" \n\n\"No, the whole operation. The idea was to seed the clubs with 'spotters' who could sort get a grounds eye view, maybe get a sense of how the narcotics were flowing. But the first week netted three pretty significant busts. So they decided to keep us in. And because it was just supposed to be a look-see in the first place, we hadn't put any long term covers into place. I really do teach some classes at the dance studio, so that seemed like the best cover I could build on the fly.\" \n\n\"So that's why you were using your real name?\" \n\nShe nodded with a grimace. \"All the door guards had seen our real licenses. We were doing real damage to the drug distribution networks, taking out mid-level dealers instead of just pushers. We couldn't just turn it off. Anderson was pissed when she found out we were working without cover identities, but everyone was afraid if we pulled the spotters out all at once and replaced them, it'd be too noticeable. So we were pulled out one by one, really slowly, and replaced them with agents with full covers in place. I was the last one, but by that time, we were pretty sure Montange was watching the Crimson closely and we didn't want to scare him off, so I had to improvise. Nick used to work for Anderson when she was the Commissioner and she trusted him, so she brought him in on things to give me a little extra back up.\" \n\n\"Was that what I was? Improvisation?\" \n\n\"No.\" She suddenly looked a little uncertain. \"I don't know what it was at first. I was violating all kinds of rules. I told everyone it was just 'color.' I told them I was just trying to improve my cover, but it didn't have anything to do with that, except at first.\" \n\n\"So, what was it?\" \n\n\"It started off as kind of a cover thing, something that Party Girl would do. I needed be seen flirting with somebody, but I didn't want the hassle of actually dealing with some guy who was taking it seriously. So I started flirting with the one guy I knew wouldn't be an asshole about it.\" \n\n\"I was safe.\" \n\nShe gave an off-kilter smile. \"Yeah, but it turned out that I wasn't. You were so cool about it for so long. Over time I started looking forward to seeing you. And it kept going from there. It was only when the guy tried to spike you that I realized how far gone I was. I tried to talk myself out of going over, but you know how that worked out.\" \n\nI needed a bit of time to think about that, so I changed the subject. \n\n\"So what was that stuff with the ASP batons? I've never seen anything like that.\" \n\n\"Escrima. I've been studying it since... since before I can remember. My Dad taught it to me.\" \n\n\"I've never seen anyone beat somebody so badly, so quickly. Except once. You're the one that got to Joey D and his friends.\" \n\nShe nodded, looking down at her hands. \"You were too obvious, too angry. You'd have killed them, and everyone would have known. Abby was really worried about you.\" She looked up at me sadly. \"I couldn't let you ruin your life.\" \n\n\"Abby?\" \n\n\"I went and saw her when she was in the hospital. I really wanted to see if I was going to have any competition with you, but from the way she talked she thought of you a big brother. I told her I'd keep you from doing anything stupid if she promised to see the counselor. She has no idea I'm your girlfriend, she just thinks I was a cop assigned to the case.\" \n\n\"Cassie ran interference that night.\" \n\n\"We saw the first two slip into the loading dock door. So she gave me time circle around to the loading dock. I got the jump on them, then caught Joey as he came through the door.\" \n\nThat was flat out felony assault. But it didn't bother me; she was right. They were lucky she had done it. I'd have probably killed all three of them. I might have been able to get out of it by claiming I was protecting the girl, but too many people knew about Abby, it'd have been a huge risk. \n\n\"Anything else I should know about?\" \n\n\"Other than constantly lying to you about almost everything?\" She stopped, then gave a kind of goofy smile. \"I did use your toothbrush the first morning I stayed over, but I rinsed it in really hot water.\" \n\n\"I was wondering when you'd own up to that. The toothbrush was still wet when I got up.\" \n\n\"Sorry.\" \n\nI reached over and took her hand. \"Danni, I really need to know if this stuff between us is real.\" \n\nShe nodded, eyes a little glassy. \"I tried not to take it seriously, but...\" She drew in a deep breath, \"I couldn't stop it.\" \n\n\"Well that's good. For me anyway. I'd hate to think I made a really expensive mistake.\" \n\nShe watched frozen as I pulled the box out of my pocket and opened it. \n\n\"Derek... I... I...\" \n\nFor a moment I was convinced she was going to say \"No,\" but, almost as if it was against her will, she reached slowly over, holding her left hand out. \n\n\"Are you sure Derek? I'm a mess. My job is insane. I've lied to you the whole time we knew each other.\" \n\n\"I'm sure.\" \n\nShe closed her eyes for a second. \"Then, Yes.\" \n\nI slid the ring onto her finger and we held onto each other for what seemed like hours. She still seemed a little uncertain about something, but whatever it was, I was sure it wasn't about how she felt about me. \n\nWhen we walked out, we ran right into Cassie who was apparently waiting on pins and needles. I think it's a female thing; we'd only cleared the conference room by two steps before she saw the ring on Danni's hand and let out a definitely happy shriek. \n\nA tidal wave of women immediately poured out of cubicles and offices; Danni tried to introduce everyone, but I recognized that I was basically unnecessary to the ensuing chaos, probably even a hindrance. \n\nI caught her for a second. \"See you tonight?\" \n\nShe nodded with an absolutely genuine smile, the surge of enthusiasm from the other women seemed to have erase whatever it was that was bothering her. \n\nI managed to get a bemused male employee to escort me out of the building. \n\nWhen Danni showed up that evening, she brought a large suitcase and stole half my closet. Apparently in our modern world, that's part of the engagement thing -- an expensive ring and closet space. \n\nWe called my mom and her parents; her mom initially seemed just a touch less enthusiastic than my mom, but she recovered quickly, so it might have just been surprise. \n\n### \n\nDespite Danni having a few months left on her lease, she essentially moved into my apartment, although the cost of parking spaces meant she kept her car parked at her place and either used a cab or had me pick her up. \n\nWe were both nearing the end of our programs, so time together was precious -- Danni had managed her classes so that she had only one class her last semester, but she was still working part time with the State OSI. I was pretty much finished at the Crimson, by the time I would be healed enough to go back on duty there, I'd be closing on the Bar exam. \n\nWe were still trying to figure out the details of when to get married. I actually got to talk to her mom on the phone a few times, and she seemed to be accepting the idea. My own mom was thrilled, especially once she learned Danni actually knew the traditional Hawaiian Hula. The two of them spent way too much time discussing my childhood misadventures. \n\nWe tried to figure out a good time to fly out so I could meet her parents, but her schedule kept getting in the way. It was all pretty distracting. \n\nSo I was only half tracking the progress of the crushing wheels of justice as they rolled inexorably over Tony Montana and his goons. Until they hit a bump in the personage of Judge Rosalind Parker. \n\nIn the initial hearing, Anthony Montangne and his men were not granted bail, but through legal maneuverings that I deplored, but took note of, they managed to get a second hearing with Judge Parker, who suddenly reversed her initial decision and granted hefty bail amounts, but they were well within his capability to cover. \n\nLess than 24 hours later, Danni's apartment was firebombed. \n\nI woke up at 3AM to the sound of pounding on the apartment door, the word \"Police\" was being shouted at the door. I grabbed my lavalava and checked through the peephole and saw Cassie with a squad of city police. Two of the cops were lining up with a battering ram. \n\nI hoped I would be loud enough for them to hear. \"Wait, I'm opening the door!\" \n\nAs soon as I yanked the door open, Cassie and her horde of police poured in. I held my hands up as they rushed past me, barely even glancing in my direction. \n\nTight faced and terrified, Cassie grabbed my arm, nails biting in sharply. \"Tell me Danni's here!\" \n\nBefore I could answer, Danni called from the doorway to the bedroom. \"I'm here.\" She'd apparently stopped to put on the sarong she'd claimed. As she stepped out, I could see she'd also grabbed her automatic. \n\nCassie let go of me gave Danni a huge hug. \"Thank God. When I got the call about what happened, I headed right over here.\" \n\n\"What are you talking about?\" \n\n\"They hit your apartment -- it's completely burned out. I was praying you were staying here, because they're still trying to put the fire out.\" \n\nI caught Danni's eye. \"I think Tony is taking everything personally. Everything.\" \n\nAfter seeing Danni's attack on his men, he must have figured out what happened to Joey D. \n\n\"Shit. Shit. Shit.\" Danni plopped into a chair. \"Maybe I need to leave. I don't need to bring them here.\" \n\n\"No. You're a lot safer here -- the building is a lot more secure than your old place.\" \n\nCassie called back to headquarters to let them know Danni was okay. \"The Director convinced the city police to put a couple guys on this building, at least for now.\" \n\nWe sat and commiserated about Danni's now permanent move-in while Cassie made arrangements for security. Danni took it a lot better than I expected. To her, the only real loss was her pictures and those could be replaced. \n\nCassie finished and sat down with us. \"Nice skirt, Derek.\" \n\nI shook my head but didn't say anything. Danni rolled her eyes. \"Crap, I should've had you change into jeans, now Cassie might be interested in you.\" \n\nCassie flushed bright red. \"I was trying to stay in character.\" \n\nDanni leaned toward her, wrinkling her nose. \"Three-drink-bisexual is a cover?\" She looked over at me. \"She gets a little handsy after a few shots.\" \n\nI thought Cassie was going to flee the room until Danni reached over and smacked her lightly on the knee. \"Relax, I know you weren't serious.\" \n\nCassie gave a tiny appreciative smile at being let off the hook. \"Let me check on the guys, then we can figure out what to do from here. Probably need to go to the office and see what the options are.\" \n\nAs soon as she left, we went to change; it was obvious there'd be no more sleep. \n\nDanni giggled as she pulled on clothes. \"Just between us, dancing with Cassie after a few drinks is like wrestling an octopus. That's no act.\" \n\n\"Well, I'm glad you chose me over her.\" \n\nShe gave a teasing, pretend-thoughtful look. \"It was a close call, but the tattoos tipped the scale.\" \n\n\"Then they were totally worth it.\" \n\nDanni looked very pleased with that. \"Just keep the Cassie thing to yourself. I think she's one of those 'seventy-percent straight' girls.\" \n\n\"Six jello shots and she'd do it, but she'd hate herself in the morning?\" I'd seen more than few women start making out with another woman at the club to get attention from guys, then forget they were doing it for an audience. \n\n\"Yeah. She might be able to deal with it someday, but not right now. Besides, I saw how she looked you over; seeing you without a shirt might have tipped her to eighty percent straight.\" \n\nWe ended up at the State OSI office almost half the day, while they tried to figure out what to do. Most of Tony Montana's guys seemed to be staying at the Mark Social Club. It used to be a small hotel, but Tony had it reworked into a small club with a couple top-floor apartments and a conference room. Knowing how interesting he was to law enforcement, he kept live security on it all the time, making it almost impossible to plant recording devices. They slapped surveillance on the site. The two cars of uniformed police were there as much to let him know they were watching him as to actually watch him. They were hoping it would put the brakes on his activity. \n\nDanni called her mom and told her she was safe with me. We had set up another time for us to drive out to her house so I could meet her parents, but it looked like another delay was going to occur. I managed to say \"hi\" to her Mom, but had to get moving to class. \n\nDanni and I set up schedules and times to check on each other. I wasn't too worried about her while she was at work, but school and home were a different story. \n\nFour weeks of wariness later, our problems simply evaporated. \n\n### \n\nCassie called this time at 3AM again. \n\n\"Let me talk to Danni.\" \n\nI rolled over and smacked Danni's bare butt. I knew she was awake, but she hadn't moved, hoping it didn't have anything to do with her. Sometimes my mom called; she never quite got the whole time zone thing down. \n\n\"Hey, Babe, it's Cassie.\" \n\nI tried to relax, but it didn't last long as Danni sat up abruptly. \n\nI couldn't hear Cassie, and Danni wasn't doing much talking. After she hung up, she was silent for a while. \n\nShe looked oddly haunted. \"Tony Montana is dead.\" \n\n\"Really?\" \n\n\"Some kind of gang hit at the Mark. A bunch of guys were killed. Everyone at the club. At least ten. Cassie says they don't know how the guys got in. The patrol men on surveillance duty will be suspended pending an investigation.\" \n\nDanni seemed more bothered by it than I'd have expected. I was in no way upset at the demise of the late unlamented Tony Montana. \n\nNeedless to say, the newspaper headlines were blazing for days. \"Massacre at the Mark\", \"Fourteen Killed in Gangland Hit\" were a couple of the milder ones. \n\nThe investigation team actually checked me and Danni out -- with the cameras on the building and the police out front, our alibis were pretty good. \n\nI asked Kelly to keep me up on anything related to the hit, just so there wouldn't be any surprises. She kept needling me about when I was getting hitched. \n\nDanni seemed \"off\" after the hit on the Mark. I didn't have any doubt about her commitment to me, but I couldn't even get her to talk about figuring out a basic time frame for the wedding. And when I joked about just running off to Vegas and getting hitched I thought she was going to have a panic attack. ",
        "Our plans to go out and visit her parents ended up getting shifted into the middle of my final exams, so Danni decided to go out alone this time. \n\nSomething about it bothered me, but I couldn't put a finger on it. \n\nThe second day she was gone, Kelly sent me an urgent message to meet her after class. \n\n### \n\nI met up with Kelly at the path that overlooked the water fountain. We leaned on the rail and watched people circulating around. \n\n\"What's up, Kelly? Your message sounded serious.\" \n\nShe glanced up and down the empty path. \"Derek, I trust you, but if any of this gets out, I'm fucked, John's fucked. I'm just trying to keep you from stepping into a shitstorm.\" \n\n\"What kind of shitstorm?\" \n\n\"Nobody's sure. DA, State Office of Special Investigations, the Feds, everyone is freaked the fuck out about that shit at the Mark.\" \n\n\"What's to be freaked out about? It's bad, but it's probably La Em or somebody else Tony Montana pissed off.\" \n\n\"From what I hear, the DA would give his first born son to make that true. Evidence points somewhere bad, real bad.\" \n\n\"What do you mean?\" \n\n\"One shooter. Somehow they got into the building despite our stake-out, maybe through an old utility tunnel -- it's a really old building. Nobody has said anything official, but word's leaked out of Forensics.\" Kelly's husband, John, worked in Forensics. She was taking a huge risk. \"One fucking shooter killed all of them. One fucking gun fired every bullet. Same guy killed them all. At least that's what they think. Can't be sure about the two in the basement by the utility and electrical room.\" \n\n\"Why not the two guys in the basement?\" \n\n\"They were both knifed. One guy just under the base of the skull into the brain, the other right through the left eye. A single wound each, no defensive marks.\" She glanced around. \"It gets worse. The four guards on the ground floor were caught in two different places, so that is understandable if he used a silencer. But there were eight guys in the meeting room, all of them were armed, somebody should have at least had a chance to return fire. None of them even got a weapon out. Every one of them was shot twice center mass, then shot in the head. The head shots look like they were done after the guys were all down.\" \n\n\"Jesus.\" \n\n\"It has to be a pro. The knife wounds. The Doc says the stab under the base of the skull is 'indicative.' That technique is only used by real professionals; they call it a 'Chinese Spoon.' Only elite military units teach it. He said it was very clean, the killer has probably done it a lot. It's not something that gets used a lot in most places. So the working theory is that the shooter is probably former special ops, they're guessing a professional hired in from outside.\" \n\n\"Tony came up in the East Coast syndicates, he might have crossed someone who bore a real grudge.\" \n\nShe shook her head. \"Doesn't wash, Derek, everything else points to someone sending a very loud message. The East Coast syndicates are more subtle.\" She bit her lower lip for a second. \"There's a rumor. A 'friend of a friend' thing, nothing more. Story is, an out of town OMC delegation showed up, sent as messengers by 'parties unknown'; they were told to put the word out that the clubs are off limits, and anyone who pushes it gets the same treatment as Tony Montana.\" \n\nOutlaw Motorcycle Clubs -- OMCs -- are often used to run drugs cross -country, so they tend to have a lot of contacts. \n\n\"At least some of the reps from the OMC almost certainly know who they're carrying messages for.\" \n\n\"The rumor says the OMC reps are disinclined to share that information for fear of becoming statistics.\" \n\n\"Did they say why the clubs are off limits?\" \n\n\"They didn't give specifics, just consequences. My best guess is that one or more of the clubs is part of a money laundering network.\" \n\n\"You may have a war on your hands.\" \n\n\"Don't think so. Whoever it is made their point. The clubs are toxic. Hell, they're fucking plutonium now, nobody wants to touch them.\" She glanced around. \"Derek, it isn't just the fourteen guys at the Mark. That'd be bad enough, but least ten more of Tony's guys disappeared either that day or within a couple days before. Maybe more, maybe as many as thirty all together. In three fucking days. This wasn't a hit, it was extermination.\" \n\n\"Nothing in the papers about the others.\" \n\n\"Nothing to tell, no bodies, no reports. They might have run for it, but nobody's buying it.\" \n\n\"Jesus. So now what?\" \n\n\"Everybody goes back to their lives. The clubs could be worth a lot of money as distribution points, but they sure as hell aren't worth tangling with anyone willing to do this. As for our side, nobody wants to even think it, much less say it out loud, but I think everyone knows it's for the best not to chase this. The DA will wait it out; it's a case of bad people killing bad people, so it won't get much political traction. Maybe make it out like you said; 'a grudge from the past' would play well in the news. Everybody would want to believe it.\" \n\n\"So what do I do?\" \n\n\"Stay the hell out of it. Walk away. We'll keep the clubs under close surveillance. But whatever happens it isn't your problem.\" \n\n\"I got it, Kelly. I'll stay out of it.\" \n\nShe silently watched as a couple holding hands walked by. \"So when are you and your girl tying the knot?\" \n\n\"We haven't set a date.\" \n\n\"Why not?\" \n\nI explained the whole issue with meeting her parents, and Kelly seemed a little thoughtful for second. \n\n\"You haven't met her parents?\" \n\n\"I've talked with her mom on the phone.\" \n\n\"But not her dad?\" \n\n\"Well... no, not really.\" \n\nShe was silent for a bit. \n\n\"What Kelly?\" \n\n\"Maybe nothing, but... maybe she thinks her dad won't like you.\" \n\nKelly obviously had more to say, so I prompted her. \"Why?\" \n\n\"You're kind of... ethnic.\" \n\n\"What the fuck does that mean?\" \n\n\"You may not have noticed, but you're not really 'white,' ya know? Big fucking goon like you with real tribal tattoos all over him... kind of Conan the Barbarian looking. Maybe she's worried a little about daddy's reaction.\" \n\n\"Seriously?\" \n\nShe shrugged. \"I said 'maybe.'\" \n\nKelly's words ate at me, and the morning after I finished my last exam, I decided to finish this one way or another. I packed up my F150 and started the 8 hour drive to her parent's house. \n\n### \n\nI knocked on the door and waited. \n\nI was expecting Danni, or her mom, but instead I found myself staring at her father. \n\nAs often as I seen his picture, the scars were still jarring, especially that grey-white eye. \n\n\"You must be Derek. I've been wondering when Danni was going to bring you around.\" \n\n\"I think she was trying to find the right time.\" \n\nHe smiled, although it seemed oddly remote, oddly un-charged for a guy meeting his daughter's fianc\u00e9. There was just a strange, unreal feeling to the whole thing. \n\n\"Danni and Anne had to pick a few things up. I expect them back in couple hours.\" He moved to the side. \"Come on in, you can help me getting dinner ready.\" \n\nAs he led me through the house, down the stairs and through the walkout basement doors, I looked around. \n\nThe house was neatly kept, about what one would expect for a college history teacher; more shelves of books than the usual house. \n\nThe really odd thing was the pictures. Every surface of every room seemed to have pictures. Danni at every age. Her two brothers. Two absolutely beautiful golden-haired little girls whose resemblance to Danni's friend Angel was unmistakable. There just couldn't be another Angel on the planet. \n\nJust outside the patio doors, he had a huge outdoor kitchen. I had to stop for a second to take it in -- any guy would. Two grills - one gas, one charcoal - a smoker, a pizza oven, a sink and what seemed like miles of preparation surface. \n\n\"Did you build this?\" \n\n\"The whole family built it. The kids and I probably put four months of work into this. We built it together.\" There was finally a personal feeling there, a bit of pride. \n\n\"You take barbeque pretty seriously.\" \n\nHe gestured to a pile of vegetables on the countertop. \"I always have.\" \n\nWe talked for while as he sliced vegetables with rapid, sure strokes of what looked like a very expensive chef's knife. Patterned layers of steel caught the sunlight. He noticed me looking at it. \n\n\"It's a handmade Damascus steel blade. It was a going away gift from my last military unit.\" \n\nHe talked me through the process of getting his charcoal grill ready for steaks. Apparently a gas grill was okay if you were in a hurry, but charcoal was the preferred medium. \n\nHe asked about my plans in a sort of interested-but-disconnected way. I got the feeling he was judging my every decision, but as if it had no impact on him. \n\nThe only time he seemed interested was when I talked about Danni's plans. There was a spark, something that felt real when we talked about her. \n\nI finally finished getting the charcoal grill set up for dinner. \"Do you want me to light this?\" \n\nHe glanced at the set up. \"I don't use lighter fluid, it taints the fire. There's some kindling over on your left. There's a lighter in the family room next to the fireplace.\" \n\nI rearranged the charcoal - lump charcoal, obviously from his purist streak when it came to steaks and grilling, then headed in to the family room. \n\nI found the lighter on top of the mantle. That's when I realized I was a dead man. \n\nIt was just a picture, an old, faded picture in a cheap metal frame that told me. \n\nI stared at the picture, dominos in my head falling until everything snapped into place in a sudden jolt. \n\nEleven guys in unmarked tactical uniforms, all grinning into the camera, all holding weapons with the easy confidence of true warriors. Some kind of special operations team. A movie-star good-looking guy in the back, holding some kind of long rifle. A white haired man off to the side, obviously the oldest of the bunch. And in the center, on one knee, utterly relaxed and confident, was Danni's father. Uninjured, unscarred. His tactical vest had two crimson eyes dead center on the chest and he held what looked like an MP-5 submachine gun -- some police tactical teams use them, so I recognized it. But his had the thick heavy cylinder of a silencer on the front. \n\nSurvival in the ocean. Don't panic, don't even move until you have to, until you know which way to move. I studied the picture, the guy in it was different, his face showing life in a way that Danni's father didn't. \n\nThe hair on my spine stood, warning me. Memories of meeting nuihi in the ocean. At first you don't see anything, then a peculiar black spot floating in the water. Slowly, ever so slowly, the massive streamlined body of the shark coalesces around that dead, cold, eye. \n\n\"The Hero picture. Anne has always liked that picture. Usually makes sense to keep a few old ones out. People might find it odd otherwise.\" Flat, cold, utterly emotionless. His real voice. \n\nThere was no sense in pretending. \"The killings at the Mark.\" \n\n\"Danni is very important to me.\" \n\n\"Whoever killed those men had to be fast. I've seen Danni fight. She must have gotten that speed and those reflexes from you.\" I paused, nodding slowly toward the picture. \"One theory is that a silencer was used, otherwise the shootings on the first floor would have alerted the men upstairs.\" \n\nJust silence behind me. \n\nI waited a second, then pushed on, trying to make it conversational. \"It makes sense, except for the meeting room. Eight guys in one room? Even with your speed, one of them should have cleared a gun, gotten at least one shot off.\" \n\nThe cold voice. \"A shooter wearing night vision gear, using a silenced weapon and subsonic ammo, with an integral flash suppressor has a huge advantage if the lights are cut just before he enters. If they aren't really expecting trouble because they know there are police outside. If he's fast enough.\" \n\nI remembered the hard core of basalt I'd sensed in Danni's mother and didn't have to wonder who would have tripped the breakers in the basement while standing between dead bodies. \n\nI turned slowly to face him. He'd stopped pretending. He was standing as still as stone in the doorway, his clear, cold eye looking through me with detached calculation. Impassively calm and inhuman. Danni's \"warface\" during the fight at the club was really just an imitation of this, the real thing. The chef's knife was in his hand, the blade resting along the inside of his arm. The blade seemed more alive than he did, light from outside shimmering silently up and down the ornate patterns of the steel. \n\nIt's funny how the old stories start to make sense. Mano Kane. Half man, half shark. Ruthless. Lethal. \n\nHe was thinking something through. Not wondering if he could kill me; that was the easy part. He was certain he could. So was I. Even with my size and strength. The precision of the kills in the basement. Danni's nightmarish speed, with the training and experience of a true killer. \n\nKilling me would be no challenge at all. \n\nNo, he was wondering if he had a reason not to, and how to explain it to the one person that mattered in this whole thing. Maybe in his whole world. \n\nDanni. \n\nThis was all about Danni. \n\nI glanced down, catching sight of my right wrist and the ornate shark tooth tattoo patterns that ran up my arm. A single word suddenly crystallized in my thoughts. A word from one of the old tales. \n\nThe old legend came flooding back. An ancient story, told by firelight. Not Mano Kane. \n\n\"I know you, 'Aumakua.\" \n\nI sensed a slow deliberate turn, a cold recalculation. A tiger shark moving in the water, turning away just a bit. \n\n\"My Grandfather used to tell me stories. We have the same goal.\" \n\nHe gave a wordless tilt of the head, a gesture for me to go on. He had the infinite patience that came with already knowing the outcome of the looming storm of violence. \n\n\"My Grandfather said that when a man dies, if he dies in the right place, in the right way... a warrior in battle, maybe... sometimes, that man can choose; he can stay, and be 'aumakua. Guardian to his family. He assumes another form; an owl, an eel. Or maybe, more often, a mano or niuhu. A shark. His family cares for him, and he watches over them in turn.\" \n\nI pulled a breath in. \n\n\"I know you 'Aumakua. I know what you want. I proved what I want. I put myself between her and death, and I will do it again as often as I have to. We want the same thing for Danni.\" \n\n### \n\n\"Dad?\" Danni's voice was hollow, a bit fearful. She must have seen my truck out front, realized what it meant. \n\n\"In the kitchen, Danni.\" \n\nShe came in slowly, pale, and her eyes widened slightly when she saw me standing next to her father, preparing steaks for the grill. \n\n\"Dad?\" For the first time since I'd met her, I heard cold hard fear in Danni's voice. \n\nHe looked over at her and I could see real humanity in his face. \"We were just getting everything ready for dinner and wondering if you were about ready to set a date for the wedding.\" \n\nDanni looked back and forth between us with a mix of disbelief and wonder, then rushed forward and hugged him fiercely. \"I knew you'd like him!\" \n\nHe smiled at her and kissed the top of her head. \"He'll do fine, we understand each other.\" \n\nHe slowly let her go and walked out down the stairs, the tray of steaks balanced in one hand. \n\nDanni pulled herself against my chest. \"I'm sorry, I didn't know how to... introduce you to each other.\" \n\n\"Shhh... it's okay. I get it.\" I really did. How do you tell someone? Most people would never believe her, never understand that she was the daughter of... whatever he was. She'd been buying time, trying to find a solution, a way out for all of us. Me. Her. And her father. \n\nBut there was only ever one way out. The Monster had to find me worthy of his most valuable treasure. \n\nHer voice was muffled against my shirt. \"I know it's kind of girly, but I want a big wedding. The white dress. Both our families. Everything. I'm only going to do this once and I want it to be traditional.\" \n\nI ran my fingers through Danni's hair. It felt right; Danni and I belonged together. I knew Danni would put everything she had into our marriage. She was only going to do this once. And so would I. We had to. \n\nA traditional wedding sounded about right. My mom was big on traditions, so the dress, the cake and everything would be a big hit with her. \n\nAnd of course traditional vows. The missionaries to Hawaii had used the Book of Common Prayer. \n\nEverybody knows the wedding liturgy from that book. \n\nThey're ones that end: \n\n\"Til Death do us part.\" \n\nPost Production Notes \n\nWhen Danni showed up married and pregnant in \"Pogo's Very Long Day\" I immediately wondered what kind of man could possibly marry Monster's daughter. This story is the answer to that question. \n\nI won't go into the Hawaiian words, since I kept them to a minimum, and most of them are explained in the story anyway. I should mention that \"kefe\" is actually Samoan, but using it is a good way to get your ass kicked nearly anywhere in the Pacific. Samoan doesn't really have \"bad words\", it is use and tone of voice that are usually an issue, but \"kefe\" is widely understood to be very insulting. \n\n\"Kefe\" really means to cut away or circumcise, but it has evolved to indicate a particularly vile or putrid person. \n\nFor those that are interested, a part of Belle Anderson nee Markham's story is told in \"The Marker.\""
    ],
    "authorname": "Todd172",
    "tags": [
        "violent",
        "crime",
        "the shack",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-the-guardians"
}