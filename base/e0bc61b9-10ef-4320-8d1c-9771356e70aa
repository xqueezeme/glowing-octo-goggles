{
    "title": "Big Dick Diplomacy Ch. 03",
    "pages": [
        "Author's Note: Please mind the change in category for this chapter. If anal isn't your thing, please skip this one.\n\n*****\n\n\"And in another move that's leaving many pundits scratching their heads, Senator Victoria Blumanthall of Maryland put out another statement this morning about her ongoing efforts to support the president. Blumanthall, considered by some to be one of President Radford's strongest critics, has pivoted to his camp in recent weeks, leaving party leaders and voters confused by her recent actions,\" said the talking head on the screen. \"The Radford Administration has formally welcomed her aid, and called her a crucial ally in achieving reform for the American people. Back to you, Pete.\"\n\n\"Crucial ally indeed,\" said Tom with a soft chuckle as he clinked a glass of wine with Victoria from the personal quarters of the White House. \"It would appear that your change of heart is being noticed by the press.\"\n\n\"Fuck them,\" said Victoria with a shrug of her shoulders. \"They never had anything good to say about me in the first place.\"\n\nTom laughed. \"Join the club.\"\n\nShe took a long drink from her glass before looking around the room. \"We really need to spend more time here instead of my place. There's just something so fancy about fucking under a portrait of Andrew Jackson.\"\n\n\"Is that what you were looking at?\" asked Tom, gesturing to the 18th century painting. \"I would swear you might like him better than me.\"\n\nVictoria rolled her eyes and smiled. \"About the only thing he has going for him is that he's on the twenty dollar bill. Meanwhile, you have about twenty inches of meat right here that I'm very fond of.\" She reached between his legs, casually stroking his cock under his slacks.\n\n\"If it were actually twenty, we'd be taking you to the hospital after we had sex,\" joked Tom. \"It's not that big.\"\n\nVictoria purred anyway. \"Big enough for me. Perfect fit in my tight pussy and you know what else, Tom?\"\n\nHe shook his head.\n\nShe opened her mouth and brought it down to his lap. Victoria found where his cock was and slid her mouth along the shaft. \"It fits just perfectly in my mouth too.\" Her fingers then began to work at the button and zipper.\n\n\"I have noticed that as well,\" said Tom softly as his slacks soon hit the floor. Victoria grabbed his shaft in both hands and began to stroke it while she blew hot air against the tip. \n\n\"I can't get over how large you are,\" she said with an excited giggle. \"Are you part elephant or something?\"\n\nTom chuckled. \"This is all me.\"\n\n\"Fuck it, I don't even care. I just want to suck you, fuck you, do everything to get that cum,\" she moaned before taking the tip into her mouth. \"I may just share you with one of my friends in the Senate.\"\n\nTom raised an eyebrow. \"Who would that be?\"\n\nVictoria grinned. \"One of your favorite people. Senator Rodriguez from New Mexico.\"\n\nTom felt his cock lurch forward. Senator Alexandria Rodriguez was one of the youngest members of the Senate. Not only was she young, but she was incredibly sexy to boot. With lovely honey brown skin and dark, sexy eyes, the Latina senator was a frequent topic of discussion among the male pundits and not just for her politics.\n\nVictoria noticed him thinking the matter over and jerked him harder. \"I bet you would love to fuck her, wouldn't you? To watch that sexy Latin ass ride you?\"\n\n\"You know, the last time you mentioned adding riders, I thought you were talking about the bill. Not me,\" said Tom with a throaty chuckle.\n\n\"The perks of being the president,\" she answered with a playful shrug before her mouth resumed its activities on his cock. Tom groaned in pleasure as she suctioned the tip, applying firm pressure against the sensitive glans. \n\nVictoria popped his cock out of her mouth. \"Maybe I'll let Alex ride you hard so I can sit on your face. I bet you'd fucking love that, wouldn't you?\"\n\n\"Keep talking like that,\" panted Tom. \"You're going to make me cum so hard with your dirty mouth.\"\n\nShe grinned wickedly and suctioned the tip once more before taking as much of him in her mouth as she could handle. Even someone as talented as Victoria could only get a little more than halfway down. The rest of his shaft she worked with her hand.\n\n\"I bet you'd love to pump your cum deep in that perfect ass of hers. Do you think she speaks English or Spanish when she cums, Tom?\" said Victoria, laying it on thick. \"I want to find out either way while your tongue is buried in my pussy.\"\n\nTom felt his hips thrust forward involuntarily as she once more put the tip back in her mouth. While she worked him for a few moments without her hands, she reached into her blouse to pull her tits out of the lacy blue bra underneath.\n\nVictoria smacked the head of his cock against her nipple. \"Give me all that cum, Tom. I want to wear it all over me for the rest of the night. Cover me and show everyone whose slut I am.\"\n\n\"So close,\" he said with a heavy breath. Victoria locked her eyes on him as she continued to suck, making an already intensely erotic connection even hotter.\n\nTom felt his orgasm spew forth from his loins as a thick load of cum erupted from the tip. Victoria pulled him out of her mouth and jerked him furiously as each heavy rope of cum coated her face, neck, and the top of her breasts. She let out a loud moan as a particularly large shot hit her cheek, and she used the tip to smear it around her skin.\n\n\"Just delicious,\" she said finally, after being dossed with all his fluids. She then began to suck each finger, taking generous dollops of his cum and depositing them directly into her mouth. \"I'll never get enough of that.\"\n\n\"Nor will I while watching you do it,\" said Tom softly, still recovering from his orgasm.\n\n\"Sometimes I wonder what the people would think if they knew what a depraved whore I am,\" said Victoria with a girlish giggle.\n\n\"I don't know, but I much prefer this version of you to any other,\" said Tom with a chuckle.\n\nShe grinned and sucked off some more of his cum. \"I bet you do!\"\n\nAfter a few minutes of clean-up, Victoria returned to his side on the couch, but she didn't stay there for very long. Soon enough, she was putting her boots back on and appeared like she was ready to leave.\n\n\"Where are you going?\" he asked, watching her check her face in the mirror to make sure she hadn't missed any cum.\n\n\"I have to be going soon,\" she answered matter-of-factly. \"I have a flight to New York first thing in the morning, and I need to get some sleep.\"\n\n\"You can sleep here if you want,\" he offered. \"I have plenty of beds, including my own.\"\n\nVictoria smiled and shook her head. \"Thank you, but I don't want to let the press get any sight of me doing the walk of shame tomorrow morning. Another time perhaps.\"\n\n\"Perhaps,\" muttered Tom as he watched her finish getting ready. All too soon, she offered an affectionate goodbye before she was out the door.\n\nTom sighed as the room went quiet save for the television set, which was now broadcasting some political program that he couldn't care less about. He turned the program off, preferring complete silence in the moment, but it was only another reminder of being alone.\n\nIt wasn't that he expected Victoria to stay the night. Both of them knew that could lead to no good outcome, especially if anyone found out about it beyond the staff. Yet, just once, he would have preferred the company. It had been too long since he'd woken up with a woman, and even despite his outlandish sex life, it did little to fill the loneliness inside him.\n\nFeeling restless, Tom quickly left the main room and made his way to the West Wing, entering his office and finding a small pile of work to occupy himself with. Despite the late hour, it was morning in Asia, and he expected to hear all the latest news out of the continent very soon.\n\nHis expectations couldn't have been more true. \n\nHis Chief of Staff, Chris Bridges, soon entered the room. It wasn't unusual for the man to be here this late. In fact, Tom often wondered when the man actually went home.\n\n\"Sir, we have a problem,\" said Chris as he moved toward the president's desk.\n\n\"What now? Who's trying to overthrow their government now?\" asked Tom.\n\n\"It's the Chinese,\" said Chris grimly. \n\nTom stiffened and then scowled. \"And how does President Feng Jin plan to make my evening interesting?\"\n\nChris flinched. \"You know the summit in Greece we've been working toward for the last two months? For the trade negotiations?\"\n\nTom nodded, remembering the entire reason for the talks with the Chinese president. With the Chinese pivot to Europe, Tom wanted to make sure the United States was an equal partner in any trade negotiations to their traditional partners. That meant a meeting in Greece, where a large majority of Chinese investment was taking place.\n\n\"President Feng has canceled their involvement in the summit,\" said Chris with a regretful look. \"He's stated that your previous objections to any concessions on the part of our government makes this meeting wholly unnecessary.\"\n\n\"Son of a bitch,\" swore Tom. \"I can't have them pull out of that summit. It's too important. My base expects me to be tough on the Chinese, and without them, we can't bring home any real chance of success.\"\n\n\"We have requested their reconsideration through the Secretary of State, but I wouldn't get my hopes up about it,\" said Chris. \"We've also heard a report from our aircraft carrier in the region. Apparently, the Chinese keep getting too close to it. Most likely, this is in response to Feng's pivot away from us.\"\n\nTom leaned back further in his chair. \"One problem solved and another one appears. I'm starting to think this is the nature of the presidency.\"\n\nChris smiled. \"It appears that way, sir. I'll let you know what we hear back from the Chinese. Also, the South Korean President is complaining about North Korean missile launches again.\"\n\n\"Anything dangerous?\"\n\nChris shook his head. \"Not even close. Our satellites show their missiles barely left the launch pads. But you know how the South Korean President is.\"\n\n\"I'll have a phone call with him later,\" promised Tom. \"And let me know if the Chinese pilots continue to act in a hostile manner toward our carrier.\"\n\n\"Will do, sir,\" said Chris finally before pulling out one final folder. \"By the way, I know we've been talking about a replacement for Phil Wentz as press secretary.\"\n\nTom groaned. \"We need to get moving on that. The situation gets worse by the day. Phil will be lucky to escape the briefings in one piece any day now.\"\n\n\"We have three candidates ready for your review,\" said Chris as he waved the folder. \"All of them come with the highest recommendations, and they've been vetted by my staff. Each would make a worthy addition as press secretary.\"\n\n\"Let me see that folder,\" said Tom as he opened his hand. He flipped through the first briefing, detailing a man whose name seemed vaguely familiar to him, but somehow he couldn't place it in any context.\n\n\"I know this name. Steven Cooper. Why do I know that name?\" asked Tom as he rubbed his chin.\n\n\"He's the son of a major donor to the party,\" said Chris. \"You can usually see him on MSNBC most Sundays.\"\n\nTom groaned once the recognition hit him. \"I remember that asshole. He's the one that called me an 'embarrassment to politics' and a 'barbarian amateur' during the election, wasn't he?\"\n\nChris started to turn red. \"He did come highly recommended by the party.\"\n\n\"Of course he did,\" said Tom, putting his hands over his face. \"You really expect me to hire this clown who trashed me so badly? When the press is raking me with questions, I'd half expect him to join in with them.\"\n\n\"Not entirely, no,\" said Chris with an innocent face. \"That's why I gave you two other options.\"\n\nTom rolled his eyes. \"When do I have to meet with them? How soon are we doing this?\"\n\n\"Tomorrow work for you? I want to get Phil out of there as soon as possible. I'll let you sit down with all of them and do your own vetting. Whichever one you like most will get the job.\"\n\n\"I hope these other two candidates are a lot better than the first,\" grumbled Tom. \"Or Phil might be holding that job a lot longer than anyone would like.\"\n\nChris grinned. \"I'm sure you'll find someone to your liking, sir. I'm not going to bring you just anyone after all.\"\n\n\"We'll see about that,\" said Tom as he continued to flip through the folder.\n\n*****\n\n\"I'm so glad that you decided to give me a shot at this,\" said Steven Cooper with a greasy smile as he waved his hand around. \"I was hoping that you might be willing to let bygones be bygones.\"\n\nTom bit his tongue, wanting so badly to jump on that statement and tear Cooper a new one, but he didn't give into his instincts. \"Well, you came highly recommended. And I'd like to know what you'd bring to the position that we don't already have?\"\n\n\"So very much,\" said Steven before taking a large drink of water. \"Listen, Phil Wentz is clearly at the end of his rope. I'd be worried about that guy going off on a stabbing spree one day\u2014he's that close to the edge. What you need is someone with poise and class, but also someone who can stand up to the press when they're asking tough questions.\" Steven took a deep breath. \"That's me all the way.\"\n\nTom maintained his polite smile. \"Part of the position is being nonpartisan as well as being likeable enough to not attract the wrath of the press. Do you think you could maintain your composure in that regard?\"\n\n\"Oh, absolutely,\" said Steven with a haughty attitude. \"I'm a true professional when it comes to talking to people of all walks of life. I think you'll find me consummate in my abilities and skilled in dealing with others.\"\n\nTom was trying hard not to laugh. This very same man, who not only trashed him so badly during the election, was quite the opposite in being skilled with others. When he appeared on television, he was often rude and combative to his hosts, other politicians, and even those that appeared to share the same opinions. The fact that he seemed so convinced of his abilities only demonstrated how unsuited he was for such a delicate position.\n\nTom closed the folder in front of him and resumed his polite smile. \"Thank you so much for coming, Steven. We'll be in touch with you soon.\"\n\n\"I certainly hope so,\" said Steven as he stood up and offered a handshake. Tom took the clammy hand and shook it as quickly as he could to get away. \"I have some big ideas on what we can do with the position! I can't wait to discuss it further with you.\"\n\n\"I'm sure,\" said Tom as the man headed for the door. \"Have a good day, Steven.\"\n\nAs soon as he was gone, Tom let out a loud groan. The time spent with Steven was time he'd never get back. It didn't make it any better when Chris entered the room wearing a tepid smile.\n\n\"Not as bad as you thought?\" asked the chief nervously.\n\n\"Worse,\" croaked Tom. \"The arrogance of that man. Especially thinking he could blow all that smoke up my ass like I'd just forgotten what he said about me.\"\n\nChris shrugged and handed him the second briefing. \"Perhaps this next one will be better. Meet Melanie Rivas. I'll give you a moment to review before sending her in.\"\n\nTom didn't take long to look over her briefing, having already read the lion's share of it last night. While her credentials were in order, this was also someone who wasn't used to the limelight. None of her experience involved being in front of cameras or possibly being accosted by the press.\n\nUnfortunately, Tom's worries about her lack of publicity showed itself during the interview.\n\n\"T-thank you so much for meeting with me, Mr. P-President,\" said Melanie with a heavy stammer after she sat down at the desk. Mrs. Rivas was about mid-forties in age, but her hair was already turning gray at the temples. She wore large-framed square glasses that aged her another five years and clothes so unflattering to her figure that she might as well have came from a nursing home.\n\n\"I'm so pleased to have you here, Mrs. Rivas,\" said Tom with a friendly smile. \"You came to us highly recommended. How many years have you been a party strategist?\"\n\n\"Nearly twelve now,\" she said before adjusting her glasses nervously. \"You can call me Melanie though, sir.\"\n\n\"Twelve years is a long time, Melanie. Twelve years ago, I wasn't even on the radio yet,\" said Tom, trying to make a joke to liven her up.\n\nShe gave an awkward laugh and continued on. \"All in service to the party, sir. And this would be the highest honor yet! Press Secretary, oh wow! I never thought I'd go anywhere higher than being a strategist but here I am.\" Melanie let out another nervous giggle. \"I'm sorry for this, sir. It's not every day that I get to meet the President.\"\n\nTom smiled politely. \"Don't even worry about it, Melanie, but if you don't mind me asking, how do you feel about taking the job? You do know what the job entails, right? The press can be merciless.\"\n\nMelanie swallowed heavily as a look of fear passed in front of her face. \"I'm sure with enough time I can do a perfectly adequate job.\"\n\nTom pursed his lips. He didn't want someone who could just do an adequate job. He wanted the best, and someone who he didn't feel like he might be sacrificing to the wolves for every briefing. He could well imagine Melanie giving her first press conference and stammering through the whole thing before she broke down in tears at the first sign of resistance. \n\nNeedless to say, it wasn't a good image.\n\nStill, he had to try to let her prove herself to him. \"Melanie, what's your go-to method for managing conflict with your peers? When you're pushed, how do you respond?\"\n\nShe took a long gulp of water before answering the question. \"I find there's not much that can't be solved by talking out the problem. And I'm not always right by the way. I can be open-minded enough to admit when I'm wrong!\"\n\nTom watched a mental image in his head of her repudiating his own policy decisions just because some reporter convinced her it might be \"wrong.\" He didn't need to see anything further.\n\nHe made some more small talk with her for another ten minutes in recognition of her time and then politely ended the interview. Upon his return to the office, Tom reclined deeply into his chair and sighed heavily. Both of those two interviewees could never get the job. If they thought things with Phil were bad now, he could only imagine them with Steven or Melanie in front of the microphone.\n\nChris came into the room not a moment later. \"Well, what did you think? Find a new press secretary in there?\"\n\nTom raised his eyebrows in a deadpan manner. \"You have to be joking, right? Tell me you're joking, Chris.\"\n\nThe chief of staff started to chuckle. \"They couldn't have been that bad?\"\n\n\"Oh, they were worse! I'll never hire that Cooper jackass because he makes me feel like taking a shower after ten minutes in the room with him. And that poor woman. She wouldn't last two briefings before she had to be admitted for therapy. No, no, they just won't do,\" said Tom with a firm shake of the head.\n\n\"Well, I still have one more option left,\" said Chris with a hopeful expression. \"I think you'll find she's a very sharp young woman. She has a great head on her shoulders.\"\n\n\"I hope she's much better than the other two,\" muttered Tom. \"Who's daughter or niece does she belong to?\"\n\nChris chuckled. \"Congressman Buchanan's sister-in-law. But she's been wildly recommended, and I'm told her pedigree is top notch.\"\n\n\"We'll see about that,\" said Tom. \"It can't be any worse than what I just witnessed.\"\n\n\"I can send her into the interview room shortly. Or do you need more time before you're ready for her?\"\n\nTom waved his hand. \"No, send her in here. Let's get this over with.\"\n\nChris left the room quietly, allowing Tom to take brief notice of the agenda for an upcoming call with the Russian President scheduled for tomorrow morning. He'd already determined if this candidate was another poor one, he was going to excuse himself by asking for a need or prepare more for that call. When the door to the Oval Office opened again, Tom took a deep breath to ready himself, only looking up at the last minute to see the final applicant.",
        "And what a sight she was.\n\nAs she walked into the office, Tom couldn't remember ever seeing a sexier redhead in his entire life. Her hair was a deep dark red, almost auburn in color and it cascaded in waves down well past her shoulders. Her eyebrows were thin and dark, and her eyes were some of the bluest that he'd ever seen. She had a small nose and a pair of pouty lips that instantly had him thinking thoughts not appropriate for an interview. When she smiled, her teeth were immaculate and bright enough to light up the entire room.\n\nHer dress was business smart and sexy. She wore a deep red blouse that was just a shade brighter than her hair and that struggled to contain her impressive bustline, which Tom had judged as possibly a C or a D cup. The blouse tapered down to a thin waist before tucking into a long gray pencil skirt that ended right at the knees. Her most attractive feature was her ass, and even from the front of her, Tom could tell her wide hips and tight skirt held the kind of bottom he'd love to get behind.\n\nSince red seemed to be the color of the day, she finished off the outfit with a modest set of red heels with just enough height to straddle the line between professional and sex pistol.\n\nFor once, Tom felt like it was his turn to stammer, and if it wasn't for her friendly smile as she stopped at his desk, he might have forgotten where to start.\n\n\"Forgive me, where are my manners?\" said Tom, shaking his head in recovery. \"Welcome to my office.\"\n\n\"It's such a pleasure to be here, Mr. President,\" replied the redhead with a sultry yet confident voice. Even such a simple response as that already had the blood rushing to his cock. \n\n\"You must be Mrs. Sutter, right?\"\n\nShe smiled. \"That's Miss Sutter, but please call me Chelsea. I always feel like I'm in trouble when I get called that.\"\n\nTom chuckled. \"I feel the same way when people call me Mr. President.\"\n\n\"I can call you Tom then if you're all right with a first name basis?\" she offered.\n\n\"Sounds perfect to me,\" replied Tom before pulling out her briefing. As hard as he tried to pay attention to the words on paper in front of him, he couldn't help but check her out. Her blouse had one button undone that shouldn't have been, giving off the perfect view of her magnificent cleavage. All that milky skin begged to be touched. \n\n\"I'm sorry, do I have something on me?\" she asked finally, patting away at her blouse after she undoubtedly caught him in the process. \n\n\"No, no, you're just perfect,\" replied Tom, resisting the urge to turn red in the face. Presidents do not blush. Get ahold of yourself, Tom.\n\nHe went back to scanning the briefing. \"Let's see here, third in your graduating class at college, some very nice extracurriculars like the debate club,\" muttered Tom as he read more of it. \"Been on the radio for five years and the last six you've been on local television. Member of our party since 2008.\" Tom looked up at her. \"So you're no stranger to the camera, and you can hold your own against others?\"\n\nShe grinned. \"I can fly with the best of them, Tom. You give me a microphone, and I'll do the rest.\"\n\nTom nodded, finding himself smiling as he continued down the briefing. \"So why me? Why do you want to come work for my administration?\"\n\n\"You mean besides the fact that my brother-in-law got me in the door?\" she countered with a raised eyebrow.\n\nTom let out a small chuckle. \"Sure, let's talk about the elephant in the room.\"\n\nShe shrugged. \"I understand you need connections to play at this level. When my sister and her husband mentioned the opportunity to me, I thought it would be an amazing career opportunity. I could finally get a chance to get to the next level, all the while working for someone I really respect.\"\n\n\"I don't hear that R word thrown around to often around here,\" said Tom. \"What do you respect about me?\"\n\nChelsea locked eyes on him. \"The fact that you're not afraid to be who you are. That you don't try to be something you're not. You're not much of a politician, Tom, if you don't mind me saying so.\"\n\n\"The pundits have been saying that for two years now,\" he replied jokingly.\n\n\"They're right, but that's what makes you a good president,\" she continued. \"You don't play into their bullshit, and you keep your base front and center on everything you do. Everyone thought you were going to roll over and die on that campaign promise for that jobs bill, and it just got signed into law a couple weeks ago. I think you're finding your stride.\"\n\n\"Well, at least you know how to coax your boss and make his ego swell,\" said Tom with a short laugh. \"How would you be with the press? There's some real sharks out there.\"\n\nChelsea grinned. \"Kill them with kindness? Or just beat them over the head with facts until they look stupid? I'm not preferential to one way or the other, as long as they know that what you do and say is to be respected, and that I'm the mouthpiece of the administration. And you know something, Tom?\"\n\n\"What's that?\"\n\nChelsea leaned in as a stray strand of red hair slipped in front of her ear. \"I'm very good at convincing others to do and think what I want.\" She ended it with a friendly smile as she reclined back in her seat.\n\n\"Well, you certainly seem to have persuaded me,\" he said, closing the file in front of him. \"Listen, this is all well and good, and you say the right things. You look the part, maybe too good at that too.\"\n\nShe looked down at her outfit and frowned. \"What do you mean? Is this too much?\"\n\n\"No, no, I just mean you're so stunning that they won't care what comes out of your mouth as long as they get to watch you say it,\" said Tom with another laugh. \n\nChelsea didn't respond right away, but he caught a glimpse of her eyes looking down to his lips before flickering back up to his eyes. It was a subtle movement, only occurring in the space of a second, but it didn't escape his notice.\n\n\"Thank you, Tom,\" she said demurely, placing that stray strand of hair back behind her ear.\n\n\"So here's the deal. I like you, Chelsea. You fit the part, and you're the best person I've interviewed for this role,\" he said as he leaned back in his chair. \"But one thing still bothers me somewhat.\"\n\n\"What's that?\" she asked.\n\n\"Your experience,\" he replied. \"Most people expect the press secretary to be some middle-aged man that's put his time in. You're young and attractive, and while you have that going for you, it does make me question whether you can really handle the limelight when it's time to go.\"\n\nChelsea nodded. \"What are you suggesting?\"\n\n\"A test run perhaps?\" he offered. \"We can try you out in front of the administration just to see how you do and make any possible suggestions. Then, if all is well, we can go prime time with this.\"\n\nChelsea smiled. \"That sounds wonderful. I'd love to do a trial run and see what you all think.\"\n\n\"Perfect, that sounds like a real plan then,\" said Tom. \"I have to warn you though. The press can be absolute vultures. I hope you have thick skin because if they spot any weakness on you, they will attack.\"\n\nChelsea let out a small laugh. \"I think they shouldn't be one to underestimate me, Tom. I may look sweet and innocent on the outside but I can fight when I need to. You don't grow up in rural Kentucky without knowing how to land a blow. Metaphorically speaking, of course.\"\n\n\"Rural Kentucky, huh? It's been a long time since I found myself in the backwoods of your state.\"\n\nShe cocked her head to the side. \"Maybe you should come more often then. You know what they say about us Southern girls after all?\"\n\nTom raised an eyebrow. \"That there's no way to escape 'em?\"\n\nShe giggled and shook her head. \"That Southern girls always do it better. And it's always the innocent-looking ones that will surprise you the most.\"\n\nTom swallowed heavily at the way she emphasized that last statement, wondering just how much of it she meant. \n\nTo his surprise, Chelsea ended up staying in his office for another forty-five minutes as the conversation turned personal. She told him all about her upbringing, stories from her college days, including about how she had a reputation of being a bit of a wild child, and finally she included him in on her serious work schedule with her current job.\n\n\"Perhaps that's the reason now that I'm still single,\" she said as she relaxed in front of him. \"I'm always working. I just don't have time to date right now.\"\n\n\"It's probably breaking a ton of ethical barriers right now to even talk about this, but you should make time for dating,\" said Tom. \"It's no fun being single forever. Trust me, I know.\"\n\n\"Oh, but you're never really unattached for too long, right, Tom?\" she asked with a twinkle in her eye. \"After all, we all know about your particular . . . attributes.\"\n\nTom chuckled. \"Yet here I am, one of the only presidents without a first lady.\"\n\n\"Well, if being single is the place to be, at least you'll have good company with me,\" she said warmly, her eyes ablaze with something deeper than just friendliness. Tom couldn't help but get that impression from her throughout their meeting. It was always like there was a serious fire burning just below the surface with her. While there was never anything said that was overt or too conspicuous, he always had the feeling there was serious sexual tension with every statement out of Chelsea's mouth.\n\nBefore he could think of a suitable response, the door to his office cracked open and Chris stuck his head in. \"Tom, you have an NSA briefing in ten.\"\n\n\"That's the thing about being president,\" said Tom humbly as he searched around his desk for the briefing for the NSA. \"There's no shortage of meetings.\"\n\n\"Well, there's no surprises there,\" she countered before checking her watch. \"Besides, I've taken up enough of your time today. I've been in here almost an hour!\"\n\n\"An hour well spent with my new press secretary,\" said Tom warmly. \"I have to admit, I was dreading this meeting for some time.\"\n\nChelsea frowned. \"Dreading it? Why?\"\n\n\"Because the other candidates were just that bad,\" said Tom jokingly. \"But you've managed to switch that all around. You've a very well-rounded woman, Chelsea. I think you'll be a fine addition to the team.\"\n\nShe flushed a deep red that matched her hair and her shirt. \"Thank you, Tom. I can't wait to get started either.\"\n\n\"My team will work on getting you set up to do the job. Once we have the training session, and all goes well, we'll announce that you've taken the job over from Phil. We'll do daily briefings together on messaging to the press, and you'll have full access to the West Wing for your needs,\" said Tom, checking things off with his fingers. \"Am I missing anything?\"\n\n\"Just need to show me where the dotted line is so I can sign it,\" said Chelsea with a faint giggle.\n\n\"Wonderful, well it was a pleasure to meet you, Chelsea Sutter. I'm looking forward to seeing your work.\"\n\nHer eyes flickered to his lips and back to his own once again. \"Oh, I'm sure you'll be seeing a lot more of me, Tom.\"\n\nWith that, she was gone, leaving the room quickly and with only the faintest hint of sweet-smelling jasmine as she left. As she turned around, he was able to catch one fleeting glimpse of her ass in that skirt, and there was nothing to be disappointed about. \n\nChelsea Sutter was sex personified. \n\nTom returned to his desk a moment later and reclined deeply into his chair. Her last words echoed around his brain for several minutes afterward, and Tom found his slacks were too tight once again. The moment wasn't solely his for much longer, and Chris entered the room shortly after looking like the cat that caught the canary.\n\n\"What did you think, huh? I told you she was good,\" he said with confidence.\n\nTom grinned. \"She's my new press secretary. I don't know where you found her, but she's a damn good one. Let's move forward with getting her onboarded.\"\n\nChris flashed a thumbs-up. \"I'll let Phil know he can finally take that long vacation he's been talking about for months.\"\n\n*****\n\nOver the next week, Chelsea's training for the position got underway, and like many expected, she completely nailed the test rounds against the audiences of just administration people. It gave Tom the confidence that she would be an excellent fit for the role, and so a new briefing went out announcing Phil's departure from the administration to spend more time with his family, and Chelsea was introduced to the world.\n\n\"I don't see this working out well for President Radford,\" said another talking head on the morning news network. \"You're taking out an accomplished press secretary like Phil Wentz and putting in a political nobody just because she has a nice face. Frankly, I think the American people are going to see past this sham for the farce that it really is.\"\n\nTom couldn't help but chuckle as the entire world seemed to figure out what he already knew. Chelsea was not only competent, but she was sexy as hell too. As the media began to buzz with replays of her old television footage and began to make judgments not only on her appearance but what kind of press secretary she was going to be, the days slipped ever closer to her first real day on the job. \n\nThe day before, on Phil's last briefing to the media, Tom found himself in his office getting briefed by his National Security Advisor, Ryan Douglas. Ryan had only just handed out a briefing to him moments earlier, filled with a lengthy write-up and pictures of the sort that no one wanted to see once, let alone twice.\n\n\"My god, these poor souls. When was the last time they had a decent meal?\" asked Tom after going through all the pictures.\n\n\"Our intelligence thinks that they are deliberately withholding food from them as a means to break them,\" said Ryan with an expressionless face. \"We were only able to sneak these out of China with great difficulty.\"\n\n\"Do they know that we have it?\"\n\nRyan nodded. \"Almost certainly. Or rather, they know someone with the resources to investigate further has it, and that only leaves a few possible suspects. With the recent rhetoric by President Feng Jin, he'll almost certainly put two and two together.\"\n\n\"Where are these camps at?\" asked Tom.\n\n\"Not far from Beijing, only about an hour's drive,\" answered Ryan. \"What you're seeing there are the families of political prisoners. From true opposition leaders to those who just said the wrong thing to the wrong person. We estimate this one camp to have about two thousand people inside.\"\n\nTom rubbed his chin. \"Anybody we know? Is there anyone important enough in the camp that could make waves on the international circuits?\"\n\nRyan nodded, pointing out a few names on the briefing. \"Does the name Zhu Guofeng ring a bell for you?\"\n\nTom leaned back in his chair and thought about it. Zhu Guofeng. Where have I heard that name before?\n\nIt came to him after a moment of thought. \"That's that filmmaker that caused all the trouble last year, right? The one that made the film highly critical of Chinese leadership?\"\n\nRyan nodded his head excitedly. \"That's the one. He seems to be the highest profile of anyone in the camp, well-known throughout the world. They seem to be trying to keep it quiet that he's there, no doubt because of the outrage it would cause. It's made even worse because he has American relatives here, so his popularity in our country is considerable.\"\n\n\"So how do we use this for leverage?\" asked Tom as he thought more about the issue. \"It would be pretty inconvenient for them if we start shining a large humanitarian spotlight in Beijing's backyard.\"\n\n\"One that I'm sure they'll be quick to try to deflect, but we have the proof right here,\" said Ryan as he waved the photos around. \"However, I bet they'd be willing to give in to something in exchange for us remaining quiet about the camp.\"\n\nTom flinched. \"I don't want to remain quiet about it, especially if that filmmaker is in there unnecessarily. We might have a real opportunity here. They just gave that whole big speech to the UN about human rights in China three days ago. This could be a real backfire for their reputation on the world stage.\"\n\n\"What are you suggesting then, Tom?\"\n\n\"Let's use it as leverage to restart our trade talks. Hell, I'll even go to China as a show of good faith. We let it slip that we know of these camps, and I can work on the release of their prisoners one on one with President Feng so he can save face.\" \n\n\"It's certainly a bold plan. What makes you think Feng will give in? I don't see him as the type to go for an appeal to human dignity.\"\n\nTom pursed his lips. \"No, but maybe we can appeal to his own sense of dignity. Feng doesn't seem like the type to want a spotlight on his own country for too long. He seems prideful, at least in my dealings with him. A tough exterior is usually a cause for a sensitive interior. Let's see if we can get him to squirm a little and score a win for the administration. As well as get some of those poor people freed.\"\n\n\"I'll have the communications sent out shortly from Madelyn's office,\" said Ryan as he closed his folder. \"But you may want to start packing Tom. I hear the weather in Beijing is pretty nice this time of year.\"\n\nTom chuckled as Ryan made the exit from his office, but despite the tragedy of the situation with the camp, he hoped this might be the leverage he'd been looking for against Feng. Ever since the man ditched the last round of trade talks and canceled the one in Greece, Tom had been looking for a way to bring him back to the table. This might be their only true shot of doing so. He just hoped his intuition about the Chinese president wasn't too off the mark.\n\n*****\n\nWhat a difference a day made. Based on only the insinuation that his government knew about their camps, the Chinese foreign secretary quickly agreed to the restart of trade talks, essentially welcoming Tom to the country at any point. Remarkably, President Feng even promised his own summit with Tom upon his arrival. \n\nThe news from China lit up the administration as they began to make preparations for the trip. It was planned to be announced at a press briefing this very afternoon, and Tom looked forward to seeing how Chelsea would handle not only her first official briefing, but the release of such big news to the press. \n\nA little more than an hour before the press was due to start arriving for the conference, Chelsea was let into the Oval Office with an apprehensive expression on her face from the start. Tom looked up from another briefing, his good mood taking a small hit at seeing her face.\n\n\"Chelsea, how are you? Are you ready for your first day?\"\n\nShe sat down in front of his desk nervously and didn't look him in the eyes. Her hands wrung together awkwardly. \"I'm just a little nervous. Today's the big day, and I'm surprised how much this is playing on my nerves.\"\n\n\"You have nothing to be nervous about,\" said Tom with a cheerful smile. \"You nailed all those practice rounds with my staff. I've even watched your old footage, since it's been all over the news networks. You're excellent in front of the camera, and I know you're going to be great at this.\"\n\nThat seemed to help somewhat, but he could tell she was still feeling the effects of being in a new, national spotlight. Tom didn't know how any woman that looked as gorgeous and acted as confident as Chelsea could feel this way for long.\n\nJust like the day of her initial interview, she was dressed to kill. Her auburn hair was loose, wavy, and flowing past her shoulders. She wore a satin blue blouse with just the right amount of cleavage and another pencil skirt that was dark black in color and ended a few inches above her knees. She was the epitome of feminine sexual energy, and it didn't make sense to see her this way.\n\n\"Is there anything I can do to help?\" he asked, softening his tone.",
        "Chelsea finally met his eyes. \"Do you think that maybe you could help me do another practice run? Maybe in the press briefing room? I don't want to impose on you but I thought it could help . . .\"\n\n\"Say no more then,\" said Tom, closing the open briefing in front of him. \"Come on, let's knock this out of the park and get your confidence back.\"\n\nChelsea gave him a warm smile and instantly hopped out of the chair. They walked the short distance to the briefing room, and Tom immediately took a seat in the front row while she nervously approached the podium with her large binder of information. She took a deep breath as she opened it and tested out the microphone. \n\n\"Looks great from over here,\" said Tom positively. \"Nothing to worry about.\"\n\nChelsea laughed softly. \"You haven't even heard me speak yet!\"\n\n\"I don't need to. I know you'll do great. No doubts about it.\"\n\nShe gave him a smoldering look, one that wasn't too overt, but enough that he felt the pressure in his slacks. \"See that look right there,\" said Tom, pointing at her face with his finger. \"That's the same attitude I want you to give to this job. Confidence, grace, and beauty all wrapped up into one.\"\n\nChelsea tilted her head to one side. \"Beauty, huh?\"\n\n\"So much that even a blind man can see it,\" shot back Tom.\n\nShe let out a giggle, and as far as he could tell, her nerves were melting away. \"Okay, okay, ask me a question. Pretend to be a reporter or something.\"\n\n\"All right, let me see what I can throw at you,\" he said jokingly. Tom thought for a moment before raising his hand to speak.\n\n\"Yes, the handsome gentleman front and center,\" said Chelsea playfully.\n\n\"Ah, yes, I'd like to ask why the President is planning this trip to China in the first place? Aren't the issues here at home more important than having him gallivant off to China for a nonessential meeting?\"\n\nChelsea smiled sweetly before launching into her answer. \"It's quite the opposite actually. The president's primary focus is righting the unbalanced trade deficit with the Chinese, and these talks will work at bringing that to fruition. We have secured a summit with President Feng Jin for these high level talks and look forward to bringing home a win for the American people. What's more, I can personally assure you there will be no gallivanting.\"\n\nTom raised his eyebrows in shock and started to applaud. \"Brilliant. You cut right to the heart of the issue, and you did it with style and confidence. You're going to be great at this.\"\n\nChelsea bit her lip as she smiled nervously. \"You're sure that was all right? It wasn't too much?\"\n\n\"If you answer every question like that, I'm sure the public will love you. The press will always be uppity\u2014remember that. But you'll have the support of the people, trust me.\"\n\nShe smiled and raised her binder. \"Can we run through a couple more? Really test me?\"\n\nTogether, they ran through several other questions for the next ten minutes. Chelsea seemed to alternate between knocking them out of the park and somewhat stumbling through some of them, a distinction that Tom couldn't seem to get to the bottom of. She still appeared somewhat nervous and he could even see that she was squirming behind the podium during certain questions. As he sat up from his chair and approached the podium after the last question, he was determined to figure out what was still wrong. \n\n\"I don't get it, Chelsea,\" said Tom with a confused look. \"You are killing it on some but on others you seem to lose your voice. What are we missing?\"\n\nTo his surprise, her cheeks started to flush. \"I think I know what it is, Tom.\"\n\n\"Well, tell me. I'm all ears. Is there something I can do to help?\"\n\nChelsea raised her eyebrow. \"It's just a little embarrassing.\"\n\n\"Embarrassing? How?\"\n\n\"Because it's so personal,\" she whispered softly.\n\n\"Can I help in any way?\" he asked. \"I don't want you to be this nervous when you go live in an hour.\"\n\nChelsea took a deep breath and then turned to face him. \"It's just . . . I can't believe I'm about to admit this to you. I'm really . . . horny.\"\n\nTom blinked several times before he could respond. \"Come again?\"\n\n\"I know that sounds really odd and weird coming out of my mouth just now, but just please try to understand,\" said Chelsea as she talked at an increasingly faster pace. \"It's been so long for me and when I get too pent up, I just get really nervous and I tend to overanalyze things.\"\n\n\"Hold on now, just slow down,\" he said while pushing his hands out in front of him. \"So you're saying it's due to a lack of sex that you're struggling with some of these answers?\"\n\nChelsea nodded her head meekly. \"It's just that some of the harder ones get stuck in my head too long. I start to overanalyze them, and then I stumble on my answer. I get like that when I haven't had a really good orgasm in a long time.\"\n\n\"When was the last time you had such an orgasm?\"\n\nChelsea let out a frustrated groan. \"Weeks ago! I was seeing someone but it didn't really work out. I've had to use my vibrator since then, and it's just not the same. I need really deep penetration to cum, and it just makes for a really frustrating experience.\"\n\nTom was essentially speechless. The fact that such a confident and beautiful woman like Chelsea Sutter found it hard to find good sex was shocking to him, but more so was the admission of all of it to her new boss. He was even more shocked when she started to pull up her skirt.\n\n\"I knew it was going to be a problem so I didn't wear any panties under my skirt,\" said Chelsea as she bunched the black skirt around her waist. Tom instantly saw a small line of red pubic hair over her mound and glistening lips that were visible from any vantage point. \n\n\"Why would that make you not want to wear panties?\" he asked.\n\nShe smiled nervously. \"I just didn't want to be standing around the whole time wearing a damp pair. It's better off just not to wear them. But I'm just positively soaked right now.\" She slid her fingers between her legs before bringing them up for him to see. Not only did they glisten, but he was amazed by how drenched they were from one swipe.\n\n\"Holy shit, Chelsea, you're soaked,\" he said, looking at her fingers. The most delightful scent hit him at that time, the scent of her arousal on her fingers. It made him want to suck each finger clean.\n\n\"I'm going to need to wipe myself clean again,\" she said with frustration as she went digging through her purse. She pulled out a small rag a moment later. \"But unless I get some relief, I'm afraid I might screw up my first conference!\"\n\nBefore she could put the rag between her legs, a quick statement erupted from his mouth. It was out there before he could reel it back in, and the only thing to do was just to commit to it totally.\n\n\"What if I helped you with that?\" he said quickly, locking eyes on her.\n\nChelsea bit her lip as she stared back. \"How would you like to do that, Tom?\"\n\n\"I can't have you a soaked and quivering mess behind the podium, so why don't I help you with the fucking you desperately need,\" he offered. \"I can help you settle your nerves before the conference.\"\n\nChelsea looked down at his lips like she had many times before. \"You would really do that for me?\"\n\nTom chuckled. \"In case you haven't noticed, I haven't been able to take my eyes off of you since we met. And if this would truly help you, I think this would be a win-win for everyone.\"\n\nChelsea stepped closer to him, invading his personal space. \"Well, you know I wasn't lying when I said you were the handsome one in the front row earlier.\"\n\n\"I was the only one in the front row,\" he joked.\n\nChelsea slipped her hands around his neck. \"So what? Honestly, the reason I think I'm so worked up was watching you from the podium.\"\n\n\"If you think you're worked up, you should feel me.\"\n\nChelsea's hands moved to his crotch wordlessly, where he'd been semi-hard since she pulled her skirt up. She cooed delightfully once she felt his firmness. \"Oh, yes, this feels like just what I need to get that deep penetration.\"\n\nHer mouth came crashing into his a second later, and as their bodies pressed together intimately, Tom took in the sweet taste of her lips and the gentle probing of her tongue. Chelsea's mouth remained nearly glued to his as she rushed to grind her lower half against his. He had to have more of her.\n\nTom grabbed her legs and wrapped them around his waist as they went back to the wall that had the White House logo against it. As he pressed her firmly against the logo, Chelsea moaned against his mouth before biting his lip gently.\n\n\"It's time to see what all the fuss is about,\" she whispered against his lips next. \"I want to see that huge cock of yours.\" She rubbed her hand along his entire length before making quick work of his slacks. Just behind the podium, his pants hit the floor, exposing his entire length to her eyes.\n\nChelsea let out an arousing moan as her fingers wrapped around the bare flesh. \"Oh my fucking god, Tom. You're hung like a horse!\"\n\n\"I don't think we'll have any problems achieving deep penetration,\" he said with a smile.\n\n\"No fucking way,\" she agreed, stroking him several times. \"I'll be able to feel this one in my lungs.\"\n\nWith those words, she soon slipped to the floor in front of him as her eyes latched onto the tip of his cock. She licked her lips once before her tongue darted out to tease the head. She continued to tease him for several moments as she moved along the shaft, taking long licks of the surface while he continued to pulsate with anticipation. Watching her move along his cock with her blazing blue eyes and sexy dark red hair was enough to give him a painfully hard erection.\n\nFinally, Chelsea stopped teasing him and gently worked the head into her mouth. Her lips suctioned the tip while her hands went to the base and began to stroke him in more regular fashion. Against the backdrop of the press briefing room, his new press secretary tried her hardest to get all of him in her mouth. She did extremely well in that regard, coating him almost entirely with her saliva and pumping him so hard that the tip was nearly purple with excitement.\n\nOnce he was fully coated, she pulled her tits out of her blouse and slipped his cock between them. Chelsea's bust was even more impressive in the flesh and her small areolas were dominated by thick, large nipples. She smiled up at him while she pushed her tits together, trapping his cock in-between.\n\n\"Since you liked looking at them so much, I thought you'd enjoy the chance to fuck them,\" she said with a throaty whisper.\n\nTom could only groan as his cock slid between her soft, pillowy mounds. Chelsea continued to add saliva to aid the friction and soon he'd worked up quite the tempo. It was only after a few minutes of tit-fucking that Chelsea soon moved to her feet. \n\n\"I think we need a little more lube, don't you?\" she said with a mischievous smile as she then moved toward the podium. She stuck her butt out at him as her hands gripped the sides. Without any panties and with her skirt bunched around her waist, Tom had an amazing view of her tight ass and dripping pussy.\n\nAnd what an ass it was. The full reveal had him tongue-tied, and his cock bounced with anticipation. Chelsea had a perfect pair of wide-set hips, totally unblemished by any marks. Each cheek was larger than his palm, delightfully rounded and begging for a smack. If there was such a thing as a perfect ass, Chelsea Sutter had it. For a brief moment, he let himself daydream about what it might feel like to thrust his cock inside her tight rear passage.\n\n\"Come on, Tom. Don't keep me waiting please?\"\n\nHe could only smile as he walked toward her with his dick in his hand. As he closed the distance, Tom quickly found her pussy and used it to coat the tip of his cock. She was so wet that he slid inside her with one full stroke, causing Chelsea to place her head on her binder while she moaned.\n\n\"Oh, fuck, I was right,\" she said with a low moan. \"It's damn near in my lungs!\"\n\n\"Too deep?\" he asked, concerned he'd hurt her. He made a move to pull out.\n\nChelsea's arm quickly wrapped around his butt. \"No, no, no, don't you dare. Just start fucking me. Get your cock nice and coated with my pussy. I have a surprise for you, Mr. President.\"\n\nHis initial confusion didn't last long, and he put aside thoughts of figuring out what she meant to focus on fucking the gorgeous redhead in front of him. Chelsea met him thrust for thrust, pushing back with equal eagerness to every firm stroke he had. He soon had his hands on both of her hips, using her body as leverage to get really deep, powerful thrusts inside her wet hole.\n\nChelsea wasn't inactive for very long, and despite being fucked against the podium, she was soon digging into her purse. Tom watched as she squirted something into her hand from a bottle in the purse, and all too soon, she was rubbing her finger against her puckered asshole. Once she was finished, she pulled him completely out of her pussy and turned her head to look at him.\n\n\"I think that's enough lube for now. Time to try another hole, sir.\" \n\nBefore he could even get a response out, she grabbed his completely drenched cock and moved it up, applying pressure against her asshole. Tom figured out far too late what she had been rummaging for in her purse.\n\n\"You carry lube with you in your purse?\" he asked as she lined him up with her rear end.\n\n\"I believe in always being prepared,\" she said with a wink before she turned around.\n\nChelsea pushed back on his cock with her ass, where the tip kissed against the rear entrance before getting stuck. The lube around her asshole and the wetness of her juices on his cock soon had the desired effect. She took several deep breaths as she pushed harder, and then all of a sudden, the tip forced its way past her sphincter to lodge inside her asshole.\n\n\"Oh, fuck,\" moaned Chelsea as he finally slipped inside. Her hand squeezed his hip, begging him to halt without any further words. Tom bit his lip, trying to hold still despite the wonderful tightness of her ass against the tip of his manhood. Already he could feel the extreme heat of her body again, but Chelsea's labored breaths had him concerned.\n\n\"I didn't hurt you, did I?\"\n\nShe shook her head, which had the aftereffect of making her red curls dance across her back. \"No, but it's been a while since I've had someone your size in my butt. Just give me a second to get used to you.\"\n\nTom nodded as his hands slipped to her front, sliding along her open blouse and cupping her tits. Chelsea continued to apply firm pressure against him while working her hips in the tiniest motions. It became obvious that this was her way of coming to terms with his size\u2014small movements to continue to open up her ass. They established a short, jerking rhythm, and she soon signaled her readiness to take more.\n\nOne further push enabled him to sink another inch inside her, earning a throaty moan of approval from her. \"How do you like my ass, Tom?\"\n\nHe squeezed her tits with his reply. \"It's just perfect. And here I thought your pussy was tight, but your ass is squeezing the life out of me.\"\n\nShe laughed slightly. \"This is why I enjoy anal so much. Men always love my pussy until they've been inside my ass.\" She squeezed her ring around him tightly, making his eyes roll to the back of his head. \"Once you've had my ass, you'll find it hard to go back.\"\n\n\"And you? How do you feel when they always want your ass?\"\n\nChelsea turned around to face him as a wicked grin appeared on her lips. \"Truthfully? I like it even better. The whole dirtiness of it. The feeling of being a dirty slut for getting my ass fucked turns me on like nothing else.\"\n\n\"And especially here?\" asked Tom, looking around the room. \"Getting fucked like the dirty slut you are here in the White House?\"\n\nShe bit her lip and nodded. \"You have no idea how much I love it.\" To show him, she pushed back further, driving more of cock inside her butt. She let out another wicked moan of arousal as half of his manhood lodged inside her rear passage.\n\nIt was a struggle on Tom's end not to thrust forward and bury himself completely. She was spot-on about the magic of her ass. It was so inconceivably tighter than her pussy, but still hot and slippery at the same time. It was just a completely different feeling, and every time she pulsed her sphincter on him, he struggled not to give her everything he had. \n\nTom moved his hands down from her tits, grabbing the soft flesh of her cheeks and squeezing it as more of his cock invaded her tight rear end. He gave it several hard smacks for good measure, enjoying the sight of her rippling flesh in response. Just when he felt like he'd waited long enough for her to be ready for him, Chelsea began to work her own hips, pushing him all the way in. Suddenly, Tom was able to look down and find nearly his entire length buried so deep within her ass.\n\n\"I wish you could see what I'm seeing right now,\" he said, admiring the view.\n\nChelsea giggled. \"You have no idea how full I feel. I can't believe you put that huge cock all the way in my ass.\" Just for emphasis, she leaned forward and then pushed back again, once more driving him in deeper.\n\n\"You better believe it. It took all my strength not to bury myself from the start.\"\n\nShe purred happily. \"And since you showed such restraint, now you get to have your way with it. Pound away, Mr. President.\"\n\nHe took the green light without any further prompting. Tom pulled back, feeling the shaft rub along her sphincter until the head was nearly back out and he slammed forward once more. \n\n\"Yes, fuck me, Tom. Fuck my ass!\" she moaned while pushing her hips back at him. \"Oh, yes, just like that! Fuck your press secretary's naughty ass.\"\n\nThey soon created their own smooth rhythm, enabling the full length of his cock to travel along her rear tunnel while she alternated pressure on different parts of his shaft. After she got over the initial shock of being fucked in the ass, Chelsea lifted her head from the podium and craned around to look at him, her lips seeking his while their erotic union continued. \n\n\"Harder, Tom. Please fuck my ass harder,\" she panted once they'd worked up quite the rhythm.\n\n\"God your ass . . . is so fucking tight,\" he moaned, enjoying the different feeling of it squeezing him tightly. The heat from her body alone could drive him over the edge, and the velvety warmth of her asshole had him seeing stars. \n\n\"I want you to cum so deep in my ass, Tom. Fill my tight asshole with all your cum, okay? God that's what I need. I need this cum in my ass,\" she muttered, her words garbled and her talking almost delirious as she approached the edge. \n\nHer sexy words and repeated thrusting was getting to him. The knowledge that she was so close to orgasm had him working as quickly as he could to fill her ass over and over. \n\n\"Yes, more! Deeper, Tom! Deeper!\"\n\nSuddenly, she gripped the podium tightly as her hips stopped moving. Chelsea's mouth dropped open as her entire body began to shudder when her orgasm began. The biggest notice for him was the way her sphincter locked down tightly on his shaft, barely allowing any movement. The feeling was so intense that when he could thrust again, it felt like she was literally milking his cum from his shaft.\n\n\"Yes, Tom, fuck me! Pound my asshole!\" moaned Chelsea as she soon collapsed against the podium, her red hair wild and disheveled. \n\nThe pace of his thrusting became so intense that he pulled out a little too far, his entire cock slipping from our tight tunnel. Chelsea groaned with frustration at not being penetrated, and he soon grabbed the shaft to line it back up. Her rosebud was eager for his next attempt, and it parted much easier this time, allowing him to once more slip into the depths of her bowels.",
        "He knew he had to cum soon. In just a few minutes, the reporters would begin to arrive for the press briefing. If they arrived too early, they would catch him ass-fucking his new press secretary against the podium while she moaned with lust. His hips worked faster, and his next few strokes were as deep as he could manage.\n\n\"I'm so going to love working for you,\" cooed Chelsea as he sawed in and out of her ass. \"You can fuck me like this before every briefing.\"\n\nTom smiled to himself while their hips moved frantically together. \"Every single briefing? You want my cock in your ass every time?\" He had to wipe away some sweat from his brow, their pace already exhausting and making him desperate for orgasm. \n\n\"Mm-hmm,\" she answered. \"And my pussy, my mouth, between my tits, but mostly in my ass, Tom. Can you do that for me? Can you fuck your slutty press secretary in the ass whenever she needs it?\"\n\n\"Fuck yes,\" he panted as he gripped her ass tightly. He was beginning to feel that familiar sensation, and he knew his orgasm was rushing forward.\n\nChelsea could feel it too. \"I know that move,\" she said as they were thrusting. \"You're going to cum for me, aren't you? You're going to fill my tight butt with all your cum. Cum in my tight asshole, Tom? Fill me!\"\n\n\"I'm going to cum,\" he groaned as the first spurt of his orgasm rocketed out of his shaft and shot so deep into her bowels. He gripped his knuckles against her cheeks until they were white, holding her in place to ensure every drop entered her rear passage.\n\nChelsea moaned loudly as she pushed back against his hips, taking all of him so deep in her ass. It was only after they'd both started to recover that she craned her head around to kiss him passionately once more. \n\n\"I could do that again right now,\" she said happily. \"My ass hasn't been fucked that well in a long time.\"\n\n\"I could do it again too, but we may have an audience the second time around,\" he said while gesturing to the door. \"They might be here any moment.\"\n\n\"Then we should get cleaned up,\" she said with a faint laugh. \"But I'm kind of pinned against the podium still.\" Chelsea winked.\n\nTom grabbed his cock and gently eased it out of her ass. Her rosebud gaped for a split-second when he pulled out until it tightened a few moments later. That tightness still didn't prevent a small stream of cum sliding out from her well-fucked hole.\n\nChelsea gave him a big smile as she pulled her skirt back down. \"That was just what I needed. I never cum harder then when I get my ass fucked like that.\"\n\n\"Happy to be of service,\" joked Tom as he put his cock back in his slacks. \"Think you're ready for prime time now?\"\n\nShe nodded with confidence. \"I definitely am, but there's just one thing.\"\n\nTom pursed his lips. \"What's that?\"\n\nChelsea kissed him tenderly and then pulled away. \"Don't be surprised if I need this again tomorrow.\" She winked as she put her tits back in her blouse and buttoned them up once more. \n\nTom could only shake his head as he slipped out the back door while the first reporter arrived in the front.\n\n*****\n\n\"Do you think the President is liable to get anywhere with the Chinese this time? The last trade delegation ended in a miserable failure, so what hopes does he have this time?\"\n\nChelsea smiled professionally at the reporter before she began speaking. \"The President believes he can find a middle ground with President Feng that will allow him to fulfill a major campaign promise of the election. Given the Chinese change of heart, we believe we can achieve a major victory for the American people with this visit.\"\n\n\"But does that seem wise given his past history of failure?\"\n\nChelsea continued to lock on the reporter. \"Many out there didn't think it wise to pursue the jobs bill, but the President was able to get it accomplished while working with a leading senator from the opposition. President Radford is used to building bridges between two sides, and he's very confident he can come away from the talks without it being rear-ended by the Chinese.\"\n\n\"Rear-ended, indeed,\" said Tom, chuckling at her choice of words. That evening, he watched a rerun of her first press briefing, a resounding success by any measure. Chelsea was cool and collected the entire time, using her wit to punctuate his own policy decisions and never once letting the press get under her skin. He had to wonder if any of them had any idea that while she gave the press briefing, his own cum was still leaking out of her ass. \n\nTom grinned to himself as he shook his head. So far, being the president was much different than he imagined.\n\nNot long after nine o'clock, his personal line began to ring, the caller ID lighting up with a familiar number.\n\n\"There's my favorite ex-girlfriend,\" he said as he picked up the phone.\n\nLucy Benning started to laugh before she spoke. \"I like your new press secretary. The girl has a lot of spunk. She's a complete upgrade over the last guy you had in that role.\"\n\n\"I'm rather fond of her too,\" said Tom. \"Plus you'd never know it was her first briefing today. She handled herself like a seasoned professional.\"\n\nLucy snorted. \"Well, I would expect her to, looking like she did on television. You fucked her, didn't you?\"\n\nTom's face paled for a second as he struggled to find his words. It was futile to lie to Lucy\u2014she would always know better. \"What makes you say that?\"\n\nLucy started to laugh again. \"I just know. Her face was all flush, and she had that just-had-an-orgasm dreamy smile on her face. It's not hard to tell when someone just had an orgasm. Seeing as she is your press secretary, I was wondering if it was you that did the honors.\"\n\n\"You'll never get me to admit to that over the phone,\" he said jokingly. \"But you might be onto something there.\"\n\n\"I just knew it. I think you may have taken my comments about using your big dick too literally.\"\n\nTom chuckled. \"Ever since I have, things have been looking up though.\"\n\n\"Well, I'm glad that it has,\" said Lucy warmly. \"You're too good of a man not to be using all of your talents.\"\n\n\"Is that a genuine compliment from Lucy Benning? Are you sure you're not running a fever on me?\"\n\n\"Oh, hush,\" she said with a giggle. \"You were always my favorite ex. But remember what I said about that before?\"\n\n\"I do,\" he said slowly. \"Don't tell Sean.\"\n\n\"Right you are,\" she said with a giggle. \"So anyway, I have a favor to ask of you.\"\n\n\"And here I thought this call was just for small talk,\" he said teasingly. \"You know, I have whole lines of favor-askers just trying to get on the government teat.\"\n\nLucy giggled. \"This is a bit different. Oh, hell, okay it's not different at all. But I was wondering if you might be able to do this favor for an old friend.\"\n\nTom grinned. \"What's the matter, Luce? You need a job?\"\n\n\"Not me, one of my friend's daughters. She's twenty-five, has her masters in political science, and she's one smart cookie.\"\n\n\"So why does she have a hard time finding a job?\" asked Tom.\n\n\"It's not that. It's that she wants to get involved in politics. And since you're the only person I know in politics, I figured I might see if you wanted an intern?\"\n\n\"Send over her resume, and I'll check it out. I can't make any promises though,\" said Tom. \"Getting them to the head of the line isn't as easy as a feat as it might sound, even for the president.\"\n\n\"I'll email you her resume now, along with a recent picture. You'd be doing me a huge favor if you could do this, Tom.\"\n\n\"All right. Only for you though, Luce. You know that right?\"\n\n\"My hero,\" she replied back teasingly.\n\nThey spoke for another twenty minutes before hanging up the phone, and Tom then fired up his email out of curiosity. He quickly found Lucy's email and opened it, seeking the two attachments. For one, this girl's resume seemed great and she looked to be well-educated. It shouldn't be a problem to get her an interview, especially with her pedigree.\n\nHe was most curious though on why Lucy attached a recent picture. He meant to ask her about it on the phone but the conversation moved forward and he quickly forgot she mentioned it. As he clicked open the file, Tom caught his breath.\n\nThe picture was of a stunning blonde woman, although stunning might have been an understatement if he was being honest. She looked nearly flawless from her smooth, creamy skin and her full pearly white smile. Her blue-green eyes stood out to him first, but so did her impressive cleavage as it peeked out from her low cut pink top. If not for her innocent surroundings, the picture could almost have been inappropriate, if only for her well-formed natural endowments. \n\nHe then knew why Lucy sent him the picture. She was trying to appeal to his masculine instincts.\n\nIt totally worked.\n\nHe printed out her resume and then grabbed a sticky note. He wrote one word on the note\u2014hire\u2014and put it in his folder for Chris for the morning.\n\nThis ought to be interesting, he thought to himself with a chuckle."
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "anal",
        "ass",
        "big dick",
        "diplomacy",
        "politics",
        "president",
        "press secretary",
        "redhead",
        "senator"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/big-dick-diplomacy-ch-03"
}