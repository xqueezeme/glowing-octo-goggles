{
    "title": "Could She Really be a Cougar? Ch. 02",
    "pages": [
        "(Dede, a forty-five year old physician, had just decided she would go to bed with a twenty-two year old boy. To add to the anxiety she felt about having sex with someone so young, this man was a friend of her twin teenage daughters. Ever since she caught her daughters, and a bunch of their friends, in the nude while having a skinny-dipping party at her house, Dede could not get the image of the young man's naked body from her mind. Of course, it didn't help that later that same day, he walked in on her while she was practically naked and masturbating. He watched while she had a big orgasm, and then propositioned her. \n\nHer first instinct was to refuse the ridiculous offer, but her friend, Mae, tried to convince her she should go ahead and bed him. When he sent Dede and Mae a picture of him naked with an erection, Mae insisted that Dede get together with Cody.\n\nOn the morning of the proposed tryst, Dede did twenty laps in her pool to try to clear her mind. She finished swimming without anything near a clear mind. She did, however, have an ache between her legs that she now realized she was going to satisfy it with Cody.\n\nOne word of caution. This story contains anal sex. If you do not like to read such descriptions, I would advise you to not read it.)\n\n*\n\nPulling herself out the pool after her twenty laps, Dede relaxed on a pool lounger, closed her eyes and drifted to sleep.\n\n\"Wow, Mom, you really are amazing.\"\n\nDede's eyes shot open to see Alexis and her friend, Marcy, standing there, towels wrapped around them.\n\n\"Oh, I didn't know you were staying over, Marcy.\"\n\nShe looked different without her dark-rimmed glasses. An image slammed into Dede's mind of this innocent looking girl with a cock deep in her mouth. Her daughters described their blow job contests, and that Marcy, the sweet and innocent girl, was the queen of them.\n\n\"Yeah, \"Alexis said, \"we were out late and didn't feel like driving her out to the 'burbs. Marcy has to be home in time to change and get to work by ten this morning. So, we thought we'd have a quick swim and head out.\"\n\nDede was uncomfortable being nude in front of them.\n\n\"Uh, maybe you could hand me my towel,\" she said. \"I wasn't expecting company this morning.\"\n\n\"It's fine, Mom,\" said Alexis as she dropped her towel. Marcy followed and then all three were naked. Dede had seen her girls naked before. They often skinny-dipped if it were just the three of them.\n\nDede was surprised at Marcy's body. The normally conservatively dressed young woman had a sexy body. Her breasts were large and rode high on her chest, with no visible sag, and puffy, pink nipples. \"Oh, to be a teenager again,\" she thought. Marcy's body was buffer than she expected. The flare of her hips gave her a womanly shape. Her red triangle was neat and ended above a set of plush sexual lips, devoid of any pubic hair. Dede imagined that the young men would not have any trouble maintaining an erection looking at a naked Marcy, especially as she knelt before them about to perform oral sex. \n\n\"Really, Mom, you are in fantastic shape.\"\n\n\"Totally, Dr. Adams,\" said Marcy. \"Like, you're awesome.\"\n\n\"Marcy, if you are looking at my naked body, then please call me Dede.\"\n\nShe giggled. \"What do I call you when you're dressed?\"\n\nDede laughed. She had seriously misread this girl. She was confident and funny.\n\n\"You can call me Dede whether I'm dressed or nude. But, I think it'll be dressed from now on.\"\n\n\"Whatever,\" said Marcy. \"But, feel free to swim with us any time. You're really cool.\"\n\nDede didn't respond to the offer to swim in her own pool. She watched as the girls ran over and dove in. Their backs held up to the attractiveness of their fronts. With her towel draped over her arm, she walked inside. She ran into Brianna, who was drinking a glass of orange juice. She, too, was naked.\n\n\"Guess it's a clothing optional day at the Adams residence,\" Dede quipped. Her daughter smiled and looked at her naked mother.\n\n\"Guess so,\" Brianna answered. \"I'm going out to take a dip, and then I think we're going to the lake today. What are your plans? Doing anything interesting?\"\n\n\"I, uh, well, not really. I mean why would you think I was doing anything interesting?\"\n\nBrianna looked at her mother. \"Uh, mom, I'm just like making conversation.\"\n\nDede told herself to relax. Brianna had no clue that she was going to swallow a young cock in a couple hours.\n\n\"Oh, I thought I'd go over to Aunt Mae's. I might spend the night, if you guys don't mind. Uncle Jack is on a fishing trip and Mae would like some company.\"\n\nDede couldn't believe she was weaving such a story to her own daughter. It was better than the truth that she was hoping to get her brains fucked out by a young stud and praying he had the stamina to keep going all night. To top it all off, the young stud was a friend of her daughters.\n\n\"Cool. We'll be here after the lake. Marcy gets off work around seven and we'll probably order a pizza and veg out in front of the TV. Marcy will stay over, if that's OK.\"\n\n\"Remember...\"\n\n\"Yes, mom, no parties. No drinking. No skinny-dipping with guys. No blow jobs. Wait, are you sure about no blow jobs?\"\n\nDede laughed and gave her daughter's bare butt a playful slap. \"Definitely no blow jobs.\"\n\nBrianna went outside to join the other two girls and Dede went upstairs. After showering, she stood in front of the mirror regarding her naked reflection. Mostly satisfied at the woman whose reflection she observed, Dede debated about what was between her legs.\n\nHer dark bush was well-groomed, but what would a young man like? Was he accustomed to smooth pussies? Dede noticed that Marcy had pubic hair as did her daughters. Mae had that thin, dark strip. Was her triangle too much? \n\nAfter debating what to do with her pussy, Dede decided she was too keyed up to try to use a razor around her most sensitive area. \"Shit, I don't want to slice my pussy right before I'm going to fuck Cody.\" She shook her head in amazement at her own thoughts.\n\nAfter packing a small overnight bag, she stopped by the pool to say good-bye. The three girls were laying out working on all-over tans. She told them to call her if they needed anything and two minutes later was driving her Miata in the direction of Mae's house.\n\n--- \n\nMarcy turned on to her front. Propping herself up on her elbows she said, \"Your mom is so hot it's unbelievable.\"\n\n\"What?\" said Alexis, as she remained on her back. \"Now, you want to do my mom?\"\n\n\"Wouldn't mind it,\" said Marcy. \"You know what I can do.\"\n\nBoth twins laughed. \"God, Marcy, how can you be so good at sucking cock, and also so good between a girl's legs?\" asked Alexis.\n\n\"I like both,\" she said. \"They're so different, but both are so sexy. I guess I'm bi-lingual\u2014you know my tongue can go both ways.\"\n\nThe three of them shared a chuckle.\n\n\"What do you like the best?\" Brianna asked.\n\n\"Well, and you guys have to keep this among the three of us, I think I like pussy the best. I'm not gay, at least I don't think so, but there is something about making a girl cum that is really powerful.\" Marcy reached out and ran her hand between Brianna's legs.\n\n\"Don't tease me,\" Brianna said.\n\n\"Not teasing,\" answered Marcy.\n\nShe shifted over and settled between Brianna's legs. \"Not right here,\" Brianna said, a little out of breath.\n\n\"Why not?\" Marcy lowered her face and ran her tongue along the smooth lips. Brianna gasped. Slowly her thighs moved wider apart. Marcy kissed her up and down her pussy. Spreading her labia with her fingers, Marcy pushed her tongue deep inside. As Brianna raised her hips to welcome the tongue, Alexis grabbed her own boobs and began squeezing while watching her friend and sister.\n\n\"You two look so freaking hot together.\"\n\nBrianna turned her head to stare at her sister. They smiled and their hands joined.\n\n\"Love you, Lexi.\"\n\n\"Love you, too, Bree.\"\n\nBrianna's mouth dropped open as Marcy's lips encircled her clit. \"Do yourself while Marcy's doing me.\"\n\nAlexis nodded and put one hand between her legs. She rubbed the outside of her lips as she watched Brianna squirm under the attention of their friend. When Alexis slid a finger inside her cunt, Brianna noticed, smiled and stroked her sister's shoulder. \"That's hot,\" she said. Alexis nodded and pumped her finger in and out. Alexis kept a steady pace and slowly increased her arousal. Watching Marcy attend to her sister fueled her desire and she began to work two fingers over her clit, while the two fingers inside her moved more quickly.\n\nBrianna began to make cooing noises as Marcy's tongue was hitting all the right spots. Alexis now began to make tight circles around her clit as two fingers plunged in and out. The sisters locked eyes as their passions surged. Minutes passed as their pleasure continued to rise. Although not deliberately orchestrated, the twins came within seconds of each other.\n\nMarcy's head rested on Brianna's tummy. \"That was so good. You two are the sexiest. And to think your mom is just as hot, just kinda freaks me out totally. I dream of all of us in bed.\"\n\n\"Well, that's not going to happen,\" said Alexis. \"It's disgusting to think that Bree and I would be with our mom. Besides, she's not like gay or bi. I imagine she'd like a hard dick. She should go out and find one.\"\n\n\"How about one like Cody's,\" said Brianna. \"That was totally awesome when it was hard.\"\n\n\"God, who wouldn't enjoy something like that?\" said Alexis. \"I doubt mom would want to get involved with a guy as young as Cody. Maybe we can hook up with him some time, after we pop our cherries with a guy?\"\n\n\"Together?\" asked Brianna.\n\n\"Well, we're together with Marcy.\"\n\n\"True,\" replied Brianna.\n\n\"I still say you never know what a woman may want,\" said Marcy as she began to slide over to settle between Alexis' legs. \"Your mom might enjoy some love from a woman, or even a young girl. Anyway, I guess I'll just have to be satisfied with fucking the both of you.\" Her tongue touched Alexis' clit, still hyper-sensitive from her recent orgasm. \"And, that is not a complaint,\" she said, and got to licking.\n\nAlexis, too, was in no mood to complain as the warmth of Marcy's tongue spread throughout her body.\n\n--- \n\nDede found her friend in the kitchen cutting up a tray of brownies when she arrived a little after noon.\n\n\"Brownies!\" she screamed. \"You're making fucking brownies. Why don't put out a tray of cookies and milk, and ask to see if Cody has a note from his mother. 'Dear Dr. Foley, please allow my son to stay over and fuck the shit out of that tramp, Dr. Adams'.\"\n\n\"Whoa,\" said Mae. \"Does someone need a Xanax?\"\n\n\"Seriously, Mae. Why are you making brownies?\"\n\n\"Sit down, Dede,\" her friend commanded. She poured her a glass of chilled, white wine. \"Sip, do not gulp. You cannot be falling down drunk when the 'Kid with the Golden Cock' arrives.\"\n\nDede took a sip\u2014a big sip. \"Mae, that kind of talk is not helping.\"\n\nHer friend smiled. \"Look, Dede, I know you're nervous. In spite of his bravado, I suspect Cody is also nervous. So, I figure a little comfort food will help put everyone at ease. Guys love brownies. Trust me on this. They love them. So, when Cody gets here, we'll all go outside. I have some other snacks prepared. We then eat a little, maybe have a drink, take our clothes off, jump in the pool, talk about...\"\n\n\"Hold on,\" said Dede. \"Take our clothes off?\"\n\n\"Yep,\" Mae said. \"I've thought a lot about this. You've each seen the other naked, or practically naked. I think making everything sort of casual will calm both of you. It won't be some dash to rip your clothes off. Besides, I want to get a good look at him. That picture only teased me.\"\n\nDede took another sip of wine. \"I was kinda looking forward to having him rip my clothes off.\"\n\n\"Next time, sweetie. Trust me, this will work out great.\"\n\n\"Of course, he's going to get a good look at your body.\"\n\n\"Oh, my gosh,\" Mae said. \"You're right. I never thought of that.\"\n\n\"You are such a bitch,\" Dede said. \"But, I love you. And, thanks for doing all this. I think I may be coming down off the ceiling a little.\"\n\n\"Dede, you know I love you. I want you to be able to enjoy this afternoon. You deserve it and it should be fun for you.\"\n\nDede walked around and hugged her friend. They remained entwined for several moments. Mae moved her face and touched Dede's lips with hers. Dede responded and the two women kissed softly and tenderly. \"Nice, Mae. And, I hope you know that it might not just be the afternoon. I was hoping it could last longer. Cody said he'd pack his toothbrush.\"\n\nMae giggled into her ear. \"Sure, take all the time you want. And, if you get too tired, just holler. I'll be in the hall with my ear glued to your door.\"\n\nMae broke off. \"Let me show you the bedroom. I think you'll like what I've done.\" She took Dede by the hand, and led her upstairs. Dede had stayed in the guest room before, and wondered what would be different.\n\nAs Mae opened the door, Dede caught her breath. Mae had set up the bed with new linens. She chose a deep blue coverlet with lighter blue sheets. Gone were the excess of pillows as you might see in a magazine that usually adorned the king-sized bed. She had two large pillows in a blue and tan pattern. Dede recognized that her friend achieved a perfect balance of romance and, yet, somewhat masculine feeling. There were a few lightly scented candles creating a pleasant aroma. The drapes were pulled back, and thin sheers allowed light to filter into the room. \n\n\"You want to be able to see each other,\" Mae said as she held her friend's hand. \"At the same time, you don't want the strong afternoon sun overpowering everything.\"\n\n\"This is so beautiful, Mae. Thank you. Do you think Cody will notice?\"\n\n\"Probably not,\" she said with a chuckle. \"especially if you're naked.\" But, I bet he will feel comfortable and want to get you in that bed and never let you out.\" Dede shivered with that thought. Next to the bed, she noticed a wine bucket with two bottles chilling in it. A pair of champagne flutes was on the table beside it.\n\n\"Maybe a little taste before,\" said Mae seeing what Dede was looking at. \"But, definitely celebrate between rounds.\"\n\nMae led her to the nightstand on the other side. Sliding open the drawer, she let Dede see the dozen condoms, a tube of Astroglide and a silver bullet dildo, exactly like the one Dede had at home.\n\n\"You think of everything,\" Dede said, and squeezed her hand. \n\n\"And, if you get really adventurous,\" Mae said as she opened the bottom drawer. Dede's jaw dropped when she saw the strap-on with the big, black cock attached. Next to it were three pairs of handcuffs with soft linings, several colorful silk scarves and a thin riding crop.\n\n\"Shit, are all these yours?\"\n\n\"My own personal supply, sweetie. Of course, I've sterilized the cock.\"\n\n\"I never realized that you and Jack...\"\n\n\"Most definitely,\" she said. She tightened her grip on Dede's hand as she added, \"And, others joining in with Jack. So, when you're ready...\"\n\nDede felt moisture begin to dampen her panties. The thought of her and Mae playing with these toys opened a place in her mind that she never even knew existed.\n\nMae indicated the en suite bathroom stocked with towels, soaps, lotions and other necessities. \"The shower works so well with two people,\" she said. Looking at her friend, Mae added, \"Or, even three people.\"\n\n\"Stop doing that, Mae. I am so fucking edgy right now, I think I could cum.\"\n\nMae slid her hand between her friend's legs and cupped her mound. Dede moaned at the contact. \"I wouldn't mind that. I can give you clean panties. Maybe you should get off now, and then you won't be too eager with Cody.\"\n\nDede's eyes were closed as she rocked with the touch of her friend. It would be so easy to just let go and explore this new road. Mae's lips touched hers. They kissed and Mae increased the pressure between her legs, as a finger pushed her panty between her slit. Dede felt her knees bend and she had to sit on the bed.\n\n\"No, please. Not now. Sorry, just not now.\" \n\nMae pulled her hand away. \"Sure, sweetie, I understand. Let's go back down and we can stock the bar outside.\"\n\nDede rose, and leaned in to kiss her friend. \"Thank you, Mae. I love you.\"\n\n\"I know you do, and I love you, too.\"\n\n\"Mae?\"\n\n\"Yes.\"\n\n\"I think I would like a pair of dry panties. Black if you have them.\"\n\nMae laughed and pulled her friend into the master bedroom. She fished a lacy, black thong out of her drawer and tossed it to her. \"You can use my bathroom to clean up, and then come down. Just toss your panties in the hamper. I'll smell them later.\"\n\nDede cracked up and almost peed into her damp panties. \"You are totally wicked, you know that?\"\n\nMae smiled and left the room.\n\nDede joined her friend outside. They stocked the bar with wine, beer and soft drinks. They then shared another glass of wine.\n\n\"I'm going to call him and tell him to forget it,\" said Dede.\n\n\"No, dear, you are not. You are going to sit right there. He will be here soon. Then, we'll relax, afterwards you will go upstairs with him. You will let him fuck your brains out, and then you can fuck his brains out. Understood?\"\n\nDede smiled weakly.\n\nTen minutes later they heard a motorcycle outside.\n\n\"He rides a bike?\" cooed Mae. \"God, can this get any better?\" Mae went inside as she heard the front doorbell.\n\nShe opened it to see a tall, lean and muscular young man with dark hair falling to his shoulders. He wore a light black leather jacket unzipped to reveal a broad chest under a tight tee shirt and blue jeans. Holding a bouquet of flowers, he smiled.\n\n\"Hi, I'm Cody. Nice to meet you, Mae.\" He stepped inside, bent to kiss her cheek and handed her the flowers. \"Thanks, for inviting me to your home.\"\n\nMae's pussy tightened as the sound of his deep voice. Her nostrils were filled with a slight scent of male perspiration and some sort of cologne. She wanted to fuck him right there in the doorway.\n\n\"Well, nice to meet you, Cody. Dede has spoken a lot about you.\"\n\nHe grinned.\n\n\"And, I really enjoyed the pictures.\" Her gaze slowly traveled down his body with her eyes coming to rest at his crotch.\n\n\"Likewise, Mae. I thought the picture of you was awe...uh, spectacular. Of course, now that I can see your face, I have to say that picture did not do justice to how beautiful you are.\" \n\nMae's heartbeat spiked. \"God, he's really charming,\" she thought.\n\n\"Come outside,\" she said, taking his arm. \"Dede's by the pool.\" She directed him to the back as she stopped to get a vase for the flowers. He slipped his jacket off and draped it on a chair. Cody walked to the patio and saw Dede standing by the table. He smiled, and she waved.\n\nHe crossed to her, put a hand on her shoulder, and kissed her cheek. \"I am so happy you agreed to see me. You look really beautiful today.\"\n\nDede had spent most of her morning trying on dozens of outfits. In the end, she chose a loose, flowered skirt, fitted blue cotton blouse and sandals. She didn't bother with pantyhose. Her hair was pulled off her face, and held in place by a pale yellow headband. Her make-up was thinly applied, and highlighted her eyes and lips. The look in Cody's eyes convinced her she chose well.\n\nMae interrupted the unspoken lust leaping back and forth between Cody and Dede. \"OK, kids, let's have a snack.\"\n\nMae opened the bottle of chilled Sauterne. She poured three glasses and uncovered the plate of brownies along with cheese and crackers. After toasting the day, the three sat around the table, and munched on the goodies. Dede thought that Mae was right. Cody was enjoying the brownies, and they talked in a relaxed manner.\n\n\"Time for a swim,\" said Mae.\n\n\"I didn't bring my suit,\" said Cody.\n\n\"Oh, I understood suits were optional as far as you were concerned,\" Mae replied.",
        "Cody shot a glance at Dede, who just smiled.\n\n\"Well, I guess I don't need one, then.\" He stood and doffed his tee shirt. Mae stared at his smooth, tight chest and rippled abs. He kicked off his boots and pulled his socks off.\n\nAs his hands rested on the large silver buckle of his jeans, he said, \"Anyone joining me?\"\n\n\"Both of us,\" said Mae, \"but continue.\"\n\nCody grinned and undid his buckle, unsnapped his pants and pulled the zipper down. Mae could see a trail of dark hair as it traveled from his navel to the band of his underwear. Cody shucked his jeans down, exposing his blue tighties. The bulge in front was significant.\n\n\"Stop there for a second,\" she said. \n\nTurning toward Dede, she said, \"You OK, honey?\"\n\nDede's face was red, but she nodded.\n\n\"Cody, take 'em off.\"\n\nCody kept eye contact with Mae as he bent to slide down his underwear. He enjoyed seeing her eyes follow his movements. As he straightened, he was pleased that Mae's eyes never went higher than his crotch.\n\n\"You like?\"\n\nMae tilted her head, and said, \"Don't get cocky.\"\n\nThe three of them laughed at the pun. \"Yes, Cody, that's very nice,\" Mae said.\n\n\"I'm glad you think so.\"\n\n\"Now, Cody, I want you to slowly undress Dede. You can do that, can't you?\"\n\nHis cocked bounced as he walked to where Dede was seated. He stood in front of her, letting her stare at his sex. After a minute Cody took Dede's hand and guided her to stand. Kissing her softly, his fingers worked the buttons on her blouse. Undone, he slipped it off her shoulders and placed it on the table. Dede breathed deeply as his eyes roamed over her chest. He bent to undo the button and zipper at the side of her skirt. It floated to the ground and Dede rested a hand on his shoulders to steady herself as Cody took it away.\n\nSmiling, he surveyed and circled her body. \"You are amazing, Dede.\" She shivered as his fingers traced the outline of her bra along her back. He unclasped it and slid his arms over her shoulders and underneath the thin satin. His hands cupped her breasts, letting her nipples rest between two fingers. Dede pulled down her bra and let it slide to the pool deck. Cody leaned in to kiss her shoulders, causing Dede to shudder. His hands released her breasts, and moved down her sides and onto her tummy. He lightly moved his fingers over her skin and played with her navel. Dede pushed back and felt his cock against the fabric of her underwear. Cody's hands began to move slowly until they stopped at the top of her panties. Slipping two fingers under the band, he ran them back and forth. His fingertips brushed against the top of her pubic patch. He eased the silky garment down until the very top of the dark hair appeared. Dede opened her eyes to see Mae's gaze fixed on her, while her friend licked her lips. \n\nCody knelt and kissed the tops of her cheeks that were partially exposed. His fingers moved until they drifted over her mound and gently caressed her sensitive lips. Next, he moved her panties along until they settled on her hips. Dede sensed the air moved across her naked rear as her panties headed toward the ground. She stepped out of them and Cody pulled them away. Gripping her hips, he pulled her back and gently kissed each of her cheeks from top to bottom, and then ran his tongue along her crack.\n\nAs he stood, he let his partially flaccid member move up one leg and settled along her crack. With his hands around her waist, he pulled her back and kissed her ear. Dede reflexively pushed back, trapping his member between her cheeks. Cody and Dede sensed movement, and turned their heads to see Mae removing her panties, the last piece of clothing she wore. Dede was shocked to see her smooth pussy. Gone was the neatly trimmed dark strip. Mae walked toward them.\n\n\"Come, let's get in the deep end.\" With Cody holding one hand and Mae the other, Dede let them lead her to the edge. They paused, and then together jumped. The pleasantly cool water did little to lower Dede's heat as she felt Cody's cock move against her thigh.\n\nThe three of them treaded water. \"So, you're a swimmer, I hear,\" said Mae. \n\n\"Varsity, but I'm not continuing this year. I want to enjoy my senior year and I can't do that getting up at five in the morning to train, keep to a strict diet and spend three hours at the end of the day on weight and aerobic training.\"\n\n\"I'd love to see you swim,\" Mae said. \"Do you mind?\"\n\n\"No, not at all.\"\n\nCody moved to the wall at the deep end and pushed off. He began a crawl that enabled him to cover the length of the pool in seconds. Touching and turning he returned and did a flip turn in the deep water. Lap after lap, stroke by stroke, his strong body sliced through the water. With each flip turn offered a glimpse of his tight ass. Mae and Dede sighed.\n\n\"God, he is so fucking powerful,\" Mae said and held Dede's hand.\n\n\"I never realized how strong swimmers looked in the water. Being this close, you can see his muscles working,\" Dede confided to her friend. Mae kissed her cheek, \"Honey, you only have to worry about one muscle working right now.\"\n\nCody did another flip turn and began a backstroke. As he passed them, they couldn't pull their eyes away from his cock as it bobbed with every pull of his arms.\n\n\"I could suck that all night long, and never get tired,\" Mae said.\n\n\"Yeah, but not today. He's mine,\" Dede replied.\n\n\"So, no more indecision?\"\n\n\"I want him,\" Dede said.\n\n\"Good girl,\" her friend said. \"Good girl.\"\n\nCody finally stopped and moved over to them as they held on to the side of the pool.\n\n\"That was beautiful,\" said Dede. \n\n\"Thanks. I love swimming,\" Cody said. Smiling he added, \"And, I love swimming nude. And, I really, really love swimming nude when there are two beautiful women, who are nude in the pool with me.\"\n\nCody kissed Dede. She tasted his lips coated with chlorine and felt something move deep in her vagina. Her lust was alive, and threatening to take complete control of her body. As she moved her tongue to meet his, Dede decided she was no longer going to try to hold the lust-beast in check.\n\nCody pulled back, kissed her forehead and turned to Mae. Without hesitation, he kissed her. Mae responded forcefully and sucked his tongue into her mouth. Her hand took hold of his cock and pulled it. \n\n\"Slow down, dear,\" Dede said. \"I'm not into sharing right now.\"\n\nMae pulled her lips from his and released his cock after one long stroke. \"Selfish bitch,\" she exclaimed.\n\nThe three of them laughed. \"Let's get out,\" said Mae.\n\nThe three stood dripping on the pool's apron. \"Think it's time to go inside,\" Mae said. \"I suggest a shower to get the chlorine off.\" She led them into the house and up the stairs. On the way, she picked up another champagne flute.\n\nMae ushered them into the guest room. Cody stopped and looked around. \"This is awesome.\" He caught himself, and then said, \"Very tasteful, I mean.\"\n\nDede and Mae chuckled. Mae set the flute next to the others, and went to the bathroom to turn on the shower. She called to them that it was ready. As Cody and Dede stepped under the rainfall head in the large walk-in shower, Cody said, \"I think three could fit.\"\n\n\"Physically, yes,\" said Mae. \"But, maybe three is too much of a crowd right now.\"\n\nDede grabbed her hand, \"Don't be silly. Join us.\" Mae stepped in. Dede touched her cheek, \"But, after our shower, get your skanky ass out of here.\"\n\nLaughing, Mae turned and bent to show off her ass. Cody thought it was the furthest thing from skanky he'd seen. He slapped it, and the sound reverberated off the tile walls.\n\n\"Ooh,\" was all Mae could offer as a comeback. \"I could get used to that.\" Cody ran his hand along the taut flesh, and gave it another solid whack. \"Maybe some other time,\" he said.\n\nDede took the bottle of bath soap, and dribbled it down Cody's chest. Catching Mae's eyes, they each began to rub it into the firm flesh. As they moved down his body, Cody slipped his arms around their shoulders. Mae paused with her fingers in his thick pubic hair, as Dede continued down to rub his cock. After several long, slow strokes, Mae joined her hand to the action. \n\nDede's mind was working overtime. It had been so long since she had a cock in her hands. This one was causing her to rue the lost time more than she imagined possible. Her fingers glided along the skin and played with the big cap. She held it in her hand enjoying its heft. As her fingertips traced a soft pattern on his balls, she longed to have her tongue trade places with her finger. In short, Dede was falling in love with this cock.\n\nWithin a few minutes, Cody went from semi-flaccid to rock hard. His cock both lengthened and thickened. Mae cupped his impressive ball sack, while Dede kept up a steady motion on his shaft. \n\n\"Easy ladies,\" he said, as both hands now pumped him faster. \"I don't want to leave my race on the starting blocks.\"\n\n\"It'll just make you last longer later,\" Mae offered.\n\n\"True,\" Cody replied as he pulled their hands away. \"But, I want the first and second times to be with Dede. I've been thinking about this all week. No offense, Mae.\"\n\nMae stretched up and kissed him. \"None taken. What say we make sure Dede has all that nasty chlorine off her?\"\n\n\"You're reading my mind.\" Cody poured soap into his hands and rubbed them until they were lathered. He put a hand on each of Dede's breasts. \"These are incredible,\" he said as he moved over her flesh. Mae moved behind her friend, and lathered her back and ass. She ran her fingers along her crack, and could feel Dede tighten her cheeks. When she paused and prodded Dede's rosebud, Mae heard her friend sigh. Mae then snaked her hands in front to feel Cody's erection pushing against Dede's tummy. With one hand on the hard shaft, she let her other hand drift down until it touched Dede's damp, soft fur. Dede moaned with the sensations on her breasts and pussy. Cody pinched her nipples, and Mae ran her finger along her slit, teasing the hard button at the top.\n\n\"Guys, stop,\" she pleaded. \"I'm going to explode.\" Dede felt their hands move away. \"Cody, make sure Mae is clean while I gather my senses.\"\n\nCody turned to Mae, and pushed his erection hard against her stomach. Looking at her small breasts he said, \"They look clean, but there's only one sure way to tell.\" He bent, and took her right breast in his mouth biting down on the extended nipple.\n\n\"Fuck,\" Mae cried out, and grabbed his cock.\n\nAs Cody continued to lick and nip one breast his other hand fondled her other nipple. Mae was trying to bend down his erection so it would slide between her pussy lips. Although she was tall, Cody towered over her. He removed his hand from her breast and reached between them. He freed his erection, and let it stand up against her belly. His now unoccupied hand moved down over the smooth pussy, and he slid a finger inside her, while he bit down on her nipple. He curved his finger until he felt the spot he was seeking. He rubbed hard, while teasing her nipple.\n\n\"Oh, no,\" Mae cried, and started to cum. She grabbed onto his shoulders and slammed her pussy hard against him, driving his finger deeper inside. As her spasms started to calm, Cody removed his finger, and freed her breast from his mouth. \n\n\"God, I've never cum that fast,\" Mae said fighting for her breath.\n\n\"Hey, I thought that was my line,\" joked Cody.\n\n\"Better not be,\" said Dede. She watched her friend come down. \n\n\"We should probably get out,\" said Mae, still trying to gain her composure.\n\n\"Not yet,\" Cody said. \"Do you have any shaving cream and a razor?\n\n\"Sure, but why,\" asked Mae. He rubbed the dark stubble on his face and chin. \n\n\"Really?\" Mae asked. \"I think it looks sexy as hell.\"\n\n\"I plan to spend a long time with my face between Dede's thighs. I don't want anything to take her attention away from what my tongue will be doing.\"\n\n\"Get the fucking razor, Mae,\" Dede barked.\n\nMae returned in a second with a new disposable razor and a can of cream. Cody sat on the tile bench along the wall of the shower. Mae knelt before him, and squirted a snowman of cream into her hand. Slowly, she covered his face.\n\n\"I can do this, you know,\" he said.\n\n\"No doubt,\" said Mae as she traced her finger along his lips. \"But, I want to.\"\n\nCarefully she dragged the razor along his cheeks. Minding the angles of his face, she shaved him smooth. Slipping her hand on his balls, she asked, \"Anything else you'd like me to shave?\"\n\n\"Not now, but thanks for asking.\"\n\nMae massaged the hard nuts inside his sack. \"I'd be real careful. Honest.\"\n\nCody cupped her smooth pussy. \"I can see that you would be, but the answer's still 'not now.'\" He ran a finger through her slit and rubbed her hooded clit. \n\n\"Ah, just as well,\" said Mae. \"Right now I probably couldn't shave my own legs without fear of amputating one.\" Cody smiled, and once more inserted a finger deep inside her.\n\n\"That feels better than some of the pricks I've had there,\" Mae cooed.\n\nCody kissed her. She ran her hands along the smooth skin, and pushed her tongue forward. He caught it with his teeth, and pulled it inside his mouth. His finger never stopped teasing her.\n\n\"Ahem,\" spat out Dede.\n\nMae pulled back. \"Uh, sorry. I was just warming him up for you.\"\n\n\"I believe he's plenty warm now.\"\n\n\"Just one more thing,\" Mae said. She bent her head, and took Cody's cock into her mouth. Her lips stretched tightly around the girth. She continued to play with his sac, while her head bobbed up and down. Cody moved his hips to encourage her. When the tip of his cock reached the back of Mae's throat, she pulled away.\n\n\"I want more, but it's now Dede's time.\" Mae stood with her smooth pussy at eye-level with Cody. \"Maybe I should see if that shaving really makes it feel better.\"\n\nCody glanced at Dede and she nodded. He then grabbed Mae's ass and, pulled her pussy to his face. His tongue touched her lips. He used his fingers to spread her lips wider, and licked hard and fast. When he began to lap her clit, Mae's knees buckled and, she had to hold his shoulders. \n\n\"I take it there's no problem with stubble,\" said Dede.\n\nMae shook her head, and breathed deeply. She stepped away from Cody, smiling down at him. Turning she reached the controller to shut off the shower. They stumbled out and grabbed towels. Moving to the bedroom, Mae cast her towel aside, and went to open the champagne. She filled the three flutes, and handed them around.\n\n\"To new adventures,\" she said raising her glass.\n\n\"New adventures,\" Cody and Dede added.\n\nCody drained his glass and said, \"I hope that means fucking, too.\"\n\n\"Yes it does, Cody,\" Dede said and kissed him. \"It most certainly does. Now, my dear friend, my darling Mae, will you kindly get the fuck out of here?\"\n\nMae set her glass down, bowed, and walked to the door. Both Cody and Dede marveled at the small, tight ass that swayed with every step.\n\n\"Have fun,\" she said as she turned to close the door. \n\nDede took a long look at the naked young man. His erection stood out, moving up and down with every breath he took. Dede's stomach jumped at the thought of what she was about to do.\n\n\"Cody, you are so handsome. But, I don't know if I can go through with this.\" He took the empty flute from her hand, set his and hers on the table, and pulled her to him.\n\n\"Kiss me, Dede.\"\n\nWith her eyes wide open, she watched as his lips approached hers. The contact made her shiver. Cody pressed harder, and guided her to him with gentle pressure on her naked ass. As his erection slid up her tummy, Dede closed her eyes. Cody began kissing her eyelids, then moved to her ears, and finally to her neck. Soft moans escaped her mouth as he caressed her.\n\nHolding her hand, Cody led them to the bed. He pulled the covers down, and eased Dede down onto the soft linens. As she fell back, Cody knelt. He eased her knees apart, and stared at her exposed sex.\n\n\"You are remarkably beautiful, Dede.\"\n\n\"For an old lady,\" she mumbled.\n\n\"I don't want to hear anything like that again,\" Cody said as he ran his hands up the insides of her thighs. \"You are beautiful\u2014no qualifiers.\"\n\nHis lips brushed along her skin as he moved his head toward the tops of her thighs. Dede squirmed as he neared her sex. She was already wet, and her heart beat in anticipation. She felt as if an eternity had passed before he finished caressing her other thigh. She needed to feel him on her sex. She guided his face to her center.\n\nCody looked up, smiled, and extended his tongue. Dede held her breath as he lowered himself. At the first touch of his tongue, she let out a pent-up sigh. She knew she was now totally within his power. Cody pushed his tongue as deep as it would go inside her. He began thrusting and caused her fluids to run freely out onto his lips and chin. He pulled back, and Dede cried out, \"Please. Don't stop.\"\n\n\"I need to savor your taste,\" said Cody. He licked himself clean, and began to softly lick the rivulet that poured from her slit. Dede urged his face back to her pussy. Cody now began to lick and suck her lips. He was still tender, but there was an added urgency to his actions. Using his fingers he spread her engorged lips, and captured her hooded nub between his lips. \n\n\"Yes, right there,\" she gasped.\n\nHe pushed back her hood, captured the naked clit between his lips, and pushed hard on it with the tip of his tongue. He then started making slow, soft circles around her clit until Dede felt she was in orbit. Dede raised her hips in response. She felt a finger slide inside, and slowly pump. Cody probed until he felt the special spot, and played with it. Dede let out a cry, and mashed her pussy against his face. She felt Cody insert a finger from his other hand inside her. After it was soaked, he pulled it out, and moved it toward her anus. \"God, yes, yes,\" she urged.\n\nWith no hesitation, Cody rammed his finger deep into her anus. Dede screamed, and came hard. She was not sure if she were using words, but she knew she was vocal. As the crest passed, she felt Cody's teeth on her clit, and another finger enter her anus. She was not prepared for the second orgasm, and let loose a string of obscenities. She ended her rant with a plea, \"Please, no more. Please, Cody.\"\n\nHe pulled his fingers free from both erotic zones, and softly kissed the still exposed and engorged clit. He rested his head on her mons. Dede stroked his hair as tiny aftershocks echoed through her body. \"You taste like I imagine heaven would taste,\" Cody said.\n\n\"That was too much,\" said Dede. \"I thought I would pass out.\"\n\n\"It's only the beginning,\" he replied, and sat up. Cody grinned at Dede, and stood to walk to the bathroom. Dede heard water running and Cody reappeared in the bedroom, drying his hands on a towel. As he neared her, his erection bounced with each step. \n\nStopping a few feet from the bed, Cody gazed at her naked body. \"You are so beautiful, Dede. Simply amazing. Now, let's have some fun.\"\n\nDede smiled, her heart pounding with the joy of the compliment, and the anticipation of what Cody was going to do with the erection waving in front of her.\n\nClimbing in bed, he pulled her to him, and they kissed. Their hands explored each other's bodies. Dede marveled at the hardness of his erection. The last one she had felt was her ex-husband's. Cody's was much larger, but, even more impressive, was its feeling of strength. She never remembered touching an erection that projected so much power.\n\nDede began to kiss her way down his body. She yearned to have that cock in her mouth. Cody's arms caught her and pulled her up. \"Not yet, Dede.\"\n\n\"I want it,\" she pleaded.\n\n\"Later,\" he said, and kissed her. \"Now, we are going to fuck. And, I mean, really, really fuck.\"\n\nHer stomach churned at the impact of his words. In response, she could only say, \"Drawer.\"\n\nCody pulled open the top drawer of the bed side table. He smiled as he spied the condoms and toys. He opened a condom, and slowly rolled it on as Dede watched. He also pulled out the Silver Bullet, and placed it on the bed. ",
        "\"I've been dreaming of this from the moment I saw you in your kitchen,\" Cody said as he raised one of her legs to rest on his shoulder. \"When you looked at my cock, I knew we were going to end up in bed. I promised you a fuck like no other. Are you ready?\"\n\nDede's mouth had gone so dry, she could only nod.\n\nCody positioned his tip at her opening. \"Are you wet enough?\"\n\nShe nodded. He moved inside her in one, long, slow thrust. Dede felt her vagina was going to rip, but she breathed through her mouth, and her muscles relaxed enough to welcome the cock. When he was all the way in, Cody bent forward and kissed her. His kiss was tender, and only added to the unworldly feeling she was experiencing with the large organ stretching her cunt.\n\nCody began pulling out slowly and plunging back in. He released her leg and she was able to push back to meet his thrusts. As her secretions increased, so did his tempo until he was pounding her. Each time he reached his limit, and his balls bounced on her ass, Dede grunted. After a couple minutes, her grunts morphed to moans and finally to loud groans. Cody was now moving at a pace that left no time for any recovery. Her cries became one continuous and erotic sound. Dede knew she had a couple smaller orgasms, but felt the pressure building to something big and frightening. She had never before felt this turned on. \n\nCody now positioned both legs on his shoulder and held her hips as he drilled her. Dede felt one hand move from her hip. In a few seconds she felt something cold against her anus. \n\n\"Oh, no, Cody. I can't...\"\n\n\"You want your ass played with. I saw you do it.\"\n\nHer butt was covered with juices flowing from her pussy as Cody continued his screwing. Twisting the bullet, he pushed it past the sphincter. \"Oh, sweet fuck,\" Dede screamed. \n\nWhen it was securely inserted, Cody turned it on, and dialed up the highest setting. \"No, no,\" screamed Dede, not caring if her voice carried.\n\nCody pounded harder than ever. Sweat covered his entire body. He could feel the vibrations transfer through the thin membrane onto his cock. It drove him to the edge. Grasping Dede's hips, he slammed her hard. With one hand on the bullet, he moved his other to her clit. All his weight was on his knees as he knelt in front of her. He pinched her clit and that was it. She was bucking with him and cumming. He could hold back no longer, and his sweet release came finally. He thrust several more times as he emptied himself into the condom. Dede twitched uncontrollably beneath him. \n\nHe turned off the vibe, and pulled it from her. Easing her legs back to the bed, he pulled his softening cock from her pussy. He lay beside her and kissed her lips. Looking at the clock, he saw that they were making love for five minutes. It seemed longer, but he knew it was because of the intensity with which they fucked.\n\nDede rolled into his arms and closed her eyes. Darkness fell, even though the sunlight burned into the room.\n\nDede awoke some time later as she felt her sex lips parting. Cody was behind her and entered with the assistance of some lube. His hand pressed against her stomach, holding her steady as he reached his limit.\n\n\"You're ready for more?\" she asked.\n\n\"Hey, I'm young and supposed to be ready, remember?\"\n\nThis time Cody moved at a slow and steady pace, allowing Dede to climb the mountain little by little. He played with her clit and teased her breasts. After ten minutes, she hovered on the edge. \"Oh, this is so nice, Cody. I'm so enjoying it.\"\n\n\"Me, too, Dede.\" He pulled back until just the tip of his dick was trapped by her lips. Without warning, he jammed back in. Dede caught her breath and squeezed her thighs together. With four more hard thrusts, she went over the edge. Although nowhere as intense as her orgasm from the previous fucking, this one was just as satisfying. \n\nCody withdrew. He pulled his condom free, knotted it and dropped it next to the one already on the floor. Dede rolled over and bent to lick his softening dick clean. When she had removed all trace of his semen, she nestled in his arms. This time they both slept entangled together.\n\nDede thought she heard something, but it seemed so far away. Keeping her eyes closed, she snuggled tight against the hard body next to her. As she was about to drift off, she heard the noise again. Finally, she opened one eye to see Mae standing in the doorway and knocking on the jamb. She wore a long gauzy caftan that allowed her toned body to peek through.\n\n\"What day is it?\" Dede asked.\n\nMae laughed and poured three glasses of champagne. \"Honey, it's about an hour after you single-handedly broke the noise restriction barrier in this community. My god, girl, you can scream.\"\n\nMae looked at the two used condoms on the floor. She sat on the edge of the bed, and handed a flute to Dede. Pushing herself up, Dede took a sip. The cold liquid ran down her parched throat, and she put the glass back to her mouth and drained it. Cody began to stir and rolled onto his back. Mae grinned as took a mouthful of champagne, and then dribbled it onto his cock.\n\n\"Whoa,\" he cried. Mae bent quickly, and licked it off.\n\n\"I think that was the best wake-up call I ever had,\" Cody said as he sat and rested against the headboard. Dede handed him a glass of champagne, and the three toasted silently. \"So, I guess things went pretty well,\" Mae said.\n\nGrinning, Dede and Cody exchanged a look. \n\n\"Mae, let me put it this way. Dede is a most beautiful, passionate and responsive woman. I consider myself the most fortunate man alive right now.\"\n\nIn spite of her snarky nature, Mae had no snappy response. She could see Dede holding back a tear. She could not speak, so she drank.\n\n\"So, do I get a turn?\" Mae asked.\n\n\"That's up to Dede,\" said Cody. \"But, if she says yes, first there is still something she and I need to do.\"\n\n\"What?\" asked Dede.\n\n\"I'm going to take your ass like it's never been taken before.\"\n\nBoth Dede and Mae gasped at his boldness. \n\n\"I'm ready,\" he said. \n\n\"I guess I should go,\" said Mae with some regret.\n\n\"Why don't you help me get Dede ready?'\n\n\"Really?' said Mae.\n\nHe rolled Dede onto her stomach. Gently he lifted her hips until her butt was in the air, and her head rested on the bed. Stroking her thighs, he eased them apart. Her butt and pussy were now exposed. He massaged her cheeks trying to start the process of relaxing her sphincter.\n\n\"Before I use the lube,\" Cody said, \"you should do your thing.\"\n\nMae moved behind her friend. For a long time she had wanted to be with Dede; now that time was here. Beginning with soft kisses on her cheeks, Mae covered the smooth flesh. Next, she buried her face between Dede's legs, licked her pussy and moved her tongue along, past her butt hole and to the top of her crack. Dede let out a long sigh. As Mae prepared to repeat her action, she saw that her friend was already wet. She spent more time exploring the open pussy with her tongue. Dede squirmed and moved her butt from side to side. Mae slipped one finger inside Dede's pussy, and then using the liquid on her tongue licked Dede's butt hole. \n\n\"Oh, yes,\" said Dede.\n\n\"Hold her steady, Cody.\"\n\nCody moved behind Mae, his cock pushed between her ass cheeks. He reached around her, and grabbed Dede's hips. Mae moved forward and tongued the tight opening. Dede tried to pull away, but Cody held her fast. Mae began to work the point of her tongue inside, savoring the salty and musky taste. Dede was crying out with every thrust of her friend's tongue. Mae pulled her finger from Dede's pussy, and pushed the wet digit against the opening. Slowly the sphincter relaxed ,and Mae was deep into her anus. She pumped for what seemed to Dede like ages. When Mae retracted her finger, Dede sighed in frustration. Her disappointment soon ended as her friend's tongue went deeper, now that the muscle had loosened. As Mae feasted on her rear, Cody reached for the lube. \n\nMae felt the tube being pushed into her hand. Slowly, she stopped lapping Dede's ass, and squeezed a large glop of lube onto her fingers. She covered the outside of her friends rosebud, and then pushed inside to coat the first few inches. She repeated lubing her friend's butt, eventually working two fingers in with tons of Astroglide.\n\n\"Dede, I can assure you I have no diseases. Could I do this without a condom?\"\n\n\"No,\" Dede whispered.\n\n\"Mae, get me ready,\" he commanded.\n\nMae looked at the hard, red cock. She bent and took it in her mouth. Taking time to adjust to its thickness, she soon began to suck and bob up and down. \n\n\"That's enough for now. Condom and lube me.\"\n\nMae pulled a condom from the stash in the drawer, and rolled it on him. She then coated his erection with the lube. \n\n\"Put me inside Dede.\"\n\nAs he leaned forward, hands on Dede's hips, Mae took his cock and guided it to the glistening opening in her friend's rear. Cody let his cockhead rest at the opening. Slowly he pushed forward, and Dede cried out. \n\n\"Play with her clit, Mae.\"\n\nMae reached under Dede, and rubbed the hard clit. Dede grunted, and pushed back to capture the first two inches of the big cock at her ass. Cody held still until he felt the slightest loosening of Dede's muscles. Mae kept stimulating Dede with her fingers, and Dede moaned louder and louder. Taking firm hold of her hips, Cody pushed forward slowly. Dede asked him to pause. Cody remained still with his cock a few inches inside her.\n\n\"Mae, use your fingers in her,\" Cody prompted.\n\nMae slipped two fingers inside Dede as her other hand still stimulated her friend's clit. She had wanted to touch her friend for a long time. Now as Dede tried to accommodate Cody, Mae was fulfilling her fantasy. Within a few moments, Dede said she was ready. Cody held her hips and slowly moved forward. Dede was breathing through her mouth and grunting softly. Within a minute he was buried in her ass.\n\n\"Oh, sweet Jesus, that feels so fucking good,\" said Dede.\n\nKnowing she was ready, Cody started fucking her ass. His tempo built as her muscles stretched to the limit, and relaxed as much as they could. Mae still had two fingers in Dede's pussy as she massaged her friend's clit. She could feel Cody's cock moving in and out with just the membrane separating her finger from it.\n\nDede had a small orgasm, but Cody did not slow down. His body was covered with sweat, and he grunted with every thrust. With two fingers pumping her pussy and another finger working her clit, Dede was quickly losing any sense of propriety. She screamed for Cody to fuck her ass harder. \n\n\"I'm close,\" said Cody. \"Let's finish big. Can you suck her clit?\"\n\nMae dropped to her back, and slid underneath. She marveled at the sight of Cody's cock pounding in and out, and his balls slapping at Dede's pussy. She kept one finger inside her friend and wrapped her lips on the clit. It took some effort because of the hectic thrusting. \n\nDede was breathing hard, and making wild sounds. \"Now,\" shouted Cody. \"Do it.\"\n\nUsing her teeth, Mae trapped Dede's bud with her teeth and pulled it while jamming the tip of her tongue hard against the bud. Cody rammed as hard as he could and slapped Dede's ass. She screamed, and he yelled as his orgasm burst inside his condom still deep in her butt. Dede's pussy was running like a hose. Mae just lapped softly, but could feel her friend contracting around her fingers in her vagina. \n\n\"Need to lie down,\" Dede said.\n\nMae scooted out and her friend collapsed face down on the bed. Cody slowly extracted his cock, and stripped off the condom. His cock was soft and wet. He looked at Mae, and smiled. Getting up he walked to the bathroom to clean up.\n\nMae saw tears running down her friend's cheeks. She lay next to Dede, and stroked her naked back. Cody returned, and lay on the other side. He reached down, and pulled the sheet up to cover them. In a few moments the three fell asleep.\n\nWhen Dede finally woke up, she was in bed spooning Cody. As she came fully awake, the memories of what happened in this bed came rushing back. She became aware of the hard nipples pressed into her back. She moved her head, and Mae's lips caressed her cheeks.\n\n\"How ya doing, sweetie?\"\n\nDede exhaled and replied. \"I have never felt like this with sex, Mae. Every nerve in my body was humming. Thank you, I couldn't have done this without you.\"\n\nMae kissed the back of Dede's neck, and answered, \"My pleasure.\" Dede turned to face her friend. Their eyes locked and then their lips met. The kiss was long, soft and sweet. Dede felt both love and desire as their bodies touched.\n\n\"I think we crossed some barriers,\" she said pulling her mouth away.\n\n\"It's all good with me,\" Mae said. \"Regrets on your part?\"\n\n\"No, none.\" She kissed Mae, and was the first to offer her tongue. They kissed for a long time. Dede felt Cody stir behind her.\n\n\"Hey,\" he said.\n\nBoth women smiled.\n\n\"Gotta pee,\" Cody said. \"Don't go anywhere. OK?\"\n\n\"We won't,\" said Dede.\n\nAs Cody stood, Mae got out of bed. \"Where're you going?\" asked Dede.\n\n\"Help him pee, of course.\"\n\nMae followed Cody's tight, naked butt into the bathroom. He turned as he noticed her behind him.\n\n\"Allow me,\" she said. She lifted the toilet seat, and took his cock in her hands. She gently pulled him forward. She tilted the head up, and licked it. \n\n\"Mae, I have to pee really bad.\"\n\n\"Fine,\" she said with an exaggerated sigh. She pointed the tip toward the bowl. Cody let out a breath, and tried to relax. In a couple of seconds his bladder responded, and a strong stream began to flow. Mae directed his cock so the stream moved around the bowl. When the last drops trickled down, she shook his dick. She pulled his cock, and his body turned to face her. She guided his still soft member into her mouth. \n\nMae could taste a faint remnant of pee, but it didn't bother her. She was amazed that, even limp, Cody's cock filled her mouth. She played her tongue into his pee hole. She could hear him groan. As his cock thickened, Mae cupped his balls. They filled her palm. Using two hands, she was able to isolate one nut while she continued to suck his cock. She gently squeezed his nut and Cody reacted my pushing forward and moving his cock deeper into her throat. \n\nMae let his cock fall from her mouth ,and pushed it aside. She took the nut into her mouth and sucked hard.\n\n\"Jesus, Mae. Oh, god that feels good.\" She continued sucking and licking the nut as his cock continued to stiffen. She quickly switched back, and began to move her head up and down. When she had him completely hard, she pulled off.\n\n\"Come on, luv, back to bed.\" She grabbed his cock and led him back to the bedroom.\n\n\"Dede, honey, look what I found.\" Dede stared at her friend's thin fingers wrapped around the thick cock.\n\n\"Nice. What are you going to do with it?\"\n\n\"Going to put a nice condom on it, and watch him fuck you doggy style, of course.\"\n\nDede felt a new flow of moisture between her lips. She smiled, and rolled onto her tummy. Slowly she lifted her ass until it was up in the air and her head rested on a pillow. She could hear the drawer open, the foil rip and a sigh from Cody.\n\nDede was amazed at how easily she was learning to give herself over to this newfound sexuality. It had been too long for her to have denied her cravings, and she was leaving doubt and inhibition behind. As she felt Mae's fingers playing along her lips and opening her vagina, Dede realized that she was more than ready to explore new experiences with her friend.\n\nHer breath caught as Cody's broad tip pushed inside. He grabbed her hips, and slowly moved forward until his pubic hair was tight against her ass cheeks. She asked him to pause for a bit. She said it was not that he was hurting her as much as she wanted to enjoy the feeling of fullness he brought her. His cock made contact with every inch of her. She contracted her vaginal walls around him, and held him tight. \n\n\"Fuck, Dede, that feels so good,\" he said. He bent forward, and kissed her back while he slid a hand around to tease her hanging breast.\n\nAs she relaxed her vagina, Cody slowly pulled back, and pushed back in. He built up from slow to frenetic. Dede put her hands against the headboard to give her leverage. Mae lay next to her, smiling encouragement. Cody was pumping hard, and Dede matched his eagerness by ramming her rear back to accept his thrusts. It seemed like they were going at it for hours.\n\n\"Dede, I'm not going to cum. Had too much of you before. I'll stay hard and you let me know when you've had enough.\" He buried his shaft to its length.\n\n\"Cody, I'm exhausted. I've had a couple orgasms. Let's take a break.\"\n\nCody pulled out, his erection bouncing. Dede fell forward on the bed. Mae let her hand fall onto the hard shaft.\n\n\"Not going to just waste that are you?\"\n\n\"Any suggestions?\" he asked.\n\n\"Lie down,\" she commanded.\n\nCody flopped onto his back. Mae straddled his thighs, keeping one hand on his erection.\n\n\"Dede, is this OK?\"\n\nDede turned her head to see her best friend on top of Cody. Even if she could endure another round right now, she knew what Mae needed.\n\n\"Go for it, love.\"\n\nMae moved up and raised her hips. When her pussy was hovering over the tip of Cody's erection, she eased herself down.\n\n\"Oh, yes,\" she said. \"Cody, I know you must be tired, so just lay there. I'll do most of the work.\"\n\nDede watched as her friend kept her promise. Mae rode Cody with abandon. She cared little that Dede was watching, and did not seem too concerned if Cody was enjoying it. She rode for her own pleasure, and it seemed she was extracting every ounce of sex she could.\n\nShe cried out a couple times when an orgasm hit, but kept the tempo at a fast pace. Her vocal expression became louder and raunchier as she seemed to near the end. With one final thrust down to take every inch of Cody, she cried out and her body shook. Sweat poured off her, and her eyes were closed. Slowly she collapsed onto his chest. He wrapped his arms around her, and kissed her head.\n\n\"Guess it wasn't bad?\" he said.\n\n\"I'm ruined,\" she answered. \"Never had one like that before.\"\n\n\"I want a remembrance of this day,\" he said. \n\n\"Meaning?\" asked Mae.\n\n\"Picture.\"\n\nMae and Dede's eyes met. They could read the agreement in each other. \"Get your phone, Cody,\" said Mae.\n\nHe pulled his phone from his jeans and crawled back into bed to rest between the two women. He held it out, and took a selfie. They looked and the picture showed the three of them with broad smiles. You could just see the tops of the breasts of the women.\n\n\"You can't use this as a trophy to show your friends,\" said Mae. \"If we hear that you did, we will never see or talk with you again. Understood?\"\n\n\"I wouldn't do that. I want this for myself. This has been the best afternoon of my life and I want to have a picture that helps to capture how we all felt.\"\n\n\"Cody, you're the best fuck I've ever had,\" said Mae. \"How do you know who to please us? You're still so young.\"\n\n\"I had a great teacher,\" he said and laughed. \"Well, she was my teacher in high school. We re-met when I was a sophomore in college. We ran into each other at the beach. She was wearing a sexy two piece. I sat down and told her she didn't look anything like the teacher I had for English. You can imagine my shock when she reached over and pulled my swim suit out. She looked at my cock, and said I didn't look like the student she had. We spent the rest of the day and the week at her beach rental. She helped me understand that sex with an older woman was about more than fucking. She liked the fucking, but she also taught me how to appreciate the subtleties of a woman's body. Seems, like she was a pretty good teacher, right?\"\n\n\"She has earned my undying gratitude,\" said Mae. \"Would I know her?\"\n\n\"Probably, but I'm not saying her name. That wouldn't be fair.\"",
        "Dede and Mae kissed his cheeks. There was a good, young man attached to this perfect cock.\n\nThe rest of the day was spent in bed; the two women alternating playing with Cody. When he finally admitted he couldn't get it up any more, they went downstairs. They took a dip in the pool. Dede and Cody sat outside while Mae went in for some snacks. She returned carrying a tray with an ice bucket of beer, cheese and crackers. The three dug in surprising themselves with both their hunger and thirst.\n\nWhen they had their fill, Cody started picking up his clothes.\n\n\"Not going somewhere, are you?\" Mae asked.\n\n\"Sorry. On my over here I got a call from work. I need to go in tonight,\" he said as he pulled on his pants. \"I tend bar a few nights a week, and can't afford to lose this gig.\"\n\n\"Can I coax you to call in sick?\" Mae asked.\n\n\"Love to stay, but I gotta go.\"\n\n\"Is this the end?\" asked Dede.\n\n\"Not if I have anything to say about it,\" he said smiling at the two women.\n\n\"We'll make a plan,\" Mae told him.\n\n\"Sounds great,\" he said.\n\n\"Call me,\" Cody said. \"It might save the embarrassment of me calling you when your kids are around.\"\n\n\"I will,\" said Dede.\n\nCody was dressed. He kissed Dede, and then Mae. \"I will never forget this.\"\n\n\"Better not,\" said Dede.\n\n\"Right, and you owe me something special from behind,\" said Mae.\n\n\"Count on it. And, may I say to both of you ladies\u2014this was A-W-E-S-O-M-E.\"\n\nDede and Mae laughed until their sides hurt as Cody left. \n\n\"So are we just a fling for him?\" asked Dede.\n\n\"Who knows,\" answered Mae. \"Did you not have the best sex ever?\"\n\n\"It was good,\" said Dede.\n\n\"Bullshit! It was the best you ever had. You used him every bit as much as he used you. That's the definition of a fling. Do you want him to hang around all the time? Are you going to date him, and take him home to let the girls know you're screwing? No, honey, you had a fling. Maybe it will happen again, and maybe it won't. Don't try to make it into some big romantic deal. It's sex, and damned good sex at that. I think he'll want more. I know I want to do a lot of nasty things with him. But, in the end, it's still just sex.\"\n\nDede remained quiet for a long time. Finally she turned to Mae, and kissed her. \"Are you going to tell Jack?\"\n\nMae thought for a bit. \"Yes. I'll tell him. Of course, he'll want details. So, can I tell him everything?\"\n\n\"You mean about me and you?\" asked Dede.\n\n\"Yes.\"\n\n\"Will that upset him?\"\n\n\"It will make him horny as hell,\" said Mae. \"You understand he will want the three of us to get together.\" \n\n\"What do you think about that?\" asked Dede.\n\n\"I think it's worth serious consideration. We can plan dinner one night and talk about everything.\"\n\nDede laughed. \"Just talk?\"\n\n\"Maybe, I'll make brownies.\" The two women hugged and laughed.\n\n\"What are we going to do now?\" asked Dede.\n\nMae ran her hands along Dede's naked flesh letting her fingers come to rest on her tender pussy.\n\n\"I do have a couple ideas,\" Mae said. Her mouth slowly moved down, and Dede gasped as Mae's lips encircled her clit. She also grasped two new revelations about herself.\n\nOne, she decided that sex with the right woman can be fun as Mae's lips caressed her labia. \n\nThe second thing she knew was that sex with a twenty-two year old man is fun. Dede smiled as she realized, \"I'm a cougar.\"\n\n*\n\n(My thanks to Prof Davros, HsytLit for their support and editing. There are a couple others who also help me, but they want to remain anonymous. These guys are the greatest and saved me from so many errors. As always any remaining mistakes are all mine. I'd love to know what you think of this story. Thank you for reading my story. You can leave a comment here or write to me at my personal email, which you can find in the Contact section at my home page on Literotica. I respond to every email I receive.\n\nA number of readers have asked to let them know when a new story posts. I am happy to do so, if you send me a personal email. Also, you can select \"Favorite Author\" at the end of my story. Then, Literotica will update you whenever a story from me is posted.) "
    ],
    "authorname": "AltheaRose",
    "tags": [
        "cougar",
        "milf",
        "older woman",
        "younger man",
        "first meeting"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/could-she-really-be-a-cougar-ch-02"
}