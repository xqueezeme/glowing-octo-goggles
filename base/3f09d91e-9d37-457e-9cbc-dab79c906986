{
    "title": "Aurora - Way of the Goddess Pt. 07",
    "pages": [
        "This is a work of fiction. All characters depicted are 18 years and over\n\n*\n\nWatson fell face-down onto the bed, then rolled over and hooked off his shoes. It had just gone midnight. Beck was only a few doors away, but tomorrow was another big day, especially since it was already today, and she'd probably earned herself a night off. Cleaning his teeth while he took a quick shower, he was still towelling himself dry when there was a tiny little tap on the door. \n\n'Rat... tat tat tat... tat tat.' Their secret knock.\n\nTowel around his waist, Watson opened the door a crack and Beck squeezed through like a cat on a date with the fridge. Throwing her keycard on the desk, she reefed her oversized T-shirt off and flung herself naked on the bed. Legs spread, she draped a long, skinny arm over her eyes. \"Oh woe is me,\" she cried, \"poisoned by a wicked witch. Oh where, oh where can I find some handsome prince to fuck me out of my slumber?\"\n\nWatson jumped up and down on the spot till the towel fell away. \"Fresh out of princes I'm afraid. Would a wrinkly old peasant do?\"\n\nKneeling on the floor at the end of the bed, he kissed his way upwards from her ankles, parking his torso on the mattress as his mouth came in range of her pink-slitted mound. Her skin was the colour of gold in the glow of the table lamp, her soft belly heaving with pleasure and excitement. \"I've been waiting for this all night.\" she shivered, elevating her hips as a stiff, prehensile tongue began working her groove and Watson said something through a mouthful of pussy that could have been, 'so have I'. \n\n\"Dommy?\" Beck asked at length. \"Do you like Macca?\"\n\nWatson squirrelled his tongue into Beck's entrance and she gasped. He nodded. \"Uh huh.\"\n\n\"I think she likes you too.\" Beck replied breathlessly, her pelvis rocking and rolling in response to the old man's attention. \n\nWatson withdrew his tongue and raised his head. \"No. She doesn't.\"\n\n\"Uh huh,\" Beck nodded earnestly, \"she does.\"\n\n\"No. She doesn't.\"\n\n\"No, really. She does.\"\n\n\"Well that's tough luck, isn't it?\"\n\n\"Why?\"\n\n\"She's been sentenced to marriage.\"\n\n\"So what? Tanya's married. That didn't stop you.\"\n\n\"Vicky's not Tan. End of story.\"\n\nBeck put a hand on Watson's head and pushed him back down. \"Settle petal, I'm just saying.\" After a few more minutes of Watson's sucking and slurping, she piped up again. \"Know what she said?\" Watson shook his head with his tongue buried inside her. \"She said...\"\n\nWorming the tip under the hood of her clit, he gave the hard little bead a good tongue-lashing. Beck grabbed his head in both hands, back straining. \"She said... I was lucky... to have someone... who loves me so... so... so... Oh... Dommy. Finger me!\"\n\nPulling back far enough to admire the sight, Watson teased Beck's plump outer lips apart and winkled his finger into her hole. \"Oh yeah...\" Beck huffed, eyes closed, the ring of pink muscle gripping the intrusion, \"do that...\"\n\n\"So what did Vicky say?\"\n\n\"She said... I was lucky... to have someone who... who loves me... so much and I... and I...\"\n\nThere was a knock at the door that made them both jump. Beck propped herself up on her elbows while Watson slid onto the floor and peered over his shoulder. Pulling the old man's finger out, she sat and tapped him on the arm. Frowning, she mouthed, \"Who's that?\"\n\nWatson's first thought was it was hotel security. The hotel was lousy with CCTV. They would have seen Beck leave her room and enter his. 'Paranoid bullshit' he thought in the very next breath, though his heart was pounding.\n\n\"Damon?\" a voice called in hoarse whisper. \"Are you awake?\"\n\nBeck's jaw dropped. \"Macca?\"\n\n\"No.\" Watson shook his head as he rose to whisper in her ear. \"It's flippin' Ally!\" This was obviously the little jet pilot's MO. Abandon him at the lift feeling bereft, then turn up unannounced and knock his socks off.\n\n\"Damon?\" the voice quavered as little knuckles rapped on the door.\n\n\"How do you know?\" Beck demanded in a harsh whisper.\n\n\"I just do.\" Watson insisted then looked over his shoulder at the door. \"Just a minute!\" he called, looking desperately around the room for an escape hatch. \"You'll have to hide!\"\n\n\"Are you gonna fuck Ally?\"\n\n\"Not if she sees you. Quick!\"\n\n\"Where?\" Beck asked then jerked her head in the bathroom's direction. \"In there?\"\n\n\"No, she might need a pee.\" Watson ripped the slatted door of the wardrobe open and planted his hand in the middle of Beck's bare back. \"In here!\"\n\nBeck fended him off and rounded on him, glaring. \"I am not spending all night in there!\"\n\n\"Hello Damon?\" Another few knocks.\n\n\"Hang on,\" Watson sang, \"just getting decent.\" Looking at Beck he clasped his hands. \"Moosh pleeeease! We'll go straight back to her room!\"\n\n\"Well there'd better be some left for me.\" Beck whispered angrily as the old man threw her shirt and keycard in after her and shut the door on the room's generous closet. Running around in a panic, Watson finally gathered his wits enough to pull on his boardshorts and T-shirt, taking care to cover the inch or two of stiff dick poking up through the waistband. Giving his scalp a vigorous rub, he swallowed his pounding heart and stepped to the door.\n\nWhen he turned the handle the door burst open with weight of the body behind it. Clad in a short, dark green silk slip, clutching a bottle in one hand and two Champagne flutes in the other, the visitor stumbled a little, trying to get her balance after the dramatic entrance. Given the dance of her pointy little breasts under the silk, and the way the fabric clung to her contours, there were no prizes for guessing she was naked underneath. Watson stared at her, open mouthed. \n\n\"I hope it's not too late?\" she slurred, looking at her bare arm. \"It's just... I'm not sleepy yet and was wondering if we could talk.\"\n\nClosing the door behind him, Watson followed her in, stealing a peek at the slatted wooden wardrobe, almost convinced he could hear heavy breathing inside. \"No, not at all. It's holidays, after all.\"\n\nWeaving across the room to the writing desk, she carefully set the bottle down. Closing one eye to focus, she placed the flutes unsteadily beside it, along with her key, then stood back to admire her handiwork. She had tried to bundle her hair up but given her inebriation results were mixed- part dishevelled, part carefree. Nervously licking her lips, she nodded at the bottle. \"Nightcap?\"\n\n\"Why not?\" Watson nodded. \"Just a splash. So, what can I do for you, Sweetheart?\"\n\nThe young woman handed him the bottle to do the honours. While there were two comfortable armchairs, one round ottoman and a writing chair to choose from, she turned around and sat heavily on the end of Watson's bed. Her slip rode up and it took every ounce of won't-power to avoid sneaking a peek under the hem. Popping the cork, Watson poured two glasses with a shaking hand. A similarly drunk girlfriend had once revealed a jealously guarded female top-secret: If a girl came into your room and sat on your bed, you were in.\n\nDiscretion being the better part, Watson handed her a drink, then dragged the writing chair away from the desk and manoeuvred it into position facing her. Raising his glass, he touched it to hers. \"Cheers.\"\n\n\"Cheers to you, Damon.\" she said then downed her drink in a single breath. Heaving a gassy belch, she swallowed hard against a surge of reverse peristalsis.\n\n\"Refill?\"\n\nShe waved him off, swallowing hard to keep the first glass down. \n\n\"Something troubling you, Macca? Or did you just want a little chinwag?\"\n\n\"Yep!\" she nodded blearily, \"Nope. What I mean is... well... You wanna know the absolute truth?\"\n\n\"It's always a good starting point.\"\n\n\"I don't know what's troubling me. A few times today I thought I was going crazy.\"\n\n\"How so?\"\n\n\"I don't know. It's just... it's just...\" she threw her arm up in drunken frustration then held out her glass. \"Can I have another one?\"\n\n\"You might want to take it easy, Sweetheart.\"\n\n\"You see! Nobody ever calls me that. Except Tanya. And sometimes Alana. But not even my own parents and definitely never men! May I ask? What do you mean when you say that?\"\n\n\"Mean? I don't mean anything. It's just a name you call someone.\"\n\n\"Someone you like?\"\n\n\"Someone you think is sweet and beautiful and has a good heart.\"\n\n\"Do you think I'm sweet?\"\n\n\"As sun-warmed honey.\"\n\n\"And what about... what about... I mean... Do you really think I'm beautiful?\"\n\nWatson nodded. \"Of course I do. In fact I think you're gorgeous.\"\n\nA big fat tear spilled onto Vicky's cheek. \"No one's ever called me that.\" she announced in a tiny voice. \"Ever.\"\n\n\"Bullshit! What about your boyfriend?\"\n\n\"I don't have a boyfriend.\"\n\n\"I thought you were engaged?\"\n\n\"He's my fianc\u00e9, not my boyfriend.\"\n\nIt was a little late in the evening for pedantry so the wordsmith let it slide. \"Your fianc\u00e9, then. He must tell you all the time, surely?\"\n\nVicky shook her head. \"Nope.\"\n\n\"What's the matter? Is he blind?\"\n\nVicky shrugged, looking miserable. \"He's... how can I say...\" she looked at her hands, clutching the Champagne flute in her lap, \"very reserved.\" \n\n\"Well what does he call you?\"\n\n\"Umm.. Victoria?\"\n\n\"And that's it?\"\n\nVicky nodded, sniffing, then took a sip.\n\n\"Well what about everyone else?\"\n\n\"Well Pastor once called me a harlot.\" she said almost inaudibly.\n\nWatson took a slug of his Champagne, trying surreptitiously to reorganise the contents of his boardshorts. The initial boost to his blood pressure at first sight of Vicky was beginning to ebb, as it became apparent he was dealing with a troubled and vulnerable young woman. \"How big is this Pastor guy?\" he growled. \"Want me to give him a punch him in the head?\"\n\n\"Pastor Neil is a wise and Godly man.\" she said un-persuasively. \"He raised me up after I fell by the wayside.\"\n\n\"And called you a harlot? He still gets a punch in the head.\"\n\nEyes downcast, Vicky swiped her nose with the back of her hand. \"But he's right. I am a harlot! Cos' hard as I try to keep my mind pure, these disgusting blinky thoughts keep popping into my head.\"\n\n\"What thoughts?\"\n\n\"I can't tell you. It's too humiliating.\"\n\n\"Oh come on. Macca. We're all friends here.\"\n\nThe young woman shook her head, sniffling.\n\n\"Well, what are they to do with? These disgusting thoughts?\"\n\nWithout looking up, Vicky extended a finger and wrote in the air, a three letter word ending in 'X'.\n\n\"You've been thinking about sex?\"\n\nVicky nodded miserably. \"About four times today.\"\n\nWatson palmed his forehead. \"Are you serious? I didn't think about sex about four times today.\" He frowned at the ceiling in thought for a second. \"Or was it three? Who cares? Where's the harm?\"\n\n\"Some of those thoughts didn't involve my fianc\u00e9,\" Vicky admitted, her voice almost a whisper, \"though that would be bad enough. I'm supposed to be saving the temple of my body for him, and even the thought of straying is a sin. I know all this but I still can't stop myself thinking about... thinking about...\"\n\nWatson's heart skipped a beat. 'Me,' he pleaded silently, 'please say me'. \"They're just thoughts, Macca.\" he shrugged. \"For you to enjoy in the privacy of your own mind.\"\n\n\"That's just the problem. I do enjoy them, a lot. And I shouldn't. It's lust Damon, the deadliest of all carnal sins.\"\n\n\"Bah! They're just the horny thoughts of a normal, healthy young woman. Your problem is you've been reading the wrong books.\"\n\nVicky waved the accusation away. \"S'not true.\" she slurred. \"There's only the one that counts. And apart from my textbooks it's the only one I'll ever need.\"\n\nWatson opened his mouth to contradict but, in his minds eye, saw a premature end to the communion if he did. \"Look,\" he said gently, \"there's nothing wrong with a juicy little fantasy now and then.\"\n\nVicky's shoulders slumped. \"Unless it's rooted in sin.\" Heaving a breath, she leaned forward to rise. \"I'm sorry, Damon, I shouldn't have troubled you.\" \n\nWatson saw straight down the front of her green silk slip and for a moment was struck dumb. She had perfect, cupcake breasts the colour and texture of cream, firm and round and tipped with stiff, candy-pink nipples. And now the whole, stunning package was getting set to walk right out the door. He stood as she did and placed his hands on her shoulders. \"You're not troubling me, Vicky, I can assure you.\"\n\nTime froze for half a dozen heartbeats. Eyes closed, face uplifted, she melted into him. Those big, beautiful lips tasted every bit as good as they looked, but she kept her mouth shut as she puffed and panted her way through their first feverish kiss. Watson's hands wandered the topography of her back, the sharp wings of her shoulder blades, the ridges of muscle bordering her spine. When he grabbed a handful of her firm, round bottom her legs almost gave way. \"Oh, God\" she whimpered into his mouth\n\n\"Are you okay?\"\n\n\"No one's ever... ever...\"\n\n\"Ever what?\"\n\n\"Touched me like that. I've never even been kissed. Not on the mouth.\"\n\n\"Never?\"\n\nVicky broke off and pushed him away. \"Never!\" Looking around the room, teetering on the brink of the precipice, she turned on him. \"Damon... I want to look at you.\"\n\n\"Well peek a boo.\"\n\n\"No!\" Vicky said flatly, \"I want to LOOK at you. All of you!\"\n\n\"Okay.\" Watson raised his arms and began a slow revolution.\n\n\"I mean n... n... naked!\"\n\nWatson's pirouette clanged to a stop. \"Naked?\"\n\n\"I mean it. I've never even seen a man's body before and soon I'm going to marry one.\"\n\n\"You've never seen a guy naked?\"\n\n\"Well the odd one or two on Nat Geo,\" she replied guiltily, \"mainly in Africa, but they always blurred the sinful bits out. And anyway, Aaron doesn't like me watching that stuff so I just turned it off.\"\n\n\"Aaron? He's your boyf... your fianc\u00e9?\"\n\n\"That's right.\" \n\n\"And you've never seen him starkers?\"\n\n\"Certainly not.\" Vicky frowned. \"We're not married yet.\"\n\n\"You've never watched a porno?\"\n\nVicky puffed herself up with three parts indignation to four parts alcohol. \"How dare you! I would never sully my soul with that sort of filth. Look. It's simple, I have to get married soon and I have no idea what to expect. You can keep your eyes closed if you like, but please, Damon, just let me look at you.\"\n\nThere was a little 'Khaa-tieww!', like a mouse sneezing, and Vicky froze. \"What was that?\" she whispered, looking around with wide eyes. \n\nWatson put his hands on her hips to distract her. \"Just someone out in the hall.\"\n\n\"But it sounded like it came from in here.\"\n\nWatson sniffed. \"Well, it wasn't me. Was it you? Did you just sneeze?\"\n\nChecking once more for lurking witnesses, Vicky licked her lips. \"Damon. Listen. I'm about to get married. And when I do, I'm gonna have to perform certain... well... duties. And I have absolutely no clue what's in store.\" She gripped the hem of Watson's T-shirt. \"Please, Damon. I just want to look at you, that's all. Come on. May I?\"\n\nWatson raised his arms in reply and she reefed the shirt off over his head. Staring at him, slack-jawed, she went to put her hand on his chest then snatched it away. \"Oh my God...\" she breathed, \"you're beautiful.\"\n\n\"Oh, Macca. That's just Champers talking. I'm fif-\"\n\n\"Damon,\" she held up her hand, \"just don't! Okay?\" Looking him up and down she put her hands on his shoulders. \"Can I see...\" she asked hesitantly, \"like... all of you?\"\n\nWatson struggled for the correct response. There was half an erection skulking in his shorts and he wasn't quite sure how to proceed. Defuse the nascent hardon and risk underwhelming the girl, or crank it up to full-noise and scare the bejesus out of her? Vicky solved the dilemma by seizing hold of his waistband. She blinked her green eyes. \"Pretty please?\"\n\nDrawing a breath, Watson hefted a shoulder and said, \"Oh...\" but before the following 'kay' made it out of his mouth, Vicky tore the shorts down over his thighs all the way to his ankles. She jumped back, averting her eyes from the bobbing appendage. \"Sorry, Damon. Sorry...\"\n\n\"Vicky! Stop stressing for god's sake.\"\n\n\"Of course, sorry... are you okay?\"\n\nWatson kicked the shorts away. From seafaring writer to prize exhibit in one quick dismasting. \"Didn't hurt a bit.\"\n\nVicky slowly circled him, hyperventilating, sneaking a quick glance now and then below his belt line. \"Oh my goodness...\" she panted, \"... you're just... magnificent!\"\n\nWatson opened his mouth to fob off the compliment then realised it wasn't a compliment. If this was her first experience then she simply didn't know any better. Nor was there anything to be gained by mocking the poor girl. Completing her orbit, she stood in front of him, her green eyes wide. She swallowed. \"May I...?\"\n\nWatson took her hand and placed it flat on his chest. \"Do what you like, Vicky. It's all free.\"\n\nVicky's knees were threatening to give way. \"I can feel your heartbeat.\"\n\n\"Always a good sign.\"\n\nStanding close enough to be almost touching torsos, she put her arms around him. After a token exploration of his shoulders and back, her hands went where they really wanted to go, sliding over the swell of his buttocks. \"My god,\" she whispered, \"your skin is so smooth. I never expected... I mean... I imagined your skin would be, like, all rough and hairy.\"\n\n\"You must have mistaken me for a hog.\"\n\n\"Sorry, Damon, sorry.\"\n\n\"Joke! Let me let you into a little secret, Macca. When two people do this, it's meant to be fun.\"\n\nThere was one piece of territory she'd been assiduously avoiding, barely even glancing at it on her walk-around. Watson took her hand to make the introduction as someone in the 'hall' sneezed again. Wide-eyed, not looking down, Vicky wrapped her fingers around him. \"It...\" she whispered, \"he... that feels amazing.\"\n\n\"You're not kidding.\"\n\n\"Would you like to touch me?\"\n\n\"I'd love to.\" Watson said, then slid his own hand down her back to the hem of her slip. \"What about you? Would you like another kiss?\"\n\n\"Ohh yes!\" Vicky nodded, breathlessly. \"Yes I would.\"\n\n\"Okay. This time open your mouth a little.\"\n\n\"Open my mouth?\"\n\n\"So we can touch tongues.\" \n\n\"Eww!\" Vicky looked at him like she'd just swallowed a mouthful of sick. \"Like... our actual tongues?\"\n\n\"Trust me, Macca. You'll love it.\"\n\nShe did as she was told and after fifteen or twenty seconds they were fiercely duelling mouth organs. Her legs were shaking and she was hyperventilating fit to pass-out, as Watson's erection blossomed in the young woman's hand until she was hefting what felt like a baseball bat. \"Oh God...\" she panted, \"Oh God... he's gone all hard.\"\n\n\"Mmm, yeahh... it does that.\"\n\n\"Damon?\"\n\n\"Hmm?\"\n\n\"Touch my b... breasts?\"\n\nIt was hard to know if it was a request or a demand, but Watson complied anyway, gently pinching her nipples and cupping her silk-clad breasts in the palms of his hands. He was itching to send one hand on an errand over her belly down to her crotch, almost certain of what he would find- a tight, yielding cauldron of boiling arousal. One step at a time. Waiting until Vicky had taken her fill of palpating his junk, he put his hands on her shoulders and eased her away. \"You may have noticed something.\"\n\nVicky looked around in panicked confusion. \"What?\"\n\n\"There are two of us in this room, and only one of us is naked.\"\n\n\"Oh... would you like me to...\" she jerked her head.\n\n\"Yes. Very much so.\"\n\n\"I'm not all that... you know... well endowed.\"\n\n\"No problem,\" Watson gave her a pat. \"Let me be the judge of that.\"\n\nTaking a step back, Vicky crossed her arms and grabbed the hem of her slip. Steeling herself she peeled it off over her head. First revealed was her mound, lightly thatched with dark brown hair, neatly trimmed for her one-piece. That thigh gap he had first seen gracing Caddy's bikini was now occupied by the bulge of her plump pussy lips, with a little round clitoral hood at the top and her thinner, inner lips sandwiched between. She had wide hips and a flat stomach, both of which he'd previously admired, and the cutest, sweetest, bounciest pair of upstart breasts he'd seen in the past fifteen minutes. ",
        "\"Not much to look at, I'm afraid.\" Vicky offered a breathless disclaimer, her gaze riveted on Watson's free-standing cock.\n\n\"No.\" Watson shook his head. The smell of her arousal was filling the room and the mere sight of her body was making his balls ache. \"You're wrong. You're plenty to look at, Vicky. You're gorgeous. Totally stunning.\"\n\n\"Oh...\" she blushed, \"I bet you say that to all the girls.\"\n\n\"Only when it's the truth.\"\n\n\"You really mean it?\"\n\n\"Honest to god.\"\n\nVicky winced at the 'g' word and looked round in a quandary. God was watching, that much she knew. But the lower extremities of her abdomen were aching with desire and while she wasn't game enough to check, she was pretty sure her 'down there' was all dripping wet. And that's not all. \n\nShe'd heard girls talking about putting their fingers inside themselves, and moving them around until their bodies went into convulsions. There was no way of knowing what those convulsions might be, or whether they were natural or dangerous. Her law books made no mention of the phenomenon, nor did the Good Book, and not so much as a word was ever breathed about it in church. In fact the girls who did talk about these sorts of things were the very ones who were eventually banished. Now here she was, with her innards spontaneously contracting, feeling like she'd just peed herself, a sense of indescribable pleasure clutching her groin. \"Damon?\" she quavered breathlessly, \"What happens now?\"\n\n\"Happens?\" Watson frowned. \"What do you mean?\"\n\nThe sin she'd just committed was already so heinous the next, inevitable step could hardly make matters worse. Standing trembling on the precipice, she looked deep into the old man's eyes. \"Are... are you going to seduce me?\"\n\nWatson thought back to Tanya's words. The young woman was a devout Christian, she'd warned, not to mention engaged to be married, and had no concept of sex as anything other than a means of generating god-fearing offspring. \"That depends.\" he hedged.\n\n\"On what?\"\n\n\"On whether you know what you're doing, or whether you've just had too much Champagne.\"\n\nVicki hiccupped, instantly undermining anything that followed. \"Oh, I promise you, it's not the Champagne.\" She meant, of course, it was not just the Champagne. The expensive and highly drinkable alcohol had merely opened the cage, but years of pent up frustration were propelling her through the door. \n\nWatson's self-restraint cell frantically signalled his common sense nucleus, but the warning was drowned-out by the blare of his bilateral sex complex. \"You do know how old I am, don't you?\"\n\n\"I don't care.\" Vicky said fervently. \"You've had sex before, I know you have, otherwise you wouldn't have Beck. Damon. Please. Teach me how to be a woman.\"\n\nWatson's first impulse was to point out that most women just worked it out for themselves. \"You probably already know.\" he shrugged. \"Just go with the flow, Vicky. Just enjoy yourself.\"\n\n\"So you're not going to help?\"\n\n\"Of course I'm going to help.\"\n\n\"Then what do I do?\"\n\nWatson searched the room for inspiration. \"Okay. Look. Right. Look. First things first. Why don't you just lie down on the bed? Make yourself comfortable.\"\n\nVicky climbed onto the bed. She lay back, legs ramrod straight, knees together and arms crossed over her chest, as if carefully composing herself for burial. \"Like this?\"\n\n\"Close.\" Watson sighed, sitting on the bed beside her, \"Now try to relax.\"\n\n\"How do I do that?\"\n\n\"Well...\" Watson said patiently, \"you could try spreading out a little. You know, put your knees the to side.\n\nVicky dutifully brought her knees up, pressed tightly together, then twisted her hips. \"How's that?\"\n\n\"Not bad for a first attempt. Now try putting your arms up. Try to feel all nice and stretchy.\"\n\nVicky hesitantly unhanded one breast, then the other, and raised her arms. \"Mmmm...\" she flexed her supple back. \"That feels nice.\"\n\n\"Does it? Well it looks pretty fantastic if that's any help.\"\n\n\"It does?\"\n\n\"Gorgeous, in fact.\"\n\n\"So.\" she looked around. \"What do we do now?\"\n\n\"What do you want to do?\"\n\nVicky drew a breath. \"Everything.\"\n\n\"Do you have any idea what everything involves?\"\n\nVicky shook her head miserably. \"I thought you might.\"\n\nWatson ran a hand across his salt and pepper pate. \"I've got a fair idea as it turns out. But that's the problem. You don't, and I don't know how much of everything to lay on you.\"\n\n\"How much is there?\"\n\n\"Oh, Vicky,\" Watson chuckled ruefully, \"you have no idea.\"\n\n\"You're right,\" Vicky huffed, tensing to rise, \"I don't. I'm just making a fool of myself.\"\n\nWatson flattened a hand on her sternum and pressed her back down. \"How about this? How about I just do what I do and when you want me to stop, just say 'stop!'?\"\n\n\"And you'll stop?\"\n\n\"Just try me.\"\n\n\"You won't get mad?\"\n\n\"I might curl up in a little ball and start to sob, but no, I won't get mad.\"\n\n\"As far as I want?\"\n\n\"And not one step more.\"\n\n\"And if I want to go all the way?\"\n\n\"Then I'll take you there.\"\n\nReaching up, Vicky pulled him down on top of her. The top half, only. Gorging on her mouth, Watson kept his cock well out of harm's way. He nuzzled her armpit, noting the absence of any dastardly Chemical Warfare, inhaling instead the sweet scent of unsullied femininity. From there he travelled south, spending five minutes feasting on her breasts while her hands explored his own topography, and by the time he got to her bellybutton her hips were jerking. As he travelled even further, snuffling through her fragrant, neatly-trimmed pubic hair, Vicky began to tense and when his tongue touched the hood of her clitoris she pushed him away. \n\n\"No,\" she shook her head, on the crumbling edge of the cliff, \"dirty!\"\n\n\"It's not dirty!\" Watson said crossly, gently easing her legs apart, \"I can smell the soap.\"\n\n\"Please. No. Stop.\"\n\n\"You really want me to?\"\n\nVicky shook her head and whimpered, \"N... no.\"\n\nHer furrow fell open at the merest touch, her flesh turned to liquid, her musk like something out of a candy shop. Teasing her inner lips apart with the tip of his tongue, Watson spent five minutes eating her out with all the finesse he could muster. As hard as she fought back, the stimulation was simply too overpowering and her body was soon racked by sensations she'd never known or even imagined. \n\nVicky's fingers clawed at his close-cropped hair as her hips began to buck and gyrate. She was on the bullet train to orgasm central, no doubt about it, and Watson wondered briefly whether to just stick to tongue. But if this was her first climax, and it almost certainly was, then the young woman deserved the best he could give so he slipped a finger inside her as he continued to suckle her clit. \n\nHer G-spot was right where it should be, a miniscule, faintly rough patch of supercharged nerve endings on the anterior wall of her tight, sopping vagina. As the friction ridges of his fingertip scraped the tiny point, Vicky uttered a cry and finally let go. Clawing his hair, she clamped her thighs around his head, her stomach muscles bunching as the convulsions set in. \n\n\"What..\" she squeaked, \"...the flip... are you doing to me? It feels like... it feels...\"\n\nA sudden flood of body fluids signalled success. Doubled over in the grips of sweet agony, she bucked and heaved, jerked and shuddered, until the last, dying waves dropped her, spent, on a far-flung shore. Relaxing, she let her legs fall to the sides then lay, resting, eyes closed, mouth open, face all flushed and twitching in the heart-pounding aftermath. Taking a few last slurps of her nectar, Watson wiped his face on her thighs then scaled her gasping body till they were face to face. He kissed her. \n\n\"See, that wasn't so bad.\"\n\nVicky opened her heavy-lidded eyes. \"What did you just do to me?\"\n\n\"Not a thing. It was all your own work.\"\n\n\"Was that an orgasm?\"\n\n\"You've never had one before?\"\n\nVicky shook her head. \"Nope!\"\n\n\"Congratulations.\"\n\n\"I've never felt anything like it in my life.\"\n\n\"They are sort of more-ish, aren't they?\"\n\n\"So this is the root of original sin.\" she said wanly. \"A feeling that good, that... overwhelming... no wonder it's evil.\"\n\n\"Evil is it?\"\n\n\"What? Sorry no, that's not what I meant. I mean, are they all that... you know... that earth-shattering?\"\n\n\"Well,\" Watson hedged, \"that's entirely a matter of opinion.\" He was just wondering whether it might be wise to call it a night, when Vicky's hand found its way to his still hard cock. With a few fumbling strokes she had the poor, neglected thing at full throttle again, and was manoeuvring her hips trying to bring her pussy to bear. \n\n\"Vicky? What are you doing?\"\n\n\"Give it to me, Damon.\"\n\nThe old man parked his elbows on the bed and brushed the hair from her face. \"You sure? There'll be plenty of time when you're-\"\n\n\"Don't even think about it. If you want me to beg I will. I have just had the most incredible experience of my whole blinky life and if there's more where that came from I want it. Now.\"\n\nWatson's cock was lying flat on her belly, sandwiched between two hot, heaving bodies. He could feel the heat of her sex, and its wetness, like a hungry mouth seeking prey. \"What about protection?\"\n\n\"From what?\"\n\n\"You know, in case you get pregnant.\"\n\n\"Will I? From just the one time?\"\n\n\"That depends. When did you finish your period?\"\n\n\"The curse? A couple of days ago. What's it matter?\"\n\n\"Jes... Hell's bells girl, you've got a lot to learn. Didn't your mum ever talk to you about this?\"\n\n\"She would rather have her tongue struck out.\"\n\nFigured, Watson thought. If your only purpose in life was to pop out good little Christians then the issue of contraception was probably moot. \"Couple of days. You should be okay. You sure you want to do this? You know when it's done there's no un-doing it.\"\n\nAll this common-sense talk was diverting blood from his cock to his self-restraint cell and Vicky felt his rigidity die in the palm of her hand. \"You're changing.\" she whispered, suddenly afraid.\n\n\"Changing?\"\n\n\"You're not as hard. Is it because you don't find me attractive?\"\n\n\"Attractive?\" Watson sputtered, \"You're fuckin' gorgeous, and no, I won't apologize for using the 'f' word. But it's my duty to look after you for goodness sake!\"\n\n\"As my teacher?\"\n\n\"As your friend. You sure you want to go through with this?\"\n\nVicky raised her hips, steering her slit towards the head of Watson's cock, an action as instinctive as it was irresistible. She arched her back as flesh became flesh, her neck muscles straining, veins bulging under her skin. She was sopping. The old man slid down the slippery-dip of her furrow, needing to do little other than hold his breath as Vicky engulfed him, driving him through her outer portal into her depths.\n\nNo words could describe the incredible sensation of entering a new woman for the very first time, that feeling of sinking into a muscle-walled, capillary-warmed, protein-lubricated vagina, the shape and dimensions of which perfectly complemented the penetrating appendage. The Yin and the Yang. It was awesome.\n\nAnd the reciprocal experience was no less breathtaking. Never before had Vicky felt her opening so stretched and her core so deeply impaled, enjoyed the sensation of being simultaneously fulfilled and invaded. It was exhilarating and frightening, primal and pure, compelling and thrilling and scary. Watson's hard intrusion nudged and jostled her insides, rasping her G-spot, muscling apart the membranes of her molten interior. Even the body position was a revelation. She regularly stretched as part of her training but had never lain like this, flat on her back with her knees up, legs spread as wide as they would go, a posture so wanton and vulnerable it made her head spin. \n\nAnd a man was lying on top of her, pinning her down with his weight, driving his massive erection into that aching hole between her open legs. His belly slapped hers as his thrusts bounced her butt off the bed, his smell- the sweet tang of his sweat, his Champagne breath- filling her nostrils. Her fingers dug into his well-muscled arms and when she looked up, far from averting his eyes, he stared down into her with a look of soul-searching intensity. Sliding her arms around his neck she raised her legs, digging her heels into his butt. \"Oh, Damon...\" she gasped, \"it's just incredible.\"\n\n\"Take it all in,\" the old man panted in reply, pressing his forehead against hers. \"Feel it, smell it, taste it. This is for you, Vicky. Just let yourself go.\"\n\n\"Let go.\" Vicky mewled, \"Let... go-ohh.\" Bringing her knees up to his armpits, she rotated her pelvis until Watson was pounding straight down into her, his cock bottoming out near the small of her back. Stiff-arming himself off the bed, the old man looked down, taking in the sight of her little cupcake breasts, jouncing in time with his thrusts. \n\nVicky's pussy lips bulged, distended by the girth of the erection squelching into her, the inner lips clinging to Watson's meat, her slit frothing at the margins with body fluids. The foamy residue matted her thatch and drizzled lazily down her butt-crack. Eyes shut, face screwed up, she clenched her magnificent teeth. A climax was welling inside her and just following orders, she finally let go.\n\nWatson was surfing perilously close to the break, using every tool in his inventory to stave off an orgasm. The feel of her heretofore untouched vagina was breathtaking, its grip, it's resilience, its deep liquid heat. He he submerged in feeling of her cervix bumping over his knob, the ledge of her pubic bone raking his shaft, terrain so deliciously familiar, yet utterly singular and totally unique. There was only one Vicky in the universe and only one would ever exist. For all its ubiquity- there were billions of women on the planet after all- the lithe female body squirming beneath him was utterly, totally and eternally one of a kind.\n\nEasing down, Watson rested his weight on her, letting his hips do the talking as he kissed her beautiful mouth. As the first wave of an impending tsunami shuddered through her body she clenched her teeth, lips pulled back in a grimace of exquisite abandon. Hoisting her shoulders, she buried her face in his neck, panting and crying, as Watson slid his hands under her back to cup her slick and slippery butt.\n\nVicky's head tossed from side to side as she lost all control. She was well away now, tumbling in the torrent of new sensations, hips bucking, insides convulsing, her muscles straining as the eruption began. Legs up, she locked her ankles over the old man's back, pulling him down into her with all her might. Her long, gasping, guttural cry echoed down the silent hallway as she shuddered her way through the climax, finally, mercifully coasting to a panting stop, utterly spent.\n\n\"I was about to do that myself.\" Watson puffed, as the semen boiled in his balls. \"Would you rather I just pull out?\"\n\nRallying her last few shreds of energy, Vicky wrapped her arms and legs around him, preventing escape, and drove herself on to him as he gasped and groaned through a semen-spurting climax, his sperm filling the virgin recesses of her intimate space. He had put so much effort into her orgasm that his own was a shade anticlimactic, but as his hips stopped jerking and his muscles finished spasming, he gently lowered his chest onto the scant cushions of her breasts.\n\nHe drifted off in that position, head on her shoulder, cock deep inside her, waking briefly as Vicky's muscles finally extruded his softening flesh. Kissing her on the forehead, he killed the lights then rolled onto his side and burrowed into her, drifting off again to the sound of her breathing. And on that last, little, hypnogogic step, poised on the threshold of sweet oblivion, he had that niggling sense he'd forgotten something. Something important. \n\nNo matter. He'd been running on a high-octane diet of rampant sex and adrenaline for the last few days and in the wake of Vicky's debut he was totally shot. Whatever it was, it could wait.\n\n* * *\n\nWatson woke to the sound of the toilet flushing. A moment later, weight came on the bed and he heard the sound of deep, measured breathing. He jumped slightly as a cold, slightly damp hand wrapped around his cock, still semi-erect and caked with the flaky residue of dried cum and pussy. A joint popped as the body lay down next to him. Flattening his hand on her gently heaving belly, he slid it slowly down to her pubic mound only to feel smooth, hairless skin instead of thatch.\n\n\"Ooo um!\" a voice lilted. \"You fucked Roger's PA.\" \n\nWatson shot upright, fumbling for the bedside light and came face-to-face with a grinning little blonde. \n\n\"I'm telling on you.\"\n\n\"Where's Vicky?\" the old man demanded, looking around in a flat panic.\n\n\"She left a few minutes ago. Lucky she did because I was about to pee in the kettle.\"\n\n\"Did she see you?\"\n\n\"Nah.\" Beck shook her head matter-of-factly, \"She was too busy crying. You did a great big fart so that's probably why.\"\n\n\"What?\"\n\n\"Uh huh!\" Beck nodded, wide-eyed. \"It was so loud all the ducks took off from the lake.\"\n\nWatson drew his knees up and buried his face in his hands. \"Oh, that poor girl.\"\n\n\"You're telling me.\" Beck nodded, on her knees beside him, \"It was so loud it made all the car alarms go off.\"\n\n\"Thanks, Rebekah. I get the picture.\"\n\n\"It was SO loud all the plaster fell down from the-\"\n\n\"You right?\" the old man demanded angrily.\n\nBeck ticked him under the chin. \"Naww, Domdom... what's the matter? You're all embawassed...\"\n\n\"Yes I am embarrassed. And I'm really pissed off.\"\n\n\"After nailing that little sweet-pea? There's no pleasing some people.\" \n\n\"Stop being so thick, Moosh. I'm pissed off at myself. For falling asleep. Like some beer-swilling bogan who just bonked his missus cos' he was too lazy to wank. I should have stayed awake. I should have talked to her.\"\n\n\"About what?\"\n\n\"About what just happened.\"\n\n\"You mean the sex?\"\n\n\"No, the flipping bible study. What do you think?\"\n\n\"So, is it my turn now?\"\n\n\"For Bible study? Knock yourself out.\"\n\n\"Can we have sex?\"\n\n\"Are you serious?\"\n\n\"Well Vicky's had her turn.\" Beck said, pushing him down. Lying on her tummy, she slipped her lips over the head of Watson's cock. After teasing his peehole with the tip of her tongue, she throated his shaft as deep as it would go until she gagged. Coughing and snorting, she raised her head, smacking her lips. \"Wow! You taste of Vicky. Isn't she sweet?\"\n\n\"How the hell would I know?\"\n\n\"Well you ate her out.\"\n\n\"And how the hell do you know?\"\n\n\"Because I saw you.\"\n\n\"From the closet?\"\n\n\"It was suffocating in there. I had to come out to catch my breath and I accidentally saw you.\"\n\n\"Suffocating? Behind louvered doors? And how did you manage to see around the corner?\"\n\nBeck cracked a mischievous grin. \"By lying on the floor.\"\n\n\"You little perv! What if she'd seen you?\"\n\n\"She didn't.\"\n\n\"She might have!\"\n\nBeck wagged a finger in his face, rocking her head from side to side. \"Oh no she di'nt.\"\n\n\"Well that was very naughty of you Becky. That was private. She'd die a thousand deaths if she knew.\" \n\n\"Was that the first time she's ever had sex?\"\n\nWatson shrugged grumpily. \"How would I know?\"\n\n\"Sure did sound like it.\" Lowering her head, Beck smacked and sucked on his cock for a minute or two, as if trying to puff life back into a big, fat cigar. \"That's two in the last few days, you know.\"\n\n\"Two what?\"\n\n\"Virgins\"\n\nIn the process of counting his blessings, the old man had arrived the very same number. \"Well it's not like I planned it, Moosh. Random chance. I'm just a victim of circumstance.\"\n\n\"You're lucky.\"\n\n\"You can talk. Caddy, Tanya, Maya... you've hardly been through a drought.\" \n\n\"I know. And I got to meet Ally and Ben, and now I know what I want to be. I want to be a pilot, Dommy. I want to fly a Gulfstream.\"",
        "\"Well if you're still banging on about it in six months time I might take you seriously.\"\n\n\"And what about Vicky?\"\n\nWatson looked over his belly at the top of Beck's head, bobbing up and down as she worked her magic between baseless allegations and public announcements. Head up, she ran her tongue all the way down the underside of his penis to his balls and gave them a loving suck. Hand on the top of her head, the old man arched his back as she took him down her gullet. \"What about her?\" he rasped.\n\nBeck hefted a shoulder. \"Mmm nnn nnn.\"\n\n\"What?\"\n\nBeck looked up. \"I don't know. Maybe we can play mummies and mummies one day.\"\n\n\"Don't even think about it.\" the old man growled. \"Bad enough she just broke her vow of chastity. Don't go putting that other stuff on her plate.\"\n\n\"What other stuff?\"\n\n\"You know what other stuff. Most women just aren't into that sort of thing.\"\n\n\"Most women are as matter of fact. I read an article. It said that seventy percent of chicks find other chicks attractive.\"\n\n\"Seventy percent, ten percent, ninety nine point bloody nine. But not Vicky. I'm warning you, that sort of thing could really fuck with her head.\"\n\n\"She kissed me in the pool.\"\n\n\"She thought you'd drowned!\"\n\n\"On the mouth.\"\n\n\"The kiss of life, Rebekah. CPR.\"\n\n\"Her leg was between mine. She was squishing my pussy.\"\n\nWatson's cock gave a jump. \"She was just holding you up, Moosh. I'm telling you, don't go getting your hopes up.\" He looked at the clock, wondering whether to call reception to ask Vicky's room number, when Beck sat up and threw a leg over his thighs. A minute ago he was contemplating bribing her just to let him have the rest of the night off, now here he was, reinvigorated, cock pointing straight up, straining to get at Beck's engorged pussy. She hadn't been just watching, it transpired, but fingers didn't pack half the punch of a nice, big, dick. Wrapping her hand around him, she ploughed her slit with his knob a few times, then placed it in her entrance and bore down. \n\nHis cock hypersensitised by the marathon of the past few days, Watson threw his head back in a mixture of pleasure and pain. Feet flat on the mattress, Beck rose to a squat as Watson gripped her waist. Beck doubled over, looking in wonder at the sight of the big stiff dick disappearing into her body between the bulging lips of her sex. She raised her eyes. \"But what if she does?\"\n\n\"Does what? Who? Jesus Christ, can't you see I'm busy?\" \n\nBeck tightened her muscles around his erection. \"Vicky. What if she does like girls?\"\n\n\"You're dreaming! Aww... Becky, that feels fantastic.\"\n\n\"But really? What if she does?\"\n\n\"Then I'll walk naked to the Cape.\"\n\n\"What about me?\"\n\n\"What about you?\"\n\n\"Can I fuck her?\"\n\n\"We'll see for fuck's sake. Now for crying out loud, shut the hell up and fuck me.\"\n\n* * *\n\nThe morning was breathless and the air was still cool, but promising a scorcher as the sun rose to fill more and more of the sky. Armies of the city's civil-servant drones, one to a car, streamed grim-faced out of the suburbs bound for their offices. Picking a break in the traffic, Watson jogged across four lanes of blacktop to a small, red-gravelled amphitheatre surrounded by trees. Dressed in boardshorts and a tatty grey T-shirt, he knelt to re-tie the laces of his battered old running shoes then did some random, half-hearted stretching in preparation for the torture to come. \n\nVicky appeared a few moments later, dressed in high cut running shorts and a loose, light blue singlet over a dark-blue, figure-hugging running bra. Head down, she trotted across the road, as Watson opened his arms with a great big smile. \"Good morning, Gorgeous, how did you-\" \n\n\"Don't talk to me.\" Vicky snapped, barging straight past him.\n\n\"-sleep? What?\"\n\n\"I am fallen. Don't talk to me.\"\n\nWatson caught her arm and spun her around looking for cuts and abrasions. \"Where did you fall, Sweetheart?\"\n\n\"In your room,\" she snarled, \"now let me go!\"\n\nVicky took three or four short steps then broke into a run as Watson swung in beside her feeling like he'd just been punched. \"Are you for real?\"\n\n\"Please, Damon. Just leave me alone.\"\n\n\"Well that's very rude. Can we at least act like adults and talk about this?\"\n\n\"There's nothing to talk about. First of all I drank alcohol. Then let the devil in.\"\n\n\"That's a bit harsh.\" Watson huffed, struggling to keep up. \"I'm no angel, I'll admit, but the devil?\"\n\n\"I don't mean you!\" Vicky snapped, taking a hard right onto the lakeside pathway trying to shake him off. \"You're not to blame. I led us both down the path of sin, so I'm doubly damned.\"\n\nShe upped the pace as they ran past a decorative Chinese gate, its ski-jump roof decorated with glazed enamel tiles. Loitering on the manicured grass, a gaggle of bronze cranes watched them leg it past a flying Chinese horse, following the water's edge, heading east. \"I'm quite capable...\" Watson puffed, hanging on for dear life, \"of looking after... my own sinning thanks.\"\n\nVicky was pushing ahead with long, powerful strides and Watson, whose last running had been from his wife, was almost sprinting to keep up. \"Vick... Macca... Sweetheart... can't we... just slow down a bit and... have a talk?\"\n\n\"There's nothing to talk about.\" she raged. \"I FORNICATED!\"\n\n\"Yes,\" Watson nodded, feeling stung, \"we did have an excellent time, didn't we?\"\n\nVicky screeched to a teetering halt and turned on him, her shapely chest heaving. \"This is all just one great big joke to you, isn't it?\"\n\n\"Seeing you distressed like this? No. It's not a joke.\"\n\n\"Have you any idea what this means for me?\" Vicky seethed, then put her head down and set off again.\n\n\"Not really, no.\" Watson replied, taking up the chase.\n\n\"Of course not. You're not of the faith.\"\n\n\"So can you tell me, or is it some sort of cult secret?\"\n\n\"No. I'll tell you. Now I have to face the congregation. Now I have to face my husband-to-be. And if that's not bad enough I have to face Pastor Neil. After all his hard work I've gone and done it again. I've betrayed him. I've betrayed him, I've betrayed my fianc\u00e9, and worst of all I've betrayed God.\"\n\n\"Hang on,\" Watson puffed, \"haven't we been through this? This god guy's omniscient, right? So he already knew. He knew you were going to come to my room, he knew we were going to have sex. How can it be a betrayal if he already knew?\"\n\n\"Because He gave me free will!\" Vicky railed. \"He gave me two paths to choose from and I chose the wrong one.\"\n\n\"Ah,\" Watson sneered, pounding along beside her, flirting with a cardiac arrest, \"the old Free Willy. You know, I'm thinking of using that little disclaimer myself. If I create... a script... that turns out to be crap... I'll just blame the script. It was perfect when I wrote it. If it reads like shit it's because it chose to read like shit. No more rewrites for me!\" he gave a big thumbs-up, \"Nice one, god!\"\n\nVicky put the brakes on again and for an instant looked like she might hit him. \"Damon don't! Do not mock God, not in my presence. I find it really, really offensive. And don't go making fun of me either. I'm on the path to hell, it's no laughing matter.\"\n\nWatson made a grand production of looking around. \"You sure? Looks like an ordinary old bike path to me.\"\n\n\"Very funny.\"\n\n\"Oh, lighten up.\"\n\n\"Easy for you to say. You don't have to pay the ultimate price.\"\n\nWatson patted make-believe pockets. \"How much?\"\n\nVicky put her face in his and narrowed her eyes. \"Eternal separation from God. That's how much. The greatest price of all.\"\n\n\"Ask nicely,\" Watson shrugged, \"maybe he'll give you a discount. In fact, tell you what, why don't we just go halves like last night?\"\n\nVicky looked like she'd just stepped in dog mess. \"Don't be disgusting.\"\n\n\"So now I'm disgusting?\" Watson replied, on the brink of just walking away. \"You know flattery will get you nowhere.\"\n\n\"No,\" she said, \"you're right. That was uncalled for. Especially since it was all my fault.\"\n\n\"Takes two to tango, Love.\"\n\n\"Maybe. But I started it. Now I've just squandered eternity for a moment's empty gratification. What a waste.\"\n\n\"Empty gratification?\" Watson bridled. \"Thanks a bunch.\"\n\nVicky stared at the ground, lost in a world of her own. \"Pastor said this might happen.\" she lamented. \"I'm weak, he said. I'm defective. He's right. I blew it. I should have been more vigilant. I should have gone back my room. I should have had soft drink instead of that b... blinky Champagne.\"\n\n\"Should'a, would'a, could'a,\" Watson shrugged, \"three most useless words in the English language.\"\n\nVicky shook her head mournfully. \"Most of all I should have steered clear of Alana.\"\n\n\"Alana?\" Watson frowned. \"What's that poor girl got to do with it?\"\n\n\"She's the one who kept making me drink Champagne. Every time I go near that girl she tries to lead me astray. God sent her to test me, I'm sure of it.\"\n\n\"In which case god's an asshole.\" Watson glared. \"Alana hasn't got a bad bone in her body so don't go blaming her. If you really must blame someone blame me. It's my fault, Vicky. I knew you were... vulnerable... it was wrong to take advantage of you.\"\n\n\"It wasn't your fault, Damon,\" Vicky toed the ground, \"it was mine. I pretty much asked for it. In fact as far as I recall I pretty much insisted.\"\n\n\"Yes you were quite... keen.\" Watson nodded. \"Still, what happens in Canberra stays in Canberra. I'm sorry you're regretting it now in the cold light of day, but let's just go our separate ways and you can forget it.\"\n\n\"Forget it?\" Vicky demanded, aghast. \"It was a mortal sin, Damon. How can I just forget it?\"\n\n\"It was sex, Vicky. Tab 'A' into slot 'B'. Lots of people do it. You didn't murder anyone. You didn't spit in anyone's beer. And look, to be brutally honest, you seemed to have a pretty good time.\"\n\n\"Good time?\" Vicky cried. \"I adored every minute. So what sort of filthy harlot does that make me?\"\n\n\"It doesn't make you any sort. It just makes you a normal, healthy young woman with perfectly normal drives.\"\n\nVicky rounded on him. \"Can you hear what you're saying? I just fornicated. Out of wedlock. And you're making out like it was just a... just a...\"\n\n\"Just a bit of harmless fun? Yes.\"\n\nVicky was having none of it. \"I've sinned.\" she said, determined to drag her cross through hell and high water. \"I've fallen in the eyes of God and my congregation.\"\n\n\"Well god needs to take a chill-pill and it's none of your congregation's frikken' business. Look... do you mind me asking? I mean... last night?\"\n\n\"What about it?\"\n\n\"Was that your first time?\" Watson asked and held his breath.\n\n\"First time?\" Vicky echoed. \"That's none of your blinky business.\"\n\n\"Come on,\" he chided, \"we're both on the red-eye to hell according to you. You're not going to make it any worse by squaring with me.\"\n\n\"Well, I've sinned once before if you really must know.\"\n\nWatson nodded, feeling ever so slightly let-down. \"Who was the lucky ba... person?\"\n\n\"A boy I met at Bible Camp.\" Vicky mumbled. \"We'd just broken a one-week fast and I was in his tent after communion. We were talking about the Lord, how he suffered for our sins, and the miracle of the resurrection. And, well, you know...\"\n\n'Only too well', Watson thought. A Middle Eastern mystic wasn't the only thing to rise. \"How was it?\" he asked.\n\nShe glanced at him out the corner of her eye then looked away, plainly embarrassed. \"Terrible.\" she said. \"He only lasted a few seconds before he... well...\"\n\n\"And you survived?\"\n\n\"Pardon?\"\n\n\"You did this terrible thing and yet, here you are.\"\n\n\"Only by the grace of God.\" Vicky railed. \"And Pastor Neil. He raised me up out of my sin and cleansed my soul.\"\n\n\"Cleansed it, eh? Like at the local soul wash or something?\"\n\n\"Be as flippant as you like.\" Vicky sniffed. \"Truth is I did forty days penitence, exiled from the congregation, sleeping on the floor, taking only bread and water for sustenance.\"\n\n\"He starved you?\"\n\n\"He was helping me to conquer my carnal appetites.\"\n\n\"How old were you?\"\n\nVicky looked at the ground again and shrugged. \"Fourteen.\"\n\nWatson's jaw dropped. \"That creep starved a fourteen year old kid? How come he isn't rotting in jail?\"\n\nVicky rallied her indignation. \"He's not a creep! He was doing it for my own good.\"\n\n\"Really? And what about lover-boy?\" \n\n\"What about him?\"\n\n\"Was he hung drawn and quartered as well? For his own good?\"\n\n\"Of course not. It was me who led him astray. Pastor held a vigil to help with his healing.\"\n\n\"His healing?\" Watson demanded aghast. \"From the soul-crushing devastation of having nailed a fourteen year old virgin? While you were in solitary? Living on bread and water?\"\n\n\"He was a youth leader, Damon.\" Vicky said then turned and walked away. \"Until I came along and ruined his life.\"\n\nA black swan watched them pass with imperious disdain, while its mate delved the turbid waters, bottom up, foraging for snacks. \"You're shitting me, right? Who wrote the rules for this bloody club and where do I join?\"\n\n\"God did,\" Vicky replied flatly, \"and you join by opening your heart to Jesus.\" \n\n\"God wrote them, did he? What did he use? A crayon? A hammer and chisel? Microsoft Word?\"\n\nVicky stopped abruptly. Her eyes were like green lasers and a little trickle of sweat ran down the angle of her clenched jaw. \"We're talking about the Bible, Damon.\" she breathed, \"The word of God! Don't be so dashed disrespectful.\"\n\n\"No. We're talking about a Bronze-age science-fiction porno. God wrote it? Bahh! It was cooked up by a bunch of sand-dwelling old malcontents, to control men, crush women and destroy nature with divine impunity. I've written more convincing scripts for boilerplate soapies.\"\n\nA tear mingled with Vicky's running sweat. \"And just what do you think you'll achieve by that? By belittling something I hold so dear?\"\n\n\"Your liberation from two thousand years of suffocating superstition. It's a long shot, I grant you, but I have to at least try.\" \n\nTurning away, Vicky set off again, but the steam had gone out of her and she was sobbing quietly as she ran. \n\nWatson draped an arm over her shoulders and eased her to a stop. \"I'm sorry, Sweetheart, I didn't mean to make you cry.\"\n\nVicky put her face in her hands. \"It's all had, Damon. My faith. And now I've forsaken it.\"\n\nWatson gave her shoulders a gentle shake. \"It's not all you had, Sweetheart. Come on. Lift your little head and look around.\" Vicky shook her head, sniffling through her tears, and Watson stroked her chestnut hair. \"Feel that? Your hair's all nice and warm.\" \n\nVicky shrugged. \"So what?\"\n\n\"It feels lovely.\" Lifting her chin, Watson pulled the hem of his T-shirt up and held it to her nose. \"Come on, Macca, blow.\"\n\nToo defeated to argue, the young woman trumpeted tear-snot into the bunched grey fabric.\n\n\"Can you feel that sun on your pretty little head?\" Watson said.\n\nVicky nodded, crying, eyes downcast.\n\n\"Well? What's the bible got to say about that?\"\n\n\"About what?\"\n\n\"The sun?\"\n\nVicky squinted at him through her tears. \"W... w... what do you mean?\"\n\n\"The sun!\" Watson gestured at the great plasmic orb. \"That big old light up there in the sky. What's the bible say about it? Hmm? God reckons he made it, so what's he say about the Sun in his book? Humans have written volumes about it so surely god could spare it a couple of lines? In the good book? Anything?\"\n\n\"Umm...\" Vicky frowned, \"well, the Bible says, 'The sun rises, and the sun goes down, and hastens to the place where it rises'? And... 'God made the two great lights\u2014 the greater light to rule the day and the lesser light to rule the night- and the stars'?\"\n\n\"That's it?\"\n\n\"It's just the sun, Damon. What more do you want?\"\n\n\"Just the sun? Are you serious?\"\n\nVicky threw her hands up in exasperation. \"What do you hope to achieve with all this waffle? It's the sun. God created it to provide us with light.\"\n\n\"Did he now? So what's it made of? Come on. Coal? Petrol? Uranium?\"\n\nVicky looked around uneasily, wondering where this prattle was leading. \"Isn't it some sort of gas?\"\n\n\"Top marks, it is indeed. What sort of gas?\"\n\nVicky shrugged. \"Propane maybe? Something flammable? I have no idea. Why? Is it important?\"\n\n\"Important? Life on Earth only exists because of the sun. No sun, so life.\"\n\n\"Well no, actually. God-\"\n\n\"Well no, actually, not god. Vicky, listen to me. You say god wrote the bible?\"\n\n\"No. The Bible is the word of God.\" \n\n\"Same bloody diff. Look, if god made the sun what's the recipe? I mean, there must be something in that stupid bloody book, surely.\"\n\n\"It's not stupid!\" Vicky glared, clearly annoyed, \"And the truth is only God knows. Many things in the universe aren't meant to be known.\"\n\n\"It's mostly hydrogen.\" Watson said flatly. \"The lightest and most abundant of the elements. It's a big ball of hydrogen, around one point four million kilometres in diameter. In the core of the sun, hydrogen atoms are squeezed together under immense heat and pressure until they fuse into the next element, helium. Only the mass of the helium is slightly less than the sum of its parts, and the missing mass is converted to energy according to Einstein's equation, E equals M C squared.\"\n\nVicky stared at him, dumbfounded. \"You're making it up.\"\n\n\"Most kids learn this kind of stuff in kindergarten. At least the ones who aren't having their heads crammed full of religious bullshit.\" Pausing, he looked up as a rescue helicopter clattered noisily overhead, bound for the mountains. \"Ooo,\" he pointed, \"look at the helicopter god made.\"\n\nVicky shrugged. \"I'm not biting, Damon.\"\n\n\"Tell me, Vicky. Did you do science at school?\"\n\n\"Of course. Physics, Creation, Intelligent Design. The normal stuff.\"\n\n\"You went to a religious school?\"\n\n\"What else?\"\n\n\"Well that explains it. Did they teach you anything about Darwin's theory of evolution?\"\n\n\"Yep.\" Vicky nodded. \"We learnt all about Darwin's heresies. How they were finally disproved by irreducible complexity.\"\n\n\"Heresies?\"\n\n\"Uh huh. Darwin was a devil worshiper who fornicated with animals.\"\n\n\"Who told you that?\"\n\n\"Pastor Neil. He said the theory of evolution was Darwin's attempt to lure us away from God. He said the creation of man by random chance was about as likely as a tornado tearing through a junkyard and creating a Boeing 747.\"\n\n\"Which pre-supposes the existence of 747s.\" Watson scoffed. Reaching out, he picked up Vicky's slender arm. \"Listen, Vicky. What sort of life form are you?\"\n\nVicky pulled firmly but away. \"Please, Damon, I think I've heard enough.\"\n\n\"Just humour me. What sort of life form are you?\"\n\n\"I don't even understand the question.\"\n\n\"Well let me help you. You're a carbon-based life form. Most of your molecules contain the element carbon. So where did the carbon come from, and if you say 'god' I'll throw you in the lake.\"\n\nVicky clutched her hands defensively to her chest. \"I don't know, Damon! I don't know!\"\n\n\"You mean it's not in the bloody bible? That's odd, it must have slipped his omnipotent's mind. Allow me to make up for the all-powerful's little oversight. The carbon you're made of was created in the core of a supermassive sun. It went supernova sometime prior to five billion years ago and exploded. Our solar system was created out of its scattered remains and so, eventually, were you. Congratulations, Vicky. You are literally star-stuff.\"\n\n\"Look... mate, if I wan't science fiction I'll go and watch Star Wars.\"\n\n\"Except it's not fiction. Here, star-girl, tell me this. Why does ice float? I mean everything else contracts when it cools but ice expands. Why is that? And yes, it's important, very important, because if ice didn't float, the oceans would freeze from the bottom up and we'd be cactus.\"\n\nVicky gripped the hair at her temples. \"Why are you doing this, Damon? My world's just turned upside down and now you're trying to fill my head with garbage.\"",
        "\"It's not garbage.\"\n\n\"No, it's heresy.\"\n\n\"It's science. Just a few snippets of the awesome compendium of human knowledge, about nature, about life, about the universe and everything. You see, your brain has been fed on nothing but biblical fairy floss for most of its life, and now it's got malnutrition. Can't you hear it? Your poor little brain, crying out for sustenance? Tell me, how do clouds stay up in the sky?\"\n\nVicky put her hands together, as if in prayer. \"Stop it, Damon! Please, just stop it!\"\n\n\"Because no clouds, no rain. No rain, no life. It's something you might want to think about.\"\n\n\"And no God, no salvation.\" Vicky railed, \"And no salvation, no everlasting life. That's something you might want to think about.\"\n\n\"Everlasting life. Bollocks!\"\n\n\"This is what Pastor must mean when he talks about the 'Earthbound'.\" Vicky said to herself. \"Those who'd rather two-score and ten on this mortal plane, than eternal joy in heavenly paradise.\"\n\nWatson screwed up his face. \"Paradise? You wanna talk about paradise? Okay? Where is it? Come on, show me. Point to it. Right now! Give me a glimpse of paradise and I'll convert, right here and now.\"\n\n\"Oh, don't be stupid, Damon.\"\n\n\"Stupid am I? Why? If this frikken' paradise is so frikken' awesome, let alone real, why can't I see it? Doesn't god live there? Surely his PR team could manifest a live broadcast. Come on. Has anyone ever seen it? Has anyone ever come back with some photos? No? How about a fridge magnet? Even a souvenir menu from the all-you-can-eat buffet would do.\"\n\n\"You poor man.\" Vicky said bitterly, \"It must be devastating. To live a life so devoid of meaning.\"\n\n\"It's got plenty of meaning, believe me.\"\n\n\"But to live a life without faith. To never bask in the unfettered love of the Lord.\"\n\n\"Or his unfettered tendency to hurl you into a lake of fire, for all eternity, if you piss him off.\"\n\n\"Only if you turn your back on Him, Damon. Only if you turn your back. And if you do that's your fault.\"\n\n\"Here we go again.\" Watson rolled his eyes. \"The old free willy.\"\n\n\"Say what you like.\" Vicky sniffed, \"I'll take faith over tawdry reality any old day.\"\n\n\"Faith!\" Watson spat. \"It's not faith, it's greed. It's the self-serving pursuit of a big fat reward. Being good gets you stuff- a bargain fit for a two year-old.\"\n\n\"It's not about getting stuff.\" Vicky said hotly. \"It's about values and ethics, knowing right from wrong. How can a person possibly live righteously without some sort of a guide?\"\n\nThey set off, walking past a humble stone memorial to a young girl cut down by one of god's practical jokes, towards a gracefully curved concrete bridge spanning the lake. \"How long have humans been around?\" Watson asked.\n\nVicky shrugged. \"I don't know. Six thousand years?'\"\n\n\"Oh, that's right, you're a creationist. So how do you explain fossils again?\"\n\n\"The remains of the creatures that perished in the flood.\"\n\n\"Right. Funny how it's just one class of creature. Don't you think? Poor old dinosaurs. Moses must have been bitten by one as a kid.\"\n\n\"I think you mean Noah.\"\n\n\"Oh, so I do. You know it's funny how they're never found beside human remains. The dinos I mean. Do you find that odd, if they perished in the same flood as all of the humans?\"\n\n\"Don't waste your breath, Damon. Evidence of the flood is irrefutable.\"\"\n\n\"Really? According to which mainstream scientist?\"\n\nVicky looked at him, eyes hard, but did not reply.\n\n\"Tell you what. Let's just pretend for a moment that mainstream science is right. Let's just pretend that humans have been around, in their modern form, for at least one hundred thousand years- though the best, non-biblical estimate is closer to three. Okay? So when did god turn up?\"\n\n\"He didn't turn up!\" Vicky growled, \"He's eternal. He always was and always will be.\"\n\n\"Okay then, when did he first... 'appear'? Two thousand years ago? So what did we do for guidance the other ninety eight-percent of human existence?\"\n\nVicky stared at the ground, lips compressed.\n\n\"We relied on innate human values, didn't we? Kindness, love, respect. Altruism. Self-sacrifice. Creativity, curiosity, a sense of wonder. Art, music-\"\n\n\"Rape and murder,\" Vicky cut in, counting off on her fingers, \"theft, violence, greed, fear-\"\n\nWatson jammed a finger in her face. \"You have just described the tools of the trade of religion.\"\n\nVicky raked her hair back. \"Is that so? Then what about the deeds of the missionaries? Going to the darkest corners of the Earth, bringing God's light?\"\n\n\"Right.\" Watson grunted, \"Just ask the Mayans how that worked out. Or the Inca, or countless other extinct cultures. Oh that's right, you can't, because they're extinct! You know, the Mayans had a library of over ten thousand books, and how many of those survived the missionaries? Three! Everything else was turned to ash. A compendium of ancient knowledge wiped out by murdering zealots!\"\n\n\"Things were different then.\"\n\n\"But they were still using the same flippin' manual, weren't they? The flippin' bible.\" Vicky tried to walk off but Watson caught her arm and spun her around. \"Vicky? Can I let you in on a little secret?\"\n\nVicky wrenched her arm free then gave a petulant shrug. \"Do what you like.\"\n\n\"You have to promise you'll never breath a word.\" Watson licked his lips, about to breach the trust of a rich and powerful woman, the sort who could have him ass-raped with a couple of phone calls. \"Is Tanya religious?\"\n\n\"Tan? No. She's an atheist I'm sad to say.\"\n\n\"Why sad?\"\n\n\"Well she's utterly lost. She just blunders around in a moral wasteland. I know she has a good heart, at least she does now, but I also happen to know she has some very... unfortunate... proclivities.\"\n\n\"Like paying-off other people's mortgages?\"\n\nVicky looked around, gobsmacked. \"What did you say?\"\n\n\"I just said a lost, blundering, amoral atheist paid off your mortgage.\"\n\n\"Tan? Are you serious?\"\n\n\"She made me swear not to tell, Vicky. There goes another eternity in hell.\"\n\nBig fat tears spilled onto Vicky's crinkled cheeks. \"She paid my mortgage?\"\n\nWatson nodded.\n\n\"I flippin' knew it.\"\n\n\"Well you do now.\"\n\nVicky clenched her teeth trying to hold back her tears. \"But why, Damon? Why?\"\n\n\"Because she could. Because she loves you and would do anything for you.\"\n\nVicky clutched the front of Watson's shirt and stood sobbing quietly into his chest. \"I knew it!\" she blubbed, \"I just knew it. Pastor and Aaron are always so... so disparaging, but Tanya... she treats me better than... than... than my own blinky mother! Why? Damon? Why?\"\n\n\"Beats me. Look it up in the bloody bible.\"\n\n\"It feels like my whole jolly world's just falling apart. Like I'll fly off the Earth if you don't hold me down. I... I always hoped it was Pastor who... paid... or the whole congregation, but in my heart I knew... I knew...\"\n\nThe old man looked nervously around then jockeyed the crying girl through a veil of hanging branches under a handy weeping willow. \"Come on, shoosh now Sweetheart. Someone might ring the cops and say there's this creepy old man down by the lake with a crying young woman.\"\n\nVicky sniffled into his shirt. \"What's happening to me, Damon?\"\n\n\"It's all that running. It's cooked your brain.\"\n\n\"What am I going to do?\" she pleaded in a hoarse whisper. \"After everything that's happened I can never go back.\"\n\n\"To the hotel?\"\n\n\"To the church. All my life it's been the centre of my world, now it's gone\"\n\n\"Oh, it's still there, I can assure you. You can just about smell that smug self-righteousness.\"\n\n\"I can't go back, Damon Not now. Not after this.\"\n\nWatson licked his lips, hoping against hope. \"Well, that's the thing. Do you want to go back?\"\n\nThere was moment's tense silence. He could sense the young woman's struggle, the almost insurmountable urge to shake her head. In the end she just shrugged.\n\nThe old man took her wrists. \"Listen to me, Vick, you have a choice. Free willy, remember. If you want to go back then that's up to you. But if you don't want to go back then you don't have to. You've got a good job. You've got your own home. You've got friends who frikken' love you to death, who'd tear me limb from limb if I so much as made you frown. You've got a life, Vicky, a great one, all ready and raring to go.\" \n\n\"It would mean leaving my whole world behind.\"\n\n\"That's okay, come to mine. It's called Earth. Cracking joint. You'd absolutely love it and we'd love to have you.\"\n\n\"It's a lovely thought,\" Vicky said, smearing her eyes, \"but we both know it's impossible, don't we?\"\n\n\"Impossible?\" Watson slumped. \"Why?\"\n\nVicky held a fist up to his face. \"Notice anything?\"\n\n\"Oh... the ring.\"\n\n\"Yes, the ring. I made a promise, Damon. I can't just walk away.\"\n\n\"That's all up to you, surely?\"\n\n\"No. It's not. It's up to me, Aaron and God. I've pledged him my troth, Damon, and now I'll have to face up to what I've done.\"\n\n\"Face up to it how?\"\n\n\"How do you think?\" Vicky demanded bitterly. \"I am going to have to confess to last night.\"\n\n\"Confess?\"\n\n\"To Aaron.\"\n\n\"Why?\" Watson demanded, shrinking back. \"What makes you think it's any of his fucking business?\"\n\n\"Of course it's his business!\" Vicky glared. \"He has a right to know. The right to know I am now defiled... the right to choose whether he is willing to forgive me or not.\"\n\n\"You guys.\" Watson shook his head. \"Are all religious people so fucked up?\"\n\n\"That,\" Vicky replied icily, \"is entirely a matter of opinion.\"\n\n\"What will Adam do?\"\n\n\"You mean Aaron?\" she said then shrugged her shoulders. \"I dread to think.\"\n\n\"Will he hit you?\"\n\n\"No!\" Vicky snapped. \"He would never lay a hand on me while we're not married. But he'll be horrified.\"\n\n\"Sorry, what's his name again?\"\n\nVicky rolled her eyes. \"Aaron!\"\n\n\"What's he like?\"\n\n\"Oh,\" she replied hollowly, \"he's very scholarly, very studious. Very well respected by the whole congregation.\"\n\n\"Is he funny?\"\n\nVicky blinked. \"Pardon?\"\n\n\"Is he funny? Does he ever muck around? Does he ever hide behind the door and jump out at you, then tickle you till you wet your pants?\"\n\nVicky looked the old man up and down with a glare. \"Certainly not.\"\n\n\"Does he watch cartoons? Does he ever talk to animals? Does he pick up spiders and put them outside, with a beer bottle-top of water for them to drink? Does he take you to the pub to catch a live band, then only have one drink so you can get shitfaced? Does he? Hmm?\"\n\n\"You don't know what you're talking about, Damon. Of course he doesn't.\"\n\n\"In other words he's boring.\" \n\n\"He's one of the most revered members of the congregation.\" Vicky replied haughtily. \"Moral, pious, humble-\"\n\n\"Correction. Dead boring!\"\n\n\"abstinent-\"\n\n\"Dead motherfucking boring!\" \n\nVicky raised her voice to drown out the old man's obscenities, \"-sober, temperate, devoted to God!\"\n\nWatson nodded. The asshole had just been condemned out of his fianc\u00e9's own mouth. \"He must have something going for him, surely. Does he do triathlon?\"\n\nCaught short, Vicky blinked. \"Triathlon? Oh, no, he would never do sport. Far too carnal. And to tell the truth, he doesn't really approve of me doing it either.\" She sighed. \"That's another thing I'll have to give up.\"\n\n\"When you marry?\"\n\nVicky looked at him and gave a sad nod.\n\n\"What's he giving up for you?\"\n\nShe shook her head, nonplussed. \"What do you mean?\"\n\n\"What... is he... giving up... for you? Footy? His Penthouse Black Label collection? His Friday nights at the pub with the boys?\"\n\n\"Well, no, he's not giving anything up.\"\n\n\"Thought so.\"\n\n\"That's not what I meant!\" Vicky blustered, \"Look, he might not be giving anything up, but on the other hand he's taking on a burden.\"\n\n\"What sort of burden?\"\n\n\"What do you mean?\" Vicky demanded then looked herself over. \"He's marrying me.\"\n\n\"You? A burden? A twenty-five year-old stunner with her own career and a body to die for? You're shitting me.\"\n\nVicky looked around, mortified, like someone waking up to find themselves in the midst of a cataclysm. Watson draped an arm over her shoulder while she stiffened at first, she stopped just short of fending him off. \"Look, Sweets. Can I be brutally honest? You are a very beautiful young woman and you have a fabulous mind, even if you're wasting it. You have a totally edible body, a wonderful heart and an amazing future...\"\n\nNo man had ever said these things. She' been called slut, whore, defiler, fallen woman and harlot, but never these mellifluous endearments. In spite of everything it was happening again, that tingling in her groin, the sudden wetness.\n\n\"...or no future at all. At this rate you'll just have the life sucked out of you. You'll be consumed, by some self-righteous, humourless, sanctimonious goon working a sleazy franchise. Everything he does will be for his own self-interest, as he strives to wheedle his way into some ethereal Disneyland. Meanwhile you'll be a drudge. A frump, a chattel and a whipping girl, expected to pump out babies so he can gain favour with the creepy old men of the hierarchy. And then you'll die, having tasted none of life's sweetest fruits- freedom, independence, self-fulfilment. Creativity, curiosity and rampant, dirty sex.\" He shook his head. \"It's totally heartbreaking.\"\n\n\"For whom?\"\n\n\"Anyone lucky enough to know the real Vicky MacDonald. The sweet, funny, considerate, sexy Vicky MacDonald. Does your fianc\u00e9 know that girl?\"\n\n\"What do you mean? Of course he does.\"\n\n\"No. Does he know you? Does he ask about your dreams? Does he ask about your fantasies? What makes you happy, what makes you sad? Does he ever ask about your day at work? How your training ride went? When you drag your weary butt inside after a sixty-k slog through the rain?\"\n\n\"How could you possibly know this?\" Vicky whispered.\n\n\"Well, does he?\"\n\nShe shook her head, looking bleak. \"He's more about telling than asking, to be perfectly honest.\"\n\n\"That sounds familiar.\" Watson said darkly. \"Does he know you've... you know?\"\n\n\"Sinned?\"\n\n\"Had some slap and tickle?\"\n\nVicky nodded, eyes downcast.\n\n\"And what did he say?\"\n\nVicky toed the ground. \"He said he'd forgive me.\" she replied in a tiny voice. \"He said I'd turned to the devil, but through God's infinite mercy and the Pastor's good work I'd been redeemed. He said... he said... if I should remain chaste and penitent, I could walk beside him on his journey with God.\"\n\n\"Oh Jesus Christ,\" Watson squinted, \"he actually said that?\"\n\nVicky nodded and Watson picked up the tiniest hint of embarrassment.\n\n\"And what did you say? Once you'd finished vomiting?\"\n\nA little ferry putt-putted past, early morning sightseers trying to peer into the willow's shady sanctum at the couple's exchange. Vicky raised her eyes, her face pale. \"Oh, God, Damon.\" she whispered, \"You have to save me.\"\n\nWatson put his arm around her shoulders and shepherded her into the sunshine. \"My Dear Macca. You're quite capable of saving yourself. You took the first step when you came to my room last night. Your first step to freedom.\" \n\n\"I can't do it, Damon,\" Vicky whispered, stepping in front of him and clutching his shirt. \"I'm just not strong enough.\"\n\n\"That's where you're wrong. Look at you,\" he pulled away the better to see her, \"I mean just look! One hundred and ten percent woman. A lesser being would have been crushed into oblivion by what you've been through. Your trouble is you don't know your own strength.\"\n\n\"Do you really think so?\"\n\n\"I know so. I felt it last night. Your energy.\"\n\nVicky nodded, blushing. She'd felt it too.\n\nThey set off, walking, back towards the hotel, and Vicky put her arm around his waist. Watson gestured with his chin at the boat as it chugged into the shadows under the bridge. \"Look at them watching us. 'Oh isn't that lovely,' they're all saying, 'she's out for a walk with her dear old dad'.\"\n\n\"You're the most of a man I've ever met in my life.\" Vicky said quietly.\n\n\"Aww...\" Watson grinned, \"shucks.\"\n\n\"I mean it. Last night... you were amazing!\"\n\nNot that she had anything to go by. \"Flattery will get you nowhere, Macca,\" he said, roughing her up, \"but don't let that stop you.\"\n\n\"Can I tell you a secret?\"\n\n\"Seems to be the morning for it.\" Watson shrugged.\n\n\"Yesterday, when I came to Caddy's. Well... I only wanted to come because you were there. And I only wanted a swim so I...\" Her voice trailed off and she left the old man hanging.\n\n\"So you could what?\"\n\nVicky shivered. \"Naww... it's too embarrassing.\"\n\n\"Oh, bollocks. We were doing the horizontal tango last night. You can't be embarrassed.\"\n\n\"So I could show you my body.\" Vicky said hastily, in a hurry just to get it said, \"I don't know why. I've never, ever had that sort of feeling before- if the others hadn't been there I would have stood in front of you stark naked.\"\n\nWatson palmed his forehead. \"Now you tell me!\"\n\n\"And you know what?\" she carried on breathlessly, \"Yesterday. My down there was all wet, just like last night.\"\n\n\"Your vagina, Vick. Let's just pretend to be grownups.\"\n\n\"And last night. When you put your tongue in my... thingy... I thought my heart was going to go jump right out of my chest.\"\n\n\"Well that all sounds pretty normal.\"\n\n\"For you, maybe. For me it was a revelation.\"\n\n\"Of what?\"\n\n\"I don't know.\" Vicky hefted a shoulder. \"The possibilities?\"\n\nWatson stepped in front of her, then gripped her arms and gave her a shake. \"By George I think she's got it.\" \n\n\"Even this morning,\" she went on, desperate to unburden herself, \"in spite of everything, I just couldn't wait to see you. Talk about conflicted.\"\n\nWatson nudged her. \"Stop it, Macca, it's making my head swell.\"\n\n\"Damon?\" Vicky looked at him, blinking. \"Do you think it's just a flash in the pan?\"\n\n\"What?\"\n\nVicky looked around restively. \"That taste of freedom?\"\n\n\"Only one way to find out.\"\n\nVicky shivered, in spite of the heat. \"Oh my goodness, you're right. There is only one way. I've just got to do it. Do... do you think we can do it again? You and me?\"\n\nAlready stirring, Watson's cock gave a twitch. \"What are you doing tonight?\"\n\nVicky blushed. \"Not tonight.\"\n\nWatson looked at her, a little miffed.\n\n\"No, no. I'd love to, really.\" Vicky said, \"But I'm nursing a sore...\"\n\n\"Pussy?\"\n\n\"Thingy.\"\n\n\"Well that's a good sign!\"\n\n\"No. Not really.\"\n\nWatson peered deep into her green eyes. \"Why not?\"\n\n\"Well. To be brutally honest. When I went back to my room. I sort of... scoured myself.\"\n\n\"You what?\"\n\n\"I tried to purify myself. Unfortunately all I had was mouthwash.\"\n\nWatson reeled like he'd just been slapped. \"Mouthwash? You can't be serious! In your poor little puss?\"\n\n\"I couldn't help myself.\" Vicky cried. \"I'd just committed a mortal sin. I wasn't thinking straight.\"\n\n\"Oh that poor little thing. Still, look on the bright side, at least it'll have that nice, mint-fresh breath. Should I have a taste and see?\" \n\nVicky hugged his waist. \"Once the dust settles, I promise. And anyway, there's still work to do. How the hell am I gonna break this to Pastor? Not to mention Aaron?\"\n\n\"Tell 'em you've turned Buddhist.\"\n\n\"Buddhist? Why?\"\n\n\"Who can hate a Buddhist?\" Watson shrugged. \"If you tell 'em you've turned atheist they'll just take it as a challenge to win you back.\"\n\n\"Buddhist? You think it'll work?\"\n\n\"Worked for me.\"\n\n\"I'd better do some backgrounding, then.\"\n\n\"Hang on, Vick,\" Watson said, proffering an out, \"you sure you want to go through with this? Don't want to take a day or two to think things over? They need never know what happened if you want to change your mind. This is Canberra. You can probably claim some sort of diplomatic-\"\n\nVicky raised a hand. \"No, Damon, I'm sure. In fact it's the first time in my life I've ever been sure of anything.\"\n\n\"What about the engagement? It might mean breaking it off.\"\n\nVicky raked her fingers through her hair. \"There are no heartstrings binding us, I've already looked. Don't get me wrong, I really like Aaron, but...\"",
        "Watson gripped her arms. \"But what?\"\n\nShe looked at him. \"But nothing. I don't like him, Damon, not one little bit. In fact I don't think I ever have. There! After all this time I've finally said it. I'm afraid of him, yes, and a little in awe, and I've always looked up to him as my spiritual superior. But like him? Nah. That's not the way we do things.\"\n\n\"Well it sounds like your mind's made up.\"\n\nVicky turned her attention inwards. She felt like she was walking on air, like she was weightless, and light was shining through her, like sunlight through a stained glass window. An indescribable sense of joy was welling up from the pit of her belly and her heart was hammering in her chest. The very thought that she could just go ahead choose a new path was almost overwhelming. \"Pretty much.\"\n\n\"I hope you know what you're doing.\" Watson sighed.\n\n\"I don't have a clue.\" Vicky shook her head. \"Do you?\"\n\nWatson nodded. \"Yes.\"\n\n\"And?\"\n\n\"I say go for it!\"\n\nVicky hooked her arm through Watson's elbow. \"The die is cast.\" she announced. They set off, walking at a civilised pace, and Vicky suddenly said, \"Sex.\"\n\nWatson looked at her. \"You have just named my number one favourite pastime.\"\n\n\"Really? Well do you think we can do it again? Once everything has settled down?\"\n\n\"Is the pope a- of course we can. We'd be mad not to. Think of all the positions we still have to try.\"\n\n\"Positions?\" Vicky frowned. \"What positions?\"\n\n\"Sexual positions.\"\n\n\"Positions? Plural? There's more than one?\"\n\nWatson shook his head, laughing. \"Oh, Vicky. You have no idea.\"\n\nShe shivered. \"You're right, I don't, but I'm busting to find out.\"\n\n\"Think I'm good enough?\" Watson asked, shaking her arm. \"Wouldn't prefer some tall, dark, handsome stranger more your age?\"\n\n\"Oh, you're good enough alright.\"\n\n\"Even if I fall asleep on you afterwards?\"\n\n\"That was a bit of a shock I have to admit. And when you made that great big noise...\"\n\n\"What big noise?\"\n\nVicky looked at him, smirking, but didn't reply.\n\n\"Oh...\" Watson blushed, \"did I?\"\n\n\"Nearly blew the sheets off.\" Vicky teased.\n\n\"You must think I'm disgusting.\"\n\nVicky tugged him to a halt. Looking left and right to check the coast was clear, she cranked her hip out. One eye closed, she curled her lip and summoned up a ladylike toot. \"There.\" she said, \"Now we're even.\"\n\n\"Goodness,\" Watson laughed, \"I've created a monster.\"\n\nVicky's lips parted in a great big grin which she immediately hid with her hand.\n\n\"And that's another thing that has to stop!\"\n\nVicky looked around, puzzled. \"What?\"\n\n\"Always hiding that gorgeous mouth. It's a crime against humanity.\"\n\n\"But Pastor says-\"\n\n\"Fuck the Pastor!\"\n\nVicky blanched.\n\n\"I mean, 'yea and verily, the pastor doth unto us all a great disservice'. The rules have changed, Macca. Hiding that smile is now officially illegal.\"\n\nVicky's uninhibited smile lit up the sky. \"You know, Pastor always said I had a wanton mouth.\"\n\n\"Well he got that right.\"\n\nVicky drew a huge breath that reached the soles of her feet. \"You have no idea how long I've been waiting for this day.\"\n\nWatson shrugged. \"Had to happen sooner or later. They couldn't keep you locked up forever.\"\n\n\"What if we had never crossed paths?\" Vicky asked.\n\n\"Useless to speculate,\" Watson replied, \"because we did.\" He felt Vicky deflate a little, un-reassured. \"But it still would have happened. It was inevitable.\"\n\n\"Do you think?\"\n\n\"Do you?\"\n\nVicky looked around at her amazing new world. \"Know what? The answer is yes. Yes I do.\"\n\n\"Then it's official.\" The old man beamed and offered his hand. \"Congratulations, Victoria, you've just been reborn.\"\n\nThey shook, then Vicky pulled away, peering at him suspiciously. \"Just one thing.\"\n\nWatson shook his head in dismay, having thought the deal was already sealed. \"What?\"\n\n\"All those things you just told me. About the sun and ice and star-stuff and everything. Is all of that true?\"\n\n\"Cross my heart and hope to die.\" Watson nodded, drawing an 'X' on his chest.\n\nVicky took his hand. \"Then there is so much to learn.\"\n\n\"It will knock your socks off.\"\n\nVicky raked her hair back then stepped aside. \"Well, come on then. Now you've gone and undone the last twenty five years of my life. I guess it's time we got back.\" \n\nAs she dropped her head to launch into a trot Watson grabbed her. \"Vicky, for the love of the late god. Don't make me run.\"\n\n\"It's just a short jog.\"\n\n\"Followed by a funeral. Come on, Honey, let's just walk. And if I make it home alive I'll shout you breakfast.\"\n\n* * *\n\nBy the time Watson had showered, wolfed down a snack and done the mandatory last look-around, the pilots and Beck were already outside, luggage neatly arrayed, awaiting pickup. Ally was clad in a pair of bright yellow denim shorts with a Hello Kitty sewn onto one cheek, and a light pink hoodie with the sleeves pushed up. On her feet she wore a pair of well-worn gold-glitter Converse, with short pink running socks accentuating her slender ankles. When Watson strolled up she was teaching Beck to do cartwheels.\n\n\"Okay Beck, front leg in the direction you're going, lean forward and bring the back leg up. Hand, hand...\" Ally went over and the bottom of her hoodie rode up over her belly, all the way to her black-striped green bra. \"And you boys,\" she grunted, \"stop looking at my tits.\"\n\n\"Make me!\" Ben said.\n\n\"Is she clairvoyant?\" Watson shook his head.\n\n\"Foot, foot..\" Ally landed squarely on her feet and straightened, brushing her hands. \"You're male,\" she told the old man. \"I don't have to be.\"\n\nBeck went over in an almost perfect replica of Ally's demonstration, her skirt fetching up around her hips, the hem of her T-shirt riding up halfway over her breasts, revealing an eyeful of floral cotton panties and matching bra. \n\n\"I can see your knickers!\" Ally sang, pointing.\n\n\"Stop steaming up my tail!\" Beck exclaimed and Ben almost swooned, \"Waddaya tryin' to do? Wrinkle it?\"\n\nAlly clapped. \"Excellent, Becky,\" she said and raised a hand, \"but try to rotate through the vertical. Here...\" Ally squared up, then lunged onto the forward foot, fell forward onto her hand, \"I haven't done these since... Ooomph...\" Misjudging, she twisted around her hand and came down hard on her bottom, dislodging her gold-mirrored shades. Wide-eyed, slightly winded, she stuck out her bottom lip and blew the hair from her face. \"...high school.\"\n\n\"About six weeks ago.\" Ben giggled.\n\nBeck sailed through a perfect cartwheel, hand, hand, foot, foot, landing as lightly as a cat. Ally extended an arm. \"Give an old digger a hand, Benny Boy?\"\n\n\"Give yourself one.\"\n\nWatson stooped to offer his but Beck barged him out of the way. Taking Ally's hands, she leant back and heaved the young woman up off the grass.\n\nA stretched limo coasted into the horseshoe drive at the same time as a distant voice hailed, \"Yoo hooo!\"\n\n\"Christ!\" Ben hissed, \"It's Macca! Look busy!\"\n\nBeck hastily brushed the grass off Ally's behind. \"You missed some.\" Ally teased, sticking her butt out.\n\nVicky sashayed down the path as the limo drew to a stop and the trunk clunked open. She was dressed in her short, sleeveless, blue Manga dress and a pair of red high heels. Her hair was out, rather than trussed into its standard functional bun, and she was radiating vivacity. \"What's this?\" she demanded with a huge, unabashed smile, \"Why aren't you guys in uniform?\"\n\n\"Mufti day.\" Ally replied, surreptitiously studying her friend. Something wasn't right.\n\n\"I'm telling on you!\" Vicky taunted, smiling.\n\n\"Well Tan said we could,\" Ally retorted and poked out her tongue, \"so there! Anyway, you can't talk. You look like you just staggered back from the Casino.\"\n\n\"Watch this, Macca!\" Beck called then cartwheeled across the grass, hand, hand, foot, foot.\n\nVicky pointed. \"I can see your knickers!\"\n\n\"Is that all anybody cares about?\" Beck scowled.\n\nBen nodded. \"Pretty much.\"\n\nA uniformed chauffeur climbed out of the limo. \"Good morning Captain Sorensen, Captain Blake.\" When Ally hefted her overnight bag, the chauffeur stepped in, offering his hand. \"Please, Miss Blake, let me get that for you.\"\n\nAlly fended him off with a shoulder. \"I'm not a flippin' cripple, Geoff.\"\n\n\"Ah, Miss Blake, I have missed you.\"\n\n\"You need to drop your sights a bit.\" Ben suggested. \"And load up on rat-shot.\"\n\nVicky breezed up. \"Morning, Geoff.\"\n\n\"Miss Victoria? I'm sorry, I didn't recognise you without your work clothes. You're looking very...\"\n\n\"Sexy.\" Ally wound the statement up for him.\n\nWhen Vicky squeezed in beside Ally to load her bag, the pipsqueak pilot sniffed the air. \"Is that perfume? And are you wearing lipstick?\"\n\n\"What's this?\" Vicky looked her up and down, beaming. \"Are you from the lipstick police?\"\n\nBeck manoeuvred into position at Watson's elbow to watch the show. The last she'd seen of the god-fearing PA was with her ankles around her ears and her butt off the bed, being pounded all the way to orgasm by her old man.\n\n\"How did you pull up from the run?\" Watson asked.\n\nArms up, exposing her creamy white underarms, Vicky swept her hair back, classic female body language, showcasing her youth, advertising her fertility. \"It was one of the best I've ever had. How about you?\"\n\nWatson looked at the audience, feigning injury. \"She tried to kill me.\"\n\n\"Well at least she didn't try to convert you.\" Ally muttered.\n\n\"Damon's not the one who needed converting.\" Vicky said cryptically. \"Shouldn't we be going?\"\n\nThey sat in silence as the ride began, Ben and Watson on the forward-facing rear seats, Beck lounging between Vicky and Ally on the mid-seat facing aft. Watson stared out the window, assiduously avoiding the merest glance under the hem of Vicky's short dress. Well, just the one, to confirm the colour of the day, dark blue, trimmed in yellow.\n\nAlly sat probing Vicky's energy, sure, on the one hand, what all the signs pointed to, unable, on the other, to reconcile such a ludicrous notion with her straight-laced friend. It was a bit like coming across a sealed section in the bible, a full-colour spread featuring an orgy. Oblivious to her neighbour's troubled musings, Vicky touched Beck on the arm. Ducking her head, she pointed out the window. \"Have you ever wondered,\" she asked, \"what makes clouds stay up in the sky?\"\n\nWatson sat, holding his breath. Such a simple question with so much portent.\n\nAlly rolled her eyes, oddly relieved. \"Christ,\" she muttered, \"here we go.\"\n\n\"No, really. Look at them. We wouldn't be alive if it weren't from them. No clouds, no rain. No rain, no life. But how do they do it?\"\n\n\"Convection.\" Beck announced matter-of-factly.\n\nVicky shook her head with a frown. \"Con-what?\"\n\n\"Vection. When the ground heats up, little parcels of warm air begin to rise. When they rise they cool. If there's moisture in the air it condenses, and the teeny-weeny droplets make up the cloud.\"\n\nThere was a moment's dead silence and Ally shook her head. \"Shit a brick. That takes me back.\"\n\nBen crossed his arms, gazing at infinity, \"CPL. Basic met.\"\n\nAlly nodded. \"I forgot all that garbage the minute I passed my exams.\"\n\n\"But why don't they fall down?\" Vicky persisted. \"Water's heavier than air, isn't it?\"\n\nBeck flashed Watson a glance and he gave her a tiny nod. They had studied the subject over several days at sea, sloshing along in a desultory breeze with nothing to do but fuck and learn stuff. \"The droplets are so small they don't have much fall velocity. Plus the clouds make their own heat when the vapour condenses so they continue to rise.\"\n\n\"She's right,\" Ally affirmed in amazement, \"the latent heat of condensation. Let's just sign her up for her licence and be done with it.\"\n\nVicky's eyes had gone all misty and she smeared them with the back of her hand. \"How can you know all this?\"\n\n\"She can read!\" Ally said flatly, \"And I don't mean the bloody-\"\n\nWatson put a finger to his lips and gave his head a miniscule shake.\n\n\"So as long as the clouds are warmer than their surrounds they keep going up.\" Beck continued. \"Do you want to know the cloud species?\"\n\nVicky looked at her, agog. \"Clouds have species?\"\n\n\"Of course they do. You see-\"\n\nWatson nudged Beck's foot with his toe. \"Thanks, professor. That'll do.\"\n\nVicky draped an arm over the pouting girl's shoulders. \"Let's learn clouds when I come for a sail. I can come, can't I? I have witnesses you know. That invitation is legally-binding.\"\n\nWatson looked at her. She could come, alright, he'd seen it. And there'd be lots to learn about other than clouds. But she'd lived most of her life in a state of trudging ignorance and the question was, how much more knowledge could she could safely absorb?\n\n* * *\n\nBeck trailed Ben around his preflight inspection, feeling hugely important in a pair of orange earmuffs and a bright yellow hi-viz. In the right hand seat up in the cockpit, Ally did the dogsbody work of loading the flightplan for their quick hop to Sydney.\n\nWith Ben in the skipper's seat and Ally riding shotgun, Beck settled into the jumpseat between and behind them, equipped, this time with sheaf of approach diagrams, as if she could make head or tail of them. Ally filled any gaps in the stream of radio calls with a running commentary, translating high-aviation into something fit for mortals. And the more she saw, the more determined Beck became, this was what she wanted to be.\n\nWith permission to taxi, Ben urged the ship forward out of the starting blocks and steered it onto a long, paved taxiway. Cleared for a departure to the north, they were suddenly re-cleared by Air Traffic Control for a take off to the south, requiring a quick reprogramming of the flight computers. \"Jesus Christ!\" Ben fumed as Ally keyed in new directions, \"Can't they make up their fuckin' minds?\"\n\nAlly stuck out her bottom lip and rubbed his forearm. \"Nawww.. Poor Benny. 'Oo 'ant me to go and smack the naughty man?\" Ben wrenched his arm away and Ally looked at Beck with a great big grin. \"Isn't he precious? Know how you can tell when Benny-boy's flying?\"\n\nBeck shook her head.\n\n\"Because when the engines shut down you can still hear the whining.\"\n\n\"Haa-fucking-haa!\" Ben said, then looked at the giggling blonde. \"Know how you can tell when Allycat's flying?\" he asked, desperately ad-libbing. \"Well... you... she... well neither do I, but she's crap.\"\n\nHalfway back in the cabin, over the wing, Watson and Vicky sat facing each other in a pair of plush leather armchairs. Vicky reclined, chin on her fist, her legs slightly parted to give an unimpeded view of her cotton-clad charms. Her eyes were fixed on Watson, almost unblinking, as a battle of epic proportions raged between her temples. \n\nHeart-lifting enlightenment versus stifling inculcation, knowledge versus belief, certainty versus faith built on dogma and ritual. And it suddenly occurred to her, she had been fighting this battle for most of her life, a war on two fronts- raging against her own, wicked desires on one flank, while on the other, dashing herself to bits against the bulwarks of an implacable edifice. And all she'd had to do was walk away. Turn around and walk away, from everything and everyone she'd ever known. \n\nUnable to help himself, Watson sat nursing a partial erection, the sight and smell of the young woman sitting in front of him, interspersed with snippets from the night before, rendering self-restraint a near impossibility. This was where it could all go pear-shaped, where hearts could get broken as desires took hold. A holiday fuck, that's all it was. If he could only believe it himself he might even convince her.\n\n'Bing bong'. The seatbelt sign went off. Levelling at cruise, the aviation comedy duo rattled off the last of their checks and sat back. \"Well?\" Ally breathed and squeezed Beck's knee. \"You still wanna be a pilot?\"\n\nBeck shook her head. \"Not want to be. I'm going to be!\"\n\nBen palmed his forehead. \"Your old man's gonna kill us!\"\n\nBeck shot a glance over her shoulder. All she could see was the top of two heads over the back of the aft-facing armchair. What she couldn't see, but easily surmised, was one of her old man's hands under Vicky's dress, the other mashing her breast as Vicky gripped his erection while they kissed. She looked back quickly before the others could follow her gaze. She liked Macca. Why spoil her fun?\n\n\"Maybe we should try to look all pissed-off and ante.\"\n\n\"But it's fun!\" Ally whined.\n\n\"What is?\"\n\n\"Flying, cock-breath. Apart from bloody passengers. Except these guys of course. Hold on...\"\n\nAir Traffic control radioed up their inbound clearance and Ally entered the arrival into the computer. There was a sudden presence at the rear of the cockpit and Vicky leant over Beck's seat, a little dishevelled and slightly breathless. \"You guys? Are we more than a mile up?\"\n\nAlly squinted at her. \"Up where?\"\n\n\"I don't know. In the sky?\"\n\n\"Above ground level?\" Ben replied. \"We're just over five.\"\n\n\"Miles?\"\n\nBen and Ally exchanged a glance and Ben nodded. \"Uh huh.\"\n\n\"Cool. How long till we get to Sydney?\"\n\n\"About twenty minutes,\" Ally replied, \"but we're almost at top of descent and it's gonna get bumpy.\"\n\n\"Already?\"\n\n\"It's only Sydney, Macca. You could pedal there quicker on your bike.\"\n\n\"Naww..\" Vicky pouted. Watson had mentioned the mile-high club, just as a joke, and once he explained, sore thingy or not, she wanted in. \"Will it be too bumpy to go to the loo?\"\n\n\"Depends.\" Ben shrugged. \"As long as you don't mind coming out all covered in shi-\"\n\n\"Loo water, Ben.\" Ally cut him off. \"Don't forget it's Macca we're talking to.\"\n\n\"God dammit!\" Vicky breathed, then scurried away.\n\nBen looked at Ally, frowning. \"Did she just take the big fella's name in vain?\"\n\n\"What's gotten into that girl?\" Ally despaired.\n\nBeck sat back, the hint of a smile playing at the corners of her mouth. She knew exactly what. And who.\n\n* * *\n\nAviation mechanics were working on the airplane before they even disembarked, completing a list of maintenance before its departure for Hong Kong. Ben was first off, walking around the plane in a ritual post-flight inspection. Beck followed him, resplendent in High-Viz and earmuffs, leaving Watson with Vicky at the top of the stairs. She squeezed his arm. \"See you in a minute\" she whispered, \"I want to have a chat to Alana.\"\n\nAlone in the cockpit, Ally cast her eye over the landscape one last time, checking every last switch was in the right place, every button, every lever. Finally satisfied that all was in order, she racked her seat back and stood, only to find her exit blocked by a comely young woman. \"'Sup, Macca?\"\n\nVicky checked over her shoulder then cleared her throat. \"Remember the time you got drunk and tried to kiss me?\"\n\nAlly rolled her eyes. \"Which one?\" \n\n\"Did you really want to kiss me or were you just mucking around?\"\n\nAlly's heart skipped a beat. Her straight-laced pal was looking at her funny. \"Why?\"\n\n\"Answer the question witness. Did you really want to kiss me or were you just teasing?\"\n\nAlly hooked a blonde-streaked, brunette tress behind her ear. \"Is this going to be another one of your sermons?\"\n\n\"Need I remind you who schedules your leave?\"\n\n\"Of course I wanted to kiss you.\" Ally said brazenly, \"What of it?\"\n\nThe young pilot's eyes flew open as Vicky leant into her, her big, cushiony lips slightly parted, and fused her mouth to Ally's. Her tongue wormed its way into Ally's mouth, as Vicky held her jaw in the palm of her hand preventing retreat. Breaking off after a heavy-breathing minute of deep, wet-mouthed kissing, she took a step back and wiped her mouth. \"Gosh!\" she breathed while Ally stared at her, gobsmacked, \"That was nice.\"\n\nStunned, Ally stood rooted to the spot as Vicky turned and sauntered away, without so much as a buy-your-leave. Ally licked her lips. She'd fantasised about that kiss for years, with no idea of just how delicious it would turn out to be. Worst fears confirmed, she narrowed her eyes. Someone had treated the young god-fearing, bible-thumping, goody-two-shoes to a revelation, and there was only one candidate...",
        "He was standing at the bottom of the airstairs when Ally alighted, the sleeves of her pink hoodie shucked up, all the better to punch his lights out. Turning on him as her feet touched the ground, she jammed her fists on her hips then looked him up and down with a withering glare. \"What the fuck did you do to her?\"\n\nWatson blinked. \"I beg your pardon?\"\n\n\"Don't play dumb with me, Mister. You bonked Macca, didn't you?\"\n\nWatson slipped his hands in his back pockets, in case the irate little aviator caught a whiff of his fingers. \"Hang on.\" he parried, \"What did you say last night? I'm old enough to be your dad? And she's your age, isn't she? So what makes you think it was me?\"\n\n\"But it was you!\"\n\n\"A gentleman never tells.\"\n\n\"And a lady always knows. This could ruin her life, you know.\"\n\n\"Or be the making of it.\"\n\n\"So you admit it?\"\n\n\"Huh! You've been hanging round lawyers too long.\"\n\n\"Well let me tell you. If this all falls in a fucking heap...\"\n\n\"You said yourself, she needed the release.\"\n\n\"It was a joke.\"\n\n\"Really? Well take a look at her now.\"\n\nTheir heads turned in the direction of the Fixed Operating Base, a low-roofed, wide-verandahed aviation facility hosting multiple services- lounge, meeting rooms, flight-planning facilities, showers, toilets and a kitchen- for itinerant flyers. There at the top of the wide wooden steps stood Vicky, toe-to-toe with Tanya.\n\n\"Early days, Damon. I'm telling you! If it all goes south and you feel yourself being haunted, that'll be me. Don't fuck with the sisterhood. You got that?\"\n\nWatson snapped smartly to attention with a salute. \"Ma'am, yes ma'am.\"\n\n\"Excellent.\"\n\nAlly turned to go and Watson caught her elbow. \"Just one thing. What if it all heads the other way instead?\"\n\n\"What other way?\"\n\n\"North? Instead of south?\" \n\nAlly looked him up and down again then arched her eyebrows. \"Well, old man. Remember how you asked me back to your room?\"\n\nWatson nodded eagerly. \"Uh huh.\"\n\n\"Well you never know your luck in the big city.\"\n\nResplendent in a short denim skirt and black lace-trimmed camisole, and an increasingly battle-weary fluoro-pink cast, Tanya was grappling with the same dilemma. Macca smelt different. Different for Macca anyway, but on the other hand it was a very familiar and unmistakable scent. Sex. Her eyes bored into Vicky's. The young woman had a strange, new glow to her and her green eyes were sparkling. And gone without a trace her usual expression of intense preoccupation, replaced instead with a look of beatific serenity. \"Are you okay, Macca? You look different.\"\n\n\"No, Boss,\" Vicky shook her head as her eyes welled, \"I'm not okay, I'm ffff... flippin' awesome!\"\n\n\"R... right. You good to go for that two o'clock settlement?\"\n\n\"Of course.\" she patted her shoulder bag, \"Have laptop, will settle.\"\n\n\"Macca?\" Tanya persisted, \"You sure you feel okay? I can get Sanjay to rip over there if you need the day off.\"\n\nVicky put her hand on Tanya's arm. Even her touch was different. \"Stop fussing, Aunty Tan. I'm fine. In fact I'm excellent. I've read the judgement and I've prepped the conditions. Just give me a minute to grab a quick shower and I'm on it.\" Vicky's eyes held Tanya's and for one giddy instant, Tanya thought she was about to get kissed. By Macca. On the mouth. Vicky smeared her eyes with the back of her hand instead. \"Thanks, Boss. For looking after me.\"\n\n\"It's my job, Macca. You know what they say? You look after your staff, they look after your clients.\"\n\nVicky nodded, desperate to spill the beans on her mortgage but determined not to do so. \"Better get my skates on.\" she said, and hurried away.\n\nWhen Watson wandered over, all smiles, Tanya treated him to an accusing scowl. \"Spill, Damon. You and Macca? What happened?\"\n\n\"Pardon?\"\n\n\"Don't play dumb with me, Captain Watson. Look me in the eye and say it ain't so.\"\n\n\"Jesus Christ,\" Watson cursed, trying to evade her eyes, \"I didn't expect the Spanish inquisition.\"\n\nTanya grabbed his chin. \"I said look at me, Damon! What's going on?\"\n\n\"Nothing.\"\n\n\"Then why has my PA come home looking like she's just been fucked?\"\n\n\"It's not how it looks, Tan,\" Watson protested, \"honest! I would never have laid a finger on her if she hadn't... well... you know.\"\n\n\"But you did lay a finger on her. Is that what you're saying?\"\n\n\"In a manner of speaking.\"\n\n\"Apart from a finger? Anything else?\"\n\nLips pursed, the old man shrugged.\n\nTanya exhaled through her teeth. \"Well thanks a bunch, Captain Casanova. Now I'll have to find another PA.\"\n\n\"Why? What's the matter with the old one?\"\n\n\"You just fucked her.\" Tanya said flatly.\n\n\"So she had a little nooky. Big flippin' deal.\"\n\n\"It will be. When that filthy old cunt of a Pastor finds out.\"\n\nWatson blanched. Tanya, unlike Ally, was not the sort of woman to drop the 'C'-bomb willy-nilly.\n\n\"And what's Jesus gonna say? I mean the fuck-stick she's marrying, not the fairytale one.\"\n\n\"Well... that might not be an issue very much longer.\"\n\nTanya shuddered. \"If you had a thermometer you'd see my blood just ran cold. Come on. What did you do to her?\"\n\n\"Just opened those gorgeous green eyes for her, Tan. Just a peep.\"\n\n\"To what?\"\n\n\"Reality.\"\n\n\"And just how did you accomplish that?\"\n\n\"Oh you know me,\" Watson hefted a shoulder, \"I offer the complete package. Comedy, enlightenment, the whole six inches.\"\n\nTanya raked her hands through her hair. \"You fucked Macca.\" she breathed, \"I don't fuckin' believe it.\" She narrowed her eyes. \"Did you drug her?\"\n\n\"She drugged herself. On Champagne.\"\n\nTanya put a hand on her heart. \"Macca? Drank Champagne?\"\n\n\"Positively guzzled it.\"\n\n\"At the pub?\"\n\n\"To start with. Then she came to my room with a bottle.\"\n\n\"She... came to you?\" Tanya rubbed her face. \"You know, if I didn't know you better I'd say you were shitting me.\"\n\n\"It's the truth. We were all down in the Griffin room, having a chat over a glass or three, then later on, after we'd all said goodnight, she just turned up at my room.\"\n\n\"You invited her?\"\n\n\"What do you take me for?\"\n\n\"Know what, Mister? Right now I'm gonna reserve judgement.\"\n\n\"Actually at first I thought it was Ally. I sort of put the word on her earlier.\"\n\n\"And?\"\n\n\"She told me to go jump.\"\n\n\"She gave you a knock-back?\" Tanya asked in surprise. She pointed at him. \"Haa haaa! Still, that's not like Alana. Or maybe she's just playing hard to get, in which case you're in for it later. Mmm yeeaahh, you might want to think about life insurance. Anyway, back to Macca. You allege she came to your room of her own volition?\"\n\n\"Yes, your honour. Right when Beck was warming me up.\"\n\n\"Becky was there?\" Tanya slapped a hand on her forehead and turned on the spot. \"Jesus Christ, what next?\"\n\n\"Next time you stay at the Hyatt, check your closet. Mine had a hot little blonde inside it. Hot and frustrated.\"\n\n\"Becky?\"\n\n\"Uh huh.\"\n\n\"Was in the closet?\"\n\n\"Yep.\"\n\n\"While you were... while you were leading Mother Teresa-junior up the garden path?\"\n\n\"At first. Then the little perv snuck out for a grandstand view. I can only imagine what she saw.\"\n\nTanya put her face in her hands. \"Jesus H. Christ. You gotta be making this up.\"\n\n\"Ask her.\"\n\n\"Oh don't worry, I will. She can corroborate your story... or not, as the case may be. Jesus, I hope the poor baby comes out of this okay. You know if anything happens to her you'll have me to answer to.\"\n\n\"I do believe there's a queue.\"\n\n\"Why? Who else knows?\"\n\n\"Only Ally. And she's already given me a serve.\"\n\n\"You told Ally?\"\n\n\"Didn't have to.\" Watson shook his head. \"She picked it up on the f-band.\"\n\n\"Ally Cat? Geez, I'd hate to be in your shoes if it falls in a heap.\"\n\n\"Funny, that's exactly what she said.\"\n\n\"Yeah, well, let me tell you. She's not the sort of girl you wanna piss off.\" \n\n\"Look, I bet you a week of rampant sex it's gonna be fine. More than fine. Vicky will be transformed.\"\n\n\"A whole week?\" Tanya rubbed her chin. \"Hmm... the old win-win.\"\n\n\"And don't forget Beck.\"\n\n\"Ah... win, win, win! Okay,\" she held out her hand and they shook, \"you've got yourself a deal.\" Looking left and right, she leant into him. \"Were you the first?\"\n\n\"Missed out by ten or fifteen seconds apparently.\"\n\n\"Close enough!\" Tanya nudged him. \"You randy old stud! What was she like?\"\n\nThe pilots walked across the apron, Beck between them lugging her gear. Ally and Tanya traded a glance, exchanging scandal-laden, female-only, telepathic zip-files for later unpacking. Ben pulled up in front of Tanya and kissed each cheek in turn. \"Met our new copilot?\"\n\n\"Say what now?\"\n\n\"I'm going to be a pilot!\" Beck announced eagerly.\n\n\"Can you imagine?\" Ally said, \"Beck and me flying around in the Stream? No more smelly old Ben.\"\n\nBen stuck his bottom lip out. \"Aww... you gonna replace me?\"\n\n\"Why not?\" Ally sniffed, \"She's prettier than you are and she smells better too.\"\n\n\"Don't worry, Ben,\" Beck said reassuringly, \"we can take turns.\"\n\nFor a moment it looked like Ben might lose his footing.\n\n\"It'd sure make scheduling easier.\" Tanya replied, deftly sidestepping Beck's innuendo before pitching one of her own, \"Three pilots. Imagine what we could screw out of you!\"\n\nThere was a brief Mexican standoff, then Tanya brought the wayward conversation to heel. \"You sure you guys should be planting these ideas in this girl's head? It's not the kind of lifestyle I'd choose.\"\n\n\"I didn't plant nuttin'.\" Ally said flatly. \"Ben?\"\n\n\"No way. I've been trying to talk her out of it.\"\n\n\"That's the truth, Tan,\" Beck piped up, \"both of them have. But it's meant to be.\"\n\n\"Jesus.\" Tanya cursed softly. \"What's the old boy say?\"\n\n\"He said he'll think about it.\" Beck's face crinkled with a smile, \"Which always means yes.\"\n\n\"I'll have to sell my body.\" Watson groaned.\n\n\"Well that should pay for a post-flight beer.\" Ally teased.\n\n\"Steady on!\"\n\n\"It's never a dull moment with you guys.\" Tanya sighed. \"You two set for Honkers tomorrow?\"\n\nBen looked around. \"I might try to get home and rest up. Cat's left-seat, I'll need to be on my toes.\"\n\n\"I've booked you into the Nova.\" Tanya announced brusquely. \"Bryce is picking up Sophie and the bub and they're meeting you there. Off you go, Ben. Have a little family time before you head off.\"\n\n\"Sophie's coming?\" Ben beamed. \"Geez you're a good boss.\"\n\n\"And don't you forget it.\"\n\n\"Aww...\" Ally frowned, \"who's coming for me.\"\n\nTanya patted imaginary pockets. \"Hang on, there's a list.\"\n\n\"No shoving, girls and boys,\" Ally said, waving down an imaginary crowd, \"there's plenty to go around.\"\n\nTanya badly wanted to ask Ally for a second opinion regarding their mutual friend, but when Vicky returned from the facility's amenities the chance was lost. She'd changed back into her work clothes, grey pants and matching jacket, a red, vee-necked shirt and black high heels, and with a two-minute shower under her belt looked as fresh as a daisy. \"Well,\" she said a little breathlessly, \"better be making a move. Curtain goes up in an hour.\"\n\n\"You sure you're alright, Darling? I could always get Sanjay to take it.\"\n\nVicky shook her head, squinting through her tears, as everyone bar the innocent Ben hung on for the answer. \"Of course I'm alright. In fact I'm more than alright, I'm bloody fabulous. Why wouldn't I be?\"\n\nTanya had never, in the course of their relationship, heard Vicky admit to being anything other than merely alive. Or late. Or remorseful. Or guilty. Or completely unworthy. \"I... nothing... we've been riding you pretty hard these last few days, that's all. Don't be afraid to put your hand up if you're feeling worn out.\"\n\nRiding her hard... there went a fresh pair of knickers. \"I'm bursting with energy.\" Vicky smiled, reeling with the imagery. \"For goodness sake stop fussing.\"\n\n\"Can't keep a good girl down.\" Ally said.\n\n\"What about bad ones?\" Vicky grinned, then hugged Ally and gave her a kiss on the cheek. \"Thanks for the ride, Capn' Cat.\"\n\n\"No.\" Ally blinked, frankly rattled, \"Thank you. And thanks for... err... thanking me.\"\n\n\"Benny.\" She smacked him on the lips.\n\n\"Laters, Macca.\" he said, punching her playfully on the arm, \"Take it easy.\"\n\nHolding out her arms, she treated Beck to a long, breast-mashing hug. \"When will I see you again, Little Mermaid?\"\n\n\"Soon.\" Beck blinked. \"You promised to come on our boat, remember?\"\n\nThe very idea had just taken on a brand new meaning. \"How could I forget?\" Vicky smiled brightly.\n\nWatson held out his hand. \"Soon as we get back, we'll make up the bed in the saloon. It'll have your name on it.\" They shook.\n\n\"I'll buy her a mop and a bucket for Christmas.\" Tanya said.\n\nVicky turned and looked at her, her eyes full of tears. There was so much she wanted to say to her once draconian mistress- a thoughtless, dismissive, demeaning martinet, now a wellspring of caring and goodness. \"Ooops,\" she sniffled, \"bloody hay fever.\" She looked at her wrist. \"Well, gotta go, that conference ain't gonna settle itself.\" All eyes followed her to the chain-link fence, and the gate, with its pushbutton coded-lock. Pausing, she looked back at Watson and raised a fist to her ear, thumb and pinky extended. 'Phone me?' she mouthed.\n\nWhen she was through the gate, Tanya exhaled long and loud. \"Well this has been an interesting few days.\"\n\n\"Uh huh.\" Ally nodded, slinging an overnight bag over her shoulder, \"And I got a feeling, it's just gonna get interestinger and interestinger.\" She held out her hand. \"Captain Watson.\"\n\nWatson dipped his head, \"It's been an absolute pleasure.\" he said, and they shook.\n\n\"Yeah? Well, don't forget the haunting.\"\n\n\"Feel free, though I'm betting there won't be any need. SV Aurora, you can't miss her. Forward cabin. I'll leave a porthole open.\"\n\nBen looked at them, frowning. \"Am I missing something?\"\n\n\"Probably.\" Ally shrugged. \"You're a boy. Boys are dumb.\" Grabbing Beck in a headlock, she planted a big wet kiss on her forehead. \"If you're still fired up about flying in a couple of month's time, let me know and I'll send you some books.\"\n\n\"A couple of months? Why so long?\"\n\n\"Never know, it might just be a crush. Chicks set eyes on Benny the first time and all they wanna do is get into the cockpit, so to speak. Then they discover he's gay.\"\n\n\"It's true.\" Ben replied as Beck's heart crashed. \"Card-carrying lesbian and proud of it.\"\n\nTanya turned at the sound of a car engine nearby. \"Ride's here, you guys. Use what you need at the Nova, it's all paid for.\"\n\n\"Thanks again, Tan.\" Ben squeezed her arm.\n\n\"Oh, you don't have to thank me. This deal in Honkers is worth twenty U.S.\" She looked at Watson out of the corner of her eye, \"That's million, by the way. Just have a good flight, and don't forget your pleases and thankyous.\"\n\n\"We won't.\"\n\n\"And don't crash!\"\n\n\"Don't crash?\" Ally whined, \"Now you tell me.\"\n\n\"Scat, Cat! Go and get some shuteye or have a nice... relax.\"\n\n\"You're a slave-driver.\" Ally griped, and pecked her on the lips.\n\nBen shook Watson's hand. \"Laters, Damo.\" Taking Beck's hand, he kissed her on the cheek. \"Can't wait 'til you've got your licence so I have someone decent to fly with.\"\n\nTurning, they went, still ragging each other, and Watson shook his head. \"You sure know how to pick 'em, Tan.\"\n\n\"Frikken' awesome, aren't they?\" Tanya sighed, \"Definite keepers. But you know, right now, I need some post-traumatic sex. Come on. Let's go home and get back to normality.\"\n\n*\n\n \n"
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "fisting",
        "group sex",
        "incest taboo",
        "jailbait",
        "lesbian",
        "old man young girl",
        "orgy",
        "teen sex",
        "virgin"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-way-of-the-goddess-pt-07"
}