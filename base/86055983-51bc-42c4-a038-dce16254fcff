{
    "title": "Quaranteam Ch. 33",
    "pages": [
        "Chapter 33\n\nAndy sort of cocked his head to one side, as Emily started to break down the camera and the microphones. \"I'm almost afraid to ask what you mean by that, Jade,\" he said with a soft chuckle. \"What does 'something else in mind' mean here?\"\n\nJade blushed a little, looking away for just a moment before turning back to look at him. \"I've... I've been giving it a lot of thought, Andy,\" she said, pausing a bit in between the words, as if she was making sure she didn't chicken out of saying any of this. \"And I've been talking with Lauren some, and she's been an utter sweetheart about all of this, and she's made me realize something...\"\n\n\"Stop,\" Andy said. \"Before you go any further, I want you to make sure whatever it is you're about to ask for, it's what you want. Not what Lauren wants, or what someone else suggested. This is a once-in-a-lifetime experience, and I don't want you to regret any aspect of it.\"\n\n\"Oh. Oh! Oh, no! I wasn't...\" she said, giggling a bit. \"I wasn't going to suggest I wanted this to be my first time! No no no, not at all, Andy! Gosh! But, you remember I told you I wanted to record a video to send to my father, to show him that he couldn't control me any more, right?\"\n\n\"Oh,\" he said, understanding where this was going. \"Sure, and you've changed your mind and don't want to do that any more, no I get that.\"\n\n\"No!\" Jade said, shaking her head quite determined. \"I still super want to do that, but I realized, uh, I'm going to go a bit... no, a lot further than I think you're expecting me to. And I don't want it to come as any great shock to you when I do.\"\n\nAndy got a strange smile on his face, arching an eyebrow at her. \"I mean... I'm glad you're telling me in advance, because it might've come as a surprise to me, but let's be real here, do you think you're going to go further than anyone in this house has?\"\n\nJade's eyes widened a little bit, then nodded with a little impish smile. \"Kinda? I mean, I'm not going to do anything you haven't seen before, but I'm certainly gonna say some stuff that might shock you a bit.\"\n\n\"Like...?\"\n\nThe blonde woman sighed a little bit, folding her arms over her ample chest. \"So, in talking with Lauren a lot today, I realize that I've been so darn shy with boys because of my dad, because of all the stupid bull honk he told me over the years, because of all the expectations he put on me, and I need...\" She looked away again, trying to find the words she wanted to say before looking back at him with those gorgeous green eyes of hers. \"I need to make as much of a break from him as I can. I need to make him want to disown me, to get me out of his life, so he can't try and control me any more, can't try and control you because I'm with you.\"\n\n\"This is starting to sound serious,\" he said, as Emily tucked the camera into the bag, pushing it to one side. \"You don't need to do any editing with the footage from Tala?\"\n\nThe tiny Brit shook her head. \"Framed it clean and only recorded what we needed, so no need to do any post work,\" she said. \"Besides, I need to be here to help support Jade. What she's going to ask of you is... very brave.\"\n\n\"Very brave?\" Andy said, looking at Emily before looking back at Jade. \"What are you going to ask of me?\"\n\n\"I'm going to...\" she said, stopping then starting again. \"I'm going to ask you to be okay with whatever I say during the whole imprinting process, to not interrupt me, to let me get all of this out onto film, that I'm going to send to my dad, so that he knows I don't want him in my life, I don't need him in my life, and that he's not welcome in my life.\"\n\n\"He's still your father. Are you sure you want to kick him out for good?\"\n\nJade sighed a little bit, sitting down on the bed next to him. \"That's just it, Andy. You don't know him like I do. You don't know what I've been through growing up. How much he stressed that I had to be a prim and proper lady. Proper forks, curtsying to the right depth, never speak at a party unless spoken to first. That I couldn't have any fun because fun reflected poorly on the family's legacy. He scared off every boy I tried dating in high school and even well into college. He tried to keep me in some protective bubble, where I would be reliant on him for everything, so that I would do whatever he wanted me to. Did I tell you yet that he wanted me to have an arranged marriage?\"\n\n\"What? No! Really? In this day and age?\"\n\n\"It gets worse,\" Emily said, taking the camera bag to the door of the bedroom, handing it off to Nicolette, who was standing there. \"Take that downstairs and when Katie Couric's crew comes to pick it up, hand it off to them with our thanks.\"\n\n\"Yes ma'am,\" Nicolette said, taking the bag from her before heading down the hallway. Emily closed the door after she went, leaving Andy in the room with four conscious women -- Jade, Emily, Sheridan and Lauren -- and three unconscious women -- Tala, Fiona and Moira.\n\n\"Tell him who the person he wanted you to marry was, Jade,\" Emily said, annoyance plain on her face. \"He won't believe it.\"\n\n\"It won't mean anything to him,\" Jade said, \"but okay. My father wanted me to get married to Benjamin Watkins. He's--\"\n\n\"I know who the fuck he is, Jade.\" Suddenly, Andy was furious on Jade's behalf. \"You've got to be fucking shitting me,\" he said angrily. \"He's almost a decade younger than you, he's an asshole and he's a selfish little prick. How could your father possibly think that would be a good idea?\"\n\n\"Wait, how do you even know who Benjamin is?\" Jade said, looking at her hands nervously.\n\nAndy gave Jade the short version of the poker story, explaining how he had originally gone to protect some of Niko's friends, but had ended up winning even more people, and the last one, Deborah, had been claimed by Benny before she could be brought over to Andy, which was why Hannah had joined the family instead. Benny's awful behavior on his doorstep had left Andy with a very bitter impression of the boy too stupid to be called a young man.\n\n\"I mean,\" Andy said, \"I can't imagine Nathaniel, Benny's father, even going along with that. Had your dad talked about it with him?\"\n\n\"I think he wanted to convince me to go along with it first before talking with the Watkins family,\" she grumbled. \"But I never agreed to it, because I wasn't going to let my father tell me who I could or couldn't love, the jerk. And a couple of years ago, he stopped talking about that entirely, and I think I finally figured out why.\"\n\n\"So what do you need from me with all of this, Jade?\" he said to her.\n\nShe smiled warmly at him. \"See, that right there is how I know I made the right dang choice, Andy,\" she said. \"You're always just asking how you can help, what you can do to make other people happy first. It's never about what you want or need.\"\n\n\"I'm surrounded by a large number of beautiful women all competing for my time and affection,\" he said with a laugh. \"If I ever start complaining about that, people should start punching me in the kidneys.\"\n\n\"But yer still doin' a bangup job of makin' sure such a diverse buncha Sheilas get along with one another, Andy,\" Lauren said to him.\n\n\"It's the least I can do.\"\n\n\"Anyway,\" Jade said, \"what I need is for you to be okay with whatever I'm going to say in this video we're going to make. It's... it's not going to be what you expect from me, and honestly, it might be pushing your boundaries a little bit, but I need you to know that I'm okay with it, and just because it's stuff I'm saying in the video doesn't mean it's anything we have to actually do if you don't want to.\"\n\nHe reached over and brushed a hand across Jade's face tenderly. \"I mean, I only have a couple of complete hard passes in my repertoire, but nobody's come up against any of those yet.\"\n\n\"Anything I should know about?\"\n\n\"You don't want to peg, pee or poop on me, do you?\"\n\nJade giggled intensely, shaking her head. \"GOD no.\"\n\n\"Then it's probably fine.\"\n\n\"We'll see if you say that after you're done imprinting me,\" she grinned.\n\n\"You won't hear anything I say right after I'm done imprinting you,\" he chuckled\n\n\"How long does that last, anyway?\" Jade asked.\n\n\"Well, I expect Whitney woke up a couple of hours ago, and Tala will wake up tomorrow midday. Fi and Moira got it this morning, so technically they should wake up in the middle of the night, but because it'll be dark outside, they may just keep on sleeping until morning. You'll be out a little longer than Tala will. It'll screw up your sleep schedule for a few days, but before you know it, it'll be back to normal.\"\n\n\"I think we're pretty far from normal, Andy,\" Jade said with a nervous laugh.\n\n\"You know what I mean.\"\n\n\"Sure sure, I know what you mean.\" Behind her, Sheridan and Lauren helped moved Tala up, laying her down next to Moira and Fiona's sleeping bodies.\n\n\"Do you want us to leave her here tonight, Andy, or put her in her own bed?\" Sheridan asked him, as they made sure that the three women were close to each other without overlapping too much. Women in the imprinting process made almost no movements when they were out, so it was important to position them so they didn't have muscle cramps when they awoke.\n\n\"She said wanted to wake up in the main bed for her first morning after imprinting, so she can just stay here,\" he said. \"Jade? What about you?\"\n\n\"I'd like to do the same, if that's okay.\"\n\n\"Of course it's okay,\" he said, leaning in to give her a sweet kiss, his fingertips brushing against her face once more. \"I'm trying to get you to relax.\"\n\n\"I know. I know I know, and I appreciate it,\" she said with a shy smile. \"You're so gosh darn sweet. But you don't know how far I'm about to go down a path of depravity.\"\n\n\"You don't have --\"\n\n\"Andy,\" she said, resolve strong in her voice. \"I do have to do this, so just let me do it, okay?\"\n\n\"Sure, okay.\"\n\n\"Should we... are you ready to get started?\" she said, looking up at him.\n\n\"Are you sure you don't want me to go hop through a shower first? I'm still kinda sticky from my time spent with Tala.\"\n\n\"No no, that'll make this all the better,\" she said, moving to stand up. For her interview outfit, she'd chosen a long skirt that hung down past her knees, but wasn't quite long enough to be considered a dress, and a red silk blouse that hung loosely over her ample bosom. \"Emily, are you ready to start filming?\"\n\n\"You're sure you want me to capture everything, Jade?\" Emily said. \"I know we talked about this, but... everything? Nudity and everything? To your father?\"\n\nJade nodded, her gaze resolved. \"I need to do this, Em, so just film it all.\"\n\nEmily shrugged a little, grabbing Jade's phone from the nightstand next to the bed. \"If you say so, love.\"\n\n\"Andy, could you stand up?\" Jade said, as Emily moved over towards Jade, getting ready to capture what was about to happen on the iPhone.\n\nHe nodded, sliding up and off the bed, moving to stand, glad that someone had turned on the heat in the house earlier in the day so he wasn't cold, standing nude in the middle of his insanely large bedroom.\n\n\"Don't say much during this, okay, Andy?\" Jade asked him, imploringly. \"I mean, if I ask you a direct question, and it doesn't feel rhetorical, maybe answer, but err on the side of not saying anything. I need this to be all about me rather than you, no matter how much I'm going to talk about you during all of this.\"\n\n\"Okay, I'll try and be quiet as much as I can then.\"\n\n\"Great. Super. Thank you. Oh, if you hear me calling myself Button, it was his nickname for me growing up. So that's where that comes from. Anyway, let's get to it. Em?\" she said, looking over to Emily, who was framing all of Jade in the shot on the phone.\n\n\"Aaaaand... action!\" Emily said, just before she hit the record button.\n\nJade offered a brief, almost reticent smile, and it was gone as quickly as it appeared. \"Hi Daddy. Button here and this is going to be the last time I reach out to you.\" She started slowly unbuttoning her blouse, letting it fall open, to reveal an ornate black lacy bra on beneath. \"I know you wanted me to move back home until the whole plague passed, but that's not going to happen. I'm done living by your rules, not just regarding this, but everything.\"\n\nAndy actually felt a little bit nervous, not about being seen naked on camera, but for what Jade was going to say. She'd been purposefully vague with him, but he trusted her that she was only doing whatever she thought was necessary.\n\n\"You always wanted to keep your little Button under your thumb, didn't you Daddy?\" she said, sliding the blouse entirely off, tossing it aside. \"But a couple of years ago, around the five year anniversary of Mom's passing, the things you said to me changed and started getting creepy. You kept talking about how much I reminded you of Mom when she was my age, how much you missed her and how your needs weren't being met.\"\n\nOh, Andy thought to himself. OH. Oh shit.\n\n\"I tried to tell myself that you didn't mean it, that you didn't realize what you were saying, or how inappropriate it was to be talking about your own daughter that way, but the more I told myself that, the more you seemed to be doing it.\"\n\nShe unhooked the waist of her skirt and then let it drop to her ankles, stepping out of it before kicking off her boots, leaving her in the black bra and a matching set of black panties.\n\n\"But the more I thought about it, the more I realized you weren't looking at me thinking about Mom. You were looking at me thinking I could replace Mom, and that's fucking creepy, Dad.\"\n\nShe was fit, more fit than Andy had realized when she'd shown up in the cheerleader outfit yesterday, and her body was as toned and lithe as Sheridan's was, although maybe a little more muscular. She was an athlete, more like Piper, and she took great pride in showing her body to Andy, it seemed, or maybe showing off to her father, lashing out at him for his actions.\n\n\"You wanted me to move back into the mansion so you could get me imprinted to you, didn't you, you sick fuck? You wanted your own daughter bound to you by science, reliant on your cum to keep her alive? Do you know how disgusting that is? How much it horrifies me?\"\n\nShe unclasped her bra behind her back and pulled it forward and off, tossing it aside, exposing her breasts to both Andy and the camera, large proud swells that were just the perfect size for her body, as tanned as the rest of her, although her nipples were a bright rosy pink.\n\n\"But you've lusted after your own daughter, haven't you, you sicko? You thought your wealth would let you get away with the ultimate betrayal, to have a perversion that you should have never even thought about,\" she growled.\n\nAndy understood now why she'd been so angry when she'd talked to him earlier in the day. Jade had clearly been thinking about her father's actions in light of what she knew about the process now, and had put two and two together to get a pretty unpleasant four. And now she was making sure her father understood that he was dead to her.\n\n\"It bothers you, doesn't it, Daddy, hearing your precious little Button talking like some dirty whore? Swearing so fucking casually when you tried to drill it into her head that she should always be ladylike? Never act like some kind of cheap slut, never let a boy see or touch her special places.\"\n\nJade's face was one of rage now, as she grabbed her panties and shoved them down, stepping out of them, leaving her fully exposed. She had a large triangle shaped blonde bush, neatly trimmed but still of a decent size. She also had no tanlines of any kind, making it clear she tanned in the buff, her whole skin that golden shade, the perfect California girl.\n\n\"I hope seeing this video gives you a fucking heart attack, you asshole, because you're going to witness me guaranteeing that you can never fucking have me,\" she said, her hands on her hips, not making any effort to hide or conceal any of her gorgeous body.\n\nAndy hoped that the video did the trick, but if his time in New Eden had taught him anything, it was that the super rich were capable of nearly anything, and there were no other words to describe Jade's father, Cormack Dillon, quite so succinctly as \"super rich,\" and that meant the man stood every chance of continuing to be a problem.\n\n\"I took the DuoHalo immunity treatment yesterday, which means I'm going to get imprinted onto a man, to get the other half of it, and I know you know what that means,\" she said, sliding one hand over one of her breasts, cupping it, for both the camera's eye as well as Andy's. \"That means I'm going to be imprinted onto a man, a man who isn't you.\"\n\nJade's nipple stiffened to her touch, and Andy could hear Lauren and Sheridan moving a little behind him, making sure they were completely out of the path, but he also wondered if the two weren't starting to play with themselves at least a little, because Jade had gone from schoolmarm to raw sexual carnage faster than a Lambo went from 0 to 60.\n\n\"You know what that means?\" Jade said, a coy smile on her face as her tongue licked her lips. \"He's going to be my new Daddy, a better Daddy, a good Daddy, and he's gonna reap all the benefits that a good Daddy deserves.\"\n\nHer other hand moved to rub between her thighs, stroking across her pussy quite nervously, but her smile was practically eager.\n\n\"I laid awake so many nights, playing with my cunt, wondering what my life was going to be like when I finally gave my cherry to someone, your words ringing in my ears how I needed to choose carefully, to pick someone who would make the family proud over someone who made me feel all warm and wobbly.\"\n\nAndy could feel her slowly closing the distance between them, Emily doing her best to keep her framed in the shot the entire time.\n\n\"But that was what you wanted, and you're dead to me now. So I'm gonna give my cherry to my new Daddy, to a man that I chose to be with. And I'm not gonna be prim and proper about it, oh no,\" she purred. \"I'm gonna be every bit the slut you were afraid I would turn into and more.\"\n\nShe was only a few feet away from him when she slowly moved down onto her knees, keeping her head tipped up proudly.\n\n\"He wanted to wash his cock off before I sucked him off, but I told him no,\" Jade giggled, scooting on her knees closer to Andy now. \"I liked the idea of his dick being slick from the pussy of some other girl he'd just fucked when I blew him for the first time, so I'd get my first taste of pussy with Daddy's dick.\"\n\nShe reached forward and grabbed Andy's shaft, giving it a gentle stroke.\n\n\"See how much bigger my Daddy's dick is than yours, you senile old fucker? See how slick it is with the juices of some bitch he just met yesterday, another slut who's going to tend to his needs just like I'm going to? God, it smells so fucking good. Can I have a lick, Daddy? Just a little one?\"\n\nHer intense green eyes were looking up at him, so Andy just nodded in response, as Jade let out a thankful, eager moan.\n\n\"Oh thank you Daddy,\" she purred. \"I just can't wait to be a good little Daddy's girl.\"\n\nAndy was glad she'd had the talk with him before this, because she'd been right -- he might have been a little uncomfortable with this had she not given him some advance warning. But she seemed to be enjoying stroking his cock for the camera, and when she leaned in, he knew what was going to happen, even if she didn't, not entirely.\n\nShe'd intended to drag her tongue from the base of his cock to the tip, but only got about half way up before the mix of his semen and Tala's juices sunk into her bloodstream enough to begin the priming process, and she suddenly leaned her head back, looking straight up at the ceiling with completely defocused eyes, an intensely shredded moan erupting from her throat, that priming orgasm exploding through her body.",
        "Jade was back on her haunches, practically sitting on her heels, as her entire body shivered and quaked, the intensity of the orgasm a surprise even to Andy, who'd seen this thing happen more than anyone. The imprinting process had affected Jade stronger than anyone he'd previously paired with.\n\n\"Jesus Fucking Christ,\" Jade hissed, finally having recovered enough strength to pull her head forward again. \"That was the most intense fucking thing I've ever felt, Daddy. And I'm just getting started, because I have to thank Daddy for the gift he's giving me by taking me into his family.\"\n\nShe kissed along the length of his cock slowly, never once taking her eyes off of Andy's, Emily having moved in, standing on the bed behind him, so she could look down with the camera. He even felt one of Emily's hand on his shoulder, making sure she was balanced properly.\n\n\"I'm gonna be such a good little slut for you, Daddy,\" she whimpered. \"I can't wait to feel you inside my cherry cheerleader pussy, to be the first and only cock I ever have inside of my sweet snatch. God, you're gonna feel so good, aren't you, Daddy?\"\n\nAndy couldn't help but smirk for a moment, because he could feel Emily's nipples were rock hard through her top, pressed against his back while she continued to film. Clearly, the Brit was getting turned on by what she was watching.\n\n\"That's not all I'm gonna give you, Daddy,\" Jade said, licking the taste of him and Tala from her lips. \"I'm gonna give you everything. I'm gonna do everything. After an entire life of saying no no no, all I'm gonna tell my new Daddy is yes yes yes.\"\n\nShe was starting to cradle his balls now, and he felt like that was a warning that she was about to crank up the tempo on him.\n\n\"If Daddy wants to fuck me, I'll ask what position while I'm spreading my legs to show him I'm already wet for him. If Daddy wants me to blow him, I'll start sucking on his cock right away, no matter where we are or who's around. If he wants to knock me up, I'll beg him to breed me like his good little bitch in heat, even if we aren't married.\" She shivered a little bit, looking down for a second before gazing back up. \"If Daddy wants to fuck me in the ass, I'll hold my cheeks apart and beg him to do it to me hard and fast, just like a good little slut, just like his good little slut should.\"\n\nHe couldn't help himself, and his cock throbbed at that, not just from her description of it, but from the look in her eyes as she said it, like she was revealing some hidden desire that she hadn't known she wanted until she spoke the words aloud, and now that she had, it was burrowing hold in her psyche, not for now, but something definitely to be revisited lately. The look on her face was one of eagerness, like she was reveling in who she was after hiding it for so long.\n\n\"To keep boys from fucking me, I had to learn how to become not just a good cocksucker, but the best cocksucker, able to get a boy off within just a minute or two of wrapping my lips around his dick, but I don't want my new Daddy to feel like he's being rushed, so enjoy this Daddy.\"\n\nJade wrapped her lips around the head of his cock and slowly pushed her face down onto it, her lustrous green eyes holding his gaze the entire time, until she had her lips down around the base of his dick, no sign of coughing or choking, like she'd managed to suppress her gag reflex entirely.\n\nShe slowly drew her head back, sliding her mouth off his cock with a wet pop as she grinned up at the camera. \"You see that, Cormack? That's the view you always wanted of your daughter, isn't it, you twisted asshole? Down on her fucking knees with her tits out, looking up at you, her lips wrapped around your cock? But it's not your cock, is it shithead?\"\n\nAs she pushed her head back down onto his cock again, Andy did everything he could to keep his moan quiet, but a little bit of it slipped out, and that made Jade smile as she pulled back from his cock once more.\n\n\"Hear that, Cormack? That's my new Daddy, enjoying what a good little cocksucker he's got. I asked him to stay quiet, but I'm just too skilled at sucking dick that he can't keep still. So I hope you fuck off and die, because I'm gonna get what I want now, I'm gonna be happy without you, I'm gonna get bonded to this beautiful fucking stud of a man, and he's gonna be my Daddy forever, and you're just going to be dead to me, so the sooner you fuck off and die, the better. Goodbye forever Cormack.\"\n\nAfter she said that, she started thrusting her head down his dick over and over, going from tip to base time and time again, making as much noise as she could, as much performance as it was blowjob, but damn if she wasn't right, and it was the best blowjob he'd ever gotten.\n\nJade had total control over when his orgasm was going to hit, and just when he thought he was about to pop, she backed him away from it, just to prove that she could, then when he thought she was slowing down to prolong the video, she attacked once more, and started bobbing her head across his shaft faster and faster, and there was no stopping the collision course they were headed on.\n\nHe wanted to put his hands on her head, but Emily seemed to have the shot framed exactly as she wanted, and Jade was doing her best to keep her eyes on his face and the camera the entire time, and when the moment of his release happened, he wasn't even sure where she was looking, because the intensity of the orgasm was brutal, easily the hardest he'd ever come from a blowjob.\n\nHis cock blasted a hot load of cum against the back of her throat, as her lips sealed in a vacuum lock around the head of his dick, sealing him in there, not letting a drop of it spill out, all of it pouring directly into her belly, as her green eyes finally rolled back in her skull. Her mouth finally popped off his cock as she started to fall backwards, and Lauren darted in suddenly to slide her arms beneath Jade's shoulders, catching her and cradling her to lower her down onto her back, pulling her away slightly to let her legs unfold from beneath her, as Emily moved off the bed, jumping to the floor, slowly crouching down to finish on Jade's face, as the bubbly blonde proudly said 'imprinting' over and over again, an accomplished smile wide on her face.\n\nEmily tapped the Stop Recording button on the phone, and then exhaled a deep breath. \"Holy fuck!\" she shouted, taking one of her hands to fan her face. \"I know she said to expect it to be out of character for her, but can I once again reiterate, holy fuck!\" She giggled wildly, licking her lips. \"I can't tell if I should send her father this video first or do my best to convince you that you can handle another round right here and now, Andrew, because, in closing, holy fuck was that hot!\"\n\nAndy laughed a little bit, shaking his head. \"No more. No more rounds for today. The House of Rook is officially doing no more deliveries tonight!\" He crouched down and scooped Jade up into his arms -- she was light, although Emily and Lauren helped him anyway -- as he lifted her up and onto the bed, laying her down next to Tala.\n\nOnce there, he moved the four of them -- Jade, Tala, Fiona and Moira -- over to one side of the bed, not pushing them off, but making sure there would still be room for his usual group of people to crawl into the bed as well in a few hours time.\n\n\"Well, at the very least, I can take care of you in the shower before you make your run to Target tonight,\" Emily said to him.\n\n\"God, can't it wait until tomorrow?\" he groaned, before raising his hand. \"No no, I know, we need to do it, and I agreed to do it tonight. Okay, let's go shower, and then a handful of us can make the run out and pick up supplies.\"\n\nAfter a very nice shower with Emily and Sheridan, where both girls steadfastly avoided getting their hair wet, Andy felt cleaned up and ready to round out his day. He hadn't even had dinner yet, but he decided that could wait until after the Target run.\n\nOne of the things he'd learned early on, before they'd even gotten to New Eden even, was that women who lived together didn't really sync their periods up, but with a typical period lasting about five days, the more women in a household, the more likely it was someone needed additional feminine supplies. With the size of household now, he'd learned they were the most vital supply the household needed, and never, ever ever to be without.\n\nWhenever he went on a supply run, the girls drew names from a hat to decide who would go with him, because inevitably whoever went found a handful of things they just had to have and brought them home, and going to a Target with his entire family was beyond unwieldy. So as Andy checked his shopping list, the girls did their little drawing. Hannah, Aisling and Sarah won, and so the four loaded up into the Tesla Model Y and headed down to the Target.\n\nThere were many things he was appreciative of about the home in New Eden that the government had gifted him with, but the one he noticed the most was its completely self-reliance. The entire roof of the mansion was covered in solar panels, and Andy had been told there was a small field of them further out on his property, in the middle of a natural glade, that ran back to his house, which had power walls, storing all of that excess power. The cars were all electric. Phil had joked around that if New Eden were hit by the worst possible of storms, the town would be self sustaining for a few months before food would be the eventual first issue.\n\nTarget was one of the few well-established brand stores within the walls of New Eden, but it was handy enough that everyone seemed to overlook it not being a local business. There were a handful of cars in the parking lot, but it looked far from crowded. Andy parked the car and then headed in, as Hannah grabbed them a shopping cart. Andy hoped they'd only need the one, but at least half of the time, these trips involved getting a second cart.\n\nMost of his list was relatively short -- cat food, cat litter, cleaning fluid for his electric shaver, vanilla Coke if he could find it -- but the girls had their own list, and it was compiled from all the girls in the house. They mostly didn't have to do groceries -- Jenny and Katie made their own weekly run to the grocery store to keep the house stocked -- but everyone had little things they wanted for themselves.\n\nNicolette had toilet paper delivered in bulk and was trying to convince the household to bulk order feminine supplies as well, but it seemed like each of the women in the house had their own deeply held preferences. Andy suspected Nicolette would win out in the end, and that bulk deliveries in the near future would start including things like pads and tampons (as well as diapers and other such baby supplies) eventually.\n\nFor now, though, everyone was still eager to get out of the house every chance they could, the fatigue of being quarantined to a single space, even one as wonderful as the Rook Manor, getting to each of them a little bit.\n\n\"Okay girls, let's split up and cover ground a bit,\" Ash said to the other two, \"and we can meet up with Andy back in the pet supplies.\"\n\nSarah, Hannah and Aisling each put a hand on top of one of the others and then said in unison \"Go Rookies!\" And like that, they each went their own separate direction into the large Super Target, as Andy headed over to pick up his electric razor cleaning fluid.\n\nSince their arrival, both Sarah and Emily had been trying to convince Andy to move to disposable razor blades, or even a straight razor, for shaving, but Andy had been using an electric since college and found the convenience of it too great to give up. Jenny had assured the two actresses that once Alexis showed up, Andy would learn the joy of having his face shaven by a woman with a straight razor, and once he did, he'd never want to go back. But even when she showed up tomorrow, she'd need to convince him it was the right call, so until then, he would stick to his old ways.\n\nBefore he could make his way out of the razor section, Sarah came bounding around the corner, a package full of pads in one hand, a handful of make up supplies in the other, tossing all of them into the cart. \"Hey, like, did you know Nate Watkins was gonna be here tonight? I saw him and one of his partners coming in as I was heading here,\" she said, leaning in to kiss his cheek.\n\n\"I didn't,\" Andy said, \"but it's not that big a community, so people are bound to run into one another here.\"\n\n\"Did Phil tell you how many households are here in New Eden?\" she said, sliding her arm around his waist, her body taller than his, something he still hadn't fully gotten used to.\n\n\"I asked him, and I think he said about 400, although it's pretty scattered out, and some of the households are way bigger than others. We're definitely one of the bigger ones, although there's pressure on everyone to grow a bit, considering the news that'll be hitting in a couple of days.\"\n\nThe two of them headed over to the soft drinks, and Andy was delighted to find that not only did they have vanilla Coke, they also had vanilla cherry Coke and orange vanilla Coke, so he grabbed a twelve pack of each, sliding them on the flat tray beneath the main cart itself, knowing to leave as much of the basket open for the girls as he could.\n\n\"I imagine that poor Lily's going to go mental when she hears she's going to have to share poor Eric with even more girls,\" Ash said, tossing her collection of things into the basket. She'd come from behind Sarah and Andy, so neither had seen her coming. \"But she'll just have to cope like the rest of us have.\"\n\n\"She'll be extra picky on Eric's behalf,\" Andy said with a quiet smirk. \"He won't want to kick up a fuss about who they send, so she'll take over the whole process and make sure nobody rocks the boat over there.\"\n\n\"I meant to ask,\" Sarah said. \"How come Eric's got a Chinese last name when he's Japanese?\"\n\n\"Well, he's actually half and half,\" Andy said, \"but he prefers to think of himself as Japanese first and foremost, I guess, so that's how I've always thought of him. His Dad's Chinese but his mom is Japanese. They met after they'd both immigrated here in the 70s to work for tech companies. It's kind of a cute love story. They met in a class to learn English as a second language, so his dad never learned any Japanese and his mom never learned any Mandarin or Cantonese, and they only ever spoke English to each other in the house. They're both very nice people. Eric sort of speaks all three languages, but none of them that well. His Japanese is better than his Cantonese, though, or so he tells me.\"\n\n\"That's funny,\" Ash said. \"Lily's story is pretty much the same, half Chinese half Japanese. I guess their kids will keep the same ratio then.\"\n\n\"Once they get around to them,\" Andy said.\n\n\"You heard Lily, love,\" Ash giggled. \"She's gonna get a child out of Eric even if it kills him. Her clock isn't just ticking, it's pounding out a drum beat.\"\n\n\"No no, that's just Lily taking him Amazon style,\" Andy said, and both Sarah and Ash descended into fits of laughter at that, as he smirked and pushed the cart onward.\n\nThey kept walking as Sarah and Ash each picked up a few things here and there -- scented candles, Fabreeze, some picture frames -- as they headed towards the pet section. \"Don't freak out, Andy,\" Sarah said, \"but I'm going to be grabbing some dog food for Maya's two pups.\"\n\nAndy arched an eyebrow. \"Not once did you or Emily ever mention that Maya had dogs,\" he said, trying to put on his most disappointed look. \"Don't you think that's something you should've mentioned, what with me having a couple of cats?\"\n\n\"That's fair, completely fair, but hear me out, just for a moment, on a counter argument,\" Sarah said, talking slowly, as if she was struggling to think of what she wanted to say.\n\n\"Ok...\"\n\nSarah glanced over at Ash, who offered a sympathetic shrug, then back at Andy, and suddenly she grabbed him and kissed him hard, wrapping her arms around him in a constrictive hug before she pulled from the kiss and clenched him more tightly. \"Okay, so we totally didn't mention it, and that's totally on Ems and me, but they're just two little Pomeranians, and they're super cute, and they're named Stan and Ollie, and I know we should've told you, but we asked Ash, and she said you're not allergic, and she didn't think you'd be upset, and I don't know why we didn't mention it during the presentations, but we didn't, and then you said yes, and we were both just so excited, and at that point, you were into the idea, and it didn't even occur to us that you might not like dogs, because I mean who doesn't love dogs, am I right, and I wasn't even thinking about it because Ems said she was gonna tell you but then she put dog food on the list for me to grab and now here I am, trying to convince you that it would be criminal to turn those two sweet little adorable faces away or hide them out back or anything when they're super well trained and lovable and--\" She suddenly pulled back, glanced over at Ash, who was desperately trying to keep from breaking out into laughter, then back at Andy, sighing. \"And you totally knew the dogs were coming and were fucking with me, weren't you?\"\n\nAt that point, Andy could finally let out the laughter that had been building and building and building inside of him as Sarah had just kept talking and talking and talking and some part of him had wanted to let her off the hook right away, but it had just so much funnier with every word. Ash was leaning against the cart, she was laughing so hard, once she finally broke.\n\nAndy squeezed Sarah tightly then pulled back and kissed her softly. \"Of course the dogs are okay, Sarah,\" he said. \"But you two definitely should have told me during the pitch, just in case I was allergic to dogs, which I'm not. But Emily brought it up to me yesterday, and I gave her a bit of stick for it, and she suggested this was how I gave you stick for your part in the matter.\"\n\n\"Ems knew you were gonna put me up to this?\" Sarah said, tilting her head to look upward. \"Oh, the shit I'm gonna give that bitch when I see her...\"\n\nAndy swatted his hand on Sarah's ass with a loud slap, which made her jolt a little bit into him. \"Now now, I said the matter's closed, and the matter's closed, got it?\"\n\n\"You're fucking lucky you're so damn lovable yourself, mister man,\" she joked, rolling her eyes. \"But okay, I guess we earned that.\"\n\n\"Oh, Ker-rist I wish I'd recorded that,\" Ash said, finally easing off of her laughing. \"I don't know how she let that sentence run that far, but I think it could have sprinted past Piper!\"\n\nAs they arrived in the pet section, Hannah came to meet up with them, Nathaniel and his female partner in tow. She saw that Ash was wiping tears from her eyes still and pouted. \"Aw, I missed the whole dog food fake fight, didn't I?\" she said. \"Oh well, look who I ran into!\"\n\nIt didn't surprise Andy that Hannah had stopped to talk to Nathaniel Watkins and his partner, as Watkins had been the man to bring Hannah over to him originally, which meant he'd know the Asian cheerleader longer than he had.\n\nWatkins was dressed, as ever, in cargo shorts, a bright Hawaiian shirt, socks and sandals, his black hair drawn back into a man bun, a pair of thin spectacles over his eyes. The woman next to him looked five to ten years younger than him, in probably her early-to-mid thirties, with eastern European features, jet black hair in bangs that hung down to her collarbone, dressed in a large loose t-shirt that said \"Cal Poly\" on the front of it, and baggy sweatpants. It was clear, both had just decided to run errands in whatever they'd been lounging around the house in, although Watkins himself hadn't looked all that different at the poker night, or either of the times he'd come over to Andy's house, so Andy couldn't help but wonder if that was the man's standard look.",
        "\"Hey there Andrew,\" Nathaniel said. \"I don't believe you've met my first partner, my wife Eliza, Benny's mother.\"\n\n\"Ah, the infamous Mr. Rook,\" Eliza said, taking his hand and shaking it as it was offered to her. \"I've been hearing a great many things about you, mostly good.\"\n\n\"Well then, I'm sure they can't all be true,\" Andy said with a laugh. \"I know you both know Hannah, but this is my partner and fiance Aisling, and this is another of my partners and also another of my fiances, Sarah Washington, whom you may have seen in movies.\"\n\n\"The Ballerina Badass herself!\" Eliza said, just the tiniest hint of an accent lingering in her voice. Polish, Andy thought, but he wasn't certain. \"Julia, my eldest daughter, she and I went to see each and every one of those in the theaters together. They were smashing! And it is a pleasure to meet you as well Aisling Blake. Nathaniel tells me you're the real brains behind the Rook household.\"\n\n\"He's not wrong,\" Andy said, grinning at the smaller of the two redheads with him.\n\n\"He's not entirely wrong,\" Ash correctly, \"because Andy's no slouch himself.\"\n\nHannah tossed all her things into the cart, as Sarah glanced at Andy's list, moving to grab cat litter, cat food and dog food, to give him a moment to talk with Watkins.\n\n\"It's actually a good thing I ran into you, Nathaniel,\" Andy said. \"Look, it's important I tell you about this -- Katie Couric found out about Covington's little poker game.\" He wasn't sure Nathaniel's wife Eliza knew about Nathaniel's involvement with the game, but felt like it was important to get it out ahead of it.\n\n\"Such a dreadful man,\" Eliza said, annoyance in her voice. \"I gave Nathaniel permission to request people we didn't like when he knew a poker game was coming, to use as stakes so he could try and pull people away from those horrible gangster friends that Covington keeps company with.\"\n\n\"How the hell did she find out about the game?\" Nathaniel asked him.\n\n\"Here's the thing -- apparently Rachel DeMarco, one of Covington's partners, told Katie Couric about it, tried to spin it as though I was the one organizing the game, but she did a pretty piss poor job convincing Ms. Couric about that, because it was clear after a few minutes of talking to me that I'd only gone the once, and even that I'd basically done under protest, to try and keep Niko's friends safe. She was suggesting going after my friend Phil for responsibility, but I made it clear in no uncertain terms what I'd do if she pursued that false narrative.\"\n\n\"There's the fighting man I knew lay beneath,\" Watkins said with a chuckle. \"You think Covington told Rachel to leak it?\"\n\n\"That was my first thought as well, but now I'm not so sure,\" Andy said. \"Why would Covington want the game's existence out in the open, even if he could somehow convince people it was my idea? Doesn't that feel like a gross over correction to you?\"\n\n\"I'll tell you what it doesn't feel like to me,\" Watkins said. \"It doesn't feel like the kind of move Covington would make. It's short sighted and sloppy, where a dozen things could go wrong. Do you think Rachel did this on her own initiative?\"\n\n\"That doesn't feel like it makes any sense to me either, because it's going to get back to Covington that she was the one who leaked it out, isn't it?\"\n\n\"So what's Ms. Couric going to do with this story?\"\n\n\"She's agreed to just relay it to the office of the President, so they can act on it, and otherwise, she's going to do nothing with it,\" Andy told him. \"The improved scrutiny on the pairing system is more important than a brief blip of news time, what with all the other shit going on right now. That isn't to say she's not going to revisit it if things don't get changed, but for the time being, I think it's not going to be public exposure, but there's definitely going to be some heat coming down the pipeline for most of the people who were at Covington's game.\"\n\n\"I take it you found some way to keep yourself free of blame?\" Nathaniel asked.\n\n\"Well, in giving her an honest and almost complete recollection of the card game, I think I bought myself some goodwill in the matter. And because you've been so kind to me, I conveniently forgot your name when listing off the players.\"\n\nNathaniel smiled kindly at him. \"You didn't have to do that, Andrew, but I certainly appreciate it. I don't think either of us were going to be very welcome if Covington decided to hold another game any time soon.\"\n\n\"Keep in mind, though, that she's a smart reporter, and that if she decides to do any serious investigation, she'll be able to put two and two together and connect the dots that you were the other player at the game.\"\n\n\"Something would give me away?\"\n\n\"More like someone,\" Andy said. \"I told her about how Erin had showed up and I'd turned her away but paired her up with another kind gentleman. Speaking of which, how's she doing over there?\"\n\n\"Oh, she puts up a bit of a fuss when she's not being primped and waited upon,\" Eliza said, \"but she's not really that much worse than any other socialite, and I have almost two decades experience in dealing with those. So as long as she doesn't get too big for her britches, we'll get along fine.\"\n\n\"Pretty good in the sack,\" Nathaniel said before his wife jabbed him in the side with an elbow, which made him laugh a little. \"I was simply saying.\"\n\n\"I know what you were saying, dearest Nate, but you've both experienced the woman's charms in bed, and you don't need to discuss opinions on the matter,\" Eliza scolded. \"It's uncouth.\"\n\n\"What were you doing talking to Katie Couric anyway, Andrew?\" Nathaniel asked him.\n\n\"It was for part of a special that'll be airing next week after the President's speech.\"\n\n\"Ah,\" Watkins said, sighing a little. \"Finally owning up to how many people we've lost, is she?\"\n\n\"I guess,\" Andy said, \"but it's also going to be about setting expectations of 'the new normal' moving forward in this country. What we're going through is entirely unprecedented. Speaking of which, you may want to look into having some personal security. I have some arriving tomorrow, and as much as I wish it wasn't necessary, shit's starting to get scary even within the walls of New Eden.\"\n\n\"Oh, we have security, Andrew,\" Eliza said with a soft smile. \"You just didn't notice Eve down at one end of the aisle or Octavia down at the other, because they're very good at being discrete.\"\n\nAndy looked past the Watkins for a moment, and saw a rather fit looking woman in a black velvet tracksuit down at the end of the aisle. When she caught Andy looking at her, she offered a tiny smile and a polite salute before continuing her watch.\n\n\"I'll be damned. They're good.\"\n\n\"But good on you for getting some security, Andrew,\" Nathaniel said. \"It's like insurance -- better to have it and not need it than to need it and not have it. Also, I must ask -- have you heard from Gregor lately?\"\n\n\"Vikovic?\" Andy said, a little surprised to hear the name. \"No, but we barely know each other, so I would've been more surprised if I had. Why, should I have?\"\n\n\"I don't think so, but the strangest thing happened a couple of days ago. Gregor and I were supposed to meet up for lunch and his first wife, Katerina, called to cancel, saying he was feeling a bit under the weather and wouldn't be able to make it.\"\n\n\"What's so odd about that?\" Andy asked.\n\n\"He's had to cancel before, but he always calls himself,\" Nathaniel said. \"Something about Katerina's tone struck me as odd. I simply couldn't deduce why.\"\n\n\"Nothing I know anything about, I'm afraid.\"\n\n\"I didn't suspect that you would've,\" Nathaniel sighed, \"but figured it did not hurt to ask.\"\n\n\"Okay, well, it's been good talking to you, but we should be heading back to the house. Let me know if you hear anything else on the grapevine about what Covington's up to.\"\n\n\"You as well, Andrew,\" Nathaniel said, shaking his hand. \"Pleasure meeting you ladies.\"\n\n\"Very nice meeting all of you,\" Eliza said. \"Please, don't be strangers. Sane people are a rare commodity here in New Eden.\"\n\nThey headed off down the aisle, and Andy could see their security woman move ahead of them several steps, checking to make sure everything was fine. Hannah leaned up and kissed him on the cheek. \"I'm glad you're on good terms with the Watkins,\" she said. \"Benny's a tool, but Nate and Eliza were always real nice to me.\"\n\n\"Oh shit,\" Andy grumbled. \"I forgot to ask him if he knew about what Jade's father was trying to set up a few years back. Eh, it's probably not that important anyway. We should pay and head back to the house.\"\n\n\"Tomorrow should be a fun one,\" Ash said. \"You've got Lexi and Maya showing up, in addition to getting to talk to Fiona again face to face for the first time in over a decade.\"\n\n\"Note to self,\" he mumbled in amusement. \"Breakfast is occasionally an acceptable time to start drinking.\"\n\n\"After that, though,\" Sarah said, \"does it quiet down for a bit?\"\n\n\"It quiets down for exactly four days,\" Andy said. \"And then on November 20<sup>th</sup>, once the President makes her speech, shit officially goes off the deep end.\""
    ],
    "authorname": "CorruptingPower",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-33"
}