{
    "title": "Divination and Manipulation Pt. 02",
    "pages": [
        "This is the highly delayed and much anticipated sequel to my original story \"Divination and Manipulation\". I recommend you start there to learn more about how exactly Sam and Jenn got here. I hope you enjoy!\n\n=============================================\n\nI awoke the next morning, groggy and alone. I sat up slowly, wincing at what felt like a rock rolling around in my skull. How much had we drank last night? I slowly stood and walked to the bathroom, not bothering to turn on the light. I stood in front of the toilet, raised the lid, and reached down - where to my horror my hand grasped nothing but air.\n\nPanicking I jumped to the vanity and threw on the lights, inspecting the area where I was quite certain my penis should have been. A moment later I breathed a sigh of relief, remembering the events of the previous night as I grasped my now tiny member. Looking up at the mirror I realized I was quite a sight with my nearly smooth crotch and b-cup breasts, while my figure was quite certainly male with straight sides and nearly no hips.\n\nI ran my hands over myself, feeling my changed body when I realized something else - I had no body hair. I quickly reached down and felt my legs to confirm that it was indeed all gone.\n\n\"JENN!!\" I yelled, surprising myself with the shrill yell. I had forgotten that she had given me a female voice. I heard her walk down the hall before she poked her head in.\n\n\"Yes dear? How are you feeling?\"\n\n\"Well I feel okay but I'm hairless!\" I cried as I hugged myself, suddenly feeling cold. Jenn's eyes just went wide and her hand covered her mouth.\n\n\"You didn't use my body wash last night, did you?\"\n\n\"Oh, uh yea I think I did. I was pretty messy you know...\"\n\n\"Oh honey! I get that from a really great mage at the market! You can't find better body wash, but uh, that's the women's formula and it removes body hair...\"\n\nI just stared in the mirror while running my hands over myself. Being hairless actually felt pretty good - no wonder everything felt so smooth last night! Then Jenn put her arms around me and kissed the back of my neck. I could hear her breathe in deeply. \n\n\"Well at least you still smell good sweetie, now, come before breakfast gets cold!\" she replied before hurrying off down the hall towards the kitchen. I nodded and finished up in the bathroom - choosing to sit instead of stand - before grabbing one of Jenn's robes that was hanging from a hook in the bathroom. It was a light green silky affair that didn't go down much farther than my bum and felt incredible with my newly sensitive skin.\n\nWalking into the kitchen I was greeted by the intoxicating aroma of breakfast as Jenn handed me a plate with a slice of toast, an egg, and a couple slices of bacon. She obviously seemed to think that I needed protein after the events of the previous night and I was not inclined to disagree. With not much more than a furtive glance at me in her robe Jenn sat down next to me at the table and we dug in, not saying much.\n\nI ate slowly, savoring not just the breakfast, but all the sensations that my slightly modified body was giving me: the feeling of the two breasts on my chest, the lack of a bulge in my crotch, and the luxurious feeling of the silk rubbing over my hairless skin. Between that and breakfast I barely noticed that Jenn had stood up and was offering me the last strip of bacon. I snapped back to reality and accepted it gratefully, chewing slowly as I realized something.\n\n\"Jenn, beyond being a kink mage you never actually told me what you do\" I started. \"I mean, what professions can a kink mage do?\"\n\nJenn finished her bite of toast before answering. \"Well, for kink mages it really depends on your affinities and how strong you are. I work in a healer's office as a minor physiomancer. My powers of divination are my strongest, but they are largely attuned to sexual divination, so I'm not very good at seeing problems inside your body. Fortunately, I'm fairly strong at manipulation for a kink mage so I'm able to do some body work.\"\n\nI thought a moment about her job and breathed a small sigh of relief. I didn't really know what kink mages did for day jobs, but if it was in line with their craft... I shook my head - it didn't matter now. Her working as a healer made complete sense, especially with how well and easily she had manipulated my body last night.\n\n\"So you heal people then?\"\n\n\"Yea. Mainly aches and pains, but I can do some surface wounds and triaging. Internal injuries are best left to a proper physiomancer though\" she replied.\n\n\"Do you like it?\" I asked. \"I mean, it must suck to not use your full talents at work.\"\n\nShe was silent for a moment as she thought about the question. \"I guess I don't mind it. I really like being able to help people. But...\" she trailed off.\n\nI sat, waiting. Wondering what her 'but' was. I was going to ask her to continue but I sensed that she wanted to finish the thought.\n\n\"But... I think one day I'd really like to save up and open a sexual practice\" she said. Looking up at me she must have seen my wide eyes as my mind immediately made some strong assumptions. \"Sam! Not that, I meant a sexual health practice. Like, I'd love to be able to help people understand themselves sexually. I've met so many people that are repressing themselves and what they want and I don't think that's good for you, you know, mentally.\"\n\nI nodded as she talked. It seemed to make sense.\n\n\"I mean, the fact of the matter is that our society has alot of misconceptions about sex. Maybe it's just that I'm a kink mage, but I really don't like that! Like, people deny who they are not just to the people around them but to themselves Sam! I just can't believe it. It's not healthy.\"\n\nI nodded again, wondering if her rant were in part for my benefit as she continued.\n\n\"I would just like to help people get in touch with their subconscious desires and help realize that and make them happier. And you wouldn't believe how many couples I've met that have no idea that they share some kind of kink but are both too nervous to talk about it so they never do it! If I could help those people be happier, well, I think that I'd be alot happier too.\n\n\"Plus, you seem to be enjoying getting in touch with your feminine side\" she said, emphasizing the word 'touch'. I realized then that while she was talking my hands had been subconsciously running over my body and were currently busy feeling around my breasts. I felt myself blush and stared down at my knees, embarrassed at being caught.\n\nJenn got up from her chair and knelt down in front of me, enveloping my hands in hers.\n\n\"Sammy\" she began, \"you should know better by now than to be embarrassed about wanting to know how the other half experience things. We had so much fun last night!\"\n\nI nodded. Last night had been amazing.\n\n\"But Sam, I totally understand if you want me to change you back. I'll do that for you if you want.\"\n\nI looked into her eyes. At that moment I realized that Jenn was kneeling and wearing nothing but a slightly large t-shirt under which I could see quite easily that there was no underwear. A wave of confusion washed over me before I realized that I had been expecting myself to get hard, except that Jenn had made it so I couldn't.\n\n\"That's the thing\" I started, \"I don't know what I want. On one hand I want to be a guy again because you look so good and I'd love to do something about it... But on the other hand... this feels really good.\"\n\nJenn nodded and thought for a moment, before reaching and grabbing me by my hips. I felt them grow warm then my skin started to tingle. Surprised, I looked down and saw my body adjusting into a new shape. But it wasn't just my hips and sides. Everything down to my toes was readjusting and rounding out. A couple moments later Jenn pulled back, a faint line of sweat barely visible on her brow from the magic she had just wrought. \n\n\"Go to the mirror\" she instructed, slightly short of breath.\n\nI complied, standing up to go in front of the mirror by the door. What I saw took my breath away. I looked like a female version of myself. Jenn had softened out all of my features and given my entire body a distinctly feminine shape, with a thin waist and wide hips. My face was rounded out, and I realized that I was now quite cute with a sprinkling of freckles and a reddish tint to my hair. She also seemed to have no qualms with keeping my manhood unobtrusively tiny while enlarging my breasts slightly to what must have been C-cup. I turned to the side slightly and admired the curvature of my body and my now shapely feminine bum. I giggled, which only served to remind me that my voice was still female.\n\n\"I'm so cute!\" I said, amazed that I would ever describe myself as such.\n\n\"Of course sweetie, everyone loves a cute girl\" Jenn said as she stood up and came over to me, stopping at the little hutch that stood innocuously outside the kitchen to grab something. \"Now, put this in your mouth\" she said, placing something small and blue in my hand.\n\nI held my palm up and inspected what appeared to be a necklace with a small blue stone on it. It felt warm to the touch and as I turned it over the white veins within it seemed to pulse. Curious, I acquiesced and placed the stone in my mouth.\n\n\"Close your eyes\" Jenn instructed. I did as I was told and Jenn immediately started humming. At first I was weirded out that she was being so strange, but then her voice shifted and she started humming two notes at a time. The sound was mesmerizing and my preconceptions faded away. Then a third note emerged from her throat, all at the same time as the first two. I almost opened my eyes in amazement, but then realized I couldn't. It was then that I became certain that Jenn was working some kind of magic on me.\n\nBut what could she be doing? She had already said that she couldn't turn me into a full girl, but short of my still very real penis I was all the way there. What more could she do?\n\nMy musing were interrupted as her humming changed and a pulsing rhythm emerged, but from where I wasn't sure. I became enthralled in what was happening as my skin seemed to become electric. It was as if I had complete awareness and attention to every single part of my body - my consciousness spread entirely over my being. I was just as aware of my slightly fuller lips as I was my smooth and rounded toes. It was blissful.\n\nAnd then it was over.\n\nI opened my eyes and looked in the mirror. I looked no different than I had before I closed them. Turning, I looked inquisitively at Jenn who had slumped into a chair, looking tired from all the magic she had used this morning.\n\n\"That...\" she started, before taking a deep breath as she tried to control her exhaustion, \"is a body stone. Whenever you wear it, this will become your body. When you take it off, you become normal again.\" she stated, matter-of-factly.\n\nCurious, I deposited the stone on the small table next to the mirror and watched in awe as my body smoothly shifted to my male self, fully equipped with my regularly sized penis. I picked the stone back up and my body morphed into the cute girl (well, almost). Approvingly, I put the necklace on and attached the clasp behind my neck.\n\n\"That's amazing Jenn!\" I said, excitedly. \"Thank you so much!\"\n\nI turned to her and she smiled, then spread her legs and revealed herself to me. \"If you really mean that, get on your knees and thank me properly.\"\n\nI did as I was told, well, almost. I sauntered up beside her and leaned down to kiss her, my right hand brushing through her hair and my left hand slowly exploring her body. She felt amazing. I felt amazing. Her breath was hot and her lips soft. I could feel the layers of fatigue from working what must have been strong magic on me, but underneath that I could sense a deep, infectious arousal.\n\nOur kissing intensified and I felt my body react to this in new ways. My female nipples hardened and enlarged just as Jenn's did underneath my exploring fingers while a hot yearning sensation grew in my crotch. I couldn't get erect while wearing my body stone but that didn't stop me from feeling a strong sense of desire.\n\nAfter a few minutes Jenn grew tired of me exploring her body and reached up to my head, slowly pushing me down to her wet sex. The message was obvious and I did as I was told. I spread her lips and slowly started exploring with my tongue, working slow concentric circles around her clit. Before long she slouched down lower while soft moans emanated from her mouth. I looked up briefly, careful to not stop with my tongue, and saw her eyes closed and her mouth just slightly open as her hands played with her nipples.\n\nStill careful to not stop with my tongue I reached up and swatted her hand away from her right nipple, placing my hand there instead. Her moaning increased in volume and soon I felt her start to squirm and push herself against my eager tongue. A moment later and she was cumming, squeezing my head between her legs as I ate her out.\n\nShe came for what felt like a couple minutes then pushed my head away, but I was ready with my hand and slowly pushed into her with my index finger. It seemed to take her by surprise as she breathed in suddenly, but her hand didn't push me away. I continued to push in, feeling her tightness after having just cum. I backed out a couple times, teasing her, then finally pushed all the way in. She moaned and spread her legs a little wider.\n\nI explored with my finger for a moment before I found it - her g-spot. I could barely reach it, but I knew I was in the right place when I rubbed it and a moan escaped from her lips. I repeated the motion, each time her body moved a little with my finger. This time she didn't play with herself - she didn't need to. She was stuck riding the waves of pleasure my finger was creating, her body rocking in the chair. Every time I pushed harder and faster her body responded in turn until suddenly her legs went rigid and gripped my hand fiercely between them as she came. I continued pulsing my finger for a few moments as she rode through the orgasm, then slowly stopped.\n\nWe both sat there breathing hard for a minute or two before she finally released her iron grip on my hand and opened her eyes. Looking down at me, she smiled.\n\n\"That was amazing Sammy, thank you.\" I just nodded. It was the least I could do considering how much she'd done for me.\n\nWith a nod from Jenn I removed my finger and stood, helping her up on her shaky legs. I lead her to the bedroom and she collapsed on the bed with a sigh. She laid there for a minute and I found myself simply staring and admiring her. I knew we hadn't known each other for long but I felt myself thinking that I could just fall in love with this girl.\n\nMy reveries were interrupted when she opened her eyes and caught me staring. She just smiled, and then adjusted her position on her pillows.\n\n\"Sam, I think you should probably get dressed. You can't go around in my gown all day.\"\n\nI nodded, somewhat sad that I was done wearing her clothes. I stripped off the robe as Jenn watched, admiring the body she had crafted for me. I then begrudgingly went over to the pile of my clothes in the corner and pulled up my boxers. They were now tight around my larger hips and legs, with the spare room for my tiny member an obvious waste. I considered asking Jenn for a pair of panties but she interrupted me.\n\n\"Honey, what are you doing?\" she asked.\n\n\"Uh, I'm getting dressed?\" I replied, unsure what she was implying.\n\n\"Why are you crossdressing sweetie?\" she started, \"those are men's underwear silly girl.\"\n\nMy mouth just hung open as what she said washed over me. I felt suddenly unsure of myself - was I male or female? I thought I was male, but right now I certainly felt female...\n\n\"Here, take those off\" she continued, standing up and striding purposefully over to her dresser. She reached in and rummaged around a little before finding what she was looking for. She scooped something out but I only saw a splash of pink before it disappeared in her hand and she continued to her closet. There she bent down and started digging through a pile of clothes on the floor. I was going to ask what she was grabbing but I was distracted by the fact that her shirt did nothing to cover her rear as she bent over.\n\n\"There we go!\" she announced, standing up and breaking my concentration on her figure. She walked over to me and dumped a pile of clothes into my hands before reaching down and pulling down the boxers. She then sat back on her bed and told me to get dressed.\n\nI put the pile of clothes down on the bed and sorted through them, finding the underwear she had picked for me. I held them up to examine them. They were hot pink with a white heart pattern and white ruffles along the edges. I blushed and looked up to Jenn. \"I uh... I've never worn pink before...\" I said meekly.\n\nJenn's smile grew. \"Well now's a good time to start honey! Every good girl wears pink on occasion.\"\n\nI looked down but felt my face burning. I guess there's nothing wrong with dressing girly when you have a girly body... I leaned down and pulled the panties up, again admiring how good the tightness and lines running along my bum felt.\n\nNext up was a matching bra which I slid on, managing to do the clasp with just a little difficulty. Then there was a stylish jean skirt and a white tanktop. I threw both on and looked up to Jenn. \"How do I look?\"\n\nShe smiled \"You look great! Like a proper girl next door! Now, come here\" she instructed as she stood up and went to the bathroom. I followed her and my jaw dropped when I saw my reflection. Jenn was right, I looked like the classic girl next door. I stood there and admired myself from a few angles, especially my new hourglass shape.\n\n\"Here, spray this in your hair\" Jenn said as she handed me a bottle. I looked at it and read the label \"Mage Martin's Instant Redhead\" it read, \"Instantly transform yourself into the ruby goddess of your dreams!\"\n\nI shot Jenn an unsure glance, but she just nodded. With a sigh, I acquiesced and sprayed four shots of the liquid into my shoulder-length hair, massaging it in. I watched in amazement as my hair slowly turned from brown to a dark but natural looking red with dark streaks through it.\n\nI was interrupted by Jenn suddenly grabbing me and pulling me into a kiss. \"You're beautiful\" she muttered between us. Then she pulled away.\n\n\"Now Sammy, you look wonderful but I have alot to do today, so! You go home and explore your new body and then we can go to dinner later.\"\n\nI just stared at her. This entire time I hadn't considered actually going around town as a girl. I mean we had gone to the hot tub last night but it was a short trip and we'd had a few drinks. But in the middle of the day? I wasn't so sure.\n\nUnfortunately, Jenn didn't leave me much choice. Within a couple minutes she had packed my male clothes into a bag, thrown in a few pairs of panties for good measure, and pushed me out the door with a peck on the cheek and a note scribbled on a piece of paper.\n\nI gulped as I prepared myself mentally to be out in public. It shouldn't have been a big deal - you could tell it was me if you knew my secret, but otherwise I looked like any other girl. I shook my head, shouldered the bag, and got into the elevator. Riding down to the lobby I managed to take a few deep breaths and gather my courage. As the doors opened I felt like I was finally confident enough to do it.\n\nThen the guy who had been waiting outside the door turned around and looked at me, and to my horror I realized it was one of the guys from last night. The one whose dick I had grabbed. Our eyes met and I saw the same shock I was feeling on his face. Before he regained his composure I noticed him checking me out.\n\n\"Hey\" he muttered, obviously not quite in control of the situation.\n\nFor a moment I pictured myself flicking my hair over my shoulder, saying \"Hey there hot stuff\" in a sultry voice, and walking powerfully out of the elevator and out the front door. That's not what happened.",
        "\"Hiya\" I mumbled awkwardly in reply.\n\nI stared at him.\n\nHe stared at me.\n\nThe elevator doors started to close.\n\nHis hand shot out and stopped them. \"You getting out?\" he asked.\n\n\"Uh... yea.\" I mumbled, lowering my gaze and racing past him. I could feel my face burning. I couldn't believe myself. I got to the door and had almost escaped my embarrassment when he yelled out to me.\n\n\"Hey! ...I'm Terry\"\n\nI turned in the doorway and gave him a smile, comforted that he seemed to be having just as rough a time as I was.\n\n\"I'm Sammy\" I said, before escaping out the door.\n\n=============================================\n\nMy journey home was stressful. I found a seat in an aisle row on the bus and set to thinking about my run-in with Terry. I really hoped he didn't think I was that awkward all the time. Of course, how could I explain that I was a little off-balance because the last time I had walked in the front door I was a guy? Never mind the whole \"I grabbed your dick on the roof without knowing your name\" thing.\n\nI didn't even know why I cared what he thought. I certainly wasn't looking to meet anyone right now with Jenn and all, and yea he was good looking...\n\nI caught myself and had to remind myself that I wasn't gay. Or rather, that when I'm a girl I'm gay but not when I'm a boy. My head started to spin a little thinking about it.\n\nThough I suppose he could always become a friend...\n\nMy concentration was broken when I felt a gaze lingering on me. I looked up and saw a guy who had obviously been checking me out. He winked at me and turned his gaze back out the window. Why did he wink I wondered? I silently cursed Jenn for making we wear a tanktop that showed so much cleavage. Looking down I could plainly see the lacy fringe of my bra.\n\nOh.\n\nI realized why we he was staring. I was sitting like a guy - leaning back and slouching with my legs spread. From his angle I must have given him a wonderful view of my pink panties under my skirt.\n\nI blushed fiercely and sat up in the chair, closing my legs and adjusting the skirt so it covered as much thigh as possible, though it wasn't much given the length of the skirt. I cursed Jenn again for the skirt. Oh well I thought, at least he probably didn't notice the little bulge down there.\n\nThe rest of the ride was uneventful and I arrived at home, dropping my bag on the floor and collapsing on the couch. I realized as I sank into the cushions that I really hadn't gotten much sleep last night...\n\n=============================================\n\nI woke up a few hours later feeling refreshed but once again disoriented in my new body. I had to run my hands over my waist, expanded chest, and finally my necklace before I fully remembered that I was a girl right now. I sat up and checked the time: 6pm. Remembering the note Jenn had slid into my hand as I left her apartment, I pulled it out of my pocket and read:\n\n10pm\n\nTito's\n\n431 Marble Ave\n\nI groaned. Tito's was a nightclub in one of the nicer party districts in town. It was actually a pretty great place but I just didn't know how much longer I could keep up with Jenn's nightlife. \n\nI put the note down on the table and stood up when my stomach growled loudly. I realized then that I hadn't eaten since breakfast and decided to think about going out as I made dinner.\n\nAn hour later I sat down to a simple chicken stir fry and dug in hungrily. After a few bites though my ravenous hunger started to wane. Did I have less appetite as a girl, I wondered? I was a little smaller so I guess it made sense. I slowed down and resumed thinking about the evening, staring out the window and admiring the sunset. I decided that I would go and meet Jenn tonight, but that I wasn't going to be out super late or anything. I just didn't think I could do another night full of dancing and crazy sex.\n\nThen I felt something bounce off my boob. Looking down I swore as I saw a brown soy sauce stain left by a piece of broccoli that I had dropped while I was lost in my reveries.\n\n\"Dammit!\" I shouted, pulling off the shirt and throwing it in the sink under a stream of water. I scrubbed furiously, trying to get the stain out but it was no use. The white tank top was ruined.\n\nI leaned back and sighed. Standing there in my bra and skirt I realized that I had no other women's clothing I could wear. I trudged back to my room to see if one of my shirts would look alright, but they didn't fit right anymore. My shoulders weren't broad enough and they all looked big on me.\n\nI sighed. I guess I was going to have to be a guy tonight.\n\nI went sadly to the mirror and inspected my body once more. I loved my rounded features, from my freckled cheeks and pouty lips down to my breasts and full hips. Sighing I removed the necklace and watched myself transform into, well, myself. Or rather, my original self. My sides straightened out, my face became more angular and the freckles, long eyelashes and red hair faded away as my penis grew back to its normal size and created an obtrusive bulge in my panties. I decided that I was going to keep Jenn's underwear on and returned to the living room dressed in men's clothing with my necklace tucked in my back pocket. For some reason it felt wrong to leave it behind.\n\nI tried reading but it was no good. I kept getting distracted. Everything felt so loose except for my panties which were nice and tight - the combination drove me nuts. I considered going back to my room and letting off some steam but I decided to save my energy for the evening.\n\nEventually nine thirty rolled around and I decided to head out, it was going to take a while to get to Tito's on the bus.\n\nI made it just a couple minutes before ten, thoroughly appreciating that I didn't have to worry about how I sat in my jeans. However, I'd traded that fear with the realization that if anyone got a close enough look at my backside they might notice my panty line or see the white ruffles poking out the back of my pants. I made a mental note to be very careful bending down for the rest of the evening.\n\nWalking into the club I flashed my ID at the bouncer and saw Jenn sitting at a table behind the dancefloor where it was nice and dark. I walked up and slid into the booth across from her, causing her to look up from her book.\n\n\"There you are!\" she said with a smile that quickly turned into a small frown when she saw that I was in my male body.\n\n\"I spilled something on my shirt\" I admitted to her unspoken question. \"Sorry.\"\n\nHer face lightened up and her smile returned. \"You didn't have a change of heart then?\" she asked.\n\n\"No!\" I replied, shouting slightly over the music. \"I mean, no. I was enjoying myself and I didn't want to change... But I had to.\"\n\nShe nodded, then her smile got bigger. \"Well no matter, I realized after sending you home that that outfit wasn't right for an evening of clubbing anyways!\" She started rummaging through her purse and pulled out a bundle of clothes. \"Here, go put these on honey. You brought your necklace, right?\"\n\nI just nodded, surprised that she had brought me clothing.\n\n\"Good\" she continued, pointing, \"the bathroom's back there. Oh and I also have these\" she muttered and reached into her purse, her hand extending to seemingly impossible depths as she rummaged around. With a small \"aha\" she placed a pair of three inch black heels on the table and went back to her book after giving me a quick look.\n\nI picked the clothes up and looked around. Nobody seemed to have notice that strange exchange that had just happened. I got out of the booth and walked down the small, dark hallway that Jenn had pointed to. At the end were two doors: men's on the right and women's on the left. I suddenly had a moment's uncertainty. Which one should I choose? I was going to go in male and come out female. Either way if I got caught it would be awkward...\n\nI decided that the men's room was safer, and if I got caught I could just play it off. I went right and found a stall. First thing's first I thought to myself and pulled out my body stone necklace and put it on without hesitation. Once more I felt my skin grow warm, especially around my crotch, waist, and chest. I grabbed onto the wall to hold myself steady as a wave of disorientation slid over me. I realized that I was getting shorter much faster than when Jenn had changed me.\n\nIt took a few moments before I had regained my composure enough to strip out of my jeans and t-shirt before inspecting what Jenn had given me. I pulled apart the folds of the soft black fabric and realized there really wasn't a lot to it. I had a black dress and a pair of red booty shorts with black bands around the legs and waist with a matching red bra. I quickly slid off my panties and pulled up the new ones. I then struggled once more putting the bra on, and pulled the dress over my head, realizing too late that I had it backwards, and had to shuffle it the right way around while trying to get my arms through the right holes. By the time I was dressed I was very glad that there was nobody else in the bathroom that might notice me changing and flailing around in my stall.\n\nGathering my belongings, I took a deep breath and emerged from the stall to see how I looked. I wasn't disappointed - I was gorgeous. I gave myself a quick spin and admired how smooth and feminine my shoulders looked through the half back of the dress. I was definitely dressed appropriately for clubbing. I wondered why Jenn had picked all this. I was definitely going to attract some attention.\n\nAs a last step I slid out of my shoes and laid the high heels in front of me. Gathering my courage, I placed one foot and then the other in, holding on to the counter to keep myself from falling. I took a few moments to gain my balance in the strange footwear then took a few cautious steps around the bathroom. It was actually not too bad I thought to myself. Taking another look in the mirror I could see how good my butt looked through the dress. I definitely looked like I had come out to the bar with the intention of going home with somebody. After a couple more moments appreciating how hot I was I stashed my male clothes under the counter for later and left the bathroom.\n\nI navigated my way back to our booth where Jenn was waiting patiently. As I approached she looked up and smiled, \"You look so gorgeous sweetie!\"\n\n\"I know! It's incredible!\" I replied, smiling widely. I had the feeling this was going to be a great night as I moved to slide into the seat. Jenn however had other plans and jumped up, grabbing my hand in the process. She lead me over to the bar where we ordered a couple mojitos and stood surveying the crowd while the bartender poured them. Despite the early hour there was already a decent crowd on the dancefloor and a small line had formed out the door of the club waiting to get in.\n\nThe bartender handed us our drinks and we payed, walking over to a high table right in front of the dance floor. I took a sip and decided that this was one of the best mojitos I had ever tasted. I took a couple more long drinks before I noticed Jenn raising her eyebrows at me.\n\n\"What?\" I asked. \"It's really tasty!\"\n\nShe just smiled and sipped her own drink. We stood at the table and watched the people dancing for a few minutes as we started getting into the music. I felt my hips start swaying a little to the beat and realized that I was starting to feel the drink. Looking down I realized I had already finished it and I had the start of a good buzz going. That was strange, why was I feeling a buzz after just one drink? I made eye contact with Jenn and she perked an eyebrow.\n\n\"You look like you're ready to have a good time!\" she shouted over the music.\n\n\"Yea! I'm already feeling that drink!\" I replied.\n\nJenn shot me a glance up and down and came closer to my ear before speaking again. \"You're a lot smaller as a girl! You're a cheaper drunk now cutie.\"\n\nMy eyes widened in response, that must be it. I'd have to watch what I drank a lot more as a girl. I didn't have too long to think about it though before Jenn put down her own drink, now empty, grabbed my hand, and pulled me out to dance.\n\nThe music was great and I felt my body start to get into the rhythm almost on its own. Was I suddenly a better dancer as a girl? Or was that the liquor talking?\n\nIt didn't matter. I was having a great time.\n\nWe danced through a couple songs, getting closer and closer with each one. I loved how Jenn danced, her body lithely moving to the beat and her face a mask of pure happiness. Then she opened her eyes and saw me admiring her. Her smile widened and she pulled me towards her, turning me around, and started to grind on me. I couldn't help myself and gave a high-pitched giggle as Jenn's hands landed on my sides and held me close as we danced together now.\n\nThe song ended a couple minutes later and Jenn turned me around, miming a drinking motion with her hand. I nodded and we walked out of the lights and back over to the bar.\n\nThe bartender saw us immediately and walked right over. Man it was great being a girl in a bar. We both ordered another mojito and sat waiting for our drinks, the now-blaring music making a conversation impossible. A moment later I felt a tap on my shoulder and turned around to see none other than Terry standing there smiling with his friend.\n\nMy mouth dropped open in surprise and my first reaction was to hug him. He seemed a little surprised at my forwardness after our awkward encounter earlier, but quickly returned the hug. He was now several inches taller than me and my head rested nicely on his shoulder. He wasn't overly muscled, but I found myself thinking that he felt and smelled really nice.\n\nI felt him pull back slightly and I realized that I had been hugging him for a pretty long time, considering that I didn't actually know him. I pulled back, embarrassed, and without thinking reached out to shake his hand. He returned the shake with a bemused smile before his other friend, who had hugged Jenn (albeit a much shorter hug) came up to me and reached out his hand.\n\n\"I'm Andy!\" he yelled over the music.\n\n\"Nice to meet you! I'm Sammy!\"\n\nHe nodded his head and then pointed over my shoulder. I turned and saw the bartender there with our drinks. Jenn went to pay but Andy stepped in, ordered a couple beers, and handed the bartender a few bills while motioning to our drinks. The bartender just shrugged and went off to grab the beers.\n\nI looked over at Jenn who was watching me and smiling. I shot her a questioning glance, but she just winked and gave an exaggerated glance at Terry behind me. I felt myself blushing. I didn't really know why I reacted that way to seeing him.\n\nA moment later the bartender returned with the guys' beers and we gathered around a small table. We made small talk for a few minutes but the volume of the music made it hard to hear, and the more I drank the more I wanted to be dancing.\n\nDeciding that I didn't want to wait any more I took a long sip of my mojito and placed the empty glass on the table, getting raised eyebrows from everyone around the table. I just pointed to the dance floor and yelled \"Let's dance, bitches!\"\n\nThey burst out laughing, and finished their drinks, but before I could drag Jenn onto the dance floor Andy held up his hand and yelled \"shots!\" as he mimed pounding one back. Jenn and Terry nodded in agreement and we ran back to the bar. A couple minutes later I was handed a shot of tequila and a lemon which I promptly downed and bit down on. Then I grabbed Jenn's hand and we headed onto the floor. She immediately got behind me and went right back to grinding. I lost all sense of what was happening around me as I moved to the rhythm and felt her hand running up and down my sides and legs as she gyrated against me. I felt the back of my dress riding up a little, but I didn't care if someone saw the edge of my panties. They were cute as all hell.\n\nJenn backed off for a moment, and I almost turned around before I felt her come back and grab hold of me anew, although much firmer this time as she started grinding with renewed vigor. I went back to dancing and lost myself in the music. But a few minutes later I noticed something weird. There was something pressing between me and Jenn and as my dress continued to ride up a little bit I realized that I was feeling jeans instead of Jenn's bare legs against my thighs.\n\nWithout pulling away I looked around and up and was surprised to see Terry there smiling down at me as he continued to grind. My eyes opened wide as I realized what I was feeling against my bum. I considered pulling away when a little voice in my head reminded me that I had already full-on grabbed his dick. What was it to have it against me now?\n\nOut of the corner eye of me I saw Jenn grinding up against Andy. We made eye contact and she winked at me. I just smiled. I was definitely having fun. Then I decided to have even more. I turned around and got close to Terry, holding myself close as I looked up into his eyes. I gave him a mischievous smile and started to sink lower against his chest, bending my knees as I kept swaying to the music and going lower, before coming up again. He gave me a cute smile and grabbed my sides as I kept dancing in his arms.\n\nI went down again, loving how his smile widened as I playfully lowered myself against him. I stopped when my head was at mid chest and pulled myself back up again. What I didn't expect though, was for Terry to pull me up into a kiss. Suddenly his strong arms were holding me close as my eyes widened with surprise. Then I felt myself sink into it. He started softly but before long we were exploring each other's mouths as he held me tight. He was a really good kisser. His hands started moving up my sides and he was promptly starting to explore the edges of my breasts. I inhaled sharply with excitement but didn't break the kiss.\n\nI felt a tap on my shoulder and broke the kiss off, turning to see Jenn standing there with her arms crossed. I suddenly wondered if I had gone too far with Terry. She grabbed my hand and pulled me off the dance floor and towards the hallway with the bathrooms. We walked a few steps as I got increasingly concerned before she suddenly turned around and looked at the guys who were standing together on the dancefloor watching us walk away. She pointed to them and motioned for them to follow. They shot a quick glance at each other, shrugged, and followed us with concerned looks.\n\nJenn walked briskly down the hallway, hesitated a moment at the end, then opened the door into the men's room. I heard her yell \"get out!\" at a couple of guys who emerged meekly a moment later with wide eyes. She then motioned that we go in. As the three of us passed through the door she closed it and toggled a lock that I hadn't noticed before. She turned around fiercely and start us down for a moment before she broke into laughter.\n\n\"You should have seen the look on your faces!\" she cried. \"That was priceless!\"\n\nI stood in shock for a moment, seeing that she wasn't mad at all. We laughed nervously before Jenn suddenly straightened up, came up to me, and started kissing me passionately. The guys just stared in stunned silence as they tried to comprehend what was happening.\n\nJenn broke off the kiss a moment later and turned to the guys. \"I suggest that if you don't want your night to end here you start following my lead\" she said, before turning back to me and launching into another kiss.\n\nOut of the corner of my eyes I saw them shrug and turn to each other, Andy reaching down slightly to pull Terry in and give him a kiss. Terry pulled back for a minute as he put his hands on Andy's chest and looked up into his eyes. Then the kiss resumed.\n\nI felt my eyes widen as I watched the adorable exchange. These guys actually cared about each other and must have had quite the interesting night last night. I felt myself start to grow warmer too. They were very hot.",
        "Jenn seemed to realize that I was distracted by Andy and Terry and doubled down on her kissing. I was forced to tear my gaze away as she glued herself to me passionately and started exploring my body, her hands cupping and squeezing my breasts.\n\nThen she broke off the kiss just as suddenly as it started and turned to the guys. \"Take each others dicks out\" she said, offering no other explanation. The guys immediately reached to each others waists, and undid their belts and jeans.\n\n\"I said take them out boys\" Jenn reminded them. Terry hesitated slightly, but then complied and reached into Andy's pants, pulling down his briefs and revealing a reasonably sized member that was slowly growing. Andy returned the favor right after and they turned to us as they held their dicks expectantly.\n\nJenn turned to me. \"Now Sammy\" she started, \"what should they do next?\"\n\n\"Uhhh...\" I muttered. I knew exactly what I wanted though. \"They should stand still.\"\n\nI sauntered up to Terry, grabbed his cock, looked him in the eyes, and sank to my knees. At eye level it looked huge, although I figured it was a bit more than seven inches. I gave it a test lick and found that it tasted a little salty, but with an invigorating musk. I pulled back slightly and looked up into his eyes, a thin line of precum extending to my lip. He just nodded and I felt his hand at the back of my head, pushing me forward.\n\nI opened my mouth and put the tip in, seeing how it felt. I had to open surprisingly wide to take it and I wasn't sure how deep I'd be able to go. Certainly not as deep as I suddenly wanted.\n\nI let me tongue flick around the tip for a moment, then nearly pulled it out of my mouth as I let my lips slide slowly over it. I looked up and made eye contact, seeing my powerful desire reflected in his expression and was spurred to start taking it in again, never breaking eye contact. I pushed him deeper and deeper into my throat, nearly hitting the limit of my gag reflex every time. Every time it went just a tiny bit farther until I surprised myself when my chin touched his balls. Why on earth did that turn me on as much as it did?\n\nI heard a moan to my left and could just barely see Jenn on her knees doing the exact same thing to Andy. But in that moment that I broke eye contact with Terry he seized control and my attention was pulled roughly back to him as he grabbed my head with both hands and started fucking my mouth. He went quite slow at first, to let me get used to it. I felt like I was paralyzed by my own excitement at the thought of him pounding into me while I sat powerless on my knees.\n\nThen he let go of my head with his right hand and I managed to see him slap Andy's ass out of the corner of my eye. Andy immediately let out a stifled moan as he came in Jenn's mouth. At the same time Terry pulled out of my mouth and started pumping his dick vigorously with his free hand, while with the other one he gripped my head, titled me back slightly, and put his thumb in my mouth, forcing it open.\n\nI complied, knowing what he was going to do next. In my aroused state I didn't stop to think about whether I wanted it, I just opened my mouth to receive his load.\n\nA moment after he finished I felt a hand on my shoulder and turned slightly, still on my knees with a mouthful of cum. Jenn kneeled in front of my and leaned forward to kiss me. It was a passionate and extremely erotic moment as the seed from both of our mouths mingled together. I pictured the traces of cum I knew were running down my chin. I very nearly came myself.\n\nAfter a few moments of kissing we each swallowed our mouthfuls and the boys lifted us to our feet. Terry came up to me and surprised me by licking the cum from my chin and lips. In that moment I had forgotten he was bi.\n\nAnd then it was over. Jenn and I cleaned up quickly in the mirror and she lead us out of the bathroom. We danced to a few more songs and I thoroughly enjoyed the feeling of Terry grinding against my backside as the aftertaste of his cum lingered in my mouth. I resolutely prevented myself from considering what I had discovered about my sexuality tonight and the liquor and loud music helped keep my mind away from such bothersome topics. I was sad when a little while later Jenn announced that she was ready to head home and we headed out.\n\nI walked the whole way back holding Terry's hand and smiling like a fool. We arrived shortly at the apartment building and we all climbed out of the elevator. We were silent on the ride up and I knew that everyone was wondering what would happen next. The bell dinged, and the door slid open at Jenn's floor. She half stepped out of the elevator, just enough to block the door and looked at me. I held her gaze for a moment and looked over to Terry, briefly glancing down to where his crotch had started to bulge again. I was certain that he wanted more from me but I was terrified he would find out about my secret and lose interest in me.\n\nOvercome with a sudden nervousness I reached up and gave him a soft but, I hoped, sensuous kiss on the lips before I darted out of the elevator beside Jenn. Jenn got my message and stepped out of the way of the door. As it closed I just managed to catch the look of disappointment on Terry's face. God he was so cute.\n\nI shook myself. What was all that about?\n\nJenn grabbed my hand, still not saying anything and lead me into her apartment. She closed the door and I turned to survey the mess that was her apartment. I let out a sigh as I realized that I wished I was still with Terry in the elevator. I set to thinking about how wonderful the evening was when the somber silence was broken by Jenn giggling behind me.\n\n\"Look who has got her first boy crush!\" she giggled.\n\nI turned to her and pouted.\n\n\"Oh come on silly, you'll see him again\" she said, sidling up to me. \"And have you forgotten that somebody made the mistake of leaving us bombshells together unsupervised?\"\n\nA small smile began to break through my pursed lips as I realized she was right. I looked into her beautiful eyes and let her embrace me. She kissed me tenderly at first, the passion behind it growing with each brush of our lips. I felt her hands start to wander down my sides as she grabbed my dress and began to pull it up and over my shoulders, tossing it to the side and leaving me standing there in my bra, panties, and heels. I returned the favor before she grabbed my hand and pulled me down the hallway. I couldn't help but stare at her ass as it swayed back and forth, looking wonderful in the black lace thong she wore and angled perfectly by her heels.\n\nIn the bedroom Jenn immediately pushed me down onto the bed and proceeded once more to her closet.\n\n\"Wow, what more could you possibly have in there?\" I asked, knowing full well that every time she grabbed something from the closet I was in for something new.\n\n\"Well sweetie, you did such a good job taking care of me earlier I thought I'd return the favor\" she said, turning around to reveal that she had quickly strapped on a medium-sized pink dildo. \"and seeing as how you have a new favorite color I thought I'd use this to do it!\n\nI immediately blushed at the idea of getting taken by a pink fake penis, but the brief wave of embarrassment was overcome by the desire to do exactly what Jenn wanted (which may have been bolstered by the mojitos). I spread my legs a little and Jenn just smiled. She slowly sauntered over, making sure I had plenty of time to observe what was about to be in me. Once she arrived at the edge of the bed she slowly crawled on top of me. I thought we were going to make out some more but she surprised me by stopping at my breasts and pushing her fingers in underneath the cups. She found my nipples and gave them a few playful squeezes which immediately made me moan. The sound of my female voice had begun to be familiar now but it still didn't fail to turn me on.\n\nKeeping her right hand playing with my nipples, Jenn reached behind me and I felt a release of pressure as she undid the clasp of my bra. She pushed it up and I put my hands above my head, thinking she would take it off but instead she quickly and deftly tied a practiced knot around my wrists using the straps. My eyes went wide at the same moment my legs spread a little wider.\n\nBut Jenn wasn't in a hurry to get there. Slowly, she started flitting her tongue over my nipple. The sensation was teasing - not quite enough to bring me pleasure but certainly enough to keep me aroused. She watched my face as I reacted to being played with before finally taking a little nibble. I moaned. She smiled, and I was rewarded with another nibble. And then another.\n\nBefore long Jenn was roughly employing her tongue on one nipple and her hand on the other while pressing her knee between my legs. The mix of sensations was amazing, but I could feel the dildo resting against my stomach and I was excited and a little nervous to have it inside of me.\n\n\"Please\" I begged between moans, \"I want you in me.\"\n\nJenn's grin grew even wider. Slowly, she moved down and grabbed a bottle of lube that I hadn't noticed her place on the bed earlier. She squeezed some out on her finger and I watched as she pushed my panties to the side and used the same finger to start prodding my hole.\n\nInitially her finger just circled it, getting me used to the feeling of being touched down there. But slowly she started applying a little bit of pressure and after a few strokes I felt her finger push in. I felt my back arc at the strange feeling, and I tensed up. It was good but strange at the same time.\n\nJenn made a calming sound. \"Try to relax honey, I know this is your first time. This lube is special and it's going to help you feel the pleasure in this, but I need to spread it around first.\"\n\nI nodded up to her and took a deep breath, breathing slowly, feeling my body start to relax. \"Good girl\" Jenn said, before I felt her finger push in a little farther. The feeling was intense but as she worked the lube inside of me I could feel a pleasant and warm sensation spreading around her finger and overcoming the strangeness of the experience. It was becoming easier to relax and I was just starting to enjoy it when Jenn pulled her finger out.\n\nI almost asked her why when I looked down and saw her spreading more lube onto the dildo. It was time for me to lose my anal virginity and I couldn't have been more exited. Jenn positioned herself between my legs and I could feel the tip of the dildo at my entrance. I squeezed the sheets in my hand as I tried to control the anticipation.\n\n\"Take a deep breath in and hold it Sammy\" Jenn instructed. I complied. \"Now exhale slowly\" she said, and as I did I felt the tip slowly push into me. I squirmed a little - it was a lot bigger than her finger was, but I could feel more warmth spreading from it and the slight pain from before was gone, replaced by the new pleasure of having something inside me.\n\nI closed my eyes and breathed in again, exhaling slowly. Every time I did, Jenn pushed herself in a little farther but always making sure to give me time to get used to the sensation. Then I felt her hit my prostate and my eyes shot open. It felt like she had pushed a button that had caused the good sensation to double. Jenn grinned devilishly, knowing what had happened.\n\nThen she pulled out.\n\nAnd pushed back in.\n\nSlowly at first, then building up the pace, Jenn thrusted into me - hitting my prostate each time. I lost track of what was happening around me as the waves of sensation flowed through my body every time she pushed in. The feeling was electrifying and it felt like my whole body was tingling. It felt so right.\n\nThen I felt Jenn's hand on my breast, squeezing at my nipple. \"I'm going to cum\" I gasped between her thrusts.\n\n\"I know, and when you do you're going to keep cumming until I finish with you\" she said. The very thought of it pushed me over the edge. I felt my body spasm in orgasm but it was different this time - I was coming anally for the first time and the sensation was both the same and different. Every pulse of the fake dick caused my whole body to contract a little tighter. I had completely lost control of my limbs and my whole body felt electric.\n\nAnd the feeling just kept going.\n\nI could hear Jenn gasping slightly though at the effort to keep the pace and the pulses began to slow, then stop, and we sat there. The waves of pleasure slowly faded away and I regained the ability to move and think just as Jenn kissed me. It was deep, and it was passionate. I knew I hadn't made Jenn cum but we had experienced something wonderful and I didn't want it to end. Unfortunately, Jenn had other plans and pulled out after warning me.\n\nI sighed and laid on the bed as she took off the strapon and the rest of her clothes. My limbs felt heavy and my eyes were starting to close from exhaustion. I didn't react as she undid the bra holding my hands together above my head and removed the rest of my clothing and shoes. Then she was in the bed and pushing me onto my side as she made herself the big spoon.\n\nAs sleep took me I felt myself feeling like this was somewhere I belonged. Happy, comfortable, loved, ... and Female. But that didn't stop the brief flash of Terry's smiling face in my mind before sleep finally overtook up with me.\n\n=============================================\n\nI hope you enjoyed reading part two as much as I enjoyed writing it! I'm itching to explore Sam and Jenns magic (we haven't even talked about Andy and Terry!) but I wanted to spend a bit more time in Sam's head first. Let me know what you thought and I look forward to seeing you in part three!"
    ],
    "authorname": "bigrusker",
    "tags": [
        "crossdressing",
        "feminization",
        "magic",
        "panties",
        "pegging",
        "strapon",
        "transformation",
        "femdom"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/divination-and-manipulation-pt-02"
}