{
    "title": "Oral Sex 101",
    "pages": [
        "I decided to write this primarily as a conglomerate of oral sex, both male and female. For the purpose of simplicity, I'll be using \"giver, receiver, and their\" instead of bothering with \"he, she, his, hers\". And for the sake of readability, I'll try and use short and to the point paragraphs. Now then, being a guy myself, I'll start with guy's receiving.\n\nJust to make this seem a little more official than something written in the wee hours of the morning by a guy in a recliner, I'll go over a bit of the history of fellatio; in Ancient Greece, it was called \"playing the flute\" and the Kama Sutra (a book I'm sure most committed couples have a copy of stashed away somewhere the kiddies won't find it) has a chapter on it titled Oparishtaka, or \"mouth congress\". Aside from the religious and social stigma associated with the act, it is generally seen as a dominate act because the giver is most often on their knees, or otherwise in a position below the receiver, unless engaged in the 69 position with the giver on top, on their side or some other weird, and possibly awkward, position. However, and this case is especially true with fellatio, the receiver is placing their penis into an area filled with teeth that could bite, shear, and otherwise maim the tender flesh should the giver be filled with mal-intent (desire to harm, in other words).\n\nBasically, it is dominant because the receiver is usually in a position above the giver, but also submissive because of the serious harm that can come to the receiver if the giver wants. Now then, onto the bulk of reasons I've heard against fellatio, along with tips for the guys at the end.\n\n\u2022 It's disgusting and dirty: A very sound argument if your man doesn't clean up, but if he does, it's actually rather clean so long as he doesn't blow a fart in your face, which I don't think he'd ever do on account of how easily you could wrap your hands around his nuts and squeeze really hard. Not to mention, that'd be the one thing that would prevent him from ever getting head again. (Forgive the poor attempt at humor; I don't want this turn to into something that sounds like it was ripped from a textbook)\n\n\u2022 It's so hairy: Nothing ruins the mood, for both parties, than having to stop to pluck pubic hair from your teeth. Nobody likes the feeling of hair in their mouth and knowing it came from their crotch is even worse, especially considering it's some of the coarsest hair on the human body.\n\n\u2022 It's against my religion: Yes, I actually heard of a girl using this one to weasel her way after giving a blowjob. Now, I'd rather not get into this one on account of how much hate mail I used to get just for associating with LaVeyan Satanism (not the devil worshipping kind, but nobody stops to think about that; they see the word Satan and automatically assume you worship the figure, but this isn't a theological debate), but I will touch on it. From what I remember, she was more than willing to let her boyfriend finger her and go down on her, but a friendly hand job was all he ever got in return, all because she'd been raised Christian. Now, normally, I have nothing wrong with such a reason because it's perfectly reasonably, even if I don't agree with it (I'm a supporter of religious equality and freedom, just so you know), but not the way she used it. If you're a religious person and abhor the thought of going down on a guy, especially a teenaged one, because the Bible, Torah, or Qur'an forbids it, fine, but don't get a guy's hopes up by letting him go down on you! I say this because teenaged guys especially believe that \"to give is to get\"; in other words, if they go down on you, they're \"returning the favor\" ahead of time, no pun intended. I'll wrap this one up before I contradict myself by making it too long.\n\n\u2022 I don't like the taste of semen: Understandable, but not an excuse in my books. For the giver, there're three choices of what to do at the climax: 1) Swallow; it's not as bad as it seems as generally guys tend to thrust up when they orgasm, so the head of their penis is usually towards the back of your throat will only hit the very back of your tongue where there are fewer taste buds. 2) The pornographic \"cumshot\"; basically letting him ejaculate on your face, chest, stomach, or wherever else. Semen washes off so easily that wiping down with a dry washcloth cleans all or most of it up, so it's not like it is hot lava that's going to incinerate the flesh from your bones. 3) Spit; any guy will tell you that this is their least favorite option; it can also be the worst. If he comes in your mouth, but you don't want to swallow, don't go running off to the bathroom as though you have battery acid in your mouth; not only is this a major mood killer, he'll feel horrible because he'll think he pressured you into it. There is a better way to go about it: if you don't want to swallow, but you don't want him to try and coat your body with his come, let him come in your mouth and then, while staring directly into his eyes, let it dribble out of your mouth onto his dick; I guarantee you that it'll drive him wild! No matter which option you choose, really, so long as you don't do the predictable and run to the bathroom, all are really erotic as guys are very visual beings.\n\n\u2022 My mouth gets too tired: Alright, I'll give you that one, but think of it another way; if you rest a little to relax your jaw some while sensually stroking him, it'll prolong his orgasm, making it that much more enjoyable on his part and he'll praise you for it, making it a little better for both parties. So, in actuality, your mouth getting tired is a good thing; that's also assuming the blowjob is the main course instead of the opening act. Not all blowjobs have to end in ejaculation, after all.\n\nThat covers most of the major reasons I can think of at the moment, but I'm sure there are many, many more to be used. As far as the swallowing of semen goes, while many may not enjoy the taste, there are ways around that, which I'll go into in a moment; first, a medical reason for it directed at the ladies: It has been suggested, and backed by studies, that ingesting semen reduces the chances for preeclampsia, a life threatening disease that occasionally arises in pregnancy. It's been shown that this risk is significantly reduced between couples who frequently engage in oral sex ending in the swallowing of semen and almost non-existent in couples who do so regularly. Now, onto the ways you guys can make the semen taste better for our significant other so that they won't be so reluctant to give head regularly. An all acidic diet, i.e. coffee, cigarettes, and junk food, will make it taste horrible to the pallet, whereas rather sweet tasting things, such as honey, fruits and vegetables, or even a flavored, edible lube coated on either the penis of the receiver or inside the giver's mouth/tongue are able to change the taste significantly, or at least cover up the taste, particularly in the case of someone who likes their junk food and asks for a blowjob at a random time, such as at the movies, driving in the car, etc. Most importantly, don't forget how you feel towards the person as your mind can greatly overcome these things; I once heard from a man who loved Sake (Japanese rice wine for those unfamiliar with it) that \"if Sake tastes bad, something's wrong with you\". Essentially, it's the same concept; if you really love the person, you may not even notice the taste, whereas if you're just doing it because they asked you and you feel it's your duty, it's going to taste as though someone poured rancid, liquefied cow manure down your throat (gotta love my analogies, don't ya?).\n\nNow, I think some tips and tricks of the trade are in order before I move on to the second half of this piece. The most important thing about this is to remember just two things: first, don't ever do anything you don't want to (I don't want to sound cruel, but, unless you have some super lover or a slave, don't expect reciprocation if you don't), and second, be creative! Nothing is more of a turn-off to guys than their lover doing something they don't seem to want to and doing it the same way you have for as long as he can remember.\n\n1) Unless you're going for a quickie or in a public place where you could be caught at any moment, start slow! Start off by lightly stroking his shaft and rubbing the head of his dick with your thumb. This will work well if he's slow to arouse physically (spirit is willing, but the body takes a little coaxing, basically) without tiring yourself out and wasting your tricks early. Kiss him on the lips, the throat, the chest, the stomach; more or less just progress your way down his body and don't be afraid to stop off to tease something along the way. It'll all lead up to a better orgasm.\n\n2) Don't just start off like a vacuum on high power (refer back to the beginning of #1 for the exception) when you finally do get to his erection. Take it in your hand and stroke it up and down then push it against his stomach and lick the underside; it's one of the most sensitive areas of the shaft. Flick your tongue across the head before taking him all the way in; again, be creative, start it off a different way every now and then.\n\n3) Remember to change the position of your head while you're doing the actual sucking. Not only does this give him a different angle to watch from, but it will also alter the sensations he's receiving; if you do what has been called the \"chipmunk,\" where you angle his dick so that it hits your cheek and pokes out, it not only gives the illusion that his dick is too big for your mouth (which every guy will love!), it can also simulate the feel of deep throating without actually doing so; not mention, if you switch from the left to the right rapidly and you have long hair, he'll adore the way your hair flips from side to side.\n\n4) Use your hands! Some guys may enjoy the feeling of only your mouth, but most love the double assault when you stroke his shaft and suck on his head. It's another technique that subtly makes him think his dick his larger because it gives him the impression that it's so big you have to use your hand and your mouth just to take hold of it all. 4.5) Not necessarily its own tip, as I see it as a sub-tip to #4: For the girls, if you have the time and place (in other words, somewhere you shouldn't be disturbed for a good amount of time), use your breasts! Every guy will enjoy the feeling of having his dick enveloped in the soft, but firm, and warm flesh of your breasts! If done right, he can even pinch your nipples or squeeze your breasts for you while you're doing it to free up your hands (I'll go into why next tip); not to mention, if you really do it right, he should be able to feel your racing heartbeat, which will act as a sort of vibration against his cock. But don't forget to use your tongue on the tip while you do!\n\n5) This one's mainly for the girls, but can be applied to the guys, as well. In the last tip, I mentioned tit fucking and how to free up your hands, girls; he can be the one to squeeze your breasts, girls, to allow you to attend to yourself. Again, guys are visual and if they see that you're touching yourself while sucking on his dick, he'll absolutely love it because it says to him that you're enjoying it as much as he is. If you really want to drive him crazy, when you get yourself nice and wet, ladies, get some of that moisture onto your fingers and let him suck on your fingers; it's really erotic and really shows you're enjoying yourself. You can also stick a finger in his ass to massage the prostate if you like, but you cannot, absolutely not, do this out of nowhere (unless you know beforehand that he enjoys it)! If he isn't into that sort of thing, not only may you encounter that which you'd rather avoid, you could also ruin not only the mood, but your relationship as well in the process. Some guys are homophobic without realizing it because of how they were brought up; anal play is associate with gay men and to them, that's something to abhor and avoid (I'm just guessing here, folks; I have no idea what guys like that think), so if you're going to do that, talk about it first to make sure he's alright with it.\n\n6) Ever hear of a hummer? And no, I'm not talking about those gas guzzling monsters you see pricks driving on the highway. Basically, you hold his cock in your mouth (as much of it as you can comfortably fit) and hum low in your throat. Keep it to simple tones such as ascending or descending; don't go humming some song you heard on the radio; guys, believe it or not, are auditory as much as visual, so they'd become preoccupied with figuring out which song it is. Now, if you have mood music playing, it's perfectly acceptable to hum to the beat of that music because he doesn't have to worry about where it's from and it shows initiative.\n\n7) This is the last tip I can really think of at the moment (it's been a long while since I woke up and I'm running on fumes while writing this), but unless it's dark (such as a movie theater), position prevents it (such as driving down the highway), or you're really getting into it and acting like a porn star just gobbling his cock as though it's a tasty treat, maintain eye contact! I cannot stress this enough! Look up into his eyes with a loving or lustful expression and he'll go crazy. Or if you really want to drive him wild, wait until that last moment when he's ready to pop and give him a \"give it to me, big boy\" look and I can almost guarantee you he'll remember that moment for the rest of his life.\n\nAs a closing statement (What am I? A lawyer?), I have a few words for first time cocksuckers. Make sure you're ready to give head; if you're not, you won't give it your all and neither of you will enjoy it, you probably won't want it again and at best, he'll be reluctant to ask for it again, and at the very worst (worst case scenario only), he'll start to hang out with that young blonde in accounting who likes lollipops, if you get my drift. My final little tip/trick that's really self explanatory, but only works if you live together (so much so that it doesn't need to be with the rest; it also doesn't help that it was just an after thought and I'm lazy at the moment) is that if he calls you and tells you he's on his way home from work and he's had a bad day, just wait for him at the door, on your knees, in the sluttiest outfit you can throw together (or go naked if you want) and the moment he walks through the door, drop his drawers and go to town on his dick. He'll forget all about that bad day at work and focus only on slamming that door shut.\n\nCUNNILINGUS -- The Art of Licking Pussy\n\nYou'll have to forgive the rather crude title, but what the hell? I'm not really trying to impress anyone here. Obviously, this one's mostly for the ladies and will probably be a little less detailed than the previous section due to only second-hand experience on the topic (it's rather difficult experiencing the feelings of having a pussy licked when you don't have one and it's impossible to even get a grasp on it when all you get is \"that felt good\" or \"that was great\" from my partners), but I'm going to give it the old college try. As far as the two forms of oral sex, it is not as culturally stigmatized as fellatio; in fact it is rather revered, at least in Chinese Taoism where the goal is to achieve immortality. It says that we lose our vitality through the loss of semen, vaginal secretions, and other bodily fluids (such as blood, obviously), while conversely, the retention or ingestion of the vaginal fluids, both men and women can conserve or replenish their Chi (Life energy for those unfamiliar with the term, which would, in all honesty, surprise me); much better than fellatio which is considered disgusting and slutty by many factions throughout history. In addition, most of the reasons against lovers performing it are more or less the same as for those against fellatio, such as the following:\n\n\u2022 It's disgusting and dirty: again, not much of a problem if your lover cleans up, which is recommended beforehand for both sexes to avoid infections, which is one of the more practical reasons. (However, I've never actually heard of a guy really saying this; it's mostly used by women in hentai (animated pornography).\n\n\u2022 It's so hairy: again, this isn't much of a problem if you trim or shave. Advice to women in straight relationships (I can't speak for those in a lesbian relationship) is to find out what turns your man on more; for instance, most men either prefer a trim that's in the vague shape of something (or even just so that it's away from the labia and the clitoris) like what's called the \"landing strip\" (they find it appealing because it looks like it's guiding their cock in) or fully shaved (my preference, though I'm not picky if she wants to take a little extra time to style the little hair that remains; it really shows that she cares about her appearance for her lover).\n\n\u2022 The taste is horrible: I've heard it countless times, even from a friend of mine, and it's occurred to me that this one is most closely related to cleanliness, mostly because he was telling me that after a weekend of almost non-stop sex and cream pies (ejaculating into a woman's vagina or anus without a condom) with his then girlfriend, he went to go down on her and said that it was like a swallow in flight: down and right back up, because the smell and taste made him gag.\n\nSeeing as how I don't need to bother on that really long and annoying paragraph about semen ingestion, I'll go to the tips for the girls. Personally, girls, I enjoy giving just as much as getting when it comes to oral (at the risk of sounding corny, you could say I have an oral fixation), but most guys don't. Speaking from a guy's point of view (though it will work for anyone), you only need a few simple tips: \"wash, rinse, repeat\". Throughout the course of your day, you will get sweaty and filthy and feel... Yucky, for lack of a better term; make no mistake about that. If you have some time to yourself before your lover gets home, take a long, sensual bath to get yourself in the mood; masturbate until you're close to orgasm if you want to give yourself that itch that your lover needs to scratch. I would put in what to do after that, but that belongs in the tricks... I already covered shaving, trimming, but I'll mention it again, even if it's just for the sake that it shows you care about your intimate appearance. And now! The tricks of the trade:\n\n1) Now for what I was going to mention earlier: after that bath, ladies, put on something sexy or put on just an apron and heels (guys in particular love this one, especially when they least expect it; it's called Hadaka/Naked Apron in Japan, where it's very popular). Put an invitation near the door with their name on where you know they'll see it saying something like \"dinner is in the kitchen\" (cheesy, I know, but people are curious by nature and will investigate). Then just sit on the table with your legs spread and a little card that is pointing to your pussy that says \"dinner\" on it. I can almost guarantee they'll drop whatever they're doing and forget whether they had a bad day or most everything else. Or, if you have kids, wait in the bedroom and tell the kids that you want to see your lover in the bedroom as soon as they walk in the door.\n\n2) That last trick was more for the one about to receive; here's one for the giver that follows much of the same principles as those for fellatio: Don't just rush in (unless of course she surprises you with that last little trick) and overwhelm her, unless she's just in the mood for a \"wham, bam, thank you ma'am.\" Start out slow and sensual, kissing, nibbling and sucking her lips, her neck, her throat, earlobes, etc. then work your way down.\n\n3) Remember that a woman's body is more or less made up of nothing but erogenous zones (for those who don't know what those are... Well, I'm sad to say but you fail as a lover; I kid, I kid, of course. They're pleasure centers on the body like the nipples and clitoris, just to name the ones people know the most), so avoid the larger ones. Go for the smaller or more overlooked ones such as the back of the knees; kissing her stomach while massaging the back of her knee is a sure fire way to get most women worked up, or kissing her neck while massaging the small of her back. Before you get to the main course, spend a little time on each nipple, making sure they're both fully erect. A good method I have found before going down (in more ways than one) is to suck and nibble each of her nipples in turn, kneading her other breast with one hand while massaging her scalp, another erogenous zone, with your free hand (this means more pleasure overall for her, even though more focused attention would intensify the sensation).",
        "4) When her nipples are fully erect and you're ready to move on, blow air onto her nipples; the air blowing against her wet nipples will send a shiver down her spine and she'll love you for it. After that, you should move back to her lips for a moment (this goes for guys especially, so that she doesn't think she's just a piece of ass to you) before kissing your way down her throat, between her breasts, across her stomach, but stop! Don't go to the main course just yet; wait until she's practically begging for it. She may hate you in the short term, but when she finally orgasms, she'll bask in its glow for some time to come.\n\n5) If you want to lighten the mood a little so as to reassure her she's not just a piece of ass, give her a short, but sweet foot massage, playfully tickling the bottoms of her feet, then massage her ankles in turn, her lower legs, her knees (including the backs; this is especially good if she has bad/stressed knees brought on by an old injury or playing sports), her thighs, and her hips; it mixes the sensual with the sexual, the naughty with the nice, innocent with the slutty, etc. etc. In addition to easing some of her stress, it will relax her in a different manner, making her feel more comfortable about herself and will make her feel loved because of the extra attention. With one finger and a feather light touch (may take some time to perfect, but it's oh, so worth it), slowly run a finger along her slit; make it just enough pressure so that she can barely feel it, but light enough to leave her wanting more. Nine times out of ten, she'll buck against you trying to increase the pressure.\n\n6) Starting at the ankles (unless you have a foot fetish), repeat the last trick, this time with your lips and your tongue. Kiss all the way up one leg while massaging the other until you get to her thighs. This time, run that finger against her again and when she least expects it (since she's gotten the finger twice, no pun intended, she'll be expecting it again), use that same pressure against her slit with your tongue; add in a quick kiss to her clitoris if you want. Then repeat on the other leg, but avoid actually getting to her pussy for as long as you can without being annoying (there's a fine line between teasing and aggravating).\n\n7) When you finally do get to your lickings (I think my intended puns are getting worse...), don't just go straight for the clitoris, pay it special attention, yes, but that's not all there is to her pussy. Lick from the base of her slit to the tip of her clit as many times as you like before going to something more serious.\n\n8) As with guys: use your hands! You have two of them, so make use of them in a number of ways: knead her breasts and toy with her nipples, hold her hands and give them a loving squeeze every now and then (not only is it a great way to gauge her reaction by the way she squeezes back, it's another subtle way to reassure her she's not just a piece of ass), finger her with them, or any combination of the three; again, be creative! If you want to surprise her (guys especially), slide at least one finger inside her as you lick her clit or kiss her lips (the lower ones, of course) and press the tip against her g-spot and give it a little circular massage; it'll give her a little pleasant shock since you did so intentionally and many women love the sensation. For those of you who don't know where the g-spot is, it's about 2 inches inside the vagina; the easiest way to find it is to insert a finger all the way inside her, hook the tip, and drag it along the top of her wall until you run across a spot of raised (or lowered, in this case) tissue. She'll usually tense up the first few times you run across it so watching her response will tell you when you find it.\n\n9) Woo, that last one was a long one. Anyways! Onto #9! As with guys, eye contact is a major pleaser. It really says that you enjoy doing this for her. This makes her feel loved and will also relax her a bit while building her up to that peak.\n\n10) Be very careful with your teeth. As with everyone (though people who have had clitoral or penile piercings are subject to doubt on this), the clitoris is an extremely sensitive organ; it's almost entirely one big nerve ending. So biting is a major no-no unless she asks for it. A good recommendation as far as teeth and the clit go, grab her clit with your teeth very lightly and carefully grind your teeth back and forth (I've been told it feels amazing, but every girl is different).\n\n11) Again, hum! This feels especially good when your teeth are grinding her clit because it creates a sensation similar to her vibrator (and yes, boys, she has one; probably more. If you feel inferior to one, grow up; they may be able to last longer than us, but they can never replace the comfort we can give... Or the warm throbbing cock betwixt their legs; and yes, I really did just use the word \"betwixt\"; it's an odd morning. Plus, I've heard of some women who absolutely go crazy from the sensation of having their lover fill them with come; try and get a vibrator to do that!) since your teeth are mostly hollow (though now's not the time for a lesson in dentistry). Add a little flick of your tongue to her clit every now and then and she'll go crazy.\n\n12) Most women are prone to greater clitoral than vaginal stimulation, hence why I chose to focus on that, but you certainly shouldn't limit your attention to just that small little bud. Don't be afraid to really stick your tongue in her, guys and gals, and move it side to side, up and down, or in circles; she certainly won't complain!\n\n13) Just like with men, anal stimulation is possible and enjoyable when done right; it's something you have to talk about before hand. Men tend to believe that anal sex is better because since she can't get pregnant and girls tend to believe that in cases where they're being pressured for sex, anal is better because it doesn't \"pop their cherry\", which means they're still virgins afterwards (I don't really know anyone who still believes that second sentiment, but it's not unheard of), so it tends to lead to very awkward, and often painful, first times brought on by pressure and insensitive boyfriends. Regardless of their reasons, you must talk about it first!\n\nThat concludes the tricks I can think of for now. I will give a piece of advice for after she has that first orgasm; you can do one of two things: you can either start all over again (unless she's too sensitive afterwards) or, and this is more recommended, slow down your administrations while she's in the afterglow of orgasm. Or, while she's coming down, if you want to fire her up for another, slide your fingers inside her, scoop out some of her juices and give her a little taste of herself. No matter which route you take, I'd advise giving her a loving kiss before or afterwards. Now then, I'll say feel free to comment and vote, and if the guys and gals here give me enough good reviews, I may write a second one. "
    ],
    "authorname": "Lawliet",
    "tags": [
        "oral advice",
        "blowjob advice",
        "blowjob how-to",
        "cunnilingus how-to",
        "how to eat pussy"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/oral-sex-101"
}