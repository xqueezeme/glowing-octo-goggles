{
    "title": "Finding a Lost Puppy Ch. 21",
    "pages": [
        "I answered the intercom just to find out what was going on. I had to answer or they would keep ringing as they knew I was home.\n\n\"A Miss Lilly Lawson to see you Sir.\" One of the weekend doorman said. \n\n\"I am rather busy, can it wait?\" I asked. \n\n\"She says it is really important Sir.\" He replied after a short wait. \n\n\"Okay, send her up.\" I said rather perturbed. \n\n\"Do I take you down or leave you hanging?\" I asked laughing and shaking my head in disgust.\n\n\"Your choice Sir.\" Puppy said. \n\n\"Well, it will only take a minute to let you down.\" I said.\n\nI changed my mind and only freed her bad arm and removed the cuff. Mainly because Lilly knocked on the door before I could undo the rest. \n\n\"Maybe I can get rid of her at the door or hope the rumor is true.\" I said. \n\nI answered the door and kept it blocked so she couldn't see in. Easily done with a rather short person, five foot tall maybe, though in heels a little taller. \n\n\"How may I help you Lilly?\" I asked.\n\n\"Is Sarah here?\" Lilly asked.\n\n\"She is at work and won't be home for three or four more hours.\" I replied. \n\n\"I am sorry to disturb you, but can I talk with you for a few minutes privately? It is really important.\" Lilly asked in her girlish squeamish voice.\n\nI knew something was really wrong. What else could I do?\n\n\"Sure, if you can keep quiet about what you are about to see.\" I said. \n\n\"I promise.\" She squeaked out. \n\nI moved aside and allowed her to enter while I shut the door behind her. \n\n\"Oh my! I am really sorry for interrupting.\" She gushed. \n\n\"Not offensive?\" I asked.\n\n\n\n\"Hell no! She is beautiful. I am more offended by missing out. Besides, I already knew.\" Lilly stated in a surprising voice. \n\n\"You already knew?\" I asked surprised.\n\n\"Yes Sir, you brought both of them to the company party. I used to be an owned slave at one time and recognized the necklaces though I couldn't be positive from that. Her ring is a dead give away though.\" Lilly explained.\n\n\"You want to join her?\" I asked as a joke.\n\n\"I would love to Sir, but I have other things I need to know first.\" Lilly stated. \n\n\"Coffee? It is freshly brewed.\" I asked. \n\n\"Yes, that would be divine Sir.\" Lilly said evenly.\n\nI hadn't planned on guests, so I ushered her to the kitchen to get her a cup of coffee. She added cream and sugar to hers. I looked her over, white four inch heels, short white stretch skirt over a cute ass, crisp white button blouse. She must have had a special bra on as it seemed like she had more of a chest than I remembered. She isn't ugly by a long shot, just very petite and girlish looking especially with her long black hair. \n\n\"Sofa or table?\" I asked.\n\n\"Table if you please Sir.\" She said sitting down. \n\n\"What is it that you need to know?\" I asked puzzled.\n\n\"My much younger sister, Lee, was hired by Sarah a few weeks ago. I never made the connection that Sarah is your, um, belonged to you until late this week. I guess girlfriend doesn't exactly fit. Anyway, I tried to catch you at work and kept missing you.\" Lilly said then sipped her coffee. \n\n\"Yes. Sarah promoted one and hired two.\" I said not understanding. \n\n\"I need to know if Lee got the job on the level or used her body to get the job?\" Lilly asked. \n\n\"I can assure you she got the job fair and square. Sarah had the whole affair dumped in her lap because the manager went on vacation.\" I said explaining. \n\n\"I know Lee has been dressing much sexier and it caused me to wonder. She got all the looks from our fathers side of the family by the way.\" Lilly said deadpan.\n\n\"In that particular business, being a bit sexy tends to help.\" I said honestly. \n\n\"That makes sense I suppose. You haven't seen my sister then.\" Lilly said laughing.\n\n\"No, I have never had the pleasure. Does that ease your fears?\" I asked.\n\n\"Somewhat but there is another problem now that I know the truth. My sister likes to use her body to get what she wants. I am not sure what she is up to, but she has Sarah in her sights. I know they are having a little party tonight and I think she might try something. I didn't find out til a little while ago and I can't find her.\" Lilly stated glumly.\n\n\"You need me to stop it before it happens?\" I questioned.\n\n\"Yes Sir. I don't want a pissed off Master going after her, especially one that I know and would like to know better.\" Lilly said starting to cry. \n\nThere were napkins on the table so I wasn't worried about tissues for once. I got up and started releasing Puppy from her bonds allowing Lilly time. This was going to take a while and the mood was broken. Puppy put her robe on, went and fixed herself a cup of coffee, refilled our cups then sat beside me. It gave me time to think and time for Lilly to calm down. \n\n\"You were an owned slave Lilly?\" Puppy asked.\n\n\"Yes, until a little over three years ago.\" Lilly answered. \n\n\"What happened?\" Puppy inquired.\n\n\"Truthfully, I don't know to be completely honest. There is some differing speculation even.\" Lilly stated dejected.\n\n\"That is a shame.\" I said trying to be nice. \n\n\"That isn't shame, shame is what he did to me the night before he left. I didn't even know he was leaving. He said we were going out to have some fun and it was at first until he wouldn't stop it.\" Lilly stated near tears. \n\n\"I am so sorry Lilly.\" Puppy said softly. \n\n\"Should I ask what he did?\" I asked looking at Puppy.\n\n\"Shh, if she wants you to know she will tell you.\" Puppy said contritely. \n\n\"I was in the hospital for over a week and don't know the whole story, no one does. I was helped by a couple kind Masters from the club and I was Black Flagged.\" Lilly related sourly. \n\n\"Oh My God!\" Puppy exclaimed. \n\n\"You still want to be in the lifestyle after all that?\" I asked not exactly understanding.\n\n\"Truthfully, it was the best time of my life and it beats all the perverts I seem to attract.\" Lilly said.\n\n\"Rick is a moderate Dom Lilly, training by me and the internet. Still a novice and leans toward soft yet, but has his moments. Learns very quickly and I aim to keep him that way.\" Puppy stated eloquently with a chuckle then proudly smiling at me.\n\n\"Top from the bottom, that is wonderful.\" Lilly said brightening into a smile though she kept her eyes down.\n\n\"I assume the Black Flag is or could be lifted?\" Puppy asked.\n\n\"Yes and no. Disease free but damaged goods. I quit the lifestyle because of that, no one wanted me. Truthfully, I don't have much of a life or a style anymore.\" Lilly stated frowning.\n\nJust seemed like a sudden job interview by two veterans I thought. Terms I never read about or heard either though the meanings seem uncomplicated at a guess. Damaged goods? I was lost there. Mental case?\n\n\"Back to the problem at hand. Is Lee after blackmail, preferential treatment or what?\" I asked as I couldn't determine a reason. \n\n\"I think this is my fault and she may be doing it for me.\" Lilly cried out.\n\n\"Huh?\" I said surprised.\n\n\"Remember back when I was helping you with the budget and cost analysis?\" Lilly asked sullenly.\n\n\"Yeah, I remember. Several months ago.\" I said. \n\n\"I confided in Lee that I thought I found the perfect man in you. I tried to seduce you but I could have walked in the room totally naked and you wouldn't have noticed. Actually, I almost was at one point and willing to do almost anything. Kathy told me what the problem was and why I wouldn't succeed at the time and she had dibs when you finally came out of it. Evidently, Kathy failed also.\" Lilly explained a bit ashamed. \n\n\"Lee doesn't know about me being his betrothed?\" Puppy asked. \n\n\"No, I never told her although I knew. The ring.\" Lilly answered.\n\n\"That is what you and Kathy were talking about in the bathroom at the party?\" Puppy asked.\n\n\"Yes, Kathy filled me in. Wrongly, I might add as she didn't know everything that was obvious to me.\" Lilly replied. \n\n\"So Lee is out to break me and Sarah up and you don't know how?\" I asked pondering the situation.\n\n\"Correct.\" Puppy and Lilly chorused together then laughing at each other. \n\n\"Why not just break her plans up at the club tonight?\" I asked Lilly.\n\n\"I don't know which club. Another reason I am looking for Sarah and I was hoping you knew.\" Lilly replied. \n\n\"Truthfully, I don't know either. Somewhere close to work and inexpensive and there are several.\" I said.\n\n\"Sarah doesn't know you, does she?\" Puppy asked.\n\n\n\n\"I doubt she would recognize me from the party and Lee and I look absolutely nothing alike, trust me on that.\" Lilly said.\n\n\"Perfect, we just need a reason for you to tag along with Sarah.\" Puppy stated excitedly.\n\n\"Yes, I agree that would work.\" I said shaking my head up and down.\n\n\"I could talk her out of the plan.\" Lilly said happily.\n\n\"Yes, but I want the three of you here after the party.\" I ordered.\n\n\"Please Sir, don't hurt her. I beg of you.\" Lilly pandered.\n\n\"I like those lines for later use maybe but I have no plans of hurting her. Sarah on the other hand might be a different story.\" I said thoughtfully. \n\n\"Puppy, you and Lilly can plot while I make reservations for a late afternoon dinner for the four of us.\" I said. \n\nI made the reservations for four as I sent a text to Sarah first to make sure she would be home in time. I hadn't even paid attention to the time, Sarah was already on her way home. The remaining coffee was barely warm as I turned it on to rewarm. Puppy and Lilly were chatting like old friends already, comparing notes I assumed as they laughed and giggled. \n\nI couldn't think all that straight while I was questioning Lilly as I had protecting Sarah foremost in my mind. It all seemed so conveniently coincidental. I didn't ask how Lilly found out Lee was going after Sarah for one. Whether she was going to have help or anything. Lilly was open and forthcoming and I felt it was to her benefit but she was also holding back carefully. Lilly made it seem serious because I was a Master and that made me assume whatever Lee had planned wasn't really that serious. It had to be serious enough to break Sarah and I up and give Lilly another chance. Surely Lee was smart enough to know I would find out they were sisters eventually and couldn't implicate herself. Then again she could play the innocent dumb card not knowing, Lilly would know however and be hurt. \n\nThat was the game, Lilly had to protect everyone and take the chance she could worm her way in maybe. Lilly knew she couldn't cross a scorned Master and had to protect her unknowing sister. Kathy was telling the truth and shielding me once again. Kathy didn't know the truth til after the party either. It made sense why Lilly never bothered keeping in touch as well. Now that I had my sense of being together and the coffee rewarmed I joined the girls at the table. \n\n\"Lilly, how did you know your sister was up to something?\" I asked.\n\n\"She was suppose to meet me for breakfast then go shopping. She is always late but she didn't show up at all. I tried her cell but didn't get an answer or her home phone. I stopped by her apartment and she wasn't home either as I have a key. I tried her cell again and it had been disconnected. Her answering machine had several calls from her current or should I say former pissed off lover. She mentioned Sarah by name in her tirade.\" Lilly replied a little ashamed. \n\n\"Your sister is a lesbian?\" I asked a bit stunned. \n\n\"Bisexual actually. She prefers her partner to be another woman but never a lasting relationship to this point. I imagine she was getting a new phone number as her old one was probably being blown up with calls and texts, home phone always goes to the answering machine. Her normal way of breaking up with someone.\" Lilly explained. \n\n\"Puppy, get dressed. Reservations are at four and Sarah will be here shortly.\" I ordered.\n\n\"Yes Sir. On my way.\" Puppy said with a smile.\n\n\"I was going to play the covert scenario Lilly, but with this new information, the direct approach is a better option.\" I said thinking. \n\n\"Sir, please.\" Lilly begged again.\n\n\"Trust me slave.\" I said with meaning. \n\n\"Yes Sir.\" Lilly smiled warmly.\n\n\"Have a good chat with Puppy?\" I asked.\n\n\"Yes Sir, seems she misses having someone to trade old war stories with on the same level. I miss it as well.\" Lilly said happily. \n\nSarah came in at that time putting a stop to further chatting. We explained to Sarah what was going on after the introductions were made. Puppy had rejoined us, ready to go eat. \n\n\"So that is what that little minx has been up to the last week or so!\" Sarah declared. \n\n\"Yes, I was going with a covert plan but changed my mind. Lilly will go with you to the party and talk Lee out of her plan with whatever it takes. You two will return here with the little minx in tow, I like that name by the way. You can decide what to do then, call it home field advantage or table turning.\" I divulged my plan.\n\nI needed to get dressed so I let them plot the course of action. I knew Puppy would make sure of things. After our little discussion yesterday about Sarah, Puppy probably understood my reasoning and plan. I didn't have a clue if Sarah and Lee would be a good match but as they say, no harm, no foul. Lilly would make a good replacement as she and Puppy seemed to relate much better in all reality. \n\nPuppy happily reaffirmed my thoughts as we ate. She said I wasn't blind this time around but might be a very iffy proposition. Lilly and Sarah talked extensively as well, learning about the little minx as the name stuck. Toni was our waitress and happy to see us as we hadn't been in for a long while. I thought about questioning Toni from the suggestion yesterday but I just didn't feel up to it. I had other questions as well for her but dealt with the restaurant and the back dining room. \n\nWhile we waited for their return, Puppy finally got her desire that was so rudely interrupted. She decided to keep her bad arm out of the way on her own which worked out wonderfully though lopsided a few times. When I released her, I carried her to the bedroom where we fucked like two teenagers in heat for over an hour. I wanted to be sexually drained for the rest of the evening, not sure it would help. \n\nWe both got a laugh when our phones went off simultaneously with texts. Lilly sent Puppy a text while Sarah sent me a text, a rather scared Lee along for the ride and should be here in about twenty minutes. Puppy and I hadn't thought of a plan but knew what had to happen. Lilly was trained and if I kept my commands simple enough I knew she could follow them. First, I had to make Lee know I was the Master and not to be toyed with. Secondly, I needed to show her Sarah was mine for the time being anyway. Thirdly and most important, I needed Sarah to take control of the little minx for her own desire. I wasn't sure about any of it to be honest.\n\nWe decided to lay out the cuffs and coiled rope from earlier, the paddle, a couple collars and leashes on the coffee table. We moved the coffee table off to the side for the time being, then moved the recliner to center across from the sofa with about five feet between. Perfect I thought, far enough apart for a ring side seat but out of the way as well. We were ready none too soon as the texts went off again telling us they were in the elevator. I was actually laughing as they were making a production out of this as well.\n\nI had a thought that this might also be a little revenge on her sister as well. I promised Lilly I would not harm her and it was up to Sarah as to what happened. Lilly didn't know what was going to happen to her at all however and might be surprised and happy as well. Might surprise everyone and knew this could really hurt Sarah.\n\nI had Puppy sitting on my lap, both of us still naked. I felt it didn't matter and might cause a bit of a stir also. The door opened and Lilly came in first sort of dragging Lee in by the hand and Sarah last, closing the door behind her. I let them get situated and watched them look around as to where we were. Lilly saw us and smiled, Lee was looking at the floor and Sarah had that cute puzzled look on her face.\n\nLilly wasn't lying when she said her sister got all the looks. There is absolutely no resemblance between the two. Same black hair, does that count? Even though Lee had blonde streaks in hers.\n\nNo one knew what was going to happen and I was the director. Time to get the show on the road. \n\n\"Lilly, strip but leave your shoes on!\" I commanded. \n\n\"Yes Master.\" She calmly stated. \n\nI was mildly satisfied by her reaction and wanted a show. She was actually well toned and well proportioned body wise, not what I expected. She was a little hesitant removing her bra and saved it for last, I knew she didn't have much on top. The sight made my jaw drop and my eyes go wide. Puppy squeezed my arm rather hard quickly and must have known. The best way to describe them, two little mounded round chocolate rises about the size of a quarter with three quarter inch long nipples about the size of a nickle. I thought about it, she doesn't need a bra unless the blouse is see thru like today. Couldn't get much flatter either.\n\n\"They are as sensitive as she is about them.\" Puppy whispered in my ear. \n\n\"Go to the coffee table, select a collar and leash, then heel on our right.\" I ordered. \n\n\"Yes Master.\" She replied. \n\nShe walked with confidence and a smile was on her face as she followed my orders. Head held high with shoulders back showing off her training. I knew the collar wouldn't fit by a long shot and would need to get a proper one for her. I would have done it at the pet store but would have ruined the surprise, plus, it was already closed. It is to be only ceremonial anyway. I didn't know what pose she took as I couldn't see because Puppy was on my lap gently toying with my hardening cock. \n\nI kept an eye on Lee as well through all this. The big scared almond shaped eyes, mouth open staring at her sister in disbelief. Other than her hair, almond shaped brown eyes, and round face, she didn't really display much more of her Asian heritage. Maybe five foot four or five out of her three inch heels, one hundred thirty pounds maybe and soft white skin tone though lightly tanned from initial sight. Good cleavage, C or small D maybe and noticeable nipple bumps protruding, like her sister. \n\n\"Sarah, bring our little misguided minx and have her sit in the middle of the couch, then stand at inspection on my left.\" I ordered. \n\n\"Yes Sir.\" Sarah replied. \n\nWhat happened next surprised me. Sarah grabbed her by the hair and pulled her to the couch. She grunted and screeched along until Sarah got her where she wanted. Sarah then pushed her onto the sofa sort of flailing into position. She got herself together after a minute and looked like a scared trapped rabbit. Sarah stood as ordered with a little smirk on her face. I think I even heard a little chuckle from Lilly but wasn't sure. \n\n\"So you little minx, think you can steal a Master's pet without consequences?\" I asked gruffly.\n\n\"No Sir. I didn't know. Honestly.\" She stammered with tears starting to flow. \n\n\"I don't believe you. You knew who her boyfriend was. Don't try to deny it.\" I yelled. \n\n\"Yes Sir. That I did know.\" She wailed bringing her hands up to wipe the tears away. \n\n\"You were hoping to break us up so your sister would have a chance. I already know that. What you didn't know, my future bride is sitting on my lap. Now did you?\" I said meanly. \n\nShe looked up at us tears streaming down her face. I knew I had her already, the rest would be icing on the cake. \n\n\"No Sir, I didn't know.\" She said almost bawling like a baby. \n\n\"Lilly came begging like the good slave she is, trying to save your worthless hide from my wrath. She is even willing to accept your punishment on your behalf. She loves you that much. What do you think of that?\" I said with a mean twinge. ",
        "\"No! I can't let her do that! Please, I'll do anything.\" She answered crying even harder if that is possible. \n\n\"Good. Then tell Sarah what you really want.\" I said with a lot of hope resting on her answer.\n\nI have never seen anyone turn the waterworks off so fast and look so stunned in my life. I swear her reddened eyes went round with tears still dripping, mascara streaked down her cheeks onto her blouse. It was a sight for sore eyes, even her sore eyes. \n\n\"I wanted you for myself.\" She squeaked out after the long pause looking at Sarah. \n\n\"Just to throw away like the rest until you found something better?\" I asked demandingly.\n\n\"No! I don't know.\" She sniffled. \n\n\"Lilly, front and center on your knees.\" I commanded.\n\n\"Yes Master.\" She said crawling into position. \n\n\"Lilly, your sister is unsure of herself. Are you?\" I asked thinking she knew what I wanted her to do.\n\n\"No Master. I willing accept your humble offer to be your slave to do with as you see fit.\" Lilly stated with a huge smile and put the collar on and handed me the leash. \n\nI pulled on the leash and pointed to the floor. She got the idea and sat down on her knees facing her sister.\n\n\"No sis, you can't! Please!\" Lee cried out and started the tears rolling again. \n\n\"She can and did. It is what she wanted in the first place. Didn't you know?\" I asked. \n\n\"No! Not again.\" She sniffled out. \n\n\"Tell her Lilly.\" I ordered.\n\n\"Lee, this is my choice and what I truly want. This isn't your punishment. I am their slave for as long as they want me now which could be the rest of my life. Be happy for me.\" Lilly said giddily. \n\n\"Then what is my punishment?\" Lee asked looking scared again. \n\n\"Stand and strip! Be quick about it or Sarah will rip them off.\" I said gruffly. \n\nIt took longer than I expected, actually I expected her to balk and try to talk me out of it or run. She was nervous and tried to cover herself for the first few minutes but gave up in the end. Now I understood what Lilly was taking about, she is absolutely beautiful. I was expecting the dark nipples like her sister at least, surprise, pink. Made me wonder if they had a different mother or father, seriously doubted that but... \n\n\"Sit back down and keep quiet.\" I ordered. \n\nNow for the really hard part and I had no clue what was going to happen. I had debated about the sequence knowing the part with Lilly was going to hurt Sarah. In my mind it couldn't be done any other way. My punishment to Lee was just to scare her and make her understand her sisters wish. I also got the truth out of her for Sarah's sake. That was accomplished. Getting her naked was actually for my silly benefit, she could have gotten up and walked out or refused. I would have had Sarah stop her but she still would have been dressed. Everyone probably knew that except Lee because it didn't sound that way. Well, no one said anything to the contrary, not even a gasp.\n\n\"Sarah, I don't need to look at you to know what you are thinking or feeling. I know you love us as much as we love you. It is because of that love, WE give you this choice. Sitting on the sofa is an unsure cunt of a woman that wants to be with you. I can relate to her being unsure as well as you. I turned the tables on her as you know because I am your Master and need to protect you. Plus, you should be her Mistress and your decision not hers. A piece of information you need to know before you make your decision, she broke up with her previous lover to be with you. That tells me she is actually sure, just not sure it will work out long term. Any new relationship is that way but also be warned of her habitual actions. With me so far Tinkle?\" I asked so I could catch my breath.\n\n\"Yes Sir.\" Tinkle replied in a solemn voice.\n\n\"We know you wanted this lifestyle to experience more fun and you gladly accepted. We also understand your very kinky past and desires. You have had a lot of fun and been our very proper slave. I will make it perfectly clear that with the addition of Lilly, your standing will not change if you choose to stay. We will welcome you back with open arms if it doesn't work out. We will always be there if you need us. We think Lee would make you a wonderful slave, lover or however you want to define your relationship. Do you understand? I asked wisely. \n\n\"Yes Sir.\" Tinkle replied. \n\n\"Puppy, I think we all could use something to drink while you talk with Tinkle.\" I suggested.\n\n\"Yes Sir.\" Puppy said with a smile getting off my lap.\n\n\"Lilly, take Lee out onto the balcony and talk with her. Put your shoes back on first Lee.\" I ordered. \n\n\"Yes Sir.\" Lilly said smartly moving to perform the task quickly. \n\nThat was not easy, giving up something you love dearly and remain stoic at the same time. I knew if I looked at Sarah I wouldn't have succeeded. I also knew I wasn't exactly losing her either. She would be back with Lee on a leash to visit, I knew her. I needed time to steady myself as they needed time also. I was hoping to humiliate Lee a little further by sending her outside naked but that may have been a failure. Was I wrong to give everyone exactly what they needed or wanted?\n\nPuppy came back with my drink and a napkin and a wine cooler for herself. She had tears in her eyes the same as me and a smile.\n\n\"Very well done Sir\" She whispered in my ear.\n\n\"Thank you my love.\" I told her. \n\nSarah came in carrying three glasses of wine, naked. She set them on the coffee table and looked over its contents. She picked up a glass to sip and seemed to contemplate what she was going to do. She wouldn't look at me for the same reason I couldn't look at her. I could tell she had been crying a little as her makeup was smeared a bit. It seemed to take a long while but Lilly and Lee finally came back in. Sarah pointed to the glasses. Lilly picked up a glass, thanked Sarah then headed back to her spot. Lee just stood there looking at the floor. \n\n\"On your knees you little minx.\" Sarah commanded.\n\nLee fell to her knees and got comfortable. Puppy must have explained to Sarah what to do and choose. Sarah then picked up the collar and leash on the table. It was her old one and she fingered it, remembering the many times she had worn it I think. I really thought she was going to put it on for a second when she suddenly turned to Lee. \n\n\"Master is right. Master has always been right. Lee, I am giving you the choice to be my slave as he gave me the same choice. If you accept, you become my possession to do with as I see fit. I am well aware you know what all this means. You will also be punished tonight because you deserve it. Otherwise, get dressed, go home and I will see you Monday afternoon at work like nothing ever happened.\" Sarah stated strongly. \n\nLee took the the collar and leash from Sarah. So far so good I thought and I loved the soliloquy from Sarah. \n\n\"I am well aware of the ramifications and is not exactly how I envisioned tonight turning out. I wanted you the minute I laid eyes on you and that has never happened before. If you want to possess me then I am a possession worth having and I gladly accept becoming your slave and lover.\" Lee stated and put the collar on.\n\n\"Arise Little Minx.\" Sarah ordered grabbing the leash from her hands.\n\n\"Yes Mistress.\" Minx replied standing. \n\n\"Now I know why he doesn't like to be called Master, sounds so vain. Call me Sarah, slave.\" Sarah said laughing. \n\nI was laughing at that statement as was everyone else. Sarah pulled Minx in for a long lingering kiss. It made me realize I had never kissed Lilly. I kissed Puppy gleefully first then tugged Lilly up for a smoldering kiss, Wow, she knew how to kiss and seemed totally different, electrifying. She lit up like a Christmas tree is the best way to explain her.\n\nWhen we slowly parted form the kiss and she gracefully slid back to her spot, Sarah had already positioned Minx. Sarah had her hold onto the armrest of the couch and was gently slapping the insides of her thighs with the paddle to get her legs spread wider. Sarah then ran her hand across Minx's pussy teasingly I think. \n\n\"Oh my! Is my lovely slave ever wet with anticipation.\" Sarah said in a humiliating way. \n\nMinx did lick her lips and let out a little gasp. Puppy rested her head against my shoulder comfortably. We watched on as Sarah rubbed the paddle teasingly around her buttocks. \n\n\"I remember my first time with the paddle from Master. Master didn't administer the first one that I thought was so unfair at the time. Even the second time I thought was unfair for that matter. I eventually came to realize he was right in both instances. My misgiving deeds were nothing in comparison to yours.\" Sarah stated as she let loose with the first swat. \n\nThe hard thwack echoed through the silenced room. It wasn't a light swat, Minx grunted and bit her lip to keep from screaming. Her ass and tits jiggled, she went up on her toes a bit but held her spot. \n\n\"That was for the trouble you put my Master through you disrespectful bitch.\" Sarah stated then swung again. \n\nThe crack sounded and harder than the first, Minx succumbed and screeched. The high pitch hurt my ears. \n\n\"That was for your sister, who begged Master to save your sorry ass and hers.\" Sarah said though rubbing the paddle on her ass in a soothing manner before the next strike. \n\nSlap went the sound as Sarah let off on the force of the blow. Minx still wailed as it stung. \n\n\"For my Mistress who I know had to have lent you a helping hand.\" Sarah said smiling. \n\nCrack went the next blow, her arms gave out and Minx fell into the cushions screaming. At least her screams were muffled. \n\n\"From your new Mistress bitch. May you always remember who she is.\" Sarah relished as she drew back for another blow. \n\nI started to move and say something, it was too much in my thinking. Both Puppy and Lilly quieted me.\n\nI let out a sigh of relief as it was only a light slap but still... \n\n\"Consider yourself lucky. You deserve far worse. Now apologize to your saviors, you will be apologizing to me for a very long time.\" Sarah said setting the paddle on the couch and walking away sternly.\n\nIt took a few minutes for Minx to calm down. I could tell she might still be in pain as her ass was a fire engine red. I would need to talk to Sarah for going overboard though something tells me Lilly had a hand in this. Minx finally moved to the center of the couch, to afraid to sit down, choosing to stand in front of us in her naked glory. \n\n\"I am so sorry. My humble apologies to all of you and what I pt you through.\" Minx coughed out. \n\n\"Sorry! Haven't you learned anything tonight?\" I said disgruntled. \n\nMinx's eyes got great big again, her jaw went open and slack and the tears started to flow again. She looked like it was the final degrading humiliation in her eyes with a slap in the face at the same time. I really thought she was going to pass out. \n\n\"Master is right sis. You should be thanking us with your apology.\" Lilly said truthfully. \n\n\"We gave you the opportunity you wanted. You could have left at any time and you were given that choice right to the end.\" Puppy explained.\n\n\"Thanking us is your apology if done from the heart, you dimwit.\" I said giving her the final clue.\n\n\"Oh fuck, I am so stupid! I am so sorry for being so shortsighted and such a dimwit as you stated. Thank you all from the bottom of my heart for the opportunity of love, especially you sis. That is the apology Sarah wants as well, my love.\" Minx said finally understanding as the light bulb came on.\n\nWe gave her a round of applause and apology accepted at the same time. I let Lilly give her a hug and a kiss for luck. I didn't think she was ever going to understand the double edge meaning Sarah gave her. It took me by surprise as well but I grasped her meaning as I had time to think it over before Minx began her apology. \n\n\"I have one last question before I give you some advice and a warning. Why did you strip?\" I asked for my own interest.\n\n\"I thought I didn't have a choice at the time. I realize now it was my own choice as has everything since my arrival, Lilly, even the punishment. Lilly asked the same questions in our discussion and she called me a fool. She also said she would be loved, safe and well cared for this time.\" Minx said thoughtfully in understanding. \n\nMy own shortsightedness hit me with her answer. Of course she would be well versed in the lifestyle, whether practiced or not. Lilly and Sarah may have laid it on thick and the reason she was so scared. Puppy knew and didn't tell me I bet, though I should have known myself, me being stupidly blind again. She also proved to Sarah how much she loved her, accept the collar and take the punishment or go home. \n\n\"Sarah joined us to experience our kind of fun at first. She fell in love with us, not just me. She is a very kinky girl and guided us to her kind of fun as well. She made it fit into our realm so to speak. We love her and will always be considered our loving slave, just so you know. She needs more than we can give in all honesty as I now realize what Puppy was trying to tell me yesterday. Don't hurt her or you will need to deal with me again and your sister as well. The same applies for you as well, it is not just one sided and you are welcome here anytime. Let Sarah define your relationship, I think you will be very surprised.\" I said speaking from the heart. \n\n\"Yes Sir. I completely understand. I realize now that all Masters are not mean heartless bastards. I trust you to keep my sister safe and I promise to take good care of Sarah.\" Minx confirmed.\n\n\"Since Sarah didn't return to collect you, she is probably crying in her room. This was probably harder on her than any of us. The bathroom is straight down the hall, I suggest fixing yourself up a little. Her room is on the right. I expect she is waiting with something to soothe your ass and your hearts desire. So get a move on.\" I said laughing. \n\n\"Yes Sir.\" Minx said picking up her purse and almost sprinting down the hall to the sliding scuffs and clicks of her heels.\n\n\"Thank you Master, sorry, Sir. You are more than I ever dreamed possible.\" Lilly stated lovingly. \n\n\"You are welcome. Shall we go to bed, I am exhausted.\" I said. \n\nLilly got up and Puppy slid off my lap. They had to help me up as my leg had fallen asleep. Lilly was willing to sleep on the couch but I told her no. We all cuddled up in the bed with Puppy in the middle next to me. \n\nPuppy stirred me from my sleep with soft kisses and a little tickling. It was already after ten when I looked at the clock with my sleepy eyes. We need to take a shower as she coaxed me out of bed. I was still a little groggy and didn't even realize I wasn't awoken the normal way until I was in the shower. \n\n\"Is everyone else awake?\" I asked finally coming out of the haze.\n\n\"Yes Sir. We have been having coffee and discussing last night. All of them were willing to wake you up the normal way I might add. Lilly was a little hesitant however and why I need to talk to you about her first.\" Puppy stated. \n\n\"Alright.\" I said knowing she would be leader of the pack regardless. \n\n\"Some of it has to do with what happened to her. She will tell you when she is more secure and ready, so don't question her about it.\" Puppy explained.\n\n\"She can talk to you but hard by a male perspective?\" I asked.\n\n\"Very observant. She is self conscious about her breasts and doctors are against implants. My experience says it isn't worth the effort for her. So don't make her go see a doctor about that unknowingly.\" Puppy explained that aspect and knew I would try a corrective procedure if possible.\n\n\"They are an oddity from my standpoint but if the nipples are sensitive I will be more than happy. I can see you can't make a mountain out of a mole hill when you don't even have a mole hill.\" I said sympathetically.\n\n\"She can't deep throat either like Sarah and I or her sister to hear her tell it. She can use her mouth, tongue, hands really well and loves the taste of cum. I am sure you will be pleased, just don't force her to go deep.\" Puppy said.\n\n\"She chokes easily because of her small stature?\" I asked. \n\n\"For the most part but there is also some fear involved yet I think. She has had a complete hysterectomy as well, no kids, no period. Anal penetration is mostly out as well other than some light teasing in the area.\" Puppy explained further.\n\n\"My God! She was hurt that bad?\" I asked mortified, putting all the pieces together and understanding damaged goods now.\n\n\"Afraid so and left for dead in an ally dumpster. I called Patrice and had Teddy investigate for me. The report seems to think her Master was having one last night on the town before leaving alright. She didn't know he was leaving either, only two people did, very hush hush for unknown reasons. They only had one witness willing to come forward secretly. The witness said he lost control of the situation, he may have been accidentally killed and his body disposed of, the witness wasn't exactly sure as he didn't hang around to find out. He is listed as a missing person still.\" Puppy explained. \n\n\"Wow! You think her helping Masters had something to do with it?\" I exclaimed.\n\n\"They would have used resources to find him but would have turned him over to the police. So it is doubtful they found him either. Maybe a couple unknown witnesses with some broken bones but they didn't find the actual culprits either. That is my guess.\" Puppy said. \n\n\"I guess I do need to tread lightly then.\" I said.\n\n\"Nah, just be your normal self.\" Puppy laughed. \n\n\"Basically, I would be her perfect Master.\" I said realizing all her imperfections.\n\n\"You got it lover.\" Puppy said smiling.\n\n\"How did she know? This started months ago if what I know is true.\" I asked surprised.\n\n\"A woman's intuition, same as mine.\" Puppy laughed.\n\n\"Okay. How is Sarah taking the sudden change of events?\" I asked.\n\n\"In stride with a very happy star struck Minx before you ask. She is teaching what is expected at the table for breakfast. You are very influential in that respect. Bacon, eggs and her award winning blueberry pancakes.\" Puppy said with a lip smacking smile.\n\n\"Her last hurrah to thank me I bet. Then we better get dressed before the natives get restless.\" I said laughing. \n\nSarah taught them well I had to admit as they all waited on me to give the signals. No one had anything to say and I was surprised about that myself. I only had one burning issue I had to ask about. Living arrangements as this place is too small for all of us.\n\nLilly came to the rescue quickly in that regard. If she was allowed to move in with us, her apartment in Chelsea would be perfect for Sarah and Lee. The way she said it made me laugh, Sarah Lee. She had already scoped the condo out with Jenifer. She could leave most of her stuff behind for them since it wasn't needed and discard some unneeded junk. The biggest thing she owned was a full sized sewing machine and the dummy she needed to make her clothes. She is a size one after all and even then some of those need alterations to fit properly. Most generally, she made her own.\n\nShe had a wide array of shoes as well and a tough small size. One thing she forgot to tell Puppy after seeing Sarah's collection. She couldn't wear anything above a four inch heel, a balance and stride problem. She did make the nose bleed joke along with it. Boots she was unsure about as she never had any like that, but might have problems fitting her legs. She knew of a place in Queens that could custom fit.\n\nLee wasn't a problem either as she was a collector of clothes, mostly made by Lilly, and dust bunnies for the most part. In other words, her one bedroom flat is pretty empty and actually relied on her girlfriends and sister for most things. Lilly was actually putting her through college as long as she kept her grades in the 3.0 or better range. ",
        "Sarah came to me later in the afternoon and cried in my arms. I knew what she was feeling and I had to be the stoic man but I failed terribly. Truthfully, I think it helped my demeanor letting it all out. We had a heart to heart talk about life in general. I explained she needed a life like Rikki and Jill as I think she wanted kids one day. The two of you might find a Master or two to fulfill your dreams or a pair of male slaves to dote over the two of you. It would be her choice which is the important part. \n\nI thought about Puppy in that regard, remembering what she told me of her first couple. I think they had the same thoughts as I did. They taught her well then sent her into the world to make her own way for the same reasons. Her second however was a shortsighted money and power hungry fool if you ask me. Though it was probable that the affliction that Puppy had, caused the problem more than anything. \n\n\n\n\n\nEpilogue:\n\nIt was a glorious sunny day on September fifth as Puppy and I said our I dos. The Minister pronounced us Master and slave as our thirty plus guests clapped and cheered at our nuptials. Even a few people who stopped and gawked at a wedding in an alley. Yes, in front of the same dumpster where I found my Lost Puppy. \n\nIt was suggested by Lilly to hold the wedding at the place where it all began. I balked at first but Puppy thought it was splendid and ideal. The place that made her so miserable and happy at the same time. She refused to wear her cast in defiance from then on out as well. \n\nFarrah and Kathy saw to all the arrangements and reception that was definitely within walking distance. They even put a little temporary dance floor in just for us. It was Mike's idea as a salute to have the girls all wired during the reception. I don't know how many actually did, I do know of at least four including Puppy. I couldn't resist and she wouldn't have it any other way. \n\nFarrah sat this one out and joined in with the festivities instead of working. She did oversee the operation however and made sure it was done right. It was the least she could do for her wintertime boyfriend she told me as we danced together. \n\nI couldn't decide where to go for a Honeymoon. Puppy asked what the reason for a Honeymoon was. Basically, to go somewhere romantic, be waited on hand and foot, and fuck like bunnies. I took a week off, Lilly, Sarah and Lee waited on us hand and foot, we all fucked like bunnies. Same difference in the long run and much cheaper by the way. Puppy wants to go to Aspen for Christmas to go skiing, I guess that will be our actual Honeymoon. \n\nWe have to go to Boston for Thanksgiving this year, that is Rikki's plan. Something tells me it involves a job offer because I know she can't cook. I just wonder which hotel is going to be serving the fancy feast. I think it would have to be a real sweet deal for me to move now. \n\nAuthors Note:\n\nThe noodles don't have to boiled. Just use them straight out of the box to make the layers. Use the hot meat sauce soak into the noodles to soften them for a couple hours before baking at least. I always let it set in the fridge over night before baking if I can. \n\nI thank every one that liked the story. My loving submissive wife and slave loved the story and is my editor as well, took her a long time to understand the point everyone was making at the beginning. It was her idea to put the different POV in separate chapters but seemed more like thoughts on ancient history, to me it was boring. Basically, I was trying to throw too many thoughts at once by different characters and not identifying it properly. Not sure how we both missed it. I finally got to the point where I only needed to focus on Rick and made things much better.\n\nI know someone made the comment that submissive women and slaves just fall out of the woodwork like all the stories. In our experience, it just happens that way for some odd reason. It might be a year or so in between, but all of a sudden there are two or three that come out of nowhere at the same time like magnets, mostly wanting help. \n\nThe story was suppose to end with Rick, Puppy and Sarah together and stop with the aftermath. We decided to carry the story longer til they were married. Master Cale and Erica were to have more to do with the story as well. We changed our minds midstream and decided he was too much for Rick to handle at the time. Rick was the wrong type for Erica as well. Puppy also saw what Rick was afraid of in Sarah, in steps Lilly and problem solved. We decided to give everybody the happy ending they deserved. Sarah would have been leaving anyway, she got promoted a couple months later to a district managers job with Lee in tow, the audit was her evaluation. \n\nWe tend to draw on our experiences and stories of how others met, add in a few news stories pieced together as a plot and viola. We like love stories and moderate BDSM like ourselves. Have more in the works and hopefully you like my writing better.  "
    ],
    "authorname": "PoeticallyChivalrous",
    "tags": [],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/finding-a-lost-puppy-ch-21"
}