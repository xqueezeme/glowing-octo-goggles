{
    "title": "Secret Smiles and Three Little Words Pt. 32",
    "pages": [
        "Chapter 38 \n\nAlex awoke the next morning and turned over. She wasn't surprised when Gavin wasn't there. Still, it would have been nice she decided. She attempted to get up and found that her body didn't want to. It was angry after all the hard work done yesterday. The pounding and bouncing in the trucks over what they called roads around here. The carrying of boxes into the store room. Standing on her feet for hours both in the store room, and in the hospital afterwards. \n\nHer calves hurt and cramped during the night from dehydration, something Gavin warned her about. The cramping reminded her of her mural for the Expo, the nights of cramps in her legs that kept her from sleeping. She found a bottle of water on the table next to the bed and drank from it thirstily, but the damage was done as her calves hurt, as did her feet! \n\nSliding her legs out she winced as she put her feet to the floor, her calves warning her with their twitching she had better take it easy at first, or she would pay dearly. She stretched her back as she stood, her bones popping as she did. The popping one right after another, seemingly never ending. Each a painful but sweet feeling, the pain of the pop. The sweetness of the relief afterwards. \n\n\"Holy shit!\" she gasped as she stretched her hands above her head. She then bent at the waist and let her body hang as she stretched out. The muscles in her back groaning as they stretched, as did her hamstrings on the back of her legs. \n\n\"Wow!\" his voice made her eyes open as she looked between her legs and smiled at him. \"It sounded like you were popping popcorn in here!\" Gavin teased at the noise her body was making. \n\nShe stood and turned to him, he gently took her into his arms and kissed her. \n\n\"I'm sore,\" she admitted with a smile. \n\n\"I'm with you,\" he agreed with a firm nod. \"Pavy needs us, we got a new batch of refugees about an hour ago.\" She nodded and began to put her hair back up in the pony tail as she trailed behind him from the tent. \n\nShe followed him into the hospital and now there were over 80 people waiting. She frowned. This was too much. How can the rest of the world sit idly by and do nothing? \n\nThese people were getting pummeled with sadness and doom. Pain and death, and she knew that there were people in the United States that were more worried that their basketball team just lost their best player to a twisted ankle. \n\nReally? People are dying here and they think their basketball team is killing them? Come here, your perspective on life changes the moment you look into one of these people's faces. The moment you see the devastation. The moment you see the sadness, the total loss on the faces of the people that came into this tent. Gavin walked to an elderly man who had that look of utter desolation on his face. \n\nGavin began treating the man's wounds as Alex assisted. She struggled at first, her fatigue keeping her memory from being used effectively. Soon her brain caught up and they were flowing seamlessly together. \n\nThey moved from patient to patient. Alex trying her best to keep the sadness emanating from the wounded from infecting her. She tried to smile reassuringly at them when they looked to her. A smile of comfort. She hoped it was getting through. \n\n\"Alex,\" Pavy interrupted hours later. \"I want you to start giving the kids inoculations.\" \n\n\"I can't do that!\" Alex protested. \"I'm not a doctor or a nurse!\" \n\n\"Do you think these people care?\" Pavy smiled with a slight shake of his head to answer for her. \"Look, Gavin will show you where to inject, it really is no big deal. Just do what you've been doing. You are very calming, so just continue to do that. These people need that more than all the medicine we can provide. Your smile lets them know the worst is behind them.\" \n\nAlex looked to Gavin who winked at her. \n\n\"You'll be just fine,\" Gavin assured her with a quick kiss. \n\nGavin took her over to a corner of the tent. A small table had been set up for kids to sit on allowing her to inject them. Emem came over and he would assist her, as he had been doing since they arrived. \n\nGavin assured her that he would be a few feet away if she needed him and that was comforting. Gavin injected the first couple of kids. Alex was surprised when they were so brave, they didn't cry out a great deal. Then again, most of them were numb from their panicked retreat from where they called home. After getting shot at, or watching family members get slaughtered or maimed in front of you, what's a small needle? \n\nYes they cried but they didn't have the response she thought they would have. They didn't have all the apprehension she had witnessed with Nora a few years back when she went with Livy to get her inoculations for pre-school. \n\nGavin then stood nearby as Alex delivered her first inoculation. Her hand shook the entire time and the kid cried out and looked to her, the child's eyes spoke of betrayal but she made up for it with a sucker. Once the sweet treat hit the tongue on the child, the expression changed. It went from betrayal to that of awe. The pain melting away along with the sucker. \n\nAfter Gavin watched for a few kids and Alex had no problem he slipped away without her knowledge. When she looked up after a few minutes she noticed he was working on his own patients while she treated the kids. All enjoyed her candy. All enjoyed her reassuring smile, her reassuring voice as she whispered to them they were going to be alright. \n\nFirst in English, which they didn't understand the words, but they understood the tone. Then Emem taught her the words in their native tongue and dialect. She began to speak only in their Swahili, asking them to be still, then comforting them after the sharp pain of the injection. \n\nMothers would look upon her and smile at her gentleness. More than one took her hand and thanked her with a kiss there. She remembered Pavy saying that was a compliment. High praise. \n\nThe look on the mother's face told her he wasn't lying. They looked to her like she was saving their child's life. But she was only giving them a shot. Then she remembered. In America, we take our inoculations for granted. \n\nIn this war torn corner of Hell, they may hear of people getting the lifesaving shots but not have access to them. Now they were watching their own child get the shots that would save their lives from some diseases that were prevalent there. Prevalent but preventable, with the proper inoculations. It was as if Alex was saving their lives with magic. \n\nAlex knew these kids had enough things here trying to kill them, they shouldn't have to worry about diseases that the rest of the world had eradicated through systematic immunizations not available to them. \n\n\"They may have never had one,\" Emem pointed out after she marveled one child looking at her as if she was some sort of angel after tasting the sweet treat she gave them with her megawatt smile. \n\n\"A sucker?\" Alex asked him as she stared at the small girl while stroking her face lovingly. He nodded. That blew her away. No candy? How spoiled she was living in America. There were a lot of things she was encountering here that made her appreciate what she had in America. There were a lot of things she took for granted there that she would not now. Not after seeing what the rest of the world was dealing with. \n\nSimple things, like roads. Paved roads to be specific. The fact that there were plenty of medicines available. Plenty of doctors, doctors you didn't have to walk a day to get to. Public transportation. She thought of the food she wasted, people here would go all day without eating. Candy? Would she ever look at a simple sucker again without thinking of the look each child gave her when they tasted the colorful treat? \n\nAs they went, Emem would prepare the needles, Alex would prepare the child then inoculate them. The child would cry, then Alex would produce a colorful piece of candy, the crying would soften. Then when the sweet taste of the treat hit, the crying would stop all together. On and on it went. Child after child. Hour after hour. Shot after shot. Sucker after sucker. Smile after gentle smile. \n\nBy the time she realized it, night had fallen and the tent was empty. Gavin and Pavy sat on a table just off to the side and watched her work. She didn't know how long they were watching her but when she turned the two men smiled to one another. \n\n\"Well Gavin,\" Pavy exhaled deeply. \"I don't know about you, but your little angel there could give me a shot any day!\" \n\n\"She is quite fantastic, isn't she?\" Gavin smiled as he hopped off the table. \n\n\"Can I have a sucker?\" Pavy asked her as he followed Gavin off the table. \n\n\"Sure,\" Alex shrugged. She picked up a needle and held it up. Pavy stopped his advance on her. \n\n\"What's with the needle?\" he asked her. \n\n\"That's the cost,\" she told him with a firm voice. \"One shot, one sucker.\" \n\n\"I don't need an inoculation!\" he told her. \n\n\"Then you don't need a sucker!\" she laughed. She rolled her eyes then tossed him one as he pouted. \n\n\"Thanks,\" he said popping the sucker in his mouth. \"You were a big help today!\" \n\n\"Yeah,\" Alex rolled her eyes. \"Kids now know I'm mean and cause pain!\" \n\n\"No,\" Pavy argued. \"Now the people of this country know you care about them enough to protect their kids when nobody else will!\" \n\nThis caused her to suck in a breath and it became trapped within her, not allowing her to let it escape from her lips as she thought about that statement fully. \n\nEntering the tent again they shuffled their exhausted feet as Gavin made sure the tent was securely closed to keep the insects on the outside. In their short time here they had encounter insects that bit and stung that were the size of small birds it seemed. Like they were from some cheesy B-horror flick. To avoid those same monsters from getting into the tent while they slept, he made sure the tent was properly closed. \n\n\"Get undressed,\" he said firmly. She smiled wickedly as she took her clothes off. He watched her with a soft smile. \n\n\"In bed,\" he ordered. She complied, slowly entering on all fours, leaving her backside towards him, causing him to groan in approval. \"Be nice, or I won't be.\" \n\n\"Yes Sir,\" she said over her shoulder at him. \n\n\"On your stomach,\" he said pulling a chair close. She laid flat. He began to massage her sore muscles causing her to gasp. His fingers kneading away the knots her body had accumulated over the past days. \n\n\"How many people do you think you worked on today?\" she asked him dreamily as he worked her exhausted muscles. \n\n\"I have no idea,\" he smiled. \"Hundreds, like maybe two or three hundred.\" \n\n\"Wow,\" she whispered as she cooed when he hit a sore spot and he stayed there until he worked it away. \n\n\"I know,\" he said moving on. \"I would be happy if it wasn't for the reason they were coming to us!\" \n\n\"I know,\" Alex frowned. \"The horror in their eyes!\" Gavin nodded as he worked her legs causing her to moan slightly as he worked her. \n\n\"You were absolutely fantastic today,\" he told her. She looked back at him. \n\n\"Thank you,\" she smiled. \"You were an excellent teacher!\" \n\n\"No,\" he shook his head. \"You have the inherent ability to help people. I know because you helped me and I was beyond help!\" \n\n\"You are beyond description, words from poets could not encapsulate you,\" he said as his fingers brushed against her sex causing her to hold her breath. \n\nShe was exhausted but his mere touch set her ablaze instantly. She hadn't thought about sex, her fatigue weighing on her. When he said to get undressed her first thought was she was too tired. But his hands on her energized her. It was like they were able to find a hidden power source within her and now her sexual motor had a full charge. \n\nHe continued to work her sore muscles and soon her body was relaxed. It was still slightly sore but he managed to take her pain lever from an 8 to a 2 in the hour he massaged her. She didn't realize it was an hour until she looked up at the clock. \n\n\"Sir?\" she whispered. \n\n\"Yes?\" \n\n\"May I return the favor?\" she asked turning over. \n\n\"It isn't necessary,\" he assured her. \n\n\"You are necessary,\" she said firmly moving into the submissive position on the bed. Her soft breasts lightly illuminated in the lantern light. The soft shadows of her body falling about her exotically. Her mere positioning causing the desire for her to engulf him in flames of love and lust. \n\n\"So your needs are very necessary to me,\" she said moving back so he could sit on the bed. He stood and began to pull at the buttons on his shirt, she lifted onto her knees and pushed away his hands as they attempted to unbutton the soft Columbia shirt he was wearing. The soft silky feel of the material felt good on her fingers. \n\nShe found her fingers sore from all the injections today. He recognized it immediately and stopped her fingers after she pushed his shirt off of him and onto the floor. She looked up at him, his eyes locked onto her hands as he began to massage them. Her palms first, then outward to the tips of her fingers. He took another 30 minutes to massage just her hands. He had her digits singing his praises before he was done. \n\nShe then went back to work on him, unbuttoning his shorts and giving them a gentle tug to pull them from his waist. His underwear was next, a soft tug as his boxer briefs hung to his semi hard manhood. That pleased her, she made him hard just by letting him massage her. It showed he loved touching her as much as she loved having him touch her...still. After more than a year, their touching one another still excited them. \n\nAlex had expected some falloff, some diminishing of their desire for one another. She figured that after the newness of their relationship had faded they would not be as eager. That had proven to be false. Unlike her other relationships, this fire never seemed to ebb. It stoked anytime he was near, it smoldered when he wasn't, but it wasn't far off from exploding into a raging inferno. \n\nShe let her fingers run down the shaft of his cock, her fingers brushing hot shaft lightly. She leaned forward but he stopped her with his hands on her shoulders. \n\n\"Don't,\" he warned softly. \"I have not been able to freshen up today.\" She looked up at him, her hand still gripping his shaft as it pulsed in her hand. \n\n\"I'm all sweaty,\" he explained. \n\n\"I don't care,\" she told him. \"I want your taste. Yours. Your sweat. Your scent. You!\" She lowered her mouth to his cock when he let go of her shoulders. \n\nHis musky, sweaty smell filled her nose. It wasn't his cologne, which had long since faded. It wasn't his body wash, as he hadn't had time to bathe in two days. It was him. His sweat taste filled her mouth. It was different in taste than him normally. Back home she would taste his soap, his cologne and then him. Now it was just him! She reveled in that. Gavin au natural! \n\nShe took him deeply, his cock hardening while in her mouth. She just held it with her lips at the base, her tongue supporting it from underneath. The head at the back of her tongue. It's heavy feel holding her tongue down. Her hands gripping his ass, pulling him into her mouth as far as she could take him. \n\nShe let one hand gently cup his heavy balls while she held him in her mouth. Neither moving. They were connected, his sex to her mouth. Her other hand then traveled from his ass, up his chiseled body. Her fingers walking up his chest to his mouth and he captured it in his mouth and he held it prisoner, much like she was doing is manhood. \n\n\"Reluctantly,\" she whispered as she released his cock. \"But I want to take care of your muscles.\" \n\n\"Well,\" he grinned as he opened his eyes. \"You had the muscle I was concerned about!\" \n\nShe moved back and he turned and sat down, his back nestled softly against her warm body. Her nipples hard, poking him in the back, he could feel the rubbery rock hard feel as she rubbed them gently up and down his shoulder blades while she moved her hands over his shoulders and massaged his chest from behind. Relishing the feel of their skin on skin contact. \n\nHer fingers moving up and over his neck to his temples. Massaging there then working slowly down. Her thumbs on the back of his neck, pushing his skin from the spine outward to his outer neck. Then moving lower before repeating. Then lower. Repeat. Lower. Repeat. \n\nHer hands gripping his shoulders next, massaging firmly as she moved towards his outer arm. Then back across the upper shoulders her hands went. Slowly. Meticulously. Matching the attention he had just shown her. \n\nHe leaned forward, allowing her to use the heel of her hand to press on him in her massage. Her lips moving in as well while she did, running her lips across his body while her hands worked him. Now she could continue to taste him, the only taste she could not live without. \n\nShe felt his hand snake back between her knees on the bed, his palm up as his fingers found her wet sex. The tips of his magnificently talented fingers gently sending bolts of energy though her clit as he massaged it. His fingers never fully dipping into her, more just rubbing the outer lips, maybe drifting in just enough to push her lips outward. \n\nThe sound of which filled their ears as her wetness was audible under his touch. She gasped while she gently bit into his tasty flesh, drawing a smile from his mouth. She nibbled on his earlobe as he fingered her there in the submissive position, straddling him from behind. \n\nHer hand slipped around his midsection and took hold of his cock from behind with a firm grip. She began to stroke him with the same speed in which he was working her. Slowly at first, but as her body responded he sped up and she matched his speed with her hand. Her grip tightening as she pulled on him. \n\nWhen her body stiffened from her orgasm she bit into his shoulder harder, while her hand choked his cock. She froze but he continued to make her body respond to his hands like a marionette master. His gentle touches making her body twitch and move like she was on strings. \n\nWhen her body descended from its heavenly perch, with her cum leaking from her body she began to stroke him again. He turned slightly and pulled her around him to sit in his lap. He slid into her instantly, her hot, wet sex gobbling up his cock greedily. \n\nShe wrapped her legs around his back as her hands wrapped around his head, her fingers filling with his hair while her mouth took his ear back into her lips. Her sex warmly grasping his hot shaft within her, causing her body to twitch as he filled her. \n\nHis hands cupped her ass, one hand per firm cheek, holding her tightly to his body at first, enjoying the lava like feel of her sex. It was hot, wet and sticky, like the air of the land that surrounded them. But where that heat was displeasing, her heat was highly pleasurable, setting him on fire from his shaft out. He just held her there, his lips nipping at her nipples. Causing them to harden even more as blood rushed to the sensitive tips. \n\nAfter a few moments, which seemed like heavenly hours to her. He began to use his grip to lift and pull her to him. His cock gently moving in and out of her. The feel of his steely hardness spreading her lips, causing her to leak out around the edges when she came again. This time forcing her to toss her head back and letting the moan escape her lips because she didn't want to contain it any longer. She didn't care who heard her in her pleasurable rapture. Let whoever heard know that she was being pleased by a man who knew how to please! \n\nThe quickness of his lifting and pulling, along with the fact he was squeezing her cheeks in his hand harder let her know he was building. \n\n\"Oh Sir,\" she gasped in his ear with heavy breath. Her lips never leaving his lobe. \"Fuck me! Fuck me! Fuck me!\" Each demand spurring him along, making his body work as she felt his hips rock into her now because his hands alone weren't pulling hard enough or fast enough. His hips wanted to play too. Drawing each other's bodies into one another with a soft clap, clap, clap. A gentle applause for their lovemaking. ",
        "He began to bite and suckle her breast while he held her body tightly to his, his grip causing the flesh in her backside to whiten under his fingertips as he erupted and filled her hot steamy sex with his molten seed. \n\nShe could feel his cock buck within her, the subtle jerk of his manhood spurting shot after shot deep within her. Pulsating with his heartbeat that also beat against his rib cage and she could feel it beat through her skin in her breast as she pulled him tighter to her. \n\nThey just held each other there, both squeezing the other tightly to them. He marking her with his mouth. Alex holding his earlobe while she cooed happily into his ear. Letting him know of her satisfaction as he marked her with her 'good girl' mark for the night. Something she would look on tomorrow with pride. \n\nThey stayed there, neither wanting to release the other as his cum leaked out around his shaft and from within her depths, to drip to the floor under them. The soft sounds of its landing under them letting them know he came a lot. \n\nShe released his ear and laid her cheek on his shoulder. For the first time in her life, she asked for a baby. She didn't just think it would be nice, like she did on the island. She prayed to God for one. \n\nShe wanted to feel Gavin's child grow within her. To watch the look on his face as he took care of her in ways she hadn't been taken care of before. To think of the ways he took care of her now but she knew that would amplify with the knowledge she was carrying his child. The pride that would fill her as she was giving him something he dreamed of when he was willing to admit it to himself. \n\nShe wanted it now. A baby. Not just any baby, but Gavin's baby. Their baby. Soon. She would broach the subject of going off her birth control once they were back in the States. She hoped he would be receptive to the idea. \n\n*** \n\nGavin and Alex came out of the tent the next morning and found Pavy not in the hospital. There was no one there. They left and found Pavy in the food tent. \n\n\"No patients?\" Gavin asked him. \n\n\"The fighting shifted,\" Pavy shrugged. \"Don't worry, I still need you.\" \n\n\"No,\" Gavin laughed. \"I wasn't worried about that! You couldn't make it tying your shoes without me, so no, I know you will always need me.\" \n\nFor the first time since they arrived, Gavin and Alex were able to sit down with Pavy and enjoy a conversation. To enjoy a joke or two. To enjoy getting to know the other staff members. \n\nPavy took them out onto the savanna. Alex got a look at her first elephant, not in an enclosure at the Brookfield Zoo. It was a few hundred yards away from her. She stood there while Gavin took a picture with the elephant in the background. \n\nThey drove slowly in their open topped jeep, stopping from time to time to witness a free animal, not a zoo kept animal. For some reason it was more awe inspiring this way. An animal in its natural habitat. Cheetahs, rhinos, elephants and hyenas all made their appearances. Alex had pictures taken of each one. \n\nPavy turned into the photographer and he was quite good. Gavin and Alex would pose in the foreground and the animal in the background. Alex loved them, rotating through them on the camera, reliving each shot. \n\nThe lion pride was the most profound. The one male laying leisurely in the shade of a single tree in the middle of the savannah. His lionesses about him like a harem. They watched from a distance, she was amazed that they paid the human visitors little attention. Pavy said it was because they were the top of the food chain in the savannah. Even with the humans they did not concern themselves with things they didn't feel a threat from. \n\nIt didn't mean Pavy didn't keep his high powered rifle handy. Just in case. \n\n\"He looks like a Dom,\" Alex whispered into Gavin's ear. \"He looks like you.\" Gavin shook his head with a chuckle. \n\n\"Do you need a harem of lionesses?\" Alex teased. \n\n\"I don't share,\" he reminded. \n\n\"Hmm,\" Alex nodded. \"But I seem to get my way with you...perhaps I want another woman to come in to help me please you.\" \n\n\"You please me just fine,\" Gavin scowled. \"Don't.\" \n\n\"I won't,\" Alex assured with a roll of her eyes. \n\nThey got back to camp about midday and Gavin and Alex had thought about a nap, Emem rushing to them told them that was not going to happen. \n\n\"Hey,\" he said as they got out of the jeep. \"Big problem.\" \n\n\"What's up?\" Pavy asked. He looked to the group of visitors in camp looking at them. \n\n\"The Azande tribe nearby was attacked a couple nights back,\" Emem explained. \"One of the children was injured. Their medicine hasn't worked, the child has fallen asleep and won't wake.\" \n\n\"Alive?\" Gavin asked. \n\n\"They said he is, just that he won't wake,\" Emem shrugged. \n\nGavin gathered his medical bag and began to leave with Emem. He stopped when Alex fell into line. \n\n\"Where are you going?\" he asked her. \n\n\"With you,\" she said firmly. \n\n\"No, you are staying here with Pavy,\" he said just as firmly. \n\n\"I can inoculate the children there,\" Alex told him. \"Pavy said they won't come here as they don't trust him because he is an outsider, but the fact that they came to us says they are desperate, hopefully we can do some good and they will begin to trust Pavy and that will make saving the children easier!\" \n\n\"What happens if I fail,\" Gavin pointed out firmly. \"Not exactly going to endear us to them.\" \n\n\"You don't think they would punish you for that, do you?\" she asked him in a gasp. \n\n\"I don't know,\" he shrugged. \"But there is no way in hell I'm going to let you find out first hand.\" \n\n\"No,\" she said firmly as he turned and began to leave. \"You go, I go. That was the rule you set up on the plane. Remember? When I asked if I could look around while you worked?\" \n\n\"I meant that you couldn't wander off, not that I couldn't go off,\" Gavin told her. \n\n\"You know for a man who chooses his words carefully, you sure do suck at it sometimes,\" Alex shook her head. \"You said...you go, I go. I'm fucking holding you to it! Let's go!\" she growled. He stared at her for a few seconds angrily. \n\n\"Gavin,\" Pavy said. \"They have never threatened us, they know we aren't the enemy, she will be fine.\" \n\n\"Un-fucking believable! This shit isn't over by a long shot young lady!\" Gavin barked. He stomped his way towards where the tribe messenger was waiting. \n\n\"Well, you got him wound up,\" Pavy warned. \n\n\"Isn't the first time, won't be the last,\" Alex frowned. She wanted to be submissive, but he should have known there was no way he was going to leave her behind. \n\nThey walked for two hours before coming to the village. The people looked upon them with wary suspicion. They were taken to the tribal leader's home. Emem and the tribal leader talked back and forth, sometimes angrily, sometimes softly but always quickly. Their words firing back and forth like machine guns. It was rapid and a short burst of words. \n\n\"Well,\" Emem said coming to Gavin and Alex. \"They were out hunting when the soldiers came. The boy is his son and next in line to lead, he was protecting a woman from a soldier who was attempting to rape her.\" \n\n\"Oh my God,\" Alex gasped as she closed her eyes at the horror of it. \n\n\"The boy was struck in the head with a rifle butt,\" Emem continued. They said he was awake for a few hours after the attack, but fell asleep and hasn't woken in two days. \n\n\"Will he let me look at the boy?\" Gavin asked. \n\n\"He's leery,\" Emem pointed out. \n\n\"Tell him, his son is probably suffering a subdural hematoma, which is bleeding on the brain. If not treated he will probably die,\" Gavin explained what he thought it was just based on the injury reported. \n\n\"Do you know that for a fact?\" Alex asked him when Emem left to talk to the leader again. \n\n\"No,\" Gavin frowned. \"That would take a CT scan...which they don't have! But the symptomology is right.\" \n\n\"How do you treat it?\" Alex asked him. \n\n\"I will have to drill a hole to relieve the pressure of the bleeding,\" Gavin explained. \n\n\"You are going to drill a hole in his head?\" Alex gasped. \n\n\"Just in his skull,\" Gavin corrected. \"It will release the blood that is trapped between the skull bone and the brain. The bruise will heal and the boy will recover. If the pressure isn't released...he will die.\" \n\n\"Oh my God Gavin that sounds complicated!\" Alex argued. \"With no medical equipment? No hospital?\" \n\n\"They have been doing this procedure for hundreds of years,\" Gavin assured her. \"No hospitals.\" She slid her hand into his and he squeezed it. \n\n\"How long will it take?\" she asked. \n\n\"The procedure? A few minutes. But we won't be able to leave for a couple of days, not until he wakes up,\" Gavin explained. \"He will need to be closely monitored.\" \n\n\"Ok,\" Alex nodded. \"That will give me time to inoculate the children of this village.\" \n\nEmem returned and led Gavin and Alex back to the boy with the village leader showing them the way. \n\n\"Tell him exactly what I say,\" Gavin told Emem after examining the boy. \"Tell him I need to put a hole here.\" Gavin said showing where he would drill the hole. \"It will release the pressure and the boy should wake up in a day or two.\" \n\nEmem explained and the Chief looked to Gavin sternly as he thought about it. \n\n\"Tell him if I don't do this, he dies,\" Gavin repeated staring at the Chief. \"If I do it, he lives.\" Emem translated. The leader looked to Gavin then spoke to him directly, not to Emem even though he knew Gavin couldn't understand him, whatever he said it was meant to be serious. It was meant to be said man to man, not through an interpreter. \n\n\"He asks if you are willing to wager your life on it,\" Emem said softly. Gavin never broke eye contact but gave a single nod. The leader then gave a single nod back, giving his consent. \n\n\"Are you out of your mind?\" Emem asked as the tribal leader left them. \n\n\"Look, this is the only way we save him,\" Gavin explained as he prepared his tools and then the boy. \"If we save him, Pavy's life becomes easier.\" \n\n\"And if you don't?\" Emem asked. \n\n\"Make sure Alex is protected,\" Gavin said softly not wanting to think about failing. \n\nAlex and Emem watched Gavin work. As did the medicine man of the village, as did several elders who were fascinated. It took Gavin the better part of an hour to complete the procedure. He was thankful he wouldn't have to remove the skull piece entirely. That would make the procedure much more complex. \n\nWrapping the boys head in gauze Gavin nodded to Alex they were done. \n\n\"Is he going to be ok?\" Alex asked him. \n\n\"Should be,\" Gavin nodded. \"It may take a couple days for the pressure to release, I will keep him on a pain killer which may make him drowsy, but I would expect him to be awake tomorrow, which will make sure we live another day.\" \n\n\"Not funny,\" Alex pointed out. \n\n\"It seems complex, but really, this is routine. The procedure isn't difficult. It's the primitive conditions here that bother me,\" Gavin explained. \"Infection is our biggest worry now.\" \n\nAlex watched him from the corner of the room that night, she was propped up in the corner while Gavin sat near the boy. He would check him from time to time. She knew he wouldn't get any sleep tonight. Not that he was sleeping much anyway. She drifted off just watching him. \n\nThe soft chatter of voices woke her the next morning. Emem was smiling as he talked to the village leader. \n\n\"How is he?\" Alex asked sleepily. \n\n\"He opened his eyes,\" Gavin smiled. \"He is still recovering but it's a marked improvement.\" \n\n\"That's fantastic!\" Alex beamed. \n\nThe village leader patted Gavin on the shoulder. \n\n\"Well, that's a good sign,\" Gavin shrugged with a smile. \n\n\"Emem,\" Alex called out as she stood. \"Ask him if he will let us inoculate now. He wasn't receptive yesterday but now he should know we are trying to help.\" \n\nThe boy's mother came to her and hugged her warmly. Alex shook her head, she had nothing to do with it, but the woman still hugged her. Emem translated and the man seemed hesitant still. His wife, one of many, growled something at him and then he looked to Alex and nodded at her. \n\nAlex then thanked him, in his native tongue, which made him smile as he left. The rest of the day Emem and Alex would immunize the children of the village, while Gavin kept tabs on the boy. \n\nAlex and Emem stepped out into the bright, hot African heat. It was supposed to be springtime in Chicago, with its March unpredictability. Rain and sometimes cold days and nights. Here in Africa, it was fall, but even the fall temperatures would hover in the 80's, sometimes higher. Today it was upper eighties. With the sun beating down on them as well, the upper 80's would feel more like 90's. \n\n\"Emem,\" Alex said looking around. \"We need to be thorough. I want all the kids inoculated properly.\" \n\n\"Ok,\" he agreed with a nod. \n\n\"Let's set up over there,\" Alex said pointing to a tree. \"The shade will keep us cooler.\" \n\n\"Sounds good,\" Emem agreed. \n\nThey walked over towards the tree. Emem brought a chair over with him as they went. There were curious onlookers who followed them over at a safe distance. Interested in the two strangers in their village. The mother of the boy Gavin was taking care of went over to them after they set up. \n\n\"Emem?\" Alex asked drawing his eyes to her. \"See if she will help us with the other mothers. They will not trust us, but perhaps they will trust her.\" \n\nEmem spoke to the woman, she looked to Alex from time to time. Emem explained the benefits of the shots. She nodded with a smile. She then looked to Alex and asked her a question. Alex looked to Emem for a translation. \n\n\"She wants to know if your child has had these shots,\" Emem said to her. \n\n\"Tell her God has not blessed me with a child yet,\" Alex said softly. \"But my child will have these shots.\" Emem translated and the woman said something to Alex that of course she didn't understand and walked to her and put her hand on Alex's stomach. She spoke some words with her eyes closed. Alex looked to Emem with a curiosity in her smile. \n\n\"She is the daughter of a witch doctor, she is giving you a fertility blessing,\" Emem smiled. \"She said she read your desire for a child in your eyes, she wanted to thank you for all your help. Consider it a gift.\" Alex thanked her, again in her limited Swahili, but the woman smiled that Alex made the effort. \n\nEmem and the mother gathered the village around the tree. Emem explained what they were doing and why. Many looked on Alex suspiciously. A question was asked and Alex looked to Emem. \n\n\"They want to know if it will hurt,\" Emem frowned. \n\n\"Tell them it will feel like a bee sting,\" Alex said. \"But, it will keep them from getting the diseases that kill children before they become adults.\" \n\nEmem translated, which led to more questions. \n\n\"They want to know what diseases,\" Emem said to her. \n\n\"Tell them we are giving them shots for malaria and Diarrhoeal disease. We are also trying to fight of some respiratory infections...I mean breathing infections, as well as some parasites they can't see but is in the water they drink.\" \n\nEmem translated and they looked to one another skeptically. \n\n\"Emem, warn them that over 760,000 children die from diseases we can prevent with these shots,\" Alex said recognizing the doubt. \"They all have seen children die, we can help. We want to help.\" Emem spoke and they whispered softly. \n\n\"I told them whole villages of children have died from diseases we can stop, right now the lady speaking is telling of a village from her youth where the entire village had no children live to five summers,\" Emem told her. Emem broke out in laughter which had Alex turning her eyes to him. \n\n\"They wonder if you are Ture,\" Emem laughed covering his mouth. Alex's eyes told him to explain. \"In their culture, Ture is a mischievous trickster. Typically one who goes against the norm. If I remember right, you have a similar character in your culture.\" Emem told her thinking back. \n\n\"The missionary that came to my village as a boy equated our Ture with your Br'er rabbit from Uncle Remus stories of your South,\" he explained with a furrowed brow trying to make sure he told her right. \n\n\"Oh God, if they only knew!\" Alex laughed thinking of her lifestyle. \n\nShe recalled the one story she could think of with the Br'er rabbit fable. That of the Br'er rabbit and the Tar Baby. She loved it as a child, so she knew it wasn't an insult to have this story equated to her. It was just they didn't know how to take the beautiful woman in their midst. \n\n\"What shall I tell them?\" Emem asked her. \n\n\"Tell them I have a sense of humor, but dying isn't funny. I'm here to make sure their children live long, happy, laughter filled years,\" Alex said firmly. \"With these shots, their children will grow old.\" Emem translated. They spoke to Emem and he turned. \n\n\"They want to know how you want to do this,\" Emem smiled. \n\n\"Tell the children, I need a brave volunteer,\" Alex said relieved. Emem made the request. \n\nA boy, about nine, took a step forward. Alex smiled at him as his mother stood behind him her hands protectively on his shoulders. Alex waved him over and patted the chair. He looked up to his mother who nodded at him reassuringly and the boy sat. \n\nAlex knelt in front of him and held his hands. Her white skin enwrapped his dark. \n\n\"Translate for me,\" Alex said never taking her eyes off the boy. \"I'm going to use this needle.\" She told the boy showing him the needle and waited for Emem to translate. \"It will hurt...but only for a second.\" Emem explained. \"Have you ever been stung by a bee?\" \n\nThe boy rattle off a long conversation, Emem translated. \n\n\"He said he was once out with friends, they came upon a hive. They dared him to hit it with a rock. He didn't want to look afraid so he struck it with a rock. The bees swarmed, he was stung several times before they were able to get away,\" Emem laughed. Alex laughed with him. \n\n\"Tell him that was very brave, but very foolish too!\" Alex said running her fingers over his face. \"Sounds like I'm not the only Ture here!\" Alex smiled at him and he smiled back. Emem told him and he nodded with a laugh. \n\n\"This won't hurt like that,\" she promised. The boy nodded. \n\nAlex wiped his arm with alcohol, showed the boy the shot and he looked to her with a nod. Alex was quick, the boy winced but didn't call out. Alex covered the injection site when she was done with gauze. She winked at the boy who smiled. \n\nReaching into a box she pulled a sucker out for him and held it out. He took it apprehensively and Alex took one out for herself and pulled the wrapper out and put it into her mouth. The boy did the same and the sweetness of the treat caused him to pull it out and look at it. \n\nAlex then picked up the boys hand and kissed it, showing she was really appreciative of his bravery and help. Following their custom of showing the boy high praise. The boy nodded and hopped off speaking to the group. \n\n\"What did he say?\" Alex asked. \n\n\"He said it didn't hurt too bad, and he was willing to get another shot for the candy! He also said you were a beautiful angel.\" Emem laughed. \n\nThe women and children formed a line and Alex and Emem began working. Each child got a sweet treat and each mother smiled happily that there was no real harm. Alex wished there was some way of showing what these shots could do. But they would have to trust these strangers, and in particular, this Ture. \n\nAlex walked in tiredly, the sweat causing her shirt to stick to her. She smiled at Gavin as he sat on the bed with the boy who was talking rapidly at Gavin who was nodding along, he wasn't understanding the boy but it didn't matter. The boy was happy to be alive. That was getting through. \n\n\"He's awake!\" Alex smiled. \n\n\"And talking like a high pressure salesman!\" Gavin teased. \"I don't have the first clue what he is saying, but he is happy.\" ",
        "*** \n\nGavin and Alex walked out of the village leader's home and stood in the sun the next morning, there was a large group of people making their way towards the village. Alex looked to Gavin to see if he was alarmed, he wasn't. His brow was furrowed but she didn't sense fear, she sensed curiosity. \n\n\"Trouble?\" Alex asked him. \n\n\"No,\" Gavin shook his head. \"I don't think so, there are no men in the group.\" \n\n\"So?\" \n\n\"Women don't fight here, this is a patriarchal society,\" Gavin explained. \"Men hunt, fight and make the decisions. If they were here for trouble, there would be no women...it would be all men.\" \n\n\"What do you think they want?\" Alex asked him. \n\n\"I get the feeling,\" Gavin grinned. \"You are going to be very busy today!\" \n\n\"More shots?\" Alex smiled. Gavin nodded. \n\n\"I think word is getting out about you,\" Gavin chuckled. \n\n\"I'm just giving shots,\" Alex shrugged. \n\n\"No, it's the candy I believe,\" Gavin teased. \"That, and your incredible little body and stunning beauty.\" Gavin smiled taking her into his arms. \n\nEmem came to them and shrugged at Alex. \n\n\"Guess we are back to work,\" Emem smiled. \n\n\"Emem, send the messenger back to Pavy have him send more supplies,\" Gavin told him. \"How much vaccine do we have left?\" \n\n\"Running low,\" Emem admitted. \n\n\"Well,\" Alex sighed. \"Send a quick messenger.\" \n\nGavin went with Alex and smiled at her when she attempted to hand him a needle. \n\n\"Oh no,\" he said with a shake of his head. \"I'm assisting you, you know for a fact I'm bad with needles.\" \n\n\"You are gentle when you want to be,\" She said narrowing her eyes at him at the memory of her pneumonia shot. \n\n\"No,\" he shook his head. \"You inoculate, I'll examine them for other things.\" \n\n\"Ok,\" she nodded. Gavin knelt on the ground and did a cursory search of each child, he then sent the child to sit in the chair for Alex to give him or her their shot. \n\nThey spent the rest of the day giving inoculations. Supplies came by way of jeep which made getting the large number of supplies to them, even though it would take longer by jeep to get back. It was faster to walk back cutting through the trees, but they were glad to have it as none of the three had the energy to walk back. \n\n*** \n\nThe jeep came to a stop and Alex looked to Gavin tiredly. Pavy came out of the hospital tent with a smile. \n\n\"Need help?\" Gavin asked him. \n\n\"Nah,\" Pavy shook his head. \"Sounds like you guys had a great deal of success.\" \n\n\"We did,\" Gavin nodded. \"The boy will be fine, Alex injected four villages worth of children.\" \n\n\"Four?\" Pavy asked. \n\n\"Yeah,\" Alex nodded. \"Word got out, so neighboring villages brought their children over so we could inoculate them.\" \n\n\"See? You guys are needed here!\" Pavy hinted his desire for them to stay. \n\nAlex looked to Gavin who shook his head. This was a conversations they would be having a great deal of in the future as the time would come for them to leave. Pavy wasn't just going to let them leave without a fight. \n\n*** \n\nThe days were hectic, Gavin and Pavy worked in the hospital, and another tent was set up for Alex to give injections. They were always busy, word had gotten out that Alex was a person to trust and women brought their kids from miles around for the lifesaving injections. \n\nAt dinner Alex smiled at the men as they came in. Gavin kissed her temple and she closed her eyes at the tenderness. \n\n\"How was your day, Dear?\" he laughed. \n\n\"Tiring,\" Alex admitted. \"But rewarding.\" \n\n\"I know the feeling,\" Gavin said sitting next to her. \n\n\"Ah,\" Emem smiled ducking his head into the tent. \"There you are Pipi Malaika.\" Emem said to her. \n\n\"What's up?\" Alex turned to look at him. \n\n\"Your day is not done,\" Emem smiled. \"Another fifty people just showed up. They said they have been walking for days to get to you.\" Alex nodded and stood up. \n\n\"What is a Pipi Malaika?\" Gavin asked as Alex seemed to know what it meant but he had no clue. \n\n\"It means 'Candy Angel',\" Emem told him. \"It seems that is what they are calling her in Swahili.\" \n\n\"You have your own name?\" Gavin gasped. Alex shrugged. \n\n\"I didn't know what it meant, but this morning they kept calling me that, I finally had to ask,\" Alex said sheepishly. \"I guess the suckers are a big hit!\" \n\n\"I'm telling you,\" Pavy said as he sat back. \"You guys should just stay here!\" \n\n\"Pavy, stop the hard sell,\" Gavin warned him. \"We can't stay.\" \n\n\"Alex?\" Pavy said with a laugh. \n\n\"What did I just say?\" Gavin asked him shocked he would go over his head to Alex with him sitting there. He expected it back door style, Pavy trying to get Alex to line up against him so that the two of them could work Gavin over. \n\n\"I'm hoping to have more success with your better half,\" Pavy told him. \"I know she has the power over you.\" \n\n\"We want to stay,\" Alex told him. \"But Gavin has his practice, I have a sister going through hell. We just can't drop everything and come here. Even though we want to.\" \n\nPavy nodded disappointedly. \n\n\"But it is not a definitive no,\" Pavy pointed out. Alex rolled her eyes and kissed Gavin. \n\n\"See you later,\" she whispered in his ear. \n\n\"Want some help?\" he offered. \n\n\"No, enjoy your dinner,\" she smiled. She followed Emem out of the tent. \n\n*** \n\nShe slipped into the tent later that evening. Gavin sat in the bed reading by lantern. He dropped the book to his side as she came in. She immediately took her clothes off and crawled into bed tiredly. He hooked his arms around her and pulled her tight. \n\n\"You want to stay, don't you?\" he asked her as he held her from behind. \n\n\"I do,\" she whispered after a few moments. \"We are doing good here.\" \n\n\"You could do good anywhere,\" he told her. \n\n\"Tell me you aren't enjoying what you are doing,\" she said turning slightly to look at him. \n\n\"I have a practice,\" he told her. \n\n\"The look on your face when you talk about your practice there and what you are doing here is remarkably different,\" she warned him. \n\n\"Explain,\" he demanded. \n\n\"When you talk about there, your face looks more like a man eating a lemon,\" she told him. \"Here? You look like the kids when they get there first taste of my candy.\" \n\n\"I can't lie,\" he finally sighed as he nuzzled her neck. \"We are doing more good here.\" \n\n\"Then why should we go back?\" she asked him. \n\n\"Because...that is our life,\" he said into her hair. \"You have family and friends. I have Madelyn.\" \n\n\"I know,\" she sighed. \"But can we come back?\" \n\n\"We'll see,\" he chuckled. He was enjoying making a difference, she knew that as well. \n\n*** \n\nPavy hugged her warmly as they stood next to the jeep. \n\n\"I'm so happy you came,\" he told her within his grasp. \"I can forgive you for bringing the shit head.\" He joked in reference of Gavin. \"Next time you come by yourself and I'll show you how a real man loves you.\" \n\n\"Back the hell off you piece of shit,\" Gavin growled pulling them apart. \n\n\"Hey man,\" Pavy laughed. \"In the immortal words of Beyonc\u00e9, if you liked it you should have put a ring on it.\" He took him into an embrace as well. \"She needs to know she has options!\" \n\n\"She has had quality, you think she is going to slum with you?\" Gavin teased breaking the embrace. \n\n\"You two,\" Alex chastised. \n\nThey were heading to Cape Town today, fighting was keeping them from Nairobi and the replacement doctors came up from South Africa to avoid it. The replacement doctors meant Pavy would have the help he needed and they could return to their life in the States. They would return the same way and catch a commercial airline from the airport in Cape Town. \n\nThe drive was slow and arduous. The bouncing wasn't any fun, as they knew their bodies would punish them later for it. Two days of this, was going to be brutal. There were many stops along the way and the scenery was the only redeeming factor of the drive. It was absolutely breathtaking. Nothing rivaled the beauty of the Dark Continent. Alex spent her time taking pictures to draw later. The bouncing of the jeep was not conducive to drawing, so to help her memory, she took pictures. \n\nIn the morning she found Gavin talking with the driver and they were laughing. When she stepped out they stopped. She furrowed her brow at it. Odd. \n\nOn the road she looked at him. \n\n\"You are up to something,\" she told him with a frown. \n\n\"I am?\" he smiled. Alex rolled her eyes and shook her head. \n\n\"I have a surprise for you,\" he shrugged. \"Something I know you will love.\" \n\n\"Ok,\" she said with a smile, she knew better than to ask, he wouldn't tell her until he was ready for her to know. \n\nShe knew drawing any information from him was a waste of time, but she was also sure that anything this man came up with would be pleasing to her. He had an inherent gift of pleasure. Especially when it concerned her. \n\nHours later she heard it long before she saw it. \n\n\"What is that?\" she asked him. \n\n\"It's called Mosi-oa-tunya,\" he told her. \"Translated it means Smoke that Thunders.\" \n\n\"That doesn't tell me what it is!\" Alex told him. \n\n\"Victoria Falls,\" Gavin winked at her. \"I've always wanted to see it, Pavy says it's beyond words.\" \n\n\"Oh my God! Yeah! It's like twice as big as Niagara Falls!\" Alex gushed. \"It's one of the Seven Wonders of the World!\" \n\n\"Well, we will be able to check it off our list of things to see!\" Gavin said proudly. \n\nStanding there looking over the magnificence of the falls had them speechless. He put his arms around her and they stood and watched it. \n\n\"Says here, 165 million gallons of water flow over the edge every minute!\" Alex marveled looking over the brochure they had picked up. She put her hands on his arms as he stood there. \n\n\"Can you imagine the power of the water at the bottom? That would be incredible!\" Alex gushed. \"This was an awesome surprise!\" \n\n\"I know the feeling,\" Gavin whispered in her ear as he kissed there. \"And this isn't the surprise.\" \n\n\"What do you mean?\" she asked closing her eyes. \n\n\"I feel that type of power every time I look at you,\" Gavin said softly. \"I feel that weight, that power.\" He pulled her hair to the side and kissed her neck. \"Then I feel like I'm drowning trying to be the man you deserve.\" \n\n\"The things you say,\" she smiled. \n\nHe turned her and stared into her eyes, the soft blue in them danced as he stared. He looked down and took her hand. She followed his eyes and saw it. A ring. Not just a ring. A huge ring. On her left hand. She sucked in a breath and stood there shaking. Physically shaking. Part fear, part joy and part shock. \n\nThe tears came next, flooding her eyes as she stared at it, afraid to blink to find it all to be a lie her brain was telling her. He had to hold her hand firmly to keep the shaking hand still to push the ring over her knuckle. \n\n\"I've been walking around with this ring for a while now,\" he told her. \"Waiting for the right moment. I didn't want to be clich\u00e9 and do a dinner and what not. I didn't want to do it on Valentine's Day. I knew God would give me the perfect opportunity...and He did.\" \n\n\"Alexandria Lasko, I'm asking you...will you marry me?\" Gavin asked her. A slight shake in his own voice. \n\nHe looked to her to see the tears flowing down her face, her mouth agape and the shock she was feeling was easily seen. He could see her body shaking as they stood there. She was breathless. \n\n\"Is it too soon?\" he asked her about the question. She shook her head quickly. \n\n\"Ok then,\" he said struggling to breathe himself. \"I've never done this before...but I'm pretty sure you have to say something here.\" \n\n\"I can't breathe,\" she gasped. Gavin's concern level shot to a record high as he moved closer to her to check her out. \n\n\"Slow,\" he whispered as he felt her chest. \n\nShe pushed his hand away and jumped into his arms and screamed in joy as the air flooded her lungs. Everybody turned and looked to them as he began laughing, the concern leaving as he realized it was all about the moment. \n\n\"So officially?\" he asked her. \n\n\"Absolutely yes!\" she screamed happily. \"Absolutely...unequivocally yes!\" she said again kissing him through her tears. The driver who brought them was busily taking picture of the joyous moment. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "fingering"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-32"
}