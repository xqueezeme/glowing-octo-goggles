{
    "title": "Lending Library",
    "pages": [
        "Business had been pretty good for the winter months, such as winter was in Jacksonville, Florida. \n\nAidan Gray had owned the landscaping business he bought from the man who'd mentored him and taught him everything he knew six years ago. Now, at the age of 34, things were going quite well, and with summer just around the corner, the potential to make a lot of money was growing by the day.\n\nIt was the second week of April, and the grass was growing again, and that alone meant a huge surge in income. The economy was also booming, and people were spending money again. And a good share of the spending was going to luxury items like landscaping, and all of that was to his financial advantage.\n\nCollege was a long way off for his nine-year old daughter, Sadie, but Aidan had learned early on it was never too early to prepare. His parents had footed most of the bill for his college education, and although he never used it in his job, majoring in literature had opened a whole new world to him; a world he still loved to explore whether through some new novel or rereading a classic.\n\nSadie was out of school for Spring Break, and she was with her dad as they headed toward the next job. Since losing her mother three years ago, her father had become her best friend, and it often seemed like he was her entire world. Then again, she was pretty much his whole world so if they were co-dependent, so be it.\n\nAidan loved having her along, and he'd have been thrilled if she wanted to just sit in the truck and listen to music, but Sadie loved helping, and he loved that she enjoyed it so much. She was now old enough and careful enough that she drove the riding lawn mower they towed around with a bunch of other landscaping equipment. She couldn't quite control the edger or trimmer, but she did a bang-up job on lawns and was extremely careful not to run over anything but grass.\n\nSince the weather was still just pleasantly warm with no trace of humidity, Aidan had the window down and the radio up. Sadie'd never heard the song that was playing, but she was having fun watching her dad sing along at the top of his lungs. She pulled her earbuds out of the iPod she was listening to, and turned to look at her goofy dad.\n\n\"Running on empty! Running on\u2014running blind! Running on into the sun but I'm running behind!\"\n\n\"Okay, this is the best part, honey,\" he said very fast before going back to singing.\n\n\"Gotta do what you can just to keep your love alive. Try not to confuse it with what you do to survive.\"\n\nSadie turned the volume down on the radio just as her dad was really getting into it, and suddenly his was the only voice singing.\n\n\"Hey! What gives?\" he asked.\n\n\"I don't understand what was so great about that part,\" she told him.\n\nHe wanted to tell her how much he wished he could do the thing he loved the most and get paid for it, but they had a mortgage, car payments, and a ton of other bills. So while Aidan's first love was literature, he did what he did in order to survive. That he happened to be good at it meant being able to make a very decent living doing it. But it wasn't exactly what he'd be doing were he able to do the thing he loved over what he had to do to survive.\n\nHe also didn't want to say anything about how often he found himself trying to keep the love he'd had and lost with her mother alive by reliving the past over and over again. \n\nAidan had plenty of friends, who, like him, were in their mid-30s and who said they were already either bored to death in their marriages or essentially living on fumes when it came to intimacy. \n\nThat had never been an issue for him and his late wife, Kayla. One or both of them were always coming up with new ideas to...keep their love alive...and making love never got stale. He knew that wasn't the norm for most people, but he still found it hard to accept that having sex two or three times a month\u2014and boring, mundane, routine sex at that\u2014was the norm for so many people. \n\nFrom what little he'd read, he knew that a 'sexless marriage' was defined as making love twelve times a year or less. He and Kayla had made love at least that many times a month for as long as they were together. But all that was gone now. He missed her like crazy, but he did his best not to let it show in front of his daughter, and this was no exception.\n\n\"I uh, I just really like the beat,\" he told her. While that was true, it wasn't the full answer to her question, but it allowed him to avoid getting into a deep philosophical discussion well over her ability to understand.\n\nShe put her earbuds back in, turned on her iPod, then turned the volume back up just in time for her dad to catch the last stanza of the oldie he still loved.\n\nShe heard him singing even over the sound of her own music and laughed at her father as he sang, \"Honey you really tempt me, you know the way you really look so kind. I'd love to stick around but I'm running behind.\"\n\nAidan checked the digital clock on the dashboard to make sure they weren't running behind then sang the rest of the song just before they pulled up to their next job.\n\n\"Navigator? Is this the right house?\" he asked loudly enough for Sadie to hear.\n\nShe checked the list of jobs they had, looked at the street number then said, \"Yep. This is the right address.\"\n\nThis job was for a new client he hadn't met yet. All he had was an email exchange between the property owner and himself on his website. He'd upgraded it two years ago and although it was hard to say exactly how much extra business it had generated for him, he knew the site looked professional, and that it got a ton of hits. Business was exceptionally good so he considered it money well spent.\n\n\"Come on. Let's go say 'hello' and see what we can do for this nice lady.\"\n\nAidan knew the woman's name was Quinn Johnson, but other than that, he had no idea who she was. \n\nAs they stepped onto the sidewalk, Aidan stopped when he saw a very large wooden box on a pole near the mailbox. \n\n\"Lending library,\" he read from the top of the box. Right below that it said, \"Free books.\"\n\nCurious, he walked over and saw it had a wooden door with a latch. He opened it then read, \"Take one, return one or trade one. Enjoy the gift of reading!\"\n\nHe reached in and grabbed the first book he found and smiled when he saw the title.\n\nThe Count of Monte Cristo.\n\nThat was the first classic he'd ever read, and the only reason he'd read it was having watched the 2002 movie version of the book when he was 16. The plot was thick with jealousy, betrayal, and revenge, and after seeing the movie and reading the book, he was hooked.\n\n\"What it is, Daddy?\" Sadie asked him.\n\n\"It's a lending library. You can take a book or leave one.\"\n\n\"How do you check them out?\" she asked, her only experience being the school library.\n\n\"You don't, honey. It's on the honor system.\"\n\n\"What if someone takes a book and doesn't bring one back?\" she asked.\n\n\"That's the risk you take to try and get people to read books,\" he told her. \n\nHe held up the one in his hand, and Sadie recognized it immediately.\n\n\"That's your favorite, right?\" she asked, knowing it was.\n\n\"It is indeed,\" he said as he gently bonked the top of her head with it.\n\nSadie giggled just as her dad said, \"I think I'm gonna take this home and read it again.\"\n\nThey turned to go the rest of the way up the sidewalk when a very attractive young woman opened the door.\n\n\"Hi, there! Are you the landscaper?\" she asked cheerfully.\n\n\"I am. I'm Aidan Gray,\" he told her with a smile.\n\nHe waited to see if she'd offer her hand to shake, and when she did, he shook it as she told him her name.\n\n\"Nice to meet you, Aidan. I'm Michelle Johnson.\"\n\n\"Michelle. I was expecting someone named Quinn,\" he said, still smiling. \"Oh, and this beautiful girl here is my daughter, Sadie.\"\n\n\"Hi, Sadie!\" Michelle said. \"Your father's right. You are beautiful.\"\n\n\"Thank you. So are you.\"\n\n\"Ahh! That is so sweet. Thank you back!\"\n\nMichelle smiled at Aidan then told him, \"Quinn is my mother. She's out running errands so she told me what she'd like to have done. May I show you?\"\n\nAidan raised the hand with the book in it and said, \"Absolutely. Let me just put this in the truck first, okay?\"\n\n\"I'll do it, Daddy,\" Sadie offered as she took the book and skipped down the walk.\n\n\"What a sweet girl,\" Michelle said.\n\n\"She's pretty amazing,\" Aidan agreed. \"And so is your lending library.\"\n\n\"Oh. Right. My mom's been a high school English teacher all my life, and she'll do just about anything to get people to read. This has been out there for a couple of years now, but it doesn't get a lot business.\"\n\n\"I'd be happy to spruce it up for you. No charge.\"\n\n\"Oh. Wow. I'm sure my mom would love that. If you don't mind then, sure. That would be very much appreciated.\"\n\n\"Consider it done. Just not today,\" Aidan said as Sadie came skipping back up the walk.\n\nMichelle walked them around and said, \"First, my mom would like to have you mow the lawn each week. You know, trimming, edging. All that.\"\n\n\"That's all included in the monthly price,\" Aidan told her.\n\n\"And then the hedges also need to be trimmed. After that just touch them up as needed. Lastly, she'd like some flowers planted along the front of the house and around the mailbox and the lending tree.\"\n\n\"Any particular kind?\" he asked.\n\n\"I think she said SunPatiens. White and red alternating all along the house.\"\n\n\"Got it. Anything else?\"\n\nSadie saw a gecko by one of the windows and was over watching it when Michelle said, \"You don't have a younger brother who's as cute as you are, do you?\"\n\nIt was clearly playful, but Aidan was used to be hit on quite regularly. Kayla hadn't been the jealous type, but that was partly due to her being just as attractive as her very handsome husband. She, too, got hit on\u2014a lot\u2014and neither of them ever once even considered acting on it.\n\n\"No, sorry. I'm an only child,\" he told her with a smile.\n\n\"Me, too. I just graduated from college last June, and although I'm not ready to settle down, the thought of doing so has started crossing my mind.\"\n\nShe smiled then said, \"I did see the ring on your finger, and I wasn't flirting, by the way,\" she added.\n\nAidan looked down for a second then looked back up, smiled, and told her, \"Well, you're a very attractive young woman, Michelle. You won't have any difficulty finding a husband, that's for sure.\"\n\nShe thanked him then said, \"I don't know your wife, but I can tell she's a very lucky woman.\"\n\nAgain, it was an innocent comment, and while 'his wife' occasionally came up, he wasn't nearly as good at handling that as he was with hearing how 'hot' women thought considered him.\n\nAidan reached up and kind of scratched the side of his head, glanced over at Sadie, then told Michelle, \"My wife, she um...she passed away a little more than three years ago.\"\n\n\"I...I'm sorry, Aidan. I didn't mean to sound so glib.\"\n\n\"No, it's okay. I'll take glib over somber any day,\" he told her, the smile back on his face.\n\nHe saw her looking at Sadie and knew why.\n\n\"She's finally doing okay. It's been a tough slog, but she's been incredibly resilient and pretty darn amazing.\"\n\n\"It's not the same thing, and I was a lot older, but my dad walked on us a little over eight years ago when I was 14. It really, really hurt me knowing there was another woman in his life, but my mom was just devastated. She says she's forgiven him, but I know it still bothers her. She's never dated much since, but...anyway, she's my best friend, and whenever you meet her, you'll know I'm telling you the truth when I say she's still a very beautiful woman. If I'm half that pretty at her age, I'll be thrilled.\"\n\n\"I'm sorry for you, too, Michelle, and based on how beautiful you are, I have no doubt your mom is every bit as pretty as you say.\"\n\n\"Thank you, and she is. Trust me on that,\" the younger woman told him.\n\n\"Okay. This was a get-acquainted visit, so if you want to sign a contract, great. Or I can leave it for your mom to sign, and we'll be back the day after that to get started.\"\n\n\"Well, this is Mom's house so yes, she'll have to sign the contract. She'll be back in a couple of hours so you should be able to stop back by anytime this afternoon at your convenience.\"\n\n\"Great. Let me just get the paperwork for you then we'll be on our way.\"\n\nHe grabbed a contract out of the truck, penned in the requested services, then filled in the price before walking it back up to Michelle.\n\nShe thanked him again and promised to make sure her mom saw it as soon as she got home.\n\nAidan then thanked her before calling to Sadie to get ready to leave.\n\n\"Bye, Sadie!\" Michelle told her.\n\n\"Bye! Nice to meet you,\" Said told her as she took her dad's hand and headed back to the truck.\n\n\"If I was into older men...\" Michelle said to herself as Aidan walked away.\n\nIt was a little after noon when her mom got home, and Michelle did make sure to let her know the landscaping guy stopped by.\n\n\"Oh. Wonderful. What did he say?\" she asked.\n\n\"He said...no problem,\" her daughter replied. \"The contract is on your desk in the office.\"\n\n\"Was he nice?\" her mom asked.\n\n\"Oh, yeah,\" Michelle said with an almost evil smile. \"Very nice.\"\n\nHer mom gave her the eye because she knew that meant physically nice.\n\nMichelle shrugged then said, \"What? He's hot. Sorry, but I can't not notice someone that good looking. He's a little too old for me, and he has a daughter, but he's pretty freakin' gorgeous.\"\n\n\"Which means he has a wife,\" her mom said as though Michelle didn't know that.\n\n\"He...did,\" Michelle said quietly. \"He's a widower.\"\n\n\"Oh, my goodness. That poor girl.\"\n\n\"She's very cute and super sweet. Then again, her father is gorgeous so her mom had to be attractive, too.\"\n\nMichelle laughed then said to her mom very dramatically, \"I guess that's why I'm so beautiful, huh?\"\n\nShe struck a pose, and her mom shook her head and tried not to laugh.\n\nWhen Aidan and Sadie drove off, she asked her dad a question.\n\n\"Did you think she was pretty?\"\n\n\"Michelle? Yeah, sure. She's very pretty. Why?\"\n\n\"Well, I was thinking maybe you could ask her out,\" his daughter said. \n\nShe knew that was a touchy subject, but she was old enough to know her father was lonely even though he always told her she was everything he needed.\n\n\"Honey, she said she just finished college. That means she's maybe 22 or 23.\"\n\n\"That's not too young, is it?\" Sadie asked. \"You're only 34 so it's not like it's a big deal, right?\"\n\n\"Yes, but honey...that's more than ten years difference. That's more years than you've been alive,\" her father said hoping she'd understand.\n\n\"But she's a grown woman, Daddy,\" his daughter countered.\n\n\"Yes, but a very young grown woman,\" he said sternly but not meanly. \n\nWhen Sadie didn't respond, he knew she wasn't happy with his answer.\n\n\"Hey! Why would I want to ask her out when I already have the most beautiful girl in the whole wide world right here next to me?\"\n\nSadie smiled then laughed, but her father knew she needed a mother. It wasn't possible for her to have her actual mother back, but if he could find a loving, caring, woman, it would be very good for Sadie. And had to admit it would be good for him, too.\n\nAidan wasn't a religious man, but he'd picked up a few Bible verses along the way, and one came to mind at that very moment. \n\nIt said, \"It is not good for the man to be alone.\"\n\nHe could attest to the truth of that first hand. Being alone, especially when raising a daughter all by himself\u2014stunk.\n\nAfter a long but rewarding day and a reasonably-tasty, well-deserved dinner, Aidan sat down to check the website and noticed an email from Quinn.\n\n\"Sorry I missed you today. My daughter spoke very highly of you, and she loved your daughter! She also told me you took a book from my lending library so that tells me you must be a man of great integrity. (Or maybe that you just like to read.) At any rate, I may be out most of the day again tomorrow so I'll leave the signed contract in an envelope in the lending library. I hope to have an opportunity to meet you at some point in the future. Sincerely, Quinn Johnson.\"\n\nHe smiled at the 'maybe you just like to read' comment then went on to the other emails before making up his list of places to go to the next day and in what order to save time and gas.\n\nIt was a little after nine when Sadie was finally in bed, and Aidan settled in with his 'new' book. He'd read it several times, so he didn't read it page for page, but he did more than just skim it, reading his favorite passages verbatim while recalling the highlights of the story as he went. \n\nWhen he finished it was nearly eleven o'clock, and he was exhausted. Even so, he grabbed a pen and a piece of paper and jotted down a personal note before placing the paper inside the book.\n\nWhen he and Sadie got to the Johnson residence the following morning, no one was home so Aidan replaced the book with his note sticking up high enough to see and found the envelope with his name on it. He opened it to make sure it was signed then smiled when he saw a handwritten note along with the contract.\n\n\"I noticed you chose The Count of Monte Cristo. There are only a handful of books I've enjoyed more over the years. I hope you found it as wonderful as I have each time I've read it. Quinn.\"\n\n\"What are you looking at, Daddy?\" Sadie asked when she noticed he wasn't moving.\n\n\"Oh. Just a very nice note from the homeowner. Evidently, she likes The Count of Monte Cristo as much as I do.\"\n\nSadie wasn't all that excited about his find so he put the note away and pulled out the other piece of paper and waved it.\n\n\"You ready to rock and roll, kiddo?\" he asked her as he showed her the signed contract.\n\n\"Let's do this!\" she told him.\n\n\"Okay. You mow and I'll start edging and trimming.\"\n\n\"Copy that, good buddy!\" she said again before skipping back to the truck.\n\nSadie still needed some help unhitching the tailgate, but once it was down, she could drive the riding lawnmower off all by herself. That saved her father several minutes at each house, time he used to get a jump on his part of the job. \n\nOf course, that wasn't all he'd be doing. There were the hedges to trim and he needed to prep the areas where she wanted flowers, and he'd promised to touch up the lending library box. He'd go pick up the flowers and the paint tomorrow morning and come back and plant them and take care of the box. But for now, they had a full plate with the rest of the yard, and a full slate of other jobs to get done.\n\nQuinn came back less than ten minutes after they left and took a look at their work.\n\n\"Not bad at all,\" she mused.\n\nJust to be sure, she walked down to the area where her library and mailbox were side by side then peeked into the former and noticed the envelope was gone and that her book had been returned. She saw a piece of paper sticking up and pulled the book out then opened to the page where the paper was.\n\nWhen she saw it was handwritten, she smiled. She set the book back inside then opened the note and smiled again. It began with a quote then a summary of the book's main points.\n\n\"'Live and be happy, beloved children of my heart, and never forget that, until the day comes when God will deign to reveal the future to man, all wisdom is contained in these words: Wait and Hope!\n\nSigned, Edmond Dantes\"\n\n\"I'm impressed,\" Quinn thought. \n\nOf all the things Edmond Dantes, who later became The Count of Monte Cristo, learned in life, patiently waiting while never losing hope was perhaps the greatest of virtues. Years of holding a grudge then carefully planning and exacting his revenge only left him cold and lonely. He also learned, after sparing the life of the man hell-bent on sending him back to prison, that mercy was far more satisfying than revenge.",
        "She wasn't so much impressed because what her landscaper had written was particularly astute, as anyone familiar with the book would know that. It was more that he cared enough to take the time to share a favorite quote from this classic tale.\n\nLater that evening, she saw the note laying on her desk and decided to pen a reply not knowing whether or not 'her Edmond Dantes' would ever read it.\n\n\"Dear Monsieur Dantes,\n\nIt is such a pleasure to know there are still men of letters among us. Too few value the written word which can be held in one's own hands, deliciously savoring each word as first one page and then another gets turned.\n\nYes, patience, hope, and mercy are indeed virtues. However, I must say that in spite of waiting patiently for many years for love to find me, I fear I find myself losing hope. Perhaps Fate shall be merciful to me and bless me with the most wonderful of blessings before my time is up on this earthly plane.\n\nSincerely, Merc\u00e9d\u00e8s Mondego.\"\n\n\"Gee, get melodramatic much, Quinn?\" she said to herself when she reread what she'd just written.\n\nBut it was all in good fun, and were this 'Dantes' to find the exchange pleasant, it might be rather enjoyable. So she refolded the note then placed it in another envelope on which she wrote 'For Edmond Dantes's Eyes Only' then put it back in the box outside on her way out of the house early the next morning.\n\nAidan and Sadie stopped at the nursery with which he had an agreement to buy from exclusively in exchange for a 10% reduction in price, and picked up the SunPatiens. They were already looking great, and after planting them with some potting soil and fertilizer, they'd grow to large, full plants that would look beautiful against the house and around the mailbox and, of course, the lending library. They made a quick trip to the hardware store and bought two different colors of paint and two small brushes, as well.\n\nAidan and his daughter carried all the plants into the yard and staged them before they started planting to make sure the distance between them was equal and that the row along the front of the house would be straight. But after that and before doing the planting, Aidan went to the library box, opened the door, and saw the envelope and smiled.\n\n\"What is it, Daddy?\" Sadie asked when she saw the big smile.\n\n\"Oh, nothing really, honey. It just seems like someone else is a fan of my favorite book.\"\n\nSatisfied with his answer, Sadie began digging out nice, round, symmetrical holes so her father could come and drop the root ball in without having to do any additional work. Her attention to detail at such an early age was something Aidan never took for granted and told her again how nice the row of holes looked when he got ready to do his part.\n\nShe smiled and ate up the praise, something Sadie valued almost as much as anything else in her life. Her dad really was her whole world, and she genuinely loved helping him make someone's yard look better or getting things to grow like the beautiful flowers they were planting.\n\n\"What do you think?\" her father asked as they stood on the sidewalk looking at their handiwork.\n\n\"I think we did a great job,\" she told him.\n\nHe put his arm around her, pulled her close then said, \"We. You got that right. Because we are a team!\"\n\n\"And there's no 'I' in team!\" Sadie said, knowing that was how one responded to a positive comment about 'we'.\n\n\"Okay. Let's touch up this lending box and blast out of here!\" he said.\n\nSadie carefully painted the box while her father redid the letting which required a steady hand. It only took a few minutes, but the difference was amazing. Once again, they stepped back and checked their work.\n\nSatisfied it was more than satisfactory, Aidan said, \"Nice job\u2014again! You ready to rock and roll?\"\n\n\"Let's get 'er done!\" his daughter said cheerfully.\n\nAidan knew she'd be back in school on Monday, but for now, he was enjoying every minute he could with his beautiful daughter. \n\nWith the envelope from Quinn securely inside a folder that wouldn't get dirty, the team headed to their next address which Sadie programmed into the Maps App, and off they went.\n\nThat evening, Aidan found himself thinking about the note several times, and almost couldn't wait until Sadie went to bed to respond to his 'Merc\u00e9d\u00e8s Mondego', the woman Dantes had loved and who later lost hope and married his rival, after Dantes's false imprisonment.\n\nWhen he the time came where he could sit and compose his thoughts, he smiled as he wrote:\n\n\"Dear Merc\u00e9d\u00e8s,\n\nI'm not sure if you're referring to our little charade as to losing patience with finding love or your own personal life, but my hope is that it's the former and not the latter. If not, I wish you Godspeed in finding it, as I, too, have been waiting patiently for the same thing\u2014a thing I once had but lost as Fate saw fit to take it (and her) from me.\n\nOf the many virtues, love is, in my most humble opinion, the greatest of them all. I am blessed to receive it from my beautiful daughter, Sadie, but the truth is both of us would very much enjoy having the love of a woman in our lives again. So if you are indeed searching for your own Edmond Dantes, may Fate shine upon you.\"\n\nHe thought about signing it as Dantes again but decided to use his own name.\n\n\"Sincerely, Aidan Gray, your humble servant in all things green. (And other colors, as well.) \n\nP.S. Sadie and I hope you enjoy the SunPatiens.\"\n\nHe wasn't scheduled to go back to her house for another week, but they had a job just one street over the following afternoon so Aidan swung by the Johnson residence to drop off the note complete with a fresh page for 'Merc\u00e9d\u00e8s Mondego' to use in her reply.\n\nAidan was unaware Quinn was home or that she saw him jump out of the truck, open the library door, and set the envelope inside. She'd knew from Michelle the landscaper was an attractive man, but she had no idea he was that attractive. He was clearly much too young to be a potential suitor, but he was definitely a very good looking man, and that included his backside which she shamelessly watched as he turned around and got back in the vehicle.\n\nShe waited a few seconds for him to drive out of sight then walked down to the mailbox area and took a careful look at the professional-looking job he'd done on the library box before opening it up.\n\nShe saw the envelope and couldn't help smiling before picking it up. She forced herself to wait until she got inside to read it, but did so as soon as she sat down.\n\nHer first thought was why in the world she'd said anything about something as personal as feeling lonely, and yet his reply not only didn't make her feel guilty for it, it made her feel...hopeful. \n\nQuinn had all but given up on ever finding someone. For the first year after she learned of her now ex-husband's affair she'd been so angry and hurt she'd been unable to date. For the next couple of years she'd been 'gun shy' to the point of making it impossible to trust anyone enough to open herself up to him. \n\nSince then she'd found that the men who were interested in her were either uninteresting to her or only looking for sex. And as much as she missed lovemaking, she had no interest in a relationship that was purely sexual. It made no difference to her how many other women (of any age) were into 'hooking up'. For Quinn, sex was the 'crowning glory' of intimacy between a man and a woman, and she wasn't about to settle for the physical without the emotional although lately she was beginning to wonder how much longer she could cling to her 'high horse' for comfort.\n\nSo for the last year or so she'd focused on herself. She'd been blessed with good skin and beautiful hair as well as an amazing smile. Her body was still more than acceptable, but she joined a gym and hired a personal trainer and now enjoyed the benefits of a very fit, very toned body. She still had no one to share it with, but these simple words from a man she didn't even know made her feel, like Edmond Dantes, that if she would remain patient and not lose hope, Fate might just smile down upon her.\n\nShe sighed deeply as she considered her reply then reached for a pen and began to write.\n\nAt no point did it ever occur to Aidan that the mother of a 20-something year old woman would be someone with whom he might one day have a relationship, but he did spend some time thinking about how much he enjoyed this unique form of correspondence.\n\nThey had no jobs near Quinn's house the following day and the day after that was Sunday, and Aidan wanted to spend it with his daughter before she went back to school. It was a little after five in the afternoon when he asked Sadie what she wanted to do for dinner.\n\n\"Can we go to Outback?\" she asked as though it was too much to ask.\n\n\"Are you kidding? After all the work you did this week? Shoot, we can go anywhere you want, girlfriend!\" he told her.\n\nSadie loved their 'chicken on the barbie' as well as their delicious shrimp, and they hadn't been there in many months, so her father was more than happy to take her.\n\nThey technically lived in Jacksonville, but they were very close to the town of Orange Park, know mostly for Senator John McCain having lived there at one time. Most of their lives revolved around Orange Park, and they did everything they could to avoid going into downtown Jacksonville. There was an Outback on Wells Road right across from the Orange Park Mall, and that's where they headed.\n\nQuinn lived in a development not too far from there, and when they left around 6:30pm, Aidan asked if it would be okay if they went and checked the lending library.\n\n\"Why wouldn't it be?\" Sadie asked with a smile. \"I know you like getting those love notes.\"\n\n\"Love notes? Hold on their, partner. What makes you think they're love notes?\"\n\nSadie giggled then said, \"Because I see the way you look when you get one.\"\n\n\"Okay, I'll admit I enjoy reading them, but I don't even know the woman who's writing them.\"\n\n\"What if she's pretty and nice?\" Sadie asked as they walked out to their car.\n\n\"What if she is?\" her father asked.\n\n\"Well, you could ask her out. On a date.\"\n\n\"Um, yeah, except for one thing,\" he said as he opened her door for her.\n\n\"What's that?\"\n\nHe went around and got in while Sadie put on her seatbelt then said, \"The opposite of her daughter.\"\n\nIt took her a second, but Sadie got it.\n\n\"So...she's too old?\"\n\n\"Bingo!\" her father said. \"Michelle is 22 or so, right?\"\n\n\"Yes.\"\n\n\"And I'm 34, correct?\"\n\n\"Uh-huh.\"\n\n\"So we need someone who's say...no younger than 30 and no older than 38. Or maybe...40. And if this very nice lady has a 22-year old daughter, she has to be at least 45. Got it?\"\n\n\"Got it,\" she said without conviction. \n\nBut just seconds later, as her dad was starting the car she said, \"But why? Why does she have to be that age?\"\n\nAidan looked over at then put the car in gear and pulled out of the parking spot and slowly made his way to Wells Road.\n\n\"Um, well. Lemme see. I guess it's because anyone too young or too much older would have a whole different set of life experiences.\"\n\nHe could tell Sadie was confused so he tried to explain.\n\n\"If she was say, Michelle's age, I wouldn't know the people she knows. Not friend wise, but famous people. Like singers and what not. I'd always be asking, 'Who?' and she'd do the same with me when I talked about a song or a movie I like.\"\n\nThe puzzled look on his daughter's face disappeared, but another question surfaced.\n\n\"But what if she liked the same things you like? You know, like old books and stuff?\"\n\n\"Oh, is that what you think I like. Old books?\"\n\nHe reached over and tickled her ribs as he said, \"Sounds like you're saying I'm old!\"\n\n\"Daddy! Stop!\" she said as she shrieked with laughter.\n\nHe was driving and couldn't keep tickling her anyway, and once she stopped laughing, Sadie said, \"Okay. I'm not saying you're old, Dad. I'm just saying you like...old stuff.\"\n\nHe gave her a fake, snarling, mean look and got another laugh before she finished her thought.\n\n\"But what if the girl\u2014or the woman\u2014likes old stuff, too? What if she knows about your old music and your old books and your other old...\"\n\n\"Oh, that's it! You are so getting tickled!\" her father said as he made a 'claw' out of his right hand then opened and closed in as menacingly as he could.\n\nHe loved that his little girl was still young enough to be amused by his silliness, and although he wanted her to grow up to be a strong, independent woman, he could get sad pretty quickly just thinking about her no longer needing him in just a few short years.\n\nSadie shrieked with laughter again then said, \"Okay, okay! Your stuff isn't old. And you're not old, either!\"\n\n\"That's more like it!\" Aidan said as he slowly retracted 'the claw of death'.\n\nHe saw Sadie smiling then said, \"What? What are you thinking over there?\"\n\n\"The stuff you like isn't\u2014old. It's just...not very new.\"\n\nHe brought the 'death claw' back to life and got another happy howl of laughter as they turned onto the street where Quinn lived.\n\n\"I see her house,\" Sadie said, pointing down the road.\n\n\"Ah, yes. The newly-painted lending library. It does look good, huh?\"\n\n\"Yes, it does!\" she agreed.\n\n\"I'll just hop out and see if there's anything...old...in there for me,\" he said as he pulled over as Sadie stayed in the car, laughing again.\n\nHe left the engine running, got out, then walked up to the box and opened the door. Having forgotten all about their previous written conversation, Aidan smiled happily when he saw the note. He reached in and grabbed it, and just as he was closing the little door, a car pulled into the driveway.\n\n\"Well, well. Look who it is,\" he heard a female voice say.\n\nHe turned around and saw Michelle and smiled.\n\n\"Hello, there. I uh, I was just checking,\" he said as he held up the envelope.\n\n\"I told my mom that was you,\" she said.\n\nMichelle leaned back, and that's when Aidan noticed there was someone in the passenger's seat. That person leaned forward and looked his way, and when she did, Aidan stopped smiling as she said 'hello'.\n\nHis first thought was the woman looking at him had to be someone else, and that Michelle's reference to her mother had nothing to do with the passenger in her car. But when the passenger spoke to him, it was obvious it was, and he was even more befuddled as his brain tried to reconcile the way she looked with the way he'd assumed she'd look.\n\n\"So you're the modern-day Edmond Dantes. I'm so glad to finally meet you!\" the woman who was obviously Quinn Johnson said.\n\nAidan bent over a bit, smiled, then said, \"Yes. You, too, Madame Mondego.\"\n\nShe laughed then said, \"I've very much enjoyed our little back and forth.\"\n\n\"Oh. Um...same here,\" he told her. \"We were just out to dinner and in the neighborhood, and I wanted to see if maybe there was another note from my new...pen pal.\"\n\n\"We just had dinner ourselves. Would you and your daughter care to come in and have some dessert with us?\" Quinn asked.\n\nAidan's brain had finally accepted the fact that this woman, who was much younger looking than he could have possibly imagined, was indeed Michelle's mother and not her older sister. He also had to admit she was every bit as attractive as Michelle had assured him she was and possibly even more.\n\n\"Well, I don't want to put you out or anything,\" he replied.\n\n\"Nonsense! You're not putting anyone out, and I'm dying to meet that little girl of yours,\" Quinn said. \"Please come in. We won't keep you long. I promise.\"\n\n\"Well, okay. Let me pull up closer to the curb and we'll come on up.\"\n\n\"Wonderful! And you're welcome to pull in behind us if you'd like,\" she offered.\n\nAidan nodded then let Michelle pull up a little further but decided to stay on the street rather than back up and move just to make things easier.\n\n\"Hey, kiddo. We've been invited in for dessert. Is that...\"\n\nBefore he could finish, Sadie undid her seatbelt and was getting out.\n\n\"Hold on a sec, okay?\" her father said with a smile. \"At least et me turn the engine off first, okay?\"\n\nSadie hopped out once he did and immediately and went to the driveway to wait for her dad. But as soon as she saw Michelle, who had her arms out for a hug, the girl ran to her.\n\n\"Hey, sweetie!\" Michelle said as they hugged. \"I want you to meet my mom, okay?\"\n\n\"Okay,\" Sadie said as her father came up to where they were standing.\n\n\"Sadie, this is my mother, Quinn Johnson. Mom, this beautiful girl is Sadie...\"\n\n\"What's your last name again?\" Michelle asked.\n\n\"Gray,\" Quinn said as she bent down to hug her, too. \"It is Gray, isn't it?\"\n\nShe remembered it from the website and knew it was. She just wanted to make sure.\n\n\"Yes,\" Sadie told her as they hugged, too.\n\n\"And this is our landscaper, Aidan...Gray,\" Michelle said to her mom without taking her eyes off the handsome, older man.\n\n\"It's a pleasure to finally meet you,\" he said not sure if she'd offer him her hand.\n\nTo his pleasant surprise she opened her arms for a hug, and Aidan accepted the offer.\n\nAs they separated, Quinn said, \"Michelle told me you were a very handsome young man, and I have to say she was right.\"\n\nAidan thanked her then said, \"She also told me you were a very beautiful woman, but I had no idea just how beautiful.\"\n\nQuinn made a kind of 'pfft' noise but thanked him for being so polite.\n\n\"No, your daughter definitely downplayed your beauty, Madame Mondego,\" he said with a slight bow.\n\nQuinn laughed then looked at Sadie and said, \"Your father is quite the charmer.\"\n\n\"And he's single,\" Sadie said causing all eyes to open and the two women to laugh while her father stood there in stunned silence.\n\n\"Um, okay. So now that that's settled,\" Aidan said.\n\n\"Well, it's true, Dad,\" she told him.\n\nHe put his hands on his daughter's shoulders, smiled at Quinn and Michelle, then shrugged his shoulders.\n\n\"She reminds me of you, honey,\" Quinn said to her daughter.\n\nMichelle gave her the eye then said, \"Oh. Because we're both so beautiful, huh?\"\n\nSadie giggled as Quinn said, \"Uh-huh. Sure. Let's go with that.\"\n\nShe got a little more serious then said, \"I really am glad to meet you, Aidan. Let's get inside and we'll see about that dessert, shall we?\"\n\nAidan told her that sounded nice then got a better look at her as she passed in front of him behind the car. He was still trying to make the math work starting with Michelle's age, but the very nice looking woman who just walked in front of him made it impossible to do so. \n\nAs they continued up the sidewalk to the porch, he noticed she was very nicely dressed, as well, and that she still wore her hair long. It wasn't to the middle of her back the way her daughter's was, but it was touching her shoulders and looked distractingly sexy to him. As did her face and her...\n\n\"So what grade are you going to be in, Sadie?\" Quinn asked, interrupting her dad's thoughts.\n\n\"Fifth,\" she told her.\n\n\"That's the grade I'll be teaching,\" Michelle said. \"I taught second grade last year, and got moved to fifth which is what I wanted.\"\n\nSadie loved school and couldn't wait for it to start, but she also hated being away from her father.\n\n\"What school do you teach at?\" Sadie asked.\n\n\"Orange Park Elementary,\" Michelle told her, \"and my mom teaches English at Orange Park High School.\"\n\nThey filed through the door after Quinn unlocked it. It was already too warm to wear a jacket so there was no need to be concerned with where to put them.\n\nOnce inside, Aidan got an even better look at Quinn and found himself staring for a moment. When she looked at him, she smiled, causing him to break eye contact then say, \"You have a very nice home, Quinn.\"\n\n\"Thank you, and thank you for the lovely flowers. They look so nice every time I drive up and see them.\"\n\n\"This young lady did all the hard work,\" he told her as he again put his hands on her shoulders.",
        "\"Really? That's very impressive,\" Quinn told her.\n\n\"She also does the mowing when she's out of school.\"\n\nQuinn bent down a little then said, \"May I see your driver's license, please?\"\n\nSadie giggle loudly then told her, \"I can only drive a mower. Or a go-kart.\"\n\nThe go-kart reference made Quinn laugh, and when she did, Aidan saw a smile that was as beautiful as her face.\n\n\"No golf cart?\" Quinn asked.\n\n\"I don't know? Dad? Can I drive a golf cart?\"\n\n\"If we had one,\" her father said as Quinn asked them to have a seat.\n\n\"What could I get you for dessert?\" Quinn asked. \"We have chocolate ice cream...\"\n\n\"Um, no. Sorry, Mom. We don't,\" Michelle said with an 'oops' kind of smile.\n\n\"We both love chocolate,\" Quinn said. \"I believe we have some cheesecake.\"\n\n\"That we do have,\" her daughter said. \n\n\"I love cheesecake!\" Sadie said.\n\n\"That sounds nice,\" Aidan told her.\n\n\"I'll get it, Mom. It's the least I can do.\"\n\nQuinn laughed then said, \"I'm just so fascinated to find someone\u2014anyone\u2014who enjoys the classics. Or is it just that particular book?\"\n\n\"No. I'm a book nerd. I love to read, and the classics are my favorites.\"\n\n\"My dad majored in literature at The University of Florida,\" Sadie proudly announced.\n\n\"A fellow Gator! How wonderful!\" Quinn replied with genuine delight.\n\n\"Michelle said you teach English, and I believe you told us where,\" Aidan said.\n\n\"I do and yes, I did,\" she said with a smile. \"I'll be starting my 24th year, twenty of them at OPH.\"\n\nAidan tilted his head as he looked at her, his brain back at it, trying to make the numbers work.\n\n\"Twenty-fourth year, huh?\" he asked.\n\n\"Yes. And, as you just heard, Michelle will be a second-year teacher,\" she said just as proudly.\n\n\"Oh. I...I guess I'm having a hard time believing you could possibly have been teaching that long,\" he said with a smile as he continued looking.\n\nHer skin was soft and smooth and there were only the faintest creases around her eyes.\n\n\"Well, I'm taking that as a compliment,\" she replied with a smile of her own. \"May I ask how long you've been doing landscaping?\"\n\nMichelle walked back in with dessert then asked if anyone would like coffee or a glass of wine. Or milk for Sadie.\n\n\"Yes, please,\" she said to milk while her father opted for coffee.\n\n\"Me, too, honey,\" Quinn said.\n\n\"Okay. Three coffees coming up. Cream and sugar, Aidan?\"\n\n\"No, thank you. Black is fine.\"\n\n\"Sorry. To answer your question,\" Aidan continued, \"I started landscaping in high school. I continued working during summer breaks then went to work full-time for the company I now own right after graduation twelve years ago.\"\n\nHe smiled then said, \"As much as I love literature, there isn't a whole lot of money in it. Then again, I'll never get rich landscaping, but I do enjoy it, and I have someone else depending on me.\"\n\nSadie looked up at and smiled when he winked at her.\n\n\"She is such a lovely girl. And evidently very talented,\" Quinn said as she smiled back. \n\nShe looked at Sadie then asked her, \"Do you enjoy reading?\"\n\n\"I love to read!\" she said immediately.\n\nQuinn leaned closer then said, \"Me, too!\"\n\nThe coffee arrived within another minute or so, and the conversation took a back seat to the delicious dessert.\n\n\"This is so good!\" Sadie said after taking a first bite.\n\nQuinn laughed then said, \"Don't tell anyone but I bought it at Outback.\"\n\n\"That's where we just ate!\" Sadie told her.\n\nHmmm. \"The coincidences are piling up fast around here!\" Quinn said as Michelle sat down next to her.\n\n\"Yes, they are,\" Aidan agreed. \"A love of good books, we're both Gators...\"\n\n\"Me, too!\" Michelle chimed in saying.\n\n\"Even better,\" Aidan said. \n\n\"And we all love Outback cheesecake!\" Sadie said before her father could.\n\nA round of polite laughter followed her comment before Quinn asked Aidan another question.\n\n\"Have you ever considered teaching?\"\n\n\"No, not really. I have thought about it but only in passing.\"\n\n\"It doesn't appeal to you?\"\n\n\"I don't think I'm cut out for dealing with the behavior. If I could do nothing but teach and only teach what interests me, I'm pretty sure I'd enjoy it. But it's everything else that goes into it I would have a hard time with.\"\n\nHe paused then asked Quinn, \"Have you always enjoyed your job?\"\n\nShe smiled then said, \"Not every day of every school year. Most of those bad days are directly attributable to what you just described. Bad behavior, sarcasm, snide remarks, and I've was even pushed around once.\"\n\nAidan winced and Sadie was shocked.\n\n\"Someone pushed you?\" she asked, unable to believe that.\n\n\"Just once, honey. And it wasn't something that hurt me. But yes, I did get pushed once.\"\n\nShe looked back at Aidan then said, \"But I do love the teaching part. I thoroughly enjoy putting a lesson plan together and watch it unfold accordingly. And when students 'get it', that's something I still find immensely rewarding.\"\n\n\"I'll just say I'm truly grateful to all teachers. Anyone who can spend their days around other people's children and enjoy it has my full support.\"\n\nQuinn laughed then said, \"You're a delightful young man, Aidan.\"\n\nShe smiled at Sadie and added, \"With a very delightful daughter.\"\n\n\"What am I? Chopped livuh?\" Michelle said trying to do an accent from New York or maybe New Jersey.\n\n\"What's chopped...livuh?\" Sadie asked drawing another round of polite laughter.\n\n\"Whatever,\" she said, shaking her head before taking another bite of cheesecake.\n\nThey chatted for another fifteen minutes or so and slowly savored the dessert as they did. \n\n\"Well, we've probably taken up enough of your evening,\" Aidan said during a lull in the conversation.\n\n\"No. Not at all,\" Quinn told him. We invited you in, and this has been very pleasant. Please don't rush off on our account.\"\n\n\"That's very kind of you, but we have school tomorrow, and...\"\n\n\"Yay for school!\" Sadie said causing Quinn's eyes to open wide.\n\n\"I love school!\" the girl told her. \"And I get to see all of my friends.\"\n\n\"Ah, yes. That is one of the best parts about it, huh?\" Quinn said with a smile.\n\n\"But I don't get to see my best friend until he comes to pick me up.\"\n\n\"I've never put Sadie in daycare. I let her stay in the truck with the AC running while I work so she can do her homework.\"\n\n\"And then when I finish I help my Dad until we go home,\" Sadie explained.\n\nQuinn knew why Sadie couldn't be left at home by herself and had no desire to mention that when they were having such a good time. When Sadie did, she was more than a little surprised.\n\n\"My mom died three years ago, so I can't stay at home by myself yet after school.\"\n\nThere was no sadness in her voice, she was just a young girl sharing a fact and trying to be a part of the conversation.\n\n\"I know, honey. I'm so sorry.\"\n\n\"Me, too, but my daddy loves me enough for two people,\" she said sounding like she was repeating something her father had told her.\n\n\"I try,\" her dad said before saying to Sadie, \"Come on, kiddo. Let's get ready to go home.\"\n\nSadie thanked Quinn for the cheesecake and Michelle for serving it.\n\n\"You are so well mannered, too!\" Quinn said before telling her she was very welcome.\n\n\"Yes, thank you so much. That was delicious,\" Aidan made sure to say.\n\n\"It was so nice meeting you. I've always dreamed of meeting a real-life Edmond Dantes. Were I ten years younger...\"\n\nAidan laughed politely then said, \"I'm not going to even try and guess your age, but you look amazing no matter what that number might be.\"\n\n\"I see where Sadie gets her manners from,\" Quinn said with a smile. \"And thank you for saying that.\"\n\nAidan shook his head then said, \"No. I'm very serious. I'm 34 and you can't be that much older than me. And yet you obviously have a daughter who's out of college so...\"\n\n\"And I've taught for 23 years. So add that to my daughter's age, and you'll be very close,\" Quinn said before he could finish, still smiling happily.\n\n\"I have no reason to doubt you,\" Aidan said. \"Well, until I look at you. Then, none of that makes sense.\"\n\n\"Oh, listen to you!\" Quinn said. \n\n\"I told you my mom was beautiful, right?\" Michelle reminded him.\n\n\"You did. I just had no idea how beautiful,\" he said again.\n\n\"Okay, you're going to make me blush,\" Quinn said, even though she never did. She was just genuinely enjoying his kind words and yes, she was very much aware of just how good looking he was, too.\n\n\"My dad is very handsome,\" Sadie said, surprising everyone, but no one more than her father.\n\nHer dad grimaced but both women said, \"She's right about that.\"\n\n\"And he's single,\" Sadie said again.\n\n\"Okay. That's it for us!\" Aidan said a little more loudly as he gently nudged his daughter toward the door.\n\n\"Well, I think it's very sweet that she cares so much about her daddy,\" Quinn said in Sadie's defense.\n\n\"I do care, and I don't want him to be lonely,\" she told Quinn.\n\n\"Did you put something in the cheesecake?\" Aidan teased before saying to Sadie, \"and I'm not lonely, remember?\"\n\n\"Dad? I don't count,\" she told him as they stood in the foyer.\n\n\"Um, sorry, but yes you do. You count for everything to me, and don't you forget that.\"\n\nSadie smiled at her dad who leaned down and kissed her on the forehead.\n\nAs they all walked out on the porch Michelle asked Sadie to show her what they did to the lending library box.\n\n\"Come on!\" the little girl said as she reached for her hand.\n\n\"Sorry,\" Quinn told Aidan. \"I believe my daughter has the same idea as yours. She's just a bit more subtle.\"\n\n\"Ah, okay. I was wondering what she wanted to see all of a sudden when we repainted it days ago.\"\n\n\"I do apologize, Aidan. The only positive thing I can say is I love that my daughter is still concerned about me.\"\n\n\"I agree. I'd be lost without Sadie.\"\n\n\"Oh, I know what you mean. Michelle's been my rock and my best friend through thick and thin. And, well, I have to admit she's right about one other thing, too.\"\n\nAidan raised his eyebrows in anticipation of an answer but didn't speak.\n\n\"Well, you are a very attractive man, and I have to admit I've thoroughly enjoyed our exchanging notes. I don't suppose that will continue now that the bloom is off the rose so to speak.\"\n\n\"I hope you don't mean that in the 'now that you've met me' sense,\" he told her.\n\n\"Let's be honest. It's one thing to pretend and imagine. It's quite another to do so once you know the truth. And now you know I'm no Merc\u00e9d\u00e8s Mondego.\"\n\n\"If I had more time I'd dispute that point,\" Aidan told her with a smile. \"I will say, though, that I'm no Edmond Dantes.\"\n\nQuinn laughed then told him, \"I will definitely dispute that. You're every bit as handsome as Jim Caviezel who played Dantes in the movie remake.\"\n\n\"I'll take your word for that, but I was referring to the Count's fortune. In that respect I'm nowhere even remotely close.\"\n\n\"That would be near the bottom of my concerns were there any possibility of, you know, you and I ever...\"\n\n\"Isn't there?\" he asked. \"A possibility?\"\n\nQuinn smiled then said, \"You majored in literature, but you also know basic math quite well, Aidan. It's no secret I'm, well, quite a bit older than you, and because you are such a good looking guy, I would have to say the answer is clearly 'no'.\"\n\n\"Dad? Are you coming?\" Sadie called, interrupting their conversation.\n\nHe waved at his daughter then said, \"I know we just met, Quinn, but we have something in common that's very important to us.\"\n\n\"Classic literature?\" she said even though she knew that's what he meant.\n\n\"No. Outback cheesecake,\" he said with a straight face.\n\nQuinn laughed loudly enough that she covered her mouth and looked around as though her neighbors might be offended at the noise.\n\n\"Sorry. I couldn't resist,\" Aidan told her. \"But seriously, couldn't we at least, I don't know, maybe get together sometime and maybe see...what other books we both love?\"\n\nQuinn stood there just looking at him for a few seconds then, against her better judgment said, \"You know what? I think that might be nice.\"\n\n\"Really? Okay. I'll um...I'll call you, if that's all right.\"\n\nShe smiled sweetly then said, \"That...that also sounds very nice. Yes, please do.\"\n\n\"Dad! Are you coming?\" they heard again.\n\nAidan used his thumb to point over his shoulder toward the mailbox as he said, \"I think that's my cue to leave now.\"\n\nQuinn laughed quietly then told him what a genuine pleasure it had been meeting him and his daughter.\n\nAidan thanked her, returned the compliment then said, \"I had a really nice time tonight, Quinn.\"\n\nShe smiled yet again then told him, \"I did, too. This was very enjoyable.\"\n\n\"Well, okay. I need to run, but I will definitely call you. Soon.\"\n\n\"I'll look forward to it, Aidan. Have a wonderful evening.\"\n\nShe looked down the sidewalk, waved to Sadie then told her, \"It was lovely meeting you, Sadie.\"\n\n\"You, too!\" she called back as she also waved goodbye.\n\nMichelle told them both how glad she was they'd gotten together, and Aidan said the same to her. \n\nThen he leaned closer and said, \"Oh, your mom said she knows what you're doing.\"\n\nMichelle laughed, looked up at her mom, then told him, \"She's mentioned 'her Dantes' several times, Aidan. I know you could date anyone you want, and my mom probably isn't one of those women, but I can't help but think you two have a lot in common.\"\n\nHe smiled then told her, \"That's true. We do. And just so you know, I'm glad you gave us a few minutes to talk privately.\"\n\nMichelle didn't reply, but she did smile and wished both Aidan and Sadie a pleasant evening before heading back up the sidewalk.\n\n\"Aidan said you saw right through me,\" Michelle told her mom with a smile as she stepped onto the porch.\n\n\"Oh, please. You couldn't have been more obvious, honey.\"\n\n\"Okay, but did it work?\"\n\n\"Work? What do you mean\u2014'work'?\" her mom asked not wanting to give her the satisfaction of knowing it had.\n\n\"You know exactly what I mean, and you know I only want you to be happy. Right, Mom?\"\n\nThey waved goodbye as their visitor's car drove off then went back inside. Michelle stayed for another hour and just before she left, her mom spilled the beans.\n\n\"Now don't get any wild ideas, okay?\" Quinn began.\n\n\"About?\"\n\n\"Well, Aidan asked if I might like to get together sometime to maybe discuss other books we enjoy as much as The Count of Monte Cristo.\"\n\n\"Mom! That's so great!\" her daughter said as she put her arms around her mother and hugged her.\n\n\"What's that all about? It's just sitting down to talk. It's not even a date. Okay?\"\n\n\"Uh-huh. Sure. Okay. Whatever you say, Mom. No date. Just talking.\"\n\nMichelle's eyes were dancing and there was a huge smile on her face.\n\nQuinn shook her head as a way of minimizing her daughter's runaway enthusiasm then said, \"Goodnight, sweetheart.\"\n\n\"Goodnight, Mom. And even if it isn't a date, I'm very happy for you,\" she told her.\n\n\"Ugh! Go home, daughter of mine!\" her mom said.\n\nThe telltale smile her mother was trying to hide said it all. It didn't mean romance was in the air, but it was obvious her mom was looking forward to seeing her handsome landscape professional again.\n\nMichelle hugged her again then kissed her on the cheek and said, \"Love you, Mom.\"\n\n\"I love you, too, honey,\" Quinn said sincerely, thankful beyond words to have her in her life.\n\nOn their way home Sadie asked, \"Dad? Are you mad at me?\" when he hadn't said a word since they got in.\n\n\"What? Mad at you? No. Why would you even think that?\" he replied.\n\n\"Well, because I kept hinting around about you being single and...\"\n\n\"And?\" her father asked.\n\n\"And I know you're lonely. You always tell me you're not, but I know you are. And that makes me sad,\" Sadie told him as she looked him while he drove.\n\nHe reached over for her hand and squeezed it then smiled.\n\n\"I know, honey. But grownups have to decide who they like and go out with. But I'm not mad, okay?\"\n\n\"Okay,\" she said with a smile. \"But do you at least like her a little bit?\"\n\n\"Like her? Like who?\" he asked pretending he had no idea.\n\n\"You already told me Michelle was too young, so the only other person is her mom,\" Sadie informed him. \"So...duh.\"\n\n\"Oh. Okay. You must mean Quinn.\"\n\n\"Yes. Quinn. She's really nice, and she's very pretty. So don't you like her even a little bit?\"\n\nAidan looked over at his daughter then said, \"Sure. I like her. But not like that.\"\n\n\"Oh,\" Sadie said, the disappointment obvious.\n\n\"But we are going to get together again and discuss old books and other really exciting things like that,\" her dad said way too enthusiastically.\n\nHis melodrama got the laugh he wanted, and when Sadie smiled at him, all was right with the world. \n\nExcept for the fact that his daughter was right. He was indeed a very lonely man, and although he really only had meant getting together again with Quinn to discuss literature, he knew there was a part of him that found her far more interesting than being just a potential 'study buddy'. \n\nHe'd married the most beautiful woman he'd ever known, but Aidan had to admit Quinn was also a very attractive woman. Yes, she was quite a bit older, but now that he was being forced to really think about that for the first time, he wasn't sure why it mattered as much as he seemed to think it did.\n\nFor now, they were back home, and he had a long week ahead of him that now included going to pick his daughter up every afternoon. Aidan let her stay up for another hour or so then sent her to take a bath and get ready for bed.\n\nAs he tucked her in, he sat on the bed and looked at her and smiled.\n\n\"You look so much like your mom, sweetie pie.\"\n\nShe smiled and said, \"Thank you, Daddy.\"\n\n\"You know I'll always love her, right?\"\n\n\"Yes. I will, too,\" Sadie told him. \"But lots of people get married again so isn't it okay for you to love someone else?\"\n\nHer father smiled then said, \"You are growing up so fast, hunny bunny. Just don't grow up too fast, okay?\"\n\nHe twinked her nose, smiled at her then told her goodnight.\n\n\"Goodnight, Daddy. I love you!\"\n\n\"I love you, too, sweetie.\"\n\nHe flipped her nightlight on then turned off the lamp by her bed, and more a few seconds stood there and watched her as she lay there already falling asleep. Every time he saw his daughter like that it reminded him there should be two people who love her tucking her in and telling her goodnight.\n\nAidan rarely dated, and so far, he hadn't met anyone he liked enough to even bring home to meet his daughter\u2014something he was very careful about\u2014but he smiled as he briefly imagined Quinn standing next to him watching Sadie after putting her to bed together. It was unlikely in the extreme, but it was nonetheless a very pleasant thought, and, yes, Sadie had already met and clearly liked Quinn.\n\nThe next several days were a blur as business continued to pick up, and on top of it all, Aidan had to swing by school every day and pick up his daughter. In spite of her young age, he realized just how much work she'd done the previous week, and for the first time, he thought about hiring someone. \n\nOn Thursday evening, he sat down and crunched the numbers. He was at the point where he not only needed an employee, he needed another vehicle so that employee could pick up half the load. If business continued picking up, he'd make the money back in a couple of years. If, however, it didn't grow or went south, he'd end up having to let this person go and sell the vehicle at a loss.\n\nToo tired to make a decision, he finally got to bed around 11 o'clock, and it hit him hard he still hadn't called Quinn. A quote from Cyrano de Bergerac came to him and he smiled just before drifting off to sleep.\n\nAidan was up a few minutes earlier than normal and used them to pen the words he'd thought of just a few hours ago. He pulled out a fresh sheet of unlined paper then began writing:",
        "She is a mortal danger to all men. She is beautiful without knowing it, and possesses charms that she's not even aware of. She is like a trap set by nature - a sweet perfumed rose in whose petals Cupid lurks in ambush! Anyone who has seen her smile has known perfection. She instills grace in every common thing and divinity in every careless gesture. Venus in her shell was never so lovely, and Diana in the forest never so graceful as my Lady when she strides through...Jacksonville (or rather Orange Park)!\n\nBelow it he added, \"I am so sorry for not having called. I'm hoping this might make up for it even though it's shamelessly melodramatic and wholly inappropriate. However, I must say that when I think of how beautiful you are, it does seem rather fitting.  \n\nWould it be possible to get together this weekend sometime?\"\n\nHe realized Saturdays were out because he needed the entire day just to get everything done. He didn't want to scratch it out so instead, he offered a specific time.\n\n\"I was hoping perhaps Sunday afternoon might work for you. I'm free, and if you are, as well, I would very much enjoy your company. I promise I'll call tonight and see if this works for you, too. Again, I truly apologize. I haven't forgotten. I have just literally been swamped with work. And in one regard, at least, that's a good thing! \n\nI really enjoyed meeting you, Quinn, and I'm equally looking forward to seeing you soon. Your Edmond Dantes.\"\n\nHe drew some smiley faces at the bottom, folded the paper, then slid it into another envelope. Later that day, when Quinn was at work, he slid it under her door to avoid her possibly missing it in the lending library. \n\nWhat he didn't know was that she'd dutifully looked every day and sometimes twice a day, for another note thinking he might write rather than call. He also wasn't aware that after having promised to call and not done so in four days, she'd concluded he was only being polite and had no intention of actually seeing her again. \n\nQuinn had decided just that morning it was probably for the best, and that she'd been correct before by assuming Aidan was both too young and too handsome to spend his time with a woman her age. Of course, that made her realize she hadn't really been hoping for just an occasional get together to discuss classic literature.\n\nWhen she got home, she didn't bother checking the library. In fact, she came in through the side door after something along the edge of the house caught her attention. As a result she didn't see the envelope laying just inside her front door.\n\nAidan got Sadie in bed a little before nine, and hoped it wasn't too late to call. He rarely called anyone who wasn't a customer anymore, but he remembered there was a time after which it was considered rude to call. All he could do was trust 9pm wasn't where Quinn drew that line.\n\nIt rang four times, and Quinn nearly let it go to voicemail, but after seeing his name, she couldn't resist answering it.\n\n\"Hello?\" she said as though she didn't have called ID.\n\n\"Quinn? I'm sorry for calling so late, but I promised I would.\"\n\n\"You did promise to call, but you didn't say anything about the time,\" she said almost tersely.\n\n\"I didn't? I'm almost positive I said I call later this evening. Was that not in the note?\"\n\n\"The note? What note?\" she asked as she thought about walking down to the library.\n\n\"The one I slid under your door. The apology and the promise to call.\"\n\n\"I...I didn't come in through the front this evening,\" she said as she walked that way. \"But I do see it laying there.\"\n\n\"It's not exactly anything all that great, it was just an honest attempt to say I'm sorry for not calling earlier, and that I'd very much like to see you again.\"\n\nQuinn had already opened it and was reading his words and not paying attention to the ones he was speaking.\n\nWhatever resentment she might have allowed to creep in melted away as she read the note.\n\n\"I can only assume I've offended you or possibly...\" he said.\n\n\"It's beautiful, Aidan,\" she said, still unaware he was speaking. \n\n\"It is?\" he asked. \"So you've read it?\"\n\n\"I just did, and I'm rereading it now,\" she told him.\n\n\"So...are you not mad at me?\" he asked rather gingerly.\n\n\"Mad? No. I'm...I'm touched. I love what you wrote. It's so...sweet and rom...\"\n\n\"Romantic?\" he asked.\n\n\"I'm sorry. I know that's not how you meant it. But it was perhaps the nicest thing anyone has ever said to me,\" she told him, her voice soft and trailing off as she spoke.\n\n\"I tried to find something I felt was true and not simply flattering,\" he told her.\n\nQuinn was reaching for a tissue before the first teardrop fell.\n\n\"It was...it was just lovely, Aidan. Thank you, and yes, I would love to get together with you on Sunday.\"\n\n\"Wonderful! I was concerned you might think I don't keep my word. I know I'm late, and I do apologize, but I always keep my promises.\"\n\nQuinn was so relieved she didn't tell him she had been wondering about that. Instead she told him how much she was looking forward to seeing him again.\n\n\"I was wondering if you might like to join us at our place this time,\" he said, now feeling upbeat again.\n\n\"I would love to!\" Quinn said immediately.\n\nAidan gave her his address then agreed with her on the time.\n\n\"All right. We'll see you then,\" he told her.\n\n\"Yes, I'm very much looking forward to it.\"\n\n\"We could start with Cyrano if you like.\"\n\n\"I would. I'd like that a lot, Aidan.\"\n\n\"And I can have some cheesecake if you'd care for another slice.\"\n\n\"Oh, no. I only have a piece a time or two a year. I'm not really a dessert eater.\"\n\n\"Whew! Me, either. I'm more a fresh salad kind of guy.\"\n\n\"You see, there's another 'coincidence',\" she said in a way that let him know she was smiling.\n\nThey said their goodbyes and both of them hung up feeling unusually optimistic about their futures. Neither believed the two of them would ever be 'an item', but both of them felt incredibly fortunate to have a made a friend who shared one of their main interests. And both of them believed the other was very attractive, and that wasn't a bad thing, either.\n\nAidan didn't tell Sadie they'd be having company until after breakfast on Sunday morning. When he did, her eyes lit up and a smile came to her face.\n\n\"Today? Quinn is coming to our house today?\" she asked excitedly.\n\n\"Yes, she is.\"\n\n\"Oh, my gosh! I need to get everything cleaned and straightened up!\"\n\nIt had been three years since her mother was alive, but she sounded so much like her it both amazed and amused her father. That was exactly what Kayla would have said.\n\n\"I'll give you a hand,\" her dad said.\n\n\"Okay, you start vacuuming while I load the dishwasher. Then I'll straighten the throw pillows, go make your bed, and...\"\n\n\"Whoa! Hold on their, good buddy. I can make my own bed.\"\n\nAidan worked his as...butt off...to provide for his daughter. And their home was always at least functionally clean. But the one thing he'd never done and still refused to do was make his bed. He'd never asked Sadie to make hers, but she did that religiously, and no matter when he went into her room, the bed was perfect with her stuffed animals on top and all lined up in a row.\n\n\"Or you could just close the door,\" Sadie said with a smile, knowing how her dad felt about making the bed.\n\n\"No, I'll go make it,\" he said with an exaggerated sigh.\n\nEven though she was only nine, Sadie knew her father must really like this woman if he was willing to make his bed.\n\n\"Okay. Then I'll dust once the floors are clean,\" she told him.\n\nAround noon, Aidan went to shower and shave, and when he finished he put on a nice pair of Dockers and a clean, button-down shirt and even wore shoes and socks. He couldn't remember the last time he'd worn the loafers Kayla bought him 4-5 years ago, but he was pretty sure that was about the number of times he'd ever had them on his feet.\n\nWhen he walked into the living room, he didn't know whether to smile or tear up. Sadie was wearing her nicest dress, and brought out the silver tea set he hadn't seen since her mother was alive.\n\n\"Wow. You look beautiful, honey,\" he told her.\n\n\"And you look very handsome, Daddy,\" she said to him. \"All you have to do is boil the water, and we're all set.\"\n\n\"Earl Gray. I didn't know we had any left,\" he mused when he saw the tea bags.\n\n\"You don't notice stuff like that, Dad,\" she told him sweetly. \n\nHe knew it was true. There were things only he noticed and things only his late wife and now his daughter saw. He chalked up to the difference between men and women then thanked his daughter for getting the house ready.\n\nSadie smiled then gave her father a hug.\n\n\"I just want everything to be perfect,\" she told him.\n\n\"Well, as long as you're here, it will be,\" he replied.\n\n\"Dad! You know what I mean,\" she said, loving the sweet words, but hoping Quinn would have a wonderful time and maybe, just maybe her dad would ask her out on a real date.\n\n\"I do, sweetie. Just don't get your hopes up too high, okay?\" he told her tenderly and with a warm smile.\n\n\"Okay,\" she replied even though her hopes were already high.\n\nQuinn changed her mind a half dozen times about what to wear, and tried on four of the six things she'd considered before making a decision. She had a sleeveless, white, silky blouse with spaghetti straps that looked amazing against her tanned skin, and it also looked perfect with a black skirt that fell to a couple of inches above her knee.\n\nShe still had the legs to wear something shorter, but this wasn't the time to do so. And as much as she hated admitting it, it really wasn't appropriate for a woman who was 46 years old. Even so, as she looked at herself in the mirror, she couldn't help but think she didn't look bad at all as she turned left then right checking her front, back, and sides.\n\nAt the last minute, Quinn put her hair up giving her a less sexy but more sophisticated look she thought gave an overall 'just right' kind of appearance. The only thing missing was some kind of accessory, and with the white top, a strand of pearls was the obvious choice.\n\nJust before she left, she applied a coat of glossy, dark-red lipstick to match her nails she'd done a couple of hours earlier, then, satisfied that was the best she could do, left for Aidan's.\n\nQuinn was surprised she felt so nervous. It was supposed to be a time to talk about something she loved, and yet she hadn't felt this way in so long it almost seemed foreign to her. And yet she was also enjoying this feeling she sometimes wondered if she'd ever feel again. As she pulled into his driveway, she realized she was definitely feeling it, and closed her eyes before turning off the engine.\n\n\"It's just a social get together and nothing more,\" she told herself. \n\nQuinn opened her eyes then took a quick look in the mirror on her visor before getting out and walking to the front door. She'd worn flats, and although she wasn't regretting it, a part of her was letting her know it would have preferred heels.\n\n\"Too late now,\" she said to herself as she rang the bell.\n\n\"I'll get it, Dad!\" Sadie called out as she nearly ran to the door.\n\n\"Okay, honey,\" he called back as he tried to calm himself. Like Quinn he told himself this was just a casual get together where two people who liked old books could talk about them.\n\nHe repeated that as he heard the door open followed by her voice.\n\n\"Oh, my! Look at you, Miss Sadie!\" Quinn said. \"You look so pretty!\"\n\n\"Thank you,\" the young girl said. \"You look really beautiful.\"\n\n\"Well, thank you very much, sweetheart,\" Quinn told her just as she looked up and saw the girl's father.\n\nBoth of them were looking at the other and thinking thoughts like 'wow' or 'oh, my goodness' but neither spoke for several seconds.\n\n\"I don't think I've seen you in anything but work attire, Aidan. You look very nice,\" Quinn finally said.\n\nSadie stepped aside as her father moved closer. He smiled then told Quinn, \"I'm at a loss for words. You look...stunning.\"\n\nQuinn definitely noticed his eyes make one quick pass at her entire body, and when they did, that old feeling got even stronger.\n\n\"Isn't she pretty, Daddy?\" Sadie said just to make sure he noticed.\n\n\"She is, honey. She's very beautiful.\"\n\nThey stood there in the foyer just looking at one another before Aidan said, \"I...I'm not sure if we should shake hands or hug or just...\"\n\nQuinn smiled and reached out to hug him. Pleasantly surprised, Aidan moved closer and accepted the hug. Just the feel of a beautiful woman's body next to his was amazing. But between the smell of her perfume mingled with her shampoo plus the smooth feel of her hair and the silky blouse, he found a part of him growing ever so slightly.\n\nHe backed away, smiled again, then said, \"Please come in. Our hostess here got out our tea set so if you'd care for a cup, I can boil some water.\"\n\nQuinn saw the silver setting on the living room table and said, \"That is very impressive, young lady.\"\n\n\"Thank you,\" Sadie said, nearly embarrassed by the compliments from both adults.\n\n\"And yes, tea sounds wonderful,\" she told Aidan.\n\nBefore he could ask her to accompany him to the kitchen, Sadie reached for her hand and said, \"Come on. I'll show you where the kitchen is.\"\n\nQuinn happily gave her her hand and said, \"Please. Lead on.\"\n\nShe wasn't quite sure what to expect in a home where a single father lived, but she was very impressed by how neat and tidy everything was. Her guess, which happened to be correct, was that Sadie's late mother had decorated the house and arranged the furniture, and that her husband had left everything in place since her passing.\n\n\"Our hostess also did the cleaning and straightening up.\"\n\n\"Not all of it. My daddy helped me with it.\"\n\n\"Well, you two are quite the team,\" Quinn told Sadie. \"It looks so nice in here, and you have a very lovely home, Aidan.\"\n\nJust as she suspected, he confirmed her suspicions with his reply.\n\n\"Pretty much everything was my wife's decision. So to the degree it's color-coordinated or looks okay, that's all due to her.\"\n\n\"Well, she has very good taste,\" Quinn said using the present tense. \"Everything works together and it's just lovely.\"\n\nThe water was ready in a few minutes during which Aidan asked what Quinn would like in her tea and learned she preferred one lump of sugar and no milk. \n\n\"I need two lumps to sweeten me up,\" he told her, getting a 'don't be so silly' look from Sadie.\n\nQuinn laughed and asked Sadie, \"Your dad really doesn't need sugar to be sweet, does he?\"\n\n\"No, he's the sweetest person I know,\" she replied with a happy smile.\n\nQuinn leaned down as though she was about to share a secret then said loudly enough for Aidan to hear, \"I think he just doesn't want anyone to know how sweet he is.\"\n\nSadie giggled, and Aidan said, \"Excuse me, but I have a reputation to protect, okay? I can't have people\u2014other than maybe the two of you\u2014calling me 'sweet'.\"\n\nSadie giggled again and Quinn said, \"I do know you have a romantic streak in you based solely on the um...rather sweet notes...you left in my lending library.\"\n\n\"Which looks beautiful again, by the way,\" she added while looking right at Sadie.\n\n\"Thank you,\" the little girl said as her father poured hot water into the silver server.\n\n\"Okay, let's go have a seat, and I'll pour us some tea.\"\n\nAs it steeped, Aidan asked how her school year was going.\n\n\"Very well, thank you,\" she told him. \"I have a transfer student who reminds me of you.\"\n\n\"How so?\" he asked.\n\n\"He's already read quite a few classic works and let's just say he's very popular with the young ladies in class.\"\n\n\"I believe a 'thank you' is in order,\" Aidan said with a smile. \n\nA copy of Cyrano was on the table, and Aidan asked if that was one of the books her new student had read.\n\n\"Yes. As a matter of fact, he mentioned that the movie with Steve Martin was the reason he read it.\"\n\n\"Hmmm. That sounds a little like me, doesn't it?\" he replied referring to his similar start with the movie that peaked his interest in literature.\n\nThe tea was ready and Quinn took a first sip.\n\n\"This is so good!\" she said. \n\n\"I'm glad you like it,\" Aidan told her before taking a first sip of his own.\n\n\"Shall we?\" he suggested, nodding to the book.\n\nSadie tried following the conversation, but had no real idea what the adults were talking about. She got bits and pieces here and there, and occasionally asked a question that often drew a smile if not a polite chuckle.\n\n\"Wait. So they were cousins?\" Sadie asked early on.\n\n\"Yes, they were,\" Quinn said.\n\n\"He was a military man and in love with his cousin, Roxeanne, but too afraid to tell her.\"\n\n\"So he wrote letters to her on behalf of one of his cadets named Christian...\"\n\nAidan finished the thought by saying, \"And she fell in love with the poetic charm of the letters but didn't know Christian wasn't the one who wrote them.\"\n\n\"Oh, so he wrote notes for her just like you did for Quinn, right?\" Sadie asked as she tried piecing the facts together.\n\nHer dad smiled, but it was Quinn who replied.\n\n\"Yes. As it turns out, some women, even today, are still charmed by a man who takes the time to say something romantic in writing.\"\n\nShe spoke to Sadie was but was looking at her father who smiled back as he fully understood the underlying meaning of her comment.\n\n\"Couldn't you just send flowers?\" Sadie asked innocently.\n\n\"Sure. You could,\" her dad told her.\n\n\"And that's also very nice. But to me, at least, there's nothing more romantic than a man who's able to express himself in writing.\"\n\nAt some point Sadie was so lost she was bored.\n\n\"Dad? May I be excused? she asked sweetly. \"I don't really get most of this.\"\n\n\"Oh, sure, honey. Yeah, this can be pretty dry to someone who doesn't know what the book is all about.\"\n\nShe stood up then smiled at Quinn and said, \"I'm going to go to my room now, so if you want to move over here and sit by my dad, that would be...\"\n\n\"Sadie?\" her father said very sweetly.\n\n\"Sorry,\" she said, knowing why her father said that. Her cheeks turned a light shade of red as she told them she was leaving.\n\n\"She is so sweet,\" Quinn said once Sadie was out of earshot.\n\n\"She is,\" her father agreed immediately.\n\nHe sat there for a few seconds just taking in how beautiful Quinn was then heard himself saying, \"I uh, I...I wouldn't mind at all if you maybe wanted to move over here where, you know, she...Sadie was sitting.\"\n\nQuinn sensed his nervousness, but found it as charming as the notes he'd left her, and she was more than happy to move.\n\n\"I'd like that,\" she said sweetly as she stood up and moved around the coffee table.\n\nAidan stood up, then waited for her sit back down. She was now only a foot or so away from him and the scent of her perfume wafted his way again. He was trying not to stare, but evidently he was as Quinn seemed to be asking him somethin a second time.\n\n\"What's that?\" he asked feeling a little foolish.\n\n\"I was just wondering what other things you enjoy. I know you love literature. Is there anything else?\"\n\n\"Oh, wow. Um, sure, but between work and raising a daughter there isn't a lot of time for anything else,\" he told her truthfully.\n\nHe spent a couple of minutes explaining how much the business had grown and the decision he was facing with regard to hiring someone.\n\n\"That sounds like the kind of dilemma a business owner looks forward to,\" she told him with a warm smile.\n\n\"True. It's much better than wondering whether or not you'll be able to make ends meet.\"\n\nThe discussed the pros and cons of bringing someone new onboard then at some point, Quinn made a reference to her ex-husband, and Aidan asked if she minded telling him what had happened.\n\nAidan wasn't naive. He knew people had affairs all the time. Not most people, of course, but there were plenty of people who were at any given time. He also knew that being beautiful was no guarantee a spouse wouldn't cheat. Even so, he had to wonder why any man would leave someone as amazing as Quinn.",
        "His answer came when she quietly told him, \"I'll never forget the day he told me he was having an affair or the reason why. I told him I couldn't think of a single reason for him to cheat, and he told me, 'There isn't. You're amazing. But you're like...steak. Steak is great but who wants to eat steak every day for the rest of their life?\"\n\nShe smiled weakly then said, \"So I guess I was a piece of meat to him. A plain, dry, boring piece of meat.\"\n\nAidan shook his head then told her, \"I can't even imagine ever feeling that way about someone I love, Quinn. Especially not someone as warm and charming and...as beautiful...as you.\"\n\nThe way she reacted sent a mixed signal to him, and Aidan wasn't sure whether she found his compliment pleasing or inappropriate.\n\nShe looked at him then said, \"I loved the things you wrote, but what you just said was even sweeter and more meaningful than your beautiful written words.\"\n\nNow feeling more confident knowing she at least didn't find his comment out of bounds, he needed to tell her something else.\n\n\"I don't want to put a damper on what's been a very nice time, but I want you to know that I...I find myself...very attracted to you, Quinn.\"\n\nNow thinking that sounded purely physical, he quickly added, \"I don't mean just in the sense that you're a very beautiful woman. I was trying to let you know that you're the kind of woman I've hoped to meet but never thought I would.\"\n\nWhen she smiled, he felt like he'd just gone from bad to worse and tried to clean up the mess.\n\n\"Okay. Let me try and clarify what I mean,\" he began. \n\n\"It's okay. I understand,\" Quinn said with a smile.\n\n\"You...do?\" he asked. \"Because I'm the one saying it and I'm not sure I do.\"\n\nQuinn laughed then said, \"I...I like you, too, Aidan.\"\n\nHe raised his eyebrows as his eyes opened wide and a smile broke out on his face.\n\n\"You...do?\" he asked again. \"As in...like me like me?\"\n\n\"Yes. I like you like you,\" she told him, the smile still there. \n\nIt faded before she added, \"But for the life of me I'm not sure why you would like me.\"\n\n\"I...don't understand,\" he told her as he looked into her eyes for an explanation.\n\n\"You told me your age, but I didn't tell you mine,\" she said without looking at him.\n\n\"Were I say...25 and never married and wanting more children, then your age might matter. But I'm 34, and I have a daughter. I love children, but I don't want to raise another one. So other than those dry, um...biological issues...why else would it matter?\"\n\nQuinn turned more toward him and was planning on providing several reasons when Aidan reached over for her hand and essentially just took it. She wanted him to so there was no resistance, but she really wanted to let him know why the age difference mattered. But she never got the chance when he explained why it didn't.\n\n\"I would be so proud to be seen with you, Quinn. The obvious reason why is because you're...gorgeous. But more importantly, you and I have many things in common. And while we need to learn more about one another, I've never met anyone, other than Kayla, of course, whom I found more amazing and interesting, and...\"\n\nHe slid closer and smiled at her. When she didn't move away or pull back, he reached up and gently put his hand on her face. He sat there and looked into her eyes, and once he felt reasonably confident she wouldn't stop him, he leaned over to kiss her.\n\nQuinn's body began trembling when he took her hand. And now, here he was, sitting just inches away and telling her how amazing she was. She could barely hear what he was saying as every fiber of her being only wanted him to lean over and kiss her. And had he not done so when he did she knew she'd have kissed him first.\n\nAs he moved closer, she closed her eyes and waited for his lips to press against hers. When they did, she moaned softly and kissed him back. It had been three years since Aidan had kissed a woman like this or had those kinds of feelings, but it had been even longer since Quinn had felt this way about any man.\n\nWhen the kiss ended two or three seconds later she wanted to pull him back and kiss him again even harder and longer, but wasn't in her makeup to do such a thing. But that didn't stop her from wanting to.\n\n\"Do you believe me now?\" he whispered, his face still just inches from hers.\n\n\"Yes,\" she said, barely able to speak. \n\nShe was twelve years older than him but felt much younger than him at that moment in time, a moment she never wanted to end.\n\nJust like Aidan, Quinn wasn't sure why she was saying something, but she was indeed saying it.\n\n\"I'm...46,\" she said quietly.\n\n\"And more beautiful than anyone I've known since my wife passed away,\" he told her just as quietly. \n\nNeither of them heard Sadie walk up until she was right behind them.\n\n\"Um...hello!\" she said trying not to smile but unable to keep from doing so.\n\n\"Sadie,\" her dad said as he pulled away.\n\nQuinn looked down for a moment then said, \"I didn't hear you walk back in, sweetie.\"\n\n\"I'm glad,\" she said, causing Quinn to look at Aidan who only smiled.\n\nWhen he did, Quinn smiled, too.\n\n\"I think my daughter may be kind of hoping you and I might, you know...\"\n\n\"Oh. I believe we have something else in common then, huh?\" she said with a smiling referring to her daughter. \n\n\"So you want your father and I to be...friends?\" Quinn asked, searching for the right word.\n\nSadie smiled happily then suggested a different word.\n\n\"I was thinking more like boyfriend and girlfriend, but 'friends' is probably okay.\"\n\nThis time Quinn laughed. It was a happy, relieved laugh and one in which Aidan joined her.\n\nSadie was at the back of the couch then moved in between them, her face to either side of theirs then asked, \"So...are you?\"\n\nQuinn glanced at Aidan briefly then looked away waiting for him to answer his daughter.\n\n\"We haven't talked about that yet, honey, but I wouldn't be upset if Quinn wanted that to be the case.\"\n\nSadie smiled then turned Quinn's way and waited.\n\n\"You are quite the matchmaker,\" she told the young girl.\n\n\"I have my moments,\" she said rather amusingly.\n\n\"Well, I guess I would be okay with being your father's girlfriend. If that's something he's sure he wants.\"\n\nSadie turned her face toward her dad and waited.\n\n\"I kind of like the sound of that,\" he told his daughter while smiling at Quinn.\n\n\"Great. Then my work here is done!\" Sadie announced as she stood up straight and smiled again. \n\n\"You going back to room, sweetie?\" her dad asked.\n\n\"Yes,\" she told him. \"And you can go back to kissing your girlfriend.\"\n\nBoth his eyes and Quinn's opened widely as her hands shot up to cover her mouth as she said, \"Oh, my!\"\n\nAidan just shook his head while Sadie called back, \"Yes, I saw you guys kissing.\"\n\nShe stopped then looked over her shoulder and told them, \"And\u2014I approve!\"\n\nShe disappeared into her room to the sound of laughter as the new couple adjusted to their new status.\n\n\"Hello...girlfriend,\" Aidan said as he took Quinn's hand.\n\nShe smiled happily, and feeling like a schoolgirl said, \"Hello...boyfriend.\"\n\n\"You know we're supposed to kiss again, right?\" he told her very seriously.\n\n\"Ah, right. Yes. I did hear that.\"\n\n\"Then we should probably take care of that, don't you think?\"\n\n\"Yes. Definitely. We don't want to get in trouble, do we?\"\n\n\"No. No, we don't,\" Aidan said as he slowly moved closer again then kissed her softly.\n\n\"Mmmm. That was very nice,\" she said as their lips parted. \n\n\"Yes. Very,\" Aidan agreed.\n\n\"I wasn't really clear on something, though. Were we supposed to kiss just one more time?\"\n\n\"Good point. I'd say more is probably better,\" he said as they remained just an inch or so apart.\n\n\"Right. No use taking chances,\" Quinn said as she placed her soft, full lips on his then pulled him close.\n\nFor a brief moment their tongues touched, and once again, Quinn moaned softly.\n\n\"Mmmm,\" she said when the kiss ended.\n\n\"Yes, indeed,\" Aidan said very quietly.\n\n\"I...I'm not sure we should kiss anymore,\" Quinn told him in a whisper.\n\n\"I think I know why,\" Aidan replied. \"Stopping gets more difficult with each one, doesn't it?\"\n\n\"Oh, you have no idea,\" she told him as their eyes darted back and forth.\n\n\"Um, I believe I do,\" he replied. \"There hasn't been anyone since my wife.\"\n\nQuinn surprised him to the point of being shocked when she quietly said, \"I haven't been with anyone since my husband walked out.\"\n\n\"Then we should definitely find something else to do.\"\n\n\"Do you have another book to talk about?\" she asked with the sweetest of smiles.\n\n\"Several. Do you have a favorite?\"\n\n\"I'm suddenly very partial to The Count of Monte Cristo, Monsieur Dantes.\"\n\n\"And I am similarly smitten with the lovely Merc\u00e9d\u00e8s Mondego,\" he told her feeling neither shame nor embarrassment with being silly when he was with this beautiful, older woman who enjoyed this kind of romantic wordplay as much as he did.\n\n\"Aidan? I don't want this moment to end,\" she told him.\n\n\"I know. But if it doesn't, we'll never be able to create other moments.\"\n\n\"More...memorable moments,\" Quinn said softly.\n\n\"So I'm going to slowly back away now, and you're going to let me, right?\"\n\n\"I might need one more kiss first,\" she told him.\n\n\"Okay. But just one.\"\n\nQuinn nodded then waited for her kiss and felt her body tingle when it came.\n\n\"All right. I think I can stand for you to move away now,\" she said. \"Just do so slowly, okay?\"\n\nThey tried moving on to another book, but neither heart was in it, and the conversation turned to love and romance as they gently probed for more common ground. It was almost five o'clock when Quinn realized how long they'd been talking, and more importantly, that so far, at least, they hadn't found a single issue on which they disagreed. Other than which soft drink they liked.\n\n\"How can you drink Diet Pepsi?\" he asked her with feigned shock when she told him.\n\n\"Well...how can you stand to drink Coke...Zero?\" she replied making a 'yuck!' face before they laughed.\n\n\"I should probably be going, don't you think?\" she asked once she realized what time it was.\n\n\"Or you could stay and have dinner with us,\" Aidan suggested.\n\n\"I'd love to, but Michelle and I always have Sunday dinner together.\"\n\n\"I'm sure Sadie would love to have her join the three of us,\" he further suggested.\n\n\"The three of us. I kind of like the way that sounds,\" Quinn told him with a smile.\n\n\"It does have a nice ring to it, huh?\" Aidan replied as he moved closer again.\n\n\"Why don't you call her and ask?\" \n\n\"Okay. Let me grab my purse,\" she said. \n\n\"I'll get it,\" Aidan told her. \n\nHe went to the foyer and brought it to her, and as she spoke to her daughter, he nuzzled her neck causing her to laugh and say, \"Stop that!\" very quietly.\n\n\"Mom? What's going on?\" Michelle asked.\n\n\"Going on?\" her mom said as Aidan began nibbling her ear causing her to kind of giggle.\n\n\"If I didn't know you better,\" Michelle said as her mom pulled away and stood up.\n\n\"What? There's nothing going on.\"\n\n\"Just the same, please tell Aidan I accept, and that I'll be there by six.\"\n\nShe paused then said rather loudly, \"To keep an eye on you, mother!\"'\n\nQuinn laughed happily as Aidan made 'goo-goo' eyes at her.\n\n\"I'm not the one you need to watch, honey,\" she told her daughter as she stuck her tongue out at her new boyfriend.\n\n\"Uh-huh. Something's going on, and I'm gonna get to the bottom of it,\" Michelle said in a mock-threatening voice.\n\n\"See you soon, honey,\" Quinn told her. \"Bye!\"\n\n\"She knows, doesn't she?\" Aidan asked.\n\n\"She's as aware as Sadie only older and more experienced. We won't be able to fool her for a nanosecond.\"\n\nAidan stood up, walked over to her, and put his arms around then said, \"Why would we want to?\"\n\n\"Hmm. Good point, Mr. Dantes,\" she told him.\n\nAidan got serious for a nanosecond and asked if this was going too fast for her.\n\n\"Not for me,\" she told him immediately. \"I'd kind of given up even looking for someone like you, but from that first note of yours I read, I found myself opening my heart again. And while I hope it doesn't get broken, I am so ready to...\"\n\nQuinn looked down for a moment then looked back at Aidan and said, \"Love again.\"\n\n\"Me, too. I also never thought I'd meet a kindred spirit, and although I haven't dated many...\"\n\nHe stopped then said, \"Any other women really...\"\n\nQuinn laughed before he finished by saying, \"I see no need to keep looking when someone perfect comes along.\"\n\n\"I'm hardly perfect,\" she told him.\n\n\"I'll be the judge of that,\" he replied as he kissed her again just as Sadie came back in.\n\nThe sound of giggling stopped them cold in their tracks.\n\n\"Uh-oh. We are so busted,\" Aidan said.\n\nQuinn cleared her throat then lowered her arms and took a step back.\n\n\"Sorry, sweetie,\" she said to Sadie.\n\n\"Why? I want my daddy to fall in love with you,\" she said matter of factly causing the adults' eyes to once again open wide.\n\n\"We kind of just agreed to be a couple,\" her father told her.\n\n\"Really?\" Sadie asked as she ran over to him.\n\nShe put her arms around him and said, \"I am so happy!\"\n\nThen she let go and did the same thing to Quinn who didn't want to let her go.\n\n\"My daughter's coming over for dinner tonight. Is that okay?\" Quinn asked when she finally let Sadie go.\n\n\"Michelle is awesome!\" she replied. \n\nSadie turned to her father then asked him, \"Are we going to Outback, Daddy?\"\n\n\"We haven't discussed that yet, sweetie.\"\n\n\"I'm okay with staying in. I don't need to spend a bunch of money to enjoy being with the people I lo...want to be with,\" Quinn said. \"We can, but I'm just as happy staying in.\"\n\nAidan smiled then said, \"Hey, are you embarrassed to be seen with me?\"\n\nQuinn laughed and told him, \"Are you kidding? I'd be telling everyone, whether I knew them or not, this handsome man is my boyfriend. But you may not be ready to make your public debut with me.\"\n\nAidan moved next to her again then said, \"You are so wrong, beautiful. So, so wrong.\"\n\nThey stayed in that night and after Michelle recovered from her 'near heart attack' when her mom told her the news, everyone had a wonderful time. Michelle knew her mom thought Aidan was attractive, and she knew she loved the romantic notes. But after spending just a few hours together, they were...a couple?\n\nThen again, she knew how desperately lonely her mom was, and that she'd never even consider a relationship with just any man. So the fact that was she was so suddenly in one with their landscaper was much less troubling than it might have been with anyone else.\n\nAlthough everyone had a good time, Sadie was quite possibly the happiest person in the house. Quinn offered to make dinner after looking in the refrigerator then asked Sadie if she'd like to help, and she loved every minute of helping out in the kitchen. As it turned out, Michelle hated cooking and was all happy to sit and talk with Aidan at the kitchen counter while dinner was prepared.\n\nBy the time they left a little after nine, Michelle was no longer concerned. In fact, she was downright happy for her mother, and for this man who'd lost the only woman he'd ever loved. And although Sadie was too young be really close friends with, Michelle realized she was like the little sister she'd never had. So even it things got serious, or rather\u2014more serious\u2014that wouldn't be such a bad thing.\n\nIt was fortunate Michelle had spent that evening with her at Aidan and Sadie's, because things did start getting more serious as each day passed. Aidan began texting Quinn his favorite quotes and tying them to his beautiful new girlfriend several times a day. However, he also started leaving notes in the lending library again, and Quinn found herself smiling every time she came home knowing there might be a wonderful gift waiting for her.\n\nA couple of weeks later, when one was there waiting for her, she realized these notes really were gifts. They were far more valuable to her than anything Aidan could give her other than his time. \n\nAt their one-month 'anniversary' he gave her a very nice pendant necklace, and as much as she loved it, she treasured his words even more.\n\nTwo weeks after that, Michelle offered to keep Sadie for 'a day or two' as a not-so-subtle hint the happy new couple needed some time alone. Sadie was thrilled, and Quinn was...loved.\n\nIt had been so long since she'd been with a man, and like Diane Keaton in Something's Gotta Give, she really did think she was 'closed for business down there'. And yet after making love with this hardbodied, younger man, Quinn remembered just how much she loved making love. From that moment on, she couldn't get enough of his time, his words, or his body.\n\nAidan would never compare Quinn with Kayla, but he had to admit Quinn was the most amazing woman he'd ever slept with. After a slow, delicious start, she proved to be voracious in bed and someone willing to satisfy every need he'd ever had (or dreamed of having.)\n\nIn a word, he was in love with her, and although she hadn't told him, Quinn was head over heels, too. \n\nIt was just another two weeks before he finally told her how he felt, and when he said those three magic words, Quinn teared up as the same words came pouring out of her from the depths of her soul.\n\nNeither thought they would ever love like this again, and yet here they were, more in love than they'd ever been. Love with Kayla had been wonderful and special, but it was...different. Love with Quinn was more a kind of unbridled passion fueled not only by the physical but also by a shared connection; one that bonded them for life almost from the moment they first met.\n\nBy early December, Quinn asked Sadie how she felt about Quinn and got an immediate response.\n\n\"I love her, Dad.\"\n\n\"I do, too, honey. So...how would you feel if I asked her to marry me?\"\n\nSadie literally jumped into his arms and hugged him.\n\n\"I would so happy!\" she told her father. \"Are you? Will you?\"\n\n\"Yes. I'll ask her. I want it to be special, though. Something she'll never forget. And I have an idea. Want to hear it?\"\n\nHe told his daughter what he was thinking, and Sadie was so excited she squealed with delight. Especially when he told her she could be there, too.\n\nThere was just one week until the end of the semester, and each day the level of intensity in the texts, notes, sweet words, and lovemaking between Aidan and Quinn continued to increase. They often tease each other about who was the luckier of the two, with both of them insisting it was them.\n\nAidan had put off hiring someone and managed to get anything from falling through the cracks during the summer months. Now that December had arrived, the grass only needed to be mowed one last time until Spring which, in northern Florida, meant mid-March. \n\nHe worked extra hours the three days before the last day of school, which was a half day for students so he could take a rare day off. He allowed Sadie to stay home from school so she could go with him, and they arrived at Orange Park High School just minutes before the final bell. But they didn't go to Quinn's classroom. Instead, they went to the office where the principal was waiting for them.\n\n\"So you're the lucky man,\" he said to Aidan as they shook hands. He bent down a little then told Sadie, \"And lucky young lady.\"\n\n\"I am,\" Aidan agreed immediately as Sadie smiled and nodded.\n\n\"It's so good to meet you. Quinn has always been one of our best teachers, but everyone has noticed the change in her this year. It's as though she's walking on air. At least that's how one of her closest friends described it.\"\n\n\"I have to tell you, that's what it's been like for me,\" Aidan admitted. \"I wasn't sure I'd ever fall in love again, and now I'm so deep in it, I can't think of anything else.\"\n\nThe principal laughed politely then said, \"I heard all of this began thanks to her lending library.\"",
        "\"That's true,\" Aidan told him. \"She hired me to do her landscaping, and being the lover of literature that I am, I had to take a peek inside.\"\n\n\"Yes. So I heard. I believe the book that got it all started was The Count of Monte Cristo.\"\n\n\"Edmond Dantes, at your service, sir,\" Aidan said with a bow that made Sadie laugh.\n\n\"Listen, the bell is about to ring. Once the campus has cleared out, all of the teachers will be gathering in the cafeteria for an end-of-year thank you and awards ceremony. If you and Miss Sadie here can just hang out in my office, I'll let you know when we're ready for you.\"\n\n\"Sounds perfect. And thank you so much for agreeing to this,\" Aidan told him as the principal lead them into his office.\n\n\"Good luck,\" he said to both of them just before the final bell of the year rang.\n\nAidan couldn't help but laugh when he heard all the loud hollering followed by cars burning rubber in the parking lot.\n\n\"These people are crazy!\" Sadie said as she saw blue smoke here and there from the cars that were 'peeling out'.\n\nHe laughed but didn't tell his daughter why when the phrase, \"Young, dumb, and full of cum,\" came to mind as all of the smoke was coming from testosterone-fueled boys.\n\n\"Do you have the ring, sweetie pie?\" he asked as the minutes ticked by like hours.\n\n\"Uh-huh. It's right here,\" Sadie said, tapping the pocket on the shorts she was wearing. It may have been the 19th of December, but it was 73 degrees outside and the sky was wall-to-wall blue.\n\nAfter what seemed like an eternity, the principal's secretary came in and said, \"Okay. It's time.\"\n\nShe led them to a space in the cafeteria where they could hear but not be seen then went back to her seat.\n\n\"We have just one more announcement, and that'll be it for the year, folks,\" the principal said. \n\n\"I believe it's actually more of a question than an announcement, though.\"\n\nHe stood on his toes and raised his head as though he was looking for someone.\n\n\"Is there anyone here who has a question to ask one of our teachers? Anyone?\"\n\nIt was absolutely silent until the staff heard the sound of footsteps behind them. Every head turned to look, and when they did, they saw a very handsome man holding hands with a very pretty girl. Both of them were smiling happily as they walked to the front.\n\nThere were some whispers followed by some louder comments and then there was a weepy cry of, \"Of my God!\" from Quinn Johnson.\n\nThe principal handed the mic to Aidan with a smile then stepped aside.\n\n\"Hello, everyone,\" he said. \"I'm Aidan Gray, and this is my daughter, Sadie.\"\n\nThe staff was torn between looking at them and at Quinn, who was sitting there crying and shaking as the man she loved stood in front of her, because she knew why he was there.\n\n\"Some of you may have heard my name, but if not, I'm the lucky guy who's been dating one of your fellow teachers.\"\n\nHe smiled at Quinn who was already a blubbering mess.\n\n\"I uh, I lost my wife a few years ago, and Sadie, of course, lost her mother. I can't begin to tell you how hard that was\u2014for both of us. And honestly? I often thought I would never meet anyone else I could love that much, and then one day someone contacted my on my website and asked me to take care of her yard. That someone is the woman who changed my life and turned it around.\"\n\nSadie tugged at her dad's shirt so he looked down to see what she wanted. He could tell she wanted to say something so he lowered the microphone.\n\nSadie looked at Quinn then said, \"Our lives.\"\n\nThere were 'ahhs!\" all over the room, and among the women, at least, not a dry eye to be found.\n\nAidan smiled and thanked his daughter then said, \"Yes. Our lives. Sadie loves her as much as I do. Anyway, her email to my site and our mutual love of classic literature, led to a first meeting and then a first date, and as they say, the rest is history.\" \n\nAidan looked right at Quinn who was still crying and said, \"Quinn? Honey? I have something I'd like to ask you.\"\n\nBarely able to speak, Quinn again managed to get out the words, \"Oh, my God,\" as she cried and sobbed.\n\nHe looked down at Sadie who knew why. She reached into her pocket and handed her dad the little box who then said to Quinn, \"Stay right there, sweetheart.\"\n\nEveryone laughed nervously, and everyone was smiling as he and Sadie walked up the front row. Anyone in their way gladly stood up and moved their folding chairs out of the way until Aidan was standing directly in front of the woman he loved. \n\nOnce he was there, one of the more vocal female teachers hollered out, \"He's even hotter than you said, Quinn!\" causing everyone to laugh loudly as several other women made similar cat calls before getting quiet again.\n\nWithout the mic, he said, \"Quinn? Until you came into my life, Sadie was the only reason I got up each day.\"\n\nHis daughter smiled at her dad as he smiled down at her.\n\n\"But you've given me another reason to do so. You've made my life whole and complete and you've made my happier than I could have ever dreamed.\"\n\nEvery eye was glued on the little box as he opened it and knelt on one knee before her.\n\n\"I'm no Edmond Dantes. I cannot give you everything, but were I him know that I would. But since that is something I cannot do, I offer you all the love I have and pray that it, along with this ring, will be enough. Quinn Johnson? Will you marry me.\"\n\nTears were still streaming down her face as she sat there overwhelmed with emotion. Joy, happiness, wonder, and love filled her heart as she listened to his words.\n\nStill trembling, she held out her hand and somehow said, \"Yes!\"\n\nThe room exploded in applause as Aidan stood and helped his fianc\u00e9 do the same. Once they were face to face he said, \"I love you, sweetheart.\"\n\nQuinn nodded and as she tried to speak, the teacher who'd called out earlier said, \"Kiss her already!\"\n\nAs another round of laughter pealed through the room, Aidan put his arms around her and kissed her which generated another burst of applause, whistles, and best wishes.\n\nWhen the kiss ended, Quinn leaned down and smiled at Sadie.\n\n\"I love you so much,\" she told the little girl.\n\n\"I love you, too,\" she said before her new 'mom' hugged her tight.\n\nThe newly-engaged couple waited for everyone to come up and congratulate them before leaving.\n\nOnce the room was empty except for a custodian who'd come in to put the chairs away and sweep the floor, Quinn, whose face was a disaster but who still looked beautiful to Aidan said, \"Do you know how much I love you?\"\n\nBefore he could answer, she said, \"I've never had romance in my life. Ever. But since you walked into it, it's been filled with romance. I...I used to dream about a man like you, honey. But I'd given up ever finding him. And then you showed up at my house and now today...here...at the place where I've spent so many years, you did the most romantic thing I've ever seen.\"\n\n\"That's because I love you even more than you love me,\" he told her with a smile, reigniting the game they played.\n\n\"No, that's not possible,\" Quinn insisted, \"because no one could love anyone as much as I love you.\"\n\nAidan took her in his arms, smiled, then said, \"Today I'm the luckiest man alive, so I'm not going to argue with you.\"\n\nShe smiled back before he said, \"Because we both know you're wrong!\"\n\nQuinn pretended to be mad while he pretended to be in trouble. \n\nAll the while Sadie stood there and watched. She watched the man she loved more than anyone finally be happy. And she also knew that the woman he loved loved her, too, and she loved her back just as much.\n\nWhen they married one week after the end of the school year at a chapel just down the street from the high school on Kingsley Avenue, the first place the Gray family went was to the office of a family practice attorney just a block from the church. There, they filed the paperwork for Quinn Gray to adopt the little girl she thought of as her own.\n\nShe'd never met Kayla, and knew she would always be Sadie's mother, but Quinn was thrilled with the opportunity to be her mom; a mom who loved her as much as her father and to her great delight, the new mom who soon became her best friend.\n\nQuinn didn't find it difficult to sell her home and move in with Aidan and Sadie, but she couldn't bear to leave the lending library behind. So her handsome, younger husband brought it to their new home and set it up right next to their mailbox with the hope that it might bring someone else as much happiness as it had brought to them."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lending-library"
}