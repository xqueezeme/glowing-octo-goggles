{
    "title": "Mary and Alvin Ch. 06",
    "pages": [
        "Bonnie's Bed\n\nThe rain that chased Alvin and Mary across the bay on Sunday lingered into the week. When Mary got out of her car in the gravel parking lot at Faulkner's Wharf on Wednesday afternoon, she had to dash through a watery maze to get to the office door. She stepped inside and saw a tall, wiry woman sitting at the desk. The woman looked up at her, one eyebrow cocked.\n\n\"Something I can help you with, dearie?\"\n\n\"Hi,\" Mary said, \"is Alvin here?\"\n\nThe woman looked Mary up and down. \"He's not here right now. Is there something I can help you with?\"\n\n\"No, it's just, I just was hoping to talk to him. So, um, you must be Diana?\"\n\nThe woman let out a barking laugh. \"Oh hell no. I'm Laura. Alvin and Di are my cousins.\"\n\n\"Oh, well nice to meet you.\"\n\nLaura leaned back in her chair. \"You must be that new girl he's been out sailing with.\"\n\nMary blushed and nodded.\n\n\"Well, ain't been much to do these past few days. Alvin went down to the High Tide. I'd close up myself, but...\" she shrugged.\n\n\"The High Tide?\"\n\nLaura gestured over her shoulder. \"Down Front Street about a quarter mile. Hard to spot, there's not but a small sign. Look for a boathouse with a red roof, then go around the shore side, you'll see it.\"\n\n\"Okay, thanks.\" Mary turned to leave.\n\n\"Best buy yourself some galoshes,\" Laura said, holding up her leg to show her own high rubber boots, \"Gonna ruin those fine shoes.\"\n\nMary thanked her and went back outside. She immediately stepped in a deep puddle and soaked her left foot.\n\nShe would never have found the High Tide if Laura had not told her to look for the red roof. From the landward side it was just another in a string of weather worn boathouses. As she rounded the building, though, she saw that the water side had been converted into an open air bar, half in the boathouse and half on a wide covered deck.\n\nAlvin was sitting at the far end of the deck with a slender man who was wearing a battered Red Sox cap low over his face. As she crossed toward them, the man looked up and made eye contact with her. His appearance gave her a start. He looked like a younger, slighter version of Alvin.\n\nAlvin set down his glass of beer and turned to see what had caught his brother's eye. When she saw Mary he smiled and said, \"Put your eyes back in your head, Tim.\" \n\nHe rose and greeted Mary with a kiss on the cheek. \"I'd think you'd still be working,\" he said, looking at his watch.\n\n\"I took half a day's personal time, I had some business to take care of.\"\n\n\"Oh. I hope everything's alright.\"\n\nShe nodded. \"We can talk about it later.\"\n\n\"Sure.\" He turned toward the table. \"Mary, this is my brother, Tim.\"\n\nTim rose from the table and shook her hand. \"Very pleased to meet you,\" he said, showing her a grin remarkably like his older brother's.\n\nAlvin held out a chair for her, and she sat down. \"What can I get you? Would you like a beer?\" he asked.\n\n\"No, I'm feeling chilled from the rain. Do they have hot tea?\"\n\n\"I doubt it,\" he said, \"but they make a wicked cocoa.\"\n\n\"That sounds great.\"\n\n\"I'll be right back,\" he said, stroking her shoulder.\n\nMary looked at Tim. He was still grinning. She looked out at the rain. \"I am not used to weather like this this time of year,\" she said.\n\n\"Where are you from?\"\n\n\"Los Angeles.\"\n\n\"You must be one of the banker folks. Have you been through a Maine winter?\"\n\n\"Not yet.\"\n\nTim shook his head in sympathy as Alvin returned and set a steaming mug down in front of Mary. He sat down and looked at Mary, and then his brother. They both looked at him.\n\n\"Well, don't let me interrupt you,\" he said. Tim obviously had questions about the pretty woman who had sat at their table, but Mary spoke first.\n\n\"So, Tim, what do you do?\"\n\n\"Oh, some of this, some of that. I work in the woods mostly, but I keep my hand in a few things.\"\n\nMary was confused about what he meant, but decided to ask Alvin later. Instead she asked him, \"Are you married?\"\n\nTim looked at his watch. \"Not at the moment.\"\n\nAlvin laughed, and Mary gave him a quizzical look.\n\n\"He can't keep track,\" he told her.\n\n\"Hey now, I have only been married to two women.\"\n\n\"Twice.\" Alvin interjected. Looking at Mary, he explained, \"He married Anna, she kicked him out, then he married Molly, but she found out he was back fooling around with Anna, so she gave him the boot.\"\n\n\"Allegedly,\" Tim put in.\n\nAlvin rolled his eyes. \"Anna took him back for a while, then he left her to go back to Molly.\"\n\nMary shook her head, not sure if she was amused or appalled. \"And now you aren't with either of them?\"\n\n\"Women are fickle,\" he shrugged. He tipped back his beer and finished it. \"Well, I'm guessing that if there are three wheels on this bike, I'm the spare. So, I'll get gone. Nice to meet you, Mary.\"\n\nHe slapped his brother on the back as he left the table. \"Don't let him get you out on his boat,\" he said, winking at Mary.\n\nMary blushed, but chuckled. When Tim had left, she took Alvin's hand. \"Your brother is an interesting guy.\"\n\n\"That he is.\"\n\n\"Is that true, about his wives?\"\n\n\"Oh yes.\"\n\n\"What did he mean about working in the woods?\"\n\n\"He has some woodlots. Cuts firewood. But he does other stuff, handyman work, bush hogging and such.\"\n\n\"Bush hogging?\"\n\n\"Clearing brush.\"\n\n\"And he makes a living doing that sort of thing?\"\n\n\"Well, he also has siblings who love him.\"\n\nMary narrowed her eyes, but nodded.\n\n\"So, what have you been up to, that you took off work for?\"\n\nShe looked out at the rainy harbor for a minute. \"Alvin, we were careless Saturday. I mean, we are okay this time, but we can't be impulsive.\"\n\nIt took Alvin a moment to realize what she was talking about. \"Oh,\" he said at last, feeling embarrassed, \"Yes, you're right.\"\n\n\"So, I went to Planned Parenthood in Bangor today to get back on the pill.\"\n\nAlvin looked down at his hands, uncertain what to say. Mary was puzzled by his reaction. \"Do you have a problem with that?\" she asked.\n\nHe shook his head. \"It's just...it's good.\"\n\n\"You don't seem to think it's good.\"\n\n\"No, it's fine. It just seems like a big step.\"\n\n\"Alvin, this is about me, not you.\"\n\n\"Seems like it was about both of us Saturday.\"\n\nShe stared at him. \"Really? We go on a few dates and you think what I do with my body is about you?\"\n\n\"No, of course not, but...\"\n\n\"But what?\"\n\n\"Well, you said yourself, we went on a few dates. This seems like, I don't know, a commitment?\"\n\nMary got up from the table. \"Don't worry, they work with anybody.\"\n\n\"Mary, sit down, let's talk.\"\n\nShe turned towards the door. Alvin hesitated a moment, then followed her. She was getting into her car when he came around the side of the building.\n\n\"Mary! Come on!\" He shouted, raising his arms in supplication.\n\nMary started the car and turned on the windshield wipers. She watched Alvin walk around to the driver's side of her car, and let him stand in the rain for a minute before lowering her window.\n\n\"Go inside, you're getting soaked.\"\n\n\"Can I call you later?\"\n\nShe stared straight ahead for a moment, then turned to look at him. \"Alvin, don't be so dramatic. Get in the car.\"\n\nAlvin dashed around and got into the passenger seat. He looked sad and bedraggled, but Mary could not help chuckling at his appearance. \n\n\"You think I'm being dramatic? You're the one who walked out.\"\n\n\"Well, that's true,\" she said, \"but listen. I like spending time with you, but I am not trying to push you into anything. I don't know what I want, and I don't know what you want. Okay? If you felt like I was being pushy, I apologize.\"\n\n\"You don't need to apologize. Well, maybe for making me stand in the rain.\"\n\n\"No, you had that coming.\"\n\n\"Let's go back in,\" he said, \"I was thinking we could get a bucket of steamers.\"\n\n\"A what now?\"\n\n\"Steamer clams.\"\n\nMary rolled her eyes. \"No, I don't want any steamed clams. Do you ever eat vegetables?\"\n\n\"I eat a lot of vegetables. Don't tell me what to do with my body.\"\n\n\"You're not as funny as you think you are.\"\n\n\"I'm wicked funny.\"\n\n\"Don't push your luck. You need to get out of those wet clothes.\"\n\n\"Yes, I need to go home and change.\"\n\n\"Then let's go. Just give me directions.\" She put the car into reverse and began backing up.\n\n\"My car's back to the wharf.\"\n\n\"I can run you to your house. I'd like to see where you live.\"\n\nAlvin felt uncomfortable with the idea of Mary coming to his house, but was not sure why.\n\n\"Well?\" she asked.\n\n\"Turn right,\" he said, \"head out on Front Street.\"\n\nThey drove past a row of weathered boat sheds and the ruins of an abandoned sardine cannery. The road split, one fork continuing along the shore, the other curving inland. At Alvin's direction, Mary turned left, away from the water. She had not been this way before. They barely spoke as the road climbed and the houses grew further apart. In a few minutes they were driving past farm fields interspersed with stand of woods. \n\n\"Turn right at the bottom of the hill,\" Alvin instructed. Mary turned on to a narrow dirt road. There were thick woods on the left side, but on the right was a large pond, and then a stretch of overgrown fields, bordered by a tumbled stone wall and a screen of trees. \n\n\"That's Puddledock Pond,\" Alvin said, \"and up ahead, the Faulkner homestead. Turn in there, by the mailbox.\"\n\nThe rain had tapered to a drizzle. Mary drove up the long muddy driveway and stopped in the dooryard.\n\n\"Oh, you've got one of those connected houses!\" She exclaimed. She had seen a number of similar farmsteads in the area, large houses connected to a barn by a row of smaller attached buildings. \n\n\"You can pull into the back house,\" Alvin said, \"right there, it's the garage, sort of.\"\n\nMary parked and they got out of the car.\n\nAlvin opened the door into a small, dim foyer. \"This is the mud room,\" he said. Alvin took Mary's raincoat and draped it on one of the hooks that ran along one wall.\n\nFrom the mud room they passed through another door into the kitchen. Alvin filled a kettle and put it on the stove. \"I'm going to go change. There's tea bags here,\" he said, taking a metal canister down from the cupboard and setting it on the rough wooden table, \"I'll be back down in a few minutes.\"\n\nMary looked around the kitchen. She was impressed with it's neatness and cleanliness. There were a few dishes in the sink, and the counter was more cluttered with condiments and spice containers than she'd have liked, but it was not the mess she imagined most men's kitchens to be. She opened the refrigerator, wondering with amusement if it was full of beer and junk food. There were a few bottles of Shipyard Ale, but there were also a half dozen cans of Coke and a few of ginger ale. It was otherwise well stocked with staples; butter, bacon, sour cream, a big block of cheddar. There was a scattering of tupperware containers, and when she opened the vegetable drawer, she was pleased to see fresh lettuce and asparagus.\n\nThe kettle whistled. She made herself a cup of tea and sat down at the table. A large gray and white cat padded into the kitchen and rubbed against her leg. She scratched his head while Alvin came back in, having changed into a pair of worn jeans and a slightly too large cable knit sweater. \n\n\"That's Angus,\" he said, making his own cup of tea. When he sat down across from Mary, the cat jumped into his lap.\n\n\"You know, I met your cousin today. Laura, is it?\"\n\nAlvin nodded, blowing on his tea to cool it. \"She's a good help.\"\n\n\"How is she related?\"\n\n\"Her father is my mother's brother, Harry.\" He chuckled. \"Now Harry is a real piece of work. Imagine Tim eighty years old and not changed a whit.\"\n\n\"Is your Mom still...\"\n\n\"She passed a few years back. Heart failure.\"\n\n\"Did she live here, with you?\"\n\nAlvin nodded. \"She was a big help with the girls, when, you know.\"\n\nThey sat and drank their tea as the light outside dimmed. Mary had a lot of questions about Bangor; what were the best restaurants? what kind of stores were there at the mall? Alvin answered as best he could, and promised to give her a tour sometime soon.\n\n\"You sure you want to take me on a shopping excursion? It doesn't seem like your type of thing.\"\n\nAlvin shrugged. \"I'd be going for the company, not the destination. Say, you getting hungry?\"\n\nMary realized that she was, and nodded.\n\n\"I made a big pot of spaghetti yesterday, still have plenty. How about I heat it up?\"\n\n\"That would be great, thank you.\"\n\nAlvin dumped Angus on the floor, fetched the spaghetti from the refrigerator and put it in a pot to warm. He took a loaf of bread from the cupboard and brought it to the table. \n\n\"Can I help?\" Mary asked.\n\nAlvin cut four slices from the loaf. \"You can butter these up.\"\n\n\"As opposed to just buttering you up all the time?\"\u2028\n\n\"You can multi-task, I'm sure,\" he grinned.\n\nMary buttered the bread, and Alvin sprinkled it with granulated garlic and parmesan cheese. He checked the temperature on the spaghetti and popped the bread in the oven. In a few minutes, he presented Mary with a steaming bowl of spaghetti and crispy garlic toast. The sauce was thick and meaty. Mary would have liked more spice, but it was good and she ate it with pleasure. \n\nAlvin fetched a bottle of red wine to go with their meal. His anxiety at having Mary to his house had vanished. Sitting across the table from her, sharing a simple meal, seemed like the most natural thing in the world.\n\nThey finished eating, and Alvin put the dishes in the sink. He held out his hand to Mary. She took it and rose, and he led her into the living room. He turned on a lamp and she looked around. It was a cozy room, a charming mix of old and new; on one wall a big stone fireplace, on another a huge flat screen TV. There was a couch, a big recliner and, next to the fireplace, an old wooden rocking chair. Mary was pleased to see that there were full bookshelves as well.\n\nAlvin sat down on the couch and Mary curled up next to him. He touched her cheek and raised her face for a kiss. She parted her lips and welcomed it. They sat like that for a while, just holding each other and sharing deep kisses. Mary ran her hand up Alvin's thigh and brushed it across his crotch. He took her hand in his and kissed it. She leaned back.\n\n\"Is everything okay?\" she asked.\n\n\"Everything is fine,\" he replied, \"let's just not rush.\" His earlier anxiety was creeping back.\n\n\"Okay,\" Mary said. She wondered if he was still feeling some agitation about their quarrel at the High Tide. \"I need to use the bathroom.\"\n\n\"It's upstairs,\" Alvin said, gesturing towards the hallway, \"first door on the right.\"\n\nMary went up the stairs. There were four doors off of the upstairs hall. She resisted the urge to peek into the other rooms, and went in the bathroom. When she had finished going to the toilet, she looked in the mirror on the front of the medicine cabinet. Her hair was a mess, but her hair was always a mess. She looked around the room, feeling guilty but unable to resist a little bit of spying. The toilet was clean, that was good. She pulled back the shower curtain. She wouldn't let her tub get that dirty, but it wasn't awful. She was pleased to see he used a bath wash and not bar soap. Somebody trained him good, she thought, then felt a little pain at realizing who that someone had probably been.\n\nShe opened the medicine cabinet. You could learn a lot about a person from the contents of their medicine cabinet, she thought. She was surprised to see that he used an old fashioned shaving mug and brush. She'd only seen that in movies. His aftershave was Old Spice, no surprise there. She felt like she was missing something, and then it hit her. There was a bottle of Tylenol, some Tums, a few other drugstore items. But there were no prescription medications. She didn't know if that was normal for a forty six year old, but she assumed it was a good sign.\n\nWhen she returned to the living room, Alvin was scrolling through music channels on the television. There was a quilt draped across the back of the couch. Mary wrapped it around herself and lay down with her head in Alvin's lap.\n\n\"This is what you like, right? This alternate rock?\"\n\n\"Alternative.\" She looked up at the screen. \"I like this song.\"\n\nAlvin read the credits. \"Lord Huron. The Night We Met.\"\n\nMary sang softly along. \n\nI am not the only traveler Who has not repaid his debt I've been searching for a trail to follow again Take me back to the night we met\n\n\"You have a good singing voice,\" Alvin said, stroking her hair.\n\n\"Thank you. Not that good, but it's okay.\"\n\n\"We should go to karaoke night out to the Roadhouse sometime.\"\n\n\"Are you going to sing?\"\n\n\"Hell no.\"\n\n\"Okay, then.\"\n\nMary sat up and twisted around to face Alvin. He cradled her in his arms and kissed her. They sat like that for a long time, listening to the music and enjoying the warmth of each other's company. Finally, Mary roused herself.\n\n\"I should go. I have to work in the morning.\"\n\n\"It's raining hard again.\"\n\nShe frowned. \"Is it?\" She listened and could make out the sound of raindrops tapping the windows.\n\n\"You can stay here tonight,\" Alvin offered.\n\nMary reached for her purse and fished out her phone. \"I'll have to get up super early to go home and change.\" She set an alarm for six a.m.\n\n\"We ought to get some sleep then,\" Alvin said. He stood up and lifted her up beside him. He took her hand and led her towards the stairs, but as he did, he started to feel anxious again. Mary started up the stairs and he followed her.\n\n\"Past the bathroom on the right,\" he directed her.\n\nMary pushed the half open door and entered the bedroom. Alvin stepped in behind her and flipped the wall switch. When the room lit up, Mary looked around. It was cluttered but clean. It appeared that Alvin was neat enough to make sure his clothes were clean and folded, but was not in the habit of actually putting them in drawers or on hangers. There was a dresser with a large round mirror against one wall, and a tall chifforobe in the far corner, but the room was dominated by a big wooden four poster bed. Mary crossed to it and sat on the edge. It was what her mother had called \"half made,\" the covers pulled up, but not tucked in or straightened out.\n\nAlvin stood frozen in the doorway. Mary looked up at him, puzzled. \"Are you okay, honey?\"\n\nHe stared at the bed, and Mary sitting on it. A rush of thoughts flew through his mind. He remembered going with Bonnie to McCoy's Furniture store and buying that bed. They had conceived their daughters in it. He remembered the first night they spent in it, and he remembered the last. He slumped against the door jamb. \n\n\"Mary, I, I can't...\"\n\nMary looked at him, then around the room. She looked at the dresser. It was a woman's piece of furniture, out of place in a man's room. She looked down at the bed, and she understood. She rose and went to him. Placing her arm around his waist, she turned him into the hallway.\n\n\"It's okay, baby,\" she said, \"let's go downstairs.\"\n\nThey returned to the living room. \n\n\"I don't want you to go,\" Alvin said, \"but the bed, it just...\"\n\n\"It's her bed. Or, yours, you and her\"\n\n\"Yes. I'm sorry\"\n\nShe hugged him. \"Don't say that. I understand.\"\n\n\"If you go, I am going to be afraid you'll get to thinking I rejected you.\"\n\n\"I won't.\"\n\n\"You might.\"\n\n\"Is there a guest room?\"\n\n\"There's the girl's rooms.\"\n\n\"Now, that is something I'm not ready for.\"\n\n\"There's the couch.\"\n\n\"We can sleep on the couch,\" she said, \"It will be tight though.\"\n\n\"I sleep in the recliner sometimes when my back bothers me, I can sleep there.\"\n\n\"You sure?\"\n\nHe nodded and went upstairs to get blankets and pillows. Mary wandered over to the fireplace. There was a row of framed pictures on the mantel. The first one she looked at was fairly recent, Alvin and Tim and a handsome dark haired woman she assumed was their sister. There was a faded black and white wedding picture, that had to be his parents, and a shot of two pretty teenage girls in summer dresses. Charlotte and Jennifer, she thought. C and J. And there was a smiling round faced woman, with pixieish features and cascades of blonde hair. Bonnie.",
        "When she heard Alvin coming down the stairs she crossed the room. She didn't want him to know she'd been looking at the pictures. He had changed into sweatpants and a t-shirt, and was carrying a stack of bedding. He set it down on the seat of the rocking chair, and took a t-shirt from the top of the pile. He held it up and showed it to Mary.\n\n\"I thought this might make for a good night shirt for you. Sorry it's a Celtics logo, don't have one with the Lakers.\"\n\n\"It will be fine, thank you.\" She took the shirt and went upstairs to the bathroom to get ready for bed. \n\nAlvin stretched a sheet across the couch and tucked the edges under the cushions. He fluffed up a couple of pillows and spread out the quilt. When Mary returned, she smiled at the cozy bed he had made for her.\n\n\"You may not be a Celtics fan,\" Alvin said, \"but anybody seeing you in that shirt would be.\"\n\nShe laughed and kissed his cheek. He raised the quilt and she crawled under it. Alvin leaned over and kissed her tenderly, then reached up and turned off the lamp. He sat down in the recliner and leaned it back, pulling his blanket over him.\n\nMary felt a weight land on the foot of the couch and could make out the shape of Angus, settling into a snug nest between her legs and the back cushion.\n\nShe closed her eyes, but sleep did not come. Her mind was filled with thoughts of the picture on the mantel and the empty bed upstairs. She listened to the rain, and the cat's purr, and to Alvin. He was restless, constantly shifting in his chair.\n\n\"Alvin?\" she said, barely above a whisper.\n\n\"Yes, dear?\"\n\n\"Tell me about her.\"\n\nAlvin was silent for a moment.\n\n\"It's hard, Mary.\"\n\n\"I know it is.\"\n\nAnother moment of silence passed.\n\n\"There was an ice storm...\" he began, then paused. Mary reached across the gap between the couch and the chair and touched his arm. He squeezed her hand and continued.\n\n\"I was down to the wharf checking that everything was alright, and I slipped and fell. Landed on my arm and stove up my wrist wicked bad. Wasn't broke, but pretty jacked up. I went to the E.R. and she patched me up. She was brand new too, hadn't been there but a few weeks.\"\n\n\"How old were you?\"\n\n\"Nineteen. She was twenty. See, it hasn't always been the younger ladies for me.\"\n\n\"So, let me guess. You asked her to go sailing with you?\"\n\nAlvin chuckled. \"No. Turns out she hated sailing, hated being on boats at all. What she liked was her hands in the dirt.\"\n\nHe stopped talking and Mary thought he had said all he was going to say. But then he began speaking again. Mary lay quietly listening. He told her about helping Bonnie clear the ice from her car windows, struggling to use the scraper with his one good arm. He told how she had given him her number, but it had blurred in the rain,and how he had come to the hospital again the next day to find her.\n\n\"Funny thing, though. When I found her and asked her out, she said no.\"\n\n\"Why did she say no?\"\n\nBonnie had a boyfriend, or at least, a guy she was seeing. His name was David LePierre. He was a paramedic she had met while doing her nurse's training. Alvin asked her why, if that was the case, she had given him her number.\n\n\"Well, you were so kind, helping me with the ice, even with your injured wrist.\"\n\n\"Winter ain't over,\" he replied, \"might be a chance I'm kind again.\"\n\nBonnie laughed at that. \"Listen, maybe. Let me think about it. Give me your number.\"\n\n\"You've got my number on your paperwork.\"\n\n\"It wouldn't be ethical to call you because I got your number off your medical records.\"\n\n\"But it's the same number either way.\"\n\n\"Write it down,\" she insisted, and so he did. He left feeling dejected, but at least he had taken his shot.\n\nWhile the wharf was closed for the winter Alvin was working at his Uncle Harry's sprawling junkyard, just outside of town. Harry was completely disorganized, and Alvin was trying to sort through and catalog hundreds of car parts, small appliances and other junk. It had been two weeks since he'd injured his arm, and while it was still sore, it had regained most of its functionality.\n\nHe came home after a day of sorting to find a note pinned to the cork board next to the wall mounted phone in the kitchen. It read \"Alvin-Call Bonnie\" with a phone number scrawled beneath. He got a can of Coke from the refrigerator and sat down at the table, staring at the note. He'd given up on the idea of going out with Bonnie, but now it might be a possibility. But he was wary. She'd given him her number once before, after all, and then turned him down.\n\nHe dialed the number. A woman answered.\n\n\"Hello, Bonnie?\"\n\n\"No, this is Sandy. Hang on.\" He heard her yelling in the background, \"Bonnie, a guy for you!\" \n\nThere was a moment of murmuring in the background, then Bonnie came on the line and said hello.\n\n\"Hi, it's Alvin. I got a message you called.\"\n\n\"Yeah, I did,\" she said, then went silent.\n\n\"Uh, so, what's up?\" he asked.\n\n\"I was wondering.I wanted to go see Bill and Ted's Excellent Adventure. Want to go with me?\"\n\n\"When?\"\n\n\"Saturday? I was thinking, you kind of look a little like Keanu Reeves, don't you think?\"\n\n\"Not really. Isn't he Hawaiian or something?\"\n\n\"I don't know. I guess. So, do you want to go?\"\n\n\"What happened to that David?\"\n\n\"Well, I decided I didn't want to just see one guy. I mean, we don't have a commitment or anything.\"\n\n\"Well, sure. I'd like to see you.\"\n\n\"Great!\" She gave him her address and details about the movie time and said goodbye.\n\nAlvin was on her porch right on time, freshly shaved and showered and wearing his nice clothes. A short, burly man answered the door and looked him over.\n\n\"You here for Bonnie, son?\"\n\n\"Yes sir.\"\n\nThe man gave him one more look, then decided to let him in.\n\n\"Bonnie!\" the man cried, \"your fella is here.\" He gestured to the couch. \"Sit down, kid. God knows how frickin' long she's gonna be.\"\n\n\"Alright. That's fine, no hurry.\"\n\n\"The wife's gone to Bingo down to the Redmen's Hall.\"\n\n\"Um, okay.\"\n\nBonnie's father picked up his Bangor Daily News and began reading. Alvin sat waiting nervously. It was a long few minutes before Bonnie came bounding down the stairs, followed closely by a smaller version of herself. The younger girl was clearly curious to see who her big sister was dating.\n\nBonnie took Alvin's arm and headed out the door. \"See you later, Papa,\" she called, without waiting for a response.\n\nThey both enjoyed the movie, but agreed that Alvin did not really look much like Keanu Reeves after all. Afterwards, Alvin suggested that they go for a pizza or burgers, but Bonnie declined, saying that she had a busy schedule the next day. When Alvin walked her to the door, she said good night, gave him a quick kiss on the cheek and went inside. He stood on the porch for a minute wondering if he'd somehow put her off. He drove home feeling disappointed. He thought about calling her all day Sunday, but when he finally got up the nerve to do so, her mother answered and told him that she was at work.\n\nHe tried again on Monday, and this time, her mother called her to the phone.\n\n\"I hope you had a nice time Saturday,\" he said after they had exchanged greetings.\n\n\"I had a very nice time.\"\n\n\"Good. Because you seemed kind of in a rush to get home.\"\n\n\"Oh, well, we had family stuff planned, and I had to work last night, so I just didn't want to be out late.\"\n\n\"Well, alright then. So, maybe we could go out again next weekend.\"\n\n\"Uh, no,\" she replied,hesitantly, \"I've got plans.\"\n\n\"Oh.\" Alvin realized that her plans probably included that goddamn paramedic. \"Well maybe some other time.\"\n\n\"Okay. Give me a call then.\"\n\n\"Alright. Bye.\"\n\n\"Bye.\"\n\nAlvin hung up the phone, but before he could stand up, it rang.\n\n\"Step up your game, bub,\" Bonnie said.\n\n\"What?\"\n\n\"If you want me to go out with you, act like it.\"\n\nShe hung up the phone. Alvin sat for a while, perplexed. He'd been perfectly nice to her, he didn't understand what he was supposed to do.\n\nDiana came into the kitchen, carrying a bag of groceries. As she put them away, Alvin described the conversation he'd had with Bonnie.\n\n\"Let me ask you a question,\" Diana said when he had finished, \"Did you open the car door for her?\"\n\nAlvin blushed. \"No, I guess I didn't\"\n\n\"Uh huh. Where did go for supper?\"\n\n\"We just went to the movies.\"\n\n\"So, you spent what? Five bucks on her? Assuming you bought her popcorn.\"\n\n\"I don't think it ought to be about how much you spend.\"\n\n\"No, it ought to be about if you treat her like she's worth spending something on.\"\n\n\"She said to pick her up for the movie, so that's what I did.\"\n\n\"You should have suggested going to supper first. Even if she didn't want to, you'd get points for asking.\"\n\n\"So, I ought to be doing candy and flowers and all that.\"\n\n\"You know what your problem is? Every girlfriend you ever had, you treated her like you were pals. Well, that's okay for high school, but not a grown up woman.\"\n\nAlvin thought about what Diana said. \"Alright, so I ought to do the whole romance thing, candy and flowers and all that.\"\n\n\"Don't be a simpleton,\" Diana laughed, \"Sure, get her candy and flowers but think past that. It's not what you buy her, it's how you treat her.\"\n\nDiana got up and took a soda from the refrigerator. As she turned to leave she said, over her shoulder, \"Ask yourself, what would John Cusack do?\"\n\n\"I have no idea what that means.\"\n\n\"There's your problem right there,\" she said as she left the room.\n\nAlvin pondered his sister's advice. He recognized that she was right. And he thought about Bonnie's exasperated words. If he wanted to go out with her, and he did, he would act like he did. He picked up the phone and dialed her number.\n\n\"Jeezum,\" Bonnie's mother said at the sound of his voice, \"Bons, that guy again.\"\n\nBonnie came on the line.\n\n\"Hey, I was thinking, \"Alvin said, \"What are you doing tomorrow night?\"\n\n\"Working.\"\n\n\"Wednesday?\"\n\n\"Working.\"\n\n\"Thursday?\"\n\n\"I'm off.\"\n\n\"Would you go for supper with me?\"\n\n\"Where?\"\n\nAlvin was about to ask her where they ought to go, but caught himself. \"Let me surprise you.\"\n\n\"Okay. What time?\"\n\n\"I'll pick you up at six.\"\n\n\"Sounds good. I'll see you then.\"\n\nAlvin hung up and sat for a few minutes, wondering what to do next. Finally he decided to go upstairs and ask Diana to suggest some restaurants in Rockland.\n\nBy Thursday, he was ready, or at least as ready as he could be. He had found a dinner jacket in his father's closet that was only slightly too wide in the shoulders for him. He had polished his shoes and trimmed his nails. He had even washed his car.\n\nBonnie's father opened the door and saw Alvin standing there in his Dad's jacket, holding the small bouquet he'd picked up at the florist, and bellowed over his shoulder, \"Bonnie! You going to the prom?\" But as Alvin stepped into the room, he patted him on the back and grinned.\n\nBonnie came down the stairs in a pretty pale green dress. She smiled at Alvin and took the flowers. Her mother came in from the kitchen and introduced herself.\n\n\"You two have a lovely evening,\" she said, as Alvin helped Bonnie into her coat.\n\n\"Bring home leftovers,\" her father said from behind his newspaper.\n\n\"Oh hush, I've got chop suey in the oven,\" his wife admonished him.\n\n\"Bring home lots of leftovers,\" he muttered.\n\nAlvin walked Bonnie to the car and opened the door for her. \n\n\"Where are we going?\" she asked when he'd gotten behind the wheel.\n\n\"I made reservations at The Pearl Inn.\"\n\n\"Oh, that's a nice place.\"\n\nA light snow was falling as they arrived at the Inn. It was one of the most expensive restaurants in town, located on the harbor pier.\n\n\"I'm always nervous at these high end places,\" Alvin told Bonnie as they waited for their server, \"I'm afraid I will use the wrong fork or something.\"\n\n\"And what do you think will happen if you do?\"\n\nHe shrugged, and she said, \"I promise that if you use the wrong fork, I will go out with you again.\"\n\n\"Good, you just promised to go out with me again.\"\n\nBonnie laughed, \"Sure, if you are going to take me to places like this.\"\n\nAlvin had picked up some good tips from Diana. He had opened the door for Bonnie and he had held out her chair when they arrived at their table. He let her order first and most importantly, according to his sister, he let her talk, and he listened.\n\nWhen he asked Bonnie why she had become a nurse, her face lit up. \n\n\"It's all I ever wanted to be. Did you ever notice that nurse and nurture are related words? People think about nurses and they think about, I don't know, bedpans, changing bandages, whatever. They don't think about the time we spend with patients, with their families. We are almost like ministers in a way, on top of everything else.\"\n\n\"Would you ever want to become a doctor?\" Alvin asked.\n\nBonnie shook her head. \"No. Doctors fix. Nurses heal.\"\n\nShe talked all the way through their meal, about her patients, her co-workers, her family. Alvin was content to listen, and to learn about her. She was smart and witty and observant. Long after their plates were cleared, he sat, his chin on his fist, enraptured by her.\n\n\"Our waitress is sort of hovering,\" she whispered to Alvin eventually, \"I think she'd like us to go.\"\n\nAs they were preparing to leave, Alvin excused himself to use the men's room. \n\n\"I'll meet you outside,\" Bonnie said, \"I'm dying for some fresh air.\"\n\nWhen Alvin stepped outside a few minutes later Bonnie was standing at the railing, looking out at the harbor lights sparkling on the dark waves. She turned and looked at him, lit from a lamp post over her shoulder. Snow glittered in her hair like the light danced on the water. She looked up, and stuck out her tongue to catch a snowflake. Alvin crossed to her and put his hands on her shoulders. He leaned in and kissed her. She sighed softly and kissed him back.\n\nAlvin lowered the foot of his recliner and stood up.\n\n\"Still with me, Miss Mary?\" he asked.\n\n\"Yes, I'm still listening.\"\n\n\"I need some water. Can I get you some.\"\n\n\"No, I'm fine, thank you.\"\n\nHe went to the kitchen, filled a glass and took a long drink. He topped the glass off and took it back to the living room.\n\n\"That's when you knew,\" Mary said, as he reclined.\n\n\"What's that, dear?\"\n\n\"When she caught the snowflake on her tongue, you knew you were in love with her.\"\n\nAlvin was quiet for a minute and then said, softly, \"I suppose I did.\"\n\n\"And she was in already in love with you.\"\n\n\"Maybe. It was awful quick for that.\"\n\n\"Sometimes it is quick.\"\n\n\"Well, that weekend was the last time she went out with that LePierre dubber, I know that.\"\n\nHe told Mary that while he and Bonnie had dated steadily, when winter gave way to spring and Alvin became busy with opening the wharf for the season, it was difficult to find time to see each other. The relationship strained, but did not break. On a blustery Easter weekend, they managed to arrange time off together. They met in Camden and spent the weekend making love in a room at the Lord Camden Inn.\n\n\"I wish I had a more romantic tale,\" Alvin told Mary, \"but it was just a wicked pain in my ass, trying to see each other with me at the wharf all day, her working second shifts that didn't get her out until late. And then she'd go home to Rockland. So, after a bit we just said, frick it, let's get a place together.\"\n\nThey rented a little house on Oak Street, furnishing it primarily with second hand items from Goodwill. The one thing Bonnie insisted on was that they buy a new bed, and so they went to McCoy's Furniture and bought the big four poster.\n\nThey only had a small side yard, but Bonnie wanted a garden, so Alvin turned the earth and they managed to find room for a row of tomato plants and a few sweet peppers. Alvin built a flower box for her, and she filled it with marigolds. Even such a tiny garden became a place of solace for Bonnie after a stressful day of work.\n\nAs Mary listened to Alvin, she thought his tale of the little house and Bonnie's garden sounded quite romantic. She wished she could have seen him as a young man.\n\n\"We stared talking about getting married not long after,\" Alvin said, \"I don't recall exactly, but it was still summer. Actually, we started talking about kids, and that got us thinking that we ought to tie the knot.\"\n\n\"I would have thought you made a big show of proposing,\" Mary said.\n\n\"Well, I did it right, got done on one knee and all.\"\n\nIt was a balmy late summer evening. They had enjoyed a supper of grilled steaks served with thick slices of Bonnie's tomatoes. After they ate, they walked down to the little variety store on the corner and bought popsicles. As they made their way home, Alvin took Bonnie's hand.\n\n\"You know,\" he said, \"I didn't want to come back here after my Dad died. But now, I look around this town, and I love it here. I wouldn't want to live anywhere else.\" He stopped at the path to their door and turned to face her. \"But, mostly, I love it because I'm here with you.\" He kissed her and her lips tasted of sweet cherry.\n\n\"I love you Alvin.\"\n\nHe was overcome with emotion, and impulsively, he dropped to his knee. He flung the last of his popsicle aside and took her hand.\n\n\"Bonnie Pierce,\" he said, tears welling in his eyes, \"will you marry me?\"\n\nBonnie stroked his head. \"Alvin Faulkner, I will marry you.\"\n\nHe stood and took her in his arms. \n\n\"Why are you crying?\" she asked him.\n\n\"Just happy tears, honey.\"\n\nThey sat on the porch and held each other. Fireflies flickered in the bushes and they watched them dance for a while, then went inside to bed.\n\nThe wedding was in April. It was a windy day and the threat of rain loomed as Alvin and Bonnie, surrounded by their friends and families, pledged their love in the little gazebo at the city park. The weather held though, until after the ceremony had ended, the cake had been cut and the guests had made their way home. They spent their wedding night making love at the Ocean View Bed and Breakfast, and in the morning drove to Quebec for their honeymoon.\n\nA year later, Bonnie came home from her shift at the hospital with a pregnancy test. Alvin had been ambivalent about having children. He accepted that it was something that they would do, but he felt no particular urgency or enthusiasm about it. As soon as the test read positive, that changed. He fell in love with the idea of fatherhood, and on the cold January night when he first held Charlotte in his arms, he fell in love with the reality. He dreamed of a son, but when Jennifer came two years later, he could not have been happier.\n\nAlvin's voice broke as he told Mary about the births of his daughters. She could hear the love in his words and for the first time in a long time, she felt the sting of disappointment that Wyatt had been so resistant to having children.\n\nAlvin got up and went to the bathroom. Mary sat up on the couch, wrapping the quilt tightly around her. She was getting very sleepy but she was determined to listen to Alvin tell his story. Bonnie's story.\n\n\"I ought to let you get to sleep,\" he said when he came back into the living room.\n\n\"I'm okay,\" she replied. He sat back in his chair, but did not recline.\n\nAlvin told Mary how the wharf had prospered as he and Diana gained experience running the business. They were doing well enough that they needed more help and hired their cousin Laura. \n\nWhen Bonnie got her certification as a Registered Nurse, she and Alvin started hunting for a house of their own. But shortly after Charlotte started kindergarten, their plans changed.\n\nAlvin had just finished raking leaves in the front yard and was watching Jennifer jumping in the pile and undoing all his efforts when the phone rang. It was Bonnie, calling from the hospital.\n\n\"Honey, it's your Mom. She's in the E.R. It looks like she had a heart attack.\"",
        "Alvin waited ten anxious minutes for Charlotte's school bus, then scooped the girls into his car and rushed to the hospital. Diana was already there when he arrived. They sat, side by side, each cuddling a child in their lap, waiting for news. Tim was out of touch, somewhere in the woods. \n\nIt was almost an hour before Bonnie emerged. Both girls ran to their mother, anxious but unaware of the seriousness of the situation. Bonnie herded them into seats, then beckoned Alvin and Diana out of their earshot.\n\n\"Hannah has had a pretty serious infarction, a heart attack. She's stable. They are prepping to take her up to Bangor. It's going to take a while to assess how much permanent damage there is to her heart muscles.\" She paused, put her hand to her mouth and squeezed her eyes tight. Alvin put his arm around her, and Diana stroked her arm.\n\n\"You guys,\" Bonnie continued, \"She knew she was having a heart attack and she got in her car and drove herself here.\"\n\n\"Jeezum crow,\" Alvin muttered. He was shocked, but also a bit proud of his mother. What a tough old gal, he thought. \n\nWhen Hannah was ready to be transported to Bangor, Diana went with her. Alvin took the girls home, fed them and put them to bed. When Bonnie finished her shift, he drove to Bangor and spent the night sitting with his sister at his mother's bedside.\n\nHannah was moved to hospice care a week later. She was gaining strength daily, but it was unclear when, or how much, she'd be able to take care of herself again.\n\nOn Halloween, Alvin took his daughters trick or treating, while Bonnie stayed home to pass out candy. The girls were dressed in matching kitten costumes their mother had sewn for them. Jennifer did not last long, and when they came home, she was fast asleep in her father's arms.\n\nBonnie was sitting on the porch as Alvin and the girls came up the walk. Charlotte excitedly showed her mother her bounty while Alvin carried Jennifer in to bed. Bonnie was helping Charlotte sort her candy when he returned. He sat down with them as a pair of Jedi Knights ran up to the porch to get their treats.\n\n\"Get many kids?\" Alvin asked.\n\n\"A good few,\" Bonnie answered, \"just stragglers now.\"\n\nAlvin dipped into the candy bowl and came up with a Snickers bar. \"Getting wicked chilly. Time to call it a night?\" he asked.\n\n\"Not yet,\" she said. She stroked Charlotte's head. \"Go get into your jammies, kitty cat.\"\n\nWhen Charlotte was inside, Bonnie turned to Alvin. \n\n\"Your Mom should be able to go home in a few days.\"\n\n\"Yes, that's great,\" he said, munching his candy.\n\nShe frowned. \"No, honey, it's not.\"\n\n\"How do you mean?\"\n\n\"She can't take care of herself. And even if she could, it's dangerous for someone in her situation to live alone.\"\n\n\"Well, what can we do? We don't have room for her, and neither do Di and Dan. And god knows, she can't live with Tim.\"\n\n\"It's pretty obvious when you think about it, Alvin.\"\n\nHe shook his head, held out the candy bowl to a princess and waved to her mother, waiting on the sidewalk.\n\n\"He aren't moving out to the farm,\" he said.\n\n\"Give me one good reason why not?\"\n\n\"Because you don't want to live there. I suggested it when we got married. You hated the notion.\"\n\nBonnie was quiet for a minute. \"No woman wants to live in another woman's house,\" she said at last, \"but the situation has changed.\"\n\n\"You already told her we would, didn't you?\" he asked her.\n\n\"Of course.\" She took his hand. \"It's what people do, honey. It's what families do.\"\n\n\"Well, alright then.\" He put his arm around her and kissed her forehead. \"I love you, Bonnie Pierce.\"\n\n\"I do want one thing, Alvin.\"\n\n\"Anything, baby.\"\n\n\"All that land out there, I want a big, big garden.\"\n\n\"You got it, sweetheart.\" He stood up and held out his hand. She took it and rose beside him. She gave him a kiss, then looked over his shoulder. \"One more straggler,\" she said, \"I'll go in and get Charlotte ready for bed.\"\n\nThe little boy in the Batman costume saw the couple kiss and walked past their house. \n\n\"Hey, Bub,\" Alvin called as Bonnie went inside. The boy turned. \"Yeah, Bruce Wayne, come here.\"\n\nAlvin looked into the bowl. There were a dozen candy bars left. The boy walked over and held his bag open. Alvin dumped the bowl into it.\n\n\"Thanks, mister!\" the boy exclaimed.\n\n\"Nah, Bub, thank you for keeping the neighborhood safe,\" he said, and went inside.\n\nThey moved into the farmhouse and Alvin kept his promise. Over the winter, as Hannah and Bonnie worked out an arrangement on sharing the house, he worked on the old tractor that had sat idle in the barn for years. He had it running by spring, and when the ground thawed, he turned the soil on a patch of pasture near the barn and furrowed it into long neat rows.\n\nThe garden became Bonnie's special place. She loved her job, but it was often stressful and coming home to nurture her vegetables gave her a sense of peace. It was nursing of another kind, she supposed. When she put the first fruits of her labor on her family's dinner plates, she was filled with pride.\n\nThe next year, Alvin and Tim built a swing set near the garden, for Charlotte and Jennifer to play on while their mother tended her plants. She added a row of bean poles that year and joined the Londonderry Garden Club. Early in the fall, Charlotte ran into the house, excitedly shouting that there were deer in the yard. Bonnie rushed out to chase them away, but they had already eaten half her beans. Before the next spring, Alvin had enclosed the garden with a high picket fence.\n\nThe seasons passed. Londonderry was growing as a tourist destination as other towns along the coast became more crowded and expensive. Business at the wharf was very good. Bonnie was busier than ever as well. Her work with the Garden Club led to appointment to the Parks Committee. She and Alvin both became very involved with the PTA once both of their girls were in school. During the summers, they were so busy it seemed like they rarely saw each other, but when the snow came, they would have time together and every year, they renewed the bond between them.\n\nCharlotte and Jennifer were growing, developing their distinct personalities. Charlotte was serious, her nose always in a book. Jennifer was happier outdoors, playing in the fields or wandering in the woods. Bonnie missed the days when they would play by her side as she weeded or sowed. Alvin would come to the garden, to bring her an ice tea or just to sit with her in the quiet of the evening, but she was happy for some solitude, with no worries about the patient fighting sepsis or Charlotte's discovery of boys or Jennifer's struggle with math or Hannah's latest complaint. She had gone from her father's home to her husband's. The garden was her place, and hers alone. \n\nOn an unseasonably hot day in September, Alvin came home for lunch. It was a Tuesday, and his mother would be at physical therapy. Jennifer would not be home from school for a couple of hours. Charlotte, in middle school now, would be even later. He was looking forward to a rare chance to spend some time with Bonnie, just the two of them. The passion remained in their love, but the opportunities to express it had grown rare.\n\nThe house was quiet. That was not surprising. Bonnie was probably in her garden. The pantry was filled with jars of dilly beans and stewed tomatoes, and more were coming. As he passed through the kitchen he could see a stack of zucchinis on the counter and on the table a basket overflowed with ripe red peppers.\n\nHe walked out through the mud room and around the barn.\n\n\"Bonnie?\" he called, \"you out here, honey?\"\n\nThe garden gate was open, the little wagon she used to tote her tools parked beside it. He stepped into the garden, but did not see her. Her car was in the back house, so she had to be around somewhere. He turned to leave the garden when a flash of color caught his eye. He walked past the rows of broccoli and cabbage and saw it again, a patch of yellow through the green. Then he saw her. She was lying, face down, between the rows of tomatoes. It was her bright yellow shirt he had noticed. \n\nFor a few seconds his mind was blank. What he saw made no sense. Why would his wife be lying in the dirt, in the hot sun? Why wasn't she moving?\n\nHe rushed to her and fell to his knees beside her. \n\n\"Bonnie?\"\n\nHe kept repeating it, over and over.\n\n\"Bonnie? Bonnie?\"\n\nHe said it as he turned her over. He said it as he saw the line of blood beneath her nose and the dirt on the side of her face.\n\nHe said it again and again, until the awful realization overtook him, that she was not breathing, that her heart was not beating.\n\nHe knew he had to call the police, an ambulance, her father. But she was in his arms and he could not let her go. He thought that he would sit there and hold her, until the sun went down and after it rose again, he would sit there and hold her until the snow came and covered them and they could be together again.\n\nBut he thought of Jennifer, and of Charlotte. They would be home soon.They could not see their mother like this. They could not see their father as he was either. They would need him to be strong, to be in control, to be able, somehow, to tell them the the world had not ended. He pulled his shirt over his head and folded it into a pillow. Gently, he laid Bonnie's head on it, and went into the house to make his calls.\n\n\"An aneurysm,\" Alvin told Mary. \"No way to know how long it was there, just waiting to rupture. She had headaches sometimes, but nothing we thought to worry about. Then it just popped and she was gone.\"\n\nHis face was wet with tears. He felt drained, but somehow lighter. In all the years since he had lost her, he had never spoken about her so much.\n\n\"I've kept you up late,\" he told Mary, \"I'm sorry for that.\"\n\n\"Don't be,\" she replied, her voice quivering, \"don't ever be sorry to be open with me.\"\n\n\"It's really not my way.\"\n\n\"I know. That New England thing.\"\n\n\"Ayuh,\" he said, with exaggeration.\n\n\"Go to sleep, you sweet man.\" She wanted to go to him, take him in her arms, cradle his head. But she already knew him well enough to understand that he wanted to spend the minutes before he slept alone with his thoughts.\n\nSomething startled Mary from her sleep. It took her a few seconds to remember where she was. It was just beginning to get light outside. The rain had stopped. She sat up, picked up her phone from the end table, and turned off the alarm.\n\nShe heard it again, the sound that had awakened her. It was a long, mournful cry. Her first thought was that it was the cat, but Angus was curled up in the rocking chair.\n\nIt came again,and she thought it sounded like a person, a woman, crying in sorrow. She went to Alvin and tapped his shoulder.\n\n\"Alvin. Alvin, wake up.\"\n\nAlvin opened his eyes and saw Mary standing over him. He started to smile, but even in the dim light he could see the look of distress on her face.\n\n'What's the matter, honey?\" he asked.\n\n\"I think there is somebody outside. It sounds like they are crying.\"\n\nAlvin listened, and the cry came again.\n\n\"It's just the loons, sweetheart. Over on the pond.\" He took Mary's hand and pulled her down to him. She crawled onto his lap and he wrapped his arms around her.\n\n\"Now I feel foolish,\" she muttered.\n\n\"You're not a fool, you're just a flatlander.\"\n\nShe gave him a playful punch on the shoulder and a kiss on his forehead.\n\n\"I ought to go home and get ready for work,\" she said, climbing from Alvin's lap.\n\n\"Yes, I could use a early start too. Ought to be a busy day if the weather's turned fine.\"\n\nMary went upstairs to freshen up and dress. At the top of the stairs she stopped and stared at the half open bedroom door. In the distance, the loon cried again. She went into the bathroom and shut the door.\n\nAlvin had coffee and toast and jam ready for her when she came back down.\n\n\"I look a mess,\" Mary said as they ate.\n\n\"A fine mess, If I'm asked,\" he replied.\n\n\"Alvin, I know that it wasn't easy for you to talk about Bonnie. Thank you.\"\n\nHe looked into his cup. \"Well, I'm sorry you had to sleep on the couch.\"\n\nThey finished their coffee and Mary got ready to leave. \"Are you sure you don't want me to drive you to town?\" she asked.\n\n\"I can drive the pick up in.\"\n\nHe walked her to her car. The sun had topped the horizon and the morning was bright and clear. When they had arrived, the gloom and drizzle had obscured the view, but now Mary saw that the long, open meadow was awash with lupines and Queen Anne's Lace.\n\n\"I'll call you later,\" Alvin said.\n\nMary put her hands on his shoulders. \"You know what? Don't. Take the day for yourself. Call me tomorrow.\"\n\nAlvin nodded. \"Alright, tomorrow.\" He kissed her and she got in the car. She turned around and headed down the driveway, splashing through puddles all the way.\n\nHe watched until she reached the road, then he turned and walked through the wet grass, around the side of the barn. One side of the picket fence had fallen over and lay in a tangle of weeds. The other three looked like they might soon join it. The latch on the gate was rusty, but opened easily enough. He stepped into Bonnie's garden for the first time in years. The bean poles still leaned in their row, and here and there a stake still marked the spot where one of her beloved tomato plants had grown.\n\nSlowly, hesitantly, he crossed the garden and stood before the spot where she had lain. He dropped to his knee and reached forward with one trembling hand. He pressed his palm into the earth and closed his eyes against the tears. A gust of wind blew through the nearby trees, shaking loose a shower of rainwater. As the drops pattered against the ground, Alvin imagined it was the sound of departing footsteps."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-06"
}