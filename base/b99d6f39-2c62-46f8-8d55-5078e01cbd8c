{
    "title": "Just Being Friendly",
    "pages": [
        "It's a romance; it just took me a while to get it there. My list of thanks are always to those friends of mine who share so much time and their expertise with me. To Hal1 who started the ball rolling and the rest of you who helped get it to print. Thank you. \n\n******* \n\nWith the sun at its highest, the back of my hand wiped away the sweat from my forehead. I looked at the For Sale sign once again and sighed. I missed Barney. When his wife Cheryl passed, we both knew he would be under pressure from his two boys to move in with one of them. He felt he didn't want to alienate either family and choose, so he always put it off. That was until the wives and grandchildren came down to visit and eased his worries.\n\nThe house went up for sale two weeks later and so far there had been no interest. I phoned Barney and told him that, since I had my mower out, I would keep the grass down on his property, both front and back. A couple of days later the realtor came by and thanked me. She was a sweet lady and I personally thought she was looking on Barney's house as an albatross. \n\nBefore the wives took action, Barney and I had worked out a schedule to modernize the house before he left, but his boys wanted to get him out of there in case he changed his mind. Don't get me wrong, it just needed dragging into the twenty first century; everything in that house worked. \n\nAll the gas and electric had up to date inspection certificates, but the house was to Cheryl's taste. Although she could sure cook one heck of a Sunday roast and an apple pie to just die for, she could also hold her own in any argument and scream as loudly as both Barney and I did when it came to sitting down to watch the Sunday night football game. But given her taste in furnishings and d\u00e9cor, I often thought her middle name may have started with \"eccentric.\" \n\nOver the spring and into the summer I kept up the mowing and watched that For Sale sign sit and do little else. On one of my phone conversations with Barney, he told me that the realtor had asked him to consider dropping the asking price. We both knew he could. But Barney knew the value of things and the house was valued at what he wanted for it. \n\n*******\n\nTowards the end of summer, I got the phone call I would have traded anything I owned not to have received. I guess Barney couldn't live without Cheryl after all. His boys asked me if I wanted to attend his funeral. After thanking them for thinking of me and asking, they told me the date and I circled it on my calendar and my heart. \n\nIt was a closed family affair which made me both proud and humbled that they thought to invite me. Barney took Cheryl's ashes with him when he moved. His boys respected his wishes and when he was cremated, they placed both urns side by side in a small alcove in the cemetery. The plaque said it all really: \"Here lies Cheryl and Barney Thomson, they loved in life and will continue to love in death.\" \n\nI'm not proud, but after reading that, my feelings of losing two very good friends of mine in such a short space of time made me cry and more than once. When I interacted with these two people I had to wonder if I could find that deeper love. His boys insisted I stay for a few days, I protested but they played dirty and got the wives involved, so there was little choice but to cave. My week with these people was nothing short of heartwarming and heartbreaking at the same time, the wives may not have been Cheryl clones, but they both knew family values and stuck to them like glue.\n\nMy week flew by and even at the airport I was forced to promise not to lose touch with any of them. The flight home was more autopilot to be honest and left me time to think about my life. I was a true \"born on the wrong side of the tracks kid\" my folks may have been poor but they pushed me really hard to get a decent education. That decent education got me into the Army and caused the only rift I ever had with my folks. I came home in uniform and spent a week with them: we healed the rift and I will forever be grateful for that week. \n\nA year into my enlistment I got a letter that nearly killed me. A fire had broken out in the trailer park, and went rampant. Six people died before the fire department got it under control. I was allowed compassionate leave to bury my folks. The funeral director told me that the damage to both my folks meant it would be a closed casket ceremony.\n\nMy decision was based on that conversation and I cremated both my folks. I scattered their ashes along the path of the woods out back of the trailer park that they would both spend so much time holding hands and walking over during the spring, summer and autumn months. After saying goodbye to my folks, I said the same to the town that had been my home for all of my eighteen years. The Army was my home now and I owed it all my effort and enthusiasm. \n\nAfter nine years and three failed relationships that only ever got as far as engagements, I had reached the rank of lieutenant and had the trust of every soldier that worked and fought under me. It was also the morning that I woke up and decided it was time to leave the service, and that scared me, because I wanted this to be my home. Yet something inside of me said I had given enough, to my country, my unit, and everyone under me. It was time to move on.\n\nIt made no sense to me: this was my home, the Army was my family and, yet, when I woke that morning, I just knew. \n\nPart of me looked on my actions as a moment of madness and yet a stronger part of me stood fast. \n\n*******\n\nIt took six months of drifting before I came to Maple Grove. As I pulled my truck up alongside the diner, I sure got a lot of looks: that small town mentality was sure strong in these folks. The sheriff was the first to park himself across from me at my table. His name badge on his chest had Sheriff Becks on it. Now this was going to get interesting, but since this was the closest to a home cooked meal I had tasted, I kept right on eating.\n\n\"Howdy Mister. Just passing through are we?\"\n\n\"I'm only stopping long enough to marry the cook and take her with me, Sheriff.\" \n\nSheriff Becks roared with laughter. The cook came out about halfway through our general conversation and sat on the Sheriff's lap. \n\n\"Allow me to introduce the cook, Joan Becks, my wife\"\n\nThe sheriff allowed me to wallow in my embarrassment for a moment before he once again roared with laughter. I saw the look of total love they had for each other. Seeing that love in my own folk's eyes as I grew up, I recognized it instantly. It was perhaps right then I got that feeling that I could well have found home.\n\nJoan gave her husband a kiss and told him she had work to do and to play nice with the stranger. He watched her walk back to the kitchen. She instinctively knew he was watching and gave him a wave as she opened the kitchen's swing door. When the sheriff looked back at the table I had placed my DD 214 discharge papers on the table and went back to eating my dinner. He was still reading them when I had finished and slid my plate to the edge of the table, a moment later the plate disappeared and a pie appeared. \n\nI looked up at the waitress and she said. \"On the house mister, Joan says you're looking a little too skinny to blend in around these parts.\"\n\nThe sheriff chuckled before saying. \"That's high praise indeed, mister, I suggest you take the cook's advice. She likes you and I've learned over the years to say, 'Yes dear,' to all her suggestions.\"\n\nShrugging my shoulders was easy to do; taking a fork to that creation was another matter. It was well worth it though. That woman could sure cook. It took another few minutes for the sheriff to ask his next question. The stare gave him away. Once in a while his eyebrows creased as he tried so hard to seek peace with his own thoughts. In the end curiosity got the better of him.\n\n\"Can I ask, son, why did yuh quit the Army?\"\n\nI was just in the process of biting down on the last piece of pie, so the sheriff understood why I didn't answer him right away. The problem was I didn't have an answer for him when the pie was done with. The plate was moved to the edge of the table so that the waitress could clear it away as she replenished our coffees. Honesty seemed my only friend right about then, so I leant back against the seat with my coffee cup in my hand and told him that the story about leaving.\n\n\"Even now, Sheriff, the only way I can honestly answer that question, is that I just don't know.\"\n\nThe sheriff placed his hands together and watched me closely as I explained waking that morning and the internal struggle I had with myself, starting in the early hours of the morning, most of the day and even at the steps to the admin building and the office that was to finally be the place I either continued my career, or ended it. \n\nYet all the while, the sheriff just leaned back in his chair and watched me. \n\nI only noticed his nod because I was watching him closely. \"So, now what?\" He asked.\n\nI drank the last of my coffee, placed the cup back on the table and rested once again on my chair.\n\nIt was the culmination of that conversation and indeed that one question from Sheriff Lionel Becks that changed my life. I stayed as a guest of Joan and Lionel Becks that evening; the next day I was introduced to the mayor. By the end of the month I became a deputy for the Maple Grove Police Force. Three months later I found the perfect house, although when I took Joan to see it, she took one look and told me it would be less expensive to pull it down and start again.\n\nYet to me it had character, and in my down time I set to work making it livable. That's when I really met my neighbors, Barney and his wife Cheryl. When Cheryl found out I had no intention of pulling the house down and starting again, she sent Barney over to give me a hand and we became firm friends, as we have been ever since. Eighteen months later Lionel told me he planned to retire and urged me to take his job. I actually thought he was joking and laughed all the way to my cruiser and left the station.\n\nLionel must have phoned his wife because Joan was waiting for me when I came in for my take-out coffee. With the mayor and his wife pushing it, and Lionel and Joan's backing, I became the sheriff of Maple Grove. That day I found a quiet corner away from the celebrations and finally realized I was home. \n\n*******\n\nOnce in a while, the government would hold seminars for us local law enforcement folks. Most towns sent a representative and the whole thing would be over in a day or two, sometimes a week at best. The mayor came into my office and asked me if I would go to this one since some of the seminars were going to be more technically minded, cyber-crime all the way through to recorded interviews with school shooters.\n\nI could see where the mayor was going with this one, so I agreed. Hell, in a rural area like ours, it sometimes felt that even the cats and dogs had a license to carry a firearm. The mayor wanted our town to remain just the way it was and that was sunk into the back of beyond, not splashed across the evening news.\n\nThe first week I phoned back to town and talked again with the mayor. I had the schedule in my hand and to be honest, a week wasn't going to cut it. He did what he's been doing since Lionel Becks was the sheriff, he told me to get on with it and not bother him with the details. So, after two weeks I spent another two weeks at the area F.B.I building. With some major notes that were going to take some time to get into proper order, I thanked everyone and left to head back home.\n\nBy the time I had checked in with the mayor and then the office it was close to four o'clock and time to head on home. The sun had started to lose its heat and, out of habit, I pulled the mower out of the garage. I always started with Barney's place first, stopped for a drink, and then did mine. With the front done I took the mower out back and started on that. It took me about half the lawn to notice her leaning up against the back door.\n\nShe was cute and young: I figured about ten years old. An older version of her came out next and judging by the look on her face, trouble was brewing.\n\n\"You're on my property. Get off now before I call the sheriff and I may even consider not pressing charges. Stay longer than it takes for me to finish talking, then I'm all for putting you in jail.\"\n\nStill trying hard to get over the shock of anyone actually being in Barney's place I guess she thought I was calling her bluff. \n\nThe woman pulled out her cell phone. \n\n\"Ma'am, this is Barney's house, I've been cutting his grass since he left.\"\n\nShe paused, her cell about half way to the side of her head.\n\n\"NO, it's my house. MINE, so get the fuck off it.\"\n\nThe little girl placed her hand on her mother's arm. The \"screaming banshee\" she was turning into slowly evaporated. Figuring that the only way to defuse the situation was to leave, I turned my mower around and did just that. It took me sometime to clean the mower. I still had my back to the road when I heard the cruiser slow and stop at the edge of my drive.\n\nDeputy Connors, or to me just plain Bernadette, got out and rested her ass against the hood of the cruiser and I joined her. It was then that she informed me that I had a new neighbor. I instinctively cast a glance at the front lawn and realized that the For Sale sign was gone. I realized that I'd gotten so used to seeing it that I just assumed it was still there. \n\n\"Your neighbor phoned the station, said she had a trespasser on her property, described you to a tee.\"\n\nBernadette held back the laugh for as long as she could, and then folded in half while I stood on the sidewalk looking really embarrassed. The bitch even pulled her cuffs out and let them dangle between her fingers.\n\n\"If I offer to come quietly, deputy, do you promise not to use the rubber hose on me when you take me to jail?\"\n\nThat set Bernadette off again. As she was finally coming up for air, my new neighbor joined us. \n\nHer eyes were glued to the cuffs dangling from Bernadette's finger. \"Deputy, I'm not pressing charges. Just warn him to stay off my property.\"\n\nBernadette put her cuffs back and nodded to my new neighbor. She stood up straight, pulled her uniform jacket tight and looked me in the eyes. \"Sheriff Mitchell Carter, I hereby warn you of your behavior towards your neighbor.\" The bitch hid her smile from my neighbor when she turned towards me, and then continued. \"I will personally log this complaint against you, and if you repeat it then I'm going to have to tell the mayor.\"\n\nBy now my neighbor caught on, her face twisted with anger.\n\n\"Now wait a Goddamn minute.\" She pointed to me. \"That's the sheriff?\" \n\nBernadette turned to the woman, who was barely holding it together-I'm not sure how, pure will power I suspect. \n\n\"Yes ma'am, been the sheriff these past two years.\" Bernadette looked back at me and winked before looking again at my neighbor. \"He's a bit rough around the edges but he's getting there, in another few years he may even be marriage material.\"\n\nThe only thing missing was the smoke coming out of my new neighbor's ears. She stomped her foot, turned and walked back to her house. Bernadette simply shrugged her shoulders, turned and winked at me before getting back into her cruiser and heading, I suspect, towards the diner, no doubt to grab a coffee and to have a gossip while she's there. As for me, I went back to cleaning my mower and still in wonder why I didn't notice the For Sale sign missing from the front lawn.\n\n*******\n\nThe next few days were a mixed routine. I would come home from work and paint the garage door, or measure up the internal wall of the garage for more shelves. That's when I got that nagging feeling I was being watched. It was only on the third evening that I noticed her. My mind did that internal evaluation as she simply stood in the middle of my drive, kind of doing a very nervous side-to-side shuffle with her feet. The jeans were fashionably faded; she would have stood about four-feet to maybe four-feet two; brown eyes, the cutest freckles across her nose and brown hair that parted at the back into two braids that dangled down her back.\n\nFreckles found the courage to take another couple of steps towards me, before saying. \"Whatcha doin', mister?\"\n\nI put the hammer down on the bench and looked at her. \n\n\"I'm stopping to make myself a cold drink. If you want one then pull up a bucket and use it as a seat until I get back.\"\n\nFive minutes later I came back out and she was sitting in the shade on the upturned bucket. Being the gentleman, I held out my hand and introduced myself. Casey then did the same. Her mom must have told her who I was because she even smiled when she called me Sheriff once. When she spoke, I paid attention. Something about her raised an alarm bell in my head. Casey did well in hiding it but her eyes gave her away: I had seen that look of fear in children before, on another continent.\n\nWe passed pleasantries for another ten minutes before her mom's car drove onto her drive. Casey skipped out the back of my garage and made it look like she had come from the direction of her own back yard. As for me, well, I got the evil stare from my new neighbor as they both went into the house.\n\nWhen I got to my office the next morning that uneasy feeling still seemed to be following me around. Every time I thought I was close to an answer, that prize would move agonizingly further away. I picked up the phone and called Lionel, even offered to buy him a coffee and a chance to see his wife at work. When we went in, I asked for a table by the back. The waitress looked at me and then Lionel and nodded before turning around and leading us both to a corner table. She had to replace the knives and forks since the table wasn't used all that often.\n\nWe passed a few words back and forth. Eventually Lionel got bored and asked me what had gotten under my skin and when was I going to spit it out. This time the smile was genuine. Even at my age, I seemed to look on this man and Joan as family.\n\n\"I'm not sure what to do; I had a conversation with Casey, the little girl that lives with the screaming banshee.\" \n\nLionel couldn't hide his smile at my remark, he roared with laughter when I first called her \"the screaming banshee\". From then on, the flood gates just opened. My memory being what it was, I could recite word for word what was said. I added some things I greatly suspected and yet had done nothing to prove as yet.\n\n\"Then do something about it,\" was his only conclusion.\n\nThe smile was still on my lips when I told him I didn't have probable cause. \n\nLionel pulled his chair closer to the table and rested his elbows on it before looking directly at me. \n\n\"Son, the only probable cause I had for you was that you were a stranger sitting in the town's only diner. I knew everything about you that day, before I even sat my ass down.\" \n\nOur waitress came back then and we both sat for a moment sipping coffee.\n\n\"Have you ever thought about using the old fashion method?\" He could clearly see me confused, so he added, \"Go talk to her dummy. Actually get to know her.\"\n\nI once again pointed out why I called her a screaming banshee. Lionel in return just called me a coward and asked me if all those medals I got were store bought.\n\nThis time he got up from his seat. \"I'm going to kiss the wife and go back to painting my fence. God, I love retirement.\"\n\nAfter getting stuck with the bill I did get a kiss on the cheek from Joan before I went back to the office. I sat in front of that computer screen and three times I typed in her name and all three times I deleted it. Lionel was right, I just couldn't do this. A shiver went down my spine when my mind finally came to the same conclusion: the old fashion method had won out.",
        "*******\n\nCasey looked on her first foray into my garage as a watershed moment and came by more often when she either saw me working outside or heard me moving things around in the garage. I stocked up on cherry soda, her favorite it seems. Hannah, the screaming banshee, was able to get a part time job at Ernie's Hardware store, which just happened to be across the road from the Sheriff's Office. I did offer her a lift into town one day, just to test the water so to speak. The words, \"I'd rather walk,\" told me those waters were still a little frigid. \n\nA month later I got a reminder that Hannah still felt the need to remind me who lived where.\n\nI was working on my truck out on the edge of my garage, half the truck was still in the cool of the garage while I made sure the messy end was out on the drive. The spanner wasn't on properly and cleared the nut, I swapped skin off my knuckles with oil from under my truck. The instinct to swear was only held in check when I heard Casey. She sure was a sweet kid, but light on her feet she wasn't.\n\n\"Whatcha doin'?\" \n\n\"Oil change.\"\n\n\"Oh.\" \n\nShe squatted down and looked under the truck as I held my hand tightly against me and dropped the spanner rather than act on the urge to throw it back into the garage.\n\nIn an effort not to think about my now-skinned knuckles I looked at Casey and said, \"I thought you were going shopping?\"\n\nCasey smiled and looked over her shoulder before looking back at me and whispering, \"We was, but momma locked herself out of the house and now she's on the phone to any locksmith that will answer the phone on a Sunday morning.\" \n\nWe both shared a giggle.\n\n\"Casey, go tell your momma to shake the rock next to the ornamental frog on the left-hand side of the front door.\"\n\nShe shrugged but stood, saying, \"ok,\" as she walked away.\n\nI went back to work on the sump plug. Ten minutes later a woman's foot positioned itself either side of my legs. I was so wrapped up getting this damn plug off I just didn't notice her until she said. \"How many more keys are there out there to my house?\"\n\nBeing caught by surprise I instinctively sat up and smacked my head on the underside of my truck. I slid out from under and rested against the body of my truck while holding my head at the same time.\n\n\"Only that set. Barney was always locking himself out of his house so I bought the hidden key rock as a gag gift for him for his birthday. Two days later he put a spare set in the rock and it's lived outside ever since.\"\n\n\"So you don't have a spare set?\"\n\nThis time a touch of venom got added to my answer. \"Which part of 'only one set' didn't you hear?\"\n\nHer reply was something I've been hearing a lot from her lately. \"It's MY house.\"\n\nMy only thought as I pulled myself back under my truck was that, in my eyes, it still felt like Cheryl and Barney's. Hannah had done nothing to the place. I even offered to continue to mow the lawn and that alone got me a snort along with a threat to phone the police again if I did.\n\n*******\n\nThe status quo lasted another three weeks; it was a knock on my front door that heralded the end of hostilities. \n\nHannah stood watching me, the anger no longer a fixture on her face. \"The 'screaming banshee' would like to talk to you.\" Her voice was calm, almost melancholy in tone. This was a different Hannah than I was used to. \n\nBeing polite was easy; hiding the smirk from my face as she used her own nickname on herself was close to overwhelmingly difficult, I could only imagine my little munchkin friend rated me out about her nickname. I took a step back and gave her room to come in. She just stood there. \n\nAs if having second thoughts, she took a half pace back and said, \"Can we talk out here please?\" \n\nI'm sure she got the message when I pushed the door to, left it open by about six inches and then went back to washing up. The front door opened and shut a minute or two later, while I still had my back to it. Although I continued with my own chores, my senses sought her out. Hannah was standing in the middle of the day room, and the almost inaudible rhythmic creaking of the floorboard gave me the impression of her body moving from side to side, perhaps contemplating what to do next, \n\n\"I know I deserved that. It still makes you an insufferable pig though.\" She then continued through the house and out the back door. I heard, \"Iced tea for me, please,\" as she walked out and onto the back porch.\n\nThe drinks and I came out to the porch ten minutes later. She was leaning against one of the support rails, looking out at the lawn.\n\n\"Casey said your lawn was beautiful. I can agree with her now.\" She looked at me. Her lips held a smile. Her eyes still held onto anger. \"I caught her sneaking out of here last night; she told me how long you two have been talking.\" \n\nOnce again, she turned to look out at the back lawn. \n\n\"Have you ever had the riot act read to you by a ten-year-old, Mitch?\" She gave out a giggle, when she realized what she was asking of me.\n\nHannah never turned to face me. Her own words hurt her too deeply I suppose. A woman of pride simply couldn't show it. When she saw Casey coming through my back yard and into her own, Hannah waited for her. Casey was caught and, like any cornered animal that had nowhere to go but forward, she attacked. She told her mother that she wanted a normal life, with friends and to be able to talk to her neighbor without a screaming banshee destroying any hope of her ever having any friends. \n\n\"I can't even ground her Mitch, because every word she spoke resonated in my head. Last night she spoke the truth as she sees it and I can't dispute that. What I thought I was doing was protecting her. What she made me realize I was doing, was hiding us.\" \n\nHannah hugged the post that she was leaning against and burst into tears. We had met in the most unusual of circumstances and instantly gotten off on the wrong foot. She flinched when she felt my arms go around her. Sensing something was still way off, I instinctively backed away again and gave her the one thing she needed just then, space.\n\nIt took her a moment before she turned from the post and look at me. She hadn't heard me sit down on the porch seat. When she realized I had, her own ass rose and perched itself on the handrail. The sun was starting to go down behind her; it didn't stop me seeing so much pain in Hannah's eyes. \n\n\"I protected Casey as best I could Mitch, but we're both still so desperately damaged.\"\n\nThis time there was no hesitation. The emotions being tightly held inside her burst forth and I just knew that I could do nothing about it. Hannah's pain was something she carried for a reason. Only that woman perched on my back rail could tell me why. My own body was fighting every instinct within me. I just hated to see this woman in so much pain, and yet I knew if I tried to comfort her, it would destroy the reason she came here.\n\nFinally, her hand went into a pocket; I thought it was to get a tissue that women always seem to carry. Instead her hand held a crumpled envelope within it. Even from here that envelope looked like it had done some miles.\n\nHer hand came towards me and she said, \"This is for you. Please let me explain first. It's important you let me explain, ok?\"\n\nStill feeling confused I held out my hand and the envelope dropped into it. Whatever was inside caused the crumpled envelope to open out slightly and there, looking back at me, was one word in a handwriting I knew all too well. My own name looked back at me in Barney's own stylish handwriting. \n\n\"I need to tell you all this but I'm just so unsure where to start.\" \n\nShe paused for a moment and seemed to look at a spot just to the right of me. When I looked, there wasn't anything there.\n\nHer voice started off at a whisper. It grew in strength as her own thoughts made sense and brought order. \"I was three when my father went to war, the Vietnam War. He met many people there and some he called friends. He wrote to momma and, amongst other things, he talked about one man in particular, Mitch, this man he called brother. You would know him as Barney Thomson.\"\n\nHearing that name made me pay real close attention. She could only describe things from her mother's point of view since Hannah was only four years old at the time, of course. Barney brought her father's body back to be buried in the town's cemetery. He went on to explain how her father had saved his life, but at the cost to his own. Barney stayed a couple of days before his leave was up and he had to return to his unit.\n\nBarney turned to her mother and told her of the debt he owed her husband and now owed her. He emphasized that if ever she needed anything she was to get in touch and he would move heaven and earth to fulfill his promise to his friend. Over time, of course, the owed debt was forgotten about and even contact numbers went missing and eventually passed into the deep recesses of forgotten thoughts. Hannah's mother never called on the debt and simply got on with her life and, eventually, even re-married.\n\nHannah paused once again. A smile even came to her lips and her face seemed to soften as her memories took hold and calmed her. \"He was such a sweet man. Every year I watched the love between them grow. He truly did love my mom.\" \n\nHannah grew up and went on to college, even meeting her husband there. \n\n\"Momma didn't want me to marry Tony. She said he creeped her out. But love is blind, Mitch; I can attest to that.\"\n\nHer mother and stepfather died in a car crash a month before the wedding. There was an investigation, but it was inconclusive.\n\n\"So we had a funeral and a wedding all within a month. I loved my husband, Mitch. After all he gave me Casey.\"\n\nHer whole body shuddered, so much so that Hannah had to hold onto the rail to stop herself from falling off.\n\n\"And in the space of nine years he also gave me four broken ribs, two concussions, a broken right arm and countless bruises.\" \n\nMy fingers gripped the arms of the chair I sat on. I had promised to hear her out. My word was the only reason she said as much as she did. My own body was finding it more and more difficult to live by my word.\n\nAfter the last trip to the hospital and the continued promise that it would never happen again, she filed charges against him. Every past \"incident\" came to light and Tony was sent to jail. There he actually thrived. He became an enforcer for one of the gangs, helped no doubt by the sadistic streak within him. It also got him access to the outside world, were he once again turned his attention to the person responsible for putting him in jail. \n\n\"Two things happened within the space of a day that changed everything: Tony broke out of jail and I read an interview in the local paper about a member of our city and a Vietnam vet called Barney Thomson. My memories came flooding back to me, everything my mom said about Mr. Thomson and the debt he felt he owed.\" \n\nHannah had no money and nowhere left to go. In desperation she looked up Barney, in the hope that he could indeed help the daughter of the man that saved his own life, even after all these years.\n\nIt seems Barney was a man of his word. Within a few hours he stood knocking on Hannah's door. She, in turn, sat him down and explained the unsolved mystery of her mother's car accident, the beatings at the hands of her husband and the fear she had for the health of Casey, more so now that her husband had broken out of jail. \n\nBarney made them both pack. He gave Hannah the key to his house and told her it was hers from now on. He even spoke to the realtor while they packed and took the house off the market. He followed them to the gas station to fill her car and then out of town to make sure she wasn't being followed and sent them on their way. He went to take care of the legal stuff with his son, who was now his lawyer. \n\n\"I'm sorry, but I opened and read it. I know I shouldn't have, but I was just plain scared.\" \n\nI was confused by her statement until I noticed what she was looking at. Her eyes were locked on the envelope in my hand.\n\nHer saying that much reminded me what I did have within my grasp and I gently opened it. It truly was Barney's handwriting; I recognized it instantly.\n\nIt read:\n\n'My friend.\n\nWe all have debts that we can never pay back. You told me of some of yours on those evenings out on the back porch as we blustered our way through some alcohol and life.\n\nI have to pay this debt back and I so desperately need you to help me. Protect these two people. You have the skills and a gun and I fear that it will take both to do it.\n\nI'm sorry my friend, truly I am. I can no longer do what needs to be done, I pray with all my heart that you can.\n\nAn ever grateful, Barney.'\n\nAfter reading it a couple of times I looked up at Hannah. \n\nShe looked really uncomfortable when she said, \"All I had to go on was your first name and you were a neighbor. Even when I read the letter in the hope of finding any clue about you, it still didn't help. Until Bernadette told me you were the sheriff, that is.\"\n\nWe sat for another hour on the porch as Hannah went through her life with her ex, the immense weight that lifted off her shoulders when the judge passed sentence and, finally, the total terror of finding out he had escaped from jail. Coming to me was made harder when she figured out who the letter belong to, our relationship was poison and looked like it could get worse. In her eyes, just how do you ask someone like me for help given our own history. \n\nI noticed that Hannah was looking at her watch more often. Casey would be home soon, so I let her out the front door and went back to sit on my back porch. I had a lot to think about. Hannah came with baggage, she admitted it, but quite frankly, didn't we all?\n\n*******\n\nMy thoughts about the last few days kept me on the porch seat. It was dark by the time my own instincts alerted me. I had been on the porch so long that my own house lights weren't even on. The sounds of nature put my jumbled thoughts at ease, and then it all went quiet.\n\nFighting my first instinct of standing and looking out over the lawn, I stayed motionless watching everything that my night vision could bring to me. Sounds traveled farther now that the birds and insects had ceased their calls; the sound of breaking glass was almost missed since it was that faint. I turned my head and listened harder: the sounds were coming from Hannah's house.\n\nThat same instinct screamed at me to move. The gun locker was out of the question, it was down in the basement and my guts were telling me, I simply didn't have time. My hunting knife in the garage was the only thing available. I simply shoved it into the small of my back and picked up the phone.\n\n\"Maple Grove Police station, how may I help you?\"\n\n\"Grace, its Mitch. Who's out there that's the closest to my house?\" \n\nI'm sure she noticed the tension in my voice and refrained from the usual banter between us.\n\n\"Give me a moment, Mitch.\" I heard her keyboard go frantic. \"I have Ernie ten minutes out from you. Bernadette looks like she's grabbing something to eat, but ten to fifteen minutes out.\" \n\nI wrestled with what to do but those time restraints just wouldn't budge.\n\n\"Grace, get both to Barney's old place. There is a breaking and entering in progress and I know for a fact that both women are in the house.\" I paused for a second and inwardly made a decision to keep them outside. \"Grace, order them to run silent. When they get here, they're to watch the house but do nothing else. Tell them that's an order, Grace.\"\n\nI'm sure ending the call pissed Grace off no end; she would have wanted to warn me against doing anything stupid, which of course was exactly what I was in the process of doing.\n\nWhoever it was went in the back way; it was the only reason I heard the glass breaking. I followed whoever it was in the same way. The sound of a man shouting came from upstairs. There was still too much distance between us to make out the words; his anger was self evident though. As I passed the closet, I heard crying and knew it was Casey. I tapped on the door and whispered that it was me and that I was going to open the door.\n\nThe last thing I needed was Casey inadvertently warning whomever the intruder was of my presence. The door to the closet was just unlocked when Casey came barging out and tried to make a dash for the stairs. I pulled her back and held her tightly to me. She resisted for a moment before heart wrenching sobs took her from me.\n\n\"Daddy's here. He's gunna kill us both. We have to get momma out of here and run again.\"\n\nMy own instincts were torn on what to do. The human part of me won out and I hugged her for a moment before telling her that I would get her momma.\n\n\"Casey, I need you to get out of the house.\"\n\nIn that instant she went from my best friend to a she-cat and for a ten-year-old she had the strength of despair, fear and anger on her side. Casey's father started shouting more loudly at her momma and it camouflaged the fight I was having in keeping Casey from running full tilt up the stairs. \n\nOut of sheer preservation, I held her tightly and shook her while I whispered as loudly as I dared, \"Casey, stop it and you better damn well stop it right now.\"\n\nAt this moment in time, I'm not sure who she was scared of the most, her daddy or me. She just froze in my arms and I in return pulled her to me and held her close so I could talk to her rather than whisper.\n\n\"I'm taking you to the front door and you will stay on my front porch until the two police cars turn up in a minute or two. I will bring your momma out once I've dealt with your father. You have to believe that Casey because I can't have you in the house.\"\n\nWhat she saw in my eyes with the limited light available to us I will never know, but it stopped her in her tracks and forced her to listen. \"I'm bringing your momma out of here, Casey, even if it's only to hear her say thank you.\"\n\nFor a moment she smiled and I relaxed my grip on her, we tiptoed to the front door and when I opened it, Casey looked once more at me for reassurance. I nodded at her and she then ran across the lawn and onto my front porch. I watched her hide under the swing amongst the darkest shadows in the corner. \n\n*******\n\nI had to become that man again, the knife stayed tight to the small of my back as I tiptoed up the stairs. My body willed itself to breathe softly, even more so as I inched towards the bedroom door. It was ajar by about six inches and the ex walked past the gap a couple of times as I got closer. Fortunately for me he was spending so much time running his mouth off that a herd of buffalo could have charged that hallway at the moment and he wouldn't have heard them.\n\nThe sight that greeted me when I fully opened that door both tore at my heart and angered me more than anything I had seen in this lifetime. Hannah was all but naked on the bed; her hands and feet were tied to each corner with electric cord and rope. The remnants of her clothes hung loosely on her body-so much, they may as well have not been there. One eye was already closed and the bruising around it was already extensive. Some cuts and more bruising worked like a bad route map across her body. \n\nI thought I was prepared for anything. That thought still laughing at me when the mountain that was her ex came charging at me. He came in low and I folded into him, quickly realizing that if I didn't match his aggression, then I was dead and Hannah wouldn't be that far behind.\n\nMy hand came out in one motion and with my knife in hand I sliced right through what looked like the cord from a bathrobe holding her left wrist to one of the four posts, my knife got caught in the wood as I tried to retrieve it, seeing her ex charge once again meant I had to leave it there. It was all my instinct allowed me to do for her. Hannah had to figure out the rest while her ex and I got acquainted.",
        "What followed was brutal. I had little doubt that the Marquess of Queensbury would have been crying foul. I just mentally thanked Sergeant Logan for his attention to detail when it came to hand to hand combat lessons. \n\nThis guy was good; he knew moves that only come from the street. Although I saw a shadow out of the corner of my right eye, my mind couldn't do anything but absorb the information. With the knowledge that Hannah was free and safely out of the room and I was left with her ex, that's when I stopped delaying the inevitable.\n\nWhen Ernie kicked the bedroom door open and came through, wheezing like the forty-seven-year-old he was, gun in shaking hand and screaming the word, \"FREEZE,\" it was the closest I've seen that man come to losing his lunch. \n\nThe ex was dead. He stood little chance really. What kept him alive so long may have been his street smarts.\n\nWhat killed him was me snapping his neck. But to do that I took a chance, and it sort of paid off. I just didn't see the knife he had hidden until I got him close enough for me to kill him. That's why poor Ernie was shaking.\n\nI had just enough time to say \"hi\" to Ernie. Then my knees buckled and I hit the floor with Hannah's ex's knife buried to the hilt in me.\n\n*******\n\nThe pinging noise was annoying. The warmth of someone's hand in mine confused the hell out of me. When I opened my eyes, little Casey was the culprit. Her head was resting on the bed, soft sleeping noises came from her. I had to hide with all my might was the laugh as her open mouth dribbled onto the bed.\n\n\"She won't leave. The head of admin had to get involved to authorize her being here, even though she's not family. I have to bring food and clothes for her, and take over holding your hand when she needs a potty break.\" \n\nHannah sat on the couch the other end of the room, a fold up bed was parked in the corner.\n\n\"How long?\" was all I got out before the soreness of my throat made me stop.\n\nCasey stirred and looked up at me before bursting into tears. She then climbed onto the bed. Judging by the fact that I was off center in bed, it didn't take much to figure out that, although she wasn't supposed to, she slept on my bed in the evening. \n\nThis little angel pulled air into her lungs and said, \"Four hours on the operating table. I'm not supposed to know but your heart stopped once in that time. They wouldn't let me see you in intensive care. That was ten days and you've been here for a week so far.\"\n\nEver the pragmatist I said, \"Casey, you can't stay here like this. You're missing a ton of school.\"\n\n\"No I ain't,\" came her exasperated reply.\n\nHannah giggled from her position on the couch. It seems the town pulled together and every evening the teachers would take turns bringing Casey her school work. Hannah would sit with me while teacher and pupil held impromptu school lessons on the couch. The mayor asked Lionel Becks to take his old job back in an advisory capacity until the town's sheriff was once again back on his feet. \n\nThis much-needed catch-up information came to a crashing halt when one of the nurses came in and spotted me awake. She turned on her heels and left the room.\n\nMy hand held Casey's a little tighter when I said, \"I figure I know what comes next, sweetie. You may have to give these folks room to do their job now.\"\n\nI looked imploringly at Hannah and she understood, quickly nodded to me and stood over Casey, placing her hand on her daughter's shoulder as a gentle reminder that it was time for something to eat while I was seen by the doctors.\n\nThe gang arrived five minutes later. The man in front was clearly the boss. He looked over at the now vacant couch and I caught his smile as he turned his head to speak to me. \n\n\"You're a very lucky man, Mr. Carter.\"\n\nHe paused then looked towards the bathroom door, nodded to himself and now knowing perhaps that Casey wasn't going to come out of there, he once again looked at me. One of the nurses handed him my chart and he flipped over a couple of pages before stopping and looked over his wire glasses. A part of me did wonder if he played Santa at the hospital's Christmas celebrations. All that seemed to be missing was the beard.\n\n\"You came to us with a knife in your chest, Mr. Carter. I was under the impression that you come from Maple Grove? Stuff like that doesn't happen over there.\"\n\nFor now I remained tight lipped. He sure picked up on that real quickly.\n\nThe surgeon coughed once and then once again as he scanned the chart before saying, \"The blade went in about four inches. It nicked a major pulmonary artery, causing an extensive amount of bleeding.\" He looked directly into my eyes and smiled. \"You started to cause us all sorts of trouble over that.\" \n\nHe sat on the chair by the bed, ignoring the entourage that followed him in. \n\n\"The knife in your chest wouldn't leave without a fight. It was the cause of your lungs collapsing.\" \n\nHe watched me go a little green and I think it was then he decided to have a little more fun at my expense and continued in even more detail. \n\n\"With the air escaping from your lungs and into your chest cavity, it pushed everything to the left, causing what we call a tension pneumothorax. Fortunately for you, the medics on the scene dealing with both ladies were able to stick a needle into your chest to release the air pressure.\" \n\nHe again flicked through the notes now resting on his lap before continuing. \n\n\"They did a very nice job, getting you packaged up and over to us at the trauma center.\"\n\nThis time he handed my notes of to one of the students, who then placed it back where he found it. The hospital had notice of an incoming stab victim; they weren't expecting the two police cruiser escort for the ambulance. Fortunately for me I was still out. They made sure of that of course when they got me in OR so they could get the knife out. \n\nThat's when they set to work on the still-bleeding pulmonary artery. With the knife now gone, the artery was sewn up and they finally got a tube placed into my chest so they could re-inflate my lung and get me to breathe without the aid of machines.\n\n\"Yes, you gave us quiet a scare, sheriff, and continued to do so. Despite having two large-bore IVs pumping blood into you and me standing back to admire my work, your heart stopped, not once but twice that night. You sure made my trauma team earn their money that night, I have to admit.\"\n\nHis demeanor seemed too change then. His hand rested on my wrist and gently squeezed it.\n\n\"I'm sure what I've said so far hasn't been all that pleasant for you either, young man. But you are recovering and I have daily reports of those two angels watching over you day and night. We took you off the ventilator yesterday. It's why your throat is so sore. The chest tube is still draining a bit, but from what I've seen in your file we can remove that sometime tomorrow. I have the chest X-Rays in my office and when I see the blood work tomorrow and hopefully see what I expect to see, then we start the countdown to getting you and those two angels out of here.\" \n\nHe smiled and something in the back of my thoughts expected him to say, \"Ho Ho Ho.\" \n\nI fought hard to keep from smiling; instead I opted for thanking him and watched him stand up. His people all took a step back and it was then I noticed Hannah holding Casey's hand in the doorway. Both had smiles that put the corridor lights to shame.\n\nCasey let go of her mother's hand and rushed through a gap in the crowd of people to hug the surgeon, and that Santa smile came to his lips as he bent down so he could be as close to level with Casey. He then looked into her eyes. \n\n\"When we send him home, you have to make sure he does as he's told, ok?\"\n\nCasey nodded. She took a moment to wipe the tear from her eye and said. \"I will. I promise.\"\n\nHe leaned in and whispered something in her ear. Her eyes watered up and her smile almost split her mouth in two. She then gave him another hug before the surgeon and his team left the room. \n\nBoth Hannah and I watched them leave and then turned our attention to Casey, who just carried on smiling as she turned and walked over to the couch and sat on it, not saying a single word. \n\nBetween Hannah and I we even managed to get Casey back home that evening along with a promise to go to school tomorrow. What spooked both of us was that she agreed way too quickly for us to take her seriously. Hey, how was I to know that today was Friday? \n\nLionel Becks came by the next day to bring me up to date on things happening in Maple Grove. That was a three minute talk. God I love small towns with nothing happening but everyday life. He told me the inquest was pretty much an open and shut affair. Hannah sat and recounted what she could remember of that evening. Her ex's past record of domestic abuse and continual violence and harassment of his ex-wife and daughter was entered into evidence and finally, poor Ernie.\n\nErnie told the inquest everything that happened outside by the sidewalk and up until Hannah came running out of the house. He looked at Hannah across the courtroom and they both blushed. It seems it took Bernadette to pull her own jacket off and cover her, since all she did was free herself and run from the house. Bernadette wrapped her jacket around her so she could get a blanket from the cruiser. It seems poor Ernie was crimson when he talked about that part. \n\nLionel was of the opinion that Ernie figured his wife was going to kill him when she found out he had stared at a naked Hannah, so he just thought it best to die anyway. He pulled his gun out and went against my orders into the house, after the sheriff. As he spoke his crimson color slowly turned a shade of green as he told the coroner about kicking open the bedroom door and the battle ground that was once Hannah's bedroom. Seeing the dead body of what was once Hannah's ex and the standing (but not for much longer) sheriff. \n\nPoor Ernie was excused at that point into the loving arms of his wife, who took him home. Bernadette recounted much the same story, except when Ernie went into the house. She called for medical backup and kept the women company until the medics arrived so she could join Ernie inside the house. I'm told Bernadette's seat on the witness stand wasn't even cold when the coroner ruled everything legal and congratulated everyone on their professionalism. \n\n*******\n\nI stayed in the hospital another week before being released into the care of Hannah and Casey, who took me home. It came as a bit of a shock when I noticed that they had moved in as well. Unbeknown to me, it seems Lionel declared Hannah's house, or rather her bedroom, a crime scene, so Lionel's wife, with Hannah and two of the neighbor's wives and their husbands simply walked into Casey's room, stripped it down and moved it all into one of my spare rooms. \n\nWhen I looked at what they had done with that old room in the time I had been in hospital, I was really impressed.\n\nTurning to Hannah, I naively asked, \"So, where are you sleeping?\"\n\nHannah looked me up and down before that smirk came to her. \"Oh come on, you can't be that dumb. But I will give you a hint, I sleep on the left side.\"\n\nKnowing Hannah as I did, I actually thought she was spinning my wheels, since I wasn't going to rise to the bait. They told me to sit down and relax while they both set about putting things away and then pizza arrived. It felt odd and yet kind of comfortable finally sitting down to eat with these two. Hannah took on the mantle of mother hen while her backup smiled and helped when told to. I remembered that all sentences for the rest of the evening made by me finished with \"yes dear\" and that kept the smiles on both their faces for what was left of the day.\n\nCasey tried to hide her yawn around eight that evening. She failed miserably and that's when we got her to bed, along with a promise to at least try to sleep in since tomorrow was Saturday. Her body's fatigue overrode her wanting to stay awake and we both heard the last words to leave her lips. \"Love you both.\"\n\nWe both checked the other to see if we had dust in our eyes (we did) before leaving Casey's room as quietly as we could. It was then I stood in the hallway, not sure what to do. Hannah rolled her eyes and grabbed my hand before pulling me into OUR room. She'd had time to make the bedroom less of a man-cave.\n\nWhile I was mentally working at playing catch-up, she was already in the process of stripping off and folding her clothes, then placing them on the chair by her side of the bed before walking past me and into the bathroom. \n\nA stone statue had nothing on me at that moment, Hannah was naked and in my/our bedroom and I mean naked, right down to the birthmark on her left hip. My eyes did their best to keep looking at that birthmark, but just too much naked Hannah kept getting in the way. If she wasn't a C-cup then all that homework during my college and army years have gone to waste. Her breasts were full and I seemed to spend a lot of time watching them move on her body when she did.\n\nHer smirk reminded me I was staring way too much. Yes it was my house, but she was a guest and standing with your mouth hanging open and drooling in front of your guest is not considered a polite thing to do. The sight through the bathroom door kept me rooted to the middle of the bedroom as she cleaned her teeth and performed the other bathroom rituals that women get up too. She used the excuse that she was talking to me as a pretext for why the bathroom door remained wide open.\n\n\"It took Joan Becks and me a while to figure out. We did that internet search thingy as well.\" More splashing water could be heard from the bathroom; I was still watching that tight body and oh-so-tight ass of hers. \"I mean, I was set to run again once the inquest was over, her ex almost killing the sheriff had woke the town up. Hannah wanted to leave before they were both run out of town. But Joan, bless her, pointed something out, it's part of a Chinese proverb.\"\n\nBy this time, I had found motor function and tried so hard to stop staring at Hannah's ass. Hannah for her part turned her head to look at me with toothpaste around her lips, smiling when she noticed what I was staring at.\n\nHer toothbrush was waved at me as she said, \"You saved Casey's life when you found her in that locked closet and then got her out of the house. You then saved my life, twice, once when you cut me loose and again when you killed my ex.\"\n\nI'm sure she was waiting for me to connect some far-off dots. When I looked just as confused as I had minutes ago, she rinsed and put her toothbrush away before walking towards me in ALL her glory. I'm sure I was hard by the time she got fully into the bedroom. Hannah walked right up to me and a fair exchange was made, I felt her chest squash again mine and I'm sure she felt a very solid penis pushed against her mons.\n\nHer arms came around me and in retaliation my hands went around her. \"That Chinese proverb that I mentioned? You saved both our lives, which makes you responsible for us from now on.\"\n\nHer lips tasted of mint and, when her eyes once again came into focus, she had a blush about her. \"I talked to Casey about this. I practically had to sit on her to stop her dancing around the room. As for me, well, I promise to be a good girl, well, most of the time. But when I'm bad, you need to be really bad as well.\"\n\nWe exchanged mint-flavored lips again. I had the greatest prize a man could wish for in my arms, and I felt that what I was going to say next was going to throw it all away.\n\n\"Hannah. I didn't kill your ex to get him out of your life, he was going to die simply because it turned into me or him.\"\n\nI heard the sigh, just before her forehead nuzzled into my neck.\n\n\"I know. When Casey and I were released from hospital Joan Becks was waiting for us. She took us both home and stood to one side as we both started to pack again. She then ordered us both downstairs and poured coffee and soda into us both before she insisted on knowing what the heck we were up to.\"\n\nJoan simply listened as Hannah told her everything, and then promptly burst out laughing.\n\n\"She let it slip. Casey heard it first and dug me in the ribs. When my daughter asked her to repeat what she had just said, Joan didn't even back down.\"\n\nIt was the first time either of them had heard the proverb. It was Joan who offered them hope and, the more Joan spoke of the proverb, the more both of them would look at each other, neither one wanting to be the first to speak in case the small candle of hope would move away from their grasp.\n\n*******\n\nHannah took hold of my hand and walked me to the bed, she watched me pause and then did that tutting thing before she moved to the middle of the bed and sat crossed legged. It sure took a while stop my jaw from hanging open. \n\nHer hand came out and she patted the bed. \"You need to sit down and no, I'm not getting dressed. I've slept naked in bed since I hit puberty and everything on my body has gotten too sensitive to have sleepwear around it.\"\n\nI sat on the edge of the bed, Hannah glared at me, I remembered those glares and shifted more of my body onto the bed, the glare decreased and I was oh so grateful.\n\n\"I see it's truth time.\" Hannah pulled air into her lungs and, for the first time, she stopped looking at me and her gaze drifted to the ceiling, paused for a moment and continued. \"When Casey and I came home from the hospital, we didn't want to leave but felt we had to before we were thrown out. Remember Mitch, this is small town Maple Grove and you killing my ex and almost getting killed in the process woke it up.\"\n\nWhat Hannah hadn't counted on was the real side of small towns and Maple Grove in particular. After Barney's visit and handing Hannah the keys to his old house, he phoned Lionel and Joan Becks and told them everything. With me out of town at the conference Barney asked that they keep an eye on them both and do everything they could to hide them.\n\nWhat Hannah said next came at a whisper. \"Can I ask you a question?\"\n\nI managed to make eye contact, not easy when you have so much naked Hannah within both sight and touch. \"Sure, go ahead.\"\n\n\"Joan told me that in all the time you've lived here, not once have you dated. She also told me that almost half of the single women in the area have thrown themselves at you. Hell from what I've been told, almost the same amount of married women would have done the same if they thought they could hide it from their husbands.\"\n\nI'm sure she felt me stiffen. \"I don't date married ladies.\"\n\n\"That's the point. You don't even date the single ones.\" Was her quick retort.\n\nThe look in her eye reminded me of an old school teacher I once had. I was almost sure she was going to start speaking really slowly and use small, single-syllable words so that I could understand. \n\n\"Just remember, small town folks talk. Not all of it is factual of course. After all, when has a good lie ever got in the way of the truth? But I know for sure that what I believe is fact, since it comes from the only people you have trusted since you got here.\" Hannah paused for a moment, more to catalog her thoughts than to worry about saying what was on her mind. \"You left the Army for a reason, has it occurred to you that these last few months may be the reason?\" \n\nHer hand held mine as she continued to tell me that she was just a woman, so she was looking at all this strictly from a woman's view.\n\n\"Don't forget, I've been on the receiving end of all this for years, it took my ex going after Casey before I realized that even with all his promises, he wasn't going to change. If anything, he was only going to get worse.\" \n\nHer hand tightened around mine again. I've started to notice she only does that when she feels the need to emphasize something.",
        "\"It took Joan and my own daughter to point this out to me, the last few weeks just nailed it as far as I'm concerned. The cosmos pushed us together and told us to get on with it. The 'screaming banshee' that you've seen is the defense mechanism of all women protecting their young.\"\n\nWhen she ran, all she had in this world was Casey, a few dollars out of the bank and a couple of suitcases. Not to mention, leaning heavily on a promise of a debt owed and made to her mother so many years ago. Barney, realizing he had to act fast and sent her here to start again even asking for the help of Lionel and Joan to do it. I wasn't even in town when they arrived and when I did get back, our first introduction was me mowing the back lawn. I suppose in her eyes I was just another pushy male. \n\nWhen I looked at Hannah again her smile was growing on me. I sure liked it better than the screaming banshee mode she had perfected.\n\n\"Ok let's take this new phase in our relationship for a walk, shall we? Keep your eyes on me and no cheating. Describe the woman you're sitting across from.\"\n\nI kept eye contact; I could still feel my cheeks get warm. \"Please don't ask me to do this.\"\n\nHannah just smiled and then tilted her head ever so slightly, showing me she was waiting and nothing was going to happen until I did as she asked. I blinked first and pulled air into my lungs, Hannah's smile just got bigger and more...radiant.\n\nIt was easier to start from the top and work down, so I stated the obvious; Hannah was a brunette, the eyebrows matched so that meant she was a natural and not a bottle brunette. It was also rather short for a woman.\n\nWhat came next was purely an unguarded moment from Hannah when she said. \"I kept it short so h...\" Her mouth formed an O before her hand covered it, the tears welled up in her eyes. But Hannah wanted to quickly move away from this conversation, so I helped in a way that she could understand. \n\n\"You have green eyes, something I noticed first about you and yet I couldn't afford to mention since you were then in 'screaming banshee' mode.\" \n\nBy now her smile was one of warmth as I continued my journey down a naked Hannah. I mentioned she wore glasses but only for reading or watching the television. Her eyebrows creased together in confusion over how I knew that since she had never worn glasses in my presence before. I pointed to her elegant nose and had noted two small patches of harder skin at the bridge of her nose, which meant she wore glasses. People who wear glasses don't often use contact lenses; it's either one or the other, rarely both.\n\n\"You have what I would call a full palm neck.\"\n\nHer look of confusion returned, I offered to show her but being thoughtful of her past history, I wasn't going to do anything unless she agreed. Curiosity being what it is, she told me with a smile to \"put up or shut up.\" My right hand was still in hers so my left hand inched towards the base of her neck and I was correct. With the base of my hand on her collar bone and my open palm on her neck my thumb just rested under her jawbone. \n\nShe had a full palm neck. Her head tiled into my hand and the tips of my fingers rubbed the shallow point beneath her skull. Her eyes closed and she sighed. Looking on that as a good sign, I continued the gentle up and down motion with my fingertips. The warmth of her cheeks spread to her neck and warmed my palm as well. Suddenly she gasped and her hand quickly came up and pulled my hand away; opening her eyes took a second longer.\n\nMy attention was still on the flush of her cheeks mixed with the biting of her lower lip. Thankfully her eyes were still soft so I think I was forgiven.\n\n\"You're a dangerous man, Mitchell Carter. A very dangerous man indeed.\" \n\nI tried my boyish charm type smile, and judging by her smile, I'm almost sure I got away with that one. Her shoulders and tight stomach made me wonder aloud if she had done sports at school and continued with it onto college. Hannah helped me out with that one and nodded her head. She loved track and even now still watches track events on TV when it's on. \n\nHannah lowered her head slightly and raised an eyebrow and then mentioned that I had missed a bit, her smirk warmed my own cheeks. She was enjoying herself way too much at my expense here. Hannah must have had the discipline of sitting up straight instilled into her from a very early age, since it had become second nature to her as she grew older. \n\nIt just highlighted full and round breasts that had a smattering of freckles across them and sagged so they almost touched. To us guys her breasts were considered pear shaped and when her arms moved of course, they did touch. Her nipples were puffy and me staring at them seemed to make them tighten-up and stand out more as well.\n\nHannah's sitting position also highlighted her tight stomach. Childbirth had been kind to her and the stretch marks were minimal and rather attractive on her. She was also an outie which made me pause and stare again. Her pubic hair or at least the part I could see, was trimmed into a strip. With her legs still crossed it was more difficult to make any observations on them. Other than the times I had seen her in dresses and my memories supplied those details, Hannah sure had long legs. She also didn't adhere too much to fashion when it came to shoes, favoring flat shoes when at work and open shoes or sandals when at home.\n\nI was brave enough to look directly into her emerald green eyes once again, the smile that awaited me when I did was a welcome relief.\n\n\"Now that wasn't difficult was it?\" She giggled before lifting my hand to her lips and kissing it. For something so intimate, it was surprisingly also one of the most erotic scenes I had participated in for some time. \n\nHannah's voice took on a more serious tone when she said, \"Mitch, the urge to jump on your bones and bump uglies with you right now is only held in check by the realization that you still need rest and of course, more time to heal.\" \n\nShe then leaned in and her lips met mine and a slow sensual kiss held us both to the point that neither one of us wanted it to end, when we parted her eyes were still closed. Hannah then let out a soft groan.\n\n\"Although you're not making that realization easy to implement, are you?\" \n\nHannah stuck to her decision and within minutes we were lying in bed and she was putting out the lights. \n\nShe lay down and paused, \"Well?\"\n\nWhen no answer was forthcoming, I heard a sigh and her hand went behind her to find mine and pull it over her body so my hand was on her stomach.\n\n\"You've just come out of the hospital after going in with a knife in you Mitch. Give your body time to heal because when we do get down to the fun bits, I don't want to bust you open again. I couldn't look Casey in the eyes if I sent you back to hospital.\" \n\nNow THAT was funny and we both laughed. Hannah closed the gap to nothing between us, her skin was so warm to the touch. She also let go of my wrist and my hand settled on that real comfortable place, just under her breast.\n\nHer breathing evened out. \"My only regret is that I never met you before I met him. The only real positive I ever got from that marriage was Casey and I'm so proud of that girl.\"\n\nHer head turned as best she could to see me, I leaned up so she had a better view and in return I got a smile that the moonlight coming through the window caught and seemed to magnify. My heart stopped again that night but for a different reason than a knife stuck in my body. \n\nHannah used her free hand to wipe away a tear before saying, \"That proverb says that you have to look after us now, I give you this in return: Casey and I will do everything in our power to look after you as well and you can take that to the bank, Mitchell Carter.\"\n\nI leaned down and kissed her cheek. she was having none of it and held me still so she could adjust her position so we could truly kiss. That kiss kept us both company for the rest of the night, it was perhaps the soundest I've slept in sometime. I woke to Casey running out of my bedroom and an empty space that Hannah had occupied all night next to me. It was barely two minutes later that they both appeared again with Casey leading and Hannah carrying a tray.\n\nHannah smiled and said, \"Morning sleepy head.\" \n\nWe then set about eating breakfast with me in bed. Hannah leaning against the headboard and Casey, still in her pajamas, sitting at the end of the bed chomping her way through a bowl of cereal. With the general banter going back and forth, I noticed something that I could almost kick myself for not even seeing before now, smiles.\n\nEach of us talked and had a smile, well except Casey. The cereal she was munching on meant her eyes relayed her smile, backed up by the grin that was never too far away. For so many years I've lived for this moment. The Army was my family after I left home and then something in my head made me think that wasn't enough. It was close, damn close, and for so many years I pretended that it was enough. Looking at these two women that were now in my life: this was family.\n\nBarney sent these two frightened people here, to small town Maple Grove and were protected by a small army of its citizens, why? Because Barney felt he owed them the life he was able to live at the expense of Hannah's late father. He knew Lionel would look after them, just as he knew I would as well, because Barney asked us too. His letter opened me up to listen to the cry for help, help that these two angels so desperately needed. \n\n\"Eat up, your thoughts are miles away.\"\n\nI looked at the smiling face of Hannah as I came back from my wandering mind.\n\n\"I'm just basking in the warmth of two beautiful ladies is all,\" I said.\n\nHannah smiled and went just a little pink around the ears and cheeks. Casey pretended to put two fingers into her mouth and started making chocking sounds. We both laughed at her as she got off my bed and headed for the door and to her room to get changed. I shook my head thinking to myself that this could be a real tough audience.\n\n*******\n\nHannah dropped me off at the mayor's office; it was the first time I had lied to her and had solemnly promised myself that it would be the last time as well. Candy had been the Mayors secretary for as long as he had been the Mayor of our town. No one, and I do mean no one, got to see the Karl Hammond without an appointment. Only the Mayor got to overrule that statement. She watched me enter the outer office, her smile quickly diminished as I walked up to her desk with the aid of a cane.\n\n\"I need to see the mayor please Candy. Is he in?\"\n\nShe automatically nodded her head before saying, \"You just sit over there, sweetie, I'll see if he's finished the call he's on.\"\n\nCandy then nodded to a chair next to her desk for me to sit on and then turned and knocked once before entering. She was gone all of five minutes before she came back out again, her smile still sitting perfectly on her lips.\n\n\"He'll see you in a minute sweetie, he's just finishing up.\"\n\nAlthough I wasn't keeping an eye on the time, my best guess it was closer to five minutes. The mayor's door opened and out walked Mayor Karl Hammond, full three-piece suit. The hair was a pepper gray and with matching mustache. Karl Hammond still sat in the one-eighty to two hundred pound mark. He was the real power in Maple Grove, and the reason he still held office after all these years was because he knew when to use that power. He smiled and waved me into his office.\n\nHe ushered me in before saying, \"Sit, sit. Take the weight off. I wasn't expecting you. Hell, you're still supposed to be convalescing.\"\n\nI turned my head to make sure the door was actually closed before I looked at him again. Karl noticed what I did and waited, his face giving nothing away. Although this wasn't a staring competition, it really did feel like the calm before a storm. Neither of us said a word, and then someone knocked on his door and it opened. Lionel Becks came in, nodded to us both and closed the door behind him before going over to the mayor's coffee pot and helping himself to a cup before sitting down. \n\nSomehow I wasn't surprised. Now I knew why I was sitting outside for so long, the mayor was waiting for Lionel.\n\nWe both watched him as he sat there drinking it. \"What?\" He said looking very confused.\n\nMy gaze turned to Karl. I smiled and said, \"Even in my crippled state, Mayor, would you like a coffee?\" \n\nHe laughed, it was water off a duck's back for Lionel. He just sat there drinking the mayor's coffee while the mayor got up and made us both one each. \n\nI think as far as they were concerned, I came here so it's my party. \"So, are you both going to break it down for me or am I going to have to ask questions?\"\n\nCatching the sideways glance from Lionel to Karl was easy; I was half expecting it, to be honest. The mayor leaned back in his chair. It was only then that I knew he had instigated all this.\n\nKarl's eyes seemed to fix on a spot on the wall behind me for a moment, almost like he was trying to find a starting point. His head tilted to one side for an instant and then came the slightest of nods before he said. \"When Barney got his call-up papers, mine came in the same mail. We went in together but, while he went Infantry, I was Transportation.\"\n\nThey both stayed in touch. The service may have parted them but they still grew up together and the bond of Maple Grove kept them in touch. They had both been in Vietnam eight months when Karl found out that Barney was caught in an ambush and was in the hospital. He managed to visit his old friend, and it was then that Barney told him of his now debt to the one man who saved his life, but at the expense of his own life.\n\n\"Emotionally, it nearly killed Barney that his friend sacrificed his own life for him. It was his single-mindedness that got him well enough to travel back with the casket so his friend could be buried in his home town.\"\n\nBoth the mayor and Lionel looked at each other just then, moral support perhaps.\n\n\"Barney was a changed man when he came back to Nam; he told me that his life was on loan. A man with his own family to go back to had committed the ultimate act and pushed him to safety and in doing so, placing himself in harm's way.\"\n\nKarl Hammond understood his friends reasoning. Karl is one of the gentlest of men I know of and here he was willing to do whatever he could to help Barney with this debt he felt he owed to another. \n\nKarl placed his coffee cup on his desk and leaned back on his chair before saying. \"I would ask him about his debt from time to time, eventually even that question was pushed further back in our conversations.\"\n\nThen, out of the blue Barney had phoned Karl to tell him that he now had a chance to wipe his debt. He had only been living with his son for a couple of months and by pure chance he had given an interview to the local paper. He hadn't thought anymore about it until he received a phone call off the back of that interview. He explained that he was helping the daughter of his friend. He had met her a couple of times already and was laying the groundwork to get her and her daughter away from her violent husband. \n\nA great sadness swept across the face of Karl Hammond when he said. \"Then it all went to shit so fast that neither of us could keep up with it.\"\n\nHe leaned over to his desk to take hold of his coffee, lifted it to his lips and drank what was left. \n\nBarney had just gotten off the phone with Karl to let him know the details of the arrival of Hannah and Casey. That was the last conversation Karl ever had with his friend; Barney was involved in a car accident that killed him. It also left Hannah and Casey in mid-air so to speak. Karl instantly took over the mantle of protector and with the aid of Lionel who elicited the help of fellow officers from another county, intercepted Hannah's car and escorted both to Karl's hunting cabin until Karl and Lionel could find out if Barney's accident was indeed an accident. \n\nKarl simply watched me; I thought for a moment that he was going to wait until I asked him. As my lips parted to ask that very question, he continued. \"The truth is, Mitch, we simply don't know. The report of Barney's accident came back inconclusive.\"\n\nNow that was a word I was becoming familiar with. That same word sat on the file belonging to Hannah's mother and her husband.\n\nI held Karl's gaze as I said. \"Did you tell his boys of your suspicions?\"\n\nBoth men vigorously shook their collective heads and the breath I held within me slipped out in the form of a grateful sigh. So, to all of us at the funeral, Barney's accident was just that. A new level of respect for both Karl Hammond and Lionel came to me at that moment. Leave Barney's family thinking it was an accident rather than spending years wondering, what if. That's pain that neither son nor family member should shoulder, Barney was now in the arms of his wife.\n\nWe all seemed to be in our own thoughts for a moment, eventually I asked the question that could well destroy my relationship with these two men.\n\n\"When I got back you sent me to the seminar, why?\"\n\nKarl leaned back in his chair again, this time to pull open a draw his side of his desk. An office diary came to rest on the desk and he thumbed through some pages. Then with a slight nod almost to himself that he had found the right page, he turned it to face me.\n\nAmongst several notes for that day sat a reminder to talk to me about going to the seminar rather than sending someone else. Even underlining a couple of words, school shootings.\n\n\"We didn't get Hannah and her daughter into Barney's old house until the day after you left. When you phoned and told me you needed to extend your time there, it gave us time to get them fully in and comfortable with their surroundings.\"\n\nWell that answered that question, only one more remained.\n\n\"Why didn't you tell me everything when I got back? I even made a point of coming to see you the same day I got back.\" \n\nLionel watched me for a moment and then looked towards Karl. Some subliminal acknowledgment passed between them and seemed to be confirmed when Karl nodded to Lionel and his hand once again went into the same open drawer that the office diary came out of. A file rested against the diary, Hannah's ex's name printed across it.\n\nI sat for the next twenty minutes and read the life history of her ex. Smart but a clear sociopath. He was pulled over for a traffic violation the day after Barney's death. It was only then that the outstanding warrant for his arrest for assaulting his wife and jumping bail slowed his progress in killing Hannah and Casey. It was only when I put it back on the desk that Karl spoke again.\n\n\"Lionel wanted to tell you everything, I overruled him. Mitch I've known and respected you from the day Lionel vouched for you and you became a deputy. Hell, my wife and I were first to endorse your ticket for sheriff. But look at the facts, you and he are so closely matched that if or indeed when confrontation came, you needed to be on your A game. And even with our best efforts to hide Hannah and Casey here, he still found them.\"\n\nI sure wasn't happy. My understanding why Karl kept me in the dark was self-evident. If I had known Hannah's ex was involved in the death of Barney my anger may have clouded my judgment. As it was, it was my ignorance of those facts that only just got me ahead of him in a life or death confrontation.\n\nThe deciding factor, of course, was the fact that my sidearm was in my gun safe down in the basement. In a sense I suppose that was my own fault, I had become so used to backwater Maple Grove. Nothing happens here so why keep my sidearm close by. My decision and one that almost cost me my own life. Pointing fingers at others on the choices I had made was pointless.",
        "All three of us shook hands on another understanding that afternoon: this conversation never took place.\n\n*******\n\nHannah, Casey and I settled into a normal life. With the girls it was something they had craved for so many years. Casey was doing well at school and from time to time I would come home to mothers collecting their children from our house. Ernie offered Hannah more hours at the hardware store. She smiled and thanked him before telling Ernie that she had two children at home now and they needed all her supervision.\n\nWhen Hannah told me of her conversation with Ernie and that she thought she was going to have to phone for an ambulance since Ernie was laughing so much, she thought he was heading for a heart attack. Hannah's at first hesitant steps towards acceptance into the arms of the folks of Maple Grove was going better than even she had expected. The \"Screaming Banshee\" never made an appearance ever again, even on a bad day. Hannah would just pour herself a coffee and sit out back on the swing.\n\nThe ghosts of her past still came to her, mostly in her more unguarded moment. Casey and I noticed that those ghosts were leaving her alone more often now that both girls had established themselves into the living, beating heart of this family and the kindness of the folks of Maple Grove. I came here and fell in love with the place, it was her turn now. Casey and I would leave her alone until she had finished her drink and then I would send Casey out to rescue her and we would all go out for the day. \n\n*******\n\nThree months later. \n\n\"Mom wants to know why we ain't married yet?\"\n\nI slid out from under my truck; Casey was sitting crossed legged on the grass of the front lawn looking at me. \n\n\"Because you're ten and it isn't allowed.\"\n\nShe rolled her eyes. Damn, she looked so cute when she did stuff like that, even more when she doesn't even know she looks cute doing it.\n\n\"Not me, dummy, you and Mom.\"\n\nI smiled and she just knew I was baiting her so I quickly added. \"Casey. Go into the house and in my room you will see a brown box on the cabinet by my bed. You can't miss it, it has your name on it. Open the box and take out the envelope and the little black box and bring both down here please. Feel free to find your mother when you open the envelope.\"\n\nMuch to my own amusement I did managed to finish my statement before Casey was up on her feet and running full pelt into the house. I slid down and leaned against my truck and my mind's eye followed our heavy-footed daughter into the house and up the stairs. The pause must have been her finding the box and opening it. By now Hannah had come and joined me outside, even sitting next to me against my truck as well. \n\nWe were still there ten minutes later, Hannah wanted to go find Casey, and I held her arm when I heard Casey slowly descend the stairs once again. She came out of the house, stood and then knelt in front of us both. She had tears streaming down her cheeks and I knew with a great deal of relief that they were happy tears. Her right hand held a small black jewelry box that she held out to me and in her left hand were three sheets of paper, the top sheet headed with the word \"ADOPTION\".\n\nI of course in turn, got onto one knee and looking deep into those expectant emerald green eyes, I asked one of the women in my life if she would be so kind as to spend the rest of her life married to me.\n\nMaple Grove was officially shut for the day of our wedding, it seems no one wanted to miss me marrying Hannah and she, of course, had Casey as her bridesmaid. We took Casey to Disney Land for our honeymoon. Joan Becks and even the Mayors wife offered to look after her while we had a real honeymoon and little ears even heard the offer and said she would be ok while her mom and I went away.\n\nIt's perhaps one of the few times I ever got on one knee and looked my daughter square in the eyes. She went to take a step back but I held onto her and told her point blank that her mom and her were a package deal from the very beginning, marrying her mom didn't change that opinion. Getting hugged to death by a tearful ten-year-old was worth the wet shirt any day."
    ],
    "authorname": "markelly",
    "tags": [
        "confrontation",
        "hospital",
        "marriage",
        "romance",
        "sheriff",
        "small town",
        "surgeon",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/just-being-friendly-1"
}