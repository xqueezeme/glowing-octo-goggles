{
    "title": "Chiaroscuro",
    "pages": [
        "Author's Note: She was a much pierced, mildly tattooed, free spirited white chick. He was Egyptian, with a body the golden brown of a glazed donut. She was intrigued. He was besotted. Well, you know how these things turn out.\n\n*****\n\n\"Anees,\" he mumbled, his eyes downcast. He was fidgeting, his fingers roaming restlessly over the satchel slung from his shoulder and across his body like a shield.\n\nHe seemed painfully shy. His long silken hair, black as night, fell forward as he stood there with his head bowed. When he lifted his chin slightly to steal a glance at me from under his long lashes, it shifted softly like a lace curtain. He had the liquid brown eyes of a puppy. They were strangely compelling. There was in them a hint of some inexplicable loss, some unspoken desolation that made me want to mother him. But I didn't let that show.\n\n\"So, Anees ... give me one good reason to take you on.\"\n\nHe had come to me with a request that he be permitted to audit my course in drawing at the University in New York where I'm an Adjunct Professor in the Faculty of Fine Arts. He was majoring in history and couldn't take my course for credits. But, he wondered, could he sit in? He would be grateful, he had added haltingly, if I let him. I was hesitant. \n\nI love teaching. That's the only reason I do it. After two solo shows in prominent galleries in New York in two years, I'm comfortable enough financially not to need the job. I teach because I discovered early on that as much as I love the solitary act of creation, I also thrive on the more communal act of awakening passion ... in and for art. And since I care immensely, I expect my students to bring to learning the same commitment I bring to the act of teaching. I wondered whether this young man, who would be pulling a full course load in an unrelated discipline, would be able to muster that passion and commitment. He was hesitating, perhaps trying to choose his words carefully.\n\nSo I asked him again, \"Anees, why should I take you on?\"\n\nHe exhaled softly and looked at me with eyes that now held only a glimmer of hope, itself rapidly diminishing. He appeared to have quietly reconciled himself to my no for an answer.\n\n\"Because I love to draw ...\" he whispered, \"I have never had a chance to learn ... properly.\"\n\nFor me, that would always have been reason enough. I could understand that hunger ... the hunger to learn, the hunger to create, a hunger which would not be denied. I too had been hungry. I still am. I had realized my dream to be an artist against odds that seemed well nigh insuperable. It had taken a minor miracle, including a Kimberly scholarship, for me to train at the Royal college of Art in London. Only two years had passed since my return to New York after graduation and I was certainly young enough, and close enough to my own struggles, to understand wanting something so badly that it borders on physical pain. And as hard as Anees was trying not to let it show, his voice betrayed that pain I knew so well.\n\nI looked at him quietly for a few moments and then said, \"I'm going to give you a chance, Anees. Don't let me down.\"\n\nHis eyes were disbelieving as though he wasn't sure that he had heard right. When he recovered, he moved to open his satchel.\n\n\"I brought some of my art material,\" he said and then looked at me enquiringly, \"but I'm not sure what I need to bring.\"\n\n\"You don't need to bring anything. You'll find all that you need in my class.\"\n\nHe looked at me then and smiled broadly, finally allowing himself to accept that he was in. That smile was dazzling ... a mixture of innocence and shyness and boyish charm. I found myself smiling back. I suddenly felt deeply, unaccountably happy.\n\nAs he was leaving, he turned around and said quietly, \"Thank you, Ms. Ortelli.\"\n\nWhen people thank you, they very rarely sound like they mean it. There was no doubt that he did.\n\n\"You are welcome, Anees,\" I replied, \"And I prefer Andrea.\"\n\n\"Yes, ma'am.\"\n\n*****\n\nI watched them as they filed in and took their places behind the easels. For a few quiet moments, we sized each other up like boxers about to clash in the ring. In the beginning, they are always a little skeptical. It's not merely that I'm young. I'm also a bit of a wild child and look it. Nobody I have ever known expected me to become an \"adjunct professor.\" It just wasn't ... me. \n\nI speak my mind with a rashness that make people cringe. I wear clothes that are defiantly unconventional, which look like they didn't start as something meant to be worn at all. I have intriguing tattoos in intriguing places. And they aren't even my only body art. \n\nI used to set off metal detectors in airports and after 9/11, I often ended up revealing unspeakable parts of my anatomy to eager security guards who then proceeded to examine me a little more closely than they needed to. They enjoyed pretending that they had to be thorough and that they were making absolutely certain that I wasn't going to blow up some suitably impressive target. I finally got tired of relieving the tedium of those grinning gargoyles. When I shifted to platinum and got rid of the heavier gauge jewelry and those lengths of chain that I was actually rather fond of, I finally stopped going off at airports. Now, I can fly.\n\nBut the skepticism that my appearance inspires doesn't usually last very long. I might look like a flower child. But I can draw ... and I can teach. \n\nI cast a curious eye over the sea of female faces, the monotony broken only by Anees who had sidled behind an easel in a corner right at the back of the class. The fact that he was the only male student in the course had already attracted the proper amount of attention and the little hyenas were whispering together and gesturing and making eyes at him. They were already circling. Anees was going to have his hands full this term. As if, I thought ruefully, it wasn't going to be difficult enough for him to pull his load without the distraction of all those bunnies in heat.\n\nBefore I begin any serious teaching, I like to take the measure of a new batch of students, get a feel for their gifts. I like to set them some task, which would test their hands and their eyes and more importantly, their minds. I placed a vase on the table - of blue porcelain, its surface fractured by a web of tiny delicate lines. Over the vase, I cast a length of fabric, thin as gossamer, and asked the class to translate the whole ensemble in charcoal. I stayed put in my chair, quietly surveying the scene before me. Today I did not plan to walk among them, to correct an errant line or educate a careless eye. They were on their own ... free ... to interpret in whatever manner they saw fit that little tableau.\n\nThe girls were busy at work, pink tongues sticking out from between scarlet lips, their eyes furrowed in concentration. He was merely sitting at his easel, gazing intently at that still life. For almost an hour, he made no attempt to place charcoal stick to paper. When I began to despair of his even attempting the task I had set him, he suddenly raised his hand and whipped it across the sheet in a movement that was so fluid that he barely seemed to lift the stick from the surface. I was intrigued, but stopped myself from rising to my feet and walking over to see what he had conjured.\n\nThey filed past me handing in their sheets. The quality of the work was not uniform, but a handful of the class seemed to have real talent. As was to be expected from a class of beginners, their work was labored, an act of careful effort rather than easy inspiration. Well, all save for the one. \n\nHe was the last one to hand in his sheet and I looked at it with complete and barely concealed surprise. His work had rough edges, but it also had a self assurance that was so uncanny that, if I had not known otherwise, I would have assumed that he had had formal training. Or perhaps not. Perhaps the utter freshness of his work was a function of his inexperience ... the absence of baggage, the freedom from history and method, the compulsion to see the world in its freshness and to capture it in a few exuberant strokes of his charcoal stick.\n\nHis style was spare, the sheet stained by just a few lines of inky black; but he had succeeded in capturing the solidity ... at once dense and utterly fragile ... of the ancient piece of ceramic and the evanescence of the veil that hung over it. He was scanning my face anxiously for a reaction. When I smiled broadly and nodded, he let out a huge sigh of relief. The boy hadn't the faintest idea how good he was; or that, given some luck and some application, he had the potential for greatness.\n\n*****\n\nI have wandered awe struck through the greatest museums in the world -- the Victoria & Albert, the Louvre, the Prado, the Hermitage ..., but none of them hold for me the charm of the Met. The Met and I share an unspoken intimacy that comes from long familiarity. At an age when I wished desperately to draw, but did not dare to harbor ambitions to be an artist, I had spend weekends drinking in with unutterable longing the emblems of human nobility that line its walls -- panels from Persepolis, Italian marble statuary that seemed to breathe, the flowering of the renaissance ... the peerless works of the European greats - Titian, Rembrandt, Vermeer, Turner, Da Vinci .... In those corridors, in the face of the ineffable beauty that man was capable of, the meanness of the New York street faded and life was no longer drab and dreary. In the Met, I lived life in glorious Technicolor.\n\nSo many years later, when I do not merely dream of becoming an artist, but feel a sense of kinship with the old masters -- the kinship of sharing in however humble a way their craft, I still return to the Met again and again to recover that sense of wonder, to relive the magic of witnessing beauty. The Sunday following the beginning of Term was one of those days. As I ambled slowly through the section on 19th Century Art, my eyes lighted upon a figure who looked vaguely familiar. As I examined him more closely, I realized that it was Anees. He was sitting on a wooden bench lost in contemplation of the canvas on the wall opposite him.\n\nI turned my head to see what had caught his eye and smiled. It was one of my personal favorites -- Courbet's utterly intriguing Woman with a Parrot. I'm a firm votary of passion in life and in art. I love paintings that are so achingly alive that you can smell them, taste the lips of their lovers and feel the texture of their skin. It's what I aspire to in my own work and Courbet's canvas, which held Anees in such thrall, had that in ample measure.\n\nCourbet's woman was spread across crumpled sheets, her hair disheveled, her belly soft and so achingly vulnerable, her breasts plump and perky, her nipples distended into lush peaks, the colorful parrot poised on her fingers ... had it just landed? ... was it about to take flight? ... an intriguing counter point to her indubitable humanity. She looked so gloriously free, so deliciously wanton as if she had just been fucked and the silk sheet gathered in the junction of her thighs was soaking up the cum dripping from her slit.\n\nI leaned down and whispered in his ear, \"Beautiful, isn't she?\"\n\nHe started at my voice and then broke into a broad smile.\n\n\"Ms. Ortelli!\"\n\n\"Andrea,\" I said, shaking my head in mock disgust, \"and don't you dare ma'am me.\"\n\nHe laughed and slid over on the wooden bench to make space for me. \n\n\"I'm sorry I startled you,\" I said.\n\nBut my impish grin left him in no doubt that I wasn't sorry at all, that I was actually rather pleased to have made him jump. For a while, we sat in companionable silence, drinking in quietly the almost intimidating beauty of the works of art scattered around the hall. And then, in a soft voice ... barely above a whisper, he began to speak. \n\nThere is something about the presence of great art that unlocks the soul. It puts you in the mood for intimate revelation ... the giving and the receiving of it. There have been moments when I have wandered through the corridors of the Met craving an empathetic ear ... almost unable to bear not sharing with another the loveliness on the walls ... wanting to lay open my heart to someone else ... wanting to be known, to be understood, for a moment just to be acknowledged. I suspected that this was how Anees felt at that moment. I listened quietly to his whispered confidences, to the slow flowering open of his heart. I was grateful for his trust.\n\nHe told me of how his father was a first generation immigrant from Egypt and of his childhood in a conservative household which, despite its distance from the land of their origin, was a corner of New York that was, he said, Cairo.\n\n\"He pines for it,\" Anees said of his father, \"he longs for the Cairo of his dreams -- the city of his youth. I'm not sure it exists any longer or that he would recognize the place that it has become. I suspect that in the depths of his heart, he knows that. It must be the reason he's never gone back.\"\n\n\"He speaks of the past endlessly -- of sitting at pavement cafes in the Khan el-Khalili sipping Turkish coffee and drawing deep lungfuls of apple flavored shisha, of watching whirling dervishes in El-Ghuriya, of kneeling in prayer afterwards beneath the magnificent dome of the Mosque of Muhammad Ali Pasha, of his tiny hand lost in my grandfather's fist as he bargained for camels at the Souq al-Gamaal at Birqash. It's when the camel business began to flounder that my father had to leave Egypt and come here seeking a new life. He was just married then and he tells me that my mother was terrified by this new world that they had come to, so different from the heat and the dust and the comforting familiarity of Cairo. It was all she had ever known.\" \n\n\"I was born here,\" he said, glancing at me briefly and then looking away, \"So were my brothers. I'm the youngest of four.\"\n\n\"You must have been spoilt,\" I remarked.\n\n\"My mother tried,\" he laughed, \"But my father wouldn't let it happen. He had very firm views on how a boy should be brought up. And what a boy can do ... honorably. He thinks the arts -- music and painting and dance -- are a waste of time. Worse ... vaguely effeminate ... not something a boy should be dabbling in. My father built a business from scratch ... of importing carpets from Egypt. My eldest brother looks after the business now. My second brother is an engineer and the third has a construction business of his own. So you can imagine why he isn't very pleased with me.\"\n\nHe was quiet for a while, then continued in a soft voice.\n\n\"The first time he caught me crouched in a corner of my room drawing, he was horrified. He wanted me to be out with my brothers playing and not bent over a sheet of paper fooling around with a box of crayons. After that, I never let him catch me at it. I scrounged and saved to buy art material. That was difficult. We had no pocket money when we were growing up. We simply asked for what we wanted. We got it if my father approved. My mom would pitch in a little now and then, bless her soul. Since I couldn't draw at home, I would come here to the Met on weekends and wander like a ghost through its halls.\"\n\nI wasn't sure what to say, so I mumbled, \"I'm sorry.\"\n\n\"You don't have to be. Actually, it's not his fault,\" he said sadly, \"He doesn't understand. Our world is not the same as his. He never really left Egypt.\"\n\nHis voice was wistful, filled with tenderness, but also with regret and a sadness that choked my heart. At that moment, I wanted to fold him into my arms and console him; to whisper small cooing noises, sweet but utterly meaningless, in his ear. The spell broke when he spoke again.\n\n\"I hope I'm not boring you with the gloomy tales of my childhood.\" He was smiling broadly. Pouring his heart out seemed to have done him good.\n\n\"No, not at all. Actually, I was rather relieved listening to your gloomy tales,\" I teased, \"You were so quiet in class that I was beginning to think that you weren't planning on another word for the rest of the term.\"\n\nHe grinned.\n\n\"You might begin to regret that you got me started.\"\n\n\"Would you care for coffee?\" he asked and then quickly added, \"if that's fine with you, of course.\"\n\n\"I don't usually mix with my students outside class,\" I said solemnly, \"unless of course it's a date. Is this a date, Anees?\"\n\nHe blushed in his confusion. He looked positively scrumptious when he did. I made a mental note that I should get him to do it more often. I burst into laughter and he followed suit, relieved that I was messing with him and delighted at having escaped that particular minefield unscathed. Actually, I was only half fooling. There was a part of me that would have liked an answer, a part of me which also feared what the answer might be.\n\n*****\n\nI glanced down at Susan's naked reclining figure on the couch. I had arranged her body carefully, her back to the class, her knees drawn up, the side of her head resting on one folded arm, the fingers of which were peeping from beneath the shimmering river of pale gold that flowed over the edge of the couch and dangled to the floor. I knew it was rather early in the semester for the study of a live nude, but I told myself that it wouldn't hurt. If I had been completely honest with myself, I would have admitted the real reason Susan was draped across that couch. I was curious to see what one particular student would make of her. No prizes for guessing who.\n\nThey all seemed to be preoccupied, bundles of nervous energy, arranging and rearranging themselves and their material. They seemed vaguely embarrassed, reluctant to look ... really look ... at the reclining nude and were struggling to postpone for as long as they could the task before them.\n\nI glanced around the class quickly and then softly raked the fingernails of one hand along the curve of Susan's hip. She shuddered at the delicate touch. We had been lovers. She was the first model that I had painted from life on my return to New York from London. There had been an unspoken tension between us during that first sitting, both of us painfully aware of her nakedness and her beauty. We were awkward and stilted, our muscles bunched like coiled springs under our skin. During the second sitting, as I arranged her prone body, she had suddenly reached upward, placed her hand behind my head and brought my lips to hers in a soft lingering kiss. I had taken her then, on the couch, quickly, brutally, our urgency permitting no words to be exchanged between us, her beautiful body writhing in my arms.\n\nThe relationship ended not because the passion died ... the sex was always great ... but because she drained me emotionally. I guess it wasn't her fault, but she became increasingly insecure. My art made far too many demands on me to permit me the luxury of a companion whose self-esteem needed constant stroking. She couldn't understand that I had a demon inside me that drove me to paint, that there were times when I needed to as much as I needed air or water. She didn't understand that my passion for her fed my passion for painting, that her presence in my life actually drove me to the easel. She never said anything, but her face and her body were eloquent and signaled her hurt and her resentment. I had no choice. I didn't want our love to become some twisted thing that would make our hearts bleed. But during the months that we were together, my art was impassioned. The work that I produced glowed with my lust and my longing for her. They were achingly alive.\n\nMy sister, Maria, of course, insisted that there was a far more prosaic explanation for my behavior - that I simply couldn't resist my models, that I couldn't paint them unless I fucked them. And maybe she was right. You really don't know a person, do you, unless you sleep with them, until you hold them helpless and trembling in your arms, until you watch their faces twist with an ecstasy that they can scarcely bear and you have caused? As they cum, thrashing in your bed, you get to peep into their soul. And that is the true art of portraiture, isn't it, to paint that real person - the bleeding, hurting, laughing soul behind the mask? My sister was more right than she knew. It's always a good idea to fuck them and then paint them.",
        "I suspected that Susan hadn't yet gotten over us. She was always so willing to come over at short notice to pose and I would get the feeling at the end of the hour that she was hoping for something more than my gratitude and the insultingly meager sum that the University saw fit to pay live models. I got the feeling ... unspoken, but hovering like a ghost between us ... that she would rather I took her home, splayed her open on my bed and claimed once again that sweet tight cunt that always made me break into a sweat.\n\nAnd there were times, when driven by a sudden fit of loneliness, I was sorely tempted. I missed the intimacy of two bodies squirming and writhing against each other in the grip of a desire that neither could control. I missed the sweet, sobbing mercy of release. But most of all I missed pleasuring my lover. I missed my fist twisting in Susan's blonde locks as I drove my strap-on into her pleading cunt and the noises that she made as I plumbed her depths. I missed the sweetness of her surrender as I lapped up her musky juices from the wet folds of her pussy. And most of all, I missed the way her muscles softened as I finally wrenched her orgasm from her flailing limbs. But I resisted the temptation and steeled my heart against the shadow that passed over her soft blue eyes every time I merely smiled my thanks.\n\nI sensed that I was being watched and lifted my head to see Anees regarding me unblinkingly. I smiled at him and softly stroked Susan's trembling flank as though I were quieting a kitten. He quickly averted his eyes, embarrassed.\n\nI walked from easel to easel as they worked, offering a word of advice here, picking up a charcoal stick to trace a line there. When I reached his easel, he glanced up, but his eyes didn't make it to my face. I have a rebellious streak and my sense of dressing is not demure. When I had joined the faculty, I discovered to my consternation that it was a dank place filled with old fossils whose loins did not appear to have stirred since at least the Carter administration. I resolved to change all that and blow a breath of fresh air into that gloomy dungeon. My rather reckless taste in apparel was part of the plan. I like to believe that I keep the old fogies alive. That day, I had gone braless and my thin white t-shirt did nothing to conceal my nipples and the sharp outline of the ring that pierced each. I leaned down to whisper softly in his ear, laughter in my voice.\n\n\"I have others too, where they can't be seen.\"\n\nHe blushed at being caught staring and looked down quickly, not willing to meet my eyes. I stepped behind him and placed a hand on each shoulder. The sheet of paper on the easel was blank as usual.\n\n\"Are you planning to start any time soon?\" I asked him.\n\n\"I can't work with you peering over my shoulder. You make me nervous,\" he mumbled.\n\n\"In that case, I will leave you be,\" I replied. I gave his shoulders a light squeeze and then walked away.\n\nI scanned the sheets of paper as they turned them in. Most of the work was rather wooden. Almost all of them had drawn Susan as though she were an object, not a woman. His work was again the exception. It positively screamed to be noticed. His lines were firm and confident ... alive. She appeared to breathe, her muscles almost stirring beneath her skin. I marveled at his virtuosity. He had drawn the woman I had fucked.\n\nAs the class was emptying, I said, \"Anees, could you wait for a moment? I would like a word with you.\"\n\nHe looked anxious as we waited for the last person to leave, wondering if he had incurred my displeasure in some way. I quickly moved to put him at ease.\n\n\"Anees, I've never had a student with so much promise. And I mean it. It's a pity that you can't paint at home.\"\n\n\"I've a studio which is large enough for both of us,\" I added, \"I'd be delighted to have you use it. I generally work on weekends. That's when I'm most relaxed.\"\n\nHe seemed dumbfounded by the offer.\n\n\"That's very generous of you,\" he stuttered, \"Are you sure I won't be in the way?\"\n\n\"No, you won't be in the way.\" He didn't seem to have anything more to say and the silence deepened between us, threatening to become awkward.\n\n\"That's settled then,\" I said as I scribbled my address on a piece of paper, \"I have a loft at SoHo. It doubles as my pad and my studio.\" \n\n\"Wow,\" he exclaimed, \"Isn't that kind of expensive?\"\n\n\"I have no doubt it is,\" I laughed, \"And I wouldn't be able to afford it. My parents bought it in the sixties. They were both artists. It's the only thing they left my sister and myself when they died in an air crash in Bolivia eight years ago.\"\n\n\"I'm sorry,\" he said.\n\n\"I think they would have wanted us to keep it. So we have, though there were times in the last few years when both of us were sorely tempted to sell. The money would have come in handy.\" \n\n\"Now of course we can afford to keep it,\" I added.\n\n\"Can I come and have a look tomorrow?\" he asked, his voice full of barely suppressed eagerness.\n\n\"Yes, of course,\" I said.\n\nI was feeling absurdly happy. I seemed to have made his day.\n\n*****\n\nIt was Saturday morning. I was barely awake when he turned up at the door like an apparition, bright eyed and well scrubbed. When he saw me all bleary and disheveled in my PJs, he looked apologetic. I reassured him with a happy little smile and waved him in. The day was already looking up.\n\nI gave him a free run of the house while I showered. As the warm water pounded my flesh, I felt a deep sense of well being slowly settle over me. I didn't remember feeling this cheerful in a long time. The loft was rather large and overpowering for one person. The prospect of sharing coffee with someone else in the morning was a welcome one.\n\nI found him in the studio, walking from one canvas to the other, examining them carefully. I leaned on the doorframe and watched him as he moved slowly through the room. He sensed my presence and turned to face me.\n\n\"They are beautiful,\" he said, \"Suddenly, I feel ... very inadequate.\"\n\n\"You wouldn't need to,\" I replied, \"if you saw your work through my eyes.\"\n\nI walked into the studio and dropped into the couch in the middle of the long hall. I patted the place next to mine in invitation. He accepted the steaming cup I held out to him and sat down. Light was streaming in through the large windows that ran the length of the wall. The antique metal fire escape that ran down the outside of the building stood outlined in the window directly opposite, slicing the clear blue sky into manageable pieces.\n\n\"I love this place,\" he said, \"and the neighborhood.\"\n\n\"It has such ... character,\" he added groping for the right word.\n\nThat it did. I had grown up in this neighborhood ... of imposing cast iron architecture and quaint cobblestone streets. I was deeply attached to it, despite its gradual transformation from a haven for struggling artists to a hip destination for yuppies, with million dollar homes and fancy boutiques. The artists had gradually left, seeking lower rents and like minds. There were now very few of us who continued to hang on. But I could never imagine leaving. The memories of my parents were woven into the fabric of this neighborhood, into the noise of its cafes, it's bohemian pretensions, it's decorative facades, it's smooth paving stones. I was afraid that if I left, the memories would abandon me too, leaving me bereft of what little tenuous connection remained between us.\n\n\"I know,\" I said, \"I'm grateful for having it.\"\n\nI showed him around the studio so he would know where to find the things he needed - brushes, palette, paints, canvas. I set up an easel for him at some distance from mine. It was near an open window with plenty of light. He seemed a bit overwhelmed and was running his fingers along the grain of the wooden easel with something that resembled reverence. \n\nBut once he began to work, he was all business. I admired his focus, his single-minded absorption in the figures appearing on the canvas, which he would later drench in color. We worked steadily for a few hours, barely exchanging a word, before we broke for lunch. As we munched burgers and sipped beer at Fanelli's, we reveled in the pleasurable exhaustion that comes from creative activity. We were emotionally drained, but also kind of elated. \n\nIt became a regular feature -- our shared weekends when we would work feverishly in the morning, scarcely acknowledging each other, and then spend the evenings in each other's company, either lounging in one of the charming little cafes that dot the neighborhood or walking the lanes of SoHo or down Broadway gawking at the window displays. He unwound a little during these excursions, but he was still a bit stiff, quietly respectful, unwilling to cross the boundary into easy camaraderie. It dawned on me all of a sudden that I was no longer happy with the role of a teacher. I wanted to be a friend. Or did I want more and dared not confess it -- even to myself?\n\nOne Sunday, as I watched him working at his easel with the smooth, almost poetic efficiency that I had now become accustomed to, I was suddenly filled with an insane little urge, which at that moment seemed quite irresistible. Before my brain could dampen that urge with some caution, the words had already slipped, fully formed, from my lips.\n\n\"I want to paint you.\"\n\nI looked as startled as he did at this declaration. He hesitated for a moment, then whispered, \"okay.\"\n\nOur eyes were locked together now, both of us wary of this new animal that had been unleashed and was now prowling about in the room flicking its muscular tail and regarding us with yellow hungry eyes.\n\n\"In the nude,\" I added. I was beginning to get a bit worried. Something seemed to have gotten hold of my tongue. I was saying things that my mind was not even conscious of processing.\n\nHis lips seemed to have dried up and his tongue flicked out to lick them wet.\n\n\"Does the idea make you nervous?\" I asked him. My voice was flat, as though we were discussing something entirely commonplace and not his peeling off his clothes in my presence.\n\n\"A little,\" he replied.\n\n\"But I'll do it if that's what you want,\" he added quickly, \"You've never asked anything of me.\"\n\n\"That's what I want,\" I confirmed.\n\nWe were both standing still as statues, not knowing what more to say or do.\n\n\"So that's settled then. Next Saturday,\" I finally said and turned back to my work.\n\nThe following week was awkward, neither of us able to wish away the specter of the little agreement which loomed large between us. But as I reflected on what had transpired, I realized that it was something that I had wanted for a long time. My lips had, in a fit of impatience, merely voiced what my mind had refused to admit. I wanted to see him naked. I wanted to drink in the vision of his smooth brown body with nothing to shield him from my eyes -- no concealment, no artifice, no flimsy defense of fabric. The thought made me wet. I caught myself hoping that he shared, at least in some small measure, my sense of excitement. I hoped that deep inside his heart he also wanted it, wanted to be naked ... for me.\n\n*****\n\n\"Where do you want me?\" he asked.\n\n\"On the couch,\" I said.\n\nHe was standing in the middle of the room, looking like a lost little puppy, fingering the buttons of his shirt nervously. My heart went out to him. It did nothing to change my mind though. If anything, he looked even more heartbreakingly delicious. I stepped up to him and gently reached for the top button of his shirt. He flinched at the light pressure of my fingers on his chest.\n\n\"Relax,\" I whispered, pretending to an easy confidence that I didn't feel at that point.\n\nI slowly unbuttoned his shirt and slipped it off his shoulders, careful not to trail my fingers across his skin. I kneeled down to unbuckle his belt and slide it through the loops of his jeans. As his zipper rasped open, he kept his arms quietly by his sides. He didn't seem to know what to do with them. I slipped off his jeans and boxers, not looking directly at his crotch. I didn't want to make him more self-conscious than he already was. I glanced out of the corner of my eye at his thick fleshy circumcised cock, which was as yet flaccid. He must be really nervous, I thought.\n\nI tugged his hand to lower him onto the couch and then gently pressed the flat of my palm on his chest to ease him back into the cushions. I nudged his thighs onto the couch until he was reclining. I flattened the knee of the leg closest to me and folded the one further away so that he was fully exposed from where I would stand, by my easel. I straightened up to examine my handiwork. As I ran my eyes slowly down the length of his golden brown flesh, I couldn't help whispering, \"You are beautiful.\"\n\nHe blushed. There he goes again, I thought. I was getting addicted to that flush in his cheeks. It made my pussy lurch. So did the vision spread out before me. He was slim without an ounce of extra flesh, without the over defined torso of someone who pumps iron. His legs were lean, his thighs and calves well muscled. His soft silky hair drifted over his forehead and his liquid brown eyes were regarding me with a mixture of trepidation and something else which seemed, to my rather biased eye, like longing.\n\nI wanted to paint him in colors that were stark ... to stretch his golden flesh across the canvas against a scarlet couch offset by the icy blue of the morning sky framed in the window in the background, the blue expanse broken only by the dark shadow of the fire escape. As I worked, his eyes darted around the studio as if he were seeing it for the first time. He seemed vaguely unsettled by the unfamiliar position in which he found himself ... at the receiving end of a searching eye, which ran unabashed, unashamed over his naked length.\n\nAnd then as I was splashing the canvas with splotches of angry red using thick greedy strokes of my brush, our eyes met ... and something changed. He was no longer an object that I was committing to canvas. He was pulsing naked flesh, with desires and dreams and needs, blood tumbling through his veins, achingly vulnerable. The air seemed to crackle between us and he sensed the subtle shift in mood. He saw hunger flood my eyes and his body tightened as if in self-defense.\n\nAs I slid from behind the easel and stepped towards him ... slowly, purposefully ... his cock began to harden. He saw my lips twitch knowingly and blushed at being betrayed by his flesh. But there was nothing he could do. By the time I stood over him in my paint-spattered apron, a brush dangling from my fingers, dripping red, he was erect and quivering.\n\nI held his eyes as I raised my arm and trailed the brush in a long vertical line bisecting his chest, marking him. He moaned at the fiery path I burned across his skin. When I tossed the brush aside carelessly and knelt beside him, he whimpered softly. I think he sensed what was to come ... sensed its inevitability, its utter necessity. I was still gazing into those limpid pools when I reached down and curled my fingers around his cock. It was hot and silky ... and it pulsed.\n\n\"Andrea ...\" he whispered. \n\nI sighed.\n\n\"I've been waiting for so long to hear my name from your lips, Anees. Tell me what you want, baby.\"\n\n\"Andrea ... no,\" he moaned.\n\n\"No ...? But your body tells me otherwise, my pet,\" I replied.\n\nAnd indeed it was. His hips were surging softly, fucking his tumescent flesh into the velvet glove of my fingers. He groaned, unable to deny the truth of what I had said ... resentful that his body wouldn't allow him to lie ... and buried his face in the skin of my throat. He wasn't getting away that easily. I slid my free arm under his neck and around his shoulder and gently twisted his body until he was looking at me again.\n\n\"Tell me what you want, baby.\" I repeated.\n\nHis lips fluttered softly, but made no sound.\n\n\"Well, if you won't tell me what you want, I'm going to tell you what I'm going to do to you.\"\n\nI smoothed his silky hair back from his forehead and gently pulled him against my shoulder. He was looking at me expectantly, awaiting my pronouncement of his fate. I smiled at him softly before I whispered into the shell of his ear, \"I'm going to make you cum so hard that you'll feel like you are being turned inside out.\"\n\nHe shuddered in my arms as the words dripped like molten wax into his ear.\n\n\"I'm going to make you spurt your thick hot cream all over your body, Anees.\" I whispered hotly, \"That's how I want to paint you, utterly spent, your balls milked dry.\"\n\nI reveled in the way his shoulders shook against the length of my arm as I cradled him. And then I began to play with him, my fingers sliding up and down his hot shaft, milking him. The head of his cock swelled with need as I slid his velvety skin against his throbbing flesh. I maintained a steady rhythm, not too slow, not too fast. I didn't want him to die of boredom; but I didn't want him to spurt very quickly either. He would want that release very, very badly before he got it.\n\nAs I fisted him, without haste and without mercy, I gazed into the beautiful midnight darkness of his eyes. I watched as desire began to pool in them making his pupils dilate. I savored the shadow of surprise that flitted across them as I used him. ... And finally, I tasted the raw pleading that rose from their depths like smoke and sought some glimmer of hope in mine. My baby was getting more and more frantic. He reached upwards, his softly trembling lips aching to find mine. But I retreated, my lips just beyond his reach, my breath tickling his flesh. He whimpered at being so cruelly denied. Soon, I whispered, soon. My fingers sped up a fraction.\n\nI held his eyes with mine until they fogged over with lust. And then finally, his eyes fluttered closed and his head rolled back against my arm. He was close. Time to finish him. I rested my cheek against his chest and looked down at his hard throbbing shaft as my fingers accelerated to a blur. I wanted to watch his cock in its final helpless throes; watch it spew his essence.\n\nI held his thrashing body down with mine as he spurted. He came for a long time, his cum staining his belly, his thighs and the couch. I watched as thick creamy blobs of it slid down the muscled slope of his thigh, leaving wet, glistening trails in their wake. I held him for a long time in my arms, waiting for his breathing to quiet. When I finally stood up, I drank in the glorious vision on my couch, of him cum stained, emptied. That would make one hell of a canvas. \n\nI fetched wet towels from the bath and wiped him dry, my fingers soft and tender. I gently hefted the softening length of his cock in my palm and wrapped a warm towel around the pulsing flesh. When he was all cleaned up, I planted a soft kiss on his forehead. It was the first time I had kissed him and it seemed so heartachingly intimate ... even more intimate than the release that I had just torn from his flesh.\n\nWhen he opened his eyes, I saw doubt in them ... and desire ... and a million other things that struggled for voice. He sat up slowly as though he were awakening from a lifetime of sleep. He sat on the couch, hunched, his hands curled loosely in his lap. When he turned towards me, I saw that he had made up his mind about something. He gently took my hands in both of his before he began to speak.\n\n\"Andrea ... I need to be alone for a while. What you did just now was beautiful ... the most beautiful thing anybody has ever done for me.\" He hesitated. \"But I need to sort out my feelings ... about all of this. Do you understand?\"\n\nHis eyes were anxious. He seemed mortified at the prospect of offending me. I smiled at him reassuringly.\n\n\"I understand, Anees.\" I said softly, my palm covering his, \" But I want you to know that I'm not sorry for what happened. I'm not going to apologize for what I did. If given a chance, I'd do it all over again. So, you do need to think long and hard about what you want. Whatever it is, I'll respect it.\"",
        "He nodded and then got up to slip on his clothes. As he was leaving, he turned back towards me and planted a quick awkward little kiss on my lips and then scurried away, his face burning with a blush that I could see through the back of his head. I knew then that he had already made up his mind. He would be back and I would be waiting. The hapless little doe, all eyes and spindly legs, would wander back into the tiger's maw and then it would be all teeth and claw. I would eat him alive.\n\n*****\n\nIt was late Sunday evening when my meal returned. The sky was dark with thunderclouds and a storm seemed to be in the offing. It had already begun to rain, a light dusting of it hanging like mist over the street. I love the colors of a brooding sky. My fingers were itching for my brush and palette. I had to rein in my hunger. There would be other times. Tonight was reserved for desire even more elemental.\n\nHe was wet ... fat droplets of water beading the skin of his overcoat, his hair plastered to his forehead. His eyes were as storm laden as the sky. They seemed as though they had been the battleground for some titanic struggle. It wasn't clear who or what had won.\n\nWithout a word, I grabbed his wrist and pulled him towards my bedroom. He quietly followed. His eyes were drawn to the easel in the middle, a white satin sheet draped over its face. It seemed alive ... to breathe. We stopped a few feet from the canvas. I stilled him with a gentle squeeze of my palm and then abandoned his wrist to remove the drape.\n\nHe stared at it wordlessly, at this image of himself in repose, his muscles soft, his body languid, still marked with the pearly white traces of his need. I stepped behind him and wrapped my arms around his waist, the water on his overcoat dampening my t-shirt. I rested my chin on his shoulder and whispered in his ear.\n\n\"I worked all day and most of the night after you were gone. I finished it before I slept and then let you dry ... here, in this room, so you could watch over me as I slept. I wanted you to be the first thing I saw when I woke up.\"\n\nHe shivered.\n\n\"It's beautiful,\" he whispered. He sounded curiously distant, as though he were in a trance.\n\n\"I was planning to take a shower before you arrived,\" I said softly, \"Would you like to join me?\"\n\nI knew the answer before his whispered yes. I knew that he had come here to give himself to me. I knew as I held his trembling body that he had tried not to ... and that he had failed.\n\nI slipped the overcoat off his shoulders and let it drop, damp and heavy, onto the floor. Then I repeated the ritual of the day before, unfurling him, slowly exposing new swathes of bare skin to my eyes. Like the day before, he was quiet. He seemed unable to move, as though his body were weighed down ... like fruit soaked in wine ... content to be stripped naked.\n\nI stepped away to run my eyes over his bare flesh and then crossed my arms over my body to grip the hem of my t-shirt. As it lifted away, it caught the soft peaks of my nipples, making my breasts wobble, and then it came off, tousling my hair. His eyes were drawn to the triangle of light that joined the liquid brown circles of my nipples and the upper rim of my navel. They were pierced with platinum rings, a tiny diamond set into each. They sparkled as my soft mounds rose and fell with my breath. I let his eyes linger on my torso for a moment before my fingers strayed to my jeans. I wasn't wearing panties. Tonight, they had seemed unnecessary. I had had a premonition that I wouldn't be wearing clothes for very long. I had been right.\n\n\"You're so beautiful,\" he breathed, his voice catching in his throat, his words echoing the ones I had spoken yesterday when I had seen naked for the first time.\n\nHis eyes drifted down my body to the tattoo on my bare mound. He knelt before me to look at it closely, at the angel curled up around the wedge where the lips of my pussy melt into each other to form a wrinkle of soft tender skin. She was asleep, her knees drawn up to her body, her wings folded softly behind her, her arms tucked under her face, which was framed by a halo of golden hair. She oozed innocence. Her breasts were firm and perky, her nipples stiff and elongated. Whatever dreams haunted her endless sleep, they seemed pleasant.\n\nLest he gain the impression that I was all angelic, I hastened to give him a glimpse of my darker side. I turned around and thrust my tight little derriere in his face. The artist had made the tattoo in my likeness. It nestled on my lower back above where my spine disappears into the cleavage of my tush. \n\nIn the tattoo, I'm a little she-devil, my skin a glowing red. My back is turned and I'm peering over my shoulder, a saucy grin on my face, the tiny little horns sprouting from my forehead glinting in the light. My tail curled and then disappeared into the dark shadow of my crease, pointing the way to the treasures concealed within. I believe that one can never be too careful with lovers. It always pays to show them exactly where to go. \n\nHe laughed and smacked my right cheek playfully. It already seemed to be working. That little smack was so full of promise.\n\nWhen he gently gripped my hips and turned me around to face him again, his gaze was caught by the glint of metal in my cunt. I'm fortunate in the way I'm built. My clit is prominent, hidden in a thick fleshy sleeve and stands up from my pussy like a tiny peak, perfect for my pussy piercings -- a tiny platinum barbell set vertically along the length of my hood, one rounded head pillowed on my clit and a curved barbell set in the triangle where the top of my pussy runs into the root of my clit. The curve of the barbell was nestled between my clit and my pussy flesh forming a delicious little cradle for my sensitive nub.\n\nDuring sex, the delicate sleeve of metal that hugs my clit makes it unbearably alive. Actually, it doesn't even take sex. Sometimes, all it takes is a fleeting touch or the feel of soft fabric rubbing against my crotch to make me double over with longing. There are days when I walk around in a state of semi arousal, my clit hard and throbbing, desperate for a few moments of solitude to rub myself to an explosive cum.\n\nHis forefinger touched the shiny metal delicately ... tentatively.\n\n\"That must have hurt,\" he breathed. His voice was different ... husky.\n\nI drew a little closer until his nostrils dilated and his lungs filled with the scent of my desire.\n\n\"Yes, it hurt.\" I whispered, \"But it was worth it. It made me very sensitive. I'm going to explode like a firecracker around your cock when you finally fuck my cunt.\"\n\nHe drew in a sharp breath and his shoulders trembled. He was melting and I knew he would soon be mine. I softly seized a fistful of his hair and drew him into the wet folds of my pussy. I let him savor the hot taste of me, draw in the musky scent of me before I peeled his face away. I wanted him to know what he could have if he was good ... very good.\n\nI used my fist in his hair to pull him upright. When his body had straightened and his lips were poised a few inches from mine, I released his hair and ran my palms down the firm lines of his back to tenderly cup the tight cheeks of his bottom. I reveled in the play of muscle under his taut skin before pulling him forward to plaster my body against his. It felt so right, my soft yielding curves molding themselves to his firmer flesh, the hard throbbing pillar of his desire trapped in the heat between our writhing bodies.\n\nI ground my hips in slow tight circles. I could feel his cock twitch and jump like a thing alive, inflamed by that delicious friction. Much more of this and I knew he would erupt like a geyser, spouting his cum into the soft cup of our joined flesh. That would be altogether too soon. When his hips began to mirror mine and churn without volition in ragged little circles, I pulled away. I arched my back, the diamonds sparkling at my nipples digging into his flesh, my hips now a few tantalizing inches from his raging erection.\n\n\"Oh, God...\" he groaned, his body craving the stimulation that I had so cruelly denied.\n\n\"Too soon, my pet,\" I whispered.\n\nI raised a hand to his neck and gently drew his lips down to meet mine. He surrendered his lips with a sigh and let me draw the sweet swollen flesh into my mouth. I sucked softly on his upper lip, running my tongue teasingly along its length. I did the same for the lower one before plunging my tongue into the wet grotto of his mouth. He shuddered. I held him in place with my hand and ravished his mouth, probing each delicious nook, sucking the wet frantic muscle of his tongue, drinking in the heady taste of him. He whimpered when I pulled away, reaching for my lips blindly. My baby wanted more. He was going to want more all night, though very soon he wasn't going to be sure precisely what he wanted more of. I was going to turn his mind into a sodden sponge soaked in lust.\n\n*****\n\nI led him into the bathroom, his rampant cock bouncing its eagerness to enter my body. My loft belonged to an age when bathrooms were larger than bedrooms. Mine was enormous. The black marble of the floor glittered against the soft cream of the walls. A marble platform ran along the length of one wall, a porcelain basin with massive brass spouts sunk into it. A deep alcove was set into another wall where an antique bathtub stood poised on brass claws that served for legs. The shower, which was set into the third wall, was divided from the rest of the room by a low marble step, which prevented water from flooding the rest of the room.\n\nI gave the tub a lingering look, but decided against it. There would be other times for a leisurely soak. Today, I wanted to run his warm flesh through my soapy hands, to learn as a blind woman would the clean lines of his body. I led him into the shower and turned on the water to get us both wet. He jerked as the first spray of water hit him and then relaxed, letting the warmth wash over him.\n\nWhen we were both drenched, water rolling off our smooth bodies, I placed the scented soap in his hand. He looked at it for a moment, as though uncomprehending, then began to work his hands into a lather. I wanted to drown in that foam ... in the delicious prison of his hands. Faster ... come on ... touch me, my mind was screaming, but outwardly I was calm merely following with my eyes the sinuous movements of his fingers as they twisted in the bubbles now dripping to the floor in long lazy drops.\n\nHe took my hand in his and placed it on his shoulder. One hand encircled my wrist to hold me in place while the other began to travel over the smooth length of my arm. There was something almost worshipful in his careful tenderness and I felt my pussy melt in anticipation of what this night might hold. He smiled at me when he heard my soft whimper and then switched to my other arm. When he was done, he lowered my arm gently and then moved to kneel beside me.\n\nHe sat back, his buttocks resting on his heels and placed my left foot on his tightly muscled thigh. I applied some pressure with the sole of my foot, but his flesh would not give. His fingers drifted over my foot and then wandered upwards covering my shin and my calves and finally the softness of my thighs in creamy lather. The vision of him on his knees stroking me ... serving me ... was unbearably erotic and I felt my clit swell and heave against its delicate prison.\n\nBy the time he was finished with my other leg, my cunt was seething and the room was humid with the fragrance of my arousal. His nostrils flared as he worked his fingers softly along the junction where my thighs melted into my body, but he resisted the temptation to lean forward and bury his trembling lips in my blossoming flower. Hmmm ... my baby is learning patience, I thought.\n\nHe switched to my torso, but the little tease seemed to be learning his lessons too quickly. He ignored my breasts, which were now swollen and aching for attention and stepped behind me to softly knead the muscles of my neck and shoulders with his slick fingers. It felt wonderful. I hadn't realized how sore my muscles had become from yesterday's marathon session at the easel. My creative frenzy, my eagerness to freeze the erotic tableau of his passion on canvas had blinded me to my body and to the little aches and pains that signaled my need for rest. He was now working those little kinks out of my flesh, turning my muscles into liquid. I moaned.\n\nHe kissed the shell of my ear tenderly as his fingers tripped down my spine until one finger gently insinuated itself into the damp crease of my ass. I lifted one leg and placed my foot on the low stone wall to give him more room. He quickly took the hint and slid the knife edge of his hand along the length of my valley splitting me softly. He cupped the cheeks of my bottom in his palms and swirled them in tight little circles, massaging the sensitive flesh. As his hands completed each circle, my pussy lips were pressed together and then peeled apart.\n\nAnd then one inquisitive finger began to run up and down the length of my crease, teasing my asshole with the faintest of caresses on each leg of its journey. I was now beside myself with lust. As my whimpers grew louder, more urgent, the finger paused and came softly to rest against my puckered little hole. I thrust back against it, my body signaling without words what it is that I sought. He held still for a few moments longer, allowing my hunger to build up and then thrust one soapy finger into my anus until I was fully impaled. I groaned at that delicious invasion, at that satisfying sense of fullness and then began to fuck myself on his digit. He raised his other hand to my throat and gently pulled my head back onto his shoulder as I buggered myself. God ..., I thought, what I wouldn't give for his thick fleshy cock to tear open my tight little hole and fuck me so deep I would feel it in my throat.\n\nBefore I could tip over into a mind rending orgasm, he gently withdrew his finger leaving a void that ached to be filled. He ignored my urgent pleas and circled my body to cup the soft mounds of my breasts. He kneaded the firm flesh, first delicately and then more forcefully while I thrust my tight little ass back into the hard length of his erection which was now nestled in my soapy crease. When my breasts were smothered in white, he gently gripped each nipple between a thumb and forefinger and squeezed. My nipples were already engorged with blood, gripping like a vice the rings that pierced my soft flesh. The gentle assault of his fingers was more than I could bear and I began to shake like a leaf.\n\nHe quickly relinquished my throbbing nipples and his fingers drifted lower over the planes of my stomach to softly cup my pussy flesh. He didn't stroke me or caress me or rub me or squeeze me. He just held me tenderly while my body heaved. He was evidently not planning to finish me anytime soon. He was driving me crazy, playing me like a puppet on a string. Well, that's a game two can play at, I decided.\n\nI turned in the circle of his arms and pushed him gently against the tiled wall. \n\n\"My turn,\" I whispered. He seemed reluctant to relinquish his grip on my body, but I wasn't brooking any rebellion. His body finally softened, surrendering to my fingers. My turn to kill him softly, I decided. My hands roamed restlessly over the lines of his body -- his arms, his legs, his shoulders, his back, the tight cheeks of his ass and the crease between. I held his eyes with mine as my finger rubbed delicately over his soft brown orifice, a shade darker than the rest of his flesh. He groaned. I knew he wanted me to do more, to softly thrust my finger into his anus as he had done for me. I also knew that he didn't dare ask.\n\n\"I know what you want, baby,\" I whispered, \"but I'm not going to let you have it just yet. I'm going to take that sweet little hole, but later ... much later.\"\n\nMy finger withdrew and my hand reached between his legs to gently grip his soft silky pouch. It was hot and heavy as I kneaded it softly, making it slick and slippery.\n\n\"So full ...\" I moaned, \"Is that all for me, baby?\"\n\nWhen he didn't answer, I repeated, \"Is that all for me?\"\n\n\"Oh, God ... yes,\" he mumbled, \"Only for you.\"\n\nThat moment of supplication was what I was waiting for. I released his balls to softly grip the shuddering length of his cock. He whimpered as my fingers encircled his silky flesh. I worked my fingers up and down, slowly bringing him to a boil. It didn't take very long before his legs began to tremble and his hips began to surge raggedly, trying to fuck his throbbing erection into the velvet circle of my soapy palm. He was panting.\n\n\"Your knees are buckling,\" I observed almost casually, \"You can't stand up much longer, can you?\"\n\nHe threw his head back against the tiled wall and groaned, but didn't protest when I placed one palm on his shoulder to push him to his knees on the marble floor. I went down with Aneez, then moved behind him to plaster my body against his back. Payback time.\n\n\"Your body is delicious,\" I whispered hotly in his ear as I continued to softly fist him, \"Who was the first one to have it, hon? Who was the first woman you fucked?\"\n\nHis body trembled, but he couldn't bring himself to speak.\n\n\"Tell me,\" I persisted, \"Confession time.\"\n\n\"Was she Egyptian?\" I asked.\n\nHe nodded.\n\n\"Childhood friend?\" I quizzed, \"A cousin, maybe, who wanted to find out what its like to be fucked?\"\n\nMy fingers were still busy playing him softly, steadily.\n\n\"My brother's girlfriend,\" he gasped.\n\n\"The little slut!\" I laughed, \" Did she sit at your table at home, darling, stealing little looks at you while she listened to your brother talk? The little bitch must have been wondering all the time what it must be like to fuck you.\"\n\nHe moaned as I continued to milk him.\n\n\"Tell me how it happened, Anees,\" I demanded, \"Tell me everything.\"\n\nI knew he would. Right then, he was my slave. His pleasure ... the promise of his release ... was trapped in my softly working fist.\n\n\"My family had gone away for the weekend to visit relatives in New Jersey. She turned up at the door asking for my brother. I told her he wasn't there, but she asked to come in. I let her. I was making tea for us in the kitchen. I didn't see her until I felt her arms around me.\"\n\n\"You didn't have tea, did you?\"\n\n\"No,\" he whispered.\n\n\"Yeah ... you just had each other,\" I teased.\n\n\"I didn't mean to. But ... I just couldn't stop her. My body felt so heavy. It was like I was sleepwalking.\"\n\n\"Sleepfucking, you mean?\" I giggled. He blushed beautifully. It was amazing. How can this man blush, I thought, when he is naked and I'm stroking his swollen cock with soap slick fingers?\n\n\"Where did you take her?\" I asked, \"Did you take her to your parents' bedroom? Did you fuck her in your parents' bed?\"\n\n\"No ...\" he gasped, \"In mine.\"\n\n\"Probably wise,\" I ruminated, \"with all her juices and your cum, the bed must have been a sodden mess by the time you were done.\"\n\nHe shivered deliciously in my arms at the image. My baby was getting turned on by his little confession. I reached between his legs with my other hand to cup his balls. They were crinkled, drawn up tight against his body. I didn't want him cumming too soon. I released his cock quickly, letting it bounce and jerk in front of him. He moaned at being thus abandoned.\n\n\"I don't want you cumming right now, my pet,\" I said firmly, \"... not until you have told me your story, all of it.\"\n\nI let him calm down a little, then palmed his cock again to resume my soft, slow stroking.\n\n\"Then what happened?\"\n\n\"She seemed to be in a hurry,\" he moaned, \"she ripped our clothes off, lay back on the bed and plunged my cock in her cunt. She was very wet.\"\n\n\"The hungry little whore,\" I exclaimed, \"She must have been planning it for a long time. Her pussy must have been seething all day thinking about when she would get to have you.\"",
        "\"Did she wrap her legs around you, baby? Did she drum her heels on your back to pull you harder into her cunt? She did ... didn't she?\"\n\nHe groaned, trying to swivel away from my lips, but nodded. I wasn't having any of it.\n\n\"Was she a hot little fuck?\" I persisted, \"Did she squeal when she came? Is that when you spurted, baby, when she was cumming, when she was squeezing your cock with her tight little cunt?\"\n\nOh, God ... Andrea,\" he groaned.\n\n\"Tell me,\" I rasped, \"And afterwards, sweetheart, did you watch your cum leak from her steaming slit?\"\n\n\"Yessss ...\" he whispered, surrendering to the urgency in my voice.\n\nI stopped stroking him and just held his throbbing flesh softly in my palm. Suddenly I was curious. I wanted to know more about this mystery lover that had taken my baby's cherry.\n\n\"Did you hook up with her afterwards?\"\n\n\"We were both awkward when it was over. She pulled on her clothes quietly, barely looking at me and left. I never saw her again,\" he panted, \"Soon afterwards, she broke up with my brother. I felt terrible. I felt somehow that it was all my fault.\"\n\n\"Why didn't you try to find her?\" I asked, intrigued.\n\n\"That would've been dishonorable,\" he mumbled, \"... and an insult to my brother.\"\n\n\"Good ...\" I reflected, \"Otherwise, I would have had to fight for you.\"\n\nMy fingers began to move again teasing his swollen flesh into blind desire.\n\n\"But I would've won,\" I whispered.\n\n\"I would've felt a little sorry for her though. Maybe if she was nice ... very nice, I would let her have you once in a while ... maybe once a week.\"\n\n\"You would've let her have you, wouldn't you?\" I asked him sweetly.\n\n\"Andrea!\" he gasped, \"God ... you are ... so wicked.\"\n\n\"I think you are going to learn to like that,\" I consoled him.\n\n\"A week is a long time,\" I continued as I teased his rampant flesh, \"and the poor thing would've been addicted to you. You would be her little fix. How she would miss it! By the time I let her have you, she would be desperate. And I would get to watch the hungry little slut rip you apart.\" \n\nHe was moaning steadily now, as I poured the words silkily, mercilessly into the shell of his ear.\n\n\"And don't you go thinking you'll have an off day just because you fucked that little cunt,\" I whispered, \"After she's done with you, I'll play with your spent cock until its hard and throbbing and then I'll empty your balls all over again.\"\n\nHe was frantic now, his hips surging, his head thrown back onto my shoulder, his fingers clutching my arm convulsively. He was ready ... so very ready.\n\n\"Let it go, baby,\" I whispered, \"Cum for me.\"\n\nThose final words triggered his release and he sucked in a long struggling breath that stuck in his throat as he came and came and came. The storm had heightened and the wind was howling in rage as he bucked in my arms. The tree branches that were framed in the bathroom window were dancing frenziedly. I held him close and watched as his cum stained the marble floor. Like lightning, I caught myself thinking, flung across a darkening sky.\n\n*****\n\nI turned the shower back on to rinse the soap off our bodies. The last traces of his release disappeared in that swirl of water. We were clean. I gently wiped him down with a towel before rubbing myself down. He leaned against the edge of the stone platform and watched me silently as I ran the thick fluffy towel over my body. I smiled at his quiet scrutiny. I loved the way he looked at me ... that strange mixture of desire and tenderness and awestruck worship.\n\nWe strolled back into the bedroom naked knowing that we would not be requiring clothes, either of us, for a while ... a very long while. I directed him with a nod of my head to the chair next to my bed, with the soft leather upholstery. I rummaged in my bedside table and then stepped behind him. His eyes followed my movements until I softly gripped his wrists to pull them behind the chair. I bound them together ... quickly, efficiently ... with a length of scarlet silk, the color of spilt blood. Now I had him where I wanted him.\n\nI was about to reach forward to caress his cheek when my cellphone rang. I made an impatient little sound under my breath, but walked towards the other end of the room where I had tossed my purse. I looked at the number flashing on the screen and decided to take the call. It was Maria. \n\nSpeaking to my sister was always a pleasure. We had gone through a great deal together. We were as close as twins though she was elder to me by a good three years. Our closeness was something of a miracle since to all appearances, we were about as alike as chalk and cheese. She was the stable one in the family ... not given to wild impulses or reckless whims. She was my secure anchor in a stormy sea. She had only recently shifted to DC to pursue her career as an executive in a big public relations firm. I had been devastated. I still missed her something terrible. The few chances that I had been getting to talk to her were never nearly enough.\n\n\"Hi, Sis,\" I said.\n\n\"You are sounding chirpy!\" she remarked, \"Fucking one of your models again?\"\n\nShe could read me like a book. Sometimes, it was so uncanny that I found myself glancing around in a panic in the middle of a call to see if she was actually in the room.\n\n\"Yes,\" I admitted. I didn't want to get into the bit just now about how he was also a student. There would be time for that. I was sure I was going to get an earful.\n\n\"Why are you whispering?\" she asked suspiciously, \"Oh, God ... he's there in the room with you, isn't he?\"\n\n\"Yes,\" I confessed.\n\n\"So ... why don't you introduce me?\" she enquired.\n\n\"Well ... he can't take your call right now,\" I said carefully, \"He's a little tied up at the moment.\"\n\n\"What do you mean he's tied up?\" She just wouldn't give up. \"What's he doing?\"\n\n\"Well ... he's actually, you know, tied up.\"\n\n\"You mean ...? Andrea!\" She was screaming into her phone, \"Let the poor boy go this very moment.\"\n\nShe took a rather dim view of bondage. Her sex leaned towards the romantic, all roses and music and a vanilla fuck.\n\n\"I will ... I will,\" I replied, sounding harassed and then added coyly, \"After I'm done with him,\"\n\n\"You are impossible,\" she replied, exasperated, \"At least be kind.\"\n\n\"Oh ...I always am,\" I said. I don't know what she thought I do to them. She never seemed to get that they like it.\n\n\"Yeah, sure ... You just kill them with kindness,\" she laughed. Well, at least her good humor hadn't deserted her.\n\n\"I'm driving down tomorrow for a few days. You can tell me all about it when I'm there.\"\n\n\"Sure ... blow by blow,\" I giggled.\n\nShe laughed.\n\n\"You can spare me the details.\" \n\nSuch a killjoy. But my spirits had lifted even more if that were possible. I had Anees' delicious body, all bound up and helpless, to play with all night. Maria was coming over for the week. Life couldn't get any better, I thought.\n\n\"Who was that?\" he asked, suspiciously.\n\n\"Oh, just my sister,\" I said, \"I told her I had to hang up quickly, with you tied up and all.\"\n\n\"You didn't!\"\n\n\"I did too! She is so looking forward to meeting you.\"\n\nHe was looking mortified.\n\n\"Oh, munchkins ... you don't have to worry,\" I said, running a finger along his cheek, \"She's going to love you.\"\n\n\"That's not the point,\" he sputtered.\n\n\"Then what is?\" I asked innocently.\n\n\"You don't tell your sister that you have a man tied up in your house.\"\n\n\"Better tied than loose,\" I giggled and then added airily, \"Anyway, we have no secrets between us.\"\n\nThat wasn't strictly true, but what the hell, what's a little white lie between friends ... or lovers, especially when one of them is tied up naked and can't do anything about anything at the moment. I tilted his face towards mine with a forefinger under his chin.\n\n\"I know you need a little rest after cumming all over my floor like you did.\" He blushed. \"So you just sit there and watch me. I love being watched,\" I breathed.\n\nI placed a fluffy pillow in the middle of the bed to support my head and lay down with my ass on the edge and my body spread out before his eyes. I wanted him to get a really careful look at the menu. He had some choosing to do tonight. Once I was sure his eyes were on me, I reached down and peeled open the petals of my cunt, laying bare the wet slippery folds of my pussy. I shivered at the thought of his dark throbbing shaft splitting open my hot pink cunt as he sank into my trembling depths. The play of colors -- his darker skin against my pale flesh - made me drool. \n\nNow that I had his attention, I slipped one finger slowly into my hole, stirring it. I moaned at the delicious sensations that it unleashed. He moaned with me. I fucked myself slowly with my finger, drawing it all the way out and then plunging it back in. When it was all wet and slippery, I drew it out and strayed lower to rub my juices delicately into the rim of my anus. If his lips ever strayed there, I wanted to give him something to eat. He groaned at the sight of me softly teasing my tight little hole. It's all yours, I wanted to tell him, yours to lick and to suck and to fuck. I was so looking forward to the moment when his hard swollen cock stretched open my tiny hole and claimed entrance. Oh ... I would let him in and I would never let him out. But not tonight. Tonight I had other warm wet orifices, which were aching for his cum. \n\nWhen my soft little orifice was glistening in the light from the layer of cream that I had smeared over it, my fingers drifted back upwards. I wanted more. So I added a finger to the one that had been stirring my cunt, reveling in the sense of fullness that it brought. His eyes were riveted to my fingers sliding in and out of my flesh with a wet squelch that I was sure was turning his insides into liquid.\n\nI withdrew my fingers, now dripping with my need, and wiped them casually on my nipples. Soon, my soft little peaks were glistening from more than the tiny diamonds that crowned them. What was left I sucked hungrily from my flesh. The sight of my fingers sliding in and out of my greedy mouth was clearly more than he could bear. It looked like he wanted a piece of the action, a taste of the dripping mess that I conjured each time I plunged my fingers into the liquid heat of my sex. Well, if that's what he wanted, who was I to deny him? Feeding time.\n\nI thrust my fingers into my cunt once again and churned it, coating my skin with my essence. When my fingers emerged, dripping cum, his eyes were fixed on them ... greedily. I slid off the bed and stood next to him. I fluttered my wet fingers under his nostrils, making them flare with need. His groan seemed to come from the pit of his stomach.\n\n\"You want a taste, don't you?\" I asked softly.\n\n\"Yes,\" he replied, hungrily.\n\nI grabbed a fistful of his hair and tilted his face upwards. When his lips reached upwards eagerly, I ran the tips of my fingers slowly along their length. His tongue emerged to lick my essence from his lips. But it was gone all too soon. He wanted more.\n\n\"Please ...\" he mouthed in a ragged whisper. I love to make them beg. It makes my pussy swell. It makes it want to be fucked.\n\nI slowly sank my dripping digits into his mouth. He closed his eyes and with a soft moan he began to suckle. I glanced down at his lap. He was erect and quivering. I leaned down to whisper in his ear as he happily snacked on my juices.\n\n\"You are already hard, baby ... so soon after I emptied you.\"\n\nBut don't you fret, hon,\" I whispered, \"I'll empty you all over again and ... then again and ... then again.\"\n\nA little shiver ran through his frame as I unveiled his fate for the night.\n\n\"You're going to let me use you, aren't you, sweetheart? Use your body for my pleasure?\"\n\nHis head was lolling on his shoulders. Even after they had been stripped of every last drop of my feminity, he was still sucking my fingers. It was all that I had given him so far and he didn't want to let go. I ignored his whimpered protests and withdrew them. I leaned down and gently captured his trembling lips in mine. There's nothing more erotic than tasting myself on my lover's lips. It is so unbearably intimate, so delightfully naughty. I took my time.\n\nWhen I finally broke my kiss, he looked at me, an unspoken question in his dark brown eyes. I smiled at him before I dropped to my knees in front of him. He groaned even before my tongue flicked across the crown of his shaft. I teased him with soft little flicks of my tongue up and down the length of his cock before enveloping the head in the wet heat of my mouth. I suckled softly on his sensitive flesh, my tongue exploring the ridge underneath for a long time until his hips began to rise off the seat of the chair.\n\nI drove downward, taking him all the way in until my lips nuzzled his soft crinkly curls. Then I began to bob up and down, teasing his head with a tight little suck on the up stroke and then milking it with the muscles of my throat on the down stroke. He was sobbing as though he were being murdered. When he was wet and glistening, I retreated until only his tip was lodged within the circle of my lips. I decided to let him do all the work.\n\nWhen he realized that I was not planning on moving at all, his hips rose off the chair as much as his bonds would allow, which wasn't much, to drive his hungry cock into my mouth. I retreated slowly until he had to strain his back in a tight arc merely to graze the tip of his cock against my lips, which nibbled him softly, sanguinely. He groaned in frustration. Maybe it's time, I thought, to drive him crazy some other way.\n\nI pressed his cock flat against his stomach with the palm of my left hand and then dipped to lick wet the velvety skin of his balls. I lashed his balls with my tongue, occasionally bouncing them on its flat wet surface until he was trembling. Then I drew each fragile orb into my mouth and sucked. The slight tightness of that liquid embrace inflamed him and he made little mewling sounds of satisfaction in the back of his throat. When I released them from captivity, they were spit slick and engorged. I planted a soft kiss on his silky pouch as I weighed it in my palm. I had plans for it. I was going to make the cum seething inside his balls boil over from his trembling shaft. Oh, you are going to cum again, my pet ... and hard.\n\nMy mind had already drifted to other places, other pleasures. I lifted his balls out of the way, but there simply wasn't enough room for what I had planned. I got up with a sigh. Never a good idea to let them loose so soon, but I didn't think I had a choice. I untied his wrists and led him to the bed. He seemed about to speak, but I silenced him with a finger on his lips. Right then, I didn't want him talking. I just wanted him to do exactly what he was told. He acquiesced, reluctantly and allowed me to arrange him on all fours on the bed, his knees splayed apart. I moved behind him to kneel between his legs.\n\nFrom where I was kneeling, I could see the engorged flesh of his cock and his silken pouch dangling, ripe and heavy. But my eyes were quickly drawn elsewhere. I didn't want to be distracted from what I had planned. I cupped the cheeks of his bottom in my palms and used my thumbs to peel him open, exposing the exquisite treasure that nestled within. His tight little hole winked at me, the ring of muscle convulsing as I stretched the skin around it, straightening out the folds and ridges. It knew what was happen to it, though he didn't.\n\n\"Oh God ... you are beautiful,\" I breathed before I leaned forward and ran my tongue softly over his velvet opening. His body jerked as though my tongue were a live wire. Maybe it was. I began to lick in earnest, my tongue traveling along the rim in soft, slow swipes. When his hole was slick and shining, I used my thumbs to peel him even further open and gently dipped the tip of my tongue into that core of darkness. He answered me with a moan that was so full of yearning that it almost made me cum. I waited patiently for the ring of muscle that guarded his orifice to loosen and let me in. And then I drove my slick muscle deep into his hole. His tight little passage fluttered around the twisting, writhing, teasing length of my tongue. I rimmed him for a long time until I was tired. My tongue was so tightly stretched that I thought it would tear off at its root.\n\nHis lungs sounded like a steam engine gone mad. His body was slick with sweat and strings of pre cum were dripping from the tip of his cock to pool beneath him on the sheets. But I wasn't done with him yet. I reached between my legs to wet my fingers in my juices and then gently probed his opening with the tip of one finger. \n\nWas he going to let me in? This was more a psychological barrier than a physical one. But I suspected that he was open enough to his sexuality to let me push his boundaries and to plunder his hot little orifice. So I pushed and he let me in. I paused when I was buried up to the first knuckle, allowing him to get used to my presence in his tight passage before thrusting all the way in, impaling him.\n\nThe sight of his sweet little hole expanding to suck in my finger was so erotic that I was now dripping, my juices sluicing from my hole to drench my inner thighs. As I began to fuck him, he suddenly arched his back and moaned. I knew exactly what was happening. The gentle friction of my finger against the pea shaped knob of his prostate was driving him crazy. \n\nI love awakening a lover to the joys of anal play. I love the way their faces twist with shock and surprised delight as the nerve endings in their tight little bottoms come alive. I love when they begin to beg, when they begin to fuck back against my invading finger. At that point, I know I can make them cum just by that relentless sawing. I wouldn't even have to touch their engorged cocks. They would spew on their own as their cute little bottoms were ravished. I knew Anees would.\n\nI suddenly had this mad notion of fucking his tight little hole with my strap on, driving deep into his bowels again and again and again until he was a slobbering mess and cum dripped, thick and creamy, from his cock. I smiled at the thought. He would probably run screaming out of my door if I suggested it. But he wouldn't last very long on a New York street naked. All those women ... hungry little wolves ... wouldn't be able to resist his smooth golden flesh. I would have to extricate him from a squirming pile of bodies. I would bring him back home, bruised ... a little battered. I would soothe him, stroke him, calm him ... and then fuck him.\n\nI was shaken from my delicious little reverie by his voice.\n\n\"Please ... Andrea. I want you. Please ... don't make me cum.\"\n\nI immediately stilled the finger in his flesh and waited. His anus clutched my finger, opening and closing around my flesh. His cock - hard, engorged -- twitched beneath his body. He gradually gained some semblance of control and his breathing quieted. I eased my finger out of his sweet little hole, but held the tip poised softly against his opening, so that he would not feel totally bereft.\n\nHis head was resting on his arms as he gathered himself. I crawled past him on all fours and lay down on the bed, a pillow under my head, his head between my parted thighs. When his face lifted, my wet glistening pussy was the vision that met his eyes.\n\n\"All yours,\" I whispered.\n\nHe was poised on his elbows, his face inches from my flesh, drinking in the vision of my engorged cunt. He seemed fascinated by my piercings. He reached forward and gently lifted the skin of my hood until the surface of the barbell that was strung through it lifted clear from my engorged clit. He held it suspended for a moment and then released it to snap back and bite into the flesh of my nub. I almost doubled over with the unbearable intensity of the pleasure that washed through my limbs. He did it again ... and again until I was whimpering like a slut.",
        "He peeled back the fleshy hood to expose my hungry little stem, pink and engorged. And then he began to move his forefinger up and down sliding the barbell, now slick with my juices, along the length of my clit. As he kneaded my sensitive stem, he pressed down gently on the platinum orb until my clit was wriggling against the surface of the curved barbell beneath it. I went mad, my limbs twitching as though suspended by strings from the fingers of a drunken puppeteer. He seemed intrigued by my reaction and unmoved by its intensity. He maintained the exquisite friction through my desperate sobs, through the helpless heaving of my limbs. It was clear that I couldn't expect any mercy. No quarter asked, I told myself, no quarter given. It didn't take long before my clit exploded in an orgasm that seemed to tear my body apart.\n\nHe kept his finger on my clit, as though he were staunching a wound as my body twitched in the aftermath of my release. When my body quieted and I opened my eyes, I saw him look at me with a longing so fierce that it made me shiver.\n\n\"You are so beautiful,\" he whispered in a voice husky with desire, \"So ripe.\"\n\n\"Oh, God ... Anees,\" I whimpered, \"Come here, baby.\"\n\nI stretched out my arms to him and he crawled up my body to lie on top of me, my leaking pussy painting a wet trail along his chest and his stomach. I loved the weight of his body pressing into mine, holding me prisoner. I ran my palms along his sweat streaked back and cupped the cheeks of his bottom pulling him against my body. It would be like this when he finally fucked me ... only better ... so much better. Our flesh would be joined and as his hard throbbing cock burned a furrow in my cunt, he would own me.\n\nWhen our bodies were level with each other, he covered my face -- my forehead, my nose, my eyelids, my cheeks, my lips -- with soft kisses like the trembling of butterfly wings. He sucked on my lips drinking in my soft whimpers, tasting my hunger. When he released my lips, he drifted lower. His palm rose to cup the underside of my breast and gently lifted making my nipple reach for his lips. When he drew the soft sensitive peak between my lips, I almost died. He sucked softly at first, drawing out the puckered flesh until it was so ripe that I thought it would burst. Then he began to chew the heated flesh gently.\n\n\"Aaaaah ...\" I moaned as my hips began to surge trying to rub my hungry cunt against the muscles of his stomach. He bore down a little more with his body holding me still.\n\n\"I think the other one's feeling a little lonely,\" he said as he shifted his attentions to my right nipple. I arched my back offering him the ripe little berry to be ravaged. He was happy to take me up on my offer. By the time he was done, I was incapable of coherent speech. Soft little noises were leaking from my lips. I barely knew that I was making them. He drifted lower, his tongue lapping at my sweat soaked skin. When he reached the angel in repose ... how could she sleep through all of this ... he planted a soft kiss on her face. I couldn't bear this any more. I placed my hands on his shoulders and pushed weakly telling him where to go. Lower, baby ... just a little lower.\n\nHe took the cue and dipped his lips into my steaming slit and sucked my clit, barbells and all, softly between his lips. He babied my flesh letting it wallow in the wet marsh of his mouth. He sensed that I must still be very sensitive. He gentled me for a long time until I was adrift in a sea of quiet pleasure. And then, he began to suck, his tongue pressing my clit against his palate, the metal sliding smoothly over my stem as he worked. My thighs were trembling and my hips were jerking off the sheets, desperate now for another release ... bigger ... better. I was insatiable.\n\nWhen I thought that the sensations assaulting my saturated senses could not get any more intense, he slid two fingers into my cunt. I felt them curl softly inside my passage in a come hither motion and press firmly, insistently on the knot of nerves and muscles in my upper wall, adding to the pressure on my already over stimulated clit. My tight little ass rose off the sheets. And then he shook his head lightly like a dog with a piece of meat. I was finished. I screamed as waves of pleasure erupted from my cunt and washed over my body. They must have heard me on Broadway.\n\nI was panting, my lungs working like a blacksmith's bellows. He had released my poor swollen clit from the sweet prison of his mouth, but was softly lapping away at my cunt like a kitten with a dish of cream. He licked up my juices from the slick inner folds of my cunt and then dug deeper, his tongue writhing into my hole to scoop up more of my essence. My cunt was obliging, grateful for that sublime ravishing. He shoveled my wetness from my passage with the curved tip of his tongue and then feasted. I lay back drained and let him eat his fill.\n\nAnd then I felt my legs being eased back, my thighs pressed against my torso. I had an inkling what he was after. My suspicions were confirmed quickly as his tongue washed over the tight quivering entrance to my ass, lapping up the juices that had pooled in my crack. He kept licking softly, his tongue flicking like a serpent's. I wondered idly as I drowned in pleasure, whether it was forked.\n\nWhen his tongue stiffened and pierced the delicate rosebud of my anus to twist in my innards, I could no longer bear it. I could no longer bear not holding him in my arms. I could no longer bear not pleasuring his sweet flesh.\n\n\"Please ...\" I mumbled thickly, \"Gimme ... gimme.\"\n\nHe slid up my body and cradled me in his arms.\n\n\"What, baby? What do you want?\"\n\n\"I want to taste you again. I want you in my mouth ... please ...\" I begged.\n\nHe hesitated for a moment and then twisted around to lie on his back. I was too exhausted to move. He gently lifted my body, which he had so mercilessly plundered, onto his so that my pussy was poised over his lips and the object of my desire, his hard aching cock, was inches from my mouth. I leaned forward, gripped his cock in my fist and plunged it into my throat. He moaned and then pulled my hips down to bury his lips in my swollen flesh. His tongue drove upwards into my steaming depths.\n\nI worked steadily, relentlessly, my head bobbing up and down, pulling him all the way out and then plunging him all the way in. I maintained a steady rhythm that was designed for only one thing -- to get him off, to make him spurt his cum into my throat. I knew I was getting to him. His hips were lifting off the sheet with each liquid stroke of my mouth on his cock, urging me to take him deeper. He sensed that he was close and shifted slightly to take the swollen grape of my clit again into his mouth. For a moment, I feared that it would burst like a ripe tropical fruit, spraying his mouth with my flesh. \n\nCould I have another orgasm after the likes of the two that I had just had? It appeared that I could. I felt him peel open my ass with the forefinger and thumb of one hand and gently probe my tight little hole with the forefinger of the other. My hips bucked in their eagerness. As his finger surged forward, impaling me, his thumb curled into the dripping entrance of my cunt. He rubbed his thumb and forefinger together through the thin membrane that separates my two passages as though he were counting a sheaf of notes. I died.\n\nAs I rapidly scaled the curve of my arousal, spiraling towards another inevitable explosion, I redoubled my efforts on his twitching member. Just as he began to spurt his hot cum into my throat, my cunt spasmed in release. I moaned around his pulsing shaft and thick streams of cum leaked from the corners of my mouth. That was the last thing I remembered before I grayed out, my mind no longer able to cope with the magnitude of the ecstasy that tore through my flesh.\n\n*****\n\nWhen I woke up, I was alone in my bed. He seemed to have cleaned me up before pulling a sheet over my body and turning out the lights. Where was he? I wondered. I pulled on my t-shirt and wandered into the hall. He was asleep on the couch, his face innocent in repose. He looked so fragile, so vulnerable, one hand curled softly under his chin ... that I had this sudden urge to cuddle him, to protect him ... though I wasn't quite sure against what.\n\nI sat beside him on the couch and gently brushed his hair back from his forehead. He stirred beneath my fingers and slowly opened his eyes, still heavy lidded with sleep. He gave me a sheepish grin and whispered, \"'morning.\" \n\n\"Why did you sleep on the couch?\" I asked him.\n\n\"I wasn't sure you wanted me to sleep with you. Some people find that too intimate.\"\n\nI shook my head with a bemused air. I had cradled his cock in my palm and watched him spurt helplessly. I had drunk him greedily as he poured his cum down my throat. His lips had been plastered to my cunt through three of the most intense orgasms of my life. What could possibly be more intimate than any of that? I gave him a playful swat on the back of his head and ruffled his silky hair as I got up to go to the kitchen.\n\n\"Rise and shine, sleepyhead,\" I smiled over my shoulder as I walked away, \"I'll have coffee ready in a few minutes.\"\n\nI was curled up against the warmth of his body sipping coffee, reveling in the quiet perfection of that mellow morning, when my cellphone rang. I smiled an apology at him and shuffled across in my soft mickey mouse slippers, which were one size too large for me, to pick up the phone. It was Maria.\n\n\"Hi, sweetie,\" I shrilled into the mouthpiece, \"where are you?\"\n\nThe voice at the other end was unfamiliar and undeniably masculine. I looked at the screen again, confused, to make sure that I hadn't read wrong.\n\n\"Who am I speaking to?\" the voice asked.\n\n\"Andrea,\" I replied, now a touch irritated and a little anxious, \"who are you? And how do you have Maria's phone?\"\n\n\"Are you her friend, ma'am? Or a relative?\"\n\n\"I'm her sister. Do you mind telling me what's going on?\" I could feel my throat constrict.\n\n\"Sorry, ma'am. I'm Lt. McNeeley of the NYPD.\" At the other end of the line, I sensed him hesitate. My mouth was dry and the tension was killing me. I wished I could reach across to that man, grab his collar and shake him ... shake the words out of him. \"Your sister's had an accident, ma'am. We brought her here to the Emergency unit in Mount Sinai.\"\n\n\"Is she alive?\" I asked quietly. I was surprised at how calm my voice sounded. I felt as though I were floating outside my body, looking down at this stranger holding a phone to her ear, her fingers clenched so hard around the instrument her knuckles showed white. If I weren't inside me, I wouldn't have to hear him say it.\n\n\"No ... ma'am. She passed away a few minutes ago, shortly after we brought her here. I'm so sorry.\"\n\nOnce again, I was in that long room in La Paz with large windows, the mild warmth of the sun on my shoulders, Mt. Illimani looming in the distance, its snow covered peak glinting in the morning light. Our palms were glued together, slick with sweat. Our destination the two slabs furthest from the door. The walk seemed interminable. The attendant regarded us solemnly for a moment to make sure we were looking, before he pulled back the sheets. I had a brief glimpse of their bodies ... of what used to be bodies ... twisted, charred ... before she pulled my face into her shoulders, into the mercy of darkness and the scent of lavender which would thereafter always remind me of death.\n\nWe were teenagers once. And we grew up in a hurry. The noises of life filtered into that room like a distant echo. It was the festival of Gran Poder and later that evening, the streets of La Paz would fill with hundreds of whirling figures wearing devil's masks, an occasional angel struggling to impose order. The drums of the diablada would compete with the raucous calls of street vendors hawking dried llama fetuses and bottled talismans. But I felt as though my world had ended. \n\nAnd now that hand that had clutched mine so fiercely, that shoulder that had shielded my eyes, those lips that had kissed my pain away ... so softly, so tenderly ... were gone and I stood in the middle of that room, my heart breaking at the terrible loneliness of her final moments. Was she conscious? Did she crave a loving touch, a familiar voice, a face that she recognized before she slowly faded? My nose was filled again with the stench of burnt flesh and I fled, bile rising into my throat.\n\nHe rubbed my back as I knelt in front of the pot, retching, my throat tingling with the taste of stale coffee. The next few hours passed in a blur. I remember his asking me whom to call. I remember giving him my little diary with the names of family and friends. We didn't have much family in New York. But friends were a different matter. She had only recently shifted to DC. Her kindness was like a magnet and people gravitated towards her. I had resented that once, resented the demands they made on her time and her attention. I had resented the fact that I had less of her. All of that seemed terribly petty now.\n\nHer face was unmarked. I remember thinking that she looked serene, at peace with herself, embracing oblivion as calmly as she would a friend. I remember hoping that I would look like that when my time came. My voice didn't seem to be working. I nodded, a clumsy little twitch of my head, when I was asked to identify her body. Not identify \"her\" ... identify \"her body.\" She had already ceased to be a person. She had already become a thing.\n\nHe made all the arrangements - the undertakers, the flowers, the memorial service ... the coffin ... How could I imprison her in seven feet of wood? ... How will she breathe? I don't remember a word of what I said at the service. He assured me that it was appropriate. I'm not sure I believed him. He would spare my feelings even if I had rambled like a drunk.\n\nWe were gathered in a tight little knot around the freshly dug grave. It was raining again. My brown hair was hanging in wet tendrils over my forehead. My eyes were painfully dry. I hadn't wept ... yet. I felt that people were keeping their distance from me as though I were infected with something ... something they would catch if they weren't careful. I was probably imagining it. I'm sure they were doing their best ... respecting my privacy by distance. We are all awkward in the face of grief. It makes us want to hurry away and resume our humdrum lives with a sigh of tangible relief.\n\nWhen they had all left and we were the only ones that remained next to the mound that concealed what I had held closest to my heart, he put his arm around me. He had been careful not to do so earlier -- to spare me, I suspected, the embarrassment of proximity on an occasion of mourning, to spare me the need to explain him to the people who knew me - to explain this stranger whose face was tight with concern.\n\nI was silent in the taxi, my hands lying loosely in my lap, my head bowed. I didn't see the city -- its unapologetic normalcy - flash past my window. It was as though today was no different. Perhaps it was not. I didn't register that we had reached. He opened the door of the taxi for me and gently eased me out. He led me -- one hand on my arm -- through the foyer, in and out of the elevator, down that long corridor with gray wallpaper and plaster moldings and into the brooding emptiness of my house. The house seemed to resent that I hadn't brought her back. It seemed to reach out over my shoulder and glance into the corridor to make sure that she wasn't there. I shivered.\n\n\"Oh, Andrea,\" I heard him whisper before he enveloped me in his arms. Hold me tighter ... never let me go. I felt the ice that had grown around my heart crack and melt into tears that ran hotly down my cheek. I reached blindly for his face and pressed my lips against his, to staunch the pain and to deaden the memory. My lips were a wound. His were a tourniquet. I sensed him hesitate, his body stiffening in my arms. My nails dug into his back in my panic and he relaxed, gently consoling my lips with a kiss so tender that it took my breath away.\n\nMy fingers were scrabbling on his body, struggling to remove his clothes. More than anything else at that moment, I needed to feel the warmth of his flesh against mine. I needed to be reminded that I was flesh and blood, that I had body and heft, that I could feel and hurt. He scooped me up in his arms and carried me to the bedroom. He gently eased me down on the bed and as my fingers roamed restlessly, ineffectually over him, he quietly, efficiently stripped me naked. I saw the blurred outline of him through the film of tears that hung on my lashes as he stood next to me quietly peeling off his clothes.\n\nThe mattress dipped as he knelt between my parted legs and then his weight settled on mine, forcing the air out of my lungs. My lips parted in a soft sigh as his flesh cleaved mine open and he entered my body. He held my face between his palms ever so gently, as though I were something fragile ... something that would smash into a thousand pieces if he were not careful, as his hips surged softly, claiming me, loving me, soothing me. My hands strayed down the firm lines of his back to the clenched muscles of his bottom to draw him closer to me. \n\nI didn't want to be me. It hurt too much. I wanted to melt into his flesh, to become him, become us. I felt his hard throbbing flesh nudge the mouth of my womb, felt him tremble in my arms. \"No,\" I screamed, \"not yet.\" I didn't want this to end. His hips stilled as I whimpered softly and he swept my hair back from my forehead with his fingers, his lips following in their wake with soft little kisses. They felt cool against my forehead.\n\nI twisted my hips to roll us over until I was on top and his golden body was stretched beneath mine. He softly wiped away with the pad of his thumb the wet trails that my tears had left on my cheeks. He looked into my eyes and sensed my desolation and my despair, a despair that was beyond language. And his eyes melted with a tenderness so profound that I felt my heart swell against my ribcage.\n\n\"Oh ... baby,\" he whispered, his voice a lingering caress, \"Use me.\"\n\nHe repeated those words again softly, \"Use me,\" as he placed a hand behind my head and gently drew my face into the skin of his throat. My body moved, but not consciously ... It moved like waves washing into a lagoon, like the wind whistling through the leaves in spring. I didn't move against him. I moved with him, our bodies the notes of a single song. I was looking into his eyes when I came. And we saw the same thing ... the vision of my flesh gripping him, caressing him ... tenderly ... as he surrendered to desire that he couldn't help and filled me with warmth. It was only when our breath had settled that I tasted the blood on my lips ... his blood that I had drawn as my body flailed in the storm of its release.\n\nAs my eyes creased with concern, he reassured me with his. \"It's okay, baby,\" he whispered. I remembered how the other night ... was it only yesterday? ... he had abandoned me to my dreams and crept away to sleep on the couch. I couldn't bear the thought tonight - of not feeling his body against mine, his flesh against my flesh, the glowing warmth of our embrace.\n\n\"Please don't go away,\" I pleaded. My voice belonged to a little girl ... the little girl that I had almost forgotten I had once been.\n\nHe softly stroked the brown halo of my hair.\n\n\"I won't, my heart,\" he whispered, \"Ever.\"\n\nI believed him. \n\nI still do. He has never given me reason not to.\n\n*****\n\nIf you enjoyed this story, please spare a moment to vote. As a writer, I look forward to learning what works for you as a reader.\n\n... fantasy"
    ],
    "authorname": "fantasy123",
    "tags": [
        "older woman",
        "younger man",
        "light bondage",
        "mutual masturbation",
        "anal play",
        "milf",
        "piercings",
        "tattoos",
        "body jewelry",
        "egyptian"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/chiaroscuro"
}