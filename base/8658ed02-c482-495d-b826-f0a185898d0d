{
    "title": "My Little Ventrue Ch. 06",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\nIt didn't matter how many times Julias stood before the triumvirate, he never felt safe.\n\nViktor was old. Michael and Maria were there as well, and while they were older and stronger than Julias, it was Viktor that made his inner-beast recoil. Sometimes Julias wondered if his sire would try another torpor, before his strength grew to the point that he'd need Kindred blood to survive, and not kine blood. Every time he stood before him, he started to worry more and more about that possibility.\n\nNatasha and Jessy were there too. Jessy was Michael's childe, a Gangrel, and his right hand for the Invictus; she was just a bloodthirsty animal. Natasha on the other hand was a Mehket, and served as Maria's right hand. Only Maria knew who Natasha's sire was.\n\nThe three right hands and their three masters. They stood in the top floor of Xnomina, with a gigantic touch-screen on the wall. The masters were not good with keyboards, or texting, but they were quite comfortable managing complicated webs of notes, photos, hints and evidence. The huge touch-screen let them slide the nodes in the web quickly.\n\n\"Rebecca was seen at Julias's, and attacked his childe before he was turned. Then was later seen at the building Julias was sent to to capture Vance or his data.\" No titles, all business. Viktor was pacing in front of the screen, and his right hand would occasionally reach out to drag one of the digital images to the center of it, so it would grow in size for them to read or analyze. \"She defeated Julias, who only managed to survive because the fire or sunrise risked Rebecca's life.\"\n\nNatasha frowned, Jessy snickered, and Julias grit his teeth. Well, at least they didn't know Beatrice had saved him.\n\n\"Julias managed to recover the situation. The next night, he observed that Rebecca had recovered the data, and overheard -- with brilliant use of possession on a rodent, I might add -- that in a months' time from that night, in North Side, there would be a drop. Typical lingo of gutter trash.\" Viktor gave a shrug. \"Now, we have another piece of the puzzle to add to that.\"\n\n\"Sir?\" Julias said. He tried to hide the small smile he had over the earlier compliment. Jessy hated him.\n\n\"Natasha has come across some valuable information. Her childe has discovered that, not long after Rebecca recovered Vance's data, her and, who we believe to be Tony, visited the Carthians.\"\n\n\"S-sir,\" Natasha said, barely above a whisper. She was a petite thing, long black hair, with a young but hard face. \"W-we know the Carthians have a Mike Unknown working for them. He... he is only five years embraced.\" As the ridiculously shy Mehket spoke, Viktor turned around and pulled up Mike Unknown's picture on the touch-screen. \"He is a hacker.\"\n\n\"A hacker? This-\" Jessy tried to cut in, but Michael snapped her a look Julias only manage to catch a second of. Jessy's sire certainly wasn't happy. He was probably upset over Jessy's lack of anything to contribute. Julias had to try hard to suppress his grin.\n\n\"A hacker,\" Natasha continued, \"who we believe has been responsible for several data leaks of Invictus trades.\"\n\nJessy whistled. Even Julias was impressed. The little punk on the screen had balls.\n\n\"His antics have been nothing but meaningless jabs at Xnomina, with no major consequence,\" Maria said, \"and we have ignored them until now.\"\n\nThe ghost lady walked around the conference room table and stood in front of the three right hands. They all stood up straight at her approach. Sometimes, Julias thought Maria looked like a freshly dragged corpse from the river. When she stepped up to him and looked at him, only a foot away, he could swear he could see bits of water drip from her skin before turning into mist.\n\n\"And you three, are going to find out what he knows.\"\n\nShit.\n\nMichael stepped up beside Maria. \"We know this could spark problems with the Carthians if anyone finds out. The Prince has made it absolutely clear that we are not to disturb the peace, so...\"\n\n\"So that means no one finds out.\" Jessy punched a hand to her palm. She had really, really short blonde hair, was almost as tall as Julias or Michael, and looked more like a boxer than anything.\n\n\"Get the information by whatever means necessary,\" Viktor said, \"but if this gets back to the Carthians, someone will have to pay.\" With that, the eldest of them all stood there, hooked his hands behind his back, and stared at the three of them. His gaze was cold, stern, and despite his young form, the furrow of his brow was heavy enough to carry centuries.\n\nThey were pawns, and pawns were expendable.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"I don't understand why we don't just beat him until he tells us what we need to know, and then dust him.\"\n\nJessy was dressed in a leather jacket and pants, and looked somewhere between a Carthian's love for street-wear, and an Invictus's love for class. She was even wearing some slim sunglasses. At night. She'd seen The Matrix too many times. It fit the scene though, with the three of them kneeling on a rooftop and looking down at the streets leading into the Carthian half of South Side.\n\nJulias rolled his eyes. \"If Mike disappears, they'll know he's dead. Dead Mike means Garry gets suspicious. You think Garry won't find out? Think he'll take that shit lying down?\"\n\n\"N-no... he wouldn't.\" Natasha was beside him, dressed in a simple business suit with a knee-length skirt, blue color.\n\n\"Then what do we do?\"\n\n\"Natasha?\" Julias looked to her.\n\n\"We... we could observe him. But he wouldn't j-just make a stupid mistake. He's smart. He'll have l-locked everything, encrypted, and wouldn't accident-tally say something out loud. He's lived the digital world his whole life.\"\n\n\"Fucking new Kindred,\" Jessy said, and she clenched the rooftop's edge hard enough to sink her fingers into the structure.\n\nMuch as Julias hated to admit it, the new Kindred had a huge advantage. They adapted to how insanely small the world had gotten, how connected and immediate it was. He grew up when the radio had just become a household item. Natasha and Jessy, barely half his age, grew up when TV was still young. The internet was absolutely nauseating to try and understand in scope.\n\nHe could only pity Viktor, on that front.\n\n\"... then I guess I'll have to make him tell me, then make him forget.\"\n\n\"What?\" Jessy stood up and looked down at Julias. \"I'm sorry, since when were you an Elder Kindred?\"\n\n\"She's r-r-right.\" Even Natasha stood up and looked down at him. \"We're all Ancillae. You're... not that powerful. Maybe against a kine, but against a Kindred?\"\n\nSometimes, when presented with the opportunity to be a jackass and a show off, you just can't help but give in. \"Watch me.\"\n\n~~~~~~~~~~~~~~~~~~~~\n\nFinding Mike wouldn't be too hard. Natasha was a Mehket, and her clan held the power of Auspex. Nothing could be hidden from them for forever. The problem would be what to do once they had their hands on him.\n\nJessy and Julias followed Natasha around, out in the open streets of the night. Trespassing was allowed, but feeding in another covenant's territory was not. And there were plenty of people around. The kine were everywhere; the smell of blood and the sound of heartbeats filled his nose and ears. These were the things he was about to risk his unlife for: food. Blood bags. A couple he recognized from Xnomina, and they nodded to him, cheerful and pleasant.\n\nHe really did envy them. All of them. \n\nWhen they walked by, his eyes drifted down over their faces, down their jawline and to their necks. Even on a full stomach, he could feel the cravings force his attention to blood. Always back to the blood. Idly, he wondered how long it would be until he'd have to enter his first torpor, when his cravings would become too strong and he'd be forced to survive on the blood of other vampires. How long until he'd be in Viktor's shoes?\n\nAnother woman he knew walked by; Juliette, he believed her name was, and an employee of Xnomina's daytime activities. They'd slept together a few times, he drank her each time, and just walking by her was enough to make his insides tingle with desire for the warm, rich drink. She offered more than just a smile, and even reached out to let her hand graze along the sleeve of his suit as she walked by, complete with a glance over her shoulder.\n\n\"Food later,\" Jessy said.\n\n\"Coming from you, that's a laugh.\" Julias gave a small snort.\n\n\"I'll have you know I drank from both my ghouls before coming on this trip.\" The Gangrel stepped up beside him, and even gave him a punch in the arm. Gangrel hit hard, and he couldn't tell from the smirk on her face if she was angry or just being aggressive and playful. Animals were never easy to read.\n\n\"And again tonight, I imagine. Think they'll survive?\"\n\n\"Fuck you, I don't kill my ghouls.\"\n\nHe grit his teeth hard enough that his fangs were just visible. \"You ne-\"\n\n\"Quiet!\" Natasha said. To hear the quiet girl snap at them with hushed but harsh voice was enough to make the two of them shut up. \"He's... here. Alone.\"\n\nThe three of them stepped into an alleyway, complete with hazy neon lights on brick walls advertising convenience stores and movie rentals. No one would ever rent a movie these days.\n\nNatasha took them to a worn, dark green door. It was one of those metal doors they had on the back of small stores, complete with a numpad for inputting a door code. Jessy just gave a small chuckle, and pushed in on the door with a hand on the doorknob. The metal bent and cracked in effortlessly. The damn animal had the grace of an ox. Julias and Natasha both grimaced in unison, but when no alarm went off they followed Jessy in.\n\n\"What the fuck!\"\n\nA scrawny little Mehket with messy hair over his eyes jumped up in a panic. He was in the dark, with several computer monitors laid around the desk shining dull blue light over a keyboard, mouse, and a desk covered in dozens of... things. Catalogs, little books, pamphlets, devices, smartphones, pens, and wallets. A classic example of a fresh Mehket in the new world; he lived in computers and, while a juggernaut in the digital realm, was a sad waste of skin in the real one.\n\n\"Oh shit... shit shit shit. I'm sorry, I'm sorry I stole those blueprints. I'll delete them right now! Just give me twenty seconds and you'll have-\"\n\n\"Shut up.\" Jessy was on him in a second, with her fingers around his throat and slamming him back into a wall.\n\nJulias grunted. Jessy's antics were likely to get them all killed, but she didn't hesitate, and that was useful. \"Natasha, keep an eye open.\"\n\n\"Of c-course.\" The little woman stood by the door, and waited. Mehket were always valuable on missions as well; they could keep themselves hidden like nothing more than mist in the corner of the eye. One as powerful as Natasha could keep them all hidden.\n\nJulias looked to Jessy, and she threw a glance back at him. There was a need in her eyes, like a cat who wanted to play with a mouse. She liked making the poor fool in her hands squirm and wriggle in fear.\n\n\"Mike. What did you learn from the phone?\" Julias said.\n\n\"Phone? Phone what phone? I don't have any phone, man. Come on, seriously, I'll do anything you want! I'm sorry, Invictus won't get anymore trouble from me.\"\n\nJessy growled, and Julias stood over the messy desk. He idly flipped through the array of random things. The kid even had spare hard-drives lined up, plugged into what he guessed were servers running only God knows what.\n\n\"The smartphone. Rebecca or Tony gave it to you. You're a hacker.\" Julias rolled his eyes and walked up to the kid pinned against the wall. \"How stupid do you think we are?\"\n\nMike's jaw dropped. \"You... you can't... we have a truce! The Prince won't allow this.\"\n\nJessy grit her teeth so hard, Julias could hear them grind. The kid was right, and this was all resting on the hope that they could convince the kid to keep this quiet, which would be impossible. Normally.\n\n\"Mike,\" Julias said, and stepped even closer so he was standing over him.\n\n\"You're all Invictus! You can't do this, you're... you're....\"\n\n\"Look into my eyes, Mike.\" He leaned in closer until only a foot separated their faces.\n\n\"I don't... know....\"\n\nThe Gangrel would never know this feeling, neither would the Mehket. The Daeva could only make people adore them, and the Nosferatu could only make people fear them. The Ventrue though, they could make people obey.\n\nFrom deep within, down in his core, into the blood that circled his corpse, he pulled forth his vitae. The energy rose like forgotten adrenaline. Unseen and overwhelming, his mind reached out and found Mike's. The eye contact was the key. He could see straight into the weak Kindred's eyes, and he could feel the twerp's inner-beast fall to its knees. Mike's eyes had gone wide, but they were now unblinking.\n\n\"Mike. Is there any surveillance in here monitoring us?\" A test.\n\n\"... no....\"\n\nGood. His voice was dead and monotone. The fool was broken.\n\n\"What did you learn from the device Rebecca gave you?\"\n\n\"There's... a drop....\" Mike's eyes stayed wide. All the subtleties of his movements were gone. Robots had more life to them.\n\nJessy gasped. Her grip loosened on the kid until he was standing on his own, while she stood there casting surprised glances between Julias and Mike.\n\n\"Where.\"\n\n\"The abandoned... textile mill... North Side.\"\n\n\"When.\"\n\n\"... eight days.\"\n\n\"What's the drop?\"\n\n\"... information.\"\n\nJulias narrowed his eyes. \"What kind of information?\"\n\n\"Didn't say... important to... the covenants.\"\n\nGod damn it. Julias couldn't extract information that didn't exist. He groaned and looked to Jessy, who was smirking at him.\n\n\"Impressive,\" she said, \"but I could have just beat that out of him. We're no better off now either way. He's going to tell Garry, or we kill him and Garry figures it out.\"\n\nJulias leaned in closer until only six inches were between his eyes and the tiny Kindred's. Mike didn't squirm anymore, and his eyes didn't break contact. For a moment, Julias was sure he could see through the kid's pupils and into his insides. Into blood and ash.\n\n\"Mike.\" His voice practically echoed in the quiet. \"We were never here. This conversation did not happen.\" The vitae in his dried and withered insides rose higher. It filled him. He could feel the inhuman plague flow into his brain, into his eyes, and through the contact with his victim.\n\nMike never stood a chance. Like the rat, the child Kindred's mind surrendered and collapsed.\n\nJulias put a hand on the wall to steady himself. He wanted to fall over. Exhaustion washed over him, and so too the hunger. He'd gone from a full belly to the beast within knocking at the door, demanding he feed or it'd feed for him. He forced down a growl and brushed his hair back with his fingers.\n\n\"Let's go.\" Julias gave Jessy a nod and headed to join Natasha at the door. When he glanced over his shoulder, he could see Jessy blink at Mike before she turned to join him. Mike collapsed to the floor, but did not move; he wouldn't move for a while.\n\nWithin five minutes, they'd broken down a door, interrogated a kid, and rewrote his memories. Julias smiled to himself as they walked out of the building, back into the street, and with the practice of decades, nonchalantly rejoined the flow of bodies walking the large sidewalks.\n\n\"Julias, you just re-wrote that kid's memories.\" Jessy grabbed his arm and pulled him to a stop. \n\n\"Y-yes. That is... how did you do that?\" Natasha stepped in beside Jessy and looked up at him. She looked meek, but her eyes always had a layer to them. Whenever Julias met them, she looked away, but for just that glimpse he could see she was thinking fast.\n\n\"How do you think?\" He met Jessy's glare, but the Gangrel stared right back at him. Julias wrenched his arm free and started walking again. Damn idiots. You don't stop to talk in the middle of moving crowds unless you actually want to look suspicious.\n\n\"I'm sorry, did you suddenly go Elder on us when we weren't looking? Victor is the only Ventrue in the whole damn city who can rewrite someone's memories.\"\n\n\"Not the only one.\" Julias gave Jessy a playful smirk, and to his satisfaction, she immediately growled and furrowed her brow in frustration.\n\n\"I'm not fucking kidding here!\" The Gangrel reached out with a snap and yanked him into an alley. Before he could even say anything, she'd moved them well into the black of the alley and away from the crowd again. She'd pushed him against a wall, but he pried her hands away from his shirt.\n\nSo much for getting out of there quickly.\n\n\"Back off, Jessy,\" he said.\n\nTo his dismay, Natasha stood beside Jessy, and she peaked up at him. \"Julias... we're afraid of Victor.\"\n\n\"You'd be a fool to not be.\" Julias frowned down at the little Mehket. \"Michael and Maria are scared of him too.\"\n\nJessy finally let go of him. \"We're all afraid.\"\n\n\"V-Victor... he'll need torpor again soon. If he comes back... even worse than last t-t-time.\" Natasha shuddered. \"And if he doesn't torpor, he'll need to drink... Kindred to survive.\"\n\n\"... you want me to do something about it?\"\n\n\"Yes,\" they both said in unison.\n\n\"Pray tell, what am I supposed to do about my own sire?\"\n\nBoth the scary Gangrel and the shy Mehket looked down, then at each other, and then down again. It was obvious they'd been talking to each other before this. They even shuffled their feet from side to side.\n\nThen Natasha looked up at him, and her eyes hardened. \"Kill him.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nIt was the same damn music. Mindlessly repetitive and deep enough to give a headache purely by making his skull vibrate. How did people listen to this stuff? But then, that was probably part of the problem. The first thing he noticed was the music while everyone else here was noticing each other instead.\n\nIt had been a week since he was last here. He figured a week would be the likely schedule a figure like the Prince would follow. Businesses breathe in weeks. He could have come some other day, and avoided Antoinette, but here he was actually going out of his way to see her.\n\nHe had a death wish, he must have. Little fledgling that was he going to have a sit down with a vampire so powerful and ancient she might as well have been fictional. So why was he walking next to the walls of this place again, bathed in red light with his fingers on the railings? Why was he walking up that staircase again and up onto that second floor? Why was he scanning the room for the very tall woman with the white hair?\n\nWhy did he get excited when he saw that she was there?\n\nShe looked at him, and again he almost quaked in his shoes. It was a harsh reminder that he was no longer human, when the beast inside him reeled back with hair on end and tried to run away. Two predators that saw each other at a distance, except one was a god and the other was a house cat. But when the look on her face -- he could swear it was almost sad -- turned into a smile, he couldn't help but smile back.\n\nShe pointed at hand to him and curled her finger in the same way as before, and this time Jack walked over without hesitation. He still walked slowly \u2014 he wasn't that stupid \u2014 and took a moment to look around for Daniel. To know that Mekhet sheriff was around, hidden and spying and able to effortlessly cut him to bits, was not exactly a comforting thought. To see the Prince smile at him though, and motion for him to join her in the booth, quickly buried that fear.\n\nNow all that was left was the strange mix of exhilaration of talking with the Prince of Dolareido, and the ever-present worry that if he said or did anything to offend her, absolutely nothing stood between her and his final death.",
        "\"You came back.\" She smiled again, and Jack found his toes tapping on the floor. The dress she wore was just as enticing and beautiful as the last time. Open back, it was again black and wrapped tightly to her figure, but this time the chest opened to reveal the large cleavage she carried before connecting together again just below the navel. The skirt it connected with split at the left hip and, while the skirt went down to the ankle, it only had enough fabric to cover her right leg. Her left leg was fully exposed, and Jack couldn't help but take a quick glance at the long, white limb, and the dangerously sharp six-inch heels she was wearing.\n\n\"Yes, my Prince.\" Every time he said that, he felt so submissive. He didn't mind, but it felt weird. What reason could she have for forcing people to personalize the title?\n\n\"I was sure Julias would convince you to avoid me.\" She pointed at the space next to her, and Jack slid over closer to her with a shy glance.\n\n\"Really?\"\n\n\"Yes.\" Now that he was almost touching her, Antoinette slid just a few inches until they actually were. Her bare leg was pressed to his pants; god how he wished he wasn't wearing pants. \"I assume he had warnings that I would manipulate you for my own plans, and that I was dangerous. Not only I, but others in the Danse Macabre would be a danger to you as well.\"\n\nShe slid closer still, but already pressed against him, her motion brought her torso a little closer to him as she put her arm behind him across the back of the booth. He tried his best to not stare, but he hadn't expected her to start snuggling up to him like this. It was so blatant, so sexual, inviting and imposing at the same time.\n\n\"Uh, yeah, he did. But I assured him my utter uselessness to anyone would protect me.\" He managed to crack a goofy smile, and the Prince giggled.\n\n\"You have such a low opinion of yourself for a Ventrue!\"\n\n\"I prefer the predictability of realistic expectations, versus the gambling of delusions of grandeur.\" The straightforwardness of his words shocked him. Be careful Jack, before your social bluntness gets you killed.\n\n\"Oh, I see. But then, you are here, with me, the Prince. That seems a paradox.\" She tilted her head pensively.\n\n\"I... thought the gamble was worth the risk, my Prince. You've treated me with a lot more respect than other Kindred. I thought that... well... I'd hate to throw away a friendship like this one.\" He had to look away, and his eyes drifted down to the table in front of them. He waited with netted fingers, and his thumbs rubbed into his knuckles with worry.\n\n\"... is my friendship valuable to you? A powerful ally?\"\n\n\"Yes... no! No I don't mean, I didn't mean that... I'm not here for an ally. I'm here because... other than Julias, you're the first Kindred I've talked to who's talked to me, not at me.\"\n\n\"I see.\" She gave him one of her smiles, less seductive, more genuine, and he relaxed. \"I suppose you must be wondering why.\"\n\n\"Yes, very. I can't imagine what I could....\"\n\n\"... how much do you know of the history of our kind, little Ventrue?\"\n\n\"Almost nothing. Julias hasn't told me much.\"\n\n\"He tells you little because he knows little, because we know little.\"\n\n\"Know little? I... I don't understand. Aren't you 500 years old?\" he said. She gave him a frown, and he immediately put both his hands up apologetically. \"I'm sorry! But-\"\n\n\"It is true, I am very old, as are Daniel, and Viktor, Tony, Jacob, and the other Primogen. But age does... take its toll on the mind.\" While one arm stayed behind Jack, her other came up to her face and palmed her cheek with thought. \"Centuries cause memories to fade, to blend. They mix with fiction, with fantasy, and then torpor....\"\n\n\"Torpor?\"\n\n\"I suppose Julias would not have told you, as he has not done it himself, at least not for a real length of time. It is a sleep, a deep sleep full of dreams. When an elder such as I becomes ravenous, we must sleep before our hunger consumes us.\" She looked away. Was she ashamed? \"Decades of dreams. They bend and twist the mind. For some, the effects are... wicked.\" \n\nViktor. She was talking about Viktor. She had to be.\n\n\"A coma?\"\n\n\"Yes, in a fashion. It does fade the memory, and now... I cannot even remember my sire.\" She took a fingertip and ran it around the edges of a glass in front of her. Jack guessed the contents as blood; he recognized its consistency from Julias's.\n\n\"I am s... sorry.\" He dared the word, but he recoiled a little just in case she decided shred him for the offense. She did not.\n\n\"I am as well. Things are lost, including our history. I would trust only the Lancea et Sanctum to have any literature worthy of a historian's eye.\" Her eyes narrowed and she glared daggers into her glass. \"And I do not allow those zealots to practice in my city.\"\n\nThat was not a playful glare or a toying glare or a teasing glare. She was legitimately angry. The beast in him cowered in such close proximity, and an almost overpowering desire to flee rippled through his limbs. Even his eyes went wide, just glancing at her red eyes glaring at the table.\n\nWhen she turned to look at him though, her eyes softened. Apparently she saw that she scared him, and she made herself calm for him. At least, that's what it looked like, and that she made the effort made him smile.\n\n\"I remember almost nothing of my time as a youngling, little Ventrue. Who could I talk to about it? What fresh neonate would share their life story with me? As you said, I am lonely.\"\n\nJack had to stop for a moment and just look at her. She was so upfront. This ancient, almost mythical entity was asking him to share his life story? All because he didn't know when to keep his mouth shut?\n\n\"Have I said too much?\" she said.\n\n\"No! No I... well yes.\" She blinked at him, but he gave a shy grin at her. \"But I like that.\"\n\nShe laughed, outright laughed with a wholesome volume that he could feel through her leg.\n\n\"And I you, little Ventrue. Perhaps we can play a game?\" Her arm behind him drifted down a little, just enough for her claws to find his ear on the far side. He shivered with her touch.\n\n\"A game?\"\n\n\"Trading questions. I am sure you have many.\"\n\n\"I do, but... you'd really answer my questions?\"\n\n\"Indeed.\"\n\n\"Even personal ones?\"\n\n\"If you ask me, but be prepared to answer one just as personal.\" She gave him a wicked grin and licked her dark lips. This was a dangerous game.\n\n\"... I'll play.\"\n\n\"Wonderful.\" She leaned in nuzzled against his little body, just a tad, to the point her breasts were almost pressed to his suit jacket. \"You go first.\"\n\n\"Oh, wow um... uh....\" He was so very thankful his body wouldn't sprout random erections anymore. \"Why... is your hair white, and your eyes red? I haven't seen another Kindred with such unique features.\"\n\nThe hand on the table rose and ran through her hair, and she pulled a large portion of it onto her chest to rest between her breasts while she combed it.\n\n\"I honestly do not remember. Daniel believes it may be because I was one of the first members of the Ordo Dracul, and am perhaps linked to Dracula. The coils back then were new and untested.\"\n\n\"Dracula.\"\n\n\"Yes.\"\n\n\"The Dracula?\"\n\n\"Yes, butchered by fiction, but yes. I would... prefer to avoid the details, what little I remember.\"\n\nJack had to nod. That was fair. He had no idea what coils were, but that was probably stepping into the details realm.\n\n\"My turn.\" She tapped her chin thoughtfully. \"What was the first thing you thought, when you finally, truly realized you were now a vampire? That you were now a dead thing?\"\n\n\"Oh...\" He ran his fingers over his buzzed head. \"I, er... haven't even told Julias this. But I honestly thought... how the hell am I going to lose my virginity now.\"\n\nAntoinette stopped, completely stopped. She stared at him with bewilderment for almost ten full seconds before she cracked a smile, and then erupted into laughter.\n\n\"That is... that is so delightedly honest. You have no idea.\" She even gave him a hug. An actual hug, with her right arm hooked around his neck and pulling him to her side. \"Many Kindred lose their taste or interest in sex. The act of feeding replaces it. Daeva, such as myself though, are not so quick to forget the simple pleasures of the body.\"\n\nDangerous game indeed. He gulped from pure habitual reflex.\n\n\"Your turn.\"\n\n\"Oh! Right, um... wow this is hard. Uh... why did you ban the Lancea et Sanctum? I understand they're holders of a lot of our history?\"\n\n\"I have banned the practice because it is idiocy. They are self-deluding fools who convince themselves of all manner of lies and deceit to condone their actions and their hypocrisy. The Judges are disgusting, illogical, worthless tyrants. In God's name, they say. In God's name, over and over, to convince themselves of anything that fits their fancy, if they can bend the words enough to serve their bible. Longinus indeed!\"\n\nHe knew it'd be a hot button. Why'd he have to ask? He was sure he'd wet himself if his bladder still functioned, but all he could do was sit there and not move an inch. Jack was still in her half-embrace, and he was sure if he tried to move enough to at least break their touching legs, she'd shred him like an tiger.\n\nThe Daeva eventually calmed down, and Jack made mental note to be careful with the topic in the future. He'd thought it perhaps a political reason, but apparently it was not. She had removed them from the city for more personal reasons.\n\n\"We are better without them. Instead of looking to the past in some pointless attempt to embody dead ideals, we can look forward and embrace truth, logic, and intelligence.\" She gave Jack a long, quizzical look, and he turned away with her scrutiny. \"That was a dangerous question, little Ventrue. I am impressed.\"\n\n\"Th-thanks.\"\n\n\"Oh, did I frighten you?\" \n\nHe dared a glance, he had to. Like a moth to the flame, he raised his head to meet her eyes, and quickly lost himself in her red gaze. She was looking directly at him, into him even, and he could feel the beast in him grow silent with awe.\n\n\"Yes.\"\n\n\"Good. I would hate to see you grow dumb with your courage. Now, my turn.\" The Daeva tapped her chin a fingernail. \"Do you miss the things you've lost, since being embraced?\"\n\nJack sighed. He knew he didn't need the air, but the question was so powerful and something that had been on his mind all the time. How could it not?\n\n\"... My family thinks I'm dead. I was never that close with them, but now... now I miss them.\" He lowered his eyes but did not turn away. Julias's words came back to him with a sting. \"My friends think I'm dead. I miss them. I even miss that stupid job.\" He chuckled a bit, but it caught in his throat. \"I don't really miss the sun, or food, but... but sometimes I get hit with it, you know? I'll sit down and just... miss things. Random, stupid little things.\"\n\n\"Such as?\"\n\n\"The small things you never even think about. Shaving. Trying to beat the rush hour. Trying to pick which spice for your chicken. Worrying about vitamins. Exercising. Trying to find motivation to exercise. The security of a boring, predictable job.\" His voice grew soft. It never seemed like much, just thinking the things, but saying them out loud was different. He had to cough to stop the urge for a quiet whimper. \n\n\"The nuances of life.\" Antoinette's fingers found his buzzed head and traced along his crown.\n\n\"I guess, yeah.\" He went silent. His question had angered Antoinette, while hers had sent him into a spiral of depression. This was not the same night as last week.\n\n\"I am sorry, little Ventrue. I understand Julias embraced you to save your life.\"\n\n\"Yeah. I had been stabbed after leaving his place. I... it was a shock.\"\n\n\"You have handled the change well. Many soak in misery for months, even years.\"\n\n\"Julias has helped me a lot... so have you.\" He scratched at his buzzed hair, but tried to keep eye contact. He was rewarded when the Prince smiled at him. Such a lovely smile, when she wasn't playing a manipulative Daeva. He couldn't deny it was definitely in her nature, but if he said just the right thing, she rewarded him with something genuine.\n\n\"You are most welcome. Also, your turn.\"\n\n\"Oh, right. Hmm.\" The conversation had grown very serious, but empowering. They had asked each other meaningful questions and gotten meaningful answers. What else could he ask? \"Do Kindred ever have relationships?\"\n\nYeap. If he was going to get himself killed, it'd be in a bad attempt at flirting with the Prince of Dolareido, and an insanely powerful Kindred to boot.\n\n\"Oh! Are you not full of big surprises, little Ventrue.\" She ran her fingers upside the temple of his head opposite to her. \"I suppose you mean a romantic relationship with another Kindred?\" He managed a small nod. \"Yes, we do. The last I had was with Tony, my childe. A sad story that ended when he ceased being my pupil decades ago, and left the Ordo Dracul.\"\n\nHe remembered Tony. He'd seen him at a distance once, at the Elysium. He shivered. The man was terrifying. If Viktor was the bull he had to avoid, Tony was the serpent.\n\n\"He is not the man he once was. He despises me now, but I suppose that is true of many scorned lovers. I leave him as a Primogen though, so I may hear the voices of his worthless, directionless lot.\"\n\n\"You let him have such power?\" She had banned the Lancea et Sanctum after all, why not this thug?\n\n\"Yes. I disagree with him, his methods, but he is not a mindless fool incapable of adaptation or logic. His council is valuable.\"\n\nThe Danse Macabre. She would keep this man she once laid with, this man she no longer loved, and who despised her in return, as council purely for the information it gave her. Jack had to wonder how many ancient Kindred had weaved such interesting webs between them.\n\n\"If questions are going to get this personal, well then.\" She leaned in again, and with her hand on the other side of his head, hooked some of her fingers around his jaw to guide his face to look up to her. His heart would have stopped were it beating as she put her nose to his \"Would you like to kiss me?\"\n\nOh sweet mother of god.\n\n\"I... er -- uh, um... uh....\"\n\n\"I assume that is why you asked, no?\" She leaned in closer, but you can't get much closer than touching noses. Her lips were literally only an inch from his, and if he moved there was a good chance he'd accidentally kiss her.\n\n\"Well... I mean....\" He tried to move away, but her grip was immovable; he couldn't even turn his head. She put her other hand on his leg, and simply stared into his eyes like a hungry snake. The Daeva side of her was coming out to play.\n\n\"There is no one here but us, little Ventrue.\" She raised her head just a touch, then lowered it, so her nose nudged playfully against his.\n\nToo fast. It was all happening too fast. The gorgeous woman nudged her nose against his so lightly, again and again, just so the tip grazed his. It was so close. Her red eyes were so fucking beautiful. It was all so fucking beautiful. Her long white hair pulled over her shoulder and down in front of her, and she raised her hand from his leg to comb it with her fingers in a blatantly seductive way.\n\nHe really wanted to kiss her, but she was a god. She was just toying with him, she had to be.\n\n\"Please, I... it's....\"\n\n\"You can say no, if you want. I will not hurt you. But I am no fool. I can see where your eyes slide.\" The hand holding his head toward her tickled his jawline. \"If I wanted to, I could break your will with a discipline, Jack. I could twist and corrupt your mind so that you would care for me and only me.\" She leaned in just a little closer, so her forehead grazed his, and her red eyes were practically glowing. \"But I have not and will not. You came here tonight of your own desire, and... I appreciate that. More than you know.\"\n\nEverything froze.\n\nAntoinette had stopped moving. She was just looking at him, smiling at him, waiting and watching. Those sultry eyes of hers looked into him until he could feel the ancient, colossal power of the vixen. She wasn't using her power on him; the doubt in his mind about the insanity of it all proved it. But that didn't mean she wasn't a woman. A deadly, scary, godly powerful, seductive, ancient undead woman.\n\n\"I... I don't want to...ruin....\"\n\n\"If you spend your whole unlife waiting for good things to happen, little Ventrue, you are in for a long wait.\" With a playful smile, she turned her head left and right so their noses lightly rubbed together. Eskimo kisses. \"You need to make them happen.\"\n\nFuck, Julias had said the same thing to him, the same damn thing. Jack was always waiting, always playing it safe, always aiming for the easy goals with no risk. Methodical, and boring. That was then though, and that old life was gone. Gone! He was a different person now, a different creature in a different world. If there was any time to change....\n\nHe half-closed his eyes, and leaned in just a single inch, but it was enough. His lips found the Prince's, and she gave the smallest smile into his own before she too leaned in. She only half-closed her eyes as well, and they looked at each other while their lips met.\n\nGod her lips were so soft.\n\n\"Thank you, Jack,\" she said, barely breaking the kiss but able to speak with perfect enunciation. \"It has been... so very long since a Kindred has kissed me.\" Before he could respond, she'd already leaned back into the kiss and took control.\n\nHe held still, and let the crazy situation take him. The most powerful being in his wildest dreams was kissing him, her dark lips nudging into his, her tongue sneaking out just long enough to give a little lick. For a second, he pictured a snake tasting the air of him, but then she lowered her lips, and lightly plucked at his lower lip before pulling away.\n\nShe laughed then, pulled away, and combed her long hair over her shoulder with one hand while the other tickled along his jaw. The jaw had dropped by that point, and he found himself unable to lift it until she did it for him. He couldn't stop staring at her.\n\n\"Mister Terry,\" she said, and put a finger to his lips, \"I do hope to see you again. Would you like that?\" "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "vampire",
        "vampire romance",
        "supernatural romance",
        "blood",
        "violence",
        "seduction",
        "vampire sex",
        "vampire novella",
        "vampire drama",
        "sex"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-ch-06"
}