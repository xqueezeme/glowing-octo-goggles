{
    "title": "An Afternoon With Denise Ch. 02",
    "pages": [
        "\u201cYou know, I just realized I\u2019m out of baby oil\u201d the voice on the other end of the phone said matter-of-factly, as if this were the middle of a conversation and not the first sentence out of the phone.\n\n\u201cWhat? Who is this?\u201d I sputtered to the strangely familiar voice.\n\n\u201cBaby oil, you know lover, its clear and slippery,\u201d she giggled, and then I recognized Denise.\n\n\u201cJesus, warn a guy before you do that\u201d I said, glancing awkwardly at the student sitting in my office who had been discussing his academic future.  My uncharacteristic response drew his attention, so I carefully chose my words from then on.\n\n\u201cSo when can you drop that by?\u201d she continued after a pause, clearly relishing my discomfort.\n\nI glanced at the calendar on my desk blotter, \u201cuh, Wednesday afternoon?\u201d I offered, my loins tingling at the memory of our first rendezvous last week.\n\n\u201cNo, too risky,\u201d she said, \u201cIt\u2019s gotta be a morning.\u201d\n\nShit, I thought.  \u201cOk, how about Friday around 9:00,\u201d I responded, \u201cbut I work out early and then I\u2019ll need to go home to clean up.\u201d\n\nAfter a pause she said, \u201cNo, you won\u2019t.  Just bring a change of clothes with you.  We\u2019ll take care of you here,\u201d she added.\n\n\u201cOk then.  Friday it is,\u201d  I offered finally, trying to return my attention to my student.\n\n\u201cPerfect\u201d she cooed, extending the \u2018r\u2019 into a purr.  \u201cFriday is Brian\u2019s root canal day\u201d she laughed.  \u201cYou are up for a root canal, aren\u2019t you\u201d she asked, posing the absurd question as a double entendre.\n\n\u201cOf course, Darling\u201d I said. \u201cWe all need to take care of our teeth\u201d I continued, knowing that my student wouldn\u2019t know the difference between my wife and my affair.\n\n\u201cI\u2019m partial to the unscented kind.  Friday then, \u201d she finished, as if she had just made a tennis date rather than an appointment for hours of screwing, and then hung up as abruptly as she had begun.\n\nI finished the conference with my student, only barely paying attention to what he was saying.  Baby oil?  This will be interesting.  The hard part will be waiting all week until Friday, I thought, but what a way to begin a Monday.  Denise turned out to have some kinks that I don\u2019t think even she was aware of until last week, and I could only guess how far we could take them.  Time would tell.\n\nFriday finally arrived, a clear day but cold as hell for late fall.  I went to the gym as I usually do, spending 45 minutes on a recumbent bike and another 30 doing a light workout on the weight machine.  Since I never use the locker and shower facilities, always preferring to shower at home, showing up in my shorts and a sweatshirt was normal.  But not going home afterward felt odd as I trotted to my car in my workout clothes, wet-sweated from my exertions.  \n\nI parked a block away from her house and walked a roundabout path to her door, the large bottle of baby oil conspicuously heavy in the breast pocket of the leather jacket I threw over my sweatshirt, my change of clothes swinging in a bag at my side.  \n\nDenise answered the door in an ankle-length, maroon terrycloth robe with her hair pulled into a ponytail behind her head.  Her eyes were electric and animated.  Pulling me inside, she kissed me long and full as she reached under my jacket to encircle my waist with her arms, not wasting time at coquettish seduction after last week when we had thoroughly broken the ice.  I don\u2019t believe she was wearing anything under the robe.  Her boobs felt bare and firm and her nipples stabbed my chest through the bulky cloth of the robe.  Her ass as well seemed panty-less under the terrycloth as I kneaded her exquisite backside.\n\nShe palmed my nascent erection through the thin material of my nylon shorts.  Then she dragged her fingernails up my bare thigh and slipped her fingers under my shorts to tickle my balls through the sweat-soaked briefs, pulled tight against my body from the cold weather.  I thought my locker-room ambience would deter her until I cleaned up.  I was wrong. \n\n\u201cMiss me?\u201d she asked.\n\n\u201cWhat\u2019s not to miss,\u201d I responded as I managed to kiss her once more as she pulled away, my lips left kissing the air.\n\n\u201cMake yourself at home \u2018till I\u2019m ready,\u201d she teased. \u201c I won\u2019t be long.\u201d\n\nI removed my jacket and hung it on an antique oak coat rack, the sole interesting piece of furniture in the front room.  Then I sat on the couch and surveyed the sterile d\u00e9cor of a short and narrow living room.  A taupe couch, matching chair and a coffee table were the only furniture, while a floor to ceiling, wall to wall mirror at the room\u2019s end enhanced the sense of space in the undersized living room, and that curiously was blocked by the ill-positioned chair in front of it.  In an area remarkably free of knick-knacks, only a ceramic candy dish sat on the table.  Remembering from last week the chain on the front door, I entertained a surge of paranoia and for a small sense of security arose to slip it into the notch.  I was glad the house was warm, as I was chilled in my wet clothes.\n\nShe was right, she didn\u2019t take long to return.  My jaw dropped when she slipped quietly into the doorway, wearing a fluffy, long sleeved sweater and translucent patterned panties.  Both were white, and the panties barely peaked out of the base of her fluffy, oversized sweater.  Her hair now freely spilled over her shoulders.  \n\nThe style of her panties was new to me I realized as she spun once runway-model style, boldly holding up the hem of her sweater to give me a clear view of them.  Their flat, straight, low-slung waist barely covered the top of her trimmed pubic hair or the start of her crack at the base of her spine.  Viewed from the back they were an enticing frame for her luscious ass, as they left bare and accentuated the bottom roundness of her cheeks as they tightly hugged her form, digging deeply into her tender fissure from front to back as if they were body paint and not clothing.  Boy shorts they are called, and they highlighted her stunning rear assets with their semi-transparent lace that more than alluded to what they scarcely concealed.  White open-toe sandals with a short narrow heel rounded out her outfit and added to her height by emphasizing the long and luscious stretch of smooth, bare legs in between.  My cock packed stiff with blood as she made her way to the couch. \n\nMounting me as if she was throwing a leg over the saddle of a horse, she came to rest on my lap, facing me and straddling my thighs.  Her muscular legs pushed mine together, uncomfortably squishing my balls, with her ass neatly balanced on my knees.\n\n\u201cYou like?\u201d she asked as she ran a finger in a circle in the whorls of my left ear, giving me goose-flesh.  She then gently kissed both of my eyelids.  Her sweater smelled faintly of perfume, but a musky hint of arousal hung around her, as if she had been pleasuring herself before I arrived.  I massaged her backside and stroked my fingers up and down the splayed fissure of her ass, the fabric of her panties so thin and form-fitting that I could feel the contour of her puckered dimple and considered violating their flimsy veneer with a well placed stab of my finger.  The crotch was already damp and clinging to her swelling pussy. \n\nAs I stroked her split she started to breathe deeply and closed her eyes to get her bearings as she began to lose herself in the sensation.  She asserted control and took my hands in hers, holding them momentarily to her face to kiss them, and then our fingers interlaced as she kissed me intensely as her tongue flicked deeply into my mouth, suggestively fencing with mine.  She finally let go of my hands and cradled my face in her hands.\n\n\u201cOne thing,\u201d she said out of the blue, the phrase hanging in the air in need of a complete sentence. \n\n\u201cYes?\u201d I responded, not exactly knowing what she was going to say as her hand absent-mindedly traced circles on my chest.\n\n\u201cOk,\u201d she smiled, pausing for a moment with her eyes scanning the room as the tip of her tongue perched on her upper teeth. \u201cI want to fuck you in every room of the house\u201d she burst out laughing.\n\n\u201cToday?\u201d I asked seriously, aware of two late day meetings that I could not miss.\n\n\u201cNo silly, eventually.  But let\u2019s say today\u2019s living room day,\u201d she announced with mock seriousness.  \u201cIt\u2019s got a nice mirror,\u201d she continued, her eyes still surveying the room, \u201cbut not much else.  I never really do anything in here\u201d she giggled, \u201cso I\u2019ll do you.\u201d  \n\nAs she returned her eyes to gaze at me she reached aside and under her and through the crotch of her panties, returning with her middle finger soaked with her clear juices.  She dabbed a viscous finger on my mouth as if she was applying lip gloss, the clean scent of her pussy rising like a drug to my brain.  She eagerly kissed and sucked her sap off of my lips, ending with a playful bite. \n\n\u201cOk?\u201d she concluded assertively, with a question needing no answer.\n\nShe backed off of the couch and went to the coffee table.  Turning away from me and bending over, which further dug the material of her panties into her crevasse, she picked up a pink lozenge from the candy dish.  She turned and offered it to me, sliding it along my lips.  I tried to take it with just my lips, but she only wanted to tease me with it, and after I had wet it with the tip of my tongue she withdrew it.  Straightening and planting a foot on the couch, posed to display for me the outline of her pussy under the material, she inserted two fingers sideways into the crotch of her panties and, closing her eyes, appeared to part her lips and maneuver the candy into her damp gash.  She then inhaled her scent and licked her fingers clean as I stared dumbfounded.\n\n\u201cI really hope you like raspberry,\u201d she smiled, her breath growing huskier as she curled cat-like next to me on the couch, with both of her legs draped over mine.  As I leaned into her for a kiss, she crossed one leg far over the other and rotated her torso onto her side, doing her best to point her ass into the air and slightly away from me.  She breathed more heavily as her hand lazily meandered up and down the channel of her own rear.\n\nFinishing her little show, she again slipped her hand into her panties and removed it.  She put her fingers into her mouth and savored her taste, as much as she relished the look of raw lust in my reaction.  After sucking on them she dragged them roughly over my lips, wet and pungent with her scent, tinged with the faintest aroma of fruit, and then leaned in to kiss me.  I fondled her breasts as we kissed, feeling her nipples hard beneath the sweater, first teasing them gently with my thumbs, and then harder as her passion rose with each kiss.  She moaned softly and ground one knee into my crotch as she reached under my sweatshirt.  No longer sensing she wanted tenderness, I firmly twisted her nipples through the sweater and more forcefully massaged her breasts.\n\nAfter she pulled off in one motion my sweatshirt and tee-shirt, she lowered her head to lick my nipples, now nearly dried, first gently, but soon she was enthusiastically sucking and licking them, her low moaning reminiscent of a cat purring.  \u201cYou did work out today,\u201d she said as she inhaled deeply from my chest and ran her hands through the triangle of hair in the center.  Her head now bent further, I held it there with my fingers entwined in her hair and stopped her attempt to rise and kiss me.  She read my intent, and pulling her knee out of my crotch she teasingly licked her way down to my navel, essentially French kissing it over and over.\n\nSlipping a hand between my shorts and briefs, she combed her fingers through my wet pubic hair and freed my rigid cock so that it stood straight.  \u201cHello\u201d she softly spoke, as if she were speaking only to herself.  \n\nShe licked the head, first cleaning the slick precum from the tip, and then circling and swishing her tongue around the head, her saliva freely bathing my shaft.  She asked me to stand as she kneeled on the floor in front of me as if she were about to meditate.\n\n\u201cMmm, you taste salty,\u201d  she announced.  \u201cAnd I really want to suck your cock\u201d she added coarsely, her eyes dilating as she pulled down my shorts and briefs to my ankles.  \u201cSit back now and get sucked,\u201d she continued, and proceeded to remove my sneakers and socks.  \n\nShe bent prostrate to the floor and kissed the tops of my toes, dipping the tip of her tongue between each to bathe me with her saliva, purring and breathing heavily through her nose, apparently relishing the ambience from my workout.\n\nShe pushed my legs far apart and kissed and nibbled her way up the insides of my thighs to my knees and then more slowly to my balls and the base of my member, now perceptibly throbbing in time with my heartbeat.  Placing her hands behind my knees, she pushed my legs up onto the couch and then tried to pull me forward to better service my exposed balls.\n\nGlancing at the mirror, I suddenly felt inspired.  \u201cWait,\u201d I stopped her.  \u201cI want to watch your ass in the mirror while you suck me.\u201d\n\nSmiling and cocking an eyebrow, she stood and pulled me up standing, kissing me with one hand behind my head as she dug the fingers of her other hand into the walls of my crack, still wet from over an hour of exercise.  We repositioned the large chair to about five feet from the mirror but now facing it.   I sat, drew my legs up and draped them over the padded arms.  From our last rendezvous I knew what she wanted and sliding forward brought my bare asshole and balls to the very edge of the chair.   She again kneeled in front of me and bowed slightly as she spread her legs to give me a fantastic reflection of her bottom in the mirror.  She slowly wiggled her hips and drank in my reaction with a grin.  Her eyes darted back and forth from mine to my crotch as she tickled with her fingers my sweaty balls and ass. \n\n\u201cI\u2019m glad you like my butt,\u201d she said with a twinkle in her eye as she brought her hand between her legs to touch her pussy and continued to undulate her hips.  \u201cHow can you tell I really like yours\u201d she asked, before I could respond to her first statement.  \n\n\u201cLick my ass before you suck me\u201d I demanded in a guttural voice as I pulled her head toward my crotch, \u201cyou know that\u2019s what you want.\u201d  \n\nA barely audible \u201cYes I do\u201d was all I heard as she first drank deeply of my scent and then began to kiss and suck the loose skin behind my balls while her hand continued to taunt her own sex through the crotch of her panties.  Her purr became more pronounced and higher in pitch as she nuzzled my asshole and first covered it with light kisses, her nose planted between my balls.  Soon her kisses became wet and frenzied as she slurped my back door with the deft sensuality she had used on my mouth, rimming me in a circle and then plunging her tongue home, dipping in and out of me for one dark kiss after another.  \n\nShe began to pine softly like a young girl, her voice still pitched high and needy as she was obviously consumed with what she was doing.  \u201cNeecie is a dirty girl\u201d she finally said in an odd sort of little girl voice, her tongue continuing to service me all the while.  \u201cThis is all I could think about all week\u201d she then added in her normal voice, \u201cI about wore out my fingers thinking about it.  Brian was asleep, and there I was in the shower, frigging my ass with shower gel.\u201d\n \n\u201cYou like being my little slut, don\u2019t you babe,\u201d I added as I took one hand and clenching her hair, forcefully held her face in my crack.  She continued to circle the ring of my anus and stab her tongue as far as she could reach into my murky tunnel.  I started flexing my ass muscle around her tongue, which only served to encourage her to go deeper, as if I were trying to deny her my depth, and she was not to be denied as she scraped her nails over my thighs for emphasis.\n\nI released the pressure on the back of her head, and as she licked her way up my balls and my cock, her tongue finishing like a minute paint brush, she tilted her head downward and took two thirds of my throbbing member into the moist warmth of her mouth.  Sacrificing the hand that was stroking her pussy, she encircled my cock at the base with her index finger and thumb and consumed all of me that she could fit, gagging slightly on every third stroke as the head thrust into the back of her throat, her tongue wiggling to add to the sensations I felt.  I sensed a familiar tingle behind my balls as she slipped a finger into my ass and began to match the rhythm of her finger to that of her mouth.  \n\n\u201cPull off your panties\u201d I said to her huskily, and she quickly pulled them down to her knees and returned to sucking me.  \u201cNo\u201d I said, \u201ctake them off and give them to me.\u201d\n\nShe slipped them off and proceeded to arch her back and spread wide her legs for me.  The image I saw in the mirror was breathtaking.  A stunning ass bare of even a wisp of hair in the crack framed a tiny tan and pink dimple without the slightest hint of a gap, sloping into her scrupulously trimmed pussy, visibly swollen but with the lips still tight.  She gave me her panties with a look of need and curiosity. A pink circle stained the damp crotch from the dissolved lozenge.  I hung them like a ring toy around the base of my cock.\n\nAware that my first orgasm was soon not to be denied, I stopped her and sat up with my knees folded on either arm of the chair and my ass spread between, creating a space below for Denise\u2019s hungry mouth.  Needing no prompting, she turned to face the mirror and leaning back slipped her head into the space, burying her tongue in my puckered hole even before I lowered myself onto her face, reveling in the musky fluids of my crack while I gingerly stroked my cock, now primed to explode with the image of this gorgeous woman in heels and a sweater, her pussy bare and her head obscenely lodged between the chair and my nether region, her panties now draped over my balls and dangling down to her chin.  \n\nNow the only question was where to cum.  Ever the gentleman, I asked her.  She pulled her head from under me and panted, \u201cin my mouth, where else.\u201d\n\n\u201cHold it open for me\u201d I demanded, politeness giving way to need.  \u201cWider my little tart\u201d I added as she tilted her lovely head back even further, her eyes heavy lidded and surveying my meat, looking at me upside-down, her tongue flicking about snake-like as if searching the air for the impending gush of cream.  I admired the graceful slope of her neck that descended to her covered breasts.  \u201cTake off your sweater\u201d I panted, feeling the surge of cum about to erupt.\n\nThe scene was erotically perfect as I gazed from the woman to her mirror image, from mouth to boobs to pussy, now wearing only her heels, just waiting for me to shower her nude body.  \u201cOpen those luscious lips\u201d I again panted, as she had closed them after removing her sweater.  She wet her them with her tongue and parted them to receive my spunk, her hands lightly playing across her breasts to tease her nipples.\n\nIt was all I could take.  I opened up with three thick streams, followed by an endless dribble and a paragraph of undecipherable groaning.  The first shot laid a solid ribbon of cum across her face, lips and chin, down her neck and between her heaving breasts.  I remember thinking that I hadn\u2019t shot such a long wad of cum since my twenties.  The second briefly spun in the air like a creamy bolo before landing on her lower lip and chin, partly running down her neck.  For the last I consciously aimed downward.  Like a squirted projectile it found its way directly to her gag reflex, causing her to wretch and swallow and tilt forward her head.   Then the endless dribble spattered throughout her hair, the little pearls of cum nestled in her red curls.\n\nShe quickly regained her composure and apologized, tilting her head back to take me in her mouth.  The position was not conducive to deep-throating me, so she turned to engulf me.  She sucked with her whole throat, mouth and tongue, not just with her lips, the suction constant as she swirled saliva around my member, one of her hands still stroking her moist slit.  ",
        "\u201cNow it\u2019s your turn babe\u201d I said after lolling in her mouth until I grew flaccid, \u201cwhatever did you do with that oil?\u201d\n\nShe moaned with my cock still in her mouth.  Removing it, she jumped up and ran from the room, only to return in an instant with the oil, warm after soaking in a pan of water on her stove.  \u201cYour oil sir\u201d she said in mock obedience, presenting it to me as she kneeled between my legs.  \n\nI smiled at her, her face, neck and breasts still slashed vertically with my semen, while a dollop of the sticky sauce dangled from her chin.  \u201cWe\u2019ve gotta get you cleaned up\u201d I said, but didn\u2019t foresee her reaction to my observation.  She turned to the mirror and smiled when she saw her cum-soaked face and chest.  Taking two fingers, she scooped my seed first from her chin first, and then rubbed the rest into her breasts, scraping the excess cum onto her tongue. \n\n\u201cI must be a vampire\u201d she observed, \u201cI like it  better warm.  So you need to practice aiming that thing\u201d she added with a grin.\n\nI pulled her face to mine and kissed her, relishing the sense of us both on her lips and mouth.  Hauling her to her feet I backed her against the mirror and pinned her hands over her head.  Slowly, one palm-full of oil at a time, I proceeded to lubricate the front of her body from the tips of her fingers to the bottoms of her feet.  I massaged her skin in slow circles, my fingers working themselves into her arm muscles and imparting a healthy glow to her alabaster skin, augmented by the shiny oil.  I kissed her smooth armpits before rubbing them with oil, this generating a moan of appreciation.\n\nHer breasts created the biggest stir when I teased them with the tips of my fingers as I kissed her, muffling the sounds of pleasure coming from the back of her throat.  When I finally got around to kissing her nipples, she was twisting her hips into mine and throwing a leg around my body to drag me into full contact with her, an overture that I resisted with difficulty.  It wasn\u2019t easy to resist rubbing my body over her oiled tits, as her desire rekindled my own and began to stoke another erection.  Last, I scraped my nails circularly around her petite areola, causing her to writhe and thrust her torso into the sensation.\n\nI kneeled and worked the oil into her belly, flicking my tongue in and out of her navel as I continued toward the goal of burnishing slick her entire body.  Allowing her to lower her arms, I instructed her to stand with her legs spread and her labia parted with the fingers of one hand in an inverted \u2018V\u2019, her ass resting against the mirror behind her and the other still over her head.  She looked so hot like that.  Determined to drive her to distraction I dropped to the carpet and coated her toes and feet with the oil which ran down onto the leather of her heels.\n\n\u201cPlease stop teasing me\u201d she pleaded.  Her reward for her complaint was having the skin between her toes licked.  Her body started to quiver, and I looked up to see her rubbing her swollen clit for relief.  \n\n\u201cStop that and hold that little gash open for me\u201d I said, and she closed her eyes and rolled her head from side to side as her fingers reluctantly returned to their original position.  I massaged her leg muscles, working my way up first one and then the other, finally ending at her pussy.  Her slit was literally foamy with her juices, and little bubbles nestled like pearls the entire length of the opening, leading to the swollen nub of her clit that now was distended through the parted hood, all framed in a short-trimmed bush.  I licked  up and down the inverted \u2018V\u2019 of her fingers, my tongue so close to her clit that she could feel my breath as I taunted her.\n\nPulling her hand from her muff I had her squat even more, in a position that was somewhere between a ballet dancer and a stripper.   I poured oil over both of her hands and told her that I wanted to watch her lubricate the skin between her thighs and her pussy, but not her pussy.  That was off limits.\n\n\u201cYou are a fucking tease\u201d she fired back through clenched teeth as she complied with my demand and roughly rubbed down her inner thighs, pulling at the skin leading to her mound.  \u201cPlease fuck me, fuck me, fuck me\u201d she said over and over as she visibly began to shake from frustration, drawing her breath in short pants.\n\nWhen I rose and kissed her she slammed into my mouth so hard that I tasted blood from my teeth being driven into my lips, as she was intent on devouring my tongue and lips as her arms circled behind me.  Her oiled fingers clawed into my crack, one finger slipping roughly into my ass as an anchor, motivating me to continue her torture.  She fingered me, forcefully kissing me through the quick and ragged breaths and sliding her well oiled stomach across my inflamed and aching rod, her ass sliding left to right on the mirror like a windshield wiper.\n\nPulling away I told her to face the mirror with her hands over her head and her legs spread, with her ass pushed out and back arched.  \u201cGive me your best \u2018please ass fuck me\u2019 pose\u201d  I said.  \n\nShe whined in an exasperated tone and complied, assuming from her position that relief was soon coming.  She was wrong, but what a sight she was to behold.  \u201cDarling, just imagine me ramming into the back of your cunt in this position,\u201d I taunted.  She reacted to my words in an unexpected and initially confusing manner.  As she spun she assumed the pose I requested and to punctuate her turn, before her hands went above her head, she reached around and slapped her own ass with a sharp crack, the oil on her hand adding to the smacking sound, leaving a red handprint on her right cheek.\n\nOnly a fool wouldn\u2019t have made a mental note of it as I proceeded to lick the backs of her ears, and then to circle my tongue inwardly in each ear, eventually planting the wet tip in the center as I reached down to tickle the finely groomed hairs of her muff that survived the razor.  She whined hungrily, and her hips began to take on a life of their own as I teased her by stroking my cock up and down her crack.  She began to pant and visibly flex her ass and pussy muscles, as if she could spontaneously will herself to climax or somehow grab my dick and consume it.\n\nAfter kissing her neck and admiring the spasms of her derriere, I rubbed oil into her back, frequently reaching around her to tease her nipples.  Each time I brushed a finger across them, her body shuddered.\n\nI kissed the length of her spine, one kiss for each disc, from her neck to the beginning of her ass crack, now parted submissively with her legs so spread they seemed to be at right angles to each other, her back arched almost into a dancer\u2019s bow with the muscles of her inner thighs pulled tight.  Blowing air the length of her crevasse I continued to build the momentum.  My hands went to her ankles to begin the slow climb to her ass, and as I passed her knees I finally noticed the trickle of sap running freely down her legs, still lightly tinted pink from the raspberry lozenge long ago melted.  \n\nGiving in to my own desires, I licked my way up the insides of her thighs and sampled the raspberry juice that streamed from her longing.  She arched her back still further and spread herself even wider for me, reaching around both hands to split her ass cheeks in anticipation of my tongue, roughly digging her fingers into her soft flesh.  Her tiny ass hole, though petite as ever, was now slightly pushed out and showed the faintest sliver of darkness at the center, no doubt from her excitement, the relaxation of her sphincter and her roughly stretched backside.  I resisted the urge to stab her with my tongue as I was not finished enjoying her most delightful body and wanted to save attending to her tender backside until the last possible moment.\n\nI drenched in oil her hands as they held her ass and told her to rub it into her cheeks.  Now resting the side of her face on the mirror she did so with eyes closed, struggling to avoid her most tender parts, knowing that I didn\u2019t want her fingering herself now, while pleasurable little noises came at the beginning of each breath.  I rose and sat on the chair to watch her knead her butt and rub into it the warm oil.  \n\n\u201cCome here lover\u201d I said, and her body toppled the short distance between the mirror and the chair.  She moved to sit in my lap, and I repositioned her to lie face down across the chair with her derriere so close to my face that I could see minuscule beads of oil that clung to her tiniest hairs.  Her backside in all of its glory lay before me, her back arched to push closer to me her backside, primed and lubricated, her scent wafting upward to fuel my own burning desire from that shapely, muscled tail.  Last week I resisted taking her in the ass when she was spent from exertion.  Today I would plumb those depths. \n\nI rubbed oil into her pussy, and she parted her legs in response.  She keened pleasurably and encouraged me to continue, no doubt fearing that as before I would prolong this pleasurable torture, cruelly refusing to bring her to a climax.  But from my down-turned hand I curled two fingers, parting with them the fleshy curtains of her enlarged labia.  In a high whine she began to pant uncontrollably when I curled my fingers to massage the little knot of muscle and nerve behind her pubic bone, my thumb on her clit, as she spread her legs still more and tried to back her needy hole onto my fingers.  The top joint of the middle finger of my other hand I slipped just inside her sphincter, now glistening with oil.  As I vibrated my fingers rapidly on her G-spot she quivered and flailed about.  Her ass bucked as she came in a fountain that soaked the chair cushion under me as it trickled down my wrist, thighs, and not just once, but several times.\n\n\u201cAre you sure that you want to do this here\u201d I asked, \u201cthis is really messing up your chair\u201d I continued.\n\n\u201cFuck the god-damned chair\u201d she eventually swore when she gained control, fighting for breath as she rode my fingers like a carnival ride, \u201cI\u2019ve never cum that hard in my life.\u201d\n\nI laughed and smacked her ass with a resounding snap.  She moaned with a deep satisfaction, so much so that she rose on her arms to crush her lips to mine, whispering under her breath and in my mouth, mid-kiss with her eyes closed, \u201cdon\u2019t stop. . . that.\u201d\n\n\n\u201cSo you like your taut ass slapped, don\u2019t you\u201d I teased as I smacked it hard again, \u201cTell me what she likes.\u201d\n\nShe couldn\u2019t say it at first, instead taking my hand and placing it in the location where I first had spanked her.  Refusing to scratch her newly found itch, I pulled my fingers from her aching pussy and dabbed them lightly across her buttocks and down her thighs to the backs of her knees.  She squirmed under my tepid attention and slowly built up her courage to utter what seemed embarrassing for her to admit.\n\nTurning her head toward me with eyes defiant, the words seemingly wrenched from deep within her, she asked me,  \u201cPlease smack my ass.\u201d\n\nI leaned forward and planted a kiss on each oily cheek and then filled my palm with more of the greasy stuff, rubbing it profusely into the crack of her ass and her pussy.  My middle finger I slipped deeply into her little tailpipe in one long stroke, passing easily the first tight ring of muscle, and feeling the grip of each succeeding ring.  Removing my finger, I inserted the tiny plastic nozzle on the bottle directly into her gap and squeezed a flood of warm fluid into her chute.\n\n\u201cOh my god, what are you doing to me\u201d she muttered breathlessly, running oily fingers through her cum-spattered hair.  \n\nI reinserted my finger to find her chute virtually sopping.  Stroking her hole in a circular fashion by rotating my finger, I stretched the muscles ringing her tunnel.  I removed my finger to allow my other wrist to drape along her crack, so as to dip my fingers down to tease the nub of her clit.  She quickly built to another orgasm, the pitch of her moaning heightening as her climax neared.  When I felt it about to break as her body tensed, I lazily gave her five sharp cracks with a slight pause in between, each loudly resounding in the room and hanging in the air long enough for the next to take its place, the fingers of my other hand toying with her clit like a little pleasure knob.\n\nShe bit into the arm of the chair and screamed, the orgasm washing over her body as she lost control, her whole frame heaving to the sensations as they crashed over her, juices again bubbling out of her pussy and onto my crotch below, soaking into the seat of the cushion.  I found myself wetter than I was after my earlier workout.  She was as ready as she ever would be to give me her ass.\n\nI turned her in my lap and pulled her up to kiss me.  Her eyes seemed to peer right through me as we kissed, a mixed look of exhaustion, contentment and arousal on her face, the skin of which glowed from her exertions.\n\nDragging us both to our feet, I pulled the chair closer to the mirror and turned it sideways, so close that her feet could rest flat on the surface.  I had her kneel with her torso laying flat on the pillow wet from her orgasms, her boobs smashed into the soaked cushions.  \u201cI\u2019m going to let you pace this my darling, as your back door is so very small. Now, raise that little tail end and take my cock.\u201d \n\nTaking my member in my hand I positioned it just behind her pussy and, holding it there with one hand, rubbed it up and down through the furrow of her labia and then over her little dimple.  I pulled her torso gently back onto the head, eventually sliding myself almost fully into her pussy.  Out to the entrance and then back in to bottom out in her cunt, I slowly increased my speed and intensity so that I was soon fucking her, our hips slapping into each other as I gave it to her hard from the rear, my cock pistoning in and out of her pussy.\n\nShe was a joy to screw.  She swore richly, driving me to \u201cfuck my little cunt\u201d and a host of other comments that meshed with each other without rhyme or reason.  When she closed on another orgasm I slowed and eventually came to a stop, sitting idle to let her feel my full warmth and length, pulsing my cock muscles to swell my head over and over again.  When she reached under herself to diddle her clit I slapped her ass and forbade it and I removed her hand.  Finally it was time to take what I had been dreaming of for days if not weeks.\n\n\u201cNeecie\u2019s going to get it up the ass now.  Feel my cock?  That will be in your ass soon\u201d I said, waiting for a response that eventually came in the form of an action.  She reached behind her and pulled apart her cheeks for me.  \u201cDon\u2019t bother asking me to stop after we get started.  Now bite on these\u201d I said as I handed her panties to her, long ago removed.  I found them underneath me after I rose from the chair.  They were soaked with her juices, so much so that liquid would have dripped out had they been wrung out.  She put took them in her mouth with a moan and then returned her hand to holding open her ass.\n\nI eyed her hole and slipped my head easily through the tiny muscle of her back door, which made a slurping sound as it was penetrated.\n\nShe wailed, \u201coh my god no\u201d and tried to pull up and off of me, virtually in tears.  \u201cYou\u2019re too big; I\u2019m too little.  No.  Just fuck me.  Oh just fuck me\u201d she said as she struggled to reach the site of her discomfort and try to rub away the pain in her stretched exit.\n\n\u201cNo way Babe\u201d I said firmly, and added with a vulgar, \u201cIt\u2019s time for Neecie\u2019s own little fudge pack\u201d as I slapped her ass hard.\n\nI slid further into her and then backed out again to hover just inside of her sphincter, and again she wailed and pleaded for me to stop:  \u201cIt feels like you\u2019ve stuck your whole hand in me, oh god, please.  You are too fucking big.  I\u2019ll do anything you want.\u201d\n\n\u201cI have what I want, and so do you\u201d I said, slapping her ass again.  I braced my legs so that she could not move hers, essentially trapping her in her bent position.  On a whim, I reached forward and, taking her panties, stretched them out and slipped them into her mouth like a yoke, and with one hand on each side pulled them tight and back so that she was partly gagged and under my control.\n\nI had stared too long at her magnificent rear and dreamed too much of slipping my cock into that narrow tunnel.  Her muscle gripped me so tightly that there was no way that I was going to give this up.  She had a full ass, and even though the door was small, there had to be room there to expand into.  \n \nI slipped forward into her as she gasped and pleaded through the panties that yoked her, whining through her nose.  Her tunnel was so tight and unforgiving that though she was quite lubricated, my slide forward was not instantaneous, the rings of muscle one by one giving way to and then pleasurably gripping my shaft.\n\nShe screamed and cried, clawing at the arms of the chair to regain her position and trying to pull herself off of me, but her efforts only served to drive me deeper into her, locking us into our dark tryst.  What wouldn\u2019t quite fit in her mouth or her pussy disappeared entirely into the dark warmth of her butt as I tired of being gentle and drove myself home.\n\nShe flailed around to no avail trying to pull me out of her, kicking her feet on the floor, her body jerking about like a rag doll as she shook her head from side to side.  Tears or sweat, I wasn\u2019t sure which, ran down her cheeks, and they soon accompanied muffled but intense profanity as she struggled to control her reaction to my cock deeply imbedded in her ass.  \u201cHold still\u201d I whispered as I slapped her ass and let go of the gag with one hand.\n\nVirtually unmoving, buried deep in her anatomy, I began to flex my cock muscle, repeatedly swelling with blood the head.  Her breath heaved each time I flexed, and slowly she began to respond to sensations other than pain.  \u201cThink of my cock drilled into your ass, Darling.  Spread your legs so I can see better.\u201d\n\nI let the panties drop and said  \u201cHaven\u2019t you been thinking all week about my cock hanging out of your asshole?\u201d\n\n\u201cYes\u201d was her hissed response after a long pause.  \n\nShe reached back between her legs and stroked the base of my shaft, all that peaked out of her hole, one finger on either side of it rubbing her distended anus.  \u201cNow maybe I can really ass-fuck my little slut\u201d I whispered, as I moved to stroke her nipples buried in the cushion of the chair.\n\nHer breathing still came in short gasps, no doubt in reaction to the pain.  \u201cI feel like I\u2019m about to shit all over you\u201d she managed to choke out.\n\n\u201cThat\u2019s just my cock\u201d  I said, \u201cnow relax and take me like you have wanted to all along.\u201d\n\nShe lay on the chair, impaled on my cock, one hand slowly beginning to diddle her other hole as I finally began to stroke in and out of her ass, watching from the vantage point of her crotch spread wide and on display, her body and mind finally in sync as her hand began to dig into her pussy.  When she started to whimper I slapped her ass hard, and then again, and then again, roughly kneading her soft cheeks, now being put through such rough treatment.  The sight of my stiff cock sliding methodically in and out of her butt, so tight that the skin pulled along with it on the out-stroke, was about all I could take.\n\nI lost control as my orgasm sneaked up on me.  I felt the cum build at the base of my cock and uncontrollably began to pound her poor ass, hand on her hips as I worked to pull her into me as I slammed into her to sound every millimeter of her.  She screamed each time I slammed into her.  Soon I was screaming with her as I pumped load after load of jism into her, so tight that if felt as if the cum was having trouble actually squirting from my head.  \n\nShe sensed my orgasm or felt the cum, I don\u2019t know which, and fast on the heels of my release I felt her ass gripping me tighter as she reached around to slap her own ass, her screams now transferred into moans of pleasure.",
        "When I eventually slipped from her ass a stream of oil and cum squirted out onto the carpet, no doubt driven by her tight ass muscles contracting back into their normal space.  She lay on her back with her eyes closed and her hands cushioning her head, and on a whim I mounted her and wedged my cock between her tits and lazily fucked her boobs, the goo on my shaft a perfect lubrication.  \n\nShe finally regained some composure and opened her eyes, looking first not at me but at my cock below her chin.  She took me in her hand and slowly ran her thumb from the base to the tip, squeezing out some final drops of my seed.  She swallowed, and looking me in the eye, licked the cum from the tip of my cock.  And then, sort of defiantly, she took my slimy head in her lips and held it there for a bit before letting it fall back to her chest.\n\nI could tell by the look in her eye she wasn\u2019t done with the day.  We finished with the living room as she said three things:  \u201cGod my ass hurts.\u201d  \u201cWhen do you have to be at work?\u201d  and, finally with a sly smile, \u201cSo are you up for that bath now.\u201d\n\nSorry, later, and yes were my responses."
    ],
    "authorname": "SomeOneNew",
    "tags": [
        "knee crotch",
        "wet tip",
        "root canal",
        "inside sphincter",
        "hanging air",
        "door small",
        "shorts briefs",
        "slipped head",
        "tease nipples"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/an-afternoon-with-denise-ch-02"
}