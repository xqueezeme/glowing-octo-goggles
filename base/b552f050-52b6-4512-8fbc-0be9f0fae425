{
    "title": "Chinese Takeout Ch. 02",
    "pages": [
        "<p align=\"center\">Chinese Takeout</p>\n\nReaders be warned, this is the second chapter in a multi-chapter story, there's no sex in this second chapter, just a little foreplay (okay, hot foreplay). This is all lead-in and teaser for the main event which will be a chapter or three coming. That said, as always, I do hope you all enjoy.\n\n<p align=\"left\">Chinese Takeout - Chapter 02 - High School Pickup</p>\n\n<p align=\"center\">Thought that I was going crazy\nJust having one of those days yeah\nDidn't know what to do\nThen there was you\nAnd everything went from wrong to right\nAnd the stars came out and filled up the sky</p>\n\n<p align=\"right\">Love at First Sight, Kylie Minogue</p>\n\nIt seemed like only yesterday that in my daydreams of Mr. Right, I'd been a little black dress type of girl who delicately sipped champagne with her preppy college-guy boyfriend over a romantic dinner in a charming old restaurant. Wait a minute. It was only yesterday. But already, that girl in a little black dress sipping champagne was fading from my memories. Fading fast. That had been so yesterday. Today, I was a different girl. Today, I was that girl on the back of Keith's Harley.\n\nToday, or should I say this morning, I was lying in bed with my eyes closed, smiling as I thought of a thirty five year old biker in oil-stained jeans and a patched denim jerkin. Smiling as I remembered how it had felt like to sit behind him on his Harley wearing that denim jerkin and his helmet. Smiling as I remembered how he'd kissed me and held me. Smiling as I remembered how it had felt to be held by him. How excited I'd been as I'd felt his hand on me. Intimately.\n\nJust the memory of his kiss and his hand on me had me shivering and breathing faster.\n\nOn Wednesday afternoon, after school ended, Keith was going to pick me up and take me for a ride on his Harley. But today was only Sunday and Wednesday was still so far away. And I wanted to see him again so much. But I didn't even have his phone number. Was this how other girls felt when they had a crush on some guy, how they felt when they were in love? Was I in love? I wasn't sure, but I did know I really really really wanted to see him again. I wanted to ride on the back of his Harley with him. I wanted him to hold me and kiss me the way he had yesterday.\n\nI wanted him to touch me the way he had yesterday.\n\n\"Jay-Lin.\" My Mom was calling through the door.\n\n\"Yes Mom.\"\n\n\"Want to go eat dim-sum with us? We're meeting the Wong's at eleven.\"\n\n\"Okay, yeah, love to come Mom.\" I liked the Wong's. Ernie, Chrissie and two adorable little twins that I babysat regularly. I liked dim sum too. Just not on a blind date with one of Ginny's hand-me-down jerks. I wondered if Keith liked to go to eat dim sum. He liked Chinese pastries, I knew that. I hoped he liked Chinese girls too. He seemed to. I could hope.\n\n\"It's only nine, we need to leave about ten thirty, okay.\"\n\n\"Okay Mom.\" Another hour in bed. Another hour daydreaming of Keith. Great!\n\nDaydreaming of Keith? It was weird how all of a sudden my ideal guy had morphed completely. Where had Mr. Preppy College Guy gone? I had no idea and really, I didn't give a damn. I knew Keith was completely beyond the pale. A guy my parents would never approve of. Never in a million years. A guy to give any parents of a teenage girl nightmares. A guy who would give my parents not just nightmares but sleepless nights. A guy that might get me grounded for life if my parents knew about him. Did I care? Not one whit. I'd fallen for Keith after half an hour on the back of his Harley, a chat over coffee and one kiss. \n\nWas I crazy? \n\nVery probably.\n\nIt didn't matter. I couldn't stop thinking about him. I couldn't stop my heart singing and dancing whenever I thought about him. Which my heart had been doing from the moment I woke up. I couldn't stop the excitement I felt whenever I thought about him. Now I sort of understood those crushes other girls had. I'd laughed at them. I'd thought they were silly. I'd teased them and made jokes about them. Now I had a crush myself on a guy that was so totally unlike anything I'd ever dreamed of that I felt slightly stunned. \n\nYes, I was definitely crazy. \n\nWas I reading too much into all of this? He'd only taken me home and then kissed me briefly. Maybe I was. But he had kissed me. He had offered to take me for a ride on Wednesday. He had touched me. Oh, how he had touched me. I was instantly wet and excited just thinking about his hand on me. I wanted his hand to touch me there again. I wanted him to touch me everywhere. Somehow, miraculously, after an endless run of jerks, dickheads and nerds mostly provided by Ginny, quite by chance I'd found a guy I really liked. \n\nHe was a totally unsuitable guy. He was a guy my parents would dislike on first sight. No, not dislike. Hate. I mean, they'd already glimpsed him as he rode down the street and I'd heard their comments. They hadn't known that I'd been with him earlier in the afternoon, riding behind him on his bike. That he'd visited our house, been inside our house. That he'd kissed me. Kissed me kissed me kissed me! \n\nI just hoped he liked me enough to ask me out again and not just for an afternoon ride. \n\nAlthough dating a guy who was thirty five and a biker might be a little weird. \n\nAnd he wasn't someone I could EVER bring home to my parents.\n\nOr bring along when I was meeting up with my girlfriends.\n\nBut really, I so did not care at all.\n\nMy phone sang its little Ginny song. She couldn't wait, could she? But it was Ginny. She was my best friend. I'd cut her short last night. And I needed to abuse her for setting me up with that jerk Peter Wong. So I answered.\n\n\"Hi Ginny.\"\n\n\"Jay-Lin!\" She sounded chirpier this morning than she had last night. \"So, what happened? Who was that biker guy? Where did you go? You had me so worried when you took off like that.\"\n\n\"His name's Keith. He just gave me a ride home, that's all.\" I wasn't going to tell her anything else. Certainly not that he'd kissed me. Not that he'd touched me the way guys had tried to touch me forever. Not that he was the first guy I'd ever let touch me like that. Not that I'd loved him touching me. Definitely not that he was picking me up from outside High School on Wednesday. I'd leave that as a surprise. For now.\n\n\"Oh ... Oh well, Peter was really upset about that.\"\n\n\"Yeah, well, his fault for being a total jerk. He called me last night, he was really rude. I had to bar his number. I hope you only gave him my cell, I don't want him calling my parents number.\" That was unlisted. \"And why did you bring him along, I mean, he's a jerk, how come you set me up with him. You know I don't like guys like that Ginny.\"\n\n\"I'm sorry about that Jay-Lin. He's a friend of Jiffy's. And he was rude to me as well.\" She sounded like she was going to cry or something herself.\n\n\"Why would he be rude to you Ginny, it was me that dumped him, not you.\"\n\n\"Long story,\" she said. She did sound a bit down. Not like Ginny at all. \n\n\"Tell me,\" I said. She was always so good at cheering me up when I was down. Least I could do was try and return the favor. Nothing like listening to a friend and sympathizing with her to help.\n\n\"I ... I can't,\" she said, \"it's ... you know ... not something I want to talk about, I just can't.\" That wasn't like Ginny. She talked about everything and anything all the time. Especially guys. But really, I wasn't interested in talking about Peter the Jerk. \n\n\"So what did you and Jiffy get up to after I left?\"\n\nGinny giggled. Instant mood change. That was more like her. \"Well, Mom was out playing mah-jongg with her friends, so we all went back home and...\" Off she went. I listened with half an ear, not really paying much attention while I happily day-dreamed about Keith. Keith and Jay-Lin. What was that name on his helmet? Round Out. Round Out and Jay-Lin. That was nice. I thought about introducing him to my friends. Like Ginny and Marjorie and Chin-Chin and Ling. I must have snorted into the phone, I heard Ginny's aggrieved question, \"What's funny about that?\" \n\nI played back what she'd been saying. Huh! What? \"You what? With Jiffy AND Peter? I thought you said you went home with Jiffy?\" I mean, I was used to Ginny's little sex talks. She got quite descriptive sometimes. I was used to it. Ginny was the font of all sexual knowledge as far as I was concerned. She certainly knew what she was talking about. I was so NOT asking her for advice.\n\n\"Well, you ran out on him and he was pretty upset, so we all went back to my place.\"\n\n\"Ginny, that didn't mean you had to give him a blowjob.\" Yes, I was a little startled. I mean, I knew Ginny wasn't me. I knew she was quite free and easy with hand-jobs and blow-jobs for her boyfriends. Heck, I knew she wasn't a virgin, she'd lost that not too long ago. Not to Jiffy either. But two guys? And one of them Peter the Jerk! That startled me. It shocked me as well. I hadn't thought Ginny was like that. I mean, your boyfriend, yes, okay. But your boyfriend's buddy as well? Just because he was upset. \"What were you thinking?\"\n\n\"Well, we'd had a few drinks.\" She sounded a little apologetic. \n\n\"What about Jiffy? Wasn't he upset? Heck, what about you Ginny?\" I was curious, yes. Startled. Surprised, a little shocked, but curious. Not that I'd ever done anything like that. Which made me think of Keith. Thinking about Keith was far more interesting than listening to Ginny talked about her sexscapades. I heard about those every week. I kind of lost the conversation with Ginny while I happily thought about Keith. Ginny sounded quite happy about whatever had happened so I left her to rabbit on.\n\nUntil Ginny interrupted. \"Hey Jay-Lin, I gotta run, going shopping with Mom for the afternoon and then we're off for dinner somewhere, see you at School tomorrow.\" I never did find out whether Jiffy was upset or not or what Ginny thought about it. Certainly I wasn't worried about it. I had better things to think about.\n\nI called Sally next, but she was busy with her baby. \"Never mind sis, you can tell me next time, okay. Just don't do anything I wouldn't do, and if you do, don't get caught, okay.\"\n\nWell, that was okay too. My Big Sis was the one person I could talk to about Keith. She'd had her own troubles with our parents when she was my age, her husband was a gweilo as well and that hadn't gone down too well to start with, she understood. Although thinking about it, Keith might be pushing the envelope for her a bit much. I mean, her husband was a gweilo but he was a nerdy IT guy that looked like a stick. Don't know what she saw in him but she was head over heels about him from when they started dating at university. Enough that she'd stood up to my parents about him. I'd been twelve back then and I still remembered the arguments. Now, he was one of the family, but it'd taken a while. Keith? Well, thinking about Keith like that was thinking way too far ahead and way too optimistically.\n\nProbably he was just going to take me for a ride on his Harley and that would be it. Although he had kissed me. And touched me like that. But I didn't want to get my hopes up. Not too high anyhow. It would hurt too much to have them shattered. But I hoped so much that Keith liked me enough to ask me out again. What had he said to me yesterday? \"I wish your parent's weren't on their way home,\" that's what he'd said. That meant he'd wanted more time with me didn't it? I hoped so, I really did.\n\n\"Get moving Jay-Lin.\" Mom was calling me. Time to get up.\n\n\"Coming Mom.\" Oh well.\n\n<p align=\"center\"> * * * * * * * * </p>\n\nWednesday morning. The interminable nightmare of Sunday, Monday and Tuesday was over at last. As soon as I opened my eyes I knew. Today was the day. Today, after school, I'd see Keith again. How I hoped he hadn't forgotten. My stomach flipped and flopped at the thought that he might forget, he might decide he wasn't going to waste his time on a schoolgirl. He might decide I was far too young and just not turn up. I almost had a panic attack on the spot.\n\nAt least I didn't have to think about what to wear. Saint Bernadette's Catholic Girl's High School had a rigid and totally inflexible uniform policy. The uniforms were very traditionally styled, something that seemed to appeal to Asian parents with their desire for uniformity and discipline. And our student body was almost entirely Asian. Non-asians tended to drift away. The academic competition was just too intense for their kids. I mean, my results were average for Saint Bernadette's, but if I transferred out to another High School where we Chinese and Koreans and Vietnamese weren't the majority, I'd be at the top end of the academic bell curve. Believe me, it sucks being average if your parents are Asian. They were always on at me to study harder. But so was every other parent of Saint Bernadette's students. \n\nBut enough of that, we were talking about uniforms. Very traditional uniforms. Pleated skirts. White shirts. Black shoes, knee high white socks and navy blue blazers. They even had a dreadful little beret that we uniformly detested. Those uniforms were, to be brutally honest, on a whole different plateau of wrongness for an asian girl. Nobody, and I mean nobody, should EVER make asian girls wear those uniforms. Sure, you all get the traditional Catholic schoolgirl-fetish stuff. But when you're a slender asian girl and you're wearing that short pleated navy blue skirt (and we did wear them short, all the girls did and who was I to challenge the dictates of schoolgirl fashion), those knee-high white socks, those black shoes and that navy blue blazer over a white dress blouse with a school tie?\n\nWell, guess what; you're a walking fantasy for middle-aged men, whether you know you are or not. And we all knew it. I mean, in this day and age, with the internet, you'd have to be a moron not to figure that out. And whatever else we were, the girls of Saint Bernadette's were in general so NOT morons. But whatever. The end result was, I was going to be wearing my school uniform with its short little skirt when Keith picked me up. If he picked me up. And there was nothing I could do about that. I wondered if he'd like my uniform. I kind of hoped he did, hate it as I did. Then again, I also hoped he'd actually be there. God, if he wasn't I knew I'd burst into tears. I almost started crying just think about how I would feel if he wasn't there. Just the thought of him not being there made me feel sick.\n\nI so had my heart set on sitting on that Harley behind Keith. But this time I'd be wearing a skirt, not shorts. And Harley's went fast. Keith's did anyhow. It occurred to me that a skirt might not be the best attire for a ride on Keith's Harley. I hadn't thought about that before, but now that I did, I didn't want to be sitting there flashing my so boringly regulation little white cotton briefs to the world. Jesus no! I dived into my drawers, eventually coming up with what I'd been searching for. My black lycra gym shorts. They'd do perfectly. I threw them into my bag along with my homework. And a windproof jacket that I grabbed as even more of an afterthought.\n\nAll set.\n\nDo you know how long the school day is when three fifteen can't come soon enough? It's an eternity, that's what it is. Minute after interminable minute. Hour after interminable hour. I was in a time warp where somehow, time had been slowed down for me and me alone. Even with time dragging its tail, I had no idea what any of my teachers talked about, I was off drifting in a cloud of thoughts and hopes, occasionally sinking into a sea of fears and doubts before soaring to new heights as I pictured Keith sweeping in on his Harley to pick me up in front of all those cats. Especially the ones that'd teased me or given me a hard time in the last few weeks. Bitches.\n\nAs soon as the bell rang I was out of that classroom. No dawdling today. Ginny and Chin-Chin scrambled to follow me as I dashed for my locker, threw my junk in, grabbed my jacket and gym shorts and started to lock it.\n\n\"Hey Jay-Lin, slow down, slow down will you, what's the rush?\" Chin-Chin looked and sounded a little flustered at my impression of a dervish. She looked puzzled as I slipped my lycra gym shorts on, not even bothering to go to the washroom. Screw that. No time to waste. And we all wore the same boring underwear anyhow. I did get a few looks though. Then I was shrugging myself into my jacket. It'd keep the wind out.\n\n\"Getting picked up out front at three fifteen, I gotta be there.\"\n\n\"Huh, when did you ever get a ride home? You mean I gotta catch the bus by myself?\" I grinned at the expression on Ginny's face. Since when had she ever worried about leaving me on my own when one of her boyfriend's gave her a ride. God, I hoped Keith would be there. Having to catch the bus after this would be so ... so ... oh, it would be just so humiliating. But I had to do it. I had to take the chance that Keith wouldn't show up. Because if he did and I wasn't there, I had no idea what I'd do. None.\n\n\"Yeah, you do this time Ginny. See you tomorrow morning. Bye Chin-Chin.\" \n\nI gave them both another grin and a quick wave as I dashed down the hallway for the exit and the pickup lane. I wasn't running, but it was close. God, I so hoped Keith was coming. I was nervous. So nervous my hands were shaking. Three ten. I looked up and down the pickup lane, but no Harley. I wasn't sure whether to be relieved or worried. Actually, I was feeling almost sick with suspense.\n\nGinny caught up with me a couple of minutes later. She was breathing hard. Looking a little flustered. Gee, tough Ginny. \"What's going on Jay-Lin? Who's picking you up?\"\n\nI heard that distinctive Harley sound, growing louder, burbling with the odd backfire as it slowed and turned into the High School entrance, picking up as it cruised slowly down the pickup lane. I sighed with relief. I relaxed. I smiled. Everyone was looking at that Harley. Everyone. Including me. My heart was beating wildly. I saw him. Keith. Yes! It was Keith. He'd come! He saw me right about the same time I waved. Although how he recognized me in a sea of other asian girls I had absolutely no idea. But he did.\n\n\"Oh no, not him! Jay-Lin, how could you!\" Ginny sounded totally dismayed. Chin-Chin was just standing there open-mouthed. She'd better watch out for flies.\n\nI grinned. \"Oh yeah, it's him Ginny!\" I was enjoying this so much.\n\nEveryone in sight was looking at the Harley and Keith. Everyone was watching as he pulled up beside me. Including the Chua bitch and her little coterie of cats. That low throaty potato-potato-potato burble just reverberated right through me. I smiled a little shyly as Keith gave me a grin. He left his shades on this time though. He looked so cool, so big and scary sitting there on that huge loud motorcycle. Boots, jeans, leather jacket. That patched denim jerkin thingie over the top. If I hadn't known it was him, I'd have been scared myself. But I knew it was Keith and that he was here for me.\n\nI wanted to just fling myself at him, but that wouldn't look cool. Not in front of half the girls in school and the Pickup Lane Monitors who were looking a bit stunned. The couple that I could see anyhow. Keith had a second helmet hanging off one arm. He passed it to me as I stepped up to his Harley, the noise it made idling was almost deafening. Everyone was looking at us. Including the cats. I smiled at the Chua bitch as I slipped the helmet on and buckled it under my chin. I knew how to do that this time. It only took me a few seconds to buckle up and pull it tight. The Chua bitch looked stunned.\n\n\"See you both tomorrow.\" I gave Ginny and Chin-Chin another grin as I stepped onto the footrest nearest me, my hand on Keith's shoulder as I swung myself up and over to sit behind him, my little school uniform skirt flipping up as I sat. Good thing I'd worn those lycra gym shorts underneath! I gave Ginny a grin and a wave. The look on her face, dismay, shock, horror, made me giggle. Chin-Chin was still catching flies. The Chua bitch was doing a good imitation. ",
        "\"Ready?\" Keith asked.\n\n\"Oh yeah, I am so ready,\" I answered, my arms going round his waist as I held on tight, leaning in against him, pressing up against his back. Let that Chua bitch watch. \n\nThe Harley growled as Keith put it into gear and pulled out into the drive through lane, easing into the flow. Actually, there was no flow. Everyone had stopped. The Mom's in their cars picking their kids up mostly just watched in horror as we rumbled past them. My fellow students watched wide-eyed. Every eye followed us as Keith eased the Harley round into the exit and onto the street. He gave the throttle a twist. Those car-alarm starting mufflers gave a sudden bellow of muted thunder as the Harley accelerated down the road. Girls walking home all turned to look, some of them pointing as they saw me on the back. I was kind of glad now that the helmet hid my face.\n\nChanging gear, changing again, faster still, my skirt blowing up around my waist in the wind of our passage as we passed car after car. Soccer Mom after Soccer Mom. I laughed delightedly as the nightmare of every teenage schoolgirl's parents swept me down the road on his thundering iron steed. There was no nervousness this time. No wondering what to do. I held onto Keith, tucked in tight against him, looking over his shoulder, feeling the power of the Harley's engine as I sat on the rear seat. I leaned with Keith, no longer concerned that I might fall off. Keith knew how to ride and I knew enough after that brief ride on Saturday to just go with him as we swept down the road.\n\n\"Enjoying yourself,\" Keith asked as we stopped at a set of lights. Everyone in the cars around us was looking. Lots of students with their Mom's. Some guys now too, from our sibling school, Saint Francis Xavier. Those guys looked either envious or admiring. And me? I just wanted to squeeze Keith, hold him as tight as I could, press myself against him. So I did.\n\n\"Oh yeah,\" I replied, hugging him from behind. He felt so good. He smelt so good. I couldn't get enough of holding him. Holding him tight, squeezing myself against him, my breasts crushed up against his back. That felt even better. \n\n\"How about we ride for an hour or so and then I take you home,\" he said, the lights still red. \n\nJesus, I'd almost forgotten the baby-sitting gig. \"That's fine,\" I said, \"I gotta be home by six at the latest, I have to go baby-sitting at six thirty.\"\n\n\"No problem,\" he said as the lights turned green. Let's ride for an hour and then you can make me a coffee.\"\n\nYes! Yes! He wanted to come inside with me again, not just drop me off. I heard him laughing and suddenly realized I'd yelled \"Yes! Yes!\" out loud. God, how embarrassing. Behind the helmet, my face burned. He reached down and patted one of my knees while I burned up. Actually, after he patted that knee, his hand just stayed there, resting on my knee. He was wearing gloves, yes, but they were fingerless and I could feel his fingers on my skin. They felt so good. \n\nI wondered how he could ride with just one hand but he seemed to be doing just fine and hey, he was the one driving this beast, so I didn't worry about it. I just held him and enjoyed his hand on my knee. Stroking my knee now. Stroking my leg higher, almost all the way to my hips. He found my lycra shorts. I felt his fingers exploring them. I giggled. \"I put shorts on under my skirt,\" I yelled in his ear.\n\n\"Damn!\" he yelled back, making me laugh. Did he really think I was silly enough to jump on a motorcycle in a little skirt wearing only panties. \"I was hoping,\" he added as his hand went back to the grip while he changed down, slowing as the traffic built up. Ooooohhhh-kay.\n\n\"Where are we going?\" I asked as we idled onto the Parkway.\n\n\"Taking you down the Parkway, then down Ninth Line and round onto Jefferson, then back in on the Freeway.\"\n\n\"Great.\" God, this was just so much fun. It was even better when we eased onto the Parkway and he went faster. It wasn't quite rush hour yet, the traffic hadn't built up and Keith opened the Harley up. I loved it. I loved sitting perched behind him as we swept down the road, the wind in our faces, the throaty roar of the Harley around us, the feel of the Harley beneath me, shuddering and vibrating as we growled down the highway, Keith easing us through the curves so that it almost felt like we were flying. \n\nWe swept off onto the Ninth Line exit in a long gentle curve, Keith leaning the bike over, me leaning with him until I thought that if I put my hand out I could touch the road as it flew by. We eased into Ninth Line and now it was all open country. One of those narrow two lane roads, grass, trees, farmland, the occasional farmhouse, no commuter traffic. Ninth Line was no freeway, it curved unexpectedly, there were hills, bridges, the occasional farm vehicle. Keith powered the Harley down that road with the same casual ease he'd displayed on Saturday in the suburban streets leading to my home. It was all new to me but I trusted Keith, I trusted him to know what he was doing and I just sat relaxed behind him, holding him and reveling in the ride.\n\nThe sound of the Harley, the feel of the Harley growling beneath me, the vibrations from the road and the engine, Keith to hold onto and press myself up against, the way we swept around corners and up and down hills, slowing here, accelerating there, the wind in my face so fresh and clean, the Harley almost alive beneath us. I'd never felt like this before, so free, just the two of us on the road, together, uncaged, part of everything around us, not constricted within the glass and steel cage of a car. THIS was so enjoyable. With Keith, THIS was everything I'd never dreamed about but now that I'd experienced it, how could I ever go back to anything else. I was so happy I wanted to cry.\n\nInstead, I just rested my head against Keith's back for a moment before once more looking over his shoulder and taking in the road unreeling before us. Tasting the wind. Tasting freedom. I wished we could just ride and ride and ride, ride off into the distance together and just keep going forever. I knew we couldn't, but I wished we could. We eased of Ninth onto Jefferson and then onto the Freeway back into town.\n\n\"Want to go a bit faster?\" Keith called out as we banked onto the Freeway.\n\n\"Sure,\" I yelled back. Faster? Weren't we already going fast.\n\nNo. We weren't. Keith twisted the throttle gently, the Harley's engine responded, muted thunder rolled in our wake as we surged down the fast lane, faster, faster still, flying by cars as if they were standing still. The wind was no longer a breeze, it was a roaring gale, buffeting me, blowing my hair wildly, catching at my jacket, blowing my skirt up around my waist and keeping it there. We wove through the traffic, I held tight to Keith, just going with him, leaning with him, left, right, left, tucked in behind him and sheltered from the worst of the wind by his body, his strength. Laughing with sheer happiness. When we slowed, it was such a letdown, the exhilaration of the ride fading along with the engine noise as we eased off the Freeway and into the suburbs.\n\nThat entire hour went so fleetingly, it seemed like only a moment before Keith turned the Harley into the driveway of my parent's house and stopped, turning the engine off after we'd come to a halt. It hadn't been a moment, it'd been a full hour but that hour seemed to have flown by in an instant. The muted thunder I was seated on died away. I clung to Keith's back for a long long moment, resting my cheek against his shoulder, breathing in the smell of his leathers, of him, trying to imprint it into my mind before I swung myself off to stand beside him. This time I managed to unbuckle his helmet on my own. Sitting on his bike, watching me, he smiled. I smiled back, feeling small and shy now.\n\n\"I hope you liked your ride.\" His voice was soft and gentle, his smile warm. Little thrills rushed up and down my spine as I remembered Saturday and his kiss. His lips on mine. His hand on me. Thinking of his hand and where he had touched me, I was instantly wet. I could feel my own wetness, my own excitement. Knowing that, my excitement grew, feeding of itself, feeding of my anticipation.\n\n\"It was...\" I didn't know how to put it into words. I didn't want to sound gushy. \"It was the best afternoon ever.\"\n\nHe grinned as I handed him back his helmet. \"Want to do it again?\"\n\nI couldn't help it. I jumped up and down clapping my hands. \"You mean it? Really. You're serious?\" Oh god, I was so happy. Happy? I was in heaven. Paradise.\n\n\"Really.\" He was laughing at me. \"What're you doing Saturday?\"\n\nMy heart was pounding. \"You.\" \n\nI realized what I'd said. Oh God! Had I really said that? My face turned bright red. I was going to burn up from pure embarrassment!\n\n\"I mean, going for a ride with you?\" I felt so flustered. \"If you like, I mean, I don't have anything planned. I'd love to ... I mean, if it's...\"\n\nHe reached out and touched my lips with one finger. \"Shhhh, I know. I'd love to take you for a ride Jay-Lin. Now relax. Take a deep breath.\"\n\nI did. God, I felt so silly.\n\nKeith grinned at me. I couldn't help it, I smiled back.\n\n\"How long before you go babysitting?\" he asked.\n\nI checked my cell. Five thirty. \"I'm getting picked up at six thirty.\" I smiled. \"Do you have time for that coffee?\"\n\nHe smiled back as he swung himself of his Harley. \"With you? Always.\"\n\n\"Smooth-talker.\" I giggled. This was turning out as good as I'd hoped. Saturday! Yes yes yes!\n\n\"You ain't seen nothing yet.\"\n\nHe followed me inside. I shut the front door behind him. When I turned, he was standing there looking at me. My heart stopped at the look on his face, in his eyes. \n\n\"Coffee?\" I squeaked, my voice an octave higher than normal.\n\n\"I think I better,\" he said, his eyes burning into mine.\n\nHe held my hand as we walked into the kitchen. HE HELD MY HAND! Oh God! I could barely think, I was so happy. His hand was huge, engulfing mine completely. He held me from behind as I fired up the coffee machine, those massive arms wrapping around my waist as I filled the percolator and turned it on. Task done, I sighed and leaned back against him, just enjoying feeling him hold me, feeling his arms around me. They felt so good. So strong. His arms were bigger than my legs. He just felt so good. I rested the back of my head against his chest, feeling his chin resting on the top of my head, his breath ruffling my hair. \n\nFeeling his erection pressing firmly against my butt. \n\nWas just holding me like that getting him so excited? So big and hard? It felt huge. Not that I'd ever felt one before. It wasn't like I had anything to compare it to. But still, it felt huge. Huge and hard and exciting and terrifying all at one and the same time. I had no idea what to do. No idea what I was doing. No idea what I should do. I felt his breath in my hair, sending little shivers down my spine. I wasn't tingling now. I was glowing. Burning. Glowing melting molten quivering jelly. Time seemed to stand still. What should I do? I mean, I liked him. A lot. Tremendously. I wanted him. I had no idea what to do. So I just did what I wanted to do.\n\nI pushed my butt back against him.\n\nOh yes. Big and hard.\n\n\"Jay-Lin,\" he breathed, and I could feel how tense he was.\n\n\"Yes,\" I whispered.\n\n\"You're beautiful, girl.\"\n\nI wasn't sure what to say. \"Thankyou.\" \n\n\"I'm looking forward to Saturday. All day with you, okay?\" He was. He really was. How that made me feel was indescribable. Happy? Elated? Excited? Scared? Nervous? Exhilarated? All of those together and a lot more.\n\n\"Yes.\" That was more than okay. That was wonderful. It was like when you're five years old and your parents take you to Disneyland. It was magical. I can't describe how I felt except to say that happy was a mild understatement. Also, I was feeling Keith's bulging erection pressed firmly against my butt and I was enjoying that too. It was a nervous and slightly scared enjoyment, but nevertheless the feel of him there, like that, while his arms held me, told me that he wasn't thinking of me as a little girl. I liked that very much. \n\nI liked that so much that I could feel my own wetness, feel my nipples swelling and hardening and aching. I wanted Keith to touch me so much, but I had no idea how to hint at what I wanted. But I wanted. I wanted very much.\n\nThe phone rang. I looked at it. Keith's hands released me. When I answered, I was breathing hard.\n\n\"Hi, you've reached the Liu's, how can I help you?\"\n\n\"Hi Jay-Lin, made you run for the phone did I? Sorry 'bout that.\"\n\n\"Hi Uncle Ernie. No problem.\"\n\n\"Just wanted to let you know I'm on my way, running real late though, I'll be at your house around seven fifteen. That okay?\" I glanced at the kitchen clock. Five forty five. An extra hour and fifteen minutes with Keith. Yippeeee!\n\n\"No problem Uncle Ernie, see you then. I'll be ready. Just beep the horn and I'll come right out, okay.\"\n\n\"Okay, see you in an hour or so.\"\n\n\"Bye.\"\n\nI hung up. I turned back to Keith. Back to Keith's arms, my arms around his neck, pressing myself against him, looking up at him. \"An hour,\" I breathed, my heart pounding. \"We've got an hour.\" \n\nHe smiled. He kissed me. His lips found mine, my mouth opened, opened wide to receive his tongue, to let his tongue slip into my mouth and taste me, explore me, flirt with me, tease me.\n\n\"Forget the coffee Jay-Lin,\" he breathed. \n\nI looked at him. I looked and I stepped back, taking his hand in mine. Without a word I led him from the kitchen into the living room. He followed me as I led him to that beautiful white sheepskin rug that covered half the floor in front of the fireplace. The white sheepskin rug that had always featured so prominently in those daydreams of little black dresses, preppy college guys and sweet romance. Now it was about to feature a biker. And me. And not just in a daydream. I hoped. Oh how I hoped.\n\nReally, I didn't say a word. I just turned and looked at him. Keith took my hands in his and looked at me. He looked into my eyes just as I looked into his. Without a word, he swept me up in his arms effortlessly and knelt with me, lowering me, laying me down on my back on the sheepskin, moving easily to lie beside me, propping himself up on one elbow beside me to look down at me.\n\nFor my part, I looked up at him, my heart doing that wild pounding thing again as one of his fingers traced my jawbone from just below my ear to my chin, pausing there. I looked up at him, knowing this was where I wanted to be. Knowing I wanted Keith to kiss me. To touch me. To do whatever he wanted to me. Knowing that if I hadn't actually fallen in love with him, I had the biggest crush I'd ever had on any guy in my entire life on him. My entire body was burning, tingling, glowing. Melting. Wanting. I didn't really know what I wanted but whatever it was, it involved Keith and I knew it. \n\nAnd Keith, Keith just looked down at me, his expression so serious. His finger under my chin so that I had to look up at him, I had to look into his eyes. Not that I wanted to look anywhere else. I couldn't get enough of looking at him.\n\n\"Jay-Lin.\" He sounded so serious too.\n\n\"Yes.\" I wasn't really talking. It was so hard to talk. It came out as a more or less breathless gasp.\n\n\"I'm a lot older than you are.\"\n\n\"I know. You told me how old you are.\" I didn't care. Thirty Five, schmerty five. Whatever. Really, I didn't care.\n\n\"I don't want to take advantage of you girl, you're just a baby.\"\n\n\"I'm eighteen.\" \n\n\"Okay, you're an eighteen year old baby. I mean, I hate to admit it, but this big bad biker is feeling guilty, you look so sweet and innocent. Jesus, you're even wearing a school uniform. I'm feeling like a dirty old man here.\" \n\nI liked the way he looked at me then. Looked me up and down as I lay on the floor beside him. I actually giggled. \"Keith, compared to you I AM just a little girl, really, and I AM sweet and innocent.\" I lifted one hand to touch the back of his hand, to move it, to hold it against my cheek, to kiss the heel of his hand. \"And okay, I can do the math, I'm seventeen years younger than you but I know what I want.\" I kissed his hand again. \"And I'm old enough to know I want you.\" \n\nAnd I did. I wanted him so much. I wanted him more than anything I'd ever wanted in my whole entire life.\n\n\"I know Jay-Lin, I want you too.\"\n\nBlushing, I persevered. \"I mean, I've never had a boyfriend, I don't know anything, I don't know what to do. I just feel, you know, so ... so ...\" Confession time, Jay-Lin. \"Like I have absolutely no idea what I'm doing but I want to do whatever it is I don't know with you.\" I turned my face to bury it against his shoulder, inhaling the smell of him, wanting to make it part of me. \"Whatever it is I'm doing, I want it to be with you.\"\n\nHis finger slid under my chin, turned my face to look up at him once more. His expression was so serious. I knew I had to convince him. I had to. I'd just found him, I couldn't bear to lose him. Not because he thought I was a baby. Not because he thought I was too sweet and innocent. I mean, I knew he was a biker. I knew he was almost twice my age. I knew he was no Mr. Nice Guy. But to me he was. \n\nTo me. \n\nThat was what was important. I didn't care about what he was like to anyone else. I wanted him. I wanted him so much. I wanted him so badly that the fear of losing him hurt. Scared me and hurt me.\n\n\"Keith.\" My voice was a gasp again. A scared, timid and desperate little gasp, but I wanted him so very much. I had to make him understand. I had to. \"Keith, just ... Just do what you want to do to me, okay, please, I just found you, I don't want to lose you because you think I'm too young.\" I felt my eyes water. I felt so desperately afraid. \"Just ... just take me as I am Keith, please?\"\n\nHe looked down at me. I felt so afraid. So very afraid I was going to lose him. \n\nBut then he said \"Oh hell, Jay-Lin, don't cry,\" and just like that, he kissed me. His arm under me, his other hand stroking my hair, his lips came down on mine, my mouth opened wide, his tongue met mine like an old lover and we were kissing. That kiss was gentle, delicate, a brushing of his lips against mine, a sharing of breath, a sharing of my soul as I opened my mouth to him and gave him everything I had. My heart, my soul, my desire for him, my excitement, my enthusiasm and happiness. My love.\n\nEverything.\n\nHe was breathing hard when his mouth at last lifted from mine. Heck, I was breathing hard as I nestled in his arms, feeling his strength, feeling the solid mass of his body beside me, dwarfing me. His fingers stroked my hair back from my face. Massively large and strong fingers, fingers that I caught with my hand and held as I turned my face to them and kissed them one by one.\n\n\"You're so beautiful,\" he said, his voice so soft and gentle. So caring.\n\nI smiled up at him. \"Do you think so? Really?\" I liked how he'd said that. Not just words, but like he really meant it. Like he felt it. Like it came from his heart.\n\nIt was his turn to smile. \"Yes, I do, really. You're just breathtaking, looking at you, it's like I've walked into a dream and met a fairy princess come to life. You're far too angelic and beautiful for an old guy like me.\"\n\nNow I wanted to cry from sheer happiness. Nobody except my Mom had ever called me a princess, let alone an angel, and that'd been a long long time ago. \"Well, this little princess has met her knight in shining armor. And knights that rescue princesses deserve to be kissed.\"\n\n\"I thought that was frogs.\" He was laughing.\n\n\"Who cares? Knight. Frog. I just want to kiss you.\" I was so totally honest with him. I knew I'd always be honest with Keith. I did want to kiss him. Badly. Or goodly. Whatever. I pushed him back and lifted myself onto one elbow. He let me push him onto his back. If he hadn't I'd never have moved him. Not in a million years. Now he smiled up at me. I smiled, then giggled, then slid myself up and onto him, my legs either side of him. Sitting up on him, looking down at him, I realized that really, he was a big big guy.",
        "\"How tall are you?\" I was undoing that denim jerkin thing he wore. It looked old. Old and dirty. Like it'd never been washed. Maybe I should take care of that for him when I had a chance. \n\n\"Six foot,\" he said, watching my fingers. His hands moved to rest on my thighs where I sat astride him, resting on my skin just below the hem of my uniform skirt. It felt good to sit astride him, my legs spread wide by the bulk of his body. I liked feeling him between my legs. \"And you, you're just perfect.\"\n\nReally, I wanted to kiss him again. So I did, easing myself forward and down to lie on him. To look down into his eyes. God, I was so small compared to him. But I felt so safe. This time I kissed him, devouring his mouth hungrily, my tongue sliding into his mouth and tasting him, exploring him, finding his tongue and teasing him. His hands stroked the backs of my thighs, his fingertips brushing my inner thighs all the way up to those tight-fitting lycra gym shorts. \n\n\"Take them off,\" he said, between kisses.\n\n\"Take what off?\" I asked, between kisses.\n\n\"Those shorts,\" he said, just before sucking my tongue into his mouth.\n\n\"Okay,\" I gasped after my mouth lifted from him. A long time later. Neither of us seemed to want to stop. I knew I didn't. But I also wanted to do what he asked me to do. \n\nI sat up. I swung myself off him and stood up and pushed my shorts down and raised one leg, then the other to get rid of them. I knew he could see my panties when I did that. I didn't care. Well, I did. I wanted him to see my panties, boring as they were. I wanted to excite him. Showing myself to him excited me. I was wet. Wet with heated excitement. Wet with anticipation of who knew what.\n\nI stood astride him, then sat down again, seating myself a little lower now, so that I pressed on the visibly bulging length that was restrained by his jeans. I almost squealed at the sensation. Almost. I did tense and shudder as a surge of excitement shivered through me at the touch of his body against mine. I shivered again, feeling that hard bulge pushing upwards against me. I wanted to move, I wanted to move against him, to lie on him, to do something but I didn't know what to do. It didn't really matter though. His hands moved back to rest in my thighs, to slide up under my little skirt all the way to my hips. He held me and then he moved me himself, sliding me against him so that I felt him rub against me along the length of my slit.\n\nHis hands moved me backwards and forwards while I shivered and gasped, feeling the roughness of his jeans through my little cotton panties. Panties that were now soaked completely through. I placed my hands on his chest to hold myself up. It wasn't enough. My arms turned to jelly, I toppled forward in slow motion until my head rested on his chest. Everything of me rested on him while his hands continued to move me, no longer on my hips now but on my butt, holding me, cupping my butt, brushing my panties upwards and inwards while his fingers eased down the back my thighs to my inner thighs, to where I was most tender and sensitive.\n\nI lay on him, flushed, panting, helpless under his hands as he caressed me. As he caressed my butt under my skirt. As he moved me. As he moved me upwards until my flushed and excited face looked down on his once more. He smiled up at me and then one hand seized my head and moved me to him. This time it was no delicate gentle kiss. His mouth was hard on mine. Hard and demanding, his tongue possessing my mouth, controlling, taking what he wanted from me. I surrendered so willingly, so eagerly until, both of us breathing hard, our lips reluctantly separated. I looked down at him for a long long moment which ended when he rolled me off him and over onto my back. \n\nOn my back on the white sheepskin rug.\n\nNow Keith was looking down at me again. Looking down at me and breathing hard. \"God Jay-Lin, I want you so much.\"\n\nI was breathing hard, my body on fire. Burning. Wanting. Needing. Hot. Hot and wet. I'd never felt like this. Not like this. I wanted more. I wanted to feel more. \"Last time,\" I gasped. \"Last Saturday, where you touched me, touch me again.\"\n\n\"Don't tease me, girl,\" he growled, a growl that scared me, that send little shivers up and down my spine. For a moment, I was afraid. But I wasn't teasing him. I wasn't. I just didn't know what to do.\n\n\"I've never,\" I gasped, \"I've never done anything like this ... I don't know what to do.\"\n\nI didn't. I had no idea. I mean, I was eighteen, I knew the theory. Only, all I'd ever done with guys was kiss them. What we were doing, it was all new to me. I had no idea what I should do. I knew more or less what guys did, I mean, the mechanics were pretty obvious. But the finer details? No, I didn't know anything, I was totally inexperienced. But I knew I wanted him to touch me. There.\n\n\"Jesus Jay-Lin.\" But his eyes were on fire, his face showed his desire. His desire for me. A desire that made me want him even more.\n\n\"I don't want to tease you Keith,\" I gasped, \"it's just, I don't know, I never ... you can do whatever you want to me Keith... Just ... just don't hurt me, okay ... Not too much anyhow...\" I was scared. Excited and scared. He was so big. Everywhere. And I had no idea what it would be like but I was willing. \"I want you to ... I do... please ...\" \n\nI did. So much. So very very much.\n\nHis expression became less fierce, tender again, no longer scary. Tender and gentle. One finger stroked my cheek. \"You do don't you Jay-Lin?\"\n\n\"Yes,\" I gasped. \"Yes, I do.\"\n\nThen I did what I'd wanted to do from the first time I'd felt it pushing up against me. I did what I'd been too shy and timid to do before. But now it felt right. I reached down with one hand and I placed it over that long hard bulge in his jeans and I squeezed lightly, feeling that hard length through the denim of his jeans. Feeling his body tighten, seeing the sudden change in his expression, the quick indrawn breath.\n\n\"Oh Jesus Jay-Lin, you have no idea what you're doing do you?\"\n\nI didn't. I was worried. Had I hurt him? Had I squeezed it too hard? Had I done something wrong? \n\n\"What should I do?\" I gasped. I wanted to please him. I wanted to do my best to please him.\n\nHe stroked my hair. He kissed me. He smiled down at me reassuringly. \"It's okay Jay-Lin, really, we're not going to do anything you don't want to do. We're not going to do anything too quickly, just relax. Whatever you want to happen will happen, if you don't want it, it won't happen. Just remember though, you're my girl now Jay-Lin\" \n\n\"I am? I'm your girl?\" Really? I was his girl? He wanted me to be his? I felt as if somebody had given me the sun and the moon and the stars, gift-wrapped. \n\n\"You are Jay-Lin... You're mine.\" He smiled, his face came closer, closer still and then we were kissing again, my mouth wide open to his. I was more than okay with that. I was ecstatic. I was his. I was his girl! He was mine. Keith was mine. Or I was his. Whatever. In that moment, as I realized he'd decided, I'd had a little taste of heaven and I wanted more. More and more and more and more until I had everything. Until I gave him everything. \n\nHis mouth lifted from mine. \"If you want to be mine,\" he added. His expression was intent. Serious.\n\nIt took me a second to comprehend the question. My mind had turned into a marshmallow. \"Oh yes,\" I breathed. \"Yes, I want to be yours Keith.\" I did. I wanted that more than anything. I looked up into those eyes, looked up at that face, that serious expression. I reached up and I stroked his cheek with one hand, gently, tenderly. \"I want that so much Keith, just don't hurt me, okay, I couldn't bear it if you changed your mind.\"\n\nHe smiled, a smile that warmed me and thrilled me through and through. A smile that told me he wanted me as much as I wanted him. \"I'd never hurt you babe,\" he breathed, \"never.\"\n\nI knew he wouldn't when he said it like that. I could almost taste the honesty, the sincerity in his words. In his expression. I knew in that moment that whatever happened, I was safe with Keith, he'd never hurt me, he'd never let me be hurt. Not while I was his. And I knew I was his. And he was mine. He was mine and I wanted to give him more. I knew what more I wanted to give him too. I knew what my dates in the past had wanted. Something I'd never given them, try as they had. \n\nKeith would be given freely what they'd tried for. Tried and failed.\n\nAlmost timidly, I reached up and began unbuttoning my white school shirt. He watched my hands, watched my fingers, glanced at my face, glanced back to my fingers as I worked my way down, button by button, my heart fluttering. That last button came undone. I was too shy to open my shirt. He looked down at me. He smiled. His lips came down on mine, he kissed me so tenderly. He kissed me while his fingers brushed my shirt to the side, exposing my plain little white bra.\n\nHis lips lifted from mine. He smiled. \"Undo it for me.\" \n\nHe didn't have to tell me what to undo. I knew. I lifted myself a little so I could reach beneath myself and unhooked my bra. He kept looking at me as his fingers took that plain little bra and pushed it up. His fingers pushed it up to my armpits, exposing both my breasts to his eyes. I shivered as my breasts were uncovered. I shivered and I looked at him and my heart fluttered wildly. My breasts were so small, small and firm and I hoped so much he'd like them. Maybe they were too small for him. Maybe they weren't what he liked? \n\n\"They're gorgeous,\" he breathed, and the world righted itself again.\n\nI breathed, a breathe I realized I'd been holding only when I exhaled. .\n\nOne of his hands very gently cupped one of my breasts, his thumb brushing across one nipple that was already rubbery hard and aching so that I shivered and gasped. His hand on my naked skin felt so good, it felt even better as his hand moved on me, explored my breast, explored both my breasts. When he dipped his head down and used his lips to take possession of one of my nipples, I moaned, arching my back as one of my hands clutched at his head. His tongue played on my breast, moving in little circles, and then he was sucking and tonguing my entire breast and I was shivering and moaning.\n\nHis hand moved over the smooth flatness of my tautly muscled stomach, jumped over my skirt and onto one of my legs, his strong fingers spooning the taut muscles along the inside of my thigh. He didn't touch my panties, not then, but for the effect it had on my body he might as well have. My mouth opened wide. I gave a heady moan of pure excitement, shuddering as Keith's fingers teased the inside flesh of my thigh while his mouth sucked at my breast. That first brush of his fingers on a part of me that had always been concealed, that had never been touched, send a sudden flare of unexpectedly intense pleasure and excitement through my inexperienced body.\n\nHis fingers slowly moved down my leg, caressing me from the top of my inner thigh to the crook of my knee while his mouth suckled gently at one breast. I did nothing except cling to him, one hand on the top of his head, the other behind his back, breathing hard. The intense arousal his touch inspired in me stunned me, appearing from nowhere as his fingers brushed my inner thigh. I lay there, enthralled by the slow slide of his fingers on my skin, all the way down to my knee. Once there, he hooked a finger against the inside of one white knee sock and tugged it up, as if he had to make sure I was perfectly dressed. \n\nMy sock in place, his hand slid upwards until the palm of his hand rested high on my inner thigh, not quite brushing the edge of my panties. It was stimulating and it was exciting but his hand didn't move further. Not then. But I wanted him to touch me. Even while his mouth suckled at my small firm little breasts, alternating with one and then the other, I wanted his hand to touch me where he'd touched me on Saturday. My growing arousal demanded that touch. My excitement, my arousal was building slowly, building with every movement of his mouth on my breasts. With just the touch of his hand where it rested on my inner thigh.\n\nThis was a desire, an arousal, such as I'd never imagined. Never experienced. When Ginny had told me how excited she got with her boyfriends, I had never really believed her. Now, with Keith's hand on me, with Keith's mouth on my breast, I believed. It was an arousal that felt very feminine, very strong, very...adult. It was something that a girl like me who'd never had a real boyfriend had never felt before, for me it was new and unique and ... intensely exciting. I'd been wet with excitement before, last Saturday when Keith's hand had touched me there, through my shorts. I'd been wet with excitement thinking about Keith earlier in the week.\n\nNothing had prepared me for the flooding heat and wetness I was feeling as his hand rested unmoving on my inner thigh. I was liquidly slippery wet and unbearably sensitive. I could feel that growing wetness, feel the material of my thin cotton panties soaked through where they shaped themselves to my body. I could feel a growing and unfamiliar but exciting heat in my sex, a tight wet and demanding heat that was altogether new to me. My hips were twitching now, an involuntary jerking that betrayed my increasingly intense excitement. I wanted his hand. I wanted him to touch me there. I wanted that touch so much.\n\nAnd I was too timid, too inexperienced, too shy to ask.\n\nIt didn't take long for my increasing need to overcome my timidity. And I was timid, I was shy, I was embarrassed. But I wanted so much. In the end, it was impossible to resist. \"Keith ... Keith... Touch...me ... please touch me.\" I was begging. I was pleading. Almost unaudibly, my plea a quiet little gasp but Keith heard. He heard and he knew what I wanted, what I needed, even if I wasn't sure. Even if I had no real idea what I was asking for. His mouth lifted from my breasts, leaving them shining wetly with his saliva, my nipples so swollen and rubbery hard. He looked down into my eyes.\n\n\"Please,\" I gasped again.\n\nHe smiled. His hand moved on my inner thigh, sliding up and turning to cup me through my little white cotton panties, cupping me at the juncture of my thighs where I so wanted his touch. Where I so needed his touch. His strong fingers moved, found what they were searching for, pressed firmly against my sex through the wetly-clinging cotton of my panties. I knew he could feel how wet I was. How slippery wet I was. Embarrassment and excitement warred within me, then melded into one.\n\n\"Oooohhhhhhh.\" My voice cried out, a wordless cry of unadulterated excitement in response to the sudden heart-stopping surge of pleasure his touch brought to me. My head arched backwards, my back arched, somehow I tried to spread my legs wider for his hand, I tried to make myself more accessible to his touch, all without any conscious thought. My body knew what to do. I'd never imagined feeling like this, never imagined that it would feel so good to feel a man's fingers on my sex, pressing wetly into me, pressing my panties inwards where I parted with such sensitivity and sensation. \n\nHis hand lifted, moved upwards, moving away from where I wanted to feel him touching me. All the way up to rest on my stomach before his fingertips pushed under my panties. Yes! Yes yes yes. I lay there, breathing hard, panting in suspense and trepidation as his fingers slid downwards. I wasn't in suspense for very long. His fingers eased down, eased in between my thighs, brushed me lightly where I was so wet and so sensitive. I cried out as his fingers teased my lips, one finger sliding down between them. \n\nI felt his fingertip part me, part my lips, gently easing between them. I shuddered, my legs twitching wider apart as he gently explored. His mouth lifted from my breasts, he looked down at me now, his eyes looking down into mine, looking at my face, at the expression my face wore. \n\n\"So beautiful,\" he breathed. \n\nThe tip of his finger eased into me. I couldn't believe how wet I was. How slippery. How his finger tip pushing into me could feel so exquisitely exciting. I couldn't believe how much I wanted him to touch me like this. I couldn't believe what was happening to me or how much I wanted this. Wanted this with him. With Keith.\n\n\"Keith,\" I gasped as I felt his fingertip push inside me. \"Ohhhhh Keith ... Ohhhh ... ohhh.\" \n\n\"Jesus Jay-Lin, you're so wet.\"\n\nHis finger slid up inside me. My fingernails dug in to his shoulders my back arched, breathing hard, feeling his finger inside me. Feeling his finger working higher within me. Higher. Deeper. Stretching me inside. Feeling me inside. Oh god oh god oh god his finger was so thick it felt so good I wanted it I wanted it I wanted it. Sinking back down onto rug, I managed to moan out loud at last, a moan of exquisite surrender as I felt all of his finger inside me. So wet. I was so wet and his finger was so big. Strange and exciting and heart-stopping. His hand on me. His hand inside my panties was cupping me, touching me everywhere between my legs at the same time. So good. It felt so good.\n\nI lay there on my back, shaking. Quivering. Feeling his hand on me. Feeling his finger inside me. Feeling his finger exploring me, moving inside me, easing out a little and then pushing inwards again. That sliding push into me was so exquisitely pleasurable. Such delicious friction. I couldn't help moaning my enjoyment. I had to moan my enjoyment. I had to part my legs further for him, it just felt so right to lie there before him and surrender to him, give him what he wanted, give him me.\n\n\"Ohhhh Keith ... Keith...\" It felt so good. So very good. I was so wet. Wet and slippery. I could feel myself clasping his finger inside me, feel his finger penetrating me, sliding into me and now it all made sense. It all made sense and it was wonderful and I wanted more. I wanted Keith. \n\n\"Jay-Lin.\" And then his finger was easing from me, his hand withdrawing from inside my panties. Too soon. \n\n\"Nnnoooohhhh.\" I moaned my disappointment as his finger withdrew. I didn't want him to stop. I didn't want his finger not to be in me. \n\n\"Noooohhh.\" I gasped as his hand emerged from under my panties.\n\nHe held up his hand between us. I could see his finger, shining. Glistening. Glistening with my wetness. He smiled at me. He smiled and then he traced my lips with that glistening wet fingertip. I lay there shuddering, feeling his fingertip wetting my lips with my own excitement, one after the other. Done, he smiled at me and slowly, very slowly, he slid that glistening finger into his mouth, sucking it all the way in, tasting me on his finger, his eyes smiling at me. I shivered as I watched him. Watched him tasting me. Tasting my wetness. How could he? Oh. My. God.\n\n\"Ohhhhhhhhh.\"\n\nHis finger emerged, wet with his saliva now. \"You taste delicious.\" \n\nAnd then he was kissing me. Kissing me hard. Kissing me possessively. Kissing me as if I was his. As if I belonged to him. Kissing me as his hand plunged down inside my panties once more, kissing as his finger found me and slid inwards, kissing me as I moaned into his mouth, moaned as I felt his finger within me, driving me crazy. Kissing me until we both stopped, short of breath, breathing hard and his finger withdrew from me, his hand abandoned me.\n\n\"Saturday,\" he said. \"What time? Where would you like me to pick you up from?\"\n\nNeither of us said anything about my parents.\n\n\"Here,\" I gasped, \"my parents go to work around eight.\"\n\n\"Nine then,\" he said. He was breathing hard too. \"I'll call you first on your cell, okay.\"\n\n\"Okay,\" I said.\n\nAnd then I took his hand, the hand that had been inside my panties. I took that hand and I lifted it to my mouth and I kissed it. I opened my mouth and slid my lips down over the finger that had been inside me and sucked on it. Sucked on it and licked it while I looked up at him. I could still taste myself on him. At least, I thought that was me I could taste. It didn't taste like him anyhow. It was strange, tasting myself on his finger. Strangely exciting. It made my insides twist and tighten. ",
        "\"Jesus Christ,\" he said, then \"Holy fucking hell Jay-Lin, I think I better go soon.\"\n\nI slipped my mouth of his finger. \"Or?\"\n\n\"Or I'm going to tear those little panties off you and fuck you on the floor right now.\"\n\nI looked up at him, my heart pounding furiously. \"You don't have to tear them off me.\" I moved my hands to my hips and pushed them down to my knees, raised one leg, kicked my foot free so that my panties hung from one knee. My heart went from furious to exploding. My knees fell apart. My sex felt so wet, so slippery, so swollen and hot. So exposed without my panties concealing me. I wanted him to touch me again so much.\n\nWhat was I doing? \n\nBut I knew what I'd done.\n\nAnd I meant it. I really did. I was so completely willing. \n\nHe shook his head. \"Jesus fucking Christ. No, fuck no Jay-Lin, I want it to be special for you. Not a quickie on the floor.\"\n\n\"Whatever you do to me is going to be special Keith.\" I knew that. I knew if he took me right now I'd want it. I'd love it. I'd love every single thing he did to me. I wanted him that much. God, I hardly knew him and I was willing to go all the way with him. Then and there. On the floor. Was I nuts? I knew the answer to that question already. And the short answer was, well, yes. Yes yes yes. I was, like, totally officially nuts. I was lying there on the floor with my panties hanging off one leg busy proving it.\n\n\"I better go Jay-Lin, your ride's going to be here soon.\"\n\n\"Jesus.\" The clock on the wall said five to seven. Uncle Ernie would be here soon alright. And I was still in my school uniform. With my school skirt turned into a belt, my white school shirt wide open and my bra up around my neck somehow. How the heck had it got up there? I knew exactly where my panties were. Hanging off one knee.\n\n\"See you Saturday Jay-Lin.\" His hand ran over my stomach, my thighs, cupped me briefly where I was so hot and wet, where I longed for him to touch me so much, all while he kissed me. Kissed me hard. Kissed me as his finger pushed into me one last time. I moaned into his mouth, my hips jerking as his finger pushed into me, worked itself inside me. So big, I could feel it, feel him moving in me, exploring me and I moaned again in delight. In willing surrender. \n\nAt last his lips parted from mine. \"I can't wait.\" My voice was a gasp again.\n\nHe grinned down at me. \"That makes two of us.\" He took my hand in his and placed it right on that enormous bulge in his jeans that I'd felt pushing against my thigh. He held my hand there as I looked up at him, my knees quivering. My entire body quivering. Melting anew as he held my hand against him. \n\nAgainst his hard erection.\n\nWhen he released my hand, I took his hand in mine. I took it and I lifted it to my lips. I lifted to my lips and I sucked the finger that had been inside me into my mouth. This time I definitely tasted me on him. Bittersweet and a little salty, a slightly musky tang with a hint of spice and honey. Was that what I tasted like? Really? I sucked and licked his finger, my eyes watching his face, seeing his excitement, enjoying what I was making him feel.\n\n\"Fuck Jay-Lin.\"\n\n\"If you want to.\" Enjoying his reaction. \n\nHis finger withdrew, popped from my mouth. He grinned down at me, gave me another quick kiss. His hands released me. He stood, still smiling as he looked down at me and took my hands in his, lifting me to my feet. I lifted my foot, discarding my unwanted little white cotton panties, leaving them forlorn on the white sheepskin rug as I walked with him to the front door, my hand in his. It felt strange to walk with him while wearing no panties beneath my school skirt. Strange and exciting. It was stranger still walking with him and knowing that this guy I was with had been happily fingering my sex just a minute or so ago. Stranger, but even more exciting. \n\nAlready, I was looking forward to Saturday so much. Hours and hours and hours with Keith. All day with Keith. I had no idea what would happen apart from riding with him on his motorcycle. But whatever it was, if it was anything like this afternoon, and I hoped it would be, I was looking forward to it. \n\nVery much.\n\nAt the front door, Keith paused, turned towards me. Eyed me. His look thrilled me. That look told me that he wanted me. That he wanted me as badly as I wanted him. But there was one thing I needed to give him. \"My cell number,\" I gasped.\n\n\"Tell me.\" He keyed my number into his phone. I keyed his into mine. When he held his arms out to me, I almost fell into them, a last embrace before he left me.\n\n\"I don't want to wait until Saturday to see you again,\" I breathed as one of his hands slipped under my wide open top to cup one of my breasts. At the feel of his hand on me, feeling my breast possessed with such assurance, my knees turned to jelly. Yesterday, the thought of anyone touching me like that would have embarrassed me half to death. Now? Now I wanted his hand on me anywhere he chose to touch me.\n\n\"Me neither,\" he said, brushing my nipple with his thumb, sending little shivers of excitement running through me. \"But we're going to have to. I'm working the rest of the week.\"\n\n\"Would you like something to help you remember me?\" I breathed hard, my heart fluttering.\n\nHe grinned. \"I hate to ask, but sure.\"\n\nI smiled as I slipped one hand under my skirt, slid one finger along my slit, where I was so wet. His eyes followed my hand. \"Do you like how I taste?\" My heart was pounding as my finger traced its way across his lips. \"Do I taste that good?\"\n\nHis smile sent a thrill racing through my body, a thrill that pooled at my center. \n\n\"Yes.\" His answer was simple. \"I do.\" He sucked my finger into his mouth for a moment.\n\nI looked up at him as I withdrew my finger from his mouth. I looked up at him and I smiled and I took the hem of my skirt in both hands and bunched it in both hands and I lifted my skirt up, all the way up to my waist, exposing myself to him. He looked. His eyes ran over me, looked at the most intimate and private part of my body. A part of my body that no man but him had ever seen. A part of my body that no man had ever touched until this afternoon. \n\n\"Taste me then,\" I whispered, my heart pounding furiously, on the verge of exploding, my hands shaking. My face was burning. Bright red and burning hot. I'd never imagined myself doing something like this. Not something so blatant. Something so shockingly wild. For a horrible moment, while he just looked at me, I thought I'd gone too far, messed everything up. Until he smiled. His smile sent a surge of relieved excitement flooding through me, leaving me almost light-headed.\n\n\"How could I say no to an invitation like that?\" He sank to his knees on the floor in front of me, his hands moving to rest on my hips. Hips that were as naked and exposed as the rest of my body below the waistband of my skirt.\n\nI held my skirt up, exposing myself to him. Feeling myself so wet and swollen and sensitive as he looked at me, as I felt his breathe on my skin. How could I have even said that to him? I was stunned at what I'd said. Stunned and embarrassed. At what I was doing. At the words I'd uttered. Words that had come without any conscious thought or decision. I was stunned at what I was doing as well.\n\nBut I wasn't going to change my mind either. I was far too excited for that.\n\nI wouldn't have had much time to change my mind anyhow. An instant later, his mouth touched me, closed on me where I was most sensitive and sucked and lapped at me, his tongue sliding over my clitoris and moving downwards to where I was wettest. My hands released my skirt to clutch at his head. Clutch at his hair, holding his head against me as his tongue lapped at my slit, his mouth sucked at my sex. I felt his tongue slide over me, push, probe, find my entrance and push inwards just a little. My eyes widened, my mouth opened wide. Wider. \n\n\"Ohhhh Christ!\" Just like that I climaxed. My first ever climax. I wasn't even sure what it was when it happened, all I was aware of at the time was that it felt so wonderfully good, so wonderfully better than anything I'd ever felt in my life before. My vision blurred, I shook, I shuddered, I cried out.\n\n\"Ooohhhhh ... ooohhhh Jesus ... Oohhh Keith ... Keith!\" I was holding his head in both hands, my hips jerking as I simultaneously pushed myself against his face and pulled his head against me as hard as I could. I wanted what was happening to me. Wanted it so much as I was swept away. \"Ooohhhh Keith ... ohhhhh god ohhhhh god ooohhh ohhhhh ... ohhhhhh.\"\n\nSomehow, it felt like I was melting, melting into his mouth where his lips were locked so intimately to me, his tongue lashing and flickering on me. I ground myself against his mouth while that golden tidal wave of pleasure surged within me, surged and broke and washed through me, filling me with pleasure, filling every part of my body, leaving me unable to think of anything else, completely focused on what I was experiencing, able only to experience what I was feeling for a moment in time that was both ecstatic and far too short. But for that moment in time, I felt as if the doors of heaven had opened to admit me and I was in paradise.\n\nThose doors slowly shut, the ecstasy faded, paradise slowly receded from me and I was once more Jay-Lin. Jay-Lin who was half-sitting on the hallway stand, half-sitting on one of Keith's large strong hands, one leg over one of his shoulders, one foot hanging down his back, my legs spread wide, so wide. My hands clutched at Keith's head where he knelt before me, his head buried between my thighs, his mouth still on me, tenderly licking me. I looked down at the top of his head, feeling his mouth on me, feeling his tongue on me, so intimate, licking me in a way that a few brief minutes ago I wouldn't have imagined.\n\nI couldn't have imagined because honestly, I'd had no idea that you could do something like this. But he was, I had, we had, and in the aftermath of that ecstasy I'd experienced I was filled with a golden glow of pleasure where every flicker of his tongue on me left me shuddering, quivering, responsive, wanting more. He looked up, smiling. I smiled in return, not even embarrassed now, just excited. Even more excited as I saw my wetness on his mouth and his face. \n\nI was putty in his hands and in that shared smile, we both knew that. He could have taken me then and there if he'd wanted to, just as I would have given myself to him earlier. I cared about nothing else. Nothing. Uncle Ernie could have walked through the door and watched me and as long as Keith kept doing what he was doing, I wouldn't have given a damn. Fortunately, Keith had a lot more self-control than an eighteen year old girl who was just discovering the pleasures that a man could bring her. He lowered his head between my thighs, thighs which I held wide apart for him. He gave me a last tantalizing lick that had me quivering and gasping before gently disengaging himself from me. \n\nHe stood. He kissed me gently, a kiss where I could taste myself on his lips, on his tongue. \n\n\"That sure was something to remember you by ... see you on Saturday,\" he breathed in my ear.\n\n\"Yes,\" I whispered.\n\nHe let me go, stepped away from me, opened the front door and left, turning his head to smile at me as he walked down the path to the driveway and his Harley. I watched as he swung himself astride, watched as he started it and pulled out of the driveway into the street. I waved as he drove away. He waved back, once, and then he was gone, only the fading throaty burble of his Harley remaining. Even that faded away quickly. \n\nWithout Keith, I felt strangely bereft. \n\nWithout my panties, I felt strangely exposed.\n\nWithout his hands and his mouth on me, I felt a little lonely.\n\nI shut the door and looked at the hallway clock. \n\nI had five minutes to change. \n\nShit! \n\nI bolted up the stairs. I'd just made it back downstairs when Uncle Ernie beeped from the driveway. I slumped into the passenger seat beside Uncle Ernie, limp, flushed, still tasting myself on my lips.\n\n\"Look like you had a fun day Jay-Lin. Hope you're hungry?\" Uncle Ernie asked. \n\nI smiled. He had no idea how much fun my day had been. \"Starving,\" I replied. \n\nI was. I was famished.\n\n\"Chrissie picked up some KFC for you and the kids,\" he said. The twins loved KFC. Their first choice whenever they were asked. God alone knew why. \"He grinned at me. \"Hope you're okay with that.\"\n\n\"I'm fine with that Uncle Ernie.\" I giggled. \"KFC! Finger lickin' good!\" I was feeling silly. Silly and happy. I liked licking fingers. I liked licking fingers more than I'd ever imagined I would. I was already looking forward to licking Keith's fingers on Saturday. I was looking forward to having Keith lick my fingers. I was looking forward to Keith licking a lot more than my fingers. Maybe I would lick more than Keith's fingers.\n\nBut that wasn't something I planned to talk to Uncle Ernie about.\n\nHalf way to Uncle Ernie's, I remembered I'd left my panties lying on the sheepskin rug in the living room. I could only cross my fingers, hoping Mom and Dad wouldn't notice. It wasn't like they used that room much during the week. God, I hoped not. Panties on the floor would be hard to explain.\n\nComing up next - Chinese Takeout - Chapter 03 - Love Changes Everything"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "first time",
        "oral sex",
        "virgin",
        "harley",
        "biker",
        "chloe tzang"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chinese-takeout-ch-02"
}