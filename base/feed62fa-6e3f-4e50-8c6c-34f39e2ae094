{
    "title": "Espied Pt. 10",
    "pages": [
        "And she was right. A naked, freshly showered Sal stepped out of her French windows into the summer darkness. The day was over, and it was nearly time for her bed, but she had something to do first. Something to do with her neighbour.\n\nHow Sal liked being outside naked! She did not straightway go to her neighbour but instead walked a little away from her house and then across the field. There was barely any moonlight but enough to see a path familiar to her. Half way across the field she paused thinking about how she had photographed her young black friend right there. The thought of his so lovely and so big cock in her mind. She knew she wanted to suck it, take his big plum in her mouth and make it come; she knew she wanted to be fucked by him as well. As she walked on her thoughts were of him and whether he would be strong enough to do what was in her mind. Could he carry her across the field with her legs either side of his hips and she sitting on his embedded penis, feeling it sliding and pushing simply because of his moving hips as he walked?\n\nAt the edge of the wood she paused and shook her head. Her thoughts really had got quite out of hand. So not what they had been in the past. Leastways when she had had such thoughts they had been very much 'bed' thoughts but now not only did they come at other times but she was not simply imagining things but doing them. In the house next to her own her neighbour would almost certainly be ready for her, knowing she would willingly come and suck his cock until ejaculation. She caught herself running her tongue over her lips. Sal shook her head. She was becoming so naughty. A good spanking was needed or Lady Godiva's riding crop across her buttocks. Sal imagined the scene, she bent over the woman's knee, before adding the thought of the woman gently easing her thighs apart, exposing her soft sex before she pushed the black lad's penis into her.\n\nSal!\n\nShe was touching herself, enjoying her naughtiness of being out naked in the moonlight with her thoughts. It was time to go back and suck her neighbour's cock, feel it big and meaty in her mouth and be sucked herself in turn. But ahead she heard a noise. Someone or something was approaching, Sal turned to the side and made her way with a little difficulty into the trees to hide. It was a rider and a horse. Lady Godiva? But no, it was a man. Difficult to make out in the faint moonlight. Clearly it was a man who knew his way as he was not holding a torch to guide himself and his mount. Perhaps Lady Godiva's husband out for a late ride. Sal could see the man was clothed. She smiled as, behind a tree, she watched the rider disappearing unaware he was being watched by a naked and rather sexually aroused woman. Perhaps it was Lady Godiva's husband, though Sal had always rather pictured him to herself riding naked and with a large, erect penis rising up before him. A silly idea in the saddle of course. \n\nIt was the way of her thoughts. She was becoming fascinated by penises and there was one perhaps waiting for her at her neighbour's house. Or, might he be waiting there with his friends or Mr Grant. Three or four penises to enjoy and suck. Would she do it? Would she kneel and suck one after another? Sal had now seen four - her neighbour's, Paul's, Mr Grant's and, of course, her young black friend's. Lovely to see, lovely to photograph, lovely to touch. In the darkness Sal giggled, lovely to suck too.\n\nAn aroused and sexual Sal made her way back and down her neighbour's garden. She could see him through the windows. He seemed to be naked, sitting upon a settee with his back to her. Sal looked for a time, even touching herself, before stepping through the French windows. He must have heard her.\n\n\"You have a friend?\" He said it without turning around, his eyes on the television screen. Upon it the evidence of Sal's friend, her young, black friend and her. The two of them walking in the garden. Sal dressed, but the black lad naked and sporting his rather large erection. \"A young friend, I see. A well-endowed friend. Have you?\" The black lad was erect on the screen and, as Sal looked down, so was her neighbour. It stood up between his thighs. The images on the screen must have aroused him.\n\n\"No.\"\n\n\"Have you sucked his penis, Sal? It looks very suckable.\" \n\nA shake of her head and a 'no.'.\n\n\"You have not done very much then. Have you wanked him?\" He laughed. \"But I know you have.\"\n\nAnd, as easy as anything, the man brought the evidence up on the screen. There was Sal with her friend's big, black penis in her hand. Not just erect, not just really big, not just held with her fingers encircling, but actually ejaculating there in her hand. She had hardly forgotten the scene but had not really expected to see it again or for her neighbour to see and know. He could even see the tripod and her camera and would know she had been photographing.\n\n\"He comes very well, Sal, has he come on your body? You must suck him as you must suck me again. Where did you meet?\"\n\nAnd Sal had to explain. About the photography club and using the young man as a nude model. She stood behind her neighbour looking at the scenes of herself on the screen and then down at the man. He was both naked and erect, his knob up in the air. He was not wanking, at least not whilst she had been there, it was just standing showing his excitement at what he was seeing. Or was it also because of her behind him? He had not even looked at her. Did he know she was naked?\n\nShe looked down at her neighbour's erection. She liked the male organ, had developed a real taste for them... Taste! Yes indeed, she had come around to his house with every intention of sucking upon his penis. She had not sucked upon her young black friend's penis, but the thought did not displease her at all. Far from it.\n\n\"A fine model for your class. Good enough to have him modelling again in your garden. I like the way you pose him. Come and pose me.\"\n\nSal came around the settee, knelt and touched the erect penis, sliding its skin. It was lovely, being able to just walk around and play with her neighbour's organ. Not as big as her black friend's but certainly as firm and as male. What a pleasure to have them both seated there and to not only fondle but to compare and - yes - suck each in turn. Sal leant forward and opened her lips. She liked that. She worked him with both hand and mouth at the same time, as Chloe and she had done with Paul. In her mind the thought, but not the reality, of her young black friend seated next to her neighbour and she able to go from one to the other.\n\n\"Sal, go and lie on the table. Let me eat you before I fill your mouth. Come on. Leave it!\"\n\nHe smacked her bottom as she got up and turned for the table. A liberty, but she liked it.\n\nHer neighbour watched her climbing up onto the table. It gave her a thrill to slowly open her legs and show her sex to him. He walked towards her, penis pointing. Had she been closer to the table edge - if her sex was close - he could have walked straight up and inserted. Made the connection of man and woman. What would that be like? Sal had certainly visited the doctor's for The Pill. Sal was going to find out soon. She wanted to see, she wanted to feel. Her recent sexual arousal - so heightened and present compared to the Sal of only a few weeks before - was driving her on.\n\nIt was not the man's penis but his tongue that entered her. Sal spread her legs the wider almost as if she could draw it further in. The feeling so good. The intimacy so utterly pleasurable, the wonderful feel of her neighbour's wriggling, rasping, stroking tongue exploring her sex entire - going everywhere. She was wet, very wet and knew he was effectively drinking her as she would him. His so mobile tongue tip slipping along her lower lips, touching her clit - no, flicking it before returning to enter her body, was just so right.\n\nSal bit her knuckle - rather hard - her neighbour had sucked her clit and the soft, moist flesh of her sex into his mouth. The thoughts in her head were of wanting to be fucked - for a man, or men, to stick hard and big penises into her and push and pull at her - perhaps she might suck a man whilst her neighbour did just that to her. Mr Grant's, her black young friend's, Vince's, Al's, Paul's - even Mr Soames' - Sal was not worried. She wanted cock!\n\nSal pulled herself from her neighbour's tongue, swivelled around on the table, grabbed his penis and had cock in her mouth in almost one fluid movement. Mmmmm - cock! She was almost out of control, so aroused, so wanting - cocks! She sucked and stroked up and down the penis with her wet mouth wishing one was in her vagina as well. Her neighbour tried to pull away, but she grabbed his balls. He was not going anywhere - he was going to come in her mouth. And, of course, he did, almost immediately. Warm, spurting, salty pulses of man!\n\nAnd Sal would have taken more - more penises - had they been there. 'Aroused' was not the half of it. Again, she spun around offering herself to the man, his semen still unswallowed in her mouth. And rather than stuffing his penis into her as she had half wanted, her neighbour did the right thing of bending and pushing his face into her sex once more - it must have been like a hot, steaming and so wet flannel to the touch! He brought her off, really quickly, his lips holding her clit and his tongue flicking it. She was thumping the table with her fists as she came.\n\nFinally, Sal got up from the table and stood. She felt weak at the knees. She knew her wetness was running down her thighs. Her neighbour stood looking at her with wet, soft penis, his foreskin drawn back and it showing rather creamy at the end. Two adults recently engaged in 'sex acts.'\n\n\"I'll... I'll be going,\" she said.\n\nHer neighbour patted her bottom as she turned to go. \"Do come around, Sal, any time. We can do that all over again.\"\n\nSal had tried watching television but had been restless. It was two days since she had been spread upon her neighbour's dining room table and been 'eaten.' It seemed almost degrading to feel the urge to go around to next door and ask to 'do things' but he had very much issued the invitation. She did so want the touch of other fingers than her own and, perhaps a tongue! There would be no harm in just going around in the dark and peeking to see if he was there. If Vince and Al were there too, then perhaps she would scuttle back home. And if there was no one there she could perhaps have a nice little play on her neighbour's lounger on his patio as she thought about 'things' and men in the dark.\n\nVince and Al were not there, and her neighbour was not how she liked to see him - naked. He was there, though, sitting and working at his dining room table. Should she leave him be or... It was the 'or,' her arousal did not permit her to simply leave him be: not with the prospect of lying across that table and being eaten! She knocked, and he looked up.\n\n\"Vince and Al were interested in you club, Sal, they like the idea of photographing intercourse.\"\n\n\"It's not like that. It's not that sort of club. We are a photography club. We photograph nudes not sex.\" She was indignant. What would Mr. Soames or Mrs. Riley say at the idea?\n\n\"But you said he erected.\"\n\n\"An accident, nothing more, men...\"\n\n\"... have erections and you know how to deal with them, don't you Sal. Mr Grant was asking after you. Would you help him again? Would you suck his penis? He wondered if he, we, could take you out to dinner and then you might...\"\n\nSal's arousal grew. She could not help it. So wrong, but two penises to suck...\n\n\"Think about it. He's a nice old boy and was so grateful. It will be a very good dinner I can assure you. But, as to your club, you told me, you and the black lad are going to pose together. Surely, he will erect and...\" he smiled, ...\" can you resist touching, Sal, you know how you like to touch.\"\n\n\"He'll have... he'll have come beforehand.\"\n\n\"Really?\"\n\n\"Yes, in the kitchen. Where we get ready.\"\n\n\"The two of you taking your clothes off - together?\"\n\n\"Yes, of course, if we are to model!\"\n\n\"I'd like to see that, watch you in the kitchen when you make him come.\"\n\n\"No, he'll do it himself.\"\n\n\"No, he won't Sal, now will he?\"\n\nHe was undressing as he spoke. His penis was already hard. Sal knelt as she knew she would. Knelt and opened her mouth. It was becoming a habit.\n\n\"Sal?\"\n\nShe raised her eyes up to her neighbour, \"Yes?\"\n\n\"You will suck Mr Grant won't you, after dinner?\"\n\n\"I'll, I'll think about it.\" It was awful, just not right for a nice woman to think, but the idea of having two cocks before her, not just the one, one in each hand, each to be sucked alternately, was very pleasing. Mmmmm! What was becoming of her?\n\nSal stood naked in her garden, the taste of her neighbour's semen once more in her mouth. A few moments before she had been in her neighbour's house with his cock in her mouth. What was becoming of her? He had been good to her again. Had spread her on his table and eaten her. She had just agreed to have dinner with Mr Grant and her neighbour in town. He had asked again and she had agreed. Where would they take her - afterwards for the sucking? Had she really agreed, effectively, to suck two cocks together?\n\nThe day, or rather the evening, of the photography group meeting came around. Sal showered and put out a dress on her bed. In the mirror she looked at her naked body, she turned this way and that looking at herself. Should she perhaps trim her 'bush' a bit more? But it was not a beauty contest. She would be there - naked - as a model for the group. A natural model. The interest was in the nude form with a special emphasis on the contrast between the male and the female and perhaps the different skin colour between her young friend and herself: it was not glamour photography or, worse, about sex. That would be dealt with in the kitchen. There was no need, the lad could take care of his penis himself but, she knew, she would offer to help him come - ejaculate his penis so he did not embarrass himself or her, by becoming erect and showing his arousal to the whole club. She would offer to help so it all happened quickly with little delay between them entering the kitchen and appearing as nude models. She reached out with her hand and brought her fingers to an 'O' shape as if practising to... to extract semen from a male. Slowly she shook her head. Sal, Sal, Sal!\n\nSal knew she would become excited but perhaps the club would think her erect nipples were a response to the cold. Mrs. Riley, though, knew - knew too much about her. Sal had seen her eyes drop to the pool of wetness that had dripped from her sex the time before when she had been on that table and had seen her wipe it away with a cloth before the others had noticed. Maybe Sal had not been the only aroused person in the room. Had there been several stiff penises hidden in trousers? And when her young black friend had been exposed upon the table had quims moistened at the sight of his naked body and then his engorged penis? It was difficult to imagine they had not. It had been such a sight and she had seen it again in her garden and on their walk. Both an erotic sight and, without question, a beautiful sight. The way it had matched the polished mahogany of the table, it, the boy's penis, was a gorgeous reddy brown colour and did stand as if carved from wood, and polished to a perfect shine. In the mirror Sal saw one of her thighs slide against its neighbour, even the thought of her polishing his cock in the kitchen made her excited.\n\nEven before she had parked her car outside the hall Sal found she was aroused. Turning off the engine she opened the car door. Mr Soames had just parked and was waiting, camera bag in hand, for Sal to join him. He was smiling in his usual friendly fashion. Sal was careful to get out of the car in a ladylike way, not one foot followed by the next, but swinging herself around so both feet touched the tarmac at the same time with knees together. So easy, if not making the manoeuvre with care, for the material of the dress to ride up her thighs and even expose her sex to the man. She had not bothered with panties - she was going to be taking her clothes off anyway in a short while - but, actually, that made the whole careful attempt at maintaining modesty a bit unnecessary. Mr Soames was going to be seeing her naked and very likely, depending on pose, between her legs as well. Of course, a sudden glimpse of thighs and curls might well be highly erotic whereas simple nudity on the big table not at all... but she was not sure.\n\nGood to chat away with Mr. Soames, good to see Mrs. Riley and others; so normal, just like another meeting, all enthusiastic photographers together carrying camera bags: until the young black lad arrived. It was the cue for the models to get 'ready,' for the table to be prepared and the lighting set up. It would all be a little difficult for club members - dark skin and light skin require different settings - it would be a challenging evening. No doubt the photographers would relish that.\n\nThe closing of the door of the kitchen behind them left both a little nervous and tongue tied. From the babble of noise in the hall to the quiet of the kitchen. They had been left alone to prepare.\n\n\"Well,\" said Sal, \"here we are. You OK?\"\n\nThe boy nodded, \"There are a lot of people here. More than last time.\"\n\nSal nodded. As a photography group it had been steadily growing for some time. Though she had been a little surprised to see not only her neighbour, but Vince and Al come through the door. Her neighbour had said they were interested in photography and joining the group, but she had not really believed him.\n\n\"Are you still up for this then?\"\n\nThe grin that broke out on the lad's face was a delight, such white teeth contrasting with his beautiful skin. Sal wanted her camera and to take his portrait.\n\n\"Just a bit 'up,' Sal! He was undoing his belt as he said it. Down went his trousers and pants and he pulled off his tee shirt.\n\nThere was no doubting he was 'up.' His penis was as strongly erect as when talking to Lady Godiva, it was there in all its male glory. \n\nThe enthusiasm with which he had exposed himself revealed that he did, indeed, like revealing himself to her. \"You're looking well tonight!\" she said.\n\nAnother flash of teeth and then Sal watched him bending as he removed his trainers, socks and the dropped trousers and pants. What a firm bottom! Lovely to see her friend once more completely nude. Even in the bareness of the hall kitchen Sal was thinking of photo opportunities. He would look fantastic in just a pair of rubber gloves - yellow ones - washing up and turned to the camera so his cock showed hard. Best if perhaps the crockery being washed was also yellow to aid the composition and colour mixes. The closed curtains were already so right, yellow flowers on a pale brown/beige background. It would work. It would work and be not only a wonderful photograph but amusing with it - the male of the species aroused by washing-up!\n\n\"We'd better do something about that.\" It was going to be 'we,' Sal's level of arousal was not going to let her not touch it!\n\nThe boy nodded, \"Wouldn't do to walk into the hall like this.\" He was deliberately presenting himself - and he really was big!\n\nSal thought it would be a fantastic picture, the two of them walking into the hall. She, leaning on his arm, as they walked out of the kitchen with his penis so big and prominent. And everyone watching! She could feel herself getting wetter and wetter at the thought. Perhaps, or certainly, she not in her dress but walking out as naked as he. As easily as he had removed his tee shirt, Sal lifted her dress over her head. There was no hiding the way the boy looked her up and down, no hiding the bobbing of his penis. His reaction to the sudden nakedness of Sal was sexual. His eyes told it all. She knew too, that the reality was he would enjoy - a strange nervous, embarrassed enjoyment - in walking out into the hall erect with her. The strange sexual excitement of total exposure she felt. Sal was sure it must be even stronger when one had had a cock to expose. And what a cock to expose!",
        "\"Shall I make you come? We don't want to keep everyone waiting.\"\n\nThe last time in the kitchen the lad had made himself come but Sal was having none of that.\n\nThe lad looked a little sheepish, \"It might speed things up but... but I think I'll oil myself first.\"\n\nThe club liked the look of his body shining with oil. It gave the look of well polished wood to his whole body. His cock a mahogany brown, his body rather darker.\n\n\"I'll do it.\" What a job for the working girl, spreading oil all over a, handsome, tall naked black man! Sal did it properly but, of course, the touch of her hands to his skin were exciting nonetheless. How could the touch of a naked woman oiling one be anything else? Crouching to oil his legs and then thighs with that big thing sticking out; lovely to be oiling his smooth tight buttocks, the edge of her hand sliding all oily in the crack of his bottom; a careful oiling of his delicate balls in their wrinkled sack as she tried not to open her mouth and absorb his knob right there in front of her - and, of course, she had left the best until last.\n\nSal grabbed: so big and warm in her hand, a big brown truncheon with such a lovely knob at the end. As hard as anything - and how could it not be with her oiling the lad all over. So upright, so big, so strong, so sexual! She wanked it, her oily hand riding up and down making it all shiny with oil - giving it a real polish! Sal loved the feel and the action, but it was not enough, not enough in her state, not enough having covered every inch of him with her fingers. She let go and, instead, grabbed his hand, pulling it to her, between her opened thighs to her sex, the fingers were bent and uppermost and she pushed them up and into herself. \"Do me too,\" she hissed.\n\nOutside the club members were preparing - perhaps - little realising what a photographic event was going on in the kitchen. How many would, perhaps, have rather it had taken place on the table in the bright light and seen from below just what those big fingers were doing to Sal. For a few minutes Sal just revelled in being fingered before her hand once more closed on her friend's erect penis. The feel of the thing, so slippery, so substantial and firm in her hand. In her mind the thought of it pushing between her thighs, the big smooth head, streamlined, and with the sliding skin right back easing her open and then filling her - filling her first with cock and then with semen.\n\nIt was not really the moment to hear Mr. Soames call, 'we are ready for you,' but there was, in fact, no call. In the kitchen the mutual pleasuring continued undisturbed. It would have been worse had, rather than calling, Mr. Soames or Mrs. Riley knocked and come into the kitchen and seen what was happening. It was not that they were unaware of what the young lad's 'preparation' had involved the last time. After all Sal had seen, and no doubt they had, the tell-tale oozing of semen from his foreskin as he had joined them in the hall but would not, surely, have expected him to do that whilst Sal was 'changing,' still less that she would do the 'thing' for him. Perhaps, in reality, the club members were hoping he would 'display,' again, happy in the idea of seeing Sal not only naked but with a tumescent big man. A display so much more likely if he had not recently ejaculated.\n\nWorse, if they had come into the kitchen just as the inevitable happened. They did not, but what must they have thought out in the hall at hearing Sal at the moment of her orgasm? She was quite unable to supress its vocalisation. She cried out as electric spasms came from her clitoris making her shake and gasp whilst the lad's strong and big fingers pushed inside her and his thumb flicked that erect little organ. Her hand pulled the faster on his penis and, whereas he might have been intending to use kitchen paper - there was a roll to hand - instead he came freely, spurting upwards and over Sal's breasts and down onto her tummy. Sal not only felt the hot cum spurting onto her but saw it shoot out of the end of his cock.\n\nStanding there, semen dripping from his erect penis and with the recent production dripping and running down Sal they both looked at the door. Sal had been loud. Would it suddenly open and expose them to Mr. Soames, Mrs. Riley and perhaps everyone looking through? What had they thought of Sal's cry, might they think something was wrong, that the lad had 'lost control' and was 'taking her?'\n\nBut the door did not open, they were not seen with the guilty evidence of what they had been doing running down their bodies. They were left to make their final preparations - mostly involving kitchen paper!\n\nThere was then, indeed, a call of \"Are you ready?\" and somewhat sheepishly they came out of the door to appear before the assembled club members. All eyes turned to the couple. Sal could not know what everyone was thinking, was there a surreptitious excitement about the evening's potential, was everyone really there for the photography? Whether or not that was so, had they also been greeted by a rising of every penis in the room albeit hidden within trousers, to say nothing of a moistening or real wetting of pudenda, nestling warm and snug in cotton or even silk panties?\n\nSal's excitement had not abated, the thought of penises rising by way of a greeting and appreciation of naked bodies pleased her. People could clap, whether they really thought something deserved applause or not. The rising of penises was involuntary - if they rose then the appreciation was real! The two of them walked, smiling, to the table and the lad helped her up - a gentlemanly act - but it was perhaps not quite so gentlemanly how so many of the club's members' eyes dropped to the inevitable exposure of what was between her legs as she got onto the table. A difficult manoeuvre to do with dignity.\n\nUp hopped her friend onto the table, his penis safely deflated, it flapped against his skin as he jumped up onto the table, safely under control. And then the two of them adopted poses as instructed by the members. Not, of course, sexual poses though it might be debated what were and what were not sexual poses given both of those modelling were stark naked.\n\nThe trouble was, for Sal, her arousal had not abated and all those lenses, all those cameras and faces pointing towards her and seeing her exposed body did nothing to lessen that. She liked being seen and it was not as if she and the lad were not touching. Even innocent poses, like sitting back to back on the table with legs outstretched, was contact, backbone to backbone, skin to skin, and it all had her feeling sexual. They stood together as the cameras clicked, they pretended to walk, she was lifted and held so his body was vertical and hers horizontal, they sat facing each other with lower legs and feet crossing over but with genitalia respectably far apart. The members had her standing, hands resting on his shoulders with the man squatting in front of her. She saw the photographs later and found the eye drawn to his hanging balls and penis dangling against a white background. It seemed to Sal to be a deliberately sexual pose showing the meeting's interest had been in the sexual right from the start, before..., before things got out of hand. Mrs. Riley, she recalled, had suggested the pose.\n\nIt was when they had her kneeling and him standing again that it happened. To be fair there had at first been kneeling together, staring at each other as instructed, the lighting arranged to give dramatic shade; then they had had her standing with him looking up at her, but it was when she was kneeling again, and he was instructed to stand, that it happened. Inches from her face - inevitably - was his cock and it began to thicken. The lighting had created dramatic shade below. Sal just stared as it began to rise. At first only the shaft of the hanging penis visible in the light, the balls certainly all hidden, and then only the glint of the oil revealing where it was, its blackness merging with the shade. Sal could see it was growing, could hear the clicking of shutters but was rooted to the spot. Again, her friend's sexual organ was reacting, reacting to her, not privately in her garden or in the hall's kitchen but where all in the room could see.\n\nUp and up towards her it came and, as it did so, the light caught it, as if the light was moving down the shaft rather than it coming up into the light, and then the light caught the curved, bulbous end, his knob. It was like the phases of the moon. At first a narrow crescent of light, then it grew, the crescent thickening until there was a semi-circle of light, the half-moon of the penis. Up and up it came up into the light until the full moon of the glans penis showed. Big - and there was no denying its bigness - and round, the light catching and showing it to her in complete detail, the little opening at the top and the taut fraenum. It looked so sexual, so... appetising.\n\nIt was, of course, not just Sal seeing the steady rising of the penis up into the air. It was everyone in the room.\n\nSal had come perhaps fifteen or twenty minutes before but had not lost her arousal one little bit. It was probably the thought and knowledge of being watched that did it, but something snapped. She was completely unable to prevent a very public meltdown in full view of all the camera lenses, despite nobody so much as touching her! Everyone present saw it happen, one moment she was stock still, kneeling before the other model, the next she was reaching up and then down with her mouth, engulfing the head of the cock in front of her and rather noisily sucking upon it. Did the cameras then click!\n\n\"Down a bit Sal, bring it to the horizontal, lovely pose, yes, that is it!\" It was her neighbour, Sal could recognise the voice.\n\n\"Sal! What are you doing?\" Mrs. Riley's voice.\n\n\"Sal!\" Mr. Soames' ejaculation.\n\nWhat was she doing? But it was too late now. She had passed the boundary. It had moved from nude photography to... to... hard core in seconds. Sal could not help herself, her friend's knob in her mouth was so big, so soft, so good. How much could she get in?\n\nThere was certainly no 'deep throat' for the photography enthusiasts but when Sal saw the photographs later - the best ones of course - she was both embarrassed, impressed and aroused all in one. She had taken a lot of it but moreover the way her lips encircled the oiled shaft, the juxtaposition of mouth, penis and balls was so pleasing - as a photograph and as erotica. And then there was Mr. Soames' so impressive shot when her friend had pulled away, it showed her mouth so open, the knob so full and between them strands of her saliva. It was the wetness glistening that made the photograph. Wet mouth, her wet tongue just showing and the wetness of the sucked penis. \"Sex is very liquid,\" was Mrs. Riley's slightly surprising comment at that later meeting to review the photographs,but all the members present and looking at the photographs had agreed. The contrast between the session and the very proper viewing meeting rather stark.\n\nSal stared around wildly from the table top, in front of her the beautiful oiled body of her friend, his cock rigid and glistening with oil and saliva looking so like polished wood - a perfectly detailed mahogany cock, an antique dildo for ladies to pleasure themselves with, a thing to stuff in the warm, wet place between their legs and pump; around her the members of the photography group with mouths open and cameras raised; her friend looking down at her with his eyes so wide. What had she done?\n\n\"Well, well, well, Sal,\" it was Mr. Soames, \"that was a bit of as surprise. But, whilst there's the opportunity, might we try some other, err, um, erotic poses?\"\n\nAt first there was no a sound from the other members but gradually there were murmurs of agreement. There was a certain tension in the air. More than a slight tension. It could, indeed, have been cut with a knife.\n\n\"On your hands and knees, Sal.\" It was her neighbour.\n\nEasy to move from kneeling to being on all fours. Easiest in her confusion at what she had done to simply follow instruction.\n\n\"Now you stand behind her, no, don't touch your cock, just let it stand over her. Yes, that is it!\"\n\nThere was the clicking of shutters.\n\nMr. Soames spoke, \"Close your eyes, arch backwards and clench your fists, yes, bit further. Right! Just as if you are about to spurt!\"\n\n\"Mr. Soames!\" It was Mrs. Riley, but her camera clicked.\n\n\"Now kneel behind Sal, yes, as if you are about to - penetrate...\"\n\nSeemingly Mrs. Riley did not object to her neighbour's use of the word 'penetrate.'\n\n\"... not too close. Lovely.\"\n\nSal could not see but she saw the photographs later. Photographs taken by different members at different angles: perfect sides views of the two models with the lad's penis pointing arrow-like to her; A view from the end of the table with her looking at the camera and the black lad immediately behind her and her hanging breasts the only really sexual element exposed; a view down her side showing the pointing penis straight on and rear views emphasising her exposed sex with the side of the mahogany coloured shaft and a rear view of the flared knob. So peculiar for her to be seated looking at photographs at the later meeting of her most intimate areas and hearing her fellow members commenting as if they were photographs of wild birds. But as Sal knew, because the photographs were shown in sequence, there were more dramatic photographs to come.\n\nSal turned her head and looked at her friend, his eye caught hers. Was he hating it or, as he had said, really revelling in the exposure, his cock up and hard in front of all these people, the more so as he had had his cock publicly sucked and now pretending to be about to fuck. She could just see the long barrel and rounded, exposed end of his cock beyond her bottom. The cameras clicked at the new view of her looking back.\n\n\"Could you move a little closer, closer, yes,\" her neighbour again, \"Sal, look to the front. Could you spread your legs a bit more, no, not you Sal, yes, bring your cock down a bit, you're aimed at the wrong hole! That's it, perfect.\"\n\n\"That's a bit rude,\" said Mrs. Riley.\"\n\nTo Sal that seemed, somewhat, an understatement. She blinked rapidly and bit her lip. Behind her she knew, inches or perhaps even just an inch, from her sex was her friend's big erect, as firm as if carved from mahogany, cock; she was dripping with sexual excitement, both at the exposure and the thought; it was awful but she could so feel the wetness, was revelling in being seen like that, knew it was not just her friend whose sexual arousal was shown by his tumescence but her own too was revealed to all, not just in the pointing of her nipples but in the shining lubrication she could feel running from her sex onto her thighs - it would be seen! The thought of being exposed in her excitement seemed to stoke her arousal the more; her nipples were as hard as dried peas; Sal closed her eyes, she was breathing hard - another indication to the company - if someone was to touch or brush her nipples she thought she would come - visibly in front of everyone. The cameras clicked.\n\n\"Would you hold Sal's breasts?\" Her neighbour again.\n\nIt was as if her neighbour could see inside her head, as if he knew what would happen when her young friend did that. Sal held her breath, waiting for the touch.\n\n'No,' she thought, 'don't do that.' But she did not say it and the touch came.\n\nThe young man must have leant forward a little, perhaps being so careful not to touch her with his penis - she did not feel that - yet. He cupped both hanging breasts as instructed. Strong male fingers curling around her soft skin, her nipples hard against the palms of his hands. Sal quivered in excitement, perhaps enough to spoil the crispness of a photograph if taken at a slow shutter speed. The feeling from her breasts intense. Cameras clicked.\n\nIt was like the blowing of a fuse in her brain or the snapping of the coupling of a train allowing the trucks, that had been patiently following the locomotive up the hill, finding they were free, to change direction and travel faster and faster away from the locomotive, running to their destruction back down the hill. The strain of holding herself in check had become too much. Sal had certainly come not half an hour before in the kitchen but that had not assuaged her desire for more. She was no longer the woman who only occasionally masturbated quietly in the warmth of her bed. She had changed or else found her real self.\n\nA cry from her lips and Sal pushed back hard with her bottom seeking the penis of the man holding her breasts. It was both involuntary and deliberate - a contradiction all at the same time. So well lined up was the penis and its rounded knob that it went straight in in one. It was not the young man who did the deed, it was not him who took Sal's virginity, but herself, not on a normal sized penis but upon a big one, not in the soft seclusion of a bed between crisp sheets, not privately but very publicly. One moment the two sexes were separate: the next inches of thick cock were up inside her banging at her cervix. It was anything but a gentle penetration, but Sal was, after all, very wet, open and supple - more than ready for the insertion of a big cock.\n\nNot a camera caught the act, but they certainly caught what followed. It was not just penetration, Sal kept on pushing against her friend, pushing and pulling, completely absorbed in the new feel of a cock sliding in her vagina. Her mouth hung open and her eyes were screwed tightly shut as her orgasm built the more and then overflowed. She felt it all and, in a way, awfully saw it all at the later photography group meeting, the joined bodies, the cock inside her, her held breasts and her face in orgasm, in ecstasy. All had been recorded by the members' cameras from their different positions around the table. A complete study with no detail missed.\n\nAnd as her own thrusting back at the cock had slowed the young lad had taken over, pushing against her, holding her breasts hard and really pounding at her - yes, fucking her. She had slipped forwards, dropping onto her forearms leaving her bottom raised the more. She saw the photographs later - obscene or artistic? Certainly, it was of a woman being really 'taken' by a big and strong man. How his skin had shone in the photographs - oil and perspiration - and then there was the one... The photograph!\n\nIt was a photograph taken by Mrs. Riley. It was from Sal's front and showed her wide eyed, seemingly in surprise, and with the lad grimacing. The lighting was perfect, the shade glorious in bringing out the detail, the colours so right against the pale backdrop at the other side of the table, the lovely sheen of the polished mahogany table so mirrored by the equally beautiful skin tones of the man together with the contrast with the paleness of Sal's skin. Around the table the watchers could be seen, but blurred and out of focus, only the joined couple in crisp focus. It looked as if the picture had been taken, though might not have been, at the exact moment the lad came in the male way, Sal looking like she was feeling the first spurt from his penis. It was a picture that seemed to tell a story. Her neighbour, she understood, was not the only one to possess a copy blown up to poster size in a frame. It hung in his bedroom, as Sal later saw.\n\nThe silence was palpable when the joined couple's movements ceased. Such a contrast with the earlier sucking, squelching noises from the energetic copulation. Eventually her neighbour voiced perhaps what others had been thinking. \"Does anyone else wish to pose with Sal?\""
    ],
    "authorname": "Drmaxc",
    "tags": [
        "photography",
        "interracial",
        "public sex",
        "public"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/espied-pt-10"
}