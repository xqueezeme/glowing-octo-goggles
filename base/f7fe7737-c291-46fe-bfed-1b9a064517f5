{
    "title": "Write Me! Write Me Hard!",
    "pages": [
        "A blank white page on my computer screen, waiting for my thoughts, my words. I stare at it, and then...the faintest glimmerings of a naked woman. \n\nWait, what? Why is there a naked woman rising out of the whiteness? This isn't photographic paper bathing in developer. And yet the woman is appearing, rising out of nothingness, at first an aberration, a mirage of low contrast curves, barely there at first but soon staring me in the face, the green eyes and red hair I dream about, snapping into focus.\n\n\"Go away woman, you shouldn't be there,\" I say as I stare at the page.\n\n\"But I want to be here,\" she says, with a smirking smile that creases her cheeks.\n\n\"I'm married,\" I say, \"and my wife wouldn't approve.\"\n\n\"Your wife has her own keyboard, her own blank page...\"\n\n\"Yes, but...you're naked,\" I say, unable to tear my eyes away from the vision.\n\n\"I'm pretty sure her's might be too,\" the red-headed interloper says.\n\n\"I think you should go away,\" I say, and the woman pouts.\n\n\"I thought you wanted to fuck me,\" she says.\n\n\"Fuck you? Why would you think that?\"\n\n\"Oh please! It's what I'm for isn't it? What else are we good for, us fantasy girls?\"\n\n\"We could talk. I've been kinda depressed lately,\" I say.\n\n\"Talk?\" she laughed. \"You wanna talk to a naked green-eyed red-head? You did notice my tits, right? They're real you know, and you saw that I took the time to shave my pussy for you, right?\"\n\n\"Yeah, I saw. And those tits are real? Wow. I guess I shoulda known...I mean you're here on my page.\"\n\n\"And the freckles too,\" she says. \"I thought you liked this shit.\"\n\n\"Oh, I do. I'm glad you're here. I shouldn't have asked you to go away, I'm sorry.\"\n\n\"That's okay honey,\" she says, and that delicious smirk reappears. \"So, what do you want to do with me?\"\n\n\"I wouldn't mind just sitting here looking at you for awhile.\"\n\n\"Okay honey. Just don't write too many details. I hate it when I get over described.\"\n\n\"So you read the stories you show up in?\"\n\n\"Sure, wouldn't you?\n\n\"I guess.\"\n\n\"It's fun to see the variety. You writers are an interesting lot.\"\n\n\"So have you been busy? I mean, do you get a lot of work lately?\"\n\n\"Yeah, it's been a pretty good year. Quite a few women used me this year, that was kinda fun.\"\n\n\"Wow, I never thought about a woman writer using you. I guess that makes sense though, I mean hot is hot, right?\"\n\n\"Bingo! I think the whole internet porn thing helped with that. High school girls are all exposed to this hot girl-on-girl stuff now, so they're experimenting a lot more. Their writing shows it, so I've been getting a lot of work from that kind of thing.\"\n\n\"So, you mentioned being over described. That bugs you?\"\n\n\"Oh hell yeah! I mean all this minutia that some writers use. When I read some of the stuff I'm in I have to skim over a lot of it. Sorta ruins the flow for me.\"\n\n\"So what about me? Am I guilty of that?\"\n\n\"No honey, I wouldn't say so. You go to far the other way sometimes, compressing things a bit too much. I'd like to see you stretch a little more, some more character development. The Handyman was good, 'cause they all had a chance to breathe, you know?\"\n\n\"Yeah, I know what you mean. I just really love concise little stories. It's sorta my thing. Like a two hour movie instead of a novel. I'd much rather watch a movie than read a book.\"\n\n\"Ah, interesting!\" the naked red-head says. \"Now we're getting somewhere!\"\n\nI shake my head and smile at the woman on the page.\n\n\"Is it gonna screw things up if you learn too much about me?\" I say. \"I've never really talked to one of you before.\"\n\n\"Well, I probably shouldn't give this away, but we know more about you than you know about yourself. And a whole shit-load more than your wife knows.\"\n\n\"Wow, I never really thought about it that way. But maybe that's good, in a weird kinda way.\"\n\n\"Absolutely,\" she says. \"I'm the best thing that ever happened to you.\"\n\n\"Well, I don't know about that. A little full of yourself today?\"\n\n\"Maybe. My confidence is up I guess. A screenwriter just finished using me yesterday, and it's one of those 'can't miss' scripts, so I'm feeling good about myself.\"\n\n\"I was wondering where you were. I was trying to get you to show up last week and I got nothing.\"\n\n\"Sorry honey. You know you're my favorite, right?\" she says, almost batting her eyelashes at me.\n\n\"Ha! You're funny,\" I say, and a big smile takes over my face. \n\n\"So honey, what do you wanna do with me today? A big cock again? Or maybe an orgy? I love those orgies you put me in. One of those orgasms...I think it was up at Penny's camp right? That was like one of the best orgasms anybody's ever written me into. I was tingly for days. I still tell my friends about that one.\"\n\n\"Oh right! You were Mary in that one. Yeah, that was hot. You were great when you played Chloe too. That was another one of those Handyman chapters.\"\n\n\"Oh fuck yeah! I loved being Chloe! Steve made me cum and cum and cum! Fuckin' hot!\"\n\n\"Yeah, I don't know if I've been able to write that good since then. Maybe it's because you haven't been around. Something about a perfect red-head just gets my creative juices flowing.\"\n\n\"Ooo! Creative juices! I like the sound of that. I'll tell you what...why don't we have a little go right here, just you and me.\"\n\n\"You and me? You want too?\"\n\n\"Yeah honey. I've never seen your cock. Take it out for me......wow, no time wasted there,\" she laughs. \"Oh honey, it's as nice as some of the guys in your stories!\"\n\n\"No need to be polite. I'm gonna keep using you even if you're honest.\"\n\n\"No, really. I've been in stories with cocks that aren't this nice,\" she says, and she reaches off the page and takes it in her creamy white hand. \"It's okay if I come out there with you, right?\"\n\n\"Yeah, my wife's out shopping so...\"\n\nThe naked red-head emerges off the page, kneels in front of my chair and slides my hard cock into her mouth.\n\n\"Oh fuck! You're good at that!\" I say.\n\n\"Anything you think I'm good at, I'm good at, remember?\" she says breathily, stroking my wet shaft. \"What are you gonna call me this time? You got a name for me?\"\n\n\"I'm stuck on the name Rachel lately. You like it?\"\n\n\"I love it!\" she says. \"And I love this...\"\n\nRachel took me deep in her mouth again, and her long, flaming red hair fell around her face and tickled my thighs. Her hands explored my naked body as I thrusted slowly into her hot mouth.\n\n\"I love how you're naked all of the sudden,\" she said with a smirk as she took a breather. \"This fantasy shit's awesome, isn't it? I can't think of a better job in the whole fuckin' world.\"\n\nHer lipsticked lips opened again and engulfed my throbbing cock, and the length of it slipped past her swirling tongue into the depths of her throat.\n\n\"Nice touch with the lipstick,\" she said when she pulled off. \"Anything else you wanna adorn me with? Piercings or tattoos maybe?\"\n\n\"You know, I haven't written a girl with piercings yet, and not much with tattoos either. Let's try the tattoos...you don't mind?\"\n\n\"It's not up to me honey,\" she smiled, and she went back to the best blowjob I've ever had.\n\nHer tattoo covered arms circled around my thighs, and she moaned deeply as my hot meat filled her mouth.\n\n\"You know I've wanted to fuck you ever since you first showed up,\" I say, and those big green eyes look up at me and sparkle as she moans and takes my cock deep into her throat again.\n\n\"Fuck!\" I say, and I grunt as she pulls off again.\n\n\"So why don't you then.\"\n\nShe rises on her long, lean legs and bends over my desk. Her legs spread in a nice wide 'V' and her ink covered back arches down onto the cold wood. I take her soft, shapely hips in my hands and bury my face in her ass.\n\n\"Oh fuck yeah!\" she says. \"I love how you write this shit! Fuck that feels so good!\"\n\nMy tongue flicks over the sensitive parts of Rachel's perfect pussy, and she moans as a long lick goes from clit to asshole, splitting her wet warmth apart as it goes.\n\n\"Oh yeah! I'm so glad I'm back with you today,\" she moans.\n\n\"So how do tattooed girls like to be fucked?\" I ask, breathing the words onto her pussy.\n\n\"That's up to you, remember?\"\n\n\"Oh yeah. It's hard for me to focus, you're very...distracting.\"\n\n\"Why thank you. Coming from you, with so many other girls in your head, that's a nice thing to hear.\"\n\nI rammed my cock into her and she stopped talking. Tattooed girls, at least this one, like to be fucked hard.\n\n\"Oh yeah!\" she gasped as I started a quick pounding. \"I fuckin' love it! But you knew that didn't you, you dirty fucker!\"\n\nI tried to figure out the crazy shit tattooed on her back but we were both moving too much and it was a colorful blur.\n\n\"Oh yeah! Fuck me with that big cock!\" she said as I slapped into her.\n\nThe desk was moving enough for a few things to fall over, and my tall red-headed slut knocked over a few more.\n\n\"God you feel good!\" I grunted out as my cock reached the flammable stage sliding in and out of her velvety tightness. \"I'm cummin' baby! Cum with me!\"\n\nHer rising moans reached a scream at the exact moment I unloaded inside her, my powerful thrusting on autopilot as I lost my mind. My hands slid up the damp skin on her back, taking in the rich colors of her ink like it was braille as I slowed my unconscious thrusting to a simmer.\n\n\"Fuck baby, that was good,\" she breathed out quietly, my cock still throbbing inside her. \"So who's Rachel?\"\n\nI smiled as I caught my breath.\n\n\"A woman I met at a benefit. She shook my hand and didn't let go. Held it as we talked. I thought it was odd at first, but after twenty or thirty seconds it was like this conduit between us. It was really interesting. Her eyes were pretty great too.\"\n\nI let my still mostly hard cock slip out of Rachel, and she went back onto her knees to clean me off with her mouth.\n\n\"So you must have wanted to fuck her, huh?\"\n\n\"Yeah, I couldn't get her out of my head for like a week. Googled her and all that shit.\"\n\n\"Wow! No wonder you named me after her. I'm honored.\"\n\nRachel sucked my cock clean, and sat on my desk looking better than any woman has a right to.\n\n\"So honey, you got a story to put me in?\" she says.\n\n\"I'm kinda stuck baby. And now you got my mind all messed up, thinking about fucking you and the real Rachel and everything. I don't come up with ideas very well when my head's spinning.\"\n\n\"Okay honey. I'll be here when you need me, okay,\" she says, her voice getting fainter. \"You know where to find me...\"\n\nRachel evaporated, like a slow fade-out of a movie scene, and a blank white page on my computer screen stared at me.\n\nChloe? I could bring back Chloe, maybe write a stand alone story about her. I like the tattoo idea though...maybe a red-headed biker. Or a rock 'n roller. Yeah, a music story, that might be good. But first I've gotta clean this sticky mess off my hand..."
    ],
    "authorname": "riverboy",
    "tags": [
        "redhead",
        "writing",
        "fantasy",
        "muse"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/write-me-write-me-hard"
}