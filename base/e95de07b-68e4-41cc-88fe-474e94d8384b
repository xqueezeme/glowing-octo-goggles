{
    "title": "Voluntary Beauty",
    "pages": [
        "Renton put his hand on the door handle, then pulled it away. He stepped back, shaking his head again. Did he really want to do this? He looked back up at the sign, glowing in classic neon. 'Voluntary Beauty' it blazed through the slight fog that drifted into the harbor district at night.\n\nThe cool night air bit into him. He didn't even have a jacket. His damnable landlord hadn't even seen fit to let him get anything before locking him out. Sure, his rent was two months late, but there used to be such a thing as common decency. Renton had learned that the notion had long since expired in the modern world since he'd lost his job.\n\nBut did it really have to come to this? He shivered as a cool bay breeze caught him. He could take a night on the street, tomorrow he could get an officer to help him get a couple things from his apartment, but he'd still be homeless after that. He didn't have any friends left to turn to in the city, and no money left to leave.\n\nHe took a deep breath and pulled open the door. There simply weren't any choices left. Renton strode into the reception area. The bright lights forced him to blink before his eyes adjusted. The room was not unlike the lobby of a doctor's office. A few leather couches and a stack of old magazines sat on a coffee table. What grabbed his attention was the striking young woman sitting behind the counter in front of him.\n\n\"Hello, welcome to Voluntary Beauty, how may I help you?\" She smiled warmly as he wavered just inside the door. She was the mark of refined perfection. Her long brown hair was skillfully coifed around her classically delicate face. Renton nearly melted just from seeing the sparkle in her blue eyes and the way her thin red lips curved. Even the tone of her voice was angelic. It was almost too much for him to take.\n\n\"Yes, I... uh...\" Renton stammered. It was hard to even find the words. Standing in front of such a lovely young woman didn't help any either.\n\n\"I see. You'd like to do an intake interview? I know just how nerve wracking it can be.\" The woman smiled and then typed a few notes onto her interface.\n\n\"You know...\" Renton looked at her again. He stood speechless as he realized just how impossibly perfect she truly was. Certainly, there were lucky women who could match her flawless skin, regal nose and bright eyes, but it wasn't likely they would be sitting behind a reception desk, especially in this office.\n\n\"Certainly, the company naturally wants to put the quality of the process on display. I know you're probably worried and all, but it's the best thing I ever did. Now, just relax. The intake coordinator will be here in a moment and she'll answer all your questions.\" The young woman smiled and turned back to her screen.\n\nBefore Renton could make another jumbled attempt at sentence formation a side door opened, and he was forced to clamp his jaw shut, lest it start dragging on the floor. The blonde woman that strutted out had every bit of the beauty as the receptionist, and she was stacked to boot. She had the classic curves that real men drooled over and they were wrapped in almost inappropriately tight suit and skirt combo that accentuated her generous bust, round ass and ample cleavage yet stayed just inside the lines of professional.\n\n\"Good evening, sir, I'm Marigold Rollins. Gwendolyn told me that you were interested in conducting an intake interview. If you'd like to follow me, we can get started.\" She turned back towards the door she'd just stepped out of. Her blond hair flowed around her for a moment, sparkling in the office lights and just for a moment Renton thought she must have been sent straight from heaven.\n\nStill, he stood, wavering just inside the lobby. His eyes were locked on the perfect sway of Marigold's round bottom. His brain hadn't yet managed to connect all the dots again.\n\n\"I have it on good authority that she doesn't bite, unless that's your thing.\" Gwendolyn chirped from her desk. That final nudge was enough to get him moving. After a few tentative steps he managed to regain some confidence and bounded after Marigold.\n\nShe stopped suddenly at one of the doors along the long hallway and turned back to him while she opened it up. \"Please, take a seat, and we can get started.\"\n\nRenton stepped into the room and took a moment to survey it. It was surprisingly relaxed. Two of the walls held rather suggestive abstract paintings above some potted plants. The third wall had been converted into a wall screen, and was currently showing a real-depth view of the city that was so immersive it was as if they were sitting in a penthouse suite. The center of the room was simply a pair of comfortable leather chairs with a small table sitting between them but offset. The atmosphere was perfectly tuned to be calming.\n\nRenton slid into one of the chairs and tried to keep from getting too comfortable as he watched Marigold lower herself into the other chair with the grace of a dancer.\n\n\"If you don't mind, shall we start with a name?\" Marigold smiled at him warmly. Renton hadn't been near a woman this refined in some time and it took a moment for him to engage his brain enough to recognize the question and then pull together the answer.\n\n\"Yes, I'm sorry, I'm Renton Warren.\" He finally managed to get out a complete, if short, sentence.\n\n\"Good to meet you, Renton,\" She held out her hand and gave him a surprising firm handshake with her delicate fingers. \"My job here is to introduce you to Voluntary Beauty and if you are interested then I'll start on your assessments to see if you'll be a good fit. Can I assume that you've seen our ads?\"\n\n\"Yeah, I mean it's kind of hard to miss them.\" Renton nodded. There was truth in that. Voluntary Beauty had gained a reputation for blanket advertising. If you could stick an ad on it, there was a good chance there was a Voluntary Beauty spot in the rotation.\n\n\"They are a bit aggressive down in marketing. Anyway, I need just one more thing before we begin. Do you consent to being recorded for the duration of this interview? If either of us decide not to pursue a contract the record will be destroyed after ninety days.\" Marigold motioned towards three cameras that ringed the room. \"This is for our protection as well as yours and allows our psychologists to better determine if you can handle the job.\"\n\n\"Yeah, sure, you can record.\" Renton agreed. He'd gotten used to that in all the interviews he'd been on over the last year. It was always a bit creepy, but given how many crazy or desperate people there were lately, it made sense. It also protected again a slew of harassment lawsuits.\n\n\"Wonderful, now would you like anything to drink before we get started?\" Marigold asked.\n\n\"Some tea would be good.\" Renton relaxed a bit more as she smiled and tapped on a small tablet. It was barely a moment later when the door opened up and Renton was sent reeling again.\n\nThe fact that the woman who walked in carrying a silver serving tray was exceedingly lovely wasn't much of a surprise. That she was nearly busting out of an indecently sized French maid costume instantly drew his attention. The black dress was brimming with bright pink lace along every edge, from the flared skirt that did nothing to hide her thong covered mound, to an elaborate pattern that traced the lewd curves of her massive breasts. Long black stocking ran up to her athletic thighs as she balanced on a pair of heels. Her arms were encased in long black gloves that ran past her elbows. The black lace collar with a tiny silver bell completed her costume. She moved with perfect grace, and skillful allure as she crossed the room and set the tray down.\n\nRenton simply sat speechless as she bent over to stir his tea and gave him a full show of her bare bottom. Then she turned around as she held up the porcelain cup and plate to him. It took him a moment to pull his eyes off her cleavage and take the offered cup. Then, without a word she turned and walked back out.\n\n\"Is she...\" He managed to stammer out as the door clicked shut.\n\n\"Of course, all the women here are under contract with us, myself included. I know it can be a bit shocking, but we like to get that out of the way right at the beginning.\" Marigold reached down and grabbed the other cup that had been left for her.\n\n\"So she...\" Renton turned his eyes back to her as her words finally sank in. \"And you...\"\n\n\"Yes, I was a man. That is what we do here after all. Now, I'm sure you have questions and then you can decide if you want to continue.\" Marigold took a poised sip of her tea and sat back. She remained attentive, but relaxed, hoping to help put him at ease.\n\n\"Wow, I know the ads and all, but I... I just never imagined it would be so complete. I mean you're beautiful, and she was just...\" Renton let the reality of it sink in. Sure, body mod tech had come a long way in the last couple of decades. What had started as cures for serious diseases had long since been exploited for purely appearance improvements. First, it was the cure for baldness, then a special treatment for breast enlargement that simply caused them to grow larger. Full body modifications were still rather rare, and as far as he'd known, they were still not this effective.\n\n\"Stunning, and I'll tell you that she loves dressing up like that. It's all part of the program.\" Marigold replied. In fact, she knew just how much Randi liked the costume and the attention that went with it. She'd shared more than a few late night sessions with the spunky maid and after that kind of intimacy, it was easy to share just about anything.\n\n\"How does it work exactly, the program that is?\" Renton asked. As much as he'd learned the basics from advertising, there were a lot of details that we left out.\n\n\"In basic terms, we employ a custom set of nanites that are injected into the bloodstream and then over the course of about one week, they rewrite and activate different portions of DNA to transform the contract holder into the desired shape. We normally keep the contract holder unconscious for this phase and the next one. It takes about a week for the accelerated growth hormones to have their effect. When you wake up, you are one hundred percent female, and the physical transformation will be complete.\" Marigold explained. \"And I have to admit it feels pretty strange to wake up with breasts, and empty crotch and several inches shorter. That feeling fades pretty quickly though.\"\n\n\"Is that all. I mean, I've seen the ads and you women tonight, I mean I don't think I could um...\" Renton wasn't quite sure exactly how to say what he wanted. The whole notion here was hard to truly wrap his head around. It wasn't so much the notion that bothered him as the fact that he was here to sign on here as well.\n\n\"Act feminine? Yes, of course, that was a problem when the company started and I assure you that it has been addressed. Part of the transformation includes a special reconditioning program that will give you the proper instincts and skills for the role you contract for.\" Marigold smiled.\n\n\"So you're going to mess with my head too? It isn't permanent is it?\" Renton sat up a bit straighter as he thought about that. Having his body changed was one thing, he could accept that, but having his brain modified was something altogether more frightening.\n\n\"Oh, certainly not. All of the procedures are reversible, and we take great pains to make an initial copy of your body and mind before we begin so that we can restore you to your original condition at the end of the contract. The only things that will not change will be your memories of your time with us. I don't want you to worry about that.\" She tossed a lock of hair over her shoulder and gave him another reassuring smile. \"I'll be giving you a tablet with all the technical details for you to review if you are still interested.\"\n\n\"Good.\" Renton felt a bit better at that. He knew that the company had a good reputation, and that was reassuring as well. If anyone truly had problems here, then they'd have cried foul or there would have been a scandal by now. He didn't especially like the idea that his brain would be adjusted, but he could understand why they needed to do that.\n\n\"Excellent. Now, if you don't mind, I'd like to ask you a couple of questions and then we can have you take the psychological survey.\" Marigold tapped on her tablet again.\n\nRenton simply nodded and she pulled up her first question. \"So, can you tell me what brought you here to Voluntary Beauty? Please be honest as we will conduct background checks to confirm the details.\"\n\n\"Well, in all honesty, I'm broke. I lost my job last year, and I just haven't been able to find a new one. Then I saw your ads. You promise great pay and benefits for a short-term contract and job placement services after the contract expires. I've thought about it for a long while and when I got kicked out of my apartment tonight, I didn't know where else to go.\" Renton replied. It hadn't been an easy year. The economy was hard and no one wanted to cut an unemployed software developer any breaks.\n\n\"I see, I'm sorry to say that many of our applicants have similar issues before coming to us. Rest assured, that we honor all of those offers. Now, I need to get a bit personal here, but can you tell me about your sexual orientation and recent sex life?\" Marigold continued.\n\n\"Well, I'm straight. I can't say I've had much luck with women lately. Being unemployed doesn't make it easy to find a girlfriend.\" Renton explained. Not that he'd tried. It was depressing enough looking for a job without the slings and arrows of relationship issues at the same time.\n\n\"How do you feel about becoming a woman?\" She asked.\n\n\"Well, I never really thought about it before seeing your ads and losing my job. I'm kind of curious, but it's kind of freaky, to be honest. We don't have to have sex on the job do we?\" Renton asked. That was something the ads never really mentioned, despite the rolling images of beautiful women in various states of dress. The idea was both oddly thrilling and all kinds of weird. Even if he decided to, he didn't want to feel pressured into it.\n\n\"No, of course not, one of the contract stipulations is that you have the right to refuse any sexual encounter. I can say that you'll be paid considerably better if you are willing to indulge the affections of our clients, but we have many assignments where you can simply be eye candy if that is what you want. Also, I want you to know that we do not tolerate sexual harassment or violence of any kind against our contract holders. I can vouch for that personally. If you ever have an issue with a client, report it to your supervisor and it will be taken care of.\" Marigold smiled. Internal discipline was strictly enforced, and she'd personally handed several clients over to the police for crossing the line.\n\nRenton squirmed in his chair a bit. The thought of having sex as a woman was mildly disconcerting, but it wasn't his only concern either. If he didn't have money issues, he'd have never walked in the door. \"So, it pays better if you'll have sex?\"\n\n\"Certainly, our clients are looking to relive the misogynist past, and while modern women shun such things, our company is here to provide willing and well compensated women to fill those roles. Part of what they look for is a woman willing to be ravished, though the details of what would be asked varies by the assignment, as does the compensation.\" Marigold explained.\n\n\"What roles are we talking about exactly?\" Renton's curiosity was getting the better of him. It didn't hurt any that he knew he'd have to decide what exactly he was going to become if he decided to sign a contract.\n\n\"We have many eye candy roles, booth babes, receptionists, escorts, and even fashion models. You can volunteer to be sexually available in any of these roles, but it isn't required. There are also positions that are more pointedly sexual, such as porn actress, and prostitute. Normally, the more sexually active you're willing to be the better pay you can expect.\" Marigold answered. She knew this was often the hardest question for the applicants to deal with. The ones like Renton who came because they needed the money had it the worst.\n\n\"What pays the best?\" He asked. His curiosity won him over. If he did decide to try it, at least he could get something extra out of it. If they really wouldn't force him, he'd be able to think about it more. For now it was strange enough thinking he'd be turned into a woman.\n\n\"It is somewhat based on supply and demand. Usually, the best pay goes to our high-class escorts. We've found it rather difficult to find applicants with the right mix of knowledge and personality to fill the roles. Our reconditioning program can't really add knowledge to your brain, or smooth over every type of attitude. The next best pay goes to our kinkiest porn star actresses, but you'd have to be willing to do just about anything that doesn't result in permanent physical damage.\" Marigold winced a bit just thinking about it. She needed to review the demonstration videos with applicants from time to time and much of the stuff was far too extreme even for her.\n\nMarigold watched him squirm in his seat at hearing that. The last thing she wanted was to make him too uncomfortable. She knew just how hard it was just to be sitting in that chair. \"But don't worry about that right now. We have some psychological and knowledge tests that you need to take first before we can talk about what placement options we can offer, and you are free to pick what you're comfortable with.\"\n\n\"That sounds good. I don't really see myself in porn.\" Renton shuddered a bit at that. He had to admit he hadn't really considered just what it was he would do here. The simple offer of guaranteed employment and good pay was what had brought him in.\n\n\"I understand, but you can always change your mind. We've had many girls decide to get a follow on contract as porn stars after their first term in more conventional positions. If you stay away from the really kinky stuff, I hear it can be a lot of fun.\" Marigold winked. She'd even considered it as well, but she found helping new applicants so rewarding it was hard to think of doing anything else.\n\n\"I have to admit I've never had a company offer to be so flexible in an interview before.\" Renton sat back. He'd gone to far too many interviews in the last year, and it was almost always a harsh and demoralizing experience.\n\n\"Well, if our contract holders aren't happy, our clients won't be. You'd also be surprised at just how many hoops the regulators put on us to make sure we aren't abusing applicants. You'll see a bit of that when it's time to sign the contracts. Believe me when I say that it is in both of our best interests that you sign on to do only that which you're comfortable with.\" Marigold relaxed. It really looked like she would get another hire. Even with the bad economy, it wasn't easy to get applicants, especially ones that were qualified. Renton didn't look like a junkie or criminal, he was polite and reasonably well groomed. If any of that weren't true, she'd have had to toss him out, if Gwendolyn hadn't already done it.\n\nShe wasn't joking about wanting him to be happy either. The company's clients paid very well for women who didn't mind offering sexual favors or simply being eye candy in appropriate places. It was hard to do either of those things if the contract holder wasn't comfortable with their role. Certainly, the reconditioning process helped with many of those issues, but it was far from a panacea. An applicant could resist the changes, which was why they had a battery of tests to give before the rest of the process even started.\n\nRenton nodded. It made sense. \"Would you like to know anything else about me?\"\n\n\"Yes, but that's what our next round of tests is for. Do you have any more questions for me, or are you ready to start the evaluation?\" Marigold sat up in her chair and tapped her tablet again. The exam room would be ready for them when they arrived. One thing the company did well was run a tight ship. Everyone who worked here wanted to be here, the pay was great and that kept everyone working hard.",
        "Renton considered what more he could ask. There were so many questions in his head, but he knew she couldn't answer many of them and the others were questions for him as he decided if he really wanted to sign on for this job. For now, he had nowhere else to be and nothing else to do, so at least he could take their tests and find out what they were willing to offer him.\n\n\"No, I think I'm ready for your tests.\"\n\n\"Wonderful! I'll take you over to our testing room.\" Marigold stood and took a moment to adjust her skirt and then showed him towards the door. \"Don't worry, I think you'll get an excellent offer package. Just relax and answer honestly. We have strict confidentiality rules, so no matter what you decide the examination results will never be released to anyone other than the review board and our medical staff. After your contract is finished or if you decide not to sign one, all of these records will be handed over to you and all other copies erased.\"\n\n\"You're very strict about personal information here, aren't you?\" Renton asked as he followed her down the hall.\n\n\"Naturally, our clients don't want people to know they hire our contract holders and contract holders often don't want people to know that they've worked for us. We have an entire department that exists to help former contract holders mask their actual employment history with us. Keeping things private is just good business.\" Marigold replied when she stopped at another door. She opened it and motioned for him to enter.\n\n\"Here is the testing room. The tests are automated, mostly it is just answering questions. The test will adjust based on your answers. Just answer honestly as best as you can. When it finishes, I'll come back and take you to our bunkroom. I assume you would like to stay here for the night.\" Marigold waited for Renton to confirm. He nodded his head. \"Good. We should have an offer package for you in the morning after breakfast. Now, relax and get going.\"\n\nThe door clicked shut behind her and Renton suddenly felt very alone. This whole idea was crazy, but he was here, so at least he had to see what kind of an offer they could make. The only chair in the room was a rather comfortable one that sat opposite a blank wall. He took a moment and then got comfortable.\n\nThe wall lit up. It was a display screen. A voice recognition system quickly guided him through the preliminaries. His name, address, current occupation. It was all pretty standard. Then the real test began. It wasn't like any skills test he'd ever taken before. He'd watch short video clips and describe them. He talked about his childhood and relationships. For all the hours of porn he'd watched, he found that he didn't understand a fraction of the sexual questions asked.\n\nThe test took hours. The striking young maid stopped by several times with drinks and snacks as he continued. He worked through a knowledge test that bounced from history to politics, art and sports. They had him play games, from simple board games to fighting simulations. As each test finished, he had no idea what to expect next, and quite often found elements mixing together. By the time it was over, he didn't think there was anything that they didn't know about him, what he knew or how he thought.\n\nIn fact, he wasn't sure the test was over until the door opened behind him and Marigold stepped in. She was wearing little more than a chemise and lace panties, yet somehow managed to retain that look of refined beauty that she'd mastered so well. She smiled at him warmly, even though his eyes couldn't resist leering at her soft breasts as they stretched her top.\n\n\"Thank you, Renton, I know the test can be a little grueling, but you've finished. Our techs and psychologists will review your answers and pull together an offer package. In the meanwhile, is there anything else I can do for you before I show you to your bunk?\" Marigold grinned wantonly as she stood in the doorway. Renton wavered. He couldn't believe she could really be offering what his gut told him.\n\n\"Why... why are you dressed...\" Renton stammered a bit. It had been a long day for him, draining in a way that he could scarcely describe. As deliriously attractive as Marigold was, he hadn't been prepared for this.\n\n\"Well, if you decide to sign a contract this will be your last night as a man for quite some time. I just thought, if you'd like, we can make sure it's a memorable evening.\" Marigold smiled again and sauntered over to where he stood. \"I assure you, you won't regret saying yes.\"\n\nRenton stood there stunned. He knew that Marigold had been a man, not that anyone who'd meet her on the street could ever have guessed. Given that he was seriously about to undergo the same change, that wasn't as disturbing as it might have been otherwise. Honestly, his brain didn't even go there, it was stuck on 'crazy hot woman wants to fuck me silly'. That never happened to him, and someone as drop dead gorgeous as Marigold usually only gave him attention long enough to knee him in the groin.\n\nMarigold simply smiled and grabbed onto both his hands and slowly, gently placed them on top of her breasts so that her pert nipples were poking into his palms. She'd seen this kind of awestruck stupidity before, and if there was one way to snap him out of it and get the desired result it was a giving him two heaping handfuls of boobs.\n\nThat got his attention. Her breasts were full and ripe and she was pressing his hands into them. Renton instinctively squeezed them both, and heard her give him a husky gasp. His cock responded in kind, as she leaned forward and planted a sensual kiss on his wavering lips. Again, his automatic responses came to his rescue as returned her kiss. She was soft, yet eager, and it drew him out of his stupor.\n\nAfter a moment of trading passion she pulled back again. She looked up at him with her wicked grin. \"Shall we retire to my room?\"\n\nThis time Renton was ready. He gave her chest another caress. \"Yes, I'd love to.\"\n\nMarigold pulled him along, leading him down the corridor and then up an elevator. The whole time she was making sure he didn't get cold feet. She pressed up against him, stroked his crotch, and made sure his hands were always sliding over one soft curve or another.\n\nWhen they finally got to her room, she knew he was as hard and ready as any man could be. She felt a bit sorry for him as she recognized the signs of a man who hadn't enjoyed the pleasures of a woman for a while. As she pulled him towards the bed, she kissed him. Marigold managed to strip off his shirt and remove his pants without him missing a beat. It was a skill she'd picked up during her time here, and by the time they tumbled onto her silk sheets he was naked and she was down to her panties.\n\nRenton felt like it was some kind of dream as he slid onto his back, with Marigold on top. Her soft breast jiggled against him as he reached down to pull off her panties. He struggled for a moment before she reached down and took his hand. She led him with one firm tug, and tore the soft lace away from her mound.\n\nShe let him toss her panties away. His hands came back to stroke her thighs firmly as she straddled his crotch. Marigold smiled to herself as she felt his passions growing. Men always liked that little trick, and she'd come to enjoy it as well. She had a drawer full of easy to tear panties just for these moments.\n\nMarigold gave him one more wet kiss and then pulled herself up until she had her pussy lips poised right above his throbbing shaft. She paused for a moment so he could enjoy the sight of her naked flesh above his. She loved the looks men gave her when she did this, knowing that for so many of them, she was as an angel fallen from heaven. It made the next moment so much easier.\n\n\"Oh, oh god!\" Marigold moaned as she pressed down. No matter how many times she did it, the feeling of a cock sliding into her was still wickedly alien. She'd come to enjoy, even crave it, but deep inside she never forgot. The moment was fleeting; the demands of her flesh drove it from her mind. She was wet, and he was so hard that she easily mounted him, taking his hardness into her depths.\n\nRenton gasped as well, digging his fingers into her thighs. It was hard to keep under control as she worked her hips down onto him. The way she twisted her hips as she bore down on him, and especially the way she looked, her eyes closed, her mouth parted just slightly, was enough to drive him to the edge.\n\nMarigold knew exactly what she was doing, and paused as she planted her ass onto his thighs. Her chest heaved as she panted; the feeling of impalement was easily driving her wild. Renton may not have been the most well hung man, but that really never matter to her. She wondered sometimes if that was just an effect of how her new body had formed or if it was how women normally felt. The truth was it didn't matter, the sensations she experienced were so amazing, so wonderful, that she couldn't care.\n\nThe trick was sharing that pleasure, and in that she knew she had to walk a fine line. He was near the edge, his throbbing hardness was eager to explode, yet neither of them truly wanted that, not just yet. Marigold held herself, gently squeezing down upon his hardness as he shuddered under her, clearly fighting to keep control. Slowly, she leaned down. First she stroked his chest, until she was low enough that her dangling breasts molded into his hard muscles. Her hair cascaded around his head as she lowered her mouth onto his and finally, they kissed again, deeply, passionately as she gave him the time to regain his restraint.\n\nHis hands slowly released her thighs and began stroking her. Marigold responded in kind, slowly, gently working her hips on him, enough to make them both let out gasps of pleasure. His hands found her breasts again, and now they squeezed and molded her tender flesh as she ground and humped herself faster and harder. He pinched her nipples and she squeezed down on his shaft.\n\nThey moaned together, their shared passion pushing both towards release. Renton was gasping, fighting to keep together as she worked her hips, he tried to meet her with thrusts of his own, but she was keeping control, setting the pace. By now it was too much, and his needs took over. He pulled her to him, wrapping his arms around her back and ass. He held her tight for a moment and then with one frantic, flailing roll, he managed to roll her onto her back. Somehow he was still inside her, except now he was between her thighs, his chest pressing down on hers and he was now in the lead.\n\nMarigold wailed as he reached for her breasts again. She pulled her legs open wide, knowing just what was about to happen. She'd summoned his passion, taken the weak flame inside him and turned it into a raging inferno. Now, she'd know just how much of a man he could be.\n\nRenton tried to restrain himself. His first thrusts were measured and careful. He enjoyed the way she whimpered and sighed as he slid in and out of her seething passage. Yet, that very joy melted his restraint. His thrusts grew faster, harder. Marigold was meeting his passion as well, thrusting her hips to his and pressing her chest into his strong hands.\n\nThe sounds of flesh slapping into flesh and cries of passion echoed around Marigold's room as Reston frantically pumped into her eager flesh. He'd not been this aroused in years, and she was letting his enthusiasm push her towards that wonderful peak. Then, finally, he couldn't take it any more and he thrust deep into her warm passage and his cock fired his seed into her. Marigold felt the jarring thrust and as he ground into her aching pussy she felt her own orgasm boil over.\n\nTheir lips met again as their bodies shuddered in ecstasy. They panted and moaned as aching need gave way to the pleasure of release. Finally, naked and sweating they collapsed onto her bed.\n\n\"That, was... amazing...\" Renton gasped as Marigold snuggled up to him. Her breasts pressing against his arm as she gently stroked his bare chest. He couldn't remember having sex like that before. Everything about it had been perfect.\n\n\"You weren't bad yourself.\" Marigold smiled. He wasn't the best lover, she'd ever had, but she had a way of bringing out the best in any man. She knew it was part of the training, but it didn't change the results. She was more than satisfied with his performance, and now she just wondered if he'd be up for more.\n\n\"Thank you, for everything tonight.\" Renton turned to look into her sparkling eyes. He didn't know how he'd have gotten this far without her. Certainly, it was her job, at least up to this last part, but seeing her, and knowing how much she enjoyed what they'd just done did more to calm his nerves than anything else could have. \"You really do like being a woman, don't you?\"\n\n\"It has its advantages.\" She smirked before realizing how serious he'd suddenly become. \"But, yeah, I love it. I miss the other side sometimes, and once in a while it'll hit me just how weird it is having breasts and a vagina, but I've been under contract for almost six years now, and I don't think I'll ever go back.\"\n\nRenton's curiosity was piqued now. As they basked in the afterglow, he asked her more about what life was like working for the company. Now that they'd forged a more personal bond, he felt like he could open up and ask all the personal questions he was honestly dying to know. To his surprise, Marigold answered them all with the same poised dignity he'd come to expect from her. Ultimately, the life he'd have here wouldn't be the same as hers, but as they finally drifted off to sleep, he felt reassured that he could sign a contract here without worry.\n\nThat didn't mean he wasn't nervous as hell the next day when the offer package came in and Marigold sat down with him to review it. They were back in the interview room and Marigold was tapping at her tablet as he looked up at the screen.\n\n\"So that's it.\" Renton stated. He didn't know what to think really, much less what he could truly choose. It was laid out in front of him. The reality of it was really starting to hit home as he looked over the options.\n\n\"Yes, it looks like you qualify for most of the roles we have available. Though I'm a bit surprised you didn't clear for porn star though, especially after last night.\" Marigold gave him a wry smile. In truth, she could guess why, it was much the same reason she hadn't qualified for it either. They both had too great a tendency to equate sexual intimacy with romantic feelings. For an escort or even a prostitute, that wasn't such a bad thing, but she'd seen the conflicts that arose in porn studios before they instituted those protocols.\n\nRenton smiled back. If he were doing anything else, such a quip would have actually perked him up. The fact that he was choosing what he'd be doing as a woman for the next year put everything in an entirely different context.\n\n\"Now remember, today all you really have to decide today is if you want to sign on. After the transformation you can change any of the other details, including your role.. If you can, it's better to decide on everything before your changes though, that way they can tailor your new body for your role. It can really make a big difference.\" Marigold explained. She could see he was glazing over a bit. She sympathized, but she wasn't kidding either. There wasn't a doubt that different body types worked better for different roles. Strippers tended to work better with huge boobs and round bottoms, while high class escorts tended more towards the tall and refined look. Some variety was good, but that didn't change the basic reality.\n\nHe'd had the night to sleep on it, and was still mulling it over at breakfast. He didn't have any other options, though. Saying no just wasn't in the cards. The real question was just what role he was going to pick.\n\n\"Can you show me the difference in pay?\" Renton asked. Marigold nodded and swiped her tablet. Numbers filled the screen next to the choices.\n\n\"Yellow is base pay, Blue is the bonus pay for being sexually available. The base pay is fixed, so long as you meet the non-sexual duties. The sex pay is more flexible depending on just what you are willing to do and how often. I can get you a full breakdown if you want, but it's not the kind of thing you should worry about right now.\" Marigold explained. The details could get pretty nasty and it was solely at the discretion of the contract holder. He'd be able to change his mind either way at any time.\n\nRenton scanned the screen. He'd actually taken some time this morning to look over what all the positions entailed and now that he had the numbers, it made the choice somehow easier.\n\n\"What about the escort service?\" Renton asked. Marigold swiped her tablet and the main screen filled with the details of the roll.\n\n\"That's a good choice. You'll basically be on call to go to parties, look pretty and allow your client to show you off. The clients tend to pay very well, especially if you're willing to spend the night. I actually did my first contract as an escort, and I'd recommend it.\" Marigold smiled. The parties had been a lot of fun, and the men tended to be a much higher caliber than other positions. Of course, some of them got rather kinky, but she'd found that more fun than she would have expected.\n\n\"I'm kind of surprised I'd even qualify for that.\" Renton chuckled. Software guys weren't usually the party type. He knew that escorts did more than just serve as arm candy, but he'd never been the most extroverted person.\n\n\"Well, it seems your old history degree is paying off then. That well rounded background really helps, and tech tycoons love being able to talk shop with sexy women.\" Marigold replied. She didn't want to tell him that being somewhat introverted was actually a plus for much the same reason. Those kind of men didn't like their women to be overly aggressive or social. An introvert's tendency to want to talk with just one person intimately was actually part of the demand.\n\nRenton sat back for a moment and ran over his options again. There were so many, basically anyplace a woman could be objectified was on offer. Some of the roles were actual jobs, and would even require training, like a receptionist and secretary. Most of them were more overtly sexual though, from models to strippers. In some ways the choice wasn't easy, but ultimately the money tipped the balance.\n\n\"Okay, I think I'm ready.\" Renton turned back to Marigold.\n\n\"Congratulations then. Let's get the paperwork going and then we can go down to the modeling departments and start making the new you.\" Marigold grinned. Then she pulled up the paperwork and started going over the gritty details.\n\nIt took the better part of an hour to go through the contracts and all the details. Renton winced a few times at the depth of detail, but in the end he knew what he was getting into. There wasn't anything really objectionable and he was actually impressed by the amount of contractual protections had been put in place for him. It really seemed that the company did have his interests in mind as well as their own.\n\nBy the time he finished his head was swimming. As he finalized with his last thumb print Marigold gave his hand a gentle squeeze.\n\n\"Now, don't worry too much, you can basically back out any time. The only big thing to keep in mind is that the company won't pay for you to transform back if you cancel your contract early. They'll pay for your service to that point and you're free to go.\" Marigold explained. It wasn't the first time, but it did set his mind at ease a bit. Of course, if he did quit like that, he'd be stuck as a woman. That wasn't the plan, he needed the job, and he wasn't about to back out on the contract.\n\n\"It's just a lot to take in. So, what's next?\" He asked. He felt a bit queasy. There really wasn't much doubt about it. With the contracts signed, there was only one more thing to be done.",
        "\"Well, it's off to the modeling center then. Did you decide on a position yet?\" Marigold asked as she whisked him away.\n\n\"Yeah, I guess, I'll try the escort thing.\" Renton replied a bit sheepishly. No matter what she said, he still found it hard to think of her as not always being a woman, especially after last night. It wasn't exactly easy to tell her that he was planning on giving up his manhood to become a sexy call girl.\n\n\"Wonderful! I think you'll enjoy it, after the initial adjustment phase. Even with the reconditioning it can take a few days for you to really accept your new body.\" Marigold explained as they walked into another small room. This one looked more like a doctor's office, and there was an appropriately lab coat wearing woman sitting next to a terminal desk. She was appropriately stunning, but with a firmly professional trim. There wasn't an inch of excess skin showing. If not for her perfect complexion and delicately carved features, he would never have suspected that she was another of the company's transformed women.\n\n\"Hello, Renton, I'm doctor Marshal. I'm here to help you select your new body. How are you doing today?\" She stood up and shook his hand. \"We've found that most men are more comfortable discussing the transformation with a woman, but if you're uncomfortable, we do have male doctors I can call.\"\n\nRenton blushed a bit at that. He couldn't imagine this being comfortable in any regard, but he agreed it would be easier to do with a woman. \"No, I'm fine. It's just all a bit weird, that's all.\"\n\n\"I understand, but please don't think of it as strange. We use the latest in medical technology to help people craft themselves into any body shape they desire. Most of our clients at the transformation clinic are here because they want a new body, but we're always happy to make the experience as enjoyable as we can for our contract holders.\" Marshal did her best to give him a warm smile. \"Do you have any questions, if not, then we can just dive right in.\"\n\nRenton could sense that she loved her work. It wasn't hard to understand. Body issues were as old as mankind, and with the technology here, people could actually mold themselves into the shape they always wanted. He was sure that most of her patients loved her for helping them.\n\n\"I guess I'm ready to get started.\" Renton nodded.\n\n\"Great, now, just take a seat. First, let me say that we have a lot of options here. We have the very latest in nano robotic body modification technology. We can give you any body type you want, with any detail, though, since you'll be under contract I'd recommend we start with one of the base models and work from there. Have you picked out a roll yet?\" The doctor seemed eager to help and Renton tried to relax.\n\n\"Well, I'm thinking of being an escort.\" He answered. It was getting easier to say it each time, and he was actually getting used to the idea, at least a little.\n\n\"Oh, excellent. That'll give us a good place to start.\" Marshal pulled up an outline of a naked woman on screen.\n\nRenton settled in as she asked a battery of questions. It seemed like there was no detail too small for him to adjust. He'd never even thought about most of them, from the way his breasts would hang, to the color of his nipples. Did he want prominent labia or a simple groove? Did he want a long pointed nose or a button nose? What color would his hair be? Did he want an innie or an outie for a belly button? Did he want beauty marks? The questions didn't seem to end.\n\nAs he worked through the questions he found himself answering as if he was designing his perfect woman, at least until it hit him that he was going to be this woman for at least a year. In the end, he let the doctor set many of the smaller parameters to be randomly generated. The fact was that the nanos weren't perfect either, but they'd get close to the selected design. As they finished, he looked at the almost lifelike image rotating in front of him and just couldn't believe that such a beautiful creature would soon be staring back at him from a mirror.\n\nThere wasn't any reason to delay further. Once the selection process was finished, he climbed into a transformation chamber. He'd basically sleep for a couple of weeks as the nanos did their work reprogramming his DNA and reshaping his body. He'd wake up as a stunning young woman, and about to embark on a whole new life.\n\nMarigold stopped by just as he was settling into the chamber. The doctor was busy preparing the IVs and other necessities so he had a bit of time left before things would get going.\n\n\"I just wanted to wish you well before you go under.\" Marigold patted his hand gently. She knew just how nerve wracking this moment could be. It had been harder on her. There had been no one to send her off, except the doctor, and she didn't want Renton to feel that kind of loneliness.\n\n\"Thanks, I have to admit I'm a bit nervous.\" Renton smiled back as best he could. He still couldn't really believe what he was doing, but he was quickly passing the point of no return. He tried to focus on the positive side of things. For one, he'd be a knockout, and for two he'd have a chance to see what life and sex was like from the other side. It wasn't even permanent. All he had to do was suck it up for a year and he'd have a good bankroll and some help finding a new job.\n\n\"I know. Just relax, you'll wake up to a whole new adventure and I promise to be here when you do.\" Marigold squeezed his hand. She didn't have to guess about what was going through his mind, but she knew he'd be okay. As big as the change was, she'd be there to help when she could, and she knew the company was always good at taking care of the contract holders as well.\n\n\"Thanks.\" Renton looked into her eyes, trying to convey the fact that he was ready for it. The doctor came back around and finished prepping him. He felt like he was something of a pincushion, but then it was over.\n\n\"Now, just lay back and count to ten. The last injection should put you to sleep. Rest well, and we'll all be eager to see you when you wake up.\" Marshal patted his shoulder as he felt the medicine hitting him. He barely got to four before everything just kind of fuzzed out and he drifted off to sleep.\n\nMarigold and Marshal double checked the monitors. Everything was working as intended. Now all that was left was to wait.\n\nPart 2 - A New Life\n\nIt was sunlight that finally roused Rosalie from her sleep. She'd drifted along with her head full of fuzzy dreams in that timeless state between deep sleep and actually waking up. The bed felt so comfortable, so warm, almost like a womb and she so hated to think of leaving. She tried rolling away from the morning glare, but the room itself seemed to glow far too brightly.\n\nThe first full thought in her head was the fact that her apartment faced west. The second was that it was never this bright in the morning. Those were unimportant facts to the warmly bundled Rosalie, but the feeling of her chest jiggling as she rolled over was an entirely different matter.\n\nShe bolted up, doing her level best not to scream as she looked down at her bare chest and the rather large breasts poking up at her. Everything came flooding back to her now, including just where she was and what she'd done. She took a couple of deep breaths to calm down. Surprisingly, it didn't take much. It was just that groggy start that left her so easily rattled.\n\nRosalie opened her eyes again and looked down. She felt her gut clench a little as she took in the sight of her new breasts. She couldn't resist reaching up to grab them. The weight of the twin orbs felt so strange, as did the way they seemed to jiggle if she moved even the slightest bit. When her hands slid around the soft undersides, she had to bite her lip to keep from moaning. Even such a simple thing felt far too good.\n\nThat first curiosity led to the next. Having breasts was strange enough, but she could already feel the void in her crotch simply due to the fact that she hadn't needed to adjust her balls so that she could sit like this. She couldn't keep from looking. She pulled the sheets down and spread her legs. She looked down, and then giggled as she realized there really wasn't anything to see this way. She could see the top of her hairless mound and that was it.\n\nThat's when she realized she'd just giggled. Giggled like a girl! Then she giggled again at the absurdity of that instinct. She'd just confirmed that she was very much a girl; it certainly wasn't something to get worked up about anymore. She very well couldn't worry about her masculine pride when she had a chest like this and a very feminine mound between her legs. Hell, if she'd been worried about that she'd never have come here in the first place.\n\nJust as she was thinking about hopping out of bed the door popped open and Doctor Marshal walked in. She was smiling widely as she caught sight of Rosalie's naked body sitting on top of her bed.\n\n\"Good morning! How do you feel?\" The doctor asked pointedly as she opened up a small closet and pulled out a bright pink robe. \"You're free to wear this if you like.\"\n\nRosalie fought down the urge to giggle again. The moment she saw that robe all she could think was how feminine it was, and just how good it would look on her. She'd never been one to run around topless as a man, but she realized that the only thing really compelling her to put it on was the slight chill in the air.\n\n\"Sure, thanks.\" Rosalie reached to grab the robe and slipped it on as she got out of bed. It was soft, warm and fuzzy in a very comfortable way and somehow she didn't mind the fact that it showed off her cleavage. It took her a moment to even realize that her voice had changed and she let out a little gasp at how high pitched she'd sounded. She knew it wasn't squeaky or anything but after a lifetime of having a deeper male tone, it caught her off guard. Still, there was the doctor's question. \"I'm okay, just kind of adjusting. Everything's a little different and I keep kind of rethinking things.\"\n\n\"Okay, do you mind a couple of quick questions then?\" The doctor asked. Rosalie nodded and Marshal pulled up her tablet. \"Okay, are you a boy or a girl?\"\n\n\"A girl.\" Rosalie answered reflexively. Sure, it was objectively true now, but what surprised her was that she didn't even have to think about it.\n\n\"And your name.\"\n\n\"Rosalie Annette Moore.\" She answered again without thinking. She blinked as she thought about it. That was the name she'd picked out, but the fact that it wasn't her real name was just a hollow fact in her head. She really thought of herself as Rosalie. It wasn't that she hadn't been Renton, it was simply the fact that she wasn't him now.\n\n\"How does that make you feel?\" The doctor continued.\n\n\"Fine. It's all true, isn't it? I mean I was different before, but now I'm Rosalie and a girl. I guess it's kind of strange but I don't feel like it's weird.\" Rosalie tried her best to put into words what she was feeling. It wasn't the easiest thing to say, but then it wasn't everyday that this kind of thing happened.\n\n\"No, that's a perfect response. Some of the things we try to instill during your reconditioning are basic truths like that. Even when you transform like this willingly, the change can be jarring. The program smoothes over most of the rough edges though, so you don't end up having identity issues. We'll monitor you to make sure that doesn't happen.\" Marshal smiled and then motioned towards the door. \"Now if you don't mind, we have to run you through an examination and make sure everything checks out and then get you settled in.\"\n\nRosalie followed along. The examination was a fair bit more personal than she'd have liked, but the doctor remained comfortingly professional. It was equally reassuring that she'd come through the transformation without any issues. She was in all regards a healthy twenty year old woman now. There was only one real caveat to that point. She couldn't get pregnant, or even have a period. As much as it separated her from being a normal woman, she really didn't mind. The thought of having a kid was disturbing enough that she shuddered, and not having to deal with a period was a nice bonus.\n\nAfter the examination, she had a slew of other things to do. Once the doctor finished, Marigold stopped by just in time to catch Rosalie with her arms behind her back trying in vain to put on a bra.\n\n\"Can you help me here? I just can't seem to get this.\" Rosalie grumbled as she fidgeted. It was strange enough getting herself all strapped in like this, but that final necessity of buckling seemed designed to humiliate her.\n\n\"Sure, I can guess you had a lot more experience getting these things off.\" Marigold laughed as she pulled up behind Rosalie and helped guide her fingers. It took a moment, but then she managed to get it secured.\n\n\"Not as much as I'd have liked.\" Rosalie giggled and then turned around. Her breasts were now firmly encased in white lace. She had to say they almost looked sexier like this than they did naked. Still, she was standing around in her underwear, and that wouldn't do if she was going to get out of here.\n\n\"So are you ready for training?\" Marigold asked as Rosalie scanned through her wardrobe.\n\n\"I guess, they really want me to jump right in, don't they?\" She answered. The truth was she didn't really know what else to do. Her recent life had been a desperate mix of job hunting and stretching every penny that didn't leave her much time to really relax. In fact Rosalie was looking forward to having stuff to do that that got beyond figuring out how to make three meals out of a cup of ramen.\n\n\"Well, the sooner you can get trained the sooner you can be pleasing clients.\" Marigold answered. Rosalie hadn't expected to feel excited about that, but she really did. She was still plenty nervous about it, but the idea itself filled her with anxious anticipation.\n\n\"Well, then let's get going!\" Rosalie laughed as she finished buttoning her blouse. Marigold took her down to the training room. The room was filled with different sets, each one set for a specific occasion. There were bars, and dining table, living rooms and bedrooms. There were even cut away cars and limos as well. It was clear they didn't want to leave much to chance.\n\nFor the next week Rosalie virtually lived in that room. To her surprise most of the training was actually in etiquette and form. Even those cut away cars didn't deal with sex, it was about practicing how to get into and out of a car gracefully in all sorts of outfits. Certainly, there were occasional nods to her sexuality, like how to sit in an attractive way as well as how and when to bend over to let a gentleman have a more intimate view of her cleavage or panties without appearing too slutty.\n\nTo her surprise, Rosalie enjoyed most of it. It was an interesting change of perspective, and her trainers took care to walk her through each lesson patiently. She'd never been a very refined person in her old life, but she'd had decent manners, and most of what they taught were simple extensions along with gender specific things that she'd only truly master after a lot more practice.\n\nStill, the training was really just a crash course, and one thing Rosalie learned was that Voluntary Beauty believed in learning through doing. There was only so much to be learned just practicing; it was applying that knowledge at the right time that truly mattered.\n\nThat fact was what led her to this moment, sitting in front of a mirror, primping her hair with an elegant black dress draped over her. The dress was cut just perfectly to accentuate her curves and show off as much skin as possible without looking trashy. Rosalie had spent almost an hour picking it out from the choices her trainer had given her. The truth was, she was doing her best to distract herself from exactly why she was picking out the dress.\n\n\"You're looking lovely tonight.\" Marigold chirped from the door. Rosalie was glad her friend had the chance to stop by. She'd found a strange bond with the curvy blonde. Marigold had made it a point to stop in daily, and they often dined together. Today was the special though, and having some company was exactly what she needed.\n\n\"Thanks.\" Rosalie leaned back towards her reflection and started working on her makeup. The truth was she didn't need much. The transformation had given her nearly perfect skin. All she really needed was a bit of eye shadow and lipstick. Even that was optional, but she was trying for a more mature look.\n\n\"You're not too nervous about getting your first client, are you?\" Madeline leaned against the counter.\n\n\"Yeah, a bit. I mean, it'll be the first time.\" Rosalie flinched a bit just thinking about it. Honestly, she was more worried about performance than anything. She'd never been the girl before, and despite all the training, and the new instincts she could feel, she really didn't know if she could do it.\n\n\"I know just how you feel.\" Marigold smiled down warmly. That fact that Rosalie knew how true that was really helped. Marigold had walked this same road not so long ago. \"But you're really lucky. Mr. Pearson is kind of a special client and he is very good at helping you through your first time out. He's almost an official trainer, and I promise that if you just follow his lead, you'll have a great time.\"\n\nRosalie nodded. \"Have you ever worked with him?\"\n\n\"Not exactly like you will. It's a bit complicated, but you don't have anything to worry about.\" Marigold slid off the counter and gave Rosalie a quick shoulder massage. \"Now, let's get you ready and you can get going.\"\n\nThere wasn't a lot left to do, she finished her makeup, and soon, Rosalie was settled into a company limo and sent off to the restaurant where she'd begin the evening. Everything she'd been working on for the last week was coming into focus now. This was the moment she'd been hired for, and yet she couldn't believe she was going to do it. It was as simple and terrifying as dinner and an evening in his apartment. Marigold's reassurance helped, but Rosalie couldn't deny that she was torn between anticipation and trepidation.\n\nThe anticipation was almost the strangest thing. Rosalie couldn't deny how curious she was about her new sexuality. She'd had a few moments of awkward fumbling in the shower over the last week, but the training schedule had her hopping so much that by the time she hit the bed she didn't have the energy for anything except sleep. For all the training covered, even including the basics of feminine hygiene, she'd not received any in depth discussion about sex. As thorough as they were about everything else, it left her surprised they didn't cover the topic she'd have thought was the most important.\n\n\"M'lady, if I may, Norman Pearson at your disposal.\" Rosalie nearly jumped when he approached spoke from her side. She'd been so focused on the entrance that she hadn't seen him coming from down the street. She turned to see a rather tall older man standing with an old fashioned fedora in his hand. His black suit was equally anachronistic with its perfect tailoring and set with a long dark tie.\n\nAs she recovered from her shock, she extended her hand. It somehow seemed perfect for this out-of-place man to take her hand and kiss it right above her knuckles. It was like something out of an old movie, and yet he totally sold the performance. He looked like he was in his mid forties, somewhat rugged, yet his eyes were kind. Somehow, despite everything, seeing him was actually calming.\n\n\"I'm Rosalie.\" She managed to say without stammering. Her natural nervousness was something that her trainers had found endearing, and had left it intact. If anything they helped her to accentuate it for effect.\n\n\"And it is a pleasure to meet you. You look amazing, my dear. Now would you do me the honor of joining me for dinner?\" He smiled and nodded towards the entrance.",
        "Rosalie simply slid up to him and let him take her arm. Her stomach fluttered as she walked arm and arm with him. She felt strangely exhilarated by his compliment, and found it weird to walk like this with a man, and yet she was doing her best to fill her role.\n\nThe waiter quickly escorted them towards an empty table and Norman leaned over to her. He whispered into her ear. \"I can assure you that every gentleman in the room is envious that I have you on my arm, and every woman jealous of your beauty. Except for that couple over there by the window. I believe they are quite content.\"\n\nRosalie failed to stifle a giggle as she looked over at the young couple he was talking about. The fact that they were lightly kissing across their small table and holding hands was all the confirmation she needed. There wasn't a doubt that they only had eyes for each other. It was actually rather heartwarming, and certainly helped to lighten her mood.\n\n\"You'll excuse me for having placed an order for us already. I know this whole dating business can be rather disconcerting.\" Norman explained as he helped her get seated. Then he sat in his own chair. \"I can certainly ask for a menu if you'd like.\"\n\n\"No, it's fine, thank you.\" Rosalie smiled. She hadn't known what to expect, but this certainly wasn't it. Norman was in every way the perfect gentleman, if anything, it was rather unnerving. Still, it was oddly nice, if strange to be treated like a lady. \n\n\"So how are you adjusting? I know this all must be a rather big change for you.\" Norman asked.\n\n\"I'm okay, a little surprised by that really, but it hasn't been nearly as weird as I thought it would be.\" Rosalie confided.\n\n\"I'm glad to hear that. It's my hope that we'll have a very pleasant evening together, but I want you to know if you ever feel uncomfortable, I want you to tell me. I don't want you to do anything you don't want to.\" Norman explained as he took a sip of his water.\n\n\"Thank you, but I'm a big girl now, and I know what I'm getting into.\" Rosalie tried to exude the confidence she wanted to feel. It was one of the things her trainers had taught her. If she acted how she wanted to feel, it helped to actually make her feel that way.\n\nNorman chuckled at that. \"Very good, I almost believe it, and I know you want to. Still, I've helped many other girls with their first evenings before, and I don't want you to have any regrets.\"\n\n\"I won't, Mr. Pearson. I'm actually a bit surprised you care so much.\" Rosalie said before she realized how direct she was being. That was another lesson she'd need more refreshers on.\n\nNow, Norman laughed and put his glass down. \"I know. Men are rather crass beasts, aren't they. I'll have you know that I've been doing this for many years because I want this to be a special day for the girls, and that certainly includes you. I'd be lying if I said I didn't enjoy it, but then I am a man.\"\n\nRosalie squirmed a bit in her chair. She hated to admit that he was having an effect on her. Since her transformation she'd been surrounded by women, all of whom had been intensely attractive in one way or another. She'd been somewhat comforted by the fact that she still enjoyed looking at women. This was something different, he was charming, and his concern for her was heartwarming. Still, there was something more to it than that, an allure that she'd never felt for a man before.\n\n\"I can certainly understand that, the process seems to make for rather alluring women.\" Rosalie smiled a little and thrust out her chest a bit to emphasize the point. Certainly, not all the women who'd been through the transformation came out with large breasts, but it was rather common. The rest of their bodies tended to match male fantasies as well, from long hair to soft round bottoms, long legs and big doe eyes.\n\n\"Indeed, and let me assure you that your curves are simply bewitching.\" He paused to savor the bounty on offer before he took another sip from his glass. \"But there will be plenty of time for that later. First, why don't you tell me a little about yourself. What did you use to do before taking the plunge?\"\n\nRosalie resumed sitting comfortably and then started talking about herself. It seemed rather strange in a way. Her instincts had always been to let her date talk, but now that she was on the other side, it felt so good just going on. She started with her history as a software developer. The gory details went over his head, but the conversation soon turned to hobbies and interests. By the time they were on the desert course they'd spent over an hour discussing the military failings of the Russian incursions into the Chinese civil war and how they accidentally helped the cause of the restored nationalists to take Beijing.\n\nIt was far easier to lose herself in the moment than Rosalie had expected. It wasn't until she finished the last bite of a delicious chocolate cake that she realized she'd been actively flirting with him through the evening. It had just come so naturally. It wasn't just the friendly banter, it was making sure to stroke his hand when he left it on the table, or batting her eyes at him when he slipped a compliment into the conversation.\n\nAs he helped her out of her seat he paused for a moment with her hand in his. \"If you'd like my apartment is a block away. I can assure you a stimulating evening, should you join me.\"\n\nRosalie blushed a bit as her stomach fluttered. The smoothness of dinner had almost distracted her from the other half of her duties. Now the raging mix of curiosity and anxiety was building up again, and mixed with a genuine affection for her companion. She gave his hand a gentle squeeze and then smiled.\n\n\"I think I'd love to.\" She managed to say. It was hard to know just what to say. She'd never had much luck with the ladies before, and now everything she was thinking felt terribly awkward. She couldn't keep her thoughts away from the image of him naked, and her naked together. It was such a strange notion, and yet perfectly natural in a way she couldn't put her finger on.\n\n\"Excellent.\" Norman pulled her up and again, they joined arm in arm. \"Shall we?\"\n\n\"Let's.\" She nodded. She grabbed at his arm, holding him close. It felt like the right thing to do, and one thing her trainers had instilled in her was that she shouldn't fight those feelings.\n\nThe walk was as short as he promised, and he took her up to his apartment. In fact, it was a rather stylish apartment, and fully modern in contrast to his decidedly classic attire. Rosalie took a moment to take it all in, including the full view of the city. It wasn't quite a penthouse suite, but it was still a lovely vantage point. There wasn't much doubt that Norman must be well off to have such a place.\n\nStill, that wasn't why she was here. Rosalie wavered for a moment, not knowing quite how to proceed. This was certainly something she'd never done before. She didn't want to screw it up, but then she wasn't sure she wanted to dive in either. Was she really ready to become a woman?\n\nNorman swept that worry from her mind in one swoop of his arms. He drew her to him, letting her soft chest press into his suit as he leaned down, tilted her head and planted a bold, passionate kiss right on her lips. Rosalie stood shocked for a moment, her instincts trying to sort themselves out as she began to return his intimacy. The simple confidence of his action nearly made her knees buckle.\n\nJust as she felt she was going to fall apart, he pulled back and looked down at her again. Rosalie was flushed now, her heart racing. The earlier anxiety was melting away, leaving a growing eagerness. If she couldn't enjoy an evening with this man, no man could ever please her.\n\n\"Shall we retire to the bedroom?\" He smiled down at her wickedly. His hands were still wrapped around her waist. Even after that unexpected kiss, he was acting the gentleman. Rosalie didn't know just how much longer she wanted that. Even that quick taste of his dominance had left her tingling. She'd never felt that before, and it was already making her eager for more.\n\n\"Yes, please.\" She batted her eyes up at him. He smiled back down at her and in one big scoop he lifted her into his arms. Rosalie squealed in surprise as she grabbed at his hands. She tried not to fight as he carried her into his bedroom. A rush of heat flowed through her as she felt so vulnerable and yet so safe in his arms.\n\nHe slid her onto his bed and then gave her another demanding kiss as he started to take off his suit. Rosalie recovered from her shock and started to help him. Her nerves were mixing with the rising heat between her legs. She knew very well that the sooner he was out of his clothes, the sooner they could really get started.\n\nShe couldn't get over the hardness of his body as she helped pull off his shirt. The soft curves of a woman were nothing like the hard lines of a man. Rosalie couldn't stop from running her fingers along his bulging muscles before sending them down to tackle his belt. She was simply letting her new instincts rule her, afraid that if she thought about what she was doing, she'd end up paralyzed.\n\nNorman was busy unzipping her dress. She shifted her shoulders to help him pull the straps down, and then felt the thin material flutter down her body as he pulled it off. By the time she'd opened up his pants, she was next to him wearing nothing more than a pair of panties and a bra.\n\nWhen she slid her fingers into the waist band of his shorts he reached down to stop her. He then lifted her chin so that he could look into her eyes. She could see the lust in his eyes, and yet, the kindness, the concern was still there.\n\n\"I can think of nothing I want more than to be with you right now.\" He said simply. The implication left her shuddering against him. She knew this was her last chance to back away before they crossed that final line. A part of her wanted to, it was almost too much for her if she stopped to think about it. Yet, she had to know, wanted to know what it was truly like, and her body cried out for more. She pulled herself up and gave him a heartfelt kiss.\n\n\"Then please, take me.\" Rosalie could hear the lust flowing from her lips. She'd never imagined that she'd say something so wanton in a husky feminine voice. Now it was the only thing she could say. Her whole body ached for his touch, and she could feel a growing heat between her legs.\n\n\"Soon, my dear.\" Norman smiled and then let go of her hands. She stopped herself from simply pulling down his boxers and let her hand slide over his concealed hardness. She'd never felt another man's cock before, and she marveled at how big he felt to her small hands. She'd been through so many changes in perception lately that it was almost a blur, but it was impossible to look past this one.\n\nThen she took a deep breath and pulled his shorts down with one hand as the other grabbed onto his naked manhood. She quivered a bit as she wrapped her fingers around him, stroking the throbbing warm hardness in her hands. For a moment she studied it in a way she'd never studied her own. In a strange way, it was as if she'd never really touched one before.\n\nHe rolled onto his back, and helped pull her along. Rosalie squeaked in surprise, but her hand quickly found its way back to his jutting cock. Her careful explorations only seemed to fuel her curiosity. She half expected a jolt of shock to hit her, she was stroking a man's dick! With her own hands! But that outraged cry of offended masculinity never came, in its place was a strange growing excitement. He was hard for her! He was going to fill her with this big cock!\n\nThat final realization really stoked her fires. She felt a quivering ache between her legs. Objectively, she knew he could fit inside her, but it seemed so crazy, and yet wickedly hot at the same time. Rosalie couldn't hold back now, and she looked down between his legs. She'd certainly seen cocks before, and had done her best to ignore them, but this one was different. This was the cock that would make her a woman.\n\nIt was little different than any of the cocks she'd seen in porn, but she was drawn to it. It was so real, so hard, and throbbing in her hands. Rosalie slowly slid down until she was kneeling beside him with her mouth hovering mere inches away from his throbbing tip.\n\n\"That's right, you can taste it.\" He said firmly. It was permission and command in one. The very notion was making her panties wet, and she held herself over him with her mouth parted just slightly. She had to, and yet, she couldn't, could she? Her blood was boiling with desire, her whole body urging her to do this. More than that, Norman had been so kind, and so sweet that she wanted to please him, need to give him pleasure.\n\nThere were no words to say, all that she could do was lower her lips, first kissing the bulbous head and then slowly taking it into her mouth. The taste was strong and thoroughly masculine. The shock of it sent another jolt of heat through her. This was what a man tasted like, and she was sucking on him! Rosalie slid a hand between her legs instinctively.\n\nShe rubbed her silk covered lips as she took more of him into her mouth. The pure alien wantonness of having his cock rubbing the inside of her cheeks as her fingers massaged her own wet pussy was driving her wild. Her tongue caressed him, savoring his taste as she started to slowly bob her head. She couldn't manage to get all of his cock into her mouth, but she stroked and rubbed the rest of it. His gasps of pleasure only egging her on.\n\nShe nearly jumped when she felt his hand on her head, but fought down the urge. He began stroking her hair, and she kept working her mouth, lips and tongue on his manhood. Rosalie did her best to remember what she had enjoyed about blow jobs before. She was careful to watch her teeth, and did her best to suck him strongly as she worked between his legs.\n\n\"Oh... oh... that's good! But enough, unless you want me to cum.\" Norman panted, nearly breathless. His hand had slipped down to her shoulder and he was grasping at her, fighting for control.\n\nRosalie slid to a stop and then slowly pulled her lips off of him. Part of her was disappointed she couldn't finish, but she knew that could mean waiting even more before the main act. As hot as she was, she couldn't even think of waiting any longer. Norman's hands then guided her back up, until she was straddling his waist.\n\nShe realized in that moment that she was still wearing her bra. Rosalie smiled down at him, knowing what he must be wanting to see. The feeling of having so much attention directed towards her chest was still novel, but she didn't get hung up on it. She reached back, and undid the latches with far greater ease than she'd had putting it on. The bra's slight pressure on her bust suddenly eased and she took a moment to savor the feeling of freedom before she let the cups slide off her breasts.\n\nRosalie tossed the bra away as she exposed her rounded chest to him. Her breasts weren't huge, but they hung perfectly. They were round, but still held a youthful perkiness. She'd always wanted a girlfriend with such a perfect pair, but she was still glad she could share the bounty she now possessed.\n\n\"Oh, Norman!\" She moaned when his hands reached up to squeeze her. Rosalie had been surprised at how sensitive her breasts were, but now that a pair of strong masculine hands were sinking into her soft flesh, she loved it. The way his fingers felt as they squeezed and pressed into her was simply electric and when his fingers found her tender nipples she squealed with pleasure.\n\nHe continued for what seemed like an eternity. Rosalie had never imaged it could feel so good to be touched like this, but he was only adding fuel to the fires roaring inside her. Her moans and gasps of pleasure soon gave way to ever more frantic pleas for more. She didn't even know how to say it, but her body was demanding more, craving that ultimate act of womanhood.\n\nWhen his hands slid off her breasts and then down to her waist, Rosalie leaned in with him. He easily guided her onto her back, and he took up position between her thighs. He knelt there, and then reached down for the hem of her panties. She squealed again when he grasped the waist band and with on sharp pull he tore the silky lace from between her legs.\n\nRosalie felt the cool air flow over her inflamed nethers. That simple act of dominance had sent another excited thrill through her. She understood now why Marigold had done the same before. It not only enticed the man, it was a wicked way to be prepared for the real fun to begin.\n\nNow she was naked before him. Her hairless pussy lips were dripping with need, and flush with arousal. It wasn't possible to fully express how strange it felt for Rosalie. She felt so vulnerable, and yet so thoroughly aroused by that very fact. Her most intimate place was fully exposed to a man, and she could see just how ready he was to claim her eager flesh. The very impossibility of this moment was nearly enough to send her over the edge, but she held steady. As crazy as it was she could wait for what was next.\n\nNorman could sense it from her. From the way she looked at him to the way she pulled her legs open, inviting him in. He enjoyed the sight of her perfect body wracked with helpless need for a moment and then lowered his body onto her. He held himself above her chest until her nipples nearly touch him. He was poised between her legs, his cock ready to claim her eager flesh.\n\nRosalie gasped as she felt his hand cup the side of her breast. He massaged her for a moment and then shifted his hips. Her eyes went wide as she felt his hardness slide along her nether lips. Her tender flesh parted for him and he humped along her slit, covering his shaft with her wetness. It was as much lewd teasing and it was emphasizing her femininity.\n\n\"Please, oh please take me.\" Rosalie whimpered as his thick shaft rubbed against her sensitive clit. She couldn't take much more of this kind of teasing. Her hips were already trying desperately to press into his shaft, but her instincts failed her. She was at his mercy, and that very realization made her even wetter.\n\n\"It would be my pleasure.\" Norman smiled down at her. She was panting now, and shuddered as she felt his cock slide down her slit again, even as it pulled away until only the thick head was running along her wet grove. With practiced ease, he guided it down and then he pressed gently forward.\n\nRosalie grasped at his thick arms as she felt him pushing into her. He was so hard and she was so wet, that he easily popped inside. Just the feeling of his thick head spreading her lower lips was driving her wild. It was so perfectly wrong. Her new instincts finally reached a core feeling, and that conflict made her tense up for a moment. Then just as she was about to pull away from him, he thrust into her.\n\nHer cries echoed around the room as the feeling of his cock sliding deep inside drove out everything else. Inch after inch of his thick manhood slid past her nether lips. Her tender folds gave no resistance as he moved inside, stretching her pussy walls for the first time. The feeling was so alien to Rosalie, and yet the aching need between her legs had given way to a wickedly satisfying fullness. There was simply no way for her to compare the feeling with her former life.\n\nShe tightened her grip on his biceps as he drove deeper. Her toes tried to grab at the smooth sheets. It felt like he was burying himself inside her soul as he impaled her. Rosalie kept moaning and whimpering as she writhed beneath him. Then when she didn't think she could take any more, she felt the base of his cock grind into her nether lips. She let out another ragged moan as she felt him lodge in her, throbbing warmly between her thighs.\n\nHe held her like that as he balanced on one elbow. He reached up to pull the hair from her face and gently stroked her cheek. She smiled back at him, sensing his concern. She let her hands start stroking his arms, and relaxed her thighs a bit. The strangeness was quickly giving way to the needs of her flesh, and with him filling her, there was only one thing she needed now.",
        "He leaned in to kiss her again, and she threw herself at him. Their lips mashed together and her tongue danced with his. The raw feeling of fullness was driving her wild, and she tried working her hips against his, attempting to find a way to satisfy the growing need for more.\n\nWhen he finally pulled his hips back from her, it was almost too much. The feeling of his shaft moving inside her was so depraved, and yet exactly what she was yearning for. He nearly reached her gates, holding his cock just inside her and then thrust deep again. Rosalie had to throw her head back, gasping at the raw sensation almost too much. He repeated that long, slow withdrawal and she was nearly delirious when he filled her again.\n\n\"More, harder, please, fuck me harder...\" She panted, awash in the savage desires. There was nothing else for her beyond the powerful shaft assaulting her flesh. He kept his pace, and Rosalie wailed with every firm thrust and squirmed with every aching retreat. She had lost what self control she possessed, but he kept his pace, even as she ground her hips against his. It was all too much for her.\n\nThen he pulled out. The sudden emptiness left Rosalie quaking. She was panting, helpless, delirious with need. When he rolled her over and positioned her on her hands and knees, her only response was to spread her legs and present her pussy for him. She'd never really thought about having sex like this, not as a woman about to be taken from behind, but that fact didn't stem her arousal, her need or her desire.\n\n\"Yes! Mount me! Fuck me!\" She begged as she wiggled her ass up at him wantonly. Her need was on full display. When his hand gripped her hips, she nearly swooned, but managed to keep her position.\n\nThis time he didn't tease. Rosalie squealed with joy as he slid into her, burying his cock deep inside with one hard thrust. She pressed back against him, writhing in passion for a moment before he tightened his grip and then pulled back. She whimpered for a moment before he stuffed her pussy again. Before she could recover, he built up a pace and Rosalie was soon bouncing from his pounding thrusts.\n\nWhere the missionary position held some vague familiarity to her, being fucked like this was entirely new. It felt so wild, and the thrusting hardness was almost too much. She tried to move with him, but he always tightened his grip and kept her as his helpless, wanton slut. Rosalie panted and grunted under his assault, relishing the raw sensations from the smack of his thighs against her ass to the way her breasts bounced with every hard thrust. The objective truth now burned itself deep; she was completely a girl.\n\n\"Yes! Harder! Harder!\" She squealed between soul splitting thrusts. The impossibility of being so deeply filled from behind was only exciting her more. His pounding rhythm had become almost a blur to her, as her whole body rocked with him. He was slamming into her harder with every round. His strained grunts were now nearly as loud as hers. She could feel a tightness inside, yearning for each filling stroke and yet growing tighter as well. The need was so strong, so fierce that she was left helplessly begging.\n\nWhen he finally let out a ragged shout of pleasure and drove deep into her, she cried out in surprise. The sudden deep fullness, and the way his hands gripped her hips, it was all just too much for her. Her cries echoed the room as she was slammed with her first orgasm. That savage tension broke inside her, and her whole body quaked with pleasure. The feeling of his cock twitching inside her, filling her with semen, was simply the last straw to her control.\n\nRosalie nearly collapsed as he filled her. It was only his firm grip that managed to help her stay on all fours. Her pussy clamped down on his shaft, milking the last of his cum as she moaned from the primal pleasures coursing through her. It was all so raw, so powerful that she was simply left swimming in a state of bliss.\n\nFinally, he finished cuming and pulled out of her seething passage. She whimpered at the sudden feeling of emptiness as he guided her onto the bed, helping her to lay on her side as he found his place beside her.\n\nShe recovered enough to turn around and look at him. She imagined she probably had the silliest grin going from ear to ear, but she couldn't deny how good she felt. She reached out with a weak arm and let it fall onto his chest. \"Thank you, thank you so much.\"\n\n\"The pleasure is all mine, I assure you.\" He smiled warmly and placed his hand over hers.\n\n\"No... it wasn't.\" Rosalie smiled back with that same stupid grin. \"I never imagined...\"\n\n\"Well, I'm very glad you enjoyed yourself. When you're ready again, I have plenty more to show you tonight.\" Norman squeezed her hand. Rosalie almost giggled at that. He'd certainly shown her enough already. If half the sex was as good as this, she could easily understand why Marigold hadn't decided to switch back yet. Between the money, the perfect body and the amazing sex, it was hard to think about any downsides.\n\n\"That sounds wonderful, Norman, but why do you do this, why are you so kind?\" She asked, that glazed pleasure allowing her to bypass any reservations about being so direct. It was the one thing about this evening that still surprised her. Certainly, her role as a contract holder was to please her clients, but this client was anything but what she'd expected.\n\n\"'I'll tell you a little secret, then, one only a few of the girls know.\" He smiled and pulled Rosalie a bit closer so that her soft breasts could press into him again. \"I know so much about how you feel and what this first night means because several years ago, I was one of the first contract holders. I spent my first night in the arms of a man who didn't know what I was, or what I had been. As good as it felt, it had left me hollow, and I vowed that after I changed back, that I would make sure that every girl had the best first night I could manage. I have a whole club of former contract holders that work with me, but I let Marigold pick out the special ones for me.\"\n\nRosalie was speechless. It certainly wasn't what she'd expected, but it made so much sense. He was right about how special this first night was, and she couldn't be more grateful to have been in his tender hands. She knew how big a secret this was for him as well. There was still a lot of stigma out there for people who would try to dance on both sides of the gender line. Those who picked a side had gained a lot of acceptance, but going back and forth was still seen as wickedly decadent by a great many people.\n\nThey rested in silence for several minutes, only sharing a gentle stroking before they both recovered from that first frantic coupling. Rosalie was the first to move, and she suspected he intended for it to work out that way. She rolled closer, until she was on top of him with her breasts jiggling against his chest.\n\n\"Thank you, Norman, it really does mean a lot to me.\" She smiled and gave him a quick kiss on the cheek. \"Now, are you ready to show me more?\"\n\nHe chuckled and wrapped his arms around her. He gave her a warm hug and then grinned. \"Of course, my dear Rosalie, anything for you.\"\n\nThat first orgasm was not the last. Over the course of the evening, he taught her more than she could have imagined about her new body and the pleasures she could both give and receive. More than once they'd collapsed, panting and gasping in ecstasy. It wasn't until the early hours of the morning that they finished, both as content and exhausted as any pair of lovers could be.\n\nThe next morning was a far more rushed affair. Norman had his own work to attend to and Rosalie needed to return to the company. To her surprise, Norman had a set of more casual clothes for her, and helped gather her scattered belongings from the previous evening. After a quick cup of tea and a light meal, they both went their separate ways.\n\nRosalie decided not to take a cab to her new home. It was too nice a day, and she was still basking in the afterglow of an evening unlike any she'd experienced. This new life of hers was still a surprise to her, but after last night, she lost many of her remaining worries. The date had been fun and the sex had quite truly blown her mind. For the first time in a long while, her life was looking up. She had a job, a place to stay, and many adventures ahead. She never imagined that she'd think it, but it was good to be a girl!\n\nThe End"
    ],
    "authorname": "Farleven",
    "tags": [
        "transgender",
        "sci-fi",
        "transformation",
        "maid",
        "mind alteration",
        "gender bender",
        "sex change"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/voluntary-beauty"
}