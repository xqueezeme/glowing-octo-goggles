{
    "title": "Murder Mystery Weekend Pt. 03",
    "pages": [
        "Part 3 Saturday \n\nSaturday morning dawned grey and cloudy. Though I was tempted to sleep in, there was a lot to get done today. No need for a shower, though; no doubt I would be up to my neck in the lake later on.\n\nCraig and Ben were already at work in the kitchen, cooking up breakfast. Eggs, sausages, bacon, all of it smelling great. Claire and Eliza were also awake, getting the table set, and putting out fruit, bread, and breakfast cereals, for those who were so inclined.\n\nClaire gave me a funny look. Was she having second thoughts about out tryst in the boathouse? Or did she regret having given me the Bible? Maybe she was just a bit self-conscious in the light of day, with others around.\n\nThere wasn't much for me to do, except dig in. Teresa and Lena emerged from the master bedroom, and wished everyone a cheery good morning. Once again I couldn't help but notice how ungodly tall Lena was. She sat down opposite me, and asked if I had slept well. Sitting down, she didn't seem so intimidating. Her height wasn't so apparent, and she looked lean, rather than thin. But I was struck by her exotically beautiful face.\n\nOver the next half hour, most of the others came downstairs. Leo looked a little worse for wear, and Eric was definitely listing to starboard. Sheila looked dishevelled, and still hung over.\n\nI wished her an extra cheerful \"Good morning!\".\n\n- \"Fuck off.\" she muttered, grumpily. \"How can you be happy this early?\"\n\nIt was late morning before everyone had finished breakfast - except Barbara, who had yet to put in an appearance. Teresa assigned duties: the girls on cleanup in the kitchen, while the guys were to get started on the outdoor chores. Eliza reminded us of what needed to be done, but Leo knew it all well, having been here many times before. \n\nIt didn't take us very long. Taking the dock out of the water isn't complicated: it just requires at least four strong guys to lift it. As expected, I ended up in the water, with Craig. Ben and Eric got the other end, while Leo supervised. When that was done, we brought the boat in, and winched it into the boathouse. The whole thing only took an hour or so. Many hands - short work.\n\nI did get the chance to ask Leo a question.\n\n- \"Who did you draw after Lena, last night?\"\n\n- \"Barbara, and then Eliza.\" he said. \"You?\"\n\nI told him. But my mind was busy, pondering the implications. Teresa knew of Leo's crush on Eliza. Was my ex-girlfriend trying to set them up? Was she playing matchmaker with me as well?\n\nBack inside the house, we were told to get back into costume. I headed into my private den to dress up. I was almost done when I heard a tap on the door. Before I could open it, Claire slipped into the room, closing the door behind her. She looked visibly nervous.\n\n- \"Geez, Claire.\" I said. \"If you wanted to watch me get dressed, you should've told me. I would've waited until you got here.\" She was dressed in her own costume, and looked marvelous - but she wasn't having quite the same effect on me as she had yesterday.\n\nShe shook her head. \"It's not that, Colin. I wanted to talk to you ... about last night.\"\n\n- \"What about last night?\" I asked.\n\n- \"Ummm ...\" \n\nI took her hands in mine. \"Claire. Last night was magical. Unforgettable. I will treasure the memory for the rest of my life.\" Then I paused, to see what effect my words were having on her. \"But that isn't what you want me to say, is it?\"\n\nClaire shook her head. She was close to tears. \"I'm sorry, Colin. But .. can we say that it never happened?\"\n\n- \"I'm not sure that I understand what you mean.\"\n\n- \"I mean ... can we pretend that it didn't happen?\" she said.\n\n- \"OK. I'm not upset. Just explain it to me, Claire.\"\n\nShe sniffed. \"I'm sorry. I couldn't sleep last night. After ... you know. I was just lying there, thinking about you. It was wonderful - in the boathouse. But I sort of realized something.\"\n\n- \"What did you realize, Claire?\" I asked, keeping my voice level.\n\n- \"I like you, Colin. I always have. It's just ...\"\n\n- \"You don't see us as boyfriend-girlfriend. Or long-term material.\"\n\nHer face brightened up. \"You see it, too?\"\n\nI nodded. \"It would be hard on Leo. He would pretend to be happy for us, but all the time he would be dreading the day we broke up, wondering if it was going to damage our friendships: yours and mine, mine and his.\"\n\n- \"That's true.\" she said. \n\n- \"It's fine, Claire. You don't have to worry about me. Last night was a dream come true. But I'm not going to demand a repeat, or a full-on relationship.\"\n\n- \"That's good.\" she said. \"But ... can we not talk about it? Can we pretend it didn't happen?\"\n\n- \"If you want. So Leo doesn't find out?\"\n\n- \"Umm, no. Actually ...\" I figured it out quickly. Claire was frighteningly easy to read.\n\n- \"You're interested in someone else.\" I guessed. I hoped it wasn't Ben. Then I remembered an exchange of looks I had witnessed yesterday. \"Craig?\"\n\nClaire blushed scarlet. \"How did you know? Yes, it's him. I've been dropping hints, but so far ... he hasn't done anything.\"\n\nI had no idea about Craig's private life. He could be gay, for all I knew - but I doubted it. My impression was of a very nice guy, but probably quite shy. \"He doesn't already have a girlfriend, does he?\"\n\n- No - Eliza found out for me. He's single. I thought we were getting closer ...and now this. I don't want him to know.\"\n\n- \"He won't find out from me, Claire. I won't tell a soul. Does anyone else know?\"\n\n- \"Only Ee. She said I had to talk to you about it.\"\n\n- \"She was right.\" I agreed. \"Don't worry: the secret is safe with me. In fact, we can go with your first idea. It never happened.\"\n\n- \"You're not mad?\" she asked.\n\n- \"No, sweetheart. I'm pleased for you. I hope things work out with Craig. In fact, if I can help that along, I will.\"\n\n- \"Really?\"\n\n- \"Absolutely.\" I told her.\n\nClaire kissed me on the cheek. \"Thank you.\" she whispered. Then she slipped out of my room.\n\n- \"Well,\" I said, to the empty room, \"that went pretty well.\"\n\n***************************\n\nTeresa gathered us all in the living room, or on the main deck, as she called it. She handed each of us a new set of clues, which we were allowed to read, but then had to return to her. She would, however, allow us to write down our own copies, if we so desired. Mine looked like this:\n\n- LEO IS NOT A PIRATE, THOUGH HE PRETENDS TO BE\n\n- YOU REMEMBER THAT REDBEARD USED CODES TO PROTECT HIS SECRETS. THE LOCATION OF HIS TREASURE, HE SAID, WAS GUARDED BY 'THE TWELVE APOSTLES'\n\n- THERE IS A BIBLE ABOARD. IT HAS MORE THAN ONE USE.\n\nI looked around at the others. If Claire had the same clue, she would want her Bible back. But she was eager to meet and join forces with the Falcon, whoever that was - my enemy.\n\nSo I immediately did two things. First, I wrote some notes on the paper Teresa had provided. But I did not copy the clues she had given me. Instead I wrote down the pirate recognition signal, the fact that Claire wanted to be a pirate, and then my own piece of fiction: that the Scar intended to betray the Falcon. It was a lie, but only I knew that. Later on today, I might 'lose' my secret clues, or leave them lying around where someone else would find them.\n\nThe second thing I did was to sneak back into the den, and hide two pieces of paper. One was Claire's Bible. The second was my paper that said 'Pistol'. Upon reflection, I didn't want to be caught with it; since Redbeard had been killed by a bullet, if anyone knew that I had a pistol, they might suspect me.\n\nIt had begun to rain, softly, and the dark clouds did not look promising. Teresa took me aside, to ask me a favor.\n\n- \"Would you organize a table tennis tournament? And perhaps billiards as well? Mix up the teams, so that everyone has a chance to play with everyone else.\"\n\n- \"I can do that. Will you be participating?\" I asked.\n\n- \"No, thank you.\"\n\nTeresa then announced that because of the weather, we would not have duty stations. \"This afternoon,\" she said, \"will be devoted to games. Able seaman Colin will draw up a schedule. To add a little incentive, the winners of the table tennis and billiards tournaments will be granted a special clue concerning the whereabouts of the treasure.\"\n\nI drew up the teams in no time, and then designed a quick round-robin formula. Five teams, to play each other team, best two records meeting in a playoff final. If Teresa could play matchmaker, then so could I. First team: Craig and Claire. \n\nLeo would kill me if I paired him up with Eliza so obviously. Also, he was a pretty weak ping-pong player. He wouldn't want to embarrass Eliza, who had to be pretty decent - it was her table, after all. So I put Eliza with Eric, one of the most uncoordinated, un-athletic people on the planet. Leo could have Sheila for a partner, because I had seen her play once, and she was pretty good.\n\nI would take Lena as my partner. Hopefully, she would feel more comfortable with me. And I had promised Teresa to look after her. That left Ben and Barb for the final team.\n\nIt was surprisingly entertaining. Claire was obviously nervous, perhaps distracted by having Craig for a partner. He played reasonably well, but Eliza simply returned every shot right at her best friend, knowing that Claire would squeal in panic, and either miss completely, or hit the wall, a spectator, the fridge ... you name it. I should mention that we all played in costume, so it was fun to watch, too. Especially the way Ee's breasts threatened to leap out of her shirt when she smashed the ball.\n\nBen and Barb then took on Sheila and Leo. I had to make a rules call. I decided that costumes count, and that Barb therefore had to play with her eye patch on. Didn't matter; she and Ben narrowly edged Sheila, who was virtually playing alone. Leo produced a pretty funny running commentary, but it might have helped his teammate a little more if he had returned a shot or two. I decided, privately, that watching Barb's tits jiggle was the real highlight of the match.\n\nLena and I then played Claire and Craig. I'm not sure if ping pong is popular in Slovenia. All I know is that Lena had never played it. You would think, with her incredible wingspan, that she might be effective. But she had the reflexes of a three-toed sloth. It was a race to see who could make the most unforced errors. Craig and I had our share of those, too, because we were both laughing so hard.\n\nIn the end, Lena and I managed to finish 4th, with a win and 3 losses. Claire and Craig were winless, while Eliza and Eric split their games. Barb and Ben, undefeated, were in the finals, against Sheila and Leo, who had lost only one game. They played an epic match, with Sheila practically standing on her head, but Ben was too much for her.\n\nBen and Barb would claim the extra clue from Teresa. I wasn't too thrilled with that. The odds were good that one of them was the Falcon, or the Scar - if it wasn't Sheila or Eric.\n\nWe took a half hour break before staring the pool games. Same teams, same format, because the losers all wanted a chance at redemption. I went upstairs to check on the weather. The deck was wet, and it was still raining, albeit lightly.\n\nCraig caught up with me in the kitchen. \"Got a minute, Colin?\"\n\n- \"Sure. What's up?\"\n\nCraig didn't answer right away. He led me into the den. \"OK if we talk in here?\"\n\n- \"No problem.\" I said. \"What's on your mind?\"\n\nI was expecting something game-related, but he surprised me. \"Hey, ah - thanks for teaming me up with Claire.\" He wasn't being sarcastic; Craig was rarely anything but completely genuine. \"But listen, ah ... I don't want to step on anybody's shoes, you know.\"\n\n- \"Craig, are you talking about Claire? You and Claire?\"\n\n- \"Yeah. I mean, no - I was talking about you and her. You guys have some history, right? And I saw how she was looking at you. So, I just wanted to ask: are you serious about Claire?\"\n\nI felt a tremendous sense of relief. And satisfaction, too. Craig was a truly decent guy. He would be great for her. \"No, Craig.\" I told him. \"You called it right. History. All in the past. And neither of us ever wanted to get serious. It would have made things awkward, you know? With Leo and Eliza, I mean. We're old friends, and we both think it's best to stay that way.\"\n\n- \"You're sure?\" asked Craig. \"Because I can back off, if that's what you want.\"\n\n- \"Craig - just answer me this: are you interested in Claire?\"\n\n- \"Yeah. I am. Very much so.\"\n\n- \"I really appreciate you coming to me like this.\" I told him. \"It's a classy thing to do. But the field is wide open, my friend. Better than that, even. Claire has been trying to get your attention for a while now. She was worried that you had a girlfriend, or something.\"\n\n- \"No, no. Nothing like that. I just ... wanted to make sure.\"\n\n- \"She's a great girl, Craig.\"\n\n- \"I know. Hey, thanks, Colin. Thanks a lot.\" We shook hands, and parted as friends. This might just turn into a perfect solution for all concerned.\n\nWe started playing pool in the basement. It turned into a very, very different game. For one thing, Eric was better than Eliza, changing the balance of power on that team. For another, Sheila was not so good, and Leo was ... Leo, so they went from one of the strongest teams to one of the weakest. Claire was still terrible. But the biggest surprise of all was Lena.\n\nNow I know that they have pool halls in Slovenia, because she was a shark. I can hold my own on a pool table, and she was damn good. Unless somebody ran the table on us, we weren't going to lose. \n\n- \"Stacked the teams, Colin?\" said Ben. Asshole - he wasn't complaining when it was ping-pong.\n\nWe made it to the finals, against Barb and Ben, and we cleaned their clocks.\n\nIt was a great confidence booster for Lena, and she got a lot of positive attention. Beating Ben never gets old, so I enjoyed it, too. But we also prevented those two from getting a second clue. Lena and I went to see Teresa to claim our prize.\n\n- \"Congratulations.\" she said. \"Here you go.\" Teresa handed us a teabag each.\n\nI just looked at her.\n\n- \"Oh, the expression on your face, Colin!\" Teresa actually laughed. \"Priceless!\" Lena was just as confused as I was, so Teresa took pity on us. \"This is a clue to the location of the treasure. Redbeard captured a whole cargo of this from a French merchantman. He liked it so much, he put into it the code for his treasure.\"\n\n- \"That's it?\" I asked.\n\n- \"That's it. Now I have to try to explain to Lena.\" Teresa pulled out a small book. It was a Slovenian-English dictionary.\n\n- \"Hey - that's awesome.\" I said. \"Could I borrow that, later?\"\n\n- \"Why?\" asked Teresa.\n\n- \"So I could maybe use some words that Lena would understand.\"\n\nThat half-smile crept across Teresa's face. It was a sight I knew so very well. She was pleased. \"We'll see.\" she said.\n\nI walked away, trying to figure out how 'tea' could be in the 12-letter clue. If I didn't know their positions, the order they came in, then it wasn't a lot of help. I re-played Teresa's words. Redbeard captured it ... whole cargo ... French merchantman ... French! Teresa spoke better French than I did, and sometimes teased me about it. But I knew enough French to figure this out.\n\nWhy not a Spanish prize? Or English, or Dutch? She specifically said French. Redbeard would be 'Barbe Rouge'. Ten letters, one for each player, except her. And the Bible, of course, had something to do with it. I needed to consult it.\n\nI went to the den, and locked the door behind me. I compared 'Barbe Rouge' with the verses in the 'Bible', and got nothing. Then I realized that I was still holding the teabag she had given me. Why? Eureka! Tea is 'the' in French (if you add a little accent over the 'e'). T-H-E. Could that be part of the code? In that order? I still had no idea what the code said, but it felt like a big piece of the puzzle had just fallen into my hands. Thanks to Lena's skill at pool, and to the impulse that made take her as a partner. See, sometimes virtue is rewarded.\n\nI unlocked the door, and re-entered the main room. That is, I attempted to re-enter the main room. Ben was right outside the door, and he pushed me back into the den. Barbara was right behind him. She closed the door behind her.\n\nBen pointed a finger at me. With his other hand, though, he showed me a piece of paper. It clearly said 'PISTOL', just like mine. Barbara came to stand beside me, and poked me in the ribs with her finger. Then she showed me another piece of paper. Written on it, with Teresa's calligraphy pen, was the word 'KNIFE'.\n\nI wanted to laugh. I mean, it was pretty funny, the two of them standing there with their fingers pointed at me. But they looked serious, so I decided to humour them and play along. Slowly, I raised my hands.\n\n\"Do you have a weapon?\" said Ben.\n\n- \"No.\" I answered, truthfully. My 'PISTOL' was under the corner of the rug.\n\n- \"Give us the Bible, and we won't hurt you - much.\" said Barbara. She did look a little sinister, with the eye patch. But I could see down her cleavage, and it was more than a little distracting.\n\n- \"I don't have it.\" I answered. That was also true. It was under the opposite corner of the rug.\n\n- \"He's lying.\" said Ben.\n\n- \"We could search him.\" said Barbara, wistfully. Something about her tone made me think that she was envisioning a strip search.\n\n- \"He has it.\" said Ben. \"You have to give it to us.\"\n\n- \"I would if I had it, but I don't so I can't.\" I replied. Try saying that fast three times.\n\n- \"What did you do with it?\" asked Barbara.\n\n- \"I read it.\" No point in lying. Claire had to have told them that I had it. That meant that she was in cahoots with them.\n\n- \"Then what did you do with it?\" asked Barbara, sweetly, prodding me with her finger.\n\n- \"He has it.\" said Ben. \"He's cheating.\"\n\n- \"I have an idea.\" Barbara stepped away from me, and went to whisper in Ben's ear. He scowled, but when she whispered some more, he handed her the piece of paper. Barbara pointed her finger at me, and showed me that she now had the pistol. Ben opened the door, and then slipped out of the room, closing the door.\n\n\"You never came to visit me yesterday, Colin.\" she said. \"I was so disappointed. It made me think that you didn't like me. Or was it that you were afraid of me?\"\n\n- \"You do have a knife. And now a pistol.\" I observed.\n\n- \"I would have put down them down, for you.\" she said. \"We have so much to discuss.\"\n\nI wasn't sure how to answer that, so I chose the better part of valour.\n\nBen returned, with Teresa in tow.\n\n- \"He won't give us the Bible.\" Ben complained. \"We know he has it.\"\n\n- \"Colin, do you have the Bible?\" Teresa asked me. \"I'm here as the referee, not the Captain.\"\n\n- \"I do not have the Bible.\" I repeated. \"I did, but not anymore.\"\n\n- \"Can we search him?\" asked Barbara.\n\nTeresa studied my face for a few moments. \"Alright, I'll handle this.\" With that, she ushered Ben and Barbara out of the room. \"As far as the game is concerned, you are still in the room, weapons drawn. If he has it, I'll get it for you.\" Ben protested, but Barbara pushed him out. She blew me a kiss before leaving.\n\n- \"What are you doing?\" asked Teresa.\n\n- \"I don't have it.\" I said. \"Can I put my arms down, now?\"\n\n- \"Yes. Claire says she gave it to you.\" said Teresa.\n\n- \"She did. I didn't want anybody to find it, and I was afraid that she would want it back. So I hid it. That way, if she asked for it, I could honestly say that I didn't have it. Just like I told them.\"\n\n- \"You really hid it?\"\n\n- \"And my pistol.\" I said.\n\n- \"Where? Never mind - I don't want to know. You are either very clever, mister, or very lucky.\" said Teresa. She had that enigmatic smile on her face. God, I loved that girl.\n\n\"Alright.\" she continued \"I will tell them that they struck out. But from here on in, you had better find some friends. If they catch you alone again, they could kill you.\"",
        "- \"What? Is that allowed?\" I asked.\n\n- \"They're pirates, Colin. And so are you. Stay here.\" With that, Teresa left the room. She returned a few minutes later to tell me that I was off the hook. \"For now.\" she added.\n\nIt was time to start preparing dinner. Since the threat of rain seemed to have receded, we decided to fire up the barbecue. Steaks were on the menu tonight, with corn on the cob, baked potatoes and all the fixings. \n\nI made sure to stay in a group at all times. Safety in numbers, and all that. While I did, I noticed much more. Craig and Claire seemed to be looking each other's way quite a bit. Sometimes, one of them would catch the other looking, and then both of them would blush. It was really cute. Ben and Barb were exchanging lingering looks as well. But in their case, I couldn't tell if it was game-related, or more private dealings.\n\nLeo also noticed the target of his sister's attention. \"Good for her.\" he said.\n\n- \"Amen.\" I said.\n\n- \"Really?\" asked Leo. \"I always thought that you and Claire might hit it off some day.\"\n\nLuckily, I didn't have anything in my mouth, so there was nothing to choke on. \"Me? No. Not likely. It wouldn't work.\"\n\n- \"If you say so.\" said Leo.\n\nI left it that. I didn't want to be He Who Doth Protest Too Much.\n\nAfter dinner, I drew dish duty. Then Teresa called us all together again.\n\n\"Tonight, you have only two duty stations, at 2 bells and 4 bells. At 6 bells, you are free to go where you want, and associate with whoever you like. There is also a new clue for you.\" She passed papers around again. I glanced at mine.\n\n2 BELLS - HOLD\n\n4 BELLS- CROW'S NEST\n\nCLUE: Lena is not a pirate\n\nWell, it wasn't an earth-shattering clue, but better than nothing. Why just two more duty stations, rather than three, like last night? A certain possibility struck me, so I snuck back into the den, and retrieved my pistol. I put it in my pocket, but left the Bible under the rug.\n\nI went downstairs, and found Eliza waiting for me. I was going to make a crack about 'tempting trollops', but the expression on her face killed that idea.\n\n\"What's up?\" I asked her. \"Did I do something?\"\n\n- \"Did you do something? Jesus, Colin! How could you not notice that Claire was interested in Craig? What were you thinking?\"\n\n- \"Oh. I forgot - she told you.\"\n\nEliza rolled her eyes. \"Of course she told me - she tells me everything. Sometimes I wish she wouldn't. But she does ...\"\n\n- \"Ee, I didn't know about Craig until this morning. I swear to you: I would never do anything to screw up her chances with him. I like Craig - a lot. And you know I love Claire.\"\n\n- \"Obviously.\" she said.\n\n- \"No - not like that. I mean ... last night just ... happened.\" \n\n- \"Why last night? Why Claire?\" said Eliza.\n\n- \"What?\" I was a bit confused. \"I'm sorry - I don't understand.\"\n\n- \"Why her? Why not me?\" said Eliza.\n\nOh, shit. \n\nMy life had just gotten significantly more complicated. \"Here - let's sit down.\" I suggested. I desperately needed a few seconds to collect my thoughts. I had known for a long time that Claire was interested in me; but this was the very first time that Eliza had let anything like this slip.\n\n- \"I'm sorry.\" she said. \"I shouldn't have said that. That was stupid.\"\n\nBut she had said it. The cat was out of the bag, and sitting right between us. I had to address it. \"Ee. Listen to me.\" I said. \"When I first met you and Claire, you were dating that guy Andrew, remember?\"\n\nShe nodded. I went on. \"I don't hit on other guy's girlfriends. By the time you broke up with him, things had changed. We did a few things as a foursome, you, Leo and Claire, and me.\"\n\n- \"I know.\" she said.\n\n- \"OK. I'm going to let you in on a closely held secret: how my mind works. I'm not sure if every male thinks this way, but I do. When I first meet a female, I decide right away if I want to have sex with her.\"\n\nEliza couldn't help it: she giggled.\n\n- \"I'm being serious here, Eliza.\"\n\n- \"You sound like ... you sound so arrogant.\" she said.\n\n- \"It doesn't mean that I will have sex with her. Just whether or not I want to. Some girls are too plain, or - let's face it, too ugly. Some girls give off a vibe. You can tell right away: this one's a bitch, that one's high maintenance, and so on. I could be completely wrong, of course, but that's the way it works. Those two categories are a simple 'no' in my book.\"\n\n\"There's a third type of girl that's also a 'no'. If she has a boyfriend, or a husband, she's off-limits. If she's really lovely, or has an appealing personality, she goes into a file labelled 'Do Not Open'. And she stays there.\"\n\n- \"Until the relationship ends?\" asked Eliza. I had succeeded in catching her interest.\n\n- \"No. Longer.\" I said. \"Made that mistake ages ago. A buddy of mine broke up with his girlfriend. The way he described it, the relationship was over. He hated her guts. I waited a week or so, but I'd always been curious about her. So I asked her out. He was furious. It cost me a friendship. And he was right to be pissed off at me.\"\n\n- \"Somehow I have the feeling that this lengthy explanation will eventually come around to me.\" said Ee. \"Are you trying to spare my feelings?\"\n\n- \"I'm telling you the truth, Ee. When we started hanging out together, I would have had to be blind not to notice you. To be 100% honest, I noticed both of you. But ...\"\n\n- \"But?\"\n\n- \"But Claire is Leo's sister. I didn't know how he would take it. Besides, as time went on, I began to realize that Claire wasn't for me, anyway. She and I both know that. We wouldn't last as a couple. You, on the other hand ...\"\n\n- \"What about me?\" said Eliza.\n\n- \"Lovely. Kind and generous. Smart. All that I could ask for in a woman. Except that my best friend confided in me one night, over a couple of beers, that he was madly in love with you. I couldn't go after you, Ee. Not after Leo told me how he felt.\"\n\nEliza was a smart girl. On top of that, she had a heart as big as all outdoors. She understood all too well what I was telling her.\n\n- \"That's so unfair.\" she said. But her tone of voice suggested that she didn't mean it.\n\n- \"Eliza, tell me this: if you were really interested in Craig, but Claire said something first, would you say something to him? Would you try to beat her to him?\"\n\n- \"What if she tried with him, and it didn't work out?\" she asked.\n\nI didn't even answer. I just looked at her sympathetically.\n\n- \"Aww, fuck.\" she said.\n\n- \"I would never say 'no' to you, Ee. But I couldn't do that to Leo.\"\n\n- \"Sometimes I wish that the two of us weren't so noble.\" she admitted.\n\n- \"I'm not particularly noble, Ee - as I'm sure Claire told you. But if it was to be you and me, I would want it to start out right.\"\n\n- \"Alright. I got it.\" She sighed. \"Now, would you get me a drink?\"\n\nI did as she asked, and helped myself to another.\n\n- \"You're not the Falcon, are you?\" I asked her.\n\nEliza swatted me on the arm. \"You dirty bugger! Trying to catch me in a moment of weakness, are you?\"\n\n- \"You're playing a deep game.\" I said. \"I can't tell whose side you're on. But there are at least two sides. And the time may soon come when you'll need to choose one. I'm holding the door open. But I'm not sure how long I can do that.\"\n\n- \"Who's on your side?\" she asked me.\n\n- \"I'm more certain about who's on the other side.\" I gave Eliza a brief, edited version of my run-in with Ben and Barbara earlier on.\n\n- \"Why is this Bible important?\" she asked.\n\nI did my best impression of a sphinx.\n\n- \"Fine.\" she said. \"But that means that Claire told them. I know she gave it to you. She tells me everything.\"\n\n- \"She's on their side - even if she doesn't know it yet. I think Craig is, too. But I'm not sure if sharing the treasure is part of Ben and Barb's plan. My team still has room for some charter members.\" \n\n- \"You don't have a team.\" she observed.\n\n- \"Which is why full shares of the treasure are still available.\" I told her. \"Get in early, before all of the best seats are taken.\"\n\nThat was when we heard four bells from upstairs.\n\nEliza reached up, slowly, and touched my cheek. \"Thank you, Colin, for being honest with me. I'm still not happy - but this makes it easier to accept.\"\n\nWe parted as friends. My next duty station made me nervous, in more ways than one. I knew who it was.\n\nI went out on to the deck above the patio. It was still quite wet, though the rain had stopped. The temperature had dropped a few degrees.\n\nWhen I heard the high-heeled boots, I turned to face Barbara.\n\n- \"Hello, sailor.\" she said.\n\nHot, hot, hot. And deadly. I used one hand to hold my drink, and kept the other in my pocket, cradling a little piece of paper that said 'PISTOL'. After all, she had ambushed me earlier that day. She was the Falcon, or the Scar - I was prepared to bet money on that.\n\nBut I was also replaying parts of my conversation with Eliza in my head. See, when I first met Barbara, I was already trying to get Teresa to go out with me. Then I was dating Teresa, and then recovering from Teresa ... somewhere along the way, I had categorized Barbara as a 'Maybe Later'. Not for a relationship. She looked 'high maintenance' to me. But she was a damned attractive woman. Barbara was maybe 5'7\" or 5'8\", with large, full, boobs, which she made every effort to display. Yet she wasn't fat, or chunky. She had a slim waist, and full hips, but she couldn't have weighed over 120 pounds. And Barbara's most appealing feature was her face. Have you ever daydreamed about a sexy dancing girl? A lusty pirate captain? Barbara could have been any of those.\n\n- \"Hello, Barbara. Or should I call you ...?\" I deliberately left it hanging.\n\n- \"Call me what? Ooh - this is fun. Your ex-girlfriend came up with such an exciting game.\" She started to come closer. Maybe it was my imagination, but it reminded me of a panther stalking a goat. I guess that made me the goat.\n\n- \"Could you stop just about there, Barbara?\" I asked. \"After our encounter earlier today, I'm a little skittish.\"\n\n- \"Are you?\" she laughed. \"But I gave the pistol back to Ben. And from that hand in your pocket, it looks like you're packing this time. Is that a knife in your pocket, Colin? Or are you just happy to see me?\"\n\nSee what I mean? How are you supposed to not think of sex when she pulls shit like that?\n\n\"Are you a little bit cold?\" she asked. \"I am.\" Call me a horny bastard, but I took a quick look at her nipples to see if she was telling the truth. \"Can we go inside, Colin?\"\n\n- \"We can. But I'd really like to know where Ben is before I wander into a spot where we can play 'Ambush, Part 2'.\"\n\nShe laughed. \"You don't have to worry, Colin. Ben is downstairs - in the hold - with the tall girl. And what I have to say to you is for your ears only. Oops - is that James Bond? What would pirates say? I have a secret for you. And I think it's good enough that you will want to share one of yours with me in return.\"\n\nI went inside with her. Leo and Sheila were in the living room, while Eliza and Craig were in the kitchen. Barbara led, and I followed. She stopped at the head of the stairs. I could hear Ben and Lena down there. For some reason, I wasn't entirely happy about that. \n\n- \"Satisfied?\" said Barbara. \n\n- \"For now.\" I said.\n\n- \"Then follow me.\" she said. Barbara started to climb the stairs. She turned and put a finger to her lips. Then she led me into the first room, which contained a bunk bed. This was the room she was sharing with Sheila.\n\n- \"Which bunk is yours?\" I asked.\n\n- \"I love being on top.\" she said, with a grin. Then she closed the door. And locked it. \"There you go. We won't be disturbed - and you're safe.\"\n\nI felt far from safe. She could tell, too. \"Still worried, Colin? How can I prove to you that you're in no danger?\"\n\nThere was no answer to that question. I still had my hand in my pocket, but I wasn't holding the piece of paper any more. Instead, I was trying to keep my hard-on from showing.\n\n- \"I know.\" she said. \"I'll prove to you that I'm not armed.\"\n\nBarbara removed her tricorne hat, and tossed it on the upper bunk. Then she slowly removed her long, burgundy coat. She kept the eye patch on. I just stood there mesmerized, like a complete idiot. Or maybe I wasn't a complete idiot - I did keep my eyes open. I didn't want to miss a second of this: Barbara put on an incredible private pirate striptease for me.\n\nThe bustier came off. And then, ever so slowly, the shirt. She had a large black bra - it had to be large, to contain those incredible tits. I've seen double Ds on porn sites, but Barbara's were bigger. Wider, anyway.\n\nShe held up her leg. \"Can you help me?\"\n\nI had to lick my lips before I could talk. \"How do I know that you aren't armed?\"\n\n- \"I'm trying to prove that I'm not.\" Barbara said. She raised her arms, and took hold of the side of the top bunk. I grabbed her boot, and helped pull it off. Then she presented the other, and I repeated the procedure.\n\nShe kept her leg horizontal. \"These pants won't come off by themselves.\" she said. Honestly, this woman was missing an opportunity: she could have had a fine career in phone sex. Her voice alone was killing me.\n\nI peeled the pants from her legs. She had on black lace panties underneath. My mouth was dry. I did notice that Barbara was carrying an extra pound or two. There was a bit of a swell to her belly, and her thighs were solid. But I had no complaint. I wouldn't have changed a thing about her. With her arms over her head, Barbara's breasts were lifted up, and I wasn't going to be able to play this game much longer.\n\n\"How do I know that you don't have a concealed weapon?\" she asked.\n\nMy first inclination was to set a new world record for fastest undressing. But I realized that Barbara might enjoy a little bit of a show, too. I wasn't about to dance, or anything, but I could strip slowly, building the anticipation. I dropped my coat, and then doffed the shirt. Next, I undid the belt - then I remembered the boots. I managed to get everything off without falling over.\n\nAll of that, I might add, without taking my eyes off Barbara. She responded by taking off her bra. Her breasts were massive. Full, soft, jiggly, and crowned with areolae at least two inches in diameter. Her nipples were hard, and begging for attention.\n\nBarbara put a finger in her mouth, and licked it. She swirled it around, until it was quite wet. Then she brought that finger to the tip of her left breast, and began making wet circles around her nipple. She was about as subtle as a steam train.\n\nStepping forward, I put one hand behind her head, and pulled her face forward, to press my lips to hers. This was no gentle, romantic kiss. Barbara attacked my lips in a kind of feeding frenzy, trying to swallow me whole, before plunging her tongue into my mouth.\n\nI found other uses for my hands. The left found her huge, soft breast, weighing and squeezing it gently. Too gently, it seems: Barbara's own hand came up, and crushed mine into her ample tit flesh. I got the message, and began manipulating her boob, meanwhile circling her nipple with my thumb. Every so often, I would brush my thumb across the tip of that sensitive bud, eliciting a shiver from her.\n\nMy right hand descended between her legs, to discover that her pussy was already wet, the labia swollen and separated. Did I say wet? Drooling, more like it. Had she been playing with herself in advance? When I slid a finger into her, Barbara sighed into my mouth, and redoubled her frantic efforts with her tongue.\n\nShe whined as I pulled away, but I retreated only far enough to grab a condom from my coat pocket (which I had wisely, if optimistically reloaded that morning). I put the packet in Barbara's hand. She gave me a curious look, but I needed both hands free.\n\nI grabbed both of those magnificent melons, and pushed her back on the lower bunk. I gave her breasts a good mauling, even as I lowered my head between her legs. She was already soaking wet. I sucked her labia into my mouth, and then stuck my tongue inside her. Barbara was not subtle, so I chose not to be, either: I went straight after her clit, flicking it with my tongue, and sucking on it. All the while, I was squeezing her breasts and pinching her nipples.\n\n- \"Harder!\" she moaned.\n\nIt only took a minute or two of that before Barbara shuddered and came. She threw her head back on the pillow and moaned.\n\nI gave her no respite. She had already opened the condom packet; I took it from her hand. A moment later I was ready, and lined up my weapon against her gaping opening. I thrust inside her with one long, deep stroke. Barbara's arms came up to encircle me and pull me down.\n\nThis was a new experience for me, in many ways. I had never had sex in a lower bunk before. I had to keep my head down, or bang it against the bottom of the top bunk. It wasn't especially wide, either. I had to adopt a push-up position, with my hands planted on either side of her. That way, I could keep my balance as I pumped my cock in and out of her drenched pussy.\n\nI had also never fucked Barbara before. She was incredibly active. One moment, she would be lying back, one hand mauling her own breast, or pinching her own nipple, the other playing with her clit. The next moment she would be writhing under me, wrapping her legs around my ass, and her arms around my back, or my head. It was like fucking an eel (not that I have any experience fucking eels). I had to struggle to keep my balance and to keep both of us on the bed.\n\nIt was a wild, exhilarating ride. It lasted a good, long while, but eventually I felt the sap boiling up in my balls. I groaned, to let her know that I was close.\n\nBarbara surprised me again. She put both hands on my chest, and pushed me back.\n\n- \"Pull out!\" she said, urgently. \"Pull out and come on my tits!\"\n\nI was a bit shocked. I watch as much porn as the next guy, but I've never had a girl specifically ask me to do that. I wasn't going to refuse her, though. I pulled out, and peeled the condom off, just in time. My first shot sprayed across her right breast; the second hit her in the chin. The next few spurts landed on her belly. She grabbed my cock and stroked it, trying to squeeze out a few more shots.\n\n- \"That was awesome!\" she said. I had to agree.\n\nThen she noticed something. \"You're still hard! Can you go again?\"\n\n- \"Why not?\" I answered. How many times do you get an opportunity like this?\n\n- 'Lie down.\" she ordered. Barbara took control this time. As I lay back, she found a small towel and cleaned herself off. Then she took hold of my dick, and began to jerk me off. I was pretty hard already, but she made my rod stand up even straighter.\n\nThen she went down on me. She was as talented and enthusiastic at sucking cock as she was at fucking. When she had me hard as iron, Barbara produced her own condom, and put in on me. Then she straddled my hips, and sank down on my cock.\n\nThe bunk bed came into play again. She couldn't sit straight up on my cock, cowgirl style. Instead, she had to lean forward, like a jockey urging her mount on. She put her hands on either side of my head, and started gyrating her hips. She see-sawed, back and forth, but she also swirled her ass in circles. She could also lift her ass up, and then slam back down.\n\nThis position had an added benefit: it put those massive breasts right in my face. I could lie still, and let them slap against my chin. Or, I could go bobbing for melons, trying to capture a nipple in my mouth. I could also just seize them in both hands, and squeeze. Barbara seemed to really enjoy all of the attention her nipples were getting. She would also take hold of her own breast, and feed it into my mouth.\n\nThen she leaned forward, and whispered in my ear: \"I know who you are - Ned Mulligan.\"",
        "My eyes went wide. Of all the things she could have said, that wasn't the one I was expecting. Barbara then placed a finger directly against the side of my neck. She grinned and showed me her other hand. It held a little square of paper that clearly said \"KNIFE\".\n\nThen Barbara started grinding hard, her clit against my pelvis.\n\nShe kept her finger pressed against my neck the whole time. It was surprisingly erotic. I came again, and she followed suit maybe ten seconds later. She collapsed atop me.\n\nI had to know. \"Am I dead?\"\n\n- \"What?\" said Barbara.\n\n- \"Did you just kill me? With the knife?\"\n\nBarbara laughed. \"No, Sweetie. That was just for added spice. It was good, wasn't it? But I wouldn't kill you, Ned. Not until you lead me to the treasure.\"\n\n- \"You expect me to find it for you?\" I asked.\n\n- \"Well, you have a clue we don't, and you're clever. But don't wait too long, Ned. I can't keep Ben from killing you forever ...\"\n\nJust then we heard six bells downstairs.\n\nWe got dressed, and then Barbara told me \"That was hot, Colin. I really enjoyed it. We should try again sometime, when we have more time - and more room. A bigger bed could be very interesting.\"\n\nI smiled at her. Barbara was a great bed partner. And she talked too much. I now knew who the Falcon and the Scar were.\n\n***************************"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "costumes",
        "party",
        "friends",
        "mystery",
        "big breasts",
        "pirates"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/murder-mystery-weekend-pt-03"
}