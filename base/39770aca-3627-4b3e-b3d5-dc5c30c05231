{
    "title": "Kiravi's Travelogue Ch. 04",
    "pages": [
        "Hello all! We hoped you enjoyed the first few installments; we're working hard to churn out even more! We wanted to share a few more points of exposition that just wouldn't fit well into the story based on the limited perspective the characters possess. Continuing from the intro segments of the first and second stories, Kiravi, Serina, and Leotie's world is based on the very farthest limits of what historians understand about sedentary civilization. Bending timelines just slightly means that, in their world, and alongside the megafauna I mentioned before, other species of the genus Homo also still exist. I based the Enges heavily off of what we understand about Homo neanderthal: shorter, bow-legged, barrel chest, with a protruding midface and occipital bun, and stronger but with less endurance and flexibility. The Orgos are based on my interpretation of Homo denisova, a species known by a few bones and genetic analysis and little else. But, since we know they lived in central and northern Asia, I took some creative liberties: adaptations to colder climates, greater strength, and larger teeth to take down game on the steppe before the advent of tools, etc. Homo erectus and florienses will make an appearance later as well.\n\nOn a less science-y note: Kiravi's worldview, along with several others, is about to be tested. They're all straying further and further from home and the tiny microcosms of a much larger world that they've inhabited in their lives until now. There's quite a bit of story before the naughty bits! Enjoy!\n\nI recovered from the sudden shock of seeing Serina what felt like immediately, with what I sincerely hoped looked like suave flippancy, \"Serina! I thought the temple would need more time with you!\" I called to her and smiled, hiding the icy bolt of panic that had shot its way up my spine.\n\nI looked down into her glowing, golden-red eyes and saw no hint of accusation or hurt, distrust or bitterness. No awareness that I'd bedded Leotie or been about to abandon her here. Just the same dawning adoration she'd shown me days before when I'd left her with the acolytes, but mixed with some new intensity.\n\n\"They've done all they can,\" her face fell, sadness gathering at the corners of her eyes and lips, and a tiny spark of noble indignation flared inside of me at seeing her so crestfallen. Even though I'd planned on leaving her: I know, dear readers, my feelings didn't make sense, but I was young, forgive me. \"They recommended I go west, to Tebis on the Seleyo, and visit the temple of the Ettuku there.\"\n\nI glanced at Leotie, who's annoyed sneer had been replaced by a raised and curious eyebrow. I'm sure she had her suspicions as to what transpired between Serina and me on the road. But Serina, oh sweet and naive Serina, was oblivious to my attempted abandonment and the new, shall we say, familiarity, between myself and Leotie.\n\nWith my very best smile plastered across my face, I spoke, \"We were, ourselves, just getting set to do some exploring that way, but if you're already packed?\" I let my voice trail off, and she nodded excitedly, \"Good. Then we can be off for good then, and leave Atala behind us.\"\n\nI was thankful for the hot morning sun that masked the panicked sweat on my brow with its damnable heat. Which god had I offended to have my plans for a delightful trek with Leotie so suddenly ruined? No matter: I'd adapt as I always did, as I had after every failure at the Academy, after every husband or father found me with their wives and daughters, and after being booted from home and hearth.\n\nWe hurried away from the temples, moving west through the city again, wanting to get onto the next track before the sun was too brutally hot. \"How are we going to get from here to Tebis? Do you have a map? Have you been there before?\" Serina asked in her small voice even as she hurried to keep up with my naturally long stride and Leotie's trained ability to cross the desert. I noticed that she settled in on the side opposite Leotie, though.\n\nWas that a flicker of jealousy on the innocent teen's face? There was no way that she knew what had happened between Leotie and me, I reminded myself; the huntress's body language was still all hostility and prickliness. With an internal groan, I wondered what I was getting myself into.\n\n\"We don't rightly know,\" I said, flashing her a beaming smile, \"I believe there's a caravan track that crosses from here to the Seleyo. I've never been to Tebis, but I know that their temple to the Ettuku is the largest in all of Anghoret.\"\n\n\"If the Pashudia couldn't help you, why not just return home?\" Leotie asked, something resembling a mix between a smirk and a sneer on her face, \"Your curse does not seem to affect you overmuch.\"\n\nMy eyebrows went up, but I managed to avoid saying anything. Both, it seemed, wanted to be my only traveling companion. Of course, dear readers, that swelled my youthful ego fit to burst, but I know it'd only spell trouble for me, trouble that would delay my trek.\n\nSerina just glared across my chest at Leotie, but I was saved from having to mediate a jealous dispute by the sight that awaited us at the river. The last of the urban sprawl of Atala sputtered out a few hundred paces from the river, and much of the space was filled with braying llamas loaded heavily with jugs and hide bags swollen with goods. Curiously, most of the guards and qhatuqs, or wandering merchants, tending the unhappy and spitting animals were Enges or Orgos. The whole motley herd of animals was being dragged and prodded towards a small shack built along the river, where a heated argument was developing between a weathered Enges and what appeared to be more Atala city guards.\n\nLeotie grumbled, uncomfortable in such a large crowd. Still, I saw an opportunity to spare myself both from the growing confrontation between the two women and from the possibility of having to fend off another ambush by the hungry hill people that filled the lands between the rivers. Making sure both women stayed close, I shouldered my way through the mass with my bulk, finally reaching the point of friction between the city guards and qhatuqs.\n\nMy movement was checked, for a moment, by the sight of what the Atala soldiers were actually guarding. Atala had been founded where it was not just because of the rich floodplain along the river, but because the Nekoar grew wider and shallower along this stretch. Boulders carried down from the Kazmar mountains, and other rock outcrops broke the water's surface. Generations of laborers had shaped the boulders and stones, flattening them, and lay flat slabs of quarried stone across the piles made by the river rock. As they called it, the clapper bridge was wide enough for two loaded animals to walk abreast and generally dry despite the raging, muddy water below it. Upstream from the rapids, a simple breakwater built from stones piled into the river provided shelter for dozens of canoes of every size. They ranged in size from ones barely as long as I was tall to a few that would require at least six rowers and were tied to posts driven into the breakwater or dragged ashore.\n\nThe sharp, harsh voice of the aging Enges caravan master brought my attention back, \"You've raised the toll twice in the last year! And the cost of these animals has tripled!\" The Enges seemed about as old as Gawat from the Academy, though his face was far more lined and harsh. He was a full head shorter than the hapless human guard, but the arm that was shoving a crooked finger into the guard's chest was rippling with muscle earned by years of travel and labor.\n\n\"The Emperor has raised taxes on all of the Palace Mayors, and Atala is no exception. Any foreign caravans must pay the higher fees,\" the man responded, clearly put off by the burly Enges and the dozens of other impatient travelers.\n\nThe caravan master spoke again, spit flicking angrily outwards, \"Your little shit city wouldn't be here if not for us Kazmari Enges bringing gems and tin down from the mountains and hides from Ymdrok!\" His accent had a strange rhythm to it, the beginning of each word emphasized, and the vowels oddly stressed.\n\nI was beginning to understand what was developing here and realized that I had a few options. We could squeeze by the blockage forming at the bridge, pay the toll for Anghoreti natives, and continue on without trouble but run the risk of the three of us being alone and vulnerable. Or, I could get involved and let noble title and currency smooth things over between the guards and the qhatuqs.\n\nOf the many things helping me weigh my options, the factor that won out was the suspicious glare each woman at my elbows was giving the other. I wouldn't survive a week alone between the two of them, I surmised, \"I believe I might be able to clear up this misunderstanding?\" I interjected, my voice loud enough to cut through the shouting and braying of man and beast alike.\n\nThe exasperated guard and ruddy-faced Enges both turned to look at me, somehow even more annoyed and angry, \"And who in the Chaos Wastes are you?\" The Enges barked at me, and I could feel Serina shrink slightly behind me.\n\nI held my hand up slightly towards the Enges, hoping he'd quickly understand my intentions, before turning to the guard. \"Why are you charging us the foreign rate?\" I used my best haughty, elite, noble voice, one I'd heard my father and eldest brother use often.\n\n\"Us?\" The Enges' already small eyes narrowed, and I glared pointedly at him in an attempt to delay his rage just a bit longer.\n\n\"I am Kiravi al-Kiral, and I've paid for all of these animals and most of the goods as well. With that said, I control the majority share of this caravan, and, as a noble of the Empire, I not only demand the Empire Rate but an additional discount to account for this delay.\"\n\nThe guard's face lost as much color as it could, given his sun-beaten skin. \"My lord, I understand, but the Mayor was only informed that this Kazmari caravan would be passing today.\"\n\nI hated using my title this way, but I'd hate traveling alone across the hill country more. Drawing myself up to my full, intimidating height, I took a small step towards the guard, \"Shall we take this issue to the Mayor and delay me and my goods further? Or can we all move on with our day just a little bit richer?\" Without glancing away from the man's face, I pressed a handful of flint chips into his free hand.\n\nThe guard's eyes narrowed a bit, but his face soon relaxed as he made a decision behind those dark brown eyes, \"Of course, my lord. The Empire Rate.\"\n\n\"With a discount.\"\n\n\"With a discount.\"\n\nI deployed my very best dazzling, superior smile, \"Go on then, my friend, pay the man,\" I inclined my head towards the Enges, gesturing with my eyebrows from the generous pouch at his belt to the guard's outstretched hand.\n\nThe caravan master's small eyes had somehow widened to human size, his lined features slack. He recovered quickly, his prickly scowl returning, and he shoved obsidian and copper into the guard's hand while keeping me uncomfortably pinned beneath his suspicious glare.\n\n\"How lucky I am to have such noble patrons in this venture,\" the Enges grumbled, still glaring.\n\nThe guard snorted, his problems solved, and his fortunes brightened. \"Doesn't matter to me. Now go on and get out of my hair, and get this mess across and away from Atala.\"\n\nSmiling, pleased with myself, I bowed with a flourish and gestures for my two companies to go ahead of me. Leotie snorted and moved purposefully onto the flat stone with Niknik, but Serina hesitated, clinging to my arm until I followed Leotie. The caravan master barked orders in both Anghoreti and what I could only assume was the Kazmari language, showing his practiced efficiency as he hustled and cajoled beasts and qhatuqs across the impressive bridge.\n\nI'll be honest, dear readers, that I have never cared for crossing any body of water that I couldn't wade through, and this was no exception. The Nekoar's life-giving waters churned and sucked at the natural pilings the bridge zig-zagged between. Driftwood and rafts of foam and leaves swirled by before being dashed on the rapids, and I couldn't help but wonder how the mother river would smash and drown a man or woman in the same way. Even so, I put on my bravest face for the crossing, Serina pale from terror and Leotie seeming calm but being absolutely sure to not look anywhere but at the few paces of stone ahead of her.\n\nHeart hammering in my chest, we finally led our sandaled feet onto the dusty ground of the far bank, beyond the bored-looking guards there to collect the toll on the west side of the river. \"You didn't tell me you invested in caravans, too,\" Serina said, her eyes still wide as she looked back at the crush of overburdened animals threading their way across the river.\n\n\"He was lying,\" Leotie snarked back, and Serina blushed angrily, \"to make the caravan owe us something. The question is what, and why?\" She rounded on me, \"I didn't agree to travel with this many people.\"\n\n\"We have at least a week of travel ahead of us, all through the Ketza Hills. The tribes there only respect Imperial authority when they feel like it.\"\n\nLeotie bared her teeth, and Niknik followed suit within a moment, \"I'm from one of those hill tribes.\"\n\nI smirked at her, \"So you know exactly what I'm talking about.\"\n\nThe huntress snorted and rolled her red eyes, \"I would've just killed any who tried to stop us.\"\n\n\"And maybe you would've needed my help again,\" I teased before raising my hands placatingly, worried Leotie might actually draw her flint dagger if I continued to mention her Blood Debt.\n\nAny further ribbing would've been interrupted anyway, \"What in the Shedia's Balls were you playing at back there?\" The caravan master spat the moment his squat form landed on our bank.\n\n\"Oh, I'm sorry, did you want to pay full price?\"\n\nThe Enges spat in the dust, \"Of course I fucking didn't, but now I owe you. I could've bartered my way to a lower price, but now I owe you, pretty boy. So what the fuck do you want?\"\n\nLeotie snorted with laughter but didn't say anything. \"Nothing much, old one,\" the Enges' prodigious brow furrowed, \"we just want to travel under the protection of your sell-spears as far as the Seleyo,\" I waved my hand at the burly Orgos that were sprinkled into the caravan. \"Maybe hang our packs on one of your animals, share some of your food?\"\n\n\"That's it?\" He arched a bushy eyebrow.\n\n\"That's it.\"\n\n\"Fine,\" he took a deep breath, set his shoulders in an apparent attempt to be formal, \"I thank you for your help. You will dine with me tonight and will be welcome whenever you like. Our provisions are yours. My name is Kapak.\"\n\nI made our introductions, smirking when I noticed how Kapak's eyes lingered on Leotie and Serina's young bodies. But, owing to the old caravan master's efficiency, we didn't have to wait long before the line of animals was trundling west along a track that twisted up into the hills. Free of our packs, the day passed more quickly than I could've hoped. Leotie and Serina seemed withdrawn by the sudden and massive changes in their lives, so my naturally curious self mingled with the rest of the caravan.\n\nOf course, dear readers, I'd known the Empire owed its power to the lush crops succored by the mother rivers and the great centers of industry, and the ever-busy caravan routes that sold that food and those goods to the less powerful neighbors to the west, north, and south. But I'd never seen it firsthand, young and naive on my estate or cloistered away in my years at the Academy. Kapak and most of the Enges were Kazmari, professional merchants and travelers known as qhatuqs that made their living carrying goods up and down the mountain passes. Only some of the goods originated in the alpine villages straddling the high passes, and the narrow, dangerous mines bored into the rock and ice: most came from Ymdrok, the high plateau beyond the mountains. Valuable, thick hides and carved goods were profitable enough to make the long journey, the high plateau clans selling them to the Kazmari who then carried them south. The Orgos, I learned, were either muscle hired by Kapak or the Ymdroki merchants' representatives, tagging along to ensure the goods were well received and contacts maintained.\n\nLeotie got over her initial panic at the caravan's size but remained uncomfortable throughout that whole first day. She refused to weave through the surly ranks of qhatuqs with me, so, curiously, she and her bonded pet stayed close to the just-as-uncomfortable Serina. A few times, I looped back towards the two women, trying to draw any information I could out of Serina about her time in the temple or continue mine and Leotie's playful banter from that morning. Instead, the two women bonded in their stubbornness, sticking close to the unruly llama Kapak set aside for our gear.\n\nThe track generally wound due west across the Nekoar's flood plain before twisting past the first of many rows of sandstone blocks and boulders that broke up the Ketza. Roasting in the sun blazing out of the cloudless sky, we slowly ascended from the plain and into the hills. The land reminded me of the damned jagged mess around Wakh, and I grumbled more than once at the fact that my chosen mission requires so much back-breaking travel.\n\nDespite the fact we'd unburdened ourselves of all our kit and baggage, my legs screamed at me, my feet were raw and blistered even from my well-made sandals, and my throat was sandy and parched when we finally stopped. Leotie was faring better than me, at least slightly, but Serina seemed utterly miserable from the endless, unrelenting pace the caravan had set. None of the qhatuqs seemed worse for wear, most of them handling the day's journey even better than the animals.\n\nThe sun had just dipped below the far hills in the west, streaking fire across the sky and long, dappled shadows across the jagged terrain. What I thought were long-dead, sun-bleached trees were actually a string of nearly derelict shelters, built presumably by some earlier generation of qhatuqs. Kapak barked at the merchants to get their animals beneath the cracked wood. Each shelter had a small dugout carved out of the hardpan dust and rock, and the ornery animals settled down away from the grit-filled desert wind. In a practiced routine, some of the Enges hacked firewood and tough fodder plants for the animals, while others unloaded the animals and stretched crudely stitched together hide tarps over the decrepit shelters.\n\nAn Enges that didn't speak a word of Anghoreti gestured at the three of us amongst the frenzied activity, leading our animal into one of the shelters before taking us towards Kapak's hovel. The aging male was rummaging through his pack for something as we, quietly groaning from fatigue, approached.\n\n\"A promise is a promise,\" he grumbled, almost to himself. \"I won't have the Ettuku seeing that I don't honor my guests.\"\n\nStill not looking over at us, Kapak pulled out a small cube of strangely multi-colored glass. Mostly black obsidian, streaks of light brown, red, and green glass swirled through the fist-sized cube as well. Serina gasped immediately, and I, curious, mumbled a few simple words of power and drew a simple spell through my soul. I could see the faint aura of enchantment on the cube, but little else that told me what it was or what magic infused it. Detection magic, dear readers, had never kept my interest, and I'd slept through most of those classes or skipped them to bed merchants' daughters. More curious to me was how Serina had sensed the magic.\n\nKapak grumbled a series of words of his own, and the glass cube began to unfold from itself. It hovered just above the floor of the dugout, the different colored swirls of glass pulling elegantly apart and growing in size. The reddish glass swirled back to the packed dirt, transforming into a crackling campfire. The green glass broke into separate pieces, coalescing into plump and soft cushions for the three of us and our host. Finally, the brown and black glass swirled away, above and around us, and draped over the shelter's frame as a patchwork of pristine woolen blankets.",
        "\"That was...amazing,\" Leotie whispered, looking for all the world like a curious little girl and not the prickly huntress that she was. She reached up to brush her fingers against the blankets, proving to herself it was real.\n\n\"I've only seen a handful of artifacts like this,\" I mumbled, feeling the genuine warmth of the magical fire, \"usually secreted away in the private chambers of arch-wizards.\"\n\nKapak snorted, but a smile, satisfied at the reaction to his display of wealth, graced his craggy face. \"Please, sit. We have all spent enough time on our feet today.\"\n\nWe graciously accepted, Kapak and I on opposite sides of the fire, with Serina sitting close to my right knee and Leotie purposefully giving me some space on the left. With the four of us separated from the rest of the caravan, her nervousness faded, but I could still sense her unease at the fact the only traveler she had any ties to had had his attention stolen back by a teenage Oracle. That, and getting answers about what had happened in the temple, occupied most of my thoughts. At that moment, though, my thoughts were focused on the wondrous device Kapak had shown us.\n\nAn Enges, a steward I assumed, brought in gourds full of beer and a large pot already filled with broth, passing out the drinks and resting the pot in the magical flames. \"Again, thank you, Kiravi al-Kiral. I am not accustomed to such, um, help, on my long journeys, and I feared I was falling victim to some trap from Atala's Mayor.\" Kapak's bushy eyebrows lent emphasis throughout his speech the way some nobles in Anghu waved their hands.\n\nI just smiled, taking a long drink from the offered beer, \"I've played many tricks, master Kapak, but never on behalf of a Mayor. Usually at their expense, in fact.\"\n\nSlowly, like an unstable rock face slumping away from a mountain to tumble into a landslide, a broad smile split Kapak's face, \"You would do well on the road, I think.\"\n\nI deflected with practiced ease, bringing the conversation back to the magical shelter, \"Clearly not as well as you, master Kapak. How did you come across such an item?\"\n\nThe old caravan master clearly felt a mix of humility and pride about his treasure, \"You are my guest, so I suppose it would be right for me to tell you,\" he started spooning helping of thick, steaming broth into bowls for us, his duty as our host. \"I have traveled the roads and rivers of Anghoret, Kazmar, and Ymdrok for more than twenty summers. I've even strayed into Gavic to the west and made a single foray over the steamy Ihzal mountains to trek down into fetid Salyajwat. In all those journeys, I've found or bartered for many strange things, but this? This is from Tebis. A Grand Alchemist of the Academy there had a beloved wife and daughter, both sick with a Huri wasting disease that the Priests could only barely hold at bay. My caravan brought rare herbs from the far, far north of Ymdrok just in time and, in thanks, the Grand Alchemist created this cube for me. It was luck, really, nothing more.\"\n\n\"Amazing,\" Serina echoed Leotie in between ravenous bites of stew and huge gulps of beer. \"To have seen so many places to have met so many people. I can't even imagine how big the world must truly be.\"\n\nKapak smiled warmly, his gruff exterior worn down by beer and Serina's disarming na\u00efvet\u00e9, \"The world is great and wide, Serina, and even I have only seen a tiny shred of it. I know of, but have never seen, a land beyond Gavic, supposedly full of strange men with strange rituals. The high steppe of Ymdrok seems to go on forever, but I've heard the tales of a frozen land beyond it and of Zemena on the far side of the mountains. Something must lay beyond the Eastern Wastes, too, don't you think? Over the Ihzal, something dwells in the endless swampy jungle, something that I got the barest glimpse of. And, can't we see the first of seemingly endless islands in the Choked Sea? Don't we trade with the Bhakhuri and Hazuba that row their canoes to the mother rivers' deltas? Our world is endless, and I could spend a dozen lifetimes seeing more of it,\" he paused, unusually animated, and restored his gruff composure, \"Kazmar needs me, needs us to make these journeys. The Ymdroki need bronze and cotton and arrowroot, and your people need obsidian and bison-hide. So I walk the same routes again and again.\"\n\nI sensed the melancholy note, \"You may walk the same routes, but you get to meet such wonderful people as us, eh?\"\n\nHe snorted and rolled his small eyes but hid a smirk with his gourd full of beer. After a long swig that seemed to physically melt some of the tension in his shoulders, he waved his gourd towards Leotie, \"And why are you here, hmm? I can tell that she is on pilgrimage, and I know a Magus when I see one,\" I spluttered, nearly choking on my own beer; was my shame that obvious? Kapak didn't relent, his face softening as he slipped into the fourth language I'd heard him speak, the Bhakhuri tongue of the hill tribes.\n\nLeotie was surprised and flustered for a moment before she answered in her native tongue. Whatever it was, her answer was clipped and harsh, Leotie's round face twisted with annoyance. Kapak glanced down at her armor, then at me, then at Leotie, before he began laughing his rich, booming laugh. The huntress scowled for another moment before sighing, chuckling, and taking a long sip of her beer.\n\n\"Um, what's so funny?\" Serina had to speak loudly over Kapak's laughter, \"And what did you say?\"\n\nLeotie smiled again, red irises glittering with reflected firelight, \"He thought I was one of the few Bhakhuri that the last Emperor had raised into the nobility. Maybe even Kiravi's wife.\" She pointed at the gleaming, beautiful pattern of stones across her chest, shrugging at the old Enges' guess, \"I told him it was just a present from Kiravi.\"\n\nAt that moment, dear readers, I received three different looks. Leotie gave me the warmest look she'd had on her face since my plans went awry outside the Pashudia temple, her eyes glittering like the gems across her chest. Kapak sent a knowing look across the fire, a bushy eyebrow raised, at the fact that I'd given the beautiful woman such a 'gift.' And Serina, sweet Serina, confirmed what I'd assumed throughout the day; jealousy flared along with the divine power in her eyes. Groaning internally, I hid my face by downing the remainder of my beer-gourd.\n\nI was rescued, surprisingly enough, by Serina's sudden gasp and pointing finger, \"What's that, Kiravi? I can see its magic, just like the enchantment on the cube!\" So, the girl could 'see' magic now? That was worth some looking into. At some point, maybe, once I'd sorted my huntress versus oracle dilemma. At that moment, dear readers, her small finger pointed at the small coyote pendant around my neck that faintly glowed on its own, even without the glow of the firelight.\n\n\"Just a trinket from my stay at the Atala Academy,\" I turned the carved animal over in my fingers, \"The enchantment seems simple, but I was never much for analyzing magic, just wielding it like a club.\" That got a chuckle from Kapak and a smirk from Leotie, but Serina was fascinated by the trinket to the point that I simply decided to pull it off my neck and hand it to her. \"My gift to you,\" I tried to smile warmly at her, to convince her without words that it made her equal in my eyes to Leotie.\n\nThe evening meal with Kapak didn't last much longer: the caravan master had business to attend to, wrangling his qhatuks into preparations for the next day, and we were all exhausted. Kapak thanked me one more time, still with a trace of awkwardness, and I warmly thanked him for the shelter, the warmth, and the meal that would keep us from having to dip into our own traveling rations. We fumbled through the gloom back to our shelter, where one of the Enges had kindly started a fire of scrub and llama dung next to our slumbering animal in the dugout.\n\nI was feeling both the hearty beer and the aches of a day following Kapak's punishing pace, but as you can guess, dear readers, I had my other usual and pressing need. Serina, still in less hardened shape and much less able to handle her alcohol, was already fading, eyes fluttering as she snuggled against the side of the dugout. Before I could even utter a single word, she was asleep, arms wrapped around her hide pack and snoring quietly.\n\nNow, remember, dear readers, I was a selfish bastard then, but Serina had strangely wormed her way into some small corner of my heart. She seemed so small and fragile and innocent as I hunched in the shelter beside her, and I couldn't help myself but wrap her heavy cloak around her and gently adjust her into a more comfortable position.\n\n\"She doesn't belong here,\" Leotie whispered, giving voice to my thoughts. Her tone wasn't annoyed or adversarial, just a statement of fact. \"She should have stayed close to home. How far will she have to travel to find her answers?\"\n\n\"I doubt she ever will,\" I muttered, unable to keep the sadness from creeping into my voice.\n\n\"She will learn to survive out here, or she won't,\" Leotie said, her tone still frank and level, \"but she's here because of you, young noble.\"\n\n\"I know.\"\n\n\"And why is that?\"\n\n\"I think you can guess,\" I sighed, turning away from the slumbering oracle to draw out my own blankets, \"I bedded her after the fight in Juniper Valley.\"\n\n\"And you both wanted it?\" For the first time, Leotie's voice had an edge to it.\n\n\"Of course,\" I grumbled, annoyed by her implication, \"Despite our...game...in the alley, I never take what isn't offered.\"\n\n\"Good,\" she said, her laconic reply failing to help me understand what she was getting after.\n\nI grumbled something wordless, finally managing to unroll my blankets and shape my pack into something resembling a pillow for my head. \"Why does it matter to you?\" I said, my fatigue and frustration adding more bite to my tone than I'd intended.\n\nLeotie glared at me, reddish eyes glinting in the dying firelight. \"I'm here because of you too, idiot. You asked me to come with you, remember? And you took away my last reason to stay home. Though I'm much better at taking care of myself out here than she is.\"\n\nI raised my hands placatingly, head throbbing with drink and fatigue and anxious confusion over the situation Leotie was pointing out, \"No one has to leave, Leotie. We can get her to Tebis and decide where to go from there, alright?\"\n\nThe huntress glowered at me, clearly holding more in but too exhausted, confused, or frustrated to say anything else. So, she just grumbled, dragging her kit over to mine. \"It's going to be cold tonight, and the one thing I can count on from you right now is that you're warm.\"\n\nI chuckled drily, her words managing to make me feel like scum -- only for a moment, dear readers -- for inadvertently dragging both women into this. \"At least I'm good for something, eh?\" I took a step towards her, my long stride closing the gap almost instantly. Her warm, toned body was pressed against mine through our traveling clothes, the smell of her hair thick and spicy in my nose, \"I hope you remember I'm good for other things, too,\" my arm easily encircled her narrow waist.\n\nShe surprised me then by not pulling away or throwing herself at me in an explosion of lust. Instead, she stood up on her toes and kissed me gently on the mouth, her lips warm and soft, \"Not tonight, petty noble. It's been too long of a day.\"\n\nI looked down into her red eyes, our bodies still close, my arm still around her, \"I don't want you to leave. You can count on me.\"\n\n\"I hope so, Kiravi. But I don't know.\"\n\nWe didn't say anything else, just crawling under shared blankets and huddling against the coming cold. Leotie ended up half on top of me, snuggled close against my chest with her legs intertwined with mine, while Serina snored softly just beside us. The huntress; my huntress? Whichever, she fell asleep just before I did. As I felt sleep finally overtaking me, I looked over and saw Serina gently shivering, \"Shedia's balls, why not?\" I murmured to myself, rearranging the tiny woman and her cloak to rest against my other side. With that, I finally slipped into blissful unconsciousness.\n\nKapak's angry shouts in Kazmari woke me, though I had no idea how much later. The sun hadn't come up yet, but the cold and dark air was still filled with the sounds of braying animals and their grumbling handlers. Satisfied that there was no attack in the darkness, I gave myself a moment to let sleep fade further away from my mind, yawning widely as I tried to stretch life into my limbs under the blankets. More than the weight of the heavy wool pulled on my limbs, and I looked down to see both Leotie and Serina draped almost entirely over me. As she had the night before, Leotie twitched and murmured uncomfortably in her sleep, brow furrowed, and the corners of her mouth turned down into a worried crease. Serina was the opposite, a look of divine happiness plastered over her young features, and she was practically grinding herself against my right side as she murmured happily and slumbered away.\n\nNot wanting to spend the day trying to explain how I'd woken up holding both women and feed the flames of Serina's jealousy and Leotie's uncertainty, I carefully extricated myself from beneath and between them, hunching to a half-standing position in the shelter. An Enges qhatuq was already rousing our animal, and we greeted each other with the broken Anghoreti that he spoke. Still, the two women slept, even as most of the other qhatuqs brought their grumbling animals onto the track.\n\n\"Wake up, you two,\" I said, voice loud as I nudged their bare feet under the blankets, \"Time to go!\"\n\nThey grumbled and started awake, an awkward look I certainly noted to myself passing between them as they realized they'd rolled into each others' arms after I'd gotten up. Thankfully, both managed to hurriedly dress and pack their blankets before Kapak turned his taskmaster efficiency on us, and we joined our animal in the line of sleepy-eyed creatures ready to march away from the sunrise.\n\nI could see how and why Kapak had made a good living for himself: the caravan lurched forward along the track the moment the first wisps of dawn stretched over the high hills. Serina complained quietly about the lack of a hot breakfast, but the qhatuq leading our animal smiled and handed her a cup of steaming tea he'd brewed over the embers of the fire. We munched on sunflower seeds and dried biltong otherwise, trudging up and down one ridge after another as the sun spilled its light over the desert.\n\nIt wasn't long before the three of us were sweating through our simple cotton clothes, our legs aching, and our feet raw, but the qhatuqs and their animals were inexorable, seeming to be utterly ignorant of heat and distance. I resolved to try and distract myself and slowly moved up and down the caravan, picking up a handful of words in Kazmari from the more bilingual qhatuqs and making small forays off of the main track to look at a strange plant or oddly formed boulder blasted up here by the war between the gods. The two women spoke to each other a bit more than they had the day before; I had no idea what about.\n\nDuring one of our few stops to let the animals forage on prickly bushes and the qhatuqs refill waterskins at a small stream, Kapak worked his way back to us. His brow was furrowed, powerful jaw working back and forth with frustration, \"How are you faring, master Kiravi?\" He practically growled.\n\n\"Not quite as poorly as yesterday,\" I tried to joke, \"We're managing.\"\n\nHe just grunted at the humor, \"You seem a sturdy fellow with a sharp eye,\" his gaze turned to fall on Leotie, \"And I'm sure your eyes are even sharper huntress,\" she inclined her head slightly at the compliment. \"That said, what do you see, up on the ridge to the north. Between the two wizened juniper trees?\"\n\nI followed his instructions, looking over the back of our llama at the jumbled mass of rock that stretched up and away from the track. The two trees were there, hunched against the wind, and, at first, I didn't see anything else. Leotie nudged my elbow, \"Closer to the one on the right, maybe a pace or two from the center. See the spear tip?\" I did, and just below it, I saw the top of a head, though I couldn't make out anything more at such a distance.\n\n\"One of the Ketza tribes?\" I asked Kapak.\n\n\"Must be,\" he grunted, \"one of the next waystations sits where another track meets this one from the north. That track runs up to a little town built around a flint mine, but I haven't seen anyone from there for three seasons.\"\n\n\"If they're watching us like this, I doubt their intentions for us are entirely friendly,\" Leotie grumbled.\n\n\"Maybe they just don't know why we're here,\" Serina added, included in the conversation by her simple proximity to Leotie and me, \"And they want to be sure that we're friendly?\"\n\nKapak shrugged and sighed, \"An idealistic thought, but it could be true. We won't do anything for now, other than keep a lookout.\" He turned to leave but twisted to look back at us, \"You've already done me a kindness, which I've repaid by allowing you to travel under my protection and hospitality. Would you like to earn a bit of my profit if I hire you on as guards?\"\n\nRight away, I shrugged with easy acceptance; agreeing would earn some more assets to fund my journey but would mean following Kapak's orders. The level of danger was the same, no matter what I decided. If there were tribesmen intent on violence in these hills, we'd have to fight if we were with the caravan or not. Leotie must've had the same thought, as she grunted assent right after.\n\n\"I can help too, master Kapak,\" Serina said, her chin jutting out. \"I've fought.\"\n\nI must, dear readers, say that I was impressed by the way Kapak maintained his composure, \"These tribesmen show no mercy when roused to violence, mistress Serina. If you'd like, you may stand at my side if they do attack, while your friends fight elsewhere?\"\n\nThe girl grumbled but nodded.\n\nOur assent given, Kapak didn't have any more instructions for us other than to keep a lookout for any more tribal scouts. Our senses heightened, and nerves stretched, the day continued to drag on as we pushed deeper into Ketza. The flood lands and isolated slabs of sandstone were entirely behind us. Even worse than the craggy mess around Wakh, the land rose and fell in one wave of broken rock after another. The great blocks of sandstone had been cracked by time, victorious juniper trees and shrubs perched atop the broken piles of scree with their roots searching down through the rock. Some other unknown force \u2014 the warring gods, I was sure \u2014 had forced the land into a never-ending wave of sharp-edged ridges, like a piece of old leather as it dried in the sun. With our new found reason to search the skyline around us, I still had the disconcerting feeling that it would be impossible to truly secure a caravan, or anything, in a place like this. Adding to the endless hiding places available to any ambusher was the interminable and nerve-fraying scurry of coyotes and desert hares amongst the rocks and the fluttering of blackbirds' wings.\n\n\"The tribes wouldn't attack us, would they?\" Serina whispered to Leotie as if a loud call might alert would-be ambushes. She hadn't left our side despite our, let's say, difference in employment.\n\nLeotie at first grumbled with annoyance but relented after a sideways glance at me, \"The whole tribe? No. A handful of young braves, or a group that's been outcast from the tribe? Absolutely,\" the three of us froze for a moment, hearing the clatter of rock, but it was just a buzzard taking flight with half of a rabbit carcass in its beak, \"I don't know that much about the tribes on this side of the river. We would trade with them sometimes by canoe across the flat waters, they're more Enges than Bhakhuri, but otherwise, they seemed much like us.\"",
        "The day somehow dragged on even more slowly with the knowledge that we weren't alone out here, but we did finally reach the next group of miserable looking shelters huddled up against a sheer red cliff. Half of them had collapsed or been hacked apart with stone axes for someone else's fire, but the qhatuqs crammed into the dugouts and lay spare blankets over the hardy animals. Kapak set shifts of guards through the night, with Leotie and I split up between different groups of grim-faced Orgos. Nothing happened as I shivered in the cold desert wind, other than the occasional curious yip of a coyote or rustle of an owl's wings. The dim light of our fires glimmered around the broken rocks, and the stars burned above, like the campfires of the gods.\n\nLeotie yawned and nodded at me as we passed each other among the forlorn guard posts.\n\nSerina was bundled tight against the cold even with the fire crackling, and I, utterly exhausted from an entire day climbing and descending on aching legs and raw feet, collapsed behind her small pile of blankets. \"I waited up for you,\" Serina yawned, and excitement surged forward to temporarily banish fatigue. Rushing to escape the chill, I hurried to scramble under her blankets and felt her small, warm body beside mine.\n\n\"You didn't have to do that,\" I murmured, happy that I wouldn't have to 'accidentally' wake her while settling in, as my original and fatigue-induced plan had been.\n\n\"I've been thinking about you ever since, ever since,\" she yawned and murmured something else, pushing her body and generous rump back into me. I naturally let my arms wrap around her under the tangled pile of blankets, pulling her tight to me, \"I need to tell you what happened.\" She yawned again, and I couldn't help but yawn as well.\n\n\"Tell me what, darling?\" I asked, struggling to remain awake, \"Darling?\" I asked again before hearing her soft snores in the dugout. Oh well, I remember thinking to myself, before sleep took me as well.\n\nAnother morning, another experience of Kapak bawling at his qhatuqs. I'd still been huddling Serina when I woke, and the dugout was so crammed with sleeping bodies I didn't know if Leotie had come back. Either way, rubbing the sleep out of our eyes and eating another meal of tea, seeds, and biltong, we stepped off before the sun.\n\nKapak's mood was foul. He grumbled about the ruined shelters he'd have to repair on his way back, with wood bought from his share of the profits. He snarled at the guards and the qhatuqs, barely restraining himself when speaking to Leotie and me, to keep an ever-watchful eye on the ever-worsening surroundings. And he drove us, mortal and beast alike, at a barely sustainable pace that left sweat pouring from every pore and blood oozing from my uncalloused feet.\n\nHe was nervous, I could tell, everyone could tell, and we were worried too, alone and cut off in this strange land. You should know by now, dear readers, that I was no stranger to risk and peril, but my battlegrounds had always been cramped alleys and fetid gutters. Not nightmarish tangles of rocks and scrub. I was nervous too, and so was Serina. Even Leotie fiddled with her bow continuously, ready to string it in our defense.\n\nWe arrived early, in the late afternoon, to the scene Kapak had surely been fearing.\n\nA score of figures waited around the next group of shelters, some crouching in the shade of hide tarps while others watched the track intently, spears clutched in their hands. They were an even mix of men, Enges, and Bhakhuri and, from a distance, they seemed as well-armed and provisioned as one would expect a village guard to be out here in the Ketza. The shelters they occupied sat at the intersection of tracks Kapak had mentioned, so maybe they were envoys or a patrol from the flint mine.\n\nAll such idealistic assumptions were immediately put into question, my dear readers, as we drew closer to the shelters and their new inhabitants. While their kit, their armor and appears and atlatl dart throwers, had once been well made and well-kept, time and the elements had taken their toll. The score of warriors drew up across the track as we approached, and Kapak summoned me and the half-dozen largest Orgos to the vanguard, though neither side readied their weapons or shouted challenges.\n\nI noticed two more direly concerning things as the caravan trotted to a stop, and both sides glared warily at the other. A man had emerged from the shade of one of the shelters, and, unlike the garb of the others, his trappings suggested the faded splendor of some forgotten Headman or Mayor. Three damaged eagle feathers emerged pompously from his leather helmet, and ochre and other pigments dug from the dirt adorned his cotton tunic and breeches to form a pattern of overlapping red and black chevrons. A necklace of copper and precious stones hung low around his neck, and gaudy rings sat on his fingers, too large for his underfed frame. Those bony hands held a long wooden staff adorned with more copper and feathers at its top and, to my wide-eyed surprise, a sword of pure bronze with gleaming silver zig-zag inlay at least nine or ten hands long.\n\nIt was not the first thing, the appearance of the tattered but haughty noble, dear readers, that caused me to nudge Kapak's burly arm and whisper a warning in his ear.\n\nThose of us capable of harnessing the Eldritch winds, however we do it, are often capable of producing food and water through sheer force of will and the raw energy of magic. The food has no taste, the water never seems to wet your throat, but it will keep whoever eats it from starving to death. Such spells are meant only to provide a meal or two, to stretch stores during famine or long journeys, never to give the root sustenance for man or beast. Anyone who eats more of this raw, conjured food than true and real nourishment begins to change, and the warriors in front of us had all of the signs.\n\nTheir eyes shone strangely, despite being sunken into their drawn faces as if some internal light burned there. The men and Enges were far paler than they should have been, their skin thin and ashy, hair wispy and brittle. The Bhakhuri had strange blotches running up their necks and down their arms. All of their veins were dark, pushing up against their off-putting skin, seeming to pulse before our eyes and struggle to carry blood tainted by the raw magic of their diet.\n\n\"Hail, travelers,\" the tattered nobleman spoke, planting the decorated staff in the middle of the track, his voice raspy. \"I welcome you to the lands of Kuvash, which I am responsible for.\"\n\nKapak had stopped with the rest of the vanguard a dozen or so paces from the waiting warriors. Immediately, his tone was icy, bristling with more than his usual gruffness, \"Thank you for your welcome, lord, but I wish your lands themselves had been as hospitable as you now claim to be.\"\n\nThe nobleman bristled, and several of the warriors who'd remained by the sides of the track clustered towards their master. \"All of Anghoret \u2014 the Ketza and Kuvash as well \u2014 has experienced great drought for several seasons. My subjects required much of the meager resources we had, and the track here and leading to the mine suffered,\" the thin man's words were conciliatory, but his tone was anything but. His lips pulled back over his rotten teeth with every word, his eyes boring into Kapak.\n\nKapak glowered, \"I understand my lord; privation has been a constant companion of mine. I notice, also, that your lack of resources extends to not being able to offer guests in your lands food or even a sip of water and occupying our shelters. Shelters I built with these hands ten summers ago,\" he waved left and right, \"I see none of the hospitality a lord of Anghoret is expected to provide, and am met instead with spears.\"\n\n\"Of course, Mayors of Anghoret provide hospitality to all who request it. All those, that is, that travel in good standing and pay proper homage to both lords and gods,\" the man smiled a smile that conveyed no warmth.\n\nI had to restrain the aging Enges slightly as he spluttered a response, \"You compound your shameful lack of hospitality with insults as well?! You shame yourself and your palace, and I have no more to say to you. Begone from this place.\"\n\nThe man, who had still not named himself, finally stopped smiling, \"It's clear you won't render respect, so allow me to speak a language that you will understand: trade. You've crossed my land, used my track, slept in my shelters, so you must pay my toll or have your assets seized under Imperial law.\"\n\nI placed a hand on Kapak's muscular arm, \"You are the Mayor of Kuvash?\" A nod, annoyed, from the man as he acknowledged me and my question, \"So it would be your birthright, then, as you say you're the mayor of Kuvash, to collect taxes and tolls through this part of the Ketza?\"\n\n\"Through all the Ketza.\"\n\n\"My apologies, my lord. I am Kiravi al-Kiral, only the third son, so not nearly as well educated in Imperial law as you must be.\" I know, dear readers, I was surely laying it on thickly, but I was trying to remember something from a half-recalled discussion at the Academy a few years before. \"With whom am I honored to be discussing the privileges of Imperial nobility with?\"\n\n\"Sata al-Kuva, son of Kuv al-Kuva,\" the man said, though he glared at me with withering intensity. It all clicked in my mind in an instant. From the moment I'd seen his bedraggled garb and sickly, eldritch-fed physique, I knew that his claim to be a tax collector was spurious.\n\n\"Ah, Kuv al-Kuva. Does he still live?\"\n\n\"Obviously not, for I am now Mayor.\"\n\n\"Of course, of course,\" I said, keeping my voice as mild as possible, \"I should have liked to have met him.\"\n\n\"What in the Chaos Wastes are you playing at?\" Kapak mumbled out of the side of his mouth.\n\n\"I should have liked to have met him since it is clear he did an improper job educating his son. The Emperor has decreed, time and again, that tolls shall only be collected when caravans enter Anghoret and where they cross the mother rivers; otherwise, every petty hill tribe mayor would tax caravans until there was nothing left. That would be a shame, wouldn't it, Kapak?\"\n\n\"It would.\"\n\n\"And Sata here certainly looks like a petty hill tribe mayor, doesn't he?\"\n\n\"He does.\"\n\n\"Akashi take the Emperor and his damned proclamations,\" Sata spat, \"I'll collect what I want, when I want. You valley-born soft-bellies need to learn that the hills will always have their own ways!\"\n\nSo there it was; robbery masquerading as official tax collection. Kapak spoke quietly, \"There are three of ours for every one of yours. Step aside, Sata, return to your hamlet in the hills, and leave us alone.\"\n\nSata sneered again before chanting a few words of power and gesturing with his staff. The jewels and metal adorning its top glowed brightly, shining with magic drawn through Sata, \"That may be true, but we also have the power of the Eldritch Winds. It is simple, just pay what I am owed, and no blood need be shed.\"\n\nI glanced at Kapak. He arched a bushy eyebrow. I spoke similar words of power, loud enough for all of the emaciated warriors to hear, and the air twisted and boiled around my free left hand, \"So do we, my lord Sata,\" I said, still trying to keep my voice mild, \"step aside.\"\n\nThe Mayor's sunken eyes narrowed, flicking back and forth nervously. He was a coward, I could tell that now, but desperate from starvation and clearly hard times suffered in the dry Ketza. His warriors all looked to their leader warily, unsure themselves of what to do.\n\nCowardice won out. \"Let's go from this worthless place,\" Sata ended the spell channeled into his staff and spat onto the dirt of the track, \"Your dusty, worthless goods are beneath us, anyways,\" he attempted one more flare of cheap bravado, but he had lost the confrontation. They skulked away down the track leading north, and, to his credit, Kapak held his tongue as the score of warriors slowly disappeared around the first bend of the track.\n\nOur caravan let out a collective sigh, and I heard the faint twang of Leotie unstringing her bow. Some of the qhatuqs started unloading tarps and shelters from the backs of their animals, but Kapak was still staring down the northern track, chewing on his lip. I was confused for a moment, but I let my mind begin to follow Kapak's concern.\n\n\"You saw their eyes?\" I asked quietly.\n\n\"Yes,\" Kapak grunted.\n\n\"They're going to come back; they have to. They need real food, and Sata needs to save face.\"\n\n\"Yes,\" Kapak looked up and around at the cliffs surrounding the shelters. \"They'll come in the night, kill as many of the animals as they can and either drive us off or wait for us to leave.\"\n\nI nodded, agreeing, \"This is your caravan, Kapak; I can't give you orders, but I wouldn't stay here.\"\n\nKapak hesitated, uncharacteristically mellow when he spoke. \"I release you from your duties, Kiravi al-Kiral. You may go if you please, take the Oracle and the huntress. There's no reason for you to stay with us.\"\n\nI pondered for a moment but quickly made up my mind. It was tempting to flee along the track or into the hills, but it was abundantly clear that the Ketza was a hostile place after the prolonged drought. And, besides, I'd developed a soft spot for the bullheaded old caravan master. The only thing to do was remain with Kapak and his qhatuqs, but we didn't need to stay in such a vulnerable place.\n\n\"I appreciate your concern, but I'd still like to get my share,\" I smiled roguishly at him, \"but why wait here for a fight? We have daylight left, and we have the stars and the moons to light the track; why not March into the night, and put Sata behind us?\"\n\nKapak nodded, slowly at first before he clapped a thick fingered hand on my shoulder, \"you'd make a decent qhatuq, Magus.\"\n\n\"Eh, I don't get along well enough with the llamas.\"\n\nThe Enges laughed a great bark that echoed off of the rocks around us before he rushed back to the waiting caravan to launch them into action. He hissed and growled instead of shouting, not wanting the sound to carry to Sata's ears. The tired, aching qhatuqs groaned but complied quickly, repacking their animals and hurriedly giving themselves and their animals a meal and a drink.\n\n\"What's happening?\" Serina asked, her face tired, but her eyes alive with fear. Leotie stood beside her, already scanning the rocks warily.\n\n\"We march until we put this place behind us,\" I said, \"And I'll be glad of it.\"\n\nWe pushed our aching legs hard, the anxiety of the confrontation lending a surge of energy to our tired bodies. The sun slid behind the rocks ahead of us, drenching the sandstone in bloody light, and we marched. The stars winked into being one after another, pushing through the darkening, purpling sky, and still, we marched. The moons shone on the shadowed track, playing tricks on our fatigued eyes and minds, but still, we marched.\n\nWith the moons at their zenith, our feet dragging in the dust, and believing we'd finally left Sata's domain behind us, the first Atlatl dart hissed through the darkness and clattered loudly against stone.\n\nWe froze, unsure of what we'd heard, our hearts hammering in our ears, but like fools, we hesitated. A ragged shout went up from the rocks on either side of the track, and dimly lit silhouettes emerged from behind boulders and cracks in the rock. A salvo of darts as long as Serina was tall arced towards us from either side and the qhatuqs and the guards scrambled for any kind of cover. Half a dozen llamas were hit, screaming and braying into the night with sudden pain. I saw an Enges crumple, a dart sprouting from his chest like a deadly tree, and heard the twang of Leotie's bow as she fired back.\n\nMy guts were sour with fear; I'd been in more than a few fights, even some larger brawls, but this was different. This was a battle, and I couldn't see my enemies, and I couldn't get close to them. Another wave of darts clattered off of the rocks or thudded into flesh. Kapak was roaring at the guards and qhatuqs and shouting curses in three different languages at our attackers.\n\nI had to do something, so I found Leotie and Serina huddled behind a dead llama, running to them bent at the waist as darts hissed everywhere. The huntress selected a target, aimed, fired into the darkness, and cursed as she missed. \"I can't fucking see anything!\" she shouted over the war cries and screams of the dying.\n\nNodding, I murmured a spell to life, focusing first on the conduit inside me and then on a fist-sized stone nearby. It began to glow with intense light, and I snatched it up, hurling it up into the jumble of rocks in front of us. An Enges was suddenly silhouetted by the gleaming stone, and Leotie grunted as she drew and loosed another flint-tipped arrow that punched messily into his throat. The huntress unleashed a terrifying, yipping war cry that might have been arousing under different circumstances, and I readied another spell. An Orgos guard nearby hurled a javelin free-handed into a Bhakhuri attacker's chest but was rewarded with a dart to his muscular thigh. I spotted another attacker in the light from my stone and unleashed a bolt of raw magic, and it caught the man in the stomach to messily spill his innards across the rocks.\n\nWe'd hurt our attackers, certainly, and I roared something about their mothers' activities in Anghu's gutter, but we'd also marked ourselves as targets to the rest of Sata's warriors. Darts hummed through the air towards us from all directions. Another beast was struck and crumpled on the opposite side as the first one, and I dragged it close to us to improve our cover, muscles straining painfully. My gut was still knotted with fear, sweat pouring off of me, heart screaming in my ears. I had no desire to die here and go off to the second life.\n\nKapak was only a dozen or so paces away, crouched behind a stray boulder, \"We can't stay like this!\" He shouted to me, a dart shattering its flint tip as it smashed into the rock a handsbreadth from his head.\n\n\"We need to be able to see them!\" I shouted back, even as a human grabbed the glowing rock I'd thrown and tossed it back down onto the track, blinding and illuminating us for the spear throwers, \"Or we have to bring them down to us!\"\n\nKapak nodded grimly, sprinting surprisingly quickly over to the rock and kicking it away and off of the track. Darts split the air all around him, but he emerged unscathed. \"Sata!\" He roared, \"Sata, you coward! If even one of us escapes, the Emperor will know of this! His army will drown you in your own blood, all of you! Cowards!\" His voice echoed, and still, the darts came, and still, somehow, Kapak was unhurt.\n\nA human broke cover to hurl a dart at Kapak, incensed by his words, and Leotie put him down with an arrow to the lung. But the rest were still shrouded in darkness, and we could see little more than shapes in the gloom. I could've pushed my magic into more stones but risked our attackers just hurling them back at us, and I would be exposed and spotlighted while throwing them.\n\nI heard mumbling, close to whimpering, beside me, and I looked down to see Serina looking into her hands, glowing eyes opened wide. Strands of black hair lay across her forehead. She had a tiny mole just above her top lip that I'd never noticed. It was strange, what you saw when the battle-panic was on you; I've only understood that so much more as my travels continued, dear readers.\n\n\"Ru-su-kur. Tutu-ubara. Eli sari shutu. Sha naqba imuru, sha naqba imuru,\" she chanted in some unknown tongue, her eyes burning brighter and brighter, and wisps of burning magic began to swirl around her head and her hands. She uncupped her hands gently, and the coyote pendant I'd given her began to float upwards. The faint light it'd held before flared painfully, stinging my eyes, burning my skin, and still, she chanted her strange spell, \"Sha naqba imuru, Sha naqba imuru, SHA NAQBA IMURU!\" The pendant rose and rose until the entire track, and the rocks were bathed in sunlight, no, brighter than sunlight, so intense my eyes welled up with tears.",
        "How in the Shedia's balls had she done that?\n\nA dart hissed passed, and I had more important things to worry about. Kapak was still screaming insults and had found a spear and shield somewhere. The ambushers finally seemed to be running out of darts, and Kapak's blistering invective seemed to be working as well, as warriors emerged in twos and threes from the rocks to sprint down and ensure none of their crimes were ever reported to the Empire. Most of the qhatuqs huddled near the valuable remaining animals, cudgels and staves in hand, and the guards that survived rushed up to meet the howling tribesmen with their spears.\n\nAnother of Leotie's arrows hummed by, and I rushed from the cover of the dead animals, searching for the nearest enemy. The fear was making my legs shake, my hands trembled with anxious energy, but I couldn't hide any longer. A Bhakhuri leaped down the rocks just ahead of me with unnatural grace, mottled all over with the mark of its destructive diet, and buried its stone ax in the skull of an already wounded qhatuq. I rushed through the cloud of steaming, misted blood, and brutally swung my weighted staff at the murderer. He tried to twist awkwardly away, but the bronze-shod wood smashed into his ribs, and I felt one of them snap under the blow. The sour fear in my belly flowed out of me then, into the next furious swing, into the formless roar I unleashed into the night that was suddenly lit like noontide in midsummer. His skull crumpled inwards, his face slackening instantly as my rage smashed the life out of him.\n\nI was in the fight now; the fear was gone, and I knew only that I could fight, or I could die. An Orgos guard howled a warcry in Ymdroki as he skewered a human on the end of his copper tipped spear. Another Bhakhuri, eyes glowing with corruption, grappled with an Enges guard until he gutted the sell-spear with a wickedly sharp obsidian knife. A knot of qhatuqs ambushed a pair of attackers, and I could hear the snap of bones as they pummeled the two to death with bare fists and short clubs.\n\nAn Enges rushed at me, and I twisted away from the jab of his spear. My left hand swirled with power as I readied a blast of energy, but my quick swing with the staff was blocked by his hide shield, and, for a moment, I was exposed. I wildly swung again, trying to throw my opponent off-balance by smashing his shins with my staff, but he caught the end under the edge of his shield and stomped down, snapping the wood in half. It didn't matter; I unleashed the bolt of gathered energy at point-blank range into the gap opened by swinging his shield down. His flesh burned and cratered inwards, exposing charred bone and steaming offal, and I shoved him back into a heap with my sandaled foot.\n\nDrawing the obsidian dagger I'd taken from Juniper Valley with my now-empty right hand, I risked a glance back at my female companions. Leotie was running short on arrows, the slain beasts around her pincushioned with a dozen darts intended for her, and, in the next moment, another dart arced in. I thought for sure it'd skewer her, but the tip smashed apart against one of the stones in her breastplate. The force still knocked her down, but she was up again in an instant, pain and determination on her face. Serina was hunched over nearby, dragging a wounded qhatuq towards their cover despite the fact he weighed twice as much as she did. The Orgos who'd taken the dart to the leg was already there, pressing a scrap of Serina's dress against the wound.\n\nThe hair on the back of my neck stood up, and my guts twinged with the feeling of magic being used nearby. There was a crack, a flash, and I turned to see Kapak reeling away from Sata as the traitorous Mayor descended through the rocks. His shield was scorched and splintered, his beard smoking, and Sata was rushing towards him. The expensive sword flashed in the light from above, his lips peeled back in a rictus grin of rage.\n\nI rushed across the chaotic track, trying to reach Kapak before Sata did. A Bhakhuri ran past me, stone club raised high to brain an already stunned qhatuq. My knife slid messily into his belly, jarring against a rib, and I yanked it back out in a welter of blood. Sata was only a few paces away from Kapak now, staff glowing again.\n\nI pulled another pulse of magic through myself and into my hand, hurling it on the run at Sata. My blast missed, but Sata's head whipped in my direction, giving the furious Enges caravan master a moment to close with Sata and jab with his spear. Sata parried with the glowing staff, raising the flashing sword high over his head to bring down on Kapak's stunned neck. Kapak was too old, too addled by magic, to possibly escape at least a mortal injury.\n\nMy legs were pumping hard, all thoughts of fatigue after an entire day's marching forgotten, and I vaulted a wailing, bleeding human to leap forward and tackle Sata mid-swing.\n\nWe tumbled painfully to the track, and I felt the obsidian knife clatter away from my hand. I grabbed hold of his robes with my strong hands, knowing if I stayed close, he'd be hard-pressed to swing the heavy sword. I head-butted him in the nose, feeling cartilage crunch and warm blood on my face, but Sata smashed the hilt of his sword into the side of my head. My ears rang, and stars swam in front of my eyes, but I just growled and roughly pinned his forearm to the dusty ground, using the other to mash his sallow face into the dirt.\n\nHe started mumbling something, and too late, I realized his other hand still held the staff.\n\nA burst of magic threw me several paces up and back and hurled Kapak away, and I skidded along the track until a dead llama arrested my movement. Sata hadn't been spared by his own spell, it seemed, and smoke curled away from his tattered robes as we both struggled to our feet. He still held the staff, but his sword lay in the dust between us. Wiping his blood from my eyes, I picked up Kapak's spear, hefting it in my large hands and clenching until my knuckles turned white.\n\nSata babbled, hurling a bolt of half-formed magic at me across the space separating us. I barely managed to form my glittering yellow shield to absorb the blast, but Sata had only wanted me distracted as he went for the sword. My soul ached from drawing so much magic through myself, but I focused for a moment and desperately cast the spell I'd learned in Atala, willing the wisps of magic from outstretched fingers towards the sword. Jerkily, it clattered away from Sata's reaching hand and into the blood-soaked melee between the largest knot of surviving sell spears and ambushers.\n\n\"You fucking low-born swine,\" Sata snarled, giving up on the sword to turn and face me. He clutched his staff in both hands like a spear, and the decorated tip began to crackle with magic. \"Siding with some foreign trash over your own nobles. Your betters.\"\n\n\"Not betters,\" I growled back, the wood of the spear's haft groaning under the pressure of my hands, \"You betrayed the Empire.\"\n\n\"You don't give a shit about the Empire,\" Sata jabbed with the burning staff at my gut, and I sidestepped, knowing a hit would discharge all of the magic into my vulnerable flesh. My own thrust hit nothing but air as he whirled and swung his weapon at my shoulders. I barely managed to duck out of the way, clumsily trying to thrust at his legs. I was wrong-footed, and I knew he held the advantage.\n\nSata snarled, seeing me off balance, and stabbed again with a victorious whoop.\n\nThe blow stopped before he could discharge the magic into my guts, my huge hand clutching the crackling tip of the staff. What was left of my magic desperately held his back, but I could feel the skin burning on my fingertips, and the pain flaring down my arm. I rose from my crouching position, Sata straining with muscle and magic to send his attack into my chest.\n\n\"You're right,\" I growled through teeth clenched against the pain. The spear in my right hand went forward. His guts offered no resistance as the flint tip punched into his stomach, \"I don't care about the Empire,\" Sata gasped, shuddered with pain, and the magic faded from his staff. I grabbed the spear with both hands, shoving it deeper into his stomach. \"You're just scum, Sata al-Kuv, and a coward,\" my left hand and arm screamed with pain, but I didn't care; I put all of my strength into the spear, slowly lifting Sata off of the ground. He screamed, clutching at the spear in his belly, blood pouring out of his mouth and nose. \"Know that I killed you, not because you betrayed the Empire, but because it is all filth like you deserves.\" He tried to say something, to cry out again, but only more blood splattered from his mouth, and my spear punched out of his back as I lifted him higher, his thrashing body slowly sliding down the wooden haft.\n\nI glared into his tainted eyes as he slid towards me, until the light finally went out of them.\n\nThe pain finally overwhelmed my insane burst of strength, and I slumped to my knees, still propping Sata's corpse up on the spear for all to see. Kapak's voice sounded distant in my ears, \"Look at your lord! Gutted like the animal he was! Die! Die you filthy fucking cowards!\" The fight was turning but not over, and I looked again towards my companions in a daze.\n\nMy stomach plummeted. A knot of warriors had swarmed Leotie and Serina, and the two women and the wounded capable of defending themselves were fighting for their lives. I struggled to my feet and staggered towards them, but I knew I wouldn't be able to make it in time, and my magic was spent.\n\nNiknik finished tearing the throat out of one man before snarling and pouncing on another's back, bloody fangs sinking into his nape. An Enges raised an ax to sever the animal's spine, but Leotie shrieked and stabbed the Enges in the throat with her flint knife. Two Bhakhuri dog-piled her, and I could only watch, still two dozen paces away, as she disappeared in a tangle of limbs. Serina was crouched over a wounded qhatuq, desperately parrying blows with a broken half of a spear while a shrieking man swung at her with a cudgel. There was another crack of sound as her eyes flared brightly and she used her strange magic to defend herself; I watched the snarl of hate and terror on her face as she stabbed the broken spear through her attacker's neck.\n\nA howl split the melee, and I saw the wounded Orgos tear the dart from his leg and leap up, stabbing it through one of Leotie's attackers. He grabbed the other and hauled the hapless Bhakhuri up, tearing into its throat with his elongated canines. Another Enges rushed forward, spear reaching, but the blood-crazed Orgos threw the gurgling Bhakhuri onto the spear point before knocking the Enges down with a vicious haymaker punch. He knelt over the stunned Enges, raining blows down into its skull until it stopped thrashing.\n\nIt was over. A few of the warriors might've fled into the rocks beyond the light of Serina's spell, but there was no way they could threaten us again. But the dust of the track was soggy with blood and voided bowels, and animals and men alike screamed into the night, trying to hold their brutalized bodies together. Kapak's convoy was very nearly ruined.\n\nI blinked, trying to will away the pain in my left arm. It was ruined, I knew it. My fingers were scorched and blackened, a strange bruise already forming all the way up my arm to and past my elbow, following the lines of my veins. But I tried to focus on something, anything else and felt the painful sting of the magical light burning down on all of us. The air was hot, searingly so, and only growing warmer. Steam curled up from the pools of blood and offal, and I was far from the only one shielding my eyes against the light and the heat.\n\n\"Serina!\" I shouted, stumbling towards the grisly pile of bodies around the slain llamas. \"Serina! You have to stop the spell!\" I climbed over the bodies, seeing the teenage oracle still clutching the haft of the spear impaled through her attacker's neck.\n\nShe was muttering, her eyes burning as painfully bright as the pendant above us. \"Sha naqba imuru, sha naqba imuru, sha naqba imuru,\" she had no control over the magic; it was controlling her, and it was out of control.\n\n\"Serina!\" I shouted in her face, grabbing her soft cheeks but recoiling; they were burning up. \"Serina, please, you have to stop,\" I pleaded with her, trying to meet her gaze, \"Serina, your magic. You have to stop.\"\n\n\"Sha naqba...sha,\" she whispered, and she looked as though she was staring through me, \"She needs my magic. She needs to exist.\"\n\nI ignored her ranting for the moment, my skin red and painful, \"Serina, come back. Please.\"\n\nShe went from staring through me to staring at me. Staring into me. My conduit, my soul, ached, magic washing over me in some strange way. \"She needs me. I need you.\" I felt, suddenly, as though I were falling, but knew I wasn't moving, and she lunged forward and pressed her lips against mine.\n\nWe tumbled backward together, and I expected to land on the grisly mat around us, but I felt only surprisingly soft ground beneath me. Serina moaned into our kiss, eagerly pushing her tongue against my lips, searching for mine. A small voice questioned all of this, tried to understand where we were, but all I could focus on was her kiss. My tongue eagerly met hers, massaging her, and my hands traveled up her thighs to pull up her dress.\n\nBut her dress was gone, and I could feel her skin, achingly warm, against mine. I cupped her plump ass with my huge hands, kneading and squeezing her feminine curves as she ground her hips down into mine. Her slick lower lips caressed my rapidly hardening length, her nectar boiling hot and flowing until my hips were practically coated.\n\nI pulled back and tried to speak, \"Serina, what...\"\n\n\"She needs me. I need you. She needs you,\" she stopped me, moaning as she sat up in my lap. I could see her slender waist and plump breasts in all of their glory as she looked down at me with glowing eyes. One hand covered my mouth, silencing me, and the other reaching back to grasp my hardness. I wanted to look past her or around me to understand what was happening, but my eyes couldn't leave her bronze-skinned body.\n\nBoth of us moaned loudly as she shifted her hips slightly and slid my hardness inside her, as if it was the only place in the world it belonged. \"Oh gods, Serina,\" I growled, surprised at myself as insane pleasure rushed through me, already sending me to the edge of ecstasy.\n\n\"Unh, I, unh, I've been dreaming of this for days, Kiravi,\" she moaned, not moving, just getting used to me filling her up completely. \"I have so much to tell you and so much to ask you.\" She put her small hands on my muscular chest, tentatively starting to bounce her hips up and down on mine. She whimpered quietly on every downstroke as I filled her up again. Panting, moaning, her pace grew faster and faster, her movements awkward and uncertain but fueled by passionate intensity.\n\nI tried, again, to focus on anything other than the oracle riding me, but the pleasure was too powerful, her beauty too great, and I was compelled to do nothing other than hold her hips as she bounced herself on my cock. It was all I could do to hold off; I gritted my teeth, bit the inside of my cheek, anything. This was utterly foreign to me, the extreme and instant pleasure and a woman so easily overpowering me with her sudden desire, and I just held on for dear life.\n\n\"She needs me,\" she moaned, finding a better rhythm, sighing, \"I need you,\" she threw her head back, her silken hair flying out in a gorgeous arc, shoving her breasts into my face, \"She needs you,\" I couldn't help myself, and I craned my head up to greedily suck and lick her offered brown nipples. She repeated her mantra, again and again, tugging and pulling at my hair, panting her need.\n\n\"Serina, oh gods, darling,\" I moaned, her slick wetness massaging my length perfectly, so wet and so tight and so warm, \"Who...who is she? Oh fuck, Serina, I'm going to...\" I was losing the battle against the insane pleasure.\n\n\"No, no, not yet!\" She cried, ignoring my question, and I gasped out loud as she pulled herself off of me, depriving me of her silken warmth. What she did next, dear readers, no woman had ever done to me, but I quickly learned that I didn't mind. She shifted her knees, pulling on my shoulders to draw her petite form up my torso until her hips had settled over my face, and all I could see was her glistening folds.\n\n\"Lick me.\"\n\nHer words weren't harsh or commanding, but her lust and desire were so pressing and needful that I couldn't help but listen to her and obey. Her hands tightly gripping the messy braids of my hair, my hands eagerly kneading the soft flesh of her ass, I let my tongue run up and down her wetness. Her taste was divine, sweet and musky all at once; I lapped at her like a man dying of thirst.\n\nI cursed myself for not doing this when I first bedded her and told myself that I'd do it every single other opportunity I got. My tongue parted her lips easily as if they were drawing me in, and I lapped at her inner heat faster and faster. Her fingers dug into my scalp in time with her grinding hips and her ragged moans, and I couldn't help but groan into her wetness at the divine taste and knowledge that I was driving her to her release. For, as selfish as I know I could and can be, dear readers, there was always something that drove me wild about making my partners cry out with pure lust.\n\nSo I let loose a muffled growl and roughly pulled her hips forward and down, pressing against my eager mouth until I could barely breathe, and let my lips find the hard nub of her clit. She cried out in surprised ecstasy, her voice seeming to echo within itself, but I didn't give her a moment to recover. I suckled hard with my lips, my tongue still traveling up and down her slit, and I could feel her shapely thighs quiver on either side of my face.\n\n\"Kiravi, oh goddess, oh yes, right there!\" She moaned, her voice rising higher and higher. I worked harder, willing to do anything to please her, needing it, her nectar pouring across my lips and chin, \"Unh, no, no Kiravi, it has to be together,\" she moaned, pulling my head away from her and suddenly pulling her hips away.\n\nI groaned in confusion and sudden loss, but she was sliding her nubile body down mine, the feel of her soft and sweaty skin, her achingly hard nipples, the look in her glowing eyes, all of it more than making up for the loss of her womanhood. For a moment, I wondered where she was going, but soon it seemed that she was going to return the favor she'd just demanded from me.\n\n\"She needs me, I need you, she needs you,\" she whispered, crouching between my legs, hefting my length still wet with her juices, \"I'm so nervous,\" she moaned, breathless, even as she gently stroked me and unconsciously parted her lips.\n\n\"Don't be,\" I said, my breath already coming in shallow, ragged gasps. With every scrap of mental effort, with all of my will, I tried to look away from the beautiful young woman ready and eager to pleasure me. The compulsion was too strong; I barely remembered the butchery on the track, and I barely noticed that her usually bronze skin was literally glowing with a reddish light. \"Who is she?\" I asked again, and it was all I could manage to say, looking into her burning eyes.\n\n\"I wish I could show you,\" she moaned before squeezing her eyes shut and leaning forward to take me.\n\nMy hands clutched at the strangeness surrounding us, my hips involuntarily arching upwards as I felt her divinely soft lips wrap around my tip. She was tentative, unsure, but she cooed around my harness as I groaned, loud and unintelligible. Her mouth descended maybe a hand's length down my aching cock, two-thirds of it still visible, and her soft tongue gently lapped at the underside of my tip.",
        "\"Oh gods Serina, yes, just like that,\" I reassured her, one hand stroking her cheek before tangling itself in her hair. Her gorgeous and Alien eyes opened, looking up at me as Serina took my length further and faster into her mouth. Her tongue tentatively lashed and swirled around my length, and every moan and coo from her throat sent ripples of ecstasy through my entire body. As we stared at each other, her head eagerly bobbing, I realized that one of her hands was buried between her legs, rubbing desperately at herself. She was so beautiful, so sensual, her brow furrowed not just from her efforts but from her own coming release, her lips stretched as wide as they could go around my thick length, her hair messily bunched by my hand.\n\n\"I need you too,\" I said, feeling like it was the most natural thing in the world.\n\nShe moaned, shuddered as she almost pushed herself over the edge. With a pop, she pulled her lips from my hardness, panting as she looked at me, \"She needs to exist, Kiravi,\" she said, eyes unfocused, panting with need, as she climbed back onto my lap and slid herself back onto me.\n\nWe both moaned as she slowly settled back onto me, my fingers roughly squeezing her ass and hers painfully digging into my chest. I could feel every perfect detail of her slick walls, the way she slowly opened for me, the way her body tried to make room for me. Who was this girl, really? Who was this other 'she?'\n\nI forgot all such things immediately as she again began to bounce her perfectly nubile body on me. Slow at first, no uneven rhythm, just an inexorable bouncing grind towards our building explosions. Her skin positively glowed beneath my hands, bathing me in a warm effusion of light even as I tried desperately to hold back.\n\n\"Kiravi, I, I,\" she tried to speak, her words ending in whimpered moans.\n\n\"Me too,\" I groaned, barely able to speak, \"so, so close.\"\n\n\"It has to be...oh goddess..it has to be together,\" she mewled.\n\nWe didn't have long to wait. As she lost control of her body, I used my strong hands to bounce her and pumped my hips up into every downward stroke of her hips. I could feel it boiling, welling inside of me, and I screwed my eyes shut, knowing if I looked at her for another moment, I'd simply explode, \"Gods, darling, oh gods, cum for me!\" I growled.\n\nI felt her seize, pull in a ragged breath and hold it, and her womanhood clenched me so tightly I could barely move inside of her, \"Look at me,\" she gasped, and, as I finally let the ecstasy crash over me, I opened my eyes to look up at my oracle.\n\nThe light in her eyes had changed from the molten glow to bluish-green, swirling between jade and the deep blue of the sky's apex at dusk. And, as she screamed and screamed and screamed, and I burst inside of her, filling her to overflowing, the same blue-green light swirled and surrounded us.\n\nThe coyote medallion hovering over the track absorbed her howling gust of magic, washing all of us in the bloody battlefield in its blue-green, soothing light. I was holding Serina again, and her eyes still reflected the light of her magic, but it was as if none of what we'd just done had happened. Leotie was still being helped to her feet by the wounded Orgos. Kapak was still screaming obscenities at the fleeing warriors. The injured still cried for their mothers or the gods or bit their tongues against the pain.\n\nBut, as the strangely cool light shone down, the wailing stopped.\n\nMy arm throbbed but felt as though it'd been bathed in cool spring water. The charred gristle at my fingertips regained its golden color and texture before my eyes, and the visceral bruises running up my arm slowly faded. The gash on my scalp where Sata had clubbed me with the sword knit itself together and, even though I'd marched and fought all day, I felt as though I could climb a mountain.\n\nIt was not the first time Serina had done this.\n\nA cut on Leotie's forehead disappeared, leaving crusted blood. The Orgos pulled away the bloody bandage, his thigh wound little more than a pink mark. Kapak's scorched face looked as though it'd never felt the touch of Sata's magic. Everywhere her light touched, the wounded could only watch as their wounds disappeared. A qhatuq praying to the Pashudia to accept him into the second life, hands clutched over his looped and bloody entrails where they spilled from a fatal wound, grunted in new pain but looked down to see only a shallow gash in his belly.\n\nSerina's magic even touched our wounded enemies, but they were unarmed and terrified by Serina's power and let themselves be tied into fetters by Kapak's guards. I took all of this in, in as much disbelief as all the others, still holding Serina's hands. Our eyes met, and we both knew that what we'd shared had been real and had somehow caused this. We shared a small smile, understanding that but nothing else.\n\n\"How, how in the Chaos Wastes did you do that?\" Leotie stuttered, holding onto the Orgos as they and everyone else stared.\n\nSerina just shook her head slowly.\n\n\"Serina, darling,\" I captured her chin to make her look into my eyes, \"Who is 'she?'\"\n\nShe smiled, her eyes far away, \"I don't know, Kiravi. I don't know, and neither does she. But I wish I could show you.\"\n\nAnd, one day, my dear readers, she would.\n\n<br ><br ><br ><br ><br >\n\n \n"
    ],
    "authorname": "RifkinMacDonald",
    "tags": [
        "battle",
        "big ass",
        "big tits",
        "blowjob",
        "cowgirl",
        "cunnilingus",
        "fantasy",
        "violence"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/kiravis-travelogue-ch-04"
}