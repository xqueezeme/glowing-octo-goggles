{
    "title": "Lost Empire Ch. 37",
    "pages": [
        "Johnathon Hartwell and Derrick O'Toma were on the exercise mat facing each other. Lucie Hartwell, Shelby, Mary 2, and 1 were all standing on the side. A worried look was on Lucie's face.\n\n\"Why can't you stop them? This is complete insanity! They could kill each other! Mary you have to prevent this!\" Lucie was pleading with Mary.\n\n\"Under mandates, rules and orders that the emperor gave me I cannot interfere unless death becomes an issue. I am sorry Miss Lucie but there is nothing I can do.\" An upset but immobile Mary was saying.\n\n\"Well I can damn sure...\" Lucie started. An arm restrained Lucie as she was starting to move forward. \"What!? Let me go! I have to stop this insanity.\"\n\n\"No young one, this is something that none of us can stop. Neither would any of those here try. This has to happen or there may never be trust between them again.\" Dempsy advised Lucie.\n\n\"Why? This is stupid! Do you both hear me? Stupid I say! Fine! Beat the hell out of each other! I have far more important things to do!\" With that Lucie Hartwell whirled and marched out of the room.\n\nHartwell and Derrick both looked at Dempsy, sighing he threw up his arms. \"Babysitting! You bring me here then have me babysitting? If either of you weren't my friends I MIGHT be the one doing the beating!\" Turning with a grunt of disgust Dempsy went after the young woman grumbling.\n\nBoth men nodded, smiling then turned back toward each other.\n\n\"I really hope you are ready to have your ass kicked! This was my mission to fail or succeed. It's about time you learned to keep your nose out of private business!\" Hartwell growled at Derrick.\n\n\"Ha! I doubt highly that you can get a punch in! As soon as you learn that EVERYONE is my subject then perhaps your stubborn ass will start to listen!\" Derrick snapped back at Johnathon.\n\nFor the first few minutes the men only threw jabs testing their reach and reactions of their opponent. A minute later Derrick scored a glancing blow off the side of Johnathon's face.\n\nShaking his head Johnathon stated, \"Not bad but you're going to have to do a lot better than that!\" Swinging a false round house, Johnathon caught Derrick with a surprise punch square in the stomach. Doubling over Derrick barely avoided an upper cut from Johnathon.\n\nIt was perhaps forty five minutes later that both men were about to drop. Both had bloody lips, Derrick had a black eye, Johnathon's nose was sitting at an odd angle. Still both men refused to yield to the other.\n\n\"Damn it,\" panted Johnathon, \"I don't remember you being this tough!\"\n\nDerrick smiled then replied, \"You've just gotten soft Johnathon!\"\n\n\"You are so full of shit!\" Johnathon spit as he rushed Derrick. Smiling Derrick caught the man with a jab then an uppercut that clipped Johnathon's jaw. \"Ah shit!\" Johnathon said as he stumbled then fell flat on his face!\n\n\"I told you! You've gotten soft!\" Derrick almost shouted. \"Carp,\" Derrick said to his self, \"think I have too!\" Derrick shook his head as his legs felt like rubber, and then he also went down face first on the mat!\n\nFinally able to move forward Mary ordered, \"Get both of them to the med bay! Really sire! We have a battle tomorrow and you have to do something like this!\" Mary was shaking her head her hands on her hips. She thought that she had been right. This emperor was going to keep her on her toes; that was for sure!\n\nThomas was having a meeting with the other three Captains. \"It appears that the emperor is going to be unable to be with us for a short time. It seems he and the Admiral had a fight.\"\n\n\"Damn it! I missed it!\" Zimmel almost shouted. \"Tell us sir who won?\"\n\nThomas had a smirk on his face, \"It was close the commander took him out but just barely, I remember ... uh hum! I called this meeting to make sure we are all ready. I want to play the last brilliant battle the emperor had with these invaders.\"\n\nCaptain Brown and his ship Marco, Captain Zimmel and his ship Ace watched the last time Derrick had faced them. Captain Mara was watching on a view screen on board her ship.\n\n\"Damn it,\" she suddenly shouted as she bashed her hand against the inside of the holo-\n\nprojector.\n\nSmiling widely Thomas asked, \"You need a hand Captain?\"\n\n\"NO!\" Mara almost shouted back at him. \"I'm just having trouble replacing the holo circuits that's all. Apparently my ship over extended the power usage for the projector and fried quite a few circuits.\" There was a sudden electric spark, and then Mara was cursing. \"SHIT! I thought you turned all the damn power off! You're trying to Kill me aren't you!? NO! I said all the power to the system! No, not your circuits, god, listen to me!\"\n\nThomas started to chuckle drawing a chilling death like stare from Mara. \"I'm sorry Captain I seem to remember a few problems like this at first also.\"\n\nConner appeared a moment later, \"Yes and as I recall, it was your lack of patience that caused most of it!\"\n\nThomas turned to stare at Conner, with a growl he replied, \"Shut up Conner. We were the first to bond for the emperor; I thought it important that we moved as quickly as possible!\"\n\nConner sighed, \"You really don't lie that well prime.\"\n\nShaking his head with a smile Thomas repeated, \"Shut up Conner!\"\n\n\"Yes prime,\" Conner said though he also had a smile on his face.\n\n\"So it appears that I am not the only one who is or was anxious to get started.\" Looking up Mara said, \"I've cleared well over seventy percent of the damage, start re-gen on them. Good how long? What!? Ten hours! We go into battle in twelve! You need to get it done sooner. No! Within reason just get it done! That's a lot better!\"\n\nAgain Thomas was chuckling; both Brown and Zimmel were looking uncomfortable. The more that Callie complained the more uncomfortable they got. \"So you both will be ready ahead of time?\" Thomas asked.\n\n\"Yes, even if I have to get out and push!\" Callie told him causing all of them to start laughing.\n\n\"Alright I want all of you to rest; I'm hoping the emperor will be around before we have to leave. Though I understand why he did it, I have to admit this really wasn't that good of a time to pull a stunt like this.\" Thomas said with a heavy sigh.\n\n\"I'll try sir but with all the damage I may be up for a while.\" Callie replied.\n\nThomas's face screwed up into a mask of anger then he said, \"Alright but, if you and your ship aren't one hundred percent tomorrow than I will NOT allow either of you to go into the battle. Do I make myself clear? I have full authority over the fleet as both the fleet commander and the emperor are unconscious.\" Thomas shook his head with a smirk; they both would probably be up his ass in a few hours.\n\nCallie nodded, \"We will be you'll see ... NO! I said get the holo-projectors up first! Argh! Listen to me...\" Callie was saying as she clicked off.\n\nThomas just shook his head again; those two would be a force to be reckoned with if they got more unified. Be a real damn shame to lose either of them, he'd seen her scans, hell she was faster than him. I just hope the veiled threat I made is what makes the difference.\n\nIt was about three hours later when Derrick jerked awake then regretted it. Damn it his head was pounding! Looking over he saw that Hartwell was still asleep. Smirking a bit he slowly sat up then tried to get out of the bio-bed. That was the key word, tried. \"Mary, Shelby?\" Derrick called.\n\n\"Yes your lordship?\" Mary asked a moment later when she appeared.\n\n\"Why am I incapacitated?\" Derrick said not really willing to test the strength of the bio-bed again.\n\n\"Under all mandates your health and that of your second require that you both stay 'til the bio-bed scanners release you.\" Mary replied a smile crossing her face.\n\n\"Well I'll be damned! You're actually enjoying keeping me here aren't you?\" Derrick said then lay back down. \"Alright, how long?\"\n\nAn even bigger smile crossed her face as Mary stated, \"It shouldn't more than six hours, Sire.\"\n\nSighing Derrick nodded, \"I need all the information on the Creagons you have; I still have a battle to plan. I may be confined to bed but I am still in command. I need a line to all my Captains.\"\n\n\"Yes Derrick,\" Shelby said. \"All four are here though it appears that Captain Callie has no holo system. I am detecting that her ship has burned many holo systems components that are at present in re-gen.\"\n\nDerrick looked over the specs from Callie's ship and nodded. Looking up at the ceiling he stated, \"I suggest that you increase your re-gen or I will also keep you out of the battle. That is unless you are afraid now?\" Derrick cringed a bit from the shouting thoughts he received. \"Good I am glad we are in agreement. As I said I suggest you increase re-gen, by what I see you can be done in an hour not three. Now then get it done or you WILL be back here when the battle starts. Good I am glad we understand each other.\"\n\nCallie was startled when almost every ounce of power to spare, was suddenly diverted to the re-gen process. Smiling she guessed that someone had found a way to motivate her ship even more than she had.\n\n_________________________________\n\nTrianas quickly switched her light screen on as she came out of trans-warp, a wicked smile spreading across her face. Ah! That bastard of an ex-husband of hers was on the planet also. Reaching for her weapon's control she stopped when another alarm went off. So! The son of a bitch had increased his shields also.\n\nRunning through all the information she was receiving another wicked smile lit up her face. So he wasn't as pathetic as she thought he would be. Ah! This day was getting better and better!\n\n\"Computer based upon readings, query can this ship's weapons pierce the shields of the sect ship on the planet?\" Trianas asked.\n\n\"Working,\" came the monotone voice of her computer. \"Analysis complete. At present the weapons of this ship could pierce the shields. Though it is estimated that it would take approximately thirty one minutes, thirty three seconds. This is given that their shield power does not increase or a reprisal upon this vessel.\"\n\nThe biggest true smile she'd had in quite some time appeared on her face. Ummmm she thought so the imbecile listened after all. This was going to be interesting very interesting indeed. \"Computer plot...\" Trianas started when the ship was rocked by a powerful explosion. \"Damage report!\"\n\n\"Minor damage to secondary shields, light shield reduced to fifty percent effectiveness. Evasive procedures already enacted. I estimate that we will be out of range within one minute forty five seconds.\" The computer informed her.\n\nAlexander started to curse when he saw that Trianas had moved out of range of his ships guns. \"Damn it!\" He shouted as the man in front of him blocked the thirty hits that he threw. Relieved when the leader moved off the man knew he'd lucked out. \"Orders leader?\" The same man asked.\n\n\"Find that disgusting bitch! She failed the sect! She failed the assignment! The worse though is that she failed me! For that she will pay with her life!\" Alexander snarled back at the man. \"If it is possible we will lift off and blow her ass out of the damn sky! Go!\" The leader said as he swung again at the man who was already retreating.\n\nSoon Alexander thought, soon I'll have your dead carcass at my feet to spit on! Threaten to kill me will you? I think not!\n\n_____________________________________\n\nIt was five hours later in the med bay. Both men had been awake for several hours though not actually talking to each other. \"Damn it Mary, Shelby I need out of here! A moment later both men were released Derrick nodding to Hartwell then flashing out.\n\nAppearing on the command deck Derrick sat in the command chair. Looking at both Mary 2, and Shelby, Derrick nodded then activated a switch on the chair.\n\n\"All ships I am reading the Creagons within an hour of the galactic edge. On my mark we will all head there. You and your ship are ready I take it Captain Callie?\" Derrick asked the hologram of her.\n\n\"Yes Sire, all repairs were finished an hour ago.\" Callie told him.\n\n\"Good, Captain Thomas, I am assigning Lars and Ellen to your group. Captain Brown I am assigning Rodrick and Johnathon to your group. Captain Zimmel I am assigning Jan and Celeste to your group. Captain Mara I am assigning wing mates Zan and Sherry to your group.\"\n\n\"Thank you sire,\" they all replied.\n\n\"All ships that are assigned I want all of you to link up with the primary prime in your group. I will be back a parsec monitoring the battle. I am apparently no longer allowed to participate in the battles.\" Here Derrick sighed then continued. \"Be well, protect this empire. I want everyone to return, no unnecessary tactics do I make myself clear?\"\n\n\"Yes Sire!\" They all shouted as they saluted.\n\n\"Alright, all ships report!\" Derrick said. \"All systems ready,\" came the group with Thomas.\n\n\"All weapons charged and ready,\" came Brown's group.\n\n\"All checks completed,\" came Zimmel's group.\n\n\"Everything ready, power at full,\" came Callie's group.\n\n\"Good on my mark 3, 2, 1, trans-warp,\" Derrick replied.\n\nThirteen ships flashed out, twelve appearing thirty seconds later at the galactic edge.\n\n\"Ignore the alarms going off. We already know they are here, as I am sure they are aware of us by now!\" Derrick told all of them. \"They should be here soon, positions!\" All the ships lined up in a straight line as a few minutes later the first wave of the Creagons appeared.\n\nDerrick smiled, he'd studied these creatures, and they almost always expected their enemy to attack head on. Hmmm he thought that was an idea! \"All ships release a salvo at the approaching wave of ships!\"\n\nEven as he watched at least a hundred ships disappeared. Nodding his head it seemed the increase in power was working well. Even as he watched another hundred or more ships were destroyed in a second salvo.\n\n\"Alright I think they are softened up. Position A!\" Derrick told them.\n\nFlashing out all the ships appeared at several different positions at the back and sides of the invaders. Another four hundred gone Derrick smiled this seemed far too easy. \n\nSuddenly an alarm went off, causing Derricks eyes to grow large.\n\n\"Position B! Then retreat to Position 0.\" Derrick called out.\n\nAgain the ships flashed out appearing at the back then the sides and finally at the front. Derrick estimated they had destroyed eighteen hundred or more ships but still they were coming. Then there was the reading he got about ten minutes ago.\n\n\"Alright Gambit C! I want no more than ten seconds back there do you understand. Anymore and I might kick your ass!\" Derrick was telling them.\n\nAll acknowledged with Lars and Jan staying back with almost half of their weapons off line. Derrick watched them take out another fourteen hundred then they appeared back at the galactic edge.\n\n\"Derrick I am reading that massive structure again!\" Shelby told him a moment later.\n\n\"I know! All ships I am afraid that we have a bigger problem. The large mass moving our way appears to be a ship. I am afraid it is going to take all of you to destroy it.\" Derrick reported.\n\n\"What the hell?\" Came Thomas. \"Hell of a way to go that's for sure!\"\n\n\"Problem is we still have a few thousand of the others out there. We are going to have to thin them more if you are going to have a chance.\" Derrick told them. \"I suggest Gambit A 'til they are thinner.\"\n\nAll four of the Captains nodded then clicked off.\n\n\"Shelby I want protocol Sigma-01, Alpha-01, Phi-01, Episilo-01, Mu-02, Omicron-02, Delta-02, Eta-03 Omega, omega, omega enact.\" Derrick suddenly said.\n\n\"Derrick! That could overload the...\" Shelby started.\n\n\"I know damn it! I know! Do you prefer the alternative? I sure as hell don't! Not again! Never again! Once was once too much ... no.\" Derrick said as he whirled to face Shelby's visage.\n\nShelby's eyes opened wide and she nodded vigorously as the tears started to fall from her eyes. \"Protocol Sigma-01, Alpha-01, Phi-01, Episilo-01, Mu-02, Omicron-02, Delta-02, Eta-03 Omega, omega, omega enacted!\"\n\n\"Good, I am hoping we don't have to but I want to make sure. I refuse to lose anyone else!\" Derrick told Shelby.\n\nDerrick whirled back looking at the readings of the battle. Damn it that huge structure was starting to eat up the distance between it and the ships. Smiling Derrick could see that they had eliminated another three thousand ships. That was well over half but could they take out enough?\n\n\"Damn it! Our reactor is starting to fail! Shit! We're going to be a sitting duck!\" Derrick heard Brown call out. \"Damn it Mara! What in the hell are you doing?\"\n\n\"Get the hell out of here! You have a damn death wish? GO!\" Came Mara's voice.\n\n\"Go Marco!\" Came Brown's voice.\n\n\"Zimmel you got a reading on him?\" Asked Mara.\n\n\"Yeah, he made it almost to the emperor. Lars and Jan are towing Marco the rest of the way.\" Zimmel replied.\n\n\"Damn it!\" They all heard. \"Rodrick take Ellen back then return, Johnathon form up with me. It's about time we stopped playing with them! I want full power take everything out that moves!\"\n\nSuddenly the space off to the left of where Zimmel and Mara were was lit up with the explosions of hundreds of ships.\n\nMara's eyes lit up when she got a strange reading. \"Captain Thomas! Get out of there! Go damn it!\" Looking at her ship's hologram she shouted, \"If we don't get there he's dead GO!\" A moment later Mara's ship appeared between Conner and the approaching massive ship. \"Full power to the shields! Give them everything you got!\"\n\nA sudden salvo caused the ship the shake violently then it started to float away with no power.\n\nThomas shouted to Zimmel and the remaining ships, \"God damn it! Open fire everything you have, destroy that thing!\" The darkness of space was suddenly lit up as the remaining ships fired continuously. Just as suddenly there was an enormous explosion as vital areas of the massive ship were hit.\n\n\"Got a problem here,\" Zimmel reported. \"I'm starting to read failure in main power unit.\"\n\n\"Pull back, protect Mara. Damn it! I'm not reading any power over there! Go get her!\" Thomas shouted.\n\nStill firing Thomas smiled as the massive ship was starting to shred to pieces.\n\n\"Shelby!\" Derrick was screaming. \"Get her the hell out of there!\" There was a shimmering then a battered and bloody Mara appeared on the deck coughing and gagging. \"Med-bay now! Damn it! You are one brave son of a bitch!\"\n\nJust before she vanished Mara's eyes flickered open. \"Please sire, please save Tara. Pleas...\" Then she was unconscious again.\n\nZimmel and Ace appeared a few moments later towing an extremely damaged Tara.\n\n\"Tara? Are you still active? Confirm whether you are operational!\" Derrick was shouting.\n\nA weak and hazy visage of Tara appeared. \"I am here still Sire. I have severe structural damage. All reactors, generators are off line. I am on battery and back-up power but they are also failing. I am reading failure in re-gen mode. I apparently don't have enough power to start. I am sorry Sire I used most of it saving my prime.\" Bowing with tears in her eyes Tara whispered. \"I am ashamed that I failed Sire.\"\n\nDerrick shook his head, \"Failed? You saved not only your prime but your section prime. I think you succeeded far more than you think. I am proud that you are a part of this. Now sleep and conserve energy.\"\n\nTara's eyes opened wide and her chest swelled as she nodded then blinked out. \"I am connecting to her now Derrick.\" Shelby reported to him. \"I have accessed her re-gen center. Re-gen commencing.\"\n\n\"Good, slow and steady Shelby.\" Derrick told her as he watched the final section of the huge ship explode. Derrick started to press several controls then said. \"Creagon fleet. You have lost well over eight thousand ships. I suggest you surrender or retreat. There is no way you can...\"\n\nThere was a whining hiss then a strange voice came from the speakers. \"Human emperor, we never surrender. Retreat is not an option. We will leave but be warned this is but a small taste of what we have in store for your empire.\"",
        "\"I could just destroy the rest of your fleet in a meaningless battle we...\" Derrick started.\n\n\"No battle is meaningless! We have learned each time we have fought. Know the next time we meet there will be nothing left of your pitiful ships. 'Til next battle live so we may battle you again, to a glorious death!\" The strange voice said. Then suddenly the remaining ships turned and left.\n\nDerrick shook his head, just what in the hell were they up to? \"Thomas, Zimmel! Return! We need to patch up what's left\" Shaking his head he thought they had been extremely lucky. Looking at the readings and reports he could see that Lars, Jan, Marco, Ellen, and Tara were out of action for a while. Johnathon, Conner, Celeste Roderick, and Ace were pretty shot up. It appeared the Zan and Sherry was in the best shape though they also had sustained damage.\n\nDerrick was about to order them all to return to the Imperial planet when he heard Tara. [I tried to send her back to you Sire. She wouldn't let me. I tried several times but she refused. Is she going to live Sire? She reminds me of Commander Tara in almost every respect.]\n\n[She is in med-bay now, her only concern was for you Tara. I would say that you both saved each other. Rest now Shelby has you hooked up and your re-gen has started.] Derrick thought to the ship.\n\n[Thank you Sire, please Sire save her, I will be so lost without her.] Tara thought then was gone.\n\nDerrick sighed this was his fault. Looking over the readings during their re-gens, Derrick was afraid that the faster awakening had weakened them. \"All ships that have trans-warp I want you to tow those that don't. Report who is without their trans-warp.\" \n\nMoments later Derrick shook his head they had been a hell of a lot more than lucky. Eight of the twelve ships had no trans-warp; two of those were almost totally helpless. Yeah they had been lucky; they needed to correct the flaws that had shown while they were in battle.\n\nSeveral hours later they were all ringed around the Imperial planet. Mary appeared a moment later.\n\n\"Sire I have a report from Duke Risen's planet. The remaining fifteen sentinels have reached Duke Risen's residence. Five were taken out with heavy fire power. The remaining ten took out most of that but another five were damaged in the process. At present they have fought to a standstill. Should I dispatch another squad?\" Mary asked.\n\n\"No. Have them stand by. As a matter of fact have them withdraw and start repairs on those that are possible to reactivate.\" Derrick told her.\n\nMary breathed a sigh of relief. It had been bad when the first two had been destroyed. Having so many helpless there without help was a bit much for her. Thankfully Derrick wasn't going to abandon them.\n\nInside his sanctuary the Duke was sweating bullets. These sentries that were attacking had already taken out the heavy batteries. It was only a matter of time before they breached the walls. He knew they could be put down though that had taken a hell of a lot of men. Men that he had no replacements for, and then just as suddenly they stopped. Cautious the Duke scanned the area seeing little or no sign of them.\n\nAn evil smile crossed his face, so the pretender valued his machines huh? A good thing to remember in the future."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-37"
}