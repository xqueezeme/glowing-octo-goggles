{
    "title": "Patrick Ch. 08",
    "pages": [
        "Kevyn reread Melissa's email and wondered what it meant. She didn't know Melissa's mother and didn't want to know anyone who would teach their child that it was alright to use their body and looks to get money. Kevyn had the feeling that wherever Melissa was, she wasn't with her mother and hoped that she had learned her lesson which brought up Patrick....again.\n\nShe looked at the time and wondered if he would still be up, she reread his email and checked the time stamp, two hours ago. Before she could change her mind, she dialed his number.\n\n*****\n\nPatrick paced, he wasn't sure if he should call Kevyn or not. She had been pretty shaken up at the restaurant and when he took her home, so shaken that she left her bat in the back seat of the car. He was also filled with uncertainty, what if he was wrong about her claiming him? What if the potential to rape was still there? He had been wrong before and he could be wrong again.\n\n\"I'm not wrong damn it!\" He said as he walked back from the window of his room to the bed, \"I can't be wrong this time.\" he whispered. He forced himself to sit down, immediately stood up and began to pace again. The soft ding of his laptop was the only thing that stopped him from continuing his pacing. \n\nThinking that it might be from Kevyn he opened his school email and frowned. \n\n\"Shit!\" he cursed when he saw it was from Melissa.\n\nHis anger became confusion when he read the email warning him about her mother, he immediately sent a response back but it bounced right back to him. He reread the email and wondered what Melissa was talking about. Her mother was still married or he assumed she was and even if she wasn't there was no way that he'd go within a mile of her. He tucked the information away for the moment, when he was finished on the email site he would look Linda Hunter up again.\n\nThe next thing he was curious about was the instructor taking his place. There had been several new hires at the college and the science department was one of them advertising the need for a part time instructor. \"Stuart Brinkman\" Patrick mused and then read the bio. Immediately he didn't like the man and it had nothing to do with the jibe about office hours, he was also sure that it had nothing to do with the fact that he was a male.\n\nOn a whim, he used the same program that he had used to get information on Linda and Melissa. Patrick paused, he had thought about Melissa several times in the past few minutes and he felt nothing. There wasn't even a flicker of anger. Although he knew that he was potentially playing with fire, Patrick said Melissa's name six times each time conjuring her face in his mind and.... Nothing. He tried it again this time recalling the events of that night and while he felt guilt there was no anger except the anger at himself for allowing Melissa to push his buttons.\n\nThe dragon really was asleep.\n\nPatrick took a minute to relish the thought; he was free of the curse as he had come to think of it and then continued his search.\n\n\"Stuart Brinkman- 36 year's old born in Oshkosh, Wisconsin, graduated from..... And had moved to the area about a month ago\"\n\nPatrick read the entire bio and found nothing that would explain his instant dislike of someone that he had never met. In the end he chalked it up to what he decided to call the new mate syndrome; he would probably see every unattached male as a potential rival for Kevyn until he adjusted to being a mate.\n\nNext he pulled up Linda Hunter, nothing new was added to the bio and he decided to look for a picture, he wanted to know her when he saw her. It took him several minutes but he found her and gasped, Melissa was the spitting image of her mother, in twenty years this was what Melissa would look like. Patrick could see how the woman was able to get men to marry her and then allow her to take their money, she was breathtakingly beautiful. Once again he paused, he felt absolutely nothing. Tears prickled his eyes as he realized what was happening, he would be able to tell Kevyn that he could and would never rape again.\n\nHe logged off; part of the nightmare was over.\n\nHis phone chirped and he answered it right away, he already knew who it was.\n\n\"Kev.....\"\n\n\"What happened between you and that girl?\"\n\n\"I told you what happened.\"\n\n\"No, you told me part of what happened and I want to know the rest of it.\"\n\n\"Kevyn now isn't the time.....\"\n\n\"I got an email from Melissa warning me about her mother, why would she do that if nothing really happened?\" Kevyn demanded.\n\n\"I don't know. I got an email from her telling me the same thing.\" Patrick replied, I tried to email her back but it bounced.\"\n\nPatrick could hear Kevyn breathing on the other end of the line but waited for her.\n\n\"Do you think that her mother is going to try to do the same thing?\" Kevyn asked her voice softer and calmer.\n\n\"I really don't know but Kevyn, when I told you that I would tell you everything, I meant it and a lot of it is pretty ugly.\"\n\n\"What did you do?\" Kevyn asked almost to herself.\n\n\"I.... I can't and won't do this over the phone.\" Patrick said making up his mind, \"can I come over tonight?\"\n\n\"Is it that bad?\" Kevyn asked not knowing what to think.\n\n\"Yes sweetheart, it's bad.\"\n\nHe waited for her response with his fingers crossed; it seemed like an eternity before she replied.\n\n\"Ok but not here.\"\n\n\"I know that you're a little or maybe very scared and confused but I could and would never hurt you and what I have to tell you needs to be told in private.\"\n\n\"You're scaring me.\" Kevyn said.\n\n\"I know and I don't mean to but we can't talk about this is a public place....wait a minute, can I call you right back?\" Patrick asked.\n\n\"Patrick....\"\n\n\"Five minutes tops I promise.\"\n\n\"Okay, I'll be here.\" Kevyn said.\n\nPatrick ran down the stairs and into what was Caesar's, Ethan's cook's quarters. He was about to knock on the door when it opened.\n\n\"Yes sir?\"\n\n\"Caesar, I have a huge favor to ask. I know that this is short notice.....\"\n\n\"What is it that you need?\" Caesar interrupted.\n\nPatrick explained what he needed while Caesar listened without interrupting.\n\n\"It is much too late for anything elaborate.\" Caesar commented.\n\n\"I don't need anything elaborate, hell I don't care if its beans and franks but can you help me out?\"\n\n\"It would be my pleasure, what time should I expect you and the young lady?\"\n\nPatrick hugged the old vampire who stiffened and then awkwardly patted him on the back. Patrick vanished from the cook's quarters back up to his room and grabbed his phone. Kevyn answered on the first ring.\n\n\"Hi, I have a place for us to go.\"\n\n\"Ok, where?\"\n\nPatrick explained about Caesar's restaurant.\n\n\"You mean he's opening up just for you?\"\n\n\"Not just for me for us and before you ask, jeans are perfectly fine.\"\n\n\"I....don't....\"\n\n\"Kevyn, please, you asked me what was going on and I want and need to tell you.\"\n\n\"What time?\"\n\n\"Six, our reservations are for seven and if it helps, someone other than Caesar will be there; you just won't see them.\"\n\n'I'll see you then.\" Kevyn said and hung up.\n\n*******\n\n\"What in the hell is going on?\" Kevyn asked out loud as she laid her phone down. Several possibilities ran through her mind with killer and rapist at the top of the list but he didn't seem the type-whatever that type was and she believed him when he said that he could and would never hurt her. \n\n\"Patrick, what did you do?\" she whispered.\n\n******\n\nPatrick called Martin next.\n\n\"Hey are you busy tonight?\"\n\n\"Nope, Rach and the boys are out of town for the week, what's up?\"\n\n\"Ethan and Katrina are out for the night-some fundraising thing and Gretchen just got back home so I was wondering if you could chaperone me tonight.\"\n\n\"Absolutely! I want to see this woman, Ethan says she's gorgeous and she loves sports.\" Martin replied.\n\n\"Yes to both things, can you be here by quarter til six?\"\n\n\"Sure, where are we going?\"\n\n\"Caesar's, he agreed to a last minute opening.... Yes, see you then.\"\n\nPatrick's stomach began to turn as he tried to imagine Kevyn's reaction, anger definitely but would she be afraid of him? He began to prepare himself for rejection.\n\n*******\n\nLinda looked though her closet for a gown to wear to the fundraiser, she wanted to buy a new one but Carl refused.\n\n\"What the fuck for? You've got a closet full of them and most of them still have the price tags on them.\"\n\n\"You went through my things?\" Linda asked shocked.\n\n\"Damn straight I did!\" Carl replied, \"I wanted to see where two million dollars went.\"\n\n\"You can't.....\"\n\n\"Excuse me? The hell I can't and be ready by five, I want to get there early.\"\n\nLinda watched as Carl walked away, swore under her breath and resisted the urge to throw something at him. Instead she went back to selecting a gown for the fundraiser. Since it was a black tie affair, she had four to choose from and chose one sure to turn heads, it never hurt to start looking she mused as she sat the dress aside.\n\n******\n\nKatrina hated the fundraisers or rather what was involved in getting ready to go to one. She sighed and looked at the dress that she would be wearing, \"It's for the kids\" she told herself several times.\n\n\"Katrina?\" Ethan called from outside the door.\n\n\"I'll be right out.\" she called back as she gave the dress one more look and wished that she could go wearing a simple sundress and sandals. Actually, she could have and no one would have said a word simply because she was Ethan's wife but she wouldn't, she didn't want to draw any more attention to herself than she had to.\n\nEthan went to his office and left the door open so that she would know where he went and turned on the laptop to check on the status of one of his companies, he had been receiving disturbing reports that money was missing. It angered and disappointed him that one of his employees would steal from him; he had always been a generous employer with an open door/email policy and had helped more than one employee out of a financial bind.\n\nHe clicked off the screen when he heard Katrina come in.\n\n\"Hi, what's up?\" she asked as he walked in.\n\n\"Patrick is going to talk to Kevyn tonight.\" Ethan said pulling her into his lap.\n\n\"Already?\"\n\n\"He thinks that its time and maybe it is.\" Ethan replied.\n\n\"Because she claimed him,\" Katrina said, \"do you think that he's right?\"\n\n\"It doesn't matter what I think but I believe him and just because its never happened before doesn't mean that it can't.\"\n\n\"He's not going alone is he?\" Katrina asked as she toyed with Ethan's pony tail.\n\n\"No, Martin is going since we have this fundraiser tonight and Eustace is spending time with Gretchen.\"\n\n\"Good but why do I sense that there's something more?\" Katrina asked.\n\n\"I think that Patrick might ask you for a little help.\"\n\n\"Did he say that?\"\n\n\"No but it wouldn't surprise me, I just wanted to give you the heads up.\"\n\n\"Thanks and by the way, Victoria is looking for you.\" Katrina said moving off of Ethan's lap.\n\nEthan held her gently but firmly in place.\n\n'Where are you going?\" he asked nuzzling her neck.\n\n\"Apparently no where.\" Katrina replied.\n\n\"Mom!\"\n\n\"Or to see what Victoria wants.\" added kissing him.\n\n******\n\nBy three o'clock Kevyn was a nervous wreck, Patrick had called her several times to check on her and to try to calm her but nothing helped, not even when he repeatedly assured her that she would be safe.\n\n\"I'm not worried about that, why can't you just tell me?\" she asked.\n\nPatrick hesitated before answering.\n\n\"A few more hours and you'll know everything and Kevyn? You mean more to me than I can tell you and I can only hope that you can forgive me.\"\n\n\"WHAT ARE YOU TALKING ABOUT?\" Kevyn screamed in frustration.\n\n\"I'll see you soon.\" Patrick said and hung up.\n\n*******\n\nLinda was looking at the dress that she was going to wear when Carl walked in. He took a look at the dress and then at Linda.\n\n\"Very nice.\" he commented.\n\n\"Thank you.\" Linda replied as she wondered what bomb he was going to drop on her this time.\n\n\"The bank called.\" He said, \"they informed me that you tried to access my accounts.\"\n\n\"I......\"\n\n\"Save it sweetheart.\" he interrupted, \"the only money you have is whatever is in your personal account and the money I give you each month, there is no more money available to you, get used to it.\"\n\nLinda suppressed the urge to scream at him about the injustice of it all. She wanted to tell him that she was his wife and not some business to be managed but she clamped her mouth shut, if she said too much she would be out on her ass and sleeping at a motel 6 in no time flat.\n\n\"What? Nothing to say?\" Carl asked.\n\n\"No.\"\n\n\"Wise choice.\" he said and walked out.\n\nShe now understood how he was as successful as he was; he lulled his opponents into a false sense of security and then trapped them. The man that just left the room was not the lax and gullible man she thought that she had married and she realized something else, he was much wealthier than he had let on, he had money that he hadn't allowed her access to, two million dollars was nothing to him but he didn't like being played.\n\n\"How did I not know this?\" she muttered as it dawned on her that she had played this particular game completely wrong. When she researched him she saw the undisclosed net worth tag and ignored it, that should have told her something right then but she and Melissa were dipping into their \"retirement\" fund more than she liked and Carl had been available.\n\n\"Shit!\" Linda said under her breath.\n\n******\n\nPatrick was beside himself with nerves, he wanted this to be over and done with. Martin had showed up early to offer some moral support.\n\n\"Patrick you have to calm down....\"\n\n\"Easy for you to say!\" Patrick snapped.\n\n\"No, it isn't.\" Martin said softly, \"Both Ethan and I have been there and he would tell you the same, you have to calm down.\"\n\nPatrick took a breath.\n\n\"I'm sorry, it's just that I don't want to do this, I don't want to see her face when I tell her what I was, what I am.\"\n\n\"Which part of you are you referring to?\" Martin asked.\n\n\"The rapist part of me, I have the feeling that telling her that I'm a vampire is going to be a walk in the park compared to that.\"\n\n\"May I make a suggestion?\" Martin asked.\n\n\"I'm all ears.\"\n\n\"Tell her about the rapes first and save the vampire part for later.\"\n\n\"Alright but tell me why?\" \n\n\"Neither Ethan nor I had any choice but to reveal all of it at once or close together because both Rachel and Katrina got pregnant because of the rapes. Telling them when we did complicated an already complicated situation, you however have the opportunity of giving her time to adjust to one thing before moving onto the next.\"\n\n\"That makes sense and Martin? I am sorry that I just snapped at you.\" Patrick said.\n\n\"Don't worry about it.\" Martin said, \"I'm just glad that we can be here for you.\"\n\n*******\n\nFive-thirty.\n\nPatrick and Martin sat outside of Kevyn's apartment building and talked.\n\n\"Patrick tonight is going to be one of the hardest things that you've ever done but we're with you, all of us.\"\n\nPatrick nodded; he didn't trust himself to speak.\n\n\"Rachel sends her love and her best wishes.\"\n\n\"Martin..... I don't think that I can do this.\"\n\nMartin laid a hand on Patrick's shoulder, \"Yes you can and if you want a life with Kevyn you will.\"\n\n********\n\nKevyn was nauseated from nerves; she now wished that they weren't going anywhere to eat. She just wanted to hear about what horrible thing that Patrick did and be done with it.\n\n\"Maybe it's not that bad.\" she murmured, \"maybe he went to prison for embezzlement or something like that.\" she added but failed to convince herself. Whatever it was, it involved Melissa and her mother, she just knew it.\n\nPatrick was at her door right at six with her bat in his hands.\n\n\"You left this in the car.\" he said as he handed it to her.\n\nKevyn took the bat from him, leaned it against the wall and looked up at him.\n\n\"He's scared.\" she thought, \"He's really scared.\"\n\nThe need to comfort and sooth rose along with a flash of heat. Without saying anything she wrapped her arms around him and hugged him tight.\n\n\"You're shaking.\" she murmured against his shoulder, her own nerves forgotten.\n\nPatrick didn't reply but held her tighter until she wriggled in his arms; he was holding her too tight. He loosened his hold but didn't let her go and when he did it was because he had to.\n\nPatrick took Kevyn's hand in his and led her to the car. He opened the door and kissed her temple before helping her in. When he got in He reached over with a shaking hand and took hers.\n\n\"Patrick, whatever it is you don't have to tell me, I believe you about Melissa and ....\"\n\n\"No Kevyn, I have to tell you everything if I .... I have to tell you but thank you.\"\n\nMartin sat in the back behind Patrick and laid a hand on his shoulder in support. Kevyn had just given Patrick a way out of telling her about the past and he hadn't taken it.\n\n\"She's very special.\" Martin said telepathically, \"and she's beautiful.\"\n\nPatrick kept his eyes on the road and Kevyn's hand tight in his as he acknowledged Martin.\n\nKevyn didn't know what to think or say so she said nothing, for just a second she thought that she heard someone say something but when she looked over at Patrick, his eyes were on the road and he was nervously chewing his lower lip.\n\nMartin jumped; he knew that Kevyn heard him.\n\n\"Patrick! I think she heard me.\" he whispered.\n\n\"What?\"\n\n\"Patrick did you say something?\" Kevyn asked.\n\nPatrick's eyes left the road long enough to look at her and then they went back to the road.\n\n\"I..... We're here.\" he said gratefully.\n\nKevyn looked out of the car window and then rolled it down to listen to the sound of the ocean. Without waiting for Patrick, she got out and walked a short way from the car, closed her eyes and listened to the sound of the waves hitting the beach.\n\nPatrick waited in the car for a few minutes before getting out and going to her.\n\n\"It's beautiful here.\" She said when he was standing next to her, \"can we stay out here?\"\n\n\"I'll tell Caesar.\" Martin whispered and was gone.\n\n\"Sure, it's a private beach so we can talk out here if you want.\" Patrick replied.\n\nKevyn started walking toward the water not stopping until she was at the edge where the waves touched the shore. She kicked off her sandals, rolled the legs of her jeans up and walked into the water and then just stood still. Patrick followed suit and was soon standing next to her with an arm around her.\n\n\"Whatever it is, tell me.\"\n\n\"Kevyn....\"\n\n\"Tell me.\" She insisted.\n\n\"Let's sit down somewhere.\" Patrick suggested with a dry mouth.\n\n*******\n\nKatrina straightened the Ethan's bow tie while he squirmed.\n\n\"Will you hold still?\" She laughed.\n\n\"Let's change clothes, you can wear that yellow sundress and I can wear jeans and a tee shirt.\" he suggested, he hated dressing up as much as Katrina did.\n\n\"As much as I love the idea we can't.\"\n\n\"Why not? This is your fundraiser, you're the boss and I'm the boss's husband.\" Ethan replied.\n\n\"Yes well I think that would fall under abuse of power and all of that but the next fundraiser is going to be informal and something really fun.\" Katrina replied.\n\n\"I am so proud of you.\" he told said as he hugged her tight.\n\n\"You won't be saying that after I spend ten minutes throwing up after my very short speech.\" she replied.\n\n\"I will always be proud of you throwing up or not.\" Ethan replied, \"Now let's go say goodbye to Victoria and get this over with.\"\n\n******\n\nLinda looked around the room disappointed to see that the men with the exception of either the very old or the very young were with women and wearing wedding bands. The one thing she absolutely wouldn't so was break up a marriage- a fact that she was proud of. All of her husbands had been widowers, divorced or never married with Carl being the latter and what made him what she thought to be an easy mark.",
        "She didn't understand why Carl had insisted that they be here early, it was another hour until the fundraiser started and the Sinclaire's hadn't even arrived yet. She felt a tap on her shoulder and plastered on a smile before turning around to greet whoever it was.\n\n\"Linda!\" The woman greeted, \"Finally we meet!\"\n\n\"I'm sorry but do we know each other?\"\n\n\"Well not personally.\" the woman replied, \"I'm Maryanne Sinclaire Johnston\"\n\n\"I'm sorry.....\" Linda started to say but was interrupted by Maryanne.\n\n\"I believe that ......\"\n\n\"There you are!\" Carl said putting an arm around Linda.\n\n\"Maryanne! So nice to see you again.\" Carl said holding out his free hand.\n\nLinda gave Carl a confused look and then looked at Maryanne who she swore eyes just flashed.\n\n\"You know that I support all of Katrina's charities.\" Maryanne replied.\n\n\"Of course but I thought that you and George were on a trip somewhere.\"\n\n\"We were but we came back early just for this, aren't you going to introduce me to your lovely.... Wife?\"\n\n\"My apologies! I was just surprised to see you here, where's that husband of yours? Carl asked looking around.\"\n\n\"He's talking to Ethan about some problem with one of his companies. Apparently someone is stealing but at any rate, please introduce me to your wife.\"\n\nLinda was confused, how did this woman know her? She had never met any of the Sinclaires personally but this woman while outwardly polite to her didn't like her.\n\nCarl made the introductions as Linda smiled politely. When Carl turned away Linda asked Maryanne how they knew each other.\n\nMaryanne smiled at her but the smile didn't reach her blue eyes and walked away.\n\nSomething warned Linda that she should leave and now but she couldn't, Carl wouldn't allow it. She turned when there was a commotion in the front of the room, Ethan and Katrina had just arrived. \n\nLinda stared at Ethan open mouthed; the pictures of him were so far off the mark that it wasn't even funny; he made even the most handsome men in the room look like mutts. \"If Patrick Sinclaire had even an ounce of his good looks no wonder Melissa went after him.\" she thought and then she looked at Katrina and wondered how in the hell someone like her had captured someone like Ethan. That he loved her was obvious by the way he looked at and touched her and it wasn't a put on.\n\nMaryanne stood next to her second mate George and watched Linda. She found out about the almost rape from Rachel who thought that she knew about it and then she found out about Kevyn from Patrick himself. As soon as he told her she did what Patrick thought she would do.\n\n\"When can I meet her? What is she like?\" she asked, \"What does she do?\"\n\n\"This is exactly why I didn't tell you sooner.\" Patrick replied.\n\nMaryanne had backed off but didn't tell him that she knew all about Melissa Hunter and about what almost happened, it would have upset him and that would have served no purpose. Instead she learned what she could about Melissa's mother, after all \"the apple doesn't fall far from the tree.\" she told George.\n\n\"Whatever that bitch has planned ends tonight.\" she told George as they dressed for the fundraiser. George raised his eyebrows but didn't comment. He knew that Maryanne still felt guilty that she hadn't done more to protect her boys and now that she had an opportunity to help and protect Patrick it was full steam ahead. He didn't even ask what she had planned, he really didn't want to know but he planned to enjoy the show.\n\n*******\n\nPatrick led Kevyn to a spot a few hundred yards away from the water and sat down. Kevyn sat next to him and waited for him to start. The fact was, Patrick didn't know where to start, the past? The present? Where?\n\n\"Just start talking.\" he heard Martin whisper.\n\nPatrick cleared his throat and tried to speak but no sound came out.\n\n\"Did you go to prison for something?\" Kevyn asked.\n\n\"No, but.... I should have.\" \n\n\"Did you embezzle or something like that?\"\n\n\"No, Kevyn.... .\"\n\nHe felt her eyes on him, felt her concern and he wasn't going to do it, she told him that he didn't have to tell her, she said.....\n\n\"I'm a rapist.\"\n\nKevyn stared at him thinking that she had heard him wrong.\n\n\"What?\"\n\nPatrick took a deep breath.\n\n\"I... I'm or I was a rapist but....\"\n\n\"You raped women?\"\n\n\"Yes but.....\"\n\nShe had already moved away from him.\n\n\"Melissa, did you rape her? Is that why she was warning you about her mother?\"\n\n\"NO! I didn't rape her, I almost did but I didn't! I swear to you that before her I hadn't even touched another woman!\"\n\n\"How many?\"\n\n\"What?'\n\n\"How many women did you rape?\"\n\n\"I honestly don't know, but one was too many.\"\n\n\"Why aren't you rotting in prison somewhere?\" Kevyn asked angrily, \"never mind, I forgot who you are and who your family is.\" she said standing up.\n\n\"Kevyn wait!\" but she had already started walking away.\n\nPatrick started to go after her but was stopped by Martin.\n\n\"Stay here, she needs space, I'll watch after her.\" and then he vanished.\n\n*******\n\nLinda's neck prickled and she looked around the rapidly filling room to see who was watching her but she already knew. Carl took her arm and led her over to Ethan and Katrina for introductions.\n\n\"Carl! I'm glad that you made it.....\"\n\nEthan stopped talking and looked at Linda in disbelief. Katrina realizing that something was very wrong took Ethan's hand and gave it a squeeze.\n\n'I'm so sorry.\" Ethan said, \"I just thought I saw a ghost, please introduce me to your wife.\"\n\nThe urge to run hit Linda so hard that she felt faint.\n\n\"Ethan and Katrina Sinclaire this is my wife Linda, sweetheart, this is Ethan and his lovely wife Katrina. They have this fundraiser as well as others every year to raise money for the homes that house emotionally disabled children.\"\n\nKatrina looked from Ethan to Linda and wondered what the problem was.\n\n\"Hello, it's nice to meet you.\" Linda said.\n\n\"You too, thank you for coming.\" Katrina replied looking at Ethan from the corner of her eye.\n\nTrouble.\n\n\"Linda was thinking about helping on a committee and I know that you have another fundraiser coming up that you need volunteers for.\" Carl said giving Linda a squeeze.\n\n\"Of course, I'd be happy to help.\" she forced herself to say.\n\n\"Katrina!\" Maryanne called from behind Linda.\n\n\"Maryanne? What are you doing here? I thought that you and George were off sailing the Caribbean!\" Katrina said pleasantly surprised and reaching for Maryanne's hand.\n\n\"We were but something came up and besides, you know that I like to support your causes.\"\n\nLinda really wasn't feeling well and looked for restroom.\n\n\"Carl, is your wife alright? She looks a little pale.\" Maryanne said.\n\n\"I'm alright.\" Linda insisted.\n\nEthan now had a viselike grip on Katrina's hand, he was angry and she had to find out why. \n\nEthan forced himself to calm down, the last thing he wanted to do was to scare Katrina.\n\n\"Could you all excuse us for just a moment?\" Katrina asked tugging on Ethan's hand.\n\nThey went off into a corner with her still holding his hand.\n\n\"Ethan what's wrong?\" she asked.\n\n\"Baby, I'm sorry if I scared you but that woman....\"\n\n\"I'm alright but are you talking about Linda? What about her?\"\n\nKatrina listened stunned as Ethan told her who Linda was and her relationship to Melissa.\n\n\"You think that she's here to do what exactly?\"\n\n\"Maybe nothing but that woman taught her child to use her body to lure men into bed for their money! We almost lost Patrick because of her!\"\n\nKatrina looked at up at him and then over at Linda standing next to her husband still looking pale.\n\n\"Ethan, does your mother know about Melissa?\"\n\n\"I didn't tell her.\" he replied, \"why?\"\n\n\"I don't know but are you alright?\"\n\n\"I'm fine, thank you baby.\"\n\nThey headed back to the group, it was time to start.\n\n********\n\nKevyn started walking not really caring where she was going.\n\n\"What is wrong with me?\" she asked herself, \"I marry a loser and now I'm in love with a rapist! What in the hell is wrong with me?\"\n\nMartin followed Kevyn closely; he felt for both her and Patrick but was powerless to ease their pain. They would have to work through it like he had to with Rachel and Ethan had to with Katrina.\n\nFinally Kevyn sat in the sand and started to cry. She didn't hear Patrick walk up to her and sit beside her, when she realized that he was there she didn't look at him.\n\n\"Were you planning to rape me too?\"\n\nPatrick felt like he had been hit by a truck. \n\n\"God No! I would never hurt you like that!\"\n\n\"But you hurt others so why not me, why did you rape?\"\n\n\"The why is a story all of it's own and I promise to tell it to you but when I told you that I hadn't raped in years that was the truth, when I told you that I hadn't touched a woman until Melissa that was also the truth and if you think about it, you know that I'm not lying.\"\n\n\"Are you trying to tell me that you've been celibate until Melissa?\"\n\n\"That's exactly what I'm telling you.... Melissa, there was something about her that pushed me. That's no excuse and I thank god that I didn't hurt her anymore than I did....\"\n\n\"What was it about her?\"\n\n\"She.... She resembled my past victims; it was something that I didn't remember until recently....\"\n\n\"How can you not remember what your victims looked like? You were in their faces and in their bodies! How could you not remember?\"\n\nKevyn was crying again, \"I don't understand how you could hurt someone like that!\"\n\nShe got up and started walking again without waiting for any explanations. Patrick followed her wanting to touch her but too afraid to.\n\n\"Kevyn, could you stop for just a minute and let me try to explain?\"\n\n\"Explain what?! That I took a chance and fell in love with you and you're a damned rapist? Sure try to explain my stupidity!\"\n\n\"You love me?\" Patrick whispered.\n\nKevyn didn't answer but started walking again.\n\n\"I love you too!\" Patrick called after her but she acted as if she didn't hear.\n\n********\n\nThe fundraiser dragged on and Linda was feeling worse by the minute, she was barely paying attention when Katrina made her less than two minute long speech and rushed off to the nearest bathroom with Ethan following her.\n\n\"She's a brave woman, my daughter -in -law.\" Maryanne said from behind Linda, \"she abhors public speaking hence the short speech. As we speak she's in the bathroom throwing up.\"\n\n\"So why does she do it?\" Linda asked.\n\n\"There are some things worth suffering for and for her helping children is worth the fifteen minutes of discomfort that comes after every speech but as we know there's a difference between bravery and stupidity.\" Maryanne replied.\n\nCarl turned to George after watching Maryanne and Linda for a few minutes, \"I'm glad that our wives are getting along so well.\"\n\nWithout missing a beat, George smiled and replied, \"As am I.\"\n\nLinda didn't reply but excused herself to the restroom, gasping in surprise when she found Maryanne in the bathroom before her. \n\n\"How did you get here before me?\"\n\nMaryanne gave Linda a cold smile as the door to the bathroom locked."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "bbw"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/patrick-ch-08"
}