{
    "title": "Hidden Desires Pt. 03",
    "pages": [
        "Author's note: One of the core themes of this story is the subject of being born intersex. If you are not interested in such a subject then please move on.\n\nDru_Druthers once again wishes to express a heartfelt thank you to all who read, voted, favorited and commented on Parts 01 & 02 of this story. The overwhelming support has made writing this story worthwhile.\n\n(The story previously ended with: Terry snuggled into Jade, her voice soft and sleep laden, \"No fair, you ambushed me and now I'm too tired to love you,\" she complained.\n\n\"You'll love me another time baby. You needed this to help you get rid of all that pent up tension. Don't you feel much better now, much lighter?\"\n\n\"Uh-huh,\" Terry agreed. She mumbled some more then Jade heard her soft, quiet breathing as she fell fast asleep.\n\nJade kissed Terry's cheek and thought about her plans for tomorrow. She quickly followed Terry into sleep.)\n\n*\n\nTerry awoke feeling relaxed. Memories of what Jade had done flooded her and she felt her clit enjoying its own reminiscences. Jade was still asleep. If they were at home, Terry would have quietly sneaked to the kitchen and return with breakfast but after last night\u2015her not reciprocating\u2015she felt a need to treat Jade to some early morning loving despite the possibility of being caught. It was of the forbidden, but it made Terry feel a sense of her old fantasizing, the naughty part of her mind enticing her.  \n\nTerry slowly slipped beneath the sheets. Fortunately, Jade was lying on her back so Terry carefully lifted Jade's night gown up over her hips. She had to feel her way around because it was quite dark but with some maneuvering she managed to part Jade's legs and shift her panties out of the way without waking Jade.\n\nAs her face drew closer to Jade's sex, she could smell Jade's delicious scent. Breathing deeply, Terry luxuriated in the heady aroma that was all Jade. Starting off slow, Terry licked Jade's outer lips, working her way up one and down the other. She flattened her tongue and went straight up the middle then fluttered her tongue on the clitoral area.\n\nShe heard a quiet moan and felt Jade's legs on either side of her moving, kicking off the sheets. Needing more access to Jade's now dripping center, Terry quickly pulled Jade's panties off and returned her mouth to that heavenly place. Jade's hand found the back of Terry's head and drew Terry tightly to her as she locked her legs around her lover's body.\n\nTerry wasted no time. She knew all the right places to lick, when to suck and when to nibble lightly. Soon she had Jade's hips moving as Jade rode Terry's face. Terry's tongue buried itself as deep as it would go inside Jade's slit.\n\nOne hand was entangled in Terry's hair, trying frantically to press Terry deeper into her pussy while the other had grabbed a pillow and forced it to her face to muffle the scream that her climax might cause.\n\nIt wasn't an overly powerful orgasm to make her squirt but it was a most delightful way to be awakened. How it was that Terry's tongue bringing her to orgasm could be said to be delicious, she had no idea, but delicious it was. Unlocking her now aching legs, Jade tugged Terry up to her, kissing and licking the remaining juices from Terry's lips.\n\n\"Mmmm, good morning my sexy baby. That was the best wakeup call ever,\" Jade said with a dreamy smile.\n\n\"Good morning. I'm glad you enjoyed it; I certainly did.\"\n\nThey kissed and cuddled since it was still early. Soon they heard movement from other parts of the house and decided it was time to get up. They took turns in the bathroom. Terry was feeling better so Jade didn't need to guard the door this time.\n\nAfter dressing they went to the kitchen together where Julia was already cooking breakfast. They both pitched in, Jade finding some fruit and fixing coffee while Terry helped Julia with cooking the pancakes.\n\nRobert and Robbie joined them and they all sat down to a peaceful breakfast.\n\n\"So precious, are you going to take Terry around town today, show her the sites, few that they are?\" Julia inquired.\n\n\"That's what I planned to do unless you have something you'd like us to stay and do?\" Jade replied.\n\n\"Oh no, just wondering what your plans were. I'm going to be at the store today, helping with the stock count,\" Julia told them.\n\n\"We could help too if you'd like?\" Terry offered, \"It could help make things go faster.\"\n\n\"That's very nice of you to offer Terry but I'm sure Jade has plans for you two today,\" Robert said with a warm smile. He was really starting to like Terry.\n\n\"We can do the sites tomorrow before we leave, if you need the help we'll be happy to Dad,\" Jade said in earnest.\n\nTerry was a wiz with numbers of any kind so this was a good opportunity for her to spend time with Jade's parents, doing something that was familiar to her, or so Jade thought.\n\n\"Well how about a compromise?\" Julia offered, \"You two can help us out until lunch time and then you can spend the rest of the day site seeing.\"\n\n\"Sounds like a good plan to me,\" Robert said.\n\n\"Me too,\" Jade agreed. \"Baby?\"\n\nTerry blushed slightly at Jade using her favorite endearment in front of everyone. Robbie grinned but kept quiet after last night's warning. Robert and Julia looked at each other and smiled.\n\n\"Yes,\" Terry said and smiled.\n\n* * * *\n\nIt turned out that with Robert's four regular employees, Robert himself, Julia, Robbie, Jade and an expert accountant in Terry, the stock count, which usually took two days, was done in record time. Terry and Jade stayed on until well after lunch in an effort to finish the job.\n\nDuring the work, the family saw the change in Terry from nervous in-law to professional accountant. Taking charge, Terry showed Robert a more efficient way he could do the count thereby lessening the time it took. By three pm the last numbers were crunched and the final tally taken.\n\n\"Goodness, you certainly know your stuff Terry,\" Julia said warmly. They were all lounging around Robert's small office, recovering from the seemingly endless counting.\n\n\"That she does. Thank you so much Terry, this new system will make things so much easier from now on,\" Robert said with a little bit of excitement in his voice.\n\n\"You're welcome Robert. Truly, it was my pleasure to be able to help.\"\n\n\"So now that we've finished so early how about we head home, get cleaned up and I'll treat all of us to a very nice dinner. Rob be sure and bring Margaret too, okay?\" Robert said.\n\nThey all returned home, showered and dressed. Robbie hurried off to pick Margaret up as Robert drove the rest of them to the nicest restaurant in town; Aquarium. Robbie and Margaret arrived a little while later.\n\n\"Terry, this is my beautiful Margaret,\" Robbie said happily.\n\n\"It's nice to meet you Terry,\" Margaret said with a bright smile and an offered hand.\n\n\"It's nice to meet you too,\" Terry replied.\n\nTerry was slightly nervous but Margaret's warm and inviting personality won Terry over and soon the pair was chatting like old friends.\n\nRobert decided that he liked Jade's choice in a mate and started thinking of Terry as another daughter. Counting Margaret, now Robert was proud to say he had three.\n\n* * * *\n\n\"I really liked Mags; your brother is a lucky guy,\" Terry said as they were changing out of their dresses.\n\n\"Yes, but not as lucky as I am,\" Jade said as she hugged Terry from behind and buried her face in Terry's long hair, breathing in Terry's scent.\n\n\"God you smell so good,\" Jade whispered as her hands crept up to cup Terry's bra covered breasts.\n\n\"Ohhh, are you attempting a repeat of last night?\" Terry purred as Jade's hands lightly pulled at Terry's nipples.\n\n\"Yes, definitely. Think I can get away with it?\" Jade asked as she pushed her hips forward, grinding her mound on Terry's firm butt.\n\n\"You might not but you certainly get an A for effort,\" Terry replied enjoying all that Jade was doing. Her anxieties about being over heard were all but forgotten when a light knock at the door caused both women to freeze.\n\n\"Just a second,\" Jade called as both scrambled to put their robes on. Covered and with a nod from Terry, Jade opened the door to find her mother.\n\n\"Hi precious, sorry to disturb you two but I just wanted to know how early you two were planning to go out tomorrow?\"\n\n\"I'm not sure Mom,\" Jade answered.\n\n\"Early morning church service. I'll leave breakfast for the both of you if you're not up before we leave.\"\n\n\"It's okay Mom, we can make something or go out for breakfast so don't worry,\" Jade said.\n\n\"Are you sure?\" Julia asked.\n\n\"Yes Julia, it's alright. We'll be fine,\" Terry agreed.\n\n\"Okay, have a good night girls,\" Julia told them as she kissed first Jade's cheek then Terry's. She left closing the door behind her. Jade turned to Terry and saw her holding her cheek where Julia had kissed her.\n\n\"Baby?\" Jade questioned looking at Terry.\n\n\"She kissed me. Does that mean that she's okay with me?\" Terry wondered aloud.\n\nJade took her somewhat stunned girlfriend in her arms, \"Yes my love, my mother likes you and so do Dad, Robbie and Margaret. I was watching Dad today; he had this little smirk all day while you were working. I think you impressed him a lot.\"\n\n\"Yeah?\"\n\n\"Yes. They see how happy I am with you, how content I am. They know that the spring in my step, my constant smiling and laughter is all because of you.\"\n\n\"You do those things for me too Jade.\"\n\nCuddling in bed, they were content to just hold each other until they both fell asleep sensing that life couldn't get any better.\n\nChapter 28\n\nIt was still dark out when Jade woke up. Terry was sleeping soundly so Jade carefully slid out of bed and went to the bathroom. She smiled to herself at what she had planned for today.\n\nKnowing that her parents woke up early, Jade tapped lightly on their door and heard her father's voice telling her to come in.\n\nHer parents were both propped up against the headboard of their bed. The reading lamps were on and it seemed they were waiting for Jade's arrival.\n\n\"You both knew I'd be coming huh?\" Jade asked as she sat on her mother's side of the bed, facing them.\n\n\"Yes Jade, we expected you since yesterday,\" Julia said with a smile.\n\n\"Well?\" Jade said and waited for what her parents were going to say.\n\n\"She's a lovely girl precious. Beautiful and smart, reserved but I can see she loves you completely,\" Julia told her daughter.\n\n\"I agree with your mother, the love she has for you is obvious and I can tell how much you love her too. You've been married before so you know what it means to share and compromise. You've been living with her for some time now so you already know if you two can make it together,\" Robert told his daughter seriously.\n\n\"From what I've seen over this weekend, you two are good together. We are happy to have Terry join our family,\" Julia announced proudly as she opened her arms to Jade.\n\nJade went to her mother and buried her face in her mother's shoulder as she hugged her tightly.\n\n\"Thank you Mom,\" Jade said softly. She did the same with her father before she sat back down.\n\n\"This means a lot to me and to her too. She was really worried that you wouldn't like her,\" Jade told them.\n\n\"Well meeting in-laws is a scary thing. I was petrified when I had to meet your parents,\" Robert said while looking at Julia with a small smile.\n\n\"Yes, you were so nervous, your hands were shaking,\" Julia said to Robert with a grin, \"I had dared to tell him what your Oji promised to do to any boy who came calling,\" Julia told Jade and laughed.\n\n\"What did Oji promise to do?\" Jade asked intrigued.\n\n\"Well, he didn't trust these American boys so he told me to warn them that if they didn't treat me with the proper respect, he'd use his katana sword to take their manhood,\" Julia said and shook her head at the memory.\n\n\"So you were afraid Oji was going to do that to you Daddy?\"\n\n\"Well you have to keep in mind that I was young and dumb. A part of me actually thought it could happen,\" Robert admitted.\n\nJade couldn't help herself and laughed at her father's then naivet\u00e9'. They chatted some more before Jade made her way back to her room but not before making sure that Julia left Jade's surprise out where she could easily find it before she and Terry went out later on.\n\nTerry was still asleep so Jade slipped back into bed for another couple of hours rest.\n\n* * * *\n\nThey left the house by nine so they would have plenty of time before they had to catch their flight later that afternoon.\n\nThere wasn't much to see in the little town. Jade took Terry to the town's botanical gardens where they walked, enjoying the flowers. They spent an hour at the small flea market, picking up a few souvenirs for their friends. They stopped at Margaret's cafe for a quick bite and to say farewell then Jade took Terry to The Overlook.\n\nThe Overlook was the local romantic spot used mostly by the town's teens. A small plateau of sorts, it afforded a great view of the whole town especially at night.\n\nDuring the daytime it was mostly deserted, especially on Sundays. Jade parked her mother's car in a shaded corner and the pair stepped out into the cool breeze. There were a multitude of different sized rocks that visitors often sat on to take in the view of the town.\n\nThey found a shaded rock that was large enough for both to sit on. Terry leaned on Jade and enjoyed the quiet companionship of her lover.\n\n\"Baby, have you ever been to Vermont?\" Jade asked after a while.\n\n\"No, I haven't. Have you?\"\n\n\"No. I thought it would be a nice place to visit,\" Jade said.\n\n\"Yeah, I guess so.\"\n\n\"There is another reason I'd like to go,\" Jade said softly.\n\n\"Oh, what's that?\" Terry asked.\n\n\"This,\" Jade said as she stood and then went down on one knee as she reached into her pocket for the little box.\n\n\"Terry,\" Jade began, her voice thick with all that she was feeling, \"these few months that we've been together have been the most wonderful of my life. You've given me more happiness than I've ever dreamed possible. Please Terry, say you'll be with me forever, that you'll be mine always. Terry, marry me, be my wife and let me be yours,\" Jade finished as she opened the box.\n\nTerry's tears were already flowing at Jade's words and the emotions that Terry saw in Jade's eyes. She let out a big gasp at seeing the beautiful ring that Jade held.\n\n\"Yes!\" Terry squealed as she hugged Jade tightly almost knocking her over in her rush to embrace her. They held each other, neither able to keep their tears at bay.\n\nAfter a long while, they parted and both sat back on the rock as Jade placed the ring on Terry's finger.\n\n\"Oh Jade, it's so beautiful,\" Terry said her voice catching at what the ring on her finger meant. She had dared to dream that someday it might happen and now another dream was coming true, thanks to Jade.\n\nJade quickly scanned the surroundings and seeing that they were alone, brought her lips to Terry's. The kiss was long and slow, each feeling the overflowing love within the other.\n\n\"So you ready to go tell the family that we have a wedding to plan?\" Jade said when the kiss ended.\n\n\"Yes, I want to tell everyone,\" Terry said excitedly.\n\n\"They'll probably want to throw us a party if my parents haven't already organized one.\"\n\n\"They knew?\" Terry asked her eyes wide.\n\n\"Yes, I bought your ring when I was here last month. Mom's been holding on to it for me,\" Jade told her with a smile.\n\n\"You've been planning this for a month?\" Terry asked shocked.\n\n\"Baby, I've been planning this since the first night we made love,\" Jade said seriously. She kissed Terry again before she continued, \"Sweetheart, since that first time, I knew I never wanted to be without you. My mind, my body, my heart and my soul all belong to you.\"\n\n\"Oh Jade, my love, my only love, I feel that way too,\" Terry gushed as she pulled Jade's lips to her own again. \n\n\"Oh baby, I love you and I just want to rip your clothes off and make love to you,\" Jade growled as she buried her face in Terry's neck, breathing in her sweet scent.\n\n\"So do I love but it'll be much sweeter to wait until we get home,\" Terry told her though her voice didn't sound all that convincing leading Jade to believe that she was feeling just as desperate to be naked with Jade.\n\n\"Baby, let's postpone our flight until tomorrow and check into the motel for a couple of hours,\" Jade said her voice reflecting her need to have Terry.\n\nTerry's want of Jade was just as urgent, \"You call your parents and I'll call the airline?\" Terry suggested as they both stood and rushed to the car.\n\n\"Hi Mom, listen\u2015\" Jade was cut off as her mother started asking about the proposal and if Terry accepted.\n\n\"Mom! She said yes, we're pushing our flight back until tomorrow so we can celebrate. We'll be home later,\" Jade paused as she listened to her mother's protests about them not coming home right away.\n\n\"Mom we are going to celebrate for a while on our own then we'll come home and you and dad can do whatever,\" Jade told her. Her mother was not happy, but relented, figuring out what Jade probably meant about 'going to celebrate'\u2015she was already planning a special dinner.\n\nTerry had gotten through with the airline and their new departure time was set for seven the next morning.\n\nJade drove them to a little motel. The desk clerk was an attractive older lady who gave them a knowing smirk when Jade asked for a room at the back. Handing Jade the room key, she grinned and gave Terry a little wink, causing Terry to blush.\n\n\"I think the clerk knows why we're here,\" Terry said as they walked briskly towards their room.\n\n\"Yes, I believe she does. That was Ms. Rhodes and as far back as I can remember, rumors about her all point to her being a lesbian,\" Jade said, \"Besides, I want you so badly that I'm sure it's visible,\" Jade told her as they reached their door.\n\nChapter 29\n\nWith the room door closed and locked, Jade felt her desire for Terry rise almost to the point of madness. Jade felt a near desperation in her wanting of Terry. She was just about ready to rip Terry's clothes off and ravish her until neither could move.\n\nTerry was scanning the room and had no idea of the thoughts passing through Jade's mind but she too was in great need of loving Jade, of wanting to take Jade and be taken by her. She could already feel her clit swelling at the thought of what they would be doing to each other.\n\nWhen Terry turned to Jade, her smile, one of purest love, tempered Jade's lust. Placing both of their purses on the small table at the side of the door, Jade took her lover in her arms and kissed her. A kiss filled with all her joy of being with Terry.\n\nSlowly, Jade started removing Terry's clothes, kissing and caressing all of Terry's skin as it was exposed. The feel of Terry's soft skin, the scent of her body was driving Jade to go faster but she forced herself to slowdown and savor the experience.\n\nTerry was thoroughly enjoying how Jade was treating her. Jade's soft touches and sweet kisses, licks and light nibbling all caused Terry to momentarily forget that she wanted to touch and kiss Jade too. She remained standing there, floating in the ocean of sensations that Jade was eliciting. Before she realized it, Terry was wearing only her panties as Jade guided her to the bed and had her lying on her back.\n\nTerry watched, her eyes drinking in the sight of Jade as she slipped out of her clothes. Naked, Jade moved towards the bed, her pussy lips already glistening and distended with her arousal. Terry growled at the erotic way Jade's breasts jiggled slightly as she moved and licked her lips in anticipation of tasting Jade's wetness but she would have to wait.\n\nJade's eyes feasted on Terry's beautiful body and the outline of her engorged clit covered by her black panties. Starting with Terry's right foot, Jade licked sensually at Terry's toes, sucking each one slowly, causing little moans to escape. Doing the same to the other foot, Jade worked her way up Terry's leg and nibbled her inner thighs. She sucked softy on the sweet flesh and gently nuzzled her cheek against Terry's groin.",
        "\"Oh Jade, oh love,\" Terry called out but no sooner had she started than Jade stopped.\n\nTaking Terry's panties off, Jade extended her tongue and licked just above Terry's clit, up to her stomach. She paused briefly to swirl her tongue in Terry's bellybutton before licking up to the undersides of Terry's breasts.\n\nShe moved up leaving a saliva trail all around Terry's breasts, avoiding those hard nipples for now. She lightly suckled Terry's neck, nibbled on Terry's earlobes and plunged her tongue in Terry's mouth.\n\nIt was torture but of a deliciously erotic kind that both women enjoyed.\n\nSucking hungrily on Jade's tongue, Terry ran her hands over Jade's back, loving the feel of Jade's soft skin. She cupped Jade's firm butt cheeks, squeezing and massaging the taut flesh and making Jade moan into her mouth.\n\nJade, for a moment, was distracted by Terry's fondling but she recovered, breaking the deep kiss and latching her lips to Terry's nipple. Jade tongued it rapidly and sucked hard causing Terry to cry out. In time she moved to the other one and did the same. With Jade's mouth on her nipples along with everything else Jade had done so far, Terry was feeling frantic.\n\n\"Ohhhhhh Jade, love, please,\" Terry begged as her hips tried to move under Jade's body showing Jade her need. She was desperate for some sort of contact on her almost painfully erect clit.\n\nJade shifted, adjusted both their bodies and lowered her wet, swollen pussy to Terry's clit. Terry's clit, long and slim as it was, fit nicely as Jade's swollen and widely splayed lips covered it as if to hide it from any and everything but her love. Jade's pussy, slick with her instant liquid love, easily slid along the length of Terry's sexy and sensitive clit bringing them both pleasures that racked their minds and bodies with their sexual love.\n\nJade loved how her pussy covered Terry's clit, and couldn't help but look down as if seeing her pussy swallowing that lovely clit that brought them so many joys. Sensations of love, of unadulterated sex, shot through her as she heard Terry's voice moaning with her maddening joys.\n\n\"Jade. My god...oh-oh, don't stop. I love you, Jade. Oh, I love you!\" Terry uttered hotly as her climax was so near.\n\nJade, feeling her own climax so close, the sensations rushing through her, just had to take Terry's clit in her mouth. Her body screamed at her not to stop her movements for wanting her own release but she quickly moved and took Terry's clit into her practiced throat, and moaned deeply as she felt Terry's love gush into her and down her throat.\n\nTerry, her hips lifted to the air, still raised her head looking at Jade with wildness in her eyes as she saw Jade taking her fully. The sight was so erotic, so compelling, that Terry grunted in both disbelief at all she was feeling, but also the utter decadence of their love that was so beautiful, so wondrous to her. She gladly gave Jade spurt after spurt of her love, her hands reaching spastically for Jade's hair, but finally giving up in total exhaustion.\n\nReluctantly, Jade released Terry's clit. Jade's own sex was throbbing madly in its wanting release. Terry, though tired, sensed Jade's need.\n\n\"Jade, come and let me love you please,\" Terry called, her hand pulling on Jade for her to move up and straddle Terry's face.\n\nJade did so happily, holding the headboard for support she gently lowered her hungering pussy to Terry's waiting mouth. To taste Jade's sweetly flowing love caused such a feeling of bliss in Terry. She loved Jade's taste, Jade's scent. It brought her such pleasure to lick those puffy lips and suckle Jade's sexy clit.\n\nJade was so hot, so in need that with only a few practiced strokes of Terry's skilled tongue, she shuddered in delicious ecstasy.\n\n\"Terry, oh baby!\" Jade cried out, her hands gripping the headboard fiercely. Jade's hips jogged automatically on Terry's face then quickly sitting on it in her throes as her conscious mind worked to force her to maintain some control so as not to hurt Terry, her orgasm washed through her so hard.\n\nJade felt Terry's hands on her cheeks, pulling Jade's pussy tightly to her mouth, drinking all of Jade's love as it poured from her. Terry's tongue delved deep into Jade's sex, greedily pulling every ounce of liquid from Jade.\n\nBeing satisfied that she had completely gotten all of Jade's climax, Terry placed several gentle kisses on Jade's slit then she helped Jade move to lie next to her. Both were feeling tired, but sated for the moment and gladly snuggled into each other.\n\n\"I love you so much and that was so amazing,\" Terry whispered breathlessly to Jade along with many sweet kisses.\n\n\"That was almost too good my beautiful baby. I love you and I love that you're wearing my ring,\" Jade said with a mischievous grin.\n\n\"Hmm, you marking me with this ring, showing that I belong to you?\" Terry asked with a teasing tone.\n\n\"Oh yes, you're mine and mine alone. No one else can have you and do you know why?\" Jade said seriously.\n\n\"Why?\"\n\n\"Because you own me,\" Jade said breaking into a wide grin.\n\n\"Love, that doesn't make any sense,\" Terry said.\n\n\"Doesn't have to make sense to anyone else my beautiful love, it makes sense to me, to us,\" Jade replied and followed with a hard kiss that stole Terry's breath.\n\n\"You're right, yes, that did make sense,\" Terry giggled.\n\nThey rested for a bit, lovingly caressing each other, stirring the feelings of want again. This time Terry pinned Jade down as she kissed and licked Jade's body. No part of Jade was left untouched by Terry's lips and tongue; even raking her teeth lightly over Jade's nipples. Jade really liked that and growled her approval.\n\nMaking her way down Jade's body, Terry lifted Jade's legs so she could lick and suck the back of Jade's thighs and knees. Terry worked her lips down to Jade's cheeks, nibbling those sweet globes.\n\nJade held on to her own thighs helping Terry to have access to her butt. She felt Terry's hands part her cheeks and Terry's tongue fluttering lightly on her rose bud. The sensation almost sent Jade into orbit.\n\n\"Oh god baby, don't tease me like that, please,\" Jade pleaded as Terry tongued her bud without mercy. She felt Terry slide first one then two fingers inside her hot, wet pussy. Jade whimpered in protest when those fingers left her pussy but she groaned when she felt one finger at her bud.\n\nShe felt Terry's tongue move up her slit and settle on her clit as she worked her finger in and out of Jade's anus, then a second finger gently joined the first. Terry wrapped her lips around Jade's clit and sucked hard as she continued to finger Jade's anus.\n\nJade's whole body shook, trembled, wound and unwound itself as she experienced a lightshow behind her eyelids. She screamed out her joy as her anus tightened around Terry's fingers, her vaginal walls contracted and her orgasm gushed, soaking Terry's chin and neck.\n\nSpent and trying desperately to breathe, she was vaguely aware of Terry leaving the bed and going to the bathroom. An eternity later or maybe just a few minutes, she felt Terry get back on the bed. Jade opened her eyes and looked into Terry's beautifully smiling face; her gray eyes were filled with love.\n\n\"I love you my soon to be wife,\" Terry told her and leaned in for a kiss. Terry's lips on hers spurred a spike in Jade's passion and desire once again. She pulled Terry's body on top of hers, pressing their bodies tightly together. She felt Terry's hard clit pressing on her and groaned her need to feel that sensuous organ inside of her.\n\n\"Baby, love me, your clit...fuck me with it,\" Jade cried desperately, her need overwhelming her.\n\nTerry positioned herself between Jade's legs. She eased her long clit inside Jade's slit, her own arousal driving her. Slowly she began humping her hips sending pleasurable sensations through both of their bodies.\n\n\"Yes-yes-yes,\" Jade chanted out her pleasure. She reached up and cupped Terry's beautiful breasts, her fingers settling on Terry's hard little buds. Jade pinched, having learnt just how much pressure Terry liked.\n\nTerry threw her head back and cried out, her hips moving faster as she was rushing to another climax. Jade, knowing Terry and how close she was, wrapped her legs around Terry and pulled her tightly to her, Terry's clit going as deep inside of Jade as possible.\n\n\"Oh Jade, Jade, Jade, Jaaaadddde,\" Terry screamed as her orgasm hit, triggering Jade's as well. The blissful feelings seemed to roll through both and lingered as they fell, exhausted and happier than ever.\n\nWith their passion abated, they snuggled together, despite the wet spot they made, holding on tightly and with whispered words of deep love; they fell into a deep sleep.\n\n* * * *\n\nSometime later, Jade stirred and awoke. It was still bright outside with a little sun streaming through the curtains. She turned and saw her beautiful fianc\u00e9e looking at her.\n\n\"Hi baby. Been awake long?\" Jade asked as she stretched languidly.\n\n\"A little while,\" Terry answered. She moved to Jade and laid her head on Jade's breast. Jade's hands automatically went around Terry.\n\n\"I love being like this with you,\" Terry said and sighed her contentment.\n\n\"Mmmmm, so do I. I hate to have it end but we should shower and head back,\" Jade said with regret.\n\n\"Yes we should. A nice long shower,\" Terry said with heat in her voice. Jade grinned as they sprang from the bed and raced to the bathroom. It would be a while before they would be finished.\n\nChapter 30\n\nReturning the room key had Terry blushing again but even with her salacious grin, Ms. Rhodes remained professional biding them a 'thank you' and 'please come again'.\n\nArriving back at Jade's parent's house, they were greeted with a huge banner hanging in the living room. Jade's parents along with Robbie and Margaret were there.\n\n\"Congratulations you two,\" Robert boomed loudly as he hugged Jade and kissed her cheek then did the same with Terry.\n\n\"Thank you Daddy.\"\n\n\"Thank you Robert,\" Terry said as Julia moved to offer her well wishes too.\n\n\"I'm glad you're joining the family Terry,\" Robbie said in earnest, hugging her after he had hugged his sister, \"Now, just because you're a lady doesn't mean I won't give you the 'you hurt my sister and you'll get it' speech, I've got my eye on you,\" Robbie told Terry seriously.\n\n\"Oh don't mind him, he's all bark,\" Margaret said and laughed at Robbie's look of disbelief at her selling him out. She too hugged the pair and wished them well.\n\n\"It's a good thing I love you Mags otherwise,\" Robbie warned but all could see he was bluffing at being stern.\n\nJulia hustled them all to the dining room where she had a large dinner spread waiting. After their romp, Terry and Jade were famished and ate heartily.\n\n\"So any word on a date yet?\" Julia asked.\n\n\"Not really, we haven't talked about it much yet,\" Jade said.\n\n\"Are you two going to go for a marriage, a civil union or a domestic partnership?\" Margaret asked.\n\n\"Whichever one lets me call this wonderful woman my wife,\" Jade said making Terry blush sweetly.\n\n\"Gosh you really are in love, I've never seen you so sappy before,\" Robbie told his sister, shaking his head as if in astonishment.\n\n\"Oh leave you sister alone and be glad that she's happy,\" Robert said with a smile.\n\n\"I am Dad, I was just making an observation,\" Robbie said in his defense.\n\n\"Seriously speaking though, the legalities of it all are very limited in that if we get married it may not be legally recognized in most states. A civil union or domestic partnership is even more troubling because it affords even less protection under the law,\" Jade told them.\n\n\"Some states now allow for same sex marriage but outside of their borders very few states will recognize the marriage, it's still all so complex where laws are concerned,\" Terry said.\n\n\"We lucked out in that we live in a state that will allow us to have a civil union or a domestic partnership but we may lose out on some of the simple freedoms that straight married couples enjoy,\" Jade informed them. She had done a great deal of research on this in preparation for her proposal.\n\n\"One of the basic things about a straight marriage is that if I'm in the hospital and my husband arrives, he'll be taken to me immediately but it's not necessarily so with my wife. The hospital may not have a friendly policy about same sex relationships.\n\n\"The same applies if I'm injured and can't make any medical decisions for myself. In that case, we must have a specially made legal document that states that my wife is able to make any medical decisions I cannot make. The system is terrible but until it changes, we'll just have to make do as best we can,\" Jade said wearily. Her revelation of just how complicated their life would be dampened the celebratory mood somewhat, but Terry and Jade still loved it.\n\n\"It will be a challenge, sure, but you two are happy together, in love with each other and that's all that matters. If push comes to shove, we support you no matter what,\" Robbie declared with conviction.\n\n\"Well put my darling boy,\" Julia said with tears in her eyes. She had never been more proud of her son.\n\n* * * *\n\nHaving to catch an early flight in the morning, they called it a night and Jade and Terry retired to bed.\n\n\"It's unfair how same sex couples are treated under the law,\" Jade said her voice filled with anger and some frustration.\n\n\"I know it is Jade, it's especially hard for you who enjoyed the freedom within a straight marriage to now be restricted with the confines of a lesbian one. However, look at it this way, things are much better now than they were a few years ago. Things are changing even if it's slowly,\" Terry told her trying to look on the brighter side of things.\n\n\"Yes, you're right baby,\" Jade agreed. \"Have you been researching lesbian marriage in preparation for us?\" Jade asked with a smile.\n\n\"Oh love, every lesbian who dreams of marriage knows the ins and outs of the law when it comes to marriage rights. I do however admit that it's been in the forefront of my mind lately.\"\n\n\"Good, because I am going to marry you, you will become Mrs. O'Connor.\"\n\n\"Really, are you going to be Mrs. Matthews?\"\n\n\"If you want me to be. We'll have to decide on those things.\"\n\n\"Yes, we have a lot to talk and think about.\"\n\n\"We'll work it out baby. I love you so much so whatever makes you happy, I'll be good with it,\" Jade said as she pulled Terry close.\n\n\"I love you too and it's the same for me,\" Terry agreed as she snuggled into Jade's warm embrace.\n\n* * * *\n\nThe booming sound of Jade's phone alarm jolted her awake. She snatched it up off of the bedside table and shut it off. Terry stirred but didn't wake. She looked so beautiful and Jade hated to wake her but they had a plane to catch.\n\n\"Terry, baby, we have to get up,\" Jade implored as she gently nudged Terry. Terry grumbled a bit but then opened her eyes. Her hand went to Jade's cheek and she smiled.\n\n\"We're going home today,\" she whispered.\n\n\"Yes baby, we are.\"\n\nThey rolled out of bed and Jade packed their few remaining things as Terry went to the bathroom. Jade took her turn quickly when Terry returned to the room and after dressing they rushed downstairs.\n\nThe rest of the family was already up including Margaret, who had spent the night. Julia had made coffee and was putting out bagels for breakfast.\n\n\"Good morning girls,\" Julia said happily as they entered.\n\n\"Morning Mom,\" Jade answered as she reached for the much needed coffee.\n\n\"Good morning,\" Terry said following Jade's lead and pouring herself a cup.\n\n\"Got everything packed?\" Robert enquired.\n\n\"Yes, did the last this morning.\" Terry told him.\n\n\"Well we wish you didn't have to rush off but as soon as you've finished eating we have to go,\" Robert said his tone showing his regret that they couldn't stay longer.\n\n\"We know Daddy, but you'll see us again soon, promise,\" Jade assured him.\n\n\"Are you two gonna visit again or are we going to come to you?\" Robbie asked.\n\n\"Good question but either way, we'll see each other,\" Jade said with Terry nodded her agreement.\n\nWith hugs and kisses, they said their goodbyes to Robbie and Margaret. Robert and Julia drove them to the airport and watched with mixed emotions of joy and some sadness at their departure.\n\nOn the flight home they both napped in preparation for their return. Though both wanted nothing more than to go straight home and relax, they each had things that wouldn't keep any longer. With a quick goodbye, they each went their separate ways to work.\n\nChapter 31\n\nAfter informing their friends about the engagement and the ensuing party that Paula insisted on throwing, Jade and Terry went about deciding on just how they were going to get married. It was a tedious job deciding the fine details.\n\nAs Jade had suspected her grandparents wholeheartedly disapproved of her choice in a mate. Her grandmother tried to first bully, then guilt Jade into stopping the so-called madness.\n\nIt hurt her to do it but Jade told her grandmother flatly, accept it or don't either way her soon to be wife was here to stay. In the end the older heads of the O'Connor clan turned their backs on Jade.\n\nIt amazed Terry that someone as kind and understanding as Robert came from parents who were so narrow-minded and bigoted.\n\n* * * *\n\nJade was determined to have a Vermont honeymoon along with the official paperwork. Having a large wedding there could be a problem for the fact that everyone would have to fly there, it would be much easier on everyone to just have everything right here at home. The commute would be far less expensive.\n\nThey were sitting at home debating the issue when Terry's keen mind came up with the possible solution.\n\n\"It's going to be hugely expensive for everyone to go all the way to Vermont just to see us wed no matter how much they love us,\" Terry said with a frown.\n\n\"I know baby but even if our state won't recognize the Vermont certificate, I really want to have one and an actual marriage, even if it's only valid in a handful of states,\" Jade said stating her case.\n\n\"Love, what if we do that and have the wedding here too?\"\n\n\"Two weddings?\" Jade asked, her face showing her skepticism.\n\n\"Well think about it love, we have all our friends here and it's just a couple of hours on a plane for your family. We could have a nice celebration here with friends and family. We could have a simple ceremony with us declaring our love and commitment then we can go to Vermont and have the wedding you want and our honeymoon,\" Terry ended with a sexy smile.\n\n\"It sounds perfect, and we should talk more about it later but for now, let's practice for that honeymoon,\" Jade said seductively as she pulled Terry from the couch and to the bedroom.\n\n* * * *\n\nThree months later they were ready. The paperwork had been filed and approved for their civil union within their state and Jade had flown to Vermont and filed for their marriage license and made arrangements for their long awaited honeymoon.\n\nSo far things were on schedule. Jade's parents, along with Robbie and Margaret's arrival was set and Terry was handling the last minute details with the decorator and caterer.\n\nThe backyard was large enough to hold the thirty or so guests they would have. It accommodated the small arch where they would stand, enough room for the tables and chairs, space for a short aisle and even a small dance area for the reception. It was set to be elegant and beautiful.\n\n* * * *\n\n\"Precious, your dad is walking you down the aisle but who is going to give Terry away?\" Julia asked as Jade was getting them settled into the bedroom they would be staying in. Terry was down the hall doing the same with Robbie and Margaret.\n\n\"Well Mom, Terry decided that she wouldn't walk down the aisle but would just wait at the altar with her maid of honor,\" Jade told her.",
        "\"I don't know if this would be something you both might like but why couldn't I walk both of you down the aisle, at the same time?\" Robert suggested.\n\n\"Your father and I talked about it and we feel it might be nice and kinda symbolic to show that we are happy and accepting,\" Julia interjected.\n\nIt was a beautiful thought and Jade loved her parents for thinking about it.\n\n\"Daddy, why don't you ask Terry if she'd like you to do it and see what she says? It'll mean a lot coming from you,\" Jade told him.\n\n\"That's a good idea,\" Robert agreed.\n\nAfter dinner, Robert asked if he could have a private word with Terry. Her eyes searched and found Jade's as Terry silently conveyed her worry but Jade just smiled warmly.\n\nTerry led them out to the backyard. The decorator would be by the next day to turn the empty space into a beautiful setting.\n\n\"How are you feeling Terry?\" Robert began.\n\n\"I'm happy, excited and a little nervous,\" Terry said softly.\n\n\"Listen, I was thinking about this walking down the aisle and Jade said that you're not walking. Terry, every girl deserves to walk down the aisle at her wedding. I know you don't have a dad to walk with you so I was thinking that maybe you'd like to walk with me,\" Robert told her. Terry gasped at hearing his offer.\n\n\"I thought that you and Jade could walk with me at the same time, one on either arm.\"\n\n\"Oh god, Robert that's so sweet of you to offer,\" Terry said, a few tears suddenly rolling down her cheeks. This was so much more than she could have hoped for; this was Robert's acceptance of her in his daughter's life, and perhaps as another kind of daughter as well.\n\n\"So do you accept? Can I walk you down the aisle Terry, my daughter?\" At hearing the words 'my daughter' Terry cried out her joy and rushed into Robert's open arms. She had never had a father and now this wonderful man was offering her something that she never thought she'd have.\n\nTerry truly felt blessed to be entering into this family of amazing people. Jade and Julia were watching from behind the curtains and both smiled at the display. They both rushed outside and joined in the loving moment. Robbie always the joker came out with Margaret singing we are family. They too got pulled into the family hug. Jade smiled brightly; life was good.\n\nChapter 32\n\nFor having done this before Jade didn't expect to be so nervous but here she was feeling like a wreck. Paula was no help as her maid of honor since she just laughed at Jade's anxiousness.\n\n\"There's nothing to worry about J, you're going to go out there, looking beautiful like the sexy, confident woman that you are and marry your girl. Honestly, what's there to be nervous about?\"\n\n\"I can't wait for the day when you do this then the shoe will be on the other foot and I'll be the one laughing,\" Jade spat at Paula finding her to be a convenient target for her frustrations at feeling so nervous.\n\n\"Oooh, there's that fire I know you have. Be sure to save some of that to knock Terry's socks off on the honeymoon,\" Paula said making Jade grin widely at the thought.\n\n\"Oh Paula, I'm so happy but I have butterflies too. I feel that everything is so right now. As long as I have Terry it's like my life is perfect,\" Jade said her voice heavy with her emotions.\n\n\"Okay babe, don't start the water works yet, you'll ruin your makeup. Besides you have to look pretty for your girl,\" Paula told her as she embraced her friend in a warm hug. \"Have I mentioned how happy I am for the two of you?\" \n\n\"Yes, but I wouldn't mind hearing it again.\"\n\n\"Jade, honey it's time,\" Julia popped her head into the room and announced. Her daughter looked so beautiful in her honeydew colored gown\u2015Jade had insisted that only Terry should wear white since this was her first wedding.\n\n\"Let's go babe,\" Paula said and extended her hand to lead Jade out to her dad.\n\n\"Yes.\"\n\n* * * *\n\nIf Jade was nervous, Terry was a basket case. She had asked her friend Abby to stand for her as her maid of honor and now Abby was doing her best to keep Terry calm\u2015which was almost impossible.\n\n\"Terry, you have to relax. Just think, soon you'll be married to the woman of your dreams. It's going to be wonderful.\"\n\n\"What if I can't do this? What if I choke when I have to say my vows?\" Terry worried as she paced around the room. Abby shook her head. Terry was looking so beautiful in her gown and the small, delicate veil. She was a vision and Jade would be stunned at how lovely Terry looked.\n\n\"Alright girl, come and sit down,\" Abby said as she took Terry by the hand and guided her into a chair.\n\n\"Girl, you are beautiful and in love. Today is all about making a commitment to that love and you will do just fine. At the right moment you'll say what's in your heart, pledge your love for Jade and promise to be with her forever. Then we'll all party like the animals we are,\" Abby growled the last and got a laugh out of Terry.\n\n\"Thanks Abs, you are a great friend.\"\n\n\"I know I am,\" Abby said with a smug tone making Terry laugh more and worry less.\n\n\"See, you've got nothing to worry about. I remember I was nervous too on my big day but I got through it and if I can then so can you.\"\n\nTerry was about to reply when there was a gentle knock at the door. Abby opened it and Julia stepped into the room.\n\n\"Oh you look so beautiful Terry,\" Julia gushed happily.\n\n\"Thank you Julia.\"\n\n\"If you're ready dear, it's time,\" Julia told her.\n\n\"Okay,\" Terry said. With a few deep breaths, she took her bouquet and made her way out.\n\n* * * *\n\nJade, Paula and Robert were waiting as Terry and Abby made their way down the stairs.\n\nJade gaped when she saw Terry. Terry was the picture of lovely elegance. Her dress, which was a pristine white, was strapless with a sweetheart neckline. The skirt was side draped with flowers on the waist and a thin veil flowed down and around her shoulders. Seeing Terry looking so spectacular stole Jade's breath away.\n\nThere were no words for how gorgeous Jade looked. The lacy, halter back sheath dress was sexy and complimented Jade's body, showing off her curves in a beautiful and tasteful way. Terry was in awe and stared for several seconds before Jade's voice snapped her out of her stunned silence.\n\n\"Hi beautiful,\" Jade said as a glowing smile spread across her face. Terry blushed at how Jade was looking at her and how she had been staring too.\n\n\"Hi yourself. You look magnificent.\"\n\n\"Yes you are both to die for, now ladies let's do this,\" Paula urged. She had to move things along otherwise they would stand there all day and just admire each other.\n\nRobert stepped up and offered each bride and arm as Paula offered hers to Abby. Julia went to take her seat and to signal the DJ to start the music. A soft, sweet melody began as Paula and Abby slowly walked down the aisle and took their places.\n\nThe traditional wedding march began and the guests all rose to watch the two brides. Julia, and even Margaret, shed tears at how beautiful the pair looked.\n\nTaking their places under the arch in front of the Chaplin, Robert kissed first Jade's cheek then Terry's and took his place at his wife's side. The music stopped, all took their seats and the Chaplin, Lillian Peterson began.\n\n\"Family, friends, we have all gathered here to witness the joining of these two beautiful souls. They have shared their lives and now stand before you to pledge their commitment to each other.\n\n\"I met these two ladies some time ago and from the moment I saw them, I saw what is known to all of you already, and that's how much they love each other. Goodness, it's so sweet to see so much love passing between these two,\" she said as Terry blushed happily, and Jade mildly as she looked at Terry and thought of how right Lillian was.\n\n\"Jade, Terry, marriage is a public joining of two people who openly and freely acknowledge before everyone that their love is so sacred to them that they will pledge themselves to each other for all time.\n\n\"Love, when it is as great as you two have, is our ultimate expression of our joy in each other, and our wish to share our lives in every way. Love as yours is in each other is a thing of beauty to see, something that gives us all hope in the beauty of life.\n\n\"Before pronouncing you wife and wife, I know that you two wish to express your everlasting love to each other, and give to each other symbols of your love and commitment to each other,\" she said, then looked first at Jade.\n\nTaking a deep breath, Jade looked into Terry's eyes and began.\n\n\"Terry, my life was incomplete but I didn't know that until I met you. When you came into my life, you brought joy, laughter, fulfillment, and love. You are everything that I have dreamed of in a partner, a mate and lover.\n\n\"Today I promise to you that I will forever love you, always stand with you and support you in all that you do. I will be there for you in the good times and the not so good times. I will cry with you, laugh with you, share everything that I am with you and always be faithful to you.\n\n\"I will be there when you're sick to take care of you, listen when you need someone to vent to; I will never take you for granted or deny who you are to me for you are my life, my love, my everything.\"\n\nPaula quickly passed Jade the ring and she continued.\n\n\"Terry, you complete me; I love you and I give you this ring as a symbol of my love and commitment from this day until the end of my days and beyond.\"\n\nThey had decided on simple platinum bands with their initials engraved on them. Terry couldn't help the tears that ran down her cheeks as Jade placed the ring on her finger.\n\nAll nerves faded as Terry looked into Jade's eyes and saw only love. Stalling her tears for the moment, she spoke.\n\n\"Jade, I was alone for so long before you came into my life. I never thought I would find someone so sweet, so kind, and so beautiful to love me, someone whom I could love and trust.\n\n\"You've shown me nothing but unconditional love and I vow to you today, in front of everyone here to love you in the same way, always and forever. You've given me your heart freely and I will cherish it always, as I give mine to you. I will be your rock when you need strength and be soothing to you when you need calm.\n\n\"I know we'll have our ups and downs, good times and bad, we'll get sick and we'll be healthy but through it all I will be with you to share it all.\n\n\"I love you Jade and you are my one and only. There will be no other, and for as long as I live I will be faithful to you. I give you this ring as a sign of my promise to be the partner, mate, and lover you want and need always.\"\n\nJade couldn't hold back her own tears as Terry slipped a ring identical to the one Jade had given to her on Jade's finger.\n\nLillian, her face showing she was about ready to cry too at the beauty of their love, said \"Jade, Terry by the power vested in me by our state, I pronounce you both united as one. You may kiss your bride.\"\n\nTheir lips met in a tender, love-filled kiss as the cheers erupted from the guests. Arm in arm they walked down the aisle to the applause of the guests as the DJ announced, \"Ladies and gentlemen, I present to you Mrs. Matthews-O'Connor and Mrs. O'Connor-Matthews.\"\n\n* * * *\n\nThe reception party was wonderful. Many toasts of kind words and well wishes were given causing both brides to smile endlessly. The cake; three tiers, was decorated with white lilies and honeydew colored flowered vines. They both cut and fed each other amusing everyone around.\n\nThey danced together, both sighing with pleasure and joy. Robert danced with each, whispering to Jade, \"She's beautiful, marvelous, and loves you as you love her. I know you'll be happy together,\" then to Terry, \"Jade does love you dearly, and I don't blame her; you two are beautiful together.\"\n\nWhen Robbie danced with each of them he caused tears, but they were from too much laughter.\n\nFinally, late into the night, with all guests gone, Jade and Terry called it a night. The day had drained them completely and after showering they crawled into bed. As much as they might have wanted to, they were just too tired for anything more than a soft kiss, words of love and a few giggles about being wives. There would be time enough for all the sex they could handle after tomorrow morning when they would leave for their honeymoon.\n\nChapter 33\n\nThe flight to Vermont was long and slow but Jade and Terry didn't mind. They held hands for most of the trip and both kept looking at their rings and each other with blissful smiles.\n\nThey landed and took a taxi to the inn. They were promptly checked in by the friendly and welcoming staff. Their room was a large suite with its own small fireplace and Jacuzzi tub in the bathroom. The bed was king size and comfy. They had a meeting scheduled for later on with the person who would legally marry them.\n\nThey decided to forgo any intimacies until after the ceremony, leaving an air of romance to their honeymoon. They had a full week to be together and make love until they couldn't move so a little abstinence would only enhance the rest of the time they would have together.\n\nAfter having a short nap and a refreshing shower they went to the dining hall for lunch before they met with the Justice who would marry them.\n\nLunch was buffet style with a wide range of delectable treats to choose from. While filling her plate, Terry felt a body bump into her. She turned and found a young blonde woman who was blushing from head to toe with embarrassment.\n\n\"I'm so sorry Miss,\" she apologized, \"I didn't mean to walk into you, I wasn't paying attention.\"\n\n\"That's okay, accidents happen,\" Terry said with a warm smile.\n\n\"Sweet pea?\" a voice called, the young blonde flushed even more.\n\n\"Everything alright pea?\" The woman asked, her accent telling that she was British.\n\n\"Yes Jesse, I wasn't looking and accidently bumped into this lady. I was apologizing,\" The blonde answered.\n\n\"What are we going to do with you? This is the third one today. I'm sorry about her Miss?\"\n\n\"Terry,\" Terry volunteered.\n\n\"Terry, I'm Jessica and I hope you can forgive her, she's just been so excited about the trip and we can't seem to burn off the energy no matter how hard we play.\"\n\n\"Jess,\" the blonde said and blushed at Jessica's admittance and what it indicated.\n\n\"As I told her it's okay, accidents do happen sometimes,\" Terry said with a smile.\n\n\"Baby, everything okay? Jade asked as she walked back to Terry.\n\n\"It's fine, just a little accident, nothing to worry about. This is Jessica and\u2015oh I'm sorry I didn't get your name,\" Terry said to the blonde sensing that introducing her as 'pea' might not be acceptable though it seemed to be an endearment.\n\n\"It's Paige.\"\n\n\"Jessica, Paige, this is Jade, my wife,\" Terry blushed herself as she said the last, a smile spreading across her face.\n\n\"Hi there,\" Jade said, smiling, having heard how Terry introduced her.\n\n\"Well aren't you two cute. I'll bet the Queen's crown that you're newlyweds,\" Jessica said and grinned.\n\n\"Did I hear something about newlyweds?\" another woman with the same British accent said as she joined them, throwing an arm around both Jessica and Paige.\n\n\"Yes darling, this is Terry and Jade. Ladies this is my wife, Victoria,\" Jessica told them.\n\n\"It's nice to meet you both. Sweetie did you get everything you wanted? We're all holding up the buffet line,\" Victoria pointed out.\n\n\"Yes Vicky, I'm good,\" Paige said.\n\n\"Alright, if you two are finished would you like to join us at our table?\" Victoria offered.\n\nCuriosity getting the better of them, they accepted. There was something interesting about this trio. Jade and Terry wanted to find out what kind relationship they had.\n\nIt turned out that the trio was actually a love triangle with Victoria and Jessica being together for some time and Paige only just entering into a relationship with them as their paramour. This getaway was a celebration of Paige's joining them.\n\nJade and Terry were quickly warming to them. They were very nice people, pleasant and very loving with each other. They showed many pictures of their son and spoke fondly of their life at home and their many friends. They were thrilled to learn of Jade and Terry's plans about a second wedding and asked if they could be there to support them. The answer was an instant yes.\n\n* * * *\n\nThe Justice of the Peace was an older gentleman who was very kind in his welcoming of them. He questioned gently about what kind of ceremony they would like and other such particulars.\n\nSince they had already had a big ceremony they opted for the quickest and simplest. Witnesses were offered if they didn't have any of their own. They had initially chosen to go with that option but decided to ask their new friends if they would be willing.\n\nA couple of hours later, Jade, Terry and the trio stood in front of the official as he efficiently went through the simple ceremony and pronounced them married.\n\nVictoria took them to a nice, lesbian friendly restaurant and with a bottle of champagne, toasted to Jade's and Terry's happiness. They had a good dinner and thanking the trio they headed up to their suite for the much anticipated honeymoon.\n\n* * * *\n\n\"Why don't you get the fireplace lit while I take a shower,\" Terry suggested after Jade had showered.\n\n\"Sure thing baby unless you want some help in there?\" Jade purred as she pulled Terry for a kiss.\n\n\"As much as I would love that, I have a surprise for you so please just wait a little won't you?\" Terry asked and pouted her lower lip sweetly. That sexy lower lip had become Terry's secret weapon against Jade to get her way. Jade was unable to resist any request Terry made when she did that sexy pout. This time was no different and Jade quickly complied.\n\nGetting the fire lit, Jade spread out a blanket and some pillows in front of the fireplace and poured them both a glass of champagne. Terry didn't know it but Jade had a couple of surprises herself, the first of which was under her robe.\n\nJade spent the next twenty minutes eagerly anticipating what Terry's surprise would be. She guessed it was some sort of sexy lingerie that would showcase all of Terry's charms. Her body was humming in anticipation of seeing Terry. Jade became lost in her little fantasy of what Terry would look like, how she'd be dressed and felt her pussy becoming wet as her nipples stiffened.\n\n\"Jade,\" Terry's soft voice called bringing Jade out of her daydream. Turning to face Terry, Jade's eyes almost popped out of her head at the erotic image Terry presented.\n\nTerry was wearing a black, sheer mesh baby-doll with off-the-shoulder ruffled sleeves and matching panties. Her honey colored hair was strewn about her shoulders in a sultry sort of way. There was no bra to the outfit and Terry's breasts looked magnificent with the thin fabric draped over them. The materiel was so thin that Jade could clearly see Terry's protruding nipples and puckered areola.\n\nThe hem ended just past the top of Terry's thighs and the see-through mesh gave a lovely showing of her taut stomach and the sexy little panties she wore. They were skimpy but had just enough cloth to cover her clit that was already engorged. She also had black satin mules with small fur puffs that accented her long, slender, and sexy legs.\n\nFor almost thirty seconds, Jade just stood, open mouthed, her eyes drinking in greedily the view of Terry dressed so erotically. Unlike the last time Terry had worn something so scandalously hot, there were no nerves this time, but a new confidence that her body was beautiful and desirable.\n\n\"Do you like how I look?\" Terry asked a sexy little smile playing on her lips at Jade's gaze. At first Jade could only nod, her eyes traveling up and down Terry slowly, savoring every inch of her wife's loveliness.\n\nJade swallowed hard and licked her dry lips repeatedly before she spoke.",
        "\"You are a goddess,\" Jade uttered, her voice telling of her being in awe.\n\n\"Oh love,\" Terry said as she carefully walked to Jade.\n\nJade, having regained some semblance of herself, went to Terry and took her in her arms. Jade kissed her passionately, conveying her love and of how scrumptious she found Terry to be.\n\n\"Baby you are gorgeous and I just want to keep looking at you but if I do that, I won't be able to make love to you and I'm desperate to do so. I want you so badly, god it's almost driving me out of my mind, but I have a surprise for you first though it can't possibly top yours,\" Jade said as she guided Terry to the blanket and helped her sit.\n\nStepping back, Jade undid the tie of her robe and let it fall. Terry gasped in surprise seeing Jade's body. Jade's bra was black and lifted her breasts to give a divine showing of cleavage. The bra cups however had thin slits in them and Jade's rock hard nipples were poking out through the slits in the most inviting way.\n\nThe panties matched the bra and hugged Jade's body so sexily but upon closer inspection, they were crotch less. Jade's lips, already slick and swollen were uncovered and calling out to Terry to suckle, kiss, lick and nibble them. Terry suddenly wanted to bury her face in Jade's hot, wet center, breathe her glorious scent and taste her flowing love.\n\n\"Oh Jade, you look so sexy. I think you're the goddess. Let me be your devotee and worship you,\" Terry said her voice trembling as her craving for Jade's body was almost too much.\n\n\"Soon baby, soon,\" Jade told her as she knelt next to Terry and handed her a glass, \"I want to make a toast first. To you my sweet wife who honored me so much today by accepting my hand in marriage. I love you and look forward to the long and happy life we'll have together.\"\n\nThey each took a sip then kissed as if to seal what Jade had said.\n\n\"Jade, my love, my life, I toast you who holds my heart, loves my body, stimulates my mind, fulfills my fantasies and enriches my soul. I love you and the life we are building together my wife.\"\n\nAnother sip and another kiss, then Jade took the glasses away.\n\nChapter 34\n\nLying on their sides, their hands running sensually over each other's heated skin, Jade was taken over by her lust. Twining her fingers in Terry's hair she pulled their lips together and kissed her wife with an almost desperate need. The kiss was wet, and so erotically charged that it had them moaning deeply into each other.\n\nJade rolled them so her body was now on top of Terry's. Their mouths never parting as they ravished each other until the need for air forced them apart.\n\n\"God baby, you are so exquisite,\" Jade whispered into Terry's ear. Jade sucked and nibbled on the sensitive spot just below her earlobe. Jade slowly sucked Terry's neck lightly and licked every inch of flesh that the baby-doll didn't cover.\n\nTerry mewled out her pleasure at Jade's lips scorching her body as her own hands were tracing up and down Jade's exposed back and occasionally using her nails, tantalizing Jade's skin with gentle scrapes.\n\nJade couldn't resist Terry's nipples and sucked on them through the thin fabric. She bit down gently on one as her hand cupped and squeezed the other breast. Terry growled, her hands going to Jade's shoulder and pressing for Jade to keep moving, going down to where she needed to feel Jade's mouth the most. Her hips were fighting to raise, her clit desperate for a touch, anything to help relieve the sexual aching that was becoming unbearable.\n\nJade was more than happy to comply, lifting the sheer material up and over Terry's stomach. She went straight for the clit, licking it through the panties and finding the garment soaked with Terry's essence. Jade lapped at the moistness and sucked the firm flesh underneath.\n\n\"Oh Jade, please stop teasing me,\" Terry begged in a heated rush. She needed to cum and she needed it now.\n\nJade deftly pulled the panties off of Terry and wrapped her hand around Terry's swollen clit. It was hot and pulsing in Jade's hand. She stroked it gently while looking at it with lust filled eyes. Terry's hips came off of the blanket as a harsh breath flew from her.\n\nGuiding her hips back down, Jade dipped her head and ran her tongue over Terry's vaginal lips repeatedly as she continued to slowly stroke Terry's overwrought clit. Terry made every throaty sound known to exist as her body succumbed to Jade's ministrations.\n\nJade saw the signs and knew Terry was close. She quickly took Terry's clit and with velvety mouth and tongue sensuously stroking, brought Terry to a screaming orgasm that was long and beautiful. Jade was rewarded with a torrent of Terry's fluids that she drank with fervor.\n\nTerry was in a world of pleasure and love as she felt Jade's hands caressing her, helping her to come down from her euphoria.\n\nWilling her limbs to work, she reached for Jade and pulled her love into her arms. With Jade's wanton desire fulfilled for now, she kissed Terry tenderly conveying her love. Terry however was feeling her need to give to Jade what she had just experienced. \n\nPushing Jade onto her back, Terry kissed Jade hard, stealing her breath and sending delicious tingles through her body. Jade's nipples, still hard and poking sexily through the bra cup slits were too sweet to pass up. Terry took her time, lavishing her tongue on those large buds, sucking hard and scraping her teeth to heighten Jade's pleasure.\n\nWhile continuing to work wonders with her mouth, Terry shifted her body slightly, and her hand slipped down to Jade's slit. Jade's juices were freely flowing out of her and Terry's fingers were immediately covered in the slippery fluid. Rubbing her fingers teasingly over Jade's pussy lips, she spread Jade's juices all over her center, lightly brushing her clit.\n\n\"Oh-oh-oh baby,\" Jade cried out, her arousal overwhelming her, her hips trying to lift even with Terry's body on hers.\n\n\"You like that?\" Terry asked as she very slowly rubbed the pad of her finger on Jade's clit.\n\n\"Yes, oh yes baby, yes Terry,\" Jade wailed her hands grabbing at Terry's shoulders and arms, \"Please baby, please,\" Jade cried in desperation.\n\n\"What do you want lover? What do you want me to do?\"\n\n\"Please, please, put your fingers in me, I need to feel you inside me,\" Jade called in near panic, her need being so great.\n\nNot wanting to torture Jade any further, Terry plunged two fingers inside Jade's silky interior. An ear splitting scream erupted from Jade's throat as her fingers dug into Terry's shoulders. Her hips fought to buck but couldn't with much of Terry's weight on her.\n\nRubbing her thumb vigorously on Jade's clit, her fingers sawing in and out in a well practiced motion, Terry bit down on one of Jade's nipples. The light pain mixed with the intense pleasure she was feeling had Jade's body straining.\n\nKnowing Jade's body signals, Terry knew Jade would explode. Making love as they were, Terry's excitement was further heightened by her fantasy ridden self\u2015those crotch-less panties were just too good to pass up with Jade's vulva pushing out of them. The eroticism of it all was maddening.\n\nQuickly going to Jade's pussy, she was just in time to catch Jade's cum that squirted into her mouth as powerfully as hers ever did. Terry sensed the marvel of the proclivity of her mind to fantasize, and how having her mouth on Jade's pussy through those sexy panties almost had her squirting too. Luckily, she kept from it as she enjoyed both Jade, and her fantasy of Jade as she was.\n\nIt truly was one of those good and hard orgasms that left Jade panting and feeling drained of energy. Her head seemed to spin and her mind lost focus. The next thing Jade registered was Terry's hand on her cheek and her voice calling out to Jade.\n\n\"Jade, love, can you hear me?\" Terry's concerned voice asked.\n\n\"Yes I hear you baby,\" Jade answered, her voice low and scratchy. Terry helped her sit up and gave her some champagne to wet her dry throat.\n\n\"You okay?\"\n\n\"Yes, what you did was just so wow, no words my love, no words for that,\" Jade said and wrapped Terry in a hug.\n\n\"So was that beautiful orgasm of yours,\" Terry said, her breath suddenly bated.\n\n* * * *\n\nThey rested, holding each other, kissing softly. When Jade felt she had regained enough strength, she sprang her other surprise on Terry.\n\n\"Baby, there's something I want to talk to you about,\" Jade said seriously as she sat up.\n\n\"Okay, what is it?\" Terry asked as she sat up also and looked at Jade.\n\n\"Terry, my sweet wife, remember that day when you told me about how your body was? We talked about your physical traits and about the possibilities of how you could have sex.\"\n\n\"Yes Jade I remember. You were so very accepting and understanding of all that I told you,\" Terry told her and kissed Jade's lips lightly.\n\n\"I loved you and I didn't care about anything other than being with you,\" Jade offered as she too kissed Terry's lips.\n\n\"Baby, when we talked, we touched on you having intercourse with a woman, using your clit and we found out since then that it's possible and feels so hot and sexy, but we haven't tried the other side of things yet. We haven't tried you having intercourse, having your pussy filled,\" Jade said gently.\n\n\"Love, you know it might not be possible. It could be painful and I could get hurt. Besides all the toys we have are too big to even try with. I've never had anything bigger than one of your fingers in me,\" Terry pointed out.\n\n\"I know baby, that's why I got this,\" Jade told her as she lifted one of the pillows she had placed on the side of the blanket. Jade held up the short, extremely thin dildo and harness that she had bought all those months ago.\n\n\"I found this sometime ago. It's just over five inches long and it's no more than an inch wide,\" Jade explained and handed it to Terry. Terry examined it closely, her eyes wide and her mind swimming with what Jade was proposing. Her fantasies were suddenly beginning to revive.\n\n\"Jade, are you saying that you want to umm, take my true virginity with this?\" Terry asked her voice very soft, almost a whisper.\n\n\"Yes baby, if you're willing for us to try. I would like very much to deflower my bride,\" Jade said gently.\n\nTerry snuggled into Jade, burying her face in Jade's neck as her mind reeled. Did she want to try this? Would it feel good and would she like it? She was silent for a long while thinking hard and sorting through her feelings. Jade was patient and just held her wife as she worked through her apprehensions.\n\nIf the answer was no, Jade would respect it. She would not push Terry into this if she wasn't comfortable with it. Jade loved Terry too much to go against her wishes on any matter.\n\n\"Love, I would like to try but I'm scared. I think I still do have a hymen and it's painful when it gets broken right? I'm worried that it'll only be painful and not pleasurable,\" Terry voiced to Jade.\n\n\"Yes baby, breaking the hymen does involve some pain but it only lasts for a short time, but sometimes not at all. Afterwards the stimulation feels good and you'll only be sore for a little while too if we do this. Terry, we don't have to do it if you're not okay with it. It was just a suggestion not a demand alright. If we never do this then that's okay with me,\" Jade told her and kissed Terry's head sweetly, rocking her body gently to comfort and chase away any fears that were left.\n\nThey sat quietly for a while then Terry kissed Jade's neck and sat up.\n\n\"Even though I'm apprehensive about this, I know I'm in good hands with you. I love you and I want to give you every part of me. So my love, how do we begin?\"\n\nTerry was apprehensive, but it was her fantasy driven mind that pushed her over the edge. Jade would fuck her, and lovingly. Untold beautiful sensations swirled around in her mind. If it did hurt, she would still be giving Jade pleasure, and she wanted that for both of them\u2015and maybe it would be pleasurable for her just as Jade said.\n\n\"You're sure Terry? It's not an obligation baby; it's not a requirement on my part.\"\n\nTerry hushed Jade's words with a deep kiss that proved that Terry wanted this. That she was willing to try. Very much willing to try it.\n\nJade slipped the baby-doll off of Terry then removed her own lingerie. She retrieved two of the thick towels from the bathroom. Folding one, Jade placed under Terry, the other she placed to one side for Terry's expected orgasmic flow which she thought might be spectacular this time.\n\nDonning the harness and setting the dildo, Jade placed a bottle of lube nearby and then stretched her body out over Terry's.\n\nJade could see the nervousness in Terry's eyes even in the dim light. She kissed Terry's lips slowly, her tongue gliding along Terry's lips. Terry's lips parted and Jade's tongue slipped into Terry's mouth. Jade made sweet, sexy love to her mouth in an attempt to chase away her worry.\n\nThere was no rush, as both enjoyed the feel of each other's bodies, their heat and growing passion. Terry's hands moved over Jade's body, down her sides and over her hips, to her cheeks, the small of her back, up to her shoulder blades and resting finally on the top of her shoulders, holding Jade firmly to her as their kissing continued.\n\nJade eased them out of the kiss, her tongue scraping along Terry's cheek and to her ear. The way Jade's tongue worried her ear made Terry moan her delight.\n\n\"Are you ready baby?\" Jade asked.\n\n\"Yes,\" Terry uttered.\n\nJade lifted her body and taking the bottle of lube, rubbed a generous amount on the dildo. She positioned herself between Terry's opened legs and applied a generous amount of the lube between Terry's pussy lips.\n\n\"I'll go very slowly alright? If at any time it's too much, too painful and you need to stop just say so and I will, okay?\" Jade told her seriously. Terry nodded and closed her eyes as Jade began massaging her opening with one finger. Slowly, Jade's finger slipped inside of Terry. With the unusual physiology of Terry's body, Jade wanted to take every care with her.\n\n\"Baby how does that feel?\" Jade asked as she carefully worked her finger in and out. Jade could feel how tight Terry was.\n\n\"It feels nice,\" Terry said and sighed, her body enjoying what Jade was doing so far.\n\nJade tried to gently slide another finger into Terry and felt the resistance.\n\n\"Baby, I'm going to start using the dildo now okay?\"\n\nTerry took a deep breath and nodded.\n\nUsing her hand to guide it, Jade placed the head of the dildo at Terry's opening. She felt Terry's body go still but she didn't object. Leaning her body down until she was on top of Terry's, Jade told her, \"I love you,\" and kissed her hard.\n\nAt the same time that their lips met, Jade began to push forward, but gently. She felt Terry flinch, and pulled back to ease the pressure, then pushed forward again, still without too much pressure. Continuing as she was, soon the pain was passing as Terry's pussy began to respond naturally, her inner moistness facilitating Jade's intrusion.\n\nThrough it all, Jade never stopped kissing Terry's lips in an effort to distract her from the pain. Soon Jade sensed her patience being rewarded.\n\nTerry's body relaxed and Jade pulled back from the kiss.\n\n\"Terry, baby? Are you okay?\"\n\n\"Yes, it's not so bad anymore. It's actually starting to feel really nice,\" Terry said as her hands started moving along Jade's back again.\n\n\"I love you, baby,\" Jade said, and kissed Terry softly as she began to move in her again.\n\nJade gently rocked her hips and kept her eyes on Terry's face for any sign that she should stop but there was none. Instead there was a look of fascination at what she was feeling.\n\nGradually Jade was moving the dildo in and out of Terry's body in smooth strokes as Terry hummed her pleasure at the sensations.\n\nJade increased the power and speed of her thrusts as Terry started moving her hips as much as she could to match Jade's movements. Jade could feel Terry's clit pressed between them. It was hard and Jade could feel how wet Terry was.\n\nJade raised her body off of Terry's, propping herself up on one elbow, and grabbed the second towel and placed an end under Terry's clit. She flipped the rest of the towel over Terry's clit and slid her hand under it and onto her clit, all the while she continued to work her hips. Jade pumped the dildo in and out as she stroked Terry's clit with soft teasing motions. Terry loved the mix of wonderful sensations soaring throughout her body, the pleasures many and heavenly. In time, it was just too magnificent not to find its glorious relief.\n\n\"Oh-oh, yes, yes, don't stop, please Jade don't stop, god, it's so good, it feels so good,\" Terry cried as her own hands went to her breasts, squeezing and puling at her nipples.\n\nShortly Terry let out a shrill scream, her whole body tensing, as her orgasm washed through her. Jade didn't slow her stroking of Terry's clit, her flood being caught by the towel as well as Jade's hand that took some of it and used it as an aide to the pleasure of having a clit such as Terry had. The feel of her clit lubed on the outside extended Terry's joy, the sensations lusciously manifold and delicious to her body.\n\nTerry had thought that sex before was the most wonderful thing she had ever felt but had never felt anything so astonishing as what Jade was doing to her. Her mind at one point couldn't comprehend it all and just stopped, taking Terry's consciousness with it to a heaven she never wanted to leave, save she had to have Jade with her.\n\n* * * *\n\nTerry awoke to Jade's soft humming. She tried to speak but her tongue felt heavy. Opening her eyes she saw her wife's beautiful face looking at her.\n\n\"Hi baby, welcome back,\" Jade said and kissed her.\n\n\"How\u2015how long?\" Terry asked after getting her tongue working.\n\n\"Not long, only about a minute. How do you feel?\"\n\n\"Tired, happy, a little sore,\" Terry said after some thought.\n\n\"Well my darling that is normal. That was quite a first ride you took your pussy on. Want to try sitting up?\" Jade asked. Terry nodded.\n\nSitting up in the dim fire light, Terry winced a little at how tender her pussy felt. Looking down at the towel she was surprised to see how little she had bled, there being only a tiny bit of redness on the towel.\n\n\"Expecting more blood?\" Jade asked at seeing Terry's inspection.\n\n\"Yeah, I guess I thought there would be more but I'm not complaining,\" Terry said with a weak smile.\n\n\"I know baby. Do you feel up to standing so we can get you cleaned up?\"\n\n\"Love I'm not fragile, I can stand and move, on my own too,\" Terry told her worrying wife.\n\n\"I know Terry but I can't help it.\"\n\n\"Yes I love you too,\" Terry grinned and pulled Jade for a kiss.\n\nThey went to the bathroom together and as Terry stepped under the warm water, Jade soaked the soiled towels in the sink and washed out the dildo thoroughly with soap before joining Terry under the spray.\n\nThey kissed, caressed and washed each other. Though Terry was tired, she felt an enormous hungering for Jade that blotted out everything, including any tiredness she had. Dropping to her knees, Terry used her tongue to bring Jade to a screaming climax, relishing every drop her tongue teased out of Jade's sweet pussy. The noises she made overshadowed those from Jade's lips, the urgent sense of need drove her so.\n\nWhen Jade had climaxed, Terry was still unsatisfied, and discomfort or no, she kept on licking and suckling as best she could on Jade's lovely and still horny lips that poured out even more of her love than before.\n\nJade couldn't help it. After her second climax, she had to sit, she was so limp from the sensations that so weakened her legs.\n\n\"God, baby, that was so... Wow!\" she exclaimed weakly.\n\n\"That's what you get for waking me up and not letting me have my share of you,\" Terry got out, her breath still as if needing to love Jade again.",
        "\"Think I'll do this often then. Knock you out, then wake you up, I mean. Damn, baby, that was so hot.\"\n\nAfter drying off they both crawled between the cool sheets. Both were tired and in need of some serious sleep.\n\n\"Jade, love?\"\n\n\"Yes baby, what is it?\"\n\n\"Thank you for being so gentle and patient. I love you so much and I'm so happy that you were/are my first in all of these experiences,\" Terry said softly.\n\n\"You're my first too, baby, and I am very happy and thankful that you are. I'm so happy that we've found each other. I love you Mrs. O'Conner.\"\n\n\"Hey, we agreed its Mrs. Matthews-O'Conner,\" Terry said in mock sternness.\n\n\"To the world it is but you'll always be my Mrs. O'Conner, my wife, my partner, my other half, my better half,\" Jade whispered and kissed Terry's lips gently.\n\nThough she'd often heard similar words from Jade, still, a feeling of supreme happiness engulfed her as if she were hearing them for the first time. Happier than words could say, she snuggled into Jade's warm, sexy, and comfortable breast. \"I love you too,\" Terry whispered softly, she was so touched by Jade's words.\n\nThey snuggled closer, then Jade gently moved Terry so she could spoon her. Jade held Terry tightly against her body as both of them wiggled to get maximum feeling from Terry's ass against Jade's still moist pussy. Jade, holding Terry tightly, possessively, felt a powerful surge of love that had her sensing she never wanted to let Terry go.\n\nChapter 35\n\nWhen morning came their positions were reversed with Terry spooning against Jade's back, her face buried in Jade's warm and inviting neck. Jade's butt was pressed tightly against Terry's groin and as Jade awoke she could feel the firmness of Terry's clit. A sense of warm, non sexual joy seeped into her leaving her with a sense of tremendous sweetness that was comforting sweeping through her.\n\nRemembering the previous night's activities, Jade's body came alive with arousal and a need to feel Terry's clit inside of her.\n\nTurning her body slowly, she managed to not wake Terry as she came face to face with her. Jade's pussy was already wet and ready as she brought her body close to Terry's, then lightly and carefully placing her leg over Terry's hip, bringing her slit as close as possible.\n\nTouching her clit made Terry stir but she didn't awaken until Jade pressed the head into her opening. Terry's eyes shot open upon feeling her clit entering Jade. There was no time to protest\u2015if Terry wanted to protest\u2015as her clit was engulfed inside Jade's warm and velvety moist pussy.\n\n\"Oh god, Jade, are you trying to kill me?\" Terry moaned as Jade started moving her body. Her words aside, Terry was still subject to her fantasizing mind, and was instantly horny.\n\n\"I'm sorry baby but I just had to have you inside me; come on baby, love me with your clit,\" Jade told her with bated breath as she rolled them both, putting Terry on top. Jade had been careful not to press on Terry's tummy so as not to pressure her bladder.\n\nAll objections were fully forgotten as Terry anchored her knees and started thrusting her hips. Jade's hands took hold of Terry's breasts and squeezed and massaged them pinching the nipples.\n\nTerry groaned as her climax came. She pushed hard into Jade, grinding her mound into Jade's clit as she emptied her love into Jade's sex, triggering Jade's climax as well.\n\nAs Jade's orgasm ebbed, Terry pulled away from her and quickly buried her tongue in Jade's sensitive center. She licked and sucked their combined orgasmic juices out of Jade while gently rubbing her thumb on Jade's clit throwing Jade into a second then a third climax until Jade couldn't take any more and pushed Terry away. Terry had never had such a delicious fantasy.\n\n\"Oh god, whose trying to kill who?\" Jade asked after her breathing returned to normal.\n\n\"That's what you get for ambushing me in my sleep,\" Terry said with a wicked grin and ran laughing to the bathroom as Jade threw a pillow at her.\n\n* * * *\n\nAfter a quick shower and getting dressed, they went for breakfast. There was much to do in the beautiful town and Jade had planned surprises for Terry for the duration of their stay.\n\nShe had rented a car for the week and drove them to their first stop, a day of shopping. With over seventy unique stores, they had their work cut out for them. There was art, jewelry, nationally recognized crafts, and award winning Vermont specialty foods, plus clothing and more to see.\n\nThey found many charming little gifts to take back for those at home and had fun just being together. Terry especially enjoyed taking as many photos as she possible could, wanting to remember every moment.\n\nReturning to the inn, they were exhausted but happy, having enjoyed the day and the time spent. They both collapsed into the hot, bubbling waters of the Jacuzzi. The water working its magic washed away their exhaustion and awoke their passion.\n\nJade couldn't help wanting to feast on Terry's delicious clit. The tub, which was set in the corner of the room, had large side lips, one between the wall and the tub that allowed one to sit comfortably on it with their feet in the swirling water. Jade helped her wife up on it so she could have easy access to Terry's delightfully enlarged and lovely clit.\n\nTaking her time, Jade licked slowly and sensually up the length of Terry's clit shaft, avoiding the overly sensitive head and causing Terry to growl and squirm in frustration and instant need.\n\nJade went lower and licked between Terry's pussy lips rapidly. She slowly eased a finger into Terry's pussy and gently worked it in and out while continuing to torture Terry's shaft with her tongue.\n\nIn a fit of desperation, Terry wrapped her fingers in Jade's wet hair and pushed Jade's head firmly against her clit. Jade allowed the clit to go into her mouth and down her throat, as Terry had slid so her body was wholly on the Jacuzzi's lip, then pushed and pulled at Jade to give herself what she so urgently needed.\n\nWhen Terry's release came, it was long and drawn out by Jade who now had two fingers pumping easily in and out of Terry's very wet opening.\n\nJade helped Terry back into the water and cuddled her as she rested, a singular rush of instant memory of Terry's tasty orgasm soaring through her body. Recovered and feeling revitalized, Terry now hungered to give Jade the same experience she had just had.\n\nHaving Jade take the same position as she'd taken before, Terry kissed Jade's inner thighs and licked all around Jade's mound. She loved the feel of Jade's smooth, soft skin on her tongue. Jade's own hungering increased exponentially as she moaned in pleasure.\n\nHolding Jade's lips open with her thumbs, Terry licked straight up the middle of Jade's slit sending shivers through Jade's body. Terry kept up this slow and torturous licking, avoiding Jade's clit and driving Jade's arousal higher and higher as she also suckled each of her lips as she was loving to do.\n\nJust when Jade thought she couldn't take anymore, Terry sucked her clit and lashed it with her tongue. She pushed two fingers into Jade's pussy, and upward, and moved her hand in a vibrating motion. Jade's hips lifted, using her hands to hold them up.\n\nA high pitched wail erupted from Jade announcing that her orgasm had arrived. Terry pulled her lips from Jade's clit and replaced it with her left thumb as she placed her mouth in time to catch the first squirt of Jade's climax.\n\nTerry drank down everything Jade gave and pushed Jade to a second orgasm for more. By the time she was done, Jade could barely move and needed Terry's help to get dried off and into bed. It was an experience they would cherish and try often to recreate.\n\n* * * *\n\nBright and early the next day, Jade collected the picnic lunch she had ordered and took them out for a drive. The long, winding roads, with their picturesque views of the snow capped mountain ranges was breathtakingly beautiful. Coupled with the telltale signs of the fall foliage, the drive proved to be quite the colorful experience.\n\nOn the way back, taking a different road, they were awed by the open spaces of farm land and dairy farms. Further along the way were many small groves. Jade had learned from the locals they could stop and be alone at any of them for enjoying a private picnic. It was to be more than just a picnic though, Jade hoped. At least a few kisses would be had.\n\nSeeing a particular place that looked as if it might provide a goodly amount of privacy, Jade parked. Blanket and the basket in hand, Jade and Terry strolled along the small foot trail and stopped in a small clearing under a large tree. As Jade spread out the blanket, Terry's thoughts went to their time at the cabin and the picnic they had there. Her life was so different now, she knew, the thoughts running pleasantly in her mind.\n\nThey sat and ate, unable to keep from giving each other gentle touches and loving caresses. A cool breeze passed, causing a few leaves to rain down over them. A reminder to them that fall was in the air.\n\n\"It's so beautiful out here, isn't it love?\" Terry said as she inhaled the clean smell of nature.\n\n\"Yes it is, but I prefer to look at your beauty,\" Jade answered. Terry smiled and blushed slightly at hearing Jade's sweet and welcome words.\n\nSeeing Terry's blush, Jade pulled her wife close and kissed her lips with passion. Having filled her physical hunger, Jade now hungered for Terry's body. It was far too risky to get naked out here, not knowing who might happen upon them but Jade just had to have a small taste of Terry's goodness.\n\n\"Oh baby, I love how you blush like that. It's so sexy, you're so very sexy. I have to have a little of you right now,\" Jade whispered heatedly into Terry's ear and blew softly into it. Her hands slipped down to Terry's breasts and fondled the soft mounds, her fingers finding Terry's nipples and teasing them to stiffness. Terry shivered and moaned as Jade's actions were causing her needs to rise.\n\nLying Terry down on her back, Jade slipped her hands under Terry's flared skirt and slipped her panties down to the top of her thighs. Terry looked around nervously but didn't see anyone so she didn't try to resist.\n\nJade took Terry's partially erect clit in her hand. Terry was already wet and her juices coated Jade's hand. Jade stroked her clit to full stiffness, quickly working Terry into a sexual frenzy.\n\nThey had never before had an experience like this; being out in the open, a definite cause for Terry's mind to rush into a wild fantasy of forbidden, but ultra stimulating sex. Jade was thinking that if Terry had time to think about it, she'd want to stop out of fear of her secret being discovered but Jade was certain that they were alone and increased her ministrations, not giving Terry time to think too much. She still didn't realize the extent of Terry's fantasizing mind.\n\nThe way Terry's juices were pouring out so freely, the slight pulsing and heat of Terry's clit in her hand had Jade's pussy gushing. Her body felt alive with sexual energy and her heart was thumping hard in her chest with excitement.\n\n\"You know you drive me wild, don't you, baby? God, I love you so much,\" Jade said. She knew Terry was in no way able to respond to her words, she was so horny by now, so lost in all the sensations she was feeling.\n\nTerry's small grunts and quiet moans were so thrilling. To Jade this was beautiful, exhilarating, not to mention naughty as could be. That wasn't lost on Jade either. To be able to make love here, out in the open in such a natural and scenic setting was more than thrilling. The entire experience was causing Jade's desire for Terry to sky rocket.\n\nAs Terry was getting close to orgasm, Jade raised her skirt up and took her lovely clit in her mouth. After just a few quick movements of her tongue and just the right amount of sucking, Terry filled Jade's mouth with her love juices.\n\n\"Oh god Jade, I want you so badly right now,\" Terry panted.\n\n\"I know baby but you'll have to wait,\" Jade told her as she returned Terry's panties and arranged Terry skirt to cover her treasures once more.\n\n\"Let's hurry back then, I'm dying to taste your sweetness my darling wife,\" Terry almost growled. Packing up quickly they rushed back to the inn and to their room.\n\nTerry wasted no time in stripping Jade and taking her quickly with tongue and fingers.\n\n\"Oh yes baby, don't stop. Just like that baby, ohhh Terry, Oh god, oh-oh-oh,\" Jade cried out, her voice rising with each crest of pleasure as Terry sent her spiraling into one climax after another.\n\n* * * *\n\nHaving arrived on Monday, the days seemed to fly by. It was already Thursday and they would be leaving on Saturday. They spent the morning in bed making love, and having room service breakfast. By twelve pm they were dressed and finally left the inn. Jade headed into town stopping at a lovely little restaurant for lunch after which they walked down the street to a quaint little chocolate shop. \n\nThere were numerous handcrafted candies and a demonstration on how to make special hand-dipped chocolates. They left with an armload of goodies and a large helping of liquid chocolate that Jade made good use of that night.\n\nIt was incredibly sensual for Jade to lick the sweet liquid off of Terry's clit and nipples.\n\nOn Friday they met Paige, Jessica and Victoria at breakfast. The trio had plans to go on a tour of a winery and invited Jade and Terry along. Having no set plans until the evening they accepted and joined them.\n\nThey all piled into the trio's suv and made the drive that took them out of the town. They partook of the various wine samples offered along with the assortment of cheese plates as they were shown how the wine was made from start to finish.\n\nReturning to the inn, they shared dinner and said fond farewells to the trio who were leaving early the next day whereas Jade and Terry were leaving in the afternoon.\n\nRacing back to their room, the showered and donned the formal dresses they had purchased on Monday and headed to a show at the local opera house. Jade had purchased the tickets online before they had even arrived.\n\nThe evening was blissfully romantic as they sat and held hands while enjoying the show. When they returned to their room they undressed each other and fell into each other's arms on the bed where they loved each other with a familiar heat and ardor, taking each other to their limits. Exhausted and too happy for words, they fell asleep, tangled together and needing nothing else in the world.\n\nThe next day greeted them with mixed feelings. They were happy to go home but sad to have it all end. They loved being together, away from everything and everyone but knew it was time to get back to their normal life.\n\nThey spent a last few moments walking around the grounds of the inn then went back to their room for one last sexual romp before they showered, dressed, grabbed their packed bags and checked out, vowing to come back again to this, their romantic hideaway. \n\nEpilogue\n\nIt was just over two years since the trip to that special town in Vermont. Much had changed for the pair. Terry had expanded her business and taken in a business partner. Jade had been promoted in her company and was now running her department in the lit agency. Things had changed so much within their lives, their family and friends.\n\nJade's grandparents though still unhappy about it, came to understand that by clinging to their beliefs, they were missing out on their granddaughter's life and so they tried to be at least civil to Terry at family gatherings.\n\nRobert and Julia remained wonderful and continued to accept Terry as just another daughter in their life. As long as Jade was happy, so were they.\n\nRobbie followed his sister and proposed to Margaret. They celebrated their one year anniversary by taking a short cruise.\n\nPaula surprised them by marrying her long time on/off girlfriend Lauren, and accepting that though she was bisexual, she loved Lauren enough to forgo men completely.\n\nTo Terry, her love of Jade, and Jade's love of her, was like releasing all of her hidden desires, those that had always been as a curse, a sore spot with her no matter how sweet masturbating felt. It had never been right, always as a damning thought to her. Now it was a beautiful fact, a reality that was much more than she could ever have dreamed of. Though fantasies remained in her, they were now subsumed by a reality that was even more fantastic than any fantasy. To the world, she still hid her unusual physicality, but no longer hid as she had before Jade's love changed her completely.\n\nTo Jade, loving Terry was the most beautiful event in her life. They shared so much passion, and Jade had an unending desire, an inability to leave Terry and her marvelous love alone. She always had to be touching her, bringing her pleasure. Pleasure! Yes, and when Terry felt the joys Jade gave to her, Jade felt it too. Jade sensed all of the new hidden desires in her too. Never had she ever thought it possible to not only love a woman, but to wholly and completely adore one who had a clitoris that was so like a penis, yet so different and so wonderfully sensitive throughout it's over extended length. Jade knew she was obsessed with Terry's lovely clit, but it was as the sweetest of obsessions for Terry loved all of the love Jade heaped on her so constantly.\n\nThe beauty of their love never seemed to end.\n\nThe biggest change was Jade's desire to have a baby. Terry didn't think she'd ever be a parent but when Jade brought it up she wholeheartedly agreed.\n\nIt took some time to find the right donor, going through many profiles at the clinic, but eventually they found the perfect one. Same height, hair and eye color as Terry, the baby would look like a mixture of both of them. It took a few tries but in the end they joyfully found Jade to be pregnant.\n\nAfter many birthing classes, weird craving for odd foods at strange hours, some mild mood swings, and false alarms, the day finally came. After ten long hours of labor, Ethan Matthews-O'Conner was born.\n\nAs Terry held their newborn son, Jade, exhausted but happy beyond belief, smiled and thought that now, her desires, though many were hidden at first, were now all completely fulfilled.\n\nEnd\n\nThis story, Hidden Desires, is an original story. This story is copyright protected \u00a9 by Dru_Druthers. No use, in whole or in part without the express written consent of the author, Dru_Druthers.\n\nThough this story is fictional from the mind of the author, Dru_Druthers, yet people such as Terry in the story are real, though not widely known of. Being intersex can mean many different physical appearances are possible. In May of 2012, the world was told of Steve Crecelius, who married, had several children with his wife, then went to a hospital to be checked on for kidney stones. While there, an ultrasound was reported to have found Steve was a female. He and his family decided to have him be wholly female, and a year later was wearing women's clothing. Many news sites carried Stevie's\u2015the new name she adopted\u2015story. See the many sites on the Internet attesting to this, including major news broadcasters and papers nationwide.\n\nDru_Druthers expresses her sincere thanks to her beta reader who wishes to remain anonymous.\n\nAnd lastly, Dru_Druthers expresses a special thank you to two wonderful ladies who also supported her and her work. "
    ],
    "authorname": "Dru_Druthers",
    "tags": [
        "lesbian",
        "lesbian sex",
        "lesbian marriage",
        "strap-on toys",
        "intersex",
        "hermaphrodite",
        "lesbian love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hidden-desires-pt-03"
}