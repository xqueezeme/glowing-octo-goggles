{
    "title": "Home for Horny Monsters Ch. 71",
    "pages": [
        "Hi all, I'm back to bring you the next exciting installment of \"a bunch of horny monsters fighting and fucking to advance the plot!\"\n\nNew to the series? This is a story about a man who had sex with a nymph, got bonded to a magical house, married a goblin, boned a gargoyle to save himself from a plant, seduced a succubus while trapped inside a dream, then may or may not have fucked a banshee shortly after battling an angry witch (who he also fucked), and then had 58 more chapters worth of adventures.\n\nReturning reader? Welcome back! I have so enjoyed sharing this story with everyone here on Lit and want to thank all of you for your support and enthusiasm over the years. Clicking stars and leaving comments helps other readers find this tale, and it's so much fun to get messages from new readers who are discovering Mike and the gang for the first time. Don't forget to follow me for release notifications, or just check my bio for when I have scheduled releases. I'm not an organized person by nature, but I do try really hard to stick to the calendar.\n\nAnyway, time to see who this owl-woman is and maybe find out what Beth has planned for the horsemen. This chapter is all about\n\nTaking Risks\n\nThey walked through the forest. The owl-woman had transformed back into her bird form and was leading them along a winding path. Around them, the Nirumbi chirped quietly as they watched the motley crew march through the snow, the crunching of the ice beneath their feet disturbed only by the sound of Mike eagerly slurping down yet another can of soup.\n\n\"Ugh, I hate split pea and ham,\" he declared, handing the empty can to Bigfoot, who crushed the can flat between his hands. Bigfoot stuck the flattened can in a small cloth bag he carried that was emblazoned with the words Camp It In, Camp It Out.\n\n\"Are you done yet?\" Bigfoot asked, wiping his hands clean with snow.\n\n\"Hell, no. I saved the best for last.\" Mike swiveled his backpack around, reaching inside to grab a can of New England Clam Chowder. He popped the top and handed it over to Yuki, who heated it up with her foxfire. Steam rose from the can as the soup was heated to a level of perfection that a microwave could only dream of.\n\n\"I don't know how you can stand to eat that garbage.\" Bigfoot shook his head in disgust. \"It's like someone who's never eaten clam chowder tried to replicate it. And you're lucky if you get more than one bit of clam.\"\n\n\"You're lucky I couldn't carry more.\" Mike's stomach growled as if in agreement, and he took the can from Yuki and started drinking it. He had already handed her another can of clam chowder to heat up.\n\nUpon the announcement that the Nirumbi had returned with a shapeshifting owl, Mike had gone outside to greet them. Though he had his doubts, the owl-woman had seemed sincere and he needed to get home as soon as possible. Some doubts had been voiced, but it was ultimately decided that the risk was worth taking.\n\nAfter loading up his bag with as much soup as possible, the group set out. The Nirumbi had watched silently from the trees until Dana emerged from the cabin. Her eyes no longer glowed from within, but they were rimmed with crimson. She looked almost human again, but the Nirumbi gave her an exceptionally wide berth.\n\nBigfoot used portals to speed their journey as the owl flew ahead of them. The sensation of the forest shifting around them made Mike a little nauseous at first, but he was too hungry to give it much attention.\n\n\"So what can you tell me about the goblin king up there?\" Mike nodded in the direction of the owl. \"An old friend of yours?\"\n\n\"Is that a Labyrinth reference?\" A smile tugged at Bigfoot's mouth.\n\n\"Might be.\" Mike swallowed a good amount of his can, regretting that he didn't have any crackers.\n\nVelvet appeared next to them, then wrapped an arm around Bigfoot's waist. \"Do you remember that movie, Uncle Foot?\"\n\n\"You two must have watched it a thousand times.\" Bigfoot's eyes crinkled in the corners. \"The two of you would take turns being the girl from that movie. I was usually...was it Ludo?\"\n\n\"It was.\" Velvet looked at Mike. \"We would take him to the bog of eternal stench, which was just the hot spring, and take turns rescuing each other.\"\n\nBigfoot chuckled. \"We had to stop watching it when Vee got older. She developed quite the crush on David Bowie.\"\n\nMike laughed. \"Her and everyone else.\"\n\n\"I busted her kissing him on the TV when the movie was paused.\" Bigfoot immediately sidestepped through a portal just as Velvet tried to smack him. He reappeared twenty feet in front of them, only to vanish again when she tried to hit him with a snowball.\n\n\"Uncle Foot, you take that back!\" She was remarkably quick, and her actions upset the Nirumbi watching them. They hooted before vanishing into the woods, leaving only the owl to watch their antics.\n\nBigfoot spent a couple of minutes making kissing sounds before Velvet nailed him with a snowball right in the face. Laughing, he waited for them to catch up, then scooped some snow out of his beard and rubbed it in Velvet's hair.\n\n\"So about this owl-woman...\" Mike muttered.\n\n\"Right, sorry.\" Bigfoot's grin turned to a frown. \"She is not a friend of mine. Some years ago, she and her sisters were well known for terrorizing the tribes. They ate anything they could get their hands on, people included, so they were hunted until only two were left. Early last century, they stole a boy from one of the villages. The boy escaped and ran home to tell the elders where the sisters lived. I was under the impression that they had both been killed, yet one survives.\"\n\n\"Definitely not a friend, then.\" He continued walking, then turned to look behind. Yuki was fine as she walked on top of the snow. Dana trudged forward without any problem. Quetzalli, however, struggled. She was sinking into the snow up to her shins and was obviously tired.\n\nHe slammed the rest of his soup and took the last can from Yuki. When Quetzalli caught up with him, he offered it to her and then slid a hand around her waist. \"Here, let's walk together.\"\n\nShe smiled and took a sip of the can. \"Oh, gods, this is just salt and cream,\" she exclaimed. \"And was that a clam? What's wrong with it? It tastes like someone else ate it already!\"\n\nShe handed the can back, and he took it.\n\n\"More for me, I guess.\" He bet Tink would have loved it. They had some differences in opinion when it came to cuisine, but he could easily imagine the goblin chugging a can of the stuff in between projects. He really hoped she was okay. As soon as thoughts about the house entered his head, he promptly shut them out. Worry and fear would paralyze him, and he needed his mind in here and now to deal with whatever was coming.\n\nAs they crunched through the wilderness, he heard snippets of words nearby. They were solitary thoughts, barely audible in the cold, dark of night. It was the spiders of the woods, just trying to survive until daybreak when they could warm back up and hunt for food.\n\nBut it wasn't just the spiders he sensed. Whenever he moved close to the trees, he was under the impression that they were listening. On a few occasions, he would put his hand out to either steady himself on a trunk or move a branch, and he could have sworn that he felt the tree shift beneath his touch.\n\n\"Are their dryads out here?\" he asked, looking at Bigfoot.\n\n\"Nope,\" Velvet answered. \"It's always just been us.\"\n\n\"But the trees...\" He looked at a nearby pine. Though it looked like an ordinary tree, he could almost feel its presence in his mind. \"It almost feels like they're watching me.\"\n\nBigfoot nodded. \"The land watches you, Caretaker, as it watches us all. There are many spirits that reside in nature, many of which cannot be perceived. Each tree is alive in every sense of the word. They think and feel for themselves, much like children. Together, they make up the mind of the forest.\"\n\n\"Like a hive?\" A chill went up his back.\n\n\"In a way. Everything out here is connected, Caretaker. This is an important thing for you to understand.\" Bigfoot put his hand on a fallen log. \"I am very surprised that you can feel it, though.\"\n\nAmymone. Sex with the dryad had apparently come with a perk of its own. Did the women he slept with gain something from him? Cecilia had that little red streak in her hair, but what about Lily? Or Naia for that matter? He looked at Quetzalli, Velvet, and then Dana. What part of his soul had he given to them? Peering up into the sky, it occurred to him that Abella seemed no different than when he had met her.\n\nHe should probably be keeping a little black book with this information in it, but he hated the idea of carrying around his own personal fantasy fuck-list.\n\nThe more they walked, the more he could feel the forest. He no longer felt like the trees were watching him, but that they were reaching toward him. When he first heard the whispers, he thought it was just more spiders suffering through their eight-legged anxieties, which were largely narrowed down to eat, hide, and build.\n\nHowever, the longer he was steeped in these thoughts, the more he realized how much he missed the sun. He longed to feel its rays across his body, and to soak in the cold, trickling water that would come from the melting ice. To feel thunder booming through him as the spring rains came, to feel the songs of the forest embrace him, and--\n\nA heavy hand gripped him by the shoulder, snapping him out of his reverie. It was Bigfoot wearing a smile on his face.\n\n\"Perhaps, when this is over, I can teach you to listen to the trees without losing yourself.\" He gave Mike a firm squeeze. Mike looked around and realized that they were somewhere new. How long had he been lost in thought?\n\n\"I would like that,\" he replied.\n\n\"It is an honor to speak with the forest,\" Bigfoot told him. \"Never do anything to break that bond, for it is sacred and the forest will remember.\"\n\nHe nodded, and they all continued.\n\nGuided by starlight and foxfire, they finally arrived at a small rock formation surrounded by snow-dusted bushes. The owl landed just ahead and transformed back into a humanoid, her dark eyes devoid of emotion. Before them, the night sky had been blotted out by a mountain.\n\n\"We are here,\" she announced. Mike couldn't help noticing that Bigfoot looked around with grim recognition.\n\nThe owl-woman raised her arms and waved. Around them, the forest shifted as creatures slowly revealed themselves. Most of them were beast-like, but almost all were frightening to behold. A large bear with no fur and an oversized head regarded Mike with bared teeth. Above the rocks, a large eagle with a moose head landed, then stood to reveal the body of a man. More than a few serpents circled the area, but they all remained back.\n\n\"If this is an ambush...\" Yuki growled, but the owl-woman held up a hand for silence.\n\n\"This is not an ambush. We have brought you here so that you can see our numbers. Other than the Nirumbi, none of us here were part of the assault on your home.\" The owl-woman chirped softly, and a few Nirumbi came forward. \"Time is short. We must descend into the earth.\"\n\n\"Why can't we talk out here?\" Mike asked.\n\n\"There is much to discuss,\" replied the owl-woman. \"And you must see to understand.\"\n\nMike looked at the others. Uncertainty was written on their faces, but Bigfoot nodded.\n\n\"I know these caves well,\" Bigfoot explained. \"If they hope to lose us, I can get us out. I believe I know what we have come here to see.\"\n\nMike nodded, then looked at the others. \"At the first sign of trouble, you know what to do.\"\n\n\"There will be no trouble, Caretaker.\" The owl-woman hopped down from the rocks and landed silently on the snowy ground. Her feathers swirled around her like a cloak. \"You have survived the Nirumbi's arrows and they now believe you to be one of the forest gods, like Bigfoot. Your companions are frightening, but the one who eats the dead frightens them the most.\"\n\nDana raised an eyebrow. \"Technically, anyone who eats meat eats the dead.\"\n\n\"Do you know why the Nirumbi eat their own dead?\" The owl-woman stepped back toward one of the bushes, then grabbed a branch and pulled it to reveal a narrow opening. \"By eating the flesh of their dead, they gain the strength of the fallen warriors. You consumed the flesh of many of their warriors while they lived, which is even more powerful, but considered taboo. They fear the strength you have gained.\"\n\nDana smirked, then made a fist. Hidden in the trees, the Nirumbi chirped in fear, then went silent.\n\n\"Good. They should be afraid. Shall we?\" Dana went first, ducking her head to go through the opening. Mike looked at the others, then up toward the sky. Abella hadn't bothered landing, but now circled even higher than before. It was clear she intended to keep watch.\n\n\"Time is of the essence, Caretaker.\" The owl-woman regarded him with mysterious eyes that reflected the starlight. \"If you wish to beat the Devil of Jersey--\"\n\n\"Yeah, yeah.\" He crouched down and moved forward into the darkness. If it meant defeating Leeds and getting home, he would walk through fire if need be.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\n\"Well? What do you think?\" Beth frowned nervously at Opal, who was perusing a copy of Risk's instruction manual and the sheet of notebook paper where Beth had written her own ideas. The slime frowned as if in deep thought, then nodded her assent.\n\nI think it could work, she signed. But you will have to be careful with the wording. The angel will take the agreement literally.\n\n\"Indeed.\" She stood and moved toward the window. They were sitting in the lounge with the Egyptian artifacts pushed aside to make room for everyone. The various books and pictures had been stacked on top of each other so that they could cram the statues and assorted items onto the shelves where they would be out of the way.\n\nWith the deadline looming, she wanted to be able to see the horsemen in case they arrived early. After her lengthy discussion with Reggie and Jenny, she had chosen this room to sit down and draft out her plan. Lily had read over it and pronounced the whole thing insane, but believed it could work. Needing further assurance, Beth had brought it to Opal. Though she still had lingering doubts, she couldn't help but trust Death's instincts about the now sentient ooze.\n\nOpal thumped on her tub to get Beth's attention. I do foresee at least one problem. Can you trust Jenny to stick with the plan?\n\nBeth licked her lips, then nodded. \"Jenny is a lot of things, but she loves this house in her own way.\"\n\nBut you're basing this whole thing off the Clue incident. Opal frowned, and then ripples appeared along the surface of her body. This is like playing Russian Roulette with a nuclear weapon instead of a gun.\n\n\"I know. But unless you have a better idea, this is what we've got.\" She looked over at Tink, who was still grinning in her sleep. The blanket they had covered her with was slipping off, so Beth adjusted it. Noticing that the goblin was still wearing her goggles, she slipped them off of her head, and sat down on the couch.\n\n\"Tick Tock, keep these safe?\" She held the goggles out and the bag at her feet opened its mouth, dropping them into the unknown. She then looked at the Grimoire. She had set it on the table, a large slab of black marble with no legs that had hieroglyphics carved into the edges. It had been covered in a bunch of magazines that Death had borrowed from the Library, but Beth had put those away a bit ago. The Grimoire was next to a glass of milk and a plate of mostly frozen Eggos. The chill in the house meant that they would take forever to thaw, but she needed something to smear peanut butter on.\n\nSighing, she stared at the Grimoire. The cover was embossed with an apple, and the thick binding made it feel heavy. She picked it up and opened it to a random page, which was blank.\n\n\"If you had the ability to use magic,\" she said, directing her question to Opal, \"but could only learn one thing, what would it be?\"\n\nI wouldn't mind being able to walk, Opal signed.\n\n\"That makes sense.\" This book held so many secrets, but it also held knowledge she could readily use. The words within would allow her to tap into the universe itself, to master the elements or maybe even reality itself. Naia and the others had explained that there were issues with taking shortcuts, but she had cast the spell in the basement without any problems. So why couldn't she just learn a few basic spells now that would speed along her growth?\n\nOpal thumped her tub, then mimed fire coming out of her eyes once Beth was looking.\n\n\"Yeah, there was that.\" She closed the book again. \"But I don't want to look up any Words of Creation. What about something simple, like a light spell? Or flight? Do you remember when the shadow used this book to cast that ball of light that blasted holes through everything?\"\n\nThat's not a memory I have, responded Opal.\n\n\"I keep hearing that magic has a price, but I'm not really seeing it.\"\n\nNot all costs are things we can measure. Opal paused for a moment, as if deep in thought. Look at Ratu, for example. Vast knowledge of enchantment. Powerful sorceress. But why is she living in the Labyrinth? Why not have her own castle somewhere?\n\n\"Hmm.\" It wasn't something Beth had thought of. \"You don't suppose it's just personal preference?\"\n\nI doubt it. Opal paused, her face rippling violently. In a way, I am the cost of magic. You have helped create a thinking being. Are you not responsible for my well-being? Think about the basic ethics of the situation.\n\nBeth shook her head. \"I didn't cast a spell with you as a by-product. You were the result of a very strange sequence of events.\"\n\nAgain, you're thinking in terms of things we can measure. How do you explain Emily? Her obsession with magic led to her downfall.\n\n\"She got possessed, that's...\" Beth paused. Emily had been attempting to gain magical knowledge which had led to her being possessed by the shadow, who then wore her body like a meat puppet. \"Using magic doesn't always extract a price. Sometimes, it's the act of obtaining it that can lead to negative ramifications.\"\n\nI think you've got it. Opal relaxed and slid most of the way back into her tub. Whatever you decide to learn from that book may change you. But you won't know until after it happens. Lily wasn't prepared to learn a Word of Creation and look at what it did to her.\n\n\"You're right.\" Beth contemplated the book again. It was a decision that warranted some thinking. The spell she had cast in the basement had been easy enough, and she didn't doubt there were hundreds more. It was a book capable of opening right to the spell you needed, the ultimate shortcut. She could see why the Society and the shadow had wanted it. Immense power waited for any who were ready to seek it out.\n\nShe bit into her frozen Eggo and blanched. Even with peanut butter, it didn't taste great. Contemplating her meal, her gaze slid over to the Grimoire. Would there be a spell that could cook her food? Surely a spell that low-key wouldn't extract too big a toll.\n\nFive minutes later, Beth stood over the smouldering remains of a pair of burnt Eggos and a smoking blanket. Luckily, the fire hadn't been magic in nature, allowing her to beat out the flames with a nearby blanket.\n\n\"That was stupid,\" Kisa told her, which made her jump.\n\n\"You saw that?\" Beth realized it was a dumb question as soon as she asked it. Kisa hadn't left Tink's side, and the goblin snored quietly on the couch. The look on Kisa's face made it clear that she thought it was a dumb question as well. She picked up the Grimoire and ran her thumb along the edges.\n\n\"Every time I see you with this book, it makes me wonder. For instance, if there is a spell in here that could turn me back? Or maybe one to restore my memories.\" She opened it up to a random page, revealing a series of silvered letters that beckoned to them both. \"And do you know what it reminds me of?\"",
        "\"What's that?\"\n\nKisa fixed Beth with a hard stare. \"My memories are like a bad CD. They skip over songs and play things on repeat no matter how many times you push those buttons.\n\n\"But the memories I do have? They're vibrant. I get to live through them like I'm stuck in a bad dream. And every time I wonder about being human again, I remember how I got here.\"\n\nHer hands touched her throat, and she let out a sigh. \"It was an accident. I got hit by a car just when my life was gettin' good. Both of my legs were destroyed. I came from the streets, and dance was gonna be my ticket to a better future. Instead, my life was over. That's when we turned to magic. We tried to mend my legs with magic we didn't understand. I think you know what happened next.\"\n\nShe stretched out and gestured at her body. Her tail twitched behind her for emphasis. \"This was my cost. A transformation I had no control over. I came here for help and found Emily instead. She forced me to continue my transformation until it suited her needs. It was a sequence of events we could have never predicted, but it all started with jumping in blind. The next time you think that you know better, I think you should remember that you don't. If it's something you really wanna dabble in, you should speak to someone who knows their shit, like Ratu. And you should keep in mind that she doesn't even want to touch this book until she's better. If a snake deity with hundreds of years of experience is wary of this fucking thing, then you should be, too.\"\n\nKisa slammed the book shut, scattering the letters into the air where they melted into smoke. She handed the book back to Beth.\n\n\"Never rush into magic unless you have no choice.\" As Kisa spoke, her green eyes glowed. \"You know why that thing has an apple on it? I think it's a warning. That book is full of forbidden knowledge and you're about to get your ass thrown out of the Garden for biting into it.\"\n\nBeth sighed, then nodded. Kisa was right. The Grimoire would wait until Ratu could properly look through it. She looked over at Opal, who nodded in agreement. Even the slime knew better than she did.\n\n\"Here,\" she said, holding the book out to Tick Tock. The mimic opened its flaps and she dropped the book inside, then sat down with a groan and examined the smoldering mess she had left on the table. She was still hungry, and now the room stank of smoke.\n\nShe used a rag from the kitchen to wipe down the table. Luckily, the dark marble was unmarred by her culinary experiment. In fact, the table seemed to absorb what little light there was in the room. Curious, she ran her fingers along the surface. It was smooth to the touch, and felt like it was vibrating beneath her fingers.\n\nBeneath the couch, she heard a clicking sound. She bent over to look but was interrupted by Lily, who knocked on the door.\n\n\"They're back,\" she announced, then pointed outside. Beth stood and watched as the mist swirled and billowed away, revealing the angel and his three riders. Death was already moving toward them, his pace casual.\n\n\"Guess I'd better go.\" She picked up Tick Tock as she stood, pausing long enough to grab the instructions from Opal before moving into the living room. Reggie and Jenny were already waiting by the front door, where the Rat King held up the Risk box for her to grab.\n\n\"Let's go start an incident of our own, shall we?\" Beth took the box and then picked Jenny up and cradled her like an infant. In the back of her mind, she could hear the doll's maniacal laughter.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThe caves were cold at first, but soon became warmer than the outside air. Yuki had conjured a few balls of foxfire that floated along with the group, and Mike relied on them to see where he was going. He also had a flashlight, but decided to save the batteries for the inevitable betrayal that would lead to the group being separated. They would be forced to escape the caves while being chased by spear-wielding boulder people who spat lava and farted fire.\n\nThe owl-woman, who had never given her name, was waiting for them at the opening to a large chamber. Flickering lights beyond the entryway cast long, ominous shadows through stalactites and soda straws on the ceiling which gave him an impression of a fearsome maw. He scowled in discomfort, half expecting to see a council of mythical creatures on the other side. They would all be sitting in a circle, ready to demand God only knew what from him.\n\nHe was wrong. The opening formed into a series of tunnels that contained glowing stones for illumination. Large columns vanished into the darkness above, revealing a massive chamber that was easily a hundred feet high in places. Holes in the bedrock revealed little hovels where Nirumbi families watched them from behind faded leather curtains.\n\n\"How can this be?\" muttered Bigfoot. He was still hunched over, despite the tunnel's height. \"I thought maybe a few had survived their war with the tribes, but this? This is unprecedented. \"\n\nThe owl-woman fixed Bigfoot with a stern gaze. \"We are all capable of change. The Nirumbi, once fierce warriors who roamed the plains, learned long ago to live beneath the Earth and have forsaken many of their warrior ways. They have done this for many generations along the mountain ranges of your country.\" She directed this comment to Mike.\n\n\"But surely someone would have seen them?\" He looked over at a nearby hovel in time to see a pair of adults grab a child and pull them back inside. From what he could see, the males looked just like the females, so he had no way of knowing gender. Did they even have males and females? Or maybe it was asexual reproduction? The thought of watching one of the Nirumbi slowly split into two gave him the shivers.\n\nThe owl-woman sighed. \"Your people have, but do not often live to tell the tale. You see, it is easy to make a human disappear when you eat it and toss its bones down a well inside a cave.\"\n\n\"Barbaric.\" Velvet snorted from behind Mike. \"So, what, they just catch and kill whoever they wish?\"\n\nThe owl-woman dipped her head. \"Some do. You see, the Nirumbi are at an important crossroads in their evolution. Many of them see the wisdom to keep to themselves and only feast on non-sentient beings. Others wish to return to their warrior ways. Leeds is the reason so many of them attacked you.\"\n\n\"Is he their leader?\" Mike asked.\n\n\"In a way.\" The owl-woman gestured for them to follow. The Nirumbi he spotted gave him determined looks, but he didn't see any of the ferocity that he had earlier.\n\nThey continued through the tunnels, revealing that hundreds of Nirumbi families lived there.\n\n\"Did they do all this?\" Mike asked, gesturing to the stone-cut homes. He was surprised when Bigfoot answered.\n\n\"No,\" he said. \"These caves were already here.\"\n\n\"They were,\" agreed the owl-woman. \"The Nirumbi are dying out. Despite having caves to live in, they still require the world above the ground to survive. After many close calls with the humans, the men with swords came and began an extermination.\"\n\n\"The Order?\" asked Velvet.\n\n\"Yes.\" The owl-woman was walking down the tunnel, but her head turned a hundred and eighty degrees to face them. \"Years ago, Leeds came to the Nirumbi and promised them a land where they could be free. In exchange, he needed their help to conquer it.\"\n\n\"That's a super dick move,\" Mike told her. \"To just show up on my back porch and start shooting arrows at everyone.\"\n\n\"Your ancestors had no problem taming these lands with steel and gunpowder,\" she replied. \"If you have a better suggestion for the Nirumbi, I would love to hear it.\"\n\n\"Why Leeds?\" This came from Dana. \"I saw all those creatures out there. Clearly, they didn't come help him fight. Why did the Nirumbi get to do all the dirty work while they just sat back? Except for the Wendigo, of course.\"\n\n\"There were a few reasons for doing so.\" Her head swiveled around and she took them down a narrow side passage. There were fewer Nirumbi living in this part of the cave. \"The first is that he promised he could get everybody into this land. This was a feat that took him many years, and there were those who didn't believe he could do it.\"\n\n\"Opening a door doesn't make you a leader,\" Yuki said.\n\n\"Correct. What made him a leader was something he told us about called the Great Game.\"\n\nMike had been paying close attention to his surroundings, but now his interest was focused solely on the owl-woman.\n\n\"What did he say?\" he asked.\n\n\"Only a human soul could participate in the game, and despite his demonic appearance, his soul is that of a mortal. The plan was to take this land from the current Caretaker by any means. He claimed that he could protect the vulnerable children of the forest, but only if he was in charge.\"\n\n\"What else did he say? And where did he learn about the Great Game?\"\n\nThe owl-woman shook her head. \"I do not know. Leeds is many things, but a reliable narrator is not one of them. I only heard this information third hand, and always after he had moved on. He has been preparing for many years now, and many thought he was a liar.\"\n\nMike nodded. \"But then he actually brought them here.\"\n\n\"He sent out the call, and the children of the forest listened.\" The owl-woman stopped and turned toward Bigfoot. \"You of all people should know that they have no leader. They were easily swayed by promises of a better world, much like you were.\"\n\nBigfoot held up his massive hands. \"I'm not going to argue the point,\" he grumbled.\n\nMike looked at the owl-woman, and then Bigfoot. A thought occurred to him. \"You don't want Leeds in charge,\" he said, \"that's why you need me.\"\n\nThe owl-woman's head twisted to look at him. \"It is. You see, some of us have doubted Leeds' intentions all along, and his efforts to displace you have created a momentary breach of trust. The Nirumbi do not wish to continue feeding their warriors to your guardians, and many of the others fear retribution. The warriors of the Nirumbi are the next generation, and between you and the Wendigo, they have already been halved. We now find ourselves at a tipping point where all that we want is finally within reach, but the cost has already been too high. We have seen the company you keep, and wonder if there is a better way.\"\n\n\"They want my permission to stay, don't they?\"\n\nThe owl-woman sighed. \"They do. We are tired of fleeing from your people, Caretaker. The Order has forced us to remain hidden from your world, which means we cannot retaliate in kind as our homes are bulldozed. This place is a sanctuary, an untouchable piece of paradise where they can live and be free.\"\n\n\"I doubt this.\" Bigfoot sneered at the owl-woman. \"Even if the Nirumbi are planning on playing nice from now on, I saw the creatures of the forest you had gathered out there. Some may be happy to piss away their days without bothering anyone, but you have a collective who's-who of man-eating monsters up there.\"\n\n\"Really.\" Mike looked from Bigfoot to the owl-woman. \"I'm not keen on hosting creatures that will fight and potentially kill me or my friends.\"\n\nThe owl-woman nodded. \"And yet you did not see them attack you. But I do not expect that to be the proof you need to change your heart. There is more to see.\"\n\nThey followed her through a large cave with thick stalactites. The dripping water sounded almost like rain, and he could see thick tree roots up above. How far down beneath the ground were they?\n\n\"While Leeds is gone, it may be possible for you to win over the forest children by agreeing to let them stay, but I understand your hesitance. I would tell you my own story before we get to our destination. You see, I am one of these creatures that Bigfoot would warn you about. My sisters and I -- we used to hunt and devour humans.\"\n\n\"Tale as old as time. Please, continue.\" Mike waved his hand for her to go on.\n\nThe owl-woman looked back at him as if judging his comment, but continued. Her soft voice barely echoed in the cave. \"You see, we didn't need to eat humans. Not only were they easy prey, but their parts made great materials for rituals. But we paid a price. There were once five of us. I lost three of my sisters to the tribes of this land. We only had ourselves to blame, if I'm being truthful. After their deaths, it occurred to us that maybe we were, in fact, wrong.\n\n\"My remaining sister and I decided that maybe it was time to understand the human world better, but we erred. We took a human child from his village and tried to raise him as our own.\"\n\n\"That didn't go well for you, did it?\" Mike asked.\n\n\"It did not. Though we tried to offer the boy the secrets of our magic, thinking it would be enough, he betrayed us instead and returned to his people. When he led them back, we were caught off guard and our home was destroyed. My sister died, but I was lucky and managed to escape.\" She stopped and put her hand on a rocky outcropping. Her clawed fingers ticked on the stone like an old clock.\n\n\"What happened, then?\" Velvet asked.\n\n\"I am the last of my kind. When I die, my legacy goes with me.\" The owl-woman suddenly looked tired. \"So I decided to try and become family with the others of the land, to pass on my knowledge. I encountered the Nirumbi decades back, and they revered me as an elder. Many of them came to realize that the old ways are gone, and it is time to adopt new methods of survival. That is part of the reason why I am here, the others look to me for guidance as well. I know that Leeds will outlive me. I would see the Nirumbi become something better than even I could be, but they will not do so with Leeds in charge. He hates humans, and will spend his life forging the children of the forest into a terrible weapon to use against them.\"\n\nShe turned to Mike, her eyes suddenly wide. \"But we cannot guide the children of the forest without you. Take away their reason for fighting, and Leeds loses his power over them. They are capable of learning, and I am not afraid to teach them the ways of peace.\"\n\nMike shook his head. \"So, you want me to, what? Forgive them for nearly killing me?\"\n\n\"Yes.\" She bowed her head in supplication. \"But do not speak your decision yet. For we have arrived.\"\n\nMike looked around but saw nothing out of the ordinary. Bigfoot, however, let out a grunt, then frowned.\n\n\"This way,\" he said, then crouched down to crawl through an opening that had been hidden in the wall.\n\nThe darkness was difficult to navigate, but he found himself in a large chamber. Up above, large stony spikes glistened in the light of the foxfire. Multiple levels in the chamber made him realize that it had been carved out of the rock. The others came through and stood silently behind him.\n\n\"Where are we?\" he asked, his voice gobbled up by the dark spaces above.\n\n\"The cave of the dead. The Nirumbi fear this place,\" replied the owl-woman. She pointed out into the center of the chamber, and Velvet gasped.\n\nIt was covered in tiny skeletons, hundreds of them. They were curled up on the ground, their remains undisturbed. Mike moved into the middle of the chamber, his heart pounding. The tallest of the lot were perhaps four feet tall, and he could see the spiked protuberances at the front of their skulls. They were mostly mummified and still had their clothing and hair.\n\nThey were goblins.\n\n\"How did this happen?\" Mike asked.\n\nBigfoot grunted, then wiped his nose. \"Many years ago, the goblins emerged from the cave. They attacked our family, and we retaliated in kind.\"\n\n\"I heard, but this?\" Mike ran up one of the nearby ramps. The hovels here were similar to what the Nirumbi lived in. He looked inside of one to see a goblin's remains lying across several smaller goblins. \"You killed all of them?\"\n\n\"There was no choice, Caretaker. We could not reason with them, they attacked us on a daily basis. It came down to them or us, and we won.\"\n\n\"Uncle Foot?\" Velvet looked at her uncle with a mixture of awe and horror. \"There are whole families here.\"\n\n\"I know.\" Bigfoot winced. \"For your parents, your survival was far more important. This was not a choice made lightly.\"\n\n\"How did you do it?\" Mike shook his head in shock. The goblin homes were everywhere. \"I thought they were immune to poison.\"\n\nBigfoot grunted. \"It wasn't easy. Ana and Darren spent weeks mapping out this cave system. Once it was done, they figured out the passageways where the air was coming in and then sealed them off. The goblins here had rituals that involved the phases of the moon. When we knew they would all be here worshipping their gods, we set up generators and flooded the tunnels with carbon monoxide. It was done in such a way that goblins sent to investigate the noise died first. Their bodies were immune to poison, but they still needed air to breathe.\"\n\nHorrified, Mike sat down on one of the ledges. From where he sat, he could make out the central dais of the chamber. A figure in ceremonial garb lay nearby, the fabric now moldy from the dampness of the cave. Velvet's parents had slaughtered the goblins while they had essentially been attending church.\n\n\"There had to be a better way,\" he muttered. But was there? If the goblins kept attacking them, then there would have been no option. Still, to see that an entire tribe of goblins had been wiped out?\n\n\"Evil is in the eye of the beholder. The goblins didn't see themselves as evil, they were just doing what they have always done. This was the price they paid.\" The owl-woman transformed and flew toward the top of the cave. \"I have one last thing to show you,\" she said, after transforming back.\n\nHe didn't want to see. The owl-woman had already made her point. But he stood and followed. A cool hand found his, and he looked into Velvet's eyes.\n\n\"I had no idea,\" she told him. \"I always thought they drove them off, or at least killed them in battle.\"\n\nHe nodded, then navigated his way up the path. The footing was treacherous, but Velvet had no problem with it. She supported him until they got to the top. The ceiling was low and the passage led to a narrow chamber.\n\n\"Here.\" The owl-woman pointed at the back of the cave. Mike clicked on his flashlight and almost dropped it.\n\nIn the back of the cave, a rudimentary bookshelf had been carved into the wall. There were a few books still on the shelf, but they had long ago turned into little more than paper mush. On the nearby wall, he saw that someone had drawn symbols in dark paint. In crude letters, someone had practiced the alphabet over and over again, until the letters culminated in a declarative statement that sat away from the others.\n\nI LYKE TO TINKR\n\nTINKR IS ME NAME\n\nBeneath the words there was a series of stick figures that were clearly meant to be goblins. They were drawn with angry faces and clubs standing around a tiny goblin with tears on her face and knees pulled up to her chest.\n\n\"Tink,\" he muttered. He had never thought to ask where she came from, and she had never brought it up. What little he did know was that the other goblins hadn't liked her. Is this where Emily found her? How had the goblins come to be here in the first place?\n\n\"The goblins were ready to evolve. If one could learn to read and write, then why not more?\" The owl-woman hung her head. \"Alas, we can never know. If they hadn't been exterminated, this one could have led them to a brighter tomorrow. I wanted you to see this, Caretaker, so that you would better understand why we can never predict the future of an entire species based on the truths of their past. Good men can become evil, and evil men can find redemption. Why not an entire people? My story alone may not be enough to sway you, but this should. The goblins have been seen as irredeemable for centuries, but this? This is proof that they had the potential to change, to be better than what they were.\"\n\nMike reached out to touch the letters on the wall. How many decades had they been there?",
        "\"He can't lead the Nirumbi to a brighter tomorrow.\" Yuki's voice came from back in the cave. She stood at the edge of the goblin pit, her fists balled up at her side. Foxfire illuminated her from behind. \"You can't just expect him to drop his life and come be a leader to people he doesn't even know. This isn't his burden to bear.\"\n\n\"You misunderstand. If the Caretaker agrees to let the forest children stay, then our only obstacle is Leeds. I will stay and guide the children of the forest. I have much to teach them, and not enough years.\" She made a symbol with clawed hands that glowed an angry red color. \"On the topic of Leeds, his is the magic of shadows. He learned it from a witch. Though I can't take down his barrier, it is in my strength to help you cast him out. Once he passes through the barrier, it will come down and you will be free to leave.\"\n\n\"What guarantee do we have that he won't come back and start this shit all over again?\"\n\nThe owl-woman shrugged, which sent a few loose feathers to the ground. \"Even if he does, he won't be able to build his trap. I and the others will make sure of it.\"\n\nMike traced his fingers along the letters of the wall. Tink was in danger. Everyone at the house was. Maybe there was a catch in the owl-woman's deal that he couldn't see, but he didn't have time to figure it out. The others could leave with him, and even if he were to lose the forest, he would still have his family and his home.\n\n\"I accept,\" he said, hoping this wasn't a huge mistake.\n\nTo his relief, Bigfoot grunted in approval. Even if they were both wrong, he at least felt better making a mistake with a friend by his side.\n\nNo, many friends. He took Velvet's hand and squeezed her fingers. He didn't have a word for their relationship yet, but he looked forward to figuring it out.\n\n\"Let's get out of here,\" he said, then turned to face the owl-woman. \"Do you think the children of the forest will help us with Leeds?\"\n\nShe nodded. \"Some will not. They abstain and wait for the victor. Please do not fault them, for it is their way. But you have my vow that I shall not rest until the Devil of Jersey has been captured.\"\n\nBigfoot held out his hand to the owl-woman, like he was expecting her to slap him five. She timidly placed her claw over his.\n\n\"I misjudged you,\" he told her. \"You see, I used to take my duties to the forest seriously, but was blessed to become part of a family. Instead of wandering the land and fixing its ills, I indulged in matters of the heart and felt myself grow in ways I never imagined. Knowing now how that feels, I can understand why you did what you did.\"\n\n\"Thank you.\" The owl-woman withdrew her hand, which disappeared into her feathers. \"In that case, let's go meet with some of the others. I have an idea on how to capture Leeds, but we must move quickly. He will likely return in a day or so.\"\n\nThey walked away from the cave, but Mike hung back. He turned one last time to shine his light on Tink's words.\n\n\"I'm coming home, goblin wife. Just hang in there.\" Setting his jaw, he turned to join the others and descended to the bottom of the goblin's pit. When he got to the mouth of the cavern, he stopped and looked back. His goblin in-laws were in there somewhere.\n\nHe wished their spirits well, then hurried after the owl-woman to catch up.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nIt was nearing the middle of the night when the back door of the house opened. Eulalie leaned away from her computer to see Sofia and Sulyvahn walk inside with Cyrus in tow. The man's head was back inside the pillowcase, and they directed him over to the couch.\n\nThe lights in the kitchen had been unscrewed. Even with his eyes unhindered, Cyrus would have trouble making out her form in the shadows.\n\n\"I hear you've had a productive day,\" she said. Other than sneaking a nap earlier, she had watched as Cyrus was led across the property. Naia and Amymone had hidden away once the man was out back with the idea that the less he knew about everyone else, the better.\n\n\"That's a matter of opinion.\" Cyrus scratched his head through the case. \"I think I ended the day with more questions than answers, though.\"\n\n\"Success isn't always a feature of productivity.\" She looked up at Sulyvahn, who handed her a diagram that Cyrus had drawn. It was a map of the grounds around the house. There were several little dashed lines done in blue ink all over the property and inside the house. However, a thick red line had been drawn along the back where the gate was. \"What am I looking at here?\"\n\n\"That's a great question. Hard for me to tell you with this thing on.\" He gave the case a tug. \"Don't suppose--\"\n\n\"Nope. A girl's got her secrets.\"\n\n\"What is a rat queen, anyway? Other than the obvious, it's not a title I'm familiar with.\"\n\nShe smirked, then used the tips of her front legs to create a clicking sound that sounded very much like the grinding of teeth. It was a noise that had driven her parents and her sister nuts. \"Oh, you definitely don't want to see what I've got going on. I'm all hair and teeth, and you will be driven mad at the sight of me.\"\n\n\"I've seen worse,\" he offered.\n\n\"No, I mean you will literally go mad. Part of my magical charm. It's a feature, not a bug.\"\n\nCyrus went quiet for a moment, then sighed. \"Okay, whatever. Your rules. What are you asking about?\"\n\n\"Let's start with the lines.\" She had heard some of his answers while spying with the drones. It had been child's play to attach a microphone to one and then land it around the yard while he did his work, but she had been unable to capture any good audio while flying. In retrospect, it should have been easy to write a Fourier Transform program to account for the changes in current to the rotors of the drone. Knowing the exact speed of the rotors could give her the frequency needed to generate the proper sound-cancelling technology to clean up the signal.\n\nHowever, the microphone wasn't that great to begin with, and if she had started such a project, she would already be arguing in a chat room full of like-minded programmers about why it should be technically feasible. Finding a way to blend engineering with programming was a special form of madness that she didn't have the patience for.\n\n\"Okay, well, the small ones are remnants of extraplanar activity. A small, healed wound on the space-time continuum, or however you want to put it. There are a few on the grounds themselves, but even more inside. For instance, there was one on the closet inside the front door. Means that a portal was there at some point, for a long time. It's left a mark, but it's gone now.\"\n\n\"Go on.\" What he said made plenty of sense. The home had its quirks, after all. A parallel universe greenhouse with a shortcut built into the front yard. An enormous Labyrinth in the basement. And what she assumed was access to the fabled Library of Alexandria.\n\nAnd that was just the stuff she could remember off the top of her head.\n\nWhile looking at the dotted lines, she saw the pattern emerge. Using a pencil, she connected some of the outermost lines together. It didn't take her long to realize that she was essentially sketching the borders of the house before it had changed. The lounge with all the Egyptian crap was clearly outlined on the map before her, and if she pretended that the house was twenty feet longer, the back wall of the home now lined up with the dots.\n\nThese lines were proof that the real Radley house had been there, but was now gone. She ran her fingers along the dotted lines, wondering just where it had gotten off to. All this extra-planar data must have been so confusing for Cyrus, but she wasn't about to fill him in on the truth of the house. It not only wasn't her place to do so, but she was still fuzzy on plenty of the details herself.\n\n\"But all of these were trivial,\" Cyrus continued. \"I could detect their essence, but it's something that will fade with time. I was lucky to spot them at all, a function of how recent the event was. Still confusing as hell, by the way, that you won't tell me what happened, but no matter. Now, the big red one in the backyard is far more interesting.\"\n\n\"How so?\"\n\nHe tilted his head back and forth as if lost in thought. Or maybe there was a gap in the fibers and he was trying to get a good look at her. Just in case, she held perfectly still.\n\n\"Two scars, fairly large, one on top of the other. I imagine this place had magical connections to somewhere else, which I would love to discuss--\"\n\n\"Nope.\" This came from Sofia. \"We aren't talking about us right now. Answer the queen's question.\"\n\nCyrus groaned in annoyance. \"Fine. The big iron gate you have out back was the boundary for somewhere big. That was no casual portal to somewhere else, I can tell you that much. These other marks I made were for little things, such as connecting one place to another. This, however, is like a giant scar on space-time that goes somewhere outside of, well, here. Like, this reality. What interests me the most about it is that I can see that someone stretched it open and used it very recently.\"\n\n\"How so?\" Now, this was interesting. If she remembered correctly, the gate went to the Underworld itself.\n\n\"Because of the overlap. When I was doing my experiments, I was detecting a portal inside of another portal, which is impossible for so many reasons. So I have a theory that--\" Cyrus sneezed, then shook in his hood. \"Oh, c'mon! This is just disgusting!\"\n\nEulalie held back laughter as Cyrus shifted the hood around, clearly trying to wipe himself off. She didn't care if it was another attempt to remove the hood, it was pretty funny.\n\n\"Okay, I was going to give you an in-depth analysis of extra-dimensional folding, but I need to clean myself up. This is nasty!\"\n\n\"Give me the TLDR.\"\n\n\"The what now?\"\n\nEulalie rolled her human eyes. Her spider eyes stayed focused on the mage. \"The Too Long, Didn't Read version.\"\n\n\"This must be a millennial thing,\" he muttered. \"You're all too damn impatient. In short, I suspect that someone folded another space inside of the first one. A bubble in a bubble, if you will. The portal at the gate went somewhere large enough that it was far more convenient to stretch the portal itself out and just shove everything through, then let it snap back into place and gobble up whatever was taken. Kind of like how I'm using the inside of my hood to wipe snot off my face instead of a tissue or a rag.\" Cyrus leaned back in his chair and folded his arms over his chest.\n\nFascinating. So instead of the Radley house being moved, another dimension had been stretched over it and then closed off. Eulalie's fingers tapped a rhythm on the desk as she pondered the implications of what this meant. Whoever had done this would have to be insanely powerful. And if they were, then why not just attack the house? Why did it need to be moved in the first place?\n\nSofia gasped at the revelation and grabbed Suly's arm hard enough that her knuckles popped. The dullahan winced, then yanked his arm away to rub the injured area.\n\n\"Ye damn'd giant women and yer man hands,\" he muttered as he shook his arm and took a step toward Cyrus. \"Okay, I be thinkin' we be done here. Let's be takin' care of yer bogies.\"\n\n\"Thank you.\" Cyrus held up a hand and was led away by Sulyvahn, who would take him over to the Radley house. Though devoid of magic, it still had plumbing that worked and Cyrus wouldn't accidentally see Eulalie.\n\n\"We need to get a hold of Ratu,\" Sofia said. \"If Cyrus is right, then the others are trapped in the Underworld.\"\n\n\"Hmm.\" Eulalie pondered this with her chin in her hand. \"If so, then why haven't they escaped?\"\n\n\"You can't think of it as a local thing. The Underworld is infinitely large. They may be stuck somewhere millions of miles from here, or ten feet away behind a magical boundary. It isn't somewhere you can just casually escape. And even if they could escape, without a guide, you can't go more than a hundred feet without getting lost in the fog. There is also the problem of roaming demons.\"\n\nEulalie chewed her lip in contemplation. She couldn't worry about every possible iteration of the Underworld issue. \"Let's just focus on solutions rather than potential problems. If they are trapped in the Underworld, how do we find them?\"\n\n\"We could ask Cerberus, but...\" Sofia frowned. \"Last I checked, she only listens to Mike and Lily. And her gate is disabled.\"\n\n\"Yeah, well...\" Eulalie looked at a nearby rat, who stared at her with eager eyes. \"The rats can do it.\"\n\n\"They can't, actually. The rules for building portals have their limitations, and the Underworld is one of them.\" Sofia moved close by and knelt down so that she was eye to eyes with Eulalie. \"However, I bet Ratu will have some ideas. If we can somehow reconnect the gate, we can at least speak with Cerberus and figure out our options. Maybe she can sniff out the house?\"\n\n\"Hmm.\" Eulalie tapped her fingers on the table, then turned her attention to her laptops. Despite the collective knowledge of mankind at her fingertips, this was a unique problem that required a solution that couldn't be dredged up from the internet. She had cast her net wide, and succeeded in catching an inter-dimensional expert while also establishing a secure presence around the home. Now, though, it was time to change tactics.\n\n\"What are you thinking?\" asked Sofia.\n\n\"My mom had a saying. Once a web has served its purpose, you build a new one.\" She leaned back with a grin. \"It's a spider thing. She was actually full of spider-themed advice. They were kind of like dad jokes on steroids. A bug in the hand is worth two in the web, knock that shit off or I'll swat you with a newspaper...\"\n\n\"Still waiting on your idea.\" Sofia didn't seem amused by spider jokes.\n\n\"We go back to the Library. The rats can watch this place and Suly can keep tabs on Cyrus. He's sleeping in the main house, so we don't have to worry about him wandering over. We do some research of our own on extra-dimensional folding or whatever until we can speak to Ratu. Make good use of our time.\"\n\n\"Are we planning to sleep at all?\" Sofia raised her eyebrow. \"Some of us have been busy babysitting all day instead of playing on computers.\"\n\n\"Sleep is for bitches.\" Eulalie smirked. \"But if you need your beauty rest, be my guest.\"\n\n\"Guess I'll brew some coffee.\" Sofia stood and walked into the kitchen. \"If anyone knows how to properly pull an all-nighter, it's a librarian.\"\n\nEulalie smirked, then turned her attention back to the monitors. On the display, she could see that the rat guard had set up a perimeter around Murray's home. The longer she spent with the rats, the more self-sufficient they seemed.\n\nShe cleaned up the dining room, making sure to leave no webs behind. Once she was satisfied that she had left no trace, she waited for Sofia to finish her coffee and the two of them returned to the Library together.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nBeth stood with her arms crossed as Mehkhkahrel descended from the mists above, his whirling form somehow glistening with light that didn't exist. Beneath him, Murray pointed dramatically upward, surrounded by War, Pestilence and Famine. It surprised her that the air outside the home was far warmer than inside. This caused tiny alarm bells to ring in her mind, but she turned her attention toward Murray as his floating body tilted in her direction.\n\n\"We shall act as the final arbiter in this mediation,\" Murray declared. Though his limbs stuck out in odd directions, his mouth now moved appropriately when he spoke. \"Each party will now present what they wish to achieve by the end of this deliberation.\"\n\n\"We'll go first.\" War stepped forward and stabbed his sword into the ground. \"When this is over, we wish to walk the Earth. That is our bare minimum, and we will accept no other offers.\"\n\nFamine and Pestilence nodded their agreement. Beth sighed and looked up at the angel. She had expected this.\n\n\"Our desire is to keep these three from being brought to Earth. Even if only one of them arrives, countless people will perish.\" Beth looked over at Death, who nodded in agreement. \"Death will be allowed to remain.\"\n\n\"It would seem that your terms are at odds. We ask now that you attempt to come to an agreement.\" Murray turned his head and was able to look at both parties with his crooked eyes. \"This mediation will continue until an agreement is made.\"\n\n\"I wish to clarify something.\" Beth looked up at the angel's true form. \"It seems to me that neither party wishes to budge on their demands.\"\n\n\"You must come to an agreement,\" Murray declared.\n\n\"Right, about that. Hypothetically speaking, what would occur should we never agree?\"\n\nMurray's lips twisted into a sneer, then a frown. One eye rolled up into his head, and then it snapped back into place. \"No party may leave this space until an agreement has been made.\"\n\n\"Good.\" Beth smirked at the horsemen, then directed her attention to War. \"You see, as Death's legal counsel, I am mortal.\"\n\n\"We are aware of your failings.\" War grinned, revealing that his teeth were full of black stuff. \"But please, continue.\"\n\n\"These people, who I am still unconvinced are the official horsemen, do not suffer from my mortal affliction. As time here progresses, I have nothing to eat or drink.\"\n\nFamine chuckled, then pulled an apple out of his bag and proceeded to loudly consume it.\n\n\"That's not our problem.\" War tilted his head and licked his lips. \"We figure, at some point, you'll be hungry enough to give us what we want.\"\n\n\"Or I won't.\" Beth crossed her arms, then looked up at Mehkhkahrel. \"You see, if I were to become incapacitated, then I would be unable to complete this mediation. Is that correct?\"\n\n\"You are stating the obvious,\" Murray replied.\n\n\"So let's just say, for the sake of argument, I can no longer continue to represent my client. He would be free to seek new counsel, yes?\"\n\n\"This is true.\"\n\n\"Good. Death, if I succumb to dehydration, who shall represent you?\"\n\nDeath stepped forward and crossed his arms. \"I will represent myself.\"\n\nWar let out a laugh, followed by Famine. If Pestilence joined in, it was impossible to tell. Beth gave them plenty of time to yuck it up. The false sense of security that had just been established would give her an edge.\n\n\"Do you wish to give in to their demands?\" Beth asked.\n\n\"No.\" Death's eyes filled with fire. \"I shall sit here for an eternity before I allow these fools to walk the mortal realm. As I have walked this world since the beginning, so shall I sit until it meets its end. Even then, I shall maintain my vigil, purely out of spite for my brethren. They shall never again take part in the end of any world, and it shall put a smile on my face to crush their dreams.\"\n\nThe laughter stopped. War's mouth hung open for several moments before he looked over at Murray. \"They can't do that!\"\n\n\"You must come to an agreement.\" Murray turned his head, but his skin remained in place, allowing Beth to see his skull through what were now empty eye sockets. His jaw moved inside the flesh of his neck as he spoke. If she had actually eaten anything, she would have puked. \"Nobody leaves until both sides agree.\"\n\n\"That isn't fair!\" Famine pushed his way forward. \"You can't hold us to an eternal stalemate!\"\n\n\"You must come to an agreement.\" Murray was surrounded by an intense aura of light, which caused Famine to back away.\n\n\"You all fucked up. Probably should have picked a better leader.\" Beth examined her nails, pretending to be interested in imaginary dirt. \"If you win, the world ends and I die anyway, along with everyone I've ever loved. If you really are the incarnation of war, you should know better than to pin a human in the corner and give them nothing to lose.\"\n\nWar let out a yell and picked up his sword. With a cry, he stepped forward as if to swing it. Several eyes on Mehkhkahrel's body appeared and blazed with golden light. The sword froze in mid-air, yanked out of War's hands.",
        "\"Physical aggression by either party will result in forfeiture,\" Murray declared in a booming voice. Pressure from above forced Beth and the horsemen to their knees, then released them. The sword slammed into the ground, cracking the dirt. \"You will never again attempt to attack the other party.\"\n\n\"Then what do we do?\" Thick veins in War's neck appeared as his face twisted up in frustration. He picked his sword back up, careful to do so in a non-menacing way. \"Would you have us quit? It isn't fair!\"\n\n\"Brother.\" Famine put his hand on War's shoulder. \"I have a better plan. We force mediation until this bitch dies, then let it go. That way, at least we don't stay trapped here forever, but she still gets to die for pissing us off.\"\n\n\"In that case...\" Beth smiled and reached into Tick Tock to pull out the Grimoire. \"What if I told you I had a way to become immortal using this book?\" It was a deliberately vague statement. She didn't know if the Grimoire could do such a thing, but Mehkhkahrel couldn't call her out for lying. \"This is perhaps the most powerful magical tome in existence. It contains Words of Creation.\"\n\n\"That is forbidden knowledge,\" Murray declared, his face going slack as his skull repositioned itself correctly.\n\n\"Not by the laws of my people,\" Beth responded.\n\n\"Is she correct? Does that book contain Words of Creation?\" War's voice actually squeaked.\n\n\"It does.\" Murray sounded angry when he said this.\n\n\"How many?\" This came from Famine.\n\nMurray's forehead wrinkled up and a sneer formed on his face. \"Enough to make me concerned.\"\n\nThe conversation was veering in an unexpected direction. Even though the Grimoire had no information on harming angels, Mehkhkahrel was clearly concerned that Beth had such a thing. The last thing she wanted was for the angel to decide to take away the book, so Beth stuffed it back inside Tick Tock. The horsemen were off-balance, so it was time for her next ploy.\n\n\"So it looks like we are at an impasse. We will never settle. If you had taken the time to make an actual list of demands, something like 'we want to be on Earth, only not as the horsemen of the Apocalypse,' we might have played ball with you.\"\n\n\"We are forces of nature,\" Famine hissed. \"We do not 'play ball'.\"\n\n\"What if I offered you a way around this impasse?\" Beth tilted her head in a conspiratorial manner toward War.\n\nWar chewed his bottom lip so hard that it split and bled. His muscles tensed for several moments before he let out a disgusted sigh. \"I'll hear your idea, but we won't back down on our demands.\"\n\n\"Perish the thought.\" Satisfied that she had their attention, she grinned smugly. \"I want to challenge you to a game of war. Winner takes all. If we win, you go back to wherever Mehkhkahrel summoned you from and will not return until the gods themselves decree that it's Apocalypse time. But if you win, you all get a one-way trip straight to Earth to do whatever the fuck you want.\"\n\n\"Heh. You assume you can challenge us to a game you can win?\" War flexed his massive chest. \"What game?\"\n\nBeth held up the Risk box.\n\n\"I'm not playing a fucking board game!\" War tossed his sword onto the ground and groaned. \"I demand a real challenge! I want my heart to race, to feel the blood of my enemies splash against my skin, to see the dying light fade from their eyes! You don't get that from a board game!\"\n\nShe took a deep breath, then let it out. This had been an expected reaction, and she was properly prepared. \"What if I told you that you could have all those things with this game?\"\n\nWar rolled his eyes. \"It's a cardboard box full of paper and plastic. Maybe, if things get really exciting, someone will choke to death on a piece.\"\n\nBeth looked up at Mehkhkahrel. She hated looking at Murray. \"As the mediator, it is your job to facilitate any sort of discussion or agreements we wish to pursue. Therefore, what I am about to suggest is dependent upon your abilities.\"\n\n\"I am listening,\" Murray replied.\n\n\"Some months back, I underwent an experience where myself and the people I live with were pulled into a board game much like this one.\" She shivered as a few memories immediately surfaced, but chased them away in case the angel was trying to read her mind. \"From our perspective, the game was real. In fact, our memories had been wiped and we were stuck in the roles assigned by the game. After multiple days, we finally beat the game, only to discover that we had been sitting around and playing it for about an hour in the real world. It was very similar to the Dreamscape in this manner.\"\n\nWhat she didn't say was that Jenny had taken over the game completely, filling the house with Eldritch horrors. While everyone had been trapped inside the game, Jenny had been able to move in and out of it at will while manipulating events from the outside. She had added pieces from other games, and shifted characters around for her own amusement. It had been a flare-up of the magic Jenny had absorbed from Yuki's emerald months past, one final blast of Jenny/Janey insanity that had led to the destruction of the game and a vow to never discuss the events that had occurred while inside it.\n\nShe definitely didn't need to bring up the fact that their memories had also been messed up. For most of the game, she had been under the firm belief that she was, in fact, Professor Plum.\n\n\"Why would I even care?\" asked War. \"What makes this game so special?\"\n\n\"It's a game of strategy. Here.\" Beth handed over the rules. \"We each command our own armies in hopes of achieving global domination--\"\n\n\"Ah!\" War snatched the rules and looked them over. \"Global domination, you say!\"\n\nFamine looked uncertain. \"You are challenging us, actual horsemen of the Apocalypse, to a game of global conquest?\"\n\n\"Six people can play. Since the three of you would be playing, we would get to have three players as well. Of course, this really only works if Mehkhkahrel is willing to essentially construct a parallel universe for us to destroy. The key to making this work, though, is that the board's condition determines what happens inside. We roll dice out here, but see soldiers slaughter each other in there.\"\n\nMurray's eyelid twitched. \"This could be arranged, if all parties agree to it. You would also have to agree to a set of rules.\"\n\nPestilence waved their hands around, and the air filled with buzzing.\n\n\"Good point. Who would your three players be?\" asked Famine. \"I assume our brother is one?\"\n\nDeath narrowed his eyes. \"I am no good with games. You know this.\"\n\n\"Who does that leave?\"\n\nBeth hid the smile from her face as she pointed to Reggie. \"Our players will be me, the rat, and Jenny.\" She held up the doll for everyone to see. \"These two have played more board games than anyone else and are quite good at it.\"\n\nWar laughed so hard that the others stepped away from him. Large tears formed in the corners of his eyes as he pointed at Beth.\n\n\"You challenge...us...with a rat and a child's toy?\" He held his belly and crouched down as if holding in his mirth. \"Oh, this is rich!\"\n\nReggie closed the distance between the two of them until he stood at War's feet. The horseman laughed again when the rat put his hands on his waist.\n\n\"I will have you know that I am no mere rat,\" Reggie declared. \"I am a king. You would be nothing without the greed of monarchs like myself. So if you think my diminutive stature is equivalent to my abilities, then you have already lost.\"\n\nPlay with me! Jenny's voice was distorted as if playing through an old speaker.\n\nWar wiped a tear from his cheek. \"I'm sorry, this is too much. I can't wait to crush all of you! So how do we do this?\"\n\n\"Simple. We agree on the rules first.\" Beth pulled them out. \"What happens out here translates to in there. You get to choose what your troops look like and how they act. You are free to make alliances. Whoever wins the game decides the fate of the world. It will be just like a real war.\"\n\nWar rolled his eyes. \"And that is why you will lose. While we are inside the game, it will feel real. The first time you see a man's skull explode, you'll forget how to play this game. You will freeze as we take everything from you, one by one. Your mind isn't strong enough, little girl. And once we are finished, we will do it on your planet, with everyone you've ever loved.\"\n\n\"All is fair in love and war. That's something that we can all agree on, yes?\"\n\nWar's smile faltered. It was almost as though he sensed the trap. He looked at his siblings, who both nodded their assent. With a shrug, he looked up at Mehkhkahrel.\n\n\"On behalf of my party, we agree to these terms.\"\n\nMurray's eyes flashed, and a large table appeared. The board was already set up, and thick chairs made of stone appeared. Runes burned themselves into the stone, and fiery symbols now glowed.\n\n\"Here.\" Beth handed Tick Tock to Death, who grabbed hold of the bag. \"Make sure nothing weird happens to us out here.\" She didn't want her body blindsided while her mind was inside the game.\n\n\"It's a little late for that,\" the Grim Reaper muttered. He held Tick Tock as if the mimic were dirty. \"This business is already weird enough. Also, one cannot wear a backpack properly in robes.\"\n\n\"You'll figure it out.\" Her palms were sweaty as she took her place at the table. Reggie sat on her left, and she set Jenny on her right. The mists swirled around Mehkhkahrel as if trying to consume the angel, and Murray's eyes drifted apart so that he wasn't looking at anyone in particular.\n\n\"You guys ready for family game night?\" she asked.\n\nReggie nodded, his eyes focused on the horsemen as they sat. Famine's big gut pressed against the table, so he had to sit further away. War's massive torso looked out of place as well, and he had the appearance of a meat dreidel that was ready to topple forward any moment. Only Pestilence fit into their seat, their hazmat suit sagging noticeably when they sat forward.\n\n\"Let's see what you've got,\" War sneered.\n\n\"And so, we begin,\" Murray declared, and a bright light enveloped the players. The world swirled violently around Beth and she felt like she was falling as the light took her. Terror filled her body, and she bit her lip to hold back a scream.\n\nShe hoped she hadn't just fucked everything up.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nI really hoped you enjoyed that! I love being able to put down words for you to read, so please don't forget to drop me some stars and help others find my story.\n\nNext chapter will heat up as Beth battles the horsemen for the fate of the world while Mike...goes for a walk in the woods with Abella. It'll be a different kind of heat.\n\nUntil next time! Stay awesome, be kind to each other, and eat yer damn veggies! They're good for you!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monstergirl harem",
        "native american mythology",
        "the clue incident",
        "mike loves soup",
        "family game night",
        "stopping the apocalypse",
        "jenny is going to cheat",
        "cooking with magic",
        "eggo shenanigans"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-71"
}