{
    "title": "There and Back Again Ch. 049-050",
    "pages": [
        "Chapter Forty-Nine: Untold story \n\nHe sprawled onto his back, and I curled up against his broad chest, pulling the covers up over us both. I was shivering slightly, uncertain whether it was just the chill or also the pent up arousal. Alistair rolled towards me, wrapping me in his arms. \n\n\"So that was...intense,\" he started. \n\nI laughed. \"That was sort of the point, yes.\" \n\n\"But I...we...why?\" \n\n\"Tonight was about you, love. I can only tell you how overwhelmingly attractive you are so many times; I thought, this time, that I'd prove it.\" \n\nHe blushed. \"It seemed more like it was about...you showing me who was in charge.\" \n\n\"Merely a side benefit, I promise.\" I grinned, and he chuckled. \n\n\"Well, you know that normally I have no trouble letting someone else lead. Especially someone so beautiful.\" He leaned in and kissed me, and I moaned. Yep, definitely the arousal, not the cold. He pulled away and grinned. \"You don't have to go to extraordinary lengths to get me to follow you.\" \n\nI smiled softly. \"You know, that's a load of crap. You're a lot more competent - and confidant - than you let on. You lead when you need to, and you're good at it.\" \n\nHis eyes crinkled in amusement at my Earth words. \"Don't tell anyone else that! Maker, they might try to get me to lead more often!\" I giggled. \"Speaking of, I've been incredibly selfish. And there's something I've wanted to try, if I may.\" \n\nI'd have responded, but his mouth closed over mine just as his hand weaved its way into my hair, and he shifted us so he lay on top of me, his knees between mine supporting most of his weight. I lifted my legs, bending both knees, expecting him to push forward and enter me; I hadn't checked, but if prior experience was anything to go by, he would be ready again. Instead, to my surprise, he released my mouth and began kissing his way down my jaw to my throat. I moaned softly, enjoying the attention but too over-stimulated already to need it. \n\nI wriggled my hips, brushing against his length. \"Please don't tease, just-\" \n\nHe interrupted me with a finger on my lips, and then went back to kissing his way down my neck. I expected him to linger at my breasts for a while - like most men I'd met, he seemed fascinated by those two little bumps - but this time after a few moments he continued further down to lick and kiss my flat stomach. My breath caught when I realised what he had planned. I tried to tell him he didn't need to do that, and he ignored me entirely. And then he pressed my thighs firmly out to the side, and I stopped talking as his mouth descended to my sex. \n\nI'd never seen anything as sexy in my life as Alistair, prone, my legs over his shoulders, his tongue out and lapping at the moisture dripping from my folds. It felt incredible, as he explored me more intimately, and I shrieked as he added two fingers into my canal as he licked me. I could feel one of his hands holding my writhing hips down, and I clung to it for dear life. He clamped his lips around my little button and sucked hard; white light exploded behind my eyelids as I came, chanting his name. \n\nAnd then he was in me, and I could taste myself on his lips as he kissed me, and I whimpered as he thrust furiously, prolonging my orgasm until I felt him spill inside me again. I clung to him and he held me as we both panted our recovery. \n\n\"Maker, at some point isn't this insatiable...need supposed to ease off?\" His face was pink, I wasn't sure if from exertion or embarrassment. \n\n\"Not yet, apparently.\" I grinned and kissed him softly, then cuddled into his side as we rearranged ourselves and fell asleep. \n\nThe next morning, I wasn't as stiff or sore, and I virtually scampered to the bathing room. Alistair groaned and rolled over, so I let him sleep. I knew my desire for daily bathing was considered strange, and it wasn't like Alistair stank or anything, so I could keep my weird issues to myself. I noticed for the first time that the tubs had a large drain underneath that led to some sort of pipe to drain the water without having to carry it out in buckets. It gave me ideas, and I decided if I was going to be able to stay in Ferelden, I was going to invent at least rudimentary plumbing. After the Blight. \n\nI dressed in my armour, for the first time since coming to Denerim, minus one bracer that I hoped to pick up at Wade's at some point. Breakfast was a quick affair of scones and porridge and jerky. Aedan was acting normally, even smiling and joking as Leli and Zev teased Alistair and me for keeping people awake again. I was relieved - I hadn't been looking forward to dealing with my brother's overprotective streak. Once we finished, Alistair, Aedan, Zevran and I headed out with Prince in tow. We agreed to meet Leli and Wynne at the Gnawed Noble for lunch, so the four of us had the morning to ourselves. It took us a bit to make our way to the market, avoiding other groups of armed people as much as possible, and then we were finally there. We wore full helmets, which I found totally uncomfortable, but it would have looked weird if the boys did and I didn't, so I sucked it up. \n\nWe were there early enough that it wasn't busy yet; we got a good chance to look around at the various merchants setting up shop. Alistair led us to where he thought he'd seen Gorim, and suddenly there he was. Red hair, thick braided beard, pissed off expression - yeah, that's him. We waited until another customer left, and then approached the dwarf's stall. There was a variety of weaponry and armour on display, and Aedan made a show of examining some of it. When Gorim caught sight of the four of us, his face clouded over and his scowl became huge. \n\n\"How many times do I have to tell you, I'm not 'hiring' any of you sodding nug-humpers. You'd better come back with more men if you intend to challenge that.\" He was hefting a rather large war axe as he spoke. He was strongly favouring one leg as he stood there, but he still looked menacing with the weapon in his hand. I'd sort of forgotten he was a warrior; there was no question he knew what to do with the heavy axe. \n\nI winced; it hadn't occurred to me what four armed and armoured people approaching him would look like under these circumstances. I stepped forward and reached up to take off my helmet; Alistair put his hand on my shoulder, and I saw Aedan tense, but it wasn't as though anyone in Denerim knew who I was. I gave them reassuring smiles and turned back. \n\n\"You misunderstand, ser. We are not mercenaries. We are not here collecting coin.\" \n\nHe looked skeptical, but gave me a big, false smile. \"Well in that case, what are you interested in, milady? I've got dwarven arms and armour, straight from Orzammar.\" \n\n\"I'm sure we will take a look, but listen, we aren't here for that.\" I glanced around, making sure no one seemed to be watching; the three men all chose random display items to appear to be examining. I lowered my voice. \"I know who you are, Gorim. And I know why you left Orzammar. These men are Grey Wardens, and I was hoping we could talk to you about the...situation, in Orzammar. Things have changed since you left. Endrin is dead, and the Assembly are dead-locked between Bhelen and Harrowmont. I was hoping you could offer us some insight into the politics we will be walking into when we go there.\" \n\nI couldn't miss the flash of hope that crossed his face when I mentioned the Wardens, but it was quickly covered by skepticism and despair. \n\n\"Grey Wardens, you say? Rumour is, they're the ones who betrayed the King. I have a hard time believing they'd advertise their presence here.\" \n\nI heard Aedan and Alistair shift, and quickly gestured them down. \n\n\"I know, Gorim. There's only a couple of them left, though, and they need all the help they can get. And think about it. You know more about Wardens than any Fereldan - would they actually betray a King, let the darkspawn win? Do you seriously believe that? We came to you because I told them you can be trusted.\" \n\n\"And how, exactly, do you know that? Maybe I'll turn you in myself for the bounty. I'm a surfacer now, I could use the coin.\" \n\n\"I don't believe it for a moment. You may have left Orzammar, but you haven't abandoned your honour. Sereda believed in you, and so do I, Gorim.\" \n\nHis face coloured at the mention of Sereda. \"You know nothing, human. You-\" \n\nI cut him off. \"I know she loved you. I know you tried to sway the decision to have her sent to the Deep Roads. I know you'd have gone to the Deep Roads with her, if they'd have let you. I know that they may be able to take you away from the stone, but they can't take the stone away from you all the same. And if you cared about her at all, you would want to tell us anything you could to prevent that traitor, Bhelen, from ascending the throne, and help us keep Orzammar strong with Harrowmont, unless you have a better idea? Orzammar needs you. I think she'd want you to help us.\" \n\nHe stared at me for a while, then switched his gaze to the armoured men with me. I don't know what he thought he'd see with them in full helmets, but he spent a few moments on each. Finally he returned to me. \n\n\"You sure you're a Grey Warden? Should have been a Deshyr. Maybe they'd make you Queen if you asked them nice enough.\" \n\nI laughed, and he cracked a small, brief but genuine smile. \"I'm not. They are. I guess I'm a...helper.\" \n\n\"I will talk to you. But not here. I have a house in this district. I'll give you directions. Come for supper; my wife will want to hear this.\" \n\nI was stunned - wife? I'd never finished the game as a dwarf, so I supposed maybe if I'd played the Aeducan I'd have known that, but...wife? I thought he loved Sereda? I shook my head. Well I'm going to assume he isn't coming with us to Orzammar, then...I hoped he would have some information of use, regardless. \n\nHe and Aedan discussed directions and time - I had enough trouble figuring out morning or afternoon, nevermind specifics. And Aedan at least generally knew his way around Denerim. Once satisfied, he bought me a new dagger from Gorim's stock, as an excuse for us spending so much time standing there, and then we left. \n\nIt was still early, so we dropped into Wade's shop and picked up our repaired and newly made armour. Wade preened under the effusive praise as Aedan, Zev, and Alistair put on their new, fancy armour, and I had to admit it all looked quite impressive. Aedan paid for the spare pants for Leli, deciding just to let her keep them rather than have to bring them back later; I allowed the newly adjusted straps to be fitted onto my chest piece, and laced my bracer back into place. \n\nWade again refused pay for the work he'd done, though while he was adjusting Alistair's armour I noticed that Aedan had disappeared briefly. I guessed that the couple would find some gold tucked some place interesting later, and I grinned at Aedan when he returned. Gifting Wade Aedan's and Zevran's old armour, we took our leave to meet Wynne and Leliana at the Gnawed Noble. \n\nAs we walked across the market, I asked. \"Aedan? How do you even know what time it is?\" \n\nHe stopped and looked at me. \"The sun? And the bells from the Chantry. How do you figure it out, back home?\" \n\n\"We had watches. And phones. And clocks. They were-\" \n\nHe cut me off. \"Machines. Right, should have known.\" He grinned and I laughed. \n\nWe entered the Gnawed Noble, Aedan arranging a private room for us to eat lunch, so they could all take their helmets off without risk. The food, while good, was no better than that at the Pearl. Once we were done, we all geared up and headed out. \n\nThe plan was for Alistair and Prince to go in first, with Aedan and Zev stealthing in on his heels, followed by Leli and Wynne, and me at the back, staying out of sight as much as possible. Alistair and I agreed that he'd take the mage on the right and I'd take the left, assuming there were actually two. We waited around the corner as Aedan watched the guards, until he saw the one leave to go get food for the others, and we moved fast once he motioned us forward. He incapacitated the one guard standing outside, and then we were in. \n\nThe fighting was bloody, and as much as I was bothered by it, I made myself watch. I could probably have talked Leliana out of coming here, if I'd tried; I knew this had to be done, but I deserved to have to live with the consequences of that decision. And I couldn't afford to be caught by surprise and injured, or Aedan would try to lock me in a bubble somewhere afterwards. There were a couple of fights before we reached Marjolaine, and by the slight widening of the dark-haired woman's eyes, she hadn't missed the fresh blood dripping off of our weapons when we entered. \n\nShe had the expected conversation with Leli, though I was pleased to note Leliana seemed more confidant when she spoke than she had in game. Leli refused to accept anything Marjolaine said, and so of course there was no way out but a fight. \n\nI felt vindicated when a couple of mages joined, and quickly neutralized the mana of the one on the left, while I felt Alistair do the same on the right. I used the mana to put shields on my friends, so Wynne didn't even need to heal. I had hoped that some of the mercenaries would surrender once Marjolaine died, and I wasn't disappointed. Aedan pulled them aside, had some quick words, then sent them on their way. I assumed he was threatening them to prevent them from joining the gangs that now seemed to be running much of the city. \n\nThe mages, on the other hand, would not submit even with no mana and held at sword-point. They feared we would turn them over to the Chantry, and claimed they'd rather die than become Tranquil, which I could understand. Truly, I was torn - as much as I abhorred how mages were treated in Thedas, a couple of mercenary, possible blood mages running free didn't sit well either. In the end, Aedan was forced to kill them, and I could see from his expression that he didn't enjoy it. Leliana took off, heading back to the Pearl, and Wynne went with her; the rest of us looted the various items of value from Marjolaine's house and followed them. \n\nAfter we had all cleaned up - Alistair and I bathing separately so as to save time - Aedan, Alistair, Zev and I geared back up and headed out to Gorim's. Wynne decided to accompany us, so Leliana came as well. The house we came to was small but immaculately well-kept, with flowers in boxes by the front door, the wood obviously freshly painted. Aedan knocked, and the tiniest person I had ever seen answered the door. It was a child, a dwarven child, and the little one was close to the size of a human toddler, though by his speech he must have been at least five. Although it occurred to me I had absolutely no idea how long dwarves lived or how fast they matured, so I couldn't be sure of that. A young, pretty, vastly pregnant dwarven woman came up behind him, obviously his mother based on the family resemblance. She spoke softly, welcoming us in, but her eyes got rather large when she spotted Prince; Aedan asked him to stay outside, and he whined but settle down on the doorstep. \n\nShe introduced herself as Riana. She had no facial tattoo, I noticed, so she hadn't been casteless at any point. She had long brown hair, tied loosely into a bun, and had she been human I'd have put her age in her late twenties. We all took off our helmets, leaving them near the door, and she brought us into the kitchen, which had a long low table capable of accommodating probably ten people, and offered us drinks, which no one accepted. \n\nThe house was homey, and the smell from the oven heavenly. The little one, whose name was Revan, climbed under the table with some wooden toys, much to my amusement and his mother's dismay. I wondered where his father was - I knew it couldn't be Gorim, he'd only been on the surface for months - but thought it would probably be rude to ask. \n\nRiana told us that Gorim was out back, in a work shed, helping her father who was the smith that made many of the items Gorim sold. She expected him back in the house soon, and so we all settled for a few minutes, making awkward small talk. From what I was able to gather, without asking too many questions, there was no way that the babe she carried was actually Gorim's; she was too close to delivery, unless dwarves had a much shorter pregnancy than humans. Wynne asked permission to check on the baby, which she granted, and Wynne declared that she was a healthy baby girl. \n\nShe seemed very respectful towards Aedan and Alistair, a bit in awe of meeting actual Grey Wardens (or maybe of their height, I giggled to myself). She was a bit confused by Zevran, Leliana, and me, but didn't ask. Revan kept it from getting awkward with adorable comments and questions, including comparing himself in size to Alistair's boot. We were all in stitches when Gorim entered, looking at us all in confusion. \n\nHe smiled fondly at the little boy, and went around to sit beside his wife. I noted he had a slight limp, and wondered what that was all about. His wife smiled brilliantly at him, and he placed his hand on her shoulder. It was a sweet gesture, and I smiled as Alistair mimicked him, and then giggled as Aedan did the same to Zevran. We repeated the introductions, and Gorim gave both Grey Wardens a long, judging once-over. He seemed to approve, nodding to himself and relaxing slightly. \n\nRiana stood up and served dinner, some sort of roast meat with potatoes. I didn't ask what the meat was, and no one said; Alistair did give me a strange look when I ate it, so I guessed it was something I normally wouldn't have. It didn't taste bad, however, and as long as everyone kept quiet, I figured I'd be okay. We all dug in, thanking Riana heartily for the meal. \n\n\"So. You're the last Grey Wardens, I hear.\" \n\nAedan nodded, swallowing his mouthful. \"We have been gathering an army to defeat the darkspawn, before the blight takes over Ferelden.\" \n\nGorim turned to me. \"And so who are you, exactly?\" \n\nI gestured at Aedan. \"His sister. I'm trying to help them. But I'm also...I guess the best word for it would be a seer.\" \n\n\"As in, can see the future?\" He scoffed. \"I doubt that.\" \n\n\"Not exactly. More like...I can see certain possible future options, based on what's happened already. It's limited, I only know about certain things, but what I know will happen unless we do something to change it.\" \n\nHe snorted. \"If the future could have been changed, why wouldn't you have stopped the massacre at Ostagar?\" \n\nI flushed guiltily. \"I would have if I could. I couldn't get there fast enough.\" Alistair squeezed my shoulder gently, and I leaned into him a bit. \"I did what I could - I slowed down the advance so some of the vanguard could escape. If I'd been able to arrive the day before...but I couldn't, and I can't go back in time.\" \n\nHe still looked skeptical. I couldn't blame him; it sounded insane, even to me, and I was living it. \n\n\"Look, maybe I can help. Why don't I start by telling you what I know about you? Then you can decide if I'm crazy.\" I smiled, and he laughed softly. \n\n\"You've got confidence, I'll give you that. Go ahead, I'm listening.\" \n\nNow that he was staring at me expectantly, I felt a little nervous. What's the worst that could happen? I cleared my throat. \n\n\"You were a warrior in Orzammar, and Sereda Aeducan's second. Sereda was the middle child of Endrin, King of Orzammar. Sereda had two brothers, Trian and Bhelen. Trian was a self-important idiot who was jealous of Sereda's popularity. Bhelen always seemed like a nice younger brother. There was a Proving in Sereda's honour, and then you were supposed to accompany her into the Deep Roads the following day. She was supposed to lead you into Aeducan Thaig to reclaim the Shield of Aeducan.\" ",
        "Gorim started at the mention of the secret, last minute mission they had been assigned. \n\n\"Before you left, Bhelen came and told her Trian was plotting to assassinate her. I don't know if she agreed to kill him first, or whether she decided to wait and see.\" I paused, looking at him for a response. \n\nHis face reddened. \"She would never attack her brother.\" \n\n\"Right. In that case, when you got to the Aeducan Thaig, you were attacked by some mercenaries who had Trian's ring. And then you found his body. Bhelen had him killed, and brought Endrin and Harrowmont in just in time to see her discover the body. The scouts with you had been bribed or blackmailed, and told the King that you and Sereda killed Trian. You were both arrested. Bhelen had also bribed and blackmailed the Deshyrs into supporting him, and he had a vote brought to exile Sereda to the Deep Roads. Her father didn't even try to stop it. You were sent to the surface, and she was sent to her death.\" \n\nHis expression was thoughtful, and I wanted to see what he would say. He waited while Riana cleared plates; Leliana jumped up to help, and I shot her a grateful smile. \n\n\"How do you know?\" \n\n\"That's a long story. I'm not from here - Thedas, I mean. Where I'm from...what happened in Orzammar is common knowledge. As is what happened next. After you left, Bhelen poisoned Endrin, we think. The King had named lord Harrowmont as his successor before he died. Now the assembly is deadlocked between Bhelen and Harrowmont. When we travel there, both of them will try to use the Grey Wardens to support them, eventually forcing us into the Deep Roads to try to find Paragon Branka. I was hoping you could offer some...insight, maybe, or help with navigating the politics. Or a solution to the dilemma, because neither of them will make a good King.\" I paused, looking at Gorim curiously. \"What isn't known is how you escaped, and why you ended up here.\" Or at least, I don't know. Maybe the Aeducan origin would have, but... \n\nHe looked uncomfortable, and I wondered why. After a couple of moments, Riana gave him a nudge, and when he looked at her, a nod. He had a sad smile on his face, and she looked close to tears. \n\nHe sighed. \"I was exiled from Orzammar, and escorted to the surface by the guards. Some of Bhelen's 'friends' were waiting for me, and tried to kill me. I escaped, but I was injured in the process. Riana and her father were on the surface trading with Orzammar, and she found me and nursed me back to health. They concealed me in their wagon and got me away, and the next thing I remember, we were halfway here.\" \n\nWynne asked permission, before examining Gorim; she did something, and some of the tension around his eyes lessened. His eyes widened and his thanks were effusive. \n\n\"It won't be perfect - it's been that way for too long - but if you exercise it, it should improve with time.\" \n\nRiana poked Gorim again, irritated now. \"That's not the whole story, Gorim. Now tell the rest.\" \n\nHe grimaced at her, but she didn't back down. He gripped her shoulder and sighed, before turning back. \n\n\"I think I have some information that could be useful to you. Because the truth is, when I left Orzammar I was coming here anyway, to find the Grey Wardens. I believe...Sereda may be alive.\" \n\nChapter Fifty: Choose and Lose \n\nMy absolutely gobsmacked expression must have amused him, and he snorted. \"I know. Sounds impossible, right?\" \n\nAedan barked a laugh. \"No more so than a seer from another world, who happens to be my long-lost sister.\" \n\nGorim smiled grimly and continued. \"She was sent into the Deep Roads. The thing is, Sereda was always fascinated by the Legion.\" \n\nAedan and Alistair both looked confused, so I clarified. \"Legion of the Dead?\" When Gorim nodded, I explained. \"When someone joins the Legion, they are declared legally dead. They have a funeral, even, and then they go into the Deep Roads to spend the rest of their existence fighting the darkspawn. It's a way to regain honour for your house if you've done something shameful or whatever. They don't have to be afraid to fight to the death, because they're already dead.\" \n\nGorim nodded. \"Sereda spent hours in the Shaperate learning everything she could about them. She made a point of being there any time a patrol came back to Orzammar to pepper them with questions. When Endrin saw her interest, he assigned them to her to organise, so she became involved with figuring out their patrol routes, supply stations, and where the next front should be. They reported directly to her. She had copies of all their maps with the new tunnels and cave-ins marked, though she didn't need them - she had them memorised.\" \n\nI interrupted. \"You think she found the Legion and joined them.\" \n\nHe nodded. \"It's possible. She could also just be living off their supplies in hiding - she knows where their caches all are, and enough about the Deep Roads to survive. I managed to get the copies of their maps from her room before my exile, and smuggled them out with me. I wanted to come to Denerim, find the Grey Wardens, and convince them to launch an expedition into the Deep Roads to rescue her. I figured I could convince them that she would make a good recruit, and I would volunteer as well. But by the time I got here, the Grey Wardens had all gone to Ostagar, and then...well, you know what happened there.\" \n\nWe all winced and nodded, everyone lost in their own thoughts on the subject. Finally he cleared his throat and continued. \n\n\"After that, I lost hope. I couldn't convince anyone else to go after her, and with all the Wardens dead...I figured I had better make a life for myself, somehow. I owed Riana and her father, and began working for them so he could spend more time smithing and less time selling.\" \n\nRiana reached up to squeeze his hand, but avoided eye-contact with him. \"You're really going into the Deep Roads anyway?\" \n\nI nodded. \"We have to go to Bownammar. And there is even a detachment of the Legion near there.\" \n\nShe thought for a moment and then asked, \"Why do they both make poor Kings?\" \n\nSurprised, I considered. \"Bhelen is just too dishonourable. He will be a strong King, and make needed changes in Orzammar, such as letting the casteless work, but he won't take any criticism from anyone, and he killed his brother, his father, and possibly his sister, to get to the throne. Not the kind of person who I think should be in power. And Harrowmont is the exact opposite in every way. He's honourable, but he will be a weak King, with not enough support to get anything done. He is against any sort of progress, and let's face it, the traditional ways aren't working. The number of dwarves is shrinking every year, and Orzammar is more and more threatened by the darkspawn - things need to change, or dwarves are going to be an endangered species.\" \n\nRiana examined my face critically for a moment, and then stood. She left the room, while we all waited quietly, and after a couple of minutes, she came back. On her return, her arms were full of things. She carried a sword, a large round shield, and a pile of papers. She settled the papers in front of Aedan, and I saw that they were maps. The sword and shield she placed, deliberately, right in front of Gorim. \n\n\"You will need these when you go.\" \n\nWe all jumped in surprise. Gorim spoke, almost a shout really. \"I'm not going anywhere, Ri.\" \n\nShe smiled sadly; reaching out, she lifted his hand and placed the pommel of the sword in it. \"You think I don't hear you cry out for her in your sleep? I love you, Gorim Saelac, enough to know that you need this. You need to know, with total certainty, whether she is alive. The Wardens need you to lead them to her, and to their destination. And Orzammar needs you to find her. I may have been born a surfacer, but that doesn't mean I want to see an incompetent or an evil King ruling my Ancestors' city. And I need to know,\" she swallowed, face scrunched in pain, \"that if I see you again, it's because you want to be here. I hate that you settled. I'd rather be alone than have you stay out of obligation.\" \n\nHe dropped the sword like it bit him, and jumped up, reaching his arms out to her. She held up one hand, and I could see steely determination in her eyes. He saw it too; his shoulders slumped. Revan started to cry, confused by what was going on, and when I reached down he crawled into my arms without hesitation. I cuddled his tiny shaking body to me, watching Gorim wide-eyed. \n\nRiana stepped up to him, taking his face between her hands. \"Go. Find her, save Orzammar, end the blight. And when that is all done, be with her if you can. If she's...gone, come back. We will be here.\" \n\nI stood, offering the little dwarf to his mother; he wrapped his arms around her neck and cried. \n\n\"Why don't...why don't we just go outside, and leave you alone for a bit?\" I offered. \n\nGorim shot me a grateful look as we all shuffled out; the last thing I saw was him reaching out to pull both of them into his arms. \n\nWe all put on our helmets before going outside, then spent an awkward few minutes standing around silently. Eventually, Wynne and Leliana decided to head back to the Pearl, and Zev and Prince accompanied them. It was after dark, and the thought of two women, armoured or not, wandering through the city alone didn't sit well with any of us. \n\nAlistair and I stood, leaning against the wall of the house. Aedan gestured at us to stay, and then took off, fading into the shadows. I exchanged glances with Alistair, and he shrugged; neither of us had any idea what Aedan was up to. \n\nWe waited probably fifteen minutes before Aedan reappeared. But he wasn't alone; two large, burly men in armour and carrying heavy mauls followed him. He gestured at the house, and one of the men came to stand near us, not saying a word, while the other followed Aedan around back. I looked at the one near me, and realised - he was one of Marjolaine's goons, one of the ones we let go earlier. Too shocked to do anything but stare, I didn't even ask him what was going on. \n\nAedan came back around the corner, now alone. I tilted my head, but before I got an explanation, the door opened and Gorim stepped out. He was armoured, with his sword and shield strapped firmly to his back. He had a heavy-looking backpack over one shoulder. He looked surprised to see only the three of us plus one mercenary. Aedan finally explained. \n\n\"If I'm going to be taking you away from here, I'm damn well making sure they're safe. Especially with everything happening in the city right now. These guys owe me a favour. There will be one here and one with Riana any time she leaves the house, at least until this all blows over.\" \n\nGorim appeared somewhat overcome with emotion, but grateful. I squeezed Aedan's hand in appreciation. He nodded to the mercenary, and then took the lead, heading us back towards the Pearl. I fell in step beside Gorim, with Alistair following. \n\nI spoke quietly. \"You didn't have to leave tonight. We will be in Denerim for a few more days...\" \n\nHe shook his head. \"That would have been worse. Good-byes are hard enough, never mind dragging them out for days.\" \n\n\"Good point. Sorry.\" \n\nHe shrugged, and I stopped talking. We walked in silence all the way back to the Pearl. Inside, Aedan secured a room for Gorim, and we all headed upstairs. Gorim headed to his own room before we could even offer moral support, and so Alistair and I joined Aedan and Zev for a nightcap. \n\nWe were all still in shock that Gorim was coming with us. I had to blink back tears when I thought too much about how Riana must be coping. None of it was fair. We also discussed the possibility of Sereda being alive. Even assuming she was, I wasn't sure that she'd be accepted as Queen, but even the possibility was a darn sight better than putting that bastard Bhelen on the throne. I wondered if she had managed to find the Legion, and if Kardol would know once we found Bownammar. \n\nI slipped into my room and brought the letters that I'd written - to Varric and Nathaniel Howe - to show to Aedan and Zevran. I explained the history of Hawke and the events of DA2, again without mentioning that Anders was the mage to initiate the war. For some reason that I couldn't explain, I wanted to protect Anders, even from himself; and given that I planned to stop him from merging with Justice, it didn't seem like it was a secret worth telling. \n\nAedan was still upset at the idea of me contacting Nate, but he had calmed since the first time we had discussed it. He agreed to hold off judgement until the Blight was ended, which was all I could ask. I knew it would be fine after that - Aedan wasn't an ass, and Nate would come to understand what his father had done eventually. Aedan finally, reluctantly agreed that I should attempt to have my letters delivered. \n\nAlistair and I went to bed, and made love until we both collapsed, exhausted, and slept. I woke once, in the night, when Alistair began having a nightmare; I couldn't wake him, but I held him as he thrashed and groaned, and kissed his face and whispered comforting words until he seemed to slip into a different sort of dream. He whispered my name in that low, sexy voice he got when he was aroused, and suddenly I could feel him harden against my hip. He rolled me over, pulling my hips up to meet him as he drove himself into me, reaching around to caress my clit until I came, shuddering. I think he truly woke just as he released inside me; the strangled moan sounded less dream-like than he'd been up until that point, and the last sight I had, before I drifted off, was of his face, confused. I think I giggled. And then I slept. \n\nWhen I woke in the morning, he was lying beside me, absently stroking my hair and watching my face. I smiled and rolled towards him, and he wrapped his arms around me. I inhaled deeply, smelling sweat and man and sex, and it lit a spark inside me somewhere. I really am a pervert. I kissed his shoulder where my face was pressed, and then felt more than heard him hiss as I lightly licked the soft skin. He tasted salty. \n\n\"So, um, love?\" \n\nI hummed in recognition of his question, but didn't stop my ministrations. \n\n\"I think...I need to ask you something.\" \n\nI hummed again. \n\n\"Last night, did we...in the middle of the night, did we...?\" \n\nI looked up, mischievous grin on my face. \"Did we...what?\" \n\n\"You know.\" \n\n\"I might, but then again, I might not. You need to be more specific, love.\" I grazed his shoulder with my teeth, and he sucked in a breath. \n\n\"You are a wicked, wicked woman, you know that?\" \n\nI hummed again, and then chuckled as he finally stammered, \"Did we...have...sex?\" \n\nHe whispered the last word, and I finally cracked up laughing. Despite his embarrassment, I could feel his erection poking my thigh. He might claim to be the innocent virgin, but his body's just as wicked as the next guy. I looked up again. \n\n\"Well, I'd prefer to call it making love, but we sure did, handsome. And it was...mmm.\" I licked my lips, and noticed his gaze focused there. \"You don't remember?\" \n\n\"I think I might have been asleep. In fact, you're a bad person, taking advantage of a fellow while he's sleeping!\" \n\nHis expression was amused, so I wasn't actually concerned. I pretended to think about his complaint for a minute, then replied. \n\n\"You didn't seem to mind it when you rolled me over and took me until I screamed your name...\" \n\nHe blushed even more, and I giggled. I reached down to brush my fingers against his hard length, and he hissed and pressed into my hand slightly. \n\n\"Want to do it again?\" \n\nWhen we finally finished, sated and smug and just a bit tired, we cleaned ourselves up in a basin and headed down to the dining room. Everyone else was already there, and had already eaten; I ended up running downstairs to ask Sanga for two more servings. It suddenly occurred to me to wonder when she slept - I had never been down to the main room without her standing there, whether the middle of the night or first thing in the morning. I didn't ask, and she smiled and nodded when I held up two fingers. \n\nWhen I got back to the dining room, poor Alistair was being teased mercilessly for all the noise we'd made during the night. Even Wynne had surfaced from her book to join in. \n\nImpishly, I sat beside him and grinned. \"He hasn't even told you the best part.\" \n\nSix sets of eyes fixed on me, Alistair's pleading, Aedan's mortified, the others curious and amused. I squeezed Alistair's hand gently. \n\n\"He wasn't even awake for most of it.\" \n\nThey broke out laughing, but I noticed Zevran and even Leliana giving Alistair second looks; I could practically hear the approval rating increase, and I giggled. \n\nI finally bid good morning to Gorim, who smiled at me somewhat sadly. As Alistair and I ate, Aedan outlined the plan for the day. \n\n\"Alright, we still need a couple of days in town to finish the jobs for the Chanter's Board and the Irregulars. Master Wade was finished early, but I'd like a bit more coin in our treasury before we leave Denerim.\" \n\nWe'd discussed that between Alistair, Aedan, and I, we had about eighty sovereigns; a huge fortune, by Thedas standards, but given that we'd need to outfit an army, eventually, every coin counted. Aedan had been purposefully vague on what exactly they were doing for the money, and it was driving me crazy. \n\nAedan continued. \"Gorim, you're free to join us or stay here. You signed on for a specific purpose, but if you want to bash a few heads, you're certainly welcome.\" \n\nGorim appeared to consider, finally agreeing to accompany Aedan and the rest. \n\n\"Sierra...\" Aedan turned to me, expression carefully blank, but I knew what that meant. \n\n\"You want me to stay here.\" \n\nHe came over and took my hand. \"We aren't going to run into many mages, and these aren't darkspawn. I know what you're trying to do, and I respect that; really I do. But this isn't your fight, okay? Please. Stay here.\" \n\nI looked into his eyes, and saw only concern. I knew he didn't want me doing to myself what the rest had been forced to, killing others even if it was a necessity. I knew he was trying to maintain my innocence. And I was far too relieved to refuse the olive branch. I flushed, feeling ashamed, but finally nodded, a death grip on his hand. \n\nI gave Leliana ten sovereigns, and my letters, sealed with wax imprinted with the rose pendant Alistair had given me. It wasn't a signet ring, but it was distinctive, and it would do. She promised to have my letters in the hands of reliable couriers before the end of the day. \n\nThey all geared up, and I was left behind. I decided to go back to bed, catching up on some of the sleep I'd missed over the previous few nights with Alistair. I still envied the Grey Warden stamina. I crawled into the bed we shared, curling up on his side. The pillow smelled like him, and to my surprise I easily drifted off. \n\nI spent an anxious three days around the Pearl, torn between boredom and fear for my family. They had all apparently agreed not to tell me what they were doing - any objections that I was not that fragile went completely ignored - and even with puppy-dog eyes, Alistair wouldn't tell me. So I stayed at the Pearl and slept and worried. Every time they came back - exhausted, filthy, sometimes covered in blood - I clung to my brother and my lover, afraid I might never see them again. \n\nWhen Aedan announced, that third night, that we were taking one more day to rest and relax, and then leaving Denerim, I was so relieved I jumped up and kissed his cheek. He laughed at me. \n\n\"It's almost like you miss sleeping on the ground in the cold, little sister. I wouldn't have thought the bed would be something you'd be so keen to leave behind.\" \n\nI grinned ruefully; truthfully I hadn't thought about going back to camp, and I wasn't sure what it would mean for my newfound sex life, but if it meant not having to watch everyone leave me in the morning and fear they wouldn't come back, I would manage. ",
        "Alistair dragged me off to help him bathe, and then we spent close to an hour soaking, relaxing, and making love in the tub. We were late for dinner, ate quickly, and raced back to our room to pick up where we had left off in the bath, much to everyone's amusement. The next morning we didn't come up for air until noon, when Alistair's Grey Warden appetite finally wouldn't allow us to wait any longer. \n\nWe spent the afternoon playing cards and relaxing with our friends. I taught them hearts and poker, and they tried to teach me wicked grace, though I remained terrible at it. Alistair was quite good, to my surprise; we played for coppers, and I was soon out but his pile was quite large. Who knew? The boy can bluff. \n\nThe one who really surprised me, though, was Aedan; contrary to the first evening we had spent in Denerim, it seemed he was a card shark. I had expected Zevran to be good, but Aedan was much, much better. I narrowed my eyes as I watched him win hand after hand - how had he been doing so poorly against Isabela? Did he lose on purpose? I shook my head, not sure I wanted to know. It was sort of like his lock-picking ability; it never occurred to me that a noble's son from Highever should know how to pick locks or play cards, but he made Zev look like an amateur. And he refused to say how he had learned. \n\nBy supper, everyone refused to play any more wicked grace with him, and after our meal we scattered to our own rooms to enjoy one last evening in a bed. The next day we would stop in the market for supplies, and then head out of town to meet up with Morrigan, Sten, Shale, and Dariel. I realised I was out of time, and snagged Aedan and Alistair, dragging them into the room Alistair and I shared to talk about Morrigan. The boys both looked at me curiously as I ran my fingers through my hair and tried to think of how to begin. \n\n\"You know how, when we met, I told you that many of our party had secrets and that I would not share them with the group if they weren't mine to tell?\" They both nodded, so I continued. \"I am going to violate that rule, but you both need to promise not to freak out about what I'm going to tell you.\" \n\nThey both chuckled over my Earth terminology, and I grinned weakly. \"Yeah, yeah. Do you promise?\" They nodded again. \n\n\"Alright, so Tomas told you...why it takes a Grey Warden to end the blight, right? And the cost of that?\" \n\nTheir smiles fell as they thought about one of them dying to end the Blight. \"In the performance, there are only three Grey Wardens. When Riordan warned you about a Grey Warden dying, Morrigan... offered you a solution. A ritual, done on the eve of battle. Blood magic, requiring one of you to have sex with her. She would conceive a child, and when the Archdemon was killed, the untainted soul of the Old God would instead inhabit the unborn child, saving the Warden's life. Giving Morrigan a baby with the soul - and presumably the power - of an untainted Old God.\" \n\nAlistair and Aedan exchanged glances, both sets of eyebrows furrowed. I couldn't read their expressions, but they weren't shouting, so I took it as a good sign. \"It's why Flemeth sent her with us. She wanted the child; I can only guess she wanted to possess it and become more powerful. In the performance, Morrigan took the baby and left Thedas, somehow, through an ancient relic from Arlathan. And Flemeth gets reconstituted, somewhere in the Free Marches, in a year or so.\" \n\nAedan finally spoke. \"And this ritual...worked? We both survived?\" \n\nI nodded. \"Alistair became King and you became the Warden Commander of Ferelden. Although, you could choose, in the performance, whether to do the ritual, and if you decided not to, one of you had to die.\" \n\nThey were both quiet as they processed. I watched their faces, trying not to fidget. Finally Alistair cleared his throat. \n\n\"Why didn't you tell us this before? And what made you tell us now?\" \n\n\"Before...well, it's still not really my secret to tell, nor is it my decision to make whether you go through the ritual or not. It seemed best to let Morrigan present it to you in her own time. But now...I don't know if you guys noticed the way Dariel looked at Morrigan?\" They both nodded. \"If you recruit him to the Grey Wardens, Morrigan may be able to convince him to perform the ritual with her, and you won't have any say in the decision. You won't get to choose.\" \n\nAedan spoke again. \"I don't even know what I'd choose. Maker, that's a horrible decision - die horribly, or spawn some sort of...creature, which will have who knows what sort of consequences for Thedas.\" \n\nI nodded. \"Exactly. Now, the fact that we will have a few more Wardens around helps, especially since if I were Riordan or Tomas, I'd rather die fighting the Archdemon than have to go on my Calling right after.\" \n\nAedan shook his head, then stood. \"Well, we will keep it in mind as we get closer to a decision with Dariel. If they seem too close... And I think we should talk about it with Tomas, too. We won't mention it to Morrigan, for now.\" Alistair and I nodded. \"On that note, I'm going to find myself a soft bed and make good use of it for our last night.\" \n\nAlistair blushed and I laughed; Aedan winked and disappeared into his room. When we made it to our room, we also made excellent use of the bed, but purposefully went to sleep early, for once."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-49-50"
}