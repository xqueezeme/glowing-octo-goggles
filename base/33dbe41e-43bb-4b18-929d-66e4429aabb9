{
    "title": "Secret Smiles and Three Little Words Pt. 12",
    "pages": [
        "Chapter 14*\n\nGavin kissed her goodbye and Alex and Elizabeth hugged.\n\n\"See you in four days,\" Elizabeth said to Alex. \"Enjoy him!\"\n\n\"Like I could do anything but!\" Alex smiled shaking her head. \"I've never been to New Orleans, so send me pics!\"\n\n\"I will,\" Elizabeth waved over her shoulder. Gavin draped his arm around Alex's shoulder and they waved at her as Elizabeth looked back from the gangway.\n\n\"I have a question for you,\" Alex said as they watched from the window.\n\n\"Uh-oh,\" he teased with a grin. She slapped his flat stomach for it. \n\nHe seemed to be in a very loose, and very good mood. Not that he was grumpy before, but before he seemed to be all business. Today, he seemed like he was on vacation. Gone was the dress suits, the tie. Now it was back to his designer jeans, and sneakers. Both of which still looked brand new but which he told her he owned for just about a year.\n\nIt told her that he rarely wore them. She wondered why that was. Was it because he was always so busy? Today he abandoned he suit for the casual dress. Why? Was it because Elizabeth was leaving? She doubted that. She figured it was because Pavel was coming to town and he was already getting ready for a good time with him. \n\nWhatever it was, she was enjoying it. He teased her and Elizabeth unmercifully all morning. His laughter was like it was on the phone last night. Easy to let out. He joked with her. First about the fact she was whining about waking up without him again. He mimicked her voice then told her to stop being a sleepy head and get up before noon.\n\n\"Well actually, I have a litany of questions, but there are two that are pressing on my mind right now,\" Alex said as the plane was moved out away from the terminal.\n\n\"Go,\" he encouraged.\n\n\"Do you think I'm bi-sexual?\" Alex turned to him.\n\n\"What do you think?\" he asked her with a chuckle, gently touching her face with a contented smile.\n\n\"I really enjoy Elizabeth,\" Alex told him with a half shrug.\n\n\"That doesn't make you bi-sexual,\" Gavin sighed. \"Look, don't let the puritans cloud your brain!\" She looked up to him for explanation. \n\n\"There was a time, in ancient Rome and Greece, where male on male and female on female was considered normal. You were able to do whatever pleased you, especially in the sexual realm. Somewhere on the way to becoming 'civilized' we decided to label everything and then judge whether it was good or bad.\"\n\nGavin turned her as the plane taxied away. They began to walk out of O'Hare airport, his arm still draped around her, hers around his hip.\n\n\"It used to be, if it felt good, do it,\" Gavin continued. \"Now, we have to judge if it is appropriate. We are the only country with all the sexual hang ups! The only country that will judge you for what you do behind closed doors. Be it the LBGT community, our lifestyle, or even those who just like to have sex. If you have it too little, you're a prude. Too much? You're a whore.\" \n\n\"So much for the land of the free! Now if you do something like what we do, you are labeled a deviate and shunned. Our lifestyle is about going back to our roots. Back to doing what brings us pleasure. Back to where, if it feels good, do it!\"\n\nAlex nodded as she thought about it.\n\n\"I guess I have a lot to learn,\" she admitted out loud.\n\n\"No,\" he smiled. \"You have a lot to experience!\"\n\nThey walked on as she enjoyed the moment of tenderness. His arm around her. Hers around him. Not quite what someone on the outside world would consider a Dom/sub relationship. If you would have asked her a few weeks ago, she would have thought it involved leather outfits and the woman walking head down a few feet behind the Dom. \n\nThis looked more like a burgeoning relationship. And it was, but it wouldn't have been her first thought, looking from the outside.\n\n\"Let me ask you this,\" he continued. \"Would it bother you to be bi-sexual?\" Alex looked to her feet as they walked in thought.\n\n\"No,\" she finally said. \"I mean, I don't mind the way I feel when I'm with Elizabeth, I love the feel of her softness. It feels different than a man's body. It's very erotic to look at. I've always enjoyed sketching or painting women. The soft features are very pleasing to the eye!\"\n\n\"Something tells me,\" Gavin said with a reassuring squeeze of her shoulders, \"that it's new and exciting. You're exploring something you have never had. Once the newness fades you will have a better idea. But there is nothing wrong with being bi-sexual. It was one of the things that alerted me to you being a switch.\"\n\nAlex looked up at him.\n\n\"Oh yes,\" he smiled. \"You will have to come to grips with that someday. You won't ever be truly satisfied unless you do.\"\n\n\"I want you,\" she said firmly, not wanting to go down this road again. \"You won't be a sub.\"\n\n\"I'm just saying, if you don't try it, you will always be left a little unsatisfied, then that alone may lead you to leave me anyway,\" he said carefully. Alex shook her head refusing to believe that.\n\n\"Ok, next question,\" he sighed, smiling at how easily she gets wound up on the subject of her moving on from him. \n\nIt was something new for him to deal with. He had never had a sub so dead set on having him be their Dom. All of his subs enjoyed him, but none were as possessive as this one. Deep down, when he would allow himself to admit it, he liked it. His other subs had been in the life, he surmised, so they knew the deal. This one hadn't been. She was still confused with what the defined roles were.\n\nBut for him, these relationships weren't about what he liked. Bringing pleasure to his subs is what he ultimately strove for. It was what brought him the most pleasure. The orgasms for sure. But he really enjoy taking them places they hadn't been. Having a complete novice was a new challenge, one he was embracing. One he had to sacrifice on. Sacrifice an absolute. Alex was worth it he was finding. He loved the way she dove in head first. Wanting it all, not later, but right now.\n\n\"Why doesn't Elizabeth like Pavel?\" She asked him.\n\n\"What makes you think she doesn't,\" he asked her with a grin.\n\n\"Seriously? Why are you playing dumb?\" Alex gasped.\n\n\"She doesn't like Pavel because he finds her shallow,\" Gavin smiled. \"And he told her so, to her face, rather bluntly.\"\n\n\"She works for an environmental lobby,\" Alex pointed out. \"She is trying to save the world.\"\n\n\"No, she isn't,\" Gavin laughed. \"She doesn't work for an environmental company, one that is trying to clean the environment or come up with a way to fix global warming. She works for a lobby, she works for politicians. She is in the politics of it. Money. Power. There is a lot of money to be had in lobbying. She is trying to gather some of that, and power. Which is why she is so hung up on Royce. She thinks he is going to be somebody. Somebody with power!\" He said sarcastically showing he disagreed.\n\n\"You know about that?\" Alex frowned. He looked down at her with a bemused smile. \n\n\"She wants what he can provide,\" Gavin shrugged. \"I just hope she is good at protecting herself.\"\n\n\"I'm sorry,\" Alex told him.\n\n\"For?\"\n\n\"Her foolishness,\" Alex shrugged.\n\n\"Again, it's all about desires,\" Gavin sighed. \"I would hope she would choose better but that is what she desires. I don't own her in that way. Once she decides to end it with me, I can only be there for her if she needs a friend. Once another Dom claims her, she is off limits. Just like she is now to anyone else. Just like you.\"\n\n\"I hate to tell you this,\" Alex drawled out slowly with a frown. \"But that thought makes me wet!\" This made him laugh and shake his head at her. Yeah, Alex was not a normal sub. It was definitely going to test him.\n\nAlex stood in front of the mirror putting the finishing touches on her mascara. Her blue eyes radiated in the light. She was trying to look her best, not just for Gavin. But for someone who was important to Gavin. She hoped she was as successful with Pavel, as she was Madelyn.\n\nGavin leaned against the door of the bathroom and watched her appreciatively.\n\n\"May I help you?\" Alex teased in the mirror.\n\n\"Let me count the ways!\" Gavin said with a wink.\n\n\"Am I dressed ok?\" she asked him leaning back from the mirror.\n\n\"Damn,\" was all he said. But it was the way he said it that told her she was.\n\nAlex looked down at herself, it was a simple black dress with spaghetti straps. It hung low on her, her cleavage provocatively available. The dress was short enough to stop mid-thigh, and the stockings were a perfect shade of black.\n\nAlex loved the fact that her undergarments made her feel sexier in the dress. She never was much a garter girl, but knowing that Gavin liked them, she made sure she bought plenty of different lingerie for him when they went shopping.\n\nShe would wear short heels tonight, not like the heels she wore at the party, those were much taller than she was comfortable in. She was also thinking of the fact that Pavel was not into shallow people. She wanted to dress nice, but not look like she was spending five hours trying to get ready. The three she was on right now would be enough. \n\nIt wouldn't have been that long if she could decide what look she wanted to present. Did she want to go elegant like Elizabeth, down home like she normally dressed, or something in between?\n\nIn between is what she went for, she wanted Pavel to realize that Gavin had a lady who could be classy. But she didn't want to look like she was a girl afraid to get her hands dirty either. She assumed this man was beyond upscale nonsense and was more about down to earth do gooders. But it didn't hurt to turn a few heads as well.\n\nThe way Gavin was looking at her was all the compliment she needed. Her mission was done.\n\n\"Are you wearing panties?\" Gavin asked her as she stood there applying a shade of lipstick to draw his attention to her lips. He was staring intently at her ass. He lifted his eyes and looked at her in the mirror. She slowly shook her head with a wicked smile.\n\n\"Ouch,\" he smiled. \"Be careful, or I will have to use our safe words myself!\"\n\nGavin and Alex entered the restaurant. They were barely in the door when Gavin was accosted by a tall thin man with brown hair and grey tints. His deep, dark tan told Alex he spent a lot of time in the sun. His skin showing the damage the sun can do, with sun spots and a leathery look to his skin.\n\n\"Gav you old dog!\" the man bellowed picking him up from behind. Gavin burst into laughter as he pushed at the hands around his waist.\n\n\"Pavy put me down or the people here will think we are lovers!\" Gavin teased.\n\n\"Dumping me after all these years?\" Pavel raged, dropping him causing Gavin to laugh heartily. \"For this trollop?\" Pavel continued loudly drawing stares from the uppity crowd, as he looked to Alex with a wink.\n\n\"Well what did you expect? You disappear on me for a year at a time, a man needs tender touch!\" Gavin said as loudly causing Alex's mouth to drop that he would participate in this raucous comedy. He had been so reserved! \n\nPavel took him in an embrace warmly.\n\n\"God you look good,\" Pavel said with a normal tone.\n\n\"I know,\" Gavin agreed. \"You look alive, thank Christ. When I heard the war had spilled over into your province again...I was scared shitless!\"\n\n\"How do you think I felt?\" Pavel returned. He drifted his eyes to Alex. \"Wow.\" He smiled at Gavin.\n\n\"Pavy,\" Gavin backed up and reached for Alex who took his hand. \"This stunning young lady is Alex.\" Gavin said introducing them with a broad smile. \"Alex, this is Pavel...don't believe anything he says.\"\n\nAlex furrowed her brow slightly at the way Gavin introduced her. Alex? She didn't know how to take that. It never bothered her before, she preferred it. When Gavin continued to call her Alexandria, she began to only want to be called that. \n\n\"Alex,\" Pavel kissed her on each cheek, \"Ti sahmahyah kranvahyah!\" Telling her in Russian, that she looked beautiful.\n\n\"Spahseebah,\" Alex tried, but butchered the pronunciation. Which meant, thank you. Pavel giggled at the attempt. She shrugged but continued, \"Vi tozhe khahrahsho vigleedeetyeh.\" Which meant, you look good as well.\n\n\"Close enough to survive in country,\" Pavel laughed at her attempt, thoroughly appreciating the attempt to speak to him in his native tongue. \"Although you sound like a drunk Russian!\"\n\n\"She would fit in perfectly then,\" Gavin laughed as he nodded at her appreciatively, his eyes aglow at the effort she was putting on to impress his friend. He couldn't think of one person in his entire life that made an effort, even as simple as that, to welcome a man he loved like a brother.\n\n\"You speak Russian?\" Pavel asked, her still holding her hand from the handshake.\n\n\"No,\" she laughed. \"Google.\"\n\n\"Google?\" Pavel shook his head. \"Damn. Where did Gavin get lucky enough to find you?\"\n\n\"Coffee shop,\" Alex smiled.\n\n\"Gotta start drinking more coffee!\" Pavel flirted.\n\n\"Uh,\" Gavin tried to interrupt the leer. \"That's my girl you are drooling over.\" Gavin pointed out pulling their hands apart.\n\n\"Oh,\" Pavel grinned. \"Now you get jealous? After all we've been through?\" Pavel turned to him. \"You didn't mind sharing that red head in med school. Or that brunette in residency. Or those two blonde nurses from that fertility clinic!\"\n\nGavin shook his head and bent at the waist laughing. It was a hearty laugh, not the controlled laugh that Alex had witnessed.\n\n\"Alex isn't something I'm willing to share,\" Gavin told him firmly with a shake of his head.\n\n\"Ohhhh,\" Pavel drawled, as they were escorted to a table. \"Alex is the one?\"\n\n\"Don't be daft,\" Gavin growled. \"We've only known each other just over a week now.\"\n\n\"For this beauty?\" Pavel smiled, as he beat Gavin, to pull out her chair for her. \"That's long enough!\"\n\n\"Look,\" Gavin said getting close to him drawing the Russian's laughing eyes from Alex. The closeness of the two men reminded Alex of two men getting ready to fight. Her eyes lit up at the playful nature Gavin was displaying. \"I don't like you that much.\"\n\nPavel took the closeness to stare at Gavin with a furrowed brow. Before Gavin moved away, Pavel took him by the head with both hands, and kissed him on the mouth.\n\n\"If I can't have her, I can still have you,\" Pavel said, with all the dramatics of a soap opera star, as Gavin burst into laughter.\n\n\"Pavy,\" Gavin laughed. \"You...are a mad man!\"\n\n\"So there we are,\" Pavel continued to regale Alex with another embarrassing story about Gavin. \"Both in the dumpster, the cops slowly driving by...,\" Alex had her hand up by her face in disbelief, covering her disbelieving smile. Gavin? Running from the law?\n\n\"Pavy,\" Gavin interrupted with a huff, but the smile told her he wasn't angry, just embarrassed. \"Have I told you yet that I hate you?\"\n\n\"All the time,\" Pavel smiled undaunted, never taking his eyes off the laughing Alex. \"It was at this time, that wonder ass there, decides to tell me that he was sleeping with a cop's wife, that's why we were running! See, up until that point I just took off because he took off! I didn't even know why we were running from the law this time.\"\n\n\"Yeah, this time!\" Gavin exhaled deeply. Embarrassed. \"Most of the time it was you who had the reasons for us to be running!\"\n\nAlex looked to him with a gasp and a set of questioning blue eyes.\n\n\"She was hot and needed a friend,\" Gavin defended with a shrug and drink from his scotch.\n\n\"The Chief of Police's wife?\" Pavel queried. Gavin turned away. \"Right as the squad car is in front of the dumpster, a rat...,\" Pavel continued, drawing her laughter, as she took Gavin's hand in hers.\n\n\"The size of a dog!\" Gavin interrupted again with a laugh.\n\n\"It was the size of a horse,\" Pavel corrected. \"Crawls up to say a friendly hello!\"\n\n\"I don't know who got out of the dumpster faster! Me or you!\" Gavin chuckled.\n\n\"Did they catch you?\" Alex asked.\n\n\"Boy, did they ever,\" Pavel laughed as he shook his head.\n\n\"Don't,\" Gavin warned.\n\n\"I think she should know,\" Pavel argued.\n\n\"Tell me,\" Alex demanded, shifting her eyes from one man, to the other.\n\n\"They didn't catch us that night,\" Pavel smiled. \"They caught us the next weekend as we both had a go at the Chief's wife...at the same time. Greedy little minx!\"\n\n\"Damn you have a big mouth,\" Gavin shook his head. \"Did you ever think, for one second, I might be trying to impress this young lady?\" Gavin asked his friend, as he tilted his head towards Alex.\n\n\"Best she knows now, what kind of scoundrel you are!\" Pavel laughed over his drink.\n\nThe dinner continued with laughter, some embarrassment for Gavin, and alcohol. Lots of it for the boys. After dinner they made it to a local bar for more.\n\n\"So tell me about Africa!\" Alex pressed. \"I hear it's beautiful!\"\n\n\"Oh my,\" Pavel nodded. \"There are places there that can make you forget all the ugliness in the world! It can make you forget about all the blood that is being spilt all over the savannah.\"\n\n\"I would love to go there,\" Alex smiled.\n\n\"There are mornings, when you wake up and stepping out into the morning sun, and it's so quiet. You look out and see animals, a lion or a rhinoceros, standing no more than twenty feet from you. You are in awe. Then you realize, they could kill you in a blink of an eye! That's what it's like over there, dangerously beautiful...like you.\"\n\n\"Amazing!\" Alex marveled with a shake of her head at the compliment. \"Gavin said something about a civil war?\"\n\n\"Africa, is always in some sort of civil war,\" Pavel frowned. \"From Joseph Kony to Boko Haram, it's always the same.\"\n\n\"Aren't you scared?\" Alex asked him.\n\n\"Always,\" Pavel nodded. \"I have to walk a fine line, Boko is the worst to deal with, Kony is not much better.\"\n\n\"You know them both?\" Alex gasped.\n\n\"Yes,\" Pavel nodded. \"Nothing gets done without dealing with the warlords. If you want to help the people, you play both sides. It's what it is.\"\n\n\"I thought Kony was wanted for war crimes in The Hague?\" Alex asked him leaning in.\n\n\"He is,\" Pavel nodded. \"I don't do politics.\" He told her with shrug. \"I do medicine. I have to sacrifice a few values to do the most good. It's the innocent people there that are important. Those who don't care about power. Those who are caught in the middle.\" \n\n\"Kony is an awfully fucked up man, but he is someone I have to appease so I can move about to help the people,\" Pavel said with a heavy shrug of his shoulders.\n\n\"How is he fucked up?\" Alex asked his with a furrowed brow.\n\n\"The man believes he is a profit of God,\" Pavel laughed. \"He's a madman, a murder, and a monster. That's the cross I bear. I deal with monsters.\"\n\nAlex like this man. She loved his sense of humor and his care about what he believed in. Gavin liked this man as well, that was certain. She could tell by the brotherly barbs, the care in which Gavin took care of him.\n\n\"What are you doing back here?\" Alex asked him.\n\n\"Oh, every once in a while I have to do a dog and pony show for the donors. The group I work for, well is non-profit. We need donors, both financial and medical,\" Pavel sighed. \n\n\"See these civil wars have been going on since forever, I have to come over once and awhile to talk to groups to keep the money coming. It's so tight now, it's getting harder to get supplies. It used to be I only had to go to the black market every once in a while for meds, now it seems that's all I deal with. It can get expensive, but everybody here is wrapped up in ISIS and Afghanistan. That's all the press here talks about. Nobody remembers that there have been civil wars going on since the eighties...hell even earlier than that if you want to look. Africa is put on the back burner so I come back to beg for money basically.\"\n\n\"What do you need?\" Gavin asked him.\n\n\"You know what I need from you,\" Pavel said sternly, letting Alex know this request had been made several times before. As was Pavel's demand of Gavin.",
        "\"I can't just leave,\" Gavin said shaking his head.\n\n\"You are the best God damn doctor in the world!\" Pavel hissed. \"These rich fuck ups don't deserve you, and you aren't doing anyone any good being their private physician! But you could do a hell of a lot of good there! More good in a year than a lifetime here! Don't tell me it's for the money, you have never cared about money!\"\n\n\"Pavy,\" Gavin sighed.\n\n\"I know my brat,\" Pavy nodded with an exhale.\n\n\"Brat?\" Alex asked him.\n\n\"Brother,\" Gavin smiled. \"In Russian. How is your father?\"\n\n\"Misses you,\" Pavel shook his head. \"I think he likes you more than me! He likes that you call him more often than I do, especially after mother passed. Thanks. It's good he's proud of one son!\"\n\n\"That's because I cause him less headaches!\" Gavin teased. \"And the man is very proud of you!\" \n\n\"That I don't doubt! The headaches I mean, the rest is a bit doubtful,\" Pavel shook his head. \"So how long have you been seeing this piece of shit?\" he asked Alex.\n\n\"Not long,\" Alex smiled. \"Couple of weeks.\"\n\n\"Run now,\" Pavel warned her. \"While you can!\"\n\n\"Hey, don't be running Alex off just yet!\" Gavin growled playfully.\n\n\"You aren't good enough for her!\" Pavel told him.\n\n\"Tell me something I don't know,\" Gavin agreed with his drink to his lips. \"But Alex will figure that out all on her own.\"\n\n\"What she needs is a good looking Russian!\" Pavel told him taking her hand and kissing it.\n\n\"That's a contradiction in terms,\" Gavin laughed. \"And I know for a fact you aren't talking about yourself! Besides, Alex...has taste! She doesn't do bottom feeders!\"\n\nPavel excused himself to go to the restroom and before he left the table he kissed Alex's cheek again.\n\n\"Stop kissing my girl,\" Gavin warned. Pavel swayed a bit with a broad smile before leaving.\n\n\"Why do you keep calling me Alex?\" she asked testily when Pavel was gone. Gavin shook his head and giggled at her anger.\n\n\"Easy,\" he smiled. \"I remember, not too long ago, you corrected us that your name was Alex, you didn't like Alexandria!\"\n\nAlex hung her head and smiled. That was before he showed her how glorious it could be to be Alexandria! That was before he made her cum double digits and made her think of nothing more than the ways she could please him.\n\n\"Pavel isn't in the life,\" Gavin explained. \"He...doesn't know I'm in the life. My one and only secret from Pavy.\"\n\n\"Oh,\" Alex smiled, nodding that she understood. \n\n\"To those in the life, you are Alexandria,\" Gavin told her kissing her lips. \"Everyone else can have Alex, I own Alexandria.\"\n\n\"Thank you sir,\" she smiled, her body tingling at the name.\n\nLeaving the bar, Pavel had his arm draped around Alex as she guided him to the car while Gavin paid the check. She leaned him against the car and made sure he wasn't going to fall.\n\n\"I'm fine,\" he winked at her. \"Not often I can get like this.\" He told her apologetically.\n\n\"You're fine,\" she smiled.\n\n\"You like him?\" Pavel asked her as she watched her open the door. He liked the way she smiled. He liked the way her eyes sparkled when she looked at him. She nodded.\n\n\"Very much,\" Alex agreed. \"He is unlike anyone I have ever been out with!\"\n\n\"I can tell he likes you very much too,\" Pavel smiled as she guided him to the seat and then he basically fell in.\n\n\"I hope so,\" Alex told him as Gavin came up behind them.\n\n\"If you throw up in my car, you, will be, cleaning it up!\" Gavin warned.\n\n\"I know,\" Pavel slurred. \"I throw up one time in the car, and you won't let me live it down! Remember that night with Carla?\" Gavin lost his smile for the first time. Alex didn't miss it.\n\n\"Shut up you drunk Russian,\" Gavin said, carefully pushing his legs in the car and closing the door. Alex watched him but could tell there was something there. He smiled at her.\n\n\"I'm sorry, we got a bit carried away tonight,\" he told her.\n\n\"No,\" Alex smiled. \"I loved it! He's absolutely fantastic.\" Her eyes and mind searched his face for clues to the mysterious Carla.\n\n\"Yeah,\" Gavin nodded.\n\n\"He wants you to go to Africa?\" Alex asked him as he escorted her around the car.\n\n\"Yeah,\" Gavin frowned. \"I would love to go someday, but I have my practice here.\"\n\n\"Why don't you go for a couple of weeks?\" Alex asked him.\n\n\"Pavel did that,\" Gavin smiled. \"And never left.\" Alex nodded as he pulled the seat forward so she could get in the back.\n\nDriving home Alex thought about the name Carla. What was that about? What caused Gavin's demeanor to change immediately. Gone was the light hearted smile. The hearty laughter. The darkness washed over his eyes. It screamed danger at her. Danger to bring it up. Danger to cause pain.\n\nHolding Pavel up, more or less, in the hallway as Gavin unlocked the door. Pavel kept kissing her cheek and telling her that she was the most beautiful woman in the world. He proposed twice on the elevator ride up.\n\nLaying him in the bed, she let Gavin tend to him. She squeezed the drunk man's hand when he thanked her. She started to make her way out but Pavel saying her name stopped her as she was just outside the door, she was about to go into the master bedroom. As she turned just outside the guestroom when she realized Pavel was talking to Gavin and not her.\n\n\"She's spectacular,\" Pavel complimented.\n\n\"She is,\" Gavin agreed pulling off his friends shoes.\n\n\"Much better than that last bitch you had,\" Pavel continued watching the ceiling fan. \"What was her name? The lobbyist?\"\n\n\"Beth,\" Gavin smiled.\n\n\"God I didn't like her, she was bad for you,\" Pavel pointed out.\n\n\"No,\" Gavin shook his head. \"She was, what I needed at the time.\"\n\n\"And Alex?\" Pavel asked him.\n\n\"A quandary,\" Gavin sighed. \"It's all new right now.\" The pain washed over his eyes and Pavel didn't miss it.\n\n\"You have got to be fucking kidding me,\" Pavel growled angrily.\n\n\"Don't,\" Gavin warned.\n\n\"Fuck you,\" Pavel bit. \"You don't get to tell me, of all people, that! I know you my brat,\" Pavel hissed.\n\n\"It's new,\" Gavin tried again.\n\n\"You're eyes,\" Pavel smiled as he touched Gavin. \"Say otherwise.\"\n\n\"Two weeks,\" Gavin smiled, reminding him gently that the relationship was still in its infancy.\n\n\"Still keeping everybody away?\" Pavel asked as he shook his head. \"Just me and Madelyn, that's all you got. That's all you will ever have, if you keep intentionally picking the shitty ones, and keep the good ones away!\"\n\n\"That's all I need, you and Maddy,\" Gavin told him sitting on the bed next to his drunk friend.\n\n\"No,\" Pavel shook his head. \"You need a good girl, one that deserves to be by your side! You can't keep letting Carla force you to push girls like Alex away!\"\n\n\"Girls like Alex?\" Gavin smiled.\n\n\"Good ones,\" Pavel slurred. \"Ones that make you smile like you did once, with Carla!\"\n\n\"Carla was so long ago,\" Gavin pointed out softly.\n\n\"Yet,\" Pavel frowned. \"She still haunts you.\"\n\n\"No,\" Gavin said, shaking his head. \"She doesn't.\"\n\n\"Liar,\" Pavel said with a shake of his head as Gavin shut off the bedside lamp. \n\n\"It wasn't your fault, you know? That was a train wreck that was going to happen despite all that you tried to keep it from happening. Gavin, some people can't be saved. Remember what Dr. Masterson always said. In an emergency, you must decide quickly who can be saved, and who can't. As much as it pains you, you have to let go those who can't be saved! Carla, she was going to wind up in a box, no matter what you did!\"\n\nAlex listened to the conversation before quickly walking back to the master bedroom before Gavin came out. She was taking off her makeup when Gavin came in and took her in his arms from behind.\n\n\"Thanks for coming tonight,\" he smiled into her neck.\n\n\"Thank you for taking me!\" she said closing her eyes as he put his lips to her neck. \"Do you think he liked me ok?\"\n\n\"I think so, he proposed to you twice,\" Gavin laughed as he kissed her neck gently causing her to wash in goosebumps.\n\n\"Drunk proposals, don't count!\" Alex told him as he began to leave.\n\n\"Are you staying the night?\" Gavin asked her as he was leaving.\n\n\"Do you want me to?\" she asked him in the mirror.\n\n\"I told you,\" Gavin said turning to her. \"You come and go as you please.\"\n\n\"It would please me...to stay,\" Alex told him with a smile.\n\n\"As it would me,\" he smiled closing the door leaving her to get ready for bed.\n\nShe walked into the bedroom and Gavin was already in bed. She dropped her silk bathrobe revealing herself to him. He whistled softly at her. She smiled and went to the bed. For some reason her heart was beating fast. Even though she had been with him several times alone. This was going to be the first time in his bed. The first time at his place...alone. \n\nShe wondered why that was a big deal to her right now. Like it was some monumental step in their relationship. She had him in a hotel, she had him at her apartment. But here, in his home, Elizabeth was always around. In the chair, like the first night, or the bed last night. She slowly crawled into bed as he lifted the sheet, inviting her in.\n\nHe was in his sleep shorts, but she could tell by the way they hung to him, they were the only thing on him. She laid there looking up into his eyes. She loved the way he looked at her. Like he was devouring her.\n\n\"Thank you for going tonight,\" he said again, \"for gracing us with your beauty!\" he whispered as he ran his fingers down her face, tracing a line down her jaw to her neck. Lower he went causing her to shiver as he went across her breast. She convulsed slightly.\n\n\"Sorry,\" she smiled. \"They are still sensitive from last night!\" She told him as he circled the nipple causing it to tighten. He nodded. Of course he knew that she reminded herself. She gripped the sheet beneath her. He smiled at her recognizing it. She was determined to follow his wishes. So she gripped the sheets to keep from touching him.\n\n\"I really am happy I went,\" she smiled at him. \"I got to learn a lot about you tonight!\" She smiled happily.\n\n\"I told you not to believe anything that drunk Russian says!\" Gavin teased as he lowered his head to her nipple and took it between his lips. She gasped softly as the sensations of his tongue across her nipple made her shiver with pleasure. She couldn't believe her nipples were still that sensitive! All day they rubbed against the material in her bra and would harden without any other stimulation any time she moved. She was reveling in it.\n\nMoving to the other nipple caused her to let go of the sheet and start to move to his head. She caught herself after being lost in the moment and rewrapped the sheets in her fingers to trap them. He smiled at her ongoing fight.\n\n\"I'm so impressed with you,\" he said releasing her nipple.\n\n\"Why?\"\n\n\"I'm having a hard time believing that a complete novice is able to fight her instincts,\" he smiled, nipping at her throat with his teeth, working his way down to her areola and nipping it causing her to gasp and convulse.\n\n\"I have a good teacher,\" she smiled. \"A patient teacher.\" She hissed as he tugged on her nipple causing a sharp pain then a doubling of her pleasure as his tongue circle the sensitive nipple. She couldn't believe the sensitivity.\n\n\"So,\" he smiled as he slipped his hand beneath the sheet and cupped her sex softly. \"What did you learn tonight?\"\n\n\"I learned you are afraid of rats!\" she teased.\n\n\"Rats the size of dogs,\" he corrected with a grin.\n\n\"Horses,\" she corrected with Pavel's description.\n\n\"I learned that you and Pavy have shared girls,\" she raised his eyebrows as she knew this was not possible now with his absolute.\n\n\"Yeah,\" he nodded as he ran his fingers on the outside of her labia causing her hips to move with his hand. \"Pavy and I were younger then.\"\n\n\"You won't share with him now?\" she asked.\n\n\"No,\" he smiled as he licked her nipple. \"I don't share anymore.\"\n\nShe wanted to ask about Carla, that was what she truly wanted to learn tonight. Why his demeanor changed as soon as her name was mentioned. She knew better than to bring it up. She could tell by the storm that was in his eyes. Like a hurricane coming in to shore. It was foreboding and would be destructive.\n\n\"I learned that you aren't yourself but once a year,\" she said causing him to lift his head and looked at her.\n\n\"What?\" he asked her confused that she would come to that conclusion.\n\n\"I saw the real Gavin tonight,\" she said with a shrug. \"Not that I don't like the Gavin that has brought me into this world. But I wonder why the real Gavin only shows up with Pavy?\"\n\n\"This is the real me,\" he smiled as he put a finger in her.\n\n\"Bullshit,\" she gasped.\n\n\"That little mouth is going to get you in trouble,\" he warned her gripping her pussy from the inside.\n\n\"Then don't lie to me,\" she said back gritting her teeth not allowing him to dominate her. \"Tell me, this Gavin, is the same as the man laughing today at the table. Tell me that, this Gavin, is the same as the one that carried on with Pavy with the whole restaurant watching.\"\n\n\"Maybe that is the fake Gavin,\" he told her as he began to work her again.\n\n\"No,\" she shook her head. \"I could tell.\"\n\n\"How,\" he asked her as her hips began to rise against his hand as her orgasm began in the pit of her stomach.\n\n\"I'm a switch, remember?\" she told him with a smile. \"I can see you, I can tell by the way you laughed. The Gavin at the table...that was the real Gavin!\"\n\nHe watched her lift her hips repeatedly, driving herself into his hand as her orgasm spread from her stomach to her legs. Outward it ran, her body warming under it. Her muscles tightening under it.\n\n\"May I cum, sir?\" she asked him, her voice under duress as her satisfaction built.\n\n\"No,\" he told her, causing her to open her eyes.\n\n\"Please?\" she pleaded with her eyes.\n\n\"No,\" he denied once again.\n\n\"I don't know if I can stop it! Not with your magical fingers!\" she warned him.\n\n\"You had better figure out a way,\" he said calmly. She began to bite her lip. She stopped moving her body against his hand drawing a smile from him. He only increased his speed causing her to whimper.\n\nShe tried to think of things that would keep her from cumming. She thought of her drawings. She thought of the weather forecast. She thought of a random soccer game as she was flooding her brain with anything and everything to keep herself from thinking of the pleasure he was bringing her.\n\n\"Please Sir!\" she begged with her voice and her eyes.\n\n\"No,\" he denied again calmly, softly. She saw his secret smile come out and knew she was pleasing him but she forced that from her mind because that would make her cum for sure. Pleasing him was what really caused her body to betray her. Alex gritted her teeth and tried to think of other things.\n\nA grocery list for her apartment. She thought of the last episode of Mad Men, although the fantasies of Don Draper reminded her of the fact he looked a lot like Gavin! She quickly changed her thoughts to shopping. Unfortunately that brought the way he looked at her as she modeled for him.\n\n\"Are you going to edge me, Sir?\" she asked him as it felt like she was trying to keep back the ocean with a broom.\n\n\"No,\" he chuckled diabolically. \"I'm denying your orgasm, there is a difference!\"\n\n\"Why?\" she pleaded. \"I thought I was a good girl!\"\n\n\"You are a very good girl!\" he whispered breathily in her ear. The words almost sent her over Niagara Falls in the barrel.\n\n\"Fuck!\" she barked as she turned her head from him to keep his hot breath from her. Back to thinking about what the Bears needed for the upcoming season. They needed a new quarterback, a wide receiver...she couldn't think anymore!\n\n\"Pleeeassseee!\" she begged as her legs shook. He shook his head softly, never taking his approving eyes from her.\n\nThe Blackhawks won in overtime, she told herself. Sharpie had the game winner. Fuck this wasn't working she told herself. Thinking about hot, hunky hockey players was not going to keep her orgasm at bay.\n\n\"Please!\" she begged as her face reddened under his manipulations.\n\n\"No,\" he said calmly watching her struggle with it. He was impressed. He didn't have another sub that lasted this long! She thrashed her head from side to side tossing her brown locks wildly about her.\n\nShe turned to him and pleaded as she bit her lip hard, he could tell she was going to bring blood if he didn't release her soon.\n\n\"I love the way you beg,\" he smiled as he kissed her lips as she bit them. \"Cum for me!\" She released her muscles and the cum flooded from her as she barked out a short scream of pleasure into his mouth.\n\nHis eyes sparkled their approval at her.\n\n\"Such a good girl,\" he teased as he kissed her sore lips. He continued to work on her and she worried he was going to do that excruciating exercise again. Could she put the animal back in the box once it was released? Or was it like a road map, unable to be folded up and returned?\n\nThe next one was already building, she pleaded with her eyes to not have to go through that again.\n\n\"Going to cum for me again, little one?\" he smiled. She nodded but was afraid to see what he would make her do. Would he edge her, driving her mad? Or would he tell her she couldn't cum again, which would drive her mad? Whatever he did, she assumed madness would be involved.\n\n\"I love watching you cum,\" he told her with a smile. \"You are so beautiful when you cum for me.\"\n\n\"May I cum?\" she asked with a shaking voice. She knew what the look on his face meant.\n\n\"No,\" he told her. She wanted to cry. Back to baseball she screamed in her head. \n\nShe tried to remember the scores from today's game. She thought about calling her folks. She wanted to tell them she had met a new guy. One that was capable of driving her mad. That before he was done with her, her new address would be the local mental institution. Between the edging and the withheld orgasms. The mind boggling sex, and emotions she was cascading with. They would have to visit their little girl in a rubber room! With one of those strait jackets.\n\nThis caused her mind to snap to bondage. How much she like being tied up. She liked Gavin's hands. Shit! Stop thinking about that! She scolded herself as she buried her face in the pillow. It's supposed to rain on Thursday, she would have to remember her umbrella when she went to get Elizabeth. \n\nElizabeth! Oh my god, the Goddess! Her sweet pussy and how it tasted! NO! NO! NO!\n\n\"Please sir!\" she begged. He nodded at her and she gasped as she flooded his hand. Now she could smell it. She could hear it! That was only going to push her to the edge faster.\n\n\"I would like to keep doing this to you, but I can tell, that would be impossible!\" He giggled. She nodded with a look of desperation. \"Cum for me, cum for me little one. Show me what a good little girl you are!\"\n\nThis sent her rocketing to space! Her body lifted from the mattress as she pressed against his hand and she cried into the pillow to keep Pavel from hearing her. She collapsed into the soft mattress. Her breathing coming in short gasps as he slowed his fingers in her.\n\n\"Thank you, Sir,\" she smiled at him with adoration in her eyes. He kissed her gently as he pulled his fingers up and licked them in front of her.\n\nHe reached out to her hip and turned her over. Moving in behind her she pushed up and presented herself to him. Her face resting on the sheets of the bed. She felt him move behind her. His fingers on her hips.\n\nShe felt him at her entrance, as soon as she felt his bulbous head pierce her wetness, she drove her hips back in a gasp as her pussy gobbled him up.\n\n\"No, no, no, little one,\" he said griping her hips with his steel fingers. \"I'm going to fuck you, not the other way around. I'm the Dom, save the switch persona for Elizabeth!\" He warned her. She nodded her head into the silky sheets with an evil grin. She waited for his manhood to drive her into the sweet madness he was so capable of.",
        "She felt him moving around behind her, the angle of his cock changed. It went from more or less straight in, to move of a downward angle. She looked over her shoulder at him and saw him squatting behind her. His feet on the bed as he hovered over her. She felt him rock forward, pushing himself deeper into her being. Shocking her that he found a way to push his impossibly wonderful cock further in her.\n\n\"Fold your arms across your back,\" he told her. She obeyed immediately. Gripping her forearms with her fingers. He took hold of both her small wrists with one hand. The other he gripped her hair, lifting her off the mattress. \n\nFrom this position she was fucked. His cock pounding against her cervix bringing a pleasurable pain. He was impossibly deep and with every thrust she grunted a pleasurable gasp.\n\nHe pounded her. This was harder than he had taken her before. He was deeper than he had ever been. She couldn't believe the pleasurable feelings he was raining on her from his squat.\n\n\"God I love fucking you!\" he growled as he pounded her from behind. \n\nShe wanted to respond, but the words came out in a babble as her orgasm squirted out the edges of her quivering sex, around his cock, and dribbled down the inside of her thigh. If he wasn't fucking her into oblivion, she would have reveled in the fact he made her squirt again!\n\n\"I love the way your body responds to me,\" he continued to tell her gruffly as his rod slammed her. \"I love the way your pussy feels! It's tight velvet like feel sucking on my cock!\"\n\nTalking dirty to her was driving her mad again. Bellevue! Here I come! Literally. She screamed as her orgasm washed from her. She wanted to collapse to the bed, but couldn't. He was holding her up by her wrists and hair, her legs folded under her. They spread wider, the joints keeping her upright as they would not spread any farther without coming out of their hip sockets. \n\nHer muscles quivered in her legs. Her stomach ached from the power of her orgasms. She felt her neck crane back as he pulled her hair more, tilting her head to the side so he could kiss her open mouth. His tongue swirling in it like a snake in a bag. She tried to respond but her mouth was absolutely useless! Her body was useless!\n\nHe reveled in it! He let go of her hair and her face plopped on the mattress as her ass was driven further up into his assault. He let go of her arms and took her hips with his hands. If she had any strength left, she could have pulled her arms under her but she was beyond that! Gavin had taken her there...again!\n\nWith a guttural growl he drove his hips into her causing her to collapse to the bed, his cock bouncing off her cervix again as he was driven impossibly deep within her womb. She felt him buck inside of her. His warmth spreading out in her as his seed shot from his cock, filling her.\n\n\"Holy shit,\" she gasped as he bit into her again. She hoped he was marking her again, her first marks were fading. She was enjoying seeing them in the mirror. A welcome reminder. They reminded her of all that pleasure. He released her skin and she frowned as she knew he hadn't marked her. He was back to the old Gavin. Controlled. Protective.\n\nHe covered her body with his and nibble on her ear.\n\n\"You are absolutely incredible!\" he whispered in her ear.\n\n\"Thank you, Sir,\" she said her favorite three words. \"You bring it out of me!\"\n\nGavin woke her with soft kisses, she smiled at them.\n\n\"I could go again,\" she whispered.\n\n\"So could I,\" he laughed alluding to their sex. \"But I got a call.\"\n\n\"So, again, I won't wake up with you by my side,\" Alex frowned. \"It's becoming my dream to roll over and see you in the morning light!\"\n\n\"Sorry,\" he said softly with a kiss. \"I need a favor.\"\n\n\"Anything,\" she told him turning over.\n\n\"I need you to take Pavy to the airport if I'm not back,\" he said brushing her cheek gently.\n\n\"No problem,\" she smiled. \"What time?\"\n\n\"10,\" he said kissing her lips.\n\n\"Better get up at six then, to roll him out, how grumpy is he with the hangover?\" Alex teased.\n\n\"Pavy doesn't get hangovers,\" Gavin laughed. \"He's Russian!\"\n\nGavin kissed her deeply as he let his hand drift below her waist and rub her sex.\n\n\"You aren't going to be leaving if you start something now,\" she warned him.\n\nHe eased a finger in her.\n\n\"Not fair,\" she whispered enjoying the feel of the invasion.\n\n\"I wish I had more time,\" he whispered against her lips. She whimpered slightly as he pulled his finger from her.\n\nAlex watched him smile at her from the door, once he closed it, she set her alarm on her phone. She then slid over to Gavin's side and inhaled his scent from his pillow. She clutched her arms around it and held it tightly, before returning to sleep.\n\nShe was making breakfast when Pavel came in.\n\n\"Dobroye utro!\" he said cheerfully, walking to the coffee pot. \"What the hell is this?\"\n\n\"Dobroye utro!\" she returned. It meant good morning. She laughed as he looked at the coffee maker.\n\n\"It's a Keurig,\" she laughed. \"Take a little cup from the wheel there, pick a flavor, and then put it in here.\" She said showing him how to operate the machine. \n\n\"The little bitch can't even make a pot of coffee anymore?\" Pavel groused shaking his head at Gavin's toys about the house.\n\n\"I think it's more for everybody else,\" she told him going back to cooking. \"He's been drinking herbal tea.\"\n\n\"You don't have to cook for us! Let's make him take us out!\" Pavel said coming to the beauty near the stove.\n\n\"He got called out,\" she told him with a frown.\n\n\"Damn rich people,\" Pavel grumbled as he matched her frown. \"I guess I'll take a cab to the airport then.\"\n\n\"No you're not,\" Alex said with a shake of her pony tail. \"I'm driving you!\"\n\n\"You don't have to do that!\" he scoffed.\n\n\"It would be my pleasure,\" she assured him.\n\nSitting down after serving him, something Gavin would never allow her to do for him, she smiled.\n\n\"So, how did he trap you?\" Pavel asked her.\n\n\"More like I trapped him,\" Alex smiled over her coffee.\n\n\"You are much too good for him,\" he told her as he enjoyed the taste of her cooking. \n\n\"No way, it's the other way around!\" \n\n\"Like him, do you?\" Pavel asked, he smiled when Alex nodded. \"He likes you, a lot.\"\n\nShe shrugged, but hoped it was the truth.\n\n\"I can tell,\" Pavel continued. \"He will try to push you away, don't let him.\"\n\n\"I know,\" Alex frowned.\n\n\"He has tried already?\" Pavel asked her. She nodded. She knew she couldn't say too much as Pavel didn't know about Gavin's lifestyle. \"He gets scared, I wish...\"\n\n\"What?\" Alex asked him when he stopped talking.\n\n\"Nothing,\" Pavel smiled falsely.\n\n\"Pavy,\" Alex began slowly. \"Who is Carla?\"\n\nPavel looked her.\n\n\"Me and my drunk mouth,\" Pavel said closing his eyes and shaking his head. \"I know it had to be me as Gavin would never speak her name.\"\n\n\"Yes,\" she nodded that it was him that let the secret name of Carla out, driving her wild in wonder. \"Is she why he won't let anyone close?\"\n\n\"Yes,\" was all he said.\n\n\"Why?\"\n\n\"Alex,\" Pavel shook his head. \"If you like him, don't. This conversation will cause him to end it immediately. Carla, is an atomic bomb.\"\n\n\"I need to know what I'm up against,\" Alex whispered.\n\nPavel exhaled deeply as he thought about it.\n\n\"Does Elizabeth know about her?\" Alex asked him causing him to roll his eyes.\n\n\"You know that snooty bitch?\" Pavel snarled.\n\n\"Yes,\" she smiled at the anger the mere name invoked from the Russian.\n\n\"No,\" he told her. \"I doubt anybody but me and Madelyn knows.\"\n\nAlex shook her head. Madelyn would never tell, so that left Pavel.\n\n\"Please,\" she begged.\n\n\"I must caution you,\" he said leaning forward. \"If you bring it up to him, in any manner, it will be over. There will be no fixing it. Not this.\" Alex looked to the table. \"Are you sure?\"\n\nAlex nodded fearfully. Would he end it if he found out Pavel and her were discussing it? That's what caused the nauseous fear to form.\n\n\"Carla was on her way to being a brilliant doctor,\" Pavel sighed. \"She was every bit as good as Gavin. Pushed him in ways no other could. That's what drew him in, she pushed his boundaries. God he loved her!\" Alex felt the sharp stab of jealousy.\n\n\"We were at a party,\" Pavel continued slowly. \"Some drugs started going around, she did some. Soft stuff at first, little pot, then a little mushrooms, coke. Then she got hooked on heroin.\" Alex closed her eyes.\n\n\"Gavin almost got kicked out of med school,\" Pavel frowned. \"He would spend all his time looking for her, or taking care of her. Missed a ton of classes, missed out on an opportunity to do his residency at the Mayo Clinic because of her.\"\n\n\"He would spend his days frantically looking for her from drug infested house to drug infested house,\" Pavel sighed.\n\n\"More than once, we almost had the shit beat out of us by the thugs there. We would never take money in our pockets, guys would rob us at gunpoint if we did.\" Pavel told her. \"He started carrying a gun, just to rescue her.\"\n\n\"She was kicked out of med school,\" Pavel told Alex as she had her breath taken from her as the pain in Pavel's voice told her this was something that hurt Pavel too. \"What a waste!\"\n\n\"I tried to get Gavin to give up on her, she was dragging him down with her.\" Pavel explained. \"Had multiple fistfights because of her. But he loved her. Gavin is so loyal, that he won't give up on someone like that, even though it could mean his own destruction.\"\n\nAlex took his hand as he stopped talking. It was encouraging him to continue.\n\n\"We lost Carla, for about a week,\" Pavel explained. \"We found her being sold for sex, guys lined up to use her. Some paid in drugs, some paid in cash. The dealer was using her to get the money she owed him.\"\n\n\"Oh my God!\" Alex gasped.\n\n\"Gavin was crushed,\" Pavel whispered. \"I thought that would be the end of it. Should have known better. Gavin just doesn't quit. He took her from there, with his gun out, to defend ourselves. This of course after beating the dealer almost to death. That case was never solved. Thankfully the police didn't give a damn about a beat up drug dealer. I think that still weighs on Gavin as well, the guilt of knowing what he got away with. It took me hours to convince him not to turn himself in.\"\n\n\"He put her in a rehab facility,\" Pavel continued. \"She spent six months there, got cleaned up.\"\n\nAlex nodded.\n\n\"Then she got the diagnosis,\" Pavel frowned. \"She had contracted HIV.\" Alex blinked rapidly. \"I was so worried about Gavin, but he told me he hadn't been with her for almost two years. Since she started disappearing.\"\n\nAlex's jaw dropped.\n\n\"He's been thoroughly tested,\" Pavel assured her. \"It's been almost two decades, so he's clean!\" Pavel assured her. He didn't want Alex to think she was in danger.\n\n\"No, I know he would never endanger me,\" Alex assured him.\n\n\"One night,\" Pavel began again. \"We were at the library, studying for exams. It was the first time I could get him out of the house. He was afraid to leave her.\"\n\n\"She was gone when we got back,\" Pavel frowned. \"We found her two days later, needle in her arm. Dead.\"\n\n\"Oh my God!\" Alex gasped without air.\n\n\"Gavin, has never, been the same,\" Pavel told her with a soft hand to her face. \"Until last night.\"\n\n\"No way,\" Alex shook her head.\n\n\"Oh don't,\" Pavel smiled. \"I know better than most, I love him. I would die for him. He cannot fool me!\"\n\n\"Pavy,\" Alex tried. \"We barely know each other!\"\n\n\"I know,\" Pavel smiled. \"You know what makes people fall in love?\"\n\n\"Their heart?\" she asked.\n\n\"No,\" Pavel shook his head. \"It's more than that, it's deeper. Instinct.\"\n\n\"Instinct?\" Alex asked confused.\n\n\"Look deep in you,\" Pavel told her. \"Yes your heart beats for him, but it's something else that tells you to try harder for him. I hope you are as tenacious as you appear to be!\"\n\nAlex stood with Pavel at the gate, he gave her a warm hug.\n\n\"Thanks for the ride,\" he smiled. \"The offer still stands.\"\n\n\"What offer?\" Alex asked him with a confused smirk.\n\n\"To marry me,\" he teased with a wink.\n\n\"You were drunk, I didn't think that was serious,\" Alex laughed.\n\n\"Tell the asshole I love him,\" Pavel told her.\n\n\"I will,\" she smiled. \"Pavy?\"\n\n\"Yes?\"\n\n\"Will he ever let someone close to him?\" Alex asked him. Pavel exhaled deeply and studied her. \"Maybe I don't want to know. The illusion is good now.\" She said quickly changing her mind by the way he looked at her.\n\n\"Alex,\" he smiled. \"It really depends on you.\"\n\n\"Me?\"\n\n\"Yes,\" he nodded. \"He will push you away. That is inevitable. I'm sorry.\" He told her gently. \"You just need to be strong enough to not leave him when he tells you to, and you need to find a way to keep it from happening when he tries. Regardless of what he believes is best, if you want him, claim him.\"\n\nAlex almost laughed. Claim him? That's what a Dom does, he is not a sub. She wished she could tell Pavel that. Make him understand.\n\n\"Be safe,\" Alex told him. \"If you need anything, call us!\"\n\n\"I like the way you said that...us,\" Pavel told her. \"I hope I see you again.\"\n\n\"Me too,\" she smiled. \"One last question.\"\n\n\"Ok,\" \n\n\"How long does his relationships usually last? How long do I have to convince him?\" Alex asked him.\n\n\"They average a year,\" he told her. \"Seems like every time I come back for the dog and pony show, he has a new girl. Clock is ticking Alex. I hope you are like another Chicago legend. Michael Jordan knew how to come up clutch! I hope you do too. I want the man to smile all the time like he did last night with you!\""
    ],
    "authorname": "CJT",
    "tags": [
        "withheld orgasm",
        "fingering",
        "doggy style",
        "squirting"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-12"
}