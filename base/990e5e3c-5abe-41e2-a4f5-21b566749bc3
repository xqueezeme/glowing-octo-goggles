{
    "title": "The Infinite Bk. 03 Ch. 07",
    "pages": [
        "Expertise\n\nSo sharp, the edges of the gems, cutting Galvin's skin as his mother, Ziradith Herald, backhanded him across the face. \"You arrogant little cretin! Do you know what you've done?!\" Galvin fell back, hissing in pain and anger. \"All the work I put into getting you engaged to that girl, you've ruined it!\" Standing in the far corner of the room, the maid, one of many working in the Herald estate, winced from the sight. She too had received a strike like that from the duchess. However, she felt no sympathy, not after all the times Galvin had violated her. \"Bad enough you couldn't even marry into the main family! Do you have any idea of the humiliation you've brought on me!\"\n\n\"It's not my fault! He tricked me, and she was a whore! I'm the victim in this!\"\n\nZiradith looked away in disgust. \"Pathetic. You wagered your fianc\u00e9e on a duel and got beaten! And Seraph saving you. I wish he was my son because then I'd have something to work with.\"\n\n\"Just fix it!\"\n\n\"Fix it? Are you out of your mind? No family will touch you now! Your only value is as livestock!\"\n\n\"Well then tell me what I'm supposed to do!\"\n\n\"What to do? You're going to go back there and salvage this on your own.\"\n\n\"I can't go back there after what happened! I'm the laughingstock of the academy!\"\n\n\"That'll be the punishment for your stupidity, to wallow in the humiliation that you brought on yourself. Once you're back, start challenging everyone to duels, and don't you dare lose again. If they can't respect you, at least make them fear you. And don't go near Sophia or this Noah bastard. I don't want you losing and shaming me any further. Do you understand?\"\n\nHe glared at her, angrily huffing through his nose. \"As you wish, Mother.\"\n\n\"Now get out of my sight. I don't even want to look at you, you disgusting rat.\"\n\nOnce Galvin left, Ziradith turned and looked out the window at the snow-caked city of Colbrand. This manor was one of two, and the other within the Herald territory. Upper nobles like herself tended to keep second mansions like these for when traveling to and from the capital in their search for political and economic power. For Ziradith, it was a lifelong pursuit, forging and breaking alliances while scouring for weaknesses and resources to exploit. Her son's blunder was a devastating blow to everything she had accomplished, but she would bounce back from this; she always did, no matter who had to suffer for it.\n\n----------\n\n\"Noah, over here!\" Upon entering the mess hall, he heard himself being beckoned, but not by a familiar face. A female cadet was waving him over. \"Come sit with us!\"\n\n\"No, come sit over here!\" another young woman hollered from the other side mess hall; she and all her eager-eyed friends.\n\nWord had spread pretty quick of his evening with Sophia, and now numerous women were inviting him like sirens. It was a confusing sight for those unaware of the situation. Cadets from the barracks and middle dorms scoffed, thinking it all had to be lies and exaggerations. Those from the upper dorms, eyes dead from exhaustion, simply sighed as if to say, \"yep, that's just how it goes.\"\n\n\"It seems you've accrued a fan club,\" Alexis said dryly, standing by his side.\n\n\"Well yeah, I mean, come on.\"\n\nSophia approached them with a nervous smile on her face. \"Hey.\"\n\n\"Hi,\" Alexis replied, unsure of what else to say. All eyes were watching them, most aware of the existence of a love triangle, but no one understood the actual dynamics.\n\n\"You two take your seats. I'll get us some food,\" Noah said.\n\nWhile walking towards the kitchen, he glanced to where the princes usually sat. Galvin wasn't there. Had he fled the academy in shame? Noah could only hope. As he gathered breakfast, Alexis took her usual seat and Sophia borrowed Noah's. Sophia took a deep breath.\n\n\"I'm sorry,\" she murmured, reaching out to try and hold Alexis's hands. \"I did what I did to hurt Galvin and break free of him, but I didn't want to hurt you too. I was... I was desperate. I felt the horrible future suffocating me, and I was ready to do anything, just to create a little pocket of air.\"\n\nThe act was not reciprocated, and it took all of Alexis's strength to answer her. \"I understand. When I was told I'd have to marry him, I was ready to bite my tongue and die. I know what that desperation feels like. I can't judge you, knowing I would have done so much worse.\"\n\n\"But can you forgive me?\"\n\n\"I... I need some time. The noises you made, the things you said, I didn't want to know that you could make them. I didn't want to discover you could be like that until... it was you and I, making each other say those things.\n\nDo you remember the first time we kissed? We were young, confused, had no idea what we were doing. I loved that feeling, the blind leading the blind. It was like a door to a whole new world had opened up for the two of us to discover, and the smallest step made our hearts race like we had run a mile. It was just us, holding hands and making those steps together. Now you're so far ahead of me, and I've lost the chance to walk those steps for the first time with you.\"\n\nSophia wiped away a tear. \"I felt the same way. Going to Noah's room was the hardest choice I ever made because I knew there were things that can only be experienced once, and I only ever wanted to experience them with you. I always dreamed of the night when we would finally be all alone, the two of us fumbling in the dark, every sensation being a new discovery.\"\n\n\"Sophia...\"\n\nShe smiled. \"I think it's rather fitting for us to talk about this. Last night, Noah told me something similar. He said that all I have to do is enjoy the moment, to focus on the present, and bask in all my feelings. He told me to savor them, the confusion, the excitement, the newness, the intensity. That's what I will always do. I'll savor every moment with you, every heart flutter and new experience. If you need time, then I'll give you all the time you need, because after, I plan on spending my life with you, a lifetime of steps for us to take together. I'm not going anywhere.\"\n\nThis time, it was Alexis's turn to wipe away a tear, and she finally reached out and took Sophia's hand. \"And neither am I.\"\n\nNoah arrived with two trays filled with food just as Sophia finished healing Alexis's hands. \"So, who should I sit next to?\"\n\n\"Here, take my seat,\" Alexis said as she got to her feet.\n\nShe then walked around to the other side of the long table and sat down next to Sophia, putting a smile on her beautiful face. However, when Noah sat down across from her, that smile turned into a nervous blush. At that moment, memories of all the lewd things they did together were rushing through her mind. Steam was just about ready to shoot out of her ears as she recalled the two of them licking oil off each other's naked bodies. Alexis wasn't blind to the tension.\n\n\"I suppose it's to be expected for things to be... weird... between you two.\"\n\n\"It'll pass,\" Noah said nonchalantly, as though speaking about a brief snow flurry while reading a newspaper.\n\n\"You seem awfully calm about this.\"\n\n\"I've had more than my share of mornings after and awkward breakfasts, but I'll admit, this is a new twist.\"\n\n\"Can you tell us more about what you said to me outside? Tell us who you really are.\"\n\nSophia looked confused. \"Wait, what are you talking about?\"\n\n\"I'm sure you can understand that this is not the time or the place for that conversation. When the year is over, I'll tell you both everything. Until then, all you need to know is that I'm a friend.\"\n\n\"Can we trust you?\"\n\n\"Can you? Yes. Should you? Only you can decide that.\"\n\n----------\n\nNoah had archery class that morning, and it went as he expected. Everyone was gossiping with hushed voices and shooting him with more weird glances than usual. A few female cadets came over when the teacher wasn't looking, led by a neighbor from the upper dorms.\n\n\"Hello, Noah. You and I haven't met before, but I'm--\"\n\n\"Allison Crowberry, I know you. I can also guess what this is about.\"\n\n\"My friends didn't believe me when I told them about all the ruckus from last night, about how loud and... long... it was.\"\n\nNoah turned to her friends. \"It would be ungentlemanly for me to kiss and tell, so I can't provide many details. However, for the sake of Miss Crowberry's good name, I can confirm that the descriptions of my pace and duration have not been embellished.\"\n\n\"Maybe you could give me a demonstration sometime?\"\n\nNoah gave a modest chuckle, and before anything more could be said, the teacher started giving orders to the cadets. In a way, Noah was grateful that the conversation was stopped. He was still human enough to feel proud when women pursued him, but becoming a playboy in this time and place could prove dangerous. He was already an enemy of the princes, and it would be bad if more nobles started coming after him for screwing their daughters and fianc\u00e9es at the academy. Besides, there was always the risk of secrets getting out.\n\nWhen he went to the bathhouse, he was similarly the center of attention. He hoped to soak in peace, but numerous cadets kept approaching him, asking for details about his night with Sophia, but his lips were sealed.\n\n\"Well can you give us any advice? How do I make a woman moan like that?\" one upper noble asked. Countless eyes were glued to him, awaiting an answer.\n\nNoah took a deep breath. His plans for social invisibility had gone out the window on Day 1, and it had been downhill from there. With this, he was past the point of no return. 'I might as well throw them a bone. Maybe this could be entertaining.' \"Ok, I'll give you a test of your determination. Each of you, get a lemon or lime and cut it in half. Your challenge is to hollow out both halves of the lemon with your tongue. You can't damage the skin at all or use your teeth in any way. As soon as you finish one, start another. A week from now, if you can do this in one sitting without having to rest, then I'll start teaching you real techniques.\"\n\nHe had never seen so many cadets sprint out of the baths at one time. After bathing, he headed to lunch, taking his seat with Sophia and Alexis.\n\n\"Why are so many men eating lemons?\"\n\nTrue to her words, almost a third of all the male cadets were sucking on the sour fruit, forsaking their own lunches for this trial. There was even a secondary line in the kitchen, with cadets asking the cooks for supply help and getting yelled at in response. The bitterness and exertion were making them grimace and rub their jaws, but to their credit, they weren't giving up.\n\n\"Someone in the baths had black toes from scurvy, so everyone is anxious,\" said Noah.\n\nAlexis turned to Sophia, sitting quietly with a bright and sunny smile. She had been indescribably cheerful all morning, even skipping down the corridors like a giddy schoolgirl. She was still intoxicated by the endorphins from last night.\n\n\"How was class?\"\n\n\"Oh, it was fine!\"\n\n\"No one gave you... any trouble, right?\"\n\nThat smile became a blush. \"No, no trouble!\"\n\nShe thought back to all of the female cadets whispering to her earlier, asking for details about her sensual night. They wanted to know everything Noah had done to her, and every time she tried to retell it, embarrassment filled her, and she got lost in pleasant memories. She had been afraid of being ridiculed and scolded by her peers, and while there had been some hushed muttering and dirty looks shot her way, as Noah predicted, many women she encountered, having heard her voice echo through the night, were green with envy.\n\nThere was a tap on Noah's shoulder, and he turned around to a male cadet. \"Hey, Noah, is there a trick to this or something? Because I feel like my tongue is going to fall out.\"\n\n\"All right, come here.\" Noah then flicked his forehead. \"That's for your lack of manners. Do you not see me eating with friends here? This is not the time to have this conversation. Go sit back down and eat that lemon.\"\n\nAs the cadet fled like a scared rabbit, Noah turned to Alexis, giving him the evil eye. \"Oh Noah, for God's sake. Please tell me this isn't about last night.\"\n\n\"Noooooo, it's about strained mining rights between Uther and Vandheim and the socioeconomic impact of the volatile price of copper. Of course it's about last night. A few cadets wanted to improve their skills, so I thought I would pass on some of my knowledge.\" Alexis sighed and covered her face with her hands. \"Consider it an act of charity. I'm doing this for all the poor women who will be marrying these guys in the future.\"\n\n\"So what is the deal with the lemons? Is it kissing practice or something?\"\n\n\"Well... in a way.\"\n\nNext to Alexis, Sophia's blush was so intense that her cheeks were the same color as her hair.\n\nUnfortunately, Pandora's Box had been opened, and Noah's midday study session in his room was repeatedly interrupted by cadets seeking advice. After months of running laps and practicing with weapons until their hands bled, these so-called warriors were struggling to complete Noah's challenge. Sitting at his desk, trying to read, even Noah found his patience tested by yet another knock on his door.\n\n\"If I open that door, it had better not be about lemons!\" The knock continued, prompting Noah to sigh and answer it, finding himself facing Sir Elyot. \"Ah, Professor, how can I help you?\"\n\n\"Pardon me for interrupting your studies, but there is something you and I need to discuss.\" He didn't seem angry, but he was serious.\n\n\"Of course, please come in. Take a seat.\" They sat down at the dining table, which was finally seeing use. \"Can I offer you a cup of tea?\"\n\n\"Thank you, but that won't be necessary. I'm here because of the spell you used against Prince Galvin. If I remember correctly, you came to me and said that you couldn't use any kind of magic, even runecraft. Would you care to explain?\"\n\nNoah had anticipated and dreaded this conversation, but there was no way around it. All he could do was minimize the damage and learn what he could.\n\n\"I discovered my abilities only recently. I don't understand it myself, but I can't cast actual magic, only imitations.\"\n\n\"Imitations? What do you mean?\"\n\n\"I'll demonstrate.\" He got up from his chair and went to his desk, where he retrieved his grimoire. He opened it to a page and placed his hand on it, channeling his mana into a series of runes. \"Water Orb.\" The magic circle appeared around his hand, but that was all. \"As you can see, the spell reacts to my mana and produces the magic circle but doesn't fully activate.\" As he spoke, he cast his clone spell, making it look like he was just brushing his hair out of his eyes. \"However, I've found that if I snap my fingers and cast the spell, this happens.\" He went through the motions and launched a liquid sphere from his hand like he was tossing a water balloon. It splashed on the table, and Sir Elyot instinctively tried to protect himself, only to realize he hadn't been hit by any actual droplets.\n\n\"What is this?\" he asked as he touched the water on the table but felt no moisture.\n\n\"Like I said, it's an imitation. All of my spells have the look, sound, and even smell of real magic, but they don't actually affect the world.\" He flipped to another page. \"Flame Jet.\"\n\nThis time, a blast of fire was launched across the room, making Sir Elyot instinctively yelp, but he stopped when he realized the flames weren't producing any heat. Noah sprayed the room, and while the fire stuck to whatever was hit and continued to burn, nothing was being charred or damaged in any way. Everything was on fire, but the air was as clear and cold as before. He ended the spell, and all the flames simply vanished without leaving a single speck of black on anything.\n\n\"So, can you offer any insight into this?\"\n\n\"This... this is... I don't even know what this is.\"\n\n\"In all of my research, I have yet to find any runes that could correspond to this strange magic, nothing regarding illusions or the such. I can't even get the magic circle to appear that would explain what it is.\"\n\n\"I have never heard of a magic like this before, so it's possible that the runes have yet to be discovered, or their meanings have been lost to time.\"\n\n\"That information doesn't help. I've tried channeling my mana into every rune I can find in the library, but there is no reaction at all.\"\n\n\"Not necessarily. If runes in a spell will react when exposed to your mana, then runes corresponding to your magic will likewise react. It's possible you simply didn't see the reaction.\"\n\n\"But why can't I see them if I'm...\"\n\nHe trailed off, struck by inspiration. When he was invisible, his vision was enhanced to let him see people's mana like a thermal camera, though he couldn't differentiate powers by level. All this time, he had assumed the only way he could improve the spell was by cultivating his mana so he could keep it going longer. Perhaps that was the wrong aspect he had been focusing on.\n\nBefore entering the academy, he fought members of an assassin tribe known as the Harajin and defeated them, earning knowledge of their invisibility technique. While the details and mechanics of the spell were disappointing, he remembered the Harajin mentioning a sort of \"spiritual sense.\" It was an ability they honed for use with their technique, letting them be aware of their surroundings even when all physical senses were nullified. If Noah trained his spiritual senses, his invisible state might let him see more than just mana. Maybe the runes were reacting, but they were invisible, even to him.\n\n\"Sir Elyot, what can you tell me about spiritual senses?\"\n\n\"I think I see where you're going. It's a sixth sense, the ability to read the flow of mana around you. It's a rare and difficult skill to acquire, even for mages. I know that Lady Zodiac is an expert on the subject. Both she and her...\" He caught himself and trailed off, then tried to cover it up by clearing his throat.\n\n\"All right, I'll talk to her next. Can I trust you not to tell anyone about this? My reputation is a bit tenuous at the moment, and news of weird magic could make me look bad.\" It was a lie but a convincing one. It would be better to sound shallow rather than paranoid in this instance.\n\n\"As a knight of Uther, I can't promise silence if you become the enemy of the country.\"\n\n\"Fair enough.\"\n\nThe conversation had to end there, as it was time for Noah's next class, monster studies. It focused on killing various beasts and harvesting their corpses for valuable materials to make powerful potions, inks, and scrolls. There was little hands-on work despite the description, and most studying was done in the library. It was understandable. Monsters slain in the countryside and delivered to the academy would rot long before arriving, and capturing them alive wasn't always feasible. It was easy enough to throw a net on a wolf and haul it in a cage, but it was hard to remain in the 'take them alive' mindset when fighting giant spiders.\n\nAfter class, he went to the sword training field and found Valia there, watching over cadets using these hours to further train. Alexis was among them, as always. \"Lady Zodiac, a moment of your time?\"\n\n\"Ah, Cadet Noah, of course.\" Her cheerful demeanor set off alarms in Noah's head. \"Come with me,\" she said, leading him away from everyone else. \"I thought you said you wouldn't put your hands on that girl,\" she hissed once the two of them were out of earshot.\n\n\"I didn't force her in any way, nor was she coerced by anyone else. She came to my room willingly, made her intentions known, and I obliged. She and I enjoyed a wonderful, consensual evening, and that's all there is to it. Anyway, I wanted to ask you about spiritual senses. Sir Elyot said that you're an expert on the subject.\" He spoke fast and successfully veered her off the topic.",
        "\"Spirit senses? I wasn't going to go over that until spring. What's your interest?\"\n\n\"It's part of my magic research. How do I improve it?\"\n\n\"Unfortunately, it's not something you can practice here at the academy. The fastest way to train your spirit sense is to go through several near-death experiences. You become more sensitive to the presence of others, such as sensing an assassin sneaking up on you. Think of it as like mastering the feeling of being watched. The greatest warriors claimed to have felt it a few times in their lives, if only for a moment. It happens during the most intense battles against the worthiest foes, when you're absolutely pushed to the brink and walk the razor's edge.\"\n\nShe pulled her sword from her sheath with inhuman speed and put it to his throat, receiving no reaction from him. Rather than being too fast for him to draw his own blade to counter, she knew Noah instead resisted the instinct, choosing not to retaliate. He saw it coming and knew she wouldn't touch him.\n\n\"You stare them down, each of you waiting for the other to make their move. You both know that the next clash will decide who lives and who dies, and you honestly don't know how it will end. Your mind is clear of all but the moment, and you feel everything like never before. The slightest breeze is like a splash of freezing rain, with every hair swaying like a tree in a hurricane. You can feel every single minute detail in the handle of your sword, and a snowflake falling on your outstretched blade is as loud as thunder. At that moment, you feel fate unraveling like a play.\"\n\n\"So it's like a monk skill, hyperawareness brought on by the stress and fear of intense battle.\"\n\n\"Not necessarily. It can be honed with strict discipline. If you can learn to tune all other senses out, then your spirit sense will be brought to the forefront of your mind, but this is something that takes years to master.\"\n\n\"I think I understand. Thank you, ma'am.\"\n\n\"You're welcome. Just try to stay out of trouble for once.\"\n\n\"Believe me, I would love to. It's just that CERTAIN PEOPLE insist on fighting me, which leads to far-reaching consequences.\"\n\n\"Point taken, but you know what I mean. You could at least handle those consequences with honor and proper conduct.\"\n\n\"I'm simply playing the game my way, without straying from the rules.\"\n\nAfter speaking to Valia, Noah headed for the mess hall for dinner, arriving there while Alexis and Sophia were still in the baths. Like before, numerous female cadets tried to invite him to sit with them. He was about to turn them down when an idea popped into his head, and he approached one of the groups of women.\n\n\"Good evening, ladies,\" he said as he took a seat with them.\n\n\"Cadet Noah, so glad you could join us!\" one girl said eagerly.\n\n\"Unfortunately, I can't stay long. I just wanted to speak with you for a minute. I know what it is you're interested in, but as you can imagine, the academy isn't the place to talk about it. I invite you all to come to the Knight's Sheath the weekend after next. I'm sure you've heard of it or know someone who has.\"\n\n\"Isn't that place a brothel?\"\n\n\"It is, but more importantly, it's a place off academy grounds, where I'll be giving a special lecture there on all the things you want to know. I happen to be friends with the owner. Think of it as a fitting place for the sultry subject material I'll be discussing. If there are any questions you've always wanted to ask but were too ashamed, such as about the human body, what happens between men and women, or how to achieve indescribable pleasure, I will answer them. I'll also be extending this invitation to the male cadets. Quite frankly, it's an education that all of you need and have been deprived of. It will be a speaking engagement, purely professional, like any other indoor class.\n\nThink it over, and if you know anyone who would be interested in learning, bring them along, but be discreet, and it would be best to not wear your academy uniform. We wouldn't want the teachers finding out about this, would we?\"\n\nHe got up to leave and was waved over by another group of women. He stopped by and gave them the same invitation, same with any men who approached, asking about the lemon trick. By the time Alexis arrived, his lecture was the subject of all the hushed gossip in the mess hall.\n\n\"Where's Sophia?\" Noah asked as they both took their seats.\n\n\"Still in the baths. Several women wanted to hear the details about last night, and she finally broke down and started telling them. I didn't want to listen, so...\"\n\n\"I'm sorry.\"\n\n\"Well, I suppose it was nice seeing her so happy for a change.\"\n\n\"Just wait. You'll make her even happier in the future.\"\n\nDespite her glum mood just moments ago, a smile crossed her face. \"While this isn't how I wanted you to find out about she and I, I can't deny that... it's really nice having someone I can talk to about this.\"\n\n\"They say the weight of a secret is cut in half every time you tell someone about it.\"\n\n\"It is certainly a relief.\"\n\n\"I'm glad. Anyway, after dinner, could you help me in my room with something?\"\n\nAlexis raised her eyebrows. \"Going to your room after dinner? Do you have any idea how many rumors are swirling around you and me already? Until last night, everyone thought we were practically engaged.\"\n\n\"It's magic training. You're the only one I can trust with this.\"\n\n\"What will I be doing?\"\n\n\"Making sure I don't die.\"\n\nAfter dinner, Alexis followed Noah into his room. Before doing anything else, he went to his desk, made a large 'DO NOT DISTURB' sign, stuck it to the outside of his door, and then locked it.\n\n\"This is starting to get sketchy,\" said Alexis.\n\n\"For this, I need absolute focus. During the Red Revelries, I encountered warriors who could make themselves invisible, though the means and result were different from my own. They did it by slowing the flow of mana in their bodies, achieving a form of suspended animation in which light could not touch them, at the cost of all their bodily functions and senses being blocked off. Because their mana wasn't flowing at all, they didn't breathe, and their hearts didn't beat, but even the process of death was halted. It was like they were freezing themselves.\"\n\n\"And you want to try and mimic the technique?\"\n\n\"In a way. When in this frozen state, they still had some awareness of what was happening around them thanks to their spiritual sense, probably their only means of awareness when all their physical senses were halted. When I use my invisibility, my spiritual sense is heightened, but I need to enhance it further. I'm thinking that if I use both techniques at once, I can fully grasp the sensation and become more aware of it.\n\nI'm going to activate my magic and then meditate to try and slow my mana down as much as possible. I need you to monitor me to make sure I don't end up accidentally killing myself.\"\n\n\"You're talking about stopping your heart and breathing while invisible. Don't you think this is a little extreme?\"\n\n\"The people I fought were able to use this technique while standing, meaning that it's possible to retain muscle tension. All I need you to do is make sure my posture doesn't break. If I blackout or worse, I'll slump over, at which point I'll need you to force-feed me this health potion and do whatever you can to wake me up. Just grab a book, sit with me for an hour, and keep checking to make sure I'm sitting upright.\"\n\n\"Fine, but if anything goes wrong, we stop immediately, deal?\"\n\n\"Deal.\" Noah sat down on the floor in the full lotus position. He straightened his spine and made sure every part of his body was where it should be. \"Memorize the height of my shoulders, and every couple of minutes, give a tap to make sure I'm still sitting correctly. Just do so gently. The whole point of this is to block out all physical sensation.\"\n\n\"So no pulling up a chair and using you as a footrest. Got it.\"\n\n\"Thank you. Wake me in an hour.\" Noah then cast his magic and vanished into thin air. This was not his first time meditating with his spells active, as he often used it to train his ability to produce mana and maintain his spells longer.\n\nDespite seeing it already, it still made Alexis flinch in surprise. It was unnerving how his presence completely disappeared, how alone she felt despite him sitting on the floor just a few feet away. She tiptoed over to his desk and looked for a book to read while waiting. He was studying a wide range of materials. She selected a history book and sat down on the floor beside Noah. She began to read while checking on Noah every few minutes, but it was getting harder to stay focused as time passed. She kept reading the same lines over and over without any of the information sticking.\n\nThe smell of Noah's room was making her anxious. It stank of sex, something even a virgin like Alexis could instinctively recognize. After a whole day, the air was still thick with pheromones. She got up from the floor, feeling restless. She grabbed Noah's desk chair and brought it over, trying once more to read, but still, she couldn't relax. She considered sitting on the bed but feared the stains she might end up touching.\n\nShe was trying to forgive Noah and Sophia, trying to put it behind her and hold on to the only real friends she'd ever had, but being in this room, this crime scene, was twisting her stomach into knots. She glared at the empty spot where Noah was sitting, feeling her anger rise. She imagined all the things she wanted to say, all of the new and old feelings she wanted to yell. Finally, she had to speak.\n\n\"Noah, Noah,\" she said, tapping his invisible shoulder.\n\n\"What's wrong?\" he asked as he canceled the magic.\n\nShe steadied herself to keep her temper from slipping. \"I'm sorry, but I have to go. I can't...\" She trailed off.\n\n\"You don't have to apologize. I'm the one that's sorry.\"\n\n\"What?\"\n\n\"I made a mistake in asking you for this, putting my needs ahead of yours. It was insensitive of me to bring you here. I regretted it the moment I closed my eyes, but I wasn't sure if saying something would make it better or worse.\"\n\nAt that moment, Alexis forgot all the things she wanted to say. \"You mean it?\"\n\n\"I do. You don't have to be here. If you wish to leave, go right ahead. You don't owe me anything. I'm sorry I made you feel uncomfortable.\"\n\nAlexis took a deep, shuddering breath and walked towards the door. \"Let's pick this up again tomorrow night, my room.\" She then turned with a tired smile on her face, but it was a smile nonetheless. \"Like you said, you don't have anyone else you can trust with this.\"\n\n\"Thank you. I appreciate it.\"\n\nOnce Alexis left, Noah decided to call it an early night. After his evening with Sophia, he had a heavy sleep debt. The following morning, he and all the other cadets were roused by the horn and got dressed. These morning runs were just getting colder and darker every day. But when they headed downstairs and entered the common room, they encountered someone they did not expect. Galvin had returned, so twisted by stress that he looked strung out like a junkie. Many of the cadets seeing him had to stifle a laugh.\n\n\"What are you looking at?!\" he yelled at anyone who so much as glanced at him.\n\nSeveral cadets grinned as Noah came down the stairs, eager to see the drama unfold. It was like the day he first arrived in the dorms, but the tables had turned. As soon as Galvin saw him, his eyes gained a deranged glint of bloodlust.\n\n\"You,\" he hissed.\n\n\"Oh, Galvin, welcome back. No hard feelings, I hope?\"\n\nThe mad prince looked barely able to contain himself. Any second, he would draw his blade and make a screaming charge. \"This isn't over. I'll get my revenge if it's the last thing I do!\"\n\n\"Listen, Prince, your brother tried to pick a fight with me and he lost his room. You tried to pick a fight with me and lost your fianc\u00e9e. There is a pattern here that you really need to acknowledge.\"\n\nAlexis stood beside Noah, not saying anything, but sporting a smirk, something that Galvin noticed. \"What are you grinning about, bitch? I bet you're just as big a whore as your cousin.\"\n\n\"Say whatever you want, Galvin. There are no words in the world that can make me feel anywhere as bad as I know you do right now.\"\n\n\"I'll make the three of you suffer for this!\"\n\n\"Oh just stop already,\" Noah sighed. \"Galvin, if you know what's good for you, you'll keep your mouth shut and your hands to yourself. God knows that everyone around you would appreciate it.\"\n\nOne of the cadets loudly snickered, and Galvin pointed to him. \"You! I challenge!\" He started pointing to other cadets, shouting the same order.\n\n\"Glad we had this talk,\" said Noah, walking by him.\n\nAlexis and the other cadets followed suit, and outside, she gave him a nudge with her elbow. \"This whole situation isn't quite ideal, but that look on his face was priceless. I suppose I should thank you for that.\"\n\n\"Normally, I try to avoid reveling in others' suffering, but in this case, it's my pleasure.\"\n\nFrom there, the day progressed as usual, but with a couple notable changes. Noah no longer received dirty looks from the cadets. True, his reputation was still far from clean, but he had made his prowess known both in and outside battle. As for Sophia, she remained in high spirits. Her engagement to Galvin was practically nullified, and she no longer had to be by his side. She sat with Noah and Alexis with a warm smile on her face.\n\nThat evening, Noah joined Alexis in her room. It wasn't quite as large and luxurious as the room Noah took, but that was the difference between royalty and nobility. As befitting Alexis, she lived a Spartan lifestyle, even among cadets. It was clean and devoid of personal effects.\n\n\"Welcome.\"\n\n\"Thanks for having me.\"\n\nThere were two pillows on the floor, and they each sat down. \"So, same rules as before?\" she asked, holding a book in her hand.\n\n\"That's right. I just need you to make sure I don't pass out and die.\"\n\n\"Well if you pass out, I promise not to do anything too painful to wake you up.\"\n\n\"I suggest you throw something. Otherwise, I might attack you out of subconscious defense.\"\n\nAlexis gave a soft chuckle, and Noah sensed there was more she wished to say. \"Noah, can I ask you something?\"\n\n\"Go ahead.\"\n\n\"Why are we friends?\"\n\n\"What do you mean?\" Noah had a feeling about what she meant, but it was clear she wanted to explain it.\n\n\"We fought one battle together and barely spoke, but ever since we came here, we've been stuck with each other. What I said in the snow, you have to admit that there was some truth to it. I don't approve of many things you do or believe, while it seems like you disagree with many of my own beliefs. Did we become friends simply because neither of us had anyone else to talk to? Besides, you know I'm of the... other persuasion, so if you're hoping I'll eventually change, I need you to accept that won't happen.\"\n\nNoah took a deep breath, giving her time to say anything she still wished to say. \"I told you that I am not the young man I look to be. I was alive long before you were born, and I'll be alive long after you die. In my travels, I have learned how many things which contradict each other can end up being true. In the grand scheme of things, human relationships, human lives, and human accomplishments are so fragile and insignificant and easily forgotten. But to those who live and breathe in the moment, they are so important. A meaningful bond, is that not something worth pursuing? Worth enjoying?\n\nFor me, everything is temporary. Nothing is 'forever,' just 'for now,' and the only way I can live is to keep reminding myself that those temporary things do matter. Then I meet someone like you, someone who is at least mildly interesting, and suddenly it doesn't take so much effort to remind myself to care. I'm not waiting for you to change who you are and develop feelings for me. Like I said, you would be boring if you were anyone but yourself.\n\nI choose to be your friend because you're strong, you're smart, you're wonderfully competent, and I feel yours is a destiny of promise, a destiny I wish to see fulfilled. Now that's why I'm your friend, but as for why you're my friend, only you would know that. I could probably make a few guesses, but I feel that making assumptions about your emotions and personality would piss you off rather than provide insight. Right?\"\n\nAlexis laughed, one that was genuine and filled with relief. \"You're right, thank you.\"\n\n\"You're welcome. Now, I'll see you in an hour.\" Noah assumed the meditative position and cast his magic, vanishing into thin air.\n\nHe closed his eyes, forcing all thoughts and distractions out of his mind and focusing only on the flow of his mana, shrouding him like invisible flames. He imagined it moving across his body in a cyclical motion, applying the symmetry and uniformity of a spiral. The churning mantle began to settle, the chaos submitting to the order of the current. Soon enough, his mana had calmed, but that wasn't enough; he needed it to grind to a halt. He started gingerly slowing the current while keeping his mana in order, but he'd feel it wriggle out of his control and scatter. He had to use his willpower to hold it together, like he was spinning clay, but rather than slowing the spin, he just felt his grip weakening.\n\n\"Noah!\" Alexis shouted.\n\nFeeling her hand on his shoulder, Noah bolted awake and fell on his back. His heart was racing, and he felt like he had just bungee-jumped. \"Whew, fuck,\" he said as he canceled the magic. \"Did I break my posture?\"\n\n\"No, you were like a statue. It's been an hour.\"\n\n\"Already? I was sure I had just gotten started.\"\n\n\"I kept calling you, but you wouldn't wake up.\"\n\n\"Huh, sorry about that. Did anything happen while I was out?\"\n\n\"No, nothing I could see.\"\n\n\"Well, I suppose that's a good thing.\"\n\n\"I think it would be best for you to call it a night.\"\n\n\"You're probably right.\" He got up and stretched. \"Thanks for this. Would you be willing to help me another time?\"\n\n\"Just don't make it an everyday thing. That was a little too close for comfort.\"\n\n\"I won't.\"\n\nHe left her room and headed for his, unaware of the disappointed cadets in their rooms who had been expecting to hear moans.\n\n-----------\n\nNoah made his weekly pilgrimage to the Knight's Sheath when Sunday arrived. He enjoyed his usual hardcore romp with Bella, burning through the morning hours, and then had a meeting with Cyrilo.\n\n\"You want to teach the cadets how to have sex?\" She looked at him in disbelief, or at least, he thought it was disbelief. When she was in her cat form, it was hard to tell.\n\n\"More like... I want to teach them how to have sex properly. I just want to give a lecture here a week from now, a mix of bedroom and health advice.\"\n\nSitting on the nearby couch, Daniel was laughing so hard that his ribs hurt.\n\n\"This is insane. You know that, don't you?\" Cyrilo asked.\n\n\"A guy I know thinks a man gets a woman pregnant by peeing on her. Another claimed that when a woman can't get pregnant, it's because there are sea serpents in her womb. I overheard a girl saying that a man's penis is like a bee stinger, and sex involves us stabbing women in the belly button. Normally, it's not my prerogative to get involved in stuff like this, but good god, hopefully these people die on the battlefield before they have to chance to reproduce.\"\n\n\"Madam Cyrilo, where Noah and I come from, this kind of stuff is taught to all adolescents in school. I mean, unless you live in the south. They don't actually teach us how to fuck; they just make sure we know how our bodies work.\"\n\n\"Well I want to do both. A lot of these guys don't even know what foreplay is. They think that the faster a man cums, the better at sex he is. Do you really want to preserve that mindset?\"",
        "\"Unfortunately, that is how it's always been. All children are raised with strict adherence to the gods, and all subjects relating to sex are taboo. If this gets out, it'll anger a lot of people. I already get enough grief from the various churches.\"\n\n\"All the more reason to do this. An educated and informed public is vital to the health of a society. It's not like I'm spreading flyers and graffiti all over the city, seducing people with sinful knowledge. I'm just trying to make sure these cadets know what they're doing.\"\n\n\"What makes you think they would even listen to you?\"\n\n\"I beat Prince Galvin in a duel and then took his fianc\u00e9e as my prize. She spent the night in my dorm room, and we weren't exactly quick and quiet about it. Now half the academy is either flirting with me or asking for tips. I figured that since they're asking, I might as well give them the information they really need.\"\n\n\"You cucked the prince? Are you out of your mind?!\"\n\n\"I can handle anything he throws my way. Besides, that girl is now free from his control.\"\n\n\"I swear, you're going to put me in an early grave.\"\n\n\"I'm not sure it's late enough in the day for you to say that.\"\n\n\"Oh shut up.\"\n\n\"Listen, your girls could benefit from this knowledge as well. Plus, every cadet who drops by is another customer, all of them listening to me with a drink in their hand.\"\n\n\"Fine, but you're responsible for everything, and I'm only lending you space. You're going to have to pay if you want any kind of party favors.\"\n\n----------\n\nThe start of the new week brought Noah to his swordsman class, and after, his lesson on the Theory of Magic with Sir Elyot. Suffice to say, there was quite a lot of tension in the room. Sophia, who was typically forced to sit beside Galvin, was now all but clinging to Noah's arm for safety, able to ignore the wrathful glares from her former fianc\u00e9. Galvin, teased and jeered from the moment he returned, looked like he was ready to explode. Even Sir Elyot seemed wary and tried to keep everyone focused on the lesson. As the week went on, Sophia was careful never to walk the corridors alone, out of fear of Galvin's retaliation, and stayed with Noah and Alexis whenever possible. It was a dangerous situation, but an improvement from her horrid engagement.\n\nWhen not studying in his room, Noah would be with Alexis, training his spiritual senses under her watch. Unfortunately, improvements were slow to appear and hard to notice, and he had nothing to compare his progress to. At least in her room, they were less likely to be interrupted. Cadets were constantly coming to him about the lemon challenge, asking for advice and showing their progress. It wasn't long before lemon and lime peels littered the academy grounds.\n\nDuring the weekend, cadets had gone into Colbrand and bought as many as they could from overseas. Because of the mess, the commandant banned their consumption within the academy, but after all the practice they had with smoking, the cadets knew how to get away with it. Lemons became the new currency for gambling, and there was plenty to bet on. Every night, Galvin dueled with anyone who so much as met his gaze. Seraph's anger issues were well known, but Galvin had now surpassed him, attacking every enemy with screaming fury. To his credit, he won almost every duel he competed in, but much of that was due to his hysterical strength. Speaking of Seraph, he had his hands full.\n\nIt was a blustery, frigid evening, the sun having set, and the training field now lit with torches and braziers. Cadets and teachers alike stood by and watched as Gideon and Seraph went at it once more. Seraph, wrapped in a gold mantle, charged at Gideon with an academy sledgehammer, having switched his specialization from swords. It was no issue for him, as he seemed able to use warrior magic with every weapon. Gideon, on the other hand, still preferred to fight barehanded. Like Seraph, he too was alight with mana, but only around his hands and feet.\n\nHe leaped into the air and brought his leg down onto Seraph like an executioner's blade, only for the blow to be blocked. Seraph forced him back, but Gideon stuck the landing in the form of a handstand and spun around, unleashing two wide kicks that broke through Seraph's defense. Gideon landed back on his feet and closed in, aiming for a sharp strike with his hand. Seraph reformed his stance and beat him to it, punching Gideon in the stomach with enough force to make him cough up blood.\n\nRefusing to give in, Gideon grabbed Seraph's wrist and swept the legs, knocking him over and letting Gideon seize him in an arm lock. The two of them fell over onto the frozen ground, Gideon keeping Seraph pinned with his legs while trying to break his left arm. Seraph grabbed his hammer with his right and began beating on Gideon, trying to break free of his hold.\n\nUnlike all the other academy weapons, the hammers came with two configurations, depending on their use. During training, the hammerhead was a large iron block, heavy and unwieldy, teaching the cadets how to handle the great weight when swinging and compensate for the centrifugal force. During duels, the hammerhead was removed and replaced with thick layers of rope and fabric for padding so that bones wouldn't be broken during duels. Still, with Seraph's superhuman strength, Gideon could only withstand a couple of blows.\n\nOn the third swing, Gideon raised his leg and stopped Seraph's arm at the cost of weakening his hold. Seraph didn't miss the opportunity and released a roar of exertion, prompting his mana to flare up like a bonfire. He managed to raise his left arm with Gideon still clinging to it and then slammed him into the ground hard enough to break free completely.\n\nThe two separated and got back to their feet, facing each other. Gideon spat out a mouthful of blood and then charged, attacking Seraph with a hurricane of kicks. While Seraph was stronger in almost all categories, Gideon's tenacity was a formidable obstacle, and his mana-wrapped attacks could cause severe damage, even to a guarded opponent. He was continuously spinning, each attack faster than the last, and Seraph, with all his strength, could only block. Every time he tried to swing his hammer, it would just pass through open air as Gideon upped his speed more and more.\n\nFinally, the curtain fell, Gideon smashing through the handle of Seraph's mace. His defense was broken, and Gideon closed in, his hand flattened like a blade and thrust towards Seraph's throat. The blow never came, as before Gideon would strike, Seraph smashed him in the ribs with the broken handle. With his paladin strength, it was like getting hit with a baseball bat, and Gideon was knocked through the air. He hit the ground and rolled, and though try as he might, he could not get back up.\n\n\"That's enough! Cadet Albion is the winner!\" Sir Reyns declared.\n\nThe bets were settled, and the healers went to work patching Gideon up. This was not the first duel between him and Seraph. They had fought almost every day since Seraph was moved to the barracks, with the idea of a challenger's payment wholly forgotten. So far, he had lost every match, but he kept going at it and had inflicted more damage on the prince than anyone else.\n\n\"Looks like you lose again,\" Seraph taunted as Gideon was healed.\n\n\"It doesn't matter how many times you beat me, you son of a bitch,\" Gideon replied while spitting up blood. \"I only have to beat you once.\"\n\nSeraph simply laughed and walked off.\n\n----------\n\n\"I find this so distasteful,\" said Alexis, following Noah through the entrance of the Knight's Sheath with Sophia in tow. All three of them were in their civilian garb.\n\n\"The first half is just general health information, the kind of stuff that everyone needs to know. You can leave right after.\"\n\n\"I think it'll be interesting,\" said Sophia. \"Besides, part of me has always wanted to see what these places are like.\"\n\n\"Sophia, this is a brothel. Women who set foot in places like this don't come back.\"\n\n\"Relax, this place is a safe and high-end establishment. I've befriended the owner and much of the staff. Just find a chair and get comfortable.\"\n\nThe morning was inching ever closer towards the afternoon, and cadets were starting to stream in, even more than Noah expected. It was primarily male cadets, but there were over a dozen women, each one looking nervous and bashful as they saw the growing crowd. Noah had made it clear that the lecture would be purely professional, but it didn't help that many men talked about having an orgy. Regardless, they all took their seats, though the women sat away from the men. With all these cadets entering the building, the regulars were starting to pay attention, and even the working girls were drawn by curiosity.\n\nSir Holmes, sitting in the corner, was awoken from his nap by the scraping of chair legs and the gathering voices. He yawned and got to his feet, confused by what he saw with his blurry vision. \"What's going on here?\" He walked over to the counter, where Lucius was handing out drinks. \"Oi, Luc, what's all this?\"\n\n\"To be honest, I barely understand it myself, but it sounds like it'll be a lot of fun. Take a seat, enjoy the show.\"\n\nNoah stepped up onto the stage and faced the cadets. \"Good afternoon, everyone. Thank you for coming. I'll be teaching you need-to-know information about human relations. The reason why I'm doing this is because after listening to your talk in the baths and speaking with women who have experience, I've come to the conclusion that you guys, at least, those of you who have actually had sex, are fucking like animals.\"\n\n\"Woo!\"\n\n\"Yeah!\"\n\nA few men tried to start clapping, but Noah stopped them.\n\n\"That's not a good thing. You're acting purely on instinct rather than knowledge, just mindlessly humping with no idea what you're doing or a sense of grace.\" Several courtesans laughed, easing the tension in the female cadets while deflating the men's egos. \"I wish to remedy this. Sex is something for both parties to enjoy. It is a skill requiring effort, technique, and patience. Having the power to invoke mind-shattering pleasure in your partner is something to strive for and take pride in. Now, I have accumulated quite a bit of experience and knowledge, knowledge that I'm willing to pass on. But before I can teach you how to properly do the deed, I need to teach you how your bodies work.\"\n\nThere were two large tables on stage, which Noah had drawn on earlier using chalk. On one, he had drawn a vagina with clear detail and scientific accuracy, as well as the female reproductive system. On the other, he drew a drew a penis and testicles from the front and side with similar internal details. He turned both tables on their sides to the spectators, and their reaction alone made the effort worth it. The cadets were gasping, yelping in surprise, and squirming in their chairs like students in the last five minutes before summer vacation. \"Is that really what it looks like?\" they all kept asking, several just mouthing the words. Most of them were virgins, and their only knowledge of human anatomy was accidentally seeing their parents naked. Even Alexis was leaning forward in her chair to get a better look.\n\nBack at the counter, Holmes turned to Lucius. \"I know I'm not the best knight, but even I can't let this go on. This is gross indecency.\"\n\n\"If you interrupt this, I will never let you nap here again, now shush,\" Lucius warned.\n\nNoah proceeded with his lecture, explaining the intricacies of human sexual anatomy. He covered the science of sex, ovulation cycles, the stages of pregnancy from fertilization to childbirth, the function of menstruation and how to alleviate the symptoms, rules for maintaining proper hygiene, and answered all questions to clear up any misconceptions the cadets had been raised to believe.\n\nNot all of the information was well-received. Many cadets expressed childish revulsion, anger at having their beliefs challenged, and a few even stormed out while claiming that Noah's teachings were \"unholy\" and \"against the church.\" Still, the rest of the audience gave Noah their undivided attention, and from their facial expressions, he could see the satisfaction of their curiosity and confusion being sated. A few had been wise enough to bring parchment and ink and were meticulously taking notes on everything he said.\n\nAt last, Noah stopped. \"All right, that's all the health stuff you need to know. Don't worry, the worst part is over. Be proud that you are now properly educated on the subject of health and sex. You were all patient and handled it maturely, so as a reward, I'll teach you about the fun stuff. Ladies, this next half of the lesson is mainly for the men on proper bedroom techniques, featuring a live demonstration. If that's not your cup of tea, you should probably return to the academy. You're welcome to stay and observe, so you can know what to ask of your future partners and coach them to fulfill your needs. If you're more interested in tips and tricks you can use, I'm sure the wise and lovely courtesans here of the Knight's Sheath would be happy to pass on their knowledge.\n\nFor now, though, I suggest we all take a break. Get some fresh air and food; a lot of you look like you're going to throw up.\"\n\nEveryone seemed eager to get up and stretch their legs, and after talking for so long, Noah needed a drink. He went to the counter and was overwhelmed by a wave of men and women asking more questions and demanding to know where he got all of his information. Throughout the lecture, the audience doubled as regular patrons came in for drinks and stayed to listen. He managed to shoo them away and sit at the bar.\n\n\"What do you think? So far so good?\" he asked Cyrilo, sitting on a barstool.\n\n\"Very well done. Your professionalism was top quality. Have you done this before?\"\n\n\"Not this specifically, but I do have some experience with teaching.\"\n\nNearby, Daniel sighed. \"Man, I really shouldn't have dropped out of school. Way too much of that was new information for me.\"\n\nAlexis and Sophia approached. \"I must admit, I had my reservations about this, but everything I've learned today is... well, I can certainly see why you stressed how important this is,\" said Alexis.\n\n\"Where in the world did you learn all this?\" Sophia asked. \"We healers haven't been taught anything like this at the academy.\" Her claim didn't surprise Noah. She was a member of the Lumendori church, not a doctor. Despite their role in saving lives, the research and practice of magic healing were limited by strict and unusual doctrine.\n\n\"This is all just proper study and education. You should broaden your horizons more. By the way, Alexis and Sophia, this is Madam Cyrilo, owner of the Knight's Sheath, Lucius, the bartender, and Daniel, the entertainment.\"\n\nMadam Cyrilo extended a ring-encrusted hand to Alexis. \"Ms. Veres, what a pleasure to meet you. Noah has spoken of your great skill in combat.\"\n\n\"Oh, uh, thank you very much.\" Receiving a compliment from a brothel owner was not something she expected when she woke up that morning.\n\n\"And Sophia, I heard about the fallout with Prince Galvin. I can only offer you my most heartfelt condolences, as well as my warmest congratulations.\"\n\n\"Oh, thank you, Madam!\"\n\nNoah felt arms wrap around him from behind. \"Daaaaarliiiiiiing! I'm ready to help you with your demonstration!\" She snuck up so suddenly that Sophia perked up in surprise, and Alexis almost reached for her sword.\n\n\"Bella, always good to see you. Unfortunately, I already promised that role to someone else.\"\n\nAlexis shot a glance at Sophia, who immediately shook her head.\n\n\"What?! No! No! No! No! No! No! I'm your favorite! Besides, today is our day! You can't break our routine!\"\n\n\"I'll give you extra attention next week. Now, do you mind? You're making a scene.\"\n\n\"Fine... I suppose it'll be interesting to watch for a change.\" She turned to Alexis and Sophia. \"I'm guessing you two are my darling's academy harem?\"\n\nBoth women went red in the face, Sophia from embarrassment and Alexis from anger. Several cadets still in the parlor were watching closely, having wondered the same thing.\n\n\"You foul--! I am not a... a...\" Alexis was on the verge of shouting some derogatory term, but stopped herself, afraid of insulting Sophia.\n\nNoah flicked Bella on the forehead. \"Hey, don't be rude. These two are my friends.\" He turned back to Alexis and Sophia. \"Sorry about that. Anyway, you should head back to the academy. You don't want to see what comes next.\"\n\nAlexis collected herself. \"You're right. This isn't the kind of thing for friends to see. As for the first half of your lecture, I'm very glad I decided to come. Madam Cyrilo, I bid you good day.\"\n\n\"Thank you for the lesson,\" Sophia said with a bow of her head.\n\nOnce they were gone, Noah moved to the back room, where a recent acquaintance was waiting; Allison Crowberry. When looking for someone to play the role of his lovely assistant, her name was still fresh in his memory. It took very little to convince her to do this.\n\n\"You ready for this?\" Noah asked.\n\n\"My parents sent me to the academy to try and straighten me out after they caught me in the barn with two of the stable boys. I am more than ready for this!\" She was wearing a thin gown with nothing underneath, and to protect her identity, she also wore a feathery mask that hid the upper half of her face and concealed her dirty-blonde hair. Noah adorned one as well. The cadets knew who he was, but he preferred no one else did.\n\n\"All right, showtime.\"\n\nShe followed him back out to the parlor and up on stage. Noah looked over the crowd, surprised by the number of female cadets still present, many of whom were biting their lips in anticipation.\n\n\"Well, ladies and gentlemen, you've been patient, and your patience will be rewarded. I'm not going to teach you how to fuck; I'm going to teach you how to satisfy. With me is my lovely assistant. Now, let's get started, and the best way to start is with a kiss. You don't want to go in with your mouth open. You want to keep your teeth close together with your lips parted just enough that you can pinch your nose and still breathe. Give it a shot.\"\n\nThe cadets obeyed, even the women, and there was the sound of focused breathing.\n\n\"Good. Remember that. Now in person...\" He turned to Allison, leaned in, and kissed her. It was gentle, brief, and perfect. \"That is the ice-breaker. Next, you can increase the intensity a little, but you want to stay at your partner's preferred pace. Don't go from a peck straight to slobbering their face like a dog.\" He cupped Allison's cheek and kissed her again, and she eagerly reciprocated. She pulled him closer the same way, and their lips undulated together in erotic excitement. All the cadets were analyzing every movement the two of them made. Noah pulled his lips away, much to her displeasure. \"Once the two of you are properly warmed up, then you can start using tongue.\"\n\nThey resumed their kiss, and Allison's tongue shot into his mouth like she was trying to steal his fillings. Noah countered, their tongues swirling together in a knot that he let the audience see. The young men and women were getting all worked up and squirming in their seats.\n\n\"Now, if the intention of sex hasn't been made clear, this is as far as you go. The most important thing is consent. If your partner says anything but an honest and genuine yes, you stop right there. No matter how long you've known them, if you've had sex before, or even if you're married, if they say no, then don't ignore them or try to change their minds. You stop and respect their wishes. Now, if you have their consent, then you can--\"\n\nAllison didn't wait for him to finish speaking and pulled him back in to resume their kiss. While they swapped spit, Noah unbuttoned her dress and let it fall around her ankles. He turned her around and pulled her against him, flashing her naked body to everyone. All the men watching were pitching tents, and the women were rubbing their legs together. More and more people were streaming in, wanting to drink or screw and now finding themselves transfixed.",
        "\"Foreplay is just as important as the actual penetration, but you have to remember to be gentle. Your goal is to build anticipation through stimulation, and a soft touch is better than a rough one.\"\n\nHe began moving his fingertips across Allison's unclothed form. So soft a tickle, yet so strong reaction. He touched her flat belly, making her gasp. He explored her thighs, making her shiver. He caressed her breasts, making her whimper in desperation. At the same time, he kissed the sides of her neck and nibbled on her ear lobes.\n\n\"Everyone has erogenous zones, places that aren't inherently sexual but provide similar excitement. If you know what you're doing, you can make any part of your partner's body feel that way. If you love them, you should know and worship every inch of their flesh. But of course, two of the most important areas are the breasts.\"\n\nHe continued to run his fingertips across her skin and around her areolas, tormenting her with anticipation, before finally seizing them in his grasp. She was flushed and panting as he massaged them, putting his skill on display for all to see.\n\n\"Remember, you aren't supposed to strangle or grip them or dig your fingers in. It isn't wholly dissimilar from kneading dough, but dough doesn't feel pain. Your goal is to exert a pleasurable force on her flesh on both the inside and outside. The difference between being rough and being powerful is knowing how and where to apply pressure. Once you've gotten acquainted, then you can toy with her a little.\"\n\nHe started to tweak her nipples, making her whine and gasp for air. He resumed kissing her neck and her ears while enjoying her supple flesh. Allison let Noah play with her as he wished and basked in the pleasure. Like her, the women in the audience were rubbing their legs together and fanning themselves. Even the courtesans were transfixed with jealous gazes. As for the men, almost all of them desperately needed a few tissues.\n\nNoah increased the intensity, and Allison moaned with her whole body shaking. It was a sound that no one would mistake. Even the virgins in the crowd, those who hadn't even overheard Noah's tryst with Sophia, knew what the sound meant.\n\n\"My, my, did you cum just from having your breasts played with?\" Noah asked. Allison frantically nodded her head as she sucked in air. \"Keep this in mind, gentlemen: True power doesn't come from the ability to cause pain, but to invoke pleasure.\" He moved out from behind her and had her sit on the table, her legs spread wide so that everyone could see her glistening arousal. \"Look at how ready her body is, how eager.\"\n\nHe began stroking her pussy, enjoying the softness of her labia and the wetness of her anticipation. \"In the first half of the lecture, I told you about the clitoris and made sure you all knew where to find it. Now to put that knowledge to use. Remember, though, gentle.\" He stroked around her clit, rubbed the nub gently between his fingers, swirled it around with his thumb, everything short of taking it out to dinner. That soft touch was all it took for Allison to hold onto his shirt, murmuring profanities in ecstasy. At that moment, if he had invited any of the women up onto the stage, they probably would have jumped at the chance.\n\n\"Now, remember when I told you how important it is to keep your nails short? Make sure the edges are smooth, and you don't have any hangnails? This is why.\"\n\nHe inserted his fingers inside her and played her like an instrument, producing beautifully sensual music. He supported Allison with one arm, letting her look down and see the palm of his hand as he finger-fucked her. \"Never underestimate what you can accomplish with just a finger. The dexterity and accuracy are hard to match with your manhood. You want to focus your attention on the front wall because that's where the g-spot is. Since you're all newbies, you want to be soft and careful. Once you've got enough experience, then you can do this.\"\n\nHe went thoroughly on the attack, blasting her pussy with his digits and invoking a sexual seizure. She lay on the table, arching her back and crying out to every god she could think of. Her legs were kicking, and she was jittering from spasms. Even after making her squirt, he kept going. It was an intense experience, both to feel and watch. All the men were bouncing their legs and shaking the tables, while many of the women, if not staring obsessively, were covering their eyes as though watching a horror movie.\n\n\"I think I love you...\" Allison declared when Noah finally removed his fingers, loud enough for everyone to hear. He held them up to her face, and she greedily sucked them clean.\n\n\"See that? My pants aren't even off, and I've already given her multiple orgasms. You should make sure that your partner cums before you do. If you have trouble with stamina, then you should master the art of foreplay.\" He lifted Allison's chin, admiring the look on her face as she gazed at him in sexual reverence. \"Now, I think my lovely assistant is in the mood to return the kindness. On your knees, dear.\"\n\nShe was happy to oblige, getting down on the floor and opening his pants, letting his erect member spring out. Fate was kind to him, for the light was just perfect to cast a distinct shadow across her face. It disappeared into her mouth, and she began bobbing her head back and forth.\n\n\"So, any questions so far?\" Noah casually asked the audience as Allison hungrily slurped his cock. No one said anything. He rested his hand on the back of her head. \"Men, when you have sex, there are two strategies. The first is to try not to cum for as long as possible, but that's not how I like to do it. I prefer the second strategy, which is to get that first shot out of the way early. That'll take off a lot of the pressure. The challenge is not letting that orgasm take all of your strength with it. Women can orgasm multiple times and still keep going, though it takes more effort. Men can orgasm like that,\" he said, snapping his fingers, \"and then we feel the need to go home and take a four-hour shame nap. You need to resist that urge. Now is the time to let that easy shot go. Now, my dear, if you would please.\"\n\nHe pulled out and she opened her mouth wide, sticking her tongue out. Noah jacked himself off and shot several white ropes across her face and into her mouth, shocking the female cadets. Allison rolled his cum around her mouth, showed it to him, and then swallowed.\n\n\"Ladies, you don't necessarily have to swallow it if you don't want to. Just know that it gives you a lot of bonus points if you do. Now, as you can see, I've lost my erection and need a little bit of time to get it back. Let me show you the best method to buy time. Back on the table, dear, in the same position as before.\" She sat on the table with her legs splayed. \"This is what that practice with the lemons was for.\"\n\nNoah kneeled and started licking out Allison's honeypot, once more making her moan like she was singing opera. While no one could see what Noah was doing with his tongue, they could certainly imagine. He gave her the same treatment as Sophia, nibbling on her inner labia with his lips, swirling his tongue around deep with her recesses, and sucking on her clit like she had just been bitten by a snake. He was gentle, he was forceful, and everything in between, and it sent Allison smashing through a wall of orgasms. Finally, Noah stood up and licked his lips.\n\n\"When it comes to oral sex, the rule is that if you receive, you also have to give, but that rule also depends on hygiene. Trust your nose. Suffice to say, it's not something you do with a prostitute. Sorry, ladies,\" he said, addressing the courtesans.\n\n\"Boooooo!\" Bella heckled.\n\n\"Anyway, that's enough foreplay. What's say we get on to the main event?\"\n\nMost of the cadets wondered if they could handle it. Just watching was utterly exhausting, and everyone desperately wanted to rub one out. Noah stripped off his clothes, earning the approving gazes of all the women. He turned Allison around on the table to give everyone a side view.\n\n\"On the key functions of foreplay is to get your woman nice and wet to cut down friction. The vagina is self-lubricating, but you need to provide stimulation to get it to optimal settings. Once she's ready to go, you slide in and start your thrusts.\"\n\nHe penetrated Allison, making everyone shudder in arousal. Then, when he started picking up movement, her moans were free to bounce off the walls. He fucked her like a machine, sending ripples through her body that everyone could see.\n\n\"Make sure you keep control of your breathing. If it's unsteady, your strength will falter. Also, don't just use linear thrusts, going straight back and forth. Gyrate your hips a little; make sure you hit all the walls. Really stir her up.\"\n\nNoah shifted through various positions for more than an hour, both basic and complex. He fucked her on tables, chairs, the floor, on top of her, beneath her, in front of her, and in the back, all while narrating with tips and advice. He finished with doggystyle, positioning her on all fours towards the crowd so everyone could see the look on her face as she was railed from behind. Finally, he pulled out of her, with a string of semen stretching between his deflating cock and her foamy creampie. The stage was sticky with sweat and cum.\n\nNoah got up and stretched. \"Woo, that was a nice quickie. Since this is just a demonstration, I'll have to forgo the usual cuddling and pillow talk. Anyway, that's all the stuff you folks need to know. Everything else, you'll learn with experience. I'd like to give a special thanks to my lovely assistant and all of you for coming out.\"\n\nHe received a standing ovation, minus the many men and women who weren't quite ready to stand up. People came in throughout the lecture, building an audience close to Daniel's shows. Now men were snapping up courtesans and rushing upstairs to try out all the stuff they had seen, while many women gazed lustfully at Noah. He got dressed and once more headed to the counter. This time, rather than a dozen cadets pressing him with questions, it felt like half of Colbrand was swarming over him.\n\n\"Lucius, Cyrilo, a little help!\"\n\n\"All right, folks! Clear back! Give the man some space!\"\n\nLucius managed to pull him out and get him to the bar, where he was grateful to have a chance to sit down, quench his thirst, and have a smoke. Most of the staff had overheard his weekend sessions with Bella, but seeing it in the flesh, they looked at him with eyes full of awe. Bella herself was now clinging to his back and shaking her tail. \"I am so fucking horny right now!\" she screamed.\n\n\"How the fuck are you able to do that, really?\" Daniel asked. \"Were you staring in hardcore porn as an after-school job?\"\n\n\"I just have a lot of experience. Let's leave it at that.\"\n\n\"Noah, forget the knighthood, come work for me,\" said Cyrilo. \"I was skeptical at first, but I now know what you mean about the value of an informed and educated public. More people need to hear that health lecture, and your live demonstrations will rake in audience members. Between your shows and Daniel's music, we could get rich selling tickets alone.\"\n\n\"Well I can't leave the academy. I just can't. However, I wouldn't be opposed to maybe doing some shows in the future. Let's talk again next week.\"\n\n\"I'll hold you to that.\"\n\n\"Anyway, along with gonlief, I strongly suggest you start selling lemons.\"\n\n----------\n\nAfter taking a break, he headed back to the academy with Allison. She had to lean on him for support, as she had no strength left in her legs. He went straight for the baths and settled into the hot water with a sigh of bliss. He kept his face hidden with a towel so that no one would bother him and listened in the chatter. Of course, everyone coming back from the Knight's Sheath had quite the story to tell. It was a flustered storm of health facts and sex details, with many cadets having to wrap towels around their waists to hide their excitement.\n\nAfter washing off the scent of sex, he got dressed and headed for the mess hall, where, both unfortunately and unsurprisingly, his popularity had reached all new heights. Countless women were fawning over him, and numerous men now wanted to be his best friend. Just getting his food and taking his seat was a trial, and when he did sit down, it was in front of Alexis and Sophia, one looking like she had a lot to say and the other blushing to the point that she couldn't make eye contact.\n\n\"Well, it would seem your lecture was a big hit,\" Alexis said dryly.\n\n\"Beyond my expectations, though it's good you left when you did.\"\n\n\"That didn't exactly keep us safe from the indecent details of your debauchery. The girls in the bath were retelling everything that happened. I heard a lot of things that I didn't want to hear. It's a very unpleasant trend that I'm noticing.\"\n\n\"Just be happy that they're happy. They know how their bodies work and how to enjoy healthy physical relationships. It feels like I'm the first person in Colbrand to actually explain why rape is bad. I should be given my own holiday.\"\n\nNoah had just taken his first bite when the commandant entered the mess hall. \"Cadet Noah, in my office, NOW!\"\n\nNo one had ever heard the commandant yell like that, and the whole mess hall became as silent as the grave.\n\n\"It was nice knowing you,\" said Alexis.\n\n\"Don't count me out just yet,\" Noah replied calmly.\n\nHe got up from the table and left the mess hall with hundreds of eyes following the commandant. Upon reaching the office, he was ordered to take a seat. Sitting behind his desk, Ford glared at him with burning rage.\n\n\"I warned you after the scandal with Prince Galvin. Now give me one reason why I shouldn't expel you right now.\"\n\nNo point playing innocent. \"How about the fact that my social gathering was held outside of the academy, during my free time, and everyone was wearing their civilian attire?\"\n\n\"That does not erase what you did! Your filth and smut have poisoned the minds of my cadets! Do you have any idea how much of our funding comes from the church? Once this gets out, both the church and the palace will want someone's head on a pike, and I will be volunteering you!\"\n\n\"Strange, isn't it? Why is it so right to teach people how to make war, but so wrong to teach them how to make love? If I had given a lecture on exterminating beastmen, what would your reaction be? If I went onstage and slit a man's throat for the glory of Uther, would you be giving me a commendation?\"\n\n\"Spare me your excuses. You're expelled.\"\n\n\"Please reconsider. Though you may disagree with my actions, my loyalty has always been to Uther. I have skills to contribute, and I want the chance to live and die for my country.\"\n\n\"Then the regular military can deal with you. I will not have you under my roof for another night.\"\n\n'He just had to make it difficult...' \"Hmmm, the life of a lowly soldier really isn't for me. Maybe it's for the best if I give all this up then. I'm sure someone of my skillset will be able to find employment elsewhere. After all, I went head-to-head with Valia Zodiac with a broken sword and no magic, and I've spent the past several months in Uther's top training facility, learning things like the nation's strengths, weaknesses, battle tactics, military structure, and everything else in the library. You know, now that I think about it, there should be quite a few people--and countries--chomping at the bit to offer me a good position.\"\n\nThe mood in the room had turned. \"So much for your loyalty to Uther,\" Ford growled. \"You think you can threaten me or this country?\"\n\n\"I'm just reminding you of the simple fact that I can either wander off as a free agent, or you can keep me here under your thumb.\"\n\n\"Or I can have you thrown into a dungeon where you will never see the light of day again.\"\n\nNoah laughed. \"Ah yes, the option of violence. Sure, you could order in the troops, try to have me arrested, but do you really think I'll go quietly? How many lives would be lost before I was finally taken down? A lot, I can tell you that, and you'll take the blame for every single one of them. Hopefully, it would just be soldiers who'd end up dead. Imagine if the other cadets were to get caught in the mess. The wrong noble kid gets used as a meat shield, and you won't even have the option of resigning in disgrace. As for me, well, I'm very good at slipping away.\"\n\n\"You arrogant little--\" Ford was cut off before he could finish that exclamation, silenced by the feeling of something sharp against his throat. He didn't dare move or even turn his head. It didn't make sense; only he and Noah were in the room. He couldn't even see the blade, but he knew it was there.\n\n\"Now, now, let's not be unreasonable. While it would be so easy to slaughter half of the students and staff, along with anyone who tried to arrest me, and then disappear to never be seen again, that is not an outcome I'm interested in. So, rather than resort to bloodshed, let's act like rational adults and talk this out. I'm sure we can come to a compromise that would benefit us both. I would very much like to remain at this fine institution until the end of the year, and if you let me stay, I won't tell anyone about the affair you've been having with two cadets.\"\n\n\"How did you find out about them?\"\n\n\"I searched your office after I was here with Seraph. I had a feeling that you and I would lock horns in the future, so I decided it would be good to have something on you I could use. I collected a suitable amount of evidence and have left it with a friend in the city with strict instructions, that should anything happen to me, it will be passed on to your wife, colleagues, and everyone above you. Still, I know that for the sake of appearances, I can't simply walk out of here without receiving some sort of punishment. I'm offering to make a public apology to the rest of the cadets, admonishing myself for bringing shame to the academy, asking the gods to have mercy on my sinful heart, and all that other good stuff. I'll even run double laps for a while to make it look convincing. So, what do you say? Do we have a deal?\"\n\nThe commandant breathed as deeply as he could with a blade to his throat. \"Deal.\"\n\n\"Wonderful. Now, let's head back to the mess hall, shall we? Today I was a teacher, a performer, and now an actor.\"\n\n----------\n\nThe evening was filled with restless cadets with busy hands. Lying in their beds, all the men and women who had seen Noah's demonstration, or simply heard it described back at the academy, were now trying to quell the lustful memories buzzing inside their heads like storms of hornets. Their faith was nothing compared to the strength of their lust.\n\nThe women fantasized of Noah running his fingertips across their bare skin, kissing their necks, massaging their breasts, and driving deep into them with the force to make them call out to the gods. The men were imagining all the women they had ever lusted for, be it former loves, childhood crushes, or simply the pretty little number in their spear training class with the nice eyes. There were so many things they now wanted to do to them, all courtesy of Noah's lesson. They wanted to hear those women moan in ecstasy and cry out their names in submission to their erotic skill.\n\nSophia was among them, much to her shame. Everything she had heard in the baths was riling up memories of that passionate night. She stirred her fingers around inside her moist slit while playing with her nipples, thinking back to everything Noah had done to her. Until now, she had been able to resist temptation. After she spoke with Alexis, she promised herself that she would forever put Noah out of her mind, that the chapter of their night together was over, but it wasn't so simple.\n\nOf all people, it was Bella who made her break this promise. It was easy enough to understand what she meant when she said she was Noah's favorite and they had a routine. Every week, did she get to receive Noah's skill for endless hours? Every week, did Noah suck on her breasts and drive into her until she felt like her body would melt? Did he make her cum to the point of shedding tears of lustful madness? She couldn't get it out of her mind, the jealousy, the fantasy, the memories. Her heart belonged to Alexis, but her flesh craved Noah's touch like a drug. It was only for one night, but her body had become addicted to serving as his plaything.",
        "Lying in her own bed, Alexis was abstaining from self-pleasure, but she couldn't stop tossing and turning. She remembered what the women in the baths had described. Rather than the other women whispering Noah's name as they played with themselves, she related more to the men who wished to emulate him. She repeatedly looked to her bedside table, at a lemon she had grabbed earlier. Ever since she found out what it was truly for, she hadn't been able to stop thinking about it.\n\nAlexis had always prided herself on her willpower and ability to resist pain. She would train and fight until her hands bled and she felt like she would throw up, always denying herself a moment of rest. Still, the promise of pleasure, sinful as it was, was corroding her iron will like ocean waves. She finally sat up and grabbed the lemon, then cut it in half with the knife she always kept under her pillow.\n\nShe lay back down, staring at one half of the lemon, as the smell of citrus filled the room. She brought it to her lips and kissed it, then began to slide her tongue across its exposed flesh. It should have tasted sour, but with thoughts of Sophia in her mind, it tasted sweet. Memories began to slip into her mind, the night Sophia spent with Noah and all the noises she made. Alexis kissed, licked, and sucked on the fruit, imagining Sophia's moans as the reward for her effort. The flavor filling her mouth, she imagined it to be the taste of her lover's nectar, and what she thought would calm her instead got her more worked up.\n\nHer body refused to remain still, and she stretched and writhed in her bed while she savored the lemon's taste, so sinful on her tongue. The nightgown she was wearing was pulled out of the way, her free hand finding its home between her legs as instinct took over. She stroked her pussy, wet from arousal, and imagined it was Sophia touching her while Alexis slurped on her honeypot. The movements of her fingers became more forceful as she remembered everything the women in the baths had said. What was it called? The clitoris? She focused her effort on it, soon having to cover her mouth so no one would hear her moan from the euphoria of her orgasm, the first of her life, but not the last of the night.\n\nIn this sea of adolescent lust, the only cadet sleeping peacefully was Noah himself, unaware of the sexual maelstrom he had left so many others in.\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "isekai",
        "fantasy",
        "action",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-07"
}