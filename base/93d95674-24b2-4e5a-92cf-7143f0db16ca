{
    "title": "A Crappy Holiday Get Together",
    "pages": [
        "Author's Note: This story is one part fiction, one part fantasy, and one part painfully real. I'll leave it to you to decide which part is which.\n\nIt's posted in the fetish category due to some light bathroom activity. It's definitely nothing too extreme, but if anything bathroom related is a deal-breaker for you, do yourself a favor and check out one of the many other holiday contests stories.\n\nIf you're still on board after all that, please enjoy the story. Since it is a 2018 Winter Holiday Contest, please consider voting and leaving comment. As always, I'd love to hear from you and appreciate the feedback and emails.\n\nLastly, I would like to give a huge thanks to my test readers and editors. I greatly appreciated their feedback and helping improve the story!\n\n-------\n\n\"Come on. It won't be so bad.\" Hana said.\n\n\"I'm sure your family is fine, it's just...I don't know. Spending a few days with your mom, brother and sister in one house seems like a lot of time for a first meeting.\" I said already beginning to stress about my lack of privacy and downtime for the holidays. The drive was a little more than halfway done and each mile closer I became a little more on edge.\n\nGet togethers with my own family have always been a source of stress for me, let alone with my girlfriend's family. Girlfriend? That label felt so premature. We've been dating a couple weeks, but we never really talked about our status. Since she asked me to come and meet her family for Christmas, I assumed that meant we were getting a little more serious. But who really knows.\n\n\"What if they don't like me?\" I asked, which wasn't really my concern, but it sounded better than saying \"What if I'm sick of hanging out with your family after a few hours and want to get the hell out of there?\"\n\n\"They're going to love you. Just relax. You're too tense.\"\n\n\"You're probably right. Sorry, I'll try to enjoy myself. I'm just over thinking it.\" I said as I changed lanes and made my way to our final exit off the highway.\n\n\"I think you'll really like my family. And I know they'll like you.\" Hana said encouragingly. \"As long as you can deal with crazy, you'll be fine.\"\n\nShe chuckled as she saw my shoulders tense up all over again.\n\n\"Can you define crazy?\" I asked dryly.\n\n\"Oh, just your typical stuff. My mom likes to drink and will do whatever she can to get others to drink with her. My younger sister is usually quiet and maybe a little jealous of me sometimes, but she's harmless. And my younger brother...hmmm, no I don't think I can define his craziness. He's just crazy.\"\n\nMy face melted into a blank stare of concern.\n\n\"Relax, Cody. Everything will be fine. Trust me.\" She said, placing her hand on my leg and started to massage my inner thigh.\n\n\"What are you doing?\" I asked as her hand wandered further up my leg.\n\n\"Nothing. Just helping you relax, that's all.\" She said with a sly grin as her hand traced the outline of my growing shaft in my pants. Quickly she unzipped my fly, reached in and carefully pulled out my semi-erect penis.\n\nAs she gently stroked my thick shaft, I could feel it growing in her hand. \"Just keep your eyes on the road and try to relax.\" She said as I saw her head lower out of the corner of my eye. Soon I felt her warm mouth slide over the head of my penis, lightly making audible kissing noises as she teased the tip.\n\nWith one hand on the wheel, I carefully navigated the GPS instructions while my other hand brushed her dark, brown hair out of the way, so I could glance down and see the side of her face teasing my length. She started to kiss her way down the underside of my shaft down to my balls.\n\nI had to use two hands to make a tight turn, and I felt her mouth suck on each ball while stroking my shaft. \"Fuck that feels so good.\" I said. She picked up the pace and returned her attention to my shaft, as she slid nearly the entire length into her mouth while massaging my testicles with her free hand.\n\nI moaned softly as she used her dripping saliva to help her hand slide back down my shaft, cupping my scrotum tightly with both hands trapping the heat on my sensitive flesh.\n\nI could feel her neck muscles twisting and tightening as I rested my hand on her back, massaging her neck and shoulders.\n\nMy hand seemed to have a mind of its own and I hooked her bra through the fabric of her shirt. \"Fuuuck, I'm close.\" I said trying to catch my breath.\n\n\"That was fast.\" She said as her head bounced up leaving my saliva-soaked cock nearly shaking.\n\n\"Fast? I didn't even finish yet.\" I said, now craving the feeling of her warm, wet mouth around my neglected shaft.\n\n\"No, not that. We're here. I thought we had another twenty minutes of driving.\" She said as she directed me to the driveway of her childhood home.\n\n\"Oh, damn it. Guess I had a bit of a lead foot while you were...\" I nodded downward as I pulled into the driveway.\n\n\"Sorry about that.\" She stroked my shaft once more and twisted it until it fit back inside my jeans and zipped me up. \"I promise I'll finish what I started. But you'll have to hold off for a few days while we're here.\"\n\n\"A few days?\" That sounded like an eternity. \"Why can't we just go finish in your room now? Or at least tonight?\" I said with the distinct sound of teased desperation.\n\n\"Because we can't stay in the same room. This is my childhood home, Cody. My mom would never allow that. Her house. Her rules.\" She said with a sympathetic smile. \"So, you'll just have to keep it in your pants for a couple days.\" She gave me a quick peck on the cheek. As she started to leave the car, she had a confused look as she grabbed her chest. \"Did you unhook my bra?\"\n\nI shrugged my shoulders playing innocent.\n\nShe shook her head and reached behind her back to clasp it shut. \"I'm going to go try to find my mom. Why don't you bring our bags up to our rooms on the second floor, my room is at the end of the hall, and yours is right next to the bathroom.\"\n\n\"Sure thing.\" I said with gritted teeth. This holiday trip was already worse than I imagined. It was bad enough I was trapped here, but now I was going in with blue balls and I didn't even get to sleep with my girlfriend, or whatever she was. Happy holidays to me.\n\nI unloaded our two bags and dragged them into the house and up the stairs. Her room was right where she said it would be at the end of the hall. I dropped off her stuff and looked for my room. I found the bathroom and saw the room just next to it. Must be mine. At least I'll be right next to Hana's room, small consolation but better than a different floor, I guess.\n\nAs I opened the door and walked in, I was greeted with a loud shriek. \"Jesus, don't you ever knock?\" Said an unfamiliar voice. There was a girl standing there in pink panties, clutching her breasts. \"Oh, you must be Cody! Nice to meet you. I'm Sasha.\" She said and held out a hand while still covering her breasts with her other arm.\n\n\"I'm Cody. As you clearly already know.\" I wasn't sure what to say, or even where to look as I shook her hand. \"Sorry for barging in. I thought Hana said I was the room just to the side of the bathroom. Guess I'm in the other one.\"\n\n\"No problem. You can just go ahead and shut the door.\" She said with a smile.\n\n\"Of course. Again, I'm sorry.\" I said as I quickly headed to the door and was about to close it on my way out.\n\n\"So how long have you been dating my sister?\" She asked as I was nearly out of the room.\n\nDid she want me to answer and then leave? Leave and answer through the closed door? \"Uhhh...\" I stalled trying to figure out what she wanted.\n\n\"Close the door, will you?\" She said as she turned around and fished out a bra from her dresser. \"Hana has told me a lot about you.\" Her back was now facing me, and I could see her plump, round cheeks spilling out of the lower corners of her tiny pink panties. She slipped her bra on over her shoulders and hooked it behind her back.\n\nI shut the door and remained in the room. \"We've been dating a few weeks now.\" I said finally answering her question.\n\nSasha turned around and found some jeans on the floor. She bent over, picked them up and stepped into them, pulling them up over the curves of her hips.\n\nI must have looked like a fool, staring at the teasing show, watching her mesmerizing curves get covered up.\n\nHer phone buzzed, and she smiled seeing who it was. \"Excuse me, I have to take this.\" She said and answered cheerfully as she plopped on her bed.\n\nI saw myself out and closed the door behind me. The room next door was a bathroom and the one next to that had to have been mine. I walked in, set my stuff on the floor and fell face first onto the bed.\n\nIs it Sunday yet? I asked myself to hope the weekend was already over. Maybe Hana was right, maybe this won't be so bad. Her sister seemed really nice. I felt bad for walking in on her like that, but she didn't seem to mind. Cute girl, I thought to myself, briefly reliving the moment and imagining her holding her breasts again. Her cute little cheeks in those pink panties. Just what I need, on the weekend where I can't fool around with Hana, another image turning me on.\n\nI needed to pee badly after the long road trip and wandered into the adjoining Jack and Jill bathroom, closing the door behind me. The toilet was on the far side, right next to the door that exited into Sasha's room. I undid my fly and pulled out my blood-filled, but flaccid, penis and tried unsuccessfully to pee. There was no fan in the bathroom, so everything echoed in the room. I hated the fact that Sasha would probably be able to hear every small noise in here, and I just stood there hopelessly trying to pee.\n\nAs I was finally starting to feel a small trickle of urine, the door just to the side of me burst open.\n\n\"Oh my god, I'm so sorry.\" Sasha said, doing her best not to stare at my penis. \"I should have knocked.\" She added, occasionally stealing glances below.\n\nI wasn't sure what to do, as my stream finally started to strengthen. It was so built up there was no way I could stop it or turn to the side without peeing on the floor. I finally held my shaft with both hands doing my best to cover it up.\n\n\"Uh, it's okay...I mean I barged in on you without knocking...guess we're even.\" I said, still holding my penis awkwardly and failing to really conceal it.\n\n\"That's true.\" She giggled and walked into the bathroom, shutting the door behind her. \"I did listen in at the door before entering, but didn't hear anything so I thought it was safe to come in.\"\n\nI blushed. \"I'm a bit bladder shy sometimes...hard to get started.\" Without even realizing it, I removed my second hand that was doing the majority of the covering and now left the side of my penis closest to her completely exposed.\n\n\"Ah, yeah. I get that in new bathrooms sometimes.\" She clearly glanced down at my fully visible penis and added with a laugh. \"Looks like you're over your shyness now, though.\"\n\n\"Oh sorry.\" I blushed again realizing I was inadvertently flashing her. \"Just about done.\" I said hoping I was but didn't feel like that was the case as my stream continued for at least another 30 seconds.\n\n\"What are you, a camel?\" She laughed, finally breaking her gaze and started looking in the mirror, adjusting her hair.\n\nEventually my stream died down to a trickle and I shook off the last few drops, before tucking my thick shaft back into my pants and flushing.\n\n\"Thank god!\" She laughed and squeezed around me, pulling her pants down to her knees and lowered herself onto the seat. \"Didn't want to rush you, but damn I had to go too.\" She giggled as a tiny, muffled fart escaped from the bowl her legs almost fully covered. \"Excuse me.\" She blushed.\n\n\"You're in a bathroom, no excuses necessary.\" I said politely but couldn't hold back a laugh as I started to leave and give her some privacy.\n\n\"Aren't you forgetting something?\" She asked as I was nearly out the door.\n\n\"Ummm...no?\" I said staying in the bathroom a few moments longer.\n\n\"You don't wash your hands after you go?\"\n\n\"Oh, right. I was just trying to give you a little privacy.\" I said as I walked to the sink, secretly amused I had an excuse to stay in the room a little longer.\n\n\"Huh, privacy? Not really used to that in this house.\" She said as her own trickle started to echo from the bowl.\n\nI was washing my hands more thoroughly than necessary to stay in the room with her, the door leading to the hallway whooshed open. A younger looking, wiry guy flew through and shut the door behind him.\n\n\"Damn it, Sasha. I gotta pee.\" He said, not the least bit sorry for walking in on her.\n\n\"It might be a while.\" She replied.\n\n\"Gross. Well I can't wait that long.\" He said walking over to the side of the tub. With his back to us, he unzipped his fly and his powerful stream almost instantly splashed against the base of the tub, creating a deep resonating sound.\n\n\"Ahem...\" Sasha coughed. \"Maybe you should introduce yourself to Hana's guest.\"\n\nHe cocked his head over his shoulder and saw me for the first time. \"Oh, my bad, man.\" Still peeing, he reached out his free hand to me and said, \"I'm Zach.\"\n\nReluctantly I shook it, noting how I've never met and shook a guy's hand while he was peeing before.\n\n\"Nice to meet you, Mark.\" He said, glancing back at the tub to focus on the task at hand.\n\n\"Actually, this is Cody. Hana and Mark broke up, remember?\" Sasha said as if to help me out.\n\nI was too surprised by everything going on to realize he called me the wrong name.\n\n\"Ah, Cody? Cody? Hmmm, don't think I've heard her mention you. It's tough to keep up with all the guys she dates.\" He said lightly moving his hips making zig zags in the tub with his stream.\n\nAll the guys she dates? I did not like hearing that. Was he just being a protective brother and trying to get me to leave? Was it true that she dated a ton of guys? I wondered, as I realized that whatever his meaning, it succeeded in making me feel inadequate.\n\n\"Nice to meet you just the same, Cody.\" He said as he finished and zipped up.\n\n\"Don't forget to...\" Sasha called out.\n\n\"Come on now, I'm not an animal.\" Zach replied, interrupting her as he turned on the tub faucet and rinsed his pee down the drain.\n\nZach glanced at Sasha and tapped me on the shoulder as he was heading out, \"I suggest you leave this room as soon as possible. Knowing her, it's about to get straight up disgusting in here.\" He laughed and closed the door as he left.\n\n\"Fucking Zach.\" She muttered, crossing her forearms over her bare thighs as she leaned forward slightly. \"Now what was I saying? Oh right, privacy. I get so much privacy in this house.\"\n\nI couldn't help but laugh. She was surprisingly relaxed for all that just happened. \"Does he always do that?\" I asked, before realizing that was probably my cue to leave the room.\n\n\"What, pee in the tub? Nah, sometimes he'll do it in the sink. He was probably on his best behavior because of you.\"\n\n\"That was his best behavior?\" I joked, again thinking I should leave the room.\n\nShe laughed, and her face grimaced a tiny bit as another muffled, deep fart echoed from the bowl. She held her breath as it looked like she started to push, and then added. \"That's Zach, alright. He's...\"\n\n\"Crazy.\" I added, remembering Hana's vague description of him. We both smiled for a few awkward moments, not sure what to say next.\n\nSasha blushed as two tiny plops, broke the silence. Followed by a third, deeper sound of a much larger piece slipping into the water. The sounds alone practically gave me an accurate picture of their size and shape without actually seeing them.\n\nThe sour smell was just starting to reach me, and I could tell she knew that. I did my best not to wrinkle my nose or make a face.\n\n\"I'm sorry. I know I'm probably grossing you out.\" She said, now starting to seem embarrassed after showing no signs up until this point.\n\n\"Not at all.\" I said. \"It's been nice.\" Nice...? What kind of weirdo says this is nice? \"I mean nice chatting with you like this.\" I added trying to regain an ounce of normalcy to this bizarre situation.\n\nShe blushed again and nodded with a soft smile.\n\n\"I should probably go find Hana, now.\" I smiled and headed toward the door. \"Sorry again for barging in on you earlier.\" It was official, I was stalling, finding excuses to stay in here longer when I knew I should leave.\n\n\"No worries.\" She looked down and added. \"I think this was nice, too. Feel free to barge in on me again sometime.\"\n\nI smiled and left, returning to my room and plopped face down on my bed once again. What the hell just happened? My heart was racing trying to comprehend it all. Did I really admit to telling her I thought it was nice sharing that experience with her? In the moment, I remembered thinking how bad the smell was, but now that it was gone all I was doing was trying as hard as I could to remember her unique and foul scent.\n\nAgain, what the fuck was wrong with me...that's disgusting! Still face down on the bed, I breathed deeply, taking in the strange aroma of the sheets. Every house seemed to have their own fabric smell, even if they used the same laundry detergent. It was like each family had an olfactory calling card. I inhaled deeply trying to imagine Sasha's smell again as my door opened.\n\nPrepared to defend myself, I launched into a guilty babbling. \"I'm so sorry...\" I turned, not really even thinking about who it was.\n\n\"Sorry for what?\" Hana said, laughing at my goofy state.\n\n\"Huh? Nothing. Just, just...sorry it was nothing.\"\n\nShe walked over to the bed and sat down next to me. \"Zach tells me you guys already met. Hopefully he didn't do anything too crazy already.\"\n\n\"Depends on what you call too crazy.\" I joked, finally starting to relax now that Hana was next to me again.\n\n\"I really don't want to know.\" She laughed. \"He's his own beast. Best just to leave it be.\" She said leaning over and giving me a kiss.\n\nMy hands gripped her hips and pulled her on top of me. It wasn't until that moment that I realized I had been hard for a while now.\n\n\"Easy there, tiger.\" She said, kissing back and stroking my bulge through my pants. \"You are eager...I must have really done a number on you in the car.\"\n\nI grabbed her ass and felt the denim hiding the feeling of flesh I was craving.\n\nShe kissed my neck and breathed heavily, dry humping my crotch for a split second. \"As fun as this is...it will have to wait.\"\n\nHer wicked grin gave her away. She was purposely teasing me. It was delightful. And delightfully awful at the same time.\n\n\"When this goes down,\" she gave my bulge a quick pat, \"come on downstairs and I'll introduce you to my mom.\"\n\nShe gave me a sly wink and left the room. I'm guessing that was not an open invitation to take care of this myself since she left the door wide open. This just keeps getting better and better, I thought as I sat there staring at the ceiling waiting for my erection to disappear.\n\nAfter several tortuous minutes, my penis had finally been downgraded to a semi-hard state, and I went downstairs anxiously. The house was a blast from the past with old family photos on the walls, outdated wallpaper, and some shaggy carpet that was probably not even in style when it was installed.\n\n\"Cody!\" Hana smiled and gave a quick look at my crotch to make sure I was presentable. \"This is my mom. Mom, this is Cody.\"\n\n\"Pleasure to meet you.\" I said politely, shaking her hand.\n\n\"Likewise. And please call me Suzan.\" She said with a genuine smile.\n\nSuzan was a knockout. Probably in her early 50s, similar dark brown hair like Hana's that fell around her shoulders. She had on a tight Christmas sweater with reindeer prominently displayed over the impressive curves of her chest. Rudolph's nose was right where I guessed her left nipple was. I couldn't tell if it was meant to be a joke, ugly Christmas sweater, or if she actually thought it was cute. Part of the charm of a mom, I supposed.",
        "\"Nice sweater, Suzan.\" I said, figuring I had to make a comment on it since I was looking at her chest so much. \"Very festive.\"\n\n\"Isn't it?\" She laughed. \"And here's the best part.\" She reached to her lower, right side and pressed something. Now Rudolph's nose lit up, flashing on and off. \"Isn't that a riot?\"\n\n\"Great mom. Now everyone will be staring at your chest.\" Hana said with the annoyed tone that only a child could have for such a silly moment from a parent.\n\nSuzan nodded, not really catching Hana's meaning. \"I got it on sale. Couldn't pass it up!\"\n\n\"Great find.\" I added, enjoying her chipper mood. She really was cheery. It was kind of refreshing and snapped me out of the bad mood I had been in.\n\nZach rushed through the kitchen and gave his mom a kiss on the cheek, and she pulled him in for a hug. \"How's my little baby?\" She asked in a classic motherly way.\n\n\"I'm good, mom.\" He held back a grin after seeing the flashing sweater. It was the most restraint I've seen from him so far, which I attributed to a deep respect he had for his mom. He grabbed an apple off the counter and took a loud bite, snapping through the skin.\n\n\"Don't ruin your appetite. Dinner's almost ready.\" She said.\n\nHe nodded and continued chomping away, glancing at old mail that was still sent to him at this address long after he moved out.\n\nSasha walked through and gave me an awkward smile.\n\n\"This is Sasha.\" Hana said looking at me. \"Sasha, this is Cody.\"\n\nJust as I was about to say we've already met, Sasha quickly jumped in. \"Nice to meet you.\" And shook my hand avoiding eye contact.\n\nMy guess was she didn't want to have to explain how we met earlier, so I left it alone and shook her hand. Luckily Zach wasn't watching, or he could have blown the whole thing.\n\nSoon we were all eating a hearty dinner, made as only a mom could. Everything was full of oils, butter and salt. It was delicious, and it was baffling to see how the whole family seemed to keep in such great shape if this was how they ate. Our wine glasses were filled to the brim and refilled often.\n\nI wasn't used to such boisterous conversation. The whole family was loud, talking openly about everything from politics, to religion to movies. They all had different opinions but seemed to enjoy that about one another as a way of making the conversation more engaging.\n\nIt was a far cry from the family dinners I was used to where no one mentioned politics. No one mentioned religion. No one mentioned anything that could be slightly open to a difference of opinion. In fact, they tended to be awkwardly quiet after the first few minutes when all the standard questions had been used up. How's work going? Do you still keep in touch with so and so? This was a 180 from that and a nice change of pace.\n\nAfter dinner was over, it was already pretty late. Time flies with this family.\n\n\"Don't stay up too late. You kids need your rest.\" Suzan said as if they were 20 years younger.\n\nThey groaned and nodded finding it both amusing and annoying. I followed Hana up to her room, hoping she might be willing to bend the rules a little after the day of teasing she gave me. We made out a little, light groping here and there, but it was clear she wasn't giving in.\n\nHer phone buzzed while we were kissing, and she stopped to look at it. I found it completely rude, but she didn't think too much of it as she said. \"Sorry, I have to take this. I'll see you in the morning.\"\n\nThat's it? I thought to myself. I heard her answer as I was leaving the room. \"Oh my god, how are you? Yes! I am in town for a few days.\" She giggled like a school girl. \"Yes, we should totally find some time to meet up!\"\n\nUgh. That meant I would either be dragged along to some annoying reunion of inside jokes or sitting in her house without her. Both options sucked.\n\nI went into my room and tried to relax. I was far too on edge to fall asleep any time soon. I checked my phone. Nothing new. Just the same old pointless games, spam emails and posts. Blah. I wanted to scream from the boredom.\n\nIt was near midnight, and I still was no closer to falling asleep. So, I decided to venture downstairs to the kitchen for a drink. The lights were dim, but I saw a glowing flicker from the living room.\n\n\"Merciful heavens, child. What are you doing up?\" Suzan called out. She was in a cozy armchair by the fireplace with a book in her hand and a glass of eggnog in her other. \"Come, come, come.... sit.\" She eagerly patted the empty chair next to her after setting her book down.\n\n\"What are you reading?\" I asked, surprised to see her still awake.\n\n\"Something cheesy that ends with a happily ever after.\" She laughed and took a sip of her drink, looking deep into the fire. \"Life's not always like that, though.\"\n\nThat sounded like a rabbit hole I was not prepared to go down and politely changed the subject. \"You have a beautiful house, Suzan. And a lovely family.\" I added.\n\n\"That's sweet of you to say.\" Her face beamed. \"Why don't I fetch you a cup of eggnog.\" It was more of a statement than a question.\n\n\"Oh, I couldn't.\" I declined politely.\n\n\"My house, my rules.\" She said with a smile.\n\nI realized I was in no position to refuse, and politely nodded, watching her get up and cinch her robe shut as she wandered off into the kitchen. She returned s few moments later with a mug filled to the brim.\n\n\"That's a hearty pour.\" I said, barely sipping it before it spilled.\n\n\"You don't have to drink all of it.\" She smiled and picked up her own mug. \"So, what are you doing up, my dear?\"\n\nWas she always this motherly? This polite? I couldn't decide if it was comforting or too much.\n\n\"Oh, you know, just the usual.\" I said trying to not get into anything too serious.\n\nShe nodded and sipped some more. The warm fire crackled and felt incredible. \"I always come down here when I can't sleep. I find a good book to drown out reality and cup of eggnog does the trick almost every time.\"\n\n\"Does that happen often? That you have trouble sleeping?\" I found myself starting to get a little more interested.\n\n\"Ohh, sometimes. Ever since my husband passed a few years ago, it's been hard for me.\" She said plainly and took another sip.\n\nI was a bit taken aback. \"I'm so sorry. Hana never mentioned that.\" I had a strange blended feeling of sympathy and guilt for not even learning enough about Hana to know that before coming here.\n\nSuzan nodded as if she expected that. \"I think Hana took it the hardest. They were very close.\" She took another sip and added, \"She doesn't talk about it much.\"\n\nI nodded softly. This conversation had turned way more serious than I anticipated.\n\n\"But that's why I'm always in such a good mood when the family comes to visit for holidays. I want to enjoy the time we have.\"\n\nI nodded, again not knowing quite what to say.\n\n\"Life's short. So, make the most of the time you have.\" She smiled and still seemed chipper despite the somber topic.\n\n\"I'll drink to that.\" I said, clinking my mug against hers.\n\n\"Speaking of making the most of the time you have...why aren't you upstairs with Hana now?\" She asked with a mischievous smile.\n\n\"No, it's okay, Suzan. I want to be respectful of your rules. I'm in a separate bedroom for this trip. No funny business.\" I laughed. \"Your house, your rules.\"\n\n\"That's no rule of mine.\" She seemed a bit surprised. \"You're young...\" she gave me a sly look. \"And I'm not so old I don't remember what it was like to be your age.\"\n\nI blushed a little. Was she really saying it was fine if I went upstairs and had sex with her daughter? A bigger and more concerning question came to mind, why did Hana insist that it was her mom's rule? Did she not want to sleep with me here?\n\nShe stood up and added a couple logs to the fire. As she bent over, adjusting and balancing the new load, the top of her robe fell slightly, revealing a few inches of cleavage. I couldn't help but wonder if she had on anything underneath.\n\nShe let out a deep breath as she sat down. \"That should last me another 45 minutes or so.\" The top of her robe was exposing even more of her cleavage, and I imagined she left it that way to cool off after getting so close the fire a second ago.\n\n\"No more flashing Rudolph?\" I asked with a sly grin and immediately regretted it. I practically just admitted to her I was staring at her cleavage now.\n\nShe glanced down, a bit confused and laughed. \"Oh goodness, I've been giving you quite a show.\" She said with a subdued laugh and made dramatic motions to adjust her robe, which did very little to cover herself up. \"That silly sweater is dreadfully uncomfortable and itchy.\"\n\nI'm not sure if I only now noticed it or if it just happened from the recent conversation change, but I could see the outlines of her hardened nipples through the robe.\n\n\"I thought it was cute.\" I smiled and added, \"and I thought you looked great in it.\" That felt about as far as I could go without being obnoxious.\n\nShe blushed. \"Yes, thank you.\" She added, \"Let's just say the women in this family never had any trouble filling out a sweater.\"\n\nI nearly spat out my eggnog and wiped my lip.\n\n\"Oh please, I'm not telling you anything a red-blooded male with working eyes hasn't noticed.\" She said with a hint of pride. \"You'd be lying to me if you told me otherwise.\"\n\nShe was fun. \"I could never lie to you.\" I said, completely deflecting the statement and stole a quick glance of her cleavage one more time making sure she saw me do it.\n\n\"Just in our genes, I guess. Hana is the closest to me. We have nearly the same build.\" She said plainly.\n\nI nodded and started comparing the two in my head. I suppose she was right. If this is what Hana will look like in another 30 years, I'd be a lucky man. A different thought crept in, imagining if we would still be together in 30 years. Or even three years for that matter.\n\n\"Sasha though, she's a little different.\" She said taking another sip of her eggnog.\n\n\"How so?\"\n\n\"She doesn't have quite the same proportions, a little smaller up top but she's still coming into her own.\" She said plainly.\n\n\"I'll keep that in mind.\" All the interactions I had with Sasha and I was amazed at how little of her chest I remembered. I thought about her ass cheeks poking out of her panties when I walked in on her. I remembered the incredibly cute look of embarrassment when she was on the toilet and the earthy, foul smell that lingered in the air. I remembered a lot of things about her, but not her chest.\n\n\"I'm going to get another.\" She tapped her mug. \"Can I refresh yours?\"\n\n\"No, thank you. I really should be heading back up.\"\n\nThis time accepting my refusal, \"Very well, child.\" She stood up not bothering to cinch her robe and walked over to me, bending forward and let her ample cleavage hang in front of my face as she gave me a kiss on the top of my head. \"Sleep tight.\"\n\nHer smile grew when she caught me peeking at her nearly exposed breasts before she methodically closed up her robe. I couldn't tell if it was loneliness or if it was just her enjoying the attention. Maybe that was the same thing.\n\nI went upstairs to my room thinking over a number of things. My biggest question after that chat was, why did Hana lie and say it was her mother's rule we couldn't share a room? I did my best to give her the benefit of the doubt. Maybe it's just the fact it's her childhood home and it would be too weird for her. Maybe she didn't want to tell me she felt awkward doing it here. It was all speculation and I put it out of my head for the time being.\n\nI was actually starting to feel a little more relaxed as I stripped out of my clothes, leaving only my boxers on for the night. Just needed to pee one last time and I should be able to fall asleep finally.\n\nI kept the lights off in the bathroom, not wanting to cast any unwanted light into Sasha's room through the door crack. Softly I walked over to the toilet and pulled out my penis, finding immediate relief from all the eggnog and wine throughout the evening.\n\nIt was amazing how a few drinks allowed me to pee without hesitation almost anywhere. My stream started out strong and created a loud and satisfying, deep bubbling sound as it splashed the water. The noise was so loud I was afraid it could possibly even wake up Sasha in her room, but the thought of her hearing this sound and then imagining the cause of it was strangely appealing.\n\nEventually the deep echoing sounds turned into a softer, waning trickle before I shook my thick penis a few times. After all the lingering drips had flung off, I realized I was still giving it a few shakes enjoying the feeling of my shaft slightly growing in my hand. It didn't take much to get it excited after the full day of teasing.\n\nJust as I was tucking my penis back into my pants, I heard a few soft gasps coming from Sasha's room. Could it be? I placed my ear up to her door and listened in like a creep. This was so wrong, but so hot. I heard a muffled moan and a few more gasps. Oh my god, she's masturbating! The thought alone was enough to get me hard without even touching myself.\n\nI continued to listen in, hearing a few more gasps, some breathy sighs, and what sounded like a few sniffles. Sniffles? I pressed my ear up to the door a little harder. My erection started to fall almost instantly as I realized those were not moans, they were sobs. They were not gasps of pleasure, they were gasps in between cries.\n\nMy heart felt for her, it was so real. As if I was feeling her pain with her. It started to make me sad for her and reminded me of all the annoying things going on with Hana, the teasing, the no sleeping together rule, the dread of a boring day of hanging out with her friends the next day. So much for giving her the benefit of the doubt.\n\nSasha's cries became a little louder, and I pressed even harder to the door. In a way this somehow felt almost more intimate than hearing her pleasure herself. It was a more private and deeper emotional reaction. Just as I was pondering that thought, I realized the door must have not been fully closed. It clicked, and I nearly fell into her room as the door flung open.\n\n\"Jesus! You scared the crap out of me.\" She said clutching her blanket up to her chest.\n\n\"I'm so sorry. I was just peeing and thought I heard you cry. Wanted to make sure you're okay.\" I did my best to put a positive and kind spin on my spying.\n\nShe sniffled a few times and nodded. \"I'm okay. It's nothing really.\"\n\nI took it as a good sign that she hadn't told me to leave and walked a little closer. \"What's wrong?\" I asked as I sat on the corner of her bed.\n\nShe sniffled again. \"Nothing. Really.\" She said taking a big sniff, wiping away her tears.\n\nI scooted a little closer, so I was sitting next to her and nodded.\n\nShe placed her head on my lap and cried a little more, this time not holding back as much. I softly rubbed her back over her thin T-shirt she was wearing. The perv in me realized she wasn't wearing a bra as I practically felt the warm smooth flesh of her back through the fabric, and the sympathetic side of me felt awful for even thinking about that when she was in pain.\n\n\"It's okay.\" I said as soothingly as I could, giving her back full strokes with my flat palm. \"It will be okay.\"\n\nShe let out a few more breathy sighs, slightly calming down. \"He broke up with me.\" And soon the tears were back. I felt her shaking in my lap and felt the vibrations of her irregular breathing from her sobs.\n\n\"I'm really sorry.\" I offered as my hand rubbing her back naturally shifted to a more sympathetic pace, if that was even a thing. I almost felt like I was saying it would be okay with my soft caresses down her back.\n\n\"What happened?\" I finally asked, unable to just sit there silently.\n\nShe sniffled a few more times. \"Oh, just the same old thing. He wasn't looking for anything serious now. He's been seeing someone else. He thinks I'm great...but...\" and she cried some more, wiping her eyes.\n\n\"Hey! Hey! He's an idiot. It's his loss.\" I said thinking of what other clich\u00e9s I could throw in.\n\n\"Shut up.\" She said with a little smirk.\n\n\"I mean it.\" I brushed her hair out of her eyes as she sat up and cuddled next to me. \"Any guy would be lucky to be with you.\"\n\nI realized I barely knew this girl, but still felt that was completely true.\n\n\"Yeah, yeah.\" She sniffled, still not really believing my pep talk. \"I know these things happen. It's just that they ALWAYS seem to happen to me.\"\n\n\"They always do happen. Until they don't.\" I said and added. \"Guys are jerks.\" That thought lingered and I couldn't help but feel like as nice as I was trying to be to Sasha, I was also being a jerk to Hana now. This felt so inappropriate, and I knew I should leave. But I couldn't.\n\n\"Guys are jerks.\" She agreed.\n\n\"Yes.\" I laughed starting to see a bit of a smile coming back to her face.\n\n\"Okay, let's talk about something else.\" She said, \"Anything else. Tell me something silly, something stupid. Anything.\"\n\nI froze for a bit and said the first thing that popped in my head. \"When I first heard your cries through the door...I thought you were masturbating.\" Why the fuck did I say that? I screamed in my head.\n\nShe giggled and that turned into a soft contagious laugh and before we knew it, we both had to hold back from laughing audibly. I put my arm around her shoulder as her head rested on my upper chest.\n\nAfter a strange combination of sniffles and giggles, Sasha said, \"I was. I started to anyway, hoping it would get my mind off of it.\" I felt her breathing a little heavier admitting these personal details. \"But I was too sad to finish.\"\n\nI kissed the top of her head and rubbed her arm comfortingly. Out of the two things she just said, I almost felt she was more embarrassed to admit she was sad than she was admitting she was masturbating. And as much as I thought I helped her get over her sadness, a new wave of cries came over her.\n\n\"It's okay.\" I said softly.\n\n\"It's not okay. I'm sick of this! Do you know my last three boyfriends left me for someone else? Even Hana stole one of my boyfriends.\"\n\nMy caresses on her arm slowed. That was not what I expected to hear.\n\n\"I'm sorry I shouldn't have said that. It was years ago. Please don't tell Hana I told you that.\"\n\n\"It's okay.\" Was all I said, beginning to feel like a broken record.\n\nWe sat there silently, both mulling over a variety of depressing thoughts. I began to feel a soft and steady movement coming from Sasha. Just for a moment I stopped rubbing her arm to try to determine what it was.\n\nHer arm closest to me was resting along my side and disappeared under the covers toward her legs. I could feel it steadily moving ever so slightly as it seemed like she was continuing what she started before I walked in.\n\nAll my movements stopped at the realization of what she was doing.\n\n\"I'm sorry.\" She cried as her arm stopped moving. \"I just need to do something to not think about it. To not think about anything. I'm so sorry, I shouldn't be doing this with you here...\"\n\nEvery fiber in me knew I should leave, I wanted to say goodnight and let her take care of her needs in private. But all I ended up saying was, \"It's okay. I understand.\" Those four subtle words both gave her permission and made me just as guilty. I felt awful but didn't see how I could possibly leave right now.\n\nI felt her arm resume a slow and steady rhythm, softly rubbing against the side of my body as her fingers busied themselves beneath the sheets. I slightly adjusted my position and felt my now nearly erect penis bob in my boxers, lightly bumping her leg.\n\nAs her motions continued, I felt her forearm nudge the side of my shaft that was resting on top of my leg. Was that on purpose? Could she even tell what she bumped into? It happened again, this time making me tighten my muscles as my cock bounced up a few inches and plopped down on my leg, grazing her arm through the fabric of my boxers in the process.",
        "\"I'm sorry.\" I offered, there was no way she didn't feel that.\n\nShe didn't reply and continued with her steady motions under the sheets. The silence was hard to take, and I found myself starting to share my own issues. \"It's been a pretty hard day for me as well.\" I said as my cock involuntarily bounced again, clearly bumping into her arm.\n\n\"If you need to...\" She said softly, trying to find a delicate way of putting it. \"If you need to as well, I would understand.\"\n\nThe thought was so tempting as my cock was now creating a tent in my boxers. \"I couldn't possibly. I wouldn't want to creep you out.\" I said, wondering why my first reason wasn't because I was dating your sister.\n\nHer motions sped up and her elbow was now consistently bumping into my shaft. \"I think I'd feel less creepy if I wasn't the only one doing this.\"\n\nWhether intentional or not, she found a way to make it seem like I would be helping her if I did it. I'm not doing this for me, I lied to myself as my hand crept beneath the sheets. I'm just trying to help her get through this stressful time.\n\nI slid the waistband of my boxers down, feeling the warm sheets catch my eager shaft as it bounced free. Her elbow now bumped me again, this time touching the actual flesh of my member and we both paused at that realization.\n\n\"I'm sorry.\" She said. \"I didn't mean to...\"\n\n\"It's okay.\" I whispered back as my hand now gripped around my thickness and slowly started to slide the skin up and down.\n\nSilently we both teased ourselves under the covers. I stroked my length a little faster feeling the head of my penis rub the fabric and could feel my pre-cum starting to collect on her sheets leaving a damp circle right near my tip.\n\nShe adjusted her position and was now slightly facing me, as I put my left arm around her a little lower and continued to tease my penis with my right hand. Her breast was now resting against my chest as I rubbed her outer arm.\n\nFrom the new positions, I could feel her arm grazing against my sack as she continued to work on her clit. I slowed my strokes to focus on the feeling of her incidental touch on my balls and heard her breathing start to pick up.\n\nAs the familiar impending feeling set in, I realized the predicament it created.\n\nHer breathing sped up even more, adding in occasional sighs.\n\n\"I'm close.\" I whispered.\n\nShe nodded between breathy gasps, \"God, me too.\"\n\n\"Where do you want me to...?\" I posed the question knowing I needed an answer sooner rather than later.\n\n\"Wherever you want.\" She said like it was only a secondary thought, as she was now nearing her own climax, busily working out her frustrations.\n\nThis still didn't solve my problem as I realized I didn't have much time at all to decide. I quickly took my hand off my shaft only for a moment to pull the covers down to our mid thighs. I could now see she only had on a T-shirt, that seemed to be scrunched up and stopped around her stomach. She was completely naked next to me other than a thin T-shirt, as she glanced down and saw my engorged shaft in my hand and sped up her motions, breathing audibly as she grew closer.\n\nIt was distractingly sexy as she started to shake. I could practically feel the vibrations of her boobs jiggling on my chest as she turned into me, lowering her head, succumbing to her body's reaction.\n\nI temporarily slowed my strokes, whether I realized it or not, to watch her as she came. She squirmed with spastic motions that made her legs shake while she twisted and turned. I could now feel my balls resting on her stomach as the back of my hand felt her belly while I was giving my own last few strokes focused around the sensitive underside of my tip.\n\n\"Fuck...I'm going to...\" I tried to warn her as best I could. She seemed to understand and pulled her shirt up a little higher to the bottom of her tits just as I silently held my breath, feeling a powerful spurt that was only the calm before the storm. I gasped from the following contractions that finally offered relief. You could actually hear the first shot of cum splash on her upper belly, as I softly stroked letting the remaining ropes find their way out on their own without forcing it. I coated her belly and had a surprisingly far shot that landed on her chin and a little on her T-shirt covering her breasts as my shaft tingled with relief.\n\nIt was the strangest feeling of being the hottest thing I've ever experienced while also the most wrong. I fell on my back, lying next to her and let go of my erection completely as a fair amount of cum still oozed out, dripping down my pulsing shaft. What have I done? I thought to myself as I stared up at the ceiling.\n\n\"I'm so, so, so sorry.\" I really didn't know how else to put it. \"Fuck, I'm sorry.\"\n\nHer mouth was closed as if she was trying to look down at the cum on her chin, knowing it was impossible for her to see. Finally, she let out a little laugh. \"I was not expecting that.\" She said.\n\n\"Neither was I. Not any of this. I'm so, so sorry. God, I fucked up.\"\n\nShe saw the guilt on my face and started to look a little sad, before shaking it off. \"These things happen.\" She said and slid her cum-soaked T-shirt up and over her head, revealing her bare breasts.\n\nAs guilty as I felt for how bad this was to Hana, I wanted nothing more than reach over and caress her breasts and feel their gentle give in my hand. They looked so soft and adorable.\n\nShe scrunched up her shirt, and wiped off her mouth and chest, clearing off all the cum. \"You must have had quite the frustrating day.\" She said, clearly noting the excessive amount of cum on her.\n\nI nodded. \"I'm not sure I can recall ever letting out that much...frustration.\" I said, hoping she understood my meaning.\n\nShe nodded, and her smile faded. \"You should probably go.\"\n\nNodding back, I agreed as I stood up and slipped my still hard erection back into my boxers. \"Again, I am so sorry about all of this...\"\n\n\"Please go.\" She said softly and climbed back into bed, turning away from me.\n\nI went back through the bathroom, closing both doors behind me, I thought I heard her soft sighs starting again. My heart was racing as I fell onto my bed wondering how much I just fucked up. I was only trying to help her, I lied to myself knowing what a crock of shit that was. That last thought lingered in my head over and over until I finally passed out.\n\nA gentle knock on the door woke me as the morning light crept through the blinds. The door opened before I could answer.\n\n\"Time to get up, babe.\" Hana said cheerfully, already dressed in jeans and a warm looking red sweater.\n\nI felt too much guilt to say anything. She kissed me on the head, reminding me of her mom the other night and said, \"Why don't you get ready and I'll meet you downstairs. We have lots to do today.\"\n\nShe smiled and left the room. I wondered if she thought it was odd, I literally didn't say a word in that interaction, as I started to overthink every single thing.\n\nStill with just my boxers on, I walked into the bathroom and put my ear up to Sasha's door. Total silence, I thought with some relief as I slipped my penis out for my morning pee. I noticed the hardened cum stains on my boxers and felt another twinge of guilt in my stomach. Despite feeling awful about everything, I wondered what her T-shirt must look and feel like now that it had dried overnight soaking up my frustration.\n\nGod, what is wrong with me? I wondered to myself as I flushed and hopped into the shower. The bright sun beamed through the frosted window and the steaming hot water felt great, almost as if I was resetting everything and starting afresh. That was another lie, but it was all I had.\n\nAfter finishing up, I turned off the faucet and reached over for a towel from the wall. I pulled the curtain open, starting to dry off my body when I nearly slipped from the shock of seeing Sasha on the toilet. \"Jesus!\" I said half laughing, half on edge as I wrapped the towel around my waist and wondered how much of me, she saw just now.\n\n\"Merry Christmas Eve.\" She said softly.\n\n\"Merry Christmas Eve.\" I replied uneasily.\n\n\"Sorry, I really had to go. I thought it might have been Zach in there.\" She offered.\n\nI stepped out of the tub and did my best to dry off and still keep myself covered. She sat there awkwardly occasionally looking and then looking away.\n\nThe silence was torture and I finally said, \"We need to talk about what happened last night.\"\n\n\"I don't know what you're talking about.\" She said plainly. Her emotionless face slightly grimaced as a long, deep fart reverberated in the bowl as she noticeably tried to push.\n\nThis was drastically different from the first time I saw her in here. This was purposely forced. It was almost like she was trying to gross me out as some sort of weird defense mechanism. Maybe she wanted me to leave. Maybe she was trying to rid us of any lingering thoughts of last night.\n\nThe outside door to the bathroom flew open and I expected to see Zach rush through, but it wasn't him.\n\n\"Oh gross.\" Hana said holding her nose. \"You are so disgusting. No wonder you can't keep a boyfriend if this is what you do in front of them.\"\n\nMy heart hurt for Sasha as I saw the look on her face. That was so mean. Did Hana know they just broke up? Was that just how Hana treated her sister. This was awful.\n\n\"Come on, Cody. Get dressed. We need to head out soon.\" She said and looked at Sasha as she was leaving. \"You are so gross. It's bad enough you scare off all your guys, don't scare off mine.\"\n\nAfter she left, I saw the helpless look on Sasha's face, as her head fell downward into her legs. It looked like she wanted to crawl into the bowl and hide.\n\n\"I'm sorry about that. That was really mean and uncalled for.\" I said.\n\nIt was as if she was used to this kind of treatment and nodded before practically giving up. \"She's right, though.\" Letting out another long, deep fart. \"I'm disgusting and can't keep a guy.\"\n\nI wanted to scream that wasn't true. That she was incredible. She was gorgeous, funny and so much more. I'm not sure what came over me, as I lifted my towel to dry my hair, completely exposing my long, thick shaft that dangled just slightly away from my legs. \"Is that really what you believe, that you're disgusting?\" I asked, trying to show my arousal as proof that wasn't how I felt.\n\nShe glanced at my crotch, then back up to my eyes unable to find the words. Holding back tears, she finally said. \"You should go.\"\n\nI covered myself back up and heard Hana yell from the hallway, \"Cody! We need to get moving if we're going to beat traffic.\"\n\nI looked at Sasha one last time and mouthed the words I'm sorry. She nodded and looked away. This was the strangest mess of things I've ever been in.\n\nQuickly I got dressed and met up with Hana in the kitchen. Her mom was making eggs and bacon. \"Care for a hearty start to the day?\" She asked with a smile.\n\nI was about to say yes, that sounds amazing, but Hana jumped in first. \"Can't mom. We need to head out. Lots of friends to see. We'll be back tonight in time for dinner.\"\n\nSuzan nodded, looking a little disappointed. I felt a little bad for Suzan and preferred to stay where I was to keep her company, but it wasn't my place to butt in with their interesting family dynamics.\n\n\"Cody, could you do me a favor and write down your cell number? There's supposed to be a pretty big snowstorm today and I just want to be sure I can get a hold of either of you if anything happens.\"\n\nIt was a harmless, sweet, caring mom comment. \"God mom, we're not teenagers.\" Hana said, clearly annoyed and walked out the front door.\n\n\"Here you go, Suzan.\" I smiled and wrote down my number. \"I'm looking forward to spending more time with you soon.\" I offered and followed Hana out of the house.\n\nThe next few hours were a blur. We visited probably ten different groups of her friends. Each time she barely introduced me, and they were busy sharing memories and catching up on each other's lives. I completely understood the need to reconnect with old friends, but I still felt incredibly out of place. I didn't need to be here for this. I was hoping this day would serve as a great distraction from everything that already happened, but it only made me dwell on it all the more since it was hard to participate in their conversations of inside jokes and old memories.\n\nEventually we made it back home for dinner. It was another lively meal filled with deliciously fattening foods, unending wine and conversation. To me it was painfully obvious Sasha and I were quieter than the night before, but Suzan, Hana and Zach clearly didn't notice it as they were chatting up a storm.\n\nI helped Suzan clear the plates when we were finished, and Hana pulled me aside. She looked like she had something difficult to say and I started to get worried. Did she know? Did Sasha tell her anything?\n\n\"Look, I have another friend I'd like to meet up with tonight. I hate to even suggest this, but would you mind sitting this one out?\" She asked awkwardly.\n\n\"Huh?\" I was first relieved and then confused. \"What?\" I said sounding like a fool.\n\n\"It was pretty obvious you didn't enjoy yourself today. I'm sure this will be the same. It's just an old friend. We go way back, and I don't want to ruin your night.\" And added, \"Or you to ruin mine.\"\n\nAnd that was the real reason. My awkward quietness was dragging on her. She needed a little fun with an old friend. Truthfully, I was relieved I didn't have to go.\n\n\"That's fine. I'll hang out here and help your mom for a bit.\" I said.\n\n\"You're the best.\" She said and kissed me on the cheek.\n\nNo. No, I'm definitely not, I thought to myself. I'm the worst. \"Who's the friend anyway?\" I asked as she was already putting on her coat and boots.\n\n\"His name's Brandon.\" She said casually as she grabbed her purse.\n\nHis name? It was a him? I suddenly felt a lot worse about this agreement, but what right did I have to say anything after everything I did. I nodded and added, \"Have fun.\"\n\n\"Don't wait up.\" She said as she took off out the front door into the snowy night.\n\nI helped Suzan with the rest of the dishes. Sasha and Zach were nowhere to be found. \"Where'd everyone go?\" I asked.\n\n\"They're quick to come for a meal, and even quicker to leave after.\" She laughed. \"I'm sure Zach is playing video games in the basement. Sasha's probably in her room reading a book. Who knows?\"\n\nShe paused and added with a genuine smile, \"Thank you for helping. I truly do appreciate it.\"\n\n\"My pleasure.\" I said softly.\n\n\"Which one is Hana seeing now?\" She asked plainly.\n\nI got an eerie vibe from the way she asked that question. Like she was subtly trying to tell me something. \"She's meeting up with Brandon.\"\n\nSuzan nodded, as if expecting that answer. I didn't want to ask any follow-up questions and was quite sure I wouldn't like whatever the answer was. We both continued cleaning silently, deep in our own thoughts.\n\nOnce the plates were finished, Suzan headed into the living room. She was staring out the window into the backyard. The snow was falling pretty hard and stuck to the bare trees, painting everything in a peaceful white. She did not seem like the same chipper mom I chatted with last night.\n\n\"Everything okay?\" I asked, standing beside her taking in the serene wintery view.\n\n\"Oh yes, everything's fine dear.\" She said resuming her motherly demeanor. \"It's just things change, that's all. Each year it changes little by little. So little you don't even notice it until it's just not how it used to be.\" She let out a soft breath and smiled anyway.\n\nI simply nodded, not sure what to say.\n\n\"The thing I probably miss the most is the lights. Frank, my late husband, used to decorate the outside of this house so beautifully. People would come for miles and miles just to see it.\" She had to stop herself and brushed a tear away.\n\nI never felt more helpless in my life. Should I hug her? Tell her it will be okay? \"I can imagine it was quite a sight.\" I finally said.\n\n\"Oh, it was. It absolutely was.\" She said with a smile, grateful I said something she could respond to. \"Now the kids get here late, barely even hang around. No lights.\" She sighed and added, \"Things change.\"\n\nI stood there wanting to say something to help, but just nodded silently letting her get it off her chest.\n\n\"I think I'm going to head to my room now.\" She said. \"Help yourself to eggnog, more wine. Whatever you can find, the house is yours.\"\n\nShe started to walk up the stairs and I called out, \"Sleep tight, Suzan.\"\n\nShe laughed. \"I'm sure we both know it will be hours before I can sleep. But thank you, Cody. You're a sweet boy.\"\n\nAnd with that she was gone. Everyone was gone. It felt creepy standing in the middle of Hana's living room with no one else around. I had no interest in going up to my room. The thought of just sitting there alone and waiting for Hana to return was awful. Plus, being upstairs increased my chances of bumping into Sasha. Probably best I give her a little space. And I certainly wasn't going to go hang with Zach. He was probably jerking off in the basement for all I knew.\n\nSuzan's words of helping myself to whatever's in the house popped into my head. I contemplated a crazy idea I had. \"Fuck it.\" I said aloud and headed into the garage.\n\nI saw countless old, dusty boxes, yard tools, old appliances, a giant ladder and then finally found what I was looking for. A few boxes in the corner that said, in big, bright red letters, \"Xmas lights\". Bingo.\n\nI carefully untangled the assorted boxes of lights, wreaths and other seasonal odds and ends. After putting on my jacket and boots, I ventured into the snowy outdoors with the ladder and proceeded to hang the lights. It took several hours longer than I expected, but it was truly the first time on the whole trip I got out of my head for once.\n\nIt was almost midnight now and I headed inside, quickly shed my jacket and boots and went up the stairs. Suzan's door was closed, but a dim light was coming through the crack at the bottom. I softly knocked. No answer. Maybe she did fall asleep.\n\nI knocked one more time a little harder just to make sure.\n\n\"Come in.\" I finally heard and opened the door. She was in bed, with the covers pulled up to her armpits. Her bare arms were over the sheets holding the same book from the other night. \"Good heavens, child. I thought it was one of the girls. I would have made myself decent if I knew it was you.\"\n\nI couldn't help but smile and wasn't quite sure where to look. She sat up, holding the blanket to her chest tightly. Her bare shoulders were exposed, and she motioned me over to the side of the bed. I walked over and first noticed the empty wine bottle on her nightstand and then noticed her exposed back as I came to her side, confirming she was not wearing a shirt.\n\n\"Hope I didn't interrupt anything?\" I said taking in the situation.\n\n\"Nonsense. Just a woman alone with her thoughts. Now, what is it, dear?\" She asked with a hint of concern.\n\n\"Could I steal you away for a moment? I have something to show you.\" It was hard to hold back my grin.\n\n\"I suppose.\" She said, catching my contagious smile.\n\n\"It's outside, so you might need to dress a little warmer...\"\n\nShe again looked a little concerned. \"Very well then. Would you be a dear and hand me my robe?\"\n\nThe way she said that almost made me think she wouldn't have put on the robe if the surprise was indoors. But that couldn't be, could it? I thought to myself it didn't really matter, as I went over to the chair in the corner of the room and picked up her robe and handed it to her.\n\nShe held it against her chest and looked at me curiously.\n\n\"Oh right, privacy. Forgive me.\" I turned around and heard her get out of bed and slip on the robe. It was strange feeling, having never recalled being in a room while my girlfriend's mom was naked and putting on a robe.",
        "Soon I felt her arm wrapped in mine and she said, \"Just go slow, dear. It's been a long evening and I'm afraid my balance isn't what it used to be.\"\n\nI guided her out of the room and down the stairs. I couldn't help but wonder if she just meant she would be a little unsteady on the snowy ground outside, or if she meant she had a little too much to drink. Maybe a mix of the two. I brought her to the front door and we both slipped on some boots before stepping outside.\n\n\"Close your eyes.\" I said as we reached the spot.\n\nShe looked a bit frustrated but complied just the same. I guided her to the edge of the driveway and whispered, \"I'll be right back. No peeking!\"\n\n\"Please hurry, child.\" She said, standing there with her arms hugging herself tightly trying to keep warm.\n\nI ran back to the house and plugged everything in, flipped all the switches and ran back to Suzan. I put my arm around her and whispered in her ear. \"Open them.\"\n\nShe blinked a few times and finally saw the display. There were red and green flashing lights around the eave, white lights flashing in various patterns on the bushes, a lit-up wreath on the front door and a few other Santa items placed on the snow-covered lawn.\n\nHer jaw dropped. She brought her hands slowly to her mouth as she held back tears and started to shake.\n\n\"Merry Christmas, Suzan. I'm sure it's not as good as Frank used to do it, but it's a start.\"\n\n\"It's beautiful.\" She turned to me, rested her head on my shoulder while looking back at the house. I could feel her body shaking from the sobs. \"Bless you, child.\"\n\nOur visible breath danced in the air as we shared the moment. I gave her a kiss on the top of her head and soon we were both shaking as the cold began to take over. Silently we knew it was time and headed back into the house.\n\nI didn't even realize it until we were taking off our boots that I never bothered to put on my jacket just now and rubbed my hands together furiously. \"I could sure go for a cup of eggnog and sitting by the fire.\"\n\nShe smiled and said, \"It's a little late to start a fire. But I have an idea, why don't you come up to my room?\"\n\nI walked over cautiously, and we locked arms as we headed up the stairs. She shut the door behind us as we entered her bedroom. What on earth is happening? I wondered to myself.\n\nShe scooted a large chair over and opened the doors on her TV stand in front of her bed, revealing a mini built-in fireplace. \"It's only a gas one, but it's too late to start a wood fire at this hour.\"\n\nShe grabbed another bottle of wine from the cabinet in the corner and pulled out two glasses, filling each one to the brim. I couldn't help but feel concerned at the fact she had a liquor cabinet in her bedroom, but who was I to judge?\n\nWe nestled in together on the chair. It was a big chair for one person, but rather small for two. I had to put my arm over her shoulder in order for us both to fit. She cuddled up next to me, clanked my glass and silently sat there staring at the fire, sipping our wine.\n\nI looked over and saw from the position she was in, her robe slightly jutted out revealing probably more cleavage than she was aware of. With each deep breath she took, the cloth rose and fell showing more and then less, and then more. It continued in this pattern and I found it more mesmerizing than the dancing flames.\n\nI don't know what made me ask, but out of nowhere I said softly. \"This Brandon guy. It's her ex, isn't it?\"\n\nShe took a large sip of her wine, still looking at the fire and nodded. \"I'm sorry, dear. The holidays are the toughest time of year. I think Hana does whatever she can to distract herself from thinking of her dad.\"\n\nI nodded somberly. It was what I expected and explained a lot. No wonder she brought me to her family Christmas after only a few weeks of dating. And what was I thinking agreeing to it? So quickly ditching my own family Christmas for a girl I barely knew.\n\n\"I'm sorry, sweetie. That's no excuse for her actions. But she does this most years.\" She drank a little more. \"It's too bad. I really like you, though. I was hoping this time would be different. You deserve better than that.\"\n\nSo many thoughts rushed through my mind. \"I'm not sure I do. I've done some...\"\n\n\"Shhh...\" she stopped me right there. \"We all have, dear. It's not for any of us to judge.\" We both took a large gulp of wine, nearly finishing our glasses.\n\n\"We do the best we can to get through and try to support the ones we love while we're doing it.\" She said warmly.\n\nShe was so accepting. So nice. I almost always wanted to hug her. \"That's beautiful, Suzan. Really, thank you.\"\n\nShe smiled and looked off into the fire. \"Frank used to say that to me. He used to calm me down when the kids would do something so hurtful without even realizing it. He was so much stronger than I am.\" She started to sniffle and finally closed her eyes, fully succumbing to the pain and cried.\n\nI set my drink down and hugged her so tightly. She had put so much weight on her shoulders, the burden was finally too heavy to bear. I could feel her shaking in my arms and I finally understood why the holidays were so hard for her. \"It will be okay. You are probably the most amazing person I have ever met.\"\n\nShe rested her head on my shoulders, grateful for the comfort and the touch of another human. \"That's sweet of you to say.\" She finally said, adjusting herself so she was facing the fire again.\n\n\"Just don't tell my mom I said that.\" I added softly and we both chuckled at that, thankful for anything to lighten the mood.\n\n\"You know you remind me of Frank. I think you two would have gotten along splendidly.\" She said with a hint of her usual chipperness that I had grown to love.\n\n\"I don't doubt it.\" I said with a smile and finished off my wine glass. I had definitely hit my limit, but somehow couldn't refuse another pour from her. I couldn't leave her like this. Not now.\n\nI sipped some more and set the glass down, placing my hands toward the fire, rubbing them together.\n\n\"Are you still cold, child?\" She asked.\n\n\"Maybe a little. Not sure I ever really warmed up from when we stepped outside.\"\n\n\"Here... come.\" She motioned toward herself and took both of my hands in hers and rubbed them with her own. Gently she added a hot breathy gasp to them, adding to the warmth. \"How's that?\" She asked with her eyes closed.\n\n\"Better, Suzan. Thank you.\"\n\nShe nodded and held my hands close to her body, but stopped rubbing them, letting the warmth of her chest continue to heat me up. I could feel her cleavage under my hands and the distinct valley between them. She held my hands tightly, pulling them in further until I could feel the push of her breasts giving back. She let go with her hands, leaving mine still on her chest. With her eyes closed, she adjusted her robe slightly as if she was making her warmth more available to me.\n\nI couldn't believe what I was doing as I gently moved my hands over the tops of her breasts, placing the still cold parts of my hands over her warm flesh.\n\nSuzan sighed softly as I did so. She needed this moment as much as I did, maybe even more and I found myself doing something I never thought I would. I slid my hands in her robe slowly, gently gliding over her breasts and lightly held them.\n\nHer body softly moved as she let out a barely audible gasp and rested her head on my shoulder. I lightly squeezed the weight of each breast and felt her nipples grow hard in my hands before sliding them out of her robe and back to a hug around her whole body. I gave her a kiss on the top of her head and she wept again, softly thanking me.\n\nShe had so much on her plate. The loneliness, the unappreciative kids, and beyond all that she still was a person, a woman who needed the occasional reminder that she was worthy of love. That she needed the attention of another person because sometimes that's what makes us feel human.\n\nWe finished off the rest of the bottle in silence, neither of us mentioning what just happened. By the time the wine was gone she was starting to fall asleep in my arms. I helped her up and walked her over to the bed.\n\nShe took off her robe with no hesitation and handed it to me. Her bare backside was completely exposed as I glanced at her lush, full cheeks noting they were only slightly bigger than her daughter's as she climbed into the bed. Both of her breasts were still exposed as I tossed her robe on the chair and leaned down to kiss her forehead goodnight. I pulled the sheets up to cover her, kissing her cheek one last time. She turned her head and kissed back grazing my lips with hers momentarily as she was beginning to doze off.\n\n\"Goodnight, Suzan.\" I said softly.\n\nAs I started to walk out, I heard her say, \"Goodnight, Frank.\" She had a subtle smile on her face as she drifted off peacefully.\n\nI stumbled into my room, not really sure what to make of any of this. It was too sad, too messed up...too real to focus on it. I stripped down to my boxers and took a deep breath.\n\nThanks to Suzan's never-ending wine supply the room was spinning, but it was worth it if it gave her any joy at all. I headed into the bathroom quietly and made my way to the toilet. By now I was several hours overdue for some bladder relief as I pulled out my penis and felt instant gratification as the stream was strong from the start.\n\nThe noise was what threw me. There was no noise...no deep, bubbly splashing noise that I expected to hear. Am I so drunk that I'm missing the toilet? I aimed slightly higher until I finally heard a sound.\n\n\"GAH, what the fuck?\" Sasha called out as she was making spitting noises and swatting at me before realizing what happened.\n\n\"Oh my god. I am so, so, sooo sorry.\" I said abruptly ending my stream and tucked my penis away. \"Are you okay?\"\n\n\"No, I'm not fucking okay! You just pissed all over my face and shirt.\" She felt around her face and added, \"Gross! Even my hair, too.\"\n\n\"Why didn't you say something? Anything...like, hey don't pee on me...I'm on the toilet.\" I said frantically, trying to deflect the blame.\n\n\"I fell asleep, okay? I don't know about you, but I got exactly zero hours of sleep last night after you came in my room. Zero!\" She said. \"I just came in here to pee and I closed my eyes for a second and woke up getting pissed on!\"\n\nNot only was this my fault that I peed on her, it was my fault she was in this position in the first place. The guilt was indescribable.\n\n\"Let me get you a towel. Or better yet, some toilet paper...that will help.\" I said quickly before realizing how dumb that was.\n\n\"Toilet paper? I'm not some asshole you're going to wipe. This needs to be washed out!\" She screamed in as loud of a whisper as she could.\n\n\"You're right. I'm so sorry, please just...please don't...\"\n\n\"I'm not going to tell Hana.\" She said softly, sounding defeated.\n\nThat wasn't what I was trying to say. I wasn't sure how I was going to finish that sentence, but the only thing going through my head was please just don't be mad at me. I couldn't take upsetting her. She deserved so much more. But all that came out was, \"You're not?\"\n\n\"No. I'm not going to tell her.\" She sighed. \"And I won't tell her about last night either, but you at least need to do something for me...\"\n\n\"Name it.\" I didn't so much care about her telling Hana after what I learned this evening, but I was hoping this could at least be a chance to help Sasha in some way. \"Anything at all.\"\n\n\"You have to clean me up. I won't tell Hana, but I refuse to wash your piss out of my hair.\" She said seriously but almost laughed knowing how ridiculous it sounded.\n\n\"I think that's fair.\" I said, doing my best not to laugh.\n\nShe stood up, quietly standing there right in front of me in the dark room.\n\n\"How do you want me to...um, clean you? Should I get a washcloth?\" I asked awkwardly.\n\nShe walked right past me and turned on the shower. \"No. Not a washcloth.\" She said as she pulled her wet T-shirt up over her head and tossed it to the side. It made a thick splat noise as the soaked fabric slapped the ground. \"You're going to actually wash me.\" She turned and got into the shower. The room was so dark I could barely make out her movements, but I caught a glimpse of her bare ass as she stepped into the tub.\n\nCautiously I walked over, not exactly sure what she wanted me to do. I peeked around the curtain and saw her standing with her arms crossed, just outside of where the water fell. \"Well don't just stand there staring at me like a creep...\"\n\nI still wasn't sure this is what she wanted, but I slowly lowered my boxers, letting my semi-hard penis bounce free. She was watching my every move, which was both nerve wracking and exciting.\n\nFinally, I stepped into the tub. The Christmas lights I put up along the eave were flashing through the narrow, frosted window, illuminating her body in a red and green glow in the otherwise dark room. I couldn't help but stare at her beautiful, naked body as she stood there helplessly.\n\n\"Who put up the lights?\" She asked, still with her arms crossed, propping her breasts up inadvertently making her nipples rest atop her forearms before she adjusted her posture to cover up.\n\n\"I did.\"\n\n\"Why?\" She asked plainly.\n\n\"Just trying to be nice.\" I said softly, inching my way closer to her.\n\n\"You're not nice.\" She said.\n\n\"No, I don't think I am.\"\n\nShe looked me up and down, glancing at my penis a little longer before saying, \"Are you going to wash me or not?\"\n\nI gently touched her arm and took a step closer as she arched her back, making her breasts stick out slightly as she let her hair enter the falling water.\n\nI stepped even closer, reaching my hands up slowly to her face. She took a deep breath and looked me right in the eyes, nodding for me to continue. My fingers slid upward, over her ears and through her wet hair.\n\nStill with no smile on her face, she handed me a bottle of shampoo and crossed her arms again.\n\nI squirted a little in my hand and gently started to massage it into her hair. Her eyes were closed, and her bare body was only inches from me. I could feel her breathing change as I kneaded her scalp more and more tenderly. There was something so vulnerable about her reaction, about this intimate activity. It was driving me mad and I realized my shaft was starting to fill with blood, sticking out a few inches away from my body almost touching her leg.\n\nShe quickly turned, grabbed the conditioner and handed that to me. I repeated the process, only going even slower as I massaged it in, feeling the small curve in the back of her head that led down to her neck. I was practically right up against her as I ran my fingers through her hair, rinsing out the creamy conditioner. It took everything I had not to hold onto her. To not hug her and feel her body against mine.\n\nAfter more soothing strokes, I ran my hands down both sides of her face, gently holding her cheeks. \"I think you're clean.\" I said, not sure how she wanted this to end.\n\nShe shot me a dirty look. \"You peed on more than just my hair.\" She said as she handed me a bottle of body wash and crossed her arms yet again.\n\nI squirted a large dollop in my hand, and started rubbing the flowery soap on her arms, moving upward over her shoulders, until I felt my hands surround her slender throat. I was practically shaking at the level of trust she must have had for me as I felt like I held her life in my hands.\n\nI loosened my grip, working my way down ever so slightly to the top of her chest. My finger ran along the visible cleavage that poked out from her forearms. Her new arm position was more tightly concealing her chest as I rubbed the top of her breasts and over her arms going back and forth over the two.\n\nThe lower I got, the more tightly she held her arms to her body. I moved to her belly and now worked my way upward toward her blocking forearms. Slowly I washed her crossed arms and over her belly. As if fighting her own desires back and forth, she slightly adjusted herself so one arm fell straight down while the other still crossed her chest and gripped her elbow.\n\nIt revealed a little more of her breasts, as I gently washed the newly exposed, soft flesh. There was now enough of a gap that I could slide my fingers under her forearm and in between her cleavage.\n\nHer body visibly shook from the new touch, subtly loosening her hold over her breasts. I was able to give gentle caresses to the underside of her boobs, before she looked at me almost painfully and lowered her second arm.\n\nI had to take a moment just to admire the sight of her gorgeous, perky breasts with small, hardened pink nipples before I washed and massaged each one. Gently I played with their firmness, teasing her nipples in between my fingers and thumbs, lightly flicking them as I continued on with full strokes washing her whole chest.\n\nShe gasped and looked so completely torn. We both knew this was wrong, and yet here we were.\n\n\"Why aren't you going to tell Hana about this? Or about last night? About any of this?\" I asked, wondering why she was allowing this to continue.\n\nSasha looked up at me and then looked away toward the red and green glowing window, suddenly saddened and sniffled again.\n\n\"I saw the look in your eyes after it happened yesterday. I know you were thinking about Hana. How it was all just a big mistake with me. Like you wished it never happened.\"\n\n\"Is that what you thought?\" I asked, slowly inching closer.\n\n\"It's true, isn't it? It's what every guy thinks. I'm just a stupid mistake...something temporary until they find someone better...\"\n\nI pulled her in close and locked lips with her mid-sentence. We both stood there temporarily in shock before she finally kissed back. I wrapped her body in my arms, holding her close. Our lips gently pressed and glided over each other, softly opening as my tongue slid over hers.\n\nI found my hand returning to her chest, lightly teasing the tender flesh as my other hand slid down her backside, resting at the bottom of her cheek. I squeezed her ass, pulling her full cheek out to the side letting it jiggle shut as I let go and ran my hand over her crack pulling her in close.\n\nI finally released her breast and slid my flat palm down her belly until I could feel her soft patch of hair in between my fingers. Lightly I pulled on her short hairs, swirling them in my fingers before sliding my hand lower over her mound.\n\nShe gasped and rested her head on my shoulder as my two fingers traced the outer edges of both lips, meeting at the bottom and sliding back up the center of her wet slit. She trembled as I rubbed her swollen clit with my thumb and slowly slid two fingers inside her. Gently curling my fingers over her inner ridges, her tightness gripped my fingers as I slid my thumb faster and faster over her clit. I felt a sharp twinge of pain from her fingernails digging into my shoulders as she started to tremble. Gasping, she bit my shoulder as if to muffle her moan, as she rode out the wave of pleasure.\n\nHer piercing grip on my shoulders slowly transformed into a softer hug, feeling her breasts flatten against my chest as I wrapped her in my arms. My cock awkwardly pressed against her, jutting out to the side as we were belly to belly and her gasps slowly started to calm down.\n\nWith my arms wrapped all the way around her upper back, my hands were now near my face, inhaling her unique scent left on my fingers. I think she caught a hint of what I was doing and lightly smiled but was too focused on catching her breath to think about it.\n\nThe shower continued to fall on us in the dark room, and the red and green lights made her skin glow like of some kind of magical Christmas dream.\n\nHer hand lowered and bumped into my nearly pulsing member. \"Should I... I mean do you want me to...?\" She asked awkwardly as she reached down and lightly held my shaft for the first time.",
        "I let out an audible gasp from her feather light touch on my sensitive skin. Softly she slid the skin over my tip and back down my shaft, taking an eternity to do so. The movement all but stopped and I realized she was barely awake, resting on me for balance. Being awake for 36 hours and an unexpected orgasm were clearly taking a toll on her as she blinked in and out of consciousness.\n\n\"I do.\" I said as I gasped again, pulling her hand off my already pulsing member. \"I do want you to...but not like this.\" I'm not sure how I had the restraint to tell her no in that moment as I was almost ready to cum right then and there, but it just wouldn't have been right.\n\nShe nodded sleepily and rested her head back on my shoulder.\n\nMy hands slid around her lower back and held her body tightly against mine. We stood there just resting until the water turned cold. Our sighs of enjoyment quickly turned to chills and giggling, as she shut off the water. We resumed our embrace, this time purely for warmth as we shivered together. I rubbed her shoulders and could feel her boobs jiggle. Her nipples hardened on a whole new level after feeling the cold water as they now lightly brushed against my chest.\n\nWe finally stepped out of the tub and she handed me a towel. I slid it around her and pulled her in close once again. She was like a drug. I know I needed to stop, but just couldn't get enough of her. I kissed her once more and left the towel wrapped around her as I grabbed my own towel off the rack.\n\nWe saw her soaked T-shirt on the floor and couldn't help but laugh.\n\n\"I'm really sorry about that.\" I said. \"But at least you're clean.\"\n\n\"Yeah, but now I know you're dirty...\" She said and softly laughed. \"I'm sorry, I'm not very good at talking dirty, I guess.\n\nMy heart practically skipped a beat. She was absolutely adorable. \"Come on. It's late.\" I said and guided her back to her room.\n\nShe crawled into bed and looked extremely peaceful. \"Goodnight, Sasha.\" I said, getting ready to head back to my room.\n\n\"You're not staying?\" She asked in a confused dreamy state.\n\nI wanted to stay more than anything, but it clearly was a bad idea. If Hana found out, I can only imagine what would happen. Not so much what she would say to me, but how it could impact their relationship. Last thing I wanted to do was to make two sisters resent each other for years. I couldn't possibly bring up Hana's name now and simply said, \"You need your rest.\"\n\n\"Just one minute.\" She said in a soft voice that my whole body knew was wrong, but somehow, I still couldn't resist.\n\n\"One minute.\" I crept into her bed, snuggling up behind her and wrapped my arms around her warm, naked body that was softly rising and falling as she drifted off. I could feel my penis nestled in between her cozy cheeks that butted up and squished against my hips, trapping a euphoric heat against my balls. I breathed in slowly and held her close, letting my own body start to rise and fall matching the soothing rhythm of her breathing.\n\n\"One minute.\" I whispered. \"Just one minute.\"\n\nI blinked a few times as the bright light creeping through the slits of the blinds hurt my eyes. My head was pounding. I blinked again, confused about where I was and sat bolt upright. \"Fuck!\" I said, finally realizing this was not my room. One minute had turned into god knows how long.\n\nI rolled over expecting to find Sasha asleep, but the bed was empty. \"Fuuuuck!\" I called out again and stood up. Despite my hangover and headache, my penis still bounced as if it was ready to finish from last night. I'm not sure it ever went down after the shower.\n\nI looked around the room and had no idea what time it was. \"Doesn't anyone use a clock anymore?\" I said, knowing I needed to get back into my room before Hana or anyone found out I slept in this room. I put my ear to the bathroom door and listened carefully. It was quiet. Thank god. I opened the door and rushed through to my room.\n\nI did it. I made it back to my room and no one saw. I said to myself with a huge sigh of relief.\n\nI might be okay. It will be okay. None of this is okay!\n\nMy mind went back and forth tormenting me like this as I got dressed, putting on jeans and a nice sweater before heading downstairs.\n\nThe family was huddled around the Christmas tree like they were all still kids. Zach was in boxers and a T-shirt, Suzan was wearing her robe and possibly not much else, and Sasha had on a baggy T-shirt and what looked like short, cotton shorts that were barely sticking out from the bottom of her T-shirt.\n\nAnd then there was Hana, wearing the same thing she had on last night before she left. We politely nodded to each other and I gave her a peck on the cheek. Neither one of us really made eye contact.\n\nActually, most of them were avoiding eye contact with me, but for very different reasons. Only Zach looked at me and said, \"The last one's up. Let's open some presents!\"\n\nI whispered to Hana, \"You all were waiting on me?\"\n\nShe nodded. \"It's a family tradition we always keep.\"\n\n\"Why didn't you tell me?\" I asked and soon put together a lot of the pieces. Maybe she meant to and went into my room and didn't see me there. Maybe she just got home from Brandon's and came straight to the tree. Neither option was great.\n\nI felt completely overdressed seeing all of them, other than Hana, in their pajamas. But it was fun to see them in their element. They started ripping open their presents, which again surprised me since I thought we were too old for that. My family stopped exchanging gifts years ago, but by now I should have learned they were a very different family than mine.\n\nThe gifts were a mix of clothing, gift cards and other small odds and ends. Suzan got each one of them a Christmas sweater. When it was all over, they thanked and hugged each other and moved into the kitchen for breakfast.\n\nSuzan walked over to me, holding her robe closed. \"You didn't open your present, dear.\" She said pointing to the last neatly wrapped present under the tree.\n\n\"I didn't know anyone got me anything.\" I said, completely surprised and picked up the package. I untied the red ribbon and tore open the blue wrapping paper that had patterns of snowmen on it. The rectangular box slid open, and there was a sweater with a picture of Santa tangled in Christmas lights.\n\n\"I actually got this for you a few weeks ago. Funny coincidence you ended up doing our lights outside.\" She smiled and was holding back a flood of emotions. \"I was hoping you could wear it here every year, but...\" her smile temporarily faded as we both knew I wouldn't be back. Not after all that had happened.\n\n\"Thank you, Suzan. It's beautiful.\" I glanced up and saw the look of joy on her face. \"I feel bad, I didn't get you anything. I didn't get anyone anything.\"\n\n\"Sweet child.\" She placed her hands on my shoulders and looked me in the eyes. \"You gave me more than you'll ever know.\" She kissed my cheek and wrapped me in a warm embrace \"Thank you for everything.\"\n\nI was so touched by her kindness, I could feel my eyes starting to water. \"Merry Christmas, Suzan.\" I whispered in her ear as I pretended, I wasn't about to cry.\n\n\"Merry Christmas, Cody.\" You could hear the same sound in her voice, as we smiled at each other and giggled, each wiping away a tear. \"Now let's go get some breakfast.\"\n\nWe walked into the kitchen and feasted on every breakfast delicacy you could imagine. Homemade pancakes, waffles, omelets, sausage, bacon, biscuits, croissants, French toast and a few other items I didn't even know the names of. It was unreal.\n\nAfter I had more than I should, I politely thanked Suzan for the delicious meal. Zach followed up my gratitude with a long, echoing burp.\n\n\"Music to a mother's ears.\" Suzan said, and we all chuckled at that. One by one, we got up, helped clear the plates and soon the kitchen was empty all over again.\n\n\"We should probably start packing.\" Hana said to me as she headed upstairs.\n\n\"You're leaving so soon?\" Suzan called out as she overheard our conversation.\n\n\"Yes, mom. You know I have work tomorrow and it's a long drive back to the city.\" Hana said plainly and disappeared upstairs to get her things.\n\n\"I'm sorry about that. I wish I could stay longer.\" I said to Suzan.\n\n\"That's okay, dear.\" She said softly. \"I don't envy the drive you have ahead of you.\" She raised her eyebrows and I knew exactly what she meant. Hana and I needed to talk about a lot of things.\n\nI quickly ran upstairs, threw my clothes in my bag and tried to find Sasha. I had no idea what I was going to say, but I needed to say something. I went in the bathroom and listened against her door. Silence. I knocked softly and let myself in before waiting for a response. \"Sasha?\" I called out knowing it didn't matter since she wasn't in the room.\n\nI grabbed my bag and headed downstairs, bumping into Zach in the living room. \"Leaving so soon?\" He asked, not at all surprised.\n\n\"Yes. I'm afraid so. Good to meet you, Zach.\" I offered my hand.\n\n\"It's been real.\" He said, shaking my hand with an overly firm grip.\n\n\"It certainly has.\" I nodded as he turned and hopped up the stairs two at a time.\n\nHana hugged her mom goodbye and started to walk toward the front door.\n\nNow it was my turn. \"Goodbye, Suzan. Thank you for everything and having me in your wonderful home.\" I gave her a hug.\n\n\"You are welcome any time. You hear me?\" She smiled warmly.\n\nI nodded and smiled back. \"Do you know where Sasha is?\" I asked with a bit of a concerned look on my face.\n\n\"Oh, umm. She's...\" Suzan paused and shook her head with a sympathetic grin.\n\nSomehow, she knew. I don't know how, but she knew.\n\nI nodded my understanding. \"When you see her, tell her I...\" I paused, and my eyes nearly started to water again, \"Tell her I'm...\"\n\n\"I will, dear. I will.\" She said softly.\n\n\"Cody, let's go!\" Hana called from outside the front door.\n\nI bowed my head slightly to Suzan and left.\n\nProbably half an hour went by in the car without a word spoken. Hana broke the silence first. \"Did you know I was out...\" She paused and rephrased her question. \"Aren't you curious why I didn't come home last night?\"\n\nIt was almost cute. She wanted me to be jealous. \"It's really none of my business, Hana.\" I said softly.\n\n\"The snowstorm was so bad, there's no way it would have been safe to drive...\"\n\n\"Hana, it's okay. You don't have to justify it to me. I'm not your boyfriend.\" And it wasn't until that moment when I realized I never really was at all. I tried to convince myself that I was, but she never thought of me as more than a distraction from her own painful demons. I didn't blame her at all, not really understanding what it must be like to miss someone like that. I just felt...sad.\n\nHer mouth fell slightly, confused by my statement and we both sat there quietly staring ahead at the snowy road. Our short journey together had run its course.\n\nAnother painfully awkward hour went by without a word from either of us. The silence seemed to bug Hana more than me and she finally said, \"I'm really sorry how things turned out. I never meant to...\"\n\n\"It's okay, Hana. I'm sorry, too.\" I'm not sure how much she knew about what happened on my side, but I got the feeling she understood.\n\nShe nodded and placed her hand on my leg. I glanced down curiously and looked over to her as she softly started to rub my inner thigh. \"What are you doing?\"\n\nShe slowly unbuckled my belt and undid my button quietly.\n\n\"Hana, what are you doing?\" I asked a little more forcefully.\n\nShe undid my fly without a word and slid her hand in my boxers gripping my soft penis, squeezing and gently tugging it as if to stretch it out like it was a balloon ready to be filled.\n\n\"Hana...?\" I looked down and saw my elongated, but still flaccid penis in her hands. \"What are you...?\"\n\n\"Just finishing what I started on the drive up here.\" She said as she continued to play with my awkwardly floppy penis.\n\n\"You don't have to do that.\" I said, realizing that was a pretty weak attempt to get her to stop.\n\n\"I know I don't have to.\" She lowered her head and slid my soft penis in her mouth, slowly sucking on it, pulling it further from my body with her mouth as it stretched upward.\n\nI was amazed at how I wasn't hard at all. She was able to suck on the whole shaft all the way down to my balls due to its current, soft state. It flopped out of her mouth like a broken accordion, and she tried a different approach.\n\n\"Hana!\" I said a little louder between deeper breaths. \"I'm not even sure I can...\"\n\n\"Shhh...\" she whispered and caringly kissed my balls, while my floppy shaft rested on the side of her face. She practically fit my whole scrotum in her mouth as I started to feel a little more blood rush to the area.\n\n\"I promised you I would finish what I started.\" She said, holding onto my now slightly thicker shaft.\n\n\"But that was before...you really don't have to...\"\n\n\"Just try to relax, Cody.\" She said softly just like she did on the drive the other day. She reached over and turned on the radio. \"Consider this my Christmas gift to you...\" and she took in my semi-hard cock in her mouth once again, feeling it start to harden as her tongue slid around the tip and coated the underside of my shaft.\n\nI read between the lines. This wasn't her Christmas gift, this was her going away gift. And it wasn't for me. It was so she could feel like she did something nice as a lasting memory. I couldn't help but wonder if she would still be doing this if she knew everything that happened with Sasha and me. And her mom for that matter.\n\nThe guilt was overwhelming but started to be replaced by the sensations she was creating on my growing member. She paused her sucking and said, \"Oh, I like this song.\" She turned up the radio and smiled at me once more before sliding me back in her mouth.\n\nI had heard the song that was playing several times before, but this seemed to be the first time it ever seemed relevant.\n\nBaby it hit so hard,\n\nI'm holding onto my chest\n\nMaybe you left your mark,\n\nreminding me to forget\n\nIt doesn't matter where you are,\n\nyou can keep my regret\n\nCause baby I got these scars,\n\nreminding me to forget\n\nThe words echoed in my head thinking about everything that happened this weekend. The pain Sasha felt, believing she would never be loved and the feeling of always living in someone else's shadow. The loneliness of Suzan and the unimaginable feeling of losing someone you built your whole life around.\n\nWhether we realize it or not, we're all scarred in one way or another and we can scar someone else just as easily without even knowing it. We're left with painful reminders that strike at different times, making the pain real all over again. And all we can do is try to forget.\n\nThose thoughts looped in my mind over and over, all while Hana was bobbing her head up and down my cock matching her pace to the steady rhythm of the beat.\n\nI didn't think it was even possible to cum right now, but her persistence was starting to overtake my negative thoughts and guilt. Sighing heavily, I brushed her hair to the side looking down and noted this was the last time I'd ever see my penis in her mouth.\n\nI drove mindlessly, trying to just relax as she suggested, but what I was really doing was trying to forget. I pulled over, the feeling was starting to get too strong to safely drive as she deep-throated my length, surrounding my shaft with pure warmth. I gasped and whispered, \"I'm close.\"\n\nShe stopped almost instantly and sat up, still stroking my nearly pulsing shaft. \"That was fast.\"\n\nNot again, I thought to myself realizing we were already near her apartment building.\n\nShe held onto my shaft, stroked it a few more times softly and looked around. A few people were walking on the sidewalk just outside of the car. It was probably too snowy for them to see anything we were doing, but we both knew this couldn't go on. \"I'm really sorry.\" She said softly and stroked my shaft once more before twisting it back into my boxers.\n\n\"Goodbye, Cody. Merry Christmas.\" She grabbed her bag from the back seat and left.\n\n\"Merry Christmas, Hana.\" I said back as the door shut and I watched her walk away.\n\nI drove across town to my place and sat in the parking lot for who knows how long. Everything was weighing on me, I didn't even know what to focus on.\n\nI closed my eyes and screamed, \"FUUUUCK!\" Out of frustration and pure exhaustion my head collapsed onto the steering wheel, causing the car horn to go off. Maybe 20 seconds of the horn blaring went by before I lifted my head. There were two smeared tracks of tears left on the console of the steering wheel, as I finally accepted how much this trip had affected me.\n\nJust as I was ready to go inside, my phone buzzed in my pocket. I was almost afraid to see what it might say.\n\nThere was a text from a number I didn't recognize. \"Hey.\"\n\nI paused wondering who it could be. I normally ignore messages from numbers I don't know, but something made me want to reply today.\n\n\"Hey. Who is this...?\"\n\n\"I'll give you a hint. You ruined two of my T-shirts.\"\n\nMy heart started beating faster. I could barely believe it and tried to play it cool. \"Hmmmm, not ringing any bells. Zach?\"\n\n\"Shut up.\"\n\nI didn't know what to say, but she replied before I had a chance to think of something.\n\n\"My mom gave me your number that you left for her the other day. She mentioned you wanted to say something to me...\"\n\nThat Suzan was something else. Did she really want my number in case of the storm yesterday, or did she know it would be needed for some other reason?\n\n\"Oh, right... I just wanted to say...\" I paused and tried to find the right words. Do I apologize? Thank her? \"That I owe you two T-shirts.\"\n\nThat felt dumb, but it was too late now.\n\nI stared at my phone like a teenager eagerly awaiting a response. Minutes went by and I was starting to fear my dry sense of humor was lost in translation.\n\nFinally, my phone buzzed again. \"You owe me a lot more than that.\"\n\nI breathed a sigh of relief. \"No doubt about it. How about I start with taking you out to dinner?\"\n\nMy heart was racing. Was I really this nervous about asking out a girl who I already shared so much with? The fact I felt like this told me it was something real.\n\nA few more minutes went by and my hopes started to fade. She was probably imagining all the reasons this was a bad idea. How awkward it would be to go out with someone who dated her sister.\n\nStill no response. I couldn't wait anymore and sent another text. \"And after dinner we can go T-shirt shopping.\"\n\nNo response. This was torture.\n\nFinally, my phone buzzed again. \"I'd like that. Thanks to you, one of those T-shirts is now stiff as cardboard.\"\n\n\"The holidays can be a very frustrating time.\" I replied.\n\nShe replied with a smiley face. \"What are you doing tonight? I know it's a little late in the season, but maybe you could help me put up some Christmas lights at my place...I didn't realize how much I missed those.\"\n\nI smiled deeply. \"I'd love to. But tonight, I have plans. How about tomorrow?\"\n\n\"Aww, ok. What plans do you have on Christmas evening?\"\n\n\"Need to go tell my mom how much I appreciate her.\" A huge sigh of relief came over me just from admitting that to myself. It was long overdue.\n\n\"That's really nice of you. I'll see you tomorrow then. Merry Christmas!\"\n\n\"Looking forward to it. Merry Christmas!\"\n\n---------\n\nEpilogue:\n\nThat was four Christmases ago.\n\nI have worn that ugly Christmas sweater that Suzan gave to me every year when I visit her family, which is now my family as well. My wife Sasha and I will be celebrating our second anniversary this spring.\n\nEvery year we visit, I still see Zach peeing in the tub. It's almost an ongoing joke at this point.\n\nWhile it was definitely awkward the first time Sasha brought me back to their house as her boyfriend, Hana got over it and was glad we both were happy. She still leaves most Christmas Eves to go see Brandon and is often in the same clothes on Christmas Day.",
        "Every year I look forward to Suzan's festive sweaters. And while we haven't shared any moments quite like that one drunken night, I make time for just the two of us by the fire each year. She usually has on her robe that seems to accidentally fall when she adjusts the logs, but she always grins when she catches me peeking. Little by little, I learn more about Frank and the kind, caring and loving person he was each time I visit. He sounds a lot like the man I want to become.\n\nIt's through these stories I'm reminded that life is more than just a series of painful events we try to forget. It's about the memories we choose to remember. Everyone has moments we'd like to forget, but it's what we remember that defines us. Good or bad, the choice is ours and I'm grateful for all the wonderful memories I have chosen to remember.\n\n\u2014\u2014\n\nLife is short. Make sure you show your appreciation for the ones you love in any way you can. You may never know how much it means to them.\n\nHappy holidays.\n\nThe end."
    ],
    "authorname": "Jjonest",
    "tags": [
        "family holiday",
        "shower",
        "crap",
        "christmas lights",
        "privacy",
        "road head",
        "mutual masturbation",
        "peeing",
        "pooping"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-crappy-holiday-get-together"
}