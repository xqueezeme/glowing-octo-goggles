{
    "title": "Three is an (Enjoyable) Crowd",
    "pages": [
        "Sunday\n\nJack stepped off the train and breathed in the cool fresh air. It had been a long conference and an even longer, stuffier train journey back. He was glad to finally be almost home.\n\nHe looked up the platform signs and shuffled his way towards the exit along with the rest of the rabble. He slowly trudged out from the platform to the pick up point.\n\nAnna was due to pick him up at this time. He hadn't seen her for 4 days and he was having withdrawal symptoms. He had also made a personal vow not to masturbate or touch his cock for the entire time they were apart. It had been fine for the first 2 days but last few nights his cock had grown and he was desperate to touch it and please himself.\n\nNow, standing and waiting for Anna to collect him in her car, his cock was beginning to stir just thinking of her. He shuffled his position as he stood to allow room for his growing erection.\n\nThen he saw her. \n\nShe drove into the station car park and made her way over to his position at the pick up zone. She drove into the bay and parked up.\n\nJack opened the boot in the back and threw his bag into the car. He then made his way to passenger door, opened it and stepped inside. He sat down heavily in the seat and looked across at Anna. She leaned over to him.\n\nShe looked into his eyes and passionately kissed him. Her hand wrapped around the back of his head and her other hand held the side of his face. Anna's lips gripped tightly around his mouth and her tongue slid inside his. She licked the bottom of his tongue and it circled and danced around his mouth. Jack's tongue reached out to meet Anna's tongue. She closed her lips around it and sucked it tightly as she pulled away.\n\n\"God Jack,\" she breathed heavily, \"I've missed you. I've thought of you all week.\"\n\n\"Me too,\" Jack responded.\n\n\"How was it?\" She queried.\n\n\"For around 80% of the time it was dull. But there were some interesting points. How was your week?\" Jack asked lightly.\n\n\"Work was fun, as usual. Grant was pissed you had gone instead of him. He had me running around all week for him and constantly kept leering over me...as usual,\" Anna explained.\n\nJack knew old Grant was a bit of a pervert at the firm and, having Anna as his very own PA, just gave him fuel for his own entertainment.\n\nJack looked across at Anna now, wondering how this beauty had stumbled into his life. She wore a light, cotton summer dress that showed off her tanned legs. As she drove off, the muscles in her thighs and calves delicately danced as each leg worked and manipulated the vehicle's pedals. The dress was white and Jack could see beyond the hem of the dress and her thighs underneath the almost see-through material.\n\n\"Grant is and old pervert, everyone knows it,\" Jack responded, \"he's talking about finishing soon anyway. That, or he will be pushed.\"\n\nShe raised an eyelid at that, \"think you'll join us up on 18 then Jack? I could offer you some very personal assistance then.\" She flashed a sexy look across at him.\n\nIt was true that conversations had begun about replacing Grant and Jack's name had been mentioned. He thought he would wait to see where those cards landed when that particular house fell down.\n\nAnna turned back to watching the road intently and he looked at the top of her body. Her breasts were fantastic, pert, shapely and the perfect size for him. The cotton dress clung to her shape and followed the contour lines of her waist up to her breasts. The were firmly pressed against the material of the dress. Jack could just peer down into her cleavage and he made out a white bra. Again, his cock stirred.\n\n\"Well, I for one hope you do move up,\" Anna suggested. \"You work hard enough and...it'd be nice to have someone that us girls could leer over, for a change.\"\n\nJack smiled, \"we'll have to see, won't we.\" He had missed Anna and his cock's reaction was evidence of it too.\n\n\"Jack, I've been looking forward to tonight,\" she continued, \"I'll be honest with you: I've kept my hands to myself all week in preparation. Tonight, we are going to have some fun and I need to cum really hard because I have saved myself for it.\"\n\n\"Me too,\" Jack responded. He looked across at her and she was smiling, she had a cheeky glint in her eyes too.\n\nHer skin was so soft and smooth and, with her hair tied up as it was, he could see her beautiful neck. Her deep brown eyes watched the road, searching for the roads home.\n\n\"Daisy and her new boyfriend have been staying over all week,\" Anna continued. \"But, I've told them to be gone by the time I'm back. They've been at it almost every night. So I think her training had worked wonders.\" She winked across at Jack, again a playful smile formed on her lips.\n\nJack smiled thinking back to that night, \"well done to her,\" he said, almost to himself.\n\n\"I've heard them both coming night after night in my spare room. It's been a real task keeping my hands above the bed sheets on some nights,\" Anna explained, naughtily. \"But we'll have the whole house to ourselves tonight, don't worry.\"\n\nJack wondered whether this could be the night. He had been seeing Anna for around a month now and they had still not had sex. Well, not any penetration anyway. He had cum (a really intense huge amount, on many occasions) but he was yet to slide his cock inside her tight pussy. His cock moved into a fully erect state whilst he thought about the moment. She had explained she wanted to wait and Jack was happy to wait for her. After all, he was still saving fun and having his needs met.\n\n\"I'm going to drop you at mine,\" Anna explained, \"and I've just got to pop and get some supples for us. You jump in the shower and I'll be with you soon afterwards.\"\n\nThey pulled into her street and Jack leaned forward to hide his erection. She slowed the car outside her house and stopped. \n\n\"See you in a bit,\" Jack said. He jumped out and smartly walked round to the boot to grab his bag. \n\nAnna wound down the passenger window and shouted, \"hey! Don't forget these.\" She threw a set of keys to him and he caught the deftly with one hand. He quickly ran up the drive and unlocked the door. Jack then retraced his steps and handed her the keys back.\n\n\"Back soon Jack,\" she looked down at his clear erection and smiled, \"make sure you wait for me.\" With that, she sped off. Jack watched the car, turned and made his way up to the open door. He grabbed his bag and pushed it inside. Jack closed the door behind him and slowly made his way up the stairs towards Anna's bedroom.\n\nOnce there, he let his bag drop to the floor in the corner and started to remove his clothes. It had been a long week and a shower was very much needed. Jack stood there in just his briefs and moved over to start the shower up.\n\nThen he heard something.\n\nJack froze and listened.\n\nThere it was again. The sound of movement. Next door, in the spare room. \n\nWearing just his briefs, Jack picked up Anna's straighteners and held them like a short sword above his head: Ready to strike.\n\nHe crept round to the spare room and quietly eased the door open to peer inside. He pushed it further and silently stepped in. \n\nThere was no intruder. But it was certainly a sight to see.\n\nLaying on the bed in a spread-eagled, star shape was Anna's friend Daisy. She was completely naked and her arms and ankles had been tied to each corner of the bed with scarves. She had been firmly tied down and couldn't move. She was wearing a black blindfold that completely covered her eyes.\n\nJack lowered the straighteners and looked at the young woman in front of him. Her breasts were pert and a little smaller than Anna's and, because of being tied down, her legs looked very long and toned. Jack could see her pussy lips. They were wet and open. His erection was already rock hard and it pulsed in his briefs as he looked at Daisy like this.\n\nJack wondered what on earth was going on here. Had Anna set this up for him? Was it some sort of test? Not a good day for a test after staying celibate for the week, he thought. Of course, it could have been a sexy game that had gone wrong. If so, where was Daisy's boyfriend?\n\nJack silently passed over to the bed. A floorboard creaked as he walked and Daisy's head instantly turned towards the sound, \"Ralph? Thank goodness you came back. You've been downstairs for ages. Quickly, I'm really aroused, lets get it over with before Anna and Jack get here.\"\n\nNow Jack understood. Ralph (obviously Daisy's current boyfriend) had just left her here as sone sort of cruel joke. What a dick, Jack thought.\n\n\"Hurry Ralph,\" Daisy begged, \"I've got so wet laying here like this.\"\n\nDaisy obviously thought that Jack was Ralph, returned to finally fuck her. \n\nJack smiled and moved over close to the bed. He reached over her naked chest to her tied up right arm at the furthest corner of the bed.\n\n\"Hmmm...Ralph...I can feel your cock against my breast.\"\n\nJack had inadvertently pushed his cock against her whilst leaning over her naked frame. He instantly moved back.\n\n\"Come on Ralph,\" Daisy continued to beg, \"quickly, get that cock out a fuck me with it. I neeeed to cum.\" She shook her arms against her material shackles.\n\nJack looked down at her body and his cock strained against his briefs. He looked down at his hands and thought of things he could do right now. He wanted to stroke her breasts and slide his fingers into that wet pussy. He could place his cock in her mouth and get her to milk his cock with her lips.\n\nBut he couldn't do it.\n\n\"Daisy, it's Jack.\"\n\nDaisy gasped and fell silent. Jack lifted the blindfold from her eyes and she squinted in the brightness as she looked up at Jack.\n\n\"Jack...I...er...\" she stumbled over her words.\n\n\"Don't worry Daisy. I think he left. Don't worry, let me cover you up,\" Jack reassured her.\n\n\"I knew it! The bastard!\" Daisy exclaimed. She turned her head and saw Jack in just his tight briefs with his cock fully erect.\n\nJack clarified the situation for her, \"Don't worry. Anna dropped me home and I was getting in the shower when I heard you. Hence my...er...lack of clothes.\"\n\nDaisy smiled as she focused her eyes on his erection. She raised her eyebrows, \"and...that?\"\n\n\"Er...I was...er...\"\n\n\"Don't worry Jack,\" she smiled, \"I suppose a naked tied up woman on a bed might do that to a man. Was it my breasts?\"\n\nJack glanced down at her breasts when she said the word. Her nipples standing erect.\n\n\"Or was it me being tied up and helpless laying here and begging to be fucked,\" she continued.\n\nJack shifted his position as his cock strained in his briefs.\n\n\"Or,\" Daisy teased, \"was it my soft, wet pussy? Did you look at it Jack? Wet and ready to be filled.\"\n\nJack stood in silence next to her still tied to the bed.\n\n\"Have a closer look at it now Jack, go on. I won't tell,\" Daisy instructed.\n\nJack glanced down at her pubic mound. He couldn't see her pussy lips from this position.\n\n\"No Jack. A proper look. Get down and have a look.\"\n\nJack looked at her and thought about what was about to happen. It's just looking, he justified.\n\nHe moved down to the foot of the bed and placed his elbows onto the mattress. He shuffled his body forwards to get a closer look. Her pussy was wet. Her lips were flushed and he could just make out the opening of her pussy. He looked closely and could see that her clitoris had protruded from under its hood.\n\n\"Is it wet Jack?\" Daisy questioned. \"It feels wet. I was desperate to cum Jack...I still am. See my clit Jack. I would only need a few rubs there and I could cum. Please Jack, please...\" she begged. She was thrusting her hips up trying to tempt Jack. \n\nHis cock was straining and he was desperate to touch the pussy in front of him. He blew lightly over her clit. She reacted and moved her hips.\n\n\"Pleeeeeaaaase Jack, just touch it or release my hand, I want to cum now!\" She was desperate now. \n\nJack stood up and moved backwards from the edge of the bed. He sighed and gently rubbed his hard cock over his briefs. He knew that he too would cum quickly over her were he to give it some attention. He thought about just stroking his cock over her pussy.\n\n\"Daisy! What has happening here?!\" Anna suddenly appeared in the doorway. \"I've been listening for the last 5 minutes and Jack..I'm impressed. But Daisy, you are such a tease.\"\n\nAnna stepped into the room, her dress flowed up and behind her as she stepped confidently forward. She passed Jack and stood at the side of the bed. \n\n\"I'm sorry your 'so called' boyfriend left you her feeling frustrated but Jack can't do anything about that.\" Anna was talking quickly, she seemed annoyed but her face had a faint smile and the mischievous look was back in her eyes.\n\n\"Sorry Anna,\" Daisy pleaded, \"I never knew it was Jack at the beginning and then the lust just seemed to overwhelm me. I'm so sorry.\"\n\n\"You should be,\" Anna responded. She looked down at Daisy - still naked AND still tied to the bed - and she smiled.\n\nJack looked at Daisy too. Her calves were stretched by the by the way Ralph had tied her to the bed and her tanned legs looked long and toned.\n\n\"Right,\" Anna abruptly said, \"let's see...\"\n\nAnna leaned over Daisy and placed her hand instantly on Daisy's wet pussy. Anna instantly started circling Daisy's clit very quickly.\n\nDaisy gasped from the sheer speed and force used by Anna, \"Oh, ohhh fffuck.\"\n\nAnna continued her rapid stroking, \"this is what you wanted wasn't it?\" Anna demanded, \"you said just a few strokes and you'd cum, isn't that right Jack?\"\n\nJack silently nodded and watched as Daisy's hips started to jerk and match the rhythm of the pleasurable assault to her wet pussy.\n\n\"Yes,\" she groaned, \"hmmmm...I'm so close...\"\n\nAnna's stroking speed was relentless. She was using just her left hand as she bent over the naked girl tied to the bed. \"Wow, you were aroused...\"\n\nDaisy arched her hips off the bed, \"fffffuck...don't stop...don't stop...\"\n\nBut Anna did stop. Just before Daisy's orgasm overwhelmed her. \"Oh dear Daisy, I thought you said you were really close.\"\n\n\"Ohhhh ggggod, I'm so close. Please, just a little more...please,\" Daisy begged.\n\nAnna looked at Jack who had moved to the bottom of the bed to watch more closely. She looked down at his hard cock. Every inch of it was clearly visible through his tight white briefs. She licked her lips and turned her attention back to Daisy. \"Let's see how wet this pussy really is then.\"\n\nAnna placed her hand back down at Daisy's pussy. She slid two fingers straight inside up to her knuckles. \"Wow, you were right. You are very wet,\"\n\nDaisy groaned, \"ohhh, please fuck me, fuck me please.\"\n\nAnna left her fingers inside and she started wiggling her fingers against the roof of Daisy's pussy. Daisy instantly reacted and her hips started gyrating and grinding into Anna's fingers.\n\n\"Fffffuck...don't stop...I'm going to cum...please don't stop...oh ffffuck...\"\n\nAnna pulled her fingers out.\n\nDaisy's pussy lips pulsed and stayed wide open for Jack to see. \"Fuck Anna. Awww, this is killing me, I need to cum,\" Daisy was starting to get a little angry now.\n\nAnna giggled. She brought her fingers up to her mouth and placed the wet fingers in her mouth and tasted Daisy's juices. Anna looked across at Jack and started to lift her cotton dress up over her body. \n\nHe watched as her sexy toned body was revealed. She unhooked her bra and Jack saw her swollen breasts and erect nipples. Anna continued to undress and eased her white thong down her legs and onto the floor.\n\n\"Everyone's naked now Jack, join us,\" Anna said.\n\nJack pushed his tight briefs over his thighs. He erect cock flicked back against his stomach as the elastic waistband flicked over his cock.\n\nAnna gasped when she saw his cock, \"get up on your knees on the bed Jack, in between her legs.\"\n\nJack kneeled between Daisy's open legs on the bed. His cock, rock hard, was pointing up over Daisy's body.\n\nAnna joined then on the bed. She stood up with a leg either side of Daisy's head. Daisy looked straight up and she could see Anna's trimmed pussy directly above her head now. Anna was facing Jack on his knees in between Daisy's legs.\n\nDaisy slowly lowered herself down so that she was balancing on her haunches closely above Daisy's head.\n\n\"You're going to watch me now Daisy.\" Anna instructed. Anna lowered her hand down to her own pussy and slowly started stroking her pussy lips. \"Hmmmm, that feels so good. I've been so wet and ready to cum all week and now, Daisy, you're just going to watch.\"\n\nDaisy's eyes watched intently as Anna stroked her pussy. Daisy's mouth was just inches away from Anna's wet hole.\n\n\"Ohhh god. This is what your pussy needs isn't it Daisy? Hmmm...just fast stroking...fffffuuuuck!\" Anna moaned. She was concentrating on her clit and using small circles that brushed over her protruding bud.\n\nJack watched intently. His cock was pulsing and pre-cum had gathered at the top of his cock.\n\nDaisy was desperate for someone touch her. She was groaning whilst tied to the bed.\n\n\"Kneel closer Jack and stroke your cock over that pussy. Oh shhiiit,\" Anna moaned.\n\nJack shuffled on his knees further up the bed. His knees now rested against Daisy's thighs. He held his cock in his hand and looked down. He was just above Daisy's pussy. He could feel the base of his balls against her pussy lips. Daisy moaned when she felt the soft touch but knew it wasn't enough stimulation for her. She groaned in frustration.\n\nJack used one hand to balance his weight and his other hand was tightly gripping his hard cock.\n\nSuddenly Anna leavned forwards too. Her face was now extremely close to Jack's face. Their noses were nearly touching. Anna looked directly into Jack's eyes. She was still stroking her clit and her breathing was becoming shorter as she breathed through her nose.\n\nJack had to slow down. He was already very close to cumming and now, feeling Anna's breath on his lips, he was tilting towards his orgasm.\n\n\"Jack,\" Anna whispered whilst looking directly at him, \"stroke that cock. Fffffuuuuck! I'm close Jack.\" Her eyes were beginning to roll up into her head. \"Look Jack...look at how close I am to her mouth.\"\n\nJack looked down and Daisy was transfixed at the attention Anna was giving to her clit. He knew Anna would be able to feel Daisy's breath on her pussy. He gripped his cock tighter and started to keep his hand still and use his hips to fuck his hand slowly.\n\n\"God Jack,\" Anna continued whilst staring directly into his eyes, \"I want...I want us to c-c-c-cum together. Oh fuck, oh god. I'm going to count down. Cum with me.\"\n\nJack had to stop. He felt his orgasm building.\n\n\"3,\" Anna whispered. She sped up even faster on her clit.\n\n\"2,\" she continued. Jack thrust his cock forward in his fist. He gripped it tight and the feeling was incredible.\n\n\"1,\" Anna mouthed without talking. All the breath gone from her body. \"I'm cumming, I'm cumming.\"\n\nAnna thrust down onto her hand and her mouth gently brushed against Jack's. Her pussy briefly brushed against Daisy's mouth.\n\n\"Ffffuck. OH GOD...OH GOD...NNNGGGGGG! I'M CUMMING, I'M CUMMING!\" Anna screamed. \n\nA week of no masturbating had caused her to have an intense orgasm over Daisy's mouth.\n\nJack thrust forward and a huge amount of cum exploded from his steel cock. It spurted out over Daisy's breasts. He pulled his hips back and thrust forward again. His cum flew out over Daisy's stomach. He thrust again, still more cum to get out. It dribbled out of his cock and down onto Daisy's pussy. Jack used his hand to milk his cock one more time and again the white stream covered Daisy's pussy and her pussy lips. \n\nDaisy felt every drop of cum land on her tied up naked body. She was extremely frustrated and was in desperate need for some attention.\n\n\"Ohhh god. Fffuck...that was hot and intense. I bet you're desperate to cum aren't you Daisy?\" Anna looked down at Daisy's cum-covered body and smiled. What do you think Jack? Shall we let her cum?\"",
        "Jack smiled. Anna knew the answer. Anna reached over and untied one of Daisy's arms. Anna resumed her position just above Daisy's face.\n\nDaisy instantly drew her hand down to her wet pussy and and stroked her clit hard and very fast.\n\n\"Ohhh goddd!\" Daisy moaned.\n\nJack watched as his cum was spread over her clit and around her pussy.\n\n\"Place you cock near her pussy Jack, go on.\" Anna instructed. \"Let's help her out.\"\n\nJack placed his cock, still quite hard. Right near the opening of Daisy's pussy. Anna had leant right over for a closer look. It meant that Daisy could see Anna's wide open pussy now.\n\nJack slowly stroked the cum-covered head of his cock against Daisy's pussy lips. She continued to rub her clit and involuntarily moved her hips to the head of his cock. He felt the opening of her pussy and placed his cock head so the tip was almost inside.\n\n\"Oh my god! I'm so close...I'm going to cum. Fuck...oh fuck...oh FUUUUCK! NNNNNNGGGGG!\" Daisy bucked her hips to meet the attention from her fingers and let the intense - much needed - orgasm wash over her body. \"AHHHH...FUCK!\"\n\nShe slowed her circling down as the tenderness in her pussy replaces the intense feeling. Jack removed his semi-erect cock from her opening and shuffled backwards. \n\nAnna looked up at him and smiled. She then reached back and untied Daisy's other arm.\n\nJack untied her legs and suddenly Daisy let out a loud laugh which made Jack and Anna smile in surprise. \n\n\"Fuck him!\" Daisy laughed, \"he missed out today!\"\n\nJack continued to smile as he got off the bed and made his way to the shower."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "threesome",
        "ffm",
        "dirty talk",
        "mutual masturbation",
        "tied up",
        "cum on pussy",
        "tease",
        "orgasm"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/three-is-an-enjoyable-crowd"
}