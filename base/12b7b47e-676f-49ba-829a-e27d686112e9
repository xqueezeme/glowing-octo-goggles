{
    "title": "The Agnus Dei Gambit",
    "pages": [
        "Randi wanted, \"Hanging by a Thread\" and my buddy Rick at Rkv330/aka Bluedevil had his usual great idea. The main characters are from The Long Goodbye, The First Deadly Sin, and The Big Short. It's in LW because nothing I write fits into any category. Plus, my seven regular readers look for me here. I hope you enjoy - DT\n\nTHE AGNUS DEI GAMBIT\n\nMy wife Kelley plays 16-inch softball in Grant Park. She's the social one. Me? I powerlift at the \"Y\". We troglodytes don't talk much --just grunt and scratch. \n\nThe only fans at a 16-inch game are the significant others, and most of them are drunk. But It's the thought that counts. So, I perch in a lawn chair and quaff a few Old Styles, while my wife imitates Roy Hobbs.\n\nKelley's on a team of U of Chicago profs. Needless to say, an infield made up of future Nobel Laurates isn't going to light up the Chicago beer leagues. But my Kelley's blood-thirstier than a caged wolverine. And so, she plays the game with all the savagery of Ty Cobb. \n\nThe rules require four women and six men. The men play bare handed. The women wear gloves. Kelley would normally insist on going bare-handed. But she's the first baseman and the glove gives her that little extra edge in case the throw's off. Like I said, she's competitive.\n\nHitting a ball that's the size of a harvest moon doesn't interest me. I mean seriously??! It would be hard to miss something that big. Still, watching my wife bamboozle a team full of macho-man lawyers, or hedge-fund managers, never fails to entertain. \n\nKelley bats cleanup. There's a method to that madness. Guys on the other team see a drop-dead gorgeous redhead in tight polyester baseball pants. So, they walk in a few steps. That's a mistake. \n\nHitting a mush ball any distance is like trying to put zip on a cantaloupe. The physics simply aren't there. It's the reason why 16-inch is so popular in those dense old Chicago neighborhoods. The ball doesn't travel very far.\n\nBut baseball is a fast-twitch leverage sport where the emphasis is on eye hand coordination and proper mechanics. Kelley's reflexes are lightning fast, and she has the powerful, disciplined body of a dancer. So, the ball is always dead center on the barrel of a bat that is traveling at an uncanny speed. \n\nWatching my wife drive a frozen rope ten feet over the startled left-fielder's head certainly lays rest the old saw about girls and baseball. In fact, I don't think I've ever been to one of Kelley's games where the first inning score wasn't whoever was on base at the time, plus my wife.\n\n********\n\nIt was an exceptionally shitty July evening, even by Chicago standards, stifling heat, and humidity. You could just sense the coming storm. Chicago gets the benefit of the lake. But on evenings like this, the hot muggy air and the cool Lake Michigan water don't play well together. \n\nThe big greenish-black clouds were building overhead, and the atmosphere had that tingly feeling you get just before life becomes very interesting. The wind began to rise, and the whole world went dead silent. Then, there was a blinding flash and a series of rolling thunderclaps. \n\nAll I could hear was my wife loudly arguing with the guy who had just called-off the game. Her team was down two runs in the bottom of the seventh and she was coming to bat with two on. I mean really?!! If Mighty Casey was willing to risk getting struck by lightning, then the rest of those pussies ought to stand out there while she finished off the hapless foe. \n\nI was hotfooting through the formal garden between Upper Hutchinson and South Michigan when Kelley caught up with me. I needed the head start. Kelley's extremely fast. We make quite a contrast. She's, lithe and sleek and pantherish, in a maroon U of C tee, and tight baseball pants. Moi? I look like a hairy rhinoceros in an ancient aloha shirt, old-fashioned Bermuda shorts and floppy red Chuckies. \n\nKelley had a woman in tow. That was Isobel, the right fielder, and her BFF from the good old days at Hyde Park. Kelley is a woman of infinite contrast. She's Celtic beauty incarnate, flat-out gorgeous, in a healthy Sports Illustrated cover model way. But it's not her beauty that amazes. It's her intelligence. That's' where she and Isobel connect. \n\nRight this second however, it looked like my genius wife was going to get us drowned. We had gone about 200 feet down Michigan Avenue, headed for the parking lot over on Wabash, when God hit us with a bucket of water. I zagged right and into the Hilton. We could all dry off at 720 South.\n\nThe restaurant is expensive. But it has a nice collection of Irish whiskey and it's a proven fact that Jameson's can dry wet clothing. Just ask the Irish. It rains a lot over there, and they drink gallons of it, even babies.\n\nThe restaurant was a bit upscale for the way we looked. So, the host hesitated for a second. Then he caught sight of Kelley in a drenched t-shirt. That opened his eyes so-to-speak. He discretely escorted us to a little alcove at the far end of the bar. We squished our way into the banquette seating and the waiter appeared. \n\nThe waiter looked me over with the usual disdain. I could easily pass for a mob enforcer; glittering black eyes, buzz cut, eternal five o'clock shadow, no neck and about 240 pounds of bulky muscle. \n\nThen his eyes shifted to Isobel. Isobel's presence will answer any questions about your pedigree. It's something in the way she holds herself. She's not consciously trying to project superiority. In fact, she is a very humble little woman. But the power is unmistakably \"there.\"\n\nPhysically, Isobel is a tiny woodland creature, slight of frame, brown hair, brown eyes, and brown skin. You might look past her once. But you won't do it twice. It's almost an alien intelligence and it's intimidating. \n\nThe waiter coughed and said, \"May I take your order?\" I ordered three shots of Redbreast 21 and handed him an American Express Black. That convinced him that I was mobbed up. He hustled away like he thought I was going to kneecap him.\n\nIsobel is Kelley's best friend. They've been buds since they were undergraduates over in that southside ivory tower. Which is ironic because Isobel is a sparrow and Kelley's a hawk. \n\nMy wife is, and always has been, an eye magnet. She radiates the soul of the Irish; abundantly thick copper hair, huge emerald eyes, jaunty spirit, wholesome beauty and sparkling good humor. While, Isobel isn't, \"of this world.\" \n\nIsobel's the prototypical nerd. Everything she wears is slightly out of kilter. That includes her Pam Grier 1970s Afro. But she is also one of the top geneticists at the University of Chicago's Institute for Genetics and Genomes. That's where Kelley hangs out.\n\nLet me stop you right there!! I know what you're thinking. So, I'm going to put you straight. I don't suffer a shred of jealousy over my wife's eggheadedness, or that of any of her eggheaded friends. It takes nothing off me. It's just who she is, and I love her. \n\nI am who I am. Nobody'd ever mistake me for an intellectual. I've got a different kind of smarts and that's always gotten me by. We're two sides of the same coin, Kelley, and me, and we're inseparable.\n\nRight this second though, my wife and her friend were engaged in an animated conversation that included words like \"nucleotide\",\" adenine\", and \"parallelized epigenome characterization\". I knew none of those words. So, I said jokingly, \"Could you clue a poor Army cop in on what you two women are talking about.\"\n\nIsobel looked embarrassed. The last thing she wanted to do was exclude me. Kelley laughed and said, \"We're talking about Isobel's latest project at IGG.\" \n\n*****\n\nJohn enjoyed the self-scourging. It was his favorite form of debasement. Just as the Master had taught, \"If anyone wishes to come after me, he must deny himself, and take up his cross.\" Bearing that cross was John's only interest. \n\nHe DID have one other interest. That was killing. It was expected of all the Apostles. and John was the most ardent of the group. The Apostles had unique access to absolute truths, certainties so perfect that it was their duty to impose them on everyone else. That was John's mission.\n\nThe Apostles traced their lineage back to the Sicarii. The Sicarii predated the Hashshashin of Almut, from which the word \"assassin\" was derived. So, it might be said that the Sicarii were the first organized terror group. \n\nThe Sicarii were originally Jewish zealots who were supposedly wiped out at Masada. That was a myth fostered by the Romans so that they could sleep at night. In fact, most of the Sicarii joined the diaspora after Titus's destruction of the temple in 70 AD. In return, it was one of the Sicarii who arranged Titus's untimely demise. \n\nEvery subversive sect needs a purpose. For the Sicarii, that was ensuring the dominion of the spirit over the flesh. It wasn't religion. It was a deep-seated fascination with the most absolute form of corporeal independence -- death.\n\nAfter Rome fell, the Sicarii settled into a mountaintop castellum near Melago in the Italian Alps. That valley was perhaps the remotest place in the known world. Centuries passed, and the Sicarii morphed into an inbred group of mystic absolutists whose single precept was to assure the triumph of the immortal soul. \n\nThat might have even been admirable, in a backward kind of way, if it weren't for the methods. The Apostles were born as assassins and that was their defining characteristic. In many ways it was pure pragmatism. If you disagreed with them, then you were eliminated; quick, efficient, and effective. \n\nThat had been the fate of the Templars. They were the Apostle's only real competition for ownership of the spiritual agenda back in the day. The problem was that the Templars got too rich and worldly. So, it was easy to engineer their downfall. The King of France was just the means to that end. \n\nThe Brotherhood was restricted to twelve Apostles. Those twelve men were privy to the mysteries of Apostolicism. But there was always a thirteenth. Judas Iscariot had been treasurer of the Brotherhood before his betrayal and excommunication. Hence, one Brother named Judas always lived in exile and served as the Apostle's catspaw in the wicked world. \n\nDe Nogaret was the Judas in the Templar era. He was advisor to Philip the Fair. It was De Nogaret, through Philip, who eliminated the Templars. \n\nOf course, there were many levels within the order, from novice to enlightened. But there were never more than a dozen Apostles as the Scripture demanded. These men were replaced as the incumbents died. John was always the youngest, just as the original had been, and he was \"beloved.\" \n\nJohn in turn, was the most fanatical of the Brotherhood. He channeled his passion into utter dedication to the purposes of the group. That meant endless days perfecting himself. The result was a chiseled six-foot specimen who could move like a striking snake. Nobody bested him in physical combat. \n\nJohn's skills were legendary. He had trained himself to lie motionless for hours in the snow of the Apostle's Alpine lair, wearing nothing but a white Shinobi Shizoku. He particularly enjoyed killing with a sword. It was such a timeless method and it allowed him to exhibit his extraordinary physical gifts. \n\nHis weapon of choice was a Fujiwara Kanenaga katana forged in the 17th Century. It was never far from his hand. Yet, John was also adept at every other form of killing. He could poison you with household items or assassinate you with everyday things. But his unique talent was his chameleon-like ability. \n\nJohn loathed the physical world. But he had made himself adept at every nuance of it. He could hide in many forms, humble peasant to ultra-sophisticated man of the world. He was a master of sex, even though the act repulsed him, and he particularly hated the sounds and smells. It was a sacrifice he made for the Brotherhood.\n\nJohn DID love technology. The irony of furthering spiritual ends through virtual means was totally lost on him. But in cyberspace, he could leave his bodily limitations and glide through cyberspace, like an all-seeing god. It was the only pleasure that he allowed himself in a world of relentless self-abnegation.\n\nAs John lay naked on the cold stone of his cell, he eagerly contemplated his next assignment. This would be the time of reckoning, the final battle between science and the spirit. The struggle would begin tomorrow, and he was relishing his first moves.\n\n*****\n\n\"You're doing what?!!\" I thought I'd just heard Isobel say that her group was sequencing the DNA of Jesus Christ. \n\nKelley laughed merrily and said, \"What Isobel said was that the IGG is planning to sequence DNA taken from the Shroud of Turin.\" \n\nI said puzzled, \"Isn't that the same thing?\"\n\nIsobel said, without an ounce of condescension, \"Nobody knows whether the Shroud is even authentic, let alone who was buried in it.\"\n\nShe continued offhandedly, \"The Shroud's embedded in Catholic lore but it has never been dated to Christ's time. The earliest mention of it is from a letter written in 1390 by a Bishop in Lirey, France. That's also the period that the radiocarbon dating sets it.\" \n\nKelley added, \"There are blood stains in the cloth that are located at the parts of the body that coincide with the reported wounds that Christ got at his crucifixion.\"\n\nIsobel piped up happily, \"The dried blood is still viable. An Italian forensic pathologist did an analysis back in the '80s. It's type AB positive, only four-percent of the world's population has it.\"\n\nKelley said, \"We've had the capability to sequence the DNA from the Shroud for a long time. But without anything to compare it to, the only thing we'd be able to tell you are the basic geographic and ethnographic features of the person who was wrapped in it and we already know that.\"\n\nIsobel added eagerly, \"Then a few bones of John the Baptist were dug up in a church in Bulgaria.\"\n\nI gave her a \"please\" look and said incredulously, \"Seriously??!! Bulgaria??!!\"\n\nKelley laughed and said, \"You don't know where Bulgaria is, do you?\"\n\nI shook my head meekly, \"No.\"\n\nKelley said, \"It's on the Black Sea just a hop-skip-and-a-jump by ship from Istanbul, which was Constantinople in Roman times.\" \n\nI looked baffled. She clarified, \"Constantine the Great is the guy the city is named after. He made it his capitol and named it after himself.\"\n\nI continued to look bewildered. Kelley smiled and added meaningfully, \"He's the one who made Christianity the official religion of the Roman Empire.\"\n\nI said cynically, \"So what?\"\n\nKelley laughed and continued, \"Constantine's mother was Helena, now known as St. Helena. She was a prostitute when she met Constantine's dad, the Emperor Constantius.\" Kelly was smiling as she said it. It WAS a little ironic. \n\nShe said wryly, \"Helena's technique must have been impressive. Because Constantius promptly married her, and Constantine was the result.\" Kelley ought to know. She's a master of the bedroom arts. \n\nI said doubtfully, \"So???\"\n\nKelley added in her usual long-suffering tone, \"Helena is a Christian saint because she did a tour of the Holy-Land when she was eighty years old. While she was visiting the place, she grabbed every religious artifact she could lay hands on; from the \"True Cross,\" to the \"Holy Lance.\"\n\nThen Kelley paused for dramatic effect and said, \"The bones she brought back are attributed by tradition to John the Baptist. They've been carbon-dated to Jesus's time. So, they're likely one of her souvenirs. Since Bulgaria is next door to Constantinople, it doesn't seem odd that they would end-up there.\"\n\nIsobel chimed in excitedly, \"John the Baptist was Jesus's second cousin. That gives us the genetic markers in the mitochondrial DNA. If we get a DNA match, that will confirm that the Shroud is indeed authentic, and the occupant was you-know-who.\"\n\nThen she got an exalted look and said, \"Once we sequence Jesus Christ's DNA, we will be able to tell the world exactly who he really was.\"\n\nI ducked my head and glanced around like there might be Jesuits with torches waiting to light the tinder at my feet. I said horrified, \"Don't you think that the Christians would view that as a bit sacrilegious??!!\"\n\nIsobel shrugged and said matter of fact, \"It's just science.\" \n\nI'm as pagan as the day is long. But Kelley is an Irish Catholic. I looked at her questioningly and said, \"What do you think Babe?\"\n\nHer emerald eyes were blazing. She said, \"I'm a Catholic and a scientist. I believe in truth. Jesus's divinity is an article of faith to me. But the evidence is right there. It would be criminal not to test it.\"\n\n*****\n\nThe first-class attendant on the Alitalia flight from Fiumicino, to O'Hare, was getting nervous. She'd even contemplated passing a 7500, potential hijack, code to the pilots. The man sitting in seat one-Lima was THAT scary.\n\nHe had almost angelic beauty. But he just sat there, like he was a statue. Normally the international players in first-class hit on her. She was a stunning blond. But this guy refused the breakfast and lunch service, and he didn't even look at her when she asked him if he needed anything.\n\nJohn was experiencing rapture. He always felt that way when he was about to kill for the faith. He reviewed the plan. His flight had left Italy at seven-twenty in the morning and with the seven-hour time difference he would be on a CTA train shortly before noon Chicago time. One of the Apostle's novitiates would pick John up at the Loop and bring him to the place of execution. \n\n*****\n\nThe speed limit on U.S. 41 is posted at 45 miles an hour. But Chicago drivers are so aggressive. that anybody traveling at that speed would get rear-ended, even by the little old ladies. \n\nThe light changed and the black SUV made the turn off of 57th and started northbound on South Lake Shore. It was traveling at sixty-miles-an-hour when it appeared that the driver made the conscious decision to hit the center abutment of the walkway to Regent's Park. \n\nThe car accelerated, swerved hard left and climbed the center divider. It must have been doing 90 miles an hour at that point, because the frame skidded sideways for several yards along the retaining wall and then hairpinned around the cement stantion of the overpass. \n\nJohn and the Acolyte had been sitting leisurely on the big rocks in front of the lake. Once the target came into range, John used a laptop and a small portable GSM antenna to \"evil twin\" the nearby AT&T 850 MHz LTE cell tower and wirelessly connect to the vehicle's OBD-II port. \n\nThe vehicle's CAN-bus is wide open to that port and the CAN commands the embedded controls for the accelerator, brakes, and steering. The first hint that the occupant had that he was going to die was the sudden uncontrolled acceleration. Pumping the brakes did nothing. The steering wheel swerved, there was a tremendous crash, and the occupant was DOA.\n\n***** \n\nKelly got the call around 3:30 in the afternoon. She looked concerned. She did the usual mysterious, \"Uh-Huh, uh-huh,\" and said, \"We'll be right there.\" \n\nWe met Isobel in the lobby of the University of Chicago Medical Center. She was beside herself with grief. Her boss, Dr. Atkinson had been brought there, after the jaws of life had pried him out of his crushed vehicle. He was thoroughly dead, and Isobel was a hot mess. \n\nWe walked her out of the South Ellis side of the Medical Center and through the little park into the Rockefeller Chapel. The chapel isn't exactly cozy. It was built by John D himself. So, it's like somebody dropped Winchester Cathedral on the Midway. However, it's relatively private. \n\nWe found a pew off a side aisle, in the main body of that cavernous building. Kelly does sympathy a lot better than I do. She slid in next to Isobel. I stood in the aisle facing her. Kelly said, \"I'm so sorry Isobel. I know that Fred was a friend and mentor. What happened?\"",
        "Isobel looked at her with misery in her eyes and said, \"They say it was suicide. But I know they killed him. It was because of the project.\" \n\nI said puzzled, \"What happened?\"\n\nIsobel said weepily, \"He supposedly rammed the abutment on the footbridge over South Lakeshore down by the park. He would NEVER do that. He was very excited about the blood sample. We just got it today.\" \n\nKelly was tracking better than I was. She said, \"So the sample from the shroud arrived. Did he have it in his possession?\" \n\nIsobel grimaced and said, \"Of course not. It's in a controlled environment in the Human Genetics lab.\"\n\nA thought began to hatch in my suspicious cop mind. I said, \"Is it guarded?\"\n\nIsobel looked puzzled and said, \"Just the University Police? Why?\" I looked at Kelly. She saw what I saw. I said to Isobel, \"Take us to that sample as fast as you can!\" \n\nIsobel and Kelly arrived at the Department of Human Genetics several seconds before I did. I'm not built for speed. \n\nThey were surveying the carnage when I arrived. I was puffing like a steam train. Benches and equipment were overturned and a male and female were laid out on the floor, clearly dead. Nobody's head belongs at that angle.\n\nKelly was calling 911. Isobel was frozen in sheer anguish. I charged past them in the direction of the cleanrooms. I was hoping whoever did it was still on the premises. \n\nThere was one door hanging by its hinges. That seemed a likely place to start. I slowed and stopped just outside the entrance. There was the sound of systematic ransacking going on inside. I thought to myself, \"Aha!!\" and stepped into the room. Then I stepped right back out.\n\nThe axe they'd appropriated from the fire cabinet missed me by a fraction of an inch. There were two of them. The one who had swung the axe was a big guy. The other one looked like the Archangel Gabriel. \n\nHe was so beautiful that he was almost non- human. He was the one who was in the process of removing something from the safe-storage locker. \n\nI knew what he was taking. But I had to deal with the other dude first. Since, he was the one with the sharp thing. I turned to face the guy. He was smart enough not to raise the axe over his head. If he'd opened his body, I would have taken him out easily. Instead he backswung the axe at me. \n\nI'm bulky but I'm not muscle bound. I work on quickness and agility more than I do strength, because that's what it takes to win fights. I bowed myself away from the axe head as it swished past and stepped into the guy with a huge right hook. \n\nThat clearly broke a couple of ribs. He went, \"ooofff\" and the axe flew. He started to double over which was convenient since I was already in the process of grabbing the back of his head and ramming his face onto my swiftly rising kneecap. There was a crack and he hit the floor. \n\nIn the meantime, my angelic friend had whisked out the door headed for the exit. I heard Kelly make a loud effort noise and there was some crashing and banging. Then there was silence. \n\nI grabbed my unconscious victim and dragged his limp body out into the main room. Then I dropped him and kicked him a couple more times. That produced a moan of sheer agony. \n\nThe stranger had become the object of my wrath because Kelley was lying splayed out against one wall looking as dead as the other two corpses. Isobel was bending over her wringing her hands in misery.\n\nIt took me two seconds to get to my wife. She had a rapidly developing bruise on one of her marvelous cheekbones. But I could see she was breathing. \n\nIsobel said distressed, \"She tried to stop him. She hit him with one of those martial arts kicks. But he just swept her aside like he was swatting a fly.\" \n\nAt that point Kelley opened her eyes. My wife is no shrinking violet. Her Irish was up, even though she had just been sent to la-la land, and she was looking for somebody to kill. She began struggle to her feet. I held her back saying hastily, \"It's okay, he's gone. We'll get him later.\"\n\nShe slumped back looking concussed. I said to Isobel, \"Take her across the street to the medical center and have her looked at. I have a few questions that I want to ask my friend before the cops show up.\"\n\nI helped Kelley to her feet and the two of them shuffled out of the lab. Kelley was getting her usual feline grace back. But it was clear she had been rocked. \n\nThe other guy was an accessory to a murder. So, he wasn't going anywhere except downtown. So, I only had a short window to get the answers. Since, it was a good bet that I'd be spread-eagled on the floor next to him when the cops showed up; at least until Isobel and Kelley sorted things out. \n\nThe cops didn't have the same interest in him that I had. Hence, I needed to act fast. I hauled him into a sitting position. He groaned in pain. I said grimly, \"If you think that hurt you ain't seen nothing yet.\"\n\nHe looked at me with hatred and said, \"I'll tell you nothing HERETIC!!\"\n\nI've been called a lot of things. But that was a new one. I said amused, \"And what makes me a heretic?\"\n\nHe spat at me and said in a voice dripping with fanatic loathing, \"The Apostles have taken back the sacred blood of our Lord and Savior Jesus Christ. You will never defile Him with your profane hands.\"\n\nThat was promising. I thought, \"The convenient part about the real nut-jobs is that you don't have to beat it out of them. They'll go out of their way to tell you everything. All you have to do is let them talk.\"\n\nI said sneering, \"Oh yeah? and who are these Apostles, a motorcycle gang? Did your old lady have to pull a train to get you in the club?\"\n\nHe got the beatific look that all good Christian martyrs get and said, \"We are the Holy Apostles. We do God's work, and He will protect us.\"\n\nAt that point, a loud voice said,\" Get down on the ground NOW! Put your hands over your head!! You are under arrest!!\"\n\n*****\n\nJohn was feeling ecstatic. He always felt that way after he had done God's work. He had cut the head off the blasphemous serpent and wrung the necks of the infidel unbelievers. He hadn't needed Timothy to do that. But the fool had insisted on accompanying him anyhow. \n\nNow, John realized that he'd committed a grave error. He had sacrificed Timothy to enable his getaway. But at the same time Timothy also knew too much. Hence, he had to be silenced before John could return to the Citadel with the precious prize. \n\nThe demon who had materialized in the clean room had been brutal and alarmingly capable. The red-headed she-devil had dealt him a punishing blow. He did not want to contend with those two again. Yet now, John had to follow the acolyte to the place where the authorities took him. That was his duty. \n\nJohn watched in the shadows as both men were led into the building. The authorities also brought the heathen beast with them. He knew that Timothy would ask for a lawyer. John would be there to give him one.\n\n*****\n\nI told the cops that the guy I was sitting on was the perpetrator. But of course, they didn't believe me. They put us in separate cars and hauled us both down to Cottage Grove. When we got there, they tossed us into adjoining holding cells. \n\nI had seen Isobel hurrying back toward the building. So, I expected to be released as soon as she and Kelly straightened things out with the cops. It was just a matter of waiting. \n\nFanatical and stupid are a bad combination. That is, if you want to keep secrets. Of course, the latter is probably a prerequisite for the former, but I digress.\n\nI could see the dumb shit slumped in the cell next to me. I thought I'd poke him some more, just to find out what he'd spill. I shouted across, \"Hey man, you're gonna do life in Joliet. Do you think Jesus is going to come down off his godforsaken mountaintop and save you?\n\nHe snarled back at me, \"Blasphemer!! Melago is God's home on earth.\" \n\nI thought to myself, \"This guy is too stupid to live.\"\n\nThen it dawned on me, \"And I'll bet somebody's on his way to do something about that.\"\n\nI said contemptuously, \"You're just a bunch of faggots living in a cave. Maybe I'll drop by someday and kick all of your asses.\"\n\nHe sneered, \"The Citadel is pure and protected by God. HE would never tolerate your profane presence.\"\n\nAt that point, a turnkey showed up to escort the dipshit up to an interview room. His lawyer must have arrived. I had everything I needed so I sat back on the cement ledge to wait. It had been informative.\n\nI was still cooling my heels when utter chaos broke out upstairs. There was a gunfire then one of Chicago's finest came rushing downstairs wild-eyed. He took a quick look at me and said into his shoulder mic, \"The other one's still here.\" Then he turned and bolted back upstairs. \n\nAnother half-hour passed and the same dude appeared again. This time he opened my door and simply said, \"You're free to go.\" He looked a little green.\n\nI could see why when I walked into the hall next to the squad room. The door to an interview room was wide open and the Coroner's people were just lifting the body of my former cellmate onto a gurney. \n\nHe had about an inch of something sticking out of its neck just below the jaw line. There was blood everywhere, painted up the walls and pooled all over the linoleum floor. \n\nTwo detectives were being looked at by the EMTs and a uniform was lying sprawled face down on the floor. His neck was sitting at the same odd angle as the two in the Genetics Lab. \n\nMy guess was that my angelic friend had paid them a visit. The cop noticed where I was looking and said, shaken, \"He said he was his lawyer.\"\n\nI said blandly, \"From what I can see he was his executioner.\" Then I spotted Kelley waiting for me out front. \n\nShe looked as sparklingly vigorous as ever. Kelley's gorgeous. But she is as tough as I am. I love the woman. It's as simple as that. She sauntered over to me, gave me a hug, and said in that low sexy voice of hers, \"We can't seem to stay out of trouble can we Babe?\"\n\n*****\n\nJohn was in an Uber going back to O'Hare. It had been a satisfying day. One of the advantages of his beauty was that people took him at face value. Meaning they never questioned his motives. \n\nThe policeman at the front desk had been astonished when John said he was an associate at Pritzker-Hageman. Apparently, one of the lowlifes in their holding cell had big-time connections. \n\nJohn was lounging relaxed in a chair when the detectives brought the Acolyte into the interview room. He handed P&H cards to each of them and said, \"I've been retained to represent this client.\" \n\nHe sat down next to the Acolyte holding a yellow legal pad and twiddling a common Bic pen. He was wearing a thousand-dollar suit. He looked like an important guy who'd been sent to bail some rich fucker's kid. \n\nThe fool had gotten a worshipful look on his face when they brought him into the interview room. He was about to say something indiscreet as the uniformed policeman seated him. It would no-doubt be unthinking and careless. So, John had to act quickly. \n\nThe branches of the external carotid artery lie just under the jawline. That is where blood under maximum pressure is distributed to the vital organs in the head and neck. It is perhaps the most vulnerable point in the human body. \n\nJohn struck violently and with utmost accuracy. The pen was blunt. But its tip was properly shaped to penetrate the skin of the neck and cut the carotid at the branch. The acolyte died instantly the detectives reacted with horror. \n\nWhile still sitting, John administered a lightning fast hand-sword to the throat of the detective in front of him. That blow always incapacitates. Then John spun 180-degrees out of his chair and around the table. That ended with a violent elbow to the temple of the other detective. \n\nOnly the uniform had an opportunity to react. He started to pull the Glock 19 out of its holster as John used the momentum of the spin to dance behind him. The policeman actually got off two random shots, one intentional and the other a reflex as his neck snapped. \n\nThat sudden violent burst of activity did not go unnoticed in the squad room. Startled cops were pushing back chairs and leaping to their feet as John whisked out the door, through the lobby and around the building. That was where he had stashed his next disguise.\n\nThe herd of police that disgorged from the building nearly knocked down the stooped and feeble old man wearing sunglasses and a World War Two veteran's hat. They charged past him, guns drawn and spread out down the street looking for the perpetrator of the horrific crime. \n\nMeanwhile the old man withdrew a cell phone and ordered-up an Uber. Old people need help getting around to places you know. \n\n*****\n\nKelley told me the rest of the story on the ride back to the U of C campus. She said that the University realized that the project would generate controversy. But Dr, Atkinson, Isobel's boss had been adamant about taking it on. He believed that it was the responsibility of a great research institution to root-out the truth. \n\nNobody could understand why he had killed himself at the precise moment his life's goal had been achieved. But the evidence all pointed to a conscious attempt. Why else would he steer into a concrete abutment at ninety miles an hour, with nobody else in the car?\n\nMaybe it was cop instinct. Maybe it was just the fact that the situation simply didn't add up. But suicide was off the table with me. \n\nAs we gave Isobel a lift back to her place, I interrogated her about her boss.\n\nI said, \"Did his accident make sense? Was he normally a reckless driver?\"\n\nIsobel was still shaken. Real life had intruded into what had been, up to that point, a sheltered and very civilized existence in academe. She said, \"He was such a little old lady that he drove me nuts.\" Then she realized that comment sounded a bit sexist, so she said, \"Oops.\" \n\nBeing a study in political incorrectness, it took me a second to understand why she'd said oops. I continued with, \"So what else would cause the collision. It was almost like the car wasn't under his control.\" \n\nMy genius wife said thoughtfully, \"Maybe it wasn't!!\" \n\nI stared at her questioningly. Kelly laughed at my puzzlement and said, \"Cars are so complex these days that somebody probably hacked him. There's a lot of research on it. The Jeep hack in 2015 is the one that made all the headlines.\"\n\nReally??!! I said totally confused, \"Wait a minute. Are you telling me that a stranger could use a computer to take control of your car? How is that possible?\"\n\nKelley said, \"Well, the easiest route would be via his cell phone. But the newest cars also have mobile LTE hotspots built into their on-board capabilities.\"\n\nI looked shocked. Kelley added, \"That would give somebody direct access to the under-dash unit that coordinates the electronic gizmos that really control your car, and babies can break mobile security.\"\n\nShe grinned lasciviously and said, \"Just ask the starlets whose sex tapes are all over the internet.\"\n\nI said, \"You mean to tell me that some passer-by could've taken control of Atkinson's car through his iPhone?\"\n\nKelley's gorgeous face morphed into a worldly look as she said, \"It's a little more involved than that. But it's easy-peasy if you know your stuff and you have the right cracking gear. Want me to show you?\" \n\nI said agitatedly, \"God no!!\" \n\nMy wife laughed fondly and said, \"You really belong in the last century my love.\" \n\nIsobel piped up from the back seat, \"How do we prove Ted didn't kill himself?\"\n\nKelley said, \"All cars record a small amount of event data, like an airplane black-box. If we could get access to Ted's car, we could probably tell if he'd been hacked. But I don't see what the point would be. You don't have to be Sherlock Holmes to figure out that the freak we ran into in the lab is the problem.\"\n\nIsobel looked even sadder as she said, \"Dr. Atkinson has a wife and kids, and the insurance people won't pay if he killed himself.\"\n\nKelley got a look of pure sympathy and said, \"It was murder plain and simple. Get the cops to pull the OBD-II data. That will get them the proof they need.\"\n\nI heard a tearful voice from the back seat say, \"Thanks Kelley.\"\n\n*****\n\nWe made love that night. Kelley is a strong-minded woman. But today was a reality check for her. Up until now, she had never been hurt during any of our exploits. So, having her bell rung was a new and somewhat sobering experience for her. \n\nShe said, wryly, \"That creep reminded me of my own mortality, which is something I'd rather not think about, thank you very much.\" She added dryly,\" We play for keeps don't we Baby?\" \n\nThen her mood shifted. I joke about Kelley's Hibernian origins, since she is the soul of the Irish people, passionate, complicated, and the best companion you could ever ask for. Still, the power of her feelings sometimes require her to blow off steam. Especially when a significant life event riles her up. \n\nI benefit from that since her outlet of choice is sex, which was a particularly true in today's case. She gave me a smoldering look, turned, and sauntered toward the bedroom. I thought perhaps I should send the creepy guy a thank-you note. \n\nIn the short thirty seconds it had taken me to get to the bedroom, my incredible wife had laid herself on the bed completely naked. Kelley is just spectacularly sexual, from the thick copper hair that frames her ideally proportioned face, through her big, full, world class tits, to the breadth of her hips and her well-muscled legs. But in the dim light of the room all I could marvel at was her skin. \n\nKelley's a redhead. So, her skin has a special satiny feel to it. But it isn't milky white like most Irish redheads. Kelley's people are Celts, not Gaels. They are the original inhabitants of the British Isles, darker and much more exotic looking than the strictly Irish Gaels. As a result, Kelly's skin is almost golden under low light. \n\nThe two of us are close in every way. But there are still moments when I get a breathtaking vista of my wife, and simply can't believe my good luck. This was one of those moments. The voice in my head just kept muttering over and over, \"So perfect!\"\n\nThe only question was where to start. Kelley is so luscious that it is hard to choose where to begin. She was lying on the bed eyeing me speculatively, like she was challenging me to do something extraordinary. \n\nThe little voice in my head chuckled and said, \"Really??!\", \"Seriously??!\" So, rather than just cut to the chase I decided to do a full reconnaissance of that superb body. \n\nI made a motion that I wanted her to turn on her stomach. She is not a big fan of doggy style, doesn't feel like it's satisfactorily intimate. I had much bigger plans than that, so I just made the same motion. \n\nShe looked disgusted but she turned on her stomach and elevated her hips for me to enter her. I pushed down on that magnificent butt, clearly sending the message that I wanted her lying flat. \n\nI got on my knees and positioned myself at her shoulders leaning over her. As I did that, I inhaled her scent, which is an uncanny combination of tangy, sweet, earthy, and scrubbed with a light bouquet of something flowery. \n\nI had noted that she smelled like summer when we first made love and I have never understood how somebody could convey robust good health, vitality, and bright sunshine by smell. But Kelley does that. My little voice was tying a napkin under its chin and beginning to drool.\n\nShe had her head turned toward me pillowed on her hand watching me intently. I pushed the dark copper hair that frames her face aside and blew lightly on her ear. The normal blush and forest of goose bumps appeared, and she let out a little moan. \n\nThen I kissed it and nibbled my way down the back of her neck to where her shoulders attach. She wriggled and let out another low moan. Still, she is so in control of her own body she didn't do the usual, \"You're tickling me,\" thing that most women do when you arouse them like that. ",
        "I kissed along her smooth shoulder toward her deltoid and arms. I could hear her start to breath loudly. I nibbled down her upper arm to where her elbow joins and kissed her with an open mouth and a nibble there. She squirmed and hissed like a cat. I continued down her lower arm and across her hand to her fingers which I nibbled on gently. Her hips were making humping motions on the bed and she was gasping rhythmically, like she couldn't catch her breath.\n\nI placed her hand back where I had found it next to her head and started to nibble and kiss down her shoulder blades and into the deep indentation of her back. Like most athletic women, Kelley's upper body looks slim and fragile in a sweater or blouse, if you ignore her giant tits of course. \n\nBut when you look at her with her clothes off her back carries as much muscle as her frame can efficiently hold. Hence, the length of her spine wasn't a knobby prominence. Instead it is in a depression between the smooth slabs of very feminine muscle. \n\nHer back muscles would be ripped like a mans if it weren't for the fact that Kelley has the thin layer of subcutaneous fat that all women have. So, instead of ridges, her back is a perfectly smooth rounded plain riven in the middle by a deep canyon. \n\nI placed my hand on her hips which were writhing as I kissed my way over to that canyon. I then worked my way slowly down her back moving back and forth from her spine to her ribs kissing and nibbling. I did this for several minutes until I made my way to the place where her hips and her back come together. \n\nKelley has the most wonderful apple shaped ass. The flexors and adductors that give her the deep hourglass shape are totally solid under their springy female skin and there are two deep dimples above her buns. But it is the buns themselves that are exceptional. \n\nWhen they are lying on their stomach, most people's butts are either flat or some variation of chubby. Kelley's butt is two huge solid mounds, perfectly round and heavily muscled, with a very distinct space between where they attach to her hip structure. \n\nHowever, even though her buns are huge they are also so perfectly developed that they do not extend her hips any wider than they would naturally be. They just jut there like two primal sources of power, located exactly where evolution says they should be. \n\nThe owner of those buns was using them to violently hump the bed at that point, meanwhile making loud \"Uh-Uh-Uh-Uh\" noises. \n\nI kissed across the flat adductors above her ass and actually stuck my tongue in one of her dimples and swirled it around. That produced a loud cry. I then moved down to her frantically churning hips and started nipping on her butt cheek. \n\nThat produced an even louder cry. She had not been talking up to that point. But she started to tell me in very forceful and colorful language to fuck her. I ignored her because I had a full banquet to savor and I had only finished the first course. \n\nI shifted on my knees so I could begin nipping and licking the backs of her thighs. The smell down there was overwhelming all of my senses with lust and I had an irresistible desire to mount her, but one should not get greedy in the middle of such a bountiful and delectable feast and so I continued my journey down those full and perfectly muscled thighs to the back of her knee. \n\nShe cried out loudly, arched herself into a bow with her butt high in the air and her knees and shoulders as the points of attachment to the bed while she shook in a wild orgasm. She also incidentally managed to kick me in the head with the back of her lower leg but that was not going to stop me. \n\nAs soon as she stopped arching her butt in the air and returned to just uncontrolled shaking, I moved on to her calf. Her calves make her legs so exceptional. They are highly developed muscles, almost like little cannon balls and they are responsible for her springy feline grace. \n\nI kissed and nibbled on one of them, making sure I was holding it down with my full weight because she had now included thrashing along with kicking in her repertoire. Her Achilles tendon gave me a little trouble because she kicked back like a mule as I passed over it. But I persevered nonetheless to the top of her foot. \n\nI bent her lower leg back against her thigh, which was something she was trying to do anyhow and kissed my way down the arch of her foot. She is an athletic woman, and that foot is not dainty. It is as muscular as the rest of her. \n\nAs I worked my way down her instep to her toe. She began telling me in no uncertain terms what a sadistic bastard I was. But she shut up the minute I sucked her toe and instead started off on the most violent orgasm I could remember. \n\nI steadied my wife on the bed while she thrashed and bucked and writhed and groaned. She started full body shaking as I rolled her over on her back. Her eyes were wide open and completely rolled into her head, but she was conscious. \n\nShe was feebly beating on my shoulder. I had a feeling that the beating would have been a lot more robust if she had not just come like she had. \n\nI started from her instep back up her leg, moving a little faster because I could tell Kelley was beginning to reach the end of her rope. I kissed up her shin and she began to come back to normal, her breasts heaving up and down like she had just run a three-minute mile. \n\nWhen I got to her upper thighs she went back to moaning loudly. Then I plunged my tongue into her white hot and dripping slit, and she spasmed into a vertical position at the fulcrum of her hips, looking like a diver doing the reverse of a jackknife dive. She held that pose for an outrageously long period, huge stresses playing across her stomach and rib cage. Then she fell back with a thud. \n\nShe had clearly reached the end of her rope because the only things moving on her now were her heaving tits. They were my final destination, desert so to speak. She was just lying there sucking in air like she couldn't get enough to sustain her. \n\nKelley seemed dead to the world; her eyes were closed and everything else was limp. But I wanted to sample those huge, firm mounds before I had my own satisfaction. So, I kissed my way up the amazing swell of her left breast, which was jiggling slightly in ripples from the motion and moved to her nipple. \n\nRather than sucking on it I ran my tongue around the aureole. She began to moan weakly and her nipple got bright red and began to extend to an outrageous length. I sucked on it and she came back to full consciousness. She looked really angry. She said fiercely, \"You had better fuck me now, or I'm filing the papers in the morning.\" \n\nI'd finished feasting on her body. So, it was time to satisfy my soul. I climbed clumsily on top of her. She desperately grabbed me and inserted me into her sopping wet and boiling hot pussy. Given the stimulation I had been giving myself by exploring that perfect body it was amazing that I didn't come on the spot. However, as I pushed up into her, SHE came. \n\nBy my reckoning she had already come spectacularly three distinct times and nearly passed out as a result. But those first three were mild tremors compared to what happened next. We were just starting the motion of love. Her legs were on the bed knees slightly bent outward and her tits were squashed on my chest. I was lying on her with my full weight - fortunately! \n\nShe began high frequency vibrations all over her body. The effect was like a powerful machine had just started up. You could almost hear her hum. She was making no noise whatsoever because her jaw was clamped tightly shut and her eyes were rolled up in her head so far that I could only see the whites. \n\nThen her arms, which were at her side and not restrained by me, began to flap without direction, powered by her violent shaking. She was striking me, the wall, anything within range of that aimless flailing. Then she began to writhe like a snake while making a continuous low throaty animal noise. It was profound sensation stripped of all emotion. \n\nHer breathing was frantic. I was getting really concerned about how out of control she was when her eyes popped open and she looked at me serenely, like some sort of goddess giving me a blessing and then all light faded from her eyes, and she went out like a light. From long experience I knew that she would sleep until morning. \n\nI could have finished. I was still inside her to the hilt and she was lightly contracting on me even though she was dead to the world for good. But I am not into necrophilia. So, I slowly withdrew down that still white-hot silky passage and popped out of her with a distinct sucking sound. \n\nKelley didn't move. She was in the middle of deep REM sleep. I closed her legs. I covered her and kissed her lightly in the lips. It was a kiss of true love. Before I fell asleep, I marveled at the woman who had consented to be my wife. \n\nFemales absolutely do not understand how men feel about highly sexual women, or they misinterpret it because of their own upbringing. \n\nHumans need to mate for the species to survive. A woman as fearless and powerfully passionate as Kelley is highly desirable for that mating because she gives a man great pleasure during sex. On the other hand, a woman who is inhibited by her fears, or who has a nature that is less ardent, gives less pleasure to their partner and is therefore less attractive to mate with. That is simple biological reasoning. \n\nNevertheless, various social forces have combined over time to turn that equation around and convince women that inhibition is attractive, a sign of morality. While the kind of all-out, no prisoners fucking that a woman like Kelley will give a man is wanton and should be discouraged. \n\nThat reversal of logic might even make sense if the woman was indulging her sexual appetites with many men. But a fiercely loyal wife, who expends maximum sexual energy pleasing her husband, while pleasing herself, is indeed the partner that every man wants. And that was what I had with my superb Kelley. \n\n*****\n\nThe next morning, we ate brunch at our bistro table on the little patio that looks out over the Lake. We can see as far south as Gary from the roof of our penthouse on the 42nd floor. We could afford that view because we made a lot of money in our last exploit.\n\nIt wasn't breakfast since we had lingered well into the morning. Kelley wanted to finish what we'd started the night before with a long slow session. She had the beginnings of a deep bruise around one of her gorgeous eyes. It looked like it was going to turn into a world-class shiner. Nobody had ever laid her out before and she was pissed. \n\nShe said, \"I underestimated that guy. He was quicker than I thought. It isn't going to happen again.\"\n\nI said, \"So we're going after him?\"\n\nShe gave me her predator stare and said, \"Absolutely!!\" \n\nI said, \"Let's look at what we know so far. First, this is some kind of spiritual motive.\"\n\nKelley nodded agreement. \n\nI said, \"I had an enlightening conversation with the dude the creepy guy killed. He said that they were part of some cult called the \"Apostles,\" who live in \"Melago.\" He said that's in the Alps. I also know that these guys are heavy-duty religious nuts.\" \n\nKelley said, \"What about Isobel's boss? Shouldn't we do something about that first?\"\n\nI said, \"Killing somebody with their own car is arcane stuff. Can you figure it out?\" \n\nKelly shook her head and said, \"I could probably do the analysis. But I don't have the equipment to gather the actual data.\" \n\nThe person who COULD do it popped in my head. I said, \"How about Chelsea?\" \n\nThe Guy Fawkes mask that Anonymous uses is the image that comes to mind when you think \"hacker,\" not an exquisite little patrician beauty like Chelsea Hughes-Meissner. Nevertheless, Chelsea is one of the most dangerous creatures on this planet.\n\nShe is at the top of a select breed of super-hackers. She is also arguably one of the most beautiful women I've ever met. Of course, my Kelley is at the top of that list; an unmatched package of physical ability, beauty, and brains. Yet, Chelsea has her own exceptional qualities. \n\nShe's a gorgeous little china doll who lives on a nice un-extraditable island in the Windwards where she is wife to a guy who reminds me a lot of myself, because he's a solid sort of fellow and there's a lot of animal cunning in both of our souls. Chelsea is also mother to her own clone named Brooklyn. \n\nChelsea's scary because she is an apex predator in cyberspace. She owns the second largest botnet in the world, so she can crack anybody and do anything to them digitally. That makes her an ultimate power player in modern society. \n\nKelley and I had helped her older brother out of a tight spot eight years ago. And ever since then, she has treated us like a member of her own exceptional family. \n\nChelsea grew up being that family's society crown jewel. But a woman with her incredible, almost otherworldly, intelligence wasn't destined for a life involving white gloves and picket fences. So, she was the Red Dragon Revolution by night, the most feared hacker group in China. At least that's where everybody thought it was located. \n\nThen, Tommy Meissner came along, and she fell in love. The details of that romance are another story. But needless to say, both live happily ever after on St Lucia and Chelsea only occasionally rolls out the Red Dragon. \n\nThe last time that happened an entire terror cell disappeared in a blast of hellfire. It was at our behest. So, it's hard to say who's in debt to whom in our little relationship. But Chelsea is always happy to help. And the neat part about it is that she never has to leave the confines of her palatial estate on St. Lucia. \n\nKelley placed the call. She's Irish. They're a fiery lot and she claims that she doesn't want her man talking to a woman as beautiful as Chelsea Hughes-Meissner. Plus, she speaks Chelsea's language -- nerd! \n\nSt. Lucia is two hours ahead of Chicago and it was the middle of a sunny afternoon there. Kelly got down to business after the usual polite chit-chat. She explained the situation and why we needed help. \n\nChelsea said, \"The CAN bus logs a lot of ECU event data. You should be able to tell what happened from that. You access it through the same ports that mechanics use to diagnose your car.\"\n\nShe paused and said, \"But I'd have to have physical access to that particular car to do the forensic analysis and regrettably I have to stay here in St Lucia until the hue and cry about the Target breach dies down.\" She sighed and added matter of fact, \"They should have just given me the refund.\" Chilling... \n\nThen she hesitated and said, \"Of course Brooklyn is going to start at Cal Tech next fall. She's got the best kung-foo of any super-hacker under the age of twenty. Maybe she'd like to get real-world experience. I'll ask her.\" \n\nThat was the reason why Kelly and I were standing in the arrival area of terminal five at O'Hare. The person who walked out of customs wasn't the little girl I remembered. I hadn't seen Brookie since she was ten. She had morphed into a stunning woman.\n\nBrooke, as she preferred to be called, was eighteen now. She had her mother's beautiful, elfin, features, with huge jade green eyes, like a cat's. They were a startling contrast to her alabaster skin and her black hair, which she wore in a no-nonsense bob. \n\nIt was also obvious that she had her mother's exquisite figure, on a pair of exceptionally long teenage legs. Those legs made her closer to five-five than her mother's five-two.\n\nBrooke was a great beauty, much like her mother had been at that age. But Chelsea had raised Brooke differently. Brooke was making no attempt to disguise her wicked smart, streetwise attitude under the veneer of a proper young lady. In most teenagers that would come across as punk. With Brooke, it was an aura of mature wisdom, and extreme competence.\n\nShe smiled delightedly as she came through the exit door. Walked coolly over to us, extended her hand to me, and said graciously, \"Uncle Joey, Aunt Kelley, I'm pleased to see you.\" Anybody who knows an eighteen-year-old girl would find that approach strange. \n\nShe added, \"I'm here to help in any way I can. Mother told me that you needed to do a simple forensic analysis on a vehicle memory dump. I brought the technology.\" \n\nI only understood half of what she'd just said. But it was clear that Brooke Hughes-Meissner was not your typical teen girl. \n\nKelley, who had spent her life being both gorgeous and smarter than everyone else in the room said kindly, \"This is just the first of many times your special abilities will make a difference in people's lives. We need to find out what happened in the last moments of a crash that killed somebody.\"\n\nBrooke looked down at her roller bag and added happily, \"I love digital forensics.\" If she'd been homely with glasses and a pigtail that would have been a perfectly appropriate thing to say. Since she was perhaps the hottest looking teenage girl in the entire concourse it was one more proof that you can't tell a book by its cover.\n\n*****\n\nOur main obstacle was the Chicago cops. They'd decided on a cause of death and it would be a lot of hassle if it turned out to be anything but suicide. So, they'd dragged their feet until the family demanded a forensic examination of the vehicle's on-board data. \n\nIt took a court order to get it and that required a little time. In the meantime, Brooke settled into our spare bedroom. She was a very odd kid. I'm an old Army cop and a major league ass-kicker. I barely understand women, let alone teenage girls. In fact, I wouldn't understand anything if it weren't for Kelley. \n\nMy wife is the smart one. At least I have enough brains to recognize that. So, I let her manage our gorgeous little genius. Brooke would spend 24/7 on the internet if she had her way. Since, virtual reality is to her what REAL reality is to me. Kelley, who bridged the generation gap between me and our young guest, understood the dynamic. \n\nBrooke's mother is perhaps the smartest person I've ever known. So, her daughter naturally gravitates to nerd things. Those things are not in the wheelhouse of Joe and Jane average. \n\nEven more insulating, for Brooke, she had spent her entire life being homeschooled by tutors on St. Lucia, which might be as far from the cultural experience of the Windy City as her mom Chelsea was from the average housewife. \n\nConsequently, Brooke had a very skewed understanding of what life in the real world was like. That would not be a problem if she weren't stunningly gorgeous. \n\nFortunately, her Aunt Kelley was equally beautiful, and Kelley had been fighting off male attention since she grew those big, magnificent tits. Kelley was also the toughest and most capable mentor a girl could ever ask for. \n\nShe knew what motivated girls her age. So, she spent a lot of time on the Miracle Mile and on Navy pier shopping with Brooke. My presence was not required or requested. \n\nStill, although Brooke was a unique predator in cyberspace, she was fresh meat strolling the concourse at Navy Pier. Hence, she got a crash course in the perils of being a remarkable teenage girl in a tough city, all without having to endure the unfortunate advances, or fondling. \n\nThat was because Kelley had established a \"hands-off\" policy. Of course, Kelley had to threaten to break a few inquisitive fingers in order to enforce it. But you know the old saw about how omelets are made.\n\nThe court order for the CAN-bus data dump came through the following week. Kelley and I showed up at the Central Auto Pound on Wacker with Brooke in tow. \n\nWe were met by a couple of surly Chicago detectives and their own evidence tech. They were not happy about being there. But chain of custody had to be rock solid.",
        "They were even less amused when they discovered that our digital forensics \"expert\" was the hottest teenage girl that their corroded old souls had ever laid eyes on. The guy with the food stains on his tie said, \"Who's the chickee-poo Wakender?\" \n\nThat pissed off my wife. She said with menace in her voice, \"She's a Certified Digital Forensic Examiner unlike you Maloney, who never finished high school.\" \n\nBrooke was bent over the wreck hooking her gear to the OBD Port. Her perfect round buns were highlighted in the Dupont Tychem 2000 protective coveralls that she was wearing to ensure against cross contamination. \n\nShe didn't need to wear a suit because the evidence was all digital. But Miss Brooklyn did everything by the book. That was why she was so hellishly effective.\n\nMaloney did an appreciative gander at Brooke's apple shaped butt and whistled. \n\nKelley muttered under her breath, \"Pig!!\" \n\nMaloney said angrily, \"What did you just say??!!\"\n\nKelley gave him a sweet smile and said, \"I was just remarking how 'BIG' Brooke's gotten.\" Then she added sweetly, \" I hope you didn't think I was calling you a PIG, Maloney?\" He got a bewildered look.\n\nIt just took a minute to download the event data from the ECUs. Then Brooke stood up and handed a thumb drive to the evidence tech and took one for herself. \n\nShe said, \"I'll do the analysis and then I will tell you what I did. You need to duplicate my findings on your sample using the same method. We both agree that the data is pure and untampered with at this point -- correct?\" \n\nThe thirty-year-old evidence tech, who seemed mesmerized by Brooke's beautiful face, just gulped and nodded. Brooke said, \"I will get with you when I have a complete report ready and walk you through the analysis so that you can attest beyond a shadow of a doubt that the findings in my report are correct. That should just take a couple of days.\"\n\nNow, all three of the cops were looking at Brooke like she had just arrived from another planet. They were not used to nubile teenage beauties who talked to them like the high dollar consultants that the police department brought in for technical issues. But of course, Brooke was a lot smarter and more capable than any consultant. \n\nBrooke and Kelley ran the analysis that day. I was sitting in the sun on our penthouse deck, drinking an Old-Style and listening to the reassuring sounds of the gritty City that I'd grown up in. \n\nThe two of them came out and sat beside me. Kelley did the talking. She said, \"The good news is that it was murder, not suicide.\" I perked up my ears. That was interesting. \n\nI said, \"You mean it wasn't a malfunction in the car's brakes, or whatever?\"\n\nKelley said grimly, \"No, Atkinson was definitely killed by his own car.\" I was dumbfounded.\n\nI said, \"How in the f... I mean... world could his car kill him.\"\n\nBrooke said eagerly, \"Look here at this packet trace.\" I looked at her sternly and said, \"Really??!!\"\n\nKelley interrupted. She said kindly, \"Uncle Joey is still living in the Twentieth Century my dear. So, you have to be gentle.\" Then she turned to me. The loving smile took the sting out of it.\n\nKelley said, \"His vehicle's electronic control system was hijacked by a rogue signal that captured his cell phone, which was linked to the vehicle's hands-free system at the time.\" \n\nBrooke took out a graph, laid it on the table and said, \"You can see here where the normal -80 decibel milliwatts signal was overpowered by something local. It looks like about -50 dBm. They must have used a handheld. directional antenna to defeat the cell tower.\"\n\nBrooke might as well have just said that in Mandarin. I said, \"So where's the murder come in.\" \n\nKelley gave me a fond smile, turned to Brooke and said, \"You see dear. You just have to love him.\"\n\nMiss Smarty Pants said, \"The cell phone feature is enabled by the car's OBD-II port, which in turn is hooked to its controller-area-network bus. We call it a CAN bus. The CAN regulates all the electronic control features, we call them ECUs, those are the actual things that drive the car.\"\n\nShe paused and added direly, \"Once the intruder had access to the ECUs, he could make the car do anything he wanted it to do. In this case kill the occupant.\"\n\nI said \"WOW,\" but I was actually thinking, \"I AM a dinosaur. Maybe I should buy that '57 Chevy that I've had my eye on. At least it isn't a hypothetical instrument of my demise.\" \n\nKelley and Brooke were looking at me like they could see the wheels turning in my head. I said, \"So, if it isn't suicide then that's good news for Atkinson's wife and kids. But the police are going to hate it. How in the world can they investigate a murder if it was done by remote control? They won't touch it.\"\n\nKelley said forcefully, \"That's something that you and I are going to have to do my love.\"\n\n*****\n\nWe were helped along in that regard by the University of Chicago. Isobel called Kelly bright and early the next morning. All I heard on my end was the usual, \"Uh-huhs\" then Kelly said, \"We'll be there,\" and hung up. \n\nShe turned to me with Irish humor dancing at the back of her gorgeous emerald eyes, and said, \"We have a lunch date. So, put on your only tie because it's formal.\" \n\nThe Quadrangle Club was like my worst nightmare. It was old world academia with the carved wood paneling, the stone fireplace, and the lofty ceilings. I fit in there like a rhino at a garden party. My chief concern was the size of the table and the spindly legs on the chairs. With people like me, accidents have been known to happen. \n\nThe other two occupants of the table were looking at us expectantly. One of them was Isobel. The other was an older, very distinguished looking chap. Kelly muttered under her breath, \"Oh crap!! It's the Chancellor.\" \n\nAwkward would be an understatement as we got settled in our chairs. The whole room was staring at us, Kelly because you don't see women as spectacular as her in a faculty club, and me because they probably thought I was there to rob the place. \n\nKelly was in a very professional and demure black dress. But you couldn't hide what was underneath under a full burka. Moi? I was squeezed into my only sport coat and Oxford button down shirt, with a ratty knit tie knotted around my 22-inch neck. \n\nI gingerly tested the chair before I put my full weight on it. Isobel was looking at me with horror. She realized why I was doing it and didn't want to be embarrassed if it collapsed. After all, her boss the Chancellor was sitting across from me. \n\nThe legs quivered and held and. Both Kelley and Isobel breathed a silent sigh of relief. Isobel turned to the Chancellor and said, \"These are the two I was telling you about. They are the ones who proved Dr. Atkinson's death was murder. Kelley is also a colleague and a PhD graduate of the University. Her husband has a long history in law enforcement. They are the ones who can get the sample back for us.\"\n\nI gave the Chancellor my best forthright military cop look and said, \"Joey Wakender at your service sir. What can we do for you?\"\n\nThe Chancellor looked like the folks in central casting had sent the very model of a modern academic leader, patrician face, white hair, penetrating blue eyes, and all. \n\nThe gist of the matter was that the University was both out of pocket for the cost and humiliated at losing the sample. So, they wanted it back at all costs. The Chancellor said, \"That sample is priceless if it is authentic. Hence, it isn't a simple matter of getting our research program back on track. We owe it to posterity.\" \n\nI asked the obvious question, \"Why don't you just turn this over to law enforcement.\" \n\nHe gave me a \"Seriously!!??\" look and said, \"Just who do you suggest we hand it to? The Chicago Police? They seem to care less, and they have no jurisdiction if the sample has been taken to Italy. Interpol is not going to bother with something that hasn't been vetted for authenticity, even if they could mount a concerted effort, which they can't.\"\n\nI said, \"A project like this will cost a lot of money. So, it isn't something we can undertake lightly. \"\n\nThe Chancellor got the look that all good academic leaders get when they are talking about their favorite topic and said, \"That's what they make donors for, Joey.\"\n\n***** \n\nThus, we were committed to deliver one blood sample of potential historic significance back to its original owners. If somebody's ass got kicked in the performance of that contract -- well, that would just be a bonus. \n\nThere were clear religious overtones and God knows how many other possible complications. Not the least of which was the fact that the murderer was back at the \"Citadel,\" which was in some Alpine shithole called Melago. \n\nThere wasn't any sane justification for us spending money and time to chase a creepy religious nut through the Italian Alps. But of course, there was this subliminal sense of unfinished business that neither of us have ever been capable of ignoring. \n\nSettling up the account with the creepy guy became my obsession the minute he had laid Kelley out. She had a score to settle with him too. It's an Irish thing. Brooke was just overjoyed at the idea of real adventure. As illogical as it may seem, living a privileged life in paradise gets pretty wearing on an eighteen-year-old's sensibilities.\n\nFinally, my ever-practical wife said it out loud, \" Things have been normal around here for far too long. Now we have a chance for some action.\" Then she added more meaningfully, \"And I can get something back from the guy who knocked me out.\" That's my girl!!\n\nKelley's a soul mate. I understand that term is absolutely the sappiest clich\u00e9 in the entire romantic toolbox. But really, some guys are lucky enough to find a woman who is their exact peer and finding Kelley was perhaps the greatest blessing I've ever had. \n\nI might look like a silver-back gorilla and Kelley is a stunning example of all-American beauty. But we're the same person underneath, smart, tough, cynical, and afraid of nothing. Plus, both of us need to have action, or we get antsy. So, there was no way we were going to pass up the chance to go creep hunting in the Italian Tyrol.\n\nIt didn't take a genius to connect the dots. Obviously, the creepy guy did it. Atkinson's death could have just been simple payback for undertaking the project in the first place. But more likely it was a head-fake, designed to gain access to the blood sample from the shroud.\n\nThe Chicago police had moved the determination on Atkinson's death from \"suicide\" to \"murder by persons unknown\" and then promptly filed it as cold. That was understandable. Being an old Army cop, I was aware of the fact that there were more people in greater Chicago dying from conventional gunshots and stabbings. Murder by wireless hijacking was a bit out of the average cop's area of expertise. \n\nThe good news was that the company settled Atkinson's insurance claim. So, his family got paid and Brooke's presence was no longer required. But Brooke had gotten a glimpse of what life was like in the real world and she wanted to see more of it. \n\nHer mother didn't mind. Chelsea had lived in the wild for a long time before she met her man. So, we now had a teenage genius as a partner in crime.\n\nKelly told me that Brooke was an anomaly. Kelley said that at age eighteen the only thing she could think about was her peer group, dancing, and sex, not necessarily in that order. But Brooke had been caught up in her mother's black arts very early in life and she viewed the world in an oddly uninvolved way. \n\nI hesitate to use the word loner. It was more like Brooke operated on another plane of existence. One that none of her peers shared. I suppose that was partly a consequence of being educated by private tutors on a lush, tropical island. But more relevantly, Brooke was a prisoner of her own exceptional intelligence. Dealing with her was like talking to somebody who was born at age forty. \n\nThings that interested children never caught Brooke's fancy and her mother had carried her into the realm of the Red Dragon at an age where her daughter probably never remembered a time when she wasn't the princess of cyberspace. \n\nYou can judge the Hughes-Meissner's parenting style as you like. But the upshot was that Brooklyn was much more aware of the threats and the opportunities in the virtual environment than most adults.\n\nSo, we held a council of war. The first highly reasonable question was, how do we approach something like this? Did we seriously think we are going to knock on the door of a remote mountain citadel and politely ask the creepy guy to give us back our blood sample? \n\nObviously, the answer to that was, \" NOT!!\" So, the next question was how should we approach it? \n\nThat took a bit of consideration on our part. \n\nThe first question was, where and what is this Citadel place? Brooklyn, who had been watching our interchange said, \"That's easy.\" Well -- it would be easy if you were an eighteen-year-old genius with access to the planet's second largest botnet.\n\nBrooke's laptop ran an anonymizing proxy. That was a good thing, because we didn't want the residents of 42 Shchepkina Street to trace back to Chicago and the phantom who had danced around their firewalls and laughed at their encryption. That ghost was one very smart eighteen-year-old and it goes to show how the era of the dinosaurs has come to an end thanks to cyberspace. \n\nSo, while Brooke, Kelley and I were sitting at the bistro table on the roof of our Chicago penthouse, our young genius was virtually in Moscow accessing the 8193 MHz band that is used to maintain the Electro-L N5 imaging satellite, floating 22,000 miles above earth. \n\nThe first inkling that the folks at the Russian Federal Space Agency, had that their satellite had been hijacked was when it moved off station to a position over the border between Austria and Italy. It orbited geostationary for an hour, while all hell broke loose among the Roscosmos controllers. Then it fired its thrusters and headed blithely off toward the Asteroid belt. \n\nWe reviewed the high-res graphic images that the satellite had sent us. I was thinking to myself we could have probably gotten the same information via the internet. But it would have been nowhere near as much fun. \n\nBrooke had walked the radius in from ten miles to five miles and then to the GPS coordinates that were given for Melago, South Tyrol. The resolution was so precise that you could tell the time of day from the shadows cast by the rocks, and even the hair color of the individuals in the parking lot below. You don't get THAT on Google Maps. \n\nThe thing that wasn't on any commercial map program was the prominent structure located about a quarter of a mile northeast of a group of hotels identified by the coordinates as Melago. The building was shoved back into a narrow, high sided canyon in a mountain called \"Nockspitze\" and it had all the earmarks of a \"citadel.\" THAT had to be the place.\n\nThe structure had the appearance of an early Romanesque fortress, high stone slabbed walls and narrow windows. It was roughly the size and shape of the White Tower, which is the big central keep that sticks up from the Tower of London complex. But unlike the White Tower, it clearly had Dark Ages overtones, with rows of slit-like windows. \n\nAll-in-all it was a forbidding place, even in high summer. I was curious. So, I called up Google Maps and there was no sign of a building there. I said to Brooke, \"You're sure you the satellite picture is accurate? There's nothing on any of the commercial sites.\" \n\nBoth Brooke and Kelly laughed. Kelley said, \"Take a look at Area 51.\" I did and there was just a huge hole in the middle of the desert, like a giant amoeba was eating something down there. \n\nI said puzzled, \"There's nothing in the picture.\" \n\nBrooke said, \"That's because it's been redacted. Do you think that the military and any other interested party wants the details of its secret sites on social media? It's why I used the satellite.\" I asked myself how many eighteen-year-old girls would be that worldly wise -- or cynical?\n\nI looked at the images. There was a long forbidding mountain valley leading east, away from the Lago di Resia, or Reschensee as the Swiss call it. That lake is the main terrain feature in the Otzal Alps. The valley was like a natural passageway through the mountains. It ended abruptly at Melago, in what amounted to a box-canyon. \n\nThere was no going past that point unless you were a mountain goat. I could see why the mysterious Apostles had chosen it to hole up. The location would limit the number of tourists to just those people interested in stark mountain landscapes, or avalanches. \n\nThe nearest large airport on that side of the Alps was two-hundred miles away in Bologna, which was the closest city with a reasonable flight-time. You could drive to Melago from that city in about four hours on the Autostrada west and then the A-22 north. \n\nIt was still anybody's guess as to what we were going to do when we got there. Our original idea was to find the creepy guy, beat him to a pulp and take the blood sample back to Chicago. That would be doable in theory if he weren't living in an actual fortress. Since he was -- we needed to rethink. \n\nI said to Brooke, \"This little gambit is going to be a lot harder than I thought. Do you want to opt-out now?\"\n\nBrooke snickered and Kelley gave me a look like I'd lost my mind. She said, \"What's the matter old man. Losing your sense of adventure?\" Kelley is eleven years younger than I am and she likes to kid me about the difference. But the love in her voice was unmistakable.\n\nI said smiling, \"I'm as up for it as I ever was, even if I have to use my walker to get there. But this is going to be dangerous work. I just wanted to make sure Brooke was still on board before I went off to play Don Quixote.\" \n\nKelley's smile is like the sun rising over the hills of Connemara. It's a burst of light on one of the loveliest vistas on earth - her beautiful face. She purred, \"It's always been you and me Babe. Where you go, I go. Now we have one additional smart person to come with us.\" \n\nAnybody who doesn't understand why that simple declaration was touching doesn't have a soul.\n\n*****\n\nThe Delta flight from Chicago, by way of Amsterdam, touched down in Bologna just after seven PM on a beautiful northern Italian day. We were all suffering from the jetlag caused by leaving Chicago at noon and arriving in Bologna thirteen hours later at sunset of the following day. \n\nSince a mysterious \"donor\" was paying for it, I'd booked us into the Grand Hotel Majestic gia' Baglioni, just to get our feet under us. The Baglioni is actually in an old Renaissance palace. Needless to say, it was luxurious. I try to take advantage of spending somebody else's dime whenever I can. \n\nI'd also rented a Mercedes G-Class from the airport Sixt. I wanted to hire a vehicle with Kelley's sophisticated elegance and my muscle because I knew we were headed for the ass-end of nowhere. Okay, it cost an arm and a leg, but I repeat - donors... \n\nOur suite was a two-bedroom layout with a common area in the middle. Brooke was on one side of the suite and we were on the other. Without getting into too many details, Kelley had told me that although Brooke was a genius, she was totally inexperienced when it came to sex. So, we needed to be careful if we planned to make up for any of the time we would be missing once we got to Melago. \n\nBrooke was in her bedroom across the common area playing games on the internet, or maybe bringing some predatory corporation to its knees. It was frightening to think about what our precocious little friend might be up to. \n\nKelley was wearing her usual traveling gear, a light cashmere blend turtleneck over a skintight pair of designer jeans. She looked delectable and I was hungry. The moment she closed the door to our bedroom I grabbed her by the arm and walked her over to the luxurious king bed. ",
        "She was looking expectantly at me, like she was hoping I was thinking what she was thinking. I sat on the bed threw my arms around her waist and hugged her as she stood there. That wasn't what she was thinking.\n\nSo, she threw one of her gorgeous legs over mine and pressed every inch of her body against me. For such an athletic woman I am amazed at Kelly's ability to be \"boneless\" in situations like that. I know women are a lot more flexible than men. But Kelley's ability to mold herself to me reaches some new height of sensuality. \n\nWe kissed. Kelley also kisses like no other female. When she kisses you, she conveys that she is completely there, totally involved, and in the moment with you. It is an opening and a giving of herself that could pass for actual intercourse with some women. \n\nI pulled her closer to me, squashing those big, beautiful tits to my chest. She gave a slight moan, and her breathing became much more noticeable. We kissed that way as she humped and rubbed her mound back and forth on the top of my leg making soft cries. I thought, \"She's as hungry as you are\". \n\nWhile we were kissing, I put one hand on her left breast and began to manipulate it. She increased her humping and added low moans. The elastic feel of that huge perfectly shaped orb under my hand was giving me a hard-on that I thought was going to rip the zipper off my pants. \n\nKelley gets aggressive when she reaches a certain state of arousal. I knew she had reached that stage because she broke the kiss, jumped to her feet, frantically peeled off her pants, undid my belt and grabbed me by the feet tipping me backward. \n\nShe whipped my pants off, underwear and all, like a matador doing a pass with his cape. I was now naked from the waist down sporting a woody that I wanted to take a picture of for future reminiscence. That whole pas-de-deux had taken approximately ten seconds. \n\nShe then straddled me as I sat on the edge of the bed. All I could feel was extreme heat and wetness. She made a slight gasp and pushed me as far into herself as she could get. I had my arms around her tiny waist, locked behind her back, just above the flair of her muscular ass. \n\nShe was leaning back, counting on me not to drop her. I was leaning in the other direction with my hands above the jut of her buns. I was buried in her right to the top. \n\nThen she began to move. I looked at her beautiful face which was a mask of passion. Her lips were curled into a snarl and she was driving herself into me with all of the strength in her powerful body. \n\nShe wasn't making her usual loud moans, only a series of uh-uh-uh-uh-uh-uhs!!! That in some ways was even sexier because it conveyed the maximum effort that she was putting into the sex. \n\nHer insides were spasming. But she hadn't come yet. The heat and smell was beyond exciting. It blasted me into some new realm of sexual stimulation and pleasure. \n\nThen she started to fervently whisper, \"Ahhhh Yesss!! You're so deep inside me!!! I'm so wet for you!! Fuck me, Fuck me!! Come inside me!!!\" \n\nI didn't need any encouragement to do that. I was so caught up in the passion of the moment that I came like Old Faithful. I thought it was never going to stop. It was beyond mind blowing. \n\nThe moment she felt me spurt Kelley went off on a gyrating, bucking orgasm where she lost total control over her upper body. She was flinging her head from side-to-side and her bounty of copper colored hair kept whipping back and forth over her gorgeous passion filled face. I had to strain to hold on to her.\n\nShe gave three final bucks and slumped in my arms, like she frequently does. I sat there holding her to my chest with both of is breathing off the scale. I was thinking to myself, \"This woman is not human. She is a goddess. And you are the lucky mortal she has chosen. You need to work hard to be worthy of her.\"\n\n*****\n\nThe following day we were on the A22 headed north into an impressive array of mountains. This was the first time either of us had been into that part of Europe and the mountain vistas looked a lot like the front range of the Rockies. You almost expected to see Hannibal tramping past with his elephants. \n\nIt was summer. So, the temperature was warm and pleasant. That would NOT be the case in the winter. We planned to set up base at Reschensee, which was the last real civilized point before you got into the tight mountain valley that ended at Melago. \n\nReschensee had an actual four-star hotel called the Traube Post which had spectacular views across Lake Reschen. It was expensive but need I remind you -- \"donors.\" \n\nIt was a six mile hike up a lovely rural road to the complex at the foot of the Nockspitze and the Citadel just beyond. There were some decent hotels there too. Depending on the situation we might move the rest of the way up to those. \n\nHowever, I thought we should build a little cushion between our base of operation and the target, at least at first. We would have to proceed with caution if those guys were as dangerous as they seemed.\n\nThe next morning was sunny but chilly. We set off looking like Alpine mountain hikers, which is one of the primary tourist activities in the area. We planned to walk up the shoulder of the mountain that enclosed the Citadel and circle around to the top of the sheer canyon that encircled it. \n\nThe girls were in L.L. Bean explorer mountaineering shorts that showed off their fabulous legs and layers on top for the changing weather on the mountain. I was sporting Lederhosen, long thick hiking socks, a checked shirt, and a classic Alpine hat. That was just me practicing a bit of tradecraft. I'd discovered a long time ago that the best protective coloration was \"cluelessness.\" \n\nThe girls were carrying 18L Mammut Alpinrucksacks. I was carrying a Mammut Trion Spine 75L mountaineering backpack. Theirs had lunch, eating utensils, a ground cover, along with a good bottle of red. Mine had the contents of a crate that had arrived courtesy of a mysterious benefactor on the island of St. Lucia. \n\nBrooke needed its contents to do the electronic reconnaissance that was the first step in our getting to know what we were up against. It took us three hours to get to the little collection of hotels and guest houses at the base of the mountain. There, we stopped for lunch. \n\nI'd assumed that a neighborhood where a bunch of religious nuts were holed up would be a wasteland. This wasn't close to the reality. Looking around, I could smell the money. There is no accounting for Teutonic tastes. \n\nIt was obvious that we weren't likely to bump into any of the Citadel's recluses at a four-star spa. So, I made a reservation to continue our stay at the hotel that we were eating at.\n\nIt was called the Gletscherblick. It means glacier view, which gives you some idea of the terrain. It also saved me carrying almost a hundred pounds of gear six miles at a brisk walk, just to get up to the starting point of our venture. We could move to our new place as soon as we finished with today's business.\n\nWe hiked up the mountain from the hotel area. The walk was grueling. But it had to be done since we needed to do a detailed survey of the place before we burglarized it and since it was sitting in a narrow mountain defile there was no way we could just walk around the building and take pictures.\n\nThis was only a scouting expedition. We just wanted to get the general layout, doors, windows, and any other access point. Fortunately, the very thing that made the Citadel hard to approach made it easy to investigate. We set up shop on the western edge of the surrounding cliffs, which put us less than fifty yards from the walls and sixty feet above the roof. \n\nThe first thing we noticed was that the roof was flat. There were ornamental merlons on the battlement that surrounded it and a lead roof. There was also a trap door. That would no-doubt lead to a set of circular stairs, assuming that the fortress was laid out like a Medieval keep. We could use that.\n\nBrooke set up the through-wall detector we had brought. The unit could map space and movement behind a stone wall for up to fifteen feet. The concept is basically the same as radar. It uses ultra-low power radio waves to scan a sector and paint a picture. \n\nBrooke's device was special. You normally have to hold wall penetrating radar against the wall itself. But Chelsea had added her own refinement in the form of a parabolic booster that focused the power of the radio waves, thus enhancing the range. It DID narrow the observation surface to about five feet at fifty yards. But it let us see into the interior of the building like we were shining a flashlight on it. \n\nThe tower was four stories tall and easily a hundred feet square and we could only map the space in the outer rooms. But that gave us a picture of the general layout and also a count of the occupants. The tower had surprisingly few rooms at the top. They were big and spacious. There was nobody in any of those rooms. Hence, they were probably living quarters for the creepy guy and his friends. \n\nWith a little bit of luck, that might be where the blood sample was kept, assuming that one of those rooms belonged to our target. If that was the case, then we might be able to get in and out without having to deal with the guards on the floor below.\n\nBrooke also scanned the building for network activity. It's a standard electronic discovery tactic and Brooke was a master. Of course, she had to crack the network's access control first. But her mother's Botnet melted the firewall like an ice cube in the Sahara. \n\nBrooke said flabbergasted, \"That's a pretty sophisticated operation. I thought they might have a server. But they're running a whole farm.\"\n\n*****\n\nThe Chapel of the Apostles dated to Theodoric's Ostrogothic invasion in the 490s. The remoteness of Melago protected the Christians from the barbarian hordes that were descending out of the Alpine passes. The original walled basilica was constructed out of humble Roman brick. \n\nThen things changed. Jerusalem fell to Islam in 636 AD and the Apostles needed a new place to live. They had heard about Melago and its splendid isolation. The Christian residents provided the slave labor, and an impressive keep was built. \n\nThe Citadel took sixty years to complete. But it would stand against an army. There were crenelated battlements, gatehouse barbicans and a guardroom. There were only twelve Apostles. But there were another hundred acolytes, devotees and servants living within the keep. \n\nThat group included everything from guards to scullery maids. The Apostles had separate quarters in the top floor. The acolytes and guards lived below them. The servants all slept on the ground floor. The second floor of the keep was an arcaded great hall and the ancient chapel, which was where John lay prostrated on the floor. \n\nHe was contemplating his accomplishments as he lay face down, arms outstretched just as Christ himself had lain on the cross. He had successfully recovered the Lord's precious blood. Now, this final act would be the consummation of his life. \n\nJohn longed for a time when there would be no material distractions from the world of the spirit. Physical possessions were the enemy of the soul. Jesus had said that. Hence, multinational corporations and the military industrial complex were the great Satan. John knew that those abominations had to be cleansed in order for the Second Coming to occur, just as the first John had said in Revelations. \n\nThe money to perform his godly task had been easy to come by. The Apostles merely took what they needed. If you objected, you died. The same with the scientific knowledge. By definition, every scientist was a heretic. So, it wasn't hard to justify the kidnappings and extortions required to obtain the means. \n\nSimply put, the Apostles planned to destroy the internet. The resulting chaos would return society to happier times, times when the church had prospered - the Middle Ages. Still, the Apostles were assassins by trade, not strategic masterminds. Consequently, another entity was needed to draw up the plan. Those were the Praefecti. \n\nThe Praefectii traced their origins back to Julian the Apostate. The Emperor Julian attempted to restore the old Roman gods thirty years after the Roman Empire had adopted Christianity. He might have succeeded too, if it weren't for a cabal of Roman elite, who arranged for his untimely demise. They called themselves the Praefecti. \n\nThe Praefecti were the \"overseers,\" hence the name. They were a group of highly placed Christian nobles from across the empire. Thanks to their position and wealth, they had their hands on the societal and economic controls of the western world and they were the hidden architects of late Roman society. \n\nThere were never more than thirty Praefecti, all of whom were among the richest and most powerful men of their age. That included such diverse characters as Justinian, Charlemagne, William the Conqueror, Richard the Lionheart, most of the Renaissance Popes, Richard the Third, the entire Tudor family, Louis XIV and Queen Victoria's Prince Albert. \n\nThe Praefecti were dedicated to the advancement of Christianity over every other religion and, of course, to their personal enrichment. The Praefecti had decided that the secular world, needed a good old-fashioned biblical purification, ala Sodom and Gomorrah. So, they gave the Apostles the task. \n\nJohn was by far the most tech savvy of the Apostles. He and his brother James, whose naked ambition was his defining trait, were the two disciples who were responsible for the project. This was a moment John had devoted his life to. \n\nThrough social engineering, bribery, hacking and simple intimidation the Apostles had managed to plant the necessary malware in all the right places. The crypt at the Citadel contained the powerful servers that would be the lash that John would employ to drive the money lenders from the temple, just as the Master had done. And a much more spiritual world would dawn in less than three days. \n\n*****\n\nI dropped Kelley and Brooke at our new digs. Then I walked the six miles back to our rooms in Reschensee, checked us out of there, packed the Mercedes and drove back to the base camp in Melago. \n\nBrooke had done the analysis while I was gone, and she had some eye-popping results. She said, \"I did a full network reconnaissance while we were up there. The pings gave me a detailed picture of the active hosts and IPs. But the results simply don't make sense.\" \n\nI got the same look that I always get when people talk nerdy to me. Kelley said kindly, \"Tell Joey what you discovered dear. But keep it simple. Just tell him what you think is going to happen.\" \n\nBrooke said, \"Sorry Uncle Joey. I was brought up with this stuff. I sometimes forget what it's like for people your age.\" I think that was an apology -- probably accurate. But OUCH! \n\nBrooke continued with, \"They have a substantial information warfare operation running in that building. It's designed to activate a specialized virus that's been embedded on the internet's root servers. I did a quick analysis of the code and pinged around to the target IP's and it looks like they are planning on a total extinction wipe of the DNS zone tables.\" \n\nShe stopped and looked expectantly at me. Since I hadn't understood a single word that she'd just said I made a circular motion with my hand and said, \"Annnnd??\" Both Kelley and Brooke burst out laughing. Kelley said gently and lovingly, \"They want to end life as we know it on this planet.\" \n\nNow it was my turn to laugh. I said, \"You're telling me that bunch of religious nuts, living in the ass-end of the world, think they can dinosaur us??!! That's the most ridiculous thing I ever heard!!\" Neither of them were laughing. \n\nI stopped and said wearily, \"Okay, explain the situation to this old Army cop. But do it in words he'll understand.\" \n\nKelley said, \"Everything from the way we do business to our entire physical infrastructure is enabled by electronic data communication. Without it, we would have no commerce, no essential functions like electricity, we wouldn't even have an operational military since all of its command systems are virtual.\"\n\nI just sat there flabbergasted. I said, \"How in the world could that BE??!!\" \n\nBrooke said, \"It just is. We've built our modern world on a virtual platform. It lets us do amazing things. But the price has been utter dependence on something that we barely understand, let alone control.\"\n\nI sat back and thought for a second. Then I said, \"Let me get this straight. These guys plan to destroy the internet and if they do, then everything that's technological will stop working?\"\n\nKelley said, \"Well - Not exactly, but everything from financial and governmental systems to the automated control functions that keep the lights on will stop talking to each other. It won't impact third world countries like the Sudan. But it will return all of Western society to the 18th Century.\"\n\nI sat there with my mouth hanging open. I said, \"WOW!!! We've set out to get the University's blood sample back. Now we're in the middle of a James Bond movie. We DO get ourselves into some interesting situations don't we\"\n\nKelly said grinning, \"That's about the size of it.\"\n\nI turned to Brooke and said meekly, \"You're the computer genius. What should we do?\"\n\nKelley answered instead, \"We've gotta destroy that installation and everything in it.\" Then she added ominously, \"And the sooner the better.\"\n\n*****\n\nThe prospective end of the world prompted a long and very heartfelt call to St. Lucia. I told Chelsea the situation, and I asked her if what they were planning was even possible? \n\nShe said, \"Of course it's possible. Internet protocols depend on addresses. That addressing is incredibly complex at the leafy end of the tree. But like all trees, it traces back to the roots. Destroy the roots and you destroy the tree.\"\n\nShe said, \"Wait one\" and there was clicking in the background for several minutes. \n\nWhen she came back on the line her voice was grave. She said, \"They are going to do a coordinated strike on every DNS root server. I can wipe the launch code. But they'll just reload it. Worse it will alert them to the fact they've been discovered. You're going to have to destroy the actual equipment and storage to make this go away permanently.\"\n\nI laughed sarcastically and said, \"And how am I supposed to do that. The place is full of armed hostiles and I left my automatic weapons and thermite grenades in my other pants.\"\n\nChelsea said casually, \"Leave that part to me. Just give me a shopping list and I'll have it delivered.\" \n\nIt was like she was telling me to order a couple of pizzas. I had no idea how she was going to find and reroute the necessary military grade hardware. But I was confident that Chelsea could do it if anybody could. She was the Red Dragon after all.\n\nThus, the following night, we found ourselves back on our perch overlooking the Citadel. We had taken delivery of a packing crate full of handy things earlier that afternoon. I had no idea whose army Chelsea had hacked to gather all the equipment. It looked German. But I didn't doubt my little friend's godlike powers. \n\nIt was two AM. All three of us were wearing black light-absorbent tac-suits and balaclavas. They made us more-or-less invisible in the dark. I was carrying a silenced CMMG Mark 3 CBR and a twenty-round clip of 7.62 NATO rounds. I had three more clips in a ballistic nylon bag dangling from my tac-harness. \n\nKelly was wearing her knives. Kelley's a ninja savant with a throwing knife. She practices constantly and she's so good that she can pin a postage stamp to a wall from twenty feet. She had six of those lethal little beauties in a bandolier across her delectable chest. They would be better than a gun in close quarters. ",
        "Brooke was staying on the cliff. We were about to stir the hornet's nest and I didn't want her anywhere near the inevitable consequence. Chelsea wouldn't appreciate us losing her daughter and it's never a good idea to make a mortal enemy out of a super-hacker. Of course, we'd probably be dead by then anyhow.\n\nBrooke's contribution would be to bring down the Citadel's internal security systems. I didn't miss the irony that we were going to prevent a cyberattack with a cyberattack. The important point was that we would launch ours first. \n\nKelley was standing next to me wearing a base-jumping suit over her tactical gear. It would let her fly from the cliff edge to the Citadel. The idea was for her to soar to the roof unspooling aircraft cable as she flew. Then, I would zipline along the cable once she'd fastened it to a battlement. \n\nKelly was the right person to do the base-jumping because she's the agile catlike one. The lift-to-weight ratio of a suit like that is minimal. So, I would have dropped like a stone. \n\nKelley stepped into thin air and glided gracefully down to the roof of the building. She had sixty feet of elevation and fifty yards of distance to cover and the updraft was substantial. Plus, it was dark on the roof. But my wife made it look effortless as she flared out of her drop and landed lightly. I swear she was a cat in a former life. Besides being nimble as one, she can see in the dark.\n\nI sensed the tension on the cable as she secured it to a stone battlement and then there were two blinks from the pinpoint light that she was carrying. I glanced at Brooke, who looked like an ancient dark goddess in her skintight tac suit. I nodded as I stepped into space. She gave me a jaunty grin and a thumbs up. She was definitely her mother's child, an apex predator in the making. \n\nThe wall of the Citadel came up abruptly. I applied the brake and was dangling seventy feet in the air next to the parapet. I reached over the lip and pulled myself through the gap in the crenellation. That wasn't as easy as it sounds since I was carrying all of our weapons and a hundred pounds of explosives. I may not be a cat but I'm an excellent pack animal.\n\nWe donned the head harnesses and pulled the Armasight Gen 3 Ghost night optic system down. It was like an otherworldly presence had turned on a light. I had used the old night vision goggles in the Army. They lit up everything in various shades of bright green and made it hard to judge distances. These new generation goggles were like watching black and white TV and it really increased your depth perception. \n\nI gave Brooke the two blinks that told her to shut down the Citadel's perimeter security. We tippy toed over to the stairwell hatch. Kelly was moving like a hunting cat. I did my best not to trip over anything. I gingerly raised the cover. There were no alarm bells and flashing lights. Brooke had taken care of their electronic security. Good girl!!\n\nA sturdy ladder led down to the stone floor of a small open area. The few candles guttering in holders in the wall provided some light. There were only twelve doors, three to each side. I guessed that those were the Apostle's rooms. We could have started by killing whoever was in them. But that wasn't our objective now. The new aim was preventing the end of the world.\n\nThe stairway leading to the third floor was narrow and circular with a counterclockwise twist. That was for defensive purposes. In medieval times, anybody right-handed who was fighting their way up the stairs would be hindered by the wall. Whereas their rival would be able to swing their sword freely. \n\nWe navigated the stairs back to back, with me facing forward and Kelley facing rearward. That was the usual arrangement. We'd rehearsed it many times. It was because I had the CBR and also because Kelly can walk backward down a flight of stairs without tripping. \n\nThe next level looked like a barracks. It was pitch black and the interior was spartan. The smell of unwashed bodies was dreadful. There was absolutely nothing stirring. But there were perhaps thirty beds packed together and a lot of snoring. \n\nOne of the bodies coughed and sat up. We froze. We were effectively invisible in our tac-suits. But he was looking right at us and there is a faint residual glow from the image intensifier unit in our night vision. \n\nThe guard stared for a heart stopping couple of seconds. I heard Kelley pull one of her knives. Then he smacked his lips, rolled over, drew the covers back over him, farted loudly and lay still. \n\nI exhaled. I heard a little \"snick\" as Kelley put her knife back. That was close. There were just too many guards, even if I DID have an automatic weapon. \n\nWe tippy-toed over to the stairs, hearts pounding. I planted four Claymore mines across the way down. Each was linked to a motion sensor. It was a basic safety measure. The mines would deter anybody who tried to follow us to the lower levels. \n\nThe second level was another thing entirely. It might have been the original basilica. It was a huge chapel, dark and cavernous, lit by a few dozen big candles situated underneath a long colonnade. The only things missing were the Gregorian chants. The silence was unnerving. \n\nThere were wooden benches in orderly rows along both sides. Those must have been for the followers. Then there were splendid, cushioned stalls in the chancel which were clearly for a few exalted types. Those had to be the Apostles. \n\nThe enormous altar at the head of the chancel appeared to be made of dark wood like mahogany. It gleamed with precious stones. More importantly, there was a laboratory test tube sitting at the foot of a huge golden cross in the middle of the altar. That had to be it.\n\nThe vial was surrounded by candles. As I reached for it, I thought to myself, \"Well-well-well, we can check one thing off the list.\" Kelley whispered urgently, \"Wait!!\" I stopped with my hand hovering over the tube. \n\nShe peered under it and said, \"It's wired.\" Thank God for my clever wife.\n\nShe said, \"It's a pressure switch. Let me substitute something that's close to the same weight.\" She took a single 7.62 round from my spare clip. Then, she very slowly and carefully placed the bullet on the plate as she flicked the vial off. It was a tense couple of seconds. \n\nI pocketed the vial and gave Kelley a relieved look. She gave me a grimace back. Neither of us had any idea how many people were actually in this spooky place and we had no desire to find out. \n\nThere was nothing left to see in the chapel. So we proceeded to the ground floor. That space stank, even more than the third floor and there was the distinctive smell of animals. The floor itself was covered in straw and there were perhaps seventy bodies, strewn on it, sleeping. \n\nThree guards were awake. Fortunately, they were turned away from us looking out of the arrow slits. I had a Surefire Socom556 7.62 suppressor on the CBR. It would muffle the shots to the level of a cough. \n\nThere were two coughs and the first two guards fell like their strings were cut. The third draped out of his arrow slit with a knife sticking out of the back of his neck. Nobody stirred. The room was cold and dank. They must have coughed a lot in there.\n\nIt was baffling. We had reached the bottom floor but there was still no data center. Then we heard voices emanating from the back of the keep. We ghosted over and found an open trap door at the very rear of the building. That led down into a catacomb. \n\nThe impression was like gazing from the fourteenth century into the twenty first. It was a classic ops-center. There were control stations, monitors, blade racks, and the accompanying cabinets and cabling. I knew we'd found our target.\n\nTwo men were conversing at a small utility table in front of a whiteboard. It was covered with documents and two laptops. They looked like they might be brothers. One was the creepy guy. The other was slightly older, but he was just as amazingly beautiful. \n\nI should have shot them right away. But I wanted to have a conversation with the creepy guy first. His sins, which included knocking out my wife, required a much more up-close-and-personal discussion. \n\nBoth men looked up surprised, as we started down the stairs. I said, \"Don't move!!\" That was a stupid thing to do. I already knew that the creepy guy was some kind of physical freak. Apparently, it ran in the family. In a flash, both brothers were out of their chairs and diving in opposite directions. It was an immediate and instinctive response like they'd practiced it. \n\nI gave Kelley a \"here we go again\" look, shucked everything I'd been carrying and took off after the creepy guy. Kelly gave me a predatory grin, dropped her equipment, and went after the other dude. \n\nThe area that we were in was the entire footprint of the keep. It was huge. There were thick stone pillars as befitted an ancient dungeon. But otherwise, we were in the twenty-first century. The entire space was air conditioned and lit by fluorescent lighting and all kinds of computer gear cluttered around the place. \n\nKelley is a huntress. She stalks people. I'm not that subtle. It's one of the advantages of being built like a tank. \n\nThe creepy guy had disappeared behind a pillar to my left. I charged around it and found myself in a wide aisle, lined by equipment racks. The creepy guy was standing, waiting, with a contemptuous smile and a gleaming sword. I thought, \"Seriously??!!\"\n\nThe normal reaction when threatened by a pointy object is to pause. But my advantage is my strength. So, I had to get close to the guy as quickly as possible. Consequently, I never stopped running. \n\nThe creepy guy froze. He clearly hadn't expected me to just keep coming. By the time he'd recovered, it was too late. He was quicker than any man I've ever faced. But I'd given him no time to react.\n\nHe couldn't swing the sword, so he thrust with it. The thrust sliced through my left pectoral glanced off a rib and exited clean through the lower part of my lat. The pain was instant and devastating. \n\nHe tried to pull the sword back. But I had the counter to that. I ran myself FURTHER onto it, right up to the hilt. So, I was able to get a good grip on his throat and he couldn't withdraw his weapon. \n\nA painful and inelegant solution? Perhaps - but it was extremely gratifying to feel his windpipe begin to crush. \n\nThe creepy guy's remarkable speed meant nothing now. It was like a tiger versus an elephant. He might have been fast and ferocious. But he simply didn't have the size or brute strength to save himself once we'd come to grips. Now, it was just a matter of ending the dance.\n\nHe tried the usual countermoves. First, he did an inside arm strike, trying to knock my hands apart. My biceps are probably as big as his thighs. I laughed in his face. Then he tried to hit me in the throat. He was lightning fast. I almost didn't get my chin down in time to deflect it. Finally, he tried a solar plexus strike. A lifetime of vertical crunches has turned my stomach into plate armor. That just bounced off.\n\nI could see that I was getting to him. He began wild thrashing which only burned up what was left of the oxygen in his blood. Finally, he slowed and began to sag. \n\nThen an odd thing happened. His eyes opened and he looked directly at me. It wasn't hostile like you'd expect from a guy you were in the process of killing. It was exalted, like he was undergoing an amazing experience. Perhaps it was the Pearly Gates. Or maybe death was what he'd been seeking all along.\n\nHis arms went limp and his head hung down. I kept him that way for a full minute. Then I dropped him. I felt for his pulse, nothing! The account was closed.\n\nThe creepy guy's sword was still sticking through my left side. I gingerly pulled it back out, being careful to stay in the original path. The pain almost made me pass out. But I had to remove the thing. It's difficult to maneuver with three feet of steel poking out of your back.\n\nOnce I had removed it, I dropped it, turned, and walked shakily back to where the chase had begun. Kelley was waiting there standing next to the body of the other dude. Cats always bring back their prey. He had a knife sticking out of his throat. \n\nShe got a look of absolute horror. I gave her a sickly grin and said, \"It only hurts when I laugh.\" \n\nShe said peremptorily, \"Strip!! I have to take care of that.\" I pulled off the balaclava and the tac-suit top. It was soaked in blood. Meanwhile, Kelly was fumbling in the backpack for the field dressing kit. \n\nAs her nimble fingers began to work, she said, \"That's the strangest wound I've ever seen. What was it a sword?\" I knew she thought she was joking. \n\nI said humbly, \"Yes dear.\" \n\nShe said flabbergasted, \"Do you mean to tell me that he ran you through like in the movies.\" \n\nI said, trying to sound pathetic, \"It was a big, long one too.\" \n\nKelley finished wrapping the dressing around my chest and said, \"That will hold for a while. But we'd better take care of business and get out of here.\" \n\nShe spent a couple of minutes meticulously planting C4 around the crypt, while I gathered the stuff we'd dropped, plus the laptops and all of the documents sitting on the table. I must have still been bleeding somewhere because my left side had become useless. I'd worry about that later. We had to get out of the place. \n\nWhen Kelley finished, we crept back up the stairs and began to work our way silently past sleeping forms. Thank God for the night vision. The entire area was as quiet as it had been when we left. Was that a mere fifteen minutes earlier? \n\nThe big oak citadel doors were barred, and I only had one functioning arm now. So, Kelley had to lift the other side of the bar. We were just beginning to swing the door open when there was an explosion upstairs. That was followed by three loud booms in succession. Somebody had tripped the claymores. \n\nThe people around us were jumping to their feet confused. We hastily exited, ran across a bridge over a moat and into the crisp night air. Kelley had the remote RF detonator. I nodded and she pushed it. \n\nThere was a huge muffled \"WHUMP!!\" and the building seemed to rise up on its foundations. Then it slowly began to implode. That was not something I'd expected. Kelley said grimly, \"The best way to make the whole thing go away was to blow the columns.\" Like I said, my wife's the smart one. \n\nThere was nothing but dust and flying debris hovering over the hole where the building had formerly been. We could take our time walking back. Nobody from the citadel would be following us. \n\nWe couldn't just show up at a four-star in the middle of the night dressed in tac suits. It might raise suspicion. So, we had regular street clothing stashed in the Mercedes. The two of us changed next to the open back. \n\nKelley has no body issues. She just skinned herself out of her suit and into a pair of shorts and a University of Chicago sweatshirt. I marveled at the perfection of her naked body. I gingerly fitted a lumberjack shirt over a pair of jeans. Kelley had to stuff my left arm into the sleeve. \n\nIt was becoming clear that I needed medical attention. But we would deal with that after we'd gotten out of the area. I could endure the pain and sooner or later the locals were going to notice that a prominent landmark had disappeared.\n\nThe night clerk was the only person who saw us come back in. He probably thought we were a couple of lovebirds returning from a midnight tryst, instead of two people who had just saved the world \n\n*****\n\nI looked out the open French doors and across the wide, manicured lawn. The distant ocean was bright blue to the horizon. The tropic breeze was fragrant and gentle. It had been a complicated 24-hours. \n\nIf we had waltzed into a local hospital, my ghastly wound would have raised questions that we didn't want to answer. So, we had to get some place safe. I called the only person I knew who could help us. That was Chelsea. \n\nI explained our situation and she said in her usual tightly-controlled voice, \"I knew something had happened. That entire gateway disappeared. So, the physical facility has been eliminated -- correct?\" \n\nI chuckled and said, \"Buried under a couple of hundred tons of medieval masonry.\" \n\nChelsea said, \"And you were wounded in the process?\" \n\nI said, \"I probably need a doctor. The creepy guy stuck me with a sword.\" \n\nChelsea laughed incredulously and said, \"Did you say a sword? What were you doing, playing Robin Hood?\" \n\nI said meekly, \"Something like that.\" \n\nShe said, \"Let me make some arrangements and I will get back to you.\"\n\nKelley's phone buzzed a half hour later. She answered it and said, \"Yes, he's lost a lot of blood. But I have a field dressing on him, and I think he's stable for a while.\" There was a pause and she said, \"Sure, we can do that. Make it three hours.\" Then she hung up.\n\nI was beginning to zone out as Kelley and Brooke helped me down to the Mercedes. They draped me propped on pillows in the rear seat. There was a short period of coming and going, while they loaded stuff in the back. Then Kelley drove off.\n\nI lost track of time after that. There was a brief stop just before sunrise. I could tell by the conversation that the two women were dumping all of our incriminating gear into the Reschensee. Then I must have passed out. \n\nThe next thing I knew it was bright sunshine and I was looking up at an angel. She was gorgeous, in a formidable sort of way. She was leaning over me as I lay in the back seat of the Mercedes. There was something familiar about her. But I couldn't place it. \n\nThe angel said gently, \"Welcome back Joey. I'm Dr. Millie Butler and we are going to move you to that aircraft over there. Can you walk?\" \n\nThere were a couple of men in pilot outfits, Kelley, Brooke, and Dr. Butler. They were standing around in a cluster looking apprehensive. I cautiously stepped out of the Mercedes. The world spun. I grabbed the top of the G-4 and did a quick check of all of my internal systems. It felt like the left side of my body had fallen off. I said unsteadily, \"I'll need a little help with equilibrium.\" \n\nKelley slid under my good arm and said, \"That's what I'm always here for my love.\" The doctor added, mildly, \"It's natural with so much blood loss.\" \n\nThe aircraft that I was guided to was a Gulfstream G650. It's the biggest of the long-range corporate jets. The stairway into the plane was a challenge. Once we got inside, they helped me to a hospital style bed in the back of the plane. It had all the gear you would associate with an ICU. \n\nThis was clearly a very pricey med-evac flight. I remember thinking, \"That must have cost Chelsea a pretty penny.\"\n\nThe engines started and we began to taxi out. While we were doing that, the doctor hooked up the monitoring gadgets and started the bags of things hanging from the racks around the bed. I could see that one of those bags was blood. She gave me a shot through the IV drip line and things faded again. \n\nI must have slept for hours because I awoke feeling much better. Kelley, Brooke, and the doctor were in the front of the plane talking like old friends. Kelley noticed I was awake and walked over to the bed. The doctor came over to the side with the equipment. She checked the read-outs and then smiled. \n\nIt was uncanny that somebody so beautiful would radiate such a sense of competence. Most women who looked like the doctor were at best selfish, and at worst total bitches. \n\nShe could see me wondering who she was and said without an ounce of pretense, \"I'm Millie Butler, Maddie Hughes's sister - Chelsea and Billy's aunt.\" \n\nTHAT was why she looked so familiar. She was a taller version of her incredible sister Maddie Hughes. Maddie was a major play in DC politics. She had helped me with a couple of problems in the past. One of those involved Chelsea's brother Billy. ",
        "I had never actually met Dr. Millie Butler. But I knew who she was. She was a modern-day Florence Nightingale, a woman who had dedicated her exceptional medical talents to the cause of humanity. In that capacity, she had influenced the way medical care is administered in most of the developing world. \n\nIt was the reason why she'd been given the UN's highest honor for public service and it was why she was considered to be something of a miracle worker among the world's top surgeons. Needless to say, my medical care was in exceptionally good hands. \n\nMillie said lightly, \"I repaired the damage while you were out. You were very lucky. The sword only missed your brachial artery by a couple of centimeters. You've been on whole blood transfusions for a few hours and you should be feeling stronger. I gave you a dose of oxymorphone to manage the pain.\"\n\nKelley added, \"We were fortunate. Millie just happened to be at CARE International headquarters in Vienna when Chelsea called. Millie met us in Innsbruck at the plane that Chelsea chartered.\" \n\nPrivate jets are expensive. But the Red Dragon could afford it. It was another wonderful thing about having a friend like Chelsea. I counted my blessings, and my superb wife was right at the top of the list. But right beneath her was the friendship of Chelsea Hughes-Meissner and her incredible family. \n\nThe flight was direct to Chelsea's compound on St. Lucia. Millie wanted to keep me isolated \"just for observation.\" The good doctor was too civilized to say it. But I suspect she actually thought I might do something reckless. After all, how many people do you know who are recovering from a sword wound?\n\nThe ten hours from Innsbruck to St Lucia worked wonders. By the time we touched down I was sitting up front with Kelly, Brooke and Millie enjoying the kind of meal you don't get on a commercial flight. I was still a bit torn up. But you should have seen the other guy. He was buried in the broken remnants of his evil scheme.\n\n*****\n\nThe Lagatus Imperii read the report with the equanimity that one would expect from a patrician legate of the Praefecti. He had argued from the beginning against the folly of giving such an important task to a band of assassins. But he had been overruled by the Propraetorship of the Concilium Seniorum. The good news was that he had been proven correct. But now the Praefecti would need another path. \n\nThe Praefecti were dedicated to the proposition that the only effective way a body politic could be led was through unquestioned obedience to an enlightened few. Even the autocracies were riven by strife because some citizens felt that they should have a say in how they were governed. That misguided idea fostered inefficient decision making and stirred up conflict in the marketplace. Hence, the Praefecti were devoted to ensuring a single steady hand on the tiller -- theirs!!\n\nThe Praefecti's strategy had been flawless. They would horde commodities in anticipation of a worldwide breakdown in the social order. Huge stockpiles of gold, oil, foodstuffs, all lay waiting in Praefecti vaults in anticipation of the chaos that the destruction of the world's communication infrastructure would cause. \n\nThat largesse would be distributed at the proper time to a grateful citizenry, in exchange for the necessary subservience to the Praefecti's benign despotism. Now, that plan had to be put on hold because the means for sowing chaos had been utterly obliterated in the destruction of the Apostle's lair. \n\nJudas, the only surviving Apostle, had reported to the Concilium that the Citadel had mysteriously collapsed totally obliterating the equipment, programming, backups, and staff required to recoup the Praefecti's investment. \n\nStill, the Praefecti and their schemes had survived for seventeen hundred years. This setback would not deter them in their unrelenting quest to achieve world domination. It just might take a few centuries longer. \n\nEPILOG\n\nKelley and I flew back to Chicago two weeks later. I really hated saying goodbye to Brooke. She had been a staunch companion. But she was leaving for freshman orientation at Cal Tech. I thought to myself, \"The nerds at that school will never believe what SHE did on her summer vacation.\" \n\nMillie went back to her duties with the World Health Organization as soon as she was certain that I was out of the woods. Chelsea and her husband Tom were hospitable. But you know what they say about guests and fish. \n\nGiven the profound implications of what we had blindly stumbled onto, Chelsea continued to investigate our discovery. She said, \"There's a lot more involved in this plot than a group of zealots on a remote mountaintop. But whoever was behind it covered their tracks very well.\"\n\nThen she added menacingly, \"I think the Red Dragon needs to follow the slimy trail, just to see where it leads. Fortunately, I have the documents and laptops that you scooped up to aid my quest.\" \n\nFor our part, we were back at the Quadrangle club the following Monday. It was the same cast of characters. Except, I was only eating with my right hand. I covered it up by ordering a salad, not a steak. It didn't seem prudent to draw attention to my condition by having Kelley cut up my meat for me. \n\nThe five of us had agreed that it would provoke unwelcome interest if the word got out that western civilization had teetered on the edge of destruction. The Citadel had been utterly destroyed, and the Red Dragon was on the case. If there was an entity lurking behind the Apostle's actions, then the Dragon would find it and dispose of it. But that would be another story.\n\nKelley handed a small stainless-steel container to the Chancellor. She said, \"This is the blood sample. I won't get into the details about how we retrieved it, since it required some questionable actions on our part, and you need plausible deniability.\" \n\nThat was the understatement of the century. Blowing up an entire citadel full of zealots might be considered a crime in some states.\n\nShe added blandly, \"Needless to say, you cannot be considered complicit in what we did so there will be no repercussions.\" Which was also true. Anybody who knew the real story was buried under tons of stonework. \n\nThe Chancellor nodded his understanding. You don't get to be Chancellor of a world class university by being na\u00efve. He took the box and said, \"Thank you Kelly. The donors will be pleased.\" Ah yes, those ubiquitous donors.\n\nThen he turned and solemnly handed the container to Isobel. He said, \"It is now my privilege to pass this along to you Isobel as the Director of the IGG. I am certain that whatever findings you generate will add to the historic record.\" \n\nIsobel looked like she was about to cry. She said, \"Thank you sir. I will make sure that truth and Dr. Atkinson's legacy will be preserved.\"\n\nSo there it was. Once again, Kelley and I had walked into a situation that nobody could have possibly imagined. And once again, through courage, smarts, and a little bit of luck, we'd managed to triumph. God only knows what other challenges await us. But the one thing that I know for sure is that that my loving wife will always be by my side. \n\nAuthor's Note:\n\nI've been told that readers like to trace back to other stories the characters appeared in. So, here it goes: Joey and Kelley first appeared in The Long Goodbye. But their association with Chelsea started with The First Deadly Sin and continued on in The Big Short. A young Millie first appears in A Totally Unromantic Love Story. But her real story is in The Short Happy Life of Island Bill. Chelsea first appears in The Short Happy Life of Island Bill, but her real story is in Islands in the Stream. Brooke has a very brief appearance in The First Deadly Sin.\n\nFinally, you may think this story is pure fantasy. If so... you would be entirely wrong. I took some literary license. But I want to assure you that everything I talked about is possible and, in most cases, already happened. \n\nThe John the Baptist DNA experiment dates to 2017 (covered in a History Channel episode). The earliest car hacks date to 2010. Root server attacks are probably infeasible, but the consequences I describe are real. And their less convoluted cousins, distributed denials of service -- called DDoSs, have been paralyzing the world's economies off-and-on since ILOVEYOU in 2000. \n\nEven worse, there's the ever-present prospect that some nut, or rogue nation, could take down our infrastructure, just as the Apostles might have done. That is why I, sleep like a baby every night... Don't babies wake up every two hours crying and wetting themselves?"
    ],
    "authorname": "dtiverson",
    "tags": [
        "beautiful hacker",
        "big tits",
        "hanging by a thread story",
        "hot sex",
        "loving wife",
        "redhead"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-agnus-dei-gambit"
}