{
    "title": "There and Back Again Ch. 121-122",
    "pages": [
        "Chapter One Hundred Twenty-One: Noble Training\n\n\n\nThe group of Wardens and the Legion of the Dead ate an incredible amount of food over the late meal; too busy stuffing faces, the noise settled down to a dull roar while we all finished up. There was enough chaos for me to eat like the Warden I was without raising suspicion. Poor Nathaniel and Varel looked vaguely ill watching it; Leliana, used to us by that point, just laughed.\n\nAfterwards, Alistair, Conrad, Aedan, Nathaniel, Varel, and a couple of Legion dwarves stepped out to talk, leaving the rest of us to mingle and chat with the remainder of the Legion. I overheard multiple stories about the rescue in Kal'Hirol, some people amused by the destruction Dworkin wreaked with his explosives, while some of the dwarves were incensed. It was interesting that even among the Legion, who were largely former Casteless or dishonoured warriors and nobles like Bhelen, there was discrimination against surface dwarves. Bel and Oghren defended the pyromaniac, reminding everyone of the massive nest of broodmothers they'd uncovered and destroyed, almost without any injuries.\n\nI spent some time chatting with Sigrun. She was unsurprisingly confused by my interest in her, poorly veiled as it was; I'd never claimed to be a good actress.\n\n\"Never been on the surface before,\" she was saying. \"It's sort of...bright, you know?\"\n\nThe other dwarves around her nodded as though she'd just said something incredibly profound; I had to restrain a giggle. I tried not to talk too much, not wanting to make her uncomfortable by acting like I knew her. She was sweet and somehow adorably na\u00efve; I thought she and Leli could be friends, if only Leliana wasn't planning on leaving.\n\nI wondered what would happen now; with her Legion unit still alive, was she going to become a Warden? I got distracted before I could ponder it too much by Conrad waving to get my attention from the door.\n\n\"What's up, Conrad?\"\n\nHe looked up briefly, confused, before shaking his head with a hint of a smile. \"Commanders want you in the meeting.\"\n\nI followed him down a hallway and around a corner to a closed door; it led to a moderate-sized sitting room with my brother, my husband, and their guests. Alistair held his arm out, and I squished myself into a space on the couch between him and Aedan with a smile.\n\nI was introduced to the two dwarves, Trevian, the head of the Legion detachment, and Fargrim, his second in command. \n\n\"Trevian's suggested that we work together for a time, make a formal arrangement between the Legion and the Wardens.\"\n\nI raised an eyebrow at the dark-haired, bushy-bearded dwarf. He grimaced slightly. \"We'd like to retake Kal'Hirol, and we'll need to borrow your masons to do it after what that stone-blind dunce did to it. In return, we can help patrol the Deep Roads under the Keep while you find the dwarven door your Commander claims is down there. And the Keep can have whatever stone you manage to salvage while digging out the Thaig.\"\n\nI nodded. \"Makes sense. I don't have any authority here, though \u2013 what do you need from me?\"\n\nAedan smirked at me. \"I've recommended one of the Legion join the Wardens as a sort of...liaison, I suppose. I thought I'd see if you had an opinion on which dwarf would be best suited for the role, given your skills at reading people.\"\n\nI beamed. Yes! \"Join, as in become a Warden?\" At Aedan's nod, I continued. \"Sigrun,\" I replied immediately. \"She'd be perfect.\"\n\nFargrim gave me a patronising smile. \"In the ten minutes you've been in there, you can tell that already? Our least-experienced Legionnaire?\" He turned back to Trevian to say something else, when Alistair interrupted him.\n\n\"If my wife says Sigrun is the one, she's the one we'll take,\" he declared, and Aedan nodded. I was grateful; Avernus' new Joining potion might be an improvement over the original, but I didn't want to take any chances. I wasn't prepared to watch another dwarf die needlessly to assuage the arrogant dwarf's concerns. I wasn't aware Sigrun was their junior member, but I knew she was loyal, brave, and good in a fight, and best yet, she'd survive the Joining.\n\nTrevian's brow furrowed slightly as he regarded me, but finally nodded. \"Sigrun, then.\" His voice was gravelly, like someone who'd smoked for a century; given the lack of regular tobacco that I'd seen in Thedas \u2013 the occasional pipe not-withstanding \u2013 I wondered if he'd been born that way, or somehow injured his vocal cords. \"When will you perform the Joining?\"\n\n\"I'd like to offer her the chance directly, if you don't mind. If she refuses, I will take your suggestion on who to approach next. We can talk with her tomorrow, after everyone has had a chance to get to know each other.\"\n\n\"You have accommodations?\" I asked.\n\nSeneschal Varel nodded. \"The main barracks are full, but there's an outbuilding that used to house surplus guards and Amaranthine soldiers on duty. The roof will need some work before winter, but it's acceptable for now.\"\n\n\"My men are rather pleased with the opportunity to sleep in actual beds.\" Trevian snorted. \"We'd better go get things settled before the boys find the rest of the ale.\"\n\nBack in the dining room, Aedan made a speech welcoming the Legion, and all the members of both groups announced their names in turn. A keg of ale was opened, with Varel reminding everyone that would be it for drink for the evening, so we could get to work in the morning. None of the Legionnaires seemed upset to learn they'd be working with the Wardens, and mugs of ale began being passed around. We all drank to the Legion and the Wardens \u2013 I passed my almost entirely full ale to Oghren after the toast \u2013 and then allowed myself to be pulled in Alistair's lap to catch up with our former companions and get to know our new ones.\n\nWhen I looked up a few minutes later, I realised I couldn't see Rolan anywhere; I soon forgot about him to enjoy my evening. Tired as we were from the travel, Alistair and I went to bed early, made love tenderly, and then passed out in the first real bed since we'd left Denerim.\n\nWe were woken early by servants banging on the door; it wasn't quite the crack of dawn, but we hadn't been allowed to sleep in much. We climbed out of bed reluctantly, and I put on one of my new pant suits and sat brushing my hair while Alistair struggled into his armour. I finally took pity on him and began helping him with buckles and straps.\n\n\"Why do they make armour so needlessly complicated?\" I grumbled.\n\nHe chuckled. \"We don't have Earth's fancy machines to make it, that's why!\"\n\nI pouted and finally closed the last buckle. \"You're all set. What are the plans for the day?\"\n\n\"First we're all going to meet with everyone in the main hall. I'm taking one group of Wardens and some of the Legion into the basement to close that Deep Roads exit before we're attacked. Conrad will be taking a second group to patrol the Wending Wood \u2013 you mentioned the darkspawn playing off the humans against the Dalish? And I think Aedan will be leaving for Amaranthine to help the Arl's troops clear out smugglers and collapse down any back entrances into the city. The stone masons will start with plans for the walls.\"\n\n\"And me?\" I sighed. It was going to take some getting used to, being away from Alistair most days for separate duties. As much as camping in the rain was unpleasant, at least during the Blight we were together. \n\nAlistair, sensing my melancholy, pulled me into a gentle hug. \"I think Nate and the seneschal have plans for you. Administrative...something or other.\" He kissed my pouting lips softly. \"I will miss having you with me, but I won't miss worrying about your safety.\"\n\n\"So I'm just supposed to be the good little wifey, staying safe while my big, strong husband goes off to fight?\"\n\nHe tilted my chin up with a tender hand on my jaw. \"Not because you're a woman, or my wife. You know that, right? It's because you're the Steward of Soldier's Peak. As much as your business experience will help, I suspect there's going to be a lot to learn to run what's essentially an Arling. I think that's a much more worthwhile use of your time than fighting darkspawn, don't you?\"\n\nI sighed again. \"You're right, of course. I just worry about you. At least when we're together, I have some illusion of control; I can pretend that I can help keep you safe.\"\n\nHe kissed me again before taking my hand and leading me out into the corridor. \"I love you, Sierra. Control freak issues and all.\"\n\nHe stuck his tongue out at me, turning my glower into a laugh. We strolled down the more direct route to the main hall \u2013 a passing servant had taken pity on us the night before and showed us a way back to our room \u2013 and found ourselves something to eat in the dining room. The Wardens were all there, uncharacteristically quiet in the early morning, and I wondered briefly if one keg was enough alcohol to make them all hungover.\n\nThe Legion were there too, Trevian and Fargrim nodding at Alistair as we entered. The rest of the dwarves were much livelier than the wardens \u2013 whether more used to the early hour or less hungover, I couldn't say. \n\nAedan was already there, Zevran at his side, silently shoveling food into their mouths and watching the Legionnaires banter. Alistair and I joined my brother, talking quietly around mouthfuls of porridge, thin-sliced meats, cheese, and thick-sliced bread. What I wouldn't give for a proper toaster.\n\nAfter everyone had eaten, Aedan sent Conrad, Rolan, Bel, and Mornwulf off to patrol the Pilgrim's Path, with strict instructions not to aggravate the elves or allow the humans settled in the area to attack, and under no circumstances to go inside the old Silverite mine; I hoped they'd be in time to prevent the murders of so many of Velanna's clan, and perhaps even prevent Seranni from being taken by the Architect, but really had no solid way of knowing when those events had happened. Hopefully, at the least, if it's already too late they can waylay Velanna before she attacks too many merchant caravans. Varel wasn't yet aware of any problems along the Pilgrim's Path, so I had hope, anyway.\n\nAedan planned to take Zevran, Oghren, Alim, and Prince with him to Amaranthine, along with a number of the army troops assigned to the Vigil by Cailan. They had multiple goals there: they'd promised Nathaniel to find his sister, Delilah, and invite her to visit the Vigil; they had to help the city guard root out the smugglers plaguing the city and then find a way to close the smuggler's routes to the coast so the darkspawn wouldn't be able to make use of them later; Aedan wanted to post notices recruiting for the Wardens in the city; and they wanted to get some of the dwarven stone masons working on Amaranthine's walls. A number of the soldiers travelling with them would be staying in Amaranthine, with more coming later to defend against any darkspawn invasion. Aedan predicted they'd be away for a couple of days to accomplish everything; they were taking a number of Nathaniel's soldiers with them, and hoped to have the help of the city guard as well.\n\nThe remaining Wardens \u2013 Alistair, Anders, and Solona \u2013 along with Leliana and about half of the Legionnaires were going to go on an expedition into the Deep Roads underneath Vigil's Keep. Voldrik and a couple of the stone masons would be behind them, waiting to close off the tunnel. Aedan and Alistair had agreed to pair Sigrun up with the Wardens, so Alistair could evaluate her before formally offering her the Joining. I knew it was only for appearance's sake; Trevian and Fargrim were still weirded out by the fact that I'd chosen a candidate without hesitation after knowing them only a short time.\n\nSergeant Maverlies was being sent as a messenger in case they needed to send someone back while they were fighting. The fact that they felt the need to take a messenger did not make me any happier about the plan to go essentially into the Deep Roads. Alistair squeezed me reassuringly when I stiffened up at that revelation, and I shot him a dirty look.\n\nI went into the courtyard to watch Aedan leave, and Alistair assemble with the Legionnaires and remaining Wardens. The dwarves had obviously had some time to adjust to being on the surface; none of them spent time staring up at the sky the way Oghren, Faren, and Bel had when we'd first emerged from Orzammar, though a couple of them still looked distinctly pale. Sigrun alone seemed enthused, examining the way the sun glinted off their armour, and pointing out shapes in the clouds. I grinned until I realised Fargrim had noticed me watching her; the arrogant dwarf had his eyebrows furrowed as he stared at me, and I moved away uncomfortably.\n\nOnce Aedan was gone, Alistair blew me a last kiss and disappeared through the door into the dungeons, and I was left standing alone in the courtyard. I reluctantly went back inside, and a servant found me and directed me to Nate's study.\n\nI spent the morning discussing my 'skills' with Nathaniel; it became clear that running Soldier's Peak wasn't going to be the difficult part for me. The part I would likely struggle with was much more related to understanding Fereldan politics and laws than the details of employing large groups of people, making a budget and the like. I also lacked some of the basic skills every even vaguely educated Thedosian had, such as legible writing with a quill and ink \u2013 Nate pulled out my letter to him in the Free Marches, and Varel's eyes just about popped out of his head at my appalling penmanship. Calligraphy is hard! I also had minimal understanding of the hierarchies and entitlements of the Fereldan nobility, including titles. And I had never ridden a horse.\n\nWith a sigh, Varel set me a schedule for the foreseeable future. My mornings would consist of a couple of hours of sparring and training with the soldiers to keep in fighting shape, followed by horse-back riding lessons with an elf I recognised \u2013 Samuel, the groundskeeper. Afterwards, I would spend my afternoons divided between practicing my writing, reading political histories as chosen for me by Nathaniel, and essentially etiquette lessons with Varel. I used the rest of that afternoon to have servants help rearrange the furniture in the spare bedroom in Alistair's and my suite, turning it into a reading room, with two comfortable wing-back chairs and a desk re-purposed from somewhere else. The look of surprise on their faces when I asked them to remove the bed was almost comical. Nate approved a small renovation \u2013 a proper door with a lock between the bathing room and the office, so that the office could be accessed from the hallway without anyone getting in to our room \u2013 and I expected that to be done over a week or so.\n\nWhen Alistair came back that evening, covered in dust and sweat, he found me curled up in one armchair, a stack of books beside me. I jumped up in surprise when he walked in, staring around himself in awe at the change in the small room.\n\n\"Love? Maker, you're filthy.\"\n\nHe grimaced. \"I know. I like what you've done with this room, by the way.\"\n\n\"What is going on in that basement? I thought you'd be fighting darkspawn, not rolling around in the dirt.\"\n\nHe chuckled, shaking his head. \"Spent most of the day helping the diggers shift debris. You said Dworkin was responsible for the damage to the Keep, but I don't think that's entirely true. He might even have helped, honestly. The passages are mostly blocked, some with stone, but most with dirt and roots and wood. If we want to prevent the darkspawn coming through there, we need to clear the passageway first. It's going to take days. I've set up a watch schedule between us and the Legion; whoever's on watch will end up helping with the digging.\"\n\n\"Does that mean you're done for the day? You look wasted.\"\n\nHe rubbed his forehead, smearing around the dirt through the sweat tracks. \"I hope so.\"\n\nI smiled. \"Let me help you out in the shower. Let's get you clean.\"\n\nHis exhausted look of abject horror made me giggle. \n\n\"I said clean, dearest, not dirtier. Come.\"\n\nI allowed him to shower off alone, rinsing the worst of the dirt, and then had him sit in the tub while I scrubbed his back and lathered shampoo into his hair. He slumped back against the side of the tub; between sheer weariness and enjoyment of someone taking care of him, I couldn't have guessed which was more powerful. He was half asleep by the time he was clean, and I helped him dry off quickly before pushing him onto the bed, tossing a clean pair of sleeping pants his way.\n\n\"I'll go bring us a private supper. I'm sure everyone else is also spent; we can eat and call it an early night.\"\n\nI found a servant in the dining area, and explaining who I was, requested she show me to the kitchen. To my resigned dismay, she insisted on arranging to bring a meal to us, and wouldn't hear of me raiding the larder for something on my own. I was shooed back to my room, where Alistair had actually fallen asleep angled across the bed, pants on but undone; I just had time to throw a sheet over him when there was a knock on the door. Three servants stood outside, holding covered dishes of divine-smelling food; I had them put them on a small table near the hearth, and then ushered them out. \n\nTrue to Warden form, Alistair woke up when the smell of food reached his nostrils; we sat on the rug by the fire and ate quickly. When we were done, we snuggled for a while; Alistair made a half-hearted attempt at making out, but kept having to interrupt himself to yawn. Bemused, I finally tucked him in bed and returned to my new study to read for a couple more hours.\n\nThe next morning, Alistair left early, and I put on my armour before heading to the training yard. I selected a couple of wooden practice daggers before warming up with a sparring dummy. There were a handful of soldiers also sparring, and a small group of young teenagers, obviously soldiers in training. Most of Nate's troops, however, had been deployed either with Conrad, with Aedan, or in the basement of the Keep, just like the Wardens. I sparred with a couple of soldiers all-too-briefly, and then it was time for my horseback riding lesson.\n\nIt didn't go well.\n\nI popped by the stables to let them know I needed to change; Samuel, the groundskeeper and now apparent stable master, shook his head when I mentioned it. \n\n\"I was specifically told you'd be most likely to ride armed, my Lady; makes sense \u2013 if you were wearin' a fancy dress, you'd be in a carriage. Armed means riding astride; good thing, too \u2013 I'm no expert on sidesaddle.\"\n\nI stared at him like he was speaking in tongues. \"I'm not riding sidesaddle. Don't even think about it.\"\n\nHe chuckled. \"Put yer helmet on, and let's get started. Maybe it'll protect yer head if ya fall.\"\n\nWith that encouraging statement, we began. Poor Samuel was amazed and somewhat horrified to learn I'd never even been close to a horse, never mind mounted on one. I admitted I was a bit terrified; the only horses I'd seen in Thedas up to that point were massive beasts, like the ones that pulled Eamon's carriage from Redcliffe to Denerim.\n\nWhen I asked about that, Samuel laughed. \"Those aren't for riding, my Lady. Too big, too slow. They'd only break into a trot if the Archdemon himself was chasing them.\" He slapped his knee, enjoying his own joke. \"No, you'll be riding one 'a these.\"\n\nIt turned out the truth was even worse than my expectations. While the carriage horses were indeed enormous, they were completely placid \u2013 too stupid to get startled, according to the elderly elf. There were a variety of breeds used for riding in Thedas, but most of them seemed to share certain characteristics, including being exceedingly cranky and high-strung. Samuel walked me through the stable, a large, drafty building that smelled of hay and manure, pointing out animals in stalls to either side. ",
        "There were striders and coursers, forders and chargers...I couldn't have recalled a single detail about any of them, if asked later. They seemed large enough to me, if not quite as burly as the carriage horses, but they all seemed just sort of...nervous. They neighed and whinnied and shifted as we passed, and the one Samuel pulled out for me was no exception. It was saddled already, dancing around on the end of the leash \u2013 reins, he informed me, not a leash \u2013 snorting and pawing at the ground.\n\nSamuel handed me an apple and advised me to hold out my hand. Terrified, I almost couldn't look, taking the apple and turning away as I thrust the fruit in the direction of the tall, brown beast. To my relief, it didn't take a finger as it took the apple and ate it in two large bites, and I relaxed somewhat. Its lips were soft and pliable, and it tickled as it touched my hand. However, evidently one apple wasn't enough, and it began snuffling at me, blowing air through its nose and mouthing at me looking for more. \n\nI giggled, half amused, half hysterical, and jerked away from its questing muzzle. This was the wrong choice, evidently. With a whinny, it yanked its head away and reared back, pulling Samuel half off his feet before he managed to calm it down. The elf stepped to the side, slapping it on the neck and crooning to it softly, and it settled again.\n\n\"Careful, my Lady,\" he said, turning to me once he had it under control. \"You scared the poor girl. Slow movements, that's the key. Sadie here wouldn't hurt a fly on purpose, she just likes apples. Come, try again.\"\n\n\"I startled her?\" I grumbled, stepping forward with exaggerated motions. The elf took my hand and brought it to Sadie's neck, urging me to stroke her short fur softly. She stood still, watching me with one eye, but I took a deep breath again as nothing bad happened.\n\nTaking my hand, he pulled me closer, handing me a nearby brush. \"I think you both need to get a bit used to each other,\" he informed me. \"Best way to get on a horse's good side is to take off her saddle and give her a good grooming.\"\n\nI spent the rest of the morning brushing Sadie after learning the basics of a saddle. I was sure, being apparently a noblewoman, that I wouldn't be saddling my own horse often, but it made sense to understand how \u2013 if we had a problem while out riding, I'd need to be able to troubleshoot it on my own. Samuel informed me we'd try actual riding the next day. I was slightly less nervous after watching Sadie almost purr with delight as I brushed under her saddle.\n\nI spent my lunch hour and a couple of hours after that being grilled by Seneschal Varel on table manners and forms of address for fellow nobles as well as the various functionaries I'd be surrounded by. Dull but necessary, he assured me. I sighed, secretly vowing vengeance on Cailan for putting me into the position. \n\nI used the rest of my afternoon practicing with a quill and ink; I'd gotten ahead in my reading, thanks to a very boring youth spent speed-reading as a form of escapism and an early night with an exhausted husband. By the end of the day I was covered in ink and smelled like a horse, and I ended up joining a grimy Alistair in the shower when he appeared from the basement.\n\n\"I think we'll break through tomorrow,\" he crowed, happy to be done with digging. \"Then we can guard that barrier door while Voldrik fixes it, and be done down there.\"\n\nWe ate in the dining room that evening, and even had just enough energy to make love before falling asleep intertwined in our room.\n\nMy horse riding the next day was a challenge; it seemed Sadie could sense my fear, and she'd move every time I tried to swing up into the saddle. I fell a couple of times, not injuring myself badly, but getting more than my share of bruises; once, when I managed to get my foot in the stirrup and heave myself up, she shifted a different way so I tumbled across her back and found myself on the ground on the opposite side. Samuel covered his mouth, trying to hide his laughter as I cursed a blue streak and climbed to my feet again.\n\nI finally managed to mount once, and the elf led Sadie around a ring a couple of times so I could get used to the feel of sitting on horseback. It was a bit exhilarating, I had to admit, feeling the powerful animal move under me. I raced inside after, changing and cleaning up quickly, wishing someone was around for me to share my excitement with.\n\nI'd just finished up a very quiet lunch alone in the dining room when I saw a filthy, blood-streaked Sergeant Maverlies run through the main hall screeching the seneschal's name. I abandoned my plate and chased after her, arriving breathless at Nathaniel's door just in time to see Varel run past me the other direction. Nate was even paler than normal, struggling to maintain a calm facade as he fired incomprehensible instructions at Maverlies, who was nodding frantically. She also ran off, leaving me with the shaken nobleman, and less than no idea what was happening.\n\n\"What is it?\" Nate blanched, refusing to meet my eyes. \"Nate?\"\n\n\"They found more darkspawn than they expected. The tunnels are full of them.\"\n\n Chapter One Hundred Twenty-Two: Basements are Bad\n\n                 \n\n\"The Wardens found more darkspawn than they expected inside the Keep's basement,\" Nate informed me. \"There are apparently multiple camps within the tunnels, many on the inside of the barrier door. The Commander assumes that they were assembling there for the assault you warned us about. They were apparently not prepared to attack, but the first skirmish got them a lot of attention. He's asked for reinforcements; he's not sure they'll be able to hold the tunnels.\"\n\nI gasped, and Nathaniel stepped over to me, gesturing at a chair like he thought I'd need to sit down. \"Varel's gone to mobilise the rest of the Legion and the remaining soldiers. It's going to be okay. Maverlies said no one was badly injured.\" He left the obvious 'yet' to his statement unspoken.\n\nI shook my head at the proffered chair. \"I need my armour. I'll meet you in the courtyard. But Nate...don't assume the darkspawn in the tunnels are the only ones. Leave some soldiers at the gates in case there's more. They've surprised us before, and the Architect may know I'm here. We don't really know what he's capable of.\"\n\nNathaniel nodded, but appeared to be opening his mouth to say something. I didn't give him a chance to object, racing away to my room to gear up.\n\nMy armour had been cleaned and hung on its stand; briefly grateful for efficient servants, I scrambled into the set of blood-red leather, cursing at the time it took, strapping my daggers to my hips and patting my helmet into place. I left again at a run, and met a now-armed Nathaniel in the courtyard organising squads of soldiers.\n\nHe had closed the Vigil's gates, I noticed; they'd only help so much in their sagging state, but archers had been placed on the walls, split between watching outside for more darkspawn, and watching the basement door. I wonder if those gates will keep more darkspawn out of the Vigil, or in? Soldiers were hastily erecting barricades around the basement door, and armed men seemed to be occupying every open spot in the courtyard.\n\nNate gestured to me to join him, and I headed over to see what was going on.\n\n\"What's happening?\"\n\n\"The Legion will be headed in as soon as they're all gathered. I'm setting up rotations for the soldiers so we can ensure adequate coverage for as long as necessary. I'll be sending down the first group in a few minutes. Would you care to take command of the gates? After the Blight, you've probably got as much experience as any of the captains.\"\n\nI shook my head. \"I'm going down. For reasons I don't have time to explain, the Wardens are going to need me.\"\n\n\"You have to let your husband do his job, Sierra. I know you want to make sure he's safe...\"\n\nI interrupted him. \"This isn't about that. Yes, I want him safe. But Nate, I have specific skills when it comes to the darkspawn. I can sense them. I'm going down. I just want to do a check at the gates and make sure there aren't any coming over land.\"\n\nWithout waiting for his response, I jogged up the slight incline and climbed a ladder leading up to the ramparts above the courtyard. I made my way to the section closest to the gates, closing my eyes and trying to listen to my internal taint sensation. I could feel vague tingling, though I couldn't be sure whether it was wardens or darkspawn, but coming from below \u2013 nothing from outside the gates.\n\nI made my way back down, signalling to Nate that I was going to go into the basement. He shook his head and beckoned, but I ignored him and slipped through the door with a group of Legionnaires heading down. I heard a shout as the door slammed behind me, but ignored it too. If he thinks anything is going to keep me from going to Alistair, he's got another thing coming. I raced down a set of stairs, through an empty dungeon, and down a long winding corridor behind Trevian and a handful of Legionnaires, barely noticing my surroundings. What I did see didn't line up particularly well with my recollection from the game, though there were multiple doorways and halls we didn't enter, so I couldn't be sure.\n\nI hope someone found and re-killed the undead I suspect are down here somewhere.\n\nIt took several agonising minutes to wind through the tunnels in the labyrinthine basement; whoever had built the catacombs down there \u2013 the Avvar, if I remembered correctly \u2013 deserved to be slapped upside the head. We were well outside of the Vigil's walls and the tunnels just kept on going, periodically descending deeper and deeper underground.\n\nThe sound of fighting was the first sign we were getting close, the clanging of metal against metal echoing down the corridor. I pushed my way through the clump of dwarves as they stopped to get their shields in place and draw their weapons; I'd seen the shield walls the Legion seemed to favour, and there was no question they were effective, but I wasn't going to waste the time getting there. I didn't need protection from the darkspawn; I just needed to find my husband.\n\nOne of the Legionnaires shouted as I pushed past them, and Fargrim, the arrogant one, reached out to grab my arm. \n\n\"Get behind us, you daft woman! Rushing in there is only going to get you killed.\"\n\nI shook him off and pressed forward to the sound of dwarven cursing and the clattering of shields rapidly snapping into position behind me. I ignored it, racing around the last couple of twists, eagerly looking for my husband and my friends ahead of me.\n\nI hesitated only for a moment when I finally came upon them. Alistair and a couple of Legionnaires were holding off a large group of darkspawn, primarily hurlocks with a few genlocks scattered throughout, with the support of the two mages and Leliana with her bow. Anders froze darkspawn into grisly statues, which Solona smashed with magically hurled chunks of rock; Leliana picked off strays and stragglers with precision. \n\nThe other Legionnaires and soldiers, several of them looking somewhat worse for wear, worked frantically trying to move debris \u2013 rock, smashed furniture, whatever they could get their hands on \u2013 to block the main part of the passage, trying to limit how many of the tainted creatures could approach at once. When someone was hurt, another Legionnaire would trade out with him while Anders patched up the wounds as best he could without using up his mana reserves. Alistair looked uninjured, moving easily, spattered with black darkspawn blood but none of it the red colour of his own.\n\nI fell onto the darkspawn on Alistair's unprotected flank; he grunted in surprise, but saved his breath as we effortlessly fell back into our fighting pattern, instinctively moving together and slaughtering the darkspawn trapped by the temporary barrier swinging into place. The rest of the Legion weren't far behind me, and the onslaught caused the rest of the creatures to fall back even further, giving the beleaguered group a bit of a breather.\n\nI'd sort of forgotten how much I hated the Deep Roads; if for no other reason, I hated how it messed with my darkspawn senses. There could have been ten or a hundred darkspawn in the tunnel ahead; I concentrated on trying to feel them, but the corruption in the very stone stymied me. I sighed.\n\nOne of the wounded Legionnaires began piling darkspawn bodies for burning as I turned to examine my husband critically. I pulled a rag out of a pouch attached to my armour, offering it to Alistair to wipe ichor off his face. He used it and then pulled me in for a quick, chaste kiss.\n\n\"Whatever are you doing here?\"\n\n\"You thought I'd let you keep all the fun to yourself?\"\n\nHe groaned and squeezed me harder. I thought he was going to say something about me staying safe, and was prepared to pinch his ear in retaliation, but he surprised me. \"Thanks,\" he whispered, before we were interrupted by an irate dwarf \u2013 or rather, a couple of them.\n\n\"What in the name of the Ancestors do you think you were doing, pushing ahead alone?\" Fargrim demanded.\n\nAt the same time, Sigrun, who'd been fighting on Alistair's other side, turned to growl at my husband, \"You should have traded out when it was your turn, Commander. Doesn't do anyone any good if you're too exhausted to fight later.\"\n\nI chuckled, and Alistair grinned beside me. He assured Fargrim that I was in no danger from darkspawn and didn't need a babysitter, while I pulled Sigrun aside and quietly explained about Grey Warden stamina.\n\n\"Stamina or not, no one can fight for an hour straight without paying for it,\" she whispered urgently. \"Everyone else was rotating in and out to get a rest. He needs to pace himself or he's going to get himself \u2013 or someone else - killed.\"\n\n\"I'll watch him, I promise.\" I sighed. \"Honestly, though, if he'd backed off you might not have been able to hold out. No one else who was down here uses a shield?\"\n\nWe had a brief conversation about Legion tactics, which largely involved keeping the shield-wall members together. So when the group had to split, typically the rogues and two-handed weapon fighters went one way, while the shield warriors went the other. Sigrun's group consisted of dual-wielders and two-handers exclusively. And we'd sent Bel and Rolan \u2013 the only two other shield-wielding Wardens, to patrol the Pilgrim's Path.\n\nAfter a discussion with Trevian and Fargrim, Alistair clapped his hands together to get everyone's attention. He pointed to a group of four soldiers huddled together, looking frightened. I did too, my first time encountering darkspawn. The four of them were probably barely twenty, by their look. \n\n\"You, I need you to block this passageway completely. Use anything you can find; I'll deal with the Arl later if he has a problem with it. Leave a gap just large enough to fit one human through at a time. Voldrik can help you. You four,\" he pointed at another group of slightly more experienced-looking soldiers, \"guard them and the gap. The rest of us are going in as soon as we've had a chance to catch our breath. There's at least another forty or fifty darkspawn down there, and I'm not sure how far away that barrier door is. When the rest of the soldiers arrive, have them slip through the barricade and set up positions on the other side in case we miss any darkspawn. No darkspawn can be allowed to get into the Keep. Understood?\"\n\nIt was sexy watching 'Commanding Alistair' tell everyone what to do. His confidence, so shaky in the original video game, was amazing to watch. I stared at him with hunger in my eyes; he smirked and winked at me when he caught my expression, and I knew it was a promise: later.\n\nHe looked around and everyone nodded. The soldiers he'd pointed out headed back down the hall behind me, opening side doors and looking for stuff to use as a barricade. Anders and Solona were already crouching down, checking out any remaining injuries. One of the fresh Legion scouts brought around water skins for those who'd been fighting for a while already, and Alistair drank almost an entire one, wiping his mouth with the back of his gauntlet when he'd gulped as much water as he could hold.\n\nI turned my back to the crowd, lowering my voice so no one else could hear me. \"Are you okay?\" I rolled my eyes when he automatically nodded. \"No, really. You've been fighting for a long time; you must be exhausted. Are you really going to be up for this?\"\n\nHe sighed, rubbing his face. \"Don't have much choice. Besides, I've got this.\" He reached under the belt I knew he stored small healing potions in, and drew out a tiny yellow vial to show me. \"It's not much, but it'll keep me on my feet if I get too tired.\"\n\n\"Alistair, don't you remember Anders telling you how dangerous stamina potions can be?\"\n\n\"Only if you use them too often, or take too much. Or if you use them to keep going when you're injured. It's just a little one. The only one, I promise.\"\n\n\"I'll hold you to that.\" I sighed. I couldn't say much; I had a similar vial tucked into my armour somewhere for emergencies too, along with a spare Lyrium potion and a couple of healing poultices and potions. \"What's the plan?\"\n\nMy husband looked at me, reluctance warring with necessity clearly on his face. He echoed my sigh. \"Do you think you can get past them and see what shape that barrier door is in? We need to close it before more of them start pouring through.\"\n\nI nodded, reaching up to touch his cheek softly with my gloved hand. \"I'll be in much less danger on my own than standing with you all.\"\n\n\"Unless the Architect is there,\" he muttered worriedly.\n\n\"He's not there. He wants to kidnap Wardens alive, not kill them. Which isn't particularly reassuring, I'll grant you, but he wouldn't be allowing this sort of an attack if he knew. Too much chance of killing the endless blood suppliers he's hoping for.\"\n\nAlistair shuddered at the mental image, and I smiled wanly. \"Get a tiny bit of rest, and get everyone ready. I'm going to go talk to Voldrik about that door. I don't know what to expect as far as damage goes, but I want to be prepared to close the damn thing if possible.\"\n\n\"No heroics, Sierra. I mean it. Get a look, and get the void out of there.\"\n\nI leaned in for another quick kiss. \"I promise.\"\n\nI left him to make arrangements with the Legion and the rest of the soldiers, a group of whom had come streaming into the chamber; I had to search for a while before I spotted Voldrik. I hadn't been introduced to him before, and at first looked vaguely among the Legion dwarves, before spotting the older brunette standing with a couple of the soldiers Alistair had assigned to create a barricade. \n\n\"Voldrik?\"\n\nHe turned and gave me a once over, gaze hovering over my daggers \u2013 currently dripping darkspawn ichor \u2013 before he made eye contact.\n\n\"Aye? And who're you, then?\"\n\n\"I'm the...um, well, I'm going to be scouting ahead to see how far we are from that barrier door. I was hoping you could give me a quick lesson on how to close those things, or repair them if necessary. We believe the door was either not quite completed, or possibly damaged.\"\n\n\"You're going in there alone? Better you than me, I suppose. I'm not sure I'll be able to tell you much about it, lass. I'll have to see it to know what needs fixin'.\"\n\n\"Alright, but at least tell me the basics? I know how to open one, but not close it.\"\n\nHe spent a few minutes drawing in the dirt with a finger, showing me how to close a functional barrier door. It didn't improve my confidence at all. At least I'll be able to judge the numbers and see what's waiting on the other side. I nodded my understanding to Voldrik, who clapped his hand on my shoulder sympathetically.\n\n\"You get me to the door, I'll fix it.\" He smiled and then turned back to the growing barricade.",
        "I found Alistair talking to Trevian and Fargrim. He turned to me as I approached and forced a smile, eyes tight with stress. \"You ready?\"\n\nI nodded and leaned in to him briefly, trying to absorb some confidence, before turning away and resolutely walking up to the barrier.\n\n\"Where do you think you're going?\" Trevian asked, but I ignored him and took a deep breath, making eye contact one last time with Alistair before ducking through the small gap remaining. I heard an exclamation from behind me in dwarvish, and assumed the Legion commander was swearing; Alistair was answering him, so I put it out of my mind and looked forward instead of back.\n\nThe hallway leading into the room we'd fought in continued to lead deeper underground, but to my relief stayed quite wide as far as I could see before curving out of sight. One side of the rough-hewn corridor had darkspawn standing against it at intervals, most of them watching the barricade; I wondered if I was imagining the hungry expressions on their ruined faces. Some of them waited listlessly, while others appeared to be attempting to sharpen weapons or repair their rough armour; all of them ignored me entirely.\n\nI wonder what they're waiting for?\n\nI edged along the opposite side of the hall, stepping carefully to avoid drawing attention to myself, but it was probably unnecessary. The darkspawn shifted and grunted, the sounds echoing down the hall, and I doubted they'd have heard me if I had fallen, never mind the quiet whisper of a kicked pebble. I'm still not taking any chances. I wondered if the hoots and other vocalizations constituted communication, or if they were just random noise.\n\nI counted twenty-five darkspawn in the corridor visible from the barricade, and slowly crept around the corner to the area previously hidden from sight. There were more darkspawn there, still largely waiting around aimlessly, in a much larger chamber than I'd seen up to that point. The creatures seemed to segregate themselves somewhat by race, to my grim amusement, and a number of hurlocks bunched together staring suspiciously at a slightly larger group of genlocks. A flicker of movement in a back corner informed me there were probably a couple of shrieks hiding there, and the opposite corner even held a massive ogre, currently crouched down on its haunches, disconsolately picking at its massive, pointy teeth with a clawed fingernail. \n\nIt was enormous from this close, and a stench, worse than the rest of the Deep Roads, emanated from where it stood. It was wearing scavenged bits of armour almost at random; it had a massive sheet of studded metal wrapped around one forearm, and I wondered, as I stared at it, if it had once been a leg plate from a set of plate armour. It had a leather belt around its waist, another strip of leather wrapped around one shoulder like a bandolier, and some bits of metal wrapped around its powerful bicep and calves. As with most darkspawn, it wore a tattered wrap of cloth around its middle, hiding whatever passed for private parts from view, for which I was grateful.\n\nIt took me a moment to note that, beside the ogre, there was a hurlock, and they appeared to be actually talking. I blinked and looked again. The hurlock wore a sheet of chain links over his head like a hood, a thick leather cloak around his shoulders, and a set of apparently well-made chainmail covered the rest of him. His voice was guttural, as he spoke to the enormous ogre, but I couldn't mistake that the words were in English. Common.\n\n\"...the Father demanded. Be leaving the tainted ones to us. We will be sending the signal, and then, destroy all. Yes?\"\n\nThe ogre grunted, and to my horror, nodded like a person would, before turning away and reaching a lazy hand into a pile of refuse behind him, pulling out a lump of flesh \u2013 darkspawn, by the blackened corruption \u2013 and beginning to chew on it noisily. At least it didn't speak. I wasn't sure I wouldn't have run away screaming in horror if it turned out the ogre was one of the Architect's 'Disciples'. Hopefully even that psychopath sees the problem with 'liberating' ogres. The hurlock, who I'd realised must have been 'the Withered' from the start of Awakenings, turned away with a look that would have been disgust if a person had worn it, and walked toward the clump of hurlocks I'd seen earlier, growling something unintelligible.\n\nStartled from my horrified fascination with the talking darkspawn, I went the opposite way, hurrying to the back of the room and the next hallway beyond it. There were fewer darkspawn there, and these seemed less disciplined somehow; two of them fought each other over what looked like some damaged leather armour, while the others scratched themselves, laid on the floor apparently sleeping, or just stood around looking bored. \n\nI froze. Beyond them, clearly visible, was a large ring of metal surrounding the corridor entirely. I almost cheered out loud. The door! I couldn't see the mechanism from where I stood, so I inched closer to see if I could step through. There was a genlock lounging nearby, oblivious to the purpose of the enormous metal structure he was leaning against and to my presence; I held my breath and edged past him, so close he could have touched me without sitting up.\n\nNothing happened. I snuck through the door, and the darkspawn continued to ignore my presence. I breathed a sigh of relief when I reached the other side and could see the entire door mechanism. There were no more darkspawn in sight, so I spent a few minutes examining the huge apparatus.\n\nI was no expert on dwarven machinery, but it didn't look good. There were pieces that I was sure should have been attached together that weren't, and bits of thick wire sticking out at odd angles. The entire door looked somewhat crooked. Whatever was wrong with it, I wasn't going to be able to fix it.\n\nI swore silently. I'd had visions of being able to close the door myself, cutting off the darkspawn on the other side from their reinforcements. Clenching my teeth in irritation at Rendon Howe \u2013 what sort of irresponsible ass left an open Deep Roads entrance in their basement? \u2013 I turned to go back, but changed my mind and instead went further in. I need to know how many more darkspawn are waiting down here.\n\nThe corridor where the barrier door sat was around a steep corner from whatever lay beyond, and I crept up to the edge, peering beyond. It was dark, more so than most of the Deep Roads, as no lava flowed through. I could tell, by the sound and the way the air felt, that I'd come across a vast chamber, no narrow hallway. The walls of the corridor had been smooth stone, but as far as I could see from where I stood, the cavern was rough-hewn and irregular. I wondered if it had been carved by dwarves or enlarged by darkspawn.\n\nI waited for my eyes to adjust to the dim light; there were specks of brighter light in the distance that, as my vision sharpened, became obvious as campfires. And there were at least a dozen of them spread out for hundreds of feet in front of me. I didn't know how many darkspawn gathered by each fire, but even if there were only a handful, there were more darkspawn than the Vigil could manage to fight off. The sounds echoing around the cavern made it seem worse than it was, I assumed, but the cacophony made my blood freeze.\n\nMaker's breath, there could be hundreds of them."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-121-122"
}