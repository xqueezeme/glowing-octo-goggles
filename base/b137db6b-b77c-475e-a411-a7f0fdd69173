{
    "title": "The Idiot, the Farmer and Me Ch. 03",
    "pages": [
        "Despite my warnings Brian and Carl were now walking around the Sussex Countryside that warm Wednesday afternoon, particularly two small villages Gwyn had apparently mentioned 'Ed's Uncle' living near and they walked about looking for 'a teacher' - Thank God they never found one. \n\nThe neighbouring farmer had described 'dumb and dumber' so well, recognising but no overly worried by the slightly threatening demeanour of the pair of them, saying that to his certain knowledge there were no schoolteachers that lived locally and suggested that perhaps the pair might want to contact the police if they were struggling to find a friend. \n\nHe went on to say that rural and agricultural thefts are a huge problem and stock, equipment and vehicles were often stolen to order overnight and the pair might find themselves on the wrong end of a shotgun or several guard dogs if they just strolled around peoples' farms like they owned them.\n\nBrian saw the sense but Carl considered it a challenge and wasn't having that from 'no fuckin' Farmer Giles' and if he wanted to look round he fuckin' would, looking contemptuously at the farmer and walking straight past him.\n\nAs he manfully swung open a large barn door he was to learn that this was actually 'a byre', when he was confronted by its occupant, a rather large and slightly irate Dexter bull that wasn't happy to have the thick-necked and thick skulled London wannabe villain around the place and disturbing his peace, walking behind him with increasing speed until there was a fence Carl could jump to put between it and him.\n\n\"See what I mean?\" said the Farmer, \"Now you get back in your car and bugger off before someone gets really hurt.\"\n\nStill seeing the sense of the farmer's advice, Brian pulled Carl by his jacket collar, hearing his semi-brave son still grumbling an almost silent \"I ain't havin' that from no fuckin' Farmer Giles...\"\n\n\"Ain't the fuckin' farmer,\" said Brian, \"it's that fuckin' steak an' kidney on legs boy...\"\n\nIt turns out that they did drive up to Dave's farm but the gate was locked and they didn't find anyone to talk to and ask. so their tiny little minds decided that there was nothing else for them to check - probably. \n\nThey went to the first of two pubs in the village and bought their beer and sandwiches, Carl getting rather annoyed that this 'afternoon country pub', only staying open for him and his Dad didn't have the kind of menu he was accustomed to in the big city and was keen to point out this shortcoming to the landlord.\n\nThe barman said that it was a weekday afternoon, they had no chef and if they wanted to come back later that evening, he was sure they could help.\n\nCarl took this as 'cheek' and was leaning across the bar, pointing his finger into the face of a man twice his age, telling him not to give him 'lip'.\n\nThis barman apologised somewhat nervously and stepped around the back, staring through a spy hole at Carl's increasing anger at the fruit machine having three of his pound coins and not paying out a similar amount. The Barman picked up his phone and dialled 999 as the thug angrily slapped the machine for a fourth time and called it some very nasty names before kicking it with his heavy boot.\n\nThe barman stepped back into line of sight, rang the bell and called;\n\n\"time at the bar gentlemen!\" ready to run out of the back door if the huge skinhead in the Timberland boots started to kick off.\n\nAs it turned out this was precisely the thing to do and the two oafs stood, finished their beer and both stepped out into the car park. \n\nIf he'd asked them to leave Carl would have reacted very badly and carnage may have ensued, but the Brains Trust acted on pure acoustic reflex and left without a grumble or word to the landlord. \n\nBy the time the police officer arrived she saw their car pulling away from the pub car park and managed to write down the registration number. A check of the computer would show that it had the registration plates of another Ford Focus the same colour that had been stolen from a railway station car park in London three days before.\n\nThe officer calmed down the barman and took a full report, noting that these two were looking for a teacher farmer, same as the ones up the road that had been stomping over half a dozen different farm yards that morning.\n\nDumb and Dumber were really throwing themselves into this search to discover Dave's name and where he lived. The stupid thing was that the Idiot Ex knew it was Ed's Uncle and had signed the church register a few weeks before next to his daughter and under her new father-in-law. \n\nEd had the same surname as his 'Uncle Dave' of course but the Idiot was too fucking thick to realise it and never would all the time his arse pointed downwards. More than that when his henchmen ACTUALLY MET the so-far nameless 'fuckin'-schoolteacher-fuckin'-farmer' face to face at the hotel entrance while the Idiot was across the hotel and pretty much shitfaced would have barely known his own name let alone someone that was arguing with his specially selected bouncers.\n\nWhile Dave was unconcerned, I was straight on the phone to the Idiot Ex demanding to know why his best mate and son were in the Sussex countryside and looking for someone I'd had a drink and a dance with.\n\n\"Dunno wot yah tawkin' 'abaht Sammy!\" said The Idiot Ex with an edge to his voice that told me that he was laughing and very pleased with himself.\n\n\"Brian and Carl have been driving around the countryside stirring up the locals,\" I said, \"you will make them stop Les or so help me...\"\n\n\"I promised I won't gonna come anywhere near yah, din' I Sammy, I promised you that 'din I? Right or Wrong?\" \n\n\"Not even a good try dickhead,\" I snapped back at him.\n\n\"Nah nah nah Samam'fa,\" I could all but hear him wiping his nose with the back of his hand in self-righteous glory, \"You doan' get it all fuckin' ways sweet'eart, I ain't bin nowhere near YOU, 'ave I? 'Ave I? Right or wrong Sammy? Right or wrong!\" he guffawed ending with a braying laugh of triumph.\n\n\"You know what I mean Les,\" I said not wanting to play him at this stupid game of his.\n\n\"Like I said to Brian, I ain't 'avin no wife o'MINE...\"\n\n\"I'M NOT YOUR FUCKING WIFE!\"\n\n\"LISTEN SAMMY! Jus' fuckin' LISTEN!\" he took a deep breath to calm his perfectly reasonable anger, \"word is 'aht on the street that you's fuckin' 'arahnd with some country school teaching cunt wot you met at Bella's weddin'.\"\n\n\"And what if I am?\"\n\n\"I ain't bein' made to look like no twat in front of my own mates, I ain't 'avin no one tawkin' abaht me behind me back 'cos you're putting it abaht.\" He said with some feeling of threatening self-righteousness.\n\n\"Now that's a bit strange Les, when we WERE actually married and you were fucking one woman in eleven at the club,\" he actually did, I did the sums to prove it when I took my first accountancy course two years after, \"you weren't too worried for people to talk behind your back, or was that different?\"\n\n\"Well...\" he struggled for a reply settling on... well, nothing, \"Well... I ain't talking about that, that's 'istory, this is now... innit.\" Again I could almost hear the pride in his conclusion. \n\n\"Excellent Les, we're finally talking sense; you were screwing all of those women... what? Seventeen, eighteen years ago?\"\n\nHe paused,\n\n\"Well... yeah...\"\n\n\"And you say that's history?\"\n\n\"Yeah.\" The rising intonation in his voice told me he was losing his new confidence. \n\n\"And we were divorced fifteen years ago.\" I added.\n\nI heard his breath,\n\n\"Yeah...\" he coughed, \"but thas' diff'ren'!\"\n\n\"How?\"\n\nI heard him snort through his nose,\n\n\"It jus' fuckin' is... Now just you fuckin' listen,\" he snarled, \"I'm fuckin' done wiv' all this shit; I found out enough from Bella's muver'-in-lore about this fuckin'-farmer-fuckin'-teacher what you bin' seein'... Twat could'n even 'git to yah dorter's weddin' on time!\" \n\nI froze, I hoped he wouldn't make the connection between the absent uncle Gwyn had snarled about and the argument at the door Brian and Carl had gotten arrested over. In a flash I figured I would just bluster my way through this - just like he would.\n\n\"Really? You know all that but not where his farm is apparently?\"\n\n\"I'll fuckin' find it,\" he hissed, \"nah' wouldn't it be a bastard if 'is barn went up in flames or some of his sheep went missin' ah? We could do wiv' a bit of mutton down 'ere on the manor...\" he let that hang - so I did too, \"Ello?\"\n\n\"Oh, you're back, sorry I drifted off for a moment there - so we're back to your manor then Les.\"\n\n\"Yeah.\" He growled.\n\n\"Right,\" I said leaving the conversation hanging yet again. \"On your manor, right?\"\n\n\"Right.\" I was sure I could detect a hint of pride in his ownership.\n\n\"I live forty odd miles from your manor?\"\n\n\"'bout that,\" he replied.\n\n\"And none of your mates came to Izzy's wedding did they.\"\n\n\"Only Brian and Carl to do the door... and the fuckin' pigs woz bang out of order when they took his...\"\n\n\"But none of your other mates, the ones that are talking about you, were there?\"\n\n\"Wot you gettin' at?\" he sighed like I was taking up his very valuable time.\n\n\"So if 'people' are talking behind your back about me shagging the landed gentry it can only be because you fucking told them I was Dickhead!\" I snapped.\n\n\"Aaah well... Brian and Carl...\"\n\n\"...Were dropped off at the railway station at seven thirty after they started a bloody fight - just what you need YOUR best mates to do at your OWN daughter's wedding!\" My turn to throw that in.\n\n\"Yeah... well... fuckin' gate crasher an' 'is kid wot woz 'avin it a bit large wiv' Carl, the lad 'ad to defend himself din' he? Good job they woz there I 'fink, they woz propa' set up for tha...\"\n\nI managed to stop myself laughing when tall but cute eleven-year-old Chrissie was described as 'attacking' the Cro-Magnon Carl, but more importantly the Idiot had still not made the connection to one of the two interlopers being the missing school teacher farmer I'd been seen dancing with.\n\n\"And they were out of the party by five thirty and in the local Police station,\" I interrupted, leaving off 'with the guy that is a thousand times the man you could ever be and has taken me to paradise more times than you took me shopping', but I needed to get back to my advocacy, \"So I'm guessing you must have told them as well?\"\n\n\"Yeah... nah... well...\"\n\n\"So the first lesson here is that YOU need to keep your mouth shut...\"\n\nI started to calm down now. The more I thought about it the more I realised that the Idiot hadn't seen Dave at all. He knew that the man I'd danced with was 'Ed's Uncle' and what he did for a living and roughly where he had to drive to the church and the hotel from, nothing more - he hadn't made it into the event having been taken off by the police to answer for the scuffle outside the hotel. \n\nBy the time a much calmer Dave had eventually arrived the Idiot was snoring off the brandies he'd been putting away since he'd first opened the mini-bar in the hotel room that morning. \n\nBecause of him oversleeping in his hung-over stupor the next morning, Dave and Chrissie had already left before the Idiot eventually appeared, like a foul-mouthed and foul-breathed powder blue elderly prom-nighter.\n\nI knew that eventually he would get back to the fact that his sister and her kids had watched me dance with Dave, then Izzy, Julia and Amy taking the piss out of us, and it would prove an excellent distraction.\n\nI'd always got on well with his sister Fay and she appeared to bear me no ill will despite her mother's instructions, but it must have been them that reported it to him then told on him to pay him back.\n\nGetting back at 'embarrassing Uncle Les' that had kicked off in the hotel reception that Sunday morning and the 'guilty by association' his law abiding nieces and nephews felt; at Uncle Les in his shitty suit with his gut hanging out, at Uncle Les and his embarrassing speech and pissed bimbling around the wedding reception making his family want to hide and pretend to friends of the bride.\n\nThey may even have told his evil witch of a mother, the one that had banned them from going in the first place and who they ignored. I could well believe my niece Kris talking loudly about what a really nice bloke Auntie Sammy was dancing with once Uncle Les had passed out cold because he drank too much. \n\nFired with a Samantha-burning hatred Ex-mother-in-law would have spread it across as much of the neighbourhood as she could reach from the pensioner's flat the council had put her in after his Dad had died, two bus rides away from her Mafioso son, Don Leslie l'idiota on his 'manor'.\n\nAfter a pause he finally got there and made the connection - I could almost hear his brain working.\n\n\"Ahh!\" he said in triumph, \"Fay and the kids 'woz there!\"\n\n\"Oooh! So NOW you're saying it's your own sister and her kids that's creating all of this shit about you then?\" I paused for emphasis, after all it probably was, \"Shall I tell her that she's causing you problems around your manor or are you going to do that?\"\n\n\"Aaah,\" he took a breath, \"well... well I'm not sayin' it is or it 'int but the fac' of the matter iiiis...\" he prepared himself for the big finish, the d\u00e9nouement, the killer blow; for maximum annoyance I waited for him to take and breath and I interrupted him yet again.\n\n\"Les, I couldn't give a single flying fuck about you or that someone is talking about me on your manor, not one. I doubt the entire estate seriously cares two shits about what a woman that moved out fifteen years ago is getting up to; but I do think they might like taking the piss out of you!\" my turn to crow now, \"which I think you'll agree says more about what they think of you than they do of me,\" I grinned evilly, \"Right or wrong Les, come on, right or wrong?\"\n\n\"Oooh... fuck off you bitch,\" he said.\n\n\"I will if you will Les,\" he could hear the laughter in my voice and he hated that.\n\n\"I'll find this cunt,\" he snarled, \"and I'll fuckin 'ave 'im! You mark my words Sammy, I'll fuckin' burn 'im!\"\n\n\"Burn him?\" I said, feeling just a tiny bit concerned now but something Izzy had told me a few years back came back to me just in time, \"that's a dangerous thing to say Les... you still living in that flat over Peachy Reynolds garage?\" I asked innocently. \n\n\"Yeah, what if I am?\"\n\n\"No reason Les, No reason,\" I let the tension build a bit more, \"Peachy keeps that big old tank full of recovered petrol in his lock up round the back, with his oil and the spare paint doesn't he.\"\n\nThe Idiot Ex went quiet,\n\n\"I... I dunno...\" he said.\n\n\"It's under the stairs you use to get up to your place, your fire escape; Izzy told me you didn't want her to report it to the Fire Brigade.\"\n\nHe came back much quicker,\n\n\"Why d'you wanna know, whadda' fuck's it gotta do wiv' you?\"\n\n\"Nothing for you to worry about Les, but remember this my dear Ex-husband, my name is Samantha Haymer.\" I said, and holding my hand over the disconnect button I remembered those words that a young Mike had used to my Dad, \"what goes around... comes around - especially burning. Now where's my lighter - oh yeah, here it is.\" I didn't have one of course but this was for effect, \"just you sleep well Les, very VERY well...\"\n\nI cut the call and then switched off the phone, contacting Dave via Messenger on my laptop and telling him about my conversation with Les and the very veiled threat I'd used after his.\n\nMore importantly I copied in my brother.\n\nMike did lots of work in the pub trade doing builds, rebuilds and refurbs and within twenty minutes was e-mailing me and Dave photos of Brian and Carl from the Licensed Victuallers Association 'Pubwatch' group, from posters of people that are banned from certain pubs and chains because of crimes they had committed or their attitudes when drunk.\n\nDave sent it on to the local police team saying he got the poster from a landlord friend of his in London, innocently pointing out that these men were the ones that had assaulted his son and had been seen for the last few days wandering around farms, refusing to leave and asking questions about a 'school teacher' and generally acting very suspiciously. His neighbour had told the police before he told Dave after all.\n\nThey read the file with the gruesome twosome's recent activities that day on farms, in a pub, probably driving a car with stolen plates. This went nicely with Brian having had a bent van impounded and crushed some weeks before, a couple of hours after Carl had been released with a police caution for assaulting a young local boy in a country house hotel miles away, and that they were now in the locality looking for that boy's father - it wasn't that complicated.\n\nSussex police contacted the Met saying that Brian and Carl Lind had been seen acting suspiciously on private land asking questions about and being extremely confrontational, and emailed a copy of a court order they'd got from the local magistrates and would like hand delivered.\n\nThat evening and miles away in London, a very surprised Brian and Carl were each given the order from Sussex Police citing what they had been seen doing in far off Sussex and the threatening way they had acted towards Dave's neighbour and a pub landlord, and it banned them from walking around any farmland without permission within three parishes, six Sussex pubs, adding that any repeats of their behaviour would be a criminal offence for which they could be arrested.\n\nThis was a new one to the pair and they sat staring at it and it's import all the next day. Pretty pointless really as it was written in legal speak and they struggled with take-away menus. The Idiot Ex rang them that night asking how they'd got on, still burning from the argument I'd just had with him and my simple refusal to see sense.\n\nBrian told the Idiot about the court order.\n\n\"It's prob'ley nuffink mate,\" said the Idiot, after all it wasn't him that would get in the shit if it was breached, \"We still got find this school teacher 'int we.\"\n\n\"Yeah,\" said Brian.\n\nAnd that was that. Despite the very, very simple and very, very explicit written warnings they'd been handed AND had then had read to them by their own local copper who had even translated the meaning of the words into something that even the gruesome twosome could understand, they arrived back at the small village a second time in a different car that Carl had clearly borrowed with a screwdriver early that Friday morning.\n\nThey arrived in the village and walked in the open front door of the other pub local to Dave's place, not liking the other one which only had sandwiches two days before. \n\nThis was the one where Dave and I had dinner and breakfast some weeks before, and the door was only open because it was having it's morning deliveries. \n\nThe two thug townies, fully expecting it to be open at ten in the morning like the ones in their high street would have been, entered and demanded a full English breakfast and asking if she knew of 'a farmer 'wot was a school teacher wot lived round 'ere.' \n\nThe landlady recognised them straight away from the poster that she had printed from the computer not ten minutes before. This barkeep was made of sterner stuff than her competitor at the other end of the village and with a big smile told them to take a seat, made them two teas then headed into the kitchen and dialled 999. \n\nBrian and Carl were on their second cup of tea - the landlady said she was 'sorting out the grill' - when the front door opened and eight of the biggest coppers the gruesome twosome had ever seen, all dressed in riot gear filled the small lounge bar and arrested them both for breaching the court order and loaded them into their van.\n\nAt the city station the Police National Computer said that Carl was already on a two year suspended sentence for an aggravated assault months before, so the police officers added the police caution for assaulting a young boy two weeks before and took him straight to the local magistrates court where the District Judge heard the case straight away and sent him back to prison to complete his sentence with an extra 28 days for breaching the notice. Carl stood and stepped down the steps to the cells beneath with the two police officers as if it was just part of life, which for him it was.",
        "Brian stood up from the gallery and complained loudly that the Judge should have remanded him on bail for reports and stuff like they always did, should'a given him a tag like, then pointed out that this wasn't right, wasn't fair and this was 'ginst 'is boy's 'uman rights. \n\nThe Judge suggested that Brian sat down and left the legal decisions to her, but Brian wasn't having any of that and demanded justice, calling the Judge a racist 'seein' as how him and his son 'woz gypsies'.\n\nThat was shit of course, Brian was Londoner through and through and for many generations, but like many of his kind he would throw it in for threat, drama or sympathy as necessary. He was told to sit down again.\n\nHe didn't and made certain just-loud-enough insulting remarks and 'blah blah blah' hand gestures that the Judge took offence to. In a high turn-over London court room like the ones the demon duo were used to, the District Judge would have pretended not to notice but this was sleepy Sussex and just to show exactly how committed she was to the British criminal justice system the Judge gave Brian 14 days imprisonment for contempt of her court and a further 28 for his failure to comply with the court order he'd already accepted a fixed penalty notice for. Brian, unlike his son, complained and struggled all the way as the two police officers escorted him to the cells.\n\nThat afternoon Dave came to my house to tell me the news that had spread around the area like wildfire, and was laughing all over his face as I made him tea in my small kitchen, still in readiness for me to drive to his farm that evening.\n\n\"But we only got the pictures the day before yesterday!\" I said, sitting next to him with tea.\n\n\"Truth will out Sam,\" he said leaning in to kiss me. \n\nI kissed him back delighted to be in his lovely company again. He saw my smile and kissed me again leaning back into the sofa and pulling me onto his lap where we had the most fantastic kiss and cuddle session for a good twenty minutes, first time ever in this house.\n\nDave had one hand up my short denim skirt and had already pulled off my panties, and undone my blouse and freed my boobs with the other and was already sucking and biting my nipples and frigging me as if it was to save his life. Much as I loved what he was doing and was well on my way to my first orgasm I wanted to drag him to my bedroom to get really comfortable and have another first there - to make love in MY bedroom.\n\nAs I rolled my head to one side to both give him kissing access to my neck and also suggest my bedroom, I heard the sound of a key in my front door and it swinging open down the short corridor and Izzy shouting,\n\n\"Hi Mum! It's us, are you decent?\"\n\nA laughing Dave had already stuffed my tiny knickers in his jeans pocket, while I pulled my open blouse across my bare tits and tried desperately to straighten out my undone bra and fasten buttons.\n\n\"Oh!\" said Izzy pausing in the doorway as Dave and I rearranged ourselves, me still sat on his lap and pulling my skirt level to cover over what he had so recently been playing with, \"one moment Babes,\" she said to Ed pushing him back into the hallway for a moment.\n\nI stood and straightened everything, pulling off my bra through my short shirt sleeves in that way that most intrigues men, stuffing it down the side of the sofa cushion.\n\n\"OK honey,\" I said, feeling outrageously naughty and ready to meet my daughter and son-in-law dressed but minus underwear.\n\n\"Well hello Uncle Dave!\" she said with a big smile.\n\n\"Dave!\" Ed added in a similar greeting.\n\n\"Hiya mate!\" he said, \"Hiya Izzy, you both look great!\"\n\n\"So do you!\" said Izzy noticing my clothes in disarray if not actually missing, my red cheeks, my hair half down and her husband's much-loved uncle next to me with a hint of a wicked smile on his face.\n\n\"I'll get the tea!\" said Dave. He told me later that the last thing he wanted to do was take anyone's hand with his fingers still wet from my pussy!\n\nEd sat on one armchair while Izzy plonked herself in her other, the most mischievous look on her face.\n\n\"Soooo...\" she said letting it hang in the air, \"you two have been... err... getting to know each other then?\"\n\n\"Bloody hell Iz,\" said Dave returning with a tray with a sugar basin, a plate of biscuits and some spoons which he must have found by searching because I'd never shown him, \"your Mum is gorgeous, can you blame me?\" it was the perfect interruption and my lovely Izzy just beamed her happiness across to me, her face illuminated by her big smile I loved so much. \n\n\"Did you have a good trip darlings?\" I said, hearing the kettle click and the water being poured. I'd already heard him washing his hands!\n\n\"It was great Sam,\" said Ed, watching his wife's face as she couldn't stop smiling.\n\n\"It was really great Mum,\" she said with a chuckle, \"have a great tan. You've topped up yours I see,\" she was looking at my brown legs, chest and arms.\n\n\"Yes,\" I said, \"a couple of days by Uncle Dave's pool.\"\n\n\"It's fantastic isn't it,\" said Ed coming to the rescue, \"most refreshing swim ever, Julia and I both learned to swim there.\"\n\n\"I remember it well!\" said Dave returning with the tray and four mugs of tea, \"time to arrange another Barbecue Ed!\"\n\nAnd that was that; we drank our tea, ate biscuits while Ed and Dave regaled us with stories of their past and the fun to be had on Orchard Meadow Farm, not the sort of fun that I'd had there of course.\n\nAfter an hour Dave said that seeing as it was a Friday evening and none of us had eaten, he would go and get takeout food for us all, indicating to Ed to come with him.\n\nThe second the door clunked closed Izzy was next to me and holding my hands, her face beaming at me.\n\n\"So tell me about him!\" she all but bounced on the sofa just like she had when she was younger, \"you obviously went skinny dipping with him!\" \n\n\"What?\"\n\n\"You own one bikini and one swimsuit Mummy, and I had both of them with me in Cancun!\"\n\nI laughed and let down my guard a bit.\n\n\"Oh Baby girl, he's soooo lovely!\" I said with a long-held sigh.\n\n\"And you're quite close I see!\" she said stroking my shoulder where my bra strap should have been.\n\nI let my guard down completely.\n\n\"Guilty,\" I said pulling my bra from the cushion and holding it up, \"I'm not completely sure where the matching panties have gone!\"\n\n\"Oh Mum!\" she burst out hugging me, not in shock or disgust but in total joy, \"I'm so happy for you!\"\n\n\"You are? Really?\" I said.\n\n\"YES!\" she burst out again, \"I've been hoping for years that you'd find a nice bloke, and bloody hell but you've found one of the nicest!\" She hugged me again in delight wiping her eyes, \"There,\" she said, \"you can put your bra back on while our men are out.\"\n\nI did, and recounted what happened after she left for her honeymoon; dancing with Dave, then him and Chrissie staying in my room, breakfast, his phone number and a stolen kiss, dinner a few nights later and kissing and petting in his car then staying at his place the next weekend and a couple of nights since.\n\n\"Oh Mum!\" said my Darling daughter, with tears in her eyes again, \"I'm so pleased for you!\"\n\n\"So am I Baby,\" I said, \"Your father isn't mind you...\"\n\n\"What... now...\" she growled slowly, her face losing its glow.\n\nI told her about Brian and Carl out in Sussex looking for the farmer-teacher, Uncle Mike turning up the pictures two nights before, emails and court orders and their arrest and Carl's imprisonment for at least eight months and Brian's for forty two days.\n\nShe laughed softly at that,\n\n\"Mum, I'm going to fucking kill him honest!\" she closed her eyes and shook her head, \"He's not bothered with us for bloody years, WHY does he feel the need to constantly try to fuck things up NOW!\"\n\n\"Who?\" said Ed as he stepped into the hallway.\n\n\"MY... FUCKING... DAD...,\" she snarled. She stopped and sniffed, \"Ooh curry! Knew there was a reason I married you,\" she said softly and suggestively.\n\nWe sat down with trays on our laps and had the most splendid Indian food, chosen with care by 'our men'.\n\nWe ate and laughed, and Ed came up with a date for a Barbecue at the farm and called his Mum who was as glad to hear from him as I had been to hear from Izzy, and the date was set. I could also hear that she seemed a bit pleased that Uncle Dave was with us, I think she'd guessed why.\n\nAt a bit before midnight we all started to yawn and I made it pretty evident that Dave was staying with me. We all kissed goodnight, and made our farewells finishing with Izzy whispering not too quietly to Dave that Mum really needed her panties back as they were a matching set.\n\nWithout so much as a missed breath he pulled them from his pocket,\n\n\"Sorry Sam, sure I would have remembered eventually,\" and handed them to me. That was that, no elephant in the room or embarrassed words not spoken.\n\nI took Dave to my bed and stripped naked for him, and we made love until almost 2AM, with countless orgasms for me before he eventually joined me and had his, and we fell asleep.\n\nWe woke up at silly o'clock the next morning, as he slipped into me from behind like he had done every morning I'd woken up with him. I fell back to sleep for a bit afterwards, waking with my alarm to a mug of tea and a freshly showered Dave, my amazing lover.\n\nWe went back to the farm in two cars and arrived in time for me to make lunch for Chrissie who had been helping Grampy John with the animals. He gave me a big smile and an even bigger hug when I got there.\n\n\"Hey Sammy!\" he said with a big grin, \"I'm glad you're back, I hardly got to see you last weekend!\"\n\n\"No problem Chrissie Darling,\" I said, \"I'll be here until Monday morning when I have to go back to work!\"\n\n\"Are you staying for dinner?\" he said, \"Grampy John and Dad try their best but their Sunday lunches aren't...\" he took a breath and lowered his voice, \"Aren't as good as when a lady cooks dinner.\"\n\n\"Oh Baby!\" I said slipping an arm around his shoulder and whispering back to him, \"I'll cook all weekend for you I promise!\"\n\nHe grinned and put an arm around my waist and hugged me. It was just the cutest thing ever.\n\nAs promised I stayed and helped around the farm all day and having got my bikini back from Izzy jumped in the pool and splashed around with Dave and Chrissie until it was time for tea and I cooked a huge pile of a special recipe of sausages that were made by a local butcher using all ingredients from Dave's farm. They were wonderful and I cooked a huge pile of mashed potatoes to go with them using some vegetables that Chrissie picked that very afternoon from one of the polytunnels.\n\nWe had a night sat in the garden around the firepit chatting about life, the farm, the swimming pool, what GCSE's Chrissie was going to study when he started at secondary school that September, if he was going to go to University and what he might study. He had met my Izzy some time before at family parties and was impressed that she was a medical professional like his big sister. There was no doubt that he was going to go on to higher education like his Dad, Mum and big sister. He went to bed and kissed me goodnight just before and was soon followed by John who slept in the spare room.\n\nDave told me that although it was technically the 'spare room' it was Grampy John's room really and the old boy slept there three, four, sometimes five nights a week, going back to his nearby cottage, now lifeless after the death of his wife 'Nanny Emily' who had never really recovered from the death of her daughter Paula five years before and had died eighteen months afterwards according to those that knew her, from a broken heart. \n\nThey had all spoke fondly of Nanny Emily and Mummy Paula with the occasional wistful stare, but never once did I feel that I was intruding.\n\nSoon it was bedtime again and in Dave's room I stripped naked just as I always did, thinking that perhaps with their joint recollections the last thing he would want to do was make love. So we just cuddled, then we kissed, then the kissing just got better and better and soon we was rolling over me and we were making love strongly and passionately, one of our best sessions ever.\n\nNext morning I woke to him spooning me and I felt his erection slipping into me, again!\n\nIt was so wonderful and I have to admit that it was the only way I really liked to wake up these days. \n\nI slept so well and so deeply when Dave was there. He didn't snore, he didn't make a big point of farting in bed, he didn't steal all the covers choosing instead to spoon me asleep, his groin pushing into my bottom with his hands holding me intimately, either my hips, my belly or my big tits, the hard nipples extending into his palms as he slowly slid into me, working up the necessary moisture with not a word said - just both of us really enjoying the closeness and the contact with the other, him not stopping until I'd reached orgasm.\n\nSunday was another lazy day and I was up and doing with the rest of the family sorting breakfast, then with a smile at Chrissie asked what he wanted for Sunday lunch.\n\nI cooked a big dinner having discussed it with Dave the night before, roasting a chicken that had been running around the farm the day before, now nestling in a roasting dish with potatoes and parsnips that were dug that day. \n\nParadise.\n\nWe ate strawberries, blackberries, gooseberries and raspberries from the farm with whipped cream from his cows. We sat in the lovely cool garden with everyone heading to their beds as it was a school night, me getting a kiss goodnight from Chrissie.\n\nI stayed that night as well and decided that I was going to be brave and do something I'd read about so often. Dave had gone down on me and sucked and licked me to orgasm quite a few times now, I decided that I was going to return the favour.\n\nI pushed him back and climbed over him and I think he thought I was going to ride him and he grinned. I thought back to the porn I'd read, especially the Australian one, and before I knew it i was sinking lower and and that huge cock that had fucked me so wonderfully so often was at my face. \n\nThe Australian brunette hadn't known what to do either, so with the words I'd read so often in my head I started by putting my mouth over him and just sinking down a few times.\n\n\"Oh Samantha!\" he groaned, and I looked up to him and raised my eyebrows enjoying my power over him and watching his responses to my sucking and mouthing. I licked the bits that my heroine had licked and it had the same response as in the book, with my lover rolling and writhing under me for a change.\n\n\"I've never done this before,\" I said taking a break from mouth-fucking him, looking up his muscular body, just like the Aussie girl had.\n\n\"It really doesn't show,\" he breathed then adding some moments later, \"I'm getting really close Sam,\" he said and I could feel him starting to get up. \n\nI put a hand on his chest and pushed him back down and speeded up my movements, I'd decided he was going to come and my sexy control must have done it for him as within seconds he cried out and the first spurt was hitting the back of my throat, then the second. I let him slip out to feel the next couple hit my face, me still wanking him through his pleasure just like my literary Aussie brunette instructor had done.\n\nI even put it back in my mouth as it softened, hardly noticing the taste of him such was my complete focus on his pleasure.\n\n\"Was that OK?\" I said lazily grinning at him and giving him the occasional lick across his helmet, loving the flinch he gave when I hit the right spot.\n\n\"OK?\" he said, \"That was fucking amazing!\"\n\n\"I read how to do it in a book,\" I said, \"I was just waiting for the right rancher to come along.\"\n\nHe reached into his bedside table for some tissues that he handed to me, waiting until I was level with him and dabbing at the spat of his semen on the front of my hair.\n\n\"Only fair I reciprocate,\" he said, french-kissing the mouth he'd come into moments before.\n\n\"Oh yeah,\" I said rolling onto my back and parting my thighs, \"Please, be my guest.\"\n\nLaying back against the headboard I put my hands behind my head so I could watch him, and felt so amazingly brazen! That lasted a few minutes until he was all but chewing on my so sensitive clitoris an I rolled into my first orgasm, then the next, then the next, then... WOW!\n\nI woke the next morning to that wonderful cock of his spearing into me from behind again, and much as new brazen Samantha wanted desperately to push him on his back and ride him, I just lay there in wonderful silence feeling him do his magic and loving ever fucking second, his fingers reaching round to my still sensitive clitoris and bringing me of yet again until he lost himself deep in me.\n\nWe kissed and cuddled, until he dragged himself out of my arms and to his labours, my very own handsome hot rancher!\n\nI showered, made him some breakfast and kissed him, Chrissie and John before I headed off to work. It was really hard, fuck but i was in love with this guy!\n\n\"Not again!\" shouted Den from the other end of the old school hall that we occupied as our playschool.\n\n\"What?\" I said smiling, knowing exactly what she meant, and much as I'd tried to hide it, my 'just shagged shimmy' was evident. I grinned, \"all weekend Babes,\" I said, \"Friday night we were just getting down to it when Izzy and Ed called in,\" I blushed, \"Most embarrassing! Dave had undone my blouse and my bra and pulled off my panties. Fortunately I still had my skirt on!\"\n\n\"You lucky bitch!\" she said with a smile, \"and afterwards?\"\n\nI stifled a yawn,\n\n\"Played with me and screwed me until two in the morning,\" I said, \"to his place Saturday, he had me again that night, awwwwww it was amaaaaaazing!\" I hugged myself, \"I... I blew him, first time ever - to anyone.\"\n\n\"Sam-my!\" crooned my sister with such a look.\n\n\"And he had me again this morning before I left.\" I felt a little emotional tremble and Denise saw it, coming across to give me a hug.\n\n\"Like I said, lucky bitch!\"\n\n\"You keep looking Den,\" I said hugging her back and being the caring big sister, \"he's out there somewhere Babe.\"\n\n\"I'll do that,\" she replied switching on the office phone and finding we had three messages. \n\nMy shoulders sagged as soon as we heard the voice, that useless, hopeless fucking Idiot could even wreck my wonderful mood by proxy!\n\nThe first, the second, and the third, all him and getting more drunk and angrier as he failed to contact me, annoyed at hearing my voice in the initial message and thinking i was actually there.\n\nThe first call was simply a collection of \"Sammy... Sammy... you there? Fucking... why 'int yah... SAMMY?\" while the second one was more of a realisation that he was talking to a machine and a load of swearing about that and he disconnected. Finally he realised that the machine was his only option and angrily left his third call.\n\n\"Switch your fuckin' phone off will yah? Just 'cos yah turned the bastard off don't mean that we don't have nuffin' to say to each 'uvva! I can still fuckin' find yah see? Yah can't fuckin' hide FROM ME!\" he snarled to the recorder, \"Well I wanna tell yah that I 'int fuckin' scared o'yah - fuckin' Haymer girl or not! An' I definitely 'int scared of that bruvva a'yours nee'vah! Never 'ave bin, never will be!\" He brayed a laugh, \"Ack'chully, I reckon I could prob'ley 'ave 'im,\" there was a slurp as he obviously took a pull of some more fighting beer. \"I'm givin' yah a final warnin'\" he said solemnly, \"FINAL!\" there was a pause and it sounded like he burped, \"You leave this cunt to 'is teachin' and his farmin' and we'll say na'more 'baht it... I'm a fair man Sammy!\" this was followed by a real ripsnorter of a belch and a contented sigh as if he'd realised what a thoroughly decent bloke he was, \"No one can say I in't that; No...\" more wind could be heard, \"you fuck 'im off an' I'm prepared to be the 'bigga man and forget aaaaaall abaaht' it...\" He was obviously going back into a room somewhere as we could hear the sounds of a pub. \"So you ring me Sammy yeah? You ring me an' let me know when luvva' boy is 'istry and we can get back on a sensible footin' can't we...\" there was some chat in the background, \"yeah, nuvva' one o'these please Frank yeah...\" he remembered he was still on the phone to me, \"I'll expec' yah 'cawl tomorra Sammy... TOMMORRA GET ME!?\" He disconnected the call - so brave when talking to a machine!",
        "Den laughed,\n\n\"Oh what a catch Sam!\" she giggled, \"why the hell did you let that one get away?!\"\n\n\"Well you know, I couldn't keep up with him intellectually Den,\" I said with a grin.\n\n\"You going to ring him? He said you had to Babes?\"\n\n\"That's the one reason I don't want to.\"\n\n\"Yeah but you need to ring him straight back and tell him to go fuck himself don't you.\" She pressed save on the machine and little did I know she sent it to Mike's phone with a text telling him that Les wasn't scared of him. That would quite make his day.\n\nI for my part waited until the first coffee break for the adults and play for the children and walked along the edge of the playground that went with our old school.\n\n\"SAMMY!\" came the loud reply, slightly croaky and I guessed that he'd ended up singing either in the pub or on his way back to his flat.\n\n\"Les,\" I said quietly.\n\n\"You called me, good gew'l,\" he said, but I held my anger for a few moments, \"I'm guessin' you ain't rung 'im and told 'im yet, prob'ley want to do that in person...\" he paused to consider that, \"yeah, be fair to the bloke even if 'yah weren't that fair ta' me.\"\n\n\"Oh do fuck off Les, don't kid yourself please,\" I said, \"I'm only ringing to warn you,\" I said. \"Apparently Denise got to the office answer phone before I did and she's already sent a copy of your message to Mike...\" I let that hang for a moment.\n\n\"Wha...\" he caught his breath and coughed, \"What did she do?\" he enquired.\n\n\"The bit when you said that you wasn't scared of my brother and never had been and then you saying you could probably have him, then threatening me of course. Den sent the whole message to him; so... err... if I was you Les I should keep your head down for a bit.\"\n\n\"What? Oh no, I ain't havin' any of that shit,\" he sniffed, \"I've got Brian and Carl on speed dial, your bruvva's a big lad, but Carl 'as got youf' on 'is side plus he's a bit handy wiv' 'is fists!\"\n\n\"Haven't you heard?\" I said adding some dramatic surprise to my tone, \"Carl is inside, he got arrested ten o'clock Friday morning and by three he was residing at Her Majesty's pleasure again and will be for another six months if he behaves himself. So is Brian, he got lifted for contempt when he tried to tell the Magistrate how to do her job, so you won't be seeing him for at least a month either.\"\n\n\"Oh...\" he said.\n\n\"So I still think you should wind your fucking neck in Les,\" It was my turn to raise my voice, \"'Cos if you think for one fucking second that I'm going to stop seeing my new friend just because we were married for seven years fifteen years ago and you don't like it, you can think again! Get me?!\"\n\n\"Now fuckin' hell Sammy...\"\n\n\"What Les, WHAT?!\" I growled, \"Just who the fuck do you think you are huh? We divorced fifteen fucking years ago, I wasn't speaking to you for at least ten of those so what the fuck Les?\" I took a breath, \"why is it you don't take an interest in me or your two children until I decide that I'm finally moving on with my life. I haven't bothered you about what you've been getting up to have I?\" I paused, \"HAVE I?\" there was a quiet 'no' from his end of the line, \"So get this, I will go straight to the police and tell them you've been threatening me or to burn down a certain person's farm.\" I could here him catching his breath, \"Yeah, all recorded for posterity Les! That or I will set Mike loose on you, and your own daughter will hold his jacket for him while he tears you apart.\" I was ready for the close now, \"So now it's YOUR last warning Les, LEAVE ME THE FUCK ALONE! If you don't you will regret it!\"\n\nI disconnected the call, then finally blocked his number. Back in the office we saved the call to the hard drive on the deskphone.\n\nI rang Dave and told him about the call from the Idiot Ex.\n\n\"Don't worry baby!\" he said reassuringly, \"He doesn't know it's me, he doesn't know where I live or anything about me!\"\n\nNothing happened for about two weeks, he was still blocked to my phone and when he rang Izzy to demand to know what was going on, she ripped the shit out of her father for almost ten minutes leaving him a shocked and most apologetic wreck desperate to butt in but unable to.\n\nAs for me, I stayed at Dave's place and he came to mine and it got so that I was hardly ever on my own and the farm was rapidly becoming my home, the most wonderful setting, especially for a city chick like me born and raised in the smoke and unused to open spaces, animals and the dawn chorus.\n\nAs for me, MY dawn chorus was the gentle feeling of an erecting penis pushing against the cleft of my bottom and then up and into my pussy from the rear, hell but I loved it and missed it!\n\nThe Orchard Meadow barbecue that Ed had arranged was soon upon us and as many people as possible were staying over; at the farm, at Grampy John's and even a few camping in tents while John and Chrissie would sleep in the camper van.\n\nMum would miss this one as she was off on her now regular summer coach trip holiday driving around bits of Europe and stopping in hotels and guesthouses, having gotten well used to visiting Mike in Germany, then popping across to Austria, even a flight to Cyprus when he was posted there. \n\nShe was quite the international traveller these days considering she never went anywhere other than the club and the occasional weekend in a holiday camp the Social Services would send us on when Dad was inside for any length of time.\n\nMike and his partner Mel had already been to my house for dinner to meet and get to know Dave. Mike was still quite rough and tough and outdoorsy and took to Dave quite quickly, and after dinner they were discussing country sports, pigeon shooting to be exact.\n\n\"Hell yeah,\" said Dave, \"my two corn fields and my field of peas should've just been harvested by then, I'll lend you a gun!\"\n\n\"No need!\" said Mike almost with a roar, \"I'll bring one of mine!\"\n\n\"What do you have!?\" said Dave, and with no further ado his gorgeous partner Melanie, an ex-soldier like him, and I were both left out of the conversation while our men discussed shotguns and cartridge sizes.\n\nThe upshot of this was that Dave would organise a shooting party at his place starting at silly o'clock on the Saturday, starting with a rough shoot then a huge breakfast, pigeon shooting over decoys during the day, more rough shooting then the huge barbecue in the evening, and cooked game - hopefully - for lunch on the Sunday.\n\nAll was ready, and I left work early on Friday evening bringing Den and her son Rory to meet Izzy and Ed, Mike and Mel and their daughter Charlotte there.\n\nMy Ray, Dave's Amy, Gwen and Paul, and Julia and her boyfriend would arrive there at various times on the Saturday and join in the fun.\n\nWhen we arrived Mike was already there and sat in the garden by the pool, a selection of shotguns around him, Melanie sat with one on her lap, her former career as a military policewoman making her no stranger to that kind of thing, while their daughter Charlotte was already in the pool with Chrissie both laughing and splashing around.\n\nDave was 'at home' and was handing around drinks and talking guns with Mike. Despite their difference in background and employment they had quickly become firm friends and Mike, who had arrived early, had walked the ground they would be shooting over and with both his military and construction background had redesigned and all but rebuilt Dave's hides for the pigeon shooting over two of his three fields the next day and had brought his bag of decoys.\n\nWhen I got there I had a kiss and a hug from two of my three favourite men in the world and Den had just the same. After some tea and some beers Mike suggested we all head for the local pub where the catering would be far less complicated.\n\nWe did so and had a great time, with just the tiniest suspicion of some of our London accents which Dave swiftly put to bed when he introduced Denise the Nursery teacher, Mike, the man that had led to the arrest of the two villains and Mel the City of London Policewoman to the locals. \n\nWith her great body, great looks, not to mention her pretty daughter Charlotte many were surprised that she was in her late thirties. \n\nThen it was back to the farm and an early night for the shooters. Izzy, Mel, Denise, Charlotte and I sat in the warm garden, listening to the trickling of the water and finishing the last of the wine before having hot chocolate.\n\nWe put our mugs into the dishwasher and switched it on and I showed the various ladies to where they were sleeping. Finally, and a bit after midnight I stripped naked sliding into the warm bed and pushing up against my warm man. Dave stirred just a tiny bit and turned in his sleep and pulled me into the loveliest spoons cuddle, just as we did most nights I had slept with him. Hmmmmmm...\n\nHis alarm pinged quietly four hours later and I waited for him to get up. He did, but not in the way I initially thought he might, and as usual there he was with his early morning erection waking me up and spearing me from behind. \n\nAfter his initial thrust there were his hands on my boobs and I put mine over the top of his and leaned back against him to enjoy my now most regular form of lovemaking; it was so sweet and nice and gentle yet still passionate that it brought me to my orgasm and still with tingling loins I fell back to sleep, waking an hour later to use his bathroom and wipe away his early morning gift to me.\n\nAt a little after five thirty I heard the crack-like repeat of shotguns as the boys walked through Dave's assorted woodland and his stubbly fields, taking out a dozen pigeons, a duck, a couple of rabbits and to their joint joy about half a dozen partridges that Dave reckoned were from some adjacent property. That was most of Sunday lunch sorted and soon Grampy John, Dave and Mike had them gutted, cleaned and hanging in the adjacent shed until the next morning.\n\nI got up and had a shower, waking Izzy and then Denise to come and use the facilities in Dave's room. It wasn't until Den thanked me and said how nice 'my' room was that I really thought about it that way.\n\nMel and I cooked a huge breakfast for all concerned and we all took the piss out of our partners, husbands, boyfriends and sons-in-law with Mel throwing in that she had counted them all out and then counted them all back. \n\nWe all sat up to the huge kitchen table and devoured the mountain of breakfast food, and I went around a second time with more when the menfolk arrived, all smelling wonderfully of fresh air and a hint of gunpowder. It was just the nicest family moment and I loved it. \n\nWith the beeping of a horn Dave and the boys were still heads down and tucking into to the food. In a moment of madness I turned to my sister,\n\n\"Den,\" I said looking across at her on her third slice of marmalade toast, \"Pop out and see to Griff won't you?\"\n\n\"Who's Griff?\" she said.\n\nI explained about the cows needing milking and Griff would do everything necessary, but she should pop out and take him a cup of tea and a bacon sandwich. \n\nShe was basically me but three years younger and if Griff's impressed look at me was anything to go by, I was pretty sure that the recent divorced stockman and my hot sister might have a few things in common.\n\nFar from being some giant country bumpkin, Griff was a university-educated agricultural consultant that specialised in bovine and porcine fertility treatments and ran the milking business as a side-line. He owned a farm about the same size as Dave's and was terribly well spoken and although he occasionally looked like an unshaved scarecrow, I knew Denise would be impressed. \n\nShe stood, taking her mug and her toast with her and as she cast a look at me I pulled myself up straight, fluffed my hair and stuck out my tits. \n\nDen saw this, raised her eyebrows, pulled her top straight and down just a touch to improve her cleavage, straightened up and fixed on a smile.\n\nI handed her the mug of tea I'd already poured and put a big sandwich on a plate and she headed out to the yard. She came back in ten minutes later with a request for more tea and a second bacon and egg sandwich and took one from the pile already on the table.\n\nDave had obviously been watching what was going on and shouted across the room.\n\n\"Hey Denny, tell Griff about the barbecue this evening and that he's more than welcome to come along!\"\n\nDen rolled her eyes and smiled, obviously not that upset by the option now she'd seen him. We didn't see her for another forty minutes. Griff was normally a lot quicker than that. \n\nWe made gallons of tea and handed mugs about the now packed kitchen, and those that felt like it got into swimming costumes and headed out to sit in the pool in the glorious sunshine. Around lunchtime Gwyn and Paul arrived and we ate again, thick crusty bread sandwiches of spit-roasted lamb with Dave's own homemade mint or apple sauce, no vegetarian options on Orchard Meadow Farm, mind you I didn't actually know any.\n\nThere was the greatest party atmosphere and we all headed out to the hides for the afternoon shooting with Charlotte, Izzy and Gwyn staying by the pool.\n\nMike and Dave had already been out to set the decoys, with Mike telling young Chrissie the method in it, and with us all dressed in greens, browns or blacks and various amounts and types of camouflaged clothing, particularly Mike and Mel, we set out to the three big hides to take turns in shooting the rest of tomorrows lunch.\n\nWe settled down and waited for the birds to do likewise, and there were whispered discussions between Dave, Paul and Mike over the small radios that my brother had brought with him.\n\nThe pigeons were just starting to circle to land but were spooked by something and Dave groaned. After about three minutes I heard a whispered, \"WHAT THE FUCK?\" come across the radio.\n\n\"Is that who I think it is?\" said Paul on the radio from another corner of the field.\n\n\"I don't fucking believe it,\" said Mike from his radio. There was a pause, \"Fella's? Put your earpieces in and do as I say...\"\n\nI looked up and over the edge of the camouflage and there, who would have fucking believed it, the Idiot Ex himself tiptoeing through the stubble like some kind of cockney poacher, in a direct contrast to our subdued clothing there he was in a white shirt (with tea stains down the front) dark blue jeans with pale big turn-ups, elastic sided boots and black braces, his chin sticking out like it was armour plate and storming through the heather borders with all of the Jacobite zeal of Bonnie Prince Charlie and his merry highlanders; only the Idiot Ex would never have worn 'a fuckin' dress'. \n\nIt seemed that the Idiot had been trying his own detective work now the two stooges were inside, and he'd happened to spot Mike's big Range Rover with his personalised plates parked on Dave's drive.\n\n\"My turn first...\" said Dave, slipping past me and leaving me with his empty and broken shotgun and with a corn stalk in his mouth, his faithful dog Russ trotting next to him he looked every inch the country gent.\n\n\"Good afternoon?\" he said with a big grin.\n\n\"Err...\" said the Idiot Ex as if he hadn't expected to meet a real person out here in the fields, \"'Ello mate,\" he said, \"I'm lookin' for someone...\"\n\n\"Really?\" said Dave, \"this is a recently harvested pea field mate, you won't find anyone out here.\"\n\n\"Yeah... well...\" said the Idiot, \"When I say I'm tryin' to find someone, what I mean is... my mate told me that the bloke I'm lookin' for lives out here somewhere.\"\n\n\"Oh OK, what's your mate's name?\"\n\n\"Who?\"\n\n\"The bloke your mate says lives out here that you're looking for, what's his name?\"\n\n\"Err...\" said the Idiot Ex again, looking up at Dave as if this was the most ridiculous question.\n\n\"If you're looking for someone, you must know their name at least.\"\n\n\"Ee's a schoolteacher...\" said the Idiot.\n\n\"A schoolteacher?\" the Ex nodded, \"No schoolteachers around here mate,\" Dave looked surprised, \"I mean,\" he waved an arm around his fields and the few wooded copses that his family and my family where currently hidden in, almost all of them carrying a shotgun, \"Ain't many classrooms look.\"\n\n\"Nah,\" said the Idiot Ex, a tiny bit conciliatory, \"Nah, I s'pose not.\"\n\n\"Better be on your way then,\" said Dave.\n\n\"Oh, no need for that mate,\" said the Idiot, after all he knew that his Ex wife's brother was here at least, \"I'm just looking for...\"\n\n\"For your mate, whose name you don't know. Yeah, you already said.\" Dave took a long breath, \"Whoever you are, as you can see we've got no classrooms and only a few weeks ago a couple of dodgy boys just like you got arrested for walking across farm yards and asking stupid questions, so are you going to fuck off or do I need to call the police, 'cos you don't look like you know much about peas other than opening the tins they come in, no disrespect mate.\"\n\n\"I just need...\"\n\n\"You just need to get off of my land,\" said Dave, \"As I see it you are trespassing on land that you have no need to be on, RUSS!\" Dave's soppy and quite silly dog came bounding across to him from the myriad interesting smells that the field contained.\n\n\"Oh, no need for that mate,\" said the Idiot Ex raising his hands slightly and doing that half-turn thing that men do to stop a running dog smacking his big nose into their testicles, little realising that the very worst the Black Flatcoat would do would be to jump up and lick the Idiot's face if he sat down.\n\n\"Well fuck off then, there's a good lad.\"\n\n\"But...\" The Idiot knew he was on solid ground, and was really struggling.\n\n\"But what?\"\n\nIt came to him, the diamond geezer's way out of this kind of problem.\n\n\"What if I paid you?\"\n\n\"What for?\" said Dave sounding just the tiniest bit interested now.\n\n\"For information like.\" said the Idiot jiggling his flat hand.\n\n\"What kind of information?\"\n\nThe Idiot Ex smiled; while pea fields, corn, oilseed rape and drainage ditches were new to him, bunging someone a couple of twenties for a bit of gen was right up his street.\n\n\"Weeeell,\" said the Idiot Ex looking around for the police or perhaps the taxman, anyone really, \"My Missus... right?\"\n\n\"Your Missus? Your Missus... what?\"\n\n\"My Missus see, she's fucking around wiv' this schoolteacher...\"\n\n\"Who you don't know,\"\n\n\"Right,\" said the Idiot with a big smile, \"The bitch is chuckin' it in me face see, and that ain't right is it, right or wrong mate, right or wrong?\"\n\n\"That don't sound right at all,\" said Dave, smiling at the big smile the Idiot Ex was giving him, \"You been married long?\"\n\n\"Weell,\" said the Idiot, \"We... we got married almost twen'y-five years ago!\"\n\n\"That long ago!?\" said Dave, \"Wow!\"\n\n\"Yeah, and she's doin' the dirty on me, wiv' this fuckin' schoolteacher from 'rahnd here see.\"\n\n\"Oh that's bang out of order,\" said Dave, \"unless you were divorced of course,\" he giggled at that.\n\n\"Yeah... well...\" said the Idiot Ex playing for time and not answering the question, \"Divorce...\" he paused, \"Well divorce now, divorce don't take account o'love see,\" he looked at Dave with extended arms and look all innocence, \"My Sammy,\" he looked down and took a deep sighing breath, \"She broke my 'eart mate, I tell yah straight...\"\n\n\"Oh mate,\" said Dave resting a hand on his shoulder, \"I'm so sorry, what did she do?\"\n\n\"She was fuckin' uvvah blokes,\" he sniffed, \"Breaks my 'eart to tell yah but I in't gonna lie 'cos I reckon I trust yah.\" He folded his arms, resting them on the belly hanging over his belt and stuck out his Churchillian chin again.\n\nI was fuming - hidden not fifteen feet away in my camouflaged hide, but let Dave do his thing.\n\n\"Oh bloody hell mate, sorry, what's your name?\"\n\n\"Les!\" he said extending a friendly hand.\n\nDave took his hand and shook with a big smile on his face,\n\n\"I'm Dave,\" said Dave, \"this is my farm,\" he swung an arm around, \"all mine, I don't look after it all the time of course, most of the week I'm an architecture lecturer at the local college.\" ",
        "\"Oh right,\" said The Idiot Ex with a wise look, \"so I s'pose you'd know if there woz any schoolteachers 'round here.\"\n\n\"Absolutely,\" said Dave, \"and you and your Sammy aren't divorced then?\"\n\n\"Yeah well,\" said the Idiot Ex, \"I did eventually divorce her, 'specially when she was screwing all the 'uvver blokes like.\"\n\n\"Noooo!\" said Dave dramatically, \"so what does 'your Sammy' look like?\"\n\n\"Oh she's a fit bird alright - for her age,\" I wanted to stand up and shoot him whatever Dave was doing but Mel put a restraining hand on mine! \"she's got really nice tits and a great arse, shame she's puttin' them both 'abaht too much.\"\n\n\"You mentioned that before,\" said Dave, \"I asked for the description, only my Sammy has fantastic tits and a great arse, only she divorced her ex-husband... his name was Les... that's a strange coincidence isn't it!\" Dave grinned manically, \"She divorced her husband Les because HE was putting it about,\" he leaned forward conspiratorially, \"Perhaps your Sammy was shagging my Sammy's Les?\"\n\n\"No...\" said the Idiot, \"I... err... well...\" said the Idiot, things finally starting to make sense, \"Are you sayin' that Sammy...\" he gulped and took a deep breath and looked up at Dave who was head and shoulders taller, and considerably stronger looking than him, and still had a strong arm around his shoulder. \"Well Dave, I must be getting along.\"\n\n\"No!\" insisted Dave still hanging on to the Idiot Ex and pulling him along, \"you must come and meet my Sammy!\"\n\n\"Naaah, Tha's alright Dave, I've gotta...\" He stopped, \"Your Sammy? is her bruvva 'ere?\"\n\n\"Mike?!\" snapped Dave in delight, \"YEAH! Do you know him? Sammy!\" shouted Dave now dragging the Idiot along with him, \"Sammy! Come and meet Les! He's got such a sad story to tell! I think he knows your brother!\"\n\nI stood up in the hide just yards from them still with Dave's shotgun with empty barrels I must add, pointing towards my ex-husband's fat belly.\n\n\"Hello Les...\" I said coldly, \"fucking other men was I?\" I closed the gun and hefted it to my other arm, only because it was quite heavy.\n\n\"Aah... well... I never ACTUALLY said you woz...\"\n\n\"Yes you fucking did!\" \n\nTo The Idiot Ex's right was my sister Denise with another shotgun pointing straight at him. Her gun was a scary looking black repeater she had taken from a grinning almost-sister-in-law Melanie who was sat in the same hide, this one was also unloaded I found out later. Denise looked fucking terrifying, with Dave later describing her as 'like a female John Wick but with a great cleavage'.\n\n\"Les, this is Sammy's sister Denise!\"\n\n\"Oh sh...\" \n\nI watched, trying hard to keep a straight face at the slowly raising hands and wobbly bottom lip of my arsehole of an ex-husband and my angry sister that had threatened him so often before.\n\nThere was a loud blast to our left, from Chrissie and Grampy John who were actually shooting at pigeons over another field and unaware of the revenge piece going on next door and the air was suddenly ripped apart by both of their guns taking a pair each. The Idiot Ex dropped to the ground screaming and from nowhere there was Mike with his huge black auto shotgun, next to him was Paul with a gun borrowed from his brother and finally me, my double-barrelled marriage guidance offer resting on my hip as I walked to where the Idiot lay surrounded by fake pigeon decoys which seemed to have completely passed him by.\n\n\"Fuckin' 'ell Sammy, I never meant it Babe!\" he cried out looking up at the more than half dozen people all wearing very stern looks, all armed, with their shotguns not pointing at him or, I was to discover later, being loaded and most of them known to him. \n\nIt wouldn't have taken a conspiracy theorist to come to the same conclusion that the Idiot Ex did.\n\n\"Les?\"\n\nHe looked up.\n\n\"Yeah Sammy?\"\n\n\"You will fuck off and crawl back under which ever shitty stone it is you've been living under for the last fifteen years and never bother me, Ray, Izzy, Den, Mike, Dave, Ed, or any of these other nice people, d'you hear?\"\n\n\"Yeah Sammy, o'course Sammy, I woz only comin' to 'pologise like... say sorry for all the grief 'wot Brian and Carl caused.\"\n\n\"Yeah, course you did, like you told Dave that I was fucking other men that's why you divorced me, stand up tosser,\" I sniffed. \"STAND UP!\" I snapped and he did so, \"Now turn around,\" he did that trembling like I'd never seen anyone do before, \"Now fuck off before these boys blow lumps off of you and serve you to the fucking pigs!\"\n\nAnd as if by magic there was a loud, snorting hog grunt from one of Dave's giant prize porkers in the sty about fifty yards behind us, obviously disturbed by the same blast.\n\n\"Fuuuuuuuuuck!\" he shouted and turned and slowly walked away, stepping over the pigeon decoys as if they were landmines.\n\nOther than at a Christening some years later that was the last time I saw the Idiot Ex.\n\nAll was set for our wonderful barbecue that evening following our pigeon shoot which was very successful with Dave, Mike, Paul, Chrissie and Grampy John getting the most, with Melanie doing very well, Den and I managed a few as well, and adding to the bag of thirty eight was another rabbit and another brace of pheasants. \n\nAs we walked back we laughed long and loud over the Idiot Ex, and Melanie's suggestion that the reason he was walking so slowly was that after young marksman Chrissie and Grampy John's dropping of a pair of pigeons each thirty yards from him and entirely in another direction, the Idiot Ex had actually shat himself.\n\nI didn't know, I didn't care.\n\nI played hostess to our families and was overjoyed to see Amy, Julia and her boyfriend Vaughan and my Ray all arriving in his big car. Julia and Vaughan were of course a couple and it looked for a moment like Amy and Ray were as well. Perhaps just acquaintance from the party and the trip I thought initially and really didn't mind.\n\nBut no, after Dave had lit the barbie and firepit and we all started to spread ourselves around the huge garden, I saw that Ray was holding Amy's hand! He leaned across and whispered something in her ear, and she giggled, turning to smile at him, then after a long look that could mean only one thing, leaned forward, closed her eyes and kissed him, very slowly. \n\nIzzy, Den and I who had been watching the hand holding with great interest sat with our mouths open at the looks and the kiss.\n\nShe later explained that they'd shared some of those 'eyes across a crowded room' things at the wedding reception and a very long slow dance that lasted five or six songs stopped only by the DJ playing 'New York - New York' and turned the lights up. \n\nThey kissed goodnight but didn't do anything about it until the next morning when they were both sober enough to even consider a date, both still making big eyes at each other in the large hotel pool.\n\nAmy was struggling to stay contained in bustier cousin Julia's spare strapless swimming costume which stretched once wet, and Ray was enough of a gentleman to offer her his T-shirt to save her embarrassment. She thought that very gallant and her previous night's 'perhaps I might ask him on a date' became 'I have to ask him on a date'.\n\nRay had been similarly impressed with the dark beauty across from him and stopped her on their walk back to their various rooms and asked the gorgeous if slightly hungover Amy if they could meet for lunch the next weekend (always a cool one my boy!) seeing as she'd already announced she was working late duty during that week. \n\nFree from any familial overwatch they both stood in the corridor drying out a bit as they chatted. She was very pleased and suggested a nice restaurant in Brighton which wasn't too far out of the way for either of them and after some text message chatting they met there, both extremely pleased to see the other and pleased that the other was pleased to see them. \n\nSo much so they spent the rest of that weekend in each others company, both able to curse and praise the employer, the Great British National Health Service in equal measure, along with the mountain of other stuff they had in common as they walked along the promenade after lunch arm in arm then holding hands. They ate ice cream and candy floss and, according to a much-besotted Amy, shared their first stolen kiss over lattes near the pier. \n\nThey had dinner in a rather pleasant restaurant that was quite close to his place and they spent their first night together before his sister and her cousin were even back from their honeymoon.\n\nI was really pleased; Ray had been out with a few girls but none that I really liked or particularly took to, call it Mum's prerogative. Two of them already had children, one of them I knew from one of our playgroups and had stated that she was just looking out for a bread winner and the father of her next kid - no fucking way! \n\nOK, I was pregnant with him before I married his Idiot father but you always want better for your own children.\n\nThat was that; although Amy keeps a room at the farmhouse, to my and Dave's joint surprise she was virtually living with my Ray, and sat around the fire pit and the pool it turned out that she had been for the last month, not telling anyone in their now extended family until they sat together holding hands at the barbecue arranged as a 'getting to know you' for both families! \n\nI was beginning to think that concept now a bit unnecessary - so far Izzy and Ed were married, Dave and I had been sleeping together for almost two months with a similar amount of time for Amy and Ray! \n\nIzzy and Julia dragged her off for further girlie discussions about the whirlwind romance, and Izzy later told me over more hot chocolate that the lovely slender, kind-hearted, dark-hard beauty that was my boyfriend's daughter was head over heels in love with 'our Ray', and these days it's nice to occasionally find him in my kitchen and some of his clothes in the laundry room at the farm that we could all really call home.\n\nI say that because after a wonderful long weekend driving around the country in Dave's camper van, he asked me to marry him.\n\nAs we sat overlooking the scenery in the Lake District (first time I'd ever been there) Dave declared his love for the view, adding,\n\n\"And I love you even more...\"\n\n\"What?\"\n\n\"Sam,\" he said taking my hand, \"I'm in love with you, have been for months now,\" he kissed me, \"Marry me?\"\n\nBeaming my biggest cheek-aching grin I just nodded and mouthed a very surprised but joyful 'yes'. We went shopping in Lancaster the next morning and he bought me the most beautiful engagement ring, not like the shit one that the Idiot Ex had given me.\n\nMy first engagement ring, so his sister Fay later told me, the Idiot had found in the street a year or so before he'd met me and it was gold and cubic zirconia and when he tried to hawk it he was offered peanuts so he decided to keep it. It must have been too big for the girl that wore it before me and it was too big for me, I lost it swimming in the sea a year later and never told him. \n\nMy new ring went perfectly with my new wedding ring of course and I never take it off. \n\nI moved down to the south coast and now live in semi-rural bliss with Dave and Chrissie who I love just as much as his Daddy; when he smiles and calls me Mammy Sammy he giggles - it was all I could do not to cry the first few times.\n\nWe married at the church in the village and I asked Grampy John if he would give me away, and he beamed. \n\nHis care of me that morning was second to none, and his parental peck on the cheek, squeeze of my arm and whispered, \"you look gorgeous Samantha,\" as he straightened the short veil on my hat as we waited outside was everything I'd missed at my first wedding all those years before and had my first tears rolling. This was only topped by his words to Dave, \"I know you'll look after her David...\" as he passed my hand to his son-in-law.\n\nMike was similarly impressed, much happier about this wedding than the first one, especially as I had his daughter Charlotte as my bridesmaid, her having to miss being one at Izzy's wedding because of her leg in plaster falling off a horse. Izzy was there of course holding Charlotte's hand.\n\nChrissie was best man and following the big day, him and Charlotte are like best friends and constantly messaging each other, when she isn't actually weekending with Auntie Sam and Uncle Dave with the pool that is - her Mum and Dad are generally there too I must add, with shotguns. Mike has started to draw up plans to have a pool built at his place.\n\nAfter our honeymoon in Rome I said about selling my house, but instead we now rent it out, using the extra income to pay for some more grazing land (get me!) and increased his... no OUR herd of dairy cows.\n\nAnd yes, of course Denise got together with recently divorced Griff and she and Rory moved in with him in his smallholding and she picks me up on the way through to our still successful playgroup businesses. \n\nShe really surprised me one morning when we got to work and she felt sick. When it happened on the second day I jokingly said,\n\n\"Bloody hell Den, is that morning sickness.\"\n\n\"Yeah,\" she said.\n\nWhile Griff is brilliant at delivering calves, piglets and lambs, even the occasional foal, the arrival of his own child, a son, was far too scary a moment for him and he remained with Dave pacing up and down the corridor at the maternity unit while I held my sister's hand as her second child Patrick was delivered.\n\nAnd as for the Idiot Ex? Izzy still sees him occasionally and he was invited to the christening for our first grandchild, my gorgeous... sorry IZZY'S gorgeous Amelia. \n\nI hadn't seen him in four years, not since that Saturday afternoon in Dave's field when he was surrounded by people with shotguns. Mike had only to smile and wave at him and make the 'pump action' movement for him to start trembling again.\n\nHe was probably two stone lighter and wearing the same crappy suit he'd worn to the wedding and it was hanging off of him. His once dark hair was now thin and greying, and he was a shadow of the man I had married nearly twenty eight years before. His car 'was in the garage for a few days', he said but I didn't believe him. He lived in a flat above a garage and it would have taken a couple of days to get it repaired. \n\nI sat with his sister Fay for a few moments who told me that their witch of a mother had passed away and far from an inheritance she had died without a bean to her name and there was still some outrage that he hadn't chipped in for her funeral, pleading poverty and leaving the majority of the cost that wasn't met by the Social Services grant to her and his other sister.\n\nHe'd started with a crow about how much Izzy's wedding has cost him but Fay shut him down on that straight away because she knew that Ed and Izzy had funded everything with a grand from me and a similar amount from Paul and Gwyn. Money from The Idiot Ex had been noticeable by its absence.\n\nIf fact the Idiot Ex had pleaded poverty his whole life; when we were first married and I was earning we never seemed short and I picked up some part time work after Ray was born cleaning, working behind the bar at the club, at the Asda supermarket, and once I started to bring in money, HIS poverty pleading started and went on, and on, and on.\n\nThe problem was that kind of trading that he had done was now virtually non-existent. He tried working the markets but wouldn't pay a pitch fee on principle preferring to hang around the edges on market days. When he tried to set up his pitch or his barrow on the outskirts the police, the council or Trading Standards Officers soon had him on his way. \n\nMore than that people just didn't want to buy the shit he was selling for the price. The kind of thing he sold for a fiver could now be bought in the high street for a couple of quid, with the option to take it back when it eventually fell apart. Fay told me that he'd had to let two of his three lock-ups go when his direct debits failed. \n\nAs well as that he was just getting old. He was heading for his fifties but looked much older and far from the dark haired, slightly charming man that could screw his way around the easily charmed women at the club, those days were gone. He was lonely, tired, bitter and the world he grew up in and loved was disappearing in a whirlwind of 'pile it high, sell it cheap' European supermarkets, Pound shops and a little thing called the internet, the new best place to sell stolen goods.\n\nNot old enough to retire in a country where it was increasingly difficult to claim benefits he was in the shit. His landlord knew him of old and gave him the benefit of the doubt for a few months until the Idiot was finally able to claim housing benefit and was now getting many of his meals courtesy of a food bank. \n\nWhen Izzy met him to introduce him to his granddaughter she saw that his cousin Jaynie was there so perhaps he wasn't as lonely as we thought.\n\nHe told her that he'd set up a business with Brian buying and selling whatever they could. This was because Brian was now at a loss seeing as Carl, his partner in crime - literally - had been sent to prison for an offence two days into his early release for good behaviour from his most recent stretch. \n\nHe was trying to burgle a large shop in the high street. Thinking it was the back of a closed supermarket full of fags, booze, shampoos and conditioners and other really cool and ultimately sellable things he climbed the fence and put in a small window of what turned out to be the butchery department just along from the bakery.\n\nWhile any other shop would have been empty at four in the morning, a butchers and bakers was bound to be full of staff; Carl didn't realise that, thinking perhaps that meat came in shrink wrapped in those polystyrene trays and bread was all in plastic bags.\n\nFinding himself surrounded by a dozen big lads, half of them bloodstained, and one bloodstained woman he decided to fight his way out and grabbed a knife, shouting \"fuckin' caahm on then you wankahs, I'll 'ave the fuckin' lot of yah!\"\n\nA bad move, as the first and biggest butcher grabbed the knife with a chain mail protected hand and decked the would-be thief with a huge arm used to lugging large lumps of cow and pig around, and his colleagues soon joined in.\n\nCarl grabbing the knife and his loud challenge was an 'aggravation' to the burglary and despite his two black eyes, broken nose, fractured hand, fractured wrist and dislocated shoulder, this was technically his 'third strike' (the thirtieth or fortieth really) but it was enough to get him sent away for six years, after more time was added for him assaulting the prison officer in the remand centre he was sent to.\n\nI still shudder when I think that had the fishwife not outed the Idiot Ex and his multiple shaggings on that horrible Friday night all those years ago, had Mike not defied our father and chosen the armed forces over armed robbery, had I not moved off, up and out, there was a very good chance my gorgeous Izzy could now have been married to Carl, had half a dozen kids, been working as a cleaner and would be sitting in 'the Club' on Fridays with a regular black eye whenever she disagreed with him.\n\nThank fuck for fishwives; and thank fuck for good looking sexy Farmers!"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "humour",
        "oral",
        "straight sex",
        "oral sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-idiot-the-farmer-and-me-ch-03"
}