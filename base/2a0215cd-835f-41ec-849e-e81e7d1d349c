{
    "title": "Cat Fight Ch. 21: Contact",
    "pages": [
        "Terms\n\ntinton - 2 1/2 seconds \n\nspecton - 2 1/2 minutes \n\nToton - 2 1/2 hours \n\nminton - 2 1/2 days \n\ndaycon - 2 1/2 weeks \n\nMalant - 2 1/2 months \n\nquant - 2 1/2 years \n\ngalant - 2 1/2 centuries \n\nMetson - 2 1/2 inches \n\nmaclon - 2 1/2 feet \n\nheckson - 2 1/2 miles \n\ntetson - 2 1/2 acres \n\nunit - 2 1/2 ccs\n\n-\n\nCharacters\n\nBill Axor (AKA Ambrose or Ambree) - Lion clan\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nCommander of star cruiser - Wire hair clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Sub-princess of Mandria, Lion clan\n\nKNIGHTS\n\nGeneral Roth - Leopard clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nThomas - Lynx clan\n\nPALADINS\n\nWrena - Leopard clan, Roth's mate\n\nCetana - cougar clan. Gregor's mate\n\nDawney - Panther clan Gwayne's mate\n\nMileen - Lynx clan Thomas's mate\n\n---------------------------------\n\nAmbrose could only stare at the young woman as she refused to get off the ground. \"Please I am not Cit-Chac-Coh; I am just a... man.\" Ambrose said thinking only a moment. \n\n\"But you changed right before my eyes! If you are not, then you must be a close helper of his! I am only paying you the respect you deserve; I am sorry that I was here and made you worry. Please don't hurt my family.\" The young teen woman said. \n\n\"I would never hurt your family. I have a few questions for you.\" Ambrose stated. \n\n\"Yes, lord anything I can do to help you and your guards.\" The young woman spoke in low tones. \n\nAmbrose just rolled his eyes this was going to be harder than he thought. These people had an obviously deep belief. Sighing Ambrose again tried to raise the young woman off the ground. \n\n\"Please stand so I may ask you. I do not like talking to you as if you are nothing.\" Ambrose said to the still kneeling young teen. \n\n\"But Cit... sir!\" She started then changed what she was saying as Ambrose held up his hand. \"Sir it is forbidden. I...\" \n\n\"I want to remain unknown for now. I told you I am not Cit-Chac-Coh. Please don't call me that again.\" Ambrose said a little more forcibly, and then cringed when the young woman fell to the ground trembling. \"Please stand I did not mean to sound angry with you. Please rise so I may ask you a few questions.\" \n\nThe young woman tentatively looked up at Ambrose with fear still apparent on her face. Ambrose started to curse to himself when he saw tears start to fall from her eyes. \"I will do all I can to aid you and your guards sir.\" The last part was spoken in a whisper of awe. \n\nAmbrose nodded with a sigh, \"First what is your name? I wish to call you by it and not young woman.\" \n\nThe young woman smiled, then spoke lowly, \"I am called Timora, my lord.\" \n\nAmbrose's eyes went wide as he looked at the stricken faces of his knights. Timora!? She was the first wife of the trial leader, and the one that held the tribe together until they were stronger. It was said that she had preformed miracles that no one could explain. Ambrose could only shake his head; this great woman was bowing to him? Hell he should bow to her for the bravery, ideas and assisting leadership she later had and done. \n\nA sudden thought struck Ambrose as she was there was no way it was the same woman. Was it possible that they taught her? Ambrose shook his head again; this was a great way to get a headache real damn quick. All the time paradoxes could drive one to insanity. \n\n\"My second question young Timora that is Acropolis over there isn't it?\" Ambrose asked though he knew the answer. \n\n\"Yes lord it is, though we are close to abandoning it. A strange ailment has broken out, many have passed. My father the great healer has not found a way to defeat it. I was here praying to all the gods for a sign that they hadn't forgotten their people. Legends say that a seer long ago saw that one day we would leave this place. Going to one that was harsher but much better. I think that you appearing after I started praying is a sign.\" \n\nAmbrose was listening to every word the young woman said. It was so close to what he'd learned about the great migration. It happened after the appearance of a godling disguised as a human. The godling preformed many miracles healing a great multitude of those sick. Many people began to change slowly to the hybrid form that the feline race was now. It was said that the godling denied who it was almost to the end of the migration. \n\nAmbrose's mouth dropped agape, what in the hell! Was he really the savior of these people and his own? Hell, come to think of it these were his people also! Looking at his chronometer he saw that they had been outside for almost a whole Toton. \n\nLooking at Roth Ambrose asked, \"How are you feeling? Any loss of control?\" \n\nRoth looked down at himself a little disgusted at his human form. An odd look crossed his face then the faces of Gwayne and Gregor. \"By the great feline! It's strange I felt it at first then after we started to dig the young woman out, it past! Are we immune sire?\" Roth asked. \n\n\"No I don't think immune though I feel as you do. I think that we are building a resistance, although I am unsure how. We need to go in and discover why.\" Ambrose started to tell Timora that they would be back soon when he spotted something around her neck. Then his eyes got wide as he saw the large sun shaped necklace. \"Timora? May I have your necklace a while? I will do my best to return it unharmed.\" \n\nBowing she took the sun shape off handing it to Ambrose. \"You may have anything of mine lord. I live to serve you and Cit-Chac-Coh. If you need my help I will be here as soon as I can lord.\" \n\nWith that she walked away from the small out cropping of rocks that the ship was resting against. Escaping inside as soon as Timora was out of sight Ambrose walked to Skylos. \n\n[So you like her I take it?] came the thoughts of Adina. \n\n[Of course! You know who she is don't you?] Ambrose replied. \n\n[No, as if I care; although if she touches you, I will claw her eyes out!] growled Adina's thoughts. \n\n[Look, see her.] Ambrose told her. \n\nThere was a gasp then a very low thought of, [Timora! By the great feline! The great mother of the feline people! I am sorry Ambrose. You were respectful weren't you?] \n\n[I and three of my knights saved her life.] Laughing a moment Ambrose revealed. [She called me Cit-Chac-Coh, I am no god.] \n\nAgain Ambrose heard Adina gasp. Then across the room he heard her groan as she opened her eyes. \"Yes,\" she croaked. \"I can see where she might think that. Cousin? Why are you in your human form?\" Looking at the three knights then back to Ambrose, \"why are all of you in your human form?\" \n\n\"Yes I was going to ask you the same thing. Though all of you have a commanding presence in either form, we prefer your Xendran form.\" Niaco said behind Ambrose. \n\n\"I thought that it might scare the young female away. We just haven't changed back.\" Ambrose said as he started to changed then stopped halfway through! \n\n\"By the great feline! What is this! Why can't we change?\" They heard a panicked Roth say. \n\nAmbrose nodded his head then continued on to Skylos. \"I think I might have another temporary solution to power problem.\" Opening his hand like paw Ambrose showed the large sun necklace. \n\nSkylos's eyes got huge seeing the size of the necklace. \"Yes sire this should help if we can position it. The oblong shape might make that difficult.\" \n\nGoing to engineering Skylos scanned the necklace then opened another chamber. Reaching in, he removed two more burnt blobs of metal. Turning the necklace several times he scanned again nodding to Ambrose. Closing the chamber he started to flick a few switches. Nodding again he flipped a few more watching as the power started to climb. Finally five spectons later a huge smile broke out on Skylos's face. \n\n\"Yes! We have almost fifty eight percent power. That might be enough to get the hull factures repaired. Starting them now, it might get a few systems repaired also.\" Skylos said. \n\n\"Will it be enough for the med bay? I have a need of the equipment there.\" Ambrose told him. \n\nSkylos thought a moment then nodded. \"It will delay the hull facture repair but yes it is more than enough.\" \n\nSighing Ambrose nodded, \"good I intend to find out a few things. Firstly why we can't completely change back.\" \n\nSkylos nodded as he watched Ambrose walk into the med bay that was already occupied by Thomas, Roth, Gwayne, and Gregor. Nodding to all of them Ambrose started a scan of their bodies. \n\nIt was almost a toton later that Ambrose's eyes got large when he saw the readings. Shaking his head he went over everything again. Then he started a third time still not believing what he was seeing! \n\nTaking an empty syringe Ambrose drew a small amount of his blood. Placing it on a slide he passed it into the med computer for analysis. Again his mouth dropped open when the med computer confirmed what he thought though felt was impossible. \n\nShaking his head he started to laugh suddenly. Roth's head snapped up staring at Ambrose. \"Sire, are you alright?\" \n\nLooking at Roth's serious face caused Ambrose to laugh longer. This of course scared Roth that Ambrose might have lost his mind. \n\nSuddenly quelling his laughter Ambrose turned to his friend and knight. \"I am fine though I am so unsure. I just finished with scans of you three, plus a detailed analysis of my blood. You might remember when I was a cub that outbreak of the bleeding paw disease?\" \n\nRoth's eyes got wide as he nodded, \"As I remember thousands died on all worlds. If I remember right it was your father's doctor that found a remedy for it. It took mostly the young, and then suddenly struck those past adolescent age. Are you telling me that we all have bleeding paw disease? That's Impossible! All are immune now!\" \n\nAmbrose nodded with a grim look. \"To that strain yes, this is a different strain. It strike humans and our kind though you are mostly immune to it.\" Ambrose stopped to see that Gwayne, Gregor, and Roth were all staring at him. \n\n\"Wait, you said WE are mostly immune. Sire are you dying?\" A now worried Roth said. \n\n\"No far from it. Apparently the time I spent on earth has made me immune to this strain also. Well I am now. It just took a bit before my system destroyed it.\" Ambrose took another syringe drawing 4 units full of his blood. \"I am afraid that this is going to hurt my friend. You are the same blood type I am. I am sorry I am going to have to restrain you.\" Ambrose said as he tightened the restraints. \n\n\"I am not afraid sire, as I said I will lay down my life for you.\" Roth said. Ambrose nodded as he swabbed Roth's arm and injected the blood. \"How long will I have to...\" Roth started then his eyes flew wide as he started to scream! Concentrating Ambrose changed all the way to his Xendran form. Screaming and roaring Roth went back and forth between both forms with Ambrose barely able to hold him still. \n\nGwayne, Gregor, and Thomas all backed away as they saw what was happening to Roth. \"I damn sure hope it isn't that bad with us!\" Thomas growled. \n\n\"Almost,\" Ambrose told the three of them. As suddenly as he started Roth lay still his breathing slow and even. Scanning Roth, Ambrose smiled when he saw that the disease was gone. \"I'm afraid I am going to have to draw a bit of blood from myself to heal all of you. I have to separate the blood cells and platelets out. I think that the plasma will be enough to heal you.\" \n\n\"You think! Sire not to be an ass, I think I'd rather stay like this rather than be a test victim!\" Thomas growled. \"Already got enough pain as it is, can't hold my sword or fight!\" \n\nAmbrose's face screwed up into a scowl as he crossed the room in little time grabbing Thomas by the throat. \"You wish to deny the loyalty you swore to me?! I should kill you right here! Think well your next words for I will not hesitate to snap your neck as easy as a twig!\" \n\nA look of terror crossed Thomas's face as it did the other two. \"I,\" was all Thomas was able to get out. \n\nPressing Thomas into the bulk head Ambrose growled, \"well!? With me yes, or death no?\" \n\nThomas dropped his eyes to the floor nodding yes. Ambrose roared dropping Thomas to the floor in a heap. \"Thank you sire,\" came Thomas's weak reply. \n\nAmbrose helped Thomas up then hugged him close whispering in his ear. \"Do that again and you die! I will not tolerate traitors.\" \n\nThomas nodded as Ambrose released him. A groan a moment later drew Ambrose to Roth. Looking around Roth groaned again as he looked at the others. Bending down Ambrose heard Roth whisper, \"Damn that's the worst ass kicking I've ever received. Think I can get up?\" \n\nAmbrose look at the med computer's reading and shook his head no. \"Perhaps in a Toton but not now. My blood is still destroying the rest of the disease.\" \n\nRoth sighed then groaned. \"I really hate being in here.\" \n\n\"No more than I my friend.\" Ambrose said with a smile. \n\nA moment later a worried Wrena came into the med bay. Placing her paws on her hips she smirked. \"Anything to get out of cleaning or eating.\" \n\n\"It is good to see you also mate.\" Roth said as Wrena ran to him purring and rubbing her face against his. \n\n\"I was worried I would lose you, mate,\" Wrena said. Then her face turned sad as she added, \"I am far too old to train another mate. I think I will fight to keep you!\" \n\n\"I am glad; I'd hate to rip another suitor apart that was chasing after you!\" Roth weakly growled. \n\n\"Rest, mate,\" Wrena said. \"I will reward you for living.\" Then she started to walk out stopping at the door. \"Though I hope you can survive the reward!\" \n\n\"Ah! If I was younger I might be afraid, now I relish the challenge!\" Roth replied.\n\n_________________________________________________________________________\n\nIt was early the next day that Ambrose, Roth, Gregor, and Gwayne exited the ship. They then started heading toward a small village they had seen beside the pyramid. \n\nThe closer they got the more Ambrose thought that this direct meeting was bad idea. Stopping the others, Ambrose wondered if he could use his ability. Shrugging he thought it was worth a try. \n\nSearching through his memories Ambrose concentrated on Timora. [Timora? Can you hear me?] Ambrose thought. He shook his head about to move on when he heard a weak answer. \n\n[Lord sir? Is that you?] came the weak though steadily growing stronger thoughts of Timora. \n\n[Yes!] Replied an excited Ambrose. \"We have discovered a cure for that which is killing your people. You said your father is a great healer? We need to give this to him, so he can start to heal as many as possible. I only have enough right now for thirty three people after you and your father.] Ambrose explained to her. \n\n[Thank you lord sir, how can I be of help?] came Timora's question. \n\n[Please bring your father to where we met. Also if you can you bring some of that metal that your necklace was made of?] Ambrose asked hoping she might be able to help. \n\n[Yes lord sir, though I can't get a lot of it. I will get as much as I can.] A happy Timora said. \n\n[Good, we'll be waiting please tell him nothing.] Ambrose replied. \n\n[I will do as you ask Lord sir.] Timora thought. Nodding Ambrose broke off the communication. \n\nHeading back to the ship they had to avoid what appeared to be a patrol. Though Ambrose thought they looked more like a Xendran hunting party. \n\nIt was perhaps a half toton later that they all heard footsteps. Then they heard an adult male's voice, followed by Timora's\n\nTimora had brought her father the long way. She kept the out cropping of rock between them and the lord as she called him. Her father was wondering what this emergency was asking her the whole way who was hurt. \n\nRounding the outcropping his mouth dropped open when he saw the over half buried ship. Then four cat people like creatures stepped out of the shadows. Pulling his daughter behind him he quieted her as she started to protest. \n\nPulling his knife the man threatened as he tried to back away. \"I know not who or WHAT you four are but I will defend my daughter to the death! \n\nAmbrose nodded as he stepped away from the others. \"We intend neither you nor your people any harm. We have found what is killing all of you. We wish to give it to you, that you might heal them.\" \n\n\"Why!?\" The man spit out his own frustration at the death of the people weighing on him. \"We know nothing of you, or you of us now...\" \n\n\"You are a proud strong people very smart, far smarter than any other around. Your people and mine are related somewhat. It is this kinship that we wish to extend to you. To save all of you.\" Ambrose said keeping a safe distance from the man. \n\n\"As I said I know you not I...\" The man began then started to collapse, Timora screaming as she tried to hold her father up. Ambrose was there in a flash lowering the man to the ground. \n\n\"NO! Father!\" Timora screamed as she looked at Ambrose. \"Please, Lord sir. Please save my father. He is all I have left, please!\" \n\nAmbrose looked at the white faced man seeing the fever that was starting to rage through his body. \"Alright back away Timora. I need all of you to help hold him down.\" \n\nDrawing four units of plasma Ambrose injected it into the fevered man's arm. Less than a quarter specton later the man's body started to convulse threatening to throw all four of them off. Another two spectons the man's body finally stilled then the breathing settled evening out. \n\nSighing Ambrose nodded to the others then turned to Timora. \"He should be better soon. It appears we were in time. The thing is we also need to put the cure into you also.\" \n\n\"I have had no signs of the sickness. Are you sure Lord sir?\" Timora asked more worried for her father than herself. \n\n\"Yes I am afraid so. Please lay here so we can start.\" Ambrose told her. Nodding she laid down readying herself. \n\nNodding to the others Ambrose injected her. Timora laid there a full two spectons when she started to convulse. Letting loose an ear splitting scream then she was still. Checking her Ambrose nodded then checked her father. \n\nThe man groaned before Ambrose reached him. \"What has happened?\" He weakly said. \n\n\"You became feverish passing out.\" Ambrose informed him. \n\n\"Timora!\" The man suddenly said seeing her next to him. \"I have to...\"\n\n\"Lay there a while longer,\" Ambrose said placing a paw on the man's chest. \n\nWhen the man only stared at it Ambrose nodded. Concentrating, he quickly shifted to his human form. The man's eyes flew wide as he whispered. \"Cit-Chac-Coh!\"\n\nOh shit Ambrose thought, here we go again. "
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-21-contact"
}