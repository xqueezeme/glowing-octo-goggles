{
    "title": "Apprehended Ch. 09",
    "pages": [
        "Apprehended: Chapter Nine\n\n\"I don't want to do this.\" My voice was but a mere whisper. Unfortunately, Ethan-with his good hearing-heard my plea.\n\n\"This is non-negotiable, bellula. I can hear your breathing. It doesn't sound right. Now stop giving Hubert a hard time and lay down,\" replied Ethan.\n\nI wanted to argue, to tell him that it was my body, my choice. But to be completely honest, breathing was beginning to hurt.\n\nMartin cleared his throat and looked at Ethan. \"May I?\"\n\nI frowned. \"May you what?\"\n\nHe continued to address Ethan. \"Examine her?\"\n\nI snorted but ended up coughing. It sounded raspy and moist.\n\n\"Do it,\" demanded Ethan.\n\nI thought back to what Tony said. That I wasn't an object. I wanted to voice that fact, but my current condition didn't allow it.\n\n\"Lay back, please, Ms. Annie.\" Dr. Martin had snapped on some gloves.\n\nNervously, I did as I was told. Unconsciously, I looked at Ethan for some sort of invisible support, as if merely looking at him would offer a form of comfort. I'm not sure why I did it. It seemed instinctual, like I wasn't in control of my own body. Especially considering the stress I was under.\n\nEthan was on it. He took my hand and engulfed it with his own, his warm fingers circling around me with heat. I squeezed and was momentarily lost in not only nervousness, but overwhelming anxiety.\n\nEthan and the doctor were going to see my scars. The scars of my past. Those were burdens that only I carried and witnessed. They were reminders of what I would never allow again. They were also reminders of what I endured.\n\nI felt cool air tickle my skin as my gown was pulled apart by Dr. Martin and I couldn't bear to stare at Ethan. Sure, he saw me when he changed my clothing before. But I wasn't conscious to remember it. This, however, was up front and center. I nearly vomited with the capacity of it; of the weight that crushed me.\n\nDr. Martin looked at Ethan briefly and they shared a silent exchange. Ethan nodded his head as if acknowledging that he too noticed my scars and it was okay to continue with the examination. I felt my face grow hot under their scrutiny and my vision blurred. I tried to suck it back, to completely devoid myself of the overwhelming shame and embarrassment I felt over my body. Over my anguish and torment.\n\nI turned my face away, no longer able to face the two men who were taking care of me. Even though I knew I was safe here-especially with Ethan by my side- I felt alone. I felt like this was not only Dina's doing, but my own. I allowed her to fool me into thinking that Ethan needed me. I should have listened to my instincts. I should never have left that fucking cabin.\n\nThis was an agony far worse than abuse. It was an exploitation of my suffering. I tried to hold back the tears that threatened to consume me but failed. Wetness coated my cheeks and I quickly brushed them away with trembling fingers. I knew Ethan not only saw that I was crying, but most likely could smell it.\n\nI wasn't disappointed.\n\n\"Hubert how is she looking?\" said Ethan.\n\nI shivered when I realized that Dr. Martin was in the process of examining me during my emotional and mental breakdown. He was probing me with his fingers, pressing against my ribs. I winced and shot him a dirty look. That hurt.\n\nHe smiled apologetically and asked me to sit up a little so he could listen to my breathing. Ethan assisted. When he was satisfied that I was comfortable, he let Dr. Martin finish his examination and only when he was done did Ethan wrap the gown around me to shield me.\n\nEthan tucked me closer into his side and continued to hold my hand as he said, \"What's the damage?\"\n\nHubert took off his gloves and tossed them in the trash bin. He took a seat on a rolling stool and sighed heavily. \"Her lungs don't appear to be collapsed. Just bruised.\"\n\n\"Is that serious?\" asked Ethan.\n\n\"It's a pulmonary contusion. With rest, she should begin healing within one to two days. Complete healing takes place in three to fourteen days.\"\n\n\"How did she get it?\" Ethan continued. His voice sounded deeper, making the mattress rumble with the severity of it.\n\nDr. Martin looked at me. \"Did you fall?\"\n\nI nodded. \"Yeah. I slipped.\"\n\nEthan growled and lowered himself so that his golden eyes found mine: an unwavering, gleaming sunrise amidst a white, sterile room. The gloriousness of his stare was powerful. I wondered what it would be like to stare at his eyes for longer than one minute. Uncomfortable?\n\nMore like losing myself. Losing my capacity for cognitive awareness. I thought of our oral escapade together and how easily I lost myself to Ethan. To his eyes, mouth and hands. I felt my face grow hot at the steamy memory.\n\nEthan made a face, an all-knowing one. Followed by a cocked brow. Did he know what I was thinking about?\n\n\"Did he hurt you, bellula?\"\n\nI blinked rapidly and forced myself to pay attention. \"What?\"\n\n\"Did he hurt you? Don't lie either. I'll smell it.\"\n\nI had no idea what he was talking about, let alone who he was referring to. \"Who?\"\n\nHe made a face in what I assumed was agitation. \"Tony,\" he gritted out.\n\nOh.\n\n\"No,\" I answered honestly.\n\nHe accepted that. \"Good,\" he said. His face softened a moment before he turned his attention back to Hubert, who looked like a pale, shaken mess. \"What does she need?\"\n\n\"Time,\" said Hubert. \"Bed rest.\"\n\n\"What about her other injuries?\" asked Ethan.\n\n\"Healing nicely. But I stress that she stay indoors to continue healing.\"\n\n\"Done,\" said Ethan with finality. He faced me again. \"Give me a minute alone with her, Hubert.\"\n\nHubert nodded briskly and left with a flourish.\n\nI swallowed loudly and shrank back a little when Ethan took a seat beside me on the mattress. He leaned in, his scent overwhelming me. \"You left, Annie,\" he said, his voice even deeper. \"That was not an option. You gave me your fucking word.\"\n\nShit.\n\nI knew this was going to come up. I wasn't prepared to talk about this now. My lungs were hurting. My ribs were still achy. I was still shivering. My body was exposed even though I wore a gown, and I was exhausted.\n\n\"I didn't leave,\" I muttered. I licked my dry lips again and wiped clean the remainder of my tears from my face.\n\n\"Then explain to me what the fuck this all is. Why were you outside alone in the middle of the road? In your condition? Do you know the danger you put yourself in? Especially when I wouldn't have been close enough to protect you?\"\n\nI wanted to tell him that it wasn't me. That it was Dina. She lied to me. She lured me outside. But instead I said, \"I didn't d-\"\n\n\"And don't you fucking lie to me,\" he interrupted, his words brash. \"You broke your word. Your vow to me. That is unacceptable, Annie. I will not tolerate it. You ran when you said you wouldn't. Did you think I wouldn't find you? Especially when your blood courses through my veins? You think that I'm just going to let that go?\"\n\nI made a sound in the back of my throat and instinctively moved away from him.\n\nHe wrapped a thick arm around my waist and gently pulled me closer, lowering his head even more. His breath tickled my face when he spoke, a velvety smoothness that made my soul tremble. \"Easy there, my sweet. Easy.\" He stared at me intently, his eyes sparkling like sunlight across a vast ocean. He reached out to push a few strands of hair behind my ear, his fingers lightly brushing my skin. He didn't say anything else. He merely stared, his gaze going over my face.\n\nI quivered under his intense scrutiny and looked away, unable to reciprocate the deep observation. I sniffled and rubbed my eyes, ridding them of tears.\n\nHe noticed. \"You okay?\"\n\nI nodded even though I wasn't.\n\nHe sighed deeply and sat back a little, giving me some space. I was grateful. \"Why are you crying, love?\"\n\nI shook my head, my voice thick and heavy. \"I'm not.\"\n\n\"You are, mea vita. Talk to me.\"\n\nHe waited patiently while I collected myself. I shifted a bit, but he didn't release me. \"Ethan,\" I said. It came off like a plea.\n\n\"What?\" he said, his tone lowering. \"Did I hurt you?\"\n\n\"No,\" I said softly.\n\n\"You sure?\"\n\n\"Yes.\"\n\n\"Then what's wrong, sweetheart? Speak to me. Please.\"\n\nI sighed heavily. Like the weight of the world was burdened upon me, pulling me down into a deep abyss. \"I didn't leave on my own,\" I said softly. \"I didn't break my vow.\"\n\n\"What do you mean?\" he asked, tucking more hair behind my ear.\n\nI sniffled. \"Dina said that you needed me.\"\n\nHe growled. A sound so feral and reverberating that I winced and scooted away from him a little more. Which was pointless because he had an arm wrapped around me. \"What did she do?\" he snapped dangerously.\n\nI answered without hesitation. I was not taking the blame for her. Not when she threatened to kill me or leave me for dead. I told Ethan everything. When I was done recounting my tale, he growled and cursed, releasing me as he began pacing.\n\nHe took out his phone and dialed a number. Putting the phone to his ear, I watched as he waited and finally spoke, his voice deep and menacing. \"Gavin, collect Rodina. Bring her to a goddamn cell.\" Pause. \"No. Not there. A cell. I don't want her to escape after what she's done.\" Another pause. \"I'll explain it to you later. Just get Edwin and have him help you. You know how untamed she can be.\" Yet another pause. \"Good. Text me when it's done.\" He ended the call and slipped his phone back into his pocket. \"Hubert!\" he called.\n\nDr. Martin scurried in, blubbering and fumbling around like a chicken with its head cut off. \"Ethan?\"\n\n\"Give her anything and everything she needs. Call Dr. Baldridge when this is done. He's our clan doc. You have his number. Confer. Share info. You will both be working together to monitor her progress. That includes home visits.\"\n\nHubert paled and his face went blank. \"Visits? To your home?\"\n\nEthan nodded. \"Yes, Hubert. You have my number. I will be calling you soon. Answer it.\"\n\nMartin nodded. \"Of course.\"\n\n\"Good,\" said Ethan with finality. \"Where is Tony?\"\n\n\"Right here,\" he answered, coming inside the room with all the power and dignity a man of his size could muster.\n\nI could tell that he wasn't afraid of Ethan. I wasn't so sure if that was a good thing or a bad thing. Tony was immense, but Ethan was bigger. Tony didn't seem to be bothered by that fact.\n\n\"What do you want, Dune?\" said Tony.\n\nEthan gave him a glare, his large fists tightening. Tension rose the minute they were in a room together. I briefly wondered what had caused this conflict between them.\n\n\"We need a ride,\" said Ethan.\n\n\"Didn't bring good ol' Cheryl with you?\" asked Tony.\n\nCheryl? Who the fuck was Cheryl?\n\nEthan grinned sardonically. \"I didn't have the pleasure. I came here as fast as I could. Without her.\"\n\nI was confused. \"Who is Cheryl?\" I interjected.\n\nI received no answer. \"I take it you will be joining us?\" asked Tony, crossing his arms over his chest.\n\n\"You think I'm going to let you drive her back without me? Is that a joke?\"\n\n\"Whatever,\" snapped Tony in irritation. \"Let me bring the truck up front and I'll gladly give Annie the ride. You? Not so much.\"\n\nI gasped and made an open-mouthed O with my lips. He had balls talking to a male like Ethan that way. Serious balls.\n\nEthan chuckled. \"Get it done, Sheriff.\"\n\nThe way that he said Sheriff was not stated as a sign of respect. It was used as a form of derision. Like he couldn't understand how a man like Tony had become a Sheriff.\n\nI watched in silence as Tony glared and turned to leave. When he was gone, Ethan looked at me and muttered under his breath, \"I really hate that little prick.\"\n\nI wanted to laugh but knew better. Whatever transgressions they had with one another derived from the past. A past I knew nothing about. I wasn't going to ask either. Ethan was edgy enough as it was.\n\n\"You done, Hubert?\" he asked, still staring at me.\n\n\"Yes,\" said Hubert. \"Here are the medicines.\" He handed Ethan a small white bag. Ethan snatched it, looked inside and nodded in approval. \"Thanks, Martin. Payment will be in your account by tomorrow morning. I already wired it.\"\n\nHubert bowed his head slightly. \"Thank you.\"\n\nPayment? What payment? I opened my mouth to ask, but Ethan didn't allow it.\n\n\"Put on my coat, bellula. We're leaving.\" He walked towards me, grabbed the coat and wrapped it around my body as I slowly sat up.\n\n\"What?\" I said, confused. \"What about the rest of the clothes?\"\n\nThey weren't mine but still. It was coverage. I didn't want to leave wearing a hospital gown and a coat. It was freezing outside.\n\n\"Put my boots on too,\" he instructed.\n\nHe began doing it for me. I stuttered, trying to find the right words as he rushed through the process.\n\n\"We're leaving,\" he repeated. \"I'll carry you to the truck. I'm warm. My heat will protect you against the cold.\"\n\nI was stuttering some more, unable to speak correctly. This was moving way too fast. By the time I uttered a single, warped sound, Ethan had me in his arms and completely abandoned the clothes that I had left on the chair.\n\n\"I'll be in touch, Doc. Thanks.\"\n\nHubert smiled at me as Ethan carried me out. It was a gentle smile. An all-knowing one. It was empathetic and somewhat reassuring. I wasn't alone. Tony and Dr. Martin knew too. I wasn't sure how much. But it was better than being isolated. It was better than holding this weight alone. It grounded me in some strange way, to know that what I was experiencing was concrete. It was a truth that was somehow easier to believe. Maybe not easier to understand. But I was okay with that.\n\nFor the moment, that was more than enough for me.\n\n \n"
    ],
    "authorname": "AnnieBaebee",
    "tags": [
        "drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/apprehended-ch-09"
}