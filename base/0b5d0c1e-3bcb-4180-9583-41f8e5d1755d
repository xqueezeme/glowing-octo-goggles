{
    "title": "Dexter's Renaissance Ch. 09-10",
    "pages": [
        "Chapter 9 Taking a Chance\n\nThat May picnic was the beginning of a series of dates that Michelle and I enjoyed. Sometimes to a movie or play, often for dinner, occasionally for a ballgame. It was on one of those dates that there was a distinct shift in our relationship. Until then, we had held hands, kissed lightly and generally behaved ourselves. I think we both could feel the pressure building. It changed after we had spent a pleasant evening at a local play.\n\nWe were in her late model Lincoln and I was driving. In the past I would stop at the Rossmoor and she would drive on to her apartment. That night she had other ideas.\n\n\"Drive to my place, Dex. It's Friday, and we've got all weekend. You haven't been to my place yet and I'd like to spend some time with you,\" she said, placing her hand over mine. \n\nIt didn't take me any time at all to smile, nod and head toward Lakeshore Drive. As we neared the building, Michelle took a small transmitter from her purse and pushed a button. The open grilled gate began to rise and I drove into the underground parking area. She directed me to a slot and I parked. The transmitter also unlocked the door to the elevator and stairs. After waiting a moment for an available car, a door slid open and we entered with Michelle inserting a card and pushing a button marked \"R.\"\n\nWhen we stepped out of the car, a large glass window was directly in front of us and I could see we were at the top of the building. To the left was 2102 and to the right, 2101. Michelle guided me right and opened the door, stepping in and turning on some lights.\n\nIt was a very nice and apparently large penthouse suite, one of two on the top floor of the building. As I looked around I saw the trappings of affluence; fine furniture, interesting artwork, and lush carpeting. \n\nMichelle kicked off her shoes and I followed suit. \n\n\"Dex, I'm all sticky from the humidity today. I'm going to have a shower and change. Why don't you do the same, then we can relax and get to know each other better,\" she smiled.\n\nI wasn't about to decline the offer and happily agreed. She led me to the main bathroom, handed me some towels and a washcloth and told me how to work the controls on the shower system. I needed the lesson. It was a multi-head system with pre-selected temperatures. The cabinet itself was almost as big as the bathroom in my apartment. \n\nAs I soaped and rinsed I almost expected that Michelle would suddenly appear and join me but that didn't happen. I stepped out of the shower, towelled myself off and dressed in my slacks and shirt. I didn't bother with socks. They wouldn't be as fresh as I was so I stuffed them in my back pocket as I headed barefoot for the living area.\n\nWaiting for Michelle, I wandered about the spacious penthouse. There was a dining area with a very nice buffet and china cabinet, along with a large period-style table and chairs. The kitchen was through a wide passage and it too was large, with a big island and plenty of cabinet and counter space. Most houses didn't have this much room.\n\nI was just coming out of my inspection of the kitchen when Michelle reappeared and got my undivided attention. She was wearing a black silk pyjama suit, if that's what it's called. It was floor length, very sleek with material flowing from its wide legs and arms. She had a smile for me as she approached, then stopped and swirled in a circle to emphasize the graceful lines of her attire. \n\n\"You like?\" she asked, already knowing my answer.\n\n\"Very nice ... very elegant.\" I almost added very sexy. As she had moved to show the garment off it was immediately apparent that she was wearing nothing beneath it. Her nipples protruded clearly in front and her buttocks were perfectly outlined in back. I could feel my erection beginning to develop. \n\n\"Would you care for coffee ... or perhaps a glass of wine or brandy?\" she said in a teasing manner.\n\n\"I'd like a glass of brandy, please.\"\n\n\"Oh, good. I'll have one too,\" she said, turning to move into the kitchen.\n\nI followed her as if she was drawing me along. Perhaps it was the magnetic appeal of her, dressed as she was in such alluring garb. She reached up in a cupboard for the brandy bottle and I stepped behind her to help her. I was directly behind her now, touching her slightly with my hips and chest. And then I did something I would never have thought I would do.\n\nWith the fingertips of my right hand, I lightly, slowly, ran them up her side, feeling her ribs as I went. Then, in a moment of complete recklessness, I moved my hand and gently cupped and stroked a fulsome breast. I felt her shiver from the contact but she didn't push me away or resist my touch. In fact, I was sure I heard a soft moan.\n\nI couldn't see her face, but she had begun to lean back into me, the brandy bottle now forgotten. Her hands were on the countertop as if bracing her against an assault. My left hand joined the right in teasing her nipples and now her groan was more audible. Emboldened, I allowed my left hand to slip down over her abdomen and softly rub the silky smooth material of her gown. \n\nI felt her backside push slowly back into me and she could certainly now feel my erection. I moved my hips to place the hardened member between her cheeks and she welcomed that move with a swaying motion that only reinforced my hardness. One of us was going to have to do something soon.\n\nIt was Michelle who took my right hand and guided it inside her top, giving me access to her breasts. She pulled at the fold of the material and I felt a little pop as a small snap released the upper two halves of the garment. Still holding my hand, she slid it down to her waist where another small snap gave way and the gown parted completely. \n\nI felt her shrug her shoulders and the lovely black item fell at her feet. She was naked before me, still facing away but leaning back more urgently against me, pressing herself into my prominent manhood. Once more I did something I would not have thought I could. I intimated with my knee that I wanted her to spread her legs and she immediately complied. She understood exactly what I was intending.\n\nI unbuttoned my pants and they too fell at my feet, my briefs following them almost immediately. I took my cock in my hand and began to stroke her already wet centre in preparation for my entry. Again, she did everything she could to help me and within a few moments I was pushing into her. Slowly and carefully at first, but her insistence gave me courage to thrust a little more and soon I was well buried inside her.\n\nI moved a little more forcefully and quickly as she continued to welcome me. There was absolutely no doubt in my mind that this was what she had planned all along. Her voice soon joined the action, not so much with words but with little cries of encouragement and pleasure. How long it had been since she had been with a man I did not know. I only knew she was with me now and I was reaping the reward of her pent up need.\n\nI leaned my head forward and captured an earlobe between my lips, then licked the back of her neck as I continued to stroke into her. In response, she threw her head back and growled a pagan, earthy moan of lust, slamming her ass back into me, the smacking sound of our joining now growing louder. This was probably going to end quite soon but I was doing whatever I could to hold off as long as possible.\n\nA few moments later her moves became more erratic and we almost fell out of rhythm as she began her orgasmic trip. I stayed with her as long as I could but I was going to finish as well and there was nothing I could do to prevent it. I felt myself release into her once, twice, then a third time. As I did, she sagged against me and I held her around her waist so that she didn't collapse against the granite counter or on the tile floor. \n\nIn all my experience, limited as it might have been, I had never had a more erotic, spontaneous coupling than this. I was in no condition to continue. Michelle was leaning back into me, breathing heavily and holding my arms tightly as they encircled her. Not a word had passed between us from the time she walked to the liquor cupboard.\n\nI'm still not sure what got into me that night but I was either very confident of myself or very reckless. Probably the latter. Nonetheless, I picked the naked beauty up in my arms and carefully steered my way out of the kitchen toward the master bedroom. When I arrived, I saw that the bed had been turned down and I carefully laid Michelle on it crosswise with her legs dangling over the side. Her eyes were open and she was staring at me, no doubt wondering what I was doing. Still, neither of us had said a word yet.\n\nI pulled off my shirt and now as naked as she, I got on my knees on the lushly carpeted floor, my hands gently but insistently pushing her legs apart. Again, she offered no resistance. I moved between them and began to kiss the flawless, smooth skin of her thighs. I was about to work my way up to the place where I had just planted my seed when I felt her hands in my hair. Was this a 'stop' or a 'go?' \n\nI could see a bit of my semen on the lips of her vagina and I wondered what possessed me to try this. What was I trying to prove? Yet, even with that question in my head, I continued. As Michelle realized what I was planning, she must have had second thoughts. That had prompted her to place her hands on my head again, trying to decide if she should put a stop to my intentions. As I made up my mind to continue I felt her resistance lessen.\n\nI moved toward my target and slowly, with the flat of my tongue, I began to make love to her once again. This was going to be a very different kind of penetration. I had plenty of experience with oral sex but none just after I had planted my seed inside a woman. It was too late to stop now and Michelle was making no sign that she wanted me to.\n\nIn fact, I was bringing her back to life with my tongue and fingers. Her hips were rising and falling erratically, responding to whatever stimuli she felt. Her grip on my head tightened and I could feel her fingers in my hair. She was holding on tight, her body dancing to whatever music my tongue created. I flicked the tip of her clitoris and got the response I expected. Her hips snapped up in reaction.\n\nI was beginning to tire ... or at least my tongue was. Michelle was nearing another orgasm and I willed myself to continue. At last she let go and I could stop and rest. I crawled up beside her, lying on my back. She rolled over me and gave me a deep, soulful kiss. Whatever I had accomplished, she approved of it. I wondered if it was something her late husband had not provided.\n\nWe lay there for a while, her head on my shoulder, our legs dangling over the edge of the bed. I kissed her forehead and ran my fingers through her soft, flowing hair. Her hand was holding my now flaccid cock, not manipulating it, just holding it lightly. \n\n\"That was wonderful,\" she said at last. \"I didn't realize just how much I wanted you and you were perfect for me.\"\n\n\"We took some chances tonight,\" I said. \"That gown didn't leave much to the imagination.\n\n\"It was either that or I would just come out naked. It was a coin toss.\"\n\n\"Were you worried I wouldn't get the message?\"\n\n\"That thought did cross my mind. I can never be sure just what you are thinking about when it comes to women, Dex. Sometimes shy, but tonight a completely different person. You took command and I was the lucky one when you did.\"\n\n\"You were irresistible. I'm sure that was your plan, wasn't it? Well, it worked. I couldn't resist you so everything that happened was a result of that.\"\n\n\"You'll stay tonight, won't you?\"\n\n\"Yes. You might regret it in the morning but I do want to stay. I want to wake up with you,\" I said.\n\n\"We've started something, haven't we?\" It was more a statement than a question. \n\n\"I hope so. Is that what you want?\" I asked.\n\n\"Yes. As little as I know about you, as little time as I've known you, everything about you tells me that you are right for me.\"\n\n\"Well, we're going to have some time to find out so let's enjoy ourselves and see where it goes. I'm not a one-night-stand kind of guy. I'm looking for something more than that.\"\n\n\"You wouldn't be in this apartment tonight if I thought otherwise. But now that you're here I'm going to keep you here as long as I can.\"\n\nAfter a few minutes, Michelle rose and padded to the ensuite bathroom, closing the door behind her. She returned a minute or so later and crawled on top of me, rubbing my still limp cock with her lightly haired sex. Happily, I began to respond to her tantalizing little game and she noticed.\n\n\"Oh ... isn't that nice. Can I have some more please, sir?\"\n\n\"Of course you may. Just tell me your heart's desire, young lady and I'll try and fulfill your wishes.\"\n\n\"Well, after that glorious fucking you gave me in the kitchen, I think I'd like you to make love to me. Something nice and slow and lasting.\"\n\n\"How would you like me to start? A little foreplay, perhaps?\"\n\n\"I think I've had all the foreplay I can handle tonight, Dex. \"I'm still carrying some of you around in me and what I really want is to have you inside me once again.\"\n\nI sat up and moved myself to one side of the big bed and invited Michelle to join me. \n\n\"I want you on top,\" I whispered. \"I want to see you as you ride me. You can decide how fast or how slow,\" \n\nShe mounted me, her legs straddling me while her hand found my now erect cock and placed it at her entrance. She slowly pushed down on me and I slipped into her for the second time. It was just as superb as the first experience. She moved to put her hands beside my head and waved her wonderfully full breasts in front of my mouth.\n\nI couldn't resist. I nipped at them as they swayed back and forth, eventually catching one between my lips, tonguing the nipple to its aroused hardness. She pulled it away from me and offered the other breast for my pleasure. All the while, she was slowly rising and falling on my rigid member, clearly enjoying the sensations I was creating in both areas of her body.\n\nThe slowly measured pace she had chosen was inspired, sensual and very satisfying. Her eyes were closed some of the time as I watched her move over me. She was finding fulfilment at her own pace, perhaps in some dream world she had created. I moved my hands from her hips to her breasts and used my thumbs to gently stroke her small, pink nipples. I was rewarded with groans and hums of pleasure from her.\n\nThere was never a moment of urgency. It was like a slowly growing wave as it approached the shore, not crashing onto the beach but unfurling as it arrived, gently, quietly. Michelle smiled, probably to herself. I could see it on her lips and in her eyes when they were open. This was pure pleasure and not to be hurried but stretched out for as long as possible.\n\nWhen we finished, I was spent ... physically and mentally. All of this evening had been an unexpected, wonderful surprise. Better yet, I felt this was the beginning of something more meaningful for me. I didn't take her sexual surrender lightly. I had been chosen and I accepted that with that choice came responsibility. I wondered if she knew just how much I had found contentment with her. It was a completely different feeling from the twins.\n\nI awoke with my arm on Michelle's thigh and my face buried in her silken hair. The scent of a sleeping woman had always been an aphrodisiac to me and this morning was no exception. I was aroused and I'm sure if Michelle had been awake she would have known it. Once again, my erection was nicely tucked between the cheeks of her lovely bottom.\n\nHer arms were crossed in front of her denying me access to her breasts but it didn't matter. I was content to lie here in complete comfort as she slept. My hand found the smooth, soft skin of her tummy and without intent I found I was stroking her gently. At length she stirred and rolled onto her back. Again my hand rested on her thigh, close to her naked centre.\n\nI assumed she was in the process of waking. Her knees came up and her hands were between her thighs. She found my hand and I felt hers close over it, squeezing it gently. I watched her face for signs of waking and saw her eyelids begin to flutter. She groaned, letting her knees fall to the bed, her eyes now beginning to open.\n\nI placed my hand back on her upper thigh, massaging it lightly. She was awake now but I guessed she was disoriented. Who was in her bed? It must have come to her and she turned to me, smiling as she realized she was right.\n\n\"G'mornin' Dex,\" she whispered with a yawn.\n\n\"Mornin' Michelle. Sleep well?'\n\n\"Yes ... very well. Very nice dreams. Very sexy dreams,\" she said with a sleepy smile.\n\nI touched her cheek with my fingertips and slowly ran them down to her mouth. She opened and took them in, sucking lightly on them. Her hand took mine, holding it first before taking it to her breast. My thumb once again stroked the areola and nipple and she responded with a moan of pleasure. \n\nI think we might have lain there for several hours if it weren't for the call of nature. First Michelle and then me. I borrowed some of her mouthwash and then quickly returned to the bed. We laughed when we discovered each of us had done the same thing. Then we kissed a long, soft, tender kiss, one more suited to familiar lovers. It seemed just the right thing that morning. \n\nHer hand found my growing erection and she softly gripped and stroked it to life. I was fairly sure she'd need some lubrication and I moved to create some with my tongue once more.\n\n\"Oh, God yes, Dex,\" she cried as I began. \n\nShe had gone from a sleepy, languid state to arousal within seconds as I worked my tongue and fingers on her labia and, after a while, her clit. She was moving her hips and gripping my head just as she had done the evening before. Her response was becoming more urgent and I could sense she wanted me to enter her soon.\n\nI kissed and licked my way up her lovely, mature body until I reached her mouth where we locked onto each other with an almost desperate passion. And again she took me in hand and guided me into her, insistent on my satisfying her needs. \n\nI thought I would repeat the pace we had finished with last night but after a few minutes Michelle became much more insistent and demanding.\n\n\"More ... please ... more,\" she cried, driving her hips upward at me. \n\nI was sure I wouldn't last very long but it was what she wanted so I met her demand. I increased my stroke and pace and she reacted by grabbing my arms near the shoulders and rising even more insistently toward me. We were banging together at a furious rate that neither of us could sustain. I was at the breaking point and without much more than a strangled cry, I let go.\n\nI stayed as long as I could but soon enough I began to wilt. Drops of perspiration were falling on Michelle's head but she didn't seem to notice or care. At last, with one final lunge, she finished just as I was about to withdraw. Only luck could account for our timing.\n\nWe lay beside each other, panting as we came down from the high of our release. This was all new territory for me. Neither the twins nor my ex-wife were ever this demanding. Michelle was a completely different woman from the cultured, elegant lady I believed her to be. If this was what I had to look forward to in a middle-age love affair, I was going to have to prepare myself. A few more workouts in the exercise room were in order.\n\nShe was a woman of few words in the bedroom. No passionate cries of pleasure or crude demands. No empty love words in the heat of the moment. Her body in action was the voice that spoke of her approval.\n\nShe rolled toward me once more, placing her hand on my cheek, gazing into my eyes.\n\n\"You make me feel very young, Dexter. It's a very nice feeling that I haven't experienced in a long time. I think we are very good together, don't you?\"",
        "\"Yes. Very good. But right now I think we both need a shower. And as far as I can remember my clothes are still in the kitchen.\"\n\n\"There's no one to peek through the windows so you can walk around naked all day if you like,\" she grinned. \"I'll put your clothes in the wash and they'll be fresh and clean in an hour. In the meantime, if you insist on covering yourself up, there's a robe on the back of the bathroom door you can use.\"\n\n\"I thought you'd be kicking me out by now.\"\n\n\"What! Whatever gave you that idea? If I had my way you'd be moving in with me today.\"\n\n\"Might be a little soon for that, don't you think.\"\n\n\"Maybe. Let's give it a week,\" she laughed.\n\n\"I might have some bad habits you may not appreciate?\"\n\n\"Somehow I doubt that but I'll correct them as we go. Perhaps you just need a strong hand to guide you.\"\n\n\"Like the hand that you used last night and this morning?\"\n\nShe laughed. \"Yes. Exactly like that.\"\n\nChapter 10 Cohabitation\n\nI have to admit that I was somewhat distracted at work the following week. Thankfully, Terry and Petra had a good handle on the training and I wasn't really needed. If anyone knew I was involved with Michelle they didn't say anything. It wasn't as if I was trying to hide from it but then again I wasn't advertising that I was intimate with one of the partners. \n\nShe called me at work to invite me to the theatre and dinner. We settled on my meeting her at her place and then taking a cab. The tickets were for Friday night and it was a given that I would stay over at her penthouse. At least it was a given for Michelle. Who was I to fight it? I'd take an overnight bag with a change for Saturday and a backup for Sunday.\n\nThe play, a well-worn Agatha Christie mystery, was a delight. The actors, if not British, certainly had their parts down pat in the appropriate vernacular. The setting had been updated from the Victorian era to the nineties and the dialogue was a good deal more risqu\u00e9 but it was never vulgar and it was consistently good. We were in high spirits when we walked from the theatre to the nearby restaurant.\n\nI was more and more aware of just how comfortable I found myself in Michelle's company. She was a big part of that, of course. I never felt I had to behave in a certain way to live up to her expectations. She didn't act the part of the rich socialite. I couldn't imagine that she ever did, despite some of the company she and her late husband might have kept. She was a natural as the girl next door, whoever that might be.\n\nIt was nearing midnight when we arrived back at her apartment. I wasn't tired, in fact the opposite. The evening had been a real tonic and Michelle was showing no signs of fatigue either. As I closed the door behind me she slipped into my arms and kissed me. It seemed so completely natural that we would be together. I didn't feel any hesitation in responding to her or accepting that we belonged together.\n\nWe made love, that natural, quiet, flowing act of joining that you long for but don't always experience. It seemed to have lasted quite a long while but I wasn't keeping track and I really didn't care. It was so easy and satisfying that I didn't want it to end.\n\n\"Will you move in here?\" she asked as we lay in the afterglow.\n\n\"Do you want me to?\" I asked stupidly.\n\n\"No ... or course not,\" she laughed. \"You fool, Dex. Of course I want you to. I want you all to myself every night.\"\n\n\"Then I will. But it does ask a question.\"\n\n\"What question?\"\n\n\"What happens when my assignment is finished?\"\n\n\"Will that be soon?\"\n\n\"The truth? For all intents and purposes, I'm done now. Everything we wanted to accomplish at Trent is in place. The business is going to be fine now. Rueben will be a good general manager and Terry and Petra will make sure the design department stays on course. Janice, of course, will continue to be Janice. Wolf is already generating new work so I'd say I'm pretty well finished.\"\n\n\"But you're still here.\"\n\n\"I don't have another assignment and Dorothy has done a great job taking over for me in Vancouver. I'm thinking I might take a vacation if Tom doesn't have something for me. In the meantime, I've sold my home and my car and aside from my daughter, I have nothing to call me back to the west coast. I have enough money to live comfortably on for some time.\"\n\n\"But you'd move in with me, just the same?\" she tested.\n\n\"If you're serious about us, yes.\"\n\n\"Does that mean you're serious about us?\" She seemed uncertain about my decision.\n\n\"Yes. I know we haven't known each other for very long but something about how we connect makes this very different from a normal 'getting to know you' relationship. If you're willing, I want to find out just where we can go with this.\"\n\nShe looked at me intently, studying my face, her eyes unblinking.\n\n\"I want that too. You're right, this is all happening very quickly but like you, something about it feels right. In fact, it feels natural ... as if we've known each other for a long time. Strange, isn't it?\"\n\n\"Very strange but all good from my point of view,\" I smiled.\n\nI moved my few belongings to the Penthouse the next afternoon and cancelled the lease. I was now a \"kept man.\"\n\nIt was too nice a weekend to spend it entirely in bed so we took Michelle's car and drove around the metropolitan Toronto area, sightseeing and just spending time together. I thought that's what we needed ... time together. If I had any nagging doubt, it was related to how quickly all this was happening. We'd known each other little over a month since the picnic. It still felt right but just the same, my generally conservative nature was holding me back slightly.\n\nWe were sitting in a little Bistro Saturday evening, having a light supper when Michelle decided it was time to tell me more about herself and her marriage to David Gauthier. \n\n\"My maiden name is Catchpole. I hated it. I can still remember some of the taunts of my schoolmates. So I am happy with my married name. I married David when I was just twenty-one and able to do as I wished and not as my mother demanded. I was the only daughter in a family of five. My two brothers are older and we don't see each other very much. Martin lives in Montreal, and Michael lives in Calgary.\n\n\"Martin is gay and has a live-in lover whom I've only met once. We get along fine but we don't have much in common. He's a graphic artist and does quite well I understand. Michael is married with one son and works in the oil industry. I don't know exactly what he does but apparently he's fairly high up in his firm. He takes after mother in many ways. So both my brothers are successes.\"\n\nShe stopped for a moment a I saw a far away look for a few seconds before she returned to her narrative.\n\n\"David was a very dynamic personality. He had a clear vision of what he wanted when he graduated from university and he set about achieving it, dragging me along with him.\"\n\n\"Dragging?\" I quizzed.\n\n\"Virtually. His ambition to own his own civil engineering and consulting firm consumed him first and foremost. He worked long hours and was relentless in achieving his partnership in Trent. When he did, I thought things would calm down a little and we could live a normal life but it wasn't to be. 'Success breeds success' he would chant. \n\n\"When things started to decline at Trent he worked even harder, as if he could turn it around by himself. He couldn't, of course, but it didn't stop him from throwing all his energy into trying. It finally killed him. He had a brain aneurism one morning at the office and he was dead before his head hit the desk.\n\n\"I grieved. He wasn't the ideal husband. He wasn't there all the time, emotionally or physically. But he was true and faithful and dedicated to us, the boys and me. He just didn't have enough time for us. I hated Trent for what it did to him but, in a way, I understood how he could be obsessed with its success. It was all part of his original plan for the future. He made an awful lot of money and yet never got to enjoy it.\"\n\n\"And that was three years ago?\"\n\n\"Almost. It seems like yesterday at times and at other times it seems like ancient history. I suppose it depends on my mood. Since you've come along I haven't been dwelling on the past. In fact, I've been thinking about the future, just like you have,\" she smiled.\n\n\"You said you have two sons. Where are they?\"\n\n\"Carter works for his Uncle Michael in Calgary and I'm told he's on his way up. He's a chemical engineer, which upset his father. David was sure Carter would take up civil engineering and follow in his footsteps. I think Carter is a little better balanced than David was at that age.\n\n\"Our other son, Kyle, is single and living in Montgomery, Alabama. He works for a big paper company in their development department. They specialize in making products from recycled paper so they are high on the 'good guy' list with environmental people. Kyle says it's a good thing most of the advocacy groups don't know much about the recycling processes. They wouldn't be quite so supportive,\" she grinned.\n\n\"So your family is spread around then,\" I said. \"Are your parents still alive?\"\n\n\"Yes. My mother and father are divorced. Dad couldn't handle Mother's manipulative ways any longer and they split up after I married. He lives on the beach in Amherstburg, not far from Windsor-Detroit. He loves it there and has a girlfriend that lives with him.\n\n\"My mother and I don't see each other at all. She and I don't get along and haven't since I married David. In her opinion, I married 'beneath myself.' Sounds very English, doesn't it? Well, no surprise, my mother is English and still clings to the old class system.\"\n\n\"So ... you've been alone since David died?\"\n\nShe nodded. \"I thought for a while that I probably would be alone for the rest of my life. I don't know why. I'm forty-five, hardly dowager material,\" she smiled. \"I had been thinking about getting out and trying to find a new life for myself, whatever that means. I had become interested in the fate of Trent Engineering when your Tom Yardley and Wolf called to invite me to discuss a merger. I thought it was important to get myself up to date quickly.\n\n\"John Flannery rejected the idea of course, but I knew that if he was the only dissenter, Rueben, Dick and I could out-vote him. I'm not dependent on Trent for my future but I wouldn't want to see it fail so why not get involved? I'm glad I did. It gave me a sense of purpose, something to preserve what my David had worked so hard to build.\n\n\"Your principals were very nice men and, with the exception of John, we all got along very well. When they made their proposal, John stomped out of the room claiming he'd never agree to anything that would hand over control to a 'bunch of cowboys.' It would have been funny if you didn't know what was eating at him.\n\n\"Rueben, Dick and I met privately and discussed the proposal. In reality, we knew we couldn't save Trent by ourselves. We needed help and Pinecone offered that help. In addition, we were offered autonomy to run the business in a manner appropriate to the values of the old Trent organization. Naturally, we needed to coordinate the accounting, design and administration, but the Trent name would be preserved because it had value. It took us very little time to decide that this was in the best interests of both ourselves and our employees.\n\n\"John, of course, was livid. We had outvoted him and he took it personally. But we stuck to our guns and the merger/acquisition went through. We were no longer the majority partners but we weren't an afterthought. Besides, all our background checks on Tom and Wolf came up the same. They are talented, aggressive and honest. They do what they say they are going to do and are well respected in the community. Your competitors spoke highly of Pinecone, which counted for a lot as well.\n\n\"Then, the next thing I hear is Janice telling me there's a new sheriff in town and he's making changes. Good changes. You had her on your side right from the get-go. I think that's what intrigued me about you in the first place. Janice isn't some silly girl who's easily swayed by a handsome man. So, after her mentioning three or four times what you were doing and how well you were doing it, I decided to find out just who this Dexter McLeod character was,\" she smiled.\n\n\"So, what did you think when you walked into the University Club that day?\" I asked.\n\n\"I thought I had the wrong table. You didn't look anything like the mental picture I had of a computer guy. In fact, you looked like a professional businessman, completely at home in that club. It was then I realized what Janice had been telling me.\"\n\n\"Oh ... and just what had Janice been telling you?\"\n\n\"She said, and I quote, 'You've got to meet this guy. He's a stud.'\"\n\nI laughed. \"I'll have to remember to thank Janice for being so generous with her praise.\" \n\n\"So here we are,\" I added after a quiet moment. \n\n\"Your turn,\" she said. \"I know some things about you but not an awful lot.\"\n\n\"Well, we have some things in common. I have a son in Chile ... he's a mining engineer and a daughter in Vancouver who's an interior designer. Both are in their early twenties. I was born in Vancouver and went to school at BCIT, the technical college. I was one of the first graduates on CADD systems so I got in on the ground floor. From there I got on with Tom and Wolf not long after they started up and I've been there ever since.\n\n\"Most of the changes in my life have happened within the last two years. I found out my wife was cheating on me and planned to leave me and take whatever she could get her hands on. I was very angry and took some preventative measures to mess up her plans.\"\n\n\"That doesn't tell me much, Dex. What prompted her to do that?\"\n\n\"I don't know and I don't think she does either. It wasn't hormone imbalance or drugs or any of the other usual medical excuses. She's undergoing psychological therapy and maybe that will get to the bottom of it but it won't make any difference. Her actions were so cold-blooded over a year than I can't bring myself to excuse anything she did. Having an affair was one thing. Planning to take every dollar she could from me was quite another.\"\n\n\"But that was two years ago, Dex. Your divorce is only going through now. What happened?\"\n\n\"I ran. I didn't want Sandra and her lover to succeed so I concocted a plan to minimize the damage and ran. Tom helped me by making it look like I had quit Pinecone and disappeared. In fact, I was the site rep at one of our projects in the Caribbean.\"\n\n\"I take it your plan worked?\" \n\n\"Yes ... but in the end, it wasn't really necessary. Turned out her lover was embezzling funds from some of his clients and was arrested and charged. That put an end to their grand scheme.\"\n\n\"But you said you had no regrets about leaving,\" Michelle reminded me. \n\n\"I don't. It was the best thing for me. It let me get my head around what had happened and what I might do about myself in the future. So when the job was done, I went back to Vancouver to settle things. Sandra hadn't initiated a divorce so it was up to me. To make a long story short, I made her an offer and she accepted it.\"  \n\n\"Are you still angry with her?\"\n\n\"Yes ... from time to time. She destroyed something that I thought was good. She took away my beliefs and my personal foundation. I knew almost right away that I could never take her back. The two years since has been a relief. I got my self-esteem back and my confidence. It didn't hurt that Tom and Wolf had this job for me and my promotion. Then ... you came along.\"\n\n\"And I'm good for you too?\" she asked, putting her hand over mine.\n\n\"You know it. I'm still dizzy from how quickly we have come together. I'm trying to understand how I could do what I did that evening in your kitchen. There's nothing in my makeup that could account for my behaviour that night. But ... having said that ... I have no regrets. Not any more.\"\n\n\"Good. I don't want you to have regrets. I'm glad you took me the way you did. It changed what I thought about you. You weren't shy and yet you weren't some guy who thought he could do what he wanted with me. It made you a bit mysterious in a way. You somehow knew what I wanted ... needed ... at that moment. I wanted to be taken and you did.\"\n\n\"Completely out of character for me but ... looking back ... I don't have any second thoughts,\" I admitted.\n\n\"Neither do I,\" she smiled faintly. \"It was perfect. Afterwards was just as perfect. In some way, we communicate our desires. I don't quite know how but it doesn't really matter, does it?\"\n\n\"It only matters that we do,\" I agreed. \"We don't say much when we make love, but we seem to understand each other's wants very well.\"\n\n\"I'm going to want to explore that special kind of communication,\" she teased. \"I think we need a good deal more experience, don't you?\"\n\n\"Now that you mention it, I agree. We do have a lot to learn about each other.\"\n\n\"What have you decided to do about your job?\" \n\n\"I'll phone Tom on Monday and let him know I'm almost finished here. He'll be happy. I'm almost two months ahead of his schedule and that will keep us under budget. He'll let me know if he has another assignment for me. If not, I'm thinking vacation with a very nice companion. How does the south of France sound?\"\n\n\"I've never been there. I'd love to go, especially with you. But what if Tom has another project for you?\"\n\n\"Maybe you'd like to come along with me if it's not in some hell-hole. I really don't want to lose you this quickly. I'm hoping Tom will understand.\"\n\n\"Why don't you let me decide if it's a hell-hole,\" she smiled. \"Besides, I can't see Tom or Wolf treating their most valuable Vice President that way.\"\n\n\"We'll find out quick enough. In the meantime, I plan to spend as much time with you as you can stand.\"\n\n\"I have a very high tolerance threshold for you,\" she boasted with another of her genuine smiles.\n\nI called Tom on Monday morning just after ten. I had a question to ask and some explaining to do.\n\n\"Hey, Dex. So how was your weekend?\" \n\n\"Very nice, Tom. About as nice as it could be.\"\n\n\"Oh ... that sounds interesting. Should I assume there's a lady involved?\"\n\n\"Of course. What else would cheer up an about-to-be divorced guy living in a strange city?\"\n\n\"Should I also assume that the lady in question is one of our shareholders?\" he chuckled.\n\n\"Can't fool you, can I. Yes ... I moved in with Michelle this weekend. If you were looking to define a whirlwind romance, this would be it.\"\n\n\"So ... what's your plan?\"\n\n\"That's what I was calling you about. What's your plan?\" \n\n\"I'm happy with the way things are, Dex. You are handling the situation in Toronto perfectly. If you want to stay and supervise the whole operation that would be great with both me and Wolf.\"\n\n\"I don't think that's going to work, Tom. Rueben and Dick are both major shareholders, unlike me. As much as we get along very well, I can't see myself being their boss.\"\n\n\"Okay, time for the facts of life, Dex. Rueben and Dick are both engineers, like Wolf and me. They are busy with their day-to-day jobs and don't really appreciate or have time for the administrative side. I have it on good authority that they would welcome someone to take that burden off them and that unnamed person would get their full cooperation.\"\n\n\"Unnamed?\"\n\n\"Well ... to be truthful ... they did mention your name as the one person they would be most comfortable with.\"\n\n\"So ... this is a set-up ... right?\"\n\n\"Well ... I wouldn't put it quite that way ... but I guess you might see it in that light.\"\n\nHe had me laughing at the transparency of this ploy. He knew about Michelle. He knew that the project's status was, for all intents and purposes, complete. On top of that, he knew I would only accept the new post if Rueben and Dick agreed. I guess that's why he's the boss.",
        "\"Would you mind if I took some time off before I started my new assignment?\"\n\n\"I think you've earned a nice vacation, Dex. Take that lady of yours with you and have some fun in the sun. Meanwhile, Wolf and I will dream up some work for you when you get back.\"\n\n\"Thanks, Tom. I'll let you know my plans as soon as they are finalized.\"\n\nI hung up and immediately called Michelle.\n\n\"Looks like I'm going to be resident in Toronto for the foreseeable future. Tom wants me to take over the corner office and apparently I have Rueben and Dick's blessing.\"\n\n\"Wonderful!\" she exclaimed. \"But what about that holiday?\"\n\n\"Why don't you start planning one and I'll make myself available.\"\n\n\"Perfect! The south of France, right?\"\n\n\"Maybe we should talk about this when I get home,\" I suggested.\n\n\"Home? This is home for you?\" She sounded taken aback.\n\n\"Oh ... uhhm ... am I being presumptuous?\" \n\n\"No ... No! You just surprised me, that's all. I didn't expect you would think of this as your home. I mean ... it is ... but ... I guess I have to get used to the idea,\" she stammered.\n\nI chuckled at her discomfort. I had used a long familiar term for wherever I lived and I caught her off guard.\n\n\"If we are going to live together, then it will be home,\" I said simply.\n\n\"Yes ... it will be ... won't it.\" She was beginning to recover from my comment.\n\n\"Are you uncomfortable with my being there?\"\n\n\"No!\" she said immediately. \"No ... I'm very happy that you're here. I'm just trying to get used to the idea that I won't be alone any more. I don't think I quite believe it yet.\"\n\n\"When I show up sometime before six o'clock, will that be proof enough?\"\n\n\"Yes,\" she giggled, finally seeing the humour in our conversation. \"Just don't waltz in here with 'Honey, I'm home,\" please.\"\n\n\"I can't. I don't have a key and you'll have to supply the elevator code.\"\n\n\"Oh ... I didn't even think of that. I'll look after that this afternoon.\"\n\n\"Then can I say 'Honey, I'm home?'\"\n\n\"No ... I refuse to be June Cleaver,\" she laughed.\n\nWe ended the conversation with my having to get back to work and promising to be home before six.\n\nWhen we hung up, I realized neither of us had said \"I love you\" yet. I thought about it for a while and knew we weren't there yet. We were somewhere between like and love. Whether we got to love was yet to be determined.\n\nTo be continued\n\nMy thanks to ErikThread and DaveT for their excellent editing and helpful suggestions. Any errors are mine alone."
    ],
    "authorname": "coaster2",
    "tags": [
        "loving wives novella",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/dexters-renaissance-ch-09-10"
}