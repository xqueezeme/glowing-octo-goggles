{
    "title": "There and Back Again Ch. 132",
    "pages": [
        "Chapter One Hundred Thirty-Two: Unpleasant Surprises\n\nI spent one very long, very trying week at Soldier's Peak. I had meetings with Levi, Avernus, Faren, Jowan, and Mhairi. Avanna, being both older and more experienced than Mhairi, should have been put in charge of the guard at the Peak, but Mhairi's organization and effectiveness had impressed both Faren and Levi. And Avanna had requested, instead, to become my personal bodyguard, and the head of Alistair's and my personal security details. It would be her job to find and screen applicants to work with her, as she would need help to cover the both of us, potentially day and night when we were on the road or away from home.\n\nI wondered what Alistair would think of having a security detail. Who am I kidding? He's going to hate it, even if everyone else agrees it is necessary. I wasn't entirely comfortable with the idea either, but couldn't really come up with a valid argument against the combined pressure of Loghain, Levi, and Avanna.\n\nAvernus was doing research -- slowly, with his advancing age and declining health -- and Jowan was learning much from him. The unlikely pair of mages had developed a bit of a paternal relationship, which made Avernus seem much less ghoulish, and much more human. Avernus didn't have anything new he needed me to know, so the meeting was short, though he listened curiously to my retelling of my fight against the Archdemon's general. He was incredulous that the Fereldan Wardens had separated from Weisshaupt; his shock wasn't surprising, given that his degree of ruthlessness seemed to match theirs. But when offered the choice to leave and go to Weisshaupt, he immediately, resolutely refused.\n\n\"I won't survive the journey, most likely,\" he explained, his voice whispery with age. \"Besides, I've been here for two centuries. I'm not leaving now.\"\n\nI was introduced to many of Levi's extended family, and they all seemed like good people. In return for a small salary and a place to live and work, Levi's brother Mikhael agreed to outfit the guard with weapons and armour if I provided the raw materials; when he wasn't doing that, he was free to do private commissions. His work was exquisite, and like Wade who'd moved to Amaranthine, I knew he'd have no shortage of patrons. Numerous other Drydens were either merchants, bringing in the much-needed supplies, or working in the Keep itself.\n\nMy quarters were a surprise, inside Soldier's Keep: there was a small wing set aside for me, with four bedrooms, a small dining room, a sitting room, and a couple of other empty rooms I would be able to put to whatever use I chose. My bedroom was large, with a massive four-poster bed -- I wondered how they'd gotten that through the tunnels -- as well as two comfortable chairs by the hearth and a bathing room. My window had a lovely mountain view, actual glass in the pane, and a thick velvet curtain to keep in the warmth. There was a private balcony, with thick well-sealed doors to keep drafts out; being on the backside of the Keep, it would be a lovely, private retreat where no one could see me, though the cold air would prevent me from using it often. A second bedroom was attached -- presumably in case Alistair and I chose to sleep apart, which would never happen if I had anything to say about it -- but I kept the adjoining door closed and locked. There was a guard assigned outside my wing to keep out any unwanted visitors, and a maid who would be dedicated to me when I was in residence.\n\nAll alone in the large room and luxurious bed, I was miserable and lonely.\n\nIt took me most of the time I was there to convince the maid Levi had hired -- an elf named Maeve, who was probably ten years my senior, but looked twenty, thanks to a hard life -- to call me by my first name and stop curtseying every time I turned around, but it was worth the effort. She was both funny and very down to earth, and I knew I'd need someone like that to keep me feeling grounded in the years to come. She shared the local gossip with me, to my amusement. I convinced her to spread the word, both to the servants, the guards, and anyone else she could think of, that abuse would not be tolerated -- not towards elves, women, children, or anyone else. I wasn't convinced they were likely to come to me with concerns, but I thought Maeve, who appeared to have warmed up to me considerably, would at least try.\n\nLoghain, Bel, Jowan, and Faren spent some time sequestered and talking 'Warden business'; the two dwarves were shocked to see the man who'd supposedly been banished to Orlais, but seemed more grateful than bothered. When the four of us met, Faren mysteriously suggested I 'gear up', and then refused to tell me anything else until I had changed into my armour, my daggers sheathed at my hips. He led the rest of us through a warren of corridors, dusty and long-unused, and down several sets of stairs until we were clearly well below the Keep's normal basements. I glanced into as many rooms as I could as we passed, seeing mostly dilapidated furniture thrown haphazardly about, combined with boxes and crates that had so much dust they were barely recognisable. Clearly we're going to have our work cut out for us...\n\nI followed the dwarf past dungeons and areas of collapse that were completely inaccessible, before finally reaching what he'd obviously been aiming for all along: an enormous, round, metallic door built right into the wall of the keep.\n\n\"A Deep Roads entrance?\" I paled, looking at the intricate mechanisms -- intact and apparently functional, thank the Maker -- and then back at the dwarf, who shot me a grim smile.\n\n\"Couldn't very well be a Warden facility without access to darkspawn, now could it?\"\n\nI sighed, slumping back against the wall behind me. \"Is it secure? Will it need guarding?\"\n\n\"Nah, it's safe. I went a ways down the tunnels, just to see what was there -- couldn't sense any darkspawn. Don't think this entrance has been used in centuries.\"\n\n\"Well, that's something. So I'm going to be living with a Deep Roads entrance in my basement? Fabulous.\"\n\n\"There's something else, though.\" Faren turned and pulled on the lever that would open the massive door.\n\nI fingered the hilts of my daggers. \"Of course there is. What now?\"\n\n\"Easier to show you.\"\n\nGrabbing one of the arcane lamps, Faren led us a few hundred feet down a straight tunnel; I couldn't feel any nearby darkspawn, though as all Deep Roads tend to, the sensation of the taint radiated from the very walls. At the first branch, we turned right, ducking through a narrow opening into a vast chamber. The ceiling was high, though compared to the length and depth of the room, it felt close anyway. The far walls were barely visible even in the bright lamp-light.\n\nIt took me a moment to understand what I was seeing as I looked around the room: there were bars, some forming boxes and some from floor to ceiling, many rusted and some bent or fallen entirely. Cages, I realised. Dozens of them. Small ones, the size of a mabari, maybe, and larger ones big enough for a person -- or hurlock, judging from the corpse shrivelled up in the corner of one -- as well as two massive structures with extra-thick reinforced bars, big enough for...\n\nOgres. Someone had, at some point, kept ogres in cages. What in the ever-loving hell for?\n\nI looked around a bit more; there were tables covered in paper near one of the smaller cages. I tried picking up a piece, only to have it fall to dust in my hand. The few intact sheets left on the table were so yellowed with age as to be unreadable.\n\n\"Was this Avernus?\" I asked, still shocked.\n\n\"He says no,\" Jowan replied. \"When Faren showed me this, I asked. Said it's been down here longer than he's been alive, which, given he's two hundred years old, is saying something.\"\n\n\"What the hell went on here?\" I wondered.\n\nFaren, pointing at what looked suspiciously like an arena, shrugged. \"No idea, but figured the bosses would want to know.\"\n\nSlowly we returned to the keep, my mind racing with possibilities. \"And you found nothing else?\"\n\n\"Just empty tunnels,\" the dwarf replied. \"I went far enough I couldn't sense Jowan anymore, and figured I'd better come back.\"\n\n\"When all the Wardens are here, maybe we can mount an expedition,\" I speculated. \"For now, leave that door closed, you hear me?\"\n\nBel, Jowan, and Loghain, the three Wardens who would be left behind, all nodded. Faren closed the dwarven door with a resounding bang.\n\nLoghain cleared his throat. \"I'd suggest you clean out and block off these rooms, and post a guard at the end of the hallway. These doors may be solid, but if darkspawn ever got into the keep...\"\n\nI nodded resignedly. \"What's one more guard patrol?\"\n\nAs we headed back up to my office -- a large room with a desk, hearth, and small sitting area -- Faren told me he'd spent some time exploring the mining tunnels leading to Soldier's Keep as well. \"Most of 'em are dead ends,\" he explained. \"Miners hoping to find a vein, and failing, or veins already mined out. Two or three lead to viable ores -- I marked those ones. If you could hire some miners, Mikhael would have all the materials he needed. I saw iron, veridium, silverite...even a bit of aurum.\"\n\nThat's certainly good news...I was hoping we wouldn't forever be reliant on Cailan's charity. \"Excellent. Wonder where I can find miners?\"\n\n\"Orzammar. There's plenty of surface-caste miners. I'd write to that Smith-caste fellow you have making those bola-launchers. He'd know.\"\n\nI slept poorly that night, dreaming of mad scientists, darkspawn experiments, and ogres. I woke screaming, grateful I'd convinced Maeve I didn't need her to stay in the little room set aside for servants. I had an enormous, comfortable bed -- but without Alistair in it to chase away my nightmares, I was miserable. It didn't help that my period had come -- though I supposed the timing of that wasn't terrible, at least.\n\nThe next day I toured the rest of the fortress, Levi showing me the wings he'd converted into barracks for my guards, as well as the areas set aside for Wardens. There were single rooms, each with beds and wash stands, like those we'd stayed in before, but he also showed me a wing currently undergoing renovations of what would eventually be little apartments for families, some with two or three bedrooms, all with small sitting rooms. And there were several more floors and wings he hadn't yet begun clearing, making me wonder just how many Wardens had once been stationed at Soldier's Peak.\n\nOver the next few days, Levi and I made plans for the rest of the Peak. After some discussion with Mhairi and the soldiers, we decided to build a small tavern and inn where the old, dilapidated buildings had been torn down; it would provide entertainment for the men, as well as places to stay for visitors who couldn't -- or wouldn't -- stay in the Keep. When we discussed who would run it, I had a brilliant idea, and resolved to speak to Oghren about Felsi when I returned to Amaranthine.\n\nI gave Levi free reign to manage things as needed until I returned, within a few hard-and-fast guidelines. I wouldn't allow racism or sexism; he was to hire the best person for the job, and I hoped we'd have a few elves join the guard as well as the Keep's staff. They were to be paid equally and fairly, their lodging provided, with no preference given for any race. Each servant and guard was to have time off if they wished, at least every few months, to return to wherever they'd come from and visit family. And family members of existing personnel would be at least considered for any position they were qualified for.\n\nLevi was anxious about my proposed salaries, much higher than was typical for the type of work we had to offer. However, I insisted. I wanted people to want to come to Soldier's Peak, both to make up for the isolation of their posts, but also as an example to the rest of Ferelden. Back on Earth I had seen enough companies go under due to undervaluing their personnel; when you needed to save money, cutting salaries was the last way to do so. Conservatives were convinced that trickle-down economics was the way to go, but after dismantling multiple businesses, I knew better. Economies were built from the ground up.\n\nLevi, Mhairi and I scheduled guard rotations so watch was kept at all hours of the day and night. The guards were to patrol the basement, the tunnels, and the Keep's grounds, and Bel or Loghain were to check for darkspawn at least a couple of times per day -- without opening the great metallic door. We also scheduled combat training for each guard at least weekly to keep everyone in fighting form.\n\nBel was remarkably serene about being left at the keep with just Jowan, Avernus, Loghain, Levi, and the soldiers and staff for company. I wondered if he had a bit of a crush on Mhairi; his stutter was gone, with Leliana's training, but it returned with a vengeance every time he spoke to the buxom brunette.\n\nJowan was still happy working with and learning from Avernus, and had no complaints being left at the keep. I worried he and Loghain wouldn't get along, given how they'd originally met and Loghain's disdain for magic and especially blood mages, but they seemed to settle into a friendly enough working relationship, both assuring me they could work together for the good of the Wardens.\n\nFaren was chuffed to be returning to Amaranthine. The dwarf had done good work at the Peak, some of which a non-dwarf couldn't have managed -- evaluating the mines for ore, for example -- but he was a gregarious fellow who missed the camaraderie of the rest of the Wardens. I looked forward to a time when, the Architect and the Mother both dead, all of the Wardens would be based out of the Peak.\n\nI had never been so happy to get back on the road, once I was finally ready. Levi had his instructions, the soldiers were patrolling and training, the myriad staff were clearing out and readying the rest of the Keep, the builders were building, and I had a to-do list the length of my arm for once I got back to Amaranthine. I put on my armour, bid Maeve, Levi, Avernus, Bel, and Loghain farewell, and mounted my horse, with Faren, Avanna, and the group of Nate's soldiers who'd accompanied Bel to the Peak following me on foot. We left Loghain's horse at the Peak; Faren didn't ride, we didn't have enough horses for all the soldiers, and Avanna felt it better she walk with the others.\n\nAvanna and Loghain had insisted I ride, to my chagrin; apparently it was inconceivable a 'lady' would walk, armoured or not. I wish they'd seen me during the Blight -- covered in darkspawn blood, sleeping on the ground, hair full of leaves and twigs...maybe then they'd leave me alone. This nobility tripe is for the birds. Loghain had dryly suggested that I had a choice: ride, or he'd tie me up and throw me in a cart. Avanna laughed, but I was less than amused at his wry sense of humour.\n\nOur trip was expected to take about five days. Going on foot, our pace was slow -- a fact that chafed at me, given how desperate I was to see my husband, brother, and friends again. Especially Alistair; I'd had more than one erotic dream, scattered between the more frequent darkspawn dreams I'd been having, and I was frustrated beyond belief.\n\nThe trip through the tunnels was uneventful; Faren pointed out the dimly lit side tunnels which led to useable ores, and I made mental notes so I could approach the dwarves for miners. I was happy when we made it through, though; while winter was approaching, once we were out of the mountains, the weather was still warm and we were all able to shrug out of our warm clothes and enjoy the sunshine.\n\nI fell off my horse twice that day. Apparently a week without practice was all it took to turn my hesitantly increasing competency back into complete ineptitude. I walked for a while, discreetly collecting herbs for healing potions, trying to ignore Faren's good-natured teasing.\n\nAvanna shared my tent, as Loghain had, with Faren's nearby, and the first night was quiet. The second night, darkspawn dreams -- for both Faren and I -- kept half the camp awake, and we were all a little groggy and worse for wear the following day. Faren admitted he'd been having steadily increasing darkspawn dreams for the past few weeks, and it worried me -- we'd been led to believe they would improve dramatically after the Blight, and they had for the first few months. What could possibly have changed?\n\nIt was while we were eating lunch the second day, in a small clearing just off the main road, that I first felt it: darkspawn. Faren and I exchanged horrified glances, but the dwarf was quick to dismiss it.\n\n\"Just a raiding party, I bet. I can only feel a couple. We'll get the Commanders and come back to clear them out once we get to Amaranthine.\"\n\nI nodded, my senses in agreement; there was only a small group to the north. We decided not to tell the soldiers travelling with us, hoping to avoid a panic. But within another hour, it became clear we had a much bigger problem. A larger group to the south and three more clusters to the east joined the first group we could sense, and as all of them drew closer, my size estimate grew. There must have been over thirty darkspawn between the five groups. The only saving grace was that I couldn't feel any ogres.\n\nAs it became clear we were being surrounded, I dismounted suddenly, startling the dozen soldiers travelling with me. I scanned the soldiers, calculating our odds of escaping, or fighting our way out. Faren's grim expression didn't look any more hopeful than I felt. Twelve soldiers, as experienced as they were, plus one Grey Warden and me, had slim chances against so many.\n\nMy heart skipped a beat, realising there was a very good chance we were going to die. Alistair, I'm sorry. What the hell are this many darkspawn doing away from Amaranthine?\n\n\"Darkspawn,\" Faren announced to the group of curious soldiers; I was relieved at least that instead of panic, all of them tossed down packs and drew weapons like the professionals they were.\n\nFaren sidled up to me, murmuring quietly so only I could hear, \"The way back is the only clear path. Think we can make it?\"\n\nI shook my head. The groups I could sense were moving fast, and that window was about to close. But it gave me an idea. \"Avanna,\" I called.\n\nThe heavily armoured warrior approached anxiously, her gaze flitting back and forth from my bleak frown to Faren's equally hopeless visage. \"Yes, my Lady?\"\n\n\"How well do you ride?\" She was the only other woman in the group, the one I'd most want to keep out of the hands of the darkspawn, and if she was a good equestrian, she might be our only hope.\n\n\"Quite well, though it's been a while.\" Her suspicious gaze swept across us both again.\n\nI started pulling gear off of Sadie's saddle. \"You're going to mount up, and ride like the Archdemon itself is chasing you. Ride back to Soldier's Peak, send a message to the Vigil, and then bring everyone that can be spared. The Warden Commanders need to know there's about thirty darkspawn roaming the countryside out here.\"\n\n\"But...\"\n\n\"No. We don't have time. You need to go.\"\n\n\"But, my Lady...\" She resisted me as I tried to chivvy her onto the horse. \"I have to protect you.\"\n\n\"You should be on that horse,\" Faren growled. \"Get away and bring help.\"\n\n\"I'm not a good enough rider!\" I snarled, trying to boost the heavily armoured woman into the saddle. \"And two on the horse will slow it down too much. This is an order, Avanna. As the Steward of Soldier's Peak, I'm telling you, get on the damn horse. Get out of here. Ride. Ride!\"\n\nI turned Sadie back towards Soldier's Peak and brought my hand down hard on her flank. I breathed a brief sigh of relief watching her gallop away, before reaching into the small pocket in my armour and fingering the tiny poison pill I'd forgotten to remove after the fight in the Vigil's basement.",
        "\"Not yet, damn it,\" Faren grumbled, slapping my hand away when he saw what I held.\n\n\"No, not yet. But I'll never be a broodmother, Faren.\"\n\n\"You need to get out of here. They won't be able to see you -- just sneak away.\"\n\n\"If you think I'm leaving you all here, you don't know me that well. I'll stick to the periphery, try to take out emissaries and archers, and if all is lost, I'll get away...but I won't run away without fighting. I'm probably the safest person in this clearing.\"\n\nWith that, I turned back to my soldiers and ordered them to form up to face the enemy I could feel approaching. I drew my daggers, standing off to the side where I wouldn't be hit by arrows aimed at the soldiers; the only advantage we would have was my invisibility to the darkspawn, and I hoped to use it.\n\nIt took longer than I expected for the darkspawn to come into sight; they came at us from all sides simultaneously, showing much greater coordination than I could have imagined. That's not a good sign. There were mainly hurlocks, including several alphas, and one emissary. The creature, dressed in tattered cloth robes, stepped forward ahead of the others, raising its arm; the others paused.\n\n\"Be taking the Warden; kill the others,\" it declared loudly. \"The Father wants the woman. Be finding her!\"\n\nMy skin crawled. A sentient darkspawn, one of the Architect's, presumably...and it was looking for me. "
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-132"
}