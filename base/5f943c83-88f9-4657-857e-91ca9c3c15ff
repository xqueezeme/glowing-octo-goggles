{
    "title": "Quixotic Rapprochement",
    "pages": [
        "Notes [Initially released September 1, 2016, last revised October 22, 2016]:<ul><li>- All characters are the product of the authors' imaginations and are over eighteen.</li><li>- This is our submission for the Summer Lovin' contest 2016.</li><li>- French within context (often accompanied by translation) is sprinkled throughout this story.<li>- This is a complete but lengthy story with a slow burn, twists along the way and a tilt toward the end.</li><li>- Special thanks to Skye4Life for editing and feedback during completion of the story.</li></ul><hr>\"All\u00f4 Monsieur - Mister Rocinante? Bonjour, are you with us today?\"\n\nI dropped my pencil and snapped upright in my chair, as I suddenly realized that she was waving and gesturing to get my attention.\n\n\"Do I need to repeat the question?\"\n\n\"Sorry, Madame Soliel, could you?\"\n\nI surely deserved the question. I'd been day-dreamily drawing in the back of my humanities class. My pad contained a nearly complete sketch of a familiar looking woman with long curls of hair framing her face. I'd captured that same silhouetted form that stood before the class waiting patiently for my response. Hands upon her hips, she was illuminated by effervescent daylight streaming through the bottom portion of the tall windows that ran the length of our lecture hall. The half-lowered blinds added to the effect as the afternoon sun reflected oddly off the highly polished floor. I supposed that having her for both French and humanities gained me a little forbearance, when she rephrased the question. The lightly lilted accent her words carried enchanted me further, but somehow I withdrew from that infatuation and formed a coherent answer, which she accepted and then continued on with the lesson, occasionally calling upon other students.\n\nIt was a glorious spring day and a light breeze blew the flowering trees outside. The iridescence of the white dress she wore must have induced my stupor, because I usually paid close attention in humanities, since it was one of my favorite classes. Today, however, my mind had flitted between the spring weather outside and my professor's feminine contours. The way the sun was beaming in through the partially lowered blinds, accentuated her long flowing white sunlit dress and it captivated my gaze entirely as I refocused intently upon her while my hand continued working the pencil.\n\nThe lecture wasn't boring, it was about the height of the European renaissance and she brought a distinct French flavor that made it very interesting with lots of side references. That era fascinated me deeply; it seemed to be the seed that had germinated into our modern culture. My thoughts today were mixed with wishing I could have experienced that period and how her striking beauty seemed to personify any number of the women we'd seen, captured within paintings or sculptures shown during the lecture, somehow brought to life in front of us.\n\nAt some point, she regarded me drawing and observing her as she finished describing the slide and paused before proceeding. The room seemed to disappear and our eyes locked. I knew I was staring, had been staring, was continuing to stare, but I couldn't help myself. There was some type of mental block that prevented me from looking away. She knew I was agaze and there was the smallest trace of a blush upon her face as she turned her attention back to the next slide in her presentation. The darkened room contributed to the translucency of her dress that had so captured my attention. Her form beneath it was clear in the brilliant sunlight and I couldn't avert my vision away as I continued to fill in details of my sketch.\n\nThe rays of light danced in her long golden curls and shone off her alabaster skin as she turned to the class after each slide. A small pang of loss seemed to encroach upon my thoughts each time my view of her visage was interrupted as she'd turn her back to us to describe in detail, every nuance of the art depicted. Her words were soft and alluring as she gently strode to and from the front of the class. She'd extend the pointer to the projection screen as she softly caressed along the shapes and artists strokes. Slide after slide she continued the lecture; each new slide seemingly more profound than the previous. She was a graceful raconteuse who lithely led the class towards one of her renowned climatic finales.\n\nWhen the lecture was over, I saw her staring at the finished sketch I'd drawn of her. Embarrassment instantly spread warmth throughout my body and face. When she finally looked up with a perplexed expression, I felt momentarily immobile as if the force of our eyes locking had effected my entire being. Fortune had her attention redirected by another student asking her a question, which allowed my escape as I fumbled closing my notes for several protracted moments and quickly hurried from the hall. Urgency directed me on instinct alone towards my next class. Blinded by tension building inside me, I could only process the path directly in front of me as I replayed the incident over in my head endlessly. I was nearly halfway across the quad, when someone grasped me gently by the hand. Then suddenly, time froze and I found myself turning in slow motion to discover her there as if delivered from a dream.\n\n\"Monsieur Rocinante, you seemed peculiarly distracted today. Is everything okay?\"\n\n\"Oh, no. I - um - I think it's this lovely spring weather,\" I answered, surprised by the interaction and her soft hand still holding mine.\n\n\"Are you certain that is all?\" she asked with that ever-present hint of French accent.\n\n\"Yes, Mrs. Soliel, I'm enjoying the course. It's very interesting - too interesting even. I just get so wrapped up in thinking about how it must have been. The renaissance had so much happening, people were into so many different areas of study and everything was new.\"\n\n\"Well, that was certainly so for the upper class.\" After a moment longer, she moved her hand to my shoulder. \"Did I perceive that your thoughts were elsewhere today?\" she asked demurely and blushing brightly as if she were surprised at her own question.\n\n\"Sorry Madame - um - sorry. I didn't mean any disrespect. I shouldn't have stared, it's just - uh - your dress today - it was - it is - beautiful. Mr. Soliel is a lucky man,\" I babbled the words out tactlessly. \"Sorry, I'm an idiot. I - I hope I haven't offended you,\" I offered, half expecting a slap.\n\n\"Your grades tell a different tale, but no offense taken,\" she added promptly, but then seemed temporarily speechless. Moments passed and she rattled off some nervous words, \"La fi\u00e8vre printani\u00e8re arrive. Perhaps this beautiful weather has made fools of us all. I shall see you in French, tomorrow; \u00e0 bient\u00f4t, Paul,\" she said, with what I could have sworn was a wink.\n\nWas it a wink? I wondered. Perhaps it had been the sun playing tricks on my eyes or a wishful thought I'd envisioned during my idle daydreaming. I regained my senses moments later, she'd said good-bye, but we remained standing there like two awkward debutants, wondering how to extract ourselves from this self-inflicted enchantment.\n\n\"Yes, it must be 'spring fever' as you say, until tomorrow Mme.\" I agreed, as I finally attempted to break the spell and started turning to leave.\n\n\"Could I see it again?\" she asked quickly before we parted.\n\nI carried the thick leather wrapped pad everywhere with me; I didn't think I had much talent, but I'd always drawn. This pad was maybe my tenth or eleventh since I'd started drawing things as a child. I'd even taken a few art electives, before I'd decided to select business as my major. I pulled it from under my arm, flipped to the middle and leafed through several other pictures until I reached hers.\n\n\"Here it is,\" I said at last.\n\nHer head tilted, she studied it with a smile on her lips and then said, \"You have some talent and it's quite flattering.\"\n\nNot sure, what to say to her compliment, I asked, \"Would you like to have it?\"\n\n\"Actually, I would - I'd love it.\"\n\nI folded the thick sheet along the small perforations several times and carefully tore it below the spiral binding, leaving behind the stalk.\n\n\"Would you sign it for me?\" she asked.\n\n\"Sure thing,\" I said. I placed it on the hard surface inside the front cover to sign it with a flourish that touched lightly against the background of the sketch. \"Here you are.\"\n\n\"I don't think I have a frame that will do this justice. I'll have to buy something nice to put it in. Thank you, so much,\" she said accepting it.\n\n\"My pleasure, you have a great afternoon.\"\n\n\"I will and you do the same.\"\n\nShe turned slowly to walk back in the direction she'd come. Languid steps carried her away from me as she continued studying the sketch. I remained frozen and watching; still transfixed to the dress blowing in the light breeze, alit in sunlight. I felt that I should hope she hadn't seen the desperate arousal she'd caused, but somehow I believed she had and maybe she'd taken some enjoyment from the physical response she'd given rise to.\n\nMy business class didn't go much better as I devoted a fresh page to a new sketch of her from memory. Honestly, this one was better than the first as I regarded the finished piece. The question and answer period got me another startled inquiry as I stared out at the trees blooming in the quad again. I actually heard this one and responded appropriately, but a follow on question had tripped me up. It seemed I wasn't the only one with my head in the clouds because after a few more repetitions of this with others in the class, the professor gave us an early dismissal.\n\nAs I strode back towards my dorm, I was convinced it'd been that dress and her figure I'd seen through it. The image was emblazoned in my mind and I couldn't keep my thoughts off of her. I'd known she was married; she'd covered Madame versus Mademoiselle the first week of class during my freshman year. She'd taught much of the first week speaking only French and her flashy engagement ring had a matching wedding band. It had been one of the many props she'd used to get everyone conversing. I'd already had a year of French in high school, but those rings had stuck in my memory.\n\nShe should have been off limits for any number of reasons, but today I wasn't thinking clearly. My thoughts kept drifting back to her taking my hand, standing there in the full daylight of the quad. We'd stood right in front of Drumheller Fountain but I couldn't remember hearing the water. It was all I could do to look her in her eyes and avert my attention from her body while the blood pounded in my ears. Her hand had been so soft and gentle. Her eyes had sparkled with joy and a hint of mischief. I wasn't very good at picking up social cues, but I couldn't help thinking her behavior was more than mere concern; it felt exploratory and flirtatious.\n\nShe's probably my mother's age and married and my professor, she's - she's so off limits, completely unattainable, right!? I repeatedly asked or perhaps told myself.\n\nThere are so many reasons it could never happen, was my conscience's consistent reply that evening and many others.\n\nAfter several days of these feelings, I began to think it was a good thing that the semester was nearly over. This was to be the last of my foreign language and humanities requirements. Visions of her filled my mind when I slept in my small dorm room and I found myself continuing to be visually distracted by her in class. Luckily, there were no repeated episodes with Mrs. Soliel, at least none that she noticed as I attempted to be more discrete. My thoughts dwelt on her for the remaining weeks of class.\n\nI longed to be dispatched from this deepening enchantment; it was a hopelessly infeasible desire that could never be pursued. When the finals were done and the semester had come to an end, I found myself experiencing a dichotomous mixture of sorrow and relief. I thought that perhaps the spell would be broken, especially if I found some way to avoid this obsession that I was certain could only lead to perpetual sadness.\n\n<hr>Propelled by worry over the depths of my fixation, I decided that I would take a break this summer. I hadn't participated in early registration for classes because I had already been considering some type of trip. My senior year was going to be fairly light because I had attended summer semester during my freshman and sophomore years to get as many requirements out of the way as possible. When I finished out this semester with A's in all of my subjects again, it settled the matter. Feelings of achievement made me believe I'd earned a break in addition to needing one.\n\nI hoped that removing myself from the environment of the University of Washington might reset my perspective on things. I'd considered going to see my brothers in California but, surprisingly, what I really longed for was to go back home, despite having just been there over the winter break. I hadn't trusted my truck enough to attempt driving to see my brothers in San Francisco, only thirteen hours away, much less heading across country on a multiple day trip to Vermont. Our family wasn't rich and I'd gotten tuition, room and board covered between Pell grant and a scholarship from my grades. So, when I had gone home before, it'd been by the cheapest available transportation and that'd been a bus.\n\nThe dorm's hall phone offered little privacy, so I made my way from my dorm room with a roll of quarters to the corner payphone. I dialed the number, deposited several of the coins and heard the operator tell me to insert two more for my long distance call to be completed. Once Mama was on the line, there were a few minutes of me dancing around the subject, I think she could sense the desperation in my voice and she told me to come home. Then she added the enticement that Pops would give me some money to cover the expense of the trip and some living money for helping out on the farm.\n\nWhen I got off the phone, I realized that if I was being honest with myself, I was feeling more than a little homesick and lonely. I'd opted to stay on campus for most all of the summers so far and many of the shorter holiday breaks and had only returned to the farm for a couple of winter breaks. My last trip home had been nice, but it'd been winter and what I missed was the late spring and summer time of our family farm. The wonderful weather over the last few weeks was deepening my desire to see it abloom again. I hadn't come home my second year at all, because the very first Christmas home from college had coincided with the one year anniversary of the soul crushing end of my first and only real relationship. It'd been a lonely two-week reminder of the breakup with my girlfriend since middle school.\n\nJenny had gone off to attend the University of Vermont in Burlington when she graduated a year ahead of me. We were both born and raised in Vermont, just outside Montpelier, as were my older brothers and sister. My sister, Emma, had graduated from the same university when I was about five and I'd been considering going there too, until Jenny told me that she'd met someone else. She done that during her first Christmas home from UVM, before I graduated high school. I finished my senior year without a girlfriend, which had somehow felt lonelier even though she hadn't been around at all during the fall. This led to several awkward instances of being laughed at for taking my sister to prom and it initiated my generally avoiding relationships altogether. The breakup had shaped my decision to go out of state for college and I'd gone just about as far away from her and the farm as I could.\n\nThere hadn't been any girlfriends after her and I went off to college changed. It was fairly na\u00efve to try, but I simply cut off that part of my life and became more focused on my schoolwork, my drawing and my future. I'd thought about asking out some women in my freshmen classes, but the University of Washington women seemed more adept socially than myself and it'd felt intimidating. I chalked it up to being from a small town, living on a farm and having so little experience dating due to my long term involvement. Abstaining after the first year seemed to just perpetuate the behavior and I hadn't been especially attracted to anyone until that day in humanities.\n\nMama's encouragement to come back to the farm, made me genuinely believe it would do me some good. Emma might not appreciate her baby brother being there, cramping her space, but I figured she'd get over it when I helped around the farm. She and her burly boyfriend, Bo, were practically running the farm these days anyhow. They'd been planning on getting married for a couple years, but hadn't tied the knot just yet for some reason. I packed my bags as soon as I'd gotten back to my dorm room and caught the very next bus home. The tiring three-day trip was another reason I hadn't gone home much, especially for shorter breaks.\n\n<hr>Several days and bus changes later, I finally arrived in Burlington. In the bus station parking lot, I was surprised to see Emma pull up to fetch me. I'd expected to see my mother since I'd phoned her the day before arriving, but it was nice to see her familiar face. She had driven the family farm truck with our golden retriever Samson eagerly awaiting me in the back. Tiredly, I walked from the shaded waiting area, tossed my stuff in the bed of the truck, gave Samson a good patting and joined her in the cab.\n\n\"You seem happier to see him than me,\" she said, leaning over for a quick kiss.\n\n\"Not at all, you're a sight for sore eyes.\"\n\n\"So? How's college going, Squirt?\" she asked with a little concern and looking me over pensively.\n\nShe'd called me that forever, well as long as I could remember anyway. I'd never resisted the nickname and even now, it felt endearing. Despite her often gruff stance toward me, I could tell that she loved and cared about me. She had made a regular habit of sending me care packages throughout my time in college. My heart always leapt when they arrived; the anticipation of something from her always brightened my day. Her little gift boxes were neatly packed and contained items she thought I might need or want: homemade snacks, clothing or books she thought I might read.\n\n\"It's going okay but I'm glad to be home. Thanks for all the care packages you've sent. I can't tell you how much easier it makes being away.\"\n\n\"I remember how it was when I was in college,\" she said and laughed. \"And I lived close enough to drive home when I needed to. Thanks for writing back.\"\n\n\"How are you and the folks?\"\n\n\"The late spring this year has them realizing that they are tired of the long cold winters.\"\n\n\"Our spring was kind of early.\"\n\n\"Yeah, the weather you have in Seattle seems rainy though. Anyway, they're thinking of selling to me, so they can move south.\"\n\n\"Huh, you have enough money to swing that?\" I asked surprised.\n\n\"I've got some of it, but I was hoping I could pick your business brain to come up with a plan.\"\n\n\"I'd be happy to help you and I'm going to be working around the farm this summer.\"\n\n\"Oh, to be sure, I'm going to have you up at the crack of dawn each day,\" she joked. Then after a couple moments she added, \"Of course, you'll also be telling me about school and your love life.\"\n\n\"So, you're not just here to pick me up?\" I teased her back.\n\nShe mussed my hair and said, \"We're not going to start that again.\"\n\nIt was a private joke she and I had shared since a particular High School dance. I'd called her to pick me up early because Jenny and I'd had an argument. Emma gave me the fifth degree about it all the way home. I'd complained something to the effect So you didn't just come to pick me up?. The term had stuck and became code for, so you want to know about my private life. I never resisted telling her anything, she was open, helpful and genuinely concerned about me. The complaints about cramping her space only came as I got old enough to have the normal intrusions that siblings have, but she mostly launched those at me teasingly because she knew it got under my skin a little.",
        "When she finished chuckling, she started the truck and began the forty-five minute drive back to the farm. It was already getting pretty warm but the wind coming in the window cooled things off and to make it even better, I hung my hand outside letting it ride the wind roll-a-coaster as I twisted it to and fro to catch the oncoming air like a sail.\n\nWe were soon in the countryside heading away from the concentration of people in town. We chatted about her plan to buy Mama and Pops out, but we didn't get into any serious details. As we turned down our road, she pointed out a couple of new neighbors, and told me some of the older farmers were selling off as well. As we approached the dirt road leading to the house, I saw the old station wagon was up on a trailer over by the shed, the front tires were flat and there was mud in the grill. My initial impression was that things weren't looking too good. Then I noticed another oddity; there was no sign of Bo's car. He was always here or at least he had been. They'd been dating since right before I left for college and I'd even seen him here as recently as last Christmas.\n\n\"Is Bo off somewhere?\"\n\n\"He's off permanently.\"\n\n\"You guys broke up?\"\n\n\"Yep.\"\n\n\"Hey, I'm sorry, I didn't -\"\n\n\"Don't worry about it, I'm a big girl. He was interested in one thing and when it wasn't going to be free, he moved on.\"\n\n\"The farm?\"\n\n\"Yeah, when Pops asked him when he was finally going to make an honest woman of me, get married and buy them out - well, he didn't hang around long.\"\n\n\"Jeez, Emma.\"\n\n\"Well, it hurt but I'm over it. Now I'm just looking into what I can do to make this work,\" she said as she spread her arms indicating the fields of young crops growing all around us on either side of the drive. She continued driving and parked between the tree and steps of the two-story farmhouse.\n\nI hopped from the truck at the same instant that the cloud of dust following us up the dirt road enveloped us. As it cleared, I found Samson at my side jumping up to welcome me officially. I patted him and ran my fingers through his warm hairy mane there beneath the big maple tree in the front yard, which cast long shadows over the place in the late afternoon sun. The glistening green tin roof glinted in my eyes and I shaded them to get a closer look. There were late tulips and daffodils overflowing the front flowerbed. Additionally, the porch looked recently painted in white, the porch swing had shiny new chains and a fresh coat of green paint. The shutters and screen door all had a matching coat of forest green. I knew the flowers were probably Emma's work, since she and I had put a few bulbs in right after she'd finished college. She'd continued to add more as each year passed, especially of the later blooming varieties.\n\n\"Wow, the flowers are really busting out. Who's been painting?\" I asked as the dust cleared and I grabbed my bags.\n\nEmma had joined me to look at the house and said, \"That'd be Pops, he's been on a kick to spruce the place up. Wait till you see the addition he put on the back.\"\n\n\"I didn't know we needed more space.\"\n\n\"Well, he'd thought -\"\n\n\"Oh, I really am an idiot sometimes,\" I interrupted her the moment I saw her face. Her chin was an array of dimples as she tried to hold back the stream of tears, and I felt a real dolt. \"Emma, I wasn't thinking,\" I said, as I dropped my bags and hugged her close. \"It was recent, wasn't it?\"\n\n\"Yeah, it - just - he - it - was - a couple weeks - ago,\" she said between sobs.\n\nA momentary thought passed through my mind as I wondered why my mother and father hadn't come out yet. Emma's shuddering emotional state quickly replaced all my thoughts with concern for her. We stood there holding one another while I patted her back and told her it would be okay. I was surprised she'd come to pick me up at all, but that was Emma, she'd often power through what would break most people. This was different though, she wasn't taking it well.\n\n\"It looks like I got here just in time,\" I said kissing her forehead and rubbing her back gently until she'd fully regained her composure.\n\nThe lapse was relatively short and she was back to her brusk self in mere moments. \"Come on, let's get you inside and washed up for dinner,\" she said wiping her eyes on her short ruffly sleeves.\n\nEmma treated me like this often enough. The age difference alone played a big part in that, but she was a lot like Mama. Our mom didn't have much time to see how children should be raised, since she and my pop had worked this farm as soon as Emma was born. Her grandparents had given them the land when our mother had turned up pregnant at the end of high school. \n\nPops' father and brother had helped him build the initial farmhouse, which could be seen in the structure of the existing one; he'd increased it substantially over the years including the addition of a second story. They'd really made something of the place, but it'd taken time and Emma being the oldest hadn't gotten much tenderness. \n\nI was the baby of our family and probably got the easiest treatment from our parents. They hadn't doted on any of us from what I'd heard. Most of what I had heard came from Emma, because my brothers both got shipped out to Vietnam shortly after I was born. Emma came back from college just about the time I needed someone to watch over me as I started school. She became my main caregiver in many regards.\n\nI grabbed my bag and followed her to the door she held open for me. \"You know where everything is. I made your bed and put clean towels on the bar in the bathroom.\"\n\n\"Thanks, I'll be right back down,\" I offered and trotted up the wooden stairs to the top.\n\nMy room was off to the right and when I entered it I found it was just as I'd left it. Looking out the back window, I got a glimpse of the addition which was right below my back window. I dropped my bag on the bed and went back out to the bathroom. There was one bath upstairs, there was another downstairs, since it had been a three-room house to start: kitchen, bathroom and bedroom. That's how the three of them always told it; I never saw that iteration. When I was born, there was already a second story and I don't remember many changes to the place as I was growing up. Hearing that there'd been an expansion on the ground floor came as a pretty big surprise.\n\nIn the bathroom, I closed the door, stripped down and hopped in the shower. The three days of dirt, and maybe some of my recent dust bath, washed down the drain. With the washcloth, I cleaned everywhere including my face and ears, cleaning them very thoroughly due to Mama's obsessive checking of them. When I got out, I notice there were clean clothes on the hamper and my dirty ones were gone. I put the washcloth back on the rod neatly and grabbed the towel to dry off. All clean and dried, I dressed in the fresh clothes someone had left me, and then I headed back downstairs. Some soothingly familiar aromas wafted into my nose and I followed the scent of them back into the kitchen where I found Mama and Emma hovering over some pots on the stove.\n\n\"Where's Pops?\"\n\n\"He's laid up back there in the addition,\" Mama said coming to hug me and check my ears.\n\n\"He's injured?\"\n\n\"Yes, although he's making it out to be nothing. He hurt his foot shortly after putting that thing on,\" she said pointing to the new doorway that used to be an exit to the outside.\n\n\"Wow, nice!\" I exclaimed as I walked into the new room. \"Hey, Pops, what have you done?\" I asked bending down to hug my dad.\n\n\"Oh, this ain't nothin' but your Ma won't lemme up,\" he said tapping the cast on his left leg.\n\nHe was sitting in an easy chair, but there was a big bed in the room and I'd observed that there was a door right as I'd entered that led into what I presumed was a new bathroom since it appeared to be tiled.\n\n\"Pretty nice handy work,\" I said admiring all the newly finished construction.\n\n\"Yeah, came out nice, I think. I made a new mudroom out of the old bathroom and put this addition on over the old backdoor.\"\n\n\"It looks great. How'd you break your -\"\n\n\"It's just the small bone in my leg. Doc put this on to mend 'er good.\" He paused for a moment then said more softly, \"It were ma temper.\"\n\nIt must have been a huge effort for him to admit that. Pops wasn't one to allow himself fault. Almost as soon as I'd thought the thought, he answered in a shushed tone. \"That bastard Bo, left your sister a marked woman.\"\n\n\"Marked?\"\n\n\"Shush, she'll hear ya. Come over here and sit,\" he said indicating the bed.\n\nI went over to the bed and sat beside him. He'd never really spoken to me like this. It was well out of character.\n\n\"They's been together goin' on three years, they's sposed to been married. Who gonna be with her now?\"\n\n\"Emma's smart and looks good, she can still find someone. She's not that old, Pops,\" I whispered back. \"What'd you kick?\"\n\n\"The damn car.\"\n\n\"Is that how the station wagon came to be up on the trailer?\"\n\n\"Yes sir, it is. I drove out after him in the rain. Them tires were balder than my head. Good thing though, I was gonna kill him.\"\n\n\"Jesus, Pops.\"\n\n\"Watch your mouth, Sonny.\"\n\nThe whole interaction with Pops was another of the reasons I'd chosen a school so far away. I respected him and loved him but his gruff manner and hypocritical behavior had us at odds more often than I wanted to remember.\n\n\"Yes, sir. I'm glad it was just your leg. I'm guessing you went off the road.\"\n\n\"Yep, just about a week ago, now.\"\n\n\"Emma said they'd been broken up for two.\"\n\n\"She's trying to put a brave face on it.\"\n\n\"You two finished telling all of Emma's woes?\" Mama yelled from the door.\n\n\"Mama you shush, she's gonna hear that,\" he told her in a hushed voice.\n\n\"Ain't no room around here for standin' on ceremony,\" came her usual reply. \"Dinner's ready, come on and eat.\"\n\nA loud cough came from the kitchen followed by a sad laugh. I was certain it was Emma without even seeing her. They were both rough as dried up corncob husks and I loved them dearly. Pops grabbed his crutches and started toward the kitchen. I followed ready to catch him, since he didn't look very stable and he seemed to wince as his foot came down. Emma was at the sink with tears running down her face and the biggest smile you could imagine. They were all a paradoxical mix of bluntness, softness and love.\n\nWe each took our places around the oblong table; Emma was opposite me and Mama opposite Pops. There was home canned Lima beans, some mashed potatoes and Mama's meatloaf. It was something I'd been looking forward to the whole trip home. Simple as it was, this was what I'd been craving and my homesickness melted away a little more with each bite.\n\nAs we talked over dinner, I found Mama and Pops had taken the room downstairs since Bo and Emma weren't going to use it. His leg being broken was the main reason, but I could see the years on him. Working like he had all this time seemed to be taking a toll. Our mom looked just slightly older than Emma to my eyes but I'm a terrible judge of a woman's age.\n\nThe longer hours of the summer had the sun still up after Emma served up some maple shortbread cake she'd made just for me. The cake was still warm and Mama topped it off with homemade vanilla ice cream which began melting almost at once.\n\n\"You're going to spoil the boy,\" Emma said as Mom gave me a second scoop.\n\n\"My second Mama,\" I said and everyone laughed.\n\nThe love in that room couldn't be matched any place on earth as far as I was concerned. This was why I'd come home, why I'd needed to come home. Later that evening in the family room, I remembered a slightly different saying more clearly than I ever had when I'd read the book by Thomas Wolfe, 'You Can't Go Home Again'.\n\nIt occurred when I asked, \"Has anyone heard from Luke or John?\"\n\nThey were my older brothers and I knew \"We don't talk about them!\" but I'd brought it up on my first night home. Love in our home had boundaries. I had heard descriptions of my brothers being quite a handful, but I barely remembered them. They'd both gone off to war before I was six months old. They were helping Pops on the farm when they got drafted. I never knew what the whole disagreement was about and maybe that was why I always blundered back into it. Emma shot me a rueful glance when I'd spoken the words and then shook her head as the predictable response came.\n\nThey didn't want to talk about them, they hadn't come back to the farm and they'd settled in San Francisco with their wives. It seemed like it was twofold: disappointment and maybe some racial prejudice. It didn't seem like the whole story; there must have been something more to have them so disavowed. Our parents were fairly religious and I suspected that was at the root of it, but Emma had been with a man for several years, even in this very home. Somehow, she'd escaped their disapproval, so I wondered what they saw as worse. It was a mystery that even Emma didn't seem to fathom.\n\nMy twin brothers, Luke and John, had married twin sisters, Cam and Anh, during the war. They'd all flown from San Francisco to Vermont so they could attend my high school graduation and both couples had given me a bit of money to help me get some kind of a vehicle for use during college. They'd done that over Pops' loud objections. They hadn't stayed in our home after that fight; they'd stayed with our father's younger brother James in Burlington. Uncle Jimmy seemed to be on the outs with our parents as well, so I guess it'd made some sense, to avoid conflict.\n\nI suppose every family has some deep dark secret, but eventually I'd thought, they'd make peace with them and come to some understanding. That hadn't happened here. The furor from my question finally settled down after a bit and I listened to them tell several fresh stories about the new neighbors' silly mistakes in farming. They repeated some of my favorite stories about Emma taking care of me when she got back from college, too. The evening was coming to an end with everyone in a generally good mood despite my earlier mistake.\n\nOnce the sun had been down for about an hour, Emma said, \"Well, I've gotta get to bed. There's eggs to gather in the morning and chores to do.\"\n\n\"I think I'm going to head off, myself,\" I said. \"It was a long trip and I need to try and get on east coast time.\"\n\nEveryone said their good nights and I followed Emma up the stairs. We took our turns in the bathroom and I went to my bedroom to go to sleep. Emma, came around shortly after I'd turned out the light.\n\nMy door cracked open and she whispered, \"You asleep, Squirt?\"\n\n\"No, I just thought I should try and get on the time here. I probably won't be able to go to sleep for another three hours.\"\n\n\"Mind if I come in?\"\n\n\"Sure, what's up?\" I asked, turning on my nightstand lamp, sitting up in my bed and propping myself upon a spare pillow.\n\nShe came in and closed the door quietly behind her, then sat on the floor beside my bed. She had on a short and very lightweight summer gown that didn't leave much to the imagination. It showed off a great deal of her cleavage and the way she was sitting, cross-legged on the floor, gave me an unrestricted view of her white panties. An initial furtive daring glance at the region revealed several tufts of golden escapees, and I attempted to focus on her face. At that moment, I noticed two things: she looked very much like Madame Soliel with her golden but straight hair and she was staring at my crotch, which is when I noticed a third thing; I had a sudden erection. The sheet hid it from view, but it was lifting the white linen up and the lamplight caught it and cast an odd shadow.\n\nIt was slightly embarrassing, but I didn't try to cover it or will it away. She wasn't commenting about it, so I just cast my gaze back toward her. Her cleavage drew my eye momentarily until I noticed that her nipples were prominently poking out the loose gown. My windows were open, but the air coming in was not really cool. I wondered for a moment if we were simply going to stare at one another's excited bodies.\n\nEmma finally broke the silence, \"You've grown up to be a handsome young man.\"\n\nThis caught me completely off guard. We usually traded barbs, not admiring stares and compliments. I went along with this, but had no idea what she wanted.\n\n\"Well, I think Bo's and idiot; any man would be lucky to be with you.\"\n\n\"I think you actually mean that, don't you?\"\n\n\"We haven't always gotten along, but you've always - always been there when I needed you. You even told me about Jenny before it happened, I just didn't want to believe it. After the break up, you even went as my date for prom.\"\n\n\"I had fun and since we're admitting stuff, you told me about Bo, the first time you met him.\"\n\n\"Sorry.\"\n\n\"Don't be. I should have listened to your instincts,\" she said this and shifted her crossed legs to an even wider angle so her legs were foot to foot. \"Love is blinding, but he didn't return my love either,\" she fell silent and looked away.\n\nThe silence was deafening and I suddenly found it impossible to look anywhere but her crotch. I could now feel myself becoming more erect as I stared. There was more golden hair visible as her panties allowed more escapees but there was something else that I hadn't expected. The lamplight also caused the terrain of her mons and vulva to become very apparent with the light and shadow it created there. I tried to look away, but her lips were swollen creating a crease and in the cleft, I could detect that her clit was excited too. After several minutes, she recovered and returned her gaze to my situation which brought the briefest of smirks.\n\n\"You know you shouldn't have brought up John and Luke.\"\n\n\"I don't get it, I never got it and I still don't!\" I said in a loud whisper.\n\n\"Me either, sweetie. They're both great guys and their wives are cute as can be.\"\n\n\"What's their beef with Uncle Jimmy?\"\n\n\"You're more like him than Pops and I think they wanted you to take over the farm.\"\n\n\"Yeah, well that wasn't ever going to happen and doubly so after Jenny.\"\n\n\"You didn't say much about your love life in the truck.\"\n\n\"That's because there isn't much to tell.\"\n\n\"You're over her by now, right?\"\n\n\"Yeah, I'm focused on graduating next spring.\"\n\n\"There are some women on that campus, aren't there?\"\n\n\"Yes, of course. I'm not really very skilled at social interaction with them though,\" I said.\n\nMy thoughts wandered back to Madame Soliel for the briefest of moments. God, she had been so beautiful in that white sunlit dress. Her curly golden locks, so stuck in my mind's eye, reminded me very much of Emma, who was talking to me again. As I realized this, my eyes suddenly refocused back to her gown and then her crotch.\n\n\"What were you saying?\" I asked, unable to pull my stare away to look her in the face.\n\n\"I was asking if there were anyone there you found attractive?\"\n\nI felt a little trapped with my eyes engaging her there while she asked me about my love life and women. I could feel a blush rushing over my whole body. I was completely nude beneath the sheet and the question made my member twitch, jerking the linen upward lightly.\n\n\"The women I'm attracted to lately, seem to be unattainable.\"\n\n\"Oh - okay, so there are some?\"\n\n\"Attractive women? Yes, there are but they don't even know I exist.\"\n\n\"Surely, that's not true.\"\n\n\"Okay, they might know I exist, but they don't know I'm interested.\"\n\n\"Well, we'll have to work on that,\" she said getting up.\n\nAs she did her gown, drooped open and I saw her breasts. She stood up quickly and flung her hair backward. I just stared at her wondering if she'd done it on purpose. Really, all of it felt vaguely out of character, but especially the sitting cross-legged and then open legged.\n\n\"That's all you wanted to talk about?\" I asked, disappointed she was leaving so soon.",
        "\"I've been in here nearly half an hour; we can talk some more tomorrow during chores and stuff.\"\n\nApparently unaware of the time, I dejectedly replied, \"Alright...\"\n\nWhen she leaned over to give me a kiss, I'd initially thought she was aiming for my cheek like in the truck, but it went right on my lips. Her lips were soft and moistened, her hand was on my shoulder, her belly just barely touched me and I was suddenly stiffening against her. She stood straight again breaking our brief embrace.\n\n\"We have the whole summer...\" she offered. \"Good night.\"\n\n\"Good night, Emma.\"\n\nThen she turned my light off and walked back toward the door where the hall light shown beneath and basked the room in a dim light. Opening it the light put her figure on display again until she disappeared behind the closed door. I watched her feet head down the hall and the light go out. I lay awake in the utter darkness for some time, thinking about the odd chat we'd had. It wasn't completely out of the blue; she'd had a similar talk with me that winter before Jenny broke up with me. Although, we'd been dressed more warmly. She'd had on a long flannel gown that night and I hadn't thought of her in a sexual way. She'd simply been a concerned sister, trying to warn her brother he was about to get his heart broken. I guess word travels quickly in a small town, even when people are separated by some distance.\n\nTonight felt different and I was charged with curiosity and desire. What'd just happened? It was a feeling akin to what I'd felt for Madame Soliel; it was a definite attraction, but it wasn't simply unattainable, this was absolutely forbidden. I wondered if it were just the similarity of their looks or if there were something deeper than that. The biggest thing that kept me awake, was the memory of our kiss. Her lips had been so soft, and the kiss while sweet and loving, had seemed to linger, although my perception might have been askew after glimpsing a full-unobstructed view of her breasts.\n\nSleep eluded me another half an hour after she'd left, so I turned the light back on, got out my sketchpad and drawing pencil. I committed the image I had of Emma sitting open legged to paper. The sketch seemed to discharge right out of my pencil tip exactly as I saw it etched in my memory. A second sketch of her leaning over as she'd gotten up followed quickly. Flipping back and forth, as I looked at the finished works, I realized that I had included erotic details of her crotch in one and her nipples in the other. I hadn't focused on them specifically when drawing, but now, I worried that Emma might find these unbecoming, so I stashed the pad between my mattress and box springs. Finally, I began to feel a little sleepy and turned off the light.\n\nI drifted off at some point, but awoke with a start during the night. My erection was diminishing and my sheet was damp. It hadn't happened like that in a long while. I usually took care of it ahead of time these days, but the taboo of doing that immediately after being excited over my sister's state of dress had put me off remedying it. I rolled over on my side full of guilt. Sleep came again, but it was fitful.\n\nMorning arrived very early and Emma was in my room shaking me awake before the sun was up. When I opened my eyes, they were met with the image of her in that gown and the crotch of her panties was right next to my face. I averted my eyes downward only to see my morning erection poking up toward the ceiling. It was on full display since I'd evidently kicked off the sheet entirely during the night. She'd seemed to ignore it initially, but looked directly at it as she must have realized that the tip still had some dried residue visible. I swung my legs out of the bed and sat up to conceal it a bit, as she remained waiting. It was true that we didn't stand on ceremony around here much, but her observation of me felt unusual again as it had last night.\n\n\"Sorry, I'm going to get dressed,\" she finally said and left the room.\n\nI dressed quickly and took a bathroom trip before I met her downstairs. She was in the kitchen where she had fixed us each a glass of milk and a piece of toast with strawberry preserves. We ate quickly so we could get started on the day's chores and headed out into the predawn twilight. Emma led us out through the mudroom which now contained a new washer and dryer. She opened the door and we proceeded down the steps into the back yard. First on the list, as usual, was gathering eggs from the hen house. It was situated just far enough from our home to prevent smell, disease or disturbances. The morning air was thick with dew and there was a slight chill.\n\nWhen we reached the coop, Emma said, \"I've got two dozen going right now. We've been selling some of the extra eggs to a farmers market. I'm trying some Australorp chicks in the other pen.\"\n\nDad had generally kept about a dozen Plymouth Rock chickens. They were good for both laying eggs and their meat. I presumed Emma was the one that suggested taking on more variety, but I didn't ask her right then.\n\n\"What are we adding today?\"\n\n\"Dad's been doing meal worms once a week and that's today.\"\n\nWhen we finished gathering eggs, we had ten to take to the house. I carried them in, met her back out by the coop, and helped put out the food. She had a bag of the worms that she sprinkled into their feed. Then we cleared out their water and filled it fresh from the well. When I was smaller, we'd hand pumped it, but Pops had upgraded it during my freshman year in high school to use a motor to lift it.\n\nThe morning sun was breaking through light clouds on the eastern horizon as we headed to the shed to gather buckets and gloves before heading into the field. Our father had always planted a varied crop. We had around two hundred acres and generally, he planted hay, sweet corn and potatoes. There was always a medium sized garden beside the house where they grew other vegetables to freeze and can. These along with the chickens were generally to keep them self-sufficient. We also had a decent sized stand of maple trees, probably around four hundred, and a small apple orchard of about a hundred old trees and twenty or so saplings. Most people get the idea that farmers put the crops in the ground and watch them grow, but there's a lot more to it than that.\n\nToday Emma and I were going to be walking the corn checking for bugs, grubs and any kind of infection (smut or root rot). We'd be doing this periodically throughout the growth period and then monitoring for earworm, caterpillars, cutworms, aphids and other pests as the plants matured, right up until harvest.\n\nEmma came back from college with a degree in agriculture when I was starting kindergarten around age five. She was fairly expert in all the different things that might go wrong agriculturally. The corn plants were barely a hand high, but things can go wrong rapidly when the plants are young and tender. All manner of insects and animals think they are tasty. Raccoons were one of the things we'd had trouble with in the past, so we kept our eyes open for tracks as we walked the soft dusty soil rows.\n\nThe early morning was the best time to do this work as the cool day gave way to warmth quickly. We'd been out in the field for a couple of hours when I started to fade a little. I was walking several rows over from Emma and I'd been daydreaming about Madame Soliel again. I couldn't get over how similar they looked and I kept losing sight of the plants as I gazed over at my older sister. With the exception of her straight hair and tanned skin, she looked like my professor and my professor looked like a very slightly younger version of Mama. I don't know why, but age is a mystery to me. I'd come full circle on my conclusion that it'd be crazy to chase after Madame Soliel if she's anywhere near my mother's age. But she didn't look that much older than Emma did.\n\n\"You're walking on plants over there.\"\n\n\"Oh, sorry, I lost track,\" I replied, as I got back in the groove and set the plants back straight.\n\nShe looked over at me and I couldn't tell if she was angry or not. I hadn't meant to walk on the plants and it'd only been a few indirect steps; they'd probably recover. There seemed to be a question in her that she wasn't asking.\n\n\"What?\"\n\n\"What, what?\"\n\n\"What did you want to talk about?\" I asked finally.\n\n\"I just - I don't know.\"\n\n\"Come on Emma, you clearly wanted to talk about something just now?\"\n\n\"It's silly and you already told me part of what I wanted to know last night,\" she said, as she started on down the row.\n\nI thought about what I said to her last night and couldn't quite put together what I told her. \"Wait, what did I tell you?\" I asked after drawing a blank.\n\nShe didn't answer me and just kept walking the row. It was frustrating but I tried to let it go. She kept up a fairly brisk pace as I lagged behind her slightly. Every once in a while she bent to pluck a weed or put a grub in the bucket. I stopped and watched nearly every time she did it, as I tried to properly work the row I was on too. It had been fairly blatant and she'd seen me watching her on a number of occasions.\n\nWhen noon was approaching, we took a break and headed back to the farmhouse for lunch. Emma toasted us bread while I sliced off some of the leftover meatloaf for sandwiches. We had some milk and chips to go along with it and Mama joined us at the table.\n\n\"You two have been up and at it today.\"\n\n\"Yes, she's not taking it easy on me.\"\n\n\"I'm going into town for a few things, either of you need anything?\"\n\n\"Maybe some sunscreen, Paul's already starting to burn.\"\n\n\"You need to wear your hat out there, too.\"\n\n\"Okay, I'll get it before I go back out.\"\n\nWhen Mama had left, I asked, \"Can she drive the truck?\"\n\n\"She doesn't like to, but she's got no other choice.\"\n\nI considered what she'd said as we finished eating. The station wagon wasn't going to get fixed by itself and I could probably tackle it. I'd never seen our mom drive the truck with its difficult manual steering and manual transmission. We had just been focusing on farm work, but there were other ways I could help here, especially with Pops laid up. We washed dishes together that evening, well she washed, I dried and put away. When we finished she suggested we watch a little TV.\n\nMama and Pops had gone back in the new bedroom to watch their shows, so Emma and I had the old set to ourselves. We saw the end of the news and then watched a rerun of 'I Dream Of Genie' on the UHF channel. It was nice to relax a little with her and the silly show distracted me from some disturbing thoughts I'd had during the day.\n\nWhen it went off, I said, \"I'm going to get showered and go to bed. You want to go first or after?\"\n\n\"You can go first, I've got some laundry to deal with in my room.\"\n\nHeading up the stairs, I wondered about that comment. Mama usually did the laundry, but the thought quickly went away as I gathered my robe and went to shower. I undressed and put the dirty clothes in the hamper, while the water warmed up. In the shower, soapy warm water washed the day's work down the drain in brownish discolored swirls. I finished quickly to leave Emma some water, got out, dried off, put on my robe and went to my room.\n\nAfter the long day's work, I'd expected to be exhausted and I was physically tired, but I couldn't turn off my mind. When I pulled back the crisp clean sheets, I realized what laundry she'd meant. She'd put clean sheets on my bed. And as I'd pulled the top sheet from beneath the pillow, I found an old white cloth that she must have put there for me. It was nice, but odd and I must have lay there for an hour before I decided to draw again.\n\nTonight's sketch was another one of Emma. I drew her as I'd seen her from the side and behind as she bent to pluck a weed in the field today. Her tank top had hung open just a bit, the bra strap had fallen down exposing a large portion of the side of her breast. Most of the main part of the sketch was complete, I'd gotten the weed, details of her fingers, the gap between her jean shorts and the delicate inflection where her butt cheek met her leg and curved inward toward her crotch. I was just about to put the finishing touches on the background crop row and landscape when my door opened.\n\n\"Whatcha doing, Squirt?\"\n\n\"Nothing,\" I said startledly, as I attempted to shove the thick pad beneath my pillow. I wondered if my light had drawn her attention or if she was having trouble sleeping too.\n\n\"What's that you've got there?\" she asked, as she closed the door and proceeded toward my bed.\n\n\"I'm - um - I've just been sketching a little.\"\n\n\"Oh, can I see?\"\n\n\"Uh - okay, but you're probably not going to like them.\"\n\n\"I've always liked your drawings even when you were like five. Show me how good you've gotten.\"\n\nHesitantly, I pulled the half-hidden tablet from beneath the pillow and scooted over to make space for her to sit beside me. My hip became exposed in the process and it drew further up as she joined me on the bed. I opened to the first page in the sketchbook and handed it to her so she could flip through them herself. I leaned anxiously against her awaiting judgment but was instantly distracted by the smell of her hair. In a flash, I realized it was akin to opening one of her care packages. That wonderful aroma flooded my mind as I blankly watched her carefully turning the thick pages.\n\n\"Are all of these from the University of Washington?\"\n\n\"Mostly and some areas around there. That's one of the bay,\" I said, as she turned to a new one.\n\nShe continued flipping through them. There were sketches of all kinds of things that'd caught my eye: several of the fountain on the quad, trees in various stages of foliage, park benches, flowers and more flowers especially tulips. There were only a few that depicted people in the bunch, where there were, they were rough, not portraits and often just couples that were captured within the landscape. The first true portrait was of Madame Soliel and it was the one which I'd drawn from memory. She lingered on that page for a long while, but didn't ask who she was or why I'd drawn her. There were three more of her that were less detailed, one of her by the fountain and two more as she'd been teaching.\n\nWhen she finally flipped through the next pages, I said, \"I drew those on the bus.\"\n\nThere were mountains, fields and forests and some storefronts that I thought were cool. Then it happened, there wasn't much I could do about it, I knew it was coming. She turned the page and there was the picture of her with her feet together sitting on the floor in my room. Her face went crimson, but she didn't say anything. She looked at it a long time, so long I began thinking I should apologize. I'd captured a variety of illicit details throughout, but particularly in the area of her crotch. I worried about what she might be thinking, when she turned the page and saw herself bent toward me with her breasts dangling inside the same short loose gown she had on again tonight. I'd drawn them with all of the fullness and excited details I'd remembered.\n\nI looked up to see her eyes meet mine momentarily before she turned back to look at it. There was something within her gaze I didn't understand. I knew it wasn't ire, but I couldn't guess what she was thinking. Well, her face remained slightly red, so I'm sure she felt embarrassed like I did, although maybe not to the same extent. Letting her look through these exposed more than just my deepest thoughts, it let her see herself mirrored in my mind.\n\nWhen she finally turned the page, she slowly went through the next sketches: some of the Australorp chicks, the shed with the station wagon on the carrier and one of the farmhouse from out by the big maple tree. Then she came upon my last drawing, the one I'd been drawing tonight. She lingered on it for longer than the first one of herself. The swarm of butterflies in my stomach began to feel as though they might roil up and out onto the bed. I was certain there was going to be some kind of fallout from what I'd depicted. I'd only drawn things as I'd seen them, but the details I'd chosen to include or exclude were what I expected would upset her. People were harder to draw for me, because I became very attached to the drawings.\n\n\"There's one missing; did you throw it away?\" she asked, pulling me back from my concerns.\n\n\"Oh - um - no...\" I choked the words out. \"I - uh - I gave it to the subject.\"\n\n\"So it was a person?\"\n\n\"Yes, it was the woman you saw towards the beginning.\"\n\nIt was the only woman I'd drawn besides Emma. Not just in this book, but in all of my recent sketchpads. There'd been couples or groups of people, but no individuals in quite a while. I couldn't remember when or why I'd stopped, maybe it was my withdrawal from people after my breakup with Jenny, although I couldn't remember if I'd drawn her. Drawing a single person was definitely more personal and I only seemed to do it for the ones that really had some effect on me. I was sure I'd drawn portraits in some of my other sketchbooks, I'd have to look through them and see. She was being silent for a long while as she sat there holding the pad. Then she flipped back through to Mme Soliel again and looked at the sunlit portrait and the missing remnant in front.\n\n\"You drew this right after you gave the other one to her.\"\n\n\"Yes.\"\n\n\"From memory, right?\"\n\n\"Yes.\"\n\n\"You didn't want to lose the one you'd given, so you drew a better one.\"\n\n\"Uh-huh.\"\n\nThen she flipped to the one of herself seated on my floor, and asked, \"And this is how you see me?\"\n\n\"I'm sorry, Emma. I shouldn't -\"\n\n\"What are you going on about? It's the biggest compliment I think I've ever had from anyone.\"\n\n\"You like it?\"\n\n\"Very much - I don't see myself like this. That's not what's in my mirror. It's flipped from the self-image in my mind and this woman is beautiful to me.\"\n\n\"You want them?\"\n\n\"No - no...\" she trailed off and was quiet. \"But I would like you to draw me at least one of my own,\" she said at length.\n\n\"Would you sit for me?\"\n\n\"Yes. I would like for you to draw me from your point of view. You have a real talent for people. Your landscapes and buildings are nice but you really capture the people you sketch. I haven't met any of the other people, but I imagine they would all be very flattered by your renderings.\"\n\nI hadn't really drawn people, just the two women but I didn't correct her statement. \"I was worried you would be offended.\"\n\n\"Was the woman offended?\"\n\n\"No - but - it wasn't quite like these.\"\n\n\"Did you offer it or did she ask for it?\"\n\n\"She saw it accidentally and I offered it to her,\" I said as I thought back to that day by the fountain. \"She requested that I sign it.\"\n\n\"See? I'm telling you, I don't know why you're getting a degree in business. I get that you want to escape from the farm. I thought that at one time too, but this is my home; it's where I belong. You - you don't really belong here. I don't mean you aren't welcome or wanted, this simply isn't where you should be. You're going to be great out there in the world.\"\n\nHer praise of me had me hugging her tightly and I could feel dampness between her shoulder and my chin. She smelled so nice, clean and feminine, I remained like that a while.\n\nI never really understood why she came back to the farm. So many of our neighbors kids had fallen into that same trap and Emma had always seemed to have such a free spirit. She'd taken me with her to Woodstock, when I was six, to see all of the groups play for free. After the show, she'd met a guy who needed a ride home to Roxbury. I'd enjoyed having her all to myself, but remembered feeling slightly jealous when I got relegated to the back seat during the trip home. That must have been over fifteen years ago, but I could remember the fun it'd been seeing all those groups perform. What stuck out though, was the first part of the trip, and getting to see her enjoy herself. It'd been one of those life-changing events that I held dear in my memory.",
        "\"You going all soft on me?\"\n\n\"Just remembering some other times you let me know you loved me.\"\n\n\"Oh yeah? When was that?\"\n\n\"There are too many to count: first day in kindergarten, Woodstock, school projects of all types, prom, graduation and so many others. It feels like you came back from college to take care of me and now you're stuck here.\"\n\n\"I did no such thing.\"\n\n\"One of these days, you're going to stop being so gruff. I hope I'm there to experience it.\"\n\nShe mussed my hair and turned to hug me back. Her warm embrace was comforting but short lived as she climbed from the bed. Self-consciously, I realized the sheet was now barely covering me as she bent to kiss me goodnight. Her arm made direct contact and I felt myself twitch as she stood back up. There upon her face was something, not a smirk, maybe surprise or a smile. It crossed her mouth and was quickly gone.\n\nThen she said, \"I do love you, Squirt.\"\n\n\"I love you too, Emma. Good night.\"\n\nWhen she'd gone out, I pulled the cover over my hard on and turned back to the picture of her in the field. I worked a while to finish up some missing details. When I was done, I flipped back to my favorite one of Mme Soliel and then back and forth several times. A yawn told me I was finally ready to sleep, so I put the pad back under my mattress and turned off the lamp. As I drifted off to sleep, their uncanny resemblances mixed in my imagination as I dreamt.\n\nThere in the mist, I found Madame Soliel in my room, sitting open legged on the floor. When she arose, I'd thought she was turning to leave, but instead she'd dropped her gown and come to my bed fully nude. As she lifted the covers, my stiff erection welcomed her grasping fingers. When she whispered for me to kiss her, there was the faintest of accents. I couldn't comprehend what she was doing here in my room and bed but I kissed her soft moist lips. Her tongue found mine and her hand stroked my cock as she encouraged me to enter her velvety opening. It slid blissfully within her and I broke the kiss to watch. Madame Soliel was in my bed writhing upon my engorged cock with her naughty French slang whispered into my ear. Baise-moi Paul... Fuck me with your beautiful young cock.\n\nWhen I went to stroke her hair, the long flowing golden curls melted away and became straight waist length hair. Her shape seemed slightly more muscular and I realized that I was with Emma. Her breathing was becoming very erratic and she moaned 'Paul' repeatedly. It was frightening to discover how much I was enjoying this, but I was soon overcome by lust. My thrusts became urgent and I moaned a reply. I'm going to cum Emma. Oh fuck, you're making me cum.\n\nStartled awake by the sound of my own voice, I found Emma standing over me in the dim light of my lamp. \"Paul? Are you okay?\" she asked gently touching my cheek.\n\n\"Huh? What?\"\n\n\"I think you were having a dream.\"\n\nI'd kicked my sheet completely off and my cock strained as it twitched out the remainder of my release onto my belly. Quickly, I grabbed the cloth to cover my embarrassment. \"Sorry, Emma, I -\"\n\n\"No, I'm sorry, you kept calling my name and I thought you needed me -\" she broke off and retreated toward the door.\n\n\"Is it time to get up already?\"\n\n\"No, I was up using the restroom,\" she said before she closed the door.\n\nHaving had her see me ejaculate during a nocturnal emission dream was very embarrassing but the feeling of that faded as I dwelt upon her soft response. She'd changed somehow; she wasn't the same gruff guardian anymore. I suspected her breakup with Bo had done more damage than she was letting on. My dream weighed on me with a sudden pang of guilt and a wonderment of how much I might have said aloud for her to hear and how long she might actually have been standing there.\n\nI drifted back into sleep and dreamt more. These dreams weren't erotic however, but filled with the warmth of feeling loved. Some of my friends had made fun of me when I'd shown up to prom with Emma, but others had looked at her longingly. She'd had a beautiful dress and her hair was even longer then. I'd really appreciated her intervention after my breakup with Jenny; she'd made me go to the dance, insisted on coming and danced with me in a beautiful open backed dress and plunging neck that showed off her bountiful cleavage. That memory stuck with me when I awoke in the morning, well before it was time for us to get ready.\n\nIt wasn't that I had adjusted to the east coast time zone. No, it was subconscious worry that she would see me with the massive erection I was sporting again this morning. My trip to the bathroom required that I relieve myself before I could relieve myself.\n\nTiming had Emma knocking on the door and asking, \"Everything okay in there?\" just at the moment I climaxed.\n\nMy moan had probably worried her, but now her soft and caring voice again linked her in my mind with a powerful release. I delayed my response as the pressure subsided and I was finally able to go.\n\n\"Paul, are you alright?\"\n\n\"I'll be right out, sorry,\" I responded raggedly.\n\nWhen I came out, I was immediately aware that she knew. She passed me going in with a grin and a little redness in her cheeks. There was nothing to do about it, so I proceeded downstairs and prepared us a quick breakfast of scrambled eggs, toast and milk. When she joined me, I got a warm intoxicating hug and some thanks for cooking.\n\nThe morning went a lot like the previous and today we were finishing up the second half of the cornfield. I did a little better on staying focused today and we got done around 11:00 AM. We were back in the house where Mama was fixing a soup for dinner. While she stirred and continued to add items, she made Emma and I a couple of tomato sandwiches. They were some of the ones they'd grown in the hothouse, but they were ripe and tasty.\n\nThat afternoon as we stood on the front porch letting our lunch settle, I told Emma, \"Today, I'm going to take a look at the car, while you work in the vegetable garden, okay?\"\n\nA big grin formed on her mouth. I took that to mean she was good with it. So, I started down the steps.\n\nBefore my feet were in the grass, I heard, \"I guess I knew you'd get around to that soon enough.\"\n\nI turned to say, \"Well, even if Pops can't drive it, I should get it usable again.\"\n\n\"Mama will appreciate it, she's never liked driving the truck.\"\n\nI spent the remainder of the afternoon removing the front wheels, loading them into the truck and taking them in to town to have them replaced with some money Mama gave me. When I got back it was nearly dinnertime, but I went ahead and put them on before going inside. Then I got the keys and tested that everything still worked. The steering was pulling a little to the right, so there was probably a bent tie rod, I'd have to see if I could straighten it out, but at least it could be driven.\n\nBack inside the soup was smelling really good as I went up to shower before dinner. I had grease and dirt all over me and I headed into the bathroom straight away. It took a while to get it all off, but I used the Lava soap to get the bulk of it. When I was finished, I stepped from the shower to find clean shorts, a shirt and underwear again. As I dried off, I wondered if it were Emma or Mama setting these things out for me.\n\nAt dinner, we ate our soup along with open face grilled cheese sandwiches. Pops ate in his room tonight, his foot was bothering him something fierce. Mama said she was going to take him back to the Doc tomorrow to see if something else was wrong. I told her that the wagon was drivable but she'd need to be careful since it pulled to the right. I suggested that the truck would be safer, but knew what she'd probably choose.\n\nAfter dinner I helped with dishes again and went to bed shortly after. As I crawled into bed, I took the cloth from beneath my pillow and dealt with myself in hopes that I wouldn't have any further embarrassing episodes. As I worked myself beneath the sheet I closed my eyes and tried to think of someone - anyone that wasn't like Emma or Mme Soliel. As hard as I tried every time I got close, the image of one or the other would come back to my mind. Finally just accepting it, I allowed the memory of Emma's breasts to be the focus of my masturbatory fantasy. As I climaxed, I allowed her name to escape my lips, and caught the ejaculate in the cloth. Moments afterward, I put the cloth back under my pillow and went straight to sleep.\n\n<hr>After a couple weeks of me being home, we'd gotten into a fairly regular routine and Emma didn't need to get me up each morning. We met downstairs in the kitchen for breakfast, started with gathering eggs and feeding the chickens. Then we'd be out into whatever was on our rotation. There hadn't been anymore accidental incidents and Emma had stayed away from my room for the last week or so. Well, that wasn't quite right, she'd been replacing the cloth I used every few days, but I hadn't asked her about it, because of the previous embarrassments.\n\nThis particular early June day the temperature was getting pretty high and we had really worked up a sweat. The workload had been fairly heavy today and Emma was looking to have a break. So was I; she'd been working us like this without much let up. The garden was coming along pretty nicely and we were starting to pick a few different vegetables: squash, cucumbers, tomatoes and some other items that had gotten a head start in the hothouse.\n\nWe were coming out the front door, Emma had sweat running off her head and her long golden hair was dripping wet and plastered to her shoulders. I could see she was hot, but it felt like she was trying to prove something to me with the pace she was keeping. It was a little after noon, Mama was off to town with the repaired station wagon and Pops was still nursing his broken foot, hobbling around the house. He wasn't much of a cook and he'd mostly just taken to whittling out birds. He was pretty good at making ducks, geese and other waterfowl, so some of the locals would pay pretty well for his decoys. He was sitting in the swing on the front porch working on a new one, when we'd carried in the latest produce from the garden.\n\nI think Pops noticed how haggard we looked too, and wryly suggested, \"You two are getting as ripe as them vegetables. Maybe you should go jump in the lake.\"\n\n\"Very funny, Pops,\" she answered. \"But actually, I was thinking the same thing.\"\n\n\"You just finished saying you wanted a break,\" I encouraged her.\n\n\"Yeah, we've gotten enough done today. You've really been helping me get caught up.\"\n\nWe stood there in the summer warmth watching Pops whittle awhile. She seemed to be thinking about it some more and then she was walking toward the truck.\n\n\"Let's go, Squirt,\" she said to me. \"We'll be back in a while to fix dinner,\" she called to Pops, as she opened the truck's driver side door.\n\nI followed her and hopped in beside her. \"I think we've both earned a break,\" I said hopefully.\n\nPulling away from the house, she said, \"Yeah, you're a pretty good farm hand, maybe even better than Bo. If you ever decide to give up on being a businessman, you can always come back here and be a farmer and an artist on the side.\"\n\n\"You can see what farming has done to Pops right?\"\n\n\"What about me? You think I'm looking worn out too?\"\n\nIt was an odd question and it made me look at her in a slightly different light again. Those first two nights at home had left some lingering thoughts I'd had difficulty shaking. Now she was inviting me to evaluate her. She had on a tank top with a white bra underneath, and a pair of cut off shorts. Her skin was tan and that was the major difference between her and Mme Soliel, aside from age, which I could only barely distinguish. All women seemed attractive to me and age didn't seem to register unless they were very young or old. She drove across the property beyond the sugar maples and up a slight hill.\n\n\"I think you look good for a big sister,\" I answered trying to be diplomatic and vague.\n\n\"But do I look worn out like Dad?\"\n\n\"He's been doing this for quite a while. You're a woman and you're beautiful. If I didn't know what your age was, it'd be a mystery to me.\"\n\n\"Flatterer.\"\n\nAs she started downhill into the small valley, which enclosed the more natural part of the forest, I looked over at her. The bouncing of the truck made her chest do the same and I found myself thinking about the first night. Today her white tank top was a little dirty, but still white and her sweat had made certain aspects of her attire more interesting. She glanced over at me and shook her head.\n\n\"Well, I meant what I said earlier and if I weren't your brother, I'd probably ask you out,\" I said trying to emphasize that I thought she was attractive but off limits.\n\n\"That's sweet,\" she said.\n\nWe remained silent until we arrived at the lake. When I'd been there last we'd both swam in our shorts. Today, she exited the truck and then peeled off her tank top and pants. She tossed them on the seat with her sandals and started running.\n\n\"Last one in, is a squirt.\"\n\nI had to laugh, I'd been set up to fail. I stripped off my shoes, socks, shirt and pants and followed her down. She was already on the tire swinging out over the lake when I reached the water's edge. As the tire reached the farthest point in its arc, she dove off into the water. I watched her enter and the wave she created came in to lap at the edge of the lake. I walked slowly out into it until the muddy bottom dropped off and then I continued to swim toward her. She was floating on her back and doing some backstrokes when I reached her. The water had made her bra almost transparent and my eyes were drawn to the perky pink points that stood upon her chest.\n\nShe noticed me looking, but didn't say anything about it. Despite the fact that the water was still quite cool, I found that I was getting an erection and my face flushed too. I kept swimming out toward the middle where my brothers and Pops had built a platform dock. It was pretty far to swim and when I got there, I found Emma was lifting herself out of the water in front of me. The dock was used for sitting, fishing and sunning. The last one had been what she seemed to have in mind as she lay out on the weather worn planks. Now, as I lifted myself out of the water, I found myself facing her wet pubic mound, which left very little to the imagination and my erection returned.\n\nI tried to lay in the sun beside her and ignore it, but the warmth of the sun and her lying beside me just wasn't letting it go away.\n\nAfter a while, she sat up and said, \"Well, at least I believe what you said in the truck.\"\n\n\"Sorry.\"\n\n\"Don't be, I'm taking it as a compliment. I'd been getting used to the idea that I'm going to be an old maid and you're kind of telling me that doesn't have to be the case.\"\n\nI wanted to crawl under the dock for a moment, but I could tell she wasn't upset or annoyed with her pervy little brother's boner. As I continued to lie there, I wasn't sure what to do. I could feel her looking at me as she leaned back on her arms watching me. It throbbed so that my underwear barely constrained it and the tip felt like it was going to creep out.\n\nAfter a time, I heard her moving about and then lie back down to sun herself. When about fifteen minutes had passed, I turned to lie on my stomach and as I did so, I got a bit of a shock. She was nude. I guess when I hadn't been looking, she'd removed not just her bra, but her panties as well. That pretty much ruled out my lying face down. I lie there on my side staring at her in disbelief. Her eyes were closed but her soft words cut through the tranquil silence.\n\n\"Are you thinking of sketching me like this?\"\n\n\"I could, unless you don't want me to.\"\n\n\"I would never try to censor what you draw and I already said I would sit for you.\"\n\n\"Yeah, I just didn't expect to render you nude.\"\n\n\"All the great artists did nudes. You should try doing me.\"\n\n\"I'm not really an artist.\"\n\nThat reply had her sitting up to look me squarely in the eyes, \"Yes you are. Would you draw me like this from memory tonight?\"\n\n\"Okay.\"\n\n\"You think I could watch?\"\n\n\"Um - yeah - I guess.\"\n\nShe leaned back on her arms and I continued gazing at her nudity. There was a knot in my throat and fluttering in my stomach. Her breasts were beautifully full and evenly tanned such that there was only a slight change in the skin tone from her shoulders to her breasts. Her arms were slightly darker and her lower legs were as well. In my position, I could just make out the lips of her pussy, since her legs were spread slightly.\n\n\"You can take yours off and even out your tan too.\"\n\nI thought about it and decided it was only fair, I'd been staring at her for an unknowable amount of time. The boner in my boxers hadn't diminished in the least and after I removed them, I leaned back like she was. It pointed almost skyward like a sundial. Emma didn't say anything, but she did look over at it and when she did it reflexively twitched, which brought a smile and another shake of her head.\n\n\"How are you going to draw me if all the blood has run out of your head?\"\n\n\"It's confused about which head to run to,\" I joked.\n\nAfter a time, I lay flat. The erection went down some until it was flat on my belly and I dozed off. \n\nA soft touch on my shoulder awoke me and Emma said, \"You need to turn or you're going to burn.\"\n\n\"Oh, thanks,\" I said.\n\nAs I rolled onto my side toward her, I watched her watching me. I looked down to see my cock was hard again and oozing some fluid at the tip. Looking back at her, she had a crooked smile on her face that I couldn't quite figure out. She was lying on her side with her knee up so that I could look directly at her pussy now for the first time. She had a bushy bunch of golden blond hair there, but her outer lips were full and her long clitoris protruded outward from her prepuce.\n\nAs I continued to study it, I noticed a glistening below the swollen lips around the entrance to her vagina and I could smell her. The air over the lake was nearly still and the platform was warm. I ran my eyes slowly up her body taking in all of her features, the slight pouch in her abdomen, nearly imperceptible stretch marks along her hip, and the long tightly crinkled nipples that stood out prominently on her breasts. When I reached her eyes, I just felt the love that seemed to pour forth directly from her soul.\n\nShe broke the trance by lying flat on her stomach and I followed suit, although uncomfortably for the first few minutes. It lessened some, but it was remaining uncomfortable and after a while, I got up and dove off into the water and swam back toward the tree with the tire swing on it. When I reached it, Samson was on the lake watching me come ashore. As I pulled the swing up onto the large rock we used for our launching pad, he watched until I started to swing out over the water and then he dog paddled toward me.\n\nWhen I jumped off the tire into the water, he had nearly reached me and was heading for the platform, where Emma was sitting up watching us. Samson went around to the side where Pops had made a small ramp and he climbed up it and shook himself off getting her wet. She let out a shriek, stood up, and dove into the lake with me. Then right behind her Samson jumped back into the water with my shorts in his teeth. He was playing at something, but when he came to give them to me, he dropped them and continued back to the diving rock. I rushed to grab them but watched in dismay as the air bubbled to the surface and the already wet boxers sank into the water still slightly out of reach.\n\n\"Samson...\" I exclaimed. \"Dang-it, those were almost new.\"\n\nI dove down trying to see if I could find them, but came up empty handed. As I surfaced, I discovered that Emma had swum over too and right after I caught my breath, she dove down to take a turn. She didn't resurface and I moved around trying to see if I could locate her. When she finally came back to the surface, her backside slid right up my semi-stiff cock, which sprang right back with excitement as it leapt between her legs and the expanding tip brushed against her pussy.",
        "\"Oops. Well, I found two things,\" she said handing them back to me and breathing hard.\n\n\"Thanks for finding them,\" I said, as she turned to face me even closer.\n\nMy cock was now pressing against her belly, but she didn't rush away as I'd expected, she just said, \"You ready to go or should we take the rest of the day off.\"\n\n\"Can we stay? You've really had us hard at it for the last couple of weeks. It's nice here and it's been a while since I've had any fun, like this.\"\n\n\"Uh huh, me too.\"\n\nWe lingered like that for a while, it was as comforting as it was odd. I could feel the questions she had for me. She'd already told me she was going to ask. With her this close, there seemed to be an additional pressure.\n\n\"Go ahead and ask; I know it's coming.\"\n\n\"How long has it been?\"\n\n\"It was Christmas break three and a half years ago with Jenny.\"\n\n\"Seriously, Paul, there hasn't been anyone since then?\"\n\n\"I've been focusing on other things.\"\n\n\"She did a real number on you. I don't want to say I told you so, but you remember the dance?\"\n\n\"Jenny's prom?\" I asked indefinitely, pretending not to fully remember the fight Jenny and I'd had at her senior prom.\n\n\"You know good and well what I'm talking about. I told you then, that you were headed for a heartbreak. You were too young to be head over heels in love like that. Especially with her set to graduate a year ahead of you.\"\n\nShe had warned me and her stating it the way she did, brought the memories of that event clearly into focus. That was really the first time she'd warned me. The next time was right before Jenny's first winter home from UVM. Emma's final cautionary words had come the night before I lost my virginity and Jenny broke up with me a day later. The shock of those two consecutive events made Emma's warning even more memorable.\n\n\"I don't know if there's anyone out there for me,\" I said sadly.\n\n\"You're going to get out of practice if you don't take a chance.\"\n\n\"Yeah, like that's going to happen around here. Everyone knows Jenny dumped me and why. I don't even know how to interact socially.\"\n\n\"You could practice being social with me.\"\n\n\"It'd feel weird, wouldn't it?\"\n\nWith that, she took me softly into her hand. \"You've heard the phrase 'use it or lose it'?\" My cock strained against her grip and finally she released me. \"Sorry, I shouldn't have.\"\n\n\"No, you're right, but I don't know what to do about it. What about you; are you looking beyond Bo?\"\n\n\"No - well - I don't know,\" she said thoughtfully. A tear was almost forming, but she fought it back and looked directly into my eyes, \"I took it pretty hard and I'm not looking to get involved anytime soon. I don't know about finding Mr. Right either, but I'm not ready to give up on finding someone eventually and neither should you.\"\n\nI thought about that as we lingered together. She wasn't just being strong for herself, she was telling me I shouldn't give up. Maybe I should have heeded her words about Jenny sooner, but it couldn't be undone now. Emma had met Bo through a friend from college, shortly before I left for the University of Washington. The only other boy I'd seen her with had been the guy from Woodstock. He'd visited a few times afterward, but had moved out to California to chase a music career.\n\n\"Did you have other boyfriends before Bo?\" I asked cautiously.\n\n\"Yeah, some. Lots of guys chased after me in high school. I went out with a few, but I wanted to get through school and not end up like Mama -\" she said cutting herself short.\n\nNeither of our parents had gone past high school. I assumed that was what drove Emma. I waited to have her finish or give some further details. When none came, I asked, \"What about in college?\"\n\n\"Some dates and I saw one guy for a while, but I was too young -\" she fell silent again for a long while. She was deep in thought and when she spoke, she changed the topic back to me. \"You've just had the one, haven't you?\"\n\n\"Yeah - you know - why - um - why she broke up with me, don't you?\"\n\n\"She wasn't very nice, Paul. You shouldn't take her word on much.\"\n\n\"You think she just said it to be mean?\"\n\n\"Maybe not, but who spreads that around a small community.\"\n\n\"Well, I didn't make her - you know - cum.\"\n\n\"Everyone is different, you were a virgin, and I don't know what she expected.\"\n\n\"She'd already had sex with some guys at college and when I'd been no good, she just told me how bad I was and broke up. I thought she loved me after we'd dated all that time, but I guess it was all for show.\"\n\n\"I think it's kind of rare to get both love and good sex. Bo and I had good sex, but looking back, I don't think he ever loved me.\"\n\n\"I only got the one shot at it and I don't think I got either one.\"\n\nThen she took me gently back into her hand, \"It's not like this thing came with a manual.\"\n\nHer contact took me by surprise and I sucked in a gasp of air. The first time she'd done it, it'd seemed joking or playful but this felt different. It was nice. It was tender and caring. I wanted to hold her and ask if she would. I was almost willing to beg, I needed to know, but something inside prevented me. The shorts in my hand felt awkward and I wanted to get rid of them.\n\nFinally instead of asking her to teach me I just said, \"I know how mine works, it's the other one that needs a manual.\"\n\nBut I didn't give her a chance to respond because even that admission was too much. Overwhelmed, I broke away, to swim back to shore. There I climbed up by the rock where Samson was sunning, pulled down a higher tree branch, I was sure he couldn't reach, and I hung my boxers over it to dry. Then I grabbed the swing, walked it way back and took a running start to launch out over the lake. When I was high above the water, I dove off and created my own huge splash.\n\nSurfacing in the cool water, I felt instantly relieved and invigorated; being here skinny-dipping with Emma wasn't what I'd expected, but I found myself enjoying it in spite of my previous embarrassment. The wake of the wave I created bobbed Emma lightly, but she didn't appear to have moved from where I'd left her. She just floated aimlessly as she seemed to be considering something deeply. Concerned I might have damaged our special bonds, I swam back toward her.\n\nWhen I reached her, I was about to ask if she was okay. Before I could get a word out, she encircled her arms around my neck and wrapped her legs around my midsection. The warmth of her against me was wondrous. Her pussy was directly atop my rigid cock, she kissed me, and I kissed her back. It wasn't a tonguing French kiss, but it wasn't a brother-sister kiss either, as our mouths were open slightly and our heads tilted. After a moment, I felt her rubbing against my rigidness and we broke the kiss. Floating face to face, she looked deeply into my eyes.\n\n\"Maybe I could show you,\" she said softly.\n\n\"We can't - it'd -\"\n\n\"Well, we could...\"\n\n\"What if I got you - um -\"\n\n\"You can't; no one can.\"\n\n\"What?\"\n\n\"I can't have kids.\"\n\n\"What? How do you know that?\"\n\n\"I had some problems shortly after high school and the doctor told me I can't. Plus I didn't use protection with Bo for nearly three years.\"\n\n\"Even so, it'd be -\"\n\n\"Yeah, but there's a bunch of that in the 'Good Book'. Look, you don't have to decide right now. If you're not comfortable, I'm not going to force you. I'm just saying that I'd be willing to be your learning partner.\"\n\n\"Jeez, Emma, this isn't like teaching me to ride a bike or how to dance.\"\n\n\"I don't want you to be alone in life and I'm willing -\"\n\n\"I don't know,\" I said as a shiver quaked down my spine.\n\n\"We've got all summer...\"\n\n\"I'll think about it.\"\n\nWe remained entangled like that in the water. My cock continued to strain against her until my balls began to ache from the constant erection. It twitched along her slit, which alerted her to the pained look that must have been upon my face.\n\n\"Sorry, I wasn't thinking -\" she whispered.\n\nSeeming to realize what was happening, she released me to swim free. She headed back to the dock to retrieve her undergarments. Then floated on her back to the shallows and walked ashore keeping them above the water the entire time. Once there, she went to the truck, pulled out an old towel to dry off and then put all of her clothing back on. I watched her standing there looking out at me as if she were deciding something. I thought for a moment that she might drive off without me, but she came back and sat on the diving rock that Samson must have vacated without me noticing.\n\nWith my erection diminished, I swam towards the rock and climbed up on it. After I was mostly dry, I replace my boxers from the branch. I sat beside Emma, uncertain of where we were. It was all very confusing and a million questions tried to escape my mouth. Why did I want her? Did she really want to do that with me? Wouldn't it be wrong? ... \n\n\"Are you mad at me?\" was the one that made it out.\n\n\"No, never. I hope I didn't scare or scar you, I only want to help.\"\n\nWe sat for a while looking at the water. The sun was starting to get low enough that I knew it was approaching time for us to head back.\n\n\"You sure, you weren't thinking of driving off earlier?\"\n\n\"No, I was thinking about how nice it'd be to have something permanent here besides that old dock. Some kind of shelter and maybe a stone fire-pit.\"\n\n\"That would be nice,\" I said, not knowing if that was what had really been on her mind.\n\n\"We could stay longer, maybe even overnight.\"\n\n\"Yeah, that'd be cool,\" I replied, as I wondered about her motives. \"You think Pops would let us build that?\"\n\n\"Well, they want me to buy them out, so I figure I'm in charge now.\"\n\n\"Does Pops know?\"\n\n\"Nah, I'll just start getting supplies together, he had some stuff left over from the addition.\"\n\nA little while later she ask me, \"Are we okay?\"\n\n\"Yes. I'm thinking about your offer, like I said.\"\n\n\"Alright, well, we best get back and fix Pops some dinner. Mama is going to be out late playing bridge.\"\n\nWe walked back to the truck. She hopped into the driver seat and waited while I put the rest of my clothes back on. Then she drove us back to the house. Pops was back in his bedroom again and said he didn't want to eat. Emma and I made some dinner anyway, making sure we had enough for him and Mama if either one wanted some. She usually got back from her bridge game around 10:30 PM, so we'd leave her a plate in the refrigerator. As we made the dinner, we chatted a little and eventually I asked her another question that was nagging at the back of my mind.\n\n\"You think he's okay?\" I whispered.\n\n\"I don't know, it seems like there's something besides his leg and foot bothering him.\"\n\nI helped Emma prepare some of the squash from the garden for dinner. We boiled some potatoes to mash and she fried up some liver and onions to serve over it. It was on the table by half past six, but Dad didn't join us. Emma and I ate in silence that seems slightly foreboding. Sometimes, I wished I could read people's minds.\n\n\"This gravy is some of the best I've had in a long time,\" I said finally.\n\n\"You like it?\"\n\n\"I like all the things you make for me. I really meant it about the care packages you send.\"\n\nShe smiled as she got up to do dishes and I joined her after I wolfed down the rest of my potatoes. We worked to get the kitchen straight and made a plate for Mama. When we finished, I let Emma get her shower first, while I went in to check on Pops.\n\nHe was on the bed atop the covers watching a western. There was a bar scene shoot out that had the lawman winning. After the body was carried off, the Marshal drank a quick shot of whiskey and made some wry comment. Pops didn't seem to be paying much attention but he looked up when I came in to the room.\n\nHe seemed kind of down and I asked him, \"Isn't there something I could get you?\"\n\n\"I could use a glass of water, but I'd take somethin' stronger if ya offered.\"\n\nI didn't think my dad drank and his request took me by surprise, but I asked, \"Does Mama let you keep anything in the house?\"\n\n\"No, not in here.\"\n\n\"Have you got some hidden in the shed?\"\n\n\"It's too far to go on these darn things,\" he said indicating the crutches.\n\n\"Tell me where it is and I'll get you some.\"\n\n\"It's behind the tobacco can, ina mason jar. Wouldja gemme a couple fingers of it in a small glass?\"\n\n\"Okay, I'll be back in a minute.\"\n\nWith a glass from the kitchen and a flashlight from the drawer by the phone, I headed out to the shed. It was dusk and the moon was out, but there wasn't much light inside the shed. Although there was one over the tractor, it didn't put much light on the workbench. I wondered if maybe that was intentional, now that I knew Dad kept a stash. The shed was like a small barn, but there wasn't any hay stored in it, there was a real barn closer to the road, so he could sell bails and load them easily. Inside the shed, I flipped on the light, and then the flashlight to look for the tobacco can. It was behind a bucket and the Mason jar was behind that. I opened it up and poured him about half a glass, just a little more than the width of two fingers, and took it back into him.\n\nHe sipped it slow and said, \"Thanks Sonny. You won't tell Mama 'bout this.\"\n\n\"No sir. Are you feeling okay Pops?\"\n\n\"Just this foot - gettin' me down is all.\"\n\n\"Okay, well, I'm off to bed. Goodnight,\" I said, as I bent and gave him a light hug.\n\n\"Night, Sonny.\"\n\nI left his room and headed upstairs to get showered and ready for bed. His dour mood was uncharacteristic and it worried me. In the still steamy bathroom, I stripped off my clothes and piled them in the hamper. As I washed, I was already drawing Emma from memory. This afternoon's interaction had me excitedly perplexed about how to proceed, but I could focus on drawing her.\n\nWhen I finished showering, I dried off, hung my towel and headed back to my room nude. After the way we'd seen each other this afternoon, it hardly seemed necessary to cover myself. I partially closed the door, pulled the drawing pad from beneath the mattress and crawled into bed beneath the sheet. Dusk was quickly becoming night, so I clicked on the light on my nightstand and took up my pencil.\n\nI was starting to rough in some vivid details of her form as she'd reclined on the dock in the sun, when she popped into my room. Tonight she had a slightly different gown on. It was even shorter and as she crossed the space between us, I caught glimpses of her curly golden pubic hair which peaked out mid-stride and evidently unencumbered by panties. The straps were thinner attached to smaller triangles that had the neckline plunged well below the bottom of her breasts. Her nipples were taut and swayed slightly beneath the silky fabric as she approached. Although I'd seen her nude, this outfit seemed like something she might have worn for Bo.\n\n\"Hey, you were going to let me watch,\" she said as she scooted onto my bed and leaned against my left arm.\n\n\"Oh, well - um - I can start another one. This was just fresh in my memory and -\"\n\n\"No, keep going,\" she interrupted. After a moment she asked, \"What else would you draw?\"\n\nThe thought of her laying on her side with her knee cocked up came to mind in a flash and the sheet twitched. I could envision the glistening moisture around her slit. \"I could draw when you were lying on your side.\"\n\n\"Hum, yeah. I forgot I'd done that.\"\n\n\"You want me to finish this or start on that?\"\n\n\"Both.\"\n\nI continued to draw her in the reclined position, I felt myself rushing a little to get to the next one. The scent of her hair was mixed with that fragrance I'd detected on the dock and I wondered if she were wet. I stole a glance at her chest and took a deep breath.\n\n\"Is my watching making you nervous?\"\n\n\"No, it's not the watching.\"\n\n\"You like how I look?\" she asked looking down towards my lap.\n\n\"How can you even ask that after -\"\n\n\"It's nice to hear it.\"\n\n\"You're the most beautiful woman I know.\"\n\n\"Prettier than that woman in the drawing?\"\n\n\"Yes!\"\n\n\"You're just saying that.\"\n\n\"No, I'm not. But you are my sister.\"\n\n\"He doesn't seem to know,\" she said, reaching beneath the sheet to gently touch me again.\n\n\"Uh-huh,\" I shuddered at her touch.\n\n\"You want me to stop?\"\n\n\"Nuh-uh,\" I said as my eyes closed and I tilted my head back against the headboard.\n\nHer hand encircled me softly. She wasn't stroking me, simply feeling how excited I was. I could feel every pulse of my heart against her light grip and I felt her lift the sheet slightly.\n\n\"It's very handsome,\" she said.\n\n\"Is it - uh - you know?\"\n\n\"God, why are all of you guys obsessed with how big it is?\"\n\nI didn't know how to answer her, but she knew what I was asking and I remained silent. The sheet fell back into place as she removed her hand and patted my leg.\n\n\"Sorry, I didn't mean to fuss at you. It's nice.\"\n\n\"Do you really think, I'm hansom and -\"\n\n\"I wouldn't say it if I didn't.\"\n\nI knew instantly that her words were true. Neither her nor my parents ever said much that they didn't mean.\n\n\"You want me to finish drawing you?\"\n\n\"Of course.\"\n\nI sat back up and resumed where I'd left off. It didn't take long to finish the sketch, since I'd had much of it done before she came into my room. There were details missing that I wanted to get right without making it too graphic. After I'd drawn some of her erotic areas, I worked at lightly smearing some of the lines with my finger and lightly tracing them. Then I worked on the background of the worn wooden planks and the ripples on the lake. When I thought I had it about right, I handed her the pad.\n\n\"Wow,\" she said immediately. Then she studied it like she had the others I'd drawn of her. \"You softened my face and you certainly think I have big breasts.\"\n\nShe did kind of have big breasts. \"I don't think I've exaggerated them, but it was the first time I've seen them for any length of time.\"\n\n\"I wasn't complaining; it's really good,\" she offered, as she handed the pad back.\n\nI looked at the picture I'd drawn and then down at her. A smile spread across her lips and she sat forward a moment to pull the straps off her shoulders. The silky material fell revealing those twin globes of desire and she rotated herself on the bed so they were facing me. At the lake, I'd been this close in the water and I hadn't been quite this close on the dock. I stared at them longingly. They were within reach and I was very tempted to cup them in my hands. As if she were reading my thoughts, she took my pencil and set it on the nightstand. Then she took my hands and moved them to her breasts.\n\nThey were soft and warm. Instinctively my thumbs lightly traced her areolae and nipples. They tightened against my touch and goose bumps formed across her exposed skin.\n\n\"See, they aren't quite as big or firm as you've depicted them,\" she said with a sudden shudder.\n\n\"Actually, I don't think I've done them justice,\" I said as I continued to squeeze and caress them.\n\nAfter a few moments, I realized I was smearing graphite on her left breast with my index finger. Reflexively, I took the corner of the sheet, licked it to dampen it and dab the smudges away. As I finished, I felt her hand about my member again. In the process, I'd uncovered myself and she'd simply grasped me again.\n\n\"You don't have to worry about obscuring my pussy on the next one,\" she offered, as she let go and pulled her hand away with a devious smile.\n\n\"I've only seen two. The first was pretty brief and in a somewhat darkened room. The second was today.\"\n\n\"Oh, yeah - well, here,\" she said, as she got up from the bed.\n\nBeside me, she proceeded to wriggle her negligee down until it fell onto the floor. Then she assumed a slightly different position on the bed opposite me. As she climbed back on the bed, her leg swung over and across mine. Then she reclined a bit and propped her foot up so her right knee was raised and gave me an even closer view of her uncovered pussy than I'd had on the dock. The feel of her skin on mine was making me harder, but I tried to maintain my composure as I did my best to recall her on the dock. The direct view of her here with her legs splayed open was making it difficult to remember. That was especially true because her glistening slit was nearly open, her lips engorged and clit stood out proudly. The golden blond hair was thick on her mons, but thinned until almost bare skin between her legs.",
        "I closed my eyes trying to picture her on the dock. Nothing was coming until the aroma clicked in my senses. My eyes flew open and the image of her spilled out onto the pad as if it'd been traced by a machine following a stencil. The curve of her breasts, the creases of her labia and even the light moisture that she'd had, all ran through my pencil. Emma sat forward as my hand contorted this way and that to get the various shading I wanted. In the drawing, I'd left out any traces of the dock or lake and instead focused solely on her. It felt done, but I wasn't entirely happy with the explicit nature of her pussy.\n\nI was about to erase a little and tweak it when she stopped me, \"No, don't, you've got it right. It's amazing.\"\n\n\"It's upside down, how can you tell?\"\n\n\"I have a hand mirror -\"\n\n\"Oh, I see. Well, here,\" I said, as I handed the sketchpad to her.\n\nShe took it and scooted to rejoin me at the head of the bed. We sat there together for an unknown amount of time. Both of us were completely nude and I had no sheet to hide my excitement. She finally stopped looking at herself, closed the pad, and put it in the drawer of the nightstand.\n\n\"It's very good; you better not let Mom find it,\" she said. \"It should be safer in there. I have to admit something to you,\" she said and paused as she tried to frame the words. \"You know I changed your sheets and put the cloth under your pillow?\"\n\n\"Yeah, I figured, after you saw me -\"\n\n\"It's a normal thing - that's not what I need to say. I - I found your sketchpad, before you showed it to me.\"\n\n\"Yeah, of course you did; I wasn't even thinking -\"\n\n\"It was an accident; I was changing the sheets and there was the lump under there.\"\n\n\"So you'd already seen them?\"\n\n\"No, I didn't look, but I wondered if maybe you were drawing me. Then after you trampled over those plants, I saw that look you had and I wanted to know.\"\n\n\"Yeah, I'm not very tactful am I?\"\n\n\"Look, don't feel pressured by my offer. I'm missing contact with Bo and I think I've probably stepped over the line. The thing is I feel partly to blame for Jenny.\"\n\n\"How's that? I should have listened to you.\"\n\n\"No, I heard something about her before she left for college.\"\n\n\"The senior's spring break trip?\"\n\n\"Yes.\"\n\n\"I heard the rumor too. But she told me it wasn't true when I asked her about it.\"\n\n\"Well, I asked one of the chaperons, ol' Miss Ellison, and she told me how she'd walked in on them. I almost told you that night of prom, but instead I warned you so you could break it off without getting hurt. I thought that you could have moved on to a nice girl in your graduating class.\"\n\n\"Maybe.\"\n\n\"No, I messed up; I should have told you what I knew. I could have prevented what happened.\"\n\n\"Don't put that on yourself, Emma. You did warn me and it nearly worked, but who's to say how I would have reacted to her getting wild in Florida. Maybe I even half knew it was true.\"\n\nWith that, she hugged me close and I put my arms around her in response. Her breasts pressed into me and the scent of her hair brought my declining mast back full. I wished with all my heart that she weren't my sister because what I felt for her at that moment wasn't lust. It was the kind of pure love that rendered my mind senseless. The blended sex dream where Mme Soliel had morphed into Emma returned to my mind in a flash. And her offer to teach me simply added embers to the fire that was taking hold of me. Every heartbeat seemed like a drum in my head.\n\nLight flashed across the window and we each realized Mama was home at the same moment. Emma reached over and turned the lamp off. I watched her pull her gown on quickly and head toward the door.\n\n\"Good night, Emma.\"\n\n\"Yeah it was. Good night,\" she said with a giggle and was gone.\n\n<hr>The next couple of days went by in a blur that didn't include any trips to the lake or visits from Emma. She and Mama took the two days of nearly constant rain to work on projects around the house and getting some things taken care of in town. I got assigned taking Pops back to the doctor's office for another checkup since his mood didn't seem to be improving.\n\nWhen the rain stopped Thursday afternoon, it cleared up entirely and even started to dry things out a bit. We still hadn't spoken much and it felt like she was giving me space to work out whether to take her up on the offer. I wanted to, badly, I just wasn't sure what it'd mean or do to our relationship. My feelings of love for her hadn't receded much and she was so recently broken up with Bo, I worried for both of us.\n\nThat evening after I fixed and cleared dinner for Pops and myself, I went outside to find the full strawberry moon rising over knee high corn. In a fog of wistful thoughts, I soon found myself walking amongst the stalks puffing on my old corncob pipe. Without even realizing it, I'd gone to the shed to retrieve it and gotten some of Pops' aromatic tobacco to fill the bowl. The tobacco was out there because Mama didn't let either of us smoke anywhere near the house. She'd preferred we not smoke at all, but despite her aversion to alcohol, she was okay with us having an occasional pipeful of Pops' favorite blend.\n\nMy dad probably missed his true calling as a woodworker. Besides carving waterfowl, he made all kinds of furniture, household aids, toys and pipes. I figured everyone has some vice and his was a rich fragrant tobacco, although he didn't smoke it all the time. About a week before my thirteenth birthday, which occurred towards the end of the fall harvest, Pops had actually helped me pick out a nice big cob, from some fat ones he'd been drying, to make my own pipe. We'd turned the outside on his lathe and used a spoon bit to drill the center hollow. Then we'd used a mixture of mud and plaster of Paris to coat the inside, which made it smoother and last longer. It'd taken a few days to cure, and we'd put in a stem we made from a hardened reed.\n\nI hadn't taken it to college with me, it felt uncultured or undignified, but being here now - well, I felt like indulging. I'd always liked to puff the smoke into my mouth and taste it while I thought deeply. It seemed to focus my mind like pacing did and combining the two was even better. \n\nThe quiet solitude of this evening had me thinking and pacing in the field. Thoughts of my drawings I'd made of Madam Soliel and how I'd felt attracted to her combined with how Emma had me in various states of arousal over the last few weeks. I was pondering an outlet other than self-abuse but there simply hadn't been any women in my classes or around here that I found as attractive as either of them. I knew Mme. Soliel was out of my league even if she weren't married and I was graduated. Emma - well - damn it - they were both forbidden fruits for different reasons. I hadn't decided what to do about Emma's offer of teaching me, it just felt too weird. I knew I wanted to badly, but admitting that made me feel even worse.\n\nThe night wore on and as I paced back toward the house, through the endless row, I came upon Emma or perhaps she'd come upon me. She was wearing a white tube top and the moonlight shown off of it as she approached. The warm summer night had me sweating. I couldn't tell if she was sweating, but her nipples were poking straight out of that top. I felt guilty, but couldn't take my eyes off them.\n\n\"You and Mama got home early,\" I said across the distance.\n\n\"Yeah, she's worried about Pops. What are you out here thinking on, Squirt?\" she asked, in a quieter tone when she was close.\n\n\"How do you know I'm thinking on something?\"\n\n\"I know you, Paul. I practically raised you from the time you were five.\"\n\n\"Yeah, I guess. Mama tells of you going off to college when I was about nine months old, so I guess you had a hand in changing my diapers too,\" I teased her.\n\n\"Yeah, I had you potty trained before I left. Why do you think your nickname is Squirt?\"\n\nThe revelation those words carried, rolled over me like a tidal-wave. That was what it had been about all this time. I wanted to laugh as I imagined her changing me or helping me use the potty for those first attempts and getting squirted in the process.\n\n\"Why do you always torture me so?\" I finally asked, as I tried to take a puff from the pipe.\n\nIt'd gone out and I pulled out my gold lighter to relight it. The flame danced in the bowl as I sucked in short quick bursts to light it. The light shown in Emma's face briefly, until I flipped it shut and put it back in my pocket. Then I took a big puff from the pipe, blew a smoke ring and watched it rise above my head.\n\n\"Sorry, that was mean. Seriously though, what are you doing out here alone in the moonlight, smoking your pipe and pacing the fields?\"\n\n\"Well, I'm thinking about what to do. I haven't had any kind of romance in my life since Jenny dumped me and I don't see it changing.\"\n\n\"Aren't there some girls your age in your classes you could date?\"\n\nI thought about the question and realized that that might be part of my problem. \"I can't honestly say. I mean I know there are, but I don't see them like that and maybe they don't see me like that either.\"\n\n\"You're talking in circles, mister. You do like women, don't you?\"\n\n\"Of course, I like women! You've seen how excited you've gotten me,\" I said, letting down my defenses even though it felt like a trap. I blurted out the core of my problem, \"I don't just want sex though. I want the whole package.\"\n\n\"Who are you drawn to?\"\n\nI knew she'd seen my sketches of Mme Soliel and our interaction recently had me wondering if Emma felt something too. I guessed it was possible that she hadn't figured it out.\n\n\"I was really attracted to one of my professors, but she's married and that'd never work anyway.\"\n\n\"So you have a thing for older women.\"\n\n\"No, not all older women, just some.\"\n\n\"The woman in the drawings?\" she asked, putting things together.\n\n\"Yes, but like I said, she's married.\"\n\n\"Who else? How many?\"\n\n\"I can't say.\"\n\n\"Can't or won't?\"\n\n\"You're so hard on me,\" I said defensively. She folded her arms across her chest and I finally just told her, \"I only seem to be attracted to a couple of older women I can't have.\"\n\n\"The professor and who else? Mom?\"\n\n\"No, not Mama,\" I said dismissively, although now that she'd mentioned it, I wonder if I am or ever was. \"I don't think I am anyway.\" I knew she was fishing but I couldn't let myself say it aloud.\n\n\"Aunt Sarah, cousins Marva or Sally?\"\n\n\"No, no and no and I don't think I should answer any more,\" I said.\n\nNow I was kind of thinking about them too. They were Mom's older sister and her two daughters, who were older than Emma was. All of them had strikingly golden hair like Mom and Emma. Sarah and her husband had moved south to retire already and Marva and Sally had moved off with husbands, so I wasn't even sure where they were currently. Pops younger brother James didn't have any kids or even a wife. I took several repeated puffs from the pipe. I could feel my embarrassment growing and had to wonder why she was pressing this. Maybe she did know and it was dawning upon me that I was only drawn to women that looked like Emma.\n\n\"There's nothing you could say that would shock or offend me, so out with it.\"\n\nI hesitated for several moments. Her words seemed sincere and even though she teased me sometimes, she'd always been there to take care of me and help me. It felt like she must know it too, the way she'd been acting since I came back home for the summer and her offer of teaching me.\n\n\"You, Emma, I'm attracted to you!\" I said in a little too loud of a whisper.\n\n\"Yeah, you really help my self-esteem.\"\n\n\"Well, it's more than that - I think - I'm in lo-\"\n\n\"Ohhhh shit!\" she exclaimed. \"I wasn't - oh - sweetie - I -\" her voice trailed off to mutterings that I interpreted as rejection.\n\nCertain I'd screwed up, I quickly retracted, \"Sorry, I shouldn't have said that.\"\n\n\"No, it's okay, I'm not offended. Obviously, I'm attracted too,\" she said but then hesitated. \"I don't know if I've ever thought about you in that way. I love you, but -\"\n\n\"Look, I'm leaving in two months; we don't ever have to talk about this again. I'm really sorry, I'll work it out,\" I said and started to walk away.\n\n\"Wait Paul.\"\n\n\"Why?\" I asked trying hard to hold back the hurt and continued walking.\n\n\"You came home to get away from her didn't you?\"\n\nHer words stopped me cold in my tracks, \"Yes, well no, to stop thinking about her. I was obsessing.\"\n\n\"And now you're obsessing about me.\"\n\n\"No - maybe, I don't know. You're very attractive to me. I have loved you as a caregiver and sister for most of my life. Now, I feel like I'm in love with you but can't have you either.\"\n\n\"I think I understand.\"\n\n\"Maybe you can explain it to me, because I sure don't,\" I said, as I took a big drag and accidentally inhaled some into my lungs, which started me coughing and sputtering.\n\n\"Give me that,\" she said. \"You're liable to set yourself ablaze.\"\n\nWhile I continued coughing, Emma puffed on the pipe and blew some smoke rings of her own. I'd never seen her smoke a pipe or a cigarette for that matter. My eyes were watering fiercely when I finally got myself under control. She patted me on the back gently, then popped the last of the bowl out against her heel, stomped it out, and handed me the pipe back.\n\n\"Dad's blend is really good, but I prefer Uncle Jimmy's. That's who gave you the lighter isn't it?\"\n\n\"Yeah, for graduation,\" I said, as I wondered about the sudden change in topic.\n\nThen just as quickly, she switched back, \"Maybe what we could do is practice your approach as well.\"\n\n\"Approach?\"\n\n\"Yeah, maybe you're going about it wrong. I don't know if you want to date professors, but maybe slightly older women.\"\n\n\"I don't have an approach; I'm not even trying.\"\n\n\"Well there's the problem. We'll work on it.\"\n\n\"How? I don't think I can learn this from my sister.\"\n\n\"What if I weren't your sister? How would you ask me out?\"\n\n\"Well, I've already told you how pretty you are. You've seen how I look at you. You felt the effect you have on me at the lake and while I drew you the other night.\"\n\n\"So turn those thoughts into words that convince me to go out with you.\"\n\nI thought about it a moment or two and gave it my best effort. \"Emma, I think you know that I like you and find you attractive, would you go on a date with me?\"\n\n\"Hmm, that's pretty good. Yes, where would you like to go?\"\n\n\"I hadn't thought that far.\"\n\n\"You've got to be ready for 'yes', mister. Go again, ask me out again.\"\n\n\"Hey Emma, we've been hanging around together for a while and I'm attracted to you. Do you think you -\"\n\n\"Nope. Try again.\"\n\n\"Emma I'm falling in love with you -\"\n\n\"No. Come on, you don't want to scare the woman off. Being attracted and falling in love are two different things.\"\n\nThey were two different things, but I'd already gotten to the second part with her. I wanted to ask her how you hide it when you already feel that, but then realized how crazy that sounded. I tried a number of other pickup lines on her, none of which worked. I didn't know what she was looking for so eventually I wound up back at the one that'd almost worked.\n\n\"Emma, you know I like you and am attracted to you, right?\"\n\n\"Yes.\"\n\n\"Would you like to go on a date with me?\"\n\n\"Yes, Paul, that'd be nice. Where would you like to go?\"\n\n\"I was thinking dinner and then a movie in town, tomorrow?\"\n\n\"Okay, you can pick me up around four-thirty.\"\n\n\"Okay, I'll see you then.\"\n\n\"Where will you be taking me?\"\n\nHer double entendre nearly tripped me up, \"The - um - steak house on Main.\"\n\n\"Oh, nice and what movie?\"\n\n\"I think there's a new 'Indiana Jones' movie.\"\n\n\"Oh, I like that guy. He's almost as dreamy as you.\"\n\n\"Knock it off, I thought you were helping me.\"\n\n\"I am, I can't wait to go and you better not disappoint me. I'm really looking forward to it,\" she said walking back toward the house.\n\n\"Wait, we're going? I didn't think you liked to be seen in public with me.\"\n\n\"That was before you grew up. Now you're cute.\"\n\nNow I'm cute? I thought to myself. What the heck did I just agree to do? I wondered, as I followed her.\n\nRight before we reached the house, she stopped and turned to me. Her arms reached around my neck to pull my head down and she gave me a full on the mouth tongue kiss. I just stood there in shock as she gave me one of the nicest kisses I'd ever had in my life. There's no way I could tell how long that French kiss lasted, I was lost in it. My arms wrapped around her as it continued. There was tension building in my pants and I knew she could feel it pressing against her belly.\n\nWhen she finally broke it off, she said, \"Okay, I'll see you at four-thirty sharp.\" Then she dashed onto the porch, opened the screen door and was half way up the stairs when it slammed shut.\n\nI stayed by the old tree for a while as I replayed what'd just happened. The entire interaction had been rife with double entendre and I couldn't decide if they were deliberate or not. When I thought about the incident at the lake, it seemed like some of her words there might have also been intentionally provocative. Was it coincidence that she'd asked me Are you ready to go? after sliding up my cock? My mind began to replay numerous conversations now. The more I thought about it the more convinced I became.\n\nWhen I went inside, I climbed the stairs straight up to my room and disrobed. When I heard her come out of the restroom and close her door, I went in to brush my teeth and use the john before bed. Back in my room I found it hard to sleep, I kept thinking of the various exploratory behaviors that'd happened. The one that I kept reliving was the feel of her hand grasping me right here in this bed after drawing her. It was tender and caring and after tonight, I wanted her hand on me again.\n\nIn the darkness, I pulled my rigid cock out and put my hand about me like she had. I could almost imagine it was her. It was wrong and naughty in so many ways, but as I jerked myself, I was inundated with visuals of her touching me and her placing my hands upon her breasts. As I climaxed tonight, I moaned her name and ached for another kiss like she'd given me outside. \n\nPlacing the cloth beneath my pillow, I began to worry about how quickly I'd just gotten myself off. It began to trouble me and I thought about Jenny's belittlement of me. At that moment it was as if a barrier in my mind were removed and I recalled another portrait I'd done and it wasn't in the sketch books I had in my dorm, it was here in my blanket chest.\n\nTurning on the light, I climbed out and went to the foot of the bed where the blanket chest was. Inside I dug through the layers of linens to find all of my earlier sketchpads. The pictures inside were very early drawings I'd made when I might have been twelve or thirteen. As I sat on the bed leafing through them looking for the sketch, finally finding it.\n\nIt was kind of shocking to see my Mama looking back at me from the drawing that must be ten years old. The striking similarity of her to Emma was unmistakable although unsurprising. What had stunned me was how much they both looked like Mme Soliel. It gave me a weird feeling in the pit of my stomach as I wondered about this undeniable attraction I found for my sister and professor. Did I have this attraction because of Mama? Do I have some kind of buried Oedipal complex? The questions left me worried and embarrassed. What could I do if I did? Was I now officially a pervert?\n\nTurning the page, I found the first drawing I'd made of Jenny. I couldn't remember drawing her initially. There seemed to be more blocks protecting me from these. Each page I turned was another one of her until there were ones I'd drawn during high school. I'd forgotten that this one book had been dedicated to just portraits but when I reached the last picture in the book, it was Jenny as I'd drawn her on the night she'd dumped me. She was still lovely in the picture, but I could see disappointment and disdain in her expression."
    ],
    "authorname": "MindsMirror",
    "tags": [
        "summer-winter",
        "brother sister incest",
        "teacher",
        "loss",
        "romance",
        "tilting",
        "older woman",
        "tulips",
        "mother play",
        "brother-sister, siblings"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/quixotic-rapprochement"
}