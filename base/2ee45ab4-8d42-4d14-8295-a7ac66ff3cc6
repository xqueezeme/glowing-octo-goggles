{
    "title": "Just a Game Ch. 03",
    "pages": [
        "Big thanks to smidgeon for editing this whole series. I keep forgetting to say that, but she did was a huge help. I've done extensive revisions since then so any errors are mine.\n\n\n\nIt had been two days since he'd had a chance to really be alone with Cassie and Gabe was getting frustrated. He thought Aaron would be distracted with Shelly there, but apparently Aaron was using him as an excuse to not spend time alone with her. Normally he wouldn't have minded serving as his best friend's third wheel, and would have enjoyed the opportunity to bug the shit out of Aaron with off-color comments designed to embarrass him in front of his girlfriend, but this time Gabe he had other things he wanted to be doing. \n\nOr one other thing.\n\nIt was a special kind of torture to be around Cassie and try to act like nothing had changed. Her enthusiastic response the other night had made quite an impression on him and ever since then his imagination had been working overtime. He couldn't seem to stop the flood of erotic thoughts and images that sprang into his mind every time he looked at her. Or hell, even thought about her. It felt like he was walking around with a permanent hard on. They'd snatched a few moments here and there and it had been hot as hell, but not nearly enough.\n\nYesterday morning he'd been disappointed to find that she'd already left the house by the time he dragged himself out of bed, but figured it was probably a good idea to keep his morning wood as far away from her as possible. At least as long as Aaron was in such close proximity. \n\nWhile Shelly and Aaron sorted through the boxes she'd brought from his old apartment, Gabe took the opportunity to go home and spend the morning with his mom and the new boyfriend she'd been dying for him to meet. Jim seemed like a good guy. He was quiet and reserved and Gabe was struck with the gentleness and respect with which he treated his mother. It was nice to see her happy. \n\nLater that day Aaron called and asked him if he wanted to go see a movie. Gabe had been both pleased and alarmed when they arrived to pick him up and Cassie was with them. The second he slid into the backseat next to her and she turned that sweet smile on him he knew he was in trouble. \n\nShe sat next to him in the theater and every time she'd run her fingers through her long hair he'd get whiffs of her pear-scented shampoo. That, combined with the fact that she kept crossing and uncrossing her legs making the swishy little skirt she had on ride up higher and higher, had him sliding sideways glances at her every few seconds. It was an exercise in self-control to keep from running his hand up her thigh to see whether she was as turned on as he was.\n\nHe got up to get popcorn halfway through the movie just to give himself a few minutes of relief and while he was waiting in line she came up behind him and grabbed his ass. It surprised the hell out of him and he didn't really take time to consider the wisdom of his actions before he took her hand and dragged her into a stall in the ladies room, ignoring her giggled protests. Her giggles died as he slid his hand up her skirt and he wasn't all that surprised to find that she was indeed just as turned on as he was. \n\nThe second his fingers made contact she moaned encouragement. He told her to prop her foot on the toilet seat, pushed her panties to the side and slid two fingers deep inside her. The way she clutched at his t-shirt and grunted softly with each thrust made him want to take it slow and make her beg for it, but he knew they didn't have time. They were pushing their luck as it was. \n\nHis thumb found her clit and within a few minutes he was pressing her face to his neck to muffle her cry as she came on his fingers. She whispered his name so sweetly afterward that it didn't bother him in the least that they didn't have time for her to return the favor. He did, however, make sure she was looking when he sucked his fingers clean and gave in to a sly grin as her face turned bright red. She was embarrassed, but he could tell by the fire in her eyes that it turned her on.\n\nIn the end, Gabe walked out of the theater unable to even name the movie that they'd gone to see. When they all went out to dinner together afterward he had to make a concerted effort to act normal. Fortunately it wasn't all that difficult given Shelly's tendency to dominate the conversation, constantly steering it back to herself in that insistent, whiny voice. There were a few lingering glances between he and Cassie, but if Aaron noticed them he would hopefully chalk them up to their obvious shared dislike of his girlfriend.\n\nLater that night he took a cold shower, muttering frustrated curses as he stroked himself to one of the least satisfying orgasms of his entire life. He determined then and there that one way or the other he was going to have to get Cassie alone the next day if he didn't want his balls to shrivel up and fall off in protest.\n\nFortunately that turned out to be easier than he thought it would be. Shelly left early in the afternoon after a brief but heated argument about Aaron playing Call of Duty all morning. Gabe actually felt bad for her when the argument, and apparently their relationship, ended with Shelly tearfully declaring that Aaron's priorities were fucked up and Aaron nonchalantly informing her that they weren't going to change so if she felt that way she could go ahead and leave.\n\nAs soon as she was gone Aaron started calling around to find something to do that night. He got in touch with a couple of guys from his high school soccer team and they made plans to go hit some bars. Not having played soccer it wasn't suspicious when Gabe begged off for the night, secretly hoping Cassie would be free. His mom was going out with her boyfriend so he knew he'd have the place to himself until late that night.\n\nHe knew she was in the house, but he was trying to play it cool until he got a chance to talk to her alone. At first he pretended not to notice her walking past the open bedroom door, but the fourth time she passed by he couldn't help smiling to himself at her obvious attempt to get his attention. \n\nHer sandals made a slapping noise as she went down the stairs and suddenly he had the powerful urge to go get a drink. He paused the video game he wasn't really playing and looked over at Aaron, who was absorbed in something on his laptop.\n\n\"I'm gonna get a drink, you want anything?\"\n\n\"Yeah, grab me a coke.\"\n\nHe tried not to let himself get too worked up as he followed her down the stairs. With Aaron in the house he knew he couldn't really do anything, but he needed to talk to her; wanted to touch her. \n\nShe was bent over at the waist, digging in the bottom of a cabinet when he walked into the kitchen. Those same little khaki shorts from a few days ago were pulled tight across her ass and he caught himself making a growling noise when he noticed they were so short her underwear were peeking out of the bottom. She started to straighten up as he approached, but his hand made contact with her ass cheek before she quite managed it, the slap echoing through the kitchen. \n\n\"Ow! What the hell was that?\" she asked, turning to face him, her eyebrows drawn together in irritation.\n\n\"That was for being a tease.\" He backed her up against the counter and pressed his body against hers.\n\nHer face relaxed and he could see the glimmer of amusement in her eyes. \"I have no idea what you're talking about.\"\n\n\"No? What were you looking for in that cabinet?\"\n\n\"I, um...\"\n\n\"Uh huh.\" His hand slid down her back to the cheek he'd just smacked, squeezing hard before drifting around the muscular curve of her ass to the crease at the top of her thigh. \"You just wanted me to see how fine your ass looks in those sexy little shorts.\" His fingers followed the elastic of her underwear, the damp heat between her legs drawing them in like a moth to flame.\n\n\"Does it?\" she asked, her voice going breathy and her eyes fluttering closed as he traced the outline of her outer lips through her panties. \n\n\"You know it does. And you knew it would make my dick hard even though you know there's not a damn thing I can do about it right now.\"\n\n\"Did it work?\"\n\nHe tightened his hand, his finger pressing deeper into her slit as he pulled her hard against his body. She made a whimpering noise and grabbed his hips to steady herself. \n\n\"What do you think?\" he asked, pressing the evidence against her belly.\n\nShe didn't respond, just moaned and dug her fingers into the muscles of his lower back. Her teeth scraped against his neck, her hot breath spilling out as she sucked his skin into her mouth. It felt so damn good he tangled his fingers in the hair at the back of her head to hold her there as he ground against her. \n\nSuddenly coming to his senses, he tugged her head back before she could leave a mark that he'd never be able to explain away. \n\n\"What are you doing tonight?\" he asked, his finger sliding along the wet cotton of her panties\n\n\"Mmm...nothing.\"\n\n\"I'm gonna be home all alone. Why don't you come over and keep me company?\" His finger zeroed in on the hard nub of her clit and he pressed harder. \"I'll teach you the real meaning of the word tease.\" \n\nHe watched the blood rush into her cheeks, heard her breath catch. When she looked up at him her brown eyes looked nearly black.\n\n\"Sounds...educational.\" \n\n\"Oh, it will be,\" he said, his voice dark with desire. Damn she was so wet, it was all he could do not to yank those shorts off her and-\n\n\"I wouldn't want to pass up the chance to learn something new.\"\n\n\"Babe, I can teach you all kinds of new things. You have no idea.\" The tip of his finger dipped into her heated depths for a brief second and she gasped, pressing her forehead against his shoulder. Shit, he had to get control of himself. He stilled his finger and took a deep breath. \n\n\"I want you to do something for me,\" he whispered.\n\n\"What?\" she moaned, moving against the hand still clasped between her legs, urging him to continue.\n\nGabe softened his touch and smiled at her frustrated grunt. \n\n\"I want you to go to your room.\"\n\nShe nodded and wiggled her hips as he let his fingers slip away.\n\n\"And I want you to lock your door.\" \n\nHe trailed his hand up her ass and she lifted up on her tiptoes. \n\n\"And take your shorts off.\" \n\nShe froze in his arms. \n\n\"And those wet panties.\"\n\nThe noise she made was something between a moan and a whine.\n\n\"And slide your fingers between your legs-\"\n\n\"Gabe...\" her voice trailed off into a whisper as he pulled her close again, sucking the sensitive skin under her ear.\n\n\"Mmm, if you want to say my name just like that while you do it, that'd be fine with me,\" he murmured against her neck.\n\n\"I don't know...\"\n\n\"Don't pretend you don't want it. I know how wet you are. I can't give you what you want right now, Cassie. Do it for me. Make yourself come for me.\"\n\nAfter a brief pause he felt her warm breath as she sighed against his neck. \n\n\"Okay.\"\n\n\"Good,\" he said with a smile. He moved back a step and gave her other ass cheek a hard swat and she yelped in surprise. \n\n\"What was that for?\"\n\n\"That was just because I like to slap your ass.\" He said with a cocky grin as he turned and grabbed two cokes out of the fridge. \n\n\"Dick,\" she muttered behind him, but he could hear the smile in her voice. \n\nGabe chuckled as he walked away, trying to wipe the huge grin off his face before he made it back to Aaron's room. Aaron barely looked up when he came back in, which was probably a good thing because the grin seemed to be glued on. \n\nHe pretended to be engrossed in looking at something on his phone and forced himself not to look up as Cassie passed by on the way to her room. He heard her door shut and almost groaned in frustration as he counted down the minutes imagining what was going on in there. \n\nHer shorts would be off by now. She'd hesitate for a minute, trying to get up her courage. She'd close her eyes and let her hand slide down that smooth flat belly until she reached that sweet wet heat. She'd spread her legs when her fingers found her clit, the pleasure forcing her self-consciousness into the background. Her fingers would get all wet and shiny, start sliding in and out... \n\nWas she thinking about him?\n\nFuck. This was a really bad idea. He shifted on the bed, quickly realizing he was in trouble. With a glance to make sure Aaron was still occupied he rose silently and walked straight to the bathroom. He shut the door and leaned back against it, exhaling heavily. Damn, he was playing with fire. In more ways than one. \n\nNot only was he risking an ass-beating sneaking around like this with Aaron right there, he was driving himself insane. He'd never wanted anything as bad as he wanted to bust into her room and fuck Cassie right this second. God, she would love it too, he'd make damn sure of that. \n\nCursing himself for ever agreeing to those stupid rules, he tried to calm down and think instead about all the reasons it would be a terrible idea. Number one, of course, was that she made it perfectly clear that sex was off-limits. He suspected she wanted it as bad as he did, but unless she said otherwise he would respect her decision. And even if she did say otherwise he wasn't sure it would be a good idea. \n\nShe was young and inexperienced. No matter how much of a little vixen she was turning out to be he had to remember that. She'd only been with a couple of other guys, both of them boyfriends. Casual sex wasn't something she was equipped to deal with. Hell, casual kissing wasn't something she was equipped to deal with, apparently. That alone should have been enough to stop him in his tracks before any of this got started. \n\nHe shook his head at his own stupidity and told himself he should just call the whole thing off before it went any further. Before she got hurt. She was so sweet, so trusting, and while she'd clearly enjoyed everything they'd done so far, he couldn't help feeling like an asshole for letting it continue. Maybe he was a dick after all. \n\nThinking along those lines had the desired effect and after a few more minutes of berating himself he felt it was safe to be in the same room with Aaron again. He opened the bathroom door and stepped out, nearly walking right into Cassie. Her startled gasp told him she was just as surprised as he was to run into him. Her pink cheeks and sparkling eyes told him she had just finished doing exactly what he asked her to do. \n\nAll those chivalrous thoughts dissolved into nothing. \n\nGabe's eyes darted quickly toward Aaron's door and he grabbed Cassie's hand, lifting it to his nose. He suppressed a moan at the scent of her arousal on her fingers. Silently, staring into her eyes, he closed his lips around her index finger and dragged his tongue along her skin, tasting the remnants of her juices. Her breath caught in her throat and her face flushed red, but she didn't pull away. He lifted her middle finger and sucked it clean too, smiling when her body swayed toward him. \n\nHe let go of her hand, but she pressed the tip of her ring finger to his lips with a coy smile. His eyebrows shot up and he parted his lips, letting her slide a third finger coated with the taste of her into his mouth. He closed his eyes and saw her writhing on her bed with three fingers buried inside her glistening pussy, moaning his name as she brought herself to a powerful orgasm.\n\nGod. Damn. He had to get out of here. When he opened his eyes she was grinning at him like the Cheshire cat. He shook his head and grinned back. \n\n\"Tonight,\" he whispered under his breath.\n\nShe nodded and squeezed past him into the bathroom, throwing one last smile over her shoulder as she closed the door. Gabe strolled casually into Aaron's room and announced he was heading home. \n\n\"Alright man, take it easy. Let me know if you change your mind about tonight. We're gonna hit a few places, but I'll have my phone on me if you want to meet up.\"\n\n\"I will. I think I'm just gonna chill at home, though.\"\n\n\"Cool. Give me a call tomorrow, bro.\"\n\nGabe went home and collapsed on his bed, staring at the ceiling. What the fuck was wrong with him? He wasn't disciplined by nature, but his martial arts training had drilled it into him. So while he didn't always instinctively know the right thing to do, usually once he determined what he thought was right he didn't waffle, holding himself firmly to his own moral standards. \n\nBut there was something about Cassie that made his resolve crumble. How many times now had he decided not to mess with her and then gone ahead and done it anyway? Even now he knew he should call it off, but despite the sensible portion of his brain that told him the whole thing was a bad idea, he couldn't stop. He didn't want to stop. \n\nShe didn't want to stop either; he knew that for a fact. The change in her just in the last couple of days was amazing. There was a fiery wildcat quickly emerging from under the uptight prude. Apparently all she needed was a little nudge in the right direction; someone to encourage her to let go and trust her instincts. He could be that someone. He wanted to be that someone. \n\nHe already was that someone. \n\nThat was what made up his mind. Fully aware that it was a convenient justification for his own selfish desires, he told himself that if there was damage to be done, it was already done. If she did have feelings for him, which he wasn't even sure she did, stopping now would surely feel like a rejection. As amazing as she'd been, he definitely didn't want her to think she had done something wrong or disappointed him in any way. He didn't want to do anything that would smother her emerging sexuality. \n\nBut if this thing between them ended when he went back to work she wouldn't have any reason to feel rejected. Their brief time together could just be a pleasant memory; one they could hopefully both look back on and smile about. \n\nHe cringed, reminded of Aaron talking about a natural break, but in this case maybe it was applicable. At the end of this week they'd both go back to their lives and, he flattered himself to think, maybe she'd get more out of sex in the future. \n\nWith someone else.\n\nIf he noticed the grimace on his face at that thought, he ignored it. He focused instead on what was to come that night. His decision was made and he wasn't going to feel guilty about it any longer. In fact, he was pretty damned excited about it. \n\nIf someone had asked him, he couldn't have told them why she'd gotten under his skin like this. She was just so different from what he was used to. The last few years he tended to go for older women. Women who were more often than not more experienced than him sexually and who, like him, weren't interested in emotional attachments beyond friendship. \n\nIt was an arrangement that had served him well and one that he had no regrets about. Not only had he learned a lot about how to make a woman happy both in bed and out, he enjoyed the relaxed ease that came with a complete lack of responsibility for their emotional well-being. \n\nWell, not a complete lack. Most of the women he dated were friends so he did care about them to varying degrees. If they were upset he offered comfort and when they needed someone to help them change the oil in their car or fix a leaky sink he never hesitated. But he didn't have the weight of worrying that a stray glance at someone else's cleavage, a badly-timed smart ass comment, or a few unreturned calls were going to lead to tears and accusations.\n\nNot only that, he didn't have to worry about who was going to get hurt when the shine wore off, which he knew it inevitably would. If either of them met someone else they were interested in, it wasn't a problem. If either of them got bored, they moved on. No hard feelings. \n\nWith Cassie it was like he had that same relaxed ease with her because he didn't have to think so hard about taking her feelings into account. He just did it instinctively. Maybe it was because he'd known her for so long. That's what he told himself, anyway. After thinking of her for so long as a little sister it was just second nature to care about her; to be protective of her.",
        "And damn, she was hot. There was something about her combination of shy hesitance and adventurous curiosity that really drove him crazy. He certainly enjoyed being with women who knew exactly what they were doing in bed and it was always gratifying to know he satisfied them, but this was something different altogether. \n\nThe way her body responded so strongly to his touch, his voice, his body; knowing he was the only one that could make her feel that way...it was a powerful rush. And the way she opened up to him, trusted him, let him see parts of her she'd never shared with anyone else; it made him feel...well, something he didn't quite have words for. \n\n...\n\nCass was way too excited about going over to Gabe's house that night, but she couldn't help it. The idea of having the whole evening to themselves, taking their time, not worrying about who might see or hear them, was enough to have her whimpering in anticipation. Lord, her insides turned to jelly just thinking about the things he did to her. She had no idea it could be like that and they weren't even having sex.\n\nOf course it hadn't taken long for her to change her mind about that rule. The first night, in fact, she'd realized she was going to have to break it. She didn't say anything because there was just something embarrassing about giving in so soon, but if he could make her feel that good with just his fingers and his mouth she wanted...no, she needed to know what sex with him would be like. Unfortunately they hadn't had much of a chance to be alone together since then, so she hadn't told him. Yet.\n\nHer face got hot just thinking about it, but he'd made it clear he wanted her to tell him what she wanted so she was going to tell him and she wasn't going to act all embarrassed about it when she did. She'd just have to fake the confidence she didn't feel. It was actually pretty easy to pretend not to be shy with him, since nothing she did seemed to shock or disturb him. In fact, he seemed to get off on the things that would normally embarrass her most.\n\nShe'd never been so mortified and aroused at the same time as she was earlier when he asked her to go to her room and...well. Doing something like that in the broad daylight, knowing he was sitting in the next room perfectly aware of what she was doing...god, just thinking about it had her blushing painfully. But she'd never made herself feel so good before before, reaching for those heights she knew now she could get to and moaning his name over and over into a pillow she pressed to her face to keep quiet.\n\nAnd then the way he looked at her afterward when she pressed that third finger to his lips nearly drove her right back over the edge again. He looked surprised, impressed...so incredibly turned on she thought he might push her up against the wall and just screw her right there on the spot. She giggled to herself at the thought that she might have let him, even with Aaron ten feet away through an open door.\n\nThat was the other thing that gave her the courage to tell him. He so clearly wanted it, too. She could see it in his eyes every time he looked at her. And tonight was their chance. She shivered in nervous anticipation and wondered what on earth she was going to do with herself in the hours until it was time to leave. \n\nShe was a confused mix of nerves and excitement when she showed up at his house later that night. The expression on Gabe's face when he answered the door was enough to make her mind go blank; the confident smirk and dark look in his eyes telling her that he was just as excited as she was to have her all to himself. He hooked a finger in the waistband of her jeans and pulled her into the house as he pushed the door closed. \n\n\"I'm gonna make you scream,\" he said, his voice so low and full of promise that she shivered in his arms and completely forgot her carefully planned out script.\n\nHe had done it, too. He teased her for ages, kissing her all over her body as he slowly undressed her, then proceeded to bring her to the edge of climax over and over, ignoring first her pleas then her curses when he left her hanging every time. \n\nFinally, with her body strung so tight it felt like a bow string about to snap, he pushed her over the edge and sent her hurtling into a mind-blowing orgasm. It felt like it went on forever with his mouth never letting up and his fingers deep inside her pushing her back up every time she started to come down. \n\nHer throat was hoarse by the time she caught her breath so despite the fact that she didn't remember screaming, she believed him when he chuckled and arrogantly whispered \"told ya\" in her ear.\n\nIt was amazing, but it only solidified her desire for more. As she drifted down from the heights all she could think about was wrapping her legs around his hips and feeling him sink deep inside her. Her breath came short again at the mere thought of it and before she even realized what she was doing she spoke. \n\n\"Gabe, I want you.\"\n\n\"I'm right here, babe,\" he said with a laugh as he brushed his lips along her collarbone.\n\n\"No, I mean...I want you.\" Her hand found his erection through his pants and traveled the length of it, his sharp hiss of breath bringing a smile to her face. It was such an incredible thrill to know she could affect him like that. \"Inside me. Right now.\"\n\nHe blinked at her in surprise and the expression on his face would have made her giggle if her naked body hadn't been so tightly pressed against him. \n\n\"What about-\"\n\n\"Screw the rules.\" She pushed him onto his back and straddled his thighs, trailing her fingernails lightly down his chest and stomach until she got to the waistband of his jeans. He made a rumbling noise in his throat and his eyes drifted shut. \"I made them. I can break them.\" \n\nShe leaned down to kiss his neck as she undid the button and zipper and pushed his jeans down over his hips. With her heart beating in her throat she moved to position herself over him, but at the last second he grabbed her hips and pushed them away.\n\n\"Hold on now, let's stop and think about this. Are you sure that's what you really waooooh fuck.\" \n\nHis head fell back and his fingers dug into the bedspread as she bent down and sealed her lips around the head of his dick, sucking hard. She swirled her tongue around the tip a few times before sinking lower, tugging his jeans further down as she took him deeper into her mouth.\n\nThe noises he made were encouraging so she continued, bobbing her head up and down his shaft, sucking and licking in what she hoped was a pleasurable way. She'd done this plenty of times, but never really felt like she knew what she was doing. None of the guys had ever complained, but none of them said she was particularly good at it either or told her what they liked or didn't like about it. Most of what she knew came from listening to Jill and Avery talk. \n\nAfter a couple of minutes she lifted her head, letting him slip from her mouth, but kept stroking him with her hand.\n\n\"Fuck. Cassie don't stop, baby.\"\n\nA shiver shot down her spine. She loved it when he called her Cassie. \n\n\"I know what I want, Gabe. What do you want?\" \n\nHis only response was a long, low groan. She maintained a slow, steady rhythm, a sly smile stealing across her face when his hips started thrusting up to meet her hand. \n\n\"Do you want me?\" she whispered, surprised at how husky her voice was. Apparently she could pull off this confidence thing pretty well; she sounded downright seductive even to her own ears.\n\nHis eyes opened into slits as he looked up at her. \"Do you really need to ask me that with my dick about to explode in your face?\"\n\nThe smile faltered the tiniest bit on her face. \"You just stopped me from screwing you.\"\n\nBefore she knew what was happening Gabe grabbed her wrists and pulled her up so she was stretched out on top of him. His hips flexed and they both moaned at the feeling of his shaft sliding along her wet folds. \n\n\"Ask me that question again,\" he whispered, running his hand down her back to press against her ass, pushing her tighter against him as he lifted his hips again.\n\nShe couldn't hold back the loud moan, it almost felt like he was inside her, he was so hot and hard against her sensitive flesh. \n\n\"Ask me,\" he demanded, his fingers digging into her ass, holding her tight to him.\n\n\"Do you want me?\" This time it came out more breathy and pleading, but she hardly noticed given what he said next.\n\n\"Babe, I want to roll you over right this second, bury my dick inside you, and fuck you so hard you can't walk tomorrow.\" His voice was strained and he had a pained expression on his face as he sat up with her in his lap. \"But I don't think either of us should make that decision in the heat of the moment.\" \n\n\"I'm not. I've thought about it,\" she assured him. His messy hair was hanging in his face and she couldn't help running her fingertips through it to smooth it back. He looked up and locked eyes with her.\n\n\"Have you?\" \n\n\"Yes.\"\n\n\"Did you bring condoms?\"\n\nShe looked at him blankly for a moment and realized that he was right. She hadn't really thought it through in that sense at all. Condoms had never occurred to her, but he didn't know that and his condescending tone pissed her off. \n\n\"I assumed you would have condoms stashed somewhere in your lair here.\" She gestured at his old bedroom, still decorated like it had been in high school with Bruce Lee posters and pictures of half-naked women covering the walls.\n\n\"And you suddenly decided you're not worried about all the other strings that come with sex? The...less practical ones?\"\n\n\"No, I'm not.\"\n\nHis eyes narrowed and he stared searchingly at her for a moment before he took her face between his hands. Her heart pounded as he slowly moved in, pressing a kiss to the corner of her mouth, not quite touching her lips. He did it again on the other side, but this time he darted his tongue against her skin, sending goose bumps scattering down her neck.\n\nShe was barely breathing. His nose brushed softly against hers and she could feel his breath across her own parted lips. Her heart pounded loud in her ears as she waited for his kiss. \n\nIt didn't come. \n\nShe opened her eyes to see his a few scant inches away, deep brown and staring into hers with an intensity that made her heart stop. Cass was a second away from closing the distance between them herself when her self-preservation kicked in. \n\nShe couldn't. She'd be totally lost if she kissed him; her fragile sense of detachment completely shattered. That was why she'd made that rule in the first place. Her head dropped and she looked away with a sigh. His fingertips brushed her cheek and she looked up at him. \n\n\"Think about it some more.\"\n\n\"It's not like we have a lot of time. Don't you go back to work in a few days?\"\n\n\"Yeah, on the second. Still, we have time to think it through. What about New Year's Eve? That'd give us a couple of days and if we both still want to we could do it then.\" \n\n\"We're having a party that night.\"\n\n\"I know, Aaron told me. It's perfect; no one will be paying attention to us and it won't be weird if I'm still there in the morning.\"\n\n\"Alright,\" she said, perking up a bit at his apparent acquiescence.\n\n\"Just one condition.\"\n\n\"Which is...\" \n\n\"I can't sleep with someone who's afraid to kiss me.\" \n\nThere was a long pause while his words sunk in. When she didn't answer he touched her cheek again, trying to lift her face to his, but she wouldn't let him. \n\n\"Cassie, if this is-\"\n\n\"Don't. Please.\" \n\nWhatever it was he was about to say, she didn't want to go anywhere near that conversation. So far she'd been relatively successful at keeping things light and fun, but that required some strict self-discipline when it came to not thinking or talking about how she felt about him. She especially didn't want to talk about it with him. \n\nAt the moment she didn't even want to look at him, afraid that if she did she'd see guilt in his eyes. Or worse...pity. Her fleeing eyes landed on his dick, still hard but definitely deflating, and the corners of her mouth twitched up in a little smile. \n\n\"Okay,\" she said, reaching down between them to take him in hand again. The feel of her own wetness still on his shaft was enough to make her moan with him as she spread the slickness around and used it to speed her movements. \"New Year's Eve. I'll meet you at midnight.\" \n\nShe let her thumb slowly circle the head before stroking his length and it swelled back to life in her hand. When she finally looked up at him his eyes were closed, his mouth parted as he exhaled shakily. \n\n\"Are you sure you want to wait?\" she asked with a mischievous grin.\n\nHe fell back on the bed with a reluctant groan. \"Yes. Now I'm begging you, do me a solid and finish what you started.\" \n\nCass grinned as she continued to stroke him. \"I'm not sure what you're referring to, you'll have to be more specific.\"\n\nThe dark look he gave her sent shivers down her spine. He lifted his body just enough wrap his hand around the back of her head and gently pushed her down until her lips were resting against the swollen tip of his dick. \n\n\"I want you to suck on my cock until I come in your mouth,\" he said in a quiet voice. \"Is that specific enough for you?\" \n\nThe rush of heat that flooded through her body shocked her more than his words and she nodded slowly, letting her lips brush gently over the silky skin. Gabe made a noise deep in his throat and pressed harder on the back of her head. She let him push her head down, taking him deep into her mouth.\n\nShe could taste the salty liquid leaking out and used her tongue to spread it around. She'd never let anyone come in her mouth before, but then no one had ever asked her to. Another low moan from Gabe as she sucked hard and swirled her tongue against him had her convinced. He'd done things for her she didn't even know were possible and, until now, hadn't really asked for much in return. She wanted to do this for him. \n\nWith renewed determination she tried everything she could think of to please him. She knew he liked it when she squeezed him tight so she held on to the base of his dick with an iron fist, pumping in time with her bobbing head. She noticed his dick jumped in her hand when her tongue hit the little hole at the tip so she gave that some attention as well. But she got the best reaction when she let him go deep, almost far enough to make her gag. His back arched up and his fingers tightened painfully in her hair for just a second before he loosened his grip. \n\n\"So good, baby. Take some more for me. Just a little deeper.\"\n\nShe kept going, surprised to find she could go a little further each time. He wasn't pushing on her head anymore, but his fingers were still tangled in her hair and his hips were rising up into her face. She pressed down and the tip of him slid into her throat, her eyes watering as she swallowed around him a few times before pulling away to catch her breath.\n\n\"Fuck! Yes. Just like that...\"\n\nHis words trailed off into an unintelligible babble as she took him deep again. She heard a groan rip from his throat as his dick throbbed and a second later her mouth filled with hot liquid. She swallowed as fast as she could and another spurt hit the back of her throat. His hips bucked up and he let loose one last shot before relaxing, his hand falling from her hair.\n\nCass kept sucking a few more seconds and then ran her tongue up the underside of his shaft as she lifted her head away, smiling at the little shudder that shook his body. She stretched out beside him while he caught his breath, anxiety creeping in as he continued to lie there silently.\n\n\"Was that alright?\" she finally asked.\n\nA grin split his face and he lazily opened one eye to look at her. \"Yeah babe, it was more than alright. Damn, I needed that so bad. You've had me sprung for days and my hand just wasn't doing it for me.\"\n\n\"Oh. Well, good. I've never done that before, I wasn't sure...\" she trailed off as he opened both eyes and gave her a funny look.\n\n\"You've never given a blow job?\"\n\n\"No! I mean, yes I've done that. Not a lot so I don't know how good I am at it. But I meant I've never...you know...swallowed.\"\n\n\"Ah.\" He smiled and closed his eyes again. \"Well, don't worry. You sucked that dick like a pro.\"\n\n\"Shut up!\" She punched his shoulder, laughing at him throwing her words back at her. \n\n\"What? I'm just saying, you could have the most annoying voice in the world and I wouldn't even care.\"\n\n\"Seriously Gabe. You'd tell me if it was the lamest blow job ever, right?\"\n\nHis lids lifted and he focused those dark eyes on her. \"You have nothing to worry about Cassie. In case you couldn't tell, I enjoyed every second of it.\" \n\nHe brushed a strand of hair back out of her face and let his fingers linger on her cheek for a moment before looking away and tucking both hands behind his head. \n\n\"Besides, I wouldn't just lay back and let somebody give me a lame blow job. If you weren't doing it for me you'd have heard about it while it was happening.\"\n\n\"Like when you asked me to go deeper?\"\n\nHe chuckled and shrugged unapologetically. \"Well, that was more of a...friendly suggestion than a complaint.\"\n\nCass snorted and rolled her eyes. \"So do most guys like it better if you let them...you know...in your mouth? Jill told me they do, but when I asked Trey he said it didn't matter.\"\n\n\"Then Trey is not only an idiot, he's a liar. He was just telling you what he thought you wanted to hear. No wonder he's no good in bed.\" There was a brief, awkward pause before he rolled toward her and propped himself on one elbow. \"I'm sorry, that was rude.\"\n\n\"It's okay.\n\n\"No it's not. The least I could do is answer your question. Yes, most guys like it when you let them come in your mouth. A lot. But not if you don't like it. And since it was the first time you did it a more important question would be: what did you think about it?\"\n\n\"It wasn't as gross as I thought it would be.\" \n\n\"Now there's a glowing recommendation,\" he said with a grin. \"Did it turn you off or was it not-gross enough that you'd do it again?\"\n\nShe thought for a second and gave him a shy smile. \"Yeah, I'd do it again, but I think it depends on the guy. Most of the other times I've given blow jobs I didn't really get anything out of it. You made it more...enjoyable. I got way more into it than I usually do.\" Her shy smile turned coy. \"It was actually pretty hot watching you squirm like that.\"\n\n\"Yeah?\"\n\n\"And the way you talked to me and held my hair...\"\n\n\"Yeah?\" His voice dropped low again and he leaned in close, giving her a sexy grin. \"Did you like that?\"\n\n\"Yeah.\"\n\n\"Did it make you wet?\" He slid his hand up her thigh and she gasped as he found the answer to that question for himself.\n\nCass ended up staying at Gabe's much later than she meant to. Late enough that his mom got back from her date with her boyfriend and Cass had to wait and sneak out after she'd gone to bed. She walked home through the deserted suburban streets, taking the same route she'd walked a million times over the years coming home from Jill's. She knew every house, every shrub, every crack in the sidewalk. But somehow everything looked different at two-thirty in the morning. \n\nAs she walked across the dew-damp grass in her front yard she sent Gabe a text to let him know she made it home alright; he'd threatened to come looking for her if she didn't. The minute she walked in the door she knew she was in trouble. Aaron was still up; she could hear him laughing in the kitchen. \n\nHer instinct was to escape up the stairs, but she decided that might look suspicious. She should at least go in there to say goodnight. He didn't know where she'd been all night so as long as she didn't act guilty she should be fine.\n\nShe walked into the kitchen and was only slightly startled to see two other guys there with him. She vaguely recognized them from high school, but couldn't remember their names. The three of them were obviously drunk and nearing the end of their night. One guy looked like he was about to pass out where he stood.",
        "\"Look who's home. Where have you been so late little sister?\" Aaron asked with a wide grin.\n\n\"Out.\" She nudged Aaron out of the way to get to the fridge for a bottle of water.\n\n\"What a coincidence, we've been out too.\"\n\n\"You better hope she ain't been out doing what you've been out doing,\" the more coherent of the guys said with a leer.\n\n\"Shut the fuck up, man,\" Aaron retorted.\n\n\"What? I'm just saying. The way you were grinding on that girl at the bar-\" \n\n\"I said shut the fuck up.\" \n\nAaron looked annoyed, but Cass snorted. She was about to make a comment about how quickly he got over Shelly when the really drunk guy stirred and shifted closer to her, startling her.\n\n\"Can't blame you, man. That girl had a juicy ass,\" the guy slurred. \n\nHe was speaking to Aaron, but his eyes were on Cass and she didn't like the way they were raking over her body. She'd just started to move away from him when he reached out and grabbed her butt.\n\n\"Not as juicy as this one, though.\"\n\nShe slapped his hand away at the same second that Aaron grabbed the neck of his shirt and slammed him up against the refrigerator, his fist drawn back ready to strike. \n\n\"What the fuck do you think you're doing?\" \n\n\"Aaron, don't hit him.\" Cass backed away, unsure what to do, but certain a drunken fight in the kitchen wouldn't turn out well for anyone. \"Come on, calm down. He didn't hurt me.\"\n\nAaron glanced at her, his angry scowl lightening a bit, and lowered his fist. \"I'll tear that hand off if it touches my sister again, do you hear me mother fucker? Dave, call a cab to take you and this dickhead home.\"\n\nDave looked offended. \"I thought you said we could crash here.\"\n\nWhen the glare turned on him Dave quickly pulled his phone out and started looking for the number for a cab. Aaron let go of the drunk guy's shirt violently enough that he staggered and nearly fell over, but Aaron didn't seem concerned. With a firm hand on Cass's back he guided her out of the kitchen.\n\n\"I'm so sorry about that, Cass.\"\n\n\"It's alright. It's not the first time some drunk guy has grabbed my ass, it probably won't be the last.\"\n\n\"Yeah well, it won't be that guy. You won't see him around here again.\"\n\n\"Aaron, I'm fine. You don't have to do that.\"\n\n\"The fuck I don't. You don't deserve to be treated like that in your own home and that asshole should know better than to mess with you, anyway.\" \n\nShe sighed, knowing better than to try and argue with Aaron when his mind was made up, and went up to bed. Her thoughts as she fell asleep were mixed. She was still basking in the afterglow of her amazing night with Gabe, but after what happened downstairs she was feeling suddenly anxious and a little bit guilty. She hadn't really thought about it before, but she'd really put Gabe in a difficult position and it was only going to get more precarious. \n\nIf Aaron found out about them...well, Aaron just couldn't find out about them. \n\n...\n\nCass shivered and shook her head to clear away the memory of that night. She stood in front of the mirror adjusting her shirt. It was one she never would have bought it for herself, but it was a Christmas present from Jill and she had to admit it looked really good on her. The emerald green silk hung loose to her hips, but the wide, deep-scooped neck made it cling to her curves invitingly as long as she could keep her boobs from falling out. With her tight dark jeans and just a touch of makeup she thought she looked pretty damn hot and her heart beat faster in anticipation of the evening. \n\nShe and Aaron were having a little New Years Eve party. Their parents would be home tomorrow, so they didn't plan anything huge, but they both wanted to catch up with old classmates who were in town for the holidays and decided that it would be safer for both them and their friends to have everyone get together at their house rather than going out somewhere. As happy as she was to see everyone though, she had to admit that wasn't really what she was excited about. \n\nShe and Gabe hadn't really even had a chance to speak to each other since that night she'd gone to his house. With Shelly gone, Aaron was around all the time and Gabe was in and out, but she suspected he might be avoiding her. Or if not actively avoiding her, he wasn't making any effort to sneak around and get her alone the way he had that first couple of days. \n\nIt was alright with her, since she'd determined not to take such risks with him after what had happened that night with Aaron's other friend, but as far as she knew Gabe didn't know anything about that so she couldn't help but wonder why he was distancing himself.\n\nShe didn't think he was upset with her. He didn't act cold or awkward when he was there; he joked around and teased her just like normal. And a few times she caught him staring at her and he winked and gave her a secretive smile. \n\nThe day before she'd walked in the front door and ran right into him as he was about to head up the stairs. He looked like a deer caught in headlights and started to turn and continue up the stairs, but she grabbed his t-shirt and pulled him into the living room. \n\n\"Is everything alright?\" she asked quietly.\n\nHis expression softened and he wrapped his arms around her. Her hands slid automatically up his sides under his t-shirt. His skin was warm and soft and she couldn't help following his ribs around to his back and pulling him closer as he breathed into her hair.\n\n\"Yeah, of course. Are you still thinking?\" he asked in a low whisper as he kissed along the column of her neck.\n\n\"I told you my mind was already made up,\" she said, pulling back to look him in the eye so he knew she meant it. \"Are you still thinking?\"\n\nHis gaze remained locked with hers. \"I can't stop.\" \n\nWith a frustrated groan he let his arms slip away and damn near ran out of the room, taking the stairs two at a time while Cass stood there wondering what the hell he meant by that. But despite his vague words, the way he looked at her made it pretty clear he wasn't going to change his mind so she felt confident that they were still on.\n\nAnd now it was almost time for the party and she was a crazy mixture of excited anticipation and anxious nerves. She wasn't going to back out, no question about that, but the vague ache underneath the excitement told her she had reason to worry. \n\nShe was falling for him. Or falling harder. Her crush before had been pure fantasy, leftover teenage hormones. Now that they had spent time together, talked, actually got to know each other as adults and not memories of kids who didn't exist anymore, she realized she really did like him. He was more thoughtful than she'd ever given him credit for, given his general goofiness, and his views on relationships had actually made quite an impression on her. \n\nThey had fun together, and not just when they were naked. He joked with her and, even better, laughed when she teased him back. When they talked he actually listened as if what she had to say was important and responded like he honestly wanted her to understand his point of view. It was refreshing. \n\nMost of the guys she dated, even her boyfriends, treated her like something fragile; like they had to say exactly the right thing, be exactly the right person that she wanted them to be. She'd always assumed that's just the way it naturally was between people in the beginning and to a degree she knew she did it herself. You act the part of the perfect partner long enough to get them hooked and then you could gradually start being yourself again, hoping neither of you lost interest. \n\nBut it wasn't like that with Gabe. He didn't pretend. He was honest with her even if he knew she wasn't going to like it and on some level that made her feel secure. She knew where she stood with him. Well, on most things. There was that whole unspoken conversation they'd never had about her feelings, but she was pretty sure he let that go for her sake. Because he didn't want to hurt her. Because he...cared about her? \n\nYes. He did seem to care about her. And it was okay to admit that to herself as long as she remembered there were limits. He treated her like a friend. A close friend he cared about. A close friend he cared about and just happened to be sexually attracted to; at least attracted enough to enjoy some physical recreation with for a while.\n\nShe groaned to herself. It was going to be hard to walk away from him after this week, but tonight wasn't going to change that. She'd already fallen; she figured she might as well get everything she could out of it before it ended. With a final tug at her shirt and a deep breath to calm her nerves she headed downstairs to make the final preparations for the party.\n\nSeveral hours later Cass found herself wandering into the kitchen feeling mildly tipsy and a little nervous. Midnight was approaching and the house was full of people. They were mostly friends from high school, but between Cass and Aaron they spanned several years' worth of classmates, many of whom hadn't seen each other in ages and some of whom she didn't know at all. It wasn't a rowdy party, but most people were pleasantly buzzed so it was noisy and there was a lot of laughter. \n\nJill and Avery were in the kitchen talking, but they stopped when she walked in, which immediately made her suspicious.\n\n\"What's up?\"\n\n\"Nothing,\" Avery said.\n\n\"Aves is pouting,\" Jill replied.\n\n\"What are you pouting about?\"\n\n\"Nothing,\" Avery insisted.\n\n\"Aaron's been hanging all over some girl all night,\" Jill reported\n\n\"Jill would you shut up?\" Avery looked annoyed and that was surprising because she rarely got annoyed.\n\n\"Oh yeah, that girl he met at the bar the other night,\" Cass said with a nod of understanding. \"Aves, why are you even thinking about it? You don't want to be his New Year's booty call slash rebound from Shelly anyway, do you?\"\n\n\"Exactly! That's what I've been trying to tell her,\" Jill said, giving Cass an approving nod.\n\nThey stopped talking and all took sips of their respective beverages as a five or six people walked through the kitchen and out through the garage door. \n\n\"I just can't believe he hooked up with someone else so fast. It doesn't seem fair. I never get my shot,\" Avery said with a sigh.\n\n\"Those girls aren't getting a shot either. They're just filling an empty slot.\"\n\nJill looked at Cass with a raised eyebrow, but Avery sighed again. \"I don't know what that means, but I wouldn't mind getting my slot filled right now. God, it's been ages.\"\n\n\"It means if you ever want a chance at something real with him you don't want to be just another notch in his belt. Believe me, I know,\" Jill said. \n\nCass opened her mouth to ask what Jill meant, but closed it again as another group of people came through on the way to the garage. \"Where are all these people going?\" she asked instead, moving to follow them.\n\n\"Don't go out there.\" Jill said with a hand on her arm. \"Plausible deniability, my friend. If the cops show you have no idea why the entire garage smells like weed.\"\n\n\"What?\" Cass headed toward the garage door, but Avery stopped her. \n\n\"She's right. Unless you want a hit you should just stay out of there.\" \n\n\"Why don't you go get your boy toy and find somewhere to play?\" Jill asked with an evil grin.\n\n\"What are you talking about?\" Cass felt her face getting warm as Avery and Jill stared at her with amused expressions.\n\nAvery grinned and shook her head. \"You haven't been this relaxed in...\"\n\n\"Ever.\" Jill finished. \"We're not stupid, Cass. It's obvious somebody's giving it to you good and it's not hard to guess who, given the potential candidates.\" \n\nCass just stared, speechless. She thought she'd been so careful. Her surprise that her friends had figured out what was going on was tempered only by her relief that Jill was at least making an attempt to quiet her drunk-voice.\n\n\"Don't worry. I don't think anyone else has picked up on it,\" Avery added.\n\n\"We didn't even figure it out until I gave you that vibrator the other day and you just laughed. I was so disappointed. I expected a much more dramatic reaction. I've seen you blush harder at tampon commercials.\" \n\nCass laughed again at the memory of opening the gift in the middle of lunch at their favorite Mexican restaurant. It was true; she hadn't been nearly as embarrassed as she normally would have been. She shoved it quickly back into the bag before anyone saw, but all she was really thinking was that she hoped Gabe would come over that night, since she wasn't sure she'd know what to do with all the switches and dials. Unfortunately he spent that entire day with his mom so she didn't see him. She'd ended up trying it out by herself that night and didn't have any problem figuring out exactly what to do with it.\n\n\"So how is it?\" Avery asked, her eyes twinkling. \"Are all your fantasies coming true?\"\n\n\"Well, I don't know about all my fantasies, but oh my god y'all.\" She burst out in giggles with a couple of tears of relief at finally being able to share the monumental turn of events with her best friends. \"That's all I can really say. Oh. My. God.\"\n\n\"Yeah,\" Jill said with a sigh. \"I figured he'd know what to do with you.\"\n\n\"So are you guys...\" Avery trailed off as a group of Aaron's classmates walked through the kitchen on the way to the garage. \"Are you, like, together or what?\"\n\n\"No, we're just having fun. Purely physical.\" \n\n\"That can be cool,\" Jill said approvingly.\n\n\"Is it cool? Are you okay with that?\" Avery asked.\n\nCass thought about the question just long enough that her friends knew the truth. \"I'm not complaining.\"\n\n\"I bet you're not,\" Jill said, her eyes resting on something over Cass' shoulder. \n\nCass turned to see Gabe saunter into the kitchen and tried to suppress a smile. She'd caught a few glimpses of him tonight, but this was the first chance she'd had to speak to him. He was clean shaven, for once, with his hair pulled back almost neatly into a short ponytail and he was wearing nice jeans with a plaid button up, which for him counted as dressed up. He made no effort to hide his grin as he sidled up to the three girls and even gave her a wink. \n\n\"You ladies look like you're up to no good. What are you whispering about?\"\n\n\"Top secret. We can't tell you, we'd have to kill you,\" Avery said.\n\n\"Hm,\" he intoned, looking from one to the other of them with a thoughtful expression on his face. When he got to Cass he grinned mischievously. \"Better not tell me, then. Someone promised me a kiss at midnight and I don't want to miss it.\"\n\nCass dropped her eyes to the floor, trying to ignore the flush in her cheeks. For a second she wondered if he was annoyed that her friends obviously knew about what was going on between them, but he seemed to be more amused than bothered.\n\n\"Oh really?\" Jill asked suggestively. \"And who might that be, I wonder?\"\n\n\"I can't tell you, I'd have to kill you.\"\n\n\"The fact that you're in the kitchen with us when the real party is out in the garage tells me all I need to know,\" Jill said with a tipsy giggle.\n\n\"I don't know what you're talking about. I only came in here because somebody told me I'd find something sweet to eat in the kitchen,\" Gabe replied, his face a picture of blank innocence.\n\nJill burst out laughing and Avery turned red and choked on a sip of beer while Cass just stood there looking at them like they were crazy. \n\n\"And did you?\" Jill asked.\n\n\"Hell yes I did. Sweetest I've ever had. I can't wait to have some more.\" His eyes slid back to her and the heat in his gaze had Cass turning red again as she realized that whatever he was talking about had something to do with her. He finally broke eye contact to glance over at the clock on the stove. \n\n\"Well, it's almost midnight. I guess I better get a move on if I don't want to be late.\" He took a couple of steps backward, his eyes never leaving hers, before he turned to walk out of the room.\n\n\"Is it just me or is it really hot in here all the sudden?\" Avery asked, fanning herself with her hand.\n\n\"If you don't follow that man in the next ten seconds, I'm going to,\" Jill said, boring holes in his back with her eyes.\n\n\"I don't think it would do you much good the way he was looking at Cass,\" Avery murmured. \"I'm pretty sure she's the only woman on earth as far as he's concerned.\n\nCass's mouth was dry and she was still staring after the spot where Gabe had disappeared, paying no attention to what her friends were saying or the knowing look they exchanged. Her feet were moving before she spoke. \"I'm just going to...um...yeah. Don't wait up.\" \n\nShe gave her friends a final grin and walked into the dining room where several people she graduated with were standing around grazing on snacks. After a few minutes she extricated herself from the conversation and walked through the foyer, peeking in the living room to see two couples making out on the couch, but no Gabe. A throat cleared behind her and she turned and saw him leaning against the rail at the top of the stairs looking down at her. He gave her that bone-melting grin again and disappeared from view.\n\nWith a quick glance around to make sure no one was watching Cass hurried up the stairs to her bedroom. The second she was inside he had her up against the door, locking it behind her. His lips brushed across her cheek, placing soft kisses here and there. He trailed them along her jaw and paused for a moment near her mouth before moving to the other cheek and doing the same thing. When he started to suck and nibble his way down her neck, Cass shivered and slid her fingers into his hair, stilling him long enough to get her pounding heart under control.\n\nHe pulled back and looked at her with a heated expression. \"You ready to break some rules?\"\n\n\"I'm definitely ready.\" She hoped her voice sounded more confident than she felt because she was pretty sure her stomach was about to flutter right out of her body. \"I thought you might back out, though. You've been avoiding me all night.\"\n\n\"Not a chance.\" His fingers trailed slowly down her neck and chest to hover between her breasts, leaving a tingling path on her skin. \"You just look so gorgeous tonight I had to keep leaving the room when you walked in because I was afraid someone would notice that I couldn't keep my eyes off you.\"\n\nCass laughed nervously and tried to ignore the fact that he could surely see the blush creeping up her neck. \"Sorry about Jill and Avery. They guessed and I didn't want to lie to them.\"\n\n\"I don't mind.\" He lifted his eyes from where his fingers were resting to her face, fixing her with a searching look. \"Does it bother you that they know?\"\n\nShe shook her head, but before she could answer they were both startled by the sound of cheering downstairs and then the collective shouts of \"Ten! Nine! Eight!\"\n\n\"I guess that's our cue,\" she said, meeting his eye.\n\n\"Five! Four! Three!\"\n\n\"Happy New Year, Cassie.\" His hand slid along her cheek, his thumb gliding softly over her bottom lip.\n\n\"Happy New Year.\"\n\nHis lips were warm and so soft and he teased her with a few gentle brushes before pressing them firmly against her mouth. The muffled chorus of Auld Lange Syne was drowned out by the pounding blood in her ears as his tongue flattened against her bottom lip, gliding smoothly over it before pulling it into his mouth, sucking it gently. \n\nWhen she parted her lips and slid her tongue along his top lip it was like she flipped a switch. Suddenly his gentle kiss turned demanding, his tongue slipped into her mouth as his hand came up to bury itself in her hair. Cass matched his eagerness, sliding her hands up his chest and around his neck, lifting up on her toes to press herself closer to him.\n\nGabe devoured her lips like he was starving, his tongue exploring every part of her mouth, sucking, licking, and biting. She moaned against his lips and wondered what she'd been so afraid of. If she'd known he kissed like this she never would have come up with that stupid rule. ",
        "The kiss went on forever and she was so caught up she didn't notice his hand sliding under her shirt until he pulled back and cocked an eyebrow at her. His fingers brushed the side of her breast and she blushed, well aware of what he'd discovered. She let him lift the shirt off over her head and bit her lip nervously when he stood there staring without saying a word.\n\n\"No comment?\"\n\n\"I...ah...damn.\" He shook his head as if dazed and reached up to follow the lacy edge of her bra, sending a scattering of goose bumps along the gentle slope of her breast. She felt her nipple tighten and knew he could see it through the pale blue lace of the bra she'd bought to wear for him tonight. The cups barely came up high enough to cover her nipples and pushed her breasts together to give the impression of more cleavage than she actually had, while the thin lace was almost completely see-through. \n\nHis fingertips drifted downward in a teasing arc and she bit her lip in anticipation, jumping when she finally felt his thumb brush over the sensitive peak. The slight roughness of the lace had been teasing her all night against the silk of her shirt, and now under his firm touch it felt like she might actually ignite in flames as he rubbed in tiny circles. \n\nWhen his other hand joined in on the other side Cass let her head fall back against the door. The moan that escaped her was muffled by Gabe's lips coming down on hers again as he pressed into her. His lips and fingers moved in concert, rendering her breath ragged and uneven, her brain unable to focus. She had to turn away from his mouth just to catch her breath.\n\n\"Do the bottoms match?\"\n\nShe nodded, afraid her voice would crack if she tried to speak.\n\n\"I thought you said lace was itchy.\"\n\nShe let out a hoarse chuckle. \"It doesn't feel itchy right now.\"\n\n\"No?\" His fingers tightened on her nipples, pinching them, rubbing the fabric against her puckered skin. She bit her lips to hold back a cry and he pinched harder, making her gasp. \"How does it feel right now?\"\n\n\"Ooh, it feels really good.\"\n\nA dark smile crossed his face and he pressed one thigh between her legs. \"Just imagine how good it's gonna feel when I rub it against your clit.\"\n\nCass's knees almost buckled as a powerful rush of arousal swept through her. The pressure of his leg was enough to drive her to distraction, but his words were what really got to her. She couldn't help imagining it as her hips moved of their own accord, rubbing against his thigh, the movements sending jolts of electric sensation through her body, building her higher and higher. \n\nAnd then he was gone. Her eyes flew open in surprise just in time to see him sit down on the edge of her bed, adjusting himself in his pants.\n\n\"Let me see. Take off your jeans,\" he demanded, his glittering eyes raking over her body with undisguised desire.\n\n\"Take off your shirt,\" she countered, seized by a sudden need to regain some control. \n\nGabe's grin sent shivers down her spine, but he started unbuttoning his shirt so she did the same with her jeans, shimmying them down over her hips. He peeled his undershirt up over his head and then stopped and just stared at her for a few moments. \n\nShe watched him closely as she anxiously smoothed her hands down over her hips. She'd never bought lingerie to wear for anyone before, but his reaction so far made her glad she did. He looked stunned and she couldn't help noticing the impressive bulge in his jeans. \n\n\"Call it a belated Christmas present,\" she said, encouraged by his clear appreciation.\n\nOne side of his mouth twitched up in amusement as his eyes continued to peruse her body. He opened his mouth to speak, but had to clear his throat first. \"Turn around for me.\" \n\nShe turned, a tiny part of her still wondering whether she should have gotten the thong instead of the hipsters, but the saleslady told her a round butt like hers would look better in these. Apparently the lady was right because she heard Gabe's low groan as she stood for a moment with her back to him. As she turned to face him his eyes drifted up to meet hers and he gestured with his head for her to come closer.\n\nAs soon as she was within reach he had his hands on her, sliding them around to grip her ass and pulling her close enough to close his mouth on one hard nipple. He teased her nipples with his tongue over the fabric while his hands traveled from her butt down to her knees and pulled first one, then the other onto the bed so she was straddling his lap. \n\n\"Cassie baby, you look incredible,\" he murmured into her breasts. \"You feel incredible.\" His hands smoothed up her thighs and over her hips, trailing up and down her spine. \"God, I want you so bad. I want to touch you all over, taste every part of you, slide deep inside you and hear you cry out my name when I make you come.\" \n\nCass couldn't speak. She was mesmerized by his touch, his voice...just him. Her hands were trembling and to try to calm them she ran her fingers through his silky hair and tilted his head back, kissing him deeply. Her hips moved instinctively, her body begging him to touch her more, a soft moan escaping her when he complied.\n\nHis warm hand pressed flat against her belly, his fingertips brushing the soft skin lightly, teasing her. Finally he let his fingers drift down between her legs. His touch was so light she doubted she'd have been able to even feel it if it weren't for the rasp of the lace against her wet skin magnifying the sensation until she was sure she could feel it in every nerve of her body. He dragged one finger along the length of her slit before letting it rest over her clit, rubbing slowly against it. \n\n\"Oh god, Gabe that feels so good,\" she mumbled, her lips brushing his ear as she spoke. Her tongue darted out and traced the outside edge, remembering how good it felt when he'd done it to her. She sucked his lobe into her mouth and pulled, enjoying the low rumble in his chest that she got in response. \n\n\"Faster,\" she whispered, her breath catching when he complied. \"Harder,\" she demanded and they moaned together as he pressed the fabric deeper into her folds.\n\nShe was holding onto his neck to stay balanced, but he took one hand in his and pulled it away. With a heated glance up at her, he placed her hand between her legs. She was surprised and a little embarrassed at how wet the fabric was, but he slid his hand over hers and pushed her fingers against her heated flesh.\n\n\"Feel how wet you are, how hard your clit is.\" \n\nGabe guided her fingers so she was rubbing her clit up and down, and it felt so good she couldn't stop her hips rocking against their joined hands. It was hot and so wet and she could feel the hard little nub jutting through the fabric. She didn't even realize his hand was gone until she felt him pushing the straps of her bra off her shoulders.\n\nHe scooped her breasts out of the cups and lowered his head to them once more. She watched him through narrowed eyes as he licked, sucked and nipped at the rosy tips and her breath came in short gasps as her fingers moved faster down below. \n\nHer nipple was deep in his mouth when he lifted his eyes to hers and caught her watching him. Holding her eyes he let it slip from between his lips and flicked at it a few times with the tip of his tongue. She moaned at the sight and he grinned and nipped teasingly at it before leaning back on his elbows.\n\nWhen he moved she caught sight of herself in the mirror over his shoulder. It was an arresting sight and she froze for a moment, captivated by the way her rosy-tipped breasts were pushed up by the bra bunched under them and her mouth hung open panting for breath. Her hair was loose around her face and her bright pink cheeks were topped by sparkling brown eyes. Gabe glanced over his shoulder and looked back at her, that heart-stopping grin on his face. \n\n\"Pretty fucking sexy, huh?\" He lay back on the bed with his hands resting flat on her thighs and in the mirror she could see her hand still cupped between her legs. She moved it to reach for him, but Gabe grabbed her wrist. \"Don't you dare stop now. You're almost there.\"\n\n\"I don't know if I can...with you watching,\" she said, seeing her chest and face flush even darker red in the mirror.\n\n\"Come on Cassie, look how gorgeous you are.\" He gestured over his shoulder at the mirror without taking his eyes off her. \"Make yourself come for me again. Let me see it this time.\" \n\nShe felt the muscles deep inside clench at his words and the way he was looking at her she couldn't deny him. As soon as her fingers started moving again she was right back on the edge. Her eyes flickered back and forth between the mirror and Gabe's face. \n\nUnthinking, her other hand came up to play with her nipples and when she caught sight of it in the mirror she was surprised to find that watching herself, knowing this was what Gabe was seeing, was making her incredibly hot. \n\nShe pinched harder at her nipple and impatiently pushed her panties to the side. As good as it felt through lace her fingers felt so much better against her bare skin and her hips started moving in rhythm with her hand. She couldn't help speeding up, her fingers circling and pinching at her swelling clit. Within minutes her back arched and a cry escaped her as the first wave of pleasure washed over her. \n\nAs soon as it did she felt his fingers sink deep inside of her. She looked down at him in surprise and his dark eyes bore into her, holding her in place as she rode through her climax, his plunging fingers working with her body to prolong her pleasure.\n\nShe didn't have time to catch her breath before Gabe grabbed her by the waist and flipped her onto her back, looming over her on his hands and knees. She grabbed his face and pulled him into a deep kiss. Her hands found his bare chest and she dragged her nails lightly down his body. When she got to his pants she quickly unbuttoned them and let him pull back just long enough to shove them off before she reached for him again.\n\n\"No. If you touch me now I'll lose it,\" he ground out, pulling her hands away from his throbbing erection. \n\n\"Gabe please, I want to feel you.\"\n\n\"Oh you're gonna feel me, alright.\" His voice was low and deeper than normal and there was no trace of teasing humor on his face. \n\nHe dug in his jeans pocket and pulled out a condom, then tossed the pants on the floor and rolled it on. She'd forgotten her panties were still there until he slid them off. With his hands on her knees he spread her legs wide and his eyes burned into her as he knelt between them.\n\nA shiver ran down her spine and she suppressed the urge to cover herself. This was nothing he hadn't seen before, but something about the way he was looking at her was different. When she met his eyes there was a softness there that hadn't been there before, and when he slid up her body the kiss he gave her was somehow more intense.\n\nBut all that was forgotten when she felt the weight of his erection brush against her opening. She moaned into his mouth and he pressed into her, barely sliding inside. He drew a shaky breath and then all at once buried himself in her. Cass's mouth fell open in a silent cry, her breath completely gone. \n\n\"Oh sweet Jesus,\" he whispered against her lips, holding himself deep inside her for a long moment. \n\nShe opened her eyes and looked into his as he pulled slowly back, teasing her opening again before plunging hard into her. This time her cry wasn't silent and his teeth nipped at her bottom lip. \n\n\"That's it, baby, make some noise for me. Tell me how good it feels.\" A little whimper escaped her as he pulled out again.\n\n\"Oh my god, you-\" She grunted as he thrust again. \"You feel so good, Gabe-\" And again. \"I'm gonna-\" And again. \"I'm-\" \n\n\"You're gonna what?\"\n\nHe slowed his movements, but thrust hard, still staring into her eyes and still pulling all the way out to tease her every time. She was on the verge of an orgasm, but he was pausing just long enough between strokes that she just hovered there, the anticipation building higher with each hard drive. \n\n\"Gabe!\" she cried out, a demanding tone in her voice.\n\n\"What is it, Cassie?\" he asked, continuing at the same leisurely pace. \"Tell me.\"\n\n\"I'm so close, please.\"\n\n\"Please what?\"\n\n\"Make me come. I want to come. Please, Gabe. Make me come again.\"\n\nHe pressed his lips to hers, robbing her of breath as he thrust into her again and again, pulling out and driving back into her immediately. She didn't recognize when it started, but suddenly she realized she was in the middle of a climax and it just kept building higher, each strong thrust prolonging her pleasure. \n\n\"I can feel you coming. Goddamn, you feel...\" His whispered words trailed off as he squeezed his eyes closed. Her orgasm peaked as he pressed deep into her and held himself still, letting her rock against him instinctively, her clit rubbing hard against the stiff hairs at the base of his dick.\n\nCass moaned his name and dug her fingers hard into the rounded muscles of his ass, as if trying to bury him deeper inside her. Slowly she relaxed as the waves receded, leaving her breathless and dizzy under him. His lips found hers again and he kissed her slowly, lazily, as if he had all the time in the world. \n\nHe lay motionless but still hard inside her, stretching her with a maddening sense of fullness, making her want more of what he'd just given her despite having just been satisfied. Her inner muscles tightened around him involuntarily as her body encouraged him to move.\n\n\"Fuck. That feels way too good.\" \n\n\"What?\" She looked up at his face and noticed that his jaw was clenched tight, his eyes narrowed as he gazed down at her. \n\n\"When you squeeze my dick like that.\"\n\nCass tightened around him again, this time on purpose, and smiled as he dropped his head and groaned against her shoulder. She released her hold on him just long enough to wrap her legs around his hips and then squeezed him with her legs and inner muscles at the same time, sending delicious sensations through her belly as she continued to pulse around him. Not only did it feel incredible, his reaction, a string of mumbled expletives and full body shudders, gave her an incredible sense of power. \n\nShe knew she was pushing his self-control and she was getting close to coming again herself when, with no warning, Gabe suddenly rolled and she found herself lying on top of him, her knees tucked up against his waist. \n\nHe grabbed a fist full of her hair and tugged just hard enough to get her to look up at him before his tongue speared into her mouth, taking her in a hard kiss. His hips thrust up into her and she bit his bottom lip as she started moving against him. His free hand slid up her side and closed over her breast, fingers pinching at the tight little nub. Cass moved faster against him, her hips going in little circles as she felt the pleasure building inside her.\n\n\"Sit up and fuck me,\" he demanded, his hot breath sliding over her ear, sending shivers down her spine.\n\nShe pushed up with her palms flat against his chest while his other hand abandoned her hair to cup her other breast. He pulled hard at her nipples and she hissed in pleasure, arching her back to press her breasts more firmly into his hands as her hips rocked against him in a steady rhythm.\n\n\"Come on, ride me hard. Show me what you got.\" There was a challenge in his eyes and a sexy smirk on his lips and his words alone made her moan with anticipation. \n\nCass lifted up on her knees for a long moment before letting her weight carry her down, impaling herself on him. The shock of sensation was so powerful it was all she could do to keep her eyes open to watch him as he gritted his teeth and squeezed his eyes shut. \n\nShe repeated the motion a few more times and was rewarded with a particularly vicious twist of her nipples that sent electric jolts through her body. She came down hard once more and Gabe's breath left him in a rush and his hands fell from her breasts to clutch at her hips, his fingers digging in almost painfully.\n\n\"Hard enough for you?\" she asked with a grin, lifting up again. His answer was to clench his jaw and thrust up against her as she came down on him, knocking her off balance so she had to clutch tight on his shoulders to stay seated on top of him. \"Oh my god, do that again.\"\n\nGabe happily complied and continued with his rough jabs as Cass' hand drifted down her body and found her clit again. This time knowing he was watching her didn't embarrass her in the least and the increasing power of his thrusts told her exactly how much he enjoyed the show. Her fingers sped up on her clit and she rode him faster, hardly lifting up at all any more, just bouncing and grinding down against him.\n\nCass came apart once more, letting loose a high pitched squeal before collapsing on Gabe's sweaty chest as her body went limp. His arms wrapped around her, fingers threading into her hair as he bit and sucked along her collarbone. He shifted under her and she was astonished to realize he still hadn't come, his hard thickness pressing into her aching flesh almost painfully.\n\n\"Good lord, you're like the Energizer bunny,\" she murmured into his neck, her breath catching as his chuckle made his dick jump and throb inside her. \n\n\"You aren't forfeiting mid-game are you?\"\n\n\"I wouldn't dream of it.\"\n\n\"Thank God,\" he said with a grunt, pulling out of her. \n\nShe gasped at the sudden feeling of emptiness, but it didn't last long. He rolled her to her back and moved between her legs, grasping an ankle with each hand. With an evil grin he lifted her ankles up above her head, bending her almost in half, and positioned himself with the head of his dick resting against her clit. \n\nHe moved back and forth letting his cock head stimulate her clit and dip shallowly inside her, spreading her wetness to ready her once more. When he finally planted his hands on either side of her head and parted her swollen folds to slide deep inside her, the mix of pleasure and pain was confusing. He felt so much bigger like this and when he was in as deep as he could go Cass had to grit her teeth to hold back a cry at the sharp pain that shot through her belly.\n\n\"Look at me,\" he whispered, his voice strained as he pulled back. She forced her eyes open and was confronted by the erotic sight of his head framed by her muscular calves, her bright red toenails peeking from behind his ears, his hair hanging in sweaty strands nearly reaching her face. \"You want me to stop?\"\n\nFor a split second she was tempted to say yes, but behind the pain was the promise of pleasure and she wasn't ready for it to end. She bit her bottom lip and shook her head, unwilling to trust her voice to speak. He pressed into her again, slower this time and she felt the warmth spread inside her, her body responding to his on a level that was far beyond her control. His slow, shallow thrusts came faster and deeper as she began moving with him, her legs tightening and lifting her hips to meet him, almost craving that sharp jolt she'd felt earlier.\n\nHer hands clutched at his biceps as she tried to pull him deeper and he responded, his cry matching hers as he bottomed out inside her once again. He let go and slammed into her over and over, the pain melting into intense pleasure as his thrusts became erratic. She vaguely heard him cry out her name and she could feel him throbbing deep inside her as he ground hard against her, both of them cresting together. A few moments later her legs slid bonelessly off his shoulders as he rolled to one side and collapsed next to her. \n\n\"Holy shit,\" he mumbled.\n\nCass giggled breathlessly, unable to do anything more than lie on her back, her limbs lying limp around her body. With her last bit of energy she turned her head to look at him, reaching over to push his sweaty hair back off his forehead. ",
        "\"Is it always like that for you?\" she managed to ask between breaths.\n\n\"Fuck no,\" he said to the ceiling, then rolled toward her and cupped her cheek with one hand. \"No, it is not always like that. You are incredible, Cassie.\" \n\nEven in the dim light she knew he could see the blush in her cheeks. He pressed another kiss to her lips and she thought she could feel some kind of intense emotion behind it, but told herself it was just wishful thinking. She trembled inside, but refused to let herself think about his words or the fact that the way he was kissing her didn't feel like it was just a game at all.\n\nThey lay for a long time just holding each other, their hands unable to remain still on each others' bodies, their lips occasionally finding each other. Eventually they drifted off to sleep in each other's arms, their breath mingling in the darkness between them. \n\nSometime in the very early morning they woke and made love once more, slowly and quietly, aware in the still of the night of the need for discretion. Gabe's lips never left hers and when she came he swallowed her cries of pleasure, muffling his own against her mouth as he shook in her arms. \n\n\"I should go,\" he whispered afterward, the fingers tangling in her hair and the arm locked around her waist sending a different message.\n\nCass sighed and settled herself comfortably against his body, her knee pressing between his thighs so they were as entangled as two people could possibly be. \n\n\"Don't,\" she said, her lips brushing the soft skin of his neck. \"Please.\" \n\nThe tension drained from his body and he relaxed against her as she fell back to sleep with a smile on her face."
    ],
    "authorname": "Panthem",
    "tags": [
        "teasing",
        "public",
        "masturbation",
        "blow job",
        "sneaking around"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/just-a-game-ch-03-1"
}