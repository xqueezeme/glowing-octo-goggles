{
    "title": "Ignore the Warning Label Pt. 04",
    "pages": [
        "Author's Note: \n\nThis is NOT the kind of Part 4 that is designed to stand alone. You will be very lost without having read the first three parts. \n\nAs with Part 3, this part alternates between Devyn's and Vivian's point of view and narrative voice. All the first-person perspective is Devyn and all the third person is Vivian. \n\nI'll share answers to some recurring questions from readers in the comments section. I love hearing everybody's thoughts, feedback and criticism. Thanks to everybody who has taken the time to reach out to me! Please keep it up! \n\nMany thanks to EGRI for helping point out my egregious typos and misspellings. \n\n***** \n\n\"Relax. Breathe in, slow and steady. Feel the freshness of the air fill your lungs, flow through your bloodstream and disperse all across your body. Hold it inside yourself - one... two... three... and let it out - one... two three... Feel all your cares and concerns exhale from your body, leaving you empty and content...\" \n\nBinaural beats hummed pleasantly though my mind from the big headphones that surrounded my ears completely. Blindfolded and laying back, the sounds made me feel nicely swimmy, like I was floating in the middle of a warm lake looking up into a deep night sky. The rhythm of the beats and Malcolm's calm, steady voice drifted between my ears without any of the words really sticking. They just kind of glided through me, like the ending credits of a movie drifting down across the screen. The general tone seemed to absorb into my understanding, but for the life of me, I could never remember any of his words afterwards. \n\n\"... Keep breathing, slow and steady. \n\n\"In - one... two... three... \n\n\"Hold it... \n\n\"And out - one... two... three... \n\n\"It's so relaxing to just lay back and breathe. It feels so warm and comfortable and safe...\" \n\nFalling into trance is different than falling into subspace, even if they might sound like similar destinations. Falling into trance is almost like putting part of yourself to sleep. It's like, while reading a book, you start out seeing letters and words on a page. Then you sink into the experience, and that part of your mind goes into autopilot. You stop really seeing the page in front of your eyes and instead are filled with images from the story. \n\n\"... Focus on your body and how it feels. Right now, it's calm and relaxed, but awake. It would feel even more relaxing to put it to sleep for a little bit. \n\n\"Feel my hands glide across your body. Everywhere I touch becomes warm and heavy. So heavy, it would take so much effort to move. It feels wonderful to let go...\" \n\nIn the real world, Malcolm massaged my right foot, hands slick with the warm oils he used to make me feel spectacular. He was listening to his hypnotic recording in synch with me so he could provide these effects. It helped me drop, but once I was down in trance, he would stop and let his voice do the work. Strong and firm yet at the same time gentle and smooth, his hands on my body matched his voice in my head perfectly, making me shiver with pleasure and contentment. He moved up my legs slowly, spreading oil and warm relaxation wherever he went. My calves, around my knees and slowly up my thighs. \n\nMy legs felt like lead. Totally impossible to move, and even if I could, I had no desire to. They were so pleasantly calm now, why do anything? As I floated on my lake lazily looking up into infinity, I imagined them slipping beneath the surface, bathing in the warm water. My arms slowly followed, then my core, chest and shoulders, slipping under the surface into uncaring relaxed pleasure. \n\nThen the experience shifted. His voice seemed to come from all around me at once, feeling more firm and authoritative. \n\n\"... Now, Drop. \n\n\"Your mind follows your body, Dropping down into stillness and calm. \n\n\"It feels so good to Drop, to slowly fall down and down, spiraling slowly away from everything, following the sound of my voice and giving up everything else...\" \n\nThe word 'Drop' had a triggering effect trained into me from weeks of these sessions. Every time Malcolm's voice put it into my mind, I felt myself take a mental step downwards, following my body deep underwater, all my own thoughts quieting to nothing and replaced by Malcolm's voice. \n\nThere's no real threshold into trance. Because of its nature, I've never really realized when I'm arriving there. My mind wanders away from myself to be picked up by Malcolm, and eventually it dawns on me that I've been in trance for a while. \n\nThat's where the fun happens. The last whispers of my own thoughts faded completely, and I drifted in the current of his voice, totally under its control, feeling safe and supported by it. I'm not sure how long we floated together like that, dancing as hypnotic puppet master and happily strung up marionet. Maybe minutes? Hours? It didn't occur to me to wonder until afterwards. \n\nEventually, faint giggles tickled at the corners of my awareness, softly enough to maybe be imaginary. They wove into the rhythm of Malcolm's voice, seeming to come from different directions, confusing my already very muddled sense of space. \n\n\"... Realize that we're not alone. I've brought two of my friends to play with you today...\" \n\nThey were real! Two beautiful, ruggedly toned, mischievously smiling women cuddled into me. One of the dangers of having a Dom who's been my best friend and confidant since high school is that he knows exactly how to push my buttons. I took them in and felt myself respond, little embers of light awakening deep within me. \n\n\"... Makes you Smolder, knowing that they're here at my command, imagining what I'll make them do to you...\" Malcolm's voice all around me. \n\n\"I think she likes you,\" whispering one ear. \n\n\"I like her too. It's a shame we have to share her,\" whispering in the other. \n\n\"... Tracing their fingers over your skin, along your collar and neck, nibbling your ears, making you Tingle and Smolder...\" \n\nThe embers of desire grew inside me as Malcolm's trigger laced voice and my two new lovers surrounded me. Tingle made me feel little teasing ripples of pleasure and anything to do with heat or light raised my arousal. I squirmed, quivering as they sent tantalizing pleasure through my core, tracing my abs, dancing across my thighs, kissing my neck and nibbling my earlobes. \n\n\"She liked that!\" \n\n\"Do it again, her whimpers are so cute.\" \n\nThey dragged it out for what felt like hours, feeding fuel to my lust's flames. Once started, then never let up. \n\n\"... Wrapping you up in the heat of their bodies, legs entwined with yours, soft breasts and hard nipples pressing into you. \n\n\"Their fingers softly circling your breasts, making your chest Tingle and your nipples Flame...\" \n\nMy body responded, feeling their ghostly teasing, straining to raise my impossibly heavy body up meet them. The teasing was driving me crazy! More! I needed more stimulation, needed to feel them fully. The tingles and caresses were all over my body, surrounding me, hitting me again and again but never giving me what I craved. \n\n\"Mmm she looks like she's ready to burst.\" \n\n\"Yeah, her moans are so adorable.\" \n\n\"I could just eat her up!\" \n\n\"Aww, but I wanted to eat her!\" \n\n\"You can have her mouth, her pussy is all mine.\" \n\n\"... She splits your lips open with her tongue, forcefully kissing you, making you absolutely Melt...\" \n\nAll the fire or heat related words had an arousing effect on me, but 'Melt' was the big trigger. It sent my arousal level skyrocketing. My mouth opened and I moaned into the kiss, feeling my insides rage and my pussy throb with need. \n\n\"... While Ally does the same thing between your thighs, kissing and licking you up one thigh and down the other, making your skin Tingle and your pussy Melt in anticipation...\" \n\nI distinctly felt drips of wetness trickle freely from my cunt down my ass. That's what 'Melt' did to me! My blood boiled and seared through my veins, turning my insides to hot goo and pushing me to new heights of lustful desire. \n\n\"... Closer and closer, licking higher and higher, she knows exactly what you want, what your quivering hips and flushed engorged pussy are begging for...\" \n\n\"Mmm,\" the feminine voice apparently named Ally purred from below me. \"Are you ready, baby?\" \n\n\"... She licks deep and hard up between your lips, splitting you apart and flicking right up over your *Snap* clit...\" Malcolm snapped his fingers on the last word, triggering a burst of pure, blissful pleasure to rip through me! I yelped - my hips thrust so hard I swear my ass was airborne for a second. \n\nMoaning filled my ears from my two lovers as they continued having their way with me. The rhythm of Malcolm's voice and the *Snap*s got steadily faster and more insistent, my clit throbbing harder and more urgently every time. The sexual pressure blazing inside me grew and grew, threatening to boil over and make me explode. My orgasm grew inside of me, pushing wetness from pussy into Ally's sucking lips, begging for permission to be unleashed. \n\n\"... Again *Snap* and again *Snap* \n\n\"Sucking your hard into her *Snap* mouth \n\n\"Taking you deep and *Snap* licking...\" \n\n\"Mmm you taste fantastic,\" Ally moaned. \n\n\"... The more she *Snap* eats you, the more you Melt into her *Snap* mouth. The more you Melt, the more you feel it *Snap* building up inside you. The want *Snap*, the urge *Snap*, the need to cum *Snap*. \n\n\"But you know you're not allowed to. Your sexuality is mine *Snap*, your orgasms are mine *Snap*, and I want to keep this one for myself...\" \n\nIt's completely unfair what that does to me. How being told that I'm not allowed to cum turns me on so much and makes the urge to cum SO MUCH harder to resist. \n\n\"...and I think this orgasm is just about ripe for the plucking now.\" \n\nThe *Snap*s stopped and Ally's voice said from between my legs, \"aww but Sir, I wanted to taste her cum!\" \n\n\"Maybe next time,\" Malcolm chuckled. \"But thank you for warming her up for me. Devyn, why don't you thank your friends?\" Maybe I murmured something. I don't know, I was a mindless horny mess of frustrated girl. \n\nIt stayed with me as Malcolm guided me back up out of trance. My whole body felt tingly, as if it were electrically charged and I would get one hell of a shock if I touched a doorknob. Sex pulsed through me with every heartbeat, searching for an outlet, demanding release! \n\nMalcolm's naked body straddling over me as he removed my blindfold was probably the single sexiest thing I'd ever seen in my life. Maybe it was his immaculate lips and what voice had just done to me, maybe it was his hypnotic puppet master dominant look, or maybe it was how his cock was hard and pointed right up at my pussy. Dealer's choice. \n\n\"Fuuuuck, that was intense,\" I groaned. \n\n\"Yeah? Well, it's about to get even more intense.\" \n\nI had less than a second to realize what that hungry tone meant before I was completely filled with his cock. I was so drenched he absolutely flew balls deep inside me, ramming himself onto my clit, sending my still trance-groggy mind reeling and my urge to cum through the fucking roof. Incoherent curses and babbling flew from me and I clung to him desperately, my muscles tense and straining to hold myself back from the edge. \n\nI knew without words not to ask for permission to cum. This orgasm was for Sir, built up inside me so that I could deliver its pleasure into him. I wanted to sacrifice it for him more than anything else in the whole world. \n\nMy body, however, was not on the same page. Malcolm thrust hard into me and my pussy wept juices of joy to greet him. No matter how hot the fire in my cunt burns, Malcolm's cock always sears me with its heat. No matter how hard my clit throbs, it never threatens to burst the way it does when Malcolm's weight smashes into it. No matter how horny I am, having the love of my life inside of me sends me into a frenzy. \n\nI wanted to be a good, obedient, selfless submissive for him, but is was so hard! \n\nAbove me, Malcolm's eyes blazed, never leaving mine for a second. He knew exactly what he did to me and he wanted to witness every second of it. He knew exactly how much he turned me on, and he loved being able to play me like a musical instrument. He knew just how badly I wanted to submit to him, obey him, give up my orgasm for him, and he loved seeing that devotion in me. He understood my struggle, understood just how hard it was for me, and he loved me for being strong for him. \n\nThat's the love I saw staring back at me, spiked through with the whole mess of other emotions written in his features. Pride and satisfaction, confidence and strength - the Dom in him loved having his way with me and knowing how good at it he was. There was the sadistic thrill he got torturing me like this, and the caring for me that made me want to suffer it for him. \n\nAll that was secondary, though, to the passionate lust radiating from him as he fucked me. \n\nI hugged him tighter into me, which backfired as my breasts crushed into his chest and my nipples sang pleasure in my head. My legs wrapped around him, knowing that feeling him deeper inside me would make it even harder, but not caring in the slightest. I wanted him - all of him - cost be damned! \n\nThe closer I got to the edge of cumming, the more my pussy clenched around him, squeezing him, making me feel every vein and throb as if it were my own cock. He was close too, I could feel it. His breathing was ragged, his thrusts fast and urgent, his pleasure escaping in groans and small moans that were music to my ears. I clung on for dear life, nearly overwhelmed by the pleasure. His cock swelled even more in my cunt, throbbing its pleasure through me, torturing me with my inability to give in to it. Still, I wanted all of him, and there was one piece missing. \n\n\"Please, Sir. I want it. I want you to cum. I want you to cum inside of me. I want your cum deep in my pussy. Please, cum inside me, Sir. Please.\" I babbled between moans. \n\nHis eyes got wider, his pupils dilated, and he buried himself to the hilt and held there. His huge throbbing pressed me so much fuller, filling me up with cock just as I felt him streaming his cum all over my deepest pussy. I hadn't thought this far ahead. How the hell was I meant to hold back from this!?! It felt soooo good. Every pump of cum into me was like an injection of raw sexual pleasure, rocking my world with its intensity. My eyes rolled back in my head I lost control of everything else as I tried desperately to stop my body from crashing into a colossal orgasm. My nails raked his back, my legs locked around him and I screamed myself hoarse. \n\nStill he came into me, impossibly long and hard, feeding off of me. He felt all the pleasure that I was denied. He experienced the orgasm I sacrificed for him. It was like he had two orgasms joined together and he came fully for both of us. It was beautiful. The way he looked down from above me was so beautiful, it pierced through my desperation and somehow made it easier to calm down. I latched onto that as my rock in the storm, neve wanting it to end. I took in as much of his beautiful pleasure as I could, wanting to memorize everything about it forever. \n\nFinally, it was over. With a final surge and a little whimper, all strength left Malcolm's body and he collapsed on top of me. Giddy with relief, I barely even noticed that he was crushing me. I did it! I hadn't cum! I'd given it to him, and oh my god, it was so worth it for what it had done to him. \n\nMy body still wasn't getting the memo. It screamed in frustration, raging at me to rub my clit just once and have the world's biggest orgasm. Fuck my body. I wanted Malcolm to have it more than I wanted it myself. If all my body ever did for me until I died was let me experience Malcolm like I just had, I'd go to my grave smiling. \n\nWe cuddled together, whispering sweet nothings. I tried to describe those last perfect seconds as he finished, and Malcolm made quiver in pride with his praise. It really had a euphoric effect on me. Like, I was already proud of myself and I knew I'd done a good job without being told. But still, hearing him say those words made me giddy with happiness. \n\nI wanted this to go on forever. Yeah, I know I just said that about the sex. I wanted both to go on forever and I didn't care if it was a contradiction. Cuddled up together, gazing into each other, lazily sharing our experience. Malcolm's elegant way with words let me almost see it again through his eyes. He showed me about how he'd planned out the script and how it felt for him to see my body respond just the way he wanted it to. I tried to share what it felt like in trance and the agony of holding back the urge to cum for him. I hoped I made enough sense to show him how amazing it felt. \n\n\"We should shower off before we fall asleep,\" Malcolm yawned. He made to get up, but I pulled him hard back into bed. \n\n\"No! You're staying right here with me, Sir.\" \n\n\"But I'm getting sweat all over your bed!\" \n\n\"Yeah?\" I stubbornly pulled him close, \"And I've got a cunt full of your cum. What's your point?\" \n\n\"I suppose you were going to have to wash your sheets anyway,\" he laughed. He let himself be wrestled down under the covers, then got revenge by tickling me. I'm so ticklish it's terrible! We battled for position, Malcolm changing his tickle targets too fast for me to defend, making me gasp for breath between laughs. We finally settled as a complete mess of limbs and sheets all tangled together. \n\n\"Malcolm?\" \n\n\"Yeah?\" \n\n\"Who's voices where those at the end there?\" \n\n\"Some old friends of mine from the GoneWildAudio subreddit. I'll have to pay them back by contributing to some projects of theirs sometime.\" He paused, looking thoughtful, and I kind of got lost gazing at him while he contemplated the ceiling. \"It's really nice to get back into this,\" he eventually said. \"This used to be my thing with Chloe, and after we broke up, it felt kind of tainted. Doing it with you these past months has been like reclaiming a part of myself.\" \n\nHave I mentioned how his ability to turn my heart to mush with just a few words is completely unfair? Well, it is. 'I'm really helping him heal!' Eventually, he fell asleep in my arms, leaving me to my favorite activity - struggling to stay awake so I can watch his peaceful sleeping face. \n\nWhen we first started dating, our relationship had changed and I'd wondered what he was to me. I still wasn't any closer. My boyfriend? My sexual partner? My best friend? My dominant? The guy I was in love with? \n\n'Was it really just yesterday we said I Love You? We really waisted a lot of time on that.' \n\nHe was all of those things rolled into one, but I didn't have a word for it. Laying there that night, feeling him wrapped around me, breathing in his scent, the marks from his ropes still faint on my skin from yesterday and the feeling his semen within me, I was content to think of him as simply 'Mine.' \n\nMine, and I would never let him go. \n\n---------- \n\nVivian woke up Sunday morning feeling light and unburdened from the talk with Devyn. Emotionally, at least. She was sore and achy all over from Master Paul's belt and her butt felt... well, like it had just been fucked the night before. Still, that was nothing a lazy day on the couch wouldn't fix. There was something she had been saving for just such a lazy Sunday: planning her first serious fetish outfit for the party on Friday. \n\nNeither Master Paul nor Michael before him had ever seemed too interested in dressing her up in leather, lace nor rubber, but Vivian loved the look of those outfits. They seemed paradoxical in a way that appealed to her. Somebody could be dressed head to toe in leather - thigh high boots, a corset, long gloves - no skin showing at all, but still look undeniably sexual and gorgeous. It was a sort of deceptive modesty, one that she hoped would let her inner slut shine while allowing her to feel comfortably covered. ",
        "Nicole had let her borrow her set of a graphic novel series called Sunstone, which had pages upon pages of wonderfully drawn pictures to inspire Vivian's imagination. She settled back on her couch and thumbed through them. The fully covered look she was aiming for seemed to be more Ally's Domme character, which wasn't Vivian's role at all. Still, Master Paul wasn't going to be at the party anyway, so that probably didn't matter too much. The books did a fantastic job conveying the character's inner thoughts and emotions and Vivian found herself getting drawn into one of the hotter sex scenes. \n\nA short while and an orgasm later, Vivian thought she knew what she wanted. Dark colors - blacks and some red - that would go with her dark hair and that she could accentuate with makeup. She liked the look of the corset and top combination Ally had worn for their first trip to the BDSM club \"The Crimson\", except Vivian would probably go for something that didn't have a giant hole in the chest for cleavage. She wanted to show off the laces on the corset, so her top would either need to cut off or fit underneath. She also wanted high heeled boots, the kind that would hug her legs up to her thighs. She'd go with a skirt to finish it off, to show off how long the boots would be. \n\nGreat! Now, where to get it? Living in Greenwich Village in Manhattan, she'd already seen a few candidates for stores that would have these things. She hopped onto her laptop to research where to begin. \n\nBut as she looked, her jaw dropped in disbelief. Sunstone joked about these things being expensive... but holy shit! Vivian made enough money not to get sticker shocked easily, but she'd also never spent a thousand of dollar on a single outfit before. \n\nThat took the air out of her balloon a bit. \n\nCrestfallen, she sent a group text to Susan, Devyn, Nicole and Sam. \n\nVivian: Hey guys! Good morning \n\nVivian: Do you know what youre wearing to the party friday? \n\nVivian: If its not too much to ask... do any of you possibly have anything cute I could maybe borrow? \n\nShe fidgeted nervously, hoping that she wasn't being too forward asking her new friends to loan her clothes. After talking to Devyn last night, Vivian felt comfortable asking her, but doubted Devyn was the type to have a deep wardrobe of fetish wear. She suspected Sam was, though, and they looked like they would be close in size. \n\nSure enough, Sam responded just before lunch! \n\nSamantha: Sorry just woke up \n\nSamantha: Yes! I've got you covered. \n\nSamantha: When can you come over to try things on? \n\n---------- \n\nThe problem with hoping your period times itself according to your schedule is that you're never actually happy, even if it does. I wanted mine to start Monday, after Malcolm left, so it would be over before The Valmont's Party. Maybe it was a bit of wishful thinking to hope Aunt Flow would thread the needle perfectly like that, but she fucking owed me after crashing Malcolm and my first date. \n\nIt did happen just like that! I knew I should have been grateful, but it still left me cramping, bloody and miserable on Monday. Mondays were already rough for me. Everybody says they hate Monday, but they're just complaining about saying goodbye to the freedom of the weekend. The end of my weekends meant the end of my time with Malcolm. \n\nIt wasn't getting any easier to say goodbye and return to the real world, and that Monday was especially difficult after our wonderful and emotional time together. First my birthday on Saturday with the bondage and orgasm overload, then the hypnosis yesterday? Going from that to nothing was like running into a brick wall. \n\nIt was technically just 17 miles between us across New York, but it really felt like we had a long-distance relationship. \n\nIt wouldn't have been so bad if we were able to connect more during the week. Malcolm's summer internship working for the law firm, however, absorbed so many hours that I worried about him getting enough sleep. They threw dry, boring legal reading at him that none of the full lawyers could be bothered to do, and it kept him up late every night. He organized his schedule so that we could be together on weekends without any work getting in the way, and somehow, he always found time to have something amazing prepared for the bedroom. \n\nI tried to tell myself that feeling lonely was unreasonable. Our relationship was amazing and I loved it... but still, I found myself feeling jealous of the other interns Malcolm sent me selfies of eating lunch with. They got to spend more time with my boyfriend than I did. \n\nI struggled with those feelings as I sweat and flexed my way through my morning at the gym. In the end, I was just mad at myself. We'd spent the weekend having fantastic sex and professing our love for each other, but here I was finding reasons to feel shitty. The Bloody Demon really sucks. \n\nNevertheless, I couldn't help but enjoy my core workout day. It helped sooth my raging uterus, and let's face it, everybody with abs and the slightest hint of vanity can't help but enjoy the way they look after getting their six-pack pump on. I used to be self-conscious about my body. I worried that I was too tall, too muscled and too much of a tomboy to be attractive to Malcolm. Now I knew better. Malcolm loved my physical strength because he loved to take it away from me and leave me kneeling at his feet. \n\nAfter shoving my hormonal negativity aside, I had a lot to keep my mind occupied. I'd told Malcolm about my midnight conversation with Vivian. How she suffered through sub drop with a Dom who didn't care to give her the aftercare she needed. How she saw her sexuality as something to be ashamed of and internalized everything as her own failing. \n\nI wanted to help her. I felt compelled to help her. We'd only known one another for a few weeks, but I already saw her as a close friend. Unfortunately, Malcolm didn't have a quick and easy fix. He didn't think it would be as simple as telling her to dump her sorry excuse for a master. I needed to find a way to make her understand that she had value as a person. Otherwise, she wouldn't see herself as worth sticking up for. \n\nHe said Vivian was lucky to have me on the case. I was, according to him, the most loyal friend he'd ever had, and I should just do what felt right to me. Do what felt right and eventually I'd teach Vivian some self-love. Which sounded nice, but I had no earthly idea how to do that. It frustrated me! It was so obvious, she was such an awesome person, how could she not see it? \n\n'Then again,' I thought darkly, 'if I'd spent all my formative years believing I was an unlovable slut, I might have some issues too.' \n\nI would see her after work at Nicole and Sam's house. They'd decided to call it a makeover party, and I'd been enlisted to add my expert opinion. When I tried to complain that I knew exactly nothing about fetish fashion, Sam laughed and said my real job would be to keep Nicole entertained while she made Vivian beautiful. \n\nWell, I could certainly do worse for a Monday night's entertainment. \n\n---------- \n\nNicole and Sam's two cats loved me. Phedre and Melisande, named after characters from a virtually unknown book called Kushiel's Dart, leapt between Nicole and I as we tossed a ball of yarn Vivian had brought for them. When Nicole found out I'd never heard of the book, she insisted it was gaping hole in my shelf of fantasy novels and pressed her copy into my hands. It was quite good, somewhat like Game of Thrones in terms of political intrigue, except there was so much kinky sex that HBO would actually need to cut down on the nudity if they ever tried to make a series out of it. \n\nIn the book, Phedre was a masochist courtesan and Melisande was the perfect cruel sadist. The two cats didn't quite fit their namesakes. Melisande the cat was shy and Phedra was the authoritative one, but they were very cute chasing the yarn together for our amusement. \n\n\"This whole thing would be easier if we had storybook Doms like you,\" I said to Melisande as I scratched her chin. \n\n\"What's that?\" Asked Nicole. \n\nI nodded towards the bedroom where Sam was putting Vivian into another potential party outfit. \"Affording clothes and toys and stuff.\" \n\n\"What do you mean?\" \n\n\"You know, Dominants from stories are always filthy rich. It's the one thing the whole BDSM literature genre has in common.\" \n\nNicole laughed and tipped Melisande over to rub her tummy. \"You think so?\" \n\n\"Think about it! Think about everything you've ever read. Crap like 50 Shades, non-con fantasy like Twist Me, hell - even more realistic stuff like Sunstone. Fantasy Doms are always rich! I wish Malcolm got that memo before he went and plunged himself into six figures of debt for law school.\" \n\nWe both laughed and Nicole called out, \"She's right! Sam! You're a Domme, why aren't you a millionaire?\" \n\n\"Because you spend all our money on craft beer and t-shirts!\" Sam's voice shot back from the direction of the bedroom. \"It's a wonder we have anything left for food.\" \n\n\"Oh, right,\" Nicole rolled her eyes as she and I clinked two of the offending beer bottles together. \"And I'm sure your shoes budget has nothing to do with it.\" \n\n\"If not for my fashion sense, both of us would go to work barefoot.\" Nicole, apparently, couldn't argue with that. I had seen Nicole dressed up for work once - she'd been totally unrecognizable in stylish heels and a conservative but compelling feminine dress that was clearly picked out by her girlfriend. \n\n\"And it's up to me to make sure we don't go thirsty once we get home!\" \n\nAt that moment, Vivian and Sam both reentered the living room and Sam took the bottle from Nicole's hand. She enjoyed a long, slow gulp and gave a contented sigh before handing it back with a smile. \"Yes. Whatever would I do without you?\" Though sarcastic sounding, the way her voice and expression changed slightly betrayed her feelings. Sam and Nicole really were a great couple. \n\nSam had been trying to find something in their stockpiled collection that could be persuaded to fit Vivian and would go with the shoes, leggings and corset Vivian had already fallen in love with. The corset itself was meant for Nicole, as was the original accompanying outfit, but while the corset could be adjusted to fit Vivian's frame, the rest was far too small. There were other options to keep Vivian's ample, corset enhanced breasts and shoulders covered the way she'd wanted, but one by one we'd decided that none of them really worked. \n\nThis outfit went the other direction and made Vivian blush as she modeled it. Four-inch heels, beautifully intricate black stockings, and a knee length flowing dark dress with flashes of flame-like reds and yellow. The corset was a darkish glowing red color, which went well with the dress's flame patterns and must have accentuated Nicole's hair wonderfully when she wore it. The dress reappeared from under the corset, extending upwards just far enough to cup Vivian's breasts. It was strapless and fitted for the smaller chested Sam. \n\nVivian looked stunning in it. \n\n\"My god that's hot on you.\" Nicole said, and I quickly nodded in agreement. \n\n\"You-you think so?\" Vivian stammered. \"It isn't too much?\" We all knew she was self-conscious about her bustiness. \n\n\"If you don't wear that, I'll persuade Malcolm to let me,\" I said. Malcolm, apparently, had an outfit prepared for me, and he was being very cryptic about it. \n\n\"The dress would be like a skirt on you,\" Nicole joked and Sam laughed. \n\n\"She's not THAT much taller than me.\" Sam took Vivian gently by the shoulder and spun her around for us. The corset really did wonders for her figure and she looked comfortable spinning in the high heeled shoes, stepping easily around in a circle. I admired her a bit for that. I absolutely suck at keeping my balance in anything higher than flats. \"Yes, this is the one for you,\" Sam said decisively. \"I'm sorry we couldn't find something less revealing, but trust me, you'll look like a nun compared to some people if you wear this.\" \n\n\"You really think so?\" Vivian asked. \n\n\"Oh yeah,\" Nicole confirmed. \"You wait and see, there will be more than enough bare tits to distract from your cleavage.\" \n\nVivian's eyes went wide. \"There will!?!\" \n\n\"Yes. Hers, for instance,\" Sam grinned as she nodded to Nicole. \"I've got some new jewelry for her to show off.\" Something about the way Sam said that reminded me of Malcolm and the knowing smile he wore when he had something devious planned. \n\n'Nicole showing off her jewelry!' That made my mouth water! Nicole had hinted to me before that she had four more piercings beyond the sexy orbital and helix rings she wore, but none of them were visible under her clothes. The idea of seeing a topless Nicole made me grin and squirm in my seat a little. \n\nSam and Nicole both noticed, and teased me mercilessly for it. \n\nI was still a little mystified about the non-monogamous aspect of their relationship. They were both clearly in love, but they were open to sex with other people. It confused me even after both Malcolm and they themselves had explained why it didn't feel like cheating to them. Sex with other people was purely physical fun. They weren't looking for emotional fulfillment from it in the way they got from each other. Cheating, on the other hand, was a betrayal of trust. Everything they did, they always did with the other's full knowledge and blessing. Usually they did it together, as a threesome or foursome group. \n\nSam and Nicole actually felt like it enhanced their trust in each other. They could play with other people, but they would always be drawn back together like magnets because they were each other's perfect partner. Sam felt empowered by it, showing off samples of her submissive Firefly and commanding the action. Nicole liked rough play and said that being powerless between multiple people was a huge turn on for her. \n\nI was still torn. I understood separating sex as an emotional experience from sex as pure physical fun. After all, I'd had many casual hookups in my life without feeling emotionally into any of them. Also, Nicole was fucking hot. I'm very choosey with my women, and she was exactly my type. I genuinely believed I could enjoy sex with her as an entirely physical act without it getting in the way of my love for Malcolm at all. \n\nBut, at the same time, I would die of jealously if I ever saw Malcolm having sex with anybody else. Deep in my gut, it seemed tremendously unfair of me to consider doing something that I couldn't live with my partner doing. \n\nMalcolm didn't see it that way. To use the same metaphor he had, he got a dominant thrill out of throwing me away from himself like a boomerang, knowing I would circle around and land right in his arms again. He said that we were different people with different feelings, and that it wasn't unfair at all for us to have different emotional needs. My possessiveness of him didn't have to mean I didn't trust him, and his openness to scenes involving me with other people didn't have to mean that he wasn't attached to me. \n\nHe pointed out that it wasn't all selflessness on his part. Every guy with a bi girlfriend has some kind of fantasy of her with other women. Malcolm said that getting to play dominant director with Sam from the sidelines while Nicole and I went at it like their puppets would be tremendously hot for him. \n\nHe answered all my questions about it, but true to his word the first time it came up, he never let me feel pressured one way or the other. It had to be my choice, he refused to let me dive into something this emotionally heavy simply wanting to please him. I think he was actually fascinated watching me struggle with it. To him, it was like a psychology experiment. Much later on, I would find out that he and Sam had actually made a bet about it. \n\nI bore their entirely accurate teasing accusations that I'd been fantasizing about Nicole's naked tits until Vivian bailed me out. \"So guys, how am I supposed to get to the party dressed like this?\" \n\nGrateful for her change of subject, I quickly answered, \"you don't have to, people will be changing once they get there. You should go in casual clothes. It helps maintain the illusion for the neighbors that there isn't a big deviant gathering happening.\" \n\n\"Oh, good,\" said Vivian, visibly relieved that she wouldn't have to walk across SoHo dressed to turn tricks. \n\nSam had gone to the kitchen and returned with a fresh beer for each of us. \"I just fed you an hour ago!\" She admonished Phedre's hopeful meow. \"Yeah, wait till you see this place! There's enough room for everybody to have their own private changing area.\" \n\n\"Perfect for when people want to break away and fuck,\" Nicole nodded knowingly. \n\n\"And Jeff and Natalie are fine with people doing that?\" I asked. \n\n\"As long as you bring your own toys and don't make them do anything more than change the sheets afterward, they're... well, not fine with it exactly, but willing to put up with it once in a while.\" \n\nWe returned to playing with the cats while we chatted and got tipsy. Phedre and Melisande found endless amusement in Vivian's knitting yarn and jumped high as we passed it between us over their heads. Eventually, they figured out how to work as a team and caught up to the trailing thread. Gleefully purring, they unwound the ball batting it between their paws, and found themselves hopelessly tangled up in it. \n\n\"Should we help them?\" Vivian asked concernedly. \n\n\"Hell no! They got themselves in, let them get themselves out,\" Sam said. The cats struggled for a little, which only tangled them up worse, then they gave up and started licking each other. It was really cute, and in our beer altered states, Vivian and I couldn't help laughing and accusing Sam and Nicole of teaching their cats about bondage sex. \n\nAfterwards, Vivian and I walked together as far as her train, giggling and chatting about nothing. Vivian was convinced that the prevalence of flopping made the NBA unwatchable compared to college basketball. Coming on the heels of the 2018 playoffs - featuring Harden trying his damnedest to flop his way to victory over The Warriors, and then The Warriors wiping the floor with Lebron... I couldn't exactly disagree. \n\nShe was warm and upbeat, the way she usually was. It was hard to imagine that she was the same person who called me in tears just two nights ago. Should I check in on her? Ask if she was feeling better? Would that come across as caring or nagging? \n\nBefore I could decide, Vivian said, \"We talked so much Saturday night and just now, but I forgot to ask! How was your romantic weekend with Malcolm?\" \n\nEchoes of the weekend bounced around my head. 'He loves me! He loves me!' I grinned like a fool. It was the beer's fault, I swear! \n\nVivian noticed. \"That good, huh? Spill!\" \n\n\"Well... we exchanged our first I-Love-You's.\" Vivian gasped and hugged me as we walked. \n\n\"Oh my god, that's amazing! You've been friends for so long and it finally happened! Tell me! Tell me!\" \n\nShe asked, I told, sparing few of the erotic details. Vivian gushed when I recounted Malcolm beating me to the punch then gagging me and making me wait to say it back. It felt like I'd known Vivian for years. She was so thrilled, so genuinely happy for Malcolm and me, I felt touched. She made me feel special all over again. Malcolm thought that Vivian was lucky to have me as a friend? Well, I felt blessed to have her in my life. \n\nVivian doesn't have a single jealous bone in her body. I had the emotional connection with my partner that Vivian longed to feel with hers, but she didn't envy nor begrudge me at all. If we were similar in some ways, we were polar opposites in that one. Envy has always been my deadly sin of choice. I'd nearly fucked my friendship with Malcolm many times because of my crippling jealousy of all his girlfriends. Even just this morning, I felt flashes of it for random coworkers who got to see him more than I did. But Vivian? She never wished anything but the very best for her friends. ",
        "I doubled down on my resolve to be the friend to Vivian that she was to everybody else. The friend that she deserved, whether she believed it or not. \n\n---------- \n\nAt work the next day, Vivian stole quick glances at the group text chain she was a part of with Devyn, Nicole, Susan and some of the other young women who had formed friendships together. Some of them were pretty liberal texters of gossip during business hours. Vivian usually tried to avoid that, but she liked to read what they were saying as a bit of comedic relief to the monotony of the office. \n\nDevyn: ive decided im running for president \n\nDevyn: vote for me and ill pass a law requiring employers to give time off to women on our periods. \n\nShe smiled at all the responses pledging to donate money to Devyn's campaign. Really, Vivian was trying to distract herself from rereading Master Paul's response to her party outfit picture for the hundredth time. It was really short and she knew what it said by heart, but she kept reflexively flipping over to see it again. \n\nMaster: Wow, my slut finally learning how to dress herself up pretty! \n\nMaster: Im alredy looking forward to spanking you for it \n\nShe doubted he'd done it deliberately, but it made both sides of herself happy. By telling her that he'd spank her, he'd given her permission to enjoy letting her slut out. True, he would have found a reason to spank her anyway, but that was beside the point! Her penance was already arranged, so she could enjoy sinning to her inner slut's content. \n\nThat inner self loved that he'd called her \"my slut,\" and that he'd said she was pretty. It would have made her embarrassed from anybody else, but she wanted to be her master's pretty little plaything. And he was looking forward to seeing her again! It felt good to be wanted. \n\nIt also felt good to have this little secret inside of her as she walked around in her day to day life. It was like a warm, erotic presence hiding just under the mask she showed everybody. How would her coworkers react if they found out the plain, hardworking, boring Vivian was actually a deviant slut who was going to a sex party dressed to kill? Would any of them believe it? Would anybody believe that she was still nursing a few belt marks under her clothes and her last orgasm had been with her master's cock up her ass? \n\nIn the group chat, Nicole declared herself Devyn's VP running mate and added a commitment set a legal limit on how much AC can be blasted in offices in the summer. \n\nIt was silly to read so far into Master Paul's texts. They were just twenty words that he probably spent thirty seconds thinking about. Was she really so starved for his validation? Wasn't she too old to feel like a schoolgirl with a crush? \n\nVivian pushed those negative thoughts aside. What did it matter? Everything had its ups and downs, and right now she felt good. \n\n---------- \n\nNew York City real estate defies worldwide economic trends. The global market rises and falls, but prices in the city never go anywhere but up. It's pretty fair to say that everybody who can afford to live here makes a lot of money. \n\nHowever, a lot of money in NYC and a lot of money everyplace else in the world are two very different things. Me and my fellow young professions, for example, could buy a house tomorrow in most small towns. However, in the city, the cost of living nearly buried us. We were trying keep up with rent, buy formal work clothes, learn restraint while surrounded by hundreds of amazing restaurants, pay school loans, and somehow have enough left over to start a 401k. Most of the people in our age group were like Vivian. We were comfortable in our New York lifestyles, but dropping hundreds of dollars for a kinky outfit on a whim was impossible. \n\nThe Valmonts, by contrast, were rich. Really fucking rich. I'd heard jokes before, but I didn't quite get it until I saw their place. I took in their Soho loft with my wide eyes and mouth agape. \n\nIt wasn't just that it was legitimately big enough to get lost in. It wasn't just that any single piece of art probably cost more than my entire life's net worth. It was shocking because I knew Jeff and Natalie. They just regular people! Nothing about their personalities gave away that they were an extreme power couple who could retire tomorrow and spend the rest of their lives jet-setting without ever making a dent in their bank accounts. \n\nWe'd entered into what seemed to be the main living area of the loft. It was huge with a cavernously high ceiling. There were many different couch setups separated by partitions of plants and art. It created the effect of smaller intimate spaces, each with their own unique flavor, all together within one unifying open environment. The way it was lit and flowed together, it almost felt like a sculpture garden outdoors instead of a living room in a building. \n\n\"What the fuck...\" I muttered as I stared around. \n\n\"Yeah, that was about my reaction the first time I came here,\" Malcolm chuckled watching me gape. \n\n\"We have to live in a place like this one day,\" I said, hoping he might pick up the hint that we should be living together. \n\n\"I never had you pegged as an interior design connoisseur.\" \n\n\"I'm not! I just want to be able invite our friends over and watch them shit themselves like I'm doing right now.\" \n\nWe weren't the first ones to arrive. There was already a group milling around a large marble island countertop by the kitchen area on the far side of the room, chatting and munching hors d'oeuvres. I would normally have just called it finger food, but this place called for classier terminology. They were all the same people I knew from munch events, but cast in a whole new light here. Everybody was dressed up, and there was a huge variety from person to person. \n\nThe dominant men, as a group, seemed to mostly have gone for formal jackets and ties. Jeff Valmont, whose tremendous height, bulk and shaved head had reminded me of The Kingpin from Daredevil when we first met, wore the most elegant tuxedo I'd ever seen in real life. Even counting costumes on TV, something about it screamed high class, and it would even have put Downton Abbey's Lord Grantham to shame. Malcolm's suit, sexy on him though it was, simply didn't have enough zeros on the price tag to keep up. \n\nThe women, on the flip side, varied wildly. Claudia, a Domme at least a decade older than me, looked like she'd just been horse back riding. She wore black leather boots, tan pants, a white frilly top and held a mean looking crop. On the other extreme, Autumn wore five-inch heels, fish net stockings, and a tiny thong. That's all. Her bare breasts stood proudly out from her body, drawing covert glances from some and bold stares from others. \n\nShe glowed in the spotlight. Her broad smile was visible across the huge room, and she leaned happily into Michael's arm draped around her waist. \n\nI thought about my own \"outfit\" Malcolm had chosen for me. 'Pretty soon I won't be wearing too much more than her.' \n\n\"Vivian was right,\" Malcolm commented following my gaze. \"She was after Michael the whole time.\" That had been a topic of our gossip, Vivian and Nicole going back and forth about which of the hunter Doms Autumn wanted to be caught by. \n\n\"Yeah. She really wasn't kidding about being an exhibitionist either.\" \n\nMalcolm chuckled again at that. \"She's just an appetizer. Give it an hour or so, then you'll see.\" \n\n\"You keep saying things like that! You realize that the more you hype this up, the more it needs to perform, right?\" \n\nJeff and Natalie had made their way over to greet us. Something about them seemed different beyond just their clothes - Jeff seemed to be leading Natalie, arm in arm, in a way that didn't usually happen. \n\n\"Well I certainly hope our little party lives up to what Malcolm has promised you. In fairness, I don't think we've ever had a newcomer go home bored,\" Jeff said. \n\n\"Welcome to our home,\" Natalie added warmly. \"We're very happy to have both of you.\" \n\nJeff shook both our hands heartily while Natalie held back, her face downcast. Something else about her seemed weird, but it took me a few seconds before I realized what it was. Natalie's irises were completely black! It was like she was possessed by a demon or something - her eyes were pure white surrounding pits of solid darkness. \n\n\"Likewise. Thanks a lot for having us.\" \n\n\"Of course! If you guys would like to get into some more appropriate\u2014\" \n\n\"\u2014or less appropriate -\" Natalie suggested with a smile. \n\n\"\u2014you can use one of the guest rooms,\" he gestured down a hallway away from the cavernous open loft area. \n\n\"What's up with her eyes?\" I asked when we were out of earshot. \n\n\"She's wearing special contact lenses that block out all light. They're basically a perfect blindfold that feels natural and doesn't need any annoying straps.\" \n\n\"Holy shit! No wonder she was letting Jeff lead her around. They look really freaky, I like them.\" I thought back to the blindfold train ride I'd taken with Malcolm leading me - how helpless and submissive and supported by him it had made me feel. That had been with a blindfold made to look like sunglasses. I could have taken it off if I'd wanted. Those contacts though... Natalie was putting a whole other level of trust in her Dom to guide her. \"I want some of those for us!\" I said excitedly. \n\n\"Of course you do,\" Malcolm laughed. \"We'll have to ask where they got them. For now, though, I have another special something for you.\" \n\nPassing the opposite end of the space from the kitchen, we found a raised dais or stage of sorts surrounded by rows of couches, love seats, oversized bean bags and pillows on the floor. I recognized it immediately from the video Nicole had shown me months ago of Malcolm making his ex-girlfriend Chloe cum using trance. That, as much as Autumn's nudity and Natalie's sensory deprivation, hammered home that tonight was going to be very different than anything I'd ever experienced before. \n\nThe bedrooms, at least, seemed more down to earth. I barely got to glance around the one we walked into before I felt myself pushed back against the wall, Malcolm's face suddenly an inch away from mine. \n\n\"Oh!\" I gasped, surprised, before his tongue split my lips apart and I was consumed with being kissed. \n\nHe easily surrounded me, pressing his body into me and wrapping his arms around me while simultaneously conquering my mouth with his tongue. I melted into him, all the period angst I'd felt that week over our separation fading away to nothing. It felt so good. So damn good to be together, so fulfilling to feel how much he wanted me, so hot to press my breasts into his firm chest and grind my pussy into his rapidly hardening crotch. \n\nHe withdrew slowly, holding his body pressed to me, only going far enough to speak. \"I missed you, my love.\" His eyes blazed inches from mine, mirroring the rush of emotion that swept through me hearing him call me that. I loved both parts of it - being his and being in love. \n\n\"Say it again, Sir\" I purred, cocking my head to one side in a way that I hoped he'd see as an opening to take hold of my hair the way he liked. \n\nInstead of going for that customary spot, he gently pressed my chin up and wrapped his fingers around my neck. He didn't squeeze, it felt somewhere between a firm caress and a soft grip. Not enough to mess with my breathing, but more than enough to make me feel possessed. \n\n\"My love.\" It felt so natural to him, the way he put me under his dominance. He did it with an easy confidence that made it feel natural to submit to him. I accepted his grip and surrendered to it. \n\n\"I missed you too, Lover. Sir. Sir that I love. Fuck, that doesn't flow at all. Sir Love? Is that better?\" \n\n\"That makes me sound like a knight,\" Malcolm laughed. \n\n\"I'll think of something! You didn't give me very much time to think of anything romantic.\" \n\n\"Who said I wanted to be romanced?\" He asked, with a carnal lusty gleam in his eye. He certainly must have felt my pulse beat faster in my neck. My mouth watered, eyes flicking down to his pants crotch, hoping he meant what I thought he meant. \"But we'll have plenty of time for that later. We're supposed to be getting you changed.\" \n\n\"Oh, right,\" I said, disappointed. \n\nI expected him to move, but he didn't. He paused and said reflectively: \"Tonight, among this crowd in this setting, being 'mine' means more.\" \n\n\"It does, Sir?\" \n\n\"Yes. It feels different when it's out in the open among people who all understand what it means.\" He smiled warmly. \"I'm proud to have you with me tonight and I've been looking forward to showing you off.\" I absolutely glowed! After years of wishing he'd see me as more than just his platonic friend, him wanting to parade me on his arm at a sex party felt fantastic. \n\n\"That means so much to me.\" \n\nHe shifted, taking his hand off my neck and replaced it with something. It felt like a wide, weighty necklace that clung to my skin as he lifted my hair to fasten it in the back. \"You'll find that nearly all dominants love showing off our submissives to each other. On top of that, pretty much everybody in the scene gets very into symbolism.\" We finally separated and I was able to step away from the wall. Malcolm closed the door - we must have been making out and being lovey dovey with it open the whole time! - to reveal a full-length mirror on the inner side. \n\n\"Do you like it?\" \n\nI stared at my reflection. Malcolm hadn't put a necklace on me. It was a collar! A black leather collar with beautiful, finely stitched rose petals and thorny stems all around it, matching our cuffs perfectly. It must have been part of the same set. Just like the cuffs, it felt wonderful on my skin. Firm and warm, just like Malcolm's hand had been. I was still pretty inexperienced in practical, real life BDSM, but I'd read more than enough to know how significant a submissive being given her Dom's collar is. I was marked. Taken. Unavailable to anybody else. Owned. Owned by my dominant. Owned by Malcolm. \n\nI flung my arms around him. \"Of course I love it! Did it come with the cuffs? You've been holding out on me!\" \n\n\"I've actually never liked collars very much myself. Something about them seems unnecessarily demeaning to me. You're my girlfriend, not my dog.\" \n\nThat reminded me of what he'd told me the first night we'd had sex. 'There's nothing special to him about dominating somebody weak. He gets his kicks feeling elevated by somebody with her own confidence and strength. That must mean that degrading me would be like degrading himself as my owner.' I traced the patterns with my fingers, delighting in the substantive feel of it and the way it looked against my skin. \n\n\"You think too much into these things sometimes, Sir. I'm pretty sure you've never been deliberately disrespectful to anybody in your life. I'd never wear this and think you saw me as your dog.\" Even as I chided him for it, I had to admit to myself that that considerate mindfulness of his was part of what had always drawn me to him. Especially back when I was a prickly teenager. \"Anyway, you're going to have to get used to it now, Sir. It's beautiful, I love it and I'm never taking it off.\" \n\nHe just smiled his trademark disarmingly friendly smile. \"You know, with that determined look, I might just believe that.\" \n\nThe rest of my evening's costume was no less flashy for being less symbolically important. Quickly, mindful of how much time we'd already burned away from the party, I stripped down. \n\nApparently, some things never go out of style in BDSM fashion for subs. Lingerie is one of them. It's easy, sexy, and comparatively inexpensive. Plus, it makes the wearer feel like they're on display for everybody to enjoy, which creates a nicely submissive headspace. \n\nLooking at myself in the mirror again, I felt more nervous than anything else. 'It's fine! Autumn already has her fucking tits out, nobody will look twice at me!' I tried to psych myself up. Still, I'd never done anything like walking out into a group of people in nothing but my underwear before! \n\nMalcolm wrapped his arms around me from behind, running his hands over my shoulders and chest. \"You look fantastic,\" he whispered in my ear. Going lower to my abs, he fingered the outlines of my muscles and smiled approvingly at me in the mirror. Pleasant little tingles spread over my skin wherever he touched, and I longed for more. \"You'll have everybody out there jealous. They'll wish they were as fit as you, wish they could sleep with you, and wish you'd give them that same look you're giving me right now.\" \n\nI blinked quickly. I'd been watching his hands as they made their way slowly down my stomach. \"What look?\" \n\n\"The look that says you wish I'd toss you on that bed and fuck you.\" \n\n\"That's your fault and you know it, Sir! If you'd let me cum more than once a week, I wouldn't be such a horny mess for you all the time.\" \n\nMalcolm chuckled and teased lower, right along the waist band of my panties, intensifying the tingles and probably making my expression even more desperate. \"You say 'my fault' as though it's a bad thing. I quite enjoy having you like this.\" \n\nI groaned in response. My hips bucked slightly, half trying to persuade him to slip into my panties and half to feel his hard cock against my ass. 'I'm not the only one who's always horny in this relationship.' I thought as I felt it. 'But he's always in perfect control of himself!' That easy, natural confidence of his made it so easy to follow his lead and submit to him. \n\n\"Tell me what you want,\" he whispered in my ear. That knowing smile - he knew damn well what I wanted! He just liked making me say it. \n\n\"I want your hand on my clit and your fingers deep inside me, Sir.\" I spread my legs a little wider and met his eyes in the mirror imploringly. \n\n\"Ask and you shall receive.\" \n\nWith a wet schlicking sound, raw pleasure swept over me. He said something, probably about me already being wet enough to draw him right in, that went in one ear and out the other without finding my brain in-between. Malcolm has this thing he does where he hooks his thumb to press my clit while simultaneously filling me with two fingers. There's nothing subtle about it, it's hard and rough and oh so incredibly stimulating! I thrust hard to meet him, feeling a rewarding surg of fire sweep through me. \n\nIt was like being hit from multiple sides at once. His thumb sent shockwaves through my clit, which seemed to get magnified by his firmly fucking fingers inside me, bouncing the pleasure back and forth between them. Bigger and harder, hotter and wetter, my cunt spasmed and my whole body shook with it. He played with my body, making me shudder and moan like his dancing puppet, completely enslaved to the pleasure he gave me. \n\nBut then, just as I was really starting to heat up, the stimulation stopped. Half of me knew to expect it. Malcolm wouldn't just let me cum this easily. The other half of me, though, hadn't cum in a fucking week and wanted to keep right on going! I found myself dumbly pressing my pussy forward as though looking for where his hand had gone. \n\n\"You see, keeping you denied is a good thing!\" Malcolm said cheerfully. \"If I let you have all the orgasms you wanted, a little rubbing like that wouldn't make you feel nearly so good.\" \n\n\"Easy for you to say, Sir,\" I half moaned and half groaned. \"You're not the one who is about to go to a party with her nipples poking holes in her bra and a pool in her panties.\" \n\n\"No, I'm not. I'm the one who is about to go to a party with said girl on his arm, and everybody is going to know exactly who made her that way,\" he said, looking very amused at the prospect. \"Ready to get back out there?\" \n\nI glanced quickly at the bed in the corner, feeling wound up and frustratingly not full of his cock, then shook myself. It was just like Nicole had said all those weeks ago. Being constantly edged and horny was like a stimulant - it charged everything in my life with added intensity. Honestly? I really liked it... Even if it was frustrating as hell! ",
        "Many more people had arrived, and the space had filled considerably. The group by the food had dispersed and little groups had formed on various couches, which made it feel populated without being crowded. We spotted Vivian waving excitedly to us from the outskirts of a larger group of the party's younger members. \n\nTaking another look around as we made our way over, I was again struck by just how diverse everybody here was. Some were young like Malcolm, myself and our friends, but a large chunk were married with children. Some, like the Valmonts, were about to send their kids off to college, but others we passed were chatting about the absurd price of babysitting. Body types too - Some were fit like me but there were more than a few heavyset bodies on full, proud display. Brittani, for example, probably weighed 220 pounds, and was dressed to show off her absurdly large breasts. She caught me looking at her cleavage and smiled. \n\nThe one thing that everybody had in common was interest in female submissives. All the men here were dominants, and all the dominant women were gay or bi. \n\nThere seemed to be a bit of a charge to the air. Maybe it was the amount of leather, skin, erogenous zones and bondage gear on display. The tones of the conversations we passed, the movements of the people, the way there seemed to be much more looking and touching - everything seemed brimming with sex. \n\n\"You missed it!\" Vivian said excitedly, grinning ear to ear. \n\n\"Missed what?\" Asked Malcolm, looking into the crowd gathered around the couch opposite the one Vivian had saved us seats on. \n\n\"Their big announcement!\" Vivian pointed into the center of the throng, where I could barely make out Nicole and Sam surrounded by people trying to talk to them. \n\n\"Ahh, wow! Congratulations are in order, I see.\" Malcolm said, following my gaze. \n\nClearly I was missing something. \"What are you guys talking about?\" \n\n\"Look at them and you'll see,\" said Malcolm. \n\nI looked, but it was hard with all the bodies in the way. From what I could see, Nicole looked stunning. Just as Sam had promised the night we'd picked Vivian's outfit, Nicole was basically naked, with a thin and transparent sheet like top that was doing exactly nothing to hide her. My mouth watered drinking her in. Both her nipples had barbell piercings, capped with glittering red stones that matched her hair, lips, and nipples themselves perfectly. Her breasts were firm and pert, the kind that are wonderfully fun to play with while being compact enough not to bother Nicole while hiking or working out. \n\nI was still feeling flooded with arousal from earlier, okay! It's not all my fault I was ogling her tits like a buffoon! She'd only been teasing me with them for months! \n\nMadison, one of the two people Sam and Nicole were playing with tonight, made it to the front of the group. She must have said something, because Nicole held up her left hand for Madison to see. Light flashed from the diamond ring on her fourth finger and comprehension dawned on me. \n\n\"They're getting married!\" I exclaimed. \n\n\"Yes! This is what Sam meant when she said she had new jewelry for Nicole to show off, you remember?\" How could I forget? They had teased me for jumping to conclusions well enough. Vivian's happiness was like a warm aura around her, drawing us both in as she beamed at our newly engaged friends. She started sharing the story of how Sam purposed, but she was cut off by a loud whistle. \n\nJeff stood on the stage waving for people's attention. Even though it was only elevated a few feet, he towered over us and we all found ourselves looking upwards at him. \n\n\"Thank you all for coming to our home once again. It's been a while, a fact most of you have been constantly reminding Natalie and I about. There's no rule saying these things have to happen here, you know. Any of you people could have hosted.\" There were laughs and a few good natured calls for him to stop humble bragging. \n\nWhile he went on with a few reminders about etiquette and not making a mess of his house, I leaned in and whispered to Malcolm, \"Leave it to you to notice what's on a naked girl's finger while I'm gawking at her chest.\" \n\nOur eyes met for a second and he smiled. \"Remind you of anything?\" \n\n\"Of course! Like, every single porn video we've ever shared!\" We both chuckled, remembering Malcolm's tendency to highlight little details during our early friendship chats while my attention was drawn to the models bodies. \n\n\"It's not quite fair with her, though. Nicole is so much your type she's like your kryptonite.\" He dropped his whispering voice even lower and leaned into my ear. \"Besides, these are much better.\" In a flash, he gave my breasts a firm squeeze. \n\n\"Oh shuddup!\" I exclaimed, trying and failing to hide how much I liked the complement. \"You're just biased.\" \n\n\"Maybe so, doesn't make me wrong.\" \n\n\"\u2014and without any further ado, let's get the show started!\" Jeff finally finished, motioning to two people whose names I couldn't remember to replace him on stage. They were a married couple in their 30s, friendly but more introverted than others, which was why I hadn't spent much time talking with them at any of the munches. \n\nThere were a lot of people who got on the stage that night. I lost count of the scenes, but there were at least a dozen. Some were better and more interesting than others, but three stick out in my memory as truly fantastic. This was one of those three. \n\n---------- \n\nIt started slowly. Marcus set Natasha to kneel on the edge of the stage while he sorted through ropes. Some people settled into the pillows and loveseats near the stage to watch while others who wanted to socialize more took their conversations back towards the refreshments. \n\nVivian watched with interest. She really liked the way they'd dressed together. Marcus wore all pure white, contrasting his dark skin and beard while Natasha's outfit was entirely black, contrasting her pale complexion and dyed white hair. Natasha knelt with her eyes closed, looking perfectly peaceful, while Marcus's steps and motions around her seemed to have an elegant grace to them. The way their contrasting lights and darks moved as Marcus flowed around and around his stationary wife preparing the ropes to bind her was slightly mesmerizing. Something about it and the calm aura both of them gave off was infectious. Everybody looking on unconsciously breathed easier and leaned back. Vivian smiled as, beside her, Malcolm wrapped his arm around Devyn and she rested her head on his shoulder. \n\nThere were far more ropes coiled neatly surrounding Natasha than Vivian could keep track of. Eventually, a threshold was reached, and the real dance began. There was no better way to describe it than to call it a dance - a dance of contrasts that bled together to create something smooth and beautiful. \n\nVivian was reminded of watching a tree on a windy day. Marcus was the wind, drifting gracefully around Natasha, softly touching her into position to bind her. Natasha was the tree, standing steady and still, but always yielding to the wind's direction. Around and around they went, working a mesh like harness of rope all around her core and shoulders, then snaking down her arms to hold tightly together behind her back. \n\nThe more Natasha was bound, the more serene she looked. Like the ropes were liberating her rather than weighing her down. Her legs were next, patterns of rope weaving them together from her hips down to her ankles. Finally, Marcus wound the last length into her hair. She was, well and truly, tied from head to foot. \n\nMarcus gently lowered Natasha to the ground - the wind completing its dominance over the tree by toppling it over. At least, that's what Vivian thought until she realized Marcus wasn't done. He lowered something from the ceiling and started fastening the ends of the ropes from all over Natasha to it. It all came together perfectly, every length of rope measured out just so, all the knots taking exactly the right amount of slack, to connect together at that one point. \n\nA hush fell over the room, everybody who had been socializing joining the already silent onlookers. Marcus finished the last knot and pressed a button. Slowly, Natalie rose into the air. \n\nShe came to hover suspended in the air, perfectly horizontal, her weight distributed perfectly across her frame. Vivian had never seen anybody so completely in another's power before. She looked deep into Natasha's serenely peaceful face and felt deeply moved. She was beautiful, unburdened by anything, completely supported by her master. Totally free. \n\nIt appealed to Vivian, and she imagined herself in Natasha's place as she rose higher into the air over the stage. What would it be like? Would it feel as liberating as she sometimes felt from pain? How would it feel to have sex while unable to move a muscle like that? She felt warm inside thinking about it. It took her a few seconds to realize why it felt strange. It wasn't a lusty, erotic heat. Well, not only that, anyway. It also felt... different. There was something else there that she couldn't put her finger on. \n\n\"That's amazing,\" Vivian breathed softly. \n\nBeside her, Malcolm nodded and whispered back to her, \"Marcus is a real master. He does a different tie every time and it always comes out perfect.\" \n\n\"How do they make something so sexual look so beautiful?\" It was something that went against her world view. Sex, after all, had always been dirty in her mind. \n\n\"Because sex is beautiful,\" Devyn said simply. Vivian jumped slightly, not realizing she'd been close enough to hear. \n\n\"But I see what you mean, too,\" Malcolm said. He flashed Vivian a mischievous smile that Devyn couldn't see and continued, \"They really have a way together. They match perfectly. Also, I quite like what he's done with his beard, maybe I should try gro\u2014\" \n\nDevyn's head instantly shot up from his shoulder, \"don't you dare even think about it!\" \n\n---------- \n\n\"Yeah, I said yes, but honestly, I didn't have very much of a choice,\" Nicole told us conspiratorially. \"I was a little tied up at the time. Sam was in full Mistress mode and had been edging me so much I was bursting out of my skin.\" \n\nI smiled, knowing exactly what she meant. \"Where you're so desperate to cum that you'll agree to just about anything?\" \n\n\"Yes! I'll tell you, I've agreed to some pretty fucked up shit from that spot too.\" \n\nSam and Malcolm both chuckled together. \"What can I say? I know how to get what I want.\" Sam blew Nicole an ironic kiss. \n\n\"Damn sadists!\" Nicole playfully shook her fist at both our Doms seated on the couch across from us. She pulled Vivian and I tight together on our couch \"we subbies have to protect each other!\" \n\n\"Be careful with that one, Firefly,\" Sam smiled and nodded at me, \"She bites.\" Vivian and I both made biting motions towards Nicole, who laughed and pushed us away. \n\n\"I'm surrounded by perverts!\" \n\n\"Don't say it like you don't like it,\" I teased. \n\n\"Oh, I never said I didn't like it,\" she puffed out her chest, light sparkling off the stones in her nipples. I would have loved to have said something clever, but my mouth was watering a little too much. \"Anyway, cheats-to-get-her-way Mistress over there got me all worked up and then she says that the only way I'll be allowed to cum is if I say yes to her. Then the pulls out this ring and just looks at me expectantly.\" \n\n\"What? Were you expecting me to get down on one knee or something?\" \n\n\"I'd love to see a picture of that!\" Malcolm laughed. The image seemed pretty absurd. I had a hard time seeing Sam bend a knee before anybody. She was the type who, if she got shot, she rather would walk purposefully to the emergency room than allow herself to be carried on a stretcher. \n\n\"So would I,\" Jeff Valmont appeared over Malcolm's shoulder. \"It's almost your turn. Are you ready?\" He asked Nicole and Sam. \n\n\"Oh yeah! Let's go grab the others.\" Sam rose and motioned to Nicole to follow her. She did, but paused for a second and turned to me. \n\n\"You seem hungry tonight, Devyn. Do me a favor? While you're watching us, I want you to imagine that its your cock I'm sucking.\" \n\nI gaped at her as she skipped away after Sam. It was much heavier handed than our flirting usually got. \"Did she really just say that?\" I looked from Malcolm to Vivian and back. Vivian seemed to think it was the most hilarious thing she'd ever heard. I glanced down between my legs to make sure I wasn't missing anything important. \"What the fuck does that mean!\" \n\nI knew the smile on Malcolm's face well enough to know that he understood exactly what she meant. \"I have no idea,\" he said, innocently. \n\nWe hadn't watched the scenes going on too closely since the first one, but it had become clear that no two were quite alike. If Marcus and Natasha's ropes display had been an artistic dance of grace, calm and control, then the performance that Sam, Nicole, Madison and Kate put on was its polar opposite. \n\nWatching the four of them come up, I felt a little pang of unease. \"They just got engaged and they're about to have sex with other people?\" \n\n\"If they both like it, why shouldn't they?\" Vivian asked gently. I honestly had no idea what to say to that. \n\nWe all watched the stage, expecting there to be some kind of buildup in the scene before things really got started. We were wrong. No sooner had the four women gotten up than Nicole was being tossed to her knee between the other three. Madison was a dominant and Kate was a switch who usually leaned towards submission, which made me assume that they would do something with two Dommes and two subs. It quickly became obvious that it would be three Dommes all having their way with Nicole. \n\nIt was rough and savage, wild and chaotic. Kate and Madison both had a hand in Nicole's hair and were taking turns forcing her face between their legs. Their loud moans and dirty talk carried across the room, telling Nicole just how to lick them and taunting her with ideas of what to do to her next. Sam stood back a few steps, smiling harshly watching her Firefly struggling to keep up eating two pussies. Of the four of them, Sam was the only one who was fully clothed. \n\nSince leaving our couch, she had donned a massive strap on dildo. Even from our distance away, it looked seriously imposing. 8 inches? Maybe 9? And it was thick too, the kind of fake cock you only see used in porn. She sidled up behind Kate, the dildo swinging ridiculously between her legs, and offered her a paddle \n\nKate's cruel smile sent shivers down my spine. My eyes were glued to Nicole as Kate let her feel her weapon's leather across the skin of her ass, slowly building her anticipation, pulling back her arm, and then slamming it down hard! It wasn't a nice warm up stroke, the loud smack left Nicole's pale butt instantly flushed and Nicole yelped directly into Madison's pussy. Madison seemed to like that. \n\n\"Spank her again! AHH yes! Fuck! Keep doing it!\" \n\nIt was totally different than watching porn. Being there as it happened made it feel like we were all a part of some kind of collective hive mind. All the submissives imagining themselves in Nicole's spot and winced with every fall of the paddle, squirming in their seats and licking their lips. The dominants split themselves between wanting to make her ass redder and imagining her mouth on them. I was no exception, and I shivered into Malcolm's shoulder feeling my body respond. \n\n'Fuck she can eat some pussy!' I love oral sex, both giving it and receiving it, and I have a lot of respect for people who can do it well. Getting spanked while giving cunnilingus would be a real challenge. Every time the paddle fell, Nicole's body involuntarily jerked, and she needed to reset her mouth on Madison's clit. On top of that, it must have taken a lot of discipline not to clench her teeth and accidentally bite Madison. \n\nI'm particular with the women I'm attracted to. I find lots of female body types visually appealing, but I really only get turned on by women who wow me. Nicole's figure was right up my ally and her personality drew me. She'd impressed me already more than once - I had already been struggling with the temptation to pursue group sex with her! This wasn't helping in the slightest. Watching her, being impressed by her, was making me seriously wet. \n\nWith sounds that were more savage than erotic, Madison came, surprising everybody by squirting all over Nicole's face. Just as Madison's juices started flowing, Kate's paddle forced Nicole hard into her, right into the squirting line of fire. \n\n\"Take it! Fucking make me cum again! AHH!\" Madison shuddered and thrust her hips hard onto Nicole's tongue, clearly riding her to a second orgasm. \"Yes! Stay on my fucking clit. Don't you dare fucking leave it. Right there! YES!\" Sagging and finally sated, she released Nicole and stepped back. \n\nNicole wore a sloppy grin from ear to ear, clearly loving everything that was happening to her. I was surprised to see a similar pleased expression on Sam's face. There was a possessive gleam in her eyes that seemed to say: \"yeah, my Firefly has a magic tongue. She's amazing, and she's all mine. You get to taste her when I let you, but she will never be yours because I've got her wrapped around my fingers and she will never want to get free.\" \n\nIt was exactly what everybody had been trying to describe to me and it shouldn't have surprised me. It was part of Malcolm's explanations for why he was open to scenes with me and other people. I guess I needed to see it in action for it to pierce my monogamy-normalized head. \n\nKate made to switch with Madison and take her turn riding Nicole's face, but Sam had other ideas. Firmly, she put her hand on Kate's shoulder and pushed her aside. \"You can help her get it down.\" Not put out at all, Kate's cruelty shone through again, and she settled down on Nicole's kneeling level at Sam's feet while Madison took Kate's old post spanking her. Nicole's ass was really starting to glow - it was bright enough to show how well she earned her Firefly nickname. \n\nSomehow, I still didn't realize what was about to happen until it did. Sam lined her rubber cock up with Nicole's mouth and Kate slowly pushed Nicole's head forward. My eyes got wider and wider as, one inch at a time, the huge dildo vanished. Five inches in her mouth, then six. It must have hit her throat already, she must be gagging on it. Kate didn't let up as Nicole's distress started to show - seven inches, eight, then finally Nicole had the entire thing down and her face was pressed to Sam's pelvis. \n\n\"But... but...\" I stuttered dumbly. \"How? She doesn't even like cock!\" \n\nThen Kate took her hands away, and Nicole didn't move. She held herself there on her own, loudly struggling with the effort, but keeping it down. Seconds ticked by while everybody held their breath, my mouth going slack and my own throat feeling sore just watching. After what felt like an impossibly long time, Kate pulled Nicole by the hair backwards and she collapsed in a heap, heaving down air and looking thoroughly used. \n\nI couldn't do that. I couldn't get anything down past my gag reflex to save my life. My lesbian friend was officially better at deep throating than I was. She must have trained herself just because her Domme liked to wield a strap on. Awe filled me as Nicole was pulled back to her knees and back onto Sam's cock, lubing it up with her spit and Madison's leftover juices. Something inside me crumbled, and at that point, and I knew it was only a matter of time. Her parting words whispered in my ear and I couldn't help imagining her between my legs. I wanted her there. She made my blood boil and I wanted to fuck her! \n\nMalcolm, somehow sensing what was going on inside me, whispered in my ear \"You know I've told you that it's okay.\" ",
        "'How does he always know? Even watching scorchingly hot lezdom, he's paying attention to me.' \"Can we talk about it later?\" \n\n\"Sure.\" \n\nI wasn't the only one getting turned on. On couches and love seats all around us, squirms and cuddles were heating up into open petting and fondling. It really added to the feeling of a collective experience. The rougher the three Dommes were with Nicole, the more she loved it, and her enthusiasm was intoxicating. No matter how much she was smothered from all sides in pussy, tits, ass, thighs, pain and pleasure, she insatiably rose and rose again. \n\nIt came to a crescendo with Nicole on her back and mounted by Madison, Kate and Sam together. Kate rode Nicole's mouth, bucking her hips hard to force her clit as far in as possible. Madison straddled Nicole's mid-section and had Nicole's hands trapped under her, using them to grind against while she gave Nicole's breasts loud, hard slaps that left visible prints behind. Sam was between Nicole's legs giving her a very heavy fucking. \n\nHow Nicole's tiny body had managed to fit that thing inside was beyond me. It looked like she was being split open, except instead of writing in pain, she thrust up to meet Sam's thrusts with passionate delight. It must have been overwhelming for her, being assaulted by so much stimulation from so many directions at once. Buried under bodies, all demanding her submission to their desires. \n\nNicole's jaw must have been on fire from using it constantly for so long, but she still brought Kate to a screaming orgasm. She managed to divide her focus well enough to get Madison off again as well, finger fucking her hard while she continued smacking her tits shades of red to match her ass. As they were finally satisfied, they each slid off Nicole and settled to watch Sam fuck her brains out. \n\nAnd Sam did exactly that, penetrating her with furious gusto, as if to show everybody just how much her Firefly could take before she collapsed. Nicole would later tell me that she'd been cumming nearly constantly the entire time Sam fucked her. She battled her exhaustion and overload, trying to keep her body going, but Sam was relentless. Her hips pumped tirelessly and she seemed determined to conquer Nicole by sapping the very last of her strength away from her. \n\nEventually, that's just what happened. With a soft moan, Nicole fell backwards and lay spread eagled like a dead thing. \n\n---------- \n\nNicole tried her best to walk proudly off the stage afterwards, but she was so worn out that Sam was mostly carrying her back towards the guest rooms and showers. With her arm draped around Nicole like that, gentle but firm and protective, Vivian imagined Sam looked like a mother lioness carrying her sleepy cub home. \n\nUnlike Marcus and Natasha's robe bondage, Sam and Nicole's scene had been sex as Vivian was more used to in its tempo, savagery and wanton dirtiness. It made her happy to see Sam's being so tender afterwards. Nicole certainly had earned it. High though Vivian's sex drive was, Vivian knew she had nowhere near that kind of stamina. \n\nVivian was happy for them, but with a little twang of melancholy. She wished she deserved that from Master Paul after he had his way with her. Maybe, if she were able to perform for him as well as Nicole had, she might get there someday. \n\n\"Where is everybody going?\" Devyn asked, motioning at the stream of people following Sam and Nicole. \n\n\"Probably to try to find a private area for their own scenes,\" Malcolm answered. \n\n\"Oh. Well, good. I'm glad I'm not the only one who got hot and bothered watching that.\" \n\n\"I don't think you need to worry about that,\" Vivian said with a smile. \n\n\"You too, Vivian!\" \n\nNormally, Vivian would have blushed and been too embarrassed to admit it. But this wasn't normal. She was, after all, talking to somebody wearing nothing but her bra, panties, and a collar about their exhibitionist friends. She was surrounded by people who all understood her, and she felt safe letting her slut shine through around them. \"What? Can't a straight girl get turned on watching lesbians?\" \n\nFor some reason, that made Devyn beam. \"Of course! There's a reason 'lesbian' is one of the most searched terms for heterosexual women on porn sites.\" \n\n\"Is it really? I never knew that.\" \n\n\"I'd take her word on it,\" Malcolm chuckled. \"Devyn has a doctorate in porn.\" \n\n\"Yes, it was a long, hard road to get there, and I couldn't have done it without the tireless support of my friends,\" Devyn playfully nudged him. \n\nThe party had taken a turn for the openly sexual, and it fascinated Vivian. Couples making out, pleasuring one another, seemingly indifferent to anybody who might see them. No, not just indifferent, some clearly wanted the attention. The three of them spent some time wandering between groups, chatting with those not in passionate throws and observing some of the more open activities. \n\nAutumn was one such example. Autumn, who had been nearly naked since the very start of the party, now had her thong around her knees, a blindfold, a ball gag, and had her hands cuffed behind her back. People were free to come up and touch her however they wanted. Malcolm explained that it was her fantasy to be publicly used, violated and humiliated. \n\nIn reality, there was nothing non-consensual or unsafe about it. Michael, as her Dom for the evening, had arranged with everybody who touched her ahead of time to keep everything safe and within the bounds Autumn wanted. He stood protectively by her side, directing the fun quietly to keep Autumn as immersed in living her fantasy as possible. \n\nVivian had met all these people at munches over the course of weeks and had become friendly with most of them. They were all friendly, reasonably down to earth, normal folk who she'd known were drawn together by shared kinky taste - but she hadn't totally understood it until tonight. They reminded her of... well, herself. Kind of. They all seemed to have masks they put on to show the outside world, but they didn't seem to struggle between identities in the same way she did. \n\nShe loved how they were all unfailingly supportive of one another. Even people with humiliation fetishes were comforted and cared for afterwards. They were kinky and sexual together, but they were all friends and lovers first and foremost. It was the same kind of warmth she wished she had with her own master... \n\nThe sad twinge she'd felt watching Sam and Nicole grew, little by little, and she couldn't help feeling a little lonely even as she was surrounded by people who understood her. The friendships were all amazing and she felt bad about her dissatisfaction, but she really wanted to feel the special connections all these subs had with the people they surrendered their power to. \n\nFinally, Jeff made his way up to the stage again and announced that the last performance of the night would be his. He had produced a bed from somewhere and set it up on the stage, and a camera was now positioned to capture their show. Presumably, that was to show Natalie what she had looked like afterwards. \n\nNatalie still wore her blackout contact lenses. She'd played her part as hostess all evening wearing them, showing astonishing comfort with her blindness, but leaning more into Jeff's guidance as time went on. Beside Jeff's grandiose tuxedo and accessories, her dress was quite simple. \n\n\"Hold my drink please, dear,\" Jeff said, placing a glass of water into her hand. There hadn't been any alcohol at the party. As a rule, kink and drink don't mix. \n\nJeff fished in one of his pockets and produced a set of black ribbons. \"This dress is about the size Natalie usually wears to work,\" he said to the audience, then bent and wrapped ribbons around each of her legs, marking the lengths where the dress ended. \n\n\"Strip.\" Natalie made to pull her dress up over her head, but quickly realized that she couldn't do that and balance Jeff's glass of water at the same time. Carefully, switching the glass between hands, she slid the top off her shoulders and maneuvered it down her body until it fell around her feet. \n\n\"That's more difficult than it looks,\" Malcolm told Devyn. \n\n\"Taking off a dress?\" \n\n\"No, balancing something without being able to see it. It takes focus.\" \n\n\"Oh, the water. Yeah, hard to tell if it's tipping until it's too late.\" \n\nIf Vivian had seen Natalie's body in a picture, she would never have guessed that it belonged to somebody in her 40s who had birthed two children. She was probably more fit than anybody else there except Devyn. Still, something about her was unmistakably motherly. She had way about her that made people feel warm and comforted. \n\nWhile she worked her dress off, Jeff went into one of the chests of toys and produced a long, very thin wooden cane. Vivian didn't recognize it, but it made Malcolm breath in sharply. \n\n\"What's that?\" Vivian asked. \n\n\"It's a rattan cane. If you've never felt one before, trust me, they sting like nothing else in the world.\" Malcolm had turned to answer Vivian, so he didn't see Devyn's ears perk up. \n\n\"Those mark well, right?\" She asked. \n\n\"Very.\" \n\nJeff ran the cane over Natalie's bare thighs. If she was afraid of what was coming, it didn't show. At his prompting, she spread her legs a little wider and simply waited for him to begin. The first stroke landed on her thigh just above the black ribbon. It was fast, the cane blurred slicing the air with an evil sounding hiss and connecting with a fleshy thwak. \n\n\"Holy shit, you weren't kidding.\" Devyn breathed. Unlike the other impact play implements they'd seen showcased tonight, just one stroke of the cane left a clear, deep red welt on Natalie's thigh. Knowing how much Devyn liked getting marked, Vivian guessed her reaction was desire rather than pity. \n\n\"You've seen videos of canes like that before, right?\" Malcolm asked. \n\n\"Yeah, but they don't do it justice!\" Devyn's eyes were glued to Natalie's thigh as Jeff struck again, about an inch higher than before. \"They're so bright red... beautiful.\" \n\nThere was no need to keep count, the tally was being written across Natalie's skin. One inch at a time up her thigh, all the way to her hip, then Jeff began again on her other side. Vivian wondered if Malcolm had been exaggerating about how painful the cane was. She'd taken enough marks herself to know those on Natalie must hurt a lot, but Natalie herself barely made a sound. She held herself still, only recoiling slightly the second after a new stripe was added. Blinded as she was, she had no warning of when the next one would be, but there wasn't an ounce of fear in her expression. \n\nShe held Jeff's glass of water with both hands. It rippled slightly, but she hadn't spilled a drop yet. \n\nOnce the fronts of both Natalie's thighs were striped from the black ribbons on up, Jeff turned her around to do the same on the backs of her legs. Again and again, the cane hissed through the air, each time creating a new stripe across her skin. Her stamina must have been draining because she was making a lot more noise now. Strangely, they didn't sound to Vivian completely like pained screams at all. If she closed her eyes and didn't know the context, she might have thought Natalie was having some kind of kinky sex rather than being tortured. There was definitely excitement mixed in there with the pain. \n\nAfter he finished her thighs, Jeff had her turn several times like a runway model. There was an artistry to the symmetry painted along her legs. Each line of pain was perfectly horizontal, evenly spaced, displaying a spectrum of reds depending how recently they'd been applied. \n\n\"First pain, now pleasure.\" Jeff teased Natalie's pussy lips apart, much more gently than he'd been with the cane. Even from our distance, it was obvious how wet she was. She moaned as he brushed over her clit, seeming to find it harder to keep herself steady now than while she was being tortured. \n\n\"She really is a masochist,\" Devyn said admiringly. \n\n\"Only with Jeff,\" said Malcolm. \"She says that with anybody else, it just hurts her.\" Somehow, that seemed like the most romantic thing in the world to Vivian. Like Jeff and Natalie were each other's perfect soulmates. They matched one another perfectly in spite of - or, indeed, because of - their extreme tastes. It made Vivian happy to get to see it. \n\n\"Get nice and close for me, dear,\" Jeff told Natalie, sounding as normal and conversational as if he'd asked her to pass the pepper over dinner. \"That's it, good girl, show everybody how much you like it.\" She lowered her hips to grind herself on his hand, the squatting motion flexing her thigh muscles and making her marks stand out even more. \"And back to pain again. Cup your right breast.\" \n\nDutifully, Natalie adjusted the water and held her breast out. More stripes appeared, making her entire breast ripple and bounce with each impact. It must have hurt. There's no way it didn't. Either Natalie had nerves of steel or she was too deep into subspace to care. She groaned and occasionally yelled, but she never backed away or made to cover herself. \n\nAfter both her boobs were red and welted, Jeff gave her more pleasure. She greedily gyrated on his hand, nearly spilling the water again, only barely keeping enough focus to keep it level. \n\n\"Are you ready to cum, dear?\" \n\n\"Yes! Please!\" \n\n\"Then you know what to do.\" Natalie turned and spread her legs, bending at the waste to present her ass lewdly to Jeff, giving him enough room to reach under her and continue stimulating her clit. \"Good girl. 10 strokes, you will cum on the last one.\" \n\nEverybody held their breath as Jeff took to his art again. Everybody counted down the strokes softly, and it filled the room like a chant. Eight... Seven... Six... Any doubt Vivian had that somebody could have an orgasm while in so much pain was quickly brushed aside. Natalie sounded like it was all she could do to hold herself back. Five... Four... Three... Natalie's legs shook, her back arched, her breath caught, and her ass tensed. Two... One! \n\n\"Cum for me, dear.\" \n\nDespite all the buildup, Natalie seemed to collapse inward on herself instead of exploding outwards. Her mouth moved silently, her legs clamped tight shut around Jeff's hand and she slowly sagged. Jeff caught her weight and helped lower her to her knees, working her insides the whole time, giving her the fullest release she could manage. Vivian could only imagine how intense it must feel. So much pain, the pleasure of the orgasm, all rolled in together. She shivered, half wanting to feel it herself and half afraid of it. \n\nFinally, Natalie's breath returned to her. \n\n\"My drink, dear?\" She turned around slowly, looking half dead with exhaustion but triumphant, and held the still full glass of water up to him. Everybody had forgotten about that. Vivian and the rest of the crowd had been too caught to remember. Everybody except Natalie herself. Even though it had all been happening to her, she kept some sliver of herself from becoming overwhelmed and stayed obedient to her Dom. \n\nThe crowd exploded in applause. \n\nJeff easily lifted Natalie and settled her onto the bed that had been behind them on the stage the entire time. He pressed the glass to the lips and gave her a long drink out of it. \n\nThey seemed to exist in their own little bubble up there. Vivian watched as Jeff pocketed the blackout contacts and lay her back. Very slowly and carefully, he spread lotion over her thighs, breasts and butt. There was the same tenderness between them that Vivian had been seeing all night, except more. Natalie seemed to care about holding Jeff's massive hands in hers much more than she cared about her trifling wounds. As she lay and he sat on the bedside tending to her, she kept pulling his hands up to nuzzle her face against them, or pulling him down to kiss him. \n\nIt was so intimate, Vivian felt like a voyeur watching them. Still, she couldn't look away. She knew to expect the lonely longing now, and she didn't fight it. It was becoming obvious that this was the norm rather than the exception. Everybody - Sam and Nicole, Jeff and Natalie, Marcus and Natasha, even Malcolm and Devyn right beside her - all had that special connection together. She was the only one who didn't. The only one who didn't deserve her Dom's affection. \n\nAfter all, sluts like her were for fucking, not falling in love with. \n\n---------- \n\nI was too busy trying to convince Malcolm to train me to be as much of a badass as Natalie to notice Vivian. She had been quietly staring at the Valmonts' aftercare session, then she wandered away towards the guest rooms. \n\nMalcolm turned to include her in our conversation, then realized she'd vanished. \"Wasn't she here a second ago?\" \n\nThen it clicked, and I sighed. 'Silly girl...' \n\nI was so horny, I could barely keep my hands off Malcolm. I so badly wanted to get back to his place and get tied down and ravaged. However, my instincts told me that if I was actually going to follow through on my desire to be a good friend for Vivian, that wouldn't be happening tonight. \n\n\"I bet she got depressed watching the aftercare and she was going to get changed and slip away. Let me go after her.\" \n\nMalcolm smiled, \"and you still say you're bad at reading people?\" \n\n\"I should have talked to her more before this! I had lots of chances.\" I sighed, \"Malcolm? Will you be mad if I keep her company tonight?\" \n\n\"Of course not. We'll still have Saturday and Sunday together. Do what you think is right.\" \n\nSeriously, we should have some kind of PSA about closing doors at parties before hooking up. I looked in the open doors of three guest rooms - getting an eyeful of two blowjobs and a spanking - before I found her in the fourth. Vivian was glumly looking in the mirror struggling to undo her borrowed corset. \n\n\"Here, let me help with that.\" She started in surprised and gave me a guilty look in the mirror. Almost like she'd been caught red handed trying to slip out without saying goodbye. I couldn't help laughing. Malcolm could tease me all he liked, but I do suck at reading people. Vivian just wore her emotions so openly it was like having a sign written across her forehead. \"How did you get this thing on, anyway?\" \n\n\"Sam helped with all the strings. I need to find her to return all this.\" \n\n\"I think they already left to go get some ice cream.\" \n\n\"Oh...\" \n\nI'd found her. Great. Now what? What was I supposed to say? The seconds dragged on awkwardly as I tried to think of something tactful. \n\n\"Devyn?\" \n\n\"Yeah?\" \n\n\"How do I make myself better?\" \n\nI bit back the first response that popped into my head. 'Tactless!' \n\nStill, I didn't have a second idea, and Malcolm did keep telling me to do what felt right. \"Vivian, I mean this in the gentlest way possible, but not everything in the world is your fault.\" \n\n\"What?\" \n\n\"You're amazing the way you are. It's okay to want things for yourself and it's not always your fault if you don't get them.\" \n\n\"But I'm the only one. Everybody else here has it figured out. Even the single people role playing together for one night. There's just one common variable on the other side. Me.\" \n\n\"That's not right, and I think you know it, deep down. You're not the only variable because there's two people in your relationship.\" Vivian looked like she was ready to cry when I said that. Maybe it was a mistake to back off that line. Maybe I should have pressed her on Paul being a complete jackass dominant. One way or another, I didn't have the heart to push her down that painful path yet. The first step was to try to give her some sense of self-worth. \n\nSo, instead, I put my hand on her shoulder and asked, \"would you like some company tonight?\" \n\nHer depressed expression vanished for a hopeful second, then bounced back on. \"I couldn't! I've already stolen one of your nights with Malcolm, I can't impose again!\" Then she muttered under her breath, \"I'm not worth it.\" ",
        "\"Why don't you let me be the judge of that. Besides, you'd be doing me the favor,\" I lied. \"You live close and Malcolm needs to go back to Brooklyn anyway. You'd save me a long trip back to New Jersey if you've got a couch I could crash on.\" \n\nI'm not sure if she bought it. She looked skeptical, but didn't call me out. \"Are you sure? I mean, you're totally welcome to stay! It's just, I'm really fine\u2014\" \n\n\"Of course I'm sure! Thanks a lot. Let me go get my clothes back on, I'll be back in a second.\" \n\nI ran out to get my stuff and to warn Malcolm that I'd used him needing to go to his place as an excuse. We made plans to get breakfast together. It still completely sucked that I'd go to sleep horny yet again, but Malcolm joked that he'd been planning to tease and deny me again anyway. 'Damn sadist!' \n\n\"Are you going to keep wearing that?\" Vivian asked about my collar as we made our way onto the street. \n\n\"Yep. I'm never taking it off.\" \n\n\"Oh. You know, you can be kind of stubborn about some things.\" She smiled slightly and it warmed my heart. \n\n\"Actually, I believe Malcolm's choice of word on the subject was Determined.\" \n\n\"It does look very pretty. Most people would probably just think it's an exotic necklace.\" \n\nThe worst of the heat of the day had faded and there was a nice breeze. It was the kind of warm summer night that made you wish the weather would stay like that all year round. The city around us was alive with people walking around like we were. We wandered through Washington Square Park and stopped to join a group of people watching a performance of A Midsummer Night's Dream. They were good, but we agreed that the ancient Greek love polygons were not nearly as interesting coming on the heels of what we'd just seen at the party. \n\n\"I think Nicole and Sam might have had the right idea. Is there anything sweet to eat between here and your place?\" \n\n\"There's an Insomnia Cookies that delivers.\" She looked at me strangely, expressing too many emotions at once for me to sort through. \"Devyn? Thank you so much.\" \n\n\"For what?\" \n\n\"Caring about me.\""
    ],
    "authorname": "Lydra",
    "tags": [
        "consensual",
        "female submissive",
        "fsub",
        "love",
        "male dominant",
        "mdom",
        "orgasm denial",
        "romance",
        "tease and denial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-04"
}