{
    "title": "WMD Ch. 04",
    "pages": [
        "(WMD = Winter Men's Dilemma; My own irreverent spin on the BBC mythology)\n\n*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells*\n\n*This story is NOT TO BE TAKEN SERIOUSLY!*\n\n* Vlad ~ \"You actually expect me to believe my father, brothers and I have the genetic capability to addict every woman we have sex with to our schlongs? That's nuts!\"\n\nMom ~ \"As opposed to thinking the color, length and girth of a phallus makes any woman lose all sense of loyalty, morality and decorum so she can become a man's sex sleeve -- whore -- bitch -- property? Yes, I do.\" *\n\n*Lastly, this story is rather flippant with the entire concept of sexual assault. Those who have read my previous tales know this is not my attitude at all. For the sake of this genre, I had to grapple with the concept of forcing a woman and 'making them love that dick'*\n\n(THE FAMILY: Father -- Nikolay 'Nik' Samsonov; Mother -- Gayle Fonteneau Samsonov; the Triplets -- Alexander 'Alex', Mikhail and Vladimir 'Vlad' [the POV character])\n\n{ALMOST RIGHT WHERE WE LEFT OFF}\n\nKaelyne was curled up on the sofa of the living room being comforted by Vicky when Mikhail and I came bounding down the stairs.\n\n\"Oh fuck,\" I muttered. I started heading their way. Mikhail looked from me to the passageway which led out back to where we had left 'our' girls, Mom an Alexander.\n\n\"Mikhail and Vlad, your Mother wants to talk to you both,\" Vicky frowned. Her best friend's pain was a spiritual stab to her heart as well.\n\nMikhail followed orders. I deviated long enough to slip over to Kaelyne and kiss the top of her head. When I arrived, the first round of the confrontation was already going on.\n\n\"Mikhail, I want you to take Kaelyne and Vicky home,\" Mom declared.\n\n\"They are Vlad's friends, not mine,\" he gallantly protested.\n\n\"Mikhail, your courage is worthy of your Father. If you want to wake up tomorrow morning with a lick of hair on your body, you will do as I say,\" Mom stared him down. Taliyah snickered. The rest of us knew Mom was dead serious.\n\n\"Fuck you! he snarled before storming into the house.\n\n\"I'll go with him,\" Taliyah tried to follow.\n\n\"You -- stay,\" Mom snarled. I had visions of me digging a Taliyah-sized hole somewhere deep inside our back-property. \n\nThank God Taliyah felt the same way. She sullenly retreated to her spot beside Brandy. Brandy looked suitably terrified ~ having experience the tip of Mom's evil iceberg. I decided Brandy needed me more than I needed to placate Mom. I settled in at Brandy's side and hugged her to me. She wrapped her arms around my waist.\n\n\"Let me make something crystal clear. If Kaelyne sheds one more tear, I will take it out on both your asses,\" Mom glared at the two girls. \"Telling her you weren't interested would have done it. You didn't need to mock her, Taliyah. Kaelyne's pain isn't what is at issue here -- me loving Kaelyne as if she was my own daughter is. You've crossed me. A rare few do it twice. No one alive has tried to do it three times.\"\n\n\"Are you telling me you expect me to sleep with that little faggot?\" Taliyah snapped. That was moronic. Before I could warn Taliyah how foolish it was, Mom was on her. There are a multitude of spots on the body which can cause you intense pain if someone hits them correctly. Mom knew them all. Taliyah fell down to the ground, screaming in pain.\n\nI added to the idiocy by trying to get between Taliyah and Mom. I went airborne, took most of the fall's momentum and turned it into a roll and came up in a fighting stance. Mom wasn't even looking my way.\n\n\"Are you going to do something equally stupid?\" she glared at Brandy. Brandy wilted. Mom bent down and returned Taliyah to a 'pain-free' status.\n\n\"Mother-fucker,\" Taliyah whimpered. My parental unit stood up and back off by two steps.\n\n\"Brandy, I am proud of you,\" she told my girlfriend. Huh?\n\n\"Oh?\" Brandy pursed her lips.\n\n\"You've made Vlad do something incredibly stupid,\" she explained to the quivering blonde. \"His actions went way beyond hormones. He likes you enough to defy me. You do see how that turned out though. Right?\"\n\nBrandy nodded vigorously. Taliyah struggled to her feet.\n\n\"Now that we have that out of the way, here is the new game plan,\" Mom put her hands on her hips imperiously. \n\n\"Bitch,\" Taliyah ground out -- then stumbled away to escape the expected attack.\n\n\"Taliyah, do you understand why I sent Mikhail away?\" Mom pierced the girl with her eyes.\n\n\"Cause he would have kicked your crazy ass?\" Taliyah replied.\n\n\"No. He would have tried to kick my crazy ass and failed -- just like Vladimir did. My boys are unerringly loyal and courageous. Unlike my kind-hearted and thoughtful Vlad, Mikhail is utterly fearless, vicious and pig-headed. I would have had to really hurt him to stop him from stopping me from hurting you. Think about that before you utter one more imbecilic word.\"\n\n\"He really likes me?\" Taliyah murmured.\n\n\"Good girl. Now before we all have to suffer through your next bout of stupidity, remember Mikhail is not here. Vlad will try because he's a decent sort and you are Brandy's BFF. I'll still crush him to get at you. Do we understand one another?\"\n\n\"You are still crazy,\" Taliyah muttered.\n\n\"I think that is the group consensus. Alexander and Vladimir, go sit on the front porch a bit,\" Mom stated her demand in a courteous tone. I screwed up my resolve. Brandy body language was pleading with me to stay.\n\n\"Prince?\" she whispered.\n\n\"Don't sweat it, ladies,\" Alexander took me by the elbow. \"Mom has no compunction about hurting you with me and Vlad around, so her sending us away has to do with the twisted way her mind works, not pain. Besides Brandy, what do you think my idiot middle brother would do if you cried out?\"\n\n\"Um ... help?\"\n\n\"Not right off the bat,\" Alexander gave her a half-smile. \"First he'd run to the armory and get a stave. He's smarter than Mikhail that way. Come on, Bro.\" I let him drag me away. Once inside ...\n\n\"You do realize we are all eighteen now, Alex. We can do what we want. Dad isn't going to let her throw us out,\" I reminded my oldest brother (by less than a minute).\n\n\"Wrong head, Brother,\" Alex chortled. \"Which one of you has the best chance of helping Kaelyne and Taliyah get along ~ you, or Mom?\"\n\nWe walked in silence to the front porch.\n\n\"Duh ... Thanks Alexander. I totally zoned on that.\"\n\n\"So what's with the 'Prince'?\" \n\n\"Ah, it turns out Brandy can be rather clever when her tonsils aren't floating in semen,\" I explained. We sat down on a swing and chatted.\n\n[MEANWHILE, ON THE BACK PORCH] \n\n\"I don't like either one of you,\" Gayle simmered. \"I KNOW my boys could do better and I hope when they go to college, they will get over whatever feelings they think they have for you two ...\" she held up her hand. \"Hold your tongue, Taliyah, before I rip it out of your fucking skull!\"\n\n\"Bitch, if I had a gun, I'd shoot you,\" Taliyah snapped -- then jumped back.\n\n\"Moron, if you had a gun, I'd take it from you, shoot you with it and place the blame on Brandy,\" Mom volleyed back.\n\n\"Please Taliyah ... Mrs. Samsonov,\" Brandy attempted to intervene. Gayle hid her smile well. Brandy Crystal Carson still had a long way to go to prove she was 'worthy' of Vlad's time ... and maybe, in a century, she'd make it far enough to satisfy Gayle's requirements. Still, baby steps were what you expected of an emotional infant.\n\n\"Brandy, you've come a good ways from the cum-covered slut who looked like her pussy and ass had been fisted that first Monday morning. Don't think you've progressed nearly far enough to be a Samsonov yet though,\" Gayle smirked.\n\n\"What?\" Brandy.\n\n\"Vlad tells you everything?\" Taliyah.\n\n\"No. Even when my Son despised Brandy, he was never intentionally that petty,\" Gayle snorted. \"Darius videoed all those sessions, or didn't you two know that?\"\n\n\"No,\" Taliyah seethed.\n\n\"Not the locker room sessions,\" Brandy's bronzed-skin drained of blood.\n\n\"I imagine you are also ignorant of Darius' Rashaan encouragement technique?\"\n\n\"Don't be making shit up,\" Taliyah's eyes narrowed. \"Besides, I've dumped him.\"\n\n\"Okay,\" Gayle 'accepted'.\n\n\"What was it?\" Brandy had less control (and was far hornier, thus less careful in her choice of words).\n\n\"Taliyah?\" Gayle looked to the Mocha vixen.\n\n\"I don't care,\" she lied.\n\n\"Every overthrown, or under-thrown pass meant one of the team went ass-to-mouth with you then ...\"\n\n\"I didn't do anal with anyone on the team,\" Taliyah shook her head negatively, thinking she'd caught Gayle in a lie.\n\n\"With other girls' asses, then they'd stick that dick in your mouth for a blowjob. That done, they made Rashaan French kiss you ... getting a tasteful of their semen and some other girl's ass ...\" Gayle let the revelation play out in the girls' minds.\n\n\"You are a vicious, lying bitch!\" Taliyah spat. She had believed it was Rashaan attempting to be romantic ... the nut-less Wonder. Worse, she should have known better.\n\n\"Oh, you believe I'm lying because you know Darius and Rashaan would never treat you the way they treated Brandy?\" Gayle sunk in the barb.\n\n\"Bastards ...\" she hissed. Brandy put her arm around Taliyah's upper body. For Brandy, Taliyah was her best friend first. What had happened between them and Darius could hopefully start to fade.\n\n\"Now that we have the ugly reality out in the open, let's look over your possibilities, girls,\" Gayle continued.\n\n\"Fuck you,\" Taliyah snarled. \"This doesn't change anything. You are still a vicious, racist, bitter bitch!\" Gayle's relaxed pose showed how little she cared for the teenager's assessment of her.\n\n\"Mrs. Samsonov, please give us a moment,\" Brandy moped. A tear made a trail down her left cheek. Brandy turned and pulled her taller BFF into a hug.\n\nGayle would have been more surprised by Brandy's act of courage had she not had more faith in the positive effect an honest, caring Man could have on a Woman's life ...\n\n~ Your Defiant Princess on your arm and your Wanton Slut in the bedroom ~\n\nGayle gave the girls three minutes, which was enough time for Taliyah's emotions to cycle back to a deep, banked hatred -- just like her own.\n\n\"Girls, you have three options over the next 9 months. \n\nYou can go back to being the 'Winner's Cup' for whomever comes out on top of the school's student power structure. Do take into account the uselessness of the new Principle, the previously shown attitudes of the Vice Principle & Coach, and everyone's preconceived notion of your worth. You have become cum dumpsters and NO ONE else at school is going to support you striving for any other distinction.\"\n\n\"Option two ... you quit the Cheer Squad, hunker down, avoid being cornered by some cock-happy bastards seeking to 'tame' you, and keep your eyes on being admitted to a college somewhere far from here.\"\n\n\"Option three ... you stick with my boys, which entails doing what I say. I will now entertain questions from you, but be aware I will never feel obliged to answer them,\" she finished.\n\n\"Or we keep your sons for ourselves,\" Taliyah fought back. \"They are 18.\"\n\n\"There are a half-dozen relatives back in Alaska who will gladly take care of Alexander, Mikhail and Vlad,\" Gayle shook her head mirthfully. \"The boys might try to defy me, but they will not defy their Father. When I let him know it was you who had Alexander beaten up -- they are on the next bus, plane, or train heading west. Test me if you like.\"\n\n\"Bitch...\"\n\n\"You have one more 'bitch' today Taliyah, then I make you pay,\" Gayle threatened. \n\n\"Replacing Darius' clique with your boys is hardly a step up,\" Taliyah looked for another angle.\n\n\"What if they don't want to be with us anymore?\" Brandy added.\n\nGayle lowered her head and rubbed her brow with her first and fore-finger.\n\n\"Look in a damn mirror some time. Better yet, look into Vlad's eyes when he's around you, you Bimbo,\" Gayle's tone derided her. \"Taliyah ... Brandy, what do you think would happen if Mikhail smacked your ass?\"\n\nBlink ... \"Wrestling, I hope,\" she gave a shy smile. Her 'Man' Vlad could beat his younger triplet in wrestling. If it was a Sambo match ... he'd still fight for her.\n\n\"Taliyah, if Vlad touched your ass and you slapped the shit out of him, what would Mikhail do?\"\n\n\"Laugh at him.\"\n\n\"Precisely! Brandy; Vlad knows you want someone to protect you. And Taliyah, you've let Mikhail know you expect to defend yourself without his interference. Their actions aren't dictated by some macho impulse -- they are doing what YOU want them to do. It is called 'respect' and my boys respect you two. If you can find another man in school who can do better by you, go for it.\" \n\n\"I don't want no 'Mama's Boy',\" Taliyah remained relentless. That was fine, Gayle liked steel.\n\n\"Taliyah,\" Gayle's voice grew a theatric chill, \"do you want Mikhail to choose between avenging Alexander and fucking you?\" \n\nTaliyah bit back a retort. \n\n\"The whole school, minus five students, left Alexander broken on the hallway floor while they went about their daily business,\" Gayle ploughed ahead.\n\n\"We had no part of that,\" Taliyah protested. \"We were with them.\"\n\n\"Rationalizing is Vlad's thing, not Mikhail's, Taliyah. Mikhail likes things simple. Do you really think Mikhail is going to 'get over that'? Answer me, damn you!\"\n\n\"No,\" Taliyah mumbled.\n\n\"What do you think Mikhail's reaction is going to be when I show him the pictures of me after I was raped by your father ... when I was fifteen?\"\n\n\"What?\" both Brandy and Taliyah gulped. This was news to Brandy.\n\n\"Yes. Raped. Your father and Uncle Leon were two of seven men -- Black Men -- who raped me. Your Grandfather, Mayor Fox, covered it up. My twin sought out his own vengeance -- he found four of them.\"\n\n\"Your brother was another racist ...\" Taliyah got out before Gayle's punch to the abdomen knocked the air out of her and toppled her to the ground.\n\n\"Take into account, Little Girl, you get to see your worthless father whenever you please, while my brother risks his very life sending his nephews presents,\" Gayle knelt by Taliyah, talking softly into her ear.\n\nAs Gayle stood, she effortlessly pulled the Black teen up with her.\n\n\"Taliyah, think about what Mikhail will fixate on when he learns your father, grandfather and uncle violated me? Picture the fire you will see in his eyes and imagine the hate he will have for everyone associated with that crime.\"\n\nTaliyah didn't want to think about the primal beast in Mikhail's breast -- the fire lurking behind his irreverent fa\u00e7ade -- aimed her way. In that instant Taliyah didn't feel physical fear. Unless provoked, he wouldn't lash out at her -- Mikhail wasn't that kind of Man. He would also never view her as anything, but an enemy, either. She'd lose him.\n\n\"Don't,\" she mumbled.\n\n\"As a mark of how much Vlad likes you, Taliyah, he hasn't informed Mikhail about your family's and my shared past.\"\n\n\"Fine,\" Taliyah lowered her head. She was a whirlwind of emotions -- rage over this presumptuous Fonteneau whore, fear of losing her tenuous relationship with her wild son and confusion on why a man she found so infuriating had ... such a hold over her heart?\n\n\"Me and Kaelyne?\" Taliyah trundled off her homophobia in order to appease Gayle.\n\n\"Ha,\" Gayle snorted. \"Perhaps. Back to your three options. Either you are with me -- as a tool to be used to strike at my enemies -- or you are out the door pursuing one of the other two.\"\n\nBrandy was a forgone conclusion. She was addicted to Vlad's dick and becoming more enamored of his personality every day as well. Taliyah had much more of her grandfather's (the town's first Black political chief and Civil Rights activist) and mother's (the current mayor) fighting spirit and ruthlessness.\n\nHad her fascination been solely with Mikhail's cock, she would have walked out ... only to come slinking back later when the ache for his meat penetrating her overcame her pride. Gayle had been in the same predicament nineteen years ago with Nikolay Samsonov, her now-husband.\n\n\"Does anyone like you?\" Taliyah frowned.\n\n\"No. People love me, or hate me, and I feel the same way about them. I'm no one's 'buddy' because if someone isn't willing to bleed for me, I'm not willing to bleed for them. I rarely compromise, so normally I irritate the feint-hearted and false-spoken.\"\n\n\"Taliyah?\" Brandy pleaded.\n\n\"Okay, Mrs. Samsonov, let's go tell Mikhail together and see what he wants to do,\" Taliyah gambled. Gayle smiled. Taliyah was trying to trick her.\n\n\"I'm good with that,\" the older woman responded with a feral grin. Taliyah had been struggling for some negotiating room and failed.\n\n\"Fine. I'll stick it out with Brandy,\" Taliyah caved-in. Brandy hugged her tightly. Gayle extended her hand for the two young women to shake -- sealing the deal. Brandy did so eagerly. Taliyah looked as if she'd rather dip her hand in liquid nitrogen, yet finally complied.\n\n\"Step one: Taliyah, give Kaelyne a single red rose tomorrow -- no explanation; no apologizes. Think of one nice thing to say about her before the end of the day. We'll see how she reacts and plan out your next move accordingly.\"\n\n\"How is Mikhail going to feel about you pimping me out to a ... lesbian?\"\n\nGayle smiled and smiled until Taliyah recalled the ground rules: Gayle wasn't required to explain herself and her orders. Taliyah consoled herself with plotting how to rape Mikhail at school the next day ... to get back at his bitchy mother -- of course.\n\n\"We'll do it,\" Brandy ended the silent impasse.\n\n\"The Cheer Squad is the beacon for your High School's BBC Slutdom. We are going to break that mold,\" Gayle continued.\n\n\"You are a top notch whore,\" Taliyah muttered. \"What do you suggest?\"\n\n\"You are going to get your teammates to fuck my boys. That will do quite nicely,\" Gayle quipped. \"It has worked on you two.\"\n\n\"You want us to share Vlad ... our guys?\" Brandy balked.\n\n\"Yes.\"\n\n\"Because you think we are sluts?\" Taliyah darkened angrily.\n\n\"You are sluts, Taliyah. I'll paint you a simple picture,\" she forestalled Taliyah's next outburst. \"From the footage of the first Victory Party ...\"\n\n\"You filmed that too?\" Taliyah.\n\n\"Didn't Brandy tell you?\"\n\nTaliyah looked to a shamed-faced Brandy.\n\n\"The night of the Victory Party when Darius was supposed to beat up Vlad by the lake, we rearranged the plan. We took extensive footage of the whole damn orgy.\"\n\n\"Masturbate to it?\" Taliyah got out before Gayle slapped her so hard she fell over.\n\n\"Yes, while using a vibrator with a clit attachment and vibrating anal beads,\" Gayle snarled. \"Are you going to let me continue?\" Taliyah got back up ~ mumbling something. \"What was that?\" Taliyah kept silent.\n\n\"From the footage I know you are comfortable being double-stuffed. From the security cameras at the lodge, I know you gave your anal virginity to Mikhail.\"\n\nTaliyah's sense of anger and embarrassment played across her face.\n\n\"That's some dick, isn't it?\"\n\n\"That's your son,\" Brandy gulped.\n\n\"I'm well aware of his genetics. If I want some of that, I go to their Da. Back to the lesson: Taliyah, you took dick orally and vaginally while Brandy went air-tight on a regular basis.\" She let the statement hang there. \"Brandy, do you like getting three cocks at once?\"\n\n\"No,\" she whispered.\n\n\"Liar.\"\n\n\"I ... won't cheat on Vlad -- ever.\"\n\n\"Liar.\"\n\n\"No! I love Vlad.\"\n\n\"That won't stop you from cheating.\"\n\n\"I ...\" Brandy sniffled.\n\n\"B ... Samsonov,\" Taliyah rallied to Brandy.\n\n\"Brandy, admit it. You like as many cocks pounding you as possible,\" Gayle pursued Brandy relentlessly. \"Admit it.\"\n\n\"Yes,\" she sobbed, \"but I'd never cheat on Vlad. I swear.\"\n\n\"Good to know. Now Brandy, you've seen Mikhail in action ... what do you think of him taking you up the ass while Vlad's fucking your pussy would feel like?\"",
        "The two girls shuddered at the idea's erotic stimulation.\n\n\"Taliyah, by your reaction, I am going to assume you and Mikhail have progressed to straight intercourse,\" Gayle smirked.\n\n\"He didn't ...\" Taliyah was going to say 'didn't tell you?' then realized Mikhail wasn't the kind to brag because he never took stock in the accolades, or condemnation of others, or felt any desire to explain himself, for that matter. His intense independence was both highly irritating and ... enticing.\n\n\"Can you imagine the discussion between my youngest concerning you and your sexual experiences? Let's just say whatever I asked would get the same answer ~ none of your damn business, Mom.\" \n\nThat visual brought a vicious, barely-concealed twist to Taliyah's lips. Nope, HER Mikhail would tell his Mom to 'fuck off' if the old bitch persisted too.\n\n\"Are you going to insult my intelligence, like your BFF, and tell me you aren't intrigued by the idea of two of my boys having a go at you?\" Gayle stared down Taliyah. The Black teen looked away. Damn, her pussy was getting wet and 'needy'.\n\n\"I wouldn't ask Vlad to do that for me,\" Brandy verbally parried for her BFF.\n\n\"I want you to,\" Gayle winked at her.\n\n\"Huh?\" from both girls.\n\n\"Girls, my boys have been with precisely two women in their lives -- you, Brandy, are Vlad's first girlfriend and the only other woman he penetrated was a professional sex therapist who broke him in over a long weekend a few months ago.\"\n\n\"The same goes for you, Taliyah -- different therapist / same 4-day weekend.\"\n\n\"Mikhail was a virgin!\" Taliyah gawked. For Brandy, it was the confirmation of the information Vlad had told her earlier ... which she hadn't really believed ... because she was in the bad habit of lying to him at the time ... For Taliyah, it meant Vlad hadn't told his mother about banging Riley either, which might prove useful if brought up carefully.\n\n\"Technically, no. Relationship-wise -- yes,\" Gayle nodded. \"I didn't want my sons fumbling around with their zippers in some dark room with some half-drunk, horny co-ed only to prematurely ejaculate their first time out. All three have had extensive on-line course work and the one bout of 'lab practice'.\"\n\n\"You are one freaky slut,\" Taliyah blinked. Brandy nodded.\n\n\"Considering my first, violent sexual experience and then the years spent trying to bury the humiliation, fear and pain in doing everything except letting myself heal and seeing sex as a fun, pleasurable, joyous and loving exercise in sharing and passion -- yes, I'm a freaky slut. I've earned the distinction and am proud of it.\"\n\n\"Senior Deputy Sheriff Samsonov is a hell of a guy,\" Brandy mused.\n\n\"Him? Noooo ... not at first. Before me, the man had the sexual techniques of a cloistered monk. His dick on the other hand -- whoa Nelly!\" All three women nodded. \"I had to train him over the years and he's pretty stubborn with these peculiar ideas about propriety and what locations are acceptable for intercourse.\"\n\n\"Huh?\" That was Brandy.\n\n\"In my opinion, if you can escape law enforcement it isn't really a crime.\"\n\n\"What?\" Taliyah.\n\nSigh ... \"is there a place you wouldn't attempt to have sex?\" Gayle looked them over. The two teens exchanged looks.\n\n\"Where is the weirdest place you've had sex?\" Brandy asked the senior sex fiend.\n\n\"It is a toss-up between fucking while parachuting and having two orgasms in the Seattle Space Needle.\" The girls looked for the joke. \"Bitches, I don't mind you being centerpieces at a gang bang for the entire football team because of some sort of archaic moral hang-up. I'm glad my boys picked a pair of experienced sluts -- I am.\"\n\nTaliyah's fist clenched. Brandy took a different approach.\n\n\"So Vlad really doesn't care that I'm ... more experienced?\" Aka ~ nowhere close to virginal.\n\n\"No -- not in the least. I don't like the fact you two let yourself be used as sex slaves by fuckers you know don't respect you,\" Gayle schooled them.\n\n\"So you REALLY don't mind me hitting Mik?\" Taliyah mentally regrouped.\n\n\"Not at all. Some Men need a strong spinal realignment from time to time and don't call him 'Mik'. He finds it insulting and not in a playful way.\"\n\n\"Do you hit ... Mr. Samsonov?\"\n\n\"No. The man is immune to negative physical reinforcement. Lord knows, I've tried. With their Da, it pays to be simple and direct. I grab his dick and say 'Here! Now!' and get down to business.\"\n\nBoth girls were aghast at both the visual and Gayle's frank honesty.\n\n\"And he puts up with that?\" Taliyah grunted. Senior Deputy Samsonov was a huge man and could have tossed Mrs. Samsonov around one-handed, or so she had believed. He'd never came across like the pussy-whipped type.\n\n\"He's my partner, Taliyah,\" Gayle kept 'explaining'. \"He knows I'm a constantly horny, little slut whose kitty needs petting and I respect his rarely doing anything else I want him to do ... like getting my name tattooed on his cock, starting a bar brawl for the shits and giggles, celebrating National Nude Day, or going skinny-dipping in your pool,\" aimed at Brandy.\n\n\"Have you two had sex in my house?\" Brandy choked.\n\n\"Twice,\" Gayle recalled fondly. \"Once in the kitchen, bent over the center island -- a trifecta -- and once in your Daddy's bedroom. I hoped he enjoyed the show on the playback.\"\n\n\"She really is crazy,\" Taliyah looked to Brandy.\n\n\"That I am,\" Gayle gleefully agreed. \"Back to the program. Brandy, tomorrow morning before Homeroom, I want you to 'suggest' to Vlad you want double-penetration. He'll ask you if it is my idea, you'll tell him 'no' and he'll believe you are lying to him. He'll go along with it anyway to make sure I don't get angry with you.\"\n\n\"Will you?\" Brandy meeped. \"Will he?\"\n\n\"No and no. Your sensuality is pretty physical, Brandy. You'll learn to be a lying, manipulative whore later.\"\n\n\"You want me to lie to Vlad? He'll be furious with me when he finds out!\"\n\n\"No, he'll be angry with me for making you lie to him,\" Gayle shook her head. \"Vlad's clever that way.\"\n\n\"But ... you want us to lie to them?\" Taliyah didn't believe her.\n\n\"Taliyah, any man who believes everything a woman tells him is an idiot. My boys aren't idiots, just inexperienced and hormonal.\"\n\n\"So you want us to lie to them,\" Taliyah confirmed.\n\n\"I want you two to use your fucking brains along with those smoking hot bodies -- that is what I want,\" Gayle clarified. \"Tomorrow, arrange for the Cheer Squad to meet in the Music Room at the start of 4th period. It just so happens, the Music Room is unoccupied during the 3rd period as well -- here is the key,\" she handed Brandy a key.\n\n\"You have a key to the Music Room?\" Taliyah muttered.\n\n\"No. I have a Master Key to the school. I took it off that fat bastard former-Principal after he attempted to rape me,\" she confessed blithely. \"I made some copies for contingencies such as this.\"\n\n\"Now Brandy; you, Vlad and Mikhail are going to skip 3rd period, sneak off to the Music Room and ... enjoy yourselves. Take your time. Turn it into one huge seduction. Use that body to make them lose all track of time.\"\n\n\"Where am I going to be?\" Taliyah frowned ... HER Man was going to be fucking Brandy, damn it! Her aching possessiveness was new and raw.\n\n\"You make sure you are the first one to the room at the bell between the 3rd and 4th period. Gather up the girls and sneak them into the room with your key,\" Gayle handed Taliyah another key.\n\n\"Won't the period bell let them know something's up?\" Taliyah wondered.\n\n\"What are they going to do? Rip their dicks out of Brandy?\"\n\n\"Oh no ...\" Brandy gasped and shook her head. She didn't like that idea at all.\n\n\"No. Brandy will tell them the Music Room is vacant for the 4th period as well ... so, in theory, they could keep going for another five, or ten minutes,\" Gayle said.\n\n\"And the other eleven cheerleaders are going to walk into the room, see Brandy, Vlad and Mikhail ...\"\n\n\"Perhaps less than eleven, but yes ... rushing hungrily to join in ...\" Gayle interrupted.\n\n\"Oh ...\" Taliyah blinked. \"They are going to see the three of us and fall magically in love with them ... oh.\"\n\n\"Kind of like what happened to you,\" Gayle smirked to Taliyah.\n\n\"Wait! Did you have Mikhail and Vlad -- or just Mikhail, do that to me on purpose ... at the lodge?\" Taliyah rumbled angrily.\n\n\"No. What I needed to know was written all over Brandy's face their first Saturday together. My boy 'fixed' her something good. You and Mikhail keeping your hands off one another wasn't even a possibility -- he was horny, just like you.\"\n\n\"I swear, if that boy had set me up,\" Taliyah growled.\n\n\"I suggest scratching and biting to remind him you are unhappy with him,\" Gayle provided unlooked for advice and insight. \"If that doesn't work, try hot candle wax.\" The two girls, once again, gawked at Gayle. \"Or you can pout, whine and tell him he is a big bully,\" she spoke mockingly.\n\nTaliyah glared.\n\n\"Taliyah, you both like rough sex -- I am suggesting you keep going with what works,\" Gayle chuckled. \"Brandy, you keep up the pouting ~ a little less whiney ~ your 'pouty' pisses him off and makes him want to punish you with some hard fucking.\"\n\nPause.\n\n\"Oh,\" Brandy grinned. Pouting = primal sex. CHECK! Taliyah play-punched her, so Brandy pouted at them both.\n\n\"That'll do,\" Gayle approved.\n\n\"What do we do if Vlad and Mikhail decide they like one of the other girls more?\" Brandy revisited her panic.\n\n\"Fight for them,\" Gayle sighed in exasperation. \"Just like you two SHOULD be worthy of fighting over, you should be prepared to fight for their affections as well. I don't mean debasing yourselves. I mean reminding them you are the ones who will make them happiest, inside and outside of the sexual arena.\"\n\n\"If Mikhail's gaze strays too long, I'll nut him,\" Taliyah declared.\n\n\"I suggest a Charlie Horse on the off chance you surprise him. Do you really want to put that nut-sack out of commission?\" Gayle snorted.\n\n\"Ah, good point,\" Taliyah nodded ... then, \"How do you do a good Charlie Horse?\"\n\nIt dawned on both girls, like a flash of lightning across a clear night sky, they had been suborned to Gayle Fonteneau Samsonov's agenda ... to the point where they were asking the older woman -- the hated, feared enemy-bitch -- for practical advice. The World had turned upside down. \n\n[...]\n\nFor me and Mikhail it meant no sex without being privileged to know why we were being punished. Dad came home with our young English teacher, Ms. Blanchard, only to have to drive Brandy and Taliyah back to school to pick up Taliyah's car ... so she could drive Brandy home, not me.\n\nAlexander didn't have sex either (as far as I could tell), yet was gifted with an attentive Ms. Andrea Blanchard who 'appreciated' his gallant nature. Stunningly, Alexander's infirmity reappeared and Ms. Blanchard felt obliged to dote on him in a confusing flirtatious-mothering style. It took me a bit to figure out there was a fearful nervousness behind her actions as well.\n\nThe situation was exacerbated by Mom deciding to get naked ... ugh ... just as everyone else was clearing the table.\n\n\"Nik,\" Mom purred.\n\n\"Huh?\" from Dad.\n\n\"Here -- now!\"\n\n\"Huh?\"\n\n\"Sex.\"\n\n\"We have company, Gayle.\"\n\n\"And?\"\n\n\"Quick!\" I jumped up. \"Everyone grab a plate and run for it.\" \n\nIsabo hurried the children from the room while the rest of us stacked up the plates and serving trays as rapidly as possible before making our own exits. Andrea was flabbergasted. To add to her surreal feelings, as soon as we made our escape, the rest of the house life returned to normalcy. Even Bebe, who had been initially (in her case -- weeks ago) freaked out by Mom's eccentric sexual behavior, appeared amused. I left it to Alexander to help Andrea adjust.\n\n\"Mom's ... eccentric ... erratic ... and free spirited,\" he shrugged.\n\n\"So, this happens -- ah -- often?\" she whispered. No one else was whispering, but we understood the impulse.\n\n\"Two, or three, times a week,\" Alexander admitted.\n\n\"... a week?\" Andrea gulped.\n\n\"Oh yeah,\" smirked Mikhail. \"Don't worry. We understand Mom is beyond unusual. You won't see anyone else doing that ... around here.\"\n\n\"Okay ...\" she hesitated. Ms. Blanchard caught his pause.\n\n\"What my brother is referring to is an earlier, unfortunate episode up at the hunting lodge,\" I punched Mikhail as I explained. He chuckled.\n\nBy the look on Ms. Blanchard's face, she was unsure if she wanted further clarification. Alexander took a slightly defensive posture hovering close by. Bebe, normally so silent around us boys, miraculously came to her rescue.\n\n\"Andrea -- Mrs. Samsonov is a wonderful woman. She's also off her rocker and everyone in the house knows it. What is important is her true affection for those she holds close is genuine, her dedication is fierce in all she does and her husband and sons carry that intense devotion into their own friendships.\"\n\n\"Thank you, Bebe,\" I nodded. \"As an outsider looking in ... well, I couldn't have possibly said it better myself ... being on the inside.\"\n\nAndrea nodded as well. After all, Mom's insanity translated over to a bloodily beaten, abusive former Principle, five plus beaten students who had harassed her, a school escort, new locks on all her windows and doors, and a completely unsolicited whole house-cleaning.\n\nA feminine feline purr rumbled from the dining room. The five of us exchanged awkward looks.\n\n\"Ms. Blanchard, have you seen the stables?\" I intervened. Her eyes flickered to me.\n\n\"No.\"\n\n\"Great.\"\n\nMom's moan faded into Dad's growl. While my Pa was generally oblivious on the uptake and slow out of the starting gate, he was the Hammer of the Gods once he got going ~ 1 hour minimum. Considering we three were most likely going to grow up to be similar in stamina to him ... we had high hopes for our long term sexual futures.\n\n\"Alexander, why don't you show Ms. Blanchard the stables. Bebe, why don't you make yourself and Ms. Blanchard something to drink with a kick to it while Mikhail gets himself and Alexander something legit to drink,\" I took command.\n\n\"Why am I involved in any of this?\" Mikhail scoffed.\n\n\"I have to do the dishes because I was elsewhere ...\" I reminded him.\n\n\"Oh yeah,\" Mikhail snorted. Off he went. Bebe gave me a tiny smile before turning and heading for the library and its bar.\n\n\"Ms. Blanchard?\" Alexander offered to direct the educator outside via another, 'safer' route.\n\n\"Oh ... maybe I should go?\" she hedged.\n\n\"Aaaaahhhh ...\" Mom.\n\n\"Your purse is ...?\" Alexander asked. We knew the answer. It was in the hallway ... right outside the entrance to the dining room. It would be offsetting, or so it might appear. In actuality, my brothers and I had snuck thru the 'danger zone' many times before.\n\n\"Let's go see the stables,\" Andrea redirected Alexander. I had a kitchen to clean up, so I missed the detailed tour of the stables as well as Ms. Blanchard's decision to spend the night -- again.\n\n{TUESDAY}\n\nTo maintain the illusion of Ms. Blanchard not spending time with Alexander (even though there was nothing sexual going on), we triplets were sitting in her gravel driveway while she ran inside to change and got a few things. 'A few things' meant a shot of vodka. She'd take a breath mint afterwards, but come on now; we were from Russian stock and vodka was our national beverage. It still made Alexander nervous.\n\nMom had taken a different tactic in dealing with Ms. Blanchard's alcoholism. After she and Consuela cleaned up the place, Mom had come back with vodka bottles big and small and hidden them all over her small home -- a shot glass with each big bottle. She'd left sticky notes to let her know where each bottle was hidden. I imagined the sticky notes were gone now, yet ...\n\nThe psychology was a shot glass would mean less alcohol per desperate desire to bury her pain and misery. The 'game' would allow Andrea to indulge while not turning her domicile into a drunkard's den. In theory, she could safely have company over now. Lastly, if Ms. Blanchard got too drunk, she couldn't remember where the bottles were hidden, or so the reasoning went.\n\nAt school, Alexander (with our help) would diminish the root cause of her anguish -- the sexual blackmail her students inflicted on her. At 'home', Mom and Bebe were befriending Andrea Blanchard -- giving her female friends to connect with outside of the school's still poisonous BBC atmosphere.\n\nI was ruminating over that when ...\n\n\"Do you really believe Mom's bullshit about 'magic dicks'?\" Mikhail asked me out of the blue. Alexander was out of the Mustang, sitting on Ms. Blanchard's stoop. Today, Mikhail had ridden his motorcycle over, so I had the car momentarily to myself. I hesitated.\n\n\"Fuck,\" he groaned. In our triplet group, I was the 'clever' one. We didn't resent our designations ~ Alexander -- kind, Vlad -- clever, and Mikhail -- violent ~ because it allowed us leeway in our actions. See, Mikhail could react physically to problems because he knew if he was doing something exceedingly stupid, I'd stop him.\n\nIf he was being 'too' brutal, Alexander would reign him in. Likewise, if Mikhail's gut instinct was to lash out, we respected it. Sometimes instinct trumped reason. If Alexander was being too sappy, we'd let him know. If I was over-thinking something, either brother could step in. By the time we hit our mid-teens, we couldn't imagine any other way of living.\n\nBy our 18th birthdays we figured we'd spend the rest of our live together -- we were an awesome trio and rightly proud of our co-dependence. Even if we ended up on the run with Uncle Theo, we'd all go down together. It was how we faced the family and our world. The blood-kin Samsonov's weren't the easiest people to deal with. We had Mom to thank for us not quite fitting in.\n\nWe loved and admired Dad and his family. Mom's upbringing had tainted our way of thinking though. Time and again, Mom skirted, bent, or bastardized the 'ordinary' way of approaching life's pitfalls and pleasures. We three would never truly be 'Samsonovs'. I think Dad knew that as well. The one time an older cousin slipped us a catalog on the best Criminal Justice College programs in Alaska ... Dad frowned. The man quietly withdrew his 'suggestion'.\n\nIn a way, it was a blessing to the clan. Thanks to Mom, we were also gifted with the ability to navigate the machinations of the Samsonov brides and grooms -- those folks who married into our lineage. Since they were all somewhat nutty, our ability to separate them when the lunacy set in was appreciated. That way, the rest of them didn't have to become overly confrontational ... which was the way the blood-Samsonovs liked it.\n\nBeing the clever one, I also clued into Mikhail's subliminal anger. He didn't want to cheat to get Taliyah's affections. He might even start trying not to be a jackass around her because of it -- making them both miserable.\n\n\"Mikhail, you had her on the kitchen counter and backing that ass up against you in the recliner before any 'magic' kicked in. She likes you for reasons which defy even 'magic dicks',\" I punched him in the arm.\n\n\"Thanks,\" he nodded then hit me back. \"So, what's next?\"\n\n\"Gang-bang.\"\n\n\"You really think we are going to pull it off?\"\n\n\"Yeah. Mom sketched out the general plan to me a while ago,\" I nodded.\n\n\"Cool. I've wanted to stick my cock down Alondra Lamb's throat ever since the first time I saw her lips part,\" Mikhail rubbed his hands together.\n\n\"Taliyah is going to whoop up on you if she hears you talk like that,\" I cautioned him.\n\n\"Yeah,\" he grinned like the Heath Leger's Joker. \"Cool, ain't it?\"\n\n\"Being slapped by a girl?\"\n\n\"Nah,\" he cavalierly dismissed any misconceptions. \"Making her angry with me. Then she gets this look in her eyes like she's going to own me ... it is a huge fucking turn on.\"",
        "\"Mom would be so proud,\" I muttered.\n\n\"Then I'm going to nail Jewel Lafontant\u00e9,\" Mikhail's eyes shown with relish.\n\n\"She's not on the Cheer Squad,\" I pointed out.\n\n\"Yeah, but she's sexy, smart and thinks she a 'top' bitch,\" he chuckled. \n\n\"Isn't she dating somebody?\"\n\n\"So? I only want to borrow her -- take her out for a spin,\" he laughed. He was a jackass and ambitious and ...\n\n\"Mikhail, both those girls are Black. Do you have a thing for Black chicks?\"\n\n\"I like 'em dark,\" he mused. \"Hadn't really thought about it as a preference, but you're right. My Top Ten 'Most Fuckable List is filled with Ladies of Color. I guess that means you get the blondes and Alexander gets the red-heads and brunettes.\"\n\n\"Top Ten List? You're a pig,\" I chided him.\n\n\"Grunt, grunt, oink.\"\n\nTo put things in perspective, Alondra Lamb was a medium height, tawny skin Black lass with straight, black hair past her shoulders and a killer body with decent tits, perfect for her athletic body type, and a divine ass.\n\nShe was also ... to put it politely -- mentally-underwhelming. Beyond her exemplary looks, she was an above-average gymnast and on most days capable of tying her own shoes -- the ones with the Velcro straps. Her hazel eyes were always wide open and her lips pursed in an 'o' unless she was blathering on about something inane and off-topic, or just giggling for no understandable reason.\n\nShe found simple things amusing (kind of adorable) and didn't 'date' a member of the football team ... she barely could remember their names and normally got passed around like a living onahole. I felt sorry for her. Usually, she hung out with Betty Jo Starling (one of the team's other two Blondes) who shared her mentally-endearing qualities. The rest of the squad treated those two rather poorly.\n\nIn contrast, Jewel Lafontant\u00e9 was from a new (to Kingston) nouveau riche Black Family. Her Dad worked for the Government [rumors abounded] years ago before setting out and founding his own IT company here in Arkansas. He and his Choctaw wife had retired here in Kingston a few years back. They bought a nice spread and became pillars of the community. Jewel was a late child. The rest of her brothers and sisters were grown, with families of their own. So she was effectively an Only Child, doted on by her aged parents.\n\nJewel was also one of the smartest kids in school, one of the best members of the local studio's Dance troupe and possessed a crippling wit. At 5' 11\", she was noticed and her curvaceous and sporty build was widely admired, although when her dark eyes danced with amusement at the suffering her 'diversions' caused, the timid backed away. Her preference for a different hairstyle, or two, every week kept the local hair stylists in business.\n\nShe was bright, sassy and vicious with her own little group of Black women called the ZPP (Zulu Princess Posse, i.e. ~ 6 rich Black girls and their one token rich White girl). They only dated 'rich' Black guys, yet consistently cheated with impoverished, or medium-income, White underclassmen. They toyed with the boys and finally let their official 'boyfriends' know of the White boy's indiscretions. If you somehow resisted their advances, they lied about what happened instead. Either way, beatings always followed.\n\nDuring Darius' reign, Jewel had kept a low profile from 7:15 to 2:15 pm and hadn't participated in the school's sports religion. No; she'd stayed safely away doing stuff with the other rich kids on the evenings and weekends. Darius must have decided her dad, while old, was an uncertain enough quantity to not screw around with his youngest child.\n\n[BRIEF SEGWAY]\n\nBeyond my understanding at the time, Jewel also represented another fabric of Kingston/Davis society -- those from the post-divide i.e. higher-income families from out-of-State who moved in after 2000 CE [Common Era], both Black and White, who weren't invested in the bitter interracial struggle of the 1970's and took the status quo at face value.\n\nThey'd moved here when Arkansas State put a satellite campus in down the road and the natural recreation industry gained a regional recognition -- sports-fishing, hunting and hiking. ASU-Kingston was a Medical Technical School which taught, as you might guess, various programs for technicians in the medical field as well as nursing. Not only did the graduates not normally go on to top tier careers, ASU-K wasn't a research university, so the teaching staff, while well-to-do in this rural dystopia, weren't filthy rich either.\n\nASU-K had a small campus with a faculty and student population under 2,000 and was, like the White Middle-class enclave of Sunshine Terrace, its own little microcosm in Davis County. Yep; ASU-K had its own Campus Police Force while Sunshine Terrace had a contracted private security service.\n\nAnyway, as Kingston prospered and the Middle Class Whites fled to their own segregated hamlet, these new Blacks moved into Kingston. Likewise, more 'country' Blacks moved in from Davis County as well, further segregating the races. Forty years after Taliyah's grandfather was first elected mayor, Kingston had tripled in size (2,100 to 6,400) while Davis County as a whole was roughly 60% larger (13,500 to 21,700), thus the Town being 'Black' while the County was 'White'.\n\nInside, the town's Black community was another divide and it was best expressed in their 'womenfolk' and what was expected of them. Dominique, for all her power and influence, basically worried about her daughter dating the 'popular' Black guy because this was BBC country and women defined their positions by the masculine auras around them.\n\nIn contrast, Jewel's mother didn't worry over-much about who Jewel dated, because Jewel WAS going to college (somewhere else). High school and high school boys were just stepping stones. BBC was still out there, but 'the Modern Black Woman' had developed a host of weaponry of their own. To the outside world, such a distinction made Jewel and her Mamma feminists.\n\nLater on Jewel was to qualify that for us -- she was a Feminist with a capital 'F'. Whereas Taliyah wanted to own Mikhail's body and soul because he challenged and completed her, Jewel wanted to own us -- period -- all three of us Samsonov boys. \n\nWhy? \n\nExcuses were for people who needed to explain themselves to their fellow losers. Winners like Jewel 'achieved' and took what rewards they wished.\n\nApparently seeking Equal Rights was a hallmark of the unambitious, being 'just as a good as a man' was settling for less and Racial Equality implied there might be something a White Person could do that a Woman of Color couldn't do better ... according to her doctrine. Had they (Jewel, her mom and our Mom) not all been Class-A Bitches, they would have gotten along famously.\n\nTo be fair, had Mikhail not gone gunning for her, she would have most likely left us alone ... but he did. My youngest brother is an asshole at times, as well as relentless, and after so many years having Mom controlling our social lives, he now was sexually 'off his leash'.\n\n[RESUME]\n\n\"How about we just stick with the Cheer Squad for the rest of the week,\" I tried to divert him. \"Perhaps you might find ten other women enough for you.\"\n\n\"Nope,\" Mikhail shook his head and laughed.\n\n\"How about Taliyah's feelings?\" I launched as a 'Hail Mary'.\n\n\"No,\" he kept shaking his head. \"I'm not boyfriend material, Vlad. Sex is too much fun. I really like Taliyah, but ... no. No promises, no lies and no illusions. There is going to be no ring on my finger, or through my nose. I'll hold her hand, and hold her if she's weeping, but I'm not going to mistake sex for friendship, or vice versa. I'm 18, damn it! I want to roam.\"\n\nThe rest of the conversation was truncated by Ms. Blanchard's appearance. Mikhail returned to his motorcycle, Alexander got into the Mustang and she got into her battered, green 1997 Toyota Camry. Off we went. Close to the main entrance of the main building, most of the Cheer Squad was waiting for us. They were dressed in 'regular' clothes; we knew them by their faces.\n\nAs soon as we rolled up, Rashaan Quinterre and a few of the football team members made an appearance. Taliyah frowned. Her frown only deepened when another cheerleader -- this one White, Randi Leigh Upshaw, went into his arms. He did his best to look triumphant. Randi Leigh certainly looked pleased with herself.\n\n\"Coach is making Rashaan the new Team Captain,\" she informed the crowd.\n\n\"Ha!\" Mikhail laughed at the couple. \"Anyone who thinks Rashaan Quinterre is even half the man Darius was, raise your hands.\" His mockery was eviscerating. Worse, it took several seconds for several of Rashaan's teammates to raise their hands. \"You are only Captain because your Daddy is Police Chief, not because anyone thinks you can replace Darius, you loser.\"\n\n\"I'm going to kick your teeth in, Cracker,\" Rashaan seethed. He had six other footballers versus Mikhail and me. How the Cheer Squad would break down was an unknown. Alexander had already deviated for the Teacher's Parking Lot. There were maybe a periphery of forty other students at that moment plus ...\n\n\"Boys,\" softly drawled a voice of an adult I hadn't seen before. He was a BIG (as in muscular) White guy with a 'five o'clock' shadow at seven in the morning, unkempt, dark-russet hair, darting, soulless brown eyes and a weathered, sun-creased complexion.\n\nOf more critical importance he had my Samsonov Law Dog senses tingling at first sight ~ he was a human predator. His easy-going mannerisms were deceptive and his leadership skills were exhibited by the aura of dominion he seemed to project over the eight rednecks he had accompanying him.\n\n\"Buck!\" Misty Dawn Sizemore burst forth from the Cheer Squad and ran up to the lead hillbilly. He wrapped her up in a bear hug while keeping his eyes on the rest of us. \"I didn't think you were coming back.\"\n\n\"The new nigger Principle made a deal with my wetback Parole Officer. I graduate and they cut the last three and a half years off my parole,\" he replied nonchalantly.\n\n'Nigger' didn't go over well at all. It was telling to me that it took Rashaan several seconds to step up into his new leadership role. 'Wetback' on the other hand was just ...\n\n\"Buck, watch your fucking mouth before you get your teeth kicked in,\" Rashaan tried to sound brave, but wasn't very convincing. Buck looked him up and down, then chortled.\n\n\"Rashaan, ya ain't no Darius, NIGGER,\" he sneered. \"Fuck with me and I'll gut you like the sweaty little piglet you are.\" He emphasized his point by casually pushing Rashaan back a step. The light of Justice flared up against the forces of Intolerance and Intimidation.\n\n\"Taliyah, who is this latest knuckle-dragger?\" Mikhail grinned at Buck.\n\n\"Your bad attitude makes you Mikhail,\" Buck responded first, grinning. He'd already scouted us out -- which made him even more dangerous. \"That makes you ...,\" nodding to me and since I was closer, he moved toward me for the handshake (he tried to break my phalanges and got nowhere), \"... Vlad cause your brother Alex went hobbling off already. I'm Chester Ray Tooney, but everyone calls me Buck.\" \n\n\"Hi Buck, I'm Vladimir Samsonov.\"\n\n\"So, you are the guy who made Brandy's ass 'All Access',\" he leered. He hadn't let go of my hand. He was about to regret that.\n\n\"Oh, so it is going to be like that then. Buck, I'll give you the same options I gave Darius on Day One. Let's settle this Man-to-Man. I'm challenging you to a duel,\" I hadn't let go of his hand yet either.\n\n\"A duel?\" he muttered as he pushed Misty Dawn away.\n\n\"That's a fight between two men with some semblance of rules.\"\n\n\"Like an MMA bout?\" he studied me.\n\n\"Sure. You dropped the insult. I issued the challenge. Now you get to pick the weapons, or lack thereof. I then pick the time and location,\" I explained.\n\n\"Do this a lot?\"\n\n\"You'll be the first.\"\n\n\"You are really pissed over me calling Brandy a slut? Everyone knows she was Darius' wwwhhhhrrrrrgg,\" he grumbled. He'd just lost the hand-grinding war. His guys were tensing up even as I was grinding his knuckles together in my grip.\n\n\"Don't Vlad,\" Taliyah spoke up. \"Back in the day, Buck was Darius' brother Cyrus's bitch. Holding his hand might make him feel lonely.\" She then taunted Buck by adding, \"Missing Cyrus much while he's in prison?\" Buck took the opportunity to sucker-punch me. To avoid the blow, I'd have had to release his hand. Instead, I took the newly proffered arm, channeled his momentum into a hip-toss and planted him on the ground.\n\nI had his wrist twisted painfully, his arm locked up and my foot was on his throat. Buck was on his back on the asphalt with a furious expression on his face.\n\n\"Motherfucker,\" the closest redneck made ready to rush me.\n\n\"Take that step and I'll break his arm,\" I informed them both angrily. \"Buck, I'd appreciate it if you would apologize to Brandy now.\"\n\n\"Get off me,\" Buck snarled. \"I'll fucking kill you.\"\n\n\"Vlad,\" Misty Dawn hesitantly reached for me.\n\n\"Vlad, let him up. He's not worth it,\" Brandy intervened. When it was clear she was the one I was listening to, I backed off. I even offered Buck a hand up. Oddly, he took it ... without the expected sneak attack.\n\n\"Duel, huh?\" Buck scowled.\n\n\"Yeah.\" \n\n\"I'll think about it.\"\n\n\"I'm not hard to find,\" I stepped aside as he and his group forced their way forward. His departure left Rashaan and his crew staring at me, Mikhail and the Cheer Squad once more.\n\n\"Don't worry, Misty Dawn. I wouldn't have let Vlad hurt your cousin much,\" Brandy roped in her fellow cheerleader. Brandy shot me a dazzling smile in the process.\n\n\"Thanks, Vlad,\" Misty smiled my way as well.\n\nWhat was going on? Well Brandy and Taliyah's position as leaders of the Cheer Squad was endangered. Misty Dawn was a Brandy/Taliyah ally, so 'me' being nice to her was apparently good for my gal's prestige. I'd accidently done right. As a side effect, I'd stolen an opportunity from Rashaan to show real masculine leadership in front of his teammates and his new lady -- Randi Leigh.\n\nBizarrely, it was the White Buck brandishing a 'Thug' mystique which had intimidated the law-abiding Black Rashaan, thus making him look bad to his peers. Ugh. Taliyah rounded up the cheerleaders, Mikhail touched base with Alexander to make sure he'd escorted Ms. Blanchard to class okay and then we made our way to Homeroom.\n\nOutside of Mikhail's room, Brandy pulled him and me aside, telling Taliyah we'd catch up in a few seconds. That is when she dropped 'The Plan' on us.\n\n\"Vlad ... Mikhail, what you did was very brave,\" she pretended to be demur with her eyes at the same time she shifted her cleavage to the best vantage point and rubbing her blue jean-clad thighs together suggestively. \"How about we hook up at the Music Room during 3rd period and ... you know ... have me show you how grateful I can be?\"\n\n\"You mean ~ like an orgy?\" Mikhail leaned in on her wolfishly. Brandy flashed me an exited/frightened look then gave a tiny nod. \"Oh, Hell yeah,\" he rumbled. \"Bro?\" Mikhail's salivation wasn't play-acting. I knew the difference. I was okay with it though. I felt pretty lucky to be with Brandy (now).\n\n\"What about Taliyah?\" I tossed out there.\n\n\"Maybe you can ... entertain her next time?\" Brandy hinted there was more to come.\n\n\"Count me in,\" I grinned. A -- I had zero multiple-partner experience while Brandy had plenty, and B -- Brandy seemed up for it, so I felt fine with playing along with this part of Mom's scheme.\n\n\"How do we get in?\" I kept with what I figured was the script.\n\n\"I have a key,\" Brandy's face exploded in as a bright, toothy smile. Mikhail slapped me in the triceps, winked and mouthed 'orgy' behind Brandy's back before going into his Homeroom. Brandy and I headed down the hall.\n\n\"Brandy, this was Mom's idea, wasn't it?\" I gently inquired. She responded by wrapping an arm around my waist and squeezing me tight. \"I'll take that to be a 'yes'.\" I ordered my thoughts. \"Brandy, you know you are my first girlfriend, right?\"\n\n\"Yes,\" she snuck a look up at me, trying to gauge my mood.\n\n\"I want you to know I'm okay with you being my only girlfriend to ... whenever.\" \n\nI let that sink in. As we entered our Homeroom, I was the recipient of another tight hug from my girl. Taliyah was already at her seat. Brandy took the seat beside her while I walked on further to my assigned location. Behind me was Kaelyne's chair and she wasn't in it. I took a deep breath of relief when, right before class, she came slinking into the room right ahead of our teacher, Ms. Thompson.\n\nWe went through the normal Homeroom business, the bell rang and I noticed Taliyah shooting glances Kaelyne's way. As we headed for the door, Taliyah pulled up short, stopping me and Brandy as well. Kaelyne fearfully approached us.\n\n\"I said some stupid stuff yesterday,\" Taliyah announced in a loud, clear voice as she handed Kaelyne a black, silk rose. \"I apologize. I was a dumbass. Do you forgive me?\"\n\nThere was a lot of 'what the?' and 'what's up?'s floating around. Kaelyne stammered.\n\n\"If you don't take it, I'm simply going to apologize again outside of your first period class, and your second, and so on until you do,\" Taliyah persisted.\n\n\"I -- okay,\" Kaelyne took the proffered token.\n\n\"Cool. Me, Brandy and some of the girls are having a party Saturday at Brandy's house. You and your freaky friend are invited,\" Taliyah tacked on. Kaelyne looked at me. I shrugged.\n\n\"They are invited too,\" Brandy added.\n\n\"I am?\" I shot her way along with a confused tilt of my head.\n\n\"I was planning on telling you ... later,\" Brandy eyebrow pumped.\n\n\"I'll check my busy social calendar and be back in touch,\" I gybed.\n\n\"By 'freaky friend' do you mean Vicky?\" Kaelyne glowered.\n\n\"The one with the hair that looks like she stole it off a doll -- that one,\" Taliyah smirked. Kaelyne was about to swat the bigger Black girl with the flower when Taliyah added, \"Yeah, Vicky.\"\n\n\"Yes ... thank you. I'll tell her -- Vicky. Vlad, can I talk with you for a second?\" Kaelyne struggled with the words before turning to me.\n\n\"Sure.\" We stepped out into the hall because kids actually had to exit to their regularly scheduled classes and we were standing in their way. A few lockers down ... \"I had nothing to do with this,\" I headed her off.\n\n\"Oh,\" Kaelyne frowned. \"Your Mom?\"\n\n\"Probably,\" I agreed, \"I bet the idea was Mom's, but the actually wording and details were Taliyah's. Mom's mood was damn near murderous after you, Vicky and Mikhail left yesterday. She sent Alexander and me away so she could have some private time with Taliyah and Brandy. I don't know precisely what went down.\"\n\n\"Oh,\" Kaelyne was back to being uncertain about a whole host of issues.\n\n\"Taking into consideration my neophyte nature in dealing with women, ~ I felt Taliyah's apology was genuine. I really did and still do.\"\n\n\"I want it to be, Vlad,\" Kaelyne gazed at me desperately. She absently stroked the petals of the artificial rose against her cheek. Alexander and Mikhail were close by. \"Thanks,\" my earliest friend hugged me, then scurried away.\n\n\"What's up?\" Alexander asked.\n\n\"I think Taliyah did a good thing,\" I replied.\n\n\"Oh. Good. Let's move her up in the rotation,\" Mikhail suggested.\n\n\"What?\" I sputtered in disbelief.\n\n\"Yeah,\" he grinned wickedly. \"Brandy will understand.\" How he came to that conclusion -- I didn't know. \"Besides, I figure my best bet with the others will be if we screw Taliyah into incoherent bliss,\" Mikhail revealed his true motivations. \"If she comes in the second wave, getting around her will involve too much pain on my part.\"\n\n\"What are you two talking about?\" Alexander leaned in conspiratorially.\n\n\"Mom and one of her dark plans,\" I sighed. Unfortunately, Mikhail had a point about Taliyah having done a good thing (after her fuck-up) and also her not letting Mikhail at any other member of the Cheer Squad unless he and I first screwed her into semi-consciousness. So we explained the deal to Alexander.",
        "\"You remain a pig,\" Alexander directed at Mikhail.\n\n\"Muahh ha-ha-haaa...,\" he laughed maniacally.\n\n\"You two figure out what you're going to do. I'll go tell Brandy and Taliyah,\" I told my other two-thirds. Alex, despite his injuries, would be showing up at the start of 4th period, because there was no way Mikhail and I could show all those young women the attention they deserved with just the two of us. I had to rush off and inform Brandy and Taliyah of the change in plans, though not the motivation behind them.\n\nI thought Taliyah would be the difficult one. No -- I told her it was Mikhail's idea and she accepted that at face value. Brandy was upset, so I promised her I'd come over to her place early Saturday to help set up things for their shindig ... 7:30 a.m. early for a 2 p.m. outdoor BBQ. And I'd stay late -- like 2 a.m. Sunday night / Monday morning 'late'.\n\n[A QUICK ASIDE ON THE CHEER SQUAD]\n\nThere were twelve members of the Cheer Squad. Brandy Crystal Carson and Taliyah Malik were co-Captains -- one White and one Black. The other Black members were Sultana Berry, Vantrice Kirby and Alondra Lamb. The other White members were Amber Lee Huffington, Mia Ryker, Misty Dawn Sizemore, Betty Jo Starling and Randi Leigh Upshaw. Two member I had initially confused as being 'Black' turned out to be 'Mixed' ... meaning No\u00e9mie Lucie Desdunes was Creole and Le 'Pearl' Yates was half-Black/half-Vietnamese.\n\nBrandy and Taliyah were 'odd' in that they were 'co-captains' -- normally there was only one leader of the squad. It had been 'assumed' Brandy held the top spot because she was Darius' main cum-dump. The same 'assumptions' had people thinking Taliyah was 'co-captain' solely because she was Brandy's BFF ~ and no other reason. This, in turn, led both Randi Lee and Sultana to believe that by rubbing up against Rashaan, they could both get the choice BBC and the top Cheerleading spots too.\n\nOur girls weren't planning to give up their primo social position without a fight though. And they were confidant No\u00e9mie, Amber Lee and Misty Dawn supported them. Sultana Berry had only been able to wrangle Vantrice's and Mia's support in the opposing coalition. Randi Leigh had 'rounded up' Alondra, Betty Jo and Pearl (the 'not too bright ones') to her side ... plus she'd already made a public display of being Rashaan's girlfriend. Working against her was the reality her 'supporters' would fold up under any real pressure and Rashaan's teammates would want him to share Randi Leigh ~ she WAS Hot!\n\n[THE MUSIC ROOM]\n\n\"My, oh my,\" Taliyah murmured. She had felt the two Samsonov boys pressing in on her, Mikhail behind her and Vlad to the front. She hoped she had them right. With her heart racing and her fervor rising, she wasn't 100% sure. \"Mikhail,\" she looked over her shoulder as she moved her ass up and down his crotch, \"this is only for you.\" Her declaration was in a throaty moan.\n\n\"That's unfair,\" I chuckled to Taliyah.\n\n\"Don't worry,\" her head tilted up, \"I know some tricks Brandy doesn't know.\" I didn't know if that was true, or not. Finding out would be fun. I kissed her on the lips. At the same time, my brother nipped down on her shirt-covered shoulder.\n\n\"Don't be cruel,\" he teased her. \"You know he was sneaking peeks at the lodge.\"\n\n\"My body -- my rules,\" Taliyah insisted somewhat breathlessly.\n\n\"Okay. I'll work on changing your mind,\" I growled before diving in for another kiss. Our tongues battled. Taliyah placed her hands on either side of my chin, taking control of our passion. In doing so, I sensed her reticence quickly passing.\n\n\"Y'alls first time with one girl?\" she purred when we came up for air. She knew it was, so I was left trying to figure out her game.\n\nFor Taliyah this was a totally new experience too. The sense she had such a level of control over the masculine power encompassing her was dizzying. She hated to admit it, but looking into Vlad's eyes felt nice. His gaze was focused on her. His perceptions were seeking out her reactions and her responses, not still hooked on Brandy.\n\nIn the back of her mind had been the gnawing fear she was a substitute fuck ~ a Brandy-surrogate in Vlad's mind. She saw none of that. His attention was eating her up and it made her so fucking hot. Even more thrilling: she was soaked, breathing heavy and trembling... and they all three still had their DAMN CLOTHES ON!\n\nTaliyah's fingers began fumbling with my belt.\n\n\"We've got time,\" I stroked her cheek. I caught a quick signal from Mikhail. We both dove down for opposite sides of her neck, suckling, licking and nibbling on her tense muscles from collar to ear lobe. In the process, I managed to pull her shirt out of her skirt; she got my belt buckle undone. Synching our oral attacks with working our shoes off with foot-action alone, we then went straight to loosening our belts and -- front first (aka me) -- yanked off our jeans and underwear in one brutal maneuver.\n\n\"Ah,\" Taliyah gasped as my lips and tongue played along the crux of her windpipe and chin, \"you two practice that much?\"\n\n\"Yeah,\" Mikhail chortled. \"We do.\"\n\nTaliyah's hand on my shoulders caused me to bring about a pause in our actions.\n\n\"Seriously?\" she looked over her shoulder at my vigorous triplet.\n\n\"Why would I make up something so bizarre?\" was his take on things. I could tell Taliyah 'wanted' to know more. But she simply wanted more of us both right now and figured she could interrogate us about our unusual sexual indoctrination later -- post-coitus. They began kissing and their kisses became an oral battle replete with growls, rumbles and other hungry sounds.\n\nI took the distraction to rapidly unbutton Taliyah's shirt, pull it open and -- Lord Hallelujah! -- she had on a front-opening bra -- and unleash her 'puppies'. I had talked about her preferences with neither Mikhail nor Brandy, but I'd witnessed and rewound (hey, I'm 18 years old) the footage of the lakeside orgy enough times to know she liked her nipples played with.\n\n\"Uh ... uh ... uh ... aaahhh ...\" the dark-skinned beauty moaned. \"Are you two telepathic?\" she said in response to our hands reaching inside her panties and moving along her vulva and perineum, coming at her from different directions at the same time. I wasn't quite sure what inspired us ... I put my thumb upon her aroused clit ~ it felt almost the size of the first digit of my pinkie ~ and reached around to insert my ring finger against her sphincter.\n\nAt the same time, Mikhail was working his thumb up her bunghole and rubbing his forefinger into her vagina. She was already wet and getting wetter by the second. By the oily texture of my brother's digits, he'd somehow snuck some lubricant on them while our partner was distracted.\n\nThe combination of our height differentials, our ministrations and her obvious pleasure forced my brother and I to go to our knees.\n\n\"Oh God! I need a picture of this,\" Taliyah exulted. \"Both of you on your knees around me.\"\n\n\"I promise,\" I looked up, \"we'll do this again.\"\n\n\"You'd better,\" she beamed, looking down at me, wreathed in a cocktail of majesty and carnality. She added to that image by cupping her left breast into a mouth-watering mound. No words were necessary. I licked the rich, dark brown areola before latching onto her stubby, darker nipple. My thumb and finger were working in tandem with Mikhail's over her cunt and anus to bring her to fruition. \n\nTaliyah was struggling to keep it together. She fed her other breast to Vlad who attentively latched on and began applying a tantalizing level of suction which was driving her wild. \n\n\"Cut loose, Babe,\" Mikhail whispered into her ear. He was rising back to his feet at the same time his right hand began to furiously frig her.\n\nShe shot him a foul look over her shoulder.\n\n'As if he can tell me what and when I can ...' she thought to herself.\n\n\"We are in a soundproof room for a reason,\" he grinned. She sensed the connection. He wasn't out to steal anything from her. Her lover was famished for even more of her sensuality and that desire was showing through. Taliyah looked heavenward ... and then HOWLED!\n\n[4th PERIOD BELL]\n\nSultana Berry stumbled into the front of the room first. We were on our knees; Mikhail had his back to the newcomers, Taliyah was on all-fours with Mikhail doing her pussy from behind while she was giving me yet another blowjob. I was looking right at Sultana and the other cheerleaders as they entered.\n\n\"I hope this doesn't take too long,\" Sultana got out, \"because I'd ...\" and her head turned from looking over her shoulder at her fellow cheerleaders in the hallway to the three of us a dozen feet away.\n\n\"Holy Shit!\" she exclaimed.\n\n\"What?\" wondered Randi Leigh who was right behind Sultana. Before she could comment, Alondra Lamb, stumbled in, with Brandy herding her and Betty Jo Starling ahead of her. \"Oh fuck,\" gasped Randi Leigh, her surprise turning quickly vindictive, \"Brandy, your guy seems to be fucking your best friend.\"\n\nAlondra scanned around seeking direction. Sultana's eyes flicked to Brandy before latching back onto my 'midsection' as Taliyah unleashed my cock from her lips allowing it to sort of sway there ... hypnotically.\n\n\"'Bout time you got here,\" Taliyah slurred happily to Brandy. \"I'm tapping out.\" \n\nWith that, she slouched down on her left side, head resting on her biceps, serene smile on her face. Earlier we'd spread out the piano cover so we didn't have to deal with the much colder floor. Even as Mikhail let her down gently, his tool came free with a loud 'PLOP!', revealing its rock-hard, 'full mast' status.\n\n\"Hey Brandy, what is Randi Leigh doing here?\" I beamed lust-filled affection at my girlfriend. \"I thought you said she wasn't invited.\" According to my Mother (the Evil Psychic Mistress of Misdirection), insinuating to one girl another woman didn't want you close by 'her man' made her want to get close to you. It didn't make much sense to me, but then what did I know about women? Sure enough, Randi Leigh shot Brandy an evil look.\n\nMikhail extended his sweaty body over Taliyah, planted a few feather-light kisses on her shoulder and ear then rose up, right leg first. He quarter-turned their way.\n\n\"Alondra,\" he emoted wolfishly. The smoky hot young lady blinked in surprise then pointed to herself as if to affirm she was the one he was talking to ... as if there was another Alondra in this High School. There wasn't.\n\n\"Come here,\" he beckoned her with a finger.\n\n\"Me?\" she gulped.\n\n\"I've wanted to kiss you since the first time I saw you,\" Mikhail rumbled.\n\n\"Me?\" she repeated. Alondra wasn't going to win any debates with that level of verbal repertoire.\n\n\"Hold on now,\" Sultana interposed herself, facing her ladies. Her mistake was taking her eyes off my brother.\n\n\"But I think he needs help getting dressed,\" Alondra tried to explain. How cute.\n\n\"Brandy, what's going on here?\" Sultana was looking past Alondra to the Team Co-Captain. Mikhail snuck up on Sultana quickly and quietly. I was right behind him. Randi Leigh was trying to get Sultana's attention. Too late. He moved straight into Sultana's back, driving her face to face with Alondra.\n\n\"So you think you are better than Taliyah, do you?\" he breathed into Sultana's ear. She recoiled as much as she could, putting a weak elbow into his ribs. She was only partially effective in turning around. For my part, I slipped around them and went directly into Randi Leigh's personal space. Take into account both my brother and I were naked, glistening with sweat, and highly aroused ...\n\n\"Randi Leigh (apparently middle names were important in cases such as this), why doesn't Brandy want you and I hanging out?\" I lied.\n\n\"I never said that,\" Brandy protested. If someone I had known for more than half my life told me one thing and a near-stranger told me the opposite, I would believe the person I knew well. Mom insisted Randi wouldn't believe Brandy ...\n\n\"Sure you didn't,\" Randi Leigh simmered while reaching down and wrapping a hand around my cock. She gave me a little yank. \"Not bad.\"\n\n\"Get off me!\" Sultana demanded of Mikhail. She got her wish. Mikhail moved her aside and went after Alondra. He astonished everyone by cupping the chestnut-complexioned girl's jaw romantically in both hands and placing a kiss on her lips.\n\n\"Fucking fantastic,\" he purred, then went in pursuit of a far more brutal and demanding lip-lock which took hostage the air from deep within Alondra's lungs.\n\n\"Hey,\" Sultana protested. \"Stop that.\" She tried to separate my brother from his prey. Alondra complicated the issue by entwining one arm behind his head and the other around his waist, keeping him close. Wanton moans echoed from her unfathomed sensual core.\n\nRandi Leigh drank in the scene.\n\n\"I'm Rashaan's girl now,\" she grinned up at me, hand still on my rod.\n\n\"I'm not going to tell him a damn thing,\" I looked down at her. My left hand went along her right elbow to her shoulder all friendly-like. When Randi Leigh didn't resist, I moved my right from her hip to her ass and began bringing her close.\n\n\"I'm not going to fuck you,\" her lips insisted at the same time her hand began jacking me off. \"I don't do White guys.\"\n\n\"Does cunnilingus count?\" I whispered into her ear.\n\n\"Aaaaahhhh ...\" she murmured. \"Maybe not,\" she finished off with a foxy grin of her own. \n\nI could begin to see the calculations going off behind those eyes. Perhaps ~ just perhaps ~ there was a reason Brandy had risked Darius' wrath to fuck me -- on multiple occasions. I let my hand on her ass creep to her cleft.\n\n\"Clothes,\" I teased her ... as she had me on too many occasions. Meanwhile ...\n\n\"Brandy?\" Sultana looked to the functioning Co-Captain for intervention. Brandy had already kicked off her tennis shoes and was currently stripping down out of her jeans and panties. She was also still by the door. Only later would I realize it was because she'd sent Misty Dawn and Betty Jo Starling to escort a semi-crippled Alexander here and the door was locked, so they would need to be let in ... thus necessitating her remaining close to the door.\n\nBrandy's allies on the squad, No\u00e9mie and Amber Lee, were keeping three 'opposing' cheerleaders (Vantrice, Mia and Pearl) preoccupied this lunch period. Dealing with five new cheerleaders would be stressing the three of us guys to our limits. In theory, I guessed that meant we'd pick those other five off later in the week, or on Saturday at Brandy's house.\n\n\"Taliyah and I can't keep up with these three,\" Brandy exaggerated. \"I was hoping y'all could help out this one time. Please?\"\n\n\"But ...\" Sultana sputtered. I was willing to bet 'they're White' almost spilled forth. But she spared another look to the sexually sated Taliyah instead.\n\n\"By all means, leave my Man alone,\" Taliyah threatened, then yawned, stretching out like a savannah lioness. \"I'll leave you Rashaan.\"\n\nAccording to Mom, that wasn't an offer, it was a challenge ... for Sultana to go after Mikhail. To my na\u00efve way of thinking, he could have made it easier by switching his attention from Alondra to Sultana, who was the more dominant woman anyway. Not only was that 'not' Mikhail, it wasn't what a man did if he wanted a woman's interest. We -- the men -- had to play hard to get.\n\nI'd told Mom I preferred honesty. She'd told me to keep my preferences to myself and do what I was told ... and I would somehow end up happier. I truly believe my Mom loves me, so I went along with her madcap advice. It worked gang-busters. The more Mikhail persisted in focusing on Alondra, the harder Sultana worked on enticing and seducing him ... because he was a bastard?\n\nIn comparison, I had it easier. Brandy was clearly horny for me and Randi Leigh got off on thwarting Brandy's lusts by corralling my attentions with her body motions. The more frustrated Brandy became, the more Randi Leigh's inhibitions flew out the window. She had me on my back, hand still on my cock as she guided it into her steamy folds in under two minutes. Putting on a condom? 'No time for that,' or so she claimed. Funny. I thought we had fifty minutes.\n\nHere I was feeling bad about leaving Brandy out and here she was with her triumphant smile from over Randi Leigh's shoulder. She had totally suckered Randi Leigh and me with her passionate resistance. She mouthed 'I love you' before scampering off to get the door. Alexander, Misty Dawn and Betty Jo had arrived.\n\nUnder anything approaching normal group dynamics, at least one of the young ladies could have been expected to bolt this unusual erotic encounter; however the Cheer Squad was used to their Lunch Time and post-Practice orgies. In the immediate post-Darius Era, they hadn't been getting any and suddenly they had three hunky, hot and ready (even if White) guys in front of them, willing to perform.\n\nAlexander had it the easiest. He was 'infirm', so Misty Dawn decided to transfer all the gratitude she had for me not getting into a slugfest with Cousin Buck in the Parking Lot this morning to him, thus lavishing him with some intense, solo loving care. Betty Jo, momentarily at loose ends, was called over to Mikhail by Alondra, who insisted she was still trying to get him dressed ...\n\nIf Mikhail felt any reticence over reliving the sexual exploits of his Varangian ancestors, he didn't show it in the slightest. He soon had Alondra and Betty Jo kneeling with their haunches on their heels, licking his balls and cock-shaft while Sultana stood by his side, kissing him longingly as he massaged her pubic mound -- no penetration yet. It took me a few seconds to realize he was teasing her; plus, he was able to pat the kneeling lasses on their heads when they particularly pleased him. What a fortuitous pig.\n\nI didn't have the time to verbally chastise him. As I began to work in and out of Randi Leigh's love box, twisting my hips during every intrusion, looking to increase her stimulations, she began to get really responsive and incredibly vocal. The combination of the 'aphrodisiacs' Mom had given us, plus my interrupted blowjob with Taliyah, prompted me to begin ejaculating into her womb. Whoops!\n\n\"Ugh ... ugh ... ugh -- ugh -- ugh -- ugh --ugh-ugh-uh-uh-uggggg!!!\" escaped from her lips and then she went off like no woman I'd ever seen before. Randi Leigh was acting as if she was having a seizure. Her long, brunette hair, normally in a ponytail, but worn loose today, whipped around her head as she thrashed and jerked atop of me. Fingernails drew bloody rivets across my pectorals as her hands scarred me from collar to mid-stomach.\n\nHer mahogany skin (she was White, but well-tanned) was more flushed than normal, her small nipples were a bright crimson within her rich reddish-brown half-dollar-sized areolas equally blood-flushed and puff. Her breathing came in staggered gasps. Then she completely locked up perpendicular to my waist, back bowed and her face finally ending up staring down at me in disbelief.\n\nAll I could think of, looking back up at her, trying to make sense of the electricity spreading like fire through her veins was ~ 'if you figure out what I just did to you, please let me know what it was ... because I may want to be more careful who I do it to in the future'.\n\n\"Uuuueeeeee ...\" escaped from her tightly constricted airways right before Randi Leigh's eyes rolled back in her head and she collapsed on my chest, utterly spent.\n\n\"Brandy?\" I looked past the unconscious woman on my chest toward my vastly more experienced lover. She looked stunned. The rest of the room was quiet.\n\n\"I think ... that was Randi Leigh ... having an orgasm,\" Brandy gasped.\n\n\"You go, Bro!\" Mikhail saluted me, slamming his closed-fist over his heart -- twice. With the way the three women were looking at him, he should have been more careful. I suspected they were expecting the same treatment.",
        "\"Are you sure you are okay with having sex?\" Misty Dawn inquired of Alexander, even as she started yanking his pants down.\n\n\"For you -- sure. I'll get my belt,\" he gently caressed her cheek, \"if you could get my shoes?\"\n\nI had to push Randi Leigh up, then maneuver us around so I could carry the still blissfully unaware Randi Leigh to the piano cover to be lain beside Taliyah before returning my attentions to Brandy. I caught sight of some worry in her eyes until she realized my eyes were nearly bugged out of my head and my cock was throbbing upright and returning to duty ... her completely naked body had that effect on me.\n\n\"Oh,\" she giggled. \"You're hurt.\"\n\n\"It'll heal,\" I ignored the pain. We met halfway. My hands went to her right breast and left face cheek to steer her head up to a kiss. Hers went to my cock -- still no condom. So much for 'safe' sex.\n\n\"Ladies, Sultana's going to ruin our fun, so I gotta take care of her first before I can get back to the both of you,\" Mikhail boasted.\n\n\"You think so?\" Sultana Berry put forth with provocative bravado.\n\n\"Yeah,\" Mikhail snorted. \"Alondra and Betty Jo like me, so I'd like to spend some quality time with them. You'd like to think you are better than me, but we both know you aren't. So I'm about to prove it to you.\"\n\nSeriously? Isn't this the moment the woman slaps the man in the face, throws a drink at him, calls him an 'asshole' (or something even less flattering), then storms out?\n\n\"I'm going to ruin you for every other women you ever try to get with,\" Sultana rose to the challenge.\n\nOkay then ...\n\n\"If she wasn't such a bitch,\" Brandy whispered to me as she followed me to the floor, her riding me cowgirl, \"I'd warn her.\"\n\nAll I could do was grunt.\n\n\"What was that?\" Brandy's brow furrowed and her cute nose twitched. Had my Mother not told me this would happen ~ scary and far beyond weird ~ I would have thought I was doing something wrong. This was Brandy seeking affirmation.\n\n\"You ... above me ... every time it is so wonderful and new, Brandy Crystal Carson,\" I replied in a soft, rich romantic voice. Just because I knew the question was coming, didn't mean I'd rehearsed a response. I went with my gut and by Brandy's near-tearful reaction, I was right on the money. Brandy leaned in, squishing her breasts against me and gave me a famished kiss.\n\n\"I feel the same way,\" she murmured.\n\n\"You like blonde-haired girls with big boobs sitting on top of you too?\" I joked.\n\n\"Oh,\" she sat up, feigning indignation well, \"Poo!\" then she smacked my chest. Then, to further punish me, she flexed her thighs -- going up and down -- and undulated her vaginal walls -- to give my cock a very friendly 'welcome back'.\n\n'Yikes!' Man, but that felt really good. Brandy clued in to my pleasure and was looking a bit too pleased with herself, so I pushed up with one arm and went like a lamprey for her right breast.\n\n\"Hey!\" she gasped. \"Not so rough.\" Which meant 'keep at it'. \"I said not so rough, Vlad. I'm a bit tender,\" she sighed happily, reinforcing her misdirection by placing a hand on the back of my head, keeping my lips and teeth tight to her tit.\n\n'Nom-nom-nom-nom,' I happily suckled along for six, or seven minutes until ...\n\n\"Hey y'all,\" Alondra appeared above me/us. \"Can I join in?\"\n\nReluctantly I released Brandy's mammary to get a quick peek at what Mikhail was up to. \n\nHe was going for some hot-muff action on Sultana where she lay on top of the piano, which was, in turn, on the elevated stage. Her legs were upraised in a 'V' with her hands holding the back of each knee to hold the pose. My brother was alternating between kisses to her clit and slit and teasing her labia with his tongue and teeth ~ gentle-like for now. When he figured out her sensitive spots, he'd be doubling down on them rapid-fire soon enough.\n\n\"Unless my Princess claws me like a scratching post -- Hell ya!\" I grinned. That was a concession to my Lady's #1 status without making me sound pussy-whipped. Brandy gave a playful harrumph married to her own saucy smile. The problem was ...\n\n\"Princess? Who is that?\" Alondra struggled to concentrate.\n\n\"Me,\" Brandy seductively wiggled off my cock. \"He's my Prince, so I'm his Princess.\"\n\n\"Oh! Like Disney?\" Alondra beamed innocent understanding. \"That's so cool.\"\n\n\"Yeah,\" Brandy shot me a wink. \"Like Disney. Here, have a seat and share in the 'magic'.\"\n\n\"Oh goodie!\" the tawny athlete mounted my penis which Brandy was 'kind' enough to hold erect for her. She wasn't tight, but, to be honest, Alondra was snugger than my first time with Brandy -- which was a thought I'd take to my grave. Her toes were on the floor, knees off the ground, gymnast's thighs like coiled springs and hands splayed on my chest -- she got to bounding up and down.\n\n\"Yay!\" At least I was making someone definitely happy. When I made eye contact ... I ... felt for Alondra. She had one -- no -- two marketable commodities; her exotic good looks and a willingness to work hard. Cheerleading was as much of a demanding sport as basketball. She knew the Cheer Squad's routines, and with her limited intellect, that had to mean she truly applied herself when given the chance.\n\nWhat Alondra needed was good friends ... and someone, right now, to fuck her.\n\n\"I've never fucked a White guy before,\" she blithely informed me. \"I thought you'd be ... smaller.\"\n\n\"Vlad is full of surprises,\" Brandy moved to my side, still smiling.\n\n\"Don't let me neglect you, Babe,\" I offered. She knew what I was saying and took me up on the suggesting.\n\nShe made a production of standing over my head, facing Alondra then slowly lowering herself down to my waiting mouth.\n\n\"How's he going to breath?\" Alondra inquired.\n\n\"He's got great lungs,\" Brandy answered. My tongue was busy sculpting out her vulva and penetrating her labia.\n\nMy right hand went around the back to massage a luscious ass cheek and tickler her along her tailbone. Then the left went up and rediscovered her breasts. I could almost hate my Mother for keeping us from sex for so long -- almost. To be fair, she'd also helped train us to be aggressive, appreciative and attentive lovers.\n\nIt wasn't like the BBC Masters didn't do cunnilingus. Some did. The difference was we approached it as a facet of a full-on orgasmic orchestra. It wasn't just licking and sucking that clit, or labia pulling. Depending on the partner, it was spreading your attention along the upper thighs, pubic mound perineum and buttocks. \n\nFingers, lips, tongue, nose and even whiskers could be parts of our arsenals. Keep all your senses focused on your lover as well. A twinge, chance in scent, or a stifled gasp could all be clues to what secretly turned them on. Thankfully for this encounter, I already knew Brandy pretty well and Alondra wasn't overly demanding. She wanted a nice, stiff dick and I gave her that in spades ~ no pun intended. \n\n\"Oh fuck, oh fuck, oh fuck,\" Sultana began hissing. Taliyah had done wonders for Mikhail's confidence which rebounded into this pattern of quickly overwhelming whatever mental defenses she tried to put up between him and the climax he wished to tear from her.\n\n\"OH FUCK!\" she screamed. Yep. Mom's choice of the sound-proof Music Room was prescient.\n\n\"Ooooohhhh ...\" she moaned. \"Wait ...\"\n\n\"No way,\" Mikhail taunted her. \"I'm not going to stop until you say you'll only do White boys.\" Pretty much a complete race reversal, and cruelly pointless.\n\n\"Not going to ... oh FUCK!\" she began to caterwaul again. I couldn't see what he was doing, but by the sound of moist slapping, I figured he had advanced to screwing her face-to-face and furiously hard.\n\n\"What's going on?\" Randi Leigh finally rejoined the gathering.\n\n\"He fucked you into transcendence, you silly Cunt,\" Taliyah mocked the girl.\n\n\"I ... ah ... it wasn't ...\" Randi Leigh blathered.\n\n\"Don't even try,\" Taliyah chuckled.\n\n\"By all means,\" I could feel Brandy twist her upper body around, \"if you never want to fuck my guy ever again ...\"\n\n\"Or mine,\" Taliyah tacked on.\n\n\"Any of the Samsonov boys ever again,\" Brandy dictated, \"that's fine by me -- us.\"\n\n\"That's damn right,\" Taliyah added.\n\n\"Oooohhhhheeeeewwwww ... I'm getting all tingly,\" Alondra sang out.\n\n\"When is it going to be my turn?\" I had no doubt Betty Jo was pouting over her exclusion by Mikhail's devotion to Sultana.\n\n\"Oh fuck, oh fuck, oh fuck,\" became a familiar refrain. \"OH FUCK!\" and Sultana surrendered another orgasm to my bratty younger triplet. \"Noooo ...\" she panted.\n\n\"Don't break her,\" Taliyah sounded a tad jealous as well as cautionary. \n\n\"Say it,\" he growled.\n\n\"Aaahhh ...\" was all Sultana could emote.\n\n\"Say it,\" he remained ferocious. I felt obliged to tap Brandy's thigh. She was closing on her own fruition, but I wasn't sure Sultana had the time.\n\n\"Give it a rest,\" Alexander protested. \n\nBrandy dismounted. Mikhail hadn't relented yet.\n\n\"Bro, Alondra's over here ~ dying for a three-way,\" I tried a different approach. I wasn't going to swap out Alondra for Betty Jo -- that would be treating the ladies like mix-and-match Legos. Betty Jo was still the only girl-neglected, but I knew from our earlier conversation Mikhail had a special hankering for Alondra -- which I couldn't bring up directly without being cruel to Taliyah.\n\nMikhail looked over his shoulder, his body still hovering over the slack form of a sated Sultana. His look was volcanic ~ primal, fiery ...\n\n\"We aren't done,\" was his parting shot to Sultana. Betty Jo was still on her knees where he'd left her. Mikhail didn't spare her a glance, advancing swiftly to us.\n\nMeanwhile ...\n\n\"I do? I am?\" Alondra hiccupped both surprised and happy with 'her' suggestion.\n\nFor a second I was afraid Mikhail would go directly for a face-fuck. Alondra was certainly set up for it. Instead, at the last second he went in for a deep French kiss full of tongue, mutual nose-breathing and finishing with his teeth pulling playfully on her upper lip.\n\n\"I'm bouncing on your brother,\" Alondra gleefully, breathlessly and pointlessly related.\n\n\"I can see,\" he chuckled. My youngest triplet didn't HAVE to be an asshole. \"I think I'm going to be pouncing on you.\"\n\nAlondra had no comeback. My bet was she didn't know what 'pounce' meant. Mikhail moved behind the medium-brown beauty. It occurred to me the deeply-tanned Brandy and natural-complexioned Alondra were virtually the same skin color.\n\nOtherwise they were different enough. Brandy was a natural blonde. Alondra had kinky, black hair with blonde highlights. One with dark-blue eyes and the other hazel. Alondra was taller by a few inches. Brandy had the larger bust and hips. Alondra's buttocks were accentuated to the top while Brandy's were more balanced hemispheres. I couldn't tell whose smile I liked more.\n\n\"I like White boys,\" she huffed as a way of greeting Mikhail's transition from 'kisser' to man-boy pressing in behind her. There was no way he was going for her ass without causing her a great deal of pain. He had another idea.\n\n\"Seesaw?\" he looked over her shoulder. Oh!\n\nI put my hands under each of her thighs and lifted her up and forward.\n\n\"Eeep!\" she squeaked followed by \"Hey -- Noooo,\" when my cock popped out.\n\n\"Here you go,\" Mikhail soothed her. In his cock went.\n\n\"Ooooohhhh yeah,\" she was immediately mollified.\n\n\"Why does she get two of them?\" Betty Jo complained.\n\n\"Yeah,\" Randi Leigh grumbled. \"Why does she get both of them?\"\n\n\"Because she asked really, really nice,\" Mikhail addressed the others. Brandy shot me a curious look. Since she had her back to the others I felt it was safe to share my own confusion.\n\n\"When did that happen?\" Taliyah pseudo-teased 'us'.\n\nAt the same time, Alondra rocked forward. When she settled back, it was my cock inside her once more. Taliyah had gotten dual-vaginal & anal after we had 'prepped' her.\n\n\"We're telepathic,\" Mikhail responded. Alondra didn't care.\n\n\"You'd better not be,\" Taliyah muttered.\n\nYeah, we had to do something about this. The next time we switched back, I pulled myself further up and away from Alondra. Mikhail picked up on my clues and went to regular doggy-style, his back pressing on hers, his left arm supporting his weight while his right reached under and began to manipulate her clit between two of his fingers in a tender, circular motion.\n\n\"Ah-ah-ah SHIT!,\" Misty Dawn announced her own eruption to all of us. It turned out she and Alexander shared their 'moment' ~ their synergy further multiplying their sensory overload.\n\nI had barely moved into a kneeling position in front of Alondra. We kissed which left me rather unprepared for ...\n\n\"Now it's my turn,\" Betty Jo pushed Brandy aside in her rush to grapple with me. OH JOY!\n\n[MOM AND DOMINQUE ~ PART II]\n\n\"Ms. Malik, there is a Mrs. Samsonov here to see you,\" Riley buzzed Madam Mayor. Dominique bit down on her anger -- and fear. Chinedu had been so plastered, he couldn't properly remember the events of the previous evening clearly and Taliyah hadn't felt the need to remind him. None of that erased the feel of the middle Samsonov boy's ... everything, or the wrongness of those actions.\n\nChief of Police Quinterre had yet to slither through her doorway, though that was something she had to prepare for. The beating Alexander (she wasn't fooled by whatever deception Gayle Fonteneau/Samsonov had perpetrated) took at school had been both troubling and welcome -- since it served as a major distraction to 'that night'.\n\nDarius' ... destruction had been a peal of thunder after Alexander's beating. Now the Arkansas State Police were nosing around and her 'mole' inside the Davis County Sheriff's Department had become reticent to supply her with useful information.\n\n\"Tell Mrs. Samsonov I don't have room in my schedule today. Perhaps she can avail herself of our city's website, or attempt an e-mail,\" Dom answered.\n\n\"She says she'll wait,\" Riley replied.\n\n'Ah shit ... that bitch' ... \"Fine. I will give her five minutes in ... thirty.\" \n\n\"Yes Ma'am,\" Riley sang out.\n\nDominique frowned. Riley appeared 'upbeat'. Which black snake was pounding her fat ass and pussy now? Damn it ... one more unexpected headache. Thirty minutes rolled around and Gayle hadn't departed like any sane individual would, so Riley showed her in.\n\n\"Riley, you can go,\" Dom dismissed her White 'Political Assistant'.\n\nRiley kept smiling like a fool.\n\n\"Yes Ms. Malik,\" the girl nodded.\n\n\"See you this evening, Riley,\" Gayle smiled. Riley's smile deepened into something definitely sensual. Dominique was going to have to school her Jew Ass again. Spending time with Gayle Fonteneau was the opposite of helping out.\n\n\"Hi Dom,\" Gayle settled into the seat across from Dominique.\n\n\"Call me Madam Mayor,\" Dom bit back. \"What do you want?\" Gayle's grin turned into a vicious leer. \"And leave Riley alone, damn you.\"\n\n\"I was curious if Chinedu's sagging black ball sack has become a suitably dark shade of blue -- I see from the look of his two main whores, they have,\" Gayle chuckled.\n\n\"Bitch,\" Dom seethed. \"What do you -- think you have on me?\"\n\n\"Not a damn thing,\" Gayle kept chortling. Dom was more convinced than ever the evil harlot had lost her damn mind. \"Welcome to dealing with decent human beings, Dom. My boys didn't tell me a fucking thing. They certainly didn't gather any footage of supposed misdeeds.\"\n\nDom processed what she was and wasn't being told.\n\n\"Neither boy had anything to tell you,\" Dominique murmured. Even she wasn't sure if she was asking a question, or making a statement.\n\n\"No. Vlad would only break a confidence if you stepped out of bounds,\" Gayle affirmed.\n\n\"Mikhail?\"\n\n\"By all means -- get between him and Taliyah. I find his unexpected loyalty to your daughter an unwelcome distraction. But you're a selfish bitch. So by all means ...\"\n\n\"My daughter has better sense than to be seen with any of your boys,\" Dom's eyes narrowed.\n\n\"Then we are agreed,\" Gayle stood. \"Neither of us needs our children interfering in our plans for one another. That is all I wanted to hear.\"\n\n\"Play your sick mind games with someone else, you twisted slut,\" Dom regrouped. \"You deal with your boy and I'll deal with my daughter. Dating your son is suicide for her High School social success, but I'll let her make up her own mind.\"\n\nGayle sat back down, still far too pleased with herself.\n\n\"Go ahead. I'm interested in what your daughter has to say about my son behind his back. Give her a call,\"Mrs. Fonteneau/Samsonov suggested.\n\n\"Why?\"\n\n\"Decent people, Dominique,\" was Gayle's allusion. \"Sometimes people can surprise you. I'll make you a bargain.\"\n\n\"I don't want any part of anything you have to offer,\" Dom snapped.\n\n\"I'll fund your bid for the State Senate -- no matter what your girl says about Mikhail. You know Reggie is going to be a problem, thanks to Riley being a true BBC slut and to the solidarity Chine's buddies are going to show him -- over you.\"\n\n\"Another Fonteneau lie.\"\n\n\"Why? Why would I lie to you about this?\"\n\n\"For starters, your maximum campaign contributions won't mean squat.\"\n\n\"I can have five hundred people calling your campaign committee by 5 pm, each promising the $2,700 legal limit ... for starters, Dom,\" Gayle smirked.\n\n\"Then there is the fact I control the Fonteneau Trust which, in turn, provides significant, if not the majority of support for seventeen approved PACs in Arkansas, Louisiana, Missouri, Oklahoma, Tennessee and Texas. If I shovel $50,000 their way -- each, they can repay the favor -- and not lose my support -- by giving yet another $2,700 apiece plus spend another $47,300 on 'the issues' ~ whatever you chose those to be.\"\n\nDominique twitched ever so slightly. That would be nearly $1.4 MILLION to her campaign war chest plus another $800,000 in 'free' political ads. Then she could really tell Reggie to go fuck himself -- once she was safely in office (her Papa didn't raise no dummy). That kind of money could open up even greater opportunities for Dominique Fox Malik ... the US House of Representative perhaps?\n\nDamn, she hoped she wasn't salivating in front of this sick and twisted Fonteneau bitch.\n\n\"All over a phone call? You'd risk that much?\"\n\n\"Yes. Absolutely,\" Gayle's steel bothered Dom. What was she missing?\n\n\"Do you hate me?\" Gayle continued. \n\n\"Yes.\"\n\n\"Do you think I hate you?\"\n\n\"Yes.\"\n\n\"Wrong,\" Gayle snorted in wry amusement. \"I hated your Pops, but he's dead now. I hated your brother, but he's a vegetable now. I don't hate you, Dominique, because you have never personally wronged me, or my family. I save my hate for the people who have wronged me ... and gotten away with it up until now.\"\n\n\"Tell me something I DON'T know,\" Dom bit back. \"Like why are you telling me this?\"\n\n\"I love my boys more than I hate your husband, Dom,\" Gayle's eyes narrowed menacingly. \"I'm not going to hurt Mikhail for nightmares I KNOW will never go away ... no matter how much they, or their Da, love me -- no matter how much vengeance I get. Thus, I want my retribution to be as clean as possible ... so I'm giving you the opportunity to make my life easier.\"\n\n\"You need help,\" Dom muttered. \"Serious professional psychiatric help.\"\n\n\"Sure,\" Gayle chuckled once. \"The Nation needs serious damn campaign finance reform laws too. You are more likely to find a way to fix our American political process than fix me. Make the call, Dom.\"\n\nDominique wanted to stand tall and toss the Hated Fonteneau out on her ass ... except she (Dominique) could do so much good in higher political office and even more if she was free of leeches like Reggie. Dominique decided to roll those dice. She noted the time -- Taliyah would be finishing up 4th Period ~ Lunch ~ so she gave her a call. \n\n\"Taliyah.\"\n\n\"Yes, Momma?\" she sounded rather fatigued yet dream-like.",
        "\"What have you been doing?\"\n\n\"Nothing,\" Taliyah grew more alert and petulant. \"Whatchya want?\"\n\n\"I want to make sure you and that Samsonov boy are done. He's nothing, but bad news for you.\"\n\n\"Huh?\" followed by a pregnant pause. \"Not that I like him one bit, but why do you care? Besides, Rashaan has been cheating on me with Randi Leigh Upshaw -- the gutless piece of shit.\"\n\n\"Well ... get him back!\" Dominique snapped. \"He's going to be [Football] Team Captain this year. If you want to be Homecoming Queen, you need to ...\"\n\n\"Mom, I don't want him back,\" Taliyah dug in her heels.\n\n\"Well, don't date Mikhail whatever you do,\" Momma Malik attempted to lay down the law.\n\n\"We don't date, Mom,\" Taliyah bit off which she followed by a gasp and a giggled. \"HE is a knuckle-dragging Neanderthal. I swear, Brandy got the good one. Vlad treats her ... {stop that!} ... right.\"\n\n\"Who you with?\" Dom lapsed into Ozark patios.\n\n\"Me and the girls are working through some issues, Mom,\" Taliyah fibbed. From long experience as her mother, Dominique knew she was getting a half-truth and thus a half-lie.\n\n\"Put Brandy on the phone.\"\n\n\"Hold on ... {I'm going to KILL you!} ... Here she is.\"\n\n\"Ms. Malik?\" Brandy's voice sang out loud and clear.\n\n\"Is my daughter anywhere near Mikhail Samsonov -- right now?\"\n\n\"Oh ... ah ... yes, but she is busy beating him up,\" Brandy prevaricated. \n\n\"She shouldn't be touching him at all,\" Momma Malik groused.\n\n\"But he's been touching her. It is only fair she punch him back,\" Brandy related events from her perspective.\n\n\"He's punching Taliyah?\"\n\n\"NO! He's tickling her. She's punching him.\"\n\n\"Is he being ~ inappropriate?\"\n\n\"With Taliyah?\"\n\n\"Yes -- WITH TALIYAH! Wait, is he being inappropriate with someone else?\"\n\n\"No,\" Brandy answered a bit too fast for Dom's taste.\n\n\"Brandy,\" she invoked her 'Mommy Powers'.\n\n\"He's not cheating on Taliyah, Mrs. Malik. I swear,\" Brandy pledged.\n\n\"Who else is there?\"\n\nThe pause was deafening for a parent who wanted to 'know'.\n\n\"Ummm ... most of the Cheer Squad, Vlad and Mikhail ...\" Brandy answered.\n\n\"What have you been doing?\"\n\n\"Hold on, Ms. Malik. I need to go save Mikhail. He's fallen on the ground and Taliyah is kicking him -- HARD.\" Roughly ten seconds passed. \n\n\"Mom, I -- am -- not -- dating -- Mikhail. He's an asshole. A REAL asshole,\" Taliyah said. \"He's ... {stop laughing at me} ... {oh, NOW you can dodge} ... {get back here so I can kick you} ... fucking annoying!\"\n\n\"Okay,\" Mrs. Malik wasn't truly satisfied. \"Don't start. Don't hang out with him at school if you can avoid it, for that matter -- or after school.\"\n\n\"It isn't going to be a problem ... {because I'm going to kill you} ... Mom. See you after Dance Class. Bye.\"\n\n\"Bye Honey,\" Dom signed off.\n\n\"Satisfied?\" she looked across the table. She fully expected all of this to be some sick ruse on the part of Gayle.\n\n\"Give me 90 more seconds,\" Gayle held up one finger. \"In the meantime, why don't you call,\" and she recited three numbers. \"Those are three of the PAC's I mentioned. Tell them it is you calling.\"\n\nWith some reluctance, Dominique did so. The responder announced herself as one of the largest wildlife/wildland Charities in the State.\n\n\"I'm Mayor Dominique Fox Malik of Kingston ...\" she began.\n\n\"Oh yes!\" the person on the other end perked up. \"We've been expecting your call. When can our Political Chairperson come down Kingston for a chat? They were planning to be in the Davis County area on Thursday anyway ...\"\n\n\"Thursday ... afternoon ... works for me,\" Dominique hedged.\n\n\"Very well. Ms. Libellee could meet you ... say ... 2 pm?\"\n\n\"2 pm works for me,\" Dominique found herself nodding.\n\n\"We look forward to working with you, Madam Mayor,\" then the connection ended.\n\nNot satisfied with just a number, Dominique did a reverse phone number search and ... sure enough, Gayle had provided the correct number according to both the charity's web site and the Arkansas White Pages. She was somewhat stunned.\n\n\"I don't like you, Dominique, but I don't hate you either,\" Gayle explained. \"You are also an enemy I don't need. We both know that is true.\"\n\nTrue, or not, those were words Dominique wanted to hear. She was calling the second number when Gayle took to her own mobile phone.\n\n\"Brandy, this is Gayle Samsonov,\" she began then put her phone on 'speaker'.\n\n\"Hey, Mrs. Samsonov.\"\n\n\"How was the Music Room?\"\n\n\"Great ... though Taliyah got to go first,\" Brandy moped.\n\n\"I'm sure Vladimir had a good reason for doing so and will make it up to you. Is the party still on for Saturday?\"\n\n\"Yes Ma'am,\" Brandy was more upbeat this time. \"Taliyah even invited Kaelyne and Vicky to show up as well.\"\n\n\"That's nice, Brandy. You did a good thing today and I won't forget it.\"\n\n\"Thanks ... it was kind of nice for me too.\"\n\n\"Oh, how are Taliyah and Mikhail getting along?\" Gayle inquired.\n\n\"Ugh,\" Brandy snickered. \"They are in love. He always pisses her off, she beats him up, knocks him down, then they kiss passionately until we have to tear them apart to go to class. It is kind of neat, actually.\"\n\n\"Vlad isn't neglecting you, is he?\"\n\n\"No Ma'am,\" Brandy sighed happily. \"When I feel left out, I pout and he comes right on over ... just like you said.\"\n\n\"Good for you. Take care, Brandy. I'll see you tomorrow?\"\n\n\"Sure thing. Later.\"\n\nDominique was left staring at Gayle and even more uncertain than ever since it was clear she didn't know what was going on. She was definitely getting one version of events while Gayle Samsonov was getting another, but who was getting closer to the unvarnished truth? \n\nWorse, Dom had agreed to leave their kids be ... for the time being. Also, as bizarre as it sounded, if Taliyah did 'love' that young boy ... that could be serious trouble and yet useful to her at the same time. All Dominque Fox Malik knew for certain when Gayle Fonteneau left her office was she had to be more alert than ever. \n\n[THE END OF THE DAY]\n\nAlondra joined Brandy and Taliyah, plus No\u00e9mie, Amber Lee and Misty Dawn in the group of cheerleaders who congregated in the basketball bleachers toward the end of practice that Tuesday afternoon, signaling her move from Randi Leigh's faction over to theirs. \n\nNow they had enough votes to stop any legitimate takeover by either Randi Leigh, or Sultana. Technically, Mrs. Hagman, the Cheer Coach, could do so, but she was unlikely to do so right now with the school's hierarchy in turmoil ~ or so Mom predicted.\n\nSomewhat amazingly, Kaja did NOT like this -- especially the attention being directed Mikhail's way. The rest of the team basked in what they thought was the rising prominence of the Basketball Squad over that of the now somewhat rudderless Football Team. I didn't see a need to bust their bubble. A few tried to 'play' with the cheerleaders. Brandy and Taliyah 'played' right back.\n\nWe were in good spirits as we were dismissed. Our weasel of a coach had decided Alexander had four weeks to be able to 'suit up' before he would be replaced, thus effectively keeping him on the team. We considered that another victory for the Samsonovs and fair play. After all, it wasn't Alexander's fault he'd had the crap beaten out of him.\n\nOn Monday's, Wednesdays and Fridays, Alexander would peel off independently to make his way to Ms. Blanchard's Augmented Benchmark Examinations (ABE) Retest Group. Since Mikhail and I had trounced all her rowdy students' asses, we felt a wounded Alex, armed with crutches he knew how to wield, was safe enough.\n\nOtherwise, per the new norm, we three had Shaquille McGregor, his lady, Monique Williams, the other White teammate, Steven Astor (with his rich mother), plus Vicky Orem and Kaelyne Harlow as an integral part of our posse. Vicky and Kaelyne's buddy, Leone, had a Goth boyfriend and had retreated to safer pastures. Steven was a rather decent sort, if a bit dull, and definitely dense about deadly undercurrents whirling around the school.\n\nAs we transitioned from the locker room via the short bit of hallway to the Parking Lot, a problem developed. Three ladies 'collided' on Mikhail: ... Taliyah, Alondra and Kaja. Kaja had suddenly decided she did mind him being around other women and she had the physical confidence to make an issue of it. \n\nAlondra, being clueless to the shit-storm she was in the midst of, actually did help a tiny bit. I was able to 'rescue' her by pulling her close before Kaja put her into a wall. Taliyah, on the other hand, neither wanted nor would have accepted my aid, so I didn't bother.\n\n\"You got a problem?\" Taliyah postured.\n\n\"Ya. You're a coyote -- latching on to a better prospect now that you've finally realized what a fraud your previous boyfriend was,\" Kaja spat.\n\n\"I'm standing on my own two feet, Kaja,\" Taliyah snapped back. \"I don't need any man -- certainly not this ...\"\n\n\"Cretin?\" Mikhail offered.\n\n\"Yeah -- cretin,\" Taliyah grumbled, then snuck a nasty Charlie Horse on him.\n\n\"OW! Shit,\" Mikhail squalled. \"What the ...\"\n\n\"Don't interrupt me,\" Taliyah stated ... then Kaja shoved her halfway across the hall. She almost went tumbling down.\n\nShaquille wrapped up Kaja from behind while I raced to put my body between the two, facing Taliyah.\n\n\"This is not happening,\" I commanded.\n\n\"Get out of my way,\" Taliyah snarled.\n\n\"Let go, damn it!\" Kaja hollered. From the sounds of thrashing, Shaquille wasn't listening to his enraged cousin.\n\n\"Ow, ow, ow ... shit, that hurts,\" Mikhail complained. \"Really ... fucking ... hurts.\"\n\nNo\u00e9mie, with her long, deep brown, wavy locks, golden-brown skin and sporty build, joined me in keeping Taliyah at bay. Brandy and Amber Lee moved to confront Kaja. Misty Dawn went to Alexander for no better reason than to snuggle into his warmth as far as I could tell. Monique rallied to Kaja's side of things.\n\n\"Kaja, what the heck do you mean attacking Taliyah like that?\" Brandy got all feisty.\n\n\"What are you and your cum dumpsters doing showing up around the basketball team?\" Monique countered. \n\nSuddenly it made sense -- I considered Monique and Kaja both attractive in their own way, but each of the cheerleaders was much hotter. Kaja hadn't needed to worry about Mikhail and Taliyah because the cheer Co-Captain was unobtainable to him, or so she thought. In the same way, Monique hadn't worried about Shaquille's eyes wandering for basically the same reason. Now ...\n\nI needed to be too in many places at once. Alexander was still too infirm, so I grabbed Steven by his forearm and propelled him toward Taliyah and No\u00e9mie. That traffic jam would hopefully buy me enough time to ...\n\n\"Brandy -- Amber Lee,\" I hefted them both up by reaching around from behind and lifting them up, forearm under their bust lines, \"she didn't mean it like that.\"\n\nWhich was total shit. Monique did mean it 'like that'. Thankfully, Alexander was able to lurch forward between my two thrashing bundles and Monique.\n\n\"Mikhail, why don't you take Kaja home now,\" Alexander directed. Mikhail shot him a dirty look, yet realized this was the only alternative which wouldn't result in violence and ill will.\n\nAlexander had to give the order because if I gave it, Taliyah would hold it against me and that would bode poorly for me and Brandy.\n\n\"Yeah ... come on, Kaja,\" he murmured, still rubbing his sore upper arm.\n\n\"I'd rather walk,\" she defied all reason.\n\n\"Shit, Kaja. It is going to suck me pushing my bike the four miles to your place then,\" Mikhail shot her an impish look, \"but so be it.\"\n\n\"I don't want to be around you,\" Kaja yelled at him.\n\n\"Cool. I haven't a fucking clue why you are so angry, anyway.\"\n\n\"You're .... Grrrrrrr ... Impossible!\" Kaja screamed at Mikhail. Shaquille released her and out she stormed.\n\n\"Later, gang,\" Mikhail waved good-bye.\n\n\"Mikhail, let her go,\" Taliyah simmered.\n\n\"There ain't a ring on these fingers, or in this nose,\" he tapped his proboscis then gave the rest of us a jaunty salute.\n\n\"Bastard,\" Taliyah hissed.\n\nI took the interlude to spin around and deposit Brandy and Amber Lee facing Taliyah. I kept a gentle hold on Brandy who twisted in my grip.\n\n\"She called us cum dumpsters,\" Brandy frowned. Yeah ... the truth hurts. The problem was in the old school dynamic, Darius would have humiliated Shaquille and 'slutted-out' Monique for Monique's defiance -- truth be damned. \n\n\"Monique,\" I looked over my shoulder, \"we are all working on a fresh start. Darius is gone. Let's leave him and all that sickness in the past. Please.\"\n\n\"Monique -- Sugar, you are still the only one I see,\" Shaquille moved up and put both arms around her waist from the side.\n\n\"You say that now,\" she turned on him, still within his encircling embrace.\n\n\"And tomorrow and next week and next month and next year too, Sugar,\" Shaquille promised.\n\n\"You'd better keep saying that,\" Monique threatened, but with less heat.\n\n\"Brandy -- let's go,\" Taliyah abruptly stomped out as well.\n\n\"Prince?\" Brandy sent a worried expression my way.\n\n\"Call me tonight and we'll make plans,\" I gave her hand a quick squeeze. The other cheerleaders joined Brandy and Taliyah in their exodus.\n\n\"What was that all about?\" Steven finally got around to asking.\n\n\"Steven -- we'll talk about it tomorrow when cooler heads prevail,\" I said. \"Why don't you give Shaquille and Monique a ride home?\"\n\n\"Huh?\"\n\n\"Vicky and Kaelyne need me to give them rides home and with Alexander laid up, more than four is going to be a bit uncomfortable,\" I lied.\n\n\"Okay,\" he nodded.\n\nOnce he had Monique steering toward the exit, Shaquille sent a 'thumbs up' my way ~ one crisis averted. We were able to get ourselves outside, loaded up and on the road before Vicky broke the silence.\n\n\"So Vlad, what's really going on?\"\n\n\"Please be more specific,\" I glanced into the rearview mirror. She was in the back with Kaelyne and Alexander was up front with me.\n\n\"Taliyah being nice to Kaelyne today after being a homophobic bitch yesterday, us being invited to the Cheerleaders Soiree at Miss Brandy's this Saturday, or the whole bitchfest between Kaja and Taliyah over Mikhail -- take your pick wherever you want to start,\" she proposed.\n\n\"Okay. I'll do my best. First off, don't call her Miss Brandy. Her name is Brandy and I'm trying to help with her congeniality. I'm not sure what is going on inside Taliyah's head. I do know Mom had a chat with her about what happened yesterday, but we boys weren't privy to it ... so, if you're feeling particularly bold, you can ask Mom.\" \n\n\"The bitchfest ... I've had precisely one girlfriend my entire life. I suspect that given prior bad behavior, Monique and Kaja expect me and my brothers to behave like dogs and the Cheer Squad to behave like 'bitches in heat' at the drop of a hat without consideration for the feelings of those being trampled by the lusts of others. We should all be working overtime to make sure that doesn't happen anymore.\"\n\n\"We are in High School,\" Vicky chortled. \"Good luck with that.\"\n\n\"So, Vicky,\" Alexander turned in his seat despite the pain. \"Are there any guys you are interested in?\"\n\n\"You mean besides you?\" she smiled at him.\n\n\"Huh? Really?\" he grunted.\n\n\"Well ... yeah. You're hot, intelligent, not a douche and, as far as I can tell, not currently taken,\" Vicky outlined her boyfriend priorities. \"Unlike Kaelyne, I'm not a lesbian, or even bi-sexual. Because none of you three have had much girl experience and because of your recent full-body bruising, I'm not going to hold you missing me eye-balling you like a choice slab of meat against you.\"\n\n\"Wow,\" I chuckled.\n\n\"Gee ... thanks,\" Alexander murmured. \"Vicky, I am sort of interested in somebody else.\"\n\n\"Which cheerleader is it?\"\n\n\"None of them,\" he shook his head. \"It's ... ah ... complicated.\"\n\n\"It's a teacher,\" I put out there.\n\n\"Oh,\" from Vicky.\n\n\"That makes sense,\" Kaelyne nodded.\n\n\"Can we just have sex then?\" Vicky asked Alexander.\n\n\"I ... ah ...\" he stammered.\n\n\"It's okay,\" Vicky sulked.\n\n\"NO,\" Alexander protested. \"I'd like to. It is just so sudden. I like you, Vicky. I've simply had so many other things on my plate I'd never really thought about an 'us'.\"\n\nVicky studied him intently for half a minute.\n\n\"Fine, but don't go bragging around school about it,\" she demanded.\n\n\"I'm not that kind of guy,\" Alexander assured her.\n\n\"No; she's a 'put her name and number on a bathroom stall' kind of girl,\" Kaelyne broke the uneasy mood with her joke. Vicky gave her a finger-flick to the head. I caught Alexander giving me a sideways glance. I had the feeling he hadn't considered Vicky AT ALL ... oh boy.\n\n[AND THE BEAT GOES ON ...]\n\nTuesday night, in the asphalt-covered rear loading area of the Wal-Mart there was a Redneck throw down. Buck Tooney was wasting no time in cementing his leadership position over the White portion of our High School. His job was made more difficult by Darius' ruthless efficiency in allowing no other organizations, no matter how informal, to challenge his dominion. That translated over to Buck having to bust more heads to bring the 'rednecks' all in line.\n\nIf that worked out, the city-Whites would be next. The problem for everyone else was the High School had been a succession of autocratic tyrannies for so long, it was difficult for the students to successfully even balkanize, much less unify. Everyone assumed another 'Darius' would eventually arise to restore a brutal school order ~ as long as 'he' was Black.\n\nThat meant Buck needed a Black figurehead to parade in front of the 'establishment' to get things done. So far, no such person existed. Rashaan not only had the mistaken impression he could resist Buck, he was the Chief of Police's son ~ so not a prime candidate to be a figurehead for a criminal like Buck. Therefore he had to get Rashaan out of the way -- figuratively speaking.\n\nAnother problem for Buck was the school already had an existing Black criminal element. Darius had not been a part of it, but like so many other aspects of school society, when he told the leaders of the school subcultures to do something, or not to do something, he expected compliance. If not -- pain would definitely follow. These characters weren't going to easily knuckle under to Buck Tooney though. After all, he'd been Darius' brother's 'boy', not the other way around.\n\nIf anyone seriously thought Buck had returned to High School to be the Black Man's Bitch (again), they were clearly high, brain damaged, and/or delusional. I wouldn't have put money on who could have taken who in a Buck vs. Darius brawl ... except Darius wouldn't have been lured into that kind of fight. \n\n[...]\n\nAbsent Darius, the school's Black community only had two confederates with sufficient intellect and charisma to lead the forces on that side of the racial divide. Sadly for the disciples of the Almighty BBC, both were women. Not only was Taliyah's mom the Mayor, she herself was co-Captain of one of the establishment's most recognized bodies ~ the Cheer Squad.\n\nThe other was Jewel 'C. S.' Lafontant\u00e9. She was more infamous than famous, intelligent, un-aligned with any club, or activity, which awarded accolades, yet was overly endowed with a host of natural abilities as well as learned skills & talents. And, unlike Taliyah, -- absent Darius -- she felt the top spot was hers for the taking from the get go. \n\nStep one had been to sit at the feet of her mother and father, taking their counsel on the principles of asymmetric warfare, transforming weaknesses into strengths and how to locate, isolate and exploit the weaknesses of her enemies. Step two was accomplished Tuesday night when she and the rest of the Zulu Princess Posse jettisoned their boyfriends. From here on out, the ladies would be taking whatever dick they wanted. The times ~ they were a-changing."
    ],
    "authorname": "FinalStand",
    "tags": [
        "cheerleaders",
        "white man",
        "black woman",
        "group sex",
        "mmf",
        "politics",
        "police",
        "intrigue"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/wmd-ch-04"
}