{
    "title": "What You Wish For Pt. 05",
    "pages": [
        "Introduction\n\nSo what do you think? Will Tyler get back with Kristin? Allie, maybe? Hell, is Susan going to show up?\n\nAnd what about little Ben? Don't forget him.\n\nThis is it, the penultimate chapter. Only one more part to go.\n\nThanks to all of you who have taken the time to read it and comment.\n\nCHAPTER FOURTEEN\n\nThe doctor was right: Mom's recovery at home was far faster and more dramatic than Dad or I could've imagined. After three weeks, she was walking unaided, though still with a limp, and most of the lisp was gone from her voice. Her speech was still halting to the point you wanted to finish every sentence for her, but it was easy to understand every word out of her mouth.\n\nMost of that, I think, was due to Kristin bringing Ben by every afternoon. At first, I'm pretty sure Kristin intended to use that as an excuse to spend time with me. I was busy writing, though, and could only spare an hour or so during the afternoon to play around with Ben on the floor or feed him lunch or just watch him take a nap with Mom. Once he was down for his nap, I returned to my writing and tried to get the second book done. Then I'd go back down and spend another hour before dinner with my son, and back to writing. All told, my sleep was suffering.\n\nKristin hung around the room a couple days in a row, trying to engage me in conversation. I made it crystal clear that talk was not on the agenda, though, and she quit bothering me.\n\nAfter the first week of this, Kristin only hung around the first hour or so\u2013the time I was spending with Ben\u2013and came back after dinner to pick him up. She seemed more than content to let Mom and Dad have their time with him, the time she'd robbed us of, and I was spending two or three hours a day with my son while Mom and Dad spent the rest of the afternoon with him.\n\nYou may have noticed I called Ben my son just now. Well, that's because the DNA test came back only five days after I submitted my saliva. He was mine, to the exclusion of all men on Planet Earth and even a few other planets thrown in.\n\nThat made the rest of my lawsuit against Kristin perfunctory.\n\nAnd it was all taken care of around James McNally's conference table.\n\n* * * * *\n\n\"All right,\" McNally started, \"I've prepared a pretty simple agenda for this little settlement conference.\"\n\nHe passed out a piece of paper to each of us and I read it. He was right: It was simple. One - Custody. Two - Support. Three - Visitation. There was ample space on the nearly empty page to make notes on each subject.\n\n\"Jammer,\" Petrowski said, \"we really aren't ready to discuss all of this and you know it. We don't even have Mr. Collins's full financial disclosures. And he's got a book coming out now.\"\n\n\"I know that, Sandy,\" he said. \"But we can at least get the outlines started and then you can tell me what else you need.\"\n\n\"That won't be necessary,\" Kristin cut in, looking at me.\n\n\"Kristin,\" Petrowski said, her chubby little face reddening.\n\n\"No,\" Kristin said, leaning over the table and stretching her hand across, reaching for me to take it.\n\nNot knowing where this was going, I reached across and took her hand, holding it loosely.\n\n\"I wasn't kidding on what I said that day,\" she said, her voice low, her hand squeezing mine nearly to death. \"I'm sorry. I know I had no right to keep him from you. It didn't start out that way\u2013I didn't really know he was your's, or even suspect it, until he was five or six months old\u2013but I have no excuse for not telling you or at least doing something when I found out.\"\n\nI stared at her, frozen. Her jaw was set, though, like she was trying to hold it all together and not lose it before saying what she needed to say.\n\n\"You have every right to seek custody of Ben,\" she continued. \"And I know you have a really good shot at getting that. But I'm asking you not to do that, Tyler. Please. For Ben's sake, don't do it.\"\n\n\"Then what're you offering?\" McNally said, his voice soft and encouraging.\n\n\"We're thinking\u2013 \" Petrowski tried to interject before Kristin cut her off.\n\n\"If you want custody,\" Kristin said, \"I won't challenge it. Just be generous with visitation. Don't keep my son from me. Our son.\"\n\nShe was fighting to hold back her emotions, but her steely determination told me the offer was genuine. And now I had something to think about, and about ten seconds to make my decision.\n\nIt took nearly a minute before I made up my mind, which had Kristin ready to explode.\n\n\"Joint custody,\" I said. \"You can be the residential parent, Kristin. I'm not going to take Ben from you. But I want generous visitation.\"\n\nShe nodded, brushing the tears away that were now spilling down her cheeks.\n\n\"Okay,\" Petrowski said, her relief evident, \"then what about child support?\"\n\n\"I don't want any,\" Kristin said. \"Tyler will do what's right.\"\n\nI shook my head. \"Two fifty a week. And I'll pay for health insurance and medical expenses and set up his college fund.\"\n\n\"I don't want your money,\" Kristin said. \"I can\u2013 \"\n\n\"That's not nearly enough,\" Ms. Petrowski interjected, turning to McNally. \"You know that's a fraction of what the courts will give her.\"\n\n\"Not a dime,\" Kristin said.\n\n\"I'm going to have to insist,\" I said, ignoring the lawyers and smiling at Kristin. \"I'm not going to have our son living like a pauper because you feel guilty for being such a shit.\"\n\n\"Okay,\" Kristin sniffled, half laughing, half crying as her tears subsided. \"Thanks.\"\n\n\"Visitation?\" McNally said.\n\n\"Generous,\" I said.\n\n\"I think what we have going now is working well,\" Kristin said. \"And I want to expand it.\"\n\n\"But I already see him every day,\" I said. \"You've got to see him some time, don't you?\"\n\n\"I'm starting a job at the semester break,\" she said. \"Teaching at the grade school. One of the teachers is going on maternity leave, and they've offered me a contract. So I'm hoping you and your folks can watch him for me.\"\n\n\"You're going to be working?\" I said, more surprised at that than at the visitation proposal.\n\nShe nodded, smiling. \"I know. Too little too late. But better late than ever, right?\"\n\nI was shocked. She was trying. She was walking the walk, not just talking the talk.\n\n\"Holidays and weekends?\" McNally said.\n\n\"We'll work something out,\" I said. \"Just write something up for us to look at, and we can get this done.\"\n\n\"Kristin,\" Petrowski cut in, terrified as she watched her ship sinking, \"you've got to think about this. You're giving up a lot here.\"\n\nKristin looked at her, a sad and patient look on her face. \"I've already thought about it, Sandy. A lot. I'm doing what's right for Tyler and Ben. I'll get by, and I'm not going to take Tyler to the cleaners to do it. I need to stand on my own two feet.\"\n\nKristin turned to look at me, and I was trying to hold back tears of both joy at getting to see Ben every day and sorrow at seeing how much Kristin had changed after the fall of both of her marriages.\n\n\"Tyler would never screw me,\" she said, speaking to Petrowski but looking me dead in the eye. Then her eyes twinkled and she spoke to me. \"As much as I may hope otherwise.\"\n\nI only smiled.\n\n* * * * *\n\nI phoned Marisa that night. It was late, nearly eleven thirty, but she answered awake and alert on the first ring.\n\n\"Yes,\" she said.\n\n\"Hello,\" I said in response.\n\n\"Fine. Hello. What're you calling for?\"\n\n\"I want to take you to lunch,\" I said. \"Tomorrow.\"\n\n\"Why?\"\n\n\"Because of you, I now have a son that I'm getting to know.\"\n\nShe was silent.\n\n\"Well?\" I prodded.\n\n\"You don't owe me anything,\" she said, her voice so low I barely heard the words.\n\n\"But I do. A lot more than just lunch, really.\"\n\nShe was silent again, and I was ready to speak when she finally said something.\n\n\"You want I should just come out there?\"\n\n\"I've got a photo shoot in the morning,\" I said. \"Somewhere in Lincoln Park. For the book cover. I'm gonna be there anyway. And, well, since I'm there and all, and since this is the least I can do.\"\n\n\"About one?\" she said.\n\n\"Sounds perfect.\"\n\n\"Where do you want to meet?\"\n\n\"I'll pick you up,\" I said.\n\n\"That's\u2013 \"\n\n\"I already have your address in my GPS,\" I said. \"Got it from Susan. So really, it's no bother.\"\n\n\"All right,\" she said. \"See you then.\"\n\n* * * * *\n\nAt ten to one, I pulled up, and she was waiting on the curb for me.\n\nMarisa hadn't changed since we'd last met. Still had a huge, impossibly spiked head of black hair, black eyeliner and lipstick, black clothes. She had allowed for the autumn chill with a jean jacket, though.\n\n\"Where you in the mood for?\" I asked, opening her door for her before scurrying around to my side and getting in before getting ticketed for double parking.\n\n\"Whatever,\" she said.\n\n\"You're gonna have to help me,\" I said, concentrating on the narrow street piled with cars on both sides. \"Not my neck of the woods.\"\n\n\"Turn right up ahead,\" was all she said.\n\nFive minutes later, we pulled up outside a place on Halsted Street. Caf\u00e9 Ba Ba Reeba! it said on the big sign. And thank God they had valet parking.\n\nIt was a Spanish tapas restaurant, the kind I'd only been to a few times in the past. Being clueless, I let Marisa do the ordering, and she did well. Small plates of grilled octopus, garlicky potato salad, goat cheese in a light tomato sauce with grilled bread to spread it on. The piles of appetizers just kept coming and coming.\n\nAll told, it was great and there was enough to feed an army.\n\nMarisa, of course, loved it all, demolishing every bite on every plate with gusto. I'd have a bite or two, she'd polish it off. And so it went for an hour.\n\nWe spent the time catching up. School was going well for her, and she was actually starting an outline for a novel.\n\n\"An idea that popped up while I was working with you,\" she said cryptically, then said no more.\n\nInstead, she steered the conversation around to me and the book and the photo shoot for the book cover I'd endured that morning.\n\n\"Do you really think that's appropriate?\" a voice screeched from behind us as our meal neared the end.\n\nI turned to see two seventy somethings with blue hair and doddering, glaring husbands standing near our table on their way out. They were staring with hoity toity distaste at Marisa in her outfit.\n\n\"Have we done something to offend you?\" I said.\n\nThe look they gave me was like they'd just stepped in a pile of dog shit.\n\n\"This is a nice restaurant,\" one of the men said, looking at Marisa with his nose twitching.\n\n\"And I would've expected the patrons here to have better manners,\" I shot back. \"Apparently that's not something they check at the door, though.\"\n\nThe ladies gasped, the men glared, and Marisa snorted.\n\n\"If it would help,\" I continued, \"we can try to do something a little more inappropriate to offend you some more. Like interrupt your private luncheon with our snotty ass attitudes, for example?\"\n\nMarisa was covering her mouth with her napkin now, trying to keep her food in her mouth. The crew of oldsters harrumphed and put on expensive coats and silk scarves and stomped their way to the door. They managed to stop at the receptionist's station and say some hot words, I noticed.\n\n\"I'm sorry,\" Marisa said when I turned back to resume our conversation.\n\n\"About what?\"\n\nShe resumed the meal, now quiet and sullen.\n\n\"Will there be anything else?\" the waitress said, appearing as if by magic. Her looks told me she hoped there wouldn't be, which only got my dander up.\n\n\"Is there a problem?\"\n\nShe shot a look at the manager now standing next to the receptionist, then back to me, pleading with every ounce of her energy.\n\n\"I'd like a cup of espresso,\" I said. \"And my guest will have something for dessert.\"\n\nMarisa started to protest, her face telling me she just wanted to leave.\n\n\"You pick the dessert,\" I said to the waitress. \"And a glass of wine that will go with it, if you don't mind.\"\n\n\"Why are you doing this?\" Marisa said as the waitress left.\n\n\"Because,\" I said. \"Because I'm happy to be with you and I'm enjoying myself and I'm not going to let a bunch of old bastards ruin our lunch.\"\n\nShe nodded, her face softening.\n\nAnd she destroyed the dessert they brought her, too.\n\n* * * * *\n\nAnd so the next two months went. Work in the shop in the morning, see Ben for an hour or two a day between writing until eleven or midnight, get up, repeat cycle.\n\nKristin was still trying to spend time with me, showing interest in my every movement. I appreciated her efforts, but just wasn't sure I could ever love her again.\n\nThe newest novel, which I had yet to come up with a title for, was coming along great and I was nearly finished with the first draft. With all the shit that had happened to me since the first one was written, this one was, if anything, even darker than the original.\n\n\"Tyler?\" Kristin said, looking up from the screen after reading the outline.\n\n\"Yeah.\"\n\n\"You still hate me, don't you?\"\n\n\"Where's that coming from?\"\n\n\"This book. There's a lot of anger in it.\"\n\nI looked at her, not quite sure how to respond.\n\nThe silence grew, then she came over to the chair I was sitting in, leaned over, and kissed me on the lips. Not a romantic kiss with deep probing tongues and all that, but not a chaste kiss, either.\n\n\"I'm more sorry than you'll ever know,\" she said.\n\nI tried to smile, and she took this opportunity to sit in my lap and put her arms around me. If my folks hadn't been downstairs with Ben\u2013and if it hadn't been so long since I'd had any female contact of any kind\u2013I'd have jumped or pushed her off or something. But I didn't.\n\n\"I know I ruined it,\" she said, looking into my eyes. \"I know that. And I hate myself for it. I've been hating myself for quite some time, tell you the truth.\"\n\n\"Then why?\"\n\n\"Because I was a spoiled rotten little bitch and you wouldn't toe the line,\" she said.\n\n\"I tried. You know that, right? I thought that was what you wanted. You just wouldn't meet me halfway.\"\n\nShe nodded. \"I know, Tyler. It wasn't you. It was never you. You've got to believe that.\"\n\n\"Still,\" I said, absentmindedly stroking the soft skin of her arms as she held me.\n\n\"Yeah,\" she murmured. \"But it wasn't because he was better than you. He represented something better. Something I thought at the time was better. But I never wanted anyone else but you.\"\n\nI was so focused on her words I didn't even notice the increasing pressure on my hard on as she started swaying her hips against me.\n\n\"You can hate me,\" she said, her voice softening. \"I understand that. I would hate you, too. I did hate you, actually. When you were with Allie.\"\n\n\"That had nothing to do with\u2013 \"\n\n\"I know. Still, she told me how good you were. In more graphic detail than I cared to hear. And all it did was make me cry that I used to have you.\"\n\n\"Try being on my end of it,\" I said, feeling my hips now grinding back against her pelvis. \"I was the one that got dumped. Then I find out you were with him before we were . . . while you were still with me. Living with me. Not even separated, let alone divorced.\"\n\nShe nodded, biting her lower lip and grinding her pelvis down against me more urgently. She was close to cumming. I'd seen this look a million times, and I knew she was close.\n\n\"What're you doing?\" I said, my voice little more than a hoarse whisper.\n\n\"You hate me,\" she said. \"I want you to take it out on me. To . . . I . . . .\"\n\nShe shuddered, fighting to keep her eyes open as she orgasmed, her gaze blazing into mine as her chin lifted and her body tightened.\n\n\"Then what was that?\"\n\n\"It's been so long,\" she said. \"Please?\"\n\nI was hard as a rock, my cock straining for release.\n\n\"You want me to take it out on you, to punish you, and you just got off on me? And I'm still sitting here listening to you?\"\n\nGuilt swept her features, her eyes dropping.\n\n\"And we're supposed to do this when?\" I demanded. \"After you've had two or three more orgasms for punishment?\"\n\n\"I'm sorry,\" she said.\n\n\"You're gonna be sorry,\" I said, standing, spinning, and dumping her in the chair. I strode to the door, locked it, and returned to the chair.\n\n\"Suck it,\" I said, standing in front of her.\n\nShe looked up at me, her face now unsure.\n\n\"You said you wanted me to take it out on you? Well you've got me all fucking worked up now, so do something about it.\"\n\nHer fingers trembled as she reached toward my zipper, slowly unbuttoning my pants before pulling down the zipper.\n\n\"Just a minute ago you were all hot and bothered to get me going,\" I whispered. \"Why the hesitation.\"\n\nShe looked up and there were tears welling up in her eyes.\n\n\"I . . . you . . . I didn't mean\u2013 \"\n\n\"I thought so,\" I said, stepping back and getting my pants zipped and buttoned again.\n\nAfter a few minutes of silence, Kristin spoke.\n\n\"You've changed so much.\"\n\n\"You ripped out my heart and stomped that sucker flat, Kristin. What did you expect? Gratitude?\"\n\n\"Not all this anger,\" she said.\n\n\"I'm not angry,\" I said. \"I just think you're playing games with me. Games I don't have the time or the heart to play.\"\n\nShe started to speak a couple of times, but stopped herself. I was content to wait her out. Until about the sixth time, that is. Then my patience snapped.\n\n\"Just say it, will you?\"\n\n\"I'm sorry,\" she said. \"About a few minutes ago and all. It's just that . . . well . . . I've been thinking about it.\"\n\n\"About what?\"\n\n\"You know. Kind of a friends with benefits kind of thing? I want to be with you, spend time with you. And if that's the only way I can, then so be it.\"\n\nI shook my head. \"I did enough of that when we divorced. Enough to last me a lifetime.\"\n\n\"Then a date?\" she suggested.\n\n\"Let me think about it.\"\n\n\"But you've been thinking about it,\" she said. \"You've been thinking about it for a couple of months. And every time I bring it up, you just say you'll think about it.\"\n\n\"Do you want my immediate answer?\" I said.\n\nHer lips tightened at the look on my face and the tone in my voice.\n\n\"Do you ever think you'll say yes? Not to taking me back. Just to giving me a chance? A chance to prove how much I love you and how much I'm willing to do to make it up to you?\"\n\n\"I don't know, Kristin,\" I sighed. \"I honestly don't know.\"\n\nCHAPTER FIFTEEN\n\nIn early November, I got a phone call from Natalie.\n\n\"Two weeks tomorrow,\" she rasped.\n\n\"What's two weeks from tomorrow?\" I said.\n\n\"The party to celebrate the release of your first Great American Novel.\"\n\n\"It's a mystery thriller,\" I corrected her.\n\n\"Oh don't be modest,\" she cooed, coughing at the end. \"It's brilliant, and we've got four famous authors to agree with us on that.\"\n\n\"Really,\" I said, surprised that the ploy of sending out advances for comments had worked. \"Who read it?\"\n\n\"James Patterson, Tammi Hoag, Dennis Lehane, and, get ready for this, Stephen King.\"\n\n\"Stephen King?\"\n\n\"Yeah,\" she said, as surprised and awed as I was. \"He usually doesn't comment on much, but he really liked this one. To the point where he's maybe gonna be at the party.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"Then what do you need from me?\"\n\n\"New suit,\" she said. \"And be at the party on the sixteenth looking like an author. And being really nice to the publishers and everyone else.\"\n\n\"Okay,\" I said, then thought of something. \"Who else is gonna be there? From our group?\"\n\n\"Well, I'll be there of course. And Susan. I figured you'd want her there.\"\n\n\"Of course,\" I said. \"And Marisa?\"\n\n\"Marisa?\" she said, her voice getting wary. \"You sure?\"\n\n\"She's really the one who deserves the credit,\" I said. \"You know that. She's the one who got you to look at it\u2013at me\u2013and her editing was . . . well, it's a way better book.\"\n\n\"Okay,\" she said slowly. \"I'll see what we can do.\"\n\n\"You don't sound so sure,\" I said.\n\n\"Don't get me wrong,\" she said. \"I mean, a few people know of her. It's just that . . . you know.\"",
        "\"None of them have ever seen her face to face?\"\n\n\"Something like that.\"\n\n\"Well she's coming,\" I insisted. \"If I have to drag her there kicking and screaming. It'll give her some exposure, maybe help her make some connections.\"\n\nNatalie sighed. \"It's your party.\"\n\n\"I'll take care of it myself,\" I said. \"You don't worry. I'll take care of everything. You just make sure they don't throw us out when we get there, okay?\"\n\n\"You're the boss,\" she said, and rang off.\n\n* * * * *\n\nThe next day at nearly noon, a FedEx driver pulled into the driveway and hauled a big, heavy box to the front door.\n\n\"Tyler Collins?\" he said.\n\n\"That's me,\" I said.\n\n\"Sign here,\" he said, turning his electronic delivery pad upside down.\n\nI scrawled my signature, then carried the box inside.\n\nIt was twenty copies of Long Gone.\n\nMy first book.\n\n* * * * *\n\nI immediately quit writing for the day, then drove into Chicago to get three new suits with all the accompanying shirts, ties, socks, belts, and such. It set me back eight grand, but I was not going to look like a hayseed in the blinding lights of the New York literati scene.\n\nMy repeated calls to Marisa's apartment had gone unanswered, and I didn't bother leaving a message. Instead, by five thirty, I was camped out on the stoop of her apartment building.\n\nI was nearly frozen and ready to give up by ten thirty when I saw the familiar, long legged gait walking up the block toward me. She was with someone, and they came to a halt at the stoop.\n\n\"Tyler Collins,\" she said.\n\nThe tall, skinny kid with her had greasy hair, tight fitting jeans, and three earrings in each ear. He looked like a smack-addicted lead guitarist for a punk rock band. He had a bottle of cheap wine in one hand and a cigarette burning in the other.\n\n\"I tried calling,\" I said.\n\n\"I've been out,\" she said. \n\n\"I just need a few minutes.\"\n\nShe turned to the guy with her. \"Get lost.\"\n\n\"But\u2013 \"\n\n\"Now,\" she said, staring him down.\n\nHe shot me a dirty look, then did what she said.\n\n\"Hope you've got something to drink with you,\" she said. \"He just took my evening's entertainment with him.\"\n\n\"C'mon,\" I said. \"We'll go get a drink.\"\n\n\"Nah,\" she replied, turning and walking back the way she came. \"There's a liquor store on the corner. You're buying.\"\n\nI hurried after her, and ten minutes later she was letting us into her apartment, wine in hand. I bought her two bottles to make up for ruining her date.\n\n\"Sorry 'bout the interruption,\" I said, shedding my coat and standing against the radiator to warm my ass and legs.\n\n\"You should be,\" she said, her back to me as she reached up and pulled out two jelly jar glasses for the wine. \"I haven't been laid in months.\"\n\n\"I brought you a present,\" I said, reaching into my overcoat and pulling it out.\n\nShe turned, carrying the glasses and wine bottle into the impeccably neat living room area of her loft apartment. She looked into my outstretched hand as she passed, setting the bottle and glasses down.\n\n\"Sit,\" she ordered, pouring the glasses to the brim.\n\nI obeyed, holding the book out to her.\n\n\"Mine?\"\n\nI nodded.\n\nShe opened it. \"To Marisa,\" I'd written on the inside cover. \"A million thank yous can never repay all you've done to help my dream come true. With incredibly sincerity and appreciation, Love, Tyler Collins.\"\n\n\"Very nice, Tyler Collins,\" she said after reading it.\n\n\"You didn't see it all,\" I said, picking up the book and flipping to the dedication page before handing it back to her.\n\n\"With heartfelt gratitude and great affection,\" I whispered as her eyes read it. \"This book is dedicated to the most incredible sisters on Planet Earth. For Marisa Key and Susan Karapova.\"\n\n\"You're a friggin' sap,\" she said, flipping the book shut and placing it on the coffee table between us.\n\n\"Guilty,\" I said. \"But I meant every word of it.\"\n\nShe just looked at me, sipping her wine then gulping it down in one fell swoop.\n\n\"Okay,\" she said. \"Then let's have a little party, shall we?\"\n\nShe got up and turned on the sound system. John Coltrane was playing a sax line seeped in melancholy.\n\n\"It's good,\" she said, sitting back down and refilling her glass.\n\n\"There's more,\" I said, taking a sip of wine.\n\n\"It gets better?\"\n\n\"They're having the publication party in a couple of weeks. In Manhattan. And the publishers and probably a lot of authors are gonna be there. Maybe even Stephen King.\"\n\n\"Stephen King?\" she snorted. \"Now there's someone who could use a better editor. Jesus, his early stuff was so good. So promising. Now it's diarrhea of the word processor.\"\n\n\"Still,\" I said, \"it would give you a great chance to meet a lot of really big people.\"\n\nHer eyes narrowed as she took in my meaning.\n\n\"I'm paying,\" I said. \"It's the least I can do. Not just for the book. For helping me get it published, for editing.\" I took a sip of wine. \"For my son.\"\n\nShe stared at me for a minute, then started laughing.\n\n\"I'm serious,\" I said.\n\n\"I know you're serious,\" she said. \"That's what's so pathetic about it. I mean, c'mon, can you picture me there? With Stephen King? Maybe John Updike? Get real, Tyler.\"\n\nI slammed my glass down, startling her for the first time since I'd known her.\n\n\"What the fuck are you afraid of? Huh? You worried that if you meet these people\u2013maybe make a good impression\u2013you think you'll actually have to join society? This is good for you. For your career. And you laugh at me? You won't let me even try to repay you for all you've done for me?\"\n\nShe said nothing, preferring to fix me with a fiery stare as she drank her second glass of wine in one fell swoop.\n\n\"That's a good idea,\" I said, picking up the bottle of wine and holding it toward her. \"Get drunk. Dodge your big chance.\"\n\nShe let me refill her glass, but took only a sip before setting it down. Then she got up and went to the window, staring outside while John Coltrane's sax managed to set the mood in the dim apartment.\n\n\"Okay,\" I heard her say. \"I'll go.\"\n\nI got up and walked to the window.\n\n\"And you'll have fun and try to meet people and be nice?\" I said, standing next to her and looking down at the dark street below.\n\n\"I'll try.\"\n\n\"And you'll celebrate the publication of our book with me?\"\n\n\"It's your book,\" she mumbled.\n\nI took her by the shoulders, feeling her tense up under my hands as I spun her to face me.\n\n\"It's our book. I never could've done it without you, and it would've been a piece of shit without you fixing it.\"\n\nHer eyes stared into mine. Those beautiful, deep, dark eyes with the Asian flair.\n\nThen her face neared mine, and her impossibly silky, pillowy lips were on mine. Soft and gentle at first, then with more urgency as her tongue sought mine and her hand went to my neck and pulled me in closer.\n\nI was slow at first, surprised and taken aback. I'd never thought of kissing her, let alone dreamed she'd be the one to initiate anything. Yet, here I was, feeling her body meld against mine, her urgency conveyed as her breasts pressed against my chest and her other hand went to my ass and pulled me in closer to her pelvis.\n\nWithout conscious thought, I was kissing her back and running my hands over her back and through her hair and over her sides. We were, both of us, hungry for each other in a way I'd never experienced. It was frantic, helpless, swept in a tide of suppressed desires I only now realized I'd long felt for her. It had always been there: That something that just made me want to screw her silly.\n\nWhen her hands went to my pants, tugging my shirt out before unbuckling my belt and fumbling with my button and zipper, I knew she wanted this to go the whole way. I knew, too, that I suddenly wanted this more than anything in the world, and my fingers felt around her back for the zipper to her skirt.\n\nWithin seconds, we were clad only in shirts and underwear, my socks and her pantyhose pulled off and flung to the far reaches of the room. My hand was up the back of her t-shirt, trying to unclasp her bra, and she was fumbling with the buttons on my shirt.\n\nAnd the whole time we kissed. Our lips mashed and tongues dueled; she sucked in my earlobe and blew in my ear and I kissed up and down her neck to the hollow at the base and back up again.\n\nThen, her bra loosened, I snuck a hand back around front and squeezed her breast. She moaned into my ear, then pinched my nipple, causing me to yip into her neck. But this just increased our need.\n\nI stepped back for a minute, drinking in the sight of her as I pulled my shirt off.\n\n\"Those, too,\" she said, watching me with blazing eyes.\n\nI pulled off my underwear, and her look got all the more feral with hunger.\n\n\"Your turn,\" I said, reaching out and pulling her t-shirt above her head to reveal a perfectly flat tummy softly toned with muscle. There was the trace of a tattoo\u2013a comet with little glitters of comet dust trailing\u2013starting above her left hipbone with the tail of the comet trailing away to the middle of her underwear.\n\nShe shrugged off the black lace bra, giving me only a brief glimpse of two perfectly shaped breasts with tiny, dark areolae and jutting nipples. Then she was pressed back into me, pushing me back against the couch.\n\nI fell onto the couch with our mouths still together, then I felt her break away from me.\n\nShe took a few steps back, looking down at me, hesitating for a moment. I tried to reach out for her, to pull her back in, and that seemed to make whatever decision she was contemplating. She gave a triumphant smile, then slowly pulled her panties to her ankles.\n\nStanding before me, tall, sleek, and exotic, she was the most incredibly sexual creature I'd seen in my life. Her breasts, perfectly shaped and seemingly huge on her lithe figure, her taut muscles, her long, smooth legs meeting at a shaved juncture accentuated only by a narrow strip of fine, silky black hair. From that strip arose the tail of the comet tattoo, which only added to her exotic beauty.\n\nThen she was back, hovering over me, guiding me into her incredibly hot and impossibly tight inferno.\n\nHer mouth was back on mine, and I kissed through her muffled moan as she sank onto me inch by inch. When I finally bottomed out, doubting for a moment or two that I'd get all the way in, she rested there before starting a slow back and forth grind of her hips.\n\nMy hands were feeling her, squeezing her breasts and pinching her nipples, kneading her perfect ass and enjoying the silky smooth skin of her back. Yet, our lips remained locked together, our hunger for each other's kisses unabated as her rocking on my cock increased until she was moving up and down faster and faster and she was crashing in orgasm.\n\nEven in her orgasm, we continued our kisses, her's becoming little nips.\n\nWe only broke our kiss when I neared release.\n\n\"I'm getting close,\" I warned.\n\nAt that, her hips moved with blinding speed, urging me on as her lips again sought mine.\n\nWith a long groan, I exploded into her, and she had another orgasm of her own, though smaller than the first.\n\nThen we just held each other, her head on my shoulder and my hands stroking her hair as my cock softened inside her.\n\n\"Okay,\" she said after ten minutes or so. \"I'll try to behave myself at your party.\"\n\nThen she disentangled and her lips started moving down my chest, paying attention to my nipples while her fingertips grazed my cock and balls.\n\n\"Think we can play again?\" she said. Then she engulfed me in her mouth.\n\nTwenty minutes of mutual oral ministrations later, we played again.\n\nAnd it was good.\n\nReally good.\n\nFucking amazing, actually.\n\n* * * * *\n\nI spent the night at Marisa's, spooning into her warm soft body and sleeping like a baby. I awoke early, somewhere around five thirty, to the sound of a shower.\n\nGetting out of bed, I tiptoed silently to the corner of the room and into the bathroom.\n\n\"That you?\" she said when I opened the door.\n\n\"Expecting someone else?\"\n\n\"Done in a minute,\" she said.\n\n\"Wait a sec,\" I said, quickly taking a leak before going to the shower and sliding back the curtain.\n\n\"Good morning,\" I said.\n\n\"Morning,\" she said, her eyes closed as she rinsed the shampoo from her hair.\n\nEven having seen her fully naked scant hours before, the site of her wet, glistening body before me still took my breath away.\n\n\"At ease, soldier,\" she said, her eyes on my growing appendage.\n\n\"Sorry.\"\n\nShe smiled. \"Don't be.\"\n\nI stepped into the shower with her. While I could tell you we spent the next half hour having wet, sensuous monkey sex, that would be a lie. Instead, she stepped out only seconds after I got in, and I quickly scrubbed up and joined her within ten minutes in the kitchen area, both of us fully dressed with wet hair.\n\nWe sat at the table, sipping strong, scalding coffee, neither of us wanting to speak.\n\n\"So about last night,\" she started after nearly five minutes.\n\n\"What about it?\"\n\n\"Just don't go thinking you'll get a repeat performance is all,\" she said, her eyes on the cup in her hands. \"It's just . . . well . . . been awhile, y'know?\"\n\n\"For me, too,\" I agreed, staring at her and meeting her eyes as she raised her head. There was a flash of anger there, and I smiled.\n\n\"Still,\" I continued, \"that's not why it happened. At least not on my part anyways.\"\n\n\"Really,\" she said, her voice cool.\n\nI leaned across the table. \"I'm not saying I love you. Hell, I don't even know how much I really like you.\"\n\n\"Then what are you saying?\"\n\n\"That I see something there. Something in you that really interests me. A lot. And I want to get to know you better.\"\n\nShe harrumphed. \"Seems you got to know me pretty well last night.\"\n\n\"And, to be honest, I sort of regret that.\"\n\n\"Why?\" she demanded. \"Not what you expected.\"\n\n\"Better actually.\"\n\n\"Then what's so wrong with last night?\"\n\n\"Because now you'll think I'm trying to get to know you better so you'll give me a repeat of last night. And that's not why I want to know you better.\"\n\n\"I don't date,\" she said, her voice soft with a twinge of something. Regret? Insistence? I couldn't tell.\n\n\"Then we won't date,\" I said.\n\n\"Just fuck buddies?\" she challenged.\n\nI shook my head. \"Friends.\"\n\n\"I have enough friends already.\"\n\n\"So what's one more? You really so popular you can't fit me into your busy schedule?\"\n\nShe sipped her coffee, staring at me as she did so. \n\n\"You don't even know me,\" she said.\n\n\"That's the point. I want to get to know you.\"\n\n\"We're nothing alike,\" she argued, getting up and refreshing her coffee before refreshing mine. \"You're . . . .\" She looked me up and down, her right eyebrow raised.\n\n\"What?\"\n\n\"A fucking yuppie.\"\n\n\"So it comes down to clothing?\"\n\nShe shook her head. \"It's more than that and you know it.\"\n\n\"Really? Like because I wear jeans and dress shirts and you dress like a, like a . . . well, like you do, then that means we can't find out more about each other? Maybe spend some time together? Dinner or drinks or something?\"\n\n\"You saw what happened when we went out to lunch. People look past you. They focus on me. And they think I'm a freak.\"\n\n\"Then why do you do it?\" I asked. \"You know how they look at you, so why do you dress like that?\"\n\n\"Because it's none of their fucking business,\" Marisa said, her voice rising. \"I want them to look at me for me, not for how I dress.\"\n\n\"And yet here I am, asking to do just that, and you're refusing. So again: Why?\"\n\n\"You wouldn't understand.\"\n\n\"Try me.\"\n\nShe glared at me in response, clamming up.\n\n\"Fine,\" I said. \"Then I'll call Susan. You know she'll tell me.\"\n\n\"Leave her out of this.\"\n\n\"Not gonna happen.\"\n\n\"You have no right, Tyler.\"\n\n\"I know,\" I said, my eyes meeting her's. \"Call me selfish. Call me a prick. But I'm gonna find out what makes you tick. One way or the other, I'm gonna find out.\"\n\n\"You don't know what it's like,\" she pleaded. \"I've seen you. The way everyone back in that little hicksville town looks at you. You were handsome. Popular. The golden boy. I was none of those things.\"\n\n\"What? Growing up?\"\n\n\"Growing up. High school. College. I was a freak. The tall weirdo with no friends, no money, and no chance of getting either.\"\n\n\"And so you decided to\u2013 \"\n\n\"I decided to become my own person. I tried it their way, but it got me nowhere. Now I'm doing it my way, okay? And it's going just fine.\"\n\n\"Oh really,\" I shot back. \"Bringing home some scrawny piece of shit every month or so to get laid, refusing to form any attachments or friendships. That's working out just fine?\"\n\n\"Fuck 'em,\" she said, slamming her cup on the table and spilling it all over her hands and the table. \"And fuck you, too.\"\n\nShe glared, her face on fire with anger and resentment and a million other emotions I couldn't really read. I didn't blink under her gaze.\n\n\"I like you just the way you are,\" I said, reaching across the table. \"I don't care if you change one bit.\"\n\n\"Yeah, right. Say that in two weeks. Say that when you and I go to your precious little party and they all look at me like I'm some kind of goddamned monster. And you're a fucking nut job because you're with me.\"\n\n\"I don't care about them.\"\n\n\"You say that now, but you will. You will care about them. About what they think. And what your parents think and your friends and everyone else.\"\n\nHer voice was pleading now. She was convincing herself that I was no different than the others.\n\n\"Then try me,\" I said. \"What've you got to lose? The worse that'll happen is we'll spend some time together and then it'll all burn out. And you'll be in the same place you are now.\"\n\n\"But I don't want that again,\" she pleaded. \"Don't you see that? How many times do I have to get rejected by someone\u2013by everyone\u2013before I'm allowed to just quit trying to make everyone happy? How much pain do you think I should go through? How many times do I need to be treated like something someone stepped in?\"\n\n\"I'll never treat you like that,\" I promised. \"No matter what happens, I know I'll never treat you like that.\"\n\n\"They all say that. At the beginning, that's what everyone promises. But then they do.\"\n\n\"So what's the alternative? Go through life in a series of one night flings and die old, alone, no one to talk to?\"\n\n\"Or get treated like shit for the next fifty years,\" she shot back. \"There's a better alternative.\"\n\nI sat back, sipped my coffee, and looked at her. Marisa was almost frantic in her pleas for me to just let it be. There was something there, something more. A kindness. Loyalty even. She'd read my book\u2013a book by a no name nobody\u2013and seen something. And for me, a total stranger, she'd given up weeks of her life to help. She could say it was because she just wanted to see the book published or because it was good for her career. If that were the case though, she didn't have to work as hard as she had.\n\nNo, she cared about people and about acceptance. She just wanted that acceptance on her own terms.\n\n\"I want to take you to dinner,\" I said. \"You pick the place. Wherever you're comfortable. Dress how you like. I don't care. I just want to take you to dinner.\"\n\nHer shoulders collapsed at the realization that I wasn't going to give up. Her face dropped to the table, like all the fight was gone.\n\n\"Okay,\" she finally whispered.\n\nI got up and went around the table, kneeling at her side. I cupped her chin in my hands and turned her face to mine, staring into her dark chocolate eyes.\n\n\"We can go as far as you want,\" I said. \"You just wanna be friends? Fine. You wanna maybe see if there's more there? Then that's fine, too. Your pace, your choice. Okay?\"\n\nShe nodded her chin in my hand.\n\n\"But I promise,\" I continued. \"From the bottom of my heart. I already know you and I've known you long enough to know what I'm getting myself into. So I promise I won't throw you away, okay?\"\n\nHer lips tightened and her eyes blinked a few times, like she was trying to hold back tears. Then she put her arms around my neck and pulled me in for a hug.",
        "\"Okay,\" she said. \"Just remember you promised.\""
    ],
    "authorname": "Rehnquist",
    "tags": [
        "oral",
        "one on one",
        "divorce",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-you-wish-for-pt-05"
}