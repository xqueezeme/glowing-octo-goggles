{
    "title": "Descent into Depravity Ch. 05",
    "pages": [
        "This is the fifth in a series of stories about a schoolteacher, Alice, who sinks into depression after her husband's death and then discovers sex at a level she never knew with her late husband. Her depression cured, she moves from an affair with her best friend to include her friend's husband in a night of debauchery. \n\n***** \n\nAs Joan drove away I turned and walked back into the house. I flopped down on the couch and drew a deep breath. I was exhausted. The last four days had been more sex, sex with a real person, than I could ever remember having had in a similar period. Hell, it was more sex than I had in a year with my late husband, Larry. \n\n\"Am I in love?\" I asked myself, reverting to my habit of speaking my thoughts aloud in my empty house. There was a long silence while I thought. \n\n\"No, not in love,\" I eventually responded to myself. Joan was my good friend and had been so for years, and after the last four days I could think of her as my lover, but it wasn't that gooey, can't live without her, when can I see her again kind of love. Did I want to jump into bed with her again? \"Sure, but not tomorrow,\" I said. \"It needs to rest. . . . whatever it is,\" I laughed aloud at my ambiguity. \n\n\"Do I love her?\" \n\n\"No.\" \n\n\"Is she my friend?\" \n\n\"Yes.\" \n\n\"Do I lust after her?\" \n\n\"Absolutely.\" \n\n\"Well, maybe not right now,\" I told myself. After the last four days, I wasn't lusting after anyone or anything. \n\n\"I'm satiated,\" I said aloud. \"I don't want sex now. Not with Joan, not with Larry's porn collection, not at all.\" \n\nSo what did I do? I cleaned house. Frankly the place was a mess after four days of more our less non-stop sex all over the house. I worked at it until midnight and then, when I had finished putting on my freshly washed sheets, I fell into bed and slept until seven. That was hours earlier than Joan and I had been climbing out of bed, but it was a full seven hours of uninterrupted sleep. The sleep with Joan was far from uninterrupted. It was more like a series of longish naps punctuated with more sex. \n\nThe next day was more of the same. The house was clean, so I tackled my yard: trimmed and mowed the lawn; dead-headed rose bushes; and pulled weeds in a bed or two I had missed earlier in the summer or where the nasty little buggers were making a comeback. I even got out an edging tool and cut back the grass that had been encroaching slowly onto the front walk for years now. The amazing part was that I didn't think about sex the entire time. \n\nI wore a baggy old pair of jeans and a T-shirt (with appropriate undergarments) so I wasn't showing anything off to the neighbors. When I finished the yard work and cleaned up everything I had pulled or cut, I had a sandwich and a glass of milk for lunch (no wine). I took a nap (just sleep, no masturbating) and then went for a long run. \n\nDuring the run my mind stayed on my running, focused on the sensations of my body arising from the exercise and the heat. Walnut Creek really can be hot this time of year. I was working totally different muscles than I had been using during the last four days. Unlike my more customary running, my mind didn't drift off to sex and there certainly wasn't any masturbating in my favorite secluded copse in the park. \n\nAfter the run, I showered (just a shower, nothing else). Then I dressed conservatively (i.e., with undergarments) and went to the market. There was a lot to buy. Joan and I had eaten everything in the house. I put away the groceries, fixed a healthful dinner (Joan and I had been living on microwave oven food and ice cream the last few days) and then I turned on the TV and watched a baseball game. I hadn't seen one since Larry died. It was almost interesting. The Giants won 5 to 3 with a two run homer in the ninth. \n\nSunday was more of the same, and on Monday I was actually looking forward to teaching my midday remedial English class. I was so enthused about Hamlet that I'm sure the kids thought I had lost my mind, not that they cared. \n\nThen on Tuesday afternoon Joan called me and things changed again. \n\n\"Joan?\" I answered seeing her identity on my cell phone screen. \n\n\"Hi lover.\" Her voice was low, seductive. Apparently she wasn't satiated. \n\nSuddenly neither was I. Just those two words spoken in her low husky voice sent a charge of lust through me. After four days of not even thinking about sex, I wanted it again. I wanted it badly. \n\n\"Hi,\" I responded trying to match her tone. \"Did you miss me?\" \n\n\"Yes.\" Her tone was breathy now. I was being seduced over the phone. But who was going to ask first? Did I come out and say what I was thinking\u2014I want to fuck you? Or did I wait for her. \n\n\"Are you at home?\" \n\n\"Yes.\" \n\n\"Good. I'll be right over.\" \n\nYes, I thought. Yes, yes, yes! She's coming over and she asked first. I didn't have to beg for it. I could feel my pussy starting to dampen. I wanted to do a little dance like a football player in the end zone after scoring a touchdown. \n\n\"We have to talk.\" \n\nOh, oh! My lust evaporated, and now there was a knot in the pit of my stomach. It's never good when a lover says, \"We have to talk.\" Never. \n\n\"About Herv\u00e9.\" \n\n\"Herv\u00e9? Did you tell him? About us?\" \n\n\"Yes.\" \n\nI was silent, fearing the worst. \n\n\"He's not mad.\" \n\n\"Okay . . . what does he want,\" I asked. \"It's about us, isn't it?\" \n\n\"He wants to fuck you.\" \n\nI laughed. After a years' long drought in my sex life I suddenly had a surplus of suitors. \n\n\"Do I get a say in this?\" I was feeling a little taken for granted. Had she just volunteered my services to placate an irate husband? \n\n\"Of course. It's complicated, but it's going to be fine. I'll explain when I get there. Right now I want to eat your pussy more than anything in the world. See you in fifteen and you better be naked when I get there.\" The phone went click without a response from me. \n\nI didn't know whether to be excited or pissed. I paced back and forth waiting for Joan to arrive. Without even giving it any real thought, I stripped my clothes off, leaving them scattered about as I walked. Every minute or two I peeked through my curtains looking for her car. \n\nWhen she arrived I stood nervously by the door. I didn't even let her knock. I just opened it, pulled her in, slammed her against the wall, and began to rape her mouth with my tongue. Fuck Herv\u00e9, I thought. We could talk about him later. \n\nJoan must have been of the same mind, because it was only moments before we lay naked in bed in a long kiss, our bodies entwined so that each was massaging the other's pussy with a thigh. God, she was wetter than I was. She must have been planning this all morning. We thrashed about, soon finding ourselves in a 69, each lapping at the others sex, panting and groaning with passion. Within what seemed like forever, and still like just minutes, we had both climaxed and were lying gasping next to each other. \n\nI sat up and crossed my legs, facing the still prostrate Joan. \"Now,\" I said, \"there was something you wanted to talk about?\" \n\nHer look was blank. \n\n\"Herv\u00e9? I prompted\" \n\n\"Herv\u00e9?\" she responded, her brain still fogged with lust. \n\n\"Yes, Herv\u00e9,\" I said. \"Your husband. Your husband who apparently wants to fuck me.\" My tone was perhaps a bit harsher than I intended, but it did bring Joan out of her post-coital fog. She sat up and leaned back against the headboard, pushing her long dark hair out of her face. \n\n\"No, no. It's not like that. Herv\u00e9 doesn't want to fuck you.\" She paused for a moment. \"Well he does want to fuck you. He has for years, but I have been telling him to stay away from my friends.\" \n\n\"I'm not sure I see a difference.\" I wasn't really opposed to fucking Herv\u00e9, but I was still feeling taken for granted. \n\n\"Actually, what he wants to do is to seduce you.\" \n\n\"Seduce me?\" Well this sounded a little better. Someone was at least acknowledging that my input mattered. \n\n\"So how is this seduction going to occur?\" I asked. \n\n\"Oh, he'll do it the way he always does\u2014with food.\" \n\n\"Food?\" \n\n\"He will cook for you. For both of us actually. By the time dinner is over we will both be climbing his frame. It always works.\" \n\n\"So there have been other women you two have shared? I thought it was only Gina?\" \n\nJoan grinned a caught-in-a-fib grin. \"Well, there might have been a couple of others.\" \n\n\"Now?\" \n\n\"No there hasn't been anyone else for months. Just you. I swear.\" \n\nI wasn't sure I believed her, but then again, I wasn't sure I cared as long as I wasn't currently sharing her with anyone. Anyone but Herv\u00e9 that is. \n\nWhile she was talking she had moved her leg around until she had her foot almost into my lap. Actually it was between my legs, and she was massaging my pussy with her big toe. I suddenly didn't care about Herv\u00e9 and his dinner of seduction or Joan's other girls. I just wanted more sex with her. \n\nAnd that's what we did. We spent the next hour in bed kissing and molesting each others sex until we each brought the other to another long, slow, delicious orgasm. It wasn't one of those sudden blow-you-away violent orgasms. It was softer and slower. It just went on and on for what seemed like forever. Maybe it was a series of orgasms. I don't know. But it was nice. Then Joan had to leave to take Herv\u00e9 off to the airport for another business trip. \n\nHerv\u00e9 was in and out of town (but more out than in) for the rest of the summer, which delayed his promised dinner of seduction, but that didn't matter to Joan and me. We continued our affair throughout the summer\u2014not every day, but two or three times a week. It was the best summer I could remember. \n\nDinner with Herv\u00e9 \n\nIt was early September. School had started again, and I was back to teaching seventh graders. They seemed brilliant compared to the 18-year-olds I had spent the summer trying to flog with remedial English. I was working full time now, and Herv\u00e9 was spending more time in town, so I hadn't seen Joan for almost two weeks, and I missed her. . . and I missed the sex. This time I called her. \n\n\"Alice?\" she answered. \n\n\"Hi Joan . . . It's been awhile.\" \n\n\"It has,\" she said. \"I'm glad you called. Herv\u00e9 wants to have dinner.\" \n\n\"You mean?\" \n\n\"Yes, all he can talk about in bed is how he is going to seduce you.\" \n\n\"What have you told him . . . I mean about me?\" \n\n\"I told him you were willing to let him try.\" That was fair I thought. Actually as hard up as I was after two weeks with no sex, I would probably rip his clothes off if he walked in my front door right now. \n\n\"When?\" I asked. \n\n\"Tomorrow night. Okay?\" \n\n\"That soon?\" I was suddenly feeling nervous about this idea. \n\n\"Yes. Unless, of course, you've changed your mind.\" \n\n\"No, no. I'm still okay.\" \n\n\"Good. Then we will see you here about seven. I can't tell you how excited he is about this. He's out buying food right now. Even if he doesn't seduce you, we are all going to have a fabulous meal. Herv\u00e9's a great cook.\" \n\n\"Does he have any other skills I should know about?\" \n\nJoan laughed. If a laugh could sound lascivious that laugh did. \"Oh yeah,\" she said, dragging out the last word. \"He has a lot of skills, but you will have to say yes to find out about them.\" \n\n\"Like what?\" \n\n\"You'll see.\" \n\n\"Come on Joan. Give me a hint.\" \n\n\"Okay, just one. He can talk dirty better than any man I've ever had sex with. It's sort of a m\u00e9lange of English, French, and Basque, with a little Spanish on the side. Even if you don't know what the word means, it always sounds just filthy the way he says it.\" She made a noise like a shudder. \"My panties are getting wet just thinking about it. Gotta go,\" she said. \"Wear something sexy. Bye.\" \n\nI stood in my living room holding my now silent phone. What had I just agreed to? There was no question about it. Herv\u00e9 was handsome. Fuck he was \"hot\" to use the language of the horny teenagers I had been teaching all summer. He was moderately tall, about six feet, with dark curly hair, an olive complexion, and dark brown eyes, the kind of eyes you can just lose yourself in if you aren't careful. I had seen him out by their pool in a bathing suit once. He was broad-shouldered, lean, and well muscled. Not like a Muscle Beach body builder mind you, but still he looked strong, with well-defined muscle groups in all the places I like to see them on a man. He was wearing baggy swim trunks, so I didn't have a good look at his \"package\" as the kids say. But according to Joan he was not deficient in that regard. And Joan had never complained about him being abusive or violent. So what did I have to lose from saying yes? Not much as far as I could see. And it had been way, way too long since I had had sex with a man. \n\nI agonized a little about Joan's instruction to dress sexy, but ultimately I had settled on a short dark blue skirt that fit tightly around my ass and showed off my legs. Beneath it I wore a black thong. I had to go out and buy a sexy pair of black heels and then spend several hours practicing walking in them. I had on a matching blue jacket that buttoned very low so it didn't cover much of my chest\u2014just the essential part, but only if I kept it buttoned. Beneath that I wore a sheer white blouse and a white bra that really did little other than hold my tits up and push them out for everyone to see if I took the jacket off. As long as I kept the jacket buttoned and stood or sat upright my breasts were covered, but if I released the single low button on the jacket, or leaned forward, much of my poorly covered breasts became obvious to anyone around me. I also went a bit heavier on my makeup than I usually did. Not slutty like the high school kids, but enough to highlight the best features of my face. Finally just a touch of perfume, at my neckline, between my breasts, and inside my thighs. I was careful not to overdo it. When I checked out the overall effect in a floor to ceiling mirror, I decided I had achieved just the \"slut-lite\" look I had sought. \n\nI arrived at Joan's house just a bit after seven. My mother had always told me it was good to be fashionably late, although she never told me whether that applied to an assignation with your lover and her husband. \n\nJoan answered the door. She was wearing an ankle length cream-colored knit dress that looked like it was molded to her body. The most striking aspect of her outfit was that she clearly wasn't wearing anything beneath the dress. It molded perfectly around her big tits, the knit fabric thin enough so that her dark areolas were obvious as were her nipples. When it was backlit you could see the contours of her body. The dress closed with buttons that ran the full length of the front of the dress. Joan had chosen to leave several open at the top of the dress, exposing a good deal of cleavage, and all below mid-thigh to expose her legs. It was a dress suitable for a seduction, but not many other occasions. I wanted to attack her right then and there, but I had other plans for the evening. Herv\u00e9 was going to be my focus, no matter how seductive Joan looked. \n\nShe stepped back and looked me up and down slowly saying nothing. \n\n\"Turn around,\" she said. \n\nI turned for her feeling a little like an animal being evaluated for Best of Show. \n\nWhen I turned to face her, she smiled and said, \"Oh yes. Yes. Very nice. Very nice indeed. To hell with Herv\u00e9. I want you for myself.\" \n\n\"Not tonight girl,\" I said. I had made some decisions about how I wanted the evening to go as I drove over to Joan's. I wanted to decide who was going to be screwing whom. \"Tonight is for Herv\u00e9. I want to see if he is all just talk or if his cock and tongue can live up to his promises. And yours.\" \n\nJoan stepped back and looked at me for a long moment. Then she broke out laughing. \"Oh this is going to be great. You go girl.\" Then she stepped quickly forward and swallowed me in a tight hug, smashing her big boobs against my lower rib cage. She stood on her toes and whispered in my ear. \"Fuck him until he begs for mercy tonight.\" \n\nI was following Joan up a couple of steps into the living room just as Herv\u00e9 came out of the kitchen. He was dressed casually, a tight pair of jeans and a silk Hawaiian shirt that seemed to be missing a button or two at the top. He was devastatingly handsome. In one hand he had a white apron, the strings nearly dragging on the ground, and in the other a gleaming chef's knife that he waved in the air as he spoke in his heavy French accent. \n\n\"Joan, Joan, where is the Herbes de Provence bottle? I can't make this dish without . . . \" then he paused, as I stepped out from behind Joan. \n\n\"Mon Dieu, Mon Dieu! She's here. Joan you did not tell me. Mon Dieu! Alice, you're here. \n\nHe stepped forward, intending to give me one of his usual boob crushing hugs, but as he got to me he realized he had a sharp knife in one hand and a soiled apron in the other. I moved quicker than him and gave him a peck on each cheek before he could figure out what to do with his hands. Not quite an air kiss, but nothing like I'm sure Herv\u00e9 had in mind. I stepped to one side and did a quick pirouette making sure my jacket opened just enough to give him a brief peak at my breasts showing through my lacy bra and sheer blouse. \n\nThen I stepped in close to him again and said, \"So Herv\u00e9, what's for dinner tonight?\" As I spoke I lightly touched the inside of his right thigh, dragging a finger tip up just an inch or two, not to his crouch, but moving in the right direction in a promise of more as the evening progressed. \n\nHerv\u00e9 was undone. He was planning a seduction, and here he was with his hands encumbered with the tools of his kitchen and his target for the evening flirting outrageously with him. \n\nHe stepped away from me, his face blushing and responded in a blizzard of French, at least I think it was French, but it may have been the French-Basque patois he reverted to when stressed. Then he fled the room, retreating to his kitchen. \n\nAs the door to the kitchen swung closed Joan burst out laughing and I joined her. \n\n\"Perfect. Absolutely perfect,\" she said. \"I've never seen him unstrung like that.\" \n\nI took a small bow in response, letting Joan have a peak at my tits in the process. \n\nShe turned and led me to a wet bar at one end of the living room where she quickly fixed us each a gin and tonic, mostly gin. \n\nWe were sitting working on our second drink before Herv\u00e9 worked up the courage to return with a round of hors d'oeuvres. This time he had left the knife and apron behind. \n\nHe set the platter on a low table before us. I had deliberately released the button holding my jacket closed as he came in. Now I made sure he got a good look at my breasts as I leaned forward to pick up an hors d'oeuvre. \"Oh Herv\u00e9, these are so good.\" I leaned forward to get another, again giving him another good look at my thinly-clad breasts. \n\n\"Herv\u00e9, get yourself a drink and join us,\" Joan said. \n\nHe jumped at the sound of her voice, a man suddenly torn from leching over a woman casually displaying herself to him by the interruption of his wife's voice. \n\n\"Oh oui. Oui. A drink. That sounds good. I have a little time, and then I have to get back to the kitchen.\" He walked to the bar, poured himself a double shot or so of whiskey, and returned, sitting next to Joan and opposite me. Joan leaned against him and put a hand on his knee. I wouldn't say he ignored her, but his eyes remained focused on me and my now almost fully-exposed breasts. I was lying back against the couch and had let my jacket fall open to my sides. I crossed my legs slowly and carefully, letting him see a lot of thigh, but no more. He gulped his whiskey as he stared at me. \n\n\"Doesn't she look nice, Herv\u00e9?\" Joan said. Her hand had slid a few inches up the inside of his leg, dragging her long fingernails as she rose up his thigh. ",
        "He jumped, no, more of a twitch, as he remembered his wife's presence. \"Oh mais oui, mais oui. Alice you're lovely tonight.\" He muttered a French expletive under his breath. Then he turned then and whispered something to his wife that caused her to choke on her drink. He gulped down the last of his drink and retreated to his kitchen. \n\n\"What did he whisper?\" I asked. \n\n\"Well it was in that French-Basque patois of his, so I can't give you an exact translation, but I think it amounted to, 'I want to fuck her so bad,' or something along those lines. You have him going.\" \n\nI smiled and re-crossed my legs, letting Joan have a better look than I had provided Herv\u00e9. This was fun. \"Shall I make him beg?\" I asked. My legs were now spread apart, so I was assured Joan could see my thong and my swollen pussy so poorly hidden beneath it. \n\n\"If you keep that up, I'll be begging,\" she said. \n\nGood, I thought. These two were going to use me for their plaything tonight, but now I have them both going. \n\n\"How much time do we have before dinner?\" I asked. I was holding my tits in my hands in invitation to her. \n\n\"Oh Alice, you are a shameless slut.\" \n\n\"Thank you,\" I said, punctuated with a wink. \n\n\"Not enough,\" \n\n\"Not enough?\" \n\n\"Not enough time to do what I would like to do to you.\" \n\n\"Oh,\" I said. I dropped my hands to the insides of my thighs pushing my dress up and my legs farther apart. \"And what is it you want to do to me.\" \n\n\"Make you scream in passion.\" \n\n\"How?\" \n\n\"You'll find out later.\" \n\n\"Oh.\" I made a pouty face and then finished off the rest of my drink, leaving my legs spread indecently. \n\n\"If dinner will be ready soon, I had better powder my nose,\" I said, rising from my chair. \n\n\"Down the hall and to the right.\" \n\nI peeled off my jacket and stood briefly before Joan with my breasts pushed out, barely covered by my bra and blouse. \"Are you joining me?\" \n\nNow it was her turn to play with me. \"No, we don't have enough time.\" \n\n\"Don't think you could stop once you got started?\" \n\nJoan laughed. \"Alice, you are shameless tonight. I love it. I never thought you could be like this.\" \n\n\"There's more to come. Lots more,\" I said as I walked down the hall, swinging my hips as I had practiced earlier in the afternoon. \n\nShe's right, I thought. Well, she was when I was married to Larry. There was no way I would act like this. I couldn't have. But now . . . things had changed. \n\nI walked into the bath and flipped on the lights. Looking at myself in the mirror, I stripped off my blouse and my bra. I continued to watch myself as I masturbated my tits. \"No, that's too far,\" I said to myself. \"Not yet.\" \n\nI put the blouse back on and tucked my bra in a drawer, hoping I would remember where I put it in the morning. When I looked at myself in the mirror again I realized just how sheer the blouse was. There was nothing about my tits left to the viewer's imagination. I smiled at a thought. I hoped Herv\u00e9 wasn't using a sharp knife when he saw me. Might cut a finger off. \n\n\"Yes. Yes, this will do just fine,\" I said to myself. Then I had one more thought. I hiked up my skirt, peeled my damp thong off, and tucked it in the drawer with my bra. I had definitely moved from \"slut-lite\" to \"full-slut\" now. \n\nWhen I returned to the living room Joan was gone, but I could hear her talking to Herv\u00e9 in the adjoining dining room. As I approached the room, I could see that Herv\u00e9 had set out salads for the first course, along with a bottle of wine and glasses. Now he was standing behind Joan He had both hands on her ass and was massaging it. As I watched, she pushed back with her butt so she was rubbing his upper thighs. He had moved his hands around in front of her and was fondling her tits through her dress. Herv\u00e9 was whispering something in Joan's ear. Something dirty I was sure. \"No, not tonight,\" she said in a tone of mock outrage. She reached around behind herself and slid a hand between her back and Herv\u00e9's belly. Then she worked it down below his waist and began massaging. I couldn't see, but I assumed it was a very erect cock she was massaging. \n\n\"Hello,\" I said as I walked in. They jumped apart like a couple of teenagers caught smooching by their parents. \n\nHerv\u00e9 began talking, \"Oh Joan, you're here. As you can see, our first course is . . . \" \n\nHis sentence died as I stepped into the light from the darkness of the hallway and he could see my nearly naked tits. \n\nHerv\u00e9 stood with his mouth hanging open. \"You like these?\" I said holding out my thinly-veiled tits towards him. \n\nHerv\u00e9 stood frozen, looking like a frog with its mouth open waiting for a fly. No sounds came out. Joan spoke up, \"Beautiful, just beautiful,\" she said. Joan at least could talk, but she was licking her lips as she stared at me. \n\n\"Shall I pour the wine?\" I said as I walked towards the table. I really hadn't buttoned my blouse up\u2014just tucked the tails loosely into my skirt. I could feel my nipples peeking out as I sashayed across the room. When I bent over to pick up the wine bottle, both of my boobs were fully exposed to Herv\u00e9 and Joan's lascivious stares. As I poured each glass I leaned forward again, giving them each another good look. \n\nHerv\u00e9 and Joan watched in silence. When I finished pouring the wine I stood looking at them as I slowly rubbed the chilled the chilled wine bottle against one and then the other of my tits. I could feel my already swollen nipples growing further in response to the cold. As I set the bottle down I said, \"Shall we?\" gesturing to the salads. I looked down and saw that the condensate on the bottle had soaked the fabric of my blouse, making it fully transparent over the tips of my breasts. \n\nHerv\u00e9 came to life and scurried over to pull out a chair for me. As I sat and he pushed the chair in he leaned forward and whispered in my ear, \"Alice you look stunning tonight.\" I could feel his warm breath caressing my ear, and it sent a bolt of lust straight to my pussy. Now his hands were resting on my shoulders gently stroking my neck with his fingertips. \n\n\"Oh Herv\u00e9, that feels so nice,\" I said. As I felt his hands start to slide over my shoulders and his fingertips wander toward my tits, I spoke softly as for his ears only, although I was sure Joan could hear me or at least read my lips, \"Not now Herv\u00e9. That's for later. I want to try this salad now. Joan says your food is seductive. I want to find out.\" Joan smiled as she watched me shut Herv\u00e9 down. \n\nHe walked to his seat and raised a glass in a toast, \"To our lovely guest, Alice.\" \n\nWe drank and I responded with my own toast, \"To Herv\u00e9 and Joan, my gracious hosts, and to the rest of our evening\u2014a matching of hard parts and soft parts.\" The last part of the toast was a bit awkward, but the salacious meaning was obvious. Joan and Herv\u00e9 smiled and drank. \n\nJoan responded with an even more tasteless toast. \"To our evening. May we all come together.\" Herv\u00e9 chuckled at the double entendre, and after I drank and set my glass down, I loosened my blouse further at the waist and pushed it to the outside of my tits so I was virtually topless, at least where it mattered. It felt sinfully delicious. \n\nWe ate in silence for a moment. The salad was delicious. \"Herv\u00e9, so good. How did you make this?\" \n\nThat was a strategic error. It launched him into a long speech about the salad, this one in particular and salads in general and the importance of les vinaigrettes and how all great chefs have their own vinaigrette and the details of his. Joan looked at me and rolled her eyes. \n\n\"Herv\u00e9,\" I said, finally, interrupting him. \"Tell me Herv\u00e9, do you talk dirty when you fuck?\" \n\nNo one said anything for a long moment. I was leaning forward resting on one elbow, my tits hanging below me there for the world, and especially Herv\u00e9, to see, and a wine glass in my other hand. \n\nEventually it became clear to even Herv\u00e9 that we weren't interested in his vinaigrette, and that we were waiting for an answer from him to my question. \n\nHerv\u00e9 looked at me for a moment longer and then recovered. \"Oh Mais oui! How could one fuck, I mean really fuck, without talking dirty? Of course I talk dirty. What language would you like me to talk dirty to you in?\" Then he launched into a sentence or two in French, followed by Basque, followed by Spanish, followed by, \"Oh my sweet little muffin your tits look so fucking hot to me. I am getting a hard on just looking at them. I want to play with them while you ride my big hard cock.\" \n\nI smiled, and Joan said, \"Will that do?\" \n\n\"Nicely,\" I responded. \"At least for openers. Now let's finish our salad, and Herv\u00e9 would you please pour me some more wine?\" He rose and stepped behind me. As he filled my glass, he reached down with his free hand and fondled one of my tits. It felt delicious. Not to be outdone, as he set the bottle down I turned towards him and slowly stroked the front of his pants. It felt like a very large hard-on beneath those trousers. I was getting very aroused, and beginning to hope this meal wouldn't have too many courses. \n\nWe finished the salad, which really was a stunning dish, and Herv\u00e9 departed for the kitchen again. As soon as he left, I took off my blouse so I was completely naked from the waist up. Joan released more buttons on her dress and peeled off the top half. Sitting in a chair pulled up to the table she looked completely naked. She sat opposite me massaging her big tits and pulling on her nipples. Her stare never wavered, nor did mine. \n\nI had pulled my skirt up around my waist and had both hands under the table, lightly stroking my sex. \n\n\"Are you playing with yourself?\" Joan asked. \n\n\"What do you think?\" I asked. \n\n\"I think you are,\" she said and continued to masturbate her tits as we talked. \n\n\"I want to suck on those nipples.\" I said. My voice was almost a low growl. \n\n\"And I want to eat that pussy you are playing with,\" she responded. \n\n\"But not now. Tonight is about Herv\u00e9.\" \n\n\"Yes,\" She agreed breathlessly. \"But I want you. Oh god, how I want you.\" \n\nThat was when the door swung open and Herv\u00e9 strode into the room with new wine glasses and a new bottle of wine, this one a Corton Grand Cru red, one of Burgundy's finest Pinot Noirs. He said something obscene in French when he saw that we were both nude from the waist up. I didn't now what the words meant, but I was sure it was obscene just from the way he said it. \n\nThen he pretended to ignore our nudity as he set the glasses down and poured the wine. \"This is a fine French Burgundy. Nothing in the world can match it.\" \n\nAs he leaned over me to pour, I could feel his erect cock pressing against my back. He was pretending to ignore us, but a hard dick never lies. \n\nHe whisked away our first course wine glasses and the unfinished bottle of Sancere. \"No more of this. I will bring the main course now and it is magnifique. It deserves a fine wine like this Corton. This,\" he said holding up the near empty bottle, \"was adequate for the first course, but would not do justice to the main course.\" \n\nMoments later he was back with new plates, holding a main course of lamb loin medallions in a cream sauce nestled next to potatoes dauphinoise, and some of the freshest, tastiest green beans I have ever come across. The green beans were finished simply\u2014a butter and shallot sauce that complimented the beans precisely. \n\nWe were silent as we tucked into the meal. Eventually he spoke up, unable to stand our silence. \"The lamb. It is good, no?\" \n\nI looked up at him and said, \"Herv\u00e9, the lamb is outstanding, as are the potatoes and the haricots verts. But it is the sauce, the sauce that makes the dish. How did you do that?\" Before he could launch into a long description of the sauce, however, I continued, \"Herv\u00e9 come over here. You deserve a reward. Oh, and bring your wine glass too. \n\nHe walked towards me carrying a full glass. I turned towards him and pulled him forward by his belt so he was standing between my legs. He could see now that I had pulled my skirt up around my waist. \n\nI began by releasing his belt buckle, followed by undoing the snap on his jeans and the zipper below. He started to lean forward to set his glass down so he could participate in what he was now anticipating. \"No, Herv\u00e9. Your role is to stand there and sip your wine. Look at Joan while you are finishing your wine.\" I pulled his pants down until they were hung up on his widely spaced thighs. Not altogether to my surprise I found he didn't have on any underwear. His fully erect dick sprung out as soon as I dispatched his jeans. \n\nI licked my lips as I stared at his dick. It stood straight out from his groin. It was long and big enough around to be intimidating. I wondered if I could fit that thing in my cunt. \"That question is for later,\" I told myself. I reached out and grabbed the beautiful cock before me with both hands and pulled it to my face. I began licking the underside of it, with long strokes beginning at his balls and reaching the head. Then after each stroke I teased the eye with the tip of my tongue. \n\nHerv\u00e9 reached down with his free hand and put it behind my head. I pulled my head back and said, \"No, Not yet!\" I wanted to control the process. I continued licking for a few more strokes, and then I sat up straighter and put my mouth over the head of his cock. He pushed forward with his hips and suddenly I had a mouth full of warm hard cock. I had never sucked a cock before, and it was fantastic to feel this hard object filling my mouth and moving around on its own. \n\nI let his prick explore my mouth for a few moments and then I pulled my head back, sucking on the beast as I withdrew. That was so, so, nasty, so against everything I had ever thought proper\u2014to let a man put his erect cock in my mouth and then to suck on it. Oh so bad . . . and I loved it.! \n\nAnd it felt so good. I didn't want to stop. I dropped my head again, taking him in as far as I good while I jacked the remainder of his now saliva-covered shaft with my hands. Then I pulled back, sucking again, and again, and again. Soon there was a regular pattern of my inhaling and sucking back on this big hard prick of Herv\u00e9's. Eventually I realized he had somehow set down his wine glass and now had both of his hands entangled in my hair, pulling my face to and from his groin as he fucked my face. God this was erotic. \n\nI could feel his prick swelling and quickly pulled back. I didn't particularly object to him cumming in my mouth or on my face, but there was a lot of evening to come. I didn't want him to cum yet. \n\nI picked up a bite of sauce-covered lamb medallion and pushed it into my mouth, deliberately letting the sauce run down my chin and drip onto my tits. I took a long time chewing, letting a little more sauce slip from the corner of my mouth and run down my chin as I looked up at Herv\u00e9. I was still jacking his cock with one hand. Then I picked up my wine glass, still gently stroking his prick, took a swallow and said, \"You taste good Herv\u00e9, but what's for dessert? Then I pulled up his jeans, carefully tucked his prick back in, and fastened him up. \n\nHe swore again in his French-Basque patois and turned away from me. For the next five minutes he sat at the end of the table glowering at me as he finished his main course and drank two quick glasses of the Burgundy. It was a shame to inhale a wine that good so fast. A wine like that is to be savored in the mouth so all its flavors and nuances are appreciated. He might as well have been drinking Bud Light, the way he was going at it. \n\nThen, leaving our plates he headed back to the kitchen mumbling about dessert. \n\nI looked at Joan. She was grinning. \"Oh ,what he said. You are driving him crazy.\" \n\n\"What did he say?\" \n\n\"Well, it doesn't translate exactly into English, but take it as 'Oh you fucking slut. I'm going to fuck you until you beg for mercy.' Or something like that.\" \n\n\"Good,\" I said. \"That's exactly what I want tonight. But first he has to work for it.\" \n\n\"So you've made up your mind?\" \n\n\"Yes, but it's not going to just be Alice lying down and spreading her legs and Herv\u00e9 climbing on board and pumping away until he squirts. I had enough of that with Larry.\" \n\nWe waited for what seemed like a long time for Herv\u00e9 to return with dessert. Eventually I began to lose my patience. \"What's he doing in there?\" I asked Joan. \n\n\"I don't know. Dessert wasn't supposed to be this complicated.\" \n\n\"Maybe I went too far, and he's in there beating off out of frustration.\" \n\nJoan laughed. \"That would be very un-Herv\u00e9 like.\" \n\n\"I'll tell you what,\" I said, as I stood and stripped my skirt off so I was naked but for my new sexy heels and a string of pearls. \n\n\"Why don't you go in there and tell him I've taken over dinner and his dessert is ready. I hopped up on the table and sat naked with my legs spread lasciviously. One foot was propped on a chair back and I was slowly stroking my gleaming wet pussy and occasionally sliding one finger into my cunt. \n\nJoan peeled off her dress and walked naked toward the kitchen, just as Herv\u00e9 emerged through the swinging door, with three dessert plates balanced on one arm. When he saw me, his eyes widened and he said something in his French-Basque patois that I couldn't translate, but I took it to mean, \"Alice, you look so fucking hot.\" \n\nI pulled the finger molesting my cunt out and held it before my mouth while Herv\u00e9 stared. Then I sucked it into my mouth and slowly removed it, sucking on it as I had Herv\u00e9's cock a little while earlier. \"Your dessert is ready Herv\u00e9. Do you want it?\" \n\nHe dropped the three plates he was carrying, they landed with a crash splashing chocolate mouse and shards of crockery across the hardwood floor. As he strode towards me he was releasing his belt and freeing his cock. \n\nHerv\u00e9 stood before me, his trousers in a puddle around his feet and his cock sticking straight out at me. He had both hands on my tits and was roughly mauling them. I made no effort to stop him. Instead I reached out with both hands and grabbed his cock, pulling it towards me. \n\n\"Herv\u00e9, you're such a dirty boy,\" I said. I was rubbing his cock against my pussy lips and using my fingers to smear my pussy juice over the head and shaft of this beautiful prick I was playing with. \n\n\"Do you want to put this big hard cock in my pussy. Is that what you want Herv\u00e9?\" \n\nI had his cock positioned so its head was poised just at the gaping mouth to my cunt, touching the opening so he could feel it, but not yet quite inside me. \n\n\"Well, Herv\u00e9, is that what you want. Do you want to fuck me?\" \n\nI felt him thrust with his hips but I pushed his cock upwards denying him the entry he so plainly wanted. I was controlling this and loving every minute of it. \n\n\"No Herv\u00e9,\" I said. \"You have to tell me what you want. What is it you want? Do you want to fuck me?\" I was stroking his dick now, softly and slowly. I wanted to torture him, but not cause him to erupt. \n\n\"Oui.\" \n\n\"English Herv\u00e9. Tell me what you want in English.\" I had his prick poised at the mouth of my cunt again. Honestly, I wasn't sure how much more of this I could take. \n\nHe growled something in French and then translated, \"You fucking whore, I want to fuck you. You understand that?\" \n\n\"Can you say 'please,' Herv\u00e9? Can you say 'Please, I want to fuck you, Alice'? \" \n\n\"Arrgh. You fucking putain.\" He was sweating now, his brow dripping on my tits. \n\n\"FUCK!\" he growled . . . he took a deep breath and said softly, \"Please, Alice I want to fuck you . . . putain\". \n\nI ignored the last word in French and pushed myself forward letting the head of his cock slide past my lips into my cunt. \n\nHe immediately responded by flexing his hips and ramming it in up to the hilt. I felt it bottom out at the end of my cunt. ",
        "\"Ayhiiiiiii,\" I screamed. Not out of pain, but out of relief. The delay had been torturing me as much as it had Herv\u00e9. \n\nNow he was pounding my cunt and muttering a string of obscenities. I lay back and let him have his way. Oh god, I thought. It's been so long. So long! And it feels so good. So good to have my cunt filled by a warm, live, throbbing cock. \n\nThis wasn't going to last long. I was crying and whining, and Herv\u00e9 was grunting as he pounded me. I could feel the orgasm I had been wanting for hours rapidly building in me. \"Oh Fuck, fuck, fuck, fuck, fuck! Yes. So fucking good. Yes, Herv\u00e9, fuck me, fuck me hard. I've been a bitch and I deserve it. Fuck me, Oh fuck, fuck, fuck!\" I stopped to pant. \"Fuck me harder, Herv\u00e9!\" \n\nHe had both hands under my butt now holding me aloft as he pounded his cock into me. And I was just teetering on the edge of what felt like a huge orgasm. Then he froze, his cock in me as far as it would go. I felt it swell and then I felt a hot stream of cum blast out of his prick and into my cunt. Then another, and another, and another. With each blast Herv\u00e9 grunted and flexed his hips trying to drive himself further into me. There may have been more from Herv\u00e9. I don't know, because when I felt the third or fourth stream I lost all control. I stiffened and pushed my hips up into Herv\u00e9 in my own effort to fill my cunt even deeper as my climax ripped through my body. I screamed and threw my head back and forth my eyes closed and then I guess I briefly passed out. The next thing I knew, Herv\u00e9 was lying on me, and we were both panting in an effort to recover. I had never been fucked like that. \n\nEventually Herv\u00e9 lifted his body off me. When he stood, his still impressively large cocked left my cunt with a pop, followed by a stream of our juices that puddled on the dining room table. He staggered back and sat in a chair, staring at me through bleary eyes. \"Alice . . . Alice,\" he said. He wanted to say something, but he couldn't express it in English. He mumbled in his patois. \n\nThat is when Joan spoke up, \"My fucking god! You two are animals. I've never seen any thing like that.\" \n\nHerv\u00e9 and I smiled and waved off Joan's comment. I staggered to my feet and walked over to Herv\u00e9, where I curled up on his lap, my head against his chest. \"Herv\u00e9, you were fantastique,\" I whispered. \n\n\"And you, Alice, and you too,\" he said softly as he wrapped his arms around me. \n\nThere was such an emotional release from my climax, I had never felt anything like it before. There were tears running down my cheeks. I looked up at Herv\u00e9. When he saw my tears he said, \"It's okay, Alice, we have more chocolate mousse.\" Now the source of my tears was laughter. The man was obsessed with his cooking. \n\nFortunately there was more chocolate mousse in the kitchen. The dining room was destroyed. Somehow Herv\u00e9 and I in our passion had swept all the dishes and wine glasses off the table. There was food, spilled wine, and broken glass and crockery everywhere. The three of us adjourned to the kitchen, tiptoeing around the crockery and glass shards. Once safely out of the dining room we stood naked at a kitchen counter sharing chocolate mouse from a common mixing bowl and a single large spoon. There was also an excellent bottle of dessert wine, a Chateau d'Yquem sauterne from Bordeaux. We drank from the bottle, passing it among the three of us. \n\nAfter dessert we moved to Joan and Herv\u00e9's king-size bed, where we painted Joan's tits with the last of the chocolate mouse and took turns licking it off of her. It was the beginning of a very long night and a great threesome."
    ],
    "authorname": "Bluepen451",
    "tags": [
        "fucking",
        "husband",
        "cock sucking",
        "exhibitionism",
        "friends",
        "group sex",
        "masturbating",
        "sexual tension",
        "seduction"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/descent-into-depravity-ch-05"
}