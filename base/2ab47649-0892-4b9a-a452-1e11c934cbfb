{
    "title": "Breaking the Rules of Sex & Marriage",
    "pages": [
        "My home phone has a feature called \"Call Intercept.\" When a call comes in without a phone number attached, it assumes I want to screen the call. The caller gets a message alerting them to this function, and instructing them to follow a sequence of steps if they are to have any hope of reaching me. If they follow the instructions carefully and I want to talk to them, they can get through.\n\nCoincidentally, my wife, Veronica* has a similar feature, called \"Sex Intercept.\" Whenever the conversation, well \u2013 my conversation, turns to sex, the subject matter gets screened in her brain before it has time to process any information. It then follows a path similar to the child's game, \"Mousetrap,\" where the marble goes from one crazy path to another, and the mouse in finally trapped. Except in this case, the talk of sex follows a bizarre path until it comes out of her mouth as \"It's going to be 60 degrees today, do you think the kids should wear long or short sleeves?\"\n\n* I have changed my wife's name to Veronica for this article, to save my life, or at the very least one testicle.\n\nHere's a perfect example:\n\nME (Speaking in appropriately hushed tones, lest anyone within 2 miles can hear)\n\nVeronica, do you think we could get the kids to go to bed on the early side of midnight, so we can have some time to\u2026and perhaps we can even trim your\u2026\n\nVERONICA (Gazing at me at though about to ask me to recite the Magna Carta)\n\nI saw that Kohl's is having a sale on socks for the kids, and they only have 3,000 pairs. I think I'll run over there tomorrow. I have a coupon.\n\nHas this ever happened to you? Has this ever not happened to you?\n\nThis is what I call one of the Rules of Marriage. I can't really number them because there is no order of importance. They're all important and equally bewildering. What intrigues me is how many feedback letters I receive detailing the very same trials and tribulations that I go through. Even when we go out with another couple for dinner or other occasion, there is a similar convention. The guys talk with each other first about sports, business, etc. Then they move on to the important stuff. Sex. They don't get enough of it. What they get is not good enough. It's enough to drive them to a girlfriend. In the meantime, the ladies are busy discussing children's activities, hair coloring, how bitchy the neighbor is, school, the PTA, their figures and generally everything and anything that would motivate me to order another drink \u2013 or two.\n\nNow of course I'm generalizing and do not mean to offend. I've received many emails from women who claim just the opposite is true. They are dying to discuss sex with their husbands, who are about as interested in it as they are in an IRS audit. But discuss sports with them and hey, now were talking. \n\nMaybe, this is an idea, these wives should combine the conversation to attract and maintain their husband's attention.\n\nWIFE (Light in her eyes)\n\nHoney?\n\nHUSBAND (More interested in his last fart)\n\nUh huh\u2026\n\nWIFE Do you think you might want to bring your ball over to my playground tonight?\n\nHUSBAND (Faintly stirring)\n\nMy\u2026what?\n\nWIFE I said, do you think you could get your ball in my glove tonight?\n\nHUSBAND My ball? Your glove?\n\nWIFE Yes, dear. Do you think you might want to score a touchdown tonight. Hit a home run. Whack a slap shot. Win a set. Kick a goal into my net. Put your ball through my hoop. Am I coming in honey? Do I have to dress like an umpire and have John Madden announce the plays?\n\nHUSBAND I understand what you mean. I'm not stupid you know.\n\nWIFE (As if speaking to a four year old)\n\nI know that, baby. I just want to be with you tonight. It's been\u2026how long has it been?\n\nHUSBAND How long has what been?\n\nWIFE (Patience wearing thin) \n\nHow long has it been since we've been together, dear. I can't remember the last time\u2026\n\nHUSBAND (Still fully immersed in his fog)\n\nTogether\u2026?\n\nWIFE (In the \"I've had enough\" mode)\n\nOh, for Christ sakes, John. The Pope gets more sex than I do. When is the last time we fucked. And when I say that, I'd mean the last time we had sex when it took more than 60 seconds and both of us had orgasms. Maybe one of us even stayed awake for two minutes afterward without the TV going on?\n\nHUSBAND\n\nAll right, all right. What are you getting so upset about?\n\nThis doesn't sound familiar, does it?\n\nMy friends, you have just encountered one of the Rules of Marriage. This is the Alternate Universe Rule. It means that when one of you is discussing sex, or wants to discuss sex, or even has the faintest notion of something sexual, the opposing spouse's thoughts are 1.2 million miles away. You might as well be discussing life on Mars \u2013 hence the name.\n\nThis is just one of the many rules of married sex that I've encountered in my brief (no jokes, please) lifetime. There are, of course, others. Or there'd be nothing to write about and we wouldn't be having all this fun, would we? I'd like to share some of my Rules of Marriage with you. I'd like to hear about yours. I'd like some answers. I'd like some guilt-free ice cream. I'd like, just once, for the store to have the advertised special in stock. Let's stick to one fantasy. Here are some of my rules, and the penalties for not following them. Please keep in mind that these are tongue-in-cheek rules. What I'm getting at without a lot of subtlety is that these seem to be the rules of marriage. It seems that everyone I know that is married for any length of time faces them.\n\nMy goal is to give you a chuckle as you read about with what we've all gone through and are still experiencing. But more than that, I want to know why we have to follow these rules at all. Maybe, and it's a big maybe, by identifying them and identifying with them, we can all conclude they should be changed. For the one married couple who reads this and says, \"yeah, that's us, we should change that\u2026\" this article has been more than worth the effort.\n\n<center>The Proper Formation Rule</center>\n\nThis might as well be called the Routine Position Rule. You and your mate are having sex. You must do so in one of a very few prepared, familiar and totally overused positions. You're on top, they're on top, you're leaning over to give head, they're leaning over to lick pussy. Missionary. Legs wrapped around, legs on shoulders, legs being spread and held by the ankles. Doggie. Spooning. Take your pick, you're never going to get all of them anyway. But never, never, be so bold as to introduce a new formation. Forget about turning them over to lick from the base of their neck to the tips of their toes and every spot in between. Forget about sitting them in a chair to get a good position for oral sex. Don't even get me started about blindfolds and silk scarf hand tying. \n\nIf you try and introduce these new elements during the course of sex, you'll be met with resistance that makes Saddam Hussein look like Pee Wee Herman. You'll face more bewilderment than a nudist in Alaska. You'll hear more stammering than Pat Robertson at a gay rights parade. You'll\u2026you get the picture. You spouse's inner referee will call a foul \u2013 improper formation, and you'll be penalized. Which means that they'll stop what you're doing \u2013 I call it a flow killer \u2013 and try and figure out what's going on. They won't know what to do, how to move, where to go. You've upset their routine. \"What is this?\" they ask themselves. \"I didn't read this in the program. This is nowhere in the instruction manual. I'm in uncharted waters here. Oh God, what do I do?\" All this because you've rolled them over on their side, mind you, not pulled out a leather riding crop.\n\nDoes this state of confusion mean you can only stick to the same routine every time? Imagine going out to dance and listening to the same song, dancing to the same steps over and over. Boring after a while, isn't it? \n\nI think the antidote to this rule is one of two methods, depending on your spouse. The first one is to let them know in advance that you'd like to try something new. That way they can ask any questions, cope with any gut reaction fears they have before you have to stop in the middle. The second method is just to do it. Just make that different move, touch a new area, pull out that bottle of lube and the vibrator. Then, when their eyes open wide with fear and disbelief, look them straight in the eyes and utter in your most reassuring voice, \"Don't worry honey, I won't hurt you\u2026you'll enjoy this.\"\n\n<center>The Backfield in Motion Rule</center>\n\nIf I hear \"that's an exit, not an entrance\" when referring to anal sex one more time, I'm going to vomit. Please understand that some women love the idea and act of anal, and most men that I know would love to get a shot at her tight little rosebud. And I'll tell you something else. Having a lady lick your ass or insert her finger just a little when you are about to cum is\u2026let me wipe the sweat. Is it dirty? Is it wrong? Is it against every moral covenant and every religious belief? Good God, I hope so. What fun would it be otherwise. I'm not talking about doing it in church. Although\u2026 \n\nAnd yet, those who are against it are truly against it. You haven't been looked at like a grotesque alien until you've suggested anal to the wrong girl. And if that girl is your wife\u2026you may be going to Mickey D's for dinner tonight, pal. Conversely, you tell a straight shooting, man among men type that you want to touch his ass and you might as well be asking him to save a table for you at a gay bar. You've just insulted his manhood, everything he holds dear. A guy who likes his ass licked or touched? He's thinking, \"She must think I'm gay. Maybe I am gay!\" \n\nOh, please. There are far too many stunted individuals out there. It doesn't make her a blasphemous slut, or him gay if he's not. But, violate the Backfield in Motion rule and you may be considered a pervert for the rest of your life. Not that it's a bad thing in my book.\n\nTalk them down from their ledge. That's my advice. Set the mood, choose the time, loosen up with a drink \u2013 anything that helps. But don't let this rule prevent you from making the other person feel good or trying something you've wanted for a long, long time.\n\n<center>The Moral of Oral</center>\n\nThis may be a shock to many of you. It knocked me off my feet. There are actually, I'm not kidding, men who don't want to get head, or go down on their wives. Who on earth would deny themselves the pleasure or getting their knob polished? Never mind that, can you imagine never tasting her sweet juices? Never feeling her shiver and hear her moan as your tongue delivers the final blow and orgasm rips through her? Is there anything on earth more erotic than to have your face between your loved one's legs? God knows, I'd do it at the grocery store if I could. Yet there are women whose husbands wouldn't think of it. Why, why, why? Is it religious? I'm telling you girls, marry a Jew, we were taught to please our women. Have you ever seen a rabbi without at least eight kids?\n\nSeriously, wouldn't the world be a far better place if we were all thinking about giving and receiving head more often? I should run for office on that platform. No women should be respected so much that a guy doesn't want to get head from her. I respect my wife plenty, get head all the time. \n\nGet this straight. Respect. Blowjobs. Two different things. You'd be denying her a hot, erotic experience for\u2026what? Still and all, there are those who just don't get into it. I don't get it. I love it more than\u2026life itself. But, you can't force someone else to like it, or even to do it. If you try, you'll surely go to hell. See you there.\n\n<center>The Oliver Principle</center>\n\nYes, this principle derives its name from the beloved musical, Oliver. When the orphan Oliver has the audacity to ask for more food when he's hungry, he's brought out on the cobblestone streets and sold. For those of us with, shall we say higher than normal desires, we sometimes feel like Oliver. Yes, we want sex more than every week or two. What ingrates we are. How insatiable. Maybe we'll be brought out the street and sold. Maybe that wouldn't be so bad. \n\nIs it my imagination? You fall in love with someone and you can't wait to rip each other's clothes off whenever it's possible, and sometimes when it's not. Then years go by, the pressures of career and a family, time constraints, health. And you get used to each other. The animal attraction gives way to a deeper love and affection and your needs and desires change and subside. It's only natural.\n\nPardon me, but the hell it is. You may be used to her. You may think you've done it all, it's all a routine. But I can guarantee you that somewhere inside her is a women who'd like to be bent over the sink and have the stuffing fucked out of her. And not just now and then. It goes both ways. He may have aged. He may have a gut and his hair may be a memory, but if you think for one moment that he wouldn't like to be force feeding his cock into willing lips, or slamming his pipe like a master plumber, you'd be dead wrong. Didn't anyone see the movie, \"Unfaithful?\"\n\nIt's actually frustrating. You make love, and instead of basking in the glow \u2013 if it was good, you say to yourself, \"I probably have to wait another week or two before we do this again\u2026\" \n\nI had a girlfriend in college that loved sex almost as much as I did. We'd do it at night and again the next morning. And even after that, I remember thinking, \"What stuff do I have to endure today until we can be back in this bed tonight doing it again?\" You think that's only for college kids? You haven't seen the feedback letters I have. Believe me, many long married adults feel the same way. It's their spouse that doesn't.\n\nDon't live like that! Be like Oliver and ask for more. You shouldn't have to beg for more because, believe me, it's out there for you. I am not advocating infidelity at all. I'm recognizing the truth. If your spouse reads this and recognizes that her or she should please you or someone else might, I don't think that's all bad. I think that realization can reduce infidelity. Remember, there's a cork for every bottle. Don't let someone else plug yours.\n\n<center>The Withholding Penalty</center>\n\nIf you think I'm not talking about taxes here, you're right. I'm talking about those angry folks who, in their frustration over not having enough sex, or enough good sex at least, have decided that the best course of action is to punish their spouse by withholding sex. I've done it myself! \n\nYou're angry with your spouse over not having enough sex, and when they finally do want it, you're going to show them! You'll let them know how it feels not to have sex when you want it! They can wait two weeks, a month? Well, you can wait even longer! There \u2013 how does that feel?\n\nIn retrospect, this is not the wisest choice. The fact is, it makes things much worse, exacerbating your desperation. I have a better idea. \n\nYou want to make them pay? Let them know what they've been missing. If you're a girl, give them the blowjob of their life, but not enough to cum until them fuck you. Stick your pussy in their face and stay there until they make you cum. Moan, groan and call their name like they're the emperor of the bedroom. Do things you've never done before. Make them realize what they've been missing. If you're a guy, make her cum again and again if you can. Take command. Lick her from top to bottom. Bend her over the couch and fuck the stuffing out of her. I'm being crude here, I know. Don't you just love it? Don't penalize them, make them beg for more, then penalize them. You'll feel a lot less frustrated and a lot more gratified that way, believe me.\n\n<center>The 15-Minute Rule</center>\n\nRemember making love for hours? Remember kissing until your lips were chapped, your heart beating wildly? If you're a guy, don't you remember having an erection for so long it permanently creased your pants? Where did all that go?\n\nIt seems as though there's an unwritten law that sex can only last for 15-20 minutes or so. Is that because it's the length of a typical half-time? Or the length of two commercial interruptions? I've seen my wife talking to a friend on the phone for an hour about stuff that can and does literally put me to sleep. I mean, I can tape record this conversation and play it on a subway, and no one will be awake at the next stop. Sleeping gas would not work this well. But sex? Hot, sweaty, steamy sex? 15-20 minutes. Tops. Including kissing, foreplay, oral, and intercourse \u2013 the entire meal from appetizers to desert. How can this be? I've had good bowel movements that lasted longer.\n\nThe only reason I can think for this dictum is that we're talking about two tired adults having obligatory sex at the end of a long day. I swear, my wife practically has to prop her eyes open with toothpicks sometimes in an effort to stay awake at 11:00pm for our 15 minute rendezvous. Under these circumstances, what do you think the odds are of handcuffs, pornos or massage oil? Zip. I swear, I'm sure that my wife is only doing it because she knows about my one-week rule. If we don't have sex for more than a week straight, I start to get grumpy. I start acting out. In my mind, I'm not attractive any more, I'm not loved. Can you imagine how I feel after two weeks? I'm practically out on the street advertising for sex. It's true. I'm not a joy. My wife is no dummy, so she does her best to stay awake, especially when we approach that week deadline.\n\nBut why does it have to be this way? I will admit that on those rare occasions when both kids are out of the house at midday we usually take advantage of it. But I'm talking about real time, not measured in minutes. Time to have some fun, get kinky, and rough it up if we want \u2013 stay naked a while. \n\nI am going to claim here and now that without those times you can not have a truly satisfactory sex life. Bold claim, I know. But what I'm talking about is a situation where you can be alone for a while. If you're just married, have no kids, or grown kids who are out of the house, you don't need to get away. But you still need to make time.\n\nSo to spell it out, if you are having those 15-minute sessions almost exclusively, make a plan to get away, or get time alone with no phones, TV or any other distractions. Or, surprise your lover with the time alone. Just do it. It will make a difference.\n\n<center>The \"Why Bother?\" Rule</center>\n\nWhy would a married woman, whose husband has fucked her so many times that he can find everything on her with his eyes closed \u2013 and usually does \u2013 want to do something to make herself more attractive to him? Why would she waste good money on some skimpy outfit? He's going to look at it, smile and take it right off anyway. If you're lucky. What a waste of money. Why would she want to try a new perfume? Why would she do something so radical as to buy a sex game online, or even shock him by shaving her pussy? He loves her just the way she is.\n\nShe's seen his gut 4,000 times, why should he get in shape for her now? Yeah, the flannel shirt has a few holes and stains, so what? And why should he shave on the weekend, it's his time to relax, right? Appearance isn't everything for pity's sake. He doesn't have to try and look good anymore, he's married.\n\nIt just strikes me as remarkable that people can take no notice of their appearance, their clothes, their grooming, and then wonder why their spouse doesn't seem to notice them anymore. Knock, knock \u2013 am I getting through?\n\nPlease do not misunderstand me. I would take an average looking, sweet, fun loving gal who loves to laugh to bed over some stuck up supermodel any day. No contest. I'm not saying that looks are everything, because they sure are not to me and my wife is very good looking. You hear that, honey?",
        "What I am saying it that I've read a lot of feedback letters from women who tell me they have gained a lot of weight and mean to take it off soon and are waiting for\u2026something to motivate them. They've had the same hairstyle since 1985. Their idea of dressing up is a cleaner pair of jeans or new sweat suit, and then wonder why their husbands don't seem interested in sex anymore. You realize, I'm sure, that the other women he sees every day are at their best. Made up, lips shining, dressed for work. Then the only way he may see you is dressed down, no makeup, folding laundry. I know a lot of women who look just fine with no makeup, but you get my point. Same for guys. You're walking around belching and farting, two days growth of beard and the same tighty-whitey underwear you wore in junior high school, only faded. How can she resist you?\n\nYou want to make a dent in that sex life? Looking your best from time to time reminds your spouse why he/she found you attractive in the first place. What's even better is when other people notice you. It's a big ego boost and gets your spouse thinking, \"hmmm, maybe they're right\u2026\" \n\nI'm suggesting you buck the \"Why Bother?\" rule. I'm telling him that if he shaves, combs his hair, puts on a dab of cologne and takes her out to dinner in his new shirt she will notice. And if she wears her hair a different way, updates those old glasses, puts on some eye makeup and\u2026I can go on and on\u2026he'll definitely notice. The eye makeup is a biggie by the way. Most models' eyes are made up to the hilt, because eyes are one of the sexiest parts of a female. Lastly, don't get me wrong \u2013 looks are most certainly not everything. But I'm not talking about your looks, how attractive a person you are. To me, that's totally subjective. I think some swimsuit models look like concentration camp victims \u2013 way to thin for my taste. I'm talking about how you feel about the way you look, and how your spouse feels about it. If you honestly feel good about yourself, that's all that counts. If not, getting to work on that will do a lot to raise your self-esteem, and that's sexy.\n\n<center>Arguing \u2013 What's the Real Motivation? </center>\n\nTonight's the night. You're sure of it. You've waited a week, two weeks, whatever it is. You're so horny you could fuck a stuffed animal. Yeah, you want it so much, it hurts. You've been acting nice, even loving, despite being frustrated by unrequited desire. And then, just as the day or evening begins to wind down and you can almost feel that tingle in your genitals, what happens? You have a stupid, silly argument and all your plans go awry. You didn't start it, and you did your best to avoid it. But there it is, and you know most people don't have sex when they're mad at each other. Talk about frustration! Is it a mere coincidence that on the night you were planning on having sex an argument popped up out of nowhere and nothing just to spoil your plans? \n\nI can't answer that question with authority, but I often wonder. I know it must happen sometimes. I can say with complete certainty that your spouse will look at you like you have two heads if you even suggest that they started a meaningless argument for the purpose of avoiding sex. Then again, who would admit to it? My wife will be denying me sex for even suggesting such a thing. See what I do for you?\n\nPurely for scientific purposes, though, try this test. No matter what, no matter how they try to draw you in, get your blood up, cause a disruption, don't bite. Tell them, \"you may have a point, I'm going to think about that?\" Or, \"I understand what you're saying, and I can't argue the point.\" In other words, you're not agreeing with something that you'll be sorry for later, you're just deferring the argument. If they keep pressing, keep trying to get your goat, do you have your answer? I think you do.\n\n<center>The Wave Length Principle</center>\n\nAre you and your lover on the same wave length? If you feel that the time is near for explosive sex \u2013 hot, wet, fluid swapping, ass slapping, leather wearing, dirty talking \u2013 OK, sorry, any sex \u2013 does your lover know it? Do the two of you have ESP? I actually believe that some couples do have this synergy. But for others, their methodology is to assume or even hope their spouse feels that same way at the same time. Is that working out for you? Let me put it another way, what do you think the odds are?\n\nBut again, it's an unwritten law of marriage that you can't actually whisper in her ear when she's near you, \"I'd love to slam you like a car wreck tonight\u2026\" And she can't get close to you and breath, \"I'm going to suck your cock later like it's covered with honey and I'm a hungry bear\u2026\" Why not? \n\nDo you have any idea how much of a turn on it is to be at dinner with people and your lover whispers in your ear, \"I'm going to get you naked later and eat you like a Fig Newton?\" I do. It doesn't suck. Try it. At the very least, it's fun to watch them lose their concentration and forget what they were saying.\n\n<center>The \"Old Flame\" Syndrome</center>\n\nThe point I'm about to make may be the most important of the entire column. If you take one piece of advice from this article, other than to make sure you guys out there wash your cock between anal and vaginal sex \u2013 did I write that yet? \u2013 it is the one I'm about to make. It can change your perspective and your relationship, it's that powerful.\n\nEverything seems better when it's from your youth, right? The food you ate, the car you drove, the places you went, the friends you had. It always seems like the good old days were so much better than perhaps they really were. The fact is that you're probably making more money, driving a nicer car and eating at better places than you ever did when you were a kid. The problem is, they all come with a price tag called responsibility, which is why it all seemed so much better back in the day.\n\nYes, time is like spackle for the memory. It smoothes over the rough spots and leaves only a clean and perfect surface. Nowhere is this more evident than with the old flame syndrome. \n\nHas your spouse ever talked about their old girlfriend or boyfriend? What a great lover they were, what a great listener. How affectionate and attentive. Oh, all the wonderful things they did in bed. How can your sex life ever compare? One small point though\u2026you guessed it, they married you. \n\nWhat hasn't been brought up was the all-night fights, the jealousy, the unreliability, incompatibility, disloyalty, laziness and sloppiness. She cried when she didn't get her way. He had a fit when he wasn't in control. Her PMS turned her into a monster. His future included late night drinking with his old buddies. They cheated on you. \n\nYou forgot these things? Yes, it's incredible how time seems to obscure all the reasons you didn't marry your old flame. \n\nAnd here is this person that did commit to you. Did have faith in you. Did remain loyal to you. Do you think you owe them a little something? I'm not trying to put you on a guilt trip around the world here. All I'm saying is that the past relationships you've had don't mean beans any more. They're in the past for a reason. Focus on what you've got in front of you. Stop wasting your time and energy and make the best of your relationship. You may be shocked what a huge improvement this one point can make.\n\n<center>\"My Spouse is Just Not Sexual\"</center>\n\nOh boy, this one. The letter starts, \"I just loved your piece on oral sex. But my lover is just not a sexual person. What can I do to make them desire me and want sex more?\" These letters make me want to cry, because the answer is not a great one. \n\nThe true answer would be, \"Well, turn back the hands of time to about six months before you got married. You were engaged, you were in love, you were planning a life and future together. This was the time when, hopefully, you were as tuned in and turned on to that person as you ever would be.\n\nHow was the sex? If it was great, and over the years has lost is luster, I believe there is a hope and a way to regain much of it. If it never was all that good, the chances of a recovery are\u2026not as good. You can't recover something you never had. You can not, in my estimation, transform an inherently non-sexual person, someone who is not nor has ever been highly motivated by sex and sexual gratification, into the dynamo you'd like them to be.\n\nIn the first case, where the sparks once flew and the flame burned hot, I feel you can rekindle it with things like time alone, getaway weekends, romantic dinners, erotic role-playing, films and literature, etc. You have to get back to the place you once were, if even from time to time. I totally believe that, in the absence of factors beyond my knowledge, such as loss of attraction, loss of interest, significant marital difficulties, health, family problems and the long list of life's grave difficulties, couples who have fallen out of the swing of things can regain their rhythm.\n\nFor the others I also believe there is indeed still a chance to awaken the slumbering inner desires that never fully developed. Long-term marriage can build wonderful bonds of love, trust and closeness. Even though they may not have extended themselves to the sexual arena, there is still room to grow. \n\nThis does not mean you can make wholesale changes in a person's behavior. I sincerely doubt you can talk a sexually conservative person into a threesome or foursome in your living room, complete with candles, soft music, massage oils, vibrators, blindfolds, uh\u2026sorry. What I mean is that you can improve, and sometimes significantly, the lengths someone will go sexually. I say can, I'm not guaranteeing it. That would foolish. I can not judge another person's desire. If it's not there, no efforts will reward you with good results. If the desire is there, but has yet to be released or perhaps fully explored, then it can improve. But how?\n\nAgain, there is no magic pill. Communication is the answer. Sometimes it's damn hard and very uncomfortable. You want to be candid in a soft, non-blaming way. Believe me, the other way does not work. I'm referring to accusing them of ruining your life, not being attracted to you, causing you nothing but pain, heartache and frustration, or even threatening them with leaving or finding someone else on the side. Having unburdened yourself with your feelings - and I'm not doubting for a minute that they may all be true heartfelt feelings coming out \u2013 may make you feel better in the short term. But they can also cause a lot of irreparable damage, anger, guilt and hurt feelings. What can you accomplish this way? Will berating them and hurting their feelings induce them to have better sex with you? I would have to say usually not. By spilling your guts you may be dooming your objective of better sex.\n\nA better alternative is to tell them how you feel in softer, less accusatory tones and phrases. You love them, you want them, you want to make a new start of your intimate life together and get off on the right foot. You have some suggestions. You're not putting them on the spot and asking them for a plan \u2013 you have the plan. And this brings me to my final point.\n\n<center>Who's in Charge Here Anyway? </center>\n\nControl. What a word, what a concept. When she's on all fours, your hands on her hips holding her tightly in place as you slam\u2026wait a minute, what am I talking about here? Not that kind of control. I mean the kind of control where one person seems to make most or even all of the decisions in a relationship. Especially in defined categories. You would not expect most women to make a material list for a deck building project. Most guys are not found writing down the spices they need for a special chicken dish. I do know a few good recipes, though. I just mean that couples seem to have their individual territories. And this applies to sex, although there is no particular gender that's in charge. It varies from couple to couple and the most assertive men I know will often defer to their wife's routine or preferences. Or it may be the other way around. \n\nHowever, when you are not the usual aggressor and want to make changes in the bedroom, this may threaten the \"balance of power,\" and cause some discomfort. Your spouse may feel they have done something wrong, that they are suddenly not competent, their lovemaking skills in question and their ego in danger. \n\nAssure them that this is not the case at all. Make sure they understand that you are trying to enhance and build on the good things you already do and feel together. Advise them gently that improvement and change are in both of your best interests, for they are the best way to insure that your love life doesn't become stale and routine as so many other's do. That you're both going to become better lovers by experimenting and learning. Let the other couples travel the same path to eternal boredom \u2013 you're going to be trailblazers. You get the picture, right?\n\n<center>Conclusion</center>\n\nThose of you who have read my other stories know I like to have fun, in and out of the bedroom. I want my readers to learn something, to active their own thought process and even smile while doing it.\n\nHowever, I never, ever, trivialize someone's pain or frustration. I know firsthand how sad it can make you, how hopeless it can seem when you're just not getting what you need. I find nothing funny about it at all.\n\nAs I said, conversation with your spouse on this subject can be very difficult. It's often not comfortable to discuss sex and related issues with your spouse at all. It's ironic how even in the best of relationships, where there is usually good communication, sex is the one subject that is so hard to discuss. And it's the topic on everyone's mind! I'm a victim of this situation as well as any of you. So what do I do?\n\nI follow my own advice. I discuss it in the appropriate place at the ideal time. Not when my wife has just had a homework argument with the kids. Not when we're about to have sex, or are sort of coming down from just having it. Not in the middle of TV program. I set up the situation. I tell her that I'd like to discuss some things with her later. Looking in my eyes, she knows what I'm talking about. Look I am, and you are, trying to tell someone my feelings, and how I'd like to improve or make changes to our sexual repertoire that we'd both jenjoy. Her appropriate response, in my opinion, is to listen and understand that I care enough to say, and not stray.\n\nNothing works all the time and on everyone. I'm quite sure many of you that know this all too well. I'm sorry about that \u2013 really. Perhaps you should show this article to your spouse and see what they think. It can actually be easier and less uncomfortable to learn from the written word then from your spouse. And for those of you who may benefit from just one point I've made, I could not be happier. As always, I'm very grateful for your votes and your emails. Best of luck to you. "
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "discuss sex",
        "kind control",
        "sex minutes",
        "people notice",
        "point make",
        "person make",
        "tonight husband",
        "eye makeup",
        "sex hot"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/breaking-the-rules-of-sex-and-marriage"
}