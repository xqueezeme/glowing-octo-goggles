{
    "title": "Succubus Summoning 107",
    "pages": [
        "Phil lay on a big bed and listened to the noises of the night outside. Large animals snuffled about beneath the windows. Occasionally the silence was punctuated with a cacophony of howls and growls that clawed at his sanity and threatened to tear it asunder.\n\nPhil was in hell.\n\nPrevious to his current predicament he'd been a rather mediocre student at the Wargsnouts College for Warlocks. Despite his obvious mediocrity he and a friend had decided to summon up a pair of sex daemons for a laugh.\n\nIt had not been a good idea.\n\nNow Phil was in hell and a prisoner of those same sex daemons while they decided whether to make him their pet, sex toy or light evening snack. At least he was still alive. He wasn't in bad condition either, he thought, trying out his arm. Nurse Honey had done a good job, although Phil was a little fearful of what the final cost would be.\n\nHe tested his legs. They seemed to be working fine. Maybe he should try and sneak\u2014.\n\n\"Hey fledgling warlock.\"\n\nPhil's spirits fell while his cock rose in betrayal. They were back.\n\nRosa and Verd\u00e9, the two succubi that had kidnapped him and brought him back to hell, stood in the doorway. You could almost mistake them for gorgeous teen cheerleaders. Okay, gorgeous, fantastically well endowed teen cheerleaders. Their wings, horns and tail dispelled that illusion, but it didn't seem to detract from their overall attractiveness.\n\nPhil was surprised to see they were wearing clothes. It was the first time he'd seen them in anything other than their birthday suits. He was less surprised by the lack of either convention or concealment in the outfits they'd selected.\n\nVerd\u00e9 was wearing a diaphanous green robe. Underneath it she wore a light-green bodice that pushed up her tanned breasts and showed off the lush valley of her cleavage. A corset extended halfway down the flat expanse of her stomach. She didn't feel the need to wear anything beneath that and the plush folds of her sex were exposed to the world.\n\nRosa was wearing even less. Phil wasn't sure what she was wearing even qualified as clothes. She was wearing a series of studded red leather belts. They looped under her naked breasts and formed a series of hoops across her flat midriff. She finished off her outfit with a studded dog collar and two leather boots with spiked heels that came up to her thighs. There wasn't anything covering the lush folds of her sex either.\n\n\"Honey's done a very good job,\" Rosa said. \"Our little warlock looks positively delicious.\"\n\nShe bounded up onto the bed with catlike grace and was on top of Phil before he even had a chance to scoot backwards. She crouched above him and smiled, her eyes gleaming with hunger.\n\n\"Tasty enough for a quick suck,\" Rosa said. She pushed her hips down and rubbed Phil's semi-erect cock down the moist cleft of her pussy. Phil sprang straight to full hardness and he shivered both in fear and pleasurable anticipation.\n\nRosa smiled down at him and licked her tongue over luscious red lips. Phil's nostrils filled with her powerful musky perfume. His eyes were filled with the vision of her perfect breasts dangling before him like ripe fruit. He knew it was her powerful sexual aura taking control of his thoughts and desires, but even though he knew it he still couldn't resist her. Rosa stared deeply into his eyes and gently rotated her hips, teasing his growing erection.\n\n\"Rosa!\" Verd\u00e9 said sternly, cutting through the succubus's spell.\n\nRosa looked up guiltily. Verd\u00e9 stood by the side of the bed with her hands on her hips.\n\n\"I thought we were going to show our fledgling warlock around the castle,\" Verd\u00e9 reminded.\n\n\"I only wanted a little suck first,\" Rosa said. She lowered her hips until the plush lips of her labia lightly kissed the tip of Phil's cock.\n\n\"Later,\" Verd\u00e9 ordered. She looked down at Phil. He was still plastered in Nurse Honey's sticky fluids. \"Nurse Honey works wonders, but her attentions are very messy. I'm sure our fledgling warlock would like a bath to clean himself off.\"\n\n\"I can get him all clean,\" Rosa said. She ran her tongue up Phil's chest.\n\n\"Remember what happened last time,\" Verd\u00e9 said.\n\n\"Yes I know, Nurse Honey's honey is too sweet for me,\" Rosa said. She got up off Phil and swung her legs back over the side of the bed.\n\nPhil's traitorous organ twitched in disappointment. He tried to ignore it.\n\n\"Come on fledgling,\" Verd\u00e9 said, beckoning him with a sunny smile. \"Let's get you cleaned up.\"\n\nPhil slid off the giant bed, his erection flopping awkwardly in front of him. At least his limbs seemed to be back under his control, not that there was anywhere he could run to.\n\nThe succubi were already leaving the room.\n\n\"Um, shouldn't I put something on,\" he asked.\n\n\"Don't be silly,\" Verd\u00e9 said. \"Why would you need clothes here?\"\n\n\"It's a pain to tear them off every time we want to fuck you,\" Rosa said.\n\n\"You're just fine as you are,\" Verd\u00e9 smiled. \"Now come along.\"\n\nPhil tried to hide his obvious erection with his hands and shuffled after them. The castle was large and despite the walls being mainly composed of bare black stone, it was warm enough for Phil to feel comfortable despite being naked.\n\nHe wondered where the bathroom was. The succubi led him down long corridors carpeted in plush red velvet, through airy hallways lined with erotic statues and down so many flights of steps he didn't relish the thought of the journey back.\n\nThe d\u00e9cor of the castle was overtly sexual. Everywhere Phil looked he saw paintings and sculptures depicting acts so lewd they'd make a whore blush. Even the gilded candelabra lining the walls were moulded in the shape of naked women. The candles within them produced a scented smoke that made Phil feel a little light-headed.\n\n\"What haven't we done yet with our fledgling warlock?\" Verd\u00e9 asked as they walked along.\n\n\"Killed him and sucked out his soul,\" Rosa replied. She turned back and flashed Phil a smile that showed off her fangs.\n\n\"Tut tut,\" Verd\u00e9 said. \"Stop frightening him. Is that any way to treat a pet?\"\n\n\"I haven't set him on fire yet.\"\n\nPhil whitened.\n\n\"Let's get back to sex,\" Verd\u00e9 said. She dropped back and put an arm around Phil's waist. A wing folded round Phil's other shoulder. \"To think he was a virgin when we met him. Since then we've done missionary, oral, breast relief...\"\n\n\"Anal,\" Rosa frowned, rubbing her ass.\n\n\"... doggie style, cow girl, reverse cow girl...\" Verd\u00e9's tail coiled around Phil's erection and started to tug him off.\n\n\"I've even fucked him in the ass with my tail,\" Rosa said.\n\nShe noticed Phil's shocked expression.\n\n\"You were fairly far gone at the time,\" she added.\n\n\"Hmm, what left to do,\" Verd\u00e9 said. Her tail moved up and down Phil's cock with faster strokes. His knees started to feel a little wobbly. \"We'll think of something after your bath.\"\n\n\"Shit, it's N\u00ffte,\" Rosa hissed. \"Quick, hide him.\"\n\nPhil was bundled into one of the dark alcoves that lined the corridor. Verd\u00e9 held him firmly in place and put a hand over his mouth.\n\nA regular clicking sound reverberated around the stone walls. When N\u00ffte came into view Phil realised it was the sound of her long, wickedly pointed stiletto heels striking the stone floor.\n\nRosa and Verd\u00e9 looked like extremely slutty high school teenagers. Nurse Honey looked like an angel cast in a porn film.\n\nN\u00ffte looked like a demon.\n\nShe was beautiful, possibly the most beautiful of the succubi Phil had seen. The contours of her face were a little sharper, as if she'd been sculpted by an old master. There was a cruel cast to her features though and her expression was so cold it covered the eyes in a layer of frost just to gaze upon her.\n\nHer body was as scorching hot as any other succubus. Her generous curves were squeezed into a tight black leather catsuit. The V of the neck was cut low enough to reveal the milky-white hemispheres of her breasts. Her long black hair was tied up behind her head in an austere ponytail. Jet black wings were folded behind her back. A coiled whip hung from her left hip.\n\nShe looked exactly like the pictures of demonesses Phil had seen in textbooks at Wargsnouts. The ones the students were warned never, ever, to attempt summoning. Phil knew Rosa was scary; he'd watched her suck all of the life out of Jake. N\u00ffte was terrifying. He didn't want to imagine what she could do to him.\n\nN\u00ffte stopped and turned her head. For a moment Phil thought those empty black eyes were staring directly into his soul. Then she turned away and carried on walking down the corridor, her deportment as regal as a queen's.\n\nRosa and Verd\u00e9 waited until the clicking sound of her heels had faded away before ushering Phil out from their hiding place in the alcove.\n\n\"You should stay out of her way,\" Verd\u00e9 said.\n\n\"Pleasure and pain are a little mixed up for her, if you know what I mean,\" Rosa added.\n\n\"Is she in charge?\" Phil asked.\n\nBoth succubi seemed a little nonplussed by the question. Phil had assumed there must be some form of hierarchy in hell. Judging by Rosa and Verd\u00e9's reaction to her and the regal way she carried herself, he'd assumed N\u00ffte was the boss around here. Now he wasn't so sure his first impression was correct. Rosa and Verd\u00e9 looked at him weirdly, as if what he'd said hadn't made sense at all. Maybe they didn't follow any conventional hierarchy.\n\n\"Who else is here?\" he asked. They'd walked quite a way through the castle and N\u00ffte was the first living thing he'd seen other than Rosa and Verd\u00e9.\n\nThey walked down a steep flight of stone steps somewhere deep in the belly of the castle. The air was a little cooler here.\n\n\"Well there's me and Verd\u00e9,\" Rosa said.\n\n\"I'll show you my gardens later,\" Verd\u00e9 said with a girlish giggle. Her tail flicked up between his legs and tickled his balls.\n\n\"Nurse Honey...\" Rosa continued.\n\n\"Who you've met,\" Verd\u00e9 added.\n\n\"N\u00ffte...\"\n\n\"Who you don't want to meet.\"\n\n\"And C?r\u00b5l?a.\"\n\n\"Oh, yes. C?r\u00b5l?a.\"\n\n\"Who's completely crazy.\"\n\n\"Be fair,\" Verd\u00e9 admonished. \"She's a lovely girl, if a little eccentric.\"\n\n\"Crazy,\" Rosa stated.\n\n\"You probably don't want to meet her either,\" Verd\u00e9 said. \"But enough chatter, it's time to get you cleaned up.\" She put her hands on his shoulders and steered him through a door.\n\nThe room beyond took Phil's breath away. This was the bathroom...?\n\nIt was enormous, a cavern tiled in rich black marble. At the centre was a large circular pool around twenty feet in diameter. In contrast to the rest of the room its tiles were electric blue in colour and glowed in the darkness. The sound of rippling water bounced off the walls in a gentle susurration. Blue light from the pool ebbed and flowed over the black marble in complex patterns.\n\nRosa murmured some words of magic and candelabra on pillars around the room flared into life, filling the room with a soothing glow.\n\n\"Fancy, isn't it,\" she whispered silkily in his ear.\n\nIt was awe-inspiring. The room belonged to a luxury palace out of the Arabian Nights. Erotic mosaics decorated the floor and walls of the pool. The taps, gilded in gold, were twisted into the sensuous shapes of buxom mermaids. Above the pool a gigantic circular mirror was inlaid into the ceiling.\n\n\"Where is this place?\" Phil said. He was a small town burger-flipper. This level of splendour was mind-blowing.\n\n\"Currently the seventh spherical congruence twixt the Vortex Elementae and the higher plane of Lust,\" Verd\u00e9 answered.\n\nNone of which made any sense whatsoever to Phil. He remembered snoozing through various droning lectures on the geography of hell, but they had been absurdly complex and mainly concerned with levels and pits.\n\n\"So what part of hell is that?\" Phil asked.\n\n\"What she just told you,\" Rosa said. \"Didn't they teach you anything?\"\n\n\"Actually, I think the mortals only know what the mischief imps told them and most of that was made up as a joke,\" Verd\u00e9 said.\n\n\"They still don't believe all that crap about Lucifer and the fallen angels do they?\"\n\nVerd\u00e9 nodded her head.\n\n\"So gullible,\" Rosa said. She pushed Phil into the pool.\n\nPhil yelped as he hit the water with a splash. The bath wasn't even half full and he put his arms out to stop his body crashing into the floor. He thrashed around for a bit before he was able to find his feet. He stood up, coughing and spluttering up the water he'd swallowed. The water was warm and came up to just past his knees.\n\nHer green cloak billowing behind her, Verd\u00e9 walked around the edge of the pool, turning on the taps as she went. Warm water gushed out of the mouths of golden sirens.\n\n\"Water's boring,\" Rosa said, lounging on the side of the pool and running her fingers through the stream. \"We should fill up the bath with blood and have some real fun.\"\n\n\"Now now Rosa, you'll only terrify our fledgling warlock.\"\n\nPhil turned in the centre of the pool, trying to keep both Verd\u00e9 and Rosa in view. It got harder as Verd\u00e9 continued her circuit of the pool.\n\n\"What about sperm,\" Rosa said. \"I know you like a good sperm bath.\"\n\nVerd\u00e9 frowned. \"I'm not sure that would appeal to our fledgling.\"\n\nPhil nodded his head in rapid agreement. The thought made him feel queasy.\n\nVerd\u00e9 removed her cloak and bodice and sat down at the edge of the pool. She dipped her feet into the water. Rosa was also naked and lay on the side a little way from her. She dipped her tail into the water and lazily swirled it in circles.\n\n\"Rinse?\" Rosa said, glancing slyly at Verd\u00e9.\n\n\"Yes, rinse,\" Verd\u00e9 smiled back. She dipped her tail into the water.\n\n\"Enhalarat mod Aquaselecum,\" both succubi said.\n\nThe water around their tails bubbled frenetically for a moment before becoming as still as glass. Phil backed away, unsure of what magic the sex daemons were about to inflict on him.\n\nTwo forms sprang up out of the water. They were unmistakeably female and an idealised version of the form. They were tall and slender, with full, upswept breasts; figures that would grace the centrefold of any magazine. They were also composed entirely of water. Phil could see right through them. Their large breasts bobbed and jiggled like thick jelly.\n\nWhat were they? Phil thought.\n\nThe two water nymphs looked at Phil, glanced mischievously at each other, licked full pouting lips and suddenly dived under the surface. Long fish tails rose up and splashed down behind them.\n\nThis was not good, Phil thought. He turned to run, but other than displacing large amounts of water with his knees, didn't get anywhere very fast.\n\nWater swirled around him and the air was filled with silvery giggles. Hands gripped his ankles and tugged, pulling him beneath the surface. The next few moments were a confusion of spray and bubbles as unseen hands grabbed his body and spun him round and round until he had no idea which way was up or down.\n\nFinally he thrashed free and got back to his feet, coughing up the water he'd swallowed. He was back in the centre of the pool. The two water elementals, undines, circled him like sharks. Rosa and Verd\u00e9 sat on the side of the pool and watched his struggles with quiet amusement.\n\nAn undine exploded out of the water in front of him and shook a long mane of spray and bubbles. Her breasts, made entirely of water, bounced in defiance of all gravity. She surged forward, giggling like ripples on a stream. She moved too fast for Phil and before he could dodge, she rose up, encircled his head with her arms and pulled him down until his face was pushed into her substantial cleavage.\n\nDespite her transparent appearance her breasts felt as firm as a normal woman's. Phil might even have enjoyed the situation, but his face was wedged so tightly between her breasts it was hard to breathe. He started to struggle and the Undine held him more tightly. She laughed like water babbling over stones in a brook.\n\nPhil opened his mouth to try and suck in much needed oxygen and found it filled with water. The undine had pushed him right into her chest and he was currently trying to breathe in the water of her body. He watched bubbles rise up inside her liquid form as he gagged on the water filling his throat and lungs.\n\nBlack spots were dancing across his vision when the undine finally released him. She giggled as he staggered backwards, coughing and retching.\n\nWarm liquid arms encircled his waist and pulled him back onto a body as soft as jelly yet firm enough to hold him in place. The first undine, the one that had thought it fun to try and drown him in her cleavage, slid through the water towards him, purpose written on her face. Playtime was over, Phil realised.\n\nShe pushed her warm body against Phil. Her full lips pursed and she pressed them against his. As they kissed water flooded into Phil's mouth. He gagged and forced himself to gulp it down, reasoning it was better if the water entered his stomach rather than his lungs.\n\nThe undine pushed her hips forward. Two soft lips parted and Phil's semi-erect cock was sucked into a warm, soft channel.\n\nWater continued to flow into Phil as she kept up the kiss. His stomach felt bloated and the pressure in his bladder started to rise and become uncomfortable.\n\n\"You can relieve yourself in her,\" a silvery voice whispered in his ear. \"It's what she wants.\"\n\nHer vagina closed around his cock so tightly it felt like he'd been absorbed through her skin and into the liquid centre of her body. The currents flowing through her body toyed with his cock.\n\nPhil couldn't stop himself. A stream of piss issued from his cock and mixed with the swirling currents of her body. He was disgusted at what he'd done, but felt a palpable sense of relief as the pressure on his bladder relented.\n\nThe undine shuddered and shivered in orgasm. Her body grew warmer and more solid. A firmer suction enfolded Phil's cock and softly stroked him to full erection.\n\nShe broke off the kiss. \"Free your fluids and let them flow with mine,\" she whispered, her glassy eyes staring intently into his.\n\nHer lips crushed back against his and this time the flow was reversed. He felt the water in his body seep out through his mouth and lips and enter her body. Sweat welled up through his pores and was absorbed into the undine behind him.\n\nThey were drinking him, he realised, gulping down his life in long thirsty swallows.\n\nThe flowing suction around his cock grew faster and stronger. A surge of relief, greater even than the emptying of his swollen bladder, gripped him as he thrust forwards and ejaculated a great rope of semen into the undine's liquid centre.\n\nThe suction grew even stronger and the orgasm showed no signs of ending. Only it wasn't sperm Phil was ejaculating now, but water, all the moisture in his body gushing into her in one never-ending stream.\n\n\"Exhalarat dom Aquaselecum.\"\n\nAn arrow-pointed tail thrust through the head of the undine. The nymph gave a disappointed moan, like water flowing through dark caves, as her body lost its cohesion and collapsed into the bath, once again plain water. The same happened behind him, releasing Phil from the undine's gelid grip.\n\n\"You shouldn't let such low level spirits boss you around,\" Rosa said. She lounged on the side of the pool behind him like a cat.\n\n\"They tried to suck out all the water in my body,\" Phil said. His lips felt cracked and parched, courtesy of the undine's kiss, but he was otherwise fine.\n\n\"They are vulgar aren't they,\" Verd\u00e9 said. She slipped into the pool with barely a splash. \"Time for some bubble bath, don't you think?\" she asked Rosa.\n\nRosa smiled and snapped her fingers. A thick creamy liquid oozed from both the breasts and vaginas of the mermaid taps and poured into the bath. Water continued to gush from the mermaids' mouths and the bath started to foam up with great drifts of shimmering bubbles.\n\n\"Mmm, this is luxurious don't you think,\" Verd\u00e9 said, relaxing against the side of the pool.",
        "A slippery layer of foam sat on the surface of the water. A cloying fragrance filled Phil's nostrils and made him feel a little light-headed.\n\nRosa slipped into the pool and shared a passionate kiss with Verd\u00e9.\n\n\"Lather?\" she said, glancing at Phil, her eyes twinkling.\n\n\"Lather,\" Verd\u00e9 confirmed, staring mischievously at Phil.\n\n\"Enhalarat mod Fomulessencae,\" Verd\u00e9 said. She breathed softly onto a small iceberg of bubbles.\n\nNow what? Phil thought. His body still felt a little out of sorts from the undines' attentions.\n\nThe foam gave a long, ecstatic sigh and Phil watched as it gracefully bent upright and took the form of a beautiful young woman. Two more sighs followed as two more foam figures rose above the surface of the water. The trio turned to Phil, giggled and then gracefully glided towards him. They looked like Playboy models covered in a thin layer of lather.\n\nPhil backed away and again his movements through the water were slow and ungainly. The foam creatures effortlessly closed the distance between them.\n\nPhil looked towards the two succubi.\n\n\"You're on your own this time,\" Rosa called back.\n\n\"We're going to be otherwise occupied,\" Verd\u00e9 said. She grabbed Rosa from behind and the two succubi vanished beneath the foam. Their moans of pleasure echoed off the marble walls.\n\n\"Let's not get too hasty now,\" Phil said, holding out his hands to ward off the foam nymphs.\n\n\"Don't be frightened,\" the lead nymph said. \"We only want to give you pleasure.\"\n\nShe surged forward. Phil tried to shove her away. Instead his hands pushed up against the smooth, lather-covered swell of her breasts. Beneath the thin layer of soap bubbles they felt as firm as a normal girl's breasts, but as Phil pushed they lost their cohesion and his hands sank into a denser patch of foam.\n\nPhil looked at her in stunned surprise. His hands had sunk into her breasts up to the wrists. The foam nymph smiled. Within her body bubbles began to crackle and pop around his palm and fingers. Phil's mouth opened in a 'o' of pleasure. It felt like a million miniature kisses delivered to the sensitive nerve endings of his hands.\n\nThe other two foam nymphs each grabbed a shoulder and blew bubbles in his ear.\n\n\"Let's make you a nice soft bed,\" one whispered.\n\nPhil felt a commotion in the water behind him. Fluffy drifts of foam welled up and toppled over him. The two nymphs pushed him backwards. Phil didn't resist. He was still overwhelmed by the sensation of the lead nymph's breasts massaging his hands.\n\nHe sank into a great cushion of foam. It gave against his body to start with, but became more solid as he sank deeper until it was able to support his weight. He reclined on the soft mass and the two nymphs lay beside him, tickling his ears with fizzing tongues.\n\nThe lead nymph fell forward onto him. Phil shivered in pleasure as her foam body rolled down his arms sending streamers of pleasure crackling across his skin. As her nipples brushed his she finally released his arms and they fell by his side, pleasantly numbed. The other two nymphs crossed their legs over his and enveloped them completely in a layer of foam that relaxed his limbs to perfect stillness.\n\nDimly, Phil realised he'd been immobilised, but his attentions were currently captivated by the foam nymph lying on top of him.\n\n\"Put it in me,\" she sighed.\n\nHer hips pushed down and there was a liquid shlupping sound as his cock was drawn into the foamy substance of her body. The sensation of her foam crackling against his fingers had nearly short-circuited his mind. The sensation of his cock sliding smoothly into the creamy substance of her body melted it into a puddle.\n\nPhil moaned and writhed in incoherent ecstasy as the bubbles popped and crackled all down his shaft like a million wanton kisses. The nymph sat up in his lap and moved up and down with agonising slowness.\n\n\"Feed us,\" the nymph on his right whispered in his ear.\n\n\"Give us form,\" the nymph on his left said.\n\nThe other nymph bounced on his body with slow, languid strokes. Her creamy breasts bobbed and swayed before his mesmerised eyes.\n\nShe sank deep onto Phil's shaft and he convulsed as a mighty orgasm shuddered through his body. His legs trembled as he felt his semen gush into the barely substantial form of her body.\n\nThe nymph sighed with contentment and settled down on Phil's body. She relaxed letting her breasts lie on and partially envelop his chest.\n\nPhil relaxed beneath her. He lay in a cocoon of foam that felt luxuriously soft against his flesh. His mind floated free in his body, temporarily disconnected by the sensory overload.\n\nA commotion bubbled in the nymph's body. She gave a low moan of pleasure and flexed her hips. Warm foam, thick like cream and soft like silk, gushed from her vagina and flooded Phil's cock and balls.\n\nOh fuck, Phil thought.\n\nWarmth enfolded his sac and sank right into his balls. He felt them start to swell and seethe with activity. His cock tingled and became even more engorged with blood.\n\n\"She's getting accustomed to your body. Her foam will become more and more pleasurable for you.\" A nymph whispered in his ear.\n\n\"Pump her full of your seed and let her drown you in bliss,\" the other whispered.\n\nPhil groaned as another powerful jet of cum erupted from his cock into her creamy insides. She shuddered and moaned as powerful reactions fizzed through her body. Her legs, more solid now, wrapped around his waist. She tensed and pumped a thick bubble of creamy foam around Phil's cock. The pleasure receptors in his skin went crazy.\n\nPhil's body trembled and shivered. He recognised this feeling from the times he'd been with Rosa and Verd\u00e9. His body was breaking down, tearing its tissues asunder and driving all his energy into his balls. The foam nymph was another kind of succubus and if Phil didn't stop he was going to ejaculate all of his life into her.\n\nShe sat up, a triumphant smile on her lips. Her hips gently rocked up and down over Phil's cock. His erection was completely lathered in her tingling foam and it was getting harder to think.\n\nHe groaned and another powerful ejaculation jetted from his cock. The pleasure was incredible, but his body couldn't take much more of this.\n\nHis mind desperately slithered and dug, looking for an answer before her final blissful embrace overtook him. It was words and summoning. Rosa and Verd\u00e9 had summoned these spirits. He had to figure out how to unsummon them.\n\nThe foam succubus's thighs trembled. She pushed and pillows of the thickest, creamiest foam flooded out of her vagina and rolled up his body. Her breasts swelled then pumped thick dollops onto his chest. She cocooned him completely and Phil shivered and shuddered in ecstasy as his whole body tingled with bliss.\n\n\"You're hers now,\" both nymphs whispered sibilantly in his ears.\n\nThe succubus on top of him started to solidify. Beneath the foam a devastatingly beautiful woman was emerging. She stared down at Phil with icy blue eyes.\n\nWords. Rosa and Verd\u00e9 had dismissed the undines. He had to find the correct words for these spirits of foam.\n\nOh fuck. He groaned.\n\nThe succubus rocked slowly on his cock. Her walls stretched and contracted as she pumped more blissful foam around his cock and gently massaged and kneaded it into his erection.\n\nPhil's balls swelled and twitched as felt an enormous orgasm building in his body. This would be the last he realised. If he started he wouldn't stop until every last drop was drained from his body.\n\nThe succubus squeezed another thick pillow of foam around his cock and let her vagina undulate slowly, letting the cream melt through his skin.\n\nFuck.\n\nHe could feel it coming.\n\nWords!\n\n\"Exhalarat dom Fomulessencae!\" Phil yelled.\n\nThe foam succubus cried out her frustrations as her body lost its cohesion and fell apart into small conglomerations of wobbling bubbles. Phil spurted a generous rope of semen over the piles of inert foam falling on his body, but the orgasm had an end. His balls throbbed painfully in the aftermath.\n\n\"Exhalarat dom Fomulessencae.\" The succubus on his right gave a disappointed moan as her body fell apart.\n\nPhil turned to the left. The remaining succubus didn't show any fear.\n\n\"Call us any time,\" she whispered.\n\nShe took his outstretched finger between her lips and gently sucked. Her bubbles crackled and popped against his skin.\n\n\"Exhalarat dom Fomulessencae.\"\n\nThe girl disappeared and wavy clots of foam drifted across the surface of the pool. Phil sank back into the foam bed and sighed with relief. He felt weak, but he was still alive. He closed his eyes and allowed himself to relax.\n\nA warm weight climbed on top of his body. Two breasts, ripe and full, rested on his chest. Phil opened his eyes and saw Rosa's blue eyes staring down at him.\n\n\"This is a comfy bed,\" she whispered huskily.\n\nOh shit, Phil thought, guessing what was about to come. He tried to wriggle out from under her, but he still felt too weak.\n\nRosa looked over to where Verd\u00e9 languidly rested against the side of the pool.\n\n\"Fuck?\" she asked, bearing her fangs.\n\n\"Fuck,\" Verd\u00e9 confirmed.\n\nFuck, Phil thought. She leaned down to kiss him and his lungs filled with her hot breath. Her labia opened up and her vagina swallowed his cock whole. She pumped her hips up and down, letting her silken inner walls slide up and down Phil's aching erection.\n\n\"Those little wannabe spirits are only pale imitations of what we are,\" Rosa said, bouncing on his cock.\n\nPhil's balls had already been fully juiced by the foam nymph's secretions. Rosa only needed a few quick pumps to get Phil gushing inside her.\n\n\"I hope you didn't give too much to those pitiful little half wretches,\" Rosa said. \"I'm feeling rather peckish.\"\n\nHer wings extended and plunged through the foam, scooping Phil up and enfolding him in her hot embrace. He bucked and twitched and fired another bolt of semen into her ravenous pussy.\n\nRosa growled with pleasure and picked up speed.\n\nPhil was fading into blissful darkness. Dark wings enveloped his thoughts.\n\n\"Rosa,\" Verd\u00e9 said, tapping the other succubus on the shoulder.\n\nRosa looked down. \"Oops. Um... Uh... I think we should send for Nurse Honey.\"\n\nPhil slid into welcoming blackness."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "summoning",
        "undine",
        "foam",
        "soap",
        "bath",
        "water sports"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-107"
}