{
    "title": "A College Professor's Discovery Ch. 03",
    "pages": [
        "The driver who had met Sherrie on her first and second arrivals at the Christchurch airport was grinning at her as he waited at baggage claim while she made her way through a throng of people, all who seemed intent on being the first to retrieve their luggage.\n\n\"Dr. Mathison! So good to see you again!\" said the dark-skinned man known only as \"Catchy\" to Sherrie and who greeted her enthusiastically after her long flight to New Zealand. When she asked the genial man his name on her first research trip, his reply \u2014 \"Just call me 'Catchy' \u2014 was of initial interest as Sherrie wondered if the game he described was also played by the tribe she had come to study. This did not turn out to be the case, and Sherrie tolerated with a smile Catchy's re-tellings of his abilities in the art of catching objects catapulted across great distances. \n\nThe university in Auckland which received part of the research funding made the arrangements for Catchy to be her guide and transportation, and Sherrie was happy to depend on them to handle everything that ensured Catchy's assistance on each of her trips.\n\nCatchy had developed an ease of association with Sherrie that she appreciated: not too talkative, always helpful, and always in good spirits. After dropping her off at the edge of the tribe's hunting and fishing boundary, he was always a dependable lifeline back to civilization during her time in some of the most inaccessible reaches of the beautiful island nation.\n\nCatchy retrieved the two suitcases she'd checked, and she trundled behind him with her carry-on bags. It was only a short distance before reaching his serviceable, though well-worn, vehicle.\n\n\"You back for another two months, Miss Sherrie?\" Catchy asked as they drove away from the airport on the long trip to the hotel where they would stay the night. The next morning they would head out early on the seven-hour drive into increasingly rugged terrain before reaching the remote location where Sherrie would finally be able to finish her research about the tribe.\n\n\"Only a month or so this time, Catchy,\" Sherrie replied, reacquainting herself with the deep blue of the New Zealand sky. \"I'm only here long enough to gather information on a couple more things I need to finish my book about the tribe and their customs.\"\n\nFinishing her research would include participating in the ceremony that had shocked and aroused Dr. Sherrie Mathison when she first witnessed the fascinating tribal ritual. The tribe's women, naked save for the phalluses strapped to their crotches, fondled the reverently presented male genitalia offered up by eager male tribesmen who knew the women would take their pleasure with those hard cocks as a way to ensure good hunting and good fertility.\n\nCock-fondling, though, was only the prelude. The climax of the ceremony, literally and figuratively, came when the women achieved orgasm as they screwed their lithe, muscular men in the ass, drilling the phallus strapped securely to their crotches repeatedly in and out of the proffered assholes exposed completely when the men reached behind themselves as they laid across the ceremonial altar and spread their cheeks wide. The exposure was a blatant invitation to the women, a request for penetration, a plea to be fucked with abandon until the females, breasts bouncing in time with their thrusts, reached shuddering and breathless release.\n\nEveryone in the tribe had been happy to tell Sherrie that good hunting, fishing, and female fertility were always ensured by the ceremony.\n\nIf a lean year ever did come, she wondered, would that put an end to the ceremony that so fascinated and aroused her?\n\nIf the erect nipples of the women and the erect cocks of the men were any indication, to say nothing of the clearly evident orgasms both parties always experienced as a result of their reverent yet exuberant ceremony, Sherrie suspected the man-fucking would continue whether times were lean or abundant.\n\nThe virginal tribal girls who tipped the urn of lubricant at the top of the men's splayed-open furrows would watch intently as the strapon-wielding women lined up their fake cocks and then pressed insistently inside while the men squirmed and moaned underneath them.\n\nThose demonstrations for the benefit of adolescent girls would have to continue, the anthropologist in Sherrie realized. The cultural and religious significance of the ceremony would demand it \u2014 again, in good years or in bad.\n\nOh, god \u2014 that first time! thought Sherrie whenever she remembered her initial viewing of the ceremony.\n\nIt had shocked her, aroused her intensely, and caused her pussy to lubricate immediately when she watched what the tribe's women did as they took obvious and intense pleasure in fucking the naked men before them. And it was clear the men were aroused just as intensely.\n\nTheir stiff cocks, bobbing between their legs as they pushed back onto the fake cocks sliding into their backsides, were clear testimony to the sexual pleasure they were taking as the receivers of their women's vigorous thrusts. The men's unbridled moans and throaty groans of pleasure were incredibly sexy sounds to Sherrie's Western-society ears, and remembering those male sounds of sexual urgency never failed to harden her nipples and moisten her pussy. When she added the memory of the women's promptings as they urged their partners toward climax, Sherrie was inevitably and almost completely distracted from anything other than a building desire to masturbate to climax, imagining herself strapped into a dildo and pushing it deep inside a naked man's upthrust and willingly displayed asshole.\n\nThere had been one or two very nearly embarrassing situations at boring college meetings after her return trip from New Zealand and back to the university to teach classes for a semester before finishing her research with the tribe on this trip. As the Chair of her department droned away about something infinitely less engaging than the sounds and pictures replaying themselves in Sherrie's mind, her daydreaming about the tribal ceremony had sometimes caused her trouble:\n\n\"Dr. Mathison? Did you hear the question?\"\n\n\"Oh . . . sorry, Dr. Jones. I apologize that I was thinking about how to handle a student situation in my 207 section. Would you repeat your question, and I'll get my thoughts redirected to where they should be right now.\"\n\nSherrie offered an apologetic smile, tipped her head in submissive acknowledgment and glanced down in a well-practiced move that could buy her a better shot at forgiveness in the male-dominated world of departmental politics. And she really did try to refocus.\n\nIs the man still looking at me? she thought, though, worried that maybe the bra and blouse she was wearing weren't sufficient to hide the taut nipples that were stubbornly perked up as a result of her daydream.\n\nShe had been thinking about what it would feel like when she grabbed the hips of one of the tribe's men and buried her strapon cock deep inside his asshole.\n\nSherrie somehow managed to last through that interminable semester, all the while fretting about how to become good enough at fucking a man with a strapon so that her final visit to the tribe would earn her entry into the women's confidence.\n\nWhy did seeing that have such an effect on me? she wondered. What deeply buried female desire did these highly spiritual yet joyfully spontaneous indigenous people tap into when I saw it for the first time?\n\nSherrie had thought long and hard about this mystery, wondering if the erotic act had always been considered natural among the tribe.\n\nIt truly seemed \u2014 from anthropological and sociological standpoints \u2014 a significant ritual in the life of the tribe. Elevating the act to ceremonial status must be some indication that both the women and the men considered it important that women take their pleasure in this manner.\n\nDo they know something about female sexuality that we jaded and \"civilized\" women have forgotten? Sherrie often wondered. \n\nDo the women do this only during the ceremony, or do they use their strapons as a regular part of sexual intercourse? Sherrie had mused on many occasions. Getting the answer was important to completing her research for the book. Indeed, that answer would be a key revelation about tribal society.\n\nAnd it would be on this trip that she would learn the answer if her practice sessions had resulted in Sherrie now being good enough at using a fake cock strapped to her crotch to make a man come as she stroked the shaft repeatedly in and out of his asshole.\n\nUntil she participated in the ceremony and proved her man-fucking abilities, the tribe's women had remained strangely silent whenever Sherrie asked about the ritual or anything related to it. In spite of the months of living in the village, being accepted in so many other ways as someone much more than an outsider who came to learn about them, the women remained adamant that they never spoke of certain issues with the girls in the tribe until after their passage to adulthood had been signified with her initial act of man-fucking in the tribal ceremony.\n\nSherrie would not get any answers about the religious origins of the ceremony or about sex between husband and wife until after she went through the same initiation as the adolescent girls when they proved they were ready to take a husband. With no other outsider ever having witnessed the ritual \u2014 something the tribe's women emphasized repeatedly when they allowed her to watch \u2014 it was important to Sherrie on a personal level to perform well so as not to disappoint the women. She would not want them to regret that they took her into their confidence.\n\nAnd Sherrie certainly did not want to disappoint the man she would be screwing!\n\nThe thought of giving him a powerful orgasm was just too delicious!\n\nThe anthropologist in her realized how much depended on learning the philosophy that undergirded the ceremony and the act of female-on-male penetration during sexual activity, but Sherrie needed to satisfy whatever primal urge had been awakened in her.\n\nShe needed to find out if the women were as turned on about fucking their men as she was about the thought of doing the same thing.\n\nHer last visit was supposed to have included her own public performance. Scared witless about doing it \u2014 the women would never share anything with a grown woman they deemed an inexperienced and clumsy man-fucker \u2014 Sherrie had concocted the excuse that her own man-fucking phallus was left at home, and she would bring it on her next trip because the device was different from theirs.\n\nHer quick thinking garnered at least some grudging indulgence from the women. They wanted to see this \"different\" kind of man-fucking tool for themselves, so they granted Sherrie dispensation, saying they would look forward to her return, her performance, and then sharing with her the tribal thinking about the ceremony.\n\nBut only IF Sherrie was deemed competent in screwing a naked, eager, opened man in his willingly presented, completely exposed asshole.\n\nAnd she would have to do this in a way that brought both her male and herself to deeply satisfying, intense orgasms.\n\nShit! How on earth did I get myself into this? thought Sherrie as she returned to the States.\n\nAnd that was why Dr. Sherrie Mathison, respected professor of anthropology at a prestigious American university, had engaged the services of \"Miss Victoria,\" a \"sensuous domme\" who agreed to provide three tutoring sessions in how to fuck a man in the asshole with a strapon cock.\n\n* * *\n\nOnly a few nights from tonight, thought Sherrie as she slid between the sheets of the hotel bed, I will be naked in front of the tribe's women, my feeldoe dildo snugged inside my pussy and strapped securely in place.\n\nThe thought sent a shiver through her as she adjusted the cover.\n\nThe next thought was inevitable: The naked tribal male, strong, lithe, a glorious ass muscled by the activities of hunting and building, bent over before her, lying across the ceremonial altar, his hands gripping the cheeks of his ass and spreading them open to her gaze as his balls hung heavy and his stiff cock bobbed beneath him.\n\nIncredibly arousing!\n\nDelectable!\n\nSo very, very inviting!\n\nThe thought always moistened Sherrie's pussy.\n\nThen, the next thought: The lubricant poured at the top of his ass crack, slowly rolling down to his puckered opening, glistening in the light and inviting her finger to slide into the center of his asshole.\n\nShe would do just that, feeling him open for her, sliding in deep and then back out to gather more of the lube and push in again, this time rotating her finger to spread the slippery substance around the inside of his snug rectum, preparing him.\n\nShe would add a second finger and repeat the procedure, hearing his moans, seeing the goose bumps rise on the backs of his thighs.\n\nSherrie had watched numerous times as the women displayed their talents in all aspects of the preparation, the taking, the coming, including the always sensuous, always careful and thorough preparation of the male's surrendered opening.\n\nHer pussy always got very, very wet seeing the men squirm, moan, and shudder in pleasure as the women's fingers prepared them for the longer, thicker, and more deeply filling penetrations that were to come.\n\nDamn! Why had I never even thought of this? she scolded herself on more than one occasion. It was simply too delicious, too easy to prompt an intense sexual release, NOT to have enjoyed this fantasy before.\n\nBut then her anthropologist self would always provide the obvious answer: it just wasn't a cultural norm in Western society. Neither Sherrie nor any young girl in America that Sherrie knew about grew up with shared wisdom from mothers or older sisters or aunts about sex with a man naturally including the occasional strapon fuck that brought both partners to deeply satisfying orgasms.\n\nAnd god knows that boys in America didn't grow up with masturbatory fantasies of surrendering their assholes to sexy women who would fuck them silly until their hard cocks shot gobs of cum. Even Sherrie's limited history of sexual encounters with men would have tipped her off if this had been the case. \n\nBut then, just as naturally as the rational, academic, scientific anthropologist in her served up its here's-the-reason explanation, the too-often buried, still-blossoming, naturally sexy woman in her pushed aside her research self in order to return to the pleasures of mentally watching \u2014 of imagining her own participation in \u2014 the erotic delights of strapon man-fucking.\n\nRestless in the hotel bed, Sherrie knew what would happen before she drifted to sleep.\n\nShe would masturbate as she remembered what she had done to prepare for this all-important final visit to the tribe about which she was writing her book.\n\nThat dizzying, insanely erotic stretch of days when she received a crash course in how to fuck a man with a strapon cock was less than a month in the past, but Sherrie still had to reassure herself that it had really happened. She still had a difficult time believing that she had arranged to learn from an expert who would provide her with multiple men to practice on and who would coach her through a journey from rank novice to sufficient proficiency to satisfy the most important panel of judges she would ever face.\n\nThe ultimate success of her research and her book depended on finding out the tribe's beliefs about the ritual and their practices between husband and wife. If Sherrie was judged a clumsy man-fucker who, at her age in life was inexperienced with men, then the women in the tribe would dismiss her as unworthy of full-blown womanhood.\n\nShe would never complete the most important research for her book \u2014 the part that would allow her to convey the cultural beliefs and identity that made this tribe unique. \n\nBut her spot in academic lore would be guaranteed if she performed well in that ceremony. The tribal women would take her into their confidence and share what would become the blockbuster revelations in her research.\n\nFail as a man-fucker, and Sherrie would still have to produce a book, but it would be a little-read treatise that advanced her academic career only modestly.\n\nSherrie was determined not to fail at the act which would make the difference between a highly praised academic publication and an also-ran. In spite of her relative inexperience with men, in spite of the fact that she had never \u2014 EVER \u2014 even imagined such a thing as plunging a strapon cock into a man's lubricated asshole before witnessing the tribal ceremony, in spite of everything that WAS Dr. Sherrie Mathison, she found a way to practice the fine art of strapon man-fucking before returning to the tribe.\n\nAnd so, over the course of only a few days, Miss Victoria had brought 'round three insanely sexy men, each of whom had stripped naked in Sherrie's townhome and enjoyed \u2014 LOVED! \u2014 everything that she and Miss Victoria did to them, all the while ensuring beyond doubt that none of the \"practice squad\" ever learned anything about Sherrie.\n\nIt was critically important that these men NEVER have any idea who Sherrie was, where she lived, or why she had engaged the services of the woman who was bringing them to some unknown location where they would be told to strip, to assume whatever position the inventive tutor Miss Victoria would tell them to assume, and then to obediently spread themselves open in preparation for another woman to lubricate their assholes as a prelude to fucking them in the ass with her strapon phallus while she played with their cocks, their heavy balls, their tight butts . . . well, Miss Victoria was most thorough in her coaching!\n\nAnd that was the thought that just pushed Sherrie over the edge. Her tummy fluttered each time she replayed opening the door of her townhome to reveal Miss Victoria and whichever of the men Sherrie had chosen for the fantasy she was about to surrender to.\n\nIf the fantasy man was Andrew \u2014 her first man-fuck \u2014 remembering the intoxicating cocktail of her extreme nervousness mixed with the incredible realization that, yes, she was going to see the man completely naked save for his blindfold in only a few minutes, inevitably caused her clit to engorge.\n\nAh, yes. Andrew. God! He looked so-o-o-o-o very good naked. His cock was beautiful, and the sight of that pretty pink shaft rising to full hardness and pointing to the ceiling as Miss Victoria kissed him . . . well, that was something Sherrie knew she would never be able to erase from the visual archives of her memory.\n\nAnd why on Earth would she ever want to?\n\nIf the fantasy was Trent, the swimmer and the second of Sherrie's \"practice men,\" the thought of what Miss Victoria had orchestrated with him during the session would always produce intense orgasms. Good lord! Miss Victoria video recorded Sherrie stroking her strapon into him after that sexy man had told them in explicit and glorious detail precisely why he was so intensely aroused by the thought, and the act, of a woman fucking him in the ass and why he loved the fact that the woman was turned on by doing it to him.\n\nSherrie adored that video. It was on her laptop in a password-protected folder named, \"Statistical analysis - Solter project,\" and in the days following the encounter with Trent she had opened that folder \u2014 what? \u2014 three times? Four times? Twenty?\n\nOnly once did she access that insanely arousing video with her laptop's high-definition output cabled to the big-screen TV in the living room of her townhome. Hearing Trent's groans through the sound system, seeing the shaft of her strapon sliding into his eager asshole, watching her naked breasts bounce as she fucked him while he squirmed and moaned beneath her \u2014 all on a big screen, in high-definition, and in full-color as it had occurred right there in her living room! \u2014 was so intensely erotic that it almost frightened her.",
        "Sherrie knew she would hook that cable up again . . .\n\nBut tonight, in this New Zealand hotel room, it was going to be fantasy Jason, the third male that Miss Victoria had brought for Sherrie's strapon practice.\n\nTall, dark, handsome Jason whose cocoa skin, tapered torso, and high, firm ass would also stay forever in Sherrie's memory.\n\nTonight, her fingers would stroke her clit as she replayed her third tutoring session with Miss Victoria.\n\nTonight, Dr. Sherrie Mathison, anthropologist and rising academic star in the staid world of university research publications, would lose herself completely in a specific set of memories. Those memories would be of the things she did, naked and strapped into a dildo that she enjoyed having between her legs, as she played shamelessly and in complete abandonment to her own sexual pleasure with the \"tall drink of chocolate whose sexy moans alone will make you come\" \u2014 the description her tutor had given the first time she spoke of the man brought to Sherrie's townhome for the final rehearsal.\n\nOne hand wandered to her left breast, thumb and forefinger moving naturally into position to pinch and tug her already stiff nipple. The other hand moved to her crotch as she spread her legs, allowing easy access for stimulation.\n\nSherrie launched the memory of her final tutoring session.\n\n* * *\n\nAs it had on the two previous occasions, the doorbell's chime jolted Sherrie from her nervous ritual of walking between bedroom and living room, glancing around at everything, checking repeatedly that all was in readiness as requested by Miss Victoria.\n\nIt was at least a little bit different this time. Sherrie had more confidence that she would perform the act without clumsiness.\n\nAll that practice with her strapon had paid off, both during her masturbatory sessions thrusting into the sex toy recommended by Miss Victoria and during the two previous occasions when Sherrie had fucked the men her tutor had brought for that purpose. Sherrie was more secure with her ability to consummate this sexy act in a manner that was not only acceptable, but with some degree of proficiency.\n\nMaybe I'll be able to participate in the tribal ceremony and look like I know what I'm doing, she thought, nervously smiling to herself as she straightened the simple top she wore over a favorite pair of comfortable jeans.\n\nBut no matter what discovery she would have made about herself in the last few months, no matter what effect her first exposure to the act of a woman strapon-fucking a man would have produced, Dr. Sherrie Mathison would always be a scientist. She would always be an anthropologist eager to create new knowledge in her field. Even if she had been completely turned off by the act, she still would have practiced it in order to be good enough at it to impress the tribe's women and be taken into their confidence.\n\nIt was a wonderful side benefit that she discovered immediately that she loved it.\n\nThe fact that her research literally demanded that she learn how to bring both herself to climax as well the man she would be stroking into with her strapon cock was \u2014 finally, blessedly \u2014 pay-back for all the shit she had endured as a female scientist playing the academic research game in a male-dominated field.\n\nI deserve every single second of blissed-out orgasmic self-indulgence I can possibly endure as a reward for what I've put up with at the university, she thought.\n\nTonight, she would take more of that bliss as she continued her mental replay of the session with Jason and Miss Victoria . . ..\n\nThe appointed time having arrived, and given her tutor's punctuality on the prior two occasions, Sherrie knew who had rung her doorbell. The habit of checking first through the door's peephole, though, was hard-wired, and she verified that it was, indeed, Miss Victoria and the male who would surrender himself to every stroke of her strapon man-fucking practice this evening.\n\nYes, it was her tutor, jet-black hair framing her extraordinarily beautiful face. Miss Victoria carried two bags, and next to her stood a tall black man, hair close cropped and strong jaw line evident even through the fish-eye effect of the peephole lens.\n\nIt was evening and the porchlight was off, as usual. The thoughtful suggestion from Miss Victoria minimized the possibility that neighbors would see her arrival and potentially inquire about it later. The weak illumination from a streetlight at the corner of the block, however, meant Sherrie couldn't discern much else about \"Jason.\"\n\nAs on both prior visits, Miss Victoria had blindfolded the man she brought along for the training session. He stood next to the \"sensuous domme\" who had taken Sherrie under her wing, sharing not only advice about how to do this outrageous thing really, really well, but also providing insights about the mental aspects of the act.\n\nMiss Victoria had clearly taken a special interest in her tutoring, going beyond mere teacher to become something close to a mentor. The woman had shared with Sherrie her own sense of loss at the dissolution of the relationship with her man \u2014 the man whom she had loved, made love with, and fucked to glorious climax at the end of the strapon he had bought for her as a special gift.\n\nAnd tonight Miss Victoria would share even more intimate revelations as she tutored Sherrie using Jason as the demonstration male.\n\nClosing the door after silently ushering them in, Sherrie went immediately into student mode, smiling at Miss Victoria briefly before darting her gaze quickly to Jason. Knowing how much sexual pleasure she was going to take in the coming hours as she toyed with him, she was as fascinated by this man as she had been by the other two men her tutor had brought for strapon practice.\n\nWhy did they do it? Why would these gorgeous guys pay a woman like Miss Victoria to plunge her strapon into their willingly proffered assholes? Further, why would they also allow the woman they were paying for that privilege to take them to an unknown location where a different woman did the same thing to them?\n\nDoes it feel THAT good? Sherrie wondered, endlessly fascinated with the male perspective on the act. Or is it that, no matter whether it's a mind-blowing pleasure trip or only just the need to scratch some kind of sexual itch, they can't find any women who will do this with them?\n\nHaving made her own discovery, Sherrie knew she'd volunteer to be such a woman any day of the week!\n\nBut she understood that asking a woman to fuck you in the ass with a strapon dildo was clearly not something that a guy would bring up on a first date. \n\nI can only trust Miss Victoria's insights, Sherrie mused as she looked at Jason, knowing what she would be doing to him this evening. It's not just the physical sensations generated in a man's anus \u2014 all manner of butt plugs and self-pleasuring techniques must be available to an inventive man to produce such feelings.\n\nSherrie smiled to herself, the idea of watching a guy do that momentarily threatening to hijack her train of thought as she eagerly anticipated the night's activities.\n\nWould a guy ever let me watch him doing that? she wondered, her nipples tingling at the thought. What would that be like? Good lord! Seeing him slide down on some toy and stroke his cock while he looked into my eyes, squirming on the toy and preparing himself for me to take him, knowing that he was doing this incredibly sexy thing specifically to arouse me, to get me so hot to fuck him that I would . . .\n\nSherrie shook herself back to the incredible reality standing in her living room, one which she would soon see completely naked save for his blindfold. \n\nWhy would Jason be doing this?\n\nIt's not that these men are gay, she knew. Finding other men who would do to them what I'm going to do tonight would be easy, Sherrie thought, admiring Jason's good looks (even partially obscured by the blindfold) and sexy body.\n\nNo, it must be as Miss Victoria had described it:\n\nFor men who had discovered the pleasure of BEING fucked, there must be true difficulties in finding women who would provide that heterosexual experience with an understanding and appreciation of the intense physical and psychological pleasure it can create for both partners. Such men must be forced to seek out substitutes, and for those not satisfied with self-stimulation, paying a woman who would only be a service provider and never a lover was at least better than settling for plunging a dildo into their own assholes.\n\nSo even though contracted-for, paid-for strapon sex would never match the true joy that Miss Victoria had said was part of strapon play between committed partners in which the woman wanted to please the man as much as he wanted to please her, maybe Andrew and Trent and Jason simply could not find women who were into creating such sexual pleasure. \n\nSherrie was learning about how this sexy act could create physical pleasure! She wondered if she would ever find a man who would surrender both his firm backside and his heart to her and still be the masculine, loving protector and mate that she so much wanted to find.\n\nThat must be incredible, Sherrie thought. It must be fantastic to give a man who is also your lover such fantastic physical pleasure.\n\nThe reasons that men enjoyed surrendering to a strapon fucking aside, maybe the most important lesson her tutor had taught her was that the enjoyments of man-fucking would intensify with each inhibition that Sherrie dropped.\n\nIt had taken a lot of soul-searching over the past few days for her to work through a myriad of issues that had erected steel-door barriers to deserving sexual pleasure. The delightful outcome, however, meant that Sherrie was now truly enjoying herself as she gazed blatantly and lustfully at the blindfolded man in her living room.\n\nShe wanted him naked immediately.\n\n\"Jason, the lady who is going to make herself feel incredibly good this evening as you provide her access to every inch of your body is a special friend,\" said Miss Victoria, strolling into the kitchen with her two bags, one of which Sherrie knew held a bottle of wine, the other containing lube, harness, dildo, and anything else the tutor brought along for her demonstration and pleasure. \"As I explained earlier this evening, she's going to watch us when I fuck you, coaching her about how to intensify the pleasure, and then she's going to fuck you, too,\" the woman said, calling out over her shoulder as she pulled the bottle of wine from the bag and placed it on the kitchen table.\n\nSherrie realized, of course, what Miss Victoria was doing. On both previous occasions, her tutor had ramped up the eroticism of the evening by making shocking statements sound matter of fact.\n\nYes, thought Sherrie, that's it, Miss Victoria. Tease him and tease me. I love the thought of fucking this man in his ass, and as a third-timer this evening, I just might finally be confident and practiced enough to be beyond any worries or self-conscious restraint.\n\n\"Jason and I will both enjoy ourselves,\" said Miss Victoria, grinning at Sherrie as she walked back to stand next to Jason, \"and I know beyond any shadow of doubt that you are really going to enjoy yourself.\" She crossed her arms, looked at Sherrie, then imitated what her pupil had done only moments before: she surveyed Jason thoroughly, top to bottom.\n\nSherrie noticed Miss Victoria's lips part slightly as she looked at the blindfolded man next to her. Those lips pursed as the woman exhaled softly before she sealed them together to enable a sexy sound: \"Mmmmm, Jason, you are going to look so very sexy standing there naked as we look at you.\"\n\nSherrie's nipples throbbed at those words. She had been intensely, unavoidably aroused as she waited for Miss Victoria to arrive for her third and final practice session. Hearing what her tutor had just said made her even more sexually eager. \n\nBefore the last few days, when she'd fucked two men in the ass with a strapon dildo, toying with both of them as she followed her teacher's gentle suggestions, Sherrie had slept with only a few men. None of them had been very giving sexually.\n\nNone of them had been anywhere near the physical specimens that Andrew, Trent, and Jason were.\n\nAnd none of them had been black.\n\nTell him to strip! Sherrie thought impatiently.\n\nMiss Victoria moved in close to Jason's side. She motioned Sherrie to the other. Planting one hand on Jason's butt, she cooed into his ear: \"I love your tight butt, Jason. I'll bet my pupil does, too.\"\n\nSherrie took the cue instantly. She dropped a hand behind the man and gripped his ass firmly as Miss Victoria moved her own hand away to saunter back to the kitchen and retrieve the bag she needed to prepare herself for her role as instructor. The woman was dressed simply this evening, a distinct difference from the other evenings when she had come in her \"working attire,\" and Sherrie wondered for a second what could be in the bag.\n\nIf it was any kind of clothing, there would be precious little of it.\n\n\"Drop your pants for the lady, Jason,\" Miss Victoria said, easing toward the bedroom door as Sherrie relaxed her grip on Jason's flank so he could follow directions. \"I think the lady would like to examine you while I strap into the cock that you adore having plunged inside your cute little pucker.\"\n\nHer breath catching in her throat at her tutor's words \u2014 the woman was leaving her alone with the man who was already unzipping \u2014 Sherrie watched, entranced, as Jason obediently completed his assigned task.\n\nHis pants dropped to the floor, jumbled at his ankles.\n\nAs with Andrew and Trent, he wore no underwear. \"I like them that way when we drive over,\" Miss Victoria had told her. \"They must work at restraining their thoughts so they don't soil the crotches of their slacks with pre-cum, and I think that makes them more eager to experience what they pay me for when we arrive.\"\n\nSherrie's hand reflexively jumped to her mouth, stifling a moan. \n\nHe was gorgeous.\n\nAt least, the muscled cheeks of his ass, peeking from the bottom of his shirt, and the cock that hung from his crotch were beautiful. Sherrie was eager to see the rest.\n\nShe reached to his chest and tugged on a button, sending an unmistakable message about what he was to do next. As with Andrew and Trent, Sherrie never spoke. It was one of the safeguards, along with the blindfold, to ensure that none of these men ever had an inkling of who she was.\n\nHe unbuttoned, still standing in place with his slacks at his ankles, and then he shrugged off the shirt, letting it fall behind him.\n\nOh, sweet Jesus! thought Sherrie. Those abs and that chest. Oh, Jason, you are straight from the fantasies I've had ever since Miss Victoria told me she was bringing over a delicious chocolate treat.\n\nMiss Victoria was still in her bedroom, and Sherrie suspected that her tutor had planned every bit of this interaction.\n\nShe always did.\n\nComforted by that thought, Sherrie placed her hands around Jason's thigh and urged it upward, indicating that he was to step out of his slacks. After toeing off his slip-on shoes, he did just that. Sherrie bent down to pick up pants, shirt, and shoes, and moved them quickly out of the way.\n\nJason was completely naked before her.\n\nThe inhibitions of her former self would never have allowed what Sherrie did next. But, then, Dr. Sherrie Mathison's former self had been taught some valuable lessons in the last few days. One of them was that it was enormously gratifying to surrender to one's natural impulses.\n\nShe stepped in front of Jason, closed her fist around his cock, and simply enjoyed everything about the act of holding a naked man's penis in her hand. As she hoped, the reaction it produced was a delight. His cock began to grow, and Sherrie loosened her grip a bit, sending the signal that he was to allow his excitement to mount, allow himself to display his naked, masculine pride at presenting her a sturdy toy of sexual enticement and pleasure.\n\nSherrie reached her other hand to his balls, cupping them as she looked down at the arousing sight: she was fondling him, his erection growing in response. It was so very satisfying to know that she was causing such a reaction in this handsome, buffed, sexy man.\n\nHer former self would never have considered such a possibility. Tonight, the thought of doing it was instant, natural, exciting, and pleasurable. \n\nSherrie toyed with him. From the first hint of eagerness in his warm cock nestled in her grasp to the taut, stiff evidence of his complete excitement, she savored the erotic satisfactions of triggering Jason's erection, his shaft pulsing with each heartbeat.\n\nIt felt divine.\n\nThe smooth, almost velvety texture of the head of his cock was so tempting. The thrill of feeling him become hard in her grasp, knowing that he was sexually stimulated because of what she was doing, was so arousing.\n\nAnd the fascinating feel and warmth of the male scrotum were recent discoveries \u2014 not something that Sherrie would have thought to hold such fascinations before her tutoring, but so pleasurable now that Jason was the third man in only a few days whose ball sac was presented for her enjoyment along with every other inch of his body. \n\nIt was exciting to palm his balls, to manipulate his orbs tenderly in their sac, to feel their weight and their warmth.\n\nBy now Miss Victoria should certainly have had time to complete her preparations, yet the bedroom door remained closed.\n\nSherrie smiled to herself. Tutor was signaling to pupil a level of trust in the student's proficiency. It was a nod of acknowledgment that Sherrie was a good learner.\n\nProceeding in her newfound sense of ease with enjoying sex and men \u2014 at least with blindfolded men who would never see her or know who she was \u2014 Sherrie released her grip on Jason's cock, noting with satisfaction its stiff state of arousal. Caressing his balls gently before releasing them, she moved her face close to his chest, drinking in the smell of him. She couldn't resist swirling the tip of her tongue across his collarbone, eliciting a slight jolt of surprise at first contact.\n\nTeasing a naked and blindfolded man was so-o-o-o-o naughty!\n\nIt was so-o-o-o-o fun!\n\nIt was an easy and natural thing to slide one hand down his rib cage, noting with satisfaction how doing so caused his cock to bob, the lovely cocoa shaft so stiff at attention for her.\n\nFor me! Sherrie marveled. Mere weeks ago and she would have never in her wildest dreams imagined herself doing this. \n\nThis ass, Jason, she thought, her hand sliding further down to rest on his hip briefly before traveling behind to caress one cheek, is mine tonight. I can't wait to spread you open.\n\nShe stepped behind him for better access and a better view.\n\nLovely. Absolutely stunning, and oh, so, very, very arousing! Sherrie mused, her gaze traveling from the man's firm glutes up to his narrow waist and then on up the flare of his back as it widened to strong shoulders.\n\nThe total package was mouth-watering, but Sherrie's eyes quickly darted back down to look at his strong, firm, rounded ass. \n\nAbandoning herself to impulse, she nudged the inside of one thigh with her knee to indicate he was to spread his legs apart farther. Jason complied. When his stance was opened sufficiently for her, Sherrie pressed one hand between his shoulder blades, sending the message that he was to bend forward. \n\nMiss Victoria must have put him in this position on numerous occasions, noted Sherrie as she watched him automatically lean forward, stiff-arming the carpet in order to present his nude butt high and accessible. Everything about his actions aroused Sherrie: the visual of his incredible, naked body; the way his cock and ball sac jiggled and bounced with his movements; the sight of him in the position he assumed and how it sent such an exciting invitation to her.",
        "Maybe most arousing of all was the eagerness with which he demonstrated his willingness to please her sexually, to excite her and give her the erotic thrills that would feel so very good to her.\n\nBut maybe not. Maybe the most exciting thing was the knowledge of what she was about to do to him.\n\nJason surprised her with the perfect clit-tingling detail:\n\n\"Is this a good position for you to play with me?\" he asked.\n\nAs Miss Victoria obviously lingered in the bedroom on purpose, this was the first time Sherrie had been alone with a practice man. Before, Miss Victoria had always coached the man, asking him to answer her questions, tell Sherrie his thoughts. Now, alone with Jason as he was nude and bent over in front of her, he asked if she liked seeing him like this.\n\nThese men pay her for this? Sherrie thought, incredulous yet again that men like Jason came to the \"sensuous domme\" and willingly indulged her (as well as themselves) in such erotically mind-blowing activities.\n\nWas he being purposefully naughty? Surely Miss Victoria had told Jason that Sherrie would never speak, that he was never to know who she was.\n\nWithout thinking (and congratulating herself for NOT thinking after she did it), Sherrie gave him a reminder about guidelines for the evening's activity.\n\nShe popped him with an open palm on one cheek, noting with satisfaction the surprised grunt from Jason's throat. Then she cupped his balls, nestling them in her palm and handling them as though she were gingerly testing the ripeness of a small, exotic orange: just a tiny, tiny caress and squeeze, so-o-o-o gentle, barely perceptible \u2014 tender but with a playful reminder about his vulnerability before her.\n\nHe moaned, her hand still closed lightly about his balls as she fondled them, toyed with them.\n\nIt was fantastic!\n\n\"I see you're reminding Jason about the rules,\" Miss Victoria said, startling Sherrie from her focus on what she and the naked man bent over in front of her had been doing for the last few minutes. \"He's playful sometimes, but he won't trespass.\"\n\nSherrie released his balls and straightened, turning toward Miss Victoria.\n\n\"One of the things I adore about Jason is his own inventiveness in adding to my pleasure,\" her tutor said, smiling at Sherrie. \"He finds ways to please that are delightful, yet he always knows the fine line of distinction between a naughty, exciting tease and going too far.\"\n\nMiss Victoria was naked except for the fake cock strapped to her crotch. It swayed seductively as she strode to stand in front of Jason, tossing the lube and towel she was carrying to the sofa before issuing a one-word directive to Jason: \"Knees.\"\n\nThe nude male buckled his legs from the bent-over position that Sherrie had placed him in. He effortlessly pushed himself upright so that he was on his knees, hands at his side, cock erect, and a small grin evident beneath his blindfold.\n\nMiss Victoria's nipples were hard, areolae dimpled, her own anticipation of sexual pleasure on display as she stood confident yet eager in Sherrie's living room. She extended one forefinger to Jason's lips, running her fingertip across them before pushing her finger into his mouth.\n\nThe act was so suggestive, so erotic. Sherrie watched, entranced, as Jason did to Miss Victoria's finger what Sherrie was dying to do to his cock.\n\nHe sucked it, licked it, made love to it with his mouth, tongue, and lips.\n\n\"There have been evenings,\" Miss Victoria said, watching Jason's mouth suck her finger inside, \"that he has been instructed to make sure my finger was thoroughly wet and dripping so that the preparation would mix with the lube I'd already spread on his asshole. The extra wetness on my finger is an arousing reminder to me of how eager he is for me to finger-fuck him.\"\n\nGod! thought Sherrie, she's going to verbally tease the man \u2014 and me \u2014 again this evening. \n\nSherrie loved it when the woman did that. One of the lessons Miss Victoria always emphasized was that Sherrie should explore and enjoy every avenue of sexual titillation and pleasure she could imagine as she dropped her inhibitions about initiating sex with a man. Talking dirty was so foreign to Sherrie at the start of her tutelage that she would never \u2014 EVER \u2014 have even thought about doing it.\n\nNow, during her third tutoring session, she looked forward to hearing Miss Victoria's practiced and smooth delivery as she verbally teased Jason (and Sherrie!) with commentary, instructions, and questions that inevitably ratcheted up the anticipation of the man's surrender to penetration and both partners' orgasmic release.\n\nA sexy moan rumbled from Jason's chest.\n\n\"But there have been other evenings when he's been the one to lubricate both the fake cock strapped to my crotch and his own asshole,\" Miss Victoria said, looking at Sherrie with a conspiratorial smile. \"I like watching his eagerness to be taken as he prepares himself, and sometimes I stretch that exciting visual out, entranced by how he does it, by how he spreads the lube and pushes it inside. That always make me really wet.\"\n\nSherrie swallowed hard. The scene Miss Victoria was painting played out in vivid detail on the screen of her imagination. It was confirmation satisfying Sherrie's excited curiosity about whether watching a man prepare himself to be taken anally would be arousing.\n\n\"A man eager to be fucked, eager to be prepared for the fucking, and lubing himself up for my thrusts is almost as exciting as doing that intimate act to him myself,\" Sherrie's tutor said, finally pulling her finger from Jason's mouth. \"But tonight, I'll let you prepare him,\" she said, dragging her finger across Jason's cheek before cupping his chin and placing her other hand on the back of his head.\n\nSherrie instantly held her breath. What Miss Victoria was doing sent an unmistakable message: she was going to push her strapon cock into the man's mouth.\n\n\"I adore seeing this,\" Miss Victoria purred, and she placed the tip of her strapon at Jason's lips. \"Open.\"\n\nOh. My. God. thought Sherrie, entranced.\n\nHe parted his lips, and Miss Victoria slid an inch of her fake cock into his mouth. \n\nHis lips sealed around it.\n\n\"He can deep throat for me, and I just love that,\" Sherrie's tutor said as she pushed another inch into Jason's mouth, still holding his head. \"If a man surrenders to your strapon in a way that shows you he's worked at pleasing you, at overcoming his own limitations and even his former hang-ups and silly misconceptions, well, that is a truly exceptional gentleman.\"\n\nAnother inch disappeared inside Jason's mouth. Sherrie was fascinated, incredibly turned on, and desperately anticipating more of this nasty, sexy, and somehow oddly yet convincingly tender scene. She remembered to breathe, quietly and carefully, not wanting to spoil even the minutest degree of the clit-hardening lesson Miss Victoria was orchestrating for her.\n\n\"It took him a while to get there,\" Miss Victoria said, releasing her hold on Jason's head in order to place her hands gently about his ears, another act that sent a tidal wave of sexual anticipation in Sherrie's direction.\n\nThe visual was riveting: Jason, completely nude and on his knees in front of Miss Victoria, his cock erect and pulsing in excitement; she holding his head as she slipped her fake cock between his lips, looking down at the sight of her shaft disappearing inside his mouth.\n\nJason's throbbing erection testified to his intense arousal. He wasn't being used. He was taking his own sexual satisfaction in pleasing the woman who would fuck him.\n\nSherrie didn't know how she would avoid an orgasm if she saw the shaft of Miss Victoria's strapon slide completely down Jason's throat. The act would signify his total surrender to pleasuring the woman who wanted to play with him for the explicit purpose of sexual gratification.\n\n\"But he worked at it in order to arouse me,\" Miss Victoria continued, gently pressing another inch into his mouth, \"and I'll never forget the first time I saw this.\"\n\nThere. Right there, thought Sherrie, juices flooding her pussy in a mini-orgasm as Jason slid forward on Miss Victoria's strapon in order to seal his lips around the base of the shaft protruding from her crotch.\n\nWill I ever be lucky enough to find a man who would do that for me?\n\nJason withdrew, nostrils flaring in a big breath as Miss Victoria's strapon emerged from his mouth. She quickly grabbed the base of the shaft and tugged the dildo upward, a movement that Sherrie knew was nudging the bulb end of the V-shaped toy against the woman's G-spot. Miss Victoria came quickly, shuddering as she arched up on tip-toe in reaction to her orgasm.\n\n\"Share,\" gasped the tutor, between recovery breaths as she came down from the high of her orgasm. It was obviously another one-word command arranged ahead of time, prompting Jason to speak. Miss Victoria walked shakily to the sofa and slumped onto it, breathing heavily.\n\n\"There's the incredible sexual pleasure of being fucked in the ass by Miss Victoria's strapon,\" he said, still on his knees, his cock still stiff and pulsing. \"But there's also the mind-trip pleasure of getting her off, of doing whatever I think will arouse her.\"\n\nHis sexy baritone voice was silky smooth.\n\nSherrie quickly pulled off the loose top she had been wearing. Knowing from previous sessions what to expect, she had worn no bra. Jason's description had her desperate to tug on her distended nipples. She was dying to feel that ripple of pleasure that stimulating her nipples always produced.\n\nHe continued. \"I thought that seeing me deep-throat her strapon might excite her, so I practiced on one of the toys I had, all the while thinking of how much she might get off seeing it.\" He dropped a hand to his stiff cock and began to stroke himself slowly as he continued, a sight that in itself was fascinating and arousing and which demanded Sherrie's full attention. \"It almost made me come when I heard her gasp and looked up into her eyes the first time I deep-throated her strapon.\"\n\nBoth Jason and Miss Victoria seemed to savor his story, she languidly rolling a nipple between her thumb and forefinger while semi-reclining on Sherrie's sofa, he now eased back on his haunches, knees spread apart, and shamelessly stroking his gorgeous erection.\n\n\"I still masturbate to the memory of turning her on so much by doing it, and I like to invent new fantasies in which I tease her by telling her I'm going to take her fake cock completely down my throat to prove how much I want to make her wet and hot and desperate to come.\"\n\nJason stopped the motion of his fist up and down his throbbing cock, clearly at a point where continuing would risk his own orgasm.\n\nYes, that's it, you lovely man, thought Sherrie, still tugging at her hard nipples. Tell us how much you want to sexually please a woman! \n\nWhat Jason was describing was like the best possible combination of the raunchiest sex imaginable mixed into a deeply satisfying romance novel. The combination was more than intoxicating; it was addictive.\n\nFinally stirring from her satisfied release, Miss Victoria straightened on the sofa and smiled first at the sight of Jason, his cock now visibly throbbing in arousal as his position displayed it completely to her gaze, and then at Sherrie, nodding her head slightly in Jason's direction.\n\n\"He is gorgeous like that, don't you think?\" she asked with a wicked grin. \"I'd wager his excited cock is just as hard as the shaft of my toy.\"\n\nA fake cock, though, could never throb the way Jason's real cock was doing as the two women took their pleasure at the sight of him. He was a master of self-control if the bobbing dick between his spread legs were any indication of how close to orgasm he had teased himself. A large, glistening droplet of pre-cum had oozed from the head of his cock and was clinging to the underside of his shaft as it made its way languidly down toward his testicles.\n\nA brief look of concern flitted across Miss Victoria's face, and she pushed herself to her feet. \"Was it here that you keep your camera?\" she asked Sherrie, pointing to the drawer of an end table next to Sherrie's favorite reading chair. \"You undoubtedly want some nice pictures of Jason as he's completely naked with his beautiful and exciting erection so nicely on display for us, no?\" \n\nSilly question, thought Sherrie, but truly appreciative that it had been asked. Hearing it, and realizing what it portended, excited her.\n\nMiss Victoria had found Sherrie's camera. She walked to Sherrie, her strapon cock still glistening at the tip from the wetness Jason's mouth and throat had deposited there.\n\n\"Jason knows he will be a photographic subject tonight,\" she said, the shaft of her dildo again swaying with the motion of her hips as she stepped in front of Sherrie to hand her the camera. \"He's aware that part of our bargain tonight is his pleasure in exchange for ours as well as your additional, repeated pleasure in the future as you look at his pictures.\"\n\nAs with practice man Number Two, this session would produce photographic evidence of a naked, gorgeous male with his stiff erection on complete display for Sherrie.\n\nSmiling, Miss Victoria lowered her voice and said, \"I have a modest collection of photos of Jason in which he's nude, erect, and on total display for me. It serves me quite well from time to time as I masturbate and look at his lovely cock and balls, remembering how delightful they feel in my hands. The pictures of him smiling for me as he spreads himself open to show me where I plunge my strapon are also quite compelling.\"\n\nMiss Victoria had chosen the volume of her voice perfectly. The softer statement implied a confidence she was sharing with her pupil, but her words were still loud enough for Jason to hear.\n\nSherrie noticed his cock bob and a little shudder pulse through his body when Miss Victoria spoke of masturbating to his pictures.\n\nA true master mentor, Miss Victoria read Sherrie's thoughts when she noticed Sherrie's quick intake of breath upon seeing Jason's reaction.\n\n\"I don't think he's necessarily an exhibitionist. I think he just adores the thought of making me hot and wet. Let's ask him if it excites him to think about me masturbating to his naked pictures.\"\n\nThe tutor smiled at Sherrie, then turned to Jason and squatted before him in order to be in a comfortable position to extend her hand and trace a fingertip up and down the length of his throbbing shaft. A quick glance in Sherrie's direction indicated that what she was doing would make for a nice photo.\n\n\"Does it excite you to know that a woman enjoys seeing you naked, Jason? Does it get you hard when you think a woman might actually be aroused enough looking at pictures of you naked and erect to want to masturbate, to stroke her clit, to stimulate herself to orgasm?\"\n\nThis woman must continually practice talking dirty, thought Sherrie, flicking on the camera, thankful that its auto-focus would allow her own focus to be on the sum total of what she was hearing and seeing. She was enormously turned on by the question Miss Victoria had asked Jason. The thought of it \u2014 a man becoming aroused merely by knowing that a woman was gazing at his picture, erect and naked for her \u2014 was so sexy!\n\n\"Do you like it that the lady is going to take pictures of you like this and then look at them later while she masturbates?\"\n\nJason's breath caught in his throat as Miss Victoria cradled his stiff cock into her palm and she began rubbing her thumb up and down across the sensitive bundle of nerves underneath the plum-like head, using his pre-cum as lubricant for the sexy act.\n\nIt was another photo-op that Sherrie could not miss.\n\nClick. Click.\n\n\"Tell us whether you'll enjoy knowing that from now on it won't just be me; there will now be two women with pictures of your nude body, of your stiff dick, of you playing with yourself. Will you like it that when we look at those pictures we'll know how much you adored taking our strapon cocks up your ass, what your moans sounded like as we fucked you? Does it arouse you to think that seeing you naked gets us so hot that we pet our clits as we remember the sight of you shamelessly squirming in order to bury the shafts of our strapons even deeper inside your ass?\"\n\nOh, shit! thought Sherrie, knowing she would have to shuck off her jeans immediately in order to masturbate as she watched and listened to Miss Victoria tease Jason.\n\nShe managed another picture, though: Click.\n\n\"We both will look at your pictures, Jason. We'll look at the pictures of you naked and stiff for us, desperate for us to fuck you.\"\n\nSherrie quickly set the camera aside and stood to unzip and slide off both jeans and panties in one motion, impatiently struggling out of the tangled material at her ankles so she could plop back on the sofa, legs spread, hand instantly at her wet crotch.\n\n\"So, Jason, you're going to have to walk around the rest of your life knowing that you've shown your naked cock \u2014 hard, throbbing, and slick with pre-cum \u2014 to multiple women who love the thought that you're erect and dripping because you want them to fuck you in the ass.\"\n\nSherrie knew she was going to come, her fingers now stroking her very hard and very slippery clit.\n\n\"Do you like this, Jason? We're both going to take pictures of you, and we're both going to fuck you.\"\n\n\"I love it,\" Jason said, a sheen of perspiration on his forehead as he obviously worked at not ejaculating into Miss Victoria's hand. She ceased her tortuous tease, removing her hand from his cock.\n\n\"The thought of both of you masturbating while you look at me naked and with an erection is fantastically arousing,\" he managed, the tone in his voice making clear his relief that he was no longer at immediate risk of orgasm. \"The thought that it turns you on to know that I'm loving every second of what's happening right now and for the rest of this evening because I totally dig pleasing you, and being fucked the way you do it to me, is just incredible.\"\n\nSherrie clamped down on her hand as her orgasm hit. Jason's words and sexy voice \u2014 as well as the content of his thoughts \u2014 were simply too much to take in without triggering a climax. She teased out one more intense wave with a brief brush of fingertip against clit before dragging her hand away, slick with her juices as a wave of shudders coursed through her naked body.\n\n\"What a pity, Jason,\" Miss Victoria said, continuing her tease. \"You're not able to see that the lady has just had a wonderful orgasm. She obviously came because what you said, and the sight of you as you are right now, excites her.\"\n\nMiss Victoria paused, smiling at Sherrie before once again reaching a fingertip to Jason's throbbing shaft. \"She's quite beautiful, especially right now in the flush of her orgasm. You would adore seeing her erect nipples. They are quite prominent, nice and long and very, very hard.\"\n\nThe flutter in Jason's stomach was visible as Miss Victoria dragged out this outrageous tease, both with her feathery touches along the underside of his cock and with her sexy commentary. \"You would like to suck on her nipples. They are taut and aroused and would feel so exciting in your mouth.\"\n\nSherrie cupped her breasts, reaching her thumbs and forefingers upward to pinch both nipples. Her tutor's words and the incredibly erotic scene in front of her forced the unconscious reaction. She ached with desire to feel what Miss Victoria was telling Jason he would love to do to her hard, tingling nipples.\n\nMotioning Sherrie to the spot she was vacating in front of Jason, Miss Victoria moved to his side.\n\nAs they took their places in front of and to the side of their excited toy, Miss Victoria kept up her arousing commentary.\n\n\"If you promise not to come, Jason, the lady will close her fist around your hard cock and lean her breast to your mouth.\"",
        "Sherrie's hand shot immediately forward, grasping Jason's stiff dick. She leaned toward him and pressed a nipple against his lips.\n\nJason moaned as he hungrily sucked her erect nipple. The sound turned Sherrie on enormously.\n\n\"See,\" purred Miss Victoria. \"I told you that she has magnificent nipples.\" She reached a fingertip to the head of Jason's cock, the length of which could not be contained within Sherrie's grasp. Collecting the droplet of pre-cum oozing out onto the pad of her fingertip, she said in a throaty whisper, \"Remember, Jason, do not come.\"\n\nHe moaned again, and the sound vibrated around Sherrie's nipple as he pressed it between his tongue and the roof of his mouth.\n\nMiss Victoria moved her hand behind him. In his position \u2014 still on his haunches, legs spread, Sherrie's hand grasping his throbbing cock \u2014 his ass was a few inches off the carpet.\n\n\"Do not come,\" Miss Victoria again cautioned, this time leaning her lips close to his ear and breathing heavily after her reminder.\n\nSherrie felt the reaction in her hand the instant Miss Victoria's fingertip made contact with his asshole.\n\n\"Do not come, Jason,\" was the barely audible command once again given, this time with Miss Victoria's lip lightly brushing against his ear lobe. Sherrie sensed his desperation to control himself \u2014 the incredibly intense arousal Miss Victoria was producing with her sexy command and the gentle strokes of her fingertip across his crinkled opening threatened his self-control powerfully.\n\nSherrie tightened her grip around his cock, clamping hard, short-circuiting any potential release. At the same time she placed her other hand on the back of his head and pressed his face against her breast, seeking to prevent the orgasm that she knew must be dangerously close to escape within Jason's trembling body.\n\nHow could this man not be desperate to come? Sherrie thought, the idea pushing itself through the enjoyable fog of her own sexual pleasure. I have his stiff cock in my grasp, and Miss Victoria is fingering his asshole with his own pre-cum providing the lubrication. \n\n\"When we take your picture in just a minute, your cock is still going to be hard because you've been so very good for us not to shoot your cum while we play with you,\" Miss Victoria whispered. \"And then, when we look at that picture, we're going to remember what this felt like.\"\n\nSherrie relaxed the tight pull of Jason's head against her breast and leaned back, sending the signal he was to release her nipple from his mouth.\n\nHer grip remained firm on his hard dick.\n\n\"When we look at the picture, Jason, we're going to remember what it felt like. The lady will remember the feel of your mouth on her breast, sucking her nipple, as she fisted your erect cock.\"\n\nSherrie pushed her other nipple into Jason's mouth.\n\n\"And I am going to remember everything about this moment, how I'm whispering into your ear, how my strapon cock is still moist from your sucking, how your asshole is relaxing open for me right now while I massage you, the sticky wetness of your pre-cum soothing the entry of my fingertip just barely inside the warmth of your asshole,\" Miss Victoria whispered into Jason's ear.\n\nShit! thought Sherrie, jerking away from Jason's delicious ministrations to her nipple. The woman is going to make ME come, just by what she's saying!\n\nTurning her head from Jason's ear to notice her pupil's reaction, Miss Victoria smiled. Realizing Sherrie's excitement, she knew exactly what to say next:\n\n\"I love it that you're opening your asshole for me, Jason. I love how it feels when you invite my finger inside.\"\n\nSherrie released Jason's cock, rocked back, and squirmed through another orgasm, gritting out a moan of release that caused Jason's stiff shaft to bob in excitement.\n\nMiss Victoria stood and strode quickly to the sofa where she had dropped the towel she brought with her from the bedroom. After wiping her hand she grabbed the camera from where Sherrie had dropped it.\n\n\"You are being so very, very good, Jason,\" Miss Victoria said, her strapon gently wagging side to side as she moved backward and to the side of Jason and Sherrie. \"We've teased you unmercifully, yet you haven't come. I'm very proud of you. I promised the lady a thorough tutoring session, and you're doing your part beautifully.\"\n\nJason's cock bobbed in acknowledgment.\n\n\"The lady will allow you once again to suck her nipple, Jason,\" Miss Victoria said, indicating to Sherrie with a darting glance that she was to resume the position of a few moments earlier.\n\nIn a New York minute! thought Sherrie, instantly back into position and drawing Jason's lips to her nipple as she again clamped her hand around his hard cock.\n\nClick.\n\n\"This will look so erotic displayed in full color on a large screen,\" Miss Victoria said, her voice throaty with excitement. \"Your beautiful, naked, masculine body at attention for the lady as you suck her nipples.\"\n\nClick.\n\n\"How lovely, Jason.\"\n\nClick.\n\nSherrie loved everything about this fantastic scenario. Jason's hard dick throbbing in her hand. His wet mouth sucking at her breast, his tongue running across the end of her distended nipple. Miss Victoria taking pictures so she could she for herself how stunningly sexy the act must appear for anyone lucky enough to see what was happening.\n\nClick.\n\n\"I'm sure the lady is eager to inspect the hungry opening that was so desperately flexing open for my fingertip a moment ago, Jason.\"\n\nThe comment forced an unconscious reaction from Sherrie. She ground Jason's face hard to her chest and squeezed his cock, milking upward to push out another glistening drop of pre-cum. She eased her push on the back of his head and drew back, sliding the hand on his cock upward, moving her fingers across the plum-like head and smearing his wetness into her palm.\n\nClick.\n\nSherrie pushed back from Jason, settling on the carpet awkwardly in an anxious hurry to taste him. She lapped at the wetness in her palm like a cat licking cream from a saucer.\n\nWhere did that come from? Sherrie wondered, but only briefly, as some stubbornly remaining part of her old self almost resurfaced. The old Sherrie \u2014 pre-strapon fucking Sherrie, sexually constrained and uptight Sherrie \u2014 would never have been eager to taste a man's pre-cum.\n\nBut Old Sherrie was less and less a consideration as New Sherrie learned more and more about the joys of surrendering to the impulses that surfaced during sexplay, either with a man in person as she had been with Andrew and Trent and now with Jason, or with a man in naughty masturbatory fantasies.\n\nBesides, Jason tasted delicious!\n\n\"Maybe a picture coaxing more of his wetness directly from his stiff dick would be nice, don't you think?\" Miss Victoria asked, a grin evident from behind the camera. \"Stand up, Jason.\"\n\nHis cock bounced as he scrambled to his feet. It was a simple matter for Sherrie to push herself to her knees in front of him and slide several inches of his gorgeous erection between her lips and into her mouth.\n\nClick.\n\nWhat Miss Victoria was orchestrating with her spoken directions \u2014 and then capturing with Sherrie's camera \u2014 was nothing less than a superbly masterful short film. She was putting her characters through their paces as she placed them into ever more precarious situations. Jason's situation was the most compromised as the male working desperately to prevent an ejaculation that was being urged on him by every nuance of Miss Victoria's words and actions as well as the things that the heroine in the story was doing to him as she followed the Director's advice for how to act and what to do with him in this scene.\n\nThe artful director in Miss Victoria knew that she would have to be very careful with the scene right now.\n\nA man getting his cock sucked was always at risk of coming, but that was not scripted until the female lead in this drama had her strapon buried deep in Jason's asshole.\n\nBut Sherrie's role as the plot advanced was not without its own challenges. She could not allow any hint of her identity to escape, even in the throes of the intense distractions created by the powerful, ecstatically consuming eroticism and multiple orgasms produced by interactions Miss Victoria was directing. A moan or a groan, a throaty, \"Mmmmmm,\" coaxed automatically in reaction to the sensually delightful physical sensations Jason was producing in her body (and her mind!) would not divulge her identify to the naked man she was toying with at Miss Victoria's staging, but clamping down on the primal impulse to voice her pleasure in words was becoming increasingly difficult. \n\nSherrie was becoming more natural as a woman enjoying sex, and the delights of intensifying that enjoyment were beckoning. Satisfied that Miss Victoria's safeguards meant that the practice men were clean, healthy, and willing specimens of male virility also helped her let down barriers that she had unconsciously struggled with for so long. \n\nHer frustration was mounting, though, at having to take one step back from total immersion in this sexually thrilling experience each time she strangled the impulse to speak her own thoughts to the sexy nude man whose erect cock tasted wonderful.\n\n\"I love how hard and stiff you are for me,\" would have been so arousing to say, to hear as the words left her mouth when she backed off his cock, knowing that her sexy comment would add to Jason's excitement.\n\nShe had never said such things to any of the guys she'd slept with \u2014 and there had been very few sexual encounters for Sherrie, anyway.\n\nHow much fun it would be to talk dirty, playful yet still nasty, to ramp up a guy's excitement at what she was doing to him!\n\nBut she could not speak. Jason must never get any hint of anything about Sherrie that could identify her.\n\nShe longed to see his cock bob in reaction to something she said. Seeing the physical evidence of her ability to excite him with her words would have added immeasurably to the satisfaction of knowing she was becoming proficient at sex with men in ways other than taking them with her strapon. It would be so empowering!\n\nWill I be able to say sexy things, to arouse a guy like Miss Victoria is doing, when I finally get into a sexual relationship? Sherrie wondered. Her newfound ability to give herself permission to enjoy thinking about expressing herself sexually, to think about taking the lead in a seduction, to masturbate to visions of things like what she was doing right now \u2014 that empowering freedom was now demanding that she give voice to her thoughts as she toyed with the naked man who would soon be enjoying the thrusts of her strapon.\n\nShe channeled her frustration at not being able to voice her impulse to excite Jason with her words into exciting him in a much different way. Sherrie leaned forward on her knees and took more of him into her mouth.\n\nClick.\n\n\"Oooh, Jason, I had no idea the lady could take so much of your hard cock into her mouth,\" Miss Victoria said.\n\nClick.\n\nIt made Sherrie proud, and she managed to get another inch of his cocoa-hued cock inside her mouth, now close to what she knew was her limit.\n\nHer nipples tingled and her tummy fluttered at the realization that she was training herself in cocksucking by taking as much of Jason's hard dick into her mouth as possible.\n\nI'll love doing this to some guy in the future! Sherrie thought, finally backing off and withdrawing his cock completely in order to gulp in a big breath after testing her limits as a cocksucker.\n\nClick.\n\nJason was breathing heavily, his cock glistening with the moisture from Sherrie's mouth.\n\nYou look delicious, Sherrie thought, her gaze fixed on his lovely erection. She immediately leaned forward and again engulfed him, loving the feel of the head of his cock as it slid across her lips and into her mouth.\n\nClick.\n\n\"Men generally adore it when a lady swirls her tongue on that special spot just underneath the head of their dicks,\" Miss Victoria said, dropping her camera and stepping close to Jason in order to pinch one of his nipples between her fingers. \n\n\"Isn't that right, Jason?\" Miss Victoria asked, releasing his nipple to step back and resume her photography.\n\nHe moaned.\n\nSherrie loved hearing the sound, and she began running her tongue repeatedly across the spot that Miss Victoria had just mentioned.\n\n\"Oh, please, don't do that too much,\" Jason panted, answering Miss Victoria and begging Sherrie to take care with her teasing strokes. \"It will make me come. I won't be able to hold back. God, you're driving me crazy!\"\n\nHis words were thrilling. I'm giving this man sexual pleasure, making him desperate to come! thought Sherrie as she ceased the motions of her tongue and gently withdrew Jason's cock from her mouth. I'm exciting this man and creating intense sexual pleasure for him, she realized, the thought causing a little shudder of arousal that sent a flush of warmth to her nipples.\n\nIt was an intoxicating elixir. Her former self would never have imagined this, never have conjured the impression of her as a skillful fellatrix, a woman good at sexually exciting a man and who could arouse him to the point that he would beg for the release of an orgasm.\n\nThank you, Miss Victoria, Sherrie thought as she closed her eyes briefly and ran her tongue across her lips, savoring the taste of Jason's cock.\n\nClick.\n\n\"The lady seems to be enjoying herself, Jason. You're doing such a good job for us.\"\n\nClick.\n\n\"Maybe it's time we let you show us how nicely you take a strapon and how much you enjoy it.\"\n\nHer tutor's words instantly snapped Sherrie from her reverie.\n\nShe was so ready to fuck Jason!\n\nIn a lengthy phone conversation with Miss Victoria earlier in the day, Sherrie had indicated that this session with Jason should attempt to re-create as much as possible all the details of the performance arena where her man-fucking skills would be judged by the tribe's women. Sherrie's recall of the ceremonial space where the fucking would happen meant she shouldn't use the wedge which had been such fun when Trent offered up his delectable ass in the previous practice session; it was nothing like the altar that the tribal men leaned over as they offered their firm backsides to the women who would fuck them.\n\nThis was the last practice session before she would leave on her final research trip to New Zealand, and Sherrie wanted to replicate as much as possible the positioning of the act she would demonstrate in order to win the confidence of the tribal women.\n\nShe would fuck Jason as he leaned over her kitchen table.\n\nShe would also video record the event, having discovered how very hot it was to watch herself pleasuring a man with her fake cock as she stroked it into his asshole. Yes, the video would be instructional \u2014 Sherrie would scrutinize her performance to see if there were any little thing she could improve on before her command performance before the tribal women \u2014 but, damn!\n\nIt would be so much fun to watch the video while she masturbated!\n\nWanting her own videocamera to capture this sexy act, and hoping that at some point in the future she might be in a relationship with a lover who would enjoy performing for her (Hurrah for New Sherrie! she thought), she had bought the necessary equipment earlier that day. It was set up in her kitchen, the zoom already set to frame the action perfectly.\n\nMiss Victoria's words, \". . . let you show us how nicely you take a strapon,\" thrilled Sherrie enormously. She would soon be making Jason and herself come as she enjoyed the gut-clenchingly erotic act of fucking him in the ass, but she would also be recording the action for future viewing.\n\n\"We'll remain here, Jason,\" Miss Victoria said, stepping to Jason's side to cup his balls and fondle them, her other hand still holding the camera. \"The lady will retrieve her strapon and harness.\"\n\nSherrie's questioning gaze toward Miss Victoria as she rose from her knees in front of Jason lasted only a second because her tutor continued with instructions for the naked man whose balls she was toying with.\n\n\"I think the lady might enjoy looking at pictures which frame both herself, nude and beautiful as she steps into her harness and prepares to fuck you, and you as you stand naked and erect in anticipation next to her.\"\n\nSherrie knew instantly that she would love seeing such pictures!\n\nWhere did Miss Victoria ever come up with these ideas?\n\nThank god she did!\n\nSherrie hurried into her bedroom and into the master bath where she'd put out lube, her harness, her feeldoe dildo (Oh, that fantastic invention, Sherrie thought, each time she used it).\n\nBut there was no need for any lube on the bulb end of the V-shaped dildo as Sherrie slid it into her pussy, quickly seating it in position to stimulate her G-spot.\n\nShe was dripping wet already.\n\nPicking up the harness from the bathroom countertop, she started back to her living room where Jason and Miss Victoria were waiting, but after only a couple of steps, Sherrie realized that her extreme lubrication was making it difficult to keep the feeldoe from sliding out, even as practiced as she was at clutching the bulb end of the toy inside her vagina. Pausing for a moment to settle down, Sherrie withdrew the toy with a plop and wiped it dry with a towel. \n\nKnowing that she was still wet, she pushed the bulb inside slowly this time, gathering her natural juices as part of the insertion.\n\nIt was such a satisfying sensation, mixed as the act was with the knowledge of what she would be doing in only a few moments with the shaft of the toy.\n\nThis feels so good, so sexy, so empowering, Sherrie thought as she strode into the living room, harness in hand and feeldoe upthrust from her crotch. She stepped confidently to stand next to Jason. \n\nThough it always felt good to walk with her dildo jutting up from her crotch, tonight it felt REALLY good.\n\nSherrie had walked around her townhome nude with the glorious toy in place numerous times since Miss Victoria had presented it at her first practice session. Such practice was another of those little joys that her research was forcing on her \u2014 she wanted to be confident and natural as she demonstrated the use of this \"different\" phallus which was the only thing that had saved her from what would have been a disastrous attempt at man-fucking using one of the strapons that the tribe's women fashioned. She rationalized that being completely comfortable with the feeldoe in place absolutely required practice inserting it, walking with it and adjusting to the sexy motions as the shaft bobbed before her and the bulb moved inside her, getting used to it in every way in addition to practicing with it during the act of man-fucking.\n\nBut none of those instances when she had enjoyed walking nude in her townhome with her fake cock proudly erect between her legs compared to walking into her living room right now. Knowing that a gorgeous, naked man was waiting for her to slide the shaft of her dildo deep into his asshole and squirm against his firm butt and the backs of his legs to bring them both to an intense climax made feeling the motions of the toy as she walked even more exciting.\n\nGod! It feels so good to have this between my legs, Sherrie thought as she stepped next to Jason. I am so much going to love sliding this deep inside you.\n\nMiss Victoria grinned at her. \"Let's start with a nice comparison shot, shall we?\"\n\nStill holding the harness, Sherrie felt awkward, and she didn't know what Miss Victoria meant.\n\n\"Here,\" said her tutor, stepping forward and taking the harness from her hand. \"I think it will be such an arousing shot to see the two of you, facing each other, both with sexy erect cocks.\"\n\nThis time it was Sherrie who grinned. \n\nIt would be a VERY arousing shot.\n\nShe moved into position, her fake cock bobbing with the motion and resting at parade attention only millimeters from Jason's hard dick.",
        "Click.\n\n\"Lovely,\" said Miss Victoria, easily holding the camera in one hand to take the pictures as she held Sherrie's harness in the other. \"Now, Jason, you may grasp the toy that's such a fetching sight right in front of your own sexy erection.\"\n\nSherrie thrilled to this role play \u2014 herself as a model in Miss Victoria's wickedly arousing photography shoot with the handsome, naked man who would soon be bent over her kitchen table, legs spread, glutes high and inviting, eager for her to fuck him.\n\nJason reached a hand tentatively forward, his blindfold preventing anything but touch as a means of discovering where the shaft of Sherrie's fake cock was located. It took only a second for him to find it, though, and he gently closed his fist around it.\n\n\"Mmmmm,\" was the sexy sound that rumbled from his chest. \"I will enjoy opening up for this,\" he said, a smile forming beneath his blindfold.\n\nClick.\n\nMiss Victoria knew the effect those words were having on Sherrie.\n\nClick.\n\nShe wanted to capture the blatant look of sexual desire on Sherrie's face. It would be such a perfect reminder of this final tutoring session when her student looked at the pictures which were accumulating on the camera's memory card.\n\nClick.\n\nShit! was all Sherrie's sex-fogged brain could manage at hearing Jason's words about opening up for her.\n\nShe was so ready to fuck him that she was impatient to get beyond Miss Victoria's delaying tactics with this photo shoot, as sexy and exciting and incredibly arousing as it was.\n\nClick.\n\n\"Take his cock in your hand now,\" her tutor said, and Sherrie's impatience immediately abated somewhat when she wrapped her fingers around Jason's hard cock.\n\nClick.\n\n\"Grab his ass.\"\n\nThe command was simple. Doing it was automatic for Sherrie.\n\nClick.\n\n\"Now let's get you into your harness,\" Miss Victoria said, lowering the camera. \"Stand as you are, Jason. I want to take a few pictures as the lovely lady steps into her harness next to you.\"\n\nMiss Victoria handed Sherrie the harness, who took it and quickly began stepping into it.\n\nClick. Click.\n\nAs she was tightening the straps, Miss Victoria snapped a few more shots before saying, \"When you're completely strapped in, why don't we take a few shots with you next to him, and then we'll get a few with him on his knees in front of you.\"\n\nSherrie's mind went immediately into excited overdrive.\n\nMiss Victoria was going to take a picture of Jason on his knees in front of her, his mouth sliding down the shaft of Sherrie's dildo!\n\nHer tutor knew the suggestion would harden Sherrie's nipples to a tautness that would be difficult to endure.\n\nPerfect.\n\nAfter only a few pictures standing next to Jason, one standing behind him and looking over his shoulder as she prodded his butt gently with the end of her dildo, then one more with her hand wrapped around his cock as she hung on to one shoulder and grinned like a Cheshire cat, Miss Victoria knew she could not drag out Sherrie's impatience any longer.\n\n\"Stand in front of him, put your hands on his shoulders, and let him know where to kneel.\"\n\nDoing what her tutor had directed was so erotic that Sherrie thought her knees might buckle.\n\nShe was positioning this naked, gorgeous, masculine guy on his knees at her crotch so that he would be in position to open his mouth for Sherrie to slide the shaft of the dildo she was going to fuck him with between his lips.\n\nClick.\n\n\"I know from experience how arousing this act is,\" Miss Victoria said.\n\nClick.\n\nSo did Sherrie. She had witnessed it only moments before when Jason's deep-throat manipulations made Miss Victoria come.\n\n\"The sense of empowerment can be almost overwhelming.\"\n\nClick.\n\n\"It feels divine to know that Jason trusts you enough to do this, doesn't it?\"\n\nClick.\n\nMiss Victoria's question was rhetorical, Sherrie knew. Answering the question wasn't possible.\n\nBut damn! Yes \u2014 it was everything Miss Victoria was describing.\n\n\"Can you believe how erotic it is to see his mouth right there, ready to slide his lips past the end of your fake cock?\"\n\nJason did just that.\n\nClick.\n\n\"Mmmmm,\" Jason moaned, as if on cue.\n\n\"All the way, Jason. The lady will get very, very eager to fuck you when she sees you surrender your throat to the shaft of her dildo.\"\n\nSherrie watched in fascination and with a sexual intensity she had never known as Jason's mouth took more and more of her fake cock inside. When he sealed his lips around the base of the shaft, he was pressing his forehead into her belly, and he began some kind of motion that nudged the bulb end of the dildo against her G-spot.\n\n\"He's very good at not only deep-throating you,\" Miss Victoria said.\n\nClick.\n\n\"He does that wonderful thing that's moving your toy around so nicely, doesn't he?\"\n\nClick.\n\nSherrie was desperate to fuck the man. She reached both hands to her nipples and began squeezing them and tugging on them.\n\nClick.\n\nJason began to back off the shaft of Sherrie's feeldoe. When he rocked back on his haunches, Sherrie turned her face toward Miss Victoria with an expression that demanded they move to the kitchen.\n\nMiss Victoria placed the camera on the end table, stepped to Jason's side and urged him to his feet. \"I think the lady would like to lube your delicious derriere, Jason. She's very eager to find out if you can accommodate her strapon as beautifully in other parts of your anatomy as you just did in your mouth.\"\n\nThe sense of relief on Sherrie's visage would have been plain for anyone to see. She reached for the base of the dildo's shaft and did exactly what Miss Victoria had done earlier \u2014 she gave herself a satisfying orgasm, knowing that it would be just a prelude to the crazyhot experience waiting for her.\n\nSherrie truly wanted to make Jason come. She wanted to give him indescribable pleasure.\n\nHe had been such a good sport to endure the teasing that Miss Victoria had put him through. Hell, thought Sherrie, my tutor has teased ME outrageously this time.\n\nI am dying to fuck you, Jason!\n\nMiss Victoria did not comment on the two wooden planter boxes placed on the floor next to Sherrie's kitchen table as she guided Jason into the kitchen. Their utility was plainly evident to a woman who had enjoyed strapon man-fucking for so long and in so many ways.\n\nUpended as they were, and of sturdy construction, the two boxes could be placed as needed if Sherrie required some additional height for everything to be positioned as it should. Her student was certainly becoming well practiced in the skill she had hired Miss Victoria to teach her!\n\nIn point of fact, though, Sherrie had witnessed several of the tribe's women who were shorter than others use wooden blocks moved into position behind the men. This put them at a comfortable height for both parties to enjoy the man's penetration without the distraction or potential discomfort or awkwardness caused by a height mis-match. Wanting to be prepared for anything needed to allow the best practice possible during her final tutoring session, the pupil had simply made prudent arrangements, cleaning and bringing in from the small patio outside her kitchen the two planters which were currently not in use.\n\n\"You have been quite thorough in preparing to fuck him,\" Miss Victoria observed.\n\nJason's cock \u2014 now having subsided somewhat after the torture of being teased to erection and maintained at full mast for so long \u2014 twitched as he stood next to the table and heard Miss Victoria compliment Sherrie for her preparations with the planter boxes.\n\n\"A kitchen table is generally higher than a bed, so these will come in handy for the special lesson I am about to provide.\"\n\nSherrie was confused but intrigued. A special lesson? Was there yet another surprise waiting in store as part of her tutelage?\n\nMiss Victoria had backed Jason against the edge of the table.\n\n\"Be a dear, Jason, and scoot up here on your back,\" Miss Victoria said, patting the tabletop behind him.\n\nJason quickly stiff-armed the table behind him, slid up on it, and in a practiced and efficient manner was quickly in place, his butt at the edge of the table as his legs dangled off it as he laid back on the tabletop.\n\nIn a particularly presumptuous move (Sherrie thought), he laced his fingers, put his hands behind his head, and purred out an outrageous question: \"Is she going to fuck me like this while she strokes my cock?\" He drew his knees to his chest in concert with the question, and Sherrie saw how much Jason truly enjoyed giving himself up to Miss Victoria's strapon.\n\nShe also saw that his cock was regaining its stiff state of arousal as it lay up against his belly. Jason was shamelessly exposing himself in a position to invite both women in the room to slip their strapons into his completely exposed starfish.\n\nGod, Jason, you are so eager for this, aren't you? Sherrie thought, again delighted to realize that the man truly wanted this, was truly sexually aroused by everything involved in having a woman stroke her strapon into his lubed-up asshole.\n\n\"No, Jason, she is not,\" Miss Victoria answered.\n\nThe answer surprised Sherrie.\n\n\"But I am.\"\n\nMiss Victoria walked into the living room to retrieve her towel and lube, but she continued her sexy commentary.\n\n\"And, again, Jason, you're not to come.\"\n\nFrom her vantage point next to the table, looking at Jason in his shameless pose, it was easy for Sherrie to hear his groan of frustration.\n\nMiss Victoria was stepping back into the kitchen when she said, \"The pleasure of triggering your orgasm is solely the lady's, Jason.\" She held out the bottle of lube to Sherrie. \"But she is going to be the one who lubes you up in preparation for my demonstration of taking a man in a position she's not yet witnessed in person.\"\n\nSherrie needed no further prodding. It had been so much fun to slide her fingers inside Andrew's asshole as well as Trent's that she was eagerly anticipating the sexy act of lubing Jason's crinkled opening. She took the bottle from Miss Victoria, popped the top, and poured out a generous amount into her palm.\n\nStepping to stand at the edge of the table, Jason's inviting glutes positioned so arousingly and accessible before her, Sherrie placed the palm of her hand directly between his cheeks and onto his exposed asshole.\n\nHis gasp of surprise was incredibly exciting.\n\nPicking up the bottle from where Sherrie had placed it next to Jason as he lay back on the tabletop, Miss Victoria continued, launching into a description of something that Sherrie had never considered but which immediately made her desperately eager to try.\n\nAs Sherrie petted and teased Jason's asshole, smearing the lube generously between his cheeks, Miss Victoria poured some lube into her palm and closed her fist around Jason's cock, standing to the side and getting into a comfortable position to tease both her student and the handsome stud whose erect dick was in her grasp with an outrageous explanation of what she had planned.\n\n\"There's a reason why I decided to demonstrate this position, Jason, even though the lady's practice session fucking you with her strapon . . .\"\n\nMiss Victoria paused, glancing toward the video camera and tripod set a few feet away.\n\n\"Oh, did I mention that you're going to be video recorded as you take every inch of her fake cock deep inside your ass?\"\n\nHe didn't answer, but Sherrie watched as Miss Victoria milked upwards to push out another droplet of pre-cum from this poor man's still-hard dick in spite of the already extended tease-and-denial session.\n\n\"As I was saying,\" the tutor continued, gathering the droplet of pre-cum on her fingertip and then moving her finger to Jason's mouth. \"There's a reason for you being in this position, Jason.\"\n\nSherrie held her breath, knowing what was coming, and momentarily ceased her motions on Jason's asshole.\n\n\"Open.\"\n\nHe did. Miss Victoria slipped her finger into his mouth.\n\n\"It turns me on to watch you do this, Jason. Suck my finger.\"\n\nSherrie was enormously turned on, too. She slipped a finger inside Jason's asshole.\n\nIt was perfect timing. His asshole spasmed around her finger upon the invasion, and he groaned as he sucked on Miss Victoria's finger.\n\n\"You are hot to be fucked, aren't you?\" Miss Victoria asked, turning her head to grin at Sherrie. \"Tell us how eager you are.\"\n\nOh, god! thought Sherrie I don't know how much of hearing him talk about this I'm going to be able to stand!\n\nMiss Victoria slid her finger from Jason's mouth, and he drew in a deep breath.\n\nSherrie began a slow, gentle finger-fuck, enjoying the snugness, the warmth, that enveloped her finger and greedily sucked it back in when she eased it almost all the way out.\n\n\"Miss Victoria,\" Jason gritted out, now squirming in arousal at what Sherrie was doing to him \u2014 a teasing, portentious finger-fuck \u2014 and at what Miss Victoria was doing to him \u2014 slowly stroking his lubed-up cock \u2014 \"this is driving me crazy! How can you expect me to even be able to talk? What you two women are doing to me is torture. Please let me come! Please fuck me!\"\n\nMiss Victoria smiled and took her hand away from Jason's hard dick.\n\n\"Push in deep and just leave your finger there,\" she directed, reaching again for the bottle of lube.\n\nSherrie did as instructed, loving the feeling of being inside this sexy man and knowing he was desperate to take her strapon in the place where her finger now rested.\n\nPouring some lube onto her strapon, Miss Victoria then began smearing up and down the length of the shaft, clearly preparing her own fake cock for its entry into Jason's willing asshole.\n\n\"A skill that Jason possesses but which I haven't yet mentioned,\" Miss Victoria said, instantly arousing Sherrie's curiosity, \"is one of the reasons I wanted to demonstrate this position.\" The shaft of her strapon now thoroughly coated with the glistening lube, the tutor indicated with a nod of her head that Sherrie was to withdraw her finger.\n\nSomewhat disappointed, Sherrie followed the unspoken direction, but took delight in knowing that more exciting things were coming.\n\nShe was eagerly waiting to hear about this additional \"skill\" that Jason possessed.\n\nMiss Victoria dragged the planter boxes into position with her feet, the scrape of the wood across Sherrie's kitchen floor momentarily disconcerting. It did not, however, stop the tutor's commentary.\n\nAs Miss Victoria stepped up on the two boxes, she placed the tip of her strapon at the entrance of Jason's asshole. \"We shall remain like this, Jason, as the lady gets into position.\"\n\nAgain, Sherrie was confused. Her puzzled look in Miss Victoria's direction also had a mix of exasperation in it.\n\nGet on with it! I want to fuck this man!\n\n\"You see,\" Miss Victoria purred, now reaching forward to grasp Jason's penis and pull it upward until it was pointed at the ceiling, \"Jason has an extremely talented tongue. You've felt how inventive he is with it when he sucked your nipple, no?\"\n\nSherrie nodded, not knowing where this was going.\n\n\"He enjoys using it in many ways.\"\n\nJason smiled beneath his blindfold, an arousing action that Sherrie did not miss.\n\n\"Why don't you crawl up on the table and put your knees on either side of his head,\" Miss Victoria said, now languidly stroking the man's erection.\n\nAs a look of recognition, then shock, then abject desire worked its way across Sherrie's face, Miss Victoria continued:\n\n\"Yes, that's right. These harnesses and this inventive toy do leave our assholes available if we position ourselves to give Jason the access he enjoys.\"\n\nSherrie swallowed hard and immediately grabbed her breasts instinctively, kneading them and tugging her nipples as that electric jolt which so dependably shot back and forth between nipples and vagina when she was intensely aroused did its magic.\n\nShe was going to have her asshole licked!\n\n\"Please do hurry,\" Miss Victoria cooed, her tone belying the urgency of the command. \"I fear that our tease is truly taking a toll on Jason, and you haven't even begun your command performance for the video camera as you take his gorgeous ass.\"\n\nSherrie scrambled up onto the tabletop, clumsy in her eagerness to experience this new, and as yet unthought nastiness. Her old self would have been outraged at even the thought, turned off in the maximum and instantly condemning the act.\n\nBut new, sexually confident, eager Sherrie was fantastically aroused at the thought of this naked man \u2014 whose asshole she would soon invade \u2014 licking at her own starfish.\n\nJason drew his elbows to his side to allow Sherrie to put her knees on either side of his head. As she leaned forward, he placed his hands on the cheeks of her ass, fingers lying across the straps of her harness, and spread her cheeks.\n\nIt was a practiced motion, something that he had just proved he could do with his eyes closed.\n\nMiss Victoria nodded at her, and Sherrie closed her eyes as she slowly eased back, allowing Jason to guide her into position.\n\nA look of bemused satisfaction on her face, Miss Victoria continued slowly stroking Jason's cock as she watched Sherrie experience her first ass-licking.\n\n\"You may understand why Jason is the perfect man for this most important session,\" her tutor said.\n\nThe words barely made it into Sherrie's consciousness as she felt Jason's tongue flutter across her crinkled opening, rimming its way around the circumference before flattening and pressing squarely onto the center of her anus, no pretense of holding back even the slightest from complete abandonment to his actions.\n\nThis is divine! Sherrie thought, experiencing for the first time the hot wetness of a man's tongue on her anus. She reveled in the sensation.\n\n\"And his focus right now on pleasuring your asshole will back him off from the edge of orgasm,\" Miss Victoria said, pushing just the tip of her strapon into his asshole.\n\nJason groaned, and the sexy vibrations transmitted themselves onto Sherrie's opening, as intensely erotic a sensation as she had ever experienced.\n\n\"Can you imagine what must be going through his mind as I slide more of my strapon into his asshole while he tongues you?\" Miss Victoria purred, now releasing Jason's cock in order to grab his thighs as she slid more of her fake cock into him. \"If he really loves pleasing a woman as much as he says he does, then he must be in heaven right now, surrendering his ass and giving you an experience you've never had at the same time.\"\n\nSherrie opened her eyes, now a bit more upright as she adjusted herself to accommodate Jason's gentle guidance to position her opening exactly where he wanted it.\n\n\"This is why I wanted to start with this particular position,\" Miss Victoria said, now beginning a slow, practiced, sexy undulation with her hips which stroked the shaft of her dildo in and out of Jason's asshole. \"You need to see this position, even though it's not the one you're most interested in for important reasons,\" her tutor continued as Sherrie noticed how the movements of Miss Victoria's hips were also jiggling her breasts in time with her thrusts.\n\nThankful that her tutor's discretion was keeping out of the conversation any comment that might alert Jason to Sherrie's identity, she nonetheless sent the message with a look to Miss Victoria that she wanted her to continue the explanation.\n\nAnd she definitely wanted Jason to continue what he was doing.\n\nMiss Victoria, you can talk all night long! Sherrie thought, contented at the pleasurable sensations Jason was creating with his tongue gliding across her puckered opening.\n\n\"With the man on his back like this, you can look into his eyes, and that's maybe the sexiest part of fucking a man with a strapon,\" Miss Victoria said, now becoming a bit more aggressive with her thrusts. \"You can also stroke his cock as you fuck him,\" she said, releasing one of Jason's thighs to do just that.",
        "Again Jason groaned, and again Sherrie experienced the pleasant vibrations on her asshole.\n\n\"So I wanted you to see this first-hand, and I wanted you to experience the pleasure of what Jason is doing to you right now during this practice session,\" Miss Victoria said, smiling at Sherrie as she slid her fist up and down Jason's hard dick while she fucked him in the ass.\n\nSherrie was so thankful she had found Miss Victoria!\n\n\"Jason, put your tongue inside the lady.\"\n\nSherrie caught her breath immediately, not having dared to think that this surprise experience could possibly advance to the sheer naughtiness of what Miss Victoria had just directed Jason to do.\n\nThen, as he pressed insistently with the tip of his tongue, Sherrie allowed it to happen.\n\nFor all the time she had been focused on opening a man up, on accustoming herself to the sensations of feeling his surrender, to becoming practiced in how to penetrate his asshole, first with her fingers and then with her strapon, she had never considered the bliss of his tongue invading her own private opening.\n\nBut now she did.\n\nSherrie relaxed completely and invited Jason's tongue inside as deeply as he could get it.\n\n\"Oh-h-h, mmmmm, ahh-h-h,\" was all Sherrie could manage as Jason worked his tongue deeper.\n\nThe thought of what he was doing to her, the sensations as he did it \u2014 the combination was intoxicating, and Sherrie savored every second of his invasion.\n\nMiss Victoria released Jason's cock, replaced that hand on his thigh, and pulled herself tightly against him, burying her strapon as deeply as it would go into his ass.\n\nThen she simply squirmed slowly and specifically in a manner that Sherrie instantly realized was Miss Victoria's own personal turn-on. Her tutor closed her eyes and began a series of short breaths, getting closer and closer to an orgasm. As Jason continued creating delicious sensations in her anus, Sherrie knew that whatever Miss Victoria was doing was going to create one hell of an orgasm.\n\nWhen it hit, her tutor shuddered violently, leaning back as she continued gripping Jason's thighs. He groaned and moaned repeatedly, obviously aware that Miss Victoria was coming, and the intensified vibrations of his excited vocalizations against her asshole almost made Sherrie come, too.\n\nJason pushed upwards on Sherrie's bottom, slipping his tongue from her asshole, and groaned as his cock twitched and bobbed.\n\n\"That's it!\" he gritted out. \"If I don't come in the next few minutes, you women will have killed me.\"\n\nSherrie scrambled down from the tabletop, and Miss Victoria eased backwards to withdraw the shaft of her strapon from Jason's lubricated anus.\n\n\"This poor man deserves the most intense orgasm of his life,\" Miss Victoria said softly, urging Jason to a sitting position on the edge of the table. Sherrie walked to the video camera and switched it on, stepping behind it briefly to verify that her original framing of her kitchen table had not changed. The set-up had not been altered, and Sherrie was satisfied to see that the camera would record every nuance of her action as fucked Jason in the ass.\n\nShe would watch this video with professional and personal interest, knowing that she might pick up one more tiny tip about improving her performance.\n\nBut Sherrie would also be turned on incredibly at seeing what she was about to experience first-hand as the woman in the video who was pumping her strapon into the muscular, buffed, handsome man who had spread himself open for her.\n\nMiss Victoria now had Jason positioned, legs spread, chest on the tabletop, back arched and ass up high and inviting. It was a position that meant Sherrie had been wise to make the planters available \u2014 she would need to stand on them in order to be in a good position to fuck this tall, sexy man who had just given her the surprise experience of slipping his tongue inside her most private opening.\n\n\"He is very, very anxious,\" Miss Victoria said, stepping back and out of frame, wanting her pupil to capture with the video camera only the essence of this final strapon practice session. \"I am sure that your practice and your expertise will bring both of you to intense orgasms.\"\n\nSherrie was incredibly anxious herself. She retrieved the bottle of lube from the corner of the table, popped the top and poured the viscous liquid over the end of her strapon, allowing it to roll down the shaft, clinging to the toy as it corkscrewed its way toward the base. Closing the lid, Sherrie immediately fisted the fake purple cock and smeared the lube up and down.\n\nSatisfied that she had sufficiently lubed the toy (\"too much is almost enough,\" she remembered), she stepped up on the planter boxes, adjusted things slightly to be in the perfect position, and placed the tip of her strapon at the entrance to Jason's exposed opening.\n\nShe was desperately horny, hot beyond measure at what had happened this evening, and then driven over the top by Jason's tongue lapping at her asshole.\n\nSherrie drove her strapon into him in one stroke.\n\nJason's head snapped up from the tabletop. \"Unnnngh!\" he grunted, a sound that only turned Sherrie on more. She began pumping into him, knowing that it would be only moments before the act of fucking him in his asshole would make her come.\n\nBut she needed practice. \n\nShe fought to deny herself, working to grip harder on his hips, hoping the distraction would delay her orgasm.\n\nIt bought her a little more time, and she relaxed a bit, grooving into a rhythm as she stroked in and out of his asshole, enjoying the movements of her hips, looking down to see the shaft of her toy disappear inside him and then slide back out, almost completely out, before the motion of her hips pushed it back in.\n\nThe visual was mesmerizing and insanely sexy.\n\nJason's moans added to the naughtiness and the excitement.\n\nThen he started talking to her.\n\n\"Oh, god, you are fucking me so good!\"\n\nHis words were an aural elixir of eroticism to Sherrie.\n\nI'm fucking him good, I'm doing this thing right, and I'm loving every insane second of it! she thought, listening for more sexy words from Jason's mouth.\n\n\"Damn! You're hitting that spot, that certain spot . . .\"\n\nJason dropped his face to the tabletop and grunted through an animalistic rumble that Sherrie knew was pushing her dangerously close to climax.\n\n\"Oh, shit!\" he yelled, head jerking up as Sherrie held onto his hips in a tight grasp and continued stroking into him, undulating movements now accelerating as she worked herself into a zone of sexual man-fucking excitement.\n\n\"You're gonna make me come, you're gonna make me- \"\n\nHe bucked his hips backwards, driving Sherrie's strapon deep inside, and at the same time he flung his arms backward, his hands grasping the side of Sherrie's hips in order to pull her tightly against his ass.\n\nThat did it. Sherrie squirmed against him in complete abandon, triggering off the most intense orgasm of her life.\n\nShe fell across his back, almost losing her footing on the planter boxes in the process.\n\nJason's cock, so tortuously teased all night and yet denied release, now jetted a long stream of thick, ropey come underneath the table, pumping repeatedly until he was completely spent and groaning beneath Sherrie.\n\nMiss Victoria was tugging on her nipples as she leaned against the countertop watching this insanely erotic act. She allowed herself a final mini-orgasm, knowing that she, too, would be exhausted as this tutoring session finally ended.\n\n* * *\n\nIt took a while to recover and then tend to the most pressing of the clean-up duties. In his blindfolded condition, Jason was able to wipe himself down with the towel Miss Victoria had brought, and as Sherrie checked the video playback on the camera's small screen (Good grief! How fantastically erotic and arousing, Sherrie thought as she watched herself screw Jason with practiced and mesmerizing strokes), Miss Victoria took the towel from him and thoughtfully wiped up his spent ejaculate, even though it meant she had to squat down and almost crawl under Sherrie's kitchen table.\n\nIt was yet one more thoughtful act from her mentor, and Sherrie realized how much she was going to Miss Victoria after this final practice session.\n\nHer tutor's shared wisdom about strapon man-fucking, but also the personal conversations they'd had about the emotional aspects of the act and the beauty and rightness of doing it with a man who loved you and wanted to give you pleasure, had been tremendously important and enlightening for Sherrie.\n\nThey chatted in the kitchen, out of range of Jason's earshot. In his exhausted condition, he was already nearly dozing on the sofa after getting dressed, and Sherrie knew their whispered conversation over a glass of wine thoughtfully poured by Miss Victoria was not something that Jason would ever hear.\n\n\"You were really very, very good at doing him,\" Miss Victoria said. \"I'm sure you saw on the video how well you did, but I knew instantly from the first thrust of your hips as I watched that you have reached whatever level of proficiency you need to impress your tribal judges.\"\n\nSherrie set her glass down after a sip of the delicious wine. \"It's thanks only to you, Miss Victoria.\"\n\nLooking at her tutor earnestly, Sherrie continued:\n\n\"I don't know what I would have done if I had not found your ad. You knew the first time we talked, the first time you saw how clumsy I was with Andrew, that I was a rank amateur.\"\n\nMiss Victoria smiled. \"You were not much practiced with men in general,\" she said softly.\n\n\"True,\" Sherrie answered, \"and I thank you for realizing that and then coaching me through not just the physical part of doing what I had to learn but also the mental aspects, the philosophy of enjoying sex, enjoying men, being more confident in my sexuality and ability to attract a guy's attention.\"\n\nMiss Victoria said nothing, smiling into her glass of wine as it sat before her.\n\n\"Really,\" Sherrie continued, \"I have been so focused on work, so unsure of myself with men, so anxious to have a relationship but so worried that I'd never be able to find the kind of guy I want. Now, after this crazy crash-course to learn what I must do well in order to finish my research for the book, I realize about a million side benefits that I've accumulated in the process.\"\n\nHer tutor finally spoke, reaching a hand across the table to place it on the back of Sherrie's wrist.\n\n\"That's wonderful to hear, Dr. Mathison. I'm glad to have helped in any ways that I might have managed. But know this: Your engagement of my services has created a series of sessions unlike any others I have orchestrated. I have come to take a personal interest in your success, not just with taking a man who willingly offers up his private opening for your strapon, but with men in general and even with your career, thinking that I may have played perhaps a small role in helping advance it.\"\n\nSherrie nodded her head in agreement.\n\n\"But seeing your metamorphosis, seeing you take such pleasure in learning how glorious it can be to experience unbridled joy in playing sexually with a man, well . . . it has rekindled for me that desire to find my own partner who will love me and play with me occasionally as we have played with Jason tonight.\"\n\nSherrie was surprised to hear her tutor talking like this.\n\n\"Yes, I do take physical pleasure in playing with the men who pay me to do so, but it's nothing like the satisfaction of loving a man who is also your mate and who occasionally enjoys surrendering to your strapon. Maybe, after my relationship with the man who introduced me to these delights ended, I have avoided much active seeking to find another connection, taking substitute satisfaction where I could find it with men who would pay me to be their 'sensuous domme.'\"\n\nSherrie listened attentively, tracking Miss Victoria's motions with her gaze, following her tutor's pause and glance down to her glass of wine before continuing.\n\n\"So thank you, Dr. Mathison, for renewing my faith that I'll find some man who'll become a lover and a mate and who will also enjoy a good strapon session.\"\n\nMiss Victoria paused at her words, smiling, and raised her glass in a toast.\n\n\"Here's to both of us finding such a man, and here's to your absolute success as you demonstrate how very good you've become with your strapon when you return to the tribe!\"\n\n* * *\n\nSherrie drifted off to sleep in her hotel room after the orgasm triggered by her masturbation to the memory of her final tutoring session, of the excitement of feeling Jason's tongue on her anus, of the intense satisfaction when she climaxed as she fucked him and he moaned in animalistic release as he spurted through his own climax. It was a deep sleep that ended the next morning with a pounding on her hotel door.\n\n\"Miss Sherrie! Miss Sherrie!\"\n\nIt was Catchy.\n\n\"We need to leave in two hours. Are you up?\"\n\n\"Yes,\" she answered groggily, throwing back the sheet. \"Yes, Catchy. Thank you for making sure I'm awake.\"\n\nAfter a quick shower and a delicious breakfast in the hotel's modest restaurant, Sherrie returned to her room to pack her final items into the last bag, the others already lined up by the door. Catchy would take all but two of the bags back with him for storage until she left the tribe \u2014 they contained emergency supplies, extra precautions such as back-up hard drives and a second laptop along with research materials, including some anthropology books that Sherrie just could not make herself leave behind.\n\nShe would take only two bags with her to the tribe. They would easily contain everything she would need, including her laptop, extra charged batteries and the hand-cranked/solar powered battery charger that would ensure her use of her laptop for the month she was with the tribe.\n\nBut before stowing her laptop into the last bag, she flicked it on and sat down slowly on the bed, her mind drifting to her final conversation with Miss Victoria. When the laptop had booted up, she launched the video of her session with Jason, and checked one final time that, yes, her technique was good enough to win the confidence of the tribe's women.\n\nSmiling to herself as she closed out of the video program and shut down the laptop, Sherrie thought of her tutor's final toast to her success.\n\nI hope your best wishes that we both find the men of our dreams will give us good luck! Sherrie thought as she shouldered her bag and opened the door to call Catchy for help loading the car.\n\n* * *\n\nThe morning after her performance as the tribal women watched, Sherrie awoke to an excited commotion outside the simple hut that had been her quarters on each visit to the tribe. Rubbing sleep from her eyes, she drew back the material hanging from the rope across the opening that was her door and saw several of the tribe's young men jostling for position in some kind of line that was forming.\n\n\"Miss Sherrie! Miss Sherrie!\" came the excited cries from the men as each of them jumped or waved or yelled or all three to catch her attention.\n\nNot understanding what was occurring, Sherrie noticed one of the elderly women hurrying to her hut. She pushed past the men and drew Sherrie back inside, winded from her dash to Sherrie's door.\n\n\"You must choose wisely,\" were the first words from the woman's mouth.\n\nSherrie's look of confusion let the woman know that more explanation was needed.\n\n\"You must choose wisely. Each man has his strengths and his weaknesses, but any of them would be an excellent husband.\"\n\n\"Huh?\"\n\nApparently that simple grunt was understood in all languages.\n\n\"They all want you as their wife!\"\n\nSherrie raised her hand. \"Wait. Wait a minute.\"\n\nThe woman was one of Sherrie's early confidants who had helped her become accepted as a welcome visitor to the tribe.\n\n\"What are you saying, Terna? Wife?\"\n\n\"Yes, yes,\" Terna continued excitedly. \"All the women spread the word quickly that your special instrument, that the way you used it, was truly spectacular.\"\n\nSherrie eased back on the mat where she had been sleeping, finally piecing together what was going on.\n\nTerna confirmed it.\n\n\"You took Weriska so well and with such expertise that every available man in the village wants you to be his wife!\"\n\nSherrie had her answer about whether strapon play was reserved only for the ceremony or whether it was part of what happened as a matter of course between husband and wife.\n\n\"And Weriska has told all the men that he deserves to be at the front of the line outside your door,\" Terna said, smiling broadly at Sherrie. \"He says that since he was your first tribal male, and that since you made him spurt more and harder than he ever has in his whole life, that he deserves to have the first opportunity to convince you to marry him.\"\n\nSherrie slumped her head between her knees as she sat on the mat, the full realization of what was happening finally coming to bear on her consciousness.\n\nTerna squatted down in order to look into Sherrie's face.\n\n\"You were truly marvelous doing it to him, Miss Sherrie. It was amazing. All of us women want to see your instrument. We know we can carve and sand and seal a similar shape.\"\n\nSherrie raised her head to look into Terna's eyes.\n\n\"And then we will be able to do our men as well as you!\""
    ],
    "authorname": "escriterra",
    "tags": [
        "strapon",
        "feeldoe",
        "asshole",
        "spread open",
        "man-fucking",
        "dildo",
        "role reversal",
        "g-spot",
        "prostate",
        "rimming"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-college-professors-discovery-ch-03"
}