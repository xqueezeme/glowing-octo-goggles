{
    "title": "Finding an Editor Ch. 03",
    "pages": [
        "If you just started reading my work, you may want to read the first two chapters before you read this one. It will make more sense.\n\n*****\n\nI liked the reverend at my church. Slightly younger than me, late forties I'd say, he was about the most earnest and forthright person I ever encountered. \n\nHe had a mentor. An older preacher now in his early sixties, who had welcomed him into his first church, guided him along, warned him of pitfalls and temptation. Then he retired from the church and started an evangelical society, doing crusades in local high school football stadiums and community centers. \n\nRobert, my preacher, was very proud of his growing success, even helping out on occasion. Brother Jim, as he now liked to be called, seemed to grow larger as his fame grew. Gone were the cheap suits and barely working PA systems, replaced by Saville Row and state of the art sound and lighting systems large enough for the football stadiums he now favored. Bought some air time at a local television station and started an hour long broadcast.\n\nHe actually preached one Sunday at my church, and Robert was almost in a nervous jerk.\n\nI looked at his expensive suit, his impossibly bright silver hair contrasting nicely with his deep tan, amazing really, since it was February.\n\nHe charmed, flirted, glad handed with skill that was so practiced it came across as natural. He reminded me of an old time snake oil salesman.\n\nWhen we shook the mutual dislike was instant, and he stayed as far away as possible. \n\nI wrapped a penny inside a five dollar bill when they collected a special 'love offering' later for his crusades. I hope whoever counted the money got the point.\n\nFour months later the scandal hit. He had been the target of a federal investigation that resulted in multiple charges. Some of his victims came forward, hoping to make a buck off the public. He'd had multiple encounters with both sexes, not always with consent or with people of legal age. In the end he was charged with statutory rape, date rape, possession and use of illegal substances, crimes against nature, embezzlement, wire fraud, and money laundering. He took a plea deal when a possible murder was discussed, going in to prison at sixty seven to do at least twenty years before possibility of parole.\n\nRobert was devastated. About six weeks later he did a sermon on moral character and temptation.\n\n\"Temptation, great and small, surrounds us all. I have sadly discovered that average people tend to handle it pretty well as they struggle through their lives, aware of the cost, so they're rarely tested beyond control. It's when someone hits a level of success that elevates them above the crowd, when fortune and fame comes, that their true character is tested. Most of us can't handle that sort of success. Look in the papers on any given day, you'll find singers, actors, sports figures, politicians, even, sadly, men of the cloth that succumb.\n\nIt saddens me deeply to see these people, usually at the very pinnacle of their careers, fall. They above us all should be grateful for the bounty God has given them. Instead they squander their success in thoughtless acts of lust and abandon.\n\nMy earnest admonishment to you, my friends, is to remember this sermon should success ever find you. I pray God gives you the strength it takes to remain centered when it does.\"\n\nI've thought of that sermon often in recent times, wishing I had paid more attention.\n\n...\n\nI never truly realized what Benny had to go through.\n\nFollowing directions from Beth, I pulled all my stories off the site[you can't give it away when you're trying to sell it], worked up an outline, and redid them to establish continuity. The final four chapters were completely new. Even though the story was basically written, it still took six months to complete it, another three to edit and do the rewrites, before it was ready to publish.\n\nOf course, I used the same team as Benny, from Beth to Saul, with Etta and Grace.\n\nSaul loved it, as did Beth. Grace said it wasn't her cup of tea, and Etta just grinned and called me a GILF of epic proportions\n\nThe buzz created by them and my obvious connection to Benny gave me a leg up. When it was released it only took three months to hit the bestsellers list. At one time Benny's new book and \"Plum\" were ranked two and three. Etta got us on Sunday Morning, where we were being touted as the power couple of the literary community.\n\nMo Rocca did the interview, spending two days with us at home before bringing in the cameras.\n\nBenny even taught him how to catfish, down to how to clean and cook them. He didn't seem to mind, but admitted he wasn't fond of the taste. Made great footage, though.\n\nThe actual interview went pretty smoothly. He asked us both about our current books, talked a little about our history. Finally he hit me with the big question, grinning.\n\n\"Are the characters in your book based on real life people? Say you and Benny, perhaps?\"\n\nI flamed red while Benny laughed softly. He answered for me.\n\n\"Yes and no, Mo. Obviously we're not a hardbodied, over endowed couple in our early thirties, but we've had our moments. Very pleasant moments. But the fact is we're just a small town couple in our midfifties. As much as we'd like to do some of the things in the novel, the fact is we're just not that flexible or energetic any more. Bonnie just has a really good imagination and it seems, an insight into that lifestyle that makes it believable.\"\n\nI couldn't have said it better.\n\nWhen we were home, which wasn't as often as I liked, we rarely went out, and only socialized with our old friends. Sadly, we weren't the trusting people we once were.\n\nHilda lost her job in the economic downturn, and they were strained financially. It hurt when the mother of the twins disappeared, leaving no forwarding address and stopping her child support payments.\n\nWe knew we had to tread carefully to spare their feelings, but came up with a plan. Hilda had at one time been a PA to a textile executive, so I offered her a job. The fact was it had come to the point that I really needed one, and she was perfect. Part of the terms of her employment was housing. Their apartment had become too small with two teenage girls sharing one bedroom, so we moved her into my old house, rent free. She cried for two days, while her husband was both embarrassed and grateful.\n\n\"Don't worry about it,\" I told them both as they moved in, \"it does a house no good to stand empty. This way I can be sure it's taken care of.\"\n\nSarah had finally lost thirty pounds, and her husband made her stop.\n\n\"I want there to still be enough of you to grab on to,\" he told her, grabbing one of her still massive breasts, \"I loved you as you were before, and I love you now. So stop, please.\"\n\n...\n\nI was doing the publicity thing, television appearances and book signings. Benny was doing the same for his new book, even though with his reputation he really didn't have to. He told me you should never forget the one that brought you to the dance, so he still followed the program. It worked out great when he rearranged as much of his schedule as he could to be in the same town as me, but it wasn't that often. We were apart for extended periods of time for the first time in our marriage, and neither of us liked it.\n\nHilda couldn't travel with me because of the girls, so Etta sent one of her assistants with me on those occasions. Her husband had been doing much better, so she started taking on more clients. I didn't like the assistant much, Beverly seemed to be a little too enthusiastic.\n\nOne night I was doing a signing. It was my fifth in four days, and I was tired, so I missed a lot of signals. One man, a huge guy badly shaven, came through the line twice.\n\nThe second time he smiled.\n\n\"Do you feel it? The connection, I mean.\"\n\n\"I feel a connection to all my readers,\" I said tiredly, not paying attention.\n\nAfter time was up, I chatted with the owners of the bookstore, called Beverly to come get me, and relaxed with a cup of coffee. I figured she should be just about there, so I walked outside into the warm spring air.\n\nI never saw him coming. He had me up off my feet and headed towards a van before I could react. Beverly pulled into the lot, saw me, pulled in front of the van, laying down on the horn. When she completely blocked him in, she locked the doors and called 911. He tried to drag me on foot but I fought him as hard as I could. When I bit his hand and ripped out a chunk of flesh, he dropped me and ran away.\n\nThe police ran the license on the van, and caught the guy the next day. I was taken to the hospital for observation and stayed twenty four hours. The man was later declared unfit for trial and would spend three years in a criminal mental institution.\n\nBenny dropped what he was doing and rushed to my side. It really scared us both. Benny thought I needed a little protection, and he talked to Mike Hogue. Two days later a tall, soft spoken gentleman named Mark showed up. He was former military and police, leaving the force on medical disability after he was shot in a hostage situation. Physically he was in top shape as long as he didn't have to exert himself for long periods. Mike had met him on the first vacation he had taken with his future wife, and they had hit it off. When his career was over and his marriage crashed, he needed a job, so Mike hired him.\n\nI don't think he actually worked for Mike, more like a subcontractor. But he was big, charming, and capable. We worked out a signal system, and he'd hang around in the back unless I needed him.\n\nThere were a few more uncomfortable moments, but usually one look at Mark nipped everything in the bud.\n\nI was changing. Looking back now, I know it wasn't for the good. When everyone around you is waiting for an opportunity to kiss your ass, your natural inclination to let them grows exponentially. I guess what really happened is I went from a happy housewife to an entitled diva.\n\nThe fame, the power, it all proved to be too much.\n\n...\n\nBenny saw it coming, and tried to talk to me.\n\n\"Believe half of what you hear and experience, honey. The thing to bear in mind is ninety per cent of the people you're around aren't really there for you. They're there because they want something from you.\"\n\nI had never been much of a drinker, but had developed the habit of having one or two late in the evening to help me sleep. Pretty soon I was having one or two during the early evening, to help me relax. I probably would have never said what I did if I hadn't been on my fourth gin and tonic of the night.\n\n\"Beverly said this would happen. I just didn't believe her.\"\n\nHe seemed confused. \"She said what would happen?\"\n\n\"That you'd resent my success. That you'd be jealous.\"\n\nI can still remember the look on his face, even now.\n\n\"I am jealous. Jealous of the time your success takes away from us. But that's it. I'm proud of your accomplishments. You deserve your fame.\"\n\nI felt pretty rotten then, and the old Bonnie surfaced.\n\n\"Sorry, honey. I don't see how you handle it. I'll really be glad when my fifteen minutes are up.\"\n\nHe relaxed a little, started massaging my feet, something I'd really missed. I sighed in contentment.\n\n\"Good. I've got other projects I need help on that doesn't involve any writing at all. Like the studio, for instance.\"\n\nHe'd already finished his book tour and had put writing on hold for awhile. Oh, he still scribbled notes, but wasn't serious. Beth was a little concerned, because he still owed the house one more book, but he reassured her.\n\n\"I'm not working on anything new, Beth, but I've got one already done, I just need you to work your magic on it.\"\n\nShe demanded to see it but he told her it needed a little more work before she could have it, and since he still had six months to turn it over he was in no hurry.\n\nHe had a new passion right now, making films and television shows.\n\n...\n\nHe found a group of three buildings, enormous structures that had become empty when the recession hit and business went overseas. We looked them over, using Hilda and her expertise to get a really good deal, and moved the production company we had started to our hometown.\n\nThe smallest building was the office complex, the next largest was cut into small rooms for editing film and sound, plus one small sound stage. The biggest was split into two larger spaces.\n\nWe actually became one of the largest employers in town, if you count the extras we used on a regular basis.\n\nBenny had hired three young but very capable screenwriters and put them to work on his latest productions.\n\nIt came to him one night while he was missing me, and he was reading some of the older stories on the website we started out on. About two thirds of the stories ranged from unreadable to disgusting, but the other third told stories, the top ten per cent told good stories. He focused on those, got hold of the two best sites, and brokered a deal. In exchange for two per cent each of his company, they would contact the writers of the stories he liked and offer them a chance to see their stories on television, in exchange for the proper fee, of course.\n\nHe picked four of the best, made two into hour long shows, one into a movie, and the last into a four part miniseries. He struck a deal with HBO because he thought it was the best fit.\n\nOne of the hour long shows bombed, but the other and the movie were moderately successful. The miniseries was a huge hit. HBO committed to twenty more one hour shows, three movies, and four miniseries, all from stories from the sites.\n\nHe gave each of his regular writers a team. One did the movies, the other the shows, the last the miniseries. The housing market in our town became one of the hottest in the country.\n\nSince, of course, they were adult sites, most of the content was sexually oriented. He did find a few in non erotic sections that he made and pitched to other networks with a great deal of success.\n\nHe pretty much bribed as much of our family as he could to come work for us. They came gradually, afraid it wasn't going to last. But when our production company won an Emmy for the miniseries, and another for screenwriting on one of the movies, almost all our children moved home.\n\nWe ended up buying part of the old farm next to our property and used it to make a family compound, complete with private roads and security.\n\nI was making excellent money on my book, not anywhere near what Benny made, but still a nice sum. I put it all into trust funds for the grandchildren. Their college was already paid for, so it would be a nice nest egg for a house or whatever they wanted out of life.\n\nI was home for two weeks before going on the last leg of my book tour. As I wandered across the film complex, my first serious look at it in a few months, I was amazed at the changes. I found Benny in his office.\n\n\"Honey, can we afford all this? How much money do we have now?\"\n\nHe looked at me and smiled. We were still amazed at how little money meant to us.\n\n\"I'm not sure. Will had to hire two full time people so he could concentrate on us. He insists we come up once a month for a review, but I haven't had time this month. Wanna fly up, bite the Big Apple, see a show, and catch up?\"\n\nIt sounded like an excellent idea. We spent four days with our friends, saw two shows, hit a few nice restaurants. It was the most relaxed we'd been in a long time. Plum even made a brief but very erotic appearance.\n\nI had gotten a little soft and had been toning up. I was showering before going out, Benny was meeting with Saul and Beth, and had a little time on my hands. I looked at myself critically. Despite being slightly plumper,I was still in good shape, especially for my age. I absently traced the small tattoos I had, smiling.\n\nRubbing the little dark plum, I let my hand slip down, opening my vagina. I almost laughed, hearing Plum in my head.\n\n\"That's the difference between you and me. You have a vagina. I have a pussy. And all men love pussy.\"\n\n\"It's not always about sex, you know. Sometimes it's just about the connection between two souls.\"\n\nDamn, I thought, I'm losing it, mentally arguing with my alter ego.\n\nI could see her smirk.\n\n\"And sometimes a cigar isn't just a cigar, it's a honkin' big phallic symbol. Think about it, when was the last time you fucked him senseless? How often has romance and connection left you almost comatose in a puddle of your own fluids, with a grin dynamite couldn't blast off? Face it girl, as much as any man likes to make love, they still love a good shot of hot, steaming pussy. Sometimes it's about the physical. If you've forgotten that, you're in serious trouble. But don't sweat it, little Plum is ready to take up your slack. When I'm done with him, he'll be glad to crawl back to some safe little lovin'.\"\n\nThe whole imaginary conversation left me a little uncomfortable. We had slowed way down on the sex due to time apart, business considerations, and plain old exhaustion. I sighed.\n\n\"All right, bitch. Take a shot. But remember, as much as he likes fucking you, he loves me. Sooner or later he'll get tired of you, and I'll have him all to myself again.\"\n\nI could feel the bitch grin.\n\n\"Keep tellin' yourself that, honey. If you repeat it often enough, you might make yourself believe it. Now shoo, I gotta get ready. I got a man I intend to fuck senseless coming by.\"\n\nOne of the great things about having plenty of money and being in New York City is that you can get anything you want anytime you want. I made a few calls, took a cab to my destination, and shopped. It was a VERY high end sex shop, confidentiality was guaranteed. If they didn't have what you wanted it hadn't been thought of yet. There was a rumor that for an additional fee you could get any combination of male and females acceding to your every whim.\n\nI selected a few things, ordered a few more, and was back in the suite before Benny got out of his meetings. I sent him a short message.\n\n\"Dinner will be in tonight. Plum showed up out of the blue, damn I thought I was rid of that bitch.\n\nI won't be around tonight, so use her any way you want, try to get her out of your system. Maybe if you're rough enough she won't be back. She said be there by seven.\"\n\n...\n\nBenny almost ran into the suite. calling my name. When I refused to answer he changed his tone.\n\n\"Plum! Where the hell are you?\"\n\n\"I'm in the bedroom, lover. I'd come out but I'm a little tied up right now.\"\n\nI wasn't a little tied up. I was a lot tied up. I'd followed the directions carefully, and when I pulled the last strap tight and heard it click into place I shuddered, knowing I was truly restrained until someone else released me.\n\nI was trussed up, spreadeagled, completely open and helpless. My outfit was mostly leather straps and fine chains, that could be spread to provide access without the necessity of removal, or unsnapped with ease. The room was lit with candles, and there were two small tables, one holding toys, the other finger foods. I hoped he was pleased. I had also lubed myself liberally, in case he was in a hurry.\n\nHe paused for a second, enjoying the view, before approaching the bed. Stopping to inspect the tables, his grin became huge. He held up a device that seemed to be a battery pack with two small clamps.\n\n\"What's this?\"\n\nI actually blushed, which he found very amusing.\n\n\"It's nipple clamps with an electric stimulator. It sends small electric shocks to them, in varying strengths. It even has an auto option, that sends out shocks of different levels in random patterns.\"\n\nOne thing I had learned early with Bennie. He loved my nipples, and I had come to love how he played with them, orally and manually until they were extremely sensitive. So it was no surprise that he had them attached in seconds. Thankfully they didn't grip too tightly, but I almost came off the bed when he turned it on the first time.",
        "\"God, this is wild! Honey, you might want...Oh Fuck!\" It had come back on. He must have put it on random. I hoped what I felt was the highest setting because it was damned intense. Without a word he picked up a six inch vibrator and slid it home easily. Besides the lube I had become quite wet naturally.\n\nI was writhing on the bed, almost babbling, when he slid another slender vibe up my butt. I screamed repeatedly, until he grabbed my hair and put a ball gag in my mouth. He watched, grinning, nibbling on the finger foods, for at least fifteen minutes.\n\nFinally he shut everything down and removed them, all but the ball gag. I lay in an exhausted, sweaty heap as he stroked my body. I jumped again when he pinched one of my overly stimulated nipples, and quivered as he slowly kissed his way from my ears to my toes, deliberately missing the erotic zones. By the time he kissed his way back up I was dripping again.\n\nHe casually licked and nibbled his way to two massive orgasms from me, sliding the small vibe back into my butt. The next morning I had strap marks on my wrists and ankles from the strain I put on them. It made me smile.\n\nHe removed the ball gag, shoving a tongue down my throat before I could speak. When he finally pulled back he asked casually, \"So, my little Plum, which hole would you liked filled?\"\n\nI looked up at him with lust filled eyes.\n\n\"All of them, baby. Repeatedly.\"\n\nIt must have been the right answer, because that's just what he did. He confessed the next morning he had gotten a sample pack of the little blue pill, just in case he needed it. I just love modern medicine, don't you?\n\n...\n\nWe came back home, sated, refreshed, and happier than we'd been in a long time. I had another week off and we were almost always together. We even locked the door to his office at the studio and christened the desk.\n\nI was staggered by the amount of money we had. Will was doing an outstanding job. He laughed when he went over it.\n\n\"You know, I was really glad when Benny started the film studio, you guys needed something to show a loss. But, damn it, now you're making more money off it than your writing. I suggest you set up a charity or something, to ease your tax burden.\"\n\nOur hometown and the state was giving us an enormous tax break where the studio was concerned.\n\nOf course, we were responsible for eighty nine full time jobs, hundreds of part time jobs when you factor in the extras, kept two restaurants going full time furnishing food services, and almost every county and city cop worked for us part time giving us security services. The secondary service jobs included almost every business around, one way or another. In a time when most places were still trying to recover from the recession, our area was booming.\n\nWe didn't go cheap either, paying top wages to everyone concerned. I laughed when Benny said he felt like we were buying loyalty.\n\n\"Of course we are, honey. It's how business works, or at least how it used to. Pay top wages, provide good benefits and a good work environment, and you get the cream of the crop.\"\n\nWe got heavily involved in the town and county, paying for bulletproof vests and lapel cameras for the local police and sheriff department. We asked the county for a branch of the fire department to be located near the studio, and funded it, down to the building and new equipment.\n\nWe appointed one of his sons, Greg, and one of my daughters, Amy, to head our charitable and special projects department. They enjoyed it for awhile, but quickly became tired of people asking them for things. One man put in a proposal that we remodel his house and landscape his yard, because it was the first one people saw coming into town on our major highway, and we needed to give a good impression. They politely made a counter offer. They'd buy his house at fair market value and tear it down, turning it into a garden for public enjoyment. He left the meeting very angry.\n\nI lost Hilda as an assistant. She came to us with a proposal. Our local economy was booming. People were moving here for the jobs and the excellent school system. That was one of Benny's pet projects. We had donated so much to the local school system it was being lauded as the best in the state. When Whitney, my other daughter, couldn't get a job as a school teacher locally because of budget cuts, he stepped in and personally made up the shortfall. He also had Amy and Greg make sure that two to four tractor trailer loads of school supplies be delivered to every school, depending on size. No teacher in the system had to go into their own pocket anymore for pencils, paper, etc., unless they wanted something special. He also bought a pad and laptop for every junior and senior high school student, twenty three hundred total. The teachers got the deluxe models, and he paid for the service contracts plus the internet access to make it all work. It made textbooks obsolete, and the county actually donated them to another school system.\n\nHilda gave us a presentation with facts and figures.\n\n\"The housing market is strained, making houses and apartments hard to get and ridiculously expensive. Here's what I think you guys should do.\"\n\nShe laid out a plan for three ten floor apartment buildings, one hundred twenty two and three bed room apartments in each. She had another, smaller one drawn up with one bedroom and studio apartments for singles and childless couples. Plus two housing developments, sixty in one, forty in another. Also, she had plans for a small shopping mall centrally located between them all, plus two parks, one with ball fields. \n\nWe sat back stunned.\n\n\"What does all this have to do with us?\" I asked, when I got my breath back.\n\nShe looked at me like I was a child.\n\n\"Everything. You're the largest employer, so your employees, and indirectly you, will benefit. Plus, you're the richest people in the area, you have the money, or can at least leverage the financing, to go ahead. If you don't, someone else will, and who knows what they'll do. Urban sprawl could devastate us, developments appearing haphazardly, land prices will skyrocket, schools will become overcrowded. At least this way, even if we can't control it, we can lessen the impact.\"\n\nWe thought about it, looked at the numbers, ran it by Will and Grace. Will thought it was a great idea, Grace wasn't so sure.\n\n\"You're turning it into a company town. Sure that's a good idea? What if your tax breaks disappear? Would you pack up and leave? Do you really want that much power over the local community?\"\n\nBenny was upset.\n\n\"I don't want any power over the community. I want a nice, clean, safe hometown. Is that wrong?\"\n\nGrace leaned over and took his hand. \"No Benny, it isn't. I just want you to know there would be a certain amount of backlash. People admire success, glad to see a hometown boy make good. But they don't like too much success, it's just human nature. It really is a good idea, will probably be a real moneymaker. Just be careful, all right?\"\n\nBenny promised he would think about it. Three days later he called Hilda and gave her the go ahead, with a few conditions.\n\n\"We only use local contractors and suppliers. It's their home too. Plus, get a few of the most reputable real estate companies and offer them a small percentage of the projects, if they can swing it. I want as many locals as possible vested in this.\"\n\n\"Another thing. I want you to bring in Jim and Sarah. Jim was a project manager with his old construction firm, until they went under. He'll know pretty quick if something isn't right. Start out slow, don't really broadcast it. And run it by the city and county in closed sessions if you can. If they're not on board, we're dead in the water before we start.\"\n\n...\n\nI was amazed at the reaction once our plans were approved and made public. The backlash Grace predicted came with a vengeance. They even had a website, 'Say No To Henson City'.\n\nIt upset Benny no end. He tried not to show it, but every one close to him could tell. He actually attended a county commission meeting, advertising in advance he would be there. They had to move it to the municipal auditorium to hold the crowd.\n\nMost of the commissioners were happy with the way things were going, the county was solvent, the economy was excellent, unemployment was under three per cent, the best in the state. Two were opposed to almost anything Benny wanted to accomplish, one because he sensed the undercurrent of jealousy from the few who opposed change, mostly former movers and shakers usurped by his popularity and wanted to exploit it, one because he hated Benny with a passion beyond words.\n\nIt was Tom, current husband of his exwife, the man she'd cheated with while they were still married, the man she'd left him for, 'trading up' for the promise of a better lifestyle. There had been snide comments, ill concealed disrespect before Benny started writing and became successful beyond anything he'd ever even dreamed about.\n\nI'd deposited some money in his bank just after Benny's career took off, a tiny percentage of what we had now. Took great pleasure in making Mariam do the paperwork. I did it with the express intent of rubbing their faces in the fact that they would never, ever, be in his league. The bank was mostly owned and controlled by Tom's family.\n\nI never put another dime in, and when a new credit union opened in town, offering far more services at greatly reduced rates, the bank suffered a significant loss of business. The fact that we were one of the major backers, and put most of our liquid assets with them to get it up and running was not lost on Tom and Mariam.\n\nTo be honest, by the time the credit union was established, we had pretty much forgotten about them. They hadn't forgotten us, not by a long shot.\n\n...\n\nThe meeting got pretty hot right off the bat. Before Benny could explain his position, Tom and the other commissioner attacked\n\n\"This is ridiculous!,\" screamed Tom. \"Why should we kowtow to this arrogant jerk? Does money make you God?\"\n\nIt was all I could do not to remind him that he must have thought so while he was seducing Miriam, dangling a more affluent lifestyle in front of the shallow bitch. Or how they had belittled him every chance they got. How does it feel to be at the bottom of the food chain, bitch?\n\nI held my tongue while he spoke, following the script our lawyers and publicists had dictated,\n\n\"Excuse me Tom, but how have I been arrogant? I'm still Benny, still live here, still go to the same diners and restaurants as everyone else. I was just blessed to be able to accumulate a lot of money.\n\nBut I don't use it to make people bow to my whims. I don't put strings on anything I do. I give a lot back to this county, because in many instances they need it. In return I ask for absolutely nothing, except maybe a thank you once in a while.\n\nLike I said, I live here. I'll live here until I die. This is my home. Don't you want to improve the community? Doesn't your bank make loans everyday for new houses and businesses? Don't you think these things make it a better place to live? In the end, I'm doing the same as you're doing, investing in the future. Maybe I do it on a different level, but isn't the goal the same?\"\n\n\"As far as these building plans go, even you will admit new housing is needed, and I haven't seen anyone else try to address it. Do we really want these people to live somewhere else, and commute to work here? But I tell you what, why don't you put it to a public vote right now? I ask every commissioner here to vote their conscience. Don't worry about whether it's good for Benny, worry about whether it's good for the county. I'll respect your decision either way.\"\n\nOf course, the commissioners delayed the vote, being savvy enough to let everyone air their opinion. The vote was already a foregone conclusion, nine of the twelve commissioners were already on board. In the end, the vote was ten to two. You can guess who voted against. Tom and the other commissioner left in a rage.\n\nBenny said nothing , but I knew he was hurt just a little from all the negativity. I tried my best to love the pain away. I think I did, a little.\n\nTwo days later I was off, on the final leg of my book tour, three months, including stops in Mexico and Canada.\n\n...\n\nThe book had legs. Seven months later and it was still near the top. Beth was pushing me for a sequel, but I really wasn't sure. I was a guest on Ellen, and she chided me for not bringing Benny, then asked if our production company was going to make the movie.\n\n\"I don't know if anyone will film it as it is. It has so much sex in it the best rating it could ever get would be a an X.\"\n\n\"What about the other erotic book that was just recently made? It's very successful. Couldn't you have your own variation on a color scheme with this. Plum colored, perhaps?\"\n\nThe way she said it made everyone laugh.\n\n\"I have to say, Ellen, that I've never read the book. I may or may not see the movie when it comes out on DVD. But it was very successful, so I congratulate the writer. I just don't want to see my book as a movie.\"\n\nI paused. \"That being said, of course our company has the film rights. Maybe one day down the road, who knows?\"\n\nWe talked a little more about the production company, what Benny and I had planned for the future. I for one planned on going back to my happy little life, hoping to get Benny to at least semi retire.\n\nSix more weeks, I thought to myself. Six more weeks until the tour was over and I could go back to my real life. I couldn't wait.\n\nThe pressure was getting to me. The constant travel was getting tedious, the sameness of hotel rooms and book stores wearing me down. I had stopped exercising, watched television until my mind was mush, and drank more.\n\nMy new assistant seemed to understand. My first, the perky one, had left to get married, to my private relief. Bonita was just past thirty, self assured, ambitious, and ruthless in her drive to advance. She saw me as a step up.\n\nMark disliked her instantly. He told me much later she reminded him of several of the more successful criminals he'd encountered in his law enforcement career.\n\n\"Be careful, Miz Bonnie,\" he said in that soft Southern drawl, \"I think Bonita is a little too worried about what Bonita wants to keep your best interests at heart.\"\n\nI should have listened, but in retrospect I'd like to think I was still a good person who wanted to give her the benefit of the doubt.\n\n...\n\nWell, turns out she wasn't a good person.\n\nI caught her trying to broker a deal with another publisher to get my next book in exchange for a better job and a little cash bonus. The drawbacks to the plan was that it was done without my knowledge or consent, I had already decided my writing career was over, and on the off chance I did decide to do another book, I was completely loyal to my friend and her publishing house.\n\nThe book tour was over and I was finally going home. I hadn't talked to Benny in six days. I had been exhausted, distracted, pissed over having to handle the Bonita situation, so to my shame I never thought about calling him. In retrospect, I should have realized something was off because we always talked at least once a day.\n\nBonita didn't take her termination very well, and when what she tried to do came out, people were hesitant to hire her. She of course blamed me for her demise, mentally vowing vengeance while apologizing to me for the 'misunderstanding'.\n\nI was home! Finally. I called Benny twice but it went to voice mail, which I didn't find odd because he often switched off his phone while in meetings. I waved to the security guards stationed at the entrance to our compound. I didn't know them, but the security company changed them pretty often, to avoid efforts from reporters and any one else with an agenda to tempt them. We had cameras covering every portion of our house and yard, as well as those of our family. When they were home, the interior cameras went offline, and on request, some of the exterior ones, for privacy. It was a sad comment on our lives, being rich and famous wasn't as much fun as one would think. We also had two guards that patrolled the grounds. There had been another attempt at a kidnapping, one of the grandchildren, and now we had guards deliver and pick all of them up from school.\n\n...\n\nI walked into the house, dropping my bags and sighing with relief. I still missed our little house, but this new one had its' advantages. To start with, it was huge. We tended to have the grandchildren stay over regularly, and now that the older ones were preteen and teens, they appreciated the pool more, especially the waterfall and wave options. Benny didn't really like to spend money on himself, but he was relentless when it came to spoiling the grandkids. It also contained a state of the art outdoor kitchen, with gadgets most people didn't have in their regular kitchens. Off to the side, in a place of honor, Benny kept his old cooker, a converted oil drum that had seen decades of service. Every three months or so he'd cook. I don't know how word got out, but we'd always end up with a houseful of guests. Mike Hogue would show up from time to time, frolic with the children, eat until I thought he'd explode, and relax, often with different women, all exotic and beautiful, on his arm. Nothing seemed serious, though, rumor had it he was engaged at one time and she broke his heart.\n\nSometimes Wiley and Moira Patterson would show up with their brood of redheaded girls and the auburn haired little boy. We had an official guest house, but his younger kids and ours would drop wherever they got sleepy. Most often than not, we'd start a fire in the pit, and they'd break out the guitars. I'd sit back and marvel as two of the top entertainers in the world would sing silly songs with the kids. Our grandchildren would have tales to tell their children when they got older.\n\nTheir oldest girl was planning on pursuing film as a career, and Benny had promised her an internship when she was old enough. We assured Moira and Wiley she would be taken care of, even offered to let her live with us. This thrilled the child no end. They promised they'd think about it, winking when she wasn't looking. \n\nI just stood, soaking it all in. I was home!\n\nBenny for some reason still wasn't answering his phone. I shrugged, hoping he would be home soon.\n\nKnowing I was alone, I slipped off my clothes and dove into the pool, half hoping Benny would come home and take advantage of the situation. After a few laps, I got out, toweled off, and opened the bar, getting out the ingredients for a pitcher of margaritas. It got later, Benny still wasn't home, and I slowly got drunk. When the first pitcher ran out, I made another, spilling things everywhere, putting way too much alcohol into the mix. I passed out, mildly pissed at Benny for not being there.\n\n...\n\nBonita Smith had neither forgiven or forgotten her dismissal. Her little plan backfired, and she found herself unemployed with little chance of getting another job in her field. Publishers had a low tolerance for poachers, and her name was mud as far as the mainstream was concerned.\n\nTaking stock, she admitted to herself she was a sociopath, which of course, being true to her nature, didn't bother her at all. She became obsessed with the Hensons, vowing retribution. Using the last of her money, she traveled to her hometown.\n\nShe was amazed when she got to the compound and found she was still on the official visitor list. A car had followed her down the long private drive, and she had paid it no attention. The new security guard, thinking they were together, waved them through.\n\n...\n\nTom, Marion, and their lawyer Bob, found themselves in an awkward position. The bank was losing business at an alarming rate to the new savings and loan. Things were not looking good. To top it off, the Hensons still had a lot of assets at the bank, parked there for easy disbursement as they built the studio. Now, with the new savings and loan starting up, they had decided to move everything there. Tom was pretty sure Benny and Bonnie didn't realize he still had almost twenty million in different accounts still at his bank. It could hurt them very badly if it was gone. ",
        "They were three of the people the Hensons really didn't care for, in the position of asking for help. Mariam was against the idea from the start.\n\n\"You're the asshole who stole his wife, Tom. Bob, you're the lawyer that tried to take him to the cleaners for me. I'm the cheating bitch that left him for a better offer. Boy, I wish I had that decision back. What good could possible come of us going to see them?\" \n\nTom flew into a rage when he heard her say she regretted leaving Benny. \"The best thing that ever happened to Benny Henson was you cheating on him. You're the reason he's so fucking rich. If you hadn't broken his heart, and if he was still married to you, he'd be just another worker drone, lost in the scheme of life. I wonder if he knows I wasn't the first man you fucked while you guys were married? Good ol' Bob here can attest to that. Don't look so shocked. I knew when he was fucking you. The only reason I chased you to start with was because he said you were a great piece of ass. And he was right, for awhile. Maybe we should do a threesome, see if you can get your motor running again.\"\n\nMariam was about to respond hotly, when the thought of having both men stopped her cold. Bob saw the look and laughed.\n\n\"Look at her Tom! Her nipples shot straight out when you mentioned a threesome. The bitch is hot for it.\"\n\nSo she found herself in the backseat of Bob's car, sucking his cock with zeal as Tom drove, while he pulled up her skirt and fingered her. She was so excited she squirted in five minutes, making him laugh. Getting her in to position, he slid into her easily, depositing a huge amount of come in her. \n\nTom immediately pulled over, and she found the second cock of the day in her mouth, as Bob drove slowly towards their destination. \"Damn, I'd forgotten how good that mouth is. Suck baby, you got five miles to get me off. Do a good job, and we'll bang the shit out of you when we get back to the house, maybe even do a little DP, I'd love to feel you squirming on his cock while I stuff that tight asshole. What do you think of that? Shit! She must like the idea, Bob, the way she sped up when I mentioned it. Make a note to stop at a drug store on the way back to your house. We're gonna need a tube of lube. Maybe two.\"\n\nTom dropped his load in her mouth. He grinned, saying those tits would be out and on display on the way home. They made her pull one out of her dress and he sucked hard on it, leaving hickies on each side. She barely got put back together when they reached the gate.\n\nThey were shocked when the guard waved them through. He must have thought they were with the woman in front of them.\n\n...\n\nBonita couldn't believe she got in so easily. She was rehearsing her lines when she noticed the car behind her. Shit, if they knew her they'd know I wasn't welcome any more. With the confidence of a true sociopath, she knew she could work the situation to her advantage. Bonnie would have to be gracious with other guests.\n\nThey stared each other awkwardly, finally introducing themselves and ringing the bell. When no one answered Bonita tried the door and it swung open.\n\n\"She's probably by the pool,\" said Mariam, gritting her teeth at the beauty of the place. She'd seen it before, in a state magazine that did a cover story on the Hensons. They walked through the house, calling her name.\n\nBonita stopped so suddenly they all bumped into each other. Bob looked around her, his jaw dropping. There, on the lounger beside the pool, stark naked and passed out lay Bonnie, her legs sprawled open.\n\nThey all looked at each other, trying to decide what to do. \"Fuck this,\" thought Bonita, snapping pictures on her phone. The pictures would go a long way towards getting a new job, maybe with one of those online or television gossip rags that were all the rage. She leaned in closer, getting a good shot of her tattoos. Then she ran out, laughing\n\nThe three stood and stared at each other and Bonnie before Mariam pulled out her own phone and started snapping pictures.\n\n\"What the hell are you doing?,\" asked Bob, ever the lawyer.\n\n\"I'm securing the future of the bank. Just the threat of these photos being released should be enough to get Bennie to leave his accounts with us. He'll have to leave his savings and loan buddies in the dust, which might close the doors. Then we'll have all the business. Think about it.\"\n\n\"As a lawyer, I have to inform you this is unethical and highly illegal. If you get caught, you won't be up shit creek without a paddle, you won't even have a boat, and the shit can get mighty deep.\"\n\n\"Got a better idea?,\" asked Tom, \"You got a lot invested in the bank too.\"\n\nTom had Mariam push her legs open a little wider. He took a marker out of his briefcase, and laughing, marked out Benny and wrote \"TOM'S' across the top. In a sudden inspiration, he reached under Mariam's dress, pulled out a large glob of semen, and rubbed it around Bonnie's lips, leaving a small bit at the corner, and another glob over her clit.\n\nUnconscious, semen marking her body, she looked rode hard and put up wet. They were admiring their handiwork when the screams erupted. Hilda and Sarah had gotten her text messages, and rushed over to greet their old friend. They wondered at the Lincoln in the driveway, but put it aside as they rushed to the patio, Bonnie's favorite part of her new house.\n\nThe couldn't believe it when they saw the trio standing over a naked Bonnie. At the first scream they ran from the house. Hilda, the more practical of the two, called 911, asking for the police and an ambulance. Bonnie, starting to come around, stirred, but Hilda basically made her stay still until the police arrived.\n\n...\n\nThe cops flew by the trio as they drove, getting more and more nervous. Then one turned around and got behind them, lights flashing.\n\n\"Clear you phones, quick!,\" said Bob. Tom grinned, having already cleared his and Mariam's, after sending them to his computer. Tom couldn't help himself, and sent Benny one picture, of Bonnie sprawled out, the marks and semen obvious on her body. \"One more you lost to me.\" was the message.\n\nHe pulled over, and the cop came up, getting the license and registration. That out of the way, he started asking questions.\n\n\"Were you at the Henson house a few minutes ago?\"\n\nBob handled all the talking. \"Yes, Officer, we were. We had some paperwork they needed to sign.\" He held up the manila envelope they'd brought. \"However, when we got there, Mrs. Henson was...indisposed, so we left. Is there a problem?\"\n\nOfficer Graham looked at him, fighting the loathing in his mind. Bob had a habit of representing lowlifes, and was pretty good at getting them off. Tom had denied him the loan he needed to build his house. Luckily, the new savings and loan not only approved his loan, they had given him a better rate, the 'law enforcement' discount as they called it.\n\n\"I'm not sure if there's a problem, sir. Would you mind returning to the house? I'm sure we can clear this up quickly and you can be on your way.\"\n\nBob felt a bit of panic and tried to bluster. \"Now see here! We're all important people in this community, and we all have obligations, meetings to attend, that sort of thing. We do not have time...\"\n\nOfficer Graham interrupted him. \"I suggest you make time, sir. If you don't go willingly, I'll call for backup, and we'll escort you back. So please, cooperate, and follow me. Your choice.\"\n\nGrumbling, hinting at legal action, they turned back.\n\n...\n\nHilda wouldn't let Bonnie move until the ambulance arrived. They drew blood, took swabs of her mouth and vagina, and carefully took samples of the semen. Bonnie became more and more cognizant, mortified to be exposed in front of so many people. She was finally given a robe, and Sarah gently explained what they had found when they arrived. Bonnie went to the bathroom and opened the robe, seeing for the first time the marked over tattoo. She fainted, crashing to the floor. The EMT's put her in the ambulance gently, so she could be transported to the hospital for overnight observation.\n\nAs she lay sedated, events unfolded, leaving her doubting she'd ever be happy again.\n\n...\n\nBenny had been desperately trying to get hold of Bonnie for almost two weeks. Her personal assistant had promised to give her the messages, but Bonnie only called back once, in a foul mood, cutting him off with a rant before hanging up.\n\nShaken to the core over the state of their marriage, he did what he had to do. One of her granddaughters, Megan, had been diagnosed with leukemia, and needed a bone marrow transplant badly. They were hoping Bonnie might be a match.\n\nHe got hold of Etta, telling her the situation, and she promised Bonnie would call him back. She didn't know about her assistant, so she didn't know what was going on.\n\nIn the meantime, every adult on both sides of the family got tested, and were excited that Bennie actually qualified as a donor, an 85% match. Two days later, they performed the procedure, as the family waited. He was kept for several days because of his age and a reaction he'd had to the medicine used to sedate him. Megan showed definite signs of improvement, and the family, especially the parents, were overjoyed.\n\nAs Benny was leaving he got a text, showing Bonnie in her naked glory, the sperm on her body, the marked out tattoo, and lost it. He never said a word, and when the family got him settled in his house, he made plans.\n\nHe quietly chartered a plane, flew to a city he had no connection with, and disappeared.\n\n...\n\nBonnie woke up to a nightmare. Depending on how you looked at it, one of the new security guards luckily forgot to turn off the interior cameras, and the whole episode was taped. Bob, Tom, and Mariam were arrested on a number of charges, including second degree sexual assault. If convicted, they would have to register as sex offenders everywhere they chose to live.\n\nBonita was caught trying to sell the photographs, and was in turn indited, again for second degree sexual assault, making it impossible to find work in her field. She ended up as a waitress.\n\nBonnie cried for Benny, shocked when Hilda told her what had transpired, that she had missed an important event in the lives of her family. Megan was doing well, thank goodness, and wanted her grandfather. They gently told her he was away on business, wondering the whole time where he was. Hilda made sure one of the family was always close, and hired four of the best detective agencies in the world to find him.\n\nIt seems as though he just disappeared off the planet. They literally searched the world for him, even going to the Pacific islands where they had vacationed. Mike Hogue was contacted, and he swore he didn't know where he was, then started his own investigation. \n\nSix weeks went by. Saul, Beth, Etta, Will, and Grace were extremely worried. Beth, most used to working with people like Benny, feared the worst. They all blamed themselves a little for pushing her too far.\n\nThe media finally got hold of it, the assault, the charges, the disappearance of Benny. The gossip rags had a field day. One even published a picture, with her chest and bottom blurred. They were almost sued out of business, before printing an apology and telling the authorities where they got the picture. Bonita was shocked when they picked her up at work, and processed her for a whole new set of charges. The magazine had promised they would protect her.\n\nFinally, desperate, Bonnie made an appearance on her favorite talk show, with Grace standing by. She was the only guest, and the country listened, stunned, as she told the whole story, breaking down several times.\n\nThe last fifteen minutes of the show was devoted to Bonnie begging Bennie to at least let them know he was alive.\n\n\"Please, honey. I know I may have gone too far, not for the assault, because that's what it was, but I should never have put myself in that position. I'm seeing a therapist, and haven't had a drink since that day. The thought of alcohol now makes me physically sick. No, I went too far by ignoring you and putting our marriage at risk. It didn't matter that you warned me, or that you made sure to have time for me even as you became famous. And I'm deeply ashamed to have ignored my family even as one of them was gravely ill.\"\n\nShe stopped to sob, Grace gently rubbing her shoulders. Finally she roused and looked straight into the camera.\n\n\"Then, Benny being Benny, saved the day. He donated bone marrow so that his stepgranddaughter could live a healthy and normal life. And he would hate the term 'step', he reveled in his grandchildren, no matter whose genetic marker they wore. Benny if you're out there, know this. I will love you to my dying day and beyond, even if I never see you again. There will never be another man for me. I love you, and I'll always love you.\"\n\nBonnie broke down again, and the show ended. It made the nightly news on every network, intensifying the hunt for Benny.\n\n...\n\nFour days later Megan burst out of the house, trying to drag Bonnie inside.\n\n\"It's Poppy! He's on television. Come on.\"\n\nShe, Hilda, and Megan's mom rushed inside. Bonnie looked at the screen, disappointed. Wiley Patterson, the country singer and songwriter, was on one of the morning shows. Although he was holding a guitar, he was talking about the children's book he had written, explaining it was partially about how he and his wife got together, and their personas when they visited hospitals to cheer up sick children. It had evolved into a personal fairy tale he used to tell his children when they were little.\n\n\"It would have never been written if not for the help I got from a good friend. This was his area of expertise, and he guided me through the process, whipping it into something readable.\"\n\nHe nodded to the man beside him, holding an acoustic bass guitar. Obviously older, his longish gray hair was tucked behind his ears, his mustache drooping and his goatee groomed and pointed. He looked like a cowboy straight from the old West.\n\nHe grinned and spoke. \"I think maybe my friend is being a little modest. I contributed little to the book, just a few suggestions here and there to keep it flowing. Actually, I learned a lot from him as well. He even let me help him write a song or two.\"\n\nIt was Bennie! Apparently he had been hiding out in Nashville, hanging out with Wiley. I remembered now, how he had once talked with Benny for an hour over the process of making a thought into a story or song.\n\nThe hostess, having been told pointedly that this was about Wiley, not Bennie, and the first time she asked him a question they would both walk out, nodded and rambled on about the book. Apparently Beth had done the edit and her company published it. Out for just over two months, it was already rising fast.\n\nBeth told me about it later. \"All I knew was that Bennie was pushing it. I was told if I didn't think it was good enough to publish after editing, they would pitch it to others. It was good, very good. Bennie can say what he wants, but that book has his fingerprints all over it. So we published it. It came out two weeks before your book tour ended. I'm surprised you didn't know about it. He usually tells you everything.\"\n\nThere's a copy of it on our shelves, bound to be dogeared and torn from long use. The dedication was to Moira, Wiley's wife, and his brother-in-law, killed in a romantic triangle. At the end he thanks \"my good friend, and the only true wordsmith I ever knew, Benny Henson. As much as he would like to deny it, this book was only possible through his help.\"\n\n...\n\nI sat, amazed, when Wiley stopped talking about the book and about the songs he was about to perform.\n\n\"These songs were co-written with my friend Benny. They're going to be in the movie his company produces, based on the play and book he has coming out. I want to thank him once again for letting Moira and I be part of his creative process.\"\n\nThey sat another stool and microphone up while he talked, and then his wife Moira walked out, her trademark mass of red curls pushed back in a loose ponytail, wearing a simple blouse and jeans. She kissed Benny on the cheek and Wiley on the mouth before sitting.\n\nThe first song was quite good, but the second song blew me away, as well as the rest of the country. Before they sang it, Benny introduced the song, giving the backstory.\n\n\"This is a story of two people, married for a long time, who lost their way. It took a horrific event to get then back together. I wrote it for my wife, who I still love more than the air I breath, as sort of an apology for not being there for her recently. I'm sorry, Bon.\"\n\nI was so shocked I almost missed the song. He still loved me! And he was in New York!\"\n\nThe song, \"Weathered House,\" was haunting in it's beauty. One single guitar and bass, the vocals whispering at times, soaring at others. I was surprised that Benny had such a good voice, I can't recall ever hearing him sing before. His baritone added the perfect touch to the harmonies.\n\nThe hostess asked about the play, and Benny answered.\n\n\"It's the first time for me, play-wise. I met a producer, Derek Brooks, the very first time I was in New York, and he gave us free passes to one of his shows, on the condition I let him have first crack if I ever wrote a play. I sent it to him a month ago, and he's really excited. He's got one of the top playwrights in the country going over it, tweaking for the stage. I'm staying here in New York, for at least six months, so I can be part of the process.\"\n\nHe, still looking at the camera, grinned. \"I'd like to take a moment to address the reports of my disappearance. I don't know why everybody had such wild thoughts about me. I still had the same email address, the same phone number. I turned everything off for two weeks to concentrate, but they've been back on ever since. One call would have been all it took. I let it go on because it decreased my distractions, and I wanted to think. Especially about my wife. Did she still love me? Did I love her?\"\n\n\"Of course I did. Bonnie, if you still love me, you know where I'll be.\"\n\nHe was looking right at the camera. Hilda was already on the phone to Beth and Saul, and they promised to tell Grace and Etta. There was a plane at the airport, ready to go as soon as I got there.\n\n...\n\nIt was the lead story on the evening newscasts. Benny Henson was alive and well and in New York City!\n\nBeth picked me up. We rode in strained silence for awhile until I took her hand and apologized for my behavior. She apologized for not looking after me better, and we shared a quiet cry on the way to her office.\n\nOnce there it was all business. She mentioned my book and I shut her down. \"Don't ever discuss that with me again. I'm done, Beth. There will be no more books, and I'll never again speak about the one out now.\"\n\nChanging tactics, she asked if I knew about the play.\n\n\"I didn't even know he had written one. I haven't talked to or seen Benny in almost three months, so I had no idea what he was doing. Still, if I had been there, I wouldn't have known until he was almost done. It's just the way he works now. Enough about business. I need to see my husband, and you need to tell me where he is.\"\n\n\"I don't know where he is, and no one is talking. In my opinion, this is a test. He wants you to come to him. Are you willing to search?\"\n\n\"I'll take this city apart brick by brick if I have to. Got any hints?\"\n\nBeth smiled. \"He's doing a play. Go to Broadway, talk to Derek. If anyone knows where he is, it will be him.\"\n\n...\n\nDerek saw me immediately when I turned up, but was tight lipped about Benny. \"He's got an apartment somewhere close, but I don't know exactly where. And if I knew, I wouldn't tell until I had permission. My advice would be to just hang around, he comes in two or three times a week to go over revisions and offer suggestions.\"",
        "He paused, judging how much to tell me. \"This is going to be huge, Mrs. Henson. It will be on Broadway for decades unless I miss my guess. It's pretty stark, and there are only three actors in the whole production, all past middle age. Enough has leaked out about it that I'm getting calls from every agent in the country, and even England, Australia, France, you name it. Hugh Jackman, Sally Fields, Russell Crowe, not counting the stars here on Broadway, the list keeps growing. I'm glad I'm not handling casting on this one.\"\n\nSo I was allowed to sit in the venue and listen. I sat there every day until they sent me home, for two weeks. It didn't take me long to figure out the play was about Benny, me, and decisions I'd recently made. One scene, where the man begged his wife to just talk to him, could have been lifted from our phone conversations. I just sat and cried. Of course, they were using unknowns, testing dialogue, building and assessing sets, setting stage marks, testing backgrounds, but they were trying their best, hoping to make good impressions for future work.\n\nSomeone reached over my shoulder and handed me a box of tissues. I didn't know anyone was behind me. I took a handful, snuffling out a \"thank you.\"\n\nI turned round to hand the box back, to look my husband in the eye. There was dead silence for about fifteen seconds as I looked at his face, the slight smile flitting around the edges of his mouth. My scream brought everything in the theater to a halt, everyone from the stage hands to the business people in the back rushed over to see if I was all right.\n\nI was more than all right! I had the man I loved more than my own life in my arms, and they were going to have to pry me off him. Two of the biggest stage hands picked us up and dropped Benny on a seat, me still clinging, firmly in his lap. Derek came over grinning, and shooed everyone away. He waited patiently until I finally gave him his lips back.\n\n\"I see you found each other. Would you like an office for privacy?\"\n\n\"Only if you intend to build one around us where we sit. I'm wrapped up in the arms of the man I love, and I'm not letting him turn me loose anytime soon.\"\n\nHe just smiled and left us, telling everyone to stay as far away from us as possible.\n\nAfter the crying came the apologies, from both of us. Benny talked after I was done, and it broke my heart all over again. \"It broke my heart, Bon, even before the photo, to think I was losing you. Do you not think I had to face the same demons, while I was out doing press for my books. During the times you couldn't come I would wander around alone. And the hints, the comeons, the outright groping and flashes from the women, it all made me sick. The thought that I'd betray you with any of them made me laugh. But suddenly you weren't talking to me, shutting me out of your life completely. I'd talked to a lot of other people who also would spend long stretches apart form their spouses, and heard the stories of how many had succumbed. I came to the conclusion you were moving on in your life without me. When you refused to answer your phone, refused all avenues of contact while your granddaughter was in danger, it tore my heart out. Then came the picture, and I had to get away.\n\n\"I don't know why I picked Nashville, maybe because we had never been there. I moped around for a week before I remembered the Pattersons. I called, and Moira came by in this monster Jeep and took me home with her. I stayed in their guest house for a week before I started coming back to life. Their son wanted to go fishing, and no one had the time. He asked me at breakfast, and by the afternoon Aaron, his next oldest sister and I were on the bank of their pond. We fished long enough to catch enough to feed the family the next night.\"\n\n\"Wiley and I sat the next night by the fire pit they'd put on the end of their patio, talking about life in general and love in particular. You didn't know it, but after the incident I had the family keep an eye on you. I knew you were frantic to find me, but the resentment was still strong, and I just couldn't come home.\"\n\n\"Instead, I thought about it, and read online about some guy who found out his wife of forty years had cheated on him years ago, and the pain it caused, even though it was fifteen years in the past. She blamed the isolation they lived in, saying she was starved for human contact and the mailman was available. Her house was his turnaround point, and he would eat his lunch at the end of her driveway. One day she invited him in, and they lunched together after that. Lunches turned to more and her husband became suspicious. He made it a point to come home at lunch, just in time to almost catch them. It was in Oklahoma, and a tornado came up, forcing them into the root cellar for hours. She realized then how foolish she had been, and rededicated her life to her husband. The funny thing was she had inherited the house from her grandmother, and insisted they move. He had to drive seventy-two miles each way for the only job he could find. After the repairs to the house, they put it up for sale and moved back to the city.\"\n\n\"Her husband only found out when the mailman died, and left her some things in his will, including a letter he'd written but never sent, detailing the love he felt for her and asking her to leave her husband. When they moved, he put the letter in the box until he passed.\"\n\nI was curious. \"Did the couple stay together?\"\n\n\"I don't know. The article never said.\"\n\n\"Well, I hope he forgave her.\"\n\n\"We'll never know. One thing that stood out in the article was her analogy between their relationship and the house.\"\n\n\"She said their life was like the house. It had stood the test of the storm, coming out intact, just weathered.\"\n\nHe sighed. \"I worked on the rough draft sixteen hours a day for four weeks. Then I stopped and helped Wiley with his little book. He had already written the story, I just tweaked it into something readable. Somehow I'd picked up an acoustic bass he had lying around, and he taught me the basics.\"\n\n\"Then I went on the show, knowing someone in the family would be watching. I didn't know exactly where I stood with you, so I set it up. If you still wanted me, you needed to come looking. And here we are.\"\n\nI sat, open mouthed. Then I grabbed him, pressing our faces together until our noses touched. \"Now you listen to me, Benny Henson! I may have lost my way for a little, but I never, not once, stopped loving you! You have no idea of the hell I was in, wondering if I'd ever see you again, wondering if I could even still exist without you. I will make you some promises now, this minute, and you better take them to heart. I will never let go of you again. You hear me, NEVER. I'm done with writing. I'm done with being apart. From now on, if your head is on a pillow, mine will be on the one beside it, unless, of course, I'm sleeping in your arms.\"\n\nI let go and pulled back, panting with emotion. Did he still want me? He just grinned.\n\n\"Well then. Whenever you're ready, I'll show the apartment I leased for us while we get this thing off the ground.\"\n\nWe set a land speed record for two people in their late fifties navigating the streets of New York. We showered together, for some reason making both of us cry. You would think that having been without sex for over four months we'd be on each other like animals, but we mated slowly, softly, at least at first, trying to pour love into every movement. The next two were a lot firmer, but still sensual. We didn't wake up until after noon the next day.\n\nI'd like to say everything went back to the way it was, but it was almost a year before we were back to normal. We went through some pretty intense therapy for a couple of months, and the trials of Bob, Tom, and Miriam were pretty upsetting.\n\nThey all got convicted of second degree sexual assault, despite Miriam claiming she had no part in it. The video plainly showed her lifting Bonnie's legs, and the judge ruled she was just as involved as the rest. They all got three years, and did about six months. Bob was, of course, disbarred, and Miriam and Tom lost their jobs, because they were registered sex offenders now, and there was an elementary school on the block behind the bank, close enough that it violated proximity laws.\n\nBob left town, to work for his uncle two states over as a paralegal, lucky to get the job.\n\nTom's father helped them sell their house, and gave them some money, while they found new jobs. It got a little sticky in our blended family, because they were under a permanent restraining order to stay a thousand feet away from me, Benny, our home, and the studio. Four times a year they took the family and tried to spend a week with them. The kids footed the bills wherever they stayed, the loving couple were barely making even. They one day Tom disappeared.\n\nThe boys felt bad for their mother, even though they hated what she'd done and turned into, but they were all pretty well off by now, so they leased a nice apartment for her, bought her a car every few years, and gave her money regularly.\n\nI secretly enjoyed it, knowing as she did the money came indirectly from Benny.\n\nA Weathered House won four Tony's the first year it was in production. The book was a monster, and the movie did almost as well as Union Of Souls.\n\nWe took a trip up to New York six months after it was in print, and had a small meeting with Beth and Saul, announcing Benny's retirement. Saul smiled, and retired himself. Beth was shocked and begged him to reconsider, but he hugged her and told her if he ever decided to write something else, she would the first person he would call.\n\nWill still handled our money, having expanded to a full office firm, with us and the studio as his major client. Grace remained our lawyer of record, just in case.\n\n...\n\nWe brought in all our kids, even the ones who didn't work for us, for a meeting. We turned the studio over to four of them, and kept the two who did our charity work on their jobs. The rest kept the jobs they loved, but we made damn sure they were taken care of also.\n\nHilda, Sarah, and their husbands were brought in as full partners in the real estate business, and seven years later they were done, and the county voted unanimously to let them incorporate as a village, named Hensonville. We made the trip up for the ceremonies. Benny was given a brass plaque naming him founder. He tried to get them to change the name, but to a voter, they refused.\n\nBenny had one ironclad rule imposed on our family. Once a year, in the summer, every business we owned shut down for a month. All the workers received full salary for their vacations. Turnover was the lowest of any company in the state. The extended Henson family, including Beth and her current girlfriend, Etta and her second husband (the first finally succumbed to his illness) Will, Grace, Hilda, Sarah, their husbands and extended family were all required to spend the month on their private compound on the Pacific island so long ago. If Wiley, Moira and their brood could make it, they came too. Mike Hogue was a constant visitor, with his three wives, including the tiny transsexual who had broken his heart all those years ago, and all their children.\n\nWe had one big party there every year. Benny hired some natives and taught them how to make Southern style cookers out of oil drums, and how to cook his way. There would be upwards of five hundred people attending, including the King and his court.\n\nOur grandkids, especially the ones in their teens, got a lot of mileage out of pictures of them hanging out and dancing with royalty. One of the princes, the third by the King's second wife, and one of my grandchildren hit it off to the point she begged to attend the recently incorporated national university. Looks like she would be a real princess if things went right. \n\nWhen we're at home, we often take the small motor home we bought, hook the little SUV behind it, and take off. If it's summer or a holiday, there's usually three or four kids with us. I think we've seen every natural wonder and been to every amusement park in the country. I'll sit in a chair, and listen to Benny playing with the kids in the pool, and sometimes I cry from happiness. In the nine years since we've retired, Benny only had the urge to write three times, each after hearing some wild tale while sitting with adults at a campground, sharing alcohol.\n\nHe writes it up as a steamy short story, and publishes it online, under a new name. I won't tell you which one. He gets four or five stars every time.\n\n...\n\nWhen we were sixty we had a death in the family. I stood, naked, in front of our bathroom mirror, looking at the sags and wrinkles. I heard a faint whisper. Listening closer, I knew it was Plum.\n\n\"We had a pretty good run, didn't we, old girl?\"\n\nI found the thought of losing her disturbing. \"Nonsense. We just conserve our energy better now.\"\n\nMy alter ego sighed in my head. \"No Bonnie, I'm done. You guys don't need me anymore, and nothing is more irritating than an old slut that doesn't know when to leave. Think of me when you're farther along, and remember the good times. We had plenty of those. I just wished we'd found Benny earlier. Think of the fun we could have had.\"\n\nI could see her in my eyes, laughing through the mirror. \"Despite starting late, we did all right, don't you think?\"\n\nShe never answered, the light in my eyes fading. It upset me a great deal. I sobbed on his shoulder later, explaining what I felt. Benny, bless his heart, knew what to do. He lit the fire pit, piling the logs high. He went into the closet, pulling out the trunk we'd almost forgotten about. It contained all the toys we'd accumulated for Plum. Slowly, one by one, we tossed them into the fire, a memory triggered by every one. I stopped him just before he threw the last vibrator in.\n\n\"Keep it, honey. Let's take it with us to bed tonight, and send her off in style.\"\n\nAfter an interesting and exhausting session, we drifted off to sleep, the ghost of Plum smiling over us. The next morning, I cleaned the fire pit, and inspiration struck. I had started collecting pottery, and had just acquired a very old bean pot. I ran and got it, and carefully brushed some ashes into it.\n\nThat weekend, I took it to a man who restored pottery, and had him refire it with fresh clay, fusing the lid and putting an image of a large purple plum on both sides. It sits on our mantle now, and all the kids know it is never to be touched.\n\n*****\n\nWell, there it is. I hope it met your expectations. Look for a couple of Brother Love's next. As always, thank you for your time. Comment or vote if you like.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [
        "loving wife",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/finding-an-editor-ch-03"
}