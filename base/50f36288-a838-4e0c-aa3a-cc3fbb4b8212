{
    "title": "Shannon's Offer",
    "pages": [
        "This story is a work of, hopefully, humorous fiction. Any similarities to persons living or dead are purely coincidental. Any products or organizations that appear do so in a fictional manner, too. \n\nThanks for reading. Any feedback will be greatly appreciated.\n\n______________________________\n\nWhen I took a new job in the suburbs of a major southeastern city some years ago, my wife and I looked for a home on a quiet street where we could raise our then pre-teen children. It was spring when we were in the housing market, with plans to relocate from our old home in Iowa right after the school year ended to allow our son and daughter plenty of time to adjust to their new surroundings. My wife knew exactly what she wanted in our new home, giving the realtor a pretty comprehensive list in advance so she could have some suitable candidates selected for our viewing. \n\nWhen we got to her office, Mrs. Carstairs, the realtor we'd selected based on a recommendation from my new boss, pulled my wife's list out of her file and said, \"You have excellent taste, Mrs. Jones. I've chosen eight homes for starters that meet almost everything you have listed and that are within your preferred budget. I really think we'll be able to fix you right up with this.\" \n\nShe turned to me and asked, \"And what about you, Mr. Jones? Do you have anything to add?\"\n\n\"It's all on Shannon's list. The only thing I'd really like is to be within ten or fifteen minutes of my new office. The address is on the application form.\"\n\nShe glanced at the address, looked up at our preferred price range, and then raised an eyebrow and looked at me over her glasses. While she normally spoke in a rather refined manner, she was about as southern as they come so when she said, \"Right,\" stretching it out to practically three syllables and seemly topping it with a big pat of butter.\n\nShe focused on my wife as we were leaving. \"Now, honey, this first one...\"\n\nThe first one sucked, and the second wasn't much better. Personally I think Mrs. Carstairs staged it that way since she wanted to make us think we were making progress as the day went along. I later discovered that they'd been on the market the longest of those she planned to show us, so she was probably trying to drive up interest in them, too. \n\n\"Now this next one is a real gem,\" she said as she turned into a subdivision with a nice, landscaped entry sign. That raised my hopes after the first two dogs, but, considering she'd also complimented the others in different terms, not too much.\n\nShe stopped in front of a lovely, two-story brick home with a daylight basement in back. \"This one just went on the market yesterday. It's backed up against the wooded part of a city park, so you won't have any neighbors staring back at you in your bedroom window.\" I swear I think she winked at Shannon when she said it.\n\nThat was an excellent drawing point, but it was the lot itself rather than the house that really drew my attention. It was covered with a numerous towering oaks, a number of large maples, a few hickory trees, one black walnut tree, and several sweet gums that I could have done without. There were a few smaller types I didn't recognize, but there weren't any of the pines we'd been warned to avoid. \n\nI was surprised to find myself nodding in agreement when Mrs. Carstairs said, \"With all of the trees, you can see it's quite shady and in the summertime in the South, that can do wonders for one's attitude. Note the grass in the yard isn't bermuda like in most homes around here, either. Bermuda's a sun-loving grass, so this yard has Zoysia, which does really well in the shade. It's a nice, soft grass, too. You can run around barefoot on it in the shade and be the envy of all your neighbors!\"\n\nThinking about what the lady said, I recalled visits to my grandparents' home in northern Alabama when I was a kid. I loved visiting Grandma and Grandpa, but their house, an old plantation home, didn't have air conditioning until I was in high school. Before that, it had fans and shade trees that kept us reasonably cool, even in the heat of summer when we always visited. Between that and cold glasses of Grandma's sweet tea, my brother, my sister, and I always enjoyed our visits while Mom and Dad went on what we were to later learn was their so-called \"annual adult sanity vacation.\"\n\nInside the house, my wife loved it even more than I like the lot. She was getting exactly what she wanted, even if it was twice as far from my new office as I'd hoped. After a short discussion, we put in an offer that was accepted and early that summer we moved into our beautiful new home surrounded by trees. We packed the kids off to my parents for a week so we could enjoy our own adult sanity vacation. \n\nWe used our few days to unpack as many boxes as possible and, sometimes between boxes, to appropriately \"christen\" every room in the house. Some rooms got the treatment several times. However, I think my favorite memory of the week was one night as we were getting ready for bed. We turned off the light, raised the shades, and had a pile-driving, doggy-style session with Shannon looking out the back window over the forest in our back yard and beyond while gripping the window sill for dear life. It was our third or fourth time of that particular day so I had to really work long and hard for it. Shannon later told me it was one of the best sessions of her life, though she was a bit afraid I was slamming her so hard that she was going to go sailing out the window.\n\n*****\n\nOne doesn't give it much thought in late April when we first saw our new home or even in early June when we moved in, but when autumn arrives in the south, one who lives on a tree-covered lot quickly learns why autumn is called fall. Suddenly, I had a new, practically full-time job during the evenings and on weekends: gathering up leaves. \n\nLeaves in the south start to change colors sometime in mid-October and start coming down with a vengeance in late October or early November. Leaves don't do nice things to Zoysia grass if they're left there for any significant period, so they have to be gathered up regularly. Another problem is that leaves aren't very cooperative. Instead of falling off in short order like they did off the few trees we had in our yard in Iowa, leaves in the south seem to compete to see which can cling to the branch the longest. Therefore, gathering up leaves becomes a long-term challenge that often lasts into February or even March. \n\nWhile most of my neighbors with few trees had it relatively easy, my life became a living hell. I raked and raked and raked. I bought rakes for the children; they raked, too, but generally not all that effectively. Then, they'd jump in their piles and scatter them around almost as bad as it had been before they started. \n\nShannon, never exactly one to enjoy yard chores other than working with her flowers, would sometimes bring a lawn chair out to watch and laugh while we fought our non-stop battle with the leaves, but she would usually look at her watch and say, \"Kids, the cookies are ready. Come on inside!\" She'd take the kids inside for cookies and milk while I'd stay out to clean up the mess they'd made and continue the fight against the colorful interlopers alone. That got a little better in later years as they got older and the financial incentives offered by the Jones family management got better.\n\nWhen one has leaves, one quickly learns that the leaves themselves aren't the only enemy. They appear to have some sort of unholy alliance with that bane of suburbanites everywhere, the Homeowners' Association. We were barely two weeks into Deluge Season when I received the first warning from our neighborhood's HOA.\n\nDear Mr. and Mrs. Jones:\n\nIt has come to our attention that there are leaves on your lawn. According to the covenants of our association, leaves must be removed promptly...\n\nMiss Arabella Bustamonte, the lady in charge of our HOA (who was commonly known as Miz Airhead Busybody or even more colorful monikers by her subjects), didn't seem to understand that the leaves can be collected one minute and be replaced by the next batch falling five minutes later. I sent in a dutiful response, explaining the situation, but still received several more letters on our repeated violations as fall turned to winter and winter crept toward spring. Each was answered in turn, though each response was shorter and more curt than the one before. I don't remember the exact wording but the last one was something like\n\nMiz Bitchybody,\n\nI've sent off 115 bags of leaves so far this fall and those bastards are still falling. I deal with them as soon as possible when they fall. If you want to help, instead of wasting all that hot air sending me your airheaded and seemingly incessant violation notices, why don't you come huff and puff and blow the rest off the trees. If not, go blow yourself.\n\nOf course, Shannon shook her head sadly and made me rewrite it before it went in the envelope.\n\nThe leaves' other evil ally is local governments that regulate the hauling and disposal of yard waste. Unfortunately, we have one of those. Our suburb is one of those little cities that ring the metropolis. They provide trash and yard waste services for a monthly fee, but they're very strict on how much they will collect. If you exceed their guidelines, they don't pick up the excess. If one tries to exceed their guidelines too many times, they don't pick up the excess and they hit the errant homeowner with a fine. Therefore, some people with king-size leaf problems are forced to bring in outside assistance for large additional fees or go the composting route.\n\nSince we didn't have the money for outside help, we went the composting route. Composting is good for the environment and for the yard, so I established a heap soon after the first bags were collected. Unfortunately, our little city decided to establish a composting center. Wanting to maximize the profit for their operation, our city council passed a new protective ordnance limiting the size and number of compost heaps allowed on residential properties. By doing so, they forced most homeowners to send the majority of their leaves to the city's composting center. The problem is that they are also in charge of the yard waste collection service, so, as I mentioned earlier, they set those strict limits on the number of bags that could be collected each pickup. Shannon and I were limited to a maximum of twelve bags each week. \n\nTherefore, I quickly learned to maximize the number of leaves I could get in a bag and before too long I got pretty good at estimating how many leaves I could fit in a bag. It took a while but I eventually discovered that I could get yard waste bags somewhat cheaper in quantity at the wholesale club and the cashier wouldn't look at me like I was crazy for purchasing so many at once. \n\nThat first season of leaf hell continued until the last leaf fell and was collected and I had the next nine months to plan my campaign for the next fall and winter.\n\n*****\n\nWhen that next fall arrived, I was ready. The Zwirco Industries 1000 Leaf Boss was mounted on my back, earplugs were in, and electronic noise cancelling headphones were on my ears. With a big gas engine, the Boss could blow leaves like crazy and made the collection process somewhat easier, but it sounded like a turboprop plane engine and the little buggers still had to be bagged. I spent a lot of time bagging.\n\nHalfway through the season, I stopped in at the local big box home supply store and bought the Zwirco 1201 Leaf Vac to make bagging easier. It sounded like a herd of about a thousand munching brontosauruses (okay, Apatosauruses for any of you dinosaur purists) and it seemed to shit finely ground leaves out the back into the bags almost as effectively as the ancient herd. However, while I loved the Boss, the Vac didn't live up to its promise, breaking just after its warranty expired the next season. I purchased the 1202 model when the first one broke, but the next year, it broke just like the first. I didn't bother replacing that one.\n\nWhen the Boss finally blew its finale after five seasons, I went with the walk-behind Zwirco 2001 Leaf Annihilator. Based on the experiences with the Vac a few years earlier, I never got the optional vacuum feature on it. \n\nWith the right equipment, my annual battle with my small but numerous antagonists and Miz Bitchybody continued unabated.\n\n*****\n\nIt was about the tenth or eleventh leaf season we'd been in the home. Both of the kids were now in college and my college football team was attempting to set a new record for loses in a season, so my focus was on getting my equipment ready to deal with the little bastards. The self-propelled Zwirco Model 3003 Leaf Obliterator, opening its first season on Team Jones, was ready, though, once again, I'd skipped the optional vacuum and mulch feature. Shannon said bagging was good exercise for me, too.\n\nIt was early November and abnormally hot. The leaves had finally started to fall, so on Saturday afternoon, I used the remote control to steer the Obliterator under battery power out of the storage shed to its starting position out along the road. We hadn't even made it out there when I discovered how hot it really was. A quick check of the weather app on my new cell phone revealed it was 84 degrees with a high of 87 expected. At least I'd be working in some shade in a little while. \n\nWith my faceplate and ear protection in place and wearing blue jeans, long sleeves, and cotton gloves to protect my skin, I hit the electronic ignition on the Obliterator. The roar was almost as loud as a jet engine, even with the hearing protection. Despite the hydraulic shock absorbers on the machine, the ground practically shook, making me think of the Hitachi vibrator I'd gotten for Shannon a few years earlier. I was practically tingling as I waved off a few concerned neighbors who'd come out of their homes to make sure World War III hadn't just broken out on our street. Satisfied, everyone went back inside to continue watching the rare, regular season matchup between Bama and the Dawgs. With everything set, I engaged the blower. \n\nWhile I'd thought it was loud before, now it was ridiculous. There are jet fighters on afterburner that aren't as noisy. More neighbors came running back out to check what was happening, but quickly ran back inside. I think something exciting happened in the game so our usually quiet street was deserted once more. \n\nStill, it wasn't the noise that was concerning me right then. The Obliterator has a wide chassis and I quickly saw why. With the blower fan on maximum, the poor device appeared to be practically straining to keep it from blowing itself over and tumbling away. I quickly lowered the level to prevent that from happening and to gain better control of the blowing operation while also reducing its infernal noise. In the little area where I'd started, the leaves had blown all the way across the yard against the shrubs, with some flying over into the windows themselves. If i'd been just a little closer, an acorn caught in the Obliterator's fury would probably have broken a window!\n\nOne round around the yard with judicious use of the Obliterator's finely tuned blower and I had a mountain of leaves collected in the middle of the front island. \n\n\"You'll do, Obliterator. You'll definitely do,\" I told the machine as I gave it a love pat and lowered it to an idle before killing the engine. \n\nWith my ZI 42-tine leaf rake and my collection of bags in hand, I attacked that mound, essentially shoving those bastards in the yard waste bag. I'd just finished the first bag when Shannon came out. \n\nShannon is a gorgeous woman, 5'-6\", green-eyed, and athletic, with a body to die for. She's a near perfect 36-24-36, and runs and exercises regularly to stay that way. As a fourth generation Irish-American with cousins still in the Olde Country, she's an honest-to-God redhead, too (she always leaves a little strip to prove it when she waxes). With the sun and afternoon heat, she was walking barefoot on the Zoysia, wearing Soffe shorts, an athletic tank top, and a sun visor. In her hands were her gardening mat and bucket of gardening tools.\n\n\"Chris, are you done with that monstrosity?\" she called before venturing beyond the the corner of the garage. \"I thought the house was falling down!\"\n\nI nodded and she practically skipped forward to me, craning her neck to give me access to peck her lips but little more. Even with that, I detected a taste of beer, which I confirmed seconds later when I saw the open bottle of Blue Moon in her gardening bucket. \n\nShe went over and looked at her patch of fall flowers and then frowned at me. \"It's a wonder that beast didn't pull them up by the roots and toss them over the house into the back yard.\"\n\n\"Hey! I saw them,\" I said, \"and I used Zwirco's 'trademarked precision blower control' to work around them with no damage at all.\"\n\nShe laughed, since my indulgence in high-end leaf equipment was a frequent source of teasing from both sides. Shannon put down her mat next to the flower bed and started working.\n\nI'd filled up a couple of bags before I peeked over to check on her progress. She was on her on her hands and knees working with her flowers. What surprised me, though, was that her head was facing directly toward me and gravity was putting on a show.\n\nHer beautiful breasts were hanging down together, creating some impressive cleavage. She always wears an athletic bra when dressed like this to hold everything safe and securely in place, so I was quite surprised at its relative ineffectiveness until I realized with some judicious observation that, instead of the usual bra, she was wearing my favorite of her string bikinis. It's light blue overall but it actually fades from white to light blue to darker blue as one ventures from the top to the bottom of the triangles and from the waistline to heaven on the bikini bottom. It was a tiny little thing, purchased for the hot tub on an adult sanity trip to a cabin in the mountains, and it didn't cover all that much under ideal conditions.\n\nMy understanding is that string bikini tops are designed to provide a bit of cover while holding things up that nature is trying to pull down while also exciting the menfolk. Such bikinis generally work fairly well when the wearer is standing up, even for women with larger attributes. Depending on the size of the breasts they're trying to cover, they work somewhat well when the woman is on her back. They often become less effective when the woman turns over on her stomach, and don't do a thing other than excite the guys when the woman's on her hands and knees or when she's hanging upside down on a tree limb or trapeze-type bar. Don't ask me how I know that last one.\n\nNow Shannon's breasts are high and pert for a woman in her mid-forties, but when she got down on her hands and knees, her boobs shifted a bit higher, relatively speaking, than normal, and were sticking out like those incredible bullet bras women in Hollywood wore in the 1950s. With this movement and those tiny triangles, well, let's just say that a bit of shifting occurred inside her shirt even as another shift started taking place in my pants. Maybe I was dreaming but I swear I saw the tops of her areolas and then one of her nipples slipped free of the bikini, just below the edge of the neckline of her shirt. I was greatly enjoying the show as she swayed a bit to pull weeds or aerate and my penis was getting harder by the second. It was all I could do to look away and appear to be doing something important when she glanced up to check my progress.\n\nI leaned down with my rake to scoop up a batch of leaves but discovered that it's not exactly easy to do when one's penis is fully erect and one's jeans are a tad too tight. Still, with a bit of a turn and some bend to my legs, I gathered up a few leaves and kept Shannon, and hopefully any neighbors coming out for a break from the game, from seeing the bulge in my pants. Knowing what would happen if I looked back in her direction, I was careful to avoid looking her way for a while, allowing things to cool off a bit down under even as the afternoon heat continued to build. By now, I was sweating for more than one reason. ",
        "Several minutes passed as I bagged looking one way and she gardened in her direction. While I was no longer standing at full attention, I wasn't exactly calm either, since I could get the thought of taking a peek out of my mind. Finally, I scrunched my eyes up tight for a few seconds as I wiped the sweat from my brow, said, \"Screw it,\" under my breath, and moved around as calmly as I could to sneak another peek.\n\nShannon had been working while I'd been trying to work, so when I moved around to get another look at her goodies, I was surprised to see that she was sweating as bad as I was but, more importantly, she'd rotated 180 degrees from a few minutes before. Now, instead of looking down her shirt, I was looking directly at her beautiful backside clad in those short shorts. They had ridden up into her crack and, with her sweat, were plastered up so tight against her nether region that I was sure she wasn't wearing panties. \n\nI suspect that there may have been cases where Army Rangers and Navy Seals took longer to spring to attention than I did at that particular moment. As a happy and very lucky man to be treated to such a show, a little moan involuntarily slipped out.\n\nShannon's head shot back toward me to catch me half bent over with my glove off and a finger flying into my mouth. \"Are you okay, honey?\" she asked sweetly.\n\n\"Uh, yeah. Something poked me,\" I replied unsteadily, hoping she'd think it was as sharp leaf or a splinter from a stick rather than me poking myself. \n\n\"Need me to take a look at it?\" she asked. \n\nI pretended to suck the splinter out and then gave my hand a couple of shakes to show that it was all better before putting the cotton glove back on. \"Nah, I'm good,\" I said, hoping and praying that she'd resume her work and I could continue enjoying her show. \n\nUnfortunately, she stood up, dropping her tools in the bucket, and then bent down to roll up her little mat. My viewing angle wasn't optimal, but I was still quite impressed for those couple of seconds and, as always, considered myself the luckiest man alive. \n\n\"I'm done,\" she said, before coming over to give me a kiss. We were both sweaty so I put my hands on her hips and left a little space between us. I leaned my head in a little to connect with her, and was greeted by the flavor of Blue Moon on her lips and then her tongue as it probed into my mouth. I moaned softly as the kiss continued but my eyes opened wide a few seconds later when, as she closed the gap between us, her hand reached down and rubbed my penis through my pants. She ended the kiss and then gave me another peck as she winked at me before turning and heading into the house.\n\nI'd learned long ago that I couldn't pull much over on my wife and once again she'd proved it. She'd known all along! I watched as she went, her butt having a bit more sway than normal as she strutted away, proud of her little show. She stopped at the corner of the garage and blew a little kiss over her shoulder before disappearing around it.\n\nI gathered leaves for the next little while, dreaming of how I hoped to fuck Shannon twelve ways from Sunday that night, all the while knowing that the actual idiom was a paltry six ways, which, in my eyes, wasn't nearly enough. I'd never actually had an issue with it, but I'd gotten my doctor at my last physical to prescribe some of the little blue pills for special occasions. This, I decided, would be one of those nights.\n\nI'd gathered up six bags of leaves and still had a huge pile left. Looking at it critically, I felt that would be just about right so I could get Miz Bitchybody off my back without getting in trouble with the city for trying to send off more bags than they allowed. \n\nI was reaching for another bag when Shannon walked back out front carrying a lawn chair and two ice-cold bottles of Blue Moon. She was giving me a cute little smile when she took a drink from one of the bottles. She licked the rim suggestively and then handed it to me as I started to wonder if I was even going to want to take that blue pill as backup. She was looking right at my crotch, so I didn't even try to hide it this time. I took a swallow, too, and moved in for a kiss, but she waved me off. I was too sweaty considering it looked like she'd just taken a shower and put on another outfit almost exactly like the one before. \n\nThe shadow was starting to creep across the yard, so she set the lawn chair up some distance away so she'd have sun for a little while longer with her back to the street. She sat down on the edge of the seat, pulled off her tank top to reveal a pink bikini almost as small as the first one. Then she leaned back, lacing her hands behind her head and spreading her straight legs as if trying to get as much sun as she could. Again, my dick was straining in salute as she stared at me and licked her lips.\n\n\"Honey, you've got an awful big, ahem, pile of leaves there. Do you have enough bags left for them to take them all this week?\" She shifted her arms behind her head a bit as she asked, making her bikini top and my jeans work to contain their respective charges.\n\nI bit back the wolf-whistle I'd started to make, and took another look at my pile. It would take right around six bags, so I nodded. \"We've got plenty of capacity left. It won't be a problem.\"\n\n\"Really?\" she asked. \"How many bags do you think it will take?\"\n\nMy first reaction was to say right at six, but I wanted to impress my sweetie so I thought about it for a few moments before I replied. \"Ahem, I say four or maybe five bags.\"\n\n\"Bullshit!\" she cried. The beer had loosened her tongue and she was in a good mood. \"Five maybe, but if you can do that in four bags...\" \n\nShe glanced around to make sure no one was nearby, before continuing with a whisper, \"I'll give you a real fucking blowjob!\"\n\nTo fully understand the miracle that Shannon was offering, one must know that she became quite skilled at giving blowjobs to her boyfriends when she was in high school to avoid going further. By doing such, she was able to maintain her virginity until she was a sophomore in college, but that was also when her attitude about blowjobs changed. \n\nHer boyfriend, to whom she'd lost her virginity, was a jackass, first-class, so once he got what he wanted from her, he wanted more and more and wanted it all of the time. She told me about it when we started to get serious, in case it was a deal-breaker to me. She refused to give me the full details or the jackass' name, but the gist was that in the midst of one particular blowjob, he suddenly grabbed her hair and took control, forcing himself repeatedly into her mouth and throat.\n\n\"God, Chris! He was facefucking me! Hard! It hurt like hell, made it difficult for me to breath, and was even more degrading than when he'd deliberately spewed in my face the time before. He didn't care when he saw it was hurting me; he kept going even harder. I wouldn't have done it if I'd been thinking clearly because he could have hurt me really badly, but I squeezed and scratched his balls so hard he screamed and pulled out without coming. I gathered up my stuff while he was still curled up in a ball on the bed, broke up with him, and stomped out. I never talked to him again, and I haven't done a real blowjob since then. If that's important to you, we should probably break up now before we get even more serious.\"\n\n\"Shannon, I'm so sorry for what he did to you and that he ruined what can be a fun aspect of sex for you.\" I went on to tell her that what she didn't understand about me was that I was already head over heels in love with her, so a blowjobless future wasn't nearly as important as a future without her. She told me she loved me, too; we got engaged about a month after that, and married just less than a year later.\n\nAs time passed, we built up a trust between us as successful married couples do, so one year on my birthday, she gave me a little box as my present. I opened it to find a little card with a pair of lips (hers, it turned out, made with red lipstick on the blank card), and an inscription inside.\n\nHappy Birthday, my Love!\n\nThis card entitles you to one (1) \"Shannon Special\" Blowjob at the time of your choosing. \n\nI love you forever,\n\nShannon\n\nI couldn't believe it but discovered the meaning of Shannon Special a few minutes later when she pointed me to the back of the card. Basically, she would do the deed but she had to be in total control. If I did anything to force her to do anything, the session would be over, permanently. When I was close, she'd finish me off with one of her excellent hand-jobs.\"\n\nOf course, since it was my birthday, I redeemed that card in a heartbeat, and had a wonderful time. I let her set the pace and do her thing while ever so gently massaging whatever I could reach. When I was close, I told her and she started to slide up and down me at just the right pace, but I put a quick end to that, having her lie back so I could go down on her and do for her as much or more than she'd done for me. After she'd had her first orgasm, I moved up and slid into her, making love to her for all I was worth. \n\nAfter that, she would do the Shannon Special once or sometimes twice a year. I never let her finish by hand since I'd much rather share the fun and then come inside of her wonderful pussy. \n\nTherefore, on that hot fall day when she promised a real fucking blowjob, I drew back and had to ask exactly what she meant.\n\n\"A real one, Chris. No holds barred. All the way, if that's what you want; in my mouth\u2014I'll swallow\u2014on my boobs, even in my face. Just don't hurt me, okay?\"\n\n\"I'd never, ever hurt you, honey,\" I told her, \"and I'll never degrade you either,\" effectively taking the facial off the table. \"But other than that, deal!\" I said with a grin.\n\nShe was grinning, too, after taking another swig of her beer. \"Now, there's one other rule.\"\n\n\"What do you mean?\"\n\n\"This can't be an all-day event. You've got 30 minutes or the deal's off.\"\n\nI looked at the pile and shook my head. \"Nope. As much as I hate it, I guess we'll call it now. I'll need at least an hour.\" \n\nAnd that's how we settled on forty-five minutes. \n\n*****\n\nNeeding six bags but only allowed four, my first step was to double-bag for strength. \n\nShannon immediately called foul.\n\n\"That's eight bags!\"\n\n\"But with the haul-off volume of only four,\" I countered.\n\nWe debated it for about a minute before she took another drink of her beer, looked at the timer she'd set on her cell phone, smiled, and said, \"Okay.\"\n\nShit! She was stalling and I fell for it. Got to work faster, I thought to myself.\n\nWith four bags set up, in a row, I caught a bunch of leaves between my hand and the face of the rake in the other hand. Doing it this way, I put a big rakeful of leaves in each bag. That first one is always hardest, since the bag seems to want to fall over, close up on itself, or otherwise defeat the poor leaf gatherer. Once some go in each bag, they generally stay open better. With them being double-bagged, it wasn't quite as bad as usual with only a few leaves lost, so moments later, I had four bags that would stay open for the rest of the effort. \n\nLoose leaves take up a lot space, so the goal is to put them in the bags with the least amount of unfilled space possible. Therefore, I quickly filled the first bag to the top and moved to the second. Within a minute or two, I had four bags full of leaves, but a huge pile left and Shannon sitting back in her seat smirking. \n\nI shook each bag in turn and the leaves compressed themselves a bit, getting rid of some of the empty spaces. I quickly scooped up more and filled the bags back to the top. I'd made a little dent in the pile, but there were still a lot left between me and my blowjob. \n\nShannon started stretching at this point, and that little pink bikini was being worked for all its worth to keep her goodies contained. She smiled at me as I took a few moments to stare before I realized that fucking timer she'd set was still ticking. I blew her a kiss and started stuffing, my penis so hard it was starting to hurt from my excitement and all the bending over I was subjecting it to.\n\nOne can pack leaves a lot tighter by shoving them down the sides of the bag to fill in all the spaces that often exist between the leaves and side of the bag. I started pushing leaves down into those spaces as fast as I could and pretty soon the bottom of the bag was stuffed fuller than a Thanksgiving turkey. I filled that bag back up to the top to let it start to settle on its own while I moved to the next bag and started stuffing on it. \n\nNow I was moving pretty fast so it wasn't too long before I started breathing hard. I was shoving leaves down the side of that bag as quickly as I could when I realized not all of the heavy breathing was mine. \n\nLooking over at Shannon, the shade had moved to within a foot or so of the chair, so she'd pulled her legs up as tight as possible and spread them out to the sides to keep to keep them in the sun for another minute or two. However, I suspected her breathing issue was due to the hand she had positioned on the front of those crepe-paper-thin Soffe shorts. Every time I stuffed the leaves, she was doing some similar stuffing-like movements of her own right over her mound. My eyes widened as I watched, but only for a few seconds since this time I realized that infernal timer was still counting down. \n\nWith all the spaces filled in the bottom, I refilled the bags again and started the process over, but I realized I needed more. \"Be right back,\" I told her before I ran into the garage. \n\nI brought back a garden rake, a hoe, and my son's baseball bat. The bat worked best, and pretty soon I was ramming it up and down in the bag to tamp the leaves down and compact them, much like I'd seen my grandmother do with her old butter churn. I was getting rid of every last bit of empty space in the bag, and I topped off each bag in turn as I finished it. \n\nThe pile was a lot smaller now, so I went at the bags again with that bat, ramming it up and down as fast as I could to get rid of the spaces in the top third of the bag. My breath was fast and, I discovered, so was Shannon's. The narrow strip of her Soffe shorts was pushed over to the left revealing, once again, a stark lack of underwear, but this time, two fingers were sliding in and out her beautiful pussy in rhythm with my baseball bat compactor. I speeded up as I watched her doing it, and was rewarded as she sped up to match. Her labia lips were things of wonder as they moved in and stretched out as fast as her hand could go.\n\nIt was such a sight I couldn't take my eyes off her fingers performing their delightful deed, but I knew that only minutes remained so I had to match her and pull a dirty trick of my own. \n\n\"Shannon! The game must be over. Mr. Delacroix's walking this way!\"\n\nShe pulled her hand out and snapped her legs shut so fast that it was all she could do to keep her chair from turning over. Laughing, I topped the bags off again and pushed them down, packing as tight as I could before compacting once more. There were only a few rakefuls of leaves remaining. \n\nThe bags were basically full at this point. Beyond full, actually, since I'd stuffed them so tight, but I could mound them up a little and still get them out to the road. I was on the next to last one when the buzzer went off.\n\nShannon started laughing, but my face fell. I'd come so close to the promised land only to fail. I scooped up the last of the leaves and mounded them up on the bag. The pile was gone, split up into four severely over-stuffed bags, only moments too late.\n\nDisappointment weighed heavily on me as I loaded two bags at a time into the lawn cart and hauled them out by the road for pickup on Monday. Shannon sat and watched, still smiling, as I hauled the bags away, even my four double-bagged behemoths. Ten bags were lined up along the curb.\n\nWhen that was done, I gathered up all my leaf-fighting equipment and started to take it back to the garage or the shed, as appropriate. It took a second trip to steer the Obliterator under battery power into the shed, where I started putting everything away. \n\nShannon followed me into the shed, closing the door behind her as she did. \"Chris,\" she whispered in my ear, \"that was the most fun I've had in ages. The timer was just to see how hard you'd work for it.\" \n\nShe was standing behind me so she put her arms around me and then slid her hand down into my pants similar to how I'd been stuffing leaves. I breathed in sharply as she took my penis in hand and gave it a gentle massage before letting go and sliding her hand back out. She started unbuckling my belt and moments later, she turned me around toward her, gave me a couple licks and swirls, and then went down on me like there was no tomorrow.\n\nOh, it felt so good! This wasn't going to take long at all!\n\nIt didn't. I think it lasted for all of thirty seconds before she stopped. I looked at her, disappointment again filling my eyes, causing her to laugh again. \n\n\"That was a preview, dummy. You don't think I'm going to give you real blowjob in a storage shed do you?\"\n\n*****\n\nA little later after showering together, we were in the comforts of our own room and Shannon was making good on her promise. She didn't try to go very deep, but she did wonders on the glans and upper half and her fingers on the bottom half and playing with my balls was getting me closer by the second. All the while, she was looking into my eyes and showing me that she loved me. I was very careful to respond a little and let her know how good it was feeling without going too far or doing anything that might make her uncomfortable.\n\nShe pulled off for a moment while continuing to massage. \"Sweetheart? Where do you want to finish? In my mouth? On my boobs? In my face?\" she asked, giving me the three options she'd mentioned earlier. She took me back in her mouth and started working me toward my ending while I thought about it.\n\nIt didn't take long. \"Shannon, this is wonderful and I really appreciate it, Honey, but I love you and want to be in you so we can both enjoy it together.\" I said. \n\nShe had a big smile when she paused, looking up at me. \"I knew that would be your choice, Chris! I love you so much! We'll do this again soon.\"\n\nHer lips connected with mine as she pushed me back and settled down on me. Still she did most of the work for a while while I kissed her nipples and massaged her breasts until I pulled her down against me, rolled us over as gracefully as I could without hurting her legs, and then proceeded to bang the hell out of her until we came together. \n\nI gladly returned the oral attention for her in spades and we made love three more times that night before we were both exhausted. I was completely out of juice on the last one and couldn't fire my load but that didn't stop me from giving her one last orgasm of the evening. When I was done, I realized that the little blue pill had never left the bottle on my nightstand.\n\nAs we lay snuggled together in bed in a state of near perfect bliss, she asked me, \"Chris, what do you have planned for tomorrow after church?\"\n\nI smiled. \"Oh, I was going to take you to lunch and then ask you if you were interested in helping me gather two more big bags of leaves.\"\n\nThe End"
    ],
    "authorname": "SouthernCrossfire",
    "tags": [
        "humor",
        "husband and wife",
        "outdoors",
        "race against time",
        "tempting offer",
        "true love",
        "redhead"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/shannons-offer"
}