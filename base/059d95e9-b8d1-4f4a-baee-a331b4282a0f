{
    "title": "The Secretary Who had to Pee Ch. 05",
    "pages": [
        "My interactions with Katherine Bond would surely have reached the inevitable climax had it not been for the worst late-spring storm to hit the south coast of Britain in decades.\n\nI was getting ready for bed when the call came in from the night watchman at the Sewage Plant that the effluent was racing into the site, fueled by heavy rain. On the ocean side of the site, the tide, driven by winds gusting in excess of sixty miles per hour, was thrusting twenty-five-foot high waves against the walls of the holding tanks. The tanks, constructed in Victorian times and rarely renovated, would give way and release millions of gallons of untreated sewage into the harbour.\n\nI re-dressed quickly, remembering to throw waterproof gear into the back of the car, and headed for the Plant. On the way, I called Fred Lammas who was on the night shift this week. I was pleasantly surprised to learn that he had anticipated an emergency and had already summoned the rest of the work force. I toyed with the idea of calling Kate, but that was purely selfishness on my part because I wanted her to be there with me. Site maintenance was hardly in her job description, and besides, there was nothing useful she could do. I decided to let her sleep, if she could sleep through the torrential rain and lightning now ripping the night apart.\n\nAnxious faces greeted me as I entered through the main gates. Fred Lammas, the employee who had experienced the inside of a holding tank first hand, led me to look at the sewage intake. I caught my breath at the site of the Amazonian torrent. The muddy surface of the effluent was only eight feet below the top of the culvert that fed it into the various holding tanks to await commutation and subsequent filtration, instead of the usual twenty feet. If the storm did not ease up in the next few hours, the site would flood.\n\n\"That ain't the worst of it,\" Lammas informed me, raising his voice to be heard over the howling gale. \"This way.\"\n\nI followed him up the ladder of the closest holding tank, then following him along the gantry, holding onto the rail for dear life lest I slip and fall into the black waters beneath me. The western-most tank was still a hundred yards away, but even from here I could see the explosions of sea spray as the waves rammed against the tank walls, the water droplets sparkling in the arc lights used to illuminate the site.\n\n\"Oh my God,\" I muttered, my words swept away on the wind. Lammas was right: The old tank wasn't going to take much more of this treatment. It was the day I warned the Divisional Director about time and time again, and yet every year he still cut my budget, preventing all but the most basic remedial work to be undertaken. \"We reap what we sow,\" I thought.\n\n\"What do you want me to do, chief?\" Lammas asked.\n\n\"Nothing,\" I shouted back. \"I'm not sending anyone in there to do anything. The thing will just have to run its course, and we'll hope for the best.\"\n\nWhen he didn't respond, I glanced over at him and saw that his head was turned. His face, partially visible beneath his sou'wester, registered surprise. I turned to see Kate standing a few yards away on the gantry, dressed in a plastic rain coat with a hood pulled up and secured under her chin. She unshouldered a bag from her right shoulder.\n\n\"I brought some flasks of tea and coffee,\" she explained as she set the bag down and stooped over it.\n\n\"Bless you, Kate,\" I said as I stooped before her. \"Not here. There's nothing we can do out here. Let's get into the office and I'll see if I raise anyone at HQ to let them know what's going on.\"\n\nWe moved back across the plant, heads bowed low against the driving rain. I was soaked to the skin, and Kate clothing wasn't as sturdy as mine. I used the torch to direct my key into the lock, but when I stepped into the office and tried the lights, nothing happened. \"Damn,\" I sighed. \"The power's out.\"\n\n\"Actually, I think the power is out for the whole area,\" Kate pointed out. \"Everything was black as I drove down.\"\n\n\"Ah, right,\" I nodded. \"Things were still lit when I came down. Mind you, the wiring on the entire site was a safety inspector's worst nightmare, so we won't really know unless we check it. The problem could be local.\"\n\n\"Let me take the torch and I'll find the fuse boxes,\" Kate volunteered, her voice a little tense. In fact, she sounded worried, hardly surprising given the way the wind was rocking the entire portacabin. This, coupled with the wailing of power cables and phone lines as the wind plucked at them so that they sounded like demented seagulls, was enough to unsettle anyone. \"Besides,\" Kate added, \"I wouldn't mind using the loo.\"\n\nI directed the beam of the torch down at her legs, quite without thinking, and was just in time to see her right knee bent, her foot off the floor. She was actually pee dancing.\n\n\"Are you very desperate?\" I wanted to know.\n\n\"My abdomen's as tight as a drum,\" she informed me, doubtless choosing her words with care because she knew how much they would affect me.\n\nI was about to offer to feel it when her phone rang. It surprised me, until I remembered that phones always operate on an external power supply. Kate took up the receiver and said, \"Downland Water Authority - Southbrook Regional Office.\"\n\nShe listened for a few seconds. The corners of her lips turn down, and I knew it was not good news. \"Yes, sir,\" she said. In the shadowy area on the periphery of the torch beam, I saw her right leg cross in front of her left as she spoke these words. She held out the handset to me and whispered, \"Divisional Director Thompson.\"\n\nI rolled my eyes and took the proffered handset. Forcing my attention away from Kate's crossed legs, I said, \"Good evening, sir. I'm afraid the situation here is--.\" That was a far as I got.\n\n\"I've just had Damien Withers on the phone,\" Thompson cut in. \"Have you any idea who that is, Denes?\"\n\n\"Um, yes, he's one of numerous wealthy land owner hereabouts.\"\n\n\"Not to mention a wealthy yacht owner,\" Thompson said. \"He has just seen turds floating past his vessel. I'm sure you can imagine what he had to say about the efficaciousness of this authority.\"\n\n\"I'm sorry about that sir, but the fact is we-\"\n\n\"What the hell is going on down there?\" Thompson demanded sharply.\n\nAs I described the state of play with the most remote holding tank, Thompson punctuated my sentences with irritated sighs. \"It's highly likely that the tank wall will rupture if the storm doesn't ease off in the next few hours.\"\n\n\"How the hell did you let the plant get into such an advanced state of deterioration? I'm going to have every yacht owner in the entire basin area chewing off my bollocks before morning!\"\n\nOh yes, I thought, dozens of affluent yacht owners whose vessels would soon be floating in effluent. The poetry of it appealed to me. I had to concede that Thompson's interpretation was correct. After whining to him and listening to platitudes for a while -- a very little while -- they would start calling their local M.P.s, and in no time at all the Authority's budget would be under threat.\n\nMy own inclination would be to tell the arrogant bastards to stop crapping in their toilets, or failing that, donate some of their obscene wealth to cover the costs of renovating the local sewage works so that their copious output of crap could be properly sanitized. They, in turn, would then gripe about all the taxes they paid to support public amenities, unaware that these funds rarely trickled down to where they would actually do some good.\n\n\"This is exactly what I've been warning you about,\" I said, abandoning my half-hearted attempt at brown-nosing. \"Until you see fit to allocate me a realistic budget to carry out repairs and restore a sewage treatment plant that hasn't seen significant modernized since Victoria was on the throne, accidents will happen.\"\n\n\"Don't adopt that supercilious tone with me, Denes,\" Thompson cautioned. \"I've enough on my plate without having to deal with a parochial uprising.\n\n\"I hope you didn't accuse Mr. Withers of being parochial,\"\n\n\"Your problem, Denes, is that you seem to imagine your needs are the only priority this Division has.\"\n\n\"As of tonight, sir, I should think that were true.\"\n\nThompson fell silent for a few moments. As the silence lengthened, I let my attention stray back to Kate. Even without the torch light, she was intermittently visible each time lightning flashed outside. It caught her in an odd jiggling motion as if she were tapping a heel on the carpet. I listened, and could hear a very faint tapping sound. She had to be close to bursting. I hoped she would stay put until I'd finished with Thompson, and not head off to the main building and its solitary, primitive lavatory.\n\nAt last, Thompson resumed. \"Alright. You'd better come down to Head Office tomorrow. I'll convene the appropriations committee and see if we can address the situation quickly enough to minimize the damage. \"\n\nWhy was it that the shit had to always hit the fan before Thompson agreed to take action on anything, I wondered. He was certainly past his prime, and in my view the job required younger blood, someone with the enthusiasm to see things through. Even no, he was unlikely to allocate anything more than a token budget to cope with this crisis.\n\n\"Thank you, sir,\" I said, trying to keep the skepticism from my voice. \"Shall I be there first thing?\"\n\n\"I'll advise you of the meeting time when I know myself,\" Thompson said before hanging up unceremoniously.\n\nI smiled, pleased that the old fart had shit on his face, and that I'd managed to piss him off. If at all possible, I would make sure that some of that shit stuck.\n\nI replaced the handset and looked at Kate. \"Are you up to a trip to Head Office in the morning?\"\n\nShe nodded with a distracted air, now walking on the spot. \"Of course,\" she followed up in a voice shaking with strain. \"What time are we starting out?\"\n\n\"No commitment from the old man yet, but be ready to get going early. It's a two-hour drive, more during the main commuter time, so let's aim to start around seven.\"\n\n\"Okay,\" she agreed, then blew out a breath that ended with a soft grunt in her throat.\n\n\"You sound like you're on the verge of wetting yourself,\" I told her.\n\n\"That's because I am,\" she admitted. \"Now, tea or coffee?\"\n\n\"Tea,' I said. \"You have some too.\"\n\n\"I can't.\"\n\n\"I insist. Thompson said that if you wanted to keep your job, you'd better do as you are told, and we can't argue with the Divisional Director, now can we?\"\n\nKate managed a wan smile which looked a little ghastly in the torchlight. Her features were tense, her brow furrowed with lines of concentration. \"I suppose not,\" she said, and began unscrewing the flask containing the tea.\n\nWhen she had poured tea into our office mugs and topped them off with a little milk, she handed one to me and sipped at the other while keeping her free arm folded across her stomach. As I drank, I watched her right knee come up for a moment, then she straightened her leg and raised the left. Her muscles were not going to help her for much longer.\n\n\"Should I book us accommodation in Bexhill?\" she asked, her voice even more tremulous and strained than before.\n\n\"Um, yes, that would be wise, just in case things really drag on.\"\n\n\"Okay,\" she said, and took another sip of tea. As she swallowed, her body spasmed. \"Oh my God. I can't wait any longer. I have to go to the loo.\"\n\nShe set the mug down on her desk and turned towards the door. I followed suit and hurried after her. \"Kate,\" I said, reaching the door just ahead of her and blocking her way.\n\n\"Oh please, I'm absolutely bursting. If you delay me, I'll wet myself.\"\n\n\"But you're already wet,' I pointed out. \"Soaked to the skin.\"\n\nShe swallowed hard, blowing out a series of short, sharp breaths as if she were going into labour. \"I suppose is doesn't matter then.\"\n\nStruck by inspiration, I said, \"Take off your coat.\"\n\n\"What?\"\n\nSuiting my own actions to this suggestion, I peeled off my waterproof gear. The lightning illuminated Kate's features for a moment, allowing me to see the frown lines on her brow. \"Come on,\" I urged.\n\nShe sighed, then sucked air back into her lungs through clenched teeth, shifting her legs with a jerk. She unzipped her plastic mac and awkwardly wriggled her arms from the sleeves. As soon as she was free of the coat, I threw open the door and promptly pulled her outside.\n\nShe gasped as the cold rain drenched her blouse in a matter of seconds. The lapels of her white shirt flapped as frenetically as bat's wings in the breathtaking wind. We both blinked rapidly as rain streamed into our eyes. Grinning like an idiot, I grabbed hold of Kate, encircled her slim waist with both arms, and pulled her close. The kiss that followed banished the rain and wind from my consciousness. I was only aware of Kate's mouth against mine; the smell of her skin directly beneath my nose; the feel of her breasts compressed against my chest; the pressure of my erection against her firm abdomen.\n\nHer body relaxed for a few seconds, then suddenly tensed. She felt rather than heard the sound of straining in her throat, but I did not relax my hold on her. She fidgeted in my arms as the kiss continued, until finally her right foot came off the ground as she bent her knee, her inner thigh rubbing against the outer part of my leg. She moaned again, and this time I did hear it. Unable to resist the urge to squeeze her even harder, I reached down and grabbed her bottom with both hands, pulling her against me with so much force that my arms shook from the effort. Kate protested again, trying to pull away now, but I wouldn't let her go. I just squeezed and squeezed, applying tremendous force to her swollen abdomen, my erection literally pulsing against her.\n\nLightning illuminated us again, allowing me to glimpse her hair plastered against her scalp, her right ear protruding through the tangled strands. Kate shuddered. Then pressed her cheek against my stubbled face, shouting to be heard above the cacophony of wind and rain. \"Michael. You're making me wet myself.\"\n\nShe gasped in surprise as I quickly spun her through one hundred and eighty degrees and embraced her from behind. With her backside now pressing on my bulging penis, I waited for the warm sensation of her pee running down the fronts of my legs. I didn't have to wait for long. Her pee felt hot, more so because of the contrast with the freezing rain. I felt Kate relax in my arms, but I still maintained a firm grip to prevent her moving away as she continued emptying her bladder. I momentarily caught the sharp odour of urine, but for the most part the driving wind swept away the acrid smell before it found its way into my nostrils.\n\nSo great was my excitement that it took some little time before I registered the fact that Kate had just used my Christian name for the first time.\n\n\"You called me Michael,\" I said into her right ear.\n\n\"Would you rather I kept calling you Mr. Denes?\" she countered.\n\nI turned her back around to face me and planted another kiss squarely on her mouth. As our lips parted this time, I heard her say, \"Apparently not.\"\n\n\"Want to come back to my place for the night?\" I asked.\n\nTo my surprise and disappointment, I felt her head shake. \"No,\" she said. \"I need some sleep, and so do you if you're going to do battle at HQ tomorrow.\"\n\nI had to concede the point. \"Alright, I'll pick you up at seven in the morning and have breakfast on the road. Okay with you?\"\n\n\"Sounds fine,\" she agreed as she pulled away and returned to her office to collect her coat. More lightning revealed her eyeing the garment ruefully. \"Not really much point in putting it back on, is there?\" she asked, the question clearly rhetorical.\n\n\"Not really,\" I said.\n\n\"Goodnight then, Mr. Denes,\" she said as she started towards her car.\n\n\"Er um.\"\n\n\"Sorry. Michael.\"\n\n\"Better. Goodnight, Kate.\"\n\nI stood and watched her rear lights fade into the restless veil of rain, then turned towards my own car. That was when I felt the ground shake and a deep roar, so loud that it momentarily banished the howl of the wind, burst across the night. I drew a sharp breath, confused for a moment before comprehension dawned. The holding tank wall had given way, opening a path for treated and untreated sewage alike to pour out into the habour.\n\nSo, it had finally happened. I knew that Thompson would try to save himself by trying to shift the responsibility for this disaster onto my shoulders, but I was damned well going to make sure the idiot paid for his own incompetence, whatever it took. \n\n#\n\nI arrived at Kate's front door at six forty-five the following morning, having received word from Head Office that Thompson has scheduled the meeting for nine a.m. This news had only been passed on to me at 6:20 a.m., and I took it as a sign that Thompson was trying to put me at a disadvantage by making me arrive late, thereby flustering me. I was determined not to give him the pleasure. When I rang the doorbell, a part of me hoped I would catch Kate still in bed, and had that been the case, Thompson would most certainly have got his way. I was spared that ignominy when Kate opened the door, already dressed in a businesslike in a grey jacket and skirt suit, her hem brushing the tops of her knees. Her calves were elegantly lifted by three-inch heels; her hair had been drawn back and fastened in a short ponytail. She looked both stunning and slightly formidable.\n\n\"I had a call from one of the secretaries at Head Office to say the meeting had been set early, so I was expecting you,\" she explained. \"I gather the tank gave way.\"\n\n\"Yes,\" I confirmed.\n\n\"Is it really bad?\"\n\n\"Pretty bad. I couldn't see a lot last night, and I really haven't had time this morning to go down there for a more thorough inspection. I've been spending time putting together arguments to make sure my career doesn't come to an ignominious end at Thompson's hand.\"\n\n\"Can he really do that, when he's ultimately responsible for sanctioning the funds to upkeep these facilities?\" Kate asked, obviously concerned. She had, after all, only just started in her new job, and obviously didn't want it to come to such a quick and ignominious end.\n\n\"Oh yes, but don't worry. I'm not going to let him wriggle out of this one without a good fight. The first order of business is to be there on time.\"\n\nKate quickly glanced at her watch, and nodded. Her heels made a rapid succession of clicks along the paving stones as she marched briskly along the garden path, her suitcase, obvious heavy, banging against her leg.\n\n\"Can I give you a hand with that?\" I offered.\n\n\"No need. Just open the boot.\"\n\nI released the lock and watched as Kate heaved her case up over the rim of the opening, then slide it in next to mine. She slammed the door shut and slide onto the front passenger seat. I watched as the hem of her skirt rode up some four or five inches during this maneuvre. Kate caught me looking and smirked. \"Shall we get going?\" she prompted, her amusement apparent in her vocal undertones.\n\n\"You look great, if rather formal,\" I told her as I slid in beside her.\n\n\"I presume that was meant to be a compliment?\"\n\n\"You presume correctly, Miss Bond. You're a ray of sunshine on such a grey, washed-out morning.\"\n\nShe regarded me, frowning faintly. \"Have you been drinking?\" she asked.\n\n\"More to the point, have you?\" I countered.\n\n\"Me?\"\n\n\"Yes. We have a long journey before us, and I'm hoping that you might feel the urge to use a loo before we reach our destination. In fact, as your boss, I'm instructing you the purchase a coffee at the first opportunity.\"\n\n\"Yes, sir,\" she agreed with a vague salute. \"You're surprisingly full of the joys of spring this morning, considering where we're going, and why. I presume that Mr. Thompson's plans to drop you in it are not having the desired effect?\"",
        "\"Once again, you presume correctly, Miss Bond. I fully intend that he should be the one with egg on his face. You see, I have a cunning plan.\"\n\n\"Oh, really. Do tell.\"\n\n\"Only after you buy some coffee and start drinking. No, actually, I want you to buy two coffees and drink them both.\"\n\nKate's amusement retreated for a moment. Attempting to change the subject, she said, \"I made us a booking at the Promenade Hotel for tonight. It's supposed to be right on the coast.\"\n\n\"Excellent. Thank you. But I think you just ignored a direct order from your boss, did you not?\"\n\n\"Yes,\" she admitted.\n\n\"Do I detect insubordination?\"\n\nMy voice was light, but she looked concerned. \"I don't think we should play those games today,\" she informed me in a low, almost reluctant voice. \"I'm new to the Authority and I don't want to risk humiliating myself at Head Office.\"\n\nI considered this, then acquiesced. \"Point taken. I'm not being fair.\"\n\nShe reached over and briefly touched my thigh, a little gesture that I knew she intended to take the sting out of her very mild rebuke. I rubbed the back of her hand and treated her to my most winning smile to show that there were no hard feelings.\n\nI started to chat about my strategy for the meeting with Thompson, but when I looked across at her, I noticed that Kate was staring at the fuel gauge. \"The tank's almost empty,\" she said. \"Hadn't we better get some fuel?\"\n\n\"At the very next petrol station we come to,\" I agreed.\n\nHer smirk returned. \"Oh, is that where I was supposed to buy the coffee, while you filled the tank?\"\n\n\"Something like that,' I admitted.\n\n\"Another cunning plan?\"\n\nI waggled my eyebrows at her, and this time she gave way and actually laughed. She shook her head good-naturedly. \"Oh, alright. I'll buy some coffee.\"\n\n\"I grand suggestion, Miss Bond.\"\n\n\"You are so bad,\" she said.\n\nI pulled into a petrol station and collected two coffees from a One Stop shop, handing Kate one and placing the other in the cup holder. I still entertained vague hopes of getting her to drink them both, but I wasn't prepared to push her if she really didn't want to do it.\n\nShe sipped at the hot liquid as we continued our journey east along the A27 towards Bexhill. For a while, our conversation turned to more philosophical considerations, such as the state of the world in general, how small changes seldom seem to make a different in the grand scheme of things, and even whether or not there was a grand scheme to the universe.\n\nI kept up a steady speed of fifty-five miles per hour, fully expecting to make Bexhill before nine. But, in the grand scheme of things, I had failed to take into account the havoc wrought by the night's storm. Before reaching Worthing, we hit a detour. A few minutes later, we encountered another. Parts of the A27 were blocked by a combination of fallen trees and flooding. It soon became apparent that we would be late for the meeting after all.\n\nI considered calling Thompson's secretary to re-schedule, and even got as far as picking up my mobile phone to place the call. My finger on the button that would retrieve the number from memory, I hesitated. Damn it; I would not give that arsehole the satisfaction of knowing that I was in a sweat. I put the phone back down and drove on. One way or another, I determined, we were going to get there in time.\n\nI was so preoccupied with these concerns that I quite forgot to note how coffee Kate had been drinking, until, just as I reached a busy junction with yet another detour sign, she said, \"Oh damn. I need a loo.\"\n\nI looked over at Kate and saw that she had her knees pressed together. Catching my eye, she pulled an anguished face and smiled wanly. \"It looks like you got your wish after all.\"\n\nI wanted to tell her I was sorry, but of course I wasn't. Instead, my thoughts focused entirely on her, so much so that drivers behind me were blowing on their horns to encourage me to pull out across the junction. I did so, doing my best to concentrate, but now I was hopelessly distracted by Kate's predicament.\n\nHad I always been this bad, I wondered? I'd always found seeing an attractive woman hopping around with a full bladder arousing, but until Kate had come into my life, I was sure it had never taken such command of me. Perhaps I was merely deluding myself and I'd always been this perverted? I found it more than a little disturbing that it stimulated me so much, and I worried that this demon might ultimately control my every waking action.\n\n\"I know you won't want to look for a garage or somewhere with a loo,\" Kate intruded on my reverie, \"but I would appreciate being able to go.\"\n\n\"Yes, of course,\" I said hurriedly. \"As soon as we spot somewhere, we'll stop.\"\n\n\"Thanks,\" she said, briefly resting a hand on my shoulder. \"It has come on very suddenly and I'm actually quite desperate, so I'm really glad to hear that.\"\n\nOh, I wish she hadn't told me that. My erection, which until then had been only partial, was suddenly full, and the foreskin was managing to tug on several pubic hairs, causing me huge discomfort. The pain must have shown on my face, because Kate asked, \"What's wrong?\"\n\n\"Nothing,\" I told her distractedly.\n\nAfter a short pause, she added, \"Oh, that kind of nothing. Sorry.\"\n\n\"It's okay.\"\n\n\"Want me to help?\"\n\n\"It was you who got me into this situation.\"\n\n\"All the more reason for me to help.\"\n\nI tried to keep my attention on the road ahead as Kate, ignoring the cars moving all around us, reached across, unzipped my trousers and slipped her hand inside my pants. \"I feel the problem,\" she said matter-of-factly, drawing back the foreskin a little more and freeing the trap hairs. Oh, the relief.\n\nAs soon as my discomfort abated, I immediately grew aware of her touch. As she started to withdraw her hand when I said, \"No. Stay there. Please.\"\n\n\"I don't think that's a good idea while you're driving.\"\n\n\"I know, but I am so close to shooting my load. Please squeeze me.\"\n\nShe hesitated, and I saw her free hand move to her knee and begin rubbing. I could hear the whisper of her fingers brushing against her tights, and my arousal intensified still more. She reacted to my additional stiffening by squeezing, then she started to move her close hand up and down. The range of motion was no more than half an inch, but it was enough.\n\nMy tesicles were suddenly on fire, and through the wave of pleasure her attentions had induced, I thought about her sitting there with a full bladder, struggling to wait as she satisfied my desires in this shockingly-public place.\n\nFifteen seconds later, I ejaculated. For a few moments, my vision clouded, and I felt Kate's hand grab mine on the steering wheel, turning us away from the middle of the road. My breaths were coming in short gasps while my heart pounded in my chest, and slowly, very slowly, my body recovered from the most powerful urge I had experienced in years.\n\n\"Good heavens,\" Kate muttered, drawing my attention to her face. I saw her looking down at my lap, and following her gaze I saw what looked like half a gallon of semen on the front of the seat, and that didn't include what had shot over the edge into the foot well.\n\n\"Don't move any more than you have to,\" Kate said. \"I don't think any of it went on your trousers. If I can just mop it up, you may get away with it.\"\n\nShe let go of the steering wheel, returning full control of the car to me as she began rummaging in her bag. She produced a small pack of tissues, pulled out a handful and began mopping up the mess on the upholstery between my legs.\n\n\"Perhaps now you can concentrate on not getting us killed,\" she said as she worked. Her tone was certainly firm, but she clearly did not intend it as a rebuke.\n\n\"Thank you,\" I spoke at last, my voice hoarse. I cleared my throat and continued. \"That was amazing.\"\n\n\"Yes,\" she agreed simply. \"You clearly really needed it.\"\n\nI hesitated before asking, \"What about you Kate. Do you need it too?\"\n\nShe didn't look up until she was satisfied she had sponged up as much semen as possible. When she did lift her face, I saw that he cheeks were flushed, either from leaning forward for so long, or because my question had actually embarrassed her.\n\nI didn't think she was going to say anything at all, but at last she spoke again. \"What I need right now is a loo.\"\n\n\"Right, yes. Keep an eye open for a fuel station or something.\"\n\n\"Don't worry. I am.\"\n\nWe followed a highly circuitous route for the next ten miles, wasting nearly half an hour on a length of journey which should only have taken ten minutes. Remarkably, I don't think we passed a single filling station during this leg of the journey. We did come across a small village shop, and I pulled up to let Kate go in to look for a loo, even though we were both fairly sure there would be no such facility. When she came out after just thirty seconds, shaking her head, it was perfectly clear we had been right.\n\n\"Oh, this is getting serious,\" Kate said as she re-secured her seat belt. \"I have to find somewhere soon.\"\n\nI glanced at the clock on the dashboard - eight fifteen. If we were to stand any chance at all of making that nine o'clock meeting, we couldn't afford any more delays. I hadn't intended to say anything to Kate, but as usual she unerringly read my concern. \"We don't really have time to stop again, do we?\" she asked, although it came across more as a resigned statement than a question.\n\n\"Well, not really,\" I agreed. \"But, if we're late, we're late. The very storm that led to us making this journey has delayed us, and I'm sure Thompson will appreciate that.\"\n\n\"He'll use it against you, more like,\" she corrected. \"No, please just keep going. I'll cross my legs until we get there and then make a mad dash for the loo.\" She considered for a moment, then added, \"Oh.\"\n\n\"What is it?\" \"I don't know where anything is at Head Office. Will you have time to show me where the loos are?\"\n\n\"Of course. Don't worry.\"\n\n\"Good, because when I get out of this car again, I'll be ready to explode.\"\n\nI tried not to dwell on that last comment because, despite alleviating my own urges such a short time before, I could already feel myself reacting to her predicament again. Visions of her bladder swollen enough to be in danger of exploding made me long to reach over and rub her abdomen, but I tried to ignore this impulse and concentrate on driving instead.\n\nWe finally managed to rejoin the A27 with less than half an hour remaining before the meeting. The traffic was very heavy and progress was seldom better than forty miles per hour. At best, we would reach Head Office about ten minutes late. It wouldn't necessarily be disastrous, but it would certainly give Thompson the initial advantage. I felt my mantle of confidence starting to slip, and wondered if Thompson would get his way after all, leaving me out of a job by the end of the day.\n\nBeside me, Kate was now silent. I glanced across at her periodically, noting that she was sitting with her knees pressed together, and that her legs were trembling. She had to be so close to coming unglued, and I felt for her. I knew her bladder was bursting and that she was incredibly uncomfortable at a time when she badly wanted to look composed. Normally, I would have enjoyed her predicament, but this morning I just wanted to get her to our destination and see her make it to the loo without having an accident. I felt protective of her, and wanted things to go well for her on her first visit to Head Office.\n\nWe managed to make up a little time, so that by just two minutes after nine, I was pulling into the underground car park directly beneath the Authority's building. I was handed a pass after showing some identification to the guard on the gate, then parked as close to the lifts as I possibly could. I grabbed my briefcase from the back seat and hopped out in time to see Kate emerge and stand half doubled over. \"Oh my God,\" she gasped. \"I don't know how much longer I can last.\"\n\n\"You'll make it,\" I encouraged her. \"This way. Just one more minute and you can let it go.\"\n\nShe closed her eyes as she hurried after me, her shoes tapping out small, rapid steps. I pressed the button to call one of the lifts, watching the display as it began counting down from the seventh floor, passing through the sixth and the fifth, heading for the basement level where we were waiting. Kate was pacing up and down, arms folded across her breasts. I could hear her sucking in air between her teeth with every breath. She had to be right on the verge of losing control, and waiting for the lift to descend had to be sheer torture for her.\n\nAs soon as the lift doors slid apart to admit us, Kate literally hobbled inside, her steps cautious in a clear attempt to avoid jolting her bladder and causing a loss of muscle control. I tried not to think about her advanced state of desperation; I could not afford to become distracted with such a critical meeting just minutes away.\n\nAfter what must have seemed an eternity to Kate, the lift stopped at the ground floor and the doors opened once more. As we stepped out, I saw a woman standing in front of the main reception desk turn to look at us, then beginning hurrying across the room the intercept us.\n\n\"Mr. Denes,\" she addressed me a little breathlessly. \"Thank heavens you're here. I'm Marcia Smith. The meeting is just starting, and you really need to get in there right away.\"\n\n\"I know. I'm sorry we're late, but the roads were a mess. Please tell Mr. Thompson that we just need a minute. My assistant has to-\"\n\n\"You don't understand,\" she interrupted. \"Mr. Foster is chairing the meeting.\"\n\nMy blood literally curdled. \"Foster?\" I echoed.\n\n\"That's right.\"\n\n\"The Director of the entire Authority.\"\n\n\"Exactly,\" Marcia confirmed. \"And he's not happy. He's had his local M.P. on the phone this morning, raising hell about water contamination.\"\n\n\"Oh shit,\" I muttered. I closed my eyes for a moment to compose my thoughts, then turned to Kate who was literally hopping on the spot. \"I'll go straight in, and you join us in a minute after you've--\"\n\n\"You assistant had better go in with you,\" Marcia cut in again. \"A lot of the support staff has not made it in yet this morning, and they don't have anyone to take minutes.\"\n\nKate looked positively terrified. She shook her head. \"I can't, not without using the loo.\"\n\n\"I know,\" I said. \"They'll just have to wait for you.\"\n\n\"I really wouldn't advise any delays, Mr. Denes. You could cut the atmosphere in there with a knife, and I know this meeting is vital to you.\" Marcia regarded Kate's restless legs for a moment, then said to her, \"If you could just fill in until Mr. Thompson's regular secretary turns up, then we can relieve you.\"\n\n\"I can't,\" Kate protested in a tight little voice. \"I'm nearly bursting.\"\n\n\"I wouldn't make a bad first impression if I were you,\" Marcia advised, \"especially not today of all days. Go on,\" she urged. \"We'll have you out of there in no time.\"\n\nKate turned worried eyes on me, and I shrugged. \"Can you last a little longer?\"\n\nShe looked like she was ready to cry, but she blinked several times as if dispelled tears and nodded. \"I'll try,\" she said. As we started towards the meeting room, Kate said to Marcia, \"Please get someone in there as soon as possible. I don't want to have an accident in front of these people.\"\n\n\"As soon as someone shows up who can take shorthand, I'll bring her straight in,\" Marcia promised.\n\n\"Thank you,\" Kate replied meekly.\n\nA few moments later, Marcia was opening the door to the meeting room and ushering us in.\n\nA dozen authority executives sat around the oval table, most of them men and most of them white. The presence of two women and one black man was the authority's hat tilting to the demands of equality. Given the average age of the pale skins, which had to be around sixty, it was clear that the Authority was still very much under the influence of the old school tie.\n\nAll faces turned to watch our entry. Several were familiar to me, and we exchanged quick nods. Most of them had never blipped on my radar before, and I had a feeling they were not likely to be sympathetic to an area manager fresh in from the sticks, especially not one whose office was located on a sewage treatment works.\n\n\"Good morning, Denes,\" Thompson greeted me stiffly. \"You're late.\"\n\n\"There were a lot of road closures owing to the storm last night,\" I pointed out without returning his greeting.\n\n\"I should have thought you might have anticipated that and left early,\" Thompson retorted, \"rather than keep us all waiting.\"\n\nThe man at the head of the table, if an oval table might be said to have such a geometry, held up a hand to silence Thompson. Taking his cue, Thompson resumed, \"I don't believe you've met Mr. Foster before.\"\n\n\"No, indeed. Good morning sir,\" I greeted him formally.\n\nFoster merely nodded and glanced at the clock across the room which announced the time as ten past nine. This, I could see, was going to be an uphill battle.\n\nI took a seat directly opposite Thompson, Foster located between us. At the periphery of my vision, I was aware of Kate heading for a seat on the far side of the conference room. When she sat down, she was in my line of sight, midway between Thompson and Foster. She immediately crossed her legs and produced a notepad and pen from her bag, completely ignored the stenographer's machine located two seats away from her in the corner. I guessed that she has never used one before and was not about to try learning it now. Wise woman.\n\nI saw Foster flick a meaningful glance towards Kate followed by the stenographer's machine before clearing his throat and formally opening the meeting.\n\n\"We all know why we are here. Our switchboard is jammed with complaint calls from the community, and I've personally had difficult dialogues with two members of parliament this morning, asking me how such shocking accidents could be allowed to occur in their constituency.\"\n\n\"Accidents?\" I asked, realizing as I said it that I should really not have interrupted Foster's opening address. He glared at me for several seconds, then resumed without answering my question.\n\nHe droned on, listing a string of obvious complaints from the public who never wanted to pay their taxes, but were always surprised when some part of the infrastructure that held society together crumbled, in this case quite literally, through lack of financial support.\n\nUnable to keep my mind on rather obvious monologue, I allowed my thoughts to stray to Kate's terrible predicament. The poor girl had to be busting a gut as she sat there scribbling down this drivel, part of her mind surely alert for the sound of the door opening and the arrival of Thompson's secretary. I wondered how she was coping from minute to minute with a bladder that had to be at its limit by now. I actually worried that she would not be able to maintain control and would wet herself in front of Foster and Thompson. I doubted that she would ever learn to deal with the humiliation if that happened, and in all likelihood she would resign her position with the Authority rather than have to live in its shadow every time Thompson visited me at the regional office.\n\nI glanced at the door, and then through the adjacent window into the outer office, willing someone to come in and release Kate from her torment before it was too late, but there was no sign of anyone out there.\n\n\"Mr. Denes,\" Foster summoned my attention. \"Perhaps you could outline the circumstances leading up to the accident with the holding tank at your sewage plant.\"\n\nI forbore to point out that the plant was hardly mine, and produced the notes I had prepared for the occasion. My gaze alighted very briefly on Kate before I started, and I noted that she was bent forward over her notepad, legs tightly crossed, her raised foot wiggling rapidly back and forth. The brief silence seemed to alert her that something was going on, and she glanced up at me. Her lips twitching into a smile, but I could see the agony in her eyes. I mouthed the words, Are you ready? She nodded once, and I began delivering my summary.",
        "After several minutes, Foster interrupted me. \"So, essentially, you are saying that you have known about the structural weaknesses in the west wall of the tank for some months. Why, may I enquire, have you not done anything about it?\"\n\n\"But I did,\" I objected. \"I submitted two reports on the advanced state of deterioration of several key structures in the treatment process, and requested that funds be released that would allow me to initiate immediate remedial work. These requests were both declined.\"\n\nFoster turned his frosty gaze on Thompson. \"Is that true, Divisional Director Thompson?\"\n\nThompson shot me an equally cold look before answering. \"I receive dozens of requests from Regional Managers across the entire Division on a weekly basis. There is no way to fund all of them, and I found it necessary to set priorities.\"\n\n\"I see,\" Foster nodded. \"And you didn't think that mitigating the risk of contaminating one of the most unspoilt stretches of coastline on the south coast of England was a sufficiently high priority for funding?\"\n\nFor one of the most unspoilt stretches of coastline, read, a harbour where the boats of several dozen wealthy and highly influential people are moored.\n\n\"There were other matters which had the same -- or greater risk -- of doing environmental damage.\" Thompson argued, and I noted that he was avoiding specificities.\n\nFoster scowled, then turned back to face me. \"Did you make the urgency of this situation sufficiently clear in your reports to the Divisional Director, Mr. Denes?\"\n\n\"I stressed the need for immediate action in both documents, sir,\" I said. \"I was informed that the matter could not be addressed during the current fiscal year owing to budgetary constraints.\"\n\nAs Foster turned his attention back to Thompson, I took the opportunity to see how Kate was doing. I watched her uncross and recross her legs, the hand gripping her pen pressing down hard on the front of her skirt just inches from her crotch. It was obvious that she could not hold on much longer. I looked into the outer office once more, but it was still deserted. Even the receptionist's desk was untenanted.\n\nSince Foster and Thompson were essentially just squabbling, Kate stopped taking the minutes and glanced up. Her gaze intercepted mine, and she gave me a look of sheer anguish. I mouthed the word sorry as I watched her rocking back and forth on her seat, knees clenched. I could see she was concentrating hard, and I imagined her forgetting to breathe at moments when the urge to urinate almost overcame her. It looked like she was experiencing one of those moments right now.\n\nPoor Kate. She'd been sitting there for at least twenty minutes, after being desperate to the point of bursting when we arrived; when she had been forced to delay a visit to the toilet for the sake of keeping the peace with Foster. By now, she must feel like she had a weather balloon swelling in the space between her hips. The evil part of me found her predicament both exciting and stimulating, and yet, at the same time, I did not want her to be forced to disgrace herself in front of these two men.\n\nAn idea occurred. \"Er um,\" I interrupted. \"Can we take a brief recess? I need to take a leak.\"\n\nBoth Foster and Thompson treated me to reproachful glances. Foster nodded sharply and I immediately rose, looking over at Kate and inclining my head towards the door leading into the outer office. Getting the message, she stood up stiffly, eyes bulging with the effort of dealing with an extremely full bladder. She dropped her note pad and pen onto her chair, seemingly unwilling to risk bending down, then walked with her knees almost touching towards the door.\n\nI stood aside to let her precede me. She hobbled into the outer office and, without waiting while I closed to door, she blurted out, \"Where's the loo. Oh God, I'm never going to make it!\"\n\n\"This way,\" I pointed, then seized her arm and hurried her across the office. She staggered along beside me, her breath catching in her throat as she strained to maintain control for just a few more seconds.\n\nWe turned into a short corridor just off the main entrance. Ahead of us on the right was a drinking fountain; on the left, two doors, the first one leading into the Gents and the second one, the Ladies. \"There you are,\" I said, simultaneously letting go of Kate's arm.\n\nShe seemed to be on the point of losing her balance, and I grabbed her again. At the same moment, she stretched out her left hand and rested it against the wall. She looked down, and following her gaze, I saw her right foot come off the floor just before the first splash of urine hit her unlifted shoe.\n\nShe drew in a sharp breath. \"No! Oh shit. Please nooo!\"\n\nShe took several steps towards the toilet, then froze again as more pee splashed around her feet. This second, brief loss of control seemed to galvanize her, and she made a mad dash into the Ladies. As the door closed quietly behind her, I heard her heels tapping against the tile floor, and had a vision of her lifting her skirt while trying to tear down her underwear as she half-ran, half-stumbled towards a cubicle.\n\nI stood there, not so much aroused as feeling desperately sorry for Kate. It was the one thing she wanted to avoid. I felt angry with Foster, and indeed with Marcia Smith, for placing her in that situation.\n\nI heard voices behind me, and there was Marcia entering the building with several other women. I heard Marcia saying, \"Mr. Denes' assistant has been covering for you, so you'd better go straight in.\"\n\n\"Can't I just pop to the loo first Marcia?\" one of the others answered.\n\n\"If you can hold it, please do. Mr. Foster and Mr. Thompson are both in rather a bad frame of mind this morning.\"\n\n\"Really?\"\n\n\"Well, consider the circumstances,\" Marcia retorted. \"You turning up late won't have helped.\"\n\n\"But I couldn't do anything about that.\"\n\n\"I understand, but they are not in any mood for excuses. Now hop to it.\"\n\nI approached Marcia just as the women she'd been talking too hurried across the reception towards the Board Room. Turning at my approach, Marcia said, \"Oh. I thought you were in the meeting?\"\n\n\"I popped out to use the loo,\" I explained. \"Actually, to let Kate use the loo,\" I amended. \"She didn't quite make it.\"\n\n\"Oh good heavens. The poor thing,\" Marcia glanced past me at the corridor leading to the loos. \"She must have been mortified.\"\n\n\"Perhaps you can help by finding her a change of clothes, Miss Smith. I'm sure she'd really appreciate it.\"\n\n\"Um, yes, yes of course. I'm sure one of the girls will have something that will fit her.\"\n\n\"Thank you. Please go and tell Kate what you're doing for her. I have to get back into the meeting.\"\n\n\"Of course,\" Marcia repeated. \"I'm terribly sorry.\"\n\n\"Tell Kate,\" I said as I walked away.\n\nWhen I returned to the Board Room, Foster was in full swing, lecturing the entire board about the follies of delayed action. Arguments about budgetary constraints held no sway with him, at least not right here and now; he was in full politician mode.\n\nI glanced over at the girl who was evidently Thompson's personal secretary, and saw her sitting at the stenographer's desk, legs crossed, unsure if she should be trying to record the conversation. She caught my eye and I shook my head very slightly to tell her no. She smiled her understanding, and settled down to wait for Foster to return to some kind of agenda.\n\nThe morning dragged by with interminable slowness as we moved from one emergency to the next. At least half the Board raised issues about regional problems, taking their lead from Foster. From time to time, I stole a quick look at Thompson's secretary. It did not escape my notice that her legs were crossed, or that her elevated foot was swinging rhythmically, an indication that she was dealing with an uncomfortably full bladder. I wondered just how urgent her situation was, then felt a little guilty for thinking about her predicament instead of poor Kate's.\n\nKate had not reappeared. I worried a little that she had fled in humiliation and was even now on a train back home. When we finally adjourned for lunch, at which point Thompson's secretary sprang to her feet and walked to the door in rapid, bird-like steps. She was bursting to pee alright, and I could not stop myself watching her cross the outer office en route to the lavatory. She looked as if she was going to make it, however.\n\nI went to the receptionist to ask if she knew of Kate's whereabouts, but before I could frame the question, both Marcia and Kate emerged from an adjacent office. Kate, now wearing a pair of dark grey trousers, smiled at me as she approached.\n\n\"How is it going in there?\"\n\n\"Grim,\" I said, telling her what she already know, \"but I think we'll get a budget increase once the dust settles.\"\n\n\"Great,\" she said, nodding and smiling.\n\nAs Marcia was called away, Kate took a step closer to me, speaking now in a low voice. \"I do apologies for not coming back in there, but I really couldn't face it. I felt so embarrassed.\"\n\n\"That's quite alright,\" I assured her. \"I don't think anyone noticed your predicament, and frankly, I'm not even sure they would notice your change of clothing. They're all pretty numb from the neck up.\"\n\n\"Oh God, I was so desperate in there. I thought I was going to die.\"\n\n\"I know. I felt for you.\"\n\n\"Really? I thought you would have been enjoying it.\"\n\nI shook my head. \"Not when you're in that much pain and facing such dreadful embarrassment. I care about you, Kate, and I don't want to see you humiliated like that.\"\n\nShe regarded me for a moment, as if she were trying to make up her mind about something, then she said, \"Are we going out for lunch? I'm starving.\"\n\n\"Um, yes, but it will have to be a quick one. The meeting will resume in about forty minutes.\" She looked a little disappointed, so I added, \"We'll dine out somewhere really nice this evening.\"\n\n\"Good,\" she said, and looping her arm through mine, she led me towards the lift.\n\nThe afternoon went much as expected, with Foster instructing a review of my budgetary needs and recommending that my area be made a high priority for emergency funding. It was as good as it gets, and the fact that Thompson came out of it looking like a dick in a dildo factory was the icing on the cake.\n\nKate and I dined at Le Restaurant Gastronome, a pretentious name but definitely a gastronomic delight. We managed to get through two bottles of 2005 Cote de Nuits, eating up a huge chunk of the available credit on my MasterCard, but oh, was it worth it. Kate truly enjoyed herself, dining on baked scallops and coconut shrimp.\n\nWe chatted about everything except work - our tastes in music, wine, vacation locales, and even a little about our respective families. I didn't even notice that Kate was not visiting the Ladies at all. I'd just assumed that she'd gone to relieve herself when I'd gone off to do so, which had been necessary twice during the evening. It was only when she became distracted and sat rocking ever-so-slightly on her seat that I realized she was exhibiting symptoms of holding a full bladder.\n\nI opened my mouth to comment, but before I could comment, the waiting arrived with the bill and I spent the next few minutes dealing with that. When we were alone again, relatively speaking, I whispered, \"You look like you need the loo.\"\n\nShe nodded, a slow, deliberate nod, before whispering in return, \"I've been holding it.\"\n\n\"For how long?\"\n\n\"All evening.\"\n\n\"Why? You were supposed to be enjoying the meal and the wine, not sitting there in agony.\"\n\n\"I'm not in agony, just very full and experiencing those urgent feelings.\"\n\n\"Still...\"\n\n\"I'm doing it for you.\"\n\nI smiled, feeling a tingling sensation travel all the way from my groin to the middle of my back. \"You don't have to.\"\n\n\"Oh yes I do,\" she insisted. \"I'm going to walk back to the hotel like this.\"\n\n\"But... that's over half a mile away, and you're wearing heels. Are you sure.\"\n\n\"Pos-sitive,\" she stammered, sounding a little drunk.\n\n\"I don't know, Kate. You've suffered one humiliating experience today, and I don't--\"\n\n\"It's alright,\" she interrupted, silencing my protests. \"It's dark and I'm wearing a black dress, and black tights, and black shoes. No one will see the damage if I can't it.\"\n\n\"Kate,\" I said, feeling it necessary for me to object one last time. \"You're tipsy, and you don't know what you're saying. Once you get out in the night air, you'll be going frantic for a loo. I think you should go now, while you still have the opportunity. There aren't many public loos in Bexhill, and even if we did come across one, it would be locked at this time of night.\"\n\n\"Stop... worrying,\" she said as she stroked her fingers along my forearm. \"I'm going to hop and dance all the way, and I will make it, because when we get there, you're going to take my dress off and put me to bed without letting me-\"\n\nI held up a cautioning hand to silence her. It may only have been paranoia on my part, but I was convinced that people seated at adjacent tables were starting to listen to our conversation. \"Okay,\" I conceded. \"Let's... just go, shall we?\"\n\n\"Abs-solutely. That's what I've been saying,\" Kate said, her expression an odd mixture of mischievousness and panic.\n\nShe drew in a gasp as she rose from the table, and I imaged the abrupt intensification of her desire to empty her bladder. She looked for a second as if she might buckle and let it go there and then. She puffed out her cheeks and gave me a wide-eyed stare. She mouthed the words that was close. I nodded, and inclined my head in the direction of the exit.\n\nAs we walked slowly along the high street, Kate holding on to my arm to steady herself, her heels clicking irregularly on the pavement, I heard her suck in a sharp breath though clenched teeth. \"Oh God, I'm so full. You wouldn't believe how tight my bladder feels.\"\n\n\"Yes, I would,\" I said, feeling the tension in her arm muscles as she slowed her pace still further and bent forward a little at the waist.\n\n\"I'm never going to make it to the hotel in time,\" she gasped, ending the sentence with another sharply-drawn breath.\n\n\"You can do it,\" I said, aware that this platitude was hardly likely to even register on her distracted mind.\n\nWe walked as fast as Kate could manage, with frequent pauses for her to bend right over and cross her legs. The third or fourth time she stopped to do this, she inserted her hands between her thighs and ran them quickly up to her crotch, lifting her skirt and showing that she was wearing stockings and suspender, not tights as she had claimed. The effect of all this on me was electric. I could hardly stand up straight myself, and desperately hoped that she could last until we reached the hotel room. I knew she was bursting, in agony, longing to relieve herself of the colossal pressure stretching her abdomen, but I still selfishly wanted to get her into bed and spend a few seconds inside her before she finally lost control.\n\nBy the time we reached the hotel entrance, Kate was leaning on my arm so heavily that my muscles were trembling with the effort of keeping her upright. Her breathing was fast and shallow, and her steps, while rapid, were not heavy - I could hardly hear the click of her heels, and guessed she was trying to walk on the balls of her feet to avoid jolting herself.\n\nWe crossed the lobby, Kate not saying a word. All of her concentration was devoted to holding on just a little longer. I asked for the card keys for both of our rooms, the receptionist treating me to a knowing smirk as she handed them over. I then steered Kate towards the lift, fairly sure she would not be able to navigate the stairs in her present condition.\n\nNaturally, neither of the two lifts were waiting at ground floor level, and as we waited for one of them to arrive, Kate broke away from my grip and began pacing up and down between me and the lift doors. I saw that she was opening and closing both hands, perhaps in an effort to resist grabbing her crotch. Looking back at her face, I noticed that she had her eyes closed, shutting out everything that did not aid her desperate struggle to wait.\n\nOne of the lifts began descending, starting from the third from floor and coming slowly down. Kate saw the floor numbers decreasing, and released a little whimper of frustration. In the same instant, her left foot came off the floor as she raised her knee, turning it in towards the right leg. After drinking and holding her pee all evening, she had to be so terribly close to wetting herself where she stood.\n\nWhen the lift doors finally parted, Kate practically fell inside, her hand groping for the button that would send it back up to the fourth floor, where both of our rooms were located. I stepped in beside her and stood watching her screwing up her face in agony as we waiting for the doors to finally close.\n\nAs soon as the doors shut and we were alone, Kate whispered urgently, \"I'm losing it. My knickers are already wet.\"\n\n\"Please try to hold on,\" I urged. \"We're so close.\"\n\n\"I am trying to hold on!\" The rejoinder was sharp, and I knew she didn't mean it to come out like that. She was just in some much pain forcing her outer sphincter muscles to stay shut in the face of urgent demands from her brain to relax it. Her face was flushed with the heroic effort she was making, but one can only resist the inevitable for so long.\n\nFortunately, no one else summoned the lift on its way up to our floor. If they had, I think Kate would have wet herself in the presence of strangers. As it was, she staggered as she tried to step from the lift, and divining that she could no longer walk, I quickly thrust the card key into her hand before snatching her up in my arms and carrying her along the corridor to her room.\n\n\"Stop jolting me!\" she squealed, and I slowed my pace, trying to keep her body as motionless as possible.\n\nAt the door, I let her fumble with the card key, unwilling to risk putting her down at this late stage. With a toilet just seconds away, her brain must have been about to betray her and force her to release her urine. She made two unsuccessful attempts to swipe the card, swearing and almost crying in frustration. On the third attempt, she did it, and I used my knee to depress the door handle and push the door open.\n\nI carried Kate in, straight past the door I knew would lead into the toilet, and quickly deposited her on the bed. She literally writhed as I let go of her and struggled in an effort to get up. \"I have to go,\" she shouted. \"I have to go NOW!\"\n\nI quickly unbuttoned and unzipped my trousers and dragged my underpants down to my knees, looking a comical and highly unappealing sight, but there was not a second to waste. I grabbed Kate by the shoulders and made her lay back down, while she grabbed my wrists and fought me.\n\n\"I can't, Michael. I'm going to wet the bed any second now. We can't have sex.\"\n\n\"Please. Just quickly,\" I pleaded, my voice pathetic. \"You've no idea how much I've longed for this.\"\n\nShe gasped, squeezing her eyes shut as if in a final, desperate attempt to suppress the urge to start peeing. She struggled with her knickers, and I, perhaps less than gallantly helped her. As soon as she had one leg out of them, I sank quickly down on top of her and, without the foreplay I'd dreamed of enjoying, worked my way inside her.\n\nIt was not a moment too soon. I made contact with her bulging bladder almost at once, and in the same instant, I feel a gush of hot pee against my testicles, flowing with the force of an erupting geyser. I sank myself deeper into her as she released the pressure on her swollen bladder. With every stroke, I could feel the obstruction shrinking, growing steadily more slack, aware that my thrusts were actually helping her to empty out faster than she would normally have done.",
        "I felt a burning sensation in my genitalia, and within seconds I ejaculated inside her, the pleasure so intense that I was literally rendered blind for a period of several seconds.\n\nI started to relax, but prevented myself sinking down on top of Kate who was both hot and exhausted by her long struggle to cope with a full bladder. Her breaths were now deep and long, as if she too had enjoyed an orgasmic release. In a way, I suppose she had; the pleasure of banishing that appalling pressure between her hips had to be a wonderful sensation.\n\nI rolled to one side and found myself lying on a wet sheet. I inspected the area, and discovered that Kate had really soaked the bed, the wet area huge and still spreading.\n\n\"I don't think I'm going to be sleeping in my room tonight,\" she said in a tired voice.\n\n\"No,\" I agreed. \"Let's move into mine and worry about how to deal with this in the morning.\"\n\nKate nodded. \"Perhaps I can just tell them I was drunk,\" she suggested.\n\n\"If I offer to pay for the mattress, I don't think there will be any trouble.\"\n\nWe stood up, Kate in a wet skirt, me stripped of my dignity by the presence of trousers and pants gathered around my ankles. I pulled them back up while Kate kicked off her knickers, then we repaired to the adjacent room.\n\nKate took my arm as we entered, and said, \"Let's have a shower together and then get to bed. There are some things I want you to do for me.\"\n\n\"Pleasure,\" I said, aware that this was the night I had dreamed of since the day I first met Katherine Bond. I hoped it was to be the first of many. "
    ],
    "authorname": "bound2burst",
    "tags": [
        "omorashi",
        "pee",
        "watersports",
        "wetting",
        "fetish",
        "peeing",
        "piss",
        "pissing"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-secretary-who-had-to-pee-ch-05"
}