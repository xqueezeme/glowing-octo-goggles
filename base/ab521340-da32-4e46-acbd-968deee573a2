{
    "title": "Jerk Ch. 02",
    "pages": [
        "You should read \"Jerk\" before reading this, as this picks up exactly where that tale left off.\n\n****\n\nTim closed the door and turned to see her already pulling off her top, releasing her gorgeous tits. \"Same deal as before?\"\n\nPart of him wanted to accept the deal immediately, but he hesitated as he walked toward the couch, trying to summon up the courage to ask for more.\n\nShe must have sensed what he was thinking, because her eyebrows arched and she put her hands on her hips. Her expression was stern, but the only thing he could think of was how sexy she looked.\n\n\"Are you trying to push your luck for more?\" she finally asked after a couple more seconds of silence.\n\nSteeling his nerves, he nodded and answered, \"Yeah.\"\n\nShe let out a theatrical sigh and stared up at the ceiling for a moment. \"Okay, blowjobs instead of handjobs this time. One a day, for three days. Agreed?\"\n\n\"Deal,\" he answered, not willing to risk asking for more.\n\nShe shrugged as she unbuttoned her jeans. \"Oh well. At least I won't have to clean all the cum off my boobs. Why are your pants still on? Take them completely off &mdash; and your shirt, too.\"\n\nTim quickly whipped his shirt over his head, not wanting to miss any of the show as she pushed down her jeans, and then panties. She was nude by the time he kicked his underwear to the side. Not wasting a moment, she dropped to her knees and wrapped her hand around his cock.\n\n\"So, when was the last time you jerked off?\"\n\nIt just so happened that he'd gone to a friend's house the day before and come home so tired that he'd dropped off to sleep within a few minutes. \"Night before last.\"\n\n\"Make sure you warn me before you come. God, you're going to go off like a volcano after saving it for two days.\"\n\n\"I promise,\" he said, and then gasped when she licked the head of his cock while looking up into his eyes.\n\nShe chuckled at his reaction, and gave him another lick. \"Better than your hand, huh?\"\n\n\"Way better.\"\n\n\"You ain't seen nothing, yet.\"\n\nTim's head thumped into the back of the couch when she slid her lips down his shaft. Her mouth was like pure hot, wet heaven wrapped around him, and it only got better. She wiggled her tongue along his length as she pulled back to the tip, and then looked up into his eyes while suckling the head.\n\n\"Fuck, Ms...\" Her name escaped him as an especially strong suck ended with his cockhead popping out of her lips.\n\nShe grinned at him and said, \"Val, or Valerie. I suppose we should be on a first name basis, since I have your cock in my mouth, Timmy.\"\n\n\"That was incredible, V-valerie.\"\n\n\"As if you have anything to compare it to, but thanks. Now, let's see just how much cum you've managed to save up, Timmy boy.\"\n\nTim groaned as she took him in again &mdash; fast this time &mdash; all the way down to her hand at the root. Her lips slid back to the head, making a brief whooshing sound as the rim almost popped out, and then she plunged back down again.\n\nFingers digging into the couch cushions, he grunted, groaned, and gasped, fighting with all his might to keep his eyes open so he could watch. Her head bobbed rapidly over his lap, causing her hair to tickle his legs as it bounced from her efforts. Her tits brushed against his legs, adding to the sensation.\n\nIt was pretty much inevitable. In less than a minute, his balls tightened and the chilly tingle of impending orgasm shot all through his cock.\n\n\"Gonna come,\" he spit out in a rush.\n\nValerie pulled back to the head, sucking it hard and tonguing the ridge. Her hand pumped at the bottom of his shaft for a half-dozen strokes, and he was there.\n\n\"Gyahh!\" he cried out as he erupted in her mouth.\n\nShe let out a surprised-sounding moan that vibrated through his cock, setting off yet another powerful spurt of semen.\n\nOn and on it went. He just kept coming &mdash; a grunt escaping him with every pulse of his cock flooding her mouth with cream. After what felt like an eternity of wonderful agony, he offered up the last few dribbles he had left, went limp, and released a long sigh.\n\nVal let him go with one last slurp. \"Good heavens. I have never swallowed that much cum in my life. It was like a super soaker going off. I could feel it hitting the roof of my mouth.\"\n\n\"Didn't... Didn't think it was ever g-gonna stop.\"\n\nShe chuckled. \"Me either. It's a good thing you're a virgin, because you could probably get half a dozen girls pregnant at once with a load like that.\"\n\nTim felt the couch cushions shift and blinked his eyes open. Still twitching from his orgasm, he grinned as Valerie parted her legs wide on the other side of the couch. Two fingers centered over her clit and began to rub back and forth.\n\nShe crooked a finger of her other hand and said, \"Come here. Since you decided to up the stakes, you're going to help me out.\"\n\nIt took a lot of effort to sit up, but a naked woman playing with herself only inches away was good incentive. He scooted closer, eyes locked on her pussy.\n\n\"Three fingers, like this.\" She demonstrated.\n\n\"Like the Scout salute?\" he asked while miming her.\n\nHer fingers paused for a moment, and she laughed. \"Oh, if only a Scoutmaster could have heard that. Yes, just like that. Now slide them in my pussy.\"\n\nA little more scooting brought him deep within the V of her legs, and he pushed his fingers into her hot canal. Her walls squeezed tight around the digits, and she moaned.\n\n\"Now fuck me with them,\" Val demanded, and her fingers moved faster.\n\nTim pumped his fingers in and out of her, loving how hot and slippery she felt. His sensitive cock throbbed in protest, but he ignored it as best he could.\n\nShe reached up to squeeze her right breast and said, \"Faster. Come on. Faster.\"\n\nAfter a few seconds of trying to comply with that demand, he discovered that turning to face her more directly helped. The wet, squishy sounds of his fingers plunging into her merged with her moans and gasps. She pinched her nipple hard and arched her back.\n\n\"That's it, Timmy. Don't you dare stop,\" Val ordered in a breathless voice, her fingers blurring over her clit and slinging drops of wetness everywhere.\n\nFighting through, his muscles beginning to burn, Tim thrust his fingers into her with everything he had. She began to arch her back at an ever increasing frequency, and her head lashed back and forth.\n\n\"Ah! Ah! Fuck yes!\" The last word turned into a loud squeal, and her walls clamped down on his fingers like a vice as she climaxed.\n\nTim winced and let out a sharp gasp when she suddenly grabbed his wrist, nails digging in. She held his hand tight against her skin with the fingers buried deep, and bucked like crazy. Her breasts jiggled and bounced as she rode out the orgasm, ending with a high-pitched cry that trailed off into a squeak.\n\nHer hand trembled as she pushed his away, and continued to quiver even after she released him. Every single part of her body seemed to be twitching in sporadic waves, accompanied by loud pants for breath. Tim brought his fingers to his mouth and sucked them clean of her milky nectar &mdash; the taste and scent of her making him feel light-headed.\n\nEventually, she settled down from the heights and her eyelids fluttered open in time to see him licking the last of her juices from the back of his hand.\n\n\"Mmm, I needed that,\" she moaned. \"Like it?\"\n\n\"Yeah. Your pussy is so tight.\"\n\nShe let out a weak chuckle. \"Thanks. Taste good?\"\n\n\"Oh yeah. I love it.\"\n\n\"Well, so did you.\" She waved a hand toward her purse and said, \"Get my wipes.\"\n\nHe only took his eyes off her long enough to locate the package in her purse, and then handed it over. He went back to drinking in the sight of her in post-orgasmic bliss while she pulled out one of the wipes.\n\nAfter the first swipe over her pussy, she said, \"Why don't you go get me something to drink?\"\n\n\"Like what?\"\n\n\"Water. Diet Coke. Anything. I just need a drink.\"\n\nHe nodded. \"Okay.\"\n\nTim quickly discovered that walking through the apartment with his dick flapping in the wind was an odd sensation. The furthest he'd ever walked naked previously was a couple of steps at most. He grabbed a Coke from the refrigerator and opened it when he reached her.\n\nValerie took a drink, shivered, and moaned. \"God, that's almost as good as the orgasm. I haven't had a regular Coke in years. The diet just isn't the same.\"\n\n\"You don't need to be on a diet,\" he said as he stood next to the couch, feeling self-conscious and more than a little lost about what to do.\n\nShe grinned at him, and it seemed to him that it didn't have as much of a smirking quality as usual. \"Believe me, I do &mdash; but thanks. Get my panties for me.\"\n\nIt was a little disappointing to watch her pull on her panties, but she surprised him by not going further. She sat up and continued to sip her Coke, occasionally letting out a quiet moan. Not knowing what else to do with himself, he sat down on the opposite end of the couch and admired her body.\n\n\"What?\" she asked after a minute.\n\n\"I... Nothing,\" he answered, and shrugged.\n\nVal rolled her eyes. \"You are so helpless. Okay, time to go.\"\n\nTim gathered up his clothes and pulled them on while she dressed. When she slung her purse over her shoulder, she asked, \"Same time tomorrow?\"\n\nHe nodded. \"Yeah.\"\n\nShe picked up what was left of her Coke and walked to the door. He followed, not exactly sure why. She reached out for the doorknob, but didn't open it. Instead, she looked back over her shoulder at him.\n\n\"You know, you're a nice guy. If you could get over being such a backwards nerd, you could probably get someone to play with that for you without getting punched first.\"\n\nAnd with that, she was gone.\n\n****\n\nThe doorbell rang on schedule, and Tim pulled it open to find Valerie dressed in a ribbed cotton t-shirt that really showed off her tits and a pair of capri pants. As she walked in, she gave his already rock-hard cock a squeeze and chuckled.\n\n\"Ready to go, I see.\"\n\n\"Uhm, yeah,\" he said, his cheeks warming as he shut the door.\n\nShe put down her purse and held her hands out to the side. \"What do you think?\"\n\n\"You look great. You changed your hair.\"\n\nValerie's eyebrows arched upward. \"Hmm. Guess you are paying attention to more than my tits. Like it?\"\n\n\"Yeah.\"\n\n\"Well, at least somebody noticed.\" She snapped her fingers. \"Clothes off.\"\n\nHe stripped down, not taking his eyes off her for a moment. His t-shirt, shorts, and underwear took only a few seconds to remove, allowing him to enjoy the show of her undressing.\n\nWhen Valerie wriggled out of her pants, he saw that she was wearing a pair of lacy, pale yellow panties that were far sexier than anything she'd worn before. Rather than just jerking them down, she turned to face away from him and slowly &mdash; sensually &mdash; slid them down her legs. Once they were past her knees, she let them pool at her ankles and stepped out of them.\n\nVal swayed her hips back and forth, her sexy bottom moving in the most hypnotic way and making his hard-on throb like mad. Then she turned around to face him and strutted toward the couch.\n\n\"So hot,\" he muttered as she stepped up in front of him at the couch.\n\n\"You know what? Come on,\" she waggled a finger to him. \"Let's go to the bedroom.\" Without waiting for him to rise, she turned and walked toward the hallway. \"Don't get any ideas, though. I just want to be comfortable.\"\n\nA raging hard-on bobbing as he walked was an even more odd feeling than when he'd done it while flaccid the day before. He was right behind her when she stopped at the side of his unmade bed and patted the mattress.\n\nTim climbed into the bed and lay down just in time to see her pick up one of the many nudie magazines lying on the nightstand next to the bed. His face burned as she flipped through a few pages before putting it back down.\n\n\"You haven't been using those, have you? You saved it all up?\"\n\nAs hard as it was to resist, he knew now how much better it felt when he didn't jerk off before she showed up, so he nodded.\n\n\"Good.\"\n\nTim's heart raced as a real, live, naked woman climbed into his bed. Of course, he knew it wasn't going to be any different than on the couch, but it was still more exciting, all the same. She reached down behind one knee, pulling up, and he bent his leg in response to the silent prompt. He folded the pillow in half and put it back behind his head as she slowly dropped down onto her hands. She smiled at him, and then darted forward to tickle his balls with her tongue.\n\nHe gasped, and his muscles contracting caused his hard-on to lift away from his body at nearly a 45 degree angle. It then came down and slapped against him as her tongue continued to wash over his balls.\n\nHis cock lifted to meet her tongue when she moved upward, tracing the thick ridge running up his shaft all the way to the tip. Once there, she teased the bouncing organ with quick, feather-light laps that had him groaning with every breath.\n\nInstead of getting straight down to business, she continued to lick his shaft, making it glisten with her saliva. She curled her tongue around the head sometimes, and others she gave it kisses that bordered on a suck. When a drop of pre-cum welled up, she stood his organ straight up and scooped it up with her tongue while staring deep into his eyes.\n\n\"Feel good?\" Val asked, her hot breath washing over his cock before she gave it another lick.\n\n\"Really good,\" he answered, the words a half-groan.\n\nShe engulfed him in her hot mouth then, but only for a single, slow suck. Once the head slipped free of her lips, she went back to lapping him. He didn't mind in the slightest, because she looked incredible between his legs with her tongue darting everywhere.\n\nAfter a little while of that, she sucked him again &mdash; fast and deep. A pop sounded when the head escaped her lips, and she gave the tip a single, broad-tongued lick before wrapping her lips around him again.\n\nTim groaned and moaned, his lips lifting toward her hot mouth as she kept teasing. She would suck him for three or four strokes, then pause to tongue his balls. Then she would suck just the tip, rotating her head around it and tickling the slit with her tongue before swallowing him. Slowly but surely, she built up the itch in his cock while he looked down at her in fascination.\n\n\"Getting close?\" she asked when his groans began to deepen.\n\n\"Yeah.\"\n\n\"Give me all that hot cum.\"\n\nTim growled and bunched up the sheets in his clenching fists when her lips locked around his cockhead, sucking hard. She bobbed over him with short strokes, keeping his organ pointed straight up and moaning around him.\n\nThe incredible headjob did the trick. \"Gonna come.\"\n\nA far louder moan vibrated through his cock, and he was there. The lurch of his hips as he climaxed must have pushed his cock into her throat, because she let out a croak and released him for a moment, semen dribbling from her lower lip onto his shaft. After a sharp intake of breath and a swallow, she took him in again before his second ejaculation could burst forth.\n\nOnce again, he pumped a full day's worth of saved up cum into her talented mouth. As before, she didn't waste a single drop, swallowing it all until he had no more to offer.\n\nTim let out an inarticulate, high-pitched, and thoroughly embarrassing sound as he slipped free of her lips. She giggled and sat up over her knees to squeeze her breasts and moan. \"I think that was just as much as yesterday.\"\n\nThrough half-lidded eyes, he watched her snatch up the other pillow from next to his head, and then sink down onto her butt. She reclined, putting the pillow behind her head at the foot of the bed, and snapped her legs wide apart.\n\n\"No falling asleep. Time to get over here and help me out again, Timmy,\" she said while tracing the part of her nether lips with a fingertip.\n\nIt was even harder to get up than the day before, because she hadn't given him as much time to recover. When he tried to move close enough to fill her pussy full of his fingers, she shook her head and tugged on his hand, pulling it toward her breasts.\n\nHe thought that she wanted him to suck her tits at first, which he had absolutely no problem with. She dissuaded him of that notion when she pushed down on his head, forcing it between her thighs.\n\n\"Lick it. Lick my pussy,\" she demanded.\n\nAlready feeling drunk on her womanly perfume, he snaked out his tongue and shuddered from the taste of her &mdash; straight from the source for the first time. He lapped her, fascinated by the texture of her folds sliding beneath his tongue, and excited by her moans.\n\n\"Mmm, that's good, but you need more than one stroke, Timmy.\" After a few seconds, she said, \"Try drawing the alphabet with your tongue.\"\n\nThough it felt a little silly, he gave it a shot, tracing the letters A and B. A shudder rippled through her body halfway through the C, and she gasped.\n\n\"Oh my. That works better than I thought it would.\" She chuckled and added, \"Keep that up.\"\n\nThe alphabet song ran through his head as he licked it into her sweet pussy, and he looped back to the beginning after reached Z. Valerie's moans and whimpers grew louder, and emerged more frequently with every passing minute. When he hit the end again, he tried numbers instead.\n\n\"Oh, that's it. Faster. My clit.\" She tugged on his head, centering his mouth over the apex of her nether lips.\n\nThough his neck was aching, he homed in on the swollen bud, and in a flash of inspiration, tried to duplicate what she did when she played with herself. He wiggled his tongue back and forth, rolling her clit beneath its protective hood as fast as he could.\n\nValerie let out a long, broken moan, and tugged on his head until he lifted up ever so slightly. He discovered that he could get his tongue moving even faster with just the tip stroking her, and the way her fingers tightened into his hair certainly seemed to indicate that she liked it.\n\nHis tongue slowed as the repetitive motion caused it to stiffen. He switched to an up and down flicking motion, which alleviated his problem, and her squeal at the change in sensation made him grin as he licked her. After only a few seconds of that, her nails dug into his scalp and she ground his face into her pussy.\n\n\"Suck it. Suck it. Suck m-my clit!\"\n\nEyes closed and watering a little from her grip, he locked his lips over the top of her pussy, slurping in her hood and closing his lips around it. He'd barely applied suction when she let out an ear-piercing shriek &mdash; abruptly cut off by her thighs clamping down around his ears.\n\nCaught in the trap of her legs and clawed fingers, all he could do was ride her bucking hips as she screamed and climaxed. Half the time, he was held so tightly against her that he couldn't manage to catch a breath. After a somewhat frightening minute or so, her legs lost their strength and she sucked in a ragged gasp.\n\nTim sat up and drew in several quick, deep breaths. Valerie continued to twitch and tremble with both hands covering her pussy. He could feel her juices smeared all over his face cooling in the breeze from the ceiling fan &mdash; from the bridge of his nose to the tip of his chin, and far out onto both cheeks.\n\nA full-body lurch ripped through Val and she yelped before going completely limp with a pitiful sounding whimper.\n\nThe way she was breathing in loud, rapid puffs frightened him a little. \"Are you okay?\"\n\nShe swallowed, then moaned, \"Mmm hmm.\"\n\n\"Do you want something to drink?\"\n\nHer eyes still closed, she answered with a weary nod, and then went back to panting for breath.\n\nTim was more than a little surprised that he was half hard when he stood up. It usually took quite a while for him to get an erection again after coming. The steel had drooped back out of him by the time he returned with a Coke for Valerie.",
        "\"Thanks. Just sit it over there. I can't get up yet. Whoo!\" she said when she saw him return to the bedroom.\n\nHe couldn't get over the sight of her lying at the foot of his bed, her face flushed red and sweat beading on her forehead. He couldn't hold back any longer and asked, \"Was I good?\"\n\nShe chuckled. \"I haven't had an O like that in a while. What you lack in practice, you certainly make up for with enthusiasm.\"\n\n\"I loved it.\"\n\nShe smiled and then a groan escaped her. \"Help me up. I need that drink.\"\n\nHe took her offered hand and tugged. Once she was upright, she scooted back against the footboard and pointed at the Coke.\n\nWatching her slake her thirst &mdash; naked at the foot of the bed &mdash; sent blood pumping between his legs once more. This time, it didn't stop at half mast, and instead rose to full erection. The dull ache running through it was a little uncomfortable, but not enough to distract him from enjoying every moment of watching naked woman that he could.\n\nShe noticed the change after a while, and her eyebrows popped up. She shook her head and said, \"Every time the wind blows at your age.\"\n\nNot knowing what else to do, he shrugged, wearing a sheepish grin.\n\n\"You're already getting more than our deal, so don't get any bright ideas,\" she said, and then took another drink.\n\nHe had all sorts of bright ideas, but nodded his head in acknowledgment anyway.\n\n\"Okay, time to go.\" She pointed at him and said, \"You should probably go wash your face. I made a bit of a mess.\"\n\nHe skipped that suggestion and followed her into the front room to endure the bittersweet ritual of watching her clean up and get dressed. Once she'd straightened her hair a little, she picked up her purse, glanced down at his still naked and erect cock, and said, \"Tomorrow, then.\"\n\n\"Tomorrow,\" he repeated. It was bittersweet to watch her walking out the door, knowing that she would be returning only one last time. Following her advice, he went to take a shower and resisted the urge to masturbate, wanting to make sure he saved every drop of cum possible for her.\n\n****\n\nValerie slipped in the door right on time. Tim couldn't help but wonder at the way she was dressed. She had on a rather conservative navy blue blouse, and a matching skirt that reached down to only a few inches above her knee. She was wearing black stockings and heels, though. It was sexy, but it just wasn't what he was used to.\n\nShe bit her lower lip for a moment, and then said, \"Go sit down.\"\n\nTim took his usual place on one end of the couch, and pulled of his shirt. When he reached for the button on his shorts, she stopped him.\n\n\"Wait. We'll get to that.\"\n\n\"Okay,\" he responded, a little perplexed.\n\nShe walked over to the couch, her heels clicking on the floor, and said, \"Not what you were expecting, huh? Just wait.\"\n\nA crooked grin decorating her face, she started popping open buttons on her blouse. After the third one, he saw that she was wearing a bra for the first time. It was black, lacy, and sheer enough to see hints of her skin beneath. The rest of the buttons were soon unhooked, and she shrugged off her blouse. She held it by one sleeve for a moment, and then let it drop so it fluttered to the floor at her side.\n\nNext, she reached behind her with both hands, and he heard the sound of a zipper sliding down. A little more manipulation caused the top of her skirt to loosen, and he assumed it was a button that she'd opened. Slipping just her thumbs under the material, she slowly pushed the skirt down.\n\nTim's eyes widened when the retreating cloth revealed a garter belt &mdash; black like her bra. Next was a pair of panties that matched the rest of the ensemble, and even more sheer than the bra. He could easily see the outline of her pussy beyond the gauzy barrier. It was when she let the skirt slither down her legs that he sighed in surprised pleasure. Her stockings were thigh-high, and supported by garters.\n\nShe stepped out of her skirt, struck a pose with her hip cocked out to the side, and asked, \"What do you think?\"\n\n\"That is the hottest thing I've ever seen in my life,\" Tim said with his voice full of both arousal and awe.\n\nHer smile broadened. \"Thought you might appreciate it. Scoot over to the middle of the couch.\"\n\nTim moved over, and Valerie walked toward him with her hips swaying. She stopped right in front of him and ran her hands down her sides to her garter belt.\n\n\"No touching me &mdash; or yourself &mdash; until I say you can. Let's see how hard you come when you're teased a little first.\"\n\nHe nodded and swallowed hard. His cock was already throbbing like mad and demanding the attention she'd just denied him.\n\nValerie leaned forward, placing her hands on either side of his head on the back of the couch. She swayed back and forth, her breasts a hypnotizing pendulum right in front of his eyes. She chuckled and suddenly leaned in even closer, rubbing her tits on his face.\n\nA quick push helped her stand up straight again, and she lifted her right foot up onto the couch cushion next to him. Her hips bumped forward in a slow, sinuous motion while she caressed her body with both hands, ending with a tug on her panties that pulled them even tighter against her nether lips.\n\nBreathing hard and deep, it was all Tim could do to keep from reaching down to squeeze his cock. It got even more difficult when she braced a hand against the back of the couch again, and used the handhold to assist her in lifting her other foot up onto the couch.\n\nHigh heels poking into the cushions, she edged forward until her panty-clad sex was right in his face. He could smell the evidence of her arousal as she circled her hips, sometimes even brushing his nose against her panties.\n\n\"Is that cock aching yet?\"\n\n\"Yeah.\"\n\nRather than responding, she instead squatted down and started rubbing her pussy over his chest.\n\n\"I think my panties may be getting wet. What do you think?\"\n\nHe could most certainly feel the warm, damp spot on the cloth as she ground her hips against him. \"Feels like it.\"\n\n\"Do you think I'm sexy?\"\n\n\"Really sexy.\"\n\n\"You want me to suck that cock for you so bad, don't you?\"\n\n\"Yes,\" he answered, though he was actually wishing he could shove it in the pussy she was rubbing against him.\n\n\"Not yet.\"\n\nValerie sank down to her knees, and Tim groaned as she settled her bottom over his raging erection. His eyes rolled up in his head as she began to dry-hump on him.\n\n\"My, so hard.\" she said, and then let out a little laugh. Val leaned forward, continuing to grind against his hardness while giving him another close-up of her breasts. \"Let's see what happens when I do this.\"\n\nTim grinned as she reached behind her back, unhooking the clasp of her bra. She slipped the straps down off her shoulders, and then shrugged off the lacy covering to reveal her breasts. To him, the outfit was even sexier with her bare-breasted, but otherwise still covered &mdash; if not by much &mdash; in black lace.\n\n\"I felt that throb,\" she said as she tossed the bra off to the side. \"You really do love my tits, don't you?\"\n\n\"They're perfect.\"\n\nValerie swayed back and forth, sometimes making circles with her hips, and always massaging his cock with her butt. She ran her hands over her body, squeezing her breasts, tweaking the nipples, and slipping fingers beneath the elastic band of her panties. Tim ended up sliding his fingers into the cracks between the couch cushions and grabbing on to resist the urge to squeeze the tits jiggling in front of him.\n\nHe wasn't sure whether to be disappointed, relived, or excited when she slipped off his lap, giving him the briefest glance at a darker spot on her panties in an interesting location.\n\n\"Driving you crazy, isn't it?\"\n\n\"Yeah,\" he answered, still holding on to the couch cushions.\n\n\"Bedroom, but you still can't touch yourself. Don't think you can sneak one in, either.\"\n\nTim levered up from the couch as she sauntered toward the bedroom &mdash; heels clicking on the floor in a distinctive, sexy cadence. She glanced back over her shoulder every other step or so, making sure he continued to follow her order to abstain.\n\nUpon reaching the bed, she turned and waited for him to reach her. Tim breathed a sigh of relief when she reached for the button of his shorts. She took her time popping open the button, and then tugged on the zipper. His erection did most of the work for her, since it was straining to escape from the confines of his shorts anyway.\n\nValerie rubbed her finger over the damp spot where he'd leaked pre-cum into his briefs, making him groan. She chuckled, and then jerked down his shorts and underwear without further preamble.\n\nWhile Tim stepped out of his shorts, Val sat down on the bed. She nodded toward the pillow, and he took it as an indication to lie down. As soon as he reclined, she rose up to her knees.\n\n\"Hmm... I was going to tease a little more, but you look like you're fit to burst.\"\n\nEven though he was thoroughly enjoying the show, she was right. \"I... It's okay. It's hot.\"\n\n\"A deal's a deal, though,\" Valerie said before sinking down to the mattress and settling in next to him.\n\nTim moaned as she wrapped her hand around his neglected cock, and then gave the head a few sloppy licks. Long laps up and down his shaft followed, and then she kissed the tip while looking up into his eyes.\n\n\"You behaved and did what I told you, so anything special you want? Want to come all over my face this time?\"\n\n\"Do you like that?\"\n\n\"Not really,\" she answered, and then gave the head of his cock a swirl of her tongue. \"Guys seem to get off on it, though.\"\n\n\"No, I really like coming in your mouth.\"\n\nValerie slipped her lips down over his cockhead and then let it pop out. \"Well, that works for me. So, nothing special?\"\n\nHe shook his head. \"I love the way you suck it.\"\n\n\"Okay then.\" With that, she took him in her hot mouth, and at the same time, slipped her hand in her panties.\n\nTim was torn between watching her suck his cock and the vision of her playing with herself. For some reason, he found it even hotter to watch her masturbate with her panties still on. She started out slow, letting him feel her lips caressing every inch of him &mdash; almost to the root. She even choked a little on one downstroke, leaving thick strands of spittle decorating his shaft when she released him to swallow.\n\nAfter the long tease, he felt the first tickles of an impending climax not long after she took him back in her mouth. Her fingers moved faster beneath her panties, and she began to suck harder.\n\n\"Give me that hot load, Timmy.\" She sucked him in deep again and paused when she returned to the tip to add, \"Just do it. Fill my mouth full of cum.\"\n\nTim stiffened and gasped when she began rapidly bobbing her head over his lap. She was still sucking hard, and the air rushing in from the corners of her mouth at the top of every suck added yet another sensation to the already incredible feeling. As much as he wanted this last blowjob to last, he knew he couldn't hold back for long.\n\nVal moaned around him, her fingers moving fast beneath her panties. He tried to hold back when he felt his balls tighten &mdash; but only for a few seconds. She knew what she was doing, and resisting any longer was simply futile.\n\n\"About to...\" He wasn't able to finish when an especially strong suck caused him to gasp.\n\nValerie slid her lips back up his shaft to give him a fast, sloppy head-job. Her hand pumped at the bottom of his shaft, squeezing tight. For what felt like an eternity, he teetered on the brink of oblivion.\n\nThen he tumbled over.\n\nTim roared and his hips lifted up from the bed, pushing his cock deeper. Her stroking hand froze in place, keeping him out of her throat, and she accepted his cum blasting against the roof of her mouth with a long moan.\n\nHe came hard and growled from the intensity of the pleasure. She kept sucking, looking up into his eyes with an expression mingling delight and amusement, until he couldn't take it any more.\n\nValerie released him with a final slurp when he tried to push her away with a weak and trembling hand. Her hand slipped out of her panties, and she caressed his balls with the slippery digits, causing him to suck in a sharp gasp. \"Surprised these are still here after that. Good?\"\n\nIt took Tim several seconds of panting before he could even manage a nod, which drew a brief giggle from her. His eyes closed and he groaned, twitching from the throbbing of his still-sensitive manhood. Feeling the mattress shift, he forced his eyes open to see her popping open the clasps on her garters.\n\nOnce the straps dangled next to her shapely legs, Valerie lay back on the bed and pulled off her panties. He gasped and shivered when she cat-crawled over his body and dropped the lacy garment onto his face.\n\nThe scent of her made his head swim, and he could feel dampness on his chin.\n\n\"Want to see if you remember what you learned yesterday?\" she asked while rubbing her wet folds against his chest.\n\nThe lethargy of his orgasm evaporated in light of that offer.\n\nShe knew the answer before she had even asked the question. As soon as he scooted over enough to make room, she lay back and parted her legs wide. \"I know you like my tits. What do you think of my pussy?\"\n\n\"I love it. I love licking it,\" he said as he moved into position and lowered his face between her thighs.\n\n\"Then don't make me wait.\"\n\nHe had no intention of that whatsoever. Val put her hands on the back of his head and pulled him tight against her sex. He groaned as he got the first tangy taste of her, the sound mingling with her moan.\n\n\"That's it, Timmy. Show me how much you like it.\"\n\nFeeling a great deal more confident than he had the day before, he dived in with gusto. Valerie moaned and whimpered, her body writhing beneath him, though he only noticed it in passing, as he was devoting every ounce of his concentration to his flashing tongue.\n\n\"Oh, that's good,\" she gasped. \"You really want to make me come, don't you?\"\n\nTim sucked on her folds, tickling them with his tongue. \"Mmm hmm.\"\n\n\"Keep it up.\"\n\nIt wasn't long before her fingers tightened in his hair, and he knew what that meant. Her sharp whimper when he gave her clit a flick of his tongue was simply confirmation.\n\n\"Faster. Lick it,\" she cried out in a breathless, husky voice.\n\nAmazed by how quickly she seemed to be climbing toward a peak, he doubled down. His tongue flicked from side to side, up and down, and in circles, pressing hard over her swollen bud. Her clit rolled under his tongue, and her bottom lifted off the bed.\n\n\"God &mdash; suck it,\" she cried out, the tone of her voice pleading.\n\nTim latched on, sucking hard and wiggling his tongue. Valerie let out a rapid series of whimpers, each one louder and higher-pitched than the last, and then loosed a piercing screech.\n\nHe was ready this time, though it didn't help much. Once again, he was in for the ride of his life, clamped tight between her thighs with her fingers fisted in his hair. He tongued her as best he could, causing her already quivering body to shake even more.\n\nVal let out one final scream as she pushed him away. Once again, he sat up with a wide smile on his face, watching her quake as her orgasm subsided. After a few seconds, he slipped out of the bed and into the kitchen.\n\nShe smiled at him when he returned to the room with a can of Coke. \"Thanks.\"\n\n\"You got there fast,\" he said as he put the can down on the nightstand.\n\n\"Don't get too full of yourself. I warmed myself up pretty good with my fingers.\" \n\nTim's shoulders slumped a little. \"Oh, okay.\"\n\nShe shook her head, and then moaned. \"It was good though. At least you listen when I tell you what I want. It doesn't matter how hot I am if a guy is just slobbering around down there. Help me up.\"\n\nValerie groaned as he tugged on her hand to help her rise. As soon as she sat up against the headboard, he opened the Coke and held it out to her.\n\n\"Not bad at thinking for yourself, either,\" she said as she took the drink.\n\nTim stood next to the bed, his face still slippery with her juices, not sure what to do. After a few seconds, he located her panties and picked them up. She waved her hand in a dismissive gesture when he held them out, then patted the bed next to her. \"Sit down. It's your bed.\"\n\nStill holding on to the panties, he nervously slid in beside her. She rolled her eyes and took another drink.\n\n\"So, have we forgotten about that little incident with my thick-headed son?\"\n\nHe smiled and nodded. \"Yeah.\"\n\nShe stiffened, let out a sharp moan, and then reached between her legs to rub her folds. \"Whoo &mdash; I'm still tingling. God, I need to start dating again.\"\n\n\"Why don't you?\"\n\nHer eyebrows lifted. \"Well, Jason is a bit of a handful, and frankly, my ex left me with a rather poor opinion of men in general.\"\n\nHe realized he'd hit a sore spot. \"Sorry.\"\n\nShe shrugged. \"It's okay. I'm about as over it as I'm going to get.\"\n\nTim did his best not to stare as she sat next to him sipping her Coke, but it was rather difficult. With her inches away, still on full display in sexy lingerie, he couldn't keep his eyes from wandering.\n\n\"You can look. May as well get all you can,\" she said with a little laughter in her voice.\n\nIt seemed like sound advice, so he did exactly that. Inevitably, it caused a reaction, and blood started rushing between his legs again.\n\n\"Young and full of cum,\" she said when she noticed his manhood straightening. To his surprise, she reached out and ran her fingertips over him, hastening the process.\n\nValerie sat her drink down on the nightstand and curled her fingers around his hardening shaft. He swelled even faster and couldn't hold back a moan &mdash; hoping against hope for a bonus blowjob. Once he was rock-hard in her hand, she blew out a long, slow breath while she stroked him and muttered, \"This is such a bad idea.\"\n\n\"Huh? What?\"\n\n\"But right now, I don't care.\"\n\nTim's heart beat fast in anticipation as she put her hands beneath her and rose up onto her knees. Then she swung one sexy, stocking-clad leg over him and straddled his hips. His eyes shot wide open and his jaw dropped when she reached down and stood his erection straight up. A moment later, a long, high-pitched groan passed his lips as she sank down on him.\n\nThe feeling of her pussy sliding down over him was far above and beyond anything he could possibly compare it to. Her walls caressed every centimeter of him &mdash; wonderfully warm and slippery. Once her nether lips wrapped around the base of his shaft, she let out a long moan and the wonderful embrace of her canal tightened even more. His cock throbbed hard as he stared in awestruck fascination at it buried balls-deep inside her.\n\n\"God, you're hard as a steel bar,\" she said as she put her hands on her knees and flipped her hair back over her shoulder. \"So much for that virginity &mdash; huh, Timmy?\"\n\n\"It feels so good,\" Tim responded between quick, deep breaths.\n\nShe wiggled her hips and moaned. \"So do you. God, I needed this. I've been thinking about it all this time, knowing you were a virgin.\"\n\n\"You have?\"\n\nVal rocked her hips forward and back, stirring his cock inside her and tugging at the root on the backstroke. \"I probably shouldn't tell you this, but I've been getting myself off thinking about this ever since that first handjob. You've been giving my vibrator a real workout, Timmy.\"\n\nNot knowing what to say, he could only grin in response before letting his eyes drift back down to her jiggling breasts and her pussy filled with his cock.\n\n\"Like that?\" she asked as she picked up the pace.\n\n\"It's great.\"\n\n\"Not too great, I hope. Tell me if you're getting too close. Don't ruin this for me.\"\n\n\"Okay.\"",
        "With that, she really started riding him. Tim grunted and groaned as she rocked her hips hard. Her right hand left her knee to rub her clit, and a loud whimper escaped her as she threw her head back.\n\nHer voice broken from the effort she was expending, Valerie said, \"I don't think I've ever had a cock this hard before. Fuck. Not hurting you, am I?\"\n\n\"No. I love it,\" he answered, even though the pull on the root of his cock was uncomfortable. The feeling of being buried inside her and the pleasure he could see in her expression more than made up for it.\n\n\"Good thing, because I don't think I'm going to be able to hold back. Want to see me come all over your cock, Timmy?\"\n\n\"Fuck yeah.\"\n\n\"Then keep that cum in your balls until I get there. It's probably not going to take long.\"\n\nVal's fingers moved faster over her clit and she rocked back a little farther with the next stroke. Tim clenched his teeth when the unnatural angle caused a twinge of pain, but ignored it. She kept up with the longer strokes, building speed and strength with every passing moment.\n\nA trickle of wetness meandered down the cord separating his family jewels at about the same time as she began to grunt and whimper in growing bliss. \"Oh. Oh. Oh, fuck yeah. Please don't come. Please don't come.\"\n\nThough the first tickles were spreading through the head of his cock buried in her depths, he didn't feel as if he was going to explode any moment. \"Are you close?\"\n\n\"Mmm &mdash; so close. Going to come on your cock.\"\n\n\"Yeah, do it.\"\n\nAny chance of him edging closer to orgasm vanished when she went completely wild. He winced every time her hips slammed back, but he couldn't take his eyes off the sight of her features tightening and her breasts bouncing &mdash; sometimes making audible claps due to the ferocity of her undulation atop him.\n\nHe endured the onslaught for close to a full minute as her fingers flashed over her clit. Her breaths turned into panting whimpers that increased in frequency until she threw her head back and screamed in ecstasy.\n\nTim's eyes widened and his muscles clenched when her pussy clamped down on him. For the briefest of moments, a panicked thought that she was going to pinch it off flashed through his mind. Then, she screamed again and her head snapped forward. Fingers slippery with her juices dug into his leg as she lurched from waves of orgasm crashing through her.\n\nHe couldn't help but smile as he got his first good look at her coming hard. Her face was bright red. Her eyes were closed tight. A steady stream of whimpers, squeals, and high-pitched grunts tumbled from her lips. Her hands slid forward, and her body followed. Her cheek was hot when it settled against his chest. On a whim, he tentatively wrapped his arms around her.\n\nValerie let out a contented moan when he embraced her, though it transformed into a sharp gasp before it ended. His cock was still deep inside her, and her walls sporadically clenched around it as the orgasm that gripped her went on and on.\n\nHer voice was weak and somewhat distorted by her cheek pressed against him when she muttered, \"Oh wow.\"\n\n\"That was unbelievable,\" he said.\n\nShe moaned, \"Mmm hmm,\" and it was several seconds before she spoke again. \"You didn't come?\"\n\n\"No.\"\n\n\"Good boy,\" she said, and then followed it with a slow chuckle. Levering up on unsteady arms, she added, \"Because I want more.\"\n\nShe didn't waste any time, sitting up over his lap and sliding a hand between her legs at the same time. Another trickle of her juices ran down his scrotum, meandering through the wrinkles. \"Think you can keep it from going off long enough for me to come again?\"\n\n\"I hope so.\"\n\nVal shivered and closed her eyes for a moment. \"Me too.\"\n\nTim let out a long, pleasure-filled sigh as she started rocking on his cock again. This time, after a few strokes, she switched to circling her hips, which moved his organ more inside her. His muscles tightened, trying to pull his cock back toward his body.\n\nValerie's eyes lit up and she said, \"Ah, yeah. Do that again.\"\n\nHe gave another squeeze &mdash; on purpose this time &mdash; and she let out a high-pitched moan.\n\n\"Mmm, it feels like it's swelling up twice as big when you do that.\"\n\n\"Do you want me to keep doing it?\"\n\n\"Mmm hmm. Not all the time, though. Surprise me.\"\n\nValerie's breathing picked up, and she squealed the next time he flexed his muscles to make his cock jump inside her. Soon after, she began to gasp as her pleasure mounted. Her hips and fingers returned to the frantic pace she'd adopted just before reaching her peak earlier &mdash; but only for a few seconds.\n\nTim gasped when she started bouncing on his cock.\n\nFor the first time, she was truly fucking him, rather than riding him. The feeling of her tight, slippery canal sliding over his shaft turned every indrawn breath into a gasp, which then emerged as a grunt. Her breasts bounced everywhere, and her butt slapped against his legs. Whimpers and moans tumbled from her lips in ever quicker bursts as Tim felt the tingles in his cock intensify.\n\nValerie drove his butt down into the mattress with every bounce on his cock &mdash; her fingers a blur over her clit. Though he was fighting it with every ounce of his will, Tim knew he couldn't possibly hold out much longer. It was only then that he thought about not wearing a condom.\n\nSucking in a worried gasp, he warned, \"I'm getting close.\"\n\n\"Yes, almost there,\" she cried out.\n\n\"No, I'm about to come inside you,\" he reiterated through clenched teeth, thinking she must have misunderstood him.\n\n\"Yes! Yes! Give it to m-m-me!\"\n\nHe didn't have much choice at that point.\n\nTim growled and his hips lifted, slamming up into her at the same time as she was coming down on him. The loudest clap yet sounded as their bodies clashed, and that was it. He roared, blasting cum into her depths as she simultaneously shrieked in ecstasy.\n\nValerie fell forward, continuing to cry out as he pumped every drop he had to offer into her tight embrace. The bedclothes pulled tight between their hands as all four clenched into the sheets. Tim's vision went dark at the edges, and his cock continued to pulse long after he was sure there was nothing coming out. After a weary, but satisfied-sounding whimper, Val's weight settled on him.\n\nThey both panted for breath and twitched from the aftershocks for quite some time before she moaned and followed it up with a chuckle. She pushed up with her arms and his softening, sensitive cock slipped from her.\n\nTim opened his eyes after the moment of shock faded to see tendrils of cum dripping from her pussy down onto his cock. Val looked down and laughed before saying, \"Still had quite a bit left for me, didn't you?\"\n\n\"Uh huh. But what if you&mdash;\"\n\nShe cut him off, guessing what he was going to say. \"My tubes are tied. I'm not crazy, Timmy.\"\n\nRelieved, he let his head drop back onto the mattress and smiled. \"That was incredible.\"\n\n\"Mmm &mdash; I got off pretty hard too. I need to go tinkle.\"\n\nValerie cupped a hand between her legs and slipped out of the bed. Tim turned to watch her sexy butt as she walked out of the room, and then gave in to his eyes wanting to close.\n\nHe started when she returned, having almost dozed off. He couldn't help a sigh when he saw her sit down on the bed to pull her panties back on.\n\n\"Oh, stop sounding so sad,\" she said as she stood up.\n\nThe sight of her still bare-breasted in her lingerie helped with that. \"Okay,\" he said as he sat up and smiled.\n\nA crooked finger beckoned him and she said, \"Come here.\"\n\nTim stood on still-weak legs, and she slipped a hand behind his back, pulling him closer. Chills shot all through him as she gave him the briefest of kisses.\n\n\"That was fun, Timmy. Not a word about who got your virginity. Right?\"\n\n\"I won't tell anyone.\"\n\nShe patted his cheek. \"Good boy.\"\n\n\"Do you want another drink?\" he asked, hoping to encourage her to stay a bit longer.\n\nShe saw through the subterfuge. \"One for the road &mdash; yes. Don't try to make more of this than it is, Tim. It was just sex. Good sex, but just sex.\"\n\n\"I know.\"\n\n\"Go get me that drink, then.\" She twitched her eyebrows and turned to saunter out of the room with him hot on her clicking heels.\n\nValerie had already put on her bra and pulled up her skirt when he returned with her Coke. She turned away from him and said, \"Put it on the table and zip me up.\"\n\nTim pulled up the zipper and hooked the button. While she tugged at her skirt to situate it, he bent and picked up her blouse.\n\n\"Thanks,\" she said when he held it out to her. She finished dressing, slung her purse over her shoulder, and grabbed the Coke. \"Time to go, I guess.\"\n\n\"Guess so,\" he said and offered a half-smile.\n\n\"I meant what I said the other day, Tim. You're a nice guy. Problem is, no girl is going to find that out as long as you keep acting so backward.\" She reached down and gave his flaccid member a bump with her finger. \"It would be a shame for a nice cock like this to go to waste.\"\n\nShe smiled at him, turned around, and headed out the door.\n\n****\n\n\"The hell?\" Tim muttered as he awakened. A bleary-eyed glance at the alarm clock revealed it was 6:30 at the same moment as the doorbell that had awakened him repeated.\n\n\"Hang on,\" he hollered toward the front room when the chime sounded once more. Pulling on a pair of pants, he stomped to the front door and jerked it open just as the doorbell rang again.\n\nAfter a few seconds of him staring at her, Valerie asked, \"So, are you going to invite me in?\"\n\n\"Yeah.\" He answered as he stepped aside.\n\nShe started toward the couch, and as soon as the door closed, she said, \"Well, we both know that there's a better than average chance Jason is going to do something stupid again.\" She put down her purse and her lips curled into a sultry smile as she walked backwards toward the bedroom. \"Why don't we just get things out of the way before that happens this time?\"\n\nHe caught up with her before she passed the bathroom door.\n\n****\n\nHope my first continuation of a story got you heated up in all the right places. Please take a moment to vote. That's the bread and butter of a free author. Comments, emails, story favorites, and author favorites are jam and a side of bacon, so feel free to turn it into a grand slam breakfast with one or more of those."
    ],
    "authorname": "RejectReality",
    "tags": [
        "nerd",
        "milf",
        "virgin",
        "blowjob",
        "eat pussy",
        "fingering",
        "ride cock",
        "creampie"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/jerk-ch-02"
}