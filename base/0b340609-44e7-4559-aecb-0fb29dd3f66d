{
    "title": "A Ghost of a Chance",
    "pages": [
        "--Preface--\n\nOnce again, thank you all for your feedback and comments -- they are what motivate me to keep writing!\n\nThis one took a while to get across the finish line, so thank you for your patience (and encouragement!). This story has been percolating in my head for a while, and when I heard Paul Simon's Graceland on the radio one day, the lyrics helped me frame the plot. As with my other stories, the narrative builds slowly but surely, so a quick fix this is not. Lastly, a sincere 'thank you' to Ripley for being my capable and trusted counselor on this endeavor.\n\n--Prologue (Nine Months Ago - September)--\n\nCal Warner sat slouched in the club chair, her head tilted back as she stared out of the patio door window. It was quiet. The branches of the lemon tree in the backyard swayed hypnotically. The parallel beams of a car's headlights swung across the corner of the yard and faded as the car made its turn and went on its way. She closed her eyes.\n\n\"Hey...\" \n\nCal sat up, startled by the greeting. She thought everyone else was asleep. She looked around the living room. \n\nNothing stirred. The hospital bed stood quietly next to her chair, empty, stripped of its linens. There was no reason for Cal to be sitting here anymore, but this had been her spot for so long, it seemed comforting to return here. \n\n\"Cal.\" \n\n\"Becca?\" Cal's heart was beating awfully fast. Cal pulled her knees to her chin and curled up into a ball. Becca died a week ago. She's gone, Warner. She squeezed her eyes shut, but the tears came anyway. Cal wondered if tonight was the night she would finally run out of them. \n\n\"Cal.\" \n\n\"Go. Away.\" Cal mumbled, \"Unless you are my split personality and you look like Brad Pitt in Fight Club.\" \n\n\"Oh, you silly rabbit.\" \n\nCal's eyes sprung open. There, sitting cross-legged on the hospital bed, was Becca. It was the Becca before the illness. Before paralysis atrophied her legs, before the edema had set in from all the medication they pumped into her. \n\n\"I'm way hotter than Brad Pitt.\" Becca grinned, tossing her long black hair over her shoulder. \n\n\"This isn't real, right?\" Cal choked out, her eyes desperately clawing at the vision before her. \n\nBecca bit her lip and shook her head sadly, \"No. It's not real. Kind of a half-dream.\" \n\n\"I miss you. I want to be with you... I'd rather be with you...\" The last few words escaped in a whisper. \n\n\"Don't you dare, Callan Warner!\" Becca pointed a finger at Cal. \n\n\"It's true...\" Those two words stumbled, hopelessly, out of Cal's mouth. \n\nBecca looked less solid now, still sitting on the bed, but more like an image than a three-dimensional body. \n\n\"No... don't go. Please, don't go,\" Cal pleaded. \n\n\"I have to,\" Becca said gently, \"You know that. I just wanted to say goodbye... and to tell you that you need to live. You need to believe you can.\" \n\nCal shook her head. She didn't care if she had lost her mind to far-fetched hallucinations. She'd much rather have this pseudo-dream than anything else. She let out a sarcastic laugh, \"You are haunting me to remind me to stick it out for the kids?\" \n\nBecca crossed her arms, \"You are no good for the kids if you are half dead inside. But it's not just about them. It's about you. You need to live. Promise me you will.\" \n\nCal wanted to promise, but she couldn't. Becca glared at her, tears springing up, \"Cal Warner. Promise me!\" \n\nGreat. I've made a ghost cry. \"Fine, I promise,\" Cal surrendered. She rubbed her eyes, \"Easy for you to say, by the way, you're dead.\" \n\nWhen Cal looked toward the bed again, Becca was gone. \n\nCal looked around her, fully awake now. She groaned as she realized the trick her mind had played. \"This fucking sucks,\" she said out loud, feeling suddenly oppressed by the misfortune the house witnessed. \"We should go back to New York City,\" she told the empty room, \"After the kids are done with the school year. Start new there.\" \n\n<center>She comes back to tell me she's gone\n\nAs if I didn't know that\n\nAs if I didn't know my own bed\n\nAs if I'd never noticed\n\nThe way she brushed her hair from her forehead\n\nAnd she said losing love \n\nIs like a window in your heart \n\nEverybody sees you're blown apart \n\nEverybody sees the wind blow...\n\nPaul Simon, \"Graceland\"</center>\n\n--Chapter 1: The First PT Session (Present Day - June)--\n\nAnnie felt Jason's hands on her upper back and took a deep breath. Annie exhaled as her colleague pushed downwards. A satisfying arpeggio of cracks filled the room as Annie's spine realigned. \n\n\"Fuck, yes!\" Annie exclaimed. Jason chuckled in response, \"Never gets old, that one!\" \n\n\"I really needed that, thanks J.\" Annie slowly stretched into child's pose and lingered there. \"You need an adjustment?\" \n\n\"I'm okay, thanks,\" Jason answered, \"And I have a client in five minutes so get your butt off my table.\" \n\nAnnie jumped off and helped him put on new linens. A soft knock on the door made them both turn. Priyanka, the receptionist, stuck her head into the room, \"Jason, your noon is here. Annie Frye, it's your lucky day: your noon rescheduled for tomorrow.\" \n\n\"Best news I've heard all day! Thanks Pri,\" Annie grabbed her phone and headed out of the office. \n\n\"Don't go too far, I'll need you to cover walk-ins or last minute appointments.\" \n\nAnnie nodded, \"Want me to grab you some lunch?\" \n\nPriyanka shook her head, \"I brought something from home, but thanks though!\" \n\nAnnie stepped out onto Broadway and took a deep breath. It was the last week of June and the humidity of the summer was just teetering on the edge of being suffocating. Her phone buzzed and Annie smiled when she saw a text from her best friend, Alex Mak, \"No way!\" \n\nAnnie dialed Alex's number, \"Hey Mak-attack! Did you just land?\" \n\nAlex flew into town from London at least once a month, sometimes staying for a week, sometimes for a day. The two friends made a promise to each other that they would always make time to meet at least once each trip. Annie was surprised to get Alex's text as she wasn't expecting a visit for at least another week or so. \n\n\"Landed at 11:00. Last minute thing Mona wanted me to go to. I just got to the city -- have you had lunch yet?\" \n\n\"Nope. Usual place? Ten minutes?\" \n\n\"You got it. Can't wait to see you, Bella-bear!\" \n\nAnnie hung up and made her way west. Alex was already at their favorite diner when she arrived. \n\n\"Annabelle!\" Alex pulled her friend into a tight hug. \n\n\"Alexandra! Geez -- easy buddy.\" Annie smiled and hugged back, \"Are you on your way to a meeting?\" \n\nAlex looked down at her work suit, \"Sort of. Conference downtown. Then an 11pm flight back to London so I can go to a meeting there tomorrow afternoon. Total bollocks... Sorry I didn't give you much notice -- I didn't get much notice myself.\" \n\n<br /> \"You know they have this thing called video-conferencing now, right?\" Annie teased, disappointed that her friend wouldn't be staying for longer. \n\n\"I wish I could have done that. But I'm on a panel at the conference, so it's not conducive to beaming in via the interwebs. And... I get air miles. Buckets of them.\" \n\nAnnie whistled, \"Moving up in the world, Alex!\" \n\n\"Fake it till you make it! I intend to just nod and look like I know what I'm doing. Come on, let's order food -- I'm famished.\" \n\nThe two friends caught up over lunch. Alex relocated to London over three years ago, a happy convergence of work and love: Alex started dating Jess, who lived in London, and Alex's firm opened an office in the UK not long after they got together. Annie felt like she was the one who lost out in the process, but luckily, Alex's job had her shuttling back and forth over the Atlantic enough that the two still managed to see each other quite a bit. \n\n\"How's Jess?\" Annie pointed at the silver band on her friend's finger. \n\nAlex nodded and grinned, \"She's well -- she says 'hi' by the way. We're trying to figure out if we want to do anything special for our anniversary later this summer... It's been almost three years since the wedding, can you believe it?\"\n\nAnnie grinned, \"It's pretty amazing, but I'm not surprised at all. I'm so happy for you guys.\" \n\nAlex beamed, \"What about you? What's new?\" \n\n\"Not much. Could do with a couple more regular clients, but no complaints.\" \n\n\"I wasn't talking about work, Annie.\" \n\n\"I know. But nothing new since you were here for reunion in May: still broken up with Zoe... who is now one hundred percent certain that we should get back together even though she cheated on me,\" Annie shrugged and, in a posh British accent, added, \"Bonkers... Frightfully disappointing, isn't it?\" \n\n\"No love lost, honestly. She seemed like the type of person who only wants the thing she can't have,\" Alex paused before noting, \"Your British accent remains deplorable, by the way.\" \n\nAnnie's eyes danced with mirth, \"Better than your American accent... I'm bummed you aren't staying longer -- I was hoping you'd help me drown my sorrows in ice-cream and and your trove of sappy movies.\" \n\nAlex shrugged sheepishly, \"Sorry... Hey, are you making fun of my movie collection?\" \n\nAnnie's eyes flashed with mischief, \"Yes. And your hefty collection of Bletchley Park books. I never knew that you were such a World War II geek.\" \n\n\"I'm not. I just got interested in Alan Turing,\" Alex said enthusiastically, \"He did some pretty amazing stuff... in spite of everything.\" \n\nAnnie ruffled Alex's head, \"Still a geek though!\" \n\n\"Hey!\" Alex ducked, \"Easy on the hair!\" \n\n\"Dude,\" Annie pointed at Alex's head, \"You have enough gel there to withstand a category five hurricane.\" \n\n\"Wow, not pulling any punches today, are we?\" Alex stroked her chin and narrowed her eyes, \"Perhaps we ought to revisit the no-rent agreement.\" \n\nAlex had a two-bedroom condo in New York that she'd been renting out since her relocation to London. When one tenant had a run-in with the landlord, she asked Annie to help. Since then, Annie's been housesitting and managing the sublet arrangements for the second bedroom. \n\n\"Perhaps we should talk about how much money I saved you when I prevented your numbskull of a building super from knocking a hole in your kitchen to fix a plumbing issue in the upstairs apartment?\" \n\nAlex laughed, \"Okay. Truce.\" \n\n\"You gave up way too easily, my friend -- the new tenant moves in this weekend, by the way. Move your phone out of the way, food's here.\" \n\nAs they ate, Annie filled Alex in on Meghan, the new sub-lettor, before moving onto other topics that led into an easy and wandering conversation. \n\n\"Bugger me backwards, I've missed this shit,\" Alex leaned back happily as she polished off her plate. \n\n\"You know, that is one of my favorite things about you,\" Annie grinned. \n\n\"What's that?\" \n\n\"You. Eating. I've never known someone who relishes eating like you do.\" \n\nAlex shrugged self-consciously, \"Jess was saying that the other day. Do I look weird while I eat?\" \n\n\"No. It's just, you know, most people eat to not die. Chew, swallow, move on. You really allow yourself to enjoy every bite. It's endearing.... Oh, hold on. Priyanka's texting me.\" \n\nAnnie read her text and showed it to Alex, \"Well, well! Lookie here...\" \n\nAlex raised her eyebrows as she read the text, \"'Robin Wright is back. Just booked her at 3:00 for you.'  You have CLARE UNDERWOOD as a client?\" \n\nAnnie scoffed, \"Yeah. I wish. No. This is probably Callan Warner, that client I told you about from... hmm.. let's see, four years ago? Pri thinks Cal looks like Robin Wright. It's close... but I think Cal is much hotter than Robin Wright.\" \n\n\"Ooooh... this is the one you had a massive crush on... Married, with children, right?\" Alex's eyebrows lifted inquisitively. \n\n\"Actually it's quite sad -- I worked with her -- off and on for about a year -- before her wife Becca got sick and they moved to be closer to Becca's parents. I wonder why they are back?\" \n\nAlex nodded, \"Oh, yeah, I can vaguely remember you telling me. Maybe they are back because Becca got better?\" \n\nAnnie frowned. She tried to think back to what Cal had told her during their last session, \"Hmmm, Cal said it was bad. Hang on, let me...\" \n\nAnnie did a quick search on her phone, and her worst fear was confirmed. The results showed a short Baltimore Sun obituary for Rebecca Chen from almost a year ago. Annie felt herself tearing up, \"Oh no, Alex, Becca passed away. Says here she's 'survived by her parents, her brother, wife Callan, son Adrian and daughter Jamie.' That is so heartbreaking. They were together for years! The kids are just babies...\" \n\nAlex shook her head with sympathy, \"Wow. That kind of puts things into perspective, doesn't it?\" \n\n\"I don't know about perspective. This is the kind of news that knocks someone sideways.\" \n\n\"I meant in terms of life...\" Alex paused, searching for the right words, \"I meant... you know, Tomorrow isn't promised to any of us, but we all go about our days like it is, you know? Like, we're all in this collective denial about it... but since none of us knows how much time we have, we should live... like, really live.\" \n\n\"Except life gets in the way,\" Annie mused. \n\n\"That's what I mean -- we have to try not to let it. That's the perspective.\" \n\n\"So says the woman who is making a round-trip flight to and from the US in a day...\" Annie winked. \n\nAlex threw her hands up in surrender, \"I didn't say I had it all sorted! The same-day round-trip is nuts, but at least I'm only away from Jess for one night... Look, I'm just saying this kind of news puts it all in perspective... Cal's got a lot to deal with. What kind of name is Callan, anyway?\" \n\n\"It's a town in Ireland -- her parents visited when Cal was in utero, they named her after it they loved it so much.\" <br />\n\n\"Good thing it wasn't Ullswater then... breathtakingly beautiful, but a crazy name to live down...\" \n\n\"Your sense of humor is really starting to worry me,\" Annie teased, \"I wonder when Cal got back to Manhattan? I know she mentioned having family here...\" Annie stared at the obituary. \n\nAlex looked at her watch, \"You'll find out soon enough -- you'd better get back. My thing starts in an hour, so I should bugger off down to Water Street. I'm sorry, Annie, that's rough news.\" \n\nAnnie gratefully accepted a hug from Alex, \"Thanks. Can I kidnap you after your conference?\" \n\n\"I'm all yours, Bella-bear.\" Alex squeezed her best friend tight. \n\nAnnie smiled, \"Great, we can hang out and have dinner before you go back to the airport! Have you been craving anything from this side of the pond?\" \n\nAlex did not hesitate, \"Corner Bistro.\" \n\n\"Brits still can't make a good burger, huh? You got it, Al. Good luck at the conference.\" Annie turned to leave and gave Alex one more hug. \n\n\"Love ya,\" Alex smiled. \n\nAnnie was deep in thought as she walked the handful of blocks back to her office. She remembered Becca bringing the twins by to pick Cal up after a PT session all those years ago; they had come across as this beautiful and happy family. \n\n\"It just seems so unfair,\" Annie muttered as she rode the elevator up to her office. She took a big breath and she opened the door into the reception area. Priyanka looked at her pointedly when she walked in, \"Cal's here already; I sent them into your room.\" \n\n\"'Them'?\" \n\nKids are here too. Priyanka mouthed. Annie nodded with understanding. She knocked on the door before going in. \n\nCal was getting the twins set up in front of a tablet in the corner of the room. She straightened up as Annie came in, \"Hi! Thanks for fitting me in today. I'm a little early... and I brought the kids -- haven't found a babysitter yet. I hope that's okay.\" \n\nAnnie's breath caught in her throat. Cal looked tired, and it was clear she'd lost weight. But it was still the Cal she remembered: tall and statuesque, with a beautifully sculpted face framed by shoulder length blonde hair. Yep. She's still... wow. Annie resisted the urge to keep staring and turned her focus to the kids on the floor. \n\n\"Of course it's okay! Hey guys! You probably don't remember me, huh?\" Annie knelt down next to the kids. \"Okay, so which one is Adrianna and which one is James?\" \n\nThe kids giggled. Jamie pointed at herself, \"I'm Jamie. And he's Adrian.\" \n\n\"Oh right,\" Annie smacked her forehead with her hand, \"Jemima and Andrew. That's right!\" \n\n\"JAMIE and ADRIAN!\" The kids shouted together, before collapsing into laughter. \n\n\"Okay, if you guys are so smart, what's my name? You guys were teeny tiny when I saw you last, so you probably don't remember.\" \n\nBoth kids looked up, and turned to Cal. \"This is Annie, guys. She's going to help me move my shoulder.\" \n\n\"Ah, so it's the shoulder, huh?\" Annie looked at Cal, who nodded, \"I would have guessed the lower back... you're leaning right... but it may be related.\" \n\n\"Mommy, can we watch the video now?\" Adrian pulled on his headphones. Jamie did the same thing when Cal nodded. \n\n\"IT'S TOO LOUD!\" Jamie declared. Annie adjusted the volume and lifted up one of the ear pieces, \"That better, bud?\" The girl nodded, already fully sucked in by the cartoon. \n\n\"Thank you, technology,\" Cal said quietly, \"Best i-nanny to have when you are in a pinch!\" \n\nAnnie chuckled, \"It's good to see you.\" \n\nCal nodded. Having just moved back to the city, seeing a friendly face was a welcomed respite from the recent upheaval. Annie walked towards her, \"Cal, I'm sorry about Becca.\" Cal's normally piercing blue eyes dulled with pain. Annie's heart jolted.\n\nCal nodded again, the now routine swell of sadness and dread rising. In the nine months since Becca's death, by far the worst aspect of being the surviving spouse was having the \"I'm sorry\" conversations with friends and family. There was the horribly insensitive \"Oh, I can't imagine what you are going through,\" and the well-intentioned but insincere \"I don't know how you are managing\". Then there were those who would collapse into tears and require Cal to comfort them. \n\n\"If it's easier childcare-wise to do these sessions at your place, I'm happy to come over,\" Annie continued. \n\nCal was suddenly hit with the urge to cry. Annie did the one thing that most people didn't (or couldn't) do: offer comfort and help in a way that acknowledged the situation without tripping over the tragedy gracelessly. Cal nodded, a powerful sob escaping her lips. \n\nAnnie's arms were around her immediately. It'd been a while since Cal had accepted an embrace from anyone outside of her family. Most people would approach and ask in soft, saccharine voices, \"Do you need a hug?\" Call it pride or the stubborn determination to not be the weeping widow, but Cal would always answer in the negative. Yet here she was, clinging to Annie as if her life depended on it. \n\nIt was all Annie could do to not dissolve into tears herself. The woman in her arms was racked with quiet sobs. Thanks to the cartoon vortex, Jamie and Adrian were oblivious to their mother's crying. Annie felt the absence of Becca so profoundly it surprised her. She kept holding Cal, whispering whatever came to mind in a desperate attempt to comfort. \n\n\"I'm here, honey, I'm here,\" Cal kept hearing in her ear. Annie's voice was like a balm. It was several long minutes before Cal managed to calm down. When she did, she leaned back from the hug and wiped the tears from her eyes. \n\n\"Oh, I really didn't mean for that to happen,\" Cal confessed, taking the tissue that Annie offered. \n\n\"I usually don't make my patients cry until I get into the swing of the treatment session,\" Annie smiled gently. She paused for a moment before she started manipulating Cal's shoulder, \"Speaking of which, let's see what we have here...\"\n\nCal winced at Annie's initial probing of her sore shoulder, but was grateful that Annie didn't linger on her loss of composure, \"I wrenched it while I was moving stuff into the apartment. My brothers were supposed to help, but one got hit with his kid's stomach bug, and the other one had a work thing.\" ",
        "\"Let's bill them for this session, then! It's only fair. Okay, on the table, on your right side.\" \n\nCal submitted to Annie's care. For the next forty-five minutes, Annie's hands efficiently stretched and kneaded Cal's left shoulder area. Annie was pleased that she was able to quickly return some mobility to the joint; it was one of her favorite parts of her job. \n\nFor Cal, the experience was much more profound: being touched so intentionally was wonderful -- and destabilizing. It had been a long time since Cal had come into physical contact with anyone other than her family and her children. She had not realized how much her body had been craving to be touched. Throw in the fact that Annie was super easy on the eyes, it was all Cal could do to stay still. She tried to keep her eyes closed; she was afraid they would give away the seismic activity going on in her body due to Annie's proximity. Her senses were going haywire, processing thrills that sprinted all over her skin every time Annie's fingers made contact. \n\n\"Okay Cal, why don't you shift onto your back for me. We need to re-align your hips -- you're kinda lopsided right now.\" \n\nAnnie placed her hands on Cal's iliac crests, and pushed firmly. Cal almost flew off the table when Annie's palms made contact with her hips. Oh fuck. How am I this turned on? Dead puppies, dead puppies, dead puppies.  \n\nUnfortunately for Cal, her predicament did not improve. \"Knees up and apart, please,\" Annie placed her forearm between Cal's knees, \"Now squeeze. Come on Cal, harder. Five... four... three... two... okay. Release.\" <br />\n\nAnnie leaned forward and patted her own right shoulder, \"Hook your right knee here, Cal.\" \n\nWhen Cal's hamstrings rested against Annie's chest, Cal stopped breathing. \n\n\"Okay perfect, now push against me.\" Annie leaned forward more, providing resistance -- and a jaw-dropping view of her ample cleavage. Cal's hands flew to cover her face.  Get a hold of yourself, Warner. Thank god I'm not a guy. I'd have a raging hard-on that she would be able to see right now.\n\n\"I know, Cal, it's going to hurt a little, but we're almost there.\" \n\nCal almost laughed at how off the mark Annie was. Thankfully, Annie released Cal's leg and placed it back on the table. \n\nAnnie reluctantly moved on to the last stretch of the session. She was selfishly grateful that Cal's eyes were shielded during that last exercise. The alluring friction and pressure from Cal's leg had caused Annie's nipples to swell. She quickly grabbed a sweatshirt and pulled it on, hoping it would be enough to hide them from view. \n\nReturning to the table, Annie placed both hands on the nape of Cal's neck, \"We're just going to do a stretch -- you're carrying a lot of stress here.\" \n\nCal felt Annie's hands supporting her neck and skull and then, with an eroticism Cal was not expecting, Annie's fingers applied sweet pressure against the base of her skull and the nape of her neck. For the first time in a long time, Cal felt the urge to give in to her libido's appeal for relief: it had flared again and again during Becca's illness and since her death, but Cal had always suppressed it. She gripped her hands into fists, willing her body back under control. Get a hold of yourself, you sex-deprived idiot!<br />\n\nAnd then, with timing only children are capable of, \"Mommy -- we're done with the video. Can we go out and look at the fish tank?\" Jamie and Adrian stretched, dropping their headsets unceremoniously onto the floor. \n\nCal dragged her mind and body back to reality, \"Okay, but pack up your stuff, and when you go out there, don't break anything.\" \n\nThe kids threw their stuff into the backpack. \n\n\"Before you go, how about some stickers?\" Annie pulled a stack out of her desk drawer. \n\nCal propped herself up on her elbows, \"Wow, Annie, that's going to win you some major points. These guys are sticker fanatics. Guys -- just one each, okay?\" \n\nThe kids picked out their stickers and bolted out, yelling quick 'thank yous' as they ran. Annie propped the door open, \"We'll keep the door open guys. Okay, Cal, one more thing and you'll be done with me.\" Annie helped Cal sit up. \n\n\"Done with you? Are you breaking up with me?\" Cal didn't realize fully what she'd said until it came out of her mouth. Oh my god, am I trying to flirt with her? What's wrong with me?? \n\n\"Not by a long shot,\" Annie smiled, glad to see the return of some of the feistiness that Cal used to have when they first met, \"I'm not so easy to get rid of. Now, pay attention; let's go through the exercises you need to do at home.\" \n\nCal tried to focus, but it was a difficult task: spirals of arousal were licking tantalizingly around her sex. Annie was unaware of Cal's plight, and unintentionally exacerbated the issue by touching Cal here and there as she walked through the exercises. \n\n\"And that, Ms. Warner, is all I got!\" Annie smiled as Cal hopped off the bed. Annie started stripping the table of its linens. Cal just stood there for a moment, staring at Annie, trying to process the effect Annie had on her. Cal had not been captivated like this in a long time.\n\n\"Any big plans for tonight?\" Cal asked, surprising herself with the boldness of the question. Warner, stop talking. \n\nAnnie didn't seem to find the question untoward. \"Dinner with my best friend who's in town from the UK,\" she replied as she picked up her phone and started typing. \n\n\"Sounds like fun,\" Cal was grateful for Annie's momentary distraction. Stop checking her out, Cal, she admonished herself when she realized she had been raking her eyes up and down Annie's body. \n\n\"Yeah, I'm looking forward to it. Sorry,\" Annie indicated to the phone as she put it down, \"Just adding some notes to your file.\" \n\nHappy to not have been caught staring, Cal stuck her head out into the reception area, \"Okay guys, two minute warning. Say 'I heard you' if you heard me.\" \n\nJamie and Adrian had their faces plastered against the side of the fish tank. \n\nCal looked at Annie with resignation when she was met with silence. Annie smiled and patted Cal on the arm, \"Good seeing you. Set up some time with Pri and I'll see you next week!\" \n\nCal grabbed her kids' stuff, walked out into the reception area and bent down between her children, \"We are going to go in a minute, ok?\" \n\nThe twins nodded, \"Are we still meeting Uncle Torrey at the playground?\" \n\nCal checked her phone, \"Yep! He just texted to say he's on his way there. One sec, guys,\" she walked over to Priyanka. \n\n\"Hi, Annie said I should check in with you about next week?\" \n\nPriyanka pulled up Cal's file on the computer, \"Yep, when do you want to come in? Oh, wait, Annie made a note here... um, do you want her to make a house call next session?\" \n\nA series of extremely inappropriate thoughts sprung up in Cal's mind. Goddamit Cal, shake it off! She looked at the now closed door of Annie's treatment room and tried to speak coherently, \"Uh, okay, if she can manage it, that'd be really helpful. Thanks. That would be amazing.\" \n\nPriyanka looked at the computer screen, \"Okay, then it'll have to be the last session of the day. Annie has the five p.m. slots free Tuesday and Friday next week.\" \n\nTuesday comes sooner than Friday... \"Tuesday works! Thanks so much. Say thank you to Priyanka guys, let's go!\" \n\n\"Thank you!\" yelled two little voices. \n\n\"You got it,\" Priyanka waved goodbye and clicked through Annie's appointment schedule as Cal herded the kids out. \n\nAnnie tentatively peeked out when she heard them leave. Priyanka crossed her arms and arched an eyebrow, \"House call? You never make house calls.\" \n\n\"She just moved back to the city. Her wife died. She's in pain. She has two kids,\" Annie explained as she pulled off her sweatshirt. \n\n\"And you think she's hot.\" \n\n\"Pri! Stop it. Did you not hear me say that her wife passed away? That one is a non-negotiable no-fly zone.\" \n\n\"You want to jump her bones. I can tell,\" Priyanka waved her hands in the general direction of Annie's body, \"Your aura is, like, flipping out.\" \n\nAnnie blushed, \"It's flipping out because you're being inappropriate in eight different ways.\" \n\nPriyanka shrugged, \"Inappropriate? Maybe. Inaccurate? Nope. Your nipples could cut glass right now.\" \n\nAnnie looked down and quickly covered her chest with her sweatshirt. Priyanka squealed with laughter. Annie glared at Priyanka in protest before stomping back into her treatment room and slamming the door shut. \n\n--Chapter 2: The Second PT Session (One Week Later - July)--\n\nCal opened the cooler bag and showed its contents to the twins. Adrian grabbed a stick of string cheese, and Jamie chose to start with an apple. \"Okay guys, when we get home, Annie is going to come work on my shoulder. You guys can play some Uno or do some coloring, and then we can go out for dinner. I also have a surprise for you.\" \n\n\"WHAT?\" Both kids said at once. <br />\n\n\"Uncle Brandon and Uncle Torrey are at our apartment right now putting together a new bed for me!\" \n\nJamie's eyes widened, \"So this means they'll stay for dinner, right?\" \n\nAdrian looked up eagerly, \"Really, mom?\n\nSince Becca's death, both kids have been on a mission to have any and all family members and friends join them for dinner each night. Cal knew it was their way of coping with Becca's absence, and Cal's heart broke each time the three of them sat down for dinner without company.\n\n\"Hmm, I don't know. I think Uncle Brandon has to go home for dinner with his family.\" Cal gritted her teeth, the word 'family' was like a knife in her heart. Becca, this doesn't work without you. \n\n\"Maybe Uncle Torrey can stay, let's ask him!\" Jamie exclaimed.\n\nThe moment the elevator deposited the three of them onto their floor, the twins tore ahead, tumbling into their apartment and yelling their uncles' names. By the time Cal stepped through the threshold, Torrey was on the floor under both her children, all of them laughing hysterically. \n\n\"Brandon left?\" \n\nTorrey nodded, \"I have to get going too...\" \n\nThe twins groaned with disappointment. \n\n\"Oh yeah?\" Torrey grabbed the kids, \"That just sounds like you guys want more tickles...\" \n\nJamie and Adrian squealed with happy terror. Of her two older brothers, Cal was closest to Torrey, not just in age, but also in terms of personality and interests. He was the one she came out to first, and she was the one he sought out when he needed advice and honest feedback. Brandon, the oldest of the three by seven years, always seemed far older and disinterested in the antics of his younger siblings.\n\nCal shouted over the cacophony, \"My PT's coming any minute now. Thanks again for helping with the bed. I couldn't have done any of this with my shoulder acting up.\" \n\nAs if on cue, the intercom blared and Cal buzzed Annie up. Cal ducked into the bathroom quickly before heading to the front door. \n\n\"Did you just re-style your hair?\" Torrey raised his eyebrows as Cal walked past. His sister's hair was no longer tied up in a careless knot.\n\n\"Shut up, Torrey,\" Cal backhanded him across the shoulder. Torrey was about to respond, but the doorbell rang.\n\nCal opened the door and it was all she could do to not go slack-jawed with awe. In the five days since she last saw Annie, Cal had wondered if her initial reaction to her physical therapist was due to Cal being unaccustomed to receiving attention and care. Becca's decline after being diagnosed with Gliobastoma had been so rapid, and the needs of her care and of the children's care were so all-consuming that Cal never had time to really think about how and what she was feeling. It was as if her brain had figured out a way to anesthetize her emotions and needs, just so she could get through each day. Her reaction to Annie the week before was such a shot out of the blue that Cal couldn't quite trust it. But there it was again, the surprising and curious giddy pulse sitting in the base of her stomach that had started up the moment Cal laid eyes on Annie. Annie was dressed simply in a white polo and sweat pants. The outfit was just form-fitting enough to hint at the body underneath. Her wavy brown hair was tied up in a simple pony-tail, her brown eyes were warm and bright. \n\nTorrey looked back and forth between his sister and Annie, clocking Cal's obvious attraction to the brunette. \"Hi, I'm Torrey -- Cal's brother,\" he stepped forward when neither woman moved, and extended his hand. \n\n\"Annie,\" Annie smiled. \n\n\"Nice to meet you,\" Torrey smiled back, \"The twins wouldn't stop talking about you last week. What kind of weird kid magic did you work on them?\" \n\n\"I have a stash of stickers and a tank full of tropical fish at my office, so I can't really take credit.\" \n\n\"ANNIE!\" The twins wrapped their arms around her legs, \"Come look at our room!\" Adrian tugged at Annie's shirt. \n\n\"Okay buddy, hold on, let me bring the table in.\" Annie set it against the wall and allowed herself to be led away. \n\nTorrey looked at Cal, whose eyes followed Annie into the twins' room, \"Oh, you like her.\" \n\nCal felt her face flush, \"Shut. Up.\" \n\nTorrey broke into a wide smile, \"Is she gay?\" \n\nCal rolled her eyes. In addition to awkward 'I'm so sorry for your loss' conversations, Cal has also had to contend with friends and family seeing potential dates around every corner. \"I have no idea; it's irrelevant and it's way too soon. Even if the adult reincarnated version of Becca were to walk up to me right now, it'd be too soon.\" \n\nTorrey gave Cal's arm a squeeze, \"Okay. I get it. But be honest, you did something to your hair... Hey!\" Torrey ducked as Cal elbowed him in the ribs, \"Okay, okay! I'm going to go say bye to the kids.\" \n\nOnce Torrey left, and hearing that Annie was still being monopolized by the twins, Cal looked at the folded-up treatment table leaning against the wall and decided to move it into her room. The folly of her decision was immediately apparent; the table was heavier than she expected, and its weight was not distributed evenly. Her left shoulder could not sustain the force needed to balance it as she walked. \n\nCal ended up half carrying, half pushing the table into her room. The pain radiating from her shoulder was sharp and unremitting. She clenched her teeth, cursing herself for being so foolish. \n\n\"... and this is Mommy's room!\" sang Jamie as she and Adrian walked in with Annie. \n\nAnnie immediately noticed Cal's distress, looked at the table, and guessed what had happened, \"Hey guys, I need to help Mommy's shoulder feel better now.\" \n\n\"UNO!\" Adrian yelled. The two bolted out of the room, arguing about who was going to deal first. \n\nAnnie set up the table, and patted it, indicating that Cal should hop on, \"Face down.\" \n\nAnnie started systematically seeking out the adhesions in Cal's shoulder. \n\n\"Sorry,\" muttered Cal. \n\n\"Hey, it's not my shoulder,\" Annie said, injecting just a little irritation in her tone to toy with Cal. \n\nCal tensed, wishing she hadn't upset Annie, \"Sorry. Really.\" \n\nAnnie's heart softened and she chuckled, \"Nah, you're fine,\" she playfully ruffled Cal's hair, \"We're good. Just don't move heavy objects for a little while longer, okay?\" \n\nMore! Cal's body begged as Annie moved her hand back to Cal's shoulder area. Cal nodded, rendered mute by Annie's small gesture of affection. \n\nAnnie patted Cal's shoulder, \"Roll onto your right side for me. And I need you as close to the edge of the table as possible. I get more leverage that way.\" \n\nCal shifted as she was told. Lying on her right side as Annie instructed put Cal's face about three inches from Annie's left hip. Cal had to remind herself to keep breathing steadily. She lost track of time as she -- once again -- tried to control her body's reactions to Annie's touch. Annie lifted Cal's left arm so it was at a ninety degree angle to Cal's body. Annie placed her other hand just below Cal's armpit, and applied pressure to the latissimus dorsi. Annie's thumb edged the underside of Cal's breast. \n\nOh Jesus. Cal let out a breath and squeezed her eyes shut as she attempted -- but failed -- to ignore the half square inch of contact that Annie's thumb was making with her body. \n\n\"Too much?\" Annie backed off the pressure slightly. \n\n\"Sorta.\" Cal bit out. \n\nAnnie quickly shifted to the topside of Cal's arm, raking her fingers through Cal's delts and around to the top of her pec. \"Not bad. Feels pretty loose.\" \n\nAnnie did a couple more stretches on Cal before ending the session, just as Jamie came padding into the room. \"Mommy, Uno's boring.\" \n\nCal sat up and rotated her shoulder, amazed at how much better it felt. \"Boring? You guys played it for an hour straight each day this week. Annie, this feels amazing. Thank you.\" \n\n\"It seems like we are playing the same game over and over.\" Jamie reported morosely.\n\nAnnie let out a quiet chuckle, \"Are you shuffling the cards?\" \n\n\"Mommy usually does it.\" \n\nAnnie smiled, \"Want me to show you an easy way to shuffle?\" \n\n\"YEAH! YEAH!\" Jamie ran out of the room, announcing the news to her twin. \n\nCal started to get off the table. \n\nAnnie put her hand on Cal's sternum and shook her head, \"Na-uh. You stay and do your exercises.\" \n\nCal loved the feel of Annie's hand on her chest. She pretended to look perplexed, \"You are volunteering to play with my Uno-obsessed children?\" \n\n\"I'm taking one for the team. Don't think I didn't notice -- I know you haven't been doing your exercises. So do 'em now.\" Annie pressed her hand into Cal's chest for emphasis, feeling slightly guilty that she was using her job as an excuse to touch Cal.\n\nCal couldn't decide what she liked more: Annie bossing her around, Annie touching her, or Annie saying she was one of the team. \"Fine, okay, fine,\" Cal said with mock surrender. \n\nFifteen minutes later, Cal stuck her head into the kids' room, \"Okay guys, shoes on please. Let's go to dinner.\" \n\n\"Can Annie come to dinner with us?\" Adrian asked, his big brown eyes shining with hope. \n\nCal looked at Annie, \"She probably has other plans, guys.\" \n\nAnnie knew the professional thing to do was to say she had other plans, but she found herself shrugging and saying, \"Actually I don't! I'd love to have dinner with you!\" \n\nThe kids cheered. \n\n\"Seriously?\" Cal smiled. \n\nAnnie nodded, \"Seriously, if you'll have me.\" \n\nCal nodded back and her face broke into a devastatingly beautiful smile. Annie was dazzled. Oh boy. Cal's got me but good. \n\n\"Where are we going?\" Annie asked as the four of them walked southeast from the apartment building. \n\n\"Right there,\" Cal pointed at an Indian restaurant diagonally across from them. \n\n\"Chennai House! It's one of my favorites! I go to the one in Murray Hill all the time.\" \n\nCal and Annie conferred over the menu and ordered a good mix of dishes to share. \n\n\"There's a party in my tummy and the dosa's invited!\" Adrian declared as the food arrived. \n\nAnnie laughed, \"Adrian, that's the best thing I've heard all day!\" \n\nCal loved hearing Annie's laugh. She liked seeing Annie laugh even more: Annie's eyes crinkled in the cutest way. It filled her with a joy that moved through her like a waterfall, and it was terrifying. Cal sat as still as she could for the rest of the meal, trying to calm the tempest that was beginning to swirl in her mind. You don't even know her. It's too soon to feel this happy. It's too soon.  \n\n\"Can we do this again?\" Jamie asked as they headed home. \n\n\"We'll see,\" Cal said, \"Depends on whether you guys can show me how good you are at getting ready for bed after a late dinner out.\" \n\n\"Nicely done, Cal,\" Annie complimented Cal as the kids went through their bedtime routine without a hitch. \n\n\"It was a good day today. This past weekend was hard -- it would have been Becca's thirty-ninth birthday, and it's coming up to our fifteenth wedding anniversary. We've all been a little shredded emotionally -- more than usual, that is. So thank you for sticking around tonight. It helped -- all of us.\" ",
        "Annie gave Cal's arm a squeeze, \"I'm glad. Cal, you're doing a great job with them.\" \n\nCal nodded. She hadn't expected to share so much with Annie. \n\nAnnie patted Cal's arm, \"Next week? Same time?\" \n\nCal smiled, \"Same bat time, same bat channel!\" \n\n\"Oh -- I was going to lug the treatment table back to my office, but I'm thinking maybe I should just leave it here? Would that be okay?\" \n\nCal nodded, \"I'll put it in the corner once I've bundled up all that cardboard for recycling.\" \n\n\"You will do no such thing. Didn't I say that you're not allowed to move heavy objects around? What's all this cardboard for?\" \n\n\"Packaging for my new bed -- my brothers helped me put it together today. I sold our... my old one in Baltimore. Couldn't really throw it away, but couldn't keep it.\" Cal's throat started to constrict, the memory of abandoning the bed she and Becca shared tore through her heart. \n\nAnnie immediately understood and tactfully turned her attention to the packaging, \"Go do bedtime stuff -- I'll clean up in here.\" \n\nCal was fighting to hold her tears in. The words Annie said were so prosaic, but they packed a punch. Cal had felt so alone for so long, and Annie's offer of help resonated with echoes of what it was like when there'd been two adults present for 'bedtime stuff.' \n\n\"Go,\" Annie said gently. \n\n\"Thanks,\" Cal managed to eke out, her voice wobbling just a little. She escaped into the bathroom and helped the twins brush their teeth. When the kids padded out in their pajamas, Annie was putting her shoes on, the cardboard packaging neatly stacked in a pile by the door. \n\n\"Say good night to Annie, guys\" Cal said, her tears contained for the moment. \n\nThe twins swarmed Annie in a hug that pretty much cemented Jamie- and Adrian-sized imprints on Annie's heart, \"Wow! What great goodbye hugs!\" \n\n\"Okay kids, you can each choose a book and then get into bed, I'll come in in a second. Annie, thanks again, for everything...\" Cal fought the urge to hug Annie. \n\n\"It was awesome Cal, I had fun. See you next week.\" Annie closed the door quietly behind her and headed out. \n\nCal stared at the front door. I wish you could stay. Suddenly, a wave of guilt and shame swept over her, \"Sorry Becca,\" she muttered under her breath, \"Sorry. I'm being an idiot.\"\n\n--Chapter 3: The Final PT Session (Mid-August)--\n\nCal looked at her watch for the hundredth time that afternoon. Time had been inching forward as if it had been sedated by a strong narcotic. Her children didn't notice as they were happily playing a rousing game of Uno with their grandmother. Becca's mom was in town to help them get ready for the drive down to Baltimore the next day. \n\n\"UNO!\" Shouted Jamie, her little hand clutching her last card. \n\nMay Chen laughed, \"There's no way I can win this one, I fold!\" She surrendered her collection of cards to the center of the table. \n\nCal smiled and looked at her watch again. May raised her eyebrows, \"A watched pot never boils. Why are you being so impatient? Are you worried your physical therapist won't show up?\" \n\nCal blushed, \"No! Just planning out the next sixteen hours -- we still have a lot of packing to do before hitting the road tomorrow.\" <br />\n\nCal was lying through her teeth; she was antsy because this was her last session with Annie. The shoulder problem had been resolved, and their last two sessions had mostly been conditioning rather than therapy. When Annie had declared Cal \"cured\", all Cal could think about was ways to re-injure herself to keep the sessions going. \n\nIn the time since Annie started working on Cal's shoulder, their weekly sessions had stretched from PT-session-plus-dinner-with-the-kids to PT-session-plus-dinner-and-bedtime-with-the-kids. Annie sometimes even stayed beyond bedtime and helped Cal clean up. There was always something to talk about, and Cal had come to look forward to the weekly routine. Annie had revealed enough in their conversations to make it clear she was gay, but Cal never saw any signs that Annie was interested. Cal's attraction to Annie had not diminished, but she had better control over it now. Annie, for her part, did her best to remain professional, but lavished affection and attention on Jamie and Adrian in a way that warmed Cal's heart. \n\nNow, almost two months later, their weekly routine was something everyone looked forward to. \n\n\"Mommy, I get to introduce Annie to Paw-Paw, okay?\" Adrian piped up. \n\n\"Sure, kiddo,\" Cal nodded. \n\n\"Awwwwwwwwwwwww!\" Jamie whined, \"That's so not fair.\" \n\nAdrian grinned, bursting with happiness at having one-upped his sister. \n\n\"Then I get to do stories with Annie. That's fair,\" Jamie shouted. \n\n\"Fine,\" Adrian shrugged, \"I'll do stories with Paw-paw.\" <br />\n\nThe loud buzzing of the intercom interrupted the siblings who jumped up and ran to the door. \n\nMay was intrigued. She had not expected such pent-up anticipation from Cal or the kids for what she had thought would be a routine session of physical therapy. A sudden intuition nestled itself in the back of her mind. Soon, she too waited for the front door to open with bated breath. \n\nThe spark of intuition flared into a full-on flame of understanding when Annie stepped through the threshold. May saw her grandchildren leap onto a pretty brunette who enveloped them in a loving hug. She also saw her daughter-in-law hungrily drink in the sight of the woman in the doorway. \n\nMay's heart ached at seeing the four of them, presenting such a different picture than when Becca was alive. Her heart was also beating happily, and with relief, as this picture -- new and unfamiliar -- held a promise that May very much wanted for Cal and the kids. May sent a hug and kiss out into the ether towards Becca, confident that her late daughter would have wished for this, too. \n\n\"Oh my goodness,\" exclaimed Annie, \"Have you guys grown since last week? How old are you guys now? Eighteen?\" \n\nThe twins collapsed into giggles, \"No, we are still six and a half!\" \n\n\"Silly me,\" Annie straightened up, \"Hey Cal.\" \n\n\"Hi,\" Cal grinned. \n\nAdrian started jumping up and down, \"And this is Paw-paw! And this is Paw-paw! She's Mama's mama!\" He shouted, pointing at May. \n\nAnnie turned to see an elegant older Chinese woman approach, the resemblance between her and Becca was unmistakable. \"I'm Annie,\" she extended her hand. \n\n\"I'm May. 'Paw-paw' is Chinese for maternal grandmother, by the way,\" May smiled warmly as she shook Annie's hand. \n\nAnnie nodded, \"Yes -- that is one of maybe five Cantonese words that I know. My best friend is Chinese. Her Paw-paw lives in Hong Kong!\" \n\n\"No wayyyyy!\" Jamie's eyes were wide with amazement. \n\n\"Way!\" Annie laughed. \n\nCal laughed too. She turned to Annie,\"We should get started. May, we'll be about an hour.\" \n\nMay shooed them off, \"Go, I'll take these guys out to the park. Are we having dinner here? Or out?\" \n\n\"I wanna do Annie's dragon bowls!\" Adrian jumped around some more. \n\n\"Yeah!!!!\" Jamie started jumping too. \n\nCal looked at Annie, \"Up for some dragon bowls, Belle?\" \n\nAnnie was so shocked with Cal calling her 'Belle' that she nodded robotically. The kids didn't notice her momentary lapse of attention, and rained high-fives on Annie. Of all the nicknames that Annie collected over the years, 'Belle' had been one of her least favorites. It had not occurred to her that she'd like it. But hearing it come out of Cal's mouth elicited an entirely different reaction. Mostly it was the way Cal said it: not in a cursive, flimsy, dimunitive way, but in a declarative, bold yet tender way. It echoed in Annie's head in the immediate moments afterwards. She desperately wanted to hear it again. \n\nCal helped May herd the twins to get ready to go outside, all the while kicking herself for calling Annie 'Belle.' It had been an endearment she'd tossed about in her head, but she had never meant for it to be uttered. The saving grace to the gaffe was that Annie seemed unfazed by it. Probably something lots of people call her, Cal thought to herself as they headed to the master bedroom. \n\n\"May seems lovely,\" Annie commented as she heard the front door shut, trying desperately to shake herself out of the enchantment Cal threw over her. She busied herself with the treatment table. \n\nCal nodded, \"She's awesome. She's been amazing through these past two years. I couldn't wish for a better mother-in-law. Extra bonus: she curses like a sailor and is funny as hell -- kind of runs against stereotype.\" \n\n\"What? Chinese people aren't funny?\" Annie teased, finally reclaiming some sanity. \n\nCal pouted, \"You know what I meant!\" \n\n\"Do I? It sounded like you were saying that generally, people from the most populous country on earth aren't funny...\" Annie nodded to the table, \"Up you get... on your right side. I mean, I would think that with just over one billion people, you'd find at least a million who knew how to crack a joke?\" <br />\n\n\"Now you're just being mean,\" Cal groused as she stretched out on the table as Annie instructed, \"You are being mean to a sad old widow, you know that, right?\" <br />\n\nSince their sessions restarted, Cal's banter had slowly reverted to the more playful and self-deprecating tone that she used to take back when she first became Annie's patient four years ago. Annie chalked it up to their growing comfort with each other, but she had been careful to not respond in kind, not wanting drop her professional demeanor and give off any hint of her feelings for Cal. If either one of them were to be honest, the depth and ease of their interactions were actually rooted in something truly notable: Annie had become one of few people with whom Cal and the kids could talk about Becca -- jokingly, even -- without it being awkward. Perhaps it was due to both of their efforts to mask their true feelings for each other, but Annie's growing presence in their lives had evolved so seamlessly that none of them really noticed the new reality: that by any measure, Annie had become a part of the family. \n\nRight at that moment, Annie felt bolder than usual in terms of the way she wanted to respond Cal's humorous bellyaching. Annie was still buzzing from Cal's earlier verbal caress and knew full well that it was their last ever session. More importantly, Cal and the kids were headed to Baltimore for two weeks the next day. Whatever risk she took would be immediately attenuated by the distance and time apart. \n\nWith deliberate movements, Annie placed one hand near Cal's head, and the other on Cal's upper arm. She then leaned down and whispered in Cal's ear, \"Hmmm, is that so? What are you going to do about it, Warner?\" \n\nCal almost screamed with shock. The proximity of Annie's lips to her ear and the flirtatious tone of her question sent Cal's heart rate into high orbit, and she certainly was not prepared to open her eyes to see Annie's face within kissing distance. \n\nAnnie noted Cal's carotid artery's reaction. Oh, she liked that! A thrill zig-zagged through her body as she straightened up and chuckled, \"What is it Cal? Cat got your tongue?\" \n\nIs Annie flirting with me? Regardless of Annie's intentions, Cal felt the now familiar stirrings of unmistakable lust rising within her. As she always did, she told herself to keep her cool, to try and get through the end of the session without making a fool out of herself. <br />\n\n\"No, I was trying to think up my retaliation options but failed. I'm weak and defenseless.\" Cal was quite proud that she managed to pull that one out of thin air.\n\n\"Weak and defenseless?\" Annie scoffed, \"You're selling yourself short. I think you are pretty amazing.\" \n\nShe thinks I'm amazing? Keep your ego in check, Cal, she's just being nice. Cal blinked several times, trying to clear her head, \"Check in with me tomorrow after the drive to Baltimore. I'm pretty sure there'll be lots of words to describe me at that point, and not one of them will be 'amazing'.\" \n\nAnnie shrugged, \"Road trips with kids are hard. I know my sister has fleeting fantasies of child abandonment every summer when she drives her family from Philly to upstate New York.\" \n\nThe two of them talked about the perils of travelling with children before drifting into a comfortable silence. Cal grunted every once in a while when Annie pushed the limit of her shoulder's strength or flexibility, but neither one had the temerity to return to their earlier flirtation again. It was almost as if each of them felt the warmth of the flame of their chemistry, but neither was brave enough to fan it further. \n\n\"Okay, my friend,\" Annie gave Cal's shoulder a squeeze as she finished one last stretch, \"We are done.\" \n\nCal remained on the table, reluctant to get up, \"Thank you. You are a miracle worker.\" \n\n\"It was my pleasure. You were an exemplary patient!\" \n\nThe two women regarded each other. Cal sat up and rubbed her face, \"The kids will miss you.\" Not the whole truth... \n\n\"I'll miss them too,\" Annie acknowledged, \"Maybe I can take them out to do something special when you guys come back from Baltimore.\" \n\nCal's face brightened, \"Really? That'd be awesome!\" \n\nAnnie nodded, \"I'll do some research on what the options are and you can tell me which one's the most appropriate.\" \n\n\"Deal!\" Cal jumped off the table, \"Oh, wait...\" <br />\n\n\"What?\" \n\nCal blushed, \"I just realized I don't have your number... you know, to get in touch when we get back.\" \n\n\"Oh -- I have yours -- from your patient profile. I'll shoot you a text,\" Annie smiled, \"I'm assuming you consent to me using that information for personal reasons...?\" \n\n\"Consent willingly given. I'm not a big texter by the way -- so if I don't respond immediately, it's not because I'm being rude, it's just not in my DNA to text back and forth obsessively.\" \n\n\"You say that like you're someone who's drowning in texts! Who's sending you such an avalanche of messages?\" \n\n\"No one recently, but someone set me up on this really awkward date in Baltimore, and afterwards, the woman texted me this entire thesis of why she thought she and I were destined to be BFFL, whatever that means. My phone wouldn't stop buzzing. It was overwhelming. Ever since then, I just do a public service announcement about my aversion to texts.\" \n\nAnnie burst out laughing, \"BFFL. That's 'Best Friends For Life.' I don't think that person had a texting problem. I think she had an unrealistic-expectations-problem. Hold on, you went on a date?!\" \n\n\"Yeah, and it's not something I'm willing to revisit any time soon. I've kind of developed an allergy to dating and engaging with other human beings.\" Cal rubbed her eyes; she hadn't meant to sound so misanthropic. She looked at Annie, \"Human beings other than you, of course.\" Oh god, that just made it worse. \"I mean, not in the dating sense but... ugh, you know what I mean.\" \n\nAnnie gave Cal's arm a reassuring pat, \"Yes, I know what you mean. You've got a lot going on -- you don't need to explain yourself to me. That date was clearly not meant to be, which is all that matters, really.\" That's one nameless, faceless rival out of the way....\n\nCal wondered whether Annie was flirting with her again, but was too distracted by the warmth of Annie's hand on her forearm. Cal nodded and cleared her throat, \"Right. Um. Let's get those dragon bowls set up... they'll be home soon...\" \n\nAnnie followed Cal into the kitchen and set up a buffet of ingredients for the kids to build their bowls with: rice, seaweed, veggies, grilled chicken, tofu, edamame, and chickpeas. She stole glances at Cal as they prepped for the meal, kicking herself for falling for someone who so obviously had no interest in anything beyond friendship.\n\n\"Isn't it funny how the kids won't eat each of these things if you put them on a plate in front of them, but give them the agency to mix it all up in a bowl and they gobble it up like they've never had food before?\" Cal started chopping some carrots. \n\n\"This is by far the best head-fake I've seen you execute. It's masterful.\" Annie smiled. \n\n\"Have you also noticed that the kids, for some reason, think you came up with this?\" \n\n\"Of course! Have you noticed that I haven't corrected them?\"\n\nCal swatted Annie with a dish towel just as May returned with the twins. The two women continued working side by side in the kitchen, chatting comfortably with each other. \n\n\"Looks like you guys have done this before!\" May commented lightly as the kids washed their hands. \n\n\"This is gonna be AWESOME, Paw-paw,\" Adrian said, \"You have to try it!\" \n\nThe twins' capacity for food surpassed May's expectations -- they had seconds, then thirds, then fourths. When they'd picked up every last grain of rice from their bowls, May couldn't help but clap. \"It's like you guys ate enough to last through a nuclear winter!\" \n\nCal chuckled, \"If you guys are done, it's time to get in the shower... right after you bring your dishes to the sink.\" \n\n\"Remember I get Annie for stories tonight!\" Jamie yelled as she ran into the kitchen. Adrian followed, letting his dishes drop with a crash before allowing Cal to shoo him into the bathroom. \n\n\"Do you guys do this every week?\" May asked as she rinsed out Adrian's plate.\n\nAnnie nodded happily as she started cleaning up. \n\n\"You've got quite a fan club,\" May smiled at Annie. \n\n\"I'm a big fan of theirs too! You've got amazing grand-kids, May,\" Annie smiled back at the older woman. \n\nMay put down a plate and turned towards Annie, \"I wasn't just talking about the twins.\" \n\nAnnie stared at the older woman. She couldn't come up with a response. Eventually, she managed to shake her head, \"No, no, I don't think so. I wouldn't... I mean, I haven't... um, it's not like that.\" \n\n\"Ah, so you like her too!\" May raised her eyebrows. \n\n\"May! Wait! No, please,\" Annie pleaded, now worried that Cal would emerge from the bathroom at any moment, \"It's really not like that.\" \n\n\"Listen,\" May sighed, \"When Rebecca got sick, Cal went on auto-pilot. She did everything she could for my daughter and the kids. Cal was so run down by the end that if it weren't for the kids, I'm sure she would have wanted to waste away. But she becomes the old Cal -- alive and happy -- when you're in the room. I didn't think I'd see her like that again. I'm glad to see it again.\" \n\nMay paused, tears threatening to surface. She put a hand on Annie's arm. May looked into Annie's eyes, \"You understand me?\" \n\nAnnie heard the miniscule tremor in the older woman's voice. Tears brimmed in her eyes too, \"Yes. I understand,\" Annie allowed. Holy shit, what the hell am I supposed to do now? She's basically just given me her blessing to date Cal. Holy shit.\n\n\"May,\" Annie said quietly, \"You know nothing has happened, right?\" \n\n\"I have no doubt that nothing has happened. That one,\" May cocked her head towards the bathroom, \"Is stubborn as hell. Don't get me wrong, I will never fully recover from my daughter's... from what happened. Never. But it doesn't mean I don't want Cal to find happiness again.\" \n\n\"I don't think Cal wants anything to happen; I'm not even sure she really likes me that way.\" \n\nMay wiped her eyes, \"No, no, Annie. No need for equivocation. Especially with this. Trust me. Cal likes you that way. I can tell. She just needs a giant fucking smack upside the head. So feel free to give it to her. Got it?\" \n\n\"Okay, May,\" Annie chuckled, \"I got it.\" \n\n\"Good.\" May nodded and went back to the dishes. \n\n\"Good what?\" Cal asked as she walked in. She handed Annie 'The Snail and The Whale'. \n\n\"Just imparting some old Chinese wisdom,\" May said nonchalantly, \"Where's my book?\" \n\n\"Here,\" Cal handed a second book to May, \"Sorry, you drew the short straw.\" \n\nMay groaned, \"Why does he ALWAYS pick 'The Five Hundred Hats of Bartholomew Cubbins'? Annie, want to trade? I can't carry my enthusiasm past hat number fifty. Let alone the five hundredth.\" ",
        "\"No deal,\" Annie laughed. \n\nCal smiled as Annie and May headed into the twins' room. She loved that they were getting along. She loved how easily Annie had become a part of their lives. Cal smiled as she watched Jamie settle into the crook of Annie's arm on the bed as she began reading. I love everything about Annie... I love her voice, I love-- right at that moment, Cal's eyes swept past Becca's photo on the kids' bookshelf and she froze. I wasn't even thinking about Becca just now. What the hell is wrong with me? Look after the kids and honor Becca's memory. Everything else is just a distraction. \n\n--Chapter 4: The Correspondence (The Two Weeks in Baltimore)--\n\n<br /> Cal had just sent the kids off to spend the day with their grandparents and was enjoying her daily coffee -- and her alone time -- when her phone beeped. She turned the phone upside down, preferring to not let the outside world interfere with the serene morning she had set aside for herself.\n\nShe would never admit this to anyone, but Cal had been using this time as a way to step -- haltingly -- into a secret compartment in her head, filled with thoughts and memories about one Annabelle Frye. In spite of continually reminding herself to brush off her growing feelings for Annie, she couldn't help revisiting conversations they've had. In many ways, she was envious of how her children were so open with their affection for Annie. Cal wished she could do the same. This thought immediately made her frown and her stomach twisted with discomfort; she felt like Becca could somehow hear those thoughts and it felt like she'd been caught cheating. \n\n\"I'm an asshole,\" she muttered to herself. It seemed like an impossible situation to navigate. She loved how well she and Annie were getting along. It was refreshing and new. Fundamentally, Annie made her feel whole, feel human again. Something Becca isn't around for anymore... Her brain stalled on that last thought, accept the cards you were dealt, Warner. Grow the fuck up.\n\n\"Cancer sucks,\" Cal spat out angrily. \n\nFrustrated by the futility of her solitude, Cal picked up her phone and opened her new text.\n\n{Annie} Hey, it's Annie Frye. Your BFFL. \n\n</br > In spite of her melancholy, Cal laughed. {Cal} Amazing. You managed to make me laugh when I needed it most. \n\n{Annie} You mean 'ROFL'. \n\n{Cal} I'm too old to do text acronyms.\n\n{Annie} Too stubborn, more like. \n\n{Cal} Probably. What are you doing?\n\n{Annie} Smuggling rabbits into Mexico. You? \n\nCal chuckled, {Cal} Stuck under something heavy. Good thing you texted. Send help. <br />\n\n{Annie} I'm texting b/c think I found something to do with the twins. And since you're responding to texts, whatever you're stuck under can't be all that heavy. \n\n{Cal} That's pretty cold for a BFFL, don't you think? <br />\n\n {Annie} I'm the El Chapo of bunnies, remember?  \n\nCal laughed again, enthralled with the exchange.  {Cal} I can't really see you with a moustache. \n\n {Annie} I have to beat them off with a stick when I'm out and about with my facial hair.  \n\n{Cal} Them? <br />\n\n {Annie} Other false moustaches clamoring to stick to my upper lip.  \n\nAnd on it went. For the rest of her stay in Baltimore, Cal found herself glued to her phone, waiting for the next text to arrive from Annie, anticipating the rat-a-tat-tat back-and-forth of their messages. Cal had never been someone who required constant correspondence with her company of friends, but with Annie, she became the serial texter she'd always mocked. The increasingly flirtatious edge to the messages only served to make both their hearts flutter happily each time their respective phones buzzed. Cal didn't really want to think too deeply on it -- she was having too much fun -- Annie was, among other things, making her laugh more than she had in a long time. \n\nAnnie was no less enthusiastic. If anything, Cal's texts acted as frequent accents of happiness during her day and served to cement her realization that she'd fallen head over heels in love with the woman. However, despite her promise to May, Annie made no plans to discuss any of this explicitly with Cal. It didn't seem right -- especially since Cal had said off-handedly on multiple occasions that she wasn't ready for a new relationship. \n\nThe next two weeks flew by, and the momentum of their correspondence was too strong to stop: neither wanted to abandon the connection. The day after her return to New York with the kids, Cal pinged Annie about her promise to take the kids somewhere special. \n\n{Cal} Still on for the cultural festival tomorrow? 10a? \n\nCal was getting ready to go out for a work dinner as Torrey finished up the twins' bathtime. \n\n{Annie} Who's this? I don't recognize the number. \n\nCal grinned, her fingers hovering over the keypad, \"Two can play at this game...\" {Cal} It's Ryan Seacrest. You're the superstar we've been searching for. \n\n{Annie} Sorry, search elsewhere. I'm taking two kids to Flushing Meadows in the morning. \n\n{Cal} They are out of their skulls excited. They might not sleep tonight. \n\n{Annie} Good luck with that. \n\n{Cal} Not my problem. Torrey doing bed time tonight. I've got a work dinner. \n\n{Annie} Who schedules a work dinner on a Friday night?  \n\n{Cal} Kind of my fault. They were waiting for me to get back from Baltimore.  \n\n{Annie} You are worth waiting for.  \n\nAnnie gasped. She hadn't meant to write that. She stared at the phone, desperately wishing she could rewind and redo the last thirty seconds. Her brain was frantically trying to figure out how to salvage the situation. \"Flood her with more messages, maybe she won't see it...\" she said to herself.\n\n{Annie} Is T ok doing bedtime solo?  \n\n{Annie} Was he drunk when he agreed to this?  \n\n{Annie} Does he know what he's signing up for?  \n\n{Annie} Happy to help if he needs.  \n\n{Annie} LMK  \n\n{Annie} LMK = Let me know.  \n\n{Annie} You can thank me for explaining simple text acronyms to you later.  \n\n{Annie} You there? If T needs help, I'm happy to come over. \n\nCal heard her phone buzzing as she finished getting the kids in their pajamas. She scanned the last few texts from Annie and grinned. Cal looked up from her phone, \"Annie offered to help you with bedtime tonight. Want me to call in reinforcements?\" \n\n\"YES! I want Annie to come!\" Jamie yelled. Adrian joined in.\n\nTorrey added a couple bricks to the Lego structure he was building with the kids, \"No objections from me! The more the merrier!\" \n\n{Cal} I'm here, sorry. Was saying goodnight to the kids. T says come on over!.  \n\n{Annie} Ok. Be there in 20. \n\n\"How the--?\" Cal was surprised Annie was that close. She dialed Annie's phone. \n\n\"Where are you?\" Cal asked incredulously. \n\n\"About to get on the One train at twenty-third. I'm headed up to dinner with some friends from grad school, so I'll just make a pit stop at your place.\" \n\n\"Are you sure? This is kinda sudden... and my dinner starts in half an hour so I need to leave now-ish,\" Cal had a knot of adrenaline in the pit of her stomach. She loved hearing Annie's voice.\n\n\"Sure I'm sure! Go to your dinner.\" \n\n\"Okay...\" Cal looked down at her feet, suddenly overcome with emotions, \"Hey, Belle?\" \n\nTorrey caught the nickname and smiled to himself. He smiled more at Cal's next words.\n\n\"You're amazing... Thanks. A lot.\" \n\n\"Annie's coming over!\" Cal announced as she hung up. The kids clapped happily. Torrey, who knew that Annie had very quickly become one of the twins' (and Cal's) favorite people, was looking forward to spending some time with her. \n\nCal finished getting ready and kissed the twins goodnight before heading out. Adrian had trouble saying goodbye, but Torrey managed to coax him back to the Lego tower. \n\nGuilt-ridden with how hard it was for her kids to say goodbye to her, Cal lost what little enthusiasm she had for the upcoming dinner with her law firm's other senior partners. She felt obligated to attend -- not just because the firm had been so supportive and wonderful in the past year, but because they'd granted her indefinite paid leave and she felt it was high time she started earning her paycheck again. By the time the appetizers arrived, Cal's morose mood was slightly muted by the wine coursing its way through her body, and a text from Annie saying that the twins were down and that she was headed to her dinner. \n\nThe combination of the two was just the thing to take the edge off the small talk and uninteresting work discussion about upcoming promotions and bonuses. Thankfully, nobody wanted to linger after dessert and she found herself getting ready to go home as the clock struck nine. She looked at the tables of people seated around her, every single person seemingly in the best of moods. She scowled.\n\n\"Cal?\" \n\nCal looked around to locate the source of the voice.\n\n\"Portia Wyse! What are you doing here?\" Cal turned to see a friend from college walking towards her. Actually, Portia never just walked, she prowled.\n\n\"Wedding. Rehearsal dinner in the private room over there somewhere. You would have known this, of course, if you had called me back.\" \n\nCal reddened, knowing that she had ignored Portia's voicemail from earlier in the week. \n\nPortia bumped shoulders with Cal affectionately, \"I know you have a lot of your plate. Did you know Paige McConnell? She was the same year as me and Becca.\" \n\nCal made a face, \"Maybe. Name sounds familiar. She's the one getting married?\" \n\n\"Second wedding. It's gonna be a hoot. Want to go say hi?\" Portia nodded. \n\n\"No -- thanks. I was here for a work dinner, I was just about to head home,\" she replied. Cal had no interest going anywhere near a rehearsal dinner, her distaste was now her standard reaction to anything with a sniff of romance, let alone a wedding. \n\n\"I was just thinking of ditching them,\" Portia looked Cal up and down, \"where's home?\" \n\nThe bluntness of the question shocked Cal, \"Uh, Upper West Side.\" \n\n\"I'm headed there myself. Want some company?\" \n\nNo! Go back to your Happily-Ever-After dinner; \"Portia, I'm not good company these days.\" \n\n\"I'm not looking for scintillating conversation, Cal,\" Portia said suggestively. \n\nThat made Cal laugh, \"Ok. Ok. Fine. Jesus, Portia, how is it that you still manage to make everything sound X-rated?\" Portia, of all her friends and acquaintances from college, was the one who had seemed destined for a life dedicated to bedding as many sex partners as possible. But, to everyone's great surprise, Portia met a strapping Nordic hunk named Henry Thorssen after graduation and married him a year later. With the marriage still going strong in its second decade, everyone surmised that Thor lived up to his nickname and was able to thoroughly provide for Portia's needs.\n\nPortia shrugged as the two of them strolled towards the subway station, \"If I've said it once, I've said it a million times: if you can't have fun with sex, why bother living?\" \n\nCal put up her hands, \"No sex talk. I don't... I can't really think about that stuff... It's too much.\" \n\nPortia looped her arm through Cal's, \"Ok, I'll give you a pass but you can't ignore your libido forever. If Thor got hit by a bus tomorrow, I know I'd be devastated...\" \n\n\"Portia, if Thor got hit by a bus, I think the bus would be devastated. Thor would probably walk away with a tiny bus-shaped bruise on his bicep.\" \n\nPortia laughed, \"Funny, Cal. But don't change the subject. You NEED sex!\" \n\nCal blushed, noting that several people on the subway platform turned towards them when they overheard what Portia said. \n\n\"Shhh!\" \n\nPortia raised her eyebrows defiantly, \"I don't care if people heard that! I'm fairly certain everyone agrees with that statement. So. You! You need it. Got your eye on anyone?\" \n\nCal blushed an even deeper red. \n\nPortia's eyebrows arched with curiosity, \"CALLAN WARNER! Who is it?! Tell me right now.\" \n\nCal shook her head, \"Nothing to tell. Romantic pursuits are a little out of my league these days.\" <br />\n\n\"Out of your league? Ppffftt!\" Portia made a face, \"Hardly. Do you know how many hearts you broke when you hooked up with Becca?\" \n\nCal found the notion ridiculous, \"Where do you come up with this shit?\" \n\n\"Stop avoiding the question. Who is she?\" \n\n\"Sorry, can't hear you,\" Cal shouted as the train came screeching into the station. \n\nPortia badgered Cal all the way to Cal's apartment. Cal wouldn't give in -- it was almost as if her heart wanted to keep Annie a secret, to protect the idea of being with her from prying eyes. \n\n\"Can I come up and use your bathroom?\" Portia asked innocently. \n\nCal chuckled and shook her head, \"If I didn't know you better, I'd think you had nefarious intentions.\" \n\nPortia flashed a wicked grin, \"If I didn't know you better, I'd think you were playing hard to get.\" \n\nTorrey was sprawled on the couch and watching a movie when the two of them walked in. \n\n\"Do you have a photo of this woman?\" Portia pressed. \n\nCal ignored her question, \"Torrey, this is Portia. Went to school with Becca and me. Portia, this is Torrey -- big brother number two.\" \n\nTorrey raised a hand in greeting, \"What woman?\" \n\n\"I can't believe this is happening,\" Cal rolled her eyes, \"Portia, don't you have to urinate?\" \n\n\"My kegels are like an iron vice,\" Portia wiggled her eyebrows lasciviously. She turned to Torrey, \"I'm trying to figure out who Cal's crushed out on. She keeps denying it, but has blushed sixteen shades of red since we started talking about it.\" \n\n\"I have not!\" Cal gave her brother a warning glare. \n\nTorrey ignored it. \"The woman in question is Annabelle Frye. Cal is not interested in her at all, like, so not interested that they text constantly.\" \n\nPortia raised her eyebrows in a display of exaggerated surprise, \"Cal! You hate texting. You hate cell phones. Are you getting hot and heavy with this Annabelle woman over text?\" \n\n\"You guys are so far off the mark it's not even funny,\" Cal whipped out her phone and pulled up the latest text exchange with Annie, \"Here -- look. We were just texting about nothing. Mostly about whether Torrey could handle the kids tonight.\" \n\nTorrey got up and took the phone from Cal and, with Portia looking over his shoulder, scrolled through the last few messages. He was about to hand the phone back when his eye latched onto one particular text. He squinted at the screen, \"I don't think this is nothing, Cal.\" \n\nPortia's eyes widened when she saw what Torrey did. \n\n\"What?\" Cal scoffed, \"The Ryan Seacrest thing? It was just a joke.\" \n\n\"No, Cal, the 'you are worth waiting for' thing.\" Portia crossed her arms and wiggled her eyebrows. \n\n\"Gimme that!\" Cal grabbed the phone back and scanned the screen. {Annie} You are worth waiting for.  Somehow, she had missed it in the chaos of getting out the door earlier that evening. \n\nShe couldn't move, couldn't think. She looked up slowly. Portia and Torrey were giddy with self-satisfaction. Cal held up her hand, \"Stop it. Don't. Just hang on a minute.\" \n\nPortia headed into the bathroom, \"I'm going to relieve myself while you uh, collect your thoughts.\" \n\n\"How come I didn't see this earlier?\" Cal asked, feeling uncomfortably exposed. \n\n\"You were in a rush, Annie said she'd stop by, Adrian was being clingy.\" \n\n\"But I saw the other texts...\" Cal stared at her phone, dazed.\n\n\"You're seeing it now, I guess,\" Torrey grinned, \"How are you feeling about it?\" </br >\n\n\"I don't know,\" Cal frowned, \"I... I don't know.\" \n\nPortia re-emerged, adjusting her dress, \"You should just jump on her when she comes by tomorrow morning.\" \n\n\"How did you --\" Cal stared at Portia, \"Oh, right, you read the texts. And I'm not jumping on anyone. She probably didn't mean it that way.\" \n\n\"Look, you can say that all you want, but I know flirting when I see it. And you guys are flirting up a storm with the little that I read. Live a little! Live a lot! Hell, fuck your brains out.\" Portia said the last part almost dismissively as she checked her phone.\n\nTorrey's jaw dropped. \n\n\"Portia -- MY KIDS ARE SLEEPING IN THE NEXT ROOM.\" Cal hissed.\n\nPortia tilted her head and listened, \"They are fine. They didn't hear a thing. Oh!\" Portia smiled as she answered a text.\n\nCal's brain was spinning. She'd screwed up somehow, maybe she let the texting get out of hand.\n\nPortia looked up, \"Much as I'd like to stay and talk about Annabelle Frye some more, Thor's just getting in from the airport. I've got to go. He's promised me sex for breakfast, lunch, and dinner in the hotel room this weekend.\" \n\nSome half a dozen air kisses later, the front door closed; Torrey made a noise that was a combination of a laugh and a snort, \"Is she for real?\"\n\nCal laughed, \"Yep. And this is the older, mellower version of Portia Wyse.\" \n\nTorrey considered Cal's statement, \"Wow. It's almost hard to imagine the high octane version. Her husband's name is 'Thor'?\" \n\n\"His last name's Thorssen. But it's not far from the mark.\" \n\n\"For the sake of the other guests, I hope the hotel room walls have good insulation...\" Torrey sank into the couch, \"She does have a point though, you know.\" \n\nCal anticipated this, \"I don't fuck around, Torrey. You know that.\" \n\n\"I wasn't referring to her speech about sex, I meant her saying you need to live a little.\" \n\n\"I'm barely managing what I'm doing right now, Torrey. There's no room for anything else. It'd be too much.\" \n\n\"Too much what?\" \n\nCal sighed. She walked over to the sofa and slumped into it. \"Too much of everything. There's Becca, first of all. I don't want to forget her, I don't want the kids to forget her. I don't want the kids to think I'm forgetting her. I don't want to confuse the kids. I don't want May and David thinking that I am forgetting Becca.\" \n\nTorrey didn't say anything for a little while. His heart broke as he looked at his sister, who seemed so resigned to her involuntary loneliness. \n\nTorrey wanted so much for Cal to allow herself some room to be happy again, \"I sincerely doubt Becca will be forgotten by anyone anytime soon. Cal, you get to have a say in what comes next too, you know? You can't be responsible for everyone else's grief... or confusion.\" \n\nCal shook her head, \"I'm responsible for how the kids deal with this. There's no one else, Torrey. Becca's death either fucks them up completely, or fucks them up partially. I think that I'm just barely managing the latter. Anything stupid I add to the mix is going to send them straight to therapy for the rest of their lives.\" \n\n\"Having a parent who is deeply lonely and unhappy will also send them to therapy for the rest of their lives.\" \n\n\"I'm not lonely, and I'm not unhappy. So we're fine!\" \n\n\"Are you?\" Torrey sat up straighter and looked his sister in the eye, \"This self-imposed purgatory you've put yourself in -- it's making you happy? That's you want?\" \n\n\"No, course not. I want my wife back, Torrey.\" Cal said this flatly, and without emotion. \n\n\"I know. But you can't have her back,\" Torrey said quietly.\n\nThe siblings sat in silence. \n\nCal let out a bitter half-laugh, \"As if I'd get anywhere looking for a date. I'm in my late thirties, widowed, with two kids. No dating app could spin a profile like that.\" \n\n\"I don't think you need a dating app. Just look at your texts, Cal.\" \n\n\"What?\" \n\n\"Annie. Portia was right about that too, by the way.\" \n\nCal shrugged, \"I think Portia was reading too much into it. You all are. That's what I told May when we were in Baltimore. I just like being her friend, Torrey. I can't process anything beyond that.\" Cal knew she wasn't being completely honest, but what was true was the fact that anything beyond friendship with Annie scared her in more ways than she could contemplate. Yep. I'm screwing this one up big time. Whether it's Annie or Becca, I'm not doing either one of them any favors. ",
        "Torrey sat up, \"Okay. That's good. We are moving in the right direction. At least you're admitting that this is a processing issue and not a lack of options issue. Because Annie is very patiently waiting for you to figure out your processing issue.\" \n\nCal felt her face flush, \"No she isn't.\" \n\nTorrey pointed at Cal's phone, \"Yes. She. Is.\" \n\n\"You don't know what you're talking about.\" Cal was running out of ways to deny how she really felt without lying outright.\n\nTorrey groaned, \"You can be so fucking stubborn, you know that?\" \n\n\"Yeah? Who are you to talk? Have you put together a demo of your sets yet? Steve is ready to pass it along to his record exec clients if you want.\" \n\n\"I'm missing my lead singer,\" Torrey wiggled his eyebrows. \n\nCal scoffed, \"Puh-lease. I was just filling in while you looked for your lead vocalist. And you found her! Janey's great! She can do gigs anywhere, weekends or nights. I can't. You know, kids. And I have a day job.\" \n\n\"I have a day job too, which is why it's fine for things to stay the way they are. I've no aspirations to be the next Coldplay. Tell Steve I'm not after the big time.\" \n\n\"You could be though.\" \n\n\"Yeah, just like you could start dating Annie.\" \n\nCal blew a raspberry at her brother. \n\n\"You like her. She likes you. Actually, I'm pretty sure you guys are head over heels for each other. And Annie is waiting for you to make the first move. Except you won't.\" \n\nTorrey's statements set off a dozen conflicting emotions within Cal's heart; she instinctually clammed up. \n\nHer brother continued, \"You call her 'Belle'. She likes it when you do that.\" Torrey raised his eyebrows meaningfully.\n\n\"Plenty of people call her that.\" Cal retorted. \n\nTorrey shook his head, \"Good try, sis. I made a comment about it earlier when she was here and she said you're the only one.\" \n\nCal blushed, \"You know what you are? A shit-stirrer. A giant good-for-nothing shit-stirrer.\" \n\nTorrey grinned. He reached over and ruffled Cal's hair, \"Only cuz I love you, sis. Don't spend the rest of your life thinking you can't be happy, okay?\" \n\nCal sighed, \"I'm not unhappy. That's got to be good enough, Torrey. Don't push. I can't. Please.\" \n\nTorrey held up both his hands in surrender, \"Fine. Okay. But deep down, you know I'm right. I mean, Annie likes you so much she voluntarily came over to put your kids to bed. And she did it like a pro. Think about that for a second.\" \n\n\"I think it's time for you to go home, Torrey,\" Cal leaned over and gave him a hug, \"Thanks for coming over tonight. All this would be impossible without you.\" \n\nShutting down the conversation was the only way Cal could extract herself from getting all tangled up in half-truths and denials. Torrey didn't push further, he knew some of his more pointed comments landed. \n\nAfter Torrey headed home, Cal crawled into bed and stared at the framed photograph of her and Becca on her bedside table. The photo was from one of the first holidays they took together as a couple when Cal was a sophomore in college. The beach and ocean were in the background; they were both sunburned and grinning. \n\nCal sighed, \"Everyone is being ridiculous. They think me and Annie should be a thing...\" Cal turned off the light. She glanced at the outline of the photo frame in the darkness, \"I have you in my head and my heart. Why would I need anything else?\" \n\nCal's phone buzzed. \n\n{Annie} Did you survive the work dinner? \n\nCal put down the phone, as if trying to prove that she wasn't over-the-moon excited to get a text from Annie. \n\nMoments later, she grabbed the phone again, the backlit screen glowing in the darkness. She couldn't help it. She had to respond.\n\n{Cal} Yes. More importantly, Torrey owes you -- apparently bedtime was smooth like butter. \n\n{Annie} It's all good. Now that you aren't a client, I feel at liberty to say this: if you ever need an extra set of hands, just let me know. \n\nCal suddenly had a very vivid, very explicit mental picture of Annie's hands on her body. It made her gasp. Before she could come up with a response, Annie texted again. \n\n{Annie} And this: (it may seem aggressive, but fuck it) You are by far the most awesome individual I've had the great good fortune to meet in a long time. \n\nCal's heart twitched as she read the text. When the words started to really sink in, Cal felt another pang of joy.\n\n{Cal} The feeling is mutual. Although it's somewhat surprising, given the fact that you're a bunny smuggler and all.\n\n{Annie} Thankfully, that's not my best attribute :-p \n\nAnother vivid, very sexy image of Annie flashed up in Cal's brain. Cal let out a big breath, \"Keep your hormones in check, idiot.\" \n\n{Cal} What would that be? Your ability to make your patients scream in pain? \n\n{Annie} Only the wimpy ones. \n\n{Cal} Are you calling me a wimp?\n\n{Annie} Maybe... \n\n\"Hey!\" Cal protested, but her smile betrayed her true feelings about Annie's teasing. \n\n{Annie} ... but you're still my favorite! \n\nCal's smile grew. {Cal} I bet you say that to all your former clients... \n\n{Annie} No. Just you. I'm betting on your law degree getting me out of trouble one day. \n\n{Cal} And there I was, thinking you liked me for my wit and charm. \n\n{Annie} As my nana used to say, 'You can never have enough lawyers in your life.' \n\n{Cal} I'm crushed. \n\n{Annie} You'll get over it. Good night, Cal. \n\n{Cal} See you tomorrow. \n\n--Chapter 5: The Cultural Festival (The Following Day - August)--\n\nCal woke up with a big smile on her face. She stretched and listened for noises coming out of her children's room. Miraculously, they seemed to still be asleep. She smiled a little more. Her eyes fell on the photograph on her bedside table. The smile faded. \n\n\"Yep. This still sucks,\" Cal muttered to herself. In the days immediately after Becca's death, she'd wake up crying. Now, almost a year later, Cal enjoyed a couple of minutes of her brain in neutral when she woke up. Today, she woke up with a smile, which was nice. Sure, the sadness crept in, as it inevitably did every morning, but it seemed to have ebbed into a low, quiet hum. Without really thinking about it, she shot Annie a text.\n\n{Cal} Distract me. \n\n{Annie} The average American picks his/her nose 4 times a day. \n\nCal chuckled. {Cal} Ew. Why are you up so early? \n\n{Annie} I had to pick my nose. Why are you up so early?\n\n{Cal} Parenting body clock. 10am can't come soon enough.\n\n{Annie} You need to get out more.\n\n{Cal} Ain't that the truth. See you soon.\n\nMoments later, two pairs of feet padded into the room, bringing with them two soft and cuddly bodies. Mother and children went through their morning routine, with the twins eagerly awaiting Annie's arrival. When the intercom buzzed ten minutes earlier than expected, Cal happily threw open the door. \n\nExcept it wasn't Annie who walked out of the elevator. \n\n\"I left my ring in your bathroom,\" Portia said as she sauntered in. The kids said quick hellos but, not knowing Portia well, quickly pivoted to a game of Bug Bingo. \n\n\"You left it there so you'd have an excuse to come back this morning!\" Cal narrowed her eyes at Portia. \n\n\"Yeah, true. Thor had to go to a breakfast meeting at eight this morning. I had some free time so thought I'd swing by... I want to meet this crush of yours.\" \n\nShut the fuck up! Cal mouthed as her eyes darted pointedly at the twins. \n\n\"Sorry!\" Portia covered her mouth apologetically. She leaned into Cal and whispered, \"I tried to entertain myself in the hotel room but it got boring after a while. We had three marathon rounds of toe-curling sex last night... you should try it sometime!\" \n\nCal smiled, despite herself. \"You're incorrigible, Portia.\" \n\nPortia's phone started to ring, \"Oh! It's Thor. Can I take this...?\" \n\nCal nodded and pointed Portia towards her bedroom. Not long afterwards, the intercom buzzed again.\n\n\"ANNIEEEEEEEEEEEEEEEEEEEEEEE!\" The twins yelled. Before Cal could stop them, they ran out into the hall, waiting for the elevator. Cal smiled when she heard the kids' screams of welcome and Annie's delighted greeting back. \n\n\"Hey! Did you guys sleep well?\" Annie picked up Adrian as Jamie launched into a monologue about the dream she had. \n\n\"Good morning,\" Annie said brightly to Cal, who was leaning against the entrance hallway wall, a gorgeous smile on her face. \n\n\"Hi,\" Cal couldn't manage any other words. The sight of Annie took her breath away. Unlike their weekly PT sessions, Annie was no longer dressed in sweats. She wore a tank top and a pair of hip-hugging shorts. Cal's brain turned to mush at the sight. Lara Croft, step the hell back; Annie Frye's got you beat.. Not for the first time, Cal was grateful for her children's persistent demand for Annie's attention. I am totally and stupidly checking her out.\n\nAnnie too, was seeking refuge in the kids' energetic chatter. She very much enjoyed seeing what Cal looked like first thing in the morning. The tousled hair, the sleepy grin, the... the bra-lessness...! Annie's eyes swept across Cal's breasts once, and then once more. A small hand applied a death grip on her wrist and yanked her sideways, and she allowed herself to be taken away. Adrian shoved a Bug Bingo card into her hands, \"I've already won twice this morning!\"\n\n\"Adrian, that's bragging!\" Jamie admonished. \n\nCal's bedroom door opened as Annie settled into the game. \n\n\"I have to love you and leave you!\" Portia declared as she stepped out of the master bedroom. She lifted up her arms and stretched. <br />\n\nAnnie couldn't believe her eyes. A veritable Amazon of a woman had just come out of Cal's bedroom. \n\n\"Uh, Annie, this is Portia... Portia, this is Annie.\" Cal shot Portia a warning look. \n\n\"Hi\" Portia waved. \n\nThere was no mistaking that Portia just had a very good time in there. Annie gave her best effort and smiled back at Portia, but her thoughts were a great big burning tower of hurt, anger, and jealousy. I'm sitting on the floor playing bug bingo, and a woman just slinked out of Cal's room. What's wrong with this picture??!!\n\nPortia picked up on it immediately. She might be an unapologetic tease with a one-track mind, but she wasn't cruel. \"I was borrowing Cal's room. Call from my husband. His breakfast meeting finished earlier than he expected and he was disappointed that I wasn't in the hotel room when he returned. I, uh, gave him a little pep talk that helped convince him that I was worth forgiving....\" Portia's eyes were sparkling with innuendo. \n\n\"OKAY, that's officially over-sharing, Portia.\" Cal glared at her. \n\nJamie, single-mindedly focused on beating her brother, patted Annie on her arm, \"Your turn, Annie!\" Annie turned back to the game, her mind foggy. On one hand, she knew her feelings for Cal weren't going to go away. If anything, the manic -- and happy -- texting marathon of past two weeks served to confirm the fact that there was something between them. On the other hand, she knew Cal was resolute in not wanting to date anyone. Annie knew her surge of jealousy was a harbinger of harder emotional hurdles to come; unrequited love was something Annie had always dismissed as a waste of time, but it felt different to her now. Her feelings for Cal had been growing and she couldn't dismiss them even if she tried. Instinctually, Annie knew that at some point -- if nothing changed - something would have to give. But I don't have to think about that now.\n\nPortia shrugged, \"No harm done, Cal. Annie, it's nice to meet you.\" \n\nAnnie waved as best she could -- Jamie had shoved the bag of bingo tiles into her hand. Cal opened the front door, \"Say hi to Thor for me.\" \n\nPortia nodded, \"Will do.\" She leaned in and gave Cal a hug. \"Annie really likes you,\" she whispered in Cal's ear. \n\nCal stiffened. Portia let go and looked at Cal meaningfully, \"Have fun today, okay?\" \n\nCal ignored the look, \"Bye Portia...\" \n\nAnnie was uncharacteristically quiet as they rode the subway to Flushing Meadows Park. Cal was preoccupied too, mostly from trying not to stare at Annie's hands. Despite her best efforts, Cal couldn't tear her eyes away, and fantasies of how those hands might caress her body left plenty of x-rated images in Cal's mind. Luckily, Jamie and Adrian's non-stop chatter provided the necessary diversions to mitigate any awkwardness the two women may have felt. \n\nThe moment they stepped foot on the Festival's grounds, there was even less opportunity to talk. The children pulled them from one activity to the next, and they happily facilitated rides in a dragon boat, banging various drums that the organizers made available to children, and the highlight of the afternoon, watching a demonstration of Shaolin Kung Fu. The performers, in their familiar outfits of white t-shirts and orange pants with white over-socks and black leg bindings, bounded all over the main stage in a awesome display of raw agility and strength.\n\nJamie was jumping up and down with excitement, \"Mom, can Adrian and me go sit up front for the rest of the Kung Fu show?\" \n\nCal pulled out two obnoxiously neon yellow shirts from her bag, \"Sure honey, but put these on and come right back here when it's done, okay?\" \n\n\"KAY! C'mon Adrian, let's go!\" The kids jammed the t-shirts on and sprinted towards the stage.\n\nCal and Annie watched the two yellow t-shirts weave forward to the front of the audience. \n\n\"Now that,\" Annie nodded with respect, \"is a black-belt mom move.\" \n\n\"I lost them once -- temporarily -- at a county fair. Never again. I never did tell Becca...\" Cal paused and smiled apologetically, \"I guess she knows now!\" \n\nAnnie laughed. She waved towards the sky, \"Hi Becca, Cal's kicking butt today!\" \n\nCal couldn't help but chuckle. Annie always managed to find a way to make it okay. Not once have they stumbled into anything remotely close to discomfort over Becca. She turned her head, her eyes running a path along Annie's profile, stopping at her chin. Cal dare not go further. \n\nAnnie felt Cal's eyes on her face. She liked it. \"You're staring at me, Cal Warner. What's up?\" \n\nCal blushed, \"I was just thinking how awesome this day has been for the kids. Thank you.\" \n\n\"How about you?\" Annie turned and looked at Cal, \"Was it a good day for you?\" \n\n\"Any day with you is a good day for me, Belle,\" Cal said unguardedly. Fuck. Fix it, Warner! \"Uh, you know, I didn't think friendships like this could happen at this stage in my life.\" \n\nCal's last statement was like the soft click of a door gently swinging shut. Annie put on a valiant smile, \"You make it sound like you are an octogenarian with bad teeth and a flatulence problem, when you are anything but.\" \n\n\"Why are you so nice to me?\" Cal knew she was being unfair. She shouldn't be fishing for compliments, but some reptilian part of her brain wanted desperately to confirm that Annie was into her.\n\nBecause I'm fucking in love with you and I think you feel the same way but then we keep doing this platonic friend-thing... Annie looked back towards the twins, \"Like I said, I'm building up credit for the day I need you to flaunt your JD degree and defend me in court.\"\n\n\"You're making me nervous now. What deep, dark secrets are you hiding from me?\" \n\nAnnie lifted her hands up, \"That's for me to know, and for you to find out. It'll be like peeling back the layers of an onion...\" Annie's eyebrows lifted suggestively.\n\nCal's heart lurched. Images of her peeling off Annie's clothing invaded her thoughts. It was thrilling but terrifying all at once. The electric energy of their mutual attraction was unmistakable. Stop acting like a teenager. You're a widow with children for fuck's sake!\n\n\"I'll keep that in mind,\" Cal smiled, but the playfulness was gone from her voice. \n\nAnnie gamely brushed off the subtle dismissal. Oh this is really going to suck. Two neon yellow blurs of energy suddenly burst into her field of vision. She nodded towards them, \"Here they come -- I think we'll have a lot of Kung Fu madness all the way back to the city!\" \n\nAnnie was right on the money: the kids were exhilarated by the demonstration long after returning home. They could barely sit still during dinner, and there was more water outside of the bathtub than inside once it was all said and done. The benefit to all the madness? The twins wore themselves out. Adrian fell asleep before Cal could start reading him his story, and Jamie fell asleep not long after Annie started reading hers. \n\n\"Thanks again for today, Annie,\" Cal said quietly as Annie got ready to leave. \n\n\"I had a great time, Cal,\" Annie gave Cal a quick peck on the cheek, \"Have a great rest of the weekend!\" <br />\n\nThrills sped through Cal's body, \"Thanks, but it's nanny interviews tomorrow... the twins aren't going to like it.\" \n\nEvery braincell was exhorting Annie to politely sympathize and say goodnight, but her heart was thumping out a different beat. \"Do you want me to come hang out and keep them occupied when you need to talk one-on-one with the candidates?\" \n\nCal's eyes widened. Annie thought she looked adorable. \n\nAnnie laughed, \"Cal, it's not a big deal. I wouldn't offer if I couldn't do it.\" \n\nWhen Cal continued to struggle with words, Annie waved a hand in front of her face, \"Earth to Cal?\" \n\nCal suddenly wrapped Annie in her arms and squeezed tight, \"Thank you,\" she whispered. \n\nIt was Annie's turn to be rendered mute. Cal's arms felt amazing, the contours of her body fit so perfectly against Annie's, and the soft brush of Cal's breath against Annie's neck was so enticing that she stopped breathing. <br />\n\nThe two of them remained in an embrace for what seemed like forever, both of them relishing the coming together of their bodies. \n\nCal leaned back slightly and looked into Annie's eyes, \"Seriously, thank you.\" \n\nAnnie nodded wordlessly, not daring to look anywhere other than the blue depths of Cal's eyes. Cal's eyes flickered down to Annie's lips for a fraction of a second, but it did not go unnoticed. Annie's stomach lurched. She wants to kiss me. \n\nCal knew her eyes had betrayed her. She released Annie immediately and shoved her hands in her pockets, \"Um, really Annie, thank you. That's so nice of you, uh, I can't describe how amazing it is that you offered, but I think I'll be okay on my own.\" \n\nAnnie stared at Cal. She sighed and shrugged, \"Fair enough.\" Annie wanted to come across as carefree as possible, so she smiled, opened the front door and said, \"Good luck!\" over her shoulder as she left.\n\nAnnie scrunched up her face the minute the elevator doors closed. You total, utter, effing idiot, Annabelle Frye!!! Annie shook her head as she walked out of the building. \"I need to get my head examined...\" she muttered to herself. Spending time with Cal was a study in self-control, and Annie didn't know how much more she could take. It was exhilarating to be in Cal's company, but it was also devastating. Annie yearned to touch her, to embrace her, to feel the soft ridges of Cal's lips against her own.\n\n\"ARRGGHHH!\" She suddenly yelled in frustration, causing those walking near her to jump with surprise. \n\nAnnie stomped towards the subway, \"Okay. Home. Shower. Bed. Lobotomy. And not necessarily in that order.\" \n\n<center>There is a girl in New York City \n\nWho calls herself the human trampoline \n\nAnd sometimes when I'm falling, flying \n\nOr tumbling in turmoil I say \n\nOh, so this is what she means \n\nShe means we're bouncing into Graceland\n\nPaul Simon, \"Graceland\"</center>\n\n--Chapter 6: The Night At The Bar (Two Months Later -- October)--",
        "\"Where are you guys going?\" \n\nAnnie backed away from the front door and reversed until she could stick her head into her roommate's bedroom, \"The usual. Spotted Cat on Hudson.\" \n\nMeghan nodded and looked at Annie and her two friends, \"Can I tag along?\" \n\nMichelle waved her arms magnanimously, \"Why of course, milady... but you know it's a gay bar, right?\" \n\nMeghan's face broke into a sly smile, \"It's the one with the super cute bartender right? What's her name? Katie?\" \n\n\"K.T.. Kirsten Turner. But don't call her Kirsten if you value your life. And you're into women? How have I not known this until now?\" Annie exclaimed as Jo and Michelle burst into laughter.\n\n\"It's not a standard question landlords ask sub-lettors... and I've been travelling a lot since I moved in... so I've been looking for the right opportunity to bring it up. What's so funny?\" \n\nMichelle wiped her eyes as tears came streaking out, \"Alex is not going to believe this.\" \n\n\"Believe what?\" Meghan looked between the three women, all of whom were trying to shake themselves off the laughing fit.\n\n\"Grab your coat. Let's go,\" Annie shooed them out of the apartment as Jo started to explain, \"Alex is convinced that Annie's turning the apartment into an Econolodge for LGBT tenants.\" \n\n\"Lucy was straight.\" Annie protested.\n\nJo started counting on her fingers, \"Fine, Lucy aside... First there was Sienna and Sasha, whose parents needed a place to stay over Christmas, then after Lucy moved out there was Marco who almost set off World War Three in the building because he was blasting his music so loudly Alex had to bring Annie in to mediate.\" \n\n\"Oh god, he didn't last more than six months,\" Annie shuddered at the memory, \"Then Craig and Jonas sublet for about a year while their apartment was getting renovated. They were so sweet... and then you came along, Ms. Meghan.\" \n\n\"Although Annie's gaydar completely failed her. She was convinced she broke the streak.\" Jo laughed again. \n\nMeghan smiled, \"I bet your gaydar failing was due to a certain client taking up most of your brain space...\" \n\nAnnie looked at her roommate, \"What?\"\n\nMeghan shrugged as they stepped out onto the street, \"One of the first things I heard you talk about was that house call you made to Cal's apartment. I thought you were going to moan and groan about having to trek up there, but instead, it was all about Cal, her kids, and how amazing she was.\" \n\n\"I did?\" Annie tried to think back to the summer. \n\nMeghan nodded, \"And then every Tuesday, you'd be buzzing around in the morning, and buzzing around at night. You don't have to be a rocket scientist to figure it out.\" \n\nAnnie blushed, \"I didn't know I've been so obvious.\" \n\n\"No, no,\" Meghan shook her head reassuringly, \"You always put your game face on before you headed out for the day.\" \n\nJo grabbed Annie by the shoulders, \"Oh, you are SO busted Annie Frye!\" \n\nAnnie looked at Meghan, \"You're kind of freaking me out right now. I didn't know I was under observation.\" \n\n\"You weren't!\" Meghan said, horrified, \"No -- really, I wasn't spying on you. It was just really clear that being with Cal makes you happy. And from what you've described, you make her happy, too.\" \n\nAnnie smiled at that. She nodded, \"Maybe. But alas, she remains frustratingly out of reach.\" \n\n\"Good thing we have lots of alcohol ahead of us tonight,\" Michelle joked as the subway trained hurtled down towards the West Village. \n\n\"That'll keep K.T. busy,\" Meghan cut in, \"And gives me lots of opportunity to get to know her...\" \n\nAnnie shrugged, \"K.T.'s kind of going through a slutty phase right now. Or maybe that's what you're looking for...?\" \n\n\"Am I her type?\" Meghan asked as they walked towards the bar. \n\n\"Are you a lying, cheating asshole?\" Jo asked. \n\nMeghan shook her head emphatically, \"Absolutely not.\" \n\n\"Then you are her type,\" Annie and Michelle said together. \n\nAnnie laughed. Meghan pursed her lips, \"What am I missing?\" \n\n\"K.T. has not been having the best of luck with romance. First, her girlfriend dumps her after they'd been together for five years. Then she met Tori and it was going great until last month when she found out Tori had been cheating on her with some guy who... and here's the kick in the teeth... was someone K.T. dated in college.\" Michelle raised both hands in surrender, \"I mean, that's like too much assholicness for one person to have to process, right?\" \n\nMeghan shook her head, \"That's, like, deep sphincter-level assholes. Wow.\" \n\n\"So, needless to say, K.T. is getting a lot of stuff out of her system. So approach with caution.\" Annie pushed open the door of the bar.\n\nMeghan followed the three women inside. They quickly settled into a small table in the corner. \n\nJo nodded towards the bar, \"I'll go grab us some beer. Meghan, care for an introduction?\" \n\nAnnie watched Jo and Meghan thread their way to the bar, \"This is going to be interesting.\" \n\nMichelle craned her neck as she tried to keep Jo and Meghan in her sightline, \"Aha! Jo's made the intro.\" \n\nAnnie checked her phone, she was expecting a text from Cal about the next morning. \n\n\"What's with the phone? You've been checking it obsessively all night,\" Michelle asked. \n\n\"Waiting to hear from Cal about tomorrow morning, no big deal,\" Annie threw her phone on the table. \n\n\"So what's going on with Cal? Is tomorrow a date thing?\" \n\n\"Woah-woah-woah! Don't get started without me!\" Jo slid back into her chair and angled her head towards the bar, \"I did the intro. They're chatting... if K.T. breaks out a dirty martini for Meghan, that'll be the sign that Meghan's in...\" <br />\n\n\"I don't know if that's a good thing or a bad thing,\" Annie observed. \n\n\"Probably neither. So... Cal?\"\n\n\"-ifornia dreaming,\" Annie deadpanned. \n\n\"Classic deflection,\" noted Jo with mock concern, \"We clearly need to dig into her, um, lawyer problem.\" \n\nAnnie rolled her eyes, \"It's not a problem.\" \n\nTwo sets of eyes looked at her with great skepticism. \n\n\"It's really not!\" Annie exclaimed. \n\nNeither Jo nor Michelle changed the expressions on their faces. \n\nAnnie threw up her hands in surrender, \"FINE. What do you want me to say? I'm in love with her. I love her kids. We spend practically every weekend together. I know she's into me. But every time I think we are about to kiss or something, she backs off. Like, way, way off.\" \n\n\"And then what happens?\" Jo asked.\n\nAnnie rolled her eyes, \"Then I don't hear from her for a day or two, and then she texts, and I text back... or she calls and we go grab dinner. Or she forwards me an invite to a benefit for next week and asks if I want to go with her...\" \n\nMichelle leaned in, \"And are you going to go with her?\" \n\n\"YES!\" Annie hid her face behind her hands. She mumbled something neither of her friends could hear.\n\n\"What did you say?\" Michelle asked. \n\nAnnie looked up, \"It's like we are a couple, but we aren't.\" \n\nJo crossed her arms, \"What?\" \n\n\"It's like we are a couple,\" Annie repeated, \"But we aren't. We go to dinner like a couple would, you know, date night. The babysitter comes, we say goodnight to the kids, and then off we go. But it's not date night. It's just dinner, but I know it feels like date night to both of us. Except we aren't dating.\"\n\nJo shook her head, \"Time to fish or cut bait.\" \n\n\"JO!\" Michelle exclaimed, \"That's a bit harsh, don't you think? I really like Cal -- she's just dealing with a lot right now!\" \n\nAnnie looked between her friends as they proceeded to have a heated debate about what Annie should do. \"Hey!\" Annie interrupted them, \"Guys, you know I'm still sitting right here, right?\" \n\n\"Sorry,\" Jo looked a little sheepish, \"I have scar tissue from watching another friend hang around waiting for someone who was never going to get on board.\" \n\n\"That was different!\" Michelle insisted, \"That Nomi woman is crazy-super-duper closeted. Sarah should definitely stay away...\" \n\n\"It's different, but similar. Cal may not be closeted, but she's in bad headspace right now and will be for god knows how much longer. I liked Cal when we met up that time, but there's a part of her that's totally closed off. You can't really wait around for that to clear up, because it might never clear up.\" Jo shrugged, \"Sorry, Annie, not what you want to hear, but it's the truth.\" \n\nMeghan returned with a round of beers and flopped into the empty seat at the table, \"Drink up!\" \n\nAnnie stared at the wood grain of the table, running her eyes along the ridges of the surface, \"So you're basically saying I don't have a snowball's chance in hell.\" \n\nMeghan clucked her tongue and shoved a beer in front of Annie, \"Except Cal likes you -- she wouldn't keep asking you to hang out otherwise, right?\" \n\nMichelle, ever the optimist, raised her eyebrows, \"So maybe you have a slight chance. A ghost of a chance.\" \n\nAnnie laughed bitterly, \"There's a ghost in this equation alright, and she's definitely not on my side.\" \n\nAnnie took a big gulp of beer and shrugged. \"Maybe Jo is right,\" she allowed, \"Maybe I should just--\" But she couldn't finish the sentence. The thought of not seeing Cal or the kids was unfathomable. \"Ugh. This sucks,\" she muttered half-heartedly.\n\n\"The old Annie would have been outta there a long time ago...\" observed Jo. \n\nAnnie held up a hand, \"Okay, stop right there. Don't even start with that, okay? First, Alex has already been giving me shit for it.\" \n\nJo grinned even more, \"Sorry, couldn't resist.\" \n\n\"And second, it's different than the others in the past. Those losers just couldn't commit, and would fuck around and play head games. Cal's different. I know she's not playing around -- she's just holding a lot right now. She's... she's just different. But enough about this. We aren't solving this tonight. What happened with K.T.?\" \n\nMeghan took a sip of her beer, \"We chatted -- mostly about how I know you guys. She seemed distracted. Or uninterested. Either way, I wasn't going to get anywhere. So I grabbed our drinks and came back.\" \n\nJo stole a glance at the bartender, \"That's weird. No offense, but she's been propositioning people left and right... Maybe she already has a hook-up for tonight or something...\" \n\nMeghan flushed red, \"Geez, that makes me feel awesome. Thanks!\" \n\n\"Trust us,\" Annie held up her beer in salute, \"It's not you. It's her.\" \n\nMeghan tapped her beer against Annie's, \"Friday night, and both of us left wanting. Too bad we're not into each other.\" \n\nThey both drained their drinks. Annie pointed to Meghan's empty glass, \"One more? What about you guys, want some food as well?\" \n\nMichelle nodded, \"I'll have another -- but why don't we head across to the East Village for some ramen after this?\" \n\n\"YES! Oh, that is going to hit the spot,\" Annie got up and headed to the bar. It was moments like this where she missed Alex the most. Jo and Michelle were awesome, but late night ramen runs were what she and Alex did a lot of when Alex lived in New York. They'd made it their mission to root out the small hole-in-the wall ramen bars with the best broth and the least number of snobby foodies. And then they'd sit, talk, and slurp through bowls of deliciousness into the wee hours of the morning. \n\nAnnie sighed. K.T.'s greeting shook her out of her thoughts, \"Hey A-train!\" \n\n\"Hey yourself! One more round,\" she indicated with a nod to K.T., holding up four fingers, \"Same as before.\" \n\nK.T. tilted her head in acknowledgement and pulled the beers. \n\n\"You doing okay?\" Annie asked. \n\nK.T. shrugged, \"Same old, same old. Met your roommate.\" \n\n\"I'm just getting to know her myself, she's been traveling a lot,\" Annie explained, \"Seems nice. She's 'family,' you know?\" \n\nK.T. looked up, \"Really? Wow. I totally got the flirty straight girl vibe.\" \n\nAnnie chuckled, \"She flew under my radar too. Glad to know I'm not the only one.\" \n\n\"Huh,\" K.T. looked over at Meghan thoughtfully, \"Intriguing. Here you go,\" she said, sliding over the tray of drinks. \n\n\"Thanks.\" Annie laid some cash on the bar for the order and tipped her head towards her table, \"Are you interested?\"\n\n\"I'm a mess right now, you know that,\" K.T. shrugged, \"How about you, how are you doing?\" K.T. wiped her hand on a towel. \n\nAnnie waggled her head with ambivalence, \"Could be better... we're headed out after this for some ramen -- wanna come?\" \n\nK.T. flipped the towel over her shoulder, \"Can't. I have to close up tonight so I won't get out of here until two the earliest.\" She looked over at Annie's table again, \"But maybe next week?\" \n\nAnnie grinned, \"Okay. Thanks for these.\" \n\n\"You look pleased with yourself,\" Michelle observed when Annie returned and doled out the beer. \n\nAnnie's eyes sparkled with amusement, \"She thought Meghan was straight. You apparently give off 'flirty straight girl vibes.'\" \n\nMeghan blushed, \"I do not. I haven't come across as straight for years and years. You east-coasters have funky gaydars.\" \n\n\"Oh, those are fighting words!\" Jo laughed. \n\nAnnie placed a beer in front of Meghan as a peace offering, \"I'm just saying: she didn't shut you down because she didn't like you. She thought you played for the other team.\" \n\nAnnie's phone buzzed. She smiled. {Cal} 8am breakfast at Bubby's tomorrow?\n\n{Annie} You got it. How was your day?  \n\n{Cal} Average. How was yours?\n\n{Annie} Average... but getting better (having drinks with Jo and Mish).  \n\n{Cal} Say hi for me. Can't wait to see you tomorrow. \n\n{Annie} Same here. Have a good night. xo. \n\n{Cal} Right back at ya. xo. \n\nAnnie stared happily at Cal's last text before putting her phone down. \n\n\"Cal says hi,\" Annie reported. She looked up to see three faces staring at her with bemusement. \n\n\"What?\" She asked defensively. <br />\n\n\"You are sooo in love what that woman, Annie! Jesus, it's like, oozing out of you. And that was just texting. What's it like after you spend time together?\" Jo smirked. \n\nAnnie's shoulders sagged with resignation, \"Yeah, I'm pretty much up shit creek without a paddle.\" \n\nJo shook her head, \"You sure are. I have serious doubts, but I really hope Cal comes around.\" \n\n--Chapter 7: The Sleepover (That Saturday Night)--\n\nCal kissed both kids goodnight and switched out the light. Jamie was asleep before Cal finished reading, but Adrian was still wide awake. \n\n\"I can't sleep,\" he whispered loudly. \n\n\"You haven't even tried yet, bub,\" Cal said gently, \"You can do it. I love you.\" \n\n\"I want Annie to come and say goodnight.\" \n\nCal sighed, \"Annie has to go home, sweetie, but I'll ask her, okay? No promises.\" \n\nCal quietly closed the door. Annie was sprawled out on the couch, reading the newspaper. \n\n\"There's a request for you to say goodnight. Sorry.\" \n\nAnnie hopped up, \"You know this could have been prevented if --\" \n\n\"Yes,\" Cal held up her hands in surrender, \"If I didn't insist on doing bedtime by myself.\" \n\nAnnie nodded sagely as she made her way to the kids' room, \"Correct-a-mundo.\" \n\n\"But I felt bad -- it's not really your job,\" Cal said honestly. \n\nAnnie tapped Cal's cheek with the tips of her fingers, \"You're cute. Really. And dumb as a post sometimes. I wouldn't offer if I didn't want to.\" \n\nCal froze, words failing her as she watched Annie tiptoe in to see Adrian. She pressed her palm against her cheek, Annie's gentle chiding poking a big old hole in the charade Cal tried to pull off. Cal had insisted on doing bedtime by herself because it had started to feel completely normal for Annie to help put the kids to bed. Cal felt that she was starting to rely on Annie for too much, and she knew that she had been craving Annie's presence in a way that was becoming harder and harder to suppress. It made her head hurt. \n\nTen minutes later, when Annie emerged from the children's room, she found Cal semi-prone on the couch with a telltale bottle of ibuprofen and a glass of water on the coffee table. \n\n\"He's down,\" Annie whispered. \n\nCal half opened her eyes, \"Thanks. What was up with him?\" \n\n\"Turns out he's worried about going to Joey's birthday party tomorrow.\" Annie said as she lowered herself onto the couch. \n\nCal eyes popped open, \"Huh?\" \n\n\"It's at Bowlmor Lanes, remember? He's worried because he doesn't know how to bowl.\" \n\nCal sat up, distressed that she had not noticed her son being upset, \"Why didn't he tell me?\" \n\nAnnie shrugged, \"He's six! He was probably working up to it and ran out of time. Don't stress about it. I told him that most people don't know how to bowl, and even if he was the only one at the party who didn't know how to do it, his job is to have fun tomorrow.\" \n\n<br /> \"How are you so good at this?\" \n\nAnnie shook her head, \"I am not. But I do have three older siblings who all have children, so I guess some stuff must have seeped in through osmosis...\" \n\nThe full force of a week's worth of emotional and physical fatigue hit Cal all of a sudden. She leaned forward and buried her face in her palms. I will not cry. I will not cry. I will not cry.  \n\nAnnie was by Cal's side immediately. She ran her hand up and down Cal's back, \"Hey...\" \n\n\"I'm okay,\" Cal mumbled through her hands, \"Just give me a minute.\" \n\nWhen she felt Cal relax slightly, Annie slid behind Cal and extended a leg on each side of Cal's body, \"Lean back.\" \n\nCal looked behind her, \"What?\" \n\n\"Lean back,\" Annie repeated as she motioned for Cal to recline, \"Come on, Warner, just do it.\" \n\nCal knew she shouldn't, but every fiber of her being was screaming for Annie's attention. With a deep breath, she complied and leaned back. Annie began a slow relaxing massage; she started with Cal's head, and worked her way down Cal's neck, shoulders, and upper arms. Neither one spoke, both women quietly taking stock of that moment. It would be too simplistic to say that they were enjoying their closeness -- the labyrinth of emotions and expectations wouldn't allow for it -- but it was incontrovertible that they both needed it... and both wanted it. \n\nWhen Cal opened her eyes, the room was dark. She blinked as she looked at the clock: 1:23am. She realized she was still lying on Annie, and Annie's arms were wrapped around her chest. At some point, Annie had pulled a blanket over them. Cal closed her eyes and listened to Annie's steady breathing. I must have fallen asleep. Oh Christ! And then she was stuck. Cal stayed still. It felt so amazing to have Annie's arms around her. It would be so nice if... \"Shit.\" She muttered to herself. \n\nAnnie stirred, \"Cal?\" \n\n\"Annie, sorry!\" Cal shifted, \"I didn't mean to fall asleep. You should have woken me!\" \n\n\"I was surprised you didn't wake yourself up, you snore like an old man!\" Annie grinned. \n\nCal looked at Annie, horrified, \"I do?\" \n\nAnnie laughed, \"No, you don't. Your face just now was priceless.\" \n\nCal gave Annie a playful shove, \"You're horrible. But nice. Thank you.\" \n\n\"You're welcome. You clearly needed the sleep,\" Annie stretched, \"I should get going.\" \n\n\"You can stay... if you want to... uh, in the guest room, I mean,\" Cal added quickly. \n\nAnnie smiled and cocked an eyebrow, \"No different than the other times I've stayed over, you mean.\" \n\n\"Right,\" Cal blushed, embarrassed that she'd made it awkward... or worse, clued Annie in on the inappropriate images bouncing around in her brain. \n\n\"Alrighty then,\" Annie shuffled off the couch and folded the blanket, \"See you in the morning.\" \n\n\"See you in the morning,\" Cal agreed. \n\nAnnie fell face first on the the bed in the guest room and yanked the blankets around her. She flung her clothes off and was about the reach up and switch off the light when a text came in.\n\n{Cal} Sleep well.\n\nAnnie smiled, {Annie} That all depends on whether you snore. xo. \n\nThrough the walls of the apartment, Annie heard the faint ping from Cal's phone as the text landed, followed quickly by an indignant \"Hey!\" from Cal. Annie heard Cal's bedroom door open, and her footsteps approach."
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian romance",
        "lesbian drama",
        "romance",
        "women romance",
        "hotel",
        "ghost",
        "lost love",
        "drama",
        "supernatural"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-ghost-of-a-chance-7"
}