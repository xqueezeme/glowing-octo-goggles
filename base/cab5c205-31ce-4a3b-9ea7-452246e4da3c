{
    "title": "Trailing Home Ch. 06",
    "pages": [
        "A few mornings later, Liam awoke to find Selena snuggled close against his side. It had rained steadily the day before, but he noticed that the rain had stopped sometime during the night. There was still a damp chill in the air, and he could hear drops falling from the leaves.\n\nSelena was obviously drawn to his warmth, and she had wrapped an arm around his waist while she slept. Her face was nuzzled in the crook of his arm, and her warm breath feathered the side of his neck. He took advantage of the moment to admire the way her lashes lay in thick velvety crescents against her cheeks, and her lips were slightly parted. He couldn't resist the urge to sample her mouth.\n\nHe rose on one elbow and kissed her, cradling her head on his arm. At first, she lay unresponsive, but as his kisses became more insistent, she roused from her sleep and sighed. She stole his breath when she began to respond. He tasted her with a leisured thoroughness, enjoying her softness even through the layers of blankets between them.\n\nWanting more, he worked at the buttons of her thick cotton nightgown until he had it opened to the waist. He rose up and watched as her eyes fluttered open. She stared up at him, and he wished he could make out the color of her eyes. When he pulled the blanket from between them, she made no move to stop him, and he felt the blood throbbing in his loins. He reached inside her gown to cup her naked breast, and Selena released a soft sigh.\n\nThe feeling of his hand on her breast was like heaven. His strong fingers kneaded the flesh, and when he squeezed her nipple between his thumb and fingers, she bit her lip to keep from moaning out loud. Shards of desire shot through her, and she felt an aching, empty hunger between her thighs. She couldn't resist the urge to close her eyes and arch her back, mutely offering her breast for more of his attention.\n\nWhen Liam dipped his head to suckle her nipple, she released a strangled groan of pleasure. The heat of his mouth on her breast made her feel like her bones were melting, and she threaded her fingers through his hair, marveling at these new sensations. Of a sudden, she understood the soft sighs and moans that she had sometimes heard coming from her parents' bedroom. The effort it took for her to remain quiet beneath Liam's touch sapped her strength, but she didn't want to make any noise when nearby campers might hear her.\n\nHe nipped and sucked her nipple, taking his time to savor its softness before he moved to her other breast. The thick stubble on his jaw grazed her breasts, and despite her best efforts, Selena couldn't suppress another soft moan of delight. By the time Liam had paid homage to both of her breasts, Selena was writhing with need, and when he raised his head to look at her, they were both breathing hard. She could feel the insistent pressure of his erection against her hip, and she knew what he wanted, but she wasn't afraid. For some reason, she didn't feel the need for questions between them. Her mind was complacent, for once not demanding that she ask Liam to declare his love for her. She wanted this, and she would worry about love and commitment later.\n\nLiam let his eyes drop to her naked breasts, rosy from his ministrations. He felt a primal satisfaction. Somehow he had stumbled on the one woman who could hold his fascination, and he wanted to discover all that she was, both physically and emotionally. Selena was his, and he was anxious to stake his claim. His hand drifted down over her hip and thigh to reach beneath the hem of her gown. His fingers trailed up the inside of her thigh, and she opened her legs for him, gasping when his hand reached her heat. His fingers stroked her moist folds, and their eyes met and held as he explored her with increasingly bold caresses, slipping one finger into her.\n\nNearby voices intruded on the moment, and Liam looked out the tent flap to see several nearby campers already up and moving around in the predawn darkness. Liam's frustration was supreme. He briefly considered completing his conquest, but he dismissed the idea just as quickly. He wanted their first time to be something more than just a hurried coupling during which they both felt self-conscious in case someone nearby might hear them. Yet, he knew that stopping now, he would be uncomfortable throughout the day.\n\n\"Damn!\" The single word was full of aggravation.\n\nSelena reached up and cupped his cheek in her palm, waiting until he met her eyes. She smiled at him, and her eyes were limpid pools full of promise.\n\n\"Shall we continue this tonight?\" she whispered.\n\nHer proposition did much to lessen his disappointment, and he gave her a lopsided grin. \"Madam, that is my most sincere wish. I want you in the worst possible way, and if I don't have you soon, I fear that I'm going to go crazy.\"\n\n\"Well, I certainly wouldn't want to be responsible for that,\" she whispered with a grin, running a fingertip along his jaw. \"We'd better get up.\" She moved to rise from the pallet.\n\nEven though he knew it would increase his frustration, Liam forestalled her. \"Just one more kiss to last me through the day?\" he asked.\n\nThe raw need in his voice tugged at Selena's heartstrings. She pulled him down to her and kissed him, letting her own pent up longings overflow. In her innocence, she couldn't understand what a devastating effect she was having on Liam, but when he finally broke off the kiss on a groan, they were both breathing raggedly. Liam stroked his finger deep inside her as he met her gaze. The fire in his hazel eyes nearly stole her breath.\n\n\"Until tonight then.\" His voice held firm conviction, and Selena shivered with anticipation.\n\nLiam rose in the dim light of dawn and stepped into his breeches, noticing that for the first time, his wife was watching him dress. Her close attention only served to further aggravate his lust, and his hands trembled as he fumbled with the buttons on his shirt. As soon as he was decent, he beat a hasty retreat from the tent. Selena waited until he left before she rose and hurriedly donned her own clothes. Her body was tingling from Liam's caresses, and she felt feminine and pretty knowing that he desired her. She went about her morning routine with a spring in her step and a smile on her face.\n\nThe day started out well. They got off to an early start and the weather was fine after the previous day's rain. However, the trail was muddy and deeply rutted, and they struggled throughout the day. They freed the wagon from one mud hole only to get mired in the next. Progress was achingly slow, and Liam and Gerald took turns lending assistance to each other as they plodded along. Several times they had to use all the extra oxen to pull the wagons out of the muck. By evening, they had only traveled a few miles, and they made camp near a creek that flowed through dense woods.\n\nLiam was covered nearly head to toe with a liberal coating of mud. He should have been exhausted from the day, but he was too eager for the coming night. After wolfing down his supper, he retrieved clean clothes, soap and a towel from the wagon. He gave Selena a roguish grin.\n\n\"I'm going to take a bath in the creek.\" He came to tower over her and was careful not to get her dirty when he bent to press a quick kiss on her upturned lips. \"Then I believe we have a date.\"\n\nSelena blushed but met his eyes and gave him a sultry smile. \"I'll be waiting. Hurry back.\"\n\nShe watched him disappear into the woods and quickly washed all the dishes. When they were put away, she went to the tent and made their pallet. She smiled to herself as she made one larger pallet rather than two, and her smile turned into a lustful grin. Closing her eyes, she remembered their morning interlude, and she was anxious to again feel Liam's strong arms around her. From habit, she went to retrieve her nightgown, but then she thought better of it. She was hoping not to need a nightgown tonight.\n\nShe puttered around, but after a while, she ran out of things to keep her occupied, and she wondered what was taking Liam so long to return. He bathed every evening, and she usually had barely enough time to make out their beds before he was back. Suddenly worried that something might have happened to him, she set out to look for him.\n\n***********\n\nLiam reached the creek and quickly doffed his muddy clothes beneath the light of the full moon. He grabbed the soap and waded into the creek, sucking in his breath from the coolness of the water. Although it was late May, the rivers and creeks were still cold enough to make bathing somewhat uncomfortable, but lately, he had come to welcome the chill since it cooled his ardor. Tonight, he barely noticed the cold water as he hurried to wash.\n\nStanding thigh deep in the water, he lathered his body and hair, scrubbing away the sweat and grime from the day until he felt fresh and clean. He sank beneath the water and resurfaced, wiping his hair out of his eyes as he walked toward the bank. He was nearly to the edge when he glanced up and saw a woman standing nearby. At first, he thought it was Selena, but he quickly realized his error and took a few steps back until the water was above his waist.\n\n\"Natasha, how long have you been there?\" he growled.\n\nShe came forward with a throaty laugh. \"Long enough to thoroughly enjoy your bath. I always thought you would look magnificent without your clothes and I'm glad that I wasn't disappointed.\"\n\nLiam placed his hands on his hips and glared at her. \"Well now that you've enjoyed your little peep show, get lost so I can get out of here.\"\n\n\"Oh don't be such a spoiled sport,\" she simpered. \"I thought I might join you.\" She began to unbutton her dress.\n\n\"Dammit, Natasha. Stop acting like a floozy and go back to your family.\"\n\n\"I don't think so,\" she said, shrugging out of her dress to let it fall at her feet. She started on the buttons of her chemise.\n\n\"Natasha, I'm a married man. I already have a wife to warm my bed, and I don't want you.\"\n\nLiam was holding his temper firmly in check. Natasha's forwardness angered him but not nearly as much as the fact that she was delaying him from getting back to Selena.\n\n\"Ah, but that's the problem isn't it?\" Natasha asked.\n\nShe dropped her chemise and quickly wriggled free of her pantalets. Her naked form was clearly lit by the moonlight, and she showed no shame as she waded into the water. Natasha had overheard Selena talking with her mother, and she knew that Liam's marriage was not what it seemed. She was determined to steal him away for herself, and she was willing to use all her feminine wiles to accomplish that goal.\n\n\"I know that Selena is not really a wife to you, Liam. I've noticed the two of you together. She doesn't want to please you, but I do.\"\n\nLiam was taken aback by the woman's boldness. His eyes raked her naked body dispassionately, and he gave her a harsh frown. \"Grow up, Natasha. I don't want you.\"\n\nBefore he could stop her, Natasha closed the distance between them and threw her arms around his neck. She pressed her breasts against him and kissed him full on the mouth. Liam reached to grab her arms and shove her away just as he heard a startled gasp. He saw Selena standing on the bank, and his heart sank to his toes. He knew quite well what conclusions she would draw. She whirled and fled back through the woods.\n\nLiam cursed viciously and flung Natasha aside, heedless of the fact that she sank beneath the water and came up sputtering and coughing. He waded to the shore and wrapped the towel around his waist, not even bothering to dress. He stepped into his boots and scooped up his clothes before turning a heated glare on Natasha.\n\n\"Don't ever come near me again. You're lucky I'm not going to tell Gerald about this, because I have a feeling he would beat you senseless. However, if you so much as look at me the wrong way again, you can bet I will tell him.\"\n\nWithout another word, Liam hurried back to camp.\n\nSelena raced back to camp, running so fast her side began to ache. She felt panicked tears welling and she angrily brushed at her cheeks. She felt like such a fool! Thank God she hadn't given herself to Liam. That would have been the crowning blow to her pride.\n\nBy the time she reached the tent, cold fury had began to blossom in her heart. She flung the flap aside and her eyes lit on the pallet she had carefully laid out. The covers were turned back invitingly, and they now seemed to mock her. In a temper, she stepped onto the blankets and kicked at them until they were a tangled heap. She snatched up two of them and went to the wagon, where she bent and made a pallet underneath it. Just as she was smoothing out the top blanket, she heard Liam returning.\n\nAt first, he didn't notice her beneath the wagon, and he went straight to the tent. Not seeing her inside, he glanced around and spotted her.\n\n\"Selena, listen. It's not what you think,\" he assured her, rushing to her side.\n\nSelena threw him a glare from over her shoulder. When she saw that he was still wet and dressed only in a towel, she jerked back to face her pallet. \"Leave me alone.\"\n\n\"Dammit, you don't know what happened.\" Liam grasped her arm to turn her around. \"I can explain.\"\n\nSelena was in no mood to hear his explanations and she yanked her arm loose from his grasp. \"Let go of me!\" Her eyes burned with fury as they raked his naked chest. \"To think that I almost fell for your seduction, when all the time you've been enjoying Natasha on the side. Now I understand why you are so faithful about taking your evening baths.\"\n\nLiam's temper began to flare at the unjustness of her accusations, but he was struggling to control it. Still, his voice was an ominous growl as he replied.\n\n\"Selena, it's not like that. I swear to you that I haven't been with Natasha before. She just showed up tonight, and before I could stop her she had stripped off her clothes.\"\n\nSelena's mocking laughter made it clear that she didn't believe him. \"Oh sure,\" she sneered. \"Poor Liam. It's such a shame that beautiful women just throw themselves at you and you're helpless to defend yourself.\" Her eyes took on a feral gleam as she viciously poked a finger into his chest. \"Well don't worry. I won't be one of them anymore. As soon as we get to Oregon, I'll be out of your life for good.\"\n\nLiam grabbed her arm again when she went to turn away. \"I know what it must have looked like, but Selena, you have to believe me. I wasn't making love to Natasha. I told her to go away and leave me alone.\"\n\nSelena looked down at his hand on her arm before she fixed him with a steely eyed glare. \"Take your hand off me,\" she gritted out. When he reluctantly complied, she continued. \"Don't ever touch me again. I'm not one of your little trollops to be handled whenever you feel like it. From now on, I'm off limits to you.\"\n\nWithout another word, she brushed past him and stalked to the back of the wagon to retrieve her nightgown. Liam stood rigidly watching her go. He hated to admit it, but his reaction would have been even worse than hers if the situation had been reversed. He would likely have murdered any man that he saw holding his naked wife, and he knew there was no way to make her see reason until she had time to cool off. He ran a hand through his hair and walked to the tent.\n\nHe entered to find the heap of blankets on the ground and his heart constricted in his chest. This was supposed to be the night he and Selena would have shared their bodies and consummated their marriage vows. Instead, he was destined to spend another sleepless night alone. He tossed his clothes on the ground and smoothed the blankets into a pallet. He crawled between the covers and stared up at the tent.\n\nHe would speak to Selena tomorrow and explain what had happened. He could only hope and pray that she would be willing to believe him, because he didn't know how much longer he could stand this tension. He could hear her settling into her own bed, and he released a deep sigh of frustration. Liam had realized some time ago that he wanted Selena as his wife. He loved her, and he knew he could never be happy without her in his life. He would have to find some way to make her understand what she meant to him.\n\nSelena lay on her pallet and tears rolled unheeded down her face. Over the last few weeks, she had begun to believe that she and Liam were building a future together. He had told her about his farm in Oregon, and she had envisioned herself there, as his wife and the mother of his children. Now, her entire future was up in the air. She knew she could still go to her sister's home, but the idea seemed suddenly unappealing. Selena had always wanted a home and a family of her own. She had thought Liam was the husband of her dreams. Now, she realized those dreams had been built on nothing but a fantasy.\n\nShe felt empty and hopeless. Nothing really mattered to her now. She closed her eyes to sleep, but she kept seeing visions of Liam and Natasha clasped together in the moonlight. Nothing had ever hurt Selena this much. Even when her mother died, Selena had felt the desire to go on with life. Now, she felt like there was nothing left to work for, nothing left to wish for.\n\nShe managed to doze fitfully, but when morning came, she was exhausted both physically and emotionally. She dragged herself up from her bed and went about stoking the fire out of habit. She put the coffee on to boil and had begun to make biscuits when Liam emerged from the tent. He gave her a long look, as if he were gauging her mood, before turning away to tend to the oxen. Selena ignored him and finished the biscuits.\n\nLiam brought her the morning eggs and milk before he left to finish his chores. He gave her another questioning glance, but she refused to acknowledge him. By the time Liam returned, Selena had breakfast ready. She filled a plate for him and handed it to him without comment. She took a plate for herself, even though she didn't feel like eating.\n\nSelena normally sat beside Liam to eat, but this morning, she elected to sit on a log, some distance from where he was. She pushed the food around, eating a few bites but not tasting them. When she couldn't eat any more, she started to gather the pans and dishes and turned to Liam to retrieve his plate. She noticed he hadn't been able to eat either. When she would have brushed past him, Liam snagged her hand and pulled her down beside him.\n\nSelena started to struggle against him, but his fingers remained locked. His hold on her was gentle but firm, and he waited patiently until she met his eye.\n\n\"Are you ready to listen now, Selena?\" he asked her quietly.\n\n\"We have nothing to talk about. Just let me go.\" Selena felt tears burning at the backs of her eyes and she was loath to cry in front of him.\n\n\"We have a great deal to talk about, but I need you to listen.\" Liam's voice remained calm. He reached out to lift her chin until she was looking at him. The tears that he saw swimming in her lovely eyes nearly broke his heart, but he ignored them for the moment. \"Selena, if you think about it, you will realize that I have never lied to you.\"\n\n\"That's what I thought until last night,\" she cried. Her hurt and anguish caused her voice to crack.\n\n\"Selena, last night was a big misunderstanding. I swear to you, as God is my witness, that I did not betray you. I don't have the slightest interest in Natasha, or any other woman for that matter.\" Liam smiled ruefully, \"I've been so obsessed with thoughts of you that there is no room in my tiny brain to think about anyone else.\"\n\nHis comment would normally have made Selena smile, but she jerked her chin free from his hand and looked away. \"Liam, what do you expect me to believe? I saw you with my own eyes.\"\n\n\"I know what you saw, sweetheart. I thought about it last night and I would have jumped to the same conclusion you did, but that doesn't mean it's the right conclusion.\"",
        "Liam heaved a deep sigh and pulled her against his chest. Her head rested beneath his chin, and he stared up into the dawning sky, stroking her hair as he continued. It was easier to talk rationally when he didn't see her tear-streaked face.\n\n\"Selena, when I went to the creek last night, I was rushing to bathe so I could return to you. My God, I've been crazy with lust for you, and you had finally promised to be mine. I could think of nothing else but hurrying back. But when I was done and I started out of the creek, Natasha was there. She had come while I was bathing, and I didn't know. I asked her to leave so I could get out, but instead, she undressed and came to me. Selena, I know it sounds unbelievable. I could barely believe it myself, but she literally threw herself at me. Before I could peel her off, you came and saw us together.\" Liam grasped her shoulders and held her at arm's length to stare into her eyes. \"Selena, I swear to you, that's what happened.\"\n\nSelena stared back at him for a long time, wanting desperately to believe what he was saying. \"I don't know, Liam. I just don't know what to believe.\"\n\n\"I can understand that,\" he whispered. His eyes pleaded with her. \"All I'm asking is that you don't shut me out. I'm begging you to trust me and trust your own intuition. You've told me before that you have a knack for seeing how people really are. Don't you know me by now? Don't you know I would never do anything to hurt you?\"\n\nSelena's confusion was apparent, and she frowned up at him. \"I don't know,\" she said again. She looked down at her lap. \"I need some time to think.\"\n\n\"I'll give you whatever time you need,\" Liam's rueful snort surprised her and she looked at him to see a resigned smile on his face. \"I pray that you don't take too long to decide, because I just might die from wanting you.\" He was gratified to see the barest hint of a smile on her lips. \"Take your time and trust your heart. I hope you'll realize that you can trust me too.\"\n\nSelena scanned his face seeing only honest sincerity in his eyes. Just moments before, she had felt dead inside, but now her heart was soaring with hope. Could it be possible that she was wrong? Her mind hung back, still doubtful. She didn't want to be a fool. She gave a small nod before looking back down at her lap.\n\n\"Alright, Liam. I'll think about everything.\"\n\n\"Thank you,\" he murmured. He lifted her hand to place a kiss on the backs of her fingers, and his eyes glowed with a strange light when they met hers. \"I'll be waiting.\"\n\nSelena rose from his lap and cleared the dishes. They had to hurry to pack up their gear, as most of the other families were already starting to leave. Liam lifted her to the seat, as he had done dozens of times in the past, and they started their daily journey. Sitting beside him, Selena was more keenly aware than usual of his leg brushing hers, his shoulder rubbing against her. She desperately wanted to believe him. Her entire happiness depended on it.\n\n************\n\nThey reached a wide river around lunch time, and they stopped for the noon meal. They had already crossed a number of smaller rivers, but this one was swollen from the recent rains, and the fast moving current posed a problem. The men discussed the best place to cross, and lunch was rushed because everyone knew that getting across could take them a while.\n\nThe wagons crossed one at a time, and while the water was deep, the current didn't seem to cause too much difficulty for the teams. The beds of the wagons were watertight, so even though the water came up to the sides, it wasn't too deep for the oxen to swim to the other side.\n\nSeveral wagons had already crossed, including the Boyds' by the time it was Liam and Selena's turn. The oxen waded into the water and began to swim. Selena clutched the side of the bench as the water level steadily rose, but since Liam showed no alarm, she trusted that they would be fine. It seemed to take forever, but the oxen eventually began to get their footing on the opposite bank. Liam and Selena heard shouts from the people who had already crossed, and they looked up just in time to see a dead tree come floating down the river to crash into the side of their wagon.\n\nThe impact was enough to knock Selena off the bench, and her arms flailed in the air as she tumbled into the river. She struggled against the current and the weight of her skirts, and she surfaced a good thirty feet away. She thrashed in the water and looked up in time to see Liam anxiously searching for her. He spotted her and dove in after her just as she was pulled under once more by the sucking currents. Selena kicked and paddled to break free of the water's grip. The tree that had struck them floated past the wagon, and just as Selena managed to break the surface, it slammed into her.\n\nLiam watched in horror as she sank beneath the tree, and he frantically swam the last few feet to where he had seen her last. He dove under the water, groping through the murky depths until his lungs were burning for air. He kicked to the surface and grabbed another breath before diving again. His hand brushed something that felt like cloth, and he snatched it. To his immense relief, it was Selena's dress. He dragged her to the surface and held her in the crook of his arm, making sure her head was clear of the water as he battled against the current. His feet struck the bank, and he carried Selena onto the grass. He wasn't sure if she was alive or dead, for she was completely still. Blood was streaming down the side of her face from a deep gash near her temple, and her skin was deathly pale.\n\n\"Noo!\" he screamed, feeling for a pulse. He felt a flutter of a heartbeat beneath her jaw, and he turned her on her stomach, massaging her back to force out the water she had swallowed.\n\nMarcia and Gerald came running, and Marcia was sobbing as she knelt beside him. \"Is she alive? Please God, let her be alright.\"\n\n\"I don't know,\" Liam moaned. \"I can't tell if she's breathing.\"\n\nAs he said the words, Selena coughed up some water, but she remained unconscious.\n\n\"Bring her to our wagon,\" Marcia cried, hurrying to fetch their medical kit. \"We've got to stop that bleeding.\"\n\nLiam lifted Selena in his arms and ran to Marcia's wagon. She placed a blanket on the ground, and he gently laid Selena on it, drawing another blanket over her. Marcia frantically dug through the medical supplies.\n\n\"Gerald, quickly set up Liam's tent. We need some privacy to get her out of these wet clothes. Liam, give him the tent and fetch her something dry to wear.\"\n\nLiam didn't want to leave Selena, but he knew they had to get her dry before she caught a chill that would further sap her strength. He hadn't given a thought to the wagon since he had jumped in the river to save Selena, but he was relieved that Gerald had grabbed the lead harness and led the oxen the rest of the way out. Liam gave Gerald the tent and snatched Selena's suitcase before running back to her side.\n\nLiam knelt beside Selena, brushing her soaked hair back from her face. She was so still. He felt his heart tighten with dread, but he pushed back his fear and concentrated on trying to help. Marcia poured whiskey over the gash, and used a clean cloth to clean off the blood. She placed another cloth over the wound and asked Liam to keep pressure on it to stop the bleeding.\n\nIt seemed to take forever, but the bleeding finally stopped. By then, Marcia had a needle and a length of catgut ready, and she quickly and efficiently stitched up the jagged wound. Selena never stirred, and that scared Liam more than he cared to admit. He could feel a faint pulse and her breath was soft as butterfly wings on his hand. By the time Marcia was finished, Gerald had the tent erected, and Marcia went to make a dry pallet for Selena.\n\nLiam carried her inside and cradled her on his own lap as he stripped off her wet clothes. He laid her on the blanket and dressed her in a clean nightgown, then covered her with two more warm blankets.\n\nMarcia looked up at him, and her voice was gentle when she spoke. \"Liam, you should go change into some dry clothes. I'll stay here until you get back.\"\n\n\"Will she be alright?\" he asked.\n\nMarcia could see the love and anguish in his face as he stared down at his wife. \"I hope so, Liam. We'll do everything we can. Now go.\"\n\nLiam rushed to change clothes, and Gerald helped him unhitch the team. Liam returned to the tent, but Selena was still unconscious. He brushed her wet hair back, and her skin was cold beneath his hand. \"She's so cold,\" he whispered.\n\nMarcia touched his arm as she rose. \"Stay with her and try to keep her warm. I'm going to make some soup and I'll bring some for her. Hopefully by then, she will wake up.\"\n\nLiam lifted the blankets and lay down beside Selena, gathering her against his chest. He tucked the blankets close around them both, using his own body heat to warm her. His throat felt sore as he choked back tears. He didn't know what he would do if she died. He squeezed his eyes shut against the thought.\n\nHe held her like that for most of the afternoon and into the evening. Although she gradually warmed, she didn't rouse, and his worry grew. When Marcia brought the soup, Liam couldn't eat any of it, and she said she would keep it warm in case Selena woke up. Liam sat with her throughout the night, but still, there was no change. In the morning, he rushed to tend to the animals before returning to her side.\n\n\"Can I come in?\" Marcia called. Hearing his murmured reply, she entered with a cup of coffee and a plate of food. \"I brought you some breakfast.\" Seeing that he didn't look interested in the food, she squeezed his shoulder. \"Come on now, you have to eat. She's depending on you.\"\n\nLiam heaved a sigh. \"Thank you,\" he said, taking the plate. He choked down the food and washed it down with the coffee before handing the dishes back to her. \"I'd give my right arm for a doctor right about now,\" he muttered.\n\n\"I know, but we just have to hope for the best. I just know in my heart that she'll come out of this. You have to believe that.\"\n\n\"I'm trying.\" Liam's voice sounded flat and defeated, but Marcia could find no other words to reassure him.\n\n\"I'll be back in a while,\" she said softly before leaving them alone once more.\n\nLiam hung his head between his knees, running his hands through his hair. Why did this have to happen to her? If one of them had to be hurt, he wished it had been him. The faintest sound brought his head up with a jerk. He knelt to look closer and saw Selena's eyelashes flutter. Liam's heart leapt with joy, and he clasped her hand in his.\n\n\"Wake up, my love. Wake up,\" Liam whispered hoarsely.\n\nSelena's lashes fluttered again, and he could just make out the tiny slits of her eyes. She moaned weakly and closed her eyes again, but his heart soared.\n\n\"Wake up, Selena. I need you, sweetheart. Please wake up.\"\n\nSelena moaned again, and her eyes opened slowly. She tried to focus, but everything looked blurry and indistinct. She blinked several times and moaned against the throbbing pain in her head.\n\nLiam squeezed her hand and gently stroked her brow. \"Thank God. Can you hear me, Selena?\"\n\nLiam's face came into focus and Selena stared at him, her eyes full of confusion. She tried to speak, but her voice came out as a hoarse croak.\n\n\"Let me get you some water, love.\" Liam jumped up and ran to fetch a cup. He saw Marcia, and his smile was glorious. \"She's awake.\"\n\n\"Thank the Lord,\" Marcia cried. \"I'll be right there.\"\n\nLiam carried the cup of cool water to Selena and lifted her gently while holding it to her lips. She drank several sips and then pushed it away, wincing in pain.\n\n\"What happened?\" she whispered.\n\n\"You fell in the river and hit your head. You scared the daylights out of me,\" Liam said softly, still cradling her with his arm.\n\n\"My head hurts,\" she moaned. \"I feel sick.\" The last was spoken as a plea, as she weakly groped for help.\n\nRecognizing her need, Liam grabbed held her face down over his knee while she retched violently onto some nearby grass. There wasn't much in her stomach other than muddy water, but she heaved until she was weak and trembling. Selena groaned in misery, humiliated and aching. Her brow was cold and clammy, and the throbbing pain on the side of her head was growing steadily worse.\n\n\"My head hurts,\" she whispered again as Liam helped her lie back against his arm.\n\nMarcia had come in, and she heard the last. \"I'll get her something for the pain.\" She left again.\n\n\"It's alright, sweetheart. We'll take care of you, just rest.\" Liam pressed a kiss on her forehead and stroked her cheek as he cradled her.\n\nMarcia returned with a cup of hot water laced heavily with whiskey and sugar. Liam held it to Selena's lips. \"Drink this. It will ease the pain. Come on, that's right. Drink it all,\" he coaxed her.\n\nSelena drank it down in tiny sips. She absolutely hated whiskey, but Liam wouldn't let her stop until the cup was drained, and she sighed with relief that it was finished. He laid her gently on the pallet, and she fell asleep almost at once.\n\nSelena slept throughout the day and into the evening. Liam kept a close watch on her, but he was reassured that her breathing was regular, and her heartbeat was strong and steady. His exhaustion finally got the better of him, and he fell asleep on a pallet beside her.\n\nSelena woke up during the night, and she blinked as her eyes adjusted to the darkness. There was a glow of firelight coming from outside, and she could hear the usual night sounds of crickets and other critters. She could also hear the sound of deep, steady breathing, and she turned her head slowly to see Liam sleeping beside her.\n\nHer heart filled with joy. She loved him deeply and completely, and she knew in that moment that he loved her too. She remembered falling in the river and seeing him dive in to save her. The look on his face had been one of pure terror. He definitely wasn't anxious to get rid of her so that he could take up with another woman.\n\nSelena smiled to herself, watching him sleep. She wanted to touch him, but her limbs felt weighted down. She would rest for now, but soon, very soon, she would have to let him know what she felt in her heart.\n\nThe next morning dawned, and Selena woke up to see the sky just beginning to turn pink. She rose on one elbow but moaned as the world seemed to spin around her.\n\nLiam woke up instantly. \"What is it, Selena? Are you alright?\"\n\n\"I'm fine,\" she mumbled. \"I'm just dizzy.\"\n\nShe didn't mention that the throbbing pain in her head was still there. She didn't want to be forced to drink another cup of that wretched whiskey mixture. At least the pain felt less severe than the day before.\n\n\"Lay down,\" he said, gently pulling her back down onto the pallet.\n\n\"I need to get up and start breakfast,\" she moaned.\n\nLiam's laughter was soft and warm as he rose and donned his breeches. \"Not this morning, my love. Just rest.\" He finished dressing and knelt to kiss her forehead, smiling down at her for a moment. \"Relax. I'll be back soon.\"\n\nSelena watched him leave the tent, and she could hear him moving around as he built a fire and put the coffee on to boil. He brought her some of the soup Marcia had made, and Selena assured him that she could eat it without his help. Liam left her once again to take care of the animals and then went to speak with Gerald and Marcia. The other families had gone on the day before, and they couldn't afford to stay any longer.\n\n\"We'd better get moving again today. We're getting left behind\" Liam said. He frowned with concern as he thought about Selena. There was no way she would be able to sit up all day. \"I'm going to make a pallet in the wagon, but I'll need to rearrange a few things to make room.\"\n\nGerald offered to help, and Marcia said she would make breakfast for all of them. Within a short time, everything was prepared.\n\nLiam entered the tent and stopped in his tracks. Selena was staring up at him, her eyes were deep purple, and there was the slightest bit of color in her pale cheeks. She was looking up at him with love, not anger, and he dared to hope that maybe she believed in him. He smiled as he knelt on his haunches beside her.\n\n\"Good morning, my love,\" Liam whispered.\n\n\"Good morning.\" Selena's eyes glowed as she returned his smile. His words warmed her heart more than he knew.\n\n\"Much as I would prefer to stay and let you rest for another day, we have to get moving today. Would you allow me to help you get dressed?\" He stroked her hair back from her brow as he waited for her reply.\n\nSelena was tempted to tell him that she wanted his help getting undressed, but she decided that such an occasion would have to wait until she was feeling better. \"Yes, please.\"\n\nLiam retrieved her suitcase while Selena unbuttoned her nightgown. When he had a fresh chemise, pantalets and the pink gown lain out, he helped Selena to sit up. She clutched at his arm as her dizziness threatened to make her fall down again, and she took several deep breaths to fight off the nausea that washed over her. When the sensations lessened, she loosened her grip.\n\n\"Better?\" Liam asked gently.\n\n\"Yes,\" she breathed. \"Alright. Let's do this.\"\n\nSelena reached to push her nightgown off her shoulders, letting it pool around her waist. For once, when Liam viewed her naked form, his lusts weren't raging. He was too concerned for her to feel aroused, and his touch was infinitely gentle as he helped her on with her chemise. With one arm around her waist, he lifted her and whisked her nightgown out from under her hips. Again, Selena clung to him, as another wave of dizziness swept over her. Neither of them cared that her lower body was unclothed.\n\n\"It's alright, sweetheart. Take your time,\" he soothed.\n\nHis rich, deep voice sounded divine to Selena, and she rubbed her cheek against his shoulder as she clung to him. His clean, masculine smell filled her nostrils and she took several more deep breaths. The wave of nausea finally passed, and Liam slipped the pantalets over her legs. Once again, he lifted her and with her help, they managed to get them over her hips. Liam sat down, straddling her hips from behind and let her lean back against his chest. With strong arms wrapped around her, he deftly tied the pantalets around her waist. When his fingers began nimbly working on the buttons of her chemise, he was surprised to hear a tiny giggle, and he peered askance at Selena.\n\n\"What's so funny?\" he asked with a grin.\n\n\"I was just thinking that, as your wife, perhaps I should be suspicious of the fact that you seem to be so familiar with ladies undergarments. It could lead me to think the very worst.\" The smile she gave him over her shoulder told him she was teasing.\n\nStill, Liam's grin faded as he replied. \"I think we have had more than enough suspicion and doubt cast between us, Selena. I hope that it will soon be gone for good.\"\n\nThe vulnerability in his hazel eyes was too much to bear, and although it caused her discomfort, Selena managed to turn slightly to face him. She cupped his cheek in her palm and gave him a tender smile. \"I believe in you, Liam. I have no further doubts.\"\n\nLiam's heart was thudding heavily in his chest as he searched her eyes, seeing only honest commitment in their violet depths. Ever so gently, he bent to kiss her upturned lips. Their mouths blended and searched, each finding what they sought. When Liam ended the kiss, he smiled down at her. After several moments, he released a reluctant sigh and resumed buttoning her chemise.\n\n\"We'd better finish getting you dressed. The others will be waiting for us.\"\n\nThey didn't bother with shoes or stockings. Liam lifted her into his arms and Selena clutched her arms around his neck, waiting for the dizziness to subside once again. He carried her to their wagon and laid her on a small pallet that he had prepared just behind the bench. When he was assured that she was comfortable, he quickly packed up the tent and other bedding, and they got underway.",
        "That day seemed to be the longest of Selena's life. The bumping and rocking of the wagon caused her head to pound and her stomach to roil in protest. The wheels seemed to find every tiny rut and hole, and Selena clenched her teeth against the jarring pains. She didn't complain though, for she knew that they had no choice but to keep moving. It could be a fatal mistake to dally on the journey and be caught trying to cross the Rockies in the dead of winter.\n\nThe only comfort she could take was in watching Liam. Her position gave her the perfect vantage point from which she could observe her husband. He had placed her just behind him, and as he drove the wagon, he often reached to squeeze her hand or stroke her hair. Selena lay on her pallet and watched the fascinating play of muscle and sinew on Liam's arms and back as he handled the reins. She liked the way his hair curled slightly at the nape of his neck, and his broad shoulders and strong arms were beautifully sculpted. When she sat next to him on the bench, Selena didn't have the chance to watch him without him knowing, so she enjoyed this rare opportunity and used the sight of him to distract her from her distress. Her smile was pure feminine smugness, as she thought that no other wife had such a magnificent husband to call her own.\n\nThe only other relief Selena found was when she slept, and she dozed often. Liam watched her, worry etched on his forehead as he noted the frown lines on her face that never disappeared even in sleep. He knew that she must be in pain, and he felt helpless that he couldn't offer her more comfort.\n\nDespite their delayed start, they covered seventeen miles that day, and they camped in a lovely clearing that evening. Once again, Liam carried her to their tent and assisted her to undress for bed. He was considerate and tender as he fussed over her, and Selena did her best to reassure him. She knew that he had his hands full trying to do his own chores and hers as well. Marcia and Gerald did as much as possible to help, but Selena fretted at her own inability to assist them. She felt weak and tired, and despite her best efforts to wait up for Liam, she was soon fast asleep.\n\nLiam's mind was busy as he finished washing the dishes from supper. He was plagued by worry about Selena. He hoped that having her jostling around in the wagon wouldn't make her recovery even more difficult, but there was no other choice. He, more than most, understood that they had to keep pressing on. To fall behind schedule could prove fatal. He was so absorbed in his thoughts that he didn't hear Natasha approaching from behind him.\n\n\"Liam?\" Natasha said softly.\n\nAt the sound of her voice, he whirled to face her. \"What the hell are you doing here?\"\n\n\"I just thought I would see if there was something I could do to help,\" she said with a smile. \"Since Selena isn't able to do anything, I know you must be exhausted.\"\n\nLiam raised a disbelieving brow. \"Since when do you want to do some work? I never see you helping your mother to ease her load.\"\n\n\"Susan helps her,\" she said with a careless shrug. \"They don't really need my help. I would just be in their way.\"\n\n\"Well, I don't need your help either. I told you to stay away from me, remember?\" Liam turned his back to her and continued with washing the dishes.\n\nNatasha was undeterred, and she sauntered closer to lay a hand on his shoulder. \"Liam, please don't be angry with me. I really couldn't help myself the other night. Can't you understand? I love you.\"\n\nLiam abruptly stood up and shook off her hand as he glared down at her. He took a deep breath to calm his rising temper.\n\n\"Natasha, I don't know what foolish notions you have in your head, but I am a married man. Selena is my wife, and I have no intention of straying with you or any other woman, so just forget it.\" He took another deep breath, reminding himself that she was very young. \"Now go on back to your family before I change my mind and decide to tell Gerald about what you did.\"\n\nNatasha's laugh made it clear that his threat had not had the desired effect. \"Oh Liam, don't be absurd. Do you honestly think that Daddy would believe you? He thinks I'm as pure as the driven snow. He would surely believe that it was you, an older and much more experienced man, who seduced me.\"\n\nLiam's eyes narrowed as he frowned at her. \"You're even more wicked that I thought,\" he said, shaking his head in amazement.\n\nNatasha gave a pretty pout and reached out to stroke his arm. \"Now Liam, don't be nasty. I'm not wicked, I'm only determined. I knew from the first day I met you that you were the man for me. I could be a real wife to you. I've seen the way Selena turns you away, but I wouldn't be that way.\" She gave him a sultry smile as she leaned against him, letting her breasts brush his arm. \"I could give you everything you want.\"\n\n\"What I want,\" Liam ground out through clenched teeth as he removed his arm from her grasp, \"is for you to leave me alone. Now go before I lose patience entirely and give you the spanking you deserve.\"\n\nNatasha heaved a regretful sigh. \"Alright, I'll go. But just remember what I said. When you get tired of Selena's rejections, I'll be waiting.\" She turned and strolled back toward her camp with an exaggerated swing to her hips, throwing one more seductive glance over her shoulder.\n\nLiam blew his breath out as he stood watching her in amazement. He couldn't believe the nerve of the woman. He knew Natasha had been gently reared in a respectable family, yet she behaved like a common whore. Some of the prostitutes he had bedded hadn't been as forward as she was. He had no doubt that if he were to give her the slightest encouragement Natasha would be more than willing to share his bed.\n\nLiam couldn't help but compare her behavior with Selena's. Out of necessity, Selena had been forced to work in a pub for a sleazy boss, yet she had managed to keep her honor. He remembered the first night he had met her. She had steadfastly rebuffed a number of advances, and all with dignity and grace. He couldn't picture Selena throwing herself at any man, much less one that was married to someone else. Her natural integrity was one of the things he found the most attractive about his wife. She would strive to do the right thing even if it made her own life harder.\n\nThoughts about Selena cleansed the last of his anger from Liam's mind. Hopefully, Natasha would soon grow bored with her infatuation. He didn't want her to cause any more trouble between him and Selena. While he was reluctant to cause any pain or embarrassment to Gerald or Marcia, if needs be he would have to tell them about Natasha's behavior. He could only hope they would believe him, if it ever came to that.\n\nOver the next several days, Selena gradually regained her strength, but Liam continued to hover, his worry evident in those fascinating hazel eyes. When Selena complained about it to Marcia, the older woman laughed.\n\n\"Selena, just enjoy it. It's rare enough when our men get to pamper us. Remember what I told you? Liam needs to feel like you need him.\"\n\n\"Yes, but I'm worried about him. He looks so tired and haggard. I know he's not getting enough rest,\" Selena mumbled dejectedly.\n\nMarcia's eyes sparkled with humor. \"He's a big, strong man. He'll survive. Besides,\" she said with a wink, \"when you get better, you can make it up to him.\"\n\nHer meaning didn't escape Selena, and her cheeks turned a delicate shade of pink as she grinned in response. \"I hadn't thought about that.\"\n\nThe gash on Selena's temple healed nicely, and after a week, Marcia was able to remove the stitches. As she examined her handiwork, she smiled. \"There's hardly going to be any scar at all. Most of it will be covered up in your hairline.\"\n\nAlthough Selena was not a vain woman, she was relieved that she wouldn't be left with an ugly mark to mar her face. \"Thank you, Marcia.\"\n\n\"How about your headaches? Are they getting better?\" Marcia asked.\n\n\"Yes. It only hurts now if I make a sudden move. As long as I take things slow, I don't notice it much.\"\n\n\"Good. A few more days, and you should be good as new.\"\n\nWhile Selena continued to improve, Liam worried and brooded. He lay awake for long periods at night, just listening to her soft breathing beside him. They had done away with separate pallets, and while he enjoyed the feel of her soft body beside him, it wasn't lust that kept him awake.\n\nLiam was disturbed by how close he had come to losing her. For the first time in his life, he felt like he had no control over his destiny. His heart was so firmly entangled with Selena that if anything happened to her, he knew his life would be good for nothing. His days as a carefree bachelor were a distant memory, and he chafed under the realization that he needed Selena desperately.\n\nBy the time another week had passed, Selena was becoming restless and petulant. Liam refused to let her resume her activities, even though she felt more than able. Again, she confided in Marcia, as the other woman sat with her one afternoon.\n\n\"He won't let me do anything. Every time I stand up, he comes rushing over to help me. He refuses to let me cook or clean up. I'm at my wit's end.\"\n\nSelena frowned as she watched Liam. He was nearby but out of earshot. Still, she noticed that his gaze kept returning to her, as if to reassure himself that she was alright.\n\nMarcia merely chuckled. \"It has been rather funny watching him these last few days. Gerald and I were laughing about it yesterday. Gerald said Liam is worse than a bear watching over her cubs. Heaven help the person who makes the mistake of coming between the two of you.\"\n\nSelena had to smile at the thought. \"Yes, but that's just it. He's treating me like a child instead of his wife.\"\n\nMarcia laid a hand on her arm and her smile held a world of wisdom. \"Then, I guess it's up to you to remind him that you're a woman and not a child.\"\n\nSelena pondered those words of advice that evening. As she watched Liam cleaning up the dishes from dinner, she hid a smile. Little did he know that she was about to unleash all her feminine wiles on him, and she was determined that this time, they would finish what they had started.\n\nWhen Liam was finished, he would have come to sit beside her, but instead, Selena rose and placed a hand on his arm. \"I thought we would make an early night of it,\" she murmured, her voice husky and soft.\n\n\"You must be tired,\" he frowned. He hugged her against him.\n\nSelena ran a hand over his chest, slipping her hand inside his shirt to run her fingers through the light furring of hair. \"Will you take me to bed?\"\n\n\"Of course, sweetheart.\" He lifted her and carried her to the tent, but he made no move to kiss her. Indeed, it seemed as if the thought didn't even cross his mind as he gently laid her on the blanket. \"Let me get your nightgown,\" he murmured and hurried to the wagon.\n\nOnce outside the tent, Liam gulped huge breaths of cool air, hoping it would help to cool his lust. After all, his wife couldn't help it if she was the sexiest woman alive.\n\nMeanwhile, Selena was getting increasingly frustrated. Liam had helped her dress many times over the past two weeks, and he had never even tried to sneak a caress. She was keenly aware of the attraction she felt whenever he was near, and she wanted to once again experience the feelings he had awakened in her body. She was anxious to learn more, for she knew there must be some way to appease her yearnings, if only she could regain his amorous attention.\n\nLiam returned with her nightgown and sat beside her on the blanket. Selena had already unbuttoned her dress, and she tugged the sleeves off her arms. She pretended to have some difficulty getting the dress out from under her hips. Tugging at her bottom lip with her teeth, she looked up at Liam.\n\n\"Could you help me?\"\n\n\"Certainly.\" He put an arm around her waist to lift her, and he deftly slipped the dress over her hips, trying his best to ignore the soft flesh beneath his palms.\n\nSelena wrapped her arms around his neck and leaned against him, letting her breasts flatten against his chest. She toyed with the hair at his nape as she wriggled out of the dress. Liam showed no reaction as he turned away to fold her dress neatly and lay it aside. Selena suppressed a frustrated sigh and tugged at the ribbon that closed the neckline of her chemise. She purposefully pulled the ribbon into a knot.\n\n\"Oh, no. Can you get this undone?\" she begged.\n\nSelena noticed that Liam's fingers were warm and much too steady for her liking as they brushed against her breasts. In no time, he had the knot freed, and was working on the tiny buttons. Still, she didn't see the tiniest shred of desire on his face when he peeled the two halves apart, baring her breasts. Instead, he slipped the nightgown over her head with businesslike efficiency.\n\n\"There,\" he said, untying her pantalets and slipping them off her hips without even a glance at her naked form.\n\nLiam quickly buttoned her nightgown, desperate to cover up her enticing breasts before he lost all control. When the gown was buttoned, he pressed her down on the pallet and tucked her in like a child with a kiss on the forehead. \"Go to sleep,\" he smiled. \"I'll be in after I finish a few more things.\" He quickly turned his back, careful to make sure she wouldn't see his obvious erection.\n\nSelena watched him leave, and her frustration reached new heights. There was a throbbing ache between her thighs and an emptiness deep inside her belly. She longed for Liam to make love to her, but she lacked the knowledge or experience to know how to seduce him. Although she did her best to stay awake, she was asleep long before he joined her on the pallet.\n\nThe next day, Selena started her monthly, and she let out an impatient groan. She would have to wait a few more days, and she resigned herself to the fact. By the time her courses had stopped, nearly three weeks had passed since the accident. Still, Liam made no move to kiss her or touch her, and Selena racked her brain for a way to reclaim his interest.\n\n***********\n\nIn the wee hours of the night, Liam struggled with a familiar nightmare. He could see Selena sinking beneath the surface of the muddy water, and she was crying out for him to help her. He struggled and kicked, but he couldn't quite reach her. As her head disappeared, he let out a choked sob. \"No! Selena, don't leave me.\"\n\nBut unlike the previous times when he had had the same dream, Selena was suddenly there, rising from the water. She soothed his fears with a warm kiss on his brow and she gently caressed his face. He was able to breathe again, when she wrapped her arms around him and pressed her cheek to his chest.\n\n\"Shh, my love. I'm here.\" Her soft voice soothed his spirit.\n\nLiam released a deep sigh, as he wrapped his arms around her. She reached up to kiss him, and his breath caught in his throat once more, this time from desire. Her lips were warm and moist, luscious and inviting, and they teased him as she nibbled at his mouth. She trailed hot, open mouthed kisses along his jaw and neck, and Liam came awake with a jolt when her hand skimmed over his belly to tentatively stroke his manhood. This was no dream! It was Selena warm and willing in his arms, and the thudding beat of his heart in his chest was matched by the throbbing in his cock.\n\nLiam started to rise, but Selena pressed firmly down against his shoulders. He frowned up at her, his eyes searching hers in the dim glow of firelight that filtered into the tent. \"Selena, what are you doing?\" he asked with a worried frown.\n\nShe gave him a throaty laugh and sat up on her knees beside him. As she quickly unbuttoned her nightgown, her eyes were glowing. \"I'm making love to you, husband. Since you seem reluctant to seduce me, I've decided to take the initiative.\" She whisked the garment off over her head and tossed it aside.\n\nLiam gave a strangled groan as he took in her appearance. Her breasts were full and proudly erect, and they glowed enticingly in the dimness. Some of her dark hair had escaped the braid to curl around her face and neck. She had never looked more beautiful or desirable, and Liam ached to have her. Still, he held back.\n\n\"Selena, you're not fully recovered. We shouldn't . . .\"\n\nShe placed a finger over his lips. \"We should, and we will.\" Her voice was soft but determined.\n\nSelena stretched out within the crook of his arm, and she pressed her body full length against his. The effect of her soft curves against his naked chest shattered the last of his resolve, and Liam gave a small groan of capitulation as he pulled her down for a kiss. She was only too happy to comply, and she willingly yielded her mouth to his ravenous kiss. He devoured her lips like a starving man. Liam continued to kiss her as he fumbled with her braid until it loosened, and he raked his fingers through her long hair.\n\n\"I've wanted to do that since I met you,\" he murmured, nibbling along her neck as her silken tresses fell all around him like a shimmering black curtain. \"I love your hair. I like it when it's loose.\"\n\n\"Then it shall be loose when we go to bed from now on,\" she whispered.\n\nHe lifted her on top of him, and his hands skimmed over her sides and down to fondle her buttocks as he once again claimed her mouth. Heat welled between them, and his hands became almost frantic, cruising over her skin as if he couldn't get enough of the feel of her. He moaned softly into her mouth as he kneaded her breasts, and Selena broke off from the kiss to rise on her arms, giving him better access.\n\nHer breasts dangled above him, just as they had in so many of his fantasies. While his fingers explored one, his mouth tasted the other. He nipped and tugged at her nipple, intensifying the ache in her belly with every hot flick of his tongue until she moaned weakly.\n\nA savage hunger flowed through Liam, and he quickly rolled to pin her beneath him as he moved to her other breast. Selena had awakened his desires that had been buried for too long, and he felt driven to consume her. He feasted on her sensitized nipple, and her sighs and moans of pleasure urged him on. She arched her back and clasped his head to her breast, as her own neediness made her writhe beneath him.\n\nFinally, Liam raised his head to look down at her. His eyes raked over her breasts, rosy and firm from his attentions, and primal satisfaction flared in the hazel depths. His eyes delved into hers as his fingers cruised up her inner thighs and found their way unerringly into the thatch of hair where her legs joined.\n\nLiam held his breath, hoping she wouldn't tense beneath his touch. He had intended to take this much more slowly. It was prominent in his mind that he didn't want to scare her after her experience with her stepfather, but he was finding it difficult to control himself when he wanted her so intensely. He watched her expression for any signs of fear, priming himself to stop even though he knew it would be painful for him.\n\nTo his immense relief, Selena pulled his head back down to her and kissed him. She sighed against his mouth as she opened her thighs to welcome his probing fingers. His long fingers were gentle and warm, and they explored her with intimate caresses until she was slick and throbbing. Liam slid one finger inside her, and Selena gasped. He froze, but when she tightened her woman's flesh around his finger and sighed, he swooped to devour her mouth again. He took his time, probing her with hypnotic repetition as he coaxed her to flower for him, and when he slipped a second finger in beside the first, Selena rewarded him with a soft moan of pleasure. She arched against his hand, her thighs opening wider of their own accord.\n\nWhen he couldn't stand it any longer, Liam knelt between her thighs and guided himself to her entrance. He kissed her with ravenous hunger as he plunged into her tight sheath with one mighty stroke. His shock couldn't have been any greater when he felt her muscles lock beneath him, and he caught her scream in his mouth. He had felt the brief resistance of her maidenhead, and he knew with certainty what had just happened, but his mind was having trouble making the logical conclusions when he was buried to the hilt inside her and throbbing with need.",
        "\"What the hell?\" he gasped, rising up on his elbows to stare down at her. Tears were trickling down her cheeks, and her eyes were full of pain and alarm. \"You're a virgin?\"\n\nSelena gave a small nod, afraid to move. The rending pain inside her was gradually fading to a dull, warm ache, and she was keenly aware of every inch of his fullness deeply seated within her. The feeling of being so filled when she had never felt empty before was entirely new and somewhat frightening. \"Well, I was,\" she whispered, giving him a trembling smile.\n\nLiam remained perfectly still as he gazed at her in amazement. \"But I thought your stepfather raped you?\"\n\nSelena closed her eyes, realizing that he had misunderstood, and she shook her head. Opening her eyes, she looked at him once more. \"He tried to, but my mother stopped him before he could finish the deed.\"\n\nLiam stroked her face, tucking a stray curl behind one ear. \"I'm so sorry, sweetheart. I didn't know or I would have been gentle with you. I should have taken more time.\" He wasn't sure what to do. He was afraid to withdraw, thinking it might cause her even more pain. Instead, he bent to kiss her, and this time, his lips were as light as thistledown on hers. \"I promise it won't hurt any more. Trust me.\"\n\n\"I do,\" she sighed. Her eyes conveyed her faith as she stared up at him.\n\nHe groaned and kissed her again, using his lips to rekindle her desire until he felt her relax beneath him. He'd never made love to a virgin before, so he was working purely on instinct. He sensed that unless he went slowly, giving her time to stretch and adjust, he would ruin it for her. He battled against his own body's urgency as he took that time, stroking her hips with strong fingers and trailing hot kisses down her neck and along her shoulders. Holding himself rigidly immobile inside her, he kissed her breasts, laving their sensitive tips with his moist, hot tongue as she moaned softly beneath him.\n\nWhen he felt her thighs fall open once more, he began to move cautiously within her. He drew back to gauge her reaction as his strokes began slowly and gradually grew stronger and deeper. He felt a profound sense of satisfaction as he watched her expression change from tense apprehension to glorious wonder. He closed his eyes, reveling in the slick, velvety heat of her as she answered his strokes with growing enthusiasm.\n\n\"Bend your knees, sweetheart,\" he whispered near her ear.\n\nShe eagerly complied, and he sank even deeper into her scalding sheath. She was so tight and hot that he almost lost control, but he was determined to bring her to fulfillment before he sought his own pleasure. He returned his attention to her breasts, lavishing them with moist kisses and using his whiskers to abrade their sensitive peaks. Selena moaned and clenched her pussy around him, using her legs to urge him even deeper.\n\nShe felt the tension in her belly winding tighter and tighter until she couldn't stand it. All at once, she buried her face against Liam's neck and raked her nails along his back, managing to muffle her scream.\n\nFor several moments, she floated, feeling weightless and boneless, and when she finally opened her eyes, she saw Liam watching her intently. He gave her a rakish grin full of masculine pride that he had managed to bring her pleasure even though it was her first time. He kissed her, savoring the feel of her breasts against his chest as he began to move once more. She had been so intently focused on her own pleasure that she was surprised to feel him still inside her and still fully engorged. Realizing that he had held off his own release, she began to answer his strokes, eager to appease his lust.\n\nSelena was amazed to feel her body responding to his touch again when just moments before, she had felt so fully sated. Their coupling became almost frantic, as each of them struggled to get that last bit closer to the other. Ecstasy burst upon them in unison, and with one final stroke, they flung themselves over the brink, clinging to each other as they drifted into the void.\n\nIt seemed like a long time later before Liam roused enough to withdraw from her and roll onto his back. He drew her once more into the crook of his arm, and Selena sighed as she felt his racing heartbeat gradually slowing beneath her palm. He nuzzled her hair, breathing in her heady fragrance, and for the first time in weeks, he felt completely relaxed.\n\nThe novelty of having brought her sexual pleasure for the first time filled him with a possessive satisfaction. Always before, he had restricted himself to indulging with prostitutes, having no other acceptable outlet for his sexual appetites. An honorable man could never seduce a young, unmarried woman, and since Liam had never before been tempted to take a wife, he had had no other choice except for strict celibacy. Knowing that he was the first man, no the only man who would ever make love with Selena filled him with joy. He glanced out to see that the sky was not quite beginning to lighten on the horizon.\n\n\"Good morning,\" he murmured, kissing her hair.\n\nHis low voice rumbled in Selena's ear, and she smiled as she rose on an elbow to look down at him. \"Good morning.\" She bent to kiss him on the lips, her hair falling down to brush his shoulders. \"That was . . . unbelievable,\" she breathed. Her expression was one of amazement, a woman whose eyes were only now being opened to the possibilities.\n\nLiam caressed her hip, giving her a wicked grin. \"I hoped you would enjoy it.\" He gave a rueful laugh. \"I don't think you can understand just what a relief it was for me. I've been dying to have you for weeks.\"\n\n\"Are you sorry?\" she asked, smiling down at him.\n\nLiam gave her a questioning frown. He was genuinely confused by the question. \"Why would I be sorry?\"\n\nSelena's smile turned to a teasing grin. \"Now you're stuck with me as your wife.\"\n\nLiam felt his love for her well up inside, and he was aware of a sense of complete satisfaction with this most recent turn of events. He reached down to grasp her bottom and lifted her until she was lying atop him as he took in her appearance.\n\nHer hair was like liquid silk falling softly around her face. Her lips were red and slightly swollen from his kisses, and her breasts were tinged with pink where he had scraped them with his whiskers. He had finally taken a wife, and he had done so knowingly, willingly, eagerly.\n\nHe grinned up at her. \"Well, you are pretty hard to deal with, but I guess I'll just have to get used to the idea, Mrs. McKenzie.\"\n\nSelena bent to kiss him, and her smile was full of feminine smugness when she rose up once more. \"You surely will, husband, because now, you're all mine.\" The possessive gleam in her eyes took his breath away.\n\nShe started to rise from the bed, but Liam clasped his arms around her pulling her down against his side. \"We still have an hour or so before we have to get up. Try to get some rest.\"\n\nSelena snuggled her head on his shoulder, and within minutes, she was asleep. Liam smiled, loving the sense of contentment he felt as he held her. All the tensions and fears of the past weeks melted away, and he basked in peaceful relaxation. "
    ],
    "authorname": "haremgirl",
    "tags": [
        "m/f sex",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/trailing-home-ch-06"
}