{
    "title": "There and Back Again Ch. 047-048",
    "pages": [
        "Chapter Forty-Seven: Panic and Planning\n\nWe finally, reluctantly climbed out of the now-cool water and got dressed, teasing each other and laughing the whole time. When we finally made it out of the bathing room, a passing servant pointed us to a small private dining room that Aedan had apparently rented after the brawl fiasco from the night before. Everyone had cleaned up, and we had a wonderful dinner just talking and laughing. Everyone avoided talking business, and it felt like a wonderful preview of what it might be like when the blight was over.\n\nBack in our room, Alistair swallowed the noxious pinch of powder from the vial Zevran had given me; we knew that having a child would be difficult, given my possible birth control and his being a Grey Warden, but we decided that caution was probably for the best. It still seemed weird to me that birth control was something you gave to a man, not a woman. To my surprise, Alistair expressed incredible longing to have a family of his own, some day; I supposed, given his upbringing, it wasn't so strange. Growing up without one made the urge to have a family that much greater, as I could testify to from personal experience.\n\nWe made slow sweet love again before passing out, limbs intertwined; somehow I thought that having been with him my desire would be less immediate, less desperate, but if anything I wanted him more than I had before. We woke in the night and reached for each other again; my last thought before sleep claimed me the second time was that I was going to have to get good at making healing potions if we kept up at the same rate much longer.\n\nI woke early in the morning, to find Alistair still deeply asleep, his beautiful face relaxed as he snored softly. I was starving; I slid out of bed, carefully and as quietly as I could manage, and slipped on a loose-fitting linen dress from the pile of clothes in the corner. I went down to the main room to find us something for breakfast. My hair was tousled, my dress wrinkled from hours on the cold stone floor, but I was too sleepy to care, and it was early enough that I might not run into anyone, anyway. I crept into the kitchen, loading up a tray with bread, cheese, and dried fruit, tossing a couple of strips of jerky on top for Alistair. I giggled as I remembered him declaring, at supper the night before, that he wanted 'meat with every meal'. Zevran made a smart comment about offering him some meat, and everyone howled as he blushed scarlet and stammered. I finally distracted the poor boy with a kiss, earning a grin from Aedan, and a wink from Zevran. The memory made me smile.\n\nI passed Leliana in the hall on the way back to the room I shared with Alistair, and she teased me about my hair, making me stop long enough for her to halfway tame it to lay straight down my back, and then I hustled along, chilly in the cold morning air, until I reached the door. I balanced the tray with one hand, awkwardly, almost dropping it as I grabbed for the door handle. Pushing my way inside, I stabilised the tray and deposited it on a table just inside the door, twisting to pull the door shut and lock it.\n\nAs I turned back, I gasped as Alistair (who I expected to still be in bed, snoring peacefully) grabbed my arms, pulling me to him, crushing me into his embrace. And suddenly, his hands were in my hair, his lips bruising mine, his tongue in my mouth, and I was breathless in surprise. I could feel passion radiating off him in waves, and it was all I could do to fist my hands in the cotton of his tunic, holding on for dear life. The hair Leliana had carefully arranged was destroyed beyond repair as he tangled his strong fingers into it.\n\nHe leaned into me, and I took an involuntary step back under his weight. He pressed again, and I was backed up against the door, our bodies clasped tightly together. His passion was infectious, and I was suddenly desperate to be closer to him. I could feel his muscles contracting under my fingers, and needed to lay my hands on his skin. Releasing his shirt, I slid my arms around his slim waist, slipping down beneath the edge of his tunic and back up to splay my hands against his lower back. His groan was feral, and I was actually frightened for a fraction of a second as my primitive brain responded to the much larger predator it suddenly realised was about to devour me. And I felt devoured; his mouth on mine was savage and demanding, his teeth nipping at my lips, his tongue dueling with mine. A shot of adrenaline coursed through me like fire, and a submissive moan was all I managed in response.\n\nHis knee pressed between my legs, and mine separated to allow access. The sounds I could hear were exhilarating and confusing; I was so wrapped up in him I didn't even recognise my own voice. A moan as his thigh pressed against my sex; a sigh as his lips left mine; a gasp as he instead tilted my head and latched onto my neck; a growl as I felt his hardness on my hip. I needed him more than I needed air, and I started scrabbling at the buttons on his tunic, barely managing to disentangle his arms long enough to shove it down to the floor. One of his arms slipped around my waist, giving me an opening to run my fingers through his hair on their way down to stroke across his broad, muscular shoulders. His skin was hot to the touch, a striking contrast to the cold air, and I shuddered in response.\n\nReleasing me again, he reached down to grab at the fabric of my dress, trying to pull it up and get access to my own skin. The voluminous skirts thwarted him, tumbling down around his hands, and finally I pushed him away an inch, grabbed the hem, and lifted my arms, pulling the dress off over my head and tossing it to the floor. I hadn't bothered with bra or underwear for a quick run to the kitchen, and this left me naked. He let out a possessive growl as he raked over me with his eyes, and I flushed, pink traveling from my cheeks, to the tips of my ears, to the tops of my breasts, and I saw his eyes darken with appreciation. Despite the horror-movie hair I knew I must be sporting, I'd never felt so beautiful in my life.\n\nHe returned to me then, hands suddenly everywhere, lips glued to my neck, providing both literal and figurative warmth to fight the chill in the air. His thigh returned to its place between my legs, and I could feel the rough linen of his trousers rubbing across my lower lips. I wondered if I'd leave a stain, and decided I didn't care. His hands roamed, from my neck, to cup my breasts, grip my ass and pull me tighter against him, tickle across my abdomen and tease my navel. Each new touch dragged another sound from my lips. He knelt in front of me, sucking each of my small breasts into his mouth in turn, hands still exploring me, and I grabbed a handful of his hair to hold his head in place while shudders ran through me. I felt like molten lava ran through my veins, not blood, and each place he touched was its own miniature volcano. Despite everything, I'd never truly felt feeble before, but in the face of his passion I was weak as a kitten.\n\nWhen he stood up, I couldn't take it any longer and fumbled at the waist of his trousers. He pushed my hands away, finally ripping the knotted cord that held them up, and kicked them off. I stared at him, my own perfect Adonis, his muscles rippling in time to his panting breaths, and he let me look, a knowing smile playing across his flushed face. My gaze travelled further down and I saw that he was hard, head purple and slightly leaking, reaching up towards me, and I needed him. I almost sobbed with need, hands reaching out for him. He waited another heartbeat, and then two, and I finally found my voice and whispered out a stuttered \"Pl...please, Alistair.\"\n\nThe last syllable rose to a cry as he rushed back to me, arms around me, lifting, pressing, and suddenly he had my legs wrapped around his waist, his hands on my ass, and he was lowering me onto him. I tilted my hips slightly as I felt his tip brush over my sex, capturing him and holding the right angle as he filled me. He pressed my back against the door, holding himself still and letting me adjust to his size. I wasn't having that, my need was too great, and I awkwardly tried to thrust my hips against his, scraping my nails across his back. Getting the picture, he buried his face in my neck again and lifted with his arms, sliding me up his cock before mercilessly dropping me back down. I hissed in pleasure, urging him to do it again, and he complied, setting up a rhythm, pounding into me, demanding surrender, and I cried out wantonly.\n\nI heard myself babbling, and as embarrassed as I was, I couldn't seem to stop. As he relentlessly thrust into me, a steady stream of endearments poured from my lips.\n\n\"Only for you, Alistair. It was always and only you. I've never wanted anyone else, forever just for you.\"\n\nI peaked quickly, the lava boiling now, but he was relentless and kept going, kept demanding, and my whispers gave way to a rising keen as my temperature kept increasing, and I wondered if sex could actually make someone's head explode, and then I couldn't think as I came again, hips wriggling uselessly.\n\nBefore I even had a chance to draw a breath, he lifted me up and off him, setting my feet shakily on the floor, and I moaned in despair as I was suddenly empty. I didn't have much time to think, however; he turned me, taking my hands and bracing them on the door where my back had been, reached around in front of me to run his fingers through my sodden lips, bent down a bit awkwardly, and suddenly I was filled again from behind.\n\nI bowed my head, resting it against my arms on the door, enjoying the aftershocks of my last orgasm as my walls squeezed him within me. He groaned again, and hunched over me, one hand reaching around to cup a small breast, his thumb flicking across my nipple, while the other steadied my hip. It was his turn to babble, and I heard him breathlessly whispering a mantra of possession and passion.\n\n\"You are mine, I'll never let you go. So beautiful! Maker's Breath, I love you, Sierra.\"\n\nHis thrusts increased in tempo again, and realising I was adequately stabilised, his hand followed the line of my hip, down in front, where his deft fingers found my button. Already over stimulated, I thrashed and shrieked, and with a roar his rhythm faltered and I felt him pulse inside me. Shuddering together, his hands finally stilled and slid away from my oversensitive parts, at the same time that he softened and slipped out of me. I turned and threw my arms around his neck, and he chuckled and wrapped his own around me. We clung together as we caught our breath, and then I felt his knees buckle. We collapsed to the ground in slow motion, managing only to turn so I landed in a pile of quilts, that he'd kicked away before bed, instead of on the stone floor. He ended up lying across me, his head pillowed on my breast, his belly pressed against my sex, his hips between my knees, while I lay on my back with my arms around his shoulders. I could feel our mixed secretions seeping out, probably soaking his belly and pooling in the blankets under me, but neither of us cared enough to do anything about it.\n\nI repositioned some of the quilts to provide myself a makeshift pillow, then returned to running my fingers through his hair and stroking his soft skin. It was an interesting contrast between the smooth skin and the hard muscle underneath, and I enjoyed the goosebumps I elicited as I played.\n\n\"So...what brought that on, love?\" I finally asked, curious.\n\nHis voice was muffled as he nuzzled my breast, but I could have sworn he sounded embarrassed.\n\n\"I woke up, and you weren't here. I thought...I thought you were gone. Back to your world. That I might never see you again. I jumped up and got dressed, planning to search the place. When you opened the door, I was so relieved, I just...lost control.\"\n\n\"If this is my reward, I'm going to bring you breakfast in bed more often, I think.\" I grinned and he blushed. \"Maybe not for a few days, though. I'm going to need some recovery time.\"\n\n\"Oh, Maker, did I hurt you? I was so frantic...\"\n\n\"Hurt? No. Never. Wear out? Maybe a little bit.\" He lifted his head and grinned up at me, face smug. I playfully slapped his shoulder.\n\n\"But, Alistair...\" I pointed out the amulet that hung around my neck, the only thing I wore besides a satiated templar. \"You could have just checked the bedpost. You saw me take this off last night...\"\n\nHis smugness turned into sheepishness. \"I didn't even think to look. I just...panicked.\" I snickered again.\n\n\"Well I'm not complaining.\" His smug smile resurfaced, and I grinned in return, at the same time that my mind worried. What will happen the next time I actually disappear? I had tried to avoid Alistair for just this reason, but I was too weak...had I doomed him to panic every time I was out of his line of sight for five minutes?\n\nWe fell asleep like that, on the floor, his body heat preventing me from getting cold. What finally woke us again was his stomach growling, and we laughed and crawled into the bed, naked, feeding each other playfully. We finally took turns washing up at the washstand and dressing before wandering down to the private dining room Aedan had rented. I was stiff, again, and wondered if I'd get the chance to drag Zev aside and ask if that ever got better, if you could get used to it. And to get a recipe for making those little healing bottles...\n\nWe had planned a quiet day, overall; the three rogues were going to do some more recon on Marjolaine's place, and the rest of us were just going to relax. In the dining room, Zev slipped me another healing bottle and then he left with Leli and Aedan, each of them giving me a hug on their way out. It occurred to me that I'd probably not had as many hugs in my entire life prior to Thedas as I had in the couple of months since. I'd begun to take it for granted, even, which was an amazing thought.\n\nWynne decided to go to the market, and after some assurances from me, Alistair agreed to accompany her; I decided I'd stay at the Pearl and write some letters. He made me promise not to leave without him, and as sweet as it was, it irritated me a little. When I sniped at him and called him 'father', he backed off and apologised for being condescending. I forgave him immediately -- those damn puppy dog eyes! -- but decided to milk it a little first. I grumbled some more, until he volunteered some payback.\n\n\"If you'll forgive me, I promise I will do anything you ask for the rest of the day after I get back.\"\n\nI grinned, mind spinning. \"Anything?\"\n\nHe actually looked a little bit frightened, but nodded anyway. I grinned lasciviously. \"Done.\" I leaned in to kiss him softly. \"Hurry back.\"\n\nI winked and he blanched before hurrying off to meet Wynne.\n\nI wandered down to the main room of the Pearl and found Sanga, as always, standing near the bar. I had to say she looked like the least likely Madam I could imagine -- clean, neatly dressed, and just a little bit matronly. She was probably five years older than me. I tried to imagine her as a prostitute and just couldn't do it. I figured it would be rude to ask, so I just tried not to think about it anymore.\n\nI bought some parchment and a quill pen and ink, and when I told her I'd never used a quill pen, she gave me a strange look but also gifted me some parchment scraps to practice writing on and some blotting sand in a little bag, which was apparently to keep the ink from smudging. I also got some sealing wax. I took my finds back to the private dining room and began to practice what was essentially calligraphy. It wasn't going to be neat -- I kept accidentally turning the quill, making the tip vary in width so my letters looked like they were scrawled by a drunk third grader, but it was legible. I figured out the sand -- sprinkle it on the words, then roll the parchment and pour the sand back into the bag -- and the sealing wax was easy, though I didn't have a ring or anything with which to make an impression.\n\nThe first letter flowed fairly easily.\n\nMy Lord Nathaniel Howe,\n\nI don't know if this letter will reach you in time, but I hold out hope. You don't know me, though I know much about you. I know you're an honourable man, which is the most important thing for my purposes.\n\nI can't word it any better; your father has gone mad. He is power-hungry and ruthless. You may have heard that he took Highever Castle; the part you won't have heard is that his excuse for doing so, the supposed treachery of the Couslands, was invented by him to justify his actions to the Landsmeet. There is no proof, as there couldn't be; the Couslands were no traitors. You probably also did not hear how he had everyone in the castle slaughtered, including defenseless children and servants, because he could not allow anyone to survive and be questioned.\n\nHe has also imprisoned and tortured nobles and Templars alike, and has even set up his new Denerim Estate bedroom with a private entrance to the dungeon so he can be more intimately...involved...with the torture. He now claims the titles not only to his Arling, but also Teyrn of Highever and Arl of Denerim. No one man should have so many noble titles; you know this, I think.\n\nI know you have no reason to believe me, and I don't require you to; all I ask is that you come and see for yourself. I am hopeful that you can help to resolve this, and perhaps even keep your family name from being completely blackened. Please, come and see what he has done, what he has become. Then you can decide what is right.\n\nMaker watch over you,\n\nSierra Jones\n\nI re-read the letter multiple times, and then put it aside to show Alistair (and Aedan, if he would read it). The next letter required a bit more thought. I knew I couldn't save everyone, but I had to try.\n\nDear Varric,\n\nYou don't know me, and we will probably never meet, though I could wish it were otherwise. I am writing to you with a rather unbelievable story, but I am hoping that I can somehow make you believe it. The lives and happiness of several people you will come to meet and care about depend on it.\n\nI am something of a seer, and I have seen some aspects of the future involving yourself and those around you. I do not know why, all I can do is try to prevent some of the tragedy I have foreseen.\n\nI know that you are planning a Deep Roads Expedition with your brother, Bartrand. I would try to discourage it, but I know it is unlikely you will listen. I hope, then, that I can convince you to at least take some precautions when you do.\n\nThe first is: do not touch the red Lyrium, and especially not the idol you will find. And definitely do not allow Bartrand to touch it. Red Lyrium causes insanity, and that idol will cause the death of many, many people. Bartrand will go mad, and in his madness, will try to trap you in the Deep Roads so he does not have to share his treasure. Search your heart; you know he's capable of doing it.\n\nThe second is: do not go on the expedition without the Grey Warden mage who will provide the maps you need. There are darkspawn in the Deep Roads, and if someone becomes tainted, he is their only hope for a cure.\n\nYou will meet someone, in a year or so, who will agree to be part of the expedition. Her name is Hawke. She will have a startling menagerie of companions, and you will become one as well. I do not know if either of her siblings survived to arrive in Kirkwall. If they did, I beg you to have her send them, and her mother Leandra, away. Anywhere other than Kirkwall will do. If they stay, she will lose everyone. Kirkwall will need Hawke, but if her family stays, there will be only tragedy. Her siblings, if they have survived this far, will either die, end up as Grey Wardens, or end up in the Circle as either Templar or mage; and her mother will be targeted by an insane blood mage and killed. The only way I know for her to keep them safe is to send them far away. Show her this letter, if you think it will help. Her family can return to Ferelden, and if they seek out the Grey Wardens here, I will attempt to ensure they receive whatever aid they require.",
        "Tell Fenris his sister has been blackmailed into setting a trap for him. It's not her fault. Oh, and tell Merrill to leave the damn mirror alone. She will know what I am talking about. If she persists, her clan will perish. The ones she wishes to save are already dead, and nothing can be done to bring either of them back. Get Hawke to talk to her, if she won't listen to you.\n\nI hope that this...decreases the tragedy you will witness over the next ten years. If you ever make it to Ferelden, seek me out with the Grey Wardens. I am not one, but I travel with some.\n\nMaker watch over you.\n\nSierra Jones\n\nI debated writing a letter specifically to Hawke, and decided to leave it until after the Blight was over. Perhaps I could even convince Anders to take it...oh bloody hell, Anders. What am I going to do about that? A problem for another day.\n\nI still had some parchment left, so I began to make some lists. I started a small list of items we needed to buy before we left Denerim. I also made a list of odd things about my situation; for the first time since I arrived, I had time to really think about all of the things that didn't make sense about my presence here.\n\nLet me think. First, and most obvious -- how? How did I get here, and how did my mind get to Earth in the first place if I was really meant to be born a Cousland? Where did my mind find a body to inhabit on Earth? What happened to the original occupant? Had I kicked someone else out of that body? I had to leave that one blank; I had absolutely no idea, and no amount of thinking helped.\n\nSecondly, things that happen to my body in Thedas were mimicked on Earth. If I cut myself in Thedas, my body back there had a cut. If I got a tattoo, it showed up there. But the reverse was not -- always -- true. My broken nose, my losing my virginity, and my excess weight didn't translate to Thedas. But my laser hair removal and lack of periods did. How does that even make sense? Still no idea. And how was I able to bring items with me in my pockets, some of which persisted in Thedas even after I was dragged back? Moving right along...\n\nThird, what happened to my Thedas body when I was back on Earth? My Earth body stayed put wherever it was when I popped over, but the body here disappeared completely. Along those lines, what happened to the body of the baby that was born here with no soul, or mind? Had it died? If not, what had Aedan's parents done with it?\n\nFourth, why were the intervals that I spent in Thedas increasing, and why would being upset seem to trigger me going back to Earth?\n\nThere was the obvious templar thing. How does a person from Earth with no training whatsoever suddenly end up a templar? And why do templar powers here cause electrical blackouts on Earth?\n\nAnd then there was the fact that to darkspawn, I was completely invisible until I attacked them. Demons, undead, and bandits had no trouble, but somehow I was a black hole around darkspawn. How was that possible? And why me?\n\nIn addition, how the heck had David Gaider known enough about Thedas to make a video game that detailed and accurate? Had he been to Thedas as well?\n\nAt the end of my list, all I had were questions, and no possible answers. I was frustrated, and no further along than when I'd started.\n\nI jumped and hurried to cover my lists and letters with a blank piece of parchment when I heard the door behind me opening. Sanga came in with a plate of roasted pheasant, some sort of potato thing, and some fresh fruit. I hadn't even realised it was already lunchtime. I ate alone, staring at my lists again, without any further progress. When I'd finished eating, I gathered up my papers and headed back up to my room and took yet another nap.\n\nChapter Forty-Eight: Overprotection\n\nWhen I woke, Alistair was creeping into the room, and I startled him when I sat up. Laughing and clutching his chest, he lit a couple more candles and came in. I helped him off with his breastplate -- I could barely lift the thing, so it was a bit difficult for him to take off alone, though I knew he could manage. He told me he and Wynne had wandered the market, and he thought he had located Gorim for me. He promised to take me there with Aedan the following morning. Otherwise, Wynne had bought a few things, they had browsed the Wonders of Thedas, and then eaten lunch and come back.\n\n\"We went one other place while we were out.\"\n\n\"Oh?\"\n\n\"You never mentioned that Goldanna was a gold-digging harridan.\" His tone was light, but his expression was irritated.\n\nI sighed. \"Oh, Alistair. I didn't want you to know. I figured since she wasn't actually your sister that you wouldn't have to meet her and be exposed to her shrewishness. I hoped you could keep vaguely happy memories of believing you had a sister. I'm sorry.\" I suddenly worried I'd have to choose whether to 'harden' him, until I realised that in this altered history, he didn't need it. He was much more confident, had less survivor's guilt, and didn't have that same urge to sacrifice himself for a cause. He wouldn't need to take the throne; he didn't need encouragement to be more selfish. I smiled.\n\nI reached out and took his hand, and he let me. \"I should have told you.\"\n\nHe squeezed my hand and smiled softly at me. \"I love you. But would you stop trying to protect me?\"\n\n\"Never. Dare I ask how much coin you gave her?\"\n\n\"None, actually. You should have seen Wynne when she started moaning about mouths to feed. Besides, I didn't have that much coin on me. I left most of it here, and then between buying Wynne's supplies, and...well, anyway I didn't give her anything.\"\n\nHe was blushing as I encouraged him to lay down and cuddle with me on the bed, and I wondered what he wasn't saying, until he dropped a small box onto the bed between us.\n\n\"I bought you something.\"\n\n\"You did? Why? I mean, thank you! That sounded really ungrateful. But is there some special occasion I'm missing?\"\n\nHe chuckled. \"Not at all. I just wanted to.\"\n\nI picked up the box nervously. \"No one has ever bought me anything for no reason before.\"\n\n\"All the more reason for me to do it now.\"\n\nI leaned in and kissed him, and then turned back to the box. Inside was a delicate silver rose pendant, complete with thorns on the stem, on a sturdy but beautiful silver chain. I stared at it, shocked. It almost exactly matched my tattoo on my Earth body. It was amazing.\n\nI looked up to see him looking a bit anxious. \"Alistair, it's...it's gorgeous! I love it. Where did you find something so beautiful?\"\n\n\"There was a silversmith in the market. I saw it yesterday and had him put the clasp on it and put it on a chain. I just thought it could be like...a reminder.\" We shared a smile, thinking back a few weeks to when he'd given me the rose.\n\n\"I don't need a reminder, I still have that rose. It's still perfectly preserved. But I love this. It is beautiful, and you are sweet.\" I pulled him into a deeper kiss, then finally sat up and lifted my hair so he could put the chain around my neck. It nestled perfectly into the hollow of my throat. He stroked it with his fingers as he kissed me again, and I purred.\n\nPulling away once we were both breathless, he gestured to the mess of papers I had scattered on the table near the door. I reached over and grabbed them, showing them to Alistair. He read my letters, asking me more questions about Hawke and her companions in Kirkwall. I told him as much of the story as I could remember, though my memory of the second Dragon Age game was somewhat hazy -- I'd only ever played it through once, and it hadn't held the same appeal as the first. But I wouldn't forgive myself if I didn't at least try to avert some of the tragedy. I avoided telling him about Anders and Justice. I wasn't sure why, but it felt like another one of those secrets that weren't mine to tell.\n\n\"Do you think Howe's son will really come back?\"\n\n\"I'm not even sure I can get the letter to him. Just a name, with the address being 'the Free Marches' isn't terribly specific. And I'm not sure he could do anything if he did come back. But if he doesn't, and Aedan kills Howe, which he will, he will try to kill Aedan. I'd rather avoid that, if I can. Nate's not a bad guy. I want him to understand why his father has to pay for his actions.\"\n\nHe hugged me again, and then we turned to my list of weird things about Sierra. He didn't have any other ideas, but just the fact that I'd shared it with him and he hadn't run away was comforting. We lay together and just cuddled for a bit more of the afternoon before heading to the dining room together for supper. Aedan, Zev and Leli were waiting for us, all freshly bathed, and Wynne as usual had her nose buried in a book. I stepped over to her to give her an appreciative hug for protecting Alistair from Goldanna for me, and she smiled and patted my shoulder.\n\nWhile we ate supper, Aedan told us about the guard schedule and floor plan information they'd managed to glean from the house Marjolaine was staying in. Zev had snuck up to peek through the windows, and they had taken turns watching the place all day. It was on the edge of the market district, pretty upscale, really, and quite well guarded, though they'd found a few holes in the security to exploit. They planned to take her down the following afternoon, when the guards switched and one usually left to get the others their meals.\n\nThat was when the fight began.\n\nAedan insisted that I stay at the Pearl while they took care of Marjolaine. Leliana and Alistair agreed, to my annoyance.\n\n\"Sierra, you know how you feel about fighting people. If you go in there, at minimum you're going to have to watch us do it, and if things go poorly you may even have to fight. I don't want your guilt on my hands.\"\n\n\"Aedan, you're going to be facing at least two mages in there. Alistair can't handle both, and besides he'll be busy swinging that big shield of his around. I can stay out of the melee, but at least let me neutralize one of the mages. I promise I'll leave once it's done. But I'm not staying here to worry about you all when I could help. It's bad enough when you guys are doing Chanter's board stuff or working with Sergeant Kylon.\"\n\n\"Sierra...\"\n\n\"Forget it, Aedan.\"\n\nLeliana, in desperation, tried to drag Zevran into it. \"You haven't chimed in yet, what do you think, Zev? Sierra should stay here and be safe, no?\"\n\n\"I don't know about that, oh most beauteous bard.\"\n\nI gave him a grateful smile, but Aedan gave an indignant squawk and I knew there would be problems between them later. I tried to save Zev from himself, but he just kept talking.\n\n\"Things are only going to get more difficult from here. Between Loghain, and Howe, and the dwarves, and miles of Deep Road...it can't but help to have Sierra actually battle-ready, since you have said it's impossible to leave her behind. I think she needs to be given a chance, in a real fight. Even if she just stands back and neutralizes a mage. It's not that we can't do it without her -- we are ridiculously awesome, after all -- but we shouldn't.\"\n\nI was impressed at his succinct summary of the situation. And of course, he was right; they wouldn't always be able to protect me. Not that I was some sort of blood-thirsty idiot; I was still nauseous when I thought about trying to actually stab a real person with my daggers, but if I was going to be stuck in this world -- if I wanted to be stuck in this world -- I had to learn to live in it.\n\nAlistair had the good sense to keep his mouth shut during the discussion. I knew he'd want me to stay out of it, but he knew better than to openly say it, at least where I could hear.\n\n\"Aedan. Stop protecting me. You have to let me live, too. I'll stay in the next room. But I'm coming.\"\n\nVery reluctantly he nodded, and I sighed. Big brothers can be a total pain in the ass! I smiled.\n\n\"So we go meet Gorim in the morning, Marjolaine in the afternoon...maybe drop by and see how Wade is coming with our armour in between?\"\n\nEveryone agreed. Dinner finished, Wynne decided to stay and read. Leliana planned to go play some more music in the common room -- apparently Sanga had even offered to pay her to do it; Aedan and Zevran made noises about going to their room, but given they were the only ones still in armour, it didn't take a rocket scientist to figure out that they were going skulking around the city. I worried, but knew there was nothing I could do. And of everyone I'd ever met, those two could take care of themselves.\n\nAlistair and I were left, and we decided to head to our room. I think he realised I needed a distraction from worrying about Aedan. He kissed my neck while I unlocked the door, and I tried to relax. We were still in that slightly awkward stage where we knew we wanted each other naked at every possible opportunity, but were too embarrassed to just go ahead and do it, so we stood looking at each other and avoiding eye contact for a painful few moments. Finally I cleared my throat, desire winning over fear.\n\n\"So. You said that you would do anything I asked. Did I hear that right? Anything?\" I smiled a smug, wicked grin.\n\nAlistair's pout was cute. \"Yes, I did. I get the feeling I'm going to regret that, though. Am I?\"\n\nMy grin widened. \"No, I don't think you will.\" I moved close to him, and then went up on tiptoes and whispered in his ear. \"What I'm going to ask of you is easy. All I want you to do is just stand still. You can do that, right? Just don't move unless I specifically ask you to. Easy.\"\n\nHis quiet groan sent a bolt of desire shooting through me. This is going to be fun. I positioned him, standing in the middle of the room, feet slightly spread. He crossed his arms, somewhat self-conscious, but I reached out and made him drop them. I spent a few moments just walking around him, in a circle, admiring my prize. As always, I was struck by how unbelievably gorgeous he was. Part of me wanted to rush it, to have him take me and push me down onto the bed, but I resisted. I was planning on making this night special. He fidgeted slightly as I stared at him.\n\n\"Tsk, tsk. Already moving? You keep doing that and I'll have to find a way to punish you.\" My naughty grin made him groan again. I could see the bulge in the front of his trousers and licked my lips lasciviously.\n\nDone staring, I moved closer, reaching one hand out to trail a finger across one of his collar bones and down the centre of his chest lightly. His jaw clenched, but otherwise he held still, so I added my other hand. Systematically I stroked his chest, his shoulders, his back, his firm stomach. I kept my touch light, teasing, and watched him struggle not to thrash when I tickled somewhere sensitive. I verbalised a commentary of what I was doing, describing each tantalising body part as I touched it.\n\nHe opened his mouth to reply, but I silenced him with a finger and a look. Moving around to his front, I leaned in close and licked his neck softly. I slowly unbuttoned the shirt, pulling it back to kiss and lick the newly bared skin with each step. Finally the shirt was open completely, and I pushed it off his shoulders, letting it fall to puddle at his feet.\n\nHis upper body was cut, not like the body builders from Earth but almost. He had firm, ropey muscles running across his shoulders, down his biceps and his chest. Now bare, I ran my fingers across them again, following behind with my lips and tongue. I teased him with soft licks and kisses, ran my fingers through his sparse blond chest hair, and enjoyed the feeling of his muscles tensing where I touched. Happy with my examination of his chest, I moved behind him and did the same with his back and shoulder blades. His breath came a little more shallowly as I licked and kissed the points of his shoulder blades and traced his spine with my fingers.\n\nMoving back in front of him, I looked up to meet his gaze as I slowly leaned forward and licked a nipple. He gasped and twitched slightly, and I grinned and did it again, then switched sides. I'd never paid much attention to the little firm bumps before, and they were apparently extremely sensitive. The bulge I could feel now against my belly enlarged and pulsed slightly with every tongue swipe. Curious, I sucked on one nipple and gently allowed my teeth to close over it; I was rewarded with a hiss and him losing control enough to raise him arms before catching himself and lowering them to his sides, fists now clenched as well. His next breath was ragged, and I repeated the motion on the other nipple with much the same effect.\n\nUnable to wait anymore, I slipped around behind him again. Moving quietly, I grabbed the hem of my dress and pulled it over my head; my bra shortly joined it on the floor, and I moved closer to Alistair, my arms encircling his waist from behind, and I pressed my breasts against his bare back. When he groaned I knew he could feel my nipples on his skin, and I spent a few moments teasing us both by rubbing them against him. Kissing his back, I reached down and slowly unlaced the front of his trousers. My fingers bumped against his erection, and it throbbed in response. I chuckled darkly, my voice hoarse with arousal.\n\nLaces undone, I slowly eased his trousers off his hips. I slid down his back, keeping my skin in contact with his, kissing his back as I sank. My nipples scraped down his bare skin until they came into contact with his smallclothes, my mouth still licking and kissing his lower back. Once on my knees, I sat back a bit and pushed his trousers the rest of the way down, demanding he lift each foot in turn so I could throw them into the pile with the rest of our clothes. I ran my hands down his thighs, tense with arousal, the muscles standing out. I kissed the skin just above the band of his smallclothes, and he muttered a curse under his breath. In punishment, I opened my mouth and took a small bite of the skin on his ass through the thin fabric. He gasped and jerked, so I gripped his hips and did it again on the other side. The single curse became a string of prayers and curse words all jumbled together, and I smiled smugly at my accomplishment.\n\nI trailed my lips down the back of one thigh, then licked the sensitive skin behind his knee; he almost fell as he jumped, and I grinned and repeated it on the other side. Satisfied, I stood and moved around to his front. His eyes were dark with desire, pupils enormous, and his gaze raked across my nearly naked body. I wriggled out of my panties, struggling against my shyness to expose myself totally to him. I stepped up to his front, again teasing his skin with the hard points of my nipples, and we both moaned softly. I pulled his head down for an intense kiss, then released him to slap his eager hands away.\n\n\"Now now, not so fast! I'm not done with you.\"\n\nHe groaned again, which switched to a gasp as he felt my fingers slip inside the waistband of his smalls. I gently peeled them away from his throbbing erection, allowing them to slide down his legs, finally leaving him naked. I licked my lips as I stared at the firm pole of glistening flesh that was pointing at me. I slowly sank to my knees again, feeling him shudder as his length was briefly captured in the valley between my breasts. I kissed down his belly then detoured to gently bite into the skin of his hip, triggering another gasp. My hands stroked the front of his thighs, and I could feel him trembling.\n\nI leaned back and examined his erection, his crown purple, foreskin already pulled back, slit oozing clear fluid. His heavy sac was hanging underneath, light fuzz obscuring nothing. I licked my lips again, then, bracing my hands on his thighs, leaned forward to dart my tongue out and taste the clear fluid. I contemplated the taste for a moment -- salty, as expected, but not unpleasant -- and then tried again. Alistair's legs were trembling more.",
        "\"Sierra...Maker, what are you doing to me?\" He gasped and I grinned as I licked all the way from the base to the tip of his length, then lifted one hand to cup his sac as I did it again. The trembling increased, and I could read agonised arousal on his face as my tongue lightly stimulated him. Finally taking pity on him, I engulfed the head with my mouth, my tongue darting around the tip, one hand still massaging his sac while the other came to grip his shaft. I knew I wasn't getting much more than that in my mouth -- he was large, and contrary to at least one foster mother's belief, my mouth wasn't -- so I used my hand to slowly stroke the exposed length. I hollowed out my cheeks, sucking softly, loving the sounds I was pulling from him as I did. His stream of prayers and curses resumed as I sucked, licked, and stroked, and I felt his sac pull up against his body as he prepared to orgasm. I stopped, letting his cock pop out from between my lips with a sucking sound, and gently squeezed the base of his shaft until I could feel the urge had passed.\n\nHe groaned in dismay, and I smirked evilly at him. \"That's for moving when you weren't supposed to.\"\n\nI leaned in to start again, lips and tongue stimulating the engorged head as my hands resumed their gentle stroking. I could feel him trying to resist, but before long he was subtly thrusting his hips and groaning incoherently. Again I stopped, and he cried out in disappointment. His breath stuttered as he panted with need, his face a gorgeous mix of passion and agony, and I finally smiled.\n\n\"Okay, Alistair. Come on, then.\" I met his gaze as I engulfed his erection again, and this time I had no intention of stopping. I sucked and stroked, and his legs shook, and his hands came up to touch my cheek and my hair, for which I forgave him. He didn't grab me or try to control my movements, and I was grateful. I tried to express my love for him through my eyes as the rest of me tried to give him release. He whispered, warningly, and I shrugged off his weak attempt to push me away, and then he shouted my name as he came, explosively, in my willing mouth. I swallowed as fast as I could, barely able to keep up with the onslaught. Finally, it seemed he was done, and he slumped forward and braced himself on my shoulders. I gave one last suck, one last stroke, and then slowly released his now overly sensitive, rapidly deflating package.\n\nHe groaned, voice husky, as he caught his breath and I stood up. He pulled me into him, crushing me into a tight embrace. I smiled and cuddled into his chest.\n\n\"You know, I didn't say you could move yet.\"\n\n\"Oh, to the Void with that!\" He reached down, scooped me up, and tossed me across the room onto the bed. The massive frame creaked and groaned under the sudden assault, and for a brief moment I thought I might be dumped onto the floor. Finally the frame stabilised, and Alistair climbed into the bed with me."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-47-48"
}