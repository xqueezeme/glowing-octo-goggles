{
    "title": "Just the Six of Us Ch. 29",
    "pages": [
        "Thank you to my faithful readers. You guys are the best. If you want to get in contact with me and ask me questions, check my profile. \n\nPlease don't read ahead to find out what happens. Just read. All is revealed pretty quickly. I never can keep secrets for very long.\n\nThank you to my editor, drew. \n\nYes, damnit, 30 is coming.\n\n\n\nChapter 29\n\n\"I know I give you a lot of shit, but just be careful! You're driving like a fucking maniac! I'm worried about her, too.\"\n\nMike sped through an intersection, barely tapping his brakes as he did so. 'I'm worried. I'm so fuckin' worried,' he kept thinking over and over.\n\n\"Me too bro, me too.\"\n\n'I'm gonna lose my shit if...' the thought trailed off. He didn't want to finish it.\n\n\"Dude, this doesn't seem real. I know I change my favorites all the time with your sisters, but Danni really is my favorite, man. She's just gotta be okay!\"\n\nThat surprised Mike. That was the first time he could remember that the voice actually used one of his sisters' names. The voice, whatever the hell it was, was actually concerned. His head was pounding against his temples. Another intersection flew by and he pulled into the right lane, slowing as the first turn came up.\n\n'She's going to be fine,' he thought unconvincingly. 'Please God, not her,' he prayed quietly.\n\nHe finished the turn and sped up again. His heart felt like it would leap right out of his chest and land on the dashboard.\n\n\"What do you think happened?\" the voice asked. \"We didn't really stay long enough for that cop to tell us what happened.\"\n\n'Honestly, I don't want to think about it,' Mike thought. All the cop had said was that Danni was in an accident, and that they had taken her to the hospital. Mike hadn't waited for any more information, instead charging back upstairs and grabbing clothes and sneakers before rushing past the cop to his truck.\n\n\"I'll bring everyone else,\" Sarah had called.\n\nHis phone vibrated in his pocket. He squirmed around and peered down. \"Sarah: Be careful, Mike. Drive safe, love you\" popped up on the screen. He set it down and let off the gas a little.\n\n\"I keep thinking about the way she smiles at us. The way the edges of her mouth curl upwards.\"\n\nMike sighed. 'Keep it together, man, you're freaking me out now.'\n\n\"Sorry,\" the voice said.\n\n'Just keep it together.' Mike turned another corner and the hospital appeared, looming in the distance.\n\nHe shook his head as he pulled into the parking lot, heading directly for the Emergency Room parking. He pulled in and hopped out, slamming the door and running towards the entrance.\n\n\"Fuck fuck fuck fuck fuck,\" the voice was saying over and over.\n\nHe nearly slammed into the automatic doors and squeezed through as they began to open, the next set seeming to open quicker. Rushing up to the desk he stopped and peered down at the girl behind the desk. \"Dannica Matthews,\" he asked. She was on the phone and typing at a computer, but she shrugged and cocked her head to the security door and pressed a hidden button on the desk.\n\nThe door buzzed as Mike headed toward it. Passing through it, he began to look around at his surroundings. There were several rooms, some curtained-off areas, and an area with several tired-looking nurses and one doctor talking quietly. One of the nurses looked up at Mike. \"Help you?\" she asked.\n\nMike nodded, heading towards her. Suddenly, an alarm went off and the nurses and doctor leaped into action. \"She's coding!\" one of them said. They all ran quickly to one of the rooms.\n\n\"What?! FUCK!\"\n\nMike's heart began pounding, tears filling his eyes as he followed after the various hospital staff. His feet felt like they were encased in cement. He forced himself to push one leg forward, setting his foot down, then forcing the next one forward. He started to get lightheaded, the anguish he'd felt as a kid hearing about his parents' passing rushing back to him. He saw himself sitting there listening to Sarah explain what had happened, and then in the next instant he saw himself sitting with Beth, Emma, and Sarah, telling them how Danni had died.\n\n\"No-no-no-no-no,\" the voice droned.\n\nHe took another step, disbelief washing over him. He felt like he would fall to the floor, a pile of clothes and anguish. He took another step, then fell to his knees and closed his eyes. \"No,\" he said.\n\nTears stung his eyes as he knelt there. He looked down at his hands, both of them in his lap. He turned them over as a tear fell into his palm. \"No,\" he said out loud. Just then, a sound reached his ears that cut through every other noise in the hospital.\n\n\"Mike?\"\n\nA wave of confusion swept over him as he thought, 'I know that voice.'\n\nHe stood and turned quickly, tears blurring his vision as he wiped them away. A curtain was pulled tight across one area, but there was a small gap that he could see through. Laying back on a bed, with a bandage on one pretty cheek, was Danni. She had a pink cast on one leg and appeared to be very much alive.\n\n\"YES! YEAH BABY! WOOHOO!\"\n\nMike's knees went weak again as he tried to move forward. He fell to the floor and covered his face with his hands. \"Oh God!\" he cried, a smile finding its way to his face. Regaining his strength, he stood and pulled the curtain aside.\n\n\"Tell me you're okay!\" he said.\n\nTears in her eyes, she held out one arm, the other clutching her ribs protectively. \"I'm okay,\" she said, her voice cracking.\n\nMike rushed forward and opened his arms wide, gently wrapping her in a hug. Her arm clutched him tight. \"I love you so much,\" she whispered.\n\nMike fought to hold his voice steady. \"I love you too,\" he said. He pulled away and looked down at the pink cast on her leg.\n\nShe smiled weakly at him. \"It's broken, but it's not too serious. They set it before you got here.\"\n\nHe winced at the word broken.\n\n\"Does this mean we can't fuck her?\"\n\n******\n\n\"Text Sarah and tell her I'm okay. My phone is still with my car,\" Danni said.\n\nMike nodded, pulling out his phone. \"She's OK! Broken leg, a few cuts, don't rush,\" he sent.\n\n\"Thank God!\" came the expected reply.\n\nPopping it back into his pocket, he looked back up at her and stared, unable to pull himself away.\n\n\"We were so worried about you,\" he said.\n\nShe smiled. \"I know you were. I'm sorry.\"\n\nHe moved over to a chair in the room and pulled it close to the bed. \"What happened?\"\n\nDanni's face fell and she lowered her head. \"It\u2014\" she began, but stopped. She took a deep breath then and looked back up at him. \"It was him.\"\n\nMike's face went cold, his fists clenching into iron balls.\n\n\"I was heading to Megan's and had stopped to get gas. When I pulled back onto the highway, I noticed someone following me. He pulled around to my side and I could just feel him looking at me. I turned and that's when I saw him. I saw the hate in his eyes and his red hair. It was him. That's when he slammed into my car.\n\n\"It's kind of fuzzy after that. I remember a police officer and the ambulance ride. The next clear memory I have is sitting here in the room while a few nurses worked on me. They took me for some X-rays and some scans. I have no internal bleeding, I know that much. They gave me this bandage and were checking my leg. I heard someone yell something about someone coding, and my nurse ran out. That's when I heard you.\"\n\nMike nodded. \"I'm going to take care of this little problem,\" he said.\n\nDanni shook her head. \"Just let the police handle it, Mike.\" He'd stood by then and peered out of the curtain.\n\nHe sighed, running a hand through his hair. \"I just don't get it.\"\n\nDanni didn't answer. She was looking down, still holding the bandage to her face. \"What?\" she asked quietly.\n\n\"I just don't understand why he hates us so much.\"\n\n\"He's just an evil prick.\" She grimaced in pain then, groaning under her breath.\n\nMike turned. \"What can I get you?\" he asked, coming forward quickly.\n\n\"I'm okay, just... in pain.\"\n\n\"Did they give you anything yet?\"\n\nShe nodded her head. \"It's made it bearable,\" she said, indicating her leg.\n\nAs if on cue, the curtain pulled aside and a young Hispanic nurse came in. \"Hello,\" she said. \"I'm Esmerelda,\" she said smiling at Mike. \"I'm guessing you're family?\"\n\nMike nodded.\n\n\"I'm just gonna finish up that bandage and then we'll get her stitched up so y'all can get out of here.\"\n\n\"I'm okay if you need to go help with whatever that was,\" Danni said, laying back against the bed.\n\nEsmerelda smiled and moved a cart forward, pulling some tape from it. \"They've got all the help they need right now, sweetie. I'll get someone in here to stitch this cut up.\" The young nurse was cleaning the cut on her cheek, Mike watching intently. He felt a surge of pain well up inside of him when he realized that she'd have a scar there now. Her pretty face forever changed now, because of one asshole. His anger surged again, but he pushed it back down. It would do no good to anyone to blow his top here.\n\nMike turned as he heard the security door open again and a familiar voice echo through the hall.\n\n\"I'll ask a nurse,\" Emma said.\n\nHe pulled the curtain aside and peered out. \"She's in here,\" he said.\n\nEmma, Sarah, and Beth hurried forward and peered in. Sarah began to cry, tears of joy as she saw her little sister. Smiles were abound, however, and Mike stepped out for a second while his other three sisters each gave Danni a hug and began to worry over her.\n\n\"I knew she'd be okay, bro,\" the voice said.\n\n'Yeah right,' he thought.\n\nTurning, he reentered the small room. Esmerelda stood to leave, saying she was going to see if there was someone available to stitch up the cut on her cheek. She smiled and disappeared.\n\nMike moved around his sisters and sat next to Danni. They were asking her the same questions Mike had. What happened? Do you need anything?\n\nDanni answered as best as she could, leaving out the part about who it was that had done this. Thirty minutes passed while she answered her sisters' questions.\n\n\"Who hit you? Are they okay?\" Beth prodded finally.\n\nDanni got quiet then and sighed, looking at Mike.\n\nHe nodded.\n\nAfter a long silence he lifted his head and looked at his sisters. \"It was Dwayne.\"\n\nBeth shook her head, not knowing who he was referring to.\n\n\"Red, the guy that shot my truck tires out, that I knocked out at the frat house, that tried to rape Danni, that Emma punched.\"\n\n\"Fuck,\" said the voice, realizing something Mike apparently didn't.\n\nSarah turned and looked directly at him. \"Mike...\"\n\nHe turned and looked at her.\n\n\"You said you couldn't remember anything about the past year.\"\n\nHe felt a wave of heat sear his face and a single thought passed through his mind: 'Fuck.'\n\nHe stood, holding his hands out. \"Sarah...\" he started.\n\n\"Your memory is back?\"\n\n\"Sarah,\" he started again. \"Let me explain.\"\n\n\"Your fucking memory is back?\"\n\nMike fell quiet.\n\n\"Please don't be upset,\" Danni whispered. \"Mike just wanted some time alone with us\u2014\"\n\n\"Don't.\" Anger crossed Sarah's face then and she turned and pointed a finger at Danni. \"Don't you fucking dare.\"\n\nTurning, she looked back at her brother, her gaze ice-cold. \"How long?\"\n\nMike sighed and shook his head. \"Sarah,\" he started.\n\nHer face didn't change a bit. \"Answer me, Michael.\"\n\nHe sighed and lowered his head. A long moment of silence passed. \"Just let me explain!\"\n\n\"HOW. LONG.\"\n\nHe was quiet for a few seconds before answering. \"Since the night I went out with Emily.\"\n\nAnger, mixed with pain, boiled to the surface, showing clearly on Sarah's face.\n\nEmma and Beth wisely took a step back.\n\nDanni wouldn't be cowed, however, and tried to stick up for Mike again. \"He just...\"\n\nSarah stopped her cold with a glance.\n\nA long, uncomfortable silence followed.\n\n\"Do you have any idea how much I've been worried about you? Do you know how inconsiderate and mean keeping something like this from me is? How fucking dare you!\"\n\nA tear rolled down her cheek.\n\nMike's heart sank.\n\n\"Sarah, please!\"\n\nHe turned to look at Danni for support, again.\n\nSarah moved forwards in one swift motion, bringing her hand up quickly and harshly connecting with Mike's cheek.\n\nA loud smack filled the room, Mike's head slinging to one side and his vision blurring for a few seconds before clearing. His cheek stung like it was on fire.\n\nSarah turned, then, and flung the curtain open, pushing past her two stunned sisters.\n\nMike clutched at his cheek for a minute, then dropped his hand. \"I deserved that,\" he said.\n\nAn awkward silence filled the room again. Mike stood then. \"I'm gonna go to the bathroom,\" he said, moving to leave the room.\n\n\"Ouch, man,\" the voice said. \"She just slapped the fuck outta you.\"\n\n'Thanks, Captain Obvious,' Mike thought.\n\nMike walked down a hallway toward the bathroom. 'I really don't need this right now,' he thought. He pissed, zipped himself up and moved to wash his hands. He turned and looked at this cheek in the mirror, wincing as he saw the redness. And there it was, plain to see, right there on his face: a white outline in the shape of a hand.\n\nHe turned and exited, slowly finding his way to the waiting room. Sarah was standing near the entrance, talking to a police officer. Mike hurried over and caught the tail end of what the cop was saying.\n\n\"...but he died at the scene.\"\n\nMike came up to stand beside his sister, who ignored him.\n\n\"What happened?\" Mike asked.\n\nSarah didn't turn to face him, but did answer. \"Dwayne's dead,\" she said coldly. \"This is my... brother,\" she said to the policeman.\n\nThe cop nodded. \"From what we can tell, the deceased was trying to ram your sister off the road. She slammed on the brakes at just the right time and he flew into the railing, hard enough that he bounced over it and hit the road below. He died on impact.\"\n\nMike was stunned. He didn't know what to feel.\n\n\"How's your sister?\" the policeman asked.\n\n\"She's doing okay, all things considered. She's got a broken leg and a cut on her face,\" Sarah said. \"Were you the first one on the scene?\"\n\nThe officer nodded.\n\n\"Thank you,\" Mike said, reaching out to shake his hand.\n\nThe officer nodded. \"Just doing my job, sir.\" The policeman turned then and left, leaving Mike standing in awkward silence with his still-furious sister.\n\n\"Dude, don't move, don't even breathe. Maybe she'll forget you're here.\"\n\n\"Sarah...\" Mike said.\n\nShe ignored him, instead heading towards a seat to wait.\n\nNothing was going to work. Mike tried to talk to her, to get her to look at him. Finally he stood and headed back inside to see Danni. Beth and Emma were exiting the room then and headed towards him.\n\n\"They're working on her face now, so they want us to wait outside. They'll let us know when they're done,\" Emma said.\n\n\"How's Sarah?\" Beth said.\n\n\"Pissed,\" Mike replied.\n\nBoth of them looked at him sympathetically. \"She's probably just as mad at us,\" Beth said naively.\n\nEmma shook her head. \"She doesn't realize that we knew too, I'll bet.\"\n\nMike sighed, heading toward the exit doors again.\n\nHe held the doors open for his sisters and followed them to where Sarah was sitting. They sat quietly for awhile. Eventually Emma convinced Sarah to head home, knowing Mike would stay. The nurse eventually came and let Mike back in the room.\n\n\"The doctor should release her in a little while,\" Esmerelda said.\n\nBeth had a different bandage on her cheek this time. They must have finished stitching her face. She smiled as he came in. He looked down and admired her pink cast.\n\n\"So pink, huh?\" he said.\n\nShe smirked. \"They just gave it to me, I didn't choose it.\"\n\n\"Likely story,\" he said. He peered down at it. \"Can I be the first to sign it?\"\n\nShe giggled softly. \"As long as you don't write anything dirty.\"\n\nMike shook his head. \"I'll think of something clever, like a warning sign that says 'Woman Driver' or something.\" He flashed her a cheesy grin.\n\nShe rolled her eyes and smiled. She scooted back on her bed to lay down. \"So how's our sister?\"\n\n\"Pissed off and ignoring me.\"\n\n\"Mike, I'm sure she's way more pissed at me than she is at you. We're supposed to be on the same team, I was supposed to tell her when you got your memory back.\"\n\nMike shook his head. \"I doubt it.\"\n\n\"I had to lie to her as well, to keep our secret.\" Danni said.\n\n\"My secret,\" he corrected.\n\n\"If we were both lying about it, it was our secret.\"\n\n\"What's your point?\" he asked.\n\n\"I'm just saying that I had just as much to do with it as you did. I wanted to have you all to myself too. I wouldn't have told Emma and Beth if I thought I could have convinced you.\"\n\nMike looked at her, surprised.\n\n\"Honey,\" she said, looking at him. \"I might have to share you with my sisters, but that doesn't mean I like doing it.\"\n\n\"Well, as mad as she is, I doubt you'll have to share me with her.\"\n\n\"Oh please,\" Danni said. \"She'll get over it soon enough.\"\n\nHe sighed. \"I promise I'll fix it.\"\n\nDanni shrugged, drawing another surprised look from her brother.\n\nShe looked at him in return. He continued to stare. \"What?\" she finally asked. \"It's not like you were keeping it from her to be mean. She can get over it or not, it's up to her. I'm not saying what we did is right, but it's not that big of a deal.\"\n\n\"It's definitely not right, but it's a big deal to her.\"\n\nDanni sighed and nodded. \"Yeah, I guess.\"\n\nSilence filled the small room then as they continued to wait. Twenty minutes later, they were released, Danni sporting a brand new set of crutches. Mike signed and paid what he had to, and helped Danni out to his truck.\n\n\"So,\" Mike started as he drove home. \"Dwayne didn't survive the wreck. His car bounced over the guardrail and he died on impact when he hit the highway below.\"\n\nDanni turned and stared for a few seconds, unable to find the words to speak. \"I, uh... wow.\" she said finally. She looked a little dumbfounded. A look of unmistakable happiness crossed her face, followed quickly by a sickened look. Mike sighed, realizing what was bothering her.\n\n\"Danni, it's okay to feel relieved. He was an evil fuck. He tried to kill me, Emma and Matt, and he tried to kill you, not to mention what he would have done if I hadn't gotten to that frat party when I did.\"\n\nShe nodded. \"I know that. I'm glad he's dead, I just...\" she trailed off.\n\nHe gave her a sympathetic look. \"It doesn't make you a bad person to be glad that he's dead. Having that conflict inside you is what makes you a good person.\"\n\nShe sat in silence the rest of the way home.\n\nMike pulled in and hopped out as Emma and Beth came out of the house. He helped Danni down and pulled her crutches out of the bed of the truck, handing them to her. He paced her as she slowly made her way around his truck and hobbled up the steps to the house.\n\nAs they went inside, Danni headed to the living room to sit down. The puppies came out of Sarah's room and began playing around at Danni's feet.\n\nMike looked around and then up at Emma and Beth. \"Where is she?\"\n\n\"She's in her room,\" Emma replied. \"Don't bother trying to get her to come out. She locked the door.\n\n\"Come on,\" Beth said, moving to assist Danni. \"Let's get you to bed.\"\n\nThe three helped Danni inside, and then up the stairs to Mike's room. She thanked her sisters as they helped her to the bed, and then assured them that she could handle it from there.\n\nMike headed back downstairs after making sure Danni was okay. He paused at the bottom step and glanced over at Sarah's door. The light was off.\n\nHe sighed. The fridge light seemed blinding as he reached inside for the gallon of milk. He took a swig and put it back.\n\n'Nothing I can do about it tonight,' he thought. He headed back upstairs.",
        "*****\n\nMike glanced up at the clock, shielding his eyes from the light of the sun blaring through his window. Danni was snoring softly beside him, the covers pulled up tight around her, with just her pink cast showing. He smiled and climbed out of bed as quietly as he could.\n\n\"So... sex with the twin or Blondie McHugeknockers?\"\n\n'Neither,' Mike thought.\n\n\"So you're gonna go barge in on grumpy-ass, or maybe go back in and fuck the cripple so much that you break her other leg?\"\n\n'No,' Mike thought again. 'I'm not in the mood.'\n\n\"Haha, funny. Seriously, which one is it?\"\n\nMike ignored the voice as he headed downstairs. Beth was sitting at the table reading a thick book and drinking a smoothie. He glanced over and saw that Sarah's door was open.\n\nBeth followed his gaze and shook her head. \"Don't bother, she was gone when I got up.\"\n\nHe sighed and turned to make himself something to eat.\n\n\"Dude, seriously, which one?\"\n\nDanni came thumping slowly down the stairs. Mike stood and headed over to help her.\n\n\"No!\" she warned. \"I'm going to have to do this when you aren't here, so I'll have to get used to it.\"\n\n\"Seriously man, are we fuckin' or what?\"\n\nMike nodded, but positioned himself at the bottom of the stairs, just in case she fell.\n\n\"Looks like we're missing class today,\" he muttered as Danni thumped her way down.\n\n\"Yeah, it'd be a perfect day for getting' some! But nooooo! Fucker.\"\n\nDanni seemed to be getting the hang of the crutches, but her progress downstairs was slow. Mike was patient, however, and she soon reached the bottom. She quickly sat in a chair to catch her breath.\n\n\"Want me to make you something?\" Mike asked.\n\nShe shook her head. \"I can do it.\"\n\n\"Quit being so stubborn. Of course you can do it, but that doesn't mean you have to,\" Beth said as she stood. \"I've already got you a smoothie ready.\"\n\nDanni smiled and reached out for the glass as Emma appeared at the base of the stairs.\n\n\"Sarah up yet?\" Emma asked as she entered the kitchen.\n\nMike nodded his head at her door. \"Beth said she was gone when she woke up.\"\n\nEmma sighed, sounding more than a little like her brother. She glanced over at Mike. \"I'm sure she'll be fine.\"\n\nHe nodded. \"She's just pissed.\"\n\nDanni rolled her eyes. \"You were going to spend just as much time with her as you were with the rest of us.\"\n\n\"She's mad at me because she was worried about me, and I made her worry for no reason,\" Mike said.\n\n\"Yeah, but believe me, that's not the only reason.\"\n\n\"Why else would she be mad?\" Mike asked.\n\n\"Yes, do tell,\" said a voice behind them. Standing at the front door was Sarah, having quietly entered while her siblings were talking. She looked like she'd been out for a walk, by the way she was dressed.\n\nMike turned and could feel the palpable tension in the room. \"Sarah, lets go outside and talk please.\"\n\n\"No. I want to hear the other reason why I'm so pissed.\"\n\n\"Like you don't know,\" Danni said.\n\n\"Both of you knock it off,\" Emma said.\n\n\"Come on, let me hear it!\" Sarah said loudly.\n\nDanni shook her head and rolled her eyes.\n\n\"Danni, Sarah, let's just\u2014\" Mike started.\n\n\"You just want him all for yourself,\" Danni said quietly, her words cutting through the air.\n\n\"There's the old Danni we all know and love!\" Sarah yelled. \"Go ahead! Let me have it!\"\n\n\"Even before his accident, you would get all pissed when he didn't spend any time with you. How many times did we hear about, 'I wish Mike would visit my room!'\" Danni yelled mockingly.\n\n\"This from the one that gets to spend every night with him?\" Sarah yelled.\n\n\"Don't even go there,\" Danni spat back.\n\n\"It's true, isn't it!\"\n\n\"Fuck you, Sarah,\" Danni said, sounding just like her old self.\n\nSarah came forward quickly and raised her hand to slap her sister, but decided against it and stopped the swing, flipping her off instead. Then she turned and headed to her room.\n\n\"Run away again,\" Danni yelled.\n\n\"You're all so spoiled and ungrateful. I didn't ask for any of this!\" Sarah yelled, tears rimming her eyes.\n\n\"Sarah... don't,\" Emma called after her.\n\n\"Do you think I wanted to take care of four kids when I was seventeen? SEVENTEEN!\" she yelled, stopping and turning at the edge of the kitchen. \"I gave up everything for you and I never ask anything for myself. NOTHING! All I ever wanted was for y'all to be happy. I wish like hell that mom and dad were still here so that I didn't have to deal with all this bullshit. I'm almost sorry that I started all of this... this stuff with our brother.\"\n\nMike had had enough. He sighed and turned to head upstairs, reappearing a few seconds later with his shoes on and keys in his hand. Danni and Sarah were still having at one another.\n\n\"Mike, where are you going?\" Emma asked, stopping the argument.\n\n\"OUT,\" he yelled. \"I'm tired of being the focus of conflict in this house.\" He turned and silently walked out the front door, slamming it behind him.\n\n*****\n\n\"Are you two happy now?\" Beth asked.\n\n\"Stay out of this, Beth,\" Sarah yelled.\n\n\"No one asked you to take care of everything in this house, Sarah, so don't complain when you take it upon yourself to do it.\"\n\n\"Who else would do it, then?\" Sarah spat back.\n\n\"It would get done,\" Danni answered, having no better answer.\n\nSarah rolled her eyes.\n\n\"Mike just wanted time alone with all of us, to make sure that we each knew how much he cared,\" Emma said, trying to calm Sarah down. She knew that the argument had blossomed into more than just Mike's memory, loss however.\n\n\"So he told all of you before he told me,\" Sarah said acridly. \"I guess I should have expected that.\"\n\n\"Oh, get over yourself. We all have to share him, what makes you so fucking special?\" Danni yelled.\n\n\"I never said I was special, or that I deserved him more. It hurts that he told all of you before telling me. He could have let me know he was okay! I'm the one that takes care of you guys. I'm the one that has to worry about everything!\"\n\nDanni rolled her eyes.\n\n\"Dammit, fuck you Danni!\" Sarah yelled, crying again. She turned and headed back to her room.\n\n\"What the hell's gotten into you, Danni?\" Beth asked, turning and following Emma upstairs.\n\n*****\n\nMike hopped in his truck and started it, pulling out of the driveway and turning on the radio. He drove aimlessly, no particular destination in mind.\n\n\"Bitches, man, am I right?\"\n\n'Shut up,' he thought.\n\n\"That was a pretty serious fight.\"\n\n'I've seen worse. Danni and Sarah can really get scary when they go at it. You should've seen them when Danni went to parties when Sarah told her not to.'\n\n\"So why did you leave if you've seen this before?\"\n\n'I caused this.'\n\n\"So are you going somewhere in particular?\"\n\n'No.'\n\n\"Okay...\"\n\n\"FUCK!\" Mike yelled loudly.\n\n\"Just take it easy, man.\"\n\nMike breathed in deeply and then let it out in a long, tired sigh. He drove around aimlessly for awhile, a few hours passed. \"I need someone to talk to,\" he said eventually.\n\n\"You can always talk to me man.\"\n\n'No offense, but I need someone that isn't in my head,' he thought.\n\nThe voice seemed to take that in stride and fell silent.\n\nA sudden idea struck.\n\n\n\n******\n\nEmily sat in one of her dad's oversized shirts, painting her toenails when her phone buzzed. She set the brush down and peered down at the small device. It was Mike.\n\nShe smiled as she replied to him, and then stood to get dressed.\n\nTwenty minutes later, he was sitting in an easy chair in her living room, looking tired and more than a little irritated.\n\n\"So what's the matter?\" she asked.\n\n\"Is your dad here?\" he asked, ignoring her question.\n\nShe shook her head. \"He's still at work.\"\n\nMike nodded and seemed to relax. \"I just wanna talk about personal stuff.\"\n\nShe smiled at him and nodded. \"I'm here for whatever you need.\"\n\n\"HELL YEAH!\"\n\n'Not what she meant,' he thought.\n\n\"Danni was in a car wreck last night,\" he started.\n\n\"OH MY GOD!\" Emily said, holding her hands to her face in shock.\n\nMike raised a hand to calm her. \"She's okay, mostly. She got a cut on her cheek and has a broken leg, but other than that, she seems to be okay.\"\n\nEmily still had her hands up to her face. \"Oh my god! What happened?\"\n\n\"Well, it was that same guy that's been pulling shit for the past couple of months.\"\n\n\"Oh no!\" Emily said.\n\n\"According to the police, he tried to ram her off an overpass and when she slammed on the brakes, he flew over the railing and hit the road below. He died on impact.\"\n\n\"Oh my god!\" Emily repeated. She tended to have a hard time moving past her initial shock when things like this happened. Eventually, Mike got her calmed down and they moved past the particulars of the accident.\n\n\"Well, just tell her that if she needs anything that I'll be happy to help.\"\n\n\"I will,\" Mike said, and fell silent.\n\nEmily felt the air between them get uncomfortable.\n\n\"What?\" she asked.\n\n\"That's not really why I came over.\"\n\n\"Oh,\" she said. \"Well, what's up?\"\n\nMike shifted nervously in his chair as she stood.\n\n\"Can I get you some tea?\"\n\n\"Thanks,\" he said, nodding.\n\nShe headed to the cabinet and got a glass down, filled it with ice and poured some sweet tea for him.\n\nHe fidgeted with the glass, obviously not wanting to broach the subject.\n\n\"Mike, you can tell me anything,\" she said. \"Remember, I've told you about tons of sex that I've had with men, women, and maybe a few others. You can't shock me.\"\n\n\"I'm just not used to talking about this,\" he said.\n\n\"Well,\" she said, thinking. \"Just start wherever you feel comfortable.\"\n\nHe was silent for several long moments. Finally he cleared his throat and looked up at her.\n\n\"So you know what's been going on with my sisters and me?\"\n\nShe smiled, blushing a little. She cleared her throat. \"I figured it was about this.\"\n\nMike blushed then. \"I uh... I've... well... fucked up.\"\n\n\"Oh my god!\" Emily exclaimed. \"Which one is it? Emma?\"\n\n\"What?\" he asked, genuinely confused.\n\n\"Pregnant! Which one?\"\n\n\"Oh god,\" Mike said, shaking his head. \"No, no, no! None of them are pregnant, as far as I know.\" He shook his head repeatedly.\n\n\"Oh. Sorry.\"\n\n\"No, it's not that, thank God.\"\n\n\"Sorry,\" she said again.\n\nHe laughed nervously.\n\n\"Dude, that's not cool.\"\n\nHe ran a hand through his hair before speaking.\n\n\"When you and I went out, I still couldn't remember anything from the past year. I kept having headaches that night, but I couldn't remember anything. When we were standing out in front of your house and I kissed you, however, it all came flooding back.\" He took a long swig of his tea then before continuing.\n\n\"After I went home, I decided to tell Danni, but none of my other sisters.\"\n\nEmily looked at him oddly. \"Okay...\" she said. \"Can I ask a few questions first?\"\n\nMike nodded.\n\n\"So they each know that you're sleeping with the other sisters?\" He nodded. \"They share you equally, or is there like a schedule?\"\n\nMike chuckled, not realizing how silly it all sounded. \"Well,\" he said smiling, \"I mean, I can draw you a diagram.\"\n\nShe shook her head. \"Just a rough overview is fine,\" she said, smiling.\n\n\"Well, Danni gets most of the nights. It started out as a means for her to feel protected, and then eventually it just kind of happened. Honestly, I don't really know how all of my other sisters got involved, but that's not the important part. They share me, but there aren't any set rules. I try and spend time with each of them, but there's only so much time in the day.\"\n\n\"So they're okay with sharing you then?\"\n\n\"For the most part, I guess,\" he said. \"I mean, I guess it's kind of like an open relationship. Or maybe like a plural marriage, except we aren't married. Hell, I don't know what the hell to call it,\" he said finally, giving up.\n\n\"So you didn't tell anyone but Danni, continue,\" she said.\n\n\"I know how it sounds. I had good intentions,\" he said. \"Kinda. You see, I just wanted some time with each of my sisters, without them coming and jumping me.\"\n\nThe look on her face spoke volumes.\n\n\"I know, saying it out loud makes it sound absurd. The point is that I didn't tell my other sisters right off. I told Emma a day or so later, and I told Beth after that, this previous weekend at the cabin. I hadn't told Sarah about remembering until the accident. It kind of slipped out and she's furious.\"\n\n\"Understandably. I'd be mad too. Didn't your other sisters think she'd be upset?\"\n\n\"They mentioned that a time or two,\" he said, a sheepish look on his face.\n\nShe smiled at that. \"You're obviously the Alpha in those relationships,\" she said.\n\n\"How's that?\"\n\n\"Well,\" she said, \"you wear the pants with Emma, Beth and Danni. It's different, I expect, with Sarah. It probably has to do with her being the one that took care of y'all for so long.\"\n\nMike nodded. \"I hadn't thought of that.\"\n\nShe shook her head. \"Anyways, continue. I'm not wanting to get you off track.\"\n\nHe took another drink. \"Well, she slapped the shit out of me at the hospital, and then when I woke up this morning, she was gone. She got back when Danni was saying some not so nice things, about her wanting to monopolize all the time with me.\"\n\n\"Was she wrong?\"\n\nMike was quiet for a moment, thinking. \"No, but they all get that way.\"\n\nEmily rolled her eyes. \"Oh you poor guy,\" she said, her voice dripping with sarcasm.\n\nHe smiled. \"I know, I know. But I'm serious. It's not anything that's bad, but Danni gets that way too. I just don't know how to fix this situation. I'm just so pissed that I seem to keep causing all these difficult situations in my family.\"\n\n\"Maybe you shouldn't be fucking your own sisters,\" Emily said, trying to hide a grin.\n\n\"Jesus, Emily,\" Mike said.\n\n\"Well, what do you expect? If you were dating four women in real life that knew you were dating each other, how well do you expect that would go over? Women are very complex creatures, Michael.\"\n\n\"Yeah, no shit,\" he said.\n\nShe slapped him gently on the arm.\n\n\"My advice?\" she asked.\n\nHe nodded.\n\n\"Just be honest. Tell them how you feel. Talking is how problems get solved, so just tell them what you're feeling, what's bothering you. My guess is that your sisters will be able to figure out a way to get through this. Sarah's mad and she has every right to be, but she'll get over it.\"\n\n\"You think so?\"\n\nEmily nodded. \"She's a woman, but she's not insane. As long as you go back to her, I'm sure she'll be back on 'Team Mike' soon enough.\"\n\nHe laughed at that and suddenly realized how good it felt to do so. It was like all the stress over the past few days was lessened just a little bit.\n\n\"So what do you mean by 'alpha?'\"\n\nShe smiled. \"You just like hearing how awesome you are.\"\n\nHe grinned. \"Of course I do, but I'm serious.\"\n\nShe shrugged and smiled. \"Well, in the bedroom and if you guys were able to date in a public setting, you'd be the one calling the shots. For instance, when you're having sex with them, are you the one putting them where you want them?\"\n\nMike thought for a moment. \"Yeah, for the most part. Danni and Emma are definitely like that, but Beth gets a little... rambunctious and takes over sometimes. Sarah though, she usually does take the lead. I always assumed she was just more experienced and knew what she was doing more than I did.\"\n\nEmily laughed at that. \"Don't mention that she's more experienced if you wanna live through the night.\"\n\nHe laughed at her. \"No shit.\"\n\n\"That's what I mean by Alpha. You're then one in charge. If you say do this, they do it. For me, it was different. Sean was only slightly more experienced than I was, so neither of us were at the 'Alpha' stage when we got together. When he started to share me with girls and other guys, some of them were Alphas, but I got to where I knew what I liked, and began to take over in the bedroom.\"\n\nMike nodded. \"I wouldn't have pictured you as the 'Alpha,' he said.\n\nEmily smiled. \"Sweet little ol' Christian Emily?\" she said, crossing her eyes, drawing a chuckle from him.\n\nHe stood then and nodded. \"I knew talking to you would be a good idea.\"\n\nShe smiled and came around the counter, opening her arms up and wrapping him in a hug. It felt really good.\n\nThey separated and she walked him to the door.\n\n\"Thanks again, Emily,\" he said as she shut the door.\n\n*****\n\nIt was late when Mike made it home. He didn't see Sarah, but her car was in the driveway, so that at least made him feel a little better. He headed to the kitchen and made himself a sandwich, then headed to the living room to watch some SportsCenter. After a few minutes, he'd wolfed his snack down and clicked the TV off. Heading upstairs, he entered his room to find Danni sitting on the edge of his bed and trying to work a pair of pajama bottoms over the cast. Smiling, he moved to help her.\n\n\"I've got it,\" she said.\n\nHe raised his hands and took his shirt off, tossing it at the hamper, followed by his pants and socks. He reached into his dresser for a fresh pair of boxer briefs and slipped them on after he'd shucked his current pair. Turning, he waited patiently for Danni to finish and then slid in beside her. He wrapped his arms around her and inhaled her sweet scent deeply.\n\nA long moment of silence passed and finally she turned. \"Are you mad at me?\"\n\nMike pulled back a little bit. \"No, why would I be?\"\n\nShe shrugged. \"Because I'm a bitch.\"\n\nHe shook his head. \"Why would you say that?\"\n\nShe sighed, sinking back into him. \"I just can't believe all the things I was saying to Sarah. It's like it was the old me, all over again. I don't want to go back to being that person.\"\n\nMike smiled. \"I don't know, I think our sex would be pretty athletic, you throwing books and shit at me while I was fucking you.\"\n\nShe pushed back into him forcefully. \"I mean it. I don't like the old me. I don't want to be that girl again.\"\n\nMike chuckled. \"I don't think that's gonna happen, goofy.\"\n\n\"Were you listening to the argument?\"\n\n\"You were just upset, Danni. Probably just a lot of pent up fear and frustration, anger from the accident. You aren't going to be reverting back to 'Old Danni.'\n\n\"How can you be so sure?\"\n\n\"Well, what's different between before and now?\"\n\nThere was silence while she thought. \"Well, besides us, nothing, really,\" she said eventually.\n\n\"Exactly. You're a different person when we're together.\"\n\n\"So what you're saying is, because I'm fucking you, I'm nicer?\"\n\nHe grinned. \"Yep, I've got a magic dick.\"\n\n\"Abracadabra, Bitch.\"\n\nShe erupted into laughter.\n\n\"And, since I'm not planning on losing my magic dick anytime soon, I think you'll be nice from now on.\"\n\nShe laughed even harder, clutching at her stomach. \"Ow, ow, ow,\" she said eventually. \"Don't make me laugh so hard, it makes my leg hurt.\"\n\nHe smiled and nuzzled into her.\n\n\"So do you wanna try and fool around?\" she asked, pressing her buttocks into him and wiggling around.\n\n\"SAY YES, SAY YES GODDAMMIT!\"\n\nMike squeezed her up against him. \"I think we'd better give it a day or so. I don't want to break your other leg,\" he said.\n\nShe giggled again. \"I don't know, if you were fucking me THAT hard, it'd probably be worth it.\"\n\nHe grinned. \"Let's just go to sleep tonight, we can try and fool around tomorrow.\"\n\n\"Okay, my love,\" she said, scooting back into him further. Sleep took them both quickly.\n\n*****\n\nMike rubbed his eyes, the dawn just peeking in his window. He rolled out of bed and headed downstairs after he pissed. Sarah's door was open, but she wasn't there. He headed to the kitchen window and peered out. Her car was gone. He sighed and grabbed a bowl of cereal. A little later, Danni thumped down the stairs. He kissed her on the forehead and headed back up to change for class.",
        "Emma came down and grabbed a granola bar as he re-emerged and they both headed to his truck. Class passed relatively uneventfully, but Sarah was still not there when they returned.\n\nHe sighed and went upstairs to study, falling asleep at his desk. He was startled awake by the sound of arguing downstairs.\n\n\"Hurry the fuck up and get this shit fixed so we can have some fucky-fucky.\"\n\nMike rolled his eyes and ignored him.\n\nA few minutes later, he came downstairs and saw Emma sitting in a chair, her head in her hands. She stood and came over to Mike when she saw him standing in the doorway.\n\n\"Hey,\" she said.\n\n\"Hey. They still at it?\"\n\nShe shook her head. \"They just started up again. Sarah started doing a load of Danni's laundry and that set them both off again.\"\n\n\"Well then fucking don't do it!\" Danni was yelling when Mike came back in the room.\n\n\"Guys,\" he said, \"GUYS,\" louder this time. Neither interjection even fazed the girls.\n\n\"SHUT THE FUCK UP!\" he yelled. They both turned and looked at him, surprised.\n\n\"Sit down, both of you,\" Mike said, cutting through the stunned silence. He pointed to the chairs at either end of the table. They reluctantly agreed, both glaring at the other.\n\n\"This is all my fault, all of it,\" he began. \"None of this would have happened if it hadn't been for me. I should have told you the second that my memory came back,\" he said, looking directly at Sarah.\n\n\"It was thoughtless and insensitive of me and you deserve better, especially since I'm your brother, and not just your boyfriend.\"\n\nThere was a long silence.\n\n\"I've got a voice in my head,\" Mike said.\n\n\"Dude! What the fuck, man!\"\n\n\"I'm not talking like a subconscious or anything, but like a voice I can hear, but I'm not crazy. He's the reason that we all started messing around. He doesn't command me to do things, or want me to go collect heads or feed a cat to an ATM or anything. Well, he sometimes tells me to do things, but it's usually something like, 'Throw her to the floor and fuck her.'\"\n\nHe sighed and leaned back against the cabinets.\n\n\"I was jerking off in the shower one morning when Emma heard me say, 'Oh Danni.' The voice is the reason that came out,\" he said, looking over at Emma.\n\n\"I was the one thinking about my sister, but the voice is the reason her name came to my lips. Later that day, I'd been watching you three by the pool, sunbathing. I'd been mowing that day, and after I hosed off, I went inside to... jerk off again, because again, you three were sunbathing.\" The three sisters he was indicating smiled at that. \"Being soaked to the bone, Sarah made me undress by the door and I... hit her in the face with my hard-on. On accident.\"\n\nSarah giggled at that, remembering the incident. Mike continued, \"After that, I ran upstairs and she came to check on me and caught me jerking off. One thing led to another and... that's how all this started...\" he trailed off.\n\nHe turned and looked at Sarah. \"Not to contradict you, but you said yesterday that you didn't want any of this to happen. None of this would have happened if I didn't have this voice, be that a good thing or a bad thing\u2014though it's a good thing in my opinion.\"\n\n\"I don't mean this the way it sounds, but if Mom and Dad hadn't passed away, I wouldn't have this voice in my head. I wouldn't be involved with my four sisters. I love you four, and I love being with you.\n\n\"Anyone else would call me a greedy motherfucker for having four girlfriends, but I don't think I could imagine life being any different, now that I have all of you. You're all so alike, but so different.\n\n\"Danni, you and I have something so special, I know that whatever else happens, you and I are solid, and will be together forever. When we make love, it's like we cease being two different people and are melded into one being. But that doesn't mean I don't feel exactly the same way when I'm with each of you. I mean, sure, you're each different in bed: Beth, you're so wild and possessed, it's hard for me to be in control. Emma, you're the complete opposite, you love being dominated and I know that I could tell you to do anything and you'd do it. I'm not worried about my future, because I know that I'll have each of my sisters, my lovers, my girlfriends... in it.\"\n\nHe turned to Sarah and took her hands in his own.\n\n\"I'm so, so sorry that I hurt you. I should have told you all the second that I got my memory back. I really just wanted to spend time with each of you, to enjoy each of your little quirks and mannerisms, how each of you behave in bed with me. I love you all, so much.\"\n\nAll four of them were looking at him as if he were made out of kittens and chocolate. He let go of Sarah's hands and without another word, disappeared upstairs.\n\nThe four siblings left downstairs stared at each other in silence for a few moments.\n\n*****\n\n\"I really hope that worked, because it's been like, a hundred hours since you last had sex, man. That's unacceptable!\"\n\n'It hasn't been that long. I really need to figure out how to mute you,' Mike thought.\n\n\"Yeah, yeah, then you'd forget you had me on mute and get all freaked out when you couldn't hear me anymore.\"\n\nMike closed his door behind him and fell into his bed. As he closed his eyes to take a nap, sleep overcame him quickly.\n\nHe awoke to hear soft moans coming from Beth's room, and eased over. Quietly clicking the door open, he saw his twin's brown hair between Beth's legs, her own blonde hair between Emma's. He smiled and closed to door quietly, leaving his sisters to their fun. Turning, he headed downstairs and saw Sarah sitting in the kitchen, talking quietly with Danni.\n\nMike smiled at both of them.\n\n\"Hey,\" Danni said.\n\nHe leaned over and kissed them both on the head. \"So have we made amends?\"\n\nSarah reached over and grabbed Danni's hand. \"I think so,\" she said.\n\n\"I apologized for almost reverting back to the old Danni, and for saying such hurtful things.\"\n\n\"And I apologized for saying the things I said. The truth is, she was right, we were all trying to monopolize your time, because we all love you. For this to work though, we all have to share, and we have to be open and honest about our feelings.\"\n\nMike nodded. \"I agree.\"\n\n\"Great, now shut up and fucky-fucky,\" the voice said.\n\n\"So, a voice in your head, huh?\" Sarah asked, an amused smirk on her face.\n\nHe nodded.\n\n\"You were jerking off to me?\" Danni asked, amused.\n\n\"Yeah, yeah, get it out of your system,\" he said.\n\nBoth of them giggled briefly, but didn't torture him further.\n\nThey talked quietly for a few hours, before Beth appeared and began to work on supper, after which they all five sat down for a night of relaxation and TV.\n\n\"So are you going to be able to have sex with that cast on?\" Beth asked.\n\n\"I don't know, we haven't tried,\" Danni answered.\n\nMike laughed, causing her to turn and look at him.\n\n\"What?\"\n\n\"The voice asked the same question,\" he said, smiling.\n\nAfter watching some reality show, Mike helped Danni hobble upstairs. They tried to fool around briefly, but Danni was in too much pain. They settled for falling asleep next to each other.\n\nAs the next day dawned, Mike sat up and headed downstairs. He found Sarah at the kitchen sink, washing the previous nights dishes.\n\nHe came up behind her and kissed her tenderly on the neck.\n\n\"You know, I remember a conversation that we had about how you liked the way I washed dishes.\"\n\nMike smiled, thinking back to the day that they'd first fooled around. \"My first set of boobs,\" he said.\n\nShe giggled. \"You seemed so enraptured by them, it was so adorable.\"\n\nHe laughed at that. \"Well can you blame me? These things are perfect.\" He reached up and pulled her apron out of the way, while both of her hands still scrubbed at a plate. She sighed as his fingertips found her nipples.\n\n\"You said you liked the way they swayed when I moved,\" she said as she turned around and pushed him back, leaning back against the sink for a moment. She began to wiggle her chest back and forth, sending both of her boobs swaying back and forth.\n\n\"Holy fuck!\"\n\nMike stared, his jaw open slightly as Sarah's knockers bounced left and right.\n\nShe giggled and returned to her sink full of dishes.\n\n\"No no no,\" Mike said, turning her back around and bringing her face to his. \"You don't get to do that and just turn back around.\"\n\nShe grinned and kissed him. \"I'm glad you're okay,\" she said, as she broke the kiss a second later.\n\n\"I should have told you,\" he said.\n\nShe smiled. \"I'm sure you can make it up to me,\" she said.\n\nHe grinned and began to kiss her neck, but she slapped him on the shoulder. \"Not right now, goofy. Your sisters are going to be down any minute.\"\n\nMike sighed and turned heading for the stairs to change. He stopped though. 'Fuck that noise,' he thought, and turned back around.\n\nShe felt his arms encircle her again, his hands going immediately for her breasts, his lips finding her neck. \"God,\" she whispered. \"You'd better stop!\" she warned.\n\n\"I don't care if they see us, I'm going to take care of you, right here, right now.\"\n\nShe gasped as he pulled her shirt up, apron and all, her breasts spilling out as he turned her around and began to suck on a nipple. She moaned softly as his strong hands grasped her, moving her where he wanted. A hand moved down between her legs, rubbing against her pussy.\n\nShe moaned louder as he began to fumble with the button on her shorts, finally reaching down herself and practically ripping her shorts off.\n\nHe kissed her nipple one more time and pushed her towards the kitchen table, and then forwards, causing her to place both of her hands on the table, her shorts hanging around one of her feet.\n\nHe pulled his own boxers down and placed both hands on either side of her hips, the mushroom tip brushing against her soft pussy lips. She groaned audibly, feeling him rub the tip against her slit.\n\n\"God,\" she moaned. \"They're going to see us.\"\n\nHe smiled. \"I hope so,\" he said. \"I'm going to make you cum really hard.\"\n\nShe swore as she felt him push gently inside. \"I'll take it slow for a few seconds, but only a few,\" he said quietly, grabbing a handful of her hair.\n\nShe was muttering to her self over and over, \"Fuck, fuck, fuck, fuck.\"\n\nMike grinned and slid in deeper, as he felt the lubrication spreading around his cock and her pussy. He smiled down as his sister looked back at him wantonly. \"Please,\" she groaned.\n\nHe slid all the way in, and then pulled back out, repeating the move a few more times to ensure that they were both properly lubricated. She was biting her lip in anticipation. Finally, he began to thrust into her more methodically, pulling on her hair a little. It was something that he'd been wanting to try with her, to see if she liked it.\n\nShe groaned as he thrust into her deeply, repeatedly, his thick cock spearing into her. She flexed on him, sending a ripple of pleasure coursing through him. \"Fuck,\" he said. \"I forgot how good you feel.\"\n\nShe looked back at him and smiled, her face full of passion and love. \"Fuck me harder, little brother,\" she said.\n\nThere was movement at the stairs, and Emma appeared, peering around the corner.\n\n\"Oh fuck,\" Sarah said, suddenly a little embarrassed. Mike wouldn't have any of it though, and pushed her back to the table, continuing to thrust into her, his hands wound up into her hair, pulling hard on it.\n\nShe moaned and closed her eyes, her elbows on the table, her ass slapping against her brother's hips.\n\n\"Come on in,\" he said, looking back at his twin, who was still watching from the stair way. She giggled and came in, grabbing a granola bar from the pantry and leaning against the doorway. She smiled and watched.\n\nSarah began to come then, muttering \"fuck\" over and over, her pussy convulsing on his cock. Mike didn't slow his thrusts, and continued to piston into her and pull her hair. The act was drawing her head back and seemed to make her even more excited. \"Fuck,\" she muttered.\n\nBeth and Danni appeared then, both of them covering their mouths in amusement. \"Harder,\" Emma said from the laundry room door.\n\n\"Fuck!\" Sarah moaned loudly, Mike's cock pounding into her. Both Danni and Beth came in the kitchen tentatively, Beth heading for the fridge to make a smoothie for both of them.\n\n\"Can I make one for anyone else? Danni?\" she asked, turning.\n\nDanni was watching, an amused grin on her face as she watched her brother fucking her older sister in their kitchen. Mike had a huge grin on his face, but didn't slow, his cock hammering into Sarah again and again.\n\n\"Sure,\" Danni said eventually, thoroughly enjoying the sight. Mike pulled hard on Sarah's hair, his thighs slapping against her ass rhythmically. She began to come again, moaning softly and muttering \"Fuck,\" over and over again.\n\n\"Oh yes,\" Sarah moaned, the feeling of her brother's thick cock overwhelming her senses. He was so relentless, so forceful.\n\n\"Do you want a smoothie?\" Beth asked, leaning down and looking at Sarah, just a few inches away.\n\n\"Fuck, yes,\" she moaned, his cock slamming into her again.\n\nEmma, Beth, and Danni all laughed at that, Sarah grinning herself. \"Fuck,\" she moaned again. Mike smiled and continued to thrust into her, her pussy practically choking his cock. He began to come then, and Sarah reached back, pulling him against her tightly as she felt him arcing into her.\n\n\"Fuck,\" he moaned, his hips finally ceasing their thrusting.\n\nShe collapsed on the table, a smile on her face. He smiled and winked at his other sisters, and then headed upstairs, heading for the shower. He washed his hair and rinsed off, stepping out only to be grabbed again. Beth stood there, a telltale look on her face.\n\n\"Did your 'voice' take over again?\"\n\nShe nodded, biting her lip and grinning. \"You're going to fuck me, right here, up against this door,\" she said, her blonde hair falling around her shoulders.\n\nHe smiled and looked down at his flaccid cock.\n\n\"We can fix that,\" she said, pulling off the nightgown she was wearing. He smiled and looked her over again.\n\n'Fuck, she is pure sex,' he thought. He peered down at her perfect breasts and watched as she began to rub her hands over her body. She moaned softly as she pinched her nipples, drawing them out and making them erect, causing them to stand out atop her breasts. Her hand wound slowly down her body, rubbing softly until she found her pussy, and began to rub gently, her eyes focused on him.\n\nSure enough, he felt his cock began to stir and it slowly began to bob upwards as he watched her play with herself. She took one breast in her hand and lifted it up, pulling the nipple into her own mouth and sucking on it.\n\n\"Fuck, dude, this one is talented! New favorite!\"\n\nMike grinned and moaned. \"Nice,\" he whispered, glancing back down as she began to rub her pussy faster and faster. She pulled her hand up then and and pushed a few fingers into her mouth, then pushed them into her pussy, her mouth open and eyes on his.\n\n\"Fuck,\" she moaned. \"That was so hot, watching you fuck Sarah in the kitchen,\" she groaned, her fingers pushing in and out. \"It was like you two didn't care who saw you. So fucking hot,\" she said.\n\nMike's cock was an iron staff now, and he came quickly towards her.\n\n\"What do you want?\" he asked.\n\nShe grinned and lowered her gaze at him. \"I want you to nail me to the fucking wall,\" she replied.\n\nHe smiled as she came towards him. Her lifted her easily and thrust deeply into her, leaning up against the bathroom door. She kissed him deeply as his thick cock pushed into her, her breasts bouncing in his face. He took one of her nipples in his mouth and sucked while she moaned on top of him. He felt her begin to come very quickly, and was surprised at the intensity of the orgasm. She lost her normal composure and looked like she was almost in pain, her face contorted as his cock pushed up into her again, her mouth ajar and eyes rolling back in her head. \"Goddammit,\" she muttered, her perfect tits bouncing up and down, her nipples as hard as steel. He felt her pussy convulse one more time and then she slowed her gyration on him. He eased back, leaning against the opposite wall. She wrapped her hands around his shoulders again and began to pull herself up, lifting her hips and slowly sliding back down. \"Ohhhh fuck,\" she moaned, the sensation of her fucking him while they were standing feeling very good.\n\nShe pulled again, sliding off of him, and then relaxed a little. He smiled and closed his eyes, obviously enjoying the feeling. She pulled against him again, her eyes fluttering as another orgasm crept up on her, the first fingers of pleasure just now reaching her pussy. She began to clench down on his dick as she lifted herself off of him, the sensation finally being too much, and she crashed down into another orgasm. Unable to pull herself up in her extreme pleasure, she gyrated awkwardly for a few seconds before he began to thrust again. Finally, after a few long pleasure filled moments, she slid gently to the floor.\n\n\"Goddamn you are good,\" she said, fumbling for the door handle. Mike smiled and watched her go. He grabbed a towel and wrapped it around himself. Peering into Emma's room, he saw her just as she was pulling the shirt she had slept in over her head.\n\n\"Stop,\" he said.\n\nShe turned and smiled, seeing the bulge tenting the towel around his waist.\n\n\"You're on a roll today,\" she said, turning away from him. \"Where does Master want me?\"\n\nHe smiled. \"On your back, on the bed.\"\n\nShe grinned and lay down, spreading her legs for him.\n\nHe came forwards then and ran his tongue up her pussy a few times.\n\n\"Oh you don't have to get me wet, your display downstairs and the sounds coming from the bathroom were enough to do that.\"\n\nHe smiled and grabbed his dick, standing and climbing on to her bed and running the tip along her slit briefly.\n\n\"I love you, Mike,\" she said, pulling him close and kissing him. He returned the kiss with fervor, and she felt his cock slide deeply into her.\n\n\"God,\" she said, the third sister to do so that morning, and for the same reason. His cock felt huge inside her, like it was touching every single part of her pussy. Every minute section was being rubbed against, causing arcs of pure pleasure to course through her body.\n\nShe sighed in happiness as he began to thrust deeply into her, thoroughly enjoying the feeling of her brother inside her. She kissed him deeply again and pulled down on his buttocks, pushing him deeply into her.\n\n\"I love fucking my own brother,\" she said to no one in particular. The thought made her feel all naughty inside, but also pushed her over the edge, her orgasm sneaking up on her and leaving her quivering beneath him, his muscular body still pushing his cock into her.\n\nHe began to come then, and she kissed him again, and decided that she really enjoyed the feeling of him coming inside her pussy. It felt like he was filling her up. It must be some chemical reaction or nature or something. She felt like it was the right way to have sex, though, him coming inside her.\n\nFinally spent, he climbed off of her and kissed her a final time.\n\n\"I love you too,\" he said, turning and heading for her door.\n\nHe stumbled to his bedroom and sat on the bed, trying to get control of all of his faculties again.\n\n\"Dude, I have no words. You've outdone yourself.\"\n\n*****\n\nTo be concluded..."
    ],
    "authorname": "Mentalcase",
    "tags": [
        "sister",
        "brother",
        "incest",
        "brother/sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/just-the-six-of-us-ch-29"
}