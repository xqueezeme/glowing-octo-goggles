{
    "title": "Halftime",
    "pages": [
        "Those of you that follow me know the game, everybody's 18, there's going to be romance and a happy ending and some good sex, if you're new to my stuff, well thanks for giving me a chance, the above still applies.\n\nI hope you enjoy the story, and please remember to leave me a comment when you're finished reading.\n\nEnjoy\n\n***\n\nHalftime was my home away from home, an All-American sports bar with cold beer, tons of T.V.'s and waitresses in short shorts and halter tops, I had found it my freshman year of college when me and the five guys I shared a house with wanted to watch the game, but it wasn't on our cable package. The food had been better than I expected, and the beer was just as cold as advertised and we had won the game, so a new tradition began.\n\nSaturday, game day, you would find me, I'm Rick, Steve, Roger, Dave, Eldridge, and Benny in our jerseys, at our lucky table watching the game, flirting with our waitress, eating wings, and drinking beer. Sometimes we won and sometimes we lost but it was tradition, so we didn't mess with it.\n\nThat had been five years ago, we had all graduated and most of my old roommates had moved off, on to better things. I had stayed here, gotten a job as a web content developer, I wrote and edited stuff for corporate websites that my company hosted, and hung out at Halftime.\n\nI knew most of the waitresses by name and had become kind of an unofficial mascot of sorts, they all hung out at my table when it was slow or if they just wanted to chat for a minute. My table was a safe space, I had officially been deemed harmless and was in the biggest friend zone on the planet, surrounded by gorgeous scantily clad women that found nothing wrong with talking about the intimate details of the scumbag they had hooked up with last night in front of Rick.\n\nA lot of it was my fault because I watched people, especially my old roommates, and noticed how they treated the girls, I refused to be one of those guys, openly ogling the waitresses and making lewd comments, 'accidentally' putting a hand where it didn't belong and then laughing it off, I was courteous and friendly. My roommates gave me a hard time, but I knew the girls appreciated someone treating them like a person instead of a piece of meat, it just didn't get me any dates.\n\nOf course, It didn't help that on the machismo scale, I had a negative score. Don't get me wrong, I got compliments on my looks from the girls all the time, mostly how they were jealous of my eye lashes or my big blue eyes, my long shapely legs, my cute butt, or my shoulder length blonde hair. The running joke was that I could easily get a job working here as a 'Halftime Girl'.\n\nMy waitress was Jenn, she knew how I liked my wings, what I wanted on my burger, how many Sweet-and-low packets to bring for my tea, and what beer I drank, never forgetting to bring the bottle cap so we could do the puzzle underneath, she had waited on me and the guys the first time we had come in and sitting in her section was a tradition too. She had also become a good friend, possibly my best friend.\n\n\"You got big plans for Thanksgiving?\" Jenn brought me another beer.\n\n\"Nope, just gonna hang out, probably come in here and watch the games, you know me,\" I laughed.\n\n\"What about your family, aren't they getting together?\"\n\n\"Mom and dad are going on a cruise, nobody else wants to host, so we're all on our own.\"\n\n\"Then come with me to my family, it will be great, it's huge, one more won't matter, I promise.\"\n\n\"What about Mike?\"\n\n\"Yeah, he'll be there too, you know he likes you and besides, he knows your safe,\" ouch, she could have used any other word.\n\n\"Sure, why not, beats being alone, especially if the best waitress in the place isn't going to be here to make sure I get my bottle caps,\" we laughed.\n\nJenn wasn't kidding, there had to be a hundred people at her grandparent's house for Thanksgiving, her aunts all brought something, and her grandmother cooked enough for everyone, I had never seen so much food. We ate until we were stuffed, went back for seconds, and then had dessert, everyone pitching in to help clean up before the games started. The guys went into the den to watch football and the girls went to the living room to gossip and talk.\n\n\"Rick, right?\" Papa Joe, Jenn's grandfather, called my name.\n\n\"Yes, sir?\"\n\n\"Can you get me another winter wheat, the kegs are labeled,\" he handed me his cup.\n\n\"Happy to,\" I got up and headed out to the breezeway where the beer kegs were. Papa Joe was a home brewer and I had to admit his beer was pretty good, unfortunately, the winter wheat was too good, the keg was empty.\n\nI let him know and he directed me to the basement to grab another one, he had planned for exactly this event. His brewing setup was impressive, it looked to me like he had two or three batches working all in different phases of the process. I found the five-gallon keg he wanted and threw it over my shoulder, losing my balance just enough to bump one of the tables and knock something loose, creating some type of comic chain reaction that ended up with me covered from head to foot in the grossest mess I could imagine.\n\nTo my credit, I made it back upstairs with the keg Papa Joe wanted only to hand it off to one of Jenn's uncles as Grandma Emma led me to the bathroom to get cleaned up. I must have looked like a drowned rat, nobody laughed, but there were plenty of snickers.\n\nJenn stuck her head in the bathroom while I showered letting me know she had found some things I could wear home and informing me my beer drenched clothes had already been put in Mike's car. We could leave as soon as I was cleaned up. I recognized the bag as soon as I saw it, it was Jenn's work bag, I had seen it time and time again when I had been at Halftime when she either got to work or changed after the end of her shift.\n\nI grabbed my phone from the countertop, \"Really???\" I hit enter.\n\n\"Sorry, no one else here is even close to your size, that's why I said we could leave as soon as you're ready. Mike understands.\"\n\n\"K,\" I couldn't believe this, I laughed at myself in the mirror.\n\nUnzipping the bag, I perused my choices, a pair of very pink, almost fuchsia tights or a pair of her work shorts and either her work halter or a large t-shirt that matched the tights with the word PINK across the front. At the bottom of the bag were an extra pair of purple panties and a lace demi bra that matched along with a pair of sandals, my boots were full of beer.\n\n\"Suggestions?\" I hit enter.\n\n\"Shorts please, if you can get in them, those tights are new and I'm afraid you might stretch them out, sorry.\"\n\nThere was no way the shorts were going to hold everything in place, they just weren't going to do it, so I slipped the panties on. I had to adjust things a bit, so I didn't hang out of the panties, ultimately shoving my penis back between my legs and snugging the panties up tight to keep him in place.\n\nThe shorts were next. I had to give myself a bit of a wedgie to get them fastened and zipped, half of my butt cheeks were exposed, these were probably my favorite shorts that Jenn wore at work, I had to admit, her butt looked better in them than mine, but not by much.\n\nI started to pull on the t-shirt when I saw the bra laying there by itself, I couldn't explain why, but I picked it up instead, slipped it up my arms and fastened it behind my back, adjusting it so that I had a small amount of cleavage. If it hadn't been for the shorts, I would have gotten hard immediately. The t-shirt fit fine and while the sandals were maybe a half-size too small, they would work.\n\nI put my hair in a ponytail with one of the scrunchies in the bottom of the bag, zipped it closed, took a deep breath, and opened the door.\n\nThis time, they all laughed, and I had to admit, they had every reason to\n\n\"Papa Joe, you still need that beer?\" I decided to just go with it, it was very funny after all, I laughed right along with them.\n\nI gave Jenn her bag and headed out to the breezeway to get Papa Joe his beer, grabbing one for myself at the same time, we stayed until the second game was over. I caught some of Jenn's cousins and one or two of her uncles looking at my ass hanging out of Jenn's shorts, there was some light-hearted teasing, but it was all in good fun, I even played waitress a little garnering a whole quarter tip from Papa Joe, I was sternly instructed to 'not spend it all in one place.'\n\nThe ride home was uneventful, I had gotten used to the shorts and had almost forgotten I had the bra on, it just struck me as odd that Mike kept taking overt glances at me in the rearview mirror, looking away quickly when I caught him.\n\nWe were all tired when they dropped me off, so it was no surprise that I forgot the bag of beer-soaked clothes in the trunk, I had my keys wallet and phone in a small purse Grandma Emma had given me as a joke, I really liked Jenn's family. An air hug from Jenn and a knuckle bump from Mike and I climbed out of the car and headed up the stairs to my apartment.\n\nIt would be three weeks before our schedules meshed and we returned the clothes we had, I couldn't bring myself to tell Jenn I had worn hers more than just home from her grandparents' house, of course we met at Halftime. Jenn and Mike were arguing about something when I walked in the door, \"just ask, ok?\" Mike said just as I got to the table.\n\n\"Ask who what?\" I sat down and slid the bag with Jenn's clothes across the table to her, she motioned to a larger bag on the floor, I could see my boots on top of the pile.\n\n\"Mike is freaking out and wants me to ask if you will do him a favor,\" Jenn looked out of the corner of her eye at Mike.\n\n\"Sure, for you guys, anything, well almost,\" I laughed.\n\nJenn elbowed Mike in his side.\n\n\"Look, this is really awkward, but I don't know who else I can trust, Jenn can't go to my company Christmas party with me and I have to go,\" he took a deep breath,\" anyway, there's a girl from work that is going to be there and she keeps hitting on me, I'm about to get promoted and the last thing I need is some office drama, I need a blocker, someone to run interference.\"\n\n\"And exactly how can I help you with that? I'm guessing them thinking you're gay would count as drama, right? What about one of the girls from here?\"\n\n\"I was thinking about you, as, as a girl,\" his voice got slower and slower as he finished his sentence.\n\nI spit my tea all over the table, \"What???\"\n\n\"Just think about it, ok? We know you wore the panties and the bra home from Thanksgiving, so you kind of like to dress, and the way you behaved, well, you were getting a lot of looks that didn't go with you being a guy. I just thought that well, maybe it was something you liked to do, and it would be fun for you, and you know me and Jenn well enough to pretend, that's all.\"\n\n\"So, you want me to pretend to be Jenn?\"\n\n\"No, just be my date, I don't talk about my personal life at work, they just know I have a girlfriend.\"\n\n\"Jenn, you'd be ok with this?\" I couldn't believe I was even considering what he was asking.\n\n\"Rick, I have been looking for a way to dress you up since I met you,\" she laughed at me,\" I think you'd be gorgeous with a little makeup and the right outfit; you've already got everything else.\"\n\n\"And just when is this party, Christmas is next week?\"\n\n\"Saturday.\" It was Thursday.\n\nThe look on my face said everything, I clearly thought they were out of their flipping minds.\n\n\"Rick, you're my size,\" Jenn jumped in, \"I have everything, I can do your makeup and you can wear one of my dresses, probably even my shoes, You can take a sick day tomorrow and we can go to the spa to get you ready, I already have some dresses picked out, we can practice all afternoon and you can practice again Saturday before you have to go, Don't tell me you're not interested, I mean come on, you took my bra,\" she smiled at me.\n\n\"Spa, what happens there?\"\n\n\"Manicure, pedicure, style your hair a bit, and maybe a little waxing depending on where there's hair we don't want anyone to see, nothing major,\" Jenn was leaning forward practically crawling across the table toward me. Mike was just staring at me, his eyes begging, as if this were the biggest favor he could possibly ask and he knew it.\n\n\"it's that important to you guys?\"\n\n\"Rick, everything depends on this promotion, and I mean everything,\" he shot a furtive glance at Jenn, and I knew exactly what he meant.\n\n\"Ok, what time do I need to be where?\"\n\nIf it hadn't been for the three glasses of complimentary wine, I would have bolted. Jenn flat out lied to me, there was no 'maybe a little waxing', they did my face, my chest, my arms, and legs, under my arms and even gave me a fricking Brazilian and that shit hurts. The lotion they used to sooth the burn helped a lot and smelled nice too. I liked the way they styled my hair, and I couldn't stop looking at the red polish on my nails. Jen crossed the line when they snuck up on me and pierced my ears, or so I thought until I saw myself in the mirror, even without makeup, I was more than cute. Jenn's smile was the loudest 'told you so' I had ever heard.\n\nWe met Mike for lunch and the way he looked at me made me nervous, Jenn just giggled. After lunch, Jenn called an audible and booked an appointment for me with a makeup consultant who spent two hours working with me on how to apply and remove my own makeup. I started to complain but was beginning to realize that there just might be more to this than I would ever have thought.\n\nWith a whole new look and fresh makeup, we headed to Jenn's apartment to go shopping in her closet; her closet was bigger than my bedroom by the way. In all the years I had known Jenn, I had never been to her apartment, we had met for drinks, and I had hung out with her and Mike on many occasions in public, but this trip to her inner sanctum was a first.\n\nThe apartment was very nice, large, and spacious, well decorated with nice if slightly erotic art on the walls. Her bedroom was dominated by a king sized four poster bed and, as I mentioned, her closet was bigger than my bedroom, it was packed with clothes, how she found anything was beyond me.\n\nOn the bed were four matching bra and panty sets, one of them the purple I had worn before, the others were red, pink, and black, and just as lacy. She let me know we would be choosing my underwear after we found the right dress for tomorrows party.\n\n\"First, strip,\" Jenn smiled at me, \"down to your boxers,\" she added a wink. I did as I was told. She eyed me up and down, I guess trying to get an idea of what might or might not look good on my slender body. \"They did a nice job with the waxing, don't you think? It feels sexy, doesn't it?\"\n\nI nodded, agreeing that it did.\n\nJenn shook her head and walked to her dresser, rummaging through one of the drawers pulling out some simple white cotton panties, \"those boxers just ruin the mood, don't you think?\" she tossed me the panties, I slipped them on as she disappeared into the closet to start her treasure hunt, the feeling of the soft cotton snug against my crotch, holding my manhood in place sent a shiver up my spine.\n\nLooking in the mirror, something was off, I slid my hand down inside my panties and tucked myself back between my legs like I had done the first time to get the super tight shorts on, this time it wasn't out of necessity, it was because the girl looking back at me just looked wrong with a penis.\n\nJenn came out of the closet with an armful of what she called cocktail dresses, there were black ones, red ones, a green one, a couple of blue ones and a deep purple that immediately caught my eye. I knew which one I wanted immediately but decided to try them all and thoroughly enjoy the process. I started with the classics.\n\nThe little black dress I tried first was amazing, it was snug against my body and fell about halfway up my thighs, the stretchy fabric moved with me, and I felt sexier than I ever thought possible. Jen looked me over and smiled, cocked her head to the side and went back to her dresser, pulling a small box out of a drawer.\n\n\"Here, put these on, they have a sticky back, so they'll stay in place without too much help,\" the box said 'Venus, Secret Breast Enhancers,' they were small boobs, \"I wore those when I started at Halftime, before I got my own,\" Jenn blushed a little and helped me put them in place. They gave me just enough bust that the black dress filled out, the dress went into the maybe pile.\n\nThe enhancers stayed in place as I changed dresses, the next addition to the maybe pile was a red one, like the black one, it fit like a glove, I was discovering I liked showing off my lithe little body and with what looked like modest breasts, it was even more fun.\n\nThe green didn't catch my fancy and Jenn and I both agreed that even with my eyes, the blue ones just weren't the right color for the event. The purple one, though, rich velvet, longer than the others, it had a slit up to my hip to compensate, I couldn't stop touching myself, running my hands up and down the luxurious fabric, I was glad I had tucked, otherwise there would have been a problem. From Jenn's expression, I knew she agreed, we had a winner.\n\nI slipped it off and put on the purple bra and panties while Jenn put most of the dresses back in the closet, adjusting the bra as I had done before, and put the dress back on. It looked even better, the enhancers making my small boy boobs look like modest girl ones.\n\nI must have stared at the girl in the mirror for ten minutes before Jenn got my attention by dropping three pair of heels next to me, one red, one black and the third a rich purple velvet matching the dress I had chosen. I slipped them on and while just a bit tight, they fit.\n\n\"Why the red and black?\" I motioned to the other shoes she had brought me.\n\n\"To go with the dresses,\" she smiled, \"every girl just has to have at least one little black dress and one little red dress in her wardrobe, it's just the way it is.\" The red and black dresses I had liked so much were still laying on the bed where I had put them.\n\n\"Jenn, seriously?\"\n\n\"Ricki, look at yourself again and tell me you don't want this,\" I looked at the girl in the mirror one more time and just smiled, \"Besides, you've seen my closet, I'll never miss them, and you're worth it,\" she smiled at me, I didn't even realize she had feminized my name.\n\nWe spent the next few hours working on teaching me how to walk and act like a girl. Each time I looked in the mirror, it got easier and easier until she started laughing, telling me to tone it down a little so I didn't get Mike too excited.\n\nShe found a bag for my underwear and my shoes and a garment bag for the dresses, I swear her closet was like a department store. I had put the simple white panties back on without even thinking about it, when Jenn saw me, she grinned and went back into her closet coming back with some opaque leggings, a sweater dress and a pair of riding boots with four-inch heels, my jeans, t-shirt, and sneakers went into the bag with my shoes.\n\nWhen she saw I still had the enhancers stuck to my chest, she found me a simple t-shirt bra, it occurred to me that everything she was giving me was from Jenn PBJ, or pre boob job. I stifled a giggle.\n\n\"Now get out of here, I have to pack,\" Jenn hugged me and patted me on the butt.\n\n\"Purse?\" I realized I was going to need someplace for my wallet, keys, and phone.\n\nOnce again Jenn vanished into her expansive closet. She brought me four, one for each of the dresses, red, black, and purple clutches, and one with a shoulder strap for everyday use. We spent a few minutes discussing what a lady should keep in her purse, I followed her instructions, reminding myself to add my lipstick and compact from the makeup session when I got to my car. Hugging her again, I headed for the door; I'd have to think about her recommendation to include a few condoms, just in case.",
        "\"Don't change, Mike's taking you to dinner. Practice for tomorrow,\" Jen texted me as I was finding special places for my new things.\n\n\"K. thank you\", I texted back, with three hearts and a smiley emoji.\n\nThe bag with my beer clothes caught my eye and I unpacked that too, putting everything where it belonged. In the bottom of the bag, underneath my jeans and shirt, were at least a dozen pair of panties and four bras, I laughed and put them in my new 'girly' underwear drawer along with the lacy things Jenn had just given me.\n\nBy the time Mike knocked on my apartment door I had rearranged my closet, my three new dresses commanded almost a quarter of the space, my heels on the floor underneath them. They looked so lonely, but I knew it wouldn't be for long, little did I know.\n\nChecking my makeup, I grabbed my purse and answered the door, Mike's smile was all the validation I needed. I had slipped into this new me so easily, I couldn't help but wonder how long it had been hiding just beneath the surface and what surprises it was bringing with it.\n\nMike was the perfect gentleman, opening doors for me and holding my chair when we got to Luigi's, I could see why Jenn adored him so much. We ate and shared a bottle of wine, he told me what to expect at the Christmas party, all about his nemesis Bethany, a short brunette with too-large fake boobs that was convinced his girlfriend was fiction, he even admitted to me that when he got the promotion, he was going to take Jenn to Jamaica for a week and propose on the beach, it was all so romantic. I closed my eyes, picturing myself on the beach, I almost spit out my wine when I realized in my fantasy, I wasn't the one doing the proposing.\n\nWe talked about what our story was going to be, how long we had been dating and how we met, sticking as close to the truth as possible, we had met a year ago, watching a game at Halftime where my best friend Jenn worked, easy.\n\nThe gentleman he was, he walked me to my door, there were two large bags of clothes waiting when we got there, two envelopes were stuck in the door jam, one said 'Ricki', the other 'Mike', Jenn had stopped by on her way out of town. I handed Mike his note and opened my own.\n\nRicki,\n\nI found a few more things I think you'd like while I was packing.\n\nRelax and have fun tomorrow, you're going to be awesome...\n\nLove,\n\nJenn\n\nPS. Don't you dare try to steal my man, LOL\n\nI showed the note to Mike and we both laughed at the last line.\n\n\"Um she just said to have fun, and she loves me,\" Mike grinned and shoved the note in his pocket.\n\nSaturday flew by, I had my own mini fashion show with all the things Jenn had left at my door, pants, skirts, tops, more dresses, and shoes, even some pajamas and nightgowns, I practiced walking in the purple heels and must have fixed my makeup a dozen times trying to make it perfect. When Mike picked me up his mouth literally dropped open, the purple dress was the perfect choice. I wondered if Jenn felt like this when he looked at her.\n\n\"You are going to be the prettiest girl at the party, that dress is stunning,\" I blushed and took his arm letting him lead me to his car.\n\n\"Jenn said I should call you Ricki, is that right?\"\n\nI just nodded, the butterflies in my stomach were huge, Mike patted my leg and reassured me everything was going to be fine, nothing to worry about. It helped but I was still a bundle of nerves. So far it had been just me and him and Jenn, but tonight, I would have the big stage and my performance mattered, not just to me, but to him and Jenn, too, I couldn't mess this up.\n\n\"Mike, what if I mess up? What if I do something, and you don't get that promotion, what if someone recognizes me or something?\"\n\n\"Ricki, everybody is going to be so distracted by how beautiful you are, they won't hear a word you say, promise,\" he gave me a huge grin. I shoved him in the arm, it was the perfect thing for him to say.\n\nThe valet at the country club opened my door and I carefully turned and let him help me out of Mike's car, waiting for Mike to come around and collect me. I could feel the eyes of the three young men parking cars as they tried to imagine what was underneath the purple velvet, laughing at the thought of what their reactions would be if they really found out.\n\n\"You ready?\" Mike offered me his arm, I leaned up and kissed his cheek and off we went.\n\nWe stopped in the lobby to check in and Mike signed us up for a couple's picture, \"Jenn will want one,\" he smiled. I admitted I wanted one too. Mike got in line for the photographer, and I went to check my makeup again; actually, I just wanted to go somewhere and breathe for a minute or two, I felt like I had been holding my breath for hours.\n\n\"Don't you just love to hate these things?\" the redhead in the bathroom asked with a grin on her face, \"If our men realized how hard it was to do all the things we do to look good for them...,\" she didn't have to finish the thought, we both laughed.\n\n\"But it's so worth it, right?\" I smiled back at her.\n\n\"Oh, you know it girl, I'm Robin, I don't think we've met. Are you new with the company? I like to think I know all my people.\"\n\n\"Ricki, I'm not an employee, I'm here with Mike, Mike Barton,\" I offered my hand, and she took it giving it a gentle squeeze, \"so, you're like the boss?\"\n\n\"They let me pretend to be in charge, but guys like Mike do all the heavy lifting, I just go to the board meetings and brag on how good they are,\" she chuckled. She was so disarming and so nice, and obviously had no clue what I was hiding under my dress, I started to relax.\n\n\"You said you're with Mike?\" she looked a little confused.\n\nI thought for a minute, \"well, yes and no, his girlfriend Jenn is my best friend, she had a family thing and Mike didn't want to come alone, so I volunteered, I mean a chance to wear this dress, who could say no?\"\n\nWe were giggling like schoolgirls when we came out of the bathroom, Robin walked me back to Mike and told him to keep an eye on me or he'd have to answer to her.\n\n\"What was that all about, do you know who that is?\"\n\n\"Well, duh, that's my new friend Robin, I think she like owns the company you work for, so you better behave,\" Mike chuckled to himself and shook his head.\n\n\"By the way, I told her the truth, I kind of think the only one we need to convince of anything else is going to be Bethany. It will be a lot easier that way, Robin agrees.\"\n\n\"What did you tell her?\"\n\n\"I told her Jenn hired me to be your bodyguard so none of the other girls at the party would hit on you. That, and that I said yes so I got a chance to wear this dress,\" I smiled at him.\n\n\"My bodyguard, really?\"\n\n\"Sure, Ricki Johnson, Personal Security Specialist,\" I laughed, \"I think I'm going to get cards made and maybe one of those garter holsters like in the spy movies.\"\n\n\"What else happened in there, you were about to hyperventilate when you went in and now, you're cracking jokes?\"\n\n\"She just started talking to me about things girls would talk about, how much trouble it was to get dressed up for these types of things and how guys didn't understand and how it was all worth it,\" I took a deep breath, \"It hit me, she didn't have a clue who or what I was, so no one else would either, I just relaxed, it was like lunch yesterday after the spa all over again. I just wish Jenn were...\"\n\n\"Hi guys, sorry I'm late,\" Jenn stepped up next to me, the little red dress she was wearing took my breath away. Mike couldn't help himself anymore, breaking out laughing as Jenn wrapped me in a huge hug.\n\n\"You, you two, you set me up, this whole thing was a scam to get me here, like this,\" I was trying so hard to be angry. Jenn had lied to me, had manipulated me, had made me get my body waxed, she had conspired with her boyfriend to get me to dress up as a girl and come to a huge party of people I didn't know and possibly would, never, see, again, the words slowed in my mind as I realized how perfect their plan had been.\n\n\"Ricki, I'm sorry, it's just at Thanksgiving, you looked so happy running around in my shorts and that PINK shirt, getting Papa Joe his beer and letting my cousins and uncles ogle your pretty little butt, Mike and I talked about it for days and came up with this plan, I'm sorry I lied to you, but you have looked at yourself, right?\"\n\nI couldn't do it, she was right and there was no way I could be mad at her or Mike, I crossed my arms in front of me and put on the best pout I could muster, sticking my lower lip out and glaring at the two of them, \"And this whole Bethany thing?\"\n\n\"She's the receptionist, grandmother, about sixty, sweetest lady you'll ever meet,\" Mike grinned trying not to laugh again.\n\n\"Mr. Barton,\" the photographer called our group.\n\nWe took a couple with me pretending to be mad and then several more with Jenn and me fawning over Mike with a couple of more traditional poses thrown in, Mike ordered three copies of the entire package.\n\nThe first hour was a meet and greet kind of thing, cocktails and hors d'oeuvres, Mike introduced me to so many people I quit trying to keep track of their names, of course, they all already knew Jenn. I was on a different planet, where before I was shy and withdrawn, sitting on the sidelines watching my friends have a good time, now I was in the center of the vortex, my head spinning from all the attention I was getting, everybody was looking at me.\n\nI recognized the lust on the guys faces, but the girls, I would have sworn it was jealousy.\n\nI found myself separated from Mike and Jenn, surrounded by a small group of guys each trying to get my undivided attention, I was loving the attention, but it was taking everything I had to keep the growing feeling of panic from bursting through.\n\n\"May I have your attention please?\" Robin's voice filled the room, my cadre of admirers turned toward the small stage where she was standing and I used the opportunity to escape, finding Jenn and Mike a short way off, they had been enjoying the show, watching me try to deal with the advances of my new admirers.\n\n\"Damn, this is hard, how do you deal with guys like that?\" I motioned back to the group of guys that had trapped me, grinning at Jenn.\n\n\"Curse of being a hottie, it helps to have a Mike,\" she kissed his cheek and they both smiled at me.\n\nRobin made a few announcements, gave a few yearly awards, announced the percentages for the annual bonus which got a loud cheer. The biggest news though, was the introduction of the newest member of the executive team, Executive Director of Corporate Marketing, Mike Barton, it took twenty minutes for everyone to calm down, we were immediately surrounded by his coworkers congratulating him on the huge promotion. Mike made his way to the small stage and thanked Robin, letting the marketing department know that it was because of them he had gotten here, and he would do his best to let them know how important they were to him and to the company.\n\nRobin took the mic back and told everyone to enjoy themselves and to have a Merry Christmas and a Happy Holiday. The DJ started playing dance music and the real party began.\n\nOnce again, I found myself abandoned as Jenn worked through the crowd to get to Mike, \"You look a little lost,\" I turned toward the voice.\n\n\"No, not really, my friends just have some celebrating to do, and I don't want to be a third wheel,\" I gave him a weak smile.\n\nWith the most disarming smile I had ever seen, he offered me his arm, \"I'm Victor.\"\n\n\"I slipped my arm into his and let him lead me to a small table off to the side of the room, \"Ricki, nice to meet you.\"\n\nIn my heels, I was six feet tall, Victor had to be at least 6'6\", tall and lean with long brown hair and big brown eyes, he looked like he had stepped off the cover of a romance novel, walking next to him I felt petite, it as a nice feeling. We passed a bar and I waited while he got a whiskey neat for himself and a glass of wine for me, we sat and talked for a while, he owned a small independent publishing company and was in fact a cover model for several of the books he had published. He was a client of Robin's one of her personal accounts, I told him about my work as a content editor for the small web company I worked for. Victor seemed interested in what I did and even asked for the URLs for a few of the sites I had edited, I was happy to oblige.\n\nWhen he asked me to dance, I started to get nervous,\" I'm um, not much of a dancer,\" I admitted.\n\n\"Me either, but the most beautiful woman in the room didn't put on that exquisite purple dress to hide in a corner, now did she?\"\n\nI blushed and let him lead me to the dance floor. It was obvious to anyone that saw us we had no idea what we were doing, but equally obvious we were enjoying ourselves immensely, when the DJ finally played a slow song, Victor pulled me into his arms and took my right hand in his left,\" this I can do,\" he whispered in my ear as he guided me across the floor. There was no resistance when he pulled me closer and my body gently pressed into his, I rested my head against his shoulder. We passed Mike and Jenn on the floor and their expressions radiated their approval.\n\n\"Somehow, they are going to pay for setting me up like this,\" I thought to myself, nope, I still couldn't come close to being mad at them.\n\nJenn and Mike joined us at our table, Victor and Mike hit it off immediately, they had gone to rival colleges and just had to let each other know who had made the better choice, we talked and danced and had a wonderful time, Jenn couldn't stop darting her eyes back and forth between me and Victor while grinning at me like the proverbial Cheshire Cat.\n\nI felt myself blush more than once as Victor touched my arm and smiled at me as he shared story after story of the writers he worked with and how quirky they could be. When his hand found my thigh, I placed mine on top and laced my fingers into his almost without thinking.\n\nRobin stopped by with her husband George on their way out the door, congratulating Mike, giving Victor a big hug, and me a big smile,\" so worth it,\" she said, and we both laughed.\n\nI did my best to stifle a yawn, but everybody saw it, \"Can I walk you to your car?\" Victor was such a gentleman.\n\nI smiled at him. Jenn and Mike grinned at each other as we all got up and gathered our things. Victor slipped his hand into mine as we made our way to the valet station.\n\n\"I had a nice time tonight. Thank you,\" I looked into Victor's big brown eyes as Mike opened the door for Jenn. Victor leaned in and gave me the sweetest kiss, soft and simple, gentle yet so powerful I felt it in my toes.\n\n\"Can I call you?\"\n\nVictor reminded me of myself in middle school in that moment, asking Mary Benton to go to the winter dance, all nerves and apprehension he was so adorable.\n\n\"But...\" something deep inside screamed, my desire shut out the panic welling in my stomach, I nodded and smiled as I pulled out my phone and we exchanged numbers. He kissed me again, this time there was nothing gentle about it, I responded to his desire, dropping my purse, and throwing my arms around his neck letting him pull my body close, I could feel the manifestation of his wants and needs pressing into my abdomen.\n\n\"I am so fucked,\" I muttered as I collapsed into the back seat of Mikes car.\n\n\"If you're lucky,\" Jenn laughed out loud from the front seat.\n\nI lay in bed forever, chasing sleep that wouldn't come, staring at the ceiling, one of the nightgowns Jenn had given me caressing my body, my mind lost in the past three days, \"What was happening to me?\"\n\nI thought about what Jenn had said, she had been looking for a way to dress me up since we first met, I thought about the spa, the way Mike had reacted: the way everyone had reacted when they saw me in the purple dress.\n\nI thought about how it felt when Victor touched me, his kisses, the first so gentle and the second so primal and the way I reacted to them. I found myself imagining what his strong body looked like under his suit, was his chest chiseled, did his shirt hide a ripped six-pack, and what about what I had felt pressed into my abdomen?\n\nIt hit me why the girls at Halftime treated me the way they did, why I empathized with them so much, I wasn't a guy in the friend zone, I was one of the girls, it suddenly all made so much sense.\n\nFantasies replaced my worries, I closed my eyes and let them wash over me, long passionate kisses, Victors strong hands running up and down my body as mine explored his chest and stomach.\n\nI saw Ricki kissing his neck and playing with his long brown hair, moving slowly down across his chest to suckle and play with his nipples as her hands continued to explore. Victor let out a soft moan when she slipped her hand into his crotch, gently stroking the beast hidden within, \"Oh Ricki\" he moaned her name, \"Oh Ricki.\"\n\nShe left a trail of kisses down his stomach tracing the lines of his abs and dallying for just a moment at his belly button, ultimately licking and the sucking his cock until he exploded down her throat, my god it was so erotic.\n\nMy own eruption disrupted the pictures running through my head and I smiled to myself as tremors and spasms of pleasure ripped through my body. Realizing that I was shoving my thumb as deep into my mouth as it would go, moving my head up and down the slick shaft, twirling my tongue around the digit, and kissing the tip gently; I got up to change into a clean nightgown.\n\nSunday morning was hell as I fought with myself over the choices I had to make going forward, my nails were painted red, I had earrings and a new haircut, all of which was decidedly very feminine, I had to go to work tomorrow and to my parents on Wednesday for Christmas.\n\nMost of all I fought with the fact that I was having this debate sitting in a coffee shop, my makeup perfect, in a the same pair of grey tights, sweater dress and riding boots with the four-inch heels I had worn Friday, admiring the lipstick stains on the lid of my coffee cup; I knew what I wanted to do, I just wasn't sure I could handle the fallout.\n\nMy phone buzzed and I read the text, \"Hey, short notice, you want to grab a cup of coffee?\" it was from Victor.\n\n\"Sorry, already am, but you could join me if you want,\" I smiled as I hit send.\n\n\"I'd like that very much,\" his voice drifted over my left shoulder.\n\n\"What are you doing here? How did you find me?\"\n\n\"Dumb luck, I pass by here every day on my way to my office. I was out running a couple of errands and, well...\" he sat down next to me, not across from me, next to me.\n\nOne more thing I needed to figure out how to deal with, I smiled at him and tried not to blush, failing miserably, \"Thanks again for last night, I had a really good time, I'm glad I met you.\"\n\n\"Same here, so you come here often?\"\n\n\"Really, you're using that. That's the worst pickup line ever?\" I laughed.\n\n\"But is it working,\" there was that damned smile again, \"Seriously though, this is kind of a hidden gem, mostly only people in this area come here, unless...\" his smile turned into a grin, \"don't tell me we're practically neighbors.\"\n\n\"A girl needs her secrets and besides, how do I know you're not a stalker, I mean I only met you last night and here you are in my coffee shop the next morning, and before you try to turn that around, I'm the girl and I was here first,\" I stuck my tongue out at him like a four-year-old, shoving any thoughts of the reality of what I was doing, the lie I was perpetuating, and what it could mean deep into the back of my mind.\n\nWe quickly fell back into the comfortable banter we had enjoyed at the Christmas party, talking well past the point where our coffee cups were empty.",
        "\"Hey, I thought you were running errands, how did you really get here?\"\n\n\"I finished them, stopping here for coffee was my reward, finding you here was an unexpected pleasure, I wasn't planning on calling until Monday or maybe Tuesday, \"that smile again, and those big brown eyes were ripping my soul apart,\" actually, now I'm hungry, would you like to grab some lunch?\"\n\n\"There's a great sandwich place just down the block,\" we both said it at the same time, laughing as we got up and headed for the door. Victor took my hand and I stopped him as the door closed behind us.\n\n\"Is something wrong?\" he turned to look at me.\n\nI put my free hand behind his neck, raised up on my toes and found his lips with my own,\" not anymore.\"\n\nLunch was wonderful, the little sandwich place had a signature sandwich that was made with spiced ham, pulled pork, and bacon, with a spicy sauce and lots of cheese, I ordered first and got the last one for the day, Victor made me promise to give him a bite and ordered the pulled pork Reuben.\n\nAfter lunch, we walked around the neighborhood holding hands and chatting about stuff, stopping for a kiss every now and then and just enjoying the afternoon, my apartment was about halfway between his house and his office and across the street from the coffee shop, it was a miracle we had never run into each other before, or maybe we had but he hadn't noticed Rick and Rick hadn't paid attention to him, he couldn't take his eyes off Ricki.\n\nIt took us forever to say goodbye once we got to my apartment building, standing on the steps so that I was as tall as him and kissing like teenagers, Victor must have pretended to leave five or six times, each time coming back for one more kiss, and it was never just one.\n\n\"Ok, for real this time,\" he had said that twice already, \"for real, for real,\" he laughed, and I put my fingers up to his lips when he tried to get one more kiss.\n\n\"Victor, I really like you and kissing you like this is just, well, just wow, it's nice, but I need to go inside and pee, ok? And no, I don't think it's a good idea for you to come with me.\"\n\n\"Ok,\" he got one more kiss before he turned to walk away, \"Um,\" he turned around one last time,\" I've got this thing, New Year's Eve, if you're not busy, maybe you'd like to join me,\" there was that adorable little boy full of insecurities that was so irresistible.\n\n\"I'd like that a lot. Call me and we'll talk about it, but I gotta go,\" he smiled at me and turned to leave. Did he just skip as he turned the corner?\n\nIt took me two hours to tell Jenn the whole story, mostly because she kept asking me to repeat the kissing parts. Finally, the voice in the back of my head made itself heard and I crashed, \"But what happens when he finds out?\"\n\nI was a puddle or tears when Jenn got to my apartment. She wrapped my in her arms and just held me, rocking me gently back and forth. We ended up on my couch, me in some comfy jammies she had picked out for me, eating ice cream from the half gallon containers as we played through the possibilities, Jenn offered two good ones each time I repeated the same bad one that haunted me, \"what if he hates me?\"\n\nSomewhere in all the preparation for the Christmas party, I had found a new truth, that Ricki was who I wanted, no, needed to be. It resolved so many issues, quelled so many doubts that had plagued me for so long, it was just the right answer to so many questions; when Victor had kissed me, I knew there would be no going back.\n\nThe final answer was that I was going to tell him New Year's Eve, it was the ultimate time of transition after all, and I would have already dealt with work and my family, after that, a boyfriend would be a piece of cake.\n\nWork was easy, almost everybody else had taken the entire week off for Christmas, it was me, a couple of developers and Gwen from HR, who just happened to be the exact person I needed to talk to. I had opted for light makeup, jeans, my riding boots with a cute sweater, which wasn't too far from what I always wore, the jeans were a lot tighter, the boots had four-inch heels and I wore them outside the jeans and the sweater didn't even pretend to hide my breast enhancers, other than that, perfectly normal.\n\nGwen sent a company-wide email explaining that with the new year, Richard Johnson, or Rick, would be referred to as Ricki or Miss. Johnson, describing the policies on acceptance and harassment in the workplace and requesting that any questions be directed to Gwen in HR, she even gave me some information on community resources and where to go for support; it was like she did this every day.\n\nThe few developers that were in the office stopped by my desk, as much out of curiosity as to congratulate me on my decision and to voice their support. All I could think about was how Victor was going to handle the news, hoping and praying he was as understanding as Gwen.\n\nJust before lunch, Gwen sent another email instructing me and the other stragglers to finish up whatever we were working on and take off to enjoy the holiday.\n\n\"I can do this,\" I thought to myself as I logged off and packed up my stuff, when Victor called later that afternoon and told me about New Year's Eve, I was convinced I was right.\n\nReality came crashing down around my shoulders when I got to my parent's house Wednesday afternoon. I had dressed as conservatively as possible, leaving my breasts enhancers in my suitcase, and opting to go without makeup for the first time since that day at the spa, when I told them what was happening, my mom just cried, and my dad threw me out of the house.\n\nMy sister informed me that I would burn in hell and my two brothers openly laughed at me. I stopped at a rest stop just outside of town and called Jenn, three hours later, Jenn, Mike and I were in a roadside diner drinking coffee and talking about what had happened. I was crushed, crying my eyes out while they listened and offered all the support they could.\n\nI curled up in the backseat of Mike's car and Jenn drove mine back to my apartment. The next morning, they picked me up and I spent Christmas with Jenn and her family, it was just like Thanksgiving, except the living room had a huge tree surrounded by gifts that filled half the room.\n\nI slept in the girl's bunkhouse over the garage with Jenn and all the female cousins and Mike across the hall with all the guys, it was a huge slumber party, and I was in the middle of it all, we sat around in our pajamas and talked about boys, they were all excited that I actually had a boy to talk about and wanted details; wherever he was, Victor's ears had to be crimson.\n\nIt was what I had hoped for from my own family.\n\nWhen Victor called me, they all ooh'd and aah'd, laughing and teasing me, making kissing noises and laughing. Victor was confused about where I was, I had told him I would be with my parents and I only had one sister, I promised to tell him all about it the next time we saw each other.\n\n\"What about lunch Monday?\"\n\n\"I can do that, how about Halftime? You know where it is?\"\n\nWe had a date, our first official one. When I hung up and fell back onto my pillow, ever girl in the room burst out laughing, \"Ricki's in love.\" \"Ricki's got a boyfriend.\" They all chanted. I just buried my face in my pillow and screamed because they were right.\n\nChristmas morning at Papa Joe's and Grandma Emma's was epic beyond anything I had ever seen, what little space there had been in the living room was gone as the number of gifts under the tree appeared to have tripled overnight.\n\nAll the cousins, from fifteen to thirty, were six years old again sitting in a big circle around the tree in their jammies, Jenn's uncle Herbie played Santa, calling out names and doling out the gifts, it took a couple of hours, somehow, I got five myself, one of them a gold necklace with my name, 'Ricki,' in a cursive script, I looked at Jenn and she just smiled, shrugging her shoulders.\n\nI looked at Grandma Emma, \"Santa must have known you'd be here,\" she smiled at me, and I felt a different kind of tears start to well behind my eyes. I made my way across the room to her and gave her the biggest hug I could.\n\n\"You are family now, Jenn told me what happened, you need someplace to be, you come here, no questions, OK?\" I nodded, she wiped a rogue tear from my cheek, and went back to my gifts, panties, socks, some very nice perfume and a picture of me from Thanksgiving in Jenn's shorts with the PINK t-shirt just off my shoulder exposing my bra strap and a huge smile on my face.\n\nThe roller coaster continued Monday, almost as soon as I logged into my computer at work, I received an email from my manager asking me to meet with him as soon as possible, not totally out of the ordinary, I assumed there was a new project he wanted me to start working on and that always excited me.\n\nWhen I walked into his office, it was him and me and Gwen from HR, Gwen was not happy. There was a single sheet of paper in front of the chair I was to sit in, I sat and started to read it. I had never been so confused in my life, it was a list of about a dozen 'infractions' so convoluted and petty it boggled my mind. Someone had stayed up late coming up with this list.\n\n\"Miss. Johnson, in light of what you have just read, what do you have to say for yourself?\"\n\n\"Mr. Samuels, I'm not sure what you mean, I mean this list is pretty sketchy, I'd have to go and do some research to even remember some of the dates and times you mention on here. What are we doing here anyway?\"\n\n\"We feel this list indicates a pattern of disregard for our company policies, of abuse of those policies and we cannot in good conscience continue your employment. Gwen will escort you to your desk and help you pack your things,\" I was being fired.\n\nIf I signed the paper, I would get two weeks' severance, If I refused, I would get nothing. I knew exactly what was going on and it pissed me off. I wadded up the paper and threw it in Mr. Samuels face, storming out of the room, Gwen practically running to keep up with me.\n\nWhat angered me more than anything was on my first date with Victor, and I was going to be a bitch from hell. \"Oh, well, maybe he'll dump me, and I won't have to tell him my secret,\" I thought to myself as I loaded my box into my car, that just made it worse.\n\nVictor was already at Halftime when I got there, I didn't even say hi, I wrapped my arms around him and buried my face in his chest, \"I just got fired, I'm sorry if I'm a bit of a bitch this afternoon, they just pissed me off.\"\n\nHe put his arms around me and held me, \"fired, why?\"\n\nI wasn't thinking clearly, the words just came out,\" because I'm transgender and I came out at work. They made up a bunch of bullshit reasons,\" I froze when I realized what I had done.\n\nVictor just continued to hold me, not saying a word.\n\n\"Victor, I...\" I tried to pull away, he didn't let go, he just held me.\n\n\"Well, this is awkward,\" Jenn came up to the table.\n\n\"She just got fired, can you give us a few minutes,\" Victor's voice was soft and sure.\n\n\"Um, yeah, Ricki, we can talk when you're ready, ok?\" I could hear the concern in Jenn's voice.\n\nI nodded, holding onto Victor like it was the only thing keeping me afloat in a sea of despair, I knew if I let him go, I would never get him back.\n\nHe said 'she.'\n\nI slowly relaxed my hold on Victor, he matched my pace and after a few seconds, we were just standing there looking at each other, \"So, you have a thing or two to tell me, right?\"\n\nI sat down and looked at him, he took my hands across the table.\n\n\"Just take your time,\" he smiled at me, and I opened my soul, telling him about Thanksgiving and Mike and Jenn's great conspiracy and how it all played out, opening a door that I never knew existed to a place I had never imagined, and then I met him, and it just got worse, or better, depending on how you looked at it. I told him about my family and how Mike and Jenn had rescued me, Jenn taking me home to her family for Christmas and how they all loved and accepted me. I showed him the necklace and told him about the meeting with Mr. Sanders.\n\nHe sat and listened, \"after all that, you have to be hungry, what's good here anyway?\"\n\nI looked at him like he was crazy,\" I just poured my heart out to you, told you I was trans, and you just want to ignore it like that? I'm a girl with a dick, that doesn't bother you?\" I was raising my voice a little.\n\nVictor looked at me, \"I publish erotica, soft and hard-core porn without the pictures, a lot of it is gay, lesbian, fetish, transgender, cross dressing stuff, some of it so explicit it makes me blush, but it pays my bills and very well, I'm also very good at marketing it. I do it for two reasons, first, not many publishers serve the market I serve and there is a very nice market for my books; second, I do it because it feeds my own fantasies and fetishes. I'm sorry if you didn't get whatever reaction you were expecting, I've just kind of seen it all, or read it all, I guess is more accurate,\" I got the feeling that Victor was offended that I expected him to be offended, the whole interaction had turned so awkward and uncomfortable so fast.\n\n\"Um, the burgers are really good, you should try the sweet potato fries, too.\"\n\nWe ordered and then sat in silence, letting the tension slowly fade, \"if you don't want to take me to New Year's Eve, I'll understand,\" I offered meekly.\n\n\"I was thinking, I have a red tie and cummerbund for my tux, if you wore a red dress, we'd match,\" he smiled at me, \"the party is at Robin and George's by the way, Robin would love to see you again. I'm pretty sure Mike and Jenn will be there, too.\"\n\n\"You're really ok with me being, um...?\"\n\nVictor took out his phone and opened his picture catalogue, picture after picture of me, all discretely taken, some from the party, some from the coffee shop and even one when I walked in the door today, all very tasteful and all displaying a beautiful young woman, \"that's who I want to spend New Year's Eve with, I'll figure out the details later.\"\n\nHe was either going to lock me in a closet in his house like a Barbie Doll or he was falling for me as badly as I was for him,\" I have a red dress, it's not quite as conservative as the purple one though,\" I smiled a wicked smile at him, he didn't say a word, the reddish hue rising from his neck to his cheeks spoke volumes.\n\nJenn dropped off our burgers and I told her about me coming out at work and getting fired and how they made up a bunch of crap to fire me. She told me not to worry about it that, I would find something, and I could always move into her spare room if I needed to.\n\n\"Actually,\" Victor took a deep breath, \"One of the reasons I wanted to have lunch with you today was to talk to you about your job situation, the websites you gave me, did you write the content or just edit it?\"\n\n\"I wrote a lot of it after interviewing the customers and what I didn't write, I edited pretty heavily.\"\n\n\"Have you ever thought of editing books and short stories?\"\n\n\"Not really, I never thought that was a field I could break into, I just didn't have the connections, and it scares me, the thought of taking something so personal and ripping it apart. The few writers I've met are like expectant parents with their work.\"\n\n\"Yes, they are,\" Victor smiled at me sliding a flash drive across the table, \"there are a few short stories on here I'd like you to review, if I like your comments, we have something to talk about. And this is not because you're my girlfriend and just got fired; I don't do that. I need someone and you seem to have the skills, this is your audition, if you want it.\"\n\nI picked up the flash drive and dropped it in my purse, \"so tell me more about this girlfriend thing,\" he laughed out loud.\n\nWe finished our lunch with Jen dropping by probably a little too often, I questioned Victor about his company and the target audiences for various kinds of publications, as I sort of suspected, his books were mostly purchased by women, even the more fringe works; there were a lot of very kinky housewives out there and possibly a lot of very lucky husbands, too.\n\nHe walked me to my car, letting me know he'd pick me up at my apartment at seven thirty Thursday evening, the party started at eight thirty and after dinner, we should be getting there about nine, nice and fashionably late, perfect for me to make an entrance and steal every man in the room's heart.\n\n\"Are you sure...?\"\n\nVictor didn't let me finish my question, he pulled me close; lifting me to my tip toes, kissing me hard, driving his tongue into my mouth and sucking mine from mine, burning his answer into my very core, leaving me standing there with a silly look on my face as he walked across the lot to his car.\n\nIn between editing the stories Victor gave me, I tracked down the spa Jenn took me to and made an appointment for Wednesday afternoon for a repeat of the entire waxing process, deciding that love made you a masochist and then laughing at how many ways that was probably true, I also called several of the resources Gwen had given me to find about more about what I was going through.\n\nOne of them was a free clinic that dealt in all kinds of LGBTQ issues including counseling and hormone treatment for men and women in transition, I made an appointment for Thursday morning.\n\nI read the first story twice before I went to work on it, not just because I wanted to get a feel for the story and what the writer was trying to accomplish, but because I genuinely liked the characters and the sex was so fricking hot, I imagined how Victor could spend some serious time with his cock in his hand working with stuff like this all the time.\n\nI also identified with Charli, the main character. He was like me in some ways, smaller than most men and decidedly feminine features, he also had a serious panty fetish; I didn't think I qualified as having a fetish, but I loved the feeling of the soft fabrics against my butt and crotch and the way the lace on my cheekies toyed with my ass.\n\nAndre was Charli's neighbor and the picture of an alpha male, tall muscular athletic with a huge cock, \"ten inches, full and thick, with large balls and a huge purple plum for a head,\" that Charli somehow magically could deep throat with ease and slide into his 'boi pussy' at will.\n\n\"Really?\" I thought to myself, \"Oh well, it's erotic fantasy.\" The image of Andre shoving his massive piece of meat into Charli came to my mind and I caught myself squirming in my chair.\n\nCharli and Andre met under odd circumstances with Andre discovering Charli's secret, a relationship flourished with Andre slowly taking more and more control of Charli, something Charli seemed to want and need in his life, there was some back story about Charli never really having a father figure in his life, being raised by a dowager aunt.\n\nAs the story progressed, Andre feminizes Charli, slipping him hormones so that he grows modest breasts and so that his 'clitty' becomes smaller and ceases to work, rewarding him for behaving and punishing his misdeeds; Charli finds he enjoys being spanked by his new 'Daddy.' \"Daddy\" is evidently a technical term in some sub genres, so is \"Sissy\". Ultimately, Charli is ecstatic in his new role as a walking talking sex toy for Andre, even happy letting Andre share him with a few of his friends with similar attractions to \"Sissy Boi's.\"\n\nUnlike Charli, my attraction to women's clothes wasn't sexual at all, it was more of a confirmation of something deep inside me. I wondered if Victor had chosen this story for me to review as an indicator of what some of his fantasies were, did he expect me to turn into his 'sissy' or was it just a work project? I hoped it was the latter because I just couldn't see myself being subjugated the way Charli seemed to crave, finding Ricki had been liberating, empowering, I was a more complete person as Ricki, and I wasn't going to give that up.",
        "By the time I was finished, Tuesday was gone, and the story filled with edits, notes recommending changes, some subtle, some more expansive. I commented on the authors love of comma's suggesting they might interrupt the flow of their superb descriptive abilities and complimented him, or her, I guess. I also praised the incredible imagery expressed throughout the story.\n\nWhen I was finally done, I was mentally exhausted and needed to go change my panties due to a conspicuous amount of sticky goo that had gathered in my crotch over the course of the project.\n\nA quick sandwich and a glass of wine was followed by another glass of wine and a bubble bath, the gentle scent of lavender filled my head as I let the hot water sooth my body. My mind, on the other hand raced with illicit thoughts, Andre and Charli filled my head, images of the two of them together, Charli pleasuring his man filled my thoughts, I found my thumb once again at my lips, I kissed it and sucked it, not like a child, but like a woman pleasing her man.\n\nMy other hand roamed over my body, caressing my nipples, and wandering lower to fondle my cock before it found the crease between my cheeks. Slick from the soapy water, my middle finger started massaging my hole, I imagined it to be Victor's hand, Victor's finger that was exploring, perhaps preparing me for something special, I pressed against the rose, trying to relax as the first digit slid inside, then the second, and then the third. Pulling it slowly out and thrusting back again I moaned as my cock twitched and my tongue swirled around the tip of my thumb.\n\nMy ring finger joined my middle finger, stretching me just a little and making the moans louder, I curled my fingers forward and found my prostate, rubbing gently, I could feel it growing, in my mind it was Victor using me, my body didn't care, I moaned, I pressed, I sucked my thumb as deep as it would go in my mouth, and I exploded, shudders ripping through my body as pulse after pulse moved through my cock spewing my seed into my bath.\n\n\"Oh well, it's supposed to be good for your skin anyway,\" I laughed to myself as I took another sip of my wine.\n\nWednesday morning, I started to read the second story Victor had given me, Amber is a sexy young executive assistant that catches her boss in a very compromising situation. What followed was a story of domination and submission as Eric learned to call Amber Mistress in return for her silence about what she had seen.\n\nOf course, at work he was still the powerful, driven, highly successful executive, but at night, he became her slave; bondage and humiliation, whippings, not just spankings but whippings with riding crops, blindfolds, cock cages, butt plugs, and submission to other men became the norm for Eric under Ambers tutelage.\n\nI knew this world existed, who hasn't heard of 'Fifty Shades of Grey,' after all, but I'd never experienced anything like what this writer described. The attention to detail was amazing and the sex was so explicit, it was almost disturbing. I was drawn to it like a moth to a flame, like a motorist who comes upon a horrific accident in the opposite lane, stuck in traffic, you can't help but look.\n\nMy waxing appointment interrupted my second reading of Amber and Eric's story and I was ready for the break, snickering at my discomfort with the world of BDSM that the writer described as I prepared to submit to the worst torture I had ever experienced, but as Robin and I had agreed, it was oh, so worth it.\n\nTo my surprise, Jenn had found out about my appointment and had decided to join me, she confessed that she and Mike would be at Robin's party too, we chatted about what Victor had me reading, Jenn asking for intimate details of the stories, especially Amber and Eric's, I got a funny feeling Mike might be in for a surprise. I couldn't wait to hear how it turned out.\n\nThe technician suggested I try electrolysis on my face, it would be permanent and didn't hurt any worse than the waxing, I agreed, making an appointment on the spot for a month out, that would give the hairs just enough time to start growing back after the waxing.\n\nJenn and I grabbed a late lunch at Halftime, and both laughed when her boss asked if I wanted an application. The rest of my day was spent buried in the details of Amber and Eric's story, much as Andre and Charli had, they fell to my wrath and the margins filled with copious notes and edits.\n\nMy meeting with Elaine at the clinic Thursday morning was supposed to last an hour, it lasted three, as I explained the confident young lady she saw before her had burst onto the scene at Thanksgiving, rising from the ashes of an insecure young man with few friends and fewer options.\n\nI told her about the Christmas party and Jenn and Mike's elaborate ruse to get me out of my shell and I told her about Victor. She cried with me as I told her how my family had reacted and how I had been fired, ostensibly for being who I truly was, and then she laughed with me as I told her about being adopted by Jenn's grandmother, she loved the necklace that I now wore every day as a reminder that I was loved and accepted.\n\nWe talked about next steps and what the process would look like depending on the choices I made, I had a lot to think about. The one thing I was sure of was I was going forward, Rick was gone, Ricki was who I should have always been. I left the clinic with a handful of stuff to read, a list of other resources longer than my arm, and prescriptions I would need to get where I wanted, no, needed to be.\n\n\"Hey, stranger,\" Victor sat down with me at the sandwich shop down the street from my apartment. This time he got the house signature sandwich too. I told him about my meeting with Elaine at the clinic and what I was planning, showing him the pamphlets and fliers and the long list of resources, even the prescriptions.\n\n\"You're sure this is what you want?\" there was no judgement in his question, just honest concern.\n\n\"Were you expecting something else? I don't think I'd make a very good 'sissy boi',\" I added hand quotes.\n\n\"Oh, you read about Andre and Charli, what did you think?\"\n\n\"It's a great story, nicely layered, very erotic, lots of romance and hot sex,\" I blushed, \"I have to admit, I had to change my panties. It did have some continuity problems and the writer really loves his comma's,\" I continued, \"but yeah, it was a good story.\"\n\n\"And the other two?\"\n\n\"I didn't get to the third, but please tell me you're not into that bondage stuff, my god, I didn't know how deep that stuff could go, but the detail the writer went into, it has to be real.\"\n\nVictor laughed, \"you don't need to worry about that, my kink stops somewhere around dating beautiful trans women, at least for now, I'm really pretty traditional, I just have an interesting line of work.\"\n\n\"I'm guessing that means these stories are as much about my editing abilities as they are about me separating myself from the stories, then?\"\n\n\"God, smart women are so damned sexy,\" Victor took a bite of his sandwich and grinned at me.\n\n\"You want sexy, just wait for tonight, cowboy,\" I gave him the most devilish smile I could, \"speaking of which, some of us need more time that others to get ready, so why don't you finish that sandwich and walk me home?\"\n\nVictor took one last bite of his sandwich and threw the rest in the trash on the way out the door. It wasn't as bad as the last time he had walked me home, but it was close, we just couldn't keep our hands, and our lips off each other.\n\nHe turned and waved just before he turned the corner, I ran back down the steps to my car and made my way to the closest drug store I could find to drop off my prescriptions and pick up a few last-minute supplies, thirty minutes later I was back in my apartment scouring YouTube videos, trying to figure out how to get ready for what I hoped the new year was bringing with it.\n\nThe six hours I had to get ready almost wasn't enough, I fixed my makeup and did it again, I must have tried on four different bra and panty sets before I finally chose the ones I thought Victor would like best, and it took longer than I thought to prepare my final surprise, if things went the way I hoped they would.\n\nThe look on Victor's face when I answered the door was priceless, the little red dress, and I do mean little, fit like it was painted on, barely covering the tops of my stockings, giving glimpses of the garters holding them in place if I moved or sat a certain way, which I made sure to do just for Victor, my six-inch strappy stiletto's pushed my butt out and accented my legs perfectly, I was so damned sexy I couldn't look at myself in the mirror, I had to figure out how to use tape to tuck things in place just to keep myself under control.\n\nI grabbed my coat and my clutch, took Victor's arm, and let him lead me to the car, being just careful enough when I got in to make sure he got a flash up my skirt, but not too much, I found myself hoping he could drive as he struggle to get comfortable.\n\nDinner was surreal, not just for the food and atmosphere but for the reaction of the other patrons. Victor took me to a French restaurant I had never heard of in a part of town I had never visited and when I gave my coat to the coat check girl, someone dropped a plate and I heard a very audible, \"holy shit,\" from across the restaurant, followed by a woman's voice, \"Henry, really?\"\n\nOK, maybe the six-inch heels were a bit much, but the looks on the faces, especially the men, as the Ma\u00eetre d' led us to our table were so worth it, I couldn't imagine feeling more feminine, more desirable than I did right in that moment. Victor's face beamed with pride as every man in the place wished they were him, well, maybe one or two wished they were me, Victor was hot, too.\n\nVictor ordered for me, Escargot for an appetizer, it took some convincing and the waiter had to show me how to get the meat out of the shell, but it was delicious. Next was a traditional Cesar Salad, prepared at our table by the Ma\u00eetre d' and some type of duck that was so rich and so wonderful I was at a loss for words. The white wine the sommelier recommended was perfect, trust me, I didn't know any of these words when I walked in the door.\n\nI was busy navigating the hazards of peeing in six-inch heels and reattaching my tape when they came in, \"I can't believe he would bring a slut like that in here, it's disgusting, and Henry will definitely be sleeping on the couch tonight. It's so embarrassing.\"\n\n\"I know what you mean,\" the second voice answered, \"that skimpy red dress and those heels, you'd think he picked her up on a corner somewhere.\"\n\nI just sat there; they were talking about me. I immediately started to question every choice I had made all afternoon to get ready for tonight, yes, the dress was short and the heels tall, but I had the legs to pull it off, Victor's eyes told me so when I opened the door. I had checked my makeup so many times it bordered on an obsession, and I knew it was perfect, not garish at all, in fact it was subdued to counterbalance my dress and heels.\n\n\"Oh, so worth it,\" Robin's voice filled my head. I stood up pulled my panties up and tugged my dress down, opening the door to my stall and walking up to the mirror next to the two ladies, you could have cut the tension with a knife. They weren't unattractive, they had just quit trying at some point along the way.\n\n\"It takes work to look like this, a lot of work, but I guarantee you, it is oh, so very worth every minute,\" I touched up my lipstick.\" If you want your husbands to look at you like they are looking at me tonight, give them a reason to,\" I pursed my lips, dropped my lipstick back in my purse, \"you remember how to do that, right?\" I winked at them in the mirror, spun on my toe, and walked out the door.\n\nI told Victor what had happened, and he laughed, \"you really said that to them, asking them if they remembered how to do that?\" I smiled and nodded, waving at the two ladies as they made their way back to their table, one of them glowering at me, the other giving me a little smile and a subtle wave, she looked like she had just refreshed her makeup.\n\nRobin and George had a penthouse in the center of downtown, the view was stunning overlooking the entire city on two sides. A large open floorplan, it easily accommodated the large crowd, an eclectic mix of people, some from her company, including Mike and Jenn, and most from there obviously expansive group of friends.\n\nAs it had at the restaurant, me in that little red dress got a lot of attention when we walked in, Jenn commenting it had never looked that good on her. I got hugs from Robin and George, and of course from Jenn and Mike and Victor introduced me to the people he knew.\n\nWe mingled and chatted with everyone, taking hors d' oeuvres and glasses of champagne from the floating waiters. Victor and I would be together and then drift apart, making periodic eye contact across the room. Even when he wasn't next to me, I could feel his attention from across the room, it was like a cardigan on a chilly afternoon, soft and light, just enough to remove the chill, leaving a subtle warmth in its wake.\n\nTimes Square was on the big screen T.V., when the ball dropped, everyone cheered and toasted with their champagne, Victor pulled me close and buried his lips in mine, \"to new beginnings,\" he smiled at me as our lips parted.\n\n\"New beginnings,\" I smiled back and kissed him again.\n\nHe got quiet for a minute, still holding me as close as he could, \"New Years is magic, you know, all the sins of your past are forgotten in the promise of what is to come, it's the time of beginnings, of new adventures, our lives start over now; you know that don't you?\" He slid his hands around my waist taking mine, \"I've been waiting for this exact moment for so long,\" he let out a small sigh, \"from the instant I first saw you at the Christmas party, I knew I wanted to be here with you tonight; I had to be you, no one else.\"\n\nThere was so much wrapped up in what he said, not just the words, but the way he said it, the look in his eyes, the energy coursing through his body, even the way he smelled, it was all new and fresh, or maybe I just wanted it to be. I didn't have words for the way what he said made me feel, I wrapped my arms around his neck and did my best to suck his tonsils from his throat.\n\nThe party slowly died, and Victor and I said our goodbyes, walking to his car in silence, I was more nervous now than I had been when he picked me up, my mind racing with the implied possibilities of what he had said to me only seconds after the new year began. We shared furtive glances as he drove, neither of us sure what we had just started and neither of us sure where it was going to end up. I had decided many hours ago where I wanted that to be, I just hoped it was somewhere close to what Victor wanted.\n\n\"Stay,\" I gently touched Victor's arm as we stood on the stairs to my apartment, our passionate marathon of kisses and moans finally coming to a halt.\n\n\"Are you sure?\"\n\n\"New beginnings, new adventures, I want them all to start with you, tonight, now,\" my hand slid into his and I turned toward the door.\n\n\"I've never...\" that anxious little boy with the quirky smile was back.\n\n\"Me either. We'll learn together,\" I smiled and squeezed his hand as I led him up to my apartment. I had taken control and suddenly felt a strange sense of camaraderie with Amber, understanding how she might have felt when she caught Eric in that compromising situation, offering him his options, completely in control of everything that happened between them.\n\nIt was as awkward as it was wonderful, Victor and I exploring each other, cautiously touching each other in ways neither of us had ever imagined, kissing, and fondling our ways from one discovery to the next.\n\nVictor slowly took control and it felt wonderful, hiss kisses on my neck as his hands caressed my stomach, slowly making their way lower and lower until one of them slid across my erection and cupped my balls, giving them a gentle squeeze.\n\n\"Mmmmmm, Victor,\" I moaned, closing my eyes as wonderful sensations spread through my body.\n\nHe stroked me slowly, running his thumb aver my glans as his kisses drifted down my chest to my breasts. My forms fell away, and he sucked one nipple and then the other into his warm mouth, nipping and sucking, twirling his tongue around them, driving me insane with his attention.\n\n\"Nnnnnngh,\" another moan, louder than the first, I could feel my arousal growing, my cock leaking into his hand, lost in amazing feelings I had never felt before.\n\n\"Do you want me to,\" he lifted and kissed the tip of my cock.\n\n\"If you want to,\" my voice was timid but my eyes, my soul were burning with desire.\n\nVictor swallowed my small erection without pause, twirling his tongue around my shaft and sucking hard, his hand gently squeezing my balls, there was nothing I could do but lay back and enjoy his attention. Without warning, I erupted in his mouth, shivers and tremors of ecstasy pulsing through my cock as spasms of pleasure tore through my body; it was the first time in my life someone else had made me cum; I began to see how Charli could give himself so completely to Andre.\n\nVictor's lips found mine and I tasted the remnants of what I had done on his kiss, \"that was wonderful, thank you,\" I whispered as our lips parted.\n\n\"My pleasure,\" he looked down at me and smiled.\n\n\"My turn,\" I gently nudged him onto his back and buried my kisses in his neck, my hands running through the hair on his chest, my fingers pinching his nipples as I once again took control.\n\nI found I didn't care that Victor was a man, it didn't matter, he was my lover and I wanted to bring him the same pleasure he had brought me, it wasn't about gay or straight or bi, it wasn't about male or female, it was about giving yourself to someone else, sharing a part of yourself that no one else had ever touched, it was so much more than just sex.\n\nI took my time, exploring every niche, every nook and cranny of his body, I ran my hands over his chest and stomach, up and down his arms and legs, following them with my kisses and caresses, I sucked on his fingers and even his toes, eliciting moans and sighs like I had never heard.\n\nWhen I finally got to his cock, it was slick with clear liquid, his breath was quick and shallow, I knew he was fighting the urge to just let go, to get release, he was waiting for me, I gently kissed his balls and slid my lips up his shaft, relishing the flavor of his seminal fluid, twirling my tongue around his glans.\n\nVictor moaned and I stopped, looking down at his beautiful body, \"can you hold on for just a few minutes more?\"\n\n\"K,\" he was caught somewhere between heaven and hell, and I had put him there.\n\nI kissed him gently and reached for the top drawer of my bedside table, it wasn't that I didn't want him in my mouth, quite the contrary, I had fantasized about how he would feel, how he would taste so many times; there was just something I wanted more.\n\n\"What?' he looked confused when I started coating his cock with the cool lube, climbing ion top of him, and slowly lowering myself onto his shaft.\n\n\"I want to be yours,\" I gasped as his cock pressed against my star, letting out a soft moan as I worked it against the sphincter, forcing in inside me, \"only yours,\" I shuddered as the head popped inside me, \"nobody else's\" It hurt and felt so good at the same time as I slowly took him deeper and deeper inside me, \"I want to be your woman I felt him all the way inside me and lowered my lips to his, pulling out ever so slightly only to drop down again, \"Is that ok?\"\n\nHe nodded biting his lip, his hands finding my breasts, his fingers pinching my nipples as his entire body tensed, he couldn't hold it back anymore, he let out a guttural moan from somewhere deep inside his soul as his body shook underneath me, \"Fuck,\" his voice was soft and breathy.",
        "I smiled down at him as I felt him pulse inside me, his warm juice filling me, I shuddered and let out a soft scream, \"yes!\" collapsing on his chest\n\nVictor held me tight in his arms, gently kissing the top of my head. I could feel him slowly softening inside me, slipping from my hole, a subtle emptiness growing where he had been that I knew I was going to want refilled.\n\nWe lay together without words for a long time, me sliding off his chest and nestling next to him, my head on his shoulder, his arm holding me close, the scent of our sex filling my head.\n\nI woke up looking up into his beautiful brown eyes, his gentle smile all the reassurance I needed that what had happened last night was right.\n\nVictor leaned down and kissed me sweetly,\" not bad for rookies,\" he let out a soft laugh.\n\n\"We could do better, \"I winked and pulled him back in for another kiss, \"but I want you to be on top this time, like a man makes loves his woman.\"\n\nVictor didn't need any more encouragement, I watched as he found the lube and dribbled it on his fingers, smiling as he moved his hand between my open legs, slathering the cool liquid on my eager hole, pressing his fingers inside me, it was more wonderful that my strongest fantasy.\n\nThere was a hunger in his eyes, last night I had claimed him, this morning, he was going to claim me, and I couldn't wait.\n\nWe didn't waste time on foreplay, Victor pulled his slick fingers from my ass, added more lube, and coated his cock. I licked my lips as he moved between my legs guiding his shaft to my waiting rose, moaning as he pushed inside me; god it felt wonderful. How had I lived so long without knowing this feeling?\n\n\"Kiss me,\" I reached out to him as he pushed inside me filling me completely.\n\nHe buried his tongue in my mouth as he bottomed out inside me, his body pressing hard against mine, dominating me in every way he could. I wrapped my arms around his neck holding his lips to mine, sucking his tongue deeper and deeper into my mouth.\n\nWe weren't making love, we were fucking, and it was exactly what I wanted, the raw primal feeling of being taken, Victor's kisses were fierce, his tongue invasive, his hands groping and fondling me, pinching my nipples while I dug my fingers into his back, wishing I had long nails to leave a remembrance of our unbridled passion. He was taking everything I had and making it his\n\nI felt my cock surging between us as his pelvis rubbed against it, driving me to my own orgasm as I became aware of something else was building deep inside me, a feeling new and unfamiliar but oh so nice, a feeling I somehow knew was going to change me forever.\n\nMy cock spurted thick hot juice between us as tremors ripped through my body, Victor upping his pace, thrusting into me harder and harder, the strange new feeling spreading through me like a wildfire, filling my body, my arms and legs, my very soul with wave after wave of pleasure.\n\nVictor's body finally went tense as he thrust his shaft as far inside me as he could, the sticky mess I had made between our bodies hanging from his stomach in long strings, \"Oh yes!!! FUCK!!!!\" he screamed, my cock spewed again and my entire body spasmed and trembled as his pulsed deep inside me, filling me again with his seed.\n\n\"Ricki, god I love you,\" he whispered as he collapsed on top of me.\n\nI didn't have words for what had just happened, I held Victor on top of me, using my legs and feet to keep him inside me as long as I could and covering his face with soft gentle kisses.\n\nCompletely sated and covered in sweat and cum, we made our way to the shower, taking our time to further explore each other as we gently cleaned the residue of our passion from our bodies.\n\nI marveled in the way small droplets of water clung to his body hair like small crystals in the light while relishing the feeling of the hot water sheeting across my smooth body, smiling at the contrast of his alpha male masculinity and my slight form. We kissed and fondled each other in the steamy mist, making sure to clean every inch of each other before the water started to cool.\n\nI sat on the side of the tub as he reached to turn the water off, taking his manhood in my hand and using it to turn him to face me, \"I think I still owe you something,\" I smiled up at him as my other hand cupped his balls.\n\nIt was both an act of control and submission as I licked him from base to tip, twirling my tongue around his glans as he had mine. Cautiously, I took him in my eager mouth, drooling like a hungry beast in anticipation of what was to come. He felt so good on my tongue, the pink spongy head and the soft skin that covered his gently growing erection, I couldn't help but moan as it glided across my tongue, deeper into my mouth until I had to stop.\n\nVictor's fingers ran through the wet hair on the sides of my head as he encouraged me to continue, he may have been bigger and stronger than me, but I knew that I was truly the one in control. I would never be a sissy like Charli or a true submissive like Eric, but I was starting to understand the attraction those roles held; I knew what it was to be owned completely.\n\nWhat Victor had done to me this morning, the way he had fucked me, used me, dominated me was what we both wanted, I needed him to be the strong alpha male to reinforce my growing feminine side and I also knew that he would do anything I asked in return.\n\nFaster and faster, I moved his hardening cock in and out of my mouth, stroking the shaft I couldn't reach with one hand while fondling his balls with the other as his rich musk slowly emerged from behind the fresh clean scent of our shower; I could feel myself start to harden.\n\nVictor tried to take control, and I squeezed his balls a little more firmly and he relented, it was my turn to dictate his pleasure. Worshiping him with my hands and mouth, I kissed and licked his shaft, sucked his balls, teased the slit at the tip of his glorious meat all the while listening to him moan and sigh.\n\nI felt him get close and backed off, I felt him try to take control again and gently persuaded him that was not a good idea.\n\nI remembered a passage from the story about Andre and Charli and took him to my gag reflex, trying to cough or swallow as I did, I got him a little further than before and tried again before taking him out of my mouth and spending a few moments worshiping his testicles.\n\nOnce, twice more I tried and failed before it happened, I shot my juice all over his leg as Victor slid down my throat, it was my third orgasm this morning without touching myself.\n\nDropping to my knees, I looked up and locked my eyes on Victor's, he was in both ecstasy and agony, I drove him down my throat and squeezed his sack, I used my tongue to touch every part of his cock I could reach, I pulled him from my throat and teased his glans and then drove him balls-deep to do it all over, never letting him finish.\n\n\"Ricki, please?' he was begging me to let him cum.\n\nSlipping my hand between his legs, into the crack of his ass, I slid a single finger into his hole, curving it forward just enough to find his prostate, \"Ricki, I'm, I can't... \"his body tensed, and I swallowed him completely, moaning loudly as spurt after spurt of his seed shot down my throat into my stomach.\n\n\"Fuck me,\" Victor whimpered as he dropped to his knees, tears in his eyes, pulling my body as close to his as he could.\n\n\"I don't think I'm big enough,\" I laughed as I spread kisses across his shoulder, \"but you're welcome to fuck me anytime you want.\n\n\"I can handle that,\" he smiled and pulled my lips to his, kissing me gently, it was the perfect accent to the raw intensity of everything else we had done that morning.\n\nWe finally got dressed and managed to make it to Robin and George's country club just in time to meet them, Jenn, and Mike for brunch. No one asked and Victor and I didn't offer but I was certain the look on my face let them know I had been thoroughly and completely fucked at least once since we last saw each other. Jenn smiled at me knowing full well she would get all the details later.\n\nThe way Victor doted on me and the way I glowed at his attention made it even more clear that it would not be the last time.\n\nBack at my apartment, I packed a small suitcase of necessities and grabbed my computer, I was going to spend the rest of the weekend with Victor. We settled in almost immediately, since he owned the company, he always had some work to do, so while he checked emails and reached out to a few writers that owed him books or stories, I read the third short story he had given me, a delightful love story about two transgender women, a pink dress with flowers on it, and their journey to happiness;, their wedding was so beautiful.\n\nVictor walked into the room, and I was bawling my eyes out,\" So, you like the third story?\" he sat down next to me and wrapped me in his arms.\n\n\"I want to be that happy,\" I nodded, sniffling, and trying not to wipe my nose on his shirt.\n\n\"Yeah, I cried, too,\" he kissed my forehead, \"so what do you think?\"\n\n\"I don't know, I've read it three times, I know how it ends and it still makes me cry,\" I laughed.\n\n\"Just wait until your hormones kick in and you start to get emotional,\" this time he kissed me on the lips.\n\nAfter the fourth reading, I was finally able to edit the third story and Victor told me I had the job if I wanted it. I said I did, and we spent the next few hours talking about what that would look like, a lot had changed since he first mentioned it, there was a difference between dating the boss and living with the boss.\n\nVictor's apartment was half of the top floor of his building, yes, he owned the whole building, and more than twice the size of mine. I never went back to my apartment except to pack and move everything I needed to Victor's.\n\nI fit right in with the other editors, we shared a cozy space with three desks, two overstuffed sofas, a bunch of throw pillows, and a cabinet full of Kleenex. I found that getting paid to read porn and erotic fiction was a lot better job than the one I had, and it did spice up what happened between Victor and me in our bedroom quite a bit.\n\nI liked him dominating me when we had sex, it made me feel more feminine, but I drew the line and any violence or degradation; no whips, no nipple clamps, none of that, and no calling me whore or cocksucker or cum slut either.\n\nHe slapped my ass while he pounded me from behind and that was actually very hot, but there were no riding crops and no tying me down; except for the few times we took turns with the handcuffs.\n\nThings changes a little when my hormones started to do their thing and I got real boobs, they changed again when Victor bought me slightly bigger ones; I could let him spend hours squeezing, kissing, and sucking on my tits, pinching my nipples, and drooling all over them, even fucking them as I squeezed them together around his cock, it was just one more way he could make me cum without touching myself.\n\nI still set the rules, but he pushed the boundaries every chance he got. If I needed to, I could always pull out what he called my blow job torture and remind him who was really the boss. To be honest, I think he really liked it when I made him beg to cum and the payback always rocked my world.\n\nMike took Jenn to Jamaica and proposed, and Jenn asked me to be her maid of honor, describing the destination wedding on the same beach where Mike proposed, just the bridal group and the families of the bride and groom which included Grandma Emma and Papa Joe and all my adopted aunts, uncles, and cousins, as well as Mike's extended family, I thought about my own family and how it had ended so badly when I told them what was happening.\n\nHoping there could be a reconciliation, that maybe they had changed their minds, I called my mom,\" Mom, it's Ricki,\" I started.\n\n\"Don't call here again, my son is dead,\" she hung up on me. I was devastated.\n\nVictor found me in a fetal ball crying and sucking my thumb like an infant, he laid down next to me and just held me until I was able to tell him what happened; it took months for me to come out of the depression I fell into.\n\nI didn't go back to work and our sex life dried up like a desert stream; Victor didn't care.\n\n\"All in good time,\" he would reassure me, giving me all the space, I needed, and just holding me when it got to be too much.\n\nRobin was a bridesmaid and Dress shopping with her and Jenn and was fun, the dresses were beautiful.\n\n\"So worth it,\" Robin and I laughed. She now knew the full story and it hadn't changed her opinion of me in the slightest.\n\nI did my best to put on a good face for Jenn and promised I would never let her down, but the pain of what my mother had said to me ran deep and I was more melancholy than happy, everyone knew it and they put up with me anyway; I had people that really cared about me, and slowly, I caught myself smiling and laughing again.\n\nSince I was the maid of honor, Victor's and my room was a suite with an amazing view of the beach and the ocean beyond, we stood on the balcony the first night staring at the moon over the water, Victor's arms wrapped around me holding me tight as I leaned my head back against his shoulder,\" why do you put up with me, I'm sad all the time, we haven't had sex in months and I don't even have a job?\"\n\n\"I told you that morning when you gave yourself to me, I love you, it's what you do when you love someone,\" he kissed the top of my head.\n\n\"But I never said it back,\" I could feel something inside me breaking.\n\n\"Doesn't matter, love freely given doesn't have to be returned,\" I turned in his arms and buried my face in his chest.\n\n\"I do, you know, love you,\" I was crying and didn't even understand why.\n\n\"I know, I've known for a long time. Everything you do tells me how you feel, words aren't necessary,\" I could feel his tears dripping on my shoulder.\n\nWe went back inside and crawled in bed close to each other, kissing and canoodling, just being there for each other.\n\n\"Tell me about your family, you never talk about them,\" I rolled onto my back.\n\n\"I was an only child and my parents died in a car crash when I was in college, you're my family, you, Mike, Jenn, Robin and George, that's all the family I need,\" he hugged me tight.\n\n\"I'm sorry, I didn't know, I guess we're both alone then, huh?\"\n\n\"What do you mean, alone?\"\n\n\"Well, you lost your parents and my family disowned me, so we're alone, no family, I guess that's why we fit together so well,\" I let out a long sigh,\" I'm glad we found each other.\"\n\nVictor sat up and gave me the strangest look,\" Alone?\" he said it again, \"get up and get dressed, I want to show you something.\"\n\nHe climbed out of bed and grabbed his pants pulling them on, \"come on,\" whatever it was he was serious.\n\nI pulled on the sundress the sandals I had worn earlier and followed Victor as he headed out of the room. I could hear the commotion before we got to the lobby, Mike's family was almost as big as Jenn's, they were all sitting around a piano in the bar, laughing and drinking, listening to one of Mike's cousins play and sing.\n\nGrandma Emma saw us first and ran across the room, wrapping me in a huge hug, \"Ricki, I'm so glad to see you, Jenn said you were tired from travelling,\" she paused and looked Victor up and down, \"and this is the Victor I've heard so much about, well, come on you two, everybody wants to see you,\" she dragged us across the room to the piano.\n\nPappa Joe came over and hugged me, pulling Victor off to the side for a little chat and a group of Jenn's female cousins surrounded me asking if that was 'the' Victor, the one that had called me at Christmas. There were comments about how handsome he was and requests that If I got tired of him to let them know because they would definitely take him off my hands, I raised an eyebrow and let them know in no uncertain terms that I was never letting him go.\n\nThey pretended to pout, and we all laughed, we were back in the bunkhouse over the garage all over again chatting and laughing and talking about boys, I found myself fondling the necklace that Jenn had given me for Christmas, the words Gramma Emma told me echoing in my head, \"you are family now,\" I was crying again and my cousins were trying to console me which only made it worse, I finally got out that they were tears of happiness which made them start crying too.\n\nVictor's arms wrapped around me,\" what happened, why is everybody crying? Are you ok? Ddo you want to go back to the room?\"\n\nI shook my head no, \"We're just all so happy to be here with our family, I sniffled and finally stopped crying, I think I want to stay a bit longer; you go ahead if you're tired,\" I pulled his arms tight around my chest.\n\n\"No can do, I'm under strict orders from Papa Joe to not let you out of my sight for at least the next fifty years,\" he laughed, \"so, you still feel alone?\"\n\nI turned in his arms and hugged him hard,\" Victor, thank you for reminding me,\" I slid my arms up around his neck and pulled his lips to mine.\n\nWe stayed until the hotel manager made us clear the room, and it took him thirty minutes to do that; it was almost four in the morning before we finally climbed back in bed and fell asleep.\n\nVictor found me on the balcony the next morning just staring out over the ocean,\" hey,\" I said as he wrapped me in his arms.\n\n\"Hey yourself, what's on your mind?\" he kissed my cheek.\n\n\"Just thinking about everything, You, Jenn, Mike, my family,\" I took a breath, \"I mean my real family, this family; how lucky I am to have so many people love me the way they do. I thought about writing my mom and dad a letter, but you can't change people like that's minds, can you?\" it was a rhetorical question, \"they're good people, just misguided, maybe one day it will change but it's up to them. It still makes me a little sad, but what can I do?\" I turned in Victor's arms, pressing my body close to his,\" what can I do?\"\n\nMy hand slid down his chest to his crotch, his morning wood long and hard, standing proud between us,\" what can I do?\" I smiled up at him as I slowly slid to my knees.\n\n\"Um, Ricki, we're on the balcony, what if someone sees us?\"\n\n\"Goody for them,\" I laughed and pulled his boxers to his feet, grabbing his cock and driving it down my throat. Fifteen minutes later, he was leaning against the railing moaning loudly, begging me to let him cum, when I slipped two fingers in his ass and pressed on his prostate, I was convinced the people in Kingston heard him scream.\n\nIt was supposed to be a rest and relaxation day, and for almost everybody, it probably was, Victor and I had months of stuff to catch up on and wen never left our room, we made love, he fucked me, and I made him scream a couple more times, which meant he had to fuck me again and them make love to me for being so rough. I don't know where his stamina came from, but he never quit.\n\nThe next day at the wedding, I couldn't stop smiling, or course, I told Jenn all about it as we waited in her bridal tent on the beach, \"don't worry, I think your turn is coming,\" I laughed when she pretended to get jealous.\n\nI knew for a fact that she and Mike had gotten into some pretty kinky stuff since I had started telling her about the stories I had edited for Victor, there would be plenty of moans and screams from their room tonight, I was sure.\n\nThe wedding was perfect, I caught Victor giving me a funny look when the minister told Mike he could kiss his bride, Grandma Emma and Papa Joe were looking at me funny too, I was going to have to figure out a way to get some details on just what Victor and Papa Joe and talked about; I didn't think it would be too difficult.\n\nThe wedding party was booked for a week at the resort with Jenn and Mike staying for another week after we all went home. Victor got a crash course in my, well Jenn's and my family, and we all figured out that Mike's was just as much fun. Those that didn't know about me, quickly found out and nobody cared.",
        "The only embarrassing moment came when one of Mike's nephews, five-year-old 'little Mike' saw me getting out of the pool, my bikini bottoms not holding things in place quite like I thought they would, \"Mommy, that girl has a peepee like me,\" I turned crimson, looking for a hole deep enough to protect me from the fall out.\n\n\"Yes, she does, sweety, some girls have them and some girls don't, everybody is a little bit different, we talked about that, remember?\" Mike's sister Sarah, smiled at me and winked.\n\n\"Ok, mommy, she's really pretty, do you think she would take me to get ice cream?\"\n\nI decided little Mike was going to get all the ice cream he could eat.\n\nThe rest of the week was a blur of hanging out on the beach playing in the sun, shopping with Jenn and my cousins, dancing and drinking in the bars, and fucking and sucking Victor for all he was worth. The most challenging thing I had to deal with was walking straight in the mornings after Victor had his way with me, in other words, everything was perfect.\n\nThere was a huge going away breakfast the morning that the wedding party left, lots of hugs and just as many tears, Papa Joe gave a nice speech which meant that Mike's dad had to give one, then an uncle, then a few more, just when it looked like everybody was finally ready to say goodbye, Victor got up and took the microphone,\n\n\"Listen, I'm just a guest to this event and I just want to say thank you to Mike and Jenn for letting me be a part of all this craziness,\" he grinned, and everybody laughed,\n\n\"Seriously, though, if it weren't for them, my life would be completely different, like I said, I owe them for allowing me to be a part of this wonderful moment and for letting me meet all of you, some of you I have gotten to now pretty well and others I hope to over time,\" he paused and looked at Mike and Jenn and then at Papa Joe, Papa Joe smiled and nodded.\n\n\"There are just some things that need to be shared with family,\" he continued, \"and with apologies to Mike and Jenn for maybe stealing a bit of their thunder, I asked permission to take a little of your time this morning for just one of those things,\" confused glances flew around the room as Victor walked through the crowd, microphone in hand,\n\n\"Jenn, last November you and Mike set up your best friend to go to a party as a girl and that night changed my life,\" he was walking back toward me, \"I met a beautiful woman in a purple dress and lost my heart on the spot,\" he smiled at me,\n\n\"Now, there were a few details I didn't know,\" Victor blushed as a few giggles spread across the room followed by a low murmur as people started to figure out what he was up to; I couldn't breathe.\n\n\"But I knew this,\" he continued to move closer and closer to me, \" she would be in my life forever, if I could only convince her to have me, the rest was just details, so Ricki, honey, my love, my life,\" he dropped to one knee in front of me, setting the microphone on the ground and pulling a ring the size of Dallas out of his pocket, he didn't even have to ask, I leapt into his arms and tackled him, covering his face with kisses.\n\nThe room erupted in cheers and we were surrounded by, well, everybody congratulating us and telling us how happy they were,\n\n\"Ricki, I'm so happy for you,\" it was Jenn, Mike right with her, kneeling next to me and wrapping me in a huge hug.\n\nVictor had managed to slip the ring on my finger and when I saw it, I broke down again, I had cried more in the past week than I could ever remember crying, all tears of happiness.\n\n\"So, this is what you and Papa Joe were talking about,\" I smiled at my new fianc\u00e9.\n\n\"I told you he made me promise not to let you out of my sight, didn't I?\"\n\nThe world I came home to was so different than the world I left, I was happier than I had ever been in my entire life, Jenn and Mike were married, I had a fianc\u00e9 that was a guy, and a whole new extended family. I also learned that while girlfriends and live-in partners were acceptable to work at Victors company, fianc\u00e9s aren't. I was pretty sure he made that one up, but it was his company, so his rules.\n\nAfter about two weeks I was going absolutely crazy looking for something to do with my time.\n\nAs usual, I was hanging at Halftime, watching a rerun of last year's conference championship game, bothering Jenn, and showing off my ring to all the waitresses that had seen it a hundred times when Oscar the manager came by the table and slid an application in front of me.\n\n\"You're in here more than some of my waitresses, why don't you at least get paid to be here?\" he looked at me and I knew he was right. I knew the menu better than most of the people that worked here, I knew what beers they had on tap and what they had in bottles and what booze they made the most profit from if the waitress got an upsell, I had practically lived here for years, I knew everybody and they all loved me, so why the hell not?\n\nI called Victor and told him what I was going to do figuring that he'd either say yes now or after I had had him I my mouth for about fifteen minutes, either way worked for me.\n\nHe agreed promising to come see me for lunch and flirt with me, grab my butt and leave me a huge tip, I reminded him I had a fianc\u00e9, and he was big and strong, and I was madly in love with him, so he had better watch out.\n\n\"I love you, too,\" he laughed. I never got tired of hearing him say that.\n\nI filled out the application and Oscar gave me a uniform, telling me I could start tomorrow, and that Jenn would make sure I really knew as much as I thought I did.\n\nIt wasn't as easy as I thought but I picked it up quickly, it wasn't long before I understood why Jenn had worked here for so long, it was a blast, the girls were great, the money better, not that I needed it, and all the attention from the guys, even though I had a huge rock on my hand, was intoxicating. Victor kept his word and was the only one I let even get close to grabbing my butt.\n\n- epilogue --\n\nJenn was pregnant and she and Mike had decided that stay at home mom was going to be her job, so she had quit and was spending most of her free time helping me plan my wedding, that's what maids of honor do, right?\n\nMy family still hadn't come around and I had accepted that they might never do so, but with the family I had, it didn't bother me as much.\n\nFootball season was in full swing, it was rivalry weekend, and, of course, I was hanging out at Halftime with Jenn, Mike, and Victor waiting for the game to start, wearing my lucky team jersey, strategically ripped, and tied to show off as much of the new boobs Victor had bought me as it could.\n\n\"Game on, ladies,\" the bartender yelled across the restaurant, it was time for me to get back to work, Jenn and I laughed at how much had changed yet how much was still the same, it had all come full circle, just the roles had changed.\n\nIt was a Gameday Saturday, I was at Halftime with my friends, where else was I going to be, especially now that I was a Halftime Girl?\n\n***\n\nThanks for reading, and please remember to leave that comment, it's why I write."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "sissy",
        "trans",
        "crossdressing",
        "fetish"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/halftime-2"
}