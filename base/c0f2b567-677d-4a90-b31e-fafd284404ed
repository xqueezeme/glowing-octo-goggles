{
    "title": "The Witches of Huntington",
    "pages": [
        "The Witches of Huntington.\n\n\"Bad Brad Schilty, shot his wife. Shoulda been found guilty of murder and been in prison for life.\"\n\n\"Instead, the prick got rich, after he was done killin the bitch.\"\n\nYeah, I heard the words many, many times. The kids in my neighborhood sing or at least sang it aloud over the years.\n\nMy wife Kellie and I got married when we turned 22. It was a fun ceremony held in Las Vegas. Her parents, my parents and a handful of good friends. Lots of partying. Lots of sex. Lots of love.\n\nWe both worked in downtown Chicago, which was a big change from the small towns that we came from. Big city life was way more fun. We made new friends. New adventures. New everything.\n\nFriday's and Saturday's were date nights for us, which meant a trip to a restaurant or pub somewhere downtown in the Loop. It was a ritual that continued even after Kellie found out that she was pregnant. The drinking and partying stopped, but date nights continued. It was on one of these nights that the song got its start.\n\nChicago has a long-standing tradition for St Patrick's Day. The whole city goes crazy for the event and we happened to get caught up in the chaos.\n\nWalking along South Wabash, a sting operation for some local drug gang went bad and we were stuck in the crossfire. Kellie was shot twice, and I was shot once. Sadly, hers were fatal.\n\nThe trial lasted for months with our names and reputations being dragged through the mud. I couldn't leave my apartment without some sort of media attacking or following me. If it wasn't the media, it was the police. Turns out that ours was a story that everyone wanted to hear. In the end it was found that the bullets that struck us, came from the firearms of law enforcement, they did everything in their power to tarnish us. They said numerous things that were very unflattering and up until the bitter end, tried to clear their names. The only thing that saved us, well me I guess, were eye-witness testimony and the word of the pub owners where we had eaten earlier. The jury did not take kindly to the lies and blatant perjury laid out before them. They held the city accountable and handed out a very large settlement. It was appealed, but when it was done, an agreement was made.\n\nIn the end, I left Chicago behind along with my memories of Kellie and my unborn child.\n\nI should have taken the advice of my father and moved far away. Somewhere where no one knew me. Somewhere that I could have a fresh start. Instead I chose to move back to my hometown. It was a mistake that haunted me for many years.\n\nThe house that I bought was a big old place on a big piece of land. Big by city standards that is. The house was in an ill state of repair. I could have afforded better, much, much better, but I wanted something that would occupy my time and this place was just the ticket.\n\nSo, there I was. Almost 24-years old. A widow, single and a new homeowner. Some might say \"fuck my life\", but I was trying to keep it together.\n\nTime rolled by slowly. The home renovation part of my life was finally over, and even though I didn't need to, I worked part-time for the firm that I had left behind in Chicago. My tormentors seemed to dwindle in numbers as the days, months and years passed. The only ones that kept up with antagonizing me were a group of teenaged girls led by a little bitch named Jade. Honestly, who in white bread suburbia names their daughter Jade?\n\nJade must have been all of 14 or 15 when I moved home. Her parents lived 5 houses down and on the opposite side of the street, but that never stopped her from the routine harassment. For years to come, her gang of little witches would soap my windows, egg my house and car. But it was never anything that caused permanent damage or would get them caught.\n\nThough the gang warfare on my street continued, I have to admit that when it slowed to a point where it had almost disappeared, I missed it.\n\nA waving arm alerted me that someone was trying to get my attention. Claude Lemay and his family moved into their place around a year after I had, and we had become fast friends. He and his wife May were older than me. They had 3 kids, all girls, two of them, immediately became \"little witches\" when they moved in. Sometime later, Elle had matured out of that phase of her life, but Francine, was also Jade's best friend, remained, but she was harmless when Broom Hilda wasn't around.\n\nTurning off my mower, I walked over to the fence.\n\n\"What's up Claude?\"\n\n\"You goin over to the McAlister's tonight?\"\n\n\"I wasn't invited, so I'm guessing no.\"\n\n\"Well guess again. For sure you were invited. Read an e-mail once and awhile and you would know these things.\"\n\n\"I'm fairly certain that John and his wife don't have my e-mail address and I'm not on Facebook, so, even if they wanted to, there's no way for them to get in touch with me.\"\n\n\"May gave them your info. It's Jade's birthday. McAlister's doing a pig roast and a big side of beef. Plus, the cheap prick has a keg of beer chilling.\"\n\n\"Nah, I have never been to any of her other birthday parties. I'll probably pass on this one too.\"\n\n\"Your call, but everyone will think that you're a dick. A guy's daughter only turns eighteen once.\" I nodded my acknowledgement. I knew what Claude was saying, but I still didn't have any interest in going. \"Remember something else. Franny's birthday is in less than a month, so it's going to look really shitty when you show up at my place and not McAlister's. You got off the hook for Eleanor's, because we had just moved in, but this one...I'm not so sure my friend. Plus, going might help you prepare for all those crazy girls running around at Franny's party.\"\n\n\"We'll see.\"\n\n\"Yeah, yeah. Drop over for a beer when you're done the grass and I'll set you straight.\"\n\nThe constant drone of the mower's engine didn't do anything to help my sudden headache. Although I hate no one, Jade was very close to being my first. I truly disliked her and her friends, including Claude's daughter. But he was right. He always was. If I didn't go to Jade's 18<sup>th</sup> birthday party, I would be burning bridges that I wouldn't be able to repair.\n\nSure enough, the invitation was in my \"inbox\". It was \"Best Wishes Only\", but we all know what a crock-of-shit that is. The start time was slated for 5:00pm, so I had plenty of time to get ready.\n\nClaude was in his garage. He was always in his garage. It was the only place where he was free from the constant nattering of 4 women.\n\nFlopping down in the chair next to him.\n\n\"So, what do I bring?\"\n\n\"Gift cards. These little bitches love gift cards.\"\n\nThe local drug store had every gift card on the face of the earth. If it hadn't been for Franny telling what to get, I would have been dead in the water. $100 worth of cards all crammed into a card worth $3. Signed, sealed and soon to be delivered.\n\nI walked over to Jade's house with the Lemay's and 2 of their daughters. The oldest and the youngest, Franny the middle daughter, was probably already there. May curled one of her arms in Claude's and one in mine. Chained together, she started singing, \"we're off to see the wizard...\" Neither of her daughters found any humor in it.\n\nClaude and May's daughters were all lookers. They had very similar features. Strong healthy appearances. Longer dark hair, with strikingly bright blue eyes. Eleanor, the oldest, was 22-years old. She was a heartbreaker. There was always a line-up of gentlemen begging for her attention, and it didn't take a genius to figure out why. She was very pretty, had a nice athletic body, and she was smart. Like I had said before, she, at one time, was one of the original \"Witches\", but it only happened a few times. I could see the hurt in her eyes when she was singing the song. And with her being a few years older than the others, she had many different interests. Franny was the spitting image of her oldest sister, but the 3 years difference in age had her at a maturity disadvantage. Franny was also very pretty, but she was not nearly as filled out as her older sister. She was still a \"Witch\", second in charge if you checked the pecking order. The youngest Lemay girl was thirteen and jealous of her sisters. She had zero interest in being mean.\n\nThe McAlister's invited us into their home with open arms. Most of the neighborhood was standing or sitting around in their backyard. They had a bartender making drinks, and pulling cold drafts, while the sweet smell of charred animal flesh filled the air. Jade was in full princess mode. Her light brown, almost blonde hair was pulled back behind her ears with a flower headpiece holding it in place and she was also dressed to impress. She had on a black bikini top and a long flowing pink linen skirt. The kind that doubles as a beach wrap. Her heels were at least 4 inches high, putting her way taller than she was. Her hip pressed the table where she was standing. The table held a lacy bucket where people were dropping cards and it also served as somewhere for placing gifts. So much for the \"Best Wishes Only\" part of the invitation. She had huge hugs for everyone in our group, everyone but me. The floral crown, had her acting a lot like a princess on her special day\n\n\"Killer. What brings you here tonight?\"\n\n\"I was invited by your parents.\"\n\n\"Why the hell would they invite you?\"\n\n\"Well, they plan on putting a contract out on you if you misbehave tonight.\" 2 could play this game. \"Offered to pay me for doing some dirty work, but I told them, fuck it, I have so much money, I'll do this one for free.\"\n\nThe birthday girl snapped her head back and gave me the weirdest look. This was the most that I had ever said to her at one time.\n\n\"Maybe I'll get you to do them for me.\"\n\n\"Nope. I never default on a promise, so if you see me signing any paperwork, run.\"\n\n\"Very funny Killer.\" Her chuckle had the slightest tremble to it.\n\n\"If it's so funny, then why's no one else laughing?\"\n\nJade looked from side to side at her entourage of little witches. She was too baffled to speak.\n\n\"Ok, enough tormenting the birthday girl. Let's go get a beer.\" Claude had me by the arm, pulling me out of harms way. He knew very well that over the years Jade and I had had many run ins. When we were almost out of range, Jade shook my envelope and yelled.\n\n\"What's in the card Killer, Anthrax?\"\n\n\"No, but when you open it, make sure that no one else is nearby. Don't want anyone else getting hurt.\"\n\nThe Lemay's saw no time like the present to get in on the drinks and food. Claude wanted to \"beat the rush\". So, with a plate of BBQ and a large glass of draft, we found a picnic table to our liking and sat.\n\nThe steady herd of guys anywhere from 18-years old and up kept passing our table, and it was driving Claude, crazy. At one point, I was sure that I heard him growling.\n\n\"Are any of those guys your boyfriend Elle?\"\n\nBefore she had a chance to answer, Claude did it for her.\n\n\"Look at her. Our Eleanor is way too good for any of the hillbillies in this town. She is going to marry rich when she graduates college.\"\n\nA \"Jesus, dad\" and \"Really Claude?\" came from Elle and May at the same time.\n\n\"What?\" he played innocent, but the damage was already done. \"Is it too much to ask for a man's first daughter. She deserves the finest.\"\n\nIt wasn't my place to say so, but I did agree with him. She was way out of most of these guys league.\n\nAs far as teenaged girl's birthday parties go, it wasn't bad. Lots of food and lots of drinks. Everybody appeared to be having a good time. Dancing, doing Karaoke and swimming. It looked like my night would be uneventful after all.\n\nUnfortunately, shortly after 10:00pm, Claude hit a brick wall. Too much sun during the day, and way too much beer after dark.\n\nMay and her youngest daughter said their good-byes and helped poor old Claude home. Franny and Elle stayed to enjoy themselves.\n\nI found myself in an uncomfortable position. Not one of the parents. Not one of the boyfriends. I mean, I talked to lots of people, but I was lost in the crowd.\n\n\"Well Killer, it's almost midnight and I'm still alive. You plan on doing it tomorrow, the day after my birthday?\" My nemesis was at my side.\n\n\"Yeah, no sense ruining a fun night. I'm actually enjoying the wait.\"\n\n\"Bad Brad Sc...\"\n\n\"Shut the fuck up Jade. You're such an asshole. That shit got old a long time ago.\" I was surprised when Elle spoke. I didn't even know that she was near me.\n\n\"Fuck off Elle. It's my party.\"\n\n\"So, you think that gives you the right to be a cunt? Grow up and knock off the fucking bitch routine.\"\n\n\"Screw you Elle, I'll...\"\n\n\"You'll what? One more stupid word comes out of your yap and I'll punch you right in the mouth. Then that fucking retainer of yours won't fit anymore, and you'll be living with that dumb overbite for the rest of your life.\"\n\nOh my god. Catty. Jade screeched, started to cry and bolted.\n\n\"I'm telling mom what a bitch you are, Elle.\" Apparently, Franny wasn't too happy with the treatment of her best friend.\n\n\"News flash, Fran. She knows, and that's why she left me here to babysit your dumb ass.\"\n\nFranny left the scene the same way that Jade had.\n\n\"Wow! It must be all that red hot French blood in you that gives you a temper. You really know how to clear a room, or in this case, a backyard.\"\n\n\"Bitches. Both of them. Let's get a drink.\"\n\nMidnight hit and the party was over. It was Franny's curfew. Her time was up, so Elle wrangled her, and we headed home. It wasn't that far to go, but it was indeed far enough for them to get into another argument. With each of them shouting \"fuck you\", Franny ran home ahead of us, crying.\n\nThere was an uneasiness with Elle. Something was bothering her. She didn't look happy at all.\n\n\"Elle, is everything okay? You look pretty tense.\"\n\nWithout hesitation, \"No, not really. I can't wait to get back to school. My mom took over my room while I was away at school and now...now a share a room with that little bitch. I have zero privacy. I can't even...\"\n\n\"Can't even what?\" It came out before I could stop myself. It was sexual tension. I could see it now that I opened my eyes.\n\n\"How old are you Brad?\"\n\n\"Right now, I feel very old.\"\n\n\"So, you still jerk off right?\" No way was I answering that. \"I mean, we never see women going into your house, so you must be taking care of yourself.\" Still not answering. \"So, imagine not being able to because your sister shares a room with you.\"\n\n\"Well...I... I guess that...I...\"\n\n\"Look, it's a normal thing. I'm twenty-two. I had a few drinks tonight. I'm horny as hell and there's nothing that I can do about it.\"\n\nShe had stopped under a streetlight. Her dark hair gave off a blue tint from the light. I could see her breasts heaving under her t-shirt. Her tanned, toned arms and legs looked primed and ready for a fight. Every inch of her body was tensed up. And to top it off, she was on the verge of tears.\n\n\"Brad...\"\n\n\"Yeah?\"\n\n\"I'll give you twenty bucks if you make me cum.\"\n\n\"What?\" I had heard her clear as day. She spoke in an unmistakably clear voice. One dripping with sexuality. Make me cum, and I will pay you for doing so. \"Elle, as much as I would love to...\"\n\nMy feet were already moving. I left her behind and headed to my house. I wasn't running, but I was very fucking close to it. I needed a place of safety. Unfortunately, my house wasn't it. Elle followed me home.\n\nI entered through the unlocked side door. I didn't turn on any lights, nor did she, but I heard the deadbolt click.\n\nIt was a dangerous game. My good friend's daughter wanted me to pleasure her, and I was more than a little tempted to do it.\n\nThere would be no more contemplating it. Elle pulled her t-shirt up over her head, exposing her pale green bra to me. She tossed it my way and headed down the hall.\n\n\"Elle, please don't...\"\n\nAlmost sprinting up the stairs, she disappeared from my sight. I knew that I shouldn't do it. Claude and May had been so nice to me. I knew I should stay put, yet I was rock hard in my shorts as I tracked her into my room.\n\nHer panties were the same color as her bra. Standing at the end of the bed she looked at me with big puppy dog eyes. It was a look of want and need.\n\n\"Elle, what do you want me to...\"\n\n\"I don't care. Use your mouth, use your cock, use anything but fingers. I'm tired of fucking fingers.\"\n\nThe bra snapped free when she reached behind her back and freed the clasp. Seconds later the panties followed. Standing naked before me, I couldn't help but moan. She was spectacular. I went from knowing I shouldn't do it, to praying that I wouldn't do it, in a heartbeat.\n\nLarge, but not overly big breasts. Toned, athletic body and legs, with a small tuff of hair at the top of her slit.\n\nI should have turned and ran. I should have been stronger. I needed to be stronger. But in the end, I was a weakling who was pulling himself free of his shorts.\n\n\"Nice. Not to bad at all. I wished I'd known 3 or 4 years ago. I woulda forced you to do me back then.\"\n\nA perfect view of her glistening pink gash was right in front of me as she climbed onto my unmade bed. Elle fluffed the pillows to her liking and rolled over onto her back. Leaning back on her elbows, she used her curled hand to beckon me forward in a \"let's get this show on the road\" motion.\n\nHer naked skin burned against mine. She was a hard ball of fire. When our lips met, her teeth clenched me in a death grip. Pain and excitement shot through me. I could smell the stale beer on her breath, masked only by the minty gum she had chewed earlier. We moved our bodies until they were molded together, and the tip of my cock could feel her wet opening.\n\nElle used her hand to put me where she wanted me. I pushed in doing exactly what we both wanted and needed. Not once did her eyes leave mine.\n\n\"Sooooo good.\"\n\nMy new lover was not a virgin. I had suspected as much, but she was still very tight. There would be no foreplay. It was unwanted and unnecessary tonight. Elle had very simple plans on her agenda.\n\nIt felt like with every stoke I dove deeper and deeper into her. Each thrust made the slapping of my nuts on her ass louder and louder. Unfortunately for me it had been a long time in between sexual encounters, so each push brought me closer to the finish line. I had no choice but to pull out.\n\n\"Nooooo.\" Elle's scream was loud enough to scare me. But her, \"yessss\" was equally as loud when I pushed my tongue into her sopping, fur trimmed, hole.\n\nTaking my time not to rush with her oral pleasure, was very beneficial for me. It gave me time to back off the ledge and let my excitement subside. Elle was more than a little receptive to my mouth on her. She flopped and pushed her hips up off the bed. She humped at my tongue and used her hands to pull my face into her. It was not very graceful. No, it was just pure raw sexual urges. In the end, it was all that she needed.\n\nMy lips and tongue worked her clit to the point where she was almost hovering in the air. Normally I would have inserted a finger, even if it was for my own pleasure, but I clearly remembered her telling me \"anything but fingers\".\n\nOne last lick from asshole to clit. I drank in the flavors and nectar of her sweet, tangy peach. My tongue tasted all it could until it came to rest on her hard, little nub.\n\nSucking it in with my lips, I started a soft rapid-fire flicking until Elle passed the point of no return.\n\n\"Oh, oh, oh, shit, shit, no, no, keep...\"\n\nEvery muscle in her body tightened as she came. Her toned legs locked my head into place, deleting any chance of escape. Not that I wanted to.\n\nElle flopped her arms back on the bed in a spread-eagle position.\n\n\"Oh my god, thank-you.\"\n\nBy the sight of her chest raising and falling, I would have assumed that it was over for her. I was still rock hard, but my hair trigger, need to cum had been locked down. Crawling up beside the sexy creature in my bed, I for the first time that night, licked one of her hardened nipples.",
        "\"Can I ride you?\"\n\nElle had been rejuvenated and was trying to push me over onto my back.\n\n\"Absolutely.\"\n\nWho was I to argue? The long-bronzed leg swung over me. Elle sat astride me looking down at the hard cock that was straining to be in her. My hands betrayed me much as my whole and mind had tonight. They reached up and grabbed the titties of a girl 7 years my junior. Firm and warm, with nipples that screamed to be played with. I could feel her ass cheeks lifting off my lap and seconds later, I felt the warmth of her pussy once again hugging my shaft.\n\n\"Jesus Christ, that feels good.\" This time it was me talking.\n\n\"Yeah. Just like that. Nope. Slow down a bit.\" It was no use. Like earlier, Elle was on a mission, and the mission was her own personal pleasure. Oh, sure. I was definitely enjoying myself, but she was raw sex. No honed sexual skills. Just put it in and pound it until we both climaxed.\n\nIt didn't take more than 30 or so thrusts before she tensed up and came. However, I wasn't done.\n\n\"Up.\" Elle opened her eyes and looked at me in a glazed over gaze. \"Get on your hands and knees.\"\n\nFuck it. I was already going to be in trouble for the night. Why not finish the way I wanted?\n\nElle did as I requested. Placing my hands on her hips I pulled her to the edge of the bed and pressed down on her back. She knew exactly what I wanted and lowered her hips. Perfect alignment.\n\n\"Fuuuuuuck.\"\n\nOne swift push and I buried myself into her tight pussy.\n\nMy fingers and hands held her so tight that I later worried that I might have bruised her. Each thrust felt like it may be my last. I could feel the head of my cock tingling and my balls tightening. I was more than ready to cum.\n\n\"Elle...where?\"\n\n\"In me.\" Her words came out raspy like her throat was dry. \"In me. I'm on the pill.\"\n\nHonestly, I couldn't remember having such an intense encounter, or coming as hard. My cum blasted out of me, painting her insides.\n\nStill attached, we fell forward onto the mattress. Neither one us moved for minutes. My hard cock still sunk deep inside her.\n\n\"I can feel it throbbing in me.\"\n\nEventually, all good things come to an end. I did soften and Elle eased out from under me. In only the light from the streetlights and moon, she started to dress. One sexy leg at a time she pulled her panties up over her ass.\n\n\"Can you stay longer?\"\n\n\"I'm 22 Brad. I can stay forever, but I have to go home because I have an early day tomorrow.\"\n\n\"You know that you owe me twenty bucks.\"\n\n\"Yeah, well you suck at keeping track. If you were paying attention, you'd know that I owe you sixty because I came hard three times, and maybe ten more for the little one that snuck in there at the end. Remind me never to let you do my taxes. But don't worry, I'll blow you tomorrow night and pay you off in full. How's that?\"\n\n\"Tomorrow night?\" I continued watching as she sheepishly dressed and spoke\n\n\"Yeah, I'll sneak out and come over.\" As nervous as I was before, now I was petrified. 2 nights in a row was going to get us caught. \"By the way, wash your bedding. It smells like a guy sleeps in here all the time.\"\n\nWalking to the side of my bed, she leaned down to kiss me. What this girl lacked in experience and grace, she more than made up for with pure beauty and sexuality.\n\n\"I'll let myself out lover.\" She ran her fingers over my chest and laughed at her own playful choice of words.\n\nEvery detail of the night played on repeat in my head. It turned me on so much I thought about masturbating.\n\nThe hell with rules. I slept late. Getting up well after my regular 7:00am time slot. I made a pot of coffee, made some toast, and turned on the sporting news. By 10:30am I was outside and noticed Claude had his SUV packed up and his trailer of 2 Sea Doo's were hitched up. It looked like they were headed to Cave Run Lake. 20 minutes later a horn blasted and when I looked, the 5 waving hands of the family Lemay passed by the end of my driveway.\n\nI was safe.\n\nTinkering in my oversized garage, or as Claude would say, \"it's a fucking barn buddy\", is one of my favorite pastimes. The smell of the heat on the wood and past memories of animals that had once lived there, brought me back to my youth. It wasn't hard to get lost in a day out there. Today, I thought it would be a good day for a tune-up on my riding mower. Oil and filter change. Grease it. Sharpen the blades. Wash it down and maybe even take it for a ride around the property with a beer in hand.\n\nThe sounds of classic rock poured out of the barn's re-purposed house speakers. They were loud and crisp and that was good enough for me. Music accompanied by the twangy voice of some south-east DJ kept me company.\n\n\"Killer, you in there?\"\n\nHer voice made me jump, spilling my beer when I did.\n\n\"I know you're in there, Killer. I saw you go in. Whatcha doin', hiding a body?\"\n\nI rounded the corner of the shop and there stood the local pain in the ass, Jade. Just like last night, she was still looking good. Her hair was now in ponytail and she had on a different outfit. Today's instead of black, she had on a dark red bikini top. And the skirt was long gone. Today she had on white jean shorts and flip flops.\n\nMy first instinct was to be rude, but in her hands was a platter of something covered in tin foil. I couldn't help but smile when our eyes made contact. From the first time I met her she was calling me names or causing me grief, but here she was now, bearing gifts.\n\n\"Broom Hilda.\"\n\n\"Killer.\"\n\n\"What brings you all the way back here...where no one can see you?\"\n\n\"My mom asked me to bring you over some food. We have way too much left over. Maybe it's part of her payment to you.\"\n\n\"And you fell for that? Saves me a lot of work having to track you down.\"\n\n\"Oh, cut the shit. We both know you ain't gonna kill me, or you woulda done it years ago. Plus, I wanted to thank you for the gift. You must be rich. Because it was very generous. If that's what you give to people that you hate, I wish that you liked me.\n\n\"Well, I don't hate you...much.\"\n\nJade smiled like she had won a bet. Like she was brave enough to be knocking on Boo Radley's door.\n\n\"Can I have a White Claw?\"\n\n\"What the hell makes you think that I would have any White Claw?\"\n\n\"Twisted Tea?\"\n\n\"Do I look like I drink those things?\"\n\n\"Who knows Killer. Maybe it's for when you entertain all your lady friends. If you don't, I'll have a beer.\"\n\nHer eyes roamed around my garage. It was the first time that she had been in it as far as I knew.\n\n\"That's funny. You live just down the street. How many times have you seen any \"lady friends\" coming or going at my place?\"\n\n\"You're right. Not to often.\" A cat that ate the canary look came over her face with a wickedly evil smile. \"Just the once I guess.\"\n\n\"Yeah, I doubt that.\"\n\n\"Nope. I'm pretty sure. I had a few White Claws last night to celebrate, but I wasn't drunk.\"\n\n\"Point.\"\n\n\"Well, my point is that I watched Elle Lemay follow you into your house, and when she left an hour or so later, she was walking funny.\"\n\nWhat the fuck? How the hell could we have been so careless? I was screwed. This little bitch had me by the balls. I knew that she knew it, and from the look on her face, she was going to nail me to the cross.\n\nQuite opposite of hers, the look of shock and horror must have been written all over my face, because Jade was grinning from ear to ear.\n\n\"Hey Killer, I'll have that beer now.\" I pointed to the large beer fridge that was near the workshop. \"You want one buddy?\" Her grin was even bigger after she asked. I just nodded. She put the food in the fridge and got us the beers.\n\nWe opened the ice-cold cans and Jade held her up to touch mine.\n\n\"Cheers. To eighteen years old, plus a day.\"\n\nWe drank in silence. For a little thing, Jade was putting it back. She finished it in 5 maybe 6 mouthfuls. Then, without hesitating, or asking, she got 2 more.\n\nThere wasn't any real sense in arguing that Elle wasn't there the night before. I mean, she was. At 22-years old she didn't really need permission, but I didn't want to cause her or her family any embarrassment.\n\n\"So, how was it? I know she's not a virgin. I mean even before you got at her.\"\n\n\"Look Jade...I don't kiss and tell. It's not fair. Elle's old enough to make her own mind up who she does and doesn't want to sleep with. I don't care that you give me grief, I just don't want her family getting any shit over it.\"\n\n\"Jesus Killer. Chill a little bit. I was just asking.\"\n\n\"Yeah? So, what do you want from me then?\"\n\nHer smile turned softer. The evilness was disappearing. But there was something about her that had me concerned.\n\n\"You know.\" She said.\n\nI didn't. I had absolutely no way of knowing. I threw my second empty can in the recycle box and got us 2 more.\n\n\"How the hell should I know what you want? This is the first time we've spoken to one another for more than two seconds. And that's without you calling me any names.\"\n\nJade curled her lip in between her teeth, and for the very first time, I noticed the overbite that Elle had talked about. It wasn't overly noticeable, yet it was there. If I were to comment on it, I would have to say that it was...sexy.\n\n\"I want what she got.\"\n\nI was wrong. I knew exactly what she wanted.\n\n\"No fucking way. Nope. Never.\"\n\n\"Really, tell me why not?\"\n\n\"I don't need a reason, it's not happening.\"\n\n\"Give me a reason...or, or I'll tell.\"\n\n\"How about for starters, I'm way too old for you.\"\n\n\"Tell that to your cock.\"\n\nHer finger pointed at my crotch and sure enough I was hard. It wasn't on purpose or pre-planned. It had just sprung up outta nowhere.\n\n\"Fuck my cock.\"\n\n\"I'm trying, but you keep saying no.\"\n\n\"Jade look at yourself. You only want me because of Elle. You could have any guy you want. Not me. Not a guy who's almost ten years older than you. Get the captain of your schools football team or some jock guy like that.\"\n\n\"If that's what I wanted, that's what I get, but I don't. Thanks, but I want my first time to be perfect, not in the backseat of some jocks truck.\" She looked around the barn as if looking for a spot to do it. \"You got a phone Killer?\"\n\nI showed it to her.\n\n\"Video me.\"\n\nIt was a bad idea, but I pressed the video button.\n\n\"Ready?\" I nodded that it was. \"Good. To whomever is watching this. My name is Jade McAlister. I am eighteen years old and I am coercing the Killer here, into having sex with me. I have information about him. Information that will hurt his relationship with his neighbors, and I have threatened to spill the beans if he doesn't...make love to me.\" She laughed a sexy laugh for the camera. \"I am doing this of my own free will. He will not be. He is trying to protect his little lover next door and her family. So, if the day ever comes that anyone is upset because they find out that we had sex, fuck off. It was my idea.\" She made the cut motion by sliding her finger across her throat, but unknown to her, I kept the video going.\n\n\"See Killer, now you're safe. You can bang me, and no one can say shit. Show them the video and they'll know that I forced you so that your sweet little bitch Elle doesn't get hurt.\" There was a pause while she sipped her beer. \"The thing that confuses me is, me. Aren't I hot enough for you? I mean Elle's sexy. And she's older than me, but don't all guys wanna fuck a virgin?\"\n\nI thumbed the phone to stop recording.\n\n\"Yes. That's a fantasy that lots of guys chase, but don't waste it on me. Save it. Give it to someone special in your life. Someone that can give you something back in return.\"\n\n\"I don't want anything back Killer. I just don't want to be a virgin anymore.\"\n\n\"Why don't you find one of those guys that were at your party? I bet they'd be more than happy to deflower the prom queen.\"\n\n\"I wasn't the prom queen you asshole. And if I wanted one of those idiots to fuck me, I'd ask, but you're the one who's going to get that privilege.\"\n\nWhile she was talking, her fingers had unbuttoned her shorts and her had shimmied her plump little ass out of them. There she stood before me in a dark red bikini. That alone would have been fine if we were at the beach, but not today. Today she planned on losing her virginity, to me.\n\nJade looked at my crotch and smiled. I looked down at my crotch and didn't. My dick had given me away. I was rock hard in my shorts and any chance that I had had to escape had all but disappeared.\n\n\"Are we taking this to the house, or do you plan on bending me over that lawn mower you're working on?\"\n\nWhen I tried to talk, I had a frog in my throat. My first few words came out as a croaking sound.\n\n\"House. The house would be...\" I cleared my throat and continued. \"I think that the house would be your best bet. Way more comfortable in there.\"\n\n\"I don't know Killer. Think that you'll make it there without exploding?\"\n\n\"Pretty sure.\"\n\nAll the way to the house I knew it was the wrong thing to do, but I couldn't stop myself. I was sick thinking what would happen if she were to tell about Elle and me. And somewhere inside, I was excited with desire. The little bitch that had been the bane of my existence for the past 4 years, was now going to lay in my bed.\n\nFollowing the tree line so that we would go un-notice, we entered through the back door. Like a gentleman I held it open and couldn't help but look at her ass as she stepped into my house for the very first time.\n\nSilently, I pointed toward the staircase. No words. No instructions. Unlike Elle's rapid ascent up the stairs, Jade took every step very slowly while a walked up behind her. At the top she looked back at me and only moved when I pointed to the left.\n\nThe bed was still unmade. It was exactly as I had left it in the morning, and without a doubt, there was remnants of Elle and I on the sheets.\n\nI left Jade standing in silence while I went into the bathroom and washed up. Fuck it, she was up here. It was her idea, so I walked back into the room naked, and sat on the end of the bed.\n\nOnce cocky and anxious, Jade now had a nervous, somewhat tentative look on her face. As much as I wanted to torture this girl, I let her off the hook.\n\n\"Look, I understand. Maybe another time. You should wait until you are sure that you are ready.\"\n\n\"I am ready. Your cock...\" her toned changed, \"I'm just, I just worried that it won't fit in me.\"\n\nTurning, she walked away. I heard the doors of my cupboards opening. Then I heard the water turning on. A few minutes later, she returned, and like me, she was naked.\n\nJade had a hot little body. Hers was more compact and way curvier than Elle's long, sleek, toned look. I wasn't comparing because they were both perfect. Just different.\n\n\"You are gorgeous. You do know that, right?\"\n\nHer face filled with blood and changed colors as she blushed. She walked close enough to me that I was able to reach out and touch her for the first time.\n\nMy hand came to rest of her hip and the other touched her arm. Jade's head tilted downward. I wasn't sure if it was shyness or she was still staring at my cock. Removing my hand from her arm, I put my fingers under her chin and lifted.\n\nOur eyes met and she let out a nervous laugh.\n\nMy hand slid off her hip as I used it to grab her ass cheek and pull her closer. I move in for a kiss. Jade offered no resistance. Parting her lips, she pressed her tongue forward, giving me a taste of the beer that she had enjoyed earlier.\n\nJade's hands lifted and moved so that she could hold my head in place while we kissed. Her soft, wet lips were stuck to mine.\n\nI was in no hurry, but after a very long time of kissing, I felt like this might end up being a teenaged make-out session. That was until Jade lower herself between my knees and took my cock into her hand. Bending the hard phallus down to her mouth, she sucked the head between her lips.\n\n\"That feels so good baby.\"\n\nSlowly, but surely, she took more and more of it into her mouth. I wasn't so sure that she hadn't done this before. With her hand wrapped around the base near my nuts, she spit and drooled all over the head and shaft. And I wasn't lying to her, it did feel fantastic, but I didn't want to cum in her mouth, not yet.\n\nPlacing my hands on the sides of her head, I motioned for her to stand. Once again, our lips met as I changed places with her on the bed.\n\nFlashing thoughts of Jade with her legs pinned back over her head as my ramming cock pounded into her sopping hole filled my head. It would be the ultimate vengeance. The ultimate payback. The revenge fuck of a lifetime. Virginity lost to the asshole that she had spent years tormenting, but that wasn't my style.\n\nSlowly I kissed my way down her neck. I bit and nibbled her shoulders until I moved to her breasts. When my tongue circled her hardened nipple a tiny squeak of laughter escaped her. While my lips and tongue had their way with her perky titties, my hand rubbed its way over her belly down into the valley between her legs. Parting her legs for me, my fingers could feel that she was warm, wet and ready.\n\nIt wasn't that I doubted her. Or that I really cared, but when my finger parted her lips and slid into her tight little hole, only to be stopped by the barrier of her virginity did it strike me that she wasn't lying to me.\n\nWith my lips on her nipples, and my fingers rubbing the hard, little nub of her clit, she was putty in my hands. I assumed that it was all new to her and took my time to make the experience somewhat special for her.\n\nJade was waiting for what was next. She knew it was coming and when I got on my knees and placed my face to her wetness, I could sense that it was exactly where she wanted me.\n\nI knew that Jade was addicted to oral sex. From the first moment when my tongue touched her pussy, right up until the point where she screamed out and pulled my hair. She gave off all the sighs. She moved along with every lick, suck, bite and nibble. She cooed and moaned, letting me know that she was enjoying what I was doing, and that wasn't enough, she told me so. And when she came and my mouth was full of her sweet virgin nectar, she pulled me up to her face and licked my lips clean, before cramming her tongue into my mouth.\n\nCuddled next to her soft body I thought that she might be done for the day. Her eyes were closed. And she hadn't opened them. I planned on letting her drift off into a nap, but her hand found mine and pulled it to her breast. Using the tips of my fingers, I traced circles over her nipples and the side of her body.\n\n\"Jade, do you want to take a break.\"\n\n\"No. I want you in me.\"\n\n\"When you're ready, maybe you should get on top. That way you can control how much goes in and when.\"\n\n\"No. I want you on top. I want it the old fashion way. I want you to take it from me.\"\n\nRolling to her back, she pulled my arm as if to say \"now\".\n\nI was ready. Leaning down I kissed her again. My cock was aligned and waiting at her entrance. A small push and we both felt the head pop past her lips.\n\n\"Oooooh.\" I was in, but that was it. Her virginity was, at this point, still intact.\n\nMy lip searched for hers. Locking eyes, I lifted just enough to speak.\n\n\"Tell me when.\"\n\nHer fingernails held tightly onto my back, while her teeth clenched onto my bottom lip as she nodded. She was ready.\n\n\"Fuuuuuuuck.\"\n\nLooking down at my cock as it prepared to pierce her, I was blown away by how sexy it looked. The steady pressure finally ripped her fleshy barrier to shreds. Slowly I sank into her. My nemesis. My lover.\n\n\"Stop, stop...wait.\"\n\nAs much as I had once hated this girl, I now felt completely different. Was it the gift that she had just given me or was it the tears in her eyes, as she became a woman.\n\n\"It's okay baby, take your time.\"\n\nLess then 12 hours earlier Elle had told me that she could feel me throbbing in her. Now here I was with someone different and I could feel her throbbing pulse as it gripped my cock.",
        "Jade's hips slowly started to move. It may have been her or it may have been her sheer horniness, but she was moving.\n\n\"Go, go slow. Please.\"\n\nJoined together, I rolled. When I stopped, Jade sat astride me.\n\n\"There, now you can control it.\"\n\nA smile came over her face. She held me cheeks as her tongue plunged into my mouth, and her hips started to rotate.\n\nI wanted to watch as she fucked me, but her body was pressed to mine. The only thing that was moving was our hips. I wasn't complaining at all.\n\nSmall droplets of juice coated my shaft, and a single tear dripped from her cheek to my lips. The salty liquid reminded me that she was only 18-years old.\n\n\"Are you okay baby?\" She nodded and looked me in the eyes.\n\n\"It hurts...so good.\"\n\nSlowly she increased her hip speed. Not to the point where I was pounding into her. Just a constant, smooth motion. Lifting herself up, she sat back further on me so that I could wrap my hands around her perky titties.\n\n\"Yesss.\"\n\nYes indeed.\n\nLooking down I could see the frothy pinkish mixture of our juices and her blood. It was more than enough to push me off the ledge. I knew that Jade hadn't cum, but I didn't know if she would. The pain of her first time was probably stopping that from happening.\n\n\"Jade, I'm...\"\n\n\"Do it. Do it in me.\"\n\nIf I hadn't came last night with Elle, I more than likely would have passed out. My sperm surged out of me with such violence that it hurt. Like Jade had said, it \"hurt so good\".\n\nI remember a blanket being pulled over us, and her putting her finger on the scar from my bullet hole. \"Did it hurt?\" I refused to answer, and after that it was quiet. Jade and I fall asleep still wrapped in one another's arms.\n\nJade's tiny white shorts were playing music. I heard it over and over again. It may have been a dream, but I heard. It was from a song that I'd never heard before today.\n\nReality finally sank in and I knew something was up. The music was back. It was Jade's phone. She had had multiple calls while we were sleeping. Looking over at the alarm clock on my nightstand, my heart started to race. 5:24pm.\n\n\"Jade, wake up.\" A gentle shake and a light kiss on her cheek.\n\n\"Ummmmmm. No way. I'm staying right here, or do you want me to go?\"\n\n\"I don't want you to go, but someone wants you. Your phone keeps ringing.\"\n\n\"What? What time is it?\"\n\n\"Almost 5:30.\"\n\n\"Shit, shit, shit.\" Jade dove for her shorts giving me another perfect view of her nakedness. \"Oh man, it's my mom. Shhh.\" She put her finger to her lips as she pushed the redial button. \"Mom, what's up? Stacey's. Yeah, my freakin phone died. She found her little brother's charger. I'll be there. I knoooooow.\" She was talking while she gathered up her stuff. When she pushed the end button, she dropped the phone on my bed.\n\n\"Man, you almost killed me, no pun intended. Do you think my mom will smell the sex on me or should I have a shower?\"\n\nI pushed Jade backwards on the bed and used an over exaggerated dog sniffing noise as I moved my nose up and down her body. She giggled and laughed.\n\n\"Stop or I'll pee on your bed.\" I stopped at the risk of having her do exactly what she had said.\n\n\"You smell great, but you may want to rinse away some of that.\" I pointed at the dried-up spunk that was caked on her lower regions.\n\n\"Good call.\"\n\nRinsed off and ready to go, we headed out the same back door that we had came through. Jade headed back toward the barn.\n\n\"Where are you going?\"\n\n\"I'm going under the fence and walking through the Perkin's orchard. I'll come around from the other way. That way she'll never even think that I was here.\"\n\n\"Smart girl.\"\n\n\"Thanks lover.\" The \"lover\" things struck home. I was almost 28 and she was 18. What was I thinking?\n\nI moved in to hug her goodbye, but Jade had other ideas. Her hand found my crotch at the same time as her lips found mine. We kissed while she massaged me to hardness through my shorts.\n\n\"Gotta go, but I'll be back.\" She started to walk away but turned and ran back to my arms with tears in her eyes. \"Thank you, for being so nice to me. It felt...perfect. I know that I've been a bitch to you, but I'll make it up to you, I promise. I can't wait for you to put a baby in me someday.\"\n\nShock slapped me in the face and before I could say anything, she was gone.\n\nEverything was in a haze. She was just fucking with me. Right?\n\nI got the tray of food out of the barn fridge and headed back to the house. Placing it on the counter, I pulled back the foil and inspected what had been sent over to me. After filling myself with some potato salad and a roast beef sandwich, I headed upstairs.\n\nLooking at the sheets on my bed, I could see stains from 2 days of lovemaking. Some stains were more noticeable than others.\n\nI pulled the sheets off the bed and put them in the hamper. 5 minutes later the bed was clean and fresh with new sheets and a good spray of some linen spray.\n\nI started the shower and let the warm water wash away any of my afternoon sins. I stayed in for way longer than I normally would, but it felt so god that I couldn't pull myself to get out. Thoroughly scrubbed clean, I hung the towel on the back of the door to dry and walked into the bedroom.\n\n\"Jesus fucking Christ.\" Elle was laying naked on the top of the blankets. She was sporting obvious tan lines from a fresh sunburn. \"You scared the shit out of me.\"\n\n\"Then you better get back in that shower and clean up.\"\n\n\"Hey...just let yourself in and make yourself at home.\"\n\n\"I will.\" She smiled in a wily look that I knew would cause me trouble. \"You put on a good show, but you know that you're happy I came back.\"\n\nShe wasn't wrong. I crawled up the bed from the end and flopped down beside her. My finger poked the redness on her body.\n\n\"That hurt?\"\n\n\"Yes, it hurts.\" As she slapped my hand away.\n\n\"What about this?\" I kissed her shoulder.\n\n\"A little.\"\n\n\"What about this?\" I put my lips on her belly.\n\n\"A bit less.\"\n\n\"And this?\" I kiss the white skin of her hip.\n\n\"Not nearly as much.\"\n\n\"What about this?\" I grinned and ran my tongue up her already moist slit.\n\n\"Barely. But you should try it again.\"\n\nThat wasn't about to be a problem. I licked and probed every crevice in her pussy. By the time I was finished, I was drowning in her juices, I had eaten Elle to an orgasm. She moaned loudly when she came on my face. I could tell that she was in a bit of pain from her burns, but not once did she complain.\n\n\"You want me to rub some Aloe on you?\" A simple nod let me know that she liked the idea.\n\nThe fun part of rubbing Aloe on a sunburn is the cold gel dropping onto the red-hot skin. It always brings a fun reaction.\n\n\"Fuuu...that's so cold.\"\n\n\"That's what you get for being a bad girl and not putting on sunscreen.\"\n\n\"Yeah, well you'll think it's sexy in a few days when it turns dark and brown.\" Oh, you can bet that I will.\n\nMy hands moved the cooling gel over all of her afflicted skin. Rubbing it over her lower back I slid my fingers over her ass and dragged them through the cleft in her ass cheeks. I would have stopped, but when her hips lifted up off the mattress, I applied a bit more gel and used my finger to penetrate her puckered asshole.\n\n\"Ohhh. So dirty.\"\n\nUsing my right middle finger to fuck her ass, I continued massaging the Aloe into her skin with my left hand.\n\nI kept on rubbing the gel into her soft skin until I was so turned on that I needed release of my own. Pulling the digit from her ass left a void, but not one that she wanted filled by my cock. Because as I got on my knees behind her, she told me so.\n\n\"Not in my ass.\"\n\nCareful that my hands only held the non-burned skin I rubbed the tip of my cock over the puffy her lips of her pussy. Pushing, I sank deep into her sweet, wet heaven. There never was a doubt that that's where I wanted to be, and it was where she wanted me. It was confirmed by the feel of her muscles tugging at me, as they held me tightly in place.\n\nPutting a palm on each of her cheeks, I watched as I entered and exited her. I watched as the skin of my cock pulled meat and juices from deep within her.\n\nMy good fortune was baffling me. How could it be that this sexy creature was in my bed last night, and she wanted to be in it again tonight. Elle was young, toned and beautiful. She could have any guy that she wanted, yet it was my cock that was pounding into her from behind.\n\n\"Elle, I'm getting really close.\"\n\nSpinning off of me, she turned and grabbed my shaft. I was in her mouth in a flash. She sucked me in, and it felt like I hadn't missed a stroke. Her tongue worked my shaft while she sucked at head. I thought that there was no way that it could get any better, but then she cupped my balls and squeezed. That was it for me. I filled her mouth with my load.\n\n\"Shiiiit.\"\n\nLike a porn star, Elle smiled and opened her mouth. She showed me my load coving her pink tongue. Seductively licking her lips, she swallowed.\n\nElle reached over and pulled the small chain that turned on the lamp on the bedside table. The room fell into darkness as we cuddled.\n\n\"How long can you stay?\"\n\n\"All night.\"\n\nIt was the last thing that I heard her say. Her breathing slowed as she fell to sleep in my arms.\n\nI had been in a self-imposed sexual drought for over 2 years, but here I was for the third time in 2 days having sex.\n\nElle had woken me up when she was fondling my hardness. Without speaking she climbed on it and rode me to the finish line. Her climate was quiet and less powerful than any of her others, but she seemed happy.\n\nRolling off of me, once again filled with a load of my cum, she cuddled up against my chest and pulled my arm over her, and returned to sleep.\n\nI held her until she drifted off, but I was too revved up for sleep, I showered and headed downstairs. Following what I do every morning, I went outside to the mailbox to pick-up the paper.\n\n\"Buddy, did you see that game last night?\"\n\nI honestly almost died. Standing there in his work uniform, Claude had scared the living shit out of me. He saw as much and laughed.\n\n\"Fuck buddy, you're pretty jumpy. You gotta lay off the coffee.\" He looked at me waiting. \"Well?\"\n\n\"No. I didn't\" Claude was big into baseball and I knew that he was talking about one of the teams that he followed.\n\n\"Man, they were down by three in the ninth. Bastards came back to win it. Freakin crazy game.\"\n\n\"Sounds like.\" I was having trouble looking at him, never mind talking to him. If he knew that his daughter was upstairs in my bed, he'd probably want to bury me under one of the many trees in his backyard.\n\n\"Yeah. Look, gotta run. Fucking work. Can't wait to retire. Only twelve more years. Anyway, come to the garage tonight and we'll grab a beer.\"\n\n\"Deal.\" With that he got into his state issued pick-up truck and drove away.\n\nDaily newspaper in hand, I started back to the house. When May's horn sounded, I jumped for the second time. She was also off to work.\n\nIt was Monday morning, and the world was going back to work and the regular weekly grind, but here was something about this past weekend that had changed my perspective on life. Once again things felt new and fresh to me. The sun was bright and warming, the flowers smelled sweet and had the bees in a tizzy. And the idea that I had had sex with 2 hot young girls was intoxicating to my mind.\n\nNew and rejuvenated.\n\nAs much as I wanted to follow my daily routine, I ventured down the path never taken. 20 minutes later I had a tray with some bacon, eggs, toasted English muffins, coffee and juice.\n\nStretching like a naked cat over my, bed Elle couldn't have looked any sexier. Her long, lean body was semi wrapped in my cotton sheets, with a pillow under her head and one between her legs. She didn't look interested in getting up, until she noticed the food.\n\n\"Breakfast in bed?\" Walking to the side of the bed, I kissed her and handed her the tray. \"I feel so special. No one's ever treated me to breakfast in bed.\"\n\n\"Well, no one's ever treated me the way you have. Enjoy.\"\n\n\"Oh, I did, and I will.\"\n\n\"You hangin out here today?\"\n\n\"Nope. Franny, Sissy and me, are heading back to the beach this morning. Come with?\"\n\nI shook my head no, and watched Elle sneaking across the yard. She was trying to get home before her sisters woke. Less than an hour later, I heard them leave.\n\nDays like this have been far and few between for me. I felt amazing. By noon I was actually hoping that Jade would show up but happen never transpired. So, I did what every red-blooded male that had a free on his hands wanted to do, I climbed into my hammock and napped.\n\n3 solid hours put me over the top. Well rested and ready to go, I finished what was left of the food, from the tray that Jade's mom had sent over.\n\nClaude was exactly where I knew he would be. He had 2 large chairs aimed right at the big screen and the game was playing loudly out of the sound system. There was no need to knock. Claude knew that I'd be there and pointed to the cooler when I walked in.\n\n\"Get me one too.\"\n\nI always had to suppress a laugh when I opened his cooler. Claude had a big beer fridge that worked very well. But it was something about watching the game that made pulling a can of beer out of the ice that made it feel more \"game like\" to him.\n\n\"Fuck buddy, you missed the first two innings.\" The score board showed that it was tied at zero.\n\n\"Doesn't look like I missed much.\"\n\nClaude and I shot the shit about everything. Everything from politics to sport, and back. But as usual, the conversation always ended up on his favorite subject.\n\n\"So, what did you think of that party Saturday night?\"\n\n\"Good. I thought that it was good.\"\n\n\"Fuckin' McAlister. He had the whole neighborhood there. He only invited some of them so that he could check them out while they were swimming.\" His laugh told me that maybe it was true. \"Did you get a look at Edna?\" I shook my head no. \"The hot redhead.\" Another shake. \"Fuck buddy. Try paying attention once and a while. She's really put together. Anyway, May's thinking about inviting her over next weekend for dinner.\"\n\n\"Threesome?\"\n\n\"No asshole. She's trying to set you up.\" I almost did a spit take with my beer.\n\n\"Isn't she like forty-five years old?\"\n\n\"No...and what's wrong with being forty-five you prick?\"\n\n\"Nothing, but that makes her over seventeen years older than me.\"\n\n\"Who knows. Maybe having sex with an older partner will help you learn a few things.\" That time beer did actually dribble down my chin.\n\nThe bright lights of the Lemay SUV got even brighter when May hit the high beams as she pulled up the long driveway. Even though she loved him, she did it just to piss her husband off. Claude covered his eyes with his beer filled hand and cursed under his breath.\n\nThe four Lemay women piled out of the vehicle and went to the back to fill their arms with their latest shopping haul.\n\n\"Shit, you leave anything at the store?\"\n\nMay leaned in to kiss her husband.\n\n\"No baby. We bought every tampon and condom they had.\" Claude muttered something that I couldn't make out. \"Not too loud boys, unless you want John Evans over here watching the game with you.\"\n\nClaude instantly grabbed the remote and lowered the sound...by two settings.\n\n\"Fuck that asshole. He's a goddamned Mets fan. Too stupid to know any better. Franny, go get daddy his gun. It'll be the last fucking time he comes over to watch a game. I swear.\"\n\nOne of the bags that Elle was carrying caught me in the head as she passed closely by. It was definitely intentional. She was letting me know that she was there. Less than 5 minutes had passed before Elle and Franny returned. Like a good daughter, Franny went to the cooler and got a round of beers. One for herself and her sister was included.\n\n\"Really? I like my nuts right where they are. Put it back.\"\n\n\"Why can Elle have one?\"\n\n\"Cuz, she's twenty-two and you're only seventeen.\"\n\n\"Eighteen, in two weeks.\"\n\n\"Oh, I know the magical day. I remember it well, because I was there baby, but your mother is the boss.\"\n\nWith a huff and a puff, Franny dropped the beer back into the cooler and squeezed in beside her dad. Without a second of hesitation, she lifted his beer to her mouth and took a small sip. That part didn't shock me. What did shock me was Elle tapping me on the leg.\n\n\"Scrunch over.\" When I didn't move. She looked over at her father and said loud enough for him to hear.\n\n\"I'm not sitting on one of those hard ones. This is a big chair. So, move your ass over.\"\n\nClaude laughed as I moved to let his daughter sit by me. I could feel the heat of Elle's leg and ass pressed against me. It wasn't nearly as much fun as it sounded.\n\nThings raced through my head. The idea of light, almost invisible touches being passed form one lover to another. The thoughts of her fondling me less than 5 feet from her father. My hand venturing into her shorts. Seeking her warmth and wetness. Her breasts pressed into my arm as she squeezed it to her chest. A quick kiss stolen when the screen went dark in between commercials. But none of that happened. Nothing at all. Just her hot butt and leg touching mine.\n\nElle didn't dare risk it. Nor did I.\n\n4 beers later the game finally came to an end. As uneventful as it was, Claude was still singing the praises of a victory.\n\nWith everyone saying their \"good-nights\", Claude asked his daughters what time they were headed out in the morning.\n\n\"8:00am.\" Elle told her dad, because she was probably the one driving.\n\n\"That's early for the beach, isn't it?\"\n\nClaude looked at me and clarified.\n\n\"No. The girls are headed to May's sister's place. Going to hang out with their cousins for a week before heading back to school. It'll give me and May some alone time. If you know what I mean.\"\n\n\"Gross, dad. Everyone knows what you mean, and it has never stopped you before. You have \"alone time\", all the time. Jesus, it's so gross.\"\n\nClaude laughed and hugged his daughter.\n\n\"See Brad. I told you that this one is smart. All that college money is paying off.\"\n\nShe punched his belly, he slapped her on the ass, and I made my way out of the garage door.\n\nI left the front, back and side doors unlocked. I showered and got into bed. Too restless to read, I turned on the television. I was hoping that Elle would drop over for a visit. I had been bitten once again by the sex bug and my libido was working overtime.\n\nUnfortunately, I slept alone.\n\nStartled awake by the sounds of slamming doors, I got up. Not wanting to be a noisy neighbor, I waited until the Lemay family had said their good-byes in the driveway and drove away, before I went out to get my paper.\n\nIt was another beautiful day and I planned on doing something constructive.\n\n\"Nice PJ's Killer.\"\n\nI turned in time to see Jade riding by on her bicycle with one of her little witch buddies. Normally I would have shot some kind of retort back at her, but I could see the smile on her face. Her friend couldn't, so Jade's \"Queen Bee\" status remained.\n\nThe breeze felt good as I rode the mower around the yard. In the back portion of the property, fallen apples crunched under the weight of the tires as I drove over them. The smells and feel of the late August morning had me alive. It was sometime shortly after 1:00pm that I decided to do a little work that would earn me some money.\n\nEven on a large property noises are common. Cars driving past in the distance. The wind rustling the leaves on the trees. Horses, dogs and other animals making sounds as they did their thing. But the noise that caught my immediate attention was the sound of a bicycle being dropped on the grass.\n\nIt was followed by the sound of a creaking wooden screen door opening and closing. Then the soft steps of someone in bare feet. Jade's head appeared from around the corner. Gone was what had once been a vicious look. Now it was replaced by a look of tenderness.",
        "There was an extra bit of a wiggle in her ass as she climbed the stairs. It was actually very sexy. The lower parts of her ass cheeks hung out of the bottoms of her shorts and the thin piece of cloth that covered her crotch was trimmed with purple. I could only imagine that it was her underwear.\n\nWaiting killed me, but I wasn't going to rush up after her. The seconds turned into minutes until I couldn't take it anymore.\n\nJade was naked in my shower.\n\nThe rain head waterfall cascaded down over her tight, curvy body. She glistened and shined in the wetness. Her hands using a bar of my soap to wash her velvety skin. I could have watched this show all day.\n\nHer things were piled neatly on the vanity, and as I had early assumed, the purple was her under things. Lifting the bra to my nose, I sniffed the floral scent of a light perfume. The material was damp, not wet, just damp. More than likely from her ride. When I picked up her tiny panties, Jade stopped what she was doing so that she could watch what I would do next.\n\nLike the matching brassiere, the material was damp, but in the cottony crotch, it had a different kind of moisture. Lifting softy cloth to my face, I could smell excitement. Jade's mouth was slightly open when she watched me lick them.\n\nNo words were spoken as I got into the shower with her. Our lips met and Jade pushed her tongue into my mouth. Kissing my way down her slick body, I suckled each of her titties and rock-hard nipples. Dropping lower, I put my palms on the cheeks of her ass and squeezed. Pulling her closer, my tongue split the folds of her pussy, allowing me to taste her sweet nectar.\n\n\"Yeeeeeeesss.\" Hissed out of her mouth as she lifted one of her legs over my shoulder to give me complete access.\n\nRapid fire flicking of my flat tongue on her clit weakened Jade's knees. Supporting herself by bracing her back on the tiled wall behind her and holding my head tight in her hands, she prepared for the inevitable.\n\nHer hips thrust forward and slap me. Jade's humping motion made it look like she was trying to fuck me face, and I didn't mind it one bit.\n\nWhen she froze, a low guttural \"ooooooooooohhh\" escaped from somewhere deep inside of her. Slowly I ramped down my speed and focused on lapping up her juices, but I wasn't prepared to wait long. Standing tall we kissed, letting Jade taste her own flavor.\n\n\"Bend over.\"\n\nRubbing the head of my cock up and down her slit turned me on more than I would have expected. I watched as the tip parted her meaty lips, until little by little I started to sink into her. Jade leaned forward until she was in the perfect position, and inch by inch, I buried myself into her.\n\nStanding still, my hand roamed over her wet skin. Up and over her ass, I eased them over her hips and stomach until they came to rest on her firm titties. Jade's head turned back to me.\n\n\"Kiss me.\" Leaning forward, I complied. Our lips caressed each other until she bit down on mine. It was soft and sexy. Jade was inexperienced, but she was a very quick learner. \"Fuck me, baby.\"\n\nMy strokes were slow and steady. I pulled out until only the tip remained in her, then pushed the whole length back into her. There were soft grunts and moans, but no pain. I wanted to increase my speed, but I held on to what was working. One by one my hands left her chest and lowered until I was holding her hips as I thrust.\n\n\"Lift your leg.\" Jade did as she was told, putting her foot on the tiled ledge. \"Rub your clit.\" Looking at me over her shoulder, she wasn't sure if I was serious. \"Do it.\"\n\nTightening my grip on her hips, pushed in as deep as I could. The tips of Jade's finger brushed the shaft of my cock as she ran small tight circles around her clit. Long smooth strokes had us both moaning.\n\n\"You like that baby? You like my cock in you?\" She nodded. \"Tell me.\" She shook her head no. \"Tell or today is the last time we do it.\"\n\n\"I like it.\"\n\n\"What?\"\n\n\"I...love it.\"\n\n\"Then cum for me. Cum all over my cock when I shoot my load in you.\"\n\nHer hand was buzzing on her clit. I could feel the speed it was going as I pushed in for the final time.\n\n\"Now baby. Do it now.\" My load shot out of me like a cannon. And Jade wasn't very far behind.\n\n\"Aaaaaaahh.\" She head was tilted skyward. Mouth open, water from the shower splashed her until she almost choked.\n\nThere was no way I was letting her go. Still hard, I pressed my weight against her. Pinned between the wall and my chest, I nuzzled at her neck and started to slowly move my hips.\n\n\"I need to rest, or I'll fall down.\" Her tone was soft and sweet, unlike anything I'd ever heard her say. We rinsed the remanence of our love making off and headed to my bed.\n\nOnce again Jade fell asleep. Her beathing slowed as soon as she hit the pillows and wrapped herself in my arms.\n\nUnlike our first time, there wasn't a ring tone to wake us. We had slept for a couple of hours, when I finally turned over and checked the clock.\n\n\"Is anyone expecting you?\"\n\n\"Not until midnight. My folks are out with their friends tonight.\"\n\n\"Are you staying for dinner?\" Her aggressive nod left no doubt. \"Pizza and wings?\"\n\n\"Hot wings. Double cheese and peperoni on the pizza.\" Agreed.\n\nJade didn't even attempt to get out of my bed when the doorbell rang 30 minutes later. I tipped the delivery guy, grabbed a couple of beers, and headed back up the stairs.\n\nI put the box on a towel and climbed back in next to my naked lover.\n\n\"Honestly, if I'm going to keep coming over here so that you can fuck me, the least that you can do is buy me some Whiteclaws.\"\n\n\"Fucking is a little crude. Tell you what. I'll buy some for the days that you want to come over and we spend time enjoying each-others company. How's that.\"\n\n\"Sounds good, but I want to fuck too.\"\n\n\"Jesus. You'll be the death of me.\"\n\nWe ate quietly, watching some show that she had put on. It was about kids her age going to high school. I looked over at the beautiful, naked 18-year old, next to me in my bed, and wondered how things had got to this point. When Jade saw me looking at her, she smiled and asked, \"Do you love me Killer?\"\n\n\"No, but I don't hate you anymore.\"\n\nTwice my little temptress visited me before her the Lemay girls returned.\n\nI had high expectations of a visit from Elle when she came home, but it didn't happen. Sadly, I watched her the next week as she loaded her car full of her belongings, blew me a kiss and drove off into the sunset. I knew right from the start that she was returning to college, but for some reason, I thought that we would be able to say goodbye.\n\nSchool started here in town and the streets were filled every morning and evening with buses hauling their precious cargo to and from. I didn't keep track of who came and went, but I did see Jade with a boy her age hanging off her arm. Each time she waved, but not once did see call me \"Killer\" or throw a shot at me.\n\nMy celibate lifestyle was back on track. It had been 12 days and counting since my last sexual encounter. I wasn't upset by what had happened. In fact, it was the opposite. I was proud of my little adventures with both Elle and Jade. They had put me back on the right track. I was alive and re-invigorated.\n\nFriday was a full workday. Newspaper in the morning, then 6 straight hours of office work. The proverbial steam whistle blew at 3:00pm sharp. It was time for a cold beer.\n\nWalking the fence line on the back of my property, I heard Claude bellowing voice.\n\n\"Hey cowboy, you got time to give me a hand?\"\n\nHe knew that I did. Claude and I were friends. Not once did either of us shy away from leaning a helping hand.\n\n\"Yeah, what's up?\"\n\n\"Gotta set-up 2 goddamn tents and a 100 fucking chairs for tomorrow night. Heaven forbid Franny help do anything for her own party.\"\n\n\"Be right over.\" I filled a small cooler with a dozen beers and some ice. Grabbed some leather gloves and headed over. Claude drank the first beer offering in 30 seconds, flat.\n\n\"We should get married buddy. You always know exactly what I want.\"\n\n\"No offense Claude, but I'm way out of your league.\" His snorts of laughter filled the air.\n\nMay brought us some burgers sometime after 8:00pm and we eat them on the fly. We kept going at a steady pace and by midnight the place was set-up, decorated and ready for all the screaming girls that would be attending.\n\n\"Fuck buddy. I can't thank you enough. If you hadn't been around, I would have been up all night. Now all that I have to do is pick-up ice. May is having the food catered, so I can mingle.\"\n\n\"Well, don't \"mingle\" too much. May doesn't want you in the same shape as you were at the McAlister's party.\"\n\n\"Oh, bullshit. I wasn't that bad. Was I?\" I held the tips of my fingers together indicating maybe just a little bit.\n\nClaude held out his hand and I shook it.\n\n\"See you tomorrow. Wear your dancing shoes.\" He snorted once again at his own joke.\n\n\"Can't wait.\" And I couldn't. Because with any luck, Elle would be coming back to my house with me.\n\nWhen it was time, I didn't wait to be asked. I just went over and helped. May gave me a list of things to pick-up, including the ice that Claude had forgotten when he was out. Helping them prep for the party, helped me kill time. When everything was in place and the caterers were cooking, I went to clean-up.\n\nMuch like Jade, Franny was a princess. She was wearing a shiny tiara and a black t-shirt that said, \"I'm 18 bitches!\" in shiny gold lettering, and in her hand was a glass of beer.\n\nThe gift table was full of wrapped presents and a basket full of cards. I hugged Franny and wished her Happy Birthday, made my card drop and headed over to the keg that Claude was guarding with his life. There was no need to ask, Claude pulled a fresh one when he saw me walking up.\n\nNot unlike Jade's party, most of the neighborhood was here. Lots of chatting and storytelling. I wanted to stay away from some, but others came looking for me. At one point May's friend Etna came over to say hello. Lucky for me that she introduced herself, because Claude had told me that her name was Edna. We talked until Jade basically pushed her out of the way.\n\n\"Hey Mr. Schilty. Enjoying yourself?\"\n\n\"Hi Jade. Not particularly.\"\n\n\"Really. I think it's a cool party. This is Devon.\" We shook hands. It was the same little puke that I'd seen her with a couple of times the week before.\n\nAfter some small talk, where she assured me that Devon wasn't her boyfriend. They disappeared, hand in hand when they left. I assumed Jade didn't want to tell me the truth. It was her boyfriend.\n\nMy eyes scanned the crowd. I was keeping a hopeful eye out, but so far, I wasn't having any luck.\n\n\"She's not coming.\" May was standing by my side.\n\nThere was a dryness in my throat. I didn't want to speak. I wanted to pretend that I hadn't heard her, but I asked anyway.\n\n\"Who's not coming?\"\n\n\"Elle.\"\n\n\"Oh. I bet Franny is disappointed.\" I tried to be fast on my feet.\n\n\"Actually, she's not. But from the look on your face, I can tell that you are.\"\n\n\"No. No...it's just that we had...we danced at Jade's party and...\"\n\n\"Brad. I'm her mother. I know.\"\n\nI crumbled like a house of cards. My look must have been one of complete shock.\n\n\"Claude?\" I asked.\n\n\"He doesn't know, and I suggest that we keep it that way.\" Her words were those of wisdom. Simple and to the point. She left me to reflect on what she had told me.\n\nI watched as May made her way through the crowd of her guests. She oozed elegance and grace. Her daughters could only pray that that gene had been passed down to them, from her.\n\nThe best option for me at this point would have been to slink away and lick my wounds at home, but Claude had recruited me for chaperone and clean-up duty. So, I had to stay put.\n\nThings ended up going very smooth for me. I teamed up with Etna or Edna, whatever the hell her name was. And we made it all the way to the finals of a mixed team horseshoe tourney, in the backyard. We had some beers and lots of food. Just before midnight Claude reminded all of the boys that were \"hound dogging\" around as he put it, that he had a gun nearby. After that, there wasn't a need to chaperone anything.\n\nRather than waiting till morning, Claude and myself started on the shitty task of cleaning up the mess. It didn't take nearly as long as it need to set everything up, and when it was done. We pulled a couple of drafts and sat.\n\n\"That was a good party Claude. Franny will remember it forever.\"\n\n\"Yeah. 2 more years and we get to do it again.\"\n\n\"Then you'll be crying that they are all getting so old.\"\n\n\"Fuck you Brad.\"\n\n\"Plus, I think that Franny was impressed that you made it through the entire party without needing to take a break.\"\n\n\"Fuck you. You know McAlister put something in my drink.\"\n\n\"Yeah, it's called alcohol, and you just had way too much of it.\"\n\nClaude mockingly looked around the yard. \"Easy man, I don't want the whole world to know that I like to drink. Hey, talking about McAlister's, I saw you talking with Jade and her boyfriend. I'm glad to see that you are making strides to get along with the Hitler youth in the neighborhood.\"\n\nIf he only knew. I might get a look at that gun of his, up close.\n\n\"I'm trying.\"\n\nFor almost 2 weeks things were pretty quiet. No strange visitors. No surprises. Just the same alone time to which I had been accustomed to. But like many things in my life, that was subject to change.\n\nWednesday afternoon brought a pounding on my front door. The shear force of the knock would have alerted me, even if I were in the barn. It was almost a relief to get up from my desk to see who it was. Walking down the wide hallway, there would be no mistaking them.\n\n\"Ladies. To what do I owe this pleasure?\"\n\nFranny and Jade were standing on my front porch, looking into my house. They both had on school t-shirts with some kind of Spartan mask logo over the heart, and a pair of yoga pants. In their hands were books of tickets, and a Ziplock bag stuffed with cash.\n\n\"Hi Brad.\" It was Franny that started. \"Jade and I are selling tickets for our end of the year school trip and we were wondering if...\"\n\n\"Didn't school just start?\"\n\n\"Yes, but it's a big trip so we...\" Jade was done with any of the niceties. She pulled open the wooden screen door and walked in. Turning back, she gave a \"move your ass\" look and Franny followed the flight path of the Queen Bee. \"So, as I was saying. We are selling half and half tickets, with half of the money going to the winner and half going to...\"\n\n\"Killer, look at you.\" Jade was standing by my fridge with the door open. She was holding up one of the Lime White Claws that had came in the assorted pack. \"You paid attention.\"\n\n\"Yeah, they've been in there for a while.\"\n\nI wasn't meant as a shot, but Jade cocked her head to the side.\n\n\"Well Killer. I didn't think that you'd want me coming over here when I was having my period. It would make a wicked mess on that white bedding of yours.\"\n\nTurning toward Franny to see if she was shocked didn't help me. She was staring at the floor. For 15 seconds there was silence. Until...\n\n\"The other half goes toward the trip. Tickets are $5 each, or 5 for $20.\"\n\nWe both looked at Jade as the sound of a can bring opened shocked us back to reality.\n\nWith an ear to ear grin on my face, I headed to the cupboard where I kept some cash. A second can opened, and I watched as Jade handed it to Franny.\n\n\"Here, I'll take 15 tickets.\" I handed her the 3, $20 bills, and waited as she wrote out the tickets. \"Should you ladies be drinking on a school night?\"\n\nJade laughed and opened the fridge door for a third time. This time it was for me. Without even asking, she opened it and handed me the beer.\n\n\"Thanks, I guess.\"\n\nI couldn't stop looking back and forth between the girls. Franny's hands were shaking as she wrote on the tickets, and she shook even more when she lifted her can to her lips. She was nervous. Very nervous.\n\n\"Okay, what's up?\" Jade gave me the \"whatever do you mean look\". \"Cut the shit.\"\n\n\"No, no. The ticket sells are for real. We are going to Europe next year and we need the cash.\" Jade was grinning the whole time she spoke.\n\n\"But...?\"\n\n\"But Fran needs a favor. And I think that you are the perfect guy to help her with it.\" Fuck my life. I didn't like where this was headed, not one bit. \"You see, Miss Franny got caught in a little, well, more big than little, white lie and now she's in a bind. Seems she made a promise to her new boyfriend. Told him that they would be having some \"sex\" on Saturday night, and poor Tommy was a little shy, so Fran told him not to worry. She'd done \"it\" before and would teach him all of the \"ins and outs\", excuse the pun, that he needed to know.\"\n\nFranny had stopped writing and her forehead was resting on the wood of my old farmhouse table.\n\n\"Is that true Franny?\" Bang, bang. Her forehead bounced on the table twice. A definite yes. \"Why me?\"\n\n\"Because Killer, like it or not, you are the guy. I know that you're going to be gentle. You're going to show her what needs to happen, and you're going to care that she enjoys herself. I mean you treated me really good, and you hated me. So, Franny is in for a treat. Tell me I'm wrong.\" She waited for me to respond. When it didn't happen, she took a big sip of her drink and started again. \"Look Killer, she knows about you and me and you and Elle. Your track record of discretion speaks for itself.\"\n\nJade downed what was left in her can, and I followed suit. Poor Franny still had her head on the table when her BFF opened another round of drinks.\n\n\"Come on Fran, let's go.\"\n\nJade was carrying all the cans as she headed toward the staircase.\n\n\"Where are you going?\"\n\n\"I'm watching Killer. I set this up. I get to watch. Maybe even join in if I so choose.\"\n\n\"What about having to get home.\"\n\n\"We're out selling tickets dufus.\"\n\nThe conniving little bitch had it all figured out. All of it but the part where I fuck another one of my friend's daughters.\n\nI could hear Jade whispering to Franny as they climbed the stairs toward my bedroom, and to be completely honest, I was very afraid. Jade looked over her shoulder at me as I followed them up the stairs.\n\n\"Come on baby. Let's show Franny that I wasn't lying about what you could do.\"\n\nVery afraid indeed.\n\nMath was always a good subject for me. It took me far in school, but as of this moment I was still struggling with simple addition. 2 girls, 1 guy = threesome. Sounds correct. But it might be wrong.\n\nStanding in the same spot her older sister had, Franny didn't look nearly as excited. Jade on the other hand was seated in a chair by the window and had already disposed of her clothes.\n\n\"Where yah going Killer?\" Jade wanted to be in full control.\n\n\"Shower.\"\n\n\"That's okay. I know you don't stink, and I want Franny to get a taste of a real man. That is before she fucks that loser on Saturday night. Right Franny?\"\n\nSitting on the end of the bed I looked at Francine for the very first time, I mean, I really looked at her. She was beautiful. She was a smaller more immature version of her older sister, and it must have been very hard growing up in that perfect shadow. She had filled out, but not like her sister. Elle was trim and lean in places where Francine still held some of her \"baby fat\". She wasn't big, but she wasn't what you would call tiny.\n\n\"Fran, I think that you should wait. Save it for Saturday night. The guy won't care that you lied. He will be so happy...\"\n\n\"Oh, come Killer. Get naked and let's get this shit started.\"\n\n\"Shut the fuck up Jade.\" I turned to let her know that I wasn't kidding.\n\n\"Believe me, he will be thrilled to be your first. It will be an experience that you both share for many years.\"\n\nFran's head was aimed at the ground. \"It's not just him. I told everyone.\"",
        "\"Ooooooh.\" I thought about my options. \"How about, we find something to break your cherry and I tell you what to do.\"\n\nHer head swung back and forth. As shy as she was, she was committed.\n\n\"Fran, I love your family, and it would be the end of me if they ever found out about us.\"\n\nHer head raised until her eyes leveled and met mine.\n\n\"Do you think that I'd ever tell them?\"\n\nNo, I honestly didn't think that she would.\n\nTouching her arm, I held the warm skin in my hand. Our eyes were still joined together.\n\n\"Tell me what you want?\"\n\nHer gaze left me and turned to Jade, then returned to me.\n\n\"Everything that you did to her.\"\n\nPulling her second arm to me, I put both of her hands together, kissed them and said, \"Alright\".\n\nThe high school t-shirt pulled up over Fran's head with ease. Her short ponytail swung from side to side as it fell back into place. Franny's choice of underwear was plain to say the least. The simple cotton bra was at best, utilitarian. My fingers found the back clasp on the bra and snapped it open, releasing a very nice size pair of breasts.\n\nLike her older sister, Franny's tits looked perfect on her body. So much so, that I had to taste them. Taking turns licking each of her nipples, Franny reacted by grabbing my head. It was the first time that she had touched me.\n\nWhen I felt the need to advance, I sat back and looked at her once again.\n\n\"Last chance to backout. Because if we go any further, it will be too late.\"\n\nWithout hesitation, her thumbs hooked the waist band of her form fitting stretchy pants and pulled them to her ankles. Unlike her older sister, Fran was shaved smooth and hairless.\n\nIt was my turn to disrobe. Standing in front of my virgin neighbor, I peeled off my shirt and dropped my pants. I had picked the correct day to go commando.\n\nMy cock sprung forward at the prospects of being with this little cutey.\n\n\"See, I told you that he had a nice cock.\"\n\nI had almost forgotten that Jade was in the room. Looking over to the chair where she was sitting, I could see that her fingers were busy in her lower regions.\n\nTurning Franny so that her back was to the bed, I lifted her and sat her ass down on the comforter. She knew exactly what to do and scooted her ass back until she could use the pillows behind her.\n\n\"Spread wide for me.\"\n\nA nervous look took over Franny's pretty face. There was concern written all over it. I should have just parted her legs before I went down on her, instead of saying \"spread wide\" like a demented OB-GYN.\n\nThe smell of 18-year-old vagina was something that was no longer new to me, but it was something that I couldn't seem to get enough of. Franny's wasn't the exception.\n\nMy cheeks rested on her fleshy thighs and my lips and tongue went to work.\n\nFranny had a clean and fresh odor that was accompanied by her flowing juices. The pure, sweet taste and nectar of a virgin.\n\nUnlike her sister, Franny was quiet. No talking or words of encouragement came from her. The odd moan and gasp, but not a single word.\n\nMy hands glided over her body trying to have her relax. Finally coming to rest on her hips while my mouth was attached to her pussy. Normally I would have tried different things with her, but I didn't want to scare her off.\n\nLicking her softly to a point where she might have an orgasm, I lapped at her wetness and began to focus on her clit.\n\nA flash of white passed my head. Franny had whipped a pillow up off the bed and put it over her face. Her body tensed and a muffled scream rang out through the room, even if being suppressed by one of my pillows. My 18-year-old lover may not speak during sex, but she was certainly loud when she came.\n\nJade put her hand on my shoulder and pulled me back.\n\n\"Let me see.\"\n\nMoving my wet face away from Franny's pussy, Jade moved in to get a closer look.\n\n\"How was it Fran?\" No words, but the pillow moved. \"Well Killer, how'd she taste?\"\n\nHer blonde hair wrapped in my fingers as I pulled her face toward mine. Jade struggled to pull away, but that wasn't going to happen. Our lips met. Mine were open and hers were pressed tightly together. I gave her the opportunity to find out first-hand exactly how her friend tasted.\n\nReluctantly her lips finally parted, and her tongue poked out and touched mine. Within seconds, it was swirling around gathering up all of the juices from my face.\n\n\"You like that baby? You like the taste of her pussy?\n\nFranny had no idea what was going on around her. She was still laying in the same position, with her head buried. When the sexual excitement lapsed for a short second, Jade realized what she was doing and jumped back surprised.\n\nReaching up I tugged at the pillow covering Franny's face.\n\n\"There's still time to back out.\" Her eyes said no. \"Alright, but no hiding. If you want me to do this, I need to see you.\" Her head nodded affirmation. \"Okay, do you want to get on top so that you can control how much and how fast.\" Another nod.\n\n10 years difference in age isn't that much in reality, but in the world of sex, it can be huge. There I was, 28, waiting for an 18-year-old to fill herself with my meat.\n\nFranny's hair hung down over her face, hiding her beauty, as she looked between her legs while trying to align the head of my penis to her small opening. Together we watched as the tip disappeared into her. All that remained of her virginity was a thin barrier of skin. Reaching out, she grabbed ahold of Jade's hand and squeezed.\n\nWith only the sounds from outdoors and support from the Queen Bee, Franny lowered down and gave her cherry to the man that was her neighbor. Her dad's good friend.\n\nThere were still no words. A groaning as she rocked back and forth, but other than that, silence.\n\nAs expected, Franny was tight. She wasn't nearly as wet as she had been earlier, but that could have been due to nerves. At her own pace, up and down she pumped. With one hand in Jade's and one flat on my chest, she moved, joined together with me for the first time.\n\nSoon enough her hips found a rhythm that suited us both. My hand lifted until it touched the side of her face. Sliding it up over her ear, I pulled back her hair and looked at her pretty face.\n\n\"You're very beautiful Francine.\"\n\nA smile came to her face, but she was in a zone. Trying to concentrate on what she was doing, while trying to enjoy it. It made me want to kiss her.\n\nThere wasn't any hesitation as I pulled her down to me. Our lips locked and her tongue was the first to dart forward. The taste of lime from her drink was still present to me. I could feel her moving. She pulled her hand up off of my chest and the other away from Jade. Using both hands, she held my face as we kissed.\n\n\"Let me get on top.\"\n\nMy young lover complied with my request. The fall breeze surrounded my wet shaft as she pulled herself clear, exposing all of the combined liquids that were on it. Rolling onto her back I took my time to re-enter her. Kissing her chest, her neck, her lips.\n\nUsing a small amount of spit for lube, I pushed back into heaven. Franny may have been shy, but she was a natural. Her hips lifted in time with mine. Her body moved in a way that women much older than her sometimes never find.\n\nHer face was slightly contorted. I could tell that she was experiencing some discomfort, but not once did she complain.\n\n\"Are you okay?\" Her head nodded \"yes\" bravely. \"Okay, I'll cum soon, I promise.\"\n\nFranny's eye opened wide. Wide enough to frighten me back into reality and for the first time since we got in bed, she spoke.\n\n\"Not in me. I'm not on the pill.\"\n\nThat was all I needed. I pulled out and sat back on my legs.\n\n\"You can keep going, just pull out.\"\n\n\"Nope. Not a good idea, and don't give that option to your guy on Saturday. Make sure that he wears a condom. Promise.\"\n\n\"Promise.\"\n\nJade got nearer and took another look at her friend's lower regions.\n\n\"Wow Killer, you did a number on her. Look how red it is.\" Out of shear embarrassment, Franny put the pillow back over her face.\n\n\"Yours was just as red the first time. You just couldn't see it.\"\n\n\"I doubt that, but I wish.\"\n\nI was still waiting to explode so I fulfilled her wish. Grabbing Jade's shoulders, I spun her so that she was facing Franny, kicked her legs apart with my foot and pushed at the back of her neck. She knew that I wanted her to bend over, but she didn't want to do what else I had in mind.\n\nMy lips touched her neck just before my teeth bit her softly. She could feel my hardness pinned between us, pressing on her ass.\n\n\"Bend over.\"\n\nApplying more pressure with my hand, her stomach muscles relaxed, and she leaned over. Rubbing the tip of my cock over her lips I gathered up some lubricant and pushed in slowly.\n\n\"Oh, god.\"\n\nI couldn't be sure if her words were because of my cock being in her or because when I bottomed out, her face was only inches from her best friend's pussy.\n\n\"Do it.\" Her head shook violently back and forth. I pulled out so that just my tip was remaining in her, and semi rammed it back into her. Her \"fuuuuuck\" was loud enough to make Franny lift the pillow and look at what was happening. \"Do it.\" Now they were both shaking their heads.\n\nThis was not how I had seen my day going, but now that we were into it, I wanted an experience like I had never had before and might possibly never have again.\n\nWetting my thumb with a huge gob of spit, I dropped it onto Jade's tiny asshole and started applying pressure. When the tip popped in up to the first knuckle Jade gave me another \"fuuuuuuuuck\". I took it as a sign of acceptance and used my other hand to push the back of her head, so that her face pressed down and onto Franny's pussy. The pillow flew back over Fran's face, but Jade's head never lifted.\n\nI'm fairly sure that when Jade came up with her grand scheme to have me take her virginity when she came over to my house a few weeks back, she didn't see herself in my room being double penetrated by my thumb and my cock, while she ate the pussy of her best friend. At least not to my knowledge, because if she had, you could have fooled me.\n\nFranny was moaning again, with the pillow pressed so tight against her face that I was sure that she was trying to smother away her fears. And Jade was bucking back against my cock as it smashed into her tightness.\n\nI needed to cum, but I wanted to fuck Jade and give her everything that she needed to please her. So, I took long slow, smooth, powerful strokes until I felt her clamping down on me.\n\nLooking down at the frothy mess that was Jade's pussy, I couldn't wait until I could give it another lick, but when Jade stopped moving and groaned into the pussy that she was licking, I knew that she was getting close.\n\nJade still had her mouth attached to her BFF when she came. I wonder what it felt like having someone scream into your pussy while they licked it.\n\nMy build up of semen blasted into Jade, causing a flood of liquid emotion. A steady stream of my cream was dripping from her as I pulled free of her silky vise.\n\nThe outside sky was darkening as nightfall started to descend down upon us. We all lay naked on the sheets, quiet and unwilling to move. Various pieces of our bodies touching and entwined. Time passed. Lots of time. Then finally Jade spoke.\n\n\"I said that I'd join in if I chose to. Not because you forced me.\"\n\n\"No one forced you. I just guided you.\"\n\nWe all laughed at the situation. This was a new experience for us all.\n\nFranny surprised me by showing up at my house again on Friday afternoon. She told me that she had skipped 2 classes and said that she wanted to be sure that she was ready for Saturday. She was still shy, but without Jade in the room, opened up more and asked for me to do things and if I liked what she was doing to me. It was sweet lovemaking. I guided and talked to her the whole time and when it was over, Fran had spent more than 2 hours in bed with me.\n\nShe was beautiful, sweet and loving, and I believe that when she left my house, she was ready for her date.\n\nThat Friday afternoon was the last time that Franny dropped by my house for sex, with or without Jade. Turns out that she was in love with a boy her own age.\n\nJade made impromptu visits from time to time. They were always very random and at random times. Early morning, mid-afternoon, late night, to some times in the middle of the night. To her it didn't matter. But, like Fran, she started seeing a boy some time in late November, and that was the end of that.\n\nSurprisingly, May never said a word to Claude about Elle and me. And it never came up in conversation again. Claude and I watched all of the World Series games in his garage. They even had me over for the day on Thanksgiving. Too much food and an overload of football. Franny's boyfriend has a good arm on him and is hoping to play for one of the colleges that he applied to.\n\nThere was not a single uncomfortable minute between Franny and me. We hugged hello and gave each other a kiss on the cheek. Neighbors and friends.\n\n2 weeks later I saw Claude working in his yard.\n\n\"Buddy, it looks like the North Pole over there.\"\n\n\"Shit, this isn't even all of it. May wants it perfect. I'll be putting up lights for the next week. She freakin loves Christmas.\"\n\n\"So do you. I've seen all the lights that you put up. People have to put sunglasses on when they drive by your place.\"\n\n\"Screw you, Grinch. You're the guy who never decorates.\"\n\n\"Maybe I will have a reason to, someday.\"\n\nClaude had a sad look come over his face. He thought that he hurt my feeling by what he said. But the truth was, he hadn't. That was behind me. I would always have the memories, but I had moved on.\n\n\"Look buddy, we'd like you to spend Christmas day with us. It's always fun.\"\n\n\"Thanks, but no. Enjoy your time with your family.\"\n\n\"Come on. Everyone will be here. Elle's all finished school next week. She'll be moving back in with us. Says that we get to meet her new boyfriend over the holidays. Lucky us. I might shoot the prick if I don't like him. So, I need you here for support. Plus, there's too much fucking estrogen in the house. You gotta help me even it out a little.\"\n\n\"We'll see.\" Claude waved and gave me a \"yeah, yeah, just fuckin be here\" as I headed into the house.\n\nNew boyfriend? I was happy for her and sad for myself, all at the same time\n\nHoliday shopping isn't really my thing, but if I was going to the Lemay's for Christmas, I wasn't going empty handed. So, I made a couple of quick stops. The locals Walmart for cards, gift-cards, chocolates and gift bags, then the liquor store. Hell, I even bought a bottle of booze for Elle's new boyfriend.\n\nDecember 23<sup>rd</sup>, brought with it a light frosting of some snow, and with that came an invigorated sense of Christmas spirit. Everywhere you turned and every person that you saw threw a \"Merry Christmas\" in your direction. It was a good feeling.\n\nI decided to light the fireplace, open some wine and maybe a book, just relax and enjoy the falling snow.\n\nAs the fire started to fade, so did I. I made the decision to call it a night. A hot shower then hit my bed and get some rest for tomorrow. There was always a Christmas Eve festival in the town square, and I planned on attending. A bit of cider, eggnog and baked goods. I was really looking forward to it.\n\nThe cold winter wind whistled through the branches of the naked trees. The frigid wind blew the flakes of snow against the windowpane's silently, leaving small arches of build up in the bottom corners of the glass. I watched in near darkness. The only light was the multi-colored bulbs that outlined every tree and peak on the Lemay's property. Somewhere between twinkles of flashing light, I drifted off.\n\nDreams have never been something that came to me in my sleep. Good or bad, they avoided me completely, but on this night, I felt like I was dreaming.\n\nLaying flat on my back with one of my arms over my head, I felt movement in my bed. A warm, smooth, naked body slithered under my covers and curled up next to me. A silky leg lifted over mine and using its heel, it pulled the body closer to me. An arm crossed my chest and the hand attached to it held my ribcage. I could feel naked breasts touching my skin. Then a pair of soft lips touched mine. It was a sweet kiss that smelled and tasted of peppermint schnapps.\n\n\"Did you miss me, baby?\" The angel in my dreams had a voice that was soft, low and sexy.\n\nHer hand snaked down my chest, pulling at the hairs as it went. The feel of her slim fingers easing under the waistband of my boxers made me instantly hard. I recognized the soft touch.\n\n\"I sure did.\" When her tongue darted into my mouth as her hand wrapped around the shaft of my hardening penis, I knew that it was truly a dream, a living dream. \"What about your new boyfriend?\"\n\n\"What new boyfriend?\"\n\n\"The one your father told me about. Says that you're going to introduce him to the family over the holidays.\"\n\nHer grip tightened on me.\n\n\"I am.\" The movement of her hand on my shaft felt like that of an angel. \"It's you by the way.\"\n\n\"It's me what?\"\n\n\"It's you. You're my new boyfriend. I'm done school now, so I don't have to leave again. I have a job. It's a \"work from home\" just like you. Maybe we can work together, from here.\"\n\nElle pulled back the covers and said \"lift\". My boxers slid over my ass and she turned so that she could straddle me. The tip of my cock touched her moist outer lips, before she moved it into her opening. Elle's tongue pushed into my mouth at the same speed as my cock pushed into her pussy, slow and smooth. I was home again.\n\n\"You miss that baby?\" she said into my mouth. I just nodded. \"Good. No more other women, right?\" My head moved from side to side. \"That means Jade and Franny too.\" I nodded \"yes\".\n\nElle's hips gyrated over me, driving me insane. She moved them effortlessly, soaking every inch of my groin in the process.\n\nI could feel her vise clamping onto me.\n\n\"Cum for me baby.\"\n\nThere was a sense of urgency in her voice. Her hips moved and bucked faster and faster, until she tensed up and stopped.\n\nMy blast went off at the same time as hers.\n\n\"Shiiiiiit.\" She growled and collapsed onto my chest.\n\nMinutes later, long after I had softened and eased out of her, Elle got up and used my bathroom. I could hear pee tinkling into the toilet and the sound of running water. When she got back into bed, she curled up in the same spot where she had started.\n\n\"Share the blankets.\" She said, pulling the linens over herself. It would be the second time that Elle had spent the night sleeping at my house.\n\nChristmas had come early. I knew that it was only the 24<sup>th</sup>, but to wake up next to Elle made it feel like Christmas Day.\n\nIn the day light, I saw her for the first time in almost 4 months. Her hair was longer and gone was most of her summer tan, but she was even more beautiful than ever. I watched her sleep for an hour, before I got out of bed to make coffee.\n\n2 cups, 2 bagels, some fruit, and I returned. Breakfast in bed was the least that I could do for her.\n\nHer naked body was still wrapped in the blankets, but she was awake and watching the snow falling outside the windows. Her dark hair made a beautiful contrast against the white background. I hoped that she would notice how hard I was when I got back into bed with her.\n\nI watched Elle put cream cheese on her bagel and take a bite. Her lips looked sexy with toasted crumbs and butter on them.\n\n\"So, tell me about my sister.\" I shook my head no. \"She told me how gentle you were with her. Said that you treated her like a princess.\"\n\nI didn't say a word.\n\n\"She'll be there tomorrow with her boyfriend. Have you met him?\" Yes, I had. \"He looks like a nerd, but he treats her good. High school romance. They're not even going to the same college, so it's not going to last.\"",
        "The food was finished. Elle held her cup with both hands, as if she were warming them.\n\n\"Well?\"\n\n\"Well, what?\"\n\n\"What do you think about what I said last night?'\"\n\n\"Which part?\"\n\n\"The part where you're my boyfriend and where I move in with you. That part\"\n\n\"What about your parents?\"\n\n\"They both love you. You already know that. You're the son my dad never had. Always watching baseball and going fishing with him. Hell, he'd marry you himself.\"\n\n\"I don't know. Can you ever forgive me for sleeping with your sister and Jade? I mean, you did leave without so much as a good-bye.\"\n\n\"If I had said good-bye to you, I never would have left. Every time that I was having a shitty time at school, I thought about that night after Jade's party. It always cheered me up. And as far as Jade goes, fuck her. She texted me as soon as see saw me leaving here. I knew what she'd do. I just thought that you'd play harder to get.\"\n\nI reached to my night table and picked up my phone. 2 minutes later, the video of Jade telling the world about us fucking had finished. Elle didn't look happy, but she knew why I'd done it.\n\n\"You should have fucked her in the ass.\"\n\n\"I'm saving that for your beautiful ass.\"\n\nMy lips found their way to her neck.\n\n\"Keep that up and I swear we're staying in this bed all day.\"\n\n\"Do you honestly think that I have a problem with that?\""
    ],
    "authorname": "Frankenstein1962",
    "tags": [
        "older man younger woman",
        "older man",
        "younger woman",
        "widower"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-witches-of-huntington"
}