{
    "title": "The Old King and the New Bride Ch. 04",
    "pages": [
        "Hey, guys! Sorry this one took so long, but there were a lot of ideas that I had to cram in here. Also, 43 pages is a LOT of work. I'll do my best to crank out 5 a lot faster. For now, enjoy.\n\nChapter 4: Traitors and Thieves\n\nThat bitch. I'm going to fucking kill her.\n\nI make my way down the main hall as quietly as I can, ducking into the shadows at the slightest noise. I may be raging out of my mind, but I'm still in Leyna's disgusting body. No demon will know I'm really their queen and may question why a simple succubus is wandering the main hall unaided. That bitch knew exactly what she was doing: switching bodies with me gave her all the power she wanted and left me to navigate a demonic world alone.\n\nI hate that woman.\n\nI continue to skittishly walk down the hall, determined to stop her from taking over my life. Knowing Leyna, once she solidifies her new bond with Lucifer, she'll make up some stupid excuse to have me killed. I'll never bother her again and she'll have my husband all to herself without him ever finding out. She's an evil bitch, but a crafty one.\n\nThere's a sudden burst of noises behind me, signaling a new flood of demons entering the hall. I panic and dart to the side, squeezing into an enormous crack in the wall so I can hide. I stay completely still, hoping that no one will notice. Seconds later the hall fills with demons, all of them caught up in their own lives and oblivious to the world around them. Thankfully, I've squeezed myself far enough into the crack that I'm completely hidden by the shadows and out of sight. I'm safe for now. I just have to wait until the crowd dissipates and I can move on.\n\nI watch the crowd silently, waiting impatiently for them to leave. After three minutes the hall's still jammed and I'm getting antsy. The longer I wait here, the closer Leyna gets to stealing my husband away. I shift on my feet, anxious to get out of thus crack and rip that woman's head off.\n\nA soft tap on my shoulder nearly breaks my vow of silence. I spin around and stare into the darkness, barely able to slap my hand over my mouth in time to stifle my scream. The sconces out in the hall cast a few flickering strands on light into my hiding place, illuminating an enormous bisected abdomen and eight long, slender legs dangling above me in the shadows.\n\nI nearly faint. I hate, absolutely loathe spiders. They're disgusting, evil creatures that bite and crawl uninvited around my house. And now, there's one the size of a Volkswagen Bug hanging a few feet above me. This is Hell.\n\n\"Easy now.\" A deep, rumbling voice cascades down from the creature. \"Believe me, my dear, the last thing I want is to harm you.\"\n\nSlowly, the eight legs start to move, crawling down the wall and carrying the spider's massive bulk with them. As it descends, I can see startling patterns of red, blue, green and gold hair swirling around the abdomen. They're quite beautiful, but I shake my head and remind myself that this thing is still a spider. Pretty as it is, it's still horrifying.\n\nFinally, it crawls down the last few feet of the wall and turns to stare at me. Eight black eyes pierce through the darkness and watch me. A monstrous mouth with dozens of toothed parts move silently, and thin lines of saliva drip from two main fangs. My stomach twists itself so tight it almost bursts, and I let out a soft whimper.\n\nFirst Leyna steals my body, and now a spider is going to eat me. I'm fucked.\n\nThe spider raises one thing leg towards me. \"Easy. I've told you I mean now harm, Michelle.\"\n\nThe mention of my names stops my cycle of fear. How does it know I'm Michelle and not Leyna?\n\n\"How...how do you-\" my voice is shaky, but slightly relieved. Not everyone is fooled.\n\nThere's a glimmer of a smile inside its eyes. \"I saw the cause of your current misfortune. Luckily for you, I was crawling across the ceiling at the time of your argument with Lenya. I watched her switch forms with you and run off, while you remained unconscious on the floor. Had I been able to move faster, I would have taken you back to my children until we could decide what to do.\"\n\nRelief washes over my entire body. This spider, disgusting as it may be, is a witness to my predicament. I force down most of my fear, determined to have it help me. It may be the only hope I have of getting my body back and saving my husband.\n\nI swallow loudly and clear my throat. \"And you would be...\"\n\nThe spider laughs. \"Oh, of course. Forgive me. That was very rude of me not to introduce myself to the queen. I am Kerion.\"\n\nKerion!\n\nAnother bubble of relief rushes through me. Claire's friend, thank God! He's a spider, but a good one that's helped out another human before me. I'm definitely safe with this arachnid.\n\nI let out a soft sigh. \"Thank God.\"\n\n\"You're quite smart to have hid in here. If anyone had seen you, they'd have sent you back to the harems.\"\n\nI nod. \"I didn't want anyone seeing me. I need to find Leyna and kill her.\"\n\nKerion nods. \"I understand. Truth be told, you're not the first person in hell to want her gone. That woman has been a thorn in nearly everyone's side.\"\n\nI cock my head, staring at him. \"So why haven't they gotten rid of her.\"\n\nHe sighs. \"She's a wily one. Once she wants something, there's almost no stopping her. You're also not the first person she's switched bodes with to get out of a tight spot.\"\n\nI give a disgusted sigh. \"So she's been a super-bitch from the get-go.\"\n\n\"Yes. She's always had a difficult time understanding where her station is. She's too ambitious for her own good.\"\n\nI steal a glance towards the hall. It's still packed, and I start to worry she's sleeping with my Lucifer as we speak.\n\n\"What if she's already got him?\" I wonder quietly.\n\n\"She won't. Lucifer will be in meetings all day. We have a few hours to recruit help and get you back to normal.\"\n\nI look back at Kerion. \"But what if she gets to him before we can?\"\n\n\"The good thing about Leyna is that she's a terrible actress. Lucifer may fall for her act of playing you for a few days, but she can't hold it for long. After three or four days, he'll notice the woman he's married to is acting strangely and investigate why.\"\n\nI stare at him. \"She can't hold a character?\"\n\nKerion shakes his massive head. \"Leyna's too self-centered and lazy to keep up an act for long. Besides, playing you will mean she'll have to change her entire attitude and pretend she cares about someone other than herself. A few days of that and she'll be barking orders like she always does. At that point, Lucifer will know something is wrong.\"\n\nThat makes me feel a little better, but not enough to erase every fear I have. \"What if, in the few days she can play him over, she orders my execution? She's walking around in my skin. There's nothing stopping her from trying to get rid of me once and for all.\"\n\nKerion laughs again. \"Smart girl, but you have nothing to worry about. While we are a ruthless bunch who live in a ruthless world, we do have a few bureaucratic roadblocks to jump over for anything drastic to be done.\"\n\n\"Meaning?\" My anxiety -- a happier, less frightened type -- sparks up again.\n\n\"If Leyna were to order your execution to keep you out of the way, the decision would have to go through the Counsil first. Leyna's track record would have to include some very grievous charges to allow her execution. Although most find her annoying and snake-like, Leyna hasn't done nearly enough to warrant her death. That, and the process takes a minimum of a week to be cleared. By that time, Lucifer will have noticed his queen isn't completely normal and we will have had plenty of time to recruit help.\"\n\nI nearly collapse from relief. Even if she wanted to, Leyna couldn't just order me dead and move on. She'd have jump through a few flaming hoops first, and that would give Lucifer enough time to notice the flaws in her plan and allow me to seek him out and explain what happened.\n\nHell? Yes? Completely unfair? Not really.\n\nI look at Kerion again. \"Once he did notice there's something wrong with me, do you think Lucifer would know where to look first?\"\n\nHe nods. \"Lucifer's had a few demon women chase after him, but Leyna's been the most aggressive. If he ever though someone's messed with his queen, he'd chase her down first.\"\n\nMy twisted gut has relaxed itself a bit. I've got a few safeguards on my side until I can get my body back, and Lucifer is far too intelligent to be fooled by Leyna's charade for very long. Once I catch her and get my old self back, I'll beat the shit out of her and toss her to Lucifer. But I have to hurry. Leyna must know I've awakened and figured out what happened. She knows I'm gunning for her, so she'll be trying to make the first move before I have a chance to kill her.\n\nSilently, I shudder to think what will happen to her once she's been found out.\n\nBehind me, Kerion sighs. \"This isn't working. They should have left by now.\"\n\nHe's right. The hall is still swarming with demons. It should be barren by now, but they're staying for some reason and it's making me nervous. I shift on my feet, my gut twisting in anticipation of being discovered.\n\nKerion sighs again and inches forward, gently brushing against my arm as he crawls forward. \"Come. We don't have time to wait for them to leave. There's obviously something keeping them here, and we'll never get your body back in time if we try to wait them out.\"\n\nI freeze and stare at him. \"I have to go out there?\"\n\nHe nods. \"I'm afraid so, your highness.\"\n\nOn cue, my stomach completes another back flip. \"But what if someone notices that I'm not...\"\n\nHe turns to look at me. There's a smile in his eyes that clams me a bit. \"Leyna might be overly-ambitious, but she's smart enough to know her place when the time comes. She's still in training to become a full-fledged temptress, and all training succubae hold their gazes down when walking through the halls. Until they graduate to the likes of Babylon's whore, they're not allowed to make eye contact with higher ranking demons.\"\n\n\"Oh.\" I give a relieved sigh. If keeping my head down and my mouth shut will keep my alive, then that's a task I can easily accomplish.\n\n\"Just keep your head down and speak only when spoken to. You'll be fine.\"\n\nCautiously, he steps forward, barely stepping one slender leg into the mass of demons. He looks back at me and nods, ordering me to follow. I nod and take a deep breath, ducking my head and pulling an invisible zipper across my mouth. Kerion nods one last time and steps out into the crowded hall. I race after hum, bursting into the main corridor and instantly overcome by the noise.\n\nEveryone is talking, and I can't make heads or tails of who's saying what. I shake off my momentary confusion and step up behind Kerion as he makes his way down the hall. I stay right behind him, staring at the marble floor as I follow Kerion through the crowd. He's obviously got some respect in this world; the demons that see him coming step out of the way and smile at him. Their smiles fade to frowns when I pass by, but I'm relieved to know they're not angry at me. It's Leyna they hate -- I'm just wearing her skin.\n\n\"Kerion,\" I risk a whisper. \"Where are we going?\"\n\n\"To Lilith. She's the only one that can help us.\"\n\nI nearly screech to a halt. Lilith? She's going to help me? I hold back a burst of laughter. Lilith would never help me! She hates me too much to care about what happened with Leyna. With my luck, she probably planned the whole thing.\n\nI scowl at the ground, seething that we have to ask Lilith for help. I'm honestly a little upset with Kerion, even though I know he has my best interests at heart. I don't want to see Lilith. Once we tell her what happened, she'll probably laugh at me, or attack me or-\n\n\"Kerion!\"\n\nA deep booming voice startles me. I glance up to see Belphagor rumbling towards us. He's bigger than I'd ever imagined him being, though I've only seen him sitting down at dinner. His ebony wings -- or what's left of them -- are folded against his back, his bright green eyes trained happily on the old spider.\n\n\"Where are you clambering off to?\" He walks over and claps an enormous hand of Kerion's abdomen.\n\n\"Leyna and I have business with Lilith.\" Kerion sounds genuinely happy to see Belphagor. The two of them must go back a long time.\n\nBelphagor's eyes flick to me and widen a bit. \"What does Lilith want with her?\"\n\n\"Nothing. We want to see Lilith?\"\n\nA burst of laughter rolls from the demon's mouth. \"Why are you visiting that old crone? You may be one of the oldest of us here, old spider, but she's not going to pay you any respect.\"\n\nKerion nods. \"Yes, I know. I'm used to her outlandish behavior. I wouldn't expect anything more from that spoiled brat. I do wish the master would put her in her place every once in a while.\"\n\nA broad smile crosses Belphagor's lips. \"He did! The bitch was fool enough to insult the queen. Lucifer nearly tore her head off! She scampered away as soon as dinner was over.\"\n\nMy stomach does a front flip this time. So the look of horror I saw on Lilith's face was real. My husband probably erupted at her for trying to tear me down. And by what I'm hearing, he scared the shit out of her. I smile to myself. It's nice to know I have a husband, fallen though he may be, who will defend me instead of letting the insults fly.\n\n\"Though, I'll admit, Lucifer didn't do all the work.\"\n\nKerion's eyes widen a bit in surprise. \"How so?\"\n\nBelphagor's smile widens an inch. \"The queen held her ground just fine. She was calm the entire way through, but she verbally scratched Lilith's face off. She's human, but she's a strong one. And that chest! I swear, old man, you could recite Shakespeare off that balcony!\"\n\nPride bubbles to the surface. So Belphagor sees me as strong and sexy. Good, that means I've made a notable first-impression on the angel. My mix of politeness and strength has served me well. I hold back my smile, staring at the ground as the two males continue their talk.\n\n\"So, why is it you want to see Lilith?\"\n\nKerion does his best interpretation of a shrug. \"Leyna needs a bit more training before she graduates. I thought the whore queen herself could offer us a bit of advice.\"\n\nBelphagor's eyes flick to me. I risk a glance up at him, biting my lip involuntarily as I do. Those green orbs narrow a bit in disgust, then soften suddenly. Then they widen, as if he's just realized something astounding. He cocks his head to the side, still staring at me but utterly confused.\n\nHe looks back at Kerion and speaks in a hushed voice. \"Come with me.\" He spins and begins to make his way down the hall, parting through the sea of demons like he's Moses.\n\nKerion looks at me worriedly, but turns and follows Belphagor. I stay right behind him, walking just to the side of his abdomen so his body shields me from oncoming demons.\n\n\"Why is the hall so busy?\" Kerion asks.\n\n\"Michael's arrival really set the boss off. We're taking refuge until his mood calms.\"\n\nShit. He's still angry. Damn it, Michael!\n\nWe walk through the demons, then take a sharp right down one of the many halls that lines the main corridor. We take another right and suddenly we're engulfed in pitch-black darkness. I grab onto Kerion's leg for support until my eyes adjust. They don't need to. Belphagor claps his hands and a little flame alights in the single sconce above us.\n\nWe're in a tiny alcove hidden between the walls of the fortress. In here, we're hidden from the view of the other demons and safe from suspicion.\n\nBelphagor turns and starts at me, his eyes narrowing in anger and disbelief. \"You tell me the truth, Kerion. This isn't Leyna.\"<br> I stare at him, thunderstruck. My heart nearly stops beating and my lungs seize up. Can he see through Leyna's trick? How can he tell? Is he going to kill us?\n\nKerion steps forward. \"Belphagor, what would make you think-\"\n\nThe demon raises a hand, cutting of Kerion's words. \"I said be honest. I've known that witch too long to be fooled. This woman is far too demure and quiet to be Leyna.\"\n\nShit.\n\nSo I've failed at pretending to be Leyna. I can only hope she's stumbling at being me as much as I am being her.\n\nKerion sighs. \"Unfortunately, this isn't Leyna.\"\n\nBelphagor glares at the old spider. \"Then who is she?\"\n\n\"That's quite a story, Bel. Perhaps one best suited for less hectic times,\" Kerion's struggling to push us forward, overpowered by the rank and power of the angel before us.\n\n\"I said be honest with me, old spider! Who is this girl?\" Belphagor's furious now, annoyed that Kerion's avoiding the question.\n\nYou're queen, aren't you? Stand your ground, dummy.\n\nI nod to myself and gather whatever strength I have left. Before Kerion can answer, I raise my head and look straight into Belphagor's eyes. \"How dare you yell at him. He's done no harm to you, only offered me help. If you're so curious as to who I am, then question me!\"\n\nThose piercing green eyes widen in shock. My heart rate picks up again. I've stunned him enough to keep him from attacking Kerion, and I may also have set the stage for proving who I really am. If I can hold my ground for a bit longer, Belphagor might figure this out and offer us his help, too.\n\n\"You ask who I am. I am your queen, Belphagor. And while you are in my presence, whether I am in my body or not, you will show respect to Kerion. He has done more kindness to me than most humans have. You will not yell at him again, or you will face my wrath as well as my husband's.\"\n\nBelphagor stands in stunned silence for a moment. Then his eyes narrow and his mouth turns down into a scowl. My throat locks up again, and I wonder if my attempt to prove myself has backfired and only pissed him off.\n\n\"How did she do it?\" Belphagor's voice is low, furious...deadly.\n\nIt's my turn to be stunned, but this time it's out of relief. The gears in his head turned enough to put the pieces together, and now he's pissed at Leyna for switching bodies with me. Small wonder, since he probably hates Leyna as much as I do. She's probably slighted him or made derogatory comments about his character. Bitch.\n\nI shake my head. \"I don't know. She surprised me in the hallway, kissed me and took off with my body.\"\n\nBelphagor snarls and slams his fist into the wall, causing the stones to shake and streams of dirt to pour onto my shoulders. \"That bitch! I knew she was up to something!\"\n\n\"That obvious, huh?\" I ask softly.\n\nHe snorts angrily. \"That woman has been plotting to take the master for centuries. Unfortunately, your majesty, as a human, you've provided her with the perfect chance. You're not demonic, so you have no defense against her tricks. Stealing your body was the simplest way she could get her prize without having to do anything to earn him.\"\n\nI scowl at the ground. \"So I was just her easy way out.\"\n\nBelphagor nods apologetically. \"Yes. Leyna has never liked actually doing any work, so in a twisted way, being a queen suits her well. But we know her well enough to never allow her to actually run for the position. With her in charge, nothing would get done, the master would be out of commission, and Hell would fall into ruins within months.\"\n\nI stare at him, bewildered. \"But I'm human. What makes me a better choice?\"\n\n\"Because you are human,\" he smiles. \"Firstly, the master has wanted to find a virgin girl to corrupt for centuries, so having you as a queen fits his fantasies perfectly. Second, you're far more balanced and dependable than Leyna, which means even if Lucifer gets taken out for a few days, you'll make sure things still run smoothly. That, and you've actually got a spine to you. You may be human, but you've got more credibility and strength in one finger than Leyna will ever have.\"",
        "Try as I may, I can't hold back my triumphant smile. One of my husband's right hand men has just solidified my status as queen and shot down Leyna in one blow. Maybe, just maybe, we can win this stupid game.\n\nKerion sighs in relief, then steps forward. \"Belphagor, we're going to need your help if we're going to get Michelle's body back.\"\n\nAn award-winning smile crosses the fallen angel's face. \"Of course! Anything to take out that evil witch and restore the crown to the rightful head. What can I do?\"\n\n\"We know that even if Leyna does summon Michelle for an execution, it won't happen for at least a week while everything is sorted out. We need to make sure she never files that order in the first place. Can you and the other angels try to distract Lucifer from her until we can get Michelle back to normal?\"\n\n\"But you can't tell Lucifer!\" I interject without thinking. \"We need to keep this quiet. If we tell him, he'll go nuts on Leyna and we might lose the chance of catching her by surprise. Please. I know it may be hard to keep this from your boss, but we need make sure Leyna has no idea we're coming.\" I look up at the hulking former angel pleadingly, hoping he'll understand.\n\nBelphagor's brilliant green eyes shift to me. With a soft, knowing smile, she inclines his had, gently grasps my hand and kisses it lightly. \"For my queen, anything. Neither Lucifer nor Leyna will know of this until the time is right.\"\n\nI smile back at him and nod regally in reply. \"I really appreciate your help. When this is resolved, I'll tell Lucifer how much of a help you were.\"\n\nHis eyes light up. \"You're honest?\"\n\nI nod. \"I'm a human, not a demon or trickster. I'll keep my word if you keep yours.\"\n\nHe nods again. \"My lady, I have seen your strength and fortitude. Crossing you would be the last thing I would ever want to do.\"\n\nI'm not sure if I should be proud or worried. Being respected is a good thing, but feared? I don't want this fallen angel to be frightened of me just because I have Lucifer's ear. All I want is a little help and courtesy, which I'm luckily getting.\n\nI smile at Belphagor. \"For a demon, you're very gracious.\"\n\nHis smile is warm. \"There are some of us who still remember the old ways. Before we fell, courtesy and kindness were the norm. And while we may not be so gentle now, we've carried a bit of our teaching down here with us. Lucifer is the most insistent about using our manners.\"\n\nMy eyebrows raise an inch. \"Really?\"\n\nUnexpected, but definitely noticeable.\n\nHe nods. \"He's more of a gentleman than most pastors would like to admit. He is the oldest of us, so it only makes sense that he keeps us in line and keeps the ship running straight. Mostly, I think he uses his impeccable etiquette to throw people off. It catches them off guard and sets them up for failure. But around you, my lady, I think it's an honest attempt to treat you fairly and respectfully.\"\n\nI eye him curiously. \"Fairly?\"\n\nBelphagor shrugs. \"He's a trickster by nature, but he views you as a worthy queen and someone who can tow the line as well as he can. Despite your humanness, he honestly sees you as someone to be respected and praised. If you can show your spine against Lilith, he's sure you can handle anything.\"\n\nMy heart and my pride swell simultaneously. It's wonderful to hear I have a husband who will not only defend me, but respect me as well. If I've earned his stamp of approval, I'm practically set for life.\n\nKerion clears his throat. \"Time is of the essence, you two. Even though Leyna won't have a good chance at having you executed, she can still try to manipulate the system to block our attempts of getting you back to normal.\"\n\nShit. Right, time to refocus.\n\nI turn back to Belphagor, my mind resetting and my shoulders straightening. I flip my now-red hair back from my face and gather my queenly strength. \"Belphagor, I need you to gather the other fallen angels and explain what's happened. Again, don't let any of them go running off to tell Lucifer, but they need to know what's going on so Leyna doesn't try to lead them astray. See what you can do about stalling any of her attempts to have me killed or tossed out of here.\"\n\nHe grins and bows regally, taking my hand and kissing it gently. \"My lady, no order of hers will pass through the Counsil doors.\"\n\n\"I really appreciate this,\" I smile back.\n\nHe straightens, still grinning. \"For the rightful queen, anything.\"\n\n\"Excellent,\" Kerion interjects. \"Now go. Make sure no word of this gets past the angels.\"\n\nBelphagor nods, gives me one last warm smile, then turns and bolts out the small alcove and into the river of demons. Kerion and I peek around the corner and watch him disappear into the endless bodies.\n\n\"You think he'll keep his word?\" As much as I trust Belphagor, a tiny sliver of doubt creeps into my mind, making me wonder if we've actually gained another enemy rather than an ally.\n\n\"Belphagor is one of the most virulent supports of Lucifer's rule. He also respects and admires you, so we're in good hands. If he did turn on us and Lucifer were to find out, the master would have his head.\"\n\nI nod, the knot of unease slowly unraveling. Quietly, Kerion steps around me and crawls forward, looking back and beckoning me to follow.\n\n\"Come. We must see Lilith. Even with Belphagor and the other angels, it may not be enough to convince Lucifer of the truth. As annoyingly spoiled and arrogant as she is, she still holds a high place in Lucifer's court. With her, we'll have a better chance of winning this game.\"\n\nI nod and step forward, though I'm not very happy about what we're gong to do. Lilith envies me and wants me dead as much as Leyna does; she simply more aristocratic and sly than her emotional doppelganger. Asking for her help will be like asking my mother to give up her collection of antique dolls. Honestly, she'd rather die.\n\nWe approach the opening that leads to the main hall. It's still chock full of demons, but we've managed to slip in before, so this time should be easy. Kerion checks on me one last time before sliding out into the fray. I follow right behind him, keeping my head down and my mouth shut.\n\nThe sound of endless demon voices is almost deafening, but I stay one step behind Kerion as we make our way through the mass of bodies. Like before, the demons that see us coming smile and step aside, clearing a path for us to walk. They ignore me, and I ignore them. None of them actually know what's happened, so to them I'm still a man-eating spoiled brat who hasn't learned her place yet. I harbor no anger or irritation towards any of them. How could they know we've switched forms?\n\nI shrug to myself and keep pace with Kerion. If I can successfully play my part, we'll get out of here and make it to Lilith without a scratch. If not...I'm fucked.\n\n\"Come on, Leyna!\" Kerion looks back and barks at me. \"I won't keep Lilith waiting just because you're having another tantrum.\"\n\nOnce again, my four years of high school drama class kick in. I scowl at the ground, though I flick my eyes up to glare at him. I lift the hem of my dress from the ground and 'begrudgingly' pick up my pace, hoping that my impression of Leyna is enough to convince the mass of demons that surround us. It seems to work; most of the demons either ignore me or shoot me a disgusted glance.\n\nThey're lucky this is all a ruse. If they had done that to me while I was still queen, Lucifer would have their heads.\n\nMy heart aching from the idea of insulting my subjects, I manage to sneer back at them as I follow Kerion down the hall. We take a sharp turn down another dimly lit hallway, the immediately swing right, stopping just before a pair of enormous carved oak doors. Images of fornicating demons and impaled human souls stretch across the dark surfaces, catching the light of the sconces just right so that it makes them look even more menacing,\n\nKerion steps forward and taps on one of the doors, the sound echoing through the small hallway.\n\n\"What?!\" Lilith's sharp, angry voice rolls through the wood, making me jump back in surprise.\n\n\"Don't give me attitude, little girl!\" Kerion roars back. \"You and I must have words.\"\n\nThere's a soft exasperated sigh, like the ones a teenager gives their parents when being scolded. \"Fine!\"\n\nThe doors swing in, revealing an enormous marble-lined room that mirrors the main foyer. The marble is a softer green rather than black and grey, and there's only one small throne in the middle of the room. Dozens of training succubae mill about the room, chatting to each other and gazing at us curiously as we enter\n\nLilith reclines in the main chair, her lavender Grecian gown spilling over the twisting metal edges and pooling on the floor around her bare feet. A thin gold tiara adorns her head, almost melding perfectly with her thick blonde hair. Her dark blue eyes flick to us, narrowing when they see me. Her full lips twist into a wicked smile as we near her chair.\n\n\"Girls,\" she calls out. \"You're dismissed for now.\"\n\nThe mass of succubae all nod in unison and stream past us out the doors. One girl with short-cropped red hair smiles devilishly at me and feigns accidentally slamming into me on her way out. I react the only way I can think Leyna would: I 'accidentally' bump her back, catching her off balance and nearly sending her to the ground. She glares at me as she exits into the hallway. I smile back, waving at her as the doors close.\n\nThe doors close as the final succubus exit the room, leaving Kerion and I alone with Lilith. The bitch queen sighs dramatically and slumps back into her chair, twirling a lock of her hair between her fingers. Her eyes never leave me, and I give her the same courtesy by glaring at her with everything I've got.\n\nHer lips turn up in a sarcastic smile, and her gaze moves to Kerion. \"So what is it you what, old spider?\"\n\nKerion steps forward, clearly unaffected by her power and age. \"We need your help, Lilith.\"\n\nShe throws her head back and gives a sharp laugh. \"You! Need my help! The great, wise Kerion comes crawling to me for assistance? Oh, this is perfect!\"\n\nKerion remains still, unfazed. \"Yes, you insolent little brat. We need your help.\"\n\nLilith's laughter stops abruptly, and she snaps her head forward to glare at him. \"Brat, you say?\"\n\nLooks like it to me.\n\nShe gives us another sarcastic smile. \"If anyone in this place is a brat, it's the new queen.\" She sneers to herself. \"She's a fucking human, and yet Lucifer's practically drooling over her.\"\n\nThat's right. He's nuts about a human, not you.<br> I'm barely able to hold back my smile.\n\n\"I know your attitude, Lilith, but have a little respect for Michelle.\" Kerion's voice is irritated. \"She may be human, but she's gotten closer to the master than anyone.\"\n\nLilith's sneer remains. \"Only because of her tits.\"\n\n\"Beside the point,\" Kerion stops another rant from starting. \"You're only upset because your childishness keeps you from accepting defeat. Had you matured a bit more, or tried to act like a woman, you'd have moved on by now.\"\n\nShe sulks like the child she is. \"I am not jealous!\"\n\nKerion shrugs. \"Then move forward and hear us out.\"\n\n\"Fine,\" she spits, crossing her arms over her chest and glaring at us.\n\nI barely keep myself from rolling my eyes. For someone as formidable and infamous as Lilith, she acts like a rotten brat. I suddenly realize that she's much like my mother, only worse. Both of them are only happy when things go their way, otherwise they sit and whine for the entire day until someone finally acquiesces to their demands to shut them up. Lilith's not a scary as I had originally thought, just really annoying.\n\nKerion clears his throat and steps forward. \"The queen's been replaced.\"\n\nLilith stares at him, slightly dumbfounded. \"What?\"\n\n\"Leyna's found a way to switch bodies with Michelle. She's parading around as the queen.\"\n\nLilith's eyes widen, flicking from Kerion to me. \"Leyna's right there!\"\n\nFor the first time that I've been wearing this skin, I'm indignant. \"I'm not Leyna!\"\n\nLilith's eyes shoot to me, widening then narrowing in confusion. \"Yes, you are, you ambitious little whore! Don't play games with me!\"\n\nKerion shakes his massive head. \"No, she's not, Lilith. This isn't Leyna. This is Michelle in Leyna's body.\"\n\nThere's a silence as the two of us wait for her answer. Lilith continues to stare at me, switching from outraged to confused and every emotion in between. Finally, she sighs and sits back in her chair, lacing her long fingers together and closing her eyes.\n\n\"So the bitch finally got away with it,\" she whispers.\n\nKerion, as relieved as I am, nods. \"Yes. She managed to catch Michelle off guard and switch bodies with her. I witnessed the entire thing, Lilith. Take my word for it when I say this is not Leyna.\"\n\nAnd she's prancing around with my husband!\n\nLilith's eyes open, sliding to me. \"So this is the new Michelle?\"\n\n\"New?\" I stare at her, confused. \"You think that just because I'm not in my body I'm just some replaceable thing?\"\n\nHer evil smile returns. \"As far as I'm concerned, you're not my queen right now. No crown, no queen.\"\n\nOh, super bitch. I've had enough of you.\n\nThe boost in self-esteem and pride I've gained from being queen comes roaring to the surface, giving me a much-needed blast of strength. Unfortunately, my defensiveness rises too, along with my competitiveness. \"Come down off that chair and say that to my face.\"\n\nLilith stares at me for an instant, caught off guard by my challenge. Her smile returns anyway. \"At least I'm in a throne. You seem to have lost yours. And to a succubus, no less.\"<br> I'm hurt, but not surprised. Lilith may have the body of a woman, but like most of the girls I went to high school with, she's got the mentality of a spoiled kindergartner. Luckily, I've dealt with this type of personality before, so I know just how to handle myself.\n\n\"Fine, then. Since you're too much of a coward to come down here, I'll come to you.\"\n\nBefore Kerion can step between us, I make my way toward Lilith's chair. She bolts upright and glares at me, outraged that I would dare challenge her. But in her eyes, I can see fear and uneasiness. She's unused to someone not taking her word as a final answer, so seeing me walk towards her with pure determination and frustration is a shock to her.\n\nI stop a foot before her chair, staring down at my most powerful adversary. In this body, I'm weak and can't defend myself. But my soul is the exact same as before, so I can and will stand my ground no matter who I look like. If that means I have to fight Lilith head-on, so be it.\n\n\"As your queen, I'm giving you an order,\" I make my tone as steady and even as I can. \"Say that to my face.\"\n\nFurious, Lilith rises from her chair and looks me dead in the eye. In Leyna's body, we're evenly matched in height; if I were in my body, she'd have to look up slightly. But here and now, we're on even ground. No unfair height differences, no fights over whose boobs are bigger. It's just the two of us staring at each other and fighting it out like normal, hell-born women.\n\n\"I said,\" she rolls the words in her mouth, savoring their taste. \"You're not my queen.\"\n\nMy mask of cool composure never shifts. \"Fine. Than I refuse to recognize you as my superior as well.\".\n\nShe pulls back an inch, indignant. \"How dare you! I watch over ever succubus that comes through here!\"\n\nI shrug. \"But I'm not a succubus. Like it or not, I'm your queen. I may be in a different body, but I still rule this place.\"\n\nShe smiles at me again. \"Only until Lucifer figures out what happened. One he realizes the woman he's sleeping with isn't you, he'll toss her and your body into the fire pits. Which means you'll be stuck here in Leyna's body and Lucifer will be free game.\"\n\nFor the second time in my life, I explode on Lilith with full force.\n\n\"You spoiled, rotten little whore! How dare you presume me to be so weak that I would roll over and allow myself to be cast aside! After all I've gone through! After all the shit that's been dumped on me! I don't care if you were born and raised in the dirtiest slum in Jerusalem! Your queen has been replaced, hell is going down the drain, and all you can think of is yourself!\"\n\nShe steps back a foot, trying to retreat but having nowhere to run. Her eyes are wide, filled with shock and horror. Exactly what I want.\n\n\"Being soulless and empty is no excuse for acting like a trashy, spoiled child. Lucifer is your master. Your obligation in life is to defend him at any cost, even if that means putting up with me. Now, I give you a choice. Either rise above your childish behavior and act like a woman who's worthy of your position, or continue with your games and see your master and your world fall to pieces.\"\n\nMy heart is pounding, and my pride and anger has swelled beyond the confines of my tiny frame, but I don't care. I've said my piece. The ball's in Lilith's court now, and it's up to her to decide if she wants to make or breaks us.\n\nShe stares at me for a moment, her eyes still wide and fearful. Slowly, though, her face returns to its normal snobbish appearance. A sly smile breaks on her lips, and she gives a quiet laugh.\n\n\"You've got a backbone, I'll give you that.\" Her smile never fades. \"You're human, but at least you've got some strength to you.\"\n\n\"Damn straight.\" My defensiveness has subsided, but my irritation remains on full blast. \"I say again, chose your path. Either find yourself under the rule of a highly unstable succubus who's willing to let your world fall into ruin, or helps us save it.\"\n\nShe half-scoffs, half-laughs at my order. \"Oh, sweet Michelle. Thinking she has the power to rule our world. Such a simple little human girl.\" She steps forward, closing the tiny distance between us. Her smile widens, becoming more sinister and ugly.\n\n\"You really think he cares about you? About a mortal girl who has no business holding the queen's throne? No, he doesn't give a shit about you. You're just a silly little toy he brought down here to play with, not a queen. You don't deserve him like even Leyna does. At least she's a fucking demon. But you...so simple, so quiet, so weak. You don't have what it takes to rule over us. And once Leyna signs that execution order, I'll never have to deal with your stinky, worthless-\"\n\nI don't let her finish. Cocking my arm back, I swing as hard as I can and smack her across the face. She squeals and stumbles backwards, cupping her cheek in her palm. Somehow, I manage to keep myself from exploding in rage, but I'm more than done with this bitch. She's obviously too absorbed in her own chance of stealing Lucifer to care about Hell falling into Leyna's hands.\n\nFine, then. I'll do it myself.\n\nSpinning around, I walk away from Leyna and her exquisite throne, striding across the marble floor with my head held high. I pass by Kerion, who watches in amazement as I dare to turn my back on one of the most powerful demons here.\n\n\"Come on, Kerion,\" I call as I make my way to the doors. \"She's not going to help us.\"\n\nWithout hesitation, Kerion nods and follows behind me. Without having to look, I know Lilith has recovered behind me and is glaring daggers at my back. I don't care. She's not going to help me save my home or my husband, so she can rot in Heaven for all I care.\n\n\"Kerion!\" she calls after us. \"You're going to follow her?\"\n\nKerion stops and turns to face Lilith. I do the same, partly because I want to wait for my friend and partly because I want to watch the fireworks.\n\nKerion nods to Lilith. \"Yes. Unlike you, Lilith, my loyalties are set with those who have offered me help and kindness, not privilege and power. You choose to sacrifice our world and our master for your own petty jealousies. Your selfishness with be your end someday, and Michelle and I will be there to laugh as you tumble from absolute power into oblivion.\"",
        "Having said his piece, Kerion turns back toward me and crawls across the marble to the doors. Lilith stands by her throne, staring wide-eyed at the two of us. She's never been called out before by anyone, and now she's just been blasted by a human and a very powerful spider. We've knocked her off balance a bit. Good.\n\n\"Ah, one final thing...\" Kerion never turns around as he addresses Lilith. \"If Michelle and I do manage to recover ourselves and fix this mess that Leyna's set up for us, I'll be sure to tell Lucifer how very helpful you were.\"\n\nI smile as her jaw hits the floor. Kerion threw out an amazing last card. The threat of facing my wrath might not be enough to frighten her, but facing my husband's wrath leaves her speechless. Risking facing his anger just to be spiteful is suicide on her part. I watch her lip tremble as she considers just how bad Lucifer's eruption might be.\n\nKnowing my husband and the situation we're in, it's probably going to be epic.\n\nForgetting to take one last look at her, I spin on my toes and stride out the doors. Kerion follows close behind me, his head held almost as high as mine. We may not have succeeded in gaining Lilith's help, but we definitely left one hell of a soul-searching session for her. I celebrate quietly as we turn back into the main hallway. I showed her my backbone twice now, so she knows that I'm ready and willing to use it.\n\nThe main hall is empty now, almost deathly silent compared to when we first entered here. I'm relieved; Kerion and I can talk in peace now without being questioned or berated by an overly-curious demon.\n\nOne of his long, slender legs strokes my back as we walk. \"You did very well back there. I can see why the master trusts you so much.\"\n\nI smile back. \"You weren't so bad yourself.\"\n\n\"Gah, that woman is nothing to me. I've dealt with her on a few more childish occasions than that. We're all used to it now.\"\n\nLilith can get more childish?\n\nI sigh and stare at the ground as we walk. \"It's sad that she's willing to sacrifice her entire world just to see me miserable.\"\n\n\"That creature would sell her own mother to gain power,\" Kerion adds.\n\n\"Shit. Even I wouldn't go that far, and my mother's the one who got me into this mess.\"\n\nMy stomach turns at the thought. Mom's a little self-absorbed, but I'd never toss her into the pits for money or power. Not that I'd ever need to; her greed got me Lucifer and a crown, so I'm practically set. But I know her. Greedy as she is, I'm still her daughter, and there's been more than one occasion where she's gone ballistic on someone because they messed with me. She's a mess, but if I were in trouble, she would care enough about me to push Lilith into the fire first.\n\n\"Some people are users and abusers, nothing more.\" Kerion sighs along with me. \"But we may have a chance with that last threat. As insatiable and self-centered as she is, Lilith's no fool. She knows that once the master find out what happened, he'll figure out that she never helped us when she had the chance. She's risking her black soul to spite you.\"\n\n\"Well...I guess that's good.\" My stomach is still turning from the thought of my mother. I wonder how she is. I haven't seen her since she was presented to me. I hope she's okay through all of this. I'd hate to lose her because Leyna and Lilith want my Husband more then Hell.\n\n\"It will certainly give her something to ponder.\"\n\nI swallow whatever fear I have and straighten my spine. I set my eyes straight forward, staring down the hallway in the direction of my bedroom. Down there, my unknowing husband and my evil hyper-bitch doppelganger wait for me. I'm scared to fight her, but I have no choice. It's do-or-die time, and I'm ready to do.\n\n\"Well, until Lilith decides to help us, we do this alone.\"\n\nKerion nods and follows closely behind me, ready to sacrifice life and limb for a queen he barely knows. Loyalty at it's best.\n\n* * *\n\nMotherfucker.\n\nThe thought was angry, filled with hatred and disgust. And for good reason. That idiot Bradfield dared to show his spoiled face again, demanding yet another chance with Michelle and taunting him with his own twisted ideas of superiority and power.\n\nIt was a miracle in itself that Lucifer didn't kill the boy this time.\n\nInstead, all it took was a few bursts of fire and another round of degradation to send the idiot packing. A spoiled little shit with a mouth to match, but completely lacking backbone or the ability to defend himself. It amazed Lucifer that this boy's face was still intact; surely he'd pissed off enough people with that attitude to warrant a few good beatings.\n\nThe old angel sighed. He didn't know why he spared the boy's life. It wasn't in his nature to do so. If he did things his way, that brat would be a soot stain on the marble flooring. But no. Something was holding him back from incinerating the child. Something strong, powerful and beautiful.\n\nAh, that's it. Killing him would upset Michelle.\n\nHe stopped, standing completely still in he empty hallway, his mind spinning and his emotions going haywire. Since when did he care about a human's emotions? After millennia of manipulating and seducing them to their dooms, he now suddenly cared for how his queen might feel.\n\nBut why? True, Michelle was his queen, but she was still human. Skinny, weak by comparison and completely unacquainted with the rules of this realm. It shouldn't matter what she thought of his actions. All she needed to do was keep his bed warm and the spare throne occupied. Her thought and emotions shouldn't have even been considered on the issue.\n\nUnfortunately, they were. As much as he hated to admit it, Michelle did have a certain charm that left his head spinning and his knees weak. She could tempt him into anything, even a round of rough sex minutes after spilling his heart into that bath. She could tease him, taunt him and toy with him. And every time, he fell for it and ran straight into her arms.\n\nLucifer sighed and continued his languid pace. A human... millions of years later and it was a human that brought him to his knees. Not Michael, not his father. A teenage human girl from Arizona with long, dark hair and eyes that pierced through his rotten soul.\n\nWomen.\n\nAs much as he filled his thoughts with anger and frustration, he knew he could never deny that woman anything. She held what was left of his heart in her soft, warm hands, and she wasn't letting go for blood, flood or fire.\n\nNot that he minded being entranced by her. Michelle was a knockout in her own right. Long legs, soft skin, eyes that burned through him and a rack he could springboard from. She was by no means as famous as Gisele B\u00fcndchen-- poor Gisele could never compare to his lithe, ample queen -- but she was more than tempting enough to draw his eyes during even the most crucial of conversations.\n\nBut it was more, much more than her simple appeal or her ability to coax him into anything. Michelle cared for him, taking the time to let him rant and pour his heart out when no one else would care to listen. She'd shown him kindness and sympathy when no one else dared to. She kept repeating how much she loved him, how much she wanted him, and how much she never wanted to hurt him. How she would never leave him until he tried to harm her.\n\nShe'd promised that. No one had ever promised him that. Even his father had abandoned him, and for the slightest of reasons. But Michelle...she had more courage and heart in her than most demons. She'd charmed Beelzebub and the others, and managed to put Lilith in her place, so she couldn't be completely foolish and incompetent. In truth, she was anything but. After spending only a week being married to her, Lucifer could tell she was more than able to hold the reigns of his kingdom. If Michael somehow managed to take him out for a moment, Michelle would make sure the ship stayed afloat.\n\nIt was a deadly mix of beauty, strength and kindness that made him lose all thought and spill his soul. She had the power and the skills to make him do anything she wanted but never took advantage of them. Yet she was a genuinely sweet soul who only asked form him to share the bed and speak his thoughts.\n\n\"Alright, fine! I love the woman!\" He yelled the words into the empty air. \"There! Satisfied?\"\n\nIn a strange way, the silence almost was.\n\nHe sighed and kicked at a small stone as he walked. That woman was intoxicating, almost annoyingly so. But she was kind and gentle enough not to drive him mad. Unlike that damned Leyna...\n\nDisgusting witch.\n\nHe shivered at the thought of the wretched creature. Arrogant, idiotic and beyond infuriating, she would stop at nothing to gain his attention. It wasn't Leyna's looks or body that repelled him, it was her attitude. Her pride and vanity rivaled Lilith herself, but her lower rank made it all the more annoying. That, and she constantly degraded Michelle simply for being human. He growled to himself, barely resisting the urge to slam his fist into the wall.\n\nShe could at least find a good argument.\n\nIndeed. Michelle being a human wasn't grounds to expel her as queen. Had she been inept or cowardly, Leyna would have had a stronger choice of argument. Unfortunately, the bitch wasn't bright enough to think that deeply and Michelle possessed none of the qualities that might warrant an expulsion. Luck and the fates favored Michelle.\n\nLucifer closed his eyes and shook his head, trying to clear Leyna and that human boy from his mind. Instead, he focused on Michelle. She'd left dinner so quickly -- granted, Lilith had overstepped her boundaries and was rightly punished for it -- and left him almost aching for her presence. He'd thought about her soft body throughout the entire meal, fighting the urge to exit the room and shoot off a round and relieve himself. Instead, he forced himself to focus on the dinner's conversations, promising himself that he would let loose with his queen as soon as the meal had ended.\n\nThe sudden reminder of sweet relief had him quickening his pace. The very idea of Michelle naked underneath him was enough to make his cock rise.\n\nFuck it. That woman's got me hook, line and sinker.\n\nHe nearly ran down the hallway, his mind trained on the prospect of having Michelle's tight, sweet body caressing his. The memory of their first coupling nearly drove him mad: the heat, the slickness, her sharp cries of pleasure. They way her hips swayed with every thrust, long strands of her hair plastered to her flesh. It was beautiful and maddening and perfect all at once. And she was a virgin. Even better.\n\nThe images drove him on, forcing him to pick up speed. A trail of fire marked his path along the smooth marble floor, a few feathers breaking off from his wings as he ran. Rounding the last corner, he screeched to a halt, stopping just inches from the enormous door. His lust nearly setting the place ablaze, Lucifer's hand shot out and gripped the handle jerking back sharply and pulling it wide open.\n\n\"Michelle!\" He stepped through the doorway, slamming the heavy wooden barrier behind him.\n\nConfusion stopped him from hauling her onto his shoulder and throwing her onto the bed. Michelle stood before the open wardrobe, stark naked and rummaging through the endless racks of clothing. Every so often she would pullout a piece of filmy lingerie or an elaborate dress, holding them up to her chest and smiling at the mirrors that lined the armoire's doors.\n\nShe should be in bed.\n\nLucifer stared at her, confused and unsure of how to act. She'd said she wanted a bath and to sleep, yet there was no smell of soap or wild hair that would suggest that she did either. She spun around while holding a dress against her breasts, admiring herself in the mirror as if she were a nymph. She might as well be. Her waist was lithe but strong. Her long legs, slender yet exquisitely muscled, entranced him as he stared. Her firm ass silently beckoned him closer.\n\nFuck. I could bounce a quarter off that ass.\n\nShe laughed softly to herself, a sound that sent a shiver up his spine. It was high-pitched, light and airy...triumphant, almost. As if she'd just conquered a great enemy and was celebrating by herself.\n\nSomething in his mind shifted, a small warning light beginning to flicker. This was so...un-Michelle. She would never normally play with her clothing so childishly or ignore his call so blatantly. And that laugh...\n\nHe shook his head, banishing all negative thoughts from his mind. Of course this was Michelle. Her behavior, was strange, yes, but not unexpected. It was the only time she'd ever been by herself, so it was only normal that she'd explore. Her laugh must be from excitement. After all, she did conquer him in a way that no creature had, so she had plenty to be happy about.\n\nHe cleared his throat, a smile slowly returning to his face. \"Michelle?\"\n\nShe gasped and spun around, clutching a delicately embroidered gown to her chest. Her hazel eyes were wide with fear and shock, the softened to curious. A tiny, surprised smile broke onto her lips, and she giggled again softly.\n\nAnother warning light began to flicker. She looked at him as if she couldn't believe he was here. Such curiosity, such surprise. Like this was the first time she'd seen him. She was so shy now; no running at him and tackling him to the ground, no sarcastically playful greeting, no seductive smiles meant to entice him close. No, she acted as if... as if she'd never believed him real.\n\nShe gave a soft laugh and she her head slightly. \"Hello, darling.\"\n\nDarling?\n\nA myriad of red flags now sprung up in his mind. She'd never called him darling or been this surprised to see him or acted so childishly. His head spun, trying to connect puzzle pieces that weren't made for each other.\n\nWhat the fuck is wrong with her?\n\nHer shy smile faded, replaced with a look of concern. \"Sweetheart? What's wrong?\"\n\nAnother pet name? Lucifer shook his head vigorously, trying and failing to make what he knew of Michelle and the things he was seeing now meld. None of the pieces matched, and the puzzle started to crumble in his hands. His heart began to race, doubts about the woman he was with starting to bubble up from the pits of his soul. What if she really was this childish, and her calm demeanor and dark intelligence was all an act?\n\nMichelle's lovely face dropped even more. Skittishly, she dropped the dress to the floor and stepped over the piles of clothing on the floor, slowly making her way towards him. All thought in Lucifer's head stopped. As she walked, her fantastic tits bounced and jiggled, drawing his eyes -- and his thoughts -- away from his inner turmoil.\n\nMother of fuck, they're gorgeous.\n\nAs he watched, he noticed her breasts were curiously absent of their delicate piercings. He knew they'd caused her some discomfort when he'd first given them to her, but Michelle was not one to take out something so freely given. That sent another warning off in his head, but the movement and bounce of her tits quieted its harsh ring.\n\nShe closed the distance between them and stepped up close, pressing her magnificent breasts against his chest. Her warm flesh seared his own flesh just as his icy coldness made her nipples pucker. A tiny smile bloomed on his face. She may be acting strangely, but she hadn't lost her touch.\n\nWarm, slender arms looped around his neck as her long, lean legs stretching up so she could see him better. Thin, flexible fingers wove into his hair, gently tugging and spinning teasing little circles along his scalp.\n\n\"What's wrong?\" Her voice was soft and playful.\n\nHe sighed and shook his head, smiling. \"Nothing.\"\n\nHer eyes brightened a bit. \"Good. I'd hate to see my gorgeous husband looking so upset. It mars your pretty face.\"\n\nGiving a soft laugh, Lucifer smiled and dipped his head. She inclined hers, allowing their lips to touch, then slowly meld together. It was a long, slow, passionate kiss - a good one by all standards, but yet another warning went off in his head. She wasn't as playful as usual. She let him do every movement, never spiking her tongue into his mouth or nipping his lip to tease him. His old doubts reared their ugly heads again, stronger and more insistent than before.\n\nGroaning, he broke their kiss earlier than he usually would. Something about Michelle tonight was rubbing him the wrong way. She was off, very off. Off enough to make even him uneasy.\n\n\"Hey.\" Her hands reached up to cup his face. \"What is it?\"\n\nHe sighed. \"Nothing. Just stress.\"\n\n\"Oh,\" she purred. \"Stress about what?\"\n\n\"Belphagor needed help handling a few late debts,\" he grumbled. \"I swear, those damn royals are a pain in my ass.\"\n\nMichelle scoffed. \"Belphagor? Can't that old bastard do it himself?\"\n\nHe stared at her, dumbfounded and horrified. \"Michelle?\"\n\n\"You'd think after running that circle all that time that he could do something without your help.\" She sneered to herself. \"I think he might have worked past his time, Lucifer. Maybe you should start thinking about hiring someone else to fill his spot.\"\n\nLucifer's mind screeched to a halt. Since when did his sweet, respectful wife ever bitch about one of his top commanders? Never. She'd shown Belphagor and the others more than enough grace at the dinner table, earning her their rarely-seen instantaneous respect. The final warning light was lit, causing Lucifer pulled away from her. Something wasn't right. Physically, she was fine, but emotionally and mentally this wasn't Michelle.\n\nGrunting out of frustration and confusion, he stepped away and strode towards the bed, trying to find a clear space in the room for him to think. He didn't get far. Michelle followed right behind him, berating him with questions. She seemed almost frantic, less worried about his mental health and more worried about him pulling away.\n\n\"Lucifer! What's wrong? What did I do?\"\n\nHe groaned to himself, his mind bombarded with conflicting thoughts: the possibility that this woman wasn't really Michelle, and the horror of admitting such an awful idea.\n\nWarm arms looped around his waist, pulling him tight against her lithe frame. Her head rested against his back. One hands trailed down to the top of his jeans, toying with the thick fabric and stroking his flesh.\n\n\"Please. Tell me what's wrong,\" she pleaded. \"Lucifer.\"\n\nThe warning lights grew louder and brighter, his own gut beginning to twist in horror. She was too forward here, to desperate to calm his nerves. She wasn't listening; she wasn't letting him vent his thoughts like she always did. She was trying to keep them in, trying to use her body to make him forget his discomfort.\n\nHer fingers dipped lower, teasing the edge of his pants. The threatened to slip low, low into the dark abyss where his most precious weapon lay. Normally, he would have welcomed such an intrusion, but not today, not now. His mind was reeling, hit emotions boiling. Now was not the time for games.\n\n\"Stop.\" His voice was low, but stern enough for her to hear. \"You are not yourself.\"\n\nShe scoffed. \"You are not yourself. What's wrong with you? I'm standing here naked and all you can do is pull away from me. Don't you want me? Don't you love me?\" Her voice was whiney, like a child's when they didn't get a toy.\n\n\"Yes, of course. But I would love you more if you behaved like your normal self!\" he snapped.\n\nShe pulled her hands back. \"My normal self?\"\n\nHe stilled. She sounded confused, almost lost at his words. As if she didn't know what her normal self was.\n\nSilence followed for a moment, then the feeling of her warm skin disappeared from his back, leaving him cold and strangely alone.",
        "\"Fine, I see.\" Her tone was angry, almost bitchy. \"It's that Leyna girl, isn't it?\"\n\nLeyna? What does she have to do with this?\n\nMichelle sniffed quietly behind him. \"You love her, don't you?\"\n\nShaken, angry and utterly confused, Lucifer turned to face his queen. She stared up at him with wide hazel eyes, more saddened than angry. Her lower lip quivered slightly as if from pain, but no heartache rested in her eyes, they were curiously empty, bereft of all emotion except for a cunning slyness that made his skin crawl.\n\nHe shook his head slowly, the pieces starting to fall into place. \"Michelle, no. I despise that woman. She's a rotten, selfish little shit. I couldn't care about her I tried. She's been after me for centuries, and she can't accept that she's not my queen but you are.\"\n\nFor an instant, Michelle pulled back. Her eyes showed confusion, almost hurt buy his words. \"You hate her?\" Her voice was hopeless, as if praying for the opposite answer.\n\nHe nodded. \"Yes. I love you, not Leyna. Not Lilith. You have so much more than Leyna could ever have, no matter how hard she tires...\"\n\nThe final piece of the puzzle slid into place. Leyna! Of course! That witch would do anything to further her own ambitions, and casting spells was by no means below her.\n\nThat's it, then. That whore did something to her that set her off balance.\n\nHis rage nearly making his skin boil, Lucifer gave a sharp growl and spun towards the door. He stormed across the smooth tile, his mind once against set one a single target: finding Leyna. He reached the door and grasped the handle, throwing it wide open as he began to step into the hall.\n\n\"Lucifer! Where are you going?\"\n\nHe never looked back. \"To find Leyna. Whatever that bitch did to you, I'm going to fix it.\"\n\n\"Wait!\"\n\nShe raced to him, gripping his shoulders and spinning him around. Caught off guard, he stayed still just long enough for her to sink to her knees and start her fingers working at his pants.\n\nHer warm hazel eyes flicked to him, a playful smile on her lips. \"You've had such a long, shit day. Let me help you relax.\"\n\n\"Michelle!\" He shouted at her, not meaning to frighten but to stun. He had to leave and find Leyna and figure out what the fuck was wrong.\n\nShe was so nervous, her fingers couldn't undo his jeans. Nevertheless, she kept her winning smile trained on him. \"Please? You know I love it.\"\n\nThis isn't my Michelle. Leyna's done something to her. That witch.\n\n\"Not now! Once I find Leyna, you can suck all you like.\" He shook his head, stepping back out of her reach. Spinning, he gripped the handle of the door in his hands and pulled it shut as he stepped into the hall.\n\n\"NO! Lucifer, you-\"\n\nHe slammed the door behind him, cutting off her pleas. He tapped the smooth wood with his fingers, hearing the massive locks click into place. She would be safer here, locked away where Leyna couldn't reach here again.\n\nSatisfied, Lucifer turned and strode down the main corridor, his blood boiling and his mind racing. If Leyna really did cast a spell on Michelle, he'd have her executed for treason and cast into the pits. His footsteps echoed around the solid rock, his only company besides his fury.\n\nAll he needed was to do was find Leyna and then Michelle would be back to normal...hopefully.\n\n* * *\n\nKerion and I continue to make our way down the empty hall. My mind is racing, trying to formulate a plan that will fix this mess. Lilith's abandoned us because she hates me, but we do have Belphagor and the other fallen angels on our team, so we're not completely alone. But we still don't have a game plan for how we're going to take Leyna down. For now, we're just going to have to think as we go.\n\n\"You think Lilith will change her mind?\" I ask softly, already knowing the answer.\n\nKerion shakes his head. \"I doubt it. The threat of Lucifer's wrath is enormous, but I guarantee the Lilith's pride and selfishness will win out in the end.\"\n\nI sigh softly and hang my head an inch. \"Sad, isn't it? She's willing to be killed by Lucifer just to see me miserable.\"\n\nKerion strokes my back with one of his legs. \"Lilith's nothing more than a woman's body with a child's mind. Lucifer will never kill her -- she's far too high in the ranks for him to punish her that harshly. But I promise you, he will make her life far, far worse once he finds out about her betrayal.\"\n\nI shoot him a confused look. \"Betrayal? All she did was laugh at me. I don't think that counts as stabbing someone in the back.\"\n\nKerion shakes his head. \"Don't take this the wrong way, you majesty, but the betrayal is not towards you. It's towards Lucifer and the kingdom of Hell itself.\"\n\n\"How so?\" Not towards me? Now I'm curious.\n\n\"Human though you may be, you are queen here. It's the duty of every demon and fallen angel to protect you and Lucifer at any cost. Lilith turning her back on us is going against the highest rules we have. She's not only slighting you, but Lucifer, the fallen angels and every demon that resides here. She's disregarding, even sacrificing, every life here to further her own ambition. According to our laws, that's treason.\"\n\nOh. Shit.\n\nI stare dumbfounded at Kerion. I know Lilith is selfish and nasty, but I never imagined that she'd go that far. Practically turning her back on Lucifer just to see me suffer! She's not just cruel, she's psychotic.\n\nEven mom's not that bad.\n\nI sigh again and stare down the hallway. So my greatest enemy is willing to risk her own life, and everyone else's apparently, just to spite me. Well, at least Belphagor and the others are loyal. I shake off my surprise and brush the dirt from my shoulder. If Lilith wants to leave us out in the cold, fine. I'll be sure to tell Lucifer how much 'help' she gave us.\n\n\"Alright,\" I start slowly. \"What now? Lilith's given us the middle finger and Leyna's got my husband. But Belphagor and the other fallen angels are on our side. Do you think we have a shot at winning this?\"\n\nKerion's silent for a moment. \"We might. If the angels do their job well, Leyna won't be able to send out an execution order. That gives us the upper hand in this fight, but it won't guarantee victory.\"\n\n\"You're right,\" My mood suddenly turns sour. \"Lilith might side with Leyna jut to fuck with me.\"\n\n\"Unfortunately, yes. That kind of subversion is not below her.\"\n\n\"Fine, then,\" I spit the words at the ground. \"We'll do it alone.\"\n\nI pick up my speed, so infuriated with Lilith that I'm ready to kill Leyna now just to see the look on her face. I storm down the hallway, my mind set on tearing Leyna limb from limb and then playing soccer with her head. A thin strand of sticky silk wraps around my wrist, jerking me to a halt. I stare at it, confused, as Kerion crawls up alongside me.\n\n\"I appreciate your passion for this, Michelle, but storming into that room will not help us here. Lucifer may think that you, as Leyna, are simply trying to take on his queen. He must understand what's happening first. Going in without explaining your situation is suicide.\"\n\nI groan in annoyance, but I see his point. Without knowing that Leyna and I have switched, he'll mistake me for being Leyna and try to kill me off.\n\n\"So how do we convince him of that?\" I scowl at Kerion.\n\nThe old spider thinks for a moment. \"\"We'll have to get him alone and explain the situation without Leyna being present.\"\n\nI scoff angrily. \"How? Leyna knows we're after her, so I don't think she'll just let him go off on his own. She'll do anything to stay by him to dispute everything we say.\"\n\nKerion shakes his head, a soft glint in his eyes. \"Not if Leyna makes a mistake. She knows nothing of how you and Lucifer are together, so she'll have to improvise. And even then, she won't be able to keep up the charade for long. Lucifer will eventually notice something's out of hand and leave.\"\n\n\"But she'll try to stop him!\" I counter.\n\nI'm honestly starting to panic. I have the will and the anger necessary to take Leyna down and get my body back, but parading around as me means she's got unlimited power and resources to take me out. She could win this if I don't move fast enough, and there's always the threat of Lilith showing her disgusting head and fucking it up for me even more.\n\n\"Once Lucifer is frustrated, it's best to stay out of his way. Even Leyna knows that. Even you know that. If she were to try to stop him, that would just be another red flag.\"\n\n\"OH!\" I throw my hands up into the air and slam them against my head. \"This is ridiculous! I know she hates me, but she doesn't have to take everything! It's like fighting a fucking child!\"\n\n\"Leyna!\"\n\nMy husband's voice rolls through the hallway, so full of anger and fury that I'm nearly knocked over by the mere sound of it. Kerion is stunned too, almost collapsing to the ground. I manage to remain steady and collect my equilibrium, but my heart is racing. My husband is coming for me, unaware of the change I've gone through or the torrent of emotions I'm feeling.\n\nOh no.\n\nFor the few seconds I have before I must turn to face him, I ponder what to do. I can't just tell him what's going on -- he'll never believe me. But I feel so awkward and foolish pretending to be Leyna in front of him. I hate to lie to him, but I'm too afraid of his legendary anger to try to tempt fate by telling him the truth.\n\n\"Look at me.\" His voice swirls in my ear, soft but focused and angry. He's right behind me, his hot breath cascading down my back.\n\nI freeze, my lungs seizing up and my heart nearly stopping. Kerion is staring wide-eyed at me, as fearful and nervous as I am. Slowly, I gather my strength, reminding myself the he is my husband, and turn to face him.\n\nFull lips are twisted into a cruel scowl. An impossibly beautiful face has hardened into a mask of absolute contempt. His brilliant gold eyes pierce through me, and my knees nearly buckle under me. They're so filled with power and hatred that I'm almost moved to tears. He's so angry, so suspicious of Leyna that he nearly hates her. But right now, with his eyes glaring at me, it feels as if I'm the object of his fury.\n\nI swallow and collect whatever strength I have left, lifting my head and staring straight back at him. He towers over me in Leyna's slightly smaller frame, and I have to crane my neck to just to see him.\n\nHis heated gaze never wavers. \"What have you done?\"\n\nMe? Ask the bitch what she did!\n\nI try to force out an answer, but my throat locks and I'm rendered speechless in front of my own husband. I've never seen him this pissed, and now I'm afraid he'll honestly hurt me if he doesn't catch on.\n\nHis eyes flick to Kerion, narrowing in annoyance. \"Leave.\"\n\nKerion takes a tentative step forward, barely testing the boundaries. \"Sire, we must-\"\n\nLucifer's eyes spear straight through the old spider. \"Now.\"\n\nKerion retracts his foot, pulling back slowly down the hall and creeping into an alcove to leave us alone. I know him enough to know he's simply following orders, but with him leaving, I feel more alone that I've ever felt in my life. Kerion finally disappears from the hallway, retreating into the shadows that branch off into smaller halls. Standing here in front of my furious husband, I'm completely alone.\n\nHis eyes come back to me, still full of contempt. \"Answer me.\"\n\nI can't. He's asking the right question to the wrong person, and I have no good answer for him. I stand there, stupidly staring at him, silently pleading that he'll recognize something in me that will let him know I'm not Leyna.\n\nHis gaze softens a bit, but it remains just a deadly. He turns and steps away, walking towards the thick wall of the hallway and placing his hands on the edge of one of the banisters. He peers into the pits of souls below, the soft orange glow giving him a slightly more vicious look.\n\n\"I was wondering if you could assist me in something.\" He's talking to the souls below, but speaking to me.\n\nI swallow again, and this time I force words from my mouth. \"With what, sire?\"\n\nHe turns to look at me, cocking his head to the side and staring at me coldly. \"There's something amiss with my queen.\"\n\nI nearly faint from relief. Kerion must have been right! Leyna's clueless to my relationship with my husband. She has no idea what Lucifer and I are like around each other, so she must have done something to tip him off.\n\nI force down my elation and try to remain as calm as possible. \"What would... make you say such a thing?\"\n\nHe spins around and leans against the wall, still staring at me with hollow eyes. \"She's...off.\"\n\n\"How so?\" I ask politely. \"Off in a mental way? In a human way?\"\n\n\"Mentally, I suppose,\" he muses. \"She's not acting right.\"\n\nWhy is he telling me this?\n\nOh, of course. It's a test, a trap. He knows the real Leyna had something to do with my body's behavior, and he's banking on the idea that she'd crack under pressure if questioned. He's theory may be correct, but he's talking to the wrong Leyna.\n\nOh, I know you're trying. I just wish I could say it.\n\nKnowing that I need to play along or possibly sign my death certificate, I answer the only way I can. \"She's human, sire. She'll never be right.\"\n\nHis eyes narrow at me, but he never lashes out. \"Don't play with me, Leyna. I'm concerned.\"\n\nI sigh dramatically. \"I'm sure you are. Alright, fine. What's gotten you so upset?\"\n\nHis features soften a bit, but the killer gleam in his eyes remains. He's willing to talk, but he'll be watching for any mistake or hint I make.\n\n\"She's whinier than usual. She practically shit on Belphagor's name because he needed my help. She was also rummaging through her wardrobe, something I've never seen her do before. Like she was a child in her mother's closet.\"\n\nMy anger spikes. That bitch is playing princess with my clothes. I'm going to slaughter her.\n\nI shrug. \"She's needy. I'm sure someone warned you that she would be. Human are notorious for that.\"\n\nHe rolls his eyes. \"She's more demanding, too. She was begging me to calm down. She never does that.\"\n\nShit. What would Leyna say?\n\n\"Still needy. Maybe you're not up par with her stupid little insecurities.\" I hate degrading myself, but if I don't play the game, I'll be kicked off the island into a river of boiling blood.\n\nHis gaze shifts to the wall, and for several moments he says nothing. He glares at the stones, the intense anger from his gaze actually making the bricks start to smoke. My gut turns. Whatever this little fuck-up is, Leyna sure made it a good one.\n\n\"She removed her piercings.\"\n\nI'm numb. My emotions have gone from angry to furious to a hatred so intense I momentarily stop feeling. My hands tremble slightly, and I stare at him blankly, my abhorrence for this woman making it impossible for me to move. She removed my piercings? My piercings? She pulled out the few symbolic pieces of metal that lined Lucifer and I together?\n\nThat's it. She's fucking dead.\n\nI take a slow breath, collecting myself into a barely-controlled ball of anger, despair and confusion. I can't play this game anymore. My masquerade as Leyna has come to an end, and I'm planning to go out with a bang.\n\n\"She took out,\" I nearly spit the words, \"my piercings?\"\n\nLucifer's eyes snap to me, a mix of confusion and annoyance swirling within their amber depths. \"Your piercings?\"\n\n\"That bitch.\" I whisper the words, but they're loud enough that Lucifer catches wind of them.\n\n\"Leyna,\" my husband starts, \"What do you mean your piercings?\"\n\nI turn slowly, mirroring the time he takes and the gleam in his eyes that makes looking at someone seem so deadly. I'm so filled with anger and outrage and horror, I can barely look at him. I'm glaring at the wall behind him, wishing that the stone wall would burst into pieces and that one of the shards would somehow find its way into Leyna's head.\n\n\"Those piercings are mine,\" I spit the words at the ground.\n\nHe stares at me, dumbfounded and a little pissed. I understand why. I look like the woman he thinks has cursed his queen, and I'm being audacious enough to claim that the metal in the queen's body belongs to me. How dare I? But then again, it is the truth and I have no problem standing my ground on this one.\n\nHe glares at me. \"Those piercings belong to the queen. You dare to make a claim of them?\"\n\nI nod. \"I'll make the same claim on the one I shoved into your nipple.\"\n\nHe jerks back and inch, now probably more shocked that angry. I smile to myself, glad to know that the memories we've shared have allowed me some ammunition to plead my case. I'm suddenly glad I paid attention to what he told me in the bath. If firing that at him doesn't save me, nothing will.\n\n\"The one you gave me!\" His eyes narrow at me, filled with anger and alarm. \"How dare you make such a claim, you spoiled, rotten little shit! I'll see you dead for telling such wishful, damning lies! Now tell me what you did to my queen!\"  \n\nDespite his anger, I hold my ground. His fury has returned, but I can tell there are a few grains of hope and worry in his eyes. He's hoping what he's seeing now is the truth and that his queen is really right in front of him, but he's worried it could also be a trick and that his heart is betraying him.\n\nOh, no. My Lucifer, this isn't a trick. I promise.\n\nI drop my head, gathering whatever strength I have left. When I look at him again, I've mentally shrugged on my royal vestments and grabbed my crown. If he wants to believe that Leyna is really me, then I'll prove him wrong here and now. I'll tell him something only I could know -- something Leyna has no idea of.\n\n\"When you spoke to me in the bath, you poured your heart out. You told me slivers of your past and the reasons why you became what you are. You're angry, jealous and hurt. Betrayed by your own family and left for dead, then blamed for anything bad that happens. You tore your heart open and let me see the pain and misery inside of you, something you've never done to anyone.\"\n\nHis eyes widen, filled with confusion, anguish...and a tiny bit more hope. I smile at him. This is exactly what I wanted. To have him see that I'm really his queen, that I know things only his real queen could know. That the woman he spilled his heart to is right in front of him.\n\nI continue. \"You promised me in that bath that you would do your best to be a good husband. I believed you, and I ask you to uphold your word to me. I ask you to trust me, to listen to me, to stop thinking like an angel and start thinking like a man. You said you loved me, and I said I would do my best to give you the same love and respect that you've needed for so long. I told Michael that I would never turn against you unless you turned against me. I'm proving that now. I need you to love me now, and trust that what I'm telling you is no lie or trick. Please.\"\n\nI take a breath, my body shaking and my heart pounding. I've let loose everything I know about him, said every truth I've learned. I can only hope he sees through this disguise and recognizes me.\n\nHe stands completely still, staring at me. His eyes are wide, his breathing is shallow, and he looks ready to either scream or cry. Slowly, his eyes shift to that strange hollowed look and his body relaxes. His eyes flick to me, and a tiny, sad smile spreads across his face. He spreads his arms a bit, his wings unfurling and his unfairly magnificent body straightening.\n\n\"My queen,\" he whispers.\n\nI squeal and bolt towards him, throwing myself into his arms with enough force to knock him to the ground. He falls willingly, and the two of us crash to the floor. I wrap my arms around his waist and bury my face into the muscled strength of his chest, excited and relieved that I finally proved myself tonight. I feel his arms wrap around my waist, his cheek nuzzling my hair, the soft feathers of his wings tickling my skin,",
        "There's a torrent of emotions flooding my head, and all of them come bursting out at once. All my anger and frustration and happiness coalesce into a burning need to cry my heart out, and I let it loose. I tighten my grip and I press my cheek against his chest, letting my tears flow onto his flawless skin. I let it go, and it feels so good to vent my emotions, even if it is through tears.\n\n\"Ah,\" he whispers, \"That's it, then.\"\n\nTaking a shaky breath, I look up at him with wide, questioning, tear-stained eyes. \"What's it?\"\n\nHe smiles down at me, reaching out to stroke Leyna's red hair from my face. \"You've proved your point.\"\n\nI swallow, trying to clear my thoughts as tears continue to stream down my cheeks. \"I have?\"\n\nHe nods, his smile growing an inch. \"Demons never cry.\"\n\nA smile breaks onto my lips. Once again, my humanness has saved my ass. My delicate emotions and unstable hormone levels have helped me solidify my status as Lucifer's rightful queen. Thank fucking God.\n\nI may be human, but my inability to hold back my emotions has screwed you, Leyna.\n\nHis smile fades, slowly turning into a grimace of confusion. \"What happened? How did she take my queen from me?\"\n\nI wipe away most of my tears, beyond relieved to know my husband is back on my team again. \"I'm not sure. All I remember was arguing with her in the hall and her kissing me. I blacked out after we switched. Kerion saw the whole thing.\"\n\n\"Crafty old spider.\" His smile returns for an instant, then shifts into an angry scowl. \"We'll fix this. I'll have no imposter in my bed when my queen is safe and sound.\"\n\nI nod, but the urge to stay close to him is overwhelming. I drop my head back against his chest, listening to the thunder of his heartbeat. \"Can we stay here for a bit? I've missed you, and it's nice to have you on my side again.\"\n\nHe laughs as his wings fold around me. \"Of course. Take as long as you like. We'll get you back when you're ready.\"\n\nI smile and nuzzle the smooth flesh of his chest. \"Good.\" I pause for an instant. \"How far did you get with her?\" I ask out of pure curiosity, as well as a slight feeling of dread. I hate to think she convinced him enough to actually sleep with her...\n\n\"The truth? She barely got through telling me how much she wanted to blow me.\" His voice is low, tinged with disgust. \"By that time, she'd been doing so much crap that didn't add up, I practically walked out of that room while she was still on her knees.\"\n\nI smile. \"Good.\"\n\nHa! The bitch can't even convince him when she's wearing my skin!\n\n\"You said Kerion saw what happened. Does anyone else know of this?\"\n\nI nod. \"We ran into Belphagor and Lilith. Belphagor figured out I wasn't Leyna within about two seconds. He and the other fallen angels are working to make sure Leyna doesn't try to have me executed. He was with us all the way. Give him a raise, will you?\"\n\nCold fingers run up and down my back, soothing my skin but also making me shiver.\n\n\"Why didn't you have him tell me what happened?\"\n\n\"If you found out before we could put up roadblocks, we'd lose our chance to surprise Leyna.\"\n\nHe pauses for a moment. \"How would you lose that?\"\n\nI lift my head from his chest and stare at him. \"I know you. If you found out Leyna had switched bodies with me before we could catch her, you'd lose your mind. You might have even killed her and taken my body out as well. Then what would we do?\"  \n\n\"And Lilith?\"\n\nI hesitate, fearful of speaking the truth and risking unnecessary amounts of innocent lives. But my soul is itching for payback, so I let him have it.\n\n\"Kerion and I went to her asking for her help. She basically gave us the middle finger and said that once you'd figure out what happened, you'd toss my body off a cliff and she could take you for herself.\"\n\nHe's still for a moment, and I feel his chest rise and fall slowly beneath my fingers. \"I see. I'll have a talk with her when we've got you straightened out.\" His voice is cold, emotionless. Lilith's fucked.\n\nGood. Bitch deserves it.\n\nI stay silent, watching the anger rise and fall in his eyes. Finally, he takes a deep breath and closes his eyes, seemingly clearing his head of thought about killing Lilith so he can focus on me again.\n\nHe smiles and kisses my forehead. \"You know me too well for your own good.\"\n\nI smile back. \"I don't think so. Knowing you saved my ass.\"\n\nHe laughs softly. \"Perhaps I've told you too much.\"\n\nI shake my head, closing my eyes and inhaling the dark, rich scent that clings to his skin. \"I want to know you. The more I know, the safer I feel.\"\n\nHis hands rubbing my back still, and his eyes go soft. \"You feel unsafe with me?\"\n\n\"No!\" I nearly shout. \"Not like that, dummy! I'm not afraid of you. Listening to your story makes me feel closer to you, that's all. The more distant you are, the less I'm comfortable around you.\"\n\nHis smile returns again. \"Good. For a moment there, I thought you might claim irreconcilable differences and bail.\"\n\nI'm taken aback slightly, and a little hurt. Why would he think that? Because I told him his emotional distancing scares me? That's not a reason that would make me leave. Attempted murder or infidelity, yeah, but not emotional disconnect.\n\nMy eyes float away from him, my mind still reeling from his assumption. \"I said I loved you and promised I wouldn't leave. It hurts that you would think I might.\"\n\nI hear him swear softly, and he shifts under me, pushing me back so he can sit up. He backs up against a wall so he can look me in the eye. I'm left straddling his thighs and wondering if this might be a death knell of my trust in him. If he's willing to believe I'm so afraid of him that I would pack up and leave, then maybe I should.\n\nHis cold hands cup my face, forcing me to look at him again. His flawless amber eyes spear into mine, almost knocking me back.\n\n\"I never meant that you would, just that you might. You know me. I've been left for dead by my own family. More people have left me behind than have taken me in. It's all I know, all I'm used to. I know you care about me -- maybe you even love me -- but it's a fear I'll never get over.\"\n\nGod damn, this man is broken beyond belief. I leave him for five seconds and he's already going nuts about me abandoning him. I understand his paranoia, but seriously. I promised him I'd stay - hell, I even turned down Michael to stay with him -- so he's got no reason to worry.\n\nI reach down and cup his perfect face in my hands, forcing him to look at me. \"Listen to me. When Michael came down here to claw me back to your dad, I told him I would never leave you. I said that until you tried to do harm to me, I'd stay by your side. You've never hurt me, or lied to me, or stabbed me in the back. You've stayed honest and faithful to me, trusting me when no one else wanted to and defending me when no one else would. Until you try to hurt me or bring me pain, I'm yours. Got it?\"\n\nHe's still for a moment, then a slow, sweet smile spreads across his lips. His eyes light up, and he almost seems to glow. He leans forward, catching me off guard in the best way. I meet him halfway, our mouths melding as I loop my arms around his neck. His hands reach up and tangle in my hair, holding me tight as our kiss deepens.\n\nI sigh to myself in relief. He finally gets it. I'm not going to abandon him, not matter how much other people may think he deserves it. He's my husband, and until he tries to hurt me, I'm not going anywhere. Besides, I've got power, privilege and a man who can blow my mind in bed. Why would I leave?\n\nHe breaks away for a moment, nuzzling his cheek against my neck. \"If you were in your real body, I'd have you splayed out on the floor.\"\n\nI giggle and kiss his soft hair. \"Then let's go get it back.\"\n\nHe barks out a laugh, then scoops me into his arms and stands up. I laugh with him and grip his shoulders, lifting myself up so I can kiss him again. He lowers his head willingly, and our lips meet once more. He starts taking easy, confident steps down the hall, kissing me as he carries me towards our bedroom.\n\nMy fingers start to creep up his shoulders and tangle in his hair, pulling gently as we make our way down the hall. He groans in to my mouth and screeches to a halt, then drops his hands so my feet fall to the ground. I land easily, but I'm confused by what he's doing and what he wants. Before I can pull away and ask, Lucifer has spun me around and pressed my back against to cool stone of the wall. He steps forward, his mouth still locked to mine, and uses his weight to hold me in place.\n\nAh. I see what you want.\n\nI smile against his lips and tighten my grip on his hair. He groans again, his hands snaking down my -- Leyna's -- body to find the hem of her dress. It's a floor-length gown, so he's out of luck there. Thankfully, it's designed with a thigh-high slit on the side, and I feel him smile as his cool fingers glide up my leg.\n\nMy body or not, I don't care.\n\nHis fingers reach my hip and start drawing delicious circles on my skin. I moan into his mouth and lift my leg so I can hook it over his hip. His other hand catches my thigh and helps me up, then slides around to my back once I'm locked against him.\n\nHis fingers slowly start working the hem of my dress up to my hips. At this point, I'm really caught by surprise. I didn't realize that Leyna was naked when she and I switched bodies. I've been practically nude this entire time, which makes for a very interesting choice of events that could play out. Lucifer could decide he doesn't care and ravage me anyway, or he could decide he wants nothing to do with Leyna's body and wait until I'm myself again. Or anything in-between.\n\nEither way, I don't really care. I'm just glad to have my husband back on my side and fighting for me again. Our kiss continues, a mix of happiness, lust and relief all rolled into one fantastic make-out session.\n\n\"Sire!\"\n\nBelphagor's booming voice echoes down the hallway, snapping me out of my lust haze. Lucifer, however, remains locked against me, seemingly unaware of our new company.\n\nI flick my eyes down the hall, watching as a band of fallen angels charges towards us. Belphagor is leading them, a look of panic on his face. The others have similar expression, but their eyes hold a more serious tone.\n\n\"Sire!\" Belphagor calls out again, louder and more urgent.\n\nLucifer sighs against me and reluctantly pulls away, a flicker of irritation in his eyes. He turns his head to face the stampede of angels coming at us, straightening his shoulders and flaring his wings out like a barrier.\n\nThe mass of fallen angels slows down and stop a few feet in front of us, still looking panicked. Belphagor's emerald eyes find me, relaxing a bit when her notices my legs hooked provocatively over my husband's hip.\n\nThe hulking angel sighs in relief. \"Michelle, thank goodness.\"\n\nLucifer nods. \"Yes, I know. What's the issue?\"\n\nBelphagor's attention snaps to his ruler. \"It's Leyna. She's trying to pass an execution order.\"\n\nWHAT?!\n\nLucifer's lips turn up in a mocking smile. \"It won't get far. Even if the Counsil does let it pass, I'll kill it before the ink is dried.\" He turns to me, rubbing his thumb along my bottom lip. \"I'll kill her before she can even get close to you.\"\n\nI smile up at him, considering then dismissing the idea of seductively sucking on his thumb to show my appreciation. Not now, but later. The last thing Belphagor wants to see is my husband getting turned on when urgent shit is flying around.\n\nBelphagor clears his throat, looking more nervous that scared. \"The order isn't from Michelle, sir.\"\n\nNow he's caught both of our attentions. Lucifer and I whip our heads to look at him, wearing matching expression of confusion and worry.\n\nThe old angel sighs. \"Leyna may want Michelle dead, but unfortunately she's smart enough to know that going for her first would be suicide.\"\n\nSwallowing, I acknowledge the elephant in the room. \"So who'd she go after?\"\n\n\"Kerion.\" Belphagor's eyes flick to the ground nervously. \"For treason.\"\n\nI'm stunned, frightened and beyond hurt. Kerion has done nothing but help and support me. He saw what happened, rescued me, and tried his best to convince Lilith to fight with us. How dare she go after him! Anger flood my body and I look up at my husband to see if he's as pissed as I am.\n\nWhat I see is more frightening than the boogeyman himself. My husband stares out into the hallway, his eyes and cold and unfeeling. His wings shudder slightly, a tiny indication of the hurricane that must be brewing inside him. His mouth twists into a tight grimace, and his breathing and labored and shaky. To top it all off, I see his eye twitch.\n\n\"Belphagor.\" His voice is low, deadly, filled with fury I can't even begin to imagine.\n\nThe dark angel swallows loudly but holds his ground. \"Sire?\"\n\nLucifer continues to stare out into the hallway. \"Tsaric nor namiriac.\"\n\nBelphagor is silent for an instant, his eyes nearly popping out of his head. The rest of the group has fallen silent, too, staring at Lucifer with fearful eyes. My gut twists and I'm tempted for an instant to pull away from him and step back so he can have room to explode.\n\nUh oh. That must be a really bad code.\n\nClearing his throat again, Belphagor manages to regain his equilibrium. \"Shoot to kill, sir?\"\n\nLucifer can only nod.\n\nBelphagor nods in response. \"I'll see it done.\"\n\n\"Not yet.\" One of Lucifer's hands flies up, halting any idea of them leaving. \"I'll say when it's clear. Until I give the order, neither Michelle nor Leyna's bodies are to be harmed.\"\n\n\"Yes, sir.\" Belphagor nods in response, seemingly relieved but still concerned.\n\nI stare at my husband, confused, nervous and worried that his mind may have snapped. Yes, I'm pissed about Leyna sending and execution order for Kerion, too. But I'd like to think I'm the slightly more emotionally stable one in our marriage. His silence and coldness has me anxious that I may have lost him for a moment.\n\nUntil he gives to order? What or-\n\nThe pieces start to fall together in my head. The kill order is for Leyna, meant for after I get my body back. Lucifer's planning to set her free into Hell and have her gunned down -- or whatever weapon they plan to use on her -- once I'm back to normal. But he wants them to wait until he gives to order in case things don't go as smoothly and she ends up running off with my body or they accidentally shoot me instead. Once I'm back to being me, he'll give the order and Leyna will be gone for good.\n\nWell, as pissed as I am about mom forcing me into this marriage, I must say I've ended up with one hell of a loyal, protective husband.\n\nLucifer sighs and closes his eyes, hanging his head as he turns to face me again. His eyes flutter open, staring at me but not really focusing on anything. \"Go.\"\n\nBelphagor and the other angels nod and bow respectfully before turning to leave. I watch as Belphagor and Samael take one last glance back and grin at me, relieved to know that their master knows what happened and that their world is on it's way to being set right again. I smile back, relieved to know I've got more than just a handful of allies on my side; I've got a whole damn army of powerful fallen angels ready to attack in my defense at a moment's notice. Freaking awesome.\n\nOnce my husband and I are alone again, I can refocus on him. Lucifer's still furious, but his face is as calm and serene as ever. Again, I stare up at him in awe. He has such control over himself, so much power held back behind those eyes. I wonder how he blows off steam when the stress gets to be too much.\n\nOh, yes. That's what I'm for.\n\nI reach up and cup his cheek, running my thumb over the razor-sharpness of his cheekbone. \"Hey.\"\n\nA small smile cracks on his lips. \"Forgive me.\"\n\n\"Nope. I'm the same way right now.\" I smile back and shake my head.\n\nHe relaxes a bit, exhaling slowly. \"Kerion. I never thought she'd sink that low.\"\n\nHonestly, I'm not surprised.\n\n\"It's okay,\" I whisper. \"We knew she was nuts.\"\n\nHe gives a soft laugh. \"Crazy, yes. But treasonous? Even for Leyna that's a bit extreme.\"\n\n\"Well...\" I trail off, deliberating if I should answer honestly or let it go.\n\nBefore I can decide, Lucifer lets out a low groan and leans forward, pressing his lips to mine once again. I smile against him and kiss back, letting my train of thought go and allowing my husband to hold my attention. His hands resume their previous teasing, holding me steady and spinning circles around the flesh of my hips.\n\nHe pulls away, breathing heavily. He leans forward, pressing his cheek against my neck as his warm breath spills down my back. \"Damn it.\"\n\nI reach around and run my fingertips along the length of his back. \"What? What is it?\"\n\n\"I've had a hard-on all fucking day,\" he groans into my shoulder. His hands reach under the fabric of my dress and slide up and down my thighs, warming my cold skin and making me tremble.\n\nI lean my head back against the wall, closing my eyes and relishing in the feel of my husband's cool hands on my skin. I bite my lip as one of his fingers brushes against the edge of my sex. I tremble again, and I hear his laugh just as his finger strokes my clit. This time, I inhale sharply and dig my fingers into his back, my body now on fire and begging for more attention.\n\nNo, no. Not like this.\n\nI groan in frustration, but I know my conscience is right. As much as I want my husband to throw me on the floor and tear me to pieces, I do not what to do it while I'm still stuck in Leyna's body. Once I'm back in my own skin, I plan for us to smash every piece of furniture in that bedroom.\n\n\"No, no,\" I whisper in his ear. \"Not now.\"\n\nHe stills, confused that I would turn down his offer for sex.\n\n\"Michelle,\" he groans.\n\nI stroke the length of his spine with my thumbs. \"Not while I'm like this. After all the shit she's put us through, I don't want Leyna to walk out of my room knowing that her body got a piece of you even when she wasn't there to enjoy it.\"\n\nThankfully, he gets the message and pulls his hands back an inch. He's got the same idea: no sex, even while I'm the one in this body, until we get things back to normal. Relieving ourselves now will still give Leyna a tiny bit of satisfaction knowing some part of her managed to capture him. If we can hold out for a little bit longer, we can send her to her execution as a complete failure.\n\nStill, I hate seeing my husband in the grip of such a painful need for release. I feel awful for making him hold his libido back, even if it is for a good reason. I sigh and decide that even though I won't allow him to take what he wants, I'll give him what he needs.\n\n\"Come here,\" I whisper, pulling him against me.\n\nHe comes willingly, pulling his hands away from my pussy and looping them around my back. His face remains buried against my shoulder, but I don't care. He's dealt with enough shit today. It's time he gets a little relief.\n\nI pull one of my hands away from his back and reach down to trace the edge of his tattered jeans. His body trembles slightly, and he bucks his hips against my fingers. I smile and dip my fingers past the sturdy denim, tracing my way around to his chiseled abdomen. The light hairs on his treasure trail tickle my fingertips, and I continue to teasingly trace the deep lines of muscle carved into his flesh.\n\n\"No, sex,\" I whisper. \"But I'll get you off.\"\n\nHe groans against my shoulder and hugs me tighter. \"My godsend.\"\n\nI laugh. \"Not quite a godsend, but you're welcome.\"\n\nI manage to unbutton and unzip his pants with one hand, using the other to stroke his back and keep him close. The instant his jeans come undone, his cock flies out, hard and ready for some serious attention. I laugh softly and rub his back in apology. My poor husband. He must have had one nasty case of blue balls.",
        "Here, let me help.\n\nI don't waste any time getting him the relief he so desperately needs. I reach down and grip his enormous girth in my hand, holding completely still when he twitches and groans softly. I wait for a second so he can steady himself, then I slowly, gently start to stroke him. I move my hand all the way up and down his cock, taking my time to make sure no part of him goes unloved. He groans again, his wings flaring out a bit before falling limply to the ground.\n\nI continue to keep my leisurely pace, giving him the pleasure he needs but making sure he has time to enjoy it. With his chest pressed against mine as I squeeze him off, I'm unable to see exactly what I'm doing. I'm flying blind here, so I have to rely on my sense of touch and his reactions to know if I'm doing a good job.\n\nApparently when it comes to hand jobs, I'm a fucking rock star. Every time I pull back on his cock, his hips jerk and a low groan escapes his throat. His body twitches under my fingers, and a tiny bit of pride swells in my chest. First I've got the best rack he's ever seen, then he tells me I'm awesome at blowjobs, and now I rock at jerking him off, too. My husband is a lucky, lucky man-angel-thing.\n\n\"Doing alright?\" I whisper in his ear.\n\nHe groans and straightens his spine, pulling back just enough that his mouth can touch mine again. Our kiss is gentle, a long, slow melding of tongues and lips that send a flurry of sparks racing up my spine. I tighten my grip on him and he moans, a sound that's half animal, half surrender.\n\n\"More,\" he begs, his mouth barely brushing against mine.\n\nI smile against his lips and quicken my pace a little, secretly enjoying his gasp of surprised pleasure. As I continue to kiss and stroke my husband, I realize just how far we've come from our wedding day. It's been barely a week that we've been legally married, and I've gone from being terrified of his touch to relishing it. I love being close to him, whether it's curling up with him in bed, or laughing with him over screwing with people, or jerking him off in the middle of the hallway. I finally, really love this creature like I promised I would.\n\nI break away from his mouth and pull his body back against me so I can whisper in his ear. \"I love you.\"\n\n\"I love you, too.\" His whispered breath grazes the skin of my neck, making me shiver.\n\nI never stop stroking him, but I'm surprised at how quickly he responds. Before tonight, saying he loved me was a challenge for him. He would pause, almost thinking if he did love me, then say it with a strained voice. But now, his response was automatic, as if he spoke his feelings without thinking. I smile and kiss his shoulder, elated to know I've finally won him over and claimed the Devil himself as my husband.\n\nA few seconds later, he stiffens and buries his face against my neck. His groan is muffled slightly, but just as powerful. I can feel his cock twitching in my hand, and small drips of his cum spill onto my arm. I don't care, he's my husband. Why would I be freaked out? I've already given him two mind-numbing blowjobs, so this is nothing. If anything, it has solidified my status as an awesome queen. I switch into good-girl mode and slowly, gently stroke him through his climax, savoring the fact that I can drive my husband wild with just my hands.\n\nMission accomplished.\n\nHe throws out one arm and braces himself against the wall, pulling away from me a bit to catch his breath. I look up at him as he comes down from his high, once again enamored with his painful beauty. His eyes are barely open, thin rings of electric gold surrounding enormous pools of jet black. His perfect lips are parted, torrents of warm breath spilling out of them and down my chest. There's a thin sheen of sweat glistening on his skin, highlighting every dip and bulge of his muscled body.\n\nI'm married to this. God damn...\n\nFinally, Lucifer manages to regain his balance. His eyes flutter closed as he laughs quietly, leaning into to claim my mouth. I stand up on my toes and accept his kiss willingly, letting go of his cock so he can dress himself properly. He doesn't, instead stepping closer and pressing his hips against mine, holding me against the wall so I can't escape... as if I'd want to?\n\nHe pulls away breaking the kiss and leaning in to nuzzle my cheek with his. \"Thank you. I needed that.\"\n\nI giggle and close my eyes, savoring the chill of his skin on my own. \"You're welcome. I hate to see my poor, sweet husband suffering from blue balls like that.\"\n\nHe laughs in my ear. \"Such a tease. I may have to find a way to make you a bit more agreeable. Maybe we'll find something that will make sure you never leave me.\" His tone is light, teasing and playful.\n\nI pause, considering my options. I know Lucifer would never hurt me, so I'm safe from being whipped or beaten in any sense of the thought. But there are others ways he could torture me, like cutting me off from sex with him or denying me caramel. But neither of those things would make me subservient, just annoyed. And does he even want me to be docile? He's always said he likes my independent spirit, so probably not. Teasing me is just another way for him to have fun and get a nice thrill at the same time.\n\nStill, the gears in my head start to spin. I love this creature, despite his reputation, and I feel the need to prove to him that I'm all his. After this little soap opera drama we've just been through, he'll need something to prove to him that I'm not going to leave him for anything. Something dramatic, something that's sure to make him understand that I'll do anything for him...\n\n\"I...may know a way you can start...\" My voice is soft, a little shaky from the idea that passes through my mind.\n\nHe pulls back an inch, concerned by my sudden shyness. \"Michelle?\"\n\nI take a deep breath, forcing down my fears and insecurities. \"Remember the first night we were married? The night I told you about my dream of being pierced?\"\n\nHe nods, suddenly silent and focused on hearing me out. I'm slightly relieved that he's willing to listen to this. Having him shoot me down now would destroy my fragile sense of security and personal worth.\n\nI swallow loudly. \"I didn't tell you all of it.\"\n\nHis eyes widen, his expression both curious and alarmed. \"Yes?\"\n\n\"There was another piercing...\" I can't finish the sentence, I may be married to Satan himself, but the very though of what I'm about to suggest has made my throat lock up.\n\nThere's a silence between us as Lucifer's face shifts from confused to thoughtful to surprised. His gaze locks on me, stunned that I would dream of such a thing and excited that I'm brave enough to try. I can only stand there and breathe shakily as the puzzle pieces click into place inside his head.\n\n\"Your clit?\" His eyes never leave mine. \"Really?\"\n\nI nod and chew my lip nervously, unsure of what to say or think or feel.\n\nA slow, wicked smile spreads across his face. He's probably been imagining this for months, maybe even years, but he's never had a chance to try it out. Until I come along and gather up every ounce of my strength to suggest it. I suspect that his smile is just the tip of an iceberg of excitement. Were he less calm and controlled, he'd probably be bouncing off the walls.\n\n\"Oh, Michelle.\" He leans forward and kisses me again, wrapping his arms around my waist and crushing me against him.\n\nI'm relieved that he's taking this in such good stride. Not that I'm surprised -- what man would turn down an opportunity to play with his wife? -- but I was honestly worried that he might reject the idea and make me feel foolish. With his burst of enthusiasm, I can relax.\n\nHe pulls away and grins at me. \"Do I get to have the honors?\"\n\nI manage a small laugh. \"Nobody touches this body but you.\"\n\n\"Good.\" He leans in and peppers kisses along my neck and shoulder. \"Are you willing to let me devour you as well?\"\n\nHis question catches me off guard. I'm by no means ashamed of giving oral sex, but I've never been the recipient. All three of my previous boyfriends either shrugged the idea off or made a face when I asked. Having someone devour me has always been a huge wish of mine -- when I was 15, I actually wrote it down on my Christmas list - but the chance never showed itself. His proposal sparks a deep-seated curiosity in me that's been begging to be satisfied.\n\nI nod and smile shyly. \"You'll have to break me in.\"\n\nHe gives me a shocked, confused face. \"Never?\"\n\nI shake my head. \"No guy I've ever dated was interested.\"\n\nHe scowls at air. \"Bastards.\"\n\nI stare at him, surprised. \"Have you done it?\"\n\n\"Once or twice.\" His lips twist into a mischievous smile. \"I'm not a master, but I know how it woks.\"\n\nMy smile returns. \"You're more experienced than I am.\"\n\nIn one smooth motion, Lucifer sips one hand behind my back, then scoops me up into his arms. I lace my finger behind his neck and let him carry me down the hall back to our room both relieved about his acceptance and nervous about what possibilities now lay beyond that door. Once we're through with Leyna, there are a thousand different possibilities of tricks and games he could throw at me. And I've just given him permission to come at me with full force.\n\nClit piercings, oral sex and executions. Oh my.\n\nHe lips brush my hair as we make our way down the hall. \"Don't worry, my queen. When we've got you back to normal, we can play all we want. I'll show you everything I know and try everything I can think of.\"\n\nHe picks up the pace, flying down the empty hallway so fast the walls become a blur. I cling to him, nervous about what's going to happen once we pass through those doors. Leyna probably knows her game is finished, so she'll be ready for a fight. But so am I, and my determination to keep what's mine far outweighs her determination to steal it.\n\nWe round the corner and the doors to our room come into view. Lucifer slows to a leisurely pace, his steps stead and strong. My heart is racing, but my anger and pain at what this woman has done to me -- to us -- has set my soul on fire. I don't care how angry she is or how much she wants my life. I'm reclaiming my husband, taking back what's mine and tossing her out with the rest of the garbage.\n\nReady or not, here I come.\n\nJust before we reach the doors, Lucifer stops and gently releases me from his arms. I stand, still dressed in Leyna's skin and way more nervous than I should be. I don't want to fuck up this fight, even with Lucifer fighting with me, and lose everything all over again. If I do lose, I don't know if I could ever look at my husband again. But I somehow manage to push down my unnecessarily strong worries and force myself to focus on the task at hand: kicking Leyna's ass and getting my body -- and my life -- back.\n\nStrong arms wrap around my waist, and soft lips press against my neck. \"Ready?\"\n\nI swallow. \"Yes and no. I want to kill her, but I'm scared I might lose.\"\n\nHis arms tighten around me, holding me close. \"I'll be right behind you.\"\n\n\"Are you going to help me?\" My voice is shaky, worried that he might back down and send me to fight on my own.\n\nHe kisses my neck again. \"Always. And whether you win or lose, I've got your side.\"\n\nI relax a little in his arms. Liar that he is, I can hear in his voice -- I can almost feel it when he touches me -- that's he's being honest. Not only will he not abandon his queen that he took so much time and effort to win over, I doubt that if I do lose, he'll be very enthusiastic about being stuck with Leyna. He has to stand by me, or he's screwed.\n\nOne last breath and I'm ready. My hand almost itches to punch Leyna in her face -- my face really, but now I'm splitting hairs. All I know is that just beyond that door is the woman who nearly ruined my life and stole my husband. And she's going to pay for it.\n\nBefore Lucifer can give me a pep talk, I step out of his embrace and march towards the door. He follows right behind me, his wings flaring out as he prepares to either take my side in the fight or drag me out of harm's way.\n\nI stop just in front of the door, my chest heaving and my heart pounding. Looking down, I can see a shadow moving around in the room, and I can hear my voice whispering softly. She's right there, barely a foot away from me on the other side of the door. She knew I was coming, but she's got no idea how close I am. Closing my eyes, I take a deep breath, clench my fist and grab the handle of the door.\n\nA heartbeat later, it's wide open and for an instant, I'm staring at myself. My eyes are wide with shock, surprised to see my adversary so close, so soon. I take a few precious milliseconds to let Leyna adjust to the truth that, yes, I'm probably going to kill her, before I fire the first shot.\n\nI come out swinging, throwing my fist into my face with as much force as I can muster. I connect perfectly, and my body stumbles back with a sharp cry. Leyna cradles my face in her hands, groaning in pain as I storm through the doors with my husband in tow. I've got a good head start, taking her by surprise and dealing out a good, solid punch. If I can just keep her confused and off guard, this should be easy.\n\nThankfully, Leyna's still too stunned to block my next two punches. I knock her back again and finally send her to the floor. A flashback of my father teaching me how to fight properly pops into my head, and I smile knowing that my dad did the best he could to take care of me.\n\nUnfortunately, he also made sure I didn't punch like a girl, and the thought of seriously damaging my body crosses my mind. I could do some serious damage, even though I'm fighting for my life and my family. I need to be careful and direct my punches to less sensitive areas of her body. The last thing I want is to come out of this fight with my crown, my body and a concussion.\n\nAt this point, my adrenaline is roaring through me, and I suddenly don't care whether Lucifer will come to my rescue or not. I'm more concerned about getting my life back. If he can help me, that's fine. If not, I can handle myself.\n\nI watch as Leyna regains her balance and hauls herself to her feet. The bruises that have started to flower on my face fade away quickly. I panic for a moment -- she may have my body, but her demonic soul is healing her faster that I would have guessed.\n\nMaybe I won't end up with a smashed-up face after all...\n\nI shake off my nerves and try to plan my attack. Leyna is glaring at me now -- it's strange to see my own body looking so angry when I'm not in control -- and she looks ready to tear my heart out. I'm not shaken by her obvious hatred. I'm too pissed to be scared of this whiney little home wrecker. Besides, her dad never taught her how to fight.\n\nScreaming out her rage, Leyna charges at me, swinging wildly and trying to scare me off. I'm caught by surprise by her ferocity, but I manage to duck and doge out of the way and land another good smack to her face. She stumbles back again but keeps her balance, though I can see in her -- my -- eyes that she's surprised that I can fight back so well. I send her a caustic smile and take a defensive stance, wanting to end this as quickly as possible.\n\nThis time, I'm caught off guard. Still clearly possessing her demonic powers, Leyna charges at me quickly, moving so fast that she almost disappears for an instant before flickering back into view and landing a solid punch on my cheek. I'm sent flying across the room from her strength, luckily caught in the strong arms of my husband before I can smash into the marble wall. He steadies me, placing his hands on my shoulders so I can gain my balance again.\n\nAt this point, I silently thank that asshole that he calls his father for creating him. Without him, I may not walk away from this.\n\nAs my head clears, I see Leyna staring daggers at Lucifer. She's furious because he's siding with me. The idiot's forgotten that despite having my body, Leyna doesn't have my soul. Lucifer could never lover her. She's too cold, too selfish and too rotten to ever give him the TLC he needs. Even if she owned my body, my mind and my soul, she could never be me.\n\nStepping out of my husband's gentle embrace, the need to strangle this woman almost driving me nuts. I charge at her, giving another good shot to her face and sending her stumbling back. She groans a bit, but recovers and races toward me, missing my face with her fist but managing to scratch my face as a cheap shot.\n\nI cry out, and stumble back, blocking another punch with one hand, while cradling my face with my other. She's scratched me hard enough draw blood, but it's not enough to do any real damage. I pull myself up and we both retreat to our corners, our chests heaving and out eyes watering from the flurry of blows we've taken.\n\nLucifer steps behind me and pulls me into his embrace, sweeping his wings around me to shield me in case psycho-bitch decides to take another free shot. The chill from his skin shock me awake a bit, forcing my nerves to respond and the gears in my head to start turning.\n\nI stare at Leyna, confused, exhausted and annoyed. Neither of us is going to back down, no matter how many punches we throw. This punch-fest could go on for decades and we'd still be going at it. There's got to be another way to break her down and get my body back.\n\nMaybe...\n\nAn idea clicks into my head, one so simple I almost burst out laughing. As much as I want to, I don't need to fight Leyna; I need to get my body back. If kissing me switched us the first time, maybe it will work again.\n\n\"Let me go,\" I whisper.\n\nLucifer tightens his grip on me. \"Michelle.\"\n\n\"I have an idea.\" My voice is stronger than I feel.\n\nHe hesitates, but relents and releases me from his delicious hold. Straightening my spine, I storm over to Leyna, a deep, sarcastic smile plastered to my face. She sees me and bolts upright, her face twisting into a mask of rage. When I come within ten feet of her, she starts screaming at me and throwing wily, directionless punches. I bob and weave easily, making my way closer to her with every step.\n\nFinally, I make it all the way through her gauntlet and come right up to her face, staring into my hate-filled eyes. She growls at me and throws one last punch. I dodge and make my own move, wrapping my hand around her neck and pulling her close. Taking one final breath and mentally crossing my fingers, I press my mouth to her.\n\nThe world goes black for an instant, and a bolt of lightening rips through me. I'm weightless for an instant, then incredibly heavy. I'm hit with another bolt of electricity, then I'm jerked backward out of the darkness and into a blinding white light...\n\nI flick my eyes open, staring down at Leyna as my bearings start to roll back into place. I'm dizzy, but my senses slowly come back to me. I can hear my own ragged breathing, feel the beat of my heart in my chest, and feel the soft silk of my gown rubbing against my skin.\n\nCurious, I look down to see that I'm dressed in my usual corset dress. My chest is bursting out as usual, and my own dark brown hair is tickling my shoulders. Looking up, I see Leyna staring up at me, her yellow eyes misty and unfocused, her cherry-red hair wild and unkempt.\n\nYES!\n\nRelief floods through me. I'm back! I've got my own body again! Finally! I almost break way from Leyna and start dancing. After all this fighting and arguing and tears, all it took was a simple kiss to set things straight. I nearly smack myself. Usually, I hate when things are this easy, but right now I'm too ecstatic to care. I've got my own body back and that's enough reason to celebrate.\n\nLeyna's soft moan interrupts my internal celebration. My attention snaps to her, and I watch as she slowly recovers from our switch. Her eyes flicker as she adjusts to her new surrounding, widening when she sees me staring down at her. She gasps, snapping her head down to see herself dressed in her old clothes. She looks up at me, fear, anger and confusion in her eyes.",
        "I smile warmly at her. \"Welcome back.\"\n\nShe glares up at me, but my smile never fades. Instead, I curl my hand behind my back, cock my arm as far as it will go, and deliver the hardest punch I've ever given. Leyna cries out and stumbles backwards, crumpling to the floor and cradling her face. I smile proudly, elated to know I'm back and she's down.\n\nI step forward, intending to haul her ass off the floor and smack her again, when the fabric of my dress brushes against my nipples. There's no tug from my piercing, no shivers racing up my spine from the fabric. I screech to a halt, looking down at my chest as I pull the bodice of my dress away. My breasts are plain, my nipples their usual rosy pink. But no gold, no stones. All the effort and care Lucifer used to adorn my skin is gone.\n\nI've gone from mad to furious. She's taken out the few things that symbolize my union with Lucifer, the one way I could prove to the world that we belonged to each other. I snap my head up to stare at her, my eyes narrowing as I give her my you're-fucking-dead glare.\n\n\"Lucifer,\" my tone is surprisingly even despite my anger. \"She took out my piercings.\"\n\nMy husband's eyes flick to me, narrowing then relaxing as he realizes what's happened. His smile could outshine the sun, and I sense his desire to steamroll over Leyna and tackle me to the ground. Instead, he manages to control himself enough to focus on my source of anger. His gaze shifts back to Leyna, his golden orbs narrowing in silent fury.\n\n\"Indeed she did. What should we do about that?\" He cups his chin with his fingers, staring lovingly at me.\n\nLeyna stares up at me, her sickly yellow eyes filled with fear and anger. She knows how pissed I am -- I had to kiss her to get my body back -- so she's expecting me to go nuclear on her ass and tear her to pieces. I'd love to, believe me I would, but killing is not my forte. I was raised to brush the dirt off my shoulder and keep going. Karma would take care of her children and destroy those who opposed her.\n\nI think it's time Karma took the reigns. She wants Lucifer so badly, she can have him.\n\nI shrug nonchalantly and smile at Lucifer. \"I don't care.\"\n\nLucifer's warm smile falters a bit. \"Michelle, she stole your body.\"\n\nI keep smiling at Leyna. \"Yes, but she lied to you. That's the worse offense.\"\n\nLeyna's eyes widen in horrified shock. She knows my plan -- she played with Lucifer, so I'm going to toss her to the wolves. Her lip trembles a bit, but I can see in her eyes its anger, not fear, that's diving her to make such a pitiful face. She's a predator, and she'll likely strike if I show any mercy. I may be back in control, but she's not above trying to kill me or switch again.\n\nBefore I can scowl back at her, and idea explodes into my head. It's incredibly simple and foolish, and it makes me stop for an instant as I try to rationalize my sudden burst of thought. As I mold it and smooth out the edges, I start to smile. It's a perfect idea.\n\nThey fit so well...\n\n\"Lucifer,\" I purr, suddenly feeling more mischievous than I have in years.\n\nHis eyes snap to me, curious. \"Yes.\"\n\n\"I may have the perfect punishment for out little doppelganger here.\"\n\nMy smile becomes slightly evil, an expression that crosses my face less often than a solar eclipse comes around. I watch as Leyna's eyes suddenly fill with genuine fear. She can't read my mind, but she knows I've gone something very nasty and perfectly fit planned for her.\n\n\"How well would a demon and an angel get along together?\" I ask innocently.\n\nLucifer is silent for a moment as he ponders my question. \"Oil and water. They'd try to kill each other. Why?\"\n\nI raise my eyes to smile at him. \"Our Leyna here is a bit of a self-absorbed whiner, wouldn't you say?\"\n\nHe nods, but stares at me curiously. \"Yes...\"\n\nI cock my head and grin at him. \"Who's the most self-absorbed, whiney angel you know?\"\n\nHe glares at the floor as he racks his brain for an answer. Suddenly, he goes completely still. He raises his head to stare at me, a most devilish smile crossing his lips. He looks thoroughly pleased with my plan, as if I've just passed Demon Thought Processes 101 with flying colors.\n\nHis gaze drifts back down to Leyna, his wicked smile still plastered to his face. \"Yes, I agree. She and Michael would make a fine match.\"\n\nLeyna's eyes early burst out of her skull. She whips her head from me to Lucifer and back again, the panic and anger starting to boil under her skin.\n\n\"You bitch!\" she screams. \"You can't!\"\n\n\"Why not?\" I gaze at her, waiting for her illogical answer.\n\nShe's rendered silent, her eyes flicking back and forth frantically as she tries to plan her escape. But she's not going anywhere and she knows it. She's royally fucked.\n\n\"Lucifer, how do I call Michael?\" I look at him expectantly.\n\nHe shrugs, his smile still plastered to his face. \"Just go out into the hall, show your tits and call his name. One look at your chest and he'll fly down here in an instant.\"\n\nI smile back at him and nod, turning towards the door. I take brisk even steps, the train of my dress flowing majestically behind me, slightly brushing against Leyna's arm as I pass by her. I smile down at her, a triumphant, proud smile that makes her scream futilely at me.\n\nIf dad could see me now...\n\nI reach the door and grab the handle, then freeze. Belphagor and the other angels are in the hall, waiting for Leyna to come out so they can drop her dead. But they have no idea we've switched back to normal, so if I go prancing out there, I might get seriously injured.\n\n\"Lucifer,\" I turn to face him. \"Belphagor?\"\n\nHis head snaps up and he races to the door, gently nudging me aside, he pulls the massive block of wood open and takes a single step out into the hallway. He turns quickly, pointing a finger at Leyna and commanding her in his demonic tongue to stay put. Honestly, I don't think she would move if she could.\n\n\"Belphagor! It's Michelle! Lay down your weapons!\" he shouts into the air.\n\nThere's an eerie silence as he steps back, smiling at me and bowing so I can pass. I hesitate, peering out into the silent hell, my guts turning out of instinctive fear.\n\n\"You're sure they won't attack me?\" I ask shakily.\n\nHe straightens and kisses my neck. \"I promise.\"\n\nI inhale a slow breath. \"If you're sending me to my death, I swear I'm coming back as a ghost and haunting your ass.\"\n\nHe stills. \"Why would you think that?\" He sounds wounded, almost pained to know I don't trust him.\n\nOh...that earned us some sexy time, didn't it?\n\nI hate to admit it, but I still have some reservations about my fallen husband. I love him with all my heart, but he is a trickster who's been know to turn on those who care about him the most. If he can lie and turn against his father, he can lie and turn against me.\n\nMy silence is enough to answer his question. His eyes slide to the floor, pained and starting to well with tears. Mine do as well, my conscience screaming at me for my mistake. But I can see in his expression that he understands my fear. He would never deny that he's tossed a few good friends and family members into the fire, so my fears aren't foolish. Still, I've stabbed him in the heart. I did so with a needle, so he won't die or fall apart on me, but it still hurts.\n\nI shake my head and turn to face him, throwing my arms around his shoulders and pressing my face against his solid chest. His arms close around me automatically and he holds me tight, forgiving me when no one else would. I moan softly into his skin, voicing my stupidity and regret. I can hear the rumble in his chest as laughter bubbles up, and his hands gently stroke my hair.\n\n\"Don't be,\" he whispers into my hair. \"You're more right than you know. I would never throw you into a situation where you might get hurt. I care about you too much. But I have done it in the past. You have every right to be apprehensive.\"\n\nAt this point, I wonder if Michael would be so forgiving. Taking an uneasy breath, I gently pull away from Lucifer, snapping my head to the floor so I don't have to look at him. He doesn't take my silence, and reaches down and tips my chin up with his fingers. He's smiling warmly at me, then leans forward and kisses me long and hard. I kiss him back, apologizing for my stupid remark and begging his forgiveness.\n\nHe responds by stepping forward, pressing my back against the door and pinning me in place. One hand snakes down past my hips and grips my thing, hauling it up and locking my knee over his hip. It's a mirror image of our time in the hallway, but less I-really-missed-you and more I'm-really-sorry-can-we-have-make-up-sex-now?\n\nReaching down with icy hands, Lucifer tugs at the remaining two chains on my dress, pulling them away from their silver rivets and setting my dress free. The two panels at the front of my dress fall away, allowing my breasts to spring forth into the warm, dry air. My nipples, bereft of their protective piercings, are sensitive to the change and harden instantly.\n\nLucifer takes this opportunity in full, dipping his head and suckling at my breast hard enough to make me squirm. I gasp softly and weave my fingers through his tousled hair, holding him close as he teases and torments my flesh. I moan softly and arch my back so he can pleasure me more. He takes the hint and intensifies his play, gently biting and tugging at my nipples until I'm writhing against the rough wood of the door.\n\nIn a small, clear corner of my mind, I realize that Leyna must be watching us. My pride swells at the thought of my rival -- the woman who nearly stole everything from me -- being forced to watch as Lucifer and I get hot and bothered. She must be fuming and I'm having the time of my life.\n\nHe pulls away too soon, but leans forward and kisses me again to make up for it. I smile against his lips, relieved to have been forgiven so quickly and so pleasurably. I need to act out more often.\n\nPulling away from his kiss, I toss my head back against the rough wood of the door and take a deep breath. Closing my eyes, I steady myself against my husband and prepare for an onslaught of being ogled and reprimanded by an angle less captivating then my own.\n\n\"Michael!\" I call out as loudly as I can, my gut twisting as I say the name. He's the last person I want to see, but the best way I can think of to punish Leyna.\n\nLucifer steps back, giving me one last kiss before he strides back to Leyna. \"Seduce the hell out of him. I'll do the rest.\"\n\nI glance at him, nervous. \"You can force him into this?\"\n\nHe smiles proudly. \"He'll be in my house, not dad's. It's my rules and my powers that run this place. He won't have a choice.\"\n\nI smile back and nod, grateful to have such a powerful man by my side. Watching silently, I see Lucifer grab Leyna's arm and haul her to her feet. She stares up at him fearfully; he smiles back mischievously. I sigh, relieved, look out into the hall, waiting for our guest to arrive.\n\nNothing.\n\nI scowl. \"How long does he usually take?\"\n\n\"Not this long,\" Lucifer's as confused and annoyed as I am.\n\nI exhale sharply and set my tone to honey-sweet. \"Michael. I need to talk to you. You were right about Lucifer -- he doesn't love me. I'm...I'm considering going back.\"\n\nA soft breeze flutters past me, and I hear that fait whisper of feathered wings slice through the air. He's definitely here, but I can't see him. The hall is still empty; he must be hiding on the ceiling. I sigh. This boy is going to need a bit more sugar in his coffee.\n\n\"Michael, please,\" I please softly. \"I really want to come back. I miss my family. I miss my school. I-I miss my dad. I don't want to be married to Lucifer anymore! Please!\"\n\nSuddenly panicked, I look back at my husband, praying he doesn't believe a word I've just said. Instead, Lucifer smiles widely at me, ushering me to keep up the charade. He's got Leyna hidden behind him, ready for Michael when he takes the bait.\n\nI smile and nod, turning my attention back to the vacant hall. \"Michael...if I...if I offered you something...would you help me out of this?\"\n\n\"And what kind of something are we taking about?\" Michael's deep, seductive voice floods the hallway, nearly knocking me off balance.\n\nI hesitate, looking back at Lucifer for the go-ahead. He and Leyna have moved to one side of the room, out of sight if Michael should take the bait. He gives it willingly, almost excited to see his brother fall into his trap so easily. I take a deep breath and focus on the hallway once again.\n\n\"I'm not sure...what would you...like?\" I make my voice shakier than I feel, trying to play the part of the nervous, scorned lover.\n\n\"Oh...\" He purrs into the air. \"So many options, so little time.\"\n\nUgh! Gross!\n\nI can't help my giggle. \"I though you angels were supposed to be chaste and holy.\"\n\n\"We are, but we can afford a little playtime here and there. I've been very good this year, so I can afford what most can't.\"\n\nWhat? You're suddenly on Santa's nice list?\n\n\"Well...\" I forcibly stumble on my words, acting shyer than I really am. \"I guess you can have your pick.\"\n\nThere's a silence for a moment. \"Where's your husband?\"\n\n\"Down in the Fire Pits. He has some business to take care of with Beelzebub. He'll be stuck down there for another few hours figuring out which souls go where.\"\n\n\"Ah, a clog in the pipes. Yes, that should keep him occupied for a bit. Very well then.\"\n\nHe drops down from the ceiling, his white wings flaring out around him. He stands up, flexing his thick muscles and staring at me like a starving dog. A sly smile I plastered on his face. He may not be fond of his brother of his work, but the idea of bedding Lucifer's nubile little queen has made Michael a bit more accepting of our heating surroundings.\n\nHe takes a slow, sensual step forward. \"Let's talk business.\"\n\nThankfully, I've spent too much time rolling around with my husband to find him sexually attractive, so easily I shift into shy seductress mode and let him have it.\n\nI force myself to nod shakily. \"Alright. What is it that you'd like?\"\n\nHe looks me over a few times before his eyes settle on my breasts. \"Those will do for a start.\"\n\nI pull back an inch. \"For a start?\"\n\nThere's no split payments for this! This isn't a bank loan!\n\nHis smile grows mischievous. \"I may not be as cruel as my brother, but I do charge a high fee. Now, do you want my help or not?\"\n\nI sigh and drop my head. \"Yes.\"\n\n\"Good.\" He steps forward, his hand lashing out to snake around my waist. He jerks me close against him, the heat from his skin searing my own. \"Hold still.\"\n\nBefore I can protest, he dips his head and wraps his lips around one of my bare nipples. The sensation is sharp thanks to the absence of my piercings, but not pleasurable. Nothing, not even Michael's tongue, compares to my husband's skill and technique. He can tease me all he wants, but I will never find him enticing.\n\nAs Michael takes his payment, my eyes flick over to my husband hiding in the shadows. He's biting his lips to keep from screaming, but his eyes tell me to keep the game going. I need to convince Michael that I really need help. To do that, I'll need to turn up the volume and play along.\n\nI mouth an apology and force a moan from my throat. It's convincing enough for Michael to tug harder, and I weave my fingers into his thick hair to push him farther. While I sound like I'm having the time of my life, I'm really just staring up the ceiling waiting for my husband to make his move...which had better be soon or else I'm going to punch Michael in the dick.\n\nSeconds later, Michael pulls away, straightening so he can grin down at me. Thankfully, an honest blush floods my cheeks, making me look all the more convincing as I look away shyly.\n\n\"You are delicious, Michelle.\" He licks his lips playfully. \"If only you were mine.\"\n\nI offer a faint smile and glance at Lucifer. He smiles back at me and nods, jerking Leyna up from the floor as he readies himself for the attack. I'm relieved that he's finally ready to help me, but I still need to play my part. Begrudgingly, I turn back to Michael, my eyes filled with false hope and worry.\n\n\"Now, then. For the rest of my payment...\"His smile widens a bit, and he steps back and begins to undo his pants.\n\nEWW!\n\n\"Oh, Michelle. Do I have a surprise for you.\" He croons to me softly, his tone light and airy, filled with joy and a little bit of mischief.\n\n\"My dear brother,\" Lucifer hums as he steps out from the shadows. \"And I have a surprise for you.\"\n\n* * *\n\nOkay, so chapter 5 is in production. This probably won't be a 10-chapter story like Kara or Claire's, so I'll probably do about two more and finish this fairy-tale. Sorry guys, but I just don't think I'll be able to stretch it out six more chapters. Michelle and Lucifer do need some time alone. ;)"
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "hell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-old-king-and-the-new-bride-ch-04"
}