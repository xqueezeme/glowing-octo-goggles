{
    "title": "Awakening Ch. 11",
    "pages": [
        "I woke up feeling drained, alone in the bed. I looked around and realized that the sun was just coming up. I was still dressed, well partly. I had a shirt on and pants on, but they were open and just pulled up around my thighs. I slid off the bed and pulled my pants up the rest of the way. My brain told me things that weren't possible, that I had sex with Lilly, but that wasn't possible. It also told me I had sex with my son's wife, more than once. I hoped that wasn't right, but somehow I knew it was. I walked into the living room and found Amanda laying on the sofa, covered in a blanket. I could tell she wasn't dressed, and I wasn't going to wake her. She looked as tired as I felt. I turned to walk back to the bedroom.\n\n\"Scott,\" she said softly, stopping me.\n\n\"Yeah?\"\n\nShe got up and walked towards me. \"Are you okay?\" she asked, reaching out for me and then stopping short, not touching me. \"Nan...Nan told me about it. About what you shared, about how it felt for you, for her.\"\n\n\"I'm sorry,\" I whispered. \"I don't know where that came from. I don't know why that came out.\"\n\n\"I don't either, but surprisingly, I think both Nan and Rob needed it. I think they needed a different view of what a relationship is. Nan understands. I don't know that Rob does completely, but I think he understands enough.\"\n\n\"I feel bad, having had sex with his wife.\"\n\n\"You didn't. You had sex with your wife,\" she whispered. \"At least to you that's what it was. Nan said when you were making love to Lilly on that bench, and her on the table, she could feel the love you had. It was as if...as if she could feel what you felt for Lilly. I know you said that you could feel what we feel. But I didn't know it went the other way.\"\n\n\"I didn't either,\" I answered, really wanting to reach out and hug her, but afraid to. Wanting to pull her against me and feel her softness against me. She seemed to see it, understand it.\n\n\"Take your clothes off,\" she whispered.\n\n\"Huh?\"\n\n\"Take your clothes off. Please?\" she whispered again.\n\nI nodded and pulled off my shirt and then stepped out of my pants and briefs. When I was naked in front of her, she stepped back to the sofa. \"Come on. Lay down,\" she coaxed, patting the sofa and then stepping back to give me room. I laid down on my back and then she carefully moved over me, making sure not to touch me until she could lay herself flat on top of me, her soft body pressed to mine. She quickly lowered her face to mine and brushed her lips against mine. \"I wish I could feel that kind of love,\" she whispered, both of us waiting for IT to happen and also waiting for the two of us to be transported off to some memory or fantasy. We waited, looking into each other's eyes, waiting more. But nothing happened. No memory no anything.\n\n\"What's happening?\" she whispered.\n\n\"I don't know,\" I answered back.\n\n\"You don't feel it happening?\" she asked, her lips almost brushing mine.\n\n\"No. Except maybe getting a hard-on.\"\n\n\"Yeah. I feel that too,\" she whispered. \"Feels kinda nice, especially where it's poking.\"\n\n\"It is poking a good spot there, isn't it?\" I said quietly, arching my back a little to force it towards her. She grinned and pushed back against me, the two of us forcing my dick into her pussy a couple short inches.\n\n\"This is kinda fun, isn't it?\" she giggled. \"Having sex together, I mean, really together for a change.\"\n\n\"Kinda is,\" I answered, wrapping my arms around her and moving my feet so that I could push a little more of me into her.\n\n\"Ohhhhh yeah. Much more fun,\" she groaned, arching her back to work me a little deeper. The two of us rocked our hips in time with each other, sliding my cock in and out of her pussy, dragging her clit along my shaft with each stroke. \"Mmmmmm this is nice. You keep this up and you're going to make me come all over you!\"\n\n\"I think that feeling is mutual,\" I groaned in pleasure, closing my eyes and enjoying the sensations as we rocked together. Stroke by stroke, we pushed each other closer and closer until I felt her pussy start to contract around me. Her legs shuddered and trembled as I took the last few strokes into her. With a grunt, I arched my back and felt my cum lancing into her, surge after surge flowing into her hot pussy.\n\nI felt my body start to relax and stretched my legs out, hers still on either side of mine. She looked down at me with a smile and lowered her mouth to mine, giving me a long slow wet and very loving kiss. I held her close as she moved her face from mine and lay her head on my shoulder. We fell asleep that way, both of us contented for the moment.\n\nI got out of the car and walked around to open the driver's side door. Suzanne looked gorgeous in the long cream colored strapless gown. I held a hand out for her and helped her out of the driver's seat, the slit in the gown's skirt portion spreading until her bare leg showed all the way to her hip. She grinned up at me and pushed the skirt aside slightly more, allowing me to get a glimpse of her bare pussy, her mound and full outer lips shaved clean.\n\n\"Just in case you wondered, yes, the dress is all I have on,\" she said softly before pushing up out of the car and standing, letting the dress once again cover her exposed pussy.\n\n\"Suzanne...\"\n\n\"No. Stop,\" she said, stepping towards me and slipping her arms around my neck. \"I get it. I know exactly why you haven't wanted to come to these for the last few years. I remember dancing with you at the last one you came to, the one where she was overseas. You were happy, you were having fun, even though I could tell you wished she was dancing with you instead of me. But I kept you from being alone and we had a good time. I worked hard to get you to agree to come tonight. I like you. I like you a lot. I have for a long time. So for tonight, just have fun. Do whatever you feel like you want to. You have my permission.\"\n\n\"And if my choice is to just drop your dress right here and fuck you on the hood of your car?\" I asked, trying to get an extreme reaction from her.\n\n\"If that's what makes you happy, do it,\" she said with a little grin. \"But we're still going into the party.\"\n\n\"You're not letting me out of this, are you?\"\n\n\"After how hard I worked to get you to agree to come, buying a new sexy dress and three hours of makeup and hair. Not on your life,\" she said with a chuckle.\n\n\"You do look ravishing,\" I agreed. \"But don't you think it's too soon for....\"\n\nShe leaned her face to mine, her six inch heels bringing her face even with mine. She pressed her lips to mine, stopping my comment. She kissed me softly for long seconds before breaking the kiss breathlessly. \"God I've wanted to do that for a long time,\" she whispered. \"No, I don't think it's too soon. But if you do, then don't.\"\n\nShe held herself pressed to me for long seconds before smiling. \"Maybe we better go in before I decide to take YOUR clothes off and fuck you on the hood of my car.\"\n\n\"Maybe we better,\" I agreed. She slipped her arms off my neck and hooked one of her arms in mine. We walked arm in arm to the front doors of the hotel. The company always put on a huge Christmas party, and this one promised to be the best yet. I opened the door and let Suzanne walk into the building in front of me. Instead of heading towards the ballroom, she walked to the front desk and checked into a room.\n\n\"Staying the night?\" I asked as she looped her arm in mine again and we headed to the ballroom.\n\nWithout looking at me she whispered, \"I plan on having a good time tonight, which will probably include several drinks. In deference to what you've gone through, I chose to reserve a room for the night so I didn't have to drive. A room with a king size bed. Now, you can choose to stay the night with me, in that nice big king sized bed, you can rent a room of your own, or you can take a cab home,\" she said before she slowed her steps. She stopped and turned to look at me. \"I'd really like it if you chose that first option.\"\n\nI wasn't sure I was ready to go that far with her. I liked her, and yes, I had, after almost six weeks of badgering, agreed to come as her date. But spending the night with her? I wasn't sure I was ready for that yet. \"How about I think about it?\"\n\n\"I'll accept that... for now,\" she whispered back before leaning her face to mine and giving me a quick kiss on the lips again. \"Now... I'm hungry!\"\n\nShe stepped back and we headed into the ballroom. Most of the evening was spent with Suzanne hanging close to me or latched onto me in some way. She seemed determined not to lose me to anyone else this evening, though Naomi took one of the very few opportunities that I was alone to drag me onto the dance floor for a slow dance that was playing. I'd seen her in all kinds of outfits, but the sexy little blue dress she had on clung to her like a second skin and did little to blunt the presence of her hard nipples against my chest as she slipped herself inside my suit coat. The only way for the two of us to dance any closer would have been to be undressed. I chalked it up to the alcohol she admitted having consumed.\n\n\"I think I'm ready to call it a night,\" Suzanne said as she came back from the bathroom and found me dancing with Naomi. She hooked her arm in mine and led me out of the ballroom. \"You will walk me to my room, won't you?\"\n\n\"Of course,\" I answered as we headed to the elevator.\n\nThe annoyingly insistent knocking woke me from the most pleasant dream. \"Damn who's that?\" Amanda grunted as she pushed herself up off of me. She wrapped the blanket around herself and padded barefoot to the front door, looking out the little peephole before opening the door.\n\n\"Hi. Is Scott here?\" I heard from the front door.\n\n\"Oh shit. Naomi!\" I grunted, sitting up quickly when I recognized her voice.\n\n\"Oh Scott. Thank goodness!\" she said as she saw me over the back of the sofa, scooting in past Amanda with her arms full of file folders. She got all the way around the sofa before she stopped, staring at me. \"Oh...my...God!\" she said as she stared at me. \"I'm sooooooo sorry. I had idea that you were...um...that you two were...Oh gosh, I'm so sorry,\" she said, backing up and then turning around to look away from me. \"I'm soooo sorry Scott. I didn't mean to barge in while you were...you know.\"\n\nI chuckled. \"Not a problem Naomi. We weren't. We were..um..sleeping.\"\n\n\"I'm just...I didn't mean to wake you or anything.\"\n\n\"It's alright. Give me a minute,\" I said as I got up and walked out of the room. I found a pair of shorts and pulled them on and then walked back out. \"Okay. You can look now.\"\n\nShe turned part way around, her eyes shielded until she peeked through her fingers to see that I had on a pair of shorts. \"I'm so embarrassed. I didn't even think about you not being dressed this late.\"\n\n\"How late is it?\"\n\n\"Ten-thirty?\"\n\n\"Oh. That is a bit late, isn't it? Don't worry. I'm not telling anyone that you saw your boss naked,\" I said with a chuckle. \"So, what do you have for me?\"\n\n\"I have soooo many things that you need to sign off on,\" she said, carrying the armload to the kitchen table and flopping it down, half a dozen folders skittering off the pile and across the table. \"Oh goodness. I'm making such a mess. I don't mean to. I mean I'm not trying to make a mess.\"\n\n\"Settle down. It's alright,\" I said softly, standing about two feet away. \"It's nothing to be upset about.\"\n\n\"But I just barged in and you were all naked and everything and you have such a big cock and...oh shit! Did I just say that? I mean I didn't mean to say that it just snuck out. Oh Lord. I'm sooooo embarrassed.\"\n\n\"Easy,\" I said shaking my head. She was a wonderful secretary as long as she didn't get flustered. When that happened, it seemed like her black hair turned suddenly blonde and she lost it. Clearly seeing me naked flustered her more than just a little. \"Close your eyes and take a deep breath. It'll be alright.\"\n\nShe closed her eyes and took a deep breath and let it out slowly. It seemed to calm her somewhat until she opened her eyes again and looked at me, her eyes immediately darting down to my thin athletic shorts and the bulge in them. Her hands flew to her eyes and covered them. \"I'm so sorry Scott. I just looked right at your cock again. Why did I do that? Oh goodness. I'm so sorry. I mean if a guy stared at my tits like that, I'd probably slap him and here I am looking at your junk like that. I'm sooooo sorry.\"\n\n\"Relax,\" I said with a chuckle. \"Look all you want. It isn't going to bother me!\"\n\n\"OH Lord NO! NO, NO, NO! I shouldn't be looking. I'm not supposed to be looking. You're like, my boss. I'm not supposed to be looking at your...oh God...you have such a big cock!\" she said as she looked at my shorts, seeming to be unable to rip her eyes from where she was staring as my cock inexplicably hardened in my shorts.\n\n\"Relax. It's just us three here. I promise, I won't tell a soul that you looked,\" I said in an almost conspiratorial whisper.\n\n\"Ohhhh. Okay,\" she whispered back, still looking at my crotch, one hand pressing her skirt between her legs and her other moving to squeeze one of her large chocolate colored breasts through her blouse. She chewed on her lips and stared at my growing bulge before I called her name again.\n\n\"Naomi?\"\n\n\"Huh?\"\n\n\"Naomi!\" I said again, getting her attention to look up at me.\n\nShe looked up at me and I raised my eyebrows and looked down at her crotch. She followed my gaze and squealed slightly, jerking her hand from her crotch. \"I...AM...SOOOOOOO Sorry!\" she said as she started to wring her hands. \"I don't know what to say. I mean I'd never...I mean, I'd want to, I'd thought that...oh but I'd never...not really...I mean you're my boss and all. I'm sorry. Maybe I should go?\" she said, finally turning around to face away from me. I looked over to Amanda, standing there with a grin so big that she looked like she'd just won the jackpot.\n\n\"What?\" I asked her.\n\n\"Your secretary has the hots for you,\" she said loud enough for Naomi to hear as she walked from the front door around to where I was standing.\n\n\"Oh Lord no. I mean, I do but I don't. I can't. I mean....Oh God,\" Naomi groaned as she turned around and looked at me just as Amanda slipped her hands around my waist and pushed the front of my shorts down to expose my cock.\n\n\"It is such a sexy cock, isn't it?\" Amanda asked before kissing the back of my neck. \"And it feels soooooo good sliding in and out of you. Mmmmmmmm I just about can't get enough of it.\"\n\n\"Oh my,\" Naomi said in a whisper as Amanda wrapped a hand around my dick and started to stroke me, pointing my dick right at Naomi.\n\nI felt Amanda release my dick and slip around me, completely naked, having dropped the blanket along the way. She stepped to Naomi and reached out one hand to her hip. She stepped around behind her and I saw her gently kiss Naomi's neck. \"Doesn't it look so good? Do you want to feel it? Do you want to lick it and suck it? Mmmmmmm, it'd taste so good in your mouth, wouldn't it?\" Amanda whispered to her.\n\n\"Oh God. I shouldn't be looking,\" Naomi whispered, her eyes staring at my cock.\n\nI saw Amanda's hands move to the back of Naomi and then slide up to her shoulders. She slipped her hands into the neckline of the little gray dress Naomi had on, sliding it off her shoulders. \"Wait!? What!?\" Naomi said in surprise, moving both hands to cover her tits and hold the dress in place as Amanda tried to slide it down her arms.\n\n\"It's alright,\" Amanda whispered, giving up on pushing the material down her arms and sliding her hands instead down to her hips again. \"Look at that sexy cock. You want to touch it, don't you? You want to feel it sliding into your pussy? I know you do. I know I do. We've waited for it for so long,\" she continued to whisper as she moved one hand down to pull Naomi's dress hem up, exposing the small pair of gray panties. I stared, almost mesmerized as Amanda slipped two fingers between Naomi's legs, stroking her obviously wet pussy through her panties.\n\n\"Ohhhhh God,\" Naomi moaned, pushing her hips slightly at Amanda as she rubbed her pussy.\n\n\"Let's get this off,\" Amanda cooed softly, sliding her hands back up to push on the dress again, this time Naomi letting her hands move to her sides. \"Go ahead. Touch it. You know you want to.\"\n\nNaomi took a half step forward and reached for my dick, her hand wrapping around it. \"Oh my God it's so hard,\" she moaned softly.\n\n I stood in the elevator, staring at Suzanne, already completely naked, her dress laying on the floor while she pushed the skintight blue dress off Naomi. I stared at her big black tits and even darker areola surrounding her rigid nipples. She pushed the dress down until it slid down Naomi's legs, leaving her in nothing but her high heels. \"No underwear?\" Suzanne asked Naomi quietly.\n\n\"I was hoping to get him to touch me,\" she whispered as she started at the bulge in my suit pants.\n\nThe elevator dinged as it stopped, and Suzanne bent to pick up both dresses before coaxing us both out the elevator car with her. She hooked an arm in mine and pulled me along, Naomi, completely naked, having to follow along if she was going to get her dress back. We stopped at a door and Suzanne used a key card to open it, pulling me in with her. Naomi stepped in after us and let the door close behind her.\n\n\"Don't just stand there. Come in,\" Suzanne said with a grin. \"If you're as horny as I am for his cock, it should be a fun night.\"\n\n\"But... He's my boss,\" she whispered as Suzanne started to undress me, pulling my suit coat off and tossing it at a chair.\n\n\"Who's going to care in the morning?\" Suzanne asked as she unbuckled my belt. \"Oh goodness, look at this cock!\" she groaned as she wrapped a hand around my fat shaft. \"Come suck it with me,\" Suzanne whispered as she squatted down in front of me. I looked down as she wrapped her lips around my head and pushed her mouth onto it.\n\nI felt Naomi step to me and press her big soft tits against my arm, pressing her body tightly to me. \"God, I wanted to undress you down there, when we were dancing. I just wanted to feel your body against mine. That's not wrong, is it?\" she whispered as she leaned close enough to turn my head to her and press her lips to mine. She used one hand to undo the buttons of my shirt while she kissed me, her hot wet mouth sensually sucking my tongue and lips. She finally had my shirt unbuttoned and worked it off, leaving me with my pants and boxers around my ankles and only my tie on above that. \"Fuck me,\" she whispered. \"Please fuck me.\"\n\nShe let go of me and moved around Suzanne, straddling her and sitting on the edge of the bed. She leaned back until she was lying on her back with her legs in the air. She spread her legs wide and held them like that, looking at me, waiting.\n\nSuzanne moved aside and grinned up at me, one hand still on my cock. \"You know. I think someone wants this. Why don't you fuck her? Fuck her like she's been dreaming of being fucked,\" she cooed, pulling on my dick towards Naomi's young and exposed pussy. I shuffled forward and Suzanne guided me towards Naomi's shaved pussy, her full lips spread and exposing her pink depths. Suzanne settled my head into her opening and then let go, standing up and stepping around me. She pressed herself against my back, her soft tits pressing to my back and her hips pressing against my ass to force me into Naomi.\n\n\"Ohhhhhhh fuck yes,\" Naomi moaned as I pushed deep into her, her black pussy gobbling up my fat white cock. I reached for her big tits, clenching them in my hands like handles as I started to hump my hips back and forth, driving my cock into her over and over. \"OH GOD FUCK ME! FUCK ME!\" she cried loudly as I pounded into her, my shaft sliding slickly in and out of her tight hole. Suzanne moved from behind me onto the bed, crawling to position her pussy over Naomi's face. Naomi's cries silenced as she started to eagerly lick Suzanne's slit, soft moans slipping from her as Naomi pleasured her.",
        "\"Ohhhhh God,\" I groaned, feeling my climax starting to build. \"I'm going to come.\"\n\n\"Do it!\" Suzanne moaned. \"Fill her hot little cunt with your cum. She's wanted this for a long time. She's wanted to walk into your office and strip in front of you and beg you to fuck her, so fuck her good. Give her a nice big load to remember this. Let her feel you pumping your cum into her!\"\n\n\"OH FUCK!\" I groaned as my body bucked hard, jamming my cock deep into her. Over and over my body jerked, pumping shot after shot of cum into her sweet tight pussy until there was nothing left. I stood panting, looking down at her quivering body, realizing that she climaxed right along with me. \n\nI stood panting, looking down at Naomi's nude form. Amanda, facing away from me, her eyes closed, quivering and climaxing on Naomi's face.\n\n\"Ohhhh yeah. So good,\" Amanda moaned as she pulled off of Naomi and rolled onto her back on the bed. I didn't remember even coming into the bedroom, let alone putting my dick into Naomi.\n\nNaomi slid up the bed, looking at me lustfully. \"Come on Scott. Come up here and let me lick your cock hard again so I can ride you. I wanna feel your cum filling me up again.\" She reached out and pulled me towards the bed. I crawled on the bed and let her roll me onto my back. With a grin, she closed her mouth around my dick sucking and licking our juices from me. I lay there, letting her tease me, slowly, over long minutes, trying to coax me back to hardness. She worked herself around until she had her pussy nearly in my face, her legs straddling my chest. I slid my hands down her body, finding and cupping her big soft tits. I squeezed and massaged them as I watched her pussy leak our cum, her deep pink insides occasionally spasming visibly. I had to admit the view was worthy of any number of fantasies.\n\nShe pulled away and turned to face me, resettling herself astride my body, my now hard cock pointing up at her pussy. \"You want this again? You wanna feel my sweet young cunt riding your cock? Or do you want me to slide this into my ass. Just tell me what you want. Front door or back door?\"\n\n\"Oh God. Pussy,\" I groaned as she rubbed my head around her wet lips.\n\nShe grinned back. \"I hoped you'd say that.\" She looked at her own pussy and rubbed my head around her clit a few more times before pushing me back to the entrance to her tunnel. \"Ohhhhhh fuck you feel good\" she groaned as she slowly slid down my cock again, my white shaft a stark contrast to her nearly black lips. She settled on me and then shifted her weight momentarily. She started riding up and down my shaft, bouncing herself so her tits bounced and flew wildly on her chest. \"God, I wanted to fuck you so bad downstairs. Dancing with you. Ohhhhh God I wanted to taste you and feel you and fuck you. I've wanted to fuck you almost every day since I started working for you. You're so fucking sexy. Did you know I never wear panties to work? Just so you can play with my pussy if you want to. When I'm in your office, getting you to sign things, I just want you to slide your hand up my thigh, right between my legs, and stick your fingers into my pussy. God, I've wanted you so badly,\" she moaned as she bounced up and down on me. I saw her body start to shudder as her own orgasm started to rush on her, little tremors in her legs and arms first and then her whole body. \"AHHHHHHH FUUUUUCK MEEEEE!\" she squealed as she leaned back, her body spasming as she did so, a huge spray of juices squirting from around my cock to land on my chest and stomach. Half a dozen times her body jerked and shuddered before she stopped lifting and dropping her hips.\n\nShe pushed herself upright and then forward, laying down on my chest, her big soft tits sliding around in the wetness she sprayed on me. We lay there, my arms around her, my still hard cock deep in her pussy as she lay on me, panting. Her breathing softened and then I felt her stiffen, her body going nearly rigid. I felt her use her legs to lift and lower her pussy a little, sliding my hard-on in and out of her a short inch or two. \"Oh my God,\" she whispered. She pushed herself up from my chest and looked down at me. \"What did we do? Tell me we didn't... We didn't just have sex, did we? Tell me I didn't fuck my own boss?\"\n\n\"Not only did you fuck him, but you squirted all over him,\" Amanda said as she lay on the bed next to us, just watching.\n\n\"Oh my God. I mean this is so wrong,\" she groaned as she continued to sit on my hard-on. \"I mean, I'm not supposed to have sex with my boss.\"\n\n\"But you wanted to,\" Amanda said softly.\n\n\"Yes but...\"\n\n\"And it felt good, right?\"\n\n\"Yes but...\"\n\n\"So what are you worried about? We're not telling,\" Amanda said. \"Besides. His cock is still hard. You gonna finish what you started?\"\n\n\"Finish what I started?\"\n\n\"Fucking him? You're not going to leave him like that are you? Or do you expect me to finish him for you?\"\n\n\"Finish him? You mean you want me too....\"\n\n\"Keep fucking him. Might as well. You may not get another chance, so you might as well make the most of it.\"\n\n\"But the party... shouldn't we go back....\"\n\n\"No party, it was just a fantasy,\" Amanda whispered, pushing herself up to look at her. \"You've been living out a fantasy. Stripping in the elevator at the party and then fucking him? It was all a fantasy. We've been right here the whole time. So go ahead and finish.\"\n\nNaomi looked down at me, almost as if she were looking for permission. \"You want?\"\n\n\"Go ahead,\" I coaxed, more than ready to let her make me come again.\n\nShe grinned and then started slowly lifting and lowering herself, driving me into her sopping wet pussy. \"Just a fantasy?\"\n\n\"Just a fantasy,\" Amanda whispered.\n\n\"This isn't. This is damn real,\" she moaned in reply.\n\nI lay there, feeling her bouncing slowly on me, coaxing my body closer and closer to climax. Amanda lay down again, this time with her face next to mine, softly kissing my cheek. I turned my head and let her kiss my lips while Naomi slowly bounced up and down on me. Her sweet young pussy clenched around my dick again as she started to climax yet again, her breathing growing more ragged as she worked up and down my shaft. \"Go ahead,\" Amanda whispered between kisses. \"You might as well fill her again.\"\n\n\"What if she's not on birth control?\" I whispered back.\n\n\"It's a little late to ask about that, isn't it?\"\n\n\"Yeah. I don't know why I asked.\"\n\n\"I do. She's not,\" Amanda said with a grin. \"And I think we both know it. I don't know how, but I know it's true.\"\n\n\"Yeah, me too.\"\n\n\"Probably isn't the first one that hasn't been,\" she whispered as she leaned herself back to me, kissing me softly and wetly, teasing my lips and tongue until my body bucked and jammed up into Naomi. Over and over my body bucked as I panted in Amanda's face. \"You know, I can't have any more,\" she whispered.\n\n\"Yeah. Somehow I knew that,\" I breathed.\n\n\"When you catch your breath, why don't you two go rinse off. Then you can get to work on those papers,\" she said as she pushed herself up, looking down at me with a grin. \"NO point in putting anything on. She's just going to take it back off a little later.\"\n\n\"You think?\"\n\n\"I know,\" Amanda said with a chuckle.\n\nShe was right, we took several hours, including a lunch break, to get through all the papers I needed to deal with. It took a little longer than it should have, partly because she kept reaching into my lap and playing with my dick, and partly because during our lunch break I bent her over the table and fucked her while she licked Amanda to a satisfying orgasm. It was nearly four when she finally got dressed and headed out with her armload of papers.\n\n\"Can I ask a question?\" Amanda asked, pushing me onto the sofa and then sitting on my lap sideways so she could look at me.\n\n\"Sure. Anything.\"\n\n\"When she knocked, what were you dreaming of?\"\n\n\"Dreaming of?\"\n\n\"Yeah. What were you dreaming of, because when I answered the door, I felt completely and totally drunk? I mean we didn't drink, but I sure as felt well lubricated.\"\n\n\"I was dreaming about the Christmas party this year. Why?\"\n\n\"It was kind of odd. I wasn't there, I've never been there, but yet, I could feel you dancing with her. Suzanne. The other woman in her fantasy. That was her fantasy, wasn't it? Not yours?\"\n\n\"I honestly don't know.\"\n\n\"So tell me about it. Tell me first, why you agreed to go as her date if you didn't want to?\"\n\n\"Well, when Lilly was overseas, I went to the party. I was kind of sitting alone, being bleak and lonely, and she came over to make it her business to help me have a good time. We didn't do anything but talk and dance. After...after the accident, I couldn't bring myself to go to anything like a party. I just missed having Lilly with me. We used to dance almost every slow dance we could get at these and I didn't want to remember.\"\n\n\"But she made you go?\"\n\n\"She pestered me every single day at work and even texted me on weekends. I finally gave in just to get her to stop bugging me about it.\"\n\n\"She's in love with you, you know.\"\n\n\"Who? Suzanne?\"\n\n\"You can't tell?\"\n\n\"I know she wants to get into my pants. She tried hard enough that night.\"\n\n\"Did she make it?\"\n\n\"Well. Yes and no.\"\n\n\"That needs explanation of course.\"\n\n\"I agreed to spend the night with her. We'd had plenty to drink and I was feeling like we could...you know. So on the way up to the room she took her dress off and tried to suck my dick in the elevator. Wasn't enough time of course. So she ran down the hall to her room naked, with me following, carrying her dress and trying to hold my pants up. She flopped on the bed to watch me undress. I leaned over her and started sucking her tits, she has really sexy tits, and she fell asleep on me. So I got us in bed, and we slept with each other, without sex. In the morning we were too hung over to do anything but take a shower together. We haven't gone out or anything since then, but she keeps asking me if I want to.\"\n\n\"And you keep saying no?\"\n\n\"Well, until my accident, yeah. It wasn't that many weeks since the party before I crashed the bike.\"\n\n\"Not that many weeks? What was your accident, mid-February?\" Amanda said with a frown. \"Were you avoiding her?\"\n\n\"Sorta. I mean, she's nice and all, and yeah, I was drunk enough to have sex with her, but there really isn't any spark, if you know what I mean.\"\n\n\"There might be now. If she was part of one of these.\"\n\n\"If there is, I don't want it to be artificial,\" I said as my phone started ringing. Amanda got off my lap and walked to the kitchen table to get my phone and handed it to me as she sat back down on me. \"Hello?\"\n\n\"Mr. Rodgers? This is the medical center continued care team. We have an order from a Doctor Shakari for some physical therapy.\"\n\n\"Oh yeah. Sure.\"\n\n \"We'd like to do three a week with you for the next few weeks. How long will depend on how well you progress. Can you come in at nine tomorrow?\"\n\n\"Yeah. Sure,\" I agreed.\n\n \"Very well. We'll see you at nine.\"\n\n\"Physical therapy here in town tomorrow at nine,\" I said.\n\n\"Oh good. That'll give us time to fuck in the morning,\" she said with a grin.\n\n\"Is that all you wanna do?\"\n\n\"For your information, YOU haven't fucked me one time yet this afternoon. You fucked Naomi, but not me. I'm starting to feel left out.\"\n\n\"I bet I can fix that,\" I answered with a smile, tossing my phone aside and sliding my hand up her thighs. She moved her legs apart enough for me to slip my hand between them and tease her pussy lips.\n\n\"You sure? I mean the spark might be artificial,\" she said with seriousness.\n\n\"Amanda, one thing I know. There isn't anything artificial about what you and I are feeling for each other. True, we might not have ever gotten together without it, but what I'm feeling isn't fake,\" I said softly.\n\n\"You know just exactly what to say to a girl to get her to let you fuck her, don't you?\"\n\nI chuckled as she spread her legs and reached down to find my hardening cock and pull it up against her pussy. She wiggled a little and pressed my head between her lips, nestling it into the entrance to her vagina. I felt her wiggle her butt on my lap as my cock continued to harden forcing its way up into her. \"Tell me,\" she whispered, \"Did it turn you on when she undressed in the elevator?\"\n\n\"Yeah,\" I answered.\n\n\"Would you get excited if I got undressed in the elevator?\"\n\n\"I'm pretty sure I would,\" I answered. \"Why?\"\n\n\"Oh. No reason,\" she said with a sly grin.\n\nWe spent the rest of the afternoon and evening relaxing, cuddled together except for when she was up to cook dinner. I had to admit I was enjoying hanging out naked with her, though I didn't think Diane was all that thrilled when she showed up that evening to check on my progress. Reluctantly, I went to put clothes on when she came by, leaving me unable to hear just exactly what she and Amanda said to each other while I was out of the room.\n\nThe next morning dawned bright, clear and warm.\n\nWe had a casual shower together, breakfast and still had time to kill before my appointment.\n\n\"Well Mister Rodgers, welcome!\" a young lady greeted me as I walked into the PT department, with only a little help from Amanda. I was feeling stronger all the time, and I think Amanda could tell. \"My name is Desiree. I'll be your therapist,\" she said as she walked towards me with my file in one hand, holding her other out to shake mine which I ignored. \"Oh, I'm sorry. Habit,\" she said, drawing her hand back. \"I did note in your file that there was a note from someone named Bonnie, that care should be taken to avoid skin to skin contact. Something about unusual side effects? Oh well. We'll be careful. Now, you're going to need shorts,\" she said, walking to a shelf. She pulled off a pair of black nylon shorts and handed them to me. \"You can change in the bathroom if you want,\" she said cheerfully.\n\nI nodded and headed to the bathroom to change, pulling off my workout pants and stepping into the shorts, wishing that I hadn't forgone the briefs. I walked out and then followed her out to the main working area.\n\n\"So, we want to do range of motion work here, and I want you to walk at least twice a day.\"\n\n\"How far?\"\n\n\"As far as you can, but at least a mile to start with,\" she answered. \"You can walk a track if you want, but with the weather getting nicer, I recommend being outside.\" She said as she put on a pair of latex gloves.\n\n\"Alright. So what do we do here?\"\n\n\"Alright. On your back on the mat,\" she said curtly. She knelt down at my feet and pushed my legs apart, so she was kneeling on the mat between my legs. She lifted my right leg and pushed my leg up and back, stretching me until I grunted in discomfort. \"It's gonna have to hurt if you plan on getting all your motion back,\" she said as she let my leg down. \"Other side now,\" she said lifting my left leg and pushing it up and back. I couldn't help but see where her eyes were looking, nor could I help but feel the cool breeze of the air conditioning blowing up the baggy leg of my shorts. The more she looked the more self-conscious I became, feeling my dick getting hard. We switched legs again, letting her stretch my right leg before going back to the left.\n\nI couldn't help but feel somewhat attracted to her. She had on gloves and was being careful not to touch me, but I could still feel a growing desire to see her pull her shirt up and flash me her tits. In fact, the longer we worked, the more I thought about how she looked, and what her tits had to look like. I began to wonder if she had on a sports bra or a regular bra.\n\n\"Sports,\" she said, almost as if she were reading my mind.\n\n\"Yeah?\"\n\n\"Uh huh,\" she answered as she switched legs again.\n\n\"I bet I can guess your underwear,\" I grunted as she pushed my right leg up past the pain point.\n\n\"You think?\" she asked, lowering my right leg and switching back to my left again.\n\n\"I do.\"\n\n\"I doubt it,\" she answered.\n\n\"I'll bet you that I can.\"\n\n\"Oh? Bet what?\"\n\n\"You have to show me if I guess right,\" I grunted as she pushed my left leg up with one hand, her other moving to my pelvis and pressing down on my body to hold my butt on the ground.\n\n\"Okay. If you guess right, I'll take 'em off and give 'em to you,\" she said as she lowered my leg and then remained kneeling between my legs. \"So what color?\"\n\n\"Pink,\" I answered. \"Pink thong.\"\n\nShe looked at me a little startled. \"Pink thong?\"\n\n\"Yep,\" I answered confidently.\n\nShe looked at me and then looked around to see if anyone else was around. She stood up, bent over and untied her shoes and stepped out of them. She looked around again and then in one quick move, pushed her spandex pants down, pulling the off her legs. She skimmed the tiny pink thong panties down and stepped out of them, standing for a moment with her bare teenage looking pussy completely exposed.\n\n\"Wanna show me your tits while you're at it?\"\n\n\"Should I?\"\n\n\"I think so.\" I nodded.\n\nShe looked around again and then pulled her shirt up to her chin and then the heavy sports bra that was encasing her easily C cup boobs.\n\n\"Very nice,\" I said honestly.\n\nShe shifted herself to sit on the floor between my legs, her legs sticking towards me, one foot on either side of me. She leaned back, mostly naked, holding herself up with one hand. She reached out with her free hand and pushed up the leg of my shorts coaxing my hard-on, already pointed down my shorts leg, out until it pointed straight at her pussy. She grinned at me and then lifted her butt off the floor, using her feet and one hand as support. She moved herself towards me, guiding me to her wet lips. Her pussy was full and round, only the tips of her inner lips trying to peek at me from between them. She rubbed my head around her lips, dipping just the tip of my head lightly between them. She smeared the precum leaking from my tip around her lips and then pulled herself even closer, letting my head spread her full round lips. \"Ohhhhhh fuuuuuuuck,\" she moaned as she pulled herself closer yet, forcing my engorged head to spread her lips and slide slowly into her. \"Ohhhh my God yesssss! Fuck Jeremy, that's what I wanted!\" she hissed.\n\n\"Oh fuck Sis,\" I groaned as she pushed herself further on my cock. \"I can't believe you're doing this.\"\n\n\"Why not? Your sister's pussy not good enough for your cock?\" she asked as she wiggled her hips to settle herself. She pulled back a few inches and then pushed towards me again, sliding part way off my shaft before driving hard onto it again.\n\n\"It's not that Sis... Oh shit that feels good!\" I groaned as she started to lift and lower her hips, pumping my cock in and out of her, my hard shaft grinding against her clit with each stroke.\n\n\"Better than that slut you call a wife?\" she almost snarled as she pumped her hips up and down, driving me into her hard with each stroke.\n\n\"She's not a slut,\" I protested weakly, the sensations of my sister's pussy pushing intelligent argument out of existence.\n\n\"Really? Fucking your best friend isn't being a slut?\" she asked as she pounded on me harder. \"You forgave her and what did she do? Go fuck him again?\"\n\n\"Ohhhh damn,\" I groaned.\n\n\"Feel good Jer? You like your sister's pussy? Does it feel like your slutty wife's pussy?\"\n\n\"Oh God Sis. You feel so fucking good doing that,\" I groaned as my impending orgasm started to race towards completion.\n\n\"That's it. Fuck me. Fuck your sister's hot pussy. Forget about that slut wife. She doesn't deserve your respect or your cock. You need a piece of ass, you know where to come. I can give you better sex than that slut any day, and if you want more, I can always get friends to come fuck too,\" she moaned loudly as her legs started to tremble. \"Come on Jer. Give it to me. Give me your cum!\"\n\n\"Ohhhhhh shiiiiiiiit!\" I groaned loudly as I climaxed in her tight pussy, her own orgasm spasming around me as I pumped shot after shot into her. ",
        "I lay there panting, looking down at the half naked young lady, who was equally breathless, bare below the shirt and the bra pulled up above her nicely sized tits. \"Oh my God,\" she whispered, looking down at herself, my softening cock still impaling her. \"What the fuck did I do?\" she asked herself before looking at me, confusion written on her face. \"God. I'm so sorry. I have no idea what came over me,\" she said quickly, pulling herself off of me and then standing up. She started to step into her panties and pants, pausing a moment and staring at my cum dripping from her pussy to the rubberized floor mat. \"Oh God what did I do?\" she said again as she continued to step into her panties and pull them up to cover her sexy little pussy. \"I'm so sorry. I have no idea what came over me.\"\n\n\"Yeah. Don't worry about it,\" I said quietly. \"I'm not going to complain to anyone if that's what you're worried about.\"\n\nShe looked at me, suddenly realizing that THAT is just exactly what I could do. \"Oh. No please. Don't. I mean I didn't mean for it to happen. I promise it won't happen again.\"\n\nI chuckled. \"You act like it was something unpleasant. To be honest, it was some very nice physical therapy. You have a wonderfully sexy body and I didn't at all mind your unusual therapy method.\"\n\nShe looked at me and slowly broke into a small smile. \"Well, as long as you promise not to tell anyone...like EVER, maybe next time I'll let you see my titties again.\"\n\n\"Just your titties?\"\n\nShe looked around and then bent over to help me up, pulling me by both hands. As I stood all the way up, she didn't step back, but allowed me to bump the full of my body against her petite figure. We stood for several seconds, our bodies nearly touching. \"Maybe even a little more. You need any help changing out of your shorts? Somehow our session time is all gone already.\"\n\n\"I think I can manage,\" I whispered back before giving her a small kiss on the forehead. I walked a little unsteadily towards the bathroom and stepped into it with my pants to change. I was half changed, meaning I'd gotten my shorts off and was standing in just my socks and t-shirt when the door opened and Desiree stepped in, closing the door behind her.\n\n\"I'm sorry. I just needed to make sure you were alright. That you...um...didn't need any help or anything,\" she said awkwardly.\n\nI wasn't surprised. I'd seen it many times before. The aftereffect, I called it. Her body and her mind wanted more. Wanted another orgasm, was almost desperate for another climax. \"Take off your clothes,\" I said to her, standing with my underwear in my hand.\n\nShe grinned and quickly stripped her clothes off, stepping to me and pressing her body to mine. She worked my shirt tail up and pushed my t-shirt up and off, leaving me as naked as she was. \"You don't mind if we fuck again, do you?\" she whispered as she pressed her tits against my chest and reached a hand down between us to find my soft cock. I closed my eyes, feeling the desire to have sex again building in me, wanting to have her as much as she wanted to have me. I felt it growing and pushed back against it. I was getting tired of being a passenger on this roller coaster. As pleasant of a thought it was to have her sitting on my lap, riding me again, I also didn't want it. I doubted she'd take no for an answer, so I sat down on the toilet and pulled her towards me, coaxing her to spread her legs and sit on my lap.\n\nShe pressed one of her tits to my face as I slipped a hand down between her legs, teasing my middle finger between her wet lips. \"Ohhhhhhh. Yes. Play with my little clit,\" she moaned softly as I stroked my finger along her wet pussy. She pressed her hard nipple to my lips as she wiggled on my lap gently. \"Come on lover. No more teasing. Give me your cock,\" she whispered. \"Suck on my titty and push that sexy cock into my hot wet waiting pussy. You want to, don't you? You want to fuck me more? God, I wanna feel you inside me again. I want to bounce on you until we both explode. I want to feel you pumping me full of your hot cum,\" she moaned loudly. \"Please?\"\n\nI pulled my finger from her pussy, my cock having hardened of its own accord. She grinned at me as she felt my head press to her lips and waited for me to rub it between her lips before pulling her pelvis towards me. \"Ohhhhh yes. That's it,\" she moaned as she forced me into her tight slit. \"You're so fucking big. God, I wanna fuck you so bad,\" she groaned as she started to lever herself up on my lap with her thighs. Up and down she bounced, her soft little boobs bouncing in front of my face. \"Oh God yes. That's what we need. Just like this. Ohhhhhh, it feels so fucking good. I can feel you getting fatter and fatter inside me, getting closer and closer to coming. I want you to, I want you to come for me and fill me up with your cum,\" she groaned as she continued to bounce on me, her pace quickening as her own orgasm raced towards its peak. \"Oh God yes. Almost there. So close. OHHHHHH. OH SHIT! FUUUUUUUCK!\" she practically screamed as her pussy clenched around me and squeezed my dick.\n\nI couldn't help myself. No matter how hard I tried to not fall into the trap again, I did. I leaned back and let my body climax, pumping my cum deep into her again. We sat there panting, my cock still twitching inside her and her pussy still occasionally squeezing and spasming around my softening shaft.\n\n\"Oh God can you fuck,\" she breathed. \"Make sure you forget to wear shorts next time too,\" she said with a grin. \"These nylon shorts are so easy to get you out of.\"\n\n\"I'll think about it. Right now, we better get dressed.\"\n\n\"Yeah. Good idea,\" she said, standing up and pulling off my dick. She ripped off some toilet paper and wiped the cum leaking from her and then stepped back to pick up her clothes. She was dressed before I was, but then I wasn't quite as steady on my feet as she was. She knelt in front of me to help me pull my pants on, pulling the front of my briefs down to give my cock a quick suck and kiss before covering it up again.\n\n\"Good therapy session?\" Amanda asked as I walked into the waiting room.\n\n\"You could say that.\"\n\n\"I know. I could hear,\" she said with a little shake of her head. \"Couldn't resist, could you? I mean she was awfully sexy looking.\"\n\n\"Actually, I was trying to avoid it. Seems like a hopeless attempt though. No matter how much I try, I get swept away.\"\n\n\"What was it this time?\" she asked as I hobbled with the cane and she held one arm.\n\n\"Something about her fucking her brother because his wife was cheating on him. Kind of strange.\"\n\n\"You think it was a memory or a fantasy?\"\n\nI looked over my shoulder to see if I could still see her, which of course I couldn't. \"I think it was a memory. It was pretty damn detailed. Sometimes a fantasy isn't quite as concrete. It might be broken, or I might jump what character I'm inside. No. This was pretty solid. I'd bet it's a memory. My question, is why that memory?\"\n\n\"Hard to tell. Why were you dreaming about the Christmas party? That was months ago.\"\n\nI chuckled. \"For you. You forget that I'm missing almost three months. The Christmas party was only a few weeks ago to me.\"\n\n\"True enough. So where do you want to walk?\"\n\n\"Right now, I could stand a nap,\" I said with a frown. \"That's another thing that's changing. I'm getting more and more energy sapped by these things. If this keeps up, I'll die from exhaustion.\"\n\n\"Yeah, but what a way to go, huh?\" she said with a giggle as we approached the car.\n\nWe did go home and take a nap, together, and then ate some lunch. I was procrastinating and she could tell. She finally coaxed me to agree to a walk by promising to forgo her bra so 'I'd have something to take my mind off the walk'. It seemed to me to be a reasonable bribe. She drove us to a nice park walking path. We parked and using my cane on one side and her arm on the other, we started off down the twisting paved walking path. The scenery was pretty, with lots of trees to shelter us from the sun and a little creek that crossed under the walk several times as both it and the path meandered through the woods. There were also a number of park benches along the way, each one set back from the path slightly, with bushes and trees neatly trimmed around them. I had no idea how far we'd gone before I had to sit down on one of the benches. There were very few people on the path in the middle of the day on a weekday, so we pretty much had the place to ourselves. I took off my already sweaty t-shirt and hunched over a bit, resting my arms on my legs as they trembled a little from the strain.\n\n\"You going to be alright?\" Amanda asked with concern.\n\n\"Yeah. I just need to rest a minute,\" I answered her.\n\n\"I need to pee. I'm going to go in the bushes. Okay?\"\n\n\"Yeah. Sure. I'm going to just sit here and catch my breath,\" I answered her as she stepped away. I heard her move off into the bushes a ways, making sure she was well out of view of anyone that might happen down the path at just the wrong time. I closed my eyes and sat there, feeling the sweat trickle down my neck and back as I rested.\n\n\"Are you okay sir?\" I heard a soft young feminine voice ask.\n\n\"Huh?\" I asked, looking up a little confused for a moment as my eyes adjusted to the afternoon light again, seeing two young ladies standing in front of me, each wearing exercise shorts and tank tops.\n\n\"Are you okay?\" the maybe twenty year old girl asked me, reaching out to touch my shoulder.\n\n\"Wait. Don't.....\" I never made it. I felt her hand touch my shoulder gently and then the images and thoughts flooded through me. In moments I was sitting on a park bench, not all that dissimilar from the one I was on, only it was nearly dark, the bench sitting in a pool of light from a small post lamp next to the bench.\n\n\"Okay. Off with them. All of them.\" I heard a girl say from behind me. I turned around but didn't see anyone within the pool of light, but there could have been someone in the darkness beyond. I turned back to look at the two girls in front of me, still looking past me nervously. Almost reluctantly they began to peel their clothes off, pulling their tank tops up and off, exposing their perky young breasts. The little brown hair girl had larger boobs than her blonde friend, almost a nice handful, while the blonde girl's were small and slightly cone shaped. I didn't have long to admire them though before they peeled their shorts down, quickly followed by their very tiny underwear. They stood there, completely naked except for their shoes, their hands clasped in front of their shaved mounds and hairless pussies. \"Okay girls. Your choice. You have to go jog all the way around the park, dressed just like this, or you can fuck the dick in front of you.\"\n\nThe two girls looked at the invisible person behind me, and then at each other, wordlessly communicating their discomfort at both choices. The blonde finally frowned and nodded. \"Fine, we'll fuck him.\"\n\n\"Alright. Both pussies, both mouths and if you don't end up with cum on your faces you lose the dare,\" the voice behind me said.\n\nThe two girls looked at each other, the brunette taking a deep breath and stepping towards me. She knelt down in front of me and looked up at my face. \"This looks like your lucky day mister.\"\n\n\"It is?\"\n\n\"Uh huh. How often do you get to fuck two eighteen year old girls? Come on. Help us with your shorts,\" she said, reaching for the waistband of my athletic shorts and pulling on them.\n\nI shouldn't have, but I used my hands to rock myself back and forth, each rock letting the brunette work my shorts farther down, until she was able to pull them down my legs. She worked them over my feet and then tossed them aside. She gently pushed me back and then leaned her face down towards my dick. \"Oh damn,\" I groaned softly as she engulfed my dick with her hot wet mouth. It didn't take long before her friend was on her knees next to her, the two of them taking turns sucking and licking my growing member.\n\n\"Okay. We're going to fuck your cock now. Only thing is, you HAVE to tell us before you come. We have to have your cum on our faces or we lose the dare,\" the blonde said as she stood up.\n\nThe brunette looked up at me and grinned. \"Which of us do you want first?\"\n\n\"Why don't you pick. Tightest pussy first?\" I asked.\n\nThe brunette grinned at me. \"That's gonna be tough to tell,\" she said as she stood up. She turned around to face away from me, bending over and backing towards me. She reached her hand between her legs and aimed my cock at her pussy.\n\n\"Why's that?\" I asked as she rubbed my head around her sexy little cunt and then pushed back slightly to force my head to start to spread her lips.\n\n\"Cuz we haven't ever fucked a real cock before, so you'll have to tell us who's tighter,\" she groaned as she pushed herself slowly down my shaft.\n\n\"Oh my God,\" I groaned as her pussy slowly engulfed me. As hard as I tried, I couldn't hold still, my hips were trying to push up towards the incredible pussy that was sliding down my shaft.\n\n\"Oh shit. You can say that again,\" she moaned softly as her ass pressed to my thighs. She used my knees for support and started to bounce her ass up and down, sliding on and off my fat shaft, her moans and gasps seeming to grow louder with each stroke. \"Oh my God. It's so much different,\" she moaned.\n\n\"Than what?\" I gasped, feeling her unbelievably tight pussy pushing me quickly towards climax.\n\n\"Toys,\" she answered. \"Just toys. Ohhhhh shit. I can't believe you're going to make me come already. Ohhhhh fuck,\" she moaned as her body started to tremble. She sat hard on my lap, her pussy clenching and squeezing me as she sat trembling, her juices leaking around my cock. \"Okay Brandi. Your turn,\" she panted as she pulled up off my cock with a loud slurp.\n\n\"After watching that, I can't wait,\" the blonde said with a grin, stepping towards me. She stepped onto the bench, standing over me, and then squatted down, lowering her pussy to my lap while reaching for the back of the bench. She grinned at me and then looked down at her own pussy. \"You wanna guide it?\" she whispered.\n\nI nodded and reached for my dick. I held it up towards her pussy and let her slowly lower herself down. She rocked her hips a little to rub her pussy lips across the tip of my dick head and then pressed herself down.\n\n\"Ohhhhhh. It's a little painful,\" she grimaced for a moment. \"Ohhhh. It's getting better... much better,\" she said as she slowly sank down on me. \"Ohhhhh that feels good. Soooo good.\" I watched her sexy little body move up and down, her ass slapping wetly against my thighs while she spread her legs to let me see my cock appearing and disappearing into her sweet little pussy. She wasn't nearly as tight as her friend, but she was still a hell of a lot tighter than most of the pussies I'd been in, in the last week. Up and down she moved, sliding her pussy up until my head was almost ready to slip out of her before sliding back down again.\n\nI reached out and let her motions rub against my finger, feeling the side of my finger stroke across her hard little clit. The first time she dropped and stroked her clit on my finger she gasped and shuddered. \"Oh my God. What did you just do?\"\n\n\"Just made it a little nicer for you.\"\n\n\"The hell you did,\" she moaned. \"You made it a HELL of a LOT better! Just keep doing that. Just keep doing that,\" she moaned again as she bounced on me.\n\nI knew I was going to come soon, and I wanted to warn her, but I also wanted her to climax, and I knew she was damn close. Up and down she rode, while I concentrated on keeping my finger on her clit, intentionally trying to NOT think about how close I was getting.\n\n\"SHIT! I'm gonna come!\" she cried just before her body shuddered and jerked. She slammed herself down on me and I felt a small gush of her juices squirt out around my dick, wetting my pelvis and running down between my legs to drip through the gaps in the bench seat to the ground. Her pussy spasmed around me with each jerk her body made, several more small squirts of her cum forcing out around my dick.\n\n\"I am too,\" I grunted, trying to hold back what was getting much more urgent. \"I'm going to come any second.\"\n\n\"Oh. Yeah. Okay,\" she said, shakily pulling off my twitching dick. Her friend barely waited for her to get off of my lap and she was trying to push my knees apart.\n\n\"You gotta come on us,\" she said urgently, reaching for my dick. \"If you don't, we're gonna lose.\"\n\n\"Well, you better hurry then,\" I answered her as she started to stroke my dick. \"Ohhhhh shit. Here it comes,\" I groaned as the first surge of cum shot up into the air, generally aimed at her face. I saw the rope of sticky white cum lance up into the air and then fall onto her face and chest. Her friend barely made it onto her knees when the second shot of cum spurted out at her, landing on her face and right tit. My body jerked and twitched as I orgasmed, though little more cum was forthcoming.\n\n\"God what a pair of sluts!\" an older woman's voice said as the two knelt between my knees, taking turns sucking and licking my still oozing cock.\n\n\"Yeah, but we won!\" the brunette said, looking up at the woman standing behind her. \"You want some of this?\" she said, reaching for the woman's hand and trying to pull her towards my dick.\n\n\"Oh my God no!\" the woman, in maybe her late thirties, said, looking at my dick with a shocked look on her face.\n\n\"Well, we won! That means you gotta pay up!\" the blonde girl said, looking up at the woman, clearly still stuck in whatever memory it was. I wondered briefly if it wasn't a memory of some kind of college hazing, or if it was some other kind of challenge game they had played some time in the past. As good looking as they were, they definitely weren't still eighteen year olds which was what one of them had alluded to.\n\n\"Pay up?\" the woman asked, looking down at the two naked girls and then up at me. \"Pay up how?\"\n\n\"You shouldn't bet on things that you aren't willing to lose,\" the blonde girl said. \"You bet we wouldn't pop our cherries on a stranger, but we did. So now you gotta do your payment.\"\n\n\"Yep. Off with them. You gotta strip completely naked and fuck yourself in front of him. And if he wants to touch you, you have to let him. That was the bet.\"\n\n\"Yep. Doesn't matter if he wants to finger your pussy or suck a tit or even bend you over and fuck your pussy or ass, you gotta play with yourself and do whatever he wants,\" the blonde girl said with a huge grin. \"And just so you know, I'm really gonna enjoy watching this. For once you bet on the wrong horse, or in this case, girls.\"\n\n\"This is going to be interesting,\" Amanda said from behind me, leaning down to practically whisper in my ear. \"I was gonna flash you some tit, but you're already getting a threefur. I'm gonna have to put my little exhibition off for another trip.\"\n\n\"I don't get it,\" I whispered. \"I didn't touch her. Hell, I'm seeing this for real, not that...memory that hit me. Shit, did she just say that they were virgins when they fucked that original guy?\"\n\n\"Sounded like it to me,\" Amanda answered softly while we stared at the newly arrived woman, who was starting to take her clothes off in front of us. She stood in the middle of the sidewalk and pulled off her shoes before pulling her spandex running pants down and off. She straightened up and pulled the tank top up, leaving her in a sports bra that was clearly struggling to contain a significant chest, and a pair of very tiny bikini panties. The bra went next, unleashing what had to be at least a pair of thirty-eight double D's. They were, compared to the girl's tits, huge. I was so busy looking at her tits that I barely noticed her pulling her panties down, exposing the dark brown curls on her mound and the rather significant amount of inner labia protruding from between her large fat lips. I sat and stared as the woman, wearing nothing but a pair of tiny little socks, stepped to me. She put one foot on the bench to spread her legs and then slid one hand down between her legs.",
        "Her fingers stroked her pussy a few times and then pushed into her depths, her fingers disappearing between her wet lips. \"Ohhhhh fuck,\" she moaned softly. \"Mmmmmmm. You want me to come for you? You wanna see me play with myself until I come for you?\"\n\nI sat silently, Amanda kissing my neck as I watched the woman in front of me. I noticed some movement behind her and saw the two girls picking up their clothes off the pavement, along with the other woman's clothes. With a grin, they blew me a kiss and then ran off down the paved path, still butt naked, but taking their clothes as well as those of the woman fingering herself.\n\n\"Oh boy,\" I said to myself, wondering how THIS was going to turn out, not ignoring the fact that I was as naked as she was. I looked around for my shorts and shirt and saw them on the ground a few feet away from the bench. At least I was going to have something to put on. I wanted to snap the woman out of her spell, awake her so to speak. I reached out and touched her leg in hopes of maybe waking her from this gently. Not that it would be anything gentle when she realized what she was doing in front of a naked stranger. I had a bad feeling about this whole thing.\n\n\"Oh yes. Come on. Play with me,\" she moaned, reaching for my hand, and pulling it to her pussy. She pressed my fingers to her wet lips and held them there as she started to rock her hips, grinding her clit into my fingers. \"Yeah Baby. Make me come. Make me fucking come all over you!\"\n\nI twisted my head to look at Amanda who was still standing behind me, unsure of what to do as much as I was. We both knew it wasn't a good idea for her to touch; we'd made that mistake before. The only thing I could think of was to help her climax, and then, once she'd done that, she should come back to reality. I pushed my hand further between her legs, curling two fingers up into her pussy, feeling my fingers sink into her as she continued to buck her hips into my palm.\n\n\"Yeah. That's it! Make me come. Make me squirt all over you, you horny bastard. I bet you want to fuck me, don't you? You want me to sit on your cock and ride you until I come all over your cock, don't you? Ohhhhhh fuck!\" she groaned, pulling my hand from between her legs. She climbed the rest of the way onto the bench, straddling me. She gripped the back of the bench with one hand and leaned back, arching her back and pushing her pussy towards my face. \"Lick me! Lick my cunt you horny bastard!\" she moaned, grinding her pussy to my face. \"Oh yes!\" she gasped as I reached up and grabbed her ass, moving her pussy so I could at least breath, and licking between her wet lips at the same time. \"That's it. Oh Baby! Here it comes. Lick my clit. Make me come!\" she cried as she tried to grind herself against my face.\n\nSuddenly her whole body stiffened, and I felt her squirt a gush of juices out around where my face was pressed to her pussy lips. She shuddered and trembled, letting out a long, low growl like sound as her juices surged around my face a second time, dripping down my chin and her ass. She pulled her pussy slowly from my face, looking down at me with a grin. \"Somehow losing the bet just felt more like a win,\" she said without losing that grin.\n\nI looked up at her and waited. Slowly, her smile faded, and her look changed. I'd seen it already, so I knew what was coming for her. I coaxed her to sit down on my lap as her body relaxed, her knees pushed apart like a frog. The look of confusion slowly replaced the look of post orgasmic bliss. \"Who are you?\" she asked before looking down at herself, seeing herself sitting naked, her big tits exposed, and her pussy spread, and wet pussy lips split around my partly hard cock. \"Oh my God. I'm naked!\" she squeaked, pulling her arms back and crossing them over her chest to cover her tits. It took several more seconds before she tried to move off my lap, unable to do so without moving her arms. She reached for my shoulders, and started to stand on the bench, her big soft tits swinging free and slapping accidently into my face as she moved her feet off the bench. \"Oh Fuck. We're both NAKED!\" she exclaimed as she looked down at me, covering her tits with one arm and moving a hand to cover her pussy. \"What did you do to me?\"\n\n\"Honey. He didn't do anything to you. You took off your clothes and made love to his face,\" Amanda said from behind me.\n\n\"I did that! Why would I do that?\"\n\n\"Think about it a minute,\" Amanda coaxed.\n\nThe woman stood, her legs squeezed together, a hand over her pussy and an arm covering her nipples, her face a mask of confusion as the memories of what just happened flooded through her mind. \"The girls. They were... they were... I grabbed one to stop her.\" She looked up at me suddenly. \"I did. I took my clothes off. I wanted you to touch me. I wanted you to lick me. I even wanted you to fuck me. But we didn't, did we? We didn't have sex?\"\n\n\"No. Just what you remember doing,\" I said quietly as she started to look around.\n\n\"My clothes. Where are my clothes?\" she asked, looking around on the ground almost desperately.\n\n\"I think the girls took them,\" Amanda answered her. She stepped over to where my t-shirt lay on the ground and picked it up, handing it to her. \"Here. I'm sure Scott won't mind loaning you his shirt.\"\n\n\"Thanks,\" she answered, taking the shirt. She turned away from me, sorted out the shirt and then pulled it on. When she turned back her tits were covered, but it was nowhere near long enough to cover below her waist. She stood with both hands now pressed over her pussy and mound. \"I appreciate the loan, but the bigger problem is that my clothes had my phone and my car keys in the pocket. I don't know how I'm going to even get home!\"\n\n\"I'm sure we can help you out,\" Amanda said with a nod. \"Can't we Scott?\"\n\n\"Sure. I don't see why not,\" I answered with a shrug.\n\n\"You, um, wouldn't mind covering that up, would you?\" she asked, waving a hand at my again hard dick sticking up out of my lap.\n\n\"Oh. Sorry,\" I mumbled as Amanda stepped to where my shorts lay on the ground. She picked them up and stepped to me and lay them on my lap.\n\nShe raised her eyebrows. \"That the usual effect?\" she asked.\n\nI gave her a pained look. \"Afraid so.\"\n\nShe rolled her eyes and then looked over at the woman, still standing with her legs together, but one hand no longer was interested in covering her pussy, but rather stroking her pussy. \"I think if we're going to go, we better,\" she said quickly.\n\n\"Yeah,\" I agreed, quickly working my shoes through the leg holes of my shorts, and then standing up to pull them up. I picked up my cane and started walking down the sidewalk away from her. Amanda quickly caught up to me and slipped her arm in mine to give me something to support on if my leg gave out.\n\n\"God. I feel so fucking horny,\" the woman said as she walked along slightly behind us. \"I don't even know why I said that.\"\n\n\"I do,\" Amanda muttered. \"You know. I never thought I'd feel jealous of another woman getting fucked, but I am.\"\n\n\"You are?\" I asked quietly.\n\n\"I am. I want you to be fucking me, not her,\" she whispered. I looked at her in surprise while I waddled my way down the paved path. \"Don't look at me like this is a big surprise. We both know that we've been growing attached. It's more than just fun sex for me now. It's grown a lot more personal,\" she whispered. \"You can't tell me you haven't felt it too. I think we've both tried to tell each other that a couple times.\"\n\n\"Yeah. I have,\" I admitted. \"I've felt it and even thought a few times about how Diane would feel about it.\"\n\nThe woman stepped up next to me, carrying the t-shirt now instead of wearing it. She slipped an arm around the one I was using with my cane, pressing her soft and again bare tits against my upper arm. She looked past me to Amanda. \"You know. I wouldn't mind sharing, but I really, really need his cock in me,\" she said quietly. \"Just a quick fuck. I promise.\"\n\n\"You knew that was coming,\" I said to Amanda quietly.\n\nShe chuckled softly. \"I've been there myself, so yeah. But I was hoping. That's allowed, isn't it?\" she answered as the woman twisted herself enough to push the front of my shorts down, hooking the elastic waistband under my balls, leaving my dick sticking straight out.\n\n\"Mmmmmm. That looks sooooo fucking ready to be fucked,\" the woman said as she reached down and grabbed my cock as it waggled side to side with each step I made.\n\n\"I think maybe we should stop and let you rest a minute, don't you?\" Amanda asked as we approached another bench.\n\n\"We don't have to,\" I answered. \"I can still go some more.\"\n\n\"Yeah, I know,\" she said in a whisper. \"But I'm getting pretty fucking horny too. I was thinking that maybe the two of us could...\"\n\n\"Amanda? Really?\"\n\nShe looked a little sheepish but then steered us off the path at the odd sounds we were hearing. The three of us moved towards the bench, and then past it, peeking back into the bushes towards the noise. In a small clearing in front of us were the two girls, completely naked, one on her back and the other on her hands and knees over her, each with their faces between the other's legs, licking and moaning in pleasure. \"Well now. Isn't that a sexy sight?\" Amanda whispered to me. \"I wouldn't at all mind having you bend me over and fuck me while we watch them.\"\n\n\"When you're done with her, you can just slide this right into me next,\" the woman said, standing next to me, her hand slowly stroking my dick.\n\n\"I'm not sure my legs are up to doing that with either of you,\" I answered, knowing that while it was true, that wasn't the only reason. Up to this point, I hadn't actually had sex with her, and I wasn't really sure that once she got over this...thing, that she'd be all that thrilled to find out she'd been fucked by someone other than her husband. Yes, she was married, or at least I assumed that much by the ring on her finger.\n\n\"Well. I know exactly what to do about that,\" she said quietly, pulling me away from Amanda, who was intently watching the girls, her own hand down the front of her shorts. She pulled on my arm, drawing me to the bench. She pushed my shorts down to my knees and pushed me back until I had to sit on the bench. Without missing a move, she climbed onto the bench, facing me, her hand moving down between us to grab my hard-on. \"I'm gonna fuck you silly,\" she almost growled as she tilted my cock towards her pussy. She scooted forward until her knees were actually sticking into the gap between the bench seat and the back, allowing her to slide herself closer to me, forcing my cock into her very wet pussy. \"That's it. You just sit there and catch your breath while I make you feel soooooooo good,\" she said with a grin, grinding herself onto me. She closed her eyes and started to bounce up and down on my lap, her strokes only a couple inches because her legs were wedged between the seat and the back of the bench. Not that it seemed to matter to her. She was quite happily bouncing on me, her huge tits flopping and flying wildly while she pounded up and down my shaft.\n\nI reached my hands up to corral her tits and grasped each one, squeezing them and guiding one to my face. I closed my lips around as much of her big round areola as I could and closed my teeth around her big hard nipple. \"Oh yes! That's it Baby. Nibble my nipple. I love it when you tease me that way.\"\n\nI closed my eyes and let the sensations of her pussy wash over me, her soft depths teasing my engorged mushroom head. Up and down she slid, her ass pounding onto my legs with a rhythmic wet slap, slap, slap. She wasn't nearly as tight as the two younger girls had been, but right now she felt just about perfect. \"Fuck. Gonna come,\" I groaned, letting her tit slip from my mouth.\n\n\"Yeah. Me too. Come with me. Let me feel you cum in me. God, it's been so long since I felt that. Since I felt a hard cock pumping cum deep in my pussy. Ohhhhhhh fuck yes. Oh God. I'm coming. Oh God!\" she squealed as her pussy tightened around me, providing just exactly what I needed. I grunted deeply as my body jerked, trying to jam into her pussy, my cock swelling and sending a surge of hot cum into her pussy. \"OH FUCK YES!\" she cried loudly as her whole body seemed to start to shudder and shake. I wrapped my arms around her, pulling her tits to my face, each one sliding to one side of my face until I was buried between them. I felt her body shudder and tremble, giving little jerks each time she felt my dick jerk inside her.\n\nPanting, she pushed away from me, looking down at me for long seconds before the blissful look started to fade. \"Oh my God,\" she whispered softly. \"I did this, didn't I?\"\n\n\"Yeah,\" I agreed breathlessly.\n\n\"What am I going to tell Henry?\" she asked, as if I knew what to say or even who the hell Henry was.\n\n\"Just that you had a nice walk in the park. And if that isn't good enough, bring him out here, fuck him on this bench and tell him how much you love having him fuck you outside. Trust me, he won't even know this ever happened.\"\n\n\"Fuck him out here? In the open like this? I can't do that!\"\n\n\"Why not? You just did. In fact, you're still sitting on me completely naked. Anyone could walk by and see you. Doesn't seem to be a problem now.\"\n\n\"Oh shit. I didn't even think of that,\" she squeaked quietly, looking up and down the walking path. She pulled off of me and then looked down at herself as she dripped cum onto my lap. \"Oh God. Did we really...I mean...is that...Did you cum inside me?\"\n\n\"Looks like it to me.\"\n\n\"Oh God. That's not good. Not good at all. Shit. Where are my clothes?\" she asked, getting flustered and looking confused.\n\n\"Maybe by the girls?\" I suggested helpfully, trying to get her to not think about the cum leaking from her pussy.\n\n\"The girls?\"\n\n\"In the bushes?\" I said, twisting around. \"They left with your clothes. I figure they might still have them.\"\n\n\"Good idea,\" she said, becoming more conscious of her nakedness with each passing moment, one arm now across her breasts. She walked to the bushes and looked over them. \"Oh my God,\" she said quietly.\n\nCuriously I got up, pulled my shorts up and walked to stand beside her, looking over the bushes. \"Oh my God,\" I said as well, seeing Amanda laying on her back, completely naked, one of the girls licking her pussy and the other sitting on her face.\n\nThe woman stepped through the bushes and around Amanda's head, spotting her clothes under the pile of clothes Amanda had discarded. She picked up her clothes and stepped back through the bushes and walked past me. I stared at Amanda and the girls for several more seconds before I walked back to the bench and plopped down.\n\nShe had her pants back on, but hadn't pulled her sports bra or top back on, instead coming over and sitting down on my lap, both legs hung over my right side. She wrapped an arm around my neck and pulled herself to me as she tossed her top onto the bench. She reached for my right hand and pulled it up to her right breast and held it there while she pulled my face to her big soft left tit. \"You know. I don't even know your name,\" she whispered, letting go of my hand and moving hers to stroke my short hair.\n\n\"Scott.\"\n\n\"Julia,\" she said softly. \"You know. I don't even understand what all happened here. One minute I was walking down the trail and saw you and those girls, and I wanted to just reach out and give them a piece of my mind, and next thing I know, I'm undressing myself in front of you. Not just undressing myself, but WATCHING me undress myself, completely powerless to stop myself. If I wasn't so sexually aroused by the whole thing, I probably would have been scared. Now, they're over in the bushes having sex with your friend. Just between us, I think I got the better end of the whole thing.\"\n\n\"You did?\"\n\n\"Oh yeah. I haven't been fucked like that in...well, years. My husband isn't all that excited about my body anymore,\" she said with a wry face and a shrug. \"I don't know. Maybe if I do bring him out here, it might spice things up a little.\"\n\n\"Why don't you get a room!\" one of two older women said to us as they walked past, neither of us having even realized they were coming.\n\nJulia squeaked in surprise and then looking at them walking away, half turned back to glare at us, almost shouted to them. \"You're just jealous you're not getting fucked!\" The women scowled and walked away faster, no longer looking back while Julia chuckled. \"Did I just say that?\" she asked with a giggle.\n\n\"You did,\" I answered.\n\n\"Well, maybe it was true. I suppose I need to go home before this day gets any stranger.\"\n\n\"Maybe,\" I nodded.\n\nShe pushed up off my lap and leaned down, giving me a soft kiss. \"Thank you.\"\n\n\"For what?\"\n\n\"A very eye opening experience,\" she answered quietly. She reached for her shirt and bra, picked them up and then walked off down the path, still naked from her waist up.\n\n\"She seemed like a nice lady. Who was she?\" the little brunette asked as she stepped through the bushes with her clothes in her hand.\n\n\"Huh?\" I asked in surprise.\n\n\"That woman. Who was she?\"\n\n\"Um. She was just walking down the trail when we were...um...you and your friend...you know.\"\n\n\"When we were sucking your cock? Yeah. About that. I want to apologize. Wendy and I...we were just walking along and all of a sudden...I don't know how to explain it. We were getting undressed in front of you just like we did in front of that older guy a few years ago. Hell, it even felt like it did back then.\"\n\n\"Wendy? That's your blonde friend?\"\n\n\"Yeah. She's still playing with your lady friend. God, she's good at licking pussy!\"\n\n\"I didn't even know she did that kind of thing,\" I said as the girl started to dress.\n\n\"You know. I'm getting real tempted to not get dressed yet and see if I can get you hard again.\"\n\n\"That's alright. I think I've had enough sex for one day.\"\n\n\"Too bad. You have a pretty fucking good cock,\" she said with a grin. \"I really am sorry though. I don't know what came over us.'\n\n\"It seemed like you were playing out some game or something.\"\n\n\"You could see that? Yeah. It's like we were doing that dare all over again.\"\n\n\"What dare?\"\n\n\"Wendy and I, we've been best friends like forever, and we joined the same sorority. Someone found out we were virgins and, well, you can imagine. We tried to argue that we weren't, but she wasn't buying it. So she said we could prove it. We were supposed to walk down the path and fuck the first single guy we came to. If we didn't or couldn't, we'd have to run all the way around the park naked. Well, we weren't about to do that. But we wanted to force her to back off, so we made the bet that if we did fuck this imaginary guy, she'd have to strip and masturbate in front of him until she came. We figured she'd back off. Instead she was so sure we wouldn't fuck that she agreed.\"\n\n\"And you were just eighteen?\"\n\n\"Both of us only a few months before. But that was like, five years ago. But this...it felt like it was just today.\"\n\n\"Yeah. I understand.\"\n\n\"Your friend back there? She's a real dynamo. Neither of us would exactly mind if the two of you wanted to get together with us again. If you know what I mean.\"\n\n\"Yeah. I think I do,\" I answered as Amanda and who I now knew as Wendy walked out of the bushes, straightening their clothing, both still flushed pink in their faces.\n\n\"You have fun?\" I asked Amanda, who blushed brightly.\n\n\"Wendy and Lani are, um, persuasive,\" Amanda answered with a sheepish shrug.\n\n\"I didn't know you were into that kind of thing,\" I said with raised eyebrows.\n\n\"I didn't either,\" she answered as she sat down on the bench next to me, still breathing hard. \"You ready to head the rest of the way home?\"\n\n\"Yeah. I think so,\" I agreed, getting up and letting her help me balance me as we walked away from the two girls.\n\n\"You know, I wouldn't mind getting their address,\" she said as we walked away.",
        "\"Fine. Go back and get it.\" Amanda grinned at me, kissed my cheek and ran back to stop the girls and exchange contact info. She caught back up to me quickly and thanked me. \"Now that you have it, what are you going to do with it?\"\n\n\"Just between you and me? I think the three of us could have some real fun in the sack,\" Amanda said. \"I never knew how much fun someone like that could be. Besides, you can't tell me you didn't enjoy fucking those two tight little cunts, can you?\"\n\n\"Uh no. I can't,\" I answered, suspecting that she was still somewhat under the influence and might not feel the same way later. It was almost half an hour before we were back to the car and had driven back to her apartment. As soon as we got inside, she got us both naked and we both enjoyed another nice, almost loving, climax before I fell asleep for an afternoon nap."
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "secretary",
        "outdoors",
        "public",
        "mff",
        "mfff"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/awakening-ch-11"
}