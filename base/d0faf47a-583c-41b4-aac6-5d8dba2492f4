{
    "title": "Telemarketing Turnabout Pt. 07",
    "pages": [
        "I felt that this story needed a little more, so Becca and her young man are back. \n\nI hope you agree, and enjoy! \n\nThis is the first chapter in this category, so if you want to catch up on the history, I suggest going all the way back, beginning in the Mature category, then into the Incest / Taboo section. \n\nI know I always ask for feedback, but in this case, I really need to know if you want more of this saga, so don't be shy. \n\n*********************\n\nOne wedding, coming up. \n\nThe Friday afternoon before Becca's birthday came and went uneventfully. No introductory naked collision with Lizzie, as in my dream, because weather issues kept both Lizzie and Clayton from making the trip. While it took the pressure off this weekend, it prolonged the agony. I guess we'd all meet sometime, hopefully before our wedding anniversary. \n\nBecca and I talked about the wedding, finally deciding that quick and simple was the way to go. Las Vegas, here we come. \n\n***\n\nBecca kissed me softly, and patted my chest. I was zonked, having just had my brains fucked out by her. \n\n\"I assume you're going to want to rest... would you mind terribly if I went down and spent some time in the sun by the pool? I'm still a little too wound up to sleep,\" she said quietly. \n\n\"Of course not, Sweetheart. I'll be okay in a few minutes. How will I find you?\" \n\n\"I think you'll figure it out. I won't be hiding,\" came her response from the bathroom. She breezed back into the room. \n\n\"Give me about an hour, then come rescue me,\" she laughed. \n\n\"Rescue you?\" I asked, a confused look on my face. \n\n\"Yes, darling. Come pick me up, I hope I don't sound egotistical, but I bet I'll get some attention down by the pool. I want you to come pick me up, like at a bar.\" \n\nShe had changed into her bathing suit in the bathroom, so I hadn't seen what she was wearing. Now a cover up hid her attire from view. To say I was curious would be an understatement. She picked up her sunhat, pursed her lips at me, and slipped out the door. \n\nI laid there for a few more minutes, but her slightly cryptic behaviour had me wondering, and that feeling was stronger than my fatigue. I got up, stood under the shower for a few minutes, then dressed and followed in her wake. \n\nIf only our room faced over the pool area, I would have been able to locate her easily, but since I had been denied aerial surveillance, I was forced to do ground recon. As soon as I stepped out onto the deck, I knew it would take a while. \n\nI'd been to Vegas before, but hadn't spent much, or any, time around the pool at any of the hotels I'd stayed at. Now we were staying at a big hotel, the pool area was gigantic, and it was full... of incredibly beautiful women, and guys trying to get next to one of them. At least I'd have fun while I searched. \n\nI started on the perimeter. There were several little bars located around the outer edge, and I used them as vantage points, scanning the immediate area around them. I was shading my eyes, looking for Becca, when I heard a sultry voice. \n\n\"Looking for anything in particular?\" It asked. I turned, coming face to face with a tall, stunning blonde, clad in a scanty yellow bikini. My eyes went on autopilot, visually caressing her lean, lithe body, before getting stuck on her big tits, a pair that put Becca's marvels to shame. By the time I dragged my gaze up to her eyes, hidden behind large sunglasses, she was smiling. \n\n\"Yes, sorry,\" I gulped, taking in her beauty. \"Actually, someone in particular.\" \n\n\"You're staying here, I take it?\" she asked, not wanting to take no for an answer. \n\n\"Yes, with my wife, or at least, she'll be my wife tomorrow,\" I replied, fighting to keep my eyeline at the neck level or higher. She wasn't making it easy, tugging at the halter strings of her top, and making her huge globes jiggle. She seemed to like the news that I wasn't yet 'officially' taken. \n\n\"Hmmm,\" she said, tipping her glasses down. She fixed me with her piercing blue eyes, and gave me a quick undress with them. \"Well, if you can't find her, or you change your mind, come find me. I'm Milan... room 17221.\" The glasses came back up, she smiled incandescently again, and turned away, walking with a memorable waggle. She caught me watching her, too. \n\nDamn, there were hundreds of gorgeous women out here. Tall ones, short ones... Bikinis, or sexy one-piecers...and, of course, all the colours of the rainbow, in skin tone and hair as well. I even saw a much-tattooed, rail thin, purple haired chick, with huge, obviously enhanced knockers, wearing a tiny bikini that matched her hair, but barely covered her pierced nipples. Actually, I have her to thank, in a fashion, for finally finding my darling Becca, as I was watching her jiggle past when I saw the group of people in the background, with a distinctive sunhat peeking through. \n\nI made my way to the nearest bar, which gave me a view of Becca. She was laying on a sun lounge, in front of a private cabana. She had been right; her attire, or virtual lack thereof, had attracted a lot of attention. There were a half dozen guys hanging around, ogling her and trying to chat her up. I could hardly blame them. \n\nBecca's bikini redefined 'brief'. A spider web of black strings with small swatches of fabric covering the vital areas, it concealed her nipples, just barely. The bottom half was equally tiny. Perhaps six square inches of fabric separated her from nudity. She was making me hard from this distance. The guys around her were all bulging, so she'd had an obvious effect on them as well. \n\nI sat there, nursing a drink, watching from my observation post for a while. Becca was well oiled. She had started to apply it herself, but there was no shortage of volunteers to help. She had turned onto her stomach, and four of her suitors were rubbing oil into her back and legs. At first, they avoided the firm, bare flesh of her ass, but gradually, they became bolder, taking liberties while I watched. Now their hands kneaded the oil-slicked globes of her rear, and occasionally dipped their fingers onto the velvety skin of her inner thighs. \n\nWell... I'd seen enough. These guys had pole vaulted across the line, from helping Becca to groping her, and groping her was my job. I finished my drink, stood, making myself as imposing as possible, and walked in her direction. When I stopped a few feet away, the two guys working her legs had one hand each between her legs, fingers very near to her barely covered pussy. \n\n\"Gentlemen,\" I began, staring them down. \"You seem to have your hands on my lady.\" I jerked my thumb to the side. \"Get lost.\" \n\nOne by one, they relented, although the last one lingered long enough to whisper something in her ear. She shook her head, sitting up and extending her hand to me. I helped her to her feet, and back into the high-heeled sandals she'd been wearing. She plucked up her hat and wrap, took my arm, and we walked back into the hotel. Well, I walked...she sauntered... paraded... jiggled... wiggled... bounced. I assume you get the idea.\n\nWe were in the elevator, and Becca was adjusting her cover-up, as the door began to close. Suddenly, a small, elegant hand reached in, causing the door to reverse, and a gorgeous blonde stepped in. She tipped her sunglasses down. It was the goddess from the pool deck, Milan. \n\n\"I see you found her,\" she said quietly, turning to Becca. \"I hear congratulations are in order.\" She saw the look of confusion on Becca's face. \"Your young man and I met while he was looking for you by the pool. He mentioned your upcoming nuptials.\" She paused, leaning into a very European hug with Becca. \"Congratulations, again.\" \n\nThe elevator stopped on her floor, the seventeenth, and Milan took a step out, stopping at the threshold. She gestured to me. \"May I?\" she asked Becca, who paused, then nodded. \"Congratulations,\" she whispered leaning in, pressing her huge breasts against me, and kissing me on the cheek. \"She's lovely.\" One final question for us. \"I wonder... would you please allow me to take you both to dinner tonight? To celebrate? I know it's terribly short notice, and I am virtually a stranger, but... well, it's a tradition in my culture to celebrate such occasions when they arrive. I assure you, money is not a factor. Let it be my wedding gift to you.\"\n\nI had rarely seen Becca at a loss for words, but she was now. \n\n\"Please... Give it some thought, and let me know your decision. I'm sure your fianc\u00e9 remembers my room number. Call me later,\" Milan added, letting the door close. \n\nWe rode in silence the remaining eleven floors to ours. Likewise, not a word from Becca as we walked down the hall to our door. I was beginning to think she was mad at me. I opened the door and followed her in. \n\nShe spun quickly and pinned me to the door as it closed, crushing her beautiful tits against my chest and her lips against mine. Nope, not mad, just incredibly horny. I guess getting felt up by a bunch of strangers in public had turned her crank. A lot. \n\nAbout twenty minutes later, I rolled off her panting, gasping, glowing body, having just made another deposit deep inside her dripping pussy. She had cum at least three times, testing the soundproofing of our suite each time, and despite the more than adequate air conditioning, we were both soaked in sweat. \n\n\"Thank... You,\" she breathed, her first conversational words since we got in the elevator. \"Now, how did you meet the blonde bombshell?\" \n\n\"Oh,\" I laughed, \"I was wandering around, looking for you on the pool deck, and she tried to pick me up. I told her I was taken, but she seems pretty hard to dissuade.\" \n\n\"I see,\" she whispered. \"So, call her back. Tell her we'd love to have dinner with her.\" She saw the surprise on my face. \"That is... if you want to?\" \n\nHmmmm, let's see. Having dinner with gorgeous, busty redhead... Good! Putting buxom blonde on the other arm... Better! I picked up the phone, punched in Milan's room number, and ten minutes later, we had a date. \n\nI won't profess to know where we were going, and Becca didn't know much more, but Milan was an admitted Vegas veteran, so we left ourselves in her very capable hands. Her only instruction had been to dress for dinner and dancing, which left a lot of latitude for Becca. \n\nI let Becca pick my wardrobe for the night. Safer that way. No matter what I wore, I was going to be the afterthought among the group when we went out, of that I was sure. Becca was trying on every one of the six dresses she had brought with her, and had narrowed the choice to either a racy little red number that showed her legs to maximum effect but hid her other assets, or the perfect little black dress that made her tits look spectacular, and hugged her scrumptious ass as well. I voted for the black one, but I was biased, always looking for a way to get her big jugs on display. \n\nMilan called, and we arranged a time to meet downstairs. We were a minute or two late getting there, and as we walked out, a man opened the door to a stretch limo waiting in front. He gestured for us to approach, and as we did, an impossibly long pair of sexy legs appeared within. \n\n\"Ms. DiNofrio is waiting for you,\" the driver said. \n\nI held Becca's hand as she slid into the backseat of the car, joining her when I was able. My senses would take a while to catch up with us. \n\nMilan was sitting quietly, looking incredible. Her fabulous curves were clad in snug black silk with golden trim, matching the radiant colour of her hair. I was stunned. Becca had finally come to the conclusion that you could never go wrong with the classic little black dress, so her tits were quite well displayed for my viewing pleasure, but Milan had succeeded in one-upping her. Actually, make that two-upped, as her mind boggling boobs were equally shown, their magnificent fullness rising and falling with her breathing. \n\nA few minutes of predictable chit-chat followed, and I found myself in the middle of them on the backseat as they talked around me. \n\n\"Do you care to know where we're going, or are you up for a surprise?\" Milan asked, smiling brightly. I deferred to Becca, who didn't care either way, so we listened while Milan said a few words in Italian to the driver. Off we went. \n\nOur first stop was dinner, and we caught quite a few incredulous looks as we walked from the limo into the casino. I would have thought that a guy with a well built woman on his arm was hardly worth noticing in Vegas, given all the showgirls around. Perhaps it was the blonde bookend on the other arm that had attracted the extra attention. On their high-heels, both women were nearly six feet tall, so maybe that was it. I know if I hadn't been the one in the middle of them, I'd have been watching both pairs of big, jiggling tits bouncing along as we walked. When we arrived at the restaurant, Milan peeled off, talking to the ma\u00eetre de for a few seconds, and then gesturing for us to follow. \n\nWe walked to the back of the dining area, through a door, and into a private dining room. It was quieter back here, and we had a private server who helped us get seated at the large round table. She, the server, was one of the aforementioned showgirl types; blonde, scantily dressed in a tophat and tails, and very well stacked, with endlessly long legs. I glanced at Becca, who was busy checking her out as well, and she smiled back at me. \n\n\"Good evening, everyone... I'm Vanessa, and I will be taking care of your needs tonight,\" she said. We all introduced ourselves as Vanessa passed our menus around, and took our drink orders. \"If there is anything that you'd like, please let me know,\" she smiled, her eyes lingering on mine for a few seconds, \"whether it's on the menu or not, I'll do my best to get it for you.\" I watched her bare ass wiggle away, peeking out from under her tails as she left to get our drinks. When I turned back, Becca was giggling at me. \n\n\"Are you going to be okay, baby? If you're not careful, someone might step on your tongue!\" she whispered, leaning over to kiss me, and giving my crotch a quick grope as she did. \n\nI couldn't help noticing that Becca was resting her chest on the edge of the table again, as she always did, and as she had on our first night at the pub. She knew she was doing it, and she knew I loved it, because it really made her boobs look yummy. Apparently, Milan also took that seminar, because she was doing it, too. I had a veritable boob buffet right here at the table. \n\nVanessa was back, adding her own remarkable rack to the display. When she delivered our drinks, she bent from the waist, straight legged, and hung her big, round breasts out for inspection each time. Her 'tuxedo' top was more of a halter, scooped deep, and barely covered her nipples. She definitely was making me thirsty. I was happy to see that both Becca and Milan seemed to be enjoying the show as much as I was. When she left us after delivering our third round, Milan was the one who spoke up. \n\n\"My goodness, she has beautiful breasts, doesn't she? She's very pretty, overall, but those breasts... Do you think they're real?\" she asked no one in particular. \n\n\"Hmmmm,\" Becca laughed, blushing a little at the topic of discussing another woman's tits, \"hard to say. If they are, she's very lucky, given how lean she is.\" The booze was having an effect.\" Speaking of beautiful breasts, yours are magnificent, Milan. What do you think, honey?\" she asked, turning to me. \n\nOh shit! How do I answer that one, without shooting myself? \n\n\"Um, whose boobs are we talking about, my dear? Yours are my favourite! \" I offered, hoping that would end the conversation. It didn't. If anything, it only added to the fire I was in. \n\n\"Why, thank you, darling,\" she smiled, \"but that's not what I asked. I asked,\" she repeated, \"what you thought of Milan's breasts... They're lovely, aren't they?\" \n\nI looked over at Milan, who was smiling at me, enjoying my discomfort. She squeezed her arms together slightly, making her boobs swell upward more enticingly. I decided that honesty was the best strategy to take. \n\n\"I think, my Sweet, that if I wasn't already committed to you, and in love with you, that I would have accepted her offer to join her in her room. I think we'd be naked and sweaty right now and I would be greatly enjoying access to those beautiful breasts.\" Milan blushed, and I turned to Becca. \n\nShe smiled, and nodded. \"And what of our sexy server's boobs? Do you think they're real, or has she had them done?\" \n\nVanessa had just returned with some appetizers, and bent to place them on the table (the appetizers, not her boobs), showing off her tits once again. They did look good. \n\n\"Vanessa,\" I began, \"may I ask you a question?\" \n\n\"Of course,\" she laughed, smiling. She stood tall, adjusting her coat. \n\n\"We were just admiring your breasts. As you can see, both my dinner companions are... Shall we say, well endowed? We were...\" She smiled, and held up her hand. \n\n\"Ah, yes... I know where you're going. The answer is no, they're not mine,\" she giggled, bouncing them slightly, \"but I do have the receipts, so I guess they're mine now. Do you like them?\" she asked, pulling her coat open and leaning forward. \n\nI glanced first at Becca, then Milan. Both were smiling, and nodding. \n\n\"We certainly do.\" \n\n\"Well, then it's unanimous,\" she laughed, \"because I love them! Worth every penny!\" \n\nBecca and Milan exchanged some coded gestures, and stood, walking off to the ladies' room. That left me alone with Vanessa. \n\n\"So, what brings you out tonight?\" she asked, smiling down at me from her towering heels. \n\n\"We're celebrating... getting married tomorrow!\" I replied, trying not to stare at her body. With me sitting and her standing, my eyeline was pretty much level with her thong-covered crotch. A little camel toe showed in the satiny fabric. Looking up at her eyes wasn't much easier, as it brought her mountainous tits into view. \n\n\"I would normally assume that meant you and one of the ladies, but things have changed, and this is Vegas! \" she laughed, causing my eyes to drift onto her jiggling boobs. \n\n\"You would be correct,\" I laughed back, \"about your assumption, not the other options.\" \n\n\"You and...\" \n\n\"Me!\" Becca chirped as she returned, with Milan a step behind. They took their seats. \"He's my man,\" she smiled, her eyes glistening, \"and tomorrow at 3, we make it official!\" \n\nWell then... I'll get the champagne to celebrate!\" she smiled, turning quickly and briskly walking out. I wasn't able to keep from watching her cute ass wiggle under her tails as she left. When I turned back, Becca was grinning at me. \n\n\"She must do very well, tip wise,\" she laughed, \"but I suppose that's the point.\" \n\nA couple of minutes later, Vanessa returned with the bottle, and I watched her jiggle as she walked in. She stared directly at me, as though showing off for my benefit. \n\n\"With the compliments of the manager and our congratulations,\" she said, bending to pour glasses for the three of us. \"I wonder if I might make a request?\" She was pouring Becca's glass at the time she asked it, wisely leaving the decision in the bride's hands. \"May I attend the wedding? I'm off tomorrow, and I love weddings.\" \n\nBecca didn't even hesitate. \"Of course you can... we'd love to have you!\" \n\nThere was a slight pause as everyone processed the Freudian double entendre that Becca had just served up. When Vanessa turned back to face me, she was blushing slightly, and her eyes were sparkling more than before. She licked her plump lips unconsciously. \n\n\"Since you're coming... to the wedding, that is... you must have a drink with us, to celebrate,\" Becca added, extending her glass. \n\n\"Okay, but just a little one, or my boss will have my ass!\" she laughed, taking the offered flute and sipping quickly. ",
        "I sat there, smirking at the sexual tension that had escalated palpably in the last few minutes. When Vanessa left to get our meals, Becca quickly rose, and moved over to sit in my lap. \n\n\"I hope you don't mind,\" she said to Milan, \"but I suddenly find myself in need of a kiss from my husband-to-be.\" Milan simply raised her glass and nodded. \n\nBecca kissed me. Actually, it started as a kiss, but within seconds, she was pawing at me as her tongue plunged deep into my mouth, demanding mine do the same. She ran her hand down my arm, grasping my hand and pulling it inside the neck of her dress and onto her breast. \n\n\"I'm so fucking horny right now,\" she whispered, her breath quivering with desire as I fondled her softly. \"I could do you right here on the table, but I don't think that'll fly, even in Vegas!\"\n\n\"Mmmm, I guess not,\" I breathed back, \"unless you want our wedding pictures to include mug shots.\" She giggled, and resumed kissing me. \n\nVanessa rolled a trolley into the room, bringing our dinners in while Becca and I continued to make out like unrepentant teenagers. She placed our meals on the table, walking quietly around us, talking with Milan, before finally stopping behind me. She leaned close to my ear. \n\n\"I hate to disturb you,\" she whispered, \"but dinner is served... if you're done with your 'appetizer'... or shall I lock the door and give you some privacy?\" \n\nBecca giggled, pulling away from my lips. She blushed as Vanessa's eyes followed my arm down to where I had a handful of her breast. She slowly extricated herself from my lap, and returned to her chair. \n\n\"Vanessa, if you knew her the way I do,\" I replied, glancing over at Becca squirming in her chair, \"you'd know that when she's excited, privacy is low on the priority list. Right honey?\" \n\nBecca looked like a child caught being naughty, which was mostly true. \n\n\"Yes dear... That's right,\" she said quietly. \"I suppose I'll never live that one down.\" \n\n\"I don't suppose you'd care to share?\" Milan piped up, smiling at me. \"The story, I mean... not anything else you may have in mind!\" she clarified. \n\nBecca snorted in laughter, and all of us joined her. She gestured to me, deferring the storytelling to my judgement. \n\n\"Okay,\" I began, \"it was not that long ago, at a flag football game that I was playing in... during halftime... in the men's room... loudly...\" \n\n\"Oh god,\" Becca gasped, \"just thinking of it makes me wet! It was so good!\" \n\n\"Well, well,\" Milan laughed, glancing around at us, \"aren't you just full of surprises? Here's to spontaneity!\" she added, raising her glass again. \n\nVanessa laughed too, her eyes lingering on mine for a few extra seconds. She had a bit of a flush in her cheeks. \"On that note, I'll leave you to your meal. If there's anything else you would like, I'll be nearby.\" \n\nWe ate in relative silence, interspersed with chit-chat about several unrelated topics. The sexual tension in the room slowly eased, but there were still two sets of erect nipples tenting the dresses of my dining companions. Vanessa was too far away to see if she made it three sets, but I'd guess she did. \n\nThe food was very good, and when we finished, Vanessa enticed us further with a selection of deserts, which were far too delicious to decline. The ladies each had creme br\u00fbl\u00e9e, and both consumed it amid moans of enjoyment. I'd heard Becca moan like that before, and it had little to do with desert. I looked at her and arched my eyebrows. \n\n\"It sounds a little like an orgy in here, with the two of you doing that,\" I laughed. \"You're getting me excited!\" \n\nMilan immediately took up the challenge, scooping a little of her remaining desert out with her spoon and licking it off with obvious sexual connotations. She caressed the utensil with her tongue, making no effort to disguise her lascivious delight as she moaned suggestively. \n\n\"Mmmm,\" she hissed, staring me down, \"so creamy, and delicious... I simply can't get enough!\" \n\nBecca quickly leaned across the table, a big gob of custard on her spoon. She held it out, and turned it above Milan's face. The thick paste began to succumb to gravity, sliding slowly off the spoon toward Milan's open mouth, her tongue extended expectantly. It landed with a wet plop, spreading across her lips. \n\n\"Oh fuck! You two are going to drive me crazy!\" I groaned, shifting in my seat. I was getting uncomfortably hard in my pants. Milan winked, and licked her lips clean. \n\n\"Thank you for sharing,\" she said in a husky voice to Becca, who nodded in response. \n\nVanessa was grinning when she brought coffee around after desert. \n\n\"I have to say... you people are the most fun I've had all month!\" she laughed, bending again to show me her tits, or pour the coffee, whichever matters least. I noticed that a little more cleavage was visible... It was getting close to payment time, so perhaps she was trying to pad her tip by showing a little more. It would have worked on me, but I wasn't the one paying the tab, so I just enjoyed the view. \n\nFinally, we were done, and the bill arrived, quickly snatched up by Milan with a smile. Becca sat in my lap for a minute or so, picking up where she left off by jamming her tongue down my throat, while Milan dealt with Vanessa. There seemed to be a lot of conversation going on between them, and I noticed that Milan gave her something extra after the bill was paid. \n\n\"Our chariot awaits,\" Milan said when she returned, indicating that we should follow her out. Vanessa was waiting by the door, and I finally got to sample her enhanced breasts when she hugged everyone as we passed. Becca gave her the location for the wedding, and we were off. We walked out through the casino slowly, and I found myself the meat in a big boob sandwich again. The evening's alcohol consumption had taken a toll both ladies, and they were leaning on me a bit more than they did on the way in, but since that meant they were pressing their big tits into my ribs, I wasn't complaining. We made it unscathed out to the limo, and into the back. \n\nThis time, Milan sat on the forward end of the u-shaped couch, leaving Becca and I at the rear. It didn't take my bride-to-be long to take her place on my lap, this time straddling me, grinding her crotch hard into mine while she sucked on my tongue. She was vibrating with lust. My hand found its way under the back of her skirt, onto the bare skin of her firm ass, holding her close as the limo began to move. \n\n\"Mmmm,\" she moaned into the kiss, finally pulling away from my lips. \"I need you... NOW!\" \n\n\"I've never had sex in a limo,\" I laughed, while she gave me a smoldering look. She tilted her head in the direction of Milan, and arched her eyebrows. \"Would you be offended if I took care of my bride's needs?\" \n\nMilan just smiled, and nodded. She knocked on the partition, which dropped a few inches. \"Drive around for a while. I'll let you know when to continue.\" Then she turned back to me. \"Please, proceed. I hope you don't mind if I watch? There's not much else to do in here.\" \n\nBecca smiled, and virtually leapt off my lap, settling in front of me. She wasted no time dispatching my belt, and seconds later had my pants down around my ankles, freeing my hard cock. She gave it a few loving caresses, and rubbed her cheek against the head. \n\n\"Ah yes... Here's what I need,\" she whispered, engulfing it in her mouth deeply. \"Mmmm hmmm.\" \n\nMilan was trying to see around Becca, sliding around to the side of the couch, moving closer. She finally stopped when she had a clear view, watching Becca's lips dance on my shaft as her head bobbed up and down. She looked at me, and licked her lips. \n\n\"Nice cock,\" she laughed, \"I had a feeling about you, from the second I saw you by the pool! She's a lucky woman!\" She saw Becca reaching behind her neck, and helped her unzip her dress, then settled back on the couch. She pulled her own skirt up, showing me her tiny thong. \n\nSatisfied that my cock was ready for action, Becca crawled aboard, sliding the crotch of her minuscule panties aside, and spearing herself enthusiastically. Her pussy was a warm swamp of juices, and slid smoothly to the base of my dick. \n\n\"Oh fuck, yes... That's it! I've needed this big thing in my pussy all night! What with her, \"she nodded to Milan, \"trying to pick you up, and then Vanessa taking every opportunity to flirt with you and show you her tits... I've been getting hornier by the minute.\" She shrugged the dress off her shoulders, giving me access to her breasts, and pulling my face into them. I latched on, sucking her nipples dutifully. \"That's my baby! Suck my tits like a good boy!\" She started to rise and fall slowly, fucking herself. \"I'm sure I'll be cumming soon, as wound up as I am...\" \n\nI suddenly had a thought, that needed resolution immediately, so I pinched her nipple. \n\n\"Hey!\" she gasped, barely interrupting her rhythm, \"I like it, but not that rough!\" \n\n\"Just checking something,\" I replied, \"now you pinch me.\" \n\n\"Pinch you?\" she asked , looking at me quizzically, before the light bulb went on. \"Oh, I get you. Fear not, my love... this... ,\" she laughed, clutching my cock with her muscular snatch, \"... you are not dreaming, I can assure you. I really am fucking you in the back of a limo, while a woman we've known for about four hours masturbates... I can't see, so I assume she's masturbating, right?\"\n\nI checked. \"Let's see... Legs spread wide... Hand stuffed into her panties... One deliciously huge breast exposed while she plays with her nipple... Making happy noises...\" Milan smiled and moaned loudly, on cue, \"... Yep, I'd say she's masturbating!\" \n\n\"Good,\" Becca resumed, now fucking herself more vigorously, \"so, as I was saying... I'm fucking you... in a limo... driving around Vegas... Milan watching us and fingering her pussy... thousands of people, just a few feet away... Uhn! Oh god! OH FUCK, YES!... OHMYGOD! AAAAAAHHHHHN! YESSSSS!\" she screeched, talking herself into a monster orgasm. She quaked and shook, her head thrown back as she howled in bliss. I'm sure the driver knew what was happening in the back of his car, as would anyone on the block we were driving by. As if Becca wasn't enough, Milan added her own growls of joy to the soundtrack of sex that filled the stretch interior. \n\nThe girls may have had their fun, but I was just getting warmed up. I grabbed Becca's ass with both hands, inched us forward off the seat so I was on my knees, and dropped her on her back on the couch opposite Milan, who was still diddling her clit with one hand, and playing with her breasts with the other. \n\nMy turn to fuck now, and I intended to do so. I grabbed my luscious redhead by the hips, and slammed into her pussy. Becca yelped. I found a comfortable spot for my knees, and started to pound her cunt hard. She squealed every time I drove the length of my cock home, and her big tits rolled across her chest like waves of erotically charged jello. I glanced over at Milan, who had three fingers drilling in and out of her dripping pussy in time with my corresponding thrusts into Becca's equally wet hole. Her head was tossing from side to side. The atmosphere in the back of the car was electic, and I was getting close. \n\nI rose up, changing my angle of attack, driving down harder into my lovely lady's pussy, just as the car stopped at a traffic light. It might have been the slight bouncing of the car, the small squeaking of the springs... or maybe Becca's shrieks of orgasmic bliss... Whatever gave us away, I heard voices from outside, cheering me on. \n\n\"Yeah, buddy, fuck her good!\" and several hoots of encouragement made their way in from outside, while Becca screamed \"FUCK ME!\" repeatedly. \n\nWe were moving again by the time I felt the tide rising in my balls. \n\n\"I'm gonna cum, baby! Where would you like it?\" \n\nShe flicked her tongue at me, and opened wide. Enough said. \n\nYanking my dick out of her gooey snatch, I shuffled forward on my knees, stopping by her head, and she sucked me in. She clamped her lips shut just in time. I exploded, filling her mouth with hot cum, while she sucked eagerly. I twitched, flexed and spewed, while looking deep into her eyes. Finally spent, I laid back, pulling out of her mouth, landing beside Milan, who had just finished her own orgasm. I thought we were done, but Becca had other ideas. \n\nShe sat up, and gestured for our busty blonde companion to move closer. Milan leaned forward, and Becca leaned over her face, their lips mere inches apart. \n\nI must admit, having just had my synapses fried by a huge orgasm, it took me a few seconds to process what was happening in front of me, as Becca opened her mouth slightly, and a slimy string of my spunk oozed out. Gravity pulled it, longer and longer, until it dropped into Milan's open mouth. I groaned, and my cock twitched again. Becca opened wider, and more goo poured out, eagerly received by Milan. Finally, Becca just pressed her lips to Milan's, swapping cum with her directly. \n\nI began to think my dream about life with Becca had been somewhat incomplete. For one, she seemed quite at ease with other women, and by 'at ease', I mean half naked, and currently engaged in a smoking hot french kiss with an equally unclothed blonde bombshell with tits bigger than her own spectacular globes. \n\nThe ladies had apparently sucked all the cum from each other's tongues, and parted lips. Becca gave her one final peck, and looked down at her own hand, which was gently fondling Milan's breast. \n\n\"Honey,\" she laughed, \"I suddenly don't feel much like dancing. Would you mind if we just went back to the hotel?\" Her hand kept caressing Milan's boobs. \n\n\"Sure, baby,\" I replied. \"What do you feel like doing?\" As if I didn't know that look. \n\n\"Um... Fucking.\" She kissed Milan one more time. \n\nMilan smiled, and knocked on the partition. She didn't even try to cover her naked tits when it rolled down. \n\n\"Home. Now,\" she directed. The partition went up. \"I think my suite will be more comfortable. It's huge, and so is the bed.\" \n\nBecca was tucking herself back into her dress, and turned her back to me, allowing me to zip her up. \n\n\"Wherever, as long as there's a bed,\" she laughed.\n\n***\n\nSuite 17221 was beautiful. Milan was right about it being huge. Massive corner windows looked out over the strip, and I was wandering awestruck when Milan walked over to the phone. \n\n\"I'll just make a few calls... I'm sure I can find myself a partner for tonight,\" she said, picking up the receiver. \n\n\"I don't think that will be necessary,\" Becca answered, stepping over to her side in an instant. \"I would be willing to share, one more time, at least.\"\n\nMilan put the phone down, smiling as she did. \"As long as you're sure. I don't want to become a problem, so close to the start of your life together.\" \n\n\"I'm sure,\" Becca chirped, wrappings her arm around Milan's shoulder and turning them to face me. \"We'll be his bachelor party gift!\" \n\n\"Oh!\" Milan laughed, \"Just one call then... I know someone who would love to get in on this! Is that alright?\" \n\n\"What the hell?\" Becca said, \"As long as I'm sharing... What happens in Vegas...\" \n\n\"... Stays in Vegas!\" we all said in unison, followed by a wave of laughter. \n\nMilan pulled a card from her purse and punched in some numbers, walking away with the handset. \"It's a surprise!\" she giggled, leaving me alone with Becca. \n\nMy darling fianc\u00e9 gazed at me, stepping into my arms. \n\n\"So now we can say we've had sex in a limo!\" she hissed, kissing me. \"It was fun.\" \n\n\"So, how much of an idiot would a man have to be, to let a certified sexpot like you get away?\" I asked, holding her close. \n\n\"I don't know... Why don't we call my ex-husband and ask him?\" she giggled, smiling at me. \n\n\"Oh, we don't need an immediate answer. Just send him an email,\" I replied, kissing her softly. \n\n\"Mmmm... That's a great idea!\" she laughed, spinning quickly out of my arms, and racing to her purse. Out came her cell phone, followed by a flurry of typing thumbs. It took her surprisingly little time to prepare the message, but I took a seat beside Milan, who had finished her call and returned, to wait. She took advantage of my proximity to engage in some introductory kisses, placing my hand on her breast as well. She felt wonderful. \n\n\"Okay, how's this sound?\" Becca asked, turning back to me. I stopped fondling Milan self-consciously. \"Dear George. My boyfriend and I are in Vegas, and were just about to go to bed with a beautiful, buxom blonde playmate. He asked me how big an idiot anyone would be to let me go, so I thought we'd ask the man who should know. How big an idiot are you? P.S. We're getting married tomorrow, so you can take your next alimony check, and shove it, on yourself, where I'm thinking of letting him fuck me! \" She smiled at us. \n\n\"Touch\u00e9,\" I laughed. \n\n\"Hmmmm. Does he have a thing for foreign women? You could add that I was born in Italy, if you think that would make it better. And you could add...\" \n\nThe doorbell rang. It was weird, but Milan's suite had a doorbell. \n\n\"Ah. Perfect timing. As I was saying,\" Milan said as she walked across to the door. \"you could add...\" she peeked out the peephole and smiled, opening the door, \"... her!\" \n\nThe door opened wide, and Vanessa stepped in! She had changed out of her work clothes, but there was no mistaking that body, those lips... This party was just getting started, and it was already the best night of my life. \n\nVanessa took one look around, and made a beeline over to me. \n\n\"I hear I've been given permission to do this,\" she whispered, pressing her lips to mine. \"I wanted to do that all night, and I got the feeling you felt it too.\" I nodded, and she pressed her full, round, surgically enhanced (like that made any difference to me... Not) boobs into my chest. \"I'm gonna fuck your brains out!\" \n\nBecca was madly typing into her phone again. \"And... Send!\" she giggled pressing the button. She tossed the device over her shoulder onto the couch, and looked around. When she saw Vanessa kissing me, she scooted over to us, wearing a big smile. \"That message will kill my ex. Excuse me,\" she said, tapping Vanessa on the shoulder, \"Do you mind if I cut in?\" \n\nVanessa finished her current kiss, and pulled back, smiling at me. Her smile turned to surprise as Becca spun her around, and took my place, kissing her, instead of me. \n\nFor the second time in the last half hour, I watched the love of my life kissing another... Woman! The first time, my wits had been dulled by the aftermath of my orgasm, but this time, I was quite aware of the proceedings. I continued to watch as their tongues duelled, and they crushed their big tits together. Eventually, they pulled apart, and Becca saw the look of surprise on my face. She read it correctly. \n\n\"Hey... I went to college, too. I had lots of 'girlfriends' in school, and sometimes, we got bored, and had fun with each other!\" She looked at Vanessa, and smiled again, \"After twenty-five years of marriage, I had forgotten how much fun women could be!\"  \n\n\"Speaking of women... Where's Milan?\" I asked. The search began. Fortunately, while the suite was large, it wasn't that large, and I won the scavenger hunt, mostly because I had a fair idea where to look first. Little did I know, when I'd met her on the pool deck earlier today, that even though I said 'no', the answer would be 'yes'. \n\nMilan was patiently waiting, laying on her side, her head on a pillow, in the middle of a ginormous round bed, at least eight feet in diameter. When she saw me in the doorway, a wide smile crossed her face, and she beckoned me in with her finger. As I approached the bed, she unwrapped the silk from around her body, rolling onto her back, and surrendering herself completely. She didn't need to say anything; the look in her eyes as she gazed at me spoke volumes, and I was listening closely. ",
        "I joined her, and she enveloped me in her arms, pulling my lips to hers. She deftly removed my shirt, caressed my chest, and pressed her warm, soft breasts against me. Her blue eyes bored into mine as we embraced gently. \n\n\"Well,\" Becca's voice said, from behind, \"no matter what you're looking for... it's always in the last place you look, right?\" she laughed. \"Unless it's right where you thought it was!\" Vanessa was standing beside her, and they both started removing each others clothes.\n\nI was watching them, as I hadn't had the pleasure of seeing Vanessa's body yet... Well, the few parts that had been covered by her outfit at the restaurant, anyway. I felt a hand on my chin, and turned back to the gorgeous Italian goddess whose body was awaiting my attention. Other than her thong, she was naked. \n\n\"They're not going anywhere... Let's get the ball rolling,\" Milan cooed softly in my ear.\" I really need some of what I saw in the limo. Please, make love to me.\"\n\nI ditched my remaining clothes, as quickly as possible. Milan rolled off her dress and dispatched her thong across the room like a slingshot. By the time I was naked, she was laying back, thighs spread, with her beautiful, bald pussy welcoming me. I took my spot, and started to slide into her receptive cleft, stopping about halfway in when I had a thought. \n\nBecca was now laying beside us, on top of Vanessa. They were exploring each other's bodies. \n\n\"Honey,\" I asked, \"I know this seems like an odd time to ask, but you're sure this is okay with you?\" \n\nBecca raised her head from Vanessa's breasts, and looked at me. She glanced down to where my dick was partially inside Milan's cunt. For her part Milan was moaning, clawing at my shoulders and begging for the rest of my shaft. Becca smiled. \n\n\"Well, gee, I don't know,\" she laughed, as Milan tried desperately to push her pussy up around my cock. \"Maybe I've changed my mind. You know... Woman's prerogative, and all that!\" she winked at me. \n\nMilan howled. \"NO! You can't stop now! I need it! Please! PLEASE!\" she giggled. \n\n\"Oh, alright,\" Becca replied, teasing further. \"Maybe just one or two strokes...\" \n\nI smiled, playing along, and drove my cock home, grinding against her clit. She groaned. \n\n\"One,\" I said rising and falling again, \"and two!\" The second one was harder, slamming into her pussy. \n\n\"Oh god, yes!\" Milan moaned. \"More please? I have money?\" She was getting into her role in this game. \"I'll eat your pussy later if you let me have him?\" \n\n\"Well, that's the same offer I just got from her,\" Becca laughed, rubbing her face on Vanessa's firm globes. \n\n\"That's right,\" Vanessa said, joining the game, \"you'll have to do better!\" \n\nMilan thought for a second. \"Clothes! I'll let you raid my closet! You can't turn that down... You'll look great in some of my dresses!\" \n\n\"Sold!\" Becca laughed. \"He's yours, just don't bring him back empty.\" She went back to sucking Vanessa's nipples. \n\n\"Damn,\" Milan whispered, looking deep into my eyes, \"that's exactly what I was planning to do...empty those balls of yours.\" She lifted her legs, wrapping them around my waist. \"Okay darling, you are mine now. Fuck me, please.\" \n\nWell, she did ask nicely. I kissed her and began to shaft her gently, while she moaned softly, expressing her enjoyment. \n\n\"Ooooooo,\" she whispered in my ear, \"I do love watching myself get fucked!\" \n\nThat one had me confused, until I glanced over at Vanessa, who was enjoying Becca's appreciation of her very erect nipples. I saw her eyes locked on the ceiling. I turned my head, and out of the corner of my eye, saw my own ass pumping up and down as I fucked Milan. The mirror on the ceiling was almost as big as the bed, and round as well. \n\n\"You,\" I laughed, looking back at the luscious blonde under me, \"are a very, very bad girl!\" She giggled, but her eyes never left the image above us. \n\n\"And you,\" she hissed into my ear, \"have a very nice cock! I've been hoping we'd get this chance all night. Your wife is going to be a very happy woman, but you're not married yet!\" She stroked my chest. \"Why don't you lay back, and let me look after you? Then you can watch.\"\n\nHow could I turn that down? I eased off her, and we switched spots. I noticed that Becca and Vanessa were back joined at the lips again. It would seem that my soon-to-be wife really did have a taste for women, much as I had dreamed. Who knew? \n\nI stretched out on my back, and Milan laid between my legs, grabbing the base of my thick cock with her delicate hand. She smiled at me, and opened her mouth, drawing my dick in. She moaned softly, sliding her lips down further, taking as much of me in as possible. Above me, in the mirror, Becca and Vanessa had a short conversation, and moved to either side of me. Without a word, they joined Milan, and now three tongues slithered wetly up and down my hard-on, a sensation I'd not only never had before, I hadn't even dreamt of it. They continued, and I savoured the feel of their mouths on my cock and balls, while I watched the three heads, one red and two blonde, provide pleasure unlike any other. \n\nMilan thanked the ladies for their assistance, and started to crawl up my body, straddling my hips. Vanessa quickly stepped directly over me, pushing Becca over on her back, and diving between my wife's legs. She wasted no time, spearing Becca's pussy with her tongue eagerly. \n\nI was torn. Part of me wanted to watch Milan as she lowered herself onto my dick. Another part was desperate to see my darling Becca getting devoured by a gorgeous blonde showgirl. But, I was still thinking like a man who didn't have a huge, circular mirror over his head. I could do both! \n\nMilan slipped the head in, and dropped her pussy onto my cock, grinding herself down hard. She leaned back on her arms, and looked up, making eye contact with me in the mirror. She started to bounce, fucking herself, while watching me watching her. Her boobs got very active, attracting my attention immediately, in both the direct and reflected view. \n\nBecca's squirming under Vanessa's tongue had resulted in her head being right next to mine, even though her body was angled away. I turned my head to look at her, and she did the same. \n\n\"You're sure I'm not dreaming this, right?\" I laughed, gesturing toward Milan's sumptuous body, writhing blissfully as she rode me. \n\n\"If you're dreaming it, then I am too, baby!\" she moaned. \"This woman can really lick pussy!\"\n\nIn the mirror overhead, I saw Vanessa raise her hand, holding it in my direction. It took me a second to interpret the gesture, slapping her hand, the first time I'd ever high-fived a woman that was eating my fianc\u00e9's pussy. I mean, that happens every day, right? \n\nThe next hour was a bit of a blur. Milan skewered herself to at least two orgasms before she vacated the saddle, allowing Vanessa to take her place, and falling into Becca's clutches. I watched my darling and our blonde Italian host making out enthusiastically, whispering in each others ears periodically, and giggling like giddy schoolgirls.\n\nVanessa rode me for several minutes in relative silence, letting me watch the other two in the mirror until she decided she would like some undivided attention, dropping to my chest and rolling us over skillfully. \n\nShe immediately planted a blistering kiss on my lips. When she finally released me, her eyes were sparkling wildly. She was closest to me in age, actually younger than I was, and her body was hard and tight. \n\n\"May I ask you a question?\" she whispered, wrapping her legs tightly around my waist, and absorbing my gentle strokes gratefully. \n\n\"Please. Go ahead.\" \n\n\"I can't help but notice your wife is older than you. How did you two meet?\" she asked. A soft moan escaped as I probed her pussy. \n\n\"Very long story. Let's just say that her husband didn't adequately appreciate what a sexual being she is. Once I opened the floodgates, there was no escaping her desires. Do you know she fucked me in the limo on the way here from the restaurant? Right in the middle of the Strip, screaming at the top of her lungs. She still surprises me, sometimes, like kissing you, or what she's doing now, \" I laughed, glancing over to see her red mane pinned to Milan's pussy by the hand on the back of her head. \"She's all the woman I can handle. It's a good thing I'm younger, or she'd kill me!\"\n\nVanessa smiled, and leaned closer to my ear. \n\n\"Well, I can't argue with that, but I'll let you handle this woman, if you'd like? Come on... Fuck me with that big dick!\" she hissed wriggling her hips. \n\nWell, this was my impromptu bachelor party. I loved Becca, and wanted to spend my life with her. Despite our age difference, she was all the woman I could ever want. That being said, Vanessa was spectacularly pretty, smoking hot, eager to please... and currently connected to me by my dick, so I didn't need much convincing to comply with her request. \n\nI kissed her again, and increased the tempo of my thrusts. Our little discussion had given me a chance to regain some energy, and step back from the edge of my orgasm, so I now threw myself into my task, fucking this incredible body as I saw fit. Vanessa's big hooters were squashed between us, feeling somewhat different than Becca's natural globes, or Milan's natural wonders, but wonderfully sexy anyway. \n\nWe've all seen porn actresses who've gone a bit overboard with implant size, to the point where their breasts are obviously after market additions. They don't move the way a woman's breasts are supposed to. Vanessa's boobs weren't like that, so she must have had a decent pair to start with, and just, as the surgical term would imply, 'enhanced' them. \n\nNo enhancement of her face was required. She had beautiful lips, and her eyes were huge, deep, and an icy-blue colour. They were locked on mine. \n\n\"My turn for questions,\" I grunted. \n\n\"Okay... Uhn... Uhn... Go... Ahead!\" she panted as I drilled her deeply. \n\n\"You get...laid a lot?\" I asked \n\nShe blushed, and looked sheepishly away. \"At the risk of... Oh fuck, that's good!...of sounding like...uhn...a wanton slut...shit, your cock feels good...um, yeah...I do pretty well. Why?\" \n\n\"I was just wondering,\" I growled, \"where your favourite...oh, fuck...place for a man to...fuck!...cum was? And don't take too long to answer...because I'm almost there!\" \n\n\"Me too!\" she gasped. \"Hold it for just...another few...OH MY FUCKING GOD! YES!...YES!... I'M... AHHHHHNNN!...MY TITS! CUM ON MY TITS!\" she howled, thrashing about wildly. Her screams attracted the attention of Becca and Milan, who had been cuddling together after Milan had cum on my wife's tongue. They moved closer. \n\nI pulled out, kneeling between her legs, stroked my cock once, twice, three times...and exploded. \n\n\"FUUUUCK!\" I groaned, as the first salvo leapt from my twitching tool. Despite Becca having sucked up a load in the limo, it had now been about two hours of intense stimulation since then. I'd been in Milan's pussy through several of her orgasms, been licked quite desirably by all three ladies, and had just been fucking Vanessa for about thirty minutes, so my cork had been holding back some serious pressure. \n\n\"Fppppppppppt!\" Vanessa sputtered, as my opening shot, overshot the range to her twin targets, and landed on her face...neck...cleavage...a thick, white stripe of liquid lust that glistened in the soft lights. \n\n\"Ooooooo, nice one!\" Becca laughed, her face right next to my hip, watching my hand choke my dick furiously. \n\nI lowered the elevation of my cannon barrel, and fired again. Bullseye! A cum-blot of Rorschachian proportions adorned her left breast, splattering over the nipple, and oozing into the valley between her tits. It took two more blasts to similarly decorate her right side, and by then, there wasn't much left to fire, the dregs dropping weakly onto her stomach. \n\nSpeaking of dropping weakly... I did exactly that, flopping on the bed beside her. We were both spent, and I rolled my head to watch her big boobs rise and fall, quivering with each ragged breath she took. \n\nBecca's tongue appeared, worming across Vanessa's cum soaked, hugely erect nipple. She latched onto the stiff bud, and suckled lovingly. Some blonde hair moved in the background, as Milan came to join the feast, pressing her lips to Vanessa's plump pair. I watched their tongues duel, sharing my cum back and forth, and moaning softly. \n\nI laid back, watching the action in the mirror above. Vanessa writhed under the attention of both Becca and Milan, who were licking her from stem to stern, cleaning my discharge as they went, before finally settling, each one moored to one of the busty blonde's perfect, artistically sculpted breasts. Vanessa's hand inched down, and started plucking at her clit, completing the circuit the ladies had started by suckling her nipples so gently. \n\nI watched as they got her off. It was beautiful. Gentle. Sensuous. \n\nSigh. Does what happens in Vegas really have to stay in Vegas? \n\n***\n\nThe clock edged closer to three , as we waited our turn at the wedding chapel. Becca was absolutely radiant, even more so than usual. Milan and Vanessa had taken her out to get her hair done this morning, leaving me alone in that huge bed, for the first time since last night. I really hadn't slept much, as it seemed that the ladies were taking shifts on my cock, and even when they had all been satisfied and we passed out, I was awoken by lips reviving my tired soldier on two occasions. At least being alone let me sleep a bit. \n\nMilan had made good on her offer to give, not lend, my wife a dress. I had been shooed back to our suite for that, as the three of them raided the closet gleefully, trying on everything under Milan's watchful eyes. They wanted the dress to be a surprise, and it was.\n\nI looked across the room at my blushing bride, her hair cascading in flaming waves around her face and over her shoulders. She was flanked by the two blonde goddesses that were our new friends for life, and there were three magnificent sets of breasts displayed for the envy of every man and woman in the waiting area. Milan and Vanessa had even found two dresses that were quite similar in colour, fittingly blue to match their eyes, and letting them pass for bridesmaids of a sort. \n\nBecca was clad in burgundy, a silky sheath that caressed her curves in a way that I'm sure my hands would try to match when I removed it later. She was beautiful. Always had been. Always would be to me. \n\nI was an emotional train wreck. Nervous doesn't begin to describe it. It wasn't being married that had me freaked...it was being married to her, the most erotic, satisfying, demanding woman I'd ever met. I didn't want to let her down, like her ex had. Fidelity was not an issue, and it would seem, if recent events were any indication, that we might be sampling a few playmates together. \n\n\"Nervous?\" I heard, from behind me. It was Becca's smoky voice, the one that had originally piqued my curiosity, and led to our first night together. I turned. \n\n\"Yeah, but it's me not you. You do know that I love you, right?\" I asked. \n\n\"Of course...never a doubt. It's just that I've done this before, and it didn't end so well. I can't help wondering how much of that was me, and I don't want that to be us,\" she whispered, licking her lips nervously. \n\n\"Is it bad luck to kiss the bride before the wedding?\" I asked. She opened her arms and took me in. \n\n\"Hmmmm, probably no more so than letting you fuck those two the night before!\" she laughed, easing the tension. We both turned, and looked over at Vanessa and Milan, looking oh so delicious. Milan fluttered her fingertips at me, and kept talking to her blonde cohort. \"I'm surprised you can stand. Try not to fall asleep during the ceremony?\" Her smile was enough to light the city. \n\nAt last it was our turn, and we were herded in for a few lines of officious dialogue that ended with Becca and I echoing each other's 'I do's'. \n\nWe were now officially husband and wife. Milan wouldn't let us leave without a parting dinner, and this time, Vanessa's pretty ass was in a seat beside us, not parading around under a ridiculous costume. \n\nWe parted a couple of hours later, hugs and kisses all around. Becca took a few minutes with our new friends out of my hearing range. When she joined me she had a big grin on her face. \n\n\"Care to share?\" I asked. I didn't intend the sexual connotation. \n\n\"Actually, that's exactly what I was planning. They have our address at home. We might not always be in Vegas, but Vegas can come to us!\" \n\nOkay... Somebody pinch me! Please! \n\n********************\n\nPlease cast your votes and send me some feedback. I appreciate it."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "redhead",
        "blonde",
        "milf",
        "older woman",
        "younger man",
        "sex in limo",
        "sharing",
        "group sex"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/telemarketing-turnabout-pt-07"
}