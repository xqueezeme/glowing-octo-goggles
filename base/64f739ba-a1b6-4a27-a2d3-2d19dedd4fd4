{
    "title": "The Harpy",
    "pages": [
        "This is a more traditional and sexually graphic LW story. It's not what I typically write, but I wanted to try one to see how it would turn out. And I wanted a break from Operators and FBI agents. If it isn't your cup of tea, thanks for stopping by; maybe my next one will suit better. This is BTB, although the torch isn't quite turned up to inferno. Todd172 \n\n***** \n\nI stood on the doorstep, staring at the shrieking redhead. The torrential rain had her hair plastered to her face in long strings. Despite that frigid, pounding rain, she just plowed on with her furious tirade. To be perfectly honest, I couldn't really hear all her words through that heavy rain and the hollow roaring in my own ears \n\nStill though, I understood the essence of it. \n\nMy wife, Beth, was having an affair with the redhead's husband, Justin. The furious redhead - Nicole, Nikki for short - wanted me to stop it. I knew as much - a couple months ago, my wife of nine years had called me while I was on a rare business trip, and while I watched cold rain spatter against the dingy hotel room window, she told me that she wanted divorce a \"because we'd grown apart\". I'd only been gone a couple weeks and we had only lived there for 5 months since I'd gotten out of the Army. I had never even known we had a problem; she'd never said a damn word. As near as I could tell, she'd been at least emotionally involved with the Asshole for three months, and probably only managed to consummate it while I was out on the business trip. \n\nI'd only managed to piece it all together about a week before the redhead showed up on my doorstep, and still didn't really have proof. And I was still trying to work out a plan. \n\nMy wife had agreed to counseling in exchange for civility long before I learned about the affair, but really she stopped going to the couple's sessions after the second one. I suspected she was trying to get the counselor to guide me toward accepting the break-up. I think the main reason for the supposed counseling period was so she could tell her family and friends how hard she had tried. Especially her parents. Her appearance in their eyes was really, really important to her, probably the most important thing in her world. So she was waiting her time out while continuing to see the Asshole and living on my paycheck until she was sure it would look good and he was ready to move on from his wife and baby. \n\nWhile buying waves of damn shoes to fill her closet. \n\nBeth and I had two-year old twin girls, Angie and Amee. She cheerfully left me to baby sit them as soon as I got home so she could \"go to the gym\" or \"go running\" - both of which she did often enough to be getting in the best shape of her life. But after the gym she and the Asshole would sneak off to screw somewhere. \n\nMiserable was hardly the word for how I felt. Any time I'd made any effort to resolve issues or talk to her about damn near anything, she turned into a screaming fury, denying any wrong doing and blaming me for everything on earth. She also spent a lot of time telling me how hard she had it watching the kids at home while I was at work, that she was trying to make things work and that I was just trying to use the kids against her - none of which was true or actually made any sense. With her out every evening and nearly all weekend, I was watching the kids more hours per week than her, while working a full time job. \n\nLooking into divorce with a lawyer was depressing; adultery was essentially irrelevant in our state. You could file for it as a reason, but it had no real effect. And Beth was obviously well aware that the courts nearly always awarded custody and a healthy child care payment to the wife, regardless of her behavior. Maintenance for several years was also the norm if there were young children - that way the former wife could stay home and be a \"good mother\" instead of having to rush off to work. \n\nSo there stood the screeching redhead - a somewhat unpretty specimen - tall and a bit awkward, with something of a beak of a nose and thin angry lips, still soft around the middle from the birth of her 6 month old, with a few extra pounds that frankly sat poorly on her otherwise lanky frame. Anger and cold rain had made her pale skin blotchy. I couldn't get a word in edgewise, so I stood back, holding the door open and waved her in. I'd already figured out that there was no point in the neighbors hearing a woman scream at me without the filter of the door. Lots of practice dealing with that lately. She followed me, still loudly demeaning my manhood while I walked over to the dining room table and pulled a chair out for her, then sat down myself. \n\nAnd waited. \n\nAs she ran down, her vitriol turned to hard tears, then to shuddering sobs, then, finally to sniffles as her head sank into her arms on the table, her hair forming a mound of dank, limp, dark copper. \n\nI waited a bit more until the sniffles stopped. \n\n\"Are you done?\" Quietly. \n\nShe looked up red-eyed and angry, sniffing twice, but didn't say anything, so I proceeded. \"If I could have done anything I would have. I don't like this any better than you.\" \n\nI went on to explain the way the law worked and just how much of a disadvantage I was at. \n\n\"You should kick her cheap slut ass\" \n\nNot letting go of the anger any time soon. Not that I blamed her. \n\n\"Great plan, then I could be in jail, then the street, instead of a house.\" \n\nWe sat silently for a while until I got up and fixed some hot tea - the rain had been cold - a fact pointed out by her very obvious nipples poking out through her shirt and bra. I made a real effort not to stare; she might not be pretty but she did have a really nice rack, and it had been a damn long time for me. She shivered as the hot tea hit her system. \n\n\"Shit, I didn't realize I was that cold.\" I didn't say anything, but she suddenly looked down at her tits. \n\n\"Shit\" Again. Not terribly creative with words. She clamped her arms over herself. \n\nI sighed internally. This was the closest thing to sex I'd had in four months. \"I can get you a sweater or something\" \n\n\"As long as it isn't that slut's.\" \n\nI walked over and found one of my hooded sweatshirts, which she pulled on and zipped quickly. She began to squirm, pulled her arms in from the sleeves and then after several gyrations dropped her soaked button up shirt and bra out the bottom and pushed her arms back out the sleeves. I picked them up and tossed them in the dryer. At least, I noted, the show was back on. The sweatshirt alone was thinner than her bra and shirt combined, so the nipples she was no longer covering with her arms were on prominent display. I picked up a towel and handed it to her. \n\n\"For your hair\" \n\n\"Thanks\" She dried her hair and I watched her tits bouncing all over in the sweatshirt . It was weird to be attracted to anything at this point. Hell, I had damn near forgotten what it felt like to have a hard-on, so I allowed myself to stare. Eventually though, her hair was dry and she stopped. \n\n\"I hate them\" she growled. \n\n\"Me too. I never saw this coming.\" \n\nAt that I saw a flash of pain that was as bad as my own. \n\n\"I can't compete with her - she's in perfect shape and gorgeous. I'm fat from having the baby\" \n\nShe wasn't really overweight - maybe 10 pounds or so; she was out of shape, but then so was I. But she was right in some respects - Beth about as beautiful as you'll ever see in the real world - blonde, blue eyed, slender and as graceful as a human can be. \n\nStill, Nikki needed something to hold on to. \n\n\"She's in good shape because she has the time to go to the gym and go running. And you aren't fat.\" \n\nA tiny glitter of something other than misery peaked out. \n\n\"So, what next\" \n\nI shrugged \"I have no idea, every way I play this, I come out alone, broke and she controls access to the kids.\" \n\nI told her what I'd managed to piece together. \n\n\"What if you had proof?\" \n\n\"Doesn't matter in court. They don't give a shit here. The same things that hurt me should work for you in court, though.\" \n\n\"Not hardly, Justin works for his cousin in the construction company. Most of his pay is under the table. So there isn't much 'official money' for child support or alimony.\" \n\nI assumed she meant maintenance. \n\nShe continued \"I... I just want to crush them.\" \n\nI thought for a minute. \"What can we really hurt them with?\" \n\nShe shrugged. \n\nI drove on, feeling a little better - I finally, maybe, had an ally in this goat-fuck of a situation. \"Seriously, everybody has done something wrong. We just have to find it. The pay under the table from his cousin might be a good starting point.\" \n\nI paused thinking. Some of those shoes that were just showing up in Beth's closet looked really expensive. That money had to be coming from somewhere. \n\n\"There's something going on - Beth is spending money from somewhere.\" \n\nShe nodded, with just a hint of actual energy. \"We could look into it.\" \n\nI smirked. \"That will be easy, we'll pack up the kids and sneak around like a bad mash-up of Magnum P.I. and the Brady Bunch.\" \n\n\"No, my sister, Angie, could watch the kids - she's watching Jaime at the house now.\" She paused, looking a little thoughtful \"So, where are your kids?\" \n\n\"Upstairs - asleep.\" \n\nShe glanced around the room, her gaze settling on the closed front door. \n\n\"Do you have any sweatpants - I'm still soaked.\" \n\nI crossed back to the folded laundry and pulled out my sweatpants as she stepped out of her shoes. I handed them to her and started to point her to the bathroom, but she turned her back to me and unzipped her soaked jeans, pulled her jeans and underwear down and stepped out of them. She then began to rather slowly dry her legs and butt with the towel. The invitation was pretty obvious and I could almost hear her nerves crackling. \n\nI could sense how big a risk she was taking. She already felt rejected. If a guy with a grudge who had every reason for a revenge fuck and who, by the way, been cut off from sex for as long as I had, turned her down, she'd be shattered. I felt a surge of anger, but anger at my wife for putting me here. \n\nNikki kept talking... \"I can't believe Justin would do this to me...\" \n\nI stepped forward and put one hand on her bare hip. She started shaking and her voice caught in her throat, but she didn't pull away, so I put my other hand on her other hip. \n\nHer voice got softer \"I don't like you... but I hate him...\" She pushed back against me. I caressed her hip with one hand and unzipped the sweatshirt with the other, dropping it to the floor at our feet. Her nipples felt as amazing as they had looked. I slid my one hand down to cup her ass - her tits weren't as firm and her ass was softer than Beth 's and a lot wider, at least as far as I could remember after so long. But Nikki appreciated my hands. Her skin still felt icy from the cold rain, and she seemed to push herself into the warmth of my hands. And when I gently kissed the side of her neck, letting my teeth brush her skin, her legs almost collapsed. I let my lower hand slide around and between her legs. \n\nShe groaned softly. \n\nWet was hardly the word for it - she was practically gushing. I let my fingers play over her clit for a minute while she exhaled slow, shuddering breaths. She was beyond ready. I turned her around - her tits were actually pretty nice - much bigger than Beth's - and her nipples were insanely hard and apparently very sensitive from the way her nails bit into my shoulders when I sucked them in. After a minute I picked her up and laid her back across the dining room table - she obviously expected me to drop my pants and just shove it in, but I wasn't about to waste any part of this encounter, since I had no idea when or if I was going to get laid again. I wanted to savor it. I pushed her knees up to her tits and lowered my mouth to her slit. She nearly lost her mind as I tongued her, grabbing the first thing she could find and stuffing it in her mouth to stifle the screams. \n\nI showed no mercy - whenever she got close, I let up just enough to keep her breathing - then pushed her harder. When I finally let her tip over the edge, I think she tried to have all the orgasms that she had missed out on for the last several months at once. I finally let up and stood up straight, pulling off my shirt and stepping out of my pants, while she gasped for breath and stared glassy eyed, pulling her own panties out of her mouth. \n\nShe slid off the table to her knees in front of me. Staring up at me as she grasped my hard on, she said \"I still don't like you\" then slid her lips onto me. It wasn't going to take long, given how long I had been without, and she used everything she could think of - I warned her I was about to cum, but instead of pulling off, she took me in as deep as she could, catching my cum in the back of her throat and gulping it down. \n\nAfter it subsided she looked up at me and grinned nastily - \"I usually hate swallowing, but... nobody's ever eaten me like that.\" \n\nI didn't say anything, but I suspected that going without sex for so long had a lot to do with how much she enjoyed it. \n\nI pulled her back up to her feet then laid her back on the table with her legs spread. She was so wet I plunged in easily, hammering her while she hissed, thrusting up hard to meet me. After several minutes she breathlessly pleaded for me to stop - which surprised me because I was sure she wasn't out of steam or hate yet. Then she turned around and bent over the table. \n\n\"From behind, I always like it from...\" \n\nHer voice broke as I pushed in. She wasn't quite as tight as Beth had always been, and as wet as she obviously got, it was no surprise she liked it from behind - that would always feel tighter. \n\nFor the next several minutes I pounded her and the only things she managed to say coherently was \"Harder\" and \"Fuck!\" She seemed to really enjoy being taken roughly. I could feel her juice dripping down my legs - she was like a fucking fountain. I decided to step it up a bit and got my fingers wet with her abundant juice. Without saying anything I kept hammering her and worked a finger into her asshole - when I got it into the last knuckle, she started to scream, then snatched her panties off the table next to her, stuffed them back into her mouth again and went completely out of control. I slipped my finger back out of her ass, wiping it on my shirt, and slowed a bit. \n\nDropping the panties, she looked back over her shoulder at me, glaring viciously \"That was just filthy! Bastard.\" Her look of mock-anger transitioned to a carnivorous, grim smile. \n\nI pulled almost all the way out, just teasing her with the tip as she tried to push back onto me. \n\n\"Bitch. You know what would be nastier?\" I let my pole ride up the crease of her ass until the tip was at her asshole. Just touching. \n\n\"Oh Fuck! You wouldn't do that to me! I hate doing that!\" but even as she said it, she was pushing back, slowly onto the tip. I pushed my weight forward a bit until the head popped into her. It had to hurt, and she was already stuffing her panties back in her mouth as I continued to push slowly into her. She stared at me hatefully over her shoulder, in a way that made me check for knives on the table near her. She kept pushing back harder though. It was pretty clear that Nikki didn't have all her cards in one deck. She spit the panties out and hissed: \n\n\"Bastard! If you're going to fuck my ass, then fuck it! Shove it in goddammit!\" So I did, to a squeal of not-quite-protest and a disturbing, oddly hysterical laugh. \n\nIt took a few seconds for her to relax and get used to it, but once she started thrusting back we had no trouble finding a rhythm. She came again - and again - then I finally reached my limit and shot another load deep into her ass. We slowly separated and I grabbed a couple towels and handed her one. After cleaning ourselves off, I threw her jeans and panties into the dryer with her shirt and bra, we sat - naked - at the table for a few more minutes, drinking the now cool tea. \n\nShe looked sullenly at me from under her ragged mop of red curls, \"You knew this was going to happen when you invited me in.\" \n\n\"Actually, not until you took off your jeans.\" \n\nShe giggled like a little girl. It was a little unnerving. \"I was terrified you would refuse.\" \n\nI grinned for what felt like the first time in forever, \"How could any guy refuse that?\" \n\n\"Justin has no problem. I think seeing the baby born did it. He was in the room - he freaked out, threw up and hasn't shown any interest in me or the baby since.\" \n\nI shook my head, I'd heard of things like that before, but before I could say anything she continued on. \"So how could Beth- any woman - turn away from the kind of fucking you just gave me? You're a helluva lot better than Justin.\" \n\n\"I have no idea. She just lost interest in me - Justin is younger and she's feeling old because of the kids I guess. It hasn't been like that\" I gestured at the towels \"since the twins were born. I think she felt she needed to be more mom-ish with me or something.\" \n\nNikki giggled again, a trifle creepily, I thought. \"I never came while taking it up the ass before. I mean, I've tried it, but it didn't really do anything for me. Before.\" \n\nI grinned \"Beth either, at least not for me.\" \n\nShe brightened further. \n\n\"Really!? I'll be sore, but I'll treasure it - especially when the Asshole tells me to sleep in Jaime's room tonight because he's 'tired' from exercising.\" \n\n\"I can't believe you can't control your slut. I still don't like you. Bastard.\" \n\n\"Bitch.\" \n\nThere was anger in those words, but we both understood it wasn't really directed at each other. \n\nThe buzzer on the dryer went off, I smiled \"If you really want to do something about this, see if your sister can watch my kids with yours tomorrow night. And we'd better wrap this up, they will be getting home in about an hour and I need to scrub this room a bit.\" \n\n\"I'll be here - you better use air freshener, 'cause it smells like hot, sweaty, ass-fucking sex in here!\" \n\nShe pulled on her clothes and practically danced out of the house. \n\nI cleaned the room up carefully - and put the towels and sweats into the washing machine with my clothes. When Beth came home, I found it surprisingly easy to avoid the nightly 'discussion' - the argument we always had where she denied anything and lied about everything. She seemed a little nonplussed by my lack of attitude. Amazing how a great grudge fuck will take the edge off things. She also seemed to notice the spotless kitchen. I think she commented on the amount of air freshener, but frankly I didn't give a shit, I was still coasting on post-sex hormones. \n\nShe was equally disconcerted when I skipped the nearly-ritualized failed effort to kiss her goodbye as I went to work the next morning. I didn't even try and I could see it caught her off guard when I just picked up and headed out. One way or another, I was going to quit sitting around feeling miserable and end this - somehow. \n\nAt work I made arrangements to borrow a friend's beater car for the next few months. With Nikki's sister - who looked disconcertingly like her - watching the kids at her house, we drove off. We planned to scope out his cousin's construction company office trailer - if there was anything illegal, the trail might just start there. \n\nAs she slid into the car, she winced a little. \n\n\"My ass is still sore. So's my kitty. That's the first time I've had sex in forever, and you weren't exactly gentle. Don't think you are getting anything today.\" \n\nI raised an eyebrow. \"Gentle didn't exactly seem to be on your mind.\" \n\nShe smiled slightly in spite of her efforts to suppress it. \n\nI noticed that for the first time since I had ever met her, she had some make up on, although it was done poorly. I made a decision to alter the plan and drove to the mall. We tried to find something to talk about, but we didn't have much in common, so the conversation rattled on in fits and starts until we pulled into the mall parking lot. ",
        "She looked puzzled \"Are they here?\" \n\n\"No, but you are, and I think we can wait a while to really start the Philip Marlowe bit. We want this to hurt them, so there are a few small things we can do.\" \n\n\"Philip who..?\" \n\nI rolled my eyes - it really was amazing how little Nikki and I had in common. She caught the sardonic look. \n\n\"I don't like you. At all.\" \n\n\"I don't like you either.\" \n\n\"Bastard.\" \n\n\"Bitch.\" \n\nI led her to the makeup counter at Macy's. She glared at me dangerously. \n\n\"Think of this as disguise work.\" \n\nFor the next hour two women hovered over her and tried out a million combinations of makeup, ending up with a remarkably presentable Nikki who they had taught how to apply their products. She didn't come out exactly \"pretty\", but she managed a sort of smoldering, hungry, sexuality. It would do. The kit cost me $100 out of the grocery money, but I just wouldn't eat lunch at work for the next month and everything would be fine. \n\nWe returned to the car, with her clutching the small make up bag like it was the Holy Grail. She didn't want to like it, but she had. \n\n\"So what was that all about.\" \n\n\"If we want this to hurt them more, you need to have something Justin wants. Something he feels like he lost. And I need something Beth will resent and be jealous of. That will be you. You hide the makeup when you get home and only use it when you and I are out.\" \n\nShe looked puzzled, so I explained my whole plan. \n\nShe sat for a full minute without saying anything. \"Damn. That's a bit complicated. And it will take a long time.\" \n\nI shrugged \"You got anything better to do? Or a better plan?\" \n\nShe smiled just a bit \"Nope \n\nShe asked to stop at my house to wash off her make up so Justin wouldn't see it. She went into the bathroom, then strutted out just a couple minutes later, carrying a towel while wearing nothing but a wicked smile and the makeup she was supposed to have washed off. The evil glint in her eyes told me everything I needed to know about her intentions. \n\nI looked her over. \"I thought you said not to expect anything.\" \n\nShe smiled brightly \"It would be a shame to waste this makeup... \" She dropped the towel without any ceremony. \n\nMy verbal consent was apparently not required, since she promptly knelt between my legs, unzipped me and began to hungrily suck my cock. She made constant eye contact, and when she moved to mount me, she commented \"I love the makeup.\" We fucked on the chair for twenty minutes, slowly. Her ass was still a little too sore to play, although I really think she wished she could. \n\nWe eventually finished and headed over to her sister's house. Nikki brought her sister in as a co-conspirator. She'd apparently never liked Justin and we would need her help, a lot. \n\nFor the next few months we more or less stayed home - I worked out at work during lunch hours, she worked out at home and we worked out together in the basement until Nikki had lost the baby fat and firmed up everything else - I firmed up a lot too. We hid it from our self-involved \"spouses\" by wearing baggy clothes and simple evasion. It wasn't like they were paying much attention to us anyway. We were also having sex at least five or six times a week - more than I'd ever gotten from Beth. \n\nWe had one thing in common; we'd both been the stay-home-with-family types. So we decided to change that. On a whim, my basement became a dance studio - neither of us knew shit about it to start with. But the magic of Youtube prevailed. We had a lot of weekends and evenings available as our spouses continued to ignore us. We learned basic dance steps, then more advanced stuff. We really liked Salsa dancing, but we had to save it for near the end of our routine. Primarily because we'd end up fucking in the middle of the floor. Every. Damn. Time. \n\nOne thing I figured out pretty quickly was that I was playing with matches - Nikki wasn't very stable and had the temperament of a half feral Doberman pinscher. Her moods shifted with no warning, and almost anything could trigger a surge of unreasoning anger. All of this shit with Beth and Justin had broken something important, one of those sanity fences we have had been trampled down. I was always careful to keep one eye on her - all the time. The only time she seemed stable was when she had just been screwed to near unconsciousness or when she was around the kids - mine or hers. Her love of children was overpowering. \n\nWe fucked like angry minks constantly; Nikki found she had a fondness for oral and anal sex that she never suspected. The element of distaste in our relationship meant that there was nothing too rough or too dirty for us to try and we both took advantage of it. \n\nShe still called me \"Bastard\" and I still called her \"Bitch\", but the terms were, if not exactly loving and endearing, weirdly affectionate. \n\nBut all that was for was to make ourselves feel better. The real work had to be done as well. And we had to do that very, very carefully. \n\nCasing the construction company trailer took a month and half, and we really only managed to break into it because Justin had a key he'd left lying around and we had a copy made. Nikki made an excuse to visit the trailer during the day and managed to video the whole thing on her cell phone; turned out the cousin was too cheap to spring for an alarm system. \n\nWe slipped in on five separate evenings and photographed every document in every file drawer and began going over the documents bit by bit. More useful information turned up in Justin's desk and Beth's purse. \n\nAfter a while, neither of us argued with our spouses, which was a problem with Beth- she actually seemed to miss the arguments and seemed to try to start arguments for no reason, but I never rose to the bait. Well, almost never. \n\nFrankly, after fucking the hell out of Nikki all afternoon, I didn't have the energy reserves left to argue. It took me a while to realize that Beth probably used the arguments to self-justify her horrible behavior. She became more disconcerted by the day. Justin, on the other hand, seemed to think that Nikki had caved in and given up. \n\nI also got a good break on the money front: I'd gotten my $2000 deposit back on a vacation bungalow in a Mexican seaside resort that I had slowly built up so I could take Beth there for our anniversary - an event that obviously wasn't going to happen. I wasn't expecting them to refund it, but they did; customer relations, I guess. That money would come in handy. \n\nWhen Beth started making excuses to stay overnight with Justin, Nikki and I started hitting the occasionally dance club, slowly getting to try out the dancing moves we'd learned. It was fun, but there was stress involved too - Nikki's unpredictability was a constant strain on me. She was snappish at the best of times and could go from joyfully excited to almost psychotically angry with no warning at all if provoked. One particular night was nearly a disaster and reminded me just how careful I had to be. \n\nBy this time, after several weeks of exercise and near-daily screwing, Nikki practically radiated \"sex\", so it wasn't surprising that we often had people cut in on us while dancing. She enjoyed the attention a lot, but, not surprisingly, she was sympathetic toward abandoned girlfriends and tried to keep her sexuality banked with guys who had girlfriends. Unfortunately, some of the guys thought she would be dancing with them the same way she danced with me, which was just short of fucking on the dance floor. \n\nWe'd been cut in on by a couple at the small club, a bit back in the boondocks. I was dancing with the girl - a cute little blonde cheerleader type - while the guy was apparently trying to get his hands inside Nikki's miniskirt. She warned him off twice, but he persisted; I just caught the back of her hair as she lunged for him. \n\n\"I said STOP!\" \n\nHer raking claws had just missed his eye, leaving bloody tracks on the side of his face. With the little blonde on one side and a hissing, pissed off Nikki held by her hair, I was expecting a disaster immediately. The guy backed off quickly, wide-eyed, while Nikki slowly rotated back into me, curling her long leg around my hips, pulling her groin tight against me. \n\n\"Bastard! You pulled my hair! That hurt!\" she paused then purred \"You really do know what I like, don't you?\" \n\nShe looked over the blonde who stood frozen by me, then winked at her. \"You can do lots better than that guy Cream Puff. You deserve better, he's an asshole.\" \n\nWe headed outside at a fairly quick pace; it seemed wise given the three guys in \"Security\" t-shirts heading our way. \n\nThe parking lot was full of cars but empty of people - two rows in, I saw the scratched boyfriend and two other guys step out. \n\nHe started toward Nikki while his friends came toward me. \n\n\"Bitch.\" \n\nNikki smiled, \"I didn't realize I'd given you my name.\" \n\n\"For that shit, your boyfriend can watch me get some of what's in your panties.\" \n\nNikki pulled up like she was scared and he reached toward her, getting ready to grab both her arms. But I could see the maniacal shine in her eyes as I felt the biggest of the three come up behind me. \n\nNikki lunged - not with her arms, which he grabbed, but with her teeth, sinking them deep into the side of his face. \n\nHe screamed a high pitched scream of terror and pain. I spun. I was no MMA champion, but I'd been in more than my fair share of brawls, and I'd seen the rabid look in Nikki's eyes, so I was ready. The big guy was expecting grapple or a punch, but he was distracted by his friend's scream and was completely flat-footed when I threw a hard elbow strike toward his face. Since he was expecting a wild punch, he ducked right into the elbow, which crunched across his nose. He dropped. The second guy was stepping forward to detach Nikki from her screaming victim. So I stomped on the back of his leg just at the knee, driving him to his knees. I grabbed his head and spiked it backward like a football, letting it ring off the asphalt. Nikki's victim had tripped backward over a curb block and was covering his blood-gushing face. Huge mistake. Nikki spit out her mouthful of flesh - at least I hoped that was all of it - and stomped her spike heel into his groin. His scream rose out of human hearing. I yanked her back as she was lining up to stomp his chest. \n\n\"Nikki! Stop!\" \n\nShe fixed me with a wildly defiant look, then stopped - and smiled. Blood covered the lower half of her face and most of the front of her white tank top. Her smile was full of blood, a scene from one of those epic Hammer Studios vampire movies. She spun around and put her hands on the nearest car, standing nearly over her gasping victim. \n\n\"Fuck me. Here. Now. And I'll let him go.\" \n\nI would have never guessed that anything like this would be arousing, but I unzipped. I just pulled her thong to the side and took her from behind, while she gasped out a stream of obscenities, urging me to do it harder. To make it hurt. She was incredibly excited and wet. I pounded her as hard and fast as I could until we both climaxed - just a couple minutes, although it seemed a lot longer. As I stood back from her and zipped up, I saw a couple figures standing fifteen feet away in the lot - the little blonde and a dark haired Goth looking girl standing in shock. \n\nNikki pulled her thong down and stepped out of it, then picked it up, wiped herself with it, and threw it down in her mewling victim's face. \n\n\"There, you can have it. That's what's in my panties.\" \n\nThen she saw the stricken blonde and started for her. \n\nI wanted to grab her and run, but I knew that would trigger rage - and if I didn't get her out of here quick, we'd both be in jail by morning. She stalked over to the apparently paralyzed blonde and stood over her. \n\n\"Nikki! Be nice, she hasn't done anything wrong.\" \n\nNikki looked back at me and smiled - her face was still a bloody horror mask. \n\n\"Oh, I know she hasn't.\" \n\nShe pulled the blonde to her and kissed her - hard. I was about to intervene when I realized the blonde was kissing back fervently. Nikki slowly let her go. The blonde was staring at her as if she was hypnotized, and her face was streaked with her own boyfriend's blood. \n\n\"Believe me Cream Puff, you can do a lot better than him.\" \n\nI saw Gothgirl catch Cream Puff as her legs gave out. \n\nOnce we were in the car, Nikki pulled her tank top off and wiped her face. An ambulance blazed past about two miles out. I didn't have to guess where it was going and could only hope nobody had gotten our plates. I pulled into a rest stop to give Nikki my shirt, but getting dressed wasn't her immediate interest, so I laid the seat back and let her unzip me and ride me until she was satisfied. It took a long while. My pants were soaked with her juices before she was done. She didn't say anything for several minutes then commented. \n\n\"I'm really fucked up aren't I?\" \n\n\"We all are in some way.\" \n\n\"I really got off on that though. Hurting him felt so good.\" \n\n\"Yeah. I noticed. It's a little worrisome in a Hannibal Lector sort of way.\" \n\n\"Hurting him was like fucking. I could just let all the anger out.\" \n\n\"He earned it. Well, I'm not sure the law would agree, but I think his girl was okay with it.\" \n\nNikki giggled. \"She stuck her tongue in my mouth first.\" \n\n\"Crap, I may have some competition.\" \n\nShe paused. \"Seriously... The hurting thing? Don't let me do that again. Promise me.\" Very serious. Tears glimmered in her eyes. \n\n\"You were defending yourself.\" \n\n\"I know, but that wasn't what I was really doing. I wanted to hurt him. So, so, much. If it happens again... what if I can't stop ... what if I can't find my way back?\" She suddenly sounded like a lost little girl afraid of the dark. \n\nThat honestly scared the fuck out of me. Nikki probably needed real help - medication - hell, she probably needed to be committed. \n\nWe made the papers - the brutal attack in the parking lot was attributed to a gang of 6 men and a Hispanic woman by a witness - Cream Puff, who was apparently actually named Amber. \n\nI had to chuckle over that when I showed the story to Nikki. \n\n\"Soooo... you seem to have impressed Amber anyway.\" \n\nNikki smiled \"She seemed sweet. Strawberry lip gloss.\" \n\n\"You into girls?\" \n\n\"I didn't think I was. I was just messing with her in the club, but the parking lot was a different story. She wanted me, I could feel it, and that made me want her. I looked right in her eyes while you fucked me, and she wanted me to fuck her. I could see it in her eyes. And ever since you and I have been together, I just don't seem to have any boundaries with sex.\" \n\nAfter that incident though, Nikki seemed to fight for more self-control. It got better. Slowly, unevenly, but gradually better. I could see her fight to keep the demon down when it showed up. Sometimes she even won. \n\nWe continued to hit clubs, but kept it a lot lower key. \n\nNikki's sister couldn't watch the kids every night - and I wasn't going to give up all my time with my little angels, so Nikki brought Jaime over a lot and we \"worked out\" after tucking them in bed, checking on them occasionally until it was time for Nikki to slip away. When we stood in the doorway checking on them, I'd sometime sneak a look at Nikki and wonder at the softness in her expression that never seemed to be there any other time. And occasionally she'd catch me looking and give a sad, soft, half-smile. \n\nAt those times, her demons seemed very far away. \n\nSooner or later, I knew something would happen. Beth eventually ran into me without a shirt on and noticed my weight loss and new muscle - and commented on it. I put it off to stress which she tried to turn into an argument, but I'd already popped a shirt on and walked out of the room. Mostly I wanted to avoid her seeing Nikki's nail marks on my back and butt from the night before. I could sense she wasn't buying it. \n\nBeth's deepening suspicion meant that we had to move on to the next phase. So I told Nikki it was time for more of \"the Philip Marlowe stuff\". She rolled her eyes at me over her shoulder - I was in her ass to the hilt at the time. So, a few days later, instead of working out and sex, we had the car and a nice digital camera we'd borrowed ready to go and when Beth and Justin left, we quietly followed at a distance - it wasn't really a following job, Nikki had snagged receipts and credit card bills until we figured out their patterns. Beth was wary and cautious, but in Justin's mind, Nikki was crushed, incapable of self-defense, so he was careless and stupid. \n\nJustin's parents owned a little cabin near the shore, buried in the woods. It was bit rundown, but from car mileage it was where they went on Fridays when they skipped the gym entirely. We pulled off the road and moved quietly up to the cabin with the camera. There were no curtains, so it was no challenge to find them and watch - they were already naked on the bed by the time we got in position. Beth was sucking on Justin's prick, which I was secretly relieved to see was about the same size as mine - we all have our insecurities. I carefully and quietly snapped pictures, while Nikki and I watched. When Justin started to cum, Beth yanked her mouth away, catching much of the spray in her face and on her hair. I could see her bitching him out for not warning her, but he only laughed. I felt Nikki fumble with my jeans, tugging them down. Despite my hushed attempts to stop her, she lowered her mouth to my rod. Maybe I didn't fight her all that hard. I tried to get her to be serious but she hissed that she would stop when I shot my load in her mouth. It didn't take long given the intensity of the situation - and when she'd swallowed every bit she sat back with a very self-satisfied look and let me snap off a few more pictures. \n\nSince we had to walk back to the car, I let some of the air out of one of Justin's tires to slow them down in case they tried to leave early. We dropped the film off at a photo lab that specialized in discrete one-day photos, and then headed home. Beth arrived much later than usual, with her clothes and hair a wreck - a giggling Nikki told me the next day that Justin had changed the low tire, then, on the way home picked up a nail in the road resulting in a miserable trek in the rain to get a can of fix-a-flat from a gas station 4 miles away. \n\nAs they used to say in the Army; Payback's a bitch and her stripper name is Karma. \n\nFor the next week, we talked, really talked about what we really wanted to happen. Nikki surprised the hell out of me, but I eventually agreed. \n\nWe stayed quiet, then made our big move about three weeks later after we'd organized our evidence. Beth and Justin always disappeared all day on Saturday, but Nikki and I had pieced together their pattern. First the gym, then to the cabin for sex and a shower, then to a nightclub to dance and party. They usually ended up home about 6 or 7 in the morning on Sunday. This time, though, things would be a little different. As soon as they left, we dropped the kids off with Nikki's sister and took off. First we went shopping. Nikki picked out a skin-tight deep emerald dress with a power diving neckline and a super short hemline. The emerald green really set off her hair. I had a dark grey suit with a black t-shirt. I took her to a full hair salon and told them to \"go for it\" - hair and make-up. Dressed up, we headed over to the club. We walked in like we owned the place. Technically, the bouncer should have screened us, but Nikki looked like pure sex-on-a-stick. A million lunges gave her an ass that could stop traffic in jeans, and she wasn't wearing jeans. She was wearing a tissue paper thin dress that showed nearly everything - and it was obvious she didn't have a stitch on underneath. Her nipples were at full staff - more from her near nudity than from any hint of cold. When the light hit her just right, you could even make out the tiny heart she had shaved her pubic hair into. Since part of a bouncer's job is to make sure the crowd is interesting, we were waved in without even presenting IDs. ",
        "We hit the dance floor first. Then proceeded on to the main event. \n\nI had asked a friend to check out where Justin and Beth sat in the club - and it turned out to always be the same \"married affair table in the corner\" every Saturday. When we had danced a few songs, we headed over to \"their table', Nikki in full strut, hanging onto my arm. Beth was in a yellow dress I'd never seen, Justin in a blue suit. I'd be lying if I said Nikki looked better than Beth- Beth was tanned and elegant. Still, Nikki was spectacular, and instead of looking elegant or refined, she proudly carried a bad-girl air of pure sex and immorality that pulled in looks from across the room. \n\nI pulled out a chair at their table for Nikki, then sat down myself. Beth and Justin seemed to be frozen in absolute shock. \n\nI looked around in mock surprise \"Very nice, most gyms are less fancy.\" \n\nJustin's face darkened, glaring at Nikki. \"That dress. You spent money on...\" \n\nI cut in with an edge to my voice \"No. I did.\" I tossed the stack of cabin pictures onto the table. They were the seamiest ones I could find. Most of the pictures I had snapped were considerably kinder, they were good looking people after all. I had sorted through the stack and pulled out the absolute worst. They looked sad, awkward, and dirty. I continued \"I got back part of my deposit on a Mexican seaside resort bungalow that I was going to surprise Beth with on our anniversary. Since that isn't going to happen, I thought I'd buy something useful.\" Something flickered across Beth's face. Disappointment? Maybe. Probably at finding out there had been more money available than she had thought. \n\nLooking down at the spread of pictures, Justin finally began to sense danger. And shut up. \n\nBeth was white behind her tan. \n\n\"so how long...\" \n\n\"We've been 'working together' for almost four months.\" \n\n\"How did you find out... everything?\" \n\n\"Didn't really have to 'find out' anything. You made no effort to hide it. You just assumed we would be too crushed or too weak to do anything.\" \n\nJustin tried to regain some traction and sneered mockingly \"So what, have you fallen in love with each other?\" \n\nNikki grinned \"I don't even like him, he's a complete Bastard.\" \n\n\"And she is a total Bitch. Don't like her at all.\" \n\nNikki's grin grew wider and took on a predatory cast \"But the sex? Oh my God. That is amazing. Nothing like an angry revenge fuck. Every nasty thing you can imagine.\" She looked dead at Beth \"and a hell of a lot you never would have. I know I hadn't. But a little rejection will go a long way to convincing a girl to try all kinds of new things.\" She sing-songed that last bit as she shifted her unflinching gaze toward Justin. \n\nBeth drew back like she'd been slapped and looked over at me. \"You can't do this - we were trying to work on things.\" \n\nWell, that was unmitigated Bullshit. \n\nI laughed, but with no mirth at all \"Hardly. You were marking time until Asshole here was ready. And screwing him three or four times a week while I babysat the girls and lived like a fucking monk. I had people coming to the office to tell me the bad news for months. Not only were you cheating but you made it a fucking public spectacle. We didn't have to conduct surveillance to find you, it was like tracking an EF5 tornado - just follow the mayhem. \" \n\nI could feel anger building rapidly, but Nikki squeezed my leg. \n\nNikki, for once, was the cooler head. She took over. \"Obviously the divorces will be for adultery. It won't make any difference in money, but let's face it, it's more honest. And it will make us feel better. My new hobby will be making sure everybody in the world gets copies of the pictures and a full explanation of how you nuked your marriages: family, co-workers, employers. Fuck, I'll track down your 1<sup>st</sup> grade Sunday school teacher.\" \n\nShe focused on Justin for a second. \"By the way, shithead, I'm moving in with my sister for now. With Jaime. \" \n\nHaving gotten my head on straight, I threw in the kicker. \"A little bit more serious for you is the fact that the two of you have been embezzling money from the materials account at the construction company. It took a long time for us to work it out, but when Nikki realized you two were spending like sailors on leave, we knew it had to come from somewhere. Nikki and I have assembled more than enough proof. There are tax issues, wire fraud, even one count of mail fraud, so even if Justin's cousin is okay with it, you have a real problem. Probably enough for a five to ten in prison for you...\" pointing to Justin \"... and a couple years in jail as an accessory for you.\" pointing to Beth. \n\nWide-eyed, Beth immediately tried to defend herself \"I didn't know! I thought it was his money, I was putting it into an account to keep it out of his divorce!\" \n\nI cut her off \"Yeah, you were 'holding it for a friend.' How often does that work in court? Besides, that puts that money square into our divorce. If my name had been on that account, I'd have assumed you were setting me up. That would have ended really badly.\" \n\nBeth and Justin paled. I suspected they had considered that idea, but apparently decided not to. \n\nI offered up the counter proposal Nikki and I had worked out. \n\n\"You get one chance for a little bit better future. Justin runs for it. Quits work, and heads for the hills. At least 400 miles away. Takes his car, his clothes, his football trophies and his yearbook. Nothing else. Not one god damned thing. Nikki files for abandonment; she wouldn't get shit out of the divorce anyway with his under-the-table deal with his cousin. We don't give evidence to the cops or his cousin. If his cousin finds out on his own and takes action, tough shit. I'd recommend you put all the money you still have back into the materials account. It may make a difference in whether he starts looking for you.\" \n\nI looked at Beth \"I am filing for divorce with me having primary custody - no child support. And no maintenance. With adultery as cause. You agree to that or you go to prison and I just take full custody. As for all our shit; make a list of anything you want, but it'd better be short. You can keep your clothes. And you can keep all those fucking shoes.\" \n\nNikki broke in. \"He offered me your stuff, but the shoes are too small and the clothes suck. I stopped wearing underwear around him, so you can keep your granny panties.\" \n\nI sent a mock glare at Nikki as Beth struggled not to hyperventilate. \n\nI continued. \"Get a fucking job, move in with your parents - or whoever, at this point I don't care. You'll get plenty of visitation with the kids. I won't block that, you used to be a halfway decent mom. I won't even tell your parents what happened.\" \n\nI made eye contact with them carefully, to make sure they were paying attention \"It's a one-time offer. Expires tomorrow at midnight. If Justin's fucking ass isn't on the fucking road by then, we turn everything over to his cousin, and the cops. The offer only stays in effect if both of you agree.\" \n\nNikki leaned forward, putting her spectacular cleavage on display. Probably for Beth's benefit. \n\n\"You guys have managed one amazing achievement. The two of us. We were serious when we said we had nothing in common. We couldn't agree on a movie to save our lives, hate each other's music and if he talked about any of his hobbies, I would slip into a coma.\" \n\n\"And she is a shallow, emotional harpy whose voice grates on my nerves like broken glass.\" I added. \n\nNikki continued, locking eyes with Justin like a serpent with its prey \"So when we got together when we weren't figuring out how to fuck you over, we were only doing one thing. Fucking each other's brain's out in every twisted way possible. If we ate dinner together it was to get enough energy up to fuck again.\" \n\nShe looked at Beth. \"I can't believe you abandoned him for this piece of shit. I'm not bluffing, if you think so, come along with us some time and you can watch. It would probably make it hotter. If that's even possible. But having you watch me get ass-fucked by your husband would be completely insane, so just give me a call anytime if you want to see. \" \n\nI looked at my watch and broke in \"Remember the deal. Sorry, we have to be going so I can pick up the kids.\" \n\nI stood up and held my hand out for Nikki to stand. She did, and then leaned over to them. \n\n\"Go ahead and have sex again - we're stopping on the way back and I'm getting fucked every way possible.\" \n\nHateful woman. \n\nShe wasn't lying or exaggerating though - we stopped at a hotel and she was absolutely nuclear hot. Apparently telling Justin and Beth off had turned her on to full blast - hell she was fingering herself in the car before we got out of the parking lot. She actually peeled her dress off over her head while I was still opening the hotel door and walked in wearing just high heels. Following her lead, my clothes were piled next to her dress on the floor in seconds. There really wasn't any speaking at all, other than the obligatory moans, groans and screams. Within an hour we were headed back home; we had outdone ourselves. \n\nSomething in Nikki had changed though - maybe it was confronting Justin and Beth, but the crazy anger seemed to be gone. Just gone. She was still as sex driven as ever, but that glittering edge of true madness wasn't there. \n\nBeth damn near beat me home - I'd just tucked the kids into bed when she flew in the front door. And paused. I hadn't showered on purpose, and I reeked of Nikki - and Beth had always had a sensitive nose. Air freshener had been a major player in keeping our secret. \n\n\"We need to talk.\" \n\nI dropped into the easy chair. \"We needed to talk months ago.\" \n\n\"Look, can we step back a bit? You can't just let that bitch destroy our...\" \n\n\"Stop\" I held my hand up \"the only bitch who destroyed this marriage is standing in front of me!\" \n\nShe gawped at me, a particularly unattractive look. Rare for her. \n\nI continued \"You really don't get it Beth. You got a sweetheart deal compared to Justin for a reason. Nikki bargained for you, she begged and pleaded on your behalf. She tried to make Justin the real villain in this mess. And you have no idea how hard that was for her - she hated you with every fiber of her being, but she still did it. She feels like her train wreck caused ours. I'm not even sure I agree with that, but I made the deal. Because she begged me to.\" \n\nI paused, catching my anger before it exploded. Then in measured tones: \n\n\"If that money laundering account had been set up in my name, or if the DNA test on the twins had come back different, we wouldn't be talking. They're pouring a factory foundation on Fifth Street and I have a copy of the key to the site. You and Asshole would have just disappeared. Nikki could have begged all she wanted and it wouldn't have mattered.\" \n\nShe blinked, suddenly horribly aware of how alone we were. \"How much time do I have to move out?\" \n\n\"I should give you the til midnight tomorrow, just for the fucking elegant symmetry of it all, but I'll give you a week. It'll take two days just to box up all those shoes. And God knows I want those gone.\" \n\nShe mumbled something about being sorry, then headed up the stairs. She only took five days to move out, and I was alone with the kids. Even with the twins, things felt pretty empty. \n\nI heard Justin's cousin was looking for him, but hadn't called the cops. I hoped he was well hidden. His cousin had always had a propensity for violence. \n\nI may have cheated a little on my promise not to let his cousin know. \n\nTwo weeks after that, I let the twins stay with Beth and her parents for the weekend; they were clear on the rules and Beth was just as clear that the retribution for any bullshit would be a quick trip to prison. \n\nAlmost at midnight there was a pounding at the door. When I opened it, Nikki was standing there in full warpaint and club clothes, looking almost giddy. At least someone was adjusting. \n\n\"So is she gone? \n\nI nodded. \"Back with her parents, trying to explain away a mysterious copy of a divorce petition with 'Homewrecking Slut' written all over it in bright red lipstick. Thanks for sending that.\" \n\nNikki grinned her crazy grin \"Great! I wanted to do something nice for her. Give them something to talk about.\" \n\nI chuckled. I'd promised not to say anything to Beth's parents, but Nikki hadn't. In fact, she'd promised the opposite. So a whole series of packets had gone out to Beth's friends and family. With pictures. I doubt she'd ever really live it down.  \n\nNikki's smiled broadened wickedly \"Hey, I brought a housewarming gift!\" \n\nI almost corrected her; after all I hadn't moved, but in some ways she was right, the house felt new. \n\n\"Thought we could share dessert.\" \n\nA familiar blonde-capped face peeked out from behind her. \n\n\"I brought a cream puff.\" \n\nPoor, poor, Amber. She wasn't terribly experienced, and the two of us pretty much shared her like the confection she was. We pulled her into our tempest - she wasn't a partner so much as an accelerant on an open flame. \n\nNot that she was complaining, after everything Nikki and I had done with each other over the past months, we were able to give Amber a graduate course in orgasms - she passed out twice. Nikki was smiling like that cat that ate the canary the next morning as she helped Amber, who could barely walk on her still wobbly legs, out to her car. \n\nA few nights later, Nikki came over alone. \n\nA few night later, she came over with Jaime. \n\nAfter the children were asleep, she wordlessly pulled me straight into the bedroom. We moved slower this time - much slower. Afterwards I lay there staring at the ceiling with her head resting on my shoulder as her finger traced a pattern across my chest. \n\n\"We can't keep doing this Nikki.\" \n\nI felt her stiffen. \n\nI continued. \"We kind of had an agreement. I know we never talked about it directly, but I think we agreed we had 'nothing in common'. No feelings. And I'm kind of having a problem with that.\" \n\nSilence. \n\nThen Quietly. \"Bastard.\" \n\nThen I felt her crazy, familiar smile against my shoulder, as her nail traced out a heart over mine.. \n\n\"You must have been a slow learner as a kid. Did they have to bring in a specialist to teach you to walk?\" \n\n\"Bitch.\" \n\nPost Production Notes: There it is, my version of a BTB with some graphic sex. I just had to write one to see what it was like. \n\nWhat a ride. Shifted back and forth on the ending a dozen times - RAAC? Shallow graves under a foundation on 5<sup>th</sup> Street? Maybe prison for the cheaters? \n\nIn the end, I let Nikki choose. She was the most hurt after all. She'd lost her husband, her self-respect and, at least to some degree, her sanity. So I just asked her. \n\nBeth maybe isn't as burned as some would want, but that was Nikki's choice. And Nikki's complicated and possibly insane, so it's really hard to understand her choice here. Maybe she believes in a little chance of redemption, at least for some. Or maybe, she wants Beth to be able to see what she's lost to her; and make no mistake, Beth's lost everything she really valued. Nikki made damned sure of that. And I'm sure it wouldn't be as satisfying to Nikki if Beth were in prison - Nikki wouldn't be able to enjoy the show. Nikki will even have real control over Beth's access to her own daughters, given some time. This whole thing, from that first day standing in the rain may have been all her plan, all along. I'm frankly not sure, and I don't want to ask. She just might answer. \n\nNikki has a permanent place in my heart, probably a more than any of the other female characters I've written. She may not be as pretty as Beth, but so fucking what? She loves fiercely and completely and she won't let go now until she falls to dust. I'm sure she brings Amber back many times - but Amber's no threat to their relationship; she's something Nikki wants to share with the man she loves. As Nikki said, Amber is pretty much a treat - that extra slice of cheesecake you couldn't eat on your own, but are happy to share. Nikki just expresses her love a little unconventionally. Sure, she's manipulative, and crazy, maybe even dangerously so, but aren't all the good ones?"
    ],
    "authorname": "Todd172",
    "tags": [
        "betrayal",
        "revenge",
        "violent",
        "btb",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-harpy-1"
}