{
    "title": "The Writer's Muse Ch. 02",
    "pages": [
        "Thank you for the comments and emails about the first part of The Writer's Muse. \n\nIt certainly is a challenge to write about situations of which one has no experience and I hope I have done it justice even if it is taking longer to write. \n\nOnce again I caution anyone who is not interested in sexual acts with a transgender female to go elsewhere. \n\nLB \n\nChapter 10 \n\nI wait in bed while she spends a long time in the bathroom freshening herself up after her mammoth crying session. She looks nervous as she re-enters the room as though I might change my mind about her sleeping in the bed but I smile at her and flip the covers open. She returns a shy smile and turns off the light, before lying down as far from me as possible with her back to me. \n\nI chuckle and roll onto my side facing her back. \n\n\"You'll fall out of bed if you move any further away. Come on, back here, we need to cuddle while we talk.\" \n\nIn the diffuse light through the curtains I can see her lift her head and peer over her shoulder. Her voice is unsure. \n\n\"You don't have to do that ... \" \n\n\"But we can't just ignore it ...\" \n\n\"No ... cuddle me ... I mean.\" \n\n\"But I like cuddling with you and given that you gave me a handjob ... and a bit of a blowjob as well ... I think our relationship has moved to a cuddling one ... don't you?\" \n\n\"But ... that was before ... before I ... I didn't ... I wasn't honest with you ... before you knew I was Trans.\" \n\n\"So ... because just about every one else in the world that you have told, or have found out for themselves, that you are a Trans female suddenly treats you differently ... you think I will as well. Is that it?\" \n\n\"Welll ... yes ... why wouldn't you? I'm not who you thought I was ... and a lot of straight men ... \" \n\nShe is silent, leaving the obvious truth hanging. \n\n\"I can't say that I wasn't shocked and a bit confused ... but ...\" \n\nI struggle to compose the next bit because I can't quite believe how I am feeling myself. Chloe rolls over to face me so we are almost touching. I can tell that she is waiting for me to finish my sentence. I don't and she prompts me. \n\n\"But ... what?\" \n\n\"Umm ... well, my confusion was as much to do with the fact that ... I found touching you like that ... very sexy. That's why I came so hard.\" \n\nChloe gasps quietly and I see her eyes widen. \n\n\"You liked the fact that I had balls ... and a cock?\" \n\n\"Err ... yes. I might even have been expecting it, I guess. When I first saw you ... in the shelter ... when all I could see was your face ... I thought you were attractive, especially when you smiled ... beautiful even ... but I couldn't tell if you were a girl or boy until I saw you had boobs when you took your coat off. However, I know I would still have been attracted to you, physically, if you had turned out to be male ... and that is something that has never happened to me before ... no bi-curious moments at all, even as an adolescent.\" \n\nI can hear the surprised amusement in her voice. \n\n\"It's never too late for new experiences and I guess you've got the best of both worlds then ... boobs and balls in one package.\" \n\nI chuckle self-consciously. \n\n\"If you put it that way ... I guess you are right .. but my attraction to you isn't just physical ... I like you as a person ... we seem to be on the same wavelength ...\" \n\nShe silences me with a gentle kiss and I can see her eyes shining with humour when she backs off. \n\n\"It's OK, you had me at 'I like your balls'\" \n\nShe giggles and I can't do anything but chuckle with her as she pushes me so I roll onto my back and then inserts herself into the crook of my arm. She throws her left leg over the top of mine and is almost lying on top of me and I feel her soft boobs against my side and the definite presence of her genitals against my hip. She strokes her hand across my chest in a gentle caress. \n\nOnce again I find her nearness and scent intoxicating, made doubly so by the knowledge of who and what she is. I start to get hard, I don't know if she is aware of that fact but her voice betrays that she is happy and relaxed. \n\n\"There, you wanted to cuddle ... and by the way, I like cuddling with you ... \" \n\nShe is silent for a moment. \n\n\"I guess you want to know the gory details, huh?\" \n\n\"Only if you want to tell me sweetheart.\" \n\n\"I think I'll leave some bits out for the moment ... I still worry that you'll end up getting hurt because of me. I hope you don't mind?\" \n\nI can't say I'm surprised by this but hope that she will confide in me at some point in the future so that we can try and sort out the problem, I tell her so. She insists that it is better this way but kisses me gently on the cheek and whispers her thanks for my desire to help her. \n\n\"I started to think about transitioning when I was 17. I knew I was uncomfortable in my body since forever but it wasn't until I was forced to play the part of a girl in a school play at the age of 15 that I realised my true orientation. I went to an all-boys boarding school and because I was small and no one else wanted to do them I always got the female roles but after that first time, I volunteered. I was in heaven, especially the period dramas with all the lace and finery ... not practical for everyday cross-dressing though but I really started to identify with myself when dressed as a girl.\" \n\nShe sounds wistful as she goes quiet for a while. \n\n\"I started going to various CD clubs, especially in London, during exeat weekends and school holidays. Even though I was underage there was always someone who would get me in and I learnt quite a bit about make up and how to behave like a woman when dressed up. My face was ... is ... quite feminine ... so it was easy to pull off the transformation ... actually I was introduced as 'Chloe' to one of my teachers in one club and he didn't know it was me ... and I didn't tell him because he wasn't very nice and I had no desire to be his fuck-toy for the rest of my time at school. \n\n\"I knew I was gay and lost my virginity to an older boy at school when I was 14 but once I gravitated to the clubs, I found I was attracted to older men much more than the immature guys my own age. It was one of these older lovers who suggested I should think about transitioning when I was 17 and I started seeing a therapist who set me on the right path ... introduction to plastic surgeons, prescriptions for the HRT and the like. I knew I couldn't do it all the while I was at school ... so I waited until I'd finished my 'A' levels and was back home for the summer before going to uni, although I did start the HRT a few weeks earlier and had been growing my hair for about a year. My father was away ... umm ... on business ... when I got back home ... he was away a lot of the time ... and I had about 3 weeks to do the other stuff ... laser hair removal, tracheal shave, some buttock reshaping and a bit of lip filling before he got back so I could present the new me to him. \n\n\"To be honest I knew he was going to shit a brick but I had not expected the reaction I got. I'd dressed up in my nicest clothes, demure stuff like I was at a garden party and nothing like I wore in the clubs ... Jesus, I really dressed a bit slutty back then... but anyway ... I hoped he would listen to what I had to say and while I didn't expect him to like it, I hoped he would at least accept the fact that I had made the right decision for myself. \n\n\"No such luck! He took one look at me waiting in the hallway when he arrived and said 'Who the fuck are you?' ... at least he didn't recognise me straight away ... but that was as good as it got. When I told him who I was and tried to say my bit about transitioning he was furious. He didn't let me finish and walked over and punched me in the face; he would have hit me more if I hadn't fallen to the floor. He stood over me and told me to get out of his house and never come back and then walked away. I have a separate trust fund from my maternal grandparents so he couldn't cut me off financially but from then on all communication was done through lawyers and I never spoke to him again ... he died last year ... \" \n\nChloe is quiet as she reflects on this chapter of her life and I feel hot tears splash onto my chest. I caress and kiss her her to soothe her anguish. She hugs me back and sniffles her thanks. \n\n\"The punch broke my jaw so I took the opportunity to have some work done to soften my chin, not that I really needed it. My father insisted I change my name and I was not allowed to tell anyone who my parents were as he didn't want any bad publicity .. the selfish prick ... all he could think about was the negative impact on him ... no consideration for the fact that I was now much happier for who I was. \n\n\"I went to uni as a girl and made new friends, especially amongst the LGBT community but also met a nice straight guy there who accepted me for who I was ... I'm sorry, I lied to you about not having a boyfriend ... I just didn't want to give too much away.\" \n\nShe lifts her head to check on whether I'm looking angry and I give a nod of acceptance ... at least I understand why she looked uncomfortable at the time but I'm surprised that I didn't pick up on that lie. Perhaps it has something to do with the fact I was subconsciously hoping she wasn't in a relationship. \n\n\"Anyway, we stayed together for the three years at uni and decided to get married after we graduated ... we had to do it secretly because his parents were not happy when they found out I was Trans when we were dating and living together.\" \n\nI am more than slightly perturbed by the revelation of the marriage ... after all she did give me a hand / blow job and we're cuddling like lovers. \n\n\"So, you've been married ... for what ... 3 or 4 years?\" \n\n\"Well ... yes ... and ... no. After we were married he had a lot of family pressure put on him to get a divorce or he would be disinherited. He resisted for about a year but it was always a flash point between us if we had arguments about other things and I could tell he resented me in those moments. I didn't want our love to disintegrate into hate ... so after a while I told him that we should separate while we still had some affection for each other ... he agreed and about 2 years ago we split up ...\" \n\nMore quiet sobbing ... more caressing and kissing on my part to soothe her. \n\n\" ... but I never received any divorce papers ... I think I'm still married ... and ... err ... I haven't seen him or heard from him ... nothing ... until two weeks ago ... but ... \" \n\nI feel sure that she wants to say more but I don't push it as she obviously wants to keep some things secret for the moment. I decide not to probe further. \n\n\"It's OK, you don't have to say anything more. Let's just leave it there for now. Tell me more when you feel you can.\" \n\nShe nods and remains quiet and after about 5 minutes I realise she has fallen asleep. I smile contentedly to myself because at least I give her enough comfort and security to be able to do that. I stroke her stubbly scalp and kiss her forehead and she snuggles closer and mutters 'love you' in her sleep. \n\nI'm surprised at how delighted I am at those subconscious words, even if she probably didn't mean them and whisper 'love you too' back at her and finally fall asleep. \n\nChapter 11 \n\nI wake before Chloe and I leave her hugging the duvet and muttering about it being too early to get up. I make tea for both of us and take it back to bed and she immediately moves back into my arms for a cuddle, only to grumble sleepily about me being cold but doesn't move away. \n\nI remain awake revelling in the myriad thoughts and sensations of the simple act of holding a sexy, sleepy girl in my arms. I realise I can fall heavily for her and that may not be sensible given the circumstances and her hidden past. I reflect that I have obviously got over the shock of discovering she is transgender but that other things might conspire against our relationship ... the age difference for one as I'm probably just about old enough to be her father. That thought sets me thinking about her own father's reaction to her desire to transition and agree with Chloe's assessment that he was a selfish prick. \n\nMy investigative juices then start to flow as I try to join a few dots. Her father was obviously in the public eye if he didn't want bad publicity .. a politician perhaps ... but would having a transgender daughter be that much of a negative thing in the 21<sup>st</sup> century? Maybe if he was a rabid conservative evangelical Christian perhaps but there aren't that many prominent ones in the UK ... it would be a possible problem in the US but she's a Brit. I try to think back on well-known right-wing politicians who have died in the last year or two and can't come up with any obvious candidate. \n\nShe obviously comes from a moneyed family on her mother's side if she has a trust fund from her grandparents that has paid for a lot of the cost of transitioning ... which can't be cheap. I start to think of rich people ... entrepreneurs, celebrities, captains of industry and the like who have died recently and who were already widowed. Once again I come up with a blank and decide I need to do a bit of googling or get the research team at the paper on it. Although I'm on sabbatical I've carte blanche from the editor to file stories if I come across them and there could be a very interesting one here. \n\nI then berate myself for even thinking about using Chloe and her story to further my career ... this is someone who I like and care about for fuck's sake and exposing the story could put her in harm's way if what she says about 'he' is true. No, I will stick to google and leave the paper out of it until after it is all over ... if it ever is. \n\nShe moves in her sleep and gives one of those gentle snores that I find endearing and I hug her tighter as a silent apology for even thinking about doing a story on her. The sky through the curtains is now lighter I look over at the clock and see that is 8.30 and speak softly to wake her gently. \n\n\"Your tea is getting cold and my writing manager will have my guts if I don't get on with the book.\" \n\nShe harrumphs and her voice is sleep-tinged against my shoulder. \n\n\"She sounds like a real cow. I think you should sack her then we could stay in bed all day ... I could get used to waking up like this ... a cup of tea and a warm, sexy man cuddling me ... what more could a girl want?\" \n\nShe opens a bleary eye and makes a face at me. \n\n\"However, I need the loo ... and you, mister have a book to write ... so get your lazy arse in gear and stop laying around in bed with some floozy.\" \n\nI cannot help but smile at her transformation as she slides to the edge of the bed and stands up. \n\n\"You have a bit of a high opinion of yourself don't you. Are you sure you are up to 'floozy' status.\" \n\nChloe looks back at me and sticks her tongue out screwing her face up in an adorably childish show of mock displeasure. She starts to do the crab walk like yesterday morning but then smiles self-consciously and walks normally to the door. I notice the bulge of her morning glory against the bottom of her T shirt and catcall. \n\n\"Woo hoo ... nice package!\" \n\nShe blushes furiously and turns her back to me and stops. Her voice is uncertain. \n\n\"Are you sure you are OK with this ... me having a ... cock and all.\" \n\nI realise I have pushed it too far and leap out of bed and wrap my arms around her from behind. I kiss the top of her head as I hug her. \n\n\"I'm sorry to tease sweetheart ... YES, of course I'm all right with it. It's part of you and I'm rather fond of you ... so ... I rather like your cock.\" \n\nThose are words that I never thought I would utter! \n\nI decide that I need to emphasise the point and feeling very surprised at myself, I let my right hand slide down over her stomach and gently stroke the hard, not inconsiderable, shaft that I find there. We both gasp at the first touch and Chloe swivels her head to look at me in amazement as I cup her small breast with my left hand. \n\n\"O ... M ... G ... George Reynolds, what the fuck are you doing?\" \n\n\"I'm stroking your cock Chloe ... err ... fuck ... I don't even know your surname ...\" \n\n\"Duguid ... Chloe Duguid ... George ...\" \n\n\"Ahh ... yes ... well, Chloe Duguid ... pleased to meet you ... I guess what I'm doing is addressing the elephant in the room.\" \n\nI can see the trap I just walked into the moment the words left my mouth as she starts to giggle. \n\n\"It's not that big ... you don't need to flatter me ...\" \n\nI'm trying not to break out into laughter myself but it is difficult, especially as my hand is still wrapped around her erection. \n\n\"Well, it's the biggest one I've ever felt ... apart from my own that is.\" \n\nShe's still laughing and I'm close to guffawing myself as I desperately try to keep a straight face. \n\n\"Felt many cocks recently then George? What's the sample size ... an elephant sample? Jesus that would be a lot of cum ...!\" \n\nI can't hold it in any more and tears of laughter are streaming down my face in seconds. Chloe joins in with the hysteria and turns in my arms and leans against my chest for support as her body is racked with paroxysms of laughter. I shuffle us towards the bed and fall backwards and Chloe lands on top of me. I hold her tight as our mirth subsides and find my hands caressing her back in gentle pleasure at our physical closeness. \n\nAnd what physical closeness. \n\nChloe's breasts are cushioned against my chest, her arms are under my shoulders, and her legs are now straddling my hips. Her groin is rubbing against mine and the realisation that our erect cocks are nestling against each other hits me and I hold back a gasp at the thought. I run my hands down her back and find her firm buttocks and grind her against me. \n\nShe lifts her head with a 'what the fuck are you doing' look in her smoky eyes and I bend my head up to kiss her parted mouth and caress her lips with my tongue. Her own tongue comes out to play with mine and together they begin a slow sensual dance in and out of mouths, sliding over and around each other. Our bodies melt together and my hands caress her bum and run under her T shirt up the warm skin of her body. She wraps her own arms round my head and the kiss deepens but remains slow and loving as we rub against each other. \n\nThe kiss ends slowly with both of us drawing back with our eyes fixed onto each other. \n\n\"You OK like this?\" \n\nShe gives a short laugh and grinds her own hips down at me to emphasise the point. We both draw in a little moan as her eyes search mine. \n\n\"Duh! But are YOU sure you want to be doing this?\" \n\nI nod with certainty. \n\n\"Yes, but I think we need to lose your knickers for what I have in mind.\" \n\nHer eyes widen with surprise and then narrow with laughter as I place my hands on the waistband of her boy-shorts and start to work them over her hips. She lifts up slightly to allow me better access but the tip of her erection gets caught on the waistband and without thinking I reach in to her knickers to free it. \n\nMy hand grasps the solid meat of her cock and I freeze with the realisation that I'm skin to skin with a penis that is not my own for the first time. \n\nI gasp and my gaze locks with Chloe. I can see quizzical amusement playing on her face and I realise she's equally surprised at what I just did and is challenging me as to what I do next. I release the breath that I've been holding in and smirk back at her as I pull the waistband away and down from her cock but keep hold of the warm tube of flesh that feels so soft but so solid in my hand. \n\nI watch Chloe's face as I gently but deliberately make a circle with my thumb and fingers and stroke the helmet causing her eyes to go cloudy with desire and she whimpers and catches her bottom lip with her teeth. She looks so sexy. ",
        "Her voice is full of lust. \n\n\"What are you doing to me George? This is not supposed to happen ... \" \n\nDespite her words she makes no attempt to move away from my stroking hand and stays in place as I continue to run my hand up and down her shaft and over the head. I feel the first signs of lubrication coat her glans and gently smear it over the crown and down her hard rod. She shivers at my touch. \n\n\"What isn't supposed to happen, Chloe?\" \n\nHer breath is starting to come in quick pants as she becomes more aroused and her eyes narrow. \n\n\"YOU ... you are not supposed to happen ... my life is too complicated ... for a sexy, goody two-shoes straight guy ... who ... fuckkkkk ... turns me on and ... makes me and my girly cock feel sooooo good.\" \n\nMy wrist is getting cramped in this position so I roll her onto her back and bend to kiss her softly and our tongues greet each other like long lost friends. She moans into my mouth as my hand now has better access to caress all the way down her shaft to fondle her balls which are tight against her body ... she's obviously ready to come. I pull away from the kiss and smile into her eyes which, despite her worried words, are full of delight and encouragement. I run my hand along her hard shaft and up to the head of her cock. \n\n\"Are you going to come for me sexy Chloe? Are you going to come all over my hand as I stroke this lovely hard cock?\" \n\nShe nods and whimpers, closing her eyes as she bites her bottom lip and the arm round my neck flexes tighter. I continue to run my hand up and around the length of her cock, caressing her balls on each downstroke. Her breathing is a staccato ... uh ...uh ... uh ... and I think it is the sexiest noise I have ever heard from a lover. I look away from her face and see the points of her hard nipples tenting the T shirt and bend to gently bite one through the fabric. \n\nThis is too much for her and her hips start thrusting her needy erection through my encircling fingers as she pushes my head firmly against her breast. Her voice is a high pitched whine \n\n\"Fuckkk ... George ... commmminnggg ... fuckkk ... yessss ... commmingggg!\" \n\nI feel the first pulse of semen travel up her hard cock before the spurt lands on my arm. I quickly adjust my grip to hold just the upper part of her shaft and caress the sensitive head ... this is something I like so I'm hoping it works for her too. Her hip movements are erratic but the pulses keep on coming and I sense her fluids spraying against her stomach as I continue to suck and bite her diamond hard nipple. \n\nHer movements slow and she moans as I gently continue to stroke the crown of her penis with the final dribbles of come oozing out onto my fingers and the taut flesh starting to soften. The hand on the back of my head is now scrabbling to pull my face to hers and our mouths collide in a frantic collision, tongues working overtime to defeat the other in a pointless battle that every contestant feels like they won. \n\nThe kiss changes and slows and we make out lovingly until we break the kiss, both of us drawing back, mouths parted in a loving smile. Our gazes stay locked onto each other. Chloe's voice is a hoarse whisper. \n\n\"Fuck, George ... what have you done now?\" \n\nI grin down at her. \n\n\"Something that you seemed to enjoy ... and I enjoyed giving it to you.\" \n\nI bring my jism covered hand up to my face and look at the strands of semen that are caught there. In my peripheral vision I see her looking at it and then at my face and then back to my hand. Feeling incredibly liberated and adventurous I push the boundary of my own behaviour and lick at the salty, sticky mess. I hear her gasp and her eyes are round with shock when I grin at her with my finger still in my mouth. \n\nI offer her another come encrusted finger and she hesitates before closing her eyes and accepting the digit into her mouth. She shudders and moans and I don't know whether that is in disgust or lust until her eyes spring open and she's pulling my head down to kiss me voraciously as we swap spit and the residue of her come. \n\nShe pulls back and smiles mischievously at me. \n\n\"Who would have thought ... George Reynolds is a cum-slut!\" \n\nI try to look offended but the reality of the situation is that if this is to be a mutually loving sexual relationship, then I'm going to have to get used to the taste of semen ... sometimes directly from the source! \n\nChapter 12 \n\nWe kiss and cuddle a bit more before she laughs self-consciously and tells me that she really does need the bathroom and gets out of bed. After a while I hear the toilet flush and then the shower start. I think about joining her under the water but it is a small over-bath shower and the water pressure is shite so one of us would always be cold. I think of the large walk-in shower in my apartment in London and imagine us making out ... nay, fucking under the multi-jet shower-head system. \n\nThose thoughts get me thinking more about what happens when I ... we ... finish here in Felixstowe in two week's time and whether our budding relationship continues. This, of course, depends on many factors. Does Chloe want it to ... I know I do ... and more importantly, can we get past the problems she seems to have with 'he'?\" That needs resolution as she cannot be living constantly looking over her shoulder. \n\nI hear the shower stop and after a while Chloe comes back into the bedroom with a towel wrapped around her slim body. She screws up her face in, what I hope, is mock-disgust and not the real thing. \n\n\"What are you still doing in bed? You have a book to write so get your arse in gear!\" \n\nI sigh. So much for post-coital relaxation ... not that we had coitus and I certainly didn't get off, my cock is still aligned vertically with the stars. The fleeting thought of sex under a shower evaporates and I grumble wordlessly as I throw off the duvet and put my legs over the edge of the bed. \n\nChloe realises she has broken the mood and looks contrite. \n\n\"Sorry George ... that didn't come out right ... it was unfair of me ... you made me come wonderfully and I'm being a bitch.\" \n\nI shrug non-committally and stand up to slip off my underpants. Chloe's eyes widen with guilty concern when she sees my still-rampant erection. She steps forward and pushes me back to a sitting position on the bed before kneeling between my legs, looking up at my face with a sexy smile. \n\n\"I left you hanging ... how selfish of me ... let me take care of that for you.\" \n\nI'm not about to say NO and she licks her lips in anticipation as she reaches a hand to gently stroke my shaft from the angry purple head to the heavy ball-sack. All thoughts of being moody with her evaporate in an instant and I moan and watch spellbound as she bends her neck and feel her lips kissing the tip of my cock. I can see her dark eyes are cloudy with lust before she gently circles the helmet with her sexy mouth, fluttering her tongue on the sensitive spot underneath. I buck my hips upwards in response trying to force more into her wet mouth. \n\nI feel her giggle around my cock and she lifts her head and smiles wantonly at me. \n\n\"Easy, tiger! I can deep-throat but I need to work up to it with this big boy. You can face fuck me another day, OK?\" \n\nHell yeah! \n\nMy eyes go wide at the thought but words fail me as Chloe gives me a sultry look before she turns her attention back to the hard cock she holds in her hand. She parts her lips and guides the head into her mouth. \n\nChloe's mouth is hot as she closes her lips around my shaft and sucks on the head and I am mindful of not thrusting my hips, but place my hands on her head so that I can gently push her down onto my cock. \n\nShe works slowly and seems to be enjoying it as much as I am as the feel of her tongue sliding around the crown and caressing under the glans is overpowering. She sucks up my lubrication as it oozes out and she cups and massage my balls and strokes the exposed shaft with the other hand. I try manfully to resist moving my hips but it's impossible as I get closer to exploding in orgasm from the delicious sensation of her mouth on my cock. I'm too rough as I get close to orgasm and she chokes and I pull her up to kiss her teary face. \n\n\"Sorry babe, I'm too wound up and I worry that I'll hurt you.\" \n\nShe shakes her head and kneels on the bed straddling my lap before wrapping her arms round my head and kissing me back. \n\n\"Don't be silly, I'm OK, but we do need to lose some of that stress before you start to work.\" \n\nI nod enthusiastically at her and reach up to where the towel is tucked in but she blushes and grabs it over her boobs. \n\n\"What's the matter? \n\nShe looks away in embarrassment and her voice is a shy whisper. \n\n\"My boobs, they're not very big ... the HRT only goes so far and I worry about implants ...\" \n\nI shake my head and smile at her before hugging her tighter to me. \n\n\"Chloe, you are so silly. I think they're beautiful ... they are part of you so they must be beautiful.\" \n\nShe rolls her eyes and grins at my cheesy line but does not stop me this time as I undo the knot of the towel. She's biting her lip with concern as I look down at the source of her embarrassment and see her lovely breasts clearly for the first time. They are small but are not just cones on her chest as they have weight giving them a slight tear drop shape. The nipples are surprisingly large and slightly upturned and I bend my head to capture one hard nub between my lips and teeth. Chloe hisses with delight as I swab it with my tongue and suck gently and I feel it hardening still further in my mouth. I caress the other one with fingers and then switch attention until they are both wet with my saliva and standing proud of the small areola that surround them. \n\nI look back at her face and see that she is still looking shyly at me. \n\n\"See, told you so ... absolutely gorgeous ... \" \n\nShe bends forward to kiss me softly and whisper in my ear. \n\n\"You're very good for a girl's ego, George Reynolds, I think you might be a keeper. Now, lay back and I'll take care of this problem.\" \n\nShe pushes me back onto the bed and her left hand makes a beeline for my cock which is hard enough to cut steel and the right hand is scrabbling at the drawer to the bedside table from which she grabs a bottle of lube. It wasn't there before so she must have bought it yesterday... my mind works out that she was thinking about us having sex for at least a day ... the forward minx! I then realise she had done it before I knew she was Trans. \n\nI look at her and nod at the lube and raise a quizzical eyebrow. She looks guilty and blushes. I decide to wind her up and keep a straight face. \n\n\"Came prepared did you? Thought I was going to be an easy lay?\" \n\nIf she was standing up she would be shifting from foot to foot in confusion and embarrassment but as it is, the nervous twitch of her hips on my groin is doing wonders for me as our two cocks rub together. \n\n\"Umm ... I ... err ... hoped ... I wanted to ...\" \n\nI can't keep up the pretence and I grin at her and she realises that she's been played and sticks her tongue out at me and play punches my chest. \n\n\"Think yourself so funny don't you?\" \n\nI laugh and despite her mock resistance, pull her down for a kiss which starts as a gentle collision of lips and tongues that communicate ... love ... there is no other description. In less than three days we have moved swiftly from 'strangers meeting' to 'comfortable in each other's company' and have now rushed past 'platonic' into 'physical attraction' leaving 'infatuation' in our wake, to reach a feeling of mutual acceptance that we are 'in love'. \n\nWe break apart frequently and look deeply into each other's eyes to reaffirm that unspoken bond as we take turns to shower butterfly kisses onto each other as our bodies writhe slowly against each other. The feel of our two shafts rubbing together is incredible and this prompts something in Chloe's mind as she breaks the kiss and looks at me with a knowing smirk and resumes her kneeling position. She flips open the bottle of lube and squirts some into the palm of her hand before lowering it to encompass my straining erection which she coats liberally with the cold liquid. I watch and feel her slippery hand glide sensuously up and down my cock as she pays special attention to the swollen head which is now deep purple. \n\nI am panting as I know that I'm once again at the point where my orgasm is imminent and Chloe hastens the impending climax by capturing her own hard shaft in the same hand allowing them to rub firmly together. \n\nThe sight and feel of her lovely cock against mine is the single most erotic thing I have experienced to this point in my life. My voice is a croaky whisper, full of awe. \n\n\"That is so fucking sexy.\" \n\nI look back up at Chloe and our gazes lock. She reaches for my hand and moulds it around our two shafts and slowly moves it up and down with her own hand. \n\nThis is too much for me and I bellow out an unintelligible cry as my eyes close in ecstasy and my body arches against the bed. Chloe keeps gently rubbing the two rigid cocks together and the first eruption jets from my piss slit to splatter against my abs followed by another that reaches my chest and a third hits my chin. There are several minor pulses after that but I collapse weakly back onto the bed as Chloe releases her own cock from her grasp and gently massages my softening penis, milking the remnants of my come onto my stomach. \n\nI open my eyes and look up at her as I strive to bring my breathing under control. She smiles down at me with a happy, contented smile. \n\n\"Did that do the trick? Released some of that stress, has it? It must have done because it's all over your body.\" \n\nShe giggles at her own joke and drags a finger through the pool of come that has collected in my navel before raising it to her lips and sucking the finger clean. She arches a quizzical eyebrow at me with the unspoken question and I nod. Her expression shows some surprise but then reverts to a knowing smirk as she scoops more of the sticky mess from my body and offers the finger to me. \n\nI open my mouth and suck the digit clean. \n\nShe smirks. \n\n\"Definitely a cum-slut!\" \n\nChapter 13 \n\nI shower and Chloe makes breakfast and I can tell she wants to say something when I arrive in the living area. It becomes obvious that my gentle teasing about the lube is worrying her. \n\nI tell her that it is no big deal and that actually I'm glad that she did, otherwise I would not have had the mind-blowing sensation as she frotted our two cocks together. I point out to her that she must have assumed that I would be OK with her being Trans but she simply smiles at me with so much love and adoration, that I feel embarrassed at having said anything. \n\n\"You see I knew we would need it ... I know you ... what I mean is that I 'know' you. You showed from the first moment I met you that you cared for other people ... the offer of the soup ... the sleeping bag ... the food and a bed for the night ... the clothes ... all for a stranger ... but you were doing it all for me and just when I had lost faith in humankind. You restored that faith as I have never met someone who cares about me the way you do. \n\n\"I hadn't realised that you thought I might have been a boy and you would still have been attracted to me if I was ... but ... somehow that conveyed itself to me ... I just 'knew' that you liked me and I liked you so I wanted to be prepared. I had already decided that I would tell you last evening when we were in bed as I sensed you would be cool with it and then maybe, we could have the physical relationship ... that ... umm ... I hoped for. Unfortunately things moved way faster than I expected and we were getting intimate ... and you found out the wrong way.\" \n\nShe is looking at my face the whole time she says this, just to make sure I'm not upset. At this point she gets up and comes to straddle my lap as we sit at the dining table and kisses me softly. I hug her close and I can see tears in her eyes when she pulls back and I gently kiss her eyes to clear them. Chloe smiles through the tears and snuffles as she kisses me again. \n\n\"See that's you all over ... a caring, understanding, loving man. You ... you took the revelation in your stride and proved once again, what a ... perfect ... yes, perfect in my book ... a perfect guy you really are. I'm glad I bought the lube because what I really want ... is for you to make love to me ... not now, as you really have got to work on the book but tonight ... I want us to go to bed as a couple and make love ... for you to fuck me and come inside me ... again and again ... and then do it all over again tomorrow night and the night after and I want to go wherever you go after here ... if you'll have me.\" \n\nJust the age-old story of a girl asking a guy to love her. \n\n\"I guess that solves the question of who will be my writing manager and proof reader for the next book!\" \n\nYeah, I can make crass jokes at the wrong time so I'm not that perfect. \n\nChapter 14 \n\nI'd like to say that the day proceeds like the previous one with me working on the book and Chloe alternating between the proof-reading and editing the previous chapters and caring for my physical needs in the form of drinks and food. \n\nBut I'd be lying. \n\nThe physical attraction genie ... no, make that the 'lust genie' ... is out of the bottle and there is no putting it back. \n\nWe cannot go within 10 feet of each other without the need to reduce that to zero feet ... and then no work is accomplished for several minutes as we make out voraciously at every opportunity. \n\nIf you add the effect of my thoughts constantly straying to the idea of making love to Chloe when we go to bed this evening then productivity is very low, especially as most of the blood in my body is currently not reaching the bigger brain. \n\nThe only time I get any work done is when Chloe pops out to do some shopping but I have no idea how good my writing is and it will need reviewing at a later date. She returns carrying a couple of bags from Boots and tells me that she went to the Health Centre and got a prescription for her HRT medication. She is concerned about whether there would be a reversal in her physical condition if she didn't take them for more than a week. In her own words 'it took me long enough to grow the small boobs that I do have, I wouldn't want to lose them again.' \n\nThe rest of the day passes in a daze of lustful anticipation with the constant exchange of sexually charged glances between us. To counter this I sit with my back to her but I'm interrupted by my phone pinging with a WhatsApp message as I'm typing away at the table. I look at the message and see that it is a photo sent from the SIM card in my tablet. I turn round to look questioningly at Chloe who is on the sofa behind me. She smirks mischievously at me and I turn back to look at the photo as it comes into focus. Once again my jaw drops at the close-up image of her ... well, I assume it is hers ... erect cock complete with a glistening bead of pre-cum at the entrance to the urethra! \n\nI growl and stand up from my chair at the table and walk over towards Chloe who is curled up in a corner of the sofa with her legs underneath her where, supposedly, she has been reviewing my manuscript on the tablet. She grins naughtily but looks slightly worried when I kneel down in front of her without saying anything. She looks even more confused and squeaks in alarm when I grasp her ankles and pull them out in front of her and spread them apart. She then realises what I'm doing and wags an admonishing finger at me but with a delighted expression on her face. \n\n\"George, what are you doing? We agreed ...\" \n\nI give her a meaningful look and slide my hands up her legs and under the hem of her skirt and finding no undergarments I flip it back exposing her hard shaft. She squeaks as I pull her forward and her back slips down the sofa. ",
        "\"Yes, we agreed but that was before you started sending me pictures of your sexy cock ... so ... what happened to your knickers ... you bad girl?\" \n\nShe grins naughtily but seems lost for words for the moment until I bend forward and capture the exposed head with my lips. \n\n\"Fuckkkkk ... George ... babe ... yesss ... suck my girly cock ... oh fuckkkk ... yess ...\" \n\nI realise I have no idea what to do... I'm sucking a cock for the first time but decide to go with what I like done to me and take her deeper into my mouth and run my tongue around the underside of the spongy head ... judging by the noise she makes I must be doing something right \n\nI take her as deep as I can and feel my lips brush against her sparse pubic hair and my nose hits her stomach. She's not large ... maybe 5 - 6 inches and not very fat so I can accommodate almost all of her but back off until just the head is left in my mouth. I use my lips to massage around the base of the head and she moans and bucks her hips and I taste more of her salty pre-cum oozing from the piss-slit. It's not delicious but not unpleasant and has a similar effect on me as tasting a girl's natural secretions from a wet pussy, making me as hard as a rock. I realise that there is nothing 'gay' about this ... I'm giving my lover oral sex, she just happens to have different sexy bits from what I'm used to. \n\nHer moans and whimpers encourage me to take her deep again and I bring one hand to softly cradle her balls which, like her lovely cock, are quite small in the delicate skin of her scrotum. I feel her hands on the back of my head as she attempts to thrust her hips upwards but I back up against the pressure and lift off, leaving my tongue to gently caress the underside of the head. I look up at her and her smoky, lust-filled eyes meet mine. \n\n\"Go easy sweetie, this is the first cock I've sucked so don't try to face-fuck me yet.\" \n\nShe gives me an embarrassed grin and strokes my cheek. \n\n\"Yeah, sorry ... you're pretty good for a first timer ... you're going to make me come very quickly ... just keep doing what you are ... I love it.\" \n\nStill holding her gaze I lower my head and run my tongue along the shaft as I gently hold the dark head with my thumb and forefinger and stroke the sensitive underside. Chloe moans and whimpers and I feel her hips starting to move again. I replace my hand with my mouth on the crown of her cock and drop my hand back to her ball sac which feels tighter than before. She is closer to coming and I can feel the blood pulse in the vein on the underside against my tongue. She speaks between the panting breaths she is taking. \n\n\"Uh ... George ... uh ... babe ... uh ... that's so good ... uh ... I'm going to come ... uh... soon ...\" \n\nI continue to suck and lick at the head of her hard cock and drop deeper in time with her hip thrusts, my hand preventing her from going to the back of my throat. Despite the restraining fingers she is still battering at my tonsils and I try to stop from coughing as I don't want to break the mood. Her movements become more frantic and she taps my shoulder. \n\n\"George, lift off ... I'm gonna come ... babe ... lift off ... fuckkkkk ... no, no ... lift up ... fuckkkk ... comingggggg ... oh you sweet bastard ... comiinnngg ...\" \n\nThe fist jet coats my tongue and comes half a second after her warning and so I am prepared. However, the second and third follow quickly after and I can only swallow to cope with the extra flow as I continue to lick and suck at the hard tube of flesh in my mouth listening to the sexy groans and moans as Chloe climaxes. \n\nIt has all happened so fast that I have not really had time to taste the gooey semen in my mouth but as her pulses diminish and the quantity becomes more manageable I roll the remainder in my mouth before looking at Chloe and deliberately swallowing with a smirk on my face. Her voice is a breathy giggle. \n\n\"Come-slut!\" \n\nChapter 15 \n\nShe pulls me up and we sprawl on the sofa as she kisses me and I hold her tight with the tremors of her orgasm fading. She breaks the kiss and looks forcefully at me. \n\n\"You didn't have to do that you know ... there was no need to make a point out of it.\" \n\nI shake my head. \n\n\"Yes there was, what sort of lover would I be if I didn't make love to you in every possible way. I have had partners who didn't swallow and while I understood their reluctance it still leaves you thinking that they can't make the sacrifice for their lover's pleasure. I bet next time you can concentrate on your orgasm rather than worry about where you are going to come ... knowing that I will swallow ... huh?\" \n\nChloe ponders this and nods but looks a bit perturbed. \n\n\"Does that mean I have to swallow as well?\" \n\n\"What? No ... I guess not ...why would I force you to do something ...\" \n\nI can see the corners of her mouth turning up in a cheeky grin and I realise she's got me, again. I tickle her briefly and the squirming of her body makes my granite erection even harder and she feels it as well. \n\n\"Oh, poor baby, we need to sort that out.\" \n\nMy eyes light up and I nod enthusiastically and she grins mischievously at my lustful enthusiasm. \n\n\"Oh, Mr. Impatient ... somebody can't wait to sink his big cock into my tight little arse, huh? Here use the lube on your fingers to loosen me up.\" \n\nShe quickly removes her skirt and flips around to kneel on the couch, presenting her delectable heart-shaped bum to my gaze. I find that I can hardly breathe at the sexy sight. \n\n\"That is so beautiful.\" \n\nShe giggles happily and shakes her hips enticingly as she looks back at me. \n\n\"I should hope so, now lube one finger to begin with.\" \n\nI have a better idea and grasp her buttocks and pull them apart with my thumbs as I bend forward so I can rim her rosebud with my tongue. She squeals in surprise at first but then arches her back and moans at the first contact. \n\n\"Fuckkkk ... George ... you sexy man ... yesss ... eat my arse ... fuck my slutty arse with your tongue ...!\" \n\nI chuckle at the porno-script and make a mental note to tell her that it may be over the top as I squirm my mouth against her tight pucker and feel it start to relax. She is now pushing against my forward pressure and I stiffen the tip of my tongue and it slides inside her rosebud. I reach between her legs and feel her cock starting to come back to life and gently stroke it. \n\nShe is moaning and whimpering with lust and my own desire ratchets up at the prospect of burying my cock inside her sexy bum. I pull my face back and look for the lube which was discarded when I started to make love to her arse with my mouth and squirt a generous amount onto my fingers and gently stroke around her arsehole. \n\nChloe gasps loudly and she shakes her hips seductively as she smiles back at me. \n\n\"That's so sexy ... do it ... push one finger in ... please.\" \n\nI gently push my largest finger, the middle one, against her anus and it slowly gives way and I slide in to the second knuckle with out much resistance. I watch her face for any pain but her eyes are closed and she bites her bottom lip so I start to gently move my finger in and out and twisting it as I do so. Her eyes open and she looks at me with hooded eyes. \n\n\"That's so much better than when I do it to myself.\" \n\nI grin back at her. \n\n\"I'll just have to do it from now on. Save you a job.!\" \n\n\"Fuck yes... especially as you seem to like playing with my arse ... now try two fingers ... yesss!\" \n\nI withdraw the one finger and gently push two back in. The resistance is greater this time and it forces her anus to stretch more and I resume the gentle twisting, sawing motion and after a few penetrations I can feel her loosening up as her buttocks start thrusting back at me in time with my movements. \n\nChloe's moans and whimpers ramp up and her hips movements take on an impatient cadence so I decide to go for broke and lube my cock without taking my eyes off her gorgeous bottom. I remove my fingers from her clasping anus which now looks red and swollen and move behind her. I position myself with one foot on the floor and push her hips down so I can align my swollen cock with her arsehole. \n\n\"Are you ready ... let me know to stop if I hurt you.\" \n\nChloe flashes me a pleading look. \n\n\"Oh, god, yess ... I'm so ready... please... fuck me!\" \n\nMy cock doesn't want to go in quite as easily as my fingers at first and I have to change my stance and the angle before I get the right position and the head pops past the sphincter. \n\nChloe moans and I worry that I've hurt her. \n\n\"You, OK? I can stop.\" \n\nShe doesn't look back at me but wiggles her bum in little circular movements as she tries to relax her muscles. \n\n\"Just wait a bit, while I loosen up ... you feel so big and it has been a while.\" \n\nShe is so tight around the head of my cock as it entered her but eventually she starts to move back against me and my shaft works deeper inside her bum. \n\n\"Is that OK?\" \n\nThis time she looks back over and grins sexily at me. \n\n\"That's so fucking good.\" \n\n\"it doesn't hurt?\" \n\n\"Just a little but it will go away once I relax ... when you get balls deep and I can clench you fully.\" \n\nI don't move. \n\n\"Do you want me to wait a moment?\" \n\n\"No, please keep going ... I want you inside me, spurting your come ... keep going and fuck my tight little arse!\" \n\nWho am I to argue? If she wants more, so do I and I give another thrust into Chloe's ass feeling the tight embrace of her sphincter slide further down my straining shaft. The sensation on the rest of my cock is different from fucking a pussy as the contact with the walls of her rectum is less noticeable but the warmth on the head is amazing. \n\nI push forward as she pushes back and eventually my hips are resting against her firm buttocks. I'm balls deep in her arse and we both moan at the sensation and Chloe looks back at me again, her eyes hooded with sexual contentment. \n\n\"Fuckkk .. yesss ... George ... you sexy man. Fuck my slutty bum!\" \n\nI resist the temptation to pull out and pound into her and just try to bury even more of my cock into her by pulling her hips further back. She responds by clenching me with her inner muscles which makes it even more difficult for me to withdraw. Eventually I do pull back leaving the head of my cock trapped by the tight ring of her sphincter before I thrust forward and my cock surges into the resisting chute of her arse. Chloe buries her head in the cushions of the sofa and wails as I see her hands gripping the fabric as the muffled cry reaches my ears. I'm really worried that I've hurt her but she is pushing her bum back to capture my sodomizing thrust and I realise that the cry is one of delight. The plane of my hips crash into her buttocks with a loud slap and once again, I find that I want to try to bury myself even deeper into her tight, warm arse. \n\nThe second time I pull out and push back in there is less resistance but I see her poor sphincter stretched around my cock and realise that the lube has all but disappeared and squirt some more onto my shaft as I push back in. She grunts as her buttocks smash against my thighs and this time I do not have time to delay as she pulls herself forward and pushes back fucking herself on my slippery invading cock. She obviously wants me to go faster and harder and so I oblige and grab her hips to push and pull her in opposition to my own movements. My inhibitions about hurting her disappear as I give her what she wanted ... a good hard reaming and she grunts and moans with each pounding sodomizing thrust. \n\nShe lifts her head from the cushion and looks back at me with lust-filled, hooded eyes. \n\n\"Yesss ... George ... that's it ... fuck my arse ... take me ... make me yours ... your little butt slut ... fuck yesss ... come in my arse.\" \n\nLooking at her and listening to more of her porno-babble makes me miss my stroke and I pull all the way out by accident. She mewls in disappointment and I look down at her poor abused anus which gapes red flesh at me as I easily reinsert my rampant meat and slide all the way back inside her. The sight of her open anus flicks a switch in me and a red mist descends. \n\nI've never been one for 'gape' shots in the anal porno I've watched as it does nothing for me but seeing it in real life gives me a 'I did that' moment and I hammer my rod into her depths with a resounding slap as our flesh meets. I am now a man possessed without any care whether I am hurting Chloe's and want more purchase so push and pull her until I can stand with both feet on the floor and pound into her with all my strength. Sweat rolls off my body and the sound of greased flesh sliding together interspersed with the occasional release of trapped air is the backdrop to our own animalistic noises. \n\nChloe is now moaning and wailing incoherently almost constantly as I hold nothing back and feel my orgasm start to build as I grunt and groan myself while manhandling Chloe's body like a rag doll. Her face is now clear of the cushions and I'm glad there are no other tenants in residence in the block as somebody would surely have called Plod by now as the cacophony of our combined cries grows ever louder. Her hands continue to grip the fabric of the couch and she tries to thrust her bum back at me but I'm too powerful for her and she just flops in my grip. \n\nMy climax surprises me and I start to orgasm while buried deep in her arse and don't even try to move while I come other than to bury myself as deep as I can and feel the pulses jet into her bowels as I cry out my own unintelligible words in triumph. \n\nThe spurts of come keep on erupting as I empty myself deep into her body ... I don't think I have come so much and for so long, ever. The strength in my legs eventually start to give way and I slump sidewise onto the couch pulling Chloe with me as her arse continues to flex and grip my cock. My breathing slows and my head starts to clear and sensations start to make their presence felt ... two sweaty bodies stuck together ... the funky smell of anal sex ... my sore cock softening in the warm confines of her arse ... fuck, it's really sore ... Chloe is shaking in my arms ... \n\nFuck! Chloe is shaking ... is she all right? \n\nThe worry and guilt about hurting her reasserts itself and I hug her tight from behind. \n\n\"God Chloe ... I'm so sorry I just lost it ... are you OK? Have I hurt you ... I'm so sorry ... please forgive me ...\" \n\nShe turns the upper part of her body and looks back at me with amazed but sated eyes. Her voice is hoarse as she tries to speak. \n\n\"Fuckkk ... George ... you're a fucking animal ... you made me come without anyone touching my cock ... look ... \" \n\nShe indicates a pool of her own jizz on the cushions of the sofa and I realise that my security deposit is going to get wiped out by cleaning charges and grin cockily back at her. \n\n\"One up to the old guy, huh?\" \n\nShe snorts in amusement but reaches behind me to pull my head in for a loving kiss. \n\n\"Someone looking for approbation of his credentials as a stud, methinks! Let's just say the boy done good as this girl isn't going anywhere if she gets sex like that on a regular basis.\" \n\nI kiss her back softly and nod my own approval of our coupling. \n\n\"I've never come like that before ... I can't resist your sexy arse ... so I think I could certainly offer you a lifetime's supply ... \" \n\nShe giggles and flexes her bum, clenching my cock which despite the soreness and the fact that I have recently emptied myself into her delightful bum, starts to harden again. Chloe feels it and looks at me with sultry eyes in surprise and bites her bottom lip. \n\n\"Way to go stud ... now would be a good time for more ... but go a bit slower this time.\" \n\n\"You sure?\" \n\n\"Yeah. Please?\" \n\nI find the lube and pull my hips back to reapply it to my shaft, leaving the head of my cock in the tight embrace of her arse which looks very sore. I don't spend much time on lubing myself, as I want to bury myself back into the warm confines of her body and I suspect there is so much of my come inside her that we don't need it. We remain in the semi-spoon position as we can kiss like this and it gives me easy access to fondle her beautiful firm breasts and stroke her cock, which is showing signs of reviving itself. \n\nI slide back into her and it feels so natural and we both close our eyes and moan quietly when I sheath myself in her. We open our eyes and smile lovingly at each other and kiss gently as I start to slowly stroke myself in and out and my free hand starts to slide across her sweat streaked body. Chloe moves her top leg to make it easier for to me to go deeper into her bum but this blocks my access to her cock and I push it back down and limit myself to shallower thrusts. I gently stroke the lovely tube of hard-soft flesh and she moans her delight and in this position I can look into her beautiful eyes which are expressing the joy she is feeling. She whispers sexily. \n\n\"This position is so fucking perfect ... you're hitting my prostate each time you go in ... I'm going to come buckets for you ... I love you making love to me ...I love you, you beautiful man.\" \n\nShe realises what she has said and looks slightly embarrassed. \n\n\"Sorry that just came out ...\" \n\nI smile reassuringly at her. \n\n\"I'm glad you said it ... I'm glad that you are ... because I'm very much in love with you.\" \n\nShe smiles happily at my statement and we kiss lovingly as I continue to move slowly with smooth shallow strokes to continue to massage that magic spot inside her with the head of my cock as we bask in the loving connection between us. This is making love ... not fucking ... we did that and it got rid of the urgent need to climax so now have the rest of our lives to make love. \n\nI watch Chloe's face to see what she enjoys the most and she catches me looking and blushes delightfully before kissing me softly. \n\n\"It looked like you were looking into my soul ... I have never seen so much love in anyone's expression before.\" \n\nShe pulls me in and kisses me deeply before looking back at me with her smokey eyes that betray the sensations she is experiencing as I fondle her breasts and cock and stroke into her sexy bum. She clenches every time I start to withdraw and the warm wet friction of her tight arsehole on my shaft soon has me feeling the need to come again. \n\n\"Jeez, Chloe, babe ... I'm going to come again ... your arse is so tight ... I can't hold out ... are you close?\" \n\nShe kisses me again and nods happily. \n\n\"Come for me George ... make me your butt slut again ... fill me up with your seed ... make me come with you!\" \n\nYeah ... I really do need to get her a new script writer. \n\nI chuckle and she gives a 'what was that for?' look that morphs quickly into lust as I start to thrust harder and deeper into her. My free hand is stroking her hard cock and I can feel the lubrication flowing as her own orgasm builds. However, the need to bury myself as deep as possible into the warm depths of her sexy arse take over and I roll her face down onto the sofa and start to really sodomize her tight bum. She pushes her head up and looks back at me. \n\n\"No ... no ... I want to see your face when you come ... let me roll over.\" \n\nI withdraw with an audible pop and she rolls onto her back and opens her legs wide and pulls her knees back to her shoulders with a come-hither look. I can see her abused anus still gaping and above it her hard shaft leaks clear lubrication onto her stomach. I crouch over her and gently suck on the head and she moans her appreciation as I savour the tart taste of her secretions while I apply more lube to my erection. \n\n\"George ... fuck me please ... I want to feel you coming inside me again ... you can suck me off later ... you come-slut.\" \n\nShe giggles at the pout of disapproval I give her but this turns into a strangled grunt as I thrust back in through her open, distended arsehole. ",
        "\"Fuckkkkk!\" \n\nI start up a slow rhythm but the urge to come builds and builds and I find that once again I am trying to bury myself deep inside her sexy body as she opens herself to me. Our grunts and moans reverberate around the room along with the liquid sound of my cock sliding in and out of her sexy bum. I am holding her knees open and this allows her to attend to her hard cock as we lock gazes and I watch my lover's face contort as she reaches for that pinnacle of ecstasy. I am trying to hold back myself so we can climax together but the clasp of her tight arse is too much and I bury myself deeper and pulse several times into her colon. Chloe's eyes widen as she feels me coming inside her and she arches her back as her own cock erupts onto her stomach and breasts as she gasps and moans in time with my own laboured breathing. \n\nI fall forward onto her as she hooks her heels behind my knees as we gently kiss as our heart rates return to normal. After a few minutes my cock goes soft and Chloe's arse gently forces me out of her body and we both groan in recognition that a wonderful love-making session is over ... for the moment. \n\nChloe's eyes are glowing as we kiss and I suspect mine reflect the same emotion and expression. She strokes my cheek and I can see she wants to say something important but giggles to let me know I'm going to be the butt of a joke first. \n\n\"After that ... you were awesome by the way and your TripAdvisor review will reflect that ... I think we should go and get cleaned up and cuddle in bed. I think I'm ready to tell you everything.\" \n\nI nod in agrement. \n\n\"Given what we have just experienced and where we seem to be heading in our relationship I think that's a good idea.\" \n\nI pause before delivering my own joke. \n\n\"Maybe the CIA need to learn from this in terms of how to extract information from a reluctant suspect.\" \n\nShe sticks her tongue out at me as I get up and gently pull her up with me and we hug before walking hand in hand to the bathroom. Once again I rue the fact that we can't shower together but I do get the chance to hold her and dry her with a towel once she has finished cleaning herself. I offer to apply some soothing cream to her sore bum but she shakes her head as she correctly realises where such actions might lead. \n\n\"No chance lover-boy. You start with a bit of fingering and the next thing is your big cock is buried deep in my bum which I'm not averse to by the way, but I'm just a bit sore. No, thanks for the offer but I do want to tell you my story. Get your arse into the shower and I'll warm the bed up.\""
    ],
    "authorname": "LittleBrain",
    "tags": [
        "mature",
        "romance",
        "transgender",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-writers-muse-ch-02"
}