{
    "title": "Taken by the Viking Ch. 23",
    "pages": [
        "\"We should be getting the first batch of Moon refugees tomorrow,\" Marek said. \"All from Trish's old orphanage. Seems they immediately believed the message she went, which is good for all of them and the kids.\"\n\n\"Good, then she will have plenty to do,\" Jordan replied, grinning widely.\n\nThe woman in question made a soft moaning noise as he continued to move his cock in and out of her ass at a leisurely pace. Marek had raised the conference table up so it was the perfect height for him and Jordan to sodomize their ladies side by side. Laura and Trish were holding hands as they whimpered and squirmed, their legs dangling down. Neither of them were tall enough to have more than toes touching the floor in their current position, which meant they were completely helpless and pinned between the thrusting cocks and the curved edge of the table. \n\nHalfway through the meeting, Marek had decided Laura looked too hot to resist and Jordan had not been at all adverse to changing up the seating arrangements. Although, he couldn't really call it a seating arrangement anymore. Not when he was standing and Trish was bent at a ninety degree angle, her tight, little hole full of his cock, and Marek and Laura were in the exact same position.\n\nHe worked his cock in and out, enjoying the hot, tight clasp of her ass and her tiny whimpers. It wasn't like she was unused to taking his cock up her backside, but he usually didn't take his time the way he was now. It was obviously not entirely comfortable while simultaneously being quite pleasurable and every little whimper he wrung from her throat made his cock even harder. \n\nFucking Trish's hot little ass while talking over mundane matters with Marek was strangely enjoyable. Not that fucking her ass wasn't always enjoyable, but he hadn't thought he'd actually like being a little distracted from her. \n\nAnd he could watch Marek's cock sliding in and out of Laura, while Marek watched him and Trish, and both of them could appreciate the women's hot, gripping holes while still getting work done. Not very much work, but they had the time.\n\n******\n\nTrish was thrilled to hear that the orphanage had actually received - and listened - to her message. So far they weren't sure if any of her messages had gone through the Alex and Bella, who had both spoken on the vids about her, obviously worried. No one was sure if they remembered that Trish had chosen to stay on Earth.\n\nRight now she was having trouble concentrating on any of that, though, because of the smooth, aching glide of Jordan's cock in and out of her ass. She gripped Laura's hand tightly, both of them caught up in the hot pleasure as well as the slightly aching burn of discomfort. Normally anal sex was a little uncomfortable anyway, but the burning stretch of her less used hole added to the pleasure she felt. Now, with the long, slow ride Jordan was taking, her narrow passage was feeling a bit raw, as though it was becoming more sensitive with every deliberately lingering thrust of his cock. \n\nThis wasn't exactly how she'd imagined working for Marek.\n\nBut she couldn't deny she was incredibly turned on.\n\nHaving Jordan using her ass for his pleasure, his hands gripping her hips, and her inability to even thrust her hips up at him because her toes were barely brushing the floor, had her pussy creaming. Her nipples felt ready to drill holes into the wooden table beneath her.\n\n\"What do you think Trish? Are we ready to greet our newest citizens?\"\n\n\"Yes,\" she said, gasping the word out as her anus spasmed around Jordan's cock. Her pussy quivered emptily, aching with envy despite the discomfort. \"Do we really have to talk about this now?\" Her voice came out as a whine.\n\nSMACK!\n\nShe moaned as her ass tightened again, right as he thrust inward, intensifying the sensation of his cock's friction against her sensitive nerves, her ass cheek stinging where he'd spanked her. Beside them, Marek chuckled and Laura's hand gripped Trish's a little tighter. \n\n\"I agree with Trish,\" Laura said, and then gasped as Marek thrust into her tight ass particularly hard. \"It's a little hard to concentrate like this.\"\n\nChuckling, both of the men ignored the ladies' requests and continued with the steady rhythm of thrusts in and out of their tight holes, making both women gasp and writhe in between snippets of conversation. Finally, Jordan's pace began to pick up and Trish moaned as he started moving harder, faster, her toes curling so they weren't even touching the floor as the steady stream of pleasure began to increase. \n\nNow the men weren't up for talking either, as both women let out little cries of discomfort and passion as the men roughly reamed their rear entries, side by side in erotic juxtaposition. \n\nHot ecstasy bubbled up inside of her, like a wave which had been held back and was now being released to cascade through her body. The intensity of the sensation had tears sliding down her cheeks and onto the table as she clenched and writhed on Jordan's ravaging cock. \n\nAt nearly the same time, the men let out loud groans of their own pleasure, and Trish sobbed out her high passion as her bowels were flooded with Jordan's cum. \n\n******\n\nThe orphanage's new building on Earth was admittedly not as nice as the house Trish and Jordan now lived in, but she also knew it was quite a bit nicer than the accommodations the Moon had provided. For one, there was a yard with a playground, which the children could run around in and enough rooms that they only had to share with one other child. \n\nThey'd only arrived a few hours ago and the kids were already adjusting; it was the adults who were more nervous and that was Trish's job. She calmed them, explained to them that everyone in the district had been informed they were NOT to bother any of the new arrivals - as long as they stayed in the district they would remain unmolested. Cora and Trace had reinforced Marek's decisions with their own voices - for now, the Earthers were to leave the Moonies completely alone. If they wanted to make their acquaintance, they could approach and do so, but under no circumstances was anyone to engage in the 'Taking' practice commonly used on Earth. \n\nThe Earthers had snorted at the idea that they'd even want to take any of the newly arrived Moonies, so they'd agreed quickly enough. \n\nTrish had to admit, it probably was unlikely with all the biases both sides had about each other, but she wasn't taking any chances. Especially since the kids needed the adults they'd traveled with and the orphanage workers weren't the usual run of Moonies either. Most of them didn't fit the pampered, corrupt, and self-involved perception the Earthers had of Moonies.\n\nThe first week or so the Moonies and Earthers eyed each other rather warily, the Moonies mostly staying at the orphanage, but some interaction had to happen and both sides started to relax. \n\nBy the second week, the Moonies at the orphanage were blending in nicely with the Earthers and were there to help with the next small wave of Moonies arriving - mostly family members and friends of the orphanage workers and people they'd warned. Things were growing more unsettled on the Moon and some of them were heeding the warnings, getting out while the could. \n\nWhich kept Trish and Jordan both busy in their own respective areas, which was an adjustment. He didn't like to be separated from her, but occasionally it was necessary. Trish always knew any day when they had to work apart for a while, she could expect to be greeted with a hard kiss, his hands all over her body as he checked her over, and then usually to be dragged into a vacant room for a quick, possessive fuck. \n\nWell, into a vacant area unless Laura and or Marek were the only other ones nearby. If it was just them, Jordan would usually fuck her then and there. \n\nWhen they were together he always had his hands on her, which wasn't very different from before, except that now she was occasionally treated to some of the Moonies' expressions of surprise when they saw her with him. They seemed to be adjusting to the rather graphic sexuality that could be found in Marek's main headquarters though; one of the Moonie men running the orphanage had even found himself being rather aggressively propositioned by one of the Earther women. She didn't kidnap him, but she did keep dragging him off and seducing him. The other Moonies seemed torn between being appalled or amused - and some were both. Trish had checked in with him and reassured herself that he was perfectly happy with the situation. \n\nHe was. \n\nIn fact, not long after that, Trish saw HIM dragging HER behind one of the buildings and pushing her up against the wall for a hard kiss and... other things. \n\nPeople were adjusting. Maybe some of them a little too well.\n\n******\n\nSeveral months later the situation on the Moon had gotten completely out of hand. People were leaving in droves, others were staying and fighting, and the stories people were telling as they arrived on earth were getting worse and worse. It would have taken the hardest heart in the world not to have some pity for the broken, terrified Moonies as they came in. Most of them were pathetically grateful for any assistance they could get - and the few who weren't quickly shut up when they realized no one cared about their former position on the Moon and they were only hurting themselves by making ridiculous or unreasonable demands. \n\nThere was still plenty of fighting happening up on the Moon though, as angry citizens had begun to revolt against their leaders as it became more and more obvious that Alex and Bella were telling the truth. Even in Rio, Jordan knew the Wolf was becoming more and more anxious as the danger escalated. Something about the pair had gotten to the Wolf; he was more attached to them than any of the others he'd ever taken. Not quite the same way Jordan was with Trish, but he definitely cared what happened to them and didn't want them to be hurt - especially since he'd been the one to send them back to the Moon with all the relevant information to cause the current revolt. Cora and Trace were getting closer to finishing their work for the shuttles, but they weren't quite done yet. \n\nStill, Jordan wasn't too surprised when he got the call from the Wolf.\n\nThe man's hair had more grey at the temples than before, his face a little more lined, eyes a little harder. Even on a vid screen, he had a powerful presence.\n\nAs usual, the Wolf didn't bother with an actual greeting.\n\n\"We're sending a rescue mission tomorrow. Tell your girl to send her messages.\"\n\nThere had been a few holdouts on the Moon from some of the refugees' families and friends; Jordan understood immediately that this might be their last chance to get them out in one piece. Getting the Moonies' messages and sending them fell under the purview of Trish's job. \n\n\"Thank you, Sir. Do you want me to go up with them?\" A small surge of adrenaline pumped through him in anticipation. While he enjoyed the more sedate life of Rio, especially with his little girl to torment and pleasure, the idea of getting back into some possible action for a day did sound fun.\n\n\"Zadia will be going, but if you want to go, I'm not sure if it will help or hinder to see a familiar face.\"\n\n\"It might help if I bring Trish. They've been trying to find out what happened to her and she'll be able to reassure them.\" Plus it would mean he wouldn't have to leave her behind. \n\nHe hated it when she was out of his sight and he wasn't sure what was going on with her. If she was safe. If she was well. Even a few hours at a time was frustrating. In some ways it had been easier at the compound when he could leave her in their room, knowing she was secure. Now she was often out and about with other people and he couldn't always be by her side.\n\nThe Wolf nodded and they quickly made the plans. \n\nHe'd have to tell Trish of course, but he didn't think she would argue. This was too important.\n\n******\n\nThe fight to take over the small shuttle port was swift, to Trish's relief, although she had the feeling that Jordan and Zadia were a little disappointed. Jordan had been amped up all morning, from the moment he'd woken her up in the usual way with his mouth on her pussy to the hard way he'd ridden her until she was screaming with ecstasy. \n\nReuniting with Alex and Bella turned out to be almost anti-climatic. Jordan had put Trish in front of all of them, with his hands on her shoulders so he could yank her back again at the first sign of danger, but Alex and Bella had obviously been both relieved and surprised to see her standing there smiling. It hadn't taken too much to convince them to leave the Moon. From where they were standing, Trish could see smoke rising in the Dome and the thick glass was now clouded, the air a little hard to breathe. \n\nThe Moon couldn't last much longer.\n\nThey got out everyone they could - all the Wolf's people, Alex and Bella, everyone Trish had sent messages to and everyone they had brought with them... it made her ache that they couldn't save EVERYONE completely, but they couldn't take anyone who didn't show up. Some people were going to have to find their own way off the Moon - that or go down when the Dome eventually did. \n\nWhen they returned to Earth, Alex and Bella were put in Rio with their families, a few streets away from Trish and Jordan. They didn't have any bad memories of Marek or Laura, and Trace and Cora were way too busy to bother them. \n\nThe last month before the ships left, everything was a rush - for both Jordan and Trish. A small trickle of refugees managed to flee the Dome before it finally became unlivable and had to be integrated into the groups which were either heading to the colony or doing their best to acclimate to Earther life. \n\nEven knowing they'd have a lot more time once the ships left, it wasn't exactly an easy time for either Trish and Jordan. \n\nSo she probably really shouldn't have been too surprised when, the moment the ships successfully cleared the Karman Line, she was grabbed by the waist and tossed over Jordan's shoulder. \n\nLaughter followed them out of the launch room, along with the settling of several bets, and Trish put her hands over her face and giggled, trying to hide her blush. Even though she'd gotten pretty used to be dragged off or even having sex in front of small groups of people, somehow she couldn't get rid of the blushes which accompanied anything to do with sex and others knowing about it. She was okay with that though - she knew Jordan thought it was adorable when he made her blush. \n\n\"Joooordan, put me down!\" she said as he stalked through the hallway with long strides, making her bounce on his shoulder because he was moving so fast. \"I'm going to get a headache if you keeping carrying like this!\"\n\nImmediately he pulled her over his shoulder - without breaking stride - to cradle in front of him, but he didn't put her down. She sighed, half resigned, half amused, because she hadn't really expected him to put her down. She knew him too well by now.\n\nShe was kind of surprised when he didn't pull off into one of the many rooms. \n\n\"Where are we going?\" she asked curiously. \n\n\"Your room.\"\n\nHeat flushed through her body immediately. \n\n******\n\nThe ride seemed to take forever, and by the time they returned to the house Trish was more than a little amped up. \n\nRather than waiting for Jordan to come and let her out of the car - heck rather than waiting for him to turn it off - she unsnapped the safety belt and opened the door at the same time, dashing out and to the backyard.\n\n\"TRISH!\" She heard Jordan's roar behind her, making her giggle as she sprinted.\n\nThe element of surprise and him having to shut down the vehicle were the only things giving her enough of a head start to dash into the backyard and into some bushes, hiding. \n\nHer dress today was green and, as she wedged herself between some very thick, leafy branches, she had to stifle more giggling. Not that she found the situation particularly funny, her giggles were more nervous than anything. He was definitely pissed and she knew she was going to pay for it.\n\nBut she wanted to.\n\nThey hadn't been in her room in what felt like ages. She didn't just want to go in there, be tied to something, and then royally fucked. She wanted more than that. And this was her way of goading him.\n\nThe heavy tread of his boots sounded on the pavement path around the house and Trish gulped, her giggles disappearing immediately as her heart started pounding faster. She put her hand over her mouth to quiet her breathing, although the noises of the neighborhood were probably enough to help muffle it as well. \n\n\"Little girl... come out, come out wherever you are.\"\n\nThe words were playful but his tone was dark, silkily threatening and she felt her bottom cringe around the plug inside of it, suddenly wondering if she'd really thought this through. Too late to turn back now though. Even if she'd changed her mind, she felt frozen as she saw the movement of him prowling around the backyard. Since she was well hidden enough that she could barely see him, she could only hope she was equally difficult to see.\n\nOf course, the whole point was for him to find her, but right now putting it off wasn't sounding like a bad idea... \n\nThe boots came closer and she squeezed herself into a tighter ball, as if that was going to help. \n\n\"I see you baby girl.\"\n\nShe shrieked as his big hand came crashing through the leaves in front of her, his other hand parting the branches so he could wrap his fingers in her hair and pull her upright. As soon as she was standing, his arm came around her waist, hand still in her hair, and lifted her up.\n\nFor the second time that day she found herself over his shoulder, this time immediately receiving a sharp smack to her upturned backside once she was there.\n\n\"I'm sorry! I was just trying to play!\"\n\nHe growled. \"Next time do it without giving me a heart attack by jumping out of a moving vehicle.\"\n\n\"You had stopped!\"\n\nSMACK! Another hefty swat to her backside, which stung and burned in counterpoint to the previous one. \n\n\"Barely.\"\n\nShe squeaked as he swiftly turned, making her almost dizzy, and moved towards the house with swift, sure strides. He was moving just a little less quickly than he had been at the station and so she was - thankfully - bouncing a less. \n\nAs soon as they entered her room, he paused, obviously trying to decide exactly what he was going to do with her. Trish's pussy clenched in excitement, wondering the exact same thing. \n\nEven before he moved, she felt the moment he made a decision, his muscles bunching and tensing before he quickly turned and headed for the frilly, fluffy bed. Trish quivered. When she'd been naughty he usually went for the spanking bench or the lectern, while the swing and rocking horse were for more enjoyable sessions or playful punishments. What was he going to do to her on the bed?\n\nTear off her clothes, was the short, fast answer.\n\nShe shrieked in surprise as he pulled at them, even more surprised when they gave way easily at the seams. She stared at the tattered fabric as it fell to the floor. Had she known they were that easy to pull apart? Sure, not like they'd just fall off of her during daily wear, but obviously they weren't made to withstand the strength of a man like Jordan when he was determined to get at the body underneath. Her nipples, already hard, puckered even further. \n\n\"So you want to play, little girl?\" he asked, his eyes sparking with anticipation and a kind of vicious lust. \n\n\"Um... maybe not,\" she said, the realization that she may have bit off more than she could chew hitting her hard. \n\nHe chuckled darkly. \"Too late. Because now I want to play.\"\n\nPressing her down into the bed, he kissed her roughly, possessively, and so deeply she couldn't breathe. She moaned into his mouth as he pressed her arms up above her head, stretching her out... and then startled as something soft and furry made her jump. Her strange reaction had him pulling back, and both of them turned their heads up to look.",
        "It was Trish's teddy bear. The one she'd named Princess and liked to cuddle with, as long as Jordan pretended he didn't notice. \n\n\"Oh my god, turn her away!\" Trish squealed. \"She can't see this!\"\n\n\"She's seen a lot worse,\" Jordan said, an expression of bemusement on his face.\n\n\"But not RIGHT NEXT TO HER like this!\" Trish usually kept her Princess on the shelf, where it was easier to pretend she wasn't actually cuddling with her every chance she got... but while she and Jordan had both been working so much to prepare for Alex, Bella, and the colony ships' departure, she'd been coming into the room when Jordan wasn't at home and snuggling with her teddy bear on the bed. Sure, the stuffed animal wasn't a replacement for Jordan's large, hot body... but she helped. Even more than Trish had initially expected.\n\nHis lips quirked, but he reached up to pick up Princess and carefully move her further away from where he had Trish pinned down, her soft, furry face turned away from them. Trish appreciated that he hadn't just tossed her off the bed, something which she hadn't even thought to be concerned about until he'd picked Princess up. She should have realized he wouldn't just toss her favorite toy on the floor though. \n\nIt was kinda cute watching the big, muscular, alpha male carefully handling a teddy bear like that. \n\nHe raised his eyebrow as he settled back on top of her. \"Good enough?\"\n\n\"Yes. Thank you.\" Her head tilted back, offering up her lips like a reward, one which he took immediately. \n\nTrish moaned, wriggling underneath him as he took her lips again, his hard body stretched out over hers, pressing her into the mattress. The fabric of his clothing rubbed against her naked body as he moved on top of her, and she spread her legs, canting her hips up to rub her wet pussy against the bulge in his pants. She was so incredibly horny... so hot...\n\nAnd so disappointed and upset when he suddenly pulled away and dragged her wrists up to the top of the bed where he could cuff her to it.\n\nSquealing, Trish quivered as her lover looked down at her with flinty eyes, still kneeling between her legs, as he drew his hands down over arms, sliding his palms down to her breasts and cupping them. \n\n\"You were a naughty little girl, weren't you?\"\n\nOops. Somehow her libido had gone crazy enough that she'd actually kind of forgotten she was definitely going to be punished.\n\n******\n\nThe sudden expression of trepidation and anxious wariness on Trish's face made Jordan's cock throb. She licked her lower lip nervously, looking up at him with wide, worried blue eyes.\n\n\"I didn't mean to be?\" The way she answered made it more of a question than a statement. It was hard to hold his chuckle inside, but he did. \n\nWhile he wasn't exactly angry, she really had almost made his heart explode out of his chest with fear and apprehension when she'd burst out of her seat the way she had. For a moment he'd thought she'd actually meant to take off running down the street and his brain had frozen - his whole body had frozen - as he'd scrambled to think of why she would suddenly leave him that way. Then she'd run into the backyard and the roaring sound in his ears had faded. He'd taken a few moments to get over his initial reaction of fury that she would worry him like that and gotten himself under control before stalking after her.\n\nThen she'd been so cute, hiding in the bushes with the obvious assumption that he couldn't figure out where she was - despite leaving a trail any half-decent tracker would immediately notice - his anger had dimmed even more. \n\nShe was still going to get a punishment though.\n\nHalf-play, because that was what she obviously wanted, and half-punishment, because there were safer ways to play with him that wouldn't cause him so much panic. Sassiness, even brattiness could be fun. Making him actually seize up, not so much. \n\n\"Then next time, don't try to give me a heart attack when you want to play, naughty girl,\" he said in a growling voice, enjoying the shiver that went through her body when he called her naughty.\n\nLaid out in front of him, with her legs spread, it was easy to see how aroused she was - even if the evidence hadn't been rubbed all over the front of his pants. Her nipples were hard pink points, jutting up from the small swells of her breasts, her pussy lips were swollen and parted, glistening with her arousal, and her breath was coming in soft, short pants of excitement. Even if she was now anxious over being punished, she wanted it. \n\nMaybe even needed it. \n\nIt had been too long for both of them. \n\nA part of him was even a little grateful she'd given him a good reason to take his time and torment her, rather than just taking her fast and rough.\n\n******\n\nThe increasingly sadistic gleam in Jordan's eyes was not reassuring. Trish quailed inwardly.\n\nWhy hadn't she just mouthed off to him or something? Had she really needed to go running and hiding for fun, knowing that a chase would only provoke him even more?\n\nSometimes she really didn't understand the way her mind worked. She definitely hadn't thought this through, but maybe some part of her hadn't even wanted to. More and more, when they were alone, she found herself acting like the little girl he called her, the little girl she denied wanting to be. \n\nBut the truth was, she did want it. And she liked to act out and put herself in the position of being his naughty little girl sometimes. He didn't get tired of her or ignore her or put her time out - no her punishments always involved one hundred percent of his attention and focus. Even when she was really being punished, which she had a feeling right now might be one of those times, he did so in a way that showed he cared enough to put effort into it. \n\nFor someone who had gone the majority of life without much individualized care, whom an entire population of people had proven they wouldn't put in time or effort even if she went missing, it was a heady feeling. Maybe that's why she kept pushing him, bratting at him, doing things guaranteed to earn her a punishment - so she could see and feel the absolute proof that he did care and he wasn't tired of her and he was going to put his usual amount of care into taking care of his naughty little girl. \n\nThat his usual amount of care involved a both pain and pleasure for her was only a bonus. \n\nShe bit her lip as he picked up one ankle, folding her nearly in half to attach the limb to the bed headboard along with her wrist, repeating it on the other side and leaving her legs spread wide, pussy splayed, and her entire body completely vulnerable to his wicked intentions. \n\n\"Apparently the last punishment I gave your ass didn't stick; let's see if I can do better this time,\" he said, heightening her anxiety as he pulled the plug from her now twitching anus. \n\n\"Noooooo,\" she said, moaning the word when he pulled out the evil, stinging, burning plug he'd used the last time she'd actually been bad. It didn't matter that it had been over a month, she hadn't forgotten about how much it hurt - although she'd apparently put it out of her mind that he even had it. \n\n\"Naughty little girls get the naughty plug,\" he said. Was it wrong that her pussy immediately clenched and creamed a little more?\n\nShe squealed with fear, trying to cringe away despite her bound position, when he pressed the plug to her little crinkled star without applying lube, but it turned out he didn't need it. There must have already been oil inside of it and he'd had it already slicking the surface, but hadn't said so because he'd wanted to see her reaction. The sadistic smile on his face as he pushed the plug in only confirmed it.\n\nTrish quivered, waiting for the burning... but instead it felt almost cold. Cold and tingling. Jordan pumped it, making her sphincter stretch around the most bulbous part again, and she let out a little cry as the movement made the tingling feel more like little needles running over her sensitive flesh. She arched her back, trying to get away from the plug, but he just shoved it back in hard and fast so that she screamed. \n\n\"It's cold!\" she whined, twisting against the cuffs on her wrists and ankles, attempting to bring her legs together as though that would help. \n\n\"You want it warmer, naughty girl?\" The chuckle in his voice alerted her to the danger.\n\n\"No!\" The cold tingling was uncomfortable but not nearly as painful as the burning he'd induced last time.\n\n\"Maybe I'll just help warm up a different part of you then.\"\n\nMoaning, Trish wriggled, her hard nipples jiggling on her chest as she squirmed while Jordan went over to pick out an implement to punish her with. He returned a moment later with a leather paddle, more than large enough to cover both cheeks of her bottom, and she whimpered in anticipation. \n\nStill fully dressed, the paddle held in his hand, Jordan loomed over her like a stern specter. Only the anticipation in his eyes gave away that he wasn't truly angry with her. \n\nHe lifted the paddle and Trish was shrieking before it even fell, already knowing how much it was going to hurt. Because of her spread position, she couldn't even clench her bottom against the impact, and when the leather did smack hard against her cheeks, her shriek turned into a full on yell of pain as both rounded globes immediately began to throb. \n\nThe paddle didn't sting the way his hand or even her hairbrush did; the effect of the blow was spread out a lot more, but it did ignite a deep ache and she was sure she could feel her cheeks actually swelling from the impact. Not only that, but the paddle also managed to hit against the base of the plug, making it jolt inside of her, the cold needles pricking the insides of her anus all over again with just the tiny amount of shifting. \n\n\"OW!\"\n\nTHWAP!\n\nTHWAP!\n\nTHWAP!\n\nTrish screamed and wriggled. \n\nNot only did each blow cover her ass, which was starting to feel like someone had set a fire under her skin, but could swear the plug inside of her was growing with every smack of the paddle against its base. The cold felt like it was moving deeper inside of her, tingling and stabbing. Or maybe, somehow, the paddle was forcing the plug deeper into her? She didn't know, but the discomfort level had just upped itself substantially.\n\nShe was burning on the outside, freezing on the inside, and wishing she'd just to Jordan to shut up or something. \n\nRunning and hiding, just for the fun of it, knowing it would upset him to have her so completely outside of his control even for just a few minutes, had been a poor choice. \n\nNot that her pussy cared. It spasmed emptily every time the paddle landed on her already throbbing bottom, her arousal growing higher along with the pain. \n\nTHWAP!\n\nTHWAP!\n\nTHWAP!\n\n\"Ow! Too much! Jordan pleaaaaaaase, no more! The plug is getting bigger!\"\n\nBecause it was. She was sure she wasn't imagining it. The cold of the plug was moving deeper, stretching out her channel, burning it with cold even as the rest of her bottom was being seared.\n\nTrish writhed, but the most movement her body couldn't manage was to wag her bottom up and down in the air, as if begging for more. \n\n\"Then next time, maybe you'll think before trying to scare me.\" \n\nTHWAP!\n\nTHWAP!\n\nTHWAP!\n\nTrish howled as the paddle came down on already swollen tissue, the cold plug pressing against her clenching walls as it burrowed deeper into her tight hole. \n\n\"Pleaaaaaaaaaaase!!\"\n\nTHWAP!\n\nTHWAP!\n\nTHWAP!\n\nThe paddle dropped beside her as tears slid down her cheeks. Her bottom was hot to the touch as he leaned over and licked the scalded skin, which was so sensitive even that small stimulation felt like too much. But when his tongue moved to her pussy, Trish's small cries turned to more of a sobbing moan.\n\nShe was soaking wet, her pussy lips as swollen and aching as her ass, but in an entirely different way. \n\nJordan's large hands pressed on her hot cheeks, kneading the soft flesh and making her whimper as cry as he began to pleasure her with his mouth. The surges of pain and pleasure slid against each other, winding around each other, and confusing her body. She arched against her bonds, trying to get more of his tongue on her clit, her senses already confused by the conflicting stimulation. \n\nJust when she was about to cum, he pulled away.\n\n\"NoooooOOOOO!\" She cried out, her bottom wagging again uselessly now, this time begging him to return and finish her. \n\nA smile of pure sadism spread across his lips as he looked down at her. Hot bottom throbbing from the paddling, her rear channel tingling with cold, her pussy swollen, needy, and unfulfilled. Trish moaned. \n\n\"I feel like something's missing,\" Jordan said as he started to take off his clothes, deliberately tossing his shirt over Princess, as if to make doubly sure she didn't see anything Trish wouldn't want her to. Which was not reassuring. His pants quickly followed, but those he dropped on the floor rather than over Princess. \n\nKneeling in front of her bound body, he fisted his hand around his hard cock, pumping it and tracing patterns across her hot cheeks with the tip. Trish whimpered, feeling the cool, sticky fluid the head of his cock left behind on her skin, almost surprised when it didn't sizzle at contact. \n\n\"My orgasm?\" Trish asked hopefully, even though she knew it wasn't. When Jordan talked more in the bedroom, it was usually because he was about to do something exquisitely painful to her. \n\n\"No... I don't think so... I know. I think I've been neglecting these...\" Releasing his cock, he leaned forward slightly to cup her breasts, bending down over them.\n\n\"They don't feel neglected!\" Trish squeaked, which wasn't entirely true. Part of her wanted him to continue ignoring them, the other part of her thrilled to know her breasts weren't going to escape untouched. Her nipples throbbed as he traced them with his tongue, his fingers squeezing her soft flesh roughly as he gently mouthed the sensitive buds. \n\nHer body quivered with anxiety, waiting for the bite... for the pain... \n\nBut again, he built her pleasure, this time in her nipples, leaving her pussy completely untouched except for brushes of his erect cock over her splayed lips that left her whimpering and trying to tilt her hips up for more contact. \n\nWhen he released her breasts, they were aching for more, and Trish moaned, trying to thrust them up. \n\nWhich, of course, was when he finally pressed his cock to her pussy and thrust in hard, making her shriek with surprise and hot discomfort as she stretched around him. The plug in her ass had lengthened and widened to being much larger than the one she usually had and there was less room for his dick than usual. Her cry was of erotic agony as much as it was pleasure, rising even higher went he bent over to bite down on one pert nipple.\n\nShe was helpless beneath him as he began to thrust, alternating his attention between her nipples, biting and sucking hard enough that the little buds throbbed and stung nearly as badly as her ass. Hard fingers dug into her chastised cheeks, and then, suddenly the plug inside her began to MOVE. At least, it felt like movement. It shrank and expanded rhythmically, so that even though it wasn't actually being thrust in and out of her hole, it almost felt that way. \n\nJordan fucked her to the rhythm of the plug's thrusts, timing them together, making her shriek and writhe with passion as he plowed into her without mercy.\n\nIt was everything she'd craved. Everything she'd wanted. Everything she'd hoped for. \n\nHer body clenched and spasmed as he pounded between her legs, every muscle in his body straining to bury his cock in her as deeply and as often as possible. There was nothing Trish could do but take his cock, pinned beneath him, her lower body bouncing with the rhythms of his thrusts and far too out of her control for any movement on her part.\n\nJordan's fingers on one hand slid from her cheek to between her crack, touching something on the base of the plug, and Trish's high scream filled the room as the plug suddenly began to vibrate as well. Her legs tried to kick as the monstrous orgasm overwhelmed her, drowning her in ecstasy edged with jagged nips of pain which only made her pleasure feel stronger by comparison.\n\nHer body throbbed, contracted, and Jordan rode her through her orgasm until she was practically limp from ecstasy beneath him before he finally released the reins of his own control and filled her with his cum.\n\n******\n\nSpooned around Trish's form, Jordan could feel the softness of her teddy bear, which she'd willingly curled up around as soon as he'd passed the stuffed animal to her. Her face was buried in the bear's fur, but she'd nestled her hot ass into his groin, the fingers of one hand wound about his, clutching his hand to the bear as tightly as she was clutching the bear to her chest. \n\nFeathering soft kisses over the back of her neck, Jordan felt his chest tighten. \n\n\"You are my everything,\" he whispered.\n\nA soft, gentle moment passed, as he pressed more kisses to her skin, holding her, cuddling her, protecting her. \n\n\"I love you too,\" she whispered back. \n\n********\n\nAuthor's Note: I'm sure not everyone is going to like the story end, but this is where Jordan and Trish leave me. It's a non-con story turned reluctant Dark Romance and Jordan's admitted about as much wrongness as he's ever going to, and Trish is perfectly happy with him where they are now. I had SO much fun writing this, I hope everyone who read till the end enjoyed it... if not, I'm not sure why you chose to keep reading but I'm sadistically happy to have filled that masochistic need for you. =) I've had requests to do something from the Wolf's POV and while I'm not ruling it out for the future, I'm also not doing it any time soon and if I do it I won't be repeating this storyline again - it'll either be focused on his rise to power or after the Moon falls and the colony ship leaves. Anyway. That's for the future. Maybe. Thank you so much for reading!! "
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "bondage",
        "anal play",
        "anal sex",
        "spanking",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-viking-ch-23"
}