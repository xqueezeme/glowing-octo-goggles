{
    "title": "Room with a Secret Ch. 08",
    "pages": [
        "Chapter 8\n\n\"I have secured the services of a cleaner. I thought at my age...\"\n\n\"Sensible,\" said Jim and then the penny dropped. He looked sideways at Mr Crowfoot, \"She wouldn't by any chance not be some old woman in headscarf who has been cleaning for years and years, fag hanging out of the corner of her mouth, but rather a young and pretty girl?\"\n\nMr Crowfoot gave a rather conspiratorial smile. \"I'm sure you'll find out in good time.\"\n\nAnd, indeed, Jim did. One morning not many days later he was standing at his window and saw a young girl bicycle up to Mr Crowfoot's gate and wheel the machine in. Standing there he felt his penis rise as he shook his head at the naughtiness or rather badness of his aged friend across the way. Not only was the girl young but she was as black as black could be. Of course, Jim had seen pictures of naked black girls in his suspect magazines but... Such girls were not commonplace in the area. Perhaps work was not easy to come by.\n\nHad Mr Crowfoot already been playing his games with her? Had he waited until she had settled into a routine of cleaning the house, dusting and washing -- given her a few days to become used to the house - before settling himself down in that special room, seated at his desk, until she entered to begin cleaning and then making the sort of suggestions Jim knew he would make? Suggestions she would not be able to do anything with but comply. Had he waited for her to become used to the house or not? Perhaps beginning with the comparatively innocent suggestion she dusted the room naked so as not to mess up her clothes before moving to the rather more direct request that, whilst she was polishing the brass or the silver, she polished his knob as well.\n\nThe thought of seeing the young girl naked more than appealed to Jim. The thought of contrasting his pale skin with her exotic blackness arousing. The thought of, no doubt, black as anything curls down below, more than enough to bring his penis to attention. Was she perhaps a virgin, completely unused to anything to do with penises? Surely his friend would invite him around to 'sample' his new 'acquisition.'\n\nJim stood there looking at the now closed door over the road. So annoying he had to go to work and not casually walk across the street to visit his old friend, take a cup of coffee with him and just happen to ask about Mr Crowfoot's new cleaner -- and very much hope much would be revealed; not least the young girl's naked body. And so it was not that day, nor the next but the one after Jim could not contain himself any longer. He would be late for work.\n\n\"Well, tell me,\" he commanded as he sat with Mr Crowfoot drinking coffee. The man had said nothing about his new cleaner. Surely, he must know Jim was more than intrigued. Mr Crowfoot sat there looking as innocent as anything.\n\n\"About what Jim?\"\n\n\"Your new cleaner -- I've seen her across the street.\"\n\n\"Have you now?\"\n\n\"Well, have you?\"\n\n\"Have I what?\"\n\nJim looked more than exasperated and it caused Mr Crowfoot to burst into laughter. \"Of course, I have, Jim. I was wondering when your curiosity would get the better of you.\"\n\n\"You've fucked her? Was she a virgin?\"\n\n\"She certainly thinks she is. Very virginal. Thinks she's never seen a cock, still less sucked one. But of course...\"\n\n\"Not on the Pill then?\"\n\n\"No, Jim, it'll have to be rubber time for you again. Me of course... well, somewhat different.\"\n\n\"And she remembers nothing?\"\n\n\"Each time she comes in as innocent as anything with her duster.\" He chuckled. \"It is such a pleasure. Just seeing her in nothing... but her yellow duster.\"\n\nAnd as if on cue there was a knock at the study door.\n\n\"I didn't realise you had company. I'll come back later.\" The young girl turned as if to leave the study, duster in hand. But that was not to be. Was just not going to happen, not with both Mr Crowfoot and his apprentice looking up with such interest.\n\n\"No, no, carry on.\"\n\nJim could not help staring. A tall girl, very pretty in a different way to the prettiness he was used to; a woman from people used to a different climate from England; a people perhaps at one time used to going around under the hot sun naked. He could but admire the deep brown, almost black of her skin. It seemed to shine with health. Even across the room he could see her eyes were hazel brown, her teeth so white, showing between wonderfully generous lips. He even caught a glimpse of pink tongue.\n\nNaked under the hot sun maybe but not in Mr Crowfoot's study. A very neatly and conservatively dressed young woman. White blouse, black knee length skirt and sensible black shoes. Perhaps she thought it an appropriate uniform for cleaning a clearly respectable aged gentleman's large house. Perhaps her mother thought that.\n\nOf course, the conversation had to change. The men could hardly discuss the young girl's attributes with her now in the room. Well, actually they could given the room's properties but Jim was certainly leaving any first move up to Mr Crowfoot. The old boy talked away about other things. His collections, whether he should have the house redecorated and asking about Jim's work (and about Sophie and Jenny).\n\nAn unexpected squeak, a gasp from the otherwise silent girl. Both men looked and saw the girl standing stock still be the cabinet with Mr Crowfoot's dildo collection.\n\n\"It's just my collection, Annette, handle them carefully when you dust them. Some are a little fragile, others very solid but it would not do to drop them however hard they might seem.\"\n\nThe girl's hand was to her mouth. \"But... but... but, they're...\"\n\n\"Artificial penises, Annette, representations of the erect male sexual organ for personal female gratification. Surely you have one at home for bedtime.\"\n\n\"No, no...\" Both hands were to her mouth now.\n\n\"Some are very realistic. Beautifully carved. Some quite valuable so take care.\"\n\n\"I've never seen...\"\n\nMr Crowfoot got up and went to her. He put his arm around her shoulder. \"Never seen what, Annette?\"\n\n\"A man's... you know... thing.\"\n\n\"You're a virgin?\"\n\n\"Of course, Mr Crowfoot, I'm not married yet.\"\n\n\"Never seen. Not even... a soft penis?\"\n\nHer head shook.\n\n\"No brothers, your father?\"\n\nAgain. a look of shock and an emphatic shake of the head. No easy family nudity then.\n\n\"Oh, well, we'll leave you to polish them. You'll learn a bit...\"\n\n\"They're so big.\"\n\n\"And hard of course. The vagina is very accommodating.\"\n\n\"I could never...\"\n\nMr Crowfoot winked at Jim. Jim was sure Annette's vagina had already been very accommodating. Had probably already accepted several of the dildo's and certainly Mr Crowfoot's hard and fleshy penis.\n\n\"You could, I am sure. Think about it. I'm sure you'll have pleasant thoughts. I must go and get Jim another cup of coffee.\"\n\nIt was a slightly strained silence. Jim unsure what to say to the girl over at the cabinet, carefully polishing dildo after dildo with her duster. Taking them into her hands very carefully but undoubtedly examining them. A shy glance at him and then clear embarrassment as he caught her with her thumb running over the wrinkled preputial representation of one of the wooden carved penises.\n\n\"I've been thinking, Annette,\" said Mr Crowfoot re-entering the room. In his hands a tray with a coffee jug and cups. The girl looked up, the dildo held in her right hand rather incongruous with the yellow duster and her neat clothes. \n\nMr Crowfoot carefully placed the tray down on a table. \"No one need know but would you like to see a penis? Not my old, wizened thing but young Jim's here. Educational for you. You will enjoy the experience.\"\n\nHer head was shaking.\n\n\"I'm sure Jim would not mind. Take your clothes off Jim. Show Annette your penis.\"\n\nThe girl's mouth hung open as Jim complied. Jacket and shirt, socks. The girl seemed frozen to the spot. Down came his trousers and pants and Jim stepped out.\n\n\"There you are, Annette, a man with no clothes on. A bit different from women but two arms, two legs. Jim would you pour the coffee.\" So casually said.\n\nHer eyes were on his genitalia. He had not erected -- yet.\n\n\"All soft at present, not like the dildoes. Come,\" he beckoned with his hand, \"come and sit down and take a closer look.\"\n\nAnnette seemed almost in a daze as she came and sat next to Mr Crowfoot on the Chesterfield, her eyes looking down the whole time, but Jim could see the occasional peak upward -- at his penis.\n\nJim moved so he was facing the girl, his legs almost touching Annette's tightly closed knees.\n\n\"There, you see Annette, one set of male genitalia. Penis and balls -- two of those.\" Mr Crowfoot paused. \"Do you like?\"\n\nThe girl was sitting looking both confused and interested all at the same time. In her hand still the duster and dildo.\n\n\"Would you like to touch or... well, there you are, just for you. Jim is showing you how men's penises become hard. He is having an erection.\"\n\nAnd Jim was. It was the suggestion she might touch. It set him off. It was a perfect demonstration of an erection, right in front of Annette. Textbook perfect. A swelling, a swinging around and a rising up and then jerky, filling movements as the penis both attained its full length and girth together with its upward angle. At the last moment before the blood ceased to be pumped in, the foreskin retracted all by itself; a peeling back, exposing Jim's knob to Annette's clearly startled gaze. Her eyes had not left it the whole time it had been moving and growing.\n\nFor Jim the experience was wonderful. Exposing himself and then erecting so freely in front of this innocent young girl. What might he shortly be doing with her? He smiled encouragingly, but she was not looking up at his face but at what had just grown up before her. Neither moved. Jim just stood there, taking in her pretty round face with her rather flat, squashed nose and those so generous lips, almost dark but with that hint of pinkness showing within. Would she suck? Of course, she would, if not that day then another. Mr Crowfoot and his study would see to that. A delightful inevitability.\n\n\"I... I shouldn't be here. I shouldn't be seeing...\"\n\n\"See how well carved the penis in your hand is, Annette, how well it compares to Jim's organ.\" The girl looked from one to the other. \"Put down the duster, there's a good girl. Take hold, compare.\"\n\nThe reluctance on her face so evident, perhaps not just upbringing and sense of propriety, but perhaps a distaste for men and a preference for women -- was that it? Jim asked, \"Do you have a boyfriend, Annette? A girlfriend?\"\n\nShe frowned. I... I am seeing a young man; we go to the pictures and things. You know, dances.\"\n\nMr Crowfoot had evidently asked the question before, \"but you have not handled his penis, have you Annette.\"\n\n\"No, of course not!\"\n\n\"Well, handle Jim's. It'll be good for you, educational.\"\n\nIt was a command. Annette had to obey. It was what the study made women do. Obey men. Slowly Annette put down the yellow duster beside her, slowly she reached extending her forefinger and touched. The erect penis quivered -- how could it not? Jim just so excited seeing the girl's black finger -- so exotic, so different -- reaching out to touch and then fingers starting to close around his erect penis. It most certainly jerked, almost out of her hand. Annette held it firmly.\n\n\"What do you think, Annette? Do feel free to feel more, stroke it if you like. Think of it like a pet animal. Stroke it, tickle it, play with it. Use both hands.\"\n\nHer hand moved from grasping to stroking, her fingers very much doing what Mr Crowfoot said, caressing the smooth penile skin; fingertips touching the shining bulb of the head, fingering around the corona, exploring its shape. Jim just stared at the sight, revelling in the feeling of the so innocent girl's touch. Her other hand moved under him and lifted his scrotum, fingers closing around the testes within.\n\n\"Men do so like their penises being stroked. Tickle Jim under the head of his penis, like you would under the chin of a little kitten. Yes, just there!\" The old man turned his head to Jim and winked, \"Is that good for you Jim?\"\n\nJim nodded. It was all very pleasant!\n\n\"The head?\" Queried Annette.\n\n\"The knob at the end of Jim's penis. The shiny, rounded end. You know why it's rounded don't you?\"\n\nThe girl nodded, \"Yes, Mr Crowfoot, so it can go into a woman and make babies.\"\n\n\"And for pleasure, Annette. And for pleasure. I'm sure the thought makes you feel a little, shall I say 'funny.' A warm feeling that you would rather like to feel a penis in your vagina. I am sure you are getting quite wet between your legs.\"\n\nAnnette's hand, the hand that had been stroking Jim's knob flew to her mouth. Was it surprise at Mr Crowfoot knowing her little secret -- that sometimes she felt just so wet?\n\n\"See how the skin is all wrinkled just below the head,\" Mr Crowfoot went on. \"It is mobile. You can slide that up and over the head. Go on, try.\"\n\nTentative at first but then settling into a regular movement, Jim watched and most definitely felt his foreskin being slid. Exotic black fingers masturbating him as he stood there before the young girl. Wonderful!\n\n\"That is just what men do on their own when they do not have a nice woman to bed.\"\n\n\"I'm sure Matthew, my young man, doesn't do that.\"\n\nAnd the rest! Thought Jim. That was just so unlikely. In his bed at night, at the very least, Annette's Matthew would do exactly that. Would be stroking his cock. Very probably most nights in fact, and the odd morning, thinking of Annette, wondering about her naked body, wondering about fucking her, perhaps making his penis spurt all up his stomach with thoughts of his cock in her mouth, shooting his stuff again and again. Perhaps already pints of the stuff ejaculated whilst thinking of Annette. Poor Matthew; so much better if she helped him -- as she was now helping Jim.\n\n\"Don't you play with yourself sometimes, Annette. In bed don't your fingers sometimes find their way between your legs and play, stroking your tender, secret place; perhaps poking a finger or two into your vagina imagining a man; doesn't you finger find your little button and frig that until you are just so wet and...\"\n\nThe shock on the girl's face as, Jim surmised Mr Crowfoot described what she so thought her secret. Perhaps she had been shocked at what she had done, at the feelings -- perhaps orgasm -- that her fingers had brought. A promise to herself never to do that again -- yet an inevitable return, again and again.\n\n\"I... I...\"\n\n\"You have done that, haven't you Annette? Tell us.\"\n\nA small voice, downcast eyes, \"Yes. I know I shouldn't but...\"\n\n\"Why shouldn't you Annette? Matthew will, I can assure you, play. Wouldn't it be nice if you both...\" he paused, \"exchanged hands? You play with him and he with you. Wouldn't you like to take his penis out of his trousers and make it hard like Jim's; wouldn't you like to hold and play with it; make Matthew feel really good?\"\n\nHer hand was stroking Jim's penis again, biting her lip and staring at it, her other hand fondling his balls. Evidently there was conflict in her mind. Wanting to resist but, yet, to do what Mr Crowfoot suggested, perhaps be naked in bed with Matthew, kissing and touching, skin to skin. Annette seemed to have got the hang of male masturbation and was doing it rather well. Too well in fact.\n\nJim came. The semen just welled up and burst from his penis -- a real fountaining all over her hands. The stuff pouring out all white over and between her lovely black fingers. It was obvious she was shocked and taken completely by surprise. No snatching away of hands but suddenly both hands were frozen, one to ejaculating cock, the other to Jim's pulsing balls\n\n\"Mr Crowfoot -- what has happened?\" A shake in her voice, \"is happening.\"\n\nWonderful to see her face turning to Mr Crowfoot. The surprise so evident.\n\n\"Jim has ejaculated. That is how babies are made if the man does that inside a woman's vagina. No risk on your hands of course.\"\n\n\"But, I thought...\"\n\n\"What did you think, Annette?\"\n\n\"Just... just... a little spray, not... not...\" Her hands were rather covered with the stuff. A pleasure to see the white of his semen across her fingers; a pleasure to see how well he had done; a pleasure to simply see his cum there on Annette.\n\n\"Such a... mess. So... so much... so sticky... so... I thought... just a fine spray.\" The girl was looking at her ejaculate covered hands. Her eyes went to the duster -- the nearest cloth.\n\n\"More than a spray, Annette. It's much more than that. Men do more than that. Jim does very well. A strong youthful ejaculation. I can no longer produce like that. Of course, tidier in a vagina, all secreted away.\"\n\n\"But babies...\"\n\n\"Yes, Annette, that's why women take their men's penises into their mouths and swallow. No mess. Much easier, and so nice for the man. All gone. Such a nice thing to do.\"\n\nAnnette's mouth, her so lovely and generous mouth, hung open.\n\n\"In their mouths?\"\n\n\"Yes, Annette, in their mouths. Look, why don't I show you. Just lick up Jim's semen first, get the idea. You'll find you like it.\"\n\nHer face still shocked but the room's effect was strong. Slowly she raised a hand to her mouth and licked. What a thrill for Jim to see her pink tongue touching and then flicking some of his warm cum into her mouth. Had he not already come he might well have found himself coming again at the sight of the girl licking away at her fingers; her flicking so pink tongue and those full, almost black, lips with... with his cum upon them.\n\nMr Crowfoot undid his fly and out into the open came a second penis; the second of the day for Annette. Unsurprisingly it was strongly erect. Jim made way for his friend to stand in front of Annette in his place. The young girl still in her blouse and black skirt, luckily devoid of dripping semen. It would not have done for her to go home with obvious splashes of ejaculate all down her skirt or across her blouse. They could have been washed but, actually, rather difficult for the washing to be undertaken by Annette unless the men perhaps contrived to spill coffee or something else, more innocent down her as well. Difficult outside the study. She would not remember, would not know what had been spilt or why. Would not know why she was washing skirt and blouse. Would not know what had been spilt and would be beside herself with worry at being partly undressed in the scullery. A shame the power of the room did not extend further. Rather lovely to have Annette removing her clothes and washing them naked; carrying on with her housework naked -- but of course had that been the effect of the house almost certainly Mr Crowfoot would have had her working naked every time she visited, hanging her clothes up as she entered the house just like a raincoat. A very pleasing idea.\n\nThe old man waited patiently as the girl licked her fingers. No doubt seeing a girl licking and consuming another man's cum from her fingers was pretty erotic in itself even without the thought of imminent fellation. The girl's nylon clad knees were not as tightly together as before. Jim wondered if Mr Crowfoot might be thinking of parting them. He had sort of admitted having done so before. Jim would like to see them parted, skirt, tights and knickers removed. Would like another time to roll a condom down his erection and venture inside the girl. But not now: the condom would not roll, not up his hanging and soft penis. He had lost the ability -- all over Annette's fingers.\n\n\"Must I?\" The girl was looking straight at Mr Crowfoot's erection. It was pointing at her, at eye level, right at the edge of where she could focus; she was looking right down the barrel, eye to eye with the eye of his penis. Thinking, Jim imagined, that just the same would come out there as had from his penis, except not over her hands but into her mouth. What a strange thing it must be to be about to suck your first penis, see it waiting there for you to suck (though Jim suspected it might not really be her first time. She would only be thinking that it was her first. Mr Crowfoot would most certainly know!) and knowing it would spurt.",
        "\"It's so big. Bigger than a banana.\"\n\n\"You don't bite, Annette,\" Jim cautioned unnecessarily, \"treat it like a lolly or perhaps a stick of seaside rock.\"\n\n\"More like a cucumber,\" she said, \"so big.\"\n\n\"But neither green nor cool.\"\n\nMr Crowfoot looked at Jim, \"Let her be. In her own time.\"\n\nTentatively the girl leant closer. It was not coercion, it was not two men forcing a young woman into a sexual act; it was not coercion, well, not quite; the room would make her do the act but by influencing her mind so she would choose to suck; the room did not put a hand on the back of Annette's head and force her down onto the erection, the effect was much more subtle.\n\nMr Crowfoot certainly had control and self-restraint -- had it been Jim he was sure he would have pushed forward. Instead Mr Crowfoot just stood there patiently waiting -- certainly with no loss of hardness to his penis; perhaps he was revelling in the anticipation.\n\nAnnette's lips touched. Jim could see their soft flesh giving a little where they touched the head of Mr Crowfoot's cock. Even in his post orgasmic state Jim could appreciate just how lovely Annette's lips were, so dark and importantly so full. Just so right for fellating a cock -- if Annette just knew it. How happy her Matthew would be if she was to do that; regularly caressing, then gently sucking and perhaps after a time energetically emptying his balls down her throat.\n\nSo foolish to have come all over her fingers. If he had not, he too could be enjoying the feeling of those lips sliding over his cock. It could have been his penis, his knob half in the young girl's mouth. It could have been him easing his penis further into her mouth, rather than Mr Crowfoot. Another time, another time.\n\nHer face, the way her eyes were wide, showed shock and surprise at what she was doing.\n\n\"You are enjoying doing that to Mr Crowfoot, Annette. Close your eyes and try and take as much of his penis into your mouth as you can. Deeper, deeper, there's a good girl. Enjoy its warmth, its size, its shape.\" It was all so what Jim would like. If only he had not come so quickly. Good, nonetheless, to see the girl relax and suck contentedly on Mr Crowfoot's cock, trying to get as much of it into her mouth -- down her throat almost -- as she could.\n\n\"Relax now, Annette, up you come. Now lick it like an ice cream. I'm sure you like those.\" Jim gritted his teeth. The sight of her pink tongue slipping up his friend's cock so frustrating with his own hanging uselessly -- impotently -- down between his legs.\n\nMr Crowfoot was smiling and nodding Jim on. \"Keep talking,\" he said.\n\n\"You like cream, Annette, and soon you will be enjoying Mr Crowfoot's warm cream. You're looking forward to that.\" And, of course, with Mr Crowfoot having told her how she would enjoy licking up Jim's ejaculation, she would enjoy the second load when it came from Mr Crowfoot. She could not help liking it. The room saw to that.\n\nAnnette so keen for Mr Crowfoot's semen that when the old man shuddered and shook with orgasm -- so much so that Jim readied himself to catch him in case he fell -- Jim did not so much as see one drop appear on her lips. Even when she, at last, released Mr Crowfoot's limp and emptied penis there was not a hint of semen anywhere to be seen. Her tongue had been busy licking up any final seepage. It was as washed as if Mr Crowfoot had just had a bath.\n\n\"Thank you my dear. I think you have dusted and cleaned the study enough. Tidy yourself and carry on. Perhaps the dining room or kitchen?\"\n\nAnnette got up off the Chesterfield, smoothed down her skirt and walked to the door. Jim had almost thought she would curtsey. Perhaps another time he would have her do that before sucking his cock. What a rather exciting young girl Mr Crowfoot had brought into his house.\n\n\"How was that Jim!\"\n\nThe young man looked at the now closed door, \"Phew! Yes! Just so... well, Annette's innocence, it and her lovely skin, it was all... I so liked how you got her to admit she masturbated. The thought of her in bed. I've got to see that.\"\n\nThe old man smiled conspiratorially. \"She's like that every time of course. Such sweet innocence. How about we get her to think she's alone in bed another time. The room will allow the suggestion I am sure. In her head she thinks she is alone, but we'll be there sitting and watching. And after she's frigged herself to orgasm would you like her to fall asleep so you can pretend to be creeping in on her and interfering with her asleep in bed. Fucking her whilst she sleeps -- with a condom of course!\"\n\n\"Naked,\" breathed Jim. \"I haven't seen her yet. I almost can't believe that she stayed clothed. You've already fucked her, haven't you?\"\n\nMr Crowfoot's look was hardly one of embarrassment, contrition or denial. \"Twice,\" he said, \"but of course she remembers nothing. I just could not resist.\" He chuckled, \"and what else might you like to do with Annette other days whilst she keeps my study sparkling clean.\"\n\n\"Her face when I came, she just hadn't expected that.\"\n\n\"She forgets what men do and is shocked every time.\"\n\nThe two men sat and talked about the girl. Mr Crowfoot tidily tucking his penis away. It had been exercised. Elsewhere in the house young Annette went about her job. Dusting and polishing, doing Mr Crowfoot's laundry. Quite without recollection of what had gone on in the study or any idea at all that her employer and his friend were planning all sorts of sexual assault upon her body. And, indeed, rather worse had she but known it - not just upon her.\n\n\"Annette's mother is coming to see me next week,\" remarked Mr Crowfoot to his young friend, \"to check how her daughter is doing in her first job. She is a rather large and an ever so jolly lady.\"\n\n\"Oh, you wouldn't...\"\n\nMr Crowfoot smiled his rather conspiratorial smile. \"Oh, I rather think I will.\"\n\n\"Daughter and mother?\"\n\n\"No, not together, too complicated. It'll be just Annette's mother. No Annette. Do you fancy trying an older woman? Maybe she is on the Pill. I haven't asked -- well, she was not seated in my study on her first visit and it was not the sort of question for polite conversation, certainly not with Annette sitting there all demur beside her mother. No Annette this time, but her mother here in my study... I shall ask a lot of questions. I expect I shall, well, perform with her.\"\n\nMr Crowfoot had confided in Jim a liking for women in uniform; indeed, it had been Nurse Evans in uniform when Jim had first discovered the remarkable properties of Mr Crowfoot's secret room.\n\nIt was not the room's doing, it did not attract women to itself, but certainly a uniformed young woman came to visit Mr Crowfoot. It followed from a burglary to his house, indeed. Mr Crowfoot was visibly upset at this violation of his privacy. Jim too, was shocked and felt for the old man, though he could not help contrasting the invasion of Mr Crowfoot's home by person or persons unknown with the old boy's easy invasion of young women's undergarments. Was there a certain poetic justice in what had happened?\n\nThe WPC had parked her panda car, an Austin 1100, outside Mr Crowfoot's house and stepped out. It was Jim who let her in and took her to Mr Crowfoot. He was sitting looking not a little shocked in his sitting room, a steadying cup of tea to his side. WPC Cartwright accepted Jim's offer of a cup. When he returned, she was interviewing the old man and Jim sat quietly as she asked questions and wrote in her notebook with a biro. It gave Jim the opportunity to look at her. She was very nice.\n\nWhat a pretty girl, and it might well be that girls like a man in uniform, but Jim too thought that there was something in much the same way about a pretty girl in a uniform. She sat there in her dark blue uniform, knee length skirt, dark tights (presumably) jacket with four brass buttons and epaulettes, white man-like blouse and that funny little black short two ribbon tie WPCs wore completing her smart uniform. Beside her on the sofa her hat, black brimmed and white, rounded like a bowler with cap badge and distinctive black and white chequering. She, herself, had lovely, rounded cheeks, a sweet mouth which seemed so ready to break into a pixie like grin (not that she was doing much of that) and wide-open blue eyes under her shortish brown hair, hair which had the delightful tendency to curl at the ends. Yes, he liked what he saw.\n\nThe interview over and the house inspected, the WPC stood in the hallway outside the sitting room and close to the study door, clearly about to take her leave.\n\n\"Might I ask you a few questions now?\" Mr Crowfoot walked a few paces into his study and then seated himself as if expecting an affirmative answer.\n\nJim swallowed. Surely Mr Crowfoot was not really going to use the influence of the study on the young WPC. Not even he would be so bold... or would he? \n\n\"Yes, Mr Crowfoot, of course.\" She stepped forward, so unsuspecting into Mr Crowfoot's so comfortable room.\n\n\"Do you have a boyfriend?\" It was a very direct question and nothing at all to do with WPC Cartwright's investigation. Nothing at all. Quite, quite different. Jim had noted the lack of wedding or engagement ring. She was not married. \n\nMr Crowfoot was really going to do it. Jim did not think he would have had the confidence at all to do that. Mr Crowfoot was going to probe the young WPC's sexual experience as a preliminary to probing her physically. He knew Mr Crowfoot too well to imagine the old boy's plan was anything else, that he would not seek to take advantage of yet another young woman who had come within his grasp. And Jim could not help it. Already his penis was swelling at the thought of investigating beneath WPC Cartwright's uniform. What a pretty face.\n\nAs usual out came the details. The room had its effect. The young WPC a little startled at the question but then out it all came as Jim closed the door, rather symbolically cutting off her means of escape. Yes, indeed she did have a boyfriend. Given how pretty she was it was difficult to imagine her being without! Yes, they had regular sexual relations and (how useful!) she was on the Pill. \n\nJim shivered. He knew what that meant for him. He was going to fuck her. He really was -- for real and without a condom. Quite a strange feeling to know that; to look at the WPC and know what he would do; to already be mentally undressing her and wondering about her body beneath her neat uniform. He watched the WPC settle her bottom onto the Chesterfield and put her hat down beside her. Jim pulled up a chair and sat down.\n\nBeing Mr Crowfoot, the old man went further, asking intimate questions about orgasms and whether she liked sucking cock. Such inappropriate, such unusual questions -- but not for Mr Crowfoot. Quite amazing, to be sitting there with the uniformed young woman and hearing her answering a question about sucking upon erect penises, all whilst wearing her smart police uniform. Yes, she did indeed and very much liked her boyfriend going down on her as well. It was an exciting image in his mind. WPC Cartwright upon a bed, naked and with her thighs spread and this boyfriend of hers pushing his face into her sex. Sitting there neatly in her uniform was such a contrast to that image. Jim was sure it would not be long before Mr Crowfoot had her naked.\n\n\"Any questions for the constable, Jim?\"\n\nHe had been quiet, letting Mr Crowfoot do the talking. Now he spoke and asked a question he had been wondering about since the WPC had been interviewing Mr Crowfoot. He had not seen a pocket in her skirt for one, nor had he seen the shape of one at her side -- and he had been looking. \"Do you carry a truncheon like the men?\" It was not at all a question about sex. Mr Crowfoot looked a little surprised.\n\nWPC Cartwright nodded and reached for her handbag. From it she drew out a short wooden truncheon, a 'lady truncheon' as it was known. Perhaps half the length of the full wooden truncheon, bulbous one end and with a series of four turned rings on the other for grip; between the last two rings a leather strap was looped and bound. It looked to Jim rather phallic. A wooden dildo in a handbag. A wooden dildo could, at a pinch, no doubt be used as a weapon! Shown and then replaced in the handbag.\n\nJim was in the study, Mr Crowfoot's study, a place where 'anything goes,' he could ask her whatever he liked and did, \"Have you ever used that on yourself?\"\n\nWPC Cartwright raised an eyebrow. Such a pretty movement.\n\n\"Fucked yourself with it, I mean.\" It was not quite the most elegant way of putting it. It made Mr Crowfoot smile. Perhaps at the lack of style in the question; perhaps where it was leading.\n\nA lovely shrug of the shoulders, \"Of course, all the girls do. 'Wetting the cock' we call it.\"\n\nAn initiation rite in effect? Jim wondered what the men did with their full-sized truncheons. He could not imagine many wives and girlfriends had not succumbed to a request to poke them with it. Men will be men...\n\n\"I think Jim would like to see.\"\n\n\"I have to be... worked up to...\"\n\n\"But you are feeling very worked up, my dear. Quite hot with sexual excitement. You probably feel you need to take that jacket off.\"\n\nIt was starting. Mr Crowfoot was having his way. Visibly she was becoming aroused, Jim could see her colouring, could see her moving her legs. The WPC stood, not to take her leave. Most certainly not yet. She had things to show the men. The hat was soon being joined on the Chesterfield by WPC Cartwright's other clothing. One by one Mr Crowfoot specified them and, one by one, they joined the hat. Such a pleasure to sit and watch the young WPC stripping. Mr Crowfoot did not hurry the process. He liked to savour a slow disrobing as much as the next man -- or Jim.\n\n\"Your brassiere,\" instructed Mr Crowfoot leaning forward, his eyes sparkling.\n\nThe nearly naked WPC was not a big girl in the breast department, but she was most certainly not flat chested. Enough for a handful each but nothing more, very rounded with dark nipples, the pigmentation taking the cue from her hair. All pleasing. Very pleasing.\n\n\"Well, my dear, I think there is only one piece of clothing to come off and then you can show us how you use your lady truncheon. What piece of clothing is that?\"\n\n\"My knickers, Mr Crowfoot.\"\n\n\"Indeed. Off with them, then.\"\n\nIt was Jim's turn to lean forward, staring as her hands took hold of the elastic and rolled them downwards revealing a charming triangle of brown hair, not curled but straight and a lighter shade than the hair on her head. Inside his own 'knickers' his penis strained for release and the opportunity to probe beyond the brown triangle. He knew he would have his chance.\n\n\"The truncheon, constable, show us what you do with it whilst still standing.\"\n\nProbably it had been in bed or in an armchair -- if she had 'wet the cock' just the once. Maybe she had developed a liking for the wooden dildo when her boyfriend was not available and it was often used.\n\nThe young woman reached again into her handbag and brought out the wooden weapon but rather than insert it between her legs she raised it upwards looking at it as she grasped it firmly in her hand. Jim eyes widened, surely she was not going to... but she was. A tentative and so sexual lick and then she was fellating it. Quite amazing to see, WPC's lovely lips rounded around the wooden truncheon. Suitably wettened, she brought it downwards, the bulbous end uppermost and spread her thighs. Instinctively Jim moved from his chair and half crouched to get a better look; perhaps a rather rude thing to do, trying to see more of a woman's 'parts,' as if trying to see up her skirt. So good, though, to see her actually rubbing herself with the knob end, up and down her labia before, ever so slowly, she began to push it upwards, clearly with its end properly positioned. Gradually there was less and less of the truncheon to be seen until, with a satisfied smile on her face, WPC Cartwright closed her thighs together.\n\n\"All gone! My party trick -- not that I do it at parties! Just with my boyfriend.\"\n\nJim thought she would go down a ball at the police station on a long night shift when not a lot happened. She could certainly entertain the boys in blue.\n\n\"A hidden pocket rather than your handbag!\"\n\n\"A bit uncomfortable really but I can walk around.\" And she did, giving Mr Crowfoot and Jim the opportunity to admire her naked bottom and body generally.\n\n\"And does your boyfriend remove it?\"\n\n\"Of course he does, he tugs on the strap.\"\n\n\"Not room for both, eh? May I?\" said Mr Crowfoot.\n\nIt was Mr Crowfoot's study however much Jim would have liked to have reached and tugged on the leather strap, and so it was Mr Crowfoot's hand that went between the girl's soft thighs and pulled down on the strap. The lady truncheon was shiny with wetness now. Without being asked she settled herself back on the Chesterfield and spread her legs wide before reinserting the wooden mock penis. It gave Mr Crowfoot and Jim the most detailed view they could have! Once inserted she began to move it in and out, rotating it a little. It was fascinating. Then her movement changed as rather than holding the truncheon by its grip she used just the leather strap to pull it out, pushing on the end to make it go inwards. Wonderful to watch. Undoubtedly both men were imagining doing that with their own 'truncheons.'\n\n\"Might Jim pull it out now?\"\n\nMr Crowfoot was such a considerate host. Jim was delighted to be able to reach for the strap when WPC Cartwright again stood up.\n\n\"Do you sometimes play with your boyfriend's penis as if it was a truncheon?\"\n\nWPC Cartwright's so pretty eyes looked down at the floor, \"yes,\" she said.\n\n\"Perhaps you might show me with Jim's 'truncheon.\"\n\nA cue for Jim to do what he had been aching to do -- get his cock out. Best though to be as naked as the young WPC. He undressed a lot quicker than she had done. Excited both at the prospect of what might happen and just being naked (and erect) with her. Just wonderful to be standing with his cock up in the air in front of her. Grasped in her hand the lady truncheon and rather mimicking it, his penis rising up from him. She reached and held it at the base just like the truncheon and then banged the two together.\n\n\"I can't really bop someone over the head with Ian's cock.\"\n\n\"No one else in your bedroom.\"\n\n\"Of course not, Mr Crowfoot! Just the two of us, but what I sometimes do is loop a strip of leather around him and then I can... well...\" she began to swing the truncheon around by its strap, just as Jim had seen policemen do in films.\n\n\"I think I can find just the thing. Give Jim a little suck whilst I go and search.\"\n\nSo good to see her pretty face looking at his penis in her hand, easing the foreskin further down as she readied herself, perhaps making her mouth a little wetter.\n\n\"How many penises have you sucked?\" Another question from Jim.\n\n\"Only three.\"\n\n'Only?' Was that a justification? WPC Cartwright trying to suggest it was not many. It would, though, probably be almost twice that number by the time she left the study.\n\n\"Would you like to make it four?\"\n\nThe young women licked. Such a sight. Perhaps it would have been better had she still been in uniform but naked was certainly good! And then she opened her mouth, making a circle with her lips before leaning forward so Jim then felt that lovely first soft encircling touch to his knob.\n\nShe had it well in her mouth when Mr Crowfoot returned. The old gentleman stood watching, no doubt relishing that lovely sight of a pretty woman fellating a penis.\n\nThe policewoman took the leather thong, a thin strip of leather probably for bootlaces; certainly, that was Jim's thought as to why Mr Crowfoot had such a length of leather to hand. He watched rather amazed that something like that should be happening to him as WPC Cartwright looped the leather through itself -- a slip knot - and then around his erect penis but down beyond his balls, drawing it tight so he was trapped -- leashed -- as she tied the ends together.",
        "\"You do this to your boyfriend?\"\n\nThe smile from WPC Cartwright said it all. A highly sexed young woman indeed. Her boyfriend a lucky man to have her play such games with him. A tug from her and Jim had to follow as she led him around the room by his leashed penis.\n\n\"And you see, I can control his entry.\"\n\nShe settled herself down, spreading her thighs wide giving Jim a superb view of her open and hairy sex; outer and inner vaginal lips opening, already swollen from arousal, her standing clitoris and that so moist and absorbing entrance to her body. She pulled Jim towards her; tied so intimately and vulnerably he could but come closer, he was being drawn slowly towards that penis sized hole. The thought, of course, how her vagina was really reserved for her boyfriend, yet he was being pulled in by her, her hands pulling at the leather so that his naked penis touched her wet flesh. Wonderful to see her tongue poke out of her mouth and curl upwards to touch her upper lip. Her eyes were wide and bright. Notwithstanding she was about to 'cheat' on her boyfriend she was very clearly wrapped up in the sex, aroused and keen, wanting Jim's erection inside her.\n\nThe power of the secret room indeed, as she tugged on the thong and slowly pulled Jim into her. And then she pulled him almost out again. Out and in. So good to be controlled in that way -- made to have sexual intercourse.\n\n\"Oh, Mr Crowfoot! What a fine erection! You do yourself proud.\"\n\nThe old boy had undressed whilst Jim had been busy with WPC Cartwright and, as Jim had observed before, Mr Crowfoot might be rather old, but his 'wedding tackle' had the vigour of a much younger man. It stood well, not horizontal but up in the air.\n\n\"I've just got to suck that!\"\n\nJim was pulled from the young policewoman but not for long. She knelt on the Chesterfield but as she did so she stepped over the tied ends of the leather thongs so they came between her legs and, of course, they led back to Jim. All she had to do was tug on the leather and Jim would come to her. And, indeed, Jim found himself being tugged forward, having to get down behind her, his knob poking once more at her sex; but this time from behind. Taking her 'doggy style' only it was she pulling him in with the leather thongs sliding against her sex.\n\nMr Crowfoot had got the idea. Jim watched the old man walk his erection around the Chesterfield, so it came up to the girl's mouth. It had been good being fellated. It was good too to watch her fellate Mr Crowfoot, see her lips encircle and then draw his grand old knob inwards. as Jim knelt there with his rigid cock all the way inside her hot, wet sheath. Jim felt with his fingers and found the leather was tightly drawn against her sex. He moved one of the two thongs, so they were not on one side of her clitoris but either side, so it poked between them. What did that feel like for a woman, to have her clitoris rather squeezed between two wet leather thongs? What did it feel like when they moved, sliding either side of the raised 'little man'? He stroked and got a very immediate reaction from the WPC -- a series of shivers running through her body. Was that her coming?\n\nHis wet fingers moved onto her breasts, hanging there as she worked Mr Crowfoot with her mouth; he was rolling her nipples with her own wetness. Jim knew that. He felt the tautness of the leather thongs relax. Presumably an indication he should begin a fucking movement. Unlike the former position she could not pull him from her, only to her. And so it was, Jim pulling back on the stroke and being assisted forwards on the instroke by a real tug to his penis and balls; the impact of his body upon her bottom sending her forward onto Mr Crowfoot's cock. It was indeed a lovely synchronised sexual act between three persons. Mr Crowfoot's cock going deeper into WPC Cartwright's mouth and Jim's penis doing the same in her vagina when she tugged -- plugged at both ends, indeed fucked in her mouth and vagina by two very hard cocks. \n\nAnother series of shudders from the policewoman but the male equivalent could not be long delayed. The sexual act between the three of them was reaching its climax. Sex is really meant to be between two persons, two consenting and enthusiastic adults, but did this act not almost have something of the same symmetry? The girl positioned between the two men, opposite entrances to her body receiving penes and, indeed, about to receive semen.\n\nJim would liked to have fucked for longer, but he was being tugged. He could pull away but then he was pulled back. He could not pull out because the girl was not letting him have that much lead, that much play. Jim was just tugged back in again, his whole penis sliding back into the wet warmth. It was all too much for the young man and his penis went into spasm shooting his stuff into the young woman police constable's sex. In her mouth a much older but no less capable penis did much the same. A considerable pleasure for both men.\n\nA pause and then Mr Crowfoot said, \"Well, my dear, onto your next call I think.\"\n\nHow good simply to watch the young woman dress with her pubic hair rather matted with sexual lubrication, her cheeks well coloured and still licking at her lips. Such a pretty girl and just so sexual. She would need to redo her pale pink lipstick.\n\n\"Well, I...\" she was looking puzzled as she set her hat upon her head.\n\n\"Could you let yourself out, I'm feeling rather tired and Jim's not really in a state to go the front door.\"\n\n\"No, I... thank you Mr Crowfoot for answering my questions. If I need to ask anything else...\"\n\n\"You have my number, you wrote it in your notebook, but please do call in person. So much nicer than on the phone.\"\n\nJim heard the front door close. He got up and walked out of the study and into the front room to watch WPC Cartwright walking down the garden path. He was careful to stand back so as not to be seen. He was naked after all and, rather unusually, had a leather leash hanging from his penis. She paused, turned and looked back. There was very definite puzzlement upon her face and then she looked at her watch. That galvanised her into motion and she sped down the path, her black nylon legs moving quickly and her black, sensible shoes barely touching the ground. Yet the panda car did not speed off. Jim rather surmised WPC Cartwright was renewing her lipstick and tidying her hair. Jim smiled. What a superb experience. Whilst the young woman could not remember he was unlikely to forget -- ever!\n\nMr Crowfoot was still sitting in the study on the Chesterfield. Jim flopped down beside him. He stretched himself back on the Chesterfield, soft penis lolling rather obscenely upon his thigh and still exuding a little semen, the leather thongs trailing.\n\nTwo naked and sexually satiated men.\n\n\"I don't suppose she will visit again.\"\n\nMr Crowfoot sighed, \"No, I suppose not. Our WPC was so lovely. Her boyfriend is very lucky. It would be so good to do that all over again.\""
    ],
    "authorname": "Drmaxc",
    "tags": [
        "dildo",
        "fellatio",
        "interracial",
        "mature",
        "mind control",
        "old house",
        "old young",
        "policewoman"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/room-with-a-secret-ch-08"
}