{
    "title": "Webslut Madison Ch. 10",
    "pages": [
        "Madison stared blankly at her computer screen. She was wearing a pair of tight destroyed jeans and a t-shirt that she had quite literally cut in half so that almost her whole midriff was exposed. She never wore the shirt anywhere but to bed, but she did quite like sitting in her bedroom, looking at herself in the mirror, and thinking about how much of a slut she had become, even if nobody saw her in it.\n\n\"Well done, Madison,\" began the message from her blackmailer. \"You really outdid yourself with that video. I knew it would be arousing, but you really went all out. You humiliated yourself far more than I instructed or even anticipated - I suppose there really isn't any stopping you when you get horny enough, is there?\"\n\nMadison read the message, looking for her next task. She had truly begun to accept that her fate was to be an exposed, humiliated webslut, shown off online for the world to see, with her real name and city, just waiting for her entire world to get turned upside down the instant she was recognized by someone she knew.\n\nIt wasn't mere acceptance, however. Madison was regretful at times about what she had become. In fact, most of the time when she wasn't aroused by her own behavior, she was humiliated and ashamed of herself. She sat in class wearing a slightly more revealing top than usual and felt ashamed. She ate lunch with her friends and sat there feeling regretful about what her life had turned into. \n\nBut, every time she thought about changing her ways, two things happened - first, she became fearful that her mystery blackmailer would really follow through with his threats. Second, she would eventually become so aroused that she couldn't help herself. She wanted more and she knew it. She was helpless to stop herself. And the more she began to accept it, the less she tried to overcome it. She knew she needed the addictive rush brought about by digging herself into an ever deeper hole, an ever expanding web of humiliation that could only end with her own ruination. And the more she felt that addictive rush, the more she craved it, regardless of the consequences.\n\nOver the next several weeks, Madison completed several tasks. First, she had blindfolded herself and stood nude in front of her bedroom window for ten minutes. It was not the most difficult task except, of course, if anyone she knew happened by the window, it would have been quite embarrassing, although she would not have known, because her instructions were to make a video of it and not to remove the blindfold until she had waited ten minutes, masturbated to orgasm, and closed the curtains. \n\nOf course, Madison filled the bulk of her several minutes of masturbation with dirty talk, begging out loud for any potential onlookers to call her a slut, watch her, humiliate her, and expose her.\n\nAfter that, Madison had written \"I will fuck anyone\" in large letters on her stomach and worn fairly normal attire - jeans and a sweater that only gave a peek of her stomach and did not reveal the words written on her body - to a grocery store. She had been instructed to place her phone on one side of an aisle, raise he sweater to expose the writing, hold it for ten seconds, and replace her sweater. She did this, as instructed, at three locations in the store. \n\n\"I will fuck anyone,\" she told the camera. \"I mean, I know it's not exactly true, but like - if someone saw me like this, I - it would be - I would die!\" She continued, \"And I would get off so hard.\" In fact, she got so horny she unbuttoned her jeans in the car and removed her sweater for the ride home, filming herself as she talked to the camera the entire time, occasionally flashing her nipples. She talked about how she needed this - needed the humiliation and exposure, how she needed to be a slut, how she thought in that moment that she really would fuck, literally, anyone. \n\nYet another task took Madison to the school library, where she sat in a short skirt and no panties and flashed the camera five times, for thirty seconds each, in between stacks of books before giving her breasts, with the words \"public fucktoy\" and \"exposed slut\" written on them, ten smacks each with a ruler. She repeated this five times as well before begging to be ruined and exposed once again, sending the video to her blackmailer immediately afterward.\n\nAnd yet another time, Madison was instructed to go shopping with a butt plug shoved up her ass, which she did before masturbating in her car. The video, including her insertion of the plug in a mall restroom, was a half hour long.\n\nFinally, warmer weather arrived, and with it, the moment Madison both feared and wished for - the moment when she would be instructed to engage in a humiliating video session in class.\n\n\"Hello again, Madison,\" the message began. \"It's good to see that you have been keeping up with your task assignments so well. You have been doing so well, in fact, that I think I need to raise the difficulty a bit.\n\nWith that being said, your attire for this task will be as follows: a v-neck crop top, the hemline of which may be no longer than the point halfway between the bottom of your breasts and your bellybutton. The color does not matter. You will wear jeans, and they may be slightly high-waisted, but your pierced navel must be exposed along with at least two fingers' width below it. You may wear a cardigan or jacket but may not button, zip, or otherwise close it to obscure your midriff at any time. Your bra and shoes are your choice. Your ass will be plugged and I want video proof of this.\n\nAfter you have dressed yourself as instructed, you will record yourself as you lift up the hem of the top and write the word \"slut\" in one inch letters, the bottoms of which shall be no more than the width of your pinky finger higher than the bottom hem of the top when it is in its ordinary position. \n\nYou will then attend class wearing this attire, with the word \"slut\" barely covered and your ass plugged. When you arrive in class, you will remove the cardigan/jacket and leave it off for the duration of the class. You will record yourself walking to class and removing the cardigan/jacket. You will excuse yourself during class to go to the restroom in the classroom building and masturbate to orgasm with the top raised to expose the writing on your body. You will record yourself as you exit the classroom, walk to the restroom, masturbate, and return to class.\n\nOnce you begin to masturbate, you cannot stop for any reason, including, but not limited to, the entrance of another person into the restroom. You may masturbate inside a stall. You must use the word \"slut\" out loud at least once per minute until you are finished. Once your class ends, your task is over, except that you must record yourself exiting the building.\n\nGood luck, and I have no doubt that you will enjoy yourself.\"\n\nMadison froze. \"Oh my God - I can't do that!\" She thought. \"Go to class wearing - THAT? With slut written on my stomach? Barely covered? Holy shit, what if my top rides up? What if someone hears me? What if - shit, what if -\" There were so many what ifs, Madison could hardly consider them all.\n\nMadison legitimately did not know if she could bring herself to go through with it. She spent most of the rest of the day, when she wasn't busy with something else, dwelling on the task she had been commanded to perform. \"This is crazy,\" she thought. \"And the really crazy part is, I go to class and I sit there looking innocent, well - I mean, more innocent than I actually am, and - deep inside of me I know I'm exposed all over the internet, and I never really know who knows about me, but I try to keep it a secret from everyone.\"\n\nShe thought about what would happen if she went through with it. And, of course, she thought about what would happen if she didn't. She thought about the blackmailer, sitting behind his (or her) computer screen, sending links to the video proof of all of her filthiest exploits to her friends, maybe even her family. \n\nMadison seriously considered messaging her blackmailer and begging him to reconsider. Perhaps she would offer to do something in private, but more extreme in other ways? Or she could offer to do something more humiliating, in a public place, but somewhere far away from campus where she would not be recognized. Somewhere where her professors, at least - the very people who would eventually be recommending her for a teaching job - would not see her dressing and acting like a trollop.\n\nHowever, she also knew that she could likely pull off the task without being caught - it would be humiliating, sure, but if she acted carefully, she wouldn't expose the writing on her body or get caught masturbating. Finally, she knew that the idea, as crazy as it was, was arousing to her, and there was definitely a part of her that craved the risk she was taking for the sake of her own arousal. At last, she decided not to beg for another task.\n\n\"I'm really fucked,\" she thought as she sat and considered her predicament the following day. \"Either I go to class dressed like a complete slut, risk my shirt riding up and everyone seeing the word slut written on my body, risk someone hearing me call myself a slut while I fuck myself in the school bathroom - or I risk having people I know find out all about me.\"\n\nOf course, there was a part of Madison which was genuinely enjoying the situation, and that part was seemingly growing by he hour. Finally, two days after she received the message, she could not take it anymore.\n\n\"What if I - I just dress up and pretend,\" she said out loud. She already had on jeans that fit the blackmailer's orders, and she quickly went to her closet and pulled out a short, white crop top matching the remainder of the order, along with a long, olive green cardigan. In a matter of seconds, she pulled off her T-shirt and replaced it with the crop top.\n\n\"Slut,\" she said out loud as she grabbed a marker. Lifting up her top slightly, she meticulously scribbled the four letters onto her tanned flesh. She stood before her mirror and placed her arms behind her head, causing her shirt to ride up and the letters to become visible. \"Slut,\" she continued, \"what if someone sees me like this? What if I secretly want them to?\"\n\nAt that moment, seeing herself dressed in that outfit, she knew there was no going back. \"God, I'm fucked,\" she said out loud. \"And the fucked up thing is, I actually want this. I actually want to be forced to do this. And I know that I'm just giving him more material to use, to force me to do even more, and God, I want that too. I asked for this and I got it and I want more.\"\n\nMadison was so aroused it was all she could do to keep from ripping her jeans off and fucking herself right there. \"I'm going to do it,\" she said, \"whether I completely want to or not, I don't really have a choice. And that's exactly how I like it.\" Madison smiled at her reflection in the mirror. \"I really am a slut.\"\n\nMadison unbuttoned her jeans for added effect before sitting down on her bed. \"God, I want to fuck myself right now,\" she thought. \"But this will be so much better if I make myself wait - build up anticipation - and have the orgasm of my life in the school bathroom. God, am I fucking nuts or what? I actually hope somebody hears me - comes in - tells me I'm a nasty slut and forces me -\"\n\nMadison shook her head. She knew if she let these fantasies run rampant any longer, she really would be fucking herself in the next minute. \"Tomorrow,\" she thought. \"Tomorrow I wear this to class and make the video and do exactly as I have been told, and I do not cum until I'm in that bathroom.\" For one thing, she wanted the extreme rush that would be increased by not touching herself too soon. For another thing, she knew that she needed to cum quickly in that bathroom - the quicker the better, because the longer she remained in there, the likelier she was to get caught.\n\nThat night, Madison slept fitfully. She hasn't even bothered to wash the writing off her body, reasoning that the permanent marker would remain fresh on her skin the following day. She awoke almost hourly, pulling up her slightly longer, cropped T-shirt to look at the word on her body before going back to sleep, well aware of what she was about to do.\n\nFinally, morning came. Madison carefully scrubbed off the writing in the shower, although it did not completely disappear. She made her way to the bedroom in only a towel, and after closing her door she threw the towel aside. She reached for her phone, and after sighing deeply, flicked on the camera and began recording.\n\nMadison picked up a black bra and put it on. It was mainly lace, and it perfectly outlined her cleavage, slightly pressing her breasts together and leaving the flesh between her perky tits exposed. She then pulled out a medium sized silicone butt plug from her dresser drawer, watching in the mirror as she first lubed the plug and then carefully slid it into her ass.\n\n\"Oooh,\" she moaned softly as she forced the plug in until it came to rest in its natural position, with the bulb inside her rectum, which had tightened around the narrow bottleneck of the plug, and the wide, flat end of the plug pressed against her hole. \"I can't believe I'm actually about to go to class with a plug in my ass,\" she said to the camera. \"Just the thought of it is making me wet. I feel like such a slut.\"\n\nMadison reached for a lace thong to match her bra. It was not much more than a string around her waist and a string between her legs, and it certainly did not hide the plug as it protruded from her ass. It was a little too tight, to the point that it must have been a little uncomfortable. She bent over, showing her ass to the camera. \"See?\" She said. \"We my poor, slutty, plugged ass? I feel like such a whore wearing these panties with this plug.\"\n\nMadison next reached for her jeans. In accordance with her instructions, they rose to about two inches below her navel, leaving her dangly piercing exposed. She pulled them on before turning her ass to the camera again. \"Can you tell?\" She asked. \"I wonder if anyone will know I have the plug in? What do you think?\" She turned her face to the camera and smiled.\n\nThe next step was to put the white crop top back on. Its hem was just a little higher than the midpoint of the line between the bottom of her breasts and her navel. Between the jeans and the top was about seven inches of Madison's exposed midriff.\n\n\"God, I look like such a slut in this,\" she said. She wheeled her desk chair in front of the camera and sat down. The back of the hair was to her left, and the camera was behind her. In that position, her top rode up in the back and her jeans rode down, virtually doubling the amount of exposed skin. \"My whole fucking back is out,\" she moaned. \"I really do look like a cheap slut. The whole class is going to think I'm a whore!\"\n\nSecretly, Madison was beginning to like the idea of going to class dressed like that, and of her classmates and professors thinking of her as nothing more than a slutty fuck toy. That secret would not remain a secret for long. Madison turned to the camera and smiled. \"I actually like the idea. Like - there's a part of me that wants the whole class to think I'm a slut. To know what I am. I just hope they don't find out about me - like, being exposed - god, oh god, maybe I - maybe I just need to be ruined like that.\" Madison chucked, a little nervous and a little embarrassed, but highly aroused.\n\nShe stood up and lifted her top. Just above the bottom hem, Madison re-traced the mostly washed-off letters of the word \"slut\" with permanent marker.\n\n\"There. Slut.\" She said to the camera. \"That's what I am. A slut.\" Madison raised her arms above her head, causing the shirt to ride up and the flesh bearing the humiliating inscription to be exposed to the camera. \"God, I can't raise my arms - I can't raise my hand in class, or - or - well, let's just say - everyone can read this.\" The sudden realization that she could not so much as raise her hand in class without revealing her humiliating marking sent shivers down her spine. \"How can I possibly keep this covered?!\" She wondered to herself.\n\nMadison lowered her arms and adjusted her top back to its natural position. She then shrugged her shoulders slightly, causing the bottom half of the word \"slut\" to appear from under the top. \"Shit,\" she said to the camera. \"I basically can't move my arms!\" It might have only been half of the word, but it was enough for anyone with a brain to tell what it said.\n\nMadison's heart raced. She was now fully aware that the slightest misstep, the wrong movement or body positioning would immediately reveal the word she had written on her own body - to her classmates as well as to her professor - and if she forgot for a split second and allowed that to happen, there would be no taking it back. She would be forever remembered as the girl who went to class in a revealing top with the word \"slut\" written on her exposed body.\n\nShe was nervous - she would have to mind her clothing the entire time she sat in class, lest she completely humiliate herself. As Madison stood there, looking at what she had done to herself, she started to become aroused. \"What have I become?\" She thought out loud. \"I can't believe I'm actually wearing this top to class, let alone going with a plug in my ass and 'slut' written on my stomach, barely covered and at risk of coming out at any minute.\"\n\n\"God, it would be so hot if my top rode up and everybody saw it - just - the sheer humiliation would be incredible!\" Madison admitted to the camera. \"I mean, I'd be standing there, people pointing, turning red in the face, completely destroyed, and I don't think anything would turn me on more, oh, God, I'm so horny just thinking about it I mean I like - as much as I would like it, it would be horribly humiliating at the same time, and there's no way I'm going to let that happen, but - God! I mean, I'm front of strangers, fine, but - these are people I go to school with!\"\n\nMadison lifter her arms again. \"I'm a slut,\" she told the camera. \"See? Slut. I'm Madison Holt and I'm the class slut. God, I wish I could just let this happen, and stand there and raise my arms and announce what I am!\"\n\n\"It's a hot fantasy,\" she continued, \"but it would be so humiliating and embarrassing that I could never I mean, I like it but - not in class - that's why I'm showing you,\" she said to the camera. Slowly, she picked up the green cardigan and put it on. It didn't help her situation much, because she wasn't allowed to close it. It just focused the attention on the center of her stomach - where the letters would be if they peeked out.\n\nMadison looked at the clock on her nightstand. It was just about time to go to class. She picked up her bag, which was of the brown leather one-shoulder variety, and picked up her phone. She took a deep breath. \"I still can't believe I'm actually doing this,\" she said \"Any of this.\" She tugged on the hem of her top and stepped slowly out from her bedroom. Her roommate was sitting on the couch and looked over at Madison as she exited her bedroom.\n\n\"What's up with your outfit?\" She asked.\n\n\"Why what's wrong with it?\"\n\n\"You're going to class dressed like you're going to a club or something,\" she said. \"Is there a guy? In your class?\"\n\n\"No,\" Madison said. \"Just felt like finally breaking out of my comfort zone. How do I look?\" She was careful to keep a hand near the bottom hem of her top, ready to tug on it at a moments notice, not wanting the word written on her body to become exposed.\n\n\"Well, honestly - you look sexy, but like a bit of a - you know - a bit slutty too.\"\n\n\"Thanks,\" Madison said awkwardly. She hurriedly left before her roommate could say anything more or notice the phone she was holding in her hand and using to record herself.\n\n\"I feel like such a slut,\" Madison told the camera once she was outside and out of earshot. \"See? Slut.\" She lifted up her top briefly to show the writing to the camera. \"I love feeling like a slut. And looking like a slut.\" Madison smiles at the camera. \"I am a slut,\" she said. \"A horny, exposed slut. I really hope nobody notices that I have slut written on my skin. Or my butt plug. But this outfit will draw attention and - knowing people are staring at me, knowing I could be exposed as a slut to my whole class today - God, it makes me want to touch myself.\"",
        "Madison walked toward her class. She had readjusted her top so nobody could see the writing, and continued toward class, crossing the street. She felt vulnerable, knowing how she looked, knowing that she would have to sit through class with the cardigan off, knowing that it would be difficult to take it off without showing everyone the writing on her body, knowing that she would look like a trollop, and knowing that she was being forced into all of it - including masturbating in the bathroom. She knew she craved it, though, and knew that she wanted to be forced and compelled to do all of it.\n\nMadison didn't say much the rest of the way. She was on time this time and there were too many people around. She wondered if anyone noticed the video and wondered what she was doing. And of course, she noticed eyes darting to and from the exposed skin between the left and right sides of her cardigan. She felt trapped and exposed, and wondered if anyone knew what she had written on her body - or what she had stuffed in her ass.\n\nAs she walked, the plug began to become more noticeable. She could feel its pressure inside her rectum as she took each step. As she approached her class, she knew she wasn't walking as she usually did. She was swaying her hips a little more and taking shorter steps with her feet a little farther apart, trying to stifle her arousal as well as the uncomfortable sensation of a long walk with her ass filled. She wondered if anyone noticed the difference in her gait.\n\n\"Okay, here goes,\" she said to the camera before entering the building. She quickly maneuvered into the lobby. A group of several guys standing in the center of the wide room seemed to feast their eyes on her body. A couple of girls walked by and gave her a disgusted look. \"I feel like such a cheap little slut,\" she thought. \"And that's good, that's what I deserve. Because that's what I am. I need this. I need to feel like a slut. I need to look like the class whore.\"\n\nMadison stepped into the classroom. She could feel the conversation die as she walked in. Guys stopped mid-sentence, unable to focus their attention on the conversation they were having before they saw her outfit. \"Oh my god, look!\" She heard one girl exclaim to a friend. The friend turned and looked, and Madison could see the two whispering as she then turned away, and although she couldn't hear what they were saying, she knew it couldn't be nice.\n\nMadison walked up the middle aisle of the classroom and approached her usual seat right in the center of the room. Oh, how she longed to just lift up her shirt and blurt out what she was, blurt out that she was exposed all over the internet, beg everyone to stare and to ultimately ruin her. She needed it. She craved it so badly. She desperately wanted to kneel on the floor and slide her jeans down, exposing her plugged ass to the room. She wanted to be pinned to the floor as she was forcibly stripped, teased, and tormented. \n\nMadison's mind drifted away to a land of fantasy. There she was, nude, plugged, \"slut\" written on her stomach. She was lying on her back on the floor. Half the class had their phones out, taking pictures of her. A girl asked her how she expected to become a teacher when she acted like such a whore. \"I don't - I won't - I want you all to ruin me,\" she said in her fantasy. \"Ruin my reputation. Post those pictures online and tell everyone that I'm a worthless slut. I don't expect you to have any respect for me. Use me, please!\"\n\nA guy bent down and spat on her face. A girl took off her flip flop and rubbed her bare foot on Madison's cheek. Then, she felt something warm on her stomach. She looked up, and - oh my god! A guy had pulled his cock out and started pissing on her! What the fuck! Madison wasn't into that - or was she?! Now she could not be sure.\n\nThe thought of someone pissing on her, as humiliating as it was, was off-putting enough to snap her out of her fantasy world and bring her abruptly back to reality as she realized she had to bring her mind to a halt and fast. She quickly realized that she had been standing at the front of the class for several seconds, allowing the occupants of the room to have a much longer, lingering stare at her body than even she was comfortable giving, at least in this situation. Thankfully, she had at least absent-minded my kept tugging downward on her top as she stood there, at least she thought she had.\n\nMadison walked to the third seat in the row. She felt like she was walking down a runway the way people stared at her. She reached the seat and saw Dan, the guy who always occupied the seat to her left. Madison placed her bag on the floor next to the seat. She didn't look at anyone at this point - she didnt want to see their reactions. She could feel their reactions, and that was enough for her to become immensely aroused.\n\n\"How's it going?\" Asked Dan.\n\n\"Oh, uh - good, not bad,\" Madison replied as if she had awoken from some sort of stupor.\n\n\"Don't take this the wrong way, but you look really cute today,\" he said. Madison thanked him, blushing a little. Dan was about six feet, two inches tall. He was thin, probably weighing about 170 pounds, and Madison liked to imagine that he had a six-pack hidden somewhere under his polo. He had dark, curly hair that was neither long nor short, and he always seemed to have a five o'clock shadow. Madison thought he was cute, but had never tried anything with him.\n\nAt that moment Madison remembered that she had to take off her cardigan. Holding her top down with her left hand, she first placed her phone in her bag. She leaned it up against some of the contents of the bag so that the camera portion was sticking out and continued recording her every move from inside of the bag.\n\nMadison then held her top with both hands as she shrugged her shoulders, trying to get the cardigan to fall off her shoulders and onto her arms on its own. It didn't work very well. She then tried holding her crop top with her right hand and pulling the cardigan off of her right shoulder with her left hand, by that didn't work either, because her right elbow was keeping her from pulling the cardigan off enough to let it fall off her arm on its own. It was somewhat of a spectacle, and people were starting to notice. Of course, all of this was an effort to keep the markings on her midriff hidden.\n\n\"What are you doing?\" Dan asked with a snicker.\n\n\"Oh, um -\" Madison began, a little embarrassed that he had noticed. \"I'm trying to take this off, but I don't want my top riding up,\" she admitted. \"It's a little revealing.\"\n\n\"Here, let me help you,\" he offered. Madison held the front of her crop top with her left hand and turned her back to Dan, offering him her right hand behind her back. He pulled the cardigan off her right shoulder and down her arm, finally removing it from the right side of her body altogether. She then held her top with her right hand and Dan repeated his actions on her left side.\n\n\"Thanks,\" Madison said nervously as Dan handed her the cardigan. \"What do you think?\" \n\n\"It looks cute,\" Dan replied.\n\n\"It's not too - you know, revealing - is it?\"\n\n\"No, not at all,\" Dan lied. \"It's cute - but I mean, it's not inappropriate or anything.\" Of course, Dan knew that it wasn't an appropriate outfit for a future teacher, but he was so excited to see a girl like Madison wear that outfit to class that he didn't dare do anything to discourage her.\n\nMadison sat down in her chair. She was not comfortable at all. Her top rode up in he back, and she could feel the guy behind her locking on to her exposed flesh with his eyes and not letting go. She felt exposed. She knew she was being looked at, checked out by the guys and judged by the girls. She also could feel the plug pressing into her ass now that she was sitting down, and it not only became uncomfortable, but became arousing as well.\n\nMadison tugged down on the front of her top again. The last thing she wanted was to expose \"slut\" to anyone - not here, anyway, and not now. She shifted her position in her seat, slouching to allow her skimpy top to cover more of her exposed midriff. The camera kept rolling, capturing the whole thing. Madison's heart began to race. Se knew what the next part of her task was. She took a deep breath, trying to keep her hands and thighs from shaking - she needed to appear composed in her class, and she didn't want to give away the fact that she was a nervous, horny mess inside.\n\nThe professor came in and started his lecture. He didn't even notice Madison's outfit, or if he did, he did his best not to stare or draw attention to it. It didn't matter. Madison could feel Dan sneaking glances t her exposed back and left side from his seat to her left. She tugged nervously on her top again. She looked to her right once to see a cute girl giving her a disgusting look, and the girl quickly turned away when Madison looked. And she knew the guy behind her, an overweight, slobby type, was piercing her back with his eyes. She wondered if her thong was exposed in the back, but she didn't dare check. Giving that guy an eyeful of her panties was the least of her worries.\n\nShe kept tugging on her top every minute it seemed as class went by. Madison realized that she wasn't paying the least bit of attention. She was becoming aroused like she had never been before. She could feel herself press her legs together, slouch her shoulders, and move one leg against the other in hopes of feeling something, anything, between her legs. She leaned forward, spreading her legs, trying to force the plug deeper into her ass. She needed this. She needed some sort of sensation that would add to her arousal. \n\nMadison leaned back, tugging down on her top to keep the filthy scrawling covered. She looked over at Dan, who was now ogling her exposed midsection. She adjusted her top again, and could sense that he knew she was uncomfortable and began stealing glances at her as opposed to staring. Madison lifted her feet off the floor, again trying to shift the position of the plug in her ass ever so slightly. She spread her legs and then closed them again.\n\nFinally, Madison couldn't take it anymore. It was time. She wasn't scared of what she was going to do anymore - she had become so aroused that she craved it. Quickly, she stood, bent down to pick up her bag, and threw it over her left shoulder with her left hand.\n\n\"Shit!\" She thought. She had forgotten to make sure the word \"slut\" didn't pop out from under her top! That was a risky maneuver and she knew it. \"Fuck! I hope it didn't - I hope nobody saw!\" She felt like a tramp, a tease, and a trollop as she walked to the front of the class, took a hard right, and headed for the door. Every eye in the room focused on her as she marched her tight, exposed body to the door and left the room.\n\nAs soon as she was outside the classroom, Madison pulled her phone out of her bag and was once again talking to the camera. She looked around, looked back at the camera, and began.\n\n\"God, I - I'm not sure if - I hope nobody saw the writing on my stomach, I picked up my bag and - I think my top might have come up. I don't know - I hope nobody saw. But I guess if someone did, then I - then The whole class will know what I am. God, that is so hot, all those people knowing I'm a slut and knowing all about the fact that I'm exposed everywhere - forcing me to give them blowjobs to keep their mouths shut - God, I would really be a slut!\"\n\nMadison kept walking to the bathroom. \"I really hope nobody saw it, though, I mean - it would be hot, and one of these days I really do want to be completely ruined but - I want to have a lot of fun first, you know? But I'm really not sure - someone could have seen it.\" Madison looked around to make sure nobody was in the vicinity. \"Someone could have seen this,\" she said as she pulled her shirt up to expose the word \"slut\" as she walked through the hallway. \"Hell, someone might see it now. They might see that I'm a slut, if they didn't already know based on my outfit.\n\n\"God, I love that too, just - being forced to dress up and up to class looking like a whore. All the guys were staring, the girls scowling - I want them all to fuck my ass, one after the other, tell me I'm a no good whore and I'm such a stupid slut for destroying myself online - and I want them to leave me there covered in their cum and post a video of them forcing me, forcing me to take their cocks and eat their pussies, forcing me to be a huge slut. And I want to be forced to wear even less to class than I did today. Forced. Please, please, someone do this to me. I want someone out there to literally ruin me.\"\n\nMadison had reached the restroom. Thankfully, she hadn't encountered anyone on the way. She quickly entered a stall and threw down her bag. She hung her phone by a piece of string that she had run through the case ahead of time, by hooking the string to the coat hook on the back of the stall door. She wadded up some toilet paper and stuck it between the phone screen and the door so that the phone would tilt downward and capture her every move from the best angle - above.\n\nMadison's shirt was still pulled up to expose the writing on her body as she quickly took her shoes off and then pulled her jeans off, putting her shoes back on only because of where she was. She turned her ass to the camera, bent over, and gave a show as she pulled down her thong. She pulled it off, over her shoes, and put it in her bag.\n\n\"I just wore a butt plug in class,\" she said as she spread her cheeks, giving the viewer a nice look in between them, before she straightened up and turned around. She smiled at the camera before continuing, \"because I'm a filthy little slut. And I liked it, and it turned me on, and now I came here to fuck myself.\" With that, Madison slipped two fingers into her swollen, wet pussy, which might have been as wet as it had ever been. Madison could smell her pussy as soon as she took off her jeans, and it only made her feel like even more of a slut.\n\nMadison sat down on the toilet and leaned back, spreading her legs and facing the camera. \"Ohhhh, yes,\" she whispered at the camera. \"What if someone comes in here, and catches me? Ohhhh God, please come in here and catch me. Make me do filthy things to keep you quiet, ohhhh yes!\" Madison fantasized about a heavyset butch lesbian girl hearing her moan and kicking her way into the stall before forcing Madison to eat her pussy, leaving Madison a horny, slobbering mess on the floor before leaving as if nothing had happened.\n\n\"God, ohhhh, what if it's someone from my class? Oh god, I fucking want someone to - to fucking catch me! Fucking humiliate me! Fucking tell everyone I'm a dirty nasty filthy slut who wears butt plugs to class and writes \"slut\" on my stomach and goes to class dressed like a whore and likes it so much I leave and fuck myself in the school bathroom! Fucking tell everyone what a nasty slut I am! Humiliate me in front of my - my friends and make them see what all my dirty little secrets are! And tell them I'm exposed all over the internet and I can't help it anymore and I want to be ruined!\" \n\nMadison was now vigorously pounding her cunt with three fingers. Her hand slapped against her pussy loudly enough that she briefly wondered if it could be heard out in the hallway. And her left hand was wrapped under her left leg, occasionally reaching for the plug in her ass, pulling it out and shoving it back in again so she could feel the sensation of her ass being stretched as she fucked her pussy. \"Mmmm, fuck, I'm such a slut!\" She moaned loudly.\n\nMadison quickly pulled her top off with her left hand only, remembering her instruction not to stop masturbating, and threw it in her bag, which was sitting on the floor. \"Yes, mmmm,\" she moaned as she pressed a fourth finger into her pussy. \"I'm webslut Madison, and I want you guys to watch me fuck myself and ruin me! Ohhhh, I'm not getting spread around fast enough! I need to be destroyed, to be ruined! Ruin my reputation and ruin my life! Please!\"\n\nMadison closed her eyes. Just then, she heard the unmistakable sound of someone opening the door and entering the bathroom. She opened her eyes wide, continuing to fuck herself slowly but forcefully as the girl took a stall two stalls down from her. \"Oh, shit, I wonder if she knows I'm in here.\" Madison thought.\n\n\"Oh, god, this is so hot!\" Madison mouthed to the camera. \"I'm so fucking horny I just want to cum!\" Madison closed her eyes and leaned her head back. She thrust her fingers back inside her pussy as she moved her hips forward to accept them. She allowed her fingers to escape her pussy before thrusting them in slowly again.\n\nKnowing that there was another girl in the bathroom only made Madison that much more aroused. She removed her fingers and thrust them in again. She could now hear the girl urinating. Madison just couldn't take it anymore. She had reached the point that she did not have the will to hold back, her aroused state had won, it had taken her over one hundred percent and there was no return. \"Ohhhh,\" Madison let out a soft moan.\n\n\"Hello? Is there someone in here?\" Madison heard the girl say.\n\nIn her stall, Madison was no longer slowly thrusting. She had been busted, and to her amazement, she loved it. She moaned again as she thrust her fingers into her cunt again as she pulled the plug out of her ass and thrust it in hard. Fueled by desire, she was thrusting her fingers in and out forcefully, at a rate of about three thrusts back and forth each second. Her hand slapped against her labia, creating the unmistakable sound of sex.\n\n\"Umm, are you okay?\" The girl asked.\n\n\"I'm fine, I just - I'm -\"\n\n\"Are you - you know?\"\n\n\"Yes, yes, yes! I'm fucking myself, I'm - I don't care - fuck! I'm a slut! I'm a slut fucking myself in the school bathroom, ohhh, can you hear me, I'm -\"\n\n\"Oh my GOD!\"\n\n\"Yes, yes, you fucking caught me, oh, God, I wanted this, OHHH I'M SUCH A FUCKING FILTHY SLUT!\" YES! YES! FUCK! YES! Madison screamed loudly as she came. Her hips were rocking back and forth on the toilet seat. Her fingers were shoved sideways in her pussy as she went. \"Fuck yes, stay and listen, I fucking love it!\"\n\nMadison had never been so humiliated in her life, and she had never been so aroused. She shook violently as she heard the toilet flush in the other stall. \"Ohhhh, god, yes, that was a good one, ohhhh yes!\"\n\n\"Did you just cum?\" The girl asked.\n\n\"Yes, I did. God, was that good.\" Madison removed her fingers from her pussy at last and began to lick them clean for the camera.\n\n\"So do you, umm, do this often?\" The girl asked. Madison was starting to worry that she wasn't going to leave.\n\n\"No, I mean - first time in a school bathroom.\"\n\n\"Yeah. You should try to do it in a more crowded place without anybody hearing you sometime. It's hard. Really hard, but hot.\"\n\n\"Oh, thanks,\" Madison said. She couldn't believe anyone would think of that, especially not the one girl who happened to come in while she was in the act.\n\n\"You know, come to think of it, I - I'm going to go do it in the main cafeteria bathroom. 12:30, next Wednesday. It's my favorite place because there are always a ton of girls coming in and out. You should come join me - either just listen, or do it too, up to you.\"\n\n\"Okay, maybe,\" Madison said.\n\n\"Here,\" the girl said as she stuck her hand under the stall door. She held out a twine bracelet with beads on it. \"So I can find you if you decide to come.\" \n\n\"Thanks,\" Madison said. She was starting to calm down and her heart rate was returning to something moderately resembling normal. She picked up her panties and put them on as she heard the girl run water to wash her hands.\n\nMadison then picked up her top and put it back on as she heard the girl remove a towel from the dispenser. And as Madison took off her shoes and pulled her jeans back on, she heard the girl exit the bathroom.",
        "\"Whew,\" Madison thought. \"I thought she was going to hold me hostage in here until I came out.\" Madison picked up her phone and opened the stall door.\n\n\"Oh my god!\" She said as she realized that she was face to face with the girl who had listened to her orgasm. \"Shit, she heard everything! Oh, my god, this is so humiliating! I thought she left! This girl heard me beg for it, oh god, no!\" Madison thought all at once. Her expression said it all - her eyes were wide, her mouth open, one hand over her mouth and the other pulling down on her top. Madison was mortified and, for some reason, aroused.\n\n\"Sorry, I - I just wanted to see what you looked like, that's all,\" said the girl. \"You're like - way cuter than I would have thought.\"\n\n\"Yeah, you too,\" said Madison. She watched as the girl blushed. She was a little on the short side at maybe five feet, two inches. She was thin, blonde, and had palish skin. Her breasts were barely a B-cup, and she wore a mid-thigh skirt and an off-shoulder top that was cropped to expose about half an inch of her midriff. Her skirt was high waisted, and covered her navel.\n\n\"You weren't kidding,\" the girl went on. \"You really are a slut. At least, you really look it. I can't believe you would wear that to class.\"\n\n\"Thanks,\" Madison said, blushing. \"I - I like it - looking like a slut, I mean. It helps the whole - you know, this process,\" she said, pointing to the stall from which she had come.\n\n\"Yes it does.\"\n\n\"I'll see you on Wednesday,\" Madison said, smiling. \"I have to go back to class.\"\n\nMadison left the restroom, forgetting to wash her hands, and the girl followed her out. They went in different directions to Madison's relief, as she was starting to worry that the girl was going to try to figure out who she was so she could humiliate her further.\n\nMadison walked back to class, careful to tug on her top to keep the word \"slut\" from coming out as she went. \"Fuck, that was hot,\" she whispered to the camera. \"That girl came in and caught me fucking myself and - god, she was cute! I can't wait to see her in a few days. God, that was humiliating! I am such a fucking slut and I want more!\n\nMadison approached the door to her classroom. As she did so, she lifted her shirt up to show the camera, once again, the writing barely hidden by its threads. \"I'm a slut,\" she whispered. \"I want to go in there and walk to the front of the room and lift up my shirt and show them what I am, and then prove it to them by fucking myself in front of all of them while they ridicule me. God, I want to be exposed!\" She said to the camera.\n\n\"But I really can't because - then the fun would stop,\" she said as she stuck her tongue out slightly and smiled, flirting with the camera. \"The fun of knowing there is more humiliation out there and wanting it and knowing I will eventually be completely ruined in every imaginable way but not knowing when.\"\n\n\"Anyway, I have to get back to class,\" Madison said to the camera. She lowered her top, put the phone back into her bag, opened the door, and walked in.\n\nMadison entered the classroom. Again, it seemed that every eye was on her body as she stepped toward the center of the room. She wondered if her face was still a little red, or if her clothes were maladjusted in some way that would give away what she had been up to. She tugged on her top again to keep from revealing what lay beneath it. She looked at the floor as she hurried, in her embarrassment, back to her seat.\n\nTurning clockwise, Madison sat down in her seat. The plug shifted inside her ass. She leaned forward to ensure that the writing on her body was hidden, and in doing so, she no longer wondered if her thong peeled out of her jeans in the back. A quick swipe of her hand and she knew that it did, not that she really cared. Dan and the guy behind her, whatever his name was, could enjoy the view all they wanted as long as they didn't know what she had been doing or what was written on her body.\n\nMadison felt Dan's gaze on her back and side. She shifted back in her seat, ashamed at her attire. That only caused the plug to dig into her ass, adding to her predicament. Madison felt like a cheap tramp. She shifted forward again, inviting Dan to resume stealing sideways glances at her, before shifting back again and noticing that his gaze had shifted to her pierced navel.\n\nIt didn't take much longer for Madison to give up trying to get comfortable. It just wasn't going to happen. Anyway, she was starting to feel the flames of arousal burning inside her again, and she stopped wanting to hide and started wanting her situation to be prolonged. When she reached that point, she continued to shift in her chair, but for the opposite reasons. She shifted back to give Dan a better view of her midriff and to feel the plug shift inside her ass, and she shifted forward to give the guys a better view of her exposed back and thong. One thing didn't change - she kept periodically tugging down on her top.\n\nFinally, class was over. Madison stood up and looked around, taking in the eyes on her body one last time. She tugged on her top as she picked up her bag and slid it over her shoulder, walking out the door.\n\nShe had one destination in mind - her apartment, where she could finally remove the plug that had become a literal pain in her ass. She wondered if she was walking any differently as a result of its presence as she meandered through the building toward the exit. As she walked, she could feel guys looking at her body. She wished she could just pull up the top and announce what she was. \"Fuck, I'm horny!\" She thought to herself. It was too humiliating, though, to reveal her true self to a group of her classmates, as much as she desired nothing more.\n\nMadison sat down on a bench outside. She picked up the phone, smiled at the camera, and blew a kiss before finally turning off the recording. This had been her longest video yet - just over an hour. She briefly considered taking the cardigan out of her bag and putting it on for the walk home, but then realized that if she was enough of a slut to sit through class without it, she could walk home without it too.\n\nAs she stood up, Madison suddenly noticed Dan approaching her. \"Hey, Madison,\" she heard him say.\n\n\"Oh, hi, Dan. Umm, what did you think of class today?\" She asked awkwardly.\n\n\"Oh, it was okay,\" he said. Madison could feel his gaze shift from her face to her exposed midriff and back again. Damn, it felt good to be looked at like that, to be ogled and checked out. She knew she looked like a living sex toy, and the way he looked at her was fueling the fire of arousal inside of her. She wanted more. All of the sudden, she couldn't take it anymore.\n\n\"So, Dan, what did you think of my outfit?\" She asked.\n\n\"It's cute. It looks good on you.\"\n\n\"Cute?\" She asked, puzzled. That really wasn't what she was going for.\n\n\"Okay, if I'm being honest - you look sexy. I like it.\"\n\n\"Thanks,\" she said She smiled at Dan nervously. \"You don't think it's too - you know -\"\n\n\"Revealing? No. I mean - no. It's sexy but not like - too slutty or anything.\" Dan shifted his gaze to Madison's midriff again. She loved it. She knew he was lying, and although she hoped he would tell her the truth, she was just satisfied she could draw attention to her body and get him to look again.\n\n\"I have a question though, actually, if you don't mind?\" Dan said.\n\n\"Sure, ok, what is it?\"\n\n\"Well, it's about your outfit. There's something I don't really understand.\"\n\n\"What do you mean?\"\n\n\"Well I've seen girls - and you did it today - wear these outfits, these belly shirts, and then go out in public, whether it's class or the mall or the movies - and keep pulling down on the shirt. Like, you know - you put that on, you looked in the mirror, you knew what it looked like and you were okay with that. So why keep adjusting it like you're uncomfortable, you know?\"\n\n\"Oh, yeah, I don't get that either,\" Madison said, feigning confusion.\n\n\"Like, make up your mind, you know? You either want to show your belly or you don't, so I mean - either just own it and enjoy it, or wear something that covers it, you know? So I guess my question is - why do girls do that? I mean, do you get out in public and change your mind about wanting to let it - for lack of a better way to put it - show off?\"\n\n\"No,\" Madison replied. \"And first of all, a lot of girls don't really do it to show off, like you said. Girls don't make sense. Most of the time they - we - are just trying to look better than our friends, as In, hotter. And sometimes we're just trying to be cute or flirty or trendy. But I - I actually do like showing it off a little.\" Madison blurted our this truth before she had a chance to stop herself. Realizing what she said, she was humiliated again, and becoming terribly horny. She had just admitted that she liked showing her body!\n\n\"Okay, then why pull on your shirt? You're doing it right now! I mean, do you like the idea of showing off and then see people staring and want to cover it up?\"\n\n\"No, and - I almost never do this,\" she said, tugging on her top again. \"I usually just show what the top shows, I'm not desperate to cover it up or anything, you know? I agree with you - in the sense that - if I was, I would wear something else.\"\n\n\"Okay, but then - why do you keep doing that?\" Dan asked, giggling. \"Like, it doesn't make any sense. What, do you have something under there you don't want anybody to see or something?\"\n\nMadison froze. \"Did he see the writing?!\" She wondered. Her heart leapt into her throat, and she could feel a rush of adrenaline as she felt more humiliated than she ever had before. She also felt more aroused. \"That would be so hot if he saw,\" she thought. In a weird way, she started to hope that he did, if for no other reason than because she could go home and make herself cum harder than ever knowing that the cute guy next to her saw \"slut\" written on her body, and she had messed up and let him and now he would never see her as anything more than - well, a filthy slut.\n\n\"I mean, I just don't get it,\" he said. \"It just seemed like there should be some sort of reason,\" Dan said, breaking Madison's train of thought.\n\n\"Maybe he didn't see?\" thought Madison. \"Damn, and that was - I wanted him to. I needed it. Well - well, fuck it. If he didn't see it before, he's going to see it now!\" Madison could not believe what she was about to do.\n\n\"Hey, can you keep a secret?\" Madison asked.\n\n\"Sure,\" sad Dan.\n\n\"This really isn't a sure kind of moment. I mean can you keep a secret and not tell a soul what I'm about to show you?\" \n\n\"Yes, I won't tell anyone.\"\n\n\"Okay.\" Madison took Dan's arm and led him around a corner to the left, where large bushes obscured them from the view of people walking to and from class on the sidewalk. \n\nShe still could not believe that she was about to intentionally show him the writing on her stomach, but she was far too turned on to stop. She craved the humiliation, craved the embarrassment, and craved the feeling of knowing that he knew what she was and what she was for.\n\n\"I have something under my shirt,\" she said at last. \"That's why I kept adjusting it.\"\n\n\"What is it?\" Dan asked. Madison slowly lifted up her top, revealing the four letters that formed the word \"slut.\"\n\n\"Slut,\" Dan said. His mouth was gaping open as he stood there in disbelief at what he saw. \"You - it says 'slut' on your stomach.\" He smiled at her, still in shock. Madison held her top up for several seconds longer than she needed to to get her point across, and this time Dan's gaze did not leave her midriff area. \n\n\"Slut,\" Madison aid as she finally adjusted her top to cover it again. \"It says slut.\" Her legs were beginning to twitch, losing strength due to the extreme level of arousal she felt as a result of what she had done. She was humiliated, and mortified, and yet - she had never felt so alive, or so aroused! She caught herself just before she started to touch her pussy through her jeans.\n\n\"I don't get it - why - I mean, did you do that yourself?\" Dan asked.\n\n\"Mmmmhmmm,\" Madison said, smiling coyly. \"Sure did.\"\n\n\"Damn,\" Dan said. \"You really wanted to do it, then - but why? And why so close to - like - why not write it higher where it's easier to cover up?\" Dan asked.\n\n\"Honestly,\" Madison explained, \"I like the way it makes me feel. Like, the thrill of almost showing that to everyone in class - the thrill of wearing these clothes and drawing attention to it - and just, you know?\" Madison stopped her explanation abruptly before Dan pressed for more.\n\n\"No, I really don't know - I mean, why is that a thrill? Isn't it - degrading?\"\n\n\"Yes. And humiliating, and embarrassing - and just - shit, I didn't really want to get into this but I guess I have to now,\" Madison began. Her knees began to tremble in excitement as Dan coaxed out her confession. She was going to have to admit that she liked the humiliation, that she liked the degradation, and everything! And to her complete shock, she wanted it! She wanted to stand there and be humiliated in front of him, by him, and for him!\n\n\"So is it true?\" Dan's question interrupted her train of thought.\n\n\"Is what true?\"\n\n\"It says 'slut' on your stomach - are you really a slut?\" Dan was just as aroused as Madison as he pried at her.\n\n\"I - I mean, not in the sense that I go around sleeping with everybody - I mean, I sleep with guys, but - I mean - I don't know how to say this, but - Dan, I like feeling like a slut. It really, really turns me on. And I like being degraded. I don't know why, but I crave it. And I like risking that someone might see it and I might be completely humiliated - I honestly get a sexual rush out of it.\"\n\n\"Wow. That's really hot,\" Dan admitted. \"But - wouldn't the best way to feel like a slut be to actually be a slut?\"\n\n\"I don't know, honestly,\" Madison admitted. \"Usually I just go home and finger myself after I do something like this, but now...\" Madison trailed off as Dan reached a hand out and touched the hem of her top. In doing so, he grazed his fingers against her stomach, sending chills down her spine. \n\n\"Let me see this again,\" Dan said, hinting that he was going to lift her top.\n\n\"Okay,\" Madison said with a smile. She stood motionless as he lifted her top and ran his fingers over the again- exposed letters on her upper stomach.\n\n\"Here, let me help you,\" she said as she lifted her arms above her head, lifting the hem up high enough that Dan didn't have to hold her top up to see it. \"Do you like that?\" She asked as he ran his fingers down the center of her stomach and back up to the hem of her top, which was how a couple inches higher than it had been previously.\n\n\"Slut,\" said Dan. Just hearing the word, come live out of his mouth, made her tingle.\n\n\"Slut,\" she said in reply. \"I'm a slut,\" she whispered to him softly.\n\n\"You want to feel like more of a slut?\" He asked as he continued to caress her stomach.\n\n\"Yes,\" Madison whispered.\n\n\"Want to make that statement come true?\" he asked. \"I want to make you into a slut for real. You want to feel like a slut, then act like one.\"\n\n\"And how would you do make it come true?\" She asked in a flirtatious tone.\n\n\"I would take you back to my apartment and fuck you,\" he replied in a whisper.\n\n\"Okay,\" she said softly. Without another word, he took her hand and led her down the sidewalk as she pulled down on her top again. \"Dan?\" He looked over at her. \"I'm a slut,\" she said. She smiled at him seductively.\n\n\"You sure do look like a slut in that outfit,\" he said, smiling back.\n\n\"Good. I hoped I would,\" Madison admitted. \"I was hoping you would tell me that earlier, even if I can see why you didn't. Unlike knowing that I look like a slut.\"\n\n\"I like the fact that you like it.\"\n\nMadison showed Dan her inscription again when nobody was looking. He continued to occasionally stroke her exposed skin softly. The sexual tension built higher and higher as the couple made their way to Dan's off-campus apartment. The plug was seriously grinding into Madison's ass during this walk. It was only turning her on more. She had decided by now to just leave it in, saving it as a special slutty surprise for Dan when he removed her jeans.\n\n\"This feels a little strange, doing this in the middle of the day, I have to admit,\" Dan said.\n\n\"What? Picking up some half-dressed chick and bringing her home?\"\n\n\"Yeah - I mean, not that I do it often, but when I have, it's two in the morning and we're both a little tipsy.\"\n\n\"Yeah, same here. But I like this, like - we're going to hook up and I want it and I'm not doing it just because I'm drunk and emotional or something.\"\n\nFinally, they reached Dan's apartment. He unlocked the door and led her inside, tossing his backpack in a corner before he took Madison's bag and gave it a similar treatment, but not before she took the permanent marker out and stuffed it into her jeans pocket. Dan kicked off his shoes and Madison followed suit.\n\nIn an instant, he had his arms wrapped around Madison's exposed midsection and back, kissing her deeply. Madison kissed back, wrapping her arms around his neck, feeling his hands on her back as he reached up the back of her top. Madison's mouth could not open any further and Dan's tongue could not get any farther in as Madison sucked softly on his tongue, and he sucked softly on her bottom lip.\n\n\"Mmmm, I want to see it... I want to see the word,\" Dan growled as he lifted up Madison's shirt. He felt her upper abdomen with his thumbs as he did so. Mmmmm, slut, that is so fucking hot!\"\n\n\"Dan, I - I want you to talk dirty to me,\" Madison said, carting her pitch to speak in as sultry a manner as ever. \"Like - don't just say slut to my stomach. I want you to call me a slut, and everything, and I want you to mean it too. I want to know you mean it and I want you to degrade me.\"\n\n\"Wow, Madison, you really are a dirty little slut asking for that,\" Dan replied. She lifted up her arms and he happily pulled the tiny top off over her head.\n\n\"Keep going,\" Madison whispered. \"Make it sting. Make it humiliating. Make me regret this, and I'll get so turned on, I'll do whatever you want.\"\n\n\"I like the sound of that,\" said Dan. He lifted his arms after another short kiss, and Madison practically ripped his shirt off.\n\n\"Mmmm, I just knew you had a six pack under there!\" Madison cooed. She pressed her stomach against his, at least as well as she could. It was really her middle abdomen grinding on his lower abdomen as they kissed again. She softly tugged on her bra strap to let him know that was a garment she was willing and ready to part with, and he obliged by reaching behind her back and unclasping it. She lowered her arms and backed up just enough to allow it to fall to the floor.\n\n\"Ohhhh, you fucking slut, these look amazing,\" Dan growled. He cupped each of Madison's breasts in one of his hands, feeling her already-hard nipples in the palms of his hands.\n\n\"Just so you know,\" Madison said after they kissed again, \"when I get fucked, I like them pinched more than rubbed. Hard. Make it hurt a little,\" she whispered.\n\n\"You really are a nasty little slut, aren't you?\" Asked Dan after another kiss.\n\n\"Mmmhmmm,\" Madison replied. \"And I have a little surprise for you,\" she said. \"Where's the bedroom?\" Dan quickly led his topless conquest to his bedroom, wondering what sort of surprise might await him there. He was already having one hell of a day by any measure - was it going to get even better?\n\nIn the bedroom, Madison got down on her knees as soon as the door was closed. She kissed Dan's stomach softly as she unbuckled his belt and unsnapped and unzipped his jeans, pulling them off one leg at a time, leaving only his boxer shorts.\n\n\"Are you going to suck my cock, slut?\" Dan asked assertively.\n\n\"Yes, this slut is going to suck you until you are rock hard,\" Madison replied. Dan looked down to see Madison pulling his cock out of the opening in his shorts and teasing the head with her tongue. He was already halfway there, having been especially aroused by the way Madison referred to herself as \"this slut\" as if she were a nameless, faceless set of holes for his use.",
        "\"Is this the surprise, slut?\" He asked.\n\n\"No, the surprise is - better,\" she replied. With that, she opened wide and moved her head forward, allowing half of Dan's shaft to penetrate her willing mouth before closing her lips around his dick and beginning to suck.\n\n\"Ohhhh, fuck yes. Suck my cock you little slut!\" Dan was starting to get a little more aggressive. The more he realized Madison was into it, the more comfortable he became doing as he liked - degrading her, ordering her, using her.\n\nMadison looked up into his eyes as she sucked on his cock. She closed her lips around the latter half of his shaft as she pulled them backward toward the head. \"Mmmm,\" she moaned. \"Do you like the way this slut sucks your cock?\" She asked submissively as she reached the end, moving her lips over the head and removing his cock from her mouth for just a moment.\n\n\"Ohhhh, fuck yes, and I - ohhh! I like the way you call yourself this slut!\" Madison, instantly ignited by his response, forced her wife-open mouth over his shaft as far as it would go, taking it nearly all the way in, until his head poked her throat. Dan moaned loudly as she licked the bottom of his shaft, sucking vividly before pulling her lips over his head again.\n\n\"This slut likes doing it,\" she said. She took his cock and slapped herself in the cheek with it, then again. \"Slap me with your cock and force it in,\" she said.\n\n\"Can you say please?\" Dan asked, teasing her.\n\n\"Please, please, slap my face with your cock and force it in as far as it will go. This slut needs it!\" Dan didn't need to hear anything more. He took his cock in his hand, slapping Madison hard on her left cheek. He repeated the motion again while Madison looked up at him, doe-eyed, and batted her eyelashes. \n\n\"Is that what you want, slut?\" Dan asked. Madison moaned in approval as Dan grabbed the back of her head and forced his cock inside as far as it would go. He rammed her throat slowly at first, then thrust his cock into her mouth with unrelenting fury.\n\nDan pulled his cock out of her mouth. A long string of saliva and phlegm connected his cock with her mouth as he pulled it out and slapped her face again. \"You actually fucking love this, don't you, slut?\" \n\n\"Yes, please, don't stop\" she begged. He slapped her face again before ramming his cock into her throat. Madison, overwhelmed by her arousal at being treated like such scum, slapped her own face on a whim as Dan thrust his cock into her mouth.\n\nDan didn't miss a beat. He forced his cock in and left it there, slapping Madison hard enough to bring tears to her eyes, \"you little fucking slut,\" he said. \"Who knew you were such a cock hungry little slut?\"\n\nFinally he removed his cock from her mouth. \"I think you're ready for your surprise,\" she said. Madison stood up and leaned over the bed on all fours. \"Im going to take off my jeans.\"\n\nMadison supported her weight with her knees and shoulders as she unbuttoned her jeans. She reached behind her ass, looking back at Dan as well as she could as she slowly lowered her jeans beyond the globes of her ass cheeks. Dan, watching, suddenly saw the object protruding from Madison's ass and the sorry excuse for a piece of fabric in between.\n\n\"Oh, shit!\" Dan exclaimed. \"You - you have a butt plug shoved in your ass!\" He smiled wide in his excitement as Madison looked behind her to see the expression on his face. \"How long - I mean, did you have that in the whole time you were in class?\"\n\n\"Yes, I did. I felt like such a slut sitting there in half a shirt and with slut written on me and with my ass plugged.\"\n\n\"Do - I mean, is this something you do a lot?\" Dan asked.\n\n\"No, well - first time doing it in class,\" Madison replied. \n\n\"And you like that? I mean, wouldn't that be uncomfortable?\"\n\n\"Yes, and yes - but it's a nice little constant reminder that I'm just a filthy little slut.\"\n\n\"Damn, you really are.\"\n\n\"Dan, I don't know what you're waiting for. Get over here and fuck me. Fuck my pussy while my ass is plugged!\"\n\nDan needed no more encouragement. He dropped his boxers to the floor before flipping Madison onto her back and ripping off her jeans, tossing them next to her on the bed. She had her panties halfway off before he could reach them, and she lifted her legs into the air so that he could easily finish the job.\n\n\"Put that cock inside of me!\" Madison said. She gasped as the tip of Dan's cock slid easily into her waiting, throbbing cunt.\n\n\"Fuck, you're wet,\" Dan said.\n\n\"Mmmhmm, I'm a wet little slut and I want you to fuck me hard.\" Dan slid his cock slowly inside of her before thrusting in and out, amazed at how wet she was. \"That's it, use me, Dan. Use this little fuckslut hard!\" Dan ran his hand over the writing in her stomach again. \"Talk dirty to me. Tell me how filthy I am, tell me what a little whore I am for the way I acted today!\" Madison begged. Dan could not take it anymore as he plunged deep into her pussy, thrusting mightily as Madison began to move her hips in rhythm, accepting his cock happily.\n\n\"Oh, fuck, Madison, you dirty fucking slut. I knew you were a nasty little fucking slut the minute you walked into that classroom. Who goes to class wearing half a shirt? Dumb fuckslut Madison, that's who. Why? Because you like looking like a slut for the whole class, don't you, bitch?\"\n\n\"Oh, fuck! That's it, Dan! That's how you talk to a dirty fucking cunt like me! Yes! I wanted it! I wanted to look like a slut for the whole class today! I wanted to wear that tiny little too and show off my whole stomach!\"\n\n\"And you wanted to sit in class with that plug shoved up your ass, reminding you every minute that you're just a nasty, needy fucking whore, didn't you?\"\n\n\"Yes, yes! I shoved it up there! I walked to class in it! I wanted to feel like a dirty, nasty, filthy little bitch while I sat in class! Ohhhh, mmmm, I'm such a dirty fucking slut! Tell me what I am, Dan! Please tell me!\"\n\n\"You're a dirty fucking cunt, Madison! You're the nastiest, sluttiest, dirty smut bitch I ever met! You wrote slut - ohhhh, fuck, you wrote it on your body and barely covered it up with your skimpy little outfit, and went to class! You fucking little cum dumpster!\"\n\n\"You liked it, didn't you, Dan? You liked when I showed you what I wrote on my body? Well guess what? I - I liked it more. I wanted that. I needed it. And I fantasized about accidentally showing the whole class that I'm a slut! I want everyone to see next time, Dan, I want to be forced to show them!\"\n\n\"You really want to be completely humiliated, don't you, slut?\"\n\n\"Oh, yes, please!\" Please do that to me! Please do that to this slut! This slut needs it!\" Madison shouted as Dan throttled his cock into her pussy, pounding her furiously. All of the sudden, Madison pushed his abdomen, causing his cock to come out of her. She sat up.\n\n\"You really liked that, didn't you? The degrading writing?\"\n\n\"Yes - that was the hottest thing I've ever seen - in that outfit - \"\n\n\"Good, here,\" she said. She reached into her jeans, which were still st her side, and fished briefly into the pocket before pulling out the marker and tossing the jeans on the floor. \"Mark me up, Dan. Write the most degrading shit you can think of. If you don't think it's too degrading, think of something nastier. Use me like a blank canvas while you fuck me.\"\n\n\"Fuck, you're a hot little slut!\" Dan said. He thrust his cock back inside her as he ripped the cap off the marker with his teeth.\n\n\"Tell me what you're writing,\" Madison said, \"it'll make it better.\"\n\nDan continued to thrust his cock in and out, in and out as he scrawled \"dumb fuck toy\" above her left breast. \"What's it say,\" Madison asked.\n\n\"It says 'dumb fuck toy' you dumb fuck toy!\" Dan sneered.\n\n\"Oooh, mmm, yes, I am just a dumb little fucktoy. Use me, Dan, use me!\"\n\n\"Oooh, good one,\" Dan said. He picked a spot just under her right breast and wrote just that. \"It says use me,\" he informed Madison.\n\n\"Oooh, yes, God, that's fucking hot! I like how it's coming from me, like - use me, fuck me! Humiliate and degrade me! Slap me! Cum in me!\" Madison was getting exceptionally aroused now.\n\n\"Here,\" Dan said. He quickly wrote \"slut\" in huge letters about six inches tall right across her stomach. \"Slut, and you can't cover it up with that flimsy top you had on earlier!\"\n\n\"Ohhhh, fuck yes, make me show it off! I don't want to cover it up! I want everyone to know what I am!\"\n\n\"And what are you?\"\n\n\"I'm a dumb fuck toy! A slut! A cum dumpster! Ohhhh, yes!\"\n\n\"Fuck me,\" Dan said after he pulled out briefly to write the letters just above her pussy.\n\n\"Ohhhh, yes! Fuck me! Fuck me like the slut I am! Ohhh!\" Madison moaned loudly.\n\n\"Madison, ohh! You slut! You get off on being degraded, don't you, slut!\"\n\n\"Yes, I fucking need it! Hurry, please, write something on my face - so I can't hide it, please, I'm about to cum!\"\n\nDan held Madison's forehead down as he pounded her relentlessly. As he did so, he scrawled \"cum\" on the right side of her face, or his left as he looked at her. He then quickly wrote out \"slut\" on the opposite cheek, so that her face read \"cumslut.\"\n\n\"That's it, ohhh! What's it say? Please tell me! I want to know what everyone's going to see when they look at me!\"\n\n\"They're going to see a cum slut, Madison! You're a cum slut!\"\n\n\"Ohhhhh, fuck me, fuck me, harder! Fuck me! Fuck I feel like such a whore! I'm a cum slut! Cum slut! Ohhhh!\" Madison came hard, her legs shaving violently. She closed her eyes as she came so hard she thought she was going to black out. Her hands gripped Dan's bare sides, and her arms shook as she dug her fingernails into his flesh.\n\n\"Don't cum yet, please, don't cum yet!\" Madison begged as she regained awareness. She had been lost in an orgasmic trance, barely aware of her own existence as her orgasm shook her entire soul. \"I want you to cum all over my face,\" she said.\n\nMadison grabbed the edge of the bed as she pulled herself forward. When her feet hit the floor, she allowed her knees to buckle underneath her until she was in a kneeling position with Dan's penis directly in front of her face. Madison grabbed it with her right hand, stroking it while she cupped his balls in her left hand. She flicked her tongue seductively across the head of his cock.\n\n\"I want you to cum on my face,\" she said. \"Please, please give me that cum. I'm a dirty cum slut and I need your cum all over my face and then I'm going to taste it.\"\n\nMadison took his cock, balls deep, into her throat once again. Dan slapped her in the face, twice on each side, before she slowly stroked his entire shaft with her lips from the balls to the head. She began stroking again with her right hand as she looked up into his eyes.\n\n\"Please, give this cum slut what I need! I crave your cum. I need cum! Please, please!\"\n\nDan had heard enough. He couldn't take anymore, having held out as long as he could in hopes of giving her maximum pleasure, and in hopes of seeing how far he could get her to plumb the depths of her own degradation. He simply couldn't take any more and exploded with a loud grunt all over her face.\n\n\"Ohhh, yes!\" Madison said with a giggle and a smile. \"Mmmmm, that's what this slut needs! Mmmmm!\" Madison continued smiling as he shot her in the face over and over again. The first couple of splatters hit her in the forehead, and the next several hit her nose and upper lip area before she wrapped her mouth around his cock, collecting the remainder on her tongue.\n\nMadison briefly spit it out, allowing cum to collect on her chin. It was running down her cheeks and almost into her eyes. Dan had truly shot a heavy load.\n\n\"Take a picture,\" Madison said as she reached into her bag and handed Dan her phone, camera loaded and ready to go. \"I want to have something to remember this by.\" Dan smiled and shook his head in disbelief as he snapped three photos of Madison, first of her smiling on her knees, cum and marker all over her face and more marker on her body. The next picture was a close up of her face, and the third was a picture of her, sitting on the bed, spread eagle, open for all to see, covered in humiliating markings and cum, the plug still protruding from her ass.\n\nMadison took her phone back just long enough to switch the camera to video mode, start recording, and hand it back to Dan. When Dan looked back at her, he saw a smiling slut beginning to scoop the cum off her face, lick it off her fingers, and swallow.\n\n\"Mmmmm,\" she said. \"I really like cum on my face. And I love swallowing it.\"\n\n\"Taste good, slut?\" \n\n\"Mmmhmm,\" Madison replied. \"And swallowing always makes me feel so slutty.\"\n\nTo Dan's amazement, Madison did not object at all as he kept recording her as she began sucking his cock again. \"I'm a filthy little cum slut,\" she told him. \"I want more. I'm going to suck until you're ready to go again\"\n\n\"And then?\"\n\n\"Well, then - you've had my pussy and my mouth. I want you to take that plug out and put it in my ass.\" With that, Madison was back on her knees, quickly progressing from a tease of the head of his dick with her tongue to forcing her mouth over his shaft as far as it would go, destroying her throat. Dan wasn't really even trying; Madison was doing it, deepthroating his cock virtually all on her own. She even stopped and looked up at him before slapping herself in the face and continuing again.\n\nMadison was unbelievably horny. She was so horny that she wanted to be destroyed in every way possible. She wanted the humiliation, the degradation, the exposure. She even wanted a little pain. And most of all, she wanted the explosive orgasm that she knew would only come if she sank to previously unexplored depths of depravity.\n\n\"I fucking love sucking cock,\" Madison said. \"I'm such a cheap little shown off, filthy cum whore.\" And she meant every word. She stood up, falling backwards onto the bed, and raised her legs in the air as she pulled the plug out of her ass. \"I just wanted to get it nice and spread open for you. Put it in my ass, Dan. Take my ass. Hard. Make it hurt.\"\n\nDan did not have to be told twice. He shoved his hard cock directly up Madison's backdoor as she grabbed her ankles with her hands, spreading his ass for him.\n\n\"You like showing that body off, don't you, slut?\"\n\n\"Yes, I - I love showing off my slutty little fucking body, I love - I love dressing like a whore in class! I love showing it to everyone! I love feeling exposed!\"\n\n\"You want to be exposed, you little slut?\"\n\n\"Yes! Dan! Please, I want to be exposed! And not just in class! Everywhere! I want to be shown off - ohhhhh, fuck! I want to show everyone! I want to be looked at like a stupid little bimbo slut! Yes! Ohhhhh I want to be exposed! I want everyone to see me - all of me!\"\n\n\"You want everyone to see you, exposed, like a little slut? Is that what you want?\"\n\n\"Yes, ohhhh, that's exactly - that's what I want! To be exposed like a dirty little slut!\"\n\nMadison's head began to drift off into a land of fantasy. She closed her eyes as she held her legs in the air, accepting the anal pounding that Dan was giving to her. The plug had loosened her ass in such a way that it was not all that difficult to take, but she could feel her body tense up with each thrust into her ass, only to relax again each time Dan's cock mostly exited her back door.\n\n\"Fuck yes, expose me!\" Madison shouted in her fantasy. \"Expose me, Dan! More than I already am!\"\n\n\"And how exposed are you already, slut?\"\n\nBack in reality, Madison heard herself aid both the reality of being anally fucked and her erotic fantasy. \"Dan, I - Dan, oh, yes! Fuck my ass! Fuck my ass while I tell you what a dirty girl I am!\"\n\n\"How dirty of a girl are you, slut?\"\n\n\"Can - can you keep another secret?\" Madison asked in her fantasy.\n\n\"Yes, tell me, slut. Tell me now!\" Dan said in her fantasy.\n\n\"I'm a dirty little fucking exposed, shown off slut, and I love showing my body off to everyone!\" Madison said out loud. If Dan only knew what she meant.\n\n\"Fuck,\" Madison thought quickly to herself. How she wanted to shout in his face that her naked photos and videos were plastered on several open sites! Oh, if he only knew that she had begged to be exposed and s ad around and ruined! Madison, as aroused as she was, was actually toying with the idea of blurting it out! God, she would cum harder than ever! But she would risk him telling half the campus! Or her friends! Oh, what to do?\n\n\"I'm an exposed webslut! I'm - ohhhh, I'm - I've posed nude and my pictures are all over the internet! And videos! With my real name and everything! Oh, God, I'm such an exposed little whore! I want you to know! I want you to know how nasty I really am! I want you to know I'm just a worthless three holed slut who loves being shown off to everyone! Ohhhh!\" Madison imagined that she told Dan everything as she felt an orgasm building.\n\nMadison shook violently as Dan plunged his cock into her ass. Her eyes were still closed as she rocked her body back and forth. She could feel Dan pull out of her ass and shoot his load all over her cunt, all over her stomach as she endured an orgasm that paralyzed her from head to toe.\n\n\"Ohhh, Dan, cover me in your cum!\" Madison begged, back in reality. \"Cover me and take a picture!\" Dan wasted no time doing as he was asked, as Madison smiled, the writing on her body glistening under a fresh coat of sweat and cum.\n\n\"God, that was fucking hot!\" Madison said as Dan crawled onto the bed next to her. Neither one touched the other. They were both exhausted, sweaty, and pleased. Madison's Head swirled. She had come so close to completely humiliating herself! She had been so aroused - so ready to admit the truth about herself,, and about her online adventures, to someone she knew from school! To someone who could literally take her ruination to the next level, to make it reality!\n\nNot long after, Madison and Dan exchanged numbers and Madison left. She walked back to her apartment without bothering to wash the writing off of her body. Dan had offered to walk her back, but after an afternoon as intense as the one she had just had, she really didn't feel like making awkward conversation while she made small talk with the classmate she had just hooked up with - and not only hooked up with, but engaged in raw, animalistic, degrading sex with!\n\nMadison had to admit she even felt a little used as she walked back to her apartment. She just hadn't ever done anything quite like that before - well, sure, she had hooked up with a couple guys from school before. But she had never invited one of them to slap her face while she sucked his cock, and she had never allowed herself - no, invited herself - to be degraded and used. She had never quite acted like that much of a slut in front of a classmate.\n\nMadison trembled a bit as she walked, using the cardigan to cover the not-so-subtle additions to her degrading scrawlings. \"God, that was close,\" she thought. \"I can't believe I almost told him - everything!\" Madison began to worry that it was only a matter of time before she got so caught up in a tryst that she blurted out the reality of the depths of her sluthood, humiliating herself completely in a way that she could not reverse.\n\nIs that what she wanted? She wondered if she really craved that sort of humiliation, to be recognized around campus as he girl who exposed herself online for all to see. The thought was definitely arousing, but was her sensible side enough to overcome her perverted craving? Madison was actually a little scared of what the answer might be.\n\nOf course, Madison sent her blackmailer the video she made before and during class as soon she returned to her apartment. She then masturbated to another intense orgasm during which, once again, she seriously considered telling Dan (by text this time) that she was naked and exposed online, but once again, she came before she could bring herself to actually do it.",
        "Dan sent Madison the short video and the few pictures he had taken that night. Madison told her that she wanted copies, but also told him to keep them. He was legitimately surprised that she was okay with him keeping them, telling her that they were humiliating and that she would be embarrassed if anyone she knew ever saw them, even by accident on his phone.\n\n\"Yes, I want you to keep them,\" she texted him.\n\n\"Are you sure? I mean that was a little intense. And degrading,\" he texted back.\n\n\"I know. I like knowing that you have them.\"\n\n\"Why?\"\n\n\"Because. I like knowing that you can look at me whenever you want and I like knowing that someone else could see them.\"\n\n\"Is that something that you want? Other people seeing them?\"\n\n\"It depends. It's a hot fantasy but in reality I would do quite a lot to keep you from showing them to the wrong person.\"\n\nThe conversation ended here for the night. \"Does she mean - what would she do, exactly?\" Dan wondered. \"Who is the wrong person? And - does this mean she likes the idea of being forced to do things to keep these away from people?\" Dan wondered. Based on everything he had seen so far that day, he thought she might like it. But, he was also afraid he would be crossing a line and pissing her off, and he was worried that would abruptly end their communication at best, and get him into serious trouble at worst. \n\nIn the end, Dan decided to drop it and merely fantasize about it. That worked until they saw each other in class a mere days later.\n\n\"Hi there,\" Madison said as she walked in.\n\n\"Hi,\" said Dan, smiling. \"What's going on?\"\n\n\"Just the usual,\" she replied with a smile.\n\nMadison sat through most of the class worried that Dan had told someone about their tryst, about the words written on her body, and about the humiliating acts she had so willingly performed for him. Of course, she also knew that he had pictures and videos of her acting like a complete whore in his bedroom. However, she seemed to make it through class without anybody giving her any weird looks or making any comments.\n\n\"Whew,\" she thought as class went on. \"Maybe he didn't tell anybody about anything.\" Her outfit that day was only mildly slutty, with just under two inches of her midriff exposed and none of her cleavage Her shorts were short but not ultra-short. This, she knew, might also contribute to her ability to blend into he class.\n\nShe kept looking at Dan, though, and every once in a while he would steal glances at her as well. Nothing happened, though. But as they were walking out of class, she sent Dan a text which was nothing more than a picture of her with the words \"filthy cum whore\" written on her stomach. \"Under my shirt today\" she texted him.\n\n\"Wow, that's hot. Too bad I have to work right now or I would be all over you.\"\n\n\"Yes that's way too bad :(\" Madison texted back. She didn't hear anything from him for a few hours.\n\n\"I was watching the video we made. You really are a filthy cum whore,\" he said that evening.\n\n\"Thank you. I liked doing it. And now you can use that in other ways,\" she hinted.\n\n\"Like what?\"\n\n\"Figure it out.\" She said.\n\n\"Like, i get the sense that you want me to show it to somebody or something like that. Is that why you keep saying you want to be shown off?\"\n\n\"Please don't do that! Please, I can't have anyone I know finding out about this. Believe me, I would do anything to keep you from showing these to anyone.\"\n\n\"People you know?\" He replied. \"What about people you don't?\" He was starting to get the sense that maybe she would rather be shown off to strangers.\n\n\"Like who?\"\n\n\"Like random people online?\"\n\n\"Please, Dan, oh my god! I can't have those online! I would be mortified! Please, you can't!\" Madison feigned innocence as she teased him.\n\n\"Oh come on, you know you want to be shown off, you little slut!\"\n\n\"I know I do, but please, don't! Not like this!\"\n\n\"Then how?\"\n\n\"I would do a lot of things to keep you from showing anyone at all, online or not. As in, for example, if you were to tell me to come over and suck your cock or you were going to show the pictures you took to people in our class...\"\n\n\"Isn't that harassment or something? It seems a little dangerous. And hypothetically, if I said, that, what would you say?\"\n\n\"It's only harassment if it's unwanted. And I would say two things. Hypothetically, I would beg you not to show them and ask you when you would like your cock sucked. And realistically, if you're going to blackmail someone, you don't ask for their permission first, you just do it. And before you chicken out, just know that I sort of like the idea. So if you are hypothetically thinking about doing something like this, just do it, but maybe make it a surprise or something.\"\n\nThe phones went silent at that point. Dan couldn't believe what Madison was telling him - she wanted it! He at last knew that. And Madison couldn't believe that she was actually encouraging Dan to kick their experience together up a notch. She wondered if he had the balls to actually do anything about it.\n\nMadison didn't have to wait all that long. In fact, later that week, she arrived in class wearing a mid-thigh skirt with no parties, as Dan had instructed her to do or risk her pictures being sent to several members of their class. He had even shown her ext messages that he was ready to send to their classmates if she did not comply.\n\nAnd Madison, completely, ridiculously aroused but wanting her endeavors to continue into the future rather than actually be exposed to the rest of her class, sat down in her usual seat next to Dan, turned toward him, and slightly spread her legs, giving him an unhindered view up her skirt, allowing him to see her pussy as well as the word \"whore\" which she had written just above it in tiny letters. \n\nIf only that had not been their last class session of the year. It is difficult to tell what Dan would have made her do next. Madison was set to graduate in less than a week, but she had informed Dan that she would be returning in the fall to work on post-graduate education in hopes of obtaining a masters degree on her way to becoming a licensed educator.\n\nMadison masturbated that afternoon. She came hard thinking of Dan and all the ways she had opened herself up to him, both literally and figuratively. And she thought, as well, of her online blackmailer, and wondered what her next task would be. Whatever it was, she was ready for more."
    ],
    "authorname": "Rockwellray0",
    "tags": [
        "online",
        "slut",
        "internet",
        "exposed",
        "exhibitionist",
        "exhibitionism",
        "exhibition",
        "show off",
        "humiliation",
        "college"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/webslut-madison-ch-10"
}