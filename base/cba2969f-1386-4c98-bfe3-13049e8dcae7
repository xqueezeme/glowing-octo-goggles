{
    "title": "Earleen Pt. 03",
    "pages": [
        "Anyone engaged in sex is 18 or older.\n\nEarleen part three\n\nWaking the next morning I was pleased with myself, I had never slept overnight with anyone more than a few times, the first few nights with Rod and I in the same bed was an adjustment, though it was a king size bed I found myself gravitating to him more and more in the few nights we'd been together. As I opened my eyes my body was pressed to his, I was snuggled into his side with my breasts pushing softly against him, my arm was over his rippled hairy chest and my pussy was firmly embedded against his hip. I decided then and there that I could wake up like this every morning for the rest of my life and never be tired of it.\n\nWhen my eyes met his he smiled and turned toward me sliding his right hand into the elastic of my panties at the same time his lips met mine. Feeling his hand slide over my bush and in between my now open legs I moaned into his mouth, pushing up into his hand, as he cupped me I felt a finger go inside my vagina which caused me to moan all the more. As we kissed I was rolling my hips up and down into his gently thrusting finger trying to get it deeper than was possible, as he lifted from our kiss he pulled the finger out of my soaking wet box, lifted it to his mouth and sucked it clean. Dammit ... this guy knew which buttons to push for me to completely yield, not that it took much effort from him.\n\nLooking into my eyes it seemed as though his were ablaze with lust and desire, in a soft seductive voice he whispered, \"What is it you would like me to do princess? Your wish is my command, but you must be detailed.\"\n\n\"Mmmm, first I want you to go take care of this piss hard, wash it and return to this bed erect. You will then remove my panties with your teeth only, kissing my bush and licking my pussy as you do, but no touching my clit. With my panties off you will return to kissing my lips over and over and over while you play with my nipples and caress my tits, when I tell you to you'll suck my nipples hard, kiss down my belly where you'll stop to kiss my mound and then lick my pussy until I scream for you to stop.\"\n\nHe smiled wickedly, \"Is that all my love?\"\n\n\"No my darling, after I cum on your face I'm going to suck your dick until you're ready to cum, at which time I'll pull off and you'll kiss my neck and lips until the feeling in your balls has left, at that point I'm going to mount you and slide down your cock until my ass hits your body. You're going to pile drive up into me until I cum again, then you're going to mount me from behind and fuck me the hardest you've ever fucked in your life. You're going to take me, use my pussy and own her, you're going to mark me with your seed and claim me as yours. That's what you're going to do my prince.\"\n\nRod: \n\nI did as she wished, took a piss, washed and was hard before I reached the bed, she had gone into the other bath to pee and wash away the night, as I knelt on the mattress she scooted beneath me pulling me to her lips as we necked and sucked face. Making my way down I enjoyed our little game of me removing her panties with my teeth, she giggled, pushed her puss into my face and had a fun time of it. Going back to kiss her face I caressed her breasts making the nipples hard and distended before I lowered to suck on them, when she whispered \"my pussy\" I trailed kisses down her tummy and abdomen stopping to smell her arousal and kiss her bush.\n\nSettling between her legs I slid my hands under thighs lifting the prize closer to my face, as she lifted I hovered over the vulva with my mouth, my warm breath wafting across her slick soft petals which seemed to have gotten darker as the blood coursed through them. As I lowered my mouth onto the vulva like an oversized O her body shook, then convulsed as her hips jerked repeatedly into my face, I was dripping with her cum, I licked and sucked and still couldn't keep up with her discharge. I was far from being through, I dipped back into her folds and slid my tongue through the outer labia splitting the tender delicate inside as my tongue sought the opening to her vagina. Locating that tight little entrance, I shoved as much of my tongue into her as possible tongue fucking as she squealed, rolling her hips into my face while her fingers ran through my hair.\n\nMoving upward with my tongue I found her clit hard and throbbing, sometimes a clit will stay soft even though it's being licked and stimulated, not hers, not this time. I wasted no time sucking and licking her to two more orgasms before she pushed me away. Lying to my side with my face resting across her thigh I watched her pussy drip, the few hairs glistening with her dew, the lips seemed to move in and out in a sucking motion.\n\nEarleen:\n\nI had never cum so hard in all my existence, maybe it was the excitement of finally belonging to somebody, or his technique, or I don't know what all, I simply knew he had taken my body to places it had never been before. I was excitedly looking forward to forty or fifty years of this, as I regained my breathing and control of my shaking quivering body I stroked the side of his face as it lay on my thigh, no one had ever adored my body like Rod was doing. I felt like what he had called me, his princess. Sitting up I moved to the side.\n\n\"On your back lover, time for me to ride and you to drill my pussy when I'm tired, after I cum I want you in me from behind. Rod, I want you to hammer my pussy with everything you've got, I need to be fucked hard this morning, I need you to paint me inside with your warm creamy cum.\"\n\nI lowered myself onto his steel hard erection, the fat bulbous head stretching my labia as I pushed against it, when the head penetrated he moaned with deep guttural sounds, my vulva tightened around it as though the lips were gripping and preventing an escape. The heat and stiffness of his cock felt wonderful as I slowly took as much inside as possible on the first stroke, I raised and lowered again this time wiggling my ass as our pubic hairs meshed. He was all the way in and while it wasn't the biggest cock that had ever been inside me it was to me the most satisfying, he filled and stretched me nicely, I didn't need any more than what was inside me. I'd found my perfect match.\n\nI rode until I had cum twice and my legs were tired, holding me slightly above him with his hands on my hips he took over pounding upward into me, it didn't take five minutes for me to flood his abdomen with more of my nectar. Pulling out he slapped my ass teasingly and told me *hands and knees* while he repositioned behind me. With my tits on the mattress, my face in a pillow, my ass in the air, my back arched allowing complete access to my pussy I felt him slide all the way in with one stroke, when he hit bottom he muttered, \"Oh fuck Earleen, I'm in heaven.\"\n\nHe set a frisky pace which had us both enjoying our romp in the hay, I raised onto my hands, looked back and said as seductively as I knew how, \"Hard baby, fuck me hard, fill my cunt with your seed, breed me Rod, put a baby in me.\"\n\nHis thrusts picked up speed and ferocity immediately, I was wondering where the *put a baby in me* came from, I'd been on the pill for years. Was my biological clock telling me something, was I ready to get pregnant, ready to share my breasts with a little one and not just Rod sucking the nipples, was I ready to have a big tummy and waddle around as I'd seen so many others do, ready for my hips to permanently widen enough for a baby to go through, was I ready to say once and for all time I am his?\n\nAs he pounded my pussy I smiled to myself, yes, I was ready for all that and the rest which comes with being in a lifetime relationship. I could feel my climax sneaking up and begin to encompass my entire body, as my toes curled and my body shook I felt him get bigger inside me, knowing he was about to spew loads of little soldiers inside me I wished all the more that he could put a baby in me. My tits were swinging, our bodies slamming against each other and then the tidal wave hit like a thirty foot tsunami, I was screaming, he was bellowing and grunting with each spurt inside me, on his final push he jammed so hard against me I flopped forward onto my chest.\n\nWith my ass still in the air, his stiff dick still inside me, Rod softly rubbing my butt cheeks, bending over to kiss my back and neck, I thought to myself, *this was well worth the wait* I was finally at my end destination, with this man is where I was supposed to be. He lightly slapped my right ass cheek causing me to squeal softly and wiggle my butt at him as his cock slipped out causing a significant puddle on the sheet below. I flopped forward with him immediately beside me, we lay face to face gazing into the other's eyes.\n\n\"Andi, you said I should put a baby in you. Aren't you on the pill? I mean, I want a baby growing in you but not until you're ready. It needs to be something we both want.\"\n\n\"Yes honey, I'm still on the pill, and I want a baby as well, I think we should get married first. My folks are always talking about having it all backward when young couples get pregnant and then married. I think we need a little time to know each other better before we add to our nest. Don't you?\"\n\nHe was chuckling and then stopped with a smile on his face, \"That's funny, my folks say the same thing and they aren't wrong, I agree, let's not wait very long to get married and we can decide together when we're ready for a baby. Not too long though, we aren't twenty-five anymore.\"\n\nAfter a shower which ended with a quickie, me bent over grabbing the shower fixture while he pummeled my pussy one more time, we made breakfast together, cleaned the kitchen, threw on some comfortable clothes, changed the bedding and made the bed. It was something mom drilled into my head from the time I was a little girl, make your bed every day, ironically it was also something Rods mom had insisted on. I did some laundry while he farted around in the yard mowing and trimming, we had a light lunch and took a nap.\n\nWaking up just after two he told me to put on my glad rags we were going to go for a ride. I slipped into some nicer jeans and a cotton blouse stopping to ask, \"Do you want me in lingerie or regular undies?\"\n\n\"Everyday stuff babe, we'll save the sexier things for later on. I want you to be comfortable.\"\n\nI was already wearing a soft silk bra and matching panties, the jeans and blouse was all that I needed. I noticed he'd put on some ankle high work boots, I did the same. The place we were at wasn't very big, a three-bedroom ranch with an attached two-car garage and an outbuilding that looked to be a single garage. As we walked from the kitchen I turned toward his pickup, he smiled and reached for my hand.\n\n\"Where you goin silly girl, the sun's shining, it's a pleasant day, we're going to take the fun car instead of the truck.\"\n\nI'm instantly thinking a guy like him probably has a muscle car all tricked out hiding that garage, a Stang or Camaro, maybe a GTO, I was anxious to see what it was. When he'd disarmed the alarms and unlocked the overhead door he told me to step inside, it was not at all what I expected, in fact, other than being an old car I didn't have a clue what I was looking at. He was smiling from ear to ear, I was standing with a confused look on my face.\n\n\"It's a 1958 Nash Commander, it had been my great grandpa's, he bought it when he was 88, a few years before he died, it has less than forty thousand miles on it. All original in and out except tires and brakes, regular maintenance stuff. Most of these cars ended up in scrap yards so they aren't very common, it isn't one of those cars that are sought after, you know like fifty fives and fifty seven Chevy's and Fords, but it's worth damn near as much. I drive it in parades and take it to car shows. Whadda ya think princess, ready for a ride in your new chariot?\"\n\nI slipped my hand through his arm and signaled I was ready, the first thing I found odd was no seat belts, the next thing was the full width bench seat, until I realized I could slide over right next to Rod as he drove. It reminded me of how my folks used to sit in the car when we kids were little, mom up against dad, her left arm over his shoulder running her fingers through the hair on the back of his head, then resting it on the back of his neck as she caressed it softly. I moved my tiny ass over three feet and snuggled in tight to my man immediately imitating what I'd seen my mother do so many years ago, I swear Rod purred as I ran my fingers through his hair. I asked where we were headed, he responded that I needed to be patient, he had a surprise for me.\n\n\"You know Rod, I was sure you had some kind of hotrod in that garage, I was so surprised to see this old thing in almost cherry condition.\"\n\nHe laughed, \"Oh, I have one of those as well. I bought a '23 bucket T kit when I was in college, I put it together during the last two summers I was home before graduating, it's bright yellow and in another garage, we'll take that out some bright sunny afternoon. It's loud by most standards, people stare at it and inevitably there will be some kid who wants to race, I have a 289 high performance in it so there's plenty of horsepower, I dump the clutch and spin the tires enough to smoke them, then back off, I don't need police problems.\"\n\nI was beaming with excitement, not only was he caring, tender, a ravenous wolf in bed and a successful business owner, he was fun. Making our way out of town I noticed the houses became further and further apart, turning right onto a long blacktop landscaped driveway (nicely mowed, some shrubbery and flowers along the way) we made our way to what looked like a five or six bedroom house.\n\n\"Where are we at Rod, who's shack is this?\"\n\n\"This shack as you call it my dear is your new home once we're married.\" I must have looked completely transfixed. \"I bought it from mom and dad about three years ago with the stipulation that they could live here until such time as I married. No, don't look at me like that, they have a house in Arizona and a huge hunting lodge dad calls a cabin in Montana, they won't be on the streets. I knew they would be gone today and thought it might be fun to bring you out here, it's only six miles from town, still easy to get anything we might need.\"\n\n\"But what about the house we live in now? I thought was yours.\"\n\n\"Oh, it is. I picked it up at a Sheriffs auction awhile back, got it for a song, after sticking about fifteen grand into it for upgrades it made a nice place to lay my body at night.\n\nI had been correct in my initial assessment, it had five bedrooms including the master suite which had a huge attached bath/shower/closet/vanity area. In between the other four bedrooms were jack and jill bathrooms, a three-quarter bath in the laundry area off the kitchen made it complete. The house was an open concept with the four bedrooms on one end and the master on the opposite with a large living/dining area between, the kitchen was more than adequate, it would be a joy to cook in.\n\nI hadn't paid attention as closely as I should have when we first entered, if I had I would have noticed a staircase to my left that led to an enclosed, heated inground pool off the back of the three car garage. This place was gorgeous, and to think he told me it would be our home when we married, I wanted to call mom on the spot but chose to wait until later in the evening. With the five-dollar tour over we drove back into town and cruised for a bit, lots of waves and shouts from people Rod knew, we stopped at the local drive-in place only open in the warmer months for a burger and soft serve cone before going home.\n\nInstead of making love that night we lay talking into the darkness, he wanted to know what kind of ring I wanted, me telling him simple was fine with me. I didn't want anything fancy if I was going to continue pulling wire for a while yet, he was silent for at least two long agonizing minutes before he turned to face me, our noses no more than a few inches apart.\n\n\"How 'bout this princess, we'll get you a fancy ring set for when you aren't working and a simple gold band for when you are.\"\n\n\"Oh Rod, you're so sweet, but I don't want you to have to spend all that money for two rings, a simple band will do.\"\n\n\"Alright Andi listen carefully, and when I'm done talking that's the end of this subject. Got it?\" I whispered an Mmm-Hmm. \"I have more than enough money to buy you as many rings as you like, so that isn't an issue. When we're married, I'll include you in everything I have financially, in the meantime don't worry about the money I spend on you .... let me spoil you a little bit. Mother says I'll need to keep you with how I won you, so prepare for a lifetime of flowers and cards and little things that mean nothing to anyone but you and me.\"\n\nI now wished I had called mom earlier instead of snacking on popcorn with my man and binging on Netflix.\n\n\"Rod? Are you serious, you want to buy two ring sets? Oh, I prefer yellow gold.\"\n\n\"Yup, I'm serious. Hey, are you ahead on your latest house? You are, great. We're taking tomorrow off, we're gonna drive to the jeweler my dad and his parents have gone to for over fifty years and pick out your rings. We'll get a good set for after work and a band with a diamond imbedded for work, okay?\"\n\nHow could I argue with that, \"Yes darling, it's okay, you're going to spoil me silly aren't you?\"\n\nHe whispered \"Absolutely\" as we drifted off to sleep.\n\nWe did indeed take the day off to get rings ordered, we settled on a wedding band for him at the same time. Between what he spent for my wedding/engagement set, a gold band with three 6mm inset diamonds for him and a band for me with one 6mm inset to use as an engagement/wedding ring when I pulled wire he spent just shy of five figures. My head was swimming, my engagement band would be ready by Wednesday and the others by the weekend, I was calling my mother that evening no matter what.\n\nMother squealed with delight, sighed, gushed, and cried over the phone when I told her of my engagement. She wondered when we might come see them, I told her I would need to talk with Rod and let her know, she hoped it would be soon. I had three more houses contracted and I knew Rod was overseeing a huge office building a few hours away, I figured it would be late summer to early fall before we could break away but I didn't tell her that. Maybe he and I could catch a flight and visit over a weekend so they could meet one another.\n\nWhen I got home Wednesday Rod was waiting for me at the kitchen entrance door on one knee with a ring box open.\n\n\"Earleen, will you make me the happiest man alive and marry me?\"\n\nI pulled him up, kissed him, ground my midsection into his and whispered, \"Yes, a thousand times yes.\"\n\nScooping me into his arms he carried me down the hall to our bedroom, laying me down he took my boots off, then my work pants, followed by my work shirt leaving me in panties and bra, just regular old cotton ones with a little lace here and there. When he leaned forward to kiss my mound through the cloth I stopped him.\n\n\"No, let me shower first, I've been sweating all day.\"\n\nAs he lifted my legs he grabbed the panties and pulled them off spreading my legs at the same time, lowering his face to my wet excited nether region I heard him mutter, \"Be quiet and take it like a woman.\" What's a woman to do after a command like that? I opened my legs wide pulling them up to my chest exposing his playground completely, when I felt his mouth on my vulva I had an instant mini-gasm, followed by several full orgasms that rolled through me over the next fifteen minutes until I could take no more. Raising me into a seated position he removed my bra, sucked my nipples pulling them out as far as possible with his lips and biting lightly on the nipples. Standing he smiled.",
        "\"Now you may take a shower, I'm going to pick up our take out from Yum's, I'll be back in twenty, plan on wearing something extra sexy under a dress tonight, we're going to mom and dad's to tell them we're engaged. I want to look at you and know whatever you have on under your dress will be mine to unwrap and take off once we're home. I love you princess, be right back.\"\n\nI showered without getting my hair wet and then pondered what to wear under my dress as I did my makeup. I'm not fond of thongs but I wouldn't mind one tonight if for no other reason than to send him over the moon with desire, slipping a bright yellow thong over my legs I reached for the matching colored silk bra, a pair of black patterned lace top stay up stockings under my red dress should do the trick. Red four-inch fuck me heels will have that boy drooling before we get home. While I put the takeout Chinese in separate bowls Rod went and changed for the evening, when he got back to the kitchen he tried to lift my dress which got his hand slapped.\n\n\"Not so fast buddy boy, no looking until we get home, you can rub but no looking.\"\n\nHe pulled me tight as his hands went across my ass, he whispered, \"You don't have any panties on.\" When his hand went across the whale tail at my waist he grinned, \"A thong, you've never worn a thong before.\"\n\n\"I don't necessarily like them, but anything for you tall dark and handsome. I usually only wear them with my tight blue pencil skirt or those tight jeans you liked so much on the first few dates, now that we're engaged you'll get to see anything you want. I want to make you happy I plan to make sure your so satisfied you'll never want to look at another woman.\"\n\nHis parents were beside themselves with joy, his mom couldn't stop hugging me, when I sat beside her on the couch she held my hand the entire time smiling, gushing, making plans, shedding tears of joy. Questioning Rod about his choice of engagement ring he explained he'd bought two sets with the one I was wearing to be for work so I didn't damage the expensive set.\n\n\"Work, what do you mean work Rod? You have plenty of money, she doesn't need to work, she needs to get pregnant and have babies.\"\n\nI squeezed her hand, \"I will mom, I will, all in good time.\"\n\nAs we were saying goodbye she pulled me to the side a few feet from the men, \"Now honey, you took my advice from before at the restaurant and wore something sexy under that dress didn't you?\" I nodded as I blushed. \"Good girl now take my son home and screw his butt off, even if I can't have a grandchild right away it doesn't hurt to practice. As my grandma used to say, practice makes pregnant.\"\n\nTurning to go she gave me a soft double pat on the butt, yup, I like this woman, she'll be a great mother-in-law. On the way home I sat tight against the passenger side door smiling at him, he would look over and I would raise my dress a little higher each time, his pants were tented and tight by the time we pulled into the garage, rushing around to open my door he lifted me by the waist and plunked my butt on the hood of his truck. Before I could say two words he had my butt lifted, my panties around my knees and his face in my muff, I gave up and squirmed into his lovely lathering tongue, he sounded like a kitten lapping up a bowl of milk.\n\nAfter the second convulsing climax I lifted his head, \"Rod, take me to bed and flood my womb with sperm, I won't be pregnant but we can practice, I need you inside me baby, please.\"\n\nI won't bore you with the details of how we enjoyed one another until nearly midnight, to say we were worn out would be an understatement, one thing was for sure, neither of us would ever forget the night we became engaged. I wasn't sore when the alarm went off but I was still a bit swollen, that I could hide easily enough, it's the soreness that makes you walk bowlegged and I sure as hell didn't need that on a construction site. Following a mini make out session in the garage saying goodbye in the morning we both headed for work.\n\nI had been ahead slightly before we took Monday off, today it would be non-stop, I would have to be full on to stay ahead. There are days when all goes smooth and then there are days when the other occurs. The first crappy thing was when I went into the basement and noticed the plumber had used my holes in the joists to run some inch and a half PVC, I was seeing red when they showed up ten minutes later. I crawled up that foreman's ass and yelled like hell as we descended into the basement, when he saw what the previously smart-ass apprentice had done, he apologized and said he'd get it remedied right away. He chewed on that kid for ten minutes as they had to tear all of that pipe from my holes in the joists, I had them drilled them to pull my wires through, not his damned pipes, not only was the piping wasted so were all the hours installing them, the kid learned a hard lesson that day.\n\nWith that out of the way I was only about an hour behind when Steve showed up to say the homeowners wanted to change light switch positions, they were willing to pay the extra charges, which is all well and good but that would put me even further behind. Rod called at lunch, I told him what a crappy day it had become and said I probably wouldn't be home until after seven. At five fifteen my prince charming walked in with a pizza in one hand, a small cooler with four iced beers in the other and his tool belt hanging off his right shoulder.\n\nWhen I'm working around other tradesmen I make sure none of them ever see the female emotional side of me which is inherent in all women, with all of the others gone I broke down and sobbed into Rods chest. His arms around me felt so comforting the anguish left quickly, we ate and then worked together until after nine putting me ahead once again. A warm shower, a snack and bed took care of the night.\n\nOn Tuesday none of the guys noticed I was wearing a ring, on Thursday the older plumber and I were sitting next to each other on the floor of the garage when he reached over and touched my hand smiling. Harold had to be in his mid-sixties, you know, one of those grampa kind of guys, so I thought nothing of him touching me, finishing what was in his mouth he lifted my hand to look at my finger.\n\n\"When did you become engaged Andi? This band is a good idea, jewelry gets damaged awfully fast in construction. Congratulations. Did Rod finally ask you to straighten him out?\"\n\nI laughed softly, \"Yeah, something like that and thanks for noticing Harold, these other dolts never give a second thought to anyone else.\"\n\n\"Say, I'm sorry about the holes Andi, when they told me about what he had done I cringed, that stuff shouldn't happen.\"\n\nI looked around and didn't see smart mouth, \"Say, where is junior today, home licking his wounds?\"\n\n\"I have no idea what he's doing, I just know he isn't doing it with this company anymore, yesterday was the last straw. He's been a pain in the butt since the day he was hired, won't miss him at all. Jack cut him loose last night, told him to report to the union hall in the morning, maybe someone else will have work for him.\"\n\nSaturday morning we picked up our rings, my stars and garters I never realized how big a 1.8 carat diamond looks in an engagement ring. In the truck Rod slipped it on my finger and told me he loved me. I had him take pictures as soon as we got home to send to mom with a text. She made us promise we would facetime with them that evening about five, the result being they liked him, he liked them, blah, blah, blah, it was good to know there would be no hurdles in our way. I wore my good ring the rest of the weekend and almost cried when I had to take it off Monday before work.\n\nRod and I got into a rhythm that suited both, if I needed help he would show up, when he needed eye and arm candy at whatever function I was at his side. Word had gone out the very first time a guy tried chatting me up that I wasn't going to put up with it and Rod would beat their ass if they tried, it felt good knowing my man was protecting me. My work load and hours were increasing much faster than we thought when I'd first started the business a little over a year ago, neither Rod nor I thought we should turn down work, at the same time we couldn't continue as we were, his company was experiencing the same type of growth.\n\nI hired a guy through an ad I had on the facebook market, he lasted all of nine days before Rod dispatched his ass. Not only did he think his dirty little jokes and crude innuendos were cute he had a terrible work ethic. An older newly retired electrician had heard through the grapevine that I was looking for help, he didn't want forty hours a week but wouldn't balk at twenty five to thirty, retirement in his words was *boring as hell*. He showed up at a job site, we talked about what I wanted and expected, he told me he'd see me at seven the next morning.\n\nHe was a sweet old guy, sixty six and recently widowed, worked when it was time to work and rested when it was time to rest, a bonus being I didn't have to constantly check his work. He knew Rod, his oldest daughter had gone to high school with him, we got along great, his normal work day was six hours Monday through Friday, paying him journeyman's wages, he was happy to get a paycheck every two weeks. With Elton on board life became more tolerable, his nick name was Gint, he couldn't remember how it came about, only that he'd been referred to as Gint since he was a kid. I was taking on more houses, between Elton and I we were keeping up.\n\nWe'd been engaged a little over two months when Rod proposed something to me. He wanted to get married as soon as possible, we'd fly my family down and put them up for the weekend, get married on a Saturday and fly them back home. Didn't bother me, it was others who wanted a big shindig, not Rod or me, we prevailed and set it up for a month later. Dad was proud as a peacock as he walked me down the aisle, mother sobbed from the first moment she saw me at the back of the church and all through the ceremony. I had bought a pretty dress off the rack and had it altered to fit my big chest, we held the reception at the local VFW Hall and invited everyone we knew for the dance.\n\nIn our bedroom that night we consummated our devotion to one another, we could have gone away but then thought why do that when we could be in the bed we saw as a marital bed anyway, a bed we'd slept in, made love in, talked about our dreams and aspirations in, a bed that was us. As he undressed me that night, I simply let him have his way, slowly unwrapping me like a present he'd longed for but never expected to receive. As I removed his clothes I relished over the fact that for so many years I had tried to control everything in my life, yet here I was letting this man own me in a sense, but then he was letting me own him as well.\n\nWe spent what seemed like hours kissing and fondling each other, taking the other almost to the pinnacle but never quite reaching the crescendo, when he did enter me it was slow, tender, sensual in every way, kissing me, telling me he loved me, bending to kiss and suck my breasts as he slowly stroked in and out of my body. Watching him glide in and out of me we both went over the edge slowly rocking like a seesaw on the playground, when he tensed I had already climaxed twice, thinking I wouldn't climax again my body surprised me as his seed hit my cervix. My body shook as his hot, thick, creamy seed flooded my vagina, he held tight to my body as my legs wrapped around not allowing him to move out of me a fraction of an inch.\n\nSleep overtook us, I was waking to something I had never experienced before, Rod had managed to penetrate me in my sleep and was gently making love to me as my wakeup call. I absolutely loved it, we continued on once I was awake until I came. I pushed him up off my chest looking into his eyes.\n\n\"Baby, I love the way you've woken me and last night was delicious, but I need you to fuck me mercilessly this morning, pound my pussy and squirt a load inside me so thick I'll drip the entire flight tomorrow.\" So, he did, making me scream not once but three times before he reared back yelling \"ANDI\" as he spewed gobs of thick hot sperm inside me.\n\nIt was the fall of the year with all the trees turning in the north, Rod had never seen the splendor of fall up close and personal, we decided that we would honeymoon in the northeast stopping to spend a few days with my family before we flew back home. The fall colors were in all their splendor, we rented a modest car and spent the next ten days driving throughout Maine, a small portion of New Brunswick and then back to New Hampshire and Vermont before spending time with my folks.\n\nThere was of course a lot of romance and sex during our overnight stays at the B&amp;B's we'd booked ahead, at one we were louder than we thought we'd been, apparently we were the topic of conversation for all at breakfast. The three days we spent with my folks was relaxing and pleasant, even my dickhead brother and family behaved, it seemed he'd grown a pair since I'd moved away, at one point I heard him tell Becky to be quiet. That had never happened before that I knew of, the kids were happy to see auntie again though it had only been a few weeks since the wedding.\n\nDad took us on the three jobsites he had going one day with a double purpose in mind, me to say hello to the old crew members I knew and all of them to meet my husband. Him being in the construction business made all the difference in the world, he fit in like butter and jam on toast. We dropped the rental at the airport, hugged, kissed, and waved goodbye to my folks watching them walk away while we went through security. I slept through most of the flight, Rod was catching up on e-mails and other correspondence from the different foremen. When we touched down it was a warm but pleasant evening, grabbing milk, eggs, bread and a rotisserie chicken on the way home we were at least set for an evening meal, I would do a major grocery shopping the next day.\n\nWe blended back into our normal routines as though we'd never been gone, I had hired a third year apprentice away from Arc before we left, they had so little work the guys were getting no hours at all. Gint worked with him full days when we were away so he was happy to see me on the jobsite when I returned, it was a Wednesday, I gave him the rest of the week off with pay, without him our honeymoon would have been much shorter. The new guys name was Richard, all but his mom called him Rick, most times the short for his name is Dick, he told me he hated that name, made no difference to me whatsoever, Rick it would be.\n\nWe got along well, he had no issues working for a woman and in fact had a female cousin in Alabama that was looking for an apprenticeship, she'd worked with someone in Montgomery a summer until work fell off. The more he talked about her the more I considered hiring her on. Rod and I kicked the idea around for a few nights and decided to make the plunge, having talked with Morrie we knew she could stay there a month or so without any hanky panky until she could rent a place of her own. Mo was into the librarian lock, stock, and barrel, she was the one he'd been waiting for all his life. He had cleared it with her before letting us know it was okay.\n\nThe cousins name was Betty-Sue, (no shit, only in the south) she introduced herself as Betty and we left it there. We agreed to cover her fuel costs to Tupelo, work a week with Rick and me at second year apprentice rates and if she worked out, I would hire her at the end of the week. Long story short she not only worked out she equaled what Rick was doing as a third-year apprentice, apparently he wasn't being taught much at Arc. She had most of her own tools and was driving a twelve year old F-150 that ran as good as it looked, she was going to fit in just fine.\n\nWith Betty and Rick full time, and Gint part time I was able to step back a pace or three and run the business, I took on more residential work and was at the point where I was turning down light commercial jobs, it was also during that time span my knight in shining armor presented me with an idea too good to refuse. Sitting at a booth toward the back of Giani's Pizza he reached for my hand.\n\n\"Got something I want to run by you Andi, hear me out before you shoot the idea down, okay?\" I nodded. \"Arc is going under, the situation with their guys trying to rape you was the last nail in the coffin, where they once had a crew of eleven guys they are down to two working twenty to thirty hours a week. If we were to purchase the company and keep the best guys it would give us a door into light industrial and larger jobs, in fact, I could use your company on some of my stuff. Any thoughts?\"\n\n\"How do you know all of this is true hon?\"\n\nRod took another swig of my beer along with which came a frown from me, \"That'll cost you another beer dingbat.\"\n\nHe laughed and waved at Anna for two more cold ones, \"I know it's true because Tom Fitton, who I went to school with me all my life is Arc's head foreman, he told me the bank is going to foreclosure by months end. He figures if we go in and offer cash we can get it for pennies on the dollar, he's already spoken with the seven best guys that he would hire back and they're ready to work.\"\n\nI needed answers, \"Would it be my company, your company or our company? I know I'm already included on everything financially, it's more a question of who's going to run it?\"\n\n\"You would be Andi, I have more than enough on my plate already, but I want you to promise me one thing. You'll work toward making Tom the overseer and you begin to step away other than being the owner, no more being on the job sixty hours a week. I'm ready to start a family and I'm hoping you are to.\"\n\nI wasn't expecting that, but I was as ready as he was, if he wants to start a family then let's get busy planting seeds. After meeting with Tom and the other sparks over the next two weeks we were ready to make an offer, it was at first rejected, Rod told the realtor he wasn't going to counter offer, take it or leave it. Since it had been for sale six months and due to be foreclosed in a week they finally accepted, we immediately combined the two businesses changing the name to Andi's Electric, we also began making bids on larger projects, until they were accepted we would keep the crews busy on two of Rods newest projects.\n\nRods mom and dad were ready to swap residences, they were tired of having to clean and maintain that big old place and we were tired of not having enough space. Rod hired as many previous Arc guys from my business that wanted to help move putting a few extra bucks in their pockets after having worked little if at all for months. Over the course of two weekends everything had been switched, I loved the new house, Rod and I deciding to hire a cleaning lady from the get go, we'd have her come in twice a week to clean and do light laundry.\n\nShirley was her name, a black lady in her late forties with an autistic daughter in her twenties who she took everywhere with her, the daughter was as good with what we needed done as her mother, I insisted I pay for two people instead of one. I noticed as the weeks went by that she and her daughter were wearing nicer clothes, I knew it was because they could now afford better and it made me feel good inside.\n\nIt was on a Sunday afternoon that the next phase of our lives took place, lying on the floor in front of the fireplace completely nude after a rousing session of bury the sausage and eating dessert before supper Rod tipped my chin up looking in my eyes.\n\n\"Andi, are you still on the pill? I want you to stop, it's time to put a baby in your tummy. You just turned thirty, it's time we got busy and had a family. We're financially set for life, our health is good, I have someone to oversee the contracting business, you have people to oversee the electrical side, let's do this Andi, let's have some babies.\"",
        "I didn't answer him with words, I slid down his body, sucked him back to hardness and pulled him on top of me, we thought we were done playing for that day, not so, two more times we went at it before we had to stop and sleep, we were completely worn out. I let Rick and Tom know I was cutting back to half days, both smiled, it was Rick who said, \"Bout time, go have some babies.\"\n\nWith me being home more Shirley thought I might cut their hours, I told her it would be the opposite because once I was pregnant I would need her at least three, probably four days a week if it could worked it out with her other customers. I had been home afternoons a few weeks when Audrey (Shirley's daughter) came to me with a pair of my lacy sexy panties and a matching bra.\n\n\"Miss Andi?\" (everybody down south is either a miss somebody, sweetie, babe, or hon) \"Do you wear these kind of underwear?\"\n\nI watched Shirley spin on her heels and race to the table, \"Audrey, you don't ask folks things like that, it's private. Apologize.\"\n\n\"But mama, I only want to know.\"\n\nGesturing to Shirley it was okay I asked them to sit, \"Yes, I wear them, Rod likes them on me and I like to please him. He doesn't insist I wear them, I do it because I want to. Why do you ask?\"\n\nLooking sheepishly at her mother and then me she spoke softly, \"Because every time Allen and me are at the mall on one of our dates he tells me that when we get married he wants me to wear the panties we see in the windows at the Secret store.\"\n\nShirley's mouth was hanging open, \"MARRIED, who's talking about married? You can't get married and Allen certainly can't afford to support you. What if you got pregnant? I thought you two were going to the mall for a movie or to hang out ..... not make out.\"\n\nI thought it best to step in before it became a battle reminiscent of my mother and me in younger years.\n\n\"Shirley why is it so wrong if they wanted to marry, she's in her late twenties, she can read, write, do math and has common sense. I don't see the issue if she and Allen have a support system to help.\"\n\n\"Yes Miss Andi, but Allen is down syndrome and Audrey is Autistic ........\n\nBefore her mother could go on Audrey blurted out, \"So the retards are too stupid to be in love and get married. Thanks mama.\"\n\nTears were running down Shirley's face, \"No honey, you aren't retards but there will be many obstacles in your way. How will you live, where will you live? And babies, what about babies?\"\n\nAudrey was cool as a cucumber, \"Allen works full time at the grocery store and he has a lot of money saved, I have my job with you and Miss Andi, there are apartments for handicapped people that don't cost as much, city buses go every place so we don't need a car.\"\n\n\"Okay, but what about if you get pregnant?\"\n\nAudrey bristled, \"We know about sex mama, we kiss and stuff like that, but we didn't have sex yet, Allen says we need to wait to be married. We don't have to worry about babies, Allen can't make any, something about when he was a boy.\"\n\nShirley shrugged as she looked my way, \"My word Miss Andi, they think they have it all figured out. What am I gonna do? I know I won't live forever but at the same time I don't want her to get hurt.\"\n\nSome would have dipped their toes in the water and been satisfied so to speak, not old Andi, nope, I took the plunge like I had with everything else in life. I dove into it headfirst.\n\n\"Well Shirley I think you have two choices, number one you can absolutely forbid it making sure they eventually went behind your back and did something that would likely hurt both, or number two, you can embrace it and help them see it through safely. It's obvious by their present behavior of the past two years that they have the moral perpetude to hold off until they're married. Let me talk with Rod, I'll make some calls tomorrow and try to find out what programs the city has for kids like Audrey and Allen. After all, don't they deserve happiness?\"\n\nTypical me, in for a penny in for a dollar, I had high hopes I would receive favorable answers the next day. Shirley and Audrey were gone by the time Rod got home. Over supper I told him about the situation, he laughed about my used underwear being brought to me.\n\n\"I hope they weren't the pair you wore yesterday, the ones full of cum from our lunch time jaunt. By the way, we need to do that more often.\"\n\nRod seemed to remember reading something a few years back about programs for learning disabled and people with mild retardation so they could live on their own or be married living together. I spent the better part of three hours on hold or being bounced to yet *another* agency before I reached a pleasant-sounding young man, he was on speaker phone. I dislike that feature and asked if he would mind switching to a normal handset mode, his reply caught me off guard.\n\n\"I would gladly do that if I had hands, everything at my desk is set up for audio commands which I can turn on or off with the stub that used to be my hand. With that out of the way how may I help you?\"\n\nWanting to crawl in my shoe I apologized first and then explained the dilemma the kids were faced with. Thirty-five minutes later I had all the info I needed, there truly were programs and housing units set up for what he called disabled people. He was going to have a packet sent out that afternoon. When I told Rod he was genuinely excited, then asked if I had stopped the pill.\n\n\"I did, two weeks ago, the nurse said it took about three weeks to get the residuals out of my body, which, by the way, coincides with when I should be ovulating. Wouldn't that be something if I got knocked up right away?\"\n\nSitting next to me on the couch he put his finger under my chin and turned my face to his, \"Andi, please don't call it that. Knocked up is what happens to high school girls who make dumb decisions. Call it being in family way, a bun in the oven, or here's something novel, pregnant. Saying you're knocked up to me sounds like it was something that just happened and not something that was planned, can we do that?\"\n\n\"It's only a terminology but I can see your point, this is something we're planning, we won't say I'm knocked up. Fair enough?\"\n\nReaching between my breasts and grabbing hold of my bra he pulled me to him, \"C-mere you little minx, I know what you need, you need to get laid.\"\n\nHe then planted a barn burner kiss on my lips, picked me up in his arms and carried me to the bedroom where he tossed me onto the bed with a cheery squeal from my lips filling the room. Leering at me while he undressed he said, \"Strip, now, legs spread, prepare to be mounted.\"\n\nPlaying the game as I stripped I quipped, \"Kinda bossy tonight aren't you, what if I don't want to be mounted?\"\n\n\"Then I'll spank your little ass, eat your hairy pussy and before you recover I'll put your ankles on my shoulders, lean back and drive my cock so deep you'll think it's in your throat.\"\n\nI was naked laying back with my legs in the air, \"Mmm, I like your punishment, please proceed.\"\n\nHe didn't spank me although he did give me a couple tender swats as he drilled me from behind before we finished with my ankles on his shoulders, we came so hard we literally shook, me blasting off seconds before him. With Shirley and Audrey coming the next day I made sure I was up early, called Rick and let him know I would be in late and waited for them to arrive. How pleased I was to see them pull into our drive-in small car instead of being dropped off by a neighbor. When I inquired Shirley was so excited.\n\n\"With both of us working we've been putting money in savings every week for a car, had one years ago but couldn't afford another when it broke. Mrs. Ellis next door is 94 and can't drive no more, when I was cleaning her house last Saturday I was talking about our car fund. She hadn't used her car in over three months, she'd start it every week but didn't drive it. Anyway, she told me she'd sell it to us for $4000, we had almost seven in the bank, it's nine years old but only has thirty one thousand miles on it, most of them were before her hubby died last year. What do you think?\"\n\nGiving it the once over walking around it I smiled, \"I think you made a great buy. This will get you wherever you need to go for a long time. Oh, and I have news about options for the kids.\"\n\nExplaining that the official packet would likely arrive that afternoon both hugged and thanked me, I gave them the short version of what I'd been told, let them know I needed to go to a jobsite but would be back by three before they left. I texted Rod during lunch only to find out he wanted to be present when I sat down with the ladies, he also suggested we order something in and invite them for supper. He and I arrived home within five minutes of each other just after three, checking the mailbox he smiled and waved the large manila envelope in the air. Walking back up the driveway he had the packet opened and was perusing materials before he reached the front door.\n\nInside I yelled *we're home* and proceeded toward the kitchen where I thought they would be, I was correct, they were folding laundry on the table and putting it in baskets. We exchanged greetings, Rod and I changed out of work clothes into sweats and asked Shirley if they could stay for supper, she had no plans. I asked if Chinese was okay, they both nodded enthusiastically, listening to Audrey they didn't do Chinese very often, it was going to be a treat in her eyes.\n\nBy the time the food had arrived Rod had read everything in the packet, while we ate he told us about the programs set up, that both Allen and Audrey were old enough to be eligible and the most exciting part was that housing was only ten blocks from where Allen worked, if the weather was decent he could walk. There was a waiting list for married apartments but two were scheduled to be open within the next six months, there were so many possibilities and positive aspects of the programs. With Allen being sterile the level of supervision would be minimal, no one would need to make sure they were practicing effective birth control.\n\nOver the next week we met Allen and filled out paperwork over the course of three evenings, Allen was an easy guy to like, he had a wide infectious smile to go along with his bubbling personality, it was he who brought up what the rest of us were wondering.\n\n\"Me and Audrey don't have the same color of skin, but we don't care, we're in love. I think she's sexy.\"\n\nThough it wasn't evident in skin tone it was clear that Audrey was flush as she slapped his arm, \"Allen, we can't talk about that stuff, you know that.\"\n\nRod interrupted softly but with authority, \"Audrey is right, it's okay to say those things in our house but not in public, some people won't understand.\"\n\nShirley was doing her best to adapt and accept the fact that her daughter was going to be married, when the case worker who had been overseeing the kids relationship called to say that in three months a cleaning position was going to open up at an office three blocks from where the kids were going to live she wasn't sure if she should be happy or sad. Once she came to grips with what lie ahead and realized it was a blessing instead of a curse she was okay.\n\nRod and I had been diligently planting seed within my vagina for almost two months when I noticed I was four days late, it wasn't that unusual so I ignored it, a little over three weeks later I was on my knees before the porcelain alter spewing breakfast. Taking a home pregnancy test it showed positive. After having it verified by our GP I could barely wait to share the exciting news with my loving husband, I decided it would be in bed during our normal talk time before we slept. Lying in his arms he was gently caressing my breast (what a tit man, I swear) when I moved his hand to my tummy.\n\n\"Honey, there's a baby growing inside me, you're gonna be a daddy.\"\n\nI wasn't sure what his reaction would be, what he did sent me over the moon, holding my breast he whispered, \"When these are full of milk and I have to share them I at least want a taste.\"\n\nHe threw the covers back and raised my shirt enough to expose my abdomen, I was sure he wanted to make love when he surprised me. Pulling my panties down to where my thighs joined he leaned forward and kissed the area just above my bush, then spoke softly.\n\n\"Hello little one, this is your daddy, grow strong and we'll be here when you enter the world. Oh, and don't beat mommy up to badly with kicking.\"\n\nHe kissed my tummy three more times and then lay next to me, no way in hell was he going to do all that and not make love to me, just listening to him talk to our unborn child had me so worked up and horny that the crotch of my bunched panties was soaked.\n\n\"Oh no you don't, you take those panties off, lick my kitty and make slow passionate love to me.\"\n\nWe were bordering the point of climax but I just wasn't getting there, I told him a little faster and harder.\n\n\"What about slow passionate love?\"\n\nNot missing a stroke I grabbed his face in my hands, \"Never argue with a pregnant woman, now get busy and fuck me, I need to get off.\"\n\nPulling out he grabbed my hips, flipped me, pulled my ass in the air and sunk my favorite fuck toy inside with one stroke. I did indeed have not one but two orgasm's before he let loose a torrent of hot creamy cum, I loved the feeling of his spunk hitting my cervix, I was his and only his. We called our parents in the morning, both sides of the family were very excited for us, especially my mom telling me she didn't think she would ever see grandkids from me. Rod and I decided we wanted to do the picture thing where you document the amount of growth the same time every month.\n\nStanding sideways in panties and a bra he took the first picture, a normal looking flat stomach, the next month it had changed ever so little, enough that he and I could tell the difference. I found myself with my hand on my abdomen at all times and in all places, when the baby bump had grown to the point it was noticeable I would rub my hand over it constantly, as did Rod, anywhere and everywhere, he didn't seem to care. Lying in bed was his favorite time, he could lift my shirt and move his hand over our baby unfettered, at times that would lead to his hand sliding inside my panties and all the fun that followed.\n\nWith Tom now overseeing all the work and any employee issues I was free to run the business from home, I missed the physical work and being with the crews, at the same time I didn't. I'd been doing it since I was fourteen working with my dad, the company I had started from scratch was successful, I had nothing left to prove, other than I could be a good mommy. In my fourth month more surprises awaited us, an apartment would be available in a month and the office complex interested in Audrey wanted her as soon as possible.\n\nRod and I helped Shirley get everything together for a quick wedding, they wanted it in our backyard and since Audrey's father had been vacant since early childhood she asked if Rod would walk Audrey down the aisle. Rod thought he should have a talk with Allen about the birds and bees, little did he know Allen knew all about the subject and left Rod with the impression those kids didn't need help from anyone in that department.\n\nThe wedding and small in our backyard went off without a hitch, a large number of their leaning disabled friends were in attendance, Allen and Audrey didn't want any alcohol and as far as we could tell no one missed it. Their dream was to honeymoon at Niagara Falls, we made it happen, at the end of the month we moved them from a spare room in our house to their apartment. Within a week they had put up pictures and wall hangings of their choosing, along with mementos the place was definitely theirs. When Shirley asked Audrey about their wedding night Audrey told her it hurt a little bit but then it felt good later.\n\nWith each picture my tummy grew, when I was at the point where I didn't walk but waddled I felt like a blimp, somehow Rod found it sexy and exciting, we spent many an evening or weekend afternoon with me on my hands and knees or on my side as my husband drilled and filled me. Two nights before I went into labor I had jokingly said all our sex was going to put me in labor, sixteen hours after my water broke walking from the kitchen little miss Madison Ann Radler entered our world. I was a week earlier than what had been anticipated, my folks jumped on a plane as quickly as they could, by the next afternoon all four grandparents were in the room cooing over their latest grandchild.\n\nRod did get his taste of breast milk and while he thought it was erotic, the sweetness of it didn't do the trick. My six week checkup ended up being gram and gramps taking care of Maddie while Rod and I had an all weekend fuckfest, that's what we called it anyway, truth is I could only make it through three rounds before my body was sore enough that we cuddled and played without penetration.\n\nTwo months after Maddie was born I hired Shirley as a full-time nanny/housekeeper, she was in her element which afforded me time to concentrate on running the business. I wouldn't let her work in the evening unless we were going out and then I paid her extra, she was well worth whatever we paid her and then some. We repeated the scenario three more times before I turned forty, Shirley was there every step of the way, the kids all knew they might get away with something with mama, but not Shirley, they all loved and respected her deeply. They also knew when she spoke with authority, they jumped.\n\nI eventually sold the business to Tom and three of the other guys, in less than five years they had nearly doubled the company, I had made the right choice. Though Rod had a manager overseeing the business he still went in four mornings a week from six until eleven, it got him out of the house and gave him purpose, with his finger still on the pulse he felt more at ease.\n\nWe see Allen and Audrey from time to time, generally when they visit Shirley or are over for holidays and birthdays. What a pair of love birds, the world could learn a lot watching those two.\n\nWith our last about to graduate high school we're making plans to re-discover each other all over again, for almost thirty years kids had been our priority, we could now change it back to where we started, in theory anyway. Young enough to still be horny and active, old enough to appear wise.\n\nThanks for reading through to the end.\n\n \n\nI began logging onto Literotica a year and a half before I ever attempted to write a story of my own. With ideas galore bouncing around in my head I decided to submit a story in the fall of 2018, in doing so I had three goals in mind. \n\n<ol type=\"1\">\n\n<li>\n\nAverage a story a week for two years. With nearly 110 published I've more than met that goal.\n\n</li>\n\n<li>\n\nWrite stories interesting enough to have 250 followers by the end of that two years. With over a thousand followers I have far surpassed that goal as well.\n\n</li>\n\n<li>\n\nImprove my writing skills enough over time to garner ratings of four or above. With all but two stories rated at 4.5 or higher it appears I've also met that goal.\n\n</li>\n\n</ol>\n\n \n\nThe early stories were full of mistakes, while I still make mistakes, (the only ones not making mistakes any longer are dead) my biggest challenge is whether I can continue to produce stories that are of interest not only to me but my followers. After all, there are only so many scenarios available before you're trampling on things you've already published. \n\n \n\nThis will be my last story for a short while, I have a surgery scheduled which will prevent me from typing for three to four weeks. I have a half dozen stories done but not fully edited, if I'm able to I'll finish editing and submit them, if not I'll be back after this brief interruption.",
        " \n\nTo all those who follow and vote so graciously I wish to offer a sincere *thank you*, it would be no fun writing without you. \n\n \n\nRespectfully, R410a \n\n \n\n \n"
    ],
    "authorname": "R410a",
    "tags": [
        "love",
        "romantic",
        "oral",
        "cunnilingus",
        "orgasms",
        "relationships"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/earleen-pt-03"
}