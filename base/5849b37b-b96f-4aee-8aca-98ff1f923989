{
    "title": "Be Careful What You Wish For",
    "pages": [
        "All characters are 18 years or older.\n\nBANG! BANG! BANG!\n\nJohn made his way downstairs to open the front door for his roommate, Phil, who was weighed down with a large beer keg, and a number of Halloween decorations he had picked up while he was out. The plastic skulls with twisty straws were a nice touch, but they didn't compare to the set-up John had been working on all day.\n\n\"Holy shit!\" Phil said, as he looked past John into what had been the front hallway. John had covered it with plastic drop cloths to protect the wall, then coated it with a textured latex material, which was then painted black, and layered with a sticky slime. It made the hallway feel as though you were standing in the mouth of some living creature. The end of the hall was blocked off with black out curtains. When combined with only a black light for illumination, the people coming to the party would have a bit of a shock when they first entered. Which is exactly what John was going for.\n\n\"Ha ha, yea it's starting to look pretty good,\" John smiled, as he leaned in to help take some of the load from Phil, \"Just wait until you see the kitchen.\"\n\nThey walked through the blackout curtains into a completely different atmosphere. John had again protected the walls with clear plastic drop sheets, but this time it was so that he could use red paint (intended to look like fake blood) to smear words of panic, torture, and murderous intent all over the interior of the kitchen. An old meat grinder was set up on the island in the middle of the room with a half ground human arm, complete with manicured nails, posed mid-way through the grinding process.\n\nPhil had to do a double take to be sure that the prosthetic was fake, before moving his gaze over the rest of the room. Bloody pots sat filled with organs, a couple of cutting boards were loaded with what looked like intestines, waiting to be stuffed with a maggot infested gruel, and the freezer in the corner stood open with half a corpse, eerily resembling one of the high school teachers that he and John had shared a couple of years ago, sitting upright and looking over the room.\n\n\"John, this is too much, man,\" Phil said, still shocked at the gore splattered room, \"How is anyone going to eat up here?\"\n\nJohn gave him a quick smirk, \"Don't worry about it. With that keg you have there everyone will be too drunk to worry about the props. This is just for shock value when people walk in.\"\n\nPhil shrugged, as he set the keg down across from the meat grinder, \"Alright, as long as it doesn't leave us stuck with a terrifying, yet completely empty house by the end of the night.\"\n\nJohn rolled his eyes, put the decorations on a free counter top and headed downstairs. Each year they held a party for about 40-50 people, but the amount seemed to have increased this year. The usual invites had been sent out, however, the infamy of their Halloween party had spread and they had double the responses come back than had been sent out. The guys didn't mind though, both of them being single and expecting a high population of available young women that night, they were more than happy to put the extra work in to make the party a success.\n\nAs John descended the stairs into the once welcoming basement, he stopped to admire his handiwork as rusty shackles hung every few feet down the stairs and into the basement. Various body parts were chained within them, and oozed fake blood down the walls. Where the kitchen had been set up to look like some type of demented butcher shop, John had used the natural subterranean vibe of the basement to transform it into a torture chamber/dungeon, complete with various mock torture devices, and any gruesome elements John could think to include.\n\nIt wasn't that John was some type of demented individual; in fact, he would have considered himself to be average, almost to the point of being boring in any other area of his life, but John loved Halloween. He had always loved Halloween, and had used some of the knowledge he had acquired from his father, who specialized in making movie props and decorations, to bring his love of Halloween to life every year.\n\nOutside of the holiday, John was a regular guy. He stood at about 6 feet tall, had blue eyes, a crooked, roguish smile, and a fit, if not exactly athletic body. He had graduated high school a few years back, and instead of heading off to college he had chosen to stay in his home town, hoping to marry his high school girlfriend. He got a job in the construction industry and quickly worked himself into a managerial role, but his girlfriend had a different idea for their future. Namely that they didn't have one together. She headed off to a college across the country and left him there with his monotonous career.\n\nPhil, John's best friend, was a bit of a geek. He was 5'10, skinny, but had an outgoing personality that could charm a nun out of her habit. Phil had tried the college life, but couldn't find anything that really interested him. He chose to start a small business selling video games, and 'geeky' paraphernalia over the internet. When the business picked up to the point that he felt he could finally pay a monthly rent, he moved out of his parents' house to buy a place with John. John paid most of the upfront cash for the little house, but Phil was good for his share of the mortgage every month.\n\nOverall, the living situation was ideal for both of them. The guys got along together without any issues, and the house had enough space to give them each their privacy when it was needed.\n\nJohn walked across the basement and collapsed onto a large couch at the far end of the room. He checked his face make up with his phone to make sure that the design was still good. John and Phil had both elected to go as skeletons this year. The skeleton shirt John had on went well with the professional make up job that an associate of John's father had volunteered to do for him. John put on the black top hat he had acquired to top off the costume as he heard Phil coming down the stairs. A slightly impressed gasp and then Phil came into view. His costume wasn't a mirror image of John's, but where they both agreed on specific styles the similarities were obvious, not that either friend minded.\n\n\"Nice job down here, too. The party is going to be great this year,\" Phil said, in awe of his friend's decorating skill.\n\nJohn nodded in agreement, \"Yep, just one final touch,\" he said as he got up and strode to the sliding glass door that lead out to a small back yard. John turned the light on, as the sky outside darkened, the water in their hot tub was illuminated with a creepy fluorescent green.\n\n\"Nice,\" Phil said, just as they heard a banging on the door upstairs. John quickly climbed the stairs two at a time to make sure that the black light in the front hall was turned on, then flipped the switch in the kitchen to soak the room in a reddish white light, caused by a 'blood' spattered ceiling fan. \"Alright, now it's ready,\" he said with a smirk, then proceeded to open the front door, welcoming their first guests.\n\nAs the night got darker the house started to fill up as more and more people arrived. John immediately took note of a few of the more attractive party-goers and made a point of learning their names. Harper was a young bombshell of a girl. She dressed as a slutty zombie, making sure that her clothing was ripped in all the right places to just barely cover her decency. She had deep brown eyes, black/grey hair with the added costume effects, a nice round ass, and perky breasts that practically dared the casual observer not to stop and stare. Even with the ghoulish make up, her smile lit up the dank, horror infested house, and her bubbly personality quickly made her a center of attention in whichever room she was in at the moment.\n\nThe next was Emma, she was a lithe, tiny thing. Her assets were not huge, but the little she had was practically shaped by the hands of an artist. Emma was dressed in a form fitting black leather costume, vaguely resembling a number of super hero/villains from the recently popular comic books made movies that had captured the nation's attention for the last couple of years. Her black hair, pale skin, and almost violet eyes pulled the gaze of men and women alike, but the clincher was how she looked in that form fitting costume. Emma had small, modest breasts, but what they lacked in size they made up for with their shape and pure sexual appeal. Not to mention her tight, shapely ass, wrapped so comfortably in the body suit that she seemed to be naked. When John first saw her, he was sure that a bit of drool had time to escape his mouth before his brain was able to restart.\n\nThe final vixen that had made an impact on John's brain, and other parts of him, was Zoe. Zoe was, for lack of a better description, an angel. Not only was her costume that of an angel, but her entire personality and demeanor was one of an innocent, pure, almost untouchable being. She was beautiful, and sexy, while somehow managing to not notice at all the effect she had on every male within sight. Zoe would giggle, hug, grab an arm, or sit on a lap, all without thinking that anything she had done would or even should elicit anything more than a friendly response. Combine that with perfect D cup breasts, a firm backside, and an athletic body that had to have taken years of rigorous exercise or training to attain, and she became one of John's favorites very quickly.\n\nPhil had noticed the three girls, and his friend's routine stops with each of them and made sure to steer towards a different selection, because as they say, 'Bros before...' well, Phil wouldn't dare call the girls here hoes, but his friendship with John came first, regardless of the girls' sexual experience. Phil's tastes ran more towards the geeky/funny girls anyway, and he spotted a few that caught his interest, but Naida's humor and personality really attracted him to her. She was dressed in a full bear costume, and after talking and laughing back and forth for a half hour on the couch in the corner of the basement, she finally took off the head of the costume to reveal an incredibly cute, pixie-like face, \"Whew, that was getting hot.\" Phil smiled, holding his tongue, as he sat contemplating what else was getting hot at that particular moment.\n\n\"So, Phil, if you could have any Halloween wish, what would it be?\" Naida asked him as she leaned in closer. Phil thought about it for a few moments, deciding that asking for sex outright wouldn't be the best choice here. \"I think for this Halloween it would be great if the atmosphere could become a little more...dangerous,\" he said with a playful grin, hoping that she understood the direction that he wanted this conversation to go.\n\nNaida removed a small hand from her bear gloves and slid it up Phil's leg, biting her bottom lip as she did, pausing just before reaching his hardening cock, \"Oh, do you? You like it dangerous, Phil?\"\n\nPhil could barely prevent himself from groaning audibly as he felt her hand tighten on his thigh, \"Yes, yes. I love dangerous, please, let's be more dangerous.\"\n\nNaida's hand continued up his leg, avoiding his cock, she began unbuckling his belt so that she could slide her hand into his black jeans. Phil's penis was already begging to be released from its prison, and he didn't care if they were in the middle of a party. Phil eyes were locked on Naida's hand, which was now wrapping itself around his throbbing member. Phil let out a small gulp as she began stroking him slowly. Naida leaned in close to Phil, running her tongue lightly up his neck, stopping to move to his lips, she kissed him deeply, as she continued to rub his dick. After 10 seconds, or 10 years, Phil didn't know, Naida pulled away with black makeup on her lips. As he stared back at her, unable to contain the pleasure any longer, his cock erupted, spurting hot cum onto his chest, and all over her little hand. Naida leaned over him, licking his chest free of the mess before taking each finger deep into her mouth and sucking them clean. Naida bent further, taking his penis into her mouth, her tongue swirling around his cock head and sucking until he was dry. Sitting up and licking her lips she whispered in his ear, \"Dangerous enough for you?\"\n\nAt that moment, Phil's ecstasy was broken by a scream, and his eyes jerked away from Naida to the rest of the basement, or what had been the basement. All around him people clambered away from the props that John had set up, and as Phil looked closer he understood why. The false decorations had somehow become real rotting flesh, dripping blood and ichor onto the floor. A chair in the corner of the room that had been a blunted, plastic version of a torture chair, covered in sharp metal spikes that the victim was lashed to, had become real, slicing open the leg of one of the more inebriated guys at the party when he had stumbled over it. Another guy had come forward and was bandaging the leg, but the truly horrific part of the transformation was the smell. Death and decay was a scent that seemed to choke the living with the sheer rancor of its intensity. Phil heard a small chuckle from the girl beside him and turned just in time for Naida to give him a quick wink, then disappear as though she had never been there.\n\nPhil's brain screamed at the unbelievable situation in which he found himself, but from some far corner of his mind he found the fortitude to pull himself together. He wasn't sure what other details John had added to the decorations and he needed to get these people out of the house before anyone else got hurt. Luckily, the party had wound down some by this point and only 20 or so people remained.\n\nPhil stood up, tucking his cock back into his pants and fastening his belt, he moved to the closest guests and tried to steer them towards the back door. Three people, a guy and two girls, listened to him and made their way outside, but as they were passing the haunting green hot tub, the steam pouring up from it seemed to envelope them, tendrils beckoning them closer. Phil watched, mesmerized, as the first girl, a short thin blonde, began undressing. It didn't take long for the man, a short, somewhat stocky individual, to follow her lead. Last to strip was the second girl, she was tall and had light ebony skin, and a large, shapely ass to match her equally large, and shapely breasts. The three people stepped into the hot tub and it seemed as though a type of mad lust was upon them. The young blonde buried her head into the breasts of the tall, black girl, as the man positioned himself behind the blonde, driving his cock deep into her already sopping pussy. The blonde let out a slight gasp as she was penetrated, but continued her ministrations on the girl in front of her, kissing and sucking every inch she could reach of the big ebony breasts, until the man pushed her forward with a hard thrust, knocking the dark-skinned girl down into the water of the tub. She surfaced again, and instead of leaving the madness of the tub, she turned and bent her waist over the side, presenting her vagina to the blonde's mouth, and leaving Phil with a stunning view of her beautiful breasts hanging unobstructed.\n\nThe blonde immediately drove her tongue towards the other girl, first licking her outer lips before probing her vagina as deeply as she could. The blonde grabbed both thighs and pulled the black girl towards her as hard as possible, driving her tongue deeper inside of her pussy. Finally, she released some of the pressure on the black girl's thighs, returning to licking the outer lips of the vagina, but as Phil watched, the man pulled out of the blonde and strode through the shallow water to the prone girl bent over the edge of the hot tub. He hesitated for just a moment before forcefully turning her around to face him. As he looked down into her eyes, he greedily grabbed her breasts, twisting her nipples just slightly, enough to elicit a moan, then he pushed his manhood into her waiting pussy. The girl bucked once or twice, then gave into the control the steam from the tub had over the three individuals. The blonde, not wanting to miss out, helped to move the pair to one of the two benches in the tub, straddling the black girl's face and leaning down to lick and suck the man's cock while he plunged into the other girl's hot pussy. The black girl saw the hovering vagina over her face and reached her hands up to pull the blonde's tight body down to her mouth, licking first her clit, then tracing the pussy lips all the way back to her puckered rosebud. As her tongue circled the small brown bud, the blonde gave a startled jerk, but quickly returned to licking and sucking, with even more enthusiasm, if it was possible. The black girl used a finger to trace the blonde's clitoris, stimulating it more and more as she continued to lick and plunge her tongue into the blonde's cute little hole. They continued like this for a while, as Phil absently stroked his cock through his pants. Then, as though somehow timed, the blonde and the black girl began to orgasm, rocking, and twisting with the pleasure, still locked together, just as the man pulled out of the black girl, shoving his dick roughly into the mouth of the blonde, and exploded deep into her throat. Phil couldn't believe it when she didn't spill a single drop, but just as suddenly as it had started, the show was over. The three disentangled themselves from each other, sitting back to rest against the side of the tub, they passed out.\n\nPhil couldn't believe what he had just witnessed, but just then Naida appeared beside the threesome. She looked towards him, winked once and said, \"Just because the chair back there is dangerous, doesn't mean that everything will be exactly as the party designs intended.\" Phil tried to ask her to reverse his wish, but just as suddenly as she had appeared, she vanished again.\n\nLooking on briefly, Phil guessed that the threesome in the tub were the safest right where they were, and turned back into the basement. The scene had changed somewhat since his attention had been stolen by the naked gyrating bodies in the tub. There was only two people left downstairs with him now. One was the guy who had injured his leg on the torture chair. He now laid on the couch Phil had occupied previously. Phil checked on him, but it seemed as though he had just passed out from all the alcohol.\n\nThe other person was a girl who had come dressed up as a slutty school girl. She had red hair, pale skin, and long legs that led to an ass that was to die for. Phil couldn't see much more about her as she currently had her arms strapped down to a table, and was bent over in a position that demanded that he spank her...Wait, what was he thinking? This situation was fucked up enough without him taking advantage of some poor girl. Phil moved to unbind her arms when she spoke up, \"Oh, master, please punish me. Don't let this bad girl out until she has her punishment.\"\n\nPhil stopped. He couldn't do this, not even if she begged him. It was obvious that she was just under the spell of this place too, but what if she wasn't? What if she really did want this? Phil didn't tie her up, after all, and no one else was down here to do it, so she must have done it herself. Which meant that if she wanted to she could untie herself, too. Phil had rationalized himself into a corner and he loved it. Walking back down the table, he traced his trembling fingers up the outside of her legs until he had reached her hips, \"Hmm, no panties today?\"\n\n\"No, master, I'm a bad girl. I must have forgotten to put them on,\" she said, in a half-scared, half-pleading voice, \"Please master, just punish your bad little girl.\"\n\nPhil slid her plaid skirt up around her waist and got his first good look at her bare ass. The skin was milky white, and shaped so succulently that he couldn't help himself, he bent down, grabbing one cheek tightly as he kissed the other one. Then he stood, rubbing his hand over her ass, running one finger up and down her crack, teasing her little hole, and sliding down to feel her sex dripping down the inside of her thighs.",
        "\"M-master, please! Please punish me! I am begging you, master.\"\n\nPhil listened as she pleaded, keeping his right hand moving over her cheeks, while with his left her reached under the girl to caress her soft breasts, completely free of a bra. He chuckled to himself, then straightening gave her firm ass a hard spank. She jerked slightly before letting out a loud moan, \"Oh, master, please punish me again. My pussy is so wet, I'm such a bad girl.\"\n\nPhil didn't need any further prodding as his hand came down again and again until her milky white behind glowed a hot pink. When his hand felt sore from the spanking he yanked his pants down and lined up behind her about to sink is cock deep into her pussy when she stopped him, \"Master, no!\" He froze, unsure if he had crossed a line, but then she continued, \"I don't deserve your hot, thick cock in my sopping pussy...yet. First let me suck it for you.\"\n\nPhil's smile returned. Kicking off his pants he walked around to the front of the table where the girl's head rested, her hands stretched out to the shackles on either side of the table holding her in place. She looked up at him with a thirst he had never seen before, her piercing blue eyes paralyzing him for just a moment, \"Master, put it here,\" she said as she opened her mouth wide. Phil slid his rigid member into her waiting mouth and was immediately met with pleasure on a scale he had never imagined before. The girl was either very experienced, or very talented. Some part of his mind tried to float the idea that it might just be an effect of the magic they were clearly under, but the pleasure coursing through him quickly pushed that thought away. The girl sucked, and bobbed, moving her tongue in such a way that Phil thought he could have classified it as art, and all too soon he felt his balls tightening and the growing pleasure coming to a point. Phil tried to pull out, but the girl closed her mouth to the point that if he pulled away there was a good chance he would be losing skin. Instead he just gave in to the sheer bliss and barely had time to notice when his cock sprang free of the girl's mouth, pumping his load all over her face. He looked down, slightly shocked at what he had done, but the girl smiled back at him licking her lips, \"Sorry, master. I was bad, I didn't let you go when you wanted to...I think I need to be punished again.\" A wicked grin slid onto his face as he moved back behind the girl.\n\nThe pink in her cheeks had lessened slightly, but they still felt hot to the touch. Phil didn't hesitate, he held her body with his left hand and spanked her ass hard. 1, 2, 3, 4, 5 times his hand came down, each time his cock seemed to get harder and harder until he was standing at full mast and ready to go again. Once more he prepared to penetrate her pussy, but she interrupted him again, \"Sorry master, but I still think I need to be punished more. I have another, dirtier, hole that you could fill, if you want,\" she said as she wiggled her little ass. Phil couldn't believe what he just heard, the frustration that had started when he was interrupted was immediately replaced with lust. Phil reached a hand between her legs and began playing with her sweet pussy, every once in a while, rubbing her dripping juices into her puckered asshole, and lubing his waiting cock. He took his time preparing her little hole, Phil wanted her to enjoy this, too.\n\nOnce he felt like she was adequately lubed he slipped one finger inside her tight hole. She relaxed almost instantly and he was able to quickly add two more fingers without forcing them in. Phil worked slowly and patiently, ensuring that her little ass was well worked before he removed his fingers and began to push his cock head into her waiting anus. At first it seemed as though he wouldn't be able to go in very far, but suddenly the tight ring released and he thrust almost completely inside with one push. Phil paused to make sure he didn't hurt her, but when her initial grunt at his intrusion was replaced with moans of pleasure, Phil plunged in deeper and deeper, thrusting harder and faster, her petite little asshole caressing every inch of his cock as it slid in and out of her prone body. Phil gripped her rosy cheeks hard as he fucked her hole, savoring every moment his cock spent inside her. He couldn't believe how tight her sweet crack was, and as he moved vigorously in and out of her vulnerable, bound body, climbing to his orgasm, the girl cried out, \"Now master! Fuck my pussy now!\"\n\nPhil immediately pulled out of her backdoor and sunk his cock all the way up to his balls into her drenched vagina. He fucked her harder and faster than he thought possible, all while she screamed, \"DON'T STOP!!! HARDER!!! YES!!! YES!!! YES!!! CHOKE ME!!! PULL MY HAIR!!! FUCK ME!!!\" Phil reached up, tightening a hand around her throat, as his other hand pulled hard in her hair, fucking her harder and harder, squeezing tighter and tighter, pulling back until she was almost looking up at the ceiling. Then at the greatest sexual apex that either of them had ever known the girl's pussy tightened as she climaxed and Phil's cock erupted deep into her womb. Wave after wave of pleasure pulsed through them, and as it subsided, Phil relaxed his grip on her hair and neck, collapsing down on the table beside her. After several minutes of heavy panting, Phil managed to recover enough to undo the shackles on the girl beside him. She sat up and thanked him, before walking into the spare bedroom just off of the main basement. She paused at the door before beckoning him to follow her. Phil jumped down and hurried after her, closing the door behind them as whatever magic was at work took over completely.\n\n\"What the fuck is going on?!\" John yelled at the top of his lungs in the hallway as no less than ten people rushed the front door. John moved to intercept them, but one of the guys who was just panicked enough, or just drunk enough to be moved to violence, pushed John hard against the wall. John expected a jarring impact, but when he made contact, he more or less sunk into the wall slightly before rebounding back out, his back now covered in slime.\n\nThe guy that had pushed him had reached the front door, but no matter how hard he pushed or banged, the door wouldn't open, it just seemed to flex with each impact. John, now at the back of the group, notice a slightly noxious odor leaking into the space. He couldn't figure out where it was coming from, but as he watched, person after person started to collapse to the floor of the hall. John held a hand over his mouth and pushed back through the curtain into the kitchen. The odor had started his head spinning, and he steadied himself on one of the counters. John's hand slipped on some of the blood coating the surface of the counter and as he lost his balance he grabbed onto the closest thing he could: a human arm.\n\nThe limb did little to prevent him from sliding to the floor, but as his head started to clear, he realized that the flesh didn't feel like the analog he had created. He blinked his eyes a couple of times, clearing them as best as he could as he examined the arm, now on the floor beside him. The nails were cracked and broken, but if they had been whole he wouldn't have been able to tell them apart from his own. The wound that had separated limb from body oozed lightly, congealing in places without the heart to pump fresh blood to the region and old blood away.\n\nJohn pushed himself away from the arm, he had to call the cops, someone had actually murdered another person. John backed away into the stove. Looking back, the organs that bobbed there were identical to the ones that he had designed for the party, but now, he could tell that they were real flesh and blood.\n\nJohn shook, what was going on? How had this happened? Just then the corpse in the freezer opened one eye, \"It's all fun and games, ha ha ha.\" John leapt forward, slamming the freezer lid down. He backed out of the kitchen, catching sight of a single girl, who seemed to have appeared out of nowhere, standing over the freezer.\n\n\"No, don't open it!\" John tried to warn her. The girl turned slightly and smiled, her eyes were dark, and somehow felt ancient to him. \"Don't worry John, the wish will only last the night, you may as well have some fun with it,\" she said, motioning back towards the stairs where he saw Harper standing, covered in just as much gore and blood as he suspected that he was coated with. John turned back to ask the girl what she meant, but she was gone.\n\nJohn walked over to Harper, \"Are you ok?\"\n\n\"I'm not really sure what's happening, but I need to get out of...this,\" she said motioning to the disgusting mess that coated her flesh and costume.\n\nJohn nodded his head in agreement and said, \"Yea, me too. The shower is upstairs, I'll show you.\" They both headed up the stairs, happy for the comfort of another, seemingly normal person, moving towards a normal goal, in a completely fucked up situation.\n\nJohn opened the door and motioned for Harper to go ahead. Once she had passed into the room he made to close the door, but she stopped it with an outreached hand, \"No, please, I don't want to be in here alone. I have seen way too many horror movies where the pretty girl gets killed in the shower.\" John shrugged and walked inside, closing the door after him. The bathroom had been the one room in the house that didn't seem like it belonged. The tub was the size of a small hot tub, and the shower was nearly a quarter of the room by itself.\n\nJohn turned towards the door to give Harper her privacy, but instead of simply undressing and stepping into the shower, she began undoing the button on the top of his pants. He grabbed her hand, \"Listen, we are both scared, and freaked out. I don't want you doing anything that you are going to regret in the morning.\"\n\nShe wriggled her hand a little to free it from his grasp and continued to undress him, \"John, I know you have had your eye on me all night, and to be honest, I have been keeping mine on you, too. Trust me, I want this, and with the fucked up shit going on right outside that door, I need this, right here, right now. So, you can play the gentleman card all you want, or you can turn around, and fuck me hard while we shower off blood and guts that went from being fake movie props to somehow becoming the real O negative shit they take from you in the hospital.\"\n\nJohn didn't answer, he pulled his shirt over his head as his pants dropped to the floor. Turning, he grabbed the torn material of the zombie costume and ripped it apart, throwing the pieces on the floor and lifting Harper by her round ass. They began furiously kissing, an insatiable need driving them towards each other. John stepped into the tub, closing the glass shower door behind them, and turning the water on. The first spray of cold water only dousing their intensity for a second before John's lips were back on Harper's body. The water washed the blood and ichor down the drain, and as it did John's mouth explored further and further down Harper's curvy body. His lips nibbled lightly at her neck as he moved to her shoulder blade, stopping briefly to return for a quick kiss of her lips, he then lifted her higher so that he could slip her erect, pointy nipples into his mouth, swirling and sucking on each of them in turn. Harper's perky breasts were easily a large C cup, but the youthfulness of her figure kept them suspended almost in a mockery of gravity. They were ideal in every way, and John swore that the skin of her nipples tasted almost like strawberries. He couldn't get enough of them.\n\nSoon though, his arms started to tire and he set her feet down in the shower. As they touched the warm water pooling there, John dropped slowly to his knees, his hands moving to grab her round, sexy ass, pulling her to him. The water cascaded over her back as his mouth found her sex, slowly and sensuously his tongue circled her clitoris, stroking back and forth, around and around until Harper grabbed his head, holding him in place. His tongue maintained its slow, tantalizing, agonizing pace, teasing her pussy lips, and lightly, gently caressing her clit. Harper's hands tightened in his hair, as John started to speed up the pace bit by bit, sliding a hand off her ass, between her legs, and slipping two fingers deep into her pussy. He licked her clit and slowly, but firmly massaged the inside of her vagina, bringing her closer and closer until he pushed her over the edge. Her orgasm seemingly started in her toes, as they curled slightly, her legs tensing, then shortly afterwards her vagina clamped down hard on John's fingers. Her hands gripped his hair tightly, preventing him from moving an inch. Despite this, or rather, because of this incredibly sexy display of aggression, and passion, John's pace only sped up, bring Harper to orgasm faster, and more intensely than any man had ever done before. As the pleasure crashed over her, she felt weak, and slowly sank to join him, now laying on the floor of the shower.\n\nAs she curled against him, quivering with pleasure, Harper's hand crept down over his chest to wrap around his stiff penis, \"I want this now.\" Harper sat up, with an energy that John had thought was gone after her climax. She quickly swung her leg over his body, reaching back to guide his cock into her waiting vagina. As he looked up at her now riding his rigid member, his hands moved to caress and massage her pert breasts, spending ample time on her sensitive nipples. She rode him fast, and moved her hips in perfect rhythm with his own as he thrust his engorged sex up into her, deeper and deeper, grabbing her hips as her own hands slid up to grab and tease her breasts and nipples. His cock plunging the full length into her excited pussy, bringing them closer and closer to the edge. Urged by his base instinct, John sat up, gripping Harper tightly, he stood, and roughly pushed her against the wall, one hand held tightly in her hair so that her head wouldn't impact the tile of the wall as he fucked her hard. With the warm water pouring down over them, Harper's eyes began rolling back in her head, as John's grip tightened in her hair, he pushed harder, and faster, quickening his pace until her body shook with the intensity. Her pussy squeezed his cock, the added tightness too much for John, as his cum filled her up, load after load, until it was dripping down her legs. John lowered Harper to the tile floor, unable to stay standing, they lay quietly as the water continued to wash over them.\n\n\"AHHHH!\"\n\nA scream woke them from the calm that had come over them after their sexual encounter. \"Stay here,\" John said, with a quiet authority that meant that he would accept nothing but absolute obedience in the matter. Harper nodded, standing only to move to the tub, where warm water was soon filling it. \"Come back to me if you need to get clean again,\" she said with a small smirk.\n\nJohn, fortunately, had a change of clothes in the small washroom closet that he could throw on to leave the room. As he exited, closing the door behind him, he looked around for the source of the scream. Moving down the hall, he caught a glimpse of the girl who had appeared in the kitchen, and ran towards her. She didn't bother to move or disappear this time, and John ran straight into her. \"Oh, ow. Why did you do that?\" She asked, in a whiny voice that bore no resemblance to the ancient creature he suspected she was.\n\n\"Oh, um...\" John stammered, while another person, Zoe, held a hand out to help up the smaller girl. \"John, that wasn't nice,\" Zoe scolded him, and despite the ludicrousness of it all, her scolding made him feel genuinely shameful about crashing into the girl.\n\n\"Sorry, sorry, um...what's your name?\"\n\nThe girl stood up with Zoe's help and looked up at him, \"Hi, I'm Naida,\" she said with a smile, \"And since you knocked me over, I get to request one thing of you. Sound fair?\"\n\nJohn looked back and forth from Naida to Zoe, but each time he looked at Zoe his resolve to find out what was truly happening weakened further and further until he agreed to go along with whatever they wanted. \"Fine, fine. But only one request, ok?\"\n\n\"Of course, John. The request is that you do anything within your power to help Zoe with any question she has for the next hour.\"\n\nJohn blinked a couple of times, \"What does that even mean?\"\n\nNaida moved in very close to John, whispering in a voice dripping with malice and hardened by absolute authority, \"It means exactly what I said it means, and if you don't fulfill this request, I am obligated to return here and slash your pathetic, mortal throat for the disrespect you have shown to me.\"\n\nJohn visibly shivered as she pulled away from him, \"Ok, fine. Any question she has, I will answer.\"\n\nNaida looked at him, \"Or do anything in your power to help her understand.\"\n\n\"Yes, yes. Anything, I will do anything,\" John managed to stammer out, the chill of Naida's threat sinking into his bones.\n\nZoe gave a small, joyful bounce and grabbed his hand, pulling him into Phil's bedroom, apparently completely unaware of the violence that had taken place in front of her. \"Oh, good John. I have so many questions,\" she said with a gleeful giggle.\n\n\"One hour,\" Naida said as she pointed to the clock on Phil's nightstand, before turning and walking away down the hall. John closed the door behind her, noting that as she got further away the shivers running up and down his spine seemed to be replaced with a simmering lust that he couldn't explain. The blood soaked kitchen, or the living hallway certainly were not a turn on, nor was the threat of some beautiful, unknown creature, returning to cut his neck open if he did not do as he was told.\n\nJohn shook his head lightly, trying to clear his mind, but no matter what he did, the lust clouded his senses, but before he could give it any more thought Zoe pushed him lightly down onto the bed, and sat across from him in an office chair.\n\n\"Alright, John, I have a lot of questions that I would normally be too embarrassed to ask, but since Naida said it was ok, I want to see if you can help me answer them.\"\n\nJohn nodded his head, not sure exactly what questions the girl in front of him could have, \"Sure, sure, Zoe. I'll do what I can to help you.\"\n\nZoe clapped her hands together like a little girl and giggled a bit, \"Ok! Hee hee! John, can I see what a penis looks like?\"\n\nJohn's mouth hung open in shock, \"You don't know what a penis looks like?\" He couldn't believe that this absolute knock out could possibly be that innocent.\n\n\"Well, I know they get hard when I sit on a guy's lap, but I've just never seen one. My mother always warned me to stay away from guys unless I am in a group, and any boys that have tried to get me alone were usually kind of greasy, and I didn't really like the leering looks they gave me, so I never went with them.\"\n\nJohn thought about how Zoe acted around men, and found that it was completely possible that the girl didn't know a single thing about the effect she had on those around her. She was simply that innocent, that na\u00efve. John felt torn about stealing that na\u00efvet\u00e9 away from her, but the underlying lust in the house gave him a push, that and the shivers on the back of his neck when he remembered Naida's cool tone.\n\n\"Ok, well I did say that I would help you answer any questions that you had,\" he told her, as he stood up and undid his pants, dropping them to the floor. Zoe's mouth opened a bit, and her eyes widened as his fingers went to the waistband of his boxers, his cock already starting to tent them out. John looked at the girl, still dressed as an angel, gave a slight sigh at the corruption of her innocence then dropped his boxers to the floor. His cock popped out, hardening further with every passing second.\n\nZoe just stared for a few moments, coming closer and closer, but moving so slowly that it was almost imperceptible until he could feel her breath on his cock, \"Uh, Zoe?\"",
        "She stayed where she was, but responded, \"Can I touch it?\" John's dick twitched at the question, and she flinched slightly in reaction to the unexpected movement, then giggled quietly. \"I guess,\" John shrugged, trying to remain as motionless and neutral as he could to maintain some modicum of control in this situation.\n\nZoe reached out her soft, small hand and wrapped it around the base of his cock. \"Oh, it's hard, and warmer than I expected,\" she said. Delighted with the new experience, her other hand grabbed his balls, gently fondling them as she began to move her hand up and down his shaft.\n\n\"John, do you like this?\" Zoe asked, without looking away from his fully erect member. \"Y-yes,\" John replied, his hands gripping the bedsheet behind him. Zoe let go of his balls and ran a finger over the tip of his penis. \"What is this stuff?\" she asked, rubbing the sticky substance in between her thumb and forefinger.\n\n\"It's pre-cum. Kind of a natural lubricant that comes out when a guy is aroused.\"\n\n\"You're aroused, John? Does that mean that my hand on your penis is making your pre-cum come out?\" John nodded his head, the slow, almost clumsy way in which she was stroking him was somehow hitting all the right spots, while her innocent questions and curiosity just encouraged his arousal.\n\nZoe lowered her face and gradually sucked his cock head into her mouth, twirling her tongue around the sensitive underside, pushing John to the brink of orgasm, but before he could erupt into her young, virgin mouth she pulled away. \"Sorry, John. I just wanted to know what it tasted like.\"\n\nJohn stared down at the girl on her knees before him, \"It's fine Zoe, really, do whatever you need to, or want to do, to answer your questions.\"\n\nShe smiled up at him, \"Ok, John,\" she said as she lowered her mouth down onto his cock, again. He groaned with pleasure, and closed his eyes, loving every second that her tongue spent exploring his thick shaft, but as he was focusing on her mouth and dancing tongue, Zoe's hand had slid around to his ass, and all at once John felt one of her small fingers pushing into his asshole. The sensation was completely new to him, and he had to stop himself from jumping away from sheer reflex at the incursion. Once John had quelled the surprise, he found the sensation to enhance everything that the girl was doing with her mouth. John gripped her head lightly, and began thrusting into his mouth, all while her finger stimulated his hole. After a few minutes his grip tightened on Zoe's head, his anus clenched around her finger, and his cock shot a huge load of cum into her throat. Zoe coughed and choked, but she didn't move her mouth away until he had stopped cumming. Finally, as his knees shook, she slipped her finger out of his backside, and stood, cum dripping down from her lips, her eyes slightly bloodshot, and her skin tinted a light rose colour from having to struggle to swallow John's load.\n\n\"Mmm, that was good, but a little too much for me, I think,\" she said, pleased with herself, \"Did you like my finger back there, John? I thought about asking you before I did it, but you told me to do anything I needed or wanted, so I just went ahead.\"\n\nJohn sat down on the bed as he said, \"It was incredible, Zoe. I have never had that done before, but just feeling you back there made everything...more intense somehow, if that makes sense.\"\n\n\"Good, John. Now my next question,\" she started to say as she began removing the angel costume, \"Is whether I look good naked.\"\n\nJohn sat stunned as she sensuously stripped out of just about every piece of clothing she was wearing. First her top came off, as her D cup breasts dropped slightly from where they were being held. John's mouth watered as her nipples hardened in the cool air of the room. Next she turned and slid her skirt down over an adorable pair of white panties, that stretched across her athletic, firm backside. Zoe stepped out of the dress, standing back up, her middle finger teased her pussy, as her left hand squeezed her breast. John licked his lips as both hands slipped into the waistband of her panties and tortuously lowered them inch by inch until her virgin pussy came into view. She paused to let John appreciate the view before dropping them to the floor. Standing back up, she held her hands out slightly to her side and asked, \"Well, John? What do you think?\"\n\nZoe still wore the angel wings, and long, knee high, white socks, but nothing else. John just continued staring, his eyes drinking in every millimeter of her skin, but kept being drawn back to her virgin pussy. A light tuft of hair, barely noticeable, sat above her lips. The rest was completely bare. John started to answer Zoe, but just before he could force his mouth to work, she interrupted him, \"Maybe, you need to look at the rest of me, too?\"\n\nFor a second John thought that she was scolding him for staring at her pussy so intently, until she turned, bending over slightly to give John a perfect view of her smoothly athletic back, firm, luscious ass, and long legs. John's heart leapt into his throat at the sight, it couldn't get any better, then as though she read his mind she grabbed one firm cheek and pulled it to the side, as she bent further, giving John a direct view of her little hole, and bringing her tight, virgin pussy back into sight.\n\n\"Holy shit.\" John exclaimed quietly to himself. Zoe turned back around, taking a step towards him, her hands moving to hold his face and drawing his gaze up to her eyes, \"So?\"\n\n\"Zoe, you are easily the most beautiful woman I have ever seen,\" he said, \"It's no wonder why every guy who you give even the slightest amount of attention turns into a walking moron seconds later. Forgetting about the electricity of your touch, just the sight of you causes my brain to falter, and my mouth to stop working.\"\n\nZoe released him and walked a couple of steps away, not bothering to pick up her clothes, \"Oh, John, thank you so much. I just have one more question, John. What will that cock of yours feel like deep inside my little pussy?\"\n\nJohn's brain stopped again, but before he could answer there was a light knocking at the door. \"John, your hour is up,\" came Naida's voice through the door, \"You don't need to answer anymore of Zoe's questions...\"\n\n\"Oh, but I just had one more. Are you going to leave me to find out with someone else?\" Zoe said, pouting.\n\n\"Fuck that!\" John said, standing as he did. He took Zoe's hand and pulled her to him, lowering her to the bed John's finger began to stroke her little clit, teasing it, and Zoe moaned her desire into the room.\n\n\"Well, I guess I'll leave you two alone then,\" Naida chuckled through the door, her footsteps receding quickly.\n\nJohn took his hard cock in hand, lubricating it with Zoe's juices, and gently touched it to her opening. \"John, just-just be careful. I really am a virgin,\" Zoe said, a quiet fear trembling in her voice.\n\nJohn brushed a few stray hairs out of her face, looked down into her eyes and said, \"Don't worry, Zoe, we will go as slowly as you need to go. I want this to be special for you.\" Zoe smiled back at him, then reached down, grabbing his cock and pulling it gently into her. The head pushed against the tight slit, slowly, gently moving inside, stretching her virgin opening until it slid inside. Once his cockhead had pushed into her vagina, John paused to let Zoe get used to the feeling until moving deeper. His cock bumped against her hymen and he stopped, \"Zoe, this may hurt a bit, but I will try to be as quick as possible so that you can enjoy the rest of this experience.\"\n\nShe nodded up at him, a small tear in her eye, he thrust quickly, breaking her hymen. She gave a small squeal of pain, but as he started moving again, it was replaced with growing moans of pleasure. \"Oh, yes, John. Fuck me, Fuck me hard!\"\n\nJohn didn't need any further encouragement as he started pumping in and out of her tight pussy. She grabbed his arms, her nails sinking in slightly, as he fucked her, harder and harder. They reached climax almost simultaneously, and her legs, wrapped tightly around his waist, prevented him from pulling out as her orgasm shook her body. His cock, buried deep inside her, throbbed as it shot its load into her vagina. As the pleasure subsided Zoe's arms fell back to the bed, her legs sliding down off his waist, and he fell to his side, his cock slipping out of her.\n\n\"Very nice,\" Naida's voice came from the doorway, \"But I think you're missing one.\"\n\nJohn's brain was still in a fog from the sexual pleasure and the underlying power of lust in the house, \"What? What do you mean?\"\n\nNaida chuckled, \"Well, you took care of the zombie and the angel, but I wonder where that little slip of a thing in the tight black body suit has gotten to?\"\n\nJohn's brain kicked back into gear, \"What did you do to Emma?\"\n\n\"I haven't done anything, boy; but as you can see, that scream you heard earlier didn't come from the angel lying unconscious behind you,\" she said vanishing again.\n\n\"Shit! Shit! Shit!\"\n\nJohn jumped up, grabbing his pants from the floor and putting them back on. He looked back once at Zoe passed out on the bed, then left the room, closing the door behind him. The scream had to have come from downstairs as his room across the hall was empty. Thinking about what he had seen down there he was terrified about what could have happened to Emma, and chastised himself for letting Zoe distract him. John hurried down the stairs. Checking the bloodied kitchen, he didn't see anything, or anyone. Turning he stuck his head through the curtain into the front hall. The people that had passed out there before were still lying in a pile, John checked the pulse on the nearest person as the fumes started seeping into his nose. When he found the correct spot the pulse was strong, and they seemed to be fine, just sleeping, but Emma wasn't in there.\n\nJohn thought about going to the basement, but the scream had been audible from the closed bathroom, so it had to be on the middle floor. The only room left was the living room. John hadn't spent much time with the decorations in there because there was a large bay window looking out onto their street that just took up too much of the good wall space. So John had used it to put up a few animatronic props. Things that would leap or jump to get a good one time scare out of their guests, but when John came into the living room the props seemed to have also been affected by whatever was happening to the house. A large spider leapt at his feet, but John gave it a swift kick, sending it flying across the room to crash into some type of ghoulish creature. The pair tumbled backward and that's when John saw Emma, crouching in the corner of the room. John had no idea how she had survived on her own this long. A few slash marks were in her tight body suit and wet blood could be seen on her skin through the torn material. A werewolf stood over her, preparing to pounce on her vulnerable form. John grabbed a wire from one of the various electronic devices he and Phil kept set up in the room. Wrapping it tightly around the werewolf's neck, John hung on as best he could as the beast began thrashing, trying to remove it's attacker.\n\nIt was just John's luck that the animatronic beast had been made in such a way that the hunched shoulders prevented it's arms from reaching him as he hung on the werewolf's back. The ghoul and spider recovered from their fall and ran towards him, but, the werewolf, now panicking as it tried to break free from the cord tearing into it's neck, turned and slashed at the ghoul, removing the head from it's body. The spider was crushed under a massive paw, and as John held on, the cord, having been sawed back and forth by the werewolf's own erratic motion, bit through the arteries of it's neck and blood poured out. As more and more blood came spraying out of the wound the werewolf crumpled to the floor. John didn't dare let go. No one ever killed a werewolf with wire, and as he lay there his hands started cramping and the beast started to struggle again. Suddenly, just as John was losing his grip, there was a heavy impact and the beast went completely limp.\n\nEmma stood over them with a dripping silver knife in hand, \"I guess it's a good thing you didn't cheap out on the props in here.\" John released the cord, and climbed to his feet. \"You're hurt,\" he said, as he removed his shirt to use as a bandage for her wounds.\n\n\"Yea, the wolf got me before I could reach the knife. It doesn't feel too bad, but-\" she hesitated. \"What is it, Emma?\" John asked.\n\n\"Well, you know what happens in all the movies when a werewolf scratches you? I have this growing heat deep inside me, almost a ferocity that is fighting to tear itself free. What if-what if I am becoming a werewolf?\" She said in a quiet whimper.\n\nJohn looked down at the small girl in front of him, \"What type of ferocity?\" Emma came closer, \"It's like an unbearable hunger. Like the heat from your body is begging me to bite into you, to tear you apart.\" John's brain told him to step back, but his body wouldn't respond. Emma's hand ran over his bare chest, nails scratching lightly over his skin. She leaned in close, breathing in the smell of his body, her fingers digging in slightly as she held his body to her. John felt it when she opened her mouth, but his body refused to respond to the panic screaming in his brain. Standing on her tip toes her tongue tasted his neck, then with a quiet snarl she moved to bite him, but John's body finally moved. His hand, tangled in her hair, pulled her head back sharply, twisting her away from him. The girl struggled and almost escaped his grip, but John tightened his hold, using his other hand to grab the back of her neck, and pushing her hard against the large window.\n\n\"John, I need to taste you,\" Emma whined, as he held her tightly, \"I need to feel your hot blood running down my throat. C'mon John, just give in,\" she said, as her tight little ass pushed back against his cock. John's hand weakened for a moment and she lashed out, but she caught her arm with the curtain, giving John an idea. Using his body to hold her in place he tied her arms to either curtain bordering the window. \"Oh, John, you are so bad,\" Emma growled.\n\nJohn didn't dare move, he wasn't sure how much strength she had acquired from the scratch, and didn't want to find out by having her escape her bonds. \"Mmm, John, I love it when you play rough,\" she said, pushing her ass back into him again. John moved a hand down to push her away, but felt a zipper in the back of the body suit. His hand lingered there just long enough for Emma to sense his hesitation. \"John, it looks like you found the zipper on my costume. I'm so hot John, could you undo it for me?\"\n\nAgain, his mind screamed for him to step away, but his hand acted on its own, pulling the zipper down, opening her suit to reveal her tight little ass, with just a black thong between him and her sweet pussy. \"Yes, that's it, John. Now what about my other zipper?\" she prodded him. John's hand went to the front of her suit, pulling the other zipper down until the two met at her belly button, his hand sliding into her suit to grope her small, cute breasts. His fingers tracing her hard little nipples, as she gyrated her hard ass into his engorged cock.\n\nAll at once, John lost control. His hand tore open the black suit, breaking the zippers that had held it partially closed. Emma's breasts were exposed to the neighborhood as John pinched and kneaded them, all while she growled deep in her throat, giving in completely to the animal savagery. Emma snapped at him, trying to bite into his face, but John was lost in the arousal, the aggression. He gripped her head tightly pushing her hard against the window, her little, beautiful breasts squeezed against the cold glass, her nipples erect, and only further stimulated by the cool window pane. John pulled his cock out of his pants, and as he held her hair with one hand he used his other hand to guide his penis into her dripping pussy.\n\nShe was tight, but she was also aroused to a state of unthinking instinct, and as he made contact with her vagina she pushed back into him, forcing his dick almost all the way in with the first thrust. She growled again and tried to bite him, but John had her, and he wanted her. He wasn't going to let her take control now. John slid his hand out of her hair and gripped her throat tightly before she could turn on him again. There, in the window, on display for any that happened past, John held this savage, petite, little fuck toy, and pounded into her again and again, all while she moaned, growled, and pushed against him, fucking him almost as hard as he was thrusting into her. As he sunk into her again and again, John gripped her small breast with his left hand, squeezing tightly, balancing between pain and pleasure, she bucked against him, loving every minute. Emma thrashed, trying to bite him, trying to push him deeper, wanting him in her, and wanting to attack him all at once, but she had no control, and she loved it. John fucked her, and dug his nails into her breast, as he leaned down to bite hard into her shoulder, holding on with his teeth. She gave a guttural howl, as her body began trembling with her climax. John wouldn't let go, he wouldn't stop, as she writhed in pleasure and pain, he fucked her harder and harder until he exploded deep inside her. Then it all went black.\n\nJohn and Phil woke the next morning to find everything back to normal. The guests, it seemed, couldn't remember a thing about the real horrors that had manifested the night before. They only remembered the events, the sex, the panic, but not a single person other than John and Phil could remember why they had acted that way. They left slightly confused, but knowing that it was by far the best Halloween party that they had ever attended. They thanked John and Phil on the way out, the school girl, who Phil learned was named Ashley, gave him her number and a quick kiss before leaving. Zoe and Harper left without speaking about the night before, and embarrassed smiles back at John, the latter wearing what appeared to be some borrowed clothes from one of the other girls. Emma, however, came right over, wearing an old sweater of John's over her torn costume, she took his phone from him and began typing something into it. He went to take it back, but she moved faster, grabbing his cock through his pants and whispering, \"If you ever want to fuck me like that again just call this number.\" She handed him back his phone, kissed him deeply and left.\n\n\"Well fuck,\" Phil said standing next to him, \"I guess we both had quite the night.\" They both burst into laughter, then froze as a quiet chuckle erupted from behind them, but as they turned the laugh faded away and they were left looking at an empty room. "
    ],
    "authorname": "lonewolf_13",
    "tags": [
        "small breasts",
        "rough",
        "teen",
        "innocent",
        "anal",
        "lesbian",
        "shower",
        "threesome",
        "party",
        "halloween"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/be-careful-what-you-wish-for-52"
}