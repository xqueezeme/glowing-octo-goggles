{
    "title": "Nu\u00eb and the Djinn Ch. 08 - End",
    "pages": [
        "Chapter 8\n\nNu\u00eb set her basket on her hip. Mihel had left her much more money than she would need, and she wanted to go to the marketplace to get blue yarn because she'd run out. As usual, as soon as she stepped out of the room in the morning, Carin, Vassi's house servant, was immediately there, making sure she was well.\n\n\"Gold beauty, Nu\u00eb,\" Vassi cried from the morning table in the language Sideans spoke, seeing her, grinning, greeting her. \"You are like the very sun itself you are so beautiful.\"\n\nVassi called her beautiful whenever he saw her. She knew that he introduced her sometimes as his daughter and sometimes as his niece, because he told her so. For all Nu\u00eb knew, Vassi introduced her as his own wife. She didn't speak any of these languages.\n\n\"Good morning, Vassi,\" Nu\u00eb said.\n\n\"Bello!\" Vassi called, seeing the basket, speaking a long string of nonsense words when a man arrived, a large curved sword at his side.\n\nBello was her guardian, a person almost as large as Mihel and who she suspected was from the barbarian tribes in the south, the Misht\u00eb, a menacing people. He had never spoken that she had heard, not even to Vassi, and he didn't look at her.\n\nBut if someone approached her in the caravanserai, Bello would be in front of her in a moment, and he oversaw every transaction Nu\u00eb conducted, all with her hands, pointing, holding up fingers.\n\nOnly Vassi spoke her language. Nu\u00eb avoided the Sideans who came here, going inside when she saw them and not coming out until they left.\n\n#\n\n\"How long until you return?\" she had asked Mihel in the courtyard. Luta had been loading packs onto the horses, both of them ready to leave shortly after they had arranged her protection. Her chest was aching. She didn't say his name. She was aware Vassi was watching them, aware he could hear.\n\n\"I don't know, my light,\" Mihel said. \"Two weeks, maybe. Don't be afraid if it's three or four weeks. It just means we're delayed. No more than four weeks.\"\n\nShe had looked up at him, thinking of the sorcerer, all her fault. She had told herself she wouldn't cry, but she did anyway, Mihel cupping her face, brushing his thumbs on her cheeks. \"Don't leave me alone in this world,\" she said. When it was time, she had stepped away, getting control. She drew herself up. \"I'm ready. Go kill this dog.\"\n\nLuta was waiting with the horses. \"Don't fear, little sister. We'll be back soon,\" Luta said, Mihel mounting his horse.\n\n\"Be so careful,\" she said to Luta.\n\n\"What's the fun in that?\" Luta said, turning his horse.\n\nMihel had looked back once before he left the courtyard, his eyes meeting hers. When he was gone and she couldn't see him anymore, Nu\u00eb had turned, going into the residence and to her room.\n\nShe hadn't come out until much later, after it was dark, when the servant who attended Vassi, a man named Carin, had scratched lightly on the door. He had motioned, inviting her to dine with Vassi, all communicated in gesture.\n\nNu\u00eb had come to the table, her eyes swollen.\n\nVassi had frowned. \"Ah, gold beauty, it hurts to see you crying. You don't worry. He's a big scary person, that one, like a mountain but more unfriendly. Soon he will come to you.\"\n\nVassi had sat and talked at her the whole meal in her language, his speech sometimes difficult to understand, Nu\u00eb finally smiling and then laughing to hear him speak.\n\n\"Tell me how you meet a large person like this one, so unlike your sweet self who is so beautiful and your smile,\" Vassi had said.\n\n\"He came to my tribe,\" Nu\u00eb answered. \"I didn't know him at first.\"\n\n\"You knew him from another times before?\"\n\n\"Yes.\"\n\n\"How does a young beauty like you know an old one like him, sour and a threat?\"\n\n\"He knew my light,\" Nu\u00eb answered.\n\nVassi had blinked. \"What is the light?\" he said, shaking his head.\n\n\"My spirit. He has known me before for hundreds of years. I came back to him.\"\n\n\"He brought you from the dead?\" Vassi said uneasily.\n\n\"No. My spirit came back to be with him. I was born in a new body. He saw my light and found me.\"\n\n\"How long are you gone from him?\"\n\n\"Four hundred years,\" Nu\u00eb answered.\n\nVassi was staring at her. \"He likes you, I think. Once, I was married. I got away from her,\" he said. \"If she comes back, I would run for four hundred years in the other way to stay alone.\"\n\nNu\u00eb laughed, Vassi laughing with her.\n\n\"Now, you, so sweet when you laugh, gold beauty,\" Vassi said, \"I see why that big threat comes back and finds you again.\"\n\nAfter that, except for having supper with Vassi, Nu\u00eb stayed in her room. There was a small balcony, and she sat and watched the courtyard and all the people. Vassi was often among them, his big booming voice.\n\nAt supper on the fourth evening, Vassi's eyes were sharp on her at dinner. \"You're too sad now, waiting for your big scary lover who treats you so gentle. What do you do? What do you like?\"\n\n\"In what way?\"\n\n\"Do you sew like a Heltas woman? Do you make a basket to sell in the market?\"\n\n\"I can weave, but I don't have a loom,\" she said.\n\nThe next day, Nu\u00eb found Carin at her door, carrying a big awkward loom, Nu\u00eb exclaiming to see it. It was larger than any one she had ever worked on, but the principle was the same. Nu\u00eb went to find Vassi, who was having breakfast with guests. She saw it and stepped back, trying to fade away.\n\n\"Gold beauty!\" Vassi cried, seeing her, gesturing her in. \"Come and sit, meet these good people.\"\n\nNu\u00eb came in, nodding to them, feeling self-conscious being introduced to three men. They sometimes spoke to her, but only Vassi knew her language, and he translated. When Nu\u00eb had a chance, she leaned forward, smiling. \"Thank you so much, Vassi, for the loom. It's beautiful.\"\n\nVassi beamed at her, reaching over and patting her hand, saying something to the other men, who nodded.\n\nShe stood up, nodding to them, meeting their eyes. \"It was nice to meet you.\"\n\n\"They don't know how I ever get one so sweet with me in my house,\" Vassi said to her, laughing, seeing the mens' faces. \"I tell them you're my niece.\"\n\nAfter that, Vassi called for her whenever he had guests.\n\n#\n\nNu\u00eb went with Bello to the market for yarn, finding beautiful colors, smiling at the merchants.\n\nVassi came over, speaking to the merchant and then to her. \"I tell him he doesn't cheat you because you don't know any language,\" Vassi said. Vassi turned to the merchant, issuing forth with a long string of words, the merchant glancing at her and nodding. \"He's giving you good price.\" Vassi said, seeing others, yelling the way he did, and off he went, his voice booming across the space, his arms spreading wide, greeting them.\n\nDays went by, a week since Mihel and Luta had left her here. Nu\u00eb sat at her loom, watching Vassi in the courtyard. It did help to give her something to do. She sang Sidean songs, working the crossbars, pushing the wedge with her foot. She was making a traditional Sidean tapestry, woven shapes in bright colors with birds and horses.\n\nShe turned one day, hearing something, to find Vassi in the doorway, Carin behind him. Nu\u00eb rose, but Vassi waved at her, assuring her. She sat down again.\n\n\"Carin is here because I'm in your room, you see? I was worried you don't come out. We scratch at the door, but you are singing, you don't hear. I listen sometimes to your song down there where I can't hear it so good. Let me see what you make for all this time you work.\"\n\nNu\u00eb nodded, motioning, Vassi coming and looking at the tapestry, only partly finished.\n\nVassi's eyebrows went up. \"This is very nice. I like this very much. Very nice, you make this, it's a thing I like. You keep working.\"\n\n\"Thank you, Vassi,\" she called after him as he left.\n\n\"You're welcome, gold beauty who is sweet,\" he called back.\n\n#\n\nOn her ninth day here. Nu\u00eb was crossing the courtyard toward the marketplace when she felt it, crying out. She found herself on her knees, looking at her wrists, which were burning, the blue glowing, and then it was gone. She was staring down at them, terrified they might fade as if they had never been there.\n\nMihel. She didn't know what it meant, but it didn't feel like it was a good thing. She got up, staggering, and Bello was there. She looked up at his face and he went sideways. Nu\u00eb's vision going dark, not seeing anything around her. She was confused, lost in the lights.\n\n\"Gold beauty,\" someone said.\n\n\"I can't find them,\" Nu\u00eb said, panicking. \"They're not here.\"\n\n\"What is not there?\" Vassi said, alarmed.\n\n\"The threads, Vassi!\" she cried, sitting up. \"I can't find the threads.\"\n\n\"What threads? What is wrong?\" Vassi said.\n\nNu\u00eb could see again, coming back from wherever she had been, the confusion fading. She was sitting on a couch, Vassi over her looking worried, Bello watching.\n\n\"You're back in your mind, gold beauty?\" Vassi said a little warily. \"Bello is carrying you back here. What happens?\"\n\n\"I don't know,\" Nu\u00eb said, breathing fast. \"I can feel him, Vassi, sometimes, when his feelings are strong. Things that happen, when he's hurt. I think I would know if he--\" She couldn't finish. \"I think that something happened to him,\" she said, her voice wavering.\n\n\"You don't know that,\" Vassi said.\n\nNu\u00eb put her feet over the side. \"I want to go and to find him.\"\n\nVassi reached out and touched her hand, Nu\u00eb looking at him. He smiled at her. \"You like me, right, Nu\u00eb?\"\n\nShe was surprised. \"Yes, Vassi. You've been kind to me.\"\n\n\"What do you think that big threat you marry will do he comes here and you're off finding him alone? You think he sits for wine and smiles or you think he will turn my insides so they are on my outsides?\"\n\nNu\u00eb opened her mouth, thinking of Mihel. She leaned back. \"All right, Vassi.\"\n\nVassi nodded. \"Let me tell you what to do. You say to yourself that he is good until you know something else.\"\n\n\"I--\"\n\n\"You're not listening,\" he said. \"You don't know. Waiting is not easy. This is what he asks you to do. While you wait, you don't know. Soon, you will know, but not now. Why hurt before you need to? Why hurt if you don't ever have to?\"\n\nNue exhaled, nodding.\n\n#\n\nThe days passed, and Nu\u00eb tried. When she first got into bed at night was always the worst time, lying awake, wondering if Mihel was somewhere thinking about her. She couldn't feel him. She hadn't felt anything from him since her bracelets had burned.\n\nExactly two weeks from the day Nu\u00eb had come to stay with Vassi, she was in the courtyard in the early morning. Bello wasn't with her because she was just going out for a moment to get water from the well and she hadn't told anyone she was doing that. It seemed silly to go wake Vassi so he could find Bello when the well was right there in the courtyard in front of the residence.\n\nShe looked up as a large group of Sideans came riding into the courtyard, bringing horses, seven men. They would be trading them, she knew. She saw their colors. They were from Palite tribe, nobody she knew. Nu\u00eb abandoned the bucket and walked quickly back toward the residence, but they saw her.\n\nIn a moment, she was in the center of horses. A tall Sidean man dismounted, approaching her.\n\n\"Fada tribe,\" he said, his eyes on her throat. \"Where is your husband?\"\n\n\"He's away. I'm waiting for him here,\" Nu\u00eb said.\n\nThe rest of the men dismounted, surrounding her.\n\n\"I heard about you,\" another said. \"You are half-Heltasian. You're not married. You are a punal.\"\n\n\"I'm not a punal,\" Nu\u00eb said, her chin raising. \"I'm married. You don't come near me. My husband left me with a protector.\"\n\n\"You lie,\" the tall Sidean said, striding toward her.\n\nNu\u00eb stepped back, drawing her knife. \"Don't touch me,\" she said.\n\nThey were all around her. One of the men who had dismounted walked forward and reached for her and Nu\u00eb yelled, stabbing at him, the knife catching his hand, the man hissing, drawing it to his chest.\n\nThat decided them, three others closing in from different sides. She swiped for one when he came for her. He jumped out of the way. A second grabbed her arm from behind, jerking her around. Nu\u00eb turned, yelling, burying her knife in his shoulder. The man cried out, stumbling back. The knife was jerked from her hand. A third Sidean grabbed her hair from behind, pulling it, yanking her back.\n\nNu\u00eb screamed and then Bello was there, his great big curved sword, scattering the ring of Sidean men, yelling. The Sidean man had released her, Nu\u00eb staggering, the men circling both of them now. She was breathing fast, her heart pounding. Now Bello was in the ring with her, two against seven, several of the Sideans drawing their knives. She didn't have hers anymore.\n\n\"What is going on here?\" she heard Vassi roar in the language spoken by Sidean. Vassi came striding out of the residence, still in his nightclothes, a long gown with faded stripes and sandals, his shins showing. He hurried over, Carin behind him.\n\n\"It doesn't concern you, Vassi. This Sidean woman cut one of us and stabbed another. We'll take her now,\" the tall Sidean said in a fury, pulling his knife and facing her, speaking to her. \"Get on the horse. We'll churn you under us on the ground, punal.\"\n\n\"You don't say this to her,\" Vassi exclaimed as Vassi's guard arrived, armed, six of them behind him.\n\nThe tall Sidean's eyes darted to Vassi, to the guard, and then to Bello. He spoke to Vassi. \"She's Sidean, one of our people. She's a punal, Vassi. She has no collar and no husband. She can have no protection. We have the right to take her.\"\n\n\"Even she has no husband, I don't give a woman for you,\" Vassi said, his syntax suffering even more from temper, his face red behind the beard, approaching the tall Sidean, the guard following behind him. \"I don't care she is Sidean or any collars she has. But she have a husband. He trusts me to keep her safe. He's a huge threat who would squash you like a piece of horse shit on the trail. You come here, to my house, take a woman under my protection and attack her?\"\n\nThe tall Sidean's anger cooled and he looked wary, his eyes darting again, the other Sideans looking unsure. He backed away, the rest of them breaking their ring, clustering together with him. He put away his knife, the other Sideans doing the same. \"We heard about her, Vassi. All Sidean know her. A demon came to her tribe and lay with her.\"\n\n\"The demon is the husband, stupid Sidean idiot,\" Vassi cried. \"He leaves her with me while he goes kills someone. You see the blue on her wrists? Do they remind you of something?\"\n\nThe tall Sidean looked at Nu\u00eb's wrists, the blue lines like ifrit lines. The Sideans looked unhappy now. Nu\u00eb was breathing fast, so angry. The tall Sidean stepped back more, gesturing at her. \"We don't take you then,\" he said to her.\n\nNu\u00eb's eyes raked his form. She drew herself up. \"You disgusting person. Filthy criminal. Dog. I told you I was married. You are rude, dishonorable persons, each one of you. You make me ashamed to be Sidean. Maybe I will tell my husband the demon about the men of Palite tribe. Maybe he will come and kill all of you, too, skin you alive and make you scream.\"\n\nThe tall Sidean looked alarmed. Nu\u00eb turned, walking away.\n\n\"No,\" the Sidean called after her. \"You don't tell your husband things about us. We didn't know that.\"\n\n\"I will tell him,\" she heard Vassi say. \"You better hope he doesn't get mad. He's a demon and will pinch your head off with one hand. You're not welcome here anymore. This caravanserai is closed to you.\"\n\n\"But we are meeting a buyer--\" another of the Sidean men said.\n\n\"Not here,\" Vassi said.\n\nNu\u00eb was shaking when she got inside, flicking her hands, trying to release it. When Vassi came in, she turned to him. \"My husband will repay you for all this trade you lost because of me. I can pay you now. He left me money,\" she said.\n\n\"Come with me, to my table,\" Vassi said, gesturing. \"Come and sit and forget them, gold beauty. They are flies buzzing. They are stupid fish with nothing in their mouths, always chewing.\"\n\nNu\u00eb blinked and then she was laughing, covering her mouth, Vassi looking surprised. \"I'm sorry, Vassi. It's funny, what you said,\" she tried, not able to stop for a time. It was a reaction to what had happened, she knew, but she still felt better.\n\nVassi was grinning. He gestured to the table again. Carin brought watered wine and dried fruit, bread and cheese.\n\nNu\u00eb sat, feeling herself becoming calmer. She realized she had lost her new knife. The men from Palite tribe had taken it with them. \"I am lucky, Vassi, that my husband chose you as my protector. You are an honorable man.\"\n\n\"Don't tell anyone this,\" Vassi leaned forward to say. \"People think I'm a good person and they take advantage of me.\"\n\nNu\u00eb laughed. Bello appeared. Nu\u00eb rose and faced him, nodding to him. \"Thank you, Bello. Thank you for protecting me.\"\n\nBello looked at Vassi, who translated. Bello looked at her. She was surprised to find he had very nice eyes, a deep brown. He nodded to her once, turning to Vassi and saying a string of words, the first she had heard him speak. Then he left. Nu\u00eb craned her neck, looking after him, her eyebrows going up. She looked at Vassi.\n\n\"What did he say?\" she said.\n\n\"Bello says you are fierce like women he is coming from,\" Vassi told her, shrugging. \"He almost never says things.\"\n\n#\n\nA few nights later, Nu\u00eb arrived for supper and there were several men there. Vassi was dressed in his best garments, as he did when his guests were important for his trade. She didn't recognize where they were from. They had strange clothes, strange mannerisms. Their skin was very light, their hair the same, their pants strange, their shirts. She came and sat, nodding to them, and Vassi made introductions.\n\nThey had brought an interpreter with them who spoke the language of Heltas. Everything anyone said had to go through a couple of languages to get to her.\n\n\"These are men from Onadie, across the sea,\" Vassi told her. \"They come far to trade with people here. They are rich. They are important people.\"\n\n\"It's nice to meet you,\" Nu\u00eb said to them. \"You're right to stay here. This is a good place, clean and orderly. Vassi is an honorable man.\"\n\nVassi beamed translating that, looking happy. One of the men spoke, gesturing to Nu\u00eb, and then another spoke as Carin served food, a feast for Vassi's guests.\n\n\"They want to learn the Sidean people in trading for their horses,\" Vassi said when that had wound its way to her. \"They hear Sidean women are so beautiful but not so light with skin and their hair.\"\n\n\"My father was from Heltas,\" she said back to them through Vassi, which went to Vassi and then to the interpreter and then to the men. \"But I was raised in Fada tribe, the Sidean people. Now I am with my husband, whose people live in the mountains.\"\n\nVassi translated that, the men speaking again, something coming back. Vassi shrugged, turning to her. \"They have heard legends of the beauty of the Sidean women when they are dancing. They ask to see you dancing.\"\n\nNu\u00eb was surprised, looking at the men, who looked encouraging, interested. They didn't seem impolite. She looked back at Vassi. She leaned in, speaking to him only. \"Would this help you, Vassi? It would please them and so they would look favorably on you?\"\n\nVassi shrugged and nodded a little wryly. \"It would, gold beauty. I want them to remember this place and think to come again, to stop here when they trade.\"\n\n\"I will do this for you,\" Nu\u00eb said, pleased to repay him after all Vassi had done for her. \"But I can't dance without music.\"\n\nVassi seemed happy for it, pleasing her more. \"Then we will get musicians.\" He turned to Carin, a long string of words.\n\nAfter that, they ate the meal, pleasant, the strangers speaking to her, asking her about the Sidean people, about their horses. When they were done, Carin came and spoke to Vassi.\n\nVassi turned to her as Bello came into the room behind the musicians. \"There is a drummer and a thing played with a stick but not the same as for your people,\" Vassi said. \"Can you dance like that?\"",
        "\"I think I can,\" Nu\u00eb said. When the musicians came, Nu\u00eb stood and went to them. The drummer didn't speak her language so she looked at him and clapped the time she wanted, triplets, one long held a beat and two short. The drummer listened and then nodded, giving her the rhythm. She slowed him, gesturing, and then nodded.\n\nThe other musician had a droning instrument not unlike what Sidean played, a bow drawn on strings. He listened to the drummer, his head bobbing, and then began, giving her a Sidean song, to her surprise. Nu\u00eb smiled at him and he returned it. It was close enough, and Nu\u00eb bent down and removed her boots, walking barefoot to the middle of the floor.\n\nShe began the Sidean dance. It felt good to dance, good to hear the rhythms and move to them. She sang the song the musician played, forgetting the men, forgetting her worries about Mihel.\n\nWhen it was done, she went to the musicians, thanking them. They looked pleased, nodding at her, talking to each other. She sat down on the stairs and put her boots back on, crossing the leather straps. She returned to the table, sitting.\n\nShe slowly realized how quiet the men at the table were, the translator staring at her as well. She turned to Vassi, leaning in. \"Did I offend them, Vassi?\" she said, frowning lightly.\n\n\"No,\" Vassi said to her a little blankly. \"No, Nu\u00eb. You dance very well, thank you. They don't forget that soon.\" Vassi turned and signaled, Bello coming and leaning down. Vassi spoke to him. Bello straightened, glancing at her. He nodded. Vassi turned to her. \"Bello will be sleeping outside your door while this men are here.\"\n\n#\n\nNu\u00eb's tapestry was done. She had supper with Vassi every evening. She hadn't felt anything from Mihel since her fall in the courtyard. Every morning, she checked her wrists, the blue bands still there. Vassi didn't say anything anymore when she showed up with her eyes puffy.\n\nMihel had said it could be up to four weeks but no more. Since she had come here, Nu\u00eb had lain in her bed every night and reached out to Mihel. She had no sense of him at all. She fought the impression that there was only emptiness in her spirit, a place he was missing from her, but that was how it felt. She counted the days, still not quite believing he hadn't returned. She would watch the mouth of the tunnel, but he was never among any of the people who came through it.\n\nShe woke up at the end of the fourth week and Mihel still hadn't come.\n\nNu\u00eb spent that day in a daze. She realized she really had still been waiting. She hadn't prepared herself at all, holding out as Vassi had said to do. But now, she had no more excuses. Mihel would never make her wait like this.\n\nShe didn't come to the table for supper. Carin came to the door and scratched. She opened it, shaking her head, and closed it. Someone scratched again and she opened it.\n\n\"You come for supper. I say something to you,\" Vassi said.\n\nNu\u00eb came out and sat, Carin serving food. She wasn't hungry, an entirely different kind of emptiness inside her. She picked at the food. When the meal was done, Vassi exhaled, leaning back in his chair.\n\n\"You don't want to hear this now,\" he said. \"But you listen to me for a moment. I will make sure you are safe. I promise to that big threat. You want to go to Heltas? I will make sure you get safe to Heltas. You want to go to other places? I will make sure you get safe to other places. You have the money he leaves for you. But I say to you this, for me, Vassi only. If you want, you stay here with me until you know. Not like that, you don't worry about that. You don't fear for you are left outside these walls. This is your home if you want until you find a better one. You say nothing now. Go on, back to your room. Tell me some other time.\"\n\nShe rose. Nu\u00eb paused in the doorway and looked back at him. \"Thank you, Vassi.\"\n\n\"I told you say nothing, sad gold beauty,\" Vassi said gruffly, his hand gesturing her away.\n\n#\n\nIn the very early morning the next day, only just dawn, Nu\u00eb got dressed. She hadn't slept. She opened her door and left the residence. Nobody was up yet, even the animals still sleeping in the courtyard. It was cold, late in the season, winter coming. Nu\u00eb went out the small gate, the guards seeing her and nodding. They knew her now.\n\nIt felt like it had been a long time since she'd been outside of the gates. Her chest was hollow. She didn't feel anything, but there was so much under it. She went and found a place to sit, her hands around her knees, looking across at the flat horizon of the grassy steppes, the wind always playing across it.\n\nIt was time for her to go. She couldn't burden Vassi. As much as she missed Levsa, there was nothing for her at Fada tribe. She wouldn't go begging a home from her father. Nu\u00eb put her chin on her knees. She had the money Mihel had left her. Maybe she would find a small wood house in Heltas.\n\nThe truth was, it didn't really matter where she went. Nu\u00eb didn't think her spirit was really her own anymore. She didn't think it had been her own for lifetimes.\n\nShe turned her head when Bello came, sitting beside her, spaced far. She smiled at him, realizing she was crying. She faced forward again. She liked the quiet here. Maybe she would buy a tent and live on the steppes for a time. A place nobody would bother her.\n\nBello touched her shoulder. He had risen. She looked up at him.\n\nHe gestured at the gate. \"Vassi,\" he said.\n\nShe nodded and rose, brushing off her hands. She looked across the plain and there was someone there, the shape of a horse. She couldn't tell how many horses yet.\n\nThere was no reason for her to think it was Mihel and Luta. This was a caravanserai. People came here. But she didn't leave, her eyes straining.\n\n\"Nu\u00eb,\" Bello said.\n\nShe turned to look at him and then looked back at the horse. She began to walk in that direction and then she was walking faster. Then she began to run.\n\n\"Nu\u00eb,\" Bello called now.\n\nNu\u00eb wished she could have ifrit speed. She ran, her feet flying across the grasslands. She knew it was them. She could feel it.\n\nShe watched the horse get larger, and then it was one horse. One horse getting bigger and one person leading it, nobody riding. She had lost one of them. She cried out, still running.\n\nIt was Luta ahead of her. Only Luta.\n\nShe slowed and came to a stop where she was, panting, her legs giving out, crumpling. Mihel. Luta had her shoulders, was saying something to her. He was talking. She tried to hear him. She focused on his face.\n\n\"...here, Nu\u00eb,\" he said, shaking her lightly. \"My brother's alive, but he needs you.\"\n\nShe shook her head, not understanding. She looked at the horse, seeing it was dragging something. A travois. Mihel. She got to her feet, going to it, seeing him.\n\nShe knelt beside it, relief going through her. He was here, looking like he was just asleep. She put her head down, listening, looking to see his chest rise, breathing. \"Mihel,\" she said.\n\n\"He can't hear you,\" Luta said over her. \"That's just his body. His spirit is lost.\"\n\n#\n\nThey sat at the table with Vassi after Luta had carried Mihel's body in and put him on the bed in Nu\u00eb's room. Luta looked exhausted.\n\n\"Tell me,\" Nu\u00eb said.\n\n\"It was bad, little sister.\" Luta said. \"We killed him, but he knew we would come and there were traps. We got past those, but it gave the sorcerer time to prepare. We were able to move in and out of the spirit world to avoid the spells he cast, trying to get closer so we could kill him, but I came out at the wrong moment and got hit by one. It made me sick. I was so sick I couldn't go to the spirit world. I couldn't even move. That crazy sorcerer raised his fist and looked at me chanting and all of the sudden it felt like my heart was in his hand getting crushed.\n\n\"I thought I was going to die, but Mihel appeared and saw what was happening and rushed him. He turned to Mihel and cast a spell. It hit Mihel, but it distracted Ezrel enough that I was released. I got hold of that crazy sorcerer and ripped his crazy head off, but Mihel was gone.\"\n\n\"Gone?\" Nu\u00eb said. \"Gone where?\"\n\n\"I think Ezrel cast a spell to confuse my brother, to cause chaos in his mind,\" Rasmin answered. \"I think Mihel shifted into the spirit world to avoid it, but he got hit, and then got lost there. The sorcerer is dead and the spell is gone, but Mihel went too far. He's still there. It's a vast place. Nu\u00eb. Distances aren't the same and he's still wandering. I've been searching for him for weeks, but I can't find him and he can't find his way home to his body. I had to walk the horse, dragging his body the whole way.\"\n\n\"What do I do?\" Nu\u00eb said.\n\n\"You're his incora. I need you to go to the spirit world and get him.\"\n\n#\n\nThey were in her room at Vassi's residence. Vassi was sitting in a chair, watching. Bello was also there, standing next to him.\n\nNu\u00eb was sitting on the bed with Mihel stretched out next to her, on his back. Luta was facing her, also sitting on the bed. Her hands were in his and her eyes were on his face.\n\n\"You need to be very careful,\" Luta said. \"You're human. Even if you could see the threads that guide my people in the spirit world, Mihel is where there are no threads. He's too far, and you're going to need to go there to help him to find his way back. Where I'm going to send you, if you make a mistake, if you go off the path even one small step, you will end up in places I could never get to you. You would both be lost there.\"\n\nNu\u00eb felt her breathing get faster. \"Can't you take me?\"\n\n\"You have to go alone, little sister. It's a spirit place, a powerful one. Nobody else can go for you. I've been standing there calling to him every night, but he can't hear me. He's been out there for too long. It's not good for us. The bond with our bodies begins to stretch, to get weak. He's been this way since--\"\n\n\"The ninth day after you left,\" Nu\u00eb said. \"I felt it. My bracelets burned. I couldn't find the threads.\"\n\n\"Yes,\" Luta said.\n\n\"Tell me where to go. Tell me how to get to him.\"\n\nLuta shook his head. \"He has to come to you. You would never be able to find him. But in this place I'm talking about, he can hear you better. It's a kind of crossing point where the spirit lines come together, and those lines go to all places everywhere, all at once. If I can get you there, you can call to him. But I don't know if he'll come. He might not be able to. It may be that he's just too far.\"\n\n\"All right. What do I do?\"\n\n\"Lie down next to him. I'm going to touch your wrist to cross you over. You'll hear my voice. Listen for it. This is important, Nu\u00eb, so pay attention right now. Follow the path. Don't step anywhere else, no matter what you see or hear. Don't talk to anything. Don't stop walking until I say you're there. The spirit world can be strange. There are things there for us, memories. Fears. Sometimes spirits who have gotten lost there sense those things and are drawn to us, trying to find their way home. They take the form of what we know, what they see in us, but those forms aren't real. Don't lose focus. Don't lose my voice. Don't pay attention to anything else that you see or hear.\"\n\nNu\u00eb lay down. She nodded. \"All right.\"\n\n\"Close your eyes. Listen to my voice. Are you ready?\"\n\nNu\u00eb nodded. She closed her eyes. Luta touched her wrist and she was somewhere else.\n\nShe was alone. Nu\u00eb looked down. A path was there, not wide, but it was clear and stretched out ahead of her. She began to walk. It seemed like an ordinary deer trail through the woods. But a fast glance around herself revealed a body twisted in a trunk, elongated, its face screaming, and she had the thought that there were people trapped in the trees.\n\n\"Don't look at them,\" Luta said.\n\nNu\u00eb looked down, her heart pounding. It was dim, lights glowing, all sorts of colors of the spirits around her. It her side vision, she saw the air moving if she were under water, with forms that shifted just past the range of her vision. She heard laughter somewhere to her left, but it was lonely laughter. She breathed, ignoring it, looking down. Following the path.\n\nLuta's voice was next to her. \"Think of Mihel. It will help.\"\n\nShe thought of Mihel, of his strength, his smile, of that blue cobalt color all through his spirit, the feel of it like cool water.\n\n\"Keep going.\"\n\nNu\u00eb walked. She slowly realized there were feet to her left, bare feet, stepping when she did. She saw a gold anklet, so familiar. Nu\u00eb was wearing the same one. She suddenly knew who it was, because that was who the anklet had once belonged to. Nu\u00eb didn't look, breathing fast. She followed the path.\n\n\"Nu\u00eb,\" the person said.\n\nNu\u00eb didn't look up.\n\n\"You see someone, little sister?\" Luta said.\n\n\"Yes,\" Nu\u00eb said to the path.\n\n\"Don't answer. Don't look at it. Don't listen to it.\"\n\n\"All right.\"\n\n\"Nu\u00eb,\" Dwali said. \"Help me. I can't find my way home. Take me home.\"\n\nHer mother. Dwali, murdered by a Sidean man from another tribe. Nobody to avenge her. Her mother, whom Nu\u00eb had only ever seen from a distance, a dim childhood memory, and to whom she had never spoken.\n\n\"Keep walking, little sister,\" Luta said sharply, and Nu\u00eb was startled to realize Luta's voice had gotten fainter. She concentrated on it, hearing it get louder as he spoke. \"That's not who you think it is. It's not anybody you know. It's just someone who is lost and wants to find a way back through you, but that person doesn't belong in this world anymore.\"\n\n\"Please, Nu\u00eb,\" Dwali said. \"I loved you. Don't leave me here. Speak to me. I'm so alone.\"\n\nNu\u00eb concentrated on the path, watching it under her feet.\n\nAnother pair of feet walked on her right, and then on her left, different feet.\n\n\"Look at me, Nu\u00eb,\" one said. \"I'm Cao.\"\n\n\"Don't you know me, Nu\u00eb?\" someone said on the other side of her. \"I'm Sersha. He loved me first. Don't you want to know what I look like?\"\n\nNu\u00eb watched the path. It was the chattering nonsense of birds she heard, nothing more.\n\n\"You're almost there, little sister.,\" Luta said. \"Do you see it?\"\n\nNu\u00eb dared a darting glance up, seeing a place ahead, a center, her path and many others leading to it.\n\n\"Yes,\" she said.\n\n\"Don't stray from the path. It's going to get worse. Be careful.\"\n\nA wolf stood in her path. Nu\u00eb cast her eyes down, walking. It was growling, snarling. She was breathing fast, slowing.\n\n\"Whatever you're seeing, it's not real,\" Luta said. \"It can't hurt you. Keep going.\"\n\nNu\u00eb closed her eyes, holding her breath, and walked through it. The form lost its shape like it was made of smoke, the face of the animal stretching and twisting.\n\n\"Punal,\" a voice said, vicious. Tahon.\n\n\"I'm n--,\" Nu\u00eb said.\n\n\"Don't speak to it,\" Luta said sharply.\n\nNu\u00eb realized she had stopped. She didn't remember stopping. She had turned, her foot almost off the path. Her heart was pounding. She moved her foot back, her motions slow and careful, turning and walking again. She felt like she had been walking for hours.\n\n\"Just like your mother,\" the voice said. She ignored it.\n\n\"Nu\u00eb.\"\n\nNu\u00eb's heart leapt. Almost, she turned. \"It's him. I hear him--\"\n\n\"It's not my brother, Nu\u00eb. It's not. I would know. It's trying to trick you.\"\n\nShe was breathing fast. She kept on the path.\n\n\"Stop, little sister. You did it. You're there.\"\n\nNu\u00eb hadn't noticed. She stopped. She looked up and then all around. She was in a center, many blue lines shooting out. The forest was gone. She looked around herself. She didn't even know which path to take to find her way back.\n\n\"Call to him, Nu\u00eb,\" Luta said. \"Call to him in a way he would hear you. He's far.\"\n\nNu\u00eb drew her breath, releasing it, closing her eyes. Thinking. She opened them. She began to sing, what she knew, her voice wavering a little at first, a simple Sidean walking song to a lover. She timed it to the beat of her heart, facing in one direction and then another, moving around the circle.\n\n\"Life is sweet in my eyes\n\nwhen you're beside me;\n\nThere are promises between us\n\nMy love, don't leave me alone.\"\n\n\"If I take one step toward you\n\ntake two to reach me;\n\nThere are promises between us\n\nMy love, don't leave me alone.\"\n\n\"Yes. Don't stop,\" Luta said somewhere else. It was getting brighter where she stood, white light traveling the lines.\n\n\"The wind carries my voice\n\nit brings me to you;\n\nThere are promises between us\n\nMy love, don't leave me alone.\n\nSomeone was coming, from every direction or none. She heard his voice. Mihel. She turned in a circle. She couldn't tell where the voice was coming from. The lines blurred.\n\n\"Nu\u00eb,\" Mihel said above her. She looked up. She was lying on her back.\n\nMihel was over her, in the bed with her, his eyes spirit blue. She blinked. His hand touched her cheek, caressing.\n\n\"I dreamed I lost you,\" she told him.\n\n\"I'm here,\" he said.\n\nShe sat up, Mihel leaning back. She was surprised, looking around. She was in her bed at Vassi's residence. It was night, moonlight streaming through the open doors to the balcony. \"Where is everyone?\"\n\n\"Sleeping.\"\n\n\"I feel like I was gone for a long time.\"\n\n\"You went deep into the spirit world to find me.\"\n\nShe looked down, raising the blanket. \"I'm naked. How did I get naked?\"\n\nMihel shrugged one shoulder. \"I was waiting until you were awake to touch you,\" Mihel said in his defense, his eyes shifting away from her and back. \"Mostly.\"\n\nShe felt slippery between her legs, her nipples sensitive against the covers. \"You didn't wait. You were touching me and I woke up,\" she accused, something hard against her leg under the covers.\n\n\"I missed you.\" He held something up.\n\nShe focused on it. Her maiden collar. She made a disgusted face. \"I don't want that,\" she said. \"Why do you still have that?\"\n\n\"I thought maybe you would want it,\" Mihel said.\n\n\"That has your name on it?\" she demanded. \"You didn't get rid of it? You brought it back to me first?\"\n\n\"Yes,\" he said warily.\n\n\"Let me up.\"\n\nShe fought herself out of the covers. She leaned forward to rise, Mihel tugging her back every time, just enough to shift her balance so she couldn't quite get there. \"Now, Mihel,\" she said. She found herself standing beside the bed.\n\nMihel sat up, also naked. She drew herself up.\n\nHe sighed, gesturing at her. \"Don't get upset, little incora--\"\n\n\"You let me stab you,\" she said. \"You let me give your true name to sorcerers! Now you bring this collar to me, letting it be in the world where anybody could find it and make you a prisoner instead of throwing it into the sea or burying it in some deep hole--\"\n\n\"That's not necessary. I can just break it,\" he said.\n\nShe made a noise of frustration. \"Break it, Mihel!\" she cried.\n\nMihel took it in his hands, breaking it easily. \"See, it's done,\" he said, so reasonable. \"Come back to bed, beautiful incora.'\n\n\"No,\" she said, upset. \"I'm all the time trying to kill you, making you get lost in the spirit world--\"\n\nHe appeared in front of her, his hands reaching.\n\nShe batted them away, backing up. \"No! Don't touch me. I'm a menace to you.\"\n\nHe laughed and got hold of her. She shrieked, turning around, his hard and large sex bumping against her butt as she struggled, Mihel huge behind her, looming. \"Let me go, Mihel,\" she grunted and panted, her hair everywhere, pushing on his arms. \"No!\"\n\nHe laughed again, moving and slapping her butt, his large hand, stinging. She shrieked again, Mihel reaching around to pinch her nipple, and then the other.\n\n\"You don't do that to me,\" she raged, feeling the stabs of pleasure. \"Let me go, you big ifrit.\"\n\nHis hand came across her mouth, Nu\u00eb shrieking behind it as he dragged her effortlessly to the bed and threw her on her belly, Nu\u00eb trying to come up.\n\nHe climbed onto the bed over her and straddled her, collapsing her, his other hand on her upper back, pressing her into the bed. He released her mouth, Nu\u00eb yelling again. His hand went to her hips, lifting them, his knee between her legs, spreading them. Her ass was jutting obscenely into the air, her top half pinned, her head to the side.",
        "He began smacking her bottom, hard smacks, Nu\u00eb struggling, so slippery between her legs now. \"No, Mihel! That hurts, don't. Don't do that anymore...,\" she said, going on, her butt hot and aching and stinging.\n\nHer begging was cut off abruptly as the smacks stopped and his hand came back, touching between her legs. She grunted lightly, moving her hips, sensitive. His hand came across her mouth again and she felt him at her entrance. She began to struggle again, bucking and jutting and jerking as he entered her like he did, slow and relentless and so big, filling her. She cried out with pleasure behind his hand.\n\nHe began thrusting, the angle just what she wanted. She went still to feel it. His hand released her mouth, Nu\u00eb not noticing as he came up on his arms, planted on either side of her, and began thrusting deep.\n\n\"Yes, Mihel,\" she breathed, her butt still in the air, her back arched, holding on to the covers. \"More, don't stop.\"\n\nShe wasn't aware that she was still talking as he continued thrusting, his hands taking her hips and pulling her to himself, his thrusts going on until she thought she would go mad with need.\n\nHe began grunting with every thrust. His hand came around and under her where she was spread open, his fingers covered in her slick, small pinches and slaps between her legs, pain and such pleasure.\n\nShe cried out helplessly, unable to move as he drove into her, the tugs so good, her sex clutching, spasms around him. He reached for her in that other world.\n\nImages came to her mind, violent, all of them making her so needy. She wasn't even sure if they were Mihel's thoughts or her own. She wanted all of it. Her pleasure was cresting, body-pleasure and the lust for each other in their spirits. When it came, it was too much for her, his cries of pleasure as helpless.\n\n#\n\nMihel dropped the flap to his pack, fastening the strap. Vassi stood in front of his residence as the stable hand brought their horses. They had given Vassi eight thousand dirnai. Vassi had the balance of what they had left for Nu\u00eb's care if they didn't come back in a bag in his hand, waiting to give it to them.\n\nLuta had spent the day with Vassi, going around the market and telling him which people told him the truth, which lies, and Vassi was so pleased that he kept laughing to himself for no reason.\n\nNu\u00eb bent and brought something from her bags, which were gathered and ready to go on the pack horse. Mihel craned his neck to see. It was an exquisite Sidean tapestry with horses and birds.\n\nTo Mihel's surprise, she walked and put it into Vassi's arms, who also looked surprised and then very pleased, taking it. Then she threw her arms around him and Vassi laughed, the tapestry crushed between them, engulfing her whole frame in an embrace and lifting her, setting her down again.\n\nLuta had stopped to watch, looking on with the same incredulous expression on his face that Mihel felt on his own.\n\n\"Thank you, Vassi,\" Nu\u00eb said when she emerged. \"Thank you for defending me and protecting me. Thank you for making me feel welcome and safe. Thank you for making me laugh. Thank you for helping me to wait without despairing. Thank you for offering me a home when I didn't have one.\"\n\nVassi was beaming. \"I get to see you dance. We will miss you here, your singing voice, you are so light. You will come and see me if you ever travel this way.\"\n\n\"I will come here again to see you,\" Nu\u00eb promised.\n\nMihel made a face, Luta looking at him, smug. Mihel looked away, releasing his breath. When Nu\u00eb stepped back, Mihel walked up to Vassi, who made to hand him the ten thousand dirnai, his eyes a little wary. Mihel waved his hand. \"You keep the dirnai, Vassi.\"\n\n\"The ten thousand dirnai, Ciel?\" Vassi said, looking even more wary. \"You're giving it to me? For what?\"\n\n\"Nu\u00eb likes you very much. She doesn't like those who aren't deserving. You were good to her. I was wrong. Take it, with my thanks.\"\n\nVassi's whole face broke into a huge grin and he laughed a booming laugh, smacking Mihel on the shoulder as he pocketed the money. \"We are friends at last, you great big threat!\" he cried. \"No man should have such luck as to call the gold beauty his wife. You maybe go kill some of Palite tribe, those Sidean cocks. She almost makes me want to marry again, but not really.\"\n\nMihel heard Nu\u00eb laugh behind him.\n\nThe huge southern Misht\u00eb exited the residence. The warrior marched straight up to Nu\u00eb, towering over her, and offered her a knife. Nu\u00eb took it slowly, Mihel craning a little to see, Luta coming to his side and doing the same.\n\n\"Thank you, Bello,\" Nu\u00eb said, looking up at him, smiling like sunlight, her eyes shining.\n\nThe huge Misht\u00eb nodded once. \"Fierce woman,\" the man said in the language of the Sideans. \"Good wife.\"\n\nBello turned and met Mihel's eyes for a long moment and went back in. Vassi raised his arms in the doorway as Nu\u00eb mounted her horse. \"Don't be strangers to me,\" he cried.\n\nNu\u00eb turned and waved until they were through the tunnel and she couldn't see him anymore. Then she waved at the guards on the walls, who waved back.\n\n\"Goodbye, pretty Nu\u00eb!\" one of them called down, nothing she would understand.\n\nLuta leaned in. \"She doesn't change, brother. Everywhere she goes.\"\n\n\"I know,\" Mihel said as quietly.\n\n\"I can believe she got a Misht\u00eb knife,\" Luta said.\n\n\"I know,\" Mihel said.\n\n\"Do you remember when that Kole tribesman gave Cao a jewel the size of my eyeball?\"\n\n\"Yes,\" Mihel said.\n\nNu\u00eb came trotting up on her horse, her cheeks flushed, looking pleased.\n\nMihel turned to her. \"What's this about Palite tribe?\"\n\n#\n\nNu\u00eb looked back, glaring at Luta. She wanted to stab him.\n\n\"I already told you about the prairie grasses, Mihel,\" Luta went on happily, \"but there was the one when she was in the saddle--\"\n\n\"Can't you stop him!\" Nu\u00eb cried to Mihel. \"Do you have no control over him?\"\n\n\"Violence,\" Mihel answered, shrugging. \"But I have to catch him first.\"\n\n\"Did I forget anything, Nu\u00eb?\" Luta said.\n\n\"You forgot about the part where you told me Mihel was having sex with other women,\" Nu\u00eb said fiercely.\n\n\"I did not say that,\" Luta said.\n\n\"I'm not lying, am I?\"\n\n\"I didn't say that to her, brother,\" Luta said to Mihel, who had turned to look at him, Mihel's eyes narrowing. \"We were just trying to figure out what was happening to her and I suggested the possibility that you were in the sorcerer's body fucking other women. I told her there was a difference. I was very clear. And she knows you were having sex with her, because I had to watch while she was pleasured by you over and over.\"\n\nNu\u00eb's face was blazing with heat. \"At least mine was not brought back to the fire where you were forced to watch from the edge of it,\" she accused.\n\n\"What?\" Mihel said, turning to Luta.\n\nLuta scoffed. \"Like I forced her to watch. She's a pervert. She wouldn't have been safe too far away.\" Mihel was still looking at him. Luta sat forward on his horse, his face grim, his finger coming up, waggling at his brother. \"No. No, you listen to me, Mihel. I was a good brother. It was a long time on the road. Your incora is just as beautiful this time as the others, very sexual. And I told you what would happen, day or night with her pleasure, with those...and her--Look at her,\" he said, gesturing at her. \"It was necessary.\"\n\nMihel thought about that and broke his gaze, nodded a little to himself, seeming to find this reasonable.\n\nNu\u00eb stared at Mihel and then at Luta. \"You told me not to worry,\" she said to Luta. \"You told me that you wouldn't want to feel your brother's spirit with your pl--to feel that,\" she amended.\n\nLuta scoffed again. \"It's not my fault you can't hear lies. I don't join spirits with a woman unless she's my incora. I don't have an incora. I don't think I want one ever. Look what you've done to my brother.\"\n\nMihel seemed to find this even more reasonable, nodding to himself slightly again, Nu\u00eb staring at him, her mouth open. Mihel shrugged at her a little.\n\n\"You're right,\" Nu\u00eb said, turning to Luta. \"And Mihel should be grateful. Traveling with you was very instructive, Luta. Thanks to you, I know exactly what to do with my mouth.\"\n\n\"I'm going to kill you,\" Mihel said, Luta disappearing off the back of the horse, Mihel disappearing, both the horses walking on.\n\nNu\u00eb craned her neck, the brothers disappearing and reappearing ahead. She sighed and got off her horse, capturing the leads of the other two, waiting.\n\nMihel returned, breathing hard. He approached her, grabbing the hair on the back of her head, pulling until she was looking up, getting over her, his mouth slowly smiling. She was caught, unable to move, his eyes dropping to her breasts. He reached and cupped one over her shirt, squeezing her nipple.\n\n\"Did you kill him?\" she said, not moving.\n\n\"I have to catch him first,\" Mihel said without looking up, moving to her other nipple. \"He knows this, but if I wait, he'll become reckless. He can't help himself. He never could. Then I'll kill him.\"\n\n\"You're lying. You're not going to kill him.\"\n\n\"I can hurt him, though,\" Mihel breathed. His eyes flashed up, looking into hers. \"So, this instruction you received.\"\n\n#\n\n\"Luta,\" Mihel said low, putting his foot on his brother's shoulder and shoving.\n\nLuta barely avoided going facedown into the dirt. He woke with a start, recovering. \"Don't, Mihel.\"\n\n\"Shut up, stupid. Don't be loud. Come here.\"\n\n\"Where, brother?\" Luta said, looking around the camp.\n\n\"Don't make me hurt you right now,\" Mihel said quietly, leaning in, his lip curling.\n\nLuta made a face and sat up, Mihel immediately turning to go back to his bed across the fire. He gestured to his brother. He motioned to Nu\u00eb, lifting her blanket.\n\n\"I don't want to have sex with her,\" Luta said, refusing.\n\n\"No, Luta,\" Mihel said, impatient, taking four steps and grabbing his brother's shirt, hauling him up and dragging him to Nu\u00eb. She was asleep still. Mihel released his brother and squatted, lifting the blanket again, lifting her shirt very slowly, pulling her pants down a little.\n\nLuta looked at her and his brows went up. He squatted and looked closer.\n\n\"You see it?\" Mihel whispered. \"Is it what I think it is? I swear that I felt it, Luta. I swear I felt her spirit arrive.\"\n\nLuta reached out, wonder in his face, touching the glowing spot showing through the skin of Nu\u00eb's belly. They both shifted into the spirit world, both of them seeing the tiny, steadily burning blue light. Luta's light went out to it, gentle, caressing, the light pulsing briefly. Nu\u00eb's light was wrapped around it as surely as her body was.\n\n\"The little one is so beautiful,\" Luta breathed.\n\n\"Look at her, so bright like her mother,\" Mihel agreed. \"There hasn't been a female ifrit born in nine hundred years.\"\n\n\"Maybe that's why it was so difficult,\" Luta said, nodding. \"That was why it took so long. The little one was waiting for the right time.\"\n\n\"That's what I was thinking, too,\" Mihel said, both of them falling silent, gazing again, enrapt.\n\n\"Can you read her true name yet?\" Luta said.\n\nMihel nodded slowly, smiling. \"She is Cassia.\"\n\n\"Welcome, Cassia,\" Luta said softly, delighted.\n\nBoth of them shifted back into the world at the same moment. They gazed some more, both with small smiles. Nu\u00eb woke. Her eyes shifted down to Luta's hand on her belly, to Luta's face, his eyes on her belly, then to Mihel's hand holding open the blanket, his eyes also on her belly. She looked down at her stomach and back at them. They didn't move.\n\nShe scrambled away, coming up on her knees and then standing up, pulling her shirt down. Neither of them moved, looking up at her. She backed away, stopping. \"What are you doing, you perverts?\" she said. \"Did you eat bad food? Are you drunk?\"\n\nMihel stood up slowly, smiling wider. Her eyes shifted. Luta was also smiling, also looking at her.\n\nHer eyes shifted between them. \"Is this a bad dream?\" she said to herself.\n\nThey both shook their heads, still smiling.\n\n\"Stop doing that!\" she cried.\n\nEnd\n\nHey, everyone. Whenever I post on this site, I learn something. This time around definitely taught me that I should communicate better, and from now on I promise not to surprise you. I can be a little slow with these things.\n\nThanks for checking out the story. I know it was a little different. Sometimes you see something and you go with it. I liked how, because of the framework, I was able to extend the non-con scenes. Writing is a learning curve that just keeps going.\n\nI always enjoy hanging out with you, regardless. I'll be back with something else before too long. Until next time.\n\n-H"
    ],
    "authorname": "semiosis50",
    "tags": [
        "non-con",
        "djinn"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/nue-and-the-djinn-ch-08-end"
}