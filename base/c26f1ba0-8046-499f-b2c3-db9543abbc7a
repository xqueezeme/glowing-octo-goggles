{
    "title": "Surefoot 18: Inseparable",
    "pages": [
        "USS Surefoot-A, Deck 1, Captain's/Counselor's Quarters, Stardate 45398.09 - 89 minutes until Ensign Sasha Hrelle's death: \n\nCaptain Esek Hrelle stared at his reflection much longer than necessary. Counting the grey furs. Counting the wrinkles barely hidden beneath them. Tugging at the loose skin under his muzzle. Noting the slower reaction of his tipped ears to being touched. Seeing the inevitable decay and decrepitude- \n\n\"Ahem.\" \n\nHe turned, seeing his wife standing in the bathroom doorway. \"Do you want to use the mirror?\" \n\nKami folded her arms over her chest, which was growing, along with her belly, thanks to the cub she was carrying. \"I want to know why you're getting so maudlin. I thought we settled your fears of growing old.\" \n\nHe returned to his reflection. \"I'm not afraid. I'm just... noting the passage of time, that's all.\" \n\nShe rolled her eyes. \"It's just a birthday. It's not even yours.\" \n\n\"I know, but... she's twenty! That's significant!\" \n\n\"Only if numbers matter to you. Humanoids love milestones, round figures, but they rarely mark actual, significant changes in history, either personal or galactic.\" \n\n\"She's all grown up.\" His voice became melancholy. \"One more year onboard, and she'll graduate, and move on with her life. And I'll never know when I'll see her again.\" \n\n\"Yes. Cubs have a tendency to do that.\" \n\nHe grunted, moving out past her. \"Glad to see you're so sympathetic-\" \n\nShe grabbed his elbow to stop him. \"I felt the same way when Mirow left the clan home to become a rescue pilot on Cait. And I'll feel the same way when Sasha goes off to start her Starfleet career, even though she's just my daughter by marriage... because I love her so much.\" She patted her Bump. \"And we'll both be the same when Misha here is all grown up and goes on to do amazing things of his own.\" \n\n\"Are you trying to bring me down even more?\" \n\n\"I'm trying to tell you to save the mood for our quarters; Sasha and her friends don't want to see a couple of old cats getting emotional and depressing.\" She drew in and rubbed the side of her muzzle against his. \"It's her day. And it's going to be special. And I think she'll love your present.\" \n\nHe smiled, brightening. \"Really?\" He puffed up some. \"And why not? How many fathers can offer something like what I can?\" \n\nShe smiled back. \"That's my man.\" \n\n* \n\nDeck 2, Crew Lounge, Stardate 45398.24 - 79 minutes until Ensign Sasha Hrelle's death: \n\n\"Happy Birthday, Runt of the Litter!\" Hrelle declared, unnecessarily loudly as he approached the group, holding out the small black leather box in his brown-furred Caitian hand. \n\nThe young cadet sat at the table in the lounge, surrounded by her fellow members of Alpha Squad, her boyfriend Giles Arrington, and other cadets and crewmen who had brought their own gifts and congratulations, despite her attempts to downplay the occasion. She rose enough from her seat to reach out and accept the box. \"Thanks, Dad, you shouldn't have, really.\" \n\nBeside her, Neraxis Nemm's bald blue Bolian head flushed purple with amusement. \"Maybe you should see what he got you before you say that, O Fearless Leader? It might be crap.\" At Hrelle's reaction she added, \"Just kidding, Sir. I'm sure it's absolutely marvellous.\" \n\n\"Kiss my furry ass, Cadet,\" he growled - but winked at the girl. \n\nSasha grunted at the banter between them, but then her eyes widened as she opened the box, and she looked up at her stepfather. \"Ensign's pips? Are these for when I graduate from the Academy next year?\" \n\nHrelle was helping his wife Kami sit down. \"They're for now: effective immediately, you're an Ensign, earning service time, credits and pay on that grade, all of which will count in any future career progression once you officially graduate and stop being an annoying little snotnose.\" \n\nSasha's jaw dropped as she glanced around her friends, before eagerly removing the pips from the box and started fitting them onto the collar of her red and black uniform, removing her Cadet Squad Leader insignia. \"This is awesome! Thanks, Dad!\" Then she sobered. \"But what about the other Squad Leaders? It's not fair that they don't get the same.\" \n\nOn Hrelle's other side, First Officer Commander T'Varik offered typical Vulcan composure. \"What the Captain has failed to mention is that this will apply to all the Squad Leaders, in recognition of the work you are doing onboard, in addition to your final year studies - and is of course dependent on your continued maintenance of the expected standards.\" \n\nGiles grinned. \"So I have a little black box waiting for me, too?\" \n\n\"Yes, Mr Arrington. You, and the others.\" \n\nSasha grunted again, staring teasingly at her father, arms folded across her ample chest. \"Some present, you cheap putz.\" In an imitation of his voice, she added, \"'Here, have something everyone else is getting.'\" \n\nKami smirked as she looked up at her husband. \"You should have claimed part ownership of the present I gave her.\" \n\nNow Sasha blushed. \"No, he shouldn't!\" \n\n\"What did Kami get you?\" Giles whispered. \n\nShe blushed even further. \"Shut up. I'll show you later.\" \n\n\"Before you nail me to the Wheel like the First Martyr,\" Hrelle took over. \"Allow me to present you with your real present: an Away Mission... and a command.\" As he enjoyed her reaction, he looked to T'Varik. \"Care to elaborate, Commander?\" \n\nT'Varik folded her hands behind her back. \"We are currently on approach to a Class-J transport, the SS Eight of Swords. It was en route to Bajor with a shipment of weather modification satellites as part of their work towards planetary restoration following the Cardassian Occupation, when the vessel suffered a main drive failure, and the crew abandoned ship in a shuttle and arrived at Deep Space Nine last week. Alpha Squad has been assigned to board the Eight of Swords, assess its condition, make appropriate repairs, and pilot it to DS9. With you in command, of course.\" \n\nSasha's eyes brightened like novae. \"A command? An actual command?\" \n\n\"Assuming you can get the ship operational,\" Hrelle pointed out. \"You'll take the ship to DS9 and await our arrival, after we make our tender run to the border ships near the Arkady Cluster.\" \n\nShe rushed around the table, embracing Hrelle. \"Thank you!\" Then she puffed up, beaming. \"Captain Sasha Hrelle...\" \n\n\"Ensign,\" T'Varik corrected, deadpan. \"Try to treat this opportunity as a responsibility, not an ego trip.\" \n\n\"Of course, Commander, of course. I can be mature about this.\" Then she asked, \"Does the ship have weapons?\" \n\nThe Vulcan raised an eyebrow. Sasha grinned. \n\nT'Varik looked to Hrelle - who grinned in identical fashion. \n\n* \n\nUSS Surefoot-A, Bridge, Stardate 45398.48 - 25 minutes until Ensign Sasha Hrelle's death: \n\nIt was an old ship, and an old design, dating back to before Kirk's day: tadpole-shaped, with bulky, down-swept nacelles and multiple ports to accommodate any type of station or ship docking facilities. Frankly, Hrelle was amazed that such models were still allowed to fly. \n\nStill, they had run the usual security scans over it: it was intact, uninhabited, with no evidence of damage or attack, nothing suspicious, and as initially reported its main drive was deactivated, but the batteries were still almost on full charge. \n\nHrelle sat and sipped at his coffee, his tail swishing happily though the hole in the back of his chair as he listened proudly to his daughter over the speaker. \"Away Team onboard, Ensign Sasha Hrelle reporting.\" \n\nHe grinned to himself; she had announced her rank three times already. \"Proceed, Ensign.\" \n\n\"Sir, Mr Ostrow and Mr Kitirik are in Engineering, running diagnostics; Jonas believes the problem wasn't the main drive, but the dilithium regenerator panel, a common fault with Class-J vessels, according to him. He thinks he can get the Surefoot's fabricators to replicate a replacement.\" \n\n\"Hmph. The captain of the Eight of Swords is gonna be kicking himself when he hears that.\" He smiled again. \"Or should I say, the former captain?\" \n\nHe could almost hear her smile as she proceeded. \"Mr Rrori and Ms Eydiir are on the Bridge, proceeding with pre-flight checks and uploading the flight recorder data to the Surefoot; you should be receiving it already.\" \n\nHrelle spun in his chair and looked behind him at the Second Officer, Lieutenant Neheru, a Kelpien who looked uncannily like a gangly scarecrow with a shrunken peach-coloured face. He reported, \"Confirming receipt, Captain Sasha.\" At Hrelle's expression, Neheru grinned shamelessly. \n\n\"And Ms Nemm and I are proceeding to the Cargo Bay to check on the satellites. We're getting some tricorder readings from down there we weren't expecting.\" \n\n\"Acknowledged, Ensign. Surefoot out.\" A sound from the Tactical station drew his attention as he swivelled his chair around. \"Lieutenant?\" \n\nHis Chief of Security's tail was swishing from the hole in the back of her own chair, though Lt C'Rash's reaction seemed more from distraction than pleasure. The young black-furred female's brow was furrowed as she studied something on her panels, and she was growling to herself. \n\n\"Lieutenant?\" he repeated. \"Something wrong?\" \n\n\"No. Yes. Yes, Sir, possibly. There are discrepancies with the End User certificates the Eight of Swords' captain filed with Starfleet Command and the Merchantfleet Authority. And there are mismatches with their logged flight plans and the flight recorder data we're receiving now.\" \n\n\"What sort of mismatches?\" \n\n\"For one thing, the flight plans indicated they should have been in the Sierra Sector a month ago, but the recorder has them in the Maxia Sector, in Nekrosi territory.\" \n\nHrelle grunted, appreciating how seriously the young officer - and his niece by marriage to Kami - was taking her job. \"Civilians aren't always the most meticulous record keepers-\" \n\n\"It's more than that, Sir. I contacted the Bajoran Interior Ministry to update them on the status of the weather modification satellites they're expecting.\" \n\n\"And?\" \n\n\"And... they have no record of expecting any.\" \n\nOver the speaker, Sasha's voice returned. \"Ensign Hrelle reporting: we're entering the Cargo Bay. It's a bit of a mess down here.\" \n\nBehind Hrelle, Neheru spoke up, an alert to his face. \"Captain, maybe Alpha Squad should stop what they're doing until we reassess the situation-\" \n\n\"Captain!\" C'Rash barked suddenly, anxiously. \"There are arrest warrants out for the Eight of Swords captain and crew from the security at DS9, for suspected terrorist involvement-\" \n\nHrelle threw aside his coffee and bolted to his feet. \"Sasha! Don't do anything-\" \n\nHer scream filled the Bridge. \n\n\"SASHA!\" He looked to Neheru. \"Beam them back! Now!\" \n\nNeheru's fingers danced over his control panel. \"I have a lock on the others, but there's interference around Sasha I can't identify-\" \n\nHrelle's breath caught in his throat. \"Sasha, report! Someone report, now!\" \n\nHe heard shouts from his stepdaughter, and then Neraxis spoke up anxiously. \"Captain, Sasha touched one of the satellites, it's- it's trapped her- she's been injured-\" \n\n\"Trapped? Injured? How? Can you free her?\" \n\n\"I'll try, Sir.\" After a few agonised seconds, filled with further cries and curses, Alpha Squad's Security Specialist reported, \"Sir, some sort of wires from the satellite have pierced her arm, snaring her! Trying to free her is just making it worse-\" \n\n\"Don't do anything further until we get there!\" To Neheru he ordered, \"Get T'Varik up here and update her, and send Dr Ling to Transporter Room 1!\" He motioned for C'Rash to follow him off the Bridge, feeling like his heart was going to burst out of his furred chest. \n\nHis baby. His baby was hurt... \n\n* \n\nSS Eight of Swords, Stardate 45398.51 - 22 minutes until Ensign Sasha Hrelle's death: \n\nThree figures beamed into a corridor outside of the transport's Cargo Bay and strode inside, finding the rest of Alpha Squad already assembled there, arguing until they acknowledged the new arrivals. Hrelle immediately looked past them to an open area, where a black, disc-shaped object with roundel panels sat on the floor - and Sasha knelt beside it, her right hand and forearm flat against the shiny surface, her face and scent suffused in pain. \"Sasha? Are you okay?\" \n\n\"No, Godammit!\" she snapped. \"I'm impaled on this thing! Now get me off it!\" \n\n\"Stay calm!\" Hrelle looked to Jonas Ostrow, the Deputy Squad Leader. \"Report.\" \n\nThe boy's face looked pale even under his mop of silver-grey hair. \"Sir, when Sasha touched the surface of that... device... monomolecular tritanium filaments shot out into her arm.\" \n\n\"Filaments?\" \n\nNeraxis nodded. \"Yes, Sir. She was just resting her hand on it. I nearly did the same, and almost got caught, too.\" \n\n\"What is it, some sort of anti-tampering mechanism, or-\" \n\n\"I don't think so, Sir,\" Jonas informed him. \"I think it's something more akin to a clamping device. The filaments act like the roots of a plant, extending into a ship's hull, anchoring it more effectively and efficiently than a magnetic plate or tractor beam. But I don't know why weather modification satellites would need something like that-\" \n\n\"They wouldn't. Doctor, Lieutenant: follow me. The rest of you stay here, touch nothing.\" Cautiously he approached, silent, as if his voice was swallowed up by the soft whine of the Security and Medical tricorders his offers carried and used, until he squatted beside Sasha. \"Hey, Runt of the Litter.\" \n\n\"Hey, Fat Cat.\" She looked up, adjusting her legs slightly as if cramped, her face red and tearful with pain. \"Some present you got me.\" \n\n\"Sorry; next time, I'll get you that pony you always wanted.\" He frowned at the sight of the almost-invisible wires extending up like hairs from the surface of the device and into her hand and forearm, piercing her skin and the sleeve of her uniform, looking as if she had been threaded onto the object by an old-fashioned sewing machine. Dots of blood appeared here and there, obviously from when she had initially struggled to free herself. \n\n\"Nobody else touch the surface,\" C'Rash warned, moving around the circumference of the object. \"The entire dorsal side has the same anchoring mechanism.\" \n\nSasha nodded. \"Suppose it could be worse. Can you imagine if I'd sat on it? Now I know what a fish on a hook feels like.\" \n\nLing knelt down, opened her medikit and withdrew a phaser scalpel. \"Well, Ensign, let's see if we can get you released back into the sea...\" She brought the tool to the space between the girl's arm and the object. \n\nUntil C'Rash snapped, \"NO! DO NOTHING!\" \n\nHrelle glanced up, his hackles rising at the look of terror in the young Caitian's expression. \"What is it?\" \n\nC'Rash swallowed, switching off her tricorder, her voice low. \"No signals, no scanners, no attempts to free her! This is not a satellite. It's a Nekrosi space mine. A mine with a subspace isolytic warhead.\" She looked around. \"They all are.\" \n\n\"What?\" Sasha squeaked. \"Bullshit!\" \n\n\"I wish it was. It explains why the crew just abandoned ship and fled rather than send a distress signal.\" She was staring at the object with more than a little fear. \"What's worse... this mine thinks it's clamped onto a target, and it's armed. If we try to cut you loose or beam you away...\" \n\nHrelle looked around as well; there were dozens more here. \n\nHe vaguely remembered an intelligence report month regarding the fall of the Nekrosi government, and consequent sales of much of their armaments and technology to criminals and non-aligned powers, but never expected to see anything from it this far across the Quadrant. \n\nHe bared his teeth at C'Rash. \"And why didn't you detect that these were mines when we first arrived? What were you doing, licking yourself?\" \n\nShe was visibly stung by his rebuke - not that he cared at that point - but recovered to reply, \"The mines are sized and shaped very similarly to the satellites in question, Captain, Sir, probably the main reason they chose to label them as such, and the casings around the isolytic warheads shield them from everything but close-range scans. Maybe if you'd let me run a security sweep of the ship before giving it to my tailless cousin as an indulgent birthday present-\" \n\n\"Are you blaming me for your error, Lieutenant-\" \n\nThen they both stopped as Sasha's breathing quickened, until Ling pressed a hypospray against the girl's neck, and she discernibly calmed down again. The doctor nodded to her. \"A mild sedative; keep as still as you can.\" Then Ling looked up at the Caitians, her expression harsh. \"Still, and free of unnecessary stress.\" \n\nHrelle felt himself blush under his fur, and glanced at C'Rash. \"Sorry. Can you disarm it?\" \n\n\"I can try.\" She slapped her combadge. \"T'Varik, you there?\" \n\n\"Of course, Lieutenant.\" \n\n\"Sasha is trapped against an armed Nekrosi mine, one of dozens onboard. I'm going to try and disarm the warhead, but you need to acknowledge that if it goes off, it'll set the others off as well, and the resulting explosion will rip into local subspace and make this area a no-warp zone.\" \n\n\"Acknowledged.\" \n\nC'Rash looked back at Hrelle as she continued. \"I'm also going to recommend withdrawing the Surefoot a minimum of ten kilometres; any closer, and a subspace explosion would rip through you even with full shields.\" \n\nHrelle nodded. \"Do it, Commander.\" \n\n\"Aye, Sir.\" \n\n\"Also, beam me over an EOD Kit,\" C'Rash ordered, \"Along with a communications headband tailored for my beautiful Caitian skull. I'll want it linked to the Holodeck; there's a good Demolitions Expert program in the library. I'll want it watching and assisting.\" \n\n\"Understood, Lieutenant. I will also have the Engineering and Science cadets and crew on hand there to offer any advice.\" \n\n\"Good, I could use it. Beam the equipment into the corridor outside this Cargo Bay, avoid any unnecessary energy signatures in the vicinity of the mines.\" \n\n\"Aye, Lieutenant. Do you require anything further?\" \n\nC'Rash smirked. \"Only when this is done: a good long bath, and someone to groom my fur. Think you can handle that as well, Commander?\" \n\n\"I will assume that you are being facetious to alleviate Ensign Hrelle's anxiety, and choose to not comment further. T'Varik out.\" \n\n\"Doctor, you and the other cadets go,\" Hrelle ordered, patting Sasha's shoulder as he rose. \"I'll be right back.\" \n\n\"Okay,\" she quipped. \"I'll just stay here.\" \n\nHe escorted Ling back to the rest of Alpha Squad. \"You can't do anything more here, go back to the ship.\" \n\n\"Sir,\" Jonas protested. \"I can assist Lt C'Rash, I've studied Nekrosi technology.\" \n\n\"And I've had EOD training as well,\" Neraxis pointed out. \n\n\"Sasha will need to have her vital signs monitored,\" Eydiir added. \n\nThe others spoke up as well, but Hrelle raised a hand for silence. \"Thank you, but no.\" \n\nAs he heard a transporter whine from outside the Cargo Bay, Ling drew in close to him, her voice low. \"Keep her from moving about as much as you can; right now, those filaments are doing nothing more than immobilising her arm, but if they extend into her chest, or worse, her head, they could interfere with her vital functions.\" \n\nHe nodded in acknowledgement - then frowned at the scent and sight of his wife entering, carrying the requested equipment. \"Great Mother...\" \n\n\"Thanks, that's quite a compliment.\" \n\n\"What are you doing here? You're pregnant!\" \n\n\"Yes, I suspected something like that when I stopped being able to see my nethers.\" She looked past him to Sasha. \"And how's she doing?\" \n\n\"How's she doing? Are you kidding me?\" To the others he snapped, \"Get back to the ship, now!\" To Kami, he added, \"You, too!\" \n\nBut the Counselor merely looked to them and said, \"Go on, I'll catch up.\" As they departed, she asked, \"Okay, let's try a simpler one: how are you doing, Esek?\" ",
        "\"Me?\" he muttered, \"Oh, I'm peachy. I sent my daughter over to this ship, let a machine violate her body and now she's on a countdown to her own death! And I'm responsible!\" \n\n\"Yes,\" she agreed softly, nodding. \"You did all that. You knew what would happen here, and you still sent her over. You utter bastard. You wanted her to suffer and die. I can't believe I share a bed with you-\" \n\n\"This is no time for sarcasm!\" \n\n\"There's always time for sarcasm. Just no time for self-pity. She doesn't need the father wrapped up in pathos and self-recrimination. She needs the father who can save her from this.\" \n\nThe words choked in his throat, and he felt tears well up in his eyes as the enormity of the situation struck him, and his voice was a fragile whisper. \"But I- I don't know if I can-\" \n\nShe brought a finger to his snout and silenced him. \"Yes, you do. And you will. You'll do whatever it takes to save her. I'll probably hate you for it, but that doesn't matter. Get both your tails home safely.\" \n\nHe nodded in assent, taking the equipment from her and rubbing the side of his muzzle against hers. \"Go.\" As he started back to Sasha and C'Rash, he slipped on his most confident expression and asked aloud, \"Hrelle to Surefoot: I don't want any more unnecessary people over here.\" \n\n\"Acknowledged, Sir.\" \n\nAs he set the equipment down beside C'Rash, the Caitian looked up. \"You're not necessary here either, Esek.\" \n\n\"Yeah, Dad,\" Sasha agreed, still breathing hard. \"You have a wife and child.\" \n\n\"Shut up.\" To C'Rash he added, \"You too, cub. Get to work.\" \n\nShe grunted, but complied, fitting the units of the headband over her right eye and into her right ear. \"Computer: access link to Holodeck, activate Interactive Program titled Major Smithereens.\" She shook her head. \"I'm gonna have words with whoever named that stroking program.\" \n\nHrelle squatted down beside Sasha. \"How you doing, cub?\" \n\n\"I have to pee; take my mind off it.\" \n\n\"Okay. How about I do my impression of a waterfall?\" \n\n\"Or maybe you can just talk about something?\" \n\n\"Sure. I just heard that your grandfather Mi'Tree is going back into the vivids, for a reboot of his Clawback series, and he's apparently trying to diet so he'll look good on the big screen. But apparently he's still sneaking shuris sticks whenever Bneea is looking the other way.\" \n\nSasha smirked. \"Sorry I won't be around for the premier.\" \n\nHe frowned, but continued. \"And Kami and I are breaking with tradition and revealing the Bump's name before he's born: Misha. It's a combination of Mirow and Sasha. What do you think?\" \n\nShe smiled wistfully. \"That's lovely. He's gonna be a wonderful cub, I'm sure. Make sure you tell him about me.\" \n\n\"Um... yeah. And I've heard rumours that they're going to get Jean-Luc Picard himself to give the speech at your graduation.\" \n\nShe blew a raspberry. \"He's a windbag. I'm glad I won't be around for that.\" \n\nHe set a hand on her shoulder. \"I'm sensing a pattern here. And it's a wrong one. We're going to get you out of this.\" \n\n\"You don't know that.\" \n\n\"I do,\" he lied. \n\nShe grunted at that. \"I still need to pee.\" \n\nHe shrugged. \"So pee; your cousin and I won't care, and our uniforms are very absorbent.\" \n\n\"I'm not peeing my pants. I'm twenty years old today. Twenty-year-olds don't pee their pants.\" She winced in pain, looking across at C'Rash. \"Anything to report, Cousin? I had some wonderful plans for this hand of mine tonight.\" \n\nC'Rash was twisted about on the floor in a position enviable to most humans - and to older Caitians with an understandable paunch, like Hrelle - but now sat up, her expression sober. \"The filament control mechanisms are buried deep in the machinery, past six detonators in the mine. I'd- I'd have to disarm all six before we can free her arm. It's going to take 18 minutes, minimum.\" \n\nSasha saw the expression. \"So what's the bad news?\" \n\n\"The mine's going to detonate in 15.\" \n\nThe Universe held its breath. \n\n\"You're wrong,\" he declared. \"I'll help you with the disarming-\" \n\n\"The space down here is very limited; your huge chunky hands can't fit down here alongside mine.\" \n\n\"Nanites - we can inject Nanites in to-\" \n\n\"It'd take too long to program them and inject them into the right places.\" \n\n\"And we can't just beam Sasha away before it detonates?\" \n\n\"It's a subspace isolytic charge, Esek! Once it senses the transporter beam, it'd detonate and rip through local subspace, and override and tear apart even the most secure transporter beam! She'd end up looking like a pile of dropped lasagne!\" \n\n\"Nice,\" Sasha muttered. \n\nHrelle swallowed. \"Then get back to work.\" \n\n\"What? Didn't you hear me? I can't-\" \n\n\"I said GET BACK TO WORK!\" He fought the shaking he felt rising inside him. No. No, his baby wasn't dying over here. His teeth gritted, he snarled, \"T'Varik! Are you still listening to all this?\" \n\nThere was a change in tone to the Vulcan's voice. \"Yes, Sir.\" \n\n\"And are the cadets listening as well?\" \n\n\"Yes, Sir, they-\" \n\n\"Listen up, all of you: you're supposed to be the Best and the Brightest. Prove it! One of your own needs you! Find a solution! NOW!\" \n\nAfter a moment, T'Varik replied quietly, \"Aye, Sir.\" \n\n\"Jeez, Dad,\" Sasha chided softly, \"You're acting like this is a matter of life and death.\" \n\nHe looked to her, forced himself to calm down again. Kami had been right, Sasha didn't need a desperate old man crying out for a solution. \n\n\"One detonator disarmed, moving to the second,\" C'Rash announced, breaking the silence. \"Detonation in 13 minutes.\" \n\n\"Captain,\" T'Varik spoke up. \"There is a possible solution, we've discussed it with Doctors Ling and Kline, and it appears feasible, but will require immediate action-\" \n\nSasha looked up, wiping sweat off her face again. \"Hey, Commander, what are we waiting for, whatever it is, let's do it!\" \n\n\"What do we have to do?\" Hrelle asked. \n\n\"Amputate Ensign Hrelle's arm.\" \n\nHe heard the breath catch in Sasha's throat, as he coughed, \"Excuse me?\" \n\n\"According to the latest readings, the filaments have not as yet extended to the shoulder; the arm can be removed above the location of the filaments without triggering the mine's defence systems. A biosynthetic limb can be prepared, of course.\" \n\n\"My arm,\" she whispered. \n\nHrelle stiffened, but quickly realised it made sense, as horrible as the idea was that she would have to undergo that in the first place. \"Send a doctor over, and hurry.\" \n\n\"Acknowledged, Sir.\" \n\nHe looked to Sasha. \"Sweetheart...\" \n\nShe was trembling, but asked, \"Can you get me some water from the Galley, Dad? It's just two sections fore-\" \n\n\"Yes. Yes, of course.\" He squeezed her shoulder, rose and raced out. \n\nHis baby- she would survive this- plenty of Starfleet personnel have had amazing careers with biosynthetic limbs. They were as good as the real ones, indistinguishable. And doctors on Cait have been performing minor miracles with cloning parts. \n\nShe would be fine. Fine. \n\nHe pulled a door off of the cabinet in the galley when it didn't open quickly enough for him. Luckily for the rest of the room he found a bottle of water and raced back - quickening even further when his ears picked up the distress between Sasha and C'Rash. \n\nBack in the Cargo Bay, he saw Sasha tugging at her arm, panicking, while C'Rash, her hands full on the other side of the mine, was almost shouting. \"Sasha, you have to stop that! You're making it spread further! Worse, you'll set off the mine!\" \n\nBut the girl wasn't listening, her face screwed up in terror. \"I HAVE TO GET OUT! I HAVE TO GET OUT!\" \n\nHe dropped the bottle and rushed up to her. She was tugging at her arm, twisting, panicking- \n\nUntil he wrapped himself around her, clamping his arm over hers, his muzzle against the side of her face, immobilising her. \n\nAnd then he began singing: \n\n\"A gentle breeze from Hushabye Mountain \n\nSoftly blows o'er Lullaby Bay. \n\nIt fills the sails of boats that are waiting \n\nWaiting to sail your worries away.\" \n\nHer struggles, her cries continued, but she was reacting to his warm, soothing, melodious tone. Distantly, he heard the transporter whine, and smelled the Klingon surgeon Doctor Kline appear and approach. But he focused on his lullaby, one that came to him from the depths of his memory, amazing himself with how many of the words he recalled. \n\n\"It isn't far to Hushabye Mountain \n\nAnd your boat waits down by the quay. \n\nThe winds of night so softly are sighing \n\nSoon they will fly your troubles to sea.\" \n\nThen Sasha was calming down, leaning against him for support, her breathing laboured but slowing down. \n\n\"So close your eyes on Hushabye Mountain. \n\nWave good-bye to cares of the day. \n\nAnd watch your boat from Hushabye Mountain \n\nSail far away from Lullaby Bay...\" \n\nThe Cargo Bay was silent. \n\nDr Kline ran the tricorder over Sasha, the Klingon frowning as he snapped the lid shut. \"I am sorry, Cadet, but your struggles have extended the filaments into your chest cavity; I cannot perform the amputation now.\" He raised his chin. \"But you will die with honour-\" \n\nHrelle turned his head to him with a murderous glare, teeth bared. \"Get back to the ship.\" \n\nKline drew back, visibly intimidated in a way he never felt before, before recovering quickly, nodding, rising and departing. Hrelle looked challengingly to C'Rash; the younger Caitian reported, \"I'm on the third detonator.\" \n\n\"How much time until-\" \n\n\"Ten minutes.\" \n\nHrelle nodded. \"Keep working.\" \n\nThe younger Caitian stared for a moment, before replying, \"Aye, Sir.\" \n\nAs she continued, Hrelle made a sound. \"It's okay, Sash.\" \n\nThe girl's breathing remained heavy, but she murmured, \"I'm sorry, Dad- I'm sorry, I just-\" \n\n\"It's okay, darling. Everything's going to be okay.\" Wanting to take her mind off her panic, he asked, \"Do you remember that song? The movie it was in?\" \n\nShe nodded slightly, wincing in pain at the effort. \"Chitty Chitty Bang Bang. I haven't thought about that in years.\" \n\nHe smiled. \"I remember when you first heard what it was about, and you went all Junior Engineer on your mother and me, and explained how a gas combustion vehicle of that era could not possibly be made amphibious or flightworthy. Half an hour into it, you shut up and wouldn't let anyone else talk. You hated the Child Catcher, though.\" \n\n\"He was frightening! The way he pranced about, and got those kids trapped in that wagon-\" She coughed, her body writhing until he tightened his hold on her until she recovered. \"I peed myself.\" \n\nHe nodded. \"I know. It doesn't matter.\" \n\n\"N-No- I suppose it won't, in, what? Nine minutes?\" \n\n\"Don't think about it-\" \n\nThe tears fell from her. \"I have to. Go back to the Surefoot. You have a family now-\" \n\n\"Yes, and you're part of it.\" \n\n\"You have Misha on the way!\" \n\n\"And you're his big sister. You are going to babysit him, and read him stories, and sneak him snacks even when he isn't allowed them, and watch Chitty Chitty Bang Bang with him. And that's just part of a whole life you have ahead of you.\" \n\nShe was crying again. \"I- I have to talk to Giles. To Kami. T'Varik. My friends. I have to- have to tell them what they mean to me-\" \n\nHe shook his head softly. \"You think they don't already know? You don't exactly hide your feelings. You get that from your mother.\" \n\n\"And you.\" \n\n\"Probably.\" \n\nShe coughed again, the effort to breathe getting harder as the filaments made contact with her lungs. \"Please go- There's no- no way out for me-\" \n\nHe hugged her tighter. \"Do you know how many times I told myself that? When I was in a seemingly hopeless situation in command, or when I was a slave? When I was sure I would die and never see you or your mother again? Never give up hope, Sasha. Please.\" \n\nShe was breathing hard now. \"N-No hope to give up anymore-\" \n\n\"Captain!\" T'Varik's voice broke the tension. \"We might have something!\" \n\nHrelle smiled. \"Told you...\" Louder now, he asked, \"What is it, Commander?\" \n\n\"Mr Ostrow has a possible solution.\" \n\nJonas' voice replaced the Vulcan's. \"Sir, I've been studying the data feed from Lt C'Rash's eyepiece. In addition to their anchoring properties, the mine's filaments act as sensors, reading Sasha's biosigns like she was the interior of a target vessel. But the detonation sequence depends on those readings remaining stable, or it thinks its target is already damaged or destroyed; radically altering or stopping those readings will reset the sequence, withdrawing the filaments and freeing Sasha!\" \n\n\"So what should we do?\" \n\nMore soberly, he explained, \"We've got remote control over the ship. We decompress the Cargo Bay and leave it a vacuum, and in about five minutes, the filaments should retract and the mine go into Standby.\" \n\n\"Decompress-\" Sasha paled. \"Jonas, I'll die in five minutes.\" \n\n\"As opposed to what will happen a few minutes later? You won't be the first person revived from space exposure, in fact I'm told it's an easier procedure than giving you a new limb!\" \n\n\"He's right, I've had it done myself more than once,\" Hrelle pointed out, saying more loudly, \"Jonas, if this works, I'll gonna hug the stuffing out of you!\" \n\n\"Um... thanks, Sir?\" \n\n\"Captain,\" T'Varik interrupted. \"We've accessed the controls for the Eight of Swords, and are prepared to initiate decompression. You and Lt C'Rash should return immediately.\" \n\nHe nodded to himself, but corrected, \"C'Rash is beaming back, but I'm staying with Sasha.\" \n\n\"What?\" The girl looked up at him. \"No! You can't stay! You'll die too!\" \n\n\"She's right,\" C'Rash agreed. \"You're acting like an idiot macho hero!\" \n\n\"And you're out of line, Lieutenant! T'Varik, beam her back when she's out in the corridor, I'm staying here, understood?\" \n\n\"...Acknowledged, Sir.\" \n\nC'Rash left her tools on the floor as she rose, looking outraged... and anxious. \"Aunt Kami's gonna kick your ass when you get back.\" \n\n\"I'm sure. Get going.\" \n\nShe cursed - but then looked to Sasha. \"You make it back safely, Cousin.\" \n\nShe rushed out; as Hrelle heard the transporter whine, T'Varik spoke up. \"Decompression will commence in thirty seconds, Sir; once the atmosphere is vented, we won't be able to communicate by audio, but we will monitor your status-\" \n\n\"Understood - get going!\" He leaned in close to Sasha and spoke softly but urgently. \"When the atmosphere is blown, release the air from your lungs. All of it. The instinct will be to hold your breath, but that will just increase the carbon dioxide in your blood, which will increase the feeling of panic, and run the risk of your lungs rupturing; that will just lengthen your recovery time. Then you'll pass out after about 15 seconds. Fortunately we'll be recovered and restored before we balloon up and turn purple.\" \n\nShe was breathing faster now. \"I'm- I'm scared-\" \n\nHe stroked her hair. \"I know. That's why I'm still here. Whatever you go through, I'll go through with you. You're my daughter. I love you.\" \n\n\"I love you too, Dad.\" \n\nThe docking bay doors all opened as one; unlike the Surefoot, there were no atmospheric force fields here, so the air inside the ship rushed out with a deafening roar, taking anything not heavy or secured into the void. \n\nHrelle wrapped himself around Sasha like a blanket, feeling her shudder, hearing the last vestige of a cry escape her before the air fully evacuated and left them in a vacuum. She struggled reflexively, but he held her tighter, not wanting to disturb the filaments inside her and delay their eventual release, his greater size and experience allowing him to stay conscious longer. \n\nThen his cub stopped struggling. \n\nAnd still he held on, singing to her in his head: \"So close your eyes on Hushabye Mountain / Wave good-bye to cares of the day / And watch your boat from Hushabye Mountain /Sail far away from Lullaby Bay...\" \n\nHe resisted his own advice, holding onto the air in his lungs in order to maintain consciousness, in order to watch. At the twilight zone of his awareness, he saw Sasha's arm pull away from the mine, the wires withdrawing back into the black surface. He drew her back, both of them falling to the floor of the Cargo Bay, protecting Sasha's head. As he passed out, he swore to come back and haunt T'Varik like bad things if she didn't save th- \n\n* \n\nHis head throbbed like a warp core on overload; always a good sign of life. \n\nHis eyes still closed, he smelled and listened to the things around him: the biobed monitors, the pungent antiseptic odour of dermal patches and the soft hum of the Sickbay environmental recycler in the upper right corner of the room and- \n\nSasha's scent, nearby, coupled with her soft breathing. He smiled to himself. \n\n\"Oh, so you're awake?\" came a familiar, welcome voice. \n\nHe opened his eyes, looking up at Kami. \"Hey there, Little Mother. I take it-\" \n\nHer open hand swung out and struck the left side of his snout, sending a ringing through his skull, and a pain that lingered long afterwards. He looked to her; she ignored the reactions of Commander T'Varik, the doctors and nurses in the room as she declared, \"THAT'S FOR SCARING YOUR SON AND ME HALF TO DEATH!\" \n\nHe nodded, moving his jaw about as he tasted blood. \"Fair enough.\" \n\nShe moved to the adjacent bed; he looked to his left, to see Sasha lying there, her eyes open, offering a slight smile as Kami drew closer, her expression changing to one of deep, gentle affection as she reached out and touched the girl's face, speaking loudly enough for him to be included. \"I am so glad you survived, Sweetheart. And that your father was there with you to make sure you weren't alone. I knew he would never leave you. He is such an amazing, infuriating man. I love him, you know.\" She touched her belly with her other hand. \"Misha says to get better soon.\" \n\n\"Thanks, Little Brother,\" Sasha replied, reaching out and touching Kami's belly too, and looking bemused by the actions of seconds before. \n\n\"I'll stop off at Alpha Squads quarters and let them know you're awake and can visit in the morning - and to let a certain Mr Ostrow know how grateful I am that for his efforts.\" Kami smiled at her - but spared one last scowl at Hrelle, as well as an incredibly filthy curse in Old Caitian that made him blink and made Sasha, the only other person in the room who understood the language, gasp. \n\nAs Kami departed, T'Varik raised an eyebrow. \"The Universal Translator did not explicate that. I will assume that it is best I stay ignorant.\" \n\n\"Yes, but I'm hoping I can sleep on your couch tonight.\" \n\nDr Ling stepped forward. \"You and your daughter will be staying here; we've repaired the damage to your bodies, and you'll both make a full recovery, but I want to keep an eye on you both tonight. And there'll be no more visitors, and that includes the members of your Squad, Ms Hrelle, as well as your pestering boyfriend.\" \n\nHrelle nodded as Ling and the medical staff left, leaving only T'Varik. \"Status?\" \n\n\"You were beamed back and revived 13.42 hours ago. As Mr Ostrow predicted, the mine reset itself and went into Standby Mode, and Lieutenant C'Rash has since returned to the Eight of Swords and secured the mines. We have informed Starfleet Command, and Admiral Tattok has ordered the USS Tortuga to deliver a specialist EOD Team to complete the disarmament. They should arrive in 6.4 hours, allowing us to make our rendezvous with the Tempest within an acceptable timeframe.\" \n\n\"Good. And when I'm back on my feet, I want to implement those plans we have for Jonas.\" \n\n\"Yes, Sir.\" \n\nSasha half-sat up, lying back down again and pulling the sheets up as she realised her state of debility - and undress. \"What plans?\" ",
        "Hrelle and T'Varik exchanged glances, before Hrelle explained, \"We're creating a position specific to this ship and this mission, because of the unique engineering challenges that seem to have arisen: a Special Engineering Officer, a sort of troubleshooter, to work out unusual problems like tracking pirates in a dark matter nebulae, or getting a disabled ship up and running again in record time.\" He smiled. \"Or fooling Nekrosi mines.\" \n\n\"Jonas' unique experience and expertise have proven to be a consistent asset,\" T'Varik added. \"He has excelled in the Leadership courses he has taken, and Counselor Shall has confirmed his mental and emotional fitness for the additional responsibilities. This will not be a permanent or full-time promotion, but one assigned to him on an ad hoc basis for specific assignments.\" \n\n\"But when it is,\" Hrelle pointed out. \"He'll have the authority to recruit any cadets, crew or equipment necessary to get the job done, and he'll be answerable only to myself or Commander T'Varik. Because of that, at those times he'll hold the grade of Lieutenant.\" \n\nSasha smiled. \"So, he'll outrank me, huh?\" \n\n\"Only when required. Assuming he accepts the challenge.\" \n\n\"He will, or I'll kick his ass.\" Her smile became a grin. \"But you have to change the title. 'Special Engineering Officer' sounds... special.\" \n\nT'Varik offered a raised eyebrow. \"Would 'Strategic Engineering Officer' provoke less puerile ribaldry?\" \n\n\"Definitely.\" \n\nThe Vulcan nodded. \"If you will now excuse me, Lt C'Rash is apparently under the impression that I agreed to give her a 'good hard grooming'. I will go clarify the issue.\" \n\n\"Have fun,\" Hrelle grinned. \"And watch those claws on your nethers.\" \n\n\"Oh God, that's right,\" Sasha agreed, flushing darkly. \n\nT'Varik did not dignify their responses with one of her own, leaving father and daughter alone. \n\nIt was peaceful for a moment, before Hrelle noted, \"My wife packs a punch.\" \n\n\"I don't blame her. What were you thinking, staying with me like that?\" \n\n\"I told you, I wasn't going to let you die alone. You were only in that predicament because of me. It was the least I could do.\" \n\n\"It was the stupidest thing you could do. What if they hadn't been able to revive you?\" \n\nHe breathed out, aware of the pain still in his repaired lungs from the effort, but hiding it. \"I knew they would. This wasn't the first time I died.\" \n\nShe turned her head towards him. \"You've died before?\" \n\nHe nodded. \"Six times now. Twice when I was in command of the Furyk; I never told your mother. Twice while in captivity. Once with the Ferasans-\" \n\n\"You died then? But I was there! How did I miss that?\" \n\nHe shrugged. \"You were busy getting fixed up yourself at the time.\" \n\nShe leaned back, staring upwards. \"I don't remember anything. No Celestial Choir, no light at the end of the tunnel, no family waiting for me.\" \n\n\"Were you expecting any of that?\" \n\n\"I... I don't know. I thought... maybe I'd see Mom.\" \n\nHe nodded. \"I'm sorry, Sasha.\" \n\n\"For what?\" \n\n\"This wasn't the birthday I wanted you to have.\" \n\nShe shrugged. \"Sometimes the Universe Has other Plans.\" \n\n\"We both know that, all too well.\" Now he offered a smile. \"Are you tired?\" \n\n\"No, why?\" \n\n\"I thought we could watch Chitty Chitty Bang Bang again.\" \n\nShe smiled back. \"Why not?\" Louder now, she stared at the overhead screen in front of their beds. \"Computer: access Video Library, Terran Archive, Chitty Chitty Bang Bang.\" She smirked. \"I'll try not to get scared by the Child Catcher this time, but no promises.\" \n\n\"The Child Catcher is nothing. Just think about what I'm gonna get you for your Twenty-First birthday.\" He sat up, lifting up his right cheek as if to free his tail - and farted instead. \n\nSasha screwed up her face in disgust. \"That's horrible!\" \n\nHe chuckled. \"I'm old. And I died.\" \n\n\"It certainly smells like you did!\" \n\n\"Happy birthday, Sasha...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... STAR-CROSSED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "science fiction",
        "starfleet",
        "caitian",
        "alien11111",
        "federation"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-18-inseparable"
}