{
    "title": "A Summer Dance with a Succubus",
    "pages": [
        "Terry Gaiman adjusted his black bow tie in the mirror, trying to get it straight. He twisted it first one way, decided he'd gone too far, twisted it back, realised he'd overcompensated, twisted it again.\n\nWhy did evening wear have to be so complicated?\n\nHe fussed with his cufflinks. The shirt cuffs felt like a pair of oversized floppy manacles. He looked back in the mirror and tried, again, to straighten his bow tie.\n\nHe checked the clock and felt his heart flutter in nervous panic.\n\nShe was going to be here soon.\n\nHe flittered round his bedroom like an over-caffeinated moth. Did he have everything? Were his clothes right? He was convinced he was going to make a fool of himself.\n\nHe knew there was no real need to panic. She wouldn't care either way. He still wanted to make an effort though. It wouldn't feel right if he took it for granted.\n\nThe doorbell rang as he was tying up his shoelaces. He'd been expecting the sound but the shock of it still kicked his heart up until it felt like he was on the verge of spitting it out onto the floor.\n\nHe rushed back to the mirror. Damn tie still wasn't straight.\n\nFuck it.\n\nHe was almost out of his bedroom when he remembered something. He turned back and plucked an old trilby hat from a stand in the corner.\n\n\"Mustn't forget this,\" he said.\n\nThe hat had been stylish once and despite being a little age worn it still possessed a bit of class. At least Terry thought so. He put it on his head and rushed down the corridor to answer the door.\n\nThe girl on the other side took Terry's breath away.\n\nHe'd expected sexy. He'd expected fit. He'd expected raunchy.\n\nWhat he hadn't expected was a beauty that looked as if she'd stepped straight out of the pages of a fairytale to pluck at his heartstrings as if they were an exquisite harp. How to even describe her?\n\nHer skin was pale like fresh snow.\n\nNo, that was the wrong metaphor. Snow is cold, undesired.\n\nThere was a coldness to her features though. Like marble.\n\nYes, that was a better fit. Stone had an aloofness and distance about it, as if it was far removed from such paltry concerns as rot and decay. She had the cold perfection of stone worked by a master sculptor, a beauty that sat outside the flow of years as if they could never touch her.\n\nTerry didn't know what to do. His plans now seemed like the despoilment of a lush paradise.\n\n\"Hello, I'm Nicole,\" the girl said. \"Are you Terry?\"\n\nTerry nodded. Her voice had the same trace of an accent he'd heard on the phone. He couldn't tell if it was French or Eastern European. During the phone conversation her voice had made him picture an exotic model or actress from an old chic movie. He knew his mental image wouldn't match up; he hadn't expected it to be surpassed.\n\nShe wore a white fur coat and fashionable sunglasses and looked every bit the stylish and refined model. Her hair was cut in a short black bob. She looked stunning.\n\nWhat would she make of him, Terry thought. Inwardly he must disgust her.\n\n\"You can speak you know,\" Nicole said with a smile.\n\nHer lips were a contrast to the paleness of her skin, a vivid splash of red like a precious bloom. When she smiled her entire face was transformed. The cold perfection softened into a truly heart-melting beauty.\n\n\"I'm sorry,\" Terry said. \"I'm not used to speaking to beautiful women. Come in,\" he added, backing into the hallway to allow her to enter.\n\n\"So what are we doing this evening?\" Nicole asked. \"From the way you're all dressed up I'm guessing we have plans to go out.\"\n\nTerry picked up a flier from the telephone table. It advertised a summer dance at the local cricket club.\n\n\"Would you like to come with me to the dance?\" he asked.\n\n\"Why I would love to accompany such a charming young man to the dance,\" Nicole replied. \"But first...\"\n\nShe examined him with a critical eye. Then she stepped forward and went down on her knees until her head was level with his crotch.\n\nWas she going to? Already? He felt his cock stiffen in his pants and all of a sudden he felt a little giddy and light-headed.\n\nNicole reached behind him and untied his cummerbund. She dropped the red silk slash on the phone table with an expression on mild distaste.\n\n\"A little too formal for a summer dance I think,\" she said.\n\nTerry let out a breath, unsure whether it was relief or disappointment.\n\nNicole ran a finger up the outline of his erection, causing Terry to shiver with pleasure.\n\n\"Later,\" she smiled, getting back to her feet. \"We have the whole night ahead of us.\"\n\n\"Do I look okay?\" Terry asked, opening his arms. \"The suit was my father's. It's all I have.\"\n\nAnd the hat had originally belonged to his grandfather, but he wasn't about to mention that. Leaving the house without his hat was not an option.\n\n\"I look horribly out of fashion don't I?\" Terry said.\n\n\"Nonsense,\" Nicole said, stepping close enough for the subtle fragrance of her perfume to toy with his nostrils. \"You look like a perfectly stylish young man.\"\n\nShe reached up with her pale hands to adjust his bow tie, finally getting it straight. Seeing those luscious red lips pursed in concentration, Terry felt the sudden urge to kiss her. His head angled down to meet her, a trajectory he halted long before they met.\n\nThey didn't like to kiss, he'd heard, and he didn't want to offend her.\n\nNicole was not the type to be offended. Her hands finished with his tie and then slid onwards over his shoulders and met behind his neck. She pulled his head down until her lips, soft and supple, crushed against his. His initial wild excitement was doused in a calm sea of bliss. Standing there, with Nicole in his arms, her warm lips working against his, he felt like he'd become part of the same perfect sculpture. In her arms it felt like time could no longer touch him, as if the passing of night and day ran together into one single blur.\n\nShe pulled away with a smile.\n\n\"We'd better stop, otherwise we won't make the dance,\" she said.\n\nWas that such a bad thing? Terry thought, but he followed her out to her a car, a little Renault Clio. Outside the air was muggy and Terry was glad Nicole had got him to remove some of his excess clothing.\n\nAs they drove to the cricket ground on the edge of town Terry noticed Nicole still hadn't removed her sunglasses. They were already deep enough into twilight for the street lights to bathe the road in a wan orange glow.\n\n\"Can you see okay with those?\" Terry asked.\n\n\"I have a rare condition,\" Nicole answered. \"My eyes are extremely sensitive to light. Without my glasses even those street lights are bright enough to cause me pain.\"\n\nThe field next to the ground was being used as an overspill car park. Even that was full, but Nicole's car was small enough for her to sneak it into a space beneath a gnarled old oak.\n\n\"I suppose you see enough rare conditions every day,\" Nicole said. \"Dr Pratchett says you're wonderful with the children at the hospital,\" Nicole said.\n\n\"He does?\" Terry said. \"I just try and make things fun for them. It's heart-wrenching some of the illnesses they suffer. Both Holly McKean and Madeleine Kieth have leukaemia. Dr Pratchett reckons they only have a few months left. Holly is eleven, Maddy is twelve. It's Mary Dringenberg I really feel for. She has Progeria, that premature ageing condition. Eight years old and she already looks like a wrinkled old lady.\"\n\n\"It's a tragedy to have to become acquainted with death at such a tender age,\" Nicole said.\n\n\"They're still children though,\" Terry said. \"At heart they want the same things as any other child. They want to laugh, to play, to have fun. People forget that sometimes. They're so busy pitying them or trying to hide their own revulsion, they forget the poor kid just wants someone to play with them.\"\n\nTerry paused and looked at Nicole.\n\n\"This probably isn't a good topic of conversation before going out on a date is it?\" he said.\n\nNicole smiled enigmatically.\n\n\"I don't want you to think I'm morbid or obsessed by death or anything,\" Terry added.\n\n\"Some say the only two topics worthy of conversation are sex and death,\" Nicole said.\n\n\"Sex seems more appropriate for this evening,\" Terry said. \"More fun.\"\n\n\"I agree. I think we should discuss it later,\" Nicole said. She reached across and put a hand in Terry's lap. \"At great length,\" she added with another enigmatic smile.\n\nThey walked to the bright lights of the clubhouse. A number of stalls had been set up outside and were gaily lit with bright lamps. Some offered games with the chance to win novelty stuffed animals. There was a tombola. Others offered a variety of different foods and drinks. The clubhouse itself rocked to the bass thumps of loud dance music. It was heaving in there.\n\nTerry felt a momentary flash of reluctance. Most of the town youth would be here and there was him in his Granddad's hat and his father's dinner suit. Nicole's presence on his arm emboldened him though. It felt like they were the most glamorous couple there. Everyone turned to look at them, or rather Nicole.\n\nOf course it was only fantasy, but Terry didn't care. He'd enjoy the night while it lasted.\n\n\"How do you know Dr Pratchett?\" Terry asked.\n\n\"I comforted him after his wife passed on,\" Nicole answered.\n\n\"Oh,\" Terry said.\n\n\"That's a very judgemental 'Oh' I'm hearing there,\" Nicole said, cocking her head up to look at him.\n\n\"It's a surprise, that's all,\" Terry said. \"Dr Pratchett always seemed so stern and serious to me. I never would have thought... then I suppose we're only here tonight because he gave me your number and ordered me to call you.\"\n\n\"He's a doctor. He understands what the body needs,\" Nicole said. \"As do I.\" She gave Terry's buttock a cheeky squeeze.\n\nThe music from the clubhouse changed tempo, switching from blaring dance numbers to slower numbers designed to put lovers in each other's arms.\n\n\"Let's dance,\" Nicole said, grabbing Terry's hand and pulling him into the main bar before he could protest.\n\nInside it wasn't quite as crowded as the noise made it out to be. They found a quiet spot on the edge of the wooden floor. Nicole took his hands and moved before him with sinuous grace. In contrast Terry felt like Frankenstein's monster with added cement shoes.\n\n\"I haven't had much practise at this,\" he said.\n\n\"It doesn't need practise,\" Nicole whispered in his ear. \"Loosen up and let your body follow the rhythm of the music.\"\n\n\"I'm frightened I'm going to trample all over your feet,\" Terry said.\n\n\"Do that and I'll trample you back,\" Nicole giggled in his ear. \"And I have spiked heels.\" She prodded the top of his foot with a wickedly sharp point to remind him to stay focused.\n\nStaying focused was not going to be easy. Her arms were around him and he felt the warmth of her soft body pressed against him. Her perfume, sultry and exciting, filled his senses. They twirled slowly under the flickering lights, just like any of the other couples dancing around them. Terry even managed to avoid treading on her toes.\n\nTerry didn't want this to end, but it wasn't long before he felt a familiar weakness start to creep up his legs. His breath was coming out a little ragged too. He knew the excitement wasn't helping matters.\n\n\"I have to take a break,\" he whispered in her ear, feeling wretched that he needed to cut the dance short.\n\nNicole understood. She didn't say anything as they walked over to the bar.\n\nPhew, it really was hot in here, Terry thought, feeling a bead of perspiration trickle down the side of his neck.\n\n\"Are you enjoying yourself?\" Nicole asked with a smile.\n\n\"Yes,\" Terry smiled back. \"Just need to get my breath back. Then we can go up again.\"\n\nEven as he said it the music tempo switched again, going back to fast dance beats and Terry knew he'd never be able to keep up with that pace.\n\n\"Are you enjoying yourself?\" Terry asked back.\n\nStupid question, he thought, cursing himself for being silly enough to ask it.\n\n\"Yes,\" Nicole replied. \"Because you're enjoying yourself.\"\n\nHer face was as cryptic as ever. He wished he could see her eyes, but they were still hidden, as they had been all evening, behind those stylish sunglasses. What was she really thinking? he wondered.\n\nTerry suddenly became aware of a looming presence standing next to them. He turned and saw a big bull of a man, easily over six foot and with a close-shaven bullet head. The man was dressed in an expensive looking dinner suit and had the overly friendly smile of someone hovering around the point of inebriation. There was a lecherous smirk on his lips as he looked Nicole up and down.\n\n\"You could do so much better,\" the man said to Nicole.\n\nBehind him the man's friends smirked like a pack of hyenas.\n\nNicole looked him up and down right back, weighing up what she saw.\n\n\"You're right, I am,\" she replied, putting her arms around Terry and kissing him on the cheek.\n\n\"Don't be too harsh dear,\" Terry said, finding confidence in her presence he wouldn't normally have. \"It's hard to find good style in gorilla size.\"\n\nThe man's friends laughed again, this time at him rather than with him.\n\nIt was all very funny until the man slugged Terry right on the jaw. Terry fell against the bar and slid down into a wobbly squat as his legs tried to decide whether they were propped up with bone or jelly. His hat went flying off.\n\nMy hat!\n\nThe gasps went up immediately. He saw them all staring at him with a mixture of shock, revulsion and then pity. He knew what they saw: a mostly bald head covered in a few strands of long greasy hair. He knew what they were thinking?\n\nWhat's he got? Is it contagious? Oh the poor man.\n\nThe big man backed away in shock. Terry didn't care. He got back to his feet and raised his fists on his skinny little arms.\n\n\"Come on!\" he cried, voice rasping with defiance.\n\nThe big man almost did. He was drunk enough for the primal instinct to fight to nearly overwhelm the common sense dictated by Terry's appearance. If his friends hadn't been there he'd have probably hit Terry again.\n\n\"Don't be a tool, Neil!\" one of his friends yelled in his ear as they tried to hold him back. \"Can't you see he's on chemo?\"\n\nNeil blinked and took a proper look at the man standing in front of him. He backed down with an expression of sheepish embarrassment on his face. He couldn't look Terry in the eye, instead staring all around him, anywhere but at Terry directly.\n\n\"No. Fight me!\" Terry said, still waving his fists with his stick-thin arms.\n\nThe man and his friends melted back into the crowd of onlookers, the man still refusing to meet Terry's eyes.\n\n\"Fight me!\" Terry yelled after them. \"Fight me,\" he said, slumping forward as hot tears welled up in his eyes.\n\nThey came then, as they always did, clucking and cooing like concerned mother hens, crowding him, mithering him, always with that stifling pity that sucked all the oxygen from his lungs and left him weak-kneed and helpless. He pushed them off, loathing himself for shoving them away even though they meant well, and loathing them for making him loath himself.\n\nWhy couldn't they treat him like everyone else?\n\nBlood was streaming from his split lip as he sat at a table by the wall. His mouth ached, like biting down on a razor. One of the barmaids had given him a tissue. He pressed it into his mouth to try and stem the bleeding. One of his teeth ached with a dull throb. It felt loose.\n\nNicole joined him.\n\n\"I found your hat,\" she said.\n\nTerry took it and put it back on his head, hiding his ravaged skull from staring eyes. Too late, they knew now and those eyes would follow him everywhere, eyes filled with pity. At least he didn't get to see that with Nicole, but with those sunglasses he didn't see anything at all.\n\nTerry's tooth was more than loose. He nudged it with his tongue and it fell out of the socket. He spat it out into a tissue and stared at the blood-smudged white enamel as if it was a trophy.\n\n\"Still having fun?\" Terry asked, looking up at Nicole and smiling. He dreaded to think what that smile looked like now. Gap-toothed and bloody, he must make for an even worse sight than usual.\n\nNicole didn't seem to mind. She smiled right back at him.\n\n\"Yes, you?\" she replied.\n\n\"Loving it,\" Terry laughed, specks of dried blood still staining his chin. He felt exhilarated, alive.\n\n\"What about your tooth?\" Nicole asked.\n\n\"Don't worry about it,\" Terry said. He stared at the trophy in his hands with a mixture of both pride and revulsion. \"The rest will all be falling out soon anyway.\"\n\nNicole put her arms around him and leant against him, her head resting on his shoulder.\n\n\"I suppose that's the end of any kissing this evening,\" Terry said.\n\nNicole surprised him by lapping a spot of blood off his chin with a dainty little lick of her tongue.\n\n\"Don't tell anyone, but I'm really quite a kinky little bitch,\" she whispered in his ear, her voice husky and dripping with so much lust Terry felt his cock stir in his pants.\n\nThey leant against each other in comfortable silence and watched the party swing and flow around them. It had turned into a perfect summer night, warm without being sweaty. Being here, with an absolutely gorgeous woman, Terry felt truly alive for the first time in his life.\n\nUnfortunately it didn't take long for the fly in the ointment to return. The big guy, Neil, came back and stood on the other side of the table. His eyes were apologetic and his whole stance radiated contrition, albeit with a hefty amount of alcohol induced instability.\n\n\"I want to apologise,\" Neil said. \"I was out of order back there. That was the booze talking. I didn't mean to belt you like that, especially on account of you being... you know...\"\n\nIll. Sick. Weak. Pathetic. Which word would you prefer? Terry thought. Why did people have to be so awkward about it? It wasn't as if it was their fault, or they could do anything about it.\n\n\"Let me buy you a drink. Make it up to you,\" Neil said. He held out a hand.\n\n\"Sure,\" Terry said.\n\nThe apology was appreciated, but after fetching them new drinks Neil didn't leave. Instead he squeezed onto the seat next to Terry and didn't show any inclination of leaving any time soon. His presence brought an awkward silence to the table. He stared at Nicole as if he couldn't take his eyes off her. There was something dangerous there, a spark bordering on obsession.\n\nTerry wasn't sure what to do about him. He'd dearly like to tell him to fuck off, but he suspected that would only make the big man violent again. They could move away, but there was no guarantee he wouldn't just follow them. Instead they tried to ignore him. It was difficult for Terry as he found the other man's presence stifling. Nicole had no such problems though and was adept enough to divert Terry's thoughts away from their unwelcome visitor. In the company of a girl as beguiling as Nicole it really wasn't that hard to tune out the rest of the world.\n\n\"How much?\" Neil said, suddenly slapping a couple of crisp notes onto the table.\n\nThey were hundred pound notes, Terry realised. Neil held his hand over them, showing off a solid gold watch that must have cost several grand. He stared at Nicole, eyes flecked with steely determination.\n\nTerry looked at her with a nauseous feeling in the pit of his stomach. He couldn't hope to match that kind of money. Nicole was as still as the flawless sculpture she resembled. She dabbed her vivid red lips with her tongue.\n\n\"I've been watching you all night,\" Neil said to Nicole. \"There's no way you'd be here with him unless he'd paid you.\"\n\nNeil turned to Terry. \"Not that I blame you for doing it. Makes perfect sense given your... condition. You're playing in the big leagues now though.\"\n\nHe turned back to Nicole.\n\n\"So how much to forget this guy and leave with me right now?\"\n\nThere was a pause. Terry glanced from Nicole to Neil and then back again. Neil's face was determined, Nicole's impassive. She was going to leave with him, Terry thought, a sickening feeling growing in his stomach.",
        "Nicole leaned over to whisper in his ear. \"I'm sorry, but I'm going to have to take care of this. I won't take too long, I promise. Then we can get back to our enjoyable little evening.\"\n\nShe reached into Terry's lap and gave him a cheeky little squeeze. Then she got up, took Neil's hand and walked away. As they walked away Neil turned back and flashed Terry a nasty little wink.\n\nAsshole, Terry thought.\n\nShe wasn't going to come back, he thought, toying with a beermat.\n\nAs he watched her walk away his eyes played strange tricks on him. For a moment her form seemed to shimmer and Terry thought he saw black wings, leathery like a bat's, coming out of her back and a long black tail, tipped with an arrow point like a demon's, swishing behind her. He blinked and the image was gone.\n\nHe tried not to think about what that might mean. Instead he stared down into his beer, no longer in the mood to carry on drinking.\n\n\"Here are some more tissues.\"\n\nTerry looked up and saw one of the barmaids, a pretty girl with curly blonde hair, with a handful of white tissues.\n\n\"Thanks,\" Terry said, taking a handful and replacing the sodden wad pressed against his mouth.\n\n\"He's a giant prick,\" the barmaid said, looking over to where Neil had disappeared. \"He always was an arrogant bastard, but now he's got that high flying job in the city he's far worse.\"\n\nShe leant closer and put her hand next to her mouth.\n\n\"There's nothing between his legs worth bragging about,\" she whispered.\n\n\"Not so much a giant prick in that department then.\" Terry said.\n\n\"Very much a little prick,\" the barmaid whispered.\n\nThey both chuckled.\n\n\"Of course, it'd be funnier if I hadn't found out first hand,\" she said, her face twisting in disgust. \"Are you Terry?\" she asked.\n\n\"Yeah,\" he replied, wondering how she knew him.\n\n\"My little sister, Sheila, spoke very highly of you. She said you used to read her stories at night.\"\n\n\"Sheila? I remember her. It was such a shame, I'm sorry.\"\n\n\"Your...\" she said. \"It's not...\"\n\nTerry was used to that look. When people felt the need to say something, but they weren't really sure what.\n\n\"Oh no,\" Terry said. \"The chemotherapy's a bitch but the doctors reckon I've got a good chance of pulling through.\"\n\n\"That's good,\" the barmaid said, her face brightening. She noticed a man waving at her from the bar and turned to go back to work. \"I'm Amanda,\" she said. \"Maybe I'll see you around some time.\"\n\nTerry watched her go, alone in his own dark shroud. It was better this way. Life was too short and too precious to be tainted with reminders of how fleeting it really was.\n\nHe was still glumly contemplating the surface of his pint when he was enfolded in a familiar perfume. An arm went around his back and a soft body leaned against him.\n\n\"It's too beautiful a night to wear an expression like that,\" Nicole whispered in his ear.\n\n\"I thought you'd left with him for sure,\" Terry said, surprised.\n\nNicole put on an expression of exaggerated hurt. \"Don't be silly,\" she said.\n\n\"But his money.\"\n\n\"Darling, I'm not a good to be auctioned to the highest bidder,\" Nicole said. \"My appointment tonight is with you, just you, for the whole night. For my business it's important to have a good reputation. Can you imagine what would happen to that if I made a habit of running out every time another man flashed his wallet at me.\"\n\nShe put a pale hand over Terry's hand.\n\n\"I'm really sorry for allowing the cruder aspects of my business to intrude on your perfect evening. He would have pestered us all night if I hadn't. I made him understand the situation and he was much more amenable once I mentioned I had an opening later in the week.\"\n\n\"So you made an appointment with him?\"\n\n\"It's what I do,\" Nicole said, her face enigmatic.\n\n\"Does it ever bother you?\" Terry asked.\n\n\"The men are all different,\" Nicole said. \"Sometimes they're wonderful, charming, fun men like yourself, and I feel terribly guilty for taking their money. Other times they're rude, obnoxious and unpleasant.\"\n\n\"Not so much guilt over taking their money,\" Terry said.\n\nNicole flashed him a smile that verged on the predatory. \"Oh, I enjoy taking them for everything they've got.\"\n\nThey stayed at the dance a little while longer. The air cooled as night deepened outside and the revellers started to make their ways back home. Terry summoned up the energy for one last dance and would have kept going in Nicole's arms until his heart popped from his chest and his legs fell out under him, but there were no more songs, it was time for the DJ to pack up. The last remaining couples abandoned the dance floor until all that remained were slowly deflating balloons, soggy coloured streamers and the occasional empty bottle.\n\n\"Time to go home,\" Nicole whispered in his ear, her voice dripping with lascivious suggestion.\n\nTerry paused once they got back to his front door. He knew what they were about to go inside and do. Nicole's real business. What he'd paid for.\n\nHe wasn't sure if it was what he wanted.\n\nNicole noticed his hesitancy. \"Aren't you going to invite me in?\" she asked, her luscious red lips turned up in an amused smile.\n\nTerry fumbled with the key and led her into the corridor. He paused again at the door to his bedroom.\n\nHe wanted to, he really wanted to. She was fun and really really sexy, but he knew this was her job and this part of it was probably something she didn't enjoy too much. She wouldn't tell him that, she was too professional, no doubt she'd act as if she was enjoying it just as much as he was. He looked at her, tried to gauge what she might be thinking, but she was as unreadable as the perfect marble sculpture she resembled.\n\n\"I've had a lovely evening,\" Terry said.\n\n\"It's not finished yet,\" Nicole said, adding a seductive pout.\n\n\"What I'm trying to say is you don't have to, not if you don't want to. The whole date has been perfect enough already.\"\n\nNicole looked at him and laughed.\n\n\"Tsk. Why is it the men I really look forward to having sex with always have these crises of conscience. All this silly guilt and morality over a perfectly natural act. Terry, you're a lovely sweet young man and your concern for my feelings is very touching, but right now we're going to fuck and keep on fucking until the sun comes up.\"\n\nShe took off her sunglasses and Terry realised they weren't there to protect her eyes because she didn't have any to protect. In their place were two deep, black pools. Terry stared at her face in shock and then his fear mounted as he realised he couldn't stare away. Her eyes, those empty black portals, snared his gaze and reeled him into Stygian depths.\n\nNicole gave a little shrug and her clothes fell off her body and formed a neat pile at her feet. The body beneath was voluptuous and perfectly formed. Her skin was pale like milk, but covered all over in a complicated series of black whorls, lines and incomprehensible symbols, as if a mad sorcerer had made her body his parchment.\n\nShe was not human. A small pair of black horns sprouted from her forehead. A black tail, pointed like a demon's, swished behind her legs. A pair of wings, black and leathery like a bat's, were partially folded behind her.\n\nShe was not human and yet she still surpassed even the most erotic of his night time imaginings. She stood there, the full glory of her nakedness revealed to him. He couldn't move. He was paralysed by her beauty. His eyes were transfixed on the lovely curves of her firm breasts. They sank down to the hairless cleft between her legs, a cleft already moist with the little dewdrops of her arousal.\n\nHis intellect took in her horns, wings, tail and those eyes, those empty black eyes, and screamed at him to run. But his intellect was no longer in command. A more primal force had taken control of his body.\n\nNicole, the demon, smiled at him and stepped towards him with lithe grace. Her hips swayed seductively and her slender black tail bobbed behind her as she approached him. With each step her hold on him grew stronger. His blood pounded through his temples with the same exotic beat as jungle drums. Her scent preceded her, enfolding him like a burial shroud.\n\nShe stopped in front of him and her hands roamed freely over his paralysed form, each caress sending warm blooms of pleasure through his body.\n\n\"I'm sorry to have to hold you with such a crude glamour,\" she said, placing her hands on his buttocks and rubbing her groin against his. \"My true form is always too much for my first time clients and I know your constitution is not strong.\"\n\nShe embraced him. Her head rested against his breast, her ear next to his stuttering heart. Beneath her sweet perfume he detected another odour, a faint but acrid tang, like flesh long burnt tinged with traces of sulphur. His heart, never strong, kicked and stuttered as the battle between his fear and arousal threatened to tear it apart.\n\n\"Shh,\" Nicole whispered. \"Be quiet. You are under my control now and I wish you to feel only pleasure.\"\n\nTerry's galloping heart slowed first to a canter and then to a sedate trot. The tension in his limbs drained away to be replaced with a blissful languor. Her warmth enfolded him like a tight fitting mitten.\n\n\"Good, that's better,\" Nicole said, smiling up at him. \"Now we can have some real fun.\"\n\nShe took him by the hand and he meekly followed as she led him into the bedroom and sat him down on the side of the bed. She took off his jacket and began to unbutton his shirt. Terry couldn't resist, or even move, but he could still speak.\n\n\"What are you?\" he asked.\n\n\"I'm a demon, a succubus,\" Nicole replied. She kissed him lightly on each nipple, her lips moist and warm. \"I feed off men's life force when I fuck them. Suck it all out until there's nothing left.\"\n\n\"You picked a poor meal in me,\" Terry said. \"There's barely any left in this body.\"\n\nShe lifted up his legs and swung him round until he lay in the centre of the bed. She unbuttoned his trousers and pulled down his underwear. Terry's cock, already erect, sprang to attention in the night air.\n\nShe climbed on top of him and straddled his naked body. Terry was transfixed by her boobs as they hung above him. The white globes were criss-crossed with crisp black lines and elaborate symbols. A swirling whorl decorated her left breast, the spiral line terminating at her delicate pink nipple.\n\n\"Are you going to kill me?\" he asked.\n\n\"Maybe,\" Nicole replied.\n\n\"I'm not afraid,\" Terry said. \"Death has been part of my life ever since the day I was born.\"\n\n\"You should be,\" Nicole said. \"I can take more than your life.\"\n\nShe reached back and gripped his penis with a black-clawed hand. She lightly pumped her hand up and down and his cock responded by becoming harder and even more engorged with blood. She lowered her hips and guided his cock to the plush opening to her vulva. He felt the steamy heat of her sex spill over him.\n\n\"Is this your first time?\" Nicole asked. The tip of her prehensile tail tickled his inner thigh.\n\n\"Yes,\" Terry said.\n\nHis tongue felt swollen and puffy, too big for his mouth. His throat felt dry, choked with both eager anticipation and lurking apprehension. Was this a dream or a nightmare?\n\n\"I'll try to prolong it for as long as I can, but don't feel bad if you come too soon,\" she said, her face tender.\n\nShe lowered her body down on him. The head of his cock pushed up against the soft folds of her labia, then the lips parted and his cock was sliding slowly into her moist orifice. Her heat enveloped him and spilled through his body, igniting fires in his blood. He slid deeper inside her, the cushioned walls of her vulva pushing snugly against his shaft.\n\nTerry released a deep breath.\n\n\"Mmm,\" Nicole sighed. \"That feels good doesn't it.\"\n\nShe slowly wiggled her body, letting the silken folds of her sex slide around, all around, his cock as she manoeuvred him into an even snugger fit. Her flesh -- warm, wet and very very soft -- pressed all around his manhood, as if she was slowly stewing his cock in the juices of her lust.\n\nTerry exhaled again, somewhere between a groan and a sigh.\n\n\"Let's take this nice and slow,\" Nicole murmured.\n\nShe braced her hands on either side of his chest as she lowered herself down on all fours. She began to pump her hips slowly up and down. Her pink nipples brushed against his chest as her breasts swayed back and forth. Electric shudders ran through Terry's body as his cock slid in and out of her tight, exquisitely lubricated sheath. He looked up at her face and it was perfectly composed, a total contrast to the chaos of emotions raging through his body.\n\nHis breath came out in stuttering gasps. Too much. Too much.\n\nAbove him her face was perfectly calm. Perfect beauty. Aloof, outside of time.\n\nShe slowed down, her body rising and falling above him in long slow strokes, each down stroke sucking his cock deep into the tight fit of her pussy. The pleasure from the friction trickled down his shaft in warm waves, pulsing through his body and settling in his balls, causing them to boil and bubble up like the contents of a cauldron.\n\nToo much. He couldn't hold on.\n\nHe could feel his semen rising inside him, rising like mercury in a thermometer on the way to exploding out of the top.\n\nNicole stopped. She sat up, rocking gently on top of him, letting Terry recover slightly, letting the level in his internal thermometer drop slightly.\n\nShe didn't let it fall back entirely. A flex of her flat stomach and Terry shuddered as he felt the warm walls of her pussy tighten around the head of his cock and squeeze. His arousal surged back upwards, again not reaching the top before starting to fall back. Before it fell back to the original level Nicole's pussy squeezed again, taking him higher than the last peak, but again not high enough to reach that final release.\n\nShe continued that game for what seemed like a teasing eternity, each muscular pulse of her sex pushing him higher, but maddeningly short of the eruption he craved. He writhed beneath her, his arms pushing and gripping the sheets of the bed. She sat astride him, poised and in control as her pussy continued to tease him with rhythmic little squeezes.\n\nNicole put cool hands on either side of Terry's head and stared intently into his eyes.\n\n\"I think I've teased you enough,\" she said. Her hips rose and thrust back down in one smooth motion.\n\nTerry erupted inside her. His body contorted as his cock pulsed hot cum into her hotter pussy. Her vagina went wild around him. The soft walls wrapped around his cock and began to suck like a mouth. He groaned as he ejaculated a full load of his seed into her fleshy grip and felt more already surging up his shaft.\n\nOh fuck. He knew now what she meant by sucking it all out of a man. Immediately after releasing a second pulse of semen he felt a third, larger, load erupting from his balls. Nicole's vagina squeezed tightly around his cock. Bands of muscle worked up and down his shaft, coaxing yet more cum from his throbbing manhood.\n\nHe obliged. He couldn't do anything else.\n\nElation flooded through him as her moist orifice suckled on his cock and sucked down every drop of seed he pumped into her. Still the flow didn't end. The contractions in his balls grew stronger and wilder as she encouraged them to empty every morsel of his being into the warm embrace of her sex.\n\nTerry's breath wheezed in his throat. Black spots danced across his vision. His heart laboured and stuttered in his chest. She was killing him.\n\n\"That's enough,\" Nicole said softly.\n\nHer vagina dilated and that irresistible suction was removed from his cock. It gave a few final spurts before sliding out and lying slackly against his stomach. Nicole ran a cool hand over his boiling hot brow.\n\n\"You don't want it, not yet,\" she said.\n\nShe got off him and lay next to him on the bed. Her full breasts rested on his side and her hot breath played around his throat as she nuzzled his neck. She lightly circled one of his nipples with her fingers.\n\nTerry lay back while his shattered body determined it wasn't quite broken into pieces just yet. His stuttering heart returned to an even rhythm. The wheezing bellows of his lungs quietened down to the point where he could speak again.\n\nHe was still alive.\n\n\"If you're a demon, why would you care what I want?\" Terry asked.\n\n\"What I am is not what I have to be,\" Nicole replied.\n\nHer hand continued to tickle Terry's exposed nipple.\n\n\"What do you want?\" Terry asked.\n\nNicole's hand went lower, tickling his balls before lightly stroking his cock. She flashed him a coquettish glance.\n\n\"Morning is still a way off,\" she whispered in his ear.\n\nRight then Terry decided he didn't care what she really was. She was still the same girl that had taken him on such a wonderful date. The eyes, wings, horns and tail took nothing from her appearance. She was still heart-achingly sexy.\n\nWho was he to judge anyway, what with a head that made him look like a mutant from a post-apocalyptic film?\n\nAnd if she killed him, well he was going to be crossing that boundary soon enough anyway, he might as well go wrapped in Nicole's warm embrace.\n\nHe was leaning over to put his arms around her, when all the strength suddenly drained from his body and he fell back on the bed.\n\nNo, not here, he thought, cursing the sudden weakness that had returned to torment his body. The dance, sex with Nicole; he'd overexerted himself.\n\nThis was worse than just weakness. The room swam and he suddenly felt light-headed. A nauseous feeling churned in his guts. A sickly cough sidled out of his throat and was followed by others. The force of their expulsion weakened him further until he didn't even have the strength to maintain a full-throated coughing fit. It died out in a series of painful splutters.\n\n\"What a state, eh,\" Terry said. \"I don't think I'll be able to carry on all the way 'til morning.\"\n\nNicole sat back astride him, her black wings falling behind her like a cloak of shadows.\n\n\"That would appear to leave us with a problem, wouldn't it,\" She said. \"As a thorough professional who takes a pride in her work, I couldn't possibly leave without my client first being fully satisfied. But how to do so without killing you in the process.\"\n\nShe placed a black-clawed finger on her plush lips and pretended to look thoughtful. She looked back down at Terry, her lips curled up in a smile.\n\n\"Fortunately I have a solution,\" she said.\n\n\"Solution?\"\n\n\"Succubi are often summoned to attend to the... needs of warlocks. These are men that are often, to put it kindly, considerably past their prime. We wouldn't be able to satisfy their desires without a few... tricks.\"\n\nNicole tilted her head back and opened her mouth. Her body tensed in concentration and her chest gave a little spasm. It looked to Terry like she was gargling or maybe on the verge of regurgitating something. As he watched, little tendrils of ethereal smoke spilled up over her luscious red lips.\n\nShe leaned back down and clasped the side of Terry's head in a sudden movement. She lifted him up off the bed and her black wings snapped round behind him like a harness. Her lips came down to meet him and crushed against his in a passionate kiss.\n\nSomething passed from her mouth into his.\n\nTerry jolted as if galvanised. Sparks of pure energy crackled into his body. He convulsed in her embrace, his arms and legs twitching as if he'd been wired up to the mains. Nicole embraced him tightly, keeping her lips pressed against his as she exhaled more of her breath into his body. Terry's brain sparked like a computer dropped in a bucket of water. He felt like arcs of electricity were crackling from his ears. Still she continued the kiss, holding him in place as the energy flowed through and settled into every pore of his body.\n\n\"What was that?\" Terry asked when she finally released him. He felt like he could light up electric bulbs just by holding them.",
        "\"Stolen life essence,\" Nicole said. \"We can lend it out to humans if we want. Very handy for keeping them going for longer.\"\n\nShe lifted up her ass and positioned herself back over his erect and throbbing penis. Again he felt the warmth inside her spilling out and down his shaft. His cock twitched in anticipation, wanting again to be enfolded within her soft flesh.\n\nShe didn't keep him waiting. The plush lips of her vagina parted and he watched as his cock slid back into her exquisite sex.\n\nHer thrusts were faster this time. She bounced on his cock, her lovely round tits swaying as she rocked back and forth. Ripples travelled along the lovely smooth flesh of her ass as she smacked down on his cock again and again.\n\nThe weakness and nausea from before had gone. Terry started to move his body back against her, tentative at first, but growing bolder until his legs were locked straight and he started to thrust upwards, bouncing her weight on top of him, starting to catch up her pace. The force of their motions sent tremors rippling through the bed until the mattress began to squeak.\n\nTerry laughed at the sound and thrust even harder. Nicole rocked up and down on him, riding him as if he was an untamed stallion. He was bursting with energy. The tiredness, the weakness, was gone. His cock plunged back and forth into her moist pussy, their two bodies coming together with slapping squelches.\n\nIt wasn't long before Terry was feeling his balls start to boil over, but this time they felt full, not like a bubbling saucepan, but much more, powerful like a volcanic geyser about to erupt and send boiling water high enough to shower the angels in heaven. He groaned and thrust up with a mighty heave, almost catapulting her off his body entirely before she came back down, taking his cock all the way inside her, her pussy tightening around it as he spurted cream into her warmth.\n\nHer pussy gripped him, forming a soft fleshy seal that engulfed his cock entirely. Muscular pulses rolled up his shaft as her sex sucked on him with the same hunger as a mouth. He groaned as more and more spurts of his juice jetted out of his cock to be sucked up by her warm body.\n\nThis time the aftermath didn't leave him feeling drained and empty. He felt vital, as strong as a bull. It took him only a moment to recover his breath before he sat up and flipped her onto her back, her black wings flowing out beneath her like sable satin sheets.\n\nNow he was on top and jackhammering his cock into her wet sex. He gripped her luscious ass and slid her closer to him so he could thrust deeper and deeper into a warmth that throbbed and pulsed around his cock like the beatings of a molten heart.\n\nThroughout it all Nicole remained impassive, her face as self contained as polished marble and equally enigmatic even as her delicious pussy gushed warm juices over his groin. She smiled up at him and pouted her bright red lips like a porn actress, but she still seemed totally composed. In control. Always in control.\n\nTerry felt wild. His balls throbbed again and he drove his cock as deep into her pussy as it would go. Her vagina clamped tightly around him and muscular pulses tickled up his shaft as she milked more seed out of his balls.\n\nStill Terry wasn't done. He felt like he had the vitality of a marathon runner. Maybe more. There was strength in his arms he'd never possessed before. His muscles were coiled springs, bursting to the brim with energy. Even after two powerful orgasms he wasn't about to end their frenzied fucking.\n\nThe bed had become too small for them so they abandoned it. He bent her over the dresser and thrust into her silken sex, revelling in power he'd never before felt in his legs. This was life; true heaving, sweating, grunting, pounding, joyful life and it thrilled him to feel it after spending so long barely keeping out of death's clutches.\n\nNicole's tail slithered across his chest before descending in a lascivious loop around his buttocks. Hands flat on the wall she pushed back at him with equal force as he thrust deep into her dripping sex. He reached around her body and clasped both of her breasts, feeling her erect nipples dig into his palms.\n\nAgain. He was coming again.\n\nNicole's pussy contracted around him with a suction almost hard enough to yank him off his feet. The walls of her pussy clamped tightly around his cock and pulled at it with strong muscular contractions. Terry grunted as he let go another powerful geyser of semen into her convulsing insides. She held him there, gripped tightly by her vagina, as she milked pulse after pulse of sperm from his body until his knees started to wobble and his ankles felt like they were made out of spaghetti.\n\nShe pulled herself off his juice-slimed cock and span in his arms until she was facing him.\n\n\"My turn,\" she said with a throaty growl before throwing him back onto the bed.\n\nShe was pouncing even as he lifted his head up off the sheets. He took in the lithe curves of her body as she arced through the air, full breasts bobbing beneath her. She landed on him like a bird of prey, black wings folded behind her. Her hands pinned his wrists to the bed as she straddled him.\n\nTerry's extra vitality didn't matter. She was in control now.\n\nShe slammed her hips down on him, engulfing his still erect cock down to the base with one smooth gulp. She was warmer inside, much warmer and growing warmer still, a total contrast to the pale skin of her body.\n\nThe calmness had gone. Instead Terry stared up at a face filled with wild passions, dark and unfathomed. Her lips were stretched taut, baring long fangs, as she growled and snarled with animal desire. She rode him faster and harder than any human woman could ever be capable of. Terry gave up trying to keep up and instead lay back as the force of her unquenchable passion roared through his body like wildfire.\n\nHe was looking at the true her, the part she'd only now released from the cage locked inside her. It was like staring onto her naked soul, or whatever passed for one. She was no less beautiful, but it was a dark and terrible beauty.\n\nHe hoped she wouldn't kill him.\n\nShe arched her spine, threw back her head and gave a wild cry. Her wings stretched wide behind her, wide enough for the tips to brush the walls on either side. She slammed him down into the mattress, forcing his cock deep into the furnace heat of her vagina. Her muscular walls closed tight around his cock, like a fleshy vice. No escape, her grip said, ever.\n\nTerry exploded within her, the orgasm more powerful than any other he'd experienced this night. Her warm sex clenched around his shaft and sucked and stroked him with consummate skill. He wasn't stopping this time. Terry groaned in ecstatic bliss as a series of steady pulses bubbled up his shaft, each growing in intensity as she pumped more juice out of his balls than he ever believed he could produce.\n\n\"Feel my pussy really suck you,\" Nicole said.\n\nShe sat above him, her full breasts thrust upwards and outwards. She stared at him over the twin peaks of her luscious chest. Terry writhed beneath her in orgiastic torment, tremor after blissful tremor tearing through his body.\n\nShe leaned over him and clasped the side of his head with her black-clawed hands. She held him still and stared down at him with her abyssal black eyes. Those black pools sucked him in like a tar pit, dragging him down into a darkness that had no bottom or end. Her wings rose up and blotted out the light entirely. Her pussy formed a cushioned vice around his cock and he felt her whole body tense and flex as she sucked him. She was gulping down his life, swallowing him one orgasm at a time, and Terry didn't want it to end, even though it must and it would end with his death.\n\nShe blinked and the savage passion in her face flickered and was blown out like a candle.\n\n\"Enough!\" she said.\n\nHer pussy released him and that irresistible, terrible, rapturous suction passed. The violence of his ejaculations faded and the flow of semen into her body slowed to a dribble. Her face was once again as calm and perfect as a flawless sculpture. She got off him and lay next to him on the bed, head resting against his. One of her wings folded across their perspiring bodies like a soft sheet.\n\n\"The best part about loaning out stolen life essence is fucking it back out of the person you lent it to,\" Nicole said.\n\n\"Couldn't you have left some?\" Terry said. The familiar weakness had returned to his body and the memory of the strength and vitality he'd felt was fading to the quality of a dream.\n\nNicole shook her head sadly. \"Living off the essence of others is the blackest, foulest magic. It would extend your existence, but it would be a corrupted shadow of your life.\"\n\nAs much as he longed to feel that raw vibrant life rushing through his veins again, he understood. A shadow of a shadow was no existence at all.\n\n\"So is my client fully satisfied?\" Nicole said, putting her arms around and cuddling him.\n\n\"Completely,\" Terry replied. A dazzling array of emotions were spinning through his mind. It would take him a long time to fully process what had happened this night. \"What are you?\" he asked.\n\nNicole smiled enigmatically.\n\n\"Your perfect date for a warm summer's night,\" she replied.\n\n\"Intense,\" Terry said.\n\n\"It's good to let the wild side out once in a while,\" Nicole murmured.\n\n\"I get the feeling you don't get to do that very often,\" Terry said.\n\n\"I can't afford to,\" Nicole replied. \"My kind are powerful, but they are few and the humans are many. If I gave my instincts full rein eventually your kind would hunt me down and kill me.\"\n\nTerry traced a finger over the elaborate black whorls and symbols covering her skin. \"This isn't here for decoration, is it?\"\n\n\"It's a reminder,\" Nicole said, her face cryptic again. \"I think of it as an instruction manual to help me become the being I wish to be.\"\n\n\"I suppose I'm a good test,\" Terry smiled. \"It's not a great loss if you accidentally suck me dry.\"\n\n\"I'm usually more tender,\" Nicole said. \"I hope I didn't scare you.\"\n\n\"No, it felt more real,\" he said, \"if that makes any sense.\"\n\nHe lay on the bed, enfolded in her warm arms and covered by her soft wing. There was a question he had to ask.\n\n\"If you carried on,\" he asked, leaving unspoken what that would mean for him, \"would it hurt?\"\n\n\"No,\" Nicole said. She lightly breathed in his ear. \"I would give you the sweetest, tenderest end.\"\n\n\"I think I understand why Dr Pratchett told me to ring you,\" Terry said.\n\n\"Dr Pratchett told me about this young patient of his,\" Nicole said. \"A brave young man who'd lived his whole life with a rare, incurable condition. A young man who'd endured many painful and debilitating treatments and yet still found energy to cheer up the other children on the same ward. A young man who'd grown into an adult despite many medical experts predicting he wouldn't survive beyond his twelfth birthday. Dr Pratchett told me about this young man and said it would be a pity if such a decent young man never got to experience the simple pleasures so many take for granted.\"\n\nNicole lightly kissed him on the cheek.\n\n\"Is it what you want?\" she asked.\n\nTerry lay back and stared at the ceiling. It was black. The walls were black. His furnishings were antique and gothic. It was hard to avoid becoming obsessed with death when you were forced to contemplate it every day, Terry thought.\n\n\"They told me I was unlikely to live past my twelfth birthday. Most children grow up and find out Father Christmas and the Easter Bunny are only make believe; for me it was my future,\" Terry said sardonically. \"My parents loved me a great deal, but in their eyes I always saw that fear, the knowledge that one day they'd have to bury me.\n\n\"They didn't,\" he said with traces of black humour. \"In the end I buried them. Plane crash,\" he added. \"It doesn't matter. I'll be joining them soon. I got past my twelfth birthday, then my thirteenth, then my fourteenth... but the nineteenth is a year too far. There are no treatments left.\"\n\nHe paused in thought.\n\n\"No, it's not what I want,\" he answered. \"Not yet.\"\n\nNicole listened, her head resting on her elbow.\n\n\"It's like summer,\" he said. \"We know it won't last forever. We know one day the leaves will fall from the trees and winter will come. I could spend my life worrying about the coming winter or I could enjoy every precious day of sunshine. I can walk. I can talk. I can think. It's still summer and I want to savour every last day.\"\n\nNicole leaned over and kissed him tenderly on the lips.\n\n\"It's what I thought,\" she said.\n\nShe got up and slid off the bed, a beautiful girl that was so much more.\n\n\"You'll know the right time,\" she said. \"Then I'll come for you.\"\n\n\"Thank you,\" Terry said. \"It's a comfort to know the end will be nothing to fear.\"\n\nNicole walked to the door, her black wings folded behind her back. At the door she turned and blew him a kiss. Even though she was on the other side of the room, Terry still fancied he could feel traces of her perfumed breath brushing against his lips.\n\n\"That stolen life essence,\" Terry asked. \"I probably shouldn't ask where it came from.\"\n\n*****\n\nAmanda opened the door to the store cupboard and gave a loud shriek as a large naked body toppled out. She stepped aside as the body-\n\nit was Neil\n\n-fell bonelessly forward to land on its face with a thud. An eye, glazed over, stared into space with cow-like stupidity.\n\n*****\n\nNicole smiled, the twin points of two long fangs resting against her plush red lips.\n\n\"I'm still not quite the being I wish to be,\" she said. \"Occasionally I have moments of weakness.\"\n\n/***\n\nAUTHOR'S NOTE\n\nThis is an entrant for the Literotica 2009 Summer Lovin' Story Contest. If you enjoyed the story please show your appreciation by voting.\n\nThanks\n\n***/"
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "date",
        "dance"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-summer-dance-with-a-succubus"
}