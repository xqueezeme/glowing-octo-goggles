{
    "title": "The Keeper Ch. 38-41",
    "pages": [
        "Chapter Thirty-Eight\n\nThe two girls that Quinn had left at Edie's had elected to take up Edie's sister Norma's offer to stay with her. He was glad for them. Maybe now they'd have a chance for a normal life. His anger flared again. He'd been too kind to the Leprechaun. How many other little lives had the asshole ruined.\n\nAs he drove north to Emory, his mind switched to planning his trip to Montana. Airbnb had a cabin listed on Wise River that was expensive, but it would save time getting to the river in the morning. His finances could handle it, he decided. Just leave all this craziness behind and have some fun. If only he could break Gus loose for a week, be way more fun with a fishing partner. He wondered if the little wolf girl liked to fish or if anyone had shown her how.\n\nThe call came as Quinn was crossing over the Snohomish River on the SR 2 bridge.\n\n\"Lanie, the girls are gone.\" Suzie was crying so hard that he could barely understand what she was saying.\n\nHe flinched. Felt a coldness wash over him. His mind You had one job.\n\ninstantly went to the barn and poor Edna's body.\n\nQuinn took a deep breath.\n\nCompartmentalize\n\n\"Slow down, Suzie. Take a breath and start over.\"\n\n\"Charlie and Katrinka have been connected at the hip ever since Mandy brought the horse here. The last anyone saw of them was when they took the little horse out to pasture.\"\n\nShe started to cry again. \"It was two o'clock in the afternoon, Lan, not like it was nighttime. We haven't seen them since. I'm sure somebody or something took them.\n\n\"Okay, listen, I'm almost to Lake Stevens, so I'm thirty minutes away. I'll get there as quickly as I can.\"\n\n\"Please hurry, Lan.\"\n\n\"Ok put Mandy on.\"\n\nAmanda came on. \"What are you thinking, Lan?\"\n\n\"Mandy, which of the Sisters is the best at scrying?\n\n\"Bella.\"\n\n\"Okay, call her and have her come to the clinic. I am hoping she can do a casting and tell us what happened and what direction they went. Would you do that? Get to cracking on it and I'll be there soon.\"\n\nQuinn's mind raced with other possibilities. The clinic bordered the Opari. The girls might have gone on an adventure and wandered into the Opari's border.\n\nHe didn't want to think of the real possibility that the Hag had come back for the little wolf.\n\nHe wondered again what he was missing about the little girl. What did this mysterious Druid want with her?\n\nHe dialed Niamh, hoping she was out of Oldtown.\n\nShe answered on the first ring and started talking before he had a chance to say anything.\n\n\"I already heard. Sari called me. I'm on my way.'\n\n\"Good, meet me at the clinic. I'm going to need your tracking skills. You were always best at that.\"\n\nWhen Quinn drove up, Amanda and Anna were waiting in the parking lot for him.\n\nHe jumped out of his truck and strode over to them.\n\nHe looked over at Amanda. \"Take me to where they last were.\" His tone must have been a shade too cold and abrupt because she jerked back at his words.\n\n\"Easy Lachlan,\" Anna said. She looked at Amanda. \"It's okay, Mandy, just take him there.\"\n\nAmanda gave him a doubtful glance but led him through the clinic and into the pasture north of the clinic.\n\nThe clinic must be doing well, Quinn thought. The barns and other buildings were very well constructed and the white post-and- rail cedar fencing around the ten or fifteen-acre property looked sturdy, well maintained. The whole set-up was not cheap.\n\nMandy's healing talent must be powerful. The little horse was already looking better. Her eyes were clear and her ears were perked as she curiously watched the group of women standing next to the fence at the north side of the pasture. The dark mass of the Opari Wilderness loomed on the other side.\n\nQuinn walked up and glanced worriedly at the massive trees and then at Niamh. She nodded. She knew as well as he did that they had very little time to find them.\n\nHis heart dropped as he picked up the scent of apricot magic that was the Hag's calling card.\n\nSuzie ran over to him. \"Please find them, Lanie. Please. She's all I have.\"\n\nQuinn hugged her awkwardly.\n\nThose pleading, trusting eyes again.\n\nHe turned his attention to the scene twenty feet away, next to the fence. Bella and Thistle sat inside a six-foot pentagram outlined with a thick band of rock salt. Their faces were remote with concentration. The pentagram was so expertly crafted that not one bit of the powerful spells that must be swirling within leaked out.\n\n\"Lan,\" said Amanda. \"don't get any closer to them. You might disrupt things.\n\nHe stepped back and turned to Anna. \"The Hag was here. I can smell her magic. Why the hell is she after that little girl?\"\n\n\"Lachlan, I think little Katrinka is a nature-psychic. Neophyte level at now, but strong enough that she picked up on the wrongness at the farm. Her talent will mature as she gets older and we take a hand in her training. Attunement is a natural ability for all crafters and shifters. Think of it as empathy. Crafters can attune themselves to the raw materials of their craft--a glassblower can feel the molten glass she works with. The magic deepens the talent.\n\n\"Shifters attune to nature--they spend a good deal of time in their animal persona and are far closer to the natural world than are we humans. Shifters can't use magic. Until Katrinka. She has far deeper abilities. I'm just not sure what they will turn out to be. She's as much a mystery as you are. I so wish Marigold Hope had made more progress finding your parents. We've been studying you for twenty years and are no closer to figuring out what makes you tick. You shouldn't have survived your time with Opari.\"\n\nTheir discussion was interrupted when Bella and Thistle stepped out of the pentagram.\n\n\"The girls left willingly,\" said Thistle. \"There was no coercion, just trickery. The faerie and the blood-witch led them into the Opari.\"\n\nSuzie moaned and clutched at Amanda.\n\n\"Okay,\" Quinn said, \"thank you. That gives us a starting point. Niamh and I are going to head into the Opari and find 'em.\"\n\nQuinn turned his back so Niamh could strip out of her clothes.\n\n\"Mandy,\" Niamh called out, \"would you watch my little friend here.\" She pointed to the little boy who was standing next to the horse. He had a frightened look on his face.\n\nQuinn noticed his fear and walked over to him and knelt. \"I didn't see you there Jeffery or I would have said hello right away. We sure shared an adventure, didn't we?\"\n\nThe boy nodded.\n\n\"You see that lady over there crying. Well, she's my little sister, and she's worried and sad. I won't be here to take care of her, so I was wondering if you would help her. I saw the way you handled the tough times, so I know I can trust you to help. And you know what it feels like to be afraid and sad. Will you help her?\"\n\nQuinn gave a reassuring smile as Jeffery's eyes looked into his, probably looking to see if he was serious. Apparently, what he saw in Quinn's demeanor reassured him, because he nodded, squared his shoulders, walked over to Suzie, and silently took her hand. She smiled through her tears and swept him into a hug.\n\n\"Nim, when we get inside, we'll need to mind-speak, so don't freak when you hear my voice in your head. Okay?\"\n\nShe gave him a look that spoke volumes and with an effortless bound was over the fence.\n\nChapter Thirty-Nine\n\nAfter Niamh pushed her way through the thick underbrush that bordered the Opari. Quinn followed. Once inside and under the old-growth trees, the brush thinned out; he stood and got his bearings.\n\n\"Hold up for a bit.\"\n\nDespite his warning, the mind-speak startled her so much that she jumped three feet straight up and spun around ready to run back the way they came.\n\nDespite the seriousness of their quest, he grinned an inner grin but carefully held his face blank as she gave him another of her looks that spoke volumes.\n\n\"Jerk.\"\n\nShe sat and waited as he centered himself into the proper mindfulness. One did not travel the Opari heedlessly.\n\n\"Don't get too far ahead of me, Niamh. This area is safe this close to the border, but further in things will get more dangerous. We're in a hurry and I'd prefer not to have to fight our way in.\"\n\nShe nodded wordlessly and started to cast about in ever-widening circles and soon picked up the trail.\n\n\"The signs show that the girls are stumbling and falling a lot, a sure sign they were under some sort of enchantment.\"\n\nQuinn nodded and absently motioned her forward. His attention was snared by the immense magic of the Goddess. He fought his way free, trying to find the perfect balance point between detachment and singularity. Information flowed along the periphery of his consciousness. The problem with navigating the Opari was not too little data, but too much. The wonder of the complexity of life pulled at him. He felt he could sit and watch a single tree for years and still not plumb the depths of its mysteries.\n\nNiamh, meanwhile, continued to track, watching for the signs of passage and senses fully alert to any danger.\n\nQuinn was aware of the watchers that followed their progress. His fingers were constantly busy, signaling greetings to some and warnings to others. He was alert for any newly arrived predators that might not be aware of him and attack. He was determined not to harm any being if he could help it.\n\nOpari gradually changed. At first, there were the familiar clean mossy smells of Northwest rain forest. Ferns and mosses everywhere. Shade-loving flowering plants like trillium and foxglove. Honeysuckle and Oregon Grape growing out of fallen trees. Gradually, the vegetation changed to a tropical jungle. Greenhouse floral smells. Water dripping everywhere. The further they pressed in, the darker it got. The canopy far overhead blocked out much of the light. The sounds changed as well. A cacophony of animal and bird sounds mixed with the hum of a billion insects.\n\n\"I don't like this place. It's growing more oppressive. I hate the feeling of being watched. How can you be so fucking relaxed?\" Niamh's ears were flat with apprehension.\n\n\"You're picking up a subsonic warning song from a Dryad Clan,\" Quinn said. \"Probably from the big bamboo grove over there. They don't like visitors. Their song has an odd beauty, but I admit it is an acquired taste. We'll be past them soon.\"\n\nThey continued that way for three hours, with Quinn occasionally stopping her and leading her in a large circle around whatever danger lay just ahead. Once it was to avoid a boggle band on the hunt. Another to avoid a grove of fruit trees covered in thousands of palm-sized spiders.\n\n\"How far have we come?\"\n\n\"We've come three or so hours. You measure travel here in hours, not distance. Opari has an alien topography. Distance-wise we've traveled maybe half the length of a continent or more. You can see the change in foliage. If you get off the trails, you can get lost in a time loop. It happened to me a couple of times. It wasn't good.\n\n\"I don't think I want to hear any more of your interesting factoids,\" Niamh shuddered.\n\n\"Hold on a minute. There is no reason for them to be traveling this way and they certainly didn't need to bring Charlie along with them. This must be the Faerie seizing the moment for some entertainment--and I'm afraid Charlie is the subject.\"\n\n\"What are you talking about?\"\n\n\"Faerie-kind entertain themselves with trickery. They sup on emotions. They store and share memories of the dark ones like desperation, despair, and death to sip on like a fine wine during the long boring nights of immortality.\"\n\n\"He knows we will be following. He's looking for a place to kill Charlie while we watch.\"\n\nThey pushed on, trying for as much speed as they could while keeping the trail in sight.\n\nThey found her a half-hour later. They pushed through some thick brush and stepped out onto a beach of sorts bordering an inland sea. A small island lay forty or so meters from shore.\n\nCharlie was seated by a tree with knees drawn up to her chest. She looked lost, lonely, and terrified--but she was still alive.\n\nThe island was connected to the shore by a massive fallen tree.\n\nNiamh jumped onto the tree preparing to cross over to the little girl.\n\n\"Hold up,\" Quinn ordered, \"that tree is an illusion that will dump you into the water halfway there and you wouldn't like what would happen to you afterward.\"\n\nShe obeyed and padded silently over to where he stood. He couldn't take his eyes off Charlie. The thought of failing to get to her paralyzed him utterly. He had no solution that didn't look like a failure. The Faerie had boxed them neatly.\n\n\"What's wrong. Just swim across and get her. It's only thirty or forty yards away.\"\n\n\"This place is deadly. Undines dwell here. I came through here once before I was thirsty and stopped here for a quick drink. A mistake. Four of them lunged out of the water like Nile Crocodiles and pulled me in and drowned me. The Troll Women fished me out before they could eat me. A very unpleasant experience. Everything here is an illusion; like the log, the distance to the island is an illusion.\n\n\"Okay, well get your head out of your ass and think. I want to get out of here. There is always a way. You are the fucking Keeper for Mother's sake.\"\n\nQuinn looked at her silently for five or six beats, then walked to the water's edge and slapped the surface of the beautiful clear green water three times.\n\nFour humanoid creatures surfaced and swam to where he stood. They were female, obviously mammals, five-foot-long with mottled greenish-brown skin Their hair was moss green and hung short of pointed ears. Gill slits lined their throat. Huge yellow eyes watched him warily. Quinn thought they didn't look too far from the popular conception of mermaids, except for formidable shark-like triangular teeth.\n\nThe Matriarch sang, \"The Faerie left us a boon, and now we have another. This smells like the human-boy who escaped.\"\n\nQuinn's lips tightened and his eyes grew dark. \"Mother, I have no wish to harm you or yours, but I will get to my sibling across the way.\"\n\nThe Undine's eyes took a sly glint.\n\n\"Would you do us a service for passage, O Keeper?\"\n\n\"Within reason. What service.\"\n\n\"A Kraken has invaded our nursery. Kill it for us.\"\n\n<p align=\"center\">***</p>\n\n\"They look like something out of a nightmare.\"\n\n\"Meet the Undines, not exactly the Little Mermaid, are they?\" Quinn absently waved away the hordes of black flies and mosquitoes.\n\n\"I've struck a bargain with them. Stay here and wait. No matter what happens, stay here.\"\n\nBefore she could respond, he turned and walked along the shore twenty yards to a half-submerged jagged stump and started walking across the underwater causeway that they had built to separate their nursery from the rest of the sea. The water barely reached his ankles. If he stayed on the path, the Undines assured him, it would get no deeper.\n\nHe was halfway across when a monster from a nightmare rose out of the water and snatched him up with a tentacle as thick as his thigh. One minute he was pacing along the causeway, the next he was ten feet deep in the dark green water heading deeper.\n\nAt first, Quinn panicked. He well remembered the experience of drowning--then his training took over. He desperately loosed the dragon, seeking to cut the suckered tentacle that wrapped tight around his chest.\n\nNo use.\n\nHe changed tactics and attacked.\n\nThe Kraken would have ended him if it hadn't tried to stun him with magic. But the strike to its eye alarmed it, so it cast its rudimentary magic to stun him.\n\nQuinn's runes flared sun-bright white. Shocked and blinded, the creature loosed its hold enough for Quinn to turn and guide the whip to shear through the eye and the skull that surrounded it. The creature convulsed and released him.\n\nWith his last remaining strength, he fought his way and surfaced gasping for air.\n\nThe Undine clan members swarmed by him, heading for the carcass. There would be feasting in their halls tonight. He pulled himself onto the causeway, waved to Niamh, and crossed to the little girl.\n\nCharlie leaped into his arms as he bent over to pick her up. She buried her face in his neck and clung to him, sobbing as he crossed back to shore.\n\nShe flinched when she spotted the big leopard. \"It's okay Charlie, it's my friend Niamh in her other form.\n\nQuinn put Charlie down by her and walked to the water's edge and slapped the surface three times and sang a verse softly. Then walked to where they watched.\n\n\"What now? Why were you slapping and singing?\"\n\n\"There is a water elemental that dwells in this sea. I apologized for our trespass. We don't need any more challenges. Now to deal with the fucking Faerie.\"\n\n\"Do you think he's still here?\"\n\n\"Sure, he went to all this trouble, there is no way he wouldn't have stayed around to feed on our despair and death.\"\n\nQuinn cupped his hands over his mouth and bellowed:\n\n\"Deldrach come here.\"\n\nThe volume of his song quieted the jungle noise.\n\nAgain, he sang out:\n\n\"Deldrach, I ask you twice, COME HERE. Do not make me ask you thrice.\"\n\nReached into the pouch in his pocket, slipped on the Lady's ring, and started flipping the other ring.\n\nUp and down. Up and down.\n\nAt the sight of the ring, Niamh abruptly shifted back to human and reached for it. Quinn moved away. Both Niamh's and Charlie's eyes followed it hungrily.\n\n\"Soooo pretty, soooo pretty,\" Charley murmured. \"Please, may I have it?\"\n\n\"It's mine. I will have it.\" A slender, green-eyed boy appeared out of the underbrush. He waved his good hand. The two females froze in place.\n\nQuinn continued flipping the ring. Up and down. Up and down.\n\n\"Give it to me and I will reward you with wealth and power, human.\" The arrogant sneer on his face belied his song, which was ineffably rich with promise.\n\nQuinn loosed the dragon. It snapped out and encircled the faerie's neck. He pulled and brought it close. He put a hand on its shoulder and forced it to its knees.\n\n\"Faerie,\" Quinn's voice sang implacable justice. \"I promised Lady Iris that I would not end you, but I will have vengeance for the old lady and her noble hound.\"\n\nThe faerie paid him no mind. His eyes, glazed with greed, were fixed on the ring as it went up and down. Raising and falling to Quinn's hand.\n\n\"So be it.\"\n\nThe dragon sheared off the faerie's good arm. Shocked, it turned its eyes to Quinn and screamed. Quinn deftly flipped the ring into its opened mouth and watched impassively as the shrieking faerie winked out of existence.\n\nQuinn shrugged off the pain in his chest from the bruising caused by the Kraken's tentacles. There was still much to do.\n\n\"Niamh, would you shift back and cast around and see if you can pick up the trail? We'll wait here.\"\n\nAfter thirty minutes or so she returned\n\n\"There is no trail to follow.\"\n\n\"No surprise there. The Hag must have spelled them out.\"\n\n\"Charlie,\" Quinn spoke out loud, \"do you remember anything that might help us find where they were headed?\"\n\nQuinn was impressed by the little girl's toughness. Her face was tear-streaked and her clothing ripped and muddy but she was lucid and seemed to be recovering although she still clung to him like she was never going to let go.\n\n\"I don't remember very much until I woke up in that swamp place. But Aunt Charity kept complaining about the jungle and that the druid was expecting her soon.\n\n\"Oh Sweet Mother, Niamh, I am an idiot. I know exactly where they're headed, Let's head back and get this little girl back to her mom.\"\n\nChapter Forty\n\nThe search into the Opari had helped Quinn keep a lid on the overwhelming anxiety and fear that had threatened to overwhelm him ever since Suzi had called him about the girls' disappearance. Now it flared anew as they drove along to the old man's cabin. He had no idea what they would find there. His training has accustomed him to fear. Fear was a tool he had been taught to use, but this was different and he had no clue how to handle it. He finally understood the warning Mr. MacLeish had given him about relationships. \"He who has wife and children hath given hostages to fortune...\".",
        "He did his best to quell the fear and shifted his attention to Anna and Niamh's conversation as he pulled his truck onto the road that led up to Cayden MacLeish's rustic cabin.\n\n\"I wonder what there is about the Keeper's house that drives the Druid,\" Niamh mused.\n\n\"I wonder as well,\" Anna said. \"The house has become the symbol of the Keeper. It's long been a mystery to the covens. I'd bet it was the House who chose you, Lachlan as much as it was the old man.\"\n\n\"Mr. MacLeish told me the house was built by old Finn's great grandfather one hundred and fifty years ago, but there had been dwellings of one sort or another on the site since the melting of the Puget Sound Ice Sheet. Its foundation is laid half in and half out of Opari, it's a tardis--larger inside than outside. There are rooms I never explored and I lived there a long time.\"\n\nQuinn stopped his lecture when they came around the corner and spotted the old cabin. Black with age, it was built in the old way with the hands of a Master Crafter from precisely cut and squared cedar logs. The morticed joints were still as tight as the day they were chopped out. The cabin faced south over a meadow of wildflowers. The Opari wilderness looked behind it.\n\nHe quickly spotted the Druid sitting on the top step of the big wrap-around porch, gazing out over the meadow. Katrinka sat in front of him, one step down between his knees. Spellbound, she sat perfectly still, staring straight ahead. The Druid's left hand held a black blade to her throat, the other held a wooden wand dark with age. Quinn's runes throbbed as they picked up on the power that swirled around it.\n\nThe Hag stood behind him. Rocking side-to-side, crooning, and muttering to herself.\n\nSweet mother, she is far gone.\n\nThe door to the cabin was wide open. He'd had time to go through the place to find whatever he was looking for.\n\nQuinn turned to the two women. \"Let me get out first and talk to him. When you get a chance get out and circle behind him.. Let's see if we can generate an opportunity to snatch Katrinka and get her away from him.\"\n\nQuinn got out of the truck and approached the house.\n\nThe man known as the Druid was small and slight with a shock of coarse black hair and brown eyes almost black. He smiled and watched as Quinn walked up.\n\nQuinn searched his face for a sign of weakness and found none.\n\n\"I assume you are the one the Leprechaun called the Druid,\" Quinn said mildly \"Why are you on my property?\"\n\n\"I've been looking for a particular item for over five hundred years, boy. It's a book or more accurately a bundle of scrolls written on lambskin. The author was a defrocked priest who spent his life studying and writing about the Druids. Most of the Druidic Spellcraft was never written down, but somehow this man managed to uncover a good deal of it.\"\n\nThe Druid smiled down at the little girl and gently stroked her hair.\n\nShe sat staring straight ahead her eyes blank.\n\n\"My bargain for you Lachlan Quinn is this. Find it for me and I will only kill you. These others may go free. This girl has served her purpose and gained me entry, but unfortunately, the house still hides its treasures. It's a blessing that all my attempts to kill you failed.\"\n\n\"I'll be honest with you,\" Quinn said. \"That doesn't sound like much of a deal.\"\n\nThe Druid waved the wand and a wall of pain crashed through Quinn, driving him to his knees.\n\n\"I know all about those protections the V\u00edsd\u00f3mur gifted you, boy. They are useless against the old magic. Loose that symbiote you carry, I will kill it and cut the girl's throat.\"\n\nQuinn shakily got to his feet, mind racing for an opening. He noticed the two women had managed to circle behind the Druid.\n\n\"Niamh,\" he mind-spoke, \" you and Anna are good right there. When you get a chance, grab the girl and take shelter in the house. Don't come out till I come to get you.\"\n\n\"Why do you want the Book, Druid?\"\n\n\"It's my key to life. It takes an iron will to live as long as I have, boy. The things I've had to do to stay alive would sicken you, but they were necessary. The Book has a spell that will free me from the risk of taking a soul for my renewal every fifty years. I will have that peace of mind. Stop delaying, or this girl will suffer pain you cannot imagine.\"\n\nQuinn watched the Hag as she paced in circles clockwise then counterclockwise on the porch behind the druid muttering and chanting.\n\nThe drone of her voice must have irritated the Druid because he shouted, \"For God's sake, woman. Would you be quiet?\"\n\nShe ignored him. Her muttering grew more strident.\n\n\"Quinn, Anna says that she's moving deosil and widdershins. The Hag is spellcasting.\"\n\nQuinn looked up and smiled suddenly. The Hag was muttering and pacing clockwise then counterclockwise inside a hastily drawn pentagram. His glyphs flared as the spell began to work.\n\n\"Tend to your associate, Druid. She calls.\"\n\n\"What are you talking about, boy?\" The Druid turned and looked at the witch who now slashed her palm with a small black knife. She fetched a coin out of her pocket and placed a round coin in the blood.\n\nThe Druid's eyes grew round. \"Why do you have that token? I told you to give it to the assassin,\" he shrieked. \"Stop that right now.\"\n\n\"Oh, Sweet Mother of All, the power. I love the power,\" her voice was shrilly ecstatic. \"All the lovely, lovely power.\"\n\nWith a sharp tearing sound, a swiftly lengthening vertical crack in reality, opened in the meadow in front of them. A cold wind howled through it and three hooded figures in black emerged.\n\n\"Look Druid,\" Quinn sang, \"Visitors.\" Then he mind-spoke, \"Get ready, Niamh. No matter what, get her inside and shut the door.\"\n\n\"Shut up, boy. I will deal with you later.\" The Druid stood and stepped off the porch to confront the figures.\n\n\"What do you do here, Drygioni?\"\n\n\"I am summoned,\" a sibilant voice sang. \"I will collect a debt that accrued for a past summoning, Druid. You forfeit a life for my fallen brother and The Brotherhood always collects its due.\"\n\n\"Now Niamh. Go.\"\n\nAnna held the door while Niamh snatched up the little girl and raced into the cabin. The door slammed shut with a boom.\n\nQuinn sighed with relief. The little girl was safe and that was all that mattered to him.\n\n\"Take the witch then,\" the Druid was visibly shaken. \"She called you. She has your payment. Take her.\"\n\nFate gave the Hag a moment of sanity and realization brought terror.\n\n\"No--no, my Dolly will save me.\"\n\nThe two masked figures were suddenly beside her, holding her arms tightly. One pulled the coin token out of her hand and flipped it to the master. Then they started dragging her to the rift.\n\nThe Hag went wild screaming and struggling in their grip. A hand got loose and tore at one of the hoods, revealing a pale face that Quinn had seen once before.\n\n\"I will have my justice, O Assassin.\" Quinn sang and loosed the dragon. With a loud shriek, it snapped instantly out of his arm and sliced through Charity Babbitt's throat silencing her screams and giving her a final peace.\n\nThe elves and Druid stood still in shock at the sudden death of the witch.\n\n\"This is too much, human,\" the unmasked elf shrieked. \"We will come back and have our vengeance for this insult.\"\n\nThe dragon snapped forth again and the elf's head rolled free.\n\n\"I warned you about threats, Aenrindel,\" Quinn sang softly. \"I gave you a kinder death than your Mistress would have for associating with the D\u00f6kk\u00e1lfar. Go back to your world, Drygioni. Leave me and mine alone.\"\n\nWithout a word, the elves disappeared carrying the body and head of the Hag.\n\nLeaving Quinn facing the shaken Druid.\n\n\"It's time to die, Druid.\" He took a step toward the Druid.\n\nThe Druid waved his hand and muttered a cantrip.\n\nCrushing pain dropped Quinn to his knees once again. He felt the wailing of the symbionts inside him. They were particularly vulnerable to this magic.\n\nQuinn pulled all of them, the Dragon, the Other, and the Runes deep inside, and shielded them as best he could.\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nHe took another step.\n\nThe Druid smiled and waved the wand again.\n\nThe pain was far worse this time. He blacked out momentarily. When he came to the Druid was pacing and talking.\n\n\"... old God's magic, boy. I've had two thousand years to master it. The pain will get worse until your very soul begs for release.\"\n\nQuinn got to his feet and whispered:\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nAnd took a step.\n\n\"Your heart will stop soon, boy. Some heat perhaps a bit of fire to fry your brain.\"\n\nHeat. A fire ignited deep in his belly. He could smell his skin blistering then blackening then feel the impossible pain as the magic methodically started flaying the blackened skin off his body.\n\nHe breathed deep and embraced the pain. Pulling it in--savoring the sensations.\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nAnd took a step closer.\n\nThe magic slammed into him and pushed him off his feet out into the meadow. Now the Druid seemed impossibly far away.\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nAnd he took a step.\n\nBlinding pain. his heart felt like it would explode. His vision narrowed then went. He bared his teeth and shouted:\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nAnd took a step.\n\nNothing happened.\n\nQuinn smiled.\n\n\"I left things go too long,\" the Druid muttered. \"Too weak.\"\n\n\"My name is Lachlan Joseph Quinn--Venu la bataille, vient la mort,\"\n\nAnd Quinn took a step, then another.\n\nTriumph.\n\n\"He's mine, child. Step away.\"\n\nQuinn turned and saw the three V\u00edsd\u00f3mur standing in the rift coldly eying the now weak and trembling Druid.\n\nThe youngest stepped through the rift. As she walked, she changed. Green pebbled skin sloughed away. Revealing a little girl dressed in a tattered leather dress.\n\n\"Do you remember me, Glew? It is Ingrid. Surely you remember me, Glew.\"\n\nThe Druid face twisted and paled. He turned and vomited.\n\n\"I trusted you and mama trusted you, but you sold me to save your life. You sentenced me to centuries of imaginable torment at the hands of the D\u00f6kk\u00e1lfar, all to save your miserable life.\"\n\nShe paced around the trembling man. Her form flickering into shape after shape--from girl to elf to troll to dwarf.\n\n\"This boy wants to kill you. Have no doubt he can, your paltry bit of magic won't stop him. He'll use his teeth if he has to. He's done that before. He is death unmatched. I offer you a choice. I will leave you with him and it will be over in a flash or you can come with me and join Mellith. You wanted to live forever and you shall.\" She held up an amber charm. \"Come.\"\n\nThe Druid stumbled fearfully away from Quinn toward her. As he moved, his body began morphing smaller and smaller the closer he got to the glowing charm. Until finally, with a despairing shriek, he merged with it and was gone.\n\nThe youngest troll woman smiled at Quinn, gave him a cheerful wink, and was gone.\n\nAnd all that was left that day was Lachlan Quinn standing in front of the log cabin that was to be his new home.\n\nChapter Forty-One\n\nQuinn was relishing the peace and quiet of the morning. Saria and her sisters had introduced Charlie and Katrinka to Friday Movie Night and the resulting chocolate and vanilla ice cream driven cacophony over Buttercup's perils in \"The Princess Bride\" was enough to drive him out to his truck to get some sleep.\n\nHe was carefully replacing two rotted boards on the wrap-around porch of his new house while reflecting how much his life had changed in three short weeks when a big blue Chevy Silverado came up the driveway and parked.\n\nKirk Falstad hopped out with an elderly woman and a young guy in his twenties.\n\nShifters. Wonder what they want.\n\n\"Hey Kirk,\" he said. \"How do you know where to find me? This place is a bit off the beaten path.\"\n\n\"Yes, it is, but I called Gus. He sent me a map. What are you doing living this close to the Opari,\" Kirk looked a bit warily at Opari looming behind the cabin? \"Lan, that whole town down there is chock full of witches. What the hell are you doing here? I thought you were just going to stop in and say goodbye and then go fishing.\"\n\n\"I got side-tracked a bit,\" Quinn said. \"Who are your friends?\"\n\nQuinn looked at the two of them. The woman looked back at him curiously. The man looked resentful.\n\n\"Remember, you asked me to make some inquiries among the Kin. This is Jarvi Murtro and Dorotea Kangas from over on the Okanagan. They showed up at my mother's place yesterday. They heard about my inquiry and were wondering if you had seen a little wolf.\"\n\nQuinn nodded to the two.\n\n\"Old Jarvi here,\" Kirk pointed to the young male, \"is a tough guy. So, I thought it best to bring him here as quickly as possible.\"\n\nFor some reason, Kirk seemed to be enjoying himself.\n\n\"Glad to meet you,\" Quinn said. \"She's here with me.\" His hackles were up: there was something wrong here. \"Are you her people?\"\n\n\"Where is she?\" Jarvi looked to be about twenty or so. Very fit. About six feet tall. He had the leanness of a long-distance runner. Green eyes and a shock of coarse black hair. His handsome face looked to be set into a sneer for life. \"Bring her forth immediately.\"\n\n\"Easy Jarvi,\" The older woman who had the same runner's leanness and large green eyes put her hand on his arm,\n\nHe shook her off. \"The Alpha put me in charge. Be silent.\"\n\nQuinn looked at Kirk and mouthed \"immediately?\"\n\nKirk grinned.\n\n\"Well, Mr. Murtro, first maybe you can tell me about her. Why was her mother forced to give her to a stranger for safekeeping when she had a pack to protect her?\n\n\"She was abducted while in the company of my daughters.\" The woman looked pained and shook her head.\n\n\"Shut up woman, you are out of favor with the Alpha. I want the girl.\"\n\n\"Wolf pack squabbles,\" said Kirk.\n\n\"Like the Ursa do not fight,\" the man snapped.\n\nKirk nodded amiably to give him the point, then growled, \"Good point, we do not however hand cubs over to slavers.\"\n\nThe cabin door opened and Charlie and Katrinka came out blinking sleepily and stood by Quinn.\n\nKatrinka stiffened when she spotted the visitors.\n\nQuinn reached down and put a calming hand on her shoulder.\n\n\"Easy little one, everything will be okay.\"\n\nThe little girl leaned into his leg. She was shivering.\n\n\"When she came to me, her mother was on the run from a Hag. Do you know how that came to be?\"\n\n\"A Hag! Surely, you're mistaken, young man,\" the woman said.\n\n\"Thing is,\" Quinn ignored her comment went on his voice soft and dangerous, \"someone promised her to the Hag. Was it you or your Alpha who sold your pack's children to the Sidhe, wolf?\"\n\n\"Jarvi, what did you do?\"\n\n\"Bitch, I told you to keep quiet,\" He drew back an arm to cuff the woman.\n\n\"Hold,\" Kirk slid close enough to grab his arm. \"You want to fight with this woman, don't do it while she is under my protection. Answer the question.\"\n\nWith a curse, the young man began his shift only to stop when Quinn loosed the dragon. It snaked out and wound around the shifter's neck.\n\n\"Mr. Murtro, what you feel around your neck is a dragon razor,\" Quinn said conversationally. \"I can take your head with a twist of my wrist. I've done it to others before. I don't like to, but I will unless you behave yourself.\n\n\"Please don't kill him, Lan. No telling what my mother would do to me if I let him get killed.\" Kirk turned to the young man. \"Wolf, if I were you, I'd calm the fuck down.\"\n\nHe croaked out an agreement.\n\nQuinn's wrist flexed. The dragon unraveled reluctantly and returned to his arm.\n\n\"Ma'am,\" said Quinn, \"why don't you tell me what's going on.\"\n\n\"Our pack has had a succession problem. We've had important members of the pack go missing in the last little while, she said. \"We don't know where or why. There was some thought that they went over to a new Alpha who had moved into our range. Then our alpha was killed and the new alpha is running things. Katrinka is the old alpha's granddaughter. My sisters asked Niamh Harpe to find her. She called to say she was okay but refused to tell us where to find her.\"\n\n\"Mister, you need to turn her over to me right now,\" the young wolf demanded. \"She belongs with us.\"\n\nQuinn ignored him. \"Will she be safe with you, Ma'am?\"\n\n\"That's not up to me, it's the Alpha's decision.\"\n\nQuinn nodded. \"Well, Mrs. Kangas, in that case, I must tell you that there is not a single chance in hell that I will turn this little girl over to anybody when there is the slightest chance that she will be harmed.\"\n\nShe gave him a keen look, then nodded and smiled with satisfaction. \"I can see you're that kind of man. Okay, girls if you could show me where my room is I'll get settled.\n\n\"Wait, what?\" Quinn sputtered.\n\n\"You go back and tell the Alpha what has transpired,\" she said to the young wolf. \"I am staying here.\"\n\n\"Mother will not be happy,\" he snarled.\n\n\"I will not lose any sleep over your mother's unhappiness. I know my duty.\" She gave Quinn a scandalized look, \"And you, young man, I am certainly not going to leave her here amongst all the Witches who infest this place. A little girl needs her Auntie.\"\n\nThe two girls looked at her with open mouths.\n\n\"Why on earth are you two out here in your Pj's? Go get dressed this instant. I've never heard the like of this. Were you raised by wolverines? Scoot\" She followed the two girls into the cabin.\n\nKirk was still laughing as he got in the truck with the other man and drove away.\n\nABOUT THE AUTHOR\n\nHi all, I'm Pete Young--plain-spoken and mostly self-educated. My life experience is varied. I've been a hard rock miner, a five-and-dime store manager, a successful salesman, a sales trainer, a trade show producer, a boilermaker, and a sales and marketing consultant.\n\nThese days, I'm a writer. I'm having loads of fun writing stories like the one you're holding in your hand. If you enjoyed it, please write a short review telling folks about it.\n\nKeep an eye out for Book Two of this series coming out this fall."
    ],
    "authorname": "CharlyYoung",
    "tags": [
        "urban fantasy",
        "fairy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-keeper-ch-38-41"
}