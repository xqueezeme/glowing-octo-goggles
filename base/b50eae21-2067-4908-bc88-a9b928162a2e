{
    "title": "Any Chance We Could Ch. 36",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale.\n\nMonday, October 29\n\nCarol had her arm draped over my chest as I awoke, her red mane spread across both our pillows. Her eyes fluttered open, \"I love you and good morning.\"\n\nBefore I could respond Veronica turned on her side and put her arm across my chest saying, \"I love you too handsome. When did you come to bed?\"\n\n\"Somewhere around eleven, but Carol wasn't here then. And I love both of you. I need to get up for an early meeting and then get back here, hopefully well before nine-thirty. Anyone up for a shower with me?\"\n\n\"I will if it's okay with you,\" said Carol looking at Veronica.\n\n\"Be my guest sweetheart. I'll take one with Mary Claire,\" she sleepily replied followed by a yawn.\n\nCarol and I both peed and brushed our teeth while the shower warmed up. \"Feel like a good morning fuck?\" she asked as she stepped in before me.\n\nBefore I closed the door she had her hands against the shower wall, her legs spread, her ass sticking back at me and grinning with her face turned to me. My instant erection parted her red haired labia and after moving my head along her slit for a moment, I slowly entered her. \"Oh, God, that feels so nice first thing in the morning. Push hard, tickle my cervix,\" she panted. I did as she asked then she demanded as she looked down, \"Now hard, ... fuck me hard.\" I began to pound her hoping that she'd keep her arms straight so I wouldn't drive her head into the wall.\n\nAfter seven or eight minutes just as my legs started to weaken, she began to moan, shudder, then deeply sigh. As she came down from her orgasm I continued to deeply stroke in and out of her at a little slower pace. She reached for my balls and as she caressed them I felt my own climax coming. I spurted deeply within her. I pulled out, she turned around and we embraced. She cooed, \"That was so nice, so very nice. I've wanted you inside me since I got here yesterday afternoon. I'll wash your hair if you do mine. I think that's very sexy.\"\n\nAt seven thirty Veronica's cell rang and after retrieving it from her purse she answered it. \"Oh, Hi Evie. ... Just fine. ... Sure. ...Do you want to come here? ... You have my address ... good ... I'll see you at nine. Scott's got something he needs to take care of at the office so he'll join us as soon as he can. ... We do have a situation we'd like to talk to you about in addition to our wedding. ... No, we'll talk when you get here. ... By the way, Hazel is a different person. Girl, you do good work. ... See you at nine.\"\n\nLooking at me she said, \"You heard the change in meeting place. Someone ran into a light pole near the church and the power's out for the next several hours, so we'll meet here.\"\n\n\"Great, I'll see you as soon as possible,\" I said as I grabbed my briefcase and headed out the door. Do you know how long it takes to get out the door when you get the pleasure of embracing and kissing five of the most beautiful women in the world? At least ten to fifteen minutes, that's how long. As I finally exited I kidded myself, Like any other tough job, someone's got to do it.\n\nKatrina and Ashley left a few minutes later for their separate campuses. They were both trying decide who would transfer to whose college or if they would both transfer to Washington University for the Spring semester. Veronica's dark blue pinstripe suit and white blouse fit Carol very well. Tan stockings and navy pumps finished the picture. As I fondled her ass she said, \"Sorry. Pantyhose. I'm more comfortable with them at the office.\"\n\n\"I'm leaving at nine forty-five, but should be back in time for lunch,\" announced Mary Claire from the kitchen sink.\n\nAfter leaving our driveway, I called Veronica and asked her to think about getting matching rings for Carol. I was sure she wasn't expecting them, but I told her, \"If we're going to do this, let's do it right.\" I mentioned it was something I wanted to do but I insisted that we should still talk to Evie because she may see some issues we should consider.\n\nWhen I got to the office, Grace's desk was unoccupied so I called down for Cheryl and asked if she could continue to fill in for the next few days. I don't know how she got up to Grace's desk so fast but she was grinning from ear to ear when she arrived. She followed me into my office with a fresh carafe of coffee and poured me a cup. Picking up Emerson's two page summary of his projections for Citigroup I nodded to her, \"Pour one for yourself as well, and good morning.\" As I flipped to the second page I noticed that Cheryl was wearing a white blouse, camel colored knee length skirt with matching pumps and light taupe stockings. She did look sharp. The outfit accentuated her wonderful figure.\n\n\"I don't know how to begin to thank you for Saturday but I enjoyed meeting your family and I think they enjoyed meeting mine. The evening's sexy fun carried over to Sunday and if I hadn't taken a nap yesterday morning when we got home I'd have probably overslept this morning.\" She smiled and paused while she sipped her coffee as I put down the report.\n\n\"We enjoyed 'having' all of you and you can expect more invitations soon, but now to business. We'll save the rest of our discussion of pleasure for later. Right now call HR and get the four checks I requested Friday. Then make sure Emerson's available and we'll talk to the three guys individually for no more than fifteen minutes each in this office. Schedule them as soon as you can. Sorry to sound so brusque, I don't feel that way, and I do want to talk to you about the weekend but I need to get these things done as soon as possible. Veronica and I have an appointment with our minister at nine and I'd like to be there as close to that as possible. And you look absolutely 'tasty' this morning.\"\n\n\"Thank you. You're quite a man, Scott and the women in your family are wonderful, sexy, smart, beautiful, and fourteen other adjectives. Again, thanks for asking us to visit your home. Martin arrived in HR about twenty minutes ago. I'll call him right now and let you know who's coming when in a few minutes.\" After checking with Emerson she called Jim Rose, Frank Mankowicz, and Gordon Keller.\n\nWithin ten minutes she was back in my office with the checks and a sheet of paper with the three names and the arrival times for each. Incredibly efficient, I thought tucking that away in my mind. Perhaps we ought to hire her as well as Lauren I privately mused. She'd probably like the fringe benefits as well as me and the rest of my family.\n\nEmerson couldn't stop smiling as he walked into my office. \"An incredible, just incredible weekend,\" he said. \"I'm glad we're retiring.\"\n\n\"Who's retiring?\" asked Jim as Cheryl ushered him in the door. As she left she closed it and I invited Jim to sit on the couch, \"Uh, oh, this can't be good news.\"\n\n\"It is.\" I began. \"Our pending deal with Citigroup has gone through and we close on Wednesday. You've been with us since our first year and over the years I think we've rewarded you handsomely for your contributions to the success of this firm. We have one last reward,\" I smiled as I picked up the check and stood to hand it to him. \"Here's a check for a million bucks, grossed up to one point five to cover your taxes. It's a special bonus and per our agreement with Citi they're not to count it as a prepayment on this year's bonus.\"\n\nJim was elated and we talked a few more minutes before again thanking him. With a grin running from ear to ear he shook our hands vigorously before he left.\n\nFrank was next and I guess he missed seeing Jim grinning as he left the office. Cheryl had 'parked ' all three in Emerson's office. While waiting for Cheryl to show him in I handed his check to Emerson for presentation as Frank had worked more closely with Emerson. Frank was as elated as Jim had been and before he left he asked, \"What're you guys going to do now?\"\n\nWe told him that we were going to get reacquainted with our families, travel, do some volunteer work, and pursue some hobbies.\n\nEmerson also presented the check to Gordon who announced that he too was going to retire very soon. His thirty-six year old daughter who was living in California had fallen seriously ill after a business trip to Thailand and his wife was there now caring for her. It looked to be a long term recovery and he wanted to be with them. We encouraged him to do it sooner than later, noting we'd both found out how close we'd come to losing some very important people in our lives. We wished him the very best and on a successful outcome of his daughter's recovery. Both Emerson and I gave him our private email addresses so that he could keep in touch with us. I really liked Gordon. He was quiet analytical man who was serious about his family and had provided consistently sound advice to us.\n\nAs Gordon left Cheryl mentioned that the Citigroup transition team was on the way from the airport and would be here in about half an hour. \"Can you handle them today?\" I asked Emerson.\n\n\"With Cheryl's help I'm sure I can. Enjoy whatever you're leaving to do and let's talk this evening,\" he said as I finished the half cup of coffee.\n\n\"Cheryl, I'll call you later, okay?\" I asked.\n\n\"Can't wait, I'd love to talk to you,\" she smiled.\n\nEmerson gave me a querulous look, shrugged his shoulders and said \"Later, partner,\" as he left my office.\n\n\"Are you coming back today?\" asked Cheryl as I walked by her desk. \"Oh, here's an email from Grace with an attachment. The subject is 'Confirmation of Retirement'.\n\n\"I knew it was coming. Please get a copy to HR and I'll get her check to her as soon as I talk to her again,\" I said. \"Confirm that HR has gotten a letter from Citigroup relative to her pension and continuing health coverage. Coming back? Probably not. You know how to reach me if you need me. I'll be at home the rest of the morning, then again after three. See you in the morning,\" I smiled at Cheryl as I walked toward the elevator. As I got part way to the elevator I turned and asked Cheryl to get Jared to pack my personal belongings and to arrange for them to be delivered to my home tomorrow.\n\n##\n\nVeronica had put on her shortest black skirt, a pale lavender semi-sheer blouse over a pale lavender half cup bra. Her g-string and garter belt were both a darker lavender and her seamed stockings were as well. She wore the shoes from the San Francisco trip. As she turned between the pier mirror and the mirror on her closet door she noticed that her stocking welt was no more than a quarter of an inch under her skirt. Perfect. Looking at the time, she touched on a few drops of her perfume and went downstairs. \"Mary Claire would you start a new pot of coffee. Thanks sweetie.\"\n\n\"Wow, and who're you meeting this morning. You look absolutely delicious. Who ever he is you'll have to fight him off with a stick,\" grinned Mary Claire.\n\n\"It's not a him, it's Evie, and thanks.\"\n\n\"Who's Evie?\" puzzled Mary Claire.\n\n\"She's the minister who's going to marry us. She has two daughters, Abigail and Samantha who've played ball against Katrina and Ashley and whom we met at church yesterday.\" replied Veronica.\n\n\"You're dressing that way for a minister?\" Mary Claire gasped. Veronica merely winked and grinned as she sat down on the living room sofa to glance through an interior decorating magazine.\n\nVeronica answered the door when the bell rang and ushered Evie in. As soon as Mary Claire saw her she said, \"Hi, Doctor Graham. Fancy seeing you again.\" She smiled walking toward her, \"I didn't realize you were a minister. I thought you were a professor at the university.\"\n\n\"Hi, Mary Claire. Can't a woman can be both? Do you live here?\" asked Evie.\n\n\"Yes for now. It's a long story and I'm sure Mom'll tell you. How do you take your coffee?\"\n\n\"A touch of cream will do, thank you,\" Evie smiled.\n\nEvie was wearing a lightweight calf length coat and Mary Claire offered to take it from her. She set her computer bag and purse on the floor. As she slipped it off, Veronica almost gasped at how sexy she looked. Her brown skirt stopped at mid-thigh, as short as Veronica's. Her tan light-weight sweater was fairly tight, and was stretched across her obviously bra-less breasts. Her stockings had a subtle pattern and she wore three inch heel burgundy pumps.\n\n\"Would you like to sit in the den or the living room?\" asked Veronica with a catch in her voice.\n\n\"You choose. Is Scott here yet?\" Evie asked.\n\n\"The den it is then. He'll be here as soon as he can,\" replied Veronica with a bit steadier voice.\n\nAs they walked into the den Evie got close enough to Veronica that they were able to catch each other's scents.\n\nTogether they said, \"Mmmm. Love your perfume,\" and laughed. \"Jinx,\" quickly giggled Veronica.\n\nThey stood and chatted for a moment before Evie set the laptop bag next to the coffee table and sat on the couch. Her skirt immediately rode up almost to the top of her stocking and she made no effort to try to tug it down. As Veronica was turning to sit in a wingback across from her Evie said, \"I'm going to have Scott take the 'characteristics inventory' and then we can compare them.\" After a pause she smiled, \"I enjoy looking at you, Veronica. I did in our first meeting. I hope this skirt length's okay.\"\n\nVeronica's skirt had also ridden up enough so that the garter clasps were visible. \"You're a very beautiful woman,\" she replied. Crossing her legs she smiled, \"I hope mine's acceptable to you as well. I love your legs.\"\n\n\"Thank you,\" responded Evie.\n\n\"Oh my,\" Mary Claire uttered as she brought in two mugs of coffee. She poured the coffee while stealing admiring glances at Evie. A minute later she silently left the room.\n\nEvie and Veronica talked in some generalities about the wedding, time, place, how Veronica expected it to unfold and the special ceremony at the Jewel Box for their daughters. After thirty minutes or so and shortly before Mary Claire left I returned, dropped my briefcase and my jaw while taking off my blazer.\n\nI walked directly to Veronica, kissed her, then stuck out my hand to Evie as I walked toward her. \"Nice to see you again Evie,\" I said looking into her face. \"Nice stockings.\"\n\n\"Why thank you Scott, I didn't think you'd notice, but I'm glad you did,\" grinned Evie. \"I'd like you to complete this characteristics inventory.\"\n\nShe noted the querulous look on my face as I said, \"I have some questions that I need to ask. But later will do.\"\n\n\"You may work at your own pace. There's no time limit and we'll talk as you do.\" She scooted forward to unzip the bag, which pushed her skirt above the top of her stockings and showed a lot of bare thigh. She looked at Scott and realized what he was looking at. She neither said nor did nothing to adjust her skirt. Instead she continued to set the computer on the table and turn it on. If anything her thighs and knees moved a little further apart.\n\nAs soon as it was booted and she opened the program, turned it toward me then scooted back and her skirt returned to mid-welt. \"My g-string is taupe. Does that answer one of your questions?\" she asked softly looking from under her eyebrows as I tapped a key answering a question.\n\nClearing my throat, I said, \"Yes, I have others, but thank you for that answer.\" Hoping my erection wasn't too obvious.\n\n\"We've had a bit of a conundrum come up this weekend. Actually it's been brewing since Carol first met Scott,\" began Veronica.\n\n\"Carol? Is that Carol McDonough?\" asked Evie. \"She's the one who put us together, right? What's the puzzle?\"\n\nI quietly listened as I quickly answered one question after another on the computer.\n\n\"She and I go all the way back to college and graduate school. Since the last weeks of our Junior year we've been lovers and good friends. When I met Scott and introduced him to her she fell in love with him too. We've talked and talked about it, and it kinda came to a head last week when she spent the night with Scott while I was out of town. She told him that she wanted to be my wife and his as well. She wants to be a part of our marriage. Can you or are you willing to help us work through this? We both love her dearly,\" said Veronica running out of breath.\n\n\"Did you know she was sleeping with Scott while you were out of town?\" asked Evie.\n\n\"Yes. I set it up. He took her and her niece to dinner and they both slept over. Erin, her niece who's bi, slept with Mary Claire. He slept with our girls and Carol in our bed. I didn't want him to be alone while I was gone. He offered to buy a big dog but I thought he'd enjoy Carol far more than a hairy beast. In fact on the first night I was gone he slept with Mary Claire and her mother ... with my blessing and knowledge I should add,\" explained Veronica.\n\n\"I'm pleased to hear it happened with your knowledge and blessing. Faithfulness is a necessity for a marriage to be a sound and happy one. Contrary to how many define it, faithfulness doesn't mean being intimate only with each other. Rather it means never being intimate with others without your spouse's knowledge and blessing. Do you often share your bed with other women? With other men?\" asked Evie in a non-judgmental tone.\n\n\"Women yes, men no, except for Scott, that is,\" smiled Veronica.\n\n\"And both of you are comfortable with this?\" asked Evie.\n\n\"Yes,\" I replied as I answered question forty-two. \"And I'll be comfortable with Veronica sleeping with another man as long as he's married and his wife is present or clearly knows, and I have prior knowledge or she tells me afterwards. In fact there are two men that she's eyeing and drooling over with my approval.\"\n\n\"I'm not drooling,\" Veronica playfully protested as I answered two more questions on the computer.\n\n\"Right! You should see her Evie. One is our contractor. When she knows the contractor's about to arrive she runs around changing her clothes and preens for him. She gets giddy when he looks at her. The other is my long-time best friend and business partner. I know my partner's wife, in fact so do you, Hazel Jacobson. The contractor is Dave Hawks who says he doesn't get involved with active clients.\"\n\nAt the mention of Dave Hawks Evie glanced up but was able to mask her emotion. \"I see,\" she replied feeling her pussy getting damp.\n\n\"We don't know if anything will ever happen. He'll likely be no more than eye candy for Veronica and the other women in our home. We not only don't know his wife but we don't know his wife's name. So we're uncertain what could ever come of it,\" I noted.\n\nVeronica giggled, \"I'm not the only girl in this house who wants to jump his bones. Evie, you should see Dave. He has a fantastic tight ass. His arms and chest are nicely ripped. From what I can notice his package is probably as nice as Scott's. And to top it off, he has a wonderful personality. I've dreamed of him pounding his hard cock into me. I truly hope his wife appreciates what she has in her bed to make love to and to wake-up to.\"\n\nI noticed Evie nod before she replied, \"It sounds like he's as much of a hunk as you, Scott.\" I felt my face flush.\n\nAt that moment Evie's cell rang, she retrieved it from her purse, looked at it and said, \"Excuse me a moment.\" She stood and walked with one leg crossing the other causing her sexy hips to dance nicely as she moved into the foyer. \"I apologize, let's try for tomorrow, same time, Bye.\"\n\n\"The church office had a question about how long to stay without power,\" she said walking back in and sat down crossing her legs again causing the skirt to rise above the welt. I noticed that the time on my computer screen was 10:02\n\n\"How does Carol know you?\" asked Veronica re-crossing her legs and revealing a bit of her bare thigh as well.\n\n\"Ahh, I hope this doesn't bother you, but we move in the same lifestyle circle,\" Evie softly replied. \"I don't share that fact with anyone outside the circle but from your behavior and little statements you've made I trust that you understand why. I hope that it doesn't change your opinion of me or make you want to seek another minister to do your wedding.\"",
        "Veronica and I exchanged looks of understanding as Veronica began, \"Our opinion has changed. But more positively. If we hadn't heard the passion and compassion in your sermon yesterday, perhaps our views may have changed more negatively. You've nothing to worry about.\"\n\n\"Evie, other than for a wedding or funeral I'd not been to a church for over seven years until yesterday. I don't consider myself religious nor would I have ever considered myself as having a minister, but this morning I referred to you as 'our minister', and after I said it I realized that it was true. You're my minister and I'm sure Veronica concurs. You've made a strong impression on us.\"\n\n\"I can't agree more with Scott. And now knowing that you understand and aren't judgmental about our unique family and intimacy preferences, I'm even happier that you're not just doing our wedding but you are our minister. Let me assure you that Carol didn't tell us how she knew you, but that we would both come to love you. It was in a separate conversation that she said that if we took her into our family she'd withdraw from the lifestyle. Neither of us connected the two conversations together.\"\n\nEvie laughed and smiled, \"Carol must seriously be in love to make that offer. I thought she'd never marry. My husband has said that if she ever did marry it would be to a very special person.\"\n\n\"I can see why,\" Veronica nodded.\n\n\"We seem to have gotten a bit off track. Scott have you finished the inventory?\" asked Evie, again scooting forward causing her skirt to slide even further up her legs clearly revealing her taupe g-string to us. I handed the laptop to her and she put it on the coffee table parting her knees a bit in the process. She began keying and after a few minutes said \"Ahh,\" and looked up.\n\n\"I've only seen such a close match once before. A few with strong correlations but other than you and one other couple none have been this close. You're very well suited for each other. If you remain sensitive to each other's needs, continue to communicate freely with each other, invest time to grow with each other along similar paths and keep your passion for the other aflame, I believe you'll have a long and happy marriage.\"\n\n\"Is the other couple happily married?\" I asked.\n\n\"Very happily married, very much in love,\" Evie replied.\n\nLooking into Veronica's happy eyes and smiling face she continued, \"The only divergence is that Veronica is strongly bi-sexual and you aren't at all Scott. The inventory indicates that you're both willing to explore your own sexuality and that you desire for your partner to do so as well. It indicates that you are willing to sacrifice or defer some of your own interests so that the other can grow emotionally, socially and professionally. This level of self-giving love is very commendable. Hmmm, both of you score low in the tendency toward the jealousy characteristic which means that both of you are not naturally prone to jealousy about the other. It also indicates your personality types though different, do fit nicely. Studies I've read indicate that your combination of personality types usually nicely mesh. Given that both of you have a natural self-giving nature the fit is even stronger.\n\n\"This inventory is not a guarantee or a predictor. It measures how you view yourselves, each other, your relationship goals and to a limited degree your desires at this point in time. Overall, what I see here is impressive. Matches like this sure make premarital counseling much easier and much shorter. Now, let's talk a bit about expectations and family.\" At Evie's prompting we were led into a conversation that elicited answers that didn't surprise either of us. We'd already discussed most of the matters early in our relationship.\n\nAs our short exchange about having children concluded Veronica asked, \"The other couple who was as close a match us, do you still keep track of them and is their marriage in keeping with what you observed.\" Seeing Evie glance down and blush Veronica added, \"Oh, I see. I'm happy for you.\"\n\nChanging topics Evie firmly spoke. \"About Carol, if you both think you can handle another adult, a female adult, in your household and bed and she's willing to give it a try you'll be engaging in polyamory. It'd be a shared love between more than two people and brings in complexities. I've known of couples who've had another woman live in their home for a period of time, but none were formalized with vows. I think the longest lasted a little over fifteen months. A factor may have been that none were expecting anything long term. That said, I've read stories of long-term happy marriages with multiple wives. I've just not personally met any, at least knowingly.\n\n\"Would Carol be considered an equal by you Veronica to your position in the home? And would she be viewed as an equal to Veronica by you Scott? Or would one be your primary love and partner, and the other secondary? I've known Carol for a good number of years and I never thought she'd ever settle down. She loves her freedom and independence, and she has a wild streak too. While she's often easy going, she has drive and a strong personality. There are times when she can be stubborn. You need to discuss with her how she'd feel taking a secondary position which I suspect would happen and which you are likely to expect Veronica. If Carol sees herself as an equal to Veronica in ruling the home you may find that you've added a blatant explosive element to your marriage. I can't see two women ruling the home or the bedroom. One should be significantly dominant in nature, which Veronica I believe you are naturally inclined to be but it would need to be more developed, while the other should be more subservient. For the peace of the home and the stability of the marriage, a clearly understood pecking order, if we can call it that, should be in place along with a clear division of responsibilities.\n\n\"Have you thought about the practical logistics of your bedroom life with a third person? Scott, how would you feel if the two women wanted to spend a night together without you? Or Veronica, what if Scott would want to spend a night alone with Carol...how would you feel?\n\n\"What happens if two want to be intimate but the third is not interested? Does the third watch, stay in the den watching television or reading and then crawl into bed later? Two spending the night together will happen. Frankly, while I don't ever see my husband and I being in such a relationship, I would expect to spend nights alone with him without the other woman. I'm certain she'd have the same emotional need to maintain her bond with her husband just as I would. And if she and I were lovers, which I would desire, I think we'd also want time to bond and express our love for each other without our husband present. Scott would you be willing to sleep alone while your two wives are affirming their love for each other and spending the night cuddled together without you?\n\n\"I read a story not long ago of a man in Texas in a marital situation with three women. The master suite is where he sleeps every night. The women have established a secondary bedroom decorated to their tastes where one or more may spend the night without their husband. Two or three times a week, one or more of the wives are sleeping in the secondary bedroom. Let me ask, will you have a master suite that's Scott's primary bedroom but a second bedroom with a more feminine d\u00e9cor for the nights when you ladies want to be alone or for when one wife is spending the night alone with Scott? Outside of making love, what happens when one is ill? I could go on and on but you're intelligent people and can see the various issues just from the handful of questions I just asked.\n\n\"You don't have to answer those questions right now, but there are several good books available. One which comes to mind is The Ethical Slut: A Guide to Infinite Sexual Possibilities which is a guide to polyamory, open relationships and other adventures. I suggest that you pick up a copy ... or you may borrow mine. I suggest that you give it a trial period before you make a formal commitment. I've never come close to the kind of relationship you're contemplating. While I know such a marriage can be healthy, dynamic and life-long for all those involved, and we have examples of such marriages throughout human history and across various cultures, it will take a great deal of work and self-giving from all parties. Though I certainly don't mind my husband being intimate with other women, I can't imagine sharing him with another woman in such a regular and more permanent basis. Yet I find myself excited by such a bold and loving relationship that you two are contemplating. Now then, the answer is unquestionably yes. I'll be glad and honored to officiate if you all decide it's for you,\" smiled Evie. \"But I will not do it as part of your legal ceremony. Also, Carol'll have to take the inventory and undergo premarital counseling too.\"\n\nShe then summarized and remarked that in watching us interact she knew we were deeply in love and full of respect for each other. In wrapping up she reaffirmed when the rehearsal was scheduled and made a note in her laptop and on her Blackberry. She also wanted to talk to our girls to determine their level of commitment and promised she wouldn't reveal the surprise ceremony we'd planned but she would through her conversations determine if they were ready to exchange vows. Veronica suggested that she'd have one or the other of them get in touch with her to discuss 'step-children in second marriages'. Evie agreed that would be a natural starting point and could easily move them into other areas.\n\nAs she stood to leave Evie asked if she could use the bathroom and as she walked out of the den to the first floor bath we both watched her shapely ass sway. \"You'd like to do her, wouldn't you? God I can tell how hard you are without even touching you,\" giggled Veronica.\n\n\"Yeah, but the question is who of us would like to fuck her first,\" I laughed.\n\nEvie came back into the room, unfettered breasts nicely moving under her sweater. \"What's going on by the pool?\" she asked as she looked through the kitchen sliding door.\n\n\"They're tearing down the garage to make room for a new addition that's going to be completed during our honeymoon, so as they say 'pardon our dust',\" I smiled.\n\n\"Make sure Katrina or Ashley call me, and please call me if you have any questions. That number's my cell.\"\n\nVeronica retrieved her coat from the hall closet and helped her on with it. As she did she couldn't help but smell her wonderful scent. As Evie shrugged on the coat Veronica smoothed her shoulders and arms and noticed that Evie seemed to shiver a bit.\n\n\"It's been a pleasure and I look forward to our next meeting,\" she said as she extended her hand to each of us.\n\nAs Evie drove out the driveway she noticed some of the trucks had signage on the sides which she recognized as some of the sub-contractors that her husband usually used.\n\nI embraced Veronica and asked, \"Rings for Carol? Ceremony with Carol?\"\n\n\"Let's wait on the ceremony 'til after our honeymoon. I don't mind giving her a ring, except for one condition,\" smiled Veronica.\n\n\"Which is?\"\n\n\"I know you could afford a moon rock now but it's got to be smaller than mine. Is that petty?\"\n\n\"No, and I understand. Evie's right that we need to think through the various dynamics and there needs to be some clearly understood ground rules. As for a pecking order, Carol needs to understand that you, my love, are the queen of the home and my life. While I love her, you my dear love are forever my queen and soul mate.\" Veronica kissed me on the lips and when the kiss ended I asked, \"Want to go on a quick shopping trip with me?\"\n\n\"To Dupree's?\"\n\n\"No,\" I said. \"To Schiller's to get a camera for Mary Claire.\"\n\n\"Any special reason?\" asked Veronica.\n\n\"No, she's a good photographer so I thought I'd get her a professional model like mine. I'm sure they've improved over the last four or so years since I bought that one. Do you want one too?\" I asked.\n\n\"Sure, how about a high end point and shoot?\"\n\n\"Whatever you desire. Maybe one for Carol too.\"\n\n\"Let me change my top and skirt and we'll go.\"\n\n\"I like what you're wearing but okay. I can always get under your skirt,\" I grinned pulling her to me and caressing her firm ass. \"Want some help?\"\n\n\"Always,\" she swished her ass at me as she walked in front of me up the stairs.\n\nShe took off her blouse and skirt and replaced them with a white cotton blouse and knee length linen skirt. \"I'm surprised you didn't throw me on the bed and fuck my brains out,\" grinned Veronica as I watched her finish with the zipper on her skirt.\n\n\"Not on an empty stomach, we'll probably have time before Marty gets here. That is today isn't it?\"\n\nWe were in the foyer when Mary Claire walked in the front door with an irritated look on her face.\n\n\"What's with the downcast look sweetheart,\" asked Veronica.\n\n\"I was supposed to meet someone today at ten and got brushed off. Where're you going?\"\n\n\"Schiller's . Want to come?\"\n\n\"Sure, right now?\"\n\nOn the drive to Schiller's Veronica and I discussed Evie. She began chiding me that perhaps she'd like to do me as much as I'd like to do her. \"Well, I did notice that she appears to be wearing a nipple ring on the left side. I wonder if she has two or just one. There must be a reason why she was braless. The leg show; whose benefit was that for?\" I smiled.\n\n\"At the end of our last visit she encouraged me to wear a short skirt and she said she would wear one as well, so I guess for both of us,\" concluded Veronica.\n\n\"That really was a short skirt. I noticed it when I brought in the coffee. She has very nice legs and a delightfully full ass. When I first met her at the university she had on a long skirt and flats. She's a pretty woman,\" piped up Mary Claire. \"I didn't realize she was a minister. As a humanist I don't care much for religion or clergy, but I do like her.\"\n\n\"Until yesterday I was of the same mind Mary Claire. When I heard her preach, her message was simple, not moralizing and challenged us to have a generous and kind spirit towards others. I appreciated the simple yet moving reminder,\" I added.\n\n\"I wonder how many children she has? I got the impression that Abi and Sam were the only two but obviously there's Gloria as well. I guess we'll find out in due time,\" said Veronica.\n\nAs we drove I took this opportunity to outline a job for Lauren and suggest that we talk to her.\n\nVeronica chided me, \"You just want to get into her pants.\"\n\n\"No. You could always talk her into that. I'm serious. Someone with her background could be very valuable to us, tax planning and preparation, her many CPA skills, personal trainer, martial arts we could use someone like that. We're going to start a charitable foundation and she could be a good director. I think Grace has been swept away by some family problems. I don't expect to hear from her until the end of the week. Anyway the scope of the job as I see it is beyond Grace's capabilities.\"\n\nWe walked into Schiller's and I led my two women back to the Nikon department where we were greeted by my regular salesman, Al Froebel. After meeting Veronica, my wife, and Mary Claire, he asked, \"I'm glad you dropped by Scott, your cameras are probably eighty percent finished. Do you want to take some with you today?\"\n\n\"No, we're going to do a heavy remodel at the house and I'd like to pick them up after the twenty-sixth of next month. I want to get a couple of Nikons like mine and Veronica wants a high end point and shoot.\"\n\nHe took two boxed Nikons out of the case behind him and set them on the counter. He also stacked up two filters for each, six memory cards and one long zoom lens. He then put six display cameras on the counter and began explaining the features of each.\n\n\"Who're the Nikons for Dad,\" asked Mary Claire.\n\n\"One for you, and one for Carol,\" I smiled.\n\n\"You're kidding. ... No you're not are you? Wow, thanks and it's not even my birthday,\" said Mary Claire hugging me and kissing my cheek.\n\nVeronica and Mary Claire took a couple of the demonstrator models outside and took several pictures of each other and cars in the parking lot. After viewing the shots in the display they brought the cameras back in and asked for eight by ten prints of twelve of the shots from the cameras. Within ten minutes the prints were ready and all three of us agreed that the recommended model was quite acceptable.\n\nAl scanned everything and the final total on the screen was just shy of fifteen thousand five hundred dollars. I paid with my debit card and Al bagged everything and walked out to the car with us and thanked me again. I reminded him that after the twenty-sixth I'd be equipping my new studio and asked if he'd put together a list of equipment keeping in mind that all my lights needed to be replaced and the studio dimensions would be about twenty by forty with a ten foot ceiling.\n\n\"Did you call Dupree?\" asked Veronica.\n\n\"No, will you call him now?\" and I handed her my phone.\n\nAfter talking briefly with his clerk she said, \"Thanks, we'll get them there. ... No that's okay, just leave them for Scott. ... Thanks again, bye.\"\n\n\"They're being delivered as we speak. The courier is taking them to your office so we can go get them now, but I'm hungry. Can you bring them home tomorrow or run down there after you drop me off. Marty's supposed to arrive at two and it's already twelve forty-five. Pull into that Subway up there.\"\n\nWe went in and ordered, ate inside and Mary Claire perused the Nikon manual while Veronica and I tried to remember some of the unfinished items on Carol's list. \"By the way, Mary Claire, Carol's moving in with us. She'd like to help you cook, too.\"\n\n\"For how long, not cooking, but for how long is she moving in with us?\"\n\n\"At least until the wedding, then we'll see,\" replied Veronica.\n\n\"Hmm, we'll all enjoy that, she's a fun lady, and a good lover. Thanks again for the camera and stuff Dad. Not to look a gift horse in the mouth, but why?\" she smiled.\n\n\"You've shown a lot of talent while using mine, so to learn more I gave you a camera of equal quality to mine. You've got a great eye for composition, just like Veronica has one has for posing models. You both have talents that complement each other. When I get the studio equipped and running we can make it a family affair at least until you start classes,\" I explained.\n\nAfter getting in the car she asked, \"You didn't do it just to get into my panties, huh?\"\n\n\"Mary Claire! Of course not. He knows he can get into your panties just by dropping his zipper,\" Veronica laughed.\n\n\"Yeah, that's so right,\" agreed a broadly grinning Mary Claire.\n\nAfter I helped Veronica and Mary Claire get out I told them I was going to run by the office and get the rings and would be back a bit later, probably after Marty arrived. I told her to call me if she needed me to return home sooner. Mary Claire asked if she could go with me and before I could reply she was in the front seat grinning with her skirt very high on her thighs. Veronica leaned in and kissed us both and said, \"Drive carefully. That's a dangerous distraction sitting next to you.\"\n\nMary Claire's legs were as distracting as Veronica's but since it was daylight I had to be mindful of how high my fingers crept up her bare thigh.\n\nOn the drive she read portions of the Nikon manual aloud so I could help her interpret what they meant. She talked a bit more about wanting to go to college and she kept in physical contact with me by touching my arm, hand or neck. I can't imagine why her parents ignored her. She's a delightful, intelligent, entertaining, sexy young woman. Then I recalled that not long ago I was on the same road with Katrina, too busy with work and life to appreciate my own daughter.",
        "We parked in the garage and went through the lobby to the elevator. There were several of my young male employees just returning from lunch and there was certainly a lot of testosterone drifting Mary Claire's way. Many of them spoke to me as we got on the elevator. Finally I announced, \"This is Mary Claire my long lost daughter,\" laughing.\n\nWe approached Cheryl and she walked around the desk and hugged Mary Claire. \"So nice to see you again,\" she effused. \"Scott, I have your package locked in the safe, do you want it now? And, oh, Emerson wanted me to call you, but go on in.\"\n\n\"Yes, I'll take it when I leave. Is he alone?\" I asked.\n\n\"No, the new CFO from Citigroup is with him, but I think they're ready to break up,\" Cheryl replied.\n\nI walked in and as I did the man and the woman sitting on the couch across from Emerson rose. I extended my hand introducing myself to Claude Genervase and Margaret Wilson. I also introduced Mary Claire as my daughter.\n\n\"We look forward to a smooth transition on Wednesday morning,\" smiled Claude. \"Margaret's our EA and Cheryl's been very helpful. I understand that your long-term EA retired this morning. Everyone we've spoken to today has been helpful and gracious. You've run a very efficient and tight ship.\"\n\n\"Thanks, we've been picky about who we've employed, and it's paid off for us and our clients. Forgive me for interrupting and also for not being here earlier. A couple of pressing family matters needed my attention outside the office this morning. Do you need to spend some time with me now or would tomorrow morning work as well?\" I asked.\n\n\"Emerson and his wife have asked us to dinner tonight, Margaret and I, as well as Jack and Michael who're in your back office department now. I think tomorrow morning will be fine. I look forward to seeing you then, eight-thirty good?\" smiled Claude.\n\n\"Yes.\" I looked at Emerson and said, \"Cheryl said you wanted to talk to me?\"\n\nAs we entered my office Emerson closed the door, looked Mary Claire up and down and said, \"Nice to see you again sweetheart, thanks for yesterday. Can you and Veronica join us tonight? I'll change the reservation if you can. I'd be more comfortable with you there. Those are a sharp bunch of guys and I don't want to misspeak anything about some of the clients that you've handled on your own.\"\n\n\"We'll be there. Where and when?\"\n\n\"Seven. A private room at the club, so I guess I really don't need to change anything other than the number of chairs. I've got a lot of personal things to talk to you about as well, maybe the four of us could hang back after dinner? I've had Cheryl arrange a limo for them.\"\n\nI took out my cell and called Veronica. \"Hi, lover, up for a dinner out tonight? ... Four people from Citi, Emerson and Hazel. ... At the club at seven. ... Good. ... Just after we left, huh, well timing is everything. ... I've a few things to talk to Emerson about then I'll be home. ... I love you too, bye.\"\n\nEmerson and I talked for about an hour. As we did Mary Claire visited with Cheryl, and when I walked out of the office to leave Cheryl handed me the package from Dupree. \"Ooh, can I look?\" asked Mary Claire.\n\n\"As soon as we get home, I want Veronica to be the first to see them.\" I smiled.\n\n\"Yesterday was fun wasn't it? Do you suppose Hazel is going to loosen up more? If she does, can I let Emerson fuck me?\" asked Mary Claire with a coquettish look on her face.\n\n\"Hazel's change in the last week has been phenomenal. I hope she continues her liberation. And yes you may fuck Emerson, but make sure he's told Hazel and has her permission. You liked his dick yesterday, eh?\" I grinned.\n\n\"Very much, you seemed to enjoy Hazel's tits and Carol loved eating her out. When do we see them again? Soon?\"\n\nAs we parked on the gravel verge near the remains of the garage floor, I asked Mary Claire if she recognized the red Miata parked in the grass. Then I realized it must belong to Marty.\n\n##\n\nVeronica had changed back into the skirt and blouse she'd worn with Evie. Marty had arrived at two and after exchanging hugs and gentle ass touching, Veronica led her to the couch in the den. After offering and getting iced teas, Veronica sat next to Marty and as she turned her torso and legs to face Marty, her skirt rode way past the stocking top and exposed two inches of her bare thigh.\n\nMarty gasped and said, \"You have beautiful legs. You're such a beautiful woman.\"\n\n\"Thanks. You're dressed quite becomingly yourself. I like your hair styled down and flipped. Did you do something to bring out the red highlights? Your makeup so nicely emphasizes your eyes and I now see where Katrina got her beauty. Last time you were here you were dressed very casually, jeans, cross trainers. The high heels really make your legs look nice,\" smiled Veronica.\n\nMarty stood and while saying, \"May I?\" bent to grasp the hem of her knee length full skirt and began to lift it, not stopping at the tops of her dark tan seamed stockings but lifting it to her waist. Smiling she slowly turned revealing her black g-string, an ass that Veronica was just going to have to touch in the flesh, and an obviously shaved pussy.\n\n\"Your daughter certainly got her legs and ass from you too,\" sighed Veronica as she reached out and put her hand on the inside of Marty's thigh above the stocking top. Marty then spread her legs slightly as Veronica smelled her arousal and felt her warmth as she lightly touched the edge of her labia.\n\n\"Oh, my,\" smiled Marty. \"I think I got your attention. When last we met you surely got mine. I've worked on my appearance. I've been shopping.\" Veronica watched her swallow before Marty looked into her eyes and said, \"I'd like to share your bed.\"   \"We can do that. I'm surprised that you're so sexual. I was led to understand that you were on the edge of frigid when you and Scott were married,\" frowned Veronica.\n\n\"That was very true. Lots of water under the bridge since then. Is he coming home soon?\"\n\n\"Probably by four, why?\"\n\n\"There are many things I'd like to explain to both of you, and Katrina. With the help of a counselor friend who helped me in the past I've been evaluating my life since I got unengaged and I'd like to see if you think it's headed in the right direction. That last relationship kind of got me off track. Oh, don't worry,\" said Marty seeing a look of consternation on Veronica's face. \"I'm not looking to get him back. I think I'll like him better married to you. Katrina, in the few conversations we've had since you two got engaged, has sounded more alive and joyful than she ever has. She speaks in glowing terms about you and your daughter. I know she's in a home full of loving and caring and I don't want to do anything to change that.\"\n\nAt that Veronica stood and dragged her fingertips up Marty's g-string with enough pressure that Marty involuntarily twitched saying \"Oh, that's nice. Please, can we go to your bed now? I'd like to see you, all of you and I'd like you to see me. Would you like to do that?\" purred Marty. Standing next to Marty Veronica in four inch heels was three inches taller.\n\n\"God, you're aggressive. Is that new too?\" asked Veronica.\n\n\"Since meeting you two weeks ago and deciding that I'd like to make love to my ex-husband's future wife, yes it is. It took me since our last meeting to get up the courage to do this. I talked to some friends in Kansas City about how to do this. They recommended that I dress this way because you do. Perhaps you have some of the same fetishes that I left unfulfilled for Scott. You're bi, aren't you?\"\n\n\"Yes,\" cooed Veronica. \"Very much so.\" Taking Marty's hand she led her up the stairs and on the way up dropped her hand to fondle Marty's ass through her skirt.\n\nAs they entered the bedroom, Marty stopped to admire the bed and the carvings on the headboard. \"We call it Bryce Field,\" grinned Veronica as she touched the camera switch.\n\nSeeing the green light, Marty smiled and asked, \"You're going to film us? If you are, I'd like a copy.\" She raised her hands to Veronica's breasts and gently squeezed and asked, \"What kind of bra are you wearing? I felt bare nipples, but an underwire as well.\"\n\n\"Unbutton me and find out,\" smiled Veronica.\n\nAfter opening all the buttons Marty spread open the front of the blouse and gently touched Veronica's hardened nipples. \"Oh, I like that bra, what's it called?\"\n\n\"A half or shelf bra. Both Katrina and Ashley wear them as well, particularly when we dress up for an evening out or just around the house to catch Scott's attention.\"\n\n\"Do they wear stockings or pantyhose, heels too? Short skirts?\" asked Marty as she leaned into Veronica and gently kissed and lightly sucked each nipple.\n\n\"Mmmmm. Yes, to all three, sometimes no skirts. Been times when we've all been topless as well. And a couple of times, just high heels\"\n\n\"Just with the four of you?\" murmured Marty caressing one breast while licking the other like an ice cream cone.\n\n\"No not necessarily. Close friends have been here too. Emerson and his wife were here yesterday and we spent a couple of hours on the pool deck topless. There's just a lot of sexual freedom in our home. It's wonderful and your lips feel wonderful too. May I?\" asked Veronica reaching for Marty's blouse buttons. After unbuttoning them, she pulled it out of her waistband and admired the lacy sheer bra that covered Marty's small B cup breasts. Veronica pulled her to her and while kissing her unfastened her bra and slid it down Marty's arms.\n\n\"Very nice tits,\" remarked Veronica bending down a bit to take each nipple in her mouth.\n\n\"Where's the camera?\" asked Marty. \"I hope it's capturing all of this.\"\n\n\"There are three and the coverage is quite good,\" smiled Veronica pulling Marty into her and lifting her skirt to put her hands on Marty's bare ass.\n\n\"Unzip it. On the side, let it drop,\" purred Marty into Veronica's mouth.\n\nAs Veronica did she felt Marty pulling down her own zipper and felt her skirt sliding down. Veronica spun Marty to put her back against her and began caressing Marty's stomach as well as her breasts. Marty put her hands behind Veronica's neck and tilted her head back to kiss Veronica. As the kiss intensified Veronica put her fingers under the top of Marty's g-string and touched Marty's engorged clit with her fingertip.\n\n\"Oh, God, can we do this in a horizontal position before I fall down,\" groaned Marty pulling her g-string down and off. As Veronica released her to climb on the bed, she asked, \"Should we close the door?\"\n\n\"That won't stop anyone. We have free access to all the bedrooms in this house, just get up here with me,\" added Veronica sliding her g-string off.\n\nVeronica lightly pushed Marty into a prone position and began kissing and nibbling her down her chest and stomach before laving her very damp slit. She felt Marty touching her leg and accommodatingly turned and straddled Marty's face. After enjoying a mutual orgasm, they sat side by side to recover before they would enjoy each other again.\n\nWhen Mary Claire and I returned, she stayed outside looking for things to photograph. Seeing no one in the den or kitchen I headed up to our bedroom, watching Veronica leaning against the headboard with her hands in Marty's hair while being eaten, I quietly undressed.\n\nI quietly climbed behind her and swiftly entered a very wet pussy. As my pelvis hit against her ass she said into Veronica's pussy, \"I hope that's someone I know, feels good.\"\n\nHearing her voice triggered unpleasant recollections and I began forcefully and aggressively slamming into her. She began to whimper, \"Not so hard, not so hard.\" She stopped pleasuring Veronica and turned her head to see who it was. \"My God, Scott, please be gentle.\"\n\nI guess my frustrations from our broken marriage had taken over. I pulled out of her and roughly twisted her hips with a low growl to put her on her back next to Veronica who was looking at me with astonishment. As I swiftly entered Marty I saw the word \"Monica\" tattooed above her slit. I hated that name now and seeing it marking my ex inflamed me further. I was fucking her aggressively for at least thirty seconds before I looked into her eyes as I was pulling back to again roughly drive into her. I saw tears streaming down both sides of her face. I pulled all the way out and knelt between her legs and looked at Veronica who had an alarmed look on her face.\n\n\"Make love to her, she's Katrina's mother,\" softly said Veronica. \"You respect all women, now respect her.\"\n\nI bent over Marty resting on my hands while I softly kissed her and said, \"I'm so, so sorry. Forgive me.\" I felt like a cad.\n\n\"Only if you get back inside me,\" she half-smiled and raised her arms to me.\n\nWith her offer of forgiveness I reentered her. Veronica reached over, took her hand and began kissing it as I tenderly fucked Marty.\n\nTen minutes later, she came and grasped me to her chest and she was regaining her breath. \"Thank you both for inviting me here.\"\n\nA few minutes later I rolled to my back and Marty excused herself to go into the bathroom grabbing her purse on the way.\n\nI was still on my back and Veronica had just wrapped her hand around my cock when Katrina came in. Thinking I had just made love to Veronica she climbed on the bed and took me into her mouth. Katrina has developed a nice technique and just as I was about to fill her mouth Marty walked out of the bathroom. Since Katrina's ass was toward the bathroom door and her long hair was obscuring her face neither one saw the other. I came into Katrina's mouth as Marty, her makeup freshened, walked around the foot of the bed, wearing only her garter belt, stockings and heels and climbed on the bed. Katrina looked up while swallowing the last spurt of my come and with wide eyes said, \"Mom!\"\n\n\"Hi, baby,\" smiled Marty. \"Been fucking your Dad long?\"\n\nVeronica protectively pulled Katrina to her breasts and said, \"They've been loving each other for awhile, but no intercourse, not yet at least.\"\n\n\"Oh, Katrina, I'm so sorry I didn't mean that as a judgment, just a question. Please don't be upset with me.\"\n\n\"What are you doing here? Did Dad just fuck you? Was Mom here?\" Katrina asked rather loudly.\n\n\"Who fucked whom?\" asked Ashley as she came into the room.\n\n\"Fucking, who's fucking?\" asked Mary Claire walking into the room behind her and carrying her new camera. The front door slammed and I heard Carol's voice asking \"Where is everyone?\"\n\n\"Up here,\" called out Veronica. \"Fucking.\"\n\nMarty was getting a 'deer in the headlights' look as Carol walked in the room and they recognized each other. \"Hi, Carol,\" sheepishly said Marty.\n\n\"Hi, Cathleen, what a nice surprise,\" replied Carol.\n\nVeronica then scooted into a better sitting position against the headboard with her arm still around Katrina. She wryly asked, \"Okay, who else is here? The UPS lady? The mailman? Dave Hawks? Emerson? Invite 'em all in, it's a big bed.\"\n\n\"Marty, or is it Cathleen now?\" I asked. \"You've met Veronica, you know Carol obviously. The gorgeous blonde is Ashley, Veronica's daughter, soon to be mine and the outstanding brunette is Mary Claire Peters, a close friend of both girls and the two of us as well. Mary Claire pretty much lives here. Carol is in the process of moving in. I have a question. Who wants a glass of wine? And let's all either get dressed or undressed. My preference is undressed.\"\n\n\"I agree,\" said Veronica. \"Mary Claire would you go get a bottle or two of that nice 2002 Chardonnay we bought the other day and Ashley would you bring seven glasses, please.\" The two spun around and headed to the kitchen.\n\n\"I go by Cathleen Morris now, I have for the last three years. I guess I never told Katrina, and obviously didn't tell you, sorry. Since you called Veronica Mom, why don't you call me Cathleen,\" she smiled at Katrina.\n\nCarol began to undress and hang her clothes in our closet. \"Just shoes, Scott?\" she asked me.\n\n\"You know I'd enjoy that,\" I smiled.\n\n\"Are you sleeping with both these women? Mary Claire too? Both Ashley and Katrina? My God what a stud you've become!\" smiled Cathleen.\n\nThe wine and glasses were put on a nightstand and Mary Claire filled each glass as Ashley undressed. As Mary Claire was disrobing Cathleen moved to sit against the footboard Indian style with her bare pussy unashamedly displayed. Carol sat next to me and put an arm over my shoulder and her hand into Veronica's hair. When Ashley handed Katrina her glass she also handed her a folded piece of paper. After serving the wine Ashley sat next to Cathleen and Mary Claire sat on the other side of her.\n\nKatrina unfolded the piece of paper and silently read it. If you're going to try to seduce your Mom I want to watch.\n\n\"Cathleen, tell us about your life and how you know Carol. Wait. Didn't Erin ask me about a Cathleen Appleton Morris a few weeks ago Carol? It was after a lifestyle party I kind of remember. I was supposed to ask handsome if he had a sister. So I guess you're not his sister,\" grinned Veronica.\n\n\"Let me start a few years before we got divorced. I foolishly got involved with my dental hygienist who was a domineering person. She tricked me into saying some things I was feeling but hadn't admitted to Scott. She'd aroused my sexuality in ways that I wouldn't or hadn't let Scott try with me. I was afraid of procreative sex and of course with another woman it wasn't a concern. She taped me saying some awful things and sent the tape to Scott. He confronted me but I didn't deny them and that tore us apart. Seven weeks after our divorce Monica dumped me and crowed to Scott what she'd done. That's her name above my pussy. Someday I'll get it lasered off. Fortunately the letters aren't that large. After being lonely for a couple of months the father of one of Katrina's classmates approached me in the parking lot after a school event and asked if I'd meet him for lunch the next day.\"\n\n\"Who was that?\" asked Katrina. \"Was it Melissa Alexander's dad?\"\n\n\"Yes. You knew about it?\" asked Cathleen\n\n\"Most everyone in Melissa's circle knew. I didn't think anything about it. You were single and could do whatever you wanted. So what happened, you saw him for quite some time didn't you?\"\n\n\"Couple of years, yes. I'd see him and his wife Vivian occasionally at lifestyle gatherings as well as weekends and the occasional afternoon. Anyway during the two weeks when you lived with Scott, he'd come over three or four times and we'd fuck the evenings away. Our lunch meeting led to sex and after six months or so there was a knock at the door just as I'd finished blowing him on the couch. It was Vivian. She scared the shit out of me, but she was smiling and asked if she could come in. Eric was sitting on the couch with his dick in his hand as she walked in and asked to join us. That evening I had my first three-way, quite enjoyable. Sometime during the next three months he showed up with Melissa as well as Vivian. Eric did a credible job of servicing all three of us, and gave me an appreciation for young pussy.\" She paused to take a sip and let the last statement sink in.\n\nKatrina's eyes and facial expression showed she arrived at the same conclusion as Veronica and I. Setting the glass down Cathleen continued, \"Sometimes it was just Eric and Melissa and a few times just Melissa. I did learn to enjoy watching a hard cock going in and out of her's and Vivian's pussies. After some of the sessions I'd masturbate while imagining your Dad's dick going in and out of you Katrina. I'm sorry.\"\n\nVeronica interrupted, \"It's a fetish of mine too.\"\n\n\"When college classes ended in the late Spring Melissa's brother was home and he joined us. I remember the second day he joined us. It was a Saturday and all five of us were there. All three of us enjoyed DPs. That was my first and not my last by any means. The Alexanders were active with a lifestyle group that included Carol, her niece Erin and from time to time her brother and sister-in-law. I got to know them all quite intimately. A single woman is always welcome and the evening's admission is usually minimal for a single woman. It was at one of the gatherings that I met my ex-fianc\u00e9 and had no idea he was bi until the day I caught him. Up until that point he kept me reasonably satisfied since by then the Alexanders had moved to Chicago. In fact during our 'engagement' I stayed away from the gatherings. After I ran him out I went to the most recent one and saw Carol and Erin, made love to both of them.\"",
        "\"So, you're bi?\" asked Katrina.\n\n\"Yes, and I'll bet every one of the women on this bed are too. Judging from her smooth technique and energy I sure as hell am not the first woman Veronica's made love to.\"\n\n\"Mar.., er, Cathleen, it'll take me awhile to get used to that, you never used your middle name when we were married. There's a shareholders meeting Wednesday at ten at the country club. I'd like for you to be there to vote to approve the sale.\"\n\n\"Of your company? Oh, I guess I still have some of that stock don't I? Is it worth anything?\"\n\n\"Oh, a few bucks, yes. The three plus percent you have is worth thirteen million bucks. You'll have a transfer in cash of eighty-five percent of that before two o'clock on Wednesday into your checking account and a brokerage account has been opened for you at Edward Jones for the remaining fifteen percent in Citigroup stock which can be sold after thirty days. I recommend selling the Citigroup stock as soon as possible after the thirty days. It's not likely to hold its value over the coming year or two. It's trading in the 40 to 42 range currently but Emerson fears it could drop below 32 by year end and below 23 when Q3 results are projected next summer. If you don't know anyone else either Emerson or I would be glad to help you manage your funds and investments,\" I explained.\n\n\"Hold this Ashley,\" said Cathleen handing her the wine glass, and she rapidly knee walked across to me and kissed me. After breaking the kiss she kissed Veronica and Katrina as deeply as she had me.\n\n\"My God that's incredible. Veronica if I ask him for help will that concern you?\" frowned Cathleen.\n\n\"Nope, because he'll always tell me and besides I think I'd like to see more of you. Katrina and Ashley are getting celebratory rings during our wedding and I'd like you to be there. Carol has more details and if you need a dress, we'd like to take you shopping.\"\n\n\"I do, and I'd like that,\" she replied as she hugged Veronica.\n\n\"Mary Claire and Carol would you like to fix dinner? Scott and I have to leave for a dinner meeting with Emerson and Hazel and some guys from Citi. Look at the time. We need to shower, don't feel like you have to get up,\" smiled Veronica as she disentangled from Katrina's arm and Carol's hand. After getting off the bed she extended her hand to me.\n\n\"I didn't think you tasted like Mom when I sucked you dry,\" remarked Katrina as I climbed over her.\n\nAs Veronica and I went into the bathroom I noticed the circle of high heel clad but otherwise mostly nude women on my bed closing a bit.\n\nWhile we were showering, Ashley and Katrina sat with their arms around each other and Katrina began, \"Mom, er, Cathleen. Ashley and I are deeply in love and consider ourselves to be life partners in every sense of the word. It was love at first sight for both of us. I didn't tell you because I thought you'd freak, but after hearing your story I don't think you will. I hope I can have your blessings.\"\n\n\"Years ago, I would have, but now I wish you only peace and happiness. If you could, would you marry?\"\n\n\"In a heartbeat,\" smiled Ashley kissing Katrina. \"We're both bi but Scott is going to be our first man and then there are a few more we'd like to try on for size. Given what you just told us, I don't think that our desires and plans shock you.\"\n\n\"They don't and I hope you'll invite me to your bed when he does make love to you,\" broadly smiled Cathleen.\n\nI walked out of the bathroom to get a pair of boxers while Veronica was still drying her hair. \"Be careful when you go downstairs less than fully dressed, there may be some workmen still around the garage site or marking out the foundations for the additions,\" I remarked. \"I'll check for you,\" pulling on a pair of khakis I walked to the end of the hall outside the girl's bedroom and didn't see any cars on the drive or grass that didn't belong to us. I went downstairs and looked out the kitchen window and it appeared that they had indeed left for the day. For good measure I drew the curtains in the kitchen and pulled the drapes closed on the sliding door. Passing thru the living room, I pulled those drapes as well. When I got back upstairs I reminded all that there could be workmen outside between seven in the morning and seven at night.\n\nCarol and Mary Claire were talking about a dinner menu and Cathleen was trying to beg off but none of them were having any part of that. Finally as Veronica and I were ready to leave the five ladies had put on skirts and blouses along with their heels and followed us down the steps. It seemed to take a long time for us to leave because all five felt compelled to thoroughly kiss us goodbye. Veronica after getting in the car repaired her lipstick and pulled her skirt up to the tops of her stockings.   \"Two things, handsome,\" she said moving my hand to her thigh. \"I want to make sure that Cathleen gives Katrina away with you. Also I was surprised with your initial rough and aggressive fucking of her. I'm glad you stopped.\"\n\n\"I'm sorry about that, I truly am. I guess it was the first time I was able to release some pent-up emotions. They're released and I don't expect that you'll ever see that in me again. Are you good with her being in our bed, with me, I guess I'm asking.\"\n\n\"Handsome, you know that it's okay with me for you to take any number of women to bed. The fact that Cathleen is your ex doesn't make me wary of her stealing you back. Your time as a couple passed for both of you many years ago. She's a delightful person who gave me a wonderful series of orgasms with her fingers and mouth. I really hope we'll see her intimately again. I think we will especially if Katrina, Ashley and Mary Claire decide to seduce her,\" grinned Veronica.\n\n\"Do you think that's going to happen?\" I asked. She didn't answer but the look on her face said it all. I shouldn't have even asked.\n\nWe arrived at the club ten minutes before the limo bringing the Citi team arrived. Both Hazel and Veronica were dressed in tasteful knee length skirts and blouses, and both were wearing hose and heels. Emerson and I were in dress slacks wearing open collared shirts and blazers. We were chatting when the limo arrived and the driver stepped around to open the door. \"Hi, Lauren,\" I said.\n\n\"Oh, Hi, Mr Appleton. Small world, isn't it?\" she smiled back.\n\nMargaret Wilson was wearing a pencil skirt and had to hike it fairly high up her thighs to exit the back seat. I did notice a stocking welt line as Claude Genervase gave her a hand to help her out. Jack Knight and Michael Cook followed her out.\n\nThe four introduced themselves to our wives and I turned to look at Lauren who was patiently waiting to make sure that her passengers hadn't left anything behind. After she gave her card to Margaret I touched her arm as she began to walk past me and I said, \"I'm developing a job that you may be interested in. If you're interested in changing employment why don't you come by our home on Wednesday about two thirty with a copy of your resume?\"\n\n\"Of course. I look forward to it,\" she replied with a broad smile.\n\n##\n\nCathleen was leaning against the counter talking to Carol when Katrina asked her lean forward a bit, moved behind her and then pulled her back against her. Slowly she pulled her mother's blouse open before she began firmly caressing and squeezing her tits. \"I guess I got these from you as well, mine feel pretty much the same way just maybe a bit larger.\"\n\n\"Umm, you have a nice touch. Tell me about Mary Claire,\" asked Cathleen.\n\n\"She's an acquaintance from high school who played a bit of softball with us for the last couple of years. She came over one night with Cindy Monroe and wound up in the hot tub with us. Ashley, Cindy and I, that is. We were all topless but she wouldn't remove her bra. A few weeks later she came over for a swim party and did take off her top along with everyone else who was here. Dad was chaperoning and when Mom arrived she joined us as well. We all wound up on Bryce Field. She spent the night and the next day asked Dad to make her a woman. She lives here pretty much and regularly sleeps with Mom and Dad. In fact Dad's also fucked her mom. There's also Cindy, who currently works double shifts and usually spends the weekends with us. Carol is a long time lover of Mom's and wants to marry Mom and Dad. She's living with us until Mom and Dad get married, on the sixteenth.\"\n\nWhile enjoying a delightful meal and another glass of wine Katrina told Cathleen that she was going to spend the night 'bonding' with her and Ashley. After eating they adjourned to the couch in the den, Cathleen and Katrina snuggling topless at one end and Ashley and Mary Claire at the other end while Carol ran home to get some clothes. Ashley found the DVD of the first weekend at the pool and the DVD of the pool shoot with Carol. As these were playing Katrina and Cathleen were bare breast to bare breast with each other kissing. It wasn't long until Katrina had two fingers in Cathleen's sopping pussy and had her mother groaning \"Ohhh God\".\n\nWhen Carol returned Mary Claire and Ashley put on enough clothes to be presentable should anyone drive by as they were bringing in two armloads each. After hanging as much as they could in Veronica's closet they put the rest in the spare bedroom closet and chest of drawers. Carol and Mary Claire got involved on Bryce field and Ashley went into her own bedroom to await Katrina and Cathleen. Before too long and after Cathleen recovered from her second orgasm Katrina led her upstairs to her own bed.\n\nKatrina firmly instructed, \"Undress me, Cathleen, then yourself and get on the bed next to Ashley.\"\n\nWhile under the influence and dominance of Monica Cathleen's submissive desires had solidified to the point that she became very submissive. A character quirk of Cathleen's was her desire to be subservient to a dominant female rather than a male. During her torrid affair with Monica she was regularly called 'my bitch' by Monica. It was used so often that the term when spoken in a sexual context had became a trigger word in Cathleen's mind and she had proudly described herself as 'Monica's bitch'. The two young women were not aware that if another woman who Cathleen found exotic or highly attractive would address her as 'bitch' in a sexual context that all of Cathleen's passions and sexual urges would be directed to that female in hopes of being dominated by her.\n\nWatching the nude mother and daughter passionately kissing, caressing and penetrating one another with their fingers reminded Ashley of her own love-making with her mother. After disrobing, Ashley spread her thighs and then pulled Cathleen's back to her breasts and legs as Katrina lovingly kissed, licked and tongue fucked her mother's pussy. As Cathleen moaned with pleasure Ashley caressed Cathleen's breasts and pinched her nipples and thereby drove Cathleen's pleasure further.\n\nOnce when Cathleen heatedly turned to kiss Ashley, between their long kisses the younger woman loudly breathed, \"You're one hot bitch, aren't you?\"\n\nIn seconds Cathleen became even more aroused as she groaned, \"Yes\" to Ashley's question.\n\nPlayfully, yet with a commanding tone Katrina said, \"Well bitch, let Ashley enjoy the pleasure of your mouth and tongue. Her pussy may not be as young as you crave but it's young and wonderfully delicious too.\"\n\nObediently she quickly turned and eagerly lowered her head to Ashley's pussy and began fingering and licking her as Katrina adjusted and continued to pleasure her mother from behind.\n\nOn seeing the reaction from her mother, Katrina playfully smacked her mother's right ass cheek asking, \"Want something in your ass bitch?\"\n\nCathleen looked back and groaned, \"Ohh, God yes, please. Spank me harder.\"\n\nWith much greater force than the earlier light tap Katrina slapped each of Cathleen's ass cheeks twice. Cathleen moaned with each slap. As Katrina got up to go to the bathroom to retrieve Ashley's plug and lube she noticed that her mother was eating Ashley with renewed vigor. Ashley through partly hooded eyes caught her beloved's eyes and mouthed, \"Wow.\"\n\nUpon her return Katrina pressed the lubed plug against Cathleen's asshole. \"Mmmm, good, push it in slowly, mmm, just like that, ohhh God that's good,\" she exclaimed pushing her ass back at her daughter.\n\nAs she moved the plug back and forth a little Katrina's other hand caressed Cathleen's clit. As her two fingers traveled along the length of the rapidly breathing woman's pussy Katrina was amused by the degree of her mother's wetness.\n\n\"On your back bitch,\" Ashley commanded a minute or so later. Without any hesitation Cathleen obeyed. As Cathleen turned over Ashley lowered her pussy to the older woman's mouth while Katrina renewed her assault on her mother's dripping cunt with two of her fingers. After several more minutes Katrina removed the plug and inserted a third finger into her mother's highly responsive and heated pussy. Katrina was excited by the idea that her fingers were inside and pleasuring her mother from where she'd emerged as a baby.\n\nCathleen's energy and responsiveness to her daughter kept increasing. Ashley who'd been watching for over ten minutes while her lover fingered and orally pleasured Cathleen raised off of Cathleen. Ashley was surprised by the wild look and the sexual energy that was flowing across the older woman's face as she looked at her daughter. She was also mildly amused by what she was seeing on her beloved's face...My dear we are truly matched and mated for each other. I'm glad that you too are discovering that it's an amazing and a highly erotic delight to be playing with your own mother.\n\nWhen her wetted face was free of having Ashley's pussy driven into her mouth Cathleen excitedly groaned that she wanted to be Katrina and Ashley's bitch. As they fucked and pleasured each other the two girls kept playfully telling Cathleen that she was a hot, eager and enjoyable bitch. Ashley noticed how Katrina was increasingly taking the lead in ordering Cathleen and telling her \"You are really a hot and obedient bitch.\"\n\nEach time Katrina spoke those words Cathleen looked at her daughter, then either nodded or moaned a clear \"Yes.\"\n\nOver the following minutes as the older woman actively tried to pleasure the two girls. She pleaded repeatedly for them to make her their bitch. Katrina and Ashley at first deflected the pleading but thinking Cathleen was only playing a wild erotic game they began playing along and teased her to keep asking. They kept pushing the older woman into more subservient positions and acts as of pleasuring them. With four of her daughter's fingers deep within her and soon followed by part of Katrina's palm Catherine was driven through her tenth powerful orgasm.\n\nComing off that climax Cathleen again cried out that she needed to be their bitch. When they teased her that if she's going to be their bitch she'd have their names tattooed over Monica's name, she moaned, \"Anything.\"\n\nWhen Cathleen pleaded for the sixth or seventh time to be their bitch Katrina played along by saying, \"Okay, you can be our bitch.\" Cathleen groaned in joy as she again started to quiver through a climax.\n\nAshley reinforced their tease, \"Bitch, do you get turned on by the idea of being a bitch to your own daughter and getting her name proudly and permanently tattooed above your pussy?\"\n\nCathleen cried aloud, \"Yes,\" as another rolling climax wracked her body and she collapsed exhausted.\n\nLooking at each other the girls shrugged when they noticed a few tears flow from the corners of Cathleen's closed eyes and that with a little grin she had a peaceful look upon her face. Unwittingly the girls had tapped into Cathleen's trigger word and thereby complicated her life. As they cuddled against the older woman's sleeping form, the two girls were not aware that they hadn't been playing a game and were now over their heads in a world that was unfamiliar to them.\n\n##\n\nThe dinner went smoothly, Emerson and I answered a multitude of questions and they all made copious notes. At about ten, they were ready to call it a night and Margaret called Lauren. As we watched them leave Emerson said, \"Let's have a drink shall we.\" As we turned to walk back in Veronica linked her arm through Emerson's and Hazel did the same to mine. \"Margaret's going to fuck at least one of them tonight,\" remarked Veronica. \"From the way she was looking at Michael and him at her, I think he's going to be the lucky guy. The way Jack was looking at her, I don't think it'll be him.\"\n\nSixteen days later Emerson and I were surprised when Midwest Capital announced that Margaret was given a senior management position. We learned about a year later that not only did Margaret fuck Michael that night but had been doing so for about a week prior to closing and their affair continued for the coming months. In retrospect it wasn't a very good idea. Michael, who traded bonds in Citi's bond department, had just been promoted to be the managing officer of Midwest Capital and would be above Jack. He had the highest position in the new company and thereby the greatest power at that moment to staff and structure the company as he desired. Though talented and skilled, for her six years with Citigroup Margaret had used recreational sex as a way to advance professionally from being a secretary to a managerial position.\n\nJack had been her lover back East and didn't take well to her becoming his boss' lover. Jack had developed some feelings for her, so much so that for a while he thought they might get married. Jack felt used and personally hurt when she unexpectedly ended their relationship.\n\nUnfortunately for Margaret, Michael was fired the following April for over buying a few firms that were heavily inventoried in subprime loans and derivatives, and thereby adding to Citi's woes rather than helping insolate the bank from bad debt. Michael was not a major player in building Citi's exposure but he and a few others were senior enough as well as vulnerable enough to be offered up by senior management as initial sacrificial lambs to Citi's Board and shareholders. Two days after Michael was dismissed, Jack was promoted into his position. Subsequently when a security tape six weeks later showed Margaret having sex with two young male interns in a car in the parking garage, she was summarily dismissed. Not only did Jack not protect her, he moved the response to the next level by rejecting the recommendation that she be retained with severe disciplinary action and reassigned, he ordered her fired with cause.\n\nWe walked into the dining room and took a small table in the corner. Veronica sat next to Emerson and Hazel next to me across the table from them. \"That went well,\" opined Emerson. \"No surprises in their questions.\"\n\n\"Nor in our answers,\" I said. \"I guess we need to get our stuff out of our offices tomorrow. I had mine boxed up this morning.\"\n\n\"So I noticed. I had Cheryl arrange the same for me just after you left this afternoon.\"\n\nAfter ordering drinks Veronica's hand dropped to Emerson's lap and her arm was slowly moving. Mine dropped to Hazel's and she slid her skirt up so I could lightly caress the inside of her bare thigh above her stocking top with my finger tips. After the waiter brought our wine we returned to enjoying the other's spouse.\n\nEmerson told us about Kim's reaction to his proposition and asked for some suggestions on 'courting' his daughter. Veronica suggested taking her out several times for dinner at well appointed restaurants, sometimes followed by a theatre performances or a movie. Hazel suggested that sometimes they should just walk hand-in-hand in parks. Veronica also suggested that he should go all out, giving her flowers, candy, jewelry and other meaningful gifts. She also suggested that he take her on a shopping spree or two. Even though Kim could buy anything she wanted, it was the thought that mattered. My fianc\u00e9e informed Emerson that if done right taking Kim on a wild shopping spree that would include intimate apparel and sexy skirts, dresses, shoes and tops would be an exciting experience for Kim. When Veronica said that, I made a mental note to take each woman in my home on her own shopping spree.",
        "Hazel suggested that he not neglect Gwen and that he should also take her on a date or two, or even more. As a surprised Emerson looked at his wife he joked, \"Right, that's as likely to happen as you asking Gwen out on a date or two too.\"\n\nMy business partner's jaw dropped when his wife smiled, \"I'll be taking her out on more than one or two dates.\" She paused for impact and grinned, \"Our first one's next Monday night. Around the time you take Kim on her shopping spree I think I'll do the same for Gwen.\"\n\nVeronica advised both Emerson and Hazel, \"When you're out on your dates, touch and stroke your date's arm from time to time to maintain a connection, hold her hand in the restaurant, or at the show and as you walk together. Open their car doors.\" Looking at Hazel she continued, \"Yes Hazel, that means taking the lead like a man. Open restaurant doors for her and allow her to enter first. Both of you need to take time to learn about each of them. You need to get to know Kim not as your daughter but as a vibrant vivacious woman who you love as a woman and partner. May I also suggest that you too Hazel should date Kim.\" I noticed Hazel's breath caught for a moment.\n\n\"Emerson, find out what Kim's been doing since she moved out, her dreams and what she wants to do in the future. Tell her what you and Hazel have been up to, what's next in your lives. Hazel, do the same with your date. Get to know her, her past, her dreams and goals. Don't worry about the physical aspects or rushing into being intimate. Listen with your heart as much if not more so than with your ears. Hazel, do the same with Kim.\n\n\"Don't rush to have some short term fun. I'd encourage you to take the long term view. I suspect you will both want them to play a special part in your life for the rest of your lives. Therefore, don't move anywhere close to intimacy until they are both more than willing to take that step with both of you.\" As Veronica was talking her nails were caressing Emerson's woody, so I'm not sure that he heard every word. Veronica wasn't sure either so she squeezed him to catch his attention, \"As I said, don't come close to bedding either of them until they're both ready for that step. When your young ladies are ready, they'll let you know.\"\n\nHazel excitedly added, \"I'm excited that Gwen wants to take me out as well and live a fantasy that she told me about yesterday.\"\n\n\"And she's going to be a fun date?\" smiled Emerson.\n\n\"They both'll be. I'm going to enjoy hearing all about your dates,\" I laughed.\n\n\"Don't get so jovial at his expense,\" smiled my fianc\u00e9e. \"Hazel and Emerson dating those two women is a wonderful idea. I think you should do the same with all your other women, daughters included. I should date Cindy and Mary Claire too, even though we're well past the intimacy point. Hazel, are you up for a double date, you and Gwen, and me and Cindy or Mary Claire?\"\n\n\"I'll call Gwen in the morning to see if she if she's willing too,\" agreed Hazel.\n\n\"By the way, I really enjoyed yesterday afternoon,\" said Veronica as she looked at Emerson. \"You've got nice hands Emerson. I'd like a repeat performance, but our pool is out of commission for the rest of the month. However, Scott and I really don't need the pool to be undressed with friends, do we handsome?\"\n\n\"No, and I doubt if Hazel does either. Mary Claire gives great head doesn't she? So do both our girls. And they're eager to give you both the pleasure of their talented tongues and hands,\" I smiled.\n\n\"Handsome taught them everything they know about sucking and I taught them how to please a woman, so if either of you want to take advantage of our skills, we'd just love to share them with you.\" Saying that Veronica firmly grasped and squeezed Emerson's cock just before my finger slipped under Hazel's g-string to touch her damp labia. They both jumped a bit and laughed.\n\nOur conversation stayed in a sexual vein until we decided that we either leave or throw Veronica on a table and take her up on her offer for us all to ravish her. We walked hand-in-hand to the valet stand with our respective partner. As we walked along Hazel promised to call Veronica the next morning about getting together to start planning our retirement RV trip. When our cars arrived I kissed Hazel and Emerson kissed Veronica and we departed.\n\nAs we pulled away I complemented Veronica on how she listened to and advised Emerson and Hazel. I told her she would've made a wonderful counselor.\n\nShortly after, on the way home Veronica pulled my hand against her wet pussy and told me that she really, really needed to get fucked.\n\n\"By me, or by Emerson?\"\n\n\"Both of you, but for tonight by you,\" she sighed pulling her arm across my chest and kissing my earlobe.\n\nCathleen's Miata was still on the edge of the driveway as were Carol's yellow Mustang and Mary Claire's blue Cavalier. \"Hmm, full house tonight,\" I remarked as I opened Veronica's door.\n\nThe house was dark as we let ourselves in. As I glanced into the den, the TV screen had an image of Carol topless in wet pantyhose frozen on it. I switched it off and we went upstairs. Carol and Mary Claire were entangled with one another and asleep on Bryce Field. Crossing the hallway I looked in the girls' bedroom and by the moonlight shining in the window I saw three nude females similarly entangled in their bed.\n\nVeronica walked up behind me as I looked at our two daughters and my ex-wife soundly asleep cuddled together. Hugging me from behind and looking over my shoulder she quietly said, \"Handsome, you need to talk privately with Cathleen. The look in your eyes scared me and her. She deserves an apology and an explanation of why you roughly fucked her. She also needs to understand how deeply she hurt you. I suspect that when she understands your pain that she'll find a way to express her sorrow in a meaningful way. Then you both can come together and start to heal ... and if that involves you spending a day or a night or two alone with her, or taking her away on a one or two night trip, you have more than my permission. You have my encouragement. You need to do this for her... and for yourself. Scott, you need to be at peace with the mother of your child and she with you. And by the way, I'm not threatened by any lingering feelings you have for her. I think it'll do you both a world of good that as you make love to her, and I mean make love to her and not just fuck her, that you tell her that you do still have loving feelings for her.\"\n\nHer natural counseling skills were again revealed. Her insights into others and sensitivity to their needs deepened my appreciation for the woman I was marrying. There was no doubt in my mind that I was marrying a generous, insightful, sensuous woman who was well outside my league. I was a most fortunate man. I knew she was right about Cathleen. I said I'd forgiven her but there was still some unexpressed anger that I was still suppressing. I feared that there was still more waiting to come out. She was also right that I still cared for Cathleen which is why she was one of the two beneficiaries of my life insurance policy, that is until I added Veronica and Ashley. I sighed deeply and allowed my nodding head to speak for my silent lips and heart. As we walked back to the master bedroom the love of my life put her head on my shoulder.\n\nVeronica and I quietly undressed and as soon as I lay down she impaled herself on my cock. As she rode me she would from time to time lean down to graze my chest with her amazing nipples and whisper in my ear, \"Fuck me, Emerson, fuck me.\" Her whispered statement increased my excitement which brought a lustful smile to her heated face.\n\nAs we were coming Carol stirred, looked at us as I held Veronica to my chest with my cock still in her, reached her hand over and put a finger on my lips and said \"I love you both.\"\n\nI kissed her finger and Veronica kissed the back of her hand. As I softened and fell out of my fianc\u00e9e she rolled off me, sat up and pulled the sheet and blankets over the four of us. Within minutes I fell asleep with Veronica in my arms feeling content and at peace that I'd spent another day in heaven with an angel.\n\nDear readers I hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers."
    ],
    "authorname": "Reindeer58",
    "tags": [
        "stockings",
        "heels"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-36"
}