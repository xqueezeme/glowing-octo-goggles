{
    "title": "Succubus Summoning 211",
    "pages": [
        "Verd\u00e9 was waiting for Phil and N\u00ffte as they reached the top of the steps. The succubus sat in an armchair as if posing for a seedy fashion photographer. Her diaphanous green robes were arranged artfully around her.\n\n\"I see you've taken care of one of the intruders,\" she said, noticing the blood smeared all over Phil.\n\nPhil's expression was downcast. He felt as terrible as he looked.\n\n\"That wasn't the plan,\" Phil said. \"We were trying to rescue him.\"\n\nVerd\u00e9 arched a finely pencilled eyebrow. \"Why would you do that?\" she asked.\n\n\"They're his fellow students from that ridiculous college,\" N\u00ffte said. \"He seems to think they're his friends.\"\n\nVerd\u00e9 put a hand to her mouth. \"Oh, I didn't know.\"\n\nPhil grimaced. \"I take it that means the one in the forest is beyond rescue.\"\n\nVerd\u00e9 nodded her head sadly. \"He threw a fireball at me, so I led him through a field of puff boobs. He fell on one.\"\n\nPhil guessed that meant 'beyond rescue'. Souls didn't escape once Verd\u00e9's plants caught them.\n\n\"What about yours?\" Verd\u00e9 asked. \"I'm guessing from the blood you failed to rescue them.\"\n\n\"He slapped me,\" N\u00ffte said.\n\nVerd\u00e9 raise both eyebrows and her eyes widened. \"That was . . . foolish,\" she said as if shocked anyone would even consider carrying out such an action.\n\n\"He realised that. At the end.\"\n\nVerd\u00e9 got up out of her chair. She looked to be favouring her left side. N\u00ffte stared at her with piercing black eyes.\n\n\"You seem to be healing slower than normal,\" she stated.\n\n\"My energy levels are a little low,\" Verd\u00e9 said. \"I'll find a nice young man to . . .\" she glanced at Phil. \"I'll meditate to recover them later.\"\n\n\"Come to my room after,\" N\u00ffte said. \"We have things to discuss.\"\n\nVerd\u00e9 seemed reluctant to meet N\u00ffte's abyssal-eyed gaze.\n\nWhat was that about? Phil thought.\n\n\"What about the other two students?\" he asked.\n\nN\u00ffte turned to him. \"They'll be okay . . . so long as they don't do anything foolish.\"\n\n* * * *\n\nThe succubus before him was blazing with power. Flames flickered all over her body. They looked impressive, but were merely parlour tricks compared to the power Darvill sensed emanating from her. It felt like a tangible force.\n\nDarvill wanted it.\n\nForget the sex. He wanted the knowledge\u2014the power\u2014she could teach him.\n\nAnd for a moment, a long one, he was tempted.\n\nThen he noticed the poly-Oc daemon sitting on his shoulder had gone very quiet. Normally it was constantly shifting around as it tried to look at everything. Now it was still . . . expectant.\n\nAnd then he understood.\n\nCalmly, Darvill carved the Exhalzangz'gn Flambastinaa sigil into his palm. Red blood welled up out of the cuts. Darvill knew the flames Rosa was playing with were sentient and came from the Elemental Plane of Consumas Infernum. He placed his bloody palm flat on the ground and banished them as he would any other intruding daemon. The burning torches died down and flickered out. The same happened to the flames dancing all over the succubus's body. His banishment would keep them gone for at least an hour.\n\n\"Thanks for your offer,\" he said, \"but I must regretfully decline. I'm not advanced enough to be able to assimilate the knowledge and power you wish to gift me. It would destroy me.\"\n\nHe ran an affectionate hand over the eye stalks of the poly-Oc sitting on his shoulder.\n\n\"My poly-Oc here is enough. It might take me a little longer, but I'll learn what I need from my own studies. I can be patient.\"\n\n\"Very well,\" Rosa said. She didn't seem happy about it, but she moved out of his path.\n\n\"Now tell me where you're holding my friend,\" Darvill ordered.\n\n\"Through there, up the stairs and straight down the corridor,\" she said, pointing to the door in the right wall behind her couch. \"You won't like what you find.\"\n\nHe gave the succubus a wide berth as he walked to the exit. She took a little half step towards him as he went by.\n\n\"Are you sure you don't want a quick blowjob?\" she asked.\n\nThere was an awkward pause.\n\n\"Um, no thanks,\" Darvill said. He left the room.\n\nAfter he left, Rosa cursed loudly and creatively. She summoned up a fireball and set the bed on fire.\n\n\"Why did I have to get the smart one,\" she moaned. \"I really wanted a fuck.\"\n\n* * * *\n\nPhil heard singing\u2014a child's nursery rhyme that featured lots of ra ra ras\u2014as they entered C\u03adr\u03bcl\u0259a's part of the castle. They found her in a playroom tucked away from the main corridor. The walls were brightly painted and were covered in murals of playful cartoon figures. At first glance it looked cheery. At second glance Phil realised something was off. When he looked more closely he realised the cartoon characters were devouring each other.\n\nC\u03adr\u03bcl\u0259a sat cross-legged on the floor. Her arms were up in the air and she swayed her upper body as if dancing to the song she was singing. Sitting across from her was a small cone of brown flesh with a large mouth as its only discernible feature. The fleshy tip bobbed back and forth as if it was dancing along with C\u03adr\u03bcl\u0259a.\n\n\"Oh hello,\" C\u03adr\u03bcl\u0259a said, noticing Phil. \"Mr G dropped by to play with me.\"\n\n\"Mr G?\"\n\nPhil was confused. He'd met Mr G. He was a daemon that looked like a French waiter and lived in a weird dimension full of giant worms.\n\n\"Isn't that a minor nebrit?\"\n\nIt looked very similar to the minor nebrit that was always perched on Herbie Higgins' broad shoulder.\n\n\"All daemons from the Dominion of Gluttony are Mr G,\" N\u00ffte explained. \"They're all maws leading to the Grand Belly.\"\n\nThe minor nebrit had no recognisable features other than a big mouth filled with oversized teeth. Despite this, Phil could have sworn the thing was smiling at him in recognition. The teeth gnashed together and it made odd warbling sounds while spraying slobber.\n\n\"Mr G says hi,\" C\u03adr\u03bcl\u0259a said.\n\n\"Hi,\" Phil said. \"I don't suppose you can help me out. I'm looking for a human warlock. He carries another one of you on his shoulder.\"\n\nC\u03adr\u03bcl\u0259a put a finger to her lips and her forehead creased up in concentration. \"I think I did see a warlock wandering around here earlier. A big fellow. Smelt a little funny.\"\n\n\"Yes, that sounds like Herbie. Do you know where he went?\"\n\n\"Hmm, let me think.\"\n\nShe let out a loud belch. She put a hand to her mouth and flushed in embarrassment.\n\n\"Pardon me,\" she said.\n\nThe cone of flesh belched as well. The noise was deeper and far louder than something its size should be capable of making.\n\n\"And pardon Mr G,\" C\u03adr\u03bcl\u0259a said.\n\nShe put her finger on her lips and once again her forehead was creased in concentration. She shook her head.\n\n\"No, sorry,\" she said.\n\nShe gave an apologetic shrug.\n\nThe cone of flesh shrugged as well. It was not an easy gesture to pull off without arms and shoulders, but the minor nebrit managed it.\n\nC\u03adr\u03bcl\u0259a went back to her strange version of Pat-a-cake with Mr G.\n\n\"He's gone,\" Verd\u00e9 whispered in his ear.\n\nPhil was already reaching the same conclusion. The minor nebrit looked remarkably similar to Herbie's daemon. So similar, in fact, they were probably one and the same daemon.\n\nPhil looked at the twisted cartoons on the wall and decided he was probably better off not knowing what had happened to Herbie Higgins.\n\n\"C\u03adr\u03bcl\u0259a?\" Verd\u00e9 interrupted her game. \"Are there any other students from Master's college still present in the castle?\"\n\n\"Alive ones,\" N\u00ffte clarified.\n\nC\u03adr\u03bcl\u0259a stopped her game. \"Bye bye, Mr G.\" She gave the pile of flesh a little wave.\n\nThen, right before Phil's astonished gaze, the minor nebrit started to eat itself. The jaws worked up and down and it curled up in a ball that grew smaller and smaller as it ate more of itself, until it simply popped out of existence.\n\nC\u03adr\u03bcl\u0259a stood up and skipped over to them. She paused and her eyes became unfocused as if she was focusing on images only she could see.\n\n\"Yes, one,\" she said. \"But he's about to face Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n.\"\n\n* * * *\n\nDarvill reached the top of the stairs and entered a long passageway. A line of stone arches resembling windows ran along each wall. The arches didn't look out onto anything; the view was obscured by flaps of glossy white material\u2014some kind of rubber. The latex sheets swayed and bulged and initially Darvill thought this must be a corridor exposed to the outside elements, maybe a bridge between two towers. Then he realised the motions were co-ordinated\u2014like lungs drawing breath. As he walked down the corridor he caught movement in the corner of his eye. Ripples ran through the glossy white material. Ripples that resolved into faces and hands. They melted away the moment he turned to look at them directly.\n\nUp ahead the corridor terminated in a strange obstruction. It resembled a giant sphincter or iris, but was made out of the same glossy white rubber rather than any kind of biological material.\n\nDarvill checked his portable soul divination apparatus. It told him Gary was on the other side of that door, if it was a door.\n\nHe approached and the door opened up like an iris. Revealed on the other side was a large white chamber. It contained beds, couches and other furniture whose purpose was primarily pleasure. Everything was covered in a layer of glossy white latex. He noticed there was no visible gap between furniture and the floor, as though all the beds and loungers he saw had been extruded from the floor beneath.\n\nAt the end of the room a succubus in white sat in a massive, overstuffed chair that resembled a throne in both dimensions and placement. He recognised her. It was the same succubus Gary had been infatuated with. She'd changed. Her long silky hair was pure white and a complex series of horns\u2014like those of an elk\u2014were threaded through it. She no longer resembled a trashy porn star in a fetish nurse outfit. She looked regal . . . powerful.\n\nDarvill saw no one else in the room. He checked his portable soul divination apparatus. It pointed directly at the daemon sitting on the throne.\n\nHe wished it hadn't.\n\n\"I've come for Gary Dever,\" Darvill said. \"Return him to me.\"\n\nThe succubus in white ignored his demand. She looked at the artefact in his hand. \"Is that an Aqui-animus divination apparatus?\"\n\nDarvill nodded.\n\n\"I'm sorry,\" the succubus said. \"Those have never worked particularly well around me.\"\n\nDarvill drew his knife and prepared to slice into his arms to activate the most powerful offensive magic he knew. \"I don't want a fight,\" he said. \"Give me Dever and we'll both leave without any trouble.\"\n\n\"No, you don't want a fight,\" the succubus said.\n\nShe looked at Darvill standing defiantly before her.\n\n\"You need to see something,\" she said.\n\nShe sighed and pushed her breasts and belly outwards. Her latex outfit\u2014if it was an outfit, Darvill suspected it was her skin\u2014rippled as a commotion took place underneath. Tiny hands followed by equally small faces pushed out against the malleable rubber. They pushed out and then subsided, as if the succubus was cycling through them in search of one particular soul. She found it and Darvill recognised Gary's face. Gary pushed out as if trying to force his way through a thick sheet of elastic. His arms and most of his upper body emerged from the succubus's stomach as if an unnatural fission was taking place.\n\nDarvill's excitement faded as he saw more of Gary's body. The shape of the head was wrong\u2014deformed, partially melted. The same was true of his hands. The fingers weren't right\u2014they looked like softened wax. Gary's face broke the surface and Darvill saw there was nothing there. The eyes were blank, dead. There was no light there. No life. No soul. Gary didn't recognise him. The malformed face gibbered nonsensically.\n\nWater welled up in Darvill's eyes.\n\nThe daemon saw he understood. She flexed her amorphous body and Gary was pulled back down into her as if caught in a quagmire. The rippling commotions faded away until there was only the succubus, looking radiantly perfect as she sat on her throne.\n\n\"You friend is gone,\" she said. \"Even if you had the necessary power to force me to return him to you, all I can give you are his remnants\u2014little more than carrion that would fall apart in your hands.\"\n\n\"Then I came here\u2014risked the lives and souls of my friends\u2014for nothing.\"\n\n\"Not for nothing,\" the succubus said. \"You have grown considerably as a warlock. Calli-Scitu-Oc is very pleased with your progress.\" She smiled at the poly-Oc perched on Darvill's shoulder.\n\nDarvill's poly-Oc had a name? Darvill thought that was a weakness lesser warlocks indulged in\u2014giving their daemon familiars pet names. Darvill hadn't. It was a poly-Oc, nothing more than a common familiar.\n\nThen he looked across to the poly-Oc sitting on his shoulder, saw the way it looked back at him, and understood.\n\n\"It appears I've been operating under an erroneous set of assumptions,\" he said.\n\nMost of his knowledge, nearly everything he knew, had been obtained from reading books. He saw now that most of it was wrong. A single glance from Calli-Scitu-Oc told him that.\n\nThe succubus smiled at him. He could see why they were regarded as creatures of near-irresistible temptation. That temptation emanated from her like a burning spotlight. He was relieved she had chosen not to turn it on him.\n\n\"What about the others?\"\n\n\"They did not possess sufficient strength of character.\"\n\nThe voice came from behind him. Darvill turned and saw a small group of succubi had entered the room. He recognised Rosa and Verd\u00e9, and the succubus that looked like a stern dominatrix. There was also a succubus he hadn't seen before\u2014a little girl with horns and spiky blue hair. Despite looking like a child, she had the oldest eyes Darvill had ever seen, older even than both the succubus in black and the succubus in white. In the middle of them, still dressed in his ratty old robes, was Phil Rowling.\n\n* * * *\n\n\"If it's any consolation, your bringing them here did not change anything. This was always going to be their fate,\" N\u00ffte said to Darvill.\n\nPhil hadn't visited this chamber before. Everything in the room was covered in glossy white latex. When he wasn't looking at it directly, the latex seemed to shift and bulge as if something was trapped on the other side. It reminded him uncomfortably of the souls he'd seen trying to push out through Nurse Honey's nurse outfit.\n\nAt least Darvill was still alive. That was a plus.\n\nThe other student nodded his head at N\u00ffte's words. \"Can someone show me the way back to Earth?\" he asked.\n\n\"I'll do it!\" C\u03adr\u03bcl\u0259a said. She skipped forwards and took Darvill's hand.\n\n\"I'm really sorry,\" Phil said to Darvill as he walked past.\n\n\"There's nothing to apologise for,\" Darvill said. \"The choices and decisions were theirs to make.\"\n\nHe gave Phil a friendly fist bump on the shoulder.\n\n\"See you back at college.\"\n\nHe left the room with C\u03adr\u03bcl\u0259a and the white iris door closed behind them.\n\n\"No fair,\" Rosa said with an unhappy pout. \"Why did I have to get the smart one? Now I'm all frustrated.\"\n\n\"A promising prospect,\" Nurse Honey said. Her horns had disappeared and her hair had returned to its usual blonde colour. \"He might develop into a fine warlock.\"\n\n\"Needs to lose some of that arrogance,\" N\u00ffte said. \"Today will have helped him.\"\n\n\"He could have at least let me give him a blowjob,\" Rosa complained.\n\n\"You look tired,\" Verd\u00e9 said to Phil.\n\n\"It's been a long day,\" Phil said.\n\nSince waking up he'd seen one of N\u00ffte's ghoulish collections; fought a spider daemon; ran around the castle in search of his fellow students; had sex with a succubus covered in the freshly-spilled blood of one of those students. Rest would be good. Therapy might also be needed.\n\nVerd\u00e9 went behind him and started to gently knead the meat of his shoulders. \"You need a little pampering,\" she said.\n\nHer nose wrinkled.\n\n\"And a good clean up,\" she added.\n\nRosa's ears pricked up. \"Giving our warlock a good pampering, I like that idea. Mmm, my pussy will give you a really nice pampering.\"\n\nShe started to walk towards Phil . . .\n\n. . . and was intercepted by N\u00ffte. The other succubus put an arm around her waist, squeezed her tight to her, and steered her away towards the exit.\n\n\"Mine was a little too young to fully appreciate the talents of a succubus,\" N\u00ffte said to Rosa, \"so I had some fun with our master instead. I think we should let him have a quiet night to recuperate.\"\n\n\"But . . . but . . .\" Rosa said to no avail as N\u00ffte guided her away.\n\n\"Let's get you cleaned up,\" Verd\u00e9 said.\n\nShe took him down to the opulent bathing area, put him under a hot shower to sluice away the abattoir remnants of Joey Chalk, and then lightly sponged him all over until he felt fresh and clean. Well, clean at least.\n\n\"Did they have to die?\" he asked Verd\u00e9 as she walked him back to his room.\n\n\"You've all chosen a difficult path to walk,\" she said. \"Those that don't possess the requisite strength and ability will not make it to the end. That's the way it's always been.\"\n\nThat sounded cold to Phil, yet Verd\u00e9 had said it as though it was perfectly natural. Maybe to daemons it was. Phil didn't think he'd ever get used it and he doubted this would be the last occurrence.\n\nVerd\u00e9 blew him a tingling kiss and then glided away down the corridor. Phil entered his room. It was in darkness.\n\nStrange. He normally pulled aside the black sheet he used to block out the bright pink sky from the window when he got up at whatever felt like morning.\n\nIt had been one of those days. He must have forgotten and there wasn't any opportunity to do it later. He didn't even bother to make any light. He took his stinky robes off and tossed them into the corner. Then he dived backwards onto his bed. This was one of those rare occasions when he was glad the bed was as ludicrously big and soft as it was.\n\nHe didn't land on it. Instead he landed on some sticky filaments that were maybe suspended an inch or so above it.\n\n. . . sticky filaments that felt suspiciously like a giant web.\n\n. . . that looked like a giant web.\n\nHe heard giggling out in the darkness.\n\n\"Look at what's fallen into my little web,\" L'mactia said.\n\n* * * *\n\n\"You don't look very happy,\" the daemon that looked like a little girl asked as they walked deeper into the castle. She'd given her name as C\u03adr\u03bcl\u0259a.\n\n\"I led my friends into hell and they all got killed. Aside from that everything is peachy,\" Darvill said.\n\n\"But you're about to leave with your life and soul intact. That's a big achievement for a novice warlock,\" C\u03adr\u03bcl\u0259a said, bright and breezy like the little girl she resembled.\n\nDarvill supposed it was. Then he remembered the others and he wanted to vomit. They were going to form a secret cabal to sweep away the crusty old order. He'd been young and very very stupid.\n\nC\u03adr\u03bcl\u0259a led him into a children's playroom. Or at least what he'd first thought was a children's playroom. On closer inspection he realised the toys scattered around the room had more in common with torture devices. Childcare as designed by Clive Barker. Creepy girl, Darvill thought.\n\nThere was one item in the room that looked out of place. There was a door that didn't match the rest of the decor. It was plain in comparison to the rest of the room and positioned in a place where you wouldn't expect a door to be. It looked similar to the doors in the dormitory area of Wargsnouts.\n\n\"It's through there,\" C\u03adr\u03bcl\u0259a said, pointing to the door.\n\nDarvill opened it and saw Phil's bedroom at Wargsnouts on the other side. He stepped through and was relieved to be back on Earth. His trip to hell had been a chastening experience.\n\nC\u03adr\u03bcl\u0259a waved at him from the other side of the door.\n\n\"I have to stay here,\" she said. \"I'm not allowed to enter your world. Yet.\"\n\nDarvill looked back at the little girl with centuries-old eyes. Did Rowling even know what he'd summoned?\n\nHe closed the door behind him.\n\n\"Fresh start,\" he said to Calli-Scitu-Oc.",
        "* * * *\n\nPhil heard L'mactia's words. He felt the sticky clutch of her web beneath him. His response was immediate.\n\n\"Immolatum nida Flambastinaai!\"\n\n. . . and nothing happened.\n\nHe didn't feel that sense of opening up inside or the joyous rush of sentient flame pouring out into him. Instead the energies were drawn from his body and dissipated out across the web.\n\nL'mactia giggled.\n\n\"It won't work,\" she said. \"We took the time to prepare your room for our visit. It's so annoying when the prey summons other daemons to disrupt the fun!\"\n\nPhil looked around and as his eyes accustomed to the gloom he saw the whole room was festooned in thick cobweb. His bedroom had been converted into something resembling the silk-lined lair of trapdoor spider. And he'd blundered right into it like a stupid cricket.\n\n\"Verd\u00e9!\" he called out.\n\nHe hoped she hadn't yet walked out of earshot. Not that it mattered. He saw an odd glow on the walls and recognised it as a globe of silence. Succubi and similar daemons used it when they didn't want any interruptions while playing with their prey. No sounds would leave this room.\n\nPhil heard movement\u2014stealthy scuttles\u2014and realised L'mactia hadn't been referring to arachnes in general when she said we. She'd brought friends.\n\nThere were two other arachnes in the room with them. One had long flowing red hair; the other had a silky white bob. Both had the same bulbous black abdomens of orb web spiders as L'mactia. The spider daemon with white hair skittered across the ceiling above Phil. The redhead made a circuit of the walls. They trailed glistening strands of silk from their abdomens. When the strands met they flashed blue and then faded back down to a residual ethereal glow. It looked like a circuit had been completed. \n\n\"It's done,\" the redhead said.\n\n\"They won't sense we're here, but they might spot his absence and suspect something is wrong,\" the white-haired spider daemon said. \"You'll need to be quick, L'mactia.\"\n\nL'mactia rose up at the end of Phil's bed. The shadowy gloom was a better fit for her gothic beauty. She was naked and her pale skin was almost luminescent in the darkness. Her rising up between his legs, large curvy breasts bared, would have been a highly erotic image to Phil had he not known what was below her waist. Her eyes\u2014and this included the additional red orbs clustered around her temples\u2014looked down on him with unnatural longing. Her long jointed foreleg reached over, flicked aside Phil's robes and exposed his crotch.\n\n\"You shouldn't have spared me,\" she said.\n\n\"I'm aware of that now,\" Phil said.\n\nThe Scrote had warned him warlocks needed to be merciless otherwise their opponents would return to fight again. He knew it and yet he hadn't been able to do it. This was all his fault. He had no excuses. He knew how this world worked, and yet he'd been too chicken to make the correct decision. There was no one else to blame for this sorry development but him.\n\n\"I'm an idiot and weak,\" Phil said.\n\nHe tested the strength of the web beneath him. His arms remained stuck fast to the sticky silk.\n\n\"Mercy is a rare quality in our world,\" L'mactia said. \"My kind have little use or understanding of it. Our weakness.\" She gently stroked his side.\n\nFrom Phil's perspective it didn't seem like much of a weakness. He was the one stuck in the web, about to be eaten . . . or worse.\n\nL'mactia held out her hands and motioned to the other two spider daemons. \"These are my sisters\u2014L'katipia . . . \" She turned to the white-haired arachne. \". . . and L'hassia.\" She waved towards the red-haired arachne.\n\nL'hassia came down from the wall and walked towards Phil. Like L'mactia she was naked from the waist up and her skin was ghostly pale. Her face looked younger than L'mactia's and she seemed more impish, mischievous. Her most striking features were her hair and lips. Her hair flowed down from her shoulders like strands of glittering molten lava. It was long enough to cover her exposed breasts. Her lips drew Phil's eye. Not only were they plump and sensual, they were an extravagant red in colour and glistened moistly.\n\n\"So this is the powerful warlock. He doesn't look very impressive.\" Phil looked up. L'katipia, the arachne with white hair, had descended down from the ceiling on a silvery thread spooled from the tip of her bulbous black abdomen. Her most striking feature was her chest. Her boobs were big, spherical and topped with candy-pink areole. Her arms were folded beneath them as she regarded Phil with haughty scepticism.\n\n\"Looks can be deceiving,\" L'hassia said.\n\nThe web trembled beneath Phil as L'hassia climbed on. Her face appeared in front of him, framed by waves of flame-coloured hair. She stared at him with bright interest. Phil's focus was again drawn to her lips\u2014glossy, sensual and ever so kissable.\n\nL'hassia turned back to L'mactia. \"Can I?\" she asked.\n\nL'mactia nodded. \"But not too much.\"\n\nL'hassia turned back to Phil. She leaned closer. \"Mmm, I'm going to snog your face right off,\" she breathed.\n\nHer luscious red lips plumped up as she pouted them in preparation for a kiss. Phil couldn't look anywhere else. His gaze was fixed and gaffed like a caught fish. Those red lips, wet with a glistening sheen, drew closer and closer and Phil's heart quickened in his chest. L'hassia loosely wound her arms around him and pressed her lips against his. He felt their moistness, felt that moistness seep through his skin and trigger a burst of pleasure. He felt his blood surge to meet her. She held him there in a long, lazy kiss that took his breath away.\n\nLiterally.\n\nHe felt her chest swell up against him as she inhaled. He felt a strange sensation in his throat. It felt like he was regurgitating, but with none of the negative sensations. This felt pleasant. And natural. The feeling of bliss was comparable to the sensations of orgasm when expelling semen from the body.\n\nThis wasn't semen. This was his energy. She was literally taking his breath away.\n\nRealising what was happening, he struggled and tried to break off the kiss. L'hassia responded by holding him tighter and sucking harder.\n\nShe could empty her prey like this, Phil realised with horror. They would drown in the pleasures of her kiss while she drew all the energy from their body until nothing was left but an empty husk.\n\nL'hassia ended the kiss long before then. She leant back and smacked her lips together.\n\n\"Ooo, our sister is right. There's definitely more to this one. You should taste him, sister,\" she said to L'katipia.\n\n\"I'd rather suck from here,\" L'katipia said.\n\nShe sent down a long leg and hooked it underneath Phil. The tip gently prodded against his anus, sending warm shivers tickling through his body.\n\n\"This one is mine,\" L'mactia said.\n\nThe web swayed as she climbed up and stood astride Phil with her many jointed legs. The other two arachne deferred to her and retreated to the edges of the room.\n\n\"Mmm, I still remember the taste of your semen inside me,\" L'mactia said. \"My silks will feel so pleasant against your skin.\"\n\nHer big black abdomen throbbed and pulsed in a way Phil knew was loathsome, but still caused a thrill of anticipation to run through him. Lewd organic squishy sounds emanated from within.\n\nPhil struggled harder against the web. No use. He was stuck just as firmly as any fly with the misfortune to fly into a spider's web. He tried shouting out various spells\u2014dismissals, fireballs\u2014to no avail. The energies were drawn from him and dissipated across the web before they could manifest.\n\nL'mactia stood over him and laughed. \"Why fight so hard?\"\n\n\"Um, because you're going to kill me,\" Phil replied.\n\nL'mactia shook her head. \"I have other plans for you.\"\n\nShe reared up and exposed the spinneret at the end of her abdomen. There was a lewd, burbling sound and gooey silk sprayed out of the tip in a thick, billowing wave. She didn't form it into threads this time. Instead it rolled out in soft flowing clouds that enveloped Phil. She gave a loud sigh as if in the grip of orgiastic release and squirted more and more until Phil was lying on a thick fluffy layer softer than any mattress.\n\nShe moved over his body, directed her spinneret and squirted until most of Phil's body was buried beneath fluffed-up clouds of silk. The only parts of his body left uncovered were his face and groin. He felt luxurious softness all around him and while he wasn't bound as such, the touch of the silk had a strange effect on him. He felt unnaturally relaxed. It was hard to concentrate, his limbs were floppy and unresponsive, and his loins pulsed with urgent need. Within the cocoon of soft silks L'mactia had spun around him, Phil was as immobile as if she'd tied him up with steel ropes.\n\n\"That's better,\" L'mactia said. \"I want you nice and comfortable.\"\n\nSo she could take her time and leisurely drain him, Phil thought. He could do nothing. His cock had turned traitor and stuck up from his cocooned body like a flagpole. She moved up over him, lowered the tip of her abdomen and drew his erection up inside her. Her big black abdomen pulsed and Phil's erection was enveloped in a warm gooey mass of molten silk. She rolled it up and down his shaft, stroking his arousal higher and higher until he was thrumming like a tightened piano wire. Her abdomen pulsed again and she puffed the sticky hoop of silk down his shaft until if formed a pillow around the root. Then she released Phil's cock.\n\nThis surprised him.\n\n\"I didn't come here for revenge,\" L'mactia said. \"That's the weakness of your kind. We see it again and again when one of you summons one of us to settle one trifling dispute or another. It seems wasteful to us, but as it gives us a constant supply of souls to feast upon we say nothing.\"\n\nL'mactia backed down Phil's body until her face was level with us. She was different. On the previous occasions he'd encountered her she'd been icy cool. Professional. Now he sensed a trembling anticipation about her, as if strong emotions were bubbling away beneath the surface and she was struggling to keep them in check.\n\n\"I came here because I want to mate with you,\" L'mactia said. Two chitinous plates slid aside and revealed the over-plump labia of her pussy.\n\nThat really surprised him.\n\n\"When it's time, we seek out a strong male to father our offspring. You bested me in combat. Your seed will give me many strong daughters.\"\n\nHer segmented legs went through the pillows of silk and hugged him to her. Her plush labia gaped open. She was about to engulf his member when she paused.\n\n\"Mutual consent is important to your kind. It's different for us. We rarely care if our partners are willing or not. I don't think this would be fair for you, not after you showed me mercy earlier. Will you\u2014\"\n\nShe didn't get a chance to finish her request.\n\n\"L'mactia!\" L'hassia said.\n\n\"Don't you dare ask this human for permission,\" L'katipia said. \"Not after the risks we've taken for you.\"\n\n\"It's not our way,\" L'hassia said.\n\n\"If you accept this human's refusal I'll eat your husk myself,\" L'katipia said.\n\nL'mactia nodded and turned back to Phil with a sad expression on her face. \"They're right. It's not our way. Please understand.\"\n\nHer fleshy labia engulfed the head of his cock and she slowly slid down his shaft. He was drawn up into a warm muscular tunnel as her legs wrapped tighter around him. She sank down on him until the entrance to her vagina met the sticky pillow of silk she'd deposited around the root of his cock and their sexes were glued together. She let out a low sigh of pleasure.\n\nThere was none of the thrusting back and forth typical of most sex. L'mactia was content to lie on top of him with his full length all the way inside her to the root. She hugged him tight to her body and her voluptuous breasts pressed into the silk cocoon wrapped around his chest.\n\n\"Sex with an arachne is different.\" L'mactia's voice was a husky whisper in his ear.\n\nBands of muscle within her vaginal walls contracted and gripped Phil's erection.\n\n\"Our partners usually aren't able to move.\"\n\nPhil felt her vagina move around him, gently tugging on his cock.\n\n\"So our bodies use other means to generate erotic friction.\"\n\nHer bloated abdomen slowly pulsed. The flesh of her vagina squeezed up around his cock and tugged up and down in muscular waves. Even though Phil was bound and couldn't move, it felt as though he was plunging back and forth in her tight pussy.\n\n\"Relax,\" L'mactia sighed. \"I'll do the work. I'll pump that cum out of you.\"\n\nHer black abdomen throbbed. Inside it felt as though a soft hoop of flesh was stroking up and down his cock. Up. Down. Stroking until his arousal grew and grew and became irresistible.\n\n\"The first is always fast,\" L'mactia whispered. \"Don't fight it.\"\n\nPhil didn't think he could even if he wanted to. The muscular hoops within her pussy stroked him right to the brink. Sensing he was on the verge, she tightened her pussy and squeezed his cock. She drew him deeper within her until the swollen head of his penis passed through a tight orifice ringed with squishy flesh. Her abdomen swelled as if inhaling.\n\nPhil came. He wasn't sure if it was his body firing semen into her or her body sucking it out of him. It felt incredible either way.\n\nL'mactia sighed in pleasure.\n\n\"Ooo yes.\" She pressed her body tight to him.\n\nHer abdomen slowly throbbed and Phil's ejaculation became a continuous stream. She was definitely pumping it out of him.\n\n\"I need more seed than humans usually produce during sex,\" L'mactia said, \"but I won't take enough to harm you. I owe you that.\"\n\nShe pressed her moist red lips against his in a kiss. Phil drowned in sensual overload and the world went dark.\n\n* * * *\n\nPhil was woken the next morning by the succubi opening the door to the bedroom. He was still cocooned in fluffy clouds of silk, but at least he was alive and in possession of most of his bodily fluids.\n\n\"It looks like our Master had some visitors,\" Verd\u00e9 said as she looked around at the cobweb-festooned room.\n\n\"Those damn sneaky spiders,\" Rosa said. \"This is our territory.\"\n\n\"Um, can someone help me?\" Phil asked. \"A little stuck here.\"\n\n\"Ooo, come and feel how soft this pillow silk is,\" she said. \"You must have really turned her on,\" she said to Phil.\n\n\"I thought she'd come back to kill me,\" Phil said.\n\n\"Nah,\" Verd\u00e9 said. \"Arachnes aren't like that. They don't hold grudges or kill for personal reasons. They leave that to the petty humans who summon them to settle petty disputes.\"\n\nShe got on the bed and lay alongside Phil on the fluffy silk. She stretched out and crossed her arms behind her head.\n\n\"Hmm, really comfy,\" she said. \"It's a rare honour for an arachne to choose you as a mate. They're notoriously picky.\"\n\n\"They don't seem as concerned that their mate chooses them back,\" Phil griped.\n\n\"Well, they're notorious for that too,\" Verd\u00e9 said.\n\n\"Some skanky spiders get to fuck him and I don't,\" Rosa complained. \"So unfair. When do I get a good fuck?\"\n\n\"That'll be the next book,\" C\u03adr\u03bcl\u0259a said, although no-one paid attention to her.\n\n\"I still don't know if I made the right decision,\" Phil said.\n\n\"She's alive. You're alive. You've just spent a pleasant night together.\" She looked at Phil and her expression was positively filthy. \"Don't tell me you didn't find it pleasurable.\"\n\nPhil said nothing. His cheeks reddened.\n\n\"Denizens of the Dominion of Lust might be a little . . . forceful when it comes to matters of consent, but we always make sure our partners enjoy it.\"\n\n\"And don't forget the children,\" C\u03adr\u03bcl\u0259a said, bouncing up to sit on the end of the bed. \"Master is going to be a father.\"\n\nOh. Yeah. That was the primary purpose of mating, Phil thought.\n\n\"See,\" Verd\u00e9 said. \"Not only did you have a night of hot sex, you got to sire some lovely daemon daughters as well.\"\n\n\"There is the small matter of what those children will do while growing up,\" Rosa said, an evil smile on her lips.\n\n\"Oh, that isn't important,\" Verd\u00e9 said.\n\n\"Wait, what?\" Phil said. \"No, tell me.\"\n\nHe'd fathered them. He had some responsibility here.\n\nIt fell to C\u03adr\u03bcl\u0259a to explain. \"Arachnes lay about a hundred or so eggs,\" she recited as if reading from a textbook. \"These hatch into arachlings, which then need to look for a suitable host for their next phase of development. They first enter the prospective host's dreams and from there enter the host's head. Once inside they slowly consume the host's brain and attain adulthood once the host's mind has been fully digested.\"\n\nHundreds? Phil felt queasy.\n\n\"I wouldn't worry about it too much,\" Verd\u00e9 said. \"She might not even lay the eggs in your world.\"\n\nThat didn't make Phil feel any better.\n\n\"He's so cute,\" Rosa said. \"It's adorable how he worries about people that don't even know or care he exists.\"\n\n\"You shouldn't torment yourself,\" C\u03adr\u03bcl\u0259a said. This time it was the old woman speaking out of the young girl's mouth. \"With each choice there is some good and some bad. It's a rare decision that is purely one or the other. You showed mercy. The consequences of that might cause future hardships for you and others. It might also provide new allies. Most of the time you get both.\"\n\n\"She really likes you, you know. L'mactia,\" Verd\u00e9 said.\n\n\"She does?\"\n\n\"Arachnes usually eat their partners after mating,\" Rosa explained.\n\nL'mactia hadn't eaten him. She'd left him alive for some reason. Before he could ask why, a ghostly hologram of The Scrote appeared in the room. As before he looked as though his projection was peering into an object Phil couldn't see.\n\n\"Ah there you are, boy,\" The Scrote said. \"Having fun in the circle of lust again, I see.\"\n\nHe noticed the webbing surrounding Phil.\n\n\"Whoa, playing with arachnes?\" he said. \"You might want to be careful there, boy. Don't be trying to run before you can walk.\"\n\nPhil wondered why no-one ever seemed to realise he never actually had a choice in these things.\n\n\"I'm pleased to see you're taking a hands-on approach to broadening your education. A good warlock always looks to stretch their horizons.\"\n\nPhil thought of Chalk and the others.\n\n\"That hasn't worked out too well for some of the other students,\" he said.\n\n\"Fuck 'em,\" The Scrote said. \"They shouldn't have come to Wargsnouts if they were that weak.\"\n\nBy now Phil was used to The Scrote's callous disregard for his students, but even that shocked him.\n\n\"You have to understand, boy,\" The Scrote said. \"Warlockry isn't like the world you came from. No-one will mollycoddle you here. If you fail, you die. That's the real natural law that governs the world.\n\n\"Anyway, you're needed back at the college. Stupid bureaucracy. I need to give you apprentices a test to assess how well you're progressing. Nothing for you to worry about, you're already way ahead of the other dullards, but bureaucracy is bureaucracy. Give me the Blood Fields of Schrecx-Ghor any day.\"\n\nWith that, the projection of The Scrote winked out.\n\nA surprise test, Phil thought. After the day and night he'd just been through it felt both surreal and irrelevant, like being asked to take a driving test after winning a Formula 1 Grand Prix.\n\n\"I really don't think that person is qualified to be a teacher,\" Verd\u00e9 said.\n\n\"Come now, Verd\u00e9,\" Rosa said. \"You heard what the greaseball said. We need to take Master back to the college for his test.\"\n\nRosa sounded awfully keen to take him back to Earth. He suspected she was thinking more about the 'yummy' students than getting him there in time for whatever exam The Scrote had planned.\n\nThe succubi headed for the door.\n\n\"Um.\" Phil tried to get their attention before they left. \"I'm still stuck.\"\n\nto be continued . . ."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "arachne",
        "demon",
        "warlock",
        "magic",
        "silk",
        "cocoon",
        "femdom",
        "monster girl",
        "spider web"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-211"
}