{
    "title": "The Letter",
    "pages": [
        "This one was a request. I had a fan mention that all my stories had transgender women falling for men which plays into my personal fantasies, so I usually just go there. Her request was for a story about a cross dresser that found a loving supporting female partner and I accepted the challenge.\n\nI hope you enjoy the story and as always, everybody's 18, only happy endings, etc., etc.\n\nPlease leave me a comment with your thoughts and suggestions.\n\n***\n\nCarla waved when the bell above the door to her shop chimed, giving me a big smile and motioning me to the couches off to the side. I had met her ten years ago when she walked through the bar I was in, slipping a ponytail tie and her business card on my table as I wrestled with my unruly mop of shoulder-length blonde hair; she hadn't said a word and two days later; I was in her chair.\n\nI had always been meticulous about my hair, getting it cut every six or eight months whether it needed it or not. On the day she had slipped me her card, it had been thirteen months. From then on, I had an appointment the fourth Thursday of every month at 12:30. If I missed, she let me know about it.\n\nI sat in her chair and she did her magic with my hair and we talked about our lives; we talked about our jobs, our hobbies, and our families, she heard everything about my kids and my wife and ultimately my divorce and I heard about her husband, her kids and then her divorce, for people that only saw each other for about an hour once a month, I felt like she knew me better than anyone else I knew; it was therapy with a haircut.\n\nFour years ago, that changed. I showed up and the first thing I noticed was her beautiful waist length auburn hair was a short bob cut, \"My god Carla, what did you do?\"\n\nShe handed me a pamphlet, 'WigsforKids', somewhere out there was a little girl fighting cancer with a beautiful head of auburn hair courtesy of Carla.\n\n\"Um, can guys do this? I mean, what an amazing cause.\" I handed the pamphlet back to her.\n\n\"Your hair? As fast as it grows, absolutely. It will still take about two years to grow it out to the length they like, and you'd still need to come in for trims, but sure,\" she smiled and winked at me in the mirror.\n\n\"Well, just a trim today then, ok?\"\n\nShe used a different shampoo and conditioner than she usually used, making sure I stocked up with her before I left; If I was going to donate my hair, she wanted to make sure I kept it perfect.\n\nToday would be the second time she had cut my hair for a donation. It was almost to the middle of my back, and I had to admit, I was going to miss it.\n\nCarla called me over, sweeping up around her chair from her previous customer, \"So, you ready to do this?\"\n\nI just smiled and nodded, settling into her chair. She spun me around and laid me back so she could wash my hair before she cut it. I laid back and closed my eyes as the warm water flowed over my head and she rubbed the fragrant shampoo in and work it into my scalp. There is very little more relaxing or more seductive than having someone else wash your hair. When they're a gorgeous redhead and their breasts are pressing into your chest, it's even better.\n\nConditioner was next and then the blow dry, after which, she tied it off into a tight ponytail at the base of my skull, put a second tie a little lower and made the cut. I had cringed last time, and this time was no different.\n\n\"Sixteen inches. You are a beast. They will love you for this.\" Carla leaned down and kissed me on the cheek.\n\nShe spent the next forty minutes making my remaining hair look outstanding, I got an update on her youngest Emily, and how she was doing in College Station, and I shared the latest on my job, I had finally proved myself or kissed the right ass and received a promotion to regional sales manager; no more travel unless it was necessary.\n\n\"So, Derailers at the Spoke tomorrow and Saturday, you up for a celebration?\" Carla was checking my hair one last time.\n\n\"Carla, after all these years, are you asking one of your customers out on a date? I thought that was the one line you wouldn't cross,\" I laughed at her.\n\n\"I still have scissors back here, so you better watch it,\" she laughed with me, \"Seriously, Emily is off to school, and it would just be nice to have something to do, and like I said, celebrate your promotion, and it's not like you've been filling my ear with girlfriend stories since you and Liz divorced.\"\n\n\"Fair enough, and I guess I have heard little on that front since Rob...,\" I didn't finish the sentence, I knew it was still a sore subject, her ex had run off with her business partner, her gay business partner.\n\n\"I'll take that as a yes. Now give me your phone and I'll add my personal info to your contact list for you. You can pick me up at seven.\"\n\nI headed back to work, and our receptionist Roselyn won the office pool on how many inches I would donate, guessing exactly 16. There was much gnashing of teeth and beating of chests and much laughter before Greg told us all to get back to work. He had guessed 15.5.\n\nFriday afternoon came, and I headed home to get ready, I was more nervous than I remembered being on my wedding day, sure, Carla and I had known each other for ten years, sure there were lots of things we didn't know, but I knew about her kids and she knew about mine, I knew about her ex and she knew about mine, I had watched her business flourish and then almost fail as she struggled to rebuild it after her partner ran off with her then husband, and she had weathered the stress of all the travel I had been doing as well as the degeneration of my marriage, it had just been one hour at a time, once a month, now I was going to be spending the entire evening with her; I hadn't been on a date in over twenty years.\n\nWe were going dancing, that I could do, in fact, I was actually pretty good, it had been the one thing that Liz and I did well together, and I love The Derailers, a staple of the Austin music scene, mostly cover music, but they always drew a crowd.\n\n\"Ok, I can do this,\" I checked myself over, nice blue paisley button down, clean Wranglers, ostrich boots. I was ready. I reached up and knocked on the door.\n\n\"Doors open, be down in a minute,\" I heard Carla shout from inside.\n\n\"Good evening ma'am, I'd like to talk to you about your relationship with our savior,\" I laid on a thick southern accent as I opened the door.\n\n\"Dammit Mike, not funny,\" she stuck her head around the corner at the top of the stairs and glared at me, her mascara in her hand.\n\n\"I know a good stylist if you need some help,\" I laughed again.\n\n\"Just shut up, ok, I'll be down in a couple of minutes. I had a client run long.\"\n\nIt was worth the wait, skintight jeans, camisole top with no evidence of a bra. Her hair flowed around her face, framing it perfectly. I had known her for ten years and had never seen her. My god, she was gorgeous. Rob had to be gay to leave a woman this beautiful. She floated down the stairs and all I could do was stare. Carla waltzed right up to me, wrapping her arms around my neck. She kissed me, \"I have wanted to do that for so long, you have no idea,\" she smiled as our lips parted.\n\n\"Wow.\" I shook my head and took a couple of deep breaths.\n\n\"Besides, it takes the pressure off, don't you think?\"\n\n\"Depends on what kind of pressure you're talking about.\" I made an exaggerated move to adjust my crotch.\n\n\"Stop it, let's go,\" she grinned and grabbed my hand, leading me out the door.\n\nWe danced every dance, taking a break only when the band did. Liz and I had danced together for years and weren't as smooth as Carla and me. It was almost like dancing with myself, except I got to watch Carla's smile and gaze into her big green eyes. The last dance was a waltz. When it finished, I spun her out and then back in, pulling her close and finding her lips with my own. We were still in the middle of the dancefloor when the lights came on.\n\n\"Come on guys,\" it was the bouncer. Carla and I laughed and headed out to my car, holding hands and acting like teenagers. Breakfast at Kirby Lane and then back to her house. It was almost four when I got Carla home.\n\nWithout a word, she unlocked her door, and biting her lip, turned to face me. \"Stay?\"\n\nWords failed me, so I just nodded. Following Carla inside and up to her bedroom, I could feel the anxiety radiating from her, the eagerness, the fear, and the lust that went with it shone from her eyes.\n\nThere was no hesitation. Carla pushed me onto the bed, pulling my boots off and scrambling at my pants while I unbuttoned my shirt. Her camisole was next, holy shit she had perfect breasts, she kicked her boots off as I worked at the button and zipper on her jeans, it took both of us to get them off, she gave me a dirty look when I giggled, I was just wondering how she got them on.\n\nMy boxers flew across the room, and I froze, watching mesmerized as Carla turned her back to me and slowly slid her panties down her long legs, stepping out of the small pool of soft fabric and turning slowly. I couldn't move, the look in her eyes, that amazing body, the way she slowly crawled up from the foot of the bed, like a big cat on the hunt, slowly up my body, stopping to kiss my chest and then my chin, and then my lips, I wrapped my arms around her, my lips meeting hers, our tongues continuing our dance, there were no two-steps, no waltzes, this was a dance born of the gods, primal, raw, a dance begun before time, a dance of eternity.\n\nMy lips left hers as I pushed her onto her back, sliding my kisses along her cheek to her ear and then down the side of her neck, taking my time, teasing, and playing with each spot, trying to convince her it was the most perfect, the most erotic spot on her body.\n\nCarla moaned, her hands roaming over my body as hers moved beneath me, her soft moans drifting to the heavens.\n\nSlowly down her collar bone to the valley between her perfect breasts, my hand finding one globe as my lips found the other, massaging and drawing tender circles around her nipple with my fingers as my tongue flicked the other and I sucked it into my mouth, biting it gently as I released it only to repeat the process as I shifted my kisses to her other breast.\n\nCarla's hands were in my hair, massaging my scalp as she arched her back and continued to moan, my tongue leaving a sloppy wet trail from her breasts down the center of her abdomen to her navel. Driving my tongue deep inside, I sucked hard, eliciting a gasp, \"My god Mike,\" I smiled to myself as I continued my journey.\n\nCarla's scent filled my head as I made my way to her prize, kissing the inside of her thighs and her perineum before I gently drew my tongue between her lips and flicked her swollen nib, pulling it into my mouth and sucking hard as small tremors spread through her body.\n\nI buried my face in her pleasure, spelling every word I could think of with my tongue as her hands gripped my hair and held me in place, her moans growing louder and louder her breath shorter and shorter until there was nothing but guttural noises left, \"My gaaaaaaawd Mike,\" she screamed as her body clenched, her back arched and spasms ripped through her arms and legs, laughing she collapsed and pulled me up to her eager lips, kissing me deeply.\n\n\"Can you please just fuck me now?\"\n\nThere was no passion in what came next, it was base, it was animalistic, it was something she and I both needed badly, something neither of us had experienced for a long time, driving inside her I showed no mercy, pounding as hard as I could, making her feel every thrust while she clawed at my back and bit into my shoulder. When I finally exploded inside her, something inside me broke. It felt as if chains that had been binding my soul shattered. I collapsed next to her, pulling her close. The last thing I remember was her sweet voice, \"Thank you Mike.\"\n\nI woke up alone in Carla's bed. I could smell the coffee from downstairs, so I got up, grabbed a satin robe from the bedpost, and went downstairs to find her. There was coffee and a note, but no Carla,\n\nMike,\n\nThank you for last night. Sorry to run off, but I have clients early today.\n\nMake yourself at home.\n\nSee you tonight at seven...\n\nCarla\n\nXOXO\n\nI poured a cup of coffee and went out onto her back porch to enjoy it. No matter what I did, the smile on my face wouldn't go away.\n\nCarla's yard was small and private, the hedges along the fence were in full bloom. I think it was honeysuckle, and full of bees. A pair of blue jays chased Squirrels through the trees. I could have sat here all day, but after enjoying the last of the coffee, decided against it.\n\nHanging the robe back where I found it, I made my way to the bathroom and stepped into the shower. Carla used the same products she sold me, so I had everything I needed. The shower felt good, and the aroma of the body wash reminded me of Carla.\n\nI found my clothes scattered all over the room along with Carla's, noticing that her bra and panties were not only very sexy, but they also matched, a powerful indicator that she had planned the whole thing. I got the feeling I was in trouble, but it was a trouble I decided I wanted.\n\nPicking up the panties, I couldn't resist, I lifted them to my nose and took a deep breath, the smell of her sex filled my head, and I just did it, it was one thing that had caused problems with me and Liz, other than her being bat shit crazy, she had caught me stealing her panties from the laundry and wearing them.\n\nThe satin and lace of Carla's panties felt nice as they slid up my legs, they were a little too soiled for me to wear and the reason they were in that condition made me smile, but the feeling was still there, that tinge of excitement mixed with a sense of comfort, that feeling I knew so well. Taking a deep breath and letting it out slowly, I pulled them off and tossed them in her hamper along with the rest of her clothes, picking mine up and getting dressed.\n\nI left Carla a note like the one she left me, pocketed hers and headed out the door, smiling about what a wonderful night it had been.\n\nLunch was a leisurely stop at one of my favorites, a little sandwich shop with outdoor seating and a good selection of beer, I spent a few hours thinking about Carla and the possibilities she represented and just watching people as they walked past before I headed home to get ready for round two, I had hit forty a few months ago and two nights in a row like last night was going to be a challenge, yup, a nap was definitely in order.\n\n6:59, I knocked on her door, clean jeans, a light blue chambray button down, and, of course, my ostrich boots. The smell of something wonderful filled my head when she opened the door, her smile filled my heart, and the kiss she gave me, well, it filled something too.\n\nThe something wonderful was shrimp in an alfredo sauce with a nice salad and an excellent glass of wine. We sat and ate and talked about last night, both a little embarrassed by our enthusiasm, and neither of us unhappy with where it had led. I helped with the dishes, and we took the rest of the wine out on her back porch.\n\n\"Can I ask you something?\" Carla put her hand on my arm. \"You and Liz, what happened? You're such a good guy, nice, smart, funny, handsome, and last night, oh shit, how did she let you go?\"\n\n\"She filed, I just said yes, gave her everything she asked for and did my best to move on.\"\n\nI really didn't like to talk about it and did my best to not badmouth my kid's mom and when people pressed about my divorce. It was difficult to not bring up the time she kicked me in the stomach while I was giving eight-week-old David a bath, or the rocking horse I had hand made for him she destroyed on Christmas eve or the broken finger that had forced me to remove my wedding ring for the one and only time I ever took it off; I would never put it back on.\n\n\"We should never have gotten married, I knew it and so did my brother and a couple of friends, but I was 'in love',\" I did the air quotes thing, \"And then she got pregnant with David, and I did the right thing, we lasted fifteen years, when she filed, I jumped at the chance to get out.\"\n\nI took a sip of my wine and sighed heavily. \"There's a book called 'Stop Walking on Eggshells' you can read if you want to understand what it was like.\" I left it there.\n\nI almost got up to leave. Suddenly, all the crap, all the baggage with Liz came rushing into my mind. Here I was enjoying an excellent glass of wine with a beautiful woman and all I could think about was my ex, my ex and what I had done to deal with the stress of living with her.\n\nIt had started when I was five or six. I had discovered the wonders of my mother's lingerie drawer, especially her slips and stockings. As I got older, I started stealing my sister's panties from the laundry and wearing them, then a few of her dresses. It wasn't until I went to college that my interest in pretty things waned. Occasionally, something would get mixed in my laundry at my dorm or my apartment and I would relapse. When I married Liz, it had been years since I had fully dressed as a girl.\n\nIt started innocently enough, Liz and I had gone to our favorite condo at the beach and actually had a nice time, until it was time to leave and she got the idea that the manager should give us a discount for their moving us from the third floor to the second because the owners of the condo we thought we were going to be staying in had the audacity to use their own room. All the way home, it was my fault, If I weren't such a loser, they would have never moved us, if I were more of a man, they would have given us a discount for the nonexistent inconvenience, on and on, for four hours.\n\nWhen we got home, I unpacked the car and got ready for the business trip I was leaving on the first thing in the morning. Of course, Liz couldn't let it go. Her nagging distracted me while I packed, so somehow, some of her things got into my travel bag. I alternated the two pairs of panties all week. It grew from there. Before long, I was stealing Liz's panties to wear under my clothes and had a small bag at my office full of frilly things to take with me on business trips; I always made sure I had the time to stop by the office to pick it up when I travelled.\n\n\"I'm sorry, Carla, it just makes me crazy to even think about her. How about we catch a movie or something? There has to be something out that neither of us have seen.\"\n\n\"Or we could stay here. I have another bottle of wine and Netflix,\" she smiled.\n\nI couldn't even tell you what the movie we chose was. We were naked on the couch before the opening credits finished, picking up where we had left off early this morning. I don't know how I did it. With Carla, I was eighteen again. I lost two buttons on my shirt when she undressed me and broke a vase on her end table when I kicked my boots off.\n\nCarla swallowed me whole and then did things to my cock with her lips and tongue that I had only read about in some online porn I read now and then, refusing to let me finish. She tortured me forever, and I loved every minute.\n\nWhen I finally pushed her onto her side and started returning the favor, she got even more aggressive. Ultimately, yeah, that's the right word. Ultimately, we exploded together, her juices covering my face, my seed pulsing down her throat; I think she even squirted into my mouth.\n\nWe found ourselves covered in sweat and wine, as both of our glasses had fallen off the coffee table when we rolled onto the floor in the heat of our passion.\n\n\"I think I need a shower.\" Carla gave me a devilish smile. \"Or maybe a bath. My tubs huge and it's a jacuzzi.\"\n\n\"Bath, I'm thinking,\" I smiled as I picked up the wine glasses from the floor and the bottle we had just opened, from the coffee table, following Carla up the stairs watching as her butt swished back and forth on the stairs in front of me. Without a word, we had agreed we could clean up the mess in the morning.",
        "\"Do you really think I'm pretty?\" Carla was examining herself in the mirror while we waited for the tub to fill, running her hands over her stomach, touching the faint traces of the stretch marks her kids had given her and checking to see just how much she imagined her pert perfect breasts might be sagging.\n\n\"First,\" I ran my hands across her tummy, retracing the path her hands had just taken, \"You should never be ashamed of these, you earned them by giving birth to and raising two fine young adults, unless you've been lying to me and they're both in prison or something,\" I laughed and pulled her close to me.\n\n\"Second, no you're not pretty, you are exquisitely beautiful, you're in excellent shape, your ass is to die for, your legs, oh my god, your legs,\" I took a deep breath, \"And your breasts look like they belong on a 21-year-old girl, your smile lights up every room you walk into. I can't imagine a more perfect woman. Honestly, you take my breath away every time I see you, you have since the day you gave me that ponytail tie and your card in that bar.\"\n\n\"Really?\" she turned in my arms. I could see the tears welling in her crystal green eyes.\n\n\"Really,\" I leaned in and kissed her, \"What's got you thinking about this all of a sudden?\"\n\n\"Today's my birthday. I'm forty. I'm getting old,\" she drove her tongue to the back of my mouth, pressing her breasts into my chest and grinding her crotch into my now raging erection.\n\n\"And what would you like for your birthday, young lady?\" I smiled as she hopped onto the vanity and wrapped her legs around me.\n\n\"More,\" she bit my lip, letting out what I can only describe as a soft growl, \"Of this,\" her hand found my crotch, \"Would be a good start.\"\n\nThe tub was overflowing when we shared our orgasms. \"Hope your homeowners insurance covers wild sex,\" I chuckled as I turned the water off and opened the drain to let some of it out so we could enjoy the bath. Carla handed me a glass of wine and I stepped into the tub.\n\nShe joined me and leaned back against me. \"Worth it even if it doesn't.\"\n\nWe sat quietly in the hot water, her body against mine, sipping wine, neither of us speaking as the jets of the jacuzzi massaged our bodies.\n\n\"Carla, what are we doing?\"\n\n\"Are you complaining?\" she nestled her butt against my crotch.\n\n\"No, it's just...\"\n\n\"It's just that we've known each other for ten years and nothing and suddenly, I'm throwing myself at you and we're screwing like teenagers. Is that about it?\"\n\n\"I'll just add mind-reader to your list of accomplishments,\" I laughed and kissed the back of her head, inhaling deeply, filling my head with the smell of her shampoo.\n\n\"Mike, I just got tired of waiting for you to figure it out. I've wanted you for a long time and I didn't want to waste any more time.\"\n\nWhat started in the tub, quickly moved to her bed, lasting late into the night as we explored each other with our hands, lips and tongues, invisible trails of kisses and caresses all over her body and mine accented by moans and gasps and exclamations of pleasure, carnal delights filled our souls as one orgasm after another threw screams of passion and lust into the night.\n\nThe flavor of Carla's sweet juice mixed with my own lingered in my mouth. I had found it in our passionate kisses and in the very center of her sex, as we shared ourselves with each other completely. Finally, exhausted, content, and a little sore, I collapsed behind her, pulling her close and falling into a sleep filled with dreams of her and me and what might be to come.\n\nWaking with Carla in my arms was the best feeling of all.\n\nI propped myself up on one arm and just watched her sleep, her beautiful red hair on her face, chuckling to myself as her nose twitched as the hair tickled it. Using my middle finger, I pushed her hair out of her face and memorized everything about her, her long lashes, the way her lips curled up just a tiny bit from her perpetual smile, the small dimple on her chin, and her high but delicate cheekbones; I never wanted to forget this moment.\n\n\"Good morning,\" she moaned as her eyes slowly opened, \"I like this better than yesterday.\" she put her hand behind my neck and pulled me into a delicate kiss.\n\n\"Me too.\" I followed her lips back down, kissing her again as she tried to pull free.\n\n\"Hold that thought,\" she slid out from under me, \"Potty break, I'll be right back,\" I just watched in awe as she ran across the room, her hair dancing across her back and her cute butt shaking. Yup, I was in trouble when she didn't bother to close the door as she went to tinkle. In the fifteen years Liz and I were married, that had never happened.\n\n\"Now, where were we?\" she jumped on top of me and buried her lips in mine. Guiding me inside her, pinning my hands over my head, she rode me until I exploded inside her, collapsing onto my chest, kissing me hard, \"Oh, my god, Mike, I've had more sex in the last two days than I have in the last seven years.\"\n\n\"Me, too. I don't think I can take much more of this,\" I laughed.\n\n\"Well, come take a shower with me and we'll decide what we want to do this afternoon.\" she didn't have to ask me twice.\n\nWe stopped off at Rudy's for barbeque and then hiked the green belt before I took her back to her house. As tempted as I was to continue what we had started Friday night, I kissed her goodbye and left her on her doorstep. The smile I left with stayed on my face all week.\n\nI got calls from David and Christy, both letting me know how their classes were going and Christy asking for a small advance on her allowance, again. Of course, even at 19, she was my little girl, so I caved. They both asked me what was going on and why I seemed to be in such a good mood, Christy even guessing that I had a girlfriend, but I neither confirmed nor denied it, wanting to wait until I was sure about me and Carla before I said anything.\n\nAnd there were the almost daily calls from Liz, complaining about something or asking me to help her with something, most to the time, I just listened to her complaints of agreed to stop by and take care of whatever little job she had that she didn't want to pay someone else to do, I guess it was just easier than arguing with her.\n\nOn Wednesday, she called and started in on a branch that was dragging on her roof, asking me to come over right after work to trim it back. Just as I was about to surrender, my phone buzzed. It was Carla. \"Dinner tonight, my house 7?\"\n\n\"Liz, just call an arborist or a tree service. I'm sure you have a few trees that need to be trimmed. I have to get back to work,\" and I hung up.\n\n\"See you then,\" I texted Carla back.\n\nAnd that's how it went for the next few weeks until both David and Christy informed me they were coming home from Lubbock for spring break and would stay with me and, under no uncertain terms, would meet my new girlfriend. I called Carla and told her about the ultimatum. She informed me that Emily and Terrance were on to us as well. We planned the barbeque for Sunday afternoon in my backyard. It was official. Carla and I were a couple.\n\nDavid and I were in the back minding the smoker and Christy in the kitchen working on her famous potato salad when Carla and her kids showed up, Carla brought an amazing slaw and a huge bowl of banana pudding, if anybody went hungry, it was their own fault.\n\nEverything just seemed to fall into place, Emily was studying natural sciences with ambitions of getting into A&amp;M's vet school where Terrance was studying engineering, my Christy was in the nursing school at Tech and David trying to get into the architecture school, all four of the kids just clicked.\n\nI pulled Carla into my arms when she brought me a cold beer and kissed her. The kids didn't even notice. \"I think this is going to work,\" I smiled and kissed her again.\n\nThe pounding on the front door and incessant ringing of the doorbell interrupted everyone's mood, \"Mom,\" David and Christy said it almost in unison.\n\nI opened the door and Liz tried to force her way past me into the house. \"I need to see the kids RIGHT NOW!\" she screamed.\n\n\"Liz, now is not a good time. I have guests,\" I tried to stay calm.\n\n\"They are my children, and you will not keep me from seeing them, so move right now Michael.\"\n\n\"They are adults and if you want to see them, call them and tell them, but you will not come barging into my house and disrupt my guests like this, now please leave,\" I blocked her second attempt to push her way into the house.\n\n\"You cannot stop me from seeing my children! I am there mother, that's alienation of affection. Michael, I'll call the police; I'm going to take you to court. You let me in right now!\"\n\n\"Liz, you are not welcome here and if you don't leave right now, I will call the police.\" I blocked her third try to get past me. \"Liz, leave, please.\"\n\nShe slapped me, \"I'm calling my lawyer Michael, you cannot stop me from seeing my own children,\" storming back to her car.\n\n\"So, that's Liz.\" Carla's arms wrapped around my waist.\n\n\"Yeah, that's her,\" I turned I her arms and sighed as I looked into her eyes, \"Sorry about that.\"\n\nDavid and Christy were obviously uncomfortable, and Emily and Terrance looked like they didn't know what to think. \"David, how are those ribs looking?\" I changed the subject, pretending like everything was fine, just like I had been doing since before Liz and I got married.\n\nThe rest of the afternoon went off without a hitch, we ate too much and then all changed into our suits and jumped in the pool, getting out after a rousing game of volleyball, Carla had failed to mention that Emily was two time all state in volleyball in high school, team Mike didn't have a chance.\n\nMore barbeque and I lit a fire in the firepit while David pulled out his guitar. We sat and talked and listened to him sing. It was maybe the best day ever.\n\nEmily was the first to yawn, and none of us wanted the night to end, \"You and Emily can share my guest room and Terrance can have the couch, if you're interested,\" I smiled at Carla and kissed her on the cheek, \"I took the week off since the kids came home and I know you're closed on Mondays, so...\"\n\nCarla looked at Terrance and Emily. Emily smiled at her mom. \"We already got it figured out, mom. I'm bunking in with Christy and Terrance is taking the guest room, and you guys are not teenagers so don't even try to pretend you're not already sleeping together, ok?\" Terrance nodded.\n\nI looked at David and Christy, and the four of them just started laughing.\n\n\"Well, I guess that's settled then.\" Carla kissed me full on the lips.\n\nHaving quiet sex with Carla was the most difficult thing I had done in a long time. We both knew the kids heard us, but hey, it was their idea, so they could just deal with it. Carla and I slept in a little and the kids tried to be quiet but eventually the aroma of the bacon and sausage David was smoking combined with the coffee and the pancakes Terrance was making dragged us out of bed, The four kids had worked together to put on a breakfast spread like I had never seen, if Carla and I worked out, going hungry would not be an issue.\n\nWe cleaned up, and the kids disappeared to go visit friends, I was sure David and Christy were going to see their mom and, at some point, I would get an earful for having a girlfriend and especially for, heaven forbid, letting her spend the night when the kids were in the house.\n\nI poured Carla another cup of coffee and the two of us went to sit on the patio by the pool. Out of habit, I picked up my phone when it buzzed and just started laughing, \"What's so funny?\" Carla took my arm in hers.\n\n\"Liz,\" I showed her the phone, 27 texts since I had asked her to leave.\n\n\"Was it always like that?\" I nodded.\n\n\"I didn't know any better for a long time. I legitimately thought all the conflict was my fault until she forced me into therapy, couples therapy, three times. If it was Mike's problems we were talking about, she was cool. As soon as the counselor started talking about her issues, she bailed, every time. I got my therapist, and after about five years, realized I was the sane one. I was a good guy. So, when she filed, I just said yes. I don't think she believed I'd go through with it. Somewhere in there I think she believes I'm coming back.\"\n\nCarla looked like she was going to ask about the chances of that happening.\n\n\"Not a chance, I'd rather someone feed feet first through a wood chipper,\" I leaned down and kissed her, \"Besides, I'm thinking I've got a much better deal going right here.\"\n\n\"We could go back inside and 'talk' about that,\" she grinned as she set her coffee cup down, took my phone, set it next to her coffee cup, and taking my hand in hers, led me back to the bedroom.\n\n\"Mom?\" I recognized Emily's voice as she knocked on the door and we scrambled to get under the covers, clothes scattered all over the room. \"Mike, you guys in here?\" the door slowly opened. Carla was laughing hysterically. I was beet red.\n\n\"Oh, for heaven's sake, again? Well, anyway, Terrence and I are back. I don't believe it,\" she muttered as she closed the door.\n\n\"You think I'm making a good impression?\" I started laughing too.\n\n\"On the one that counts, definitely.\"\n\nThe six of us discussed it over dinner and decided with the pool, deck, and outdoor kitchen setup, my house would be home base for all of us for spring break. We had already set the sleeping arrangements. The kids could invite their friends over to enjoy the pool and David's mastery of the grill. I would get to enjoy the wonders of Carla's body next to me in my bed every night.\n\nThe only thing I needed to worry about was cleaning out my closet and dresser so Carla didn't find out about my secret, I wasn't sure how she would handle it and didn't want to ruin the week for everybody else if she explored my closet or wanted to use a drawer or two in my dresser and took exception to the satin and lace, she would find, especially considering it was all mine.\n\nLiz hadn't outed me to anyone, mostly out of fear of what it would do to her reputation, so Christy and David didn't know; the last thing I wanted was for them to find out because my new girlfriend found my stash of panties and confronted me about them.\n\nI knew I was going to have to tell Carla, and the sooner the better considering how quickly our relationship was moving, I just didn't know how, or when, or what to do about the kids, they needed to know too, and it looked like there were going to be four of them to tell not just two.\n\nRob being gay made me even more nervous about what I knew I had to do, not that I was in any way attracted to men, but cross dressing and being gay seem to go together in many people's minds and I didn't know what Carla thought about the idea of a man in a dress no matter who it was.\n\nTuesday was 'divide and conquer' with the kids taking control of most of the heavy lifting. Carla had to work, so the boys headed to Costco to get supplies and bulk burgers, hot dogs, and assorted meats for David to grill all week while the girls went to H.E.B. for everything else, my debit card and credit card were going to need a vacation when they got back but it would be worth it.\n\nI spent my time loading up my feminine stuff into the totes I kept on hand for just such emergencies and packed them into their spot in the ceiling rack in the garage. By the time I finished putting everything away, the girls were, so I jumped in and helped put away all the groceries. The boys weren't far behind.\n\nCarla had stopped off at her house to pack a bag for the rest of the week and came home to a margarita and a pool full of the kid's friends playing volleyball, the battle lines were clear with aggies on one side of the net and Red Raiders on the other. As a Longhorn, I just kept my mouth shut. David had a few fans hanging out with him at the grill and one or two of those were very cute; he seemed to enjoy the attention.\n\nCarla and I just sat and watched, enjoying the noise. \"This is nice, isn't it?\" her hand found mine.\n\n\"Just like I always imagined it should be,\" I smiled at her and nodded.\n\nThe volleyball game ended when David announced that the burgers and hot dogs were ready, everybody got fed and a few left right after they ate, but most stayed as David and one girl that had been hanging with him at the grill got their guitars out and serenaded everyone.\n\nI nudged Carla, pointing out Terrance and the girl that was nestled in his arms. Carla pointed out that Emily and Christy seemed to sit awfully close together, and not in a BFF or a sisterly sort of way. We both agreed that of all people, we couldn't say a word. All four of the kids had given us a hard time about how vocal Carla was and how long it seemed to last. My response had been a broad smile.\n\nI wasn't so sure of what I thought of the possibility of my little girl being gay, but Emily was good and kind, and I had my own skeletons to worry about.\n\nAnd so, it went for the rest of the week, Carla and I fucked like teenagers every night and most mornings, the kids got along like they had grown up together, the pool and yard were full of their friends every afternoon and evening with David taking charge of the grill, and Liz didn't bother me once; it was perfect.\n\nWe set Saturday night aside for 'just family', the kids were all heading back to college Sunday, and we had some things to discuss, Carla and I were seriously talking about moving in together, either at my house, or finding one just a little larger. The kids all agreed that this house was perfect, totally blowing past the whole thing about me and Carla moving in together as if it were a foregone conclusion, which I guess it really was.\n\nThe kids talked about how they'd made the space work over spring break and, since they were all in college anyway, the times they'd need to share would be summer break and holidays, so it would be fine.\n\nCarla and I were cuddling together in our room, talking about the reality of living together and how empty the house was going to be tomorrow when the kids all left when Christy knocked on the door. \"Daddy, can I talk to you, and I guess Carla, too?\"\n\n\"Sure sweetheart, any time, you know that.\" I sat up, adjusting my pillows behind me. \"What is it?\"\n\n\"Um, I think I want to transfer to A&amp;M next fall.\" She looked down at her feet like she thought she was disappointing me or something by asking, \"It's just that I've been talking to Emily, and I think I want to be a veterinary nurse.\"\n\n\"Well, you know I'd prefer if you and your brother were both going to Texas,\" I laughed, \"But if that's what you want, it's a good school and we'll see what we need to do to make it happen.\"\n\nCarla nudged me in the ribs. I knew just what she meant. \"It's more than that though, isn't it sweetheart, you and Emily kind of found a special thing, didn't you?\" She nodded.\n\n\"You know that's ok, right? Whether it's just experimenting or if it's more, it's ok.\"\n\nEmily walked in the room taking Christy's hand, \"You're really ok with us being more than sisters?\"\n\nIt was Carla's turn. \"Emily, your dad is gay, and I'm really ok with that, and I love you way more than I loved him, so yes, it's really ok; just as long as you two respect each other and you're happy, we're ok with whatever relationship you decide you want.\"\n\nSuddenly there were four in the bed, massive hugs, lots of tears, and ultimately, the mother of all tickle fights.\n\n\"This is the craziest family on the planet,\" it was Terrance standing in the doorway, \"So I guess they took it well?\" he was asking the girls. I almost cried when I realized he had called us a family. Carla gave me a big hug and a kiss on the cheek.\n\nThe girls went back to their room and Terence his, Carla and I just laid there holding each other counting our blessings, my mind wandering to thoughts of what was going to happen to my 'family' when my secret came out, which I knew it inevitably would.",
        "Sunday was a flurry of activity with the kids getting packed and heading off the Lubbock and College Station, and Carla and I running back and forth to her house to bring her necessities back to 'our' house and fitting them into the closet and dresser, a familiar feeling ran through me as the closet filled with dresses and the top drawer of the dresser with panties and bras, I had to tell her and I knew it, but I was so afraid of what she would think.\n\nMonday, I went back to work and Carla finished moving her stuff into the house. We would put the rest of her stuff in storage the next weekend and she would find a realtor to put the house up for sale. Spring break had been the perfect transition into our living together and everything was going perfectly; until I showed up for my April hair appointment.\n\nCarla didn't even acknowledge me when I walked in the door, focusing on the lady in her chair. The whole salon was subdued, almost melancholy, as if someone they all knew had died. I took a seat in the waiting area and tried not to think about it, wondering why Carla didn't come to me for comfort.\n\nThe lady in her chair thanked her and got up to leave. Carla walked over to me, handing me a piece of paper. \"This came to my salon email this morning. All the stylists got a copy, too. We need to talk when I get back to the house tonight and I think it best if you just skip your appointment for today,\" she turned and went into the back of the salon.\n\nThe looks I got from the other stylists told me not to press it, I made my way back to my car and read the letter, two pages of spite and vitriol, hate and rage, calling Carla all kinds of horrible things, whore, freak, chaser, tranny lover, it was disgusting. The things it said about me were worse. I read the letter four times; it was unsigned, but I knew the ultimate source.\n\nI texted Carla, \"Please forward the original email to me. I'll explain everything when you get home. I love you.\"\n\nShe didn't answer.\n\nI called my boss and told him something had come up and I needed to take the rest of the day off, he agreed, and I drove home, poured myself a large whisky and sat out by the pool, trying to figure out what to do.\n\nI checked my email and Carla had forwarded the message to me, checking the email headers, I found Liz had written it and sent to her friend Connie in North Carolina, who had forwarded it to not only Carla and her stylists, but all four of the kids.\n\nMy immediate thought was to contact my attorney and sue the bitch, but I needed to make sure Carla and I were ok first, so I went out to the garage and pulled down my totes, lined them against the wall and sat back down to wait for Carla, prepared to tell her anything and everything she wanted to know.\n\nMy phone buzzed. It was a text from Christy. \"Mom's a bitch, I love you dad,\" at least a dozen hearts followed it.\n\nDavid called, \"Hey, I got this email. Are you and Carla, ok?\"\n\n\"I don't know David. Carla's not home yet and she got the same email. I guess I've got a lot of explaining to do to all the people I love.\"\n\n\"Not to me. I've known about your stash for years and figured if dressing up now and then helped you deal with mom, it was fine by me. And for what it's worth, I agree with Christy, she did this and she's a bitch.\"\n\n\"I love you guys; you know that right?\"\n\n\"Yeah dad, we do. We can come home this weekend if you need some support.\" Shit, my kids were trying to take care of me.\n\n\"No, I think I got this. You guys go find a party to go to or something, do that college stuff. I'll be fine. I just need to explain this to Carla and hope she understands.\"\n\nChristy's voice came over the phone, \"I love you daddy.\"\n\nAs messed up as my marriage to their mom had been, they had turned out alright, I guess I wasn't a total fuck up as a dad after all.\n\n\"So, Liz, huh?\" Carla came out to the pool to find me, \"Emily talked to Christy, she's ok but Terrance is a little messed up by the way she attacked me and isn't sure what to think about you being well, whatever you are. To be honest, I'm not either. Why didn't you tell me?\"\n\n\"Yeah, she sent it to her old college roommate in North Carolina who forwarded it to you and your stylists and all four of the kids. I'm so sorry about all of this and I didn't know how to tell you; I was afraid you'd react like Liz did and losing you would crush me; I couldn't handle that. As bad as it was, I never thought Liz would do something like this.\"\n\n\"So, what now?\" Carla nestled next to me on the swing.\n\n\"I guess I tell you everything and hope you still want to be with me.\" I looked at her, tears welling behind my eyes, my heart about to break.\n\nThe next few hours were as cathartic as they were surreal. I explained I had been dressing for as long as I could remember, starting at five or six with my mom's slips and stuff, slowly graduating to stealing stuff from my sister. Over time it came and went fully manifesting as my marriage to Liz fell apart. I even admitted to trying on that pair of panties Carla had worn the first night we were together, but nothing since then, even packing everything up and putting it away in the garage.\n\nAnswering her questions came next.\n\n\"No, I'm not gay, I did experiment in college, possibly too much and while some activities were enjoyable, guys just didn't so it for me, even when I got dressed,\" that answer seemed to be a biggie, she picked up my whisky and took a sip.\n\n\"No, I didn't want to be a woman, I enjoyed being a man too much, especially since she and I had dated,\" that made her smile and I knew I had a chance, \"I just like playing dress up sometimes.\"\n\n\"No, I didn't know why. I had spent years in therapy dealing with my relationship with Liz and my cross dressing and I still had no clue, it was just something I needed to do.\"\n\n\"Yes, there is always going to be a chance that I will want to start again and that you might come home one day and catch me dressed, I won't lie to you, I never see this going away permanently and I don't really understand why I do it, but yes, there is that possibility.\"\n\nIt went on like this, Carla asking me questions, some two or three times, and me giving her the most honest answers I could. Some things there was just no answer for; like why I did it to begin with. I just didn't know.\n\nWe finally took a break and order some Chinese takeout. \"Will you show me?\" she slipped her hand into mine as we made our way to the kitchen.\n\n\"Are you sure you want to see me like that?\"\n\n\"No, but I think I need to, don't you?\"\n\nWe went to the totes, and I opened them one at a time. Carla laughed at how many shoes I had; two of the five totes were full of them, one was full of lingerie and the last two dresses, skirts, and the rest of my clothes.\n\nI dressed in a lightweight cotton blouse and a knee-length skirt, garter and stockings, three-inch heels and a bra and panties that were a little lacier than anything Carla owned when the delivery driver arrived. My breast forms got a seriously raised eyebrow. \"You actually look nice. I expected a street walker from what was in the email.\"\n\nCarla made me go to the door and pay the delivery driver; I got a strange look from him, too.\n\nWe ate with me dressed, talking about next steps, Carla still wasn't sure what she thought of her boyfriend dressing up like a woman and wanted some time to think it over, but admitted that if it didn't get out of control, she could live with it, she guessed. I decided I would not push it.\n\nAfter dinner, I packed everything back in the totes and put them back in the garage. Carla and I crawled into bed and had possibly the best sex we had ever had.\n\nIt started slowly, with a little cuddling and nuzzling, \"What I texted, I meant every word,\" I whispered.\n\n\"Which part?\" she rolled toward me, kissing me lightly on the lips.\n\n\"The last part, I love you Carla, I don't think I ever knew what it meant to love a woman before, until you.\"\n\nShe kissed me again. \"That's the only reason I came home. Julie wanted me to stay with her for a few days to figure this out.\"\n\nIt was my turn to kiss her, each kiss getting more and more passionate, my hand sliding down her side to find the hem of her sleep shirt, making my way gently underneath, softly caressing his hip and side with my fingers, almost a tickle, but not quite.\n\nCarla let out a soft moan as my hand made its way to her breast, \"So after all this, you really think you're going to get lucky tonight?\" she bit her lip and smiled at me as I gave her supple breast a soft squeeze.\n\n\"There are lots of ways to apologize for things,\" I smiled back, kissing her on the tip of her nose, and making my way across her cheek around her mouth to her ear, giving the lobe a soft nip with my teeth, before I covered her neck with kisses, sucking lightly, just enough to get a response but not enough to leave a hickey.\n\nCarla rolled onto her back as I kissed my way across her collar bone and down to the collar of her shirt, \"I think something's in the way,\" she lifted herself and let me pull the shirt over her head, wrapping her arms around me, pulling my lips to hers and kissing me hard, I could smell her scent, she was hornier than I was, and I was already leaking.\n\nRaising up, I looked down on her beautiful body, \"I don't think I've ever seen anyone as beautiful as you,\" I smiled at her and buried my face in her breasts, taking my time to explore as if it were the very first time, one hand massaging and fondling one breast while my mouth kissed and licked the other, biting her nipple gently eliciting the soft moans I knew it would bring, trading off, one for the other until her hands gently pressed on my shoulders, encouraging me to move lower and continue my exploration.\n\nAcross her stomach, driving my tongue deep into her navel before I traced a thin wet line down her abdomen to the band of her panties, my god. Her scent was strong. Carla lifted her hips, and I pulled her panties down her long legs, bringing them to my face and inhaling deeply as I gazed hungrily at her now naked form.\n\nThe longing in her eyes was begging me to keep going, so I took one of her feet and started sucking gently on her toes, listening as her moans grew in both frequency and volume, sliding my tongue between the digits and taking each one into my mouth and sucking hard, the right foot and then the left.\n\nOnce I had given each it's due, I started moving up her calf, rubbing my hands over her soft skin as I left kisses up her leg to her knee, when I kissed the back of her knee, a soft tremor ran through her body.\n\n\"Dammit Michael, this is so not fair,\" she muttered.\n\n\"I can stop,\" I smiled at her.\n\n\"Not if you want to live through the night,\" she giggled and moaned at the same time as my lips went back to her knee, slowly working to the inside of her thigh and sliding up to the prize. I could see her juices dripping from her core, a glistening trail leading down the crack of her ass.\n\nMy hand moved underneath her, drawing a single finger up across her rose. I brought the now dripping appendage to my mouth, relishing the full flavor of her juices. I couldn't stand it any longer, I buried my face in her crotch, sucking and nibbling on her nib like a fiend possessed, her hands found the back of my head, holding me in place as the soft tremors that had started when I kissed her knee turned into spasms, her body arching and shaking as pleasure tore through her. I kept going until she begged me to stop. I was sure the neighbors heard her scream my name.\n\nMaking my way up across her stomach back to her beautiful breasts, kissing and licking her nipples with the tip of my tongue, nibbling on them, tweaking, and pinching them with my fingers as her fingers massaged my head, urging me up to her waiting mouth while letting me continue to explore and bring small aftershocks of pleasure to her.\n\nSlowly up along her collar bone to her neck, leaving a trail of delicate kisses along her chin to her ear where I nibbled on her lobe and slipped my tongue into her ear, \"Oh, Mike, what are you doing to me?\" she moaned.\n\n\"Just letting you know I choose you over everything else.\" I made my way to her lips and buried my tongue deep in her mouth.\n\nShe pushed me over on my back and climbed on top of me, taking my erection deep inside her sex, riding me hard, chasing her own orgasm and then another before I finally pulled her back down to my aching lips, exploding deep inside her the second time, \"I love you, too,\" she whispered in my ear as my softening manhood slowly slipped from her wetness and we fell into a deep sleep nestled in each other's arms. We were both late for work the next day.\n\nFriday night Clara and I went to our favorite Italian restaurant and talked some more, mostly about how my compulsion, my need to dress came and went and no matter what I did, it always seemed to come back. I had been so sure once the divorce was final that it would go away only to go off the deep end, dressing to some extent every day and going on a buying spree that cost me thousands of dollars. For a while I stopped and purged, getting rid of everything I had purchased, only to start again and buy it all again.\n\n\"That's why I keep the totes,\" I confessed.\n\n\"Sometimes they're empty, and the clothes are in my closet and dresser, sometimes, like now, they're full and put away. I've always enjoyed dressing, it's just that there are times I find I need to do it, too.\"\n\n\"No more secrets.\" Carla reached across the table and took my hand. \"Promise me, no more secrets. Can you do that?\"\n\nI nodded, taking her hand in mine. \"I promise.\"\n\nSaturday, Emily, and Terrance surprised us. Emily took her mom for a girl's day while Terrance and I talked. He worried about his mom, and I understood. He asked many of the same questions she had. I gave him the same answers. I even offered to show him. He graciously declined. We both laughed. He didn't fully understand, but was comfortable that I wasn't lying to his mom or keeping things from her, and if she was happy, he would deal with it.\n\nWhen the girls got back, we were sitting in the den watching The Rangers put a hurting on The Yankees. Up by eight in the bottom of the sixth, we called it and I took everyone out to dinner.\n\nEmily and Carla kept looking at each other and grinning all during dinner. There must have been an interesting conversation at the spa that neither of them felt Terrance nor I needed to know about. I grinned as it occurred to me that the 'no secrets' rule seemed to only apply to me, shaking my head, I took another bite of my ribeye and followed it with a sip of my beer, I'd find out eventually, I was sure of it.\n\nEmily and Terrence headed back to College Station after dinner and Carla and I went home and crawled into bed, making love like it was the first time all over again. Exhausted, we lay in each other's arms, basking in the afterglow of our sex.\n\nOther than a nice long chat with Christy where she described in excruciating detail how frustrated Liz was that the fuse she had lit had fizzled, life went on. Carla and I got along great, fucking like teenagers, and growing closer and closer every day.\n\nMy new position at work turned out to be more of a change than having Carla move in. While I had been a top producer my entire career, it was much more difficult to get others to up their game, some of them just didn't have the motivation or desire to improve, a few seemed to play a delicate balancing act, producing just enough to meet their quota, but not enough to shine.\n\nThe guy that had taken over my old territory was my biggest headache; sales were significantly off and my boss Roger, and I just couldn't get the guy to step up which meant that I was going to have to go back on the road again to save a few key accounts that he hadn't been taking care of properly. The next step was going to be to find someone else, but damage control had to come first.\n\nI had long ago merged my 'secret' cache with the rest of my feminine clothes and I still wasn't one-hundred percent sure what Carla thought of me dressing, so I was going to have to make this trip cold turkey; no panties, no stockings, no nightgowns, nothing. I was more nervous about that than dealing with my potential first time to fire someone.\n\nCarla had seen me dressed once, and while she had said she understood and could deal with it if I was honest with her, memories of how Liz had reacted just wouldn't let me go; I'd have to find something else to help me deal with the stress on this trip.\n\nCarla dropped me off at the airport with a huge kiss and a promise of another when she picked me up in five days, it was going to be a long week, \"Behave, and call me every night, I want to know how you are, ok?\"\n\n\"Deal.\" I pulled her in for one more kiss, just in time for airport security to come by and tell us to move the car. I swatted her on the butt and was on my way.\n\nThe flight was nothing special. I spent most of it getting up to speed on the customers I was going to be talking to and reviewing the progress reports for the guy I was trying to help. Dinner in the hotel dining room, a quick shower and I unzipped my suitcase to get dressed for bed only to find something I never expected, a card from Carla and the realization that there were no boxer briefs and no dress socks, in their place, a collection of my prettiest panties, several pairs of stockings, jet black to go with my suits and dress shoes, and a couple of garter belts; there were even matching bras for several of the panties.\n\nThree lacy nightgowns and two pair of shoes, one pair of pumps and a pair of low heels, there was a note in the heels, \"Just in case you get adventurous,\" with a huge smiley face and the imprint of Carla's lips in bright red lipstick.\n\nMy hands were shaking as I opened the card.\n\nMike,\n\nI know you're stressed about this trip and what you might have to do. I hope my surprise helps take the edge off just a little.\n\nI love you and your happiness is more important to me than anything. Enjoy yourself, but not too much.\n\nI'll see you when you get home.\n\nLove,\n\nCarla\n\nSlipping on the red satin night gown, I slipped into bed and dialed Carla's number. \"You know there's no measure of how much I love you, don't you?\" I didn't even wait for her to say hello.\n\n\"So, you like my surprise?\"\n\n\"Well, yes, but that has nothing to do with what I just said, and since you brought it up; I have a couple of questions, How and Why?\"\n\n\"The why is easy, I love you and knew your trip was stressing you out. I thought it would help. The how was a little more problematic. I've been planning this ever since you told me about the trip. Terrance skipped class yesterday to come helped me.\"\n\n\"Terrance?\"\n\n\"Yes, Terrance. I told him what was going on and he offered to help. The heels were actually his idea.\" we both laughed at that.\n\nWe talked for a while longer until my flight caught up with me and I let out a yawn so obvious there was no ignoring it. \"Thank you for everything, Carla. I love you more than I can say,\" another yawn.\n\n\"I love you too, now get some sleep and I'll talk to you tomorrow,\" we both waited a few seconds trying to be the last to hang up, \"Good night, Michael,\" she admonished me, and I finally gave in.\n\nI got up early and took my time getting dressed. Garter and stockings, satin and lace panties with a matching bra and my dark grey pinstripe that I called my money suit. I looked like a million bucks, and with the lace tickling my butt, the nylon massaging my legs, and the garters teasing my thighs, I was ready to conquer the world.\n\nSteve met me for breakfast in my hotel and we went over his plan for the week, then we went over my plan for the week and compared notes; to say he had an epiphany would be an understatement, the day flew by and Steve was a true natural, just a little rough around the edges, I had to admit that when he hit his stride, he would probably beat some of my numbers.",
        "I collapsed into bed exhausted, calling Carla and filling her in on the day, thanking her again for her surprise, and telling her exactly what I had worn under my suit.\n\n\"You'll have to show me when you get home,\" she answered with a soft laugh, \"I can hear the difference in your voice. It really helps, doesn't it?\"\n\n\"That, and Steve, isn't a lost cause, just a little misguided. I think he's going to be ok and should make his numbers if he keeps up what we started today,\" I paused for a few seconds, letting what she had said sink in. \"Would you really like to see me like that? I thought..., well, I think you know what I thought.\"\n\n\"Let's call it a work in progress,\" I could hear a little reservation in her voice, \"But, yes, I think I would. Now get some sleep.\"\n\nThe rest of the week flew by with Steve closing every appointment we went on, except for the one account I had specifically come to deal with. We went to lunch with the client and had a come-to-jesus meeting afterword. This one was on me; I hadn't fully prepared Steve for the expectations that went with this account, and I happily threw myself under the bus, apologizing, playing with the clip on my garter as I tried to get a read on Mr. Filmore's face.\n\nMr. Filmore felt like we had abandoned him, and I guess we had. Steve stepped in and explained where we had gone wrong and assured him it would never happen again, now that all the cards were on the table; we got one more chance, and I was confident Steve wouldn't let Mr. Filmore or me down.\n\nThe issue hadn't been Steve's effort. It was a strategic lack of information in the account transfer process and a lack of training in how to organize the effort efficiently. Things I had thought were a no-brainer, were brand new to Steve and a huge training opportunity for my entire region, probably the entire company.\n\nI was coming home a better sales manager and Steve was on his way to being a superstar. Roger had known what he was doing when he sent me to 'help'.\n\nI was also coming home wearing the same lingerie I had worn the first day, and in the short heels Terrance had added.\n\nCarla met me at the airport, the soft click, click, click of my heels on the tile floor amplified my smile a thousand times when I saw her waiting for me at the luggage claim, wrapping her in my arms, I buried her in passionate kisses while her hands ran up and down my thigh, playing with my garters.\n\n\"I think you got taller,\" she laughed. \"Terrance would be so proud of you.\" I didn't have any choice but to join her. I grabbed my bags and followed her to the car.\n\nWhen we got home, I let her undress me. Slowly, one piece at a time, my jacket hit the floor and then she untied my tie, dropping it on top of the jacket. Slowly, one button at a time, each one separated by a gentle kiss, Carla unbuttoned my shirt, pulling it from my pants and running her hands up over my chest, delicately tracing her fingertips across the lace of my bra, she shuddered as she let out a soft sigh.\n\n\"Are you ok with this?\" I whispered. She just nodded, running her fingers delicately up my bra straps and slowly down my arms, taking my hands and leading me closer to the bed.\n\nMy belt was next, Carla breath got faster. I could sense her nervousness, her trepidation, her anxiety as she continued to unwrap my satin and lace clad body. Dropping to her knees, she slowly lowered my trousers to my ankles, helping me step out one foot at a time and then guiding each foot back into the short heels I had been wearing.\n\nRunning her hands up my nylon covered legs, I watched as she licked her lips and tried to catch her breath, her fingers tracing the top of my stockings and then following my garters to my waist, following the satin to the little bow in the center of the garter belt before sliding her hand down between my legs, rubbing my aching cock with her palm as it strained to get free from its prison.\n\n\"I wondered what you did with him,\" she smiled up at me, \"Doesn't seem all that comfortable.\" her smile turned into a grin; I laughed.\n\n\"It was until a few minutes ago, but yeah, it's a little uncomfortable right now.\" I smiled down at her, letting her decide what the next move would be.\n\n\"So, he'd like to come out and play?\" her hand stroked him again.\n\n\"He'd better, or he's going to make a bit of a mess the way you're treating him.\"\n\n\"Well, we can't have that, now, can we?\" sliding her hand up and then into my panties, she freed my raging erection from his captivity, kissing him gently as he thrust forward to greet her, receiving a caress from the tip of Carla's tongue along his slit for his effort.\n\nCarla started slowly at first, kissing and teasing my cock with her tongue and lips as I stood there in my lingerie doing everything I could to not lose what little control I still had, my body had never been so charged with sexual energy, every breath made the lace of my bra as it moved with my chest more erotic, every flinch, every change amplified the feeling of the delicate fabrics that covered my body. And what Carla was doing to my cock. Her mouth was magic, her hand reinforcing everything it did with just the right squeeze, just the right touch.\n\n\"Carla, I can't... I'm going to...\" She squeezed the base of my erection and brought me back from the brink.\n\n\"Noy just yet, I've been fantasizing about this all week, and you are just going to suffer,\" she gave my testicles a little nip with her teeth, sending a shudder through my body which triggered all the wonderful feelings the lace and satin were giving me.\n\nMy god I was dying from sensory overload, the pleasure, and then the little touch of pain, the denial of my release, just when I thought I could take no more, she slid her finger down the crack of my ass, shoved it inside me and took my cock all the way down her throat, my orgasm was epic.\n\nMy legs gave out and Carla shoved me back on to the bed, crawling in next to me. We clambered under the sheets in a flurry of kisses, our hands covering each other as we nestled close, \"Welcome home, beautiful,\" she whispered in my ear, giving the lobe a nip with her teeth before she turned and nestled in my arms. I was asleep before I knew it.\n\nI woke up the next morning alone in our bed, still dressed in my lingerie. I guess after what she had done to me, she decided I needed my rest. A devious grin spread across my face as I devised a plan to pay her back. We were both going to enjoy it immensely.\n\nCarla had laid one of my dressing gowns across the foot of the bed and tucked my short heels neatly below it. Taking the hint, I put them on and went to find her, after a stop in the bathroom to take care of necessary business.\n\n\"I rescheduled all my clients for today. This day belongs to you and me.\" she gave me an enormous smile as she turned around and offered me a cup of coffee. Carla had dressed just like me, except her lingerie was black to my red.\n\n\"I think I like where this is going,\" I smiled as I took the coffee, setting it on the counter and pulling her into my arms, burying my face in hers, driving my tongue deep into her mouth and kissing her with a passion hotter than the brightest star, sliding my hands down her back and grabbing her ass, lifting her up and setting her on the counter next to my coffee; I had other things I wanted to taste this morning.\n\nMy vengeance was slow and deliberate, I kissed Carla's stocking clad feet, taking her toes in my mouth, and sucking them one at a time, running my tongue across the nylon arches before moving ever so slowly up the inside of her calf and then her thigh. The tops of her stockings and the straps of her garters gave me so many alternative paths to follow. It took me forever to start up the bare skin of the inside of her thigh toward her soaked panties. The smell of her arousal permeated the room, filling my head and my soul with desire. I could taste her through her panties, taking the satin in my mouth and eagerly sucking her juices.\n\nBiting the gusset, I pulled them down, Carla lifted herself just enough to let them come free, she wiggled her legs and used her feet to help me pull then off only to spread herself wide open, begging me to finish what I had started.\n\nI started over.\n\n\"Damn you, Michael,\" she feigned protest as I forced my tongue between her toes, using the nylon to enhance the intensity of what I was doing, sliding my hands up and down her legs sending charges of erotic energy up through her body.\n\nI found the back of her knee and licked. Carla's body spasmed as the beginnings of her first orgasm ripped through her.\n\nSlowly across the inside of her thigh, once again using the tops of her stockings and her garters as a guide, I made my way laboriously to her prize, rivulets of her slick juices running down onto the countertop. Lapping up her discharge, I felt another series of shudders run through her as a second orgasm followed the first, her breath heavy with lust, her body slick with the sweat of passion, I tasted it all, my tongue opening her lower lips, my mouth suckling on them like one would firm proud nipples, teasing them as I pulled them deep into my mouth. One and then the other, eliciting loud moans of eager anticipation as Carla ran her fingers through my hair, urging me to continue to her prize, her body shaking with the aftershocks of what I had already done, her soul hungry for what was next.\n\nA single flick, light and tender, followed by a second, just a touch more aggressive, and then a third like the first, \"Mike, please,\" Carla was begging. My revenge complete, I attacked her swollen nib with everything I had, sucking it deep into my mouth and teasing it with my tongue, tracing intricate patterns across her center. Carla's hands clenched my hair, her thighs closing on the sides of my face, her body tensing and then releasing as a torrent of tremors tore through her body. She screamed, \"Fuck you, Mike!\"\n\nThat was next.\n\nBy the time I came inside her, she had peaked three times, her fourth following mine by a fraction of a second.\n\nCompletely sated, our marathon run, lingerie spread across the floor of the kitchen, we lay in each other's arms, kissing softly, hands exploring exposed flesh, sharing tender caresses and light tickles, our sweat covered bodies as one, neither of us wanted to move, I wasn't sure I could.\n\nWe finally migrated out to the pool, floating in the cool water, our fingers interlaced, lost in the simple beauty of the moment until Carla dunked me without warning, \"I thought you said dressing wasn't a sex thing for you,\" the smile on her face when I came up for air told me she was kidding, but I answered anyway.\n\n\"With what you did to me last night, a clown costume would have been sexual,\" I grabbed her, pulling her into a huge kiss. She feigned protests not even trying to stop me.\n\n\"So, would you like to try it again sometime?\" she whispered in my ear, kissing me again. I'm sure the look on my face as she gently pulled her lips from mine was priceless. \"That was the hottest thing I have ever done, undressing you, seeing you like that, the heels, the garter and stockings, the satin and lace, your hot body underneath, the way you reacted to every little touch and caress, the way your body shook when you exploded, and the way you got me back this morning; I could almost forgive you for passing out last night, but I'm kind of glad you did.\"\n\n\"You mean now?\" my voice was a mix of anticipation at the prospect and doubt that I could live through a repeat of what we had done so soon after. I got dunked again for the suggestion.\n\nWe did order a pizza and cuddle on the couch watching an old movie until we were both too tired to stay awake. The morning caught us on the couch nestled in each other's arms. There was no doubt in my mind I was going to do whatever it took to keep Carla in my life.\n\nWhat started with the lingerie soon turned into my entire wardrobe. I had as many female clothes in our closet as Carla did, our shoes fought for space and, once or twice, I even caught her wearing something of mine. I had to admit, she looked better in it than I did.\n\nMy fourth Thursday appointment with Carla came around and she met me at the door with a big hug and kiss. \"You love me, right?\"\n\n\"You know I do,\" I smiled at her. Something was up.\n\n\"And that means you trust me, right?\"\n\n\"One does imply the other,\" I raised an eyebrow and gave her a sideways glance, \"Yes, I trust you. Carla, what is going on?\"\n\n\"Oh, so you're changing your last answer?\" she laughed and swatted me on the butt. \"Sit and just let me do my magic.\"\n\nOne of my favorite things in the world was when she washed my hair before she cut it, it always put me into a dreamlike trance, the way her fingers massaged my scalp, her soft scent filling my head as her breasts pushed against my shoulder when she leaned in to knead harder, and the soft touch of the warm water that rinsed it all away, which had been, for the past several months, followed by a gentle kiss.\n\nNormally, I would follow along in the mirror, chatting about nothing as she cut my hair. Today, an apron obscured the mirror, meticulously placed to look like it was there by accident. I could tell she was doing something a little different this time but didn't know what. A quick glance around the salon and I saw that she had covered every mirror that might let me see what she was doing; I was at her mercy, but I had been there before, and it wasn't a bad thing.\n\nWhen she finished, she tousled my hair with her hands and leaned me back in the chair, \"You said you trust me, so just go with it, ok?\"\n\nThe kiss she added told me I didn't need to answer.\n\nShe trimmed my eyebrows as she always did, and I gave her a big smile. It didn't last long, getting replaced with a wince when she started plucking them with a pair of tweezers, \"Carla, what...\"\n\n\"Just trust me,\" she kissed me again, and I didn't get to finish my questions.\n\n\"There, all better.\" her thumbs moved across my eyebrows just as the bell above the door chimed. Carla sat me upright and spun me around. Emily and Christy were walking across the salon, their smiles beaming at me.\n\n\"Does he know, have you told him yet?\" Christy looked like she had swallowed a bird.\n\n\"Nope, he's trusting me. He'll find out when we get there.\" Carla took my hand and started toward the door.\n\n\"Have fun girls,\" the way Julie, one stylist that rented space in her salon, said 'girls' made me nervous.\n\nEmily put a blindfold on me before putting me in the back seat of the car next to Christy, all I knew was that my hair now hung across my forehead and my eyebrows cleaned up, which to be fair was a good thing, they had been compared to mating caterpillars a time or two.\n\nEven with Carla's hand in mine, being led across a parking lot and into a strange building by three giggling women was enough to make the strongest man nervous. When I smelled the aromas and heard the soft music, I knew exactly where we were. \"Girls' spa date,\" I whispered to Carla.\n\n\"You're so clever,\" she kissed my cheek as she took the blindfold off. \"You're not mad, are you?\"\n\n\"If you want me to know what it feels like to be pampered like a woman, then I'm all in,\" I turned to kiss her, catching my reflection in the mirror, I had a cute bob cut with rough bangs, my mating caterpillars were neat and trim, nicely shaped, but not overly feminine. I was honestly a little cute, and that was just with the new haircut.\n\nEvery cross dresser I had ever talked to or chatted with online fantasized about two things, seeing what they would look like as a woman, and finding someone that will support them in their dressing. I knew I had the second one in Carla, and now she was giving me the first one.\n\nIt started with massages, two-hour full body massages, what Carla did to my scalp when she cut my hair. The masseuse did to my entire body, only without the boobs pressing into me on purpose. They could have poured me into a butter dish and served me with lobster when they finished my massage.\n\nNext was my makeover. I was six years old on Christmas morning all over again. Butterflies the size of eagles filled my stomach, and I couldn't stop smiling. While the makeup artist worked on my face, two other girls started on my hands and feet. Carla, Emily, and Christy were getting the same treatment as me.\n\nBy the time they pierced my ears and inserted the studs, I was so far gone, I didn't care what happened next. The finished product was mesmerizing. I didn't recognize myself. There was no cute, I was beautiful. Carla's smile told me everything I needed to know. She had wanted to see this too.\n\nSomeone had laid out my outfit for whatever was next for me in one of the dressing rooms, a nice skirt with a cute top, matching bra and panties, stockings and garter, my breast forms, my favorite pair of heels, and of course, a purse. It took me forever to get dressed because I kept stopping to admire myself in the mirror.\n\nDouble-checking my purse, I finally opened the door and stepped out. The clothes Christy, Emily, and Carla chose were what I would call a nice casual. The three of them were grinning from ear to ear. I didn't know what to say. I would have cried, but the girl who had done my makeup would have been furious with me, so I laughed instead.\n\n\"You two,\" I glared at Carla and Emily, \"You planned this all those weeks ago, when Emily and Terrance came to town, didn't you?\"\n\nThey both grinned and looked at Christy. While it had been their idea, my little girl was the ringleader making it all come together, in that moment I was both the luckiest guy and the luckiest girl on the planet. David and Terrance met us at the restaurant, my favorite Italian place, both doing a serious double take. They had known what was happening, but like me, never expected it was going to turn out like this.\n\nWe ordered and ate and talked, all five of them pestering me with questions about how it felt and was I enjoying myself. It was magic until I saw Liz in the mirror.\n\nI watched as she walked across the restaurant to the table, \"Christy, David, I didn't know you were coming to town, we could have done dinner as a family,\" spite and vitriol dripped from Liz's words as she glared at Carla.\n\n\"We are mother,\" Christy almost matched her tone. The look on David's face was a little scary. Neither of them had forgiven their mom for her stunt with the email. Liz flinched at the response; she was standing right next to me and hadn't even noticed; I was waiting for the moment she did.\n\n\"Well, if that's true, where's your father?\" That famous arrogance showed up.\n\n\"He's sitting right next to you,\" it was Carla's turn, \"And thank you for the lovely letter you had your friend Connie send to me and the kids, it helped me see just what a wonderful man Michael really is. I mean, to have put up with a bitch like you for as long as he did.\" I never wanted Carla to look at me the way she glared at Liz.\n\nLiz's face went white as it hit her what she was seeing, her mouth falling open and her words leaving her as her eyes darted from Christy, to David, to Carla and then to me. I just smiled and waved.\n\n\"Actually mom,\" it was Terrance, \"I don't think Michael really works tonight, I was thinking she looks more like a Michelle. What do y'all think?\" he had emphasized 'she', glancing at his brother and sisters and then at me, \"Dad, are you ok with Michelle when you're dressed?\" I smiled and nodded.\n\nIt was Terrance calling me dad that did it. Liz screamed, full blown horror movie, teenage girl about to get killed by the bad guy screamed, right there in the restaurant. Turning on her heel, she tried to run away and fell over the table behind her, knocking their food and drinks on the floor, covering herself in pasta and a variety of sauces. The marinara matched the red in her face.",
        "Someone helped Liz to the ladies' room to clean up and I think her date left without her. She was still arguing with Phillip, the owner, about having to pay for the damages when we left. All six of us laughed all the way to the car. I thought about how I should feel bad for Liz, but decided she had done it to herself, and her crap just wasn't my garbage anymore.\n\nCarla helped me clean my makeup off when we got home, promising to teach me how to do it myself and telling me to leave my forms in as she handed me a baby blue satin nightgown that matched her soft pink one. Michelle made love to Carla that night, and after Carla's second orgasm, Michael took over. We were both sure the kids would give us a hard time about all the noise Carla was making, but what else was new.\n\nTwo weeks later, I took Carla back to that little Italian restaurant, requesting the same table where Michelle had come into her own, the table where Terrance had named her, and then called me dad, the table where we had officially become a family.\n\nWe talked about that night, discussing how everything had come together, laughing at how Liz had practically exploded, we talked about how close she and I had become, how close the kids were, how Terrance and Emily called me dad, Christy and David calling her mom.\n\n\"We probably ought to do something about this before it gets out of hand, don't you agree?\" I smiled at her, nodding to our waiter that it was time.\n\n\"I don't know, I do love you, but what about this girlfriend of yours, this Michelle,\" it was obvious she knew what I was doing.\n\n\"Pretty sure she loves you as much as I do, maybe even a little more, if that's possible.\" All four kids had come out of the kitchen and were standing behind Carla now.\n\n\"We'd have to get the kids permission.\" her smile was as big as mine.\n\n\"What do you think kids, should your mom say yes?\" I pulled the ring out of my pocket as I got down on one knee. The answers were two loud yesses, one 'about time' and a 'damn straight.'\n\nCarla spun around to see the kids behind her, the look on her face was priceless but paled compared to the kiss she gave me as she fell into my arms. I took it as a yes and I was right.\n\n\"I'm wearing the dress, you know that, right?\" Carla whispered as our lips parted.\n\n\"We'll talk about it,\" I laughed and pulled her in for another kiss.\n\n***\n\nThanks for taking the time to read my little story. I hope you enjoyed it as much as I enjoyed writing it.\n\nPlease let me know what you liked and what you didn't. Your comments are why I write."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "letter",
        "crossdressing",
        "girlfriend",
        "tit sucking",
        "rough sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-letter-42"
}