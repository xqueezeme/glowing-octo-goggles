{
    "title": "Oral Exam Ch. 09",
    "pages": [
        "Once again, thank you for the comments and feedback. You guys have really motivated me to jot my thoughts down. A special thank you goes out to Rockcrawler & Company, and to Ally for the help and wonderful words of encouragement. If you haven't read the first eight stories you might want to start there. Feel free to send me your thoughts. I will respond. I'd love to hear where you think this should go next. Don't forget to vote. Enjoy.\n\n*\n\nMy eyes fluttered open. The room was dark. The frantic energy of the orgy that had occurred just a few hours before, had given way to a true \"slumber party.\" I could hear the dull rumble of a soft snore next to me. I turned my head to the left. It was Shannon who was sawing logs - dead to the world. I chuckled quietly. Who would have thought that petite, little Shannon would be the one to snore? Next, I looked to the right. Sarah was nestled against my body, sleeping with her head on my shoulder. The tension that had marked her face was now gone. She was the perfect image of tranquility, like she had found peace after a long ordeal. Two down, a third to go. I now knew the answer to the question that woke me up: Who was the horny, cocksucking slut that was diligently nibbling at my balls? Jessica.\n\nI propped myself up on my elbows, raised my head, and gazed down the length of my body. My cock was erect and ram-rod straight. It was sticking proud and tall up into the air. Jessica's small, feminine hand was curled around my shaft. Her grip was light and sensual. Her hand was moving up and down oh so slowly and gently. Her slow, subtle movements were that of a total tease. Jessica's pretty face was buried in my nuts. The skin of my nut sack was between her teeth. She was applying just enough to pressure to hold me in place. Her tongue was flicking the soft skin that extended past her teeth. It was pleasure, subtly lanced with pain. It was a wet, gentle, and exquisite torture that made me want to take her in ways I had never dreamed of before.\n\n\"I can see that I have your attention,\" Jessica whispered. She was looking up at me with those sexy blue eyes. Her long, blonde hair carelessly covered part of her face, making her resemble a 1940's femme fatale. Her ruby red mouth was crinkled in a smile. She gave my balls a lick. I could feel that my nuts were wet and sloppy. Jessica had certainly been down there for awhile, nuzzling and licking my sack. \"I was wondering if you were ever going to come to. We ladies took a lot out of you. Apparently a girl has to do a lot to wake your sorry ass up Mr. Happy has been enjoying himself for quite some time, though. He and I have been getting better acquainted.\" Jessica giggled before continuing, \"Mmmmmm, I love the taste of an unwashed cock and balls. All that, left over pussy juice tastes soooooo fuckin' good. I have been licking and sucking your cock and balls for probably twenty minutes now.\"\n\n\"Sorry. You girls really took a lot out of me. It was very hot, though - nothing like I would have expected. I don't think I could have planned it any better. That was quite an evening,\" I said, trying my best to stay coherent. Conversation would be very difficult if Jessica was going to continue applying her oral skills to my genitals. \n\n\"Is quite an evening,\" Jessica corrected me. She took one of my balls into her mouth. She sucked it in deep and swirled it around one her tongue. Her fleshy appendage hit at my nuts from all directions and angles. I wasn't expecting this fresh onslaught; she totally took me by surprise. I threw my head back and moaned. \"Well Professor, I don't think the evening is over. I think we are just beginning to have our fun,\" she said after she spit my balls out of her mouth. \"What do you say? Would you like to have some more fun? I need you your cock. Can you get it up another two or three times?\"\n\nI laughed. \"I don't know, Jessica. I am getting to be an old fogie. Did you see my cane? I might need a little Viagra to keep up with you.\" I looked her in the eyes and slowly and deliberately, \"But I sure as hell want to try, you sexy bitch.\"\n\nJessica giggled before she slapped my cock against her face. The effect was such a turn-on. She spoke again, \"Good. But don't expect me to just let you lie back and get a fuckin' blowjob, Professor. You need to do a little work too. I need some ol' fashioned humpin' and pumpin.' I want you to stick this bad boy inside of me. I need to feel you thrusting back and forth inside of my tight teen crack. Doesn't that sound good to you? Do you want that?\"\n\nI swallowed. \"Yes, very much.\"\n\n\"Well then Professor, get up and follow me.\"\n\nJessica winked at me and then got off the bed. I carefully followed suit, trying my best not to wake either of the remaining two sleeping beauties. Jessica opened my bedroom door, went into the hall, and turned to face me. She was bathed in the soft light from my living room. Jessica's bronze skin was positively aglow. Her body was completely - seductively, wonderfully - naked. She was a naughty goddess, a sex bomb, a blonde dream. She was the stuff of all my masturbation fantasies. Jessica leaned forward, pushing her heaping breasts together, before blowing me a kiss. She stood upright again and pivoted on her toes. Jessica then worked her hips with an oh so sexy extra helping of sass. She looked like a delicious diva as she sauntered into the bathroom. \n\nWhen she stood in the bathroom door she turned around to face me again. Jessica smiled, licked her finger, and then beckoned me with it. I felt my legs move. My mind was blank, but boy did my body know where I wanted to go. I followed that sexy, tan coed ass into my bathroom.\n\nJessica closed the door behind us. I heard the latch click and I saw her turn the lock. She stood on her tiptoes and threw her arms around my neck. Staring me in the eyes, she said, \"What we did earlier this evening was totally hot, but I am glad to finally have you alone. Those other women had their turn. Now I get you to myself. Kiss me, Professor.\" Her lips were puffed in a crimson pucker. I leaned in, pulled her naked form against my skin, and moved my mouth ever closer to her. I gently ran my tongue along slope of Jessica's lips, tracing the soft curves of her mouth. They were moist and ready, pursed for our joining. A gentle purr burbled up from her throat. My hand was stroking the small of her back, as I leaned in to her. This was such a sensual moment, overflowing with our longing and desire. I needed her. This sexy student made me so alive. She was giving me back me the excitement that I had lost. My life was too many books, too many classes. Our lips touched. They pressed against each other, so still. Our heartbeats echoed in my ears, our pulses raced on the brink of the plunge. We held it - that moment - to swoon with crystalized tenderness. The need, though, was too great; we could not hold back from the precipice of lust. Each set of lips moved softly, massaging its partner in the eternal lock that we formed. That single movement began the torrent that would burst the dam. I felt Jessica's tongue pry my mouth apart and enter my oral cavity. Our tongues met there in my mouth, and rubbed together in a sensuous lover's dual. Desire licked my body from head to toe. This was bliss. \n\nJessica's palm moved down my chest, past my stomach, to my crotch. Her hand found my growing cock. My hard rod and been dripping with pre-cum and boring insistently into her stomach. As she grabbed the tube between my legs, she released my tongue, my lips, from hers. She looked up at me - classic need and want in her eyes - and said, \"Oh that was so good. I am not sure if I have ever been kissed like that.\" She paused. A smile crinkled at the edge of her mouth. I could tell what she was thinking before she said, \"Professor, let's get in the shower. I have been a dirty girl. I need you to scrub me down and help me get clean.\"\n\nWith a flourish, I pushed aside the aside the maroon shower curtain and gestured for her to step inside the tub. It was nothing fancy, a bathtub / shower like a million others across America. For the moment, however, it was a palace of erotic delights. Jessica and I stepped over the white porcelain rim and turned on the shower spigot.\n\n\"Shit!\" Jessica squealed. \"That is fucking cold.\" Both Jessica and I tried, unsuccessfully, to dance around the liquid ice raining down from above. It stung and bit our naked flesh. I frantically reached out to adjust the shower knob. I needed to find the heat that would melt away the frigid and startling cold. It took a moment, but the hot water began to flow. Giggling to each other, Jessica and I embraced. Our skin was thoroughly chilled; my cock was now flaccid from shock. I held her to me, feeling our mutual body heat pulse between us. Her tits were tight against my chest as I bent down to kiss her again.\n\nFor a long time we stood there, kissing under the warm gush of water. Tiny beads and droplets caressed our skin, warming our bones, beating away the chill. Jessica's eighteen year old body was so ripe and warm in my arms. I could feel myself becoming aroused. My cock was lengthening, becoming solid as the rush of blood pumped to my glands. Jessica must have felt it too, urgently pressing against her, since she backed away and cast her eyes down at my crotch. A smile lit up her face as she handed me a bottle of bath gel. \"It looks like he came in from the cold,\" she giggled lightly. \"I know a place where he can be really warm. A fire is already waiting for him. First though, why don't you soap me up? Then we can see to him.\"\n\nHer wish was my command. I squirted a big dollop of bath gel onto my open palm. Sarah turned around so that her back was facing toward me. I rubbed my hands together, and then placed them on her shoulders. Knots of tension had built up under her supple skin. I dug in my fingers, trying to rub away the lingering evidence of tension and stress. A soft moan told me that Jessica was beginning to relax. I slid my hands down her back, working the soap into her golden skin. There was not an imperfection or blemish anywhere on her body. Jessica was so baby smooth and silky. I kneaded her taut muscles with the pads of my fingers. I wanted her to feel the pressure of my touch, to know the strength of my hands. I wanted her to melt before me, to softly give in to the pleasure of the water, the heat, and my caress. My hands were now working the small of her back, rubbing in ever-expanding circles. This was so good. One more moment and I would be at her ass....\n\n\"Professor, can you get my front too?\" I heard Jessica query. Her voice startled me, as if she was shaking me from a dream. I smiled. Ass for tits - not a bad trade. \n\n\"Sure...\" I squirted more gel onto my hands. Reaching around Jessica's shoulders I placed my palms directly over her nipples and squeezed. They were soft and fleshy, the perfect pair. \n\nJessica laughed, \"You don't waste any time do you?\" I chuckled back at her, shaking my head. \"Well that's ok Professor. I want you to touch them. I want to feel your hands on my tits. That is why I asked.\" I softly kneaded the firm flesh of her mammaries, catching her nipples between my fingers. The stiff points were hard and poking into my hands. \"Oh Professor that feels good, but it isn't what I really want. It isn't what I need. I want it rough - hard. I want you to maul my tits. Show me that you really want them. Make it so I know how much you love groping my fucking sweater-meat.\" Fuck! Jessica told me just what I needed to hear. I clenched my hands feeling her soft skin beneath my fingers. Her tits were so round and firm. They were glorious, a dream cum true. I slapped her right tit on the nipple. \"Oh, so GOOD!\" I heard Jessica moan. I could practically feel sparks of pleasure fly from her aureole. \"Grab them, slap them!\" \n\nBut I needed more than Jessica's tits; her cunt was calling out it's siren's song. I whispered harshly in Jessica's ear, \"I am going to fuck you. I am going to shove my throbbing, hard cock into your dirty, wet fuck hole. You are going to be my slut, my whore taking my dick.\" I placed the crown of my rod between her flaming lips. They were wet and engorged from arousal. They parted easily for me. I heard her moan, soft and incoherent. Jessica was very ready. Now was the time. I had to have her.\n\nI drove my engorged dick deep into her cunt. In one swift thrust I bottomed out at the hilt. A deep wail escaped from Jessica's lips, \"Ohhhhhhhhhhhhhhhh fuuuuuuck!!!\" as my balls hit against her clit. During most other fucks I would hold this moment. I would take time to let the woman I was fucking adjust to my presence inside of her. But not here; not now! This was immediate, this was necessary. I spanked her ass and pulled most of the way out again. I could almost see the tip of my dick leaving her pussy - then bam! I rammed my cock inside of her sopping, wet cunt. Her buttocks rippled and shook with the force of my thrust. Then I banged her again. \"Ohhhhh.... God.... Fuck my dirty pussy. Use it on your DICK,\" Jessica screamed. On the next thrust Jessica bent over at the waist, bracing herself on the tile bathroom wall. Her hands were extended and her legs were in a braced straddling position. I grinned. We were stable - now I could really fuck her!\n\nMy hands gripped Jessica around her slender waist. My fingers dug into her wet skin, feeling her supple muscles ripple underneath my touch. I began a forceful power fuck as I growled, \"Take it. Take my fucking cock! Take it, you student whore.\" She whipped her hair back and moaned in response. Her head was turned to face me, her blue eyes boring into mine. She licked her red bee-stung lips as she panted. My cock was pistoning in and out of her slick, smooth pussy without remorse. It felt so tight and good. I loved fucking Jessica. The shower was raining down on both of our backs. Warm water sluiced off our naked bodies in several streams. \"Fuck, you are such a good slut! You feel so wrapped around on my cock!\" \n\nI was banging into her mercilessly, pummeling her with my rock-hard rod. I drove into her again and her again. Jessica wailed, \"Ohhhhh, ohhh, oh fuck.... oh God, oh fuck it.... unh, unh, unh!!!\" Her head slumped, as she took my assault. Jessica was only focused on the cock beating time in her pussy. I looked down at the perfect ass that I was banging. It was lovely and heart-shaped, with the arrow of my cock spearing it down the middle splitting it apart. \n\nBut then I smiled at a new thought: so delicious and evil. Her puckered asshole - her beautiful little starfish - was winking up at me. It was calling my name, telling me it needed my cock. I slowed my thrusts and pulled out of Jessica's cunt. She turned her head to look up at me. Her face was contorted with pained confusion. \"What? No fuck me. DO IT! Put your cock back inside of me. I need it! I was sooooooooo close. I neeeeeeed your fucking cock!\" she whined. I just chortled and slapped my cock against her pussy. She bucked in jolts of pleasure, but she needed far more. So I made preparations to give her what she craved. I kneeled in the tub and spread her butt cheeks with my hands. I moved closer and gave her sexy asshole a lick. My tongue twirled around the outer circle, and speared her once, twice, three times for good measure. Jessica's body convulsed and she released and deep and throaty moan. Her little, pink rosebud was so delicious. That was just a taste (for both of us), but I knew from her reaction that she would gladly take the next step of my devious plan. \n\nI stood up. I placed my thumb at her wrinkled asshole and began to rub. At first my touch was gentle, but I could sense she needed more. I built the pressure, rubbing circles around her sphincter ring. Jessica moaned and twitched. I slowly slipped my thumb inside of her ass. It was so warm, so tight. For a moment the pressure on my thumb was almost unbearable. Soon, though, Jessica began to relax. This was the first time I had truly been inside of her delectable ass. I could feel her clutching me, holding me as I penetrated her nether regions. I pushed in further, beyond my knuckle, and she groaned, \"Oh, my ass. That feels so good. I have wanted you in my eighteen year old ass for so long.\" My thumb was all the way inside of her backdoor. I rotated my hand, spinning my thumb inside of her dark channel. I pulled my thumb most of the way out of her ass and then slowly slid it back in again. I was fucking her ass with my thumb - in and out - working and loosening her forbidden hole with my touch. She was ready. Jessica needed something bigger in her ass. It was time to replace my thumb with my cock.\n\nI pulled my thumb out of her butt. I leaned forward and placed my ass-covered thumb at Jessica's cherry lips. Without hesitation, she eagerly took it into her mouth - sucking and slurping my thumb down to the base. Perfect. \"So Jessica, are you ready?\" I said. She was trembling beneath me as I kneaded her ass cheeks. My voice was calm, but insistent. I knew what I wanted, but I needed her to want it too. This act had to be completely her decision. Without her clear and total consent I would not go forward. \"You know what is next don't you?\"\n\nJessica looked up at me from her bent over doggie position. She said, her voice dripping with sultry desire and need, \"You are going to fuck me in my ass with your rock-hard cock, Professor.\"\n\n\"Do you want that, Jessica?\"\n\n\"Oh yeah. I want your cock so badly. I need it in my fucking ass. Do it, Professor. Fuck my ass.\"\n\nMy cock was resting between the crack of her butt cheeks. I lathered it up with bath gel, making my dick slick and slippery. I rubbed the tip around the perimeter of her delicate, little hole. Jessica' body went tense beneath me. She was taut with the anticipation of my log being shoved up her ass. I wanted to ask one more time. \"Are you sure this is what you want Jessica?\"\n\n\"Oh yeah, Professor.\"\n\n\"Then fuckin' say it like you mean it, you teen slut!\"\n\n\"Do it Professor! Fucking ram it UP MY ASS!!!!!\" \n\nI pushed my way into Jessica's tiny, little, butt hole. I felt her muscles contract as she sucked in air through her teeth. The crown of my dick was past the tight outer ring of her ass. I looked down and I asked her, \"Do you feel ok? Do you want me to continue?\" I did not want to hurt her; I needed her to feel good too. Jessica just moaned and nodded her head yes. I accepted her answer and pushed in deeper. Oh, the warm dry heat of her back channel felt so good raging around my cock. I needed more. Slowly, I worked my way further inside of Jessica. My hip thrusts were gentle, but yet firm and insistent. I tenderly rubbed the small of her back with my hands, massaging her skin. Jessica's face was a volatile mixture of pleasure and pain. I wanted to ease the passage of my dick; I needed to take away the tension that had built up in her waist. I acutely wanted her to feel the pleasure of this fuck.\n\nMy entire length was now inside of Jessica's anal cavity. Her tight ass ring was stretched taut by my fat cock. I waited a moment to let her adjust to the invader up her ass. To my surprise, I was not the first one to move. Jessica bent her knees and was pulling forward, sliding off of my dick. Did she want it to end? But then she stood up again pushed her asshole back onto my throbbing slab of meat. So that's how it was; Jessica wanted to fuck! She wanted to feel my cock splitting her ass open. Fair ' enough. I slowly started to slide. The friction was incredible; I had never felt anything grip my dick quite so tightly. It felt like an iron vice, coated in velvet, was clutching my cock - sliding up and down - demanding that I fuck. I couldn't help but moan. She was so good. This was so fucking naughty, perhaps the dirtiest of all acts. \"Fuck!\" I shouted. \"Where's my dick Jessica? Tell me where my dick is?",
        "She panted softly, \"In.... my ass\"\n\n\"Louder. Where? I want to hear you while I am fucking you \"\n\n\"My ass.\" Her voice was stronger and more confident, but still not as enthusiastic as I wanted it to be. \n\n\"Where is my dick, you little fucking slut? Say it like you mean it? If you don't say it loud enough I will stop fucking you,\" I screamed as I rammed into her.\n\n\"Your dick is in MY ASS. Uhn.... Keep fucking me with it. DO ME! Ohhhh yeah.... fuck your slutty STUDENT'S ASS!!!!.\"\n\n\"Much better,\" I said. \"Goddamn, Jessica, you have me so horny. I love your tight, teen ass. It feels so good working on my cock.\" \n\nJessica had only one hand bracing herself against the shower wall. The other was frantically strumming her clit and fingering her pussy. She seemed lost to a pleasure filled oblivion. I could tell that she was close to a massive orgasm. She had been at the brink for so long. I heard her yell, \"I love it to. DO it! Fuck my ass hard. Pound it! Ram it inside of me! Fuck my slutty teen ass. Make me cum. Make my ass cum! Ram it into me! Fucking fuck my tight teen VIRGIN ass!\"\n\nWhat?! I had not expected the word \"virgin\" to tumble from Jessica's lips. No one had ever been inside of her ass before? She had never taken another cock up her beautiful teen butt hole? I was the first to carnally know the intimate wonders of her eighteen year old backdoor? Sweet! That single word jump started me into action. I let out a furious, guttural roar and began to fuck her hard and deep. I was a man possessed. My hips slammed into her no-longer virgin ass, sending a lewd wet slapping sound echoing off the tile walls. I pulled Jessica's wet hair, knotting it around my fist. She was now practically standing, as banged her harder and harder. Our lips met feverishly, frantically burning for the refreshment of a kiss. Our tongues intertwined - doing the same timeless dance my cock was doing with Jessica's ass. \n\nJessica's lips pressed to mine as she let out a terrible scream. Her body went rigid and still. I could feel jolts of pleasure course up and down her limbs. Her breathing was a pant, and then she went limp. Jessica had cum.\n\nI was close and needed to finish. I pulled out of Jessica's backdoor, and started to frantically stroke my cock. It was still slippery from the bath gel that had lubricated my entry to heaven. Jessica had turned around and could see what I was doing. Her eyes locked on my hard cock as I stroked it to orgasm. Wordlessly, she fell to her knees. She pulled her hair back out of her eyes and opened her mouth wide. I knew her intentions. Her desire was clear. She smiled a wan exhausted smile and then simply waited. A moment later jizz exploded from the end of my cock. The first blast hit her across the forehead, while the next landed on her chin. The third and fourth hit their mark, landing in her mouth spot on. The rest was small spurts and dry heaves. With a gulp, Jessica swallowed my cum. She then licked her lips clean. Her hand reached up to tickle my balls. The touch was teasing and tender, a sign of her fulfilled desire. Her nails scratched lightly at the soft skin of my sack. She looked so amazing, so sexy and beautiful, looking up at me - her face splattered with nut. I guess that I am a romantic.\n\n*****\n\nWe rinsed the soap and cum from our bodies before kissing again in the shower. This time it was soft, sensual, perhaps even loving. Our desire, while still lingering beneath surface, was not the raging flame it once was. Instead, it was a smolder, a slow burn. I felt relaxed, there in Jessica's arms. I held her and she held me. Our breathing was a syncopated rhythm. The water pelted down, making us feel like we were necking in the rain. Unfortunately, the shower was turning cold. No fun! We had to get moving.\n\nWe got out of the shower and toweled off. Jessica leaned up to kiss my cheek. She then said to me, sounding perhaps a little more uncertain and girlish than usual, \"That was... amazing.... Professor. Um, thank you. I will never forget it. You made everything feel very special. I will probably, like, walk a little funny for the next few days, but I am not sure if I have ever been so turned on.\"\n\n\"It was great for me too Jessica. I am honored. So that really was your first time?\"\n\n\"Oh yeah, aside from a few fingers and a vibrator Shan likes to abuse me with. Those don't really count. A cock is so different.... so much better. It is such a different feeling. It is like... I don't know... maybe it is just about being full and dirty... it is about being so nasty that I am taking a cock in a place where it is not supposed to go. Oh yeah. That's hot. Do you understand?\"\n\n\"I think I do,\" I said.\n\nJessica continued, \"It was really good and I have be so curious for, like, a long time. I mean, I don't think I will want it every day, but it probably is a good treat every now and then. Cool?\"\n\n\"Yeah,\" my voice trailed off as I thought for a moment. I could hear my stomach rumbling. \"Not to change the subject, but I'm getting a little hungry. Would you like to go out with me and get some fast food and then bring it back?\"\n\n\"Oh, that sounds good!\" Jessica squealed in delight. Her uncovered tits shook as she clapped her hands together. \"How about Taco Bell? They should be open.\"\n\n\"I think I can make a run for the border,\" I grinned. \"Jessica, do you like your taco shells hard or soft?\"\n\nShe grinned back, \"Hard Professor. Definitely hard.\"\n\n*****\n\nWe were now sitting in a long line of cars snaking through the Taco Bell parking lot. The car ahead of us was placing its order into the squawking drive-through box. Jessica, who was next to me lip-synching along to the Pussy Cat Dolls (It seemed that she wanted me to loosen up her buttons -- big surprise), had already given me her order. Two hard shell tacos and a chicken soft taco. My mind wandered and I thought about what happened after the shower. \n\nEarlier that evening, when we were done drying off, Jessica and I crept naked back into my bedroom. We tiptoed in expecting to find Sarah and Shannon asleep. I guess we weren't the only ones who were horny, though. Shannon was on top, naked and lewdly grinding her teen pussy in Sarah's face. At the same time, Shannon was also busy hungrily lapping away at Sarah's spread-eagle cunt. A chorus of \"oooooohs,\" \"unhs,\" and \"ahhhhhhhs\" filled the room. They were lost in the carnal delights of pussy eating (and they both had delightful pussies -- I knew from experience). Shannon and Sarah didn't seem to notice that Jessica and I had entered the room. Instead, these two beautiful sluts obliviously continued to lick, suck, and finger fuck each other's genitals with abandon. \n\nJessica turned to me and made \"sshh\" gesture with her finger. I smiled back. I could see her devious mind at work - so hot! Jessica tiptoed over to the bed, raised her arm high in the air, and brought it down hard, heavy, and fast onto the left cheek of Shannon's tight, little ass.\n\nThere is nothing quite like the dull fleshy sound of a spanking. This one, however, was a spanking supreme! Jessica - that evil and naughty woman - had outdone herself. Her aim was dead-on, precisely striking the fleshy heart of Shannon's buttock. The force of the smack echoed off my walls and in my brain. Shannon, who was completely caught off guard, howled in pain. She rolled off of Sarah and sat upright. Her face was a mixture of confusion, arousal, and rage. \"You bitch, I WAS gonna cum!\" Shannon wailed. Jessica, who had the good sense to step back, burst into an uncontrollable fit of giggles. Distraught and looking for support, Shannon looked at me. I could see the obvious want and desperation in her eyes. I just smiled and shrugged my shoulders. Even Sarah, who was clearly frustrated by Shannon breaking their torrid sixty-nine, smiled before pulling her back onto the bed. \n\n\"Sorry I didn't mean to startle you.\" Jessica asserted as she giggled girlishly. Her eyes were flickering with laughter. Jessica was so sexy when she lied and teased. \"The Prof and I were getting hungry, and were thinking about going to Taco Bell. Care to tag along?\"\n\nSarah quickly answered, \"No, but thanks dude. We were rudely interrupted and Shannon has some business that she really needs to finish. And I think we have plenty to eat.\"\n\n\"Cool. We'll just grab our clothes and go then,\" I said. Sarah and Shannon didn't even respond. They simply fell back to their old rhythm and started again.\n\n*****\n\nThe vehicle in front of me moved. I took my foot off the break and lightly tapped the gas. My car eased into position alongside the brightly lit outdoor menu. I rolled down my window and turned down PCD. Jessica crossed her arms over her chest, \"harrumphed,\" and frowned at me in mock irritation. I chuckled and she smiled back. We were four car lengths away from the check-out window. This was going to take awhile.\n\nA female voice that sounded oh so thrilled to be working the late shift, broadcast over the intercom system, \"Welcome to Taco Bell. Can I take your order?\"\n\nI replied, \"Yeah, sure. I'd like four hard shelled tacos, two chicken soft tacos, and a....\" My voice trailed off. My focus was in changed in mid-sentence. I looked down. Jessica's hand was in my lap. She had unzipped my pants and was reaching inside. I could feel her fingertips probing gently at my cock. She pulled it through the hole in my boxers and the hole in my pants. God, she couldn't be serious?!\n\n\"Sir, was there anything else?\" the voice over the intercom queried.\n\nHot damn! Focus on the order not the handjob. \"Uh yeah. I needed a beef mexi-melt too.\"\n\nJessica spit on my cock. A long line of drool trailed from her lips down to my crown. She then slurped up her spittle in a single forceful suck -- so sexy. Her eyes gazed up at me, laughing at the awkward situation she had put me in. \"Ok a mexi-melt. Do you want anything to drink with that?\" the disembodied voice said. Jessica's hand wrapped around my shaft, and lightly began to slide up and down. She spit on my cock again, lubricating my shaft with her natural moisture. She was making sloshy, squishy sounds as she stroked my hard cock up and down.\n\n\"Ummmm, no. That ok,\" I yelled out the window to the menu display. I could hear my voice warble as I talked. This handjob felt so fucking good. Her hand was rotating around my shaft as it went up and down. The two forms of rubbing were filling me with need.\n\nJessica's head descended onto my cock. She ran her warm lips along the side of the shaft. Slurp! She blew little feather kisses from top to bottom - and then back up again. Jessica was a juicy teen with sucking away at a lollipop dick. \"Any sauce with that?\" \n\nJessica raised her head off of my cock and yelled loudly, \"No that's ok. I think I will have plenty sauce right from the tap.\" She looked so nasty, blonde hair framing her face and saliva dripping down her chin.\n\nThe woman over the intercom paused for a moment before responding, \"What?\" She sounded very confused.\n\nJessica didn't answer the woman's question. Instead, she went back down on my cock. I could feel her teeth gently scraping against the sides of my dick. This time she took my length fully down her throat I could hear her gag, as spit drooled onto my pants. What a wonderful, naughty slut! \n\n\"Sir?\"\n\nI was shaken from the amazing blowjob playing out in my lap. I know my voice was quivering when I answered the intercom, \"Never mind, just throw in whatever.\"\n\n\"Ok pull around.\"\n\nOne car had already gotten its food and left the line. Two more to go. I turned the radio back up. The song had changed. Trent Rezner of Nine Inch Nails was now singing, \"I want to fuck you like an animal. I want to feel you from the inside.\" While the transition from PCD to NIN was a little odd, I took it in stride. Besides, I am not sure if there was any song that was more appropriate for this moment. I did want to fuck her like an animal. I did want to feel her from the inside. I wanted to use her mouth like a cunt. This public blowjob in the drive through of a Taco Bell had gotten to me. Anyone could look in the window of my car and see this hot slut giving me sloppy wet head. She drove me nuts. I needed to bang the shit out of this corn-fed, Midwestern, teen princess. I needed her to yummy down on my raging cock.\n\nI looked down at Jessica and said, \"I assume you aren't going anywhere?\" \n\nJessica mumbled the word, \"Nope\" around my throbbing cock. I laughed. She was absolutely unbelievable. I edged my car forward, filling the empty space in front of me. Jessica had the first inch or two of my cock between her lips. Her mouth formed an airtight suction, which was sliding oh so excruciatingly up and down. Her tongue was swirling and dancing around the sensitive underside of my shaft. My glands were being coaxed toward a world of pleasure. I placed my palm on the back of her head and began stroking Jessica's long blonde hair. At the roots, she was still a little damp from our shower. Her tongue kept hitting the same spot on the underside of my cock. Faster and faster it went - her skills edging me further along.\n\n\"Fuck that is right! That feels so good! Suck it.\" I muttered to Jessica. I didn't want to her take too long, to draw out the tease. This situation demanded speed. She had gotten me horny so quickly. Despite the fact that I had already had two massive, mind-blowing orgasms that evening, I wanted to cum again. \"Suck my cock! I want you to swallow my cum!\" She took my words as cues to pick up the pace. Her tongue was a hurricane on my dick. So good! The car in front of me moved. I filled its spot. I wondered if the people ahead of us could see what was going on in the car behind them. Could they see Jessica's blonde head bobbing up and down in their rear-view mirror? Probably not, but it was still a turn on none-the less. I balled up Jessica's hair in my fist and pushed her head downward. I could hear her gag on my throbbing rod, but she still took it in. I pulled her back up and then forced her down again. She got the idea; Jessica knew what I was looking for. She too liked it rough.\n\nJessica was moving up and down of her own volition. Her mouth was inhaling my cock. This was a sloppy blowjob; spit was flying everywhere. Despite her own movements, I needed to be an active player. I was still pushing and pulling her head up and down, forcing my cock deeper into her throat. Not enough. I wanted to bury my finger in her pussy. I pulled up her skirt and moved my hand to her crotch. I roughly pulled Jessica's panties to one side and found her moist slit. She was juicy and clearly turned on. Without consideration or finesse, I shoved my finger inside of her teenage twat. She groaned around my shaft in time with the entrance of my finger. I muttered two words to her, \"Suck it!\" Then I added a second and third finger to her inflamed cunt. The fourth and final car moved out of the line. It was time to pull up alongside the check-out window. I felt it was only fair to give Jessica a warning, \"I am about to pull up to the window.\" She pulled her mouth off my cock. For a moment, I felt disappointment wash over me. Then she smiled, looked at me sweetly with her baby-blues, and said, \"Good.\" He then lowered her head to lick alongside my sloppy, wet shaft. I smiled back, as I continued to finger-fuck her sloppy, eighteen year old pussy. \n\nI moved my car up alongside the window. A cute Latina chick of about eighteen or nineteen was working the register. She was wearing a very non-flattering Taco Bell uniform, but I could see ripe and luscious curves hiding underneath. She didn't see us at first from her vantage point, but then she looked down and into my car. I am sure that we were an obscene sight. Jessica was sucking my cock, my hips were bucking into her face, and three of my fingers were drilling away at her pussy. \n\nThe check-out girl's jaw dropped. She tried to speak a couple of times and no words came out. I just threw my head back and smiled. Jessica (I am sure she knew full well what she was doing) moaned loudly against my dick, \"Oh Professor I love sucking your cock. It tastes so good. Yeah, finger-fuck my pussy. Use me like the slut that I am. I love three fingers up my fuckin' cunt. Let's hurry home so you can fuck my tight ass again.\" The Taco Bell woman's hand clapped to her mouth in shock and disbelief. Jessica was so damn nasty. I didn't say a word. Instead, I simply put my free hand back on top of Jessica's head and started pushing. I heard Jessica gag loudly. Then I let out a long groan of satisfaction. \n\nThe woman said, \"Ummmm, that will be $8.34. I'll go get your order.\" I pulled the money out of my wallet and handed it to her. She turned briskly on her heel and walked away. \n\nJessica giggled and went back to work on my cock. I relaxed in the car seat. I was still finger-fucking her sweet, teen snatch but it was at a playful tempo. My other hand was still on the back of Jessica's head. I was stroking her hair in time to the rhythm of her licks. Jessica's hand was fishing around in my pants. She was cupping my balls, rolling them between her insistent fingers. I was close. The electric sensations were too much. I wanted to cum in Jessica's mouth. I wanted to bury my shaft in the back of her throat. I wanted her to gulp down my jizz, the white hot torrent that would cum spilling from the tip of my schlong. But I also needed to time this just right.\n\nThe cute Taco Bell woman appeared back at the window. She looked down at us and smiled nervously. She said, \"Did you say whether you needed any sauce with your order?\"\n\nIt was time. I gasped and panted. I felt my body jerk and my hips buck. I was fucking Jessica's sweet mouth, while holding her in place with my hand. My head was turned so that I was staring into the eyes of the Taco Bell woman. She had an odd, off-kilter smile on her face. She silently watched me cum, to see me unload my ball batter into Jessica's mouth. Jessica gurgled in my lap as she massaged my balls. She was trying to drain every drop of hot, thick, white batter from my furious cock. The seed shot out of the hole and pelted the back of her throat. Once, twice, three times, four. My jizz exploded into her mouth, coating her tonsils. I fell back to my seat, head lolling to the side. So sweet.\n\nJessica rose up from my lap. She looked out the window and smiled at the woman in the Taco Bell uniform. Cum was dribbling from the corner of her mouth down to her chin. It was so sexy. Jessica wiped my sperm off her face with the back of her hand and then licked it up. For the finale - the final coup d'etat - she gargled with my cum, blowing little bubbles. After swallowing in an over-emphasized gulp, she said with confidence, \"His sauce is pretty good, nice, warm, and creamy, but I could use something spicier. Have you got anything like that?\"\n\nThe woman still had a bemused expression on her face. Her thoughts were difficult to read - but maybe I was just too tired from cumming for the third time that night. The attendant spoke softly as she held out the sack of food, \"Yeah, I think so. It is in the bag.\" \n\n\"Cool.\" Jessica said. She reached over me and grabbed the bag of tacos through the window. I think Jessica's hand lightly brushed against the Taco Bell woman's fingertips. They lingered there - together - for a moment too long. Damn, Jessica was incorrigible. \"I like it spicy,\" Jessica said, settling back into her seat. She turned back to me and said, \"You ready to go Professor. We're holding up the line.\"\n\nI chuckled, gave a little wave, and pulled away. I rolled up the window, to shut out the cold night air. The orgasm had settled me. The roads were peaceful, and a hint of snow was starting to fall. It was beautiful, shimmering in the moonlight. Meanwhile, Jessica was rummaging through the Taco Bell bag. I could hear the rustling of taco wrappers and....",
        "\"Voila!\" Jessica exclaimed. I looked over at her in the seat next to me. She holding a piece of paper and was practically beaming. \"I thought so. What a naughty minx.\"\n\n\"Huh?\"\n\n\"Tell me Professor, the woman who took our order, the one who saw me slurping on your delicious, hard cock - did you find her attractive?\" Jessica asked.\n\n\"Yeah, I guess. Why?\" Where was she going with this?\n\n\"Because she wants us to fuck her. She gave put her number in the bag, and I think we need to give her a call.\" "
    ],
    "authorname": "gradprof",
    "tags": [
        "anal",
        "shower",
        "slut",
        "taco",
        "sorority",
        "blowjob",
        "coed",
        "exhibition",
        "swallow"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/oral-exam-ch-09"
}