{
    "title": "One Knight Stand",
    "pages": [
        "Sadie stumbled. Tripped over a lone piece of drift wood on the deserted beach. She had been walking for an hour, maybe more. She had no idea how far she was from the bungalow she had rented on the isolated Northern Welsh coast. It would be easy enough of course to simply re-trace her steps. But that would take time. Time she might not have if the dark clouds rolling off the sea and the increasingly boisterous winds were any indication.\n\nAs if Mother Nature herself were listening to her thoughts, the heavens opened up and a barrage of icy cold rainy began to fall. She stood for a long moment, staring first back the way that she had come and then ahead. She knew what lay behind her...safety, warmth, home. But it was so far away now. She had no idea what lay ahead of her. She had not seen any sign of another human for at least the last half an hour. It could just as easily be another half an hour or longer before she did. \n\nIsolation was what she wanted most. She needed to be alone. Away from everyone who knew her. Everyone that cared about her. Away from the constant phone calls, texts and emails. She knew everyone was worried about her. Hell, she was worried about her. The past six month had been the worst imaginable. The miscarriage, then she was made redundant at the job she had had since she left uni, if that was not enough her fianc\u00e9e had broken off their engagement...two weeks before the wedding. \n\nThis was supposed to be their honeymoon. They had thought that an isolated beach bungalow was the perfect place to spend it. No tourist distractions, no sickeningly sweet tropical drinks to cloud their senses...just the two of them. Alone together. Instead Sadie was alone. Alone by herself. Perhaps for the first time really in her twenty-eight years upon this earth. \n\nShe shook her head. Sometimes it seemed that there were simply no right answers in life. Even if she ran it would take her close to half an hour to get back to the bungalow. So instead she took the risk and walked ahead at a brisk pace. She had to lean into the wind that seemed to have shifted direction. Now it was blowing from that direction. She dropped her head and leaned her shoulder into it. Each step felt as uncertain, unsure as the future itself now. \n\nShe only managed to go a few steps. The battle just seemed too much. Each step got harder. Each stride took more energy than she had. She felt the chill of the pounding rain seeping through her jumper and jeans, through her skin and muscles to the very core of her bones. She was so cold. So cold and alone now. \n\nHer clothes seemed heavier. Like they were weighing her down. She laughed at the sheer madness of it as she striped the jumper over her head. She tossed it into the raging surf. She kicked off her trainers that were squishy with sea water. They too landed in the sea. Her jeans soon followed. She stood in just her bra and knickers as she looked out at the sea and sky. But even those seemed too restrictive. She unsnapped her bra and allowed it to slide down her arms, flinging it too into the waves. She wiggled out of the matching knickers and kicked them into the ocean. \n\nShe flung out her arms and began to dance about in the waves. She felt free. Truly free for the first time in her life perhaps. She was cold and alone, yes, but she was free. It felt surprisingly good. \n\nThen from nowhere a rough woolen blanket was wrapped about her. Strong arms held it in place. Captured her. She screamed but the wind and sea absorbed her pleas. For the first time she realized how vulnerable she was. Alone and naked on a deserted beach, miles from a village or perhaps any other human being. She truly had lost her mind...and now she might lose her life as well. What was left of it any way. \n\nYet in that moment, she knew...knew that no matter what came she wanted to live. To truly live. Not just go through the motions. No do what everyone expected of her. Not be their good girl as she always had been. She wanted it back. She wanted that freedom she had felt for only those brief moments. \n\nAnd she fought to keep it. She struggled within the blanket. Fought and shoved against the stranger that seemed so much larger and stronger than she was. \n\n\"Cease your silliness, woman,\" his deep and hypnotic voice boomed louder than the thunder. \"I will not permit you to catch your death of cold dancing naked in the rain.\"\n\nSadie calmed just a bit. She was still on edge, ready to renew her struggles at any moment. But she quieted enough to get a real look at her assailant. As she had guessed from size and strength it was a man. A large one at that. But she could tell little else about him. His whole upper body, head and face were covered in a dark woolen cape. She laughed hysterically at the sight. He appeared straight out of the phantom.\n\nHe shook his head, \"Pitifully weak vessels.\"\n\nShe knew she was being insulted but not why. Did this strange man think that she would just go with him? Just do whatever he said? \n\n\"It would be prudent to get in out of this storm, my lady.\" He looked up at the skies. They seemed to be getting darker by the moment. \"Accepting shelter when offered would be the sensible choice, would it not?\"\n\nShe studied the man once more, trying to magically see beneath the hood. To catch some glimpse of her savior...or her captor. Either way it was futile. The wind itself seemed to aid the man as it wiped the dark, damp material about his face crafting new shadows to swallow the old ones. \n\nIn the end, she looked back towards her rented bungalow and then out to sea. As the man said, what choice did she have really? Prudence seemed against her this day. She nodded her head and whispered, \"Lead the way.\"\n\n\"Common sense at last,\" it was odd but somehow she knew he was smiling, chuckling almost beneath the safety of those folds. He held out his left hand for her. She gave one final look about the beach, hoping that perhaps the sea had some mercy, perhaps had returned some of her offerings to the shore. But it was futile. \n\nShe took a deep breath. She could only hope that she was making the right choice. But then again she had thought she was making the right ones before and look how that turned out. Sometimes the safest of choices were nothing more than an illusion. So perhaps then ludicrous ones like following strangers into the unknown were not as risky as she had been taught? As with all things only time would tell.\n\nHe bowed at the waist with an old world grace and just a bit of hesitancy. It was an action that should have reassured Sadie, but only confused her more. She shook her head as he tugged her by the hand, leading her across the few remaining feet of sandy beaches and towards the rocky cliffs. How had she not noticed the thin trail that led up the side of their steep face? \n\nIt took them several long minutes to make their way slowly up the path. Sadie had no opportunity to study the man further as her eyes were glued to her feet. She watched each step closely to keep from stubbing a toe upon a root or burying a rock or glass deep into her bare feet. Suddenly the freedom she had felt as she fool hardly tossed her clothes into the surf did not seem so free. \n\nWhen they reached the top of cliff, Sadie finally looked up. Before her stood the ruins of what must have once been a magnificent medieval castle. Three of its four turrets were half destroyed as were two of its walls. But its grey stone seemed to sing an ancient song of welcome to weary travelers. It was another odd sensation: eerie and like coming home at the same time. \n\n\"It's beautiful,\" she whispered reverently. The man shrugged his broad and perhaps a bit stooped shoulders, but she had that sensation once more that he smiled beneath the hood.\n\n\"Welcome to my home, fair lady. Do you enter of your own free will?\" his voice had a gravelly tone as he pronounced each word carefully. \n\nShe noted the thickness of his Welsh accent that even she had trouble understanding. She was not Welsh but it had been her family's favorite holiday location. They had visited almost every summer; it was a tradition she had continued as an adult. There had always been something about this wild and beautiful land that called to her. Now that song seemed as loud as the 1812 Overture in her spirit. So not even her mystery host's odd speech and behavior seemed unusual in this place where time had stood still. \n\nThey made the climb slowly through the rubble with her bare feet. The only sound was the wind and waves whipping about them. Several silent moments later they made their way into the relative safety of the one remaining turret. The staircase leading upwards was one of the narrowest that Sadie had ever traversed. Its stone slabs were so cold that they warmed her bare feet with each step. \n\nAt the top of the stairs opened a bare and desolate room. Its only furnishings were a pile of rough woolen blankets against one wall. They were exceedingly tidy. And there was a fire roaring in the fireplace. How had she not seen the smoke from the beach earlier? But then again they were at the top of a cliff and if the winds blew the smoke away from the beach they would be easy to miss, she thought.\n\nThe man shoved her towards the fire at the same time he yanked the sodden blanket from about her shoulders. Sadie cried out as she stood naked and shivering before a stranger. The fear was back. \n\n\"Warm yourself by the fire, woman,\" he commanded as he hung the wet blanket from hooks on a wall. Hooks that might have once been used for tapestries, she imagined. When he was done with that task, he reached for another greyish woolen blanket from the pile on the floor. He wrapped it about her. \"I shall be back in a moment with food.\"\n\nSadie nodded mutely then she noticed that he remained wrapped in the cape that was dripping wet. \"What about you? Aren't you cold in that thing? Shouldn't you change too?\" she asked.\n\nThe hood remained firmly in place as the creature shook its head from side to side slowly. \"This cold is nothing compared to that inside of me,\" then he was gone. Simply gone. Vanished almost. \n\nSadie shook her head as she looked around the small room in the final rays of the setting sun. This place would have never been one of the great castles. It was much too small for that. More likely it was the home of some local feudal lordling. But it would have been a nice one. Its craftsmanship had withstood hundreds of years of the demanding Welsh elements...wind, rain and surf. \n\nShe was examining the great stone fireplace when he suddenly appeared as if out of nowhere with a steaming earthen ware cup and loaf of bread. She smiled up at the dark figure as she offered her gratitude, \"Thank you.\" She frowned, \"I don't even know your name.\"\n\n\"Rhys,\" he replied without any further embellishment. \n\nShe nodded as she took a bite of the bread. It was earthy, a rough whole wheat brand but it was delicious nonetheless. She watched him as she ate. Tried to figure this mysterious creature out. Why would he not remove the cape? What brought him to this remote place? Was he living rough? Perhaps a criminal of some kind even? With each bite her mind crafted larger and larger fantasies as the final ray of day light drifted through the wooden boards that covered the lone window in the room. \"Who are you?\"\n\n\"Another weary soul, my lady. It is late. You are more tired than you realize. Sleep. I shall keep watch this night,\" he said as he motioned towards the pile of blankets.\n\nSadie shook her head wearily. It made no sense. She should be frightened, alarmed, scared. Instead all she felt was peace that welcomed her to rest and renew. It was the elusive feeling that she had sought when she came to this place. One that had eluded her until this moment. She wanted to argue. To stay awake. To ask him hundreds of questions. But she was simply too tired now that her belly was full. \n\nHad he put some drug in her drink or food, she thought as she dazedly sought the warmth of that pile. It was her final thought as sleep overtook her. Sleep that had been eluding her for so long.\n\n***\n\nThe fire had died down to a soft glow of embers that popped and whizzed with the occasional gusts of wind down the flue. Sadie sat upright suddenly upon the blankets. A silent scream rose in her throat but she could not remember what caused it. Just that there was a tightness about her chest. A deep sense of loss...deeper even than the moment the doctor had told her they could no longer find a heartbeat in her tiny baby. Much, much deeper than when he said he had found someone new. It was unexplainable as huge sobs and tears ran unchecked down her face.\n\nThen just as they had been earlier, great arms wrapped about her. Engulfed her. And she felt safe. Cherished. Like she belonged. She leaned into the rough woolen cape. Her tears wetting it again as they fell for several long moments as he held her.\n\nHer savior again, she thought. But she knew so little about him. Rhys. That was all she knew really. It was a common name in these parts. Too common. Perhaps not even that was true. How could she feel this way with a perfect stranger? She did not even know what the man looked like. \n\nHer hands moved of their own as she threw back the hood suddenly. She gasped aloud as he reached up with a scarred hand to pull it back into place. She had only gotten a brief glance but her earlier appraisal of the phantom came rushing back. What little she had seen the whole right side of his face, neck and even hand were burned. Scarred very badly indeed.\n\nIt fell into place. That was why he hid out in the ruins of this place. Away from the world. Away from stares. Her heart welled up with his pain. Not just the emotional but scars like that must burn and stretch with every movement. Yet he had come for her. Rescued her. Fed her and watched over her. Tears welled up in her eyes. Tears of gratitude and more. Even as more questions arose in her mind.\n\n\"How?\" she could not stop herself from asking the obvious.\n\nHe shrugged and tried to slink back into the shadows but Sadie reached for his scarred right hand, held him in place. \"A battle. Is it not the way of man? Defending that which they think belongs to them, but it is just an illusion. We own nothing in this life. It owns us.\"\n\nHer heart broke with each gruff and painful word. Even his voice made sense now. His vocal cords must be constricted by the scar tissue as well. But despite all that, it gave his voice a soothing timbre. Calmed her somehow. \n\nEven as the truth of his words rang true in her heart. Her baby. Her job. The fianc\u00e9e. None of them were really hers. Just illusions. She had nothing as he said. Her chest tightened even more at the thought as a tiny sob escaped her throat. Her hand squeezed his. No words were sufficient. \n\nTwo souls. Alone in the world. Scarred. And alone. \n\nShe reached out her hand to untie the cord that held the cape together. His good left hand came up and wrapped about hers. \"No, my lady.\"\n\nShe shook her head, \"No, this is your home.\" Though the words seemed odd considering he was probably sleeping rough her as much as she was, they seemed completely right somehow. \"You should be free to be yourself here,\" she explained.\n\nHe shook his head, \"It is only the one night. It is fine.\"\n\nHer fingers tugged the cord, pushed the hood back once more. He turned his head so that it was his good side that she saw this time. She sucked in her breath once more at the sheer masculine beauty of him. He was not the artificial kind seen in magazine and television adverts. No, this was true and barely leashed male power. The lines and planes of his face showed depth and strength of character. \n\nHis hair was dark brown and hung to the edge of the cape. It fell in gentle waves about his ruddy complexion. A light smattering of dark stubble drew her hand to his face. She ran her fingers across the roughness for a moment. \n\nShe bit her lip as feelings that she had only read about in her trashy romance novels rose in the pit of her stomach. Well, honestly, a bit lower than her stomach. She felt a tingly need as her nipples tightened and warm, wetness spread lower. \n\nBut it was not enough. She used her fingers on his jaw to firmly turn his head the other direction. He fought her for a moment, but then resigned himself to fate and allowed her to turn his head so that she had her first full view of his damaged right side. \n\nSadie did not know what she thought she would find, would feel. The damage was every bit as bad as she had first thought. The whole of that side of his face and head were covered in whitish thick scar tissue. That soft brown hair refused to grow as did any sign of the delectable stubble upon his square jaw. Not even to cover the gaping hole that should have been an ear. By some miracle his nose was largely untouched, just a bit of minor scars about the base of it. But his mouth was drawn tight and downwards. \n\nHer fingers caressed it for a long moment. Outlined the lower lip. Back and forth between the rough scar tissue and the soft pink lips that seemed to call to her. \n\nSadie sat for several long moments entranced by it. His lips. The man himself. The cruel twists of fate that had brought them both to this night. She was not sure what she thought she would feel. Sure, some people might be uncomfortable looking upon him. But she had never been that shallow. It was not pity either. She knew the physical and emotional pain that his scars must have caused. But those shoulders that she guessed were stooped just a bit from more scar tissue seemed more than broad enough, strong enough to bear this burden as few men could. No, this man had strength of character that could never be pitied. \n\nSo what was this feeling? Desire certainly. Even when she touched the toughened scars about his mouth, she longed to taste them. She had only had one lover. She had been with her fianc\u00e9e since she started college at sixteen. Had given him her virginity a few months later. But not even those first frantic fumblings of newness had felt like this. This was need. True and deep need.\n\nShe dropped the blanket that she had been clutching about her bare chest. She lifted his hand slowly. Not his good left one, but the badly burned right one. She noticed then that digits were missing from a couple of his fingers. Her fingers linked through his for a long moment. Palm to palm they sat holding hands for a moment. \n\n\"Take off the cape,\" she asked as she looked up into the depths of his eyes. She could not be certain in the low light of the fire but she thought them brown. She smiled as she promised herself a closer inspection in the morning light. \n\nHe shook his head and growled, \"No.\"\n\nShe pushed the blanket the rest of the way down her body. \"I want to feel skin against skin when you make love to me, Rhys.\"\n\nIf he had growled the word 'no,' this one was completely unintelligible. The pure sound of an animal in pain. He shook his head and tried to draw back from her. But her hand held tight to his. Drew him closer as she reached up with her other hand to brush her fingers across his scared cheek. \n\n\"Yes, make love to me,\" she pleaded. \n\nHe froze for a long moment. As if pondering the deepest secrets of the universe or the depths of Hades. In fact, he was likely pondering the depths of his own soul. It was something that Sadie had decided could wait for morning. This night was about feeling. About following her heart. About doing. Not thinking. \n\nJust when she thought he would withdraw back into the shadows, he gave into her pleas. He finished untying the cord that held the cape about his shoulders. He just as quickly lifted the muslin shirt over his head. \n\nLike his face, his chest was a thing of pure beauty. The left side and half of the right were well-defined muscles covered in the lightest dusting of softy curly chest hair. His right shoulder though had a deep pock mark, almost a hole, from which the burn scars seemed to radiate up his neck and face, around to his back and down his arm to his very fingertips. Sadie again marveled that rather than feel revolution or disgust, she felt only the sheer strength of this man.",
        "Her fingers practically disappeared into the cavern in his shoulders. He began to draw back until she bent and placed a soft kiss over the mark. She looked up into his dark eyes and smiled without a word as she began to caress and kiss his whole upper body, scarred and perfection alike. She had never been particularly visual but this night she took time with this stranger to explore the male anatomy, as if to memorize every inch of this man. \n\nHe held so perfectly still throughout the process that she feared she had made some horrible misstep, that he might call a halt to the whole thing. Until she looked back into those eyes. Fire burned in them higher than in the fireplace. Her breathe caught in her throat as she held perfectly still. \n\nThen her hand went to the front of his trousers as she began to fumble with tie that held them up. It took her much longer to complete the simple task than it should have. Her hands were tentative as they slipped inside the rough material. She pushed it down over his hips and froze. \n\nIf his left side had taken her breath away then she feared for her very sanity at the magnificence of him. Not a single mark to mar its perfection. Her eyes were drawn of course to his fully erect cock. While he was not porn star indecently endowed, he was significantly more so than the only man she had been with. \n\nHer throat worked convulsively as she bent forward; the need to simple taste him drove her on. Her tongue slowly circled and licked at the broad head for a couple of minutes before she began to work her way dawn the shaft then back up. She looked up and noted that he was biting his lower lip as if to hold back. That was not what she wanted. She needed this man to throw caution to the hollowing winds that beat around about them...just as she had.\n\nHer eyes challenged him to do so as she opened her mouth and swallowed him half way to the base. She suckled slowly up the length until only the head remained in her mouth. Then she opened it so that he could watch as she ran her tongue about the helmet once more. Before she began the whole process all over again, taking even more of his cock down her throat.\n\nBlow jobs had not been something she particularly liked. She had fought often with her ex about this very thing. She simply did not see the point in oral sex...period. There were so many other wonderful and varied things they could do, why this? But this was no blow job. This was worshipping the magnificence of his cock with her mouth and hands. She even remembered her fianc\u00e9e's common complaint, being certain to lick and suck softly upon his heavy ball sack as her hands wrapped about the shaft in an erotic dance of their own. \n\nShe was rewarded with a silent tremor for her efforts. He growled a single word then, \"Enough!\" as he laid her back upon the pile of blankets. He opened her legs, spreading them as wide as possible. She had thought he would take her then as his fingers played teasingly over the folds of her sex. She arched against his hand as he brushed against the sensitive nub at the top of her mound. Her moans and pleas begged him to continue, but he stopped. \n\nHe stared down at her then. Looming large over her open thighs in the soft glow of those dying embers, he was like her very own phantom, wounded and scarred, but beautiful in his own way. He studied her until she feared that it was she who had failed to meet his standards. Her arms came up to wrap about her bare chest as she began to raise herself on one elbow, trying to turn away from him, before he saw the tears gathering in her eyes.\n\nShe missed his movements. It was not until she felt the warm wetness of his tongue upon that nub that she realized his intention. She cried out with the intensity of it as tiny jolts of electricity radiated out from the bundle of nerves, down to her toes, up her spine and directly up her stomach to her heavy breasts. Her arm fell down to her side as she arched up to meet his bold caress of her clitoris. He held her gaze as he drew it deep between his lips, suckling hard on it. When she would have cried out from the feel it, he abandoned it. She whimpered instead, but not for long as his tongue began to lap and stab at her core. \n\nShe was weak. On the verge of the biggest orgasm of her life. She wanted to collapse back on to the blanket fully. Give her body over to him. But she could not. Could not look away from those eyes as he made love to her with his tongue...and that was most definitely what he was doing. She saw him smile, would have sworn he winked at her. Then the world went black and exploded with the power of the Big Bang as he bite hard into her clit, held it firmly as his tongue caressed around it in small circles. His fingers plunged into her tight shaft in perfect time with those circles which robbed her of all sanity.\n\nBefore her orgasm could ebb away, at its very zenith in fact, he rose over her, plunged fully inside of her until their souls melded as surely as their bodies were. He began to move frantically. A dance of a thousand generations calling to them as their bodies took over, urged them on. Its demands were heavy upon them both as she lifted her hips to meet each of his down ward thrusts. \n\nWhen he would make to withdraw, she tightened her muscles, attempting to draw him back, lock him deep in her soul. His breathing was a ragged symphony in her ears as he laced his fingers through her hair. He held her perfectly still beneath him as his tongue plunged repeatedly into her mouth in rhythm with his hard cock inside her wet folds. \n\nShe cried out but he simply swallowed her cries as his thrusts began more frantic, deeper, almost painful. But rather than shrink back she met each boldly, drawing him deeper, offering herself to him. Completely. Without reservation. \n\nHis lips broke the kiss. He threw back his as she arched hers against the blankets. They both billowed as their bodies gave her to the ultimate pleasure. Then everything went black for Sadie.\n\n***\n\nSadie crested the cliff once more. Those ancient ruins came into view. Just as they had every day since that one, they took her breath away for a long moment. It was the final day of her holiday and decisions loomed on the horizon just as the storm had that evening. \n\nThis was the perfect sunny day though. A rare thing in Northern Wales for certain. The heat beat at her as she caught sight of the perfectly coiffured woman in the business suit that was waving to her from in front of the castle. \n\n\"I am so glad that you made it. So many people have trouble finding this place. You realize of course that this is a listed property so you cannot make any alterations not in keeping with its historical significance. Between that fact and all those silly ghost stories this place has been on the market for almost thirty years now,\" the woman droned on.\n\nGhost stories, Sadie thought. That was what he was like...her phantom. She had woken the next morning, well more like mid-day actually, with the sun streaming between the cracks in the wooden shutters. She had stretched and looked around for him. But he was nowhere to be seen. She had lain back in the blankets, thinking perhaps he had just gone for a moment to get some food, or for a walk. She had replayed every moment of the previous night in her mind then...and thousands of times since. \n\nBut he had never come back. Sadie had thought perhaps he was on the beach...thinking. She certainly could do some of that herself. It was not every day that a girl lost her senses and made love...had the best sex of her life...with a stranger. She had gathered the top blanket about her and made her way slowly down the stairs and through the castle. She had stood at the top of cliff and looked along the beach trying to spot him. She could see her bungalow from there, but no sign of her lover.\n\nShe had clung to hope that he had just run into the village for supplies as she picked her way carefully down the side of cliff. She had delayed for an hour or more as she sat upon a large rock at the bottom watching the surprisingly calm and gentle waves lap at the rocky beach. She had bitten her lip as she remembered how he had lapped at her...like a man dying of thirst. \n\nFinally, tears began to fall unchecked as the sun began to sink towards the ocean. She was forced to admit that he was not coming back. It was just an aberration. Her one night with her scarred and magnificent lover. She had gathered the rough woolen blanket about her shoulders and headed back down the beach that she had come less than twenty-four hours before. Her steps were slow and heavy. If not for the sweet aches in her body, she might swear it had all been a dream.\n\nOver the past three weeks, she had relived the whole experience every night, every time she closed her eyes and many times when she did not. She had tried her best to figure it out. Her only explanation was that her lover was some former soldier from the area, wounded in the war and hiding away in the ruins. He had grown in her mind to heroic proportions. She had crafted elaborately backstories for him. So scarred that he dared not show his countenance to even his beloved family. A lost girlfriend that he could not face. Children perhaps. \n\nShe choked back tears once more as she forced herself to focus upon the words this woman was saying. \"Yes, this place is quite the local attraction once upon a time. The story of the last princeling to inhabit it was so tragic. He had been engaged, betrothed in those days to Caitrin, Owain Glyndwr's daughter. Then her father went to war with the English king. The prince had not only sent men as was his duty but had led them himself. He was injured at the Battle of Bryn Glas, you know. Oh, the stories! The long bowmen used flaming arrows sometimes in those days. One had struck the young prince. He was so horribly disfigured by the whole thing,\" the woman took a breath. \n\nHer sigh was that of long lost glory that these people and this land never seemed to forget. \"Of course, her father could not give his daughter to such a pitiful excuse for a man after that, no matter how loyal and brave, our good Prince Rhys had been. He married the poor girl off to the blasted Englishman that he had been fighting no less.\" She shook her head sadly, \"Poor girl, they say she mourned our young prince all her days. He certainly mourned her. Never married. Held up in this castle as it fell apart around him. Until one day he was simply gone. Some say he walked into the ocean. Others think that the Celt gods came for his brave and worthy soul.\" \n\nSadie stared open mouthed at the woman as she finished, \"But the craziest of all was the legend that said his ghost would walk these ruins until the end of time...unless he found one who saw beyond the scars to the soul of man. Only she could set his tortured soul free. Poor man.\"\n\nSadie smiled as the woman finished her tale. Her hand wrapped protectively around her still flat stomach as she made her decision. \"I'll take it.\"\n\nIt was the woman's mouth that dropped open then. Sadie chuckled at her surprise. It might be fool-hardy, spending every pence of her inheritance upon this place. The renovations would take years. There was not even running water or electricity. But it would be home. The place to raise her son. His inheritance. As it had been his ancestors. \n\nRhys, she would name her baby Rhys...after his father. Oh, Sadie was not sure that she believed her phantom was the long dead ghost of some Welsh princeling. Any more than he was some wounded and tortured soul, fleeing all that he knew and loved. But whatever he was or was not, he had given her the most precious gift of all...new life and hope. And that was all that mattered really."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "ghosts",
        "sexual intercourse",
        "cunninglingus",
        "fellatio",
        "blow job",
        "making love",
        "one night stand"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/one-knight-stand"
}