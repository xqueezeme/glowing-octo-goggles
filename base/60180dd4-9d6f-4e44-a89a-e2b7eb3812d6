{
    "title": "Return To Point Hollow Ch. 01",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 1 - The Crime Scene\n\n\"Hell of a way to break in the new stars on your shoulders, eh?\" said Deputy Chief Cindy Ross as she came up to me. I was wearing a windbreaker jacket, same color blue as my Police pants ('trousers' to our British friends), and I had soft shoulderboards of the same color on the epaulettes with a thin line of gold thread at the shoulder end, and just above that an embroidered silver star. Cindy's windbreaker was adorned with a metal star at the shoulder ends of her epaulettes.\n\n\"Great day to be alive.\" I said, paraphrasing an old Army saying. \"Great day to be an Officer in the Town & County Police Force. Out of curiosity, why are you here?\"\n\n\"There was no coffee klatch, so I hitched a ride with Captain Thompson.\" said Cindy. \"The Press is being kept out of here for now, but they're going to want some information, and soon.\"\n\n'Here' was Point Hollow, the legendary and infamous farmhouse and grove estate in the very northwest corner of the County, and also the State; the property's north and west borders literally were the State Line. To the east was the bluff upon which the weather station now was. At the base of the bluff ran the River, which was was not as wide as it was flowing through Town.\n\nThe old mansion was considered by many to be haunted, and the copse of trees that ran south of the front yard were thick; it was dark underneath the canopy of their branches. It was said that the screams of the Dead could be heard at night, and I'd heard a few of those screams myself. This was also the place where I had defeated the Slender Man in personal combat, and where he'd held seven children hostage. (Author's note: 'Return of the Slender Man'.)\n\nWhen I'd come into the Station at 6:00am, Wednesday, October 2nd, the call had come in that bodies had been found. I immediately drove up, and found that two Patrol cruisers were already there.\n\n\"They're in the copse of trees, sir.\" said Patrolman Hardy. \"West of the Ritual Tree.\" The Ritual Tree was a huge, gnarly tree with a massive exposed root system, on the east side of the copse, very near the River. It was where a couple filmed themselves having sex in a previous case (Author's note: 'Point Hollow'.), and was believed to be the spot where demonic rituals had been performed in past decades.\n\n\"Sir,\" said Patrolman Drew, \"we smelled an odor when we got here. I've called in a HAZMAT team and notified our Crime Lab people to come in with Tyvex suits.\"\n\n\"What was the odor like?\" I asked.\n\n\"Foul. Really bad.\" said Drew. \"Like a sewer and rotting decay, but even worse.\"\n\n\"Like brimstone?\" I asked, thinking of the hellish aspects of Point Hollow.\n\n\"I don't know what that smells like, sir.\" Drew replied.\n\n\"Like rotten eggs?\" I asked, as brimstone was just another name for sulfur.\n\n\"Worse than that, sir.\" said Drew. \"A lot worse. What I smelled here was the worst smell I've ever come across.\"\n\n\"Okay.\" I said. \"As soon as some people get here to secure the scene, you two are to go to the Hospital and get checked out. Do not pass 'GO', do not collect $200. Am I clear?\"\n\n\"Yes sir.\" said Hardy and Drew.\n\n* * * * * * * * * * * * * *\n\nNow, as the sun peeked over the mountain finger and bathed us in its light, the HAZMAT team was preparing to go in and check for contaminants. Two techs from the State Crime Lab and one off my CSIs had also shown up, and they were wearing Tyvex suits and chemical masks. They were communicating through wi-fi earbuds and little microphones in their masks. Neat technology, I thought to myself.\n\nThey began investigating along a trail from the yard into the copse of trees, at the point where the Slender Man had emerged from the copse to face me on that horrific night all those months ago. The HAZMAT guys and a CSI tech went first, making their way towards the bodies, followed by the other CSI people.\n\nAs I watched, more vehicles began arriving. One of them was Commander Cindy Ross, with Captain Damien Thompson. Another was Captain Tanya Perlman's Police van, which was specially fitted to allow her to drive it with what looked like motorcycle handlebars instead of a steering wheel. It also carried her Tank as well as her normal wheelchair. And in the back of it was a computer console and four video screens in a 2x2 matrix, hardened like military equipment to withstand rough roads, which allowed her to see what camera operators recorded at the scenes.\n\nAfter talking to Cindy, I called out \"Perlman! Have they gotten to the bodies yet?\"\n\nTanya said from inside her van: \"They're just coming up to the bodies now, sir. HAZMAT took an air test, as well as something that looks like residual powder from some leaves on the trees just east of the bodies. They're concerned that something like anthrax spores may have been released.\"\n\n\"Yeah, right.\" I said sardonically to Cindy. \"Anthrax is a bioweapon. It wouldn't kill people in just hours. And if it is anthrax... then we've all been exposed.\"\n\n\"Yep.\" Cindy said. \"Don't we have some antidote at Police Headquarters, in the Infirmary?\"\n\n\"Maybe.\" I said. \"I'd rather have my favorite doctor at the Hospital handle that, though.\" Cindy nodded.\n\n\"Crime scene is marked.\" said my CSI, her voice coming over the wi-fi to Channel 5 encrypted Police radio. \"The six deceased persons all have bluish lips and skin, and severely bloodshot eyes.\"\n\n\"Roger that.\" called in Tanya from her van. \"We'll send in people to process the bodies. Tell the HAZMAT team not to walk around anywhere. I want to look for footprints in the area.\"\n\nI called out \"Tell them to send us video of their faces.\"\n\n\"They don't have video equipment, sir.\" Tanya said. \"I'm sending in someone with a camera wrapped in protective plastic now.\" A second later I saw a CSI tech in a mask and Tyvex suit with a camera inside a plastic bag go into the copse of trees.\n\n\"These guys are good.\" Cindy said. \"They're handling this situation very well. Don't take this the wrong way, but I'm surprised. They're acting like it's just another day at just another crime scene.\"\n\n\"After that time we found those frozen mothballs,\" I said, \"Teresa has been training the HAZMAT teams as well as our techs. It's paying off now.\" (Author's note: 'Frozen Mothballs'.) Then I added: \"And damn right we're good.\" Cindy grinned at that.\n\nI said \"Captain Perlman, has anyone checked the house yet?\"\n\n\"Yes sir.\" said Tanya. \"While Drew and Hardy were finding the bodies, Goodwright and Burrell checked on the house. It was locked all the way around, and there were no footprints or anything suspicious around it. After finding the bodies, Goodwright was authorized to enter the house and search it, and he picked the lock. That search came up totally empty.\"\n\n\"Okay, thanks.\" I said. To Cindy, I said \"I've always wondered if that house has any secret passages or tunnels. But none have ever been found.\"\n\n\"I doubt there are any tunnels, sir.\" Cindy said. \"This area is low-lying. The house is on a knot that elevates it, but if you dig too deep, you'll get groundwater seeping in.\" I nodded in agreement.\n\nJust then, Lt. Commander Teresa Croyle came up, along with Lieutenant Jerome Davis and Detective Sergeant Julia Rodriguez. \"Good morning, sir, ma'am.\" said Davis.\n\n\"Good morning, guys.\" I said. \"Commander Croyle, make sure the perimeter is secure. I don't want the Press trying to sneak in.\"\n\n\"Yes sir.\" said Teresa. \"Lieutenant DeLong has anticipated you... and the Press. We've already caught Bettina's cameraman trying to get in near where the River leaves the property. DeLong escorted Turnbull back to the Press vans rather than arrest him, but they're all on notice now.\"\n\n\"Commander Troy!\" called out Tanya Perlman. \"I've got video of their faces.\" I rushed over to the van and looked in. Tanya had recorded the video feed, and was playing it back.\n\n\"Well, well, well.\" I said. \"Even with that blue face, I can tell that is Guru Bob Stevens.\"\n\n\"It sure is.\" said Teresa Croyle, who was looking in also.\n\n\"Sir,\" said Julia Rodriguez when she looked in at the six dead faces, \"I think those six are the ones we arrested the morning of September 24th. I remember it because it was the day of the Charter vote, and you were wearing civilian clothes when we interviewed the Guru.\"\n\n\"I think you're right, Detective Sergeant.\" I said. \"Great observation and memory to go along with those new Sergeant stripes.\" Julia had just been elevated to Detective-3, a.k.a. Detective Sergeant.\n\n\"Guy didn't learn his lesson.\" said Teresa Croyle. \"Cost him his life, this time.\"\n\n\"Yeah.\" I said. \"Captain Perlman, Lieutenant Davis, we will treat this as a possible mass homicide until we learn differently.\"\n\n\"Roger that, sir.\" said Tanya. \"Jerome, take charge of the crime scene. All MCD Detectives are on this, as one Team.\"\n\n\"Yes ma'am.\" said Davis. He and Rodriguez stalked off to put on Tyvex suits and go see the crime scene.\n\n\"Oh my God, would you look at that.\" I heard Cindy say. I followed her gaze down the road and worked hard not to burst out laughing.\n\nAssistant District Attorney Savannah Fineman had just gotten out of her expensive Mercedes and was walking up the driveway towards us. Her long blonde hair was not quite as platinum blonde as Cindy's, but was lighter than honey-blonde. What was amusing was that she was wearing a fairly clingy white dress, and white stiletto pumps.\n\n\"I'll handle this.\" I said. I walked down the drive to meet Savannah. \"Hello, Ms. Fineman. What brings you here?\"\n\n\"D.A. Walters sent me.\" Savannah said. \"She said something about multiple deaths?\"\n\n\"Yes.\" I said. \"But you are not dressed for the occasion. Those high heels will work fine in the office or a Courtroom, but not on this ragged Point Hollow terrain.\" Just then Dr. Christina Cho of the State Crime Lab came up.\n\n\"Sir,\" Christina said, \"I have some tennis shoes and a Tyvex suit in our van.\"\n\n\"You are a blessing, Dr. Cho.\" I said with a smile. \"Yes, please help ADA Fineman. Savannah, you know the Chief Chemist of all the State Crime Labs, Christina Cho?...\"\n\n* * * * * * * * * * * * * *\n\nI had also put on a Tyvex suit over my uniform, and was escorting Savannah Fineman down the pink-flag-lined route. I said \"If you're going to visit crime scenes, you might want to put a pair of tennis shoes or work shoes in the trunk of your car, along with some clothes you don't mind getting dirty.\"\n\n\"Yes, so I'm learning.\" said Savannah. \"By the way, the new stars look good on you. Liking 'em?\"\n\n\"It's all the same to me.\" I said. \"But the Sheriff is loving his four stars.\" Savannah chuckled.\n\n\"Keep me in the loop on everything you do with this case, okay?\" Savannah said. \"Miriam thinks this could get big and ugly in a hurry.\"\n\n\"Either I or the lead Detective will send you reports.\" I said. \"And like all good Police Officers, I'm only a phone call away.\" The joke did not go over well, as Savannah said nothing.\n\nWe came up to the scene behind Davis and Rodriguez. \"Sir,\" said Julia, \"it looks like they were sitting here when they died.\"\n\n\"I agree.\" I said.\n\n\"How do you know that?\" asked Savannah.\n\nJulia replied: \"Four of them, including Guru Stevens, are lying on their backs, and two on their sides. People who lose consciousness while standing usually fall forward, unless pushed backwards. And to that point, there are no indentations in this soft soil that would suggest a person falling and hitting the ground.\"\n\n\"Sir, they're in and out of rigor.\" said Jerome Davis. \"And their clothes are wet, suggesting they were here when the dew fell last night.\"\n\nI nodded. \"So where is Martha the M.E.?\"\n\nChristina Cho said \"She's going to meet the bodies at the State Crime Lab, sir. We have a clean room for hazardous situations like this, and she has a chemical mask that she uses when foul-smelling, decomposing bodies have to be autopsied.\"\n\n\"Sounds like a plan.\" I said. \"Good work, all of you. Okay, let's follow the pink flags here, to see what else was going on.\"\n\nI began walking east, towards the River. Jerome Davis came with me. The pink flag trail had stopped, but the footprints did not. I groaned. \"Oh no.\" I said.\n\n\"What is it, sir?\" Jerome asked.\n\n\"Someone trampled all over this area around the Ritual Tree.\" I said. \"HAZMAT booties, if these impressions are any indicator. They have destroyed my crime scene. Now I can't tell if it was just our six dead people, or if there were others here last night...\"\n\n* * * * * * * * * * * * * *\n\nWhen I came out of the copse of trees, I went towards the HAZMAT vans. \"Who's in charge here?\" I called out.\n\n\"Me.\" said a man about 30 years old, medium height, with black hair and a pockmarked face. \"Sergeant Armus Paulus. Good to meet you, Commander.\"\n\n\"I wish I could say the same.\" I said. \"What I need to know is if any of your team members left the pink-flagged areas.\"\n\n\"After we cleared the area around the bodies, we continued east, towards the River.\" said Sergeant Paulus. \"It was away from the bodies, so we just checked for residual hazardous materials the wind might've carried.\"\n\n\"And you walked all over an area that might've been part of the crime scene last night.\" I said. \"Now I can't tell which tracks are your team's, and which might've been made by others at the scene... others that might've lived and could tell us what happened to those six people.\"\n\n\"Oh.\" said Paulus, the air coming out of his sails.\n\n\"I'm not going to sugarcoat it.\" I said. \"We're going to have to do a lot more training so that this doesn't happen again. And Commander Croyle will be very thorough in her training.\"\n\n\"Yes sir, we know.\" said Paulus. \"She had us drilling in full gear with the Crime Lab teams... in 95\u00ba heat.\"\n\n\"Yes. So what did you guys find?\" I asked.\n\n\"They'll have to test some things in the lab,\" said Sergeant Paulus, \"but there was some residue on leaves in the area. You were in the Army, weren't you sir?\" I nodded and Paulus said \"You know those colored smoke grenades, especially the red and green ones?\"\n\n\"Yes.\" I replied. \"CS gas grenades, as well.\"\n\n\"Yes sir, exactly.\" said Paulus. \"The smoke grenades, they leave residue, and what we found looked like that. I can't say it was a smoke grenade, it could've been something in a fire in a grill, but it looks like there was smoke that left a heavy residue...\"\n\n* * * * * * * * * * * * * *\n\nWhen I got back to Tanya's van, which I wanted to call 'Tanya's Truck', I noticed that Sheriff Griswold, Chief Moynahan, Public Health Officer Beth Paige and Assistant PHO Stella Waters were standing around the side door of it. I went over.\n\n\"Where's Commander Ross?\" I asked Teresa Croyle quietly.\n\n\"She went down to the property line, sir.\" said Teresa. \"Ostensibly to confer with Captain Thompson on Press relations. In reality... she was starting to feel bad, and not in a physical way. She gets really bad vibes around this place. In the meantime, sir, your place is over there with all those high-ranking Public Service Department people. Definitely out of my league.\" A red crowbar was waved in her general direction, but I took her advice and went over to the van.\n\n\"Hello, everyone.\" I said. \"To what do we owe the pleasure of the Public Health Officers at this crime scene?\"\n\nBeth Paige said \"When I heard our HAZMAT team had been deployed, I came up to see how they were doing... and what they were doing.\"\n\n\"What they were doing,\" I said, \"was contaminating my crime scene, pun not intended. I've already talked to them about it, and we're going to have to have some cross-training.\"\n\n\"What happened, Mr. Crowbarrrr?\" asked Chief Moynahan quickly, before Paige could react.\n\n\"They went beyond the pink flags that show where we'd examined the scene.\" I said. \"And walked around an area where others may have been gathered.\"\n\n\"I'm sure they followed every protocol correctly.\" said APHO Stella Waters, who was short and gaining a bit of weight, and her voice shrill and defensive. I curbed my irritation as I explained further to the Chief, and also reported on the residues they'd found.\n\n\"Smoke grenades?\" asked the Chief.\n\n\"Or something thrown into a fire that was burning in a grill or a can, or something like that.\" I said. \"But we won't know until we get Martha's autopsy if that is what killed them. I'm inclined to think it was something more, like drugs ingested orally or injected into the bloodstream. But that's theorizing without data...\"\n\nPart 2 - Gathering Data\n\n10:00am, Wednesday, October 2nd. I was sitting in my office starting the paperwork on the new case when there was a knock on the open door, followed by Sheriff Griswold coming in.\n\n\"Have a seat, Sheriff.\" I said. \"Want some coffee?\"\n\n\"No thank you.\" growled Griswold as he sat down in a hot chair. \"I just had some while talking to Moynahan.\"\n\n\"Those stars getting heavy on your shirt collars, sir?\" I asked with a grin.\n\n\"Har.\" said the Sheriff. \"At least I look like most of the other Sheriffs in the State now. And we really should be calling you 'Chief Troy', as in 'Assistant Chief'.\"\n\n\"One star in the LAPD is 'Commander', sir.\" I said. \"And like I told my Angels, I like the name 'Commander'. When I was young, I'd watch that 'Space:1999' TV series, and I always dreamed of being Commander of Moonbase Alpha. 'Commander' in the Town & County Police Force is a good close second to that.\"\n\n\"Har.\" the Sheriff barked, his mustaches twitching. \"So that's the secret origins of that. Well, I'm good with it. So, Commander, what I came by to tell you was that I had a conversation with PHO Beth Paige. She apologized for her HAZMAT team damaging part of the crime scene. And she and I both appreciate you not taking her head, nor her HAZMAT team's heads for their errors.\"\n\n\"Is my reputation really that bad, sir?\" I asked. \n\nThe Sheriff understood. He said: \"There's an old Klingon saying that goes 'a man's reputation is like his shadow: sometimes it precedes him, and sometimes it follows him'. Your reputation is like that, too... outstanding Detective, great leadership, good teacher, but also very direct if not outright confrontational at times. You strike loyalty in many, and fear in others. And that's not a bad thing at all... used properly.\"\n\nHe continued: \"You handled the HAZMAT team situation pretty well today. And you handled Savannah Fineman showing up very well, also. I know that some of your fellow Officers are not happy at all that she showed up, but you made lemonade out of lemons with that.\"\n\n\"Yes sir.\" I said. \"We're going to have to work with the DAs, no matter what Miriam Walters does. And she backed off on demoting Paulina, at least to this point. It is what it is.\"\n\n\"What do you think of ADAs, or DDAs, showing up at our crime scenes in general?\" asked the Sheriff.\n\n\"I'm surprised they don't show up more often.\" I said. \"And I don't have a problem with it, provided they mind their P's and Q's, and don't interfere with our CSIs. With six dead at one scene, this one is going to be a biggie, so I can understand Walters sending someone out. Why Savannah, though? That's a different question.\"\n\n\"Like you said, it's a big one.\" said the Sheriff. \"I also came to tell you that I received a ton of compliments from Fineman and Paige and everyone, on how well the CSIs and Crime Lab teams did at the scene. It went very smoothly, very efficiently, and under difficult if not potentially dangerous conditions. I will add that the Uniformed Officers and their leadership also did a great job securing the scene and controlling everything.\"",
        "\"Credit for all that should go to Commander Croyle.\" I said. \"In fact, Sheriff... I was going to talk to you about putting her in for the fourth box on her uniform shirt.\" The Sheriff knew what I meant: we sometimes called the metal-bordered ribbons on our shirts 'boxes'. Teresa had the red box of the Medal of Valor, silvery-white box of the Police Cross, and purple box of the Purple Order (six times over). \n\n\"I think it's getting time for her to collect the whole set.\" I said. \"She's earned a Distinguished Service Medal many times over. We just need to give it to her.\"\n\n\"I personally agree.\" the Sheriff said. \"But she just got a promotion, and a big one if you ask me. A DSM would be piling on, and we've got a lot of Officers and Deputies doing outstanding jobs that need to be looked at for Sergeant positions and the like. And we need to give out some other medals like candy.\" I nodded; the Sheriff's words were flawlessly logical.\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone, and it was Martha the M.E. I told her I was going to put her on speaker so that the Sheriff could hear her report also.\n\nMartha said \"The time of death appears to be between 2:00am and 5:00am. All six of them had breathed in some smoke, and the tests to determine what exactly it was won't be back for a day or two. But I did as you asked, and searched for recent injection sites, and all of them had been injected in the backs of their necks with something. We're running tests to determine what it was. From everything I'm seeing, I think it was some kind of poison.\"\n\n\"Self-injected?\" I asked.\n\n\"Unlikely.\" said Martha. \"The location on the backs of their necks is possible but not likely, considering they could inject themselves in many other places. All-in-all, I'm thinking they were injected by someone else.\"\n\n\"And no needles or paraphernalia were found at the scene.\" I said.\n\n\"That is correct, to the best of my knowledge, Commander.\" said Martha. \"I'm calling it 'suspicious' for now. We'll know more for certain when the tests come back.\"\n\n\"Okay, thanks.\" I said. After disconnecting, I looked up at the Sheriff and said \"I'm going to jump the gun on Martha, and call this a murder investigation...\n\n* * * * * * * * * * * * * *\n\nAt 10:30am, the Sheriff and Police Chief joined me, Lt. Commander Croyle, Captain Perlman, all the MCD Detectives, and Lieutenants Jerome Davis and Mary Milton for the meeting in Classroom 'E'.\n\nI relayed Martha the M.E.'s initial findings, and announced that we were treating this as a murder case. I then turned the meeting over to Captain Tanya Perlman.\n\n\"Who are our victims, Lt. Davis?\" she asked. Davis nodded to Julia Rodriguez.\n\nJulia said \"Six victims, four white, one black, one of probably mixed race. First was Bob Stevens, 28 years old, University graduate with a degree in Psychology, specializing in Spiritual Psychology. Never arrested on any criminal charges except for a recent trespassing arrest at Point Hollow. Did have a number of civil suits against him over the past several years, but he'd never lost in Court, though there were some pending cases.\"\n\nJulia: \"Two were University students. Steven Wilson and Lisa Rowland. Wilson is... was... a Junior, Biology major, 2.75 GPA, from Greenville, which is southeast of Rocktown in the southeast part of the State. Lisa was a Sophomore, Education major, 3.0 GPA, from Alvaton, just south of Westphalia. No Police records except for recent warning tickets for trespassing at Point Hollow, nothing on their University records, and by that I mean nothing at all: no Greek memberships, no major clubs. They're just part of the vast majority of students going about their businesses.\"\n\nJulia: \"The others were Dennis Bryant, Anthony Brown, and Ashley Perez. She's the mixed-race one. Bryant is 22 and a struggling actor from the City. He has a string of jobs in the waitstaff industry, with many restaurants. He also has several speeding tickets, the last two which were full misdemeanor offenses. And, of course, the ubiquitous trespassing at Point Hollow warning.\"\n\nJulia: \"Brown is black, just turned 23, and he was an auto mechanic. He'd just opened his own shop in Midtown after doing very well working for an AAMCO. No priors. Perez was 20, working in the Wal-mart in Town, and taking night classes at the Town Technical Institute in 'Medical Services', which could be anything from X-ray Technician to keeping records.\"\n\n\"Keeping records?\" Teddy Parker said skeptically.\n\n\"Yes.\" said Lt. Mary Milton. \"That has become a huge and specialized field, what with all the Insurance and Federal Government regulatory issues they deal with nowadays. Hospital H.R. departments are hiring people who know what they're doing with the paperwork.\"\n\nJulia: \"Perez had a couple of juvie arrests when she was 15 and 16. One was drug possession, the other was possession of stolen property. Looks like she was in with the wrong crowd, but was getting her life straight as a young adult. Warning citation for being at Point Hollow the other day is the only problem she's had since.\"\n\nJust then the door flew open, and in walked ADA Savannah Fineman, in the white dress and back to the white high heel pumps. \"I came by to get an update.\" she said. \"I wasn't told there was a meeting going on.\"\n\n\"Just a preliminary meeting to get a handle on what we're dealing with.\" I said. \"We don't even have autopsy results yet. If you want to stay, that's fine; or I can email you what we find out as we find it out.\" \n\nSavannah responded by taking a seat. \"No autopsy results at all?\" she asked, peering hard at me.\n\n\"Just that Martha thinks they were murdered.\" I said. \"Captain Perlman, continue with the meeting, please.\" No one present was mistaken about the underlying 'hint' of my words.\n\n\"Yes sir.\" said Tanya, who nodded at Julia.\n\nJulia said \"So far, there's nothing to connect any of these six persons, except being together at their deaths. We'll need to canvas friends and family to find out more about them.\"\n\nChief Moynahan said \"I will be handling telling their next of kin. After that, you'll need someone to interview them.\"\n\n\"I'll handle that myself, sir.\" said Tanya.\n\n\"Any early ideas, Don?\" Savannah Fineman asked. I could sense the unhappiness by some with the first-person familiarity with which Savannah had addressed me, and by others with her butting in on our case. I chose the 'pull my punches' approach for the moment.\"\n\n\"Not yet.\" I said. \"We have almost no data at all. I also expect these excellent Detectives and their leaders to get this solved before I even hear any more about it. Lieutenant Davis, you are the liaison with the Assistant District Attorney; be sure to keep her informed of what we find in a reasonably timely manner...\"\n\n* * * * * * * * * * * * * *\n\nAfter the meeting, Savannah tore out of there, heading for the Chief's office. I asked Tanya and Joanne Warner to come to my office for one moment.\n\nJoanne was heavily pregnant, and it was showing. She was expecting to deliver the baby in the late November timeframe. As she settled into a hot chair next to Tanya in her wheelchair, I said \"When will you begin maternity leave, Joanne?\"\n\n\"I'll be at the November 1st ceremonies, sir.\" Joanne said. \"And I'll be back for the February 1st ceremonies. In between, I'm on leave, except for the Policeman's Ball, which I really hope I can attend.\"\n\n\"Sounds good.\" I said. \"Okay, I asked you in here to give you an assignment in front of your Captain. I want you to research the Point Hollow house, its history, its legend, and going back as far as you can. Ownership, spooky stories, whatever you can find. Call it a hunch, but I have an idea that that information might become important in all this.\"\n\n\"Your hunches are as good as our facts.\" Tanya said in a brilliant display of asskissing. A red crowbar was waved in her general direction.\n\n\"We'll see.\" I said. \"Also, Joanne, until we know what we're dealing with, for the sake of your unborn child, stay here at Headquarters rather than join the Detectives in the field for this one.\"\n\n\"Yes sir.\" said Joanne. \"Captain Perlman has already grounded me on that score------\"\n\n*BUZZZ!*\n\nIt was Helena, saying that the Chief wanted to see me in his office...\n\nPart 3 - The Painting\n\nWhen I went into the Chief's office, Savannah Fineman was in there, and it was obvious she was pissed off. The Chief had me sit down in the chair next to hers.\n\n\"Soooooo, Ms. Fineman,\" the Chief drawled, \"what are your issues again?\"\n\n\"First of all,\" Savannah pouted, \"why didn't you tell me you were having that meeting, so I could be at it on time?\"\n\nI looked over at the Chief, then back to Savannah, and said \"First of all, we call meetings spontaneously when something that comes up compels us to. Second, even for meetings planned and announced in advance, we don't just call the D.A.'s Office. Right now, this case is nowhere near ready to bring to you, and you'd just be wasting your time at a meeting like this morning's.\"\n\n\"It's for me and the District Attorney to decide if it's a waste of our time or not.\" said Savannah. \"And that brings up my next complaint: why did you have your Lieutenant as my liaison instead of Captain Perlman or yourself?\"\n\n\"Because Lt. Davis is in charge of the case,\" I replied, \"and having him as your liaison will get you more and better information in a more timely manner than anyone else will.\"\n\nSavannah then said \"And why aren't you personally handling this case and having all that information yourself?\" I just looked over at the Chief, who looked back at me.\n\n\"Ms. Fineman,\" I said, \"do you understand how things work here?\"\n\n\"Don't patronize me!\" Savannah almost shouted. \"Of course I know!\"\n\nI said \"Then you know that the Detectives investigate these cases, and I'm supervising them and everything else within the Operations sector of this Police Force. Once again, having Lt. Davis as your point of contact is better for you than anyone else; if you call me, I'll just say 'hold the line' and call Lt. Davis for the update myself.\"\n\nSavannah was not willing to let it go: \"You still haven't answered my question: why aren't you handling this personally, Don?\"\n\n\"I just gave you my answer.\" I said. \"Why is it so damn important that I be the one on this?\"\n\n\"Because six people were found dead!\" Savannah said. \"This is a huge case for that reason alone! People are going to get scared! They're going to want answers!\"\n\n\"Ohhhhh.\" I said, my voice mocking. \"So it might get political. And you and your boss are very attuned to the political side of things.\" I then bore down on Savannah, staring hard at her. \"This ain't the Charter Commission, Ms. Fineman. And I don't give a damn about the politics nor the optics. This Police Department's mission is to solve this and all the crimes that come to us, in a manner that gets us arrests and convictions... not what plays to the cameras.\"\n\nSavannah was not mollified. At all. \"Look,\" she said, \"the District Attorney wants to be in the loop on this one, and she's assigned this to me. I want to be in the meetings on this. I want to know what the TCPD finds out, and as soon as reasonably possible. I want you to work with us on this case, not against us.\"\n\n\"Right back atchooo, Ms. Fineman.\" said the Chief. \"We are doing our jobbbs here. Let us do our jobs, and stop taking offense or pretending to be slighted if you're not in every meeting we haavvvve.\"\n\n\"I can see this is falling on deaf ears.\" said Savannah. \"You're not in elected positions, but I wish you would show some respect for the District Attorney, who is.\"\n\n\"Just one more thing before I send the Commander on his way to do his job.\" said Chief Moynahan. \"You were not in the military and may not be familiar with some things about it. But I was, and I'm very much a stickler for a certain amount of courtesy and propriety. I know you and Commander Troy worked closely together on the Charter, and you may be on a first-name basis. But in a meeting with him where his subordinates are present, do him the courtesy of addressing him by his title, Commander Troy, and we'll extend to you the same courtesy.\"\n\nSavannah's head snapped back as if someone had physically tried to hit her. She then stood up. \"Whatever.\" she said. As she turned to go, she said \"Once again, please keep me in the loop on this.\" With that, she walked to the door and exited the office.\n\n\"Shall I start a countdown clock on how long it takes Miriam Walters to call you... or the Sheriff?\" I asked.\n\n\"Heh heh heh heh.\" the Chief chuckled, though not with much amusement. \"Once again, Mr. Crowbarrrr, you have hit the nail on the head when you brought up the politics of it. And she didn't even try to deny it-------\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone, and the Chief told me to answer it. \"Troy.\" I said. I listened for a moment, then said \"Okay, I'll be right out there.\" Hanging up, I said \"That was Chris Purvis. Something strange was found in the house at Point Hollow...\"\n\n* * * * * * * * * * * * * *\n\nI drove up to Point Hollow in my Police SUV. Cindy rode shotgun. As we passed the security at the front gate and drove up the drive, I said \"The cleaning crew came to Point Hollow today as they do every Wednesday, to clean the house. Sergeant Morton was going to tell them to skip this week, in case the CSIs wanted to go through the house more thoroughly than the sweep they did this morning.\"\n\nI continued: \"That's when Chris Purvis had the insight to ask the cleaning crew to just look around and see if anything was out of place. And when they went to the greatroom, one of the cleaners started screaming her head off.\"\n\nWe were pulling up as I finished. I could see that there were still people working on the crime scene in the copse of trees. I got out, and saw that Cindy was getting out slowly, and looking around strangely. \"Is everything okay?\" I asked, peering at her.\n\n\"Yes.\" Cindy said, then seeing me continue to look at her, she said \"Well, just between you and me, Don... when I was here this morning, I was feeling overwhelmed. The last time I felt that was when you fought the Slender Man here, and when we saw the Slender Man at Ronald Reagan Park.\" (Author's note: 'Return of the Slender Man', Ch. 02-03; 'Moonlight Shadow', Ch. 03.) \"So I went down to the front gate with Captain Thompson, and I felt better once I was away from here.\"\n\n\"Yes, I noticed you looked like you weren't feeling well.\" I said. \"Feeling that way now?\"\n\n\"A little bit.\" Cindy said. \"But not as strongly as before.\"\n\n\"Okay, if you get to feeling bad again, let me know.\" I said. We made our way into the house.\n\nThe front door of the two-story dwelling is in the middle, facing south. To the right was the dining room, which had no furniture in it. To the left was the greatroom, which had a couple of antique chairs and a beautiful Oriental rug. Senior Detective Chris Purvis led us through the hallway to the door of the room,m and into it.\n\nOn the far side, against the west side wall of the house, was a huge fireplace with an ornate mantle, and huge stones set into the floor in front of it. The one dead in front of the fireplace had the dimensions of the Golden Rectangle (1.618 feet by 1.0 foot). Strange, I thought. Then I saw two circular stones on either side of the rectangle, about three feet from it. Something was telling me that that was even stranger... and important.\n\n\"So what's the strangeness?\" I asked.\n\n\"That painting above the fireplace.\" said Purvis. I looked up. The mirror that had been there was the one that was shattered when Leonard 'Sergeant' Sharples took a shot at me (Author's note: 'Point Hollow', Ch. 04.), and of course was no longer there. Now there was a painting of a lovely young blonde woman, her hair piled high in a fashion of the late 19th century, and her electric blue dress was frilly and of that same era.\n\nPurvis said: \"That painting was not hanging there last week, according to Maritza, one of the cleaning crew. She said that since the mirror was taken down during the Sharples sting, nothing had been hanging there at all.\"\n\n\"Hmm, interesting.\" I said. \"It's a beautiful painting.\" I studied it closely, and did not see the author's signature anywhere. It was an oil painting, and while I'm no art expert, it looked like it was very well done. I sniffed at it, but did not smell any oils; it was not a recently-painted work.\n\nI tried to take the painting off the wall. To my shock, it would not come off; it was as if it was bolted to the wall. Several of us tried to wrestle it in every direction, but it wouldn't budge. I searched for secret panels to see if there was a space behind the wall where we could unbolt it, but it was 'no joy' on that.\n\n\"Why don't you pry it off the wall with your crowbar, sir.\" said one of the Uniformed Officers.\n\n\"No, let's not damage it.\" I said. I then took two photos with my Police iPhone: one with the regular camera, and the other with the 'selfie' camera on the front of the iPhone, which could detect infrared. Both photos looked normal.\n\n\"Hey, Commander Ross,\" I said, \"we need to see if we can identify------ Cindy!\" She was sitting on one of the old chairs, her ice blue eyes deeply introspective. She had not heard me. I got right in her face and said \"Cindy, are you okay?\" She blinked a couple of times, saw me, then pitched forward!\n\nI caught her before she fell out of the chair and eased her back. \"You feeling okay?\" I asked.\n\n\"I'll call for an ambulance.\" said the Uniformed Officer.\n\n\"Wait.\" I said, pointing at him. \"Let me get her outside. Come on, Cindy.\" I said. Still dazed, Cindy let me lead her out of the room and out of the house. Once we were in the front yard, almost to my SUV, she finally blinked and came out of it.\n\n\"Oh my... ohmigod.\" she gasped.\n\n\"What is it?\" I asked.\n\n\"That... that girl in the painting.\" Cindy said. \"I was seeing her... not the painting, but the woman, in that dress... standing right in front of me.\"\n\n\"Did she say anything?\" I asked. \"Did you sense good or evil from her?\" The other Officers were watching both of us, probably thinking that their Police Leadership was as strange as this haunted property. They probably were right, too.\n\n\"She didn't say anything.\" Cindy said. \"And I sensed that she was good, but was... the victim of Evil, that something happened to her here...\"\n\nAnd then it started. At first, it sounded like a voice calling, and then it rose into a loud shriek that wailed on for several seconds. It was a woman's voice.\"\n\n\"It came from the house!\" Purvis said.\n\n\"No, from the grove of trees!\" said the Uniformed Officer. \n\nCSIs came running out of the copse of trees. \"Who screamed?\" one of them said. \"Was that you, Commander Ross?\"\n\n\"No!\" Cindy said loudly. \"We all heard it, too.\"\n\n\"Okay, guys,\" I said, \"look around for a prankster with a megaphone. Launch drones if you have any out here.\" \n\nTo Cindy I said \"Let's get you back to Headquarters.\"\n\n* * * * * * * * * * * * * *\n\nI was in the Chief's office. Laura was examining Cindy in the Infirmary room.\n\n\"No idea what it was.\" I said. \"We all heard the scream, but everyone heard it from a different direction or location.\" I showed the Chief the photo of the painting. \"This painting wasn't there last week, according to the cleaning crew. I have no idea who she is, but she looks... familiar, somehow.\"\n\n\"Funny, I feel the same wayyyyy.\" said the Chief as he gazed at it. Then he said \"That Point Hollow place was almost the death of you, and now it's the death of six people. Maybe I should ask Father Romano to do an exorcism before letting anyone else go there------\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\n\"Yes.... what?!... hold on, Sergeant, say it again, and a lot more slowly... mmm hmm... mmm hmm... oh, wow... okay, thanks for the call.\"",
        "As I disconnected, I looked up and the Chief and said \"Twelve people were found in a farm field dead west of Point Hollow, but across the State Line. All of them alive. They're being transported to University Hospital...\"\n\nPart 4 - By The Dozen\n\nThanks to the foresight of Hospital Administrator Leonard R. Cordell, Dr. Morgan, and Dr. Fredricson, the Hospital had a good mass casualty program. Looking on a map, the Hospital is an \"I\" with the front entrance facing west. The northeast part of the top of the \"I\" had the Emergency Room, with the operating rooms on the floor above On the left (northwest) wing of that hallway were two large rooms that could hold 24 persons each. On the second floor above them were the delivery rooms that could be converted to emergency O.R.s, and the nurseries and neonatal care units.\n\nThese rooms were set up as triage areas, and one of the rooms was set up with pairs of double doors to be 'clean rooms' in the event of bioweapon casualties. Yes, they'd be overwhelmed by a true mass casualty event involving hundreds, but they had a different plan for that, involving erecting Army M.A.S.H. tents on the front lawn for triage.\n\nThe twelve persons were brought in, and Dr. Cordell and Dr. Morgan wore chem masks and disposable Tyvex suits while examining them. Also present were two Town & County HAZMAT persons, who were doing air testing.\n\nI came up to the Hospital and parked in the 'Authorized Vehicles Only' area, and entering the Hospital from the ambulance bay entrance at the east end of the Emergency Room wing. Lieutenant Jerome Davis was with me. Detectives Julia Rodriguez and Teddy Parker came in Julia's car behind us.\n\nWe were met by the loveliest doctor on the Hospital Staff, in my opinion, anyway: my wife Dr. Laura Fredricson. She said \"They're all stabilized, and Dr. Cordell thinks they are going to ultimately be all right. We've taken blood tests to see what is in their systems.\"\n\n\"Can you have someone do one more thing?\" I asked. \"See if they've been injected anywhere, especially on the back of the neck like the dead people were?\" Laura said she'd do it herself. She 'suited up' and went into the triage room... \n\n* * * * * * * * * * * * * *\n\n2:00pm, Wednesday, October 2nd. Classroom 'E' was full. Both ADA Savannah Fineman and DA Miriam Walters were in attendance, as was the Mayor and Sheriff. All Detectives had been called in, and Lt. Myron Milton was in the House, as well.\n\n\"Where is Detective Warner?\" I asked as I took my seat.\n\nCaptain Perlman said \"Sir, she's at the Library, doing research on Point Hollow. I asked her to continue to do that rather than stop and come here.\"\n\n\"That's fine.\" I said. I looked over at the Chief, who was at the near end of the table.\n\n\"It's your meeting, Mr. Crowbarrrr.\" the Chief said.\n\n\"Thank you, Chief.\" I said. \"Okay, guys, this thing just got big. First of all, where and how were those twelve people found?\"\n\nLt. Myron Milton said \"First, some background. Going upriver, the State Line River turns northwest just above the bridge at the Hammondsville Road, but the State Line runs straight north. So there's a strip of land a few miles wide between the State Line that is the western border of the Point Hollow property, and the State Line River.\"\n\nMyron: \"We were flying drones over Point Hollow in increasingly wide circles, just to see what we could see. We spotted some bright colors, like red clothing and blue jeans, so we flew a drone to investigate, even though it was over the State Line. When we got closer, we could see it was people lying on the ground.\"\n\nMyron: \"We contacted the Hammondsville Police. Their Police Chief, Pascal Floyd, allowed us to send medics over the State Line to get to them quickly. We sent a couple of HAZMAT people with them, and they found no contamination. Then Sheriff Gleason and a Deputy came out, and they weren't really happy we were there. Fortunately, Hammondsville Police Detective Josh Segers showed up, and told the Sheriff that the Police Chief had authorized us to come in, in order to get medical attention to the people if they were alive. Indeed, they were all alive, but either totally unconscious or incoherent. They were all evacuated to University Hospital here, who treated it as a mass casualty event.\"\n\n\"If I may interrupt for one second.\" growled the Sheriff, who then said \"I've talked to Sheriff Gleason and Chief Floyd, and I told them about the deaths at Point Hollow, and the similarity of those crimes to the people we found alive in their county. They've agreed to let us take the lead on both investigations, but we'll need to keep them in the loop.\"\n\nI noted out of the corner of my eye that Savannah Fineman rolled her eyes at that. She was becoming an irritant to my harmony, but I let it go and concentrated on the case. I asked \"How did those twelve get there?\"\n\n\"We're still working on that, sir.\" said Captain Perlman. \"We had gone around the house at Point Hollow, and no footprints were found in the backyard or side yards. The front yard and gravel driveway to the house were trampled on by all our people and cars. We hadn't crossed the State Line, but after we found these twelve, the CSIs all went up there and started looking... but there were no footprints anywhere on the farmland to the west of the fence that is one foot within the State Line.\"\n\nTanya: \"Nearer the scene of where the living people were found, we did find some tire tracks, and we took photos and impressions. The Hammondsville Police monitor the area for drug traffic crossing the State Lines there, and said they saw nothing unusual all night... which counts for nothing except that it should have taken more than one vehicle to get twelve people to any one place.\"\n\n\"That's a good observation.\" I said. \"So did you expand the search for footprints between Point Hollow and the place they were found, which is about a mile and a half apart?\"\n\n\"Yes sir.\" said Jerome Davis. \"The ground is mostly farmland, with some fallow fields the closer one gets to Point Hollow itself. The ground is fairly soft, and anyone walking over that terrain should've left prints, or drag marks or something. But there was nothing.\"\n\n\"Sir,\" said Julia Rodriguez, \"I know this is going out on a limb, but if these people were affected by some kind of drugs and couldn't coherently walk together, it's be a huge coincidence for them to end up at the same place and collapse together. And if they walked together, we should've found evidence of that, but there was none.\"\n\n\"That is good thinking outside the box.\" I said. \"It also assumes these twelve were at Point Hollow and ended up to our west. Is it not possible that everyone was at the spot the twelve were found, and the six dead were brought to Point Hollow?\"\n\n\"I would say 'no sir'.\" said Julia Rodriguez fearlessly. \"The people in the farm field were found in a loose, haphazard group. The dead bodies at Point Hollow were found in a circle, as if they'd been alive at that spot and fell dead in place to the ground. Also, the other chemicals were found around Point Hollow, but there was nothing at all found in the farm field, other than the twelve people.\"\n\n\"I'll buy that for a dollar.\" I said. \"And it's easier to move living people than dead bodies. Okay, who are the twelve people? And are there any connections to our six dead people?\"\n\nTeddy Parker spoke up: \"I found one connection, sir. \"One of the living girls is named Sarah Wood. She's a University student, and she is the roommate of Lisa Rowland, one of the six dead persons. Of the twelve survivors, there were four that were University students: Sarah Wood, Irene Ward, Aaron Bennett, and Thomas Hall. We're still getting data on them, but Sarah Wood has two arrests for marijuana possession in amounts for which she could've been charged with Distribution, and Aaron Bennett has two DUI convictions.\"\n\n\"Anything else?\" I asked.\n\n\"No sir, it's still early.\" said Captain Perlman. \"Sonali and Lainie are melting the wires as we speak.\"\n\n\"That's all?\" called out Miriam Walters. \"That's all you've got?\"\n\nI turned to face her. \"Exactly what do you expect us to have, Ms. Walters?\"\n\n\"There are six dead people that you've known about since this morning!\" Miriam Walters said strongly. \"And now we have twelve more, that fortunately are alive. Don't you have a lot more on at least the six dead? And you have no idea why this happened?\" Yeah, it was very uncomfortable in the room at the moment.\n\n\"Again, Ms. Walters,\" I said, \"what do you expect?\" I held up my red crowbar. \"Do you think this crowbar is a magic wand that just instantly brings us all the answers? These guys are doing a great job, but it takes time. And the autopsy and toxicology results take time, as well. Gas Chromatographs are not magic boxes.\"\n\n\"Let's wrap this up, Mr. Crowbarrrr.\" said the Chief. \"And let these outstanding Detectives get back to the excellent work they are do-ing...\"\n\n\"Yes sir.\" I said. \"Chief, with your permission, there are two things I'd like to ask of everyone. First, please make no comments to the Press. If you would, route everything through Captain Damien Thompson; that way, the message out there is uniform and consistent, and won't give the Press legitimate reasons to speculate and put out fake news.\"\n\n\"What will that message be?\" asked D.A. Miriam Walters, loudly and harshly. \"What are you telling the People of the County? We could be facing a serial killer. Are the People in danger?\"\n\n\"I'm telling them little as possible, at least with regard to the investigation.\" I replied. \"Until we get some facts and can put out a message based on those facts, I'm asking everyone to exercise discretion, and to route all statements through Captain Thompson.\"\n\n\"I think that's a very good idea.\" said Mayor Daniel Allgood, looking right at Miriam Walters as he said it.\n\n\"What's the second thing, Mr. Crowbarrrr?\" asked Chief Moynahan.\n\n\"The second thing,\" I said, \"is that even though this crosses State Lines, please do not say anything to the Feds. At all. Mr. Mayor, say nothing to your wife, please. Captain Perlman, say nothing to your fianc\u00e9, please. Lieutenant Davis, say nothing to your father, and if he finds out, ask him to say nothing. And ask Senior Detective Warner to also not say anything to the Feds.\"\n\n\"Why not?\" asked Savannah Fineman harshly. \"As you said, it crosses State lines. Why not bring in the FBI's expertise?\u2028\n\nI turned in my chair to look right at Fineman, and said: \"Because, Ms. Fineman, I don't want the Feds coming in here and totally fucking up our investigation. I want to find what there is to find first. Just imagine how bad the optics with the Voters would be if the Feds come in here, fuck it up, and then blame us locals. Why, it might even cost some people their upcoming elections!\" Walters and Fineman both got the point... I think.\n\n\"I need to speak with D.A. Walters privately, pleeeeezzze.\" said the Chief.\n\n\"So do I.\" growled the Sheriff, whose mustaches were twitching... with anger.\n\n\"Make that three of us.\" said Mayor Allgood, the People's Choice.\n\nPart 5 - Storm Clouds Gathering\n\n4:00pm, Wednesday, October 2nd. Cindy Ross came into my office.\n\n\"How are you feeling?\" I asked.\n\n\"Better.\" said Cindy. \"All good now, actually. I have a question: anyone running for one of the newly created positions has to register by Tuesday, October 8th?\" she asked.\n\n\"Yes.\" I said. \"Early voting begins October 15th, and they have to print the absentee ballots, as well.\"\n\n\"I just got a call from one of my secret sources.\" Cindy said. \"Guess who is running against incumbent Horace S. Wellman for the Inspector General post?\"\n\nI said \"I'm not feeling a good vibe out of you, so I'll guess Silas or Finneran.\"\n\n\"Finneran.\" Cindy replied. \"And my source tells me he has strong backing from militant gays and anti-Police minority groups. He's already raised a good bit of money, which my father tells me was from George Schwartz, who we believe was also funding the Citizens For Police Accountability group.\"\n\n\"You know,\" I said, \"I joked all the time about putting something in the Charter to specifically exclude Finneran from running for office. I should have... except it would probably be struck down as a Bill of Attainder, which is Constitutionally prohibited.\"\n\n\"You don't think Finneran can win, do you?\" Cindy asked, a worried look suddenly appearing on her ruggedly pretty face.\n\n\"We'll see.\" I said solemnly. \"And in a related story: our Board of Inquiry concerning the arrests of those NEA thugs that attacked Warren Davies and Tina Felton is on Friday. They wanted it tomorrow, but this mass murder case came up, so the Sheriff and Mayor exerted pressure to move it back a day.\"\n\n\"Speaking of the case,\" said Cindy, \"did you hear the yelling going on in the Chief's Conference Room?\"\n\n\"No.\" I said. \"What happened?\"\n\nCindy replied: \"The Chief's assistant Cassie told my assistant Lauren that D.A. Walters and ADA Fineman were in there with the Sheriff, Chief, and Mayor. Apparently the Sheriff and Chief really tore Miriam a new one for what she said about the Detectives, and right in front of them, the Detectives. And then Miriam and Savannah started yelling back at the Sheriff and Chief. Cassie said that when they all came out twenty minutes later, the Sheriff's face was really red; she was worried about his health. And the Chief was pretty visibly angry, too.\"\n\nAfter a pause, Cindy added: \"It's probably a good thing that I wasn't in there.\"\n\nI smiled. \"No doubt. But just remember this, and I'm going to make sure the Detectives are equally well aware of it: the District Attorney is not the boss of us. She has no authority over us, not one bit. And if she or Savannah tries to lord it over us, I've got a... 'magic wand'... It's red, it's made of iron, and it has the power to change their suppositions in a hurry...\"\n\n* * * * * * * * * * * * * *\n\n*Whirrrrrrrrrrr*\n\nCaptain Tanya Perlman appeared at my door at 5:00pm. \"Sir,\" she said, \"the Detectives are ready to meet with us. They have new information, and you might as well be in there to hear it when I do.\"\n\n\"An invitation I cannot refuse.\" I said, getting up and undoing my laptop to take it to the meeting.\n\n\"Also, sir,\" Tanya said, \"Joanne found some information in the Town & County Archives as well as the University Library, but the Archives were closing and they kicked her out. She wants to go back tomorrow to finish up before she gives you her report.\"\n\n\"Okay.\" I said. \"Let's go to 'meetings'.\"\n\nWe went to Classroom 'E', where all the Detectives already were. Right behind me was Chief Moynahan, and right behind him was Commander Ross. We all took our places, and the Chief said \"Go ahead, Captain.\" Tanya nodded at Jerome Davis.\n\n\"Go ahead, Teddy.\" said Jerome to Teddy Parker.\n\n\"Yes sir.\" said Parker. His laptop was hooked up to the big screen. Photos began appearing. \"I'll go through the 12 that were found alive-------\n\nThe door flew open, and in walked ADA Savannah Fineman. \"Another meeting without notifying me?\" she snarled. \"And don't you people ever go home?\"\n\nThe Chief replied with some acerbity \"Earlier today your boss insulted my Detectives by saying they weren't doing enough. Now you bitch about them doing their jobs long after you ADAs quit for the day and go hommmmme.\" Yep, the mood of our Chief was a bit testy.\n\nI said \"And I know for a fact that you were notified of this meeting.\" I held up my cellphone and said \"Because I'm the one that sent you that text notifying you of it.\" The mood of the Detective Corps got even angrier than it already was, and it was visible on Captain Tanya Perlman's face.\n\n\"Chief, Commander, may I speak to you privately for a moment?\" Savannah said angrily.\n\n\"Not with me.\" I said. \"I'm in a meeting with my Detectives about this mass homicide case.\" Detectives worked hard not to smirk too much.\n\n\"You don't want to meet privately with me right now, Mizzz Fineman.\" barked the Chief. \"So either sit down and listen, or leeeeeeave.\" Savannah sat down, a look of fury on her face.\n\n\"I believe you were giving us some information, Detective Parker.\" I said.\n\n\"Yes sir.\" said Parker. \"I'll talk about the University students first, and the first of those is Sarah Wood. She is the roommate of Lisa Rowland, one of the six that died. Sarah is 21 years old, a Junior, Education major. Her GPA is 2.00, and she's been on academic probation twice. She was busted for marijuana possession in a quantity that was enough to charge with distribution, but it was pled down in Harry Nance's court.\"\n\n\"Next is Aaron Bennett.\" said Parker. \"He's 24 years old, but still enrolled in the University. He's a sixth-year Senior now. He was a pre-Med in Biochemistry, but his two DUIs pretty much destroyed his chances of getting into Medical School, not to mention getting a Medical license later in life. He changed his major to Business, then to Chemistry again, regular Chemistry. The fines for his DUIs sapped everything he had, so he's worked odd jobs and piled up a ton of student debt.\"\n\nParker: \"Irene Ward is 21 and a Senior in Fine Arts, 2.2 GPA. She was busted in a sting for escorting, but had a really good lawyer who shredded the prosecution's case, so she officially has no record at all. That was in the City a year ago.\"\n\nParker: Last of the students is Thomas Hall, 20 years old, a Junior majoring in Computer Science with a 3.1 GPA. As you can see from his photo, he doesn't look like a geek, but like a normal guy. But he must have confidence issues, because he's hired a lot of prostitutes over the last couple of years, and he was seeing a psychologist that we know to be a sex surrogate.\"\n\nParker: \"I'll quickly go through the rest. Amanda Adams, age 26, once part of the Punk scene but has spiraled down the last couple of years, maybe due to drug use. Lori Campbell, age 32, fired from her job with the University for lying on her r\u00e9sum\u00e9 and application.\"\n\nParker: \"Lawrence Evans is black, age 24. He was a devotee of the 'World Outreach Church', but recently left it. Melissa Coleman, age 28, married three times already. Gary King, age 25, has had a lot of low-wage jobs. He seems to be a real nobody. Kevin Moore, age 26, an electrician and active with the IBEW Union. David Watson, 27, has a contract with Town & County Parks & Recreation for outdoor work. And Arthur Young, age 30, an accountant with a lot of credit card debt and not much income. I'm sending what we have to your emails.\"\n\nLt. Jerome Davis said \"Thanks, Teddy. Ladies, gentlemen, we've gotten some information about the University students, alive and dead. We got their schedules, then the names of other people who were in their classes, then tracked them down. Kudos to Theo Washington; he covered a lot of ground today, as did Teddy Parker. Go ahead, Theo.\"\n\n\"Thank you, sir.\" said Senior Detective Washington. \"Unfortunately, I got very little. First, Guru Bob Stevens. He lived in the apartment building at 620 Church Street, the same place where Rusty Dawson was found dead.\" (Author's note: 'Pink Panther', Ch. 01.) \n\nTheo: \"His room had a lot of... Eastern decor, a lot of patchouli odor, a lot of burned incense and sage. The K-9 guys ran Sergeant Tango through, and while he alerted a couple of times, no drugs at all were found. There were several books on demonology, one on 'Abbadon', which I understands translates to 'place of destruction', and he had a journal full of notes, scribbled haphazardly. I bagged that as evidence and brought it in.\"\n\n\"Good.\" I said. \"I want to look at that when the pages are photographed and put into the servers.\"\n\n\"Already done, sir.\" said Captain Perlman. \"Keep going, Theo.\"\n\n\"Yes ma'am.\" said Theo. \"Sarah Wood was Lisa Rowland's roommate. None of the other girls on that floor said they knew either girl very well. I exercised the warrant to search their dorm room, and it was pretty clean. But there was some Satanist material in the room. A pentagram necklace, black leather dresses with red trim-------\"",
        "\"Sounds like a normal Wildcat dorm room!\" interjected Commander Cindy Ross. The room burst into laughter.\n\n\"Touch\u00e9\" I said witheringly, though with a grin, as a red crowbar was waved in Cindy's general direction. \"Go ahead, Theo. We'll see if she's talking trash like that on October 27th.\" A green crowbar was waved in my general direction.\n\n\"Yes sir!\" said Theo with his movie-star-handsome grin, as his cousin was the Heisman-Trophy-winning member of the Wildcat varsity football team. \"Point being, there were a few clothing items that looked more suited for Hallowe'en parties than normal wear, and some hard rock band magazine pages on the wall... bands that are known for Satanist songs. She also had a iPad tablet, which I confiscated.\"\n\n\"Thomas Hall also lived in a dorm room.\" said Theo. \"His roommate was a pre-Law English major, and in spite of that he let me look around. Hall's side of the room was a bit cluttered, and he was a gamer. Most of his books were computer-related, but there were a couple of others... and they were introductions to Satanist culture and society. He also had a laptop computer, which I confiscated.\"\n\nTheo: \"Aaron Bennett lives in an off-campus apartment on the west side of University Avenue, over one of the bars there. He's behind on his rent. The apartment was a mess, and I don't think it was ransacked; he just lived that way. No literature on Satanism, but he also was a gamer, and some of the games were Satanist-related. He had a number of Chemistry textbooks, and a couple of Dr. Mickelson's books on Sigma radiation and Titanium-44.\n\nEveryone looked at me, and I said \"Titanium-44 is a by-product of exploding stars, and it's neatest feature is that it decays into antimatter, which then touches matter and is annihilated with a huge release of energy that can be detected and even tracked. It's a big astronomy thing right now in the study of black holes.\" Seeing the look of sheer boredom on Savannah Fineman's face, I said \"Keep going, Theo.\"\n\n\"Yes sir.\" said Theo. \"Bennett's gaming device was an Xbox, but he had a laptop, and guess what?\"\n\n\"You confiscated it!\" said a chorus of Detectives.\n\n\"I sure did.\" said Theo. \"Okay, Stephen Wilson lived in an apartment near where Stephen Walter Henry lived, south of Campus and Fraternity Row. I executed the warrant to look at his room, and one of his two roommates was there and let me in. No Satanist material, but he had a lot of Biology books, being a Biology major. He may be studying with Dr. Mickelson, as some of the papers on his desk were about Sigma radiation. There was no computer nor tablet in his room. But the strange thing is that he had the same book on Titanium-44 that Bennett had.\"\n\n\"No-teddd.\" sang Captain Perlman, who was making notes.\n\nTheo: \"Ashley Perez lived with two other girls in an apartment off University Avenue. The other girls are University students, and Ashley lived alone in the apartment over the summer, while the other two were in and out. Her room was small, clean, and only had books related to her Town Technical Institute studies. No computer or tablet that I could see. Her roommates said she was friendly enough, but kept mostly to herself, never brought a boy home... nor a girl, for that matter... and didn't go out very much. Maybe because she had very little money.\"\n\nTheo: \"Anthony Brown lived in the office of his auto shop in Midtown. The other guys that worked there said he was a good dude, and was really driven to make his business succeed. Right now I have no social contacts for him at all. Midtown Detectives Nell Bell and Steve Ruger looked through his office where he slept. Very few personal belongings except clothes, a chess set, and a couple of chess books. They did not confiscate his workplace computer, because the Midtown Detectives were not clear if our warrant covered their actions.\"\n\nTheo: \"And Irene Ward was a Pi Omega before that Sorority got shut down. She was not implicated in the Blassingame-Dougherty situation, but her name as a Pi O member was scrubbed from the University's records. Her drivers license lists the Pi O house as her address, but it was shut down, and she's not living with her parents. We're going to have to look harder into her.\"\n\n\"That is great information,\" I said, \"especially in as little time as you've had. Keep at it. Anything else?\"\n\nJerome Davis said \"Roy, you got anything on how those twelve people went from Point Hollow to Point B?\"\n\nDetective Sergeant Roy McGhillie said \"Yes sir. Some of those tire impressions matched to common Ford Econoline 350 van tires. We checked the video of all vehicles crossing the State Line River at the Hammondsville Road Bridge, the main road west. At 5:30am, these two black vans crossed the bridge within half a minute of each other.\" He was showing video from the cameras overlooking the road near the State Line.\n\n\"The car tags on both vans were reported stolen from cars, as in sedans, several months ago.\" continued Roy. \"These vans did not cross back into our State by that same route. We put out a tri-State alert on them, though they'll probably change the car tags again. Maybe we'll get lucky.\"\n\n\"Good report.\" I said. \"Next?\"\n\nChristopher Purvis connected to the monitor. \"After reviewing the CSI tapes from this morning, it looks like the six people that died were sitting in a circle. There may have been some kind of small grill or fire pot they were sitting around, but there are no traces of it at the crime scene that we could see. What we did see was a number of footprints around that circle of people, as if there were other people there, but standing behind the six that died. We are working on determining if any of the prints match the shoes of the 12 that were taken to the Hospital.\"\n\n\"What's the holdup with that?\" barked Savannah Fineman. \"You couldn't have gone to the Hospital, and compared the shoes to the markings there?\"\n\n\"No, Ms. Fineman, we could not.\" Captain Tanya Perlman said with great alacrity, and some anger. \"All of the shoes and clothes were bagged as potentially being contaminated with dangerous substances. The Crime Lab has them, and we'll make the proper comparison when we are safely able to.\"\n\n\"O-kayyyy.\" said Chief Moynahan. \"You have all done an outstanding job on this. And I know you'll continue tooooooo. Is there anything else?\"\n\n\"Yes sir.\" I said. \"Some assignments; things to look into. I need to know more about that 'World Outreach Church'. What is it, who runs it, what it's about. I need to know if any of these people, especially the Biology students, were students of Dr. Mickelson. If so, I might have to personally interview him; he's quirky and might not talk to any of you.\"\n\nI continued: \"I need y'all to dig deep and find any connection at all between these eighteen people. It's bad to assume, but I think we can safely surmise that all eighteen were at Point Hollow and were affected by the same thing, whatever that 'same thing' is. Stating the obvious, if we can find out why they were all at Point Hollow in the first place, we might can determine why they were killed or injured.\" Everyone nodded. Tanya was furiously making notes.\n\nChief Moynahan said \"There is one more thing. I am in the process of notifying the next of kin of both the survivors and the deceased. Until that is done, I absolutely do not want to hear the names of these people on the news. Do I make myself clear on that?\"\n\n\"Yes sir!\" came a chorus of voices.\n\n\"I have one last thing, too.\" I said. I steeled up, then said with authority: \"I want everyone in here to know and understand that the District Attorney's Office is not the boss of us! No one, not the D.A. nor anyone in that office, has any power or authority over any Police Officer, from the Chief down to the newest rookie Uniformed Officer. They are supposed to work with us, not over us. If there is any problem, any at all, bring it directly to me personally. That's all I have, Chief.\"\n\nSavannah Fineman's face had been wide-eyed with shock when I said that, but was now turning to deep anger. She got up and swiftly left the meeting as the Chief dismissed the rest of us...\n\nPart 6 - Into the Night\n\nAt 9:00pm, I packed up my laptop in my travel bag and secured my office. As I walked out into the hallway, I could see that the lights in both MCD and Vice were on. Going into MCD, I saw that all the Detectives were there, as well as Lieutenant Davis, Lieutenant Rudistan, Lieutenant Myron Milton, and Precinct Captain Hugh Hewitt, all at desks working on the computers, helping gather data.\n\n\"Now hear this!\" I said loudly. \"Go home, people. This will keep until tomorrow morning. I am going to tell the Duty Desk to call me if there is anyone still here at 10:00pm. If there is, I will be back, and I will physically kick your asses out. Now go home. If you try to come back in before 6:00am, I will be in your face. Now go! Scoot!\" People started packing up to go.\n\nI then went into Vice, where Lt. Mary Milton and the Vice Detectives were at their computers, and joined by Lieutenant DeLong and our electronics CSI, Mark Walker... and Lt. Commander Teresa Croyle. \"I thought I'd lend a hand gathering data on these people.\" she said when I looked at her.\n\n\"Understandable.\" I said. Then I raised my voice and said: \"But all of you, go home now.\" I repeated my 'threats' I'd told the people in MCD.\n\nI knocked on Tanya's door and peeked in. She was at her computer, and she looked exhausted. I told her to get her Tank in gear and go home. She needed little persuasion to comply...\n\n* * * * * * * * * * * * * *\n\nI arrived home at the Mountain Nest. Jim, Ross, and Ian were drawing plans for the fort they intended to build in the woods above The Cabin. Laura was sitting on the far-side sofa, talking to Molly as Molly sat in my rocking chair by the window. Carole normally could be found reading or drawing something, but tonight she was just petting Bowser. \n\nWhen I came in, Carole rushed to greet me. \"I was worried about you, Daddy!\" she said as she hugged my legs. I looked up and saw surprise on Laura and Molly's faces.\n\n\"Why don't you help me take the dogs out.\" I said to Carole. Two outstanding dogs almost magically appeared at the back door. Carole and I went outside, following the dogs down the steps to ground level. As they went to inspect their territories and do their business, Carole and I sat on the metal mesh loveseat on the patio.\n\n\"Why were you worried about me?\" I asked.\n\n\"You were at that haunted house today, Daddy.\" said Carole. \"That's a bad place.\"\n\n\"Point Hollow?\" I said. \"I agree, it's a bad, bad place. But why were you worried about me? I was okay.\"\n\n\"I don't know, Daddy.\" Carole said. \"I'm glad you're o-kay. Is Aunt Cindy o-kay?\"\n\n\"Yes, she's fine.\" I said.\n\n\"She should be careful at Point Holl-owww.\" Carole said.\n\n\"We always are.\" I said. \"Listen, if you have any dreams or bad feelings, you tell me as fast as you can, okay?\"\n\n\"Okay, Daddy.\" Carole said. \"And I'm glad Aunt Molly is staying here tonight.\"\n\n\"Me too.\" I said. \"So how was school today?\"\n\n\"Pretty good.\" Carole said. \"All the teach-ers are happy about the new School Board. They said you were the reason for it.\"\n\n\"So I'm doing good in a poll of second grade teachers?\" I asked. Carole giggled loudly at that. Then Bowser and Buddy trotted back up, and I told Carole we had to go back in. Daddy's popularity in the polls dropped significantly when the word 'bedtime' was mentioned...\n\n* * * * * * * * * * * * * *\n\nOnce the kids were in bed, I sat down in the rocking chair with a Scotch as Molly had moved to the near-side sofa. \"I'm staying in the guest room tonight.\" Molly said. \"Cindy asked me to stick close by, but she wouldn't say why.\"\n\nLaura said \"All twelve of the people you found over the State Line are recovering. Your Officers should be able to talk to them tomorrow. Dr. Morgan agrees with Martha the M.E. that all eighteen people inhaled something poisonous, and the six that died succumbed to something else that was injected into them. The twelve in the hospital had no injection marks on them. The lab tests are still ongoing.\"\n\nI nodded. \"That sounds about right, from what I've seen and heard today. And I thought the Hospital handled the mass casualty event very well.\"\n\n\"Thank you.\" said Laura. \"That was one of the many things Dr. Cordell did to improve things. We are all really sorry to see him go, though I understand why. Replacing him is going to be hard. Oh, that reminds me, Dr. Wellman is going to interview Donny Tate, but it might be for the Assistant Administrator job, handling the books and the finances.\"\n\n\"Good.\" I said. \"I hope that works out.\"\n\n\"What's going on with this case, Don?\" Molly asked. \"And why are the DAs sticking their noses into it?\"\n\n\"How'd you know about that?\" I asked.\n\nMolly said \"I called Chief Moynahan to offer our assistance with anything you guys might need. He mentioned arresting the DA and an ADA and bringing them to my jails to hide them. He told me they're really sticking their beaks into it.\"\n\nI said \"First, I'll tell you what's going on.\" I did so, repeating the story helping to get and keep it fresh in my mind, and putting the ducks in a row. Then I said \"Walters didn't send Paulina, who knows us and is familiar with how we do things. She sent Fineman, instead. And Fineman rubbed my people the wrong way... especially the Chief.\"\n\nLaura said \"Why the intense interest? Political ramifications of the mass casualties?\"\n\n\"Maybe.\" I said. \"But I can't worry about them right now. I have one mystery to solve already.\"\n\n\"Any clues, so far?\" Molly asked.\n\nI shook my head. \"No. Not enough data yet.\" I said...\n\nPart 7 - Ambushed\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Thursday, October 3rd, from near the weather station on the cliff above and east of Point Hollow. \"We are bringing you continuing coverage of the deaths of six persons and the sickening of twelve others at the Point Hollow estate!\"\n\nBettina began: \"Six persons were found dead at Point Hollow early yesterday morning. HAZMAT teams were called to the scene to investigate the possibility of lethal contamination and to recover the bodies, which were taken to the State Crime Lab for autopsies. The Town & County Police began an investigation, but so far remain clueless as to what transpired that led to the deaths.\"\n\nBettina: \"A more extensive search revealed twelve more persons, all still alive, across the State Line. Those persons were rushed to University Hospital, which implemented its mass casualty and hazardous materials protocols. Channel Two News has learned that all twelve persons are recovering.\"\n\nBettina: \"The Town & County Police have not released the names of the six dead persons, pending notification of next of kin. And neither the TCPD nor the Public Health Department have released any information about what caused the contamination that might have harmed eighteen persons, and so far have not responded to KXTC's repeated requests for comment. For all we know, the entire Town & County may be in danger from the same unknown agents that killed six people and harmed twelve others.\"\n\nBettina: \"And while the TCPD is struggling to solve these cases, Commander Donald Troy and Deputy Chief Cindy Ross will be facing a Board of Inquiry over their alleged Police brutality in arresting six persons. Commissioner Finneran is expected to be named the Chief Investigator. Commander Troy may can avoid responding to KXTC's requests for comments, but he'll be forced to answer Commissioner Finneran's tough questions in the Board of Inquiry...\"\n\n* * * * * * * * * * * * * *\n\n\"We're 'clueless'.\" Cindy Ross said acerbically as we drank coffee and watched in the Chief's Conference Room.\n\n\"Welcome to the world of 'instant gratification'.\" replied Teresa Croyle.\n\n\"No, welcome to the world of agenda-driven Media hatred for the Police.\" I replied.\n\n\"It's Crowbar's fault.\" growled Sheriff Griswold. \"He's too damn good for his own good. Now everybody expects instant answers!\" I noted his mustaches were twitching with amusement; I was being ribbed.\n\n\"Speaking of instant answerrrrrrs,\" drawled Chief Moynahan, \"what are we doing this morning about this case?\"\n\nTanya Perlman said \"We'll be sending loddy-doddy-everybody to the Hospital to interview the twelve survivors as soon as we can. I'm expecting the toxicology and chemical tests to come back from the State Crime Lab, and hopefully Martha the M.E. will have more for us. And then we can have a big meeting to get all the data out there for you guys to look at.\"\n\nCindy said \"We're going to have to have a Press conference at some point. We're getting Statewide and even national news interest over this. I've already had Captain Damien Thompson implement our media control plan.\"\n\n\"I wish we could control them.\" I said sourly-------\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my personal iPhone. I answered it, and it was the Intendent, Adele Peabody. \"What?!\" I gasped. \"Okay, thank you for calling me.\"\n\n\"What is it?\" asked Cindy, as everyone saw the shocked look on my face. \n\n\"Ladies and gentlemen, we've been ambushed.\" I announced. \"Silas is convening the Board of Inquiry at 9:00am this morning, as originally scheduled.\"\n\n\"What!\" yelled Sheriff Griswold, becoming red-faced. \"He told me he would postpone it until tomorrow!\"\n\n\"Yes sir, it's pretty easy to see what Silas and Finneran are up to.\" I replied as I dialed a number on my iPhone. \"Hi Mike.\" I said to my attorney, Mike G. Todd. \"They did not postpone the BOI like they promised to. It's on for today. 9:00am... yes... yes, put our plan into effect... okay, bye.\"\n\nAs I disconnected, I said \"If you don't have a semi-formal jacket with ribbons here at Headquarters, go home and get it. The Board of Inquiry is at 9:00am... today.\"\n\n\"I needed that like I need a hole in the head.\" Cindy said, getting up. \"If you'll excuse me, Chief...\"\n\n\"By all means, Ms. Rossss.\" said the Chief. \"You're all free to go, except the Sheriff. I want him to have another cup of coffee and calm down...\"\n\n\"Yeah, that might be a good idea.\" growled the Sheriff as we all got up to go.\n\n\"Hey guys,\" I said, \"let's not tell anyone that we know about this. Let Silas think he's fooled us, and we'll turn the tables on him...\"\n\n\"I love the way you think, Crowbar.\" growled the Sheriff. Yes, he was one pissed-off old man, and one should never piss off old people...\n\n* * * * * * * * * * * * * *\n\nI'd canceled the Angels Meeting, but I had KFXU on my television monitor. As Catrina and Meredith began their broadcast with the Point Hollow story, Cindy came into my office, and we watched it together.\n\n\"And we have with us Public Health Officer Beth Paige. said Catrina Pierce as the camera panned out to show Beth Paige in the studio's 'hot seat'. \"Beth, what can you tell us about this situation? Is the Public in danger?\"\n\n\"Thank you for having me on, Catrina, Meredith.\" said Beth Paige, who for the first time in my memory was wearing her dark blue uniform jacket with her badge (yes, the Public Health people have them), ribbons, and two stars on her shoulder epaulettes.\n\nBeth said: \"I don't think there's cause for concern for the general Public. We believe that all 18 persons were at Point Hollow when they became ill, and the Police are investigating if the ones that died succumbed for other reasons, such as an overdose of drugs they may have ingested.\"\n\nMeredith: \"Beth, initial reports were that a foul odor was detected at the crime scene, and your HAZMAT team did find poison contaminants at the scene. Can you give us more information on that?\"\n\n\"We're still waiting for the autopsies and toxicology reports,\" said Beth, \"but we do not believe there has been any spread of any contaminants beyond the local area. The Police have secured the crime scene, and any trespassers found at Point Hollow will be arrested, and we are further asking the Public to not go in or near Point Hollow...\"",
        "* * * * * * * * * * * * * *\n\n\"Could've been better, could've been worse.\" I said.\n\n\"I wish she'd said nothing.\" said Cindy. \"Or at least coordinated with us like the Sheriff called and asked her to.\"\n\n\"I guess she felt like she had to say something.\" I said. \"If memory serves me correctly, Beth Paige and Miriam Walters are good friends. I wouldn't be surprised if Walters put Paige up to that.\"\n\n\"How do you figure?\" Cindy asked skeptically.\n\n\"She's wearing her Public Health uniform.\" I said. \"That puts some 'oomph' into her words. I don't know why, but the optics are severely important to Walters.\" Cindy nodded.\n\n\"What about this BOI bullshit?\" Cindy then asked. \"What is going on with that?\"\n\n\"I think Silas was attempting to do an end-run.\" I said. \"He lies to the Sheriff in the hopes none of us show up, then he and Finneran can unilaterally say we're guilty and not indemnified. I called the Mayor, Mr. Landau, Mr. Morse, and Mr. Fitzgerald. The Mayor was also told it was tomorrow, though it was possibly the Sheriff that told him that. Mr. Landau and Mr. Morse were told they weren't on the Board for this one. Mr. Fitzgerald said he was told it was today, and didn't realize the rest of us were told differently.\"\n\n\"What are we going to do?\" Cindy said. \"Even though we now know, this could put us behind the eight-ball.\"\n\nI just gave my cousin a 'look'. \"Really?\" I replied. \"This is me you're talking to. And I am not an Agency of the Weak-Minded.\"\n\n\"My apologies.\" Cindy said, though a bit mockingly. \"I stand corrected.\"\n\n* * * * * * * * * * * * * *\n\n\"This shouldn't take too long.\" said Silas as he, Finneran, and Fitzgerald sat at the table in the front of the room. The NEA's lawyer and several 'cub' reporters were also present.\n\nSilas had changed rooms, also, but to his utter shock and Finneran's obvious hatred, at 8:59am the door opened and in walked the Town & County Mayor, Sheriff, Police Chief, Police Commander, Police Deputy Chief, and several Uniformed Officers that had been at the scene. Also coming in were Mr. Landau and Mr. Morse.\n\n\"Mr. Landau and Mr. Morse were named to this Board of Inquiry.\" said Mayor Allgood. \"But you did not inform them of that, Mr. Silas. Why not?\"\n\n\"Their notifications must've gotten lost in the mail.\" growled Silas.\n\n\"Seriously, \" said Finneran, \"it's not Commissioner Silas's job to inform them that they were named to it. That's your job, Mr. Illegitimate Mayor.\"\n\n\"Why did you lie to me, and tell me you'd postponed this hearing until tomorrow?\" growled Sheriff Griswold.\n\n\"I never told you any such thing.\" said Silas.\n\n\"Like hell, you didn't!\" Griswold all but exploded. \"And now you're sitting there lying to me?\"\n\n\"Prove it.\" said Silas. \"I think you're the one that's lying.\"\n\n\"Care to borrow a crowbar, Sheriff?\" I asked, coming up to him with that red object in my hand.\n\n\"I'll leave you to that, Crowbar.\" said the Sheriff. \"After I'm done, this son of a bitch is going to wish a crowbar beatdown was all I'd done to him.\"\n\n\"Is that a threat, Sheriff?\" snarled Finneran, who could not hide the underlying look of pleasure on his face.\n\n\"What are you going to do about it, if it is?\" I fired back at Finneran.\n\n\"Well, you're here.\" said Silas unhappily. \"Take your seats.\" We all sat down, Mike G. Todd and the Police Captain's Union Rep at the table with me and Cindy.\n\n\"This hearing is in session.\" said Silas. \"Mr. Finneran is the lead examiner------\"\n\n\"Objection!\" called out the Police Captain's Union Rep. \"We object to Finneran's presence on this Board of Inquiry, due to bias------\"\n\n\"Overruled!\" said Silas angrily. \"I'm not fooling with your crap today------\"\n\n\"We have proof of Finneran's bias!\" said Mike G. Todd as he stood up. \"And we demand the full Board and the Mayor see this proof!\"\n\n\"NO!\" shouted Silas. \"I've made my ruling! Finneran stays on this Board, and he's the lead examiner!\"\n\n\"No, Silas!\" shouted Mayor Allgood, standing up from his seat. \"Hear what he has to say, or I'll end this proceeding and we'll take it to Court.\"\n\n\"You don't have that authority, Mr. Illegitimate Mayor!\" shouted Silas. \"This is MY hearing now!\"\n\n\"Let's hear this evidence.\" Mr. Landau said. \"What, are you afraid of something, Silas?\"\n\nSilas looked daggers at Landau, but said \"I'm sure as hell not afraid of you, Landau.\" Then he said \"All right, let's see it, and then I'll summarily make my ruling anyway.\"\n\nWith that, Mike Todd hooked his laptop into the monitor on the wall. A video began playing. It showed Finneran speaking at the Charter Commission hearing (Author's note: 'Casting Aspersions', Ch. 03.), where he spoke of Police brutality and cursed me personally, then his anti-Charter television ads.\"\n\nMike Todd said: \"As these examples clearly and irrefutably show, Finneran is biased against the Police and Commander Troy personally, and we do not believe he is capable of acting in a fair and impartial manner. We demand he be recused from this Board of Inquiry.\"\n\n\"Denied.\" said Silas. \"Mr. Finneran will remain... who are you?\"\n\nA young Indian man had come into the room, wearing a GoPro camera on his chest. \"Commissioner Silas?\" he said.\n\n\"Yeah?\" said Silas. \n\nThe young man handed him a document. \"You've been served.\" he said, then bolted out of the room. Silas read the document, then groaned as he handed it to Finneran.\n\n\"Why, what is that, Mr. Silas?\" Mike G. Todd said happily. \"Tell us what that is!\" Silas looked at Mike with the desire to commit murder. Mr. Fitzgerald ripped the document out of Finneran's hands.\n\n\"This is notice of a Court Order.\" said Fitzgerald loudly. \"The Police Captain's Union and Commander Troy have sued the Board of Inquiry, Silas, and Finneran, to force Finneran's recusal. Judge Watts issued a stay, enjoining this Board of Inquiry from continuing until he, Judge Watts, makes his ruling.\"\n\nMayor Allgood stood up and said \"That's it, then. This Board is in recess until the Judge makes his ruling, Silas. And if you try to go against that in any way, I'm sure Commander Troy has plenty of space in his jails for you, for violating the Court Order.\"\n\nSilas stood up. \"May God damn you, Allgood!\" he snarled. \"And may God damn you, Donald Troy.\" He stalked out of the room, followed by Finneran.\n\n\"Damn, that was awe-some!\" Cindy said happily to Mike Todd. \"Great job, guys!\"\n\n\"Wasn't us.\" said Mike. \"It was all him.\" He was pointing at me as he said it. It is possible that I was grinning like the Cheshire Cat.\n\n\"Not much gets by you, eh, Crowbar?\" Sheriff Griswold said, unable to hide his happiness at what had just transpired.\n\n\"Damn! do I ever hate it when people treat me like I'm an Agency of the Weak-Minded.\" I replied.\n\nOne ambush overcome. And then....\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone, and it was the Duty Desk. \"Sir,:\" said the Duty Desk Sergeant. \"The FBI has sent a BAU team. Their Special Agent in Charge, Bob Rovers, is demanding to be allowed to come in...\"\n\nTo be continued.\n\n \n"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "horror",
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-to-point-hollow-ch-01"
}