{
    "title": "\u00c6gir's Wife Ch. 10",
    "pages": [
        "Sven stared at Kirsten. Standing just a few feet away with hands on her hips, that seemed even more luscious as they widened with her advancing pregnancy. He felt the sweat running down his forehead and threatening to blur his vision. It ran down his neck and onto his back too, collecting and staining the t-shirt he wore. \n\nHe gritted his teeth and tried with all his might to force one foot in front of the other as he held tight to the wooden bars, which were the only things that kept him upright at the moment. Every muscle in his body seemed to scream in outrage and pain. \n\nSven let loose a string of curses in every language he knew as he felt his legs begin to buckle. She was beside him in a moment. While he was too heavy and her pregnancy too advanced for her to keep him from falling, together, they managed to do it in a controlled enough manner to prevent any further damage to his shattered hips or thighs.\n\nHe held his head down and did everything he could to hold back the tears that scalded the back of his eyelids. \"Just leave me be,\" he demanded in an almost cruel tone.\n\nHe fought her as she reached for his hand. He did not want her sympathy or pity. He wanted to walk. He wanted back at sea. He wanted to be a man again.\n\nBut even in this, she won. At first, it was just a gentle squeeze of reassurance with her finger, but then she drew his hand forward. He felt the hard mound of her stomach and the movement of the babies \u2014 their daughters. \n\nHe had been surprised that rather than being disappointed, Kirsty was carrying twin girls instead of the hoped-for sons, he looked forward to having daughters. Little miniature versions of her. Although perhaps a bit more pliable.\n\n\"These little girls need you. I need you,\" she demanded as the fingers of her other hand forced his head up, and he opened his eyes to see the steely glare in the green depths of her eyes. \"So, get the fuck up and let's finish this before dinner.\"\n\nHe shook his head and drew his hand back, turning his back on them, \"I said, just leave me the fuck alone, woman.\"\n\nSilence hung in the front hall of the Holding. It stretched out for several long moments as Sven considered his options now. Although he had not heard Kirsty rise or leave the room, she must have. \n\nWhy wouldn't she after the way he had treated her? He cursed again, this time himself. For a fool. Where had all those promises gone? While he lay on that cold, hard ground in pain and certain that he was going to die, he had begged and pleaded with every god and goddess he had ever heard of, even his mother's ancient Greeks and Romans. If they gave him just one more chance, he would make it all right, tell her how he felt, be a better brother, more loving son. Hell, he'd be a better human being. And look at him now. Sat on the hard, wooden floor of their home, more alone than ever.\n\nIt was not what he had planned to happen. He honestly had meant all those promises he had made during that long night of light and reawakening. But then things happened. Or more accurately had not happened as he wanted. \n\nHe hit his legs that still refused to do what they were told. Sure, he knew that he had already surpassed the doctors' expectations for his recovery. With the aid of an old man's walker, he could walk. Hell, before they went back to sea, Mikael and Bjorn had insisted on building a ramp from the front porch of the Holding. So he could even get down to the peer. \n\nBut it was not enough. It had been two months, two terribly long, intensely tiring, and painful months with her acting as his therapist and shockingly like a little Domme. And he was nowhere close to being able to go back to sea. \n\nHe sighed as a heaviness set in his chest. He knew he should be glad that it was nothing to do with his heart. There the recovery had been almost complete. Although he was less than pleased at the dietary changes that both his mother and wife oversaw with resolve. Even his pipe had disappeared before he got home. \n\nBut what was the point? Maybe they would have all been better off if he had...\n\nThen he thought of the feel of those tiny feet and hands just beneath her soft skin. Even if he never... His mind refused even to acknowledge the possibility that was unthinkable for him. But even if he could never walk properly again, wasn't it worth it? Just to see them. To hold his baby girls. \n\nHe sighed with momentary resolve as he tried to reach for the bars of the walking frame that from this position was just beyond his fingertips. Then she was beside him. Her smile was steely firm as she leaned her shoulder into his back just enough for him to grasp the bars. \n\nIt took him far longer and more energy than he wanted to admit to struggle to his feet. With each movement, the muscles in his legs screamed in protest. He was sweating even more than before by the time he stood fully erect, using all his upper body strength to hold himself there and maintain his balance. \n\n\"Now that you're done with the pity party get to work. It's only five feet or so,\" she demanded with her arms crossed over those tits that seemed to grow even larger every day. To match the belly upon which they rested, he smiled at her fecundity. \n\nEach step was a trial by fire of pure determination. Sven lost track of time. Did it take him mere moments that seemed to stretch into hours to cover the short distance that would have once been nothing more than the blink of an eye? When he finally made it to the end of the parallel walking bars that his uncle had constructed in his workshop to her specifications, his whole body was drenched in perspiration. \n\nShe was waiting at the end with the wheelchair and a smile that stretched from ear to ear though it did not reach those green depths of her soul. He forced a responding one as he used the last of his energy to turn and collapse back into the damned contraption that had become his primary means of getting around. \n\nMonths. Years. Perhaps never. The doctors' words echoed around his befuddled brain day and night. They had since waking up from the surgery. Even then, her face had been the first thing he had seen. Her hands reassuringly wrapped around his. He wanted...\n\nHe wanted so fucking much. Most of all, he wanted to start again. Fresh with this woman. He had made so many mistakes. And he knew that he still was. \n\nHe closed his eyes to hide the tears that he knew glistened there. He was so damned torn. Part of him wanted to fight. To do whatever it took to put one foot in front of the other. To force his body by sheer will to obey his commands. To prove the doctors and everyone else wrong. The sea called to him. It was all he had ever known. All he had ever wanted. But that was not quite right either. He wanted her. He wanted those babies. \n\nBut another part of him was lost in despair. The odds were stacked against him. Even if he did manage to walk again, all of the doctors agreed...he would always require a cane like a fucking old man. Hell, not even Olaf, who was well into his seventies now, needed a fucking walking stick. \n\nHe inhaled as the bitterest part of the truth assailed his battered spirit. The sea was closed to him now. It was not just his own life that he would be putting at risk by returning to her as half a man, hobbled and crippled. It was Njord's Captive and even his brothers' lives that his pride would be endangering. And ultimately, hundreds of years of the family business, tradition, and history. Her and the girls too. \n\nMaybe it would have been better for all of them if...\n\n***\n\nKirsty could see it in his eyes though they were downcast. It was the latest of the demons they were forced to face, obstacles that stood like ancient adversaries of old against their Viking ancestors. Despair. \n\nShe could empathize. How difficult this must all be for such a vital man, used to the wind and the waves of the sea. But now the truth was dawning; it was not just his 'sea legs' that threatened to abandon him. The reality was Sven would never walk unaided again. \n\nShe knew this better than he or anyone else other than the doctors. In those final days before they had left the hospital in Oslo, she had drawn them aside. Explaining her training and the role that she would be taking on as not just his wife and carer but his physiotherapist, she had asked for the complete truth. \n\nShe would never forget the x-rays they had shown her. The bones of his femurs and pelvis shattered from a height of almost twenty feet, a fall that would have killed most men \u2014 even the ones taken after the surgery were more metal than bone in places. While her expertise lay in sensory issues and muscle coordination that were the foundation of an Occupational Therapist, she had enough of an understanding and grounding in the companion field of physical therapy to know what it all meant. \n\nHer role was to motivate and push him. To prod and cajole Sven to reach as close to full recovery as was possible. But even that would be far less than he hoped. Than any of them did. She had not yet shared her knowledge fully with Mikael. She did not want to dash anyone's hopes. Because sometimes miracles did happen. \n\nBut that was what it would take for Sven ever again to take the helm of \u00c6gir's Captive. Sure, he did not need his legs to 'drive' the ship, she chuckled because she had become familiar enough with their world to know she would have earned a punishment for even thinking that word. She could almost see Bjorn's stern look as he asserted, 'You don't drive a boat.' \n\nThe thing was that the sea was unpredictable. One moment Sven could be easily mastering that mundane task, and a short time later, all hands would be required on deck as they battled winds and waves of the especially turbulent waters of the North Sea. Even more so during the most lucrative winter months. As hard as it was to admit even to herself, Sven would become a liability in those moments. A burden that could...\n\nShe rubbed her stomach to reassure, not just her girls but herself. No, the runes were cast. Fate had set their course for them. Now it was up to her to guide this ship of family through the rough waters that lay ahead. \n\nOnce, she would have doubted herself. Her ability to do this seemingly impossible task of birthing the captain that had always lain in Mikael's heart but was overshadowed by his older brother, of encouraging Bjorn to apply the business and computer skills that had seen them through those dark months of exile to chart a new course for the family business, of absolving Petrine and even Olaf of a lifetime of guilt, of drawing Monika out of the world bounded by her senses and autism, and hardest of all, giving this man, that if she were honest she loved from before they met, a new purpose and reason to live. \n\nOh, and all while nourishing, protecting, and growing the babies that were the future and the meaning of all of it. Not too hard a task at all. Not for a shieldmaiden. And a daughter of Freyja. \n\nShe reached out and grasped his hand once more. She fought his superior strength. And won. She would not give up. She was not going to lose him. Not again. Not this time. She brought it to the fullness of her body where, as if on cue, the girls began their dance lessons. \n\nShe waited. Hoping that he would find the strength to look at her, at them. But he did not. Rather than castigate him or disrespect him, she felt the depths of his pain. She placed herself in his shoes, and tears rose to her eyes. 'Please sweet goddess of love give me the words to reach him,' she prayed as she sat beside him, sharing in the pain and wonder of life. \n\nTheir lives were entwined and drawn together by the sometimes dark and often gloriously bright rays of Fate. When he still had not found that fountain of faith and hope that Kirsty knew lived deep within him, she used the fingers of her other hand to turn his face and lift it to hers. \n\n\"I meant it, Sven. We need you. The girls and I need you. You don't want them growing up without their father, do you?\" She knew that she had scored a direct hit with those words as she watched his throat constrict. \n\nShe inhaled as she realized that it was time to begin to reveal all of the truth that she had kept close to her heart, \"A man can do more than just fish the seas, you know. It takes a true man to lead his family through these turbulent waters,\" she paused and brushed back the increasingly grey hairs that now curled unkempt about his face that was more lined than it had been that first day. \n\n\"Mikael may be able to helm Njord's Captive. Bjorn may be able to broker deals with high-end restaurants in London for the best prices for the freshest fish direct from the seas. But we all still need you, my love. None of us understand the complexities of this small world of kinship and competition in which we find ourselves. None of us have the depth and perspective of these markets the way you do. If this business, this family is going to survive...\" \n\nShe chuckled and forced a smile, \"Then you, my beloved, need to pull your head out of your arse and realize that we need what is inside that brain, more than we need your legs or your back or even your hand at the helm of Njord's Captive. Because the reality is we need that hand at the helm of this family. We need your leadership in a world that has gone haywire and is turned upside down.\"\n\nShe gripped his hand as tightly as she could and searched that inscrutable face for some sign, any sign that he had heard her, that he understood what was indeed at stake here. \n\nShe pondered her next words carefully. She knew that walking was not the only challenge they faced. The drugs which the doctors gave him for high blood pressure and his heart condition might also cause impotence. The past couple of months, they had met the more pressing issue of his recovery from surgery and the heart attack. But Kirsty knew, deep in her soul, Sven's body was as recovered as it was going to get. \n\nKirsty knew the risk she was taking. Compiling the situation with this new unknown, but she recognized too the power that sex had to heal the soul. Did she dare take the chance? Her plan to draw Sven back to them by 'making him feel a man again' could utterly backfire, push him over the precipice. She had been considering that as well, planning for just such an eventuality. \n\nNo, she had no other choice. It was time. They stood at the crossroads. Sven could continue down this pathway to self-pity, depression, and if history repeated itself as it had with his uncle, alcoholism. She did not come back here just to lose this man who had begun it all. No, the choice was clear, and she was prepared to handle the situation, either way. \n\nShe leaned forward; her lips captured his. For a moment, it all fell away. The past year floated into the recesses of time. She was that insecure, damaged woman-child exploring her dark side. And he was the Dom who lit her path and challenged her mind, body, and spirit. His hand once more found her elbow, drew her closer to him, just as he had pulled her through that turnstile in Tilbury that day. Drawn her from that dark place, which was all she had ever known and brought her to this new world of sexual and emotional completion. \n\nBut she was not that damaged goods anymore. Their love had given her strength, transformed her as a caterpillar into a butterfly, and brought her home to them. Now, it was her turn. Her chance to give back even a small portion of what this man had given her. \n\nShe felt the power of the goddess surge through her as she took control of the kiss. Her tongue found his, warring and demanding. She was not that timid, insecure, and confused creature. She was his partner, his equal. The fulcrum upon which this family rotated. \n\nShe drew back slowly. Her teeth captured his bottom lip and scored it lightly. A moment later, her gaze caught his, unblinking she whispered the words which would determine their Fate, \"I choose you, Sven.\"\n\nWithout another word or backward glance, she turned and walked up the stairs to her room. She had much to do before this night. \n\n***\n\nSven sat in the wheelchair at the end of the dock. The fjord rose up like ancient gods round about him. The waves lapped at the rocks on the shore. But his eyes were fixed. Seeking across the expanse of the choppy waves. \n\nHe was not sure what he was looking for. \u00c6gir's Captive would not be back for at least a couple more days. Perhaps longer. The lucrative winter fishing season was just beginning. He had always been able to feel it in his bones but never more than now. \n\nThey ached. His back, hips, and thighs, especially. Some of that might be from the torture sessions that his wife called therapy. A bit perhaps from getting older. But he knew that most of it was directly linked to the accident. \n\nHe shook his head. Even with all the long hours that he, Kirsty, and even his mother had put into the physical therapy, he was far from satisfied with the results. He sighed as his eyes clouded; he needed to face reality. The sea was closed to him. \n\nBut it was more than that which had sent him scurrying to Ran, the mistress that had been his first love. Her words ricocheted in his head, \"I chose you, Sven.\" Why? Why now? Worse yet, what if...\n\nWhat if he was less than a man in the bedroom too? \n\n\"There's a storm coming,\" the deep baritone voice of his uncle intruded upon his thoughts, or perhaps reinforced them. Sven only stared out to sea and listened. If the old man wanted to talk, let him.\n\n\"You know, I remember the first time we took you to sea. You were just a baby. Couldn't have been more than five or six months old. You were a fussy little shit, always crying. Colic, I think Rachel called it.\"\n\n\"Your mother did not want to take that trip. Did not want you on the boat. She was afraid it was too dangerous. Of course, I suppose given what had happened to your father, she thought she had reason. But the sea is our life, even in death. Saltwater runs in our veins as much as the blood of our Viking ancestors. But your mother did not understand that.\"\n\nOlaf sat on the cold, wooden deck next to his chair. He too stared out to sea. For long moments, the men sat in companionable silence, each lost in their thoughts.\n\n\"They don't understand. The womenfolk can't. Their domain has always been the home. This land, the Holding. And they have ruled it for generations. But the sea, the sea, she is their rival. The thing that keeps drawing us back, keeps pulling us from their arms. I suppose it is only natural that they fear and resent her, our mistress.\"\n\nSven shook his head and chuckled; how often had he made that same comparison. Ran was his first love, his mistress. He sighed heavily, but now she had abandoned him, cast him off for other lovers. And like any jilted lover, he felt the pain.\n\n\"But from the moment Rachel carried you onto the boat, you quieted. You slept. Helveti, you smiled and laughed. Stig said you were a true son of the sea, born with sea legs.\"\n\nSven frowned at the word. For a man whose legs no longer worked, whether on sea or land, it was a bitter reminder.\n\n\"Oh, that woman fought us. Do you remember the battles? When you asked to go to sea with us? She screamed and yelled and broke so many damned dishes we went through two or three sets in a few months. We were not putting her baby in danger. She would not allow it.\"\n\n\"You kept begging and pleading. You knew where you belonged.\"\n\nSven choked on the knot that rose in his throat. For a moment, the pressure in his chest frightened him. Was it another heart attack? After a moment, he realized it was only the pain of his loss.\n\n\"We decided that the only way to help you was another baby.\" Olaf chuckled, \"Maybe Mikael owes his very existence to you?\"\n\nThey sat in that silence for a bit more. Time lost all meaning. Whether it was moments or hours, neither knew. Men and their lover, the sounds of the sea and wind soothing and exciting them. ",
        "\"I know my words may hurt, son. But someone has to say them. I figure since your father isn't here to do it, that leaves me.\"\n\n\"We have fuck all control over the seas or our lives. The gods, Fate, or merely chance, who the fuck knows.\"\n\n\"I learned that the hard way. It should have been me. That night, I had duty. It was our first night out to sea. I had spent the previous one in your mother's bed. Sleep had not been on the agenda.\"\n\nSven scrunched his face. While he realized that his parents had once been young lovers, as active in the BDSM lifestyle as he and his brothers were, no one liked to think of their mother as a sub, a lover, or even a woman.\n\nThe old man laughed, \"Just remember, one day, those babies will feel the same about you.\"\n\nThey both chuckled at the thought. But still, Sven said nothing. When they quieted, Olaf stared off at the sea, his eyes glazed over with moisture, until a single tear slipped over the corner of his right eye, and traversed a trail down his weather cheek. \n\n\"Lars insisted. Insisted that we switch watches. That I needed sleep.\"\n\nThe finality of Olaf's sigh tore at something profound inside of Sven, \"I'm sorry, son. You don't know the number of times, the long nights at sea, alone. How often I have wondered, thought about how things might have been different.\"\n\n\"He was just a boy. A fucking man-child. Barely older than she was. And so fucking full of life. So full of joy and laughter.\"\n\nThat tear was joined unashamedly with others. His uncle did not even attempt to wipe them away as he continued. \"You remember how Bjorn was at that age? It's funny. You look like your father, and Bjorn is the spitting image of Stig. But in temperament? He is more like Lars, and you more like Stig.\"\n\nOlaf sighed again and finally swiped the back of his hand across his face, erasing the physical evidence of those tears. Though Sven knew nothing would ever erase this moment from his memory.\n\n\"But we don't always get choices, son. Or maybe it is more that we never know until it is too late the outcomes of the choices we do make.\"\n\nOnce more, the pressure grew inside of Sven's chest, threatening to rob him of breath. How many bad decisions had brought him to this moment? How many lost opportunities had he squandered with her? Did he even deserve what little joy he had now? Her love, her touch, those babies, his brothers, his mother, this old man? \n\n\"Just remember, we can't change the past. We can't undo those choices. But we have other choices, other decisions, other chances. Maybe life isn't so much about the decisions we made or the shit that Loki throws at us, but what we do with it.\"\n\n\"Of all people, I know how unfair life has been with you. I played a huge part in that, a part that I may never forgive myself for. But life went on. I made new choices, some of them good, and some shit.\"\n\n\"You have choices, too. You may not like them. I know that there have been times I did not like any of the options I had either. But even then, especially then, you have choices. You alone can make the decision where you go from here. What you do next.\"\n\nHis uncle's roughened hand stretched out to the horizon. \"She's not an option, Sven. Your time with her is gone. It makes me glad that we fought on your side against Rachel. That we gave you that decade.\"\n\n\"You will always have that. I know. Sometimes in the middle of the night, the wind will blow, and you'll catch that smell, feel Ran's soft caress, and remember those times. Sometimes that will choke you with regret, and others it will fill you with joy. But you will always have those memories.\"\n\n\"The question is now, what comes next? What do you do? Where is your place? You can get lost in all those what-ifs, the pain of roads that are closed to you. Anders did. He lost himself in that, long before he lost himself in the bottom of that bottle.\"\n\nOlaf inhaled deeply as if to draw strength from the sea air, \"Or you can fight. You can make a new place for yourself. A new destiny.\"\n\n\"I don't need to tell you all the things you have to live and fight for. That girl, those babies, your brothers, your mother, this place, even this broken old man, we all love you. We're all fighting for you, son. But you are the only one that can make that choice.\"\n\n\"As much as I wish I could save you the pain, I can't. Not any more than I saved your father. Or Anders. Or your mother. Helveti, I could not even save your brother from his dumb-ass choice in that woman,\" they both chuckled at the memory. The pain of that choice blurred now by the joy and life that she had brought.\n\n\"Like I said, I know this might have hurt you, maybe it was even more about this old man clearing his conscious, trying to right old wrongs. I don't know. I just wanted you know how much we all care.\"\n\nSven looked out to sea. The horizon stretched to infinity. The sounds of her waves crashing on the rocky shore. The cool, crisp, salty breeze caressed his skin. Her smell filled his soul. But his uncle was right. This was as close to her as he would ever get again. \n\nAnd while he might often come to this shore to reconnect or think, he had other paths to walk now. Even if he must wheel them, or hobble them on a stick. He would put one foot in front of the other, just as he had in those long hours of therapy. He would fall. Maybe too often. \n\nBut he would not walk it alone. He had her. He had them. And wherever that took him...them, it would be enough. \n\nSven placed his hand out to help his uncle up. \"Thanks, old man.\" Sometimes words failed. Sometimes they were not enough. Sometimes they were insufficient to say what was in your soul. And sometimes, that did not matter because sometimes you did not need words to say what was in your heart. \n\n***\n\nGeorgia watched the little girl run through the meadow. The flowers were thinner now. Dying and disappearing. No longer one or two here or there, but whole patches of them from one day to the next. Fall was almost over. Winter was closing in fast. She knew from listening to the men talk that the seas were getting rougher. \n\nShe should have gone home weeks ago. She had promised them only a few weeks to help get Monika settled; until they could bring the other brother home from the hospital. Then she should have gone back to university. But she had waited. Delayed. Avoided it all. \n\nUntil finally, two weeks into the autumn term she had been forced to email the university, ask them to put her place on hold until next year. It was that or lose it altogether. That should have been wakeup call enough for her. Made her realize that she had to make some decisions, do something. But still she delayed.\n\nThey were happy enough to have her for as long as she wanted to stay. To avoid reality. To escape the past. To hide away from the future. Kirsty was more than busy enough with her husband and the pregnancy. \n\nGeorgia's hand rested on her flat abdomen. Pregnancy? It had been one of her greatest fears, a nightmare. The prospect that...\n\nStop! Her mind screamed. She was not ready to face any of that. Not yet. But she knew that until she did, she would never be prepared to move on from this. \n\nNot that that was a bad thing for her. She had found peace and solace in this place. A safe haven and refuge from the storm that was her young life. And she knew that they would never cast her off, send her back there.\n\nNo, if it were just her or if Mikael or Roz had been able to convince her mother to join her here. They had both tried. Each checked in on the woman every couple of weeks. But nothing had changed. \n\nAs she had suspected, the first time that Roz had visited, her mother would not even open the door to the woman. But even the tiny bit of Mama's face and hands that Roz could see had shown bruising, bad ones. Her mother had finally overcome her fears enough to let both Roz and Michael into the flat, they both attested that each time there was fresh bruising as well as unhealed old ones. \n\nStill, her mother refused to come with him. Again she said that marriage was for life. Divorce a mortal sin. But she had questioned them about her, reluctantly admitted that she was glad Georgia was away. Had someplace safe to go. \n\nThat only intensified her guilt. Her resolve. She had sent almost all of her earnings back home with Mikael. She had written that her mother was to save the money. Hide it, keep it somewhere safe. If she would not come here, then find someplace. Someplace safe to go. But she knew, knew in her heart that her mother had handed it over to him. That he had drunk and gambled it away. Just as he had gambled away her innocence that first time...\n\nStill, despite all that, she knew. Knew that if she was going to save her mother, she had to find the courage to go back there. To face her father...and his friends. \n\nBut after weeks and months of safety, the what-ifs overwhelmed her with fear. She knew that her father would be angrier than ever. And she feared that this time nothing would stay his violence or his friend's deviance. \n\nRape. The word burst through that closed door in her mind. Shattered it. She began to tremble. The ground tilted, and she felt her legs give way underneath her. She curled into a tight ball, her arms hugging her knees to her chin as she rocked back and forth, humming the lullaby that her mother had so often sung to her after...\n\nNo, this time, there would be no reason for her father to stop them. She was already sullied in his eyes. Not even her precious virginity would protect her from the ultimate humiliation that he had threatened time and time again. No, this time, he would not pull them back, not demand they stop with merely violating her...\n\nTears were streaming down her face so quickly that she could not see. Some tiny rational part of her brain worried for her charge. How could she betray these people's kindness by breaking down like this? If anything happened to Monika, she could never forgive herself. She tried to stuff it all back inside. To push that big, hairy, smelly monster back into the closet and shut the door forever. \n\nShe tried to force her muscles to get up from that cold, damp ground. To find the child and keep her safe as no one had kept her safe. Certainly not her father. Not even her mother. But her body refused to obey. So, she laid there silently begging, pleading, praying that the earth would open up and swallow her as it did in those ancient myths. \n\n***\n\nThat was how they found her. Monika had sensed her friend's frailness. She had easily remembered the way home. Though it was a rather long walk back, she was not afraid. This was her Homdling. She was safe here. She knew the way. When she finally got back there, she even managed to stand on tiptoes and turn the knob that would open the door. \n\nAnd with all the resolve inside of her, she had found the courage to look up at her mother and grandmother as they sat at the kitchen table. She had willed herself not to look away \u2014 not this time. \n\nAnd she forced those words from her brain out of her mouth, \"Georgia. Come. Quick.\" \n\nEach one was a chore. Like the tasks of Hercules, her grandmother read to her at bedtime. Like Sysiphus pushing the boulder up a hill, knowing that it would only roll back down again. And she knew it would. Knew that tomorrow, she would not be able to meet their gaze or put two words together. \n\nBut now. At this minute. She had no choice. Her friend needed her. \n\nKirsty beamed as she made to swope her into her arms, but she was too big a girl for that now. Besides, they did not have time for one of her mother's hugs. \n\n\"Georgia,\" she demanded, and she took Kirsty's hand in one and her grandmother's in the other, \"Come. Now.\" \n\nShe dragged them from the Homdling around the side of the house and back the way they had come. The only thought in her young mind was helping her friend. \n\n***\n\n\"Promise me that you'll bring her mother back this time?\" Kirsty pleaded with the image of Mikael on the tablet that sat beside her on the lavatory as she put the final touches on her light make-up.\n\nMovement on the screen caught her eye, and she turned her head as Mikael began to speak, \"I'm sorry, lilla gumman, that is not something in my power to promise.\"\n\n\"Yes, but if you saw her. If you heard what that man did to her, allowed his friends to do, she can't go back there. But she won't agree to stay here unless she knows her mother is safe. We have to do something. I mean, you could always kidnap her the way you did me?\" Kirsty was not sure if she was kidding or not. \n\nShe was badly shaken from this afternoon's experience. She and Petrine had spent hours with the girl, holding her while she cried. Georgia never actually told them the full story, but they caught enough bits of it while she drifted into and out of sleep or delirium to know that it was worse even than Kirsty had imagined the day that she had arrived, severely beaten, at their flat to say good-bye. \n\nThe very idea that a father could allow his friends to molest his daughter, his only child, to pay off gambling debts? It boggled her mind. Kirsty and Petrine were no more enamored of her mother. It was one thing for a woman to stay in an abusive marriage, but as far as they could tell the woman had done nothing to protect her child either? Her hand covered her overly distended abdomen. She could not even begin to fathom it.\n\n\"Oh, elskling, such a tender heart. We never stood a chance with you. Bjorn was right; you are everything we needed. The one,\" he smiled. \n\nKirsty knew that she was not going to like the next words that came from his mouth by the heavy sigh and deep frown that furrowed his forehead. \"But we cannot just kidnap the woman. Bridestealing is one thing. It is a millennium-old tradition, not just with our family, but across much of Europe. Maybe an old and antiquated one, but look how well it turned out for all of us.\"\n\n\"I hope so,\" Kirsty fidgeted with the ribbon on the front of her sheer black lace nightie. \n\n\"Feeling a bit insecure? About tonight? Don't worry. I promise you; it will all be fine. But we will come back to that.\"\n\nShe wished desperately that he was here now to hold her and reassure her that everything indeed would be alright. With Georgia. But equally with them, especially \n\nwith Sven. \n\n\"I am not sure that I would even want the woman at the Homdling,\" he smiled at the new name his daughter had christened their home. All of them had adopted it. It seemed appropriate somehow that this new era, their new family, be blessed with a new moniker. \n\nKirsty nodded her head, \"Yeah, I can't understand. I mean, as submissive as I am, I would never allow any of you to harm the girls. I'd kill you myself.\" She giggled, \"Or at least take Humdig to your back until it dripped blood.\"\n\nMikael threw back his head. His warm laughter soothed her like oil upon water. \"I'm not sure we should have allowed you to be Big Brother's physical therapist. It seems to have brought out a Domme in you.\"\n\nKirsty blushed at the verbalization of her fears. But she did not have time to ponder them further before Mikael continued.\n\n\"Yes, none of us can understand. And Odin knows, I have spent more time with the woman than any of you.\" He shook his head; his longish light brown waves danced about his dark countenance like some ancient war rite. \n\n\"The woman has some truly warped sense of the roles of women and marriage. She refuses to see that if her husband breaks the vows by abusing her and their child, then she has the right, no, the obligation to protect them. She is so worried about some eternal damnation that she has made a living hell out of her life.\"\n\n\"As you say, that is bad enough, but if you had seen them that day. If you had heard the way the woman tried to guilt Georgia into staying in that abusive environment,\" he closed his eyes. His fingers pinched the bridge of his nose.\n\nWhen he looked back up, Kirsty could see that he had forced a smile for her benefit, \"I will try again to get the woman to leave. To go somewhere safe. I promise. But I do not think it is best for anyone if we bring her there.\"\n\n\"If, more likely, when she gives in and contacts the bastard, it will only bring trouble and danger to all of us. And we will not have the girls, you, our mother, or our way of life endangered. Not even for Georgia.\" He sighed heavily again, \"Besides I am not sure that it is good even for her. Perhaps a clean break...\"\n\nHis voice trailed off, and silence filled the space between. It was as wide and deep as the hundreds of miles of open seas around them. \n\n\"You have my word that I will do my best, elskling.\" He smiled; this one was genuine. \"Now, show me. Step back, and let me see you fully.\"\n\nKirsty blushed, this outfit was more revealing than actually being naked. Bjorn had selected, ordered it online, to replace the corsets that her pregnancy had relegated to the back of a drawer. \n\nIt was sheer black chiffon lace that fell just to the top of her thighs. The bottom, deep V-neckline, and armholes were trimmed in bright red fake feathers that tickled and distracted her. It was gathered and full just beneath her tits that threatened to spill from its top. It both hid and accentuated her fecundity. If that was not bad enough, there were slits in the top, also covered in those red feathers, which revealed her engorged nipples. \n\nShe blushed as she obeyed her husband, stepping back and slowly turning in front of the tablet. \n\n\"Fuck, baby brother has as good taste in lingerie as he does in women. And when you put the two together, damn, I'll need to masturbate at least twice tonight. You are absolute perfection, sweetheart. And I don't have to tell you what your pregnant belly in that outfit does to me.\"\n\n\"Don't tell me, show me,\" Kirsty was not certain where the idea or the touch of command in her voice came from. But once the words had left her mouth, she felt them to the soles of her feet and the depths of her soul. \n\nThis was what she needed. The outcome of this night, her time with Sven, was uncertain. She was still upset and worried about Georgia. She needed this man. This husband specifically. He was her rock. He had been for so long. And if she could not be held in his arms, reassured with those tender kisses to the top of her head, then this would have to do.\n\nIt was something they had never done \u2014 any of them. Oh, sure, she had often performed on camera for him, or Bjorn. But never had either of them. Though she knew that they likely relieved their tensions later, she had never presumed such boldness. Maybe Mikael was right; had something new been released in her? \n\n\"Please,\" Mikael interrupted her musings.\n\nShe shook her head, \"Please? Please, what?\"\n\nHe chuckled, \"My good little girl needs to ask nicely if she wants to see my hard cock.\"\n\nAs always, his naughty words bypassed her brain and shot straight to her clitoris. It was not just men who could think with their little heads, it seemed. \"Please. Please, Sir, show me your nice hard cock,\" she purred as she lifted her always ample, now almost indecently large tits. She leaned over so that he had a better view of them.\n\n\"Oh, yes, that's right, lilla gumman. Squeeze those nipples. I can see how hard they are already.\" Her screen went grey for a moment. But just when she feared that she had lost the connection, his throbbing cock filled the screen. \n\nKirsty had always appreciated their cocks. Each different sizes, tastes, and textures. But up close like this, magnified in the screen, Mikael's was a thing of pure beauty, a masterpiece, a living work of art as it pulsed and jerked before her eyes.\n\nShe could see the bead of pre-cum that glistened at the slit. She wanted so desperately to lean forward and lick it from the head. To swallow the head as she ran her hands up and down the hard length of him.",
        "\"Oh, yes, I wish you were here to suck it, too,\" Mikael growled. She chuckled that he seemed to have read her mind. \"But since you can't, I have something else in mind \n\nfor you. I want to see if you are producing any milk yet.\"\n\nShe shook her head, \"It's much too soon for that.\"\n\n\"Oh, I don't know. As much sucking as those ladies get, I'm sure that while your actual milk won't come in until the babies are born, I'm betting that you are producing colostrum.\"\n\nKirsty, of course, was familiar with the term. Not only had she read a dozen books or more on pregnancy, birth, and breastfeeding since discovering she was pregnant, she was blessed with an expert at her disposal. While Petrine might not be as famous as Ina May Gaskin, whose books on natural and home birth were among her favorites, she was perhaps just as knowledgeable. \n\nOf course, Mikael had made no secret of his fetish for pregnancy and lactation. But she was a bit surprised that even he would know the technical term for the thick, clear-yellowish liquid that was beginning to leak occasionally from her nipples. \n\nShe smiled secretively as she too adjusted the tablet to zoom in on her breasts and her baby bulge. Her hands began to knead her breasts gently and she was rewarded with a low groan as his cock twitched on the screen. \"That's right; think about how much bigger my tits have gotten.\"\n\n\"How fucking huge they'll be when your milk comes in,\" she could hear the edge to Mikael's voice. \n\nShe felt her power as a woman, as a priestess, a shieldmaiden, and most definitely as the personification of Frejya, the goddess of love, but also sex, lust, beauty, sorcery, fertility, gold, war, and death. She was all that, and her power was heady. Her power over this man, her men, and over their cocks. \n\nBut power was to be used for the good of all and not abused. \"And how you'll drink from them once the babies are fed. Drink to keep them from becoming engorged, drink so they will make even more milk. Enough for our girls...\"\n\n\"And for me...\" His voice was deep, low, hoarse as his hand gripped his cock tighter, moved faster along its length. She could hear the hitch in his breathing, knew that he was fast approaching his orgasm. And she knew just how to push him over...\n\nHer fingers worked closer to her sensitive nipples, so sensitive these days that the slightest touch could sometimes elicit an orgasm. She used the control that Bjorn had taught her to forestall that eventuality. She would await his command, should Mikael see fit to give it. But it was not easy as her fingers began to work and squeeze the distended nipples. \n\nIt took only a moment for the bead of liquid to collect at the tip. In many ways, it even resembled the pre-cum that was now almost dripping down his cock. Except for the golden tinge, gold like the goddess herself. \n\n\"Yes,\" she heard Mikael moan. It was time.\n\n\"I bet that when my milk comes in properly, I'll be able to squirt even further than your cock can for me. Now.\" \n\nShe ensured that it would do just that by collecting the solitary drop of gold on her finger. She leaned further so that her face filled the screen as she brought it to her lips. Her tongue licked at it tentatively. Her eyes widened with shock as the first taste hit her.\n\n\"Sweet,\" they moaned together as Mikael's cock began to jerk on the screen. His divinely masculine offering of love and life bursting forth in torrents, some even hit his screen and stuck there, slowly dripping and running down. \n\n\"Come for me, my sweet Freyja,\" and her world exploded. She joined him in the eternal dance of completion, where the masculine and feminine melded into oneness. Each complete in itself, yet magnified in the other. \n\nThe bliss, their orgasm, the worship to forces as old and universal as life itself continued for several long moments. The only sound was their heavy breathing.\n\nWhen she finally came to herself, she adjusted the tablet. \"Thank you, Sir. I needed that.\"\n\nMikael too adjusted his tablet so that once more, it was his smiling face which she gazed upon. Although he did not attempt to wipe away his cum that continued to run down the screen, she gathered each precious drop into her soul. \n\n\"Not as much as I did, lilla gumman. Thank you. And quit worrying about how things will go with Sven. He loves you. You love him. And you are perfection itself.\"\n\nShe shook her head and drew life-giving air deep into her lungs then rereleased it to the universe in a long sigh, \"Yes, but what if...\" She could not bring herself even to verbalize her fears.\n\n\"Then you will deal with it just as you dealt with that angry, wounded man and father. Just as you stood toe to toe with your mother and my ex-wife. Just as you have brought new hope to my mother and daughter. And just as you have given us all new purpose and life.\"\n\n\"Never forget who and what you are. You are the One. Our One. And I know that you will find the words and the touch to heal my brother too. To bring him the love and peace, you have the rest of us.\"\n\n\"So, get that sexy ass downstairs and work your magic woman. Do your stuff, weave your spells around him, too, our sorceress.\" \n\nIt was the blessing and benediction that she needed, \"I love you.\" She bent and kissed the screen. \n\n\"Jeg elsker deg.\"\n\nShe smiled as she turned off the video chat. Those words rang in her mind. How like the others, \"\u00c6 \u00e6lske d\u00e6.\" How had she not known? Failed to hear the similarity? \n\nShe drew in a deep breath and focused her mind as she reached for the handle of the bathroom door. \"\u00c6 \u00e6lske d\u00e6.\" Yes, Sven loved her too. Yes, she was the One. \n\nAnd yes, come what may or not cum at all, they would handle that also. Because they were family. And love bound them tighter than his ropes ever could.\n\n***\n\nSven stared into the flames. He had been watching their erotic dance for an eternity it seemed. Mostly lost in his thoughts. Trying to come to terms with what he knew now was the truth - he would never go back to sea. \n\nThe thing was when he weighed things up; there were worse things that could have happened. They could have lost her, Odin knew he had done his best to push her away. They had been incredibly lucky that none of them had been killed by Njord. Yes, some of that was advanced in technology, which made fishing the North Seas safer. But it still happened. Too damned often. \n\nHe had his brothers, his mother, an uncle, his niece, and soon they would even have babies. Yes, they were not sons. But not even that bothered him. All in all, he was a damned blessed man. \n\nAnd if his legs never worked again? As they had all tried to tell him, he would find other things to do, different ways of making a difference. Mikael and Bjorn called him regularly. At first, he thought it was only their way of trying to keep him involved, trying to make him feel useful. But the questions they asked, the advice they sought was genuine. He might not be able to go back to sea with them, but he could still have a role to play in the business that was more a lifestyle. \n\nAnd what if other things did not work quite as well anymore? Oh, he knew his cock was not completely dead. More than once it had risen to the occasion, especially when he caught glimpses of her heavier, larger breasts or the growing evidence of her fertility. The thing was he did not have the same control over his body that he once had, whether that be his legs or his cock. \n\nOf course, he knew that the medications they gave him for his heart condition, especially high blood pressure, had those side effects. To make matters worse, some of them were contraindicated with those little blue wonder pills that now came in many colors. \n\nHe had wanted to talk to the doctor about it, but Kirsty and his mother were always in the room. He was having enough trouble coming to terms with the reality of his mother's kink. He was not broadcasting his sexual dysfunction in front of her. \n\nBut he had done a bit of research on the internet. It seemed that if he could stabilize his heart condition over time, and he was well on that road, then at the very least, those little blue miracles would be an option. But they were not tonight. And that was the issue.\n\nOr perhaps not? He heard the old clock on the wall, a gift from some ancient ancestor to his bride, chime eleven. This day had spiraled into chaos since Monika had burst through the door shouting more words than he had ever heard the girl say. Both his mother and his wife had spent hours trying to calm their young ward while he and his uncle had tried to reassure the traumatized little girl. \n\nBut things had been quieter since dinner time. His mother had drowned the girl in enough of her special calming blend of herbs to lull her into a deep sleep. Nonetheless, his mother had insisted on sleeping in his old room, close enough to hear if Georgia awoke during the night.\n\nPerhaps his wife had forgotten in the malay? Or perhaps she figured that with his mother staying over, his new less than private accommodations on the ground floor was not sufficient for such activities? Maybe she was so tired that she simply fell asleep early? \n\nOr maybe...maybe she had changed her mind altogether? Perhaps she had lost patience with his mind fucks? Maybe she was still angry at him? Or perhaps she just did not want to deal with an old man with a bad heart when she had two younger, healthier studs? Sven chuckled, so, now he was reduced to being jealous of his brothers?\n\nHe should get up from his favorite chair beside the fireplace. Make his way to the bed behind the curtain that they had put up to afford him some semblance of modesty, not that he had much of that left after weeks recovering in the hospital. If those gowns were not bad enough, the poking and prodding robbed you of all dignity. \n\nHe inhaled deeply, worked up the courage to make the six-foot journey to his bed. Six feet? That would have once seemed so inconsequential a distance as not even to be considered. But now? Now he had to plan such things carefully. Work up the courage to tackle the task. And hope that he did not end up on his face on the floor. \n\nHe braced his hands on the arms of the chair. It was sturdy enough to support his weight. Then on to the couch, another chair, and he could practically fall into bed. It was as good a plan as any. He had even made it halfway to standing.\n\n\"Where do you think you're going? We have a date, remember?\"\n\nSven fell back into the chair with a soft thud. The woman before him was every man's fantasy of gravidity. The baby doll nightie that she wore accentuated it all. Her full, heavy breasts. Her rounded stomach that seemed to dance with life itself. Even her slightly widened hips that made his hands itch to spank her ass. The black and red against the peaches and cream of her skin that seemed to glow with health was as captivating. \n\nHe felt the stir in the sweat pants that had become his uniform of late because of the ease of getting into them and in this case, out of them. So far, so good. The equipment was at least in the starter's block. \n\nShe walked towards him and the fire. The lace floated around her protruding baby bump, drawing his eyes. She came to rest just in front of him. Using his chair for support, as he had earlier, she lowered herself to the floor before him. As kneeling went, it was less than graceful. \n\nThen again, that had never been his measure of this woman. It was the honest depths of her submission that pleased him. And never more than now. After all they had been through. After all he had done. \n\nHe did not deserve her trust, her submission. But she gave it nonetheless. Her gift humbled him. \n\nKirsty bowed her head, and her hair danced about her shoulders, chest, and arms like the flames in the fireplace. Her knees were spread wide, revealing her bare cunt. Her hands rested palms up on her knees. She was perfect in her imperfection.\n\nSven reached out and placed his fingers gently beneath her chin. He lifted it until their eyes met in the golden glow of the fire. His vision was blurred, and his throat was tight. His heart bounded reassuringly in his chest. \n\nThis was a moment he had never dared dream would come again. He wanted to savor each second of it. To memorize her every movement. As a man who had faced death, he was intimately aware of his own mortality. He knew that he was blessed to have escaped the Valkyries this time. But the day would come when he did not. And this was the moment he wanted to hold on to when that time came. \n\n\"\u00c6 \u00e6lske d\u00e6, Kirsten.\" \n\nThe words he had once feared so much. The ones that he always had thought made him weak. Now, they gave him strength. Resolve. Yes, he loved this woman. The babies that she carried inside her. But he loved all of them. His mother, uncle, niece, and brothers as well. They were family, but she was the crux of that. The rope that bound them all together. The cord that held his broken and faulty heart together. The one who could heal it too. \n\n\"\u00c6 \u00e6lske d\u00e6, Sven,\" she whispered as she leaned forward. Her lips touched his tenderly as her fingers threaded through his hair that was longer than it ever had been. She used it to hold him in place for her slow exploration of his mouth. As if she too wanted to memorize the touch and taste of him.\n\nHis hands strayed to her breasts that almost rested on his knees. She moaned into his mouth as he lightly pinched the hard nubs that protruded from the feathery and lacey folds. Those moans turned to whimpers and pleas when he switched to rubbing his rough fingers just across the tips. \n\nHe could not resist temptation. He drew back from the kiss, just enough to whisper against her wet and swollen lips, \"My sweet Freyja.\"\n\nHer body reacted instantly. Her eyes widened and held his gaze as her back arched. She bit her lower lip until it was white, he feared her teeth might even break the skin, to prevent the scream of ecstasy that he knew she so desperately needed to release. \n\nBut he was not finished with her, \"That's right, Kirsten. Come, come hard, come so hard that you squirt all over the floor, my sweet Freyja.\"\n\nShe whimpered, tears gathered in her eyes as her back bowed even more. Her abdomen jutted out towards him, hard and glorious. His hands moved across the fecund mound. Their girls were quiet, but he was not worried. He felt them safe within, calling to his soul and heart. His daughters. Their children. The future. \n\nHe left one hand on them like a priest blessing his flock. The other hand returned to her ponderous breasts. His fingers wrapped about her right nipple and pinched. That was all it took as her body surrendered to his command. Clear fluid gushed from her bare cunt, splashing against his leg and feet before pooling beneath her knees. \n\nHe smiled, \"That's my good girl. So beautiful. So ripe. So fuckable. Suck my cock, Kirsten.\"\n\nShe smiled as if it was the command that she had been waiting her whole life for. Her hand moved slowly, tantalizingly up his leg, beginning at his knee and teasing the inside of his thigh as she drew higher and higher. \n\nHe was half-hard before she even reached the loose front of his sweat pants. Her hand cupped his crotch. His balls rested firmly in the palm of her hands as her fingers spread out to cover his shaft. Her nail teased tenderly at the tip. Sven could feel moisture of his pre-cum gathering there. \n\nShe leaned forward; he could feel her hot breath caressing the head through even the thick material. Her other hand tugged at the elastic material about his waist, pulling it down until his whole cock sprang free. Her pink tongue came out, and she licked that single drop of moisture from the slit. \n\nShe leaned back and smiled at him in challenge, \"My pleasure, Sir.\" \n\nThen her soft, warm hands and hot, wet mouth began a dance as old as time. Working in tandem to arouse him. Sven watched her hair fall about her face in a torrent of red fire. He smiled as he closed his eyes and leaned back. Just to enjoy the feel of her mouth and hands working his cock. \n\nHe felt it all. The warmth and gentle pressure of her mouth and hands on his cock. Desire. Yes, he felt that too. It raged through him like the waves of a storm crashing over the deck of the ship. But still, his cock remained flaccid. Well, only partially erect. The same half-hard state that it had been in moment before. Before she had ever touched his cock. \n\nHe felt those long moments ticking away in his head. He willed his cock to respond. Yet, still, it remained unmoved, only at half-mast. Certainly not enough for penetration. Not enough to cum. Not enough to satisfy his needs or his wife either. \n\nSven closed his eyes to fight back the tears. Not this too. His worst nightmare was coming true. It was bad enough not to be able to return to his mistress, the sea. But not to be able to function as a man, a husband? It seemed more than he could bear. \n\nHe pushed her away. He heard and felt the pop as she released his cock from her mouth. \"Leave me.\"\n\n***\n\nKirsty shook her head, \"No.\" Her voice was firm, confident, and no-non-sensical. While she had hoped not to face this hurdle too, she was prepared for it. She was not giving up, giving in, or running away from their problems. Ever again. She was meeting them head-on beginning with this. \"No, Sven, I'm not leaving you.\"\n\nHer fingers under his chin turned his head, lifted it, and forced his eyes to meet her steady gaze. \"We will deal with everything together now.\"\n\nHe shook his head and opened his mouth to speak, but she was not giving him a chance. \"So, what? Erectile dysfunction, ED, is common in men over forty. It is almost a given on the combination of drugs that you are taking for your heart, blood pressure, and pain. I knew that when I choose you.\"\n\n\"Why? Why then? Did you want to humiliate me? Some sick revenge?\" he accused as he broke free of her hold on his chin.\n\nThe vitriol in his voice reminded Kirsty of that other time. His words seemed designed to undermine all they had rebuilt over the past few weeks, to destroy this new happiness. For a moment, she was shaken. All her carefully practiced words fled her brain. And she was just a wife hurt by her husband's accusations. \n\nBut then, from somewhere deep within, or perhaps from Valhalla itself, Freyja spoke to her and gave her the words, \"No. I choose you, Sven, because I fucking love you. \u00c6 \u00e6lske d\u00e6. Not your cock. Not even your Domination. I love you. The man. The man that is hurting. Hell, the man that has hurt most of his life. The man that pushes everyone away.\"\n\n\"Well, no more. This is a family. And we face shit together. Head on.\"\n\n\"So, what? So, this is a 'family' problem? You're going to tell my brothers, my mother, my uncle, that I can't fuck my wife anymore?\" His gaze met hers and held.\n\n\"If I fucking have to, to get it through your thick skull that we're not letting you run anymore.\"\n\nHe laughed, but there was no mirth in it, \"I can't. I can't fucking run anywhere, woman. I can't fish the seas. And it looks like I can't fuck either. So, what, what the fuck is left for me?\"\n\nShe grabbed his hands and placed them on her rounded abdomen, \"These girls. Your brothers. Your mother and uncle. Monika. Me. We're all here for you. We always have been. But you were too proud and too stupid to accept it.\"\n\n\"The great lone wolf. Well, let me tell you, lone wolves aren't some romantic figures. Do you know what happens to them? They die. They fucking die. Because without a pack to protect one another, to hunt together, they can't survive.\"\n\n\"We didn't come this fucking far, go through all this shit, so that you can quit now. Have some fucking pity party for the rest of your life.\"\n\n\"We need you. I need you. And not just what's between your broken legs either. I need your strength. I need those fucking high protocols. I need your rope. I need you.\"",
        "He shook his head without even looking at her, \"You don't need me for those things. You have my brothers. Mikael and Bjorn can...\"\n\n\"Sure, Mikael can give me the pain my body craves. And Bjorn's love has always given me confidence. But you, you forget, it was you that I came to; you, Sven. It was you that drew me to Tilbury that day. You. You that touched my elbow and pulled me through that turnstile. That offered me a new life.\"\n\nHe turned his head away, \"No. Even then, it was us. Bjorn and Mama, who choose you. Even as reluctant as he was, Mikael kept his part of those conversations going too. Maybe he knew how much Monika needed you.\"\n\n\"Yeah, and you wanted the Russian girl. Because she would have been safe. Another safe little sub that would not have been a threat to the walls around your heart. Well, tough shit. She was an abusive mother, which means she wasn't much of a woman either.\"\n\n\"So, you're stuck with me. Get used to it. Because I am not going anywhere. Not tonight. Not tomorrow. Not for the rest of our lives. And since you finally realize that you aren't going back to sea, that means you and I are going to be seeing a hell of a lot of each other.\" \n\n\"I'm not just your wife. I'm your physical therapist. The mother of your children. And the Homdling might be big, but it isn't big enough to hide from me. Oh, and if you think you're going to finish that other house? How? I don't think you're in much shape to be climbing roofs anymore, do you?\"\n\nHe turned back to her; his eyes were icy blue, cold, and distant. \"Since when did you forget, you're the sub. And that potty mouth? You deserve to be punished for the way you were talking.\"\n\nKirsty chuckled, \"If one of my Doms were around, maybe he would. Are you going to tell Mikael or Bjorn that I'm not a nice pliable little doormat? They know. And what's more, they respect that I've become a strong shieldmaiden. It makes my choice to submit to them even sweeter.\"\n\n\"You always did prefer women that were easy. The ones that never questioned you. Never demanded more from you than you were willing to give. And maybe that is okay when you see them once every few weeks when you're in port. Or when all you really do is top.\"\n\n\"But this is about relationship. This is a marriage. And it doesn't work like that. Domination is not about controlling another person in order to have things your way; keep yourself safe. It's about respect. Mutual respect.\" \n\n\"It's about trust, too. And you don't earn that by running away or hiding behind the Big Bad Dom mask. You earn it by being there. By being honest and real. By being human. And yes, sometimes you do that by crying, by being vulnerable. And none of that requires a working cock.\"\n\nSven was silent. He just sat in that chair. Staring into the fire. Kirsty was not sure what she should do. But she knew one thing, if she got up from her knees now; if she did what he asked, if she left him alone and went back to her room, then Sven won. No, that was not right. They lost. All of them. And she was not ready for that. \n\nSometimes battles were hard. Sometimes you even lost them. But when you were a shieldmaiden, you didn't run. You stood your ground. You lifted your shield. You locked them into place with your comrades. And you fought to the death. \n\nThat was what this was. Perhaps not physical death, but to lose this battle was to lose her family, her dreams, all that she believed in and wanted. And that was not an option. \n\nShe inhaled, sat back on her heels, her hands rested on her knees, palms up. She felt the cold wetness of the hard wood beneath her knees. She knelt in her cum, wet and growing cold beneath her. Perhaps other women, other subs, might have found it humiliating. \n\nBut not her. Kirsty knew that was her power. Her life force. The blessing of the goddess herself. And she drew strength from it, allowed it to seep deep into her heart, mind, and soul. She was woman. She was a priestess of the goddess. \n\nShe held the power to give life itself within her. Not merely with these babies either. She had unlocked Monika's world. She had given Petrine solace. She had brought Mikael back to life. She had fulfilled Bjorn. And she would reach this man. She had to. There was simply no other choice. \n\nShe dropped her head and prayed to the goddess that her Dom showed up. That he was inside that broken man somewhere. That it truly was not late for them. All of them.\n\n***\n\nSven stared into the flames. He left their cold heat to the core of his soul. The worst had come. The fire and cold reminded him that Niflheim, the Norse hell of ice and mist, was said to lie near the flames of Muspelheim. Opposites. Yet somehow compliments?\n\nWhat she said made sense. Perhaps more sense than he was ready to hear, but did he have any other choice now? As she said, he could not simply run off to the sea anymore. And where would he hide? Did he even want to keep hiding?\n\nHe remembered the cold of that other night. The long night without dark. He had lain there, drifting in and out of consciousness and pain. He had made so many promises then. If he had just one more chance. If he could see these babies, his daughters born. If...\n\nBut then the reality had come. And it was not what he had wanted. Not what he had bargained for with the gods. Njord, Ran, and \u00c6gir had turned their backs from him. His legs and now even his cock had betrayed him, refusing to do as his mind commanded. \n\nStill, some part of him held on. Held on to life as it had that night, willing himself to remain alive, for just one more chance. To see her. And those babies. Perhaps he did not deserve it. Hell, he was sure that he didn't. But he had it. Was he going to waste it now? How many more chances would he get? \n\n\"Strip,\" a single word. A command, the first he had truly given since she came home. Would she obey? Was it too soon? Did he need to 'earn' her submission? Her trust? It was almost a foreign concept to him. He was not sure he even knew where to begin. \n\nBut she had stayed. She had not run back to the safety of her room. She had even remained on her knees before him. The perfect pose of submission, or the best she could do when you are seven months pregnant with twins. That counted for something, right?\n\nHe saw the scowl on her face and chuckled, \"That's five more minutes, Kirsten. Do you want to go for fifteen? At this rate, you will be standing in the corner all night. And I had so hoped to try some of that fancy rope work you like so much.\"\n\n\"Shibari?\" She looked up with a smile. \n\nHe nodded, \"But that is only after your punishment. While most of what you said might be true, how you said was neither submissive nor polite. You will be punished for all those foul words. Good girls don't cuss.\"\n\n\"They also don't argue and delay their punishments when their Doms give them an order. I said, strip. I won't repeat it, Kirsten.\"\n\nShe started to nod her head but caught herself, \"Yes, Sir.\"\n\n\"I see you are right. My brothers are too lax with you. They don't seem able to keep you in line at all. I guess you're right. You do need me. Need some boundaries and proper rules.\"\n\nHer hands gripped the arms of his chair, and his hand on her elbow helped to steady her as she got awkwardly to her feet. But grace of movement was the last thing he was worried about at that moment. \n\nHe saw her hesitate, her fingers toying with the hem of her baby doll nightie. \"Kirsten\" was his only warning. \n\nHer fingers gripped the sheer material and tugged it over her head, leaving her standing before him completely naked. The perfect picture of a parturient woman. Her chest, neck, and face a beautiful rosy color that reminded him of how magnificent her bottom looked when it was that same shade. \n\nBut that would have to wait for another time. He debated fifteen minutes or half an hour. She needed her rest now, especially. And quite honestly, he was not sure how much patience he had for just watching her stand in the corner. He knew that what he wanted to do with the ropes would take some time too. \n\n\"Fifteen minutes in the corner, Kirsten. Then you may bring me the ropes from your bedroom.\"\n\n\"And my tablet, too, Sir. I know that Mikael would definitely want a photograph.\"\n\nHe laughed, \"Oh yes, how could I possibly forget my brother's pregnancy and lactation fetish. Very well then, Kirsten, your tablet too. Let us torture my brothers while they are at sea.\"\n\n***\n\nKirsten giggled as she walked to the corner. This was not the punishment it had once been. Being naked with them, all of them felt less intimidating than it once had. \n\nAnd honestly, she was coming to like her new parous form. She had never felt this beautiful. This powerful. But maybe that was as much the shieldmaiden and daughter of Freyja talking. \n\nNo, she had no problem standing in the corner naked for fifteen minutes. Not that she was telling Sven that. Who knew what other dastardly punishment he might be forced to think up then. Besides, she wanted to get on to the rope. She could hardly wait as she danced from tiptoe to tiptoe in the corner.\n\nShe was glad that Sven could not see the smile that spread across her mouth. Yes, the night was going better than she had hoped. Well, considering. They were going to make it \u2014 she and Sven. But also as a family. \n\nThings might be hard. The business might be struggling to keep up with the orders that were coming in. Sven might never walk without a cane or a walker. Hell, they might never have sexual intercourse again, although that was unlikely. As soon as the doctors were confident that his heart was stronger, once the new diet brought his cholesterol down, they would talk to them about some of the drugs. No, she was confident that this ED was not permanent. But even if it were, they would handle that too. \n\nAs a family. Yes, things were going to be just fine."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "dom",
        "impotence",
        "lactation",
        "love",
        "masturbation",
        "polyandry",
        "pregnancy",
        "romance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-10"
}