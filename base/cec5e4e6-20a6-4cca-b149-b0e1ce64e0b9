{
    "title": "What The Cat Dragged In Ch. 19",
    "pages": [
        "Hi Everyone!\n\nThank you all so much for your comments, your compliments, your questions and your speculations. Each one makes my day. \n\nTo answer one of those questions, the story is bloody and violent in places because that's the kind of life Victor lives. It's not my ideal, but since he's an established character with an established history, I have to kind of go with the available information....while putting my own spin on other parts of his personality. :)\n\nI hope everyone had terrific holidays!\n\npsyche b\n\n19. Assassin's Creed\n\nA sharp knock at the bathroom door made Kelly jump. She stopped her contortions for the moment. \"What the fuck're you doin' in there?\" \n\n\"Trying to reach the scratches on my back.\" She stood naked in front of the wide mirror. Most of the scratches had stopped bleeding even before she got off the sofa. Still, a little peroxide was never a bad idea.\n\nHe opened the door. Kelly covered her breasts instinctively. \"Why the hell didn't you say so.\" He put his hands on her shoulders, pushed her forward and studied her back. She braced herself with one hand on the cool countertop. \"When did I give you those?\"\n\nKelly shrugged a little. \"I don't know, but I don't usually remember every single one.\"\n\nHe picked up a gauze pad and pressed it to the deeper part of the wounds. Kelly winced. \"First time I ever heard someone say that.\"\n\n\"There's a point where the line between what hurts and what feels good kind of blurs.\" Her eyes were fixed on the matte finish faucets as she said it. \"Probably means there's something wrong with me.\"\n\n\"Depends on who you ask and if you give a shit about what they say.\" He taped the gauze to her back. \n\nShe lifted her eyes to look at his reflection. \"What you think matters to me.\"\n\nHe smirked at her. \"Means I gotta be careful not to overindulge either one of us. Go on. I'll be out in a minute to clean it up right.\"\n\nKelly brushed past him and closed the door behind herself. She picked up her discarded towel and wrapped it around herself again. He was comfortable being casually naked in front of her. Kelly wasn't sure if she would ever be that comfortable with her own body. She got a glass of orange juice and sat sideways on the sofa to wait.\n\n\"No.\" He got a bowl out of the kitchen, then walked over to her carrying a small bag of first aid supplies. \n\n\"What?\" \n\n\"Take the towel off, put it on the floor and lay on it on your stomach.\" \n\nIt seemed harder to move with his eyes on her, but she did what he said. She rested her head on her crossed arms and waited. She could hear him taking things out of the bag and lining them up next to her. He pulled off the hasty dressing and dabbed at the still-oozing wound. \n\n\"Is it deep?\" She winced when he tugged at the edges of the wounds. \n\n\"Not too bad. If you stop squirming around it might even scab over. You manage to clean it out at all?\"\n\n\"Just the shallower parts above it.\"\n\nShe could hear him open the bottle of peroxide. A moment later he pressed on her lower back and started dabbing at one of the wounds. Kelly bit back a whimper. The stinging eased and she took a deep breath. \"Where did you learn to do this?\"\n\n\"Why?\" The question sounded even more guarded than usual. He started on the second wound.\n\nShe squirmed a little this time and he increased the pressure on her lower back just a bit. \"Because you have a healing factor, it seems like you wouldn't need it for yourself.\"\n\nHis hand paused for a moment, then he started on the third wound. \"I ever tell you how old I am?\"\n\n\"No, but I guess I never really thought about it either.\" She turned her head a little bit, trying to catch a glimpse of his face. He made sure to turn away.\n\n\"First time I was ever involved in a battle was at Fort Sumter South Carolina.\" He let the words hang there. It took Kelly a moment to process what she'd just heard. When she did, she turned fully to look at him.\n\n\"But that was during the Civil war.\"\n\nHe gave a derisive snort. \"Wasn't a goddamn thing civil about it from where I was standing.\"\n\nKelly's mind was still reeling. \"But that was in 1860-\"\n\n\"1861.\" His voice was still matter of fact.\n\n\"Okay, but it was still-\"\n\n\"It was a goddamn long time ago is what it was. Healing factor makes me age slower.\" He put his hand on her head and pressed it back down. \"I gotta give you time to process that, or can I go on?\"\n\nShe relaxed under his touch again. \"I guess it makes some sense, if aging is damage and your healing factor repairs damage-\"\n\n\"Didn't ask you to comment on the logic of it.\"\n\nShe smiled a little. \"You can go on.\" She would need time, but it would be easier if she got the whole story at once.\n\n\"Anyway, medical care during the war between the states was basically shit. There weren't enough doctors. The ones there were didn't have anything close to the kind of training needed to deal with the major battlefield injuries they were seeing by the thousands. Course having a leg shattered or your guts blown out wasn't all that could happen to a guy. The little shit could kill you too because of infection, and the docs didn't have time for the little shit. Guys either took care of it themselves, or got help from someone else in the camp. I wasn't squeamish and didn't really give a shit how much someone yelled, I got the job done. By the time it was all over, I figure I learned about as much as the doctors, just in an unofficial way.\" He pressed firmly against all three wounds. Kelly groaned. \n\n\"You're good at it.\" Kelly turned her head a little and smiled.\n\nA short laugh. \"Better wait on that assessment until after the first time I have to stitch you up.\"\n\nShe turned quickly her eyes wide. \"Stitch-?\"\n\nHe grinned. \"What? It ain't like I'd cut you that bad on purpose.\"\n\nKelly squirmed a little. \"I'll have to hope that you don't have any accidents.\"\n\nHe chuckled, but before he could say anything his phone started to vibrate. He checked for a text message. \"Conlon's back.\" He taped a fresh dressing over her back and pulled on his jeans. Kelly sat up and put the towel over herself.\n\n\"Is he eating up here?\"\n\n\"Fuck no.\" He turned to look at her, his eyes full of suspicion and enough danger to make her tremble. \"Missin' him already?\"\n\nShe picked up the shirt he'd left behind. \"No-\"\n\nHe took a step forward. She stayed on the floor at his feet. \"Then what?\" There was a dangerous growl in his voice.\n\nKelly's heart was pounding. \"I was thinking if he was going to be up here, I should probably wear more than this.\"\n\nHe watched her for a minute, then a slow smile spread over his face. \"Should invite him up here.\" He squatted in front of her and grabbed a handful of her hair. His voice a dangerously seductive purr. \"Make sure you're bare-ass naked.\" A soft nip to her lower lip. His eyes were locked on hers. \"Make sure he sees every fuckin' mark, just to make sure he doesn't start gettin' ideas. Maybe you need a reminder too.\"\n\nShe stroked her fingertips over his inner thigh, a low growl stopped her just inches from his crotch. \"The whole time you've been gone, the only ideas I've had have revolved around you being back again.\"\n\nHe move forward, his hand tightening in her hair. Kelly leaned back a little, she bit her lower lip hard. \"You're a shitty liar, frail.\" She opened her mouth to protest, but he grinned. \"You have got a way of telling the truth though.\" He let go of her hair.\n\nShe kissed his lower lip softly. \"Not fair.\"\n\n\"Who said I had to be fair?\" He toyed with her right nipple. \"What I'm gonna do to you later ain't gonna be fair either. Won't stop me from doing it, won't stop you from loving every minute of it and begging for more.\"\n\nKelly reached out for him but he stood up.\n\n\"I want a beer when I get back.\" He went downstairs bare-chested. Kelly pulled on his shirt while he was gone. She got the distinct impression that any more clothing than that would have been as pointless as asking what was going to come later. She got his beer and set the table. The elevator chimed. He stepped out carrying an extra large pizza and a medium one.\n\n\"Bring that shit over here.\" He set the boxes on the coffee table. \"I been sitting on furniture that's too fucking small for almost two weeks now. I wanna stretch out.\"\n\n*~*~*~*~*~*\n\nHe watched her nibble at her second slice of pizza. She was resting on her hip, her feet drawn up under her. The hem of the shirt and her position maintaining her modesty but still drawing his eye higher. Her hair was tied back haphazardly, a few stray strands caressing her forehead and cheek. The wide neckline of his olive drab shirt revealed pale skin and darkening bruises as well as the beginning of a bright red raised scratch. He knew that one ran all the way down to her navel. He remembered how her pussy had tightened around him when he gave it to her. Almost as tight as she did when she came. \n\nHe'd listened to her when she talked about her grandparents and how her grandmother had finally started talking to her again. He didn't really give a shit about who wasn't talking to who or what the reasons behind it were. He knew it meant something to her, maybe that was good enough. After a few minutes she fell silent, but the relaxation that had settled around her was obvious.\n\nNow he got to be the asshole who fucked everything up.\n\n\"Ever hear of something called Panacea?\"\n\nShe looked up from her pizza. \"Goddess of cures, or was it recuperation?\"\n\nThat wasn't a direction he was expecting. \"Cures. Where the hell did you learn that?\"\n\nShe smiled a little. \"You have a few mythology books in Maine.\"\n\nHe looked at her curiously. \"You read those books once, if that.\"\n\n\"I have a good memory for things I read.\"\n\nHe chuckled and shook his head. \"Frail you are full of surprises. That ain't what I meant though. There's a street drug called Panacea. So far as I can tell, Paulie C is the only one with the recipe.\"\n\nA shrug with one delicate shoulder. \"Okay.\" He could tell from the look on her face that she wasn't drawing any kind of connection between Stan and the drug.\n\nHe explained the marketing scheme as Fallon and his other contacts had explained it to him.\n\n\"And you think Stan is selling this drug?\" She almost laughed. That pissed him off.\n\n\"What the fuck is so damn funny?\" The deep growl rose in his chest. \"Do you know how many favors I had to call in to get this information?\"\n\nShe trembled and retreated. \"I didn't mean to laugh. It's just...Stan's a lot of things, but I can't picture him selling drugs. Every time he spoke he talked about how drugs destroyed lives. It was the one thing he said that made any sense at all.\"\n\n\"Panacea ain't like any of that other shit. From what my contacts told me it don't change a person or give them a high, it just makes them feel like their best selves all the time. Once you start taking it, you gotta keep taking it though, otherwise it fucks up your brain. That ain't been a problem though, his target market has good jobs, homes, families and no reason to stop because everyone around them seems to appreciate the change.\"\n\nShe looked disgusted. \"What an outstanding thing to hold over someone's head.\"\n\nHe nodded. \"Might even get you a big new job.\" \n\n\"I just...\" She started again. \"He...\" The scent of intense anger bloomed around her. He looked down to see her nails digging into her palms so hard that her knuckles were white. He recognized the murderous rage. Knew what it felt like when every cell was consumed with it. He pushed his thumbs into her curled fingers, forcing her to release the tension. She looked up at him. \"All of this has been about money all along.\" The words sounded as though they left a bad taste in her mouth.\n\n\"Usually is.\" He uncurled her fingers and saw the deep indentations of her fingernails in her palms. \n\nHer hands relaxed. \"Does Cavallo know?\"\n\nHe'd known the question was coming. With anyone else he would have either told the truth or come up with a serviceable lie on the spot. With her, he had to learn to equivocate. He looked away. \"I got no proof one way or the other.\" \n\nShe nodded.\n\nDesperate as Stan was and from what he could gather from other sources, he was reasonably sure that the cowardly asshole was trying to make a trade. The frail gets handed over like a sacrificial lamb, Stan hopes that Cavallo will forgive his little lapse. He'd seen it before. Participated in it. Seen the shocked and pained look on the sacrifice's face when he or she realized what was about to happen and who was behind it. She'd worry enough on her own without hearing his suspicions. He handed her plate back to her. \"Eat.\"\n\n\"I'm not-\"\n\n\"How much weight have you lost since I been gone?\"\n\nShe blushed a little, her eyes were down. \"I don't know. A little I guess.\"\n\nHe grasped her chin and forced her to look into his eyes. \"How much was that frail?\"\n\n\"Three pounds.\"\n\n\"Three pounds you can't spare.\" He pointed at the plate. \"Eat.\"\n\nShe started to nibble again. Creed knew it was just to please him, but he could live with that.\n\n*~*~*~*~*~*\n\nKelly spent the next few hours doing laundry and getting things in order. He seemed content to lounge on the sofa. From time to time, she would feel his eyes on her. The sensation made her aware of how the hem of the shirt floated around her thighs as she moved. The apartment was cool and the sensation of the fabric in motion against her bare skin kept her nipples prominent. For most of the evening she tried to keep her back to Victor.\n\nShe was folding the last load of laundry when she heard him start up the stairs. \"Don't be too long, frail.\"\n\nShe smiled over her shoulder. \"I won't.\" Kelly finished up and left the folded clothes stacked on the top of the dryer. The need to be in his arms was almost a physical ache. She turned off the downstairs lights and trotted lightly up the stairs. \n\nKelly had expected to find him in bed, but she hadn't expected to find him naked with the covers pooled around his feet. The intense way he watched her made her hesitate. The fact that he was already erect deepened and changed the ache she was feeling a moment ago. She paused at the top of the stairs, just watching.\n\nHe smirked. \"You gonna stand there all goddamn night?\"\n\nShe blushed and walked toward him. \"You surprised me.\" She pulled the shirt off and sat next to him. \"If I had known you were in that state I would have hurried a little.\" She reached out to stroke his chest. When there was no reproach, she let her fingertips trace the slopes of his muscles.\n\n\"What kinda state d'you expect me to be in? Dancing around all fucking night.\" He pulled her into a hungry kiss. \"Showing off that little ass of yours. Teasing me.\"\n\nHer fingers drifted down to his stomach and then over the front of his hip. \"Why didn't you say something?\" Her mouth moved to his collar bone, feathering kisses over the hollow of his throat. A little tremor went through him, followed by a soft purr. \n\n\"Like what? Spread your legs a little more when you do that so I can get a better view of your pussy?\" Claws bit into her hip just enough to make her shiver. \"Question is, what are you gonna do about it?\"\n\nA little shrug. She started tracing the thick veins on his shaft with a teasing touch. \"Depends on what I'm allowed to do about it.\" Her mouth moved down his chest, her tongue tracing around his nipple. His back arched. She felt the rumble of his growl. Her fingers grew more bold, wrapping around his shaft.\n\n\"You don't seem to need ideas from me.\" His fingers tangled in her hair. His hips rocked against her hand.\n\n\"No.\" She moved to the other side of his chest. Her tongue flickered over his other nipple, wetting it. \"Seems like the last time I needed permission.\" She blew cool air over the wet skin. Claws bit into her scalp and shoulders as he arched.\n\nHe took a deep breath and eased the tension on her hair. \"Well, let's just say you asked nice this time and I said yes.\"\n\nShe smiled up at him. \"Thank you.\" \n\nHer mouth continued slowly down over his stomach, stopping just long enough to tease his navel and draw a surprised gasp. She smirked a little, then continued down to the hot, pulsing organ in her hand. This time, she wasn't afraid or uncertain. She got lost in the musky scent of him, the flavor of his sweat and the saltier, baser taste of the fluid that leaked from the tip of his member. \n\nShe swept her tongue around the swollen head, teasing the slit while he groaned and pushed forward. Kelly backed off with a little smile. When he relaxed again, she took more into her mouth, applying ever intensifying pressure as her head moved. Her fingers stroked his shaft, then moved lower to cradle and tease his sack. She could feel the tension growing there and in his stomach and thighs. She kept pushing that tension further, her head moving faster, hands applying just a little more pressure. When he was deep at the back of her throat she moaned. His back arched. His hand tightened in her hair, pulling her back up. His mouth covered hers in a bruising kiss.\n\nWhen he pulled away she was breathless and he was grinning. \"Promised to make you suffer.\" \n\n\"Don't you want to...finish first? I mean, I thought you were-\"\n\nHe chuckled. \"Oh I will. Hearing you beg will make it better.\" He pushed her onto her back and wrapped her hands around the spindles of the headboard. \"You're gonna be a good girl and stay put, right?\"\n\n\"I'll try.\"\n\nA shrug and a grin that was made all the more lascivious by the presence of his fangs. \"'F you don't, I can find some rope someplace.\"\n\nKelly drew her arms in to her chest, her eyes wide. \"What are you going to do with-?\"\n\n\"Keep misbehavin' and you'll find out.\" He looked at her wrists. Kelly moved her hands back to the spindles. \"Good girl.\"\n\n*~*~*~*~*~*\n\nKelly lay with her back against his chest. His body was wrapped around hers, his warmth suffusing her pleasure-weakened muscles. He'd kept her on the edge of orgasm for what seemed like hours, teasing her mercilessly with his tongue and lips until she was begging for release. That hadn't been enough though. It'd only made him stop long enough to laugh at her. When she began to cry, he'd relented, driving her over the edge with such intensity that she'd gotten lost in it for what seemed like days. Somewhere in her pleasure, she'd felt him enter her and not long after that had heard his roar of release. In those intense moments, it was far away and unimportant.\n\nWhen she finally came back to herself, all the lights were off and she was tucked against his chest with her knees drawn up. Even though her relaxation was total, sleep was still elusive.\n\n\"Why aren't you asleep?\" He murmured close to her ear.\n\n\"Why aren't you?\" She countered.\n\n\"I asked you first.\" \n\nA soft sigh. \"I don't want to tell you.\"\n\nHe pinched a nipple softly. The touch was more soothing than arousing. Kelly sighed. \n\n\"Don't remember giving you that option.\"\n\n\"Please-\"\n\n\"Frail.\"\n\n\"It's stupid and it'll upset you.\"\n\nHis touch was teasingly gentle as he played with the firm nub of flesh. \"You don't want to leave.\"\n\nShe sighed. \"It's not that. Your reasons make perfect sense. I just have a bad feeling. It's not rational-\"\n\n\"Shit like that ain't supposed to be rational. Every instinct I got in me is telling to stay here and fight. All my training says I need to know what I'm going after 'cause if I go into this blind I just leave you more exposed. Never have been very patient I guess.\"\n\nShe smiled a little. \"I don't know, you were pretty patient earlier.\"\n\nA soft chuckle rumbled through his chest. \"Told you you'd love every minute of it.\"\n\nShe turned her head enough to kiss his bicep. \"I always do.\"\n\n\"Go to sleep. When you don't sleep you get cranky and when you get cranky you piss me off.\"\n\nKelly smiled. \"You're the one who can spend a whole day communicating in growls\"",
        "\"Yeah, but that makes you wet.\" He tightened his arm around her waist. \"Sleep. Now.\"\n\nKelly laced her fingers with his and closed her eyes. She wasn't sure that she would sleep, but if she was going to lie awake this was a comfortable way to do it.\n\n*~*~*~*~*~*\n\nThe next morning passed in a flurry of last minute details. When she was at the end of her to-do list Victor came upstairs with a cooler. \n\n\"Pack enough food and snacks for the two of us. I don't want you seen any more than absolutely necessary.\" Kelly nodded and started packing the food while he sat in front of the TV sipping a beer. She knew his calm lounging was a front, though someone who didn't know him as well might have missed the subtle signs. There was a tension in his jaw, an occasional twitch in his foot, the sound of one claw tapping on the glass bottle. \n\nShe didn't want to think about how many years he'd been perfecting that particular ruse \u2013 and after his revelation about his age she wasn't sure that she wanted to speculate - but she knew calling him on it would only wound his pride. She packed all the food and drinks that would fit into the cooler. He glanced over at her when she closed the lid.\n\n\"All set?\"\n\n\"Yes. Just let me grab my coat-\"\n\n\"Nah, sit down for a few minutes. I don't wanna have to sit in traffic.\"\n\nShe sat near him and watched him flip through the seemingly endless parade of perky morning talk shows, game shows and soaps. Finally, he settled on InSession and proceeded to ignore the conversation the three correspondents were having about a trial Kelly had never heard of. She closed her eyes and starting running through her mental checklist, assuring herself that she had everything taken care of. What felt like seconds later, he was poking her shoulder.\n\nHer eyes fluttered open. \"What?\"\n\n\"You been asleep for the last forty-five minutes. I'm gonna take the cooler downstairs. I'll be back up for you in a minute.\" \n\nKelly nodded and yawned. She rubbed her eyes and got up, pulling on her coat and taking one last look around to make sure she didn't leave anything behind. When she was satisfied that she had everything she picked up the remote to shut off the television when the image caught her eye. Stan and her mother, standing in front of a crowd of reporters. She turned up the volume and sank back down to the edge of the couch.\n\n\"...repeat, a body found nearly two weeks ago has been positively identified as that of Kelly Wilton, adopted daughter of Stanley Wilton, director of national youth outreach programs for the Church of Humanity. Mr. Wilton is expected to make a statement in just a few minutes. We don't know at this time if he'll be taking questions-\"\n\nThe camera focused on Stan and her mother again. He looked much as he always had, except he was wearing a better suit. Her mother looked as though she hadn't slept in weeks. She swayed on her feet, first left, then right. Stan gripped her hand and wrapped it around his arm, stabilizing her for the moment. A stone settled in Kelly's chest.\n\n\"I-\" His voice cracked. Kelly had heard him practice that sound. He looked down at the podium, then back at the transfixed audience. \"I thought I could come up here and make a speech about loss and sorrow and trusting in God, but I can't. Our only daughter is gone.\"\n\nHer mother choked on a sob. So did Kelly. She saw through Stan's false sentimentality, but seeing her mother looking so fragile, so pained, it was more than she could take.\n\n\"C'mon frail...\" Victor's voice barely registered. He sat down next to her. \"Holy shit.\"\n\n\"I don't have words to describe the shock...the pain.\" He looked sadly into the camera. \"I don't think human beings have invented words for this kind of pain.\"\n\n\"Where's Cody?\" Kelly murmured.\n\n\"He's a kid-\"\n\n\"He's a prop to bolster Stan's image as the perfect father. He should be there.\" She started to tremble. He shifted closer to her.\n\n\"On it's own, this senseless tragedy would be enough to cripple any family, but now, so soon after our son's devastating injury-\" His voice broke again. \"We ask that you keep us in your prayers during this time of trial.\"\n\nKelly started shaking her head. It couldn't be happening. She couldn't have heard what she just heard. It had to be a ploy. A way to gain more sympathy from the public. A cruel joke. Anything but the truth.\n\n*~*~*~*~*~*\n\nWithin minutes she was so fucking deep insider her own head that he could have set her on fire and she wouldn't have noticed, and for once he was glad. He got up, pulled out his phone and dialed.\n\n\"Link.\"\n\n\"I need medical records and I need 'em now.\" His eyes were fixed on the frail. Watching her as if at any moment she might shatter like glass.\n\nA thick laugh. \"Knew you weren't serious about that whole 'hiatus' thing.\"\n\nHis jaw clenched. \"Shut the fuck up and find me the goddamn records.\"\n\n\"You caught me on a day when my crystal ball is in the shop. Mind giving me a name and a location?\"\n\nCreed growled. \"Location is New York State.\"\n\n\"Where-\"\n\n\"All of it. First name Cody, last name's either Demmer or Wilton.\"\n\nHe heard rapid keystrokes. The press conference was being replayed with commentary from an unseen reporter on the 'mutant angle'. He changed the channel. \"Relative of your girl, huh?\"\n\n\"That any of your business?\"\n\n\"Just curious, on account of-\"\n\n\"I don't give a shit why you're curious, it's none of your fucking business. You find the records or not?\"\n\n\"Nothing under Demmer, but I got two Cody Wiltons. An old man and a kid.\"\n\n\"The kid.\"\n\nThere was a silence. \"Damn. He's been in a coma for two days. Initial story on admission was a fall down the stairs. ER doc thought that was bullshit, but it looks like his superiors stepped in before that could be investigated.\"\n\n\"Send me everything you have access too.\" His eyes were on the frail. She was trembling. Her expression hadn't changed.\n\n\"Sent. Look, if-\" \n\nHe ended the call, then checked his e-mail on the workstation in the apartment. He started everything printing and then went back to the frail. Not that he had a fucking clue what to do for her, but everything in him itched to do something. It was, admittedly, a new impulse. Still, it was one that he didn't question.\n\nHe squatted in front of her and studied her eyes. They weren't focused on anything happening in the present, but tears were still falling in slow streams. It occurred to him that he'd never seen her cry so openly before. A feeling akin to a low voltage shock radiated outward from his chest in pulses.\n\n\"Frail.\" There was no flicker of understanding. No indication that she'd even heard him. He brushed carefully at her wet cheeks. She didn't respond to that either. He moved forward and put his lips next to her ear. \"I'm gonna get you someplace safe, then I'm going after Stan and I am gonna make him suffer like no one else has ever suffered. There ain't enough walls, or enough guns, or enough guards to keep me out.\"\n\nNo response. \n\nHe got up and checked the printer. The thick stack of pages was still coming, but he started to leaf through what was there. In the very beginning were pages of digital photos. The kind that doctors took when they were documenting suspected abuse for the police. \n\nThe kid was small, malnourished like the frail had been. The shape of his face was distorted by swelling and bruises. Some of the places had the pulpy appearance of swollen flesh over crushed bone. Another view showed the chest and abdomen. There was a deformation over the ribs on the right side. Hands and fingers were broken, probably in an attempt to fend off the blows. If this kid had fallen down stairs, the stairs had fists and wore heavy boots. Creed could see the pattern of the tread highlighted in blood and bruises.\n\nHe flipped forward through endless tests and consultations. The kid still had brain function and so far it was holding steady. He was making efforts to breathe on his own, and for now those efforts were holding steady too. A chance for some kind of recovery, if somebody didn't finish the job first. He dialed Conlon. \n\n\"Con-\"\n\n\"Know anybody who can blend in at a hospital?\"\n\nSilence. \"Maybe. Why?\"\n\nCreed sketched the particulars.\n\n\"Shit. How's Kelly?\"\n\n\"How d'you think she is?\"\n\n\"I have a couple ideas.\"\n\n\"Set it up. Fast.\"\n\nHe ended the call. They needed to get the fuck out of there. He turned off the TV and grasped the frail's upper arm carefully. \"C'mon. We gotta go.\" He lifted and she got to her feet. She was trembling but she followed where he lead. Told him that she wasn't completely gone.\n\n*~*~*~*~*~*\n\nCreed drove north through Wisconsin. From the road, he called Joe, just to make sure he knew the reports of her death had been exaggerated. Thankfully, the old woman hated television and hadn't seen the broadcast. Joe would tell her what was going on before some well-meaning neighbor could. He wasn't sure how the old bitch was gonna take it, but that was Joe's concern.\n\nHe ate lunch when he changed vehicles, he even managed to get her to take a couple of bites. The rest of the time she spent curled up against the passenger door, her eyes unfocused but directed toward the scenery slipping by. Luxury car or rusty green pick-up, her position didn't change. He tried to ask questions, to draw her out somehow. Nothing worked. \n\nShe was never one to fill the silent spaces with too much chatter, but this time the silence was driving him fucking nuts. Maybe because her pain was so palpable. \n\n\"I tell you where we're going?\"\n\nShe was silent, her eyes still toward the window.\n\nHe gave a little shrug. \"It ain't much. In fact the whole fuckin' town ain't much. It's got a shitty bar, a general store and a gas station. Kinda place people pass through or disappear in.\" He glanced over at her. Some of the tension might have started to ease in her shoulders. Might've been his imagination too. \"Cabin's a rental. It's small. Probably looks like a fuckin' shack compared to my other places.\"\n\nThe more he talked the more stupid he felt. He knew she was going to hate the place, and he knew that she wouldn't say a word about it and no matter what he said, none of that was going to change. Especially not when he couldn't even be certain she could hear him. He let the silence deepen again and let it stay that way while he followed the scenic route toward Minnesota and the Canadian border beyond.\n\nHe looked at the clock again and saw it was around ten. Conlon would already be at the rendezvous point. He still had another couple of hours to go. \n\n\"I was in the car with him.\" Her voice was flat, alien. Her eyes were still fixed on the darkness outside the window.\n\nA sharp glance over at her. \"With who?\" \n\nA little tremor went through her. \"My father.\" That same flat tone. \"It was nearly nine at night. My mother sent him to the grocery store for milk and eggs and I wanted to go. She said no, but he told her it would be fine and hustled me out the door. The store was only a couple of minutes away.\" \n\nShe drew a ragged breath. He could smell her tears, but he kept his eyes fixed on the road.\n\n\"We were singing a song I had learned at camp. The Cannibal King. He was pretending not to know the words.\"\n\nHe ventured another glance. A little smile touched her lips and then faded.\n\n\"I don't remember the crash itself, but we were hit on the driver's side. After...everything was quiet for a minute, like time stopped. Then I smelled the blood and heard him moaning. His head was-\" Her voice broke. \"I started screaming. He told me it would be alright, then he made me promise to take care of Cody until he got better.\"\n\n\"Frail-\"\n\n\"I didn't!\" The flat tone in her voice was replaced with pain.\n\n\"Bullshit!\" He stopped in the middle of the quiet road and turned to her. \n\n\"It's not!\" She turned to face him, her eyes blazing with anger.\n\n\"And just what the fuck have you been doing since Stan came into the picture? Sittin' back, staying out of harm's way?\" He was angry too. Angry at how one pompous ass could presume to take so much from what was his.\n\nSome of the fire faltered. \"No, but-\"\n\n\"No. You been putting yourself between Stan and the kid. You might've gotten used to me cutting you a little when I fuck you, but I know damn well you're not a masochist. So why'd you do it?\" \n\n\"Cody was a baby, he didn't deserve-\"\n\n\"And you did?\"\n\n\"Of course I didn't! That's not-\"\n\n\"So you did what you promised no matter what it cost you.\"\n\n\"Not this time!\" She turned away. A moment later he smelled her tears.\n\n\"So how would you change that? Dawes would've killed you, either when you escaped that day I found you or soon after that. If I had let you go that morning you wanted to leave you wouldn't have fared any better and you damn well know it.\"\n\nShe was silent. \"It felt so good to be safe for awhile. It's like I forgot...\" The words were barely above a whisper. He unhooked her seat belt, grasped her wrist and pulled her across the vinyl bench seat of the old truck. She came to rest against his shoulder. He started driving again.\n\n\"What happened to him?\" Her voice was quiet, but it was hers again. \n\n\"Somebody beat the shit out of him.\" He felt her tremble. \"He's in a coma right now, although it's possible he might come out of it. When we get to where we're staying I'll show you the records if you want.\"\n\n\"How did you get hospital records?\"\n\nHe smirked a little. \"Told you, everything's on a fucking computer somewhere.\"\n\n\"What if Stan finishes the job before Cody has a chance to get better?\"\n\n\"I got people in there. If the kid's gonna get better, he's got the chance to do it.\"\n\nShe took a deep breath. \"Victor-\"\n\n\"We won't cross the border tonight. After we do it'll take another couple of days to get there.\"\n\nKelly recognized the diversion. She didn't push.\n\n*~*~*~*~*~*\n\nAt some time in its existence, the Wildwood Cabin Court must have been on something approximating a main road. Kelly didn't want to speculate how long ago that was. The six tiny cabins were located on their own little cul de sac. Even though she knew the road they came in on was less than a quarter of a mile away, the thick trees and snow gave the impression that they were in the middle of nowhere.\n\nVictor stopped next to the office. Kelly moved to get out, but Victor grabbed her arm.\n\n\"Stay.\"\n\nShe nodded and watched through the window as Victor talked to an old man in a patched plaid bathrobe. He got back into the truck and drove past another occupied cabin.\n\n\"Conlon.\" He answered the question before she had a chance to ask it.\n\n\"He's coming with us?\"\n\nHe swung the truck around so that it was facing the exit before he stopped in front of the last cabin. It was slightly larger than the others. \"He'll be in the area. Where we're going is so goddamn far from anything that I don't want to have to wait for him to get there if I have to leave.\"\n\nHe got out of the truck, so did Kelly. She jumped when she heard snow and frozen gravel crunching somewhere in the darkness. Victor scented the air, then went back to taking things out of the truck. \"Might be wise to announce yourself.\"\n\n\"Thought you'd be here earlier.\" He took the bags from Victor's hands.\n\n\"Shit happens.\" He unlocked the door. Conlon turned the lights on. \"Anyplace around here to get something to eat at this hour?\"\n\n\"Bar about five miles north of here.\"\n\nKelly went into the bathroom. The two men would decide whatever they were going to decide. All she knew was that she was mentally and physically exhausted and hadn't had a bathroom break in what felt like forever. The small space was scrubbed clean, but the fixtures were out of date. A portion of the ceramic times were cracked, and whoever had painted the top third of the walls had trailed some celery green paint over the tops of the white tile. Someone still made an effort to keep the place up, even if it was an imperfect effort. \n\nShe washed her face with cool water and looked at herself in a mirror clouded with age. Logically, she knew she bore no guilt about Cody, that didn't keep her from feeling it. She just hoped that she wasn't wearing it on her face when she emerged. Victor stretched out on the bed, dwarfing the piece of furniture. A little smile touched her lips.\n\n\"Where's Conlon?\"\n\n\"Getting us some dinner and don't tell me you ain't hungry.\"\n\nShe smiled a little more. \"Actually, I'm kind of hungry.\"\n\n*~*~*~*~*~*\n\nHe let her eat first, then he handed her the medical file minus the photo pages. The listing of injuries was enough, she didn't need to see every bruise in living color. He could see that she wanted to cry, but in her conscious state, she held back the tears, replaced them with anger. It was another coping mechanism he knew well, and it pissed him off to see her have to use it. \n\nShe nodded off, fully clothed, with pages spread out around her on the bed. He was relatively sure that she didn't understand half of what she read. Didn't seem to matter to her, she'd just kept scanning the pages until she couldn't stay awake any longer. He collected the pieces of the file, undressed, and got her out of her clothes. She mumbled something, but didn't really wake. He knew the deep exhaustion was mostly emotional. Didn't matter, as long as she got some rest. She settled easily next to him, and her scent sweetened.\n\nTomorrow, he would make sure that she called the grandparents. Make sure they know she's still alive.\n\n*~*~*~*~*~*\n\nKelly woke up to Victor shaking her shoulder. She groaned.\n\n\"What time is it?\" Her voice was a gravelly mumble.\n\n\"Almost seven-thirty. Get dressed. I want to be outta here by eight.\"\n\n\"Need a shower.\" She held the sheet over her breasts and grabbed her clothes.\n\n\"Tonight.\" He paused. She could feel his eyes on her. He knelt on the bed behind her. \"How's your back?\"\n\n\"It's okay.\" She rubbed at her eyes and sat still, allowing him to do what he wanted. He took the dressing off. She heard him sniff the air. \n\n\"Looks good.\" He grabbed a handful of her hair, pulled her head back and to the side. She giggled when he nipped the side of her neck. \n\n\"Thought you wanted to leave by eight?\" She turned and paused, her mouth just inches from his.\n\nHe grinned and kissed her hard. \"Think I can't fuck you and be out of here in forty minutes?\"\n\n\"I'd need a shower.\" She kissed his lower lip softly.\n\nHe moved back, fangs poking at his lower lip. \"Maybe I'll let you blow me in the truck instead. Get dressed.\"\n\nKelly washed up and dressed. A strong wind buffeted the back of the cabin, making her shiver with anticipated cold. When was making sure she hadn't left anything behind, she noticed how threadbare the rest of the place was. Like the bathroom though, everything was clean and cared for. It was sad in a way. Once she was satisfied that she had everything, she stepped out onto the narrow porch with her bag. Victor was fussing with the cooler.\n\n\"What'd you do, pack all the food in the damn house?\"\n\n\"No, just everything that would fit.\" She set her bag down in the bed of the truck. She raised her eyes to the thick brush across from the cabins. A movement caught her eye. She looked more closely and saw the outline of a crouching figure. \"Victor!\" \n\nA gunshot rang out as he turned to look at her. His temple exploded. A warm spray of blood and tissue covered her face and the front of her coat. He hit the truck and then the ground, a red puddle forming around his head.\n\n\"Get back inside!\" Conlon shouted. Another shot and he fell, blood soaking his thigh, then another hit him in the shoulder. The gun he held spun across the frozen gravel. He struggled toward it, trailing blood across the snow.\n\nKelly turned and came face to face with two men wearing white, black, gray and blue wintertime camouflage, their faces covered by ski masks. She turned and tried to run, but they grabbed her and lifted her off of her feet. She fought as best she could and managed to land a solid kick to the side of one's knee. She was rewarded with a scream of pain, but his grip didn't waver.",
        "\"Fucking bitch!\" \n\nSomething jabbed into her shoulder and the world went gray, then black."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "abduction",
        "submission",
        "oral sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-19"
}