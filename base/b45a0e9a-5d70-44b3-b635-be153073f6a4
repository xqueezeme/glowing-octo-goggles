{
    "title": "Surefoot 04: Sanction Ch. 03",
    "pages": [
        "USS Surefoot, Deck 1, Conference Room:\n\nCommander T'Varik stood at the end of the room, beside the display listing the key points of the morning meeting. Naturally the Vulcan did not need to refer to the display to remember the points being discussed. \"The operation to continue retrofitting the subspace communications buoys in this sector of space is proceeding ahead of schedule; given your relative lack of experience with the practical applications of extravehicular activity, I must commend your overall performance with this.\"\n\nThe three cadet squads stood or sat around the room, each of them naturally separated; Eydiir remained standing, though a seat had been offered to her by Jonas when they first arrived. She preferred to stand; with Sasha and Giles away, going to that... distasteful display on Tau Beta... they were two squad members short compared to the rest, and though they were all meant to be colleagues working together, it left her feeling at a disadvantage.\n\nIt hadn't helped that Sasha and she had left on such cold and distant terms. Sasha truly believed that Eydiir, given the latter's life spent among the Capellans, a violent and vendetta-driven people, would understand Sasha's own need to see the killer of her mother killed himself. Eydiir did understand; that did not mean she approved. She hoped that Sasha's thirst for vengeance would be sated after this, and that they could go back to being friends again.\n\n\"In less commendable news,\" T'Varik continued. \"Chief Engineer Grev has reported that several cadets have been witnessed visiting the secondary hull via the pylon Jeffries tubes. He refused to provide the names of these cadets, but confirmed that they are not engineering staff and have neither a requirement nor authorisation to visit these areas. I can only conclude that these visits are for the purpose of clandestine sexual activity.\"\n\nShe allowed the expected titters among the young crowd to pass before continuing. \"These trips will cease immediately. My relaxation of Academy regulations regarding sex between cadets did not include a mandate to enter restricted areas of this ship, or to engage in Public Displays of Affection. I strongly suggest you behave like mature individuals and limit such activities to your quarters, or to your private holodeck time.\"\n\n\"Excuse me, Commander,\" Gamma Shift's Medical Specialist Bob Beaudine, a strapping Terran with pepper-black hair, spoke up, smiling. \"But with six people living together, privacy isn't always possible for... such activities.\"\n\n\"Consider it a test of ingenuity, Mr Beaudine. To continue, the Astrophysics Exams will commence from 1600 Hours tomorrow. Your assessment times will be posted, and I advise-\" She paused as she saw Jared Miro, Leader of Beta Squad, raise his hand. \"What is it, Mr Miro?\"\n\nHe rose, unnecessarily, to get everyone's attention. He was Argelian, looking very humanoid with swarthy skin and a lean face, which now flushed further. \"Commander, I was hoping you could satisfy our curiosity: Sasha Hrelle and Giles Arrington have left the ship suddenly. Has something happened?\"\n\nEydiir glowered. She did not like him. She never did. His people espoused love and sex the way hers did a martial attitude to life. But his own attitude translated into a smarmy, libertine demeanour, and he had attempted to seduce Sasha, insulting her father the Captain when his efforts proved unsuccessful. She preferred to try to ignore him. Now, however, she felt the need to speak up. \"What business is it of yours?\"\n\nHe gave her a look of exaggerated hurt. \"There's no need for such aggression, Cadet. I was merely showing concern for our colleagues. And for yourselves.\" He looked back at T'Varik now. \"With Alpha Squad's first and second-in-command away, I am offering my services as Squad Leader for the duration, to supervise them with the continued buoy retrofits and the Exam.\"\n\n\"You can supervise kissing my hind ridge, Miro,\" Neraxis offered him, the Bolian's blue skin darkening, as she offered him her middle finger in punctuation.\n\n\"We don't need your help,\" Jonas added, scowling. \"Or want it.\"\n\n\"You are proving to be a most invidious individual, Mr Miro,\" Kitirik noted, adding, \"Apologies for my outburst.\"\n\n\"I believe my Squad has made itself clear how it feels about your suggestion,\" Eydiir finished coldly.\n\n\"Alpha Squad,\" T'Varik spoke up, recapturing everyone's attention. \"Regardless of your feelings about Mr Miro's offer, I will make the final decisions regarding your supervision.\" Now she focused on Jared. \"Sit down, Mr Miro.\"\n\nThe Argelian did so, avoiding looking in the general direction of Alpha Squad. But Eydiir continued to glare at him.\n\n*\n\nShuttlecraft Sureswift, Deep Space:\n\nGiles didn't notice the beeping at first. He was in one of the two cots in the sleeping compartment of the shuttle, trying to get used to the arrangements. The compartment was smaller than the one in their squad quarters, and there were different ambient sounds. And his sleep had already been troubled, given the tension within the small craft between the other occupants: Captain Hrelle and Sasha, who had made awkward silences an art form whenever they were together, and only appeared to relax when they were alone with Giles.\n\nStill, it was a persistent enough sound for him to finally take notice, though he didn't really stir fully awake until he realised it was coming from his case, directly beneath the bunk. He sat up in the dark, rubbing his eyes as he leaned over and drew out his case, opening it and fishing through his clothes for the source of the sound-\n\nYes, it was definitely his communicator, an old-fashioned model from the previous century: matt black finish, with a flip-top silver grid and a classic minimalist design to the function buttons and round display, which now blinked in time with the beeps. It looked like an antique, but he knew better.\n\nSuddenly aware that one or both of the other occupants of the shuttle might enter at any time, he worked the controls. \"Umm... hello?\"\n\n\"Giles? Is that you?\"\n\nHis jaw dropped. \"Dad?\"\n\nThe voice came through loud and clear, and Giles remained amazed by the technology, a product of his older brother's office at Starfleet Intelligence, allowing real-time audio communication over so many light-years. \"Son! It's good to hear your voice! Can you speak?\"\n\nHearing his father's voice lifted his spirits, even as he continued to feel dismay and guilt over the secretive nature of their communication. \"Yes! Yes, I can! How are you?\"\n\n\"How am *I*? I've been worried sick! Why haven't you contacted us? Why did I have to do it?\"\n\n\"What? I've sent letters to you each week-\"\n\n\"I'm not talking about the official communication, you idiot! Your Aunt Lucille gave you this very valuable device for a special mission! And you've not sent one damn report! Are you being kept from contacting us, son?\"\n\n\"No, Dad, it's not that!\" He was glad it was only audio communications, so he didn't have to look at the man's obviously stern expression. \"There just hasn't been anything unusual happening! At least, not until now...\"\n\n\"Now? What is it? What's happening now?\"\n\nGiles mentally kicked himself for even saying anything; he just felt so obligated to please him. \"It's just- we're heading for the Tau Beta System.\"\n\n\"What? That's not in the Surefoot's patrol sector!\"\n\n\"I know. We're not in the Surefoot, we took the Captain's Shuttle yesterday. Captain Hrelle and his daughter are going to the Nist's science outpost. Someone is being executed, and they've been invited to attend.\"\n\n\"Yes, I heard about that. And why are you going along?\"\n\n\"I'm co-piloting. I'm also... I'm also in command of the mission.\"\n\nThere was a pause, and then his father said, \"That was clever on his part.\"\n\n\"Dad?\"\n\n\"Hrelle, giving you that little token of responsibility, make you feel like a big man, while giving him a chance to keep a close eye on you.\"\n\nGiles winced. Did his father really think that? \"It's not like that, Dad-\"\n\n\"From now on, son, I want regular reports. I don't care if you think what's happening is noteworthy or not, just report what happens, and let the adults make the decisions. Is that clear?\"\n\nGiles felt his face flush. \"Dad, Captain Hrelle is not a bad man-\"\n\n\"Son, no disrespect, but you are a wet-behind-the-ears kid, who has no idea how devious and dangerous that man can be. You know, when your brother was just a little bit older than you, he was already serving onboard the Intrepid, facing down the Tzenkethi at M'Kemas III. You could do worse than to emulate him. Start making regular reports from now on, is that understood?\"\n\nGiles felt his face tighten, as he lied, \"I have to go, bye.\" He slammed the lid down and cut the transmission. Every time he talked to the man, suddenly Giles was eight again instead of eighteen. And his brother Matthew would inevitably be mentioned.\n\nMatthew: the Golden Boy of the Family. Giles grunted to himself. He'd grown up hearing so much from his father, his aunts and uncles about Matt's efforts in Starfleet. It was later, when he was old enough himself to access the records at the time, that Giles learned that the Intrepid remained in the rear during Starfleet's last fight with the Tzenkethi, never seeing any action. But certainly talking up a storm about it.\n\nHe stowed the communicator, brought up the lights and dressed, before emerging into the rest of the shuttle. The Sureswift was divided into three sections: the aft, with the study/dining area, replicator, entertainment unit, and toilet/sonic shower; the midsection, with the sleeping compartment; and the fore section with the cockpit and single-pad transporter. \n\nIt was a remarkable little ship, though with the amount of sustained high-warp travel it was required to do when travel via the Surefoot was impossible or impractical, it was little wonder that its warp core required replacing as often as it did.\n\nHe looked forward, seeing the cockpit empty, and wondering where the Captain was-\n\n\"Computer: small double pepperoni pizza.\"\n\n\"Unable to comply. There is a medical override from Chief Medical Officer Doctor Juliet Ling regarding your food choices. You are restricted to one of the following: broccoli and feta omelette; white bean and herb hummus with assorted crudites-\"\n\n\"ARE YOU SERIOUS?\"\n\nGiles approached and was about to offer to order him something under his own name, when the door to the toilet opened and Sasha emerged, momentarily startled by the presence of the other two there, before lifting up a PADD from the adjacent table and sliding down to sit on the floor, immediately becoming engrossed in her work in order to avoid acknowledging the Captain's presence.\n\nHe watched Hrelle look at her a moment, before turning to face Giles. \"Evening, Giles. No need to rush forward to take over, grab yourself something to eat first.\"\n\n\"Yes, Sir, thank you, Sir.\" He drew in to let the Captain pass - dragging all the tension in the compartment along with him like the nets on a fishing boat. It made Giles' stomach queasy, reminding him too much of his own household, before his mother finally left to start a new life for herself in some colony on the Outer Rim. He wanted to help them, if only to see someone with a healthy relationship. He called up a coffee from the replicator and looking down at Sasha. \"You want one?\"\n\nShe never looked up. \"No thanks.\" She set the PADD down and rubbed her eyes. \"Gravimetric accretion, subspace compression, micro protoplanetary meshuggenah. It's all gibberish now. Don't know what's wrong with me.\"\n\n\"Maybe you're distracted? Perhaps with unresolved issues?\"\n\nNow she peered up at him. \"You making a career change towards Counseling?\"\n\nHe smirked, sliding down to the floor beside her, cradling his ceramic mug in his fingertips. \"No thanks, I like talking about myself too much to let others in on the conversation.\" He nudged her shoulder with his own. \"You know, there's a veteran Starfleet officer at the front who might be able to help us pass this exam-\"\n\n\"Cut it out, Giles. You don't understand.\"\n\n\"Then I'm sure you can explain it to me. We have plenty of time.\"\n\n\"There's nothing to explain.\"\n\n\"I'm curious: what's going happen after the execution when we return to the Surefoot? Are you staying in Starfleet? If so, will you ask for a transfer to another ship, or will you stay with us? And if are, will you finally start talking to your father again-\"\n\n\"He's not my-\"\n\nBut he held up a hand, cutting her off. \"That's not you talking, Sash. That's not the woman who punched out Jared Miro for insulting her Dad. That's not the cadet who stood up to my brother to defend her father's good name.\" He smirked. \"Or the one who probably wanted to hit me once or twice when we first met. Fortunately, in my case, my charm won you over.\"\n\nSasha had to suppress a smirk of her own, in her effort to stay sullen.\n\nBut then he grew serious, sipping at his coffee before continuing. \"You know, when I was younger, I was such an ungrateful brat. My father gave me everything he could think of. He gave me a solar yacht. He gave me trips to the Starfleet Museums on Earth and Titan with VIP access. He gave me tutors and nannies and cooks who waited on me hand and foot, and made sure that everyone knew whose family I belonged to wherever I went.\n\nBut that wasn't enough for me. I wanted more. I wanted...\" He looked up at the ceiling. \"I wanted him to read me bedtime stories, and check the closet for monsters. I wanted him to put me on his shoulders so I could touch the sky. I wanted to go rock climbing with him, or gather autumn leaves, or have him teach me to swim instead of hiring someone. And when I was missing my Mom, I wanted him to comfort and reassure me, instead of telling me to man up.\" He set aside his coffee cup, its contents no longer desired. \"I wanted him to be like the Dad you have.\"\n\n\"Giles-\"\n\n\"Don't throw all that away. There is nothing you two can disagree about, absolutely nothing, that would be worth losing what you have with him.\"\n\nShe frowned, unable to look at him, as if her tears weighed down her face, as she murmured, \"I know. But... I said such terrible things to him. I- I don't know how to make it up to him.\"\n\n\"Maybe you don't have to do anything,\" a new voice suggested.\n\nGiles looked up, as did Sasha, as Hrelle entered, standing there before sliding down at Sasha's other side. He breathed in and out, drawing his knees up and staring at the bare wall opposite them. \"Maybe you don't have to do anything but listen to me.\"\n\n\"Dad-\"\n\nHe held up his hand to stop her. \"Sasha... I'm sorry. I still believe that what they're going to do to Giger is morally wrong. And I still believe your mother would agree. But... you have the right to feel differently. I can't see you, treat you, like you're still the Runt of the Litter. You're not my little girl anymore.\" His voice broke. \"I'm sorry to let you down-\"\n\nShe twisted in place to hug him.\n\nHe wrapped his arms around her and hugged back.\n\nNearby, Giles reached for his coffee mug and stared silently into it, letting the father and daughter have their moment, thinking about the confession he had made to Sasha about his own father, still shocked at how truthful he'd been.\n\n*\n\nSomewhere Else, Six Years Ago:\n\nHrelle's voice was almost hoarse. He begged, pleaded, demanded that they reconsider their verdict. There was no point, no justification, in killing Peran now. It wouldn't undo what he had done. It wouldn't teach him or others a lesson. It would serve nothing but their need for vengeance.\n\nHis protests fell on deaf ears.\n\nHrelle stared in worn disbelief at the mob, his voice breaking. \"Listen to me... this isn't necessary...\"\n\n\"You heard us, Captain,\" Ortez declared, looking both grim and gleeful. \"Or are refusing? Are you relinquishing your command over us because you haven't got the guts to do what is necessary?\"\n\nHrelle almost took him up on that. It was too much, he was too tired and hungry and angry and-\n\n\"Esek,\" Peran finally said, drawing close to his friend. \"I was prepared to accept this fate the moment the Prophets gave me the vision. Please... better that it be done this way, by someone who cares, rather than an anonymous shadow smothering me in my sleep.\" He reached out and took the Caitian's hands in his own. \"Why are you so distressed? I'm going to be with the Prophets soon! And you'll be stuck here eating terrible food and listening to Krihoq and Nitreek bicker endlessly.\"\n\nHrelle felt tears, but they were weak, as he was. \"Peran...\"\n\nNow the Bajoran reached up, touched Hrelle's ear, while he closed his eyes in regard. \"Your pagh, your spiritual force, is strong. Strong and pure. I know how difficult a task this will be for you. How wracked with guilt you'll feel afterwards. You must forgive yourself. Promise me you'll forgive yourself.\"\n\nHrelle could feel himself trembling. Of all the burdens he had carried as a leader, where in command of a ship or this band of slaves, nothing had come close to this. He couldn't do it. He couldn't do it.\n\n\"The vision the Prophets gave me told me much, Esek,\" Peran continued, whispering now. \"You will need your strength, and your forgiveness, because... I fear it will be many years before you return to your daughter, and your life. And it won't be while you're still here, but elsewhere. But it will happen. You just have to keep going.\"\n\nHe couldn't do it. He couldn't do it.\n\nPeran drew closer, allowing Hrelle to embrace him fully, the Caitian's hands moving up to the Bajaron's head as if to cradle it.\n\nHe couldn't do it. He couldn't-\n\n-CRACK-\n\nHrelle gripped the man's body tightly, holding him up, cradling his head on the Caitian's shoulders now that the neck... no longer could. There was a shuddering, as if Peran might have still been alive. But Hrelle knew better, that the shuddering was from his own body; the break had been textbook perfect, the shock sending Peran into immediate unconsciousness, the breathing stopping, and the body would soon follow the brain. \n\nHe slowly descended to his knees, guiding the body of his friend, the friend whose life he had just taken, to the floor, guiding his hands to a folded place on his chest and closing the eyes. He half-remembered prayers chanted by the monk, but decided for a simple thought: Goodbye, Peran Sayr. Be with your Prophets. Wherever they were, it has to be a better place than this hole.\n\n\"Well,\" Ortez was saying loudly, drawing up behind Hrelle, \"Now that you've finally done your job-\"\n\nLater, Hrelle would try and fool himself into thinking that his mind had withdrawn, that it was his body operating on instinct, out of his control. \n\nBut that was a lie. He was fully aware of what he was doing as he rose, leaping towards Ortez, baring the man's throat and sinking his teeth into the bristly flesh, incisors easily piercing the skin and the soft tissue beneath, drawing some away in his mouth as Ortez's carotid artery sprayed all over his face.\n\nOrtez tried to scream, but only managed a gurgle as his body convulsed, futilely trying to escape. But Hrelle held him close, fingers gouging out his eyes and ripping away his nose and ears as his teeth tore into him, again and again. \n\nThe smell of fresh flesh filled his nostrils, as did the hot blood over his own face, his fur and clothes. He crouched over Ortez, growling steadily as he watched the life spurt out of the Terran, blood running away along the cell floor in all directions, until the heart stopped beating.\n\nHrelle resisted the urge to swallow the first fresh meat he had tasted in nearly a year, spitting it out before looking around him, growling steadily at the horrified faces of Nitreek, Krihoq, all the others, the men and women who had pushed him into committing a senseless, needless murder today - and ended up with more than they bargained for.",
        "They were backing away.\n\nGood.\n\nAn hour later, the asteroid went on alert, as the freighter that had been docked had exploded shortly after departing. When the Breen came investigating the two dead bodies, Hrelle had calmed down enough to confess, fully expecting to be killed for it.\n\nInstead, he found himself sold to the Orions for their fighting rings...\n\n*\n\nShuttlecraft Sureswift, Planet Tau Beta VI:\n\nHrelle tugged at the sleeves of his civilian jacket, unable to close it fully over his belly, which grumbled loudly as if on cue, despite forcing himself to down a grapefruit for breakfast before they had entered orbit. He looked over at Sasha and Giles. \"I'm gonna kick Dr Ling's bony little ass when we get back. Mark my words.\"\n\nGiles offered a polite smirk. Sasha still appeared anxious. In the days since they had reconciled, the tension onboard had eased considerably: he had helped them prep for their Astrophysics Exam, acting as invigilator while the remote tests were provided - and resisting the urge to give them any hints. And once that had passed, they played games, and he regaled them with stories from his days on the Furyk - and his time with Sasha's mother.\n\nThe tension had returned when they reached the Tau Beta system and were granted clearance to enter orbit over the Nist outpost, awaiting clearance. The event was upon them. Hrelle resisted the urge to talk to Sasha about it, to maybe offer her a final chance to change her mind and have them leave.\n\nFor her part, she made no note about doing anything like that.\n\nLooking at her now, appearing so mature and composed, reminding him of Hannah... He reached under his shirt collar. \"Sash... may I offer this again to you?\"\n\nIt was the gold necklace, with the Hebrew symbol for life, Chai, that her mother once owned. He held it out to her, adding gently, \"If you don't want it, just say. Please don't do what you did before.\"\n\nHe relaxed as she nodded and fixed it around her own neck, tucking it down her blouse.\n\nNow he looked at Giles, appearing more confident. \"Prepare to beam us down, Mr Arrington.\"\n\n*\n\nHrelle had seen an Nist in the flesh before, but it remained a jarring experience to relive it: bipedal arachnoids with three pairs of arms, the second and third pairs protruding from behind the first one, their bodies covered in bristly black fur with three fingers on each hand, and their heads sporting a ring of beady black eyes over a flat mouth flanked by large chelicerae, which clicked as it spoke, its voder translating into Federation Standard. \"Welcome - Captain - Esek - Hrelle - Sasha - Hrelle - to - the - execution - my - designation - is - Escort - please - accompany - me.\"\n\nHrelle nodded, looking to Sasha to make sure she wasn't reacting adversely to the Nist, or the ones surrounding them in the Spartan surroundings of the outpost, as they followed the Escort, their footfalls echoing. The facility was designed for its builders, with curved walls and accessways above and below rather than on the same level, and seemed more spun than constructed.\n\nThey entered a larger area, where other Federation citizens were congregating. When the Sureswift arrived in orbit, there were other, civilian vessels in orbit, and these were the obvious passengers from them, all attendees to Giger's death, now milling about tables of food and drink. Hrelle grunted; he didn't know they catered executions.\n\n\"There - are - extensive - refreshments,\" the Escort continued, indicating with two of its arms. \"And - hygiene - chambers - beyond. - Do - not - leave - this - area - without - accompaniment. The - condemned - is - being - prepared - now - and - the - execution - will - commence - in - eleven - minutes - excuse - me.\"\n\nIt departed, leaving Hrelle to glance at Sasha. \"Are you okay?\"\n\nShe nodded silently, before noting the tables and moving towards them, though he doubted if she had regained any appetite since their arrival-\n\n\"Captain Hrelle?\"\n\nHe turned to face an older human couple, pale skinned and grey haired, the man holding out a hand to him. \"Yes, it *is* you! A pleasure to see you here!\"\n\nHrelle accepted the hand. \"A... pleasure, Sir.\"\n\nThe woman was holding onto the man's arm, offering a dry expression. \"He doesn't remember, Albert.\"\n\n\"I'm sorry, Ma'am-\"\n\nThe man tapped his own forehead. \"No need, Captain, it has been so long. We're Albert and Marie Labine.\"\n\nHrelle started. \"Nathaniel's parents. Of course, forgive me for not remembering!\" Memories of his first officer from the Furyk, of meeting them at the party in New Orleans before he shipped off to his new posting, returned to him. \"I'm sorry I didn't come visit after I escaped. I intended to, but-\"\n\nAlbert waved off his apologies. \"There was no need, Captain. We did get your letter, and we were very grateful for it, knowing that Nathaniel had died bravely, saving others.\"\n\nHrelle nodded politely, ashamed. Labine had died when his neck broke immediately after he, Hrelle and the rest of the bridge crew had been beamed away from the Furyk. It was purely accidental, though Hrelle had no doubt that the Bel-Zon would have killed him almost immediately afterwards. No heroics, no sacrifice. Just one of many pointless, senseless deaths that day. But when he did write that letter, he couldn't leave it that at, not to the parents of the man he himself had selected to be his first officer, only to lead him to a terrible, early death.\n\nSo... he embellished the truth. Never thinking he would see them again. So much for that. \"I- I wasn't expecting you here.\" That much was true.\n\nMr Labine nodded. \"We were at the Arvada III colony visiting Nathaniel's brother and his family. We were ready to return when the Nist message relayed to us, so we extended our stay and arranged for passage here.\"\n\nNow Mrs Labine reached out and took Hrelle's hand, clasping and holding onto it, her face a picture of gratitude and relief. \"Thank you so much for coming here, Captain. We knew you'd be here... because of your wife.\"\n\nHrelle swallowed. \"My daughter... she's here with me.\"\n\nThe old woman's face hardened in a way Hrelle understood... even if he didn't like it... as she replied, \"Good. She deserves to see that animal pay.\"\n\n\"Don't outlive your children, Captain,\" Mr Labine advised him. \"It's a special Hell.\"\n\n\"Yes...\" He drew back, suddenly and uniquely thankful that Sasha was here. \"If you'll excuse me, I should go see to her.\" He turned and walked to her. \"Hey...\"\n\nShe looked to him. \"What's wrong?\"\n\nHe indicted the Labines, who had thankfully moved on to meet other attendees. \"They were the parents of my first officer from the Furyk.\"\n\nShe nodded. \"Mr Labine... I remember him, his visits with you to Salem Four. I think he introduced me to Southern fried Pipius Claw...\" She smiled. \"I was sick all night.\"\n\nHe made an amused sound. \"Your mother was furious with him. There wasn't enough Cajun charm in the Galaxy to assuage her.\"\n\nSuddenly a signal sounded, attracting everyone's attention, as did a subsequent announcement. \"Please - enter - the - designated - observation - areas - immediately - do - not - leave - do - not - interfere - in - the - process.\"\n\nHrelle looked to Sasha and gestured her to follow the others into the shaded areas on the floor of the observation room. Hrelle looked around, counting around forty people, of varying ages and races, presumably all Federation citizens, presumably all related to people from his old ship like the Labines, or from Salem Four. Many had died because of Giger. But he never expected this many people, in this day and age, to come and witness something like this, like it was some medieval era.\n\nBut should he be that surprised? The need for vengeance ran strong in most species, no matter how civilised they - we - preferred to imagine otherwise. Oh, people might cloak it in justifications, in faith, in whatever else felt comfortable and desirable to protect themselves. Or they might just be honest about their savagery. Either way, it was disconcerting.\n\nHis attention was drawn to one of the Nist returning, drawing up to the group that Hrelle and Sasha was a part of. \"The - condemned - is - about - to - be - presented - you - will - have - an - indeterminate - period - to communicate - with - him - but - you - cannot - make - physical - contact.\"\n\n\"Excuse me,\" Hrelle started. \"May I ask how... how the condemned will... will die?\"\n\nThe Nist didn't move to face him, but Hrelle imagined one of the beady black eyes that ringed its round bristly head was fixed on him as it replied, \"It - may - be - cardiac - failure - or - shock - or - general - trauma - it - cannot - be - determined - until - incubation - commences.\"\n\n\"Incubation?\" He glanced at an equally bemused Sasha.\n\nBefore he could enquire further, everyone looked up to see a large transporter energy column appear, leaving in its wake a transparent globe two metres in diameter. The attendees moved around it, getting a good, unobstructed view of the sphere and its contents - or rather, its inhabitant: a naked human male, older, pale-skinned, thin-framed, balding but its body hair greying and skin sagging.\n\nAnd instantly recognisable to Hrelle; his breath caught in his throat-\n\n\"You've resisted quite well, Captain,\" Giger taunted. \"I wonder where your strength lies. It wasn't in your claws, since we removed them. Your fangs? Perhaps we shall remove them like we did your claws.\"\n\n\"F-F-F-Fuc-\" Hrelle screamed again from another wave of pain, biting down and drawing blood from his tongue and inner cheek, coughing and sputtering, his stomach twisting so hard, wanting to bring up contents that weren't there. His brain was on fire, his eyes veiled with red.\n\nThe pain stopped, but the pounding in his ears continued. Dimly he became aware of Giger rising and approaching, dropping to one knee, offering a smile that never reflected in his eyes. \"Your tail, perhaps? I understand it helps with your balance, but maybe it's more? Let's see, shall we?\"\n\nNo. NO-\n\n\"Dad?\" Sasha was looking up at him, clutching his forearm.\n\nHrelle forced himself to relax his body, but he never took his eyes off the man who stood in the globe like some zoo specimen, appearing unaffected by either his unclothed state or his imminent death, the sphere just large enough to let him stand and turn in place. The witnesses seemed to silently draw closer - until he spoke, his voice loud and clear and defiant. \"Go on! Get a good look now! It's what you all came for!\"\n\nHe laughed as he spread his arms out and turned in place - but stopped and stared at Hrelle, eyes and grin wide. \"My dear Captain! What a pleasure to see you again! You're looking far fitter than at our last meeting, when I had you tailless, pissing yourself and begging for mercy! Remember? I do. Oh, the stories I could tell you about how I spent the money we made from you and the Salem Four job!\"\n\nHrelle didn't respond, didn't move. He could do this. He could do this.\n\n\"I see you didn't grow the tail back,\" Giger continued taunting. \"The Counselors must have enjoyed analysing the reasons behind that.\" Then he seemed to notice Sasha. \"Ahh, your daughter, I presume? What a lovely young woman she's turned into, all firm and ripe. Thank you for coming, my dear. It'll be a pleasure to have you in my sights in my final moments.\"\n\n\"Kill him already!\" someone in the crowd shouted, joined by others making similar demands or just sounds of agreement. Hrelle saw Sasha scowl, red-faced by Giger's obscene gesture, but he said nothing.\n\nGiger turned around in his globe again. \"Oh don't worry, I'm sure however the Nist have chosen to kill me, it will entertaining enough for all of you fine people! Then you can go back to your nice, quiet, civilised lives and convince yourselves that you're superior to me!\" He faced Hrelle again. \"But they're not. Are they, Captain? We both know better. I made you face what you are, what they are, what we all are: animals. Self-serving animals.\" He leered at Sasha again. \"By the time I was done with your stepfather, he'd have raped and killed your mother to stop the pain. He'd have raped and killed you, too. Don't believe me? Ask him yourself.\"\n\nThen he winced, clutching his stomach, looking confused.\n\n\"Why aren't you killing him?\" someone else demanded of the Nist. \"When is the execution starting?\"\n\n\"It - has - already - begun,\" one of the arachnoids replied. \"Completion - is - imminent.\"\n\nHrelle looked to Sasha, then examined the sphere, wondering if toxins or biological agents were being pumped into the sphere. But he didn't see any mechanisms. He turned to the closest Nist again. \"What did you mean before by 'incubation'?\"\n\nNow the Escort faced him directly. \"The - eggs - were - injected - into - the - condemned - as - he - slept - they - are - hatching - now.\"\n\n\"Eggs? What eggs?\" someone nearby asked.\n\nHrelle suspected, but didn't dare voice it.\n\n\"Our - eggs,\" the Escort replied simply. \"Once - our - males - sacrificed - themselves - to - feed - the - newly - hatched - larvae - now - we - use - livestock - or - we - use - condemned.\"\n\nHrelle's stomach dropped, his gaze returned to Giger, who was listening, unaware until now about the manner of his death. His eyes were wide, sweat beading on his face and back as he tried to straighten up, only to double over, crying out in agony. \"N-N-No- please-\"\n\n\"How... How can you do that?\" Sasha murmured, unable to look away.\n\nIf the Nist had an approximate emotion to most humanoids, it would have been mild confusion. \"The - condemned - stole - many - lives - now - he contributes - towards - life. It - is - a - balance.\" It continued to watch placidly. \"The - larvae - are - voracious - and - will - consume - all - of - the - remains - before - they - pass - into - a - less - dangerous - stage - and - are - released - from - the - hatchery.\"\n\nGiger dropped to his knees, shaking, soiling himself, choking and screaming - and fixing his gaze on Hrelle again, not with scorn now, but terror. \"C-Captain- H-Help me- please- I can feel them inside me- burrowing-\"\n\nThe spectators were protesting now, crying out, looking away, some appearing faint, while the Nist appeared thoroughly confused by the reaction to what was, to them, a perfectly natural part of both their life cycle and their justice system.\n\nGiger lay sprawled at the bottom of the sphere, covered in his own filth, his limbs twisting in inhuman directions, his voice hoarse from crying out in agony. If he looked close enough, he could see the newly-hatched Nist larvae crawling beneath the man's skin, eating away at all his soft tissue.\n\nAnd Giger never took his eyes away from Hrelle's direction.\n\nSo Hrelle looked away - and down to Sasha, who was staring, white as a sheet, horrified, her mouth open, her breathing rapid. \"Sash- look away- please-\"\n\nBut she didn't. And he saw the reason in her eyes: she wanted to keep watching, not out of any sadistic need to see the killer of her mother suffer, but because as much as she did want to turn away and leave, she had made such an effort to be there, she was forcing herself to see it through to the end. Punishing herself.\n\nAround them, the spectators were louder now in their protests and cries of dismay, as the larvae began chewing their way out of Giger's body from a dozen different directions, making blood squirt out here and there, while he remained alive, and aware.\n\nFinally Hrelle could stand no more, slapping the combadge pinned to his shirt. \"Giles! Beam us up, now! Sasha first! HURRY!\"\n\nSasha looked to him, at first appearing to be ready to protest - but that quickly vanished. As did she, in a transporter sparkle.\n\nHe stood alone there, in the chaos, giving Giger a final look.\n\nThe man's eyes were wide and dead, but his mouth was opening, his tongue emerging, as if to offer a final taunt.\n\nBut it was just another larva emerging, its tiny jaws working furiously to clear a path up to Giger's eyes.\n\n*\n\nUSS Sureswift, Orbiting Tau Beta VI:\n\nGiles had been sitting in the cockpit, running further checks on the other orbiting ships, especially the Nist, which had heavily scanned them upon their arrival. Captain Hrelle had assured him that they would honour the conditions of the treaty and not cause any trouble - but if they pulled some trick like demanding to board for an 'inspection', he was to gird his loins and stand his proverbial ground.\n\nHis thoughts returned to his conversation with his father. He should tell Captain Hrelle about it all. Maybe after they return from the planet- \"Giles! Beam us up, now! Sasha first! HURRY!\"\n\nNot stopping to respond, Giles' fingers danced over the transporter controls on the appropriate panel, turning around to see the transporter pad light up, the columns of energy dance, before Sasha appeared, looking ashen, distraught, stepping off the pad, taking a deep breath, looking at Giles once before turning and charging into the toilet, dropping to her knees before it and throwing up, her legs sticking out and preventing the door from closing.\n\nGiles returned to the transporter panel, and seconds later, Captain Hrelle appeared, stepping down. \"Sir! Is it an emergency? Should I raise shields?\"\n\nThe older man looked ashen as well, even through his fur, but he shook his head, sounding calmer than he did before. \"No. Not an emergency. Get her some water.\" He turned and knelt outside the toilet, reaching in and drawing back her hair and reaching for tissue while Giles conjured up a glass of water from the nearby replicator. Hrelle accepted it and set it near to the girl, before rising and motioning for Giles to follow him back to the cockpit, both of them taking seats, Giles staring at Hrelle and Hrelle staring out the window at the edge of the planet.\n\n\"Sir,\" Giles finally ventured, \"Did something... something go wrong?\"\n\nHrelle breathed in and out, before finally replying slowly, blankly, \"That depends on your definition, I guess. The Nist execute prisoners by implanting their eggs into them, which hatch into larvae that consume the body from within. While the prisoner is still alive and awake. And very much aware of what's happening to him.\" His fingers moved up and rubbed at the sockets of his eyes. \"From what we saw, that part went well. I suspect their public relations department will be working overtime, however.\"\n\nGiles felt his jaw drop; just the way the Captain described it was horrifying. To have seen it in person, happening before their very eyes... he looked back to the aft, seeing that Sasha had risen up and entered the toilet fully, closing the door. \"That sounds...\"\n\n\"Barbaric?\" Hrelle stared out into the Universe. \"Maybe. But is it any less barbaric than a phaser to the head, or a lethal injection... or a snapped neck? Other methods may be quick and relatively painless, and may make the execution seem all clean and civilised, but the condemned is still going to end up dead.\" \n\nHe grunted. \"There were so many Federation people there, Giles. More than I expected. People from our humane, sophisticated, advanced society, all assembled to see the death of another living, sentient being. They'd journeyed dozens of light years for it. Maybe those who crave the life of another should be made to do it with their bare hands.\" After a moment, he added, \"Like I've done.\"\n\nGiles looked to him, confused. \"Sir?\"\n\n\"When I was a slave, I killed others with my bare hands. Well, my bare hands and... my teeth. It is a... visceral, intimate experience, to feel their blood splatter on your face, to see the life pump out of them...\" He looked at Giles. \"Some humans like to make jokes about Caitians being no better than animals. If they had seen me at those times...\"\n\nGiles sat there, stunned by the revelation, literally not knowing what to say.\n\nThen Hrelle seemed to recover, shaking himself out of it. \"I'm sorry, Giles, I shouldn't have told you that. Forget what I said, okay? Initiate departure procedures. We've been away from home long enough.\"",
        "\"Aye, Sir.\" Giles forced down a hundred questions - and some apprehensions - as he went through the appropriate checks and sent the correct signals, until he finally got the nod from Hrelle, and took the shuttle to warp speed, taking her up steadily until they reached a sustained 9.5.\n\nBoth of them turned, Hrelle rising as they saw the toilet door open, and Sasha emerge, trembling, holding onto the adjacent wall for support. \"Daddy?\"\n\nHrelle approached, reaching out for her. She raced into his arms, and he embraced her as she sobbed.\n\nGiles looked back into the starfield ahead, pretending not to be aware of the moment between parent and child. And pretending not to wish the same for himself. \n\nJust as he pretended not to think about how much his father would love the information Hrelle had just provided about himself. He wondered if it had come out in the briefings already. They would have been very thorough.\n\nPerhaps they had. So it wouldn't really be a bad thing to mention it.\n\nWould it?\n\n*\n\nThe Captain put Sasha into the sleeping compartment and stayed with her for a few minutes, before returning to the cockpit. \"Sir? Is Sasha-\"\n\nHe nodded gratefully. \"Feeling a little better, thank you.\"\n\n\"Good.\"\n\n\"And thanks again, Giles.\"\n\n\"For what, Sir?\"\n\n\"For coming along. For being here. And for putting up with this old bastard. Not exactly what you signed up for, I'm sure.\" He regarded him curiously. \"What's up?\"\n\n\"Up, Sir?\"\n\n\"You look like you have something to say. Anything on your mind?\" \n\nGiles flushed. \"Me? Um... no, Sir. Nothing.\"\n\nHe sat down with a grunt. \"Well, if I wasn't taking over from you shortly, I'd be getting blind stinking drunk.\"\n\nGiles nodded. \"Given what you saw, Sir, no one would blame you. If you- If you *did* want to skip a shift to do that, I wouldn't mind-\"\n\n\"Thank you, but I'm the one who's supposed to be setting a good example for all you brats.\" He breathed out. \"Why don't you clock out early? Go in with Sasha, talk to her, get yourselves some food.\"\n\n\"Are you sure?\"\n\n\"Of course. I'll keep myself busy up here for a few hours, maybe work up an appetite again.\"\n\nGiles nodded, rose and departed, taking a deep breath before entering the sleeping compartment, quickly closing the door behind him as it was dark inside and he didn't want to wake her.\n\nIt wasn't totally dark, though; as his eyes adjusted, he could see there was a small light from a PADD screen on the floor, and he could see Sasha sitting up on the bunk, her legs tucked under her her back to the wall, her eyes staring at nothing, never looking up at him.\n\n\"If you want to be alone-\" he ventured.\n\nShe shook her head, reaching out and patting the bunkspace beside her.\n\nHe accepted the silent invitation, staring in the same direction as she was, at nothing in particular. \"Your Dad- your stepf- the Captain told me about what happened. I'm... I'm sorry. It must have horrible.\"\n\n\"Yes. It was. But I don't want to talk about it.\" She began unbuttoning her blouse.\n\nHe watched from the corner of his eye, before starting to rise. \"I'll- I'll let you get some sleep-\"\n\nShe slipped out of her blouse; her mother's medallion, dangling between her breasts, caught the meagre light, as did the plain white material of her bra. She reached out for him. \"I'm not sleeping.\" Sasha took his hand, moved it up to her face, the side of her head. \"I need you.\"\n\n\"Wh- What- No, wait-\"\n\nShe twisted in place to face him, reaching up and clasping his face, drawing him into a kiss before he realised it. He froze, for a moment.\n\nAnd then responded.\n\nHis arousal stirred, and after their tongues met and lips ground, he pulled back, gasping. \"Sash- are you sure-\"\n\nShe nodded, looking almost pained, but still undressing. \"Don't worry, I'm in my right mind, Giles, I promise... I need you... I need to feel something other than this horror sitting in my belly... I need to feel alive. Please help me feel alive, Giles.\"\n\n\"Sasha...\"\n\nShe smiled. \"And I know you want it, too...\"\n\nThen she reached down for him.\n\nFurther protest was lost.\n\n*\n\nIn the cockpit, Hrelle tried his best to focus on the controls, on the starfield, on his grumbling stomach. On anything other than what he could plainly hear happening in the sleeping compartment a metre away, despite the door being shut. His superior hearing was usually a boon rather than a burden,. Now he couldn't even summon his meditative powers to distract himself.\n\nAmong his people, adults and cubs were open about their sexual appetites and activities; with their enhanced senses, and the Seasons that their females underwent on a regular basis, it was foolish to be coy about the subject the way many humans were. But Sasha wasn't Caitian. She was an adult, though, and entitled to do what she wanted. And after all she had been through that day, he couldn't bring himself to interrupt them. It was something she needed now; she earned that much.\n\nAnd then there was that business with Giles secretly speaking to his father on that communicator. Hrelle heard that too. He suspected something like that had been arranged following the visit from Lucille Arrington, and had hoped the boy would open up about it; he had given him the chance more than once. What in the Seven Hells was he gonna do about that?\n\nHe really needed a drink...\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... SECRETS AND LIES"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "starfleet academy",
        "starship",
        "alien11111",
        "fanfiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-the-nist-sanction-ch-03"
}