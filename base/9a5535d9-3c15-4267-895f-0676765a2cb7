{
    "title": "Unbreakable Bond Ch. 06",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nChris Donovan vs. Shane Lewis \n\nDedicated to All of you lovely fans. I adore you guys. Wishing all of you a Merry Christmas & a sex-filled 2015.\n\nSizzling encounters! \n\n***\n\nWhen Chris got to his office that morning, Kyle was already there, waiting for him.\n\n\"Dude, what the fuck do you want here this early morning?\" Chris asked with surprise.\n\n\"We need to talk. Sit.\" Kyle's voice was clipped.\n\nChris raised an eyebrow at his friend's tone but he dropped into the comfortable seat opposite the couch Kyle was sitting in. \"Okay, what is it?\"\n\n\"Shane Lewis.\" Kyle said simply, making Chris groan. \"You have to be careful, Chris.\"\n\n\"What do you mean, be careful?\" Chris asked with a frown.\n\nKyle pushed forward to sit at the edge of his seat and stared intently at Chris. \"I know you feel guilty because of what you did to the guy years ago but please, don't let the guilt blind you and make you do something that you're not ready for.\"\n\n\"I'm not doing anything I'm not...\"\n\n\"Listen to me Chris.\" Kyle cut Chris off. \"I will be the first person to agree that what you did was wicked and shitty but hey...big deal. You were a kid for fuck's sake. You can't punish yourself for the rest of your life. From where I stand, you're trying very hard to be what you're not just to please Shane because you feel you owe him something.\"\n\nChris shook his head slowly. He'd actually been expecting this talk from Kyle since he asked Aaron for pointers on gay sex two weeks earlier. Chris wondered why it had taken Kyle so long. \"That's where you're wrong, Kyle.\" He rasped. \"I'm not trying at all. And that's what scares me.\"\n\n\"What...?\" Kyle looked confused. \n\n\"Whatever I'm doing, I really want to do it.\" Chris said quietly. \"I...I enjoy it.\"\n\n\"Have you...\"\n\n\"None of your fucking business but, no. Not yet.\" Chris growled, knowing exactly what his friend had been about to ask. \"Let's just say the little I've done felt so fucking good, I want to do it over and over again.\"\n\nThe two friends stared at each other. Whilst Chris' grey eyes showed clearly how confused he was, Kyle's was full of worry and resignation.\n\n\"How do you feel about him?\" Kyle asked softly.\n\n\"What are you? A shrink?\" Chris growled.\n\n\"Chris...\"\n\nChris gave a helpless shrug and covered his face with his hands. \"I don't know, man.\" He groaned, and uncovered his face. \"Yes, I feel a lot of guilt but there's also this feeling of...contentment, joy...and fulfillment whenever I think of him or I'm with him. Do you understand me, Kyle?\" Chris asked but didn't wait for Kyle to respond. \"I don't know how to describe the exact feeling but...the thought of not being with him, or never seeing him again hurts right here.\" Chris rubbed against his chest. \"I just feel...incomplete without him...like there's something missing.\" Chris whispered. \"Does that even make sense?\"\n\nKyle cleared his throat. \"It makes perfect sense.\" He said, knowing exactly what his friend was experiencing. Aaron had been right after all. Chris was hopelessly in love with Shane. But he didn't want to spell it out to Chris. \"Do you have any idea how he feels?\"\n\nChris shook his head slowly. \"I mean it's obvious he likes me but I don't know he feels. It's very difficult to read him, Kyle. I don't...I don't know how serious he is about this. I don't know whether he's merely having fun. Hell, I don't know whether he's setting me up only to pay me back. I just don't know.\" Chris groaned. \"But I don't care. I just want to be with him...want to make him happy.\" He added in a whisper.\n\n\"Damnit Chris.\" Kyle growled. It was obvious Chris was hurting and Kyle was pissed at how helpless he felt.\n\nChris gave a humourless laugh. \"You see...I'm terrified he's going to crush my heart, but I don't want to slow down. I don't know how to stop the way I feel about him. Kyle...\"\n\n\"Talk to him, Chris. You have to know how he feels about you. I know you feel because of what you did, he has every right to use you or toy with your feelings but that shouldn't be the case. You can only know where he stands if you ask him, Chris. Talk to him. Okay?\"\n\nChris nodded. \"Okay.\"\n\n\"You're both adults. You shouldn't be scared to talk about how you feel. We're worried about you. Damon is not happy. I don't know exactly what he saw but...he kinda thinks you need rescuing.\" Kyle smiled for the first time since seeing Chris that morning.\n\n\"Come on, I'm fine.\" Chris chuckled, knowing exactly why Damon thought that. He knew he had to talk to the guys. Let them know he was okay. They were his family.\n\n\"Good.\" Kyle stood up and turned towards the door. \"See you tomorrow...\" It was a question.\n\n\"Can't. But you'll see me next week. I promise.\" Chris said in a soft voice. He missed his boys.\n\n\"Okay.\" Kyle nodded. \"We miss you.\"\n\n\"I know.\"\n\n\"Talk to him, Chris.\" And with that, Kyle was gone.\n\nAnd even as Chris got ready for his meeting, Kyle's words kept ringing in his mind.\n\n***\n\n\"Sir, Mr. Shane Lewis is here to see you.\" Chris froze when he heard what his personal assistant had to say. He looked up at Amanda, his sexy PA, wondering why she had chosen to come into his office to give him that message instead of merely informing him on the intercom.\n\n\"Did he just get here?\" Chris asked, clicking 'send' on the mail he was sending.\n\n\"He's been here for the past...\" she paused to look at her wrist watch, \"two and a half hours...\"\n\n\"What?\" Chris' eyes widened in shock. Why was Shane looking for him in his office? Whatever it was must be very important if he actually waited all that while just to see him.\n\n\"He came in whilst you were meeting the project team.\" Amanda said. \"He said he knew you were busy and insisted I shouldn't interrupt your meeting.\" \n\nChris stood up just as his phone started to ring. \"Show him in.\" He said curtly, picking up the phone. \"Oh hello Cyrus. Listen, I'll get back to you shortly please.\" He told the person on the line and hung up.\n\nChris got to the door just as it opened and Shane stepped in. Before he could open his mouth to say a word to the gorgeous hunk standing in front of him, Chris felt himself being pulled into the tightest embrace ever. Shane's arms wrapped tightly around Chris' waist as he buried his face in the crock of Chris' neck and held on as if he was never going to let him go. Chris noticed two things at the same time... Shane was shaking like a leaf. And from his harsh breathing, the man was virtually on the edge of a breakdown. Confused and totally scared, Chris wound his arms around Shane's shoulders and hugged him right back. \n\n\"What is it, baby?\" He murmured softly, one hand cradling the back of Shane's head. \"Talk to me.\"\n\nBut Shane's trembling only intensified. Chris' heart pounded with worry. Damn Amanda for not telling him earlier when Shane showed up. To think Shane had actually been waiting for him in that state was disheartening, \n\n\"Shhh... I've got you.\" Chris murmured soothingly, rubbing Shane's back with one hand. \"Everything's going to be fine.\" He kept reassuring Shane though he didn't know what the problem was.\n\nEventually Shane's trembling ceased, and his pants slowed down. His heartbeat was still all over the place though. When he spoke, his voice was so soft, Chris almost didn't hear him.\n\n\"I forgive you, Chris.\" Shane said in a voice filled with so much emotion. \"I forgive you from the very depth of my soul. I mean it, Chris.\"\n\nChris went still. He'd been waiting to hear those words for so long but now that he had, all he felt within was dread. \n\n\"What happened to not ever saying those words to ensure I keep coming to you?\" The confused anguish in Chris' voice couldn't be masked. What was going on? \"Don't you want me to...\"\n\nShane knew what Chris was about to ask. \"If you stop coming to see me, I'll come to your house every day, Chris.\" Shane rasped. \"I guess it's my turn to do the stalking.\"\n\nChris had never heard anything more beautiful. \"You don't know my house.\" Chris actually sounded dazed.\n\n\"Wanna bet?\" Shane chuckled.\n\n\"Oh fuck!\" Chris whispered. \"What brought this on?\"\n\n\"Don't ask.\" Shane almost growled. \"I don't wanna think about it.\" \n\nWith that Shane turned them around and pushed Chris' back against the door. And right there in Chris' office, Shane hungrily devoured Chris' mouth with a deep, wildly aggressive kiss. By the time Shane released him, Chris was boneless and shaking.\n\n\"God, I missed you.\" Shane murmured against Chris's parted lips. \"Why did you have to leave?\" Shane murmured against Chris' ear, his breath, just like Chris, coming out in pants. \"Did I do something wrong? Tell me Chris. Last night did I...\"\n\n\"Oh God, no Shane.\" Chris groaned, cupping Shane's cheeks in his palms. \"You did nothing wrong.\"\n\n\"Do you regret what...\"\n\n\"I don't regret what happened. I've never been blown away with a more...gut-wrenchingly gripping encounter. It was beyond my expectation, Shane. It...\" Chris trailed off, shaking his head slowly.\n\n\"What?\" Shane asked in a whisper.\n\n\"It shook me to the very core.\" Chris whispered back. He couldn't believe he was actually telling Shane his very inner thoughts but he wanted to be as honest with Shane as possible. \"I...I've never felt like how I felt. It was amazing.\" \n\n\"So what was the problem?\" Shane asked softly.\n\nChris groaned and looked up at the white ceiling of his office. This was it. \"I...I don't know how you feel about us and that is killing me, Shane.\"\n\n\"Chris...\"\n\n\"Please.\" Chris whispered. \"You asked.\" At Shane's nod, Chris took a deep breath. \"This is not the place to have this talk.\"\n\n\"You're right. Let's get out of here.\" Shane whispered but before he could move, Chris leaned in to capture his mouth in a toe-curling kiss. A kiss that expressed exactly how he felt. It screamed joy, gratefulness, relief and soul.\n\n\"Thank you, Shane.\" Chris breathed against Shane's moist lips when he broke the kiss and came up for air. Then he went right back to kissing him. They only broke away from each other when Chris' intercom started going off. \"You're such a bad influence.\" He murmured against Shane's lips and moved to his desk. \n\nIt was Amanda. \"Yes?\"\n\n\"Sir, you have a meeting with Ama Potello & Co. in the next forty-five minutes. \n\n\"Please cancel all my meetings for the rest of the day, Amanda. Thanks.\" Then he turned to look at Shane. \"Can we grab a quick lunch in town before we go home?\" Chris asked, making Shane smile. He loved the fact that Chris called his place home. \n\n\"Okay with me. Where do you want to go?\" Shane asked. \n\n\"Let's do Italian. Villa Montecello will do.\" Chris suggested. He'd been craving their food since Aaron mentioned them the other night.\n\n\"Cool. Shall we?\"\n\n\"I'll be right behind you.\"\n\n***\n\nThe two men got a lot of stares in the restaurant, not because Shane was recognized, but rather because they were both undeniably striking. Both Chris and Shane ignored the stares as they enjoyed their lunch. But they weren't left alone as people who knew Chris kept stopping by their table to talk about one thing or the other. By the time they left the restaurant, it was already late. \n\n\"What a waste of time.\" Chris murmured as they left the restaurant. \"Thank God, it's Friday.\"\n\nShane chuckled. \"Well, somebody wanted Italian food.\" \n\n\"Yeah, see where that got us.\" Chris laughed, opening the door to his car. \"Catch you later.\"\n\nChris got to Shane's home about five minutes before Shane did. He went directly to the den to pour himself a drink. He did pour one for Shane, which he handed over to him when Shane entered the den not too long after him.\n\n\"Thanks.\" Shane said. \"Come on, let's go change out of these clothes.\"\n\nChris followed Shane up the stairs to Shane's bedroom. Shane had gotten him sweats, jeans, polo-shirts and t-shirts that he could change into whenever he came around. After getting into comfortable outfits, both men went down to the living room to relax on the couch and talk. Chris sat with his back against the armrest of the couch and one of his legs on the seat. Shane chose to sit in between Chris' thighs with his back against Chris' chest. He relaxed so that his head was on Chris' shoulder, sighing when Chris circled his waist with his arms.\n\n\"Now where were we?\" Shane turned his head to drop a quick kiss on Chris' neck, and then folded his arms over Chris'. \"What was that about not knowing how I feel, killing you?\" Shane asked softly.\n\n\"Exactly what it means.\" Chris sighed.\n\n\"Do you honestly don't know how I feel about you?\" Shane's voice was quiet.\n\n\"I don't know what to think, Shane.\" Chris groaned. \"I know you apologized for what you... said in your office that day but...\" Chris trailed off when he felt Shane stiffen against him.\n\n\"Tell me what is on your mind, Chris. I think we're past keeping things bottled up. We should be able to say exactly what's on our mind.\"\n\n\"At the risk of the other getting angry?\" Chris asked softly.\n\n\"No matter what, Chris. Not even anger must stop you from saying what's on your mind. We've gone past the worst don't you think?\"\n\n\"If you're sure. I know I don't have any right to expect anything from you but I need to know how you feel about...this...me. I have really strong feelings for you and I think whatever we do is beautiful and special but you...maybe you see it as a mere means of getting off. I know everyone has their own interpretation to things and I'm the last person who should have a right to talk about feelings but...\" Chris trailed off.\n\n\"You need to know whether I take what is happening between us as seriously as you do.\" Shane concluded for him quietly.\n\n\"Yes.\" Chris responded.\n\n\"So these were the thoughts that got you so restless last night.\"\n\n\"Uh-huh.\"\n\nShane nodded. \"So what finally made you decide to leave at that ungodly hour?\" Shane asked.\n\nChris gave a deep sigh. \"One moment I was worried about how you felt about me, then the next, I was wondering how terrible you must have felt when I gave you a lot of pain after you had given me so much pleasure. Shane, I'm so sorry.\"\n\n\"It's all in the past now. Try not to think about it.\" Shane said quietly. \n\n\"Well, I can't not think about it.\" Chris retorted, getting angry. \"It's not been easy being around you all this time...being reminded every second of what I did. Yes, you were the victim but I've also had to live in my own hell and there's nothing as draining as guilt. So when I suddenly find myself having all these feelings and then you say something like that, I just don't know what to think. You probably said that in anger but a part of you must have believed that for it to have come out that way and that scares the shit out of me. I just need to know whether I should guard myself and just see this as fun or keep letting myself go as I'm doing. It could be that you're only setting me up as payback. You have every right to do that, Shane. Really. But Shane please. With the way I'm feeling already, I won't survive it if you lead me on only to squash everything. Thank you for forgiving me but...I need to know how you feel about all this.\" Chris finished in a whisper. He'd bared his very soul to Shane. Shane could choose to trample on it or put his mind to rest. \n\nShane could feel Chris' heart pounding against him and almost groaned. He turned his head and pressed a kiss against Chris' lips. \"Before I go into how I feel about us, there's something you need to understand, Chris. What happened all those years ago, shaped a great part of my life. Hell, it shaped my whole life because even your cruel words made me strive to make something of myself. Thanks for that. But the other part of my life...the greater part, was affected negatively by what happened. Though I know you were just a kid and didn't know any better, I'm only human. I'm bound to get bitter sometimes. Even though I've told you I've forgiven you, don't be surprised if I make references to it sometimes. I'll try not to. But like I said, I'm human...and I'm bound to do that sometime. Please don't let that make you feel like I haven't forgiven you or that I have a hidden agenda to pay you back. Because I don't.\n\nAbout the silly comment I passed. Yes, I was angry and upset but I shouldn't have said that because I've never experienced anything so agonizingly exquisite like that handjob. That phone sex, was totally off the fucking hook. And that blowjob...let's just not go there. Every experience with you has been beautiful and special for me too. What I said was wrong and I'm sorry. And I'm sorry for not being man enough to admit what is so obvious.\"\n\nChris swallowed hard. \"What's that?\" He croaked. \n\nShane smiled and Chris was suddenly a kid again...back to that point in his life when he realized that love didn't follow any rules, the point when he understood that no one, except Nick Lewis would ever have his heart.\n\nShane turned around and straddled Chris, thighs, looking directly into Chris' eyes. \"Wanna know how I feel about you?\" Shane asked quietly. \"You fucking own me, Chris. I don't know how you do it but without you, I'm lost. You stir my soul. I can't even conceive life without you. That's how strongly I feel about us.\"\n\n\"Shane...\" Chris uttered, his voice so guttural he didn't recognize it as his own. He was totally floored by Shane's heartfelt words.\n\n\"I love you, Chris.\" The words tore out shakily from Shane as irrepressible vulnerability rocked through him, flashing across his gorgeous face. \"I never stopped. I...I don't think I'll ever love any other person like that...ever.\" For once, Shane didn't try to mask how he felt. From the shocked look on Chris' face, he knew Chris could see into his very soul but he didn't care. \"I don't think I can stop even if you tell me to.\" Shane's eyes were suspiciously bright, causing a tightening around Chris' heart. \"I'm yours if you want me, Chris. But I'm not going to let you play games with my heart.\" He added in a fierce whisper. \"Got that?\"\n\nChris swallowed past the huge lump in his throat. Then he nodded jerkily. \"Loud and clear.\" He croaked. \n\nShane nodded. \"Good. Because for years, my heart has felt as though it no longer belonged to me. It felt as if it had been stolen, torn from my chest by someone who wanted no part of it. It's the shittiest feeling ever and I never want to feel like that again.\"\n\nChris opened his mouth but nothing came out. He felt like he'd been physically struck. It was a good thing he was already lying on his back, or he'd have fallen down. In just a few words, Shane had succeeded in bringing an intense feeling of both joy and pain into Chris' heart. But Chris understood Shane perfectly. It was only a fool who would jump into a relationship without laying the cards on the table after getting so badly burnt. And Shane was no fool.\n\n\"I would die before I ever hurt you again.\" Chris' voice was barely a scrape of sound. But Shane heard him perfectly.\n\nShane's breath hitched in his throat at Chris' words because thanks to Damon, he knew just how seriously Chris meant that. He quickly leaned his forehead against Chris' with a groan. \"If you ever do anything to yourself on my account, I'll find a way to bring you back, and then kill you myself. Slowly and painfully. I've never been more serious about anything, Chris. I would rather you hurt me all you want and live in this world with me, than make me happy and then check out. I can't take that, please.\" Shane was shaking as he spoke, scaring Chris. \"Chris, promise me.\" Shane was almost on the verge of tears.\n\n\"Promise you what?\" Chris looked bewildered.\n\n\"That you'll never do anything to hurt yourself.\" Shane rasped.\n\n\"I...\" Then it dawned on Chris. \"Did you talk to Damon?\"\n\n\"Just promise me, Chris.\"\n\nChris gave a deep sigh, finally understanding why Shane had been so out of it in the morning. \"I won't do anything to myself.\" Chris drew Shane into his arms and hugged him tightly. ",
        "\"What the fuck were you thinking, you moron.\" Shane groaned into the crook of Chris' neck where his face was pressed. \n\n\"I wasn't. I just wanted to end the pain I was feeling.\" He murmured. \"And I'm going to kill Damon.\" Chris growled.\n\nShane raised his head and looked at Chris with a slight frown on his handsome face. \"He was only looking out for you.\" He said softly. \"Listen, things happen when people are in a relationship, Chris. They may hurt each other unintentionally. It doesn't mean they don't love them. If we ever hurt each other, I would rather we talk about it and resolve issues okay?\"\n\nChris laughed softly. \"Dude, I'm not suicidal.\"\n\n\"I don't care. Just talk to me no matter how bad it is. Please.\"\n\n\"I promise.\"\n\n\"Thanks.\" Shane leaned forwards and pressed a kiss to Chris' lips. \"Now, shall we hit the gym?\" Shane said getting off Chris' thighs. It was not every day a person got to bare his soul. Shane needed a good workout. And from the way Chris looked, he needed it even more.\n\n***\n\nAfter a thorough workout, both men went to the kitchen for some snacks. Chris had said very little since Shane's declaration of love. Much as he didn't know what to say, he couldn't stop looking at Shane. To say Shane's words had shocked him was an understatement. He was totally floored. The emotions swirling within Chris were so overwhelming he didn't know how to articulate it. So he kept quiet.\n\n\"Okay, spill.\" Shane finally chuckled when he turned around from the fridge to find Chris' eyes on him.\n\n\"What?\" Chris whispered.\n\n\"You keep...\" But Shane trailed off when his phone started ringing. He looked at the caller id and groaned. \"Never mind. I'll take this in the study. You can head on up for a shower.\" Shane stopped in front of Chris to drop a quick kiss on his mouth. \"See you in a bit.\" With that he left the kitchen, leaving a still overwhelmed Chris staring after him.\n\nAs the water poured over Chris, his mind kept repeating what Shane had said. He still couldn't believe Shane had told him he loved him. Fuck! Much as his heart was filled with joy, he couldn't help but feel he didn't deserve Shane's love. He felt shaken. After standing under the shower for a very long time, Chris got out and dried himself. He needed to talk to someone...anyone. His pals were out of the question because he wasn't ready to listen to their questions and complaints about him not showing up to their Saturday get-togethers. Well, he could talk to Tyron, Chris thought. Tyron was out of the country on a mission so he didn't know what was going on and would therefore not question him. Chris reached for his phone.\n\n\"What's happening?\" Tyron boomed immediately he picked up.\n\nChris chuckled. \"Fool. Does something have to happen for me to call you? What's up?\"\n\n\"Nothing much. We're almost done here. Shipping out next week. Will see you guys on Saturday. Hey you cool?\" Tyron asked, his voice full of concern.\n\n\"I'm good. Why do you ask?\" Chris frowned. Was he that obvious?\n\n\"Dude, I know you. Do you wanna talk about it?\"\n\nChris went quiet for a moment, and then gave a deep sigh. \"No.\"\n\n\"Get ready to spill when I get back. In the meantime, you're not going to believe this bitch who's giving me attitude here. The only thing stopping me from going ballistic on her is that fine arse. Damn!\"\n\nChris burst into laughter just as Shane entered the room and headed straight for the bathroom. \"You're such an asshole.\" Chris said, feeling better already.\n\nThe two friends talked till Shane came back into the room, wearing sexy grey boxer briefs. Shane noticed that Chris was in jeans and a t-shirt, showing clearing that he didn't have any intention of sleeping over. He was seated behind the writing table in the room, still talking on his cell phone. Shane went to stand behind Chris and started massaging his neck and shoulders, smiling when Chris moaned loudly.\n\n\"Dude, what's going on?\" Tyron chuckled. \"Don't tell me you have your dick inside some chic right now when I'm not getting any out here. Jeez!\"\n\nChris laughed. \"You idiot. You're supposed to be looking out for us not fucking your brains out. Listen Ty, I've got to go. See you next week, yeah?\"\n\n\"Definitely. And hey, hang in there. Okay?\"\n\n\"Okay. Thanks.\" Chris said softly and hung up. \"That feels so fucking good.\" He groaned, making Shane laugh. \"And you smell divine.\" Chris murmured.\n\nShane leaned down and rested his head between Chris' neck and shoulder, his arms folded across Chris' chest. \"Don't go.\" Shane said quietly. \"Please.\"\n\nChris turned his head, seeking Shane's mouth. They kissed till they were both breathless. Then Shane reached down and pulled off Shane's t-shirt and threw it over his shoulder. He stuck his forefingers and thumbs in his mouth to get them wet, and still standing behind a seated Chris, took Chris' already aroused nipples between his fingers to twist and tug on them, tormenting the sensitive flesh. \n\n\"Jesus.\" Chris threw his head back as a cry of pleasure tore out of him. Every tug on his nipples caused his cock to jerk deliciously inside his jeans.\n\nShane looked down at Chris' pleasure-filled face and couldn't resist kissing those parted lips. Chris returned his kiss with a heat of his own. When he released Chris' lips, he went around to stand in front of Chris, and then slowly dropped to his knees between Chris' legs. Then he leaned forward and latched onto one sensitized nipple with his hot mouth, whilst still pulling on the other.\n\n\"Fuck, Shane.\" Chris' voice was rough as he watched Shane work his nipples. \"You're making me so fucking hard.\"\n\nShane move off Chris's nipple and started dropping kisses all over his sexy six-pack. By the time he sank his tongue into Chris' belly button, Chris was ready to scream with need. Chris' whimpers and hard breathing turned Shane on to no end. He dipped his tongue between Chris' waistband and skin, licking wetly, and smiled when he felt Chris' tummy ripple in obvious pleasure. \n\n\"You like that?\" Shane husked.\n\n\"God, yes,\" Chris moaned shakily. \n\n\"Good.\" Shane looked up and held Chris' passion-glazed eyes as he unfastened his jeans, the descent of the zip slightly hindered by the firmness of Chris' arousal.\n\nShane unzipped Chris, revealing black boxer briefs and a tantalizing bulge. He pressed his lips to Chris' cock, kissing it through his underwear. He felt Chris' hardened cock twitch against his mouth, seeking more attention. Shane sucked on the head of Chris' cock through the boxers, getting the fabric wet. Chris's erection pulsed with blood, hot to feel a mouth on it.\n\n\"Baby, please...\" Chris moaned uncontrollably as his hands settled on Shane's head, fingers stroking his low-cropped hair. He thought he would go out of his mind if he didn't feel Shane's hot mouth directly on his cock. \"I need your mouth on me.\" He whispered.\n\n\"Thought you'd never ask.\" Shane murmured. He didn't let Chris ask twice. He hooked his fingers into the waistband of Chris' boxer briefs and jeans, and pulled them down together, letting Chris' pulsing cock spring free. Shane's breath caught in his chest as his lust filled gaze swept hungrily over Chris' body. He was hard, muscled and lean. And when Shane looked at that big pulsing cock jutting out long and hard from Chris' body, and the huge balls swaying below, he thought Chris was the most beautiful man he'd ever seen. Licking his lips with excitement, Shane reached out to curl his hand around that arousal, his other hand moving lower to cup and hold Chris' balls. His face was so close to Chris' erection that the warmth of every breath he exhaled washed over the wet head, sending exquisite shivers through his Chris' body. Chris groaned hoarsely in pleasure as his heart pounded hard in anticipation.\n\n\"Fuck, you're beautiful...\" Shane breathed and leaned down to lick up the length of Chris' thigh from knee to just under his tight balls, then he traced each one with the tip of his tongue. A low whimper escaped Chris' throat and his body bucked as Shane's tongue slid up the underside of his cock, lingering over the sensitive spot just under the crown. Shane knew it would give Chris some exquisite moments of pleasure and from Chris' erotic cries, Shane knew Chris was having a ball. With a deep groan he took Chris into the moist heat of his mouth.\n\n\"Christ!\" Chris cried out, already feeling his orgasm flying up his spine. He couldn't let that happen. What was Shane going to think? Chris started taking deep breaths. \n\nShane closed his eyes as he worked on Chris, savouring the salty tang of the precum that leaked from the slit. He was so aroused that his own hips flexed as he humped the air. His boxers suddenly felt very uncomfortable again his leaking erection. Shane reached down and pulled his boxers off his cock. His erection sprung heavy, drawing a sigh from him. Then he went to work on that cock inside his mouth. He'd planned on taking it slow but from the raging need of his own body, and the frustrated cries falling from Chris' lips, Shane decided to take a rain check on that. \n\nOne moment, Chris felt he was taking control of his body, and the next, all ability to think simply fled. He felt Shane take him deep into his throat and start to swallow around him. \n\nThere wasn't anything teasing about what Shane was doing, he was simply milking his cock. Chris cried out from the sweetest sensation, his hands clutching at Shane's head as his hips lifted and held and his head fell back in pure, unaltered ecstasy. At the back of his mind, he knew he should warn Shane so he could get off his cock before he flooded his mouth with his seed but Chris just couldn't bring himself to command his brain as he should. The sound of his own heartbeat thundered in his ears as he shot into Shane's mouth. Chris lost all his senses along with his essence. And even as he shot, Shane kept sucking long and hard at the pulsing flesh, his tongue swirling over the hot, spurting head. It was a damn good blow job and it blew Chris' mind right alongside.\n\nShane looked up at Chris when he eventually pulled off his cock, hunger shinning in his beautiful eyes. Chris stared back at him, knowing for a fact that he'd never wanted to be another person's more than he did at that moment. Chris leaned down and took Shane's lips in the sweetest of kisses, tasting himself on Shane. \n\n\"Fuck, I love your mouth on me.\" Chris growled against Shane's swollen lips when he broke off the kiss. Then he stood up and reached for Shane's hand to pull him up. What he asked Shane then, was the last thing Shane was expecting to be asked. \"Do you have a condom?\" Chris asked in a hoarse voice.\n\nShane froze!\n\nChris waited for Shane to answer his question. And when he simply kept staring at him, Chris leaned his forehead against Shane's and asked again...more softly this time. \n\n\"Shane, do you have a condom?\"\n\n\"No.\" Shane whispered.\n\n\"How about lube?\" Chris asked. And at Shane's nod, Chris bent down to pick up his jeans and took out his wallet. Keeping an eye on Shane the whole time, Chris pulled out a condom. He really didn't care what Shane thought. He was always prepared...big deal. With his leg, he pushed Shane's boxer briefs which was still around his knees down. \"Step out.\" He instructed softly and waited till Shane stepped out of them. \"Come on.\" Chris said, as he drew Shane to the bed.\n\nFor someone who had just blown his mind with the best blowjob ever, Chris thought Shane looked...unsure of what to do. He gently pushed Shane onto his back on the bed and crawled up to cover his body with his. Then to put Shane at ease, Chris proceeded to kiss him like he'd never been kissed before. By the time he tore his mouth away from Shane's, Shane was thrusting up uncontrollably against Chris, smearing so much precum between them.\n\n\"Chris...\" Shane whimpered. \"I need to...\"\n\n\"Not yet, baby.\" Chris murmured. \"Where's the lube?\"\n\nShane reached into his side drawer and took out a tube of lube and gave it to Chris. Without wasting much time, Chris tore the packet of condom and rolled it on Shane's length. He didn't want to think about the mammoth cock in his hand and the damage it could do to him. He couldn't think about that. He poured a generous amount of lube onto Shane's cock, and then reached back to quickly work some into his own hole. He'd tried a small toy on himself thanks to the urging of Aaron. But it was nothing like the weapon he was about to take. What was it the little shit had said? 'All that matters is the very first 'take'.' Well, this was it, Chris thought grimly. \n\n\"Are you ready for this?\" He asked Shane who had been silently watching him the whole time.\n\n\"Are you?\" Shane retorted softly.\n\nChris stared at Shane. His heart was pounding but his dick was harder than it had ever been. Then he looked up at Shane and shrugged sexily. \"What do you think?\" Chris smirked, making Shane laugh softly.\n\n\"You don't have to do this, Chris. I just want to...\"\n\n\"We are doing this so shut up, Shane.\" Chris almost growled, cutting Shane off. Then taking a deep breath, Chris moved to straddle Shane's hips. \n\nShane could barely breathe from the sight of Chris above him. The way Chris' bare skin looked against his own dark one was so striking, dizzying and arousing all at once. Shane's hunger for Chris skyrocketed. \n\nChris reached back, took Shane's cock in his hand and with rapt concentration, determination and focus, directed the curved head against his lubed up puckered hole and started to slowly sink down on it.\n\n\"Fuck!\" Chris gasped as sweat broke out on his forehead. He'd never felt so much pain. To stop himself from screaming in pain, he bit his lip so hard he could taste blood. Chris lost his erection.\n\nShane moaned when he felt the tightest heat around his cock. \"Sweet Lord. So tight.\" It was fucking unbelievable. But he couldn't ignore the pain on Chris face. \"Chris, stop this.\" Shane growled, trying to push Chris off him but Chris wouldn't budge. Under any other circumstances, Shane would have unseated Chris in an instant but the pleasure he was deriving from Chris' tight heat, was so mind-blowing that Shane had lost some strength in his limbs. \"Oh my God.\" A stuttering wail escaped Shane. He'd never felt anything so exquisite.\n\nBy the time Chris stopped sliding down Shane's throbbing length, a tear or two had escaped his tightly shut eyes and he was panting as if he was in labour.\n\n\"Dude, fuck!\" Chris swore, making Shane actually laugh. \"What are you? A fucking horse?\"\n\n\"Fuck you.\" Shane laughed harder, making Chris groan in pain. \"You're just as big.\"\n\n\"I'm not this long, you fucker.\" Chris retorted and promptly gasped as he felt Shane squirm beneath him. \"And don't fucking move.\" He growled.\n\n\"I'm sorry.\" Shane murmured, going still. He wanted to thrust into Chris' heat so bad. But he knew he could only do that if he got Chris' mind off the pain. Shane opened his arms. \"Come here.\" He whispered and watched as Chris slowly leaned forward and rested his forehead against his.\n\nWhen Shane languidly licked at Chris' lips, Chris opened up to him, slowly getting lost in the sensual sensation of Shane's kiss and totally forgetting about the pain in his arse. Neither man could tell who started moving first. Shane was going out of his mind at the tight and divine heat of Chris' channel. And Chris could feel the sheer power of that thick pole as it stretched and pulsed within his channel. They took it slow but it was so intense neither man could look away from each other. Chris honestly couldn't tell when the pain and discomfort stopped. All he could feel was utter fullness and rather surprisingly, an elusive pleasure. Chris wanted more. He wanted that pleasure that was dancing just out of his reach. It was right there...pulsed urgently and insistently...he needed to grasp it. He buried his face in the crook of Shane's neck and begun to thrust harder against Shane, taking more of his cock inside. There was a slight pain but it also felt damn good. The feel of Shane inside him was totally incredible. Chris was as hard as rock. He decided to sit up and take more of that heavenly cock inside him so he pushed himself off Shane's chest and sat up, burying Shane even deeper inside him. And that was all it took to get that trapped mouth-wateringly fiery pleasure out.\n\n\"Holy shit!\" Chris breathed, his eyes fluttering shut as he felt an instant delicious burst of pleasure within. He could feel that bolus curved head of Shane's cock, press against something deep inside him immediately he sat up and took more of Shane in.\n\nShane watched as Chris sat up and saw the pure ecstasy flash across his face. Chris' flushed skin, closed eyes, and the way he'd caught his lower lip between his teeth gave him a look so purely erotic Shane couldn't look away. He'd never seen a more sexy human being. \n\n\"Ahh ... fuck ... fuck!\" Chris bucked wildly as pleasure hummed in every cell of his body. The feeling of Shane's cock against his prostate felt absolutely amazing but before he could even savour the feeling, he'd felt himself losing it. His passion-glazed eyes flew open, showing Chris' obvious surprise as the unexpected orgasm tore through him. He didn't feel it building. No time to feel it in his belly or core, it was just upon him. \n\n\"Fuck...\" Shane breathed when Chris suddenly threw his head back with a hoarse shout and started shooting ropes of cum which landed on Shane's chest and face. \n\nChris' eyes practically went crossed as he let loose and unloaded thick ropes of cum onto Shane, his body jerking and flailing as he came, and came and came. \"God...\" His moans turned into whimpers.\n\nShane watched in wonder as Chris' cock pulsed and throbbed, shooting out so much cum when it hadn't even been touched, not to mention the fact that he'd come not too long ago. Shane didn't pause even once in his thrusts, riding out the contractions of Chris' muscles. The rhythmic tightening of Chris' tight channel around his cock was driving him insane. As shocked at Chris's orgasm as Chris himself, Shane couldn't keep still. He continued thrusting up relentlessly into Chris, hitting that pleasure spot on each thrust. His aim was to prolong Chris' orgasm.\n\n\"Shane...\" Chris' cry sounded almost panicked. He was being driven into a haze of such yearning and sensory overload, it was almost dreamlike. He wanted Shane to stop fucking into him as the pleasure was too much it was almost painful but at the same time, he wanted it to go on forever. \"Oh God...\"\n\nShane suddenly turned them over so that Chris was flat on his back, spread beneath him for his taking. Then Shane pushed Chris' thighs further apart and started slowly fucking deep into him. He tried to keep his rhythm slow as he'd been so long without the feel of that kind of heat and pressure on his cock, Shane knew he wouldn't last long. \n\n\"Fuck, you feel incredible.\" Shane gasped and looking down between them, watching his cock slide in and out of that beautiful tight arse. He'd never seen a more beautiful sight. But what surprised Shane was how Chris' cock looked so hard again already. For someone who had already come twice, that was totally astounding. \n\nShane loved being inside Chris so much that he didn't want it to end. He maintained his slow thrusts. But Chris didn't want slow. He'd tasted the spectacular, mind-blowing rush of sensation and ecstasy, and wanted it again. He wanted it fast and hard and wondered why Shane was holding back. It was pure torture. Chris was ready to beg if that was what it would take.\n\n\"Shane...faster...come on...\" Chris almost sobbed as his hips move restlessly beneath Shane with a greater, wilder need. He heard the plea in his own voice, and hated it. \"Fuck me faster and harder, damnit.\" Chris commanded in a growling scratchy voice.\n\n\"No Chris. I don't want to hurt you.\" Shane growled right back, his gaze hot and hungry as he looked down into Chris' passion-filled eyes. Then he leaned down to take Chris' mouth in a hot but soft kiss. A kiss meant to calm Chris. ",
        "Shane's muscles burned from the strain of holding back but he was determined to go slow and not hurt Chris with his mammoth dick. So far he had been careful not to feed all his cock into Chris. Even when Chris was on top, Shane had made sure that he wasn't fully inside Chris. He also didn't plan on making any vigorous moves as he knew for sure, that with his kind of dick, such movement would be damaging for the one on the receiving end. He was not going to hurt Chris...not if he could help it. \n\n\"I want to hold you.\" Chris whispered shakily, as his arms moved up to lock themselves around Shane's neck. Then his heels slid around Shane's hips, over his arse, his ankles twining together on Shane's lower back. \n\nThen Shane felt it... Chris' heels rubbing sensually against that sensitive spot at the base of his spine. Fuck! He should have known that stubborn as he was, Chris would take matters into his own hands. There was no escape. Shane knew he was fucked.\n\n\"Chris, no...\" Shane cried out even as his eyes rolled into his head. \n\nChris was definitely trying to get him to lose control and that was exactly what happened. Shane completely lost it. He started slamming into Chris, pumping his hips at an almost obscene pace. Chris let out a lust-drunk scream as that huge cock plunged very deep into him, over and over again. It was so intense, Chris trembled. The incredible stretch, pressure and agonizing pleasure simply blew Chris' mind. He heard his own cries but didn't even know they were coming from him. Chris had never felt as possessed by another human being as he did at that very moment as he relinquished complete control to Shane. And even as Shane started coming with a loud ecstatic cry, he kept pumping, deep-dicking Chris, slamming into that pleasure button.\n\nIt was fast, it was hot, it was deep, it was pure bliss. Chris never stopped rubbing that spot even once. And Shane never lost his erection even after his orgasm. All Chris did was to simply stop thrusting back against Shane and enjoy the pleasurable destruction of his virgin arse. It was the best destruction ever. Sweat poured down Shane's body as he nailed that prostate, his heavy balls slapping against Chris' arse. Chris gasped Shane's name and reflexively clenched around him when he felt blissful rippling tingles spread throughout his body. That clenching sent Shane into orbit. \n\n\"Oh, fuck!\" Shane gasped when he felt his balls tighten up, signaling another impending orgasm. \"I'm gonna come again.\" Shane threw his head back and shouted hoarsely, his face contorted with unadulterated pleasure. With a shaky moan he slipped his hand between them, grabbed Chris' throbbing cock and started stroking firmly. \"I want you to come with me.\" He breathed harshly as he continued to fuck into Chris, hard and fast. \n\nChris' head thrashed from side to side on the pillow. Surely he couldn't come again, could he? \"I don't think I can.\" Chris whimpered brokenly.\n\n\"Yes you can.\" Shane whispered as his free hand moved to cup the back of Chris' head. Then he stared into Chris' eyes with so much love and tenderness, Chris gasped. \n\nThere were little things a guy could do to make sex go from fucking to something more passionate and erotic. A guy cupping another guy's head and staring into his eyes like that was definitely one of them and Chris knew it.\n\n\"Shane...\" He whispered just as he felt another orgasm slithering along his spine. He couldn't believe he was about to have another orgasm so soon after the first two. \"I'm....\" Chris tensed up as he felt his cock begin to jerk within Shane's hand. \"Oh God...Shane, I'm go...\" Chris eyes rolled back... \"Oh fuck...\"\n\n\"Come with me baby.\" Shane moaned as he thrust deep into Chris and held there, crushing his mouth onto Chris' in a raw, possessive fiery kiss.\n\nAnd even as Shane succumbed to another intense orgasm and screamed with ecstasy into their kiss, Chris shot for the third time that evening. The intensity of that third orgasm totally undid Chris. He could barely move his limbs. He couldn't open his eyes. His felt spectacularly wonderful. Sated and happy.\n\n\"Shit. That was...\" Chris started to say but trailed off as words seemed impossible to formulate into a coherent sentence.\n\nShane leaned in to make slow, sensual love to his mouth. \"I love you.\" Shane whispered against Chris' lips.\n\nChris heard Shane's whispered words and didn't doubt it for a second. He drifted off to sleep with a contented smile on his face. \n\nStill basking in the afterglow, Shane looked down at the man who held his heart and leaned down to press another kiss against his lips. He gently pulled out of Chris' stretched hole and pulled off the condom. Shane's eyes widened when realized the condom was so full his spunk was actually spilling out. Fuck! He'd never come so much, he thought in amused wonder. Damn! He got out of bed and headed for the bathroom to clean himself. Then wetting a wash cloth, Shane went back to bed and cleaned Chris up. Shane groaned when he saw Chris' hole.\n\n\"Fuck, you're going to kill me tomorrow, you stubborn fool.\" Shane muttered as he wiped Chris clean. \n\nHe returned the washcloth to the bathroom, pulled on his boxers and got into bed beside Chris, wiggling until he was stretched out along Chris' lean body with his head resting on Chris chest. That was beginning to become Shane's favourite position whenever they were lying together. Shane felt calm, relaxed, sated and extremely content. He pulled the covers over them and kissed Shane softly on the chest. Then with a sweet smile on his face, he fell asleep too. \n\n***\n\n\"What are you doing?\" Shane mumbled when he opened his eyes the next morning to fine Chris' eyes on him.\n\n\"Watching you drool.\" Chris deadpanned.\n\n\"Fuck you. I don't drool.\" Shane laughed softly, turning on his side to face Chris who looked like he'd already taken a shower. \"How long have you been awake?\" Shane groaned, taking in Chris' wet hair.\n\n\"About two hours.\" Chris didn't add that he'd wanted to soak in the tub like Aaron had advised. He'd woken up at dawn with his arse throbbing relentlessly. The ache had already dulled after that long soak. For the kind of mind-blowing pleasure that he'd been subjected to the night before, the ache was totally worth it, Chris couldn't help but think.\n\n\"Why didn't you wake me up?\" Shane groaned turning to lie on his back. Then he saw a mug of coffee on his bedside table and promptly reached for it.\n\n\"Sit up first before it pours on you.\" Chris cautioned with a smile in his voice.\n\nShane sat up and blew the steam off the mug. Then he took a long sip. \"Oh damn, this is good.\" He moaned with his eyes closed, totally missing the lust that flashed across Chris's face. By the time Shane placed the mug back on the table, it was empty. \"Thanks.\" He moaned and turned to look at Chris. Shane didn't need to be told what was happening. The look on Chris' face said it all. He moved swiftly to straddle Chris, then bent down to nuzzle his neck. \"God, you smell absolutely heavenly.\" Shane moaned.\n\n\"Shane...\" Chris breathed, his eyes shutting in bliss. Shane's mouth on his neck was driving him nuts. But when he felt Shane's hand slip into the waistband of his sweats to close around his erection, he swore. \"Fuck.\"\n\n\"What do we have here?\" Shane purred as he slowly rubbed his thumb on the leaking slit. \"How are you feeling?\" He murmured with concern in his voice.\n\n\"Shit.\" Chris breathed, looking at Shane in surprise, wondering how the guy could manage to look concerned whilst at the same time, driving him out of his mind. But it didn't really matter, Chris thought. All that mattered at that moment was that he didn't ever want Shane to stop. He wanted... ached for the pleasure to go on and on. \"I'm okay.\" Chris moaned as he threw his head back in bliss. \"But I...I can't take...\"\n\n\"Who said I was going to fuck you?\" Shane chuckled as he slid down under the covers, between Chris' legs. \n\nChris' breath came out in gasps. He looked down and saw a completely covered Shane. All Chris could see was Shane's form moving around his groin. Then he felt his sweats being pulled down and raised his butt to make it easier for Shane. The next thing Chris felt was the most exquisite heat engulfing almost the whole length of his throbbing cock.\n\n\"Fuuuuck!\" Chris cried out, bucking up into Shane's hot mouth as his entire being went up in flames. \n\nShane sucked hard and fast, setting a nice, easy pace, which was about all Chris could handle at that point. Shane was ruthless. He bobbed his head up and down, rolling Chris' balls between his fingers. Sensations slammed into Chris with every lick and every pull. He could feel Shane's tongue and lips, and every moan Shane made. It was simply mind-blowing. Chris' hands fisted the sheets as sounds tore out of his throat. And when Shane hummed around his cock, he shuddered and cried out as he felt his orgasm begin to build like white heat. Chris writhed and begged with his body, rocking his hips like there was no tomorrow. When he felt his cock swell, he knew he was going to shoot his load and also knew that, that was going to be hands-down the fastest blowjob on record. Chris' eyes widened as he felt the intensity of his pleasure increase to unbearable heights. Fuck, he was going to...Chris groaned low in his throat as pleasure consumed him...filled him. He cried out, as his climax roared through him, his hips bucking uncontrollably, his cock pulsing on Shane's tongue. \n\nShane sucked him, wringing everything out of him, every cum, shudder, moan and gasp before backing off. Then he flopped onto his back beside Chris, moaning with pleasure and throwing the covers off. Chris looked down at Shane, his eyes going to the rapidly spreading wetness in front of Shane's boxer briefs. Shane had actually come from just sucking him off, Chris thought amazed. The guy was too damn sexy for his own good. \n\n\"Fuck.\" Chris whispered, feeling all floaty and sated, his mind buzzing from the most amazing high. But he still couldn't help but wonder how Shane got to be so skilled at giving head. \"Where the fuck did you learn how to do that?\" Chris growled.\n\nShane laughed shakily, still trying to bring his breathing under control. \"I did blow you yesterday, asshole.\"\n\n\"No shit. Where the fuck did you learn how to?\" Chris didn't know why but he was actually pissed that Shane had probably blown someone or was probably still blowing whoever it was.\n\n\"Are you kidding me?\" Shane tilted his head to look up at Chris.\n\n\"Come here.\" Chris growled.\n\nWith an amused shake of his head, Shane moved up till he was beside Chris. Then he braced himself on his arm, leering down at Chris. \"What?\"\n\n\"Tell me.\" Chris growled. \"Who have you been blowing?\"\n\n\"I could ask you the same thing.\" Chris shot back.\n\n\"Fair enough. But first...\" Chris reached up and pulled Shane's head down for a hot passionate kiss. \"Now, where was I?\" He breathed when he released Shane.\n\n\"Damn, you can kiss.\" Shane whispered shakily. \"I really need to hit the showers, Chris. I feel...sticky.\" Shane said, pointing to the large darkened wet patch on his grey boxer briefs.\n\n\"You know, you could do with a warm soak.\" He said, rolling off the bed.\n\n\"Done that already.\" Chris murmured.\n\n\"You can never have enough, dude. The more, the better.\"\n\n\"You just want me in the tub with you.\" Chris laughed.\n\nShane gave a wide grin. \"That too. Why don't I take a quick showing and join you in the Jacuzzi?\"\n\n\"Sold.\" Chris said, getting out of bed and following Shane into his large bathroom.\n\nWhen Shane eventually joined Chris in the steaming Jacuzzi, he chose to sit between Chris' legs, relaxing with his back against Chris' chest. Chris didn't hesitate to wrap his arms around Shane's middle, scattering kisses along his neck and shoulders.\n\n\"I've never given any guy a blow job besides you.\" Shane murmured quietly.\n\nChris tightened his hold on him. \"Thank God.\" He whispered against Shane's temple. \"'Cause I was contemplating finding the idiot and shooting him in the groin.\"\n\nShane laughed. \"You're nuts. So how about you? Dude, that b.j. you slammed on me the other day...\" Shane gave a lustful moan. \"It was the bomb. You can't tell me that was beginners luck.\"\n\nChris chuckled. \"But it was.\" He countered. \"Well, in a way.\"\n\n\"What do you mean by in a way?\" Shane's head fell back on Chris' shoulder.\n\n\"I got help. I...I asked Aaron to teach me what to do.\" Chris mumbled. \n\n\"Kyle's fianc\u00e9, Aaron?\" \n\n\"One and only.\" Chris chuckled. Though Shane hadn't met any of his friends besides Damon, he knew about the squad and their partners. \n\n\"Well why didn't you ask Kyle or better still, search the net like everyone does?\" Shane really wanted to understand.\n\n\"Well, let's just say there's nothing like talking to an expert.\" Chris drawled.\n\n\"I thought Aaron was a banker.\" \n\n\"He was a porn star first.\" Chris said.\n\n\"Are you shitting me?\" Shane turned his head to look at Chris.\n\n\"I shit you not, baby.\" Chris laughed. \"Kid was going through a hard time. College, mum was very sick, needed cash... is gorgeous... need I go on?\"\n\n\"No, I get it. How did he teach you? Did you two...\"\n\n\"Hell, no.\" Chris looked incredulous. \"I'd never do something like that. He's like my kid brother. I only went to him to teach me how to...please you.\"\n\n\"Aww Chris.\" Shane grinned. \"You're so fucking romantic.\"\n\n\"Fuck you.\" Chris laughed.\n\n\"I need to do something for Aaron to thank him for...\"\n\n\"Dude, I went out of my way to learn how to blow your mind. Why the fuck does he get anything?\" Chris growled, making Shane burst into laughter.\n\n\"For teaching you how to blow my mind, you moron. He must be a damn good teacher because, dude, everything you do is off the fucking hook.\" Shane said and turned to give Chris a kiss so sweet, Chris melted.\n\n\"I'm glad you approve.\" Chris whispered against Shane's mouth when they came up for air. \"But I did give him a raise.\" Chris laughed.\n\n\"Well, that's your gift. I have to give him mine.\" Shane insisted.\n\n\"Yeah whatever. Come on, you don't want to be late to pick up Adele. And I don't want Lizzie on my case.\" Chris grumbled, making Shane burst into laughter. \n\n\"Who do you fear more? Adele or Lizzie?\" Shane chuckled, standing up.\n\n\"Adele didn't punch me. Adele doesn't own a gun, Adele must like sweets like every other kid and so can be bought with sweets, Adele...\"\n\n\"Alright, alright, you made your point. Jeez.\" Shane couldn't stop laughing.\n\nAnd even as they got ready to go and pick up Adele, Chris kept bringing up more hilarious points to support why he feared Lizzie more. As they packed in front of Lizzie's home, they were still laughing their heads off.\n\n***\n\nLizzie Carlton looked out her window and watched Shane and Chris laughing in the car as Shane packed his Cadillac Escalade SUV in front of the house. The windows were not rolled up so she could clearly see them. And the sight of Shane's carefree laughter was a pleasure to see. Shane didn't laugh much. He did smile a lot though. The few times Lizzie had heard him laugh so heartily in their friendship of twelve years, it had either been because of something Adele had said or done. The guy never laughed otherwise. So seeing him obviously happy with Chris was fun to watch and Lizzie realized she was actually laughing too though she didn't know the reason for their laughter. It was good to know Shane was happy. She just hoped Chris wouldn't hurt him that was all. With a sigh, Lizzie turned away from the window and went into the hall, calling Adele's name.\n\n\"Adele, Honey, Daddy is here.\"\n\n\"Yayyy!\" Adele came running down the stairs, shouting with joy. \n\n\"No running honey.\" Lizzie said, opening the door for Shane. \"Wow, isn't someone looking hot?\" She smirked, taking in Shane's casual yet elegant look. Of course she knew Shane looked good in anything but she just couldn't pass up on the teasing. \"I wonder for whose benefit this...\"\n\n\"Shut up, will you?\" Shane laughed, pulling Lizzie into his arms. \"Where's Sam?\"\n\n\"You really expect to see him here on a Saturday morning?\" She asked dryly, making Shane laugh.\n\n\"Hey there Princess.\" Shane called out when Adele came running towards him with her cute Minnie Mouse bag hanging on her little arm. Shane caught her in his arms and twirled her around, making her squeal. \"How's my little princess this morning?\"\n\n\"She's fine.\" Adele giggled. \"Let's go, let's go, Daddy.\" \n\n\"Your wish is my command, Madam.\" Shane said as he took Adele's hand into his.\n\nWhen they went outside, Chris was leaning against the car with his arms folded across his broad chest. \"Are you Uncle Chris?\" Adele shouted and bolted towards Chris, surprising Shane. \"Mummy says the three of us are going to have fun.\" She informed Chris, not even waiting for him to answer her question.\n\nChris went down to Adele's level and grinned at the little girl. \"That's the plan. Ready?\"\n\n\"Yes, yes.\" Adele responded enthusiastically, jumping up and down.\n\nLaughing, Chris straightened up and opened the car for Adele. Then he helped her in and strapped her in. When he turned around, Shane and Lizzie were standing close to him. \n\n\"Hello Lizzie.\" Chris said softly. \n\n\"Hello Chris. How are you doing?\" Lizzie asked, rubbing her hand on her slightly bulging tummy.\n\nChris wasn't surprised he hadn't notice that Lizzie was pregnant the day they'd met. He'd obviously been too confused to. \"Can't complain. Haven't been punched of late so...\" Chris shrugged. Shane's eyes widened. Lizzie burst into laughter.\n\n\"Oh my God.\" Lizzie gasped, trying to stop her laughter. She hadn't been expecting that. \"I deserved that.\" She said, wiping tears of mirth from her eyes. \"I won't apologize for hitting you.\"\n\n\"And I don't expect you to.\" Chris responded with his hands raised in a sign of surrender. \"You can hit me again any day if it will make you feel better.\" Chris murmured, his eyes going to Lizzie's stomach. \"Just don't bring out the guns.\"\n\nThis time Shane laughed too. \"Oh, God Shane, he's crazy.\" Lizzie laughed. \"Okay get out of here, you two. Don't want the little lady to get impatient. And do try and keep your eyes on my baby instead of each other.\" She called out as the car started to move.\n\n\"To think she actually punched me in that state.\" Chris muttered making Shane erupt into more laughter.\n\n\"She should probably have shot you instead.\" Shane laughed.\n\n\"Fuck y...\"\n\n\"Chris!\" Shane bellowed just as they heard Adele's voice.\n\n\"Uncle Chris said a bad word.\" Adele shouted from the back.\n\n\"Oh fuck...shit...\" Chris groaned as he exasperatedly kept muttering the wrong word. Finally he gave up with a deep sigh. \"I'm so sorry Adele. I won't say that again.\" \n\n\"Mummy says if you say a bad word, your mouth will be washed out with degertent like dirty clothes.\" Adele conspiratorially informed them. \n\n\"Deger...\" Chris started with a frown.\n\n\"Detergent.\" Shane said loudly and slowly to Chris as though he were deaf and dumb.\n\n\"Oh right.\" Chris said, flipping Shane off. \"Detergent. I will be careful then. Because I wouldn't want detergent in my mouth as it doesn't taste nice.\"\n\n\"Mummy says it's bitter and can make you sick.\" Adele supplied.\n\n\"Ooh, then we can't have that.\" Chris gave a mock groan.\n\n\"Noooo.\" Adele answered, dragging out the word.\n\n\"Thank you for telling me, Adele. I'll try to remember all the time.\" Chris said sweetly.\n\n\"My pleasure.\" She answered, looking pleased with herself.\n\n\"You're a natural.\" Shane muttered with amusement.\n\n\"Aw come on. I can't believe I actually used the f-word in her presence.\" Chris muttered, praying he wouldn't slip again till Adele was back with her mother.\n\nShane reached out to entwine his fingers with Chris'. \"Hey, don't beat yourself up.\"\n\nChris unconsciously raised their entwined hands to his lips and pressed a kiss to the back of Shane's. They both quickly looked back at Adele who smiled at them but said nothing. Shane didn't let go of Chris' hand till they got to their first stop for the day... Aquairium of the Pacific, where they saw numerous ocean animals and Adele got to hand-feed brilliantly coloured lorikeet birds as the three of them strolled through the Lorikeet Forest. Then because Adele said she wanted to see more animals, it was off to the zoo. She laughed excitedly when she saw a meerkat, calling it Timon, after the Lion King character. Shane and Chris couldn't help but laugh at how excited she looked. And since she expressed an interest in sitting on the zebra, Shane suggested they go to Griffith Park where Adele got to ride on a pony. She enjoyed the miniature train ride and the merry-go-round as well.",
        "\"Time to eat little lady.\" Shane announced.\n\nTheir next stop was Clifton's Cafeteria where the two-story restaurant was actually a majestic wonderland of artificial trees and streams. Their home-style menu was a classic delight. When Adele's 'Treasure Tray' request...picked by Chris came, they all oohed and aahed. The tray had spaghetti, meatballs, chicken and corn. After their meal, Adele was made to choose a toy from the 'Treasure Chest', which made her so happy.\n\nTheir next stop was Skateland, where Chris taught Adele how to roller skate. Shane chose to sit it out because it wasn't his thing. From their delighted laughter, it was obvious Chris and Adele had so much fun. \n\nAs it was getting late by the time they left Skateland, they decided to crown their day of outing with a stop at Sprinkles Cupcakes and Sprinkles Ice Cream where they enjoyed the best cupcakes and ice cream. What delighted Adele even more was the fact that Chris arranged for her to bake her own cupcakes and decorate them. Shane had been so engrossed in looking at his daughter decorate the little cakes, he jumped when he felt his phone vibrate inside his pocket. He pulled it out and read a message from Chris.\n\nChris: U really need to stop biting those lips, baby. Makes me wanna lick em so bad.\n\nShane turned to stared at Chris for a moment, and then leaned closer to give him a quick sweet kiss right there in front of everyone. The look on Chris' face was priceless. He'd obviously never thought Shane would do that in the presence of others. Most of the people who saw the kiss smiled, others were indifferent. Adele didn't see them...or so they thought. Then as though he'd completely forgotten where they were, Shane started to rub his face against Chris' temple. \n\n\"Err...baby?\" Chris whispered, trying to suppress his arousal. \"People are watching.\"\n\nShane blinked and turned around to see people looking away discreetly. \"Shit!\" He muttered. \"You've stolen my ability to think coherently. I forgot where I was.\" Shane groaned, his voice low and sexy, looking at Chris like a kid who'd been caught with his hand in a cookie jar.\n\n\"I have stolen...?\" Chris pointed at himself with eyes filled with incredulity. \"Really?\" Chris couldn't help the amused smile that spread across his face as he stared back at Shane. The man was so fucking gorgeous, it was a sin. \"I'm going to help Adele because if I stay here one more second, I'm going to fuck you right here right now.\" Chris muttered, standing up. \"Hey baby girl, need help?\" He asked, promptly accepting the bottle of sprinkles that Adele thrust into his hand.\n\n\"Sprinkle those ones I've already coated with cream, Uncle Chris.\" The little girl said, not even looking up from what she was doing. \n\nChris couldn't help but feel Adele was acting older than her age. That knowing smile playing around her lips... Chris threw Shane a confused look to which Shane only shrugged. With a sigh, Chris did as he had been instructed. \n\nAfter decorating enough cakes for her mother and step-dad, Adele was ready to bounce. She had a blast. By the time Shane packed in front of Lizzie's house, his daughter was fast asleep.\n\nThe door opened and Lizzie and Sam, her husband, stepped out as Shane carried Adele towards the house with Chris following close behind with Adele's bag and a big box of cupcakes. \n\n\"Hi guys.\" Sam called out with a naughty grin on his face. \"Got a drilling from the little fireball huh?\"\n\n\"Looks like she got a drilling from them, darling.\" Lizzie laughed. \"When has she ever come back from an outing, asleep?\" She asked whilst opening the door wide for Shane to enter.\n\n\"That was the whole idea.\" Shane mumbled, not wanting to disturb the sleeping girl. He went upstairs to Adele's room to put her into bed. \n\nShane tenderly and slowly stripped Adele. Then he went to the bathroom for a wash cloth to wipe her face, neck and palms. When he was satisfied that she looked clean, he took out her pajamas and put it on her. Then he covered her up, kissed her softly on the forehead and left the room. When Shane got downstairs, Chris and Sam had a bottle of beer each in their hands and all three were laughing uproariously.\n\n\"Oh my God, she's going to bend my ears tomorrow.\" Lizzie groaned. \"Get ready to watch Lion King from morning till evening tomorrow, Sam.\"\n\nShane chuckled as he went to the kitchen and came back with a bottle of beer too. \"I must admit I've missed the characters myself.\" Shane said. \"I just might watch it too tomorrow.\"\n\n\"For real?\" Chris asked with an incredulous look, making Sam and Lizzie burst into laughter. \n\n\"Fuck off.\" Shane joined in the laughter. \n\n\"Dude, you have to watch it too you know.\" Sam said. \"If you want to 'understand' their language,\" He gave the word quotations with his fingers, \"you have to watch what they watch. At least some.\"\n\n\"Damn.\" Chris swore. \"And would I have to drink only juice and milk whilst watching it or my whiskey will be pardoned...\"\n\nThey all erupted into laughter. \"You're an asshole, Chris.\" Shane said putting his bottle down. \"Come on, let's get outta here.\" He said, giving Lizzie a hug and Sam a one-armed hug.\n\n\"Thanks guys.\" Sam said after them as they started walking towards Shane's car.\n\n\"Chris, wait up.\" Lizzie said and walked towards them. Then surprising all three men, especially Chris, she gave him a tight hug. \"I'm still not going to apologize for punching you.\" She murmured.\n\n\"I'll be disappointed if you do.\" He whispered in her ear. Then he kissed her on the forehead and hugged her some more. \"Thanks.\"\n\n\"Good night guys.\" Lizzie said and watched as they got into the car and drove off.\n\nShe couldn't wipe the smile off her face.\n\n***\n\nShane lay in bed, waiting for Chris to finish sending a mail in his study. He was tired but felt so happy and surprisingly fired up. The shower had helped a great deal, Shane thought with a sigh. He couldn't help but think about how well Chris had bonded with Adele. And to think Chris had been scared, Shane thought with a chuckle. He'd found himself staring at Chris most of the time whilst they were out with Adele. Not only had it been obvious that Chris was crazy about Adele, Chris had enjoyed every minute of their outing. The sight of Chris on skates, gliding sexily around the arena was a sight Shane wasn't going to ever forget. When Chris had looked directly at him at a point and winked, Shane's knees had gone weak. Shane had quickly sat down because it would have been embarrassing if people had noticed his hard-on or he'd fallen down due to his suddenly week knees. And when Adele was taken to the bathroom by the nice lady who was busily shaking her arse at Chris at Griffith Park, the last thing Shane had been expecting was for Chris to take advantage of the brief absence of Adele. Chris had pulled him into a corner and covered his mouth hungrily with his. God, how he'd kissed him. The kiss had started hot, deep, passionate, but soon progressed into demanding and intense. Shane had been so shaken afterwards he hadn't been able to compose himself quickly enough before Adele and the lady had gotten back to them. And just one look at his flustered self and Chris' flushed face was enough to tell the lady she didn't stand a chance. Any grown up would have felt the sexual current crackle between him and Chris. With widened eyes, she'd beaten a hasty retreat but not before muttering, 'what a waste' to their hearing. Shane thanked his stars for innocent little girls because he didn't know how he would have explained to Adele if she had questioned them. He looked up when Chris entered the room.\n\n\"Hey.\" Chris said as he started stripping out of his clothes.\n\n\"Hey.\" Shane responded enjoying the show before him. When he saw the smirk on Chris' face, he laughed.\n\n\"Be right back.\" Chris said as he entered the bathroom.\n\nShane clicked on a remote control and instantly, the rich and rare voice of Sam Smith filled the room. 'Stay With Me' played softly in the back ground as Shane turned off the volume on a repeated telecast of the basketball finals. \n\n\"Damn, the water felt good on my tired muscles.\" Chris rasped as he entered the room a little later in all his naked glory and headed straight for the bed. \n\nShane watched Chris approach the bed, appreciating his ruggedly handsome features and sexy, long, sinewy body. He gazed at Chris with a feral hunger that Chris didn't miss. When Chris smirked, Shane grinned. \"Damn, you're hot.\" Shane rasped.\n\n\"And you're making me horny with that look.\" Chris husked as he got into bed beside Shane and lowered his head to claim Shane's lips in a deep kiss. \n\nWhen they came up for air, Shane thrashed around till he got comfortable...with his head resting on Chris' shoulder. \"Thanks.\" He whispered and leaned up to pressed a light kiss against Chris' cheek as Chris' pulled up the covers over them. \n\n\"For...\"\n\n\"Today.\" Shane said simply. \"She really likes you, Chris.\"\n\n\"Dude, I had more fun than the two of you combined. I should rather be thanking you for having me tag along. Adele is beautiful, adorable, sweet, angelic... she had me at 'degetent'. Chris growled, making Shane burst into laughter. \"I can't help but love her.\" Chris gave a deep sign, \"I wish she were mine.\"\n\n\"She is.\" Shane responded spontaneously, shocking even himself. He cleared his throat. \"She's mine, Chris. That makes her yours too.\"\n\n\"Oh fuck, Shane...\" Chris' eyes darkened with emotion. A flush came to his cheekbones and his lips parted on a sharp breath. He turned to cover Shane's body with his and ravaged his mouth. \"You can't be that sexy and say stuff like that too. It turns my insides to mush.\" Chris' thickened hard cock rubbed against Shane's boxer covered erection as he dipped in to capture his lips again. \"Why the fuck did you bother with boxers?\" Chris growled softly against Shane's lips when they came up for air.\n\n\"Habit.\" Shane breathed, thrusting uncontrollably against Chris. \"Take it off.\"\n\nShane didn't have to demand twice. Chris went down to take the boxers off but the sight of Shane's throbbing cock was enough to keep him down there. When Shane felt Chris swallow more than half of his cock, he cried out in shock and pleasure. \n\n\"Christ baby, just like that.\" He breathed, his hands moving down to tangle inside Chris' hair. \n\nChris went to town on Shane's cock, sucking like he would die if he didn't. When Shane couldn't take it anymore, he shifted around till he was lying beside Chris with his head was between Chris' thighs. Then he took Chris' wet cock head into his mouth and sucked hard.\n\nChris screamed around Shane's cock and that was all it took for Shane to lose it. That scream vibrated within him, sent an extreme feeling of ecstasy up his cock and into his brain, forcing his essence out with pure pleasure.\n\nWith a loud shout of Chris' name, Shane convulsed as he came, spilling his hot cum over Chris' tongue in powerful bursts. Chris swallowed repeatedly, loving the ecstatic sounds of satisfaction that rumbled from Shane's chest. Even when he stopped coming, Chris' mouth kept sliding up and down Shane's cock, his cheeks hollowing on drawing pulls.\n\nBefore Shane could fully come down from his high, Chris turned around so that he was lying in between Shane's legs, and then sucked his balls into his mouth.\n\n\"Chris...\" Shane moaned so erotically Chris smiled around the balls in his mouth.\n\nChris moved down and went to work on Shane's perineum, that small stretch of flesh between Shane's puckered hole and his balls, that was rich in nerve endings. He licked, sucked, stroked and blew on that area, causing helpless whimpers to escape Shane. \n\n\"Oh God, that feels so good.\" Shane gasped, biting his lip to hold in his cries. \n\nShane couldn't help but think he was behaving like a bitch in heat. Chris' touch made him forget who he was...who he was supposed to be...the macho, no-nonsense business man. He needed to remember that and act as such, he thought. Little did he know what was coming. When he felt something slick and hot and wonderfully wet slide over his puckered hole, Shane almost shot off the bed. But for Chris' arms, tightening strongly around his thighs, Shane would have rolled off the bed.\n\n\"Chris...\" Shane cried out helplessly as Chris started licking that twitching hole in earnest, getting it slick and loose. His erection throbbed as if he hadn't just had a teeth-grinding climax. And when Shane felt Chris' stiffened his tongue start to slowly penetrating his entrance, he almost passed out from pleasure. \"Oh my God...\" He bucked against that wicked tongue.\n\nTo Shane it was unexpected, dirty, kinky and so fucking good. He'd never experienced such altruistic mind-blowing pleasure before. He'd heard about it of course but had never had any idea that it would feel so good. And to think the pleasure was being given by none other than Chris... Shane fell even more in love with Chris at that moment. Shane forgot about everything but that wicked tongue fucking him. And when he felt Chris' slick finger at his entrance, he wondered just when he'd taken out the lube from the drawer. \n\n\"Oh fuck.\" Shane gasped when he felt Chris' finger slide right in. There was no pain. It felt strange but not unpleasant. Then Chris slid in a second finger and curled it inside Shane, flicking against the sensitive gland deep inside Shane. A long groan escaped Shane's lips as he instinctively raised his hips to take more of Chris' long fingers inside himself. \"Jesus, Chris what...\" Shane panted, bucking almost frenziedly as Chris kept maddeningly rubbing that delicious spot inside him. Shane fucked himself on those fingers. \n\nChris added a third finger, moving them in and out, opening Shane up nicely. He watched Shane's face the whole time, feeling totally enthralled by the man writhing with pleasure on the bed. Shane's mouth was opened in a silent scream, his eyes shut as his hands twisted the sheets. \n\n\"Christ!\" Chris muttered, riveted. He knew he couldn't go one more second without tasting those sexy lips. And even as he kept massaging that sweet spot and stretching Shane, Chris leaned down and took Shane's lips, kissing him possessively. \"Fucking gorgeous, Lewis.\" He whispered against Shane's lips when he came up for air. \n\nShane was going out of his mind and was ready to beg. He tried not to but ended up losing the battle. \"Need more...please.\" Shane almost sobbed, never thinking in a million years that he would ever make such a request. He knew he was acting like an utter slut, but he really didn't care.\n\nThe desperation in Shane's voice took Chris by surprise. \"Need that too, baby,\" Chris murmured. He started to slide his fingers out and laughed softly when Shane tightened his arse muscles around his fingers, refusing to let him go. \"Baby, if I'm to give you more, I need to pull out.\" Chris said softly, reaching for a condom with his other hand.\n\n\"I don't want you to use that.\" Shane stated shakily but with all seriousness.\n\n\"What?\" Chris looked shocked.\n\n\"Don't use a condom please.\" Shane repeated himself.\n\n\"Listen baby, I know you're clean...\"\n\n\"Are you saying you're not?\" Shane asked quietly.\n\nChris eyes widened. \"Oh God, I am. It's just that...\"\n\n\"Don't use it. I want to feel every inch of you, Chris.\"\n\nChris was confused, surprised and so turned on by Shane's demand. He'd never fucked anyone without a condom and the idea of going bareback for the first time in his life with none other than Shane, seemed almost surreal. It almost felt like he was about to have sex for the very first time. Chris' heart pounded with excitement as he threw the condom onto the floor and reached for the lube. Then he stared deeply into Shane's eyes and said something that went against every fiber of his being;\n\n\"Last chance to back out, Shane. I want you so much right now. But I will stop if you ask me to.\" He told Shane shakily.\n\n\"You have no idea just how much I want to feel you inside me.\" Shane said huskily. \"Don't make me beg.\" He added in a whisper.\n\nThat was all the encouragement Chris needed. And as he slicked up his cock, Chris couldn't tear his eyes off Shane. Chris didn't think he'd ever been as hard as he was at that very moment. \"Ready?\" He whispered.\n\nShane raised an eyebrow, as if to ask Chris whether he really needed to ask. Chris gave a naughty grin and closed his hand around Shane's cock and started slowly stroking that weapon. He jacked Shane with long, hard pulls, adding that little sweet twist whenever he got to the head of the cock, making Shane just want to drool. When Shane started moaning uncontrollably, Chris lined up his slick cock with Shane's twitching hole and started pushing in, the penetration explicit in its slowness.\n\n\"Fuck.\" Shane gasped and opened his thighs wider. Despite the stretching Chris had given him, he felt a slight burn but it was nothing compared to the pleasure he felt from Chris' stroking. And thinking of the exquisite feeling of having Chris' fingers inside him, Shane couldn't wait to feel the whole of Chris inside, stroking the spot that had almost caused him to pass out with pleasure. \n\n\"You okay?\" Chris breathed, looking down at Shane with undisguised bliss in his grey eyes. The feel of Shane's channel against his bare flesh was totally mind-blowing. \n\nShane bit his lip and nodded slightly as he watched Chris' cock disappear slowly into him. There was an unaccustomed pressure within, but not pain. And with the way Chris was stroking his weeping cock, all Shane felt was fullness and pleasure. He looked up to tell Chris exactly that but lost his train of thought at the look on Chris' face. Shane moaned at the sheer beauty and sexiness of the man. Chris' head was thrown back, his lips parted in obvious pleasure. Shane couldn't look away. As he watched, Chris' wet tongue came out to lick his lips, making Shane wish he had that tongue to suck on right then. Chris was trembling and making noises that were primal and desperate and full of need...almost as though he were in pain. Despite himself, Shane needed to know whether his man was okay.\n\n\"Baby, are you okay?\" Shane asked in a voice he could barely tell was his own. The fullness within as Chris kept penetrating his hole and the friction between Chris' hand and his cock as he stroked him was making his mind hazy.\n\nChris bit his lower lip, slowly opening his lust-heavy eyes to look down at Shane. \"You feel so fucking good.\" Chris moaned. \"And, you're so damn tight. You have no idea how amazing you feel.\" He husked as his hand kept working Shane's cock, stroking and pulling gently. \"Fuck...the feel of flesh against flesh...fan-fucking-tastic.\" Chris moaned lustfully.\n\nWhen Chris finally bottomed out, he went still, waiting for Shane to get used to his girth. Shane's entire body trembled as he completely accepted Chris, his mind focusing only on the tide of sensations welling up inside his arse, the deep pressure and the dull ache of a new pleasure. Add those sensations to the friction on his cock from Chris' stroking hand and...\n\n\"Damn.\" Shane breathed.\n\n\"Are you okay, baby?\" Chris whispered, looking down at Shane. But judging by the look of undisguised bliss on Shane's gorgeous face, Chris guessed that he was better than okay. \n\n\"Feels so good.\" Shane rasped as he clenched around the cock filling him. \n\n\"Shit.\" Chris growled at the feeling. He bit his lip till he tasted copper in his mouth as he felt Shane's muscles ripple around him. It felt so fucking good Chris knew he would go insane if he didn't move. \"I need to move, Shane.\" He gasped, the urgency in his groin had built to the point where it couldn't be neglected. \"I really need...\"\n\n\"What are you waiting for?\" Shane moaned, leaning up to kiss Chris' mouth.\n\nAnd with their lips still locked, Chris started thrusting into Shane, slow and easy. Both men moaned into the kiss, not letting go. Shane sighed as his hips moved against Chris, slow and steady, following the rhythm Chris had set. It felt good. And when Chris nudged at Shane's sweet spot, the edges of Shane's vision blurred.",
        "\"Oh shit. Oh fucking shit...\" Shane tore his mouth away from Chris and whispered brokenly.\n\nChris looked down at Shane's pleasure-filled face as he rocked gently into him, wishing he could capture that breathtaking look and watch it whenever he wanted to. Since he couldn't, he made do with something even better, he burned that image into his memory.\n\n\"You are so fucking beautiful.\" Chris whispered, causing Shane to open unfocused eyes to look up at him. \"So perfect.\"\n\nChris' sexily spoken words sent warm shivers of delight down Shane's spine. Shane wanted to tell Chris he was beautiful too but he just couldn't talk. He was totally lost in their love making. It was sweet, erotic, breathtakingly slow and simply beautiful. Shane could have sworn he felt every pulse and every twitch of Chris' cock. Each slow thrust rubbed against his gland, bringing with it a feeling so intense and powerful Shane could feel himself getting close already. With Chris' hand working his cock at the same time, Shane knew he couldn't hold it even if his life depended on it. \n\n\"I'm gonna come.\" He whispered, staring up into Chris' eyes with a look on wonder, pleasure and so much love, Chris' breath hitched in his throat. Shane was completely open to him and it was the most beautiful thing Chris had ever seen in his life. \"Ah God, Chris...don't stop.\" Shane cried, desperately. \"Please, don't stop.\"\n\n\"Come for me, baby.\" Chris rasped, still maintaining his slow thrusts. He was totally floored by the look in Shane's eyes.\n\n\"Ahh...Chris...\" Shane moaned loudly as he lost it. \n\nChris watched as Shane came apart. It was the hottest sight ever. As he shot his load, his legs came up, knees at Chris' waist, inviting him deeper. Though Shane's eyes remained on Chris', they looked totally unforced, glazed with passion. Shane's entire body spasmed ecstatically as he kept coming, his channel tightening rhythmically around Chris. \n\nChris held himself still and took a deep, shaky breath, fighting the urge to follow Shane in bliss. He stared down at the flushed and sweaty and blissed-out face of the sexiest man he'd ever laid eyes on. \"You are so beautiful when you come.\" Chris husked, mesmerized by how ethereal Shane looked.\n\nChris couldn't do anything but stare. And he felt such masculine pride for giving Shane such pleasure. Finally, the last shudder faded and Shane went limp. Still deeply embedded inside Shane, Chris leaned forward and started to lick Shane's cum off his body. Starting with the glob of cum on Shane's chin, he worked his way down, sucking sensually on Shane's nipples when he got to them. Shane moaned as his hand went to the back of Chris' head to hold him to his taut flesh. Chris' hot mouth on his nipple was pure bliss. Chris didn't lick the cum that had landed on Shane's stomach because he didn't want to risk slipping out of his tight heat. \n\n\"Turn over for me, baby.\" Chris instructed softly as he leaned back till he was on his knees between Shane's thighs. \n\nWith Chris' help, Shane turned onto his hands and knees with Chris cock still buried deep inside his channel. Then the real ride began.\n\n\"Not going to be gentle now, Shane.\" Chris rasped. \"Brace yourself.\"\n\n\"Go for it.\" Shane's responded, moving onto his elbows. \n\n\"Lower.\" Chris instructed, his voice oozing with possession.\n\nShane dropped to one shoulder, then the other, his face and neck turned to one side. In that position, his channel was opened up even more, drawing Chris even deeper into him. \"Oh God!\" Shane gasped at the feeling.\n\n\"He can't help you now.\" Chris sounded almost mean as his hands went to Shane's hips.\n\nChris made a sound of bone-deep satisfaction as he started driving his cock in and out of Shane. He fucked, steady and calm, for several minutes, then he sped up as he lost all semblance of rational thought. He pumped deep and fast, focused solely on finding release. Shane grunted with every thrust, unable to move back against Chris due to the tight hold Chris had on his hip. Chris was merciless. He ground his hips against Shane, circling, screwing and deep-dicking him. He would pull back till he was almost out, then slam back in, the thick length of his rigid cock tunneling deep. Chris took his pleasure, moaning Shane's name the whole time, his senses overwhelmed.\n\n\"Tight and deep.\" Chris said through a labored breath, his hands stroking Shane's arse and thighs as his hips found a brutal rhythm.\n\nShane wanted to screw Chris back but he couldn't move, thanks to the position he was in. He had never felt so possessed, taken, dominated and vulnerable as he felt at that very moment. But what surprised Shane was that it actually felt good relinquishing total control for the very first time in his life. He knew Chris would take care of him. Then it hit Shane...he actually trusted Chris. Shit! Shane gasped at the sudden realization. He felt himself begin to tear up and groaned. For the very first time in his life, Shane felt open and not just in one way. He felt so alive and excited and afraid all at once. Chris owned him body and soul. \n\nShane felt the adrenaline whirling through his body. He could feel every slick, hard inch of Chris' cock as it slid deep then withdrew. Shane wished he could see that cock as it moved in and out of his arse. He craned his neck to meet Chris' eyes. Their eyes clashed and the look of sheer unadulterated lust in Chris heavy-lidded eyes made Shane's breath hitch in his throat. Shane couldn't look away. Didn't want to look away. He felt that emotional connect that he never allowed himself to feel. He felt it in Chris. \n\n\"Shane...\" Chris breathed, the look in his eyes clearly showing that Shane wasn't alone in how he felt. \n\n\"Chris...\" Shane whispered back. And as he stared into Chris' eyes, he saw Chris slide his hand, as if in slow motion, from his hip to that sensitive spot between his lower back and arse, and rub. \n\nShane went berserk. With a passionate growl he moved back onto his hands and started thrusting back frenziedly against Chris, in time to the movement of that hand on his pleasure spot. Chris' eyes rolled back in sheer ecstasy. It was violent, hot, sexy and off-the-fucking-charts!\n\n\"Shane, oh God.\" Chris groaned as he started to pound into Shane faster, matching the new rhythm that Shane had set, nailing Shane's gland hard. They were fucking. Pure and simple!\n\nThe only sounds that could be heard besides Sam Smith's low sweet voice in the background was their breathless grunts, lustful cries and the erotic sound of slapping of flesh against flesh as the two men fucked each other's brains out. Chris slammed into Shane, over and over ... shafting his channel with fast, powerful lunges. Shane gave as good as he got. Chris threw his head back with a cry as Shane gyrated sexily against him. \n\n\"Oh fuck, Shane.\" Chris breathed, his eyes riveted on Shane's arse. It felt so good, every muscle in Chris' body was taut, every nerve ending alight with sensation. He faltered in his movement momentarily, totally hypnotized by Shane.\n\n\"Chris...\" Shane almost sobbed, his body glistening with sweat. The combination of Chris' fingers caressing and rubbing his pleasure spot and the friction of Chris thick cock rubbing and surging against his prostate was too much. An intense jolt flashed violently through him each time Chris hit that prostate. And at the hard and fast way Chris was plowing into him, that prostate was taking a rough pounding. He was utterly possessed, completely defenseless. Shane's fingers clawed the sheets till a tearing sound could be heard. He really couldn't take anymore. \"Please...\" His body shuddered violently as he whimpered brokenly. \"Chris please...\"\n\nChris heard Shane's voice and felt the change in his body the exact moment Shane totally lost his shit. And at that point, Chris finally let himself go. He allowed himself to become totally immersed in Shane, and not just his body, but his heart, his soul, his thoughts and emotions. He pulled Shane up and turned his head to capture his mouth in a wild kiss, feeling his own orgasm race hotly down his spine. Chris reached around to touch Shane's cock and found it soft and wet, confirming that Shane had already spent himself just as Chris had suspected. And when Shane languidly started to suck erotically on Chris' tongue, Chris cried out, coming hard, deep in Shane's arse. The world disappeared as Chris' body jerked spasmodically in agonized rapture... his long-denied orgasm ripping out hard and fast. Chris held on to Shane throughout his climax, kissing Shane deeply till the world slowly reappeared. Both men moaned as Chris slowly pulled out his softened dick. \n\nChris drew Shane to the part of the bed that had not been soiled with cum and pushed him onto his back. Then he crawled partially on top of Shane, aftershocks still rattling his wrung-out body.\n\n\"Holy fuck,\" Chris whispered as he turned his head with the intension of kissing Shane. He froze when he saw the streaks of tears on Shane's face. \"Fuck, Shane, did I hurt you.\" Chris' heart started pounding and it had nothing to do with the mind-blowing sex he'd just had. \"Shane...\"\n\n\"What? No.\" Shane's eye widened in surprise. \"Why would you think that?\"\n\n\"You have tears on your face.\" Chris pointed out.\n\n\"Oh... It's nothing.\"\n\n\"You expect me to believe that?\" Chris whispered, wiping Shane's face with the covers. \"Tell me what the problem is, please. We said we were going to talk about everything remember?\"\n\n\"Chris it's nothing. Really. I was just... I love you. So fucking much.\" He sighed. \"And I'm leaking all over the bed.\" He added with a groan.\n\n\"Oh fuck.\" Chris swore as he rolled off the bed. \"Don't move.\"\n\nBut by the time Chris got back into the room with a washcloth, Shane had already stripped the bed and was almost done putting clean sheets on. Chris stood there and watched Shane till he was done.\n\n\"Dude, I told you not to move.\" He said sternly but there was a smile in his voice. Shane grinned as he started towards Chris with a slight limp. Chris swore. \"I hurt you.\" He groaned, reaching out to draw Shane into his arms.\n\n\"Hey?\" Shane whispered, looking into Chris, worried eye. \"Don't. If a little soreness is all I get for this mind-boggling experience, I'll do it every morning, noon and night.\"\n\nChris didn't seem convinced. With a moan he hugged Shane tightly, burying his face against Shane's neck. \"Sure you're okay?\" He muttered.\n\n\"I'm fine, Chris. Well, I must admit I feel extremely well-fucked.\" Shane murmured, kissing Chris softly on the mouth. \"What can I say? You rock my world.\" Shane purred.\n\n\"And you make mine spin.\" Chris responded huskily, his eyes alight with satisfaction.\n\n\"I know.\" Shane responded smugly. \"Come on.\" He pulled out of Chris' embrace and took his hand to draw him into the bathroom. \n\nThey showered together, lathering each other and rinsing off amidst tiny kisses. They were both exhausted. When they got back to bed, Shane got into his favourite position, with his head on Chris' chest. Just before he drifted off he thought he heard Chris say 'I love you too, Shane', but he was sure his mind was playing tricks on him so he didn't acknowledge it. \n\nChris pressed a kiss to Shane's head and tightened his hold on him. It felt great to finally admit it out loud that he loved Shane, even if Shane hadn't heard him. Why had he even doubted that in the first place, Chris wondered. He was completely and irrevocably in love with Shane Lewis and he didn't care who knew. With a contented smile on his face, Chris drifted off to sleep with one thought in his mind... \n\nHe couldn't wait to show off the love of his life to his squad.\n\n***\n\nSo...who was the better Top? Shane or Chris? "
    ],
    "authorname": "adjoaq",
    "tags": [
        "passion",
        "outing",
        "gay drama",
        "shane",
        "chris",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/unbreakable-bond-ch-06"
}