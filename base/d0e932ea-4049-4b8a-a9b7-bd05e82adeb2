{
    "title": "Claiming Treasure Ch. 61-Conclusion",
    "pages": [
        "Chase Nygaard's POV \n\nArrowhead Pack Clinic \n\nLunch hadn't happened, and dinner approached as I continued my vigil at Rori's side. The placental tear had partially healed, and the blood flow had stopped. That was the good news. The bad was that she had lost a lot of blood along the way. \n\nI had a cloth and a bowl of warm water, cleaning the blood from her fur as she slept. I kept glancing at the monitors, one for my mate and one for my baby, the only sounds in the room. I squeezed the bloody cloth out over the bowl and kept up my work. \n\nI could see our son moving around inside the tight ball of her abdomen, just forward of her hind legs. This morning, Rori's abdomen showed a baby bump. In her wolf form, it was more of a baby bulge. I looked up at the fetal monitor, relaxing when I saw his heart rate hadn't changed. He just wanted to move around. I put my hand on her belly, causing him to still. \"How's my little guy doing,\" I said as I moved my hand over him. He was head down, and I felt a leg kick as he started moving around again. \"Are you going to be a born soccer player like your Momma?\" \n\nHe kicked again. \"He's a midfielder, he's got a strong leg,\" Rori said as she stretched. \"Is he doing all right?\" \n\n\"You're both doing fine,\" I replied. \"The bleeding has stopped, and your placenta is healing. You need to rest and eat.\" \n\n\"I could eat half a deer right now,\" she replied. \n\nThere was a knock on the door, and I recognized Possum's scent. \"Come in, Mom,\" I said. \n\nShe opened the door, holding a tray of food and a few bottles of milk. Rori's tail started to wag as the smell of braised beef filled the room. \"I brought you some dinner, but don't eat it too quickly.\" \n\n\"I'll feed her,\" I said. She handed me the metal bowl, filled with chunks of beef and gravy. \"Nothing for me?\" \n\n\"You're going to eat in the dining room and reassure the Pack, plus you have all kinds of work to do with the guests leaving and the problems at the front gate,\" she said. \"Go on, ruck off. I can take care of my girl.\" \n\nThe problem with having humans in your Pack, especially in-laws, is that you can't Alpha command them. She pretended I was in charge in front of the Pack, but I knew I had no choice here. \"Mom, why don't you feed her while I eat and grab a quick shower?\" \n\n\"Good idea, son.\" \n\nI leaned down and kissed Rori's head. \"I'll be back in an hour,\" I whispered. \n\n\"Take your time. The Pack needs you, and I can't do anything but rest.\" She licked my hand and turned towards her Mom, who was sitting on the edge of the bed with the food. I left them and walked out the door. \n\nFBI Agent Lana Black got up from the waiting room, where she was talking with some females from our Pack. She stood and followed when I walked out of the treatment area. She got up and followed me into the early evening sun, where Vic was waiting outside with Senior Agent Allison Cook. \"We need to talk,\" he said as he started walking with me towards the Pack House. \"Our reinforcements will be here in twenty minutes.\" \n\n\"Reinforcements?\" Lana looked over at Allison in confusion. \"What reinforcements?\" \n\n\"We can't depend on the FBI or the Sheriff to protect our Pack and keep the peace in the long term, so we've called in some good friends of ours to help,\" Vic said. \"I expect between twenty and fifty members of the Steel Brotherhood will be here today, with more arriving tomorrow.\" \n\n\"You think it's a good idea to insert a biker gang into a volatile situation?\" \n\n\"They've helped us before, and they are a CLUB, not a gang,\" I said. \"Who's coming?\" \n\n\"The National charter put out the call for anyone who could come up and help. I planned to organize the help like last time. I'll put some at the entrances, and some at the beach.\" \n\nI nodded; the idea was to have them as a buffer. It would let us separate those known werewolves from the video coverage from potential crazies. \"Issue rifles and pistols from the armory to those who need them. I want at least one boat out on the water at all times, occupants with recognized carry permits in Minnesota. Nobody goes past the vehicle gates armed, leave that for the police,\" I said. \"Agent Cook, I'll need you to warn law enforcement they are coming and what they are here to do. They will be on my land at my invitation, and none are felons or prohibited from possessing firearms. They wouldn't be in the Club if they were.\" \n\n\"My boss will want to check that,\" she said nervously. \"He's going to want to stop and check.\" \n\n\"Lacking probable cause, he has no standing. A permit isn't required to carry a firearm on private land, and we will carry in a manner that doesn't threaten law enforcement. Make sure he knows we aren't asking permission, we're warning him of our intention to use an armed show of force to deter any attacks on the Pack.\" We'd been through this before. \"If he has any questions, he can contact our Pack Lawyer, Ralph Emerson. Anything dealing with coordination can go through the senior person at the main gate, or through one of you.\" \n\n\"I better talk to them in person,\" she said as she turned around. \n\n\"You're going to go from naked pool parties with werewolves to pool parties with werewolves and bikers,\" Agent Black asked. \n\n\"We haven't gotten that wild around humans, though I'm sure a lot of the single guys would appreciate it,\" I said. \"I'll put out the word.\" Opening the link to the entire Pack, I updated them all at once. \"Our friends from the Steel Brotherhood will be here soon to help with security. We need to prepare rooms and plan food for up to fifty for the next week. The pool is swimsuit-required effective immediately. In the meantime, the previous restrictions apply. Unless you are in a spot like between the Pack House and the Clinic that is out of sight of lake and borders, anyone who shifted at the road is to stay out of sight. Use the tunnels between buildings. Also, all windows facing the lake or the borders are to keep shades down, or drapes pulled shut. We don't want to give any snipers a free shot. Vic will be adjusting the security watch schedule and changing assignments as our help arrives, so direct any questions to him.\" Vic lowered his head as he opened the door to the lower level of the Pack House for me. \"The ban on wolf forms outdoors remains in effect. If you need to shift, do it inside where no humans can see you. I'm proud of you all and what you have done, Arrowhead Pack. That is all.\" I repeated what I'd said over the link to Agent Black. \"Anything else I might be missing?\" \n\n\"Arming up and surrounding yourself with bikers isn't going to make people understand you or accept you,\" she said. \"It makes it seem like you have something to hide.\" \n\n\"You're right,\" I said. \"I have an idea.\" We went up to my office to make some calls. \n\nRori King's POV \n\nArrowhead Pack Clinic \n\nI felt much better after eating some food and taking a nap. Doc Olson woke me up as he did another exam, and he told me I was doing fine. I needed to rest and heal, so I put my head down on the pillow and closed my eyes. \n\n\"Rori, are you up for visitors? The toddlers are restless, and I have a big favor to ask.\" \n\n\"What?\" \n\n\"The Dateline NBC people are here, and I'd like to grant them an interview with our family. Vic and I think it would help to humanize us and what you did out there.\" \n\n\"Can we trust them?\" \n\n\"So far, the network has been balanced in the coverage. Colletta agrees that we need to get out in front on this, before the anti-weres gain momentum.\" Possum had mentioned the 'anti-weres' as a collection of people coming out against our integration into human society. They ranged from openly violent to uncomfortable in their views on us. \"I'll bring one reporter and a camera crew in, and we can do the interview with the babies next to you.\" \n\n\"Some interview, what am I supposed to do? Bark?\" \n\n\"I can translate, and we can use blinking or something for yes/no questions.\" \n\n\"Fine. Send someone in to change the sheets and brush my fur out. I have to look good on television.\" \n\n\"You look breathtaking all the time,\" he said. \n\n\"Suck up.\" \n\n\"True. I'll get everything set up and see you in fifteen minutes.\" \n\nA minute later, one of the Omegas came in and changed the sheets with Doc's help, then pulled out a brush. I moaned in pleasure as she groomed me, but growled when Doc got up to leave. \"Mom should stay since she's a human. Tell Doc he's stuck here too, in case they have medical questions,\" I sent to her to pass on since Doc wasn't our Pack. \n\nThere was a knock, and a beautiful reporter walked into my room, followed by her camera crew. \"Hi, I'm Tandy Roberts,\" she said as she came closer, holding her hand towards me like one would if greeting a dog. I sniffed and licked at it, my tail wagging. I was pleased she wasn't afraid of the Big Red Wolf. \"Your husband is outside with your toddlers. They are SO cute! We thought it would be good footage to watch them come in to see you. Chase said they see you this way a lot.\" \n\nI nodded my head and looked towards the door. The cameraman set up behind me, the sound guy holding a microphone up high. \"We're ready,\" I sent. \n\nThe door opened, and my boy and girl came running in as fast as their little legs would take them. \"Mommy!\" Mom lifted Cheryl to the bed while Chase picked up Mark. Both of them moved towards my neck, hugging me tight with their tiny arms. I smelled them both, licking their necks as they giggled. Chase came and sat in front of my baby bump, protecting it from their legs. \n\nThe interview took almost an hour, and I thought it went well. The nannies took the toddlers after the first ten minutes, leaving me with Chase, Donna, and Doc. It took a few minutes to convince her that I was speaking through Chase; finally, I had Chase leave the room and had her whisper something in my ear, then Chase came in and told her what I said. We covered a lot of topics; Pack life, growing up as a human, finding my mate, the history of the Arrowhead Pack, and our relationship to the Steel Brotherhood. I made sure to talk about my friendships with humans and my vision for the future. \n\nThere were some uncomfortable topics, like when we talked about the changes in Pack leadership over the last few years as we cleaned out the bad Alphas. I let Chase sum it up. \"Any group that remains isolated and unaccountable, where powerful people make their own rules, is rife for abuse. Rori and I started this Pack with those who had suffered at their hands, and we have pushed for change. We think that openness and friendship will help werewolf and human alike.\" \n\nChase was allowing them to interview Pack members and tour our grounds, so they packed up and left. I was tired again, so after Doc got me a bedpan to do my business, I was happy to sleep. \n\nChase Nygaard's POV \n\nRear Tunnel Exit, Arrowhead \n\nOne of the hot topics that the film crew wanted to cover was the health of Deputy Mark Brighton. He had spent most of the day resting and eating as he recovered from his ordeal, with Luna Kathryn by his side the whole time. The two were like any new mates, totally besotted with each other. Mark hadn't shifted back yet, and his mother was getting nervous. The crew interviewed all of them, with me interpreting for Mark as \n\nSince he was my Pack until he completed the mating with Luna Kathryn, I asked him if he would mind the crew filming his shift back. That was what brought us to this scene, in between the shifting house and the woods. The first shifts in each direction could be painful, but after that, they were painless. Kathryn shifted into her grey wolf to lend support, and we talked him through the change. Since they were filming, we'd placed a thin sheet over his black wolf; he wrapped it around himself as he stood. \"That was wild,\" he said. \n\nKathryn followed him back into the shifting house, where his Mom had brought his uniform and equipment. The two of them emerged a few minutes later, hand in hand. \"There's one thing missing,\" I said as I stood with his Mom. \n\n\"Yes, his family should be here,\" she said. \n\n\"Jessica is here?\" He looked around. \"She's in Virginia.\" \n\n\"She flew in this afternoon,\" his Mom told him. \n\n\"And they just arrived,\" I said. \"Come on, let's go meet them.\" The three of us, joined by the reporter and camera crew, walked towards the low hill that separated us from the road to the front gate. \n\n\"Boss, you shouldn't walk down there,\" Vic said. \n\n\"I'm in a group with a Deputy and an FBI agent, I'll be fine,\" I sent back. \n\n\"Hold up.\" We waited a minute until he ran out, handing me the vest. \"Put it on, Alpha. Rori will beat my ass if you get hurt.\" \n\n\"What about them?\" \n\n\"The protestors aren't interested in shooting cops.\" \n\nButtoning my shirt as we walked, we headed for the gate. I recognized and greeted a few of the Steel Brotherhood early arrivals, who were set up just behind the vehicle gate. Agent-In-Charge Smallwood was talking with Senior Agent Cook up by the Command Post; by his glare, he wasn't happy with me. I turned my head to a red minivan, where a woman in her early twenties got out of the passenger door. \n\n\"JESSICA,\" Mark yelled as he ducked under the vehicle arm with Kathryn following behind. \n\n\"Hi Mark,\" she said as she hugged him. \"You're all right? And you're a werewolf?\" \n\n\"Never better, and yes,\" he said. \"Jessica Prinz, may I introduce my fianc\u00e9, Kathryn Robertson. She is the Luna of the Denali Pack in Alaska.\" \n\nHer eyes got wide. \"Luna?\" \n\n\"Senior female. My son is seventeen, he's the Alpha, and the two of us will help him grow into the job.\" \n\n\"It's all so wild,\" she said as she hugged Kathryn. Stepping back, she looked at her big brother. \"I brought you something. Come on.\" \n\nAs we walked towards the van, we heard a loud bark. \"Max?\" Mark moved faster as the vet helped the injured German Shepherd down to the ground. \"MAX!\" Their reunion was a happy one, although Max took a few sniffs before he settled down. \n\n\"Your scent has changed,\" I told him as he hugged his dog. \n\n\"He smells a lot different to me, too,\" Mark said. He took the leash, and Max sat at heel for him, with his shaved shoulder and the white cone of shame. \"He's going to be all right?\" \n\n\"He will take six weeks to heal, and then he should be able to resume duties,\" the vet said. \n\nMark scratched his ears as they stood there. \"Six weeks. We've got a lot to talk about, Kathryn. My job, our mating, our future.\" \n\nShe leaned into his side. \"Nothing needs to be decided tonight. Come on, your sister must be hungry, and the buffet is still going.\" \n\nThey returned to the Pack House while Agent Black and I escorted the television crew back to their van. There were about a hundred protestors, enclosed behind police barricades across the road from our entrance. To reach the press, we had to walk on the other side of the street. A half-dozen officers surrounded me as they yelled and cursed at me while the cameras rolled. I smiled and waved at them, which enraged them more. Finally, we reached the area the Sheriff had allotted the press vehicles. At least a dozen reporters handed me their cards, begging me for the same access the Dateline crew received. I promised I would consider options for tomorrow, but tonight my wife and I would rest. \n\nIt had been a long day. \n\nThe officers escorted me back towards the command post where Agent Smallwood was waiting for me. \"I want those bikers OUT of here tonight,\" he demanded. \n\n\"Those bikers are my friends and guests,\" I replied evenly. \"I believe I made that clear to Agent Cook before she came out here.\" \n\n\"You're provoking the protestors and stoking fears,\" he said. \"Pull them back and disarm them, or I'll do it for you.\" \n\n\"Get a warrant, then,\" I said. \"We're private citizens on private land, well within our rights. You worry about the crackpots down the road.\" I turned to walk away. Agent Cook looked at her boss for direction; he motioned for her to follow, so she turned towards me. \n\nI got an urgent send from Warrior Lance. \"Alpha, does the FBI have a sniper at the top of the hill, to the right of the green and white house? I saw a scope flash.\" \n\nI relayed it to Smallwood. \"We don't have sniper assets in place,\" he said. \"County SWAT left earlier this morning.\" \n\n\"GET DOWN,\" Lance shouted into my mind. I grabbed Agent Cook as I dove for the ground, pushing her under the rear overhang of the command post. I heard a loud CRACK and thump as the supersonic bullet passed through where I had been standing and into the side of the trailer. \n\n\"MOVE,\" I yelled as I pushed her farther under, scrambling after her and forward to where the wheels would give us some protection. There was a second shot, this one from the direction of the Pack House. \n\n\"SNIPER DOWN,\" Lance sent. \n\n\"SNIPER IS DOWN,\" I yelled at the officers who were still scrambling for cover. \"Send units to the green house up the hill there.\" I looked over at Allison, who was looking at her hands. \"Are you all right?\" \n\n\"Scraped up,\" she said. I could see and smell the blood on her palms, and her right knee was bleeding under the torn dress pants. \n\n\"Crawl out the other side until they get the scene secured. These idiots don't want you; they want me dead.\" \n\n\"Thanks for getting me out of the way,\" she said as she crawled farther back. Any gun battle you walked away from was a good one. \n\nOne of the deputies who had taken cover behind the command post saw her and pulled her up. I stayed out of sight until the officers got to the scene and verified the shooter was dead. He was a man in his forties, carrying a scoped deer rifle. \"Come on out, Chase,\" Agent Cook said. \n\nI rolled to the edge and stood up, dusting my clothes off. \"Well, that was fun.\" \n\n\"Come on. I need to interview your shooter before my boss decides to take him to the field office in Duluth.\" I didn't want my people leaving our territory. I whistled to the Brotherhood guards taking cover near the gate and waved for them to get me. One of their SUV's was let through, with a few armed men driving. They stopped next to us, Agent Cook pushing me to the center of the back seat before getting in next to the door. She was breathing slowly and deeply, trying to deal with the adrenaline dump from the shooting. \"I've got to say, Chase, this is the most exciting babysitting job I've ever had.\" \n\nI snorted. \"You haven't watched my toddlers yet,\" I replied. \n\nCh. 62 \n\nCarson Nygaard's POV \n\nCascade Pack Entry Road \n\nI'd returned to the car while the Sheriff got the road closed and called for reinforcements. I spent some time watching the news coverage out of Seattle on my phone. It wasn't looking good; protests were already breaking out, and at least two people interviewed were advocating taking up arms and wiping us out. They looked a lot rougher than the people demonstrating for us to be left alone. \n\nThe press arrived first. \n\n\"Alpha, we have an incoming helicopter flying low and approaching the Pack House,\" the warrior in our Security Control Center sent. \n\n\"Have people waiting to take firing positions on the roofs, but don't send them up there until we identify it as hostile. Make sure the Barrett Fifty is in the hands of our best shooter, and everyone else takes high-powered rifles. The AR-15's will do nothing against a helicopter. Have everyone else stays inside and away from windows.\" \n\n\"On it.\" \n\nA few minutes, Beta Nathan, who was in charge of our defenses, sent back more information. \"Not hostile. It's a KOMO news helicopter out of Seattle.\" ",
        "\"Send someone out to wave at it, but nobody shifts. I'll call you back.\" Opening the internet on my phone, I found the number for the KOMO newsroom and, after identifying myself, got the Station Manager on the phone. \"You have a helicopter flying over my house,\" I told him. \n\n\"We wanted to get some aerial photos, and we suspect the protestors heading your way may turn violent. Our news van is still an hour away.\" \n\n\"Do you have a reporter on board?\" \n\n\"We do, Franklin Wooster.\" \n\n\"My men will mark a landing area. I have some time now if you want an interview. Bringing a van through might get difficult in an hour.\" Colletta had been insistent on being open and approachable, so I was going to do my part too. \n\n\"I'll let them know. Thank you, Mr. Nygaard.\" \n\n\"Carson. Mr. Nygaard makes me feel old.\" I hung up and sent the information to my Beta, Nathan Bannister. \"I want the Pack to look domestic and approachable. Mated pairs are sitting together in common areas, children playing games in front of the fireplace, and everyone friendly and smiling. Volunteers only, since being shown on television will put a target on your back. People who go into town a lot should be there, as it won't take long for people to figure out they are werewolves anyway.\" \n\n\"I'll get things ready,\" Nathan said. \n\nI sent my driver up to get the cell number of the Deputy stationed at our road. It would be best if he could reach our security people directly, and we had friends coming we wanted in. \"Tell him that any members of the Steel Brotherhood are guests, and to let them through.\" \n\nHe sent the response as he talked to him. \"Sheriff says no one gets through.\" \n\n\"Too bad. It would be a bigger problem if we had to come out there and bring our friends back in person. Tell him that Brothers on my land beat bikers versus protestors at the roadblocks.\" \n\nAgent Curtis Pratt volunteered to stay at the gate and coordinate with local law enforcement, leaving Agent Melissa Deharty to return with us. \"With our patrols stopped, we're dependant on electronic surveillance to detect any attacks,\" I told her. \"Do you want to stay with me and talk to the reporters, or go to our Security Control?\" \n\n\"Security sounds more fun. I need to report in as well,\" she said. We drove back to the Pack House as I heard the helicopter landing in the field behind the house. When we pulled up to the front doors, the camera crew was filming the outside. We got out, Melissa heading inside. \"Welcome to the Cascade Pack,\" I said as I walked up and shook his hand. \"Carson Nygaard, I'm the Alpha.\" \n\n\"Thank you for inviting us to land,\" a man in a fancy grey suit and a bright white smile said. \"Franklin Wooster, KUSA.\" \n\n\"Ground rules,\" I said. \"You can film what you want, but I will give my people the option of whether to appear on camera or not. That means you don't enter rooms that we don't go into first. I won't order anyone to answer, but you can ask anyone anything off-camera. You only interview on camera if they agree first.\" \n\n\"Fair enough,\" he said. \"Can we start the interview with you out here? The station wants to do a live feed. You're only the second Pack to allow access, so it will probably go out national as well.\" \n\n\"That's fine.\" The cameraman set up the shot with the Pack House in the background, and I asked a few members to come out and sit on the covered front porch. I was happy to see that two of our children started playing catch in the background. \"This is Franklin Wooster from KOMO in Seattle, coming to you live from the Cascade Werewolf Pack east of Mount Ranier. With me today is the Alpha of the Pack, Carson Nygaard.\" \n\n\"It's a pleasure to speak to you and your viewers, Franklin,\" I said. \n\n\"The news that werewolves exist came as a shock this morning. Many of us fear your kind, despite the President's press conference earlier. What would you say about that?\" \n\n\"I would tell them to watch and learn. Our Pack is here, and it has been on this land since before Washington was even a state. Nothing has changed for us; we are still your friends and neighbors. There is no need for violence or fear based on fictional depictions of us. We are not the bloodthirsty killers that some fictional representations show.\" \n\n\"Is there some basis in fact for them?\" \n\n\"Our people are like yours; almost all are law-abiding, but there have been a few bad ones. We have laws and work very hard to identify and punish those men, like Jack Coffey, who harm innocents. Do not judge us by the actions of a few. Instead, think of the history that we have with you.\" \n\n\"Your family has lived here for centuries?\" \n\n\"Yes, a Nygaard has been in charge of the Cascade Pack since my grandfather brought us here in 1834. I took over after my father's death last year. My mother, Colletta, ran the pack with my father for over a century before then. We have prospered here in the mountains, living in peace with our neighbors. I would like to see that continue.\" I heard an airplane coming. \"Nathan, do we have eyes on a plane?\" \n\n\"Looking for it,\" he said. \n\nI continued the interview as the sound of the plane got louder. One problem with pulling everyone back from the borders was I didn't have patrols keeping eyes out for stuff like this. The plane came over the trees from the north-west, heading right at us. \"GUNS,\" Nathan sent to everyone as he got the plane on camera. \n\n\"TAKE COVER NOW,\" I yelled. I shoved the reporter towards the Pack House as two rifles started firing at us. I heard screams and looked over in horror to see our ten-year-old Melanie on the ground, holding her leg. I didn't hesitate; I ran for the kids. Lou had scooped up his son and had turned back towards Melanie on the ground. \"GET HIM INSIDE, I'VE GOT HER,\" I sent to him as I ran towards them. \n\nThe gunfire had stopped as the plane passed over the house, but it was turning for another run. \"I've got you,\" I told Melanie as I scooped her up. She held onto my neck as I grabbed her around the back, holding my hand on the bullet wound. I ran as fast as I could towards the entrance, but I wasn't going to make it before they were in position again. \n\nThe plane started circling to the right, two rifles firing from the front and back of the single-engine plane. Bullets hit around me as I ran for the stairs. Warriors were flocking to the roof and windows, and return fire convinced them to back off a little. The short pause was all I needed to get up the stairs and inside. \n\nI heard the big Barrett fifty-caliber rifle barking out round after round as I set Melanie down on the nearest table. I pulled my shirt off, wrapping it around her badly bleeding thigh and tying it off. \"Be brave, Melanie, you're going to do fine,\" I told her. \n\nHer parents arrived as I was picking her up; her mother was frantic. As I turned, I saw Franklin recording it all with his cellphone. \"Where's the camera crew,\" I sent. \n\n\"Behind the posts on the front deck, taping the attack,\" Nathan responded. \"We got some good shots in on the plane, and the engine is on fire. It won't get far. You're clear to the clinic.\" \n\n\"Send warriors out in vehicles, but stay back and do not engage. Contain and wait for law enforcement.\" I ran back out the front door, people clearing the way for me as I ran across to the Pack Clinic. I updated Heather as I ran so she wouldn't worry. \n\nDoc Myers was in scrubs, cutting into the chest of a female Omega who had been shot once in the chest, his nurse assisting with the surgery. \"Set her down on that table and start an IV,\" he told me as he looked over. \"Was the wound shooting blood or just bleeding?\" \n\n\"Just bleeding,\" I said. \n\nHe checked the shirt, which was soaked on the front but not leaking. \"Don't take the pressure off the wound,\" he told Melanie's father. \"You clean up.\" \n\nHer Mom calmed her as I went to wash up. I tossed off the bloodstained clothes and washed the blood off my hands before pulling on scrubs from the cabinet. Washing again, I put on gloves and grabbed an IV kit. Mom had insisted that Pack leadership qualify as Emergency Medical Technicians, and I silently thanked her for it now. I cleaned the back of her hand with an alcohol pad, then inserted the needle and hung a bag. Doc had me warm up two units of cross-matched blood for her as I waited for him.  \n\nIt took another fifteen minutes before Doc finished reinflating the Omega's chest and repairing the damage. He left his nurse to close, then changed gowns and gloves before he came over to see his next patient. \"How are you doing, Melanie?\" \n\n\"It hurts,\" she said. \n\n\"I'm going to give you something to sleep while I fix this up, all right?\" He injected a sedative into her IV line. \"Count backward from a hundred for me.\" \n\n\"100, 99, 98, 97...\" She got to eighty before she was out. \n\n\"Mom and Dad, go clean up and put on gowns and masks. Alpha, hang the first bag. She's going to lose more blood while I repair it.\" I put the needle into the back of her other hand. Doc cut away her jeans and my bloody shirt, inspecting the gunshot wound. \"Small caliber?\" \n\n\"AR-15's,\" I said. \n\n\"Figures. No exit wound.\" His nurse joined him, and Doc Myers thanked me and asked if I didn't have other things I needed to be doing right now. \n\nIt was a polite way of telling his Alpha to get out of his way. I think all Pack Doctors liked it when they could order an Alpha around. \n\nNathan had reported back; the plane didn't make it over the mountains, and the crash area was densely forested. They were going to have to lead the Sheriff to the site using the ATV trails. It would be another twenty minutes to get people there. \"See if the news crew will check the site,\" I sent. \n\n\"No need, the State Patrol helicopter is five minutes out.\" \n\nAs I turned to the door, I noticed that Franklin had been standing in the corner of the room the whole time, recording everything on his fancy cellphone camera. \"Outside,\" I said. I made sure the door was closed behind us before I continued. \"She's ten years old, Franklin. You can't show it.\" \n\n\"It's dramatic gold,\" he said. \"At least let me edit it. I'll give you and the parents the right to veto anything you don't like.\" He could see I wasn't happy with that. \"Trust me on this. The footage of the attack, you carrying her inside, the drama in the clinic? If you want people to see you as human, let them see you in this crisis.\" \n\n\"Edit it, and then we'll talk,\" I said. \n\n\"You won't regret this,\" he promised. He headed off towards his camera crew, and a few minutes later, they were in the air. \n\nIt turned out that he was right. Some skillful editing and voiceovers, and Franklin called to tell us the footage is ready for our approval. Melanie thought it was good, and her parents were amazed at what a brave girl she was. Her Alphas were impressed too. We gave him the go-ahead to show it. \n\nThe rest of the day was nothing fun. The Sheriff, State Patrol, FBI, and Secret Service were all over the Pack property. The three men in the aircraft died on impact. All three were self-proclaimed werewolf hunters. \n\nThere was another emergency Alpha meeting at eight that night. We officially hadn't 'outed' the Canadian, European, and Russian Packs. The Canadian Packs went privately to their government, which wasn't that surprised to find out about them. The European packs were still secret, with Mom leaving it up to them to set the timing of coming forward. We were so connected that no one expected that to be a long-term thing. \n\nWe weren't the only Pack dealing with attacks; I learned of six more clashes, ranging from sniper fire to arson. \"It could have been much worse,\" Colletta said as the updates finished. \"We have the support of the President and her Administration, and you all acted with honor in the face of violence. The tide of public opinion is turning in our favor.\" \n\n\"Not soon enough,\" Alpha Long said. \"There are too many missing person reports, and the news reports just handed them the prime suspects.\" \n\n\"Your Pack was the problem, and our deal with the Feds said we would fully cooperate where humans were involved,\" Colletta answered. \"Your only choice is full cooperation. Invite law enforcement in, open your records, and show them where the bodies are.\" \n\n\"Proving werewolves aren't a danger won't be helped by the sight of dozens of body bags,\" he said. Bitterroot was the worst offender, with over a hundred women used to birth werewolves; the practice was abandoned decades ago after finding the offspring were all weak. Nothing they tried could give them the warriors and high-level wolves they wanted. \n\n\"All the men who raped and killed them are dead, and it was our laws that finally stopped them,\" Colletta responded. \"We have no choice but to deal with the facts we have. Turn over the records and the videotapes of the trial. I will work with the FBI to manage the fallout.\" \n\n\"It's a mess,\" Long said. \"My Pack is reeling; members keep abandoning it, and the ones left aren't a good base. I don't know how much longer it will be tenable.\" \n\nI wasn't sure that Pack liquidating would be a bad thing. Clean break, sell the land, pay reparations to the families. After all the crap that had happened at that Pack, liquidation seemed like a fitting ending. I'd trade Arrowhead for Bitterroot any day; hell, almost all the Bitterroot Omegas helped form Arrowhead! \"It's not like it all has to happen immediately,\" I said. \"Work with the Chairwoman to get the FBI involved and looking at the records. Honesty and transparency. The Pack is nothing like it used to be, and they'll see that.\" \n\nFrank leaned forward towards the camera. \"In the meantime, we need to be both open and guarded. The embeds the President put in our Packs have helped us a lot, and we need to expand that. If your local law enforcement doesn't trust you, offer to let them embed someone in your Pack. Consider the same with the press; we've had some great successes there.\" \n\n\"The Council is retaining a public relations firm to help manage it all,\" Colletta said. \"I will provide you contact information tomorrow. I need you to keep them informed, but most of all, listen to what they have to say. We need to speak with one voice in this; if you aren't sure, point them to me.\" She paused, and I could see how exhausted she was. \"Does anyone have any good news? I could use that right now.\" \n\nAlpha Boronsky smiled at that. \"I am pleased to announce that Luna Boronsky is now pregnant,\" he said. That brought a smile. \n\nLuna had been blessing us lately, and we desperately needed that to continue. \n\nCh. 63 \n\nColletta Grimes' POV \n\nWatergate Hotel, Washington, DC \n\nJune 8, Three Months After Exposure \n\n\"Excuse me, Madam Chairwoman. May I get your autograph?\" \n\nI looked up from the breakfast table, seeing a young woman clutching a copy of TIME magazine from June 2nd. THE FIRST FAMILY OF WEREWOLVES, it said above the cover picture of my sons and daughters, on each side of me as I sat in Frank's lap. Taken two weeks ago, I smiled at how well it turned out. All of the women were notably pregnant, due in the late summer except for Heather and Rori. The two wolves in the photo had huge baby bumps, especially Heather's dark brown and white wolf. Her belly couldn't hide as she lay on her side at Carson's feet. She could barely walk anymore, so we all had to meet at Cascade Pack for the photoshoot. I looked over at the leader of our security team, all humans, and he nodded, letting me know she wasn't a threat. I just rolled my eyes; it's not like the teenager could hide a weapon under that tight dress she was wearing. \"Of course,\" I said as I took the Sharpie from her. I signed near my head, then handed it to Frank to sign. \"The price of celebrity,\" I teased. \n\n\"Could I take a quick photo? My friends won't believe this.\" I nodded, and the waitress took a quick photo before the woman returned to sit with her family. I recognized him as a Senator from Colorado and gave them a quick wave. The hotel restaurant was full of movers and shakers in Washington, and that now included us. \n\nThe family reunion at the Cascade Pack was about more than just pictures. A lot had changed in the two months since Jack Coffey had forced the Arrowhead Pack to shift on camera. The public reaction varied between easy acceptance and violent opposition, and it took weeks for things to settle down. I had survived a recall vote in the Council after the attacks on multiple packs, but our policy of openness eventually won over the people. We weren't completely safe yet, and our security remained on alert; there were still people out there who would never accept us. We had lost sixteen wolves to human attacks, yet we didn't retaliate. \n\nWe shared. We invited camera crews in, we were the subjects of special reports and documentaries, and we admitted our crimes and secrets. Bitterroot was the biggest problem we had; so much evil had gone on there, and the locals were furious. We made the hard decision to dissolve the failing Pack, moving remaining members to other Packs or Council Prisons. The FBI concluded that there was no one left to prosecute for the kidnappings, rapes, and killings. We released videos of trials and punishments. People were shocked at their speed and brutality, but that was our way. \n\nAlpha Long returned to his previous position as the Council, overseeing the legal aspects of the missing person cases. The previous Alphas had kept detailed records of their human breeding program. The files allowed law enforcement to close missing person cases in Montana and fifteen other states. \n\nLast week the final bodies had been exhumed and returned to their families. \n\nThere were still daily incursions onto Pack lands, especially those near major metropolitan areas. Few were hostile, some were curious, but the most common ones were female and single. When humans discovered a population of good-looking men and women, who mated for life and could offer youth and long life to their ONE? Well, they wanted in on the deal. Chase said it got so bad at Arrowhead that they started organizing Singles Nights on Fridays down at the beach, also known as \"scratch and sniff nights\" for Pack members in wolf form. \n\nNo humans had received the Change as of yet. The Council was watching a dozen or so possible matches reported, and we were waiting on conversions until the Treaty was approved. Mating with humans wasn't an exact science; Doc thought the bond only came forward when the human was in danger. I'd realized Frank was my mate during the attack on my house, Carson recognized Heather during the fight at Arrowhead, and Kathryn accepted Mark when the bite fever was about to kill him. \n\nOverall, we were doing better than the European Packs. It didn't take more than a few weeks before all of them were exposed, and not every government was as accepting of us as the Western Democracies were. \n\nThe worst treatment was among the Russian packs. The government surrounded Pack lands with military forces and invaded. If not for the warnings they got from sympathetic people in Government, hundreds would now be in Siberian prison camps or dead. The Murmansk and Beloretsk Packs dispersed, escaping through the mountains with only what they could carry in a backpack. They used their emergency plans to flee to the West. The Beloretsk Pack used false passports to board aircraft heading out of Russia, eventually making their way to Vancouver. The Murmansk Pack hired a fishing trawler that dropped them at Adak, an Alaskan island in the west of the Aleutian chain. Both groups applied for political asylum, using the attacks to show why they couldn't return home. \n\nCanada had agreed to take in Beloretsk, while the United States was processing the claim still. I'd spent most of yesterday with the State Department and Immigration, working out a deal. We already had private lands and homes in Bitterroot, and the old Pack was gone. Alpha Boris Serada was meeting with the Governor of Montana today about it. We needed his support to make it all work. \"What are you thinking about,\" Frank said as he cut into his steak. ",
        "\"The Murmansk Pack,\" I said. \"What if Montana doesn't want them?\" \n\n\"Governor Senbrenner in Alaska would take them. We may have to put them with the Denali Pack until we can find land and build the facilities. I don't think they would mind Alaska. Hell, Alpha Boris probably remembers when the Russians owned it.\" \n\nI snorted as I thought back; the weather and terrain of Alaska could work for them. \"Coral texted me this morning; Alpha Ivan and Luna Svetlana are spending the next week scouting out potential Pack sites while the rest of Beloretsk stays with them.\" \n\n\"So Greg Barks is underfoot?\" Greg had gone back to live with Beloretsk with his mate Tatiana after the fight with Heather. \n\n\"No, he's an advance scout for them. He knows Alpha Keith will kick his ass, given any reason.\" Normally Coral would, but she was six months pregnant. \n\n\"At least he was acting with his big head now,\" Frank said with a smile. \"Looks like we have company.\" \n\nI looked over to four older men in suits. Councilman Anders Ulffson, Nehemiah Pensky, Yakov Baronsky, and Jurgen Nemmers all walked towards us. The wait staff quickly moved a table next to ours at a word from our security. \"Good morning,\" I said to the rest of the Werewolf Council. \"Everyone sleep all right?\" \n\n\"Like the dead,\" Yakov said. \n\n\"Fitting since an old man like you wouldn't have been able to run for six days through the mountain snows if you were back home in Beloretsk when it went down.\" Yakov had been in Canada at the time and had been a key player with the Canadian government. \n\n\"My son had enough fun. Imagine fleeing for your life with your pregnant Luna clinging to your back the whole way,\" he replied with a smile. \"Still, they all made it out. Praise the Goddess for her protection.\" \n\n\"What happens to you now that your Pack is in North America,\" Frank asked him. \n\n\"I don't know. I suppose at some point the remaining European Alphas will want to replace me with one of their own. It's not a bad thing; I've had a good run.\" \n\n\"Maybe you can take my spot. All this political stuff sucks,\" Nehemiah replied. \"Everyone wants something from you, and kissing politician ass is tiresome. I don't know how you do it, Colletta.\" \n\n\"You pucker up and ignore the taste,\" I said with a grin. \"You're reassuring with your country doctor persona in front of the press. The old ladies love you.\" \n\n\"Don't remind me. Do you have any idea how many marriage proposals I'm getting every day? My secretary doesn't even print them out.\" We all laughed as they ordered breakfast, the conversation among friends easy. Too soon, an hour had passed, and it was time to go. \n\nThe Secret Service was bringing us to the White House this time; the signing ceremony was scheduled for noon in the Rose Garden. \"By Luna, I never thought we'd get here,\" I said to Frank as we passed through security. \n\n\"President Kettering bet big on us, and it paid off. Once public opinion shifted our way, her approval ratings jumped fifteen points.\" \n\n\"She had her reasons for helping.\" \n\n\"True, but all we can do is try to find her a mate. We made that clear,\" he said. \n\nMy second time in the Rose Garden was far less nerve-wracking than the first. Two podiums next to each other, one with the Presidential Seal and one with the howling wolf logo of the Council. \"I am proud that we have negotiated a fair treaty with the Werewolves of North America, for our mutual benefit and security,\" President Laura Kettering said as the event opened. \"Using the template provided by our current treaties with Native Americans, the United States recognizes this special population group and its government. In matters concerning werewolves, the Packs and Councils will have the autonomy to govern themselves while obeying the laws of the United States. It clarifies their legal status and bans discrimination in all forms. We should not tolerate species-ism any more than we tolerate racism and sexism within our borders.\" \n\nI was thrilled with this part of the agreement; ever since we came out, there had been subtle and overt displays of discrimination against our people. After today, having a wolf half was legally no different than any other characteristic since birth. \n\n\"Little grows in the shade, especially peace and understanding,\" she continued. \"With this treaty, the werewolf citizens of the United States can come boldly into the sun with us. Madam Chairwoman Colletta Grimes, as the senior member of the Werewolf Government, will now make her remarks.\" \n\n\"Thank you. Madam President, members of the Administration, and fellow Americans,\" I said. \"A few months ago, a secret kept for millennia burst forth on television, forever changing our society. For centuries we lived beside you, hiding our nature in the rational fear that humans would kill us if they knew we existed. There were a few who tried, but they were the rare exception. Instead, we were able to reach across and build relationships. We have found acceptance, and through that, both groups have benefitted. In the past two months, werewolves able to openly use their skills with their law-enforcement partners have rescued five lost children, apprehended dozens of dangerous fugitives, and assisted in foiling an assassination plot against our President.\" \n\nValerie Grunwald, the Secret Service Chief, had enthusiastically accepted the President's desire to have werewolves on the detail. Three volunteers from the Adirondack Pack became Secret Service Agents after background checks, testing, and an abbreviated training program. Two worked in wolf form, the third as a human to coordinate with the rest of the detail. They had all the skills of a police dog, with the intelligence and instant communications capability of a trained agent. When a man with a ceramic knife lunged for the President last week, one of the werewolves took him down before the human agents cleared leather. \n\nNothing says \"I trust you,\" like putting your life in our hands. \n\n\"I am convinced that the future of my kind intertwines with your own. Together, we will build a better world for all of us.\" I stepped back as the guests applauded. \n\nThe President stepped towards the table as I followed. \"And now for the signing of the treaty.\" She and I signed, using multiple ceremonial pens, to the applause of the gathered people. Standing back up, she addressed the Press. \"The treaty will be forwarded to the Senate immediately for ratification.\" We stayed for another twenty minutes answering questions from the Press, then went back inside. \n\n\"How are you doing,\" Frank asked. \n\n\"My back and feet hurt,\" I said. \"Let's go.\" I turned my phone on, dozens of emails and text messages downloading. I flipped through the ones for my family when my phone rang. \"Carson?\" \n\n\"Heather's going into surgery, Mom. The babies can't wait any longer to come out.\" \n\n\"Oh Luna, protect those girls,\" I said softly. \n\nNo one had carried twins in wolf form before. They were identical twin girls, coming early at thirty weeks. \"We'll be there as soon as we can. Take care of your family.\" I hung up, seeing Frank already on the phone to our pilots. I alerted our security team, and they worked with the Secret Service to escort us to the motor pool, where they drove us to the airport. \n\nI spent most of the drive on the phone, talking to the rest of the family. As we lifted off, I was thinking about my life just two years ago. \n\nI was mated to a man who was willing to destroy his family for power. \n\nMy oldest was a single Alpha-heir, just biding his time. \n\nMy middle boy was unable to move past rejection. \n\nMy youngest boy was burying himself in his medical residency. \n\nMy daughter was fighting to prove herself as a Warrior. \n\nAnd now? All of us mated to good wolves, all Alphas or higher, and all the females were pregnant. Luna had truly blessed us. \n\nAnd as I fell asleep, I was dreaming about holding twins in my arms again. \n\nCh. 64 \n\nCarson Nygaard's POV \n\nCascade Pack House \n\nMy heavily-pregnant mate had turned the small closet in our office into a den for her babies. It was interesting to see a pregnancy where Mom was in her wolf. Doc said her animal instincts were dominant, so she was behaving more like a wild wolf than a human mate right now. \n\nPregnant women had a nesting instinct, where they would make sure the nursery was ready, fold baby clothes, and stock diapers. Heather had blankets and pillows piled in the back of the closet, with the clothes hanging low over her for security. The only light was from a small LED nightlight near the door. It was over a dog bowl where I would place pieces of meat for her, next to that, a bowl for water. I kept a tray with absorbent pads on one side for her to go to the bathroom. \n\nFor the last week, she hadn't come out. I spent my time in my office, working and sleeping on the couch, talking with her over the bond. She had been sleeping a lot as the pregnancy progressed, her belly comically large on her wolf. It almost scraped the carpet as she walked, and made it difficult for her to sleep. I hear her whine as I closed up my laptop for the night. \"Can I sleep with you, baby? I miss you,\" I sent as I walked to the closed door. \n\n\"Leave me alone, you bastard! It's all your fault!\" \n\nI snickered. The twins would be my babies in every way but their conception. \"I didn't get you pregnant. Maybe next time, I can make it my fault?\" \n\n\"Next time? There's no NEXT TIME! As for fault? You're a MAN, you're MY man, and that means you get the blame. You and your right hand are going to become best friends.\" \n\n\"Who are you kidding, love? You'll be begging for another child by the New Year.\" Six months would be enough time for her to heal up and start thinking about babies again. Her wolf was my best ally in this; when the heat arrived, sex was all a she-wolf could think about. Wanting babies was the strongest of her instincts. \n\nThere was a knock on my office door, and I scented the humans behind it. \"Come in, T,\" I said. \n\nThe door opened, and Mongo blotted out the light from the hallway until he was through. Three Tequila, his old lady, was right behind the big man. Both had arrived yesterday from Orlando, planning to spend a few weeks with their only niece as she had her first babies. \"Heather, I'm coming in,\" she said as she walked to the closet. \n\nI poured Mongo a glass of whiskey as he sat in the big chair near the window. \"Here, they won't be coming out for a while,\" I said. \n\n\"I'm glad she has you,\" he said after taking a sip. \"My old lady is very protective of her, but you take things to a whole new level.\" \n\n\"Heather can take care of herself; she's proven that to me. She's my partner, not just my mate.\" Spending all this time in wolf form had made our wolves closer than our humans were. I found myself spending as much time with her that way as I could while still getting work done. I was looking forward to the babies not just for them, or because Heather could shift back, but because my wolf wanted to run through the woods with hers. It had taken weeks, but our territory was secure now, and I had lifted the restrictions on being in wolf form outside for my Pack. They could now roam freely as long as they were a mile from the nearest road; our electronic surveillance system was now complete, and trespassers never made it far. \n\n\"How is your prospecting going?\" \n\nI rolled my eyes; the Steel Brotherhood cut was in my closet, waiting for a time I could put it on and visit the Portland club. \"It's not. I haven't had time to take my motorcycle out of the garage, much less prospect.\" \n\n\"I talked to both Thor in Portland and Wolfman in Seattle, plus the Regional President. We know what you and your men did to help with taking down the Sons, and the relationship between the Brotherhood and Packs is blossoming. They all agree that the standard six-month time requirement as a Prospect can be waived. Once Thor thinks you've spent enough time with the chapter, he'll patch you in.\" \n\n\"Good, I'm tired of fetching him his beers while he visits,\" I teased. \"If I had a way to do it, I'd give every one of them a wolf. Too bad the only Brotherhood member to find his mate here is Rattler.\" The former Marine was now my bodyguard, his mate the Luna's bodyguard. We had noted a trend; the strength of the human's new wolf matched the wolf of the mate. Luna knew what she was doing. \n\nMongo was sitting outside with me, keeping me company by telling me stories about his Chapter. It was after eleven before Three Tequila came out, pushing the waste tray with her foot. \"You need to change this, and she's asleep,\" she said. \n\n\"We should sleep too,\" Mongo said as he pulled her into his arms. \"We'll see you in the morning.\" \n\nI rolled up the pad and put it in a plastic bag, opening the door to slide it back in place. Heather's scent was strong, but I dare not get closer and disturb my mate's sleep. I closed the door and went to the attached bathroom to take a quick shower. \n\nI woke with her a few times, bringing her food at two in the morning. She was uncomfortable, and the babies were active. The problem began at four in the morning, her pain so sudden and sharp it knocked me off of the couch. \"Are you all right?\" \n\n\"Shit that hurt!\" I could hear her soft whine, but she growled when I came to the door. \"Don't get too excited; it's probably a Braxton-Hicks. I'm not even 34 weeks along.\" \n\nA contraction cut off the rest of her comments. I sat outside, my wolf whining for his mate's pain. I called Three Tequila at Heather's request. She and Doc Myers showed up at the same time, and both went into the closet to check her out. \n\nDoc came out a few minutes later. \"She's in labor, and we need to stop it,\" he said. \"Call an ambulance. We need to stop the labor; I don't have the facilities here to deal with premature twin births.\" \n\nThree Tequila rode with Heather and Doc in the ambulance while Rattler drove Mongo and I behind them. The high-risk pregnancy team was waiting, all nervous at being involved with the first birth of humans from a mother in her wolf form. I waited nervously in the waiting room for hours, texting back and forth with my brothers and my little sister. They all had pregnancies to worry about; their due dates were over a month later than Heather's. \n\nI wanted to talk to Mom, but she was busy in Washington. The news shows were wall-to-wall in discussions about the treaty Mom would sign with the President this morning in the rose garden. I left messages with her and Frank but didn't get a response. \n\nIt was after nine when Doc Myers sent to me. \"We need to do an emergency C-section, the babies are in distress. The nurse will be there in a few minutes to get you gowned up and in here.\" I tried Mom again, this time getting through, and letting her know Heather was going into surgery. I had to turn the phone off when the nurse arrived. She helped me dress out before walking me into the operating room. Heather was on the table, the procedure already going. \n\n\"Are you all right, love?\" \n\n\"I am now that the spinal block is in,\" she told me. \"Hurry up.\" \n\nI didn't wait long. \"I should have been a vet,\" the Obstetrician said as he reached through the incision he'd made in my mate's belly. Reaching in, he removed the first of my girls, clamping and cutting the cord before handing her off. The nurse took her, removing the fluid from her lungs and cleaning her up. \"Here's the second one,\" he said a minute later. \"Time of births, 12:14 and 12:16. Congratulations.\" \n\n\"They're so beautiful,\" I told her. I was able to go over and pet her head while Doc Myers stitched her up. When the stitches were in place, he told her to shift. \n\nShe groaned after returning to her human form. \"That hurt,\" she said. \n\n\"Lay back and let me check your incision,\" Doc said. \n\nI stayed with her, holding her hand as we waited for the crowd around the baby warmers to finish. Finally, the babies settled, and we could go over. The nurses rolled Heather's bed to where she could reach them. \"They're so small yet so perfect,\" she said. \n\n\"I love you so much, Heather,\" I said as I touched them for the first time. \"Have you thought of names?\" \n\n\"The first will be Kelly Harleigh, after my Mom and my old life,\" she said. \"The second is Connie Colletta, after the woman killed in the Orlando Clubhouse attack and your mom.\" \n\n\"Good choices,\" I said. \n\nThe doctor was watching vitals, they were getting oxygen now, and a feeding tube was in place. \"Baby one is four pounds, eight ounces, while baby two is four pounds, six ounces. Both are near normal weight for twins of their gestational age. It doesn't appear your wolf form had any effect on their development.\" \n\n\"When can we take them home,\" Heather asked. \n\n\"Their lungs and bodies won't be ready for a while,\" he said. \"They will need help breathing, regulating their temperature, and developing their feeding skills.\" \n\nDoc Myers joined in. \"It's why I brought you here. We don't have this equipment at the Pack.\" \n\nWe asked a few more questions before I got the boot. \"We have to clean Heather up and get her to a room, and move the babies into the ICU,\" the obstetrician said. \"You should go talk to the others here. We'll get you when she can have visitors again.\" \n\nI walked out, tossing the surgical garb in a bag outside. I let out a breath; I was a FATHER now, and my wolf was over the moon. Three Tequila was crying and hugging me, and Mongo's backslap nearly broke a rib. I turned my phone on, calling the Pack first, then my Mom, and then my family. \n\nEverything about my life spoke to Luna's blessing. I became an Alpha of my Pack. I found a second-chance mate in a human. I watched her gain a wolf and take her place at my side. Now, we had our first children together. \n\nLife was good. \n\nI was napping in the chair of Heather's hospital room when I heard the commotion in the hallway outside. \"Oh my girl, I'm so PROUD of you! You two make beautiful babies,\" Colletta said as she rushed into our room, as much as a six-month pregnant woman could rush. \n\n\"You've seen them?\" Heather looked up from watching the breast pump she was using. \n\n\"Of course,\" she said as she gave her a big hug. \"Thank you.\" \n\n\"Did you know she was naming one of the girls after me,\" she asked. \n\n\"She kept the names secret from me until after the birth,\" I replied. I hugged her as she stood back up. \"Congratulations to you, too,\" I said. \"You looked good in the Rose Garden.\" \n\n\"Politics is nothing compared to bringing life into the world,\" she said. \"Now tell me what happened! Your brothers were like, 'she felt pain, and they went to the hospital.' No details AT ALL.\" \n\nI couldn't resist. \"She felt pain, and we went to the hospital. What else is there?\" \n\nShe smacked my shoulder. \"See what I had to deal with raising those boys?\" Heather just giggled. \"Get out of my chair and go get me some coffee, I need to catch up with her. Oh, and bring Frank back. He's been staring at those girls so long the noseprint on the glass may never come off.\" \n\n\"Fine,\" I said as I got up. I kissed Heather and walked out, going past the NICU to grab Frank. \"Thanks for coming,\" I said. I liked Frank a lot; Mom had blossomed since becoming his mate. \"How is Mom doing?\" \n\n\"I'm glad things are over with the treaty. Colletta's getting worn down, between her job and her pregnancy. I have to step in more and more to get her to rest.\" \n\n\"Stay here in Portland with us for a while, or stay at our Pack. Make people come to her,\" I said. \"We won't be able to bring Kelly and Connie home for at least a week, and Mom knows how much work twins are.\" \n\n\"I'll make it happen,\" he said. \"Colletta wants to be there for when Rori, Coral, and Ashley have their babies.\" ",
        "\"And slip her baby into the mix there somewhere,\" I said with a laugh. \n\n\"True. She's disappointed that everyone is due around the time of Sturgis and the Arrowhead Pack's fall celebration. I don't know when we'll be able to get the whole family together.\" I just looked at him with an evil smile. \"Trials aren't a good way to get together, boy. We better get your mother her decaf coffee. I think I saw a place down the street.\" \n\n\"There's a FiveBucks, I mean Starbucks, in the cafeteria,\" I said as I led him off. \n\nIt would be eight days before we brought the girls home, and the party was epic. Mom watched the babies as a healed-up Heather ran by my side as we led the hunt. \n\nLater that night, our bellies full of 'fast food' and muzzles covered with the blood of deer, we howled to the moon in thanks together. \n\nCh. 65 \n\nHeather Nygaard's POV \n\nBlue River, British Colombia, Canada \n\nWednesday, November 25 \n\nI looked up at the mountains rising up from the valley we were driving north through. The town of Blue River, population 260, was coming up on the Southern Yellowhead Highway. \"It's pretty remote up here,\" I said from the back seat of our Ford Excursion. \n\n\"Coral's Pack is nearly as big as the whole town now,\" Carson said from the passenger seat. \"Many of their Pack members decided to return, and they picked up a few dozen from Bitterroot. Add in the members of the Beloretsk Pack staying there, and it's probably bigger.\" \n\n\"When are they going to be able to move to their new land?\" Beloretsk Pack fled from Russia after werewolves were exposed to the world, arriving in Canada with very little. The Council was helping, as was Rori. \n\n\"Late spring,\" he said. \"They've purchased five hundred acres on Downton Lake, near the South Chilcotin Mountains Provincial Park. It's on the other side of the mountains from Vancouver, a little more than a six-hour drive to the southwest. With the prairie in between, it's far enough from other Packs to be secure.\" \n\n\"That's not a big Pack territory,\" I said. \n\n\"It's not a big population either. The Pack will more than double the forty residents of Gold Bridge, the nearest settlement. There is lots of running room up there for their wolves, with a full mountain range to run. Heck, it's four hours to the nearest big airport in Kamloops, and five hours to Vancouver.\" \n\n\"Wow.\" I'd grown to love the Cascade Pack, with our mountains and the views of Mount Ranier to the west, and we were in the mountains, but Yakima was two hours away, and Portland four. Tacoma was five hours away, even though it was 102 miles as the crow flies. Nothing was straight or fast in the mountains. \n\nIt was fantastic riding on a motorcycle in the summer, though. Our Pack lands had become a convenient destination for day trips from both the Renton and Portland Steel Brotherhood chapters. We were close with both after the attack that happened two weeks after our existence became known to humans. \n\nBy then, the initial protests and curiosity had waned, and the Sheriff only maintained one officer near our entrance for our protection. That officer merely called for backup and hid in his cruiser as five trucks filled with armed men attacked just before sundown. The group, a mixture of religious fanatics who thought we were demonic, families of missing persons, and self-proclaimed wolf hunters turned onto our road and crashed the gate. Two members of the Portland chapter and one from Renton died as they returned fire. The bikers fought side by side with our warriors, stopping the vehicles near the entrance and keeping them pinned down. Our counterattack was swift and brutal, the attackers that didn't surrender quickly killed by the rest of us. \n\nThere was one bit of good news out of the attack. Rattler, one of the Portland members and a former Marine, was shot in the left lung while charging one of the vehicles. When Christine, one of our female Betas, arrived with the reinforcements, her wolf led her to the injured human. Claiming him as hers, he underwent the Change and survived. \n\nHe'd taken to mated and Pack life well; he found it similar to being in the Club and the Corps. Ranks, discipline, shared purpose, he'd learned quickly and was a great fighter. The pair were so fierce that Carson had appointed them as our new Guardians. That's why Rattler was driving our SUV while Christine was sleeping in the third-row seat. \"Living in a remote area, as we do, makes it easier to defend ourselves,\" Rattler said. \"Defensive emplacements, elevated firing positions, and interlocking fields of fire. Far simpler than a place like Arrowhead Lake.\" \n\n\"You're such a Marine,\" I teased. He'd pointed out a few improvements in our Pack defenses that Carson had quickly implemented. \n\n\"The Russian packs have always been that way,\" Carson said. \"It's how they stayed out of trouble, at least until now.\" Our Excursion slowed as we entered Blue River. \"They were able to get foundations poured, wells dug, and power lines run before the ground froze. They have a bunkhouse and workshop set up, and the log walls are going up as fast as the trucks can deliver them. They plan to have the Pack House weather-tight next week, and then they can work on the inside the rest of the winter.\" \n\n\"That's a challenge,\" I said. \"I remember Dad had a 'three-trip' rule. Every home improvement project required three trips to the hardware store, but in this case, the hardware store is hours away!\" \n\n\"Another storm or two, and you're only getting there by snowmobile or helicopter. The Pack has been transporting all the building supplies up there by container for months.\" \n\nWe slowed to a stop at the light, then turned into the gas station to fill up and use the restrooms. Blue River was a quaint little town, subsisting on logging and the tourism in the mountains behind it. \"How did this town react to our kind?\" \n\n\"Coral had it the easiest of us all, I think. The Pack was there before the town, and the population is so small that everyone knows them. They're also so far out of the way that protestors didn't bother. Hell, they make money off it now.\" Carson pointed to the T-shirts with howling wolves and a Blue River Pack logo on the wall. I bought two pink baby onesies with the logo, then we loaded up and headed east into the mountains. \n\nA wolf checked us at the turnoff for the Pack, and we drove another mile or so until the road opened up in a big clearing with the Pack House on the top of a hill. As Rattler stopped at the base of the stairs leading up, I could see Coral standing at the entry door with her baby in her arms, Keith by her side, and her Betas behind her. Christine got out first, helping me remove the babies from the car seats as Carson came around to help. He took a crying Kelly in his arm, covering her with a blanket from the chilly wind, as I took Connie. Omegas went out to get our luggage as we hurried inside. \n\n\"Welcome to Blue River Pack,\" Coral said with a big smile as she gave her brother a side-hug, then slipped her arm around me. \"Oh, they're so beautiful!\" \n\nI looked over at Hunter, Coral's ten-week-old son, as their toddler Hope clung to her leg. \"Look at those fat cheeks! What a happy boy,\" I said as I made faces. \n\n\"Come on; Mom is in the nursery with the others,\" Keith said. \n\n\"I still can't believe we need Pack nurseries,\" Carson said. \"We've got seven babies in the Pack now, where before we'd be lucky to have one!\" \n\n\"I know,\" Coral said as she led us to what probably used to be a sitting room or office. Cribs lined the walls, with two changing tables, rockers, and comfortable couches for the Moms. Colletta and Ashley were sitting in the rocking chairs, both nursing their babies. \n\n\"Bring my grandbabies over to me,\" Mom said with a big smile as she looked at me. I handed her Connie as she shifted Cassandra Marie in her left arm. Carson stood near the door, holding a fussy Kelly in his arms. \n\n\"Congratulations,\" I said as I leaned down for a hug. \"I'm sorry I couldn't be there for it.\" \n\n\"It's all right; you were busy with your girls, and I wanted to be there for my other daughters when they were due. SOMEONE was going to get stuck with me when Cassie decided she wanted out. At least it let me keep Rori company while we were both in labor.\" \n\nI snorted. \"I talked to Rori, your labor was like thirty minutes long, and she suffered the whole night,\" I said as we both started grinning. \n\n\"Not my first rodeo,\" Colletta said. \"Cassie was tiny compared to my older boys.\" \n\n\"I was in labor for fifteen hours for my Shane,\" Ashley said as she moved him off her breast and burped him. \"My big boy, making Momma wait an extra week.\" He let out a loud burp in response. \"I don't think Sawyer has calmed down yet. He makes one noise, and that man is up checking on him.\" \n\n\"He waited over a century for you, and I think he expected decades would pass for you to have a child. Of course, he's thrilled; he has a son and heir now,\" Colletta said. \n\nI sat on the couch, opening my blouse and maternity bra for a fussy Kelly. She settled as soon as she latched on, then Keith brought me Connie and adjusted the pillows. \"I'm exhausted all the time, and I feel like a dairy cow,\" I complained. \"It gets better, right?\" I looked over at Colletta, who just tried not to laugh. \n\n\"Yeah, with your next baby,\" Rori said as she walked in with their daughter Nancy. She named her second daughter after the woman she almost lost her life to save. Rori had become good friends with Nancy Clark, the wife of the St. Louis County Sheriff, and the hostage taken by Jack Coffey. Nancy's vocal and public support of Rori and her Pack were critical factors in the public perception changes after the exposure. None of us could get up, but she quickly made the rounds with her sleeping daughter. \"How's my wolf buddy doing?\" \n\n\"Glad to be on two legs,\" I said with a big smile. Rori and I both had to spend months in wolf form until after our deliveries, meaning we couldn't talk to each other on Skype without our mates translating. \n\n\"I know, I missed a whole summer on the lake, and I rarely got outside.\" \n\nThat must have been hell for her; with the tensions, she couldn't even ride like a dog in Chase's sidecar. \"At least you only had ONE baby. My belly hung so low I was getting rugburn on my nipples when walking over to eat,\" I teased. \n\nShe set her baby in the crib, then sat next to me. \"All of our men went to check out the pool, of course.\" \n\nCoral's face just lit up. \"Honestly, it's better than I dreamed it would be. You're going to be SO jealous, Rori.\" It took another fifteen minutes to get the babies fed and settled so we could go. \"We stole a lot of ideas from you, but we took it up a bit. Two stories, to be told.\" We got to the locker rooms, stripping down and taking a quick shower, and then we walked in. \n\n\"Wow,\" I said. The space was expansive AND tall; south-facing windows rose three stories up, while the roof steeply pitched down on the north side to the first floor. The upper level was where the waterslides started, three tubes that snaked around until they dumped into the deep end of the pool. It also had an area set aside for tanning and relaxing as you looked out over the valley. The middle floor held the snack bar and dining area. \n\n\"That's a great idea moving the food and social area upstairs,\" Rori said. \n\n\"With the hillside, we couldn't make the room as wide as yours without the costs skyrocketing,\" Coral said. \"We went longer and higher instead. By moving all that upstairs, we were able to use most of the ground floor for pool space.\" \n\n\"Heather! Watch me, top blue slide!\" I looked up to see Carson standing at the entrance to the steepest waterslide, one that dropped a good forty feet down at a seventy-degree angle. I pointed, and we all watched as he disappeared. Carson shot out the tube horizontally at high speed, skipping across the water like a rock until finally sinking into the chest-deep water. He stood up and shook the water out of his hair. \"WOOOOOOOO!\" \n\n\"I swear I mated the world's biggest child,\" I said. \n\n\"I want to know how those men use that without ripping their balls off,\" Colletta said. \n\n\"Oh, you don't forget to cross your legs after the first time,\" Coral said with a smile. \"Look, there's Chase.\" She pointed to the Lazy River that snaked around the outside of the big pool, where Chase sat in an inner-tube with Mark and Cheryl. They were bouncing and laughing, their little life jackets fastened around their chests. \"There lazy river takes about ten minutes to get around, and there is a section in the back where swimmers can exercise in place using the pumps,\" she said. \"We left a deep end for the diving boards, a big area in the middle for water sports like basketball and volleyball, and a shallow end on this side for sunbathing and the younger ones.\" \n\n\"I want the hot tub,\" I said. \"Now that we're not pregnant, we can hang out again!\" \n\n\"Let's go, I'll get some drinks brought over,\" Coral said. The hot tub looked like a big kidney bean, allowing multiple groups some privacy, just inside the lazy river on the near side. \n\nSawyer was already in the tub, groaning softly as the jets worked out the kinks in his back. \"Come on in, ladies,\" he said as he lifted his plastic glass of beer. We greeted the Pack members as we got in, and Coral came by with a tray of plastic champagne glasses. \"One now won't hurt us breastfeeding,\" she said as she passed them out. \n\nOur men joined us in the tub, and I relaxed with my leg hooked over Carson's as we sat there. \"You've done a great job with this, Coral,\" Chase said to his twin. \n\n\"All thanks to my family,\" Coral said. \"We never would have been able to make the improvements here without the money you took from the Sons.\" \n\n\"Your Pack looks happy, and that's all we wanted,\" Sawyer said. \"Who would have thought that all of us would end up as Alphas? Even the scrawny little Doctor here?\" \n\nChase pushed his shoulder. \"Some of us out-punted our coverage,\" he said before he kissed Rori. \n\n\"I had no idea just how much WORK being an Alpha is,\" I complained. \"There have been a few times I've wanted to get stuck in wolf form again, just to get out of doing payroll and bills!\" \n\n\"I hear you. It took me months to get used to the constant demands on my time,\" Coral said. \"I love it, though. It's the most fulfilling thing I've ever done.\" \n\n\"Turning this Pack around, making it a place people WANT to join, that's been fun,\" Keith said. \"I miss Arrowhead, but this is my home now.\" \n\nA new couple joined us, one I'd only seen during videoconferences. \"Does everyone know Alpha Ivan and Luna Svetlana,\" Coral asked. \n\n\"I've never had a formal introduction,\" I said. Ivan settled into the water, his pregnant mate just putting her feet in the warm water. \"I'm the little homewrecker, Heather Nygaard.\" The last time I saw the couple was at the mating dinner for Greg Barks and the Beta's daughter, Tatiana. \n\nSvetlana leaned forward, embracing me and kissing both my cheeks. \"Our world is better with you in it, Heather. Congratulations on your twins.\" \n\n\"You must have stories about your escape,\" I said. Svetlana laughed before regaling us with stories about crossing mountains clinging to Ivan's back as they evaded the Russian troops sent to find them. \n\n\"How is Timur progressing with Mykayla?\" Timur was their Chief Warrior's son, mated to Mykayla, a former Omega rescued from enslavement. Now that Beloretsk was staying with Blue River, the Alphas had agreed to transfer Mykayla here under Coral's supervision. \n\n\"They are doing better; she trusts them in wolf form, but it will take years to trust him and other men,\" Coral said. \n\n\"Timur understands. He knows it's better to have this time with his mate now than to not find her until he's older,\" Svetlana said. \"We sent Greg and Tatiana out to work on the Pack House over the winter. Hard work and isolation will be good for them.\" \n\n\"I'm over that,\" I said. \"I loved Greg, back when I had no idea how strong the mate bond was. I'm happy we're both with our mates.\" Honestly, Greg meant nothing once I realized how much I loved Carson. He was nothing more than a sperm donor to the twins; my mate was Daddy to them. \n\nWhen Coral told us our time was up, I didn't want to get out. \"The babies are waking up, and we need to eat soon,\" she said. \n\nThe meal and company were great, and I slept deeply between feedings that night. When I woke up, it was Thanksgiving day. My parents and I LOVED Thanksgiving, in later years celebrating at the Clubhouse. I wasn't quite sure why we were all in Canada celebrating it NOW, on the American day, when Canadians celebrated Thanksgiving on the second Monday in October. I brought that up at breakfast, causing Coral to start laughing. \"My Betas asked me the same thing,\" she said as they nodded. \"My family loves Thanksgiving, and we can trace our lineage back to wolves that arrived with the Pilgrims. It's no surprise that a holiday involving eating heavily and lazing around on the couch started with werewolves.\" There was laughter at that. \"I told Mom we'd like to host a get-together here so everyone could see what we'd done, but October was too close to the due dates. Keith solved the problem by volunteering to celebrate TWICE this year.\" \n\n\"I took one for the team,\" he said with a laugh. \n\n\"Poor guy,\" I said. \"Having to eat all that food AGAIN just because guests are here.\" \n\nIn the early afternoon, both Packs gathered in the dining hall for the celebration. The Russians didn't have this holiday, but they enthusiastically joined in the preparations. In addition to the traditional turkey, stuffing, potatoes, and gravy, the kitchen turned out a dozen traditional Russian dishes. As hosts, Keith did the opening prayer. \"We give thanks to the Moon Goddess for the blessings and protections she has shown to us over this past year. We have opened our lives to humans, added to our numbers, and relocated two entire Packs to safety. We thank you, Luna, for this feast before us and those here to celebrate with us. May we continue to follow Her divine will and bask in her blessings.\" He paused for a moment, allowing everyone to add their silent prayers. \"My friends, my family, let's eat!\" \n\nLife was good."
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "biker",
        "luna",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-61-conclusion"
}