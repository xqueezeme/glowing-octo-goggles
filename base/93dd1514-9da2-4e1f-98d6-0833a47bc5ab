{
    "title": "Big Girls Don't Cry Ch. 04",
    "pages": [
        "My thanks to Mriceman1964 for his help, advice, his eye for reality and plausibility, and his willingness to argue over the story, which keeps me focussed, I have to admit!\n\nMany thanks also to Bonnie for her sharp questions and further reality checking me, long may you keep doing it, Princess!\n\nAs I've said before, this is a story, not real-life, just my version, an alternate reality where things can happen the way I want them to, so feel free to immerse yourself in my universe;(although, if quantum physicists are to be believed, somewhere in the limitless reaches of possibility there is a universe where this has already happened, exactly as I've described it...) so go ahead, dip in a toe or two, who knows, you might just enjoy the water. FYI The places I mention are real; I've either lived there or worked there, and I know them well. \n\nAs before, if you liked it, please rate it, if you didn't, please tell me why\n\nHappy Reading!\n\nBB1958\n\n___________________________________\n\nI arrived home at 6 p.m. expecting to see Lena dressed, prepped and ready for fun; we were going out to dinner, then we were going to a club, or at least that was the plan; instead I found her pacing and muttering, nervous, edgy, and irritable.\n\nI hugged her close, fondling her taut little bum cheeks as I nuzzled her, as per usual, but she was tense and tightly drawn, her body humming with nervous energy.\n\n\"What's the problem, Princess?\" I asked, conscious that this kind of tension was definitely not good for the baby.\n\nShe looked at me, her eyes troubled, and almost afraid, which put me on alert; Lena is fearless, outspoken, and not afraid of a confrontation, so something serious was up.\n\n\"Dar, it's Lizzie...she's on her way over...with the children!\" she blurted out, her expression almost afraid.\n\n\"What if they don't like me, what if they find out about...you know...us? What are we going to tell them, how on Earth are we going to explain it? Dar, I'm scared, I'm scared of some kids, I'm scared they'll hate us, Dar what am I supposed to do? Tell me!\"\n\nI grinned over her shoulder; Lena had never been uncertain or unsure in her entire life, and now she was scared of a pair of kids? It was too much! I rubbed her back, feeling the muscles knotted and strained under my hands, so I began squeezing and gently massaging those knots and tense muscles, slowly relaxing her as she held onto me, her face buried in my shoulder. Eventually, she slumped against me, giving a gusty sigh as she relaxed, her muscles relaxed and un-knotted as some of the fear and apprehension drained away.\n\n\"There, feel better now?\" I asked her, smiling as she leaned against me and kissed my ear.\n\n\"Much better, thank you baby!\" she murmured, her fingers idly toying with the buttons on my shirt. She leaned back to grin at me, her eyes calm and unworried, her expression normal as she regained her balance.\n\n\"I meant what I said, though; what are we supposed to do if they ask about us, you and me and little Morgan in here?\" she grinned, tapping her midriff lightly.\n\nI grinned at her expression.\n\n\"We tell them exactly what we said we would; that I'm your boyfriend, Emma's nephew, and that you're Lizzie's younger sister, that's all they need to know for now. I'm not sure how they'll react if we just blurt out that Lizzie's actually my mother, because I still haven't worked out yet just how the hell this baby is related to them! Occam 's razor, baby, 'the simplest explanation is the one most likely to be true' as my physics teacher used to tell us, so for now, little Morgan-baby is their new first cousin, which is true, sort of; later on, if it seems appropriate, we'll tell them the truth, but for now, just the simple version, okay?\"\n\nLena smiled back at me, happy to be reassured.\n\n\"Okay Dar, just the simple version for now, got it!\"\n\nShe began bustling about, picking up and rearranging cushions, moving ornaments and putting them back, keeping herself occupied. The doorbell rang, and I jumped up to answer the door.\n\n\"Showtime, Lena, are you ready?\"\n\nLena just looked up from her fiddling with the ornaments on the mantelpiece.\n\n\"It's not Lizzie; too early. I asked Aunt Doreen to come over, that'll be her now. Let her in, Dar, chop-chop, don't leave her standing out there!\"\n\nI opened the door and there was my favourite aunt. I felt a little guilty seeing her; while Lena had been away I'd immersed myself in my work, keeping myself busy, and consequently had hardly spoken to Doreen in weeks, but her smile was the same, and she showed no sign of annoyance at my ignoring her. I suppose it was the little boy in me, but whenever my Aunt Doreen was around, I felt safe and secure; she was one of my most enduring symbols of family, and I loved her dearly. She handed me her light jacket and walked on into the sitting room, Lena immediately hugging her warmly; Min may have been Lena's favourite aunt, but Doreen had a special place in her heart too, and I could see her relaxing as Doreen embraced her.\n\n\"Sit down, child, you're supposed to be resting now; let Darryl do the running around, he's big and ugly enough to do for himself, you need to take care of yourself and that baby!\" \n\nShe grinned at me as she said it, and I couldn't help but grin back; being twitted by Aunt Doreen was as much a part of my childhood as Lena, or school, or mum and dad.\n\nI left them huddled together on the couch as I went to put the kettle on; Doreen was an inveterate tea-drinker, and I'd been making tea for her since I was eight or nine years old, so I knew just how she liked it. As I was busying myself in the kitchen warming the teapot and measuring out the tea, the doorbell rang again. Even in the kitchen I heard Lena's sudden gasp. I smiled to myself and went to answer the door, knowing she'd be a bag of nerves all over again.\n\nWhen I opened the door, Lizzie was standing there, and I could see Emma shepherding the children from the car. Even from a distance, I was struck by how much the girl (Allie, her name was Allie, remember that, I told myself...) resembled Lena; apart from the different hair colour, they could have been the same girl at that age, a leggy, coltish 12-year old, all knees and skinny arms and legs, but a dead-ringer for Lena nevertheless. The little boy had dad's expression, that slightly bemused, good-humoured upward curve to his mouth, the same features, the same eyes. I stared in wonder; there stood my dad almost 60 years ago.\n\nI ushered them all in, Lizzie and Emma both kissing my cheek, Allie shaking hands with me, her eyes roving across my features, then flicking over Emma's, and the little boy, Marcus, gravely shaking hands with me as I introduced myself. I led them into the sitting room, Lena's expression somewhere between terror and longing as her gaze fell on those two children, her eyes widening as she took in the little boy's features. Lizzie smiled reassuringly at her.\n\n\"Hello Lena, thank you for allowing us to come over at such short notice. Kids, this is Lena, remember, I told you about her. Lena's my little sister. Lena, this is Allie, and this,\" she put her hand on his shoulder, \"is Marcus. Kids, say hello to your aunt.\"\n\nMarcus waved shyly, and Allie grinned impudently.\n\n\"You've gotta be mum's sister, you look just like her; been hiding, have you?\"\n\nLena grinned, her stage fright abandoning her.\n\n\"Hello Allie, yes, I really am your mum's sister; she left home before I was born, so I never knew her. I'm glad to meet you, though. And please, call me Lena!\"\n\n\"Hello Lillibet!\" said a soft voice from the other side of the room; everyone had been so intent on this first meeting that we'd forgotten Aunt Doreen was there, keeping well back.\n\nLizzie spun round, her eyes wide, tears suddenly brimming in them.\n\n\"Dodo? Oh my God, Dodo, I'd...It's...Oh Dodo, I missed you so much, please...!\" she breathed, dissolving in tears, Doreen suddenly there to hold her as she sobbed into her shoulder. Lizzie hugged her tight, Doreen murmuring to her while she patted her back and stroked her hair, soothing her and fishing out a hanky for her to wipe her eyes and blow her nose. When Lizzie had calmed down, Doreen held her at arm's length and looked her up and down.\n\n\"Look at you, Lillibet, all grown-up, a mother, and so beautiful; I missed you so much, Lillibet, more than I can say! I've waited so long to see you, and now here you are, and your beautiful children as well. I missed you, sweetheart, more than you can understand, I thought I'd lost you forever, I prayed for you to come home, and now you have!\" she dabbed at her eyes, just as Lena was doing, and I nearly was as well.\n\nLizzie urged the two children forward.\n\n\"Allie, Marcus, this is my Auntie Dodo, she helped my dad bring me up, she was like my mum when I was growing up, I want you to say hello to her.\"\n\nThe children looked shyly at Doreen, obviously affected by their mother's emotional reunion with her aunt, not knowing quite what to say. Marcus broke the ice, holding out his hand.\n\n\"Hello Auntie Dodo, is that your real name?\"\n\nDoreen smiled at him as she shook hands with him. \n\n\"No, Marcus, my name is Doreen, but you can call me Auntie Dodo if you want; that's what your mummy always called me.\" \n\nMarcus grinned at her, looking so much like dad it made my breath catch in my throat.\n\n\"I like that; my Auntie Dodo! My name is Marcus David Robert Daniels, and I'm nearly seven! You can call me Marcus, if you want.\"\n\nDoreen smiled at him.\n\n\"How do you do, Marcus, I'm a lot older than seven, and I'm very pleased to meet you! And who's this?\" she smiled, turning to Allie.\n\nAllie grinned at her.\n\n\"I'm Alison, but everyone calls me Allie, and I'm nearly thirteen! Are you my granddad's sister? Does that mean you're my Great-Aunt?\"\n\nDoreen smiled even wider at Allie's sharp inquisitiveness.\n\n\"You are so much like you mother when she was that age, it's almost like having her back again! Your mother grew up here, in this house, your grandfather and I, and your other aunt, my sister Minnie, helped bring her up from when she was just a baby. She went to school just down the road there, with her friend Emma, and yes, I recognised you too, Emma Fraser, you haven't changed much either!\"\n\nEmma smiled at that, exchanging glances with Lizzie.\n\n\"I was wondering, Miss Morgan it's been a long time!\"\n\nI looked enquiringly at Doreen, who smiled back at me.\n\n\"Lillibet and Emma both went to the Cathedral Primary School where I was Headmistress, Emma and her sisters, Lillibet, and....\" she broke off as she nearly mentioned Robert Fraser, before continuing \"...and a lot of other people they both know, who still live around here!\" \n\nOnce the awkward moment passed, we sat down and chatted, Lena anxious to make some sort of connection with her nephew and niece, while I made tea, passed around fruit juice or fizzy drinks, biscuits, and generally acted as host while Lena's family connected. I was just congratulating myself on a successful afternoon when Allie caught my eye with her own sharp little eyes.\n\n\"So tell me something, Darryl; why do you look so much like Aunty Emma?\" she asked shrewdly, so I told her.\n\n\"My father was Robert, Emma's older brother; I was...adopted, and didn't know until my adoptive parents told me. Emma's my aunt, too!\"\n\nAllie grinned at me. \n\n\"So Lena and you are having a baby, and this baby will be my first cousin, right?\" I nodded.\n\n\"So it'll also be Mum's niece, nephew, whatever, right?\" I nodded again.\n\nAllie leaned back and smiled.\n\n\"And it will also be Aunty Emma's what, Great-Niece or nephew? Wow, this family just got complicated! Anything else you want to tell me?\" \n\nIf only I could!\n\nI grinned at her.\n\n\"Nope, nothing else to tell, now you know as much as I do!\"\n\nMarcus piped-up then.\n\n\"Mummy said you're a doctor; do you stick needles in people and cut them open?\"\n\nI had to grin, but I shook my head.\n\n\"Well, someone else sticks the needles in, but yes, I do the operations!\"\n\nThe conversation went on in this vein for a while, the kids asking Lena and I surprisingly sharp questions about our lives, my job; Marcus, in keeping with every little boy, wanted to know all about the gory bits, but I kept those to a minimum. They were all a little shocked, I think when Lena asked if they could be free for a week, as we wanted to take them to Cyprus with us as soon as possible, like the end of the week?\n\nAllie was excited, Marcus was incoherent, and Lizzie was brimming again at the thought of seeing dad again, and to be honest, so was I; I'd never felt their absence so keenly, even when I was away at medical school, at least then, mum and dad were only at the other end of 120 miles of motorway. Emma herded the kids out so Lena could talk with Lizzie, so I took the three of them to Veracchio's, a local gelato parlour, to try some of the best Italian ice cream in Clifton while Lena and Lizzie ironed out their plans. \n\nEmma and I talked more about Robert, telling me what he'd what he liked and disliked, his sense of humour, what he'd been like as a boy. I asked about him joining the Royal Marines, and a line appeared between her eyebrows.\n\n\"You've got me there, Darryl; none of us know what made him do it; Robbie was so quiet, gentle, and soft-spoken, it was a complete surprise, actually, it was a huge shock, when he announced he'd joined-up. Robbie was interested in art, in sketching, painting; he spent all his spare time drawing all sorts of things; birds, insects, cars passing the house, the other kids in the playground at school, and of course endless studies of Lizzie; I think he thought he was somehow letting dad down, that he wasn't being 'manly' enough or something, but I don't know where he got that from, certainly not from dad; dad was so proud of his ability. No-one in our family had ever been anything like that; they were always blue-collar working men, not a trace of artistic ability or inclination; Robbie was the first. When he went away to the Falklands, dad was convinced he wasn't coming back, and when he heard the news that he'd been killed, he just locked himself in his room and stayed there for days.\"\n\nShe stopped talking while she took a sip of her coffee, her eyes distant. \n\n\"He never mentioned Robbie again after that, but then he hardly ever spoke again, and when he died, one of the things he'd requested in his will was that we collect all Robbie's drawings, sketches, paintings, everything, and bury them with him. When Lizzie heard the news of his death, she took all the sketches and paintings of her, everything Robbie'd ever done for her, and burned them, just so she'd never be reminded of him. She took his loss as hard as dad did, in her own way, which is why I never judged her; what do you do when the centre of your world is wrenched away from you? Lizzie chose to remove any reminder of it, to deny it ever existed, and I can't say I really blame her.\"\n\nShe paused to take another sip from her coffee, her eyes glittering with unshed tears. \n\n\"I believed then, and I still believe now, that my dad died of a broken heart when that sniper took his son away, it just took a while for him to realise he was dead. Robbie was one of a kind, a gentle, sweet, generous boy, and when he was taken, something broke inside Lizzie as well; she'd owned him since he was six years old, he was always there, always in arm's reach; they always knew when the other needed them, they didn't even need to speak, they just knew what the other was thinking. I know Lizzie didn't want him to join-up, but she also knew it was something he thought he had to do. He was 20 the week he was killed; his mates on the ship even gave him a cake on the way down there. What a bloody waste that war was, all those boys killed, on both sides, for a couple of wind-blown, desolate islands in the middle of nowhere...\"\n\nMuch as I tried to suppress it, I began to feel a connection and a strong surge of sympathy for this young man who'd fathered me and died before he ever saw me, and it made me feel guilty, as though I was being disloyal to dad; after all, he was the one who brought me up, in every way I could describe it, he was my dad, no-one else. \n\nEmma picked up on that conflict, and gently steered the conversation away from me and onto the rest of her family, telling me about my other aunts, and my cousins, in Australia and in London. I learned about the scandal surrounding my cousin Julie and the circumstances of her birth, and how Emma and her youngest sister had lost touch with Lois, the middle sister, the mother of Mark and Julie. As we chatted, it became obvious she missed her sister, and regretted not trying harder to keep in touch with her\n\n\"I wish I'd tried to locate her years ago, I know where she used to live, but the last time I went to London I went to the last address I had and it was a supermarket, the whole area was gone, 'redeveloped' they called it, even the street names had been changed. Mark would be about four years younger than you, you're what, nearly 26? So Mark would be about 22, and Julie would be maybe 18 or 19 now; I wish I'd been there to see her grow up; she needed so much, and got so little from Lois. I remember Mark, such a sweet little boy, bright golden hair, just like his father, and Julie, the last time I saw her she was just a baby, but she looked like a little angel; it's a pity Lois did what she did, and her husband just leaving like that didn't help one bit; I would have taken that little girl, and Mark, in a heartbeat; but she was adamant; Mark stayed with her, and Julie, too, even though she hated her. I often wondered what she did with that little girl, she didn't want her, she hated her, but she wouldn't give her up for adoption or let me take her. Lois always was a difficult girl, and, well...\"\n\nShe took a sip of her coffee, her eyes far away.\n\n\"I used to wonder how Julie grew up in a house where no-one loved her; Mark was just a little boy, and Lois just kept him around, she never once treated him like anything except a thing, something to keep around the house; she hated Julie though; it puzzled me how it was possible for a mother to hate her own child so, but she never harmed her or neglected her, so I couldn't even report her, Social Services would have found nothing, Lois was careful about that, oh yes! It was perfectly alright for her to have an affair, get pregnant, and expect her husband to claim the baby as his own; then, when he decided he couldn't, she blamed that poor little girl; she should have looked in the mirror instead!\"\n\nShe sighed and drained her coffee, signalling for another one.\n\n\"I do wonder where that poor little girl is now. I hope she's happy; she was such a sweet, lovely-natured little baby; she had bright golden hair, almost white, it was so fair; she looked like a little golden haired cherub, and she had the biggest, most beautiful, bright green eyes; it makes me so sad to think she must have had a bloody miserable childhood with Lois always breathing down her neck. If I'd known where they were I'd have gone and tried to take her away, and that poor boy too; I can't even imagine what kind of a life they must have had! It's always troubled me that I didn't do enough to get those children away from Lois; I loved her dearly, but she had a mean streak and a nasty side to her tongue, and so much anger in her; she had it in her to hurt them one day, I just have to hope to God she didn't!\" \n\nWe strolled back to the house to find Lizzie, Aunt Doreen, and Lena wreathed in smiles; Lena had booked five return flights to Paphos for Saturday, three days away, returning the following Saturday, so as not to miss the first day of Christmas Term at school \n\nThe kids weren't too happy about that; they'd been hoping for a little extra time off school, but they were getting a trip to Cyprus, so ultimately they were satisfied. Lena had then called mum and told her, but asked her to keep it a surprise that Lizzie and the kids were coming with us. Apparently, Mum had gotten quite teary; even though she wasn't Lizzie's mother, she'd had a small part in bringing her up, and had been as heartbroken as dad when she'd disappeared; obviously we didn't know this, I got it all later from Lena after the visitors had left.",
        "After a few more plans and instructions, Lizzie and Emma herded the kids back to the car leaving Doreen, Lena and me feeling blown and out of breath, but very happy; I was going to see mum and dad in a few days, superb. We talked for a while, making plans for when we got to Cyprus, and, as it was getting late, I ran Doreen home before stopping off to order and collect a Hawaiian pizza, a weakness of Lena's, to make up for not being able to take her out to dinner. \n\nAfter supper we talked, about the trip, how we were going to react when we saw dad again; Lena had only come home two days ago, but I hadn't seen dad and mum in weeks, and I was dying to see them again; I suppose it was knowing they were so far away, in another country rather than just up the road; I'd certainly gone longer without a home visit when I was still a student. We chatted in his vein for a while, until at last Lena stood up.\n\n\"Come on you; we've made plans, we've met the family, and we've had dinner; now I want to play!\"\n\nI grinned; as always, she'd cut right to the heart of what I'd been thinking for the last little while; I'd been getting that stirring that meant other appetites were awakening, thoughts of her crowding in close, the thought of sliding that summer dress off her definitely taking precedence!\n\nAfter the usual routine of checking all the doors and windows, I followed her upstairs, entranced by the switch of her tight little bum under that short dress as she tripped lightly up the stairs. I detoured into the bathroom to quickly brush my teeth, then followed her it the bedroom, to find her stretched out on the bed, still fully dressed, a small, happy smile on her lips.\n\n\"Come here, Darryl, I want to ask you something!\" she smiled, so of course I did, dropping down to stretch out next to her, my hand on her hip where I could squeeze and knead her as we talked.\n\n\"Ask away, princess, I am yours to command!\" I grinned, taking full advantage of my position to pull her a little closer.\n\n\"Tell me truthfully, Dar; what did you think of Allie and Marcus?\" she asked, almost anxiously.\n\nI grinned at her.\n\n\"Hard to tell really, I was too busy watching that little boy almost swooning over his beautiful young aunt! I think you've made a serious conquest there; he was in a haze the whole time, he couldn't take his eyes off you! I might just have to poke him away from you with a sharp stick next time we meet them!\" \n\nLena grinned and pulled me closer by my ear.\n\n\"And I suppose you didn't notice Allie staring adoringly at the handsome young doctor? I think someone has a major crush on you; apparently I have some competition for your affections!\"\n\n\"Ouch! Touch\u00e9!\" I grinned. \"Seriously, though, I think they fell for you big time! I just couldn't take my eyes off Marcus; he's so much like dad it's uncanny!\"\n\nLena nodded. \n\n\"I was thinking the same thing; you know, perhaps when he's gone it won't be so bad, not now we know there's so much of him still here, in those two kids. When mum sees them she's going to flip, you do know that, right? She's going to go seriously Grandma on them, and I don't blame her; I felt like biting them a little myself! Whatever else Lizzie did, she got it right with them; your little sister and baby brother are utterly adorable!\"\n\nI reached out and squeezed her a little more seriously.\n\n\"Their hot aunt isn't too bad either...\" I whispered, Lena grinning and pulling herself closer to me.\n\n\"You say the nicest things; is this your bedside manner then, Doctor Morgan, or are you just trying to seduce me?\"\n\nI slid the zipper down at the back of her dress as I nibbled her neck and kissed her throat.\n\n\"I just want to get you naked so I can check all your bits, you know, check they're all there, all working, it's a standard procedure all us doctor's follow... \"\n\nLena grinned at me as I continued.\n\n\"I prefer to think of it as a very thorough check-up, one that should be done at least once a day, preferably more, do you concur, Miss Morgan?\"\n\nLena twinkled at me as she began shrugging off her dress.\n\n\"Only if you promise me some babies like those two -- one who looks like you, and one who looks like me at the very least, so keep taking the vitamins, I intend to work you hard, mister!\"\n\nI nuzzled her neck as my hand roamed around her, touching, caressing, squeezing, holding, convincing myself all over again that Lena was here, with me, and it was real, she was real.\n\n\"What're you thinking, Dar?\" she whispered, noticing my preoccupied look, and I nibbled her gently.\n\n\"I was thinking that one baby isn't enough, two babies will compete for attention, three, well, two will gang-up on the third, so we better have four, so they'll be evenly matched and they'll all have at least a fighting chance!\"\n\nLena giggled at the thought.\n\n\"Four children, what do I look like, a Queen Bee? If you want four babies, you are going to have to do some serious spadework, Doctor Darryl Morgan, why, you'll just be working all the time to support such a large family, I can't let you do that! Tell you what; let's have this one first, then we can make more afterwards, we have time you know...!\"\n\nI grinned into her neck as I grazed there.\n\n\"Okay, Mummy-bee, it's a deal; have this little twig on the old family tree first, then we'll talk about some more after you've experienced the full glory of a screaming, howling, teething, drooling, up-chucking, red-faced little poo-factory; if the idea still appeals, we'll go for it!\" \n\nLena smiled at my description of babies, knowing I'd spent a year on the Paediatric High-Dependency Unit.\n\n\"You've just got a distorted perception, Dar, not all babies are demonic little puke-machines! MY baby will be well-behaved, mannerly, and will have an in-depth understanding of my need to sleep! And I know you, Darryl Morgan, you're just playing Devil's Advocate to try and trip me up; I know you want a houseful of children, you told me that not two minutes ago!\" \n\n\"Guilty, you got me, how do you want to punish me?\" I grinned, and Lena responded by sliding her hand into my slacks and curling it around my best and most vulnerable friend.\n\n\"Get your clothes off, I want to play!\" she growled, her hand tightening ever so slightly. I took the hint, rolling away from her so I could unhitch my pants and pull my shirt off. A few seconds frantic wriggling and my clothes were in a puddle on the floor, and I was as naked as Lena, who slid herself closer to me, her hand still holding me, but now, as my cock slowly unfurled and inflated, the pressure from her hand was pleasurable, and as I lengthened and stiffened, she began to slide her hand slowly along my shaft, stiffening me even further.\n\n\"There, you see? All you needed was a little encouragement!\" she giggled in my ear as I reached for her, holding her firm, squeezable bum cheek tightly as I dipped down to nuzzle her stiff nipples.\n\nLena sighed as I licked and sucked, her nipples becoming much more sensitive even now, in such an early stage of her pregnancy. She squeezed and rubbed my cock as I suckled on her, both of us becoming more aroused by the second. One thing I'd noticed; since she'd come back, I couldn't stop thinking about her, couldn't stop smelling her, she smelled so good, and everything about her lit fires down below that I could barely keep damped-down; a remote part of me knew exactly what was going on here; the pregnancy pheromones she was giving off in great billowing gusts were affecting me, primitive instincts were taking over my perception of her; she was my mate, and I had to protect and isolate her from other males so I could keep mating with her, to make sure it was my child she carried. I knew this intellectually, a couple of the professors at medical school had touched on this phenomenon, but now I was experiencing it at first hand; she was driving me crazy with need for her, and all I was interested in was the fact that I wanted to fuck her every chance I got; Lena, as a good and dutiful partner, raised no objections whatsoever...\n\nLena still had her panties on, a tiny, lacy little thing, but she'd left them on because she knew how much I liked sliding them off her, the thrill I got from slowly sliding them down her satiny thighs, over her calves and off...try it sometime, you'll love it, believe me!\n\nAs I slipped my hands into the back of her panties, squeezing and pulling her cheeks apart, Lena groaned and pulled herself even closer to me, rubbing my erect cock against the damp silk-covered lips of her seeping pussy, and the feel of her mound as it rubbed against me was almost too much for me. Now I had to see, touch and taste that concealed treasure, and as I began kissing and licking my way down her body, Lena smiled in anticipation of what was coming. I continued down, sliding down the bed as I kissed her navel, letting my tongue linger in there for a few seconds, knowing how much she liked the feel of me licking inside there, before once more kissing and gently licking until at last I reached my goal. Lena groaned as I nipped her labia through her panties, pulling the delicate flesh between my lips through the damp and fragrant material of her panties.\n\n\"Ooooh Darryl, stop it, don't , please, properly please, baby, ooohh!\" she muttered as I licked her through her panties, teasing and gently tormenting her, knowing how much she liked to play, and taking my time. To further tease her, I slowly pushed her panties between her labia with my tongue, letting the material rub against her stiff and swollen clitoris, making her squirm and gasp, and beg me to yank her panties off and suck her properly. Of course I did just that; it was fun to tease my baby, but not to torture her, and this was not funny anymore, not for me, and certainly not for her, so I slid her panties all the way off, and kissed her slowly up along the inside of her thighs, alternating between thighs until I reached the juncture of her thighs, the sweet-smelling target and object of my desire, the field of dreams. Her scent was drifting over me, tickling my nostrils and beguiling my senses, at once subtle and strong, fresh, sharp and enticing, once again reaching all the way down inside me and flicking switches in my limbic system and playing havoc with my emotions. \n\nI slipped my tongue inside her, letting her know I was there and ready, making her jump and groan, then began to lick her in long slow strokes from her little pink anus to the base of her stiff and swollen clitoris, where I paused to lick and suck gently, savouring the juices pouring out of her and coating that stiff little pink pearl in a delicious glaze of hr delightfully tangy essence. Lena clamped her thighs around me, her hand against the back of my head as she held me against her, where I licked, sucked, and suckled at her, draining the liquid feast she offered as fast as it seeped from her damp and swollen vulva. Her breathing was getting faster, more erratic, and her pussy was pressing more insistently against me as I drank from her, my restless tongue stimulating and driving her on, until she could take no more.\n\nLena climaxed with a strangled groan, a spray of hot liquid coating my face and mouth as she squirted in the intensity of her orgasm, her clitoris throbbing insistently under my tongue as the waves of orgasmic pleasure rolled and crashed through her, each wave convulsing her pussy as it pressed against my mouth, her clitoris resonating in harmony with the pleasure coursing through her as it throbbed insistently against my tongue.\n\n\"No more, Dar, God, no more, enough, please, I can't take it...!\" she groaned, releasing me from the bondage of her thighs as she rolled away from me, her legs wide-spread to keep any sort of pressure away from her over-stimulated vulva. I obliged, moving back up the bed to lie next to her, my hand on her tummy to calm her as the muscles jumped and quivered in adrenaline overload. Slowly she calmed, eventually her eyes opened and she smiled up at me.\n\n\"Don't tell me; Gower Street Nurses Quarters, right?\"\n\n\"You know me so well, princess! What can I say; I'm a fast learner and a good student!\"\n\nShe started laughing, tears appearing at the corners of her eyes as she laughed.\n\n\"Oh Darryl, I'm so glad you're mine!\" she grinned, \"but what about you? You got nothing out of that!\"\n\nTo be honest, I'd been so absorbed in pleasing her that my own need had drained away unnoticed, and now I was just content to lie there next to her, holding and watching her, and feel deeply, immeasurably glad that she was mine and was ripening with my child. I knew and understood at that moment just how deeply and unconditionally I loved and adored my wife, which was how I now saw her; I didn't need some piece of paper, some man-made, societal construct to tell me she was my only true love; our souls already knew that, and had for all the years of our lives before this moment had ever happened.\n\nI leaned down to kiss and nibble her lips.\n\n\"Tell you the truth, baby, I'm so buggered after today that all I want to do is hold you and have a snooze; we'll have a light supper later, and I might be tempted to chase you around the bedroom a few times after that; you okay with that?\"\n\nLena smiled softly and snuggled up against me, her warmth and even breathing, the smell of her hair, and the feel of her heartbeat lulling me to sleep with her. \n\nI woke with a delicious sensation; warm soft lips clasped tightly around my erect penis. I opened my eyes to look into Lena's bright blue China-Doll eyes, her red lips firmly around my cock as she sucked gently but insistently. I grinned down at her, seeing her eyes crinkle as she grinned back at me around my cock.\n\n\"Was there something I can help you with, Miss...? I asked her seriously, watching as her head bobbed up and down on me. For answer, she scraped a fingernail ever so lightly along the underside of my scrotum, just enough to send a prickle of goosebumps between my shoulder blades; she was telling me to take it seriously or take the consequences, so I lay back, shut my eyes, and tried not to think about ramming myself into her mouth and down her throat. Lena changed her tack slightly, now rubbing her tongue gently along the slit in the tip of my cock, goosebumps again erupting as she did it; I was in an agony of indecision; much as I was enjoying it, I didn't want to come like this; I wanted to shove my aching cock deep inside her and try and do the medically impossible; fuck another baby into her to keep the one already there company, just as she'd demanded in the airport when I'd collected her just a few days ago.\n\nAt last I'd had enough; her mouth and tongue were taking me to a place I didn't want to go alone; I needed her lips against mine as I rammed my cock into her, So I pulled back to slide my cock out of her mouth, and slid down the bed as her surprised look transmuted into a dirty smile and a devilish twinkle; good, she was ready to play properly!\n\nAs I pulled her to me, she reached down to once more hold my cock; her hand crept down to clutch me once again and pump as her lips and tongue played with mine. When she judged I was ready, she pushed me over onto my back and slid on top of me, still maintaining our kiss as my hands now grasped her soft, firm buttocks. I pulled them apart, feeling her lips widen in a grin as I played with her cheeks, then her surprised gasp as I slowly pushed my finger into her tight, juicy little anus.\n\n\"Oooh yes Dar, that's nice, keep doing that, oooh God, yesss, oooh yess!\" she muttered against my lips as I gently pumped my finger into her tight hole. Her legs splayed out on either side of my hips as she rubbed her wet pussy against my rigid cock, her clitoris dragging through the clump of wiry hair clothing the base of my cock and stimulating her even further. As she writhed and wriggled on me, I began slowly thrusting against her pussy, dragging my cock between her labia as she rubbed against me, until I was able to slide into her, making her gasp at the sudden intrusion. Lena lay flat on top of me, her tongue still probing and searching my mouth as her hips gyrated gently, clenching and squeezing me with her pussy as she fucked me. I continued to push my finger into her arse, the tight ring gradually loosening enough to slide a second finger in. Now I pumped her bum hole with my hands as my cock pumped and stirred inside her tight pussy, and our tongues fenced; Lena was getting all three holes fed and stimulated at the same time, and pressed flat against me as she was, I could feel her heart-rate rising as the multiple stimulation began to take effect.\n\nWhen I slid a finger from each hand into her arsehole as I pulled her bum-cheeks apart, stretching open her anus, she came with a loud hissing scream, her pussy squeezing me convulsively as her orgasm rocketed through her, but I held off my own climax; I had plans. Lena rubbed her pussy against me as she climaxed again, her clitoris stimulated by the repeated rubbing against my pubic hair, until finally she slumped down against me, her heart hammering against mine. Now I slid my still hard cock from her and prodded her in the area of her perineum. Lena lifted her head to grin at me.\n\n\"Oho, now I know what you're up to you, dirty, dirty boy! Wait...!\" \n\nShe lifted her midsection and reached down between us to grasp my cock, still slick with her juices, and slowly rub it against her loose and open rosebud. As she placed the tip at her entrance she nodded, and I slowly began exerting pressure, pushing slowly but inexorably forward. I could see the expression of concentration, and a little pain, on her face and stopped; I wanted to fuck her, not hurt her. Lena cocked an eyebrow at me.\n\n\"Problems, Dar? Keep going baby, it's okay, I want this too!\"\n\nTaking her at her word, I continued to press forward, until suddenly all resistance disappeared and I slid into her rectum in one smooth glide, filling her as I slid in balls-deep.\n\n\"Oh God, wait...wait...okay, go!\" she panted, and as I slid back out preparatory to pumping back in, she began to moan.\n\n\"God, yesss, yesss, oh yes, Dar, like that, baby, harder, yesss, God, yes!\" she muttered, hunching back against my stroke, pushing herself against my cock as I pumped it into her tight anus.\n\nLena locked her arms around me, holding herself tightly against me as we fucked, our mouths working feverishly against each other as the raw, primitive fucking captured us and drove us higher and higher. I rolled over to hold her under me, pinning her to the bed as my cock jack-hammered her, ramming into her arse as hard as I could, while she wrapped her legs around me and pulled me into her to jam my cock as deep into her bum as I could get it.\n\nWe couldn't sustain the wild pace of such a wild, abandoned fuck; I came with a roar, my cock-head swelling to what seemed an enormous size as it wedged inside her tight anal tube, spunk bursting out of me to coat her insides with my hot cream. As I came, Lena climaxed, the feel of my spunk spraying her insides setting off her own gigantic orgasm, her pussy convulsing and spraying me with her own fragrant juices as her anus clamped down around me. This was enough to make me come even harder, the tip of my cock burning with the pressure of the semen jetting out of me and into her bowels.\n\nAt last I stopped spraying, my cock twitching and lurching in aftershock from such a ferocious orgasm. Lena was limp and unresisting, her body still twitching and shuddering as the adrenaline raced around inside her. We both lay slumped together, our muscles temporarily disabled by the shock of our mutual orgasm, both of us too damned tired to do more than loll weakly against each other as we slowly recovered. My last conscious act was to pull the covers up over the two of us, and that was it until the morning sun shining on my face woke me up.",
        "Lena was nowhere to be seen, but I could hear her moving around, so I climbed out of bed and stuck my head out the bedroom door. She was busily hanging some light dresses on a rail in the next door bedroom, and grinned at me as she saw me. \n\n\"Come on, Dar, have a shower and help me get our stuff ready; we fly out Friday morning, that's the day after tomorrow, in case you need reminding, so get a move on, slowcoach!\"\n\nThis from a beautiful naked girl whose bending and stretching as she pulled clothes off the rack and held them up to admire them was playing hob with my libido! I debated whether to just grab her and drag her into my lair, or ambush her in the doorway as she bent over, but common sense won; I definitely needed a long shower, if that smell was anything to go by, and she looked like she had every intention of remaining naked for a while yet, so I had time; also, I was starving; the session last night had knocked us out so completely that thoughts of dinner were far from our minds after we'd collapsed in a heap, so I hurriedly revised my priorities; shower, then food, then Lena...\n\nI dressed quickly and started downstairs, smelling and feeling fresh and desirable, just as my cologne promised, intending to collect Lena and take her out for breakfast so I could seduce her some more, but she was nowhere to be seen; I could hear her, however; she was upstairs somewhere, talking on the phone to Lizzie, making final travel arrangements, so I left her to it and went down to make toast, scramble some eggs, and put the coffee on. She finally joined me just as I finished scrambling the eggs, wearing a diaphanous wrap that showed more than it concealed as it floated around her, and I could feel the demons of desire tugging at me as I watched her float around, the sight of her raising my pulse and temperature, and a couple of other things too! Lena of course knew exactly what she was doing to me; several times I caught that secret, self-satisfied little smirk she gets when things are going her way; she'd done all her packing, now she was ready to play, and she was making sure I was ready too.\n\nWe discussed our travel plans over our leisurely breakfast, but my mind was on other things; Lena is the most desirable, and certainly the sexiest girl I've ever known, and to have her sitting opposite me, dressed in nothing but a gauzy robe through which I could see frank and appealing glimpses of nipple, the curve of a buttock, and her long, lissom thighs as she crossed her legs or adjusted her robe, was cooking me on a slow simmer. Eventually I couldn't stand it any longer; Lena dressed like that demanded immediate and thorough attention, and certain parts of me had every intention of attending to her. Lena glanced up from her coffee and saw the look on my face, a small smile flickering on her lips.\n\n\"Ready to play, Dar?\" she asked softly, and I nodded, offering her my hand.\n\nI led her from the table to the sitting room, and pulled her down onto my lap on the big couch. Lena squirmed around until she was sitting astride me, resting on her knees on the couch. Her lips were in easy reach, and for the next few minutes or eight hours, I forget which, we kissed, her lips hot, hungry and avid. My cock was making itself felt, and Lena shifted several times to accommodate the feel of me bulging up against her labia as we kissed, until she finally reached down and unbuttoned my jeans. She climbed off me and pulled me to my feet so she could tug my jeans down while I pulled off my polo shirt. Once I was undressed, it was a simple matter for me to slide her robe off to once again admire the scenic landscape of my beautiful, naked sister/aunt.\n\n\"Hello, Dar, are you there?\" she grinned, completely breaking my reverie as I drank her in. I smiled back a little guiltily and pulled her close for a little grope of her spectacular bum by way of apology. Lena ground herself against me as she nibbled my earlobe, two things guaranteed to light up all my circuits, and I responded by groping and squeezing her a little more seriously as I grazed on her neck and shoulder. Lena slowly manoeuvred me backwards until my calves met the couch, whereupon she pushed me lightly, just enough to make me sit down a little abruptly. I kept hold of her glorious bum, though; I loved holding those globes too much to let a little thing like that make me let go of those beauties!\n\nNow I was seated, my face was on level with her crotch, so I gently pulled her closer by her firm cheeks and stuck my tongue out to lick her bare pussy as she came within reach. Lena shivered as I lightly licked her from as far back between her thighs as I could reach to the hood of her clitoris, feeling the little pearl there beginning to tighten and harden as her arousal climbed. Lena ground herself lightly against my mouth as I licked and lapped at her, her hands holding my head as she directed me with subtle pressure towards the places she wanted me to pay attention to. I could feel her getting more and more aroused; her juices were coating my tongue, as I lapped her, and the scent of her arousal was strong and fresh in my nostrils. Now she was sighing and pushing herself harder and harder against me, urging me to take her higher, but there was something I wanted to do first. \n\nI stopped licking her and turned her around, getting a discontented murmur from her, but I knew she'd soon forgive me. Now her lovely backside was in my face, and taking hold of her hips, I buried my face in the cleft between her warn, springy buttocks, my tongue spearing for my target, her soft, spongy, tight little rosebud. Lena gasped as I licked her there, and then pushed back against me as I began licking her pucker, occasionally poking the tip of my tongue into the tight knot of her rosebud to rim her, making her gasp and shudder. I knew she was getting tired standing there like that while I orally assaulted her tender parts, so I pulled her down next to me, turning her on her hands and knees away from me so I could continue eating her, while occasionally running my tongue across her labia from her clitoris to her perineum, making her mutter and murmur as she shivered. When I judged she was ready, I shuffled up behind her, and slid my aching cock into her tight wet pussy. Her groan as I slid into her was all I could have asked for, satisfied and demanding, fulfilled and happy. The angle we were at was perfect for me to penetrate her deeply, my cock rubbing against her G-spot as I ploughed into her while I held and squeezed her firm breasts and stiff, straining nipples. Lena pushed back against me as I pounded into her, both of us straining to please the other as we fucked so deliciously. \n\nI couldn't last long like this, and neither could my darling Lena. She came with a loud groan, her pussy clamping down tightly around me, the rippling heat enough to set me off, and I came in an explosion of spunk, stream after stream of sperm blasting into her, while I thought my heart would burst from the intensity of my orgasm. Lena was no less affected, her body trembling and shuddering as her orgasm crashed and surged inside her, wave after wave rippling through her, to massage and squeeze my cock embedded deep inside her, milking me of every drop of semen.\n\nI collapsed on the couch next to her, my body completely fucked-out from that head-shattering orgasm; my balls felt like they'd been finely minced, and my cock was just a collection of nerve ending right now, and all I wanted to do was sleep with my genitalia in a bowl of ice water. Lena looked to be in little better shape; her stomach muscles were still quivering and jumping in the aftermath of her massive orgasm, and all she could manage for me was a weak smile before rolling against me and pulling herself in close, followed a few seconds later by the sound of her soft, even breathing as she dozed off. That pretty much set the pattern of the day; it took me about six minutes to pack for our trip, I wasn't taking any holiday-type clothes as it wasn't a holiday, mainly tee-shirts, shorts and underwear, lots of SPF50 sun-block, and that was about it. The rest of the day was spent holding Lena, kissing Lena, and making leisurely love to my Lena, with a short interlude for dinner about 7 o'clock. We didn't go out for dinner this time; instead we raided the fridge; we had an early start so we needed an early night.\n\nWe were up with the lark, Lena doing last-minute checks, having last-minute panics and generally frazzling herself. I had the tickets, our passports, gifts for mum and dad, and all the little things Lena had forgotten stashed away in my flight bag, so I was unworried; the day was working just fine from my perspective. Exactly at the time we'd agreed, Lizzie and the kids arrived, ferried by Emma's husband as she had to work. The two of us retired to another room to escape the hubbub as Lizzie and Lena tried to talk over two excited, noisy kids. The minibus we booked to take us to the airport arrived on time, and so we departed. Aunt Doreen had a spare set of keys; she was going to look in on the place while we were away. The flight itself was uneventful, just over five hours, and we cleared customs with no real problems. The minibus from Paphos airport to Kolossi took about two hours along the tortuous route along the southern coastal roads, but when we arrived in the Sovereign Base Area my excitement knew no bounds; I'd last seen mum and dad nearly two months ago, but it had felt like forever, and I was raring to see them. Lizzie, however, was a bag of nerves, her hand clutching Lena's so tightly her knuckles stood out stark and white. \n\nWe agreed that I'd meet mum and dad first, then Lena, then we'd bring Lizzie and the kids in to meet dad, but it didn't happen that way; mum was waiting for us outside the small townhouse they'd bought, and as soon as I saw her my chest tightened; now I realised just how much I missed my mum, and I was holding her in a bear-hug possibly even before the minibus had come to a halt; all our plans for an orderly exit went out the window when I saw her, and I scrambled to hold her, hug her, feel her close to me again, all the while gabbling about how much I loved and missed her. Mum was almost the same, nearly incoherent as she held me close, hugging me in a neck-breaker while she kissed me. Lena followed with a much more sedate, but no less loving embrace; she'd last seen mum only a few days before, so she could be afford to be a little less headlong in her greeting, but I could see how glad she was to hold her again.\n\nThen mum saw Lizzie, her eyes widening as she looked at the woman she'd last seen as a teenage girl. Her eyes brimmed all over again as she wordlessly held her arms out to her, a gesture of acceptance and reconciliation that wasn't lost on Lizzie. As mum hugged her, she looked behind her and gasped when she saw the children smiling shyly at her. Lizzie pulled back slightly to see the expression on mum's face, and called the children closer.\n\n\"Maureen, these are my children, this is Marcus, and this is Allie. Kids, I'd like you to meet...your grandmother...\"\n\nMum looked at her in wonder, tears brimming in her eyes as she called both of them closer to hug them. Her eyes never left their faces.\n\n\"Look at them, their beautiful, and they look so much...!\" she smiled, her eyes darting to Lena for a second, and Lizzie nodded as she smiled back. \"I know, I finally got something right!\"\n\nMum hugged all three of them as tightly as she could. \n\n\"Thank you, Lillibet, thank you!\" she murmured. \"Your father's in the back garden; he was playing cards with his friends last night and had a couple of glasses too many of Ouzo, so he's feeling sorry for himself right now; I think that'll soon disappear! I didn't tell him about you, or the children, Lena asked me not to, I hope that's all right with you...?\"\n\nLizzie took her arm for a second, then looked at me.\n\n\"Darryl, you go through first, please; I know how much you wanted to see him again, I can wait a few minutes; Lena and I will come in shortly; go on now, I know how long you've waited!\"\n\nI swallowed, trying to dislodge the massive lump in my throat as I walked through the house to see my dad again; subconsciously I was expecting him to have deteriorated, to look somehow smaller or diminished as his sickness took its inexorable course, but he looked the same, a little more colour in his cheeks than the last time I'd seen him, but his weight seemed good, and his breathing was almost inaudible; being here obviously agreed with him. He was dozing, a copy of the Cyprus Mail newspaper on his chest, and I stopped to grin, he looked so familiar in that pose, something I'd seen nearly every Sunday morning of my childhood when he settled down in his favourite armchair in front of the TV to read the papers, usually lasting about half-way through before dozing off. I must have made a sound, and his eyes flicked open.\n\n\"Darryl, hello son!\" he smiled, and I moved across to hug him, so glad I had my dad back. After what seemed like an eternity he pushed me away so he could look at me.\n\n\"You're looking well, Darryl, very well; work must agree with you. Where's Lena?\"\n\nI pointed at the front of the house.\n\n\"She's talking to mum, she wanted to give me some time alone with you. How are the meds? Have they still got you on Formeterol?\"\n\nDad nodded. \"It seems to work better than the Salbutamol, and for longer, so I've stuck with it, and the Chief Physician here agrees; no need to change if it works.\"\n\nI made to go and get Lena, then the doctor took over, and I checked his temperature, his pulse, and listened to his chest, and yes, I had my stethoscope with me; most doctors would rather travel without their trousers than leave their most fundamental diagnostic tool behind, and I'd inherited that instinct from my peers and mentors. All seemed to be well, and just as I was helping him button up his shirt again, Lena came into the room. She immediately hugged him fiercely, almost smothering him in her enthusiasm, dad laughing and spluttering as he fended her off. And then he looked at the door and saw Lizzie. His eyes opened wide in astonishment and his face paled.\n\n\"Hello daddy!\" she murmured, while dad's mouth opened and closed, but no sound came out. Lizzie came closer, to kneel next to him and take his hand. \"I'm so sorry daddy, so very sorry, please forgive me for taking so long, I was wrong to leave, and then I was afraid to come home because I didn't know how to put it right!\"\n\nDad took her hand in his, then suddenly pulled her close to him, hugging her while he whispered in her ear. I looked away, otherwise I was going to start bawling; Lena was already there. A movement caught my eye, and I looked over to see mum and the kids standing in the doorway. Dad also caught the movement, and as he registered what he was seeing a look of complete astonishment came over his face. Lizzie looked up and saw the direction of his stare, and smiled happily.\n\n\"Daddy, this is Allie, and Marcus. Babies, come and say hello to your Granddad!\"\n\nNow the family was complete.\n\n*\n\nWe stayed for a week; I would have like to have stayed longer, but the children had to go back to school, and I had to go back to work. Mum and dad had twigged that Lena was expecting; the morning visits to the bathroom and the loud retching sounds soon gave that away, and mum went from being a calm, efficient, Nursing Supervisor to the psycho-neurotic mother of an expectant mother. Dad, Allie, Marcus and I stayed out of the way while mum, Lizzie and Lena banded together. Eventually they calmed down, the women taking long shopping and sightseeing trips while Marcus, dad and I hobnobbed with the RAF staff and flight-crew he'd befriended in Akrotiri; the look on Marcus' face the day he got to sit in the cockpit of a Tornado was worth the price of all the airline tickets, his seven-year old face glowing as he got to be what every little boy wants to be; the pilot of a jet fighter. We did lots of family things too; as mum and dad lived on the Sovereign Base Area of Kolossi, we got to use the RAF facilities, which meant a certain amount of time sunning by the pool while RAF Flight Crew ogled Lena and tried fruitlessly to pick her up, and Allie flirted outrageously with, and broke the hearts of, every boy her own age from the RAF families stationed there.\n\nDad was completely bewitched by his grandchildren, and both Marcus and Allie had fallen in love with him within minutes of meeting him; it quickly became normal to knock on his door first thing in the morning with his meds and find both of them already there, sitting on his bed, while he told them stories of their mother, or his life in the RAF before Lizzie was born, and the two of them invariably sat either side of him at lunch and dinner, both of them never more than a few inches from his side and always ready to pass him the salt, the bread, a napkin, anything. Lizzie glowed to see her children bonding so closely with her family as they discovered their grandparents. Mum took to the role of grandmother as though born to it, just as Lena had predicted; she was utterly besotted by both children and their astonishing resemblance to dad and Lena; it was easy for her to relate to them because of that resemblance; anyone who looked so like her own child was always going to find a special place in her heart. \n\nIn turn, I'd never seen dad so relaxed or at ease; perhaps coming here had benefitted him; he certainly thought so. I still wasn't completely convinced; I didn't like the idea of them being marooned in a foreign country, but I'd seen the facilities at the hospital, and been impressed at the standards of palliative care, so I couldn't in all honesty object on quality of care grounds. My objections were far baser; I wanted my dad near me, but I had to admit; being here was probably best for him. I shuddered to think what one more English winter would have done to his lungs; at least here, he could grab a few more precious handfuls of life than he could ever hope for in the damp and cold of England. Lena in turn was never more than a few feet from him, and it became usual to see him with his arm around her as she stood next to him, his ear pressed against her abdomen as he tried to detect any sign of his grandchild, or sometimes just to feel the nearness of his daughter. \n\nAll too quickly, the week was over and we had to leave. I was quite prepared for Lena to tell me she was staying a few more weeks; not only would I not have objected, I would have agreed wholeheartedly. She needed to be near mum, she needed that older female companionship as her pregnancy progressed, but Lena seemed quite happy to come back with me, which puzzled me slightly, then I got it; she had Lizzie now, and she had Marcus and Allie; Lena had family to fall back on; she was part of a clan now.\n\nLeaving was a wrench, even though I knew we'd be coming back in the spring, if not before; more than anything now I wanted to take that picture of my father with my baby, and I wanted to come back at least once more before then; being separated from them for six weeks had been almost unbearable, and this week had helped to sponge some of that away, but I couldn't bear the thought of another seven or eight months or so before we saw them again, so perhaps Christmas would be a good time to visit; if we worked it right, we could maybe bring Lizzie and the children again during their school holidays so we could have a last family Christmas together...\n\nSaying goodbye was the hardest part; mum and dad couldn't come to the airport with us, and the children had grown so attached it was distressing and upsetting to watch them cling to mum and dad; hell, I almost jumped out of the bus and waved it off, but sense prevailed and I left with my family, watching mum and dad dwindle in the distance until the bend in the road cut off our view. Lena was snuffling against me, and I wasn't far behind, and Lizzie, Marcus and Allie were all shiny-eyed as well. It was a sombre group who boarded the plane, Allie pre-empting the seat next to me so she could huddle up against me and cry, Marcus doing the same and holding Lena tightly, with Lizzie holding Lena's hand the all the way home.",
        "The summer eventually fizzled out into the gathering gloom of autumn, and the kids went back to school, but they stayed close; most weekends they were with us, or we went to see them in Portishead, the seaside town in North Somerset Lizzie had chosen to live in, a short way down the M5 motorway. The beach at Portishead is a summer beach not too far from the mouth of the Severn Estuary, and so at the end of the season everything was closed, but it was nice to stroll along the miles of golden sand on the occasional sunny day and watch the big Atlantic rollers come in up the Bristol Channel as the weather in the North Atlantic gradually worsened at the closing of the year. I'd hoped to get some time off over Christmas, but as most junior consultant on the general surgery team, I drew the short straw in the Annual Leave lottery, which meant no real leave until probably near Easter, late March or early April. I got to spend Christmas at home with Lena, Lizzie and the children, and Aunt Doreen, and then they'd all gone to Cyprus, while I went back on rotation until after New Year; while everyone was busily singing 'Auld Lang Syne' I was knee-deep in work, learning the intricacies of triple-bypass surgery. \n\nI did get some interesting and intriguing news, though; after my conversation with Emma about my aunt and missing cousins in London, I'd asked a few colleagues in the hospitals in and around south and south-west London if there were any correlations with the names Sandra Lois Jameson, Julie Jameson, or Mark Jameson. A Julie Jameson, aged 13, had been treated in St. Georges, Tooting Broadway, for a cracked cheekbone sustained during a volleyball game; that had been five years ago, so she was eighteen now. Her next of kin had been listed as a Mark Jameson, aged sixteen. That made me pause; the coincidence was too compelling. Julie and her brother had been in South London five years before, so there was a chance they still were. The next time I saw Emma I'd pass it on, and she could take it from there.\n\nLena, Lizzie and the children came home just in time for the start of school after the Christmas holiday, and I finally got Lena to myself at last. I was jumping with anticipation, as well as talking sternly to a cock that wanted to jump out and ravage her there in the Arrivals Lounge; I think Lizzie read my agonised expression, soundly deflecting Marcus and Allie's request to come back and spend some time with Lena and me, instead persuading them that Lena was tired after the flight and she didn't want to be entertaining after such a long flight. Lizzie insisted on taking a taxi back to Portishead, while giving me the dirtiest wink I'd ever seen...\n\nSo once again I was driving my baby home from the airport with an unruly erection not helped by the sight of Lena's smooth thighs barely concealed by the short, tight skirt she was wearing, but I did manage to get us home safely, unloaded her luggage sedately and carried it in, then leaped frenziedly on her. I think I broke my personal best for getting naked, with Lena not far behind, which was surprising considering she was wearing so much less than me; Clark Kent couldn't have got out of his clothes faster, phone box or not, and finally I had her delectable peach of a bottom in my hands. Lena was no less hot, rubbing her bare mound relentlessly against me as we kissed voraciously. We didn't even make it up the stairs, even though we tried; as we got as far as the bottom tread, I lifted her to carry her upstairs, her legs wrapped around my waist, and she just dropped herself down onto my straining cock, impaling herself on me in one move. \n\nAll thought and plans for a leisurely build-up to the Great Bedroom Seduction Scene went out of my head as her hot succulence engulfed me, my gasp matching her groan of fulfilment as she sank down on me, taking me in all the way. I spun around to put her back against the wall so I could pummel her, Lena moaning and biting my shoulder as I hammered into her, my senses all at full stretch as we fucked, the first time I'd ever done it this way with her. Lena was in a world of her own, little gasps in time to my thrusts into her was the only sound from her, but the pulsing, squeezing sensation in her pussy told me just how much she was getting from this. Those same sensations were doing things to me, making me hot, making me want to empty myself into her over and over again, need overwhelming conscious thought as we pumped and ground against each other, until;\n\n\"Ooooh God, yesss, yesss, fuck me, Darryl, yesss, YESS!\" she screamed, her pussy clamping tightly around me as her orgasm roared through her, her whole body quaking and shuddering with the force of her release. \n\nHer orgasm triggered my own, my cock swelling inside that succulent, velvety, vice-like grip as the ripples in her pussy milked and squeezed me, and my own orgasm crackled through me, centring at the juncture of my thighs, hot bolts of seminal fluid pulsing out of me in what felt like an endless stream, each pulse of my cock a sweet agony of sensation as I poured myself into her. My eyesight dimmed, and my ears rang with the force of my ejaculation, my whole being centered on the rigid cock jammed balls deep inside her, pumping my seed into her, my lover, formerly my sister and my aunt in one perfect package, now only the mother of my child and the love of my life, my only and forever. \n\nOur mutual storm passed leaving us weak and drained, bodies and limbs twitching in reaction to the stress we'd put them under. I sank to my knees, taking Lena with me, leaning back on my hands as she knelt straddling me, her arms around my neck as she held herself against me, her heart beating a rapid tattoo against my own. We sat like that while we calmed and got our breath back, Lena stirring first, kissing the tip of my nose as she grinned happily, if a little blearily, at me.\n\n\"Holy Shit, Daryl, we have got to do that again before baby-bump gets too big!\"\n\nI grinned back, my eyes widening as I suddenly really saw what I'd been seeing all along; she was over four months along, well into the second trimester, and she was beginning to show; not a lot, still a barely noticeable curve and swell to her erstwhile flat tummy, barely a baby bump, and easily mistaken for normal feminine rounding, but it was there; there was my baby, finally making his or her presence felt! Nothing more would do but that I must slide her off and up a little so I could kiss her adorable rounded tummy and finally say hello properly to my baby. I'd seen the initial scans, but they had been unrevealing, showing little more than areas of dark and light and a fluttering little heart, doing nothing except confirm we were having a baby and that there were no detectable risks to mother or baby. \n\n\"Next Wednesday, Dar, my first 3-D Ultrasound scan at the Ante-Natal clinic, and this time, you'll be able to tell if it's a boy or a girl; that should make baby shopping easier!\" \n\nI continued to gaze adoringly at her belly, picturing her as our baby grew and developed inside her, imagining how she would look with a swollen belly, finding the mental picture stimulating and arousing; she was mine, and she was having my baby. My life was perfect, with only one cloud hanging over it; I was going to lose my dad, soon. But, he'd come to terms with it, and showed me how to do that as well. I was never going to be okay with it, but I wasn't skirting the edge of depression and despondency any longer, and I had Lena, and baby bump to look forward to in the coming months, and family we loved and who loved us. I wanted to do something special for her for dinner, and maybe celebrate baby Morgan finally showing up.\n\n\"What would you like to do for dinner, baby?\" I asked, and her eyes lit up.\n\n\"I want a big slab of steak, seared on the outside, blue on the inside, glazed with blue cheese, smothered with button mushrooms fried in butter, duchesse potatoes, a warm salad, and lots of chocolate to follow, and I don't mean Death by Chocolate; I'm talking Genocide by Chocolate; clinically inadvisable amounts of chocolate, Dar, I want people on the other side of the globe to faint with envy when they hear what I had for dessert!\"\n\n*\n\nThe Ante-Natal clinic pronounced mother and baby in perfect health, and confirmed the probable sex to us; we were having a boy (in the considered opinion of the Radiologist administering the scan), poor Lena trying not to show her momentary disappointment after she'd set her heart on a girl. \n\n\"Never mind, baby, the next one will be a girl, and at least she'll have a big brother to look out for her, just like I did!\" she grinned, consoling herself as we left the hospital. \n\nThat evening I got a call from Emma, asking if I was free for a couple of hours in the morning, there was someone she wanted me to meet. I was intrigued when she wouldn't say who, as was Lena.\n\nThe following morning Emma picked us up; Lena wanted to come along too, and we drove through Bristol, down through the Centre, past Temple Meads and along the Bath Road, finally turning into Arnos Grove Cemetery. I guessed where we were going, and Emma led us to a marble memorial, a cross with an inverted rifle carved into the upright, and a badge carved in high relief, a laurel chaplet surrounding a map of the world, surmounted by a pennon with 'Gibraltar' carved on it, supporting the Queen's State Crown bearing a rampant crowned lion and the words 'Per Mare, Per Terram'; the crest of the Royal Marines. At the juncture of the upright and the crosspiece of the monument was an inset picture of a smiling young man in the full dress blues of a Royal Marine. He was holding his white Wolseley Topee helmet under his arm, and Lena gasped as she looked closely.\n\n\"Oh my God, Dar, he looks just like you, look!\"\n\nI already knew who it was; the inscription gave his name. I felt oddly affected by seeing this; I had no connection to this man, and yet I literally owed my existence to him. I read the inscription further.\n\nRobert Darryl Fraser, Lance-Corporal, \n\nCompany K, 42 Commando, Royal Marines\n\nTaken from us 31st May, 1982 while on patrol on Mount Kent, East Falkland, Falkland Islands.\n\n\"PARUI REQUIEM MIHI ET HONORE\"\n\nIt took me a moment to recall enough Latin to translate the inscription; \n\n\"I have served with honour and earned my rest\"\n\nLena had tears in her eyes as she read the inscription, and knelt down to right the wreath of poppies placed there last November 11th, Remembrance Day. Emma knelt beside her and brushed away the wind-blown debris that had sifted over the base of the monument then placed a single poppy and a white rose there. Lena exchanged glances with her, then once more brushed her hand lightly over the poppy wreath.\n\n\"So young, look at him, he was just a boy...!\" she murmured, a tear rolling down her cheek, \"He was just a boy, Dar, he had his whole life ahead of him...\"\n\nEmma brushed her fingertips over the picture, her eyes distant, sad.\n\n\"A lot of boys lost their lives there, on both sides; some of them died the same day, and when I come up here I try and think of all of them too, of what their mothers and families must be doing now, and it's probably not very much different to what we're doing here and now. This is the real consequence of war, not the drums and trumpets and victory parades and medals; instead there's the empty seats at the family gatherings, the lost promise of lives not lived, and the grandchildren who will never be. I don't celebrate the victory in the Falklands; those boys who were killed by our troops, they may have been enemy soldiers, but they were also somebody's babies, somebody's brothers, too.\"\n\nShe stood up and helped Lena up, wordlessly handing her a tissue so she could wipe her eyes and blow her nose, before linking arms with both of us as we walked back to the car. As we walked, she told us of the reason for our visit.\n\n\"I come here every year on Lizzie's birthday because Robbie used to give her a white rose on her birthday; it was like his special gift to her. Today's her birthday, but she's never been here, I don't think she ever will; she can't face his loss, and this would just be too much for her. So I do it, I give him a rose from her, just to let him know she hasn't forgotten him.\"\n\nWe drove back in silence, busy with our thoughts, but feeling strangely up-beat; at least I was; now I had a real connection to my past, to the other side of the story mum and dad had tried to tell me all those months ago.\n\nThe next few months flew past; subsequent Ultrasound scans confirmed we were indeed having a boy, and Lena busied herself getting the house baby-friendly while work continued apace for me. Lena quickly acclimatized herself to my sometimes erratic work schedule, she understood that as the junior member of the team I was still in training; the Senior Registrar was very hot on all team members keeping their training and techniques up to date, so I was handed more, and more varied, surgical cases than my more senior colleagues. This was my 'make or break' time; if I caved in under the pressure, I'd fail my surgical elective and have to either revert to General Practice or leave medicine. \n\nLena was my tower of strength during this difficult period, keeping me going when I stressed out, and leaving me to sleep when I dragged in after marathon sixteen hour sessions in the Operating Theatre. I think if I'd shown the slightest hint that I was contemplating chucking it all in and becoming a GP she'd have supported me, but she would also have been disappointed with me that I'd given up, and I couldn't live with knowing I'd let her down in any way. This period was when most of my real growing-up happened, as my mind finally wrapped itself around the choices I'd made and showed me the real consequences of failure; I had a baby on the way, and a partner who depended on me, so there was no way I could allow myself to falter or fail. \n\nAs her pregnancy progressed, and her belly swelled, she became almost irresistible; her usual expression was serene, almost angelic; she looked like a Madonna from a Raphael painting, with her sweet expression and calm, unruffled manner; I couldn't get enough of her, and she felt the same way about me; night after night, when I should have been resting in preparation for another long day in the Operating Theatre, we would instead be pounding and straining against each other, everything about her drawing me in, pulling me closer, making me hot and her irresistible; I spent the last trimester with an almost permanent erection, and Lena was always wet and receptive, ever ready with her slippery, succulent pussy or hot demanding mouth. \n\nMy days passed in a whirl of surgery, diagnosis and surgical training reviews, and my nights an endless round of hot, sweaty, slippery sex. When she got too large for us to safely make love in the missionary position, she would instead have me take her from behind, her fingers strumming and rubbing her ever erect clitoris while I pounded into her as I rubbed and squeezed her swollen breasts and highly sensitive nipples. \n\nHowever we did it, though, the sex was unforgettable, mind-blowing, incredible, and a whole lot of other superlatives. Lena and I couldn't stop; the things we felt for each other and that connection we shared was always the keystone of our lovemaking, the one thing that stood out for both of us; we really were a family, in all the important, subtle, and not so subtle ways there are to measure that connection we shared, and we felt an almost overwhelming compulsion to renew and explore that connection at every possible opportunity. \n\nLizzie was always there for us, and Emma, and Allie, surprisingly; she'd moved to the Catholic school in Lawrence Weston, not too far from either Clifton or Portishead, and had gotten into the habit of appearing on Friday afternoon after school and staying for the weekend, with either Lena or me taking her home on Sunday evening; I was pleased she'd attached herself to us, as it gave Lena some company when I was working through the night at weekends; I got used to coming in at 6 or 7 in the moring and finding Allie and Lena fast asleep in our bed, thumbs corked in their mouths, the TV still on and the debris of pizza and microwave popcorn scattered everywhere; when I wasn't working, having her there gave us a flavour of what it would probably be like to have a child sharing the house with us.\n\nThe day I was informed I had been put forward to sit the Intercollegiate Membership of the Royal College of Surgeons examination was the crown of my career to date, and a resounding slap on the back from the University Hospital. From then on my life became even more hectic, cramming time to study in between my surgical caseload and trying (and succeeding, somehow!) to have a family life with Lena. When I took the examination, Lena was serenely confident I would pass and be awarded my membership diploma and the right to carry the letters MRCS after my name; Dr. Darryl Morgan, Member of the Royal College of Surgeons; it had a certain ring to it!\n\nAnd then one day in late May I got a panicked call from Lizzie. Lena was on her way to the hospital. They'd been out shopping in Broadmead, one last spree before she popped, and her waters had broken in one of the department stores. Luckily Broadmead is only a short way from The Bristol Royal Infirmary and I was already in the A & E when she was brought in by the ambulance, having broken most of the hospital Health and Safety rules in my mad dash to be there for her when she arrived. \n\nHer face was twisted in pain as another contraction hit her, but she was the most beautiful thing I'd ever seen, her skin glowing with the promise of impending motherhood. The contractions were still more than 5 minutes apart, so there was time to move her to the Maternity Unit and get her gowned and prepped. I was hovering, getting in the way, trying my best to stay out of the way, but trying to be involved at the same time, until the midwife pulled me to one side and dressed me down properly.\n\n\"Look, Dr. Morgan, it's quite simple; you can be the attending, in which case you can deliver this baby, and I'll go and have a coffee; Oh yes, you're not an obstetricianor a midwife, are you? Okay, that means you have no business being down at this end, so you get up by your wife, talk to her, help her, hold her hand, anything, just stay the hell out of my way, and keep your trap shut. Are we clear on where you want to be now? Good, now leave us to do our job and you make yourself useful and help your wife get comfortable!\" \n\nI slunk back to Lena's side, feeling foolish at being told off like an officious 8-year old, and Lena's grin didn't help matters any, either! Her grin quickly faded, replaced instead by a grimace and a gasp of pain as another contraction rolled through her; I looked at my watch and noted that it was five minutes since the last one, and also of longer duration. Her hand grabbed mine convulsively as the full strength of the contraction made itself felt. It swept through her for something over 30 seconds, then died away and her breathing eased. \n\n\"Dar,\" she tugged me closer, \"Remember when I used to make fun of all those women in the movies, screaming like banshees when they were having babies? Well I'm sorry, I take it all back! Christ, those contractions hurt, it's like cramp but it just builds up and I can't stop it! Is it too late to ask for an epidural?\"\n\nI had to think before I remembered the procedure.\n\n\"Not until your contractions are regular and you're dilated 5 centimetres, if they give it to you too soon it may slow your contractions, so sorry, baby, you might have to wait an hour or so, maybe more.\"\n\nShe looked aghast.\n\n\"More of this pain, for another hour before they can tell whether I can have pain relief? How long is this labour likely to last?\"",
        "Again, I had to think about the average length of labour with a first delivery.\n\n\"Uh, Lena, could be eight to sixteen hours, sorry!\"\n\nLena looked rebellious.\n\n\"What! Sixteen hours? I don't bloody think so, get me a doctor, now, and get this baby out of me!\"\n\nThe midwife looked up at that and grinned at her, patting her gently on her knee as she adjusted her hospital gown.\n\n\"Calm down, Lena, it's standard, right now you're only in the first stage of labour, so we can't give you an epidural even if we wanted to. Darryl's right, you know. If it's any consolation, your mother was exactly the same!\"\n\nLena looked sideways at her.\n\n\"You know mum?\" and the midwife smiled.\n\n\"Maureen and I trained at Southmead together, we did our SRN together, and I delivered you...and you!\" she glanced at me.\n\n\"So you know...?\" I asked her tentatively, and she nodded.\n\n\"Maureen and I have been friends since we were 17 years old, I trained with her, went to her wedding, and delivered her daughter...and her step-daughter's son, so yes I've always known who you were, Darryl; don't look so worried, Maureen's my friend, your secret's safe with me! I didn't request that I handle this particular birth; it was the luck of the draw, but I'm glad it was me; I delivered Maureen's daughter, and her son, now I'm going to deliver her grandson, I think it all worked out quite well!\" \n\nPoor Lena never got her epidural; there was no anaesthetist available so she had to grit her teeth. Labour lasted an excruciating eight hours, the midwife leaving us alone for most of the time so we could talk, hold each other during the most painful and prolonged of the contractions, and wait for full dilation. Lizzie did hang around for a while, but they wouldn't let her in the Mother-Baby unit, family or no, so she decided to go home after wringing a promise out of me to call her as soon as baby Morgan made an appearance.\n\nAt last the midwife decided her uterus was fully dilated, and Lena began to push in time with the contractions as they came almost constantly now; this baby really wanted to be born, and less than 20 minutes after she began to push, that little body slid out, a shock of dark hair my first impression of my son. The midwife clamped and cut, and her assistant took the baby to wipe him off a little, wrap him, and weigh him, before placing him on Lena's chest.\n\n\"Hello David!\" she murmured, and smiled at my raised eyebrow.\n\n\"His name's David Robert Fraser Morgan, do you mind, baby? I wanted him to be part of daddy, and that poor boy as well, if it's okay with you.\" \n\nI smiled; of course I understood; Robert Fraser was my father, nothing could change that fact, and he'd not abandoned me; he'd gone away to fight and never came back, through no fault of his own. If we named our son after him I think that would be a fitting tribute to the boy who'd gone to do his duty and paid with his life. Naming him after dad was always my intention; he was going to be David Morgan II from the second I knew we were having boy, and honouring my biological father was also something I'd considered; trust Lena to anticipate me once again and get it so right. I stroked her cheek and chucked my little boy under his tiny, delicate little chin.\n\n\"Of course it's okay with me; he's part of both of them, I think it's right he keeps their names alive. Thank you for thinking like that.\"\n\nThe midwife came up then and asked me to leave, as they still hadn't finished with Lena, so I waved as the porter moved her to another part of the unit to finish the rest of the birthing procedure, something I definitely didn't want to watch. I smiled to myself, wondering if he'd have his mother's startling violet eyes to go with the chestnut hair he'd already gotten from her, or if he'd have my green eyes. His eyes would be open in a day or so, I'd find out then. \n\nI called mum, telling her Lena had just given birth, and listened while she sobbed down the phone at me, then she put dad on. He of course asked what the baby's name was, so I told him, and after a moment's silence he whispered \"Thank you son, thank you both!\" \n\nI just had time to tell the him we'd be there in a couple of weeks when my pager decided to go off, and I suddenly realised with a guilty start I'd absented myself from Cardio for over eight hours; oh well, if they gave me any flak they could ask the midwife if they wanted, I had a bloody great, iron-clad excuse!\n\nThe hospital kept Lena and the baby in for another three days, with Lizzie, the kids, and Emma in virtually constant attendance the whole time she was in, then I was allowed to take her home. I'd asked for, and been granted, three weeks leave of absence to look after both of them while Lena got back on her feet, although so far she'd proved to be surprisingly resilient. The baby was a demanding feeder, and Lena was only getting sporadic bouts of rest, so I felt it was only fair I take care of everything else around the house while we waited for the little one to settle into a pattern. \n\nLena looked amazing; she'd not really put on any baby-weight around her middle, other than a tiny little curve of 'mummy-tummy', so her waistline was hardly affected, and her breasts, swollen with sweet milk, made her look lush and voluptuous; with her long slim legs, taut behind, and over-emphasised d\u00e9colletage, she looked like a chestnut-haired Betty Page, and I spent all my time around her with an unfeasibly stiff and swollen erection; alas, it was to no avail; eight weeks before we could 'resume normal relations', as the obstetrician so delicately put it; eight weeks, with her looking so deliciously desirable? I was nearly bent double while being ready to explode with pent-up desire for her after just 3 days, how the hell was I going to survive eight weeks? \n\nLena was at first amused by my predicament, then sympathetic, but I knew better than to try and force the issue; her insides had taken quite a jumbling and she needed to recover, and the clinical, detached doctor inside me agreed wholeheartedly with the timescale; trouble was, the horny husband-with-needs in there right alongside him disagreed vehemently and spent the long and restless nights baying for her. \n\nFinally, one night, Lena took pity on me, realising I was keyed-up to an almost impossible pitch. The baby was sleeping soundly in his cot next to the bed, and Lena was fast asleep against me, poor girl, obviously tired out, her arm thrown across my chest, and the scent of her hair filling my nostrils. These days she always smelled delicious; a delicate milky bouquet with overtones of baby oil, baby shampoo, and talcum powder always accompanying her, a sweet and tempting combination, and, as usual, I was in a state of frustrated arousal; my head was, as usual, filled with memories and fantasies of the wild and enormously satisfying sex we had indulged in during early days of her pregnancy, and Rosy Palm and her five daughters just weren't cutting it; I was becoming convinced I was actually going out of my mind with sexual frustration. It was while I was having thoughts like this that Lena shifted, her arm sliding off me and her hand coming to rest flat on my stomach, the edge of her palm just brushing my ever-present erection.\n\nI paid it no mind, and then I felt her hand moving, slowly stealing southward, until she was gently but firmly holding me. As she began to slowly fist my erection, I closed my eyes in ecstasy; I'd done this to myself often enough, but having her do it was a next-level experience. As she squeezed and pumped me she lightly kissed and nibbled my chest, eventually circling my nipple with her tongue before slowly sucking it and gently scraping it with her teeth. All through this she never said a word, her lips and tongue, and her pumping hand all the communication we needed. Then she began kissing down my torso, rubbing her tongue through the hairs on my chest and down my abdomen, poking her tongue into my navel and making me gasp with the sensation. Her lips continued to move further down my midsection, until at last I could feel her warm breath on the head of my cock as she continued to pump and squeeze me. I felt her raise her head and I did likewise, to look into her eyes as she smiled serenely at me.\n\n\"I love you, Dar!\" she whispered, and slowly slid her lips over the head of my stone-hard cock. I groaned softly at the sensation of wet heat as her soft, hot mouth engulfed me, the feel of her tongue as she licked around and under the head while she sucked me almost indescribable. As she sucked and licked me, she began gently squeezing my scrotum, massaging my balls while she slowly sucked my cock, engulfing the head in hot, slippery succulence.\n\nI couldn't possibly last long like this; the pressure had been almost unbearable before, now, the need to empty myself into her was steadily outvoting all my attempts to hold back, to savour the experience. Lena seemed to know exactly what was going through my mind, as her squeezing of my balls became more urgent, her suckling of me more intense as she did her best to bring me off.\n\nI came with a long, soft, growling moan, mindful of the sleeping infant a few feet away, but the orgasm was no less intense for that, all my nerve-endings seeming to sparkle in one huge rush of crackling energy as what felt like a gallon of sperm blasted out of me and into her hot, receptive mouth. Lena sucked and swallowed as fast as I ejaculated, jet after jet of spunk barrelling out of me, her cheeks hollowing as she sucked and swallowed avidly, her eyes locked on mine as she pleasured me so completely.\n\nAt last I slumped back, drained and truly satisfied, all the pressure and frustrations of the last few days wiped away by my beautiful girl and her talented mouth. Lena gave one last lick as she polished the last traces of spunk from my cock-head and slid up next to me to plant a kiss directly on my lips as she leaned up and smiled down at me.\n\n\"Dar, you are so silly, and so sweet!\" she whispered. \"All you had to do was ask, you know! I've been watching you suffer so nobly, when all you had to do was ask. Thank you for thinking it would be wrong to ask me to help you out when I'd only just had a baby, but I would have, like a shot; I love you, you silly arse, and you needed me! From now on, until we can resume rumpy-pumpy proper, if you need some help, just say so; I'll never turn you away, Dar, no matter what!\"\n\nAs she leaned down to kiss me again, I gathered her into me, one thought resonating inside me; how did I ever end up deserving a wonderful girl like this? I fell asleep, proper sleep, for the first time in days, that unique painless agony finally relieved, with the feel of Lena softly breathing against my neck as I held her close. Sometime during the night I felt her stir, and listened, half awake, to the unmistakeable, beautiful sounds of a tiny child feeding contentedly at his mother's breast. I fell asleep again, a happy and fulfilled father, listening to the love of my life nourish our baby with her body.\n\nI awoke to see Lena once again nursing the baby, his tiny, perfect little lips working as he suckled, his eyes fixed on his mother. David had green eyes, like me, and they were fixed intently on his mother, two tiny emeralds in the bluish orbs of his eyes. I know his eyesight was disorganised and still incapable of resolving anything much at this early stage, but some instinct made him fix his stare on his mother as he nursed, somehow he knew she was his world, for now, and I enjoyed watching Lena looking back into his eyes just as intently, boundless love and fierce protectiveness radiating off her. As I stirred she reached over to gently brush her fingers along my cheek without taking her eyes off the baby, including me in the moment as our baby fed.\n\nI showered, shaved and dressed while Lena finished nursing and put him down to sleep, then signalled me to follow her into the other room. We stood in the doorway across the corridor opposite the bedroom, so Lena could watch the baby's cot while we talked in low voices.\n\n\"Darryl, we need to go and see daddy; I keep getting the feeling something's going to happen soon, and...I don't know, but I have to see daddy very soon. Dar, get some tickets, the baby can travel after a week, so get them for early next week. Please Darryl, I don't know how I know, I just know, I have to see daddy again, before...before it's...!\" she started crying. Of course I agreed; I hadn't wanted to say anything, but I had been feeling that same need to see and touch my father again, to hold him while he held my child, and along with that a growing feeling I couldn't shake, a premonition that time was fast running out for my dad. Lena clung to me as her tears boiled up, until she was crying in great sobbing bursts, a paroxysm of grief and loss, but one I understood completely; she could feel it as well and as sharply as I could, that we were close to losing dad, and we needed to be with him. I knew that her emotions were in turmoil right now, as her hormones ran riot inside her following the birth, but I could tell this was more than just post-baby blues; I could feel it too, and I had been feeling it for several days now, trying and not succeeding to dismiss it as just new father jitters. Lena stopped crying, but she kept her face still buried in my shirt front, and when I handed her my handkerchief she stroked my cheek as she took it from me. \n\n\"Book seats for all of us, Dar, Lizzie and the children need to come as well, daddy will want to see them again...\"\n\nTo hear was to obey, and after a quick conversation with Lizzie I called the Travel Agent and booked the flights for the following Monday, four days hence and 10 days after the birth. I made a quick call to the Obstetrics Clinic and confirmed David would be safe to fly, and set about making preparations for our flights.\n\nThe trip was once again uneventful, almost routine, although Allie and Marcus were unaware of what was driving it; I'd had a whispered conversation with Lizzie about it and she confessed she too had developed the certainty that time was getting short; something was nagging her about dad, something was wrong, or was going to happen, but the last time she'd spoken to mum and dad, they'd both been fine, dad was roaming around with his old friends, mum was working, everything seemed normal. If not for that same nagging unease I was also feeling I would have dismissed it all out of hand, but I couldn't shake the feeling that something was coming, and we needed to go to dad, and soon.\n\nBoth the parents were waiting at the airport this time, eager to fawn over their grandchild, mum a ball of smiling, crying, motherly concern and grandmotherly pride, and dad proudly holding his new grandson while Lena and Lizzie hugged him, then pictures of all the kids together with mum and dad, Allie holding David like he was a precious Ming vase while beaming at the camera. \n\nDad had the driver of the minibus take the longer route back to Kolossi so as not to jumble the baby around too much, mum hovering over David in his baby-carrier like she never meant to let go while Lena cuddled up against me. When we finally arrived back at the house, Marcus helped me with the luggage while Lena and Lizzie sat with dad, arms around him as they bantered, but the humour in their conversation wasn't reflected in their eyes; they both looked worried, and yet there seemed to be no cause for concern; Dad was looking far fitter than at any time over the last few years, now that I cast my mind back; he'd put some weight back on, and seemed to be using his inhaler much less frequently. His chest certainly wasn't wheezing so distressingly any more, although it hadn't stopped; he had COPD, and it wasn't going away, perhaps the hot dry air was doing what his doctors had hoped for and slowing the advance, giving him more time with mum, with us, the only thing he'd ever really wanted.\n\nI got to take that picture I wanted, dad holding David, looking fit, tanned and healthy, his face wreathed in smiles as he held his grandson (and great-grandson!) proudly, an image I have burned into my mind and memory forever.\n\nDinner that night was at a local taverna, Lena raring to taste her favourites again; Souvlaki, Moussaka, and Keftedakia, with Baklava to follow, food she'd discovered on Greek holidays with her friends during her university days. She ordered for all of us, and we sat down together to eat as a family, four generations at one table. We stayed until late, laughing and enjoying our time with dad and mum, but still that nagging unease lurked in the back of my mind, and I could tell Lena was sometimes forcing herself to laugh and appear to be enjoying herself; she too was slowly succumbing to that feeling of brooding unease, feeling the growing vacuum as we waited for the first sign that something was imminent.\n\nAs we made our way back to the house, Allie roamed ahead to wait for us, while mum walked ahead of us with Lizzie and Lena, mum carrying David and Marcus holding hands with Lena as he gazed adoringly at her. All of them were apparently engrossed with the baby, but Lena kept giving backward glances, her expression worried, as I walked alongside dad, both of us slouching along with our hands in our pockets, something he'd given me endless grief about when I was younger. \n\n\"Stand up straighter, Darryl and get your hands out of your pockets!\" he'd order me, \"And for goodness sake, stop shambling, walk properly!\"\n\nI smiled at the memory, and to see him doing the thing he'd ticked me off about so many, many times.\n\nWe chatted about nothing much, just small talk, about the weather in England, how work was progressing, plans for the summer, space fillers, something to stop the silences become brooding; dad was well aware that something was making me edgy; he'd given me several shrewd, questioning glances during dinner, but had said nothing, other than to glance warningly at mum, reminding me not to blurt out whatever was troubling me in front of her. Once inside, while mum, Lena and Lizzie bustled around, dad motioned for me to follow him out onto the rear patio, and asked me to take a seat on one of the sun loungers. He joined me on the other, and we chatted some more, more small talk, until at last he sighed and leaned back in his chair, staring up into the star-speckled sky.\n\n\"OK Son, spit it out; what's going on? You, Lena, Lizzie, you're all on tenterhooks, you've been distracted all evening, Lena sounds like a bad laugh track on an old TV show, what's going on?\"\n\nI looked away, a huge lump in my throat, and dad at least had the grace to not press me until I was ready to speak. Finally he cleared his throat, something he always did before he spoke.\n\n\"Alright, Son, get it off your chest; I knew something was wrong from the moment I first saw you; is it something with you and Lena?\"\n\nI turned to stare at him.\n\n\"God, no! I love her more than ever, she's everything to me! I promise you, there's nothing wrong between Lena and me!\"\n\nDad pursed his lips.\n\n\"Then what is it, son?\" he murmured, and waited while I cast about for a way to explain what I was feeling.\n\n\"Dad, I know this is going to sound weird, morbid, even, but I keep getting the feeling that something bad's going to happen; Lena can feel it too, that's why we came out here post-haste; even Lizzie feels it, and we can't shake it; I've got a bad feeling, dad, and I wanted to be near you; I can't explain it any other way!\"\n\nDad smiled slightly and leaned back in his chair again, once more looking up at the stars. When he eventually spoke, his voice was even, measured, the voice of a man at peace with himself.\n\n\"Son, you're a doctor, you know what's happening to me, you know what's going to happen to me; if it happens sooner rather than later, it doesn't matter, it was always on the cards, and there's nothing anyone could have done. And that's okay, really. My only worry in all of this was what was going to happen with you and Lena, whether you'd both ever find that one person, the right one, like I did with your mother. Well you did, and I'm happy for you both, pleased and happy; you obviously love each other deeply, you always have, it just took a while to work itself out, and for me to accept that you would be together one day. You have a lovely baby son, and you'll have more, and if I'm not here to share in that, well, so what; you two are, and there's some of me in both of you, so I will be there in a way.\" ",
        "He paused for a moment, gathering his thoughts as we listened to the sound of crickets chirring in the hot, still air.\n\n\"I hope we brought you up well, son, and I know you'll repay us by doing the same for your own children. I'm proud of you for being who you are, Darryl, not what you are; and even if you weren't my son already, I'd welcome you into this family to be my son, and Lena's husband. Take care of her, Darryl; I know I've said this before, but I want to say it again; she's waited her whole life for you, don't let her down. Pretty soon you're going to be the man of the family; I know it's an old-fashioned idea, but it's true nevertheless, and I need you to be strong for your mum, for Lena, and for Elisabeth and the children; they're all going to need you in some way, even if it's just to be there for them. With your mother, though, don't leave her here alone when I'm gone; she says she wants to stay here after...you know, but she'll be here alone, and I won't do that to her; take her home, son, she's going to need you, all of you, but most especially she's going to need Lena and little David.\"\n\nI listened to this with tears running down my cheeks. I finally got that dad was saying goodbye, and it hurt more than I thought anything could ever hurt. Dad saw, and reached over to rub my cheek.\n\n\"It's okay, son, I'm ready to go soon; I've had more time than I would have had, and I've done the things I wanted to; I've held my grandchildren, found my little girl again, and seen my baby girl happy with the man she's always wanted, I can go now, I'm ready. You can let me go, I'll be fine, I promise, and so will you!\"\n\nHe looked up, and I followed the direction of his gaze, to see Lena standing in the patio door, her hand pressed against her lips and her eyes wide with shock and loss.\n\n\"Lena...\" he started, and suddenly she was on the lounger next to him, her arms around his neck as she cried into his shoulder. Dad rocked and soothed her like he used to when she was three, murmuring to her as he rocked her against him. As he rocked her, her sobs gradually diminished, until finally she was able to sit up and look at him again, her eyes puffy and red-rimmed, but clear of tears. He grinned at her.\n\n\"That's better; big girls don't cry, baby-girl!\" \n\n\"Daddy, how are we going...\" she began, but dad silenced her with a finger on her lips.\n\n\"Shush, baby-girl, and listen. I was telling Darryl it's time for me to go; not this instant, but soon; I have everything I needed from both of you now, so I can go knowing I didn't leave any loose ends for you to tie up. When I'm gone, I want you to take your mother home, okay? Don't leave her here alone, she's going to need you, and I know you both need her. I want you both to know I love you, and I always will love you, and I'm proud of you both, and happy that you're both so happy together. You both found that special person, and I know you'll always be happy together, so I'm happy. Be well, children!\" \n\nHe stood up and gave Lena his hand as she stood up, and hugged her again.\n\n\"I love you daddy!\" she murmured.\n\n\"And I love you too, baby-girl!\" he said, then held out his arm for me, hugging me as he hugged Lena. With that, there was no more to be said, so we walked inside, where we met Lizzie, who'd obviously been waiting for us to finish saying good bye. Dad also hugged her wordlessly, holding her head close to him as she cried soundlessly, saying her own goodbye. After a while, dad began whispering in her ear, Lizzie nodding occasionally, then dad smiled and smoothed her hair, and Lizzie smiled back through her tears before hugging him once more.\n\nWe walked dad to his room, where mum waited. She somehow knew what had just transpired, and kissed all three of us silently, a quick peck and a quick brush on the cheek with her hand, then we left to go back to our rooms and our beds. \n\nOnce in bed, I tossed and turned for what seemed like hours, the conversation with dad turning over and over in my mind, and when sleep did come, it was fitful and restless. Lena fared no better, the baby waking on cue and needing to be fed, so what with one thing or another, we finally fell asleep at close to 4 a.m. \n\nI'd been asleep for what felt like only a few minutes when a soft knocking at the door jarred me awake. Lena woke with a start, her eyes wide and frightened. Trying to convey that it was nothing to be alarmed about, I slid out of bed and opened the door, to see mum standing there.\n\n\"Dar, could you come with me, please?\" she asked, her voice calm, but her eyes shining with unshed tears. \"Lena...?\"\n\nMy heart sank as I realised why she wanted us. I picked up my stethoscope from my flight bag and followed her, while Lena scooped up David and tagged in behind me.\n\nWhen we got to their room I immediately went to dad's bedside. He appeared to be sound asleep, his face peaceful, relaxed and untroubled, almost young-looking, no sign of any trauma, but one glance told me all I needed to know. I followed procedure anyway, checking for his pulse at wrist, carotid, and breast while tears blurred my eyesight. No breath sounds, no pulse, no heartbeat, and the signs of lividity already beginning to appear. I looked at Lena and she began keening, mum immediately holding her and the baby as they both cried together. He was still warm; his poor, damaged heart must have finally given out just a little while ago. He'd gone in his sleep, so at least I could be grateful for small mercies; there had been no long, drawn-out battle with his illness, no suffering stretched into an eternity of choking and gasping for breath. Some comfort, but not much, not when I wanted my dad so much; I didn't want him gone peacefully, I wanted him back, now. But he was gone, and we were left to do the last things he had asked of us. I leaned over and placed his hands on his chest, straightened his bedclothes, and kissed him one last time. I looked up and Lizzie was in the doorway.\n\n\"Is he..?\" she whispered, and I nodded. Two big tears ran down her cheeks, then mum was there to include her in her hug, the three of them surrounding the baby as they mourned our loss. Lena broke away from mum and Lizzie to place David in my arms as she leaned down to hug dad and kiss him one last time, then sat next to me on the bed, her hand finding its way into mine. \n\nI was feeling strange; I had officiated at a few deaths in my career so far, an inevitable consequence of being a doctor, and I had so far managed to maintain a degree of clinical detachment, and now that professionalism was taking over, directing me in what to do next; with a shock I realised dad had been right; I was the man of the family now, not a boy any more, and there were calls to make, wheels to set in motion, arrangements to be made, and it was my responsibility to make sure the right things happened, the way dad would have wanted them done. \n\nI scanned through the notes file and found the number of the doctor who was dad's specialist at the hospital, and put in a call to him. After a few rings, he answered, more asleep than awake, and I told him dad was gone. He promised me he was on his way, and hung up. Now I didn't know what to do next, I had no plan until the doctor arrived, and when mum sat down next to me and brushed my hair off my face, that was when I could finally stop being professional, and start mourning my dad.\n\nMum held me while I cried for him, for all the things I'd wanted to tell him and never had the chance, for all the things his grandchildren would say, and do, and be, things he would never be a part of now, and for my own loss. Mum held me close while I cried myself out, Lena joining me, her hand soft and gentle in mine as she shared my grief and loss.\n\nThe wheels gathered momentum as the machinery of death swung into action; death certificate, Chapel of Rest, funeral service and burial. The RAF base at Akrotiri sent six Royal Air Force servicemen in full dress to act as pallbearers, a last gift from his friends and a mark of respect to an ex-RAF serviceman, and a wreath from the Cyprus branch of the Royal British Legion. We laid dad to rest in Dhekelia Military Cemetery in Larnaca, in the Eastern Sovereign Base Area of the island. \n\nI was numb through the whole thing, mouthing responses through the service, and mechanically throwing that symbolic handful of dirt onto the coffin; none of us was ready to say goodbye to him, and even though his illness had numbered his days, none of us had really believed it would ever come to this; Dad was...dad, solid as a rock, father, husband, sometimes judgemental, sometimes stern, sometimes angry, always dependable, usually placid and fair-minded, and always, always there when we needed him; a normal man, the bedrock of our family, and the one certainty in my life as I grew up, and now he was gone. \n\nThat gaping hole in my life I had anticipated when he first told us he was dying was now there for real, and it felt like nothing could ever fill it again; then my baby son held my finger as I held him, his tiny hand gripping me tight, and I realised that the hole dad's passing had left in our lives would gradually fill and heal over as family and life and loved ones rushed in to seal the breach and make us whole again. I smiled as that realisation finally hit home, and Lena, always in tune with me, smiled as well through her tears as she shared in my epiphany.\n\nAt the house afterwards, after the last of the mourners and well-wishers had left, we sat and looked around, subtle reminders of dad everywhere, but it was more wistful than grieving; dad was gone, but we were still here, and we were still a family; we had each other, we had mum, and there was still the promise and life of the children to look forward to yet. Dad had left behind a complete family, and that was something he could be proud of. \n\nEventually Lena left to feed the baby, and mum accompanied her to help, and hold the baby afterwards. Allie came and sat next to me and pulled my arm up and over her shoulders so she could snuggle up against me. Marcus was looking lost, pale and exhausted, so Lizzie took him to put him in bed, leaving just Allie and me to sit in silence. Eventually Allie broke the silence.\n\n\"Darryl, who are you? I mean really? Mum says you're Aunt Emma's nephew, Lena says you're her boyfriend, so does Nana, but today, it was like you were more than that; like you were something else, someone everyone loves but no-one wants to talk about. Nana's always touching your face or brushing your hair back when she thinks no-one's looking, and she acts like she's your mum. Grandad was Lena and mum's dad, but it was like he was your dad as well, not just your girlfriend's dad, so tell me; really, who are you? 'Cos I'm really confused...\"\n\nI was momentarily wrong-footed; Allies sharp eyes had seen things, and now her sharp little brain was busily making connections.\n\nA movement caught my eye, and I looked up to see Lizzie in the doorway, her eyes wide and wondering. As she looked into my eyes, she nodded slightly, giving me permission to tell my story, then turned and left just as silently. I understood her reasoning immediately; if Allie was old enough to ask, she was old enough to know the truth. \n\n\"Allie,\" I began, \"What I'm telling you now is for you only; if you can't solemnly swear to keep this to yourself forever, then I'm not saying another word, do you understand me?\"\n\nShe looked at me with big eyes, obviously impressed with what I was asking of her, then nodded slowly.\n\n\"I promise, Darryl!\" she whispered.\n\n\"Thank you Allie!\" I said, and smiled as she grinned back.\n\n\"A long time ago, a boy fell in love with a girl; he was six years old, she was only five, but he knew even then that he loved her. They spent all their time together, grew up together, and loved each other very much. When he was a young man, he decided that he'd become a soldier, so he joined the army. One day he and the girl found out they were having a baby, and they were really happy, but then a war came along; he was a soldier, so he had to go, but he promised to come back soon. He never did; he was killed in a place called East Falkland. The girl had the baby, but she couldn't bring him up alone; she was too young, and it hurt her too much to think she'd never have her young man to help her with their son; so she gave the baby to her dad to bring up, and she left.\"\n\nAllie was looking at me in confusion, trying to understand where I was going with this.\n\n\"The name of the boy was Robert Darryl Fraser; he was your Aunt Emma' older brother, and the girl was Elisabeth Evana Morgan. The baby was given his father's middle name, and he was brought up by Elisabeth's father.\"\n\nAllie was looking at me in silence, her lips moving, wheels turning and clicking inside her head, until suddenly her eyes widened.\n\n\"You mean..?\" and I smiled at her.\n\n\"Robert and Elisabeth's son was named Darryl. That was me. Your mum was only a teenager when she had me, she was too young, and too frightened, to bring me up, so she gave me to her dad, your grandad, to bring up. He's always just been 'dad' to me, and your Nana is my mum as far as I'm concerned.\"\n\nAllie was sitting up and staring at me now.\n\n\"Let me get this straight; my mum is...your mum too? Wow!\"\n\nShe leaned back again and chewed her lip, until another thought suddenly made her sit bolt upright.\n\n\"Wait a second there, just hold on a second! Lena's my mum's sister, so she's my aunt; you're my...big brother, so...Lena's your aunt too! Wow again! This is going to put the skids under the shit-cart!\"\n\nI looked at her in bemusement to hear something that dad used to say come out of her mouth, and started to rebuke her when she grinned winsomely at me.\n\n\"Sorry Darryl, mum says I shouldn't talk like that, it just slipped out! What does mum have to say about this, 'cos now I don't know if David's my cousin or my nephew!\"\n\nI put my arm around her, my littlest sister, and hugged her to me.\n\n\"Remember what you promised, Allie; David is always only ever going to be your cousin, okay? What I told you is a secret, and no-one, not even Marcus, can ever know; it's about family, our family, you, me, Marcus, Lena, everyone. Your mum knows she can't be my mum, not really, so to me and the rest of the world she's always going to be my girl's big sister, and you'll be my girlfriend's nosy, noisy, annoying, perfect little niece; I'll always be your big brother though, and I'll always be there for my little sister and brother, but only you'll know why; it'll be our secret, okay?\" \n\nAllie looked up at me quizzically.\n\n\"Do you love her? Lena, I mean.\"\n\nI smiled back down at her.\n\n\"With all my heart; I love Lena, and she loves me. Why?\"\n\nAllie grinned impudently.\n\n\"Then none of that really matters, does it? Lena has you, I have you, Nana has you and Lena, and mum has all of us, case closed!\"\n\nI was astonished at the way she cut to the heart of it, at her clarity of vision; she was completely right, of course, and something told me I been right to tell her; she'd never blab, she understood that this was about our family, and no-one else needed to know. \n\nShe suddenly giggled, and grinned up at me when I looked enquiringly at her.\n\n\"Mum must be seriously bugged she has a grandson! Best not to remind her, though, she'd probably have a complete spaz-attack if you mention she's a granny!\"\n\n*\n\nWhen I made my way to the bedroom, David was already down, and Lena was waiting for me, her eyes glowing in the dim light.\n\n\"I heard what you said to Allie; thank you, baby, she's a good girl, and now she knows she has a big brother to rely on as well; I'm proud of you, Dar, you handled it like daddy would have, well done!\"\n\nI climbed into bed and reached over to hug Lena, to discover she was naked under the covers. My cock immediately stirred with interest; it was still far too soon to start having sex, but there were other things, and from the look in her eye she'd worked out exactly what they were! She slid over to me and held me close, kissing my chest and neck. I stiffened slightly, and Lena stopped what she was doing and reached up to stroke my face\n\n\"I know we only buried daddy today, but I don't think it would be disrespectful if we loved each other tonight; life goes on, Dar, and daddy loved us at least as much as we loved him; I think he'd be okay with us getting back into our lives now!\"\n\nShe made sense, and it did feel right; we loved each other, and now, here in our father's house, we needed to reaffirm that love to each other. Sensing the tenor of my thoughts, Lena resumed kissing and nibbling my chest as she worked her way down my abdomen, until her lips once more enfolded my straining cock head in the feeling of moist heat. I slipped onto my back as Lena sucked me as she simultaneously squeezed my shaft, both sensations making my thighs and stomach muscles jump and quiver with the strain of holding back from emptying myself into her mouth in a single hot torrent of spunk. \n\nLena sucked, and licked, and squeezed, and I held back, by the skin of my teeth, savouring the experience, but when she massaged my scrotum with her free hand, lightly scratching the underside with one long, slow scraping fingernail, I came like a train, spurting jet after jet of semen into her hot and willing mouth as I smothered my shout of ecstatic fulfilment with a pillow so as not to wake the whole house!\n\nAs I quivered and twitched in stress reaction, Lena slid up next to my and bit me lightly on the chin.\n\n\"Don't get too comfortable, stud, you haven't finished yet!\" she whispered. I grinned and pulled her to me, my hands going to her lovely peach bottom, a delectable globe in each hand as I pulled her on top of me.\n\n\"What do you want to do, princess?\" I whispered, and for answer she slid off me to lie face down on the bed, holding her buttocks spread open for me. \n\n\"Taste me, Dar, I want you to eat me, I need it so bad!\" she whispered.\n\nI moved down between her spread thighs and squeezed her plush, satiny bum-cheeks, lifting her by her hips as I slid down to push my face between those beautiful globes and lick her moist, tangy pussy hidden in the depths there. Lena lifted her hips with a sigh and slid a pillow under her pelvis to keep her bum in the air, making it easier to reach my target with my tongue. As I licked and gently ran the flat of my tongue over her vulva, Lena sighed and whispered each time I did something she especially liked, her thighs tensing and her feet drumming on the bed when I poked and probed her clitoris with the tip of my tongue.\n\n\"Oh God, yess, do that, do that again!\" she hissed, and I obliged, flicking her hard little pearl with my tongue, drawing an \"Ooohhh!\" each time I did it. Finally, I slid my hand under her so I could rub her clitoris with the pad of my thumb while I licked and pushed my tongue into her pussy, licking and separating the labia as I gently slotted my tongue into her. Lena was gasping and hissing as I stimulated her, and I could feel her climax drawing close as she trembled and quivered with each darting attack of my tongue-tip inside her. Her little anus was winking and contracting as her vulva reacted to what I was doing, calling to me and begging for some attention, and when I rubbed her clitoris while simultaneously shoving my tongue into her pucker as hard as I could, she shrieked into her pillow as she came in a thundering orgasm, her entire body shuddering and quivering as the waves of pleasure raged and surged inside her. Her anus contracted sharply, forcing my tongue out, so I pushed it into her vulva as hard as I could, drawing another groan from her as another surge of orgasmic pleasure crashed inside her.\n\n\"No Dar, no more, no more, please Dar, stop, I can't...no more...!\" she gabbled as her orgasm billowed and surged inside her, until finally she slumped down bonelessly tears leaking from the corners of her tight-shut eyes.",
        "I slid back up next to her and held her close while the aftershock tails of orgasm whipped and curled through her, her body quivering and twitching as the adrenaline overload gradually dissipated. Finally she drew a ragged breath as she turned to grin sleepily at me.\n\n\"Bloody hell, Dar, if I could bottle however you do what you do to me I'd make a bloody fortune! Thank you baby, I needed that, now I can rest tonight. Love you, Dar!\"\n\nI squeezed her close to me as she reached out to adjust the baby's blanket in his cot next to the bed, and fell asleep almost immediately. I held her while I breathed the scent of her hair, remembering our days together when we were younger, and the workings of fate that had put her here, with me, right now. Thinking of Lena, I fell asleep, and dreamed of dad, and mum, and Lena when she was small, when we'd still been close, before my thoughtless immaturity had almost destroyed that closeness forever.\n\n*\n\nBefore we left for home, I had one more conversation I needed to have with mum; actually it was one we all needed to have with her. Lena eventually cornered her and led her to the sitting room where the rest of the family was gathered; I love that word; family; so much weight of meaning in one small word.\n\nAs duly elected spokesperson I was shoved forward to speak for the group.\n\n\"Mum, now that dad's gone, we, none of us, want you to stay here alone; come home, mum, you have a home and a family, we need you, the baby will need you, I know Allie, Marcus and Lizzie need you, and I will always need my mum. Please come home, I know I speak for the whole family when I say we can't bear the thought of leaving you here alone.\"\n\nMum looked at us, at all the faces waiting for her answer.\n\n\"Darryl, I have a job here, I can't just leave...what about your father, I can't just leave him here alone...!\"\n\nLena spoke up, cutting across her objections.\n\n\"Mum, I know daddy's here, and he's among his old friends, and I know you don't want to leave him, so we'll leave him to rest until the time is right, and when you're ready, we'll bring him home so he can be near us again.\"\n\n\"Sweethearts, I appreciate what you're saying, but your dad's here, my job and my home...!\"\n\nI spoke again, and I had a special surprise for her.\n\n\"Mum, if you're worried about your job, your old one is waiting for you back at in Bristol; I spoke with the Senior Registrar, he's not happy with the Agency staff who've been running the Renal Unit, and if you're willing, he's happy to put you back on staff, with your time away listed as Illness Leave of Absence, so you'll never actually have left. How about it, mum, come home, please, you have a home with Lena and me, with all of us, not here by yourself!\" \n\nMum looked down for the longest time, while we looked on and waited for her answer. At long last she raised her head and smiled, even though her cheeks were tear-stained.\n\n\"All right, children, I will; just promise me that we'll bring your father home as soon as possible.\"\n\nFINIS.\n\n________________________________\n\nFootnote:\n\nWe brought dad home six months later, and he was finally laid to rest in Arnos Vale, so now both my father's slept near each other. We had a proper funeral, so Doreen and poor Aunt Min were able to say their final farewells to their baby brother. Lena and I had decided to get married, but we couldn't do that in the UK; luckily a solution presented itself when friends got married on holiday in Las Vegas, so we made a lightning visit to Reno, where we were legally married in the courthouse on Court Street. \n\nMum took care of David while we made our whistle-stop visit to America, but I will admit to not being completely happy and at ease until I had my son in my arms again. Lena was even worse; we'd been gone four days, but to Lena it had felt like half a lifetime away from David, and she was wracked with guilt for leaving her baby behind; she almost snatched him from mum when she picked us up at the airport and spent the journey home crooning and crying over him; David just watched her in what I felt sure was genuine puzzlement; while we were away I'm sure mum would have spoiled him rotten, something she won't admit to under torture. \n\nNow that we were legally married, we could have the white wedding Lena had always dreamed of and mum had almost given up on. We were married in church in Clifton, our home, with the white dress for Lena, the cake and Reception, Allie was her bridesmaid, Lizzie was Matron of Honour, and Marcus was our page-boy, all the trappings of the classic White Wedding. All my family was here, Aunts Doreen and Min, Emma and her family, and I even received a congratulatory telemessage and a wedding gift from my aunt in Australia, Emma's youngest sister. The only people missing were the other part of my family, my aunt Lois and her children Julie and Mark; I'd not been able to find out anything more about them apart from that snippet about Julie being injured when she was thirteen, but I promised myself; one day I would make a proper, concerted effort to put my family back together; Julie and Mark must have medical records somewhere, one of the National Health Trusts in London must be responsible for their care, I promised myself I'd dig a little deeper once we had everything back to normal around here; I cared for Emma, and she was hurting for those two lost kids, maybe one day I would be able to do something about that. "
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother sister incest",
        "brother sister sex",
        "incest novella",
        "drama",
        "oral",
        "love",
        "pregnancy"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/big-girls-dont-cry-ch-04"
}