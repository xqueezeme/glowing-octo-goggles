{
    "title": "My Little Ventrue Pt. 08 Ch. 03",
    "pages": [
        "~~Jack~~\n\nIt was like staring through a window into another universe. Not like, was.\n\n\"Um... what's on the other side?\" he said.\n\n\"The Realm of the Dead.\"\n\nJack froze. Clara froze. The two slowly turned to look at each other, before they both stared at the giant creature squashed inside the hallway.\n\n\"Uh, what?\" Clara said.\n\nS\u00e1ndor looked at them, and waited, quiet and stoic despite the massive bomb he'd just dropped on them.\n\n\"S\u00e1ndor,\" Jack said, \"you're going to have to fill us in, because you just sorta shattered a lot of preconceptions a lot of us probably have about death. Realm of the Dead?\"\n\nAfter a long, quiet moment in the spooky basement of an old, haunted hospital, S\u00e1ndor gestured to the huge tear in the air in front of them again.\n\n\"I don't know what to tell you. I don't know anything about it.\"\n\n\"Then how do you know it's the Realm of the Dead?\"\n\n\"I have come across it before, as I'm sure the other Begotten have. But no living creature would want to stay within. It is a cold, heavy place. Ghosts wander within.\"\n\nClara shook her head, obviously not happy about the gargoyle's impulsiveness. \"You went in?\"\n\n\"I have before, and only for a moment now.\"\n\n\"Why?\"\n\n\"Why not?\"\n\n\"Because it's dangerous as fuck?\" Jack frowned at the gargoyle, but stopped himself from saying something stupid. If the man didn't feel his life was worth being careful with, the reason why was obvious, and drawing attention to it was a bad idea. It sucked that the poor guy was still depressed, but understandable.\n\nJack still felt depressed sometimes, when memories of Julias or Mary came at him. Hell, sometimes he felt depressed about the hunters he'd killed, or worse, Mrs. Pavala, his first kill. But he had Antoinette to help him get past that. S\u00e1ndor had no one.\n\n\"Ok ok,\" Jack said, \"let's just... let's just approach this calmly. S\u00e1ndor, you've been through this tear?\"\n\n\"Yes. Again, only for a moment.\"\n\n\"And you saw... ghosts?\"\n\n\"Yes.\"\n\nJack stepped closer to the tear, and stared into it. \"... ghost lights.\"\n\n\"What?\" Clara said. She stepped closer, and from the gasp, it was obvious she knew exactly what Jack meant.\n\nThrough the shadow, through the black and strange fog that filled the tear, there were lights. Green lights. They were subtle things, blurry, but they were there, and they were moving, far in the distance. Each gave off enough light that Jack could see some details in the environment, and he squinted as he tried to make out what he was looking at through the mist.\n\nRock? A cave? Whatever it was the lights were moving along, it looked like stone. Dark, oddly bending, curving stone. The harder he stared, the more he could see the drifting lights actually had shapes, shapes he recognized, human shapes. He shivered as he stared into another world, a dark, cold place, and he looked to Clara beside him.\n\n\"Have you ever seen Galaxy Quest?\" he said, eyes still on the tear.\n\n\"Yeah. I--oh, the joke about whether there's air.\" Clara was just as shocked as Jack, and he could see her quivering as much as him.\n\n\"Yeah.\" He looked back through the large tear, and tried to accept the reality of what he was looking at. No doubt about it, those were ghosts. They had that same, semi-transparent look Mary did, and they were missing their feet; not really missing, just, lost to the fog their own bodies seemed to generate. They hovered as they moved, with the same lack of nuanced movement he saw in Mary, corpses drifting around with no care for breathing, or flexing muscles, or anything.\n\nThrough the fog, they looked like drifting lights, like seeing distant street light through rain.\n\n\"We're not going in there,\" Jack said finally.\n\nClara sighed. \"Why not? The air's breathable, if S\u00e1ndor's been in there before.\" But from the town of her voice, she knew why not.\n\n\"Even if the air is breathable, we're not going because it's dangerous.\" Air didn't mean anything to him anyway. \"Because we don't know what's in there.\"\n\n\"S\u00e1ndor was fine.\"\n\nThe gargoyle finally interjected. \"I did not stay for long, whenever I entered this realm. Just enough to understand what I was looking at.\"\n\nJack took a deep, useless breath. \"Ok, it's another realm, that much seems obvious. So we got a dream realm, a spirit realm, the physical realm, and now a realm of... of ghosts.\" It was tantalizing beyond belief, the desire to go through the tear and find out more. It wasn't like S\u00e1ndor couldn't be wrong. He found a place filled with ghosts, and had made an assumption. Maybe it was just a place in the physical realm, where ghosts had a habit of collecting? Maybe some kind of deep cave, hidden in the Earth.\n\nFrom the what he was looking at, and from how it felt, the cold death seeping out of the tear and into his undead body, he knew that wasn't true. This was another place, a whole other world, and they were peeking into it. It felt wrong, as if the realm wasn't meant for living, or even undead eyes.\n\n\"Is this where my sister will go, when she finally lets go of Mom, and the house?\"\n\n\"Is this where my brother went?\" Clara said. \"Hell, is this where everyone goes when they die?\"\n\nThey both looked at the gargoyle, but he shrugged and shook his head.\n\n\"I don't know. Why would I know?\"\n\n\"Because you're centuries old and you're a dream monster?\" Clara said.\n\nThe titan sighed and shook his head again. \"I have kept to myself... for obvious reasons. I know little of ghosts, or spirits.\" He grumbled and flicked his tail. \"You're the werewolf. You deal with spirits. Why don't know you?\"\n\n\"Uh, because I deal with spirits, not ghosts?\"\n\n\"They are similar.\"\n\n\"That's like saying a tiger is similar to a tree, because they're both carbon-based.\"\n\n\"And yet, most people know how a tiger and tree function, largely because of their similarities.\"\n\n\"Similarities?\" She snorted, like a wolf would. \"The fuck?\"\n\n\"Relative to things like dreams, and spirits. A tiger and a tree can be touched. A tiger eats matter, so does a tree. They're both biological.\"\n\nJack smiled. This was progress. S\u00e1ndor barely ever said more than three words at a time when Jack met him, and now he was borderline bickering with Clara. Well, she was awesome like that, no ridiculous games like Jennifer, or aggressiveness like Jessy.\n\n\"Either way,\" he said, \"I'm not stepping through this. I know S\u00e1ndor did, but he shouldn't have. We need to figure out more. Or, you know, ideally stop these tears from happening at all. There's nothing to be gained from us going in there, and fucking with things. At best, we'd be risking our lives on a bad gamble that we might learn something.\"\n\n\"Yeah, that makes sense and all,\" she said, \"except I don't have a single other lead, and I don't think you do either, as far as these tears go. This seems to be the only one that's cut a hole so clearly through... uh... the 'fabric of reality'.\" She air quoted, and Jack struggled to suppress a laugh. \"If more of these tears are going to be made, and if they cut through to this place, we should probably know how. Bad gamble or not, we need to make it if we don't want this lead to go cold.\"\n\nSighing, Jack paced back and forth. Clara had a point, except the first tear Jack had ever seen, had been between the physical world and the spirit one, and it'd failed to cut through the Gauntlet. Fiona had had to pry it open.\n\nSo, without a better idea, he shared the story with Clara and S\u00e1ndor about how Fiona showed him and Damien a tear. He explained how Fiona took them to an old factory, found what seemed like nothing on the physical side, opened the pathway, took them through the Gauntlet, and then when they plopped out on the other side, saw a massive amount of damage.\n\n\"It was... a lot sloppier than this,\" he said, and he gestured to the tear in front of them.\n\n\"Well, that one had hit the Gauntlet,\" she said. \"Punching a hole through that ain't easy. And... and...\" She stepped closer to the tear, and stuck her head in.\n\n\"For fuck's sake!\" Jack snapped his hand out for her, but she backed up before he could reach her.\n\n\"It's here.\"\n\nHe blinked at her before staring at the tear. \"What's here?\"\n\n\"The Gauntlet. The barrier between the physical and the spiritual. It's here. I can smell it.\" With a heavy sigh, she reached out a hand for the tear, and through it. Jack didn't stop her this time, eyes locked onto her hand. \"It's so thin.\"\n\n\"Thin?\"\n\n\"Thin.\" She stuck her head through the tear again, looked around, and took a deep sniff. \"Normally, your eyes can see a kind of gold or yellow air, right? And it's here, but it's so thin that I can barely see it, like a... morning mist that's pretty much evaporated. I can smell it, though.\"\n\nHe couldn't smell it. Probably a werewolf thing.\n\n\"Did the tear make it thin?\" he said.\n\n\"Maybe. I... I need to talk to Avery about this. She probably knows something about whatever we're looking at, and--\"\n\n\"You think Avery knows about this... underworld?\"\n\n\"She knows a lot of stuff she doesn't like to share, cause she thinks the knowledge is dangerous.\" Wincing, Clara looked down and put her hands in her pockets. \"You may have noticed, talking with Jacob and all.\"\n\nJack winced as well. Yeah, Avery was just one of those types of people.\n\n\"So, if the Gauntlet is here, then that means this place is, uh, part of the spirit world?\" he said.\n\nShe shrugged. \"Maybe. I mean, you don't have to go through the Gauntlet to get to the dream world, right?\" S\u00e1ndor shook his head. \"So, I mean, I guess? The Gauntlet keeps the Hisil and the Gurihal from merging, or overlapping or whatever. When it's thin, spirits have an easy time jumping over, and even average Joe humans could find themselves walking through a hole and ending up in the spirit world. This is... this is really fucking dangerous.\"\n\n\"What can do this?\" S\u00e1ndor asked.\n\n\"Hmm. Only thing I can think of is the Hosts, beshilu. You've met azlu, Jack, but beshilu are rats, and they gnaw at the Gauntlet. And... and... and a spirit told us that the azlu didn't come to Dolareido naturally.\" She gestured to the tear. \"Which makes me think something strange caused this, and the azlu showed up. They're driven by instinct to weave web and strengthen the Gauntlet.\"\n\nJack shivered. The azlu, monster spiders, straight out of a horror movie. Ugh.\n\n\"Azlu?\"\n\nShe nodded to S\u00e1ndor. \"Ancient creatures from my side of the tracks. Spirit, but not quite spirit. Look like spiders. They like to break into the physical world, turn a human into a host, and grow into a--\"\n\nA giant claw snapped out from the tear, and slammed down into the air in front of Clara. She threw herself back, landing in a prowling crouch. Jack threw himself back too, almost screaming in surprise, and ended rolling along the hospital floor. S\u00e1ndor jumped back as well, and the effect was far more disastrous, as his giant body smashed into the walls, tore into the drywall, and his claws left slashes through the tile floor. Worse, Jack managed to lift his head up in time to see the gargoyle's tail slam into Clara, and send her rolling onto the floor next to Jack.\n\nNo way. No fucking way. Jack forced himself up onto his knees, and stared at the sight of the huge creature as it started to crawl its way through the tear. Before it got half its huge body through the opening, it slammed one of its bone scythe arms down at Clara again. It was massive, and way too fast for something that size. Clara was still recovering from getting a giant tail smashed into her, and couldn't out of the way in time before the huge scythe claw cut into her leg above the knee. Meat on a hook. She screamed.\n\n\"Clara!\" Jack jumped up to his feet, but he was too slow. The creature pulled back into the tear, and dragged Clara with it, leaving a messy streak of blood as it jerked Clara left and right.\n\nS\u00e1ndor, not quite knocked over, recovered far faster than Jack did, and the titan threw himself at the azlu monster like a tiger pouncing prey. He roared, and the hospital shook with the bellowing rumble, as the giant nightmare monster fell upon the equally massive spirit monster. Onto it, and then through the tear, dragging Clara with them.\n\n\"Jack!\" she screamed, before she disappeared through the hole.\n\n\"Fuck fuck fuck fuck fuck.\" Jack ran over to the tear, and peered through it. The mist flowed up and over his fingers, and he yanked his hand back as the unnatural cold seeped into his bones. After taking a second, he stepped back toward the tear, but he couldn't see past the fog. Having three people suddenly fall through it must have stirred it.\n\nHe couldn't smell anything through the tear, or taste. But he could hear quiet moans, past the battle screams of Clara and S\u00e1ndor, and he could feel the strange cold.\n\n\"Jack! Do something!\" S\u00e1ndor's voice. It cut through the strange, deadly silence, but it was quiet and distant.\n\nOk, ok, do something! Like some kind of bad joke, an azlu monster attacked just when they were talking about it. Well, they were hanging out by a tear through the Gauntlet, and considering what Clara said, it made sense that one of those weird spider monsters would be around. Except, it didn't look like the Shadow Realm on the other side of the tear. Looked like Hades or something. The fuck was an azlu doing in there?\n\nGo in? S\u00e1ndor could--no, S\u00e1ndor couldn't. S\u00e1ndor had just leapt through the tear, and into a different realm. Far as Jack knew, he was only merged with his Horror in the Dream Realm; it was a dream monster, after all. Outside of it, he'd probably go back to his human form. Still strong as all hell, but not like he was in the dream. And considering Jack's previous experience with the azlu, he doubted Clara and S\u00e1ndor could take it down if the Begotten was in his human form.\n\nHe shook his head hard, and jumped in. He still remembered what happened to Stephanie, and he wouldn't let that happen to Clara. No fucking chance in Hell.\n\nPassing through the tear, he caught a glimpse of the yellow and gold, the streaks of white, and endless mist he knew as the Gauntlet. Apparently, the werewolves saw it differently, or maybe they smelled or sensed more. For him, the Gauntlet was a numbing thing, but his eyes still worked, and he stared, eyes wide, as he quickly moved through the strange, golden realm he couldn't even see from outside the tear. And then a second later, he was in a completely new realm, a new place, a new dimension he knew absolutely nothing about.\n\nExcept that gravity worked.\n\nHe sucked in a hard breath as he fell. The strange mist of the realm surrounded him, dark and gray, and he spun around in the air as he struggled to prepare for a landing. Through the mist, he could see the hints of drifting green, the strange rock pathways the ghosts hovered along, and the walls of the cavern. An enormous cavern. An enormous, colossal, holy fucking shit gigantic cavern.\n\nHe put out his hands and oriented himself until he felt the mist and air hitting him in the face and stomach. No longer spinning, her peered down and tried to see where the ground was. Still falling. Oh god, if he hit the ground at this speed, it was going to crumple him like a car careening off a bridge and landing nose first into the ravine below. He might survive it, being a corpse and all. The other two, he doubted.\n\nThere was howling, a quiet sound that drifted around him. Wherever it was coming from, it was around him, hitting him from all directions, but almost inaudible. The sound changed pitch, slowly going up and down, almost like a choir. Maybe it was a choir? There were lots of myths and legends about ghosts singing. And in the odd quiet of the endless fall, it did sound almost musical, haunting, and sad. It reminded him of Mary; not the Mary he knew, but Mary the ghost, haunting his old home, and carrying with her enough sadness that she hadn't gone where she was supposed to go when she died.\n\nThat's what this place felt like. Sadness, and regret.\n\nThe ground finally came up to meet him, and it was not fun. He was light, and he'd summoned vitae into his limbs to prepare for the impact. But it still hurt, and despite his best efforts, he felt something crunch. Bone. He screamed as something snapped in one of his legs, and the opposite arm.\n\nA quick glance up showed the tear maybe a hundred feet over them, and out maybe five feet away from a colossal wall of rock. Dark, smooth rock, like the rock he'd landed on. A moment later, he could hear the screech of the monster, and the impact of its eight sharp feet hitting the rock as it fled.\n\nHeal, now!\n\nImmediately, the curse got to work, and shot vitae through his limbs and into his bones. It hurt, having his flesh force chunks of bone back into place. He could hear the crunching, grinding sounds of his body mending, and of muscle and skin sewing back together. Viktor would have been proud of how quickly he healed, and seconds later, his Beast told him he was repaired enough to at least get up and get moving.\n\nHe jumped and spun around. Now that he was on the ground and no longer falling through endless mist, vertigo hit him, and he stumbled as the shift in his weight threw him for a loop. He'd have vomited if he was human.\n\n\"Clara!? S\u00e1ndor!?\" Shit, fucking shit fuck. The fog was thick, but not so thick he couldn't see for a hundred feet. At the edges of the fog, he could see movement, more ghost lights drifting along. If they noticed him, they didn't care.\n\n\"Jack.\" S\u00e1ndor jogged up to him through the mist, panting quietly. Not injured. How? \"That spider thing was half human.\"\n\n\"Yeah, azlu do that. They possess a person, eat part of their brain like a parasite, literally turn them into a giant spider monster, and then they start eating people.\"\n\nThe Begotten snorted. \"And--\"\n\nA few falling pebbles forced the two of them to look up. It was hard to see through the mist, but Jack recognized the shapes of huge spiders crawling along the cave wall near the floating tear. Some dangled from web, and others stuck to the wall, sticking their butts out and shooting web at the tear.\n\n\"Us showing up must of scared them off,\" Jack said, \"until their enforcer came and... and took Clara.\" He didn't know shit about azlu, or these Host monsters, except that the werewolves were super surprised to find two fully mutated azlu working together. \"When I killed one, it split into hundreds of spiders like those.\" He pointed up.\n\n\"Disgusting.\"\n\n\"Where's Clara?\"\n\n\"I don't know. When I jumped through and realized I was falling, I tried to fly, but losing my Horror in the air was disorienting.\"\n\nJack raised a brow at the man. \"You can fly without your Horror?\"\n\n\"Yes. We can get back the way we came, but...\" Frowning, S\u00e1ndor looked down at the ground, and some blood that ran along the floor. A streak of it made it clear what happened: it'd dragged Clara off. \"I saw the two of them struggling in the air, falling. The spider had meant to crawl down the wall, but my tackle ruined that. She hit her head at some point. She's probably unconscious, or dead.\"\n\n\"Shit. Shit shit shit shit.\" He knew Uratha could heal from almost anything when transformed into their war form, but he doubted they were nearly as difficult to kill while still human; similar situation to the nightmare monster. Growling, he took off at a near sprint along the blood trail. Stupid, so fucking stupid of him to go with S\u00e1ndor to check out the tear, without at least getting Damien. Of course it turned out to be dangerous. Shit always got dangerous, randomly, for no damn reason.\n\nThe rock floor of the ludicrously massive cavern was smooth, and while it did have rolling hills, they were shallow and short. But the mist was a problem. The smart side of him told him to slow down before he ran off a cliff or into a nest of the spider monsters. The desperate part of him told him he fucked up, and now Clara was going to die, like Stephanie, butchered.",
        "He ran faster. Mekhet and Daeva could use Celerity easily, but that didn't mean he couldn't use it, too. Not as well, but he could. He reached into his core, found his vitae, and told it to do one very specific thing: run faster.\n\nThe sound of his shoes slapping the rock died in the heavy mist, and he looked down to make sure he was actually moving faster. He was. Each stride took him further and further, until it was more like a fast, hard leap with each step. S\u00e1ndor couldn't keep up, until he leaned forward, and his feet started to slam into the rock hard enough to spread vibrations. Jack glanced back enough to see a silhouette of the gargoyle, the enormous Horror, surrounding S\u00e1ndor and going full Tyrannosaurus rex sprint, like a scene from Jurassic Park. Thud thud thud thud.\n\nTwenty seconds later, they found the spider, not a long chase at all. It was big, heavy, and Jack and S\u00e1ndor were light. The giant creature ran along the rock, eight hairy black legs covered in patchwork human skin. Clara dangled from its right, giant claw, limp, arms hanging underneath it, and small drops of blood falling as she bounced. A claw still skewered her leg, and each bounce was tearing the wound open more and more.\n\n\"Let go of her!\" Jack threw himself at the strange spider monster's body, and landed on the beast's back. Like a centaur or drider, the human half jutted out from where the spider's neck would be, connecting at the human's waist. It twisted easily, and stared at Jack with black spider eyes that dotted the now bald human skull. Fucking. Gross.\n\nGrosser was the mandibles, and how they opened spreading the torn cheeks of the human head the spider had basically grown out of. Grosser again, was the white shit it spat at Jack. His mind screamed acid, but it was probably spider silk. Either way, he was glad he jumped to the side.\n\nS\u00e1ndor charged in, and slammed himself into the giant spider monster's ass. To see a man, a normal sized dude, slam into the spider with the weight of what was obviously his Horror, was a strange sight. The spider's giant, hairy, gross ass bent inward at the point of impact, like one of those slow motion videos of a ball hitting a wall.\n\nThe spider went flying. Well, maybe not flying. It weighed thousands of pounds, but the fact it rolled over several times after S\u00e1ndor's impact was damn impressive. A glance back at the gargoyle showed the man had fallen to his hands and knees, and was struggling to get back up. Again, the silhouette of the gargoyle surrounded him, and S\u00e1ndor flapped his four shadow wings hard as he came back up to his feet.\n\nBut, he wasn't the gargoyle, not outside of the Dream. Everything he did to summon the Horror's power was demanding on him, and Jack could see the exertion on his face as he ran at the spider while it was down, and sank his fingers through the exoskeleton along the spider's ass, as if they were the claws of the gargoyle instead.\n\nThe monster got up quickly, and spun around to face S\u00e1ndor, except the man was still attached to it. The spider slashed down behind him, and S\u00e1ndor used the spider's body as a wall, hiding behind and underneath it.\n\n\"Where's Clara!?\" S\u00e1ndor shouted.\n\nJack lifted himself up from the ground and snapped his head around. Clara wasn't on the thing's claw anymore.\n\n\"I don't know! I--\"\n\nA monstrous howl erupted, and relief washed over Jack as the enormous werewolf dove out of the fog, and leapt at the distracted monster. She flew high, going over twenty feet up before she fell down onto the azlu's shoulder. Roaring with a primal need, she sank her claws into the monster, tearing and shredding, and doing more damage to the monster's flesh in seconds, than S\u00e1ndor had yet managed.\n\nJack looked around in a panic. There were no animals for him to summon here, no legion he could unleash on the monster. But just because he'd been stupid enough to check out the tear without his usual back up, didn't mean he was so stupid he didn't bring guns.\n\nHe pulled out his pistol, and started sinking bullets into the spider monster's gut. It shrieked in agony, and spun around, trying to dislodge S\u00e1ndor and Clara at the same time. No luck. They were both thoroughly stuck to the monster's body, and while it could spin super fast with eight gigantic, sharp spider legs stabbing into the strange rock underneath them, it couldn't get them off. Jack had to time his shots, to make sure he didn't hit either of them, as the spider turned into a spin top.\n\nBleeding everywhere but not slowing down, it came to a sudden stop, and kicked at S\u00e1ndor using its hind legs. S\u00e1ndor couldn't get out of the way fast enough, and the spider's back legs were perfectly capable of stabbing underneath its giant ass. The man screamed as one of them pierced his shoulder, and fell away from the spider as he let go.\n\nWithout S\u00e1ndor distracting it, the monster looked to the huge wolf humanoid ripping at its arm and shoulder. Clara had managed to remove a chunk of its right shoulder, causing the arm she once dangled from to hang limp at the spider's front side, but the other arm still worked. It raised its left claw scythe, and--\n\nAnd it met eyes with Jack, as he stepped toward its front. The gun wasn't doing shit, and with no time to summon the juggernaut within with the curse's power, to turn this into a physical brawl, he had to do something and do it quick. He'd assumed he wouldn't be able to use Dominate or Animalism on the monster, since it wasn't a creature of flesh and blood. Except, it was partly human, in a strange, sick way.\n\nWhen it met Jack's eyes, and Jack met its strange, spider eyes, he reached out with Dominate, and the world came to a standstill. For a brief moment, the world froze, while Jack and the creature met minds.\n\nThe human part of the monster was alive, sort of. The brain was gone except for some minor remnants, and the spider had hijacked those remnants. Instead of being able to enter the creature's mind, like Jack easily could with kine or animal, he stared at the spider creature from across a chasm. Walls surrounded them all, a giant dome of warped walls that oozed black and shifting colors. They were inside the mind of the host body, who should have been dead, but wasn't.\n\nAcross the chasm between them in the strange dome, was the azlu, with a dozen of its brethren behind it, no longer in its human mutation shape. It was a spider, and it wasn't a spider. It was something else, something old, something ancient, something covered in the dust and ashes of dead civilizations and dead monstrosities. It stood there on its eight legs, a large spider with large eyes, and it stared at him like he was nothing. Its strange, alien thoughts reached across the chasm like someone hollering with palms cupped around their mouths, except the thoughts were disgusting, vile, strangely loud, and driven by instinct.\n\nTo it, he was nothing more than an undead creature, a corpse that didn't have the nerve to become dust and ashes like the things that came before. It would kill him as it and its other parts had done to many undone creatures. Parts?\n\nJack gulped as he looked past the spider and its kin, and glimpsed on the memories of the ancient creature behind it. Images, warped against the dome's wall, started to form where the bleeding colors had been. An ancient land, with ancient creatures, ancient foliage, and ancient skies. A totally alien landscape, prowled by things his mind could not imagine. Giant wolves, rats, and spiders, but none of them looked right, as if each were some sort of spirit interpretation. Or, godly interpretation.\n\nThe spider in his mind hissed. It needed to protect the Gauntlet, to strengthen it. To understand why would be to ask how a normal spider learned to spin web. Instinct, an instinct so old and from a different realm, it defied flesh and blood. He was a corpse, standing in its path, and it'd kill him, the moment it'd killed the Forsaken Uratha and the Primordial Begotten.\n\nThe spider shut up real quick, as the Beast within and around Jack rose to bury them all in its shadow. The chasm suddenly seemed quite small, and no longer the insurmountable leap it'd been moments before. The spiders on the other side backed away, and fear overwhelmed their hairy bodies and eight legs, as their many eyes stared up at the swirling mass.\n\n\"This... thing,\" the curse whispered in that sleazy, demony voice that sounded eerily like Jack's, \"is just an animal. An animal from before even the Strix, but just an animal.\"\n\n\"And how would you know?\" Jack looked up over his shoulder at the Beast, frowning. \"You have memories from my previous sires, but not--\"\n\nThe giant black cloud of fangs, beaks, fur and feathers, pointed out toward the large spiders on the other side of the black chasm. It used a foggy limb to point, and the Beast showed a mix of claws and rat tails in its black mist.\n\n\"I can smell it, smell the age on it, and I know you can, too. It's beyond old, and despite all that time, it remains nothing more than a useless bug. Look at it, Jack.\" The Beast lowered itself, loomed over him, and set two titanic hands that looked like crow feet on his shoulders. \"I wonder how many thousands and thousands of years this strange thing has existed, and despite all the time, it's still just a bug to be squashed.\"\n\n\"A big bug, back in the real world.\" Jack gestured to the chasm. \"We can't cross this?\"\n\n\"No, dumbass. It's a metaphor for the distance between our worlds. The only reason we can speak to it at all, is the human body the Host has taken over; as you guessed.\"\n\n\"And we're communicating at the speed of thought.\"\n\n\"Of course, or we'd be dead from standing still and stupid in this thing's path, otherwise.\"\n\nAfter shrugging off the damn Beasts' grimy claws, Jack paced left and right in front of the chasm, glaring at the spider.\n\n\"But it is an animal. A strange, ancient animal, and according to the wolves, not a normal flesh and blood animal. Not something I can use Animalism on.\" The fact Jack could attempt to enter its mind at all was only because of the poor kine it'd taken over. \"But, still an animal.\"\n\n\"Yes, it is,\" the Beast said, tone growing more sinister as it laughed, \"one of the most stupid animals I've ever met minds with. A crow has a hundred times the intelligence of this arachnid.\" The giant cloud of black smoke followed after Jack, looking at him with a bunch of different kinds of eyes in the upper half of its body. \"What're you thinking, Jack?\"\n\n\"As if you have to ask.\" It could read his mind, after all, and they were in his mind, and the monster's.\n\n\"Heh. You want to scare it, like waving fire in front of a tiger.\"\n\nJack looked at the absurd monstrosity infecting his soul. \"Can you do it?\"\n\nThe Beast laughed, a dark and twisted sound, inhuman and filled with layers. Crow caws, rat squeaks, coyote howls, owl shrieks, and other things. As it laughed, the noise far more maniacal than Jack would have liked, the big cloud of smoke grew in size. Bigger, and bigger, until the metaphorical chasm would not have been big enough to stop it from crossing simply by stepping over it.\n\nThe spiders clicked their mandibles together. Well, that was a fucking gross sound, especially combined with the spiders tilting their heads to look up at the Beast. Did they understand what was happening? Did they understand this whole conversation was a near-instantaneous moment in its host's head? They must have understood it wasn't a normal situation, given that they hadn't done anything but stand on the other side of the shadowy ravine, and stare at him.\n\nBut, as the curse displayed its power, expanded and engulfed the strange metaphorical cavern they were in, it was clear that the spiders were scared. They backed away, chittering and stabbing their feet against the rocky ground as they retreated. Spiders didn't have facial expressions, and these odd, ancient creatures were no different, but the body language was obvious. Scared turned into terrified, as the curse exploded in a flurry of dark claws and black feathers. Whatever space was left in the strange dome vanished, and hundreds of glowing red eyes covered the ceiling. The Beast's eyes, a host of all the different creatures the Beast identified with, could become, could control. Carrion eaters and predators all.\n\nThe spiders shrieked, a high pitched, shrill sound that grated on Jack's ears like nails on chalkboard. They turned, and fled.\n\nJack's grasp on the host's mind fell away, ripped free by the azlu's panic. It had never encountered anything like the curse. Other vampires sure, based on how it originally reacted, and maybe other vampires had even tried to Dominate it or use Animalism on it. But from how it fled, Jack had to guess it was the first time the creature had seen something that genuinely scared it.\n\nThat was a terrifying thought, and a thrilling, exciting one.\n\nMaybe one or two seconds had gone by, back in the world of the physical, or wherever it was they currently were. It was enough time for Clara to have moved out of the way of the claw arm that'd been meant for her, but the claw arm didn't come down. Now, with the huge werewolf no longer attached to its shoulder, the spider monster let out a horrific scream, and fled. Its huge spider legs scratched against the rock underneath it as it sped away, moving fast enough to cause the strange mist of the new realm to swirl around and behind it in the following vacuum.\n\nClara bounded after it.\n\n\"Wait! Clara, don't!\"\n\nShe stopped, panting, growling, her body a silhouette against the gentle, unending mist. After a few moments, she turned around and stomped over to him.\n\n\"Why!? This is a hunt! It is wounded!\" Her voice was a harsh bark, and Jack winced as bits of the creature's blood splattered onto his suit and face.\n\n\"Because we don't know what's out there, and\"--he gestured to S\u00e1ndor--\"our one way out of here is currently bleeding to death!\"\n\n\"One way out?\" The way she stood there, panting, each breath a quiet growl, long arms at her sides with blood still dripping from her claws and fangs, was startling. Hunger filled her eyes, and the weight of her tall, muscular-but-feminine werewolf body remained forward in a hunched position, like she was ready to pounce. Scary. Made him feel like a bomb disposal expert. One wrong decision and boom.\n\nSure, the curse made him absurdly strong, but unless he had time to summon his defenses, or summon a legion, or summon his will so he could Dominate or use Animalism on her, she'd be on him before he could stop her. Being super strong didn't meant shit if you weren't fast enough to use it, and he didn't want to preemptively prepare his abilities. Might set her off.\n\n\"Yes!\" He gestured to the ground. \"Unless you think you can sink your claws into this strange rock, there's no way getting up that wall. We need someone who can fly, or create a portal to get us out of here. S\u00e1ndor can do both, but he's bleeding out!\" He didn't like raising his voice at a werewolf, but if he could get through the obvious bloodlust in her eyes, he was confident Clara would calm down.\n\nShe did, taking a deep breath before standing up straighter. After looking back over her shoulder for a moment, she stalked over to S\u00e1ndor and crouched down beside him. Jack joined her, and the two looked the poor guy up and down.\n\n\"That's a lot of blood loss,\" Jack said.\n\n\"I'll live.\" S\u00e1ndor said, grunting as he forced himself to sit up.\n\nJack shook his head, got down, took off his suit jacket, then his shirt, and started ripping the white fabric to shreds. \"Don't fucking give me that shit. Begotten don't heal nearly as well as vamps or werewolves outside of the Dream Realm.\"\n\nClara snorted, and shook her head as she looked around, still wary of the monster. \"Hard to smell.\"\n\n\"The mist?\" Jack said.\n\n\"Yes.\" She sniffed the air like a hound, and stalked around back and forth, between Jack and where the monster had run off. \"The air. Thick. Smells of strange spirits. Dead spirits.\" Each word was almost a bark. Considering she had a snout, it was a wonder she could talk at all.\n\nS\u00e1ndor grit his teeth as Jack wrapped a strip of his shirt around the man's shoulder. \"I'm an idiot. I should have realized--\"\n\n\"Realized what?\" Jack said. \"That an ancient spider creature that follows instincts older than any of us can appreciate, would be on the other side of the tear, in what is apparently very much not the Shadow Realm?\" Another question for Azamel.\n\n\"Yes.\"\n\nJack rolled his eyes. \"You are an idiot, for a very different reason. Hold still.\" Bandage press, bandage wrapped around the shoulder, bandage wrapped across and around the opposite shoulder, and some wrapped around the top of his chest. S\u00e1ndor groaned, but Jack could tell the man wanted to scream, as Jack pressed on the wound while wrapping it. It was a shoulder wound but it went dangerously close to the chest, and covering it wasn't easy. A human would bleed out without an ambulance. A Begotten would live, hopefully, as long as Jack's shirt managed to help a little.\n\nClara let out a heavy sigh, and transformed back into her human shape. Jack watched, a little mesmerized. It was pretty awesome how the wolves could transform in a matter of seconds, and it looked... painful, honestly. But within moments, Clara stood there, panting and sweating, back in her clothes, covered in blood. Her leg was a horrible mess of red, and her jeans had a giant hole where the creature had stabbed her, but she was healed. The Gauru form and its ability to heal were pretty insane.\n\n\"Ok, plan?\" Jack said.\n\nClara stared at him, and when he didn't say anything, it was her turn to roll her eyes. \"Hey, you're the Ventrue, and the dude everyone apparently looks to for this sorta shit. What do you think we should do?\"\n\n\"Ugh, you're foisting the role of leader on me?\"\n\n\"Yes,\" the two of them said together, S\u00e1ndor more so with a grunt.\n\nSighing, Jack smiled. God, he'd be terrified of something like that in the past. He'd have still done it, and maybe even done it well, but he would have been scared as fuck. Not so much anymore. Except...\n\n\"Uh, as far as I can tell, we're in some kinda ghost realm, like S\u00e1ndor thought. So, uh, let's not touch anything, draw any attention to us, and get the fuck out of here as quietly as we can. I have no idea if the sun can rise here, and it looks like we're in a cave so I should be safe. But eventually, I'm going to pass out, and you're going to have one injured monster and one comatose vampire to protect, Clara.\"\n\nNodding, she looked down, found the blood trail she'd originally created, scooped up S\u00e1ndor from under his good arm, and started walking.\n\n\"Then let's get out of here before that happens.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nShe left Damien behind, and went to find her boyfriends. She half expected them to take her to Bloodlust, but nope, they suggested no such thing. Instead, they invited her to walk around the Carthian district.\n\nShe agreed, reluctantly. It wasn't like she couldn't do it, or wasn't allowed. Even when she'd been in the Invictus, she was technically allowed to walk around with the Carthians. It just wasn't done. It was tempting fate for no reason. As long as no one else but a Carthian fed in the Carthian district, they were allowed to go into it, except, an Invictus going into it was asking for trouble.\n\nShe wasn't Invictus anymore! She didn't need to worry, because the Carthians and the Ordo Dracul got along in Dolareido. During the Purge, they'd worked together, which was a pretty huge accomplishment for any two covenants in any city. There was no reason for the Carthians to look at her with suspicion, especially since she was close with the Uratha, who were close with the Carthians.\n\nBut she wasn't an idiot. She brought a pistol underneath her suit jacket, a short sword, and a large silver knife that was almost a short sword itself. If things got crazy, she could defend herself. Better yet, she could hide behind her boyfriends; not because she couldn't fight, she could, but the Carthians were less likely to shoot at them. Plus, they were big, and easy to use as cover.",
        "\"So it's finally over,\" Art said. \"No more sweeps. No more worrying about getting shot in the back or blown up.\" He'd said those words before, but it was as good a conversation starter as any.\n\nShe nodded. \"Mhmm. As long as Garry d-doesn't start a war, everything is peaceful.\"\n\n\"Way he tells it,\" Matthew said, \"he's just taking back territory he used to own, and has no plans to throw the first punch.\"\n\n\"He's already thrown a p-punch!\" she said. \"He just hasn't taken it further than that. Yet.\"\n\nThe two boys looked at each other, not entirely convinced by what she said. But it wasn't like she was wrong. Garry may have thought what he was doing was justified, and it probably was, but he was fooling himself if he thought starting street fights and pushing Invictus out of areas they'd claimed, by using Terra Den's influence, was anything but throwing a punch.\n\nTaking territory was a big deal. Kindred were paranoid, selfish creatures. They fought for territory because territory equaled more kine. As per the Prince's orders, the Carthians and Invictus were not to feed in each other's territory; the witches and dragons were free to feed anywhere, because they didn't really have territory or anything. After the purge, and then Tony's death, the amount of territory available had grown substantially, and the Invictus and Carthians both got greedy. And still, despite that, they continued to fight over food.\n\n\"Either way,\" Art said, \"things have calmed down for now.\" He looked around slowly, scanning the occasional kine that walked by. Not many kine out this late in the Carthian district, except for the rowdier sorts.\n\nVampires did occasionally walk by, and at least one watched them from the rooftops. Well, watched her.\n\n\"I hope Avery c-can help keep it that way,\" she said. \"She's friends with Garry, right?\"\n\nMatthew shrugged. \"Friend is a strong word. But they're on the same wavelength... kinda?\"\n\n\"Kinda?\"\n\n\"Similar people, different ideas,\" Art said. \"Garry has an aggressive side, and an aggressive streak ready to launch. He wants to fix this city. Avery, she... she's tired, you know? She's getting old, and was already tired before this shit starting going down. Stephanie died, then the rest of us started getting comfy here in the aftermath. Last thing she wants is to spoil what she's got here.\"\n\nRight, right. Natasha and the others knew Avery was now looking to treat Dolareido as home, and had already been in the city for almost two years.\n\n\"I want you t... t-to stay,\" she said, nodding. Of course she wanted them to stay. She'd said it to them before, and they'd said they wanted to, too.\n\nShe expected them to say something romantic, based on the looks they gave her. Content smiles and warm eyes. But instead, Matthew reached down for her, and she outright squealed as the man put her on his shoulders. Her struggles were rendered pointless as the big guy pinned her legs to his chest where they dangled.\n\nAfter an annoyed groan, she adjusted her suit pants a bit, and leaned forward to rest her elbows on the moron's head. Her lovable giant. Art laughed of course, when he saw the expression on her face, and she frowned at him before sticking her tongue out at him.\n\nIt was hardly becoming behavior for a vampire as old as her, or for these two men who were werewolves, and older than they appeared. But, it was fun, doing something stupid and silly like this.\n\n\"I'm... n-not against the pack d-doing things, to make Dolareido better, I mean.\"\n\n\"Your boss probably is,\" Art said.\n\n\"Maybe. She... she has p-plans for Dolareido, and a lot of that involves getting p-people to cooperate. She wants peace.\"\n\n\"Sure, but she sets the rules. If she learns that Eric's been doing shit that might really affect her city, in a pretty drastic way, she'll be pissed. If anyone in the pack does, she'll be more than pissed.\"\n\nNatasha sighed and slouched over Matt's head. \"I guess. B-But, you're a part of the city. And the Prince hasn't said you're not allowed to do things in the Hisil. If you think you can make a b-better city for kine by taking down some nasty spirits, I c-can't say you shouldn't.\"\n\nArt gave her a suspicious glance from below. \"But, you don't feel compelled to do so yourself.\"\n\n\"I... I uh...\" It was such a complicated topic! It was hard to really summarize all the nuances involved, about the natural habits of kine, about controlling the Beast inside every Kindred, about keeping everyone peaceful while allowing for natural instincts to be satisfied. \"I d-don't like seeing the kine get hurt either, but--\"\n\n\"They're people,\" Art said.\n\n\"... they're food,\" she whispered, only loud enough for the two of them to hear. Art winced, and Matt's dramatic gasp was louder than her own whisper. \"We try t-to be fair! But, we're not kine anymore. And... and I know for the Uratha, it's different, but for Kindred, we... we have to drink their blood to survive. Do that for a d-decade or two, then a century for two, and... and it's normal t-to become detached.\"\n\nThe two men looked at each other for a moment, sighed, and kept walking. A heavy silence settled on them.\n\nShe spoke up first. \"Um, w-why do you two, do what you do?\"\n\n\"Whatcha mean?\" Matt said. Art looked up at her with similar confusion.\n\n\"Why do you guys try and help the kine? I mean, the p-people? For Kindred, we would do things like... hunt spirits and spider monsters like you do, to protect our food, or maybe to eat them if they were food. B-But, why do you do it?\"\n\n\"For a lot of us,\" Art said, \"it's a matter of our history, the Uratha's history. Some call us the Forsaken, because of what our ancestors did to Father Wolf. So now we try and fill in the old man's paws, and Luna gifts us for doing so.\"\n\n\"Inherited the sins of your parents?\" Natasha shook her head. \"I can't believe you'd d-do so much, for something that isn't your fault.\" Adam and Eve passing their sins onto humanity was just as idiotic an idea. Maybe Damien would understand their motivations better.\n\nMatthew tilted his head up to peek at her, and she had to hold on to keep from falling off his shoulders. \"It's not easy to explain. If you had the wolf inside you like us, it'd make a lot more sense.\"\n\nShe frowned down at him. Pack mentality? Kindred were obsessively individualistic, while the Uratha really treated their family, even their dead family, as very important to them. Even more important than their own lives. It was hard for her to think that way, when every instinct she had was to put herself first. She'd certainly fight to protect her friends, but, if Daniel died, she wouldn't suddenly feel compelled to do what he did and be the Prince's new Right Hand or sheriff or something.\n\n\"And,\" Art added, \"we try to help people because, why wouldn't we? How couldn't we? We're a part of this world, this environment. Least we can do is protect it and get rid of the filth.\"\n\nMatthew nodded. \"Filth being assholes and nasty spirits alike.\"\n\n\"I... I'm not against you guys doing that,\" Natasha said. \"I guess I won't be able to understand. My... B-Beast isn't... it doesn't understand.\" She gestured to a group of kine hanging under a nearby street light. \"When I was younger, yes, it felt horrible, being... you know, a vampire, and having to drink from, and sometimes hurt kine. After a few decades, I kinda grew n-numb to it.\"\n\n\"I suppose if I had to survive on their blood, I might become numb to it too,\" Art said. \"We've eaten animals, and spirits, but eating a human is forbidden. And... I guess we kinda think of ourselves as their protector. If the Gauntlet came down, it'd wreck everything humans have, you know? I guess it's... it's a hard difference between vampires and werewolves. Not that all werewolves are as nice as us, but--\"\n\n\"B-But no vampire ever goes as far t-to help kine, as you do.\" Natasha rested against Matt's head as she absorbed that. Her boyfriends were the good guys, she was sort of a bad guy, relatively speaking. In Dolareido, the Prince considered it perfectly reasonable for vampires to kill humans, as long as it was handled well, with no media attention. Killing the prey was discouraged, but still allowed, and occasionally a vampire did so.\n\n\"Yeah,\" Matt said. \"But, at the same time, you vamps here in Dolareido are a shit load nicer than the vamps we've dealt with before. Like we said, we've had a rough time of it in other cities. And Arturo's had it worst than most.\"\n\nNatasha smiled down at Arturo. It was true. The man had come from Tijuana, where the vampires did not play around, killing kine without hesitation, and killing each other in regular turf wars. The werewolves had come and rescued him from that past. Rough stuff. It made sense he'd be looking for someone nicer than the vamps he had to deal with growing up.\n\nShe was nice, right? Most of the Kindred in Dolareido were nice, relatively speaking, and she was nicer than them, despite Maria's attempts to harden her. The boys liked her because she was nice. She liked them because they were nice! And, not nice, in a fun and sexy kinda way. But she was worried the differences between them would become a problem, and this conversation wasn't doing anything to settle her fears.\n\nBack onto the other topic.\n\n\"B-But, Avery doesn't want you to interfere with the city.\"\n\n\"Yeah,\" Art said, \"and it's irritating as fuck. She's trying to find a balance, to find a way we can do our thing, without stepping on the Prince's toes. Garry--\"\n\n\"Garry d-doesn't care about the kine anymore than the Invictus,\" she said, a little more bite in her words than she planned. \"Or if he does, it's only by a little.\"\n\n\"Either way, Avery wants to fit in. She's tired, and she's apparently found herself a man. But even she wants to help, try and clean up some of the shit in this city. If she does, she might piss off the Prince, and that'd fuck us over. Especially me and Matt.\"\n\n\"You t-two? Why?\"\n\nMatt laughed, and Art smiled up at her. \"Come on, why do you think?\"\n\n\"B... Because if you make the Prince angry, and she makes you leave, then we... w-w-we won't be together anymore.\"\n\n\"Yep,\" the said together.\n\nNatasha grumbled, and clutched Matt's head tight as she slouched forward, and rested her chest on him. Her relationship was causing another to make a decision they might not otherwise. She hated that feeling.\n\n\"Not just us,\" Matthew said, voice bright, obviously trying to lift her spirits. \"Mason and that Tilly girl are still an item. Brianna is... uh...\"\n\n\"She's throwing herself into the deep end,\" Art said, laughing. \"I guess she saw what Clara had, and wanted a piece too, except not with ghouls.\"\n\nNatasha giggled, and started combing Matt's beautiful, long blonde hair as they walked. \"She enjoyed herself at the b-ball,\" she said. The two men nodded. \"But, um, Clara's still into Jack.\"\n\nThe boys looked at each other.\n\n\"Is she?\" they said together.\n\nUgh, boys. Blind to everything.\n\n\"You saw her t-talk to Jack at the ball.\"\n\nMatt shrugged, and Natasha bounced on his shoulders with the motion. \"Yeah, but--\"\n\n\"We just figured she was talking to him, friend to friend sorta thing, and were pushing past that unrequited love stage. They did go through hell, attacking the hunters like that.\" Art looked behind him, probably checking to see if anyone of note had taken an interest in their conversation. No one had.\n\n\"You didn't see the look in her eyes?\" Natasha said.\n\n\"No,\" the boys said.\n\n\"She still likes him. And now, after... after what I heard, about what Jack d-did with the curse, she... she still likes him.\" If anything, she'd want to help him even more now. \"D-Do you know if, um, she's still getting visits from Jessy's ghouls?\"\n\nArt raised a brow as he looked up at her. \"You mean you don't know?\"\n\n\"Jessy doesn't t-talk about Clara as much as she used to. Now it's always about Eric.\" Because the girl was obviously in love. \"Eric Eric Eric.\"\n\n\"Eric is an interesting guy,\" Matt said. \"There's something strange about him. Avery thinks Luna might have spoken to him, which is pretty damn amazing. Cahalith get visions from Luna, but to actually be spoken to by her is huge. Plus, his relationship with Jessy is pretty strange, too.\"\n\n\"Strange? Oh, r-right, the sex.\"\n\nArt nodded. \"You've seen how crazy we can get when we transform into the Gauru form. To be in that form for sex?\" Rubbing his neck, he looked left and right again, the anxiety at the idea obvious. \"I don't know. Maybe he's from a new wave of modern werewolves, who can handle that sort of stuff better.\"\n\n\"M-Maybe? His first time transforming, he killed, and ate some men.\"\n\n\"Yeah,\" Matt said, \"which also makes us nervous. But, he seems to be fine with it. Probably didn't get addicted. Lucky. Mason had to deal with cravings for months, after his first transformation.\"\n\nUratha could become addicted to human flesh? Well, that was a little scary. Suddenly, a lot of werewolf folklore made a lot more sense. How many werewolves went nuts the first time they transformed, and were from then on addicted to flesh? Hungry, powerful monsters, stalking villages at night and satisfying their hungers on the villagers, even if they hated themselves every moment of it. Not a far cry from what vampires had to deal with all the time.\n\nA strange thought re-emerged in her mind.\n\n\"Is... is there any way for your, um... lunacy thing, to n-not affect cameras?\"\n\nThey both looked up at her, and she squeaked as she clutched Matt's forehead to keep from falling off again.\n\n\"Not that we're aware of,\" Art said. \"Why? You want us to transform for the next movie?\"\n\n\"No! No no...\" Not that she didn't like the idea of two giant beasts ravaging her, thanks to Jessy forever planting the idea in her head, but there was a limit! \"But, J-Jessy was interested.\"\n\nThe two men nodded at each other, coming to some sort of conclusion.\n\nBut Art shook his head after thinking about it for a moment. \"Pretty sure there isn't a way. It's not really us doing it.\"\n\n\"Oh. Jessy will be sad.\"\n\nArt laughed. \"Oh, I get it. You've been watching her and Eric having sex, right?\"\n\n\"I... um, n-not on purpose! She called me, and it was happening, and... yeah,\" she said. The two men laughed, and she knew she'd be blushing furiously if she'd been Blushing Life. \"You t-two, why don't you ever get jealous?\"\n\n\"Because we're gorgeous,\" Art said, laughing some more, and fist bumping Matt. \"And we trust you. No harm in looking, right? I mean, sure, it's a little strange for us, but it is Dolareido.\"\n\nShe reached down, and punched Art in the shoulder. He didn't budge.\n\n\"Strange? You're t-two guys, who... you know...\" Have a history of double teaming women. Natasha wasn't their first. \"And you're not even from D-Dolareido!\"\n\nThey shrugged again, and Matt spoke up this time.\n\n\"Yeah, it's a bit strange, we know. But Art and I have been through Hell, and...\"\n\n\"And,\" Art continued, \"we kinda just get along, you know?\"\n\n\"I guess... W-What was your first time like? I mean, uh, when you two both... you know,\" she said. The two guys looked at each other, obviously not sure what to say. \"Come on, I won't be jealous.\" Hopefully.\n\nAfter some careful deliberation, they nodded.\n\n\"Sure,\" Matt said. \"But, let's go somewhere private?\"\n\n\"Is it... emotional?\" she said.\n\nArt laughed and shook his head. \"No. Embarrassing.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nJacob came for her, and she went with him. He didn't want to bring Jennifer, but Triss insisted. Jennifer had stuck her neck out for Triss on several occasions now, and deserved to be a part of this. More than that, Jennifer had been Julias's friend. She may not have loved him, or maybe she did in her strange sort of way, either way, she deserved to be a part of this.\n\nJacob took them out into the desert, and the two girls blinked at each other as they wandered the rocks and sand, draped in Jacob's Cloak of Night.\n\n\"Uh, where we going?\" Triss said.\n\n\"One of my lairs is out here. It's where I've been keeping Elen,\" the old Nosferatu said with a grin over his shoulder. \"Hard for Daniel to find anything out here.\"\n\nJennifer nodded. \"I suppose if the sheriff is working by area instead of leads and clues, then yes. I doubt Daniel is so blind to your movements that--\"\n\n\"The sheriff cannot find me when I truly do not wish to be found, Jen.\" Jacob laughed, a soft and sinister thing, and motioned for them to join him down in a small, rocky ravine. \"He knows where my primary lair is because it serves me to let him. Come on, you know that.\"\n\n\"I do.\" Jen frowned at the man and his teasing. \"But you underestimate the sheriff.\"\n\nJacob shrugged, and started down the ravine. \"He underestimates me, I underestimate him, 'round and around it goes.\"\n\nIt was a long walk, and apparently, Jacob was in no hurry. If anything, he had a bounce in his step, and he skipped around a little as he guided them through the desert night. Well, it was kinda nice heading a few miles out from the city, and enjoying the quiet. And nerve racking. This far away from quality shelter was enough to make any vampire nervous.\n\n\"So,\" Jennifer said, \"did you see Samantha again?\"\n\nThe small misstep Jacob made would have been unnoticeable to anyone who didn't know the man. Triss did, and so did Jen. They smiled at each other before smiling at their boss.\n\n\"You were having fun with her, after the party last week,\" Triss said. \"And, if I didn't know better, I'd think you were actually kinda enjoying yourself, talking with her. But we both know you were really just manipulating her to like you, so you'd have a way of manipulating Jack and the Prince, right?\" She didn't need to be that harsh, but she wasn't down with Jacob being an asshole to Samantha. Jack didn't deserve that. Plus, Jacob liked it when she was harsh.\n\nThe look he gave her when he looked back at her, on the other hand, said something she didn't expect. Even with the bandage on his eyes, she could see a bit of hesitation in him, a bit of internal struggle. He was thinking about what to say, and Jacob never had to think about what to say. The fucker was so in tune with his thoughts, they flowed out of him in all their psychotic, genius glory, usually.\n\n\"Maybe,\" he said, with zero conviction. There was more to this than he wanted them to know.\n\nJen raised a brow, and picked up her pace to catch up to him. \"Have you seen her again?\" she asked again.\n\n\"Maybe.\"\n\nTriss laughed, and jogged up to Jacob's side, opposite of Jen. \"Ok, seriously, did you see her again? A lot of people were talking about it, you know. What the fuck was the leader of the Circle of the Crone doing hanging out with the Prince's new childe, they said.\" Not that she hung out with any of the other vampires, but she did creep around, go hunting and stuff. Vamps talk.\n\n\"You two whores just want to gossip. Sluts.\"\n\n\"Yes!\" Jennifer said with a little cheer. \"Gossip with us, boss. Samantha's cute, and close to your age.\" Triss and Jacob looked at her, eyebrow raised. \"You know what I mean. She was in her forties when embraced. I bet you two get along.\"\n\nRight, Jen was talking about how vampires generally didn't change much once they were embraced; except, when caused by long torpors, which Jacob had undoubtedly been through at least several of. But, the fact that Jacob had been embraced in his older years was obvious by the color of his hair: salt and pepper, and a couple inches long, a bit wavy, a bit full. He was certainly a handsome guy, Triss figured, for any woman in her forties, since he had that mature and successful look to him. And the eye bandage made him look mysterious. It made him seem dangerous and psychotic to anyone who knew better, but to a young Kindred like Samantha, he undoubtedly looked mysterious and sexy. A regular phantom of the opera.",
        "\"For all you two know, I was twenty when embraced,\" the old bastard said with a hint of a smile. \"I could pass for twenty, right? Be honest.\"\n\nJen and Triss looked at each other, and laughed again. No chance.\n\n\"Seriously,\" Triss continued, \"what's up with you and her? She's... well, not the sharpest tool in the shed, you know? Figured you'd be interested in someone with a brain.\" Too harsh? Too harsh. \"Er, well, I'm sure she has a brain, but you know what I mean.\"\n\n\"Yes,\" Jennifer said. \"Samantha seems like a lovely woman, and kind. But--\"\n\nJacob shook his head. \"But she'll never be good at the Danse Macabre, at complex plans, at feats of logic, at constructing and acquiring resources. Vampire stuff.\"\n\n\"Yes,\" the two women said.\n\nThe boss laughed again, shrugging. \"You kids, you think you got the whole world figured out.\"\n\nTriss scratched the back of her neck. \"Maybe a little more than--\"\n\nJacob swung his left arm out and hit Triss in the shoulder. Not hard, more of a buddy backhand than anything, but it was enough to give her pause.\n\n\"There are many types of intelligences, Triss. Sure, some are better at the Danse than others, but that doesn't mean she isn't worth talking to. You saw how she treated Athalia at the ball, and the effect it had? She soothed pain and turned a tense situation into a peaceful one, by herself. There's talent inside her, one she doesn't even realize she has.\"\n\nTriss raised a brow again, eying the man. When the conversation drifted to Samantha, she expected Jacob to do his usual thing where he got quirky, random, strange, and dangerous. But he didn't. If anything, he was talking like a normal person, and that was strange in and of itself.\n\n\"I get that. Just kinda... surprised you're talking to her. Seems a bit random, if you're not doing it for typical Danse reasons.\"\n\nHe stopped walking, and set his chin between some fingers as he considered. \"The first time I met her, I was visiting Jack. She seemed interesting. A bit of Jack in her eyes.\"\n\nTriss shivered. It was hard to think of Jack anymore without thinking of the curse, and the crazy look she saw in his eyes when he'd given it the reins. But with a little effort, she could remember Jack before, Jack when he was just a kid struggling to not drown in his new world. There was definitely something to Jack, something in his damn brain that naturally steered him into the shittiest situations possible.\n\nJulias had seen it before anyone else. Jack, just some random, smart kid who worked for an accounting firm or law firm or something, some entry intern position. Julias noticed him, taught him, became friends with him, and saved him from that bitch Rebecca. In retrospect, Rebecca wouldn't have touched Jack if Julias hadn't made it obvious he was going to sire him, or maybe turn him into a ghoul.\n\nRebecca was the reason Julias had to embrace him. She was the reason so much crazy shit happened. Damn, it made Triss happy knowing she'd killed her.\n\n\"I have to wonder,\" Jennifer said, \"if Samantha will have the same impact on Dolareido as Jack did.\" Saying what everyone was thinking. \"And if Jack is so compelling that he interests the Prince, then I can only imagine there's something compelling about Samantha as well.\"\n\n\"Either way,\" Jacob said, \"it's my business, not yours. We're not here to gossip and do each other's makeup, sluts. We're here to discuss Elen.\" He reached over to a large rock, and after grounding his feet, rolled it aside.\n\nThe smell was strange. Flesh, but not rotting flesh. No shit or piss either, so either Jacob was doing a good job taking care of his prisoner, or Elen just didn't do those things. Other smells too, some Triss recognized from the other sacrifice site, a strange, cold smell that reminded her of metal, and of Black Blood.\n\nThe entrance was a tiny hole, same as their headquarters, and they had to crouch down and literally crawl through it. The tunnel was long, and Triss quickly found herself becoming claustrophobic as they moved through the darkness. Not even Kindred eyes could see in total blackness, and considering how long the tunnel was, and filled with dirt and other surfaces that didn't bounce any light, it really was utter, pure darkness. If the tunnel collapsed, Jen and Triss wouldn't be getting out without help, not strong enough. No worry about dying, but she'd still eventually starve until she fell into torpor. Not a fun thing to do, she imagined.\n\nAfter a silent eternity, they crawled out of the tunnel, deep in the Earth, and stood up. A few candles were lit, and after so much time in absolute darkness, a few candles was plenty of light.\n\nShe expected the occult witchcraft stuff. The thousands of symbols drawn on the walls, carved into them. The dangling chains and ropes with strange occult objects, like large bones and skulls dangling from them. The big, gross metal bowl in the center, ready to give anyone unlucky enough to touch it a bout of tetanus. But she wasn't prepared for the sight of Elen, an old, emaciated woman, dangling from a chain with a big hook skewering her wrists. She dangled over the bowl, naked, loose skin hanging, and an occasional drop of blood dripping from her feet and into the bowl. A knife stuck out from her leg.\n\nBeatrice stared up at the dangling woman, and swallowed down on her dry throat, before looking around some more. Unlike the bigger cavern Jacob normally used, this one didn't have a back wall that was unnaturally dark, or smell of death and decay. Elen didn't smell good, sure, but she wasn't dead, and apparently hadn't pissed or shit unless Jacob was washing her.\n\nThere were a couple bloody daggers in the bowl, and some bloody barbed wire. A few bloody hooks, one bloody hammer, and one bloody scalpel. And yet, despite how gross with age Elen looked, she didn't have a cut on her. No scar or anything.\n\n\"The curse of immortality,\" Jacob said, gesturing to the old woman with a laugh.\n\n\"Immortality? Uh... what?\"\n\nJacob jumped up onto the bowl edge, with Elen between him and Triss, and reached up so he could set a hand on the hook. Surprisingly, the bowl was stable. It sat on what looked like some skulls, and a few dark skeletal hands held its base. Maybe they were actually full bodies, sticking up from the ground where they'd been buried to the neck.\n\nElen didn't react to Jacob's antics, though Jennifer groaned in disgust and dismay over the whole situation.\n\n\"Immortality,\" the old bastard repeated. \"This fellow witch has somehow managed to make herself basically immortal. Her flesh mends itself. I haven't tried ripping her head off or destroying her brain, but so far, she seems quite impervious. A regular Tithonus.\"\n\n\"Who?\" Triss asked.\n\nJacob laughed, and gave the old woman a slap on the back. No response. She drifted back and forth, head hanging slightly, eyes open and looking around. A bit of drool fell from her lip.\n\n\"Greek myth. A man who was cursed with immortality, but not eternal youth. He aged, and became a withered, pathetic thing.\" Jacob turned the dangling woman until they were facing each other, and while his left hand still held onto the dangling hook above for balance, he used his right to clutch the woman's chin and make her look at him. \"She's done something to her flesh, using her magic. But whatever it is she did, wasn't perfect. She forgot to ask for eternal youth.\" Laughing like a maniac, Jacob hopped off the bowl, and without looking, snapped his hand out, grabbed the knife lodged in her thigh, and yanked it out the old woman's leg.\n\n\"Nasty,\" Triss said.\n\n\"It took time, to understand what she can do,\" he continued, and he held out the knife to Beatrice. \"She's harmless. Her magic only works on the living, and only if she can spend the time to draw her symbols on them.\"\n\nBeatrice looked at the knife, and growled as her eyes raised to look at the hanging woman. \"Then, the hunters that died when we attacked... the ones holding the weird objects.\"\n\n\"I'm sure Elen had worked tattoos and other things into all the hunters. But for that particular ritual, she needed to channel something a great deal more powerful than she could manage. Hence, the objects. Without them, all she can do, is manipulate flesh.\"\n\n\"What about the haruspex?\" Jennifer said. \"She was predicting things, by reading entrails.\"\n\nWhich was one of the most fucked up, kinda cool, but still fucked up things Beatrice had ever imagined.\n\nJacob shrugged, and gave the woman another push so she swayed a few feet over the bowl. \"Haruspex is divination. The magic let her speak to something, nothing more.\"\n\n\"Nothing more?\" Jennifer shuddered and rubbed her arms. \"There's something out there willing to talk with her, and make predictions about things?\"\n\n\"Yeah, there is,\" Triss said. \"I've spoken with something like that, remember? In a pretty similar way.\" They'd piled the bodies high, that night.\n\nJennifer bit her lip, and took a step back from Elen. Much as Jen had stood by Triss through a lot of shit, the girl was still too scared to really throw herself into the deep end. Good. If they both got in over their heads, there'd be no one to pull them out.\n\n\"What now?\" Jennifer said.\n\nJacob flashed her a big green. \"That's up to Beatrice. I set this up so she could do whatever she wanted.\"\n\nTriss laughed, but it had no heart in it. \"Don't act like you weren't curious about her, and what she can do.\"\n\n\"True, true.\" He rubbed his hands together a few times, indicating he'd already learned a few things, things he wasn't telling them. Fucker. \"But, it's pretty obvious her mind's going. She doesn't feel pain, or hunger or thirst. She's not some sort of genius who's survived all this time on her intelligence, wisdom, and wits. She's a shell. If it wasn't for Jeremiah, she'd be in a hospital somewhere, wasting away, and never dying.\"\n\n\"Has she spoken?\" Jennifer said. \"I know she can speak.\"\n\n\"She hasn't said a word.\" Jacob gestured to the knife in Triss's hands. \"Maybe you'll have better results.\"\n\nTriss frowned down at the knife. \"And the Nightmare discipline didn't work?\"\n\n\"I managed to stir some strange noises out of her. But for the most part, she's less a person, more a tool. Like, she's running on great grandma software, to the point I don't think there's a thought going on in that pretty head.\"\n\nPretty, like a hundred-and-fifty-year-old who smoked and slept on her face and didn't eat nearly as much as she should have pretty.\n\n\"Let me,\" Jen said, stepping back in. \"I'll take a stab.\" Triss held up the knife to her, and Jen grimaced, before chuckling as she realized the pun.\n\n\"If you're sure. Who knows what kinda crazy shit is in that mind,\" Triss said.\n\n\"I won't push too hard. I'll be fine.\" After a heavy sigh, Jen reached out, and stopped the old naked woman's gentle swinging.\n\nJacob and Triss stepped back, and let Jennifer have her room. Beatrice couldn't use Dominate, and she was pretty sure Jacob couldn't either. Acquiring the unique disciplines of other bloodclans required doing some pretty nasty things, like drinking their blood, risking the Vinculum or vitae addiction, and it just wasn't worth it. Unless of course, a vampire performed diablerie, sucked another vampire dry, and rendered themselves immune to the Vinculum; because they were now a nasty, twisted freak, and they'd just killed the vamp they may have been bound to.\n\nIt was the silence. The lack of noise, the lack of distraction, it was letting Triss's mind run away with her, so it could dig up nasty thoughts. Bleh.\n\nJennifer met eyes with the old woman, frowned, and sighed. \"I can... can... ugh. Jacob's right. Something's happened to her, and I can't get a good grip on her mind.\"\n\n\"Barrier?\" Triss asked.\n\n\"No. Most minds put up a defense when I attack them with Dominate. With her, it's like... I'm trying to grab fog or rain.\"\n\n\"Because she's so old?\"\n\nJennifer shook her head. \"Maybe, but I don't think so. I think parts of her are just... gone, like she gave up something. Whoever this old woman is dangling in front of us, she's not much different than a corpse. Like, a zombie, still thinking she's a great grandma like Jacob said. That, and still very aware of how to be a witch.\"\n\nShe really was just a tool then. Elen was dead, and this old thing in front of them was the remains.\n\n\"She did this to herself, so she could become immortal?\" Triss said.\n\nJacob chuckled and shrugged. \"Maybe. I bet a lot of what's affecting her mind is because of the magic she uses, the places her mind has been, and the things it's communicated with. Her brain, or her soul, or both, have been eaten away. After my tests, I figured she was basically brain dead, and Jennifer's confirmed. Just a zombie.\"\n\n\"Dears,\" Elen said, voice quiet, dry, and full of weak rasp. Jen and Triss froze as they looked up to her, and even Jacob stopped drifting around as much as he looked at her too. \"Dears, be kind and leave an old woman be. I need a nap.\"\n\nTriss stared up at her, and shivered as a harsh chill ran down her spine. Vampires had crazy, magic-like abilities that were given to them by their condition. Witches of the Circle of the Crone managed to tap into some sort of mysterious force in the universe, and guided it using Cr\u00faac rituals. If a human being, someone made of normal flesh and blood, who didn't have the naturally immortal and resilient -- and static -- bodies of a vampire, tried to use strange magical forces, did they all turn out like this?\n\nNah. Elen must have done something specific and weird, to get herself this fucked up. Being genuinely immortal was a pretty big deal for any human, even something as fucked up as this. It had to come at a huge cost, and she probably paid that cost more than once, with the insane magics she pulled.\n\n\"Elen,\" Triss said. No response. \"Elen, have you ever resurrected someone?\"\n\nThe R word managed to make her raise her eyes, but after a moment, Elen lowered them. \"Be a dear and let me go. I really would like to get my book back. I like to feed some birds by the park in the morning.\"\n\nIt was super fucking creepy, how she sounded like a sweet grandma, despite her circumstance. A talking zombie, alive, and even functioning, sort of.\n\n\"She wore an oxygen mask before,\" Triss said.\n\nJacob shrugged. \"Probably helps her move her body better. Takes oxygen to move muscles. If she had to lift her arms and cut into things, with a body this fucked up, she'd need oxygen to do it.\"\n\nJennifer didn't look convinced. \"But not food or water?\"\n\n\"She's withering away without them,\" Jacob said, \"but she won't die. Makes you wonder, right? Where's the line between this immortality curse keeping her alive, and how far her biology will go before she eventually falls apart like ash.\"\n\nLike ash, like a Kindred did, when killed, assuming they were old enough.\n\n\"I wonder why she did this to herself,\" Jennifer said.\n\n\"A human witch playing with powers they shouldn't have.\" After another shrug, Jacob paced around the bowl slowly, arms folded across his chest. \"Why does anyone do anything? Selfishness. Either she wanted immortality for the hell of it, or she wanted it so she could do something else. Maybe save a loved one. Maybe get revenge.\"\n\nMuch as the words sounded like they should have been insulting or condescending, Jacob's tone was not. He was intrigued, amused, and maybe even a little fascinated. Elen was definitely unusual, especially if she could intrigue a fossil like Jacob.\n\nOk, so, Disciplines wouldn't work on her mind. She simply didn't have the mind left to scare or control, or seduce, if they had a Daeva.\n\n\"What about... Auspex?\" she said. Jacob raised a brow as he looked at her, but waited. \"Mekhet can learn secrets from people hiding them, right? I hear they can get information out of people, using Auspex.\"\n\n\"It might work, but, know any that'd be willing to help you?\"\n\nTriss glared at him. The bastard knew exactly who she knew, and exactly who she was thinking of. Natasha, and Damien. Natasha wouldn't help, not with something this disturbing. Damien did sort of owe her, for when she'd given him some of her blood to save his ass. And maybe a little residual effect was left, so he'd be easier to convince? Nah. That was too long ago, and Damien wouldn't help her without telling Jack. Ideally, she'd like to keep outside interference to a minimum.\n\nUgh, why didn't the Circle have any Mekhet?\n\n\"Maybe... maybe...\" She looked down, her hair falling around her face as she let the sickening thought build before she found the will to say it. \"Maybe... Black Blood could do something?\"\n\nJennifer stared at her, and gulped. Jacob, on the other hand, grinned at her like he'd been waiting for her to say it.\n\n\"What a wonderful idea.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "suspense",
        "mystery",
        "paranormal romance",
        "vampire",
        "werewolf",
        "monster"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-03"
}