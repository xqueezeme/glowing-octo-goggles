{
    "title": "On My Way Home Ch. 03",
    "pages": [
        "Yes, it's been a while.\n\nI wrote this a few months back as a way of wrapping the story up, and never got around to posting it. It's short and there's less sex than there was in chapters 1 and 2, but I like spending time with Andy's girls and I hope you enjoy seeing the story to its conclusion. If you do, let me know via comments, votes or messages.\n\nI woke to find my cock being lovingly and affectionately sucked.\n\nKaz, fully dressed, knelt over me, her head bobbing up and down slowly as she deliberately and artfully slid me in and out of her mouth.\n\nAs she felt me stir, she looked up into my eyes. Hers were full of that familiar twinkling mischief.\n\nTo the left of me Eleanor slept, her knees drawn up to her chest so she looked very small and fragile. On the other side Jen also slept, a less elegant pose on her front, one arm stretched out full length so her fingers were mere fractions of an inch from me. \n\nWe were downstairs, of course. In honour of our first meeting I had once again dragged mattresses downstairs and we'd made a makeshift camp in the living room. Funnily enough both girls had seemed a little shyer when it was the three of us, neither wanting to make any obvious advances. Perhaps they were shy of making love to me while being watched by the other without Kaz as there as a third to change the dynamic.\n\nI wasn't entirely sorry. I was more than happy to cuddle up with them both and watch a film on television, me in the middle with one arm around each girl. Then, when the film had finished, Eleanor had made us some decaffeinated coffee and we'd chatted quietly for a while under the blankets. Once Jen had sneaked her hand over to fondle my cock and had found Eleanor's hand already there, gently working me under the covers. She'd started to withdraw but instead Eleanor had let go of me and reached for her sister's hand instead, placing it firmly on my crotch and then taking her own hand away. Jen had smiled at her and Eleanor had smiled back. \n\nThey were special, these two sisters. For all of Jen's occasional grumbly protests, there wasn't an ounce of jealousy between them.\n\nAnd now, as they slept, their best friend, clad in blue jeans and a black t shirt, her hair drawn up into a bun, sucked me and ran her fingernails gently down my stomach. I remembered her attentions to me that time in her bedroom when I hadn't been sure I could climax. This time I was worried that I would too soon. Her mouth was so skilful, with just the right combination of speed, suction and variation that I knew I wouldn't be able to last long. And it seemed such a waste, a quick and explosive climax all over in a few minutes. Good for me, perhaps, but less satisfactory for the girls.\n\nI reached down and stroked Kaz's hair. \"Slower,\" I said. \"Please.\"\n\nShe smirked - in so far as she was able - and adjusted her rhythm expertly, just dialling down the pleasure enough that I could relax and enjoy it, knowing that there was no immediate danger of exploding into that lovely mouth.\n\nEleanor stirred and opened her eyes. She looked at me and smiled rather woozily, Then she saw Kaz and giggled softly to herself.\n\n\"Oh Andy,\" she murmured. \"What have you got yourself into?\"\n\n\"Hey!\" said a grumpy voice from the other side of me. \"Who said you could start without me?\"\n\nKaz lifted her head and I drew a sharp intake of breath at the touch of the cool air on my wet cock.\n\n\"Take over,\" said Kaz to Jen. \"I want to say good morning to Eleanor.\"\n\n\"Oh,\" said Eleanor, eyes widening. \"Oh no... you really don't need to, Kaz...\"\n\nBut she may as well have saved her breath. When Kaz was set on something, very little would stop her. As Jen made her way over to me, Kaz moved over to my other side and peeled away the covers from her friend. Eleanor, of course, was naked beneath them. I saw goosebumps forming on her arms and on the slopes of her lovely breasts.\n\nKaz somehow peeled off her skin-tight jeans in an elegant, almost single movement that mentally I made a note I should try and remember - when it came to removing my own jeans elegantly it usually turned into an undignified wrestling match with much tugging and cursing. Then, just in skimpy white panties and her black t shirt, she slid between Eleanor's legs and pushed them slightly more apart.\n\n\"Oh no,\" said Eleanor again, but with even less conviction. \"Oh Kaz...\"\n\nI felt Jen's mouth envelop me and I looked down to watch her. She too was engrossed by the tableau on the other side of me, her eyes greedily taking in the scene even as she moved her head up and down. I didn't blame her for not giving me her full attention.\n\nEleanor sighed again, a long, happy drawn out sound. She stretched out both her arms and surrendered herself to Kaz's attentions. I took the hand nearest to me in mine. After a second, Jen did the same, putting her hand over mind so the three of us had our hands stacked like in that children's game.\n\nEleanor closed her eyes. \"That's so lovely... oh yes, that's so lovely... I do love you Kaz... Oh, that's so...\"\n\nJen's breathing had changed as she watched this. I wasn't surprised by what she decided next. She removed her mouth, moved up my body, and lowered herself down onto me, never taking her eyes off the action unfolding beside us. Then she bent down and lay on my chest, her head just below my chin. She twitched her hips against me in an unmistakeable request. Or perhaps it was a command. Either way, I was happy to comply.\n\nI began to thrust slowly up into her, my spare arm encircling her. The other was still stretched out so I could hold Eleanor's hand. From deep within Jen I felt a small grunt of satisfaction.\n\nKaz's tongue was clearly working overtime now. Eleanor was squirming and writhing and beginning to gasp. Her grip tightened on mine, a surprising strength for such a slight, gentle girl.\n\n\"Oh Kaz... you're going to make me... yes... please Kaz... don't stop... oh god I love the way you... mmm... oh...\"\n\nLike all of them, my own excitement was building. I began to fuck Jen more firmly, tightening my grip on her, using her body more urgently and selfishly. She didn't seem to mind, turning her attention more fully to me and reaching up to lock her mouth to mine.\n\n\"Yes. Fuck yes, Andy! Fuck me hard while Kaz makes Lennie come. Please fuck me hard!\"\n\nIt is not often, I imagine, that two sisters orgasm within a few seconds of each other in the same room. I'd like to say it was at the same moment, but Eleanor came first by a few seconds, a long drawn out howl of pleasure that was quite uncharacteristic of her. The sound seemed to trigger Jen, she suddenly locked her legs more tightly around me and stopped moving, her body stiffening and going rigid.\n\n\"Oh fuck yes!\" she said. \"Oh fuck fuck yes!\" \n\nI felt her muscles contract and her whole body tremble. I lay still, looking up at her. I resisted the urge to fuck her harder, to get myself over the edge and climax deep inside her, which nearly every fibre of my being was urging me to do.\n\n\"Oh god... I do love being fucked... so much.\"\n\nKaz eased herself out from between Eleanor's legs.\n\n\"Did he come in you Jen? Or have you left him for me to finish off?\"\n\nIt was amusing - but also terrifically sexy - that she asked Jen rather than me. I was, in many ways, their sexual toy. They liked me, I think they even loved me, but their own bonds of friendship and affection came first, and I would never be a full member of that circle. And that was entirely right. I certainly wasn't complaining. \n\n\"He's all yours,\" said Jen, rolling off me with uncharacteristic generosity and grace. \"I'm not sure my pussy can take ever having sex again.\"\n\n\"Wanna bet?\" asked Kaz. \"I reckon forty-five minutes tops.\"\n\nEven as she spoke Kaz was slipping off her underwear and tugging her top upwards to reveal that she hadn't bothered with a bra that day. \n\nShe looked at me with that lovely devilish glint.\n\n\"Consent is very important,\" she said to me solemnly. \"Do I have your consent for sexual intercourse, Andy?\"\n\n\"Um,\" I said. \"Let me think about it.\"\n\nShe nodded, and reached out and put her hand around my cock.\n\n\"Yes. You think about it.\"\n\nEleanor, lying beside us, still rather pink-faced, decided to chip in. \"Please fuck her, Andy. For me.\" She gave me a mock pleading look, all big eyes and overdone sincerity.\n\nI sighed. \"Fine. If I must. Let's get this over with.\"\n\n\"Such a gentleman,\" sighed Kaz. \"How would sir like me?\"\n\n\"On your back,\" I said. \"Let's go old-school, shall we?\"\n\nWe rearranged ourselves, Kaz settling herself beneath me with a faux meekness that I resolved I would soon banish.\n\nI positioned myself above, my cock - still wet from Jen - resting on her pubic mound.\n\n\"Talking of consent,\" I said. \"Do you want me to fuck you, Kathryn?\"\n\n\"Yes. Fuck me. Now please.\"\n\n\"Lawyers like things to be transparent and unambiguous,\" I said. \"Perhaps I should get you to sign something.\"\n\n\"Give the poor girl what she wants,\" said Eleanor firmly, and with a touch of reproach.\n\n\"Come on Andy, fuck her really hard,\" said Jen, who was lying the other side of me with her eyes closed and her face still a little pink. \"Fuck her hard until she begs you to stop.\"\n\n\"Hey!\" said Kaz, not used to being the one at the mercy of the others. She didn't look entirely opposed to the idea though. \n\nThen she gasped as I pushed myself into her, stretching out that delicious tight passage.\n\n\"Oh yes fuck... I needed that...\"\n\nThere are few more primal feelings than being erect and aroused and having a lovely nubile girl beneath you. It may not be the most sophisticated sexual position, and it is certainly harder work than many of the others - but when you're in the mood and you want to lose yourself deep in the other person - then a good hard missionary position fuck is hard to beat.\n\nI used her body for my own pleasure even as she did the same to me. Long, hard, thrusting strokes into that receptive body. Her nipples grazing my chest. Her mouth occasionally rising up to meet mine, locking tongues briefly, then her head falling back again onto the pillow. I could taste Eleanor when we kissed. Her eyes closed. Chewing her lips. Her face tensing as I reached the point of maximum penetration inside her, then relaxing slightly as I slipped backwards and out.\n\nI realised she was moving her own hips beneath me in an attempt to get the friction she needed and I paused mid stroke.\n\n\"Use me,\" I told her. \"Use my cock Kathryn.\"\n\nShe put her hands on my hips to give herself better traction and began to grind herself beneath me. Not huge movements, just rubbing herself hard against me with small twitches and thrusts. I felt my cock pressed hard against her pubic bone.\n\nHer breathing became more ragged and the movements more frantic.\n\n\"So close... so fucking close.\"\n\nShe pushed and squirmed and ground herself even harder against me.\n\n\"Now!\" she suddenly said. \"Fuck me now, as hard as you can, please - please!\"\n\nI resumed my thrusts, as hard as I could now. It only took three or four strokes and she was crying out as her orgasm washed through her.\n\n\"Oh fuck! OH FUCK!\"\n\nAgain I found myself pausing so the girl I was with could relish her climax but Kaz was having none of it.\n\n\"No... keep fucking me... come in me Andy... fucking come in me!\"\n\nAnother four or five hard strokes and I was on the edge. Kaz was hardly aware of me I think, but her arms remained around me and her body was all I needed. I came with a loud cry of my own as I began to spurt inside her.\n\n\"Fuck Kaz! Fuck I'm coming...\"\n\n\"Mmm,\" I heard Jen say from somewhere a hundred miles away. \"It's so fucking sexy when a man comes, isn't it?\"\n\n\"Sssh Jen.\" Dear lovely Eleanor.\n\nThe next thing I remember is the cold feel of a flannel being applied to my groin. I looked down to see Jen, cleaning and soothing with all the attention and concern of a nurse mopping the brow of a fevered soldier.\n\n\"It looked so red and sore,\" she explained. \"I thought this might help.\"\n\n\"Thank you. It does.\"\n\n\"What you need,\" said Eleanor, leaning over and kissing my sweaty forehead. \"Is a cup of tea and some breakfast.\"\n\n\"Are there any biscuits?\" asked Jen. \"Or did we eat them all?\"\n\nI lay back and closed my eyes. \n\nIt was only Saturday morning. I wondered if I could live until Sunday. I decided that even if I didn't, it would be worth it.\n\n**\n\nSometimes opportunities present themselves before you're quite ready for them. In fact, probably they hardly ever arrive at the ideal time. They're either a little sooner than you'd like or just a little too late to make a difference.\n\nA few days after that memorable weekend with my girls, Mr Bishop called me into his office for a chat. This was a rare occurrence, as he found one to one discussions a little awkward and preferred to have more informal, far-ranging discussions with myself and Mary, the office manager who had been his secretary for more than twenty years.\n\n\"Ah, Andrew,\" he muttered to himself as I tried to make myself comfortable in the chair opposite him. \"Yes, thank you for... stopping by.\"\n\nHe peered at me over the top of his glasses.\n\n\"You like it here, don't you?\"\n\n\"Yes, I said, quite honestly. This was already the most personal conversation I'd ever had with him.\n\n\"Not too... dull, for you? A town this size?\"\n\n\"No,\" I said, wondering for a wild moment if perhaps news of my sexual adventures had got back to him. Had Jen blurted something out to her mother? Had Mr Bishop just had her on the telephone, demanding my immediate dismissal? I knew this was ridiculous, but still... something about his manner seemed so different that I was on my guard.\n\n\"Good, good.\" He seemed at a loss as to how to proceed next.\n\n\"I'm, sixty-four, you know.\"\n\n\"Really... I thought you were much younger.\" This was a lie. I had thought he was sixty-eight at least.\n\nHe snorted a little at that. \"Yes, well... there we are.\"\n\nWe both contemplated his age for a few moments. I was beginning to get an inkling of what was coming next.\n\n\"You're not thinking of retiring, Mr Bishop?\"\n\nI was genuinely surprised to hear myself asking the question. I had thought - or perhaps assumed - that he would not be retiring for at least several more years.\n\n\"Ah.\" He looked a little disconcerted at such a blunt approach. \"Well... it's certainly a possibility, let's put it like that. Still a few things I'd like to do, you know? Travel a bit, perhaps.\"\n\nThis was even more surprising. Mr Bishop was not somebody I'd ever considered having the travel bug. On the few occasions he had needed to go to London on business he had come back with the air of somebody returning from a particular bloody tour of the Congo. But I nodded sympathetically.\n\n\"I see,\" I said. \"Well... I quite understand.\"\n\n\"Do you?\" He peered at me again. \"Obviously there would be... implications. If I was to... retire.\"\n\nHe said the word as if he didn't quite believe it himself.\n\n\"I imagine there would be,\" I said. \n\n\"Maybury and Sons have always been very keen to merge with us, you know?\"\n\nI nodded. It didn't surprise me. They were slightly bigger than us, slightly more modern, though in my dealings with them I hadn't been overly impressed with the quality of their work. Our firm, for all its old-fashioned ways that often drove me up the wall, had a number of prestige clients that Maybury and Sons would dearly have loved to acquire.\n\n\"Have they made you an offer?\" \n\n\"No. I, um, wanted to speak to you first.\"\n\nI was genuinely touched by that. I wasn't even a partner, though I knew I probably deserved to be offered to be made one soon. I had been carrying the firm for a number of months now, and he knew it.\n\n\"I've never really rated Maybury that highly, really, Andrew. Just between us.\"\n\nI should step back here and perhaps explain some of the facts of life for those who run small firms. Often the business is entirely wrapped in one or two people, and if they want to retire, it can be a challenge to find somebody who's prepared to offer much money for what's left after they've gone. A Bishops law firm without the afore-mentioned Mr Bishop would be a shell of a thing in many ways.\n\nOf course, Maybury and Sons would know this as well as anyone. If Mr Bishop wanted to retire, he wasn't in a strong negotiating position. If they just waited, he would have to simply shut down the firm and shuffle off with no extra capital at all, just the savings - if any - that he'd managed to put away during his working life. But they would probably want to offer him something, be able to announce it as a merger to reassure those bigger clients that there would be a continuity of sorts, just in case they were tempted to move their business to bigger, London-based firms.\n\nBut how much would that be worth, I wondered? What sort of offer did I need to come up with to tempt Mr Bishop to hand the business over to me? And could I possibly raise the funds I needed?\n\n\"I don't hugely rate them either,\" I said. \"Mr Bishop... I need some time to digest this. Could we speak again later in the week, perhaps?\"\n\n\"Certainly, Andrew.\" He looked relieved. It is always good, when you're trying to make an exit, to have as many options as possible. He probably had a shrewd idea of my finances and correspondingly low expectations. There was certainly more than a touch of self- interest in him implicitly inviting me to make an offer, but it was also quite flattering.\n\nWe shook hands and I retreated to my office to ponder. For the first time in a long time I barely thought about the girls for an hour.\n\nAnd then my phone buzzed with a message, and I learnt that they were leaving.\n\n**\n\nIt was the bookshop owner who had spoilt things.\n\n\"He wants to marry Mummy,\" sobbed Jen. We were sitting in a caf\u00e9 in one of the more down at heel parts of town, where there was relatively little risk of being seen by anybody who knew us. All three girls were there. Eleanor looking grave, Kaz for once quiet and subdued, and Jen in tears.\n\n\"We're very pleased for her of course,\" said Eleanor. \"But she's got the idea it should be a new start for all of us.\"\n\n\"You're old enough to make your own decisions,\" I said carefully. I knew how protective these girls were of their mother.\n\nEleanor stirred her coffee. \"Yes... but I feel like she really wants us to come with her.\"\n\nIt transpired that the bookshop owner actually owned a chain of bookshops. Whereas we had pictured a rather bumbling, tweedy elderly man in a beard and with patches on the elbows of his jacket, it turned out he was only a little older than me. And his bookshops, rather than being dusty backwaters with tottering piles of unloved second-hand Agatha Christie paperbacks, were trendy and brightly lit with cafes and piped music and enthusiastic highly trained staff.\n\nWhat he was proposing was to move them all closer to his headquarters, a much bigger town the other side of London. This was where he spent most of his time. \n\n\"He's got a really nice house,\" said Kaz. \"She showed us pictures. And a place in Spain. I mean, that'll be nice. Having holidays in Spain whenever you want.\"\n\nJen snuffled. \"I don't want to go to Spain! I want to stay here... with you and Andy and everybody I know.\" \n\n\"What about your studies?\" I looked at Eleanor. \n\nShe shrugged. \"I finish in the summer. Then I had to decide what I wanted to do anyway. Jen's a year behind me... Mum's already picked out a couple of colleges she could go to. Much better than then one we're at, if we're honest. Really good ratings, and the facilities do look amazing.\"\n\nJen scowled at her sister. This was a rare occurrence, but just then Jen regarded even the most half-hearted support for the move as a bitter betrayal.\n\nI pondered. Part of me, I'm ashamed to admit, wondered if this wasn't a good thing. I would miss them dreadfully, not just for the sexual fun and games but I genuinely adored all of them. Of course, Kaz would still be around but it wouldn't be the same. But they had their own lives to lead, and perhaps this was a chance for a clean, if heart-breaking parting of the ways.",
        "Of course, Kaz could read me like a book.\n\n\"I know what you're thinking Andy. But we'll find a way. This is not going to split us up, you understand? I won't allow it.\"\n\nJen looked at her hopefully.\n\n\"Do you mean that Kaz?\"\n\n\"I really do,\" said Kaz, and for a few moments I believed her too. But I was a realist. Forces were pushing in different directions, and sometimes you have to accept that and go with the flow.\n\nJen, a little calmer now, decided to explore a back-up plan. \"Could you move there too, Andy? There must be loads of jobs for lawyers there. Please?\" \n\nI puffed out my cheeks. \"Well, I kind of have some news in the department as well.\"\n\nI explained about Mr Bishop retiring, and the remote possibility that perhaps I could take over the practice. They knew that this was something I'd thought about, and Jen's shoulders slumped.\n\n\"It's not definite,\" I said hurriedly. \"I probably can't raise enough money anyway. And to be honest... it doesn't seem quite as important now.\"\n\nEleanor smiled at me, and reached over and took my hand. \"You have to try,\" she said. \"This is what you wanted, and you have to try, Andy. Kaz is right. We'll figure something out.\"\n\nSo we sat there, a rather gloomy and reflective foursome, sipping our coffee and trying to find things to say to cheer each other up. But I admit, the idea of having my own practice now seemed much less important than it had done.\n\n**\n\nIt felt like I was going through the motions, but I resolved to follow Eleanor's advice. This was a chance that wouldn't present itself again anytime soon, if ever, and I should try and seize it with both hands.\n\nI was a good lawyer, but I was not particularly good with money. I had some savings but they had been placed unimaginatively in low-interest savings accounts. If only I'd bought some bitcoin when you could still buy a few thousand for the price of a pizza. I rented my flat, so there was no capital there. There was no immediate prospect of any wealthy family members expiring and leaving me life-changing amounts of wealth - not that I would have wished that on any of them. \n\nI spent an evening working my way through the company invoices for the last twelve months - Mr Bishop had agreed that I should have full insight into the finances if I was to try and make a fair offer. The practice was in fair if not spectacular shape, with several dozen clients on modest retainers that kept the cashflow healthy.\n\nI tapped away at a spreadsheet but I knew deep down it was no good. I was going to have to let it go. Perhaps that meant I could follow the girls to their new home, but did I really want to do that? Something about it seemed unhealthy to me. \n\nIt was late and I knew I should sleep. I also knew I wouldn't be able to. \n\nI was flicking idly through Netflix - it was amazing how much there was that I had zero interest in watching - when my phone buzzed.\n\nJust nearby. Can I come and see you?\n\nI tapped back. \n\nSure. Just buzz.\n\nA few minutes later my intercom buzzed and I pressed the button to open the door. I listened for the footsteps on the stairs, then opened the door as they reached my floor.\n\n\"Hey,\" I said. \"What are you doing out and about so late?\"\n\n\"I've been thinking. But do you mind if we go to bed first? I've been randy all day.\"\n\nI pushed the door open wider to let her slip past me into the room.\n\n\"Of course,\" I said. \"Nice to see you, Kathryn.\"\n\n**\n\nShe used me quite as single-mindedly as Jen at her most relentless, but that suited me fine. A good, hard, almost impersonal fuck was exactly what I needed. It was short and sweet, and in probably no more than ten minutes she was lying beside me, flushed and gasping as my seed slowly trickled out of her.\n\n\"Mmm... god, that was exactly what I wanted.\"\n\n\"Me too.\"\n\n\"Don't tell the others I was here, OK? It feels like cheating, somehow. I'll tell them some time.\"\n\n\"OK,\" I said. \n\nShe lay snuggled beside me for a few more minutes. I held her close, and reflected that even if Eleanor and Jen were to move away, Kaz would still be around. And as long as she was happy to do this on occasion, things could be a great deal worse.\n\n\"You belong to Eleanor really,\" she said, and I was startled, not for the first or the last time, at her ability to sense where my thoughts were.\n\n\"I like to think I belong to all of you,\" I said softly, and kissed her on the forehead. It was sweaty and tasted faintly of salt and vanilla.\n\n\"Yes, you do, but Eleanor most of all. We all know it, and I think you do too. She's lovely, and she's completely in love with you, and you'll never find anybody better than her.\"\n\nSome girls would have said this in the hope of being contradicted, perhaps, but not Kaz. She spoke quietly but with complete certainty. She really was, in many ways, the wisest and most mature of all of us.\n\n\"Do you think you'll be able to buy the practice?\"\n\n\"I can't see how. It's... two or three years too soon, really. If I'd been a bit smarter with my money, maybe. But... no bank would lend me the money.\"\n\n\"But this is something you really want, isn't it?\"\n\nI paused. I hadn't been sure, but when she said it like that, there was only one answer.\n\n\"I really do,\" I said.\n\nShe kissed me approvingly, as one might a child who has given their parent the right answer.\n\n\"Then we're going to sort it.\"\n\n\"I can't see how. And I don't see how you can help.\"\n\n\"Listen,\" she said. \"Just listen. You're going to probably freak out a bit at first, but just listen.\"\n\nSo she told me her idea. And I did, indeed, have quite considerable objections to it which I expressed in detail in quite a forceful manner. But she was persistent, and I found there is a certain disadvantage trying to argue with a beautiful and nubile young girl when she's lying naked in your arms.\n\n\"Fine,\" I said in the end. \"I think it's possibly the worst idea ever, but fine. Let's do it your way.\"\n\nShe kissed me again, more passionately this time.\n\n\"Good. I should really go, but I just want to suck you off quickly before I do. Lie back.\"\n\nI lay back. There was of course no way I could come again so quickly. \n\nAnd, of course, once again she proved me wrong.\n\n**\n\nKaz's father was a short, blond-haired man in his early forties. He wore a smart suit that looked expensive and Italian leather shoes.\n\n\"You're a friend of Mrs Medhurst?\"\n\nI nodded. That was stretching a point more than a little, but I couldn't really say that I had had enjoyed, and hoped to continue to enjoy, sexual relations with both of her daughters. Along with his own daughter.\n\n\"Kathryn tells me you would like me to review a business plan of yours.\"\n\n\"That would be kind of you,\" I said. \"Though it's not so much a plan as a vague hope, really.\"\n\nI smiled. He didn't smile back. He wasn't a smiling kind of guy, not when he was at work, anyway. I remembered his impersonal, perfect house and I wondered how a parent such as this, so apparently efficient and cold-blooded and humourless, could produce a daughter so full of life and mischief as Kaz.\n\nI explained the situation. I was completely honest about my finances and took him through the basic accounts of the firm as it currently stood. I told him a little about my own plans for the practice.\n\n\"I know the building,\" he said. \"I've never used... Mr Bishop, but I know of him.\" His tone implied that he himself would rarely stoop so low as to use a mere country legal practice. When he did a deal, I was sure he used only the top London firms. And that was probably the right choice for somebody like him.\n\nKaz, a few nights previously, had warned me that I probably wouldn't like him. \"He's like a robot,\" she said, checking herself in a small compact mirror. She spotted a small dot of semen on her cheek and wiped it away with a tissue. \"But he's very good at what he does. If he can't find a way for you, probably nobody else can.\"\n\nI had been a little doubtful about this, putting it down to daughterly pride, and I was more than a little concerned about how she would make the introduction. But again, she'd persuaded me that if I was introduced as a friend of Eleanor and Jenny's mother, that was perfectly safe.\n\n\"I don't think they've met more than two or three times the whole time I've known Lennie and Jen,\" she said. \"He just doesn't really do small talk or any kind of socialising. He just works and sleeps. Trust me. It'll never get back to her.\"\n\nAnd so I sat opposite Kaz's father in a coffee shop - more upmarket and considerably more expensive than the one where I'd met the girls - as he jotted at a large notepad in front of him. He was utterly lacking in warmth or charm but he radiated total competence.\n\n\"Could I see the building?\" he said. \n\n\"The office?\"\n\n\"Yes.\"\n\n\"Um... sure. You mean... now?\"\n\n\"I have an hour,\" he said. \"I think the building could be the key to it. How long left on the lease?\"\n\n\"Six years. Just over. Mr Bishop took out a twenty-five year lease a long time ago. We probably pay quite a bit below the market rent.\"\n\nHe nodded, but wasn't interested in my observations. His mind was elsewhere, calculating angles and cashflows and tax deductions.\n\nWe walked over to the office and I showed him around. It was nearly lunchtime. Mr Bishop was out and only a couple of the paralegals and a secretary were there.\n\n\"You got a copy of the lease?\"\n\nThe lease had been included in the papers I'd been reviewing along with the company finances. I passed it over and he rifled through the pages, then grunted with satisfaction.\n\n\"Good,\" he said. \n\nOutside he shook my hand perfunctorily and said he would email me his thoughts. I thanked him profusely and with such obvious sincerity that for once his mask slipped slightly. \n\n\"No need for all that. It's just a favour for my daughter,\" he said. \"She seems to think quite highly of you.\" His tone indicated clearly that he couldn't for the life of him see why.\n\n**\n\nThere were meetings - many meetings - that followed over the next few months. With one bank, then a second bank, with other lawyers and then after that it was builders and then an architect and then with the landlord of our building. I won't bore you with the details. Mr Bishop was dubious at first, it being such a radical idea, but I gradually persuaded him it was actually feasible. It helped that I was able to offer him a six figure sum for his practice, a figure we both knew was considerably more than what Maybury's would have been able to offer.\n\nFinancially I was stretched as thin as I could be without breaking. But I knew I could make it work. And when I did have the odd moment of doubt, when suddenly it just seemed hare-brained and ridiculous, I had three eager voices reassuring me that they believed in me totally. And who was I to let them down?\n\n**\n\nKaz's father probably spent no more than two hours in total helping me. He told me the plan was feasible but needed some refinements which were both obvious and brilliant. He advised me on the best way to obtain finance. He suggested some people I could speak to. He did this in a cool, brisk, off-hand manner that was difficult to warm to. I like to think I can get on with most people, but at no point did we have any moments of humour or warmth. He was probably the most charmless, unlikeable man I have ever. And I will be forever grateful to him, and to his wonderful daughter for being smart enough to ask him.\n\nAnd so it was that a little less than six months later I stood outside the building in the fading evening light, looking at it with more than a touch of pride. \n\nIt was a three-storey building. The ground floor now was a small business centre, home to three small firms who rented space from me by the hour. The offices had been completely refurbished and were now bright and modern with coffee machines and printing facilities and the obligatory super-fast internet. \n\nThe first floor was now my offices. Yes, it was much less space than we'd had before, but really it was just a base, a place where I and what I planned would be my growing network of associates would meet regularly to discuss anything essential and to meet clients who wanted to come to us. But most of our work would be done elsewhere, at home or on the road or at clients' offices. A modern law practice could get by with much less space, I was sure of that.\n\nAnd on the top floor, in what used to be the attic void, was now a cosy one bedroom flat. It would be stretching a point to call it spacious, and in a number of places you had to stoop, but it served my purposes admirably. \n\nWhen Mr Bishop retired Mary went with him. I suspected there was more to their relationship than met the eye. That left a gap, so I hired a very smart and motivated local girl to be my new office manager and also look after the firms in the ground floor offices. So they get some secretarial and administrative support as well as part of their deal, which is a big plus. \n\nIt was going to be a tough first few years. I knew that. But as I gazed at the building I knew I'd done the right thing. Everything had slotted into place more perfectly than I'd dared. \n\nI looked at my watch. Time to get going.\n\nI went back inside and up to the first floor. The girl I'd hired looked up at me brightly as I entered.\n\n\"You got a call from Bryants. They'd like to see your proposal again on Monday. The whole board this time.\"\n\nI whooped and punched the air. Not very professional, but that had been a big pitch. If we did win their business, that would pretty much guarantee our cashflow for the next two years at least. And if they wanted the whole board there... that was a good sign. A very good sign.\n\n\"You should probably come in on Sunday and go through it all again. Be absolutely word perfect. I'll come in too and help.\"\n\n\"You sure, Lennie?\"\n\n\"Of course.\" She smiled at me. \"And I'll tell Jen and Kaz to go easy on you. You'll need to be thinking straight.\"\n\n\"Or we could just stay here this weekend? Use the flat?\"\n\nEleanor looked tempted but shook her head. \"We should take this evening off, and tomorrow morning. Maybe come back here tomorrow night so we can make an early start on Sunday.\"\n\nGod, I loved this girl.\n\nShe looked at the clock. \"Now, we'd better be on our way. Otherwise Jen will start texting me.\"\n\n**\n\nThey had persuaded their mother to let them stay, and Kaz had joined them as a lodger. She'd simply told her parents she was over there all the time anyway, so why not move out properly? They hadn't seemed that upset, she said. Jen and Eleanor had both hugged her and said that it was going to be wonderful.\n\n\"All four of us, here, the whole time!\" Jen almost bursting with delight.\n\n\"Andy and I have to work,\" Eleanor had warned her. \"And you have to study. It's not going to be all about sex, you know.\"\n\n\"I know,\" said Jen dreamily. \"But there is going to be quite a lot of sex, isn't there?\"\n\nEleanor patted her sister's hand. \"Of course there is. As much as Andy can manage. Which we know is quite a lot.\"\n\n\"Don't forget me,\" said Kaz. \"You can have me as a backup whenever you want, Jen.\"\n\n\"Yum,\" said Jen. She'd become quite the connoisseur of Kaz's oral skills. \n\nEleanor looked at me and smiled. \"You're taking on a lot, Mr Collins. A new business, and three needy girls. We'd better take good care of you.\"\n\n**\n\nI drove Eleanor through those now familiar roads as the sun faded on the horizon. The flat in the office was a convenient fiction, really. I did stay there occasionally, but most nights I stayed with the girls in their house. It was only when their mother visited that I was hastily sent back to town.\n\nWe laughed when my phone buzzed. \n\nHurry up god your so slow. I need you now!! xx\n\n\"My sister,\" sighed Eleanor. \"My lovely sex mad sister.\"\n\nIt buzzed again.\n\nAfter Kaz of course its her turn first tonight. Xxxx\n\n\"Not to forget your lovely sex mad friend,\" I said.\n\nI reached over and put my hand on her leg as I drove. She put her hand on mine. It was small and soft and the touch of her, even now, was electric.\n\nWe drove like that for the last half mile home. Then I turned into the drive, killed the engine and switched off the headlights. The cottage in front of me looked warm and welcoming. I could see Kaz through one of the windows, busying herself with something in the kitchen. Jen would probably already be galloping towards the front door to hurry us in.\n\nI thought about hat first night all those months ago. The one eye of that beautiful girl looking at me through the door. Her sister taking my coat. Her friend looking at me so appraisingly. The first time I bowed my head between Eleanor's legs and tasted her. The first time I slipped inside her. Jen, frantically writhing on top of me, using me so greedily. Kaz, on her knees and ready...\n\nI must have been lost in a reverie because I heard a soft laugh from the seat beside me.\n\nEleanor reached over, turned her head towards mine, and kissed me softly on the lips.\n\n\"Come on Andy,\" said Eleanor. \"We're home.\""
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "mature",
        "older man",
        "sisters",
        "teens",
        "younger women"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/on-my-way-home-ch-03"
}