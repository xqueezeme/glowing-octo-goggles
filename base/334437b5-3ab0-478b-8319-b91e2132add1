{
    "title": "The Cursed Tattoo Pt. 12",
    "pages": [
        "Author's note: This was the first story I ever wrote, so I'm sorry for all the vagaries in the pacing and focus of this frankly quite a hefty chunk of writing. Thank you all for getting this far and I hope you had some fun along the way. And thank you for all the positive feedback.\n\nBut What Ever Happened to Claudia?\n\n\"Hi, Natalia. Is Claudia here? I'd like to talk to her,\" a familiar voice said. Natalia snapped out of her reverie and looked up from her screen. She had heard right.\n\n\"Hannah. What are you doing here?\"\n\n\"I want to talk to Claudia.\"\n\n\"Why?\"\n\n\"Why do you think? I want to talk to her about my mom, and Ryan, and all that stuff.\"\n\nNatalia looked around and saw that Annie was watching them from her cubicle. \"We want nothing to do with any of that anymore. I'm sure she doesn't want to talk to you,\" Natalia said.\n\nHannah silently disagreed. She felt she understood Ryan's women better than Natalia did. \"Could you just tell her I'm here and ask her if she wants to see me? If she says no to me herself, then I'll go, no problem,\" she said.\n\nNatalia scoffed, but tapped a button on her headset. \"Yes boss, there's a visitor here. Ms. Chandler, it's Hannah Andrews, Melinda's daughter... She says she wants to talk to you about, you know... Yes... Yes, I think so... Very well, Ms. Chandler. Thank you.\" Natalia pushed the button again.\n\n\"She will see you. But if you are trying to somehow pull her back in, I'll... Just go,\" Natalia said.\n\nWow, talk about a dedicated secretary, Hannah thought. She quickly gathered herself and stepped into the office.\n\nAfter she was gone, Annie immediately came to Natalia, to ask what was going on. Natalia didn't personally care for Annie but she knew Claudia was still friends with her so Natalia had chosen to tolerate her, too. The two waited outside. Either one of them would have wanted to eavesdrop but neither wanted to stoop to it in front of the other.\n\nHannah had never properly met Claudia Chandler before. The only time she had seen her was at the apartment, once. Claudia had been wearing nothing but a towel then and she'd been high on Ryan's love juice. The person staring at Hannah from behind the desk was a completely different woman.\n\nClaudia still carried herself with poise, but underneath it all she was visibly tired, and even sad. Hannah had imagined Claudia as a fearless leader. Now, she looked like just another working stiff. She was beautiful but she wasn't glowing. There was even a strand of gray in her hair. Claudia waited for Hannah to talk.\n\n\"I'm sorry. I know I don't know you, but I don't know who else to go to,\" Hannah said.\n\nClaudia tensed. \"Has he gotten to you, too?\" she said.\n\n\"What? Ryan? No. I believe he really doesn't want to. But I'm not sure about everyone else. I worry about my mom. Do you think she would be happy if she got out?\"\n\nClaudia looked Hannah in the eye, sighed, and then looked down.\n\n\"I see,\" Hannah said.\n\n\"It's not for me to decide for other people, but for me, it has been... difficult,\" Claudia said.\n\n\"Ryan is kind of a good guy, isn't he? Can I trust him with my mom?\" Hannah said.\n\nClaudia bit her teeth. Fucking teen bitch, she thought. You're as good as a fucking buttwhore already and you don't even know it. You and your mom can suck that fucking... I'm sorry.\n\n\"Your mom is gone. There's no getting out of it. Honestly, she's happy,\" Claudia said. She swallowed. \"She's happy with him. She really is. They all are. But you should stay away. Because once you're in, there's no getting out.\"\n\nHannah bit her lip. \"How about you? You got out,\" she said.\n\nClaudia sighed. \"No. No I didn't. I may be away but I'm not out. I'll never be. I still think about him every day, and I see him everywhere. There's no way I can ever be with anyone else. He still has me, completely. It was a mistake to leave, and I'd go back if he asked. It's horrible. Don't let him do this to you.\"\n\n\"I'm sorry,\" Hannah said. \"I shouldn't have come here. I don't know what happened between you two but I'm sorry for digging up the past.\"\n\n\"No. You came to the right person. I know why you're here. Let your mom go and move somewhere far away. That's my advice to you. Save yourself, run away, but there's nothing you can do for her, anymore,\" Claudia said.\n\n\"Thanks,\" Hannah mumbled. \"Sorry I bothered you.\"\n\nShe headed off, not stopping to talk to Natalia or Annie. Annie started to wave her goodbye but stopped when she realized Hannah was not going to look back.\n\n---\n\nRyan was getting over his habit of spending too much time on the couch. He was running around the apartment, playing tag with the girls. Everyone was laughing and yelping. The game would have been easy since all the girls were in their ridiculous heels, but that was not what this was about.\n\nRyan lumbered around like a caveman and growled. Whenever he decided to catch one of the girls he just grabbed their boobs and maybe fingered them a little bit, and then let them go again. It made no sense how much fun the simple game was for everyone.\n\nThe doorbell rang. Ryan stopped. There was something particular about the way it sounded, even though the buzzer was electronic. His heart skipped a beat.\n\nOnce again, like always, Remy beat him to the door. She had learned her lesson, though, and put on the safety chain. She didn't mind being in just her collar, some heels, stockings, and a garter as she cracked the door. And she did have he plug in, too, of course.\n\nRemy's smile turned into a frown as she saw Claudia. She felt instantly bad about reacting like that and tried to smile again. \"Oh... Sorry. Do you want to come in?\" Remy said.\n\n\"Yes,\" Claudia said.\n\n\"Are you sure?\"\n\n\"Yes. I'm sure,\" Claudia said. She was calm and resigned. She still looked as good as ever in her sharp skirt suit, despite the little signs of tiredness.\n\nRemy opened the door. A hush had landed, and it deepened as Claudia looked around. Claudia was glad to see her friends again, and angry at herself. Everyone was so happy. She'd given it all up, and for what? Even Ellie was smiling, which was strange, and quite unsettling. She looked like a person.\n\nThere were new girls, too: A surfer blonde and an intense little Indian girl. Both seemed well adjusted to life in the house, Claudia deduced, based on their lack of bras or any upper body clothing. Those are some nice tits, though, on both of them. How the hell does he keep doing that?\n\nThen there was a black girl in the corner. Holy shit! Is that the cop? Claudia thought. The officer had her normal civilian clothes on, and didn't seem to have that mad gleam in her eyes, at least not yet.\n\n\"Hello, Claudia. Why are you here?\" Ryan said. Even just hearing his voice sent shivers down her spine.\n\nMoment of truth, Claudia thought. She was happy there were a few strangers, and one almost normal person, here to see this. It would be a shame for her show to play for an overly compassionate audience. She wanted to embarrass herself. Claudia got on her knees and prostrated.\n\nRyan scoffed, but then went to her. \"What do you want?\" he said.\n\n\"Take me back. Please. I beg of you. I made a huge mistake. I'm so sorry. I will never leave you again, and I promise to be your best slave,\" she said.\n\n\"Come on, Claudia. This is not you. Get up,\" Ryan said.\n\n\"It is now. I've learned my lesson. I was wrong. You were right. It was all my fault. I did this to myself.\"\n\n\"What? No. I treated you badly. You don't need to be here if you don't want to. Please, at least get up,\" Ryan said.\n\nClaudia shot to her feet. She hugged Ryan, and he let her. \"Please forgive me,\" she said, now sobbing.\n\n\"There's nothing to forgive. Please, you forgive me,\" Ryan said.\n\n\"I was afraid. It was petty. I was scared of letting go and losing control. Everything was perfect. You were perfect. I just couldn't let myself be happy. I couldn't let myself be happy with you in control. I was so stupid. But I understand it now. I belong to you. I need you to own me, and completely dominate me,\" Claudia said.\n\nShe had already forgotten about the audience. Her focus was completely on her Master now, and she felt supremely free. Even if Ryan would cast her out she would still remain forever proud of having had the guts to face him and tell him the truth.\n\n\"I know myself,\" Claudia said. \"I would never have found my former idea of a perfect man anyway. But now, I don't need to rely on a fantasy anymore. You are real and you have become my perfect man. I will never want it any other way again.\"\n\nClaudia was sure that, for once, she looked as vulnerable as she felt when she looked Ryan in the eye, searching for forgiveness and approval.\n\n\"You can't blame yourself,\" Ryan said.\n\n\"No. I can,\" Claudia said. \"You know why? It was never about anything you did to me. It was always about power, and only power. I've always wanted power, to be in control. I was jealous of you.\"\n\nShe tried to kiss him but Ryan pulled back. Claudia felt a terrible twist in her gut.\n\n\"I have to tell you something,\" Ryan said. \"The girls finally found a cure -- Ellie, Jasmine, Erica. If you want to, you can be completely free. All the ways the curse affected your mind, they would fade. You can truly go back to the way you were before any of this ever happened, if you want to. I promise you: this just happened and I would have told you about it as soon as possible.\"\n\nClaudia smiled at the perfect irony. She even laughed out loud. Her answer was clear, though. \"No. Absolutely not. That changes nothing. Like I said, you're the only man for me now. It's either you or nothing. After everything I've felt, I can't go back to a normal life,\" Claudia said.\n\nNo one else in the room was all that shocked to hear the news about the cure. Everyone had already heard enough gossip about the budding revelation to have made up their minds. Even Candice had surrendered to her fate. She knew the others still viewed her as a potential threat so she had resigned to the fact that they would not let her go, not this soon after everything she had done.\n\nClaudia didn't wait for Ryan to answer. She was done talking. Her apology had been heard and now she needed to do whatever it took to win him back. She bent over the backrest of the sofa, lifting one leg over it. She pulled up her skirt.\n\nRyan could read his initials on the base of her buttplug, but something about it didn't seem quite right. He reached in and caressed it. It felt a bit too solid.\n\n\"I made it bigger. I'm sorry. I hope you don't mind,\" Claudia said. \"It's closer to your size now. I wear it every day. It reminds me of you and I don't think I could've survived without it.\"\n\nThe time for talk was over. Ryan pulled the plug out and replaced it with his cock. Claudia was almost ready but it was still a bit too much, in just the right way, when Ryan forced himself balls deep with that very first stroke.\n\nIt was pure heaven. Claudia had already been a hundred percent sure with her choice, but now that the energy coursed through her again, her confidence shot up beyond any measure.\n\nRyan was happy enough to cry, too. There was something uniquely perfect about Claudia's asshole. Or not even that, it went beyond her mere physical characteristics. There was a unique, spiritual connection between them whenever Ryan took her in the way only he ever had. He couldn't help himself. He picked up the pace.\n\n\"Harder, you fucking bastard,\" Claudia grunted. \"If there's an ounce of decency in you, then you better make sure I never forget again. You make that fucking ass remember who owns it.\"\n\nRyan obliged. He tore into her clothes enough to get a hand on one of her juicy tits. He squeezed it hard. He pulled her hair and bit her neck, and fucked her ass hard enough to push her over the backrest and onto the couch. Claudia let herself go completely. She cried and wailed, releasing months of regret and torment into the cushion she was biting down on.\n\nThe doorbell rang.\n\n\"Fuck this fucking bullshit,\" Ryan shouted. He was never going to stop. He slammed into Claudia harder. He wanted her to remember who owned her ass, too. He truly did not care who was on the other side of that damnable door anymore.\n\nEven though the noises were slightly muted, Natalia could hear her boss's screams as soon as the door cracked. Remy glared at her.\n\n\"Please. I'm not here to fight. I just... I have to understand. I just want what's best for Claudia,\" Natalia said. \"I promise I will leave you alone and never come back. I just need to understand.\"\n\nRemy shut the door in her face and Natalia winced, but then she heard the chain rattle and the door opened again. Natalia stepped in.\n\nThe smell of sex was already in the air and Ryan's girls were entranced by everything that was happening on the couch in front of them. Almost all of them were topless or completely naked, and wearing their high heels.\n\nNatalia noticed the black woman. She was the only one who had normal clothes on but her face was just as flushed as the other whores', and her breathing just as shallow. Natalia gasped when she realized the new woman was the cop who had once almost arrested Ryan.\n\nThe backrest of the sofa prevented Natalia from seeing Claudia, but Natalia could see Ryan, and his face. It was all red, contorted with effort, almost demonic, but Natalia's horror was only aimed at herself. She could finally understand how the other women could yield and submit to him, to someone with a face like that.\n\nRecently, she'd often seen a face like that in her own dreams, too.\n\nHer body on autopilot, Natalia crept ever closer, until she could finally see over the back of the couch, and see Claudia.\n\nClaudia was face down, ass up, most of her clothes still dangling on to her sweaty body. Her makeup was already running. Claudia's face was twisted in beautiful agony but Natalia could sense the ecstasy behind Claudia's closed eyes, too.\n\nThere was an animalistic hypnotism to Claudia's screams and Natalia didn't even notice the other women subtly circling in on her.\n\nNatalia hated how horny it drove her to see the woman she loved get savagely ass-fucked by a sweaty, grunting caveman. She hated how starkly she could imagine Claudia's joy in surrendering to his treatment -- the joy of being used and taken. It was clear how thoroughly Ryan appreciated every inch of Claudia's body, even when he demanded so much from it. Natalia didn't know whose place she wanted to take, Claudia's or Ryan's.\n\nClaudia opened her eyes and looked at Natalia. Natalia could read a thousand words in that gaze. She broke into sobs. There was no question about it in her mind anymore. Natalia had gotten the confirmation she had wanted. She was sure now. Claudia belonged to Ryan, completely and forever. There was nothing Natalia could ever do to compete. Claudia came.\n\nEver vigilant, Eleftheria had read Natalia perfectly. She crept up to her and whispered into her ear. \"You love her, don't you?\"\n\nNatalia let out a quivering sigh.\n\n\"There's a way you could be with her,\" Ellie said.\n\nNatalia didn't mind the taunting. It was fuel for a fire that was already blazing. She was at a tipping point, not sure what she wanted anymore. She stared at Claudia taking her relentless ass fucking. It lasted for a long time, and staring at the sight did things to Natalia's brain.\n\nRyan left Claudia's ass wide and gaping. Cum oozed out of it and her cheeks were bright red from all the spanking that naturally goes along with such an utter pounding.\n\nNatalia whined softly. She still wanted to somehow save Claudia, but she had gotten her wish. She understood now.\n\nRyan got a glass of water. He stopped and stared at Natalia, his cock still hard and slimy.\n\n\"I...\" Natalia whimpered, cowering under his imposing presence. There was no way for her to see him as a mere man, anymore.\n\n\"She wants to bargain with you,\" Ellie said. \"She's in love with Claudia and she wonders if she could offer you something in exchange for letting her be with her.\"\n\nNatalia blushed even harder and cast her eyes to the floor. She did not protest, however, or challenge Ellie's evaluation of her situation.\n\nRyan took in her somewhat lanky figure. A bit pathetic, but she has potential, he thought. He looked around the room, seeing how his other girls had evolved in their stance and posture, and attitude. I'm sure I can make her strong and glorious, too.\n\n\"I...\" Natalia said.\n\nRyan grabbed her neck and pushed his other hand up her skirt. Natalia was wearing pantyhose instead of stockings. That will never happen again, Ryan thought. He tore into them to maul her scrawny thigh. She wasn't entirely too thin, but she would shape up.\n\nA terrible wall of orgasmic shock washed Natalia's mind clean. She lost all sense of time and place, and of herself. It was a life-changing moment, one she would never look back from.\n\nRyan lifted Natalia's flaccid body over his shoulder with ease. He grabbed Claudia by the collar of her shirt with his other hand. He didn't need to ask anymore. He knew all of his slaves loved it when he took more. He was in charge now and the only input he needed from his harem was for them to gather at his feet in adoration.\n\nClaudia yelped when he pulled her off the sofa. She held on to his arm and let him drag her away.\n\nIn the bedroom, Ryan fucked Claudia's ass even more. After Natalia recovered, he made her lick Claudia's pussy while he kept fucking Claudia in the hole of his preference. He knocked Natalia out again just by sending another jolt of energy into her through Claudia's body. The pattern repeated and they went on for hours.\n\nThe other girls joined in during the night. Remy saved Claudia and carried her into the bathroom, to care for her ravaged ass. A joy filled Claudia as she returned to her senses. She knew she would feel it for days and it made her feel complete. She was safe. She was home. No words were needed. Remy understood her fellow slave perfectly. The two women shared a deep, passionate kiss while they caressed each other under the soothing spray of the shower.\n\nRyan took Natalia. He penetrated her deeply and profoundly, but he was done with her quite quickly. The rules had changed and from now on new girls would need to earn their place. He shot a load all over her vacant, delirious face, letting most of it go to the other girls who came in to lick the new girl clean.\n\nRyan used his slaves. He wanted to celebrate Claudia's return with them for the entire night but his emotions were still too raw. He fucked them for maybe and hour and gave them some more cum, but then he had to get back to Claudia herself. He found her with Remy in the bathroom.\n\nSeeing the fear, mixed with hope and expectation, in Claudia's eyes finally started to heal Ryan's blazing and fuming soul, too. He could tell that despite her exhaustion, Claudia would give herself to him again and again, if he asked her to. He could tell she would gladly let him fuck her to death if that's what it took. He just hugged her and held her, instead.\n\nRemy started to gently suck him off and they held their embrace for a long time. It felt like a wedding, but one that was meant for the eyes of the gods, not for some frivolous audience of random mortals. This was a true union, destined to last forever.\n\nHoneymoon\n\nFuck this fucking bullshit. Fucking white people shit, Candy thought. It had been a constant orgy since Claudia came back.\n\nCandy looked around. She was in a scene from one of those corny old movies, like Eyes Wide Shut, or something. Just tits and ass everywhere -- a groaning mass of heaving female bodies. Ryan was the only man there but he did the work of many.\n\nDespite herself, Candy was hooked. She wanted that cum. The stuff had forced her to rearrange her priorities. The hot, sticky gunk had taken the number one spot, of course. Serving and protecting the people of this fine city was still fairly high on the list, too, but Master's cum was a clear winner. Well, a thick, creamy, very opaque winner, more precisely.",
        "The adjustment could have been a stressful time for her, but it just so happened, Ryan's cum was the absolute best stress killer she'd ever tasted. Candy's worries about her new situation, her demotion at work, none of it even touched her when she was high on that stuff. That, inevitably, made Candy redouble her commitment for more.\n\nShe'd never been much of a dyke, either. Candy was too competitive and mostly got on badly with other women. Even her chosen careers -- an athlete and a cop -- had risen from her early experiences. She'd seen the bullshit in both the world of women and the world of men, and she had chosen the bullshit of men as the one she would rather suffer.\n\nBut now, since there was still some of Ryan's cum in it, she didn't mind munching down on the pussy in front of her face. She just did what she would have wanted someone to do to her and it seemed to be doing the trick. The other women were mostly white, but all of them were slaves, willing slaves, so that kind of made them automatically equal, in a perverse bit of irony.\n\nCandy had never been the kind of woman to beg someone for an ass fuck, either. But now, that moment was rapidly closing. The other slaves were way too into it. Candy could not stop thinking about it. No one was pushing her to do it, the idea was just constantly on her mind. Each time she saw the face of one of her peers when Ryan defiled them like that, Candy became more and more desperate to feel what they felt.\n\nFor now, the magic monster took it's rightful place in her pussy. She shuddered. All was right again. Day-long orgies made perfect sense. Racial stereotypes and gender stereotypes could go fuck themselves, Candy just wanted to get filled with cock and cum. Being a sex slave went more than skin-deep.\n\nCandy. That's how she saw herself in her inner monologue, too, now. Just Candy, for Ryan. It was an insulting nickname, especially from a man, but the way it insulted her made her pussy wet. She wanted it now. There was an actual sweetness to the absolute way she wanted to submit to Ryan's every whim.\n\nCandy was on probation at work, and had been double demoted, and she didn't care. From now on, she would rebuild her career in a way that best pleased the man with the magic jizz. There was a beautiful simplicity to being a raging addict.\n\nEvery man Candy had ever met had been obsessed about her butt, whether she had any kind of a relationship with them or not. She appreciated the attention, to an extent, but it was maddeningly one-dimensional. Even with the good boyfriends, she'd still felt like just an ass on stilts sometimes. Now, she didn't care. With Ryan, being just a thing to fuck was more than enough.\n\nThe other girls were a force of nature. The whores, as she had once thought of them, were her friends now. They were completely disarming, and letting go of all common decency was effortless around them. Candy liked the shared showers and didn't mind the handsy ones, like Remy, groping her, even when Ryan was not around to see it.\n\nIt was almost startling how fast Candy had lost her hard edge and her distrust of other women after she'd allowed herself to settle in. What Ryan did to them made jealousy almost impossible, so that helped, of course.\n\nIn just the last few days, Candy had started feeling a sense of relief whenever she got back to her new home and finally got to go topless. Clothes were becoming a symbol of the outside world, whereas being naked meant she would get to have more sex with Ryan.\n\nThe festive atmosphere was still there. The very next day from her return, Claudia had gotten her tattoo, the same one the others had, the copy of Ryan's so-called curse. Stacy the blonde and Jasmine the actual-motherfucking-witch had gotten them, too, soon after.\n\nJasmine was the only one Candy was still leery of. The witch had, after all, dangled her in midair with invisible tentacles, and kind of face-fucked her with one, too. And the tiny cutie didn't let Candy forget it, either. Every time Jasmine licked her pussy she gave Candy a smug grin, letting her know she knew Candy still feared her.\n\nCandy kind of liked the little freak, though, and found herself strangely tempted to defer to Ryan, instead of fighting with any of the girls. She was not used to backing down so it amazed her how easy it was for her to just roll over and trust someone else to fix her problems for her.\n\nHannah, Melinda's daughter, was still hanging around. She kept a distance to all the sex but Candy was still happy for her. She was sure Hannah would join in, any day now. Hannah was the one Candy had been most worried about before Candy herself had been taken. Now, she understood there were no limits here. Ryan was best. For everyone. Taboos were completely pointless.\n\nHannah was wearing sexier clothes and makeup. Candy had not seen Hannah naked, yet, but she was already catching glimpses of the young beauty cupping her own little tits, or stroking her crotch through her clothes, right out in the open. The casualness of all the sexuality in the house was insidiously infectious. No one minded the young voyeur in the least so she probably didn't even realize how busted she was, many times over.\n\nOne time, after a night out, Hannah had even showered together with Remy and Lizzy. And knowing what Candy already knew about Remy, showering with her would not be in any way a wholesome experience.\n\nCandy could imagine Remy's hands slowly sliding all over Hannah's body. She could imagine how hot it made Remy when she imagined her hands were a proxy for Ryan's. The daydream turned Candy on even though she didn't even have a role in it herself. Maybe, in this fantasy, Candy actually wanted to be Hannah instead of Remy.\n\nRyan turned on the heat. The harder he fucked her, the harder it was for Candy to hold on to the threads of her idle daydreams. The cock alone made Candy's legs numb, and then a tidal wave of magical power made her mind stop wandering, or just stop all together. Logical thought was rendered impossible, but also proven needless. There was only cock.\n\n---\n\nCandy was already in the shower when she woke up. Her butt felt weird. She was in Annie's lap, on a little shower stool. Erica was poking at Candy's crotch.\n\n\"My ass. Did he...\" Candy said.\n\n\"Not really,\" Erica said. \"Trust me, if he'd really fucked you there, you'd know for sure. He probably just put the tip in and came inside.\"\n\nCandy wasn't sure if she was relieved or disappointed. She realized she'd been foolish to think it was up to her to choose when to offer her ass to Master.\n\n\"How are you holding up?\" Erica said, caressing Candy's pussy.\n\nCandy shivered. \"Does it matter?\" she said.\n\n\"I know what you mean, but we can share the load. If you're sore, the other girls can take more of the heat. He can be a bit devious when he sees a girl is struggling. It turns him on. But we have ways of distracting him. If it's ever too much, we can bail you out. There's no shame in it. We've all been there,\" Erica said.\n\n\"No. I'm fine. I'm a big girl. I can take it,\" Candy said, without even really considering the alternative.\n\n\"Have you done lots of anal?\" Erica said.\n\n\"No. Not really,\" Candy said.\n\n\"That's good to know. Don't worry. We can help you with that, too,\" Erica said. She pushed her dainty finger inside Candy's butthole.\n\nThe finger felt slick and went in easy. Candy was shocked by how good it felt. It must have been mostly the filthy, perverted nature of the situation that got her body going. Candy opened her legs more and moaned.\n\nErica giggled. She pulled her finger out and licked it.\n\n\"You can go back in if you want to, but we're going to go get some food,\" Erica said.\n\nCandy smiled a coy smile.\n\n\"Just go,\" Erica said.\n\nCandy skipped and bounced her way back into the bedroom, eager to lose herself in the ongoing orgy yet again.\n\n---\n\nRyan slammed into Claudia's ass. She was riding him, reverse cowgirl, and he met her with every stroke. The new form of the energy, now more and more under his control, allowed him total access to Claudia's mind. He could see the truth of her. He could see she wasn't lying. She really was at peace now, having finally submitted completely. It was sacred to her now, being able to give her ass to Ryan, and only Ryan.\n\nThe energy was floating all around, too, giving Ryan a supernaturally acute sense of his surroundings. He could feel the girls and see some of their thoughts and emotions, even when they were in the next room.\n\nThe energy was not contagious anymore. Ryan had full control of who he wanted to capture and who not. He could freely go back into the outside world now, if he wanted to, but he chose to stay in bed, for now. It had only been a few weeks since Claudia had come back, after all.\n\nRyan already knew what would happen. He saw it coming but he let it play out. He felt Eleftheria coming and he knew what she wanted before she even entered the room.\n\nThe girls stopped to stare, even Claudia.\n\nEllie was not just naked, but completely bare. She didn't even wear a hairband, and she had taken off all her jewelry. She'd even cast off her makeup, but that did not do much to her. Even so, she looked softer and kinder than anyone had seen her look before.\n\nThe girls stared as the naked angel knelt at the foot of the bed. Claudia was the only one who was unable to hide her surprise. The rest of them had been waiting for this to happen.\n\nRyan heard Ellie's silent plea in his mind. He'd never doubted her love for him. The time was right. The Angel had fallen and the Master had risen. They had passed a crossover point. Ryan was above Ellie now, and he was ready to take charge, once and for all.\n\nIn her mind, he let her know she was a slave now, same as the others.\n\nEllie gasped and a single, crystal clear tear rolled down her angelic cheek. She smiled as she crawled into bed. She took Ryan's cock from Claudia's ass and sucked it. Ellie had sucked that cock so much, but her new sense of freedom still overwhelmed her. Letting everyone see how weak she was was a transformative experience. She'd never felt so vulnerable, so deferent.\n\nShe did her best to open her mind to Ryan, to let him see how much it meant to her, how much she wanted to give him. She only held back on the Angelic core. Revealing that part of herself would melt this whole building and incinerate everyone in it, so she had to keep that part under wraps, but the rest of herself she strove to reveal.\n\nRyan knew. Ellie's loyalty had never been in question. If anything, it had been too much for him. Too scary. But Ryan loved her. It was easy to love her. At her core, she was such an uncomplicated creature, unlike the human women.\n\n\"What the fuck! Since when is this a thing?\" Claudia said.\n\nEllie let the cock slip out of her mouth and she used her lips to kiss and caress Claudia's red, puffy pussy, instead. The touch of the angel's lips was maddeningly sensuous. Claudia's pussy often went ignored so it had become very sensitive.\n\nClaudia was ready to blow, and as soon Ryan thrust his cock back into her ass, all the way deep, she came. She came so hard her arms gave and she collapsed onto Ryan's chest.\n\nNo one showed her any mercy. Ryan and Ellie kept fucking Claudia even while her orgasmic contortions were at their worst, Ryan with his cock in her ass and Ellie with her face in her pussy.\n\nRemy and Lizzy caressed Ellie's thighs and her ass. To Remy's surprise, it was Lizzy who beat her to it, and got to be the first to put her mouth on Ellie's own pussy. Remy didn't know how close Lizzy and Eleftheria had grown, in secret. Lizzy had kept Ellie's confidence.\n\nEllie knew who was licking her and she felt her first true sense of Sapphic bliss. Ellie had not been frigid. Even as an angel, she'd had the physical ability to feel pleasure. Now, though, her emotions were complex and nuanced, and the difference was huge. Having someone she loved and trusted lick her pussy was an unprecedented feeling.\n\nThe way she loved Ryan was so different and so absolute it left lots of room for Ellie to love her sister slaves in a myriad of different ways.\n\nIt took Claudia several minutes to recover, and she had still gotten no mercy from Ryan and Ellie. A familiar fullness still stretched her ass. \"...but seriously, what the fuck?\" Claudia continued, as if she hadn't gone unconscious in between.\n\n\"You still think I don't deserve to fuck an Angel? Well, she seems to disagree,\" Ryan said.\n\n\"I can see that. Fuck, um, I can feel it. But since when?\" Claudia said.\n\n\"Since forever. How hard would it be to believe she's been playing by her own rules since the beginning?\" Ryan said.\n\nThis got the other girls to pay attention, too, except for Lizzy. She was happily eating out Ellie, relieved to see all the secrets finally die. She was happy with whatever part she had played in giving Ellie the confidence to come clean.\n\n\"The fuck with this stuff,\" Claudia said.\n\n\"You're one of us now, completely. It's your stuff, too,\" Ryan said. \"Do you accept her apology?\"\n\n\"Yes,\" Claudia whispered. Her body was a good way toward her next climax, already.\n\n\"What, exactly, do you mean by 'since forever?'\" Remy said.\n\n\"I'll let her tell you all the details later, and you have my permission to punish her if you wish. Let's just say she's been mine for about as long as you have,\" Ryan said.\n\nSome of the girls gasped again. The orgy went on, uninterrupted. How ever they felt, no one resented Ellie enough to let it stop them from letting her join them in worshiping their shared Master.\n\nThe time came for Ellie to get her turn and she settled onto Ryan's lap. She let his cock bury itself inside her and she took her time, grinding him deeply and thoroughly. Ryan's hands caressed her body, her tits and her ass. The cock drove her wild and her budding orgasm felt realer than ever. Ellie had been able to perform quasi-orgasms at will before, but now Ryan was in control. It was more and more at his sole discretion when, and how hard, his Angel would climax. It was just one of the many ways Ellie loved to give him power over herself.\n\nWhen the orgasm hit her, Ellie had no choice but to let her wings spread. It was an involuntary spasm. Stuff flew all over the room as the mighty wings struck a beat. Her wingspan was enough to reach from wall to wall while the spines of her wings curled against the ceiling.\n\n\"What the fuck!\" Candy shouted.\n\nRyan held on to Ellie's hips, hard, to prevent her from yanking herself up into the air, and off of his cock. Ellie was rendered partly limp, almost falling to the side, but Ryan kept her steady, and he kept fucking her. Her wings quivered and drooped as she came.\n\n\"What the fuck?\" Candy said.\n\n\"Oh, yeah. She's actually a real Angel. No one told you that?\" Lizzy said.\n\nFuck this fucking bullshit. Fucking magic shit.\n\nUnfinished Business\n\nRyan had had a tough start with Natalia and he wasn't even sure why. Natalia had been perfectly nice, even respectful, toward him, but for some reason he resented her. Maybe it was just because of the way he had taken her. He had made her his on a whim. Maybe he was actually angry at himself.\n\nThe power of the curse, in it's latest form of evolution, allowed the girls to stay away for much longer than before. Ryan had only had sex with Natalia that once, right after taking her. If she wanted out, Ryan would be happy to let her go. Once the heat of the moment passed, Ryan was still perfectly able to think rationally.\n\nNow that he had no restrictions on his movement and he was safe to the world, Ryan decided to go to the office. He wanted to have a talk with Nat, but he might just catch up with some old buddies, and say hi to Annie and Claudia, too.\n\nEven though Ryan's relationship with Eleftheria was almost fixed again, their power dynamic had shifted permanently. She was more than happy to be just a bodyguard and a chauffeur for him now, whenever they were out and about. Ellie had started her more servile role as a form of begging for forgiveness but now she liked it. And Ryan still actually needed a bodyguard because of who knows what kinds of supernatural threats out there, lurking.\n\nWhile Ryan was still in the elevator, Annie perked up at her desk. She felt a tingle in her pussy. She was sure Ryan was coming although she didn't know why. She shot up and headed for the landing.\n\nWhen the doors opened Annie was there to jump into his arms. She held him tight and gave him a big kiss, not caring about people staring.\n\n\"Whoa, honey. We just saw each other, like, four hours ago,\" Ryan said.\n\n\"I miss you. I always miss you,\" Annie said. Being in his arms made her body tingle even more. She could still feel him inside her from that morning. Annie didn't get sore, exactly, anymore, not even from some long, hard, marathons, but Ryan always left her pussy tingling, or buzzing. The feeling never let Annie forget who she belonged to and she loved it.\n\nNow, getting a surprise visit from her love, her body was already going into overdrive. Ryan could see it on her face. \"Cool down,\" he said.\n\n\"I don't know if I can, and I sure as heck don't want to.\"\n\nRyan smiled and kissed her again. This time it was quicker and more casual. \"I'm actually here to see Nat. Is she in?\" Ryan said.\n\nAnnie got more serious. She knew what was up. \"Sure. She's at her desk,\" she said.\n\nThey made their way there, to the little reception point outside Claudia's office. Ryan was already feeling nostalgic, remembering how this all had started. This was the place where he'd first fucked someone he had no business fucking. He grinned at what a fumbling idiot he'd been back then.\n\nEllie hung well back, keeping her distance. She made a point of not hovering. She was also keeping an eye on the surroundings, of course. She parked her firm, sculpted ass on the corner of some random desk, leaving that desk's owner perfectly nonplussed. The smile on Ellie's face was serene as she watched over her favorite humans.\n\nNatalia blushed when she saw Ryan approach her. She looked away. Ryan hoped she was just being shy. She recovered, though. \"Are you here to see Claudia?\" she said.\n\n\"No. I might as well just pop in and say hi to her, but I'm actually here to see you,\" Ryan said.\n\nNatalia blushed even more. Ryan still couldn't tell what she wanted from him, or if she even knew.\n\n\"Let's go get coffee somewhere. I'm sure I can get you the afternoon off. I'm quite good with your boss,\" Ryan said.\n\nNatalia cringed. Ryan remembered she had some unresolved emotions regarding Claudia. \"Well, anyways, how about that coffee?\" he said.\n\n\"Sure,\" Nat said.\n\nRyan surprised Claudia. She was painfully ready to fuck him right then. Ryan settled for making out with her, and some heavy groping. The old office did bring up some memories.\n\n\"I'll come back another time, I promise, and we can do a repeat. For old times' sake. Today I'm here for Nat, though,\" Ryan said. He knew he didn't have to apologize.\n\n\"It's fine. I'm just happy to see you,\" Claudia said.\n\n\"Just... fuck. I'm coming back for you, some day soon,\" Ryan said. Seeing Claudia in her office made her seem even hotter. Once again, it all reminded Ryan of the old days.\n\nClaudia giggled. \"Well now you've just ruined my day. How the hell am I supposed to get any work done?\" she said.\n\n\"It's fine if I take Nat, though? I already kind of boasted I can get her the afternoon off,\" Ryan said.\n\n\"Oh? You think you have that kind of pull over me?\" Claudia said.\n\n\"Yes. I know what you want most. I have you wrapped around my finger. Or, my... you know,\" Ryan said.\n\n\"I can't wait,\" Claudia whispered. \"You can take my secretary whenever you want.\"\n\nRyan did say hi to some of his old colleagues, too. It warmed his soul to see them look up to him like he was some kind of a rock star or something. It didn't go to his head, however. Impressing a few old friends felt like a small time thing now, compared to all the supernatural shit he'd seen.",
        "Andy was nowhere to be seen. Annie told Ryan that Claudia had had him transferred to accounting.\n\n\"Why? Did he do something?\" Ryan said.\n\n\"No. Claudia was just worried about me and Nat,\" Annie said. \"I'm not worried about him. I think he's a teddy bear. I wasn't scared, it was just awkward.\"\n\nRyan turned to Natalia and offered her his hand, and they took off. Annie sighed as she saw him get in the elevator and leave.\n\nA few minutes later Claudia called Annie to her office. As soon as she got there, Claudia kissed her. Annie knew what it was about and let her boss vent. By the time Claudia was done, Annie had to admit she was getting a little bit wet, too.\n\n\"You want to...\" Annie said, almost hoping the answer would be yes.\n\n\"No,\" Claudia said. She sighed. \"I don't think it would help that much. You want to team up on him when gets back home tonight, though?\"\n\nAnnie grinned. \"Definitely.\"\n\n\"I just... Um. Sorry,\" Claudia said. She buried her face between Annie's big titties. She squeezed them tighter around her head. She moaned into her cleavage.\n\n\"Thank you. You smell nice,\" Claudia said, after pulling away.\n\n\"I love you, too,\" Annie said. She smiled as if it had been just a joke, but she realized she was being surprisingly serious.\n\nClaudia kissed her again. They made out, gently, for a few minutes, before she let Annie get back to work.\n\n---\n\nA few blocks away, Ryan had found a nice place for his chat with Natalia.\n\n\"So, how are you?\" Ryan said, after they'd ordered their drinks.\n\nNatalia blushed again.\n\n\"Are you afraid of me?\" Ryan said.\n\n\"No,\" Nat gasped. \"A little, yes,\" she then added.\n\n\"I'm sorry. For the way things started out with us. I don't want you think of me like that. I shouldn't have, you know, just swooped you in.\"\n\n\"No. It's not that. Not at all.\"\n\n\"What's the matter, then?\"\n\nNatalia couldn't quite come up with the courage for an answer.\n\n\"You still want me to set you up with Claudia?\" Ryan said.\n\nNatalia blushed even more than before. \"No,\" she finally said. \"I don't know. I'm not... attracted to other women, if that's what you mean.\"\n\n\"You're not?\" Ryan said.\n\n\"No. At least, I haven't been. I've had boyfriends. And I don't really even know what I want from Claudia. I'm definitely in love with her, I can admit that much, but I'm not sure if it even means, you know, anything sexual. I've never felt like this about another woman before.\"\n\n\"Wow,\" Ryan said. \"I mean, I like her, too. She is kind of... powerful.\"\n\n\"Except when she's with you,\" Natalia said.\n\n\"Is that a bad thing?\" Ryan said, thinking he might have finally reached the real heart of the issue.\n\nNatalia smirked. \"No. I kind of love it,\" she said, despite her embarrassment.\n\n\"Well, what's the problem, then?\" Ryan said, perhaps too sharply.\n\n\"With what?\" Natalia said.\n\n\"With us. I mean, there's something coming between us, isn't there? Kind of making things awkward. I thought it was because of how you felt about Claudia,\" Ryan said.\n\n\"No. That's not it.\"\n\n\"What is it, then?\"\n\nNatalia was surprised.\n\n\"What?\" Ryan said.\n\n\"Really?\" Natalia said.\n\n\"It's all right. Just tell me,\" Ryan said.\n\n\"Honestly? I thought you don't want me,\" Natalia blurted.\n\nRyan stopped to think. There was an awkward silence.\n\n\"I'm sorry I made you feel that way. I really thought there was some problem. Are you sure there's nothing I can do to make you feel more welcome with us, if that's what you want to do, to be a part of our... thing,\" he said.\n\n\"I do,\" Nat said. \"I do want to be with you. I have no problems with any of it. I would never want to leave you.\" Natalia blushed again. \"I mean, the magic thing. Not that... You're probably a nice guy anyway, but...\"\n\n\"Don't worry. I know exactly what you mean,\" Ryan said. \"That's exactly how it works. It's not about me. You get hooked on the energy.\"\n\n\"Is that okay?\" Natalia asked.\n\n\"Yes. It's perfectly fine.\"\n\nNatalia sighed in relief. \"I don't mind being the lowest girl on your list, you know. I just want to be on it,\" she said.\n\n\"You're not lowest on my list,\" Ryan said.\n\n\"No? Who is, then?\" Natalia said.\n\n\"Okay. I get your point, but I don't want you to think of it like that. You're just new, and things will get less awkward once we get to know each other better.\"\n\nNatalia smiled again. \"I really don't mind. Just being with you is enough.\"\n\nRyan's instincts kicked in and he was one step closer to seeing her as completely his. \"There is no list. Everyone is equal. I hope you see that once you start spending more time with us.\"\n\nNatalia's pupils dilated and this time her blush was different. \"Could we... If you're not busy?\" she said.\n\n\"You want to fuck?\" Ryan said. He decided to risk it. He was quite sure this was one of those times when reading women was not as difficult as he once had been used to.\n\n\"I do,\" Natalia whispered. \"I kind of always do, but that's how this works, isn't it? But now, I'm starting to feel especially willing,\" she said.\n\n\"Did no one tell you the rules?\" Ryan said.\n\n\"What rules?\" Natalia said, losing some of her gleam.\n\nOh shit. We're slipping, Ryan thought. His first instinct was to blame Eleftheria, but he realized it was up to him now. He was in charge. He could not, he would not, escape his own responsibilities anymore.\n\n\"You, the women, are the boss. This whole thing is my fault so it's up to me to make everything right. Whenever you feel like you want... you know, just ask, and it's my duty to help you. That's how this has worked since the beginning. You shouldn't have just waited for me. If you want me, just ask, and I'll be yours. I'm sorry I didn't tell you earlier. I should have,\" Ryan said.\n\n\"Really? Well then, consider yourself asked. I definitely want more,\" Natalia said.\n\nRyan smiled. He took Natalia's hand and let the energy flow, but at a rate he hoped was not too much for a new girl. It was getting tougher to have fine control at a such a small scale anymore.\n\nNatalia leaned back and moaned. She basked in it for a full minute. Ryan felt more like a drug dealer than he had in a long time. He did take the time to admire her tall, slender body. He'd already seen her naked before, but Natalia's slightly gangling movements became much more elegant and sensual when she was aroused.\n\n\"It's so good. Thank you,\" Natalia said, after Ryan let her hand go and she recovered.\n\n\"So, everything is fine? There's no more issues? We're good, and just so even my dumb man brain can be sure, you want to stay? You don't want me to let you go?\" Ryan said.\n\n\"Yes. Everything is great. I'm so happy you want me to stay. I was so worried,\" Natalia said, with newfound courage. The dose of the energy had set her mind straight.\n\nNatalia saw the worry on his face. \"Any sane person would choose you,\" she said. \"I really am happy. I would hate for you to ever doubt that.\"\n\nAfter a little pause, the time felt right, so Ryan offered Nat his hand and helped her up. Natalia came in for a hug. It was shy at first but then she held him tighter. The hug continued into a kiss.\n\n\"There is one more thing, actually,\" Natalia said. \"I'm sorry for helping Claudia, earlier, when she was trying to quit you.\"\n\n\"What? No. You did the right thing. You helped a friend. That was good,\" Ryan said.\n\n\"No. No, it wasn't. If I'd known how good you feel, I would never have kept her away from you. It was wrong. I caused her so much useless pain. I'm sorry.\"\n\nI wish I could be more careful with them, Ryan thought. The curse really messed his girls up. He was tired of arguing about it, though. Trying to invalidate how Natalia felt would not help. Ryan chose to be supportive.\n\n\"You couldn't have known. It was never your fault. I absolve you of any guilt. If you want to apologize to Claudia, too, then I will help you,\" he said.\n\nNatalia kissed him so hard he was afraid someone might cut a lip. Ryan put out too much energy and Natalia begun to fall limp, but his arms were more than strong enough to support her.\n\n\"Let's go somewhere private,\" Ryan said, once Nat opened her eyes again.\n\n\"Please,\" she moaned.\n\nNatalia was completely ready to just head for the toilets. She'd never done anything like that but now felt like the perfect time to stop worrying about propriety. Ryan, though, had more experience with situations like this so he took control and dragged Natalia out the main door.\n\nEllie was waiting for them by the car. By the time Ryan got there, Nat was wrapped around him so he had to carry her to the backseat. They made out as Ellie slipped the car into the downtown traffic.\n\nRyan reached his hand between Natalia's legs.\n\n\"I'm wearing pantyhose. Sorry,\" Natalia said. Ryan just ripped them, and felt her hot, wet panties. Natalia gasped and kissed him harder.\n\n\"I don't mind, this time, but in the future, never again,\" Ryan said.\n\n\"Yes, Master,\" Natalia said, only half joking. Ryan was glad she was catching on. Once Ryan got his finger inside her pussy, he let more energy loose, pushing her even wilder.\n\n\"Home?\" Ellie said.\n\n\"I don't care,\" Ryan said. He kept his eyes locked on Ellie through the rear view mirror while Natalia maneuvered herself into his lap and onto his cock.\n\nRyan let Natalia fuck herself on his huge erection for a good while.\n\n\"How the fuck is this so good?\" Natalia moaned. \"You're going to turn me into a slut, aren't you?\"\n\n\"Only if you beg me,\" Ryan said.\n\n\"Please,\" Natalia said. \"Take me. Make me yours. Use me like you use your other girls. I want you to. I want to be a whore, your whore.\"\n\nRyan was relieved everything had turned out well. The compliments also stroked his ego. He grabbed Natalia and twisted her into a bit of pretzel in the confined space of that backseat. She shivered in anticipation, unable to escape the contorted position. He took her, really slamming down into her.\n\nNatalia growled like a beast when the big cock really started to tax her insides. Ryan had never heard her make that particular sound before. He took it as a good sign. He popped his thumb into her ass and fucked her harder.\n\nHe could feel Natalia stiffen up, though. I guess she's not as willing to let go as she thought, not yet, Ryan thought.\n\n\"Don't worry. I'm not going to fuck you in the ass, not yet,\" he said. \"Trust me. Like you said, I'm good at this.\"\n\nNatalia relaxed and surrendered to the pleasure again.\n\n\"Soon, though,\" Ryan said, and spiked her before she could answer. He enjoyed the lightness of her slim frame, casually holding a stray ankle.\n\nOnce he was done, Ryan jammed his cock down Natalia's delicate throat. She was completely out of it but her instincts told her to drink.\n\nRyan took a moment to calm down. When he looked up, he saw Ellie had timed her tour of the city so that they were almost home. He carried Natalia in.\n\nFinally Taking It All to the Next Level\n\nSome days later, Ryan was finally ready to talk to Eleftheria, and hear more about all the things between heaven and earth he'd never dared even dream about. He knew a little bit, but before now, he'd been afraid to ask more.\n\nRyan had zero interest in trying to proactively engage with any of the supernatural threats Ellie was starting to teach him about, but now, he wasn't afraid to learn about them. He wasn't afraid of at least hearing the truth.\n\nThe floodgates opened and this conversation would go on and off, for years, from then on. One of the first things Ryan wanted to know about, however, hit at the very core of everything that had happened so far.\n\n\"How about the origin of the curse itself?\" Ryan said. \"I know we originally assumed it was just aimed at you girls.\"\n\n\"Tell me more,\" Eleftheria said.\n\n\"I, at least, imagined it was invented by some kind of ancient tyrant, to rule over his harem, and turn enemy spies into double agents, and so on.\"\n\n\"But now?\" Ellie said.\n\n\"I feel like it's affecting me, too. I've changed a lot. I'm focused on you girls, to the exclusion of much else. I can't help but wonder if the curse wasn't meant to be a double-edged sword, actually aimed at the one trying to become the master. Maybe there was meant to be some kind of a poetic-justice lesson there, somewhere.\"\n\n\"But either way, you have also already altered the spell itself. We have changed it. They way you're connected to it now, it's clear the blessing itself is not the same entity that first affected you, either.\" Ellie said.\n\n\"I hope so, but can we be sure?\" Ryan said.\n\nEleftheria looked him in the eye, very much measuring him up. Her gaze held the kind of intensity that would have made him shrivel just a few months before. Now, Ryan felt no need to back down. He felt he could measure up to whatever Ellie wanted to see in him. Ellie smiled.\n\n\"It may well be that the curse was never a curse. The spell is sacred to Jasmine's people, but they did not create it. Even I have not been able to uncover it's true age or origin,\" she said.\n\n\"So, what does that mean?\" Ryan said.\n\n\"We don't know. Maybe no one does. We may never be able to determine it's true purpose if we can't deduce it's origin. But you can. By communing with it directly, like you have been doing, you may be the only one who can learn the true nature of our blessing. One thing is for sure: the spell should not have affected me. Angels are nearly immune to most forms of magic.\"\n\n\"So, it's powerful?\" Ryan said.\n\n\"The most powerful magic is usually the oldest. The age of your spell is unknown to us, but having dominion over Angels surely lends it the aura of something uncannily primordial.\"\n\n\"What does that mean, for us?\" Ryan said.\n\n\"That, my Love, is one of the few things in this universe I fear I cannot be certain of.\"\n\n---\n\nThe house was huge, practically a mansion. It was private, too, far from any neighbors. It would easily fit all the girls, and more.\n\n\"Are you sure you can afford this?\" Ryan said.\n\n\"I may not be as rich as you think I am, but I'm definitely good for one hell of a loan. My credit score is impeccable,\" Claudia said.\n\n\"You know I already forgave you for leaving me, right? You don't need to buy me a house just to get me to fuck you harder,\" Ryan said.\n\n\"No. That's not what this is about. I want us all to live together. It's for all of us. Not just you.\"\n\n\"You sure?\"\n\nClaudia smiled and sighed. \"Okay. Yes. I love your big monster cock, and I want you to have house that feels as big as your cock does in my ass.\"\n\nRyan gave her a kiss on the tip of her nose and groped said ass. He could feel the hard edge of her buttplug as he grazed it with his fingertips.\n\n\"I'll allow it. If you really want to buy me a house, I'll allow it. I might even throw some of that exceptionally hard butt sex in there for you, but no promises. If I do, I'll do it just for fun, though. I'm not letting you bribe me into it.\"\n\nBoth of them had completely forgotten about the real estate agent, even though she was still in the room. The poor woman was steaming from her ears.\n\n\"Good. I wouldn't want you to go soft on me,\" Claudia said. \"I mean metaphorically, too.\"\n\nRyan's transformation was suddenly complete. Or, maybe he just realized it, and it had actually happened a while ago. He was supremely confident in his role as the Master now. Having nearly a dozen beautiful sex slaves -- some of them angels and witches, some of them successful career women like Claudia -- did not faze Ryan at all, anymore.\n\nBeing a master worthy of so many slaves was based solely on his ability to satisfy them, and that, he was the best at. Whatever else came from it was just a bonus. Whatever magic Ellie and Jasmine could do, however much money Claudia wanted to spend, it didn't matter. The sex was all that mattered, and this house would be good for sex.\n\nRyan noticed the real estate agent. She was still blushing.\n\nRyan glanced at Claudia. She wasn't blushing, at all. She was proud of who she was and didn't care what the agent might have overheard. Ryan had never been so proud of her. He groped her butt again, just to poke at the plug.\n\nClaudia smiled.\n\n\"We'll take it,\" Ryan said.\n\n---\n\n\"Oh, Ryan. It's so beautiful. But where are we going to get the money?\" Annie said. She was seeing their new home for the first time. It was still empty of furniture.\n\n\"Don't worry. Who cares. Claudia has offered to pay for it but I'm sure the rest of us can chip in, some way,\" Ryan said.\n\nAnnie kissed him. She fell into his arms, like she was wont to do. She was a very melodramatic kisser and Ryan loved that about her.\n\nEllie scoffed. Her disguise dress was more sexy and revealing than before. She had gotten into the habit of borrowing Stacy's clothes, instead of Annie's. As easy as it was for Ryan to read Ellie, it was easy for her to read him, too, so she knew he liked how she looked in those dresses. A literal Angel dressing like a whore. Ellie had to admit the concept resonated with her now, too.\n\nRyan validated her by giving her strong buttock a sly grope. \"What?\" he said.\n\n\"Worrying about money is beneath you. It's so... earthly. You should be above such petty concerns,\" Ellie said.\n\n\"That might be all fine and good for you, babe, but the rest of the girls gotta eat,\" Ryan said.\n\n\"No, My Love. I don't mean money to be worthless, I just don't want you to worry about such things.\"\n\n\"Any idea on how to actually do that, or are you just stroking my ego here?\"\n\nEllie smiled. \"Do you happen to know any recently deceased evil overlords? The kind who might have a Swiss bank account or twelve, just waiting for someone to reappropriate them, and use them for good instead of evil?\"\n\nRyan's eyes popped wide. \"What the fuck? Why am I only hearing about this now? Can you access them?\"\n\n\"I have a few ideas on where to start. But that is besides the point. The real question is, are you ready to take on that responsibility? Are you ready accept there are still dangers out there, and that we will need most of that wealth to keep us safe? That money should not be wasted on any sort of inane nonsense.\"\n\n\"Yes,\" Ryan answered, without hesitation. \"You girls are what's most important to me. I only want to protect you. I don't need money for anything else.\"\n\nEleftheria came to him and kissed him.\n\nAnnie joined the kiss, making it a triple. It was exciting and arousing for Annie to know that Ryan had an Angel in his harem. Annie had some new sympathy for Erica now. Erica had always seen Ryan as more god than man and Annie was warming up to the idea.\n\n\"A few security guards might be a good start,\" Ellie said. \"If you want strong, tall, female ones, you might not even have to pay them with money.\"\n\n\"No. No more girls. That's a hard rule, for now, and even you are going to obey me this time,\" Ryan said.\n\nThey way he said it made Eleftheria moist. Ryan was finally taking charge.\n\n\"It will sooth my soul,\" she said, \"to use his wealth for your benefit.\"\n\n---\n\nThey'd spent a few weeks in the new house. Ryan had put the old apartment for sale and Melinda was selling her house, too. Liquidating everything would go a long way toward paying for the new house already. All together they also had a few too many cars so they could sell some of those, too.\n\nEveryone had moved in, even Hannah, but she had her own room. She was having trouble sleeping, though. Her dreams were filled with Ryan and his cock. Hannah had not had a boyfriend in ages and she spent most of her time with Ryan's girls now, instead of her old friends.\n\nHannah had no trouble admitting it to herself anymore: she was completely in love with Ryan. She spent her days spying on him fucking the girls, even her mom. Her mom was still the closest to her, her own flesh and blood, so Hannah could not help but imagine herself in her mother's place whenever she saw her open herself up for her Master.\n\nHannah knew Ryan didn't want any more girls. She was sure he would get mad if she tried to trick him into taking her.",
        "---\n\nBreakfast was great at the new house. The big windows let lots of light in and the pristine kitchen-and-dining-room was about as big as the whole old apartment, letting everyone move around and talk while filling their plates and then settling down with them. The girls were all smiles in their negligible clothing. Ryan sat at the head of the table, enjoying the picturesque scene.\n\nRemy ate like a pig, snorting down her cereal. Claudia looked all business as she read the news, forgetting her spoon in her hand and letting all the milk slowly drip back into her bowl. Erica and Stacy were trying to out-cute each other, both taking about five minutes to nibble away on half a strawberry.\n\nEleftheria was behind Ryan, nibbling on his neck and his earlobes, whispering sappy nonsense into his ear.\n\nThe beautiful haze of chatter and laughter died off when Hannah walked in, completely naked. It was the first time Ryan had seen her so. He'd gotten glimpses but he'd avoided staring.\n\nHannah's eyes were cast to the floor and she blushed.\n\nMelinda got up to go to her but Remy took her by the arm and pulled her back, urging her to wait. Melinda remembered that this was a safe place, so she let her daughter stand on her own.\n\nHannah walked up to Ryan. \"I... I want you,\" she whispered.\n\nRyan's mind was already made up. Hannah was the only person whose opinion on the matter really counted, so he had been waiting for her to make up her mind. He'd had fantasies of taking her, regardless of what she wanted, but that was almost a senseless fiction with the blessing being the way it was. He knew by now that with it, any woman in the world would want him.\n\nRyan had dreamed of the many ways Ellie could have tricked or even kidnapped Hannah. He'd thought about the different scenarios in which Melinda would give her daughter to him. He'd even fantasized about going into Hannah's room at night and just taking her. But the truth was, Hannah would end up loving him either way, so he had decided he might as well let her make up her own mind.\n\n\"I want to be with you. Even if you don't... make me yours, I still want to be with you. We can do that, right? If you don't want to bless me, you don't have to. You can control it now.\"\n\n\"What do you want?\" Ryan said.\n\n\"I want to be completely yours. Like my mom, like everyone. Everyone is so happy and I'm tired of being the only one who's sad.\"\n\n\"Is that all you want? To feel happy? Or do you really want me, too?\" Ryan said.\n\n\"I want you. I see how you treat your women. I see how good you are to everyone, to my mom. I love you. Even just for what you do for them. I want to be a part of it.\"\n\nRyan took her hand. Hannah didn't even realize that was already enough. \"You are already a part of our family. Of course I want you,\" Ryan said.\n\nHannah looked him in the eye. They kissed. It was curious at first, but then the kiss grew into a passionate one. Ryan held Hannah's naked body tight to him. He was oblivious to the cheers from the others.\n\nMelinda was especially happy. In her heart, she knew she'd made the right choice. Watching Ryan caress her daughter's naked body, she allowed the first thoughts of what it could mean for them to serve him together to enter her mind. It was all good. Whatever Ryan wanted, it would be right.\n\nThe blessed energy seeped into Hannah's mind, unnoticed at first. She was already bleary when she realized there was more to it than just her natural joy and relief. Somehow, she could feel how much more there was. She'd heard stories about it from the others, but now, finally, she could feel it for herself. She knew what she felt now was just the smallest wave of an entire ocean, tickling her pinkie toe on the shore. Somewhere out there, out at sea, a huge storm was already waiting to drown her.\n\nRyan broke the kiss and let Hannah back off.\n\nRemy was the first to dash in and congratulate the new sister. She hugged her, at first, but then kissed her, and the kiss turned almost as passionate as the one Hannah had just had with Ryan.\n\n\"I can't wait to play with you,\" Remy whispered, but it was loud enough for pretty much everyone to hear.\n\nLizzy was right there and kissed Hannah somewhat passionately, too. All the girls lined up to kiss her. Some where more modest, but everyone was genuine.\n\nMelinda was the last in line. She hesitated. She wanted to kiss her daughter, too, but she didn't know her role at that moment. Should she kiss her as a mother or as a fellow slave, or just as someone who loved her?\n\nHannah made the choice for her and kissed her mother like Remy had kissed her. Melinda was overwhelmed for just a few seconds, but then kissed her daughter back. It felt right. She made out with her. It was for Ryan's viewing pleasure, but Melinda accepted it for her own pleasure, too. She'd never seen her daughter in that light but she would have no problem with it, starting now.\n\n\"Oh, baby, you're such a good kisser,\" Melinda said, once Hannah let her go. Everyone laughed.\n\nHannah was mostly just relieved, but she didn't mind, either. She was already beginning to consider her choices from the point of view of what would make Ryan happy. Looking at him, Hannah was sure he'd enjoyed the show.\n\n\"Would you ladies mind giving us some privacy?\" Ryan said. \"I'll take Hannah to the bedroom.\" He took her hand. \"You're not a virgin, are you?\"\n\nHannah startled. Should I be? \"No,\" she said.\n\n\"Good. I don't much care for that stuff,\" Ryan said.\n\n\"Don't worry, bitch, you're gonna feel like one,\" Remy said, and slapped Hannah's ass as they walked past her.\n\nHannah blushed. It was cute.\n\nIn bed, though, she was ready. Hannah dropped the shy act and she used her athletic body well. She'd seen the size of him before, she saw it in her dreams every night, so she was ready -- afraid, but ready. She let go of her trepidation as best she could and took the monster as well as her body allowed, trusting Ryan would appreciate her honest effort.\n\nHe did. It was immensely rewarding to see the young woman so determined to allow him inside of her. Ryan let her have as much energy as she needed to get past her early struggles, and then, he just let her enjoy him, au naturel.\n\nHannah was young and fit and gorgeous, and there was something adorable in the way she tried to do her best, applying an athlete's mentality. Ryan was remorselessly overjoyed about taking another new girl. Especially when it was Hannah. He already knew he might have to break his promise to himself, and not stop there. He knew the girls wouldn't mind.\n\nRyan tried to see Hannah as someone too young for himself. He tried to see her as Melinda's daughter. The idea did tickle him, a little bit, but more than any of that, much more, he enjoyed her for who she was -- another hot, fascinating, lovely lady for his harem.\n\n\"Suck it,\" he said, and Hannah was desperately fast to obey.\n\nFuck cliches and fuck taboos. This was what Ryan enjoyed the most. He loved to see a genuine desperation to please. Some day soon, he would have Hannah and her mother lick cum from each other's faces, but that would be just the icing on the cake, the flourish. The real force that drove Ryan in his endless need for sexual conquest was the look on a girl's face -- any girl, every girl -- when he just knew she was truly desperate to do whatever he wanted.\n\nHe flipped Hannah on her back, held her by the neck, and really let her feel what it was to give herself to him. As Remy had promised, Hannah was starting to feel like it was her first time again. Sure, the big cock was overwhelming, but that wasn't even the point. Sex with Ryan was so much more, it was like a completely different thing.\n\nFucking Hannah so hard her arms and legs were flailing around reminded Ryan of his first time with her mother. He'd been driven mad by trying to hold the energy in and Ellie had just thrown Melinda at him like a piece of meat. Afterward, he'd been horrified of what he'd done, of how he'd acted.\n\nWhat Ryan had failed to completely realize back then was that Melinda had never been afraid of him, not even that first time when he'd taken her completely by surprise. As much as he'd feared himself, on several occasions, none of the girls had ever feared him.\n\nNow, though, Ryan was not afraid. He was not overwhelmed. Despite the huge storm of lust raging inside him, he was in total control. He was not fucking Hannah literally senseless because of some animal urge that was overwhelming him. No. He was fucking her as hard as he thought she could take it just because he wanted to. He liked it and she belonged to him. This was as it should be, and it was by his will.\n\nHis overwhelming power was a tool against the dark void of a meaningless existence. With crystal clarity, he decided to rededicate himself to his girls, the same way they had always dedicated themselves to him. This power would give him his ultimate purpose in life, too. Absolute power may corrupt, but what if they could all have absolute devotion, instead?\n\nWith that goal in mind, Ryan added a new twisting motion to his relentless hammering. Hannah's whole body went stiff and she let out a howling orgasm. Ryan was pretty sure that was mostly just from her g-spot, and not directly because of the magic, at all.\n\nRyan only knocked Hannah out with the energy once he finally shot his first load inside her tight pussy. That was several orgasms in, for her.\n\nHannah had never had an orgasm from just penetration before. Now, she didn't care to count. She didn't care if Ryan had used the energy or not. Riding his big cock was a dream come true, either way, and it was better than she had dared imagine. A few orgasms here and there was nice, sure, but being close to Ryan and just touching him was what really made her happy.\n\n---\n\nLike so many others before her, Hannah woke up to a new self. Everything was clear now. Everything made sense. In a way she could not have even dreamed of, belonging to Ryan was the only absolute in an otherwise murky world. There was nothing she wouldn't do for him, in bed or otherwise.\n\nBefore, the concept of having sexual thoughts of her own mother had haunted her, but now, she could not wait to stick her tongue right up Melinda's butt. She knew seeing it would turn Ryan on so the thought now aroused her even more than it would him. It was all just a fun game, and all for their own pleasure, and other people's judgment would never figure into it again.\n\nEpilogue\n\nAndy had seen the moving vans. He'd followed them and found the new place. It made him sick to his stomach to know Ryan would get to live in a mansion and fuck a dozen of the most beautiful women Andy had ever even seen.\n\nHe had wanted Annie and he had wanted Ellie. Andy had also wanted Natalia. Heck, he would have wanted Claudia if he could have ever guessed she was not completely frigid. There were so many of them. There was no way Ryan should have them all. Why couldn't Andy have just one?\n\nFuck those girls, Andy thought. He stoked his haggard beard. Ever since Claudia had gotten him fired, he had found it harder to have much sympathy for them, any of them.\n\nAndy lifted his bag to his shoulder and headed into the night. The bag felt heavier than usual. It was because of the gun. Now that Ryan even had the cop, Andy knew no one else could do anything to stop him.\n\nHe had to make his move. He'd seen cars from different security firms visit the house so he knew Ryan was about to hire guards.\n\nAndy's hands shook as he pulled out the key. He had managed to steal one from Annie at work, make a copy of it, and return the original. He used the key and the door opened.\n\nHe knew he shouldn't be here and he didn't know what he was doing, really, but he pulled the gun out and stepped into the big house. It was dark. He took a deep breath and headed toward the stairs, and then the bedroom, the one he thought should be the biggest one.\n\nAndy opened the door and saw shapes in the bed. There were multiple people there. His heart was pounding and a bead of sweat stung his eye.\n\nThere was some movement, he thought he saw two pairs of burning red eyes in the darkness. Before he could do anything he was on his face, on the floor. His arm felt broken and the gun was gone.\n\nSomeone turned on the lights. From the corner of his eye Andy could just about see it was Ellie who was kneeling against his back.\n\nNext to Andy, on her knees, was the small, beautiful Indian woman. Andy didn't even know where she had come from. She was naked and completely, unnecessarily hot, just like the rest of them. Despite everything, despite the pain in his arm, Andy felt a buzz in his groin.\n\nThis new woman said something in a language Andy didn't understand. She extended her hand and touched Andy's temple. His world went black."
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-12"
}