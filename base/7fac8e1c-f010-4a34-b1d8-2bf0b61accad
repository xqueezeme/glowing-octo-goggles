{
    "title": "A Tale of Two Switches Ch. 12",
    "pages": [
        "(Chapter 12)\n\nCount to Six.\n\nThe flight to Florence had been interesting. That is, if you called trying to stop an angry Italian lesbian from tearing an airport security guard's tongue out interesting.\n\nThe drama had begun when Zabina's piercings had triggered an oversensitive metal detector at LAX. Normally not a big issue, but the security guard had jokingly suggested that Zabi should prove that she had her nipples pierced.\n\nAlex was fairly sure the loud tirade of Italian swear words that followed would still be echoing around the terminal when they made the return trip.\n\nIt had taken several glasses of complementary wine and Alex's suggestion of 'mile high' sex to calm the angry Zabina down.\n\nThen of course there was the connecting flight at Gatwick. You would have thought that the number of overly sensitive metal detectors in the world would be limited, but apparently the gods of air travel were conspiring against them. This time a female security guard wanted to perform a strip search.\n\nInstead of the normal river of angry words, Zabina had looked the security guard in the eyes and begun to unbutton her blouse at the bust check point.\n\nAlex wondered just how far Zabina would have gone, if she hadn't managed to persuade the panic struck guard to let them pass.\n\nFinally, they had arrived at Florence Airport, or as Zabina called it Aeroporto di Firenze-Peretola. Alex was excited at the prospect of being in another country, and to see where Zabina's extended family lived, as it was her first time in Italy. Although to be exact, it was her first time outside the States. She wasn't sure what to expect when they passed through the arrivals section, but it wasn't what was waiting for them.\n\nThere was no queuing up at the immigration, instead they passed through a VIP area and straight past the customs area. There were no overzealous guards. In fact, several officials rushed over to help the two ladies with their luggage, and buzzed around them as if they were royalty. A few paparazzi photographers even tried to take pictures of them as they crossed the concourse, but they were rapidly dissuaded by the gathered airport officials. They stepped out of the airport building and straight in to a long black Mercedes with blacken windows. The second the door closed behind them the luxury car was pulling away, and Alex was surprised to see their luggage was being loaded in to a different car.\n\n\"Wow.\" She finally said. \"This isn't how I thought things would be.\"\n\nZabina stretched out on the pale grey leather seats smiling happily. \"That is because you are used to America, Alex baby.\" She told her. \"This it Italy. More importantly this is Tuscany. The Vitelli family have lived here since before the Renaissance. My ancestors were close friends of the Medici family, and are very respected here. I suppose I could have warned you, but I still like to surprise you now and then.\"\n\nAlex partly wondered if Zabina was exaggerating, she had never known her to have that trait before, and now she was surprised that there were still things she didn't know about Zabina.\n\nAs they drove through the city, Zabi pointed out items of interest, giving Alex a run down on the history on each building or monument. Alex remained silent, apart from a few gasps of wonder at the beauty of the structures.\n\n\"I should have brought you here a long time ago Alex.\" Zabina told her as they passed out of the city and in to the open countryside. \"I always knew you would love my home.\"\n\nThe tone of Zabina's voice tore Alex's attention away from the scenery and towards her lover. They had always referred to their apartment as 'home,' but for Alex to hear that phrase about somewhere she had never been stirred a slight sense of sorrow in her.\n\n\"Do you miss being here?\" Alex asked, partly not wanting to hear the reply.\n\nAn understanding smile graced Zabina's lips. \"Alex my love, my home is anywhere you are, but this place is where my blood comes from, and I will always yearn to return.\"\n\nAlex scooted from her position by the window to sit next to Zabina. \"You know I love you with all my heart Zabi.\" She told her lover. \"I just want you to know that my home is anywhere you are as well.\"\n\nThe pair of golden hazel eyes burned holes in to Alex's soul as Zabi gazed longingly at her. \"I just love how sensitive you are Alexandria Rowe. I would trade all this just to keep you by my side.\"\n\n\"I love that you want to share your home with me Zabina Vitelli. And I always want to be by your side.\" Alex replied happily and nuzzled in to the skin of Zabina's perfumed neck.\n\n\"That's good to hear baby.\" Zabi whispered as her finger began to toy with the buttons of Alex's pale blue silk blouse. \"I wonder if I have time to get you naked before we reach the house?\"\n\n\"Limo sex again?\" Alex gasped as Zabi's hand slipped inside her bra to fondle an already aroused nipple.\n\n\"Why not?\" Zabi asked. \"Can't get too much of a good thing.\"\n\nIt never ceased to amaze Alex at just how fast Zabina's hands could move when it came to removing clothing. One minute she could be fully dressed, the next Zabi's hands were playing their symphony of disrobing, and Alex would be in her underwear before she could object. If she didn't know better, she would swear Zabi sprouted several extra hands in the process.\n\nNot that Alex minded of course. If there was one thing she enjoyed in this life, it was being undressed by her wild lover.\n\nShe cried in ecstasy as Zabi's teeth nipped at her skin while those dexterous fingers brushed over the flesh of her inner thigh before teasing the folds of sensitive skin that glistened with her arousal.\n\n\"I remember a time not so long ago where you had me in a similar position.\" Zabi breathed in her ear, pausing only to flick at Alex's earlobe with her tongue.\n\nThe memory was still very fresh in Alex's mind, of how she had made Zabi scream with the aid of a handful of ice, and she moaned in response to the thought and Zabina's fingers brushing against her tender nub.\n\n\"I also remember you were going to throw my clothes out of the window.\" Zabi teased. \"Seeing as your luggage is in a different car, I wonder how you would cope if I was to do the same to you?\"\n\nAlex closed her eyes, giving herself to Zabina's fantasy, something else that Alex's was always impressed with. Zabina's ability to make any situation sexy, and any sexy situation erotic beyond belief. The mere thought of Zabi depriving her of any clothing, quickly brought her to the brink of climax, as she imagined them arriving at Zabi's family house, with the immaculately dressed Zabina and herself tumbling out of the car nude except for her blushes.\n\nA wave of freezing cold air wafted across Alex's body, inciting a shiver as goose bumps raised on her bare flesh, and returning Alex back to reality. Her eyes opened and she realised Zabina was no longer touching her. In fact, she wasn't even sitting next to her. Zabi was watching from the seat opposite, idly turning the air conditioning colder.\n\n\"Why have you stopped?\" Alex asked shivering in the slight chill.\n\nThe sexy pierced eyebrow arched, no doubt purposely, just to madden the over stimulated Alex a little more.\n\n\"I was just thinking how I wanted to watch you make yourself cum.\" Zabina told her with a slightly naughty smirk. \"You know, I have never said this, but I love just looking at you while you are naked.\"\n\nThis was something new to Alex. A slightly different spin to their relationship. They had obviously made love many times, and made each other screech and squeal in climax, but Zabina had never wanted to watch Alex please herself before, and the thought of doing it made Alex feel a little shy.\n\n\"And what happens if I don't want to?\" Alex asked, as she tried and failed, to keep from blushing.\n\nThe naughty smirk grew a little as Zabina looked from the bundle of Alex's clothes, resting under her hand, to the window, then back to Alex.\n\n\"Then I guess the first time you meet my Aunt and Uncle you won't have a free hand to greet them.\"\n\nThe half dreamt fantasy returned in a sudden rush as Alex pulled her knees up, automatically trying to cover herself at the thought of the situation. Alex looked to Zabi, trying to work out exactly what her plan was. She knew that Zabi would never put her in a difficult position, there was far too much love and respect for each other for that, as it was whenever they used bondage play, it was never about the balance of power. It was only about pleasing the other person.\n\nIf there was one thing Alex was always willing to do, it was pleasing Zabi.\n\nSlowly she lowered her knees, so that Zabina could take in Alex's lean, tanned body, and Alex smiled as she saw Zabi lick her lips in anticipation.\n\nWhilst Alex played out her role, she considered their relationship, it had been summed up by one of her favourite authors in a short story called The Gift. Submission was a gift and not to be taken for granted by the dominant. It grated on her nerves when people assumed, that just because there was an element of submission in a relationship, there could be no respect. If anything, there had to be more respect than in a 'normal' relationship. It was also common misconception in dominant relationships, that the dominant is in charge. While that is very true in some cases, in a truly loving relationship built on any form of submission. The dominant may set the rules, but the submissive one holds the reins. For example, Alex was now submitting herself to Zabina's will and carrying out a performance for her. But it was Alex that controlled the actual performance. It was she that would decide on just how much pleasure Zabi derived from it.\n\n\"Why don't you come here and suck my fingers.\" Alex suggested, as she arched her back and pushed her breasts forwards in a dubious centrefold pose.\n\nDutifully, Zabina slipped off her seat and placed the offered fingers in her mouth, running her tongue around each digit.\n\n\"You know I would have done this before if you had just asked me to.\" Alex told Zabina as she swapped hands and circled one of her nipples with a damp finger.\n\nZabi made a mmm noise as she carefully licked the fingers of Alex's free hand, eyes transfixed on Alex's emerald gaze.\n\n\"Do you want me to play with myself Zabina?\" Alex asked as she removed her fingers from Zabi's mouth and ran them over the still moist area between her legs. \"I actually wonder what you would do if I decided to let you throw my clothes out of the window.\"\n\nZabi had often referred to Alex as going doe-eyed when she had teased Alex. The reaction Alex got from that statement had the same effect on Zabina, and Alex felt a delightful flutter inside her.\n\n\"Is there a lake near the house?\" Alex asked panting as her fingers began rubbing against her pleasure nub. \"It would be nice for you to take me skinny dipping again. Do you remember the walk we had to do last time?\"\n\n\"Yes there is.\" Zabi managed to say, her voice barely audible. \"Not many trees to hide behind though.\"\n\nAlex felt the tingle of her climax begin to spread. \"That would be inconvenient if one of us had to walk back naked then.\" She managed to gasp as the orgasm began to crest, then squealed as Zabina's hand enclosed her own encouraging her onwards.\n\n\"One of us?\" Zabi said softly as Alex cried out. \"Like we know who that would be.\"\n\n***\n\n\"This is our home for the next couple of weeks.\" Zabina announced as they exited the car.\n\nA slightly dishevelled Alex looked at the low building in front of them. To a distant observer it would have looked like an old farm building, which was exactly what it used to be. Up close, it was apparent that the old barn had been extensively renovated. The walls were made from local stone and the windows had modern sealed unit glazing. What Alex assumed would have once been a large door had been walled up, but retained the arched feature of the original doorway. The entrance to the single story building was via a heavy looking iron bound door that sat in a small stone porch.\n\n\"I guess this isn't where your family live is it?\" Alex asked as she tucked her blouse back in to her trousers. Half the buttons were done up wrong, and her hair was tousled. Secretly, she was glad there hadn't been a reception waiting for them, as she had still been getting dressed as they arrived. She had forgone her underwear as it was, and a bra strap dangled out of her pocket.\n\nAs the car drove away Zabina turned to Alex and grinned. \"No the main house is just over that rise.\" She indicated a nearby gradient that was lined with the lush green of grape vines. \"I thought it would be more private to stay here, which was why I wasn't too bothered when you were still half naked when we arrived.\"\n\nAlex threw a playful slap at Zabina's arm. Although she didn't mind Zabina keeping the truth from her, as she was still buzzing from the sexual high. \"So do I get to meet Auntie and Uncle, or are you just going to keep me hidden away here as your sex toy?\"\n\nAn overly exaggerated sigh escaped Zabi as she opened the door. \"As much as that sounds very much like my idea of a good time, I did promise I would take you to meet them. So I suppose I should show you around the house so we can get settled in.\"\n\nAlex looked around at the surrounding fields. There were no houses, just acre after acre of vines. The road was reached by a fairly long driveway and she couldn't even hear the passing traffic let alone see it.\n\n\"Let me get this right.\" Alex said carefully. \"The nearest people are over at the main house which is a fair distance away?\"\n\nA slight frown creased Zabina's brow. \"Yes that's about right. Why?\"\n\nAlex nibbled on her bottom lip as the idea running through her mind fired the slight buzz she still retained from earlier. \"I have a little fantasy about a situation where we go someplace and you restrict my access to clothing. Like Jinn did to us at the cabin, only I want it to be just us.\"\n\nZabina's pierced eyebrow arched sexily, making Alex's knees go week. \"It has its attractions.\" Zabi replied. \"I think we should go inside and discuss this further.\"\n\nNodding happily Alex took a step towards the door, only to have Zabina block her access to the house.\n\n\"I think for the first day you should be unclothed.\" Zabina told her grinning wickedly.\n\nWith an obvious fake pout, Alex toyed sheepishly with the top button of her blouse. \"You want me to undress out here?\" She asked playing up to the role of being inhibited. She knew all too well that the roles they played were just a seductive form of game. Even though she was the taller and more muscular of the two, Zabina was the more dominant. Not by any agreement, but just because that's how things were. The vast majority of the time Alex loved to play the submissive damsel in distress, just because it excited her to be that way, and because she knew Zabina got aroused by teasing the 'helpless' Alex.\n\nThe buttons of her blouse came undone first, but she carefully let the blue silk part just enough to show just the parts of her upper body she wanted to show. Coquettishly, Alex unfastened her trousers and let the fall to her ankles, allowing her to step out of them. Like a stage professional, she held the tails of her blouse to provide as much cover as possible, intending to postpone the final reveal as long as possible. Keeping her legs pressed together, she crouched down and picked her trousers up off the floor, holding them out for Zabina to take with one hand, while her other clenched her blouse together.\n\nZabina's heels clicked deliberately as she stepped closer to Alex to take the offered item of clothing. As she did so, she allowed her other hand to gently run a single finger from Alex's neck downwards between the open folds of her blouse. Pausing slightly to encircle her navel before continuing downwards to slowly ease Alex's hand away from the clasped material.\n\nWith the majority of Alex's body on display, Zabina slipped an arm around her waist and drew her in close enough to plant a firm kiss on her lips.\n\nAs Alex responded she felt her blouse slide off her shoulders. She revelling in the sensation of her skin brushing against Zabina's clothing and the feeling of the warm Italian sun on her body, her eyes closed as she moaned softly in to Zabi's kisses.\n\nWith a gasp the pair broke away from each other, Zabina's hands full of clothes and Alex's slipping in to place to cover her modesty.\n\n\"Come on sexy.\" Zabi giggled. \"Let's get you inside before the sun burns your ass.\"\n\nWith a high pitched girly laugh Alex streaked past, shrieking as Zabi gave her a playful slap on the behind.\n\n***\n\nIt was dusk as Alex and Zabina made their way from the guest house down the path to the main house. They had enjoyed a short doze in the beautifully cool bedroom, then a very refreshing shower, before discussing what rules Alex wanted for her fantasy.\n\nIt had been fairly simple to work out, Alex would be only wearing clothes when Zabi allowed it, and when they went out, she would wear only items that Zabi chose for her. Alex was pleased, as she got to tease Zabi with her body a lot and she felt amazingly free being able to indulge her exhibitionist streak without any worries. Plus, Zabi always picked out better outfits then she ever could, so when she was dressed she felt just as sexy as she did nude.\n\nThey had agreed that this first night, they would behave sensibly, as Zabina had wanted Alex to be relaxed, and not have to worry about unintentionally exposing herself during her introduction to Zabi's family. They both wore figure hugging jeans and comfortable cotton shirts, Zabi's black and Alex's white.\n\nAs they crested the rise that sheltered the barn conversion, Alex halted, stunned at the aspect of the valley below. In the early evening light, the neat rows of vines lined the majority of the land. The lightly gravelled path on which they stood, wound its pale route downwards to join the darker driveway to the where the vineyard residence lay. The house was constructed from the same stone as the barn, and roofed with typically Italian, terracotta tiles. A wide veranda ran from one side of the house to the other, flagged in pale grey marble, and the feint glow of muted lights shone from the wooden framed windows. To the right of the homestead, a large swimming pool glistened with a dull glow, reflecting a beautiful purple colour in the growing twilight. To the left of the house, a group of outbuildings nestled together, huddled like they relished the company.\n\n\"It's beautiful.\" She managed to say finally.\n\nZabina's hand slipped in to Alex's as she joined her looking down the valley. \"I'm glad you think so Alex.\" She said huskily. \"I've wanted to show you where I grew up ever since we got together.\"\n\nWith a quick squeeze of her hand, Alex planted a soft kiss on Zabina's cheek, tasting the salt of her tears. \"I love it Zabi. Thank you for sharing it with me.\"\n\n\"Sorry.\" Zabi muttered, dabbing at her face with her wrist. \"Must the breeze making my eyes water.\"\n\n\"I so love you Zabina Vitelli. You put on this tough act, but really you're a big softie.\" Alex whispered and landed another soft kiss.\n\n\"And you're a horny, sex mad nudist.\" Zabi replied with an innocuous smile. \"And I worship the ground you walk on.\"\n\nBlinking away her own tears, Alex hugged her lover tightly. \"I'm sex mad?\" She questioned. \"Mistress Pot, speaking to Miss Kettle.\"\n\nA wandering hand pinched Alex's behind. \"Hey no 'M' word,\" She warned jokingly. \"We better get moving, Auntie Donna will be angry if we are late to eat.\"\n\nAlex's stomach rumbled at the thought of food. \"Is she a good cook?\"\n\n\"Seriously?\" Zabi questioned as they continued their walk. \"She is an Italian mama. They have four principal fixations. The Pope and family then food and wine. It is practically a religion.\"",
        "\"Cool.\" Alex smiled happily. \"I could eat a horse.\"\n\n***\n\nAlex sat back in her chair, happily over stuffed with some of the nicest food she had ever tasted. Zabina's Auntie Donna had refilled her plate several times, but even Alex with her great appetite for food, had to politely refuse in the end.\n\nShe had been more than a little nervous about meeting Zabi's Aunt and Uncle. For a start they were the closest thing Zabi and Dominic had to parents, and for another, she was worried that they would judge her for being in a same sex relationship with their niece.\n\nHer worries were completely unfounded, as from the first sight of her Auntie Donna had embraced her warmly, tears in her eyes and babbling away in Italian. Even though she knew very little of the language, the acquisition of foreign languages was a skill that had passed her by, the word famiglia was often repeated.\n\nUnlike Auntie Donna loud emotional approach, Uncle Benito was a quiet intelligent looking man, who resembled an older version of Dominic.\n\n\"Welcome to our home Alexandria.\" He had told her in heavily accented English. \"And welcome to our family. We are happy to finally meet the important person in Zabina's life.\"\n\nAfter the introductions they had sat down at the large table in the kitchen and Alex was a little surprised when Uncle Benito led them in to a short prayer of grace, not because of the actual act, more because she saw Zabina mouthing the words, and was surprised at the piety she showed.\n\nAfter the prayer Auntie Donna bustled around dishing out slices of fresh bread smothered with garlic and olive oil. These were accompanied by slices of large, red, beef tomatoes and basil. For such a simple appetiser, Alex couldn't believe the explosion of flavours on her taste buds. Glasses of light fruity white wine accompanied the earthy first course, and like the food was impressed by the quality of the wine, even more so when she learned off Uncle Benito it was the family label.\n\nThe main course was server from a tureen that was close to the size of a small bath, and Alex's mouth had watered when Auntie Donna had removed the lid, and began dishing the contents out. The white wine was replaced by a bottle of red, that Alex found very to her liking. The casserole turned out to be large chunks of chicken that had been saut\u00e9ed then cooked through in a rich tomato sauce with olives peppers and celery. More chunks of fresh bread were broken up and passed around and Auntie Donna watched with delight as Alex demolished her first helping then accepted more.\n\nLater Zabina had told her that Auntie Donna had said the she should eat like Alex had done, that way she wouldn't be skin and bone. Something Alex had found very amusing.\n\nDessert was another new experience for Alex. Zabina had told her it was called Zabaione, and was her favourite dessert, but no one made it like Auntie Donna did. Alex made a mental note to find out off Auntie Donna exactly how to make it so she could surprise Zabi one day. The first mouthful of the mousse like pudding nearly took Alex's head off. She surmised whatever was in it around eighty percent of it was alcoholic. No surprise Zabina liked it.\n\nAfter the dessert Alex was quiet happily nibbling at the large selection of cheese and fruit, whilst wondering why her wine glass never seemed to be empty, no matter how quickly she drunk it. A lot of the conversation drifted in to Italian, and Alex was happy so sit and watch Zabi glow in the adoration of her Aunt and Uncle. It was a rarity to be in a family atmosphere as they were both orphaned, and Alex didn't mind being excluded a little.\n\nA warm hand came to rest on Alex's arm and she jumped a little at the touch.\n\n\"You as much our daughter as Zabina is Alexandria.\" Auntie Donna told her in broken English. Her expression sincere and caring.\n\nAlex wasn't sure if it was the wine or the jet lag, but the gentle comment stirred emotions in her long forgotten, and tears welled in her eyes as she stood and wrapped her arms around Donna Vitelli, speaking one of the few words of Italian she remembered from her lessons with Zabi.\n\n\"Madre.\" \n\nThe two women, held on to each other for a long moment sharing each other tears. When Alex returned to her seat, dabbing her eyes with a napkin, she felt Zabina's fingers wrap around her hand giving a gentle squeeze.\n\n\"Welcome to my family Alex.\"\n\nA few more tears followed, then Uncle Benito poured more glasses of wine for the three woman and left them to their own devices, pleading an early start.\n\nThe rest of the evening seemed very surreal to Alex. They sat around talking and sipping glasses of chilled wine, Zabina translating for her Aunt and Alex, as they swapped stories, until more than slightly tipsy and a little tired, Zabina and Alex bid Donna a good night, and thanked her for the excellent meal.\n\n\"I'm glad you enjoyed the evening Alex.\" Zabi said as they started up the path. \"I think Auntie Donna is very taken with you.\"\n\n\"She's lovely.\" Alex replied with a slight slur to her words, then giggled.\n\n\"How tired are you baby?\" Zabi asked Alex as they came in to sight of the cottage.\n\nAlex breather the warm night air that was edged with a cool fresh breeze coming off the mountains. \"Not too bad.\" She giggled again in reply, then hiccupped. \"The walk is bringing me round a little.\"\n\n\"That's good, because I am feeling a little naughty and I think you should walk the rest of the way nude.\"\n\n\"A little naughty?\" Alex said as she halted and tried to judge the distance to the cottage. \"I would say that's more than a little naughty.\"\n\nZabina gave a fake yawn. \"Well we did agree that you would be nude today, I only let you get dressed while you met my family.\"\n\nThe familiar feeling of butterflies flocking in her tummy caused Alex to subconsciously press her legs together, as her arousal launched skywards, fuelled by too many glasses of excellent wine and Zabina's suggestion.\n\n\"I need a little privacy.\" Alex hiccupped again, as she stepped off the path and behind the nearest row of vines.\n\n\"Hey not fair.\" Zabina protested, half seriously. \"The idea was that I watched you.\"\n\n\"Not tonight my Josephine.\" Alex managed to say in a half drunken impression of words supposedly spoken by Napoleon.\n\n\"Wrong country.\" Zabi giggled as a blouse came floating over the vine to land on her head.\n\n\"Close enough.\" Came the slurred reply followed by a grunt, then a giggle and another grunt. \"Ouch. Stood on a stone.\"\n\nOn the path, Zabina was nearly doubled over laughing at the commotion taking place out of sight. A pair of jeans landed on the floor just in front of her, and she carefully dusted them off and placed them on her arm along with Alex's blouse.\n\n\"Underwear incoming.\" Alex warned, almost too loudly, and Zabina's hands clapped as she tried to catch the two separate items.\n\n\"Are you coming out on to the path again?\" Zabina asked trying to hold back her laughter.\n\n\"Yep.\" Alex answered, her voice a little strained. \"Just putting boots on.\" A loud outward breath blew from Alex. \"Okay.\"\n\nA bare leg appeared from behind the vine as Alex tried to whistle a sexy tune, and slowly reveal herself to Zabina. Of course the display would have been a little more erotic is she hadn't fallen over.\n\n\"Ooopsie.\" Alex called out as she landed ungracefully on her behind giggling.\n\nAfter a brief struggle, Zabi managed to get the unstable Alex back on her feet. \"You know.\" Zabi stated holding on to Alex's arm. \"I don't think I have ever seen you this drunk.\"\n\n\"I'm not that bad.\" Alex replied with another hiccup. \"Although I do feel a little horny.\"\n\n\"Really?\" Zabi asked with her customary eyebrow raised. \"Maybe I should walk you around a little more. The workers that tend to the vines will be starting in a few hours, I'm sure they would be thrilled to have a beautiful naked woman running around.\"\n\nAs Alex opened her mouth to reply a noise deeper in the vines caught both their attention.\n\n\"Someone's watching.\" Alex said, suddenly sobering up and using Zabi to hide behind.\n\n\"Here, cover up.\" Zabi instructed pressing Alex's clothes in to her arms. Then looked around at where the noise came from, her eye's narrowed as she tried to focus in to the dark.\n\nAs Alex struggled in to her blouse, Zabina ducked around the end of the rows of vines and shouted something out in Italian which was followed by a shriek, then a silence.\n\nWith her blouse done up and the majority of her body covered Alex peered down the row of vines Zabina had disappeared down. Carefully she made her way along the between the rows until she saw the outline of Zabina just ahead of her, kneeling down and looking through a gap between two trunks of vine.\n\nZabi gestured to Alex to look where she was, and Alex knelt beside her. In the next row along Alex could clearly see a young woman kneeling down and facing away from them. She was easy to spot in the dim light of the moon as she was totally naked.\n\nAlex's hand went to her mouth to stifle a giggle, shocked that the person they thought was watching them was actually trying to hide for the same reason.\n\n\"Puoi uscire adesso. Possiamo vederti\" Zabi instructed. \"You can come out now. We can see you.\"\n\nAlex saw the girl stiffen then slowly rise to her feet muttering an obscenity.\n\nThe three women moved towards the path, Zabina watching the nudist, newcomer closely.\n\nOnce on the path Alex glanced the young woman over, as she stood with her hands behind her back trying desperately to cover her modesty by crossing her legs. A movement that reminded Alex of her own semi dressed state, and she tugged at the hem of her shirt.\n\nZabina circled the unfortunate girl, her eyebrow arching madly. \"Can I ask why you are running around our vines?\" Her tone slightly humorous.\n\nThe girl shuffled nervously, eyes directed towards her feet. \"I'm sorry Miss Vitelli, I didn't know anyone was here.\"\n\n\"So you know who I am.\" Zabi stated.\n\n\"Yes Miss Vitelli, I look after the horses. I'm backpacking on my gap year and got a job here for some extra money. Please don't tell anyone, I can't afford to lose this work.\"\n\n\"Do you do a good job of looking after the horses?\" Zabi asked casually, almost as if they were discussing it over a coffee.\n\n\"Your Uncle is happy with my work. My parents have horses and I grew up looking after them.\"\n\nAlex couldn't help but smile at the situation. One minute they were happily wrapped in each other, the next, they had stumbled across someone else's private moment, and the two worlds had collided. Then as per normal, Zabina took it all in her stride like it was an everyday occurrence.\n\n\"Then if you do a good job, then there is no reason why you would lose your job here.\" Zabi assured, her voice betraying a bitten back giggle. \"Though I am curious as to why are you nude apart from handcuffs?\"\n\nOnce again the girl shuffled her feet and tried to cover herself again, her head hung low.\n\n\"Zabi, stop tormenting the poor girl.\" Alex butted in. \"We should get her inside and find her some clothes.\"\n\nZabina sighed and formed an exaggerated pout. \"You ruin all my fun. But you are correct, if the roles were reversed, I would hope that someone was gentle with you.\" Zabi redirected her attention to the hapless girl. \"Where is the key to your cuffs?\"\n\n\"Hidden by the gate to the exercise paddock.\" The girl answered, her voice a little more confident after the friendly banter between Zabina and Alex. \"I get a rush out of getting there and back nude.\"\n\nThis time Zabina couldn't hold in the laughter that had been building inside her. \"Sorry.\" She said tittering quietly. \"You just remind me of someone I know. Come here, let's get those cuffs off.\"\n\nThe girl turned around to give Zabi access to her handcuffs, and Zabi produced a key from her pocket.\n\n\"Why do you have a handcuff key on you?\" The girl asked as her wrists came free.\n\n\"I always carry one.\" Zabi answered cheerfully. \"You never know when you may find a naked girl in need of one. Or even find a naked girl who needs locking up.\"\n\nWith the handcuffs removed the trio made their way to the guest house, Alex and Zabi learned that the nudist's name was Ellie. She was from New Zealand and had landed the job at the stables with a travelling friend, an Irish girl named Roisin. It had been down to her that Ellie had been in her nude state. Apparently after a few drinks Ellie had lost a bet and been forced to run nude from the stables to the exercise paddock to retrieve the keys to the handcuffs. Apparently Ellie got aroused by the situations Roisin got her in to. Something that Alex thought was a little coincidental, but it was a small world after all.\n\n\"Do you think she will make it all the way back without getting naked again?\" Alex asked as Ellie, now dressed in one of Alex's night shirts, began her journey back to her apartment by the stables.\n\n\"Would you?\" Zabi asked with a snort of laughter. \"I bet she'll be nude before the first footpath.\"\n\n\"Speaking of being nude.\" Alex murmured as she wrapped her arms around Zabina's waist. \"I think it's been far too long since you made love to me.\"\n\nZabi's hand caressed the hands that encircled her waist. \"How about I run you around the exercise paddock for an hour. I think you would look very racy on the end of a lunging rein.\"\n\nAlex's mouth nuzzled in to Zabi's neck running her tongue over the rose tattoo. \"I have no idea what you are talking about.\" She said as she began to undo the buttons on Zabina's blouse.\n\n\"You can exercise horses by attaching a long rein to the horse's harness, you walk, trot and canter them around you and encourage them a little with a long whip.\" Zabi explained, letting Alex's hands roam over her upper body. \"I thought I may put a collar on you then make you run around the paddock naked, giving you a tap on the behind now and then.\"\n\nA light moan escaped Alex's mouth as she pictured the act Zabi was describing. The thought of Zabina 'exercising' her that way, warmed her insides deliciously. \"I think I may enjoy that idea.\" She confessed, as her fingers began to toy with one of Zabina's piercings.\n\n\"Oh, that's very welcome.\" Zabi sighed, enjoying the attention Alex was giving her. \"I am sure we could get Ellie to leave the equipment out for us.\"\n\nLeaving one hand teasing Zabi's breasts, Alex slipped her other hand down and unbuttoned the figure hugging jeans, then slipped her hand inside Zabi's underwear. \"And just how long do you think I would need exercising for?\"\n\nZabi's hands reached behind her finding Alex's thighs and pulled her in closer. \"Normally you exercise a horse until it begins to get hot and sweaty, then cool it down slowly.\" Zabi said as her breathing increased in time to Alex's touches. \"So how about I exercise you until your nice and wet, then warm you up some more.\"\n\nAlex's teeth closed on the soft flesh of Zabi's neck, making her wince slightly, the gasp as Alex's fingers found her pleasure spot.\n\n\"I may take you up on that offer while we are here.\" Alex whispered. \"But at this moment in time I am going to hold you very tightly and make you squeal.\"\n\nZabina relaxed in to Alex's arms. While she did enjoy tormenting Alex, being held in Alex's stronger arms was a sure fire way of making her very turned on. She loved how the much stronger Alex would be submissive to her, and loved it even more when Alex used her strength to dominate. The feeling was intense, breath taking, and extremely arousing.\n\n\"Alex you big stud, take me to bed or loose me forever.\" Zabi implored in between gasps.\n\n\"Seriously? We're doing Top Gun quotes now?\" Alex giggled as she pulled Zabina's blouse off and urged her towards the bedroom.\n\n\"You have an objection to Top Gun quotes?\" Zabina asked as Alex pushed her backwards on to the bed and pulled her jeans off.\n\n\"Hell no.\" Alex replied as she gazed at Zabina's body, recumbent and hardly covered. \"This is Maverick requesting fly by.\" She quoted then threw herself on top of Zabi.\n\n\"Negative Maverick the patter is full.\" Zabi quoted in reply as her fingers entwined in Alex's hair. Slowly she guided the tousled blonde head towards the junction between her legs, and Alex's tongue pressed hard against her nub sending a sonic boom through her body.\n\n***\n\n\"I think this was a bad idea.\" Zabina said as she plated the slightly over crispy bacon out.\n\n\"What's a bad idea baby?\" Alex asked as she glanced up from her eBook and sipped her coffee.\n\nZabina's eyes roved over Alex as she sat quietly on the kitchen chair, legs crossed demurely and wearing just the coffee cup and a digital sex novel.\n\n\"Having you nude in the kitchen while I am cooking is too distracting.\" She complained. \"I've burned the bacon.\"\n\nAlex lifted a slightly charcoaled rasher off the plate and nibbled it daintily. The bacon crunched.\n\n\"Yeah I see what you mean, but it was your choice.\" She smiled naughtily. \"Maybe we can get some less burned breakfast when we go out. Always assuming we are going out, and you don't just want to stand there all day and watch me read.\"\n\nTearing her eyes away from the object of her affections, Zabi placed the pan on the cooker and sorted out the least burned rasher. \"As much as I would love to do that, there is actually, somewhere I want to take you today.\" Zabi told Alex. \"When you get dressed that is.\" She added hurriedly.\n\n***\n\n\"Are we nearly there yet?\" Alex teased. She loved playing the child in the relationship, just as much as Zabi enjoyed her being a little immature from time to time, and this was the ideal opportunity. With Zabi the only one of them knowing the destination, Alex could indulge in a little silliness.\n\nThey had the use of one of the yard's pickups, a Fiat Fullback, that Alex liked immensely, even if it did lack the grunt her Dodge Ram had, it looked very stylish. Although as Zabi had explained, there was very little in Italy that wasn't stylish. Things may not be practical, but they would look good.\n\n\"Actually, we are close now.\" Zabi told her as they rounded a corner and the sea came in to view.\n\n\"Oh my!\" Alex exclaimed as she took in the view. \"That looks beautiful.\"\n\nBelow and to their right a wide cove opened out. A picturesque village nestled at the bottom of the bay, a dull gold line separated the buildings from the sapphire blue of the water that rolled in to the anchorage.\n\n\"The village of Levanto and the Tyrrhenian sea.\" Zabina informed her. \"Lovely isn't it. I thought you may like to visit the beach while we were her.\"\n\nAlex wound the window down and half leaned out of the opening, taking in the scene below them. \"I love it Zabi, thank you. Can we go for a swim? You should have said, I would have brought my swimming costume.\" The words babbled out in her excitement as she bounced up and down in her seat.\n\nZabi grinned at Alex's excitement, happy that she could still pull one or two surprises out of the bag.\n\nWith the Fiat parked up on the road side, Zabina and Alex crossed over and on to the beach. Zabi laughing at how Alex immediately kicked off her boots to walk bare foot on the sand. A light offshore breeze was picking up and Alex stared dreamily out to sea as the rolling waves began to crest white.\n\n\"This is really awesome Zabi.\" Alex whispered. \"Those breaks look perfect.\"\n\n\"Well it is supposed to be one of the most reliable surfing beaches in Tuscany.\" Zabi told her, watching for Alex's reaction carefully. \"Apparently it has a deep water bay that is surfable even when everywhere else is blown out or choppy.\" Zabi quoted the remembered article she had read when researching the area.\n\n\"Really?\" Alex questioned. \"Since when did you become an expert?\"\n\nThe stud lifted as Zabi did her raised eyebrow. \"Since a certain surfer girl got naked for me and asked if I could give her the confidence to surf again.\"",
        "Alex froze. \"Are you kidding me?\" She asked. \"I thought you setting me up with Jinn for some lessons was as far as your interest went.\"\n\n\"Alex, have you ever know me to do things in half measures?\" She asked. \"Especially where you're concerned. Your happiness is important to me, and I promised I would help. Now I know this isn't Zuma or Malibu, but it is gentle, and Jinn agreed you're ready to go solo.\"\n\nAlex hugged Zabi closely. \"That is lovely baby, thank you. So are you are going to tell me you have a board in the car?\" Alex teased while feeling a little hopeful.\n\nZabi shook her head. \"Sadly if I had done that it would have ruined the surprise.\" She smiled as Alex tried to hide her disappointment. \"So I had someone bring a selection of gear over for you to choose from.\"\n\nAlex gaped as Zabi waved to two Italians who jogged down from a van by the road. Each carrying a couple of board bags.\n\n\"This is Marco and Rosa.\" Zabi introduced. \"They run a local surf shop, and will get you fitted up with everything you need.\"\n\n\"Ciao.\" The pair greeted as they began to lay out a selection of boards for Alex to choose from.\n\n\"That's rather nice.\" Alex commented as Rosa showed her a Chemistry Flash Point in light blue.\n\n\"Yes she is.\" Zabi teased watching Rosa's shapely body emphasised by the figure hugging wet suit. \"But alas she is straight and married to Marco.\"\n\n\"I meant the board.\" Alex replied poking her tongue out at Zabina. \"That's perfect, the squash is nicely rounded and I like the quad fins.\"\n\n\"Possiamo avere questa Rosa?\" Zabi translated for Alex, and Rosa nodded happily. \"E abbiamo bisogno anche di una muta per favour.\" \n\n\"Nessun problema.\" Rosa replied, looking over Alex's body before asking Marco something, who ran to the van and returned with an O'Neil Bahia wetsuit, which Rosa held up to Alex's body to judge the size.\n\n\"Perfezionare.\" Rosa commented.\n\n\"Grazie.\" Zabina thanked. \"Okay, I think all you need to do is get changed.\" She told Alex.\n\nGathering Zabina in her arms, Alex planted a hard kiss on Zabi's lips. \"This is so awesome. Thank you Zabi. I love you so much.\"\n\nSmiling happily, Zabina slapped Alex's behind. \"Go get changed in the car, or the waves might be gone before you get out there.\"\n\nAlex settled for planting another kiss on Zabina's smiling lips then sprinted back to the car, which happily had blackened glass in the rear windows to allow a little privacy.\n\nWhile Alex changed, Zabi steeled herself down on the rocks that made up the breakwater. Rosa and Marco, who were already wearing wetsuits, grabbed boards and ran in to the gently rolling waves that eased up to the shore. Zabi sighed, wishing she was a little happier in the sea so she could experience Alex's enjoyment, but she was a weak swimmer at the best and the sea wasn't her friend. It would be enough just to watch Alex play for a while, that alone filled Zabi's heart with joy.\n\nAs Alex ran back towards her, Zabi couldn't help but sigh again. Alex's body was looking so trim, the workouts had firmed up every muscle and the tight wetsuit showed off every beautiful curve, from her firm breasts, down to the lovely rounded buttocks and strong thighs.\n\n\"Thank you again Zabi.\" Alex said as she scooped up the board. \"Will you be okay there?\"\n\n\"I'll be fine, go and play, just make sure you come back in one peace.\" Zabi instructed, wondering if it was worth popping back to the car and hiding Alex's clothes. It would be interesting to help her out of the wet suit later either way.\n\nAlex's feet hit the water at a run. The first thing she noticed was the water off the coast of Italy felt warmer than the Pacific, she had always thought this body of water was the Mediterranean, until Zabi had recently corrected her knowledge. 'You learn something every day' she told herself.\n\nZabi had also been correct about it being a deep bay, a few meters out the sandy bottom dropped away sharply, and Alex dropped on to the board and began to paddle away, her broad shoulders working away and cutting over the surface easily.\n\nAt Alex's level of ability, surfing was just as much about being in the right place mentally as it was skill, and that was where she had fallen down before. After her accident and subsequent dumping by her then girlfriend, Alex's self-confidence had taken a battering, and it had taken Zabina a lot of persuasion to convince her that she wasn't worthless. One early lesson involved getting her to strip naked in the restroom of Dominic's club. She smiled at the erotic memory. If anyone had told her then that she could get so turned on by being tormented by Zabina, she would have though them mad. And she wasn't even going to start thinking about how aroused she got by being naked around her.\n\nA rolling wave lifted her board up, and Alex dragged a hand in the water to bring her sideways on to the swell. Rosa waved from where she was sat waiting with Marco. It felt funny to be out here. She had done a little surfing back on Venice beach in the shallows, but that was under the watchful eyes of Jinn. Now she was on her own and about to give herself to the waves and the power they could muster.\n\nA brief flash back washed through her mind. Catching the breaking edge of the wave slightly wrong and wiping out totally. Then getting dragged down by a vicious undertow where the world turned blue and white, only to be thrown in to a rock and the pain that followed.\n\nAlex banished the memory, pushing it from her mind and feeling the movement of the waves around her. She closed her eyes. Listening.\n\nThe sea around her inhaled, drawing back the shallow water as a rolling swell built further out.\n\nAlex went from sat upright, to flat out paddling in a blink, powering towards the inbound wave. She felt the water shift below her and turned sharply, running with the wave. Out of the corner of her eye she saw Marco hit the edge of the wave and begin to ride.\n\nJinn's words came to her mind. 'When you want to ride, count to six.'\n\n'Too early Marco'. She thought, as she felt the wave gather strength under her.\n\nThe wave began to peak, and Alex came to her feet, feeling the board stabilise as her balance levelled out.\n\nWhite water curled at the waves lip, and Alex dropped off the curl and on to the front face of the wave.\n\nHer heart pounded as the wave roared in protest at her suborn refusal to give up.\n\nA memory of Zabina touching her for the first time sent shivers up her spine, as she remembered riding the sensations like she rode a wave.\n\nAlex relaxed in to the moment, much the same as he did with her very first climax at Zabina's hands. The edge of the board caught the wave perfectly and she went from fighting the wave to riding with it.\n\nThe wave's roar eased off as she zipped gracefully across the water. Her mind and body at one with board and wave.\n\nSomewhere behind her she could heard excited Italian yells of encouragement.\n\nAs the wave approached the shallows, Alex cut back running the opposite way as the breakwater took the force out of the wave, and she slowed and stepped off the board in to the water.\n\nAdrenaline was pumping around her body and Alex could feel her legs shaking with the effort of standing after the rush of catching the wave. She glanced back wondering if she had the physical energy to go again. Rosa and Marco were cheering madly from further out, and for a second she was tempted. Then she glanced back to where Zabina was sat and she knew exactly where she wanted to be.\n\nBy the time Alex reached Zabi, the adrenaline had drained from her body and she was shaking like a leaf. Alex carefully laid the board down as Zabi stood and wrapped her in a warm beach towel. Alex gazed in to Zabina's face and the look of pure pride she found there, melted what little strength she had left. Alex fell in to her embrace, her eyes filling with tears as her emotions got the better of her.\n\n\"I always knew you would find your true self one day Alex.\" Zabina told her softly. \"Now your journey of discovery is complete.\"\n\n\"Thank you Zabi.\" Alex managed to say between sobs. \"I couldn't have done it without you.\"\n\n\"Nonsense. I just showed you the door. It was you that stepped through it.\"\n\nAfter a while of just holding on to each other, Zabina and Alex sat down on the sand, Zabi leaning against the rocks of the breakwater, and Alex leaning against Zabi. Neither of them spoke, they just watched the waves roll up to the sand.\n\nAs the sun began to sink towards the horizon, Zabi kissed Alex's salty hair. \"Do you like it here Alex?\"\n\n\"I love it baby.\" She replied. \"The pace here is so much easier to live with. I feel like I can just stand still for a moment and enjoy just being with you.\"\n\nTears stung Zabina's eyes, and she blinked them away. \"Would you like to stay here?\"\n\nAlex's hand found Zabi's under the towel and gave it a squeeze. \"I would love to stay here. I know you want to, and I can honestly say I love it.\"\n\n\"Enough to stay forever?\"\n\n\"Yes. Forever.\"\n\nZabina's arms tightened their grip around Alex. \"Then here is where we stay.\"\n\nTHE END\n\nWell thank you all for reading these stories. I have reached the point where I think Alex and Zabina are very happy, and that is how I want to leave it.\n\nAs much as I have enjoyed these two, I feel it is time to move on to new projects. I will however be collating these together and rewriting some sections to hopefully publish in eBook format, if I ever get the chance.\n\nThank you once again.\n\nATM"
    ],
    "authorname": "TrueMort",
    "tags": [],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-tale-of-two-switches-ch-12"
}