{
    "title": "Something Afoot",
    "pages": [
        "I had just pulled up to the apartment I shared with my sister after a trip to the grocery store when I got a text from her. I shut off the car and checked the text before climbing out.\n\n\"I know it's so weird, but don't forget my tampons. Please?\"\n\nI shook my head and chuckled. Little did she know that my ex-girlfriend had broken me of that phobia. It seemed that every other month she would run out, and I'd have to go to the store for her, to an aisle no man should ever venture into. Other than the sex, it was probably the only good thing to come out of the relationship.\n\n\"Already have them. Just got home from the store,\" I texted back.\n\n\"Sorry to make you go through that, but thank you.\"\n\nThe store was out of her way coming home from college, but something else wasn't. \"As long as you pick up the free pizza on my account, and it counts as my turn cooking, we're even.\"\n\n\"Done. I should be home by five.\"\n\nThat saved me from having to make something for dinner that evening. Happy with the outcome, I gathered up the eight bags of groceries on one arm, and headed for the apartment. Unlocking the door proved an adventure as usual, but I was determined not to make more than one trip. It was a matter of male pride, and doubly necessary because I'd just bought tampons for my sister.\n\nThe place was clean, which was the big plus since Becky had moved in with me. In her last year of college, she was tired of the dorm life. I had an extra room, couldn't stand the thought of her having to move back in at home, and I'd always got along with her, so her cleaning up and pitching in when she could worked out for us.\n\nOf course, we were both between relationships at that point. I wasn't looking forward to the weirdness that was sure to happen when one or the other of us hooked up.\n\nOnce the groceries were put away, I kicked back and enjoyed my reprieve from cooking duties by watching the last couple of episodes of a series I'd started binge-watching over the previous weekend. Becky would have been pissed if she found out that I watched them without her, but I wasn't dumb enough to let her find out. The credits rolled with five minutes to spare, and I looked forward to playing it cool when we watched the shocking conclusion together in a couple of days.\n\nSis arrived with the pizza, and I flipped the box open almost as soon as it hit the coffee table in front of the couch.\n\n\"Pig,\" she teased as I took the first bite.\n\n\"Nag,\" I answered with a mouthful of pizza.\n\nShe made a gagging sound and said, \"Gross.\"\n\nThe doorbell rang, and before I had time to wonder who it could be, Becky explained, \"Vera's coming over to borrow a book.\"\n\nThat was one of the disadvantages of living with my sister &mdash; the regular stream of her hot little coed friends dropping by. Becky and I had made an agreement years before, while still living at home, that dating each other's friends was off limits. So the parade of hotties was nothing more than cruel temptation.\n\nVera was a particular weakness. The redhead was a year older than Becky, and had a smoking hot body. She also loved to flirt with me, knowing I couldn't do anything about it.\n\nI knew I was in extra deep trouble when Becky opened the door to reveal Vera in a pencil skirt, open-front jacket, heels, and stockings. She looked incredible &mdash; classy and sexy &mdash; but the stockings were the real kicker. I've got a serious thing for stockings and feet. Don't ask me why, because I couldn't tell you if I tried. There was no denying it, though.\n\n\"So, how is it going at the new job?\" Becky asked as she let Vera in.\n\nIt was all I could do to eat my pizza and feign disinterest as the redhead's heels clicked on the tile in front of the door.\n\nVera answered, \"Not too bad. I've made a couple of friends, and haven't screwed anything up yet.\"\n\nI'd been waiting for it, and sure enough, she turned toward me.\n\n\"Hey, Andy. Have you been hitting the gym?\" she asked, and then made a sultry meowing sound.\n\nI rolled my eyes, and said, \"Hello, Vera.\"\n\n\"God,\" Becky laughed, and then said, \"Come on,\" while walking toward her room.\n\n\"I just want to borrow him for a few minutes. Or maybe an hour. Or two,\" the redhead said as she followed my sister. It earned her a playful slap as they walked in the door, followed by them both breaking out into laughter.\n\nYep, Vera is pure evil.\n\nThe book changed hands, and Vera left, but not before blowing a kiss to me on her way out the door.\n\n\"She only does that because it embarrasses you,\" Becky said when she plopped down on the couch and grabbed a slice of pizza.\n\n\"It doesn't bother me, so she's wasting her time,\" I lied.\n\n\"Oh, that's why your ears are as red as stop signs, huh?\"\n\nMaybe I should amend that to women are evil. Even &mdash; or maybe especially &mdash; sisters.\n\n****\n\nI walked in the door after an extra long day at work that Friday, and could hear music coming from the bathroom. I had skipped hitting the can at work to get out of the building a couple of minutes faster, and it was catching up to me.\n\nI knocked on the door, and Becky immediately called out, \"Don't come in. I'm in my underwear.\"\n\n\"Hurry up. I'm about to piss down my leg here.\"\n\nThe music stopped, and she asked, \"What?\"\n\n\"I need to piss.\"\n\n\"Okay. Let me throw on my robe, but hurry so I can finish getting ready.\"\n\nI stood outside the door, shifting from foot to foot, wondering how long it could possibly take to put on a robe. I was about to yell that she'd be mopping up a mess if she didn't let me in when the door finally opened.\n\n\"Move, move, move, move,\" I muttered as I sidled past her. She laughed at me, of course.\n\nWhen I left the bathroom, much relieved, Becky said, \"Vera will be here in a little bit to pick me up. I was already running behind, so tell her when she gets here.\"\n\nConsidering the slinky clothes I'd observed hanging in the bathroom, it wasn't hard to guess where she was going. She was taking full advantage of turning twenty-one, and felt even freer to do so, now that she wasn't living in the dorm with the grapevine.\n\nI'd be lying if I said I didn't worry about her a little, even though she'd always shown common sense. It hadn't been that long since I'd been her age, prowling the bars for girls.\n\nBecky returned to the bathroom to continue the unfathomable and seemingly never-ending preparations a woman undertakes before going out. I headed for the fridge to see what I could scrounge up from the leftovers. I had no concrete plans for the evening, and there was no chance I was going to get into the bathroom any time soon to clean up and hit the town.\n\nShortly after I polished off the last of the chili, the doorbell rang. I was in the middle of sending texts back and forth with my friends to find out what was happening, and absentmindedly answered the door.\n\nDamn.\n\nVera's whole outfit was designed to show off her body, but it was the shortness of her skirt letting me see the top of her stockings that got me. Somehow, I kept it together and told her Becky was still getting ready. As soon as she was inside, I closed the door, stuck my nose back in my phone, and headed for the couch. Thankfully, Vera made a beeline for the bathroom, which put her out of sight.\n\nI blew out a hard breath from between pursed lips and hoped she'd stay with Becky until it was time for them to leave, minimalizing the torture. Naturally, she dashed those hopes on the rocks a few minutes later.\n\nI saw her emerge from the hall in my peripheral vision, and fought off my natural inclination to drink in the vision. I sent another text, confirming a third for our trip to the bar, even though it would be an early evening because of things the guys had to do the next day.\n\nVera walked up next to the couch and said, \"Becky said to tell you we're taking a cab so you won't worry about us driving.\"\n\nI chuckled and &mdash; without looking up from my phone &mdash; said, \"If I were you, I'd be more worried about her yakking in the car.\"\n\n\"I heard that,\" Becky yelled from her room.\n\nI laughed, and looked at Vera when she snapped a hand over her mouth to stifle her own laughter. She then shook her head and pointed an accusatory finger at me. I shrugged and smiled at her, pointedly looking at her face rather than everything else, which she was advertising so well.\n\nThe next thing I know, she's moving, and before I can react, she turns around and asks, \"I don't have a run in my stocking, do I?\"\n\nThere I was with her sweet ass in my face &mdash; completely dumbfounded.\n\n\"Do you see anything?\" she asked again.\n\nI could certainly see something, and I wanted nothing more than to grab a handful of it. Her question finally burned through the fog in my brain and I answered, \"No.\"\n\n\"You sure?\" she asked in a sly tone.\n\nI looked up and knew I was busted. I tried to play it off anyway and said, \"Looks fine to me.\"\n\n\"Why, thank you,\" she said, and then gave her ass a slap before stepping away.\n\nBecky emerged from the hallway to rescue me.\n\nVera asked, \"Ready to go?\"\n\n\"Yep,\" my sister answered while heading for the door. Before she opened it, she said, \"Don't wait up.\"\n\n\"Don't get arrested,\" I tossed back at her.\n\nAs soon as the door closed, I groaned and adjusted my half-a-stiffy. Have I mentioned that Vera is pure evil?\n\nThe bathroom was finally free, so I slid off the couch to get ready for my own night out.\n\n****\n\nI had a good buzz going when the cab dropped me off at home just before midnight. It had been fun, but the ratio of single guys to single girls had been about three to one. Both of my friends had steady girls, so in light of the competition in the place, I decided to just hang out and enjoy the eye-candy.\n\nI was still too wired to sleep, so I grabbed a beer from the fridge and fired up the Xbox. It took me a while to remember where I was in the game, because I hadn't played in weeks, but I got back into it soon enough. The game sucked me in so deep that I was shocked to see it was going on three a.m. when I heard laughter outside the door.\n\nVera and Becky stumbled in after much fumbling with the key, still laughing. My sister was absolutely sloshed, only able to remain upright because of an arm over the redhead's shoulders. I shook my head and chuckled at them crossing the room in fits and starts. At some point in the journey down the hall, they fell hard into the wall, which set off another gale of laughter. Eventually, they made it to my sister's room, and the closed door muffled their voices.\n\nOnce I hit the next checkpoint, I saved and shut the game system down. I still wasn't very tired, but guessed that wouldn't last long after dropping out of the artificial world I'd been immersed in. There was no sense in wasting the half a beer I had left, so I kicked back to finish it.\n\nBefore I could polish off my beer, I heard the door down the hall open. Vera walked into the room, and rather than leaving, came over and sat down on the opposite end of the couch from me.\n\n\"Becky's totally passed out,\" she revealed.\n\n\"From the way she looked, I'm surprised she made it home.\"\n\nVera nodded her agreement, and then lifted one foot. A great sigh of relief escaped her when she pulled off her heels. \"I probably shouldn't drive yet. It's okay if I hang out for a while, isn't it?\"\n\nThat struck me as odd. While my sister had been three sheets to the wind, Vera wasn't slurring or stumbling. She seemed fine to me. I shrugged and answered, \"Yeah. Sure. I'm going to go to bed as soon as I finish this beer anyway.\"\n\n\"Thanks,\" she said, and then groaned. The next thing I know, she turns and lifts her feet up on the couch. \"These new shoes were killing me all night.\"\n\nIt was no mean feat to ignore her wiggling her stocking-clad toes. I'd seen them before, and knew she had perfect, dainty feet. I could see her nails through the dark nylon, and they weren't painted, but her pedicure looked fresh and professional. I wanted so badly to reach out and touch them.\n\nI downed the last of my beer and said, \"Well, that's it for me. Just lock the door when you head out. Don't worry about the deadbolt.\"\n\n\"Hey,\" she said before I could rise from the couch. \"The rumor is that you give great foot rubs, and I could really use one right now. Is there any chance?\"\n\nOh, fuck me, I thought. Hell to the no. Then I said, \"I'm tired and it's three in the morning.\"\n\n\"Please. I'll stop flirting with you.\"\n\nHer flirting was nothing compared to what having her sexy feet in my hands was going to do to me. I also knew it was a lie. I narrowed my eyes at her.\n\n\"Okay, I won't flirt with you as much. How about that?\"\n\n\"No deal. It's going to take more than that,\" I said.\n\n\"Oh, come on. It's...\" She trailed off, her eyes lit up, and then she said, \"Okay, how about this. I know someone who had a huge crush on you, never hung out with Becky, broke up with her boyfriend about two months ago, and she's starting to feel like dating again.\"\n\n\"And?\"\n\n\"And, I'll tell you who it is if you give me a foot rub.\" \n\n\"I suppose she's hot, huh? I have to take your word for that.\"\n\nVera sighed and said, \"It's just a foot rub. Yes, she's hot, and it's worth it. She's a sweetheart, too. Really, what have you got to lose?\"\n\nMy cool was what I had to lose. I was absolutely itching to get my hands on her feet, and I knew it was the worst possible thing for me because Vera was verboten.\n\nShe must have taken my hesitation as a no, because she said, \"Okay, I'll show you a picture, but you can't see her face.\" Without giving me a chance to say anything about that, she retrieved her phone from her purse. After a few seconds of tapping and swiping, she held her hand over the top of the screen, and turned it toward me.\n\nThe picture was a bikini shot, which didn't leave much to the imagination, though I had no idea who she was. What I could tell is that she had a great body. Unfortunately, I couldn't see her feet very well.\n\nVera said, \"That was taken this summer, and I'll introduce you. We work together. I think you'll really like her.\"\n\n\"For a foot rub?\" I asked, suspicious.\n\n\"Well...\" she said, and then twitched her eyebrows. \"If you hit it off, maybe she'll tell me some sex stories.\"\n\nNow that motive made sense, coming from Vera. The truth was that the harder she tried, the more difficult it was for me to resist something I wanted anyway.\n\nShe lifted her feet up in the air, wiggled her toes, and pouted, \"Please?\"\n\nAnd with that, she had me. \"Okay.\"\n\nVera broke out into a wide grin and removed her hand from the top of the phone, revealing a gorgeous face, red hair, and a stunning smile.\n\n\"Do you recognize her? Gina Willis. She moved about six years ago.\"\n\n\"Yeah,\" I said as the name clicked. She was far too young for me to think about dating at the time, but she'd chatted me up more than once, and I knew about the crush. From what I remembered, Vera's claim that she was a sweetheart was right on the money.\n\n\"Good. Get to work then.\"\n\nVera put her phone down, scooted closer, and would have plopped her feet straight into my lap if I hadn't caught her ankles in my hands. At that point, nothing could have stopped me. With her feet directly above it, my dick immediately started rising as if trying to touch them, too.\n\nBecause she was wearing stockings, and didn't seem interested in removing them &mdash; not that I wanted her to &mdash; creams and lotions were out. That left me with only pressure to work with, but considering my kink, I'd had plenty of practice.\n\nI started with her left foot, near the ankle, alternating between four fingers and my thumbs. I slowly worked my way down toward her toes. Keeping the pressure light, I tried to find the right touch to accomplish the job without tearing her stockings. Vera left me little doubt that I was on to something when she let out a moan. The sound, while not particularly sexual, sent shivers down my spine and hastened the process going on between my legs.\n\nNext, I lifted her foot to work on the soles. I'd barely begun when Vera's right foot moved and she pressed her toes against my cock. I froze and looked up at her to see a sly grin on her face.\n\n\"I knew it,\" she said. \"So, is it the stockings, or my feet that turn you on?\"\n\nPutting down her left foot and pulling the other away from my hardon was probably the most difficult thing I've ever done in my life. \"I don't know what you're talking about. Cut it out.\"\n\nVera rolled her eyes and said, \"Please. You were practically drooling while you were massaging them. The kicker was a few weeks back when Becky asked you to rub hers, though. I could tell how uncomfortable it made you.\"\n\nShe wasn't wrong about that. Word had gotten around about my foot rubs, and my sister had started to ask for them. It was so weird and creepy, but I hadn't been able to figure out a good excuse to get out of it without giving away my secret.\n\n\"Doesn't matter. You're off limits, and you know that,\" I said as I scooted up against the arm of the couch, letting her feet drop to the cushions.\n\nStill smiling, she sat up and said, \"Well, you're already cheating the rules, because I know this turned you on. Maybe we could cheat them just a little more.\" She held up a finger and thumb and looked through the space between them.\n\n\"What are you talking about?\" I asked, and then winced at the touch of curiosity in my voice.\n\n\"Becky left a few loopholes. We can't date. We can't have sex. She said not even a blowjob or a handjob. She didn't say anything about a footjob, though.\"\n\nMy heart skipped a beat when she said that word. It was easily one of my biggest fantasies, but I'd never been comfortable bringing it up with any girl I'd been with. I knew how weird my kink was, and hadn't been willing to risk asking. The thought of Vera doing it had my senses reeling.\n\nOnce again, she lifted her feet and waved them in front of me, flexing her toes. \"Come on. You know you want this,\" she said.\n\n\"Becky&mdash;\"\n\nVera cut me off. \"Is out cold. You saw her. And you never answered my question. Which is it?\"\n\nCaught up in the whirl of conflicting emotions, I answered, \"Both.\"\n\nShe moaned and said, \"I hadn't thought about that.\" She paused, fixing me with a sultry gaze, and then said, \"Come on.\"\n\nBefore I could react, she slid her feet to the floor and stood. She sauntered around the couch, looked over her shoulder at me, and started toward my bedroom.\n\nI may as well have been on puppet strings. She'd only taken a few steps when I popped up off the couch to follow her. A second later, she paused at the door, grinning and leaning against it in the sexiest way before nodding toward my bed. As soon as I was past her, she closed the door behind us. Overwhelmed by the danger and excitement, I stood by the bed and watched her strut toward me.\n\nVera sat down at the foot of the bed and said, \"I've been waiting forever to see that cock. Take 'em off.\"\n\nLike I said &mdash; puppet. I dropped my draws, and Vera gasped when my erection sprang free.\n\n\"Oh my god,\" she said, and then shivered. Her eyes never left my bobbing cock while she gestured for me to get in the bed.\n\nI climbed in and leaned against the headboard. Vera pulled her feet up and scooted toward me as I settled, not wasting a second. The next thing I knew, her right foot was behind my cock, standing it up, and the toes of the other were gliding up my length. The satiny touch made me groan, and I couldn't take my eyes off of them.\n\n\"Feel good?\" she asked.\n\n\"Fuck yeah.\"\n\nIt was my turn to shiver as her perfect little toes slid back down toward the root, and then tickled my balls. I throbbed hard, pressing against her foot holding me upright, adding to the sensation. Then she started up again, the side of her big toe touching me with the slightest of pressure.",
        "Once to the head, she covered it and wiggled her toes. The combination of the slippery nylon stretching over me and the tapping made me groan. She had barely slipped down below the ridge when a drop of pre-cum welled up.\n\nVera moaned and rubbed the drop in. I could see the shiny spot on her stockings for a fraction of a second before her foot slid back down my cock.\n\nShe showed amazing dexterity when she curled her toes around me on the downstroke. There was just enough grip for me to feel it, and it was amazing. I watched her feet flexing, manipulating me, and I breathed heavily from the pressure it was already building. Her foot glided up and down my erection at a torturously slow pace, making me squirm.\n\nIt was only when she let out a whimper that I realized she'd pulled her panties aside and slid a hand between her legs.\n\nI couldn't see much anyway, and my attention immediately shifted back to the way her feet moved beneath the dark nylon. The subtle waves created by her toes and the shifts from light to dark had me entranced. The sound was barely there, but it was no less engrossing.\n\nI dribbled more pre-cum and let out a growl. It was all too much. Having my fantasy fulfilled by someone I wanted so badly and couldn't have was making me lose control.\n\n\"Are you getting close already?\" she asked, having apparently seen the signs.\n\nI answered with a curt nod, and said, \"So fucking good.\"\n\n\"I love it,\" she said. \"Making you lose control.\"\n\nThat's when she upped the ante. The foot that she'd been using to hold me upright slipped to the side of my cock. She cupped me between the soles of her feet and began stroking.\n\n\"Holy fuck,\" I growled as the stimulation increased exponentially.\n\n\"Oh yeah,\" she cooed, her fingers still at work between her legs. \"Tell me when you're about to come.\"\n\nIt didn't take long. The slippery nylon sliding up and down my cock built the pressure rapidly. I grunted and groaned, doing my best not to move away from her incredible feet. Warmth swelled in my shaft and balls as I neared the point of no return.\n\n\"About to come,\" I warned her, as she'd asked.\n\nVera released me from the warm nest of her soles and I grunted in frustration. I was right on the edge. I pushed my cock upright, trying to get it back in contact with her feet and fixed her with a needy gaze.\n\n\"Hold it up just like that,\" she said, and pressed the sole of her left foot against my throbbing shaft. Then she slid the right foot up toward the tip, and positioned her toes just below it.\n\nI breathed hard and fast as she tickled the underside of my cockhead with her big toe and its neighbor. Within a few seconds I was there. I clenched my teeth and stifled the roar trying to escape me with my cum.\n\n\"Yeah, baby. That's it, come all over my feet,\" Vera encouraged me as the first spurt trailed up her foot to her ankle.\n\nOver and over again I erupted, decorating the dark nylon with spatters of white that oozed along the contours of her feet. I came harder than I ever had in my life &mdash; even the three times I'd gone bareback with my previous girlfriend. I was almost shocked by the amount of cum decorating her foot, ankle, and shin. That's not even to mention what had dribbled off her foot onto the bed. I took it in through half-lidded eyes until my orgasm waned and I let my head drop to the pillow.\n\nThe flash of light yanked me back from my post-come lethargy and caused my heart to skip a beat. I half sat up and saw her looking at the picture she'd just taken, confirming my fears.\n\n\"Relax,\" she said, and then tossed the phone to me.\n\nI looked at the picture and realized there was little she could use for blackmail. Only my cock and her cum-covered feet were really visible. Everything else was a washed out blur.\n\n\"I thought you'd want a picture to remember &mdash; and jack off to. Go ahead and send it to yourself, but don't delete it.\" She held up her foot and admired it. \"That is so much. That really made you come hard, didn't it?\"\n\n\"Obviously,\" I groaned as I sat back, the weariness washing over me again. I had enough strength and presence of mind to send the picture to my phone, though.\n\n\"Not bad for my first time, huh?\"\n\n\"It was fucking awesome.\"\n\nShe chuckled, and then reached down to pop open one of the clasps holding up her stockings. As much as I liked them on her, it was sexy as hell to watch her slowly peel them off as well. After dropping them over the edge of the bed, she lifted her feet over me and wiggled her toes. I grunted from the throb that set off in my sensitive cock.\n\n\"I've got a little bit of a foot thing too. It really turns me on to have a guy suck my toes. Want to?\"\n\nA pang sharp enough to arch my back shot up my spine when she said that.\n\nShe didn't wait for an answer. Instead, she lifted her butt, pulled up her skirt, and jerked down her panties. Those found a home on the floor next to her stockings. The fog in my head burned away as I sat up. She shaved, but I couldn't see much more than that because her legs were still together. Her low-cut top and lack of a bra made pulling her tits out quite easy for her. They were everything I'd ever imagined &mdash; firm and a nice teardrop shape. Her nipples had to be hard, the way they were standing out.\n\nShe parted her legs, letting me see her pussy. It looked torturously delicious, but something else pulled my attention away almost immediately. She lifted her foot &mdash; the one I hadn't cum-glazed.\n\n\"Do it,\" she said as she slipped two fingers between her folds.\n\nOnce again, there was no escaping the trap she'd set for me. I cupped her ankle in my hand and lifted her foot to my lips. The smell was musky &mdash; hot &mdash; but not foul. It reminded me a lot of the first time I went down on a girl &mdash; slightly off-putting at first, but oh-so enticing at the same time.\n\nVera sucked in a shuddering gasp when I gave her big toe a lap.\n\nI moved onto its neighbor, tracing its length with the tip of my tongue. There was a hint of saltiness, which excited me all the more. She shivered and let out the quietest of whimpers. I moved down the line, watching her rub her clit and squeeze her tits, though it was mostly in my peripheral vision. When I reached the pinkie toe, I ended with a flourish, swirling the tip of my tongue around it.\n\nI looked directly at her for the first time when I did that. Her gaze was intense as she watched me tonguing her toes. She really was getting off on it, and that only spurred me on.\n\nI grasped the top of her foot as well, holding it in place, and lapped the sole of her foot. Her muscles tightened, flinching away from the tickle, and she whimpered again. When I reached her toes, I pushed the tip of my tongue between the first two. The saltiness was stronger there. Once again, I made my way down the line.\n\nVera's fingers moved faster, and every time I looked at her, I saw her gaze locked on me. I traced the tips of her toes in the opposite direction with my tongue, and then gave the big one something that blurred the line between a kiss and a suck. Then I took it in for real.\n\nShe moaned, seemingly unable to hold it back. I sucked on her toe fairly hard, holding it all in my mouth. That's when the hand playing with her tits slid down her body, taking over for the hand between her legs. The slippery fingers that had teased her clit plunged into her pussy instead.\n\nI jumped over to her pinky toe, and could see how much it was turning her on by the tightening of her features. I slid my lips over her toe, emulating what I'd seen women do to me &mdash; while trying not to think about that connection too much. It did the trick. She gasped and both of her hands doubled down on their respective tasks.\n\nI licked. I sucked. I probed between her toes. My hands caressed her. All the while, her face grew redder and her breathing heavier. Though it was apparent she was doing everything in her power to stay quiet, the occasional whimper passed her lips, and moans frequently rumbled in her throat.\n\nThough it ached like hell, I swelled to about half-staff from the excitement. Her foot was glistening in the light as much as the fingers probing her canal, and I was in pure heaven.\n\nA somewhat louder series of whimpers escaped her, and I could feel her muscles tightening. Her eyes &mdash; still focused tightly on me &mdash; widened. I guessed she was getting close, so I moved back to her big toe, sucking it hard and fast.\n\nThough she tried to stifle it, an alarmingly loud yelp burst from her lips. Her wide eyes pinched closed. Three more times she plunged one set of fingers into her depths while the others flashed over her hood. Then she buried her fingers inside her and came.\n\nThe toe in my mouth and all nine of its siblings curled. I let the digit go before her nail could dig into my mouth, and tongued her toes instead while I watched her come.\n\nThe fingers pressing against her clit moved in sporadic bursts. Each time they stopped, her already-arched back would lift higher from the mattress. Cries of release fought to get past her pursed lips, but she held them at bay. For long, beautiful seconds, I randomly kissed her toes and watched her writhe in sweet agony.\n\nOnce she began to settle down from her heights, she groaned and pulled her fingers out of her pussy. She shuddered from the sensation, and then her eyes fluttered open.\n\nI gave her big toe a quick suck, and it set her off again.\n\nAfter that, I went back to that foot rub she'd asked for in the first place, even though it had been nothing but a ploy. Her breathing slowed, as did the quivers brought on by aftershocks of her orgasm.\n\nShe looked up at me, chuckled, and said, \"Oh, this was so dirty and wrong. We didn't technically break any rules, though.\"\n\n\"Technically,\" I agreed.\n\n\"Help me up.\"\n\nShe held out her hand, and I grabbed her wrist to help her sit up. I looked at her fingers, which were still wet and grinned.\n\n\"I think that's one of those gray areas,\" she suggested.\n\nI sucked her pussy slick fingers clean with gusto. It really made me want a taste right from the source, though. It also finished the process that sucking on her toes and watching her masturbate had started. I was hard again.\n\nShe tugged her hand away from my lips and I let her go. After glancing at my erection, she said, \"If you keep that up, we're going to end up breaking rules.\"\n\nI couldn't argue with that.\n\nVera pushed her tits back into her top, though it still didn't hide much. Then she said, \"Because I suspected what you were into, I brought it up with Gina to feel her out.\"\n\n\"Yeah?\"\n\n\"She's never done it, but she liked the idea.\" She punctuated that with a twitch of her eyebrows. \"She wears stockings to work, too.\"\n\nI quietly groaned.\n\n\"I'll talk you up and give her your number and Facebook. After that, it's up to you.\" She stood up, straightened her skirt, and said, \"I should probably get out of here, just in case Becky gets up to pee or something.\"\n\n\"Probably right.\" I didn't want to think about the awkwardness that would cause. No matter how we'd tried to justify it, I'm sure Becky would have considered the whole thing breaking the rules.\n\n\"I think I'll treat Gina to a pedicure. Want some pictures?\"\n\nThere was that evil Vera again. My dick twitched and I grunted.\n\n\"I hate to leave you like that,\" she said, looking at my throbbing cock. She grabbed her phone from where I'd laid it on the nightstand. Then she bent down, picked up her panties and stockings, and tossed them on the bed next to me. \"Maybe I can help without being here, though. You can keep them.\"\n\nWith that, she turned and strutted toward the door. Before she stepped out into the hall, she tugged up the back of her skirt and wiggled her bare ass at me.\n\n\"You could always send me a picture,\" she said. A quiet laugh followed, and she closed the door behind her.\n\nI figure she got the second picture of her cum-glazed stockings before she made it home.\n\n****\n\nHope you enjoyed this kinky little tale. As always, take a moment to vote. That's my bread and butter, and what keeps me writing. Comments are certainly appreciated, as are favorite listings and follows. They help increase the exposure of the story, which results in more eyes, which results in more votes/favs/comments."
    ],
    "authorname": "RejectReality",
    "tags": [
        "stockings",
        "footjob",
        "redhead",
        "toe sucking",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/something-afoot"
}