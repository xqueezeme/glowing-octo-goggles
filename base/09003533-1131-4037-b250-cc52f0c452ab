{
    "title": "Submission Ch. 18",
    "pages": [
        "Despite her disappointment that she hadn't yet made her way back into her Master's bed, Alanna truly enjoyed their next week together. She loved the morning ritual of having her Master fill her with the butt plug, then giving her a light and pleasurable spanking, before pleasuring him with her mouth. A couple of times, instead, Master would tip her back onto the bed and they would engage in the mating ritual. Those were the best mornings, because he would always cuddle with her and for a little while she was able to pretend that all was right with the world.\n\nOn Wednesday he stopped called her Pussy and started calling her Alanna again, and she started wearing the regular plug again instead of the one with a tail. That day her heart had jumped, in hopes that she would be back into his bed that night, but the hateful addition to the bedroom remained. It took her a few days to catch up in her classes after all the stresses and interruptions of the previous week, and on those days Master always punished her. \n\nSitting with a sore bottom in class reminded her how much she had to catch up with. \n\nBut for the most part, both Master and Alanna were relaxed and enjoying themselves. The looming threat that they might be parted was gone, Alanna felt wonderfully grateful towards her Master and the care that he gave her, and David found himself responding to that gratitude. Their relationship had balanced out beautifully, as Alanna's demands on him were no longer so excessive or taken for granted, and his training of her was allowed to slow down to something they could both savor again.\n\nOn Friday, when Alanna had finally caught up with her studies and Ms. Bliss was able to report that she was back on schedule in her classes, Master took her into the Dungeon where he bent her over one of the many padded apparatuses, tied her securely to it, and then pleasured her with toys until she was weak in the knees from orgasms. Then he carefully inserted himself into her ass and slowly and erotically took her breath away with a thoroughly sensual anal plundering. As Alanna shivered and cried out with ecstasy, she wondered how she could have ever tried to deny her Master access to this intimate part of her body.\n\n*****\n\nDavid was practically beside himself, having to force himself to wait until he was sure that Alanna's lessons had been driven completely home. She was being so good that it was hard not to just give in immediately as a response to her new behavior, but the longer that he put off returning her to his bed, the more deeply the lesson would be engrained in her.\n\nHer submission had become a beautiful thing to see, graceful, accepting and modest, with none of the assumptions that she'd had before. While he couldn't be happy at her transgression or the testing by Curtis, he was completely satisfied with the result. At dinner time they could converse, afterwards they would watch a movie or play a game or just sit and talk some more. Or, of course, sometimes he would take them to the dungeon for an extended session of pleasure. \n\nThere were still going to be times when Alanna needed punishment, both of them would be disappointed if she never did because they both enjoyed it so much, but he was feeling fairly confident that she would never need the level of correction that they were currently working through. Eventually her schooling would be finished and he hoped that she would be interested in coming and doing some work at his company, because she was incredibly intelligent and it would be a criminal waste to leave her at his house all day with nothing to do. \n\nHe sat at his office at home making various plans when there was a soft knock at his door.\n\n\"Enter,\" he said, glancing at the time and smiling. It was time for his afternoon break already, even though he hadn't exactly been concentrating on work yet. \n\nAlanna entered wearing the corset, garter and panty hose that he'd put her in that morning, walking on her high heels without even a hint of a wobble. She was pure sex on two feet, her bare pussy framed by the black straps of the garter, the smooth black panty hose hugging her legs, and the rosy pink of the corset setting off her brunette good looks. As usual her hair was held up by a clip, easily released with one quick movement if he so chose.\n\nDrinking her in with his eyes, David remained sitting as she walked gracefully to the center of the room before sinking down onto her knees, putting her hands behind her back and spreading her knees wide. The pink slit of her pussy parted, showing that she was already wet and eager, and her breasts heaved a little in the tight confines of the corset. It was cut low across her chest, and the movement nearly caused her breasts to pop out. At the last moment, Alanna raised her eyes to him so that he could see the sparkle in them, just for a quick glance before lowing his head again.\n\nWhile unorthodox, David liked to have that little peek at the eager sensuality in her, the happiness she attained from looking at him. His heart surged with emotion along with his cock, the way it always did when he caught sight of her. Today in particular as he had something very important he wanted to discuss with her. \n\n\"Alanna, come sit at one of the chairs.\"\n\nShe looked up curiously at him, startled out of her usual graceful acceptance of whatever her Master said. This was something entirely new to her. Carefully she rose to her feet and slinked over to the chair on the left hand side of his desk, sitting on the very edge of it and facing her Master. Looking at him, she realized that he seemed hesitant... almost vulnerable. It was not an expression she was accustomed to seeing on him. \n\nSitting and staring at him felt strange. She lowered her head and looked at her hands which were clasped in front of her. \n\n\"Alanna, look at me.\" \n\nHis voice was gentle, but it was scaring her, he looked so serious. When she looked at him, she bit her lip, worrying it between her teeth.\n\nDavid sighed and came around to Alanna's side of the desk. He should have waited until tonight when they could talk in a more intimate setting, but he hadn't been able to think about anything else all day, and part of him was too impatient to let another minute go by when she was right here to talk. It was one of the few times that he'd really allowed his control to slip, but not explaining himself now would just cause her to worry and that wasn't what he wanted either. \n\nOf course, he'd also meant to stay on the other side of the desk, he thought ruefully as he pulled her up and then back down into his lap. Alanna snuggled into him immediately, the tension in her body easing as her Master held her. Which, of course, was why he had done it. Even when he meant to keep a good hold on himself, Alanna's needs still came first and she was too unsettled by having him sit across as desk from her. Hopefully she wouldn't feel unnecessarily pressured by being in his lap. Of course, he'd be able to get a pretty good read off of her body language with her cradled against him like this.\n\nHe nuzzled the top of her head, kissing her hair as he stroked her shoulders with one hand and the side of her bare hip with the other. Alanna practically purred against him, squirming in a way that made his dick stand up and pay attention. But now he needed to talk to her first. \n\n\"Alanna, I want to talk to you about something important.\" Immediately she froze, looking up at him with some anxiety in her eyes. He laughed and kissed her forehead. \"Nothing alarming. I just want you to know that you have a true choice in this. I'm very happy to have you with me and I wanted to know what you would like out of our life together. I don't know if they told you this, but while you were on the ship, before you were sold, you received what we call an implant, to keep you from having your monthly bleeding so that you wouldn't become pregnant. It's very easy to remove, and I wanted to know if you had any interest in having children one day.\"\n\nThe expression in her Master's eyes was guarded, and Alanna realized that he was worried about influencing her. Slowly she sat up in his arms and let her thoughts tumble over her. \n\n\"I think I would like children eventually,\" she said slowly. Then a slow, saucy smile curved her lips. \"If it were the right man's children, of course.\" She winked at him and he laughed. The hand on her ass gave it a small slap for teasing him, but Alanna knew that her Master liked the occasional show of her lively spirit. \"But not now. And not anytime soon.\"\n\n\"Any particular reason why not soon?\" he asked, and Alanna detected a wistfulness in his voice. It stopped her heart that this man wanted to have children with her, raise a family. But then she hesitated, wondering if that's what it really meant after all. She was a slave, wasn't she? How could they have a real family together?\n\nHer lips pursed and Master rubbed his finger against them.\n\n\"Tell me what you're thinking,\" he said, but in gentle tones; it was still an order but not a demand. \n\n\"What will my children's future be like, here, on this planet? Will they be slaves too?\" she asked, blinking sudden tears. Although her existence with her Master had been, in many ways, a selfish one of pursuing her own pleasures, the sudden revelation of what she was versus what he made her feel like was suddenly quite large in front of her. \n\nMaster rubbed his hand comfortingly over her shoulder. \"No, any child of mine would automatically have Demagon citizen status. And...\" he paused, because he didn't want to get her hopes up unnecessarily, but continued because he knew that she would want to know. \"There is a suggested law that is currently being debated and reviewed, which may eventually come to pass, that will make it possible for you refugees to become Demagon citizens as well. It is in its first stages, and will take awhile to come to pass if it does become law, but if it does then I would like for you to do so - if you would - and become my wife.\"\n\nAlanna's mouth dropped open, in complete shock. For a moment, the word 'wife' conjured up all sorts of pictures, of the submissive women who had always vied for their husband's attention, competing with the other wives for notice, but then she remembered that she was on Demagon and if she were to become Master's wife then she would be his only one. And it would be through her choice, not because he had paid for her. But...\n\n\"Would we still be able to... would you still...\" Alanna's voice trailed off and she blushed furiously. Despite everything that she and her Master did together, she still had trouble verbalizing her various lustful desires and wants, and it seemed incredibly wanton to ask to be treated like a slave in such a situation.\n\nBut David knew immediately what she was asking and he laughed. \"I would hope so love, I wouldn't want anything to change inside of this household. If I hadn't thought our desires were mutual then I would not have imposed myself on your sweet body.\"\n\nLetting the clip in her hair loose and dropping it to the floor, he grabbed a hunk of it close to the base of her neck and pulled her head back to drop a fiery kiss on her lips, his strong hand holding her head in place. Arousal surged inside of Alanna at her Master's possessive kiss. When he released her lips, although not her hair, she felt breathless as he stared deep into her eyes.\n\n\"I love you Alanna. With all my heart. I cannot change who I am or that I want to be obeyed, but I would cherish you and keep you all of my days if it is your will.\"\n\n\"I don't want you to change,\" Alanna murmured, reaching up to rub her hand along the strong line of his jaw, sliding her fingers through his facial hair. \"I would be honored to be your wife, if it becomes possible, and if not then to live with you for the rest of our lives and raise our children. My David. My Master.\"\n\nThis time when Master's mouth came down on hers it was with all the joy of an unbelieving hope fulfilled, their tongues dancing as she wrapped her arms around his neck, enjoying the subdued strength of the man who cradled her in his lap. Twisting around, Alanna tried to get on top of him but he gave a low groan and stood up, tossing her over his shoulder. \n\nGiggling, Alanna reached down and slapped his butt, completely overcome by her own emotions and joy to the point where she felt she'd lost her senses. Astonished eyes looked at her as Master twisted and looked down past his hip to where her head was hanging. \n\n\"You're going to pay for that, brat,\" he said, his eyes glinting. But Alanna already knew that she wouldn't pay too badly. One thing she had learned over the past few weeks was when she could toe the line, or even push it, with her Master and not get into serious trouble. Just enough that she would be subject to the kind of punishments that got her intensely aroused. Right now she would be able to push the line quite a bit, but she didn't dare to do any more... once he gave a verbal warning then the line got a whole lot harder to push. Besides, she was already too blissfully happy.\n\nTo her surprise Master didn't take her to the Dungeon, he bypassed the room and headed for the stairs. Alanna bounced on his shoulder as he hurried up them, a rush of elation going through her. Were they going to play on his bed? She shivered with delight as he brought her into the bedroom, tossing her down onto the bed. Alanna bounced on her ass and the gasped as Master crawled on top of her, the predatory look in his eye sending gushes of wetness to her pussy. \n\n\"So you want to act like a brat with me?\" he asked her, his eyes glinting dangerously. \n\n\"I'm sorry Master,\" she said, but she was smiling, not truly sorry at all. Master reached out and grabbed her ankle, pulling her towards him and Alanna turned onto her stomach, trying to scramble away. She couldn't help it, something about how he was behaving made her feel like she was supposed to be running. Or at least trying to. A hand came down on her ass making her yelp and she froze, panting with her legs slight spread apart.\n\n\"I'd like you to show me how sorry you are, brat,\" he said, with a low, sexy tone in his voice that made her insides tighten wonderfully in anticipation. \"Put your hands above your head and spread your legs.\"\n\nAlanna did as he asked, spreading her pretty pussy for him. She knew how much he liked to see her holding herself open without any restraints, holding herself in place by his command. \n\n\"That's a good girl,\" he murmured, stroking one finger down the center of her pussy. When he reached the plug in her ass he twisted it and Alanna shuddered, her back arching. Then he grinned wickedly at her. \"Of course, you're still going to have to be punished for insolence.\"\n\nWhen she looked at her Master she could see that he was hard and ready for her, but he had much more self control than she did. As much as she wanted him to, he wouldn't just plunge into her wetness. Instead he got up from the bed and opened one of his drawers, pulling out a leather flogger with long trailing strands and a pair of nipple clamps. Returning to the bed he leaned over Alanna, gazing appreciatively down at her open, glistening pussy before moving up her body to her breasts. Putting the clamps down on the bed, he spent ten blissful minutes tormenting Alanna by playing with the sensitive mounds, tweaking her nipples and tugging on them. Several times she tried to close her legs, needed to rub her thighs together to try and ease the sensuous ache in her pussy, and each time Master twisted her nipples hard enough that she cried out, and spread her legs back open again. \n\nBy the time he put the clamps on her aching buds she was soaking wet, juices trickling down her ass crack and around the plug. Picking up the flogger, Master used it to slap the side of her breast, making her nipple bounce and jolt with pain that sizzled through her like the most exquisite pleasure. \n\n\"Arch your back for me Alanna, show me how much you want me to slap your breasts,\" Master said. Alanna arched high, thrusting her breasts up in the air, begging for the treatment. Her nipples pointed straight at the ceiling, wobbling as he slapped her other breast on the side. She moaned and writhed, losing some of her arch as she tried to hump her hips at him. The bed was soft beneath her and didn't give the same kind of support that the benches downstairs would have. It was much harder to follow her Master's directions. \n\nThe flogger licked and kissed at her breasts, teasing and tantalizing them just like his hands had. Even though he hadn't touched it since she had first spread her legs, her pussy was swollen and ready for him, weeping fluid as the heady mix of pain and pleasure soared through her. She wanted the touch of his whip, the slap of his hand, the thrust of him inside of her, for the rest of her life.\n\n\"Now grab your ankles Alanna and lay back, it's time for your punishment,\" Master said. \n\nAlanna moaned. She recognized this position, although he'd never ordered her to hold herself open for a pussy spanking. Normally she was held by restraints. Now, trembling with lust and anxiety, she grabbed her ankles and lay back, opening her glistening folds for his perusal and sexual torment. The position bent her basically in half, although it was easy to hold with the exercise regimen he had her on. Master stared down at the sweet, wet pussy in front of him, and for a moment Alanna hoped that he might just plunge inside of her... not that the spanking wouldn't excite her, but she just needed him so badly. She ached for him... to seal the verbal promises they'd exchanged with a physical act. \n\nBut then the flogger raised and lashed out, the strands smacking against her tender pussy. It wasn't very hard, all things considered, more of a warm-up stroke, but the shock was like lightening through her nervous system. Her pussy throbbed in response, her insides clenching automatically against the pain. It burned wonderfully. Master let the flogger strands stroke her as she gasped and trembled, struggling to hold herself in place for the next lash. The soft leather caressed her pussy, soothing it. \n\nShe let out a low moan as the strands moved away and then a shriek as it hit home again, harder this time, slapping against already sensitized skin. Her fingers dug into her ankles with the effort of keeping her legs spread. \n\n\"Good girl,\" Master crooned, running the strands of the flogger over her breasts, down her stomach and over her pussy. The soft touch made her shudder in response, her body already anticipating the next slap through the pleasure he was creating. \"Are you sorry you spanked me Alanna?\"\n\nAlanna hesitated, and that moment cost her as the flogger came down, the hardest slap yet, and she howled, automatically slower her legs. Master's hand came down on her ass. \n\n\"Open for me,\" he said sternly. The ache between her legs increased in physical and sexual torment. The flesh of her pussy felt like it was stinging, and at the same time she was wetter than ever, dying to have him inside of her, rubbing against her suffering pussy. \"Are you sorry you spanked me Alanna?\"\n\n\"Yes Master,\" she said, this time immediately.\n\n\"Good. Then you only get one more.\"\n\nWhimpering, Alanna tensed as she waited for the lash of the flogger. Master's fingers massaged her pussy lips instead, and her body relaxed, giving herself over to the pleasure. She moaned, humping her hips as much as she could in her strained position, her engorged clit rising to meet Master's fingers as he soothed her pussy lips, heightening the thrill. When his fingers left her, she knew that the flogger was going to come down again, but this time she welcomed it... she was so close to cumming and after this one it would be over and it would hurt so good...",
        "It landed, hard on her swollen folds, a lash coming down exactly on her clit, and Alanna screamed, caught somewhere between pain and the edge of orgasm. Master dropped the flogger and fell on top of her, his mouth coming down on her pussy, and then Alanna screamed again, but this time for a different reason as his tongue swiped over the juicy pink flesh, his lips wrapping around her tenderized clit and sucking hard on it. Holding onto her ankles, she shook and screamed her ecstasy as her Master's mouth moved over her, suckling and slurping on her, the intense sensations sending her rising into bliss over and over again. As the sensations became too intense to bear she let her legs fall down, trying to push him away with the muscles of her thighs, put he just wrapped his arms under her legs, grasped her hips and pulled her into him, his mouth relentless on her over sensitive clit as Alanna begged him to stop.\n\nThe arrival of her second, stronger and more painful orgasm, came almost as a surprise to Alanna... Master's skillful tongue forced it out of her and she bucked, writhing, her legs clamped around his shoulders, hands pulling at his hair as she lost all sense of self and control to him, her body completely under his command. \n\nWhen he finally let her pussy go, Alanna whimpered and her body fell. Her muscles felt like they had a tremor in them, she was so weak from the unbridled passion he'd forced her to. Master climbed up her body and rubbed his cock between her legs, making Alanna cry out and try to push him away, begging for a moment. But he grabbed her hands and held them down on either side of her head, easily, his body rising over her as he began to push inside of her. \n\n\"Please, I can't... I can't cum again, please...\" Alanna begged, even as her legs spread for him. The sensation of his cock delving into her body was almost agonizing, and at the same time it completed something with in her. She moaned. \n\n\"I want you to cum again for me, Alanna,\" Master murmured, kissing her throat, her lips, capturing her moans with his mouth. \"I'm going to spend the rest of my life making love to you and I want to feel you cum around me.\"\n\nMaster's hands on her wrists, restraining her, was so much more intimate than any cuffs. He dominated her not just with his toys or his words, but with his very body as it rose and fell over her, hips thrusting hard at the juncture of her thighs. Looking down the line of her body, she could see him moving against her, into her, and it was beautiful. He moved slowly for her, letting her watch, allowing her body to relax after the forced orgasm, until she could begin the slow rise again. The sight of them moving together was enough to take Alanna's breath away, her Master's hips hitting the back of her thighs as she wrapped her legs around him, the sexy V of his pelvis moving towards her and then disappearing as he buried himself in her. \n\nDavid was aware that she was watching them, enjoying the look on her face as she caught tantalizing glimpses. One day he'd set up a mirror system so that she could see as much as her greedy eyes wanted. But right now he wanted her beneath him, he wanted to plunder her, to take her to the height of ecstasy over and over until she truly couldn't take any more. There was no reward great enough that he could give her for how happy she made him, for how much he loved her. \n\n\"OHhhhhh...\" Alanna groaned and lifted her hips as her Master's thrusts began to increase in speed and aggressiveness, stirring the beginnings of another orgasm. Her body moved of its own volition, wanting to complete the build that it was starting, even though the last orgasm had been almost painful. \"Oh Master... please...\" She didn't know what she was begging for anymore. \n\nThe thrusts into her pussy became deeper, more passionate, and Master was groaning as he heaved his body against hers, his muscles hard against her softer body, lips catching hers in a kiss as his hands pressed hers down into the mattress. Their fingers were entwined now, holding hands rather than him holding down her wrists, her body shuddering beneath his as her pussy began to spasm around him in climax. The sweet cries of her agonized bliss were swallowed by his kisses, the hot shudders of her body beneath him allowed him to swell inside of her, his balls tightening as his own climax curled and released. They rocked against each other, Alanna's pussy grinding against him as it squeezed the cum out of his cock, her inner muscles massaging him. \n\n\"Oooh... oh David,\" she said, sighing his name in a way that made his dick shudder with one last convulsion inside of her. Alanna's warm brown eyes fluttered and opened, the trust and warmth in them were like a gift that he'd never hoped to receive in his wildest dreams. How strange, how wonderful, that she had come to him, from literally worlds away, and made his life complete. \"I love you Master.\"\n\n\"I love you too, little one.\"\n\n*****\n\nAuthor's Note: I really hope that you've enjoyed reading this series as much as I've enjoyed writing it. David and Alanna have become two of my favorite characters. Thank you for reading!"
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "mdom",
        "fsub"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/submission-ch-18"
}