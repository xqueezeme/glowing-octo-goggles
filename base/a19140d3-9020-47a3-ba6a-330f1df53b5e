{
    "title": "Alpha Killer Ch. 56-60",
    "pages": [
        "Tania's POV \n\nCopper Mountain Pack Grounds \n\nI had sent Bobby off to hunt with his brothers, those men were ultra-competitive about everything. I had no doubt there was money and bragging rights in play for who could bring back the biggest deer to the feast. I rubbed against him, not wanting to leave my wolf form, and moved over to where my sister Talia had returned. \n\nShe, Erica and the vampires hunted differently; they were already back. Using their speed, they would travel miles away and have the animals in their claws before they could react. Their venom would paralyze it, and they would feed from the neck before laying the animal down. Since they were maintenance feeds, they were careful not to take so much the animal wouldn't recover by the next day. \n\n\"How are you handling mated life, Tania?\" \n\nI was glad I couldn't blush in wolf form. \"It's everything my life wasn't... everything I had given up on. I love that man so much it hurts.\" \n\n\"If it hurts you should use more lube,\" Bonnie teased as the other girls laughed. \n\nDenise came over and nudged my muzzle with hers. \"Bobby's always been my favorite among the boys,\" Denise said. \"He's so caring, perfect for you. The way he stayed in wolf form until you were ready to be with him, that was genius of him.\" \n\n\"It's not like I didn't know what werewolves were. Grey wolves don't weigh two hundred plus pounds and stand almost four feet at the shoulder,\" I replied. \"It was just easier to be close to him when I didn't have to deal with memories of those men. ALL those men, especially when I had to give statements.\" \n\nErica came up and rubbed shoulders with me. \"We're going to get them all, Tania. Dad is working with the Covens and we have many allies among the Packs.\" \n\n\"Is it wrong that I want to be part of killing them?\" Werewolves had a much simpler justice system, they do the offense, they are tried and they die, usually at the teeth of the victim or family. \"I mean, when I was a human, stuck in that hell, all I wanted was to be free. I didn't dream of revenge, I felt guilty because I was free and others I knew were still being raped. You can't be held captive with all those other girls and not feel something for them, without making friends, and it hurt.\" I leaned into Talia. \"Plus as a human, it wasn't like I was going to go around ripping throats out. Now my wolf wants blood, but everyone is treating me like a fragile toy. I want to be part of this, I think I NEED to be part of it in order to heal. I want them dead and I want the other girls freed.\" \n\n\"Have you talked to Bobby about this?\" \n\n\"Yes, but you know men... he gets all super-protective, his wolf is furious they did this to his mate. I think he feels like he needs to prove himself to me when he doesn't.\" \n\n\"I proved myself to Randall and he still doesn't like me fighting,\" Talia said. \"That's why I took off for the Council without telling him anything. He had work to do and I can handle myself, I've done it for years. I'm sure Bobby just looks at you as being young and untrained, he doesn't want you to be hurt.\" \n\n\"He doesn't get to decide, does he?\" \n\n\"Your relationship with him is just that,\" Patricia said. \"If you want to fight, you better let him know early because if you think he's protective now, just wait until he has you pupped. You'll never even train after that unless you start now.\" \n\nPupped. Pregnant. We hadn't been using any protection, but I hadn't gone into heat. Looking around at the new mates, including Gia and Tia, I figured there would be a lot of pups coming soon. \"What is the latest on the island?\" \n\n\"Randall said the FBI and US Government can't do anything, it's in Colombian waters and the government there isn't helping,\" Talia replied as we started moving back to the Pack House. \"He's on thin ice already after his outburst with his boss. He can't touch this at all, and he needs a good alibi for when the Bag o Donuts disappears.\" \n\n\"Come on,\" Vivian said as she led us to the front steps where our clothes had been piled. \"It's time to put together a plan.\" \n\n\"How? We have no assets down there, no covens or werewolf packs,\" Talia said. \n\n\"When I was in college, we had an exchange student I became friends with, she was from Colombia. Beautiful girl, nice and smart as a whip. My Dad used to let her come to our Pack grounds with me on weekends. She will help us.\" \n\n\"You want to involve humans?\" \n\nVivian shifted, pulling the dress over her head as we all changed and pulled on our dresses and sandals. \"No... she's a werecat. Jaguar, specifically. Her Pride is in the mountain jungles, near the town of San Cristobal. They have about twenty cats, maybe more by now.\" Werecats are different than werewolves, and rarely interact. Territory fights with werecougars still take place in the western states, and werejaguars were forced to leave Florida as werewolf numbers expanded. The cats are great fighters, but don't have the numbers or the teamwork of a large Werewolf pack. As a result of the territory fights, most werecats want nothing to do with us. \"They won't mind us females coming but bringing male werewolves or vampires won't go over well. Male werewolves have a reputation for taking advantages of felines in heat.\" \n\n\"Thinking with their dicks,\" I said. \"Could I bring Bobby? He's my mate, and we can't leave him out.\" \n\n\"I think so. I don't know if they'll participate in the attacks, since they have to live among the Cartel. We could use their help with logistics if nothing else,\" Talia said. \"The island is about seventy miles southwest of Cartegena, and that's the headquarters of the Cartels. I'm pretty sure nothing around there happens they don't get eyes on. A bunch of Gringos show up wanting to rent a boat, and they'll know. I'd been thinking about hiring a boat out of Panama, but that has its own risks.\" \n\n\"Basic plan, right? We sneak in, we kill the bad guys and leave with the girls. What do we need for that?\" \n\n\"There are twenty girls last I was there,\" I said. \"That's a big boat.\" \n\n\"And it won't help with law enforcement if we just kill everyone and burn the place down. The Colombian police are in the pocket of the Cartel, they'll cover it up.\" \n\n\"You need their books,\" I said. \"Records of all the guests, payments, the girls they have bought and sold. If we can get the FBI the evidence they need, they can track all this down and get them all. Then maybe my sister can settle down, her blood oath satisfied.\" I hugged Talia, feeling sorry for her. She had given up everything for me, and now she couldn't even rest and enjoy her mate because of her vow. She had given up five Packs already. \n\nWe had ended up in the Alpha's offices, and we sat around the table. Vivian brought up a map of the area on her computer, the rest of us watching on the eighty-inch hi-def television on the wall. A little work with Mapquest, and we had an overhead view of the island. Named Isla Lizamur, it sat apart from other islands in the southern Gulf of Mexico. \"Where is the airstrip, you said there was an airstrip,\" Vivian asked. \n\n\"Camouflaged,\" I told them. \"I heard them talking about it once, there is a netting raised over it when not in use. Supplies come in from the docks here,\" I said as I pointed to the inlet. \"I know they use trucks to bring the stuff in. The guest villas are along the beach here, and the main house is where the dungeon, orgy room and other facilities are.\" \n\n\"Orgy room?\" \n\nI nodded. \"You don't advertise unlimited sex weekends without orgies. The guests can do whatever they want with whoever they want. Expect to find girls as young as ten, usually by eighteen you're too old to give them what they want. In addition to paying clientele, the island is run by the Cartels. They would use us too, and they were animals.\" \n\n\"I just want to kill them all,\" Talia said. \n\n\"We have to get the girls out. The guards, the staff- no mercy to them,\" I said. \"As for the guests, well, anyone who flies to South America for the purpose of sex with children won't be missed.\" \n\n\"It won't be easy getting in,\" Talia said. \"We'll have to work with the locals on that.\" \n\n\"First things first,\" Vivian said. \"We need to get to Colombia.\" \n\n\"Shit, I don't even have a driver's license, much less a passport,\" I complained. \n\n\"Oh hell, that's no problem at all,\" Gia said. \"What do you think we do for a living?\" I shook my head, I'd barely met my brother's new mates. \"We do identities for the Council. Come to our room after this and we'll get you everything you need, in a fake name.\" \n\n\"I've got my own papers, but Erica will need something,\" Talia said. \n\nErica nodded. \"I hadn't been out of Wisconsin until last week.\" \n\n\"Bobby will need one too,\" I said. \"It wouldn't help if his name flagged with the FBI while they have their eyes on Randall. As soon as this comes out, he'll be under a microscope.\" We kept planning for another hour, and then the real fun started. \n\nTelling our mates, sans Bobby, that we were going to the island without them. \n\nThe next morning, the planning continued. Vivian had gotten a call from her friend, and after explaining what we were asking for, she said she would talk to her Pride Leader. Vivian would be the only one flying to Colombia, where she would coordinate with the Pride on evacuating the girls we would free. They would also sanitize the area, removing evidence and bodies. \n\nFour people could fit on the airplane that flew in every two days with new clients. \n\nTalia and Randall grabbed one man who I remembered, an oil man from Dallas who visited multiple times. They didn't say anything to him as they sedated him, a paralyzing agent that incapacitated him while he remained completely aware of what was going on. When I walked into the warehouse he was being held in, he lost control of his bladder. \"Damn,\" Randall said as he got the hose. Since Mr. Jones was naked, bound to a steel chair and located over a floor drain in the concrete, a good spraydown down the smell down to where I could concentrate. \n\n\"Hello Daddy,\" I said as I sat in a chair across from him. He was shaking. \"I see you already met my sister and her husband.\" He looked over at Talia and Randall, both of whom just stood there glaring at him. \n\n\"And I'm her husband,\" Bobby said as he walked in the door and stood next to me. \"You hurt what is very dear to me, and I'm so looking forward to returning the favor. You will not survive; we are not negotiating for your life, but for the amount of suffering prior to your death.\" \n\n\"You see,\" I said, \"Bobby here has had all day to think of ways to torture you, to take you to the brink of death and then pull back so he can do it again.\" \n\nHe was terrified, his hands firmly bound as he struggled. \"What do you want? Money?\" \n\nI laughed. \"Money is the least of my worries. No, I want information. How do you go about getting a flight to the island?\" \n\n\"I text a phone number, then fly to Jamaica. They text back with a departure time from a private airfield in Nain. It's always the same pilot, always the same plane. The number is in my phone.\" I picked up his phone from the table, walking behind him to put his thumb on it to unlock it. I pulled up the text message application. \"It's under Vacation Rentals,\" he said. \n\n\"That's what you call flying off to have sex with twelve-year-olds,\" Bobby snarled. \n\n\"Yes! I'm sorry!\" \n\nI pulled up the contact, there were multiple messages saved. \"Have you brought guests?\" \n\n\"I have to vouch for and pay for them, but yes. I just add the number to the message. They have my credit card info, they just charge it to their resort.\" \n\nHow convenient, we wouldn't even pay. I texted the number, requesting a time tomorrow for a flight. \"What is the pilot's name and the tail number?\" \n\n\"His name is Jose Guerro. I don't know the tail number, but I have a photo of a few of us getting ready to board the plane on my phone.\" I pulled up his photo album, flipping through until I found it. \n\n\"We're good,\" I told Randall. \"Keep him here until we're done, we can't have word of his death getting out,\" I said. \n\n\"Oh, don't worry. He and I are going to have a good time, and I won't even leave a mark on him that will raise suspicions.\" I didn't doubt that a bit. Randall knew a few things about the use of electricity that would keep our guest in a world of pain for what remained of his life. When we were done, he would be paralyzed with a hard-to-trace drug and placed in his car, inside his closed garage. The cops wouldn't look closely into his suicide. \n\nTalia, Erica, Bobby and I boarded a plane for Jamaica three hours later. \n\nCh. 57 \n\nVivian's POV \n\nAs soon as I heard back from Catarina Carreno, my Colombian werepanther friend, I started working on my travel plans. Of course, no flights went direct from Denver. I bought a ticket to Miami, from there I would fly to Bogata and then catch a hop to Cartegena. \n\n\"Be safe, love,\" Dallas said as he walked me out to the car, the driver waiting with the door open. \"You trust this girl?\" \n\n\"With my life,\" she said. \"Don't worry, they will help us and it won't be tracked back to us.\" \n\nHe let out a sigh. \"I've got vampires in my house, why not werecats too,\" he said. \"Let her know that she is welcome here. A friend of you is a friend to our Pack.\" \n\nI leaned in and kissed him, then bent down and gave Austin a big hug goodbye before kissing his cheek. \"Momma will be back in a few days,\" I told him. \"I need you to listen to Daddy and have fun with your new Pack members, all right?\" \n\nHe nodded. \"Lum you,\" he said. \n\n\"I love you too.\" I cried a little as I drove away, watching Dallas lead him back into the Pack House. I texted a lot while waiting for flights and read books as I flew between airports. By the time I arrived at the passenger pick-up line in Cartegena, I was exhausted. \n\n\"VIVIAN!!\" The Range Rover's passenger window was down and an arm was waving madly at me. I smiled and grabbed my bag, but as soon as the vehicle stopped, Catarina was out the door and hugging the stuffing out of me. \"It's so good to see you!\" \n\n\"You too, Cat. It's been too long.\" She tossed my bag in the front seat, then pushed me in the back as she climbed in behind me. \"Vivian, this is my mate Javier. Javier, my bestie from college, Vivian.\" \n\n\"Nice to meet you, Alpha,\" he said as he turned in his seat and offered his hand. \n\n\"A pleasure. I'm still not used to that greeting, I keep looking for my Dad when someone says it,\" I said. We got on the road, and it was down to business. I updated them on everything I knew of the island from my talks with Tania. I had satellite images of the islands, updated with her notes, and I covered the basic plan. \"There are two parts to this operation,\" I said. \"One is to go in there and wipe out the people running it. Talia is going to lead that; they will fly in, take care of the bad guys and fly back out,\" I said. \"They can't fly with weapons, so those will have to be there when they arrive. I'm assuming you can buy weapons? I need four Glock 19's and a subsonic sniper rifle, all with suppressors.\" \n\n\"You're kidding, right? You're in Colombia, it will take me less time to buy those than to hire a plumber,\" Javier said. \n\n\"Good. I'm going to need you to drop me near the island. I'll sneak in with the arms, take out the sentries at the airfield and then cover our escape. My mate told me I have to avoid 'excessive risks.'\" They both laughed with me. \n\n\"How can we help you?\" \n\n\"Well... do you know anyone who has a boat we can charter without arousing suspicions? A big boat capable of carrying twenty or more passengers?\" \n\n\"We do,\" Javier said. \"It's a commercial fishing boat, almost forty feet long. The owner and his sons are in our Pride,\" he said with a smile. My jaw dropped, and he just laughed. \"What?\" \n\n\"You are cats, I thought you wouldn't like the water,\" I said. \n\n\"Jaguars love the water, we're excellent swimmers,\" he said. \n\nI smacked the seat back in annoyance. \"How was I to know, we were in a DESERT!\" My home Pack was in the mountains east of Tucson, Arizona, and both had attended the University of Arizona. \"Is your member available? I'll pay, I just need to keep the transaction in cash and make sure he understands what he's getting into.\" \n\n\"Let me handle that,\" he said. He got out his cellphone and started talking in rapid-fire Spanish. \"He's open to it but he wants to meet you first and work out the fee.\" \n\n\"I have money, and our Pack will owe your Pride a favor,\" I said. \n\n\"How many men are on the island,\" Catarina asked as she looked at the map that showed the buildings. \n\n\"About twenty, most of whom will be armed. Add in another four to ten clients and any Cartel visitors.\" \n\n\"Damn. How many are going in?\" \n\n\"Four plus me, but trust me... that's overkill. You've heard of the Alpha Killer?\" \n\n\"Who hasn't? It seems too fancilful to be true, though.\" Catarina looked concerned. \"You sure you don't need us there? We can supply warriors if our Pride agrees.\" \n\n\"No, the last thing you need is for someone to link your Pride with this. Watch this,\" I said. I pulled out my phone and brought up the fight between Talia and Alpha Justin. Her mouth was hanging open for the next few minutes. \n\n\"Damn,\" she said. \"No werewolf is that fast. What is she?\" \n\n\"Vampire and Werewolf hybrid. Incredibly fast and deadly, but she's a good person and can be trusted. Another like her will be along, plus her little sister and her mate.\" \n\n\"The one who was kept here?\" I nodded. \"Fuck. I almost feel sorry for those men.\" \n\n\"Almost.\" I put my phone away. \"Once the attack is complete, I'll signal your boat to come in to the cargo dock here on the island.\" I pointed out the narrow inlet and the dock. \"You'll load up the girls and I and we'll go back out to sea. The other four will get back on the plane and return to Jamaica, then fly home. By the time the Colombian police or the Cartels figure it out, we'll all be long gone.\" \n\n\"Then what? We can't bring them into a Colombian port.\" \n\n\"I'll call a contact in the FBI and have them send the Coast Guard or Navy to us. We rendezvous and hand over the women and the evidence they will be carrying, then the boat returns home and I get off. It needs to be done this way so the Cartels and the Americans can never know exactly who did this,\" I said. \n\n\"How much time do we have?\" \n\n\"Tomorrow.\" \n\n\"Fuck,\" Javier said. \"We best get to the docks then.\" \n\nThe Pride leader, Pablo Rodriguez, and the fishing boat captain, Jose Mena, were waiting below decks on the boat. Catarina handed me a shawl to cover my blonde hair as we walked down the dock and onto the older vessel. Thirty minutes later, we had a deal. I opened the secret compartment in my bag, withdrawing fifty thousand in cash and handing it over. \"You're paying in full?\" Jose looked surprised. \n\n\"Your word is good, if I don't make it back you have your money and will finish the job,\" I said. I gave Javier another ten grand. He would go get the weapons and the other supplies I had asked for. He left with Pablo, leaving us alone below decks. \n\nCatarina made an amazing dinner for us, and Jose took on fuel and provisions for the journey. Javier returned at nightfall, and Jose and his two boys got us underway. At three in the morning, we were slowly moving through the choppy seas, about a half-mile off the island. I was dressed in a wetsuit, with mask and snorkel and fins, the weapons bag attached around my shoulders with a rope. It was sealed watertight and had enough air in it to float. \"You sure you don't want more help doing this,\" she asked. ",
        "\"Just come get me when I call you,\" I said. We had picked an insertion point that was hidden from the complex, and there wasn't a significant surf or undertow to deal with. I'd have to traverse the island jungle, but I was a wolf- I wasn't worried about that. \"See you soon.\" I stood and gave her a hug. \n\n\"Don't get hurt,\" she said. Jose idled the boat and I tossed the bag over the starboard side before letting myself fall backwards into the water. I came back up, moving away from the boat and heading towards land as they slowly moved away. I set a steady pace with my fins, and it wasn't long before I was poking my head up on a shallow beach. \n\nMy wolf senses didn't pick anything up, so I took off my fins and moved into the trees. Stripping off my dive gear, I stacked it then shifted into my wolf. Finding an area of soft sand, I used my front paws to dig a hole then shifted back and put the gear in it. Covering it up with sand and branches, I made sure it would pass a cursory inspection before I turned to the gear bag. \n\nI pulled on the clothes inside; black cargo pants, black long sleeve shirt, thin black leather gloves and a black balaclava. The hood covered my blonde hair and left only my eyes exposed. I filled my pockets with the pistols and extra magazines, then slung the rifle onto my back. The rifle was the same type we used on my old Pack grounds to hunt wild boar with, an AR-15 in .300 Whisper with a suppressor and four-power Trijikon scope. Capable of ranges out to two hundred yards, it had plenty of power and sounded no louder than a hand clap. The last thing I grabbed was the two canteens, both black, they clipped to my belt. \n\nI put my cellphone in my breast pocket, the earphone into my left ear. \"Call Catarina,\" I said and it rang. \"I'm here,\" I said. \n\n\"Good luck.\" She hung up and I started moving through the jungle. Before sundown, I had my sniper hide built in the trees just off the runway. I didn't move from my position, suffering silently through the growing heat as the day moved along. \n\nThe first sign of activity was a truck arriving at a control house. The netting that hid the airfield started to pull out of the way, and two men were securing it off to the side. A small twin-engine plane came into view, lining up with the runway it came in for a smooth landing. As it passed, I could see Talia and Tania in the windows. \n\nWhen the aircraft revved its engines to turn around at the end of the runway, I lined up my scope and took out the two sentries. By the time it had come to a halt, I had the men hidden in the jungle. \"We good?\" \n\nI smiled at Talia as she got out. \"On plan,\" I said as I handed her a pistol, suppressor and four magazines of hollow-point ammo. \n\n\"Good. Cover us as we go, this won't take long. As for you, Mr. Jose Guerro, fuel the aircraft and be ready to take off when we come back. If you aren't, your wife and children will be dead before you are,\" she told him. He nodded and practically ran towards the fuel truck, clearly frightened of her. \n\nI finished handing out the pistols, and they put on their hoods to disguise their features. \"Like we planned,\" Talia said. \"Erica and I will go after the security center and the barracks, Bobby and Tania will go to the guest villas and the slave quarters. No mercy. Get the girls and send them to the dock.\" \n\n\"Thank you,\" Tania said. \"Let's get the girls.\" \n\nThey moved off towards the complex as I moved to a position I could cover them from. \"Everyone in position,\" Talia sent over the family bond. \n\n\"Ready,\" Tania said. \n\n\"Ready,\" I said. \n\n\"Three, two, one, GO GO GO!\" The two hybrids were a blur, the sounds of their gunshots like an automatic weapon. \n\nThe battle was on. \n\nCh. 58 \n\nTania's POV \n\nSex Island \n\nBobby was running fast towards the guest villas while I went for the building where I had been kept. I could hear the gunshots, little coughs from Talia and Erica's silenced weapons, then answering bangs from the defenders. My wolf was forward, my senses heightened as I reached the door and put my shoulder into it. \n\nThe door blasted open and I was through, rolling onto the floor as I swept the room with my pistol. I saw a guard raising a pistol, and my shots were faster and more accurate than his. The first 9mm hollowpoint hit him in the chest, the second into his face. He dropped to the floor like a switch had been turned off. \n\nI could hear a commotion in Spanish and English start up in the cage room, but I didn't go there first. Turning left, I went down the hall to the offices where the \"trainers\" worked. Kicking open the first door, I didn't see anything, but I could smell the fear. Moving into the room, I looked under the desk where Master Jake was hiding. He liked to hear us scream, so I shot him in the throat. He brought his hands up, the blood pushing out through his fingers, and I left. He would die alone and on his knees. \n\nI found one other trainer in the dungeon; Master Paco was a dangerous man, a true sadist who enjoyed punishing slaves who misbehaved. As I kicked in the door, he moved behind a young girl, her dark hair covering her face, her naked body beaten and bruised as she hung from a chain to the ceiling. \"Don't,\" he said as I raised my pistol. \n\nHe was holding a knife to her throat. \"Put the gun down or she's dead,\" he said. \n\nShe was half out of it, smelling of fear and urine, and she was maybe ten years old. \"Just relax,\" I said. \"Don't hurt her.\" \n\n\"Drop the gun NOW,\" he said. I let it fall to the floor, then kicked it towards him when he told me to. \n\n\"Guys I have a hostage situation here, I'm in a room on the north end of the worker's dorm,\" I sent. \n\n\"Stall for time, I'll be there soon,\" Bobby replied. \n\nPaco smiled as he told me to put my hands on my head and kneel down. \"Do you know who is behind this? How stupid are you to take on the Cartel?\" \n\nI didn't say anything, I needed to stall for time. He picked up my pistol. \"How did you get here?\" \n\n\"Your transport plane,\" I replied. \"He's waiting for us.\" \n\nHe went over to the wall, removing a pair of handcuffs. \"Move and you're dead,\" he said. I didn't do anything as he put a cuff over my right hand. \"Hands behind your back, put the cuff on your left hand,\" he said. I complied, the cuffs clicking closed. He checked both were tight before he pulled me up to my feet again. \"Let's see who you are,\" he said as he pulled my balaclava off. \"Tania! Wow, long time no see bitch. I was sad when you got cut up and cut loose, you were my favorite ass to fuck,\" he said. \"Now, you and I are going to walk out of here and onto that plane. Don't get cute, because you'll die before I do.\" \n\n\"Whatever you say,\" I replied. We walked back into the hallway slowly, he was holding me in front of him. \"He's bringing me out, we'll be coming out the front door and heading towards the plane,\" I sent. \n\n\"Not there yet, keep stalling,\" Talia said. \n\n\"Tell them not to shoot,\" he said as we approached the broken door. His left hand was gripping my shirt while his right was holding my pistol to the back of my head. \n\n\"DON'T SHOOT WE'RE COMING OUT,\" I yelled, but I sure as hell hoped they did. \n\nBobby's POV \n\nThe villas used by these sad excuses for men were along a curving beach. Luxury appointments including a big bed, bondage gear and all-you-can-fuck underage girls. It was the middle of the afternoon, and most were avoiding the heat in the air-conditioned comforts. \n\nExcept one man. Sitting in the shade, a fruity drink in his hand as a young girl with her hands bound behind her chest leaned forward over his lap. He looked up at me just before the 9mm projectile split his eyes and sprayed his brains onto the sand. The girl looked up, seeing him then me. \"Don't say anything, we're here to rescue you,\" I said before I ran to the first cabin. \n\nThe villas were well-insulated and set a good twenty yards apart. Busting in the door, the open floor plan giving no place to hide, I located and killed the males and left the females behind. It took me about thirty seconds each, too long for comfort, but no alarm had been raised for them. I was about halfway down the line when I got the send. \"Guys I have a hostage situation here, I'm in a room on the north end of the worker's dorm,\" Tania sent. \n\nMy wolf was furious, but we had to take out the targets quickly or the girls would get hurt. \"Stall for time, I'll be there soon,\" I said as I ran to the next villa. This man had a girl tied spread-eagle on her stomach as he whipped her raw. He turned towards me as the door opened, dropping the whip in shock. I double-tapped him, one to his fat stomach and one to his chest. He fell backwards, and I ran out to the next one. \n\nThe next guy was alone and asleep and had a bullet through his head before he could look. The next guy was in the shower, fucking a girl bent over in front of him. I shot through the glass, the blood spraying the wall as the girl screamed. \"Get dressed,\" I told her before I left again. \n\n\"He's bringing me out, we'll be coming out the front door and heading towards the plane,\" my mate sent. My wolf was howling, but I had two more to go. Talia answered, and as I went through the next door, I thanked Luna her sister was along. This guy had two girls in bed, sleeping on each side. I shot him through the forehead and left again. \n\nThe last one was empty. \n\nI ran back towards the dormitory, using all my speed to push through the jungle trails. I burst into the sun just as I heard a high-pitched scream, then a single shot rang out to quiet it. \n\nI turned the corner just as the body hit the ground. \n\nTalia's POV \n\nErica and I used our speed to reach the headquarters buildings. She went to the staff rooms, her pistol firing as she caught men coming out, while I burst through into the offices. My skills were honed over years of practice, and I was firing and moving at high speed. Humans watching would only see a blur. \n\nI took out three in the front office, then rushed down the hall to the security center. I put five bullets into the lock, dropping the empty magazine and inserting another a fraction of a second later. I released the slide to chamber a round, just as my boot hit the door up near the handle. The door was reinforced steel, but no match for my hybrid strength. It bent before opening, and I ducked to the side as a man opened up with a machine gun. \n\nDropping to the floor, I moved my left hand with the pistol into the opening and rapid-fired until the pistol was knocked from my hand by a shot. I pulled it back, my thumb had been blown off by one round while another went through my wrist. I partially shifted my arms and hands only, my claws extending from my arms as I jumped up and blurred into the room. \n\nThere were three men inside, one was dead and leaning over the security controls. The second was on the floor holding his hand over his hip, while the third had the gun. The claws on my right hand sliced through his neck before he could react, while my left hand knocked the Uzi to the floor. I broke his neck to make sure, then broke the neck of the man on the floor before looking around. Finding a main breaker panel, I ripped the cable out of the bottom and all the screens went blank along with the lights. \n\nMy hand was bleeding badly, it would heal but I didn't need the blood loss. I tore off a part of a man's shirt and wrapped it around my hand, then found my thumb and put it in a cargo pocket. Satisfied that the bleeding would stop, I turned to the door. \n\nI went back out to look for stragglers just as Tania's send came through. Bobby answered, and she wasn't in immediate danger so I kept going. I found three more workers and killed them, ending up in the office of the leader of this place. He was cowering under his desk, a short and fat man with a bad toupee and a loud Hawaiian shirt. \"Oh no, get out here and get your whuppin',\" I said as I pulled him out with my right hand and tossed him across the room into the wall. \n\n\"Please, I'll give you anything you want, just don't kill me,\" he said. \n\nI grabbed him under the chin and held him a foot off the ground. \"I want records,\" I said. \"Every client, every slave, every payment. Where are they?\" \n\n\"In the safe,\" he said as his bowels let loose. \"Please don't kill me.\" \n\n\"Open the safe,\" I said. \n\nErica came into the office. \"All other rooms cleared,\" she said. \"Damn, he smells.\" \n\n\"Make sure he opens the safe and gives us the contents,\" I said. \"I'm going to help Tania.\" \n\n\"Sure, leave me with the crappy job,\" she teased as I ran back outside. \n\nI ran for the slave building. The one-story structure was made of concrete block with a flat roof. With one leap I was on top of the building, moving quietly towards the center of the front wall. \n\n\"He's bringing me out, we'll be coming out the front door and heading towards the plane,\" Tania said. \n\n\"Not there yet, keep stalling,\" I replied as I crept along the roof. I didn't want to make any noise to give myself away, not yet. \n\n\"DON'T SHOOT WE'RE COMING OUT,\" Tania yelled. I was right above them. \n\nVivian's POV \n\nI'd taken out five men so far, most of whom were outside or went outside shortly after the alarm was raised. When Tania sent about her hostage situation, I was looking for targets. I set up my scope on the front door, waiting for her to come out.  \n\nI saw them in the doorway before she yelled, and I could see Talia setting up above her. He pushed her out of the door, the end of the silencer pressed into the base of her skull. \"Tania, on the GO I want you to drop your body forward and down.\" \n\n\"Ready.\" \n\n\"Three, two, one, GO.\" I squeezed the trigger just as she moved, the .300 caliber round hitting him just behind the left ear. I heard another shot as the pistol fired over her head. \n\nTania pulled the handcuffs apart as she rolled on the dirt, freeing them just as Talia landed next to her. \"You all right?\" \n\n\"Yeah. Let's get the girls,\" Tania said. I got up from my sniper hide and walked towards them. \n\n\"TANIA,\" Bobby yelled as he ran towards his mate. Picking her up, he held her tight as his nose buried in her neck to calm his wolf. \n\n\"I'm fine,\" she said. \n\n\"Bobby, you go help Erica, grab the computer hard drives and everything out of the safe,\" Talia said. \"The girls are going to be in shock, and they don't need a man coming in. Tania, with me to the slave quarters, and Vivan, you gather the women from the guest villas. Tell them to grab clothes if they can and get them to the docks as quickly as possible. Vivian, tell the boat to come in.\" \n\nI pulled out my cellphone and called Catarina, telling her to come over and visit. That was our code for get to the docks. \n\nWhen I got to the guest villas, many of the girls were huddled together on the beach. \"Get clothes and come back here, you're all going home,\" I said, then repeated it in Spanish. I freed the girls who had been tied down and gathered them all together. \"Come on, we're leaving by boat.\" \n\n\"Who are you,\" a brunette teen asked me. \n\n\"I'm a friendly ghost,\" I said, my features covered by my clothes. They could tell by the tight clothing I was female, and they didn't ask more. I led them away from the beach and down the trail to the boat, avoiding the compound in the jungle behind us. \n\n\"The other girls,\" a redheaded girl of maybe thirteen asked. \n\n\"They'll meet us. No one will be left behind.\" It took a few minutes to arrive, and the fishing boat was approaching the dock. I caught the line, and Catarina helped the girls board. The Captain and his sons stayed away from the scared girls as they huddled together on the deck. \n\nA few minutes later, a larger group made it to the dock and started to board. The girls were starting to believe their slavery was over, and they started to talk and hug each other excitedly. Tania was the last one to board, her face covered again, a young Hispanic girl in her arms. \n\nShe held her out to Catarina, who almost dropped her when she got a sniff of the unconscious child. \"Maria?\" She started to cry as she held her to her chest. \n\n\"You know her?\" \n\nShe nodded. \"She went missing from our Pride six months ago, we thought she was dead,\" she whispered too low for the humans to pick up. She set her on the deck, the other girls holding her. \n\nTalia handed over two bags. \"It's the stuff from the office, give it to the Americans with the girls. The other bag keep for yourself.\" \n\n\"Thank you,\" she said as tears ran down her eyes. \n\n\"Come see us sometime,\" I told Catarina before I hugged her. Talia tossed the line back onto the deck and the boat started backing away from the dock. \n\n\"What was in the second bag,\" I asked. \n\n\"Cash, close to a two million,\" she said. My jaw dropped as I realized she'd just given it to her, no questions asked. \"What? We can't exactly bring it back into the states in our carry-on luggage, and their Pride helped us out. It's not like it was OUR money.\" \n\nIt was true. We walked back, making sure we had not left behind any evidence, then headed back to the airfield. Jose was sitting in the cockpit, the engines idling and the door open. We loaded up and were rolling down the airstrip in seconds. \n\nOur pilot was the only person we left alive. As the only survivor, both the Cartel and the FBI would be after him. \"Take your family and disappear,\" Talia told him. \"If you ever tell anyone who we are or what we look like, I'll make you wish the Cartel had gotten to you first.\" With that, we left him at the airport and took a taxi across the island. \n\nTwo hours later, the four of us were sipping drinks in a Jamaican bar, watching the sun go down over the beach. We'd come through just fine; we hadn't lost anyone. All the men were dead, and Talia's thumb would grow back in a week or two. \n\nWe drank in celebration of the blood oath being one big step closer to being done. \n\nCh. 59 \n\nRandall Meechum's POV \n\nDallas, TX \n\nI showed up at the Federal Building, showing my identification to get in through security with my firearm. It was four in the afternoon, and I knew things would be wrapping up in the office. I pushed through the door into the FBI floor, nodding at the receptionist as I walked past. \n\nI had barely walked through the door when Senior Agent-In-Charge Rosalie Martinez stepped in front of me. \"You're supposed to be on vacation, Meechum,\" she said as she crossed her arms over each other. \n\n\"I am, boss. I needed some stuff out of my desk, and a friend gave me these,\" I said with a smile. \"Free tickets to the Rangers and Twins tonight, ten rows up by first base. Who's in for dinner and a game? First rounds on me,\" I said. \n\nShe let loose a little smile. \"Damn, I have to pick up Valeria from my ex at five.\" She had gotten divorced from a fellow agent a few years ago, her daughter was now nine years old. \n\n\"Bring her, I don't mind. We'll be at Smokehouse 557, or you can just meet us at the seats.\" \n\nShe thought about it for a minute. \"Why not,\" she said. \"She'd love the game.\" \n\n\"Who else is in? I've got three more available.\" \n\n\"I'll go if I can bring my boyfriend,\" Lindsey said. The newest agent on our team, she was dating a DEA agent from the office downstairs. I handed her the two tickets. \"I'll meet you at the Smokehouse, that brisket sandwich is amazing,\" she said.  \n\n\"One more?\" No one wanted it, they had all made plans. I walked out and took the elevator to another floor, walking back to her office. I knocked on the door. \"Miss Perkins,\" I asked as the Assistant US Attorney looked up from her desk. \n\n\"Agent Meechum,\" she said with a smile. \"Your boss said you're on vacation.\" \n",
        "\"I am,\" I said. \"I have an extra ticket to the Rangers-Twins tonight and I thought you might want to go. Dinner at the Smokehouse, the game, you know, have some fun in a social way.\" \n\n\"If we're being social then call me Melanie,\" she said. \"This isn't your way to ask me out on a date, is it? Your reputation precedes you, and I'm not interested in being another notch on your bedpost.\" \n\nI put my hand over my heart. \"Sorry, I'm taken. I met my match, but she's visiting her relatives in Wisconsin. This is strictly because I, and we, would enjoy your company. Rosalie is bringing her daughter, and Lindsey is bringing her boyfriend.\" She didn't look convinced. \"Look, part of why I'm on this enforced vacation is because I was taking things too personal. This can't be easy for anyone, and it's only going to get worse. I'll even buy you the first beer.\" \n\n\"All right, I'll go.\" \n\n\"Need a ride?\" \n\n\"Sure.\" She gave me her address and I told her I'd pick her up in an hour. Leaving work, I went home and changed into casual clothes; sandals, cargo shorts and a Rangers logo patterned Hawaiian shirt. The summer nights are hot, and the long shirt would hide the badge and gun. I got in my Jeep and drove to her condominium tower, she was waiting outside in a light summer dress and flats. \"Thanks for this, you were right. I need a night just to have fun again,\" she said. \n\nIt took a while to navigate traffic, and we found a parking spot and walked to the Smokehouse. The place was full, but we managed to grab a table by the time Lindsey and her boyfriend Thad showed up. I had the meat platter, corn bread and beans with a tall lemonade, while the others had brisket sandwiches. \"You sure you can eat that,\" Lindsey teased. \n\n\"Yep, then I'll finish your sandwich,\" I said. \"High metabolism from working out so much.\" It was true, as a werewolf I had a large appetite and the hybrid needed even more calories. Thad was a good guy who treated Lindsey well. He spent a lot of time undercover, so he looked scraggly. Lindsey was dressed in a wifebeater and jean shorts to match. \n\nThe food was good and Rosalie hadn't shown, so we paid and walked into the park. \"Hey Valerie, did you save any ice cream for me?\" \n\nThe raven-haired girl smiled as she looked up at me. \"Nope! Last bite,\" she said as she put the spoon in her mouth. \n\n\"Oh, then you don't want this,\" I said as I took the two chocolate sundaes in souvenir batting helmets out from behind my back. Her eyes lit up and she reached for it, but Rosalie pulled her back down. \n\n\"You've already had nachos, a pretzel and ice cream, maybe we need to make the fifth inning before we get you more,\" she said. \"Now Mom hasn't had dessert yet.\" I handed the sundae to her, and Valerie used her spoon to eat some with her. I sat next to Valerie, Melanie on my other side then Lindsey and Thad. \n\n\"This was a good idea,\" Lindsey said after we'd watched the game go to 3-3 in the sixth inning. The game was fun, and I found it helped keep me distracted from the worry about the group in Colombia right now. Melanie was a real fan, keeping score along with a running commentary on the game. \n\nValeria had crashed after her sugar high in the early innings. Her eyes were closing as she was leaning against her Mom. \"I think I need to get her home,\" she said. She woke her up and said her goodbyes, which included her giving me a hug. She was a great kid, and that only made me think of having my own children, which made me think of Talia again. I had to force myself back into the game after they left. \n\nThe four of us stayed around a local bar for drinks before we split up after midnight. \"Thanks for the tickets, it was fun,\" Lindsey said. \"When are you off vacation?\" \n\n\"A week or so more ought to do it,\" I said. \"My girl should be back tomorrow and I'll spend time with her.\" \n\n\"Mystery girl, huh? Well, you can't hide her forever.\" She gave me a hug before they walked off, and I talked to Melanie about her about her family as we walked back to my car. The night was still warm, and she was pleasant company. A month ago, I would have taken her home and screwed the hell out of her in another meaningless one-night stand. Now I had no interest at all beyond friendship. I dropped her in front of her condominium tower and drove home. \n\nThe girls were not going to communicate with any of us until they were no longer traveling under their false identities, so I had no text messages or calls. I checked the international news; nothing was out yet. I took a cold shower and went to sleep, one of Talia's shirts over the pillowcase so I could rest. \n\nI woke up about nine and went for a run, trying to get some of the tension out of my body. After punishing the weight machines in the gym at my building, I made a phone call to my father. \"Hey Dad, how are you doing?\" \n\n\"Pretty good,\" he said. \"You know that place we liked to get those bags of donuts, the one in Miami? It closed down. Too bad.\" \n\n\"Miami? Really?\" \n\n\"Yeah, these chain stores and bakeries don't know how to make it the way I like. They still train in the old way down there, at least they used to. Some friends stopped by to pick some up, and the place was dead. Out of business.\" \n\n\"That's too bad, I would have liked to have been there before it closed.\" I almost wish I had done it, but it was better this way. \"I have some time until her flight, so I'll do some surfing and watch the news. Just keep me posted on things?\" \n\n\"Of course.\" \n\n\"Hey, can I talk to Mom?\" \n\nShe got on, and I told her of my plans. In the werewolf world, the mating bond was a tie stronger than any human marriage ceremony, but we lived surrounded by humans. It was important to me that we be tied together in both worlds. More importantly, being married would mean I couldn't be compelled to testify against my wife if things went south. She was thrilled with the idea and said she would talk to Teri Grissom, the La Crosse Pack Luna. \"Their family is in Wisconsin, the wedding really should be up there,\" she said. \"This is so exciting! When are you going to propose?\" \n\n\"Soon,\" I said. \"I'm pretty sure she'll say yes.\" \n\n\"Oh, Randall, of course she will. Now you just have to get Bobby on board.\" We talked for a few more minutes about logistics; the ceremony could be held on Pack lands, the invitation list, who would officiate, she even started talking food and flowers. \"Let me get engaged first,\" I finally said. \"I'll see her tonight.\" \n\n\"Do you know her ring size? What style she likes?\" \n\n\"No, Mom. We'll figure it out.\" I made an appointment with a jeweler for a private showing tomorrow. The owner was a warlock who had helped me out on occasion, so he knew the specific needs of our kind. If I bought her a normal ring, it would fall off her claw when we shifted to our wolf forms. This jeweler could spell the rings, tying them to our human form only. The ring would disappear when we shift, reappearing when we shifted back. It was a neat piece of witchcraft, because rings and claws don't work well together in the forest. \n\nI ordered some Chinese delivery for lunch, then I surfed the web for news on the Sex Island or the training facility for slaves. Miami was not what I expected, but it made sense. Most of the slaves were sent overseas; many ended up in the Mideast or Far East, never to return. What Dad was saying in a coded way was that a Coven in Miami had worked with us to shut down the training facility. \n\nAnd if the Packs and Vampires did it, they'd all be dead. \n\nAbout one in the afternoon, I got the call I was expecting from the FBI Dallas Field Office. \"Meechum, if I find out you were involved in this, I'll throw your ass in jail,\" Rosalie Martinez said. \n\n\"I'm eating sweet and sour chicken and watching Fox News in my underwear,\" I said. \"What could I possibly be involved in? You MADE me take vacation.\" \n\n\"You aren't on vacation anymore. Get your ass in here.\" She hung up, so I finished lunch and got my suit on before driving in to the office. \n\nThe receptionist told me to go straight to the conference room. When I walked in, SAIC Martinez was looking at the crime scene photographs sent from Miami. \"What happened,\" I said as I looked at the scene. It was bloody, the vampires had taken advantage of the buffet, probably drank a little then hacked their throats with machetes to hide the marks. \n\n\"Warehouse in Miami near the docks,\" my boss said. \"Ten dead, all at close range and brutally done. Twenty-three girls were in there, it is, I mean it WAS a sex slave training facility. Fucking sick what they were doing there.\" \n\n\"Is this the one Tania Stillwater told us about?\" \n\n\"Maybe, it fits her description. I've got a call in to her lawyer, I want to have her look at the photos of the men and see if she recognizes any of them.\" She looked around the room. \"We cooperate fully with the Miami office. This is hitting the press, and it's going to explode. Someone walked in there late last night, killed every staff member then locked all the girls in a room. The FBI office got an anonymous tip at eight this morning, they hit the place at ten and found this mess.\" \n\n\"Pretty violent for a mob hit, and cutting throats is more a Cartel style kill,\" I said. \"Is this a turf war?\" \n\n\"Miami office said they found a symbol of the Juarez cartel on the wall in blood, so yeah, they're fighting. Drugs are just one thing you can smuggle, and the Cartels are becoming a diversified organization.\" It was true; drug cartels smuggled people, guns, cigars, they even controlled huge agricultural areas. If you bought guacamole, it was harvested and controlled by the Cartels in Mexico. \"Joey 'Bag of Donuts' disappeared a few days ago, and one of the dead men is tied to the Miami crime family. An operation this big must have organized crime backing. We may have Cartel moving in on American crime families. The Organized Crime Task Force out of New York and the DEA are heading down there to meet us.\" \n\n\"Good, whoever these guys are who took them out, they did us all a favor,\" I said. \"The girls? Are they all right?\" \n\n\"They have them with counselors, getting statements. Not all of them are in a good condition to speak. From what we know, these girls have been drugged, beaten and assaulted since they were abducted. It's going to take a while to work through it all.\" She moved to the head of the room. \"Lindsey, Rebecca, you're leaving tonight with me for Miami. We are merging our investigations. The Miami office is taking the lead. Randall, you are off vacation as of now. Tania knows you and I don't want her freezing up when she sees these people. Get her in a room, interview her and send me the results.\" \n\n\"Yes boss,\" I said. She was gone an hour later, and I worked until five then went home. It all worked out perfectly for me; I would have to go up to Sulphur Creek, and I could manage the FBI response in some way. I went to my desk and moved the appointment to tonight; the three would be staying at my apartment tonight, so we may as well get the ring shopping done. \n\nI had no doubt Bobby would jump at the chance to put a ring on Tania, and we'd have our double wedding soon. \n\nCh. 60 \n\nRandall Meechum's POV \n\nDFW Airport \n\nMy girl and the others were landing in ten minutes. I sat in the line at baggage claim, every few minutes sending out a message to my mate and hoping her plane was close enough. I hated being away from her; after so many years alone, I didn't like being that way now. I wanted to see her smile, feel her skin against mine, and fall asleep tangled up in her after another fantastic night of sex. \n\nYeah, I had it bad, I thought to myself. \n\n\"Randall?\" \n\nI smiled as I heard her voice in my head. \"Welcome home, baby. Good flight?\" \n\n\"Not as satisfying as the island life,\" she said. \"In and out, very clean. Anything on this end?\" \n\n\"Nothing yet, but the Vampires hit a slave training facility in Miami. I need to interview Tania officially, for the FBI investigation. I need to see if she can identify any of the dead men and women there.\" \n\n\"Thank Luna. They rescued the girls?\" \n\n\"Twenty-three rescued, all being processed. If it's not the same one, it's still a shutdown.\" It was also the first real cooperation between Packs and Vampires. I had to wonder if some of the people there just disappeared, ending up in a basement as a Coven blood bank. I could only hope. \n\n\"What's the plan?\" \n\n\"I told the office that I have to go up to Sulphur River to interview Tania. I have everything I need already, but I think we need to eat and sleep before driving up there. After that I'm open.\" \n\n\"I'll ask the others. We're just touching down now.\" \n\n\"See you soon, love.\" I changed my target to Bobby and told him my plan of visiting the jewelers and setting up a double wedding ceremony. \"You in? We can stop on the way to my apartment.\" \n\n\"Absolutely,\" he said. \"Is this going to be an issue with you and the FBI? Her being related to a witness?\" \n\n\"Not as much as you marrying the witness. We met when I was back in Sulphur River and it was love at first sight.\" Which was true. So amazingly true. \n\nI let him go as he was leaving the plane; since they each had just the one carry-on bag, they were outside in ten minutes. I pulled up and they climbed in, quickly back on the road. \"You guys tired from the flight,\" I asked. \n\n\"Which one, there were three of them,\" Erica teased. \"Cramped cabins, airport food and the TSA, what could be finer?\" \n\n\"Well, if you want, we can go back to my apartment and stay there overnight. Tania, I'm supposed to go up to Sulphur River tomorrow to interview you for the FBI since someone knocked off that training facility in Miami.\" \n\n\"I'd like to run,\" Tania said. \"My wolf wants out.\" \n\n\"Yeah, it's only a few more hours and we can sleep on the way. I'd love to sleep in my own bed and eat Mom's cooking,\" Bobby added. \n\n\"I'm good with that,\" Talia said as Erica nodded. \"I've had enough of exhaust smells and humans. Let's go home.\" \n\n\"All right then,\" I said as we pulled back onto the freeway. \"We just need to make one stop on the way out of town if you don't mind.\" \n\n\"No problem, we'll wait in the car,\" Erica said. I just snickered as thirty minutes later we parked in front of Jewelry Magic. \n\n\"What are we doing here,\" Talia asked as I ran around and opened the doors for her and Erica. \n\n\"Yeah, why is Bobby grinning like he knows something?\" Tania moved next to her sister as they stared us down. \n\nI looked over at Bobby, letting him start. \"You know I love you so much, you're my mate and that's forever,\" he said as he took Tania's hands in his. \n\nI took Talia's hands in mine. \"But we live in a human world, and I want to be tied to you there as well. I want to let everyone who sees you know you are taken, that you are mine and I am yours.\" \n\n\"So we want to get you engagement rings and choose wedding bands,\" Bobby finished. \n\n\"This is how you ask me to marry you? No bended knee, no romantic dinner,\" Talia said as she glared at me. \n\n\"No, this is how I get you to come in to the jeweler and pick out rings. If my lady wants romance, I'll romance the hell out of her later,\" I said. \n\n\"Whatever you want I'll get you,\" Bobby said. \"We were thinking a fall wedding, a double wedding for us. Invite our friends, have a party and celebrate the amazing women we've fallen for.\" \n\nTania broke first. \"OK let's go,\" she said as she started pulling him to the door. Bobby knocked as the CLOSED sign was showing; the owner came and unlocked it, welcoming them in. \n\n\"I love you,\" Talia said as she leaned in for a kiss. \"Thank you for letting me pick out my own. I'm not a normal woman and I don't want a normal ring,\" she said. \n\n\"Come on in then,\" I said as I took her hand. I held the door open for Erica. \n\n\"Wait, he's a witch,\" Talia said as she scented the older man. \n\n\"He will spell the rings so they only show when we are in human form,\" I said. \n\n\"Come see some of your choices, I serve many supernatural customers and I have a wide selection. If you do not see what you need, I can have a custom design made for you.\" The girls started looking at trays, and soon narrowed down on what they wanted. Tania wanted a solitaire ring/band combination made of white gold; both rings had a Celtic design, with a small stylized wolf's head near the top of the band. \n\nTalia surprised me, bypassing the normal gold and silver rings and finding a wider band of tungsten, a deep cobalt blue that matched her eyes. \"I don't like diamonds or gemstones, but I love this,\" she said. The top of the blue band had a white circle like the moon, two wolves sitting facing each other and howling into the air. \n\n\"It's beautiful,\" I said. \"Do you have it in our sizes?\" \n\nHe just laughed. \"I can make a ring disappear, making it fit is nothing,\" he said. \"I can even spell it to remain in place unless you say a word to release it, that way you never lose it.\" \n\n\"I'll never take it off,\" I said. \n\nEven Erica found something she liked, an antique filigree ring with a square-cut diamond and six rubies on each side as it wrapped around the sides. Since Eduardo wasn't here, she took a picture and sent it to him and the owner gave her a card with the details. \"We'll have to come by sometime after dark,\" she said. He didn't skip a beat, finding the matching band for her and for him, both with rubies set around them. \n\nWhen they were done, I asked them all to go wait in the Jeep. \"Leave us a little mystery, maybe we will get what WE want or something,\" I said. \n\n\"You are old enough to know the answer when given,\" Talia said as she turned for the door. Erica took my key and they all walked out into the evening air. \n\nWe confirmed our order, and since he had sized them when we tried them on it was easy to pack them up. He gave each of us the total, and I pulled out my debit card and paid. \"Cash all right,\" Bobby asked. \n\n\"Always,\" he said. He went into the back room to run my card. Bobby reached into his pocket, taking out a pack of hundred-dollar bills. \n\n\"What is that,\" I asked. \n\n\"Straight cash, bro.\" \n\n\"Where did you get it?\" \n\nHe sighed. \"The safe on the island, I kept a couple of these for myself, the rest we gave to the Pride.\" \n\nI started to fume. \"Are you fucking stupid? Were you knocked on the head or something? That's money from sex slavery, the same nightmare she lived for years. Do you think she'd want a ring bought with that money?\" His face paled, he hadn't thought of that. \"Not to mention the risk you took bringing undeclared money into the country. You risked it all for some money?\" \n\nHe looked down at it, now that he saw it was tainted, he shook his head. \"You're right. She'd throw it away if I bought it with this.\" \n\n\"Let me buy them for you. I have plenty of money, or you can pay me back later?\" \n\nHe nodded. \"I... I'd appreciate that. What do I do with this?\" \n\n\"Get rid of it. Donate it to a battered women's shelter or a charity that helps women coming out of sex slavery. You can't keep it, that money is cursed.\" He put it back in his pocket as I told the owner to add Bobby's order to my card. A few minutes later, jewelry boxes in our pockets, we rejoined our mates in my Jeep. With one more stop at an In-N-Out Burger for a late dinner and drinks, we were on the road and back home by three in the morning. \n\n\"My babies,\" Mom said as she ran down to our car. Bypassing us completely, she hugged Talia, Tania and Erica before leading them into the house. \"Get the bags, boys,\" she said over her shoulder. \n\n\"Nice to see you too, Mom,\" Bobby said. \n\n\"Oh, quit pouting and take those bags to your rooms, can't you see these girls are exhausted?\" We grabbed the bags out of the back as Mom talked to them about their ideas for a wedding. ",
        "\"Mom, it's late and we just want to take our mates to bed,\" I said. \n\n\"Well, give me some pups while you're at it,\" she said before promising the girls they'd talk more tomorrow. I walked Talia back to my room, glad I had my own bathroom attached. After a quick shower, we fell asleep in each other's arms and everything felt right again. \n\nWe woke about noon and walked down to the smell of bacon cooking. BLT's were for lunch, and for us that meant a stack of bacon on sourdough with a leaf of lettuce and a big slice of tomato. We talked wedding over lunch, the girls agreeing that it should be held on Tomah Pack lands. \"Have you thought more about taking over as Alphas there,\" my father asked. \n\n\"I did, especially on the way home,\" Tania said. \"I'm not the scared human I was when I was found, not anymore. Taking out those men on the island was liberating; I survived, and they paid for what they did with their lives. My wolf is strong, and she wants her Pack.\" \n\n\"We plan to visit there soon, the sooner the better,\" Bobby said. \"No one can move forward until we decide, and she's ready as long as I'm by her side.\" He leaned over and kissed her. \"I'll always be by your side,\" he said in her ear. \n\n\"I need her statement, but I can get that after we're done,\" I said. \"I can drive you back to Dallas later today so you can catch a flight.\" \n\n\"I want to run with my mate tonight, can we leave in the morning? We'll get an afternoon flight tomorrow,\" she said. \n\nWe decided on an early evening hunt, then we'd leave late in the morning. Bobby went off to buy the tickets while I pulled out the information that my boss had emailed me from Miami. I went through the photos with her and wrote out a statement for her to sign. She was able to identify eight of the ten dead people as being part of the training facility she had been held at. I scanned the statement in and emailed it to my boss, informing her I'd be back at work in two days after spending another night at home. \n\nTen minutes later I got her answer in the form of a call. \"Forget that, get to Miami now. The Colombian police got a tip and raided Sex Island, and everyone there is dead.\" \n\n\"Dead? Oh my God, those poor girls!\" \n\n\"The girls aren't there,\" she said. \"All the staff and the guests were shot, and the girls just disappeared. Pack for a week and bring your passport, we're heading down there.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "coven",
        "love",
        "mate",
        "pack",
        "slavery",
        "vampire",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-56-60"
}