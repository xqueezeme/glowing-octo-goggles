{
    "title": "The Chronicles: Three Sisters 04",
    "pages": [
        "THREE SISTERS Chapter 4\n\nMoruith and Inisian asked us to stay. It would feel safer with us there, they said. They didn't put it into words, but I'm sure they also felt indebted for our assistance in ridding them of the threat of Rymvi SmallFoot - and helping Inisian to avenge his brother.\n\nBut I believe that Moruith was also moved by her ailing husband's reaction to my daughters. Miek persisted in seeing them as supernatural creatures, who had come to ease his way into the afterworld.\n\nFor our part, it was an easy decision to accept their offer. Bacho wouldn't find us here - assuming that he was still looking. We would be safe, and comfortable, for the winter.\n\nI never imagined that we would stay there for six years.\n\n***\n\nMiek didn't survive the first winter. He faded away before our eyes, suffering in silence. Between Moruith and the girls, though, there was always someone there to anticipate his needs.\n\nIt was a good way to go, all things considered.\n\n***\n\nMoruith was a wise, capable woman. She was only in her early forties, but looked much older. Her face was lined, and her hair was a coarse steel grey. The veins in the back of her hands were prominent, and her fingers were crooked, twisted like mine. Almost all of her fingernails were cracked, or split.\n\nShe had led a hard life. Miek was her second husband. The first was a reiver, a thief and a killer. She lost her first two children, and didn't shed a tear when her man was killed.\n\n- \"He deserved it.\" was all she would say.\n\nMiek was a kinder, gentler man - and a builder, rather than a destroyer. She loved him, and her two sons, without reservation.\n\nOn those dark winter nights, when it was too cold to go out, and too dark to see, but too early to go to bed, we told tales. Moruith was not shy. She had no reticence about her past, and told many stories. They weren't about bravery, or swords, or the follies of men.\n\nShe told my daughters about the strength and endurance of women, the power of the earth, and the deep roots of the mountains.\n\n- \"Three Sisters. Just as you three are sisters.\" she said. \"You have to stand together, the same way they do.\"\n\nI knew, from the first, that she told her stories for the benefit of my girls. Moruith was happy to have listeners - that's true. But she had a wealth of wisdom to share, and I was very pleased that my daughters were there to soak it up. After raising two sons, she was delighted to have my girls to talk to.\n\nShe was a veritable fountain of useful advice.\n\n- \"If you have too many flies,\" she said, \"soak a cord in honey, and hang it. When the flies settle on it, they'll stick.\"\n\n- \"One fly is too many.\" I said.\n\nHer knowledge benefited me as well. Moruith took a long, hard look at my right hand.\n\n- \"Let me see that.\" she said. After a lengthy examination, she shook her head. \"They're not like mine. Your fingers were broken, but they didn't set right.\"\n\nI didn't like the sound of that. \"What am I supposed to do about that?\"\n\n- \"We have to break them again, and set them straight.\"\n\nMoruith had me drink a full jug of sushen - fermented honey - until I was almost unconscious. She instructed Inisian to hold me, firmly.\n\nThen she broke my fingers, one after the other.\n\nAlcohol makes you feel the pain less keenly - or not at all, if you've drunk enough. There must have been magic in that jug, because I barely felt it as the old woman snapped my fingers, then tugged and pulled at them until she was satisfied. After that, she bound them tight.\n\n- \"You're not to use that hand.\" she said.\n\n- \"For how long?\"\n\n- \"Until I tell you.\"\n\nI was not particularly happy with her, the next day. But over the ensuing months, I came to respect her judgment. My index finger remained crooked, and I never completely trusted it. My pinkie never recovered. It was still completely useless.\n\nBut by Spring, the other two fingers began to recover their flexibility, and their strength, to a degree that I found miraculous.\n\nI was so grateful, I even considered asking Moruith to marry me. Upon reflection, though, I realized that gratitude was not a good enough reason for marriage. I hadn't buried Meonwe, yet, either - and Moruith was still mourning Miek.\n\n- \"I wish I'd met you when we were both younger.\" I said.\n\nMoruith laughed. \"No, you don't.\" she said. \"Tanguiste says that your wife was beautiful. I ... I was never more than plain. I could never have given you daughters like yours.\"\n\n\"They'll make you proud, Veran.\" she said.\n\n***\n\nInisian was a solid lad. I wasn't his father, and I didn't pretend to be anything other than a guest in his house. But he was at an impressionable age, and never ceased to be amazed that I had helped him eliminate the threat to his family and avenge his brother - all with one hand.\n\n- \"I'm no great warrior.\" I told him, but Inisian seemed to think that I was just being modest.\n\n- \"Teach me what you know.\" he would ask.\n\nI did show him how to hold a long-handled axe in a fight.\n\n- \"Keep it back here - like this.\" I said. \"Then you only have to swing forward, to strike. If you hold that weapon in front of you, you'll have to swing it backwards before you can launch an attack with any speed or power. Might as well tell an enemy 'I'm about to hit you'.\"\n\n\"And don't swing at his head. He can duck. Don't try to split his head in half, either. Go for his waist. Too high to jump, too low to duck. And difficult to block. His only move is to jump back. Hard for him to do you any damage while he's moving backwards.\"\n\n\"You just have to be careful not to overreach - to overextend yourself. Keep your feet under you.\"\n\nI let Inisian swing at me with a stout branch, to get the idea. It was a bit awkward, since I could only hold the sword in my left hand. But when we reversed roles, he got the idea right quick.\n\nIn fact, though, the young man had more to teach me than I him. He was a skilled woodsman, who knew the forest the way I knew the lake. In his domain, there were many, many things he could show me.\n\nAnd not just me.\n\nWhile Tanguiste gravitated to Moruith, Yevna insisted on accompanying Inisian and me when we ventured out. Hunting, gathering edibles, or even just checking on Svijo and his sister - Yevna always wanted to come along.\n\nShe learned the location of all the trails, the names of the trees and the shrubs, and all of their particularities. Inisian taught her how and where to find the forest wildlife, either for hunting, or as signals as to the whereabouts of edible plants and fruits.\n\nShe also worked hard to develop her upper body strength. That's not easy, for a woman, but Yevna was frustrated that she couldn't pull a bowstring back past her chin. She was stubborn, and determined.\n\nYevna grew up coltish - slender, long-legged, and a little bit awkward. She was dark-haired, and dark-eyed, and in my biased opinion, quite lovely. But she was too self-conscious of her front teeth. Yevna preferred not to talk, unless it was absolutely necessary. And she rarely smiled, except occasionally, for only her sisters or me to see.\n\nBy the time she was 14 years old, Yevna took to accompanying Inisian into the woods even when I wasn't going.\n\nBy 15, she was going alone.\n\nYevna would ask my permission, but the look in her eye suggested that the answer had better be yes.\n\n***\n\nTanguiste learned more than household craft from Moruith. She learned everything.\n\n- \"That girl is a wonder.\" Moruith told me.\n\n- \"How's that?\" I was a pleased, as a father, to hear my daughter complimented. But I was also curious to know exactly what the old woman meant.\n\n- \"She's a great help when I'm working. She understands exactly what I'm doing, and never gets in my way. And Tan seems to have a way of knowing what I need to do next. She'll hand me ... a tool, or an ingredient - almost before I've even thought to ask for it. Like she knows what's in my mind.\"\n\n\"I swear that girl could take over the household and prepare meals as well as I do.\"\n\n- \"So she's a good cook.\" I said.\n\nMoruith shook her head, exasperated. \"You're not listening, Veran. I'm trying to tell you that your daughter hears everything. Not just the words - but the inflection, the deeper tones of meaning.\"\n\n- \"I don't understand.\"\n\n- \"Let me put it this way. I asked her an innocent question, about her sisters, and Tanguiste came back and asked me about my daughter.\"\n\n- \"You don't have a daughter.\" I said.\n\nMoruith didn't answer. But tears formed in both of her eyes.\n\n\"I'm so sorry.\" I said. \"I didn't know.\"\n\n- \"Only Miek knew. Teph and Inisian didn't. But Tanguiste knew. I never spoke a word about my little girl ... but your daughter knew. And when I started to cry my eyes out, she comforted me.\" Moruith shivered, and took a deep breath.\n\n\"She's special, Veran.\"\n\nThat certainly sparked my curiousity. I asked Tanguiste about it.\n\n- \"Moruith's little girl? Oh, Papa, it was so sad ...\"\n\n- \"But how did you know?\" I asked. \"She didn't say anything.\"\n\n- \"I ... I can't explain. I just knew.\"\n\nI had to be satisfied with that. But a few years later, as Tanguiste grew up, I was struck by how much she resembled her mother. She had Meonwe's colouring, her nose, her full lips ... and her waspish waist. She almost looked more like Meonwe ... than Meonwe had.\n\nAnd as I though more about my unusual daughter, I came to another realization.\n\nWhen you live at close quarters, there will be minor irritations and annoyances. These things can grow, or fester, and suddenly explode into harsh words and hurt feelings. Over the years we spent with Moruith and Inisian, we had the opportunity to see virtually everyone lose their temper, or get angry with someone else.\n\nExcept Tanguiste.\n\nNo one ever grew angry with her. And she never lost her temper with any of us.\n\n***\n\nAs Guenna grew up, I saw my parents, more and more, in her colouring and in her features. For the first few years, she was too small to take into the woods. She was curious, and wanted to go with us, but I made her a promise that if she waited, then I would take everywhere I had been with Inisian and Yevna.\n\nGuenna was constantly asking questions - she seemed to have an endless supply of them. But she rarely interrupted. At night, she would listen to the 'grownups' talk - and then wait until her bedtime to ask me the questions she'd been saving. As a strategy to avoid going to sleep, it was quite effective. She trusted that I wasn't going to refuse to answer. So we began negotiating over how many questions she was allowed.\n\n- \"I think three is more than fair.\" I said.\n\n- \"Can I ask the rest tomorrow?\"\n\n- \"If you remember them.\" I said.\n\nShe always did.\n\nOne day, when she was about nine, I returned from a day in the woods with Inisian and Yevna. Moruith met me at the door, holding Guenna by the hand.\n\n- \"Take your daughter for a walk, or something.\" said the old woman. \"Until we call you for dinner.\"\n\nOnce out of sight of the house, Guenna spoke up.\n\n- \"I'm sorry.\" she said.\n\n- \"What did you do?\"\n\n- \"I made Moruith angry at me. She says I ask too many questions.\"\n\nI gave her hand a gentle squeeze.\n\n- \"You do.\" I agreed. \"I've noticed, though, that you don't ask the same question twice.\"\n\nGuenna looked at me as if I had two heads. \"Why would I do that?\"\n\n- \"Some people don't listen.\" I said. \"They have to ask again because they didn't hear the answer the first time. Others forget, so they need to ask a second time.\"\n\n- \"I remember.\" said Guenna. \"I always do.\"\n\n- \"I know you do. That's why I never mind answering your questions. But you have to understand, sweetheart: sometimes, Moruith is thinking of something else. She's planning our dinner, or wondering if we have enough salt.\"\n\n- \"So ... it's like I'm interrupting her?\"\n\n- \"In a way, yes. There's a time and a place for questions - and that's not all of the time, or any place.\"\n\n- \"I know that.\" said my youngest, with the absolute certainty of a nine-year old.\n\n- \"Then you can try to limit how many questions you ask a person. So many per day, just as we do at night.\" I said. \"And there are signs people will give you, when they're ready to answer your questions - or even eager to. Most people don't even know they're giving these signals.\"\n\n\"If Moruith turns towards you, that's a sign that she's interested. Watch where her toes are pointing - if they're pointed at you, you can ask another question. But if she only turns her head, and answers over her shoulder, then she's probably busy.\"\n\n- \"And if she comes to sit down with me, then she's very interested?\"\n\nGuenna might not grow up to be a beauty, but I had no doubts about her intelligence.\n\n***\n\nSvijo and his sister gave us no trouble. In fact, they went out of their way to try to show us that they were no threat.\n\nOnce, when Inisian, Yevna and I were out gathering blueberries, the girl carefully approached us, giving us plenty of warning. Svijo stayed further back - within sight, but not close enough to do us any harm.\n\nShe came closer, to within twenty yards, and placed a sack on the ground. Then she retreated.\n\nIt was a sack full of chestnuts.\n\n- \"Why would they do that?\" asked Inisian.\n\n- \"It's a peace offering, of sorts.\" I said.\n\nWe established a live and let live relationship with them. Inisian never trusted Svijo, after his brother's death. But at least he didn't insist on exacting vengeance.\n\nThere were four more families within 3 to 4 leagues of Moruith's house. We saw them occasionally. Sometimes we came across each other in the forest, while hunting, or checking traps. Mostly, they seemed to have a 'live and let live' attitude.\n\nOne of these men, though, came to Moruith, to ask if Inisian and I could help him. He was trying to keep a young bear from moving in too close to his house. We agreed to assist him, and helped to drive the animal off.\n\nThis fellow knew my name. 'One-Eye', he called me. I was no longer Hammerfist - or even Veran. To these folk, on the northern slopes of Myeva, I was a completely different person.\n\nQuite often, I agreed with them.\n\nAsphodels was a long way off. I couldn't forget Meonwe, or my son, and my friends. Nor did abandon my hope that one day, I would avenge them.\n\nBut I was One-Eye now, too - the scarred man raising his daughters. Thoughts like these kept me awake late at night, more than once.\n\n***\n\n- \"How did you met your husband, Moruith?\" asked Guenna. She meant Miek, of course - Inisian's father.\n\n- \"Well, Tan already knows the story.\" said Moruith, with a glance at my second daughter. Inisian, obviously, had already heard the tale a dozen times. But Tanguiste's smile of encouragement was enough for Moruith to go into it again.\n\nEven I had heard it before. Guenna must have been asleep, then - otherwise, I'm sure she would have remembered it.\n\nIt was a long story, with multiple secondary anecdotes. Moruith was feeling particularly relaxed, that night, and didn't skip a one of them.\n\nInisian wanted to change the subject. I couldn't blame the lad. But then he went and put his foot right in it.\n\n- \"So, Yevna - whatever happened to your mother? I've never heard you speak of her.\"\n\nThere was no way that my eldest was going to respond to that. She didn't even raise her head to make eye contact with Inisian.\n\nIt was Tanguiste who answered.\n\n- \"That's a difficult story, for us.\" she said. \"But I will tell you what I can.\"\n\nTan began to relate her childhood memories of her mother, and her brother. Yevna didn't move her head, or make a sound. Guenna began to cry, softly.\n\nI didn't want to hear a word. I wasn't sure that I could bear it. But it would have been churlish to desert my youngest at that moment.\n\nTanguiste remembered her grandfather, Branhucar. It warmed me, to see that she had fond memories of my father. She described Asphodels, the lake ... her brother. And then she began to relate our conflict with the Nadestis.\n\nI was surprised. I couldn't recall ever explaining the dispute in any detail to my young daughters. Yet, here was Tan, explaining the gist of the issue to Inisian and his mother. According to her, I had acted as an honourable man should have.\n\nGuenna had stopped crying. I, on the other hand, had a tear in my eye.\n\nIt was partly what she said. But it was also the way she said it. In that sense, Tanguiste was more gifted, even, than my father had been.\n\nShe described the battle at the Bend as if she had been there. And then she told Moruith and Inisian what had happened afterwards.\n\nTanguiste didn't spare any details. I had hoped - vainly - that my daughters might have been spared some of the horrors of that night. In my admittedly misty recollections, I thought that the girls might have missed some things, because they were exhausted, or horrified ... or simply unconscious.\n\nTan hadn't missed a thing. She told our friends about the betrayal of Povilas and Guithrit, and the vengeful cruelty of Bacho and Kestutis. She said everything in a matter of fact tone, which only made it seem more horrific.\n\nPoor Moruith had no idea what to say. Thankfully, she didn't try to offer comfort. Inisian sat still, like a man carved from stone. Yevna hadn't moved, either.\n\nTanguiste described the rape and murder of her mother, the murder of her brother ... and then our escape, thanks to Yevna - including our retribution against our tormentors, and then our flight across the lake.\n\nWhen she finished her tale, there was complete silence, for a time.\n\n- \"I'm sorry.\" said Inisian. \"I didn't ...\"\n\nTanguiste reached out, and took his hand. \"It's alright.\" she said. Then she turned to look at me.\n\n\"I'm sorry.\" she whispered.\n\n- \"No.\" I said. \"Don't be sorry.\"\n\n- \"You told it right.\" said Guenna.\n\n***\n\nThere were few families nearby, and even fewer children. My girls may have lacked playmates, but they weren't starved of friendship. They had each other.\n\nYevna and Tanguiste were only two years apart; Tanguiste and Guenna less than that. Though their personalities were different, and their interests didn't always match, my daughters had sisters to rely upon. They liked and trusted each other.\n\nWhere Yevna was shy, now, when people were around, she would talk to her sisters in private. Guenna, in fact, began directing a significant number of her questions at her eldest sibling. It was a common sight to see the two of them, heads close together.\n\nThey were safe - relatively safe, at any rate - and forming a close bond with each other. It was one of the greatest blessings of the years we spent with Moruith and Inisian.\n\n***\n\n- \"What do you think that is?\" I asked Inisian. There was a plume of smoke to the east-northeast.\n\nHe frowned. \"I'm not sure.\"\n\n- \"Someone burning, and it got out of hand?\"\n\n- \"Too early in summer for that kind of burning.\" said Inisian. \"It's not a forest fire, either - too narrow.\"\n\n- \"A house on fire?\" I suggested.\n\n- \"Maybe. But accidental? Or on purpose?\"\n\n- \"How far, would you say?\"\n\n- \"Nine or ten leagues.\" said Inisian. \"Maybe a bit less.\"\n\n- \"We'd better check it out - tomorrow.\" I said. It was too late in the day to travel that far.\n\n- \"Sounds like a good idea.\" he said. \"We can start with Svijo, see if he knows anything.\"\n\nYevna accompanied us the next morning, as we set out. I had no premonition of danger, no idea that our lives were about to change - dramatically.\n\nBut my daughter was developing an extra sense. A few hundred yards from Svijo's house, she put her hand on my arm.\n\n- \"Wait.\" she said. \"Listen.\"\n\nIt took me a moment, but then I heard it, too. Voices. Plural. Male voices. They weren't yelling, but they weren't whispering, either. Svijo and his sister lived alone.",
        "We left the trail, and approached from upslope. There was a good vantage point there, behind a stand of stunted pine. The three of us carefully - and quietly - took up position where we could see down into the little clearing.\n\nThere were nine men camped in front of Svijo's house. They were lazing about, in the summer sunshine, cleaning their weapons or just dozing in the heat. They were heavily armed: I saw swords and axes, at least three bows, and three shields. Several of them had bits and pieces of armour, like shoulder guards, or studded gauntlets. One had a shirt of chain mail.\n\nSvijo was lying next to the door, in a pool of what appeared to be his own blood. His head had been split open.\n\nThere was no sign of his sister. That did not bode well.\n\nAs we watched, two men came out of the house. I didn't know them.\n\nBut Yevna caught her breath, and squeezed my arm. Slowly - very slowly - I turned my head.\n\nYevna was too experienced, now, to speak aloud. Voices can carry. She only mouthed the word. I didn't know what she was saying. My daughter moved her lips very slowly, exaggerating every syllable.\n\nKes - tu -tis.\n\nBacho's son. I turned back to look at him again. He was a full-grown man - he would be 20 years old, now. He had long, wavy blonde hair, bushy eyebrows, and a short beard, which he had begun to braid, with a pierced gold coin at the end of the braid.\n\nHe was powerfully built, with bulging biceps beneath his short-sleeved coat of mail. He wore a broad leather belt, and a saffron kilt.\n\n- \"You two -\", he pointed at two of the warriors. \"You're up.\" He jerked a thumb at the cabin behind him. I knew then where Svijo's sister was.\n\nAnd there was precious little we could do about it.\n\nThree of us - including a sixteen year-old girl, and a man with one and a half hands - against 11 warriors. I didn't recognize these men, which told me that Bacho had been recruiting killers. Reivers and murderers, they looked like - but dangerous men, nonetheless.\n\nMy first instinct was to try to rescue Svijo's sister. If she was still alive, they would continue to rape her, and then probably kill her before they moved on. I admit that I had a momentary vision of killing Kestutis, and beginning to avenge my wife, and my son. My hands trembled, a bit, as I imagined driving my sword into his throat.\n\nBut the men here were not of SmallFoot's ilk. They were probably more than a match for Inisian - and for me - one on one. Yevna had a bow, and she was quite good with it. But even if she killed one man outright ... no, it was insanity. If we had to run, we would lead them straight to Moruith, and my daughters.\n\nInisian would follow my lead. But when I looked into Yevna's eyes, I saw the same hatred, the mad urge to destroy, that had nearly swamped me. So I reached out, and touched her arm.\n\nI shook my head, slowly.\n\nMy eldest had sworn to kill Kestutis. But any attempt to do so today would lead to our deaths - all three of us. And then Moruith and my other two daughters would die as well. And it would not be pretty.\n\nI mouthed the syllables to her: three - sis - ters.\n\nIf we attacked these men, Tanguiste and Guenna were as good as dead.\n\nYevna's face revealed the struggle, in her mind, between vengeance, and common sense. Thankfully, wisdom prevailed, and she brought herself under control.\n\nThen I led the way back.\n\nIt was late afternoon when I opened Moruith's door, and stepped inside.\n\n- \"Pack up the food, and your extra clothing.\" I said. \"We're taking only what we can carry. And we leave within the hour.\"\n\nMoruith looked like she might protest. Inisian went over, and took her by the hands.\n\n- \"Reivers, Mother. Ten of them. Too many for us. They're probably looking for Veran and the girls.\"\n\n- \"Kestutis leads them.\" spat Yevna.\n\nTanguiste and Guenna - bless them - wasted no time on wailing, or unnecessary questions. They knew that they would hear the full story later. There was no time to spare, and they immediately got to work. I was very proud of my girls, that day.\n\nMoruith was steady, too. She set out the food we could take, and made bundles of clothing for the girls to carry. In the corner of the room, she dug up the pitifully small cache of coins which she and Miek had accumulated over the years.\n\nWe were unlikely to be coming back. That was why we ruthlessly stripped the house of anything useful or valuable that we could carry, and broke or disposed of the things we could not take with us.\n\nMuch sooner than I expected, we were ready to go.\n\n- \"East?\" asked Inisian.\n\nThere was no other choice. West would lead us towards Kestutis. Even if we got past him, there were high mountains further west, which would force us to turn south, towards the lake - and Bentwood - Bacho's home ground.\n\nNorth was wild country, populated by savages, where even Kestutis would fear to tread, with his ten men. We wouldn't last a week if we went there.\n\nThe forest far to the East was just as bad. But I thought we might go as far the river, and then turn south, or southeast. That decision, though, was a problem for another day. Our goal this evening was to put as much distance between us and Kestutis as we could.\n\nMoruith didn't complain. Nor did my girls.\n\nWe covered several leagues before it grew dark, and then we continued on, slowly. We stopped, to rest and to eat, but I would not allow a fire. Inisian knew these woods very well - even Yevna and I felt comfortable here. But a fire might be seen by one of the two families who lived nearby. I didn't want them to tell Kestutis - willingly or otherwise - that we had passed this way.\n\nGuenna was only 12, of course, and Tanguiste 14. Yevna was much harder, and a much better forester, at 16. But there was a limit to what I could ask of her sisters, in terms of strength, and of endurance. Moruith was not accustomed to long hikes, either.\n\nThat was why we stopped, mid-morning, and let them rest. Inisian, Yevna and I took a turn at watch, and a turn sleeping, so that there were always two of us alert and on guard.\n\nIn the afternoon, we covered several more leagues.\n\n- \"I don't know about moving in the dark, tonight.\" said Inisian. \"I don't know this land very well.\"\n\n- \"Neither do I.\" I admitted. The girls and I might have come this way, six years earlier.\n\nWe camped that night, and slept, though again I would not permit a fire.\n\nThe next morning, we crossed a piece of high ground, and found a ridge overlooking the river, still a few leagues away. Off to the south, we could see the head of the lake.\n\nInisian and I identified a stretch of the river that looked narrower.\n\n- \"Might be a ford there.\" he said, optimistically.\n\n- \"Or a boat.\" I said. \"Or we can build a raft. I'd like a closer look, though.\"\n\nInisian led the way, with sharp-eyed Yevna beside him. Then came Moruith, Tanguiste, and Guenna, with their bundles. I brought up the rear, casting frequent glances over my shoulder, and pausing frequently to watch our back-trail. There were no signs of pursuit.\n\nSheer bad luck led Inisian into a low-lying marsh. The ground grew softer, and soon we found that our footprints began to fill with water the moment we lifted our feet. Inisian hesitated to go any further, and I called a halt.\n\nWe backed out of the swampy terrain, even though we knew that the river was not much farther.\n\n- \"Sorry.\" said Inisian.\n\n- \"Not your fault, lad.\" I told him. \"You were right to stop. We can go around it.\"\n\n- \"North of it? Or south?\"\n\n- \"South.\"\n\nIt wasn't long before I regretted my choice. The forest here was thicker, the trees closer together. We couldn't see more than twenty or thirty yards ahead. The spruce trees blocked our way. Where they didn't, young pine trees and cedars competed for space.\n\nIt was easier by far to skirt the forest, even though that meant retracing our steps to the west for a few hundred yards. Then we were able to move south. with the impenetrable forest on our left.\n\nLess than a league later, we came to an open space of rock and moss, with a few bushes, very much like the northern shore of the lake. It was very familiar to me, at least. We turned east again, hoping to find the riverbank.\n\nInstead, we found another thick forest, which looked even darker and less hospitable than the first. There was a wooded hill to the northeast. Or, we could turn southwest, towards the head of the lake.\n\n- \"I don't know which way is wiser.\" said Inisian.\n\nI didn't, either. That's why I did something foolish. I hesitated. I tried to gauge the distance between us and the river. I listened - hard, hoping to hear the sound of rushing water. And I forgot that we were standing in the open.\n\n- \"Papa.\" said Yevna - a moment too late.\n\n- \"You should follow us.\" said a male voice. It wasn't Inisian.\n\nI turned about to face him.\n\nThere were two of them. The first man was tall, and strongly built. He wore an odd, archaic-looking helmet with cheek pieces and a noseguard. He had long, braided hair, light brown in colour. He carried a shield and sword. But it was the expression in his eyes which gave me pause; he didn't look like a man to be trifled with.\n\nHis companion was younger, but carried a shield and an axe. The youth was bareheaded and clean-shaven. He had dark red hair.\n\n- \"Another behind us, now.\" said Yevna, softly.\n\nI risked a glance over my shoulder. There was a young woman, with shockingly red hair, holding a bow, with an arrow nocked. The string was drawn taut.\n\nI raised my hands, to show that they were empty. We had nothing to gain, in a fight with these people - and much to lose.\n\n- \"We mean no harm.\" I said. \"Are we trespassing on your land? If so, it was unintentional.\"\n\n- \"Who are you?\" asked the man in the helmet.\n\nThis was a question I had been dreading. Surely Bacho or Kestutis would reward anyone who could lead them to me - or to my girls. But in the Uplands, to hide one's identity, or to lie about your name ... that was not quickly or easily forgiven.\n\nNicknames, especially, could not simply be discarded. That was why Rymvi SmallFoot met with such scorn and derision when he tried to call himself something else.\n\n- \"My friend here is Inisian.\" I said. \"This is his mother, Moruith. The girls are my daughters. My name ... is Veran One-Eye.\"\n\nThe redheaded youth reacted: his mouth fell open. But the other man - the one with the old helmet - only blinked. He had piercing blue eyes, I noted.\n\n- \"I knew of a Veran, once.\" he said. \"He was known as Hammerfist.\"\n\n- \"I am One-Eye now.\" I said.\n\nThe youth licked his lips. The man in the helmet studied me for a moment.\n\n- \"You must come with us.\" he said.\n\n- \"Where?\" I asked. \"We might be pursued, by reivers. We haven't seen them for two days, but if they are on our trail ... there could be trouble.\"\n\n- \"They won't find us.\" he said. He pointed towards the hill. \"Follow Seva.\"\n\nThe red-headed girl with the bow scowled, but she turned and led the way. I nodded to Inisian and Yevna; we had little choice but to do as they said. Inisian might be able to hold his own against the redhead, and Yevna might be capable of outshooting the girl named Seva ... but I didn't like my chances against the man in the helmet. Besides - they hadn't threatened to harm us - yet. Nor had they attempted to disarm us.\n\nWe entered a gap between the forests, one to the north, and one to the east. Ahead of us was a wooded hill, with extremely steep slopes. I wasn't sure that it would be possible to climb up.\n\nThen we rounded a corner, and found a break in the trees. There was virtually no chance that a person could have found this spot, unless they already knew that it was there. A ten-foot gap in the trees opened up slightly, and led to a narrow path.\n\nTwenty yards further along, we came to the foot of the hill. There was a rough trail, which seemed to climb straight up the slope. There were footholds - or handholds - but it looked tricky. Treacherous, even.\n\nThe redheaded girl - Seva - whistled.\n\nA boy appeared at the top of the nasty trail. He bent over, and then flung a knotted rope down the side of the hill. Without hesitation, the girl slung her bow across her back, seized hold of the rope, and began to climb.\n\nShe used the footholds, and pulled on the rope. Even for an agile, physically fit young woman, it didn't look like an easy climb.\n\nI glanced at the man in the helmet. How did he expect Moruith, or Guenna, to make that ascent?\n\n- \"They can do it.\" he said - as if he knew exactly what I was thinking.\n\nThey did. Helmet-man sent Yevna up, next, and then Tanguiste and Moruith. The redheaded youth went after them. That left Inisian and me at the bottom - but three hostages for our good behaviour at the top.\n\nGuenna went next. She managed the climb easily.\n\nThe person who had the most difficulty was ... me. The footholds were already a little muddy, and after multiple uses, they were growing slick, and treacherous. I had only my good left hand, and a few reliable fingers on my right. It was not easy to release the rope with my left, and then seize hold again, a little higher up.\n\nI made it look considerably more difficult than the others had, and slipped more than once. I was covered in mud, and quite embarrassed by the time I reached the top.\n\nAs I recovered my breath - and my self-respect - I noticed a pile of stones, next to the stout tree which anchored their rope.\n\nIf someone attempted to climb the slope, without permission ... they would it find it much more difficult than I had, if these stones were being dropped on their heads.\n\nThe man with the helmet swarmed up the rope in no time. He didn't seem to be out of breath at all. Inisian was last.\n\nThe girl with the bow - Seva - ran off ahead - no doubt to carry word of our arrival.\n\nThe redheaded youth led us further onto the hill, around and between stands of poplar, red maple, and red pine. The path was reasonably well-worn. Only a few moments later, though, we reached a clearing, where I was surprised to see half a dozen dwellings. They were made of wood, and looked to have been built only recently - five years ago, at most.\n\nThree young lads and a little girl stopped their play - or work - to look at us. An old woman poked her head out of one of the houses.\n\nThe man in the helmet simply halted us, roughly in the centre of the little settlement.\n\n- \"What is this place?\" I asked him.\n\n- \"Prospal Hill.\" he said. His level stare gave nothing away.\n\n- \"Who rules here?\" I asked.\n\n- \"You'll see.\" he replied.\n\nHe led us to the door of one of the houses. The lintel was low, and I had to stoop to enter. It was dark inside, and it took moment for my eye to grow accustomed to it. The others came in behind me.\n\nBy that time, I could see that there were two women in the room. The first was old - almost ancient. Beside, but a little behind her, sat a younger woman. I didn't get a very good look at her, because she kept her head down, and her hair shielded most of her face.\n\nBut I didn't look at her very long at all, because I recognized the old woman: Guengerthlon Nadesti.\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-04"
}