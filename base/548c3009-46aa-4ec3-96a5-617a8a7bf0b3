{
    "title": "Everybody Needs a Hobby Ch. 13",
    "pages": [
        "** Around 10 a.m. Friday morning**\n\nI was sitting in a parking lot, early for an appointment and devilishly re-setting the presets on Britt's car stereo when she called. I had her car because the girl's house flooded yesterday and we moved them into my place last night. Today Britt, the blonde love of my life, and Gina were going to move more salvageable stuff and needed my truck to do it. \n\n\"Hi lover,\" I said as I set her number one button to a bluegrass station. \n\n\"Well 'Hi' to you too lover,\" came Gina's sultry voice through the tiny speaker. I could hear Britt laughing in the background. \"Your other lover is driving, so she asked me to call. You're on speaker, so be careful what you say stud,\" she giggled as Britt broke out in more laughter.\n\n\"Hi baby,\" Britt said from the driver's seat of my truck, \"We're on our way to the house and thought we'd check in and thank you for the snuggle session this morning; that was really special.\" \n\n\"Yeah,\" agreed Gina and I could hear the break in both of their voices; I was truly touched. \n\n\"You girls know I would do anything for you, so don't think anything about it; it's my pleasure, trust me.\"\n\n\"Well, you can bet it will be before we're done...Lover,\" Britt said emphatically. \"Anyway, we called the insurance company this morning and got that ball rolling and then we called that prick of a landlord and gave him the good news. We may need you to explain to him what happened; I'm sure he thinks it was our fault.\"\n\n\"Yeah, sadly that's not that uncommon in houses built back then; not the greatest design in the world. So give me a call later and let me know what you think about the stuff that is too damaged. We'll have to get a dumpster or I'll borrow a truck from work and we can make a dump run if need be.\"\n\n\"George, you're the best,\" Gina said, \"I don't know what we would do if it wasn't for you. So is it really okay if we put stuff in your building until we figure out what we're going to do?\"\n\nI laughed, \"I don't think you'll take up too much room; I think we can handle it.\"\n\n\"Well, I had to ask; I don't want to take advantage of you...at least that way,\" she giggled.\n\n\"Gina, you naughty girl,\" laughed her cohort.\n\nI could already sense that these new living arrangements were going to make life interesting. \"Okay; well I need to get to this appointment, so I'll talk to you girls later; okay?\"\n\n\"Okay, Suck You Soon,\" they laughed in chorus and hit end.\n\nTo say I was distracted the remainder of the day would be an understatement. Laying in bed, smothered in soft, warm, feminine nakedness; gorgeous nakedness at that, pretty well burns an indelible image on your brain.\n\n**End of a long day -- Friday**\n\nBritt came up on the smart phone screen again and I answered a little more cautiously this time. \"Hey, how's my girls?\"\n\n\"Our cute little asses are draggin'\" came my favorite blonde's response. \"We've made two trips to your place and I think we can get the rest in one more load on your truck and my car; so if you wouldn't mind, would you go by and pick up Kate at the store and then come here to the house?\"\n\nI was a little confused, but before I could ask, she gave me the answer; \"We forgot to tell you, but Kate's car wouldn't start this morning and Gina won't let her drive hers so we dropped her off on our way here. We already talked and John said she could take off whenever you got there.\"\n\n\"Sounds like a plan,\" I said, \"so do you want me to pick up something to eat there or do you want to wait until we get back to our place?\" Interesting, I thought to myself; I just called it 'our place'.\n\nWithout missing a beat she answered, \"let's just wait till we get back to our place; I've seen about all of this mess that I can stand.\"\n\n\"Alright babe, I'd guess that we'll see you in about an hour.\"\n\n\"Can't be soon enough babe; see you soon.\"\n\n\"What, no suck?\" I asked, trying to sound disappointed.\n\n\"Maybe not tonight babe,\" she laughed, \"I'm so tired, I'd probably fall asleep and choke to death. But I do love you so much!\"\n\n\"Love you too, Lick you soon....sorry, that didn't work. See you in a bit.\" I heard her laughing loud as I hung up, happy to hear her laughter.\n\nTwenty minutes later, I found a spot a couple doors down from John's beachwear shop and walked back to the store. It was late afternoon and the place was empty except for Kate high on a ladder, stretching to put a box on an upper shelf. She was wearing a little pair of shorts and a cropped top with sandals on her tiny feet. Her long black hair was in a single braid that hung to the back of her knees, graciously not blocking the view of her pert little ass cheeks poking out of the bottom of the cotton shorts. I couldn't help but let out a raucous wolf whistle that startled her. She turned with a venomous look and nearly stepped out into mid-air. Luckily, I was right there and reached up to steady her, both hands on those protruding butt cheeks. She looked down at me with a smile and wiggled in my grasp, bearing down a little more; \"Hi George,\" she giggled.\n\n\"Hi Kate,\" I said as I took the rest of her weight and lifted her off the ladder by the derriere. At less than five feet tall and nowhere near a hundred pounds, it wasn't a great show of strength on my part. She squealed and squirmed trying to grab onto something as I lowered her to her feet. She wasn't on them a second before she jumped back into my arms, her legs around me and kissed me hard, her tongue going to town. I tried to look around to make sure we weren't making a spectacle of ourselves.\n\n\"Don't worry,\" she said, as she continued to kiss me, \"there's no one else here. I was just doing a little more stocking until you got here,\" and then gave me another long kiss. Suddenly aware of how long we had been going at it, she blushed and let me set her back on her feet; \"Sorry, I got carried away. I just love kissing you. In fact, you're only the second guy I've ever really kissed, other than my dad that is and that doesn't really count.\"\n\nI bent down and gave her another kiss; \"Well, I like kissing you too and as long as it's okay with that blonde roommate of yours, you can have all the kisses you want.\"\n\n\"Well,\" she blushed even more, pressing herself tight to me, her hand on my crotch, \"I'm hoping Britt may let me have something more than just a kiss,\" fondling my growing stiffness.\n\nDrawing on all the self-control I could muster, I picked the little pixie up by the waist and sat her on the front counter, my back to the entrance. Kate looked at me with big brown eyes, a slightly uneasy look as I put my lips to hers and gave her a kiss that any Frenchman would be proud of. At the same time, both my hands found their way under the crop top and I fondled her firm tits, pinching her nipples while she squirmed and moaned. As the time before on the hood of a stranger's car in a darkened parking lot, Kate's little body soon convulsed in orgasm, only this time we didn't have an audience and I persisted until she couldn't take anymore, breaking our kiss with a breathless, \"Ah Fuck!\" \n\nI held her until she was back to normal and with an embarrassed look, she stared at me and then looked down at her crotch, \"Oh god, I think I pee'd.\" \n\nI ran my finger up the seam of the shorts and tasted the residue, a look of shock on her eyes. \"I don't think that's pee,\" I said as I took another swipe and she shuddered once more. \n\n\"God George, how do you do that? I've never cum just by someone kissing me and playing with my titties.\"\n\n\"Just talented, I guess,\" shrugging my shoulders modestly and laughing too.\n\n\"Well now I've got to change my shorts before we leave,\" as she shimmied herself off the counter. Still a little embarrassed, she hurried into the back room to change, \"I'll just be a sec.\"\n\n\"Okay,\" I answered as I looked over some of the merchandise. Then it dawned on me; \"Hey Kate, do you have the swimsuits for tomorrow?\" I yelled toward the back room.\n\n\"That's right,\" she yelled back, \"I was going to ask you about those last night, but the flood kind of changed things. So no, I don't have them. What colors do you think we need?\" as she came into the store pulling up an even smaller pair of shorts.\n\n\"Well,\" I answered, a little distracted. Kate is a perfect miniature; from top to bottom. Sculpted legs on pretty little feet, a nice bubble-butt, a tight little belly and I would guess somewhere close to b-cups with pencil eraser size nipples. She has an innocent little-girl face with the biggest brown eyes and proportionally, some of the longest jet-black hair I have ever seen. \n\n\"Well?\" she replied.\n\n\"Oh, yeah, well the car is white and I think the upholstery is black, so I'm thinking maybe just some real bright primary colors; what do you think?\"\n\n\"Hmm, let's see,\" she said as she walked to one of the racks. She picked a bright red little number off the rack and held it up for my approval.\n\n\"Yeah, I think that goes nice with your skin tone,\" I said.\n\n\"Ya think?\" as she pulled her top up, flashing me and anyone else who happened to look in the window, and held the top over her breasts.\n\nHow can you not smile at something like that? \"Yes,\" I said as she smiled back at me brightly. \"Do you have maybe a bright yellow or blue?\"\n\n\"You bet,\" she said, not bothering to straighten out her shirt. She held up the other two and looked for my approval. \n\n\"I think those will be great. What are the bottoms like?\n\n\"Oh, I think you'll like them; they're really tiny.\" She giggled. \"It's too bad we don't have another one like I gave Britt the other day; you know; the string one?\"\n\n\"Oh yeah, I know it well,\" feeling a little blush come on. The suit she was referring to was the one my vixen wore when she tried to fuck me to death on the hood of a candy-apple red hot-rod. \"So, if that's it, let's get you locked up here and we'll go help the girls.\"\n\n\"Alright, let me just make a note for John on which suits I took and we'll go.\" \n\nSo without anymore fooling around, Kate locked up, set the alarm and we headed for the car. Always the gentleman, I opened the passenger door for her and helped her in. I went around to the driver's side and found Kate sitting in the middle of the bench seat, seat belt on and ready to go. She gave me a grin and with a questioning look asked, \"Is this okay?\"\n\nI slid in next to her and closed the door and buckled up. Starting the engine, I pulled out into traffic and then rested my hand on her bare thigh, squeezing it lightly, \"Yeah this is okay.\"\n\nKate let out an audible sigh, rested her hand on mine and snuggled up tight. She stayed that way the entire trip, never saying a word. We finally pulled up in front of their house just as Britt and Gina were carrying a couple boxes out to the truck. Britt couldn't help but see the little one sitting next to me with the remaining half of the front seat empty. She smiled and just shook her head and said something to Gina. Gina looked back over her shoulder at us and laughed, saying something to Britt. \n\nAs I was getting my seatbelt off, Kate turned to me and pulled my head to her, kissing me on the cheek and whispered, \"Thanks again for everything, especially...well you know...the kiss,\" and then she turned and bailed out the passenger door, running to her roomies.\n\nThey disappeared into the house before I could get out of the car and when I came through the front door, there was loud whispering and laughter coming from the kitchen; \" Again?\" I heard from one of the girls, \"and just from a kiss?\" and then more giggling. \n\nI cleared my throat as a warning and made my way into the kitchen; \"Well, what can I do?\" I asked.\n\n\"Well,\" said my blue-eyed lover, \"you can start by giving me a kiss.\" \n\nAfter a not-so-standard, Hi, how-are- you kiss, Britt finally broke suction and then looked at the other two and said, nodding her head, \"Nothin'\"\n\n\"Well, let me try,\" said Gina as she stepped up and tried to check my tonsils with her tongue. Another toe-curling, pecker-straightening kiss and then, to the others, \"Nope, nothin'\" \n\n\"Oh well, I guess it's back to work then,\" the blonde ring-leader said. \"George, we've got some heavier boxes we saved just for you by the front door if you wouldn't mind.\"\n\n\"Oui, Mon General,\" I said in my best, but admittedly terrible French accent, through her a salute and headed to the front door. The girls laughed as I heard Britt, laughing and saying, \"Goofball.\"\n\nIt took a couple more hours to get everything worth taking packed into the two vehicles. Meanwhile, 'Ol' Peckerhead' as Gina called their landlord, came by to survey the damage. Just as Britt predicted, he started out trying to blame it all on the girls, but it didn't take me long to straighten him out and give him some advice on how to get it fixed so he wouldn't inconvenience his next tenants. Dejected, he left grumbling, and a little lighter in the wallet as I suggested that he should go ahead and refund the girls the remainder of the month's rent they had already paid, as well as the cleaning deposit. He started to grouse about all the money he would have to spend to clean out the place, pull the carpets, etc. before he could even start to do the repairs. I took him aside and enlightened him on the damages the girls had suffered and how I was doing my best to keep them, particularly that hot-headed blonde one, from coming back after him with a claim. He did some quick math and then even offered to haul away anything the girls didn't want, since he would have hauling to do anyway; then it would be a done deal. After he left, I went back inside and filled the girls in on the deal, handing them the check. They all looked at me with disbelief and then squealed with delight, earning me another round of kisses. \n\nSo, it was goodbye little house, as the girls took one more pass through, making sure we didn't miss anything. \"Hey babe, why don't you take Gina with you in your truck and I'll take Kate; I'm not sure I can trust you with her,\" she laughed, poking Kate in the ribs. Kate pretended to pout as she slid back into Britt's car; I noticed she claimed that center position again. I let Gina into the passenger side of my truck and as I headed to the driver's side I thought of something.\n\n\"Hey Britt, how about dinner; do you want me to pick up something on the way home?\"\n\n\"Sounds like a plan; just surprise us; Gina knows what we like.\"\n\n\"Okay, we'll see you back home. Drive careful.\"\n\nBritt gave me a little wink as she looked past me toward Gina; \"You too babe.\"\n\nI climbed into the truck only to find Gina seemed to have a preference for the center seat too and smiled as I got in. \"So what do you have in mind for dinner?\"\n\nGina just smiled and then turned my head to give me a kiss, her eyes misty. \"I just wanted to thank you again for everything. You really can't imagine what it means to us and me in particular.\"\n\n\"Well, you're welcome and you know I would do whatever I can for you girls, so don't think twice about it, okay?\" I patted her on the knee as a way of reassurance, and like Kate, she placed hers on mine except that Gina coaxed mine further up her bare thigh until I reached the hem of her denim cut-offs. I could feel the heat of her sex as she clasped my hand between her inner thighs. \n\n\"So how does Thai sound to you,\" she asked, nonchalantly, me driving with one hand and her scrolling through her phone directory.\n\n\"Sounds good to me\"; as she pushed my hand tighter to her crotch.\n\n\"Anything you don't like?\" she asked, in a more sultry tone.\n\n\"Damn little,\" I answered as I gave her thigh a slight squeeze.\n\n\"Good,\" she replied and dialed the phone, placing an order I didn't hear.\n\nGina gave me directions and we pulled into a small parking lot on the side of the restaurant. Gina looked at the clock on her phone and said, \"It won't be ready for about fifteen minutes,\" she said, unbuckling her seat belt. \"I think that gives me time for one more thank you and an appetizer\"; as she unbuckled my seatbelt and leaned in to give me a kiss that quickly left me uncomfortable. My hand found its way under the back of her shirt and ran up and down her bare back and then slid down, determined to make it under the waist band of her shorts. Her hands were busy with my belt and jeans, moaning with anticipation in our kiss. \n\nThe progress with either denim item was too slow for Gina as she sat upright on her knees: \"Lift,\" she commanded as she pulled my pants and boxers down my legs. My hand was still half tucked into the back of her shorts as she popped the snap on the front and lowered the zipper; my hand now free to wander. \"Oh, god,\" she moaned quietly as my fingers slid down her ass, sliding over her puckered star and then dipping into her hot, wet pussy. \n\nMy cock soon felt her lips and warm mouth as I ran my other hand through her thick hair, brushing it aside so I could massage her neck and tickle at her ear. Her sucking was energetic as she tried to deep-throat me, causing her to gag. The thick mucus lubed my cock as she switched to jacking me and playing with my balls while sucking on the head and taking short quick strokes with her mouth. I wasn't really of a mind to hurry through this; you can always nuke Thai food if it gets cold; so I concentrating on her, running my fingers in and out of her pussy slightly, gathering her juices and spreading them up and down her outer lips and then up to her asshole, making sure it was nice and slick. The plan seemed to work as she slowed, distracted by my thumb now making inroads in her ass. Halfway in, she relinquished my cock, concentrating on the thick digit in her ass. \"Mmm George,\" she moaned, still running her hand up and down my cock, \"Fuck my ass baby, stick your thumb up my butt....ohhh... fuck that feels good!\" \n\nShe went back to sucking as I stroked in and out of her ass until my thumb was buried, the palm of my hand on her ass. I moved it in and out slowly, stirring it around in her ass. Her ass now good and slick, I worked one, then two fingers into her pussy, which was wet to overflowing. My remaining ring finger and little finger were now positioned to slide down and aggravate her clit, nudging it as I rocked my hand, in and out of her ass, in and out of her cunt, sliding over her inflamed clit.\n\n\"Oh my god,\" she moaned, her body rocking into my hand, and then sucking and jacking some more. \n\nWe could both sense the other nearing the edge; my cock seemed to swell to double its thickness, causing her to abandon the deep throat attempts, sucking and licking the head and both hands now around my cock and balls. \"Ohhh.... cum for me baby, feed me your cum,\" she pleaded, her hand now a blur on my cock, her lips sucking hard on the head.\n\nI doubled my efforts, reaching over to spread her ass and fucking her ass and pussy with a fury; \"You first baby, cum for me baby and I'll give you all you can eat....come on baby...cum for me.... come on!\" \n\nWe raced to the finish line as I felt her ass and pussy tighten, and her body clinched and then convulsed in orgasm. She tried to cry out, only to be defeated by the load of jizz I fed her. I could heard her breathing deep through her nose as she swallowed and swallowed; so I cried out for both of us...\"Ah Fuck Me...Fuck....Fuck...unnhh!\" My dick hurt, I came so hard. I held her, my one hand still buried in her backside, my other over her back, pulling her shoulder into my belly. Gina fought to catch her breath, her hand cupping my empty ball sack, excess cum pooling on her hand. \n\nIt took a moment before I could focus and I glanced up to see if we had drawn any looky-loo's. If they had noticed anything, it was just that the windows of the truck were completely fogged up; so they would have to use their imagination. Gina gave me a final cleanup and then sat back up on her knees with my fingers still holding station. She moaned and wiggled her ass, my hand sandwiched between her butt and her legs. She leaned over and kissed me once more, giving me enough room to extricate my invading digits. Setting back, she took my hand and sucked each finger clean. My cock took note, but only half-heartedly. ",
        "Gina leaned down, gave my pecker a parting kiss and then helped me get my shorts and jeans back in place. \"I think the foods probably ready,\" as she leaned back against the passenger door and ran her fingers over her soaked pussy, licking the excess off her fingers. I would have been more than willing to help, but her bare foot pushed me out the door.\n\n**20 minutes later**\n\nWe made it safely back to the warehouse and Kate and Britt were busy pulling boxes out of the back of her car. Gina gave me a quick kiss and bailed out the passenger door, food in hand, skipping to the front door. \"Took you long enough,\" Britt quipped at her as she passed by. Gina stopped, gave her a big smile and a kiss and then headed on inside. Britt turned to me and ran her tongue over her lips, raising an eyebrow. I feigned not noticing and turned to the truck to grab something; anything; not wanting to go in empty handed. \n\nAll three girls were at the island when I made it inside, unpacking the little cardboard boxes and getting out plates and silverware. I made my way to the kitchen sink to wash up, only to be intercepted by my girl. Taking my hand, she said, \"Thanks for picking up dinner,\" and proceeded to take each finger, those that had previously brought delight to her roommate, into her mouth. Glancing over her shoulder, Gina and Kate's eyes grew big at the display; unseen, so did my dick. Finished with her sampling, Britt looked up at me and winked and then turned back to the girls, leaving me to finish cleaning up.\n\nWe talked as we ate, the girls excited about the way things ended with their old landlord and then, expectedly, wondering what their next move would be. I had mixed emotions and for the most part, kept them to myself. I really wanted to have Britt here full time, for more reasons than one and I had no problem with the other two being here, at least short term. If all things went as planned, they all had at least three more years of school here and they had to rent somewhere. \n\nI finished eating and told them, \"Well if you girls don't mind putting the food away and cleaning up, I'm going to empty my truck so I don't have to think about it over the weekend. We have the MG shoot tomorrow and then you have the rest of the weekend to sort through everything you brought over.\"\n\nGina frowned, \"Well some of us do. I have to go to work tomorrow.\"\n\nBritt wrapped her arm around the busty brunette's shoulder, saying with all the overdramatic flair she could muster; \"Oh, poor baby. Well, while you're in an air conditioned store, dealing with happy tourists, we'll be working under the hot lights of a demanding photographer; slaving to satisfy his artistic aspirations.\"\n\nTheir laughter flowed out the front door as I went about the dangerous Jenga-like job of unpacking my truck. Nearly done, building an impressive pile against one wall of the warehouse, I recognized the box that the girls had quickly closed up when I entered the bedroom yesterday. Curious, I carried it over to the stack, and then did a quick recon, looking to see if I was being watched. Partially hidden behind the truck bed, I sat the box down and slowly lifted the lid. None too surprised, it contained what I assumed was their combined collection of sex toys. I didn't dig around or take any kind of inventory, just let it be said that it was a fairly impressive collection in both volume and variety. I put the lid back on and thought about my next move. The devil in me wanted to walk into the house with it and see what kind of reaction I got. The angel in me was too scared to even think about it; I went into the house empty-handed.\n\nBritt was alone in the kitchen when I walked in, \"Kate and Gina are taking their showers and want to just lounge around a watch a movie before going to bed; how does that sound?\"\n\nYou know where my mind went, and evidently it showed on my face; \"You dirty old man,\" she said, throwing a dishtowel at me. \"Gina gives you a blowjob in a restaurant parking lot and now you want an orgy while we watch porn in your bedroom? What kind of girls do you think we are?\"\n\nThe deer-in-the --headlights-look brought tears to her eyes, she laughed so hard. \"No babe,\" hugging me, \"we just want to sit around the living room and watch a chick flick or something; we're all to beat to do a proper orgy.\"\n\nSomewhat relieved but inwardly disappointed, I went in and took a quick shower and pulled on a pair of shorts and a t-shirt. Soon were all gathered in the living room, the girls universally dressed in oversized t-shirts and more than likely, nothing else. They found a movie that I could tolerate, made a bowl of popcorn and we pretty much sat quietly, thoroughly engrossed in the high drama of a woman wronged in 1920's Europe.....Snore......\n\nAnd that's evidently what I did; well at least I fell asleep not long after the movie started. The room was dark when I awoke and I was wedged against one arm of the couch with someone leaning against me, breathing softly. Enough stray light came from the kitchen hood light that someone had left on for me to finally focus and find it was little Kate, feet curled beneath her and snuggled up tight under my arm. The other girls were not in sight. \n\nI managed to stand up without waking her and considered just covering her there on the couch, but particularly since she didn't weigh anything, I figured I'd just deposit her in her own bed beside Gina. I gently picked her up, one arm under her knees, the other under her back with her head on my shoulder. 'This girl is one sound sleeper' I told myself as I stepped through the guest bedroom door. Enough light showed from the night-light in the bathroom that not one, but two women already occupied the king-sized guest bed. If they hadn't been sprawled diagonally across the mattress, I might have shoe-horned the little one under the covers with them, but alas, there was no room at the inn. Too tired to think very hard about it, I retreated to the master bedroom to find the covers pulled back on both sides of the bed. I wasn't so out of it that I didn't figure out Britt and Gina's intentions, so I laid Kate down on her side of the bed and pulled the covers up to her chin and placed a good-night kiss on her forehead. A quick trip to the head and I was soon under the sheets on the other side and out for the count.\n\n**Saturday morning around 5 a.m.**\n\nStandard morning routine -- wake way too early, morning wood planted firmly between warm ass cheeks, right hand firmly grasping supple breast, and face buried in soft blonde mane. Hmm? Hair smells slightly different and it's awfully dark in here...odd; titty seems a little smaller...hmmm...curious....Oh shit!\n\n\"Mmmm, Good morning George,\" Kate says as she squeezed her hand on mine and clinched her butt cheeks; \"I've dreamed of waking up like this ever since Britt told us that you always woke up this way,\" giving my cock another butt-hug. I gave her little tit another squeeze, kissed her behind the ear and said, \"Well, you're going to have to excuse me for a minute, cuz I really gotta take a leak.\"\n\nShe gave me another little squeeze and a giggle and then let me loose. I rolled off my side and headed toward the john, my hard-on leading the way. I heard her enter the bathroom just as I let loose, the splashing echoing off the bathroom walls. 'God,' I said to myself, 'I hope Britt didn't tell them about her standing behind me and playing fireman with my dick as I tried to pee.' Thankfully she wandered over to the sink to run some water over her face. I glanced over and took in her perfect profile and my dick got harder.\n\n\"We talked about it last night,\" she started talking as she dried off her face, her perfect backside facing me; \"you know, after you fell asleep on the couch.\"\n\n\"Talked about what?\" I asked as we turned to face one another, both naked and one clearly excited about it. We both stood and stared. We had seen each other naked once before, oddly enough on the day we met, when I photographed a three-way Sapphic celebration of the girls in my upstairs studio bed. Kate's sexual experience up to that point had been strictly female oriented, but she let it be known that she was definitely interested in the opposite sex; her upbringing and family being her primary obstacle.  \n\nAfter making my acquaintance, Britt had taken it upon herself to help her roommates over their little personal hurdles in regards to the male sex. Gina's previous distrust for the opposite sex, induced by a bad relationship, was well on its way to being alleviated. Kate's virginal state, at least where men were concerned seemed to soon be remedied also. \n\nThe clicking sound of a door latching interrupted the moment and we glanced in the direction of the sound. I took her hand in mine and we walked into the bedroom, investigating the source. The bedroom door was closed and I realized that in all the time I've lived here, I'd never closed the door before. We looked at each other, both knowing who closed the door and the meaning behind it. The combination smile and look of trepidation on her face was priceless. I suspect that I probably had the same look on my face. Neither of us really knew what to say, nor did we need to. I led her to the side of the bed and kissed her lightly on the lips; \"On to the bed, face down please.\"\n\nObediently, but with a quizzical look, she crawled onto the mattress, prone, facedown with her head on a pillow. I knelt beside her, and sweeping her long obsidian locks to her side, I began kissing and running my fingers along every square inch. Starting at the top of her head, I caressed and kissed, unhurried and inquisitive. The ears and neck of every female I have ever had the privilege of being intimate with have always been a favorite area to visit. Kate was no different as she softly moaned her approval. I continued south, caressing and kissing down her smooth back, along her curvaceous torso. Her dimples above her butt were less defined than Britt's or even Gina's, but they were still there and I was rewarded with a little giggle as I ran my tongue over each one on the way to one of favorite locales on the female form; the top of the butt crack. \n\nThere is nothing sexier than that little crease peeking out the top of a bikini bottom or a tight pair of jeans. I straddled the little ones legs and bent down to kiss this magical intersection; letting my tongue explore as my hands kneaded her ass cheeks. Kate moaned in desperation, trying to part her legs, hindered by mine. \"Patience,\" I whispered as I scooted down, still holding her legs together but working my way down, alternating left and right. I lingered at the back of her knees, kissing and nibbling as I held her ankles tight. Down her calves, past her ankles and then to her delicate feet; I took each one and loved it, tonguing and rubbing, delighted at the moaning as I sucked on each little toe.\n\nHolding her hips and rolling her onto her back, I spied her sex, glistening with excitement. I willed myself to start again at the top and worked my way down this equally lovely landscape. Her long black hair was fanned out beneath her like a cape, her brown eyes hooded in euphoria, a sexual high. I kissed her face, peppering it with small pecks. Her chest rose and fell, her breathing rapidly increasing as I grew closer to her erect nipples which visibly pulsed. I glanced up as I was about to take one in my mouth; caught her staring, biting her lower lip in anticipation. Teasing, I hovered over her right breast, blowing lightly, flicking my tongue, just missing the tip. Want shown in her eyes and as I was about to take that ripe bud between my lips...I pinched the left nipple, unobserved; complete surprise. \n\nLittle Kate's eyes grew large as her body reacted to the stealthy attack; \"Unnhhh Gooodddd,\" she cried out as her body rocked in orgasm. Her hands grabbed for whatever was close by, which happened to be my head and drove my face to her chest, completing my lip lock on the right nipple. I suckled there, riding out the storm that swept over her. \"Unnhh...Unnhh...Unnhh...\" she groaned in cadence to waves of pleasure.\n\nThe storm slowly subsided and I was allowed to continue my journey as she gathered herself back up. I kissed and petted my way over her belly, now in tension following the upheaval and dallied at her belly button, probing with my tongue. I felt her stiffen and then relax in relief as I headed down one leg, not venturing to the apex; not yet anyway. I made my way down, revisiting her toes and managing to elicit a small snort of a giggle. I then backtracked, crossing over to the other leg, again taking no shortcuts and avoiding my final destination. Her breathing was now more relaxed as I made my way to the other foot, working harder to get a matching chortle on this one. Finally achieved, I sat up straight on my knees and twisted my back, stretching, and rocked my head to and fro, loosening my neck muscles. Kate was staring up with an almost worried look on her face. Smiling down at her, I reached down, placed my hands inside her knees and spread her legs wide. Her eyes grew even wider as I arched my back, dropping my head and took her entire pussy in my mouth; like a French kiss, my tongue searching inside her tight tunnel of love.\n\nAnother eruption occurred as I lapped at her juices, her body rocking as she wrapped her legs around my head, holding on for dear life. \"Oh god, oh god, oh god,\" she repeated as the waves slowly subsided. I cleaned up my mess, earning a couple more \"Oh gods.\" \n\nReleased from her hold, I inched my way up beside her and took her in my arms, hugging as she kissed and licked my face clean. We held each other tight, my hands on her butt cheeks, my stiff cock captured between her thighs. Her eyes told me what she couldn't seem to get her mouth to say and I kissed her in acknowledgement. We laid there for a bit, squeezing and petting, our eyes locked on one another until she pushed herself up, me on my back, shrouded in her flowing tresses; \"My turn,\" she said.\n\nBacking down, she situated herself between my legs and bent down, addressing my erection. She examined it with medical precision and smiled at me as she wrapped one hand around me, unable to complete the circumference. Watching for my reaction, she wrapped her lips around the head, her tongue dancing about. I smiled at the sensation and she managed to smile back, albeit with her mouth full. Even with her limited exposure to the real thing, she'd clearly put a lot of thought into what she was going to do; one of the benefits to porn I suppose. Her hands, tongue and mouth soon were working in perfect harmony, my flute growing closer to a final crescendo. \n\nI hated to, but I reached for her,\" Sweetie, us guys don't come equipped with that multiple orgasm option like you girls do.\"\n\n\"Not what I heard,\" she said, taking one more draw on my pipe. \"But you're right , what I really want is to feel this big thing inside my tight little pussy and I want to feel you cum inside me and I want to cum all over your cock, \" she shivered as my cock throbbed in her hand.\n\n\"Uh, baby,\" I asked as she worked her way up to straddle me; \"do we need some protection?\" nodding toward the bedside table where I hoped to hell some condoms resided. \n\n\"Nope,\" she answered matter-of-factly as she lifted herself up over my stiffness, taking aim at her sweet snatch; \"the day after I met you and sucked on your cock for what?; three seconds; I knew that somehow I was going to get to fuck this cock and I was on the pill the next day. Hell, I think Gina and I went there the same day and didn't even know it. So no,\" as she rubbed the head of my cock along her wet slit, lubing me up, \"I don't want anything between me and the sweet cum that I keep hearing about.\" \n\nWith that, I propped myself up on my elbows and let her take control. Her eyes were on mine, wide and intense; mine were on the action below. Her little hand grasped me from behind her back, moving my stiffness back and forth between her wet inner lips, slick with excitement. The head of my cock was so wet; it began to run down on her hand. Satisfied that we were both ready, Kate pulled me back, aligning my bulging member with the tiny hole hidden between the wet petals of her pussy. I was entranced, watching as she slowly descended, the petals parting as she took in the head of my anxious cock. \"Ooo,\" she muttered, pausing ;\"So big, so warm.\" Catching my eye, she stared at me in contemplation, caught up in the feelings of flesh on flesh; I could read the sensations in her eyes and then feel them transfer to my cock. Her pussy seemed to get tighter, as though tapered, the further we traversed. Halfway home, she paused again, taking a couple deep breaths; \"So fucking big,\" uttered softly, her pussy fluttering, trying to adjust to the intrusion. \n\nI didn't help matters as I inadvertently flexed, my cock seemingly swelled causing her to gasp and clinch her pussy tighter. \"Fuck,\" I groaned, reflexively grabbing her hips.\n\n\"Tight, huh?\" she smiled, her hands on mine, steadying herself. \"Think how tight my ass will be,\" giving my cock a little hug.\n\n\"Jesus!\" I groaned, trying to push her up to relieve the pressure. I had to gain a little control here or I was going to either seriously hurt myself, or at the very least, blow my wad before I had the chance to bury myself completely in her tight pussy.\n\n\"Slowly baby,\" I said as I began guiding her up and down; slow, small incremental gains. Her hands on mine pushed and pulled with me. Her inner lips sucked me tight, a perfect seal; so perfect we had to rock a bit to break the suction. The little one giggled at the farting sound we made.\n\nWe were soon about three quarters of the way home, developing a decent, slippery rhythm. Her concentration on fucking me only allowed one word per stroke, one up, one down; \"Knew...I'd...love...your...cock...\" We gained a little more; \"Oh...god...so...fucking...good...\" A little more; \"So...fucking...deep...fuck...me... Just a bit more to go; \"Oh...oh...oh.........FUCK!\"\n\nHer pussy grabbed me tight as we mated completely, my cock completely imbedded in the tightest pussy imaginable. Her orgasm threatened to pull my cock out by the root and I held still, letting her ride out the storm. Drained, she laid down on me, my cock still firmly planted in her. I rubbed her back, sweeping her hair to the side to help her cool off. Regaining reality, she kissed my chest a few times and looked up at me through tired eyes. Sheepishly she whispered, \"I love you....thank you.\"\n\nI bushed a few stray hairs away from her eyes, caressing her face, \"I love you too; and you don't need to thank me. I should thank you and maybe Britt.\"\n\nKate giggled her little-girl laugh; \"Yeah, I owe her a lot. I couldn't have a better friend or lover; at least I didn't think so until now. I'm about the luckiest girl in the world. So,\" pushing herself up on her hands and thrusting her hips down, taking the rest of my cock back inside her, wiggling her hips; \"are you going to fuck me and give me your cum or are we just going to lay here and talk?\" she smiled.\n\nGrabbing her hips, I had her on her back before she knew what hit her. I was between her outspread legs, my back hunched so I could kiss her as I rocked my hips, long, slow strokes. \n\n\"Oh my god,\" she moaned in my ear as she hugged me tight, thrusting her little body in rhythm with mine. \n\nI had my hands on her ass, holding her in place as I rode her hard, driving my cock into her tight cunt. I concentrated on her, searching for a last climax for her that would surely carry me over the top.\n\n\"Oh god,\" she cried, \"Fuck me, fuck me hard George...c'mon give it to me.....of fuck...I'm going to cum again.....oh god, oh god, oh god....Unnnnhhhhhh Fuuuuucccckkkk mmeeeeeee!!!\"\n\nI couldn't hold back, her pussy convulsed, tightening, pulling me inward. \"Oh Shit,\" I bellowed as I came, round after round, coating her insides, mixing with her juices; we writhed in each other's arms, sweating, a sharp burning on my back where she dug her fingernails into me as she felt my cock explode deep inside her.",
        "I rolled us to our sides, still clutching one another, breathing hard, her face buried in my chest, my chin resting on top of her head. \"Holy shit,\" I said under my breath.\n\n\"What?\" she asked, turning her head to look up at me.\n\nI craned my neck to kiss her forehead, \"I said, Holy Shit,\" smiling down at her.\n\nKate smile back and giggled, \"So, it was okay for you too?\"\n\nI laughed out loud; causing my still deeply buried cock to let loose it's last little bit of joy. I hugged her, running my hands down to her delectable ass, massaging each cheek. \"I love you,\" she whispered into my chest and drifted off to sleep.\n\n**Saturday around 8 a.m.**\n\nSomeone was nibbling at my ear and running their hand over my ass, trying to slip between my legs. I felt breasts firmly pressed against my back and I still had Kate firmly pressed against my front, breathing softly in her sleep. I reached back and grabbed a familiar butt cheek; \"Good morning lover,\" Britt cooed in my ear. \"So how was she?\" she inquired, nibbling on my ear lobe.\n\nI squeezed her cheek and answered, \"I don't kiss and tell,\" only to be rewarded by a little nip on the ear. \"So where's Gina?\" hoping for another four-way snuggle.\n\n\"She had to leave for work. She asked me to give you a Good-morning kiss though,\" and leaned around to make good on her promise. Looking me in the eye she asked again, \"So?\"\n\n\"I said I don't kiss and tell.\"\n\n\"Well I do,\" chimed in the little one, still safely sequestered in my arms; \"and he was incredible. I'm so glad that he was my first, but I don't think I'll find anyone else who can do what he did to me this morning.\" Kate pulled herself up and crawled over me enough to give Britt a kiss, \" I hate to admit it, but I thought you were b.s.ing us when you kept going on and on what he did to you; and then I figured it was because you loved him and that helped, but after this morning, well I'm a believer.\"\n\nBritt surprised us both, reaching over and grabbing her roommate, pulling her over me and then pinning her on her back. The blonde Amazon straddled the dark-haired beauty and kissed her hard, pinning her shoulders to the mattress. Breaking the lip-lock, Britt looked down at the startled Kate and said stearnly; \"Well, I'm glad you're a believer and yes I do love him, but remember, you're mine and you'll do as you're told and if you're a good girl and make me happy, I may let you play with him again; okay?\"\n\nKate had a bit of worry in her eyes and then as if on cue they both busted up laughing, tickling each other. \"Yes Mistress,\" screeched Kate as Britt tickled her under her arms. I scooted back, watching the show and relieved that their play acting was just that; and damn good acting it was, they had me going for a minute. \n\nBritt clearly had the upper hand and was soon sitting on Kate's chest again, her back to the little one and proceeded to make a meal out of our combined juices. Kate thrashed around as Britt's mouth and tongue worked over the tender pussy. Not to be completely dominated, Kate reached up and swatted Britt's ass cheeks, turning them a bright pink. Britt just moaned her pleasure into Kate's snatch as she kept eating away at her. Kate finally called \"Uncle,\" slapping the mattress in defeat. Britt rolled off and sat up, a smile of victory, along with a lot of cum, all over her face. Wiping her face with her hand, she said, \"Alright, enough play time, we have a photo shoot to do. But first, it's to the showers and baby, your pussy is getting kinda stubbly so I think it's time we introduce you to George's patented pussy and leg shaving treatment, followed by the best hair wash and dry you have ever experienced; how about it, Lover?\"\n\nI grimaced a bit looking at all that long black hair and Britt laughed; \"Okay, I'll give you a hand with the hair.\"\n\n\"Deal,\" I said, getting up off the bed; \"let's get this show on the road.\"\n\nKate was giddy as she'd already been told by both roommates about this personalized treatment. I gave her a quick rundown on the shower and she wandered around in awe as I demonstrated the different features, from the rain and twinkling star lights, the waterfall and the regular handheld shower. After a quick rinse in the shower, I turned on the steam to keep the room warm and sat Kate on the built-in bench seat. My lovely assistant gathered up the towels and the shaving gear and then sat next to Kate and observed. I started with her legs, working the gel to a foam and then carefully ran the blade from top to bottom as Britt held onto her, keeping her seated on the bench. I was careful not to touch her delicate flower during the leg-shaving portion; saving the best for last. The anticipation was obvious however as her pink inner lips swelled, peeking out.\n\nLegs done, I grabbed the hand-held and rinsed her legs, running my hands up and down, massaging them. Kate sat with her eyes closed, humming an unknown tune; Britt looked at me and smiled, throwing me an air-kiss. Ready for phase two, I spread her legs a little more, bringing an end to the humming. I dipped down and ran my tongue over her pussy, sending a shiver through both girls. \"You're right,\" I said, \"I don't know why I didn't notice earlier,\" smiling up at them.\n\n\"Yeah, right,\" said Britt; \"I think all the blood ran to your dick and deadened the senses in your tongue.\" Kate giggled as she tried to run her foot along my crotch, just out of reach.\n\n\"Whatever,\" I said in a slightly gay tone. \"Okay, here we go.\" I squirted some gel into my hands and worked up a lather and Kate inhaled audibly as I started to apply the foam to her pussy. She grabbed onto Britt's thigh as I worked it in around her lips, massaging it in and up onto her lower belly. I picked up the razor and Kate tightened her grip, causing Britt to grimace.\n\n\"It's okay babe,\" prying the little one's vise-like grip loose from her thigh, \"My man has a nice touch with the razor, here, feel mine.\"\n\nI don't know who she was trying to distract, Kate or me, but we all three focused on Kate's fingers slipping and sliding around Britt's satin smooth pussy. Britt cleared her throat, drawing my attention and she smiled and nodded her head back toward the little one; a subliminal 'get your ass back to work.'\n\nI returned to the task at hand, gently drawing the finely honed steel across Kate's soft skin. I sensed the occasional contraction as I stretched and smoothed areas to receive the blade. Kate's excitement flowed from within as I judiciously performed my task. Satisfied, I gently rinsed her baby-smooth pussy, running the back of my fingers along her lips. \"Mmmm,\" she moaned softly, another satisfied customer. \n\n\"One more step,\" I announced, drawing a questioning look as Britt stood her up and turned her to face the wall.\n\n\"Bend over baby, \"Britt directed; Kate's eyes wide in apprehension. She licked her lips as she looked over her shoulder at me, bending at the waist in front of me. \"Wider,\" her roomy commanded, placing her hands inside her thighs, pushing outward. Kate shivered, aware of her exposure, only to be again surprised as Britt reached over and pulled her ass cheeks apart offering me an obscene view. A small climax rippled through the little one as I leaned in for a closer inspection, softly blowing on her puckered anus. \n\nWhether it was needed or not, I wasn't about to pass up the opportunity before me; \"Gel,\" I demanded, like a surgeon at the operating table. Britt let loose of one cheek long enough to reach for the can and slapped it into my hand, resuming her hold on our lovely patient. Rather than squirting the gel in my hand, I held the can strategically, taking aim and shooting a stream of cold green gel dead center. Kate yelped at the sensation as Britt smiled at my accuracy, her eyes shifting from mine to Kate's inviting bud. I sat the can down and with my index finger; I spread the gel liberally around her winking ass, pressing ever so gently with each pass. She squirmed as Britt held her tighter, splitting her cheeks wide. \n\n\"Okay, hold still,\" I admonished her as I picked up the razor and deftly swiped at the mostly imaginary hairs.\n\n\"Oh god,\" she groaned, wanting to move, but firmly held in place by my blonde 'Ass'istant.\n\nI grabbed the hand held shower and did a final rinse, concentrating on the just-finished area. Kate reveled in the feel of the water playing on her ass and pussy. Finished with the job and my teasing, my cock hard enough to drive nails, I stood up and announced, \"All done!\"\n\nBritt, her hands still tightly planted on Kate's widespread ass, shook her head in disbelief. \"Geez George, you always forget the last step....the final inspection\"; and with that, dropped to her knees and buried her face in Kate's ass, her tongue vigorously implementing the final check. \n\nKate bucked as Britt's talented tongue slithered into her rosy bud; \"Ah fuck, Britt,\" she moaned. Satisfied that I had done a superb job as usual, my blonde lover backed out and stood beside me, admiring the backside of the young pixie. \"C'mon girl,\" Britt said, her hand out to help Kate stand back straight; \"now let's tackle that gorgeous head of hair, shall we?\"\n\nStanding in the rain in the middle of the shower under twinkling lights, Britt and I began the arduous task of washing that thick black mane. \"Oh god,\" Kate moaned, \"I'll never be able to take a shower by myself again.\" I stood in front, working my hands through her hair, massaging her scalp as Britt stood behind her, chasing shampoo through the wall of hair that hung heavy to the back of Kate's knees. The occasional twitch told me that the shampoo-girl's hands sometimes strayed from their work area. Kate's hands found my erection, which she just held onto, lost in her own dream state, eyes closed and a smile on her face. \n\nAfter many inches of rainfall, we finally got through the marathon hair-washing session and after a teasing body wash of all concerned we made it out of the shower. I was reaching for the hair dryer when Britt interjected, \"Hey, let's just wrap her hair in a towel for now and let's get some breakfast; I'm starved.\" Britt magically got all that long black hair wrapped into a towel, fluffed her own up with another towel and then marched us all, bare-ass, into the kitchen.\n\nBritt and Kate took over kitchen duties and I elected to just take a seat at the island and stay the hell out of the way. They were like a couple little girls playing house, scurrying around deciding what to make for breakfast. I had never seen Kate smile so big as she pranced around naked, following her roommates instructions. They tickled and giggled as they worked, pretty much ignoring me; \"Ya know,\" said the little one as she wielded a big knife, attacking a pineapple; \"this is kinda like 'Naked Day' only better,\" as she looked up at me and threw me an air-kiss. \n\n\"Yeah,\" Britt answered, mixing up some pancake batter; \"I introduced lover-boy there to 'Naked Day' the other day and I'll have to admit, it was pretty fucking awesome. I can't wait till we all get a day off at the same time; now that will be 'Naked Day' to remember,\" winking at me. My dick swelled at the thought.\n\n\"So baby,\" Britt asked Kate as she licked some stray pineapple juice of the little one's tummy,\" do you want to do the pancakes while I heat up some of the Canadian bacon?\"\n\n\"Sure,\" she answered. \"Do you have an apron? I don't want to burn these,\" pinching and pulling on her excited nipples.\n\n\"We can't have that,\" leaning in and taking a nipple into her mouth, suckling while Kate played with hers. Moving to the other for a quick slurp, she let loose and said,\" the aprons are in the second drawer down to the left of the dishwasher. George baby, will you give her a hand tying it, my hands are dirty,\" holding up her flour covered hands. \n\n\"Sure,\" I said, coming around the counter, stiff dick leading the way. Kate giggled as she slipped the apron over her head and glanced down at me.\n\n\"Hey Britt,\" Kate said over her shoulder, \"is he always like this?\" nodding at my erection. \n\nBritt glanced over and smiled; \"Yeah, pretty much; he has this Boy Scout thing, you know, always be prepared,\" she laughed.\n\nKate smiled at me as she turned around to let me tie the apron. I fought the towel-wrapped hair to get the sash tied, not missing the opportunity to caress her ass. \"I had a crush on a Boy Scout when I was a little girl,\" she said as she pushed her butt back, trying to capture my cock. I let her play for a moment then said,\" here, let's take the towel off. I don't think it's doing much now and it's about to fall off anyway.\" I un-wrapped the towel as she continued to dance with my dick. I hung the towel over a stool and ran my hands through her hair, making sure that we were relatively tangle-free. She shivered as I drug my finger tips down her back, over her ass and down her thighs. Satisfied that we'd be able to get a brush trough her hair later, I gave her a little pop on the ass and said,\" Okay, now how about those pancakes?\"\n\nShe gave a startled little yelp and a dirty, but horny look as Britt laughed at us. She looked at my throbbing cock and just shook her head; \"Okay stud, go have a seat and breakfast will be served in a minute.\"\n\nWe made it through the delicious breakfast without anyone being accosted, too much anyway, and then cleared the dishes. \"Let's leave the clean-up for later, I really want to get this shoot taken care of. Britt, can you get Kate ready while I get set up in the studio?\"\n\n\"Yes sir,\" she said, throwing me a naked salute and turning her sweet backside to me. I turned to head out to the studio when she said from behind me, \"Uh sir, are you going to put any clothes on, sir?\" both of them laughing as they walked into the bedroom.\n\nI turned to follow as I wondered whether all the blood running to my lower extremities was indeed having some effect on my mind. After a quick teeth brushing, I donned a pair of shorts and a shirt and slipped on some flip-flops and headed out to the studio area and the MG. \n\n**30 minutes later**\n\nI had the shiny white MG rolled into place and had the lights all set to go. I double checked the camera and took a couple test shots to check the exposure; everything looked good-to-go. I heard the front door close and watched as a couple beauties strolled across the warehouse floor. Britt was dressed to work, and as the employer, I was very lenient with the dress code. Her pretty feet were in a pair of sandals, easy to slip off to walk on the painted set floor. She had on a pair of her silk running shorts that showed of her toned legs and on top she wore a cropped muscle-T, nice and loose for working under the hot lights. Her long hair was pulled back in a pony tail; she was gorgeous and my heart did little flip. \n\nOur model du jour was wearing the high heels we bought for all the girls. Her perfect legs ran up and disappeared under a short kimono. Her lustrous, long black hair hung loose, fanned out beyond her hips as she sauntered toward the set. Her face was aglow with an anxious smile.\n\nI stepped over to the girls as they set their things on a chair I had drug over to the set. \"You look beautiful,\" I told Kate, giving her a little peck on the cheek. I heard a little throat-clearing behind me, coming from my assistant who wasn't about to be ignored. I turned to her and pulled her to me, which kind of surprised her I think. I kissed her hard, my tongue probing for hers, as my right hand slipped up the leg of her loose shorts, grabbing her ass cheek and giving it a loving squeeze. I broke our hold, \"You're always beautiful;\" it took her a minute to get composed as Kate giggled and I relished one of the few moments I actually took her by surprise. \"Okay; let's do this.\"\n\nI stepped over to the work table to grab my big Nikon and watched as Britt led Kate over to the car. She wore a bright red string bikini that looked miniscule, even on her tiny frame. Her jet-black hair contrasted beautifully with the stark-white paint job on the British sports car. Britt set her in her first pose and then coached her from the sideline as I snapped away, throwing out encouraging comments. Kate still seemed a little ill-at-ease so I stopped after a couple minutes and kicked my sandals off and walked over to her.\n\n\"You're doing great sweetie,\" I said. \"Here, take a look,\" holding the back of the camera up to her and scrolling through the shots we'd taken. Britt joined us, looking over Kate's shoulder; \"You look sexy, doll,\" giving her a little butt a squeeze and a peck on the cheek. \"Just enjoy yourself. Dance and show off for George. Make him want you. Imagine all the guys who'll look at you that month and want to bend you over the hood of this car and have their way with you.\"\n\nKate looked at her with big eyes, \"Okay,\" was all she could manage as she shook her head in agreement.\n\n\"Okay sexy,\" I said, turning to take up my position, \"let's get a few more in this suit and then we'll try another.\" I glanced at Britt who gave me a wink, that sexy wink that always leads to something unexpected. \n\n\"Okay lover,\" she started, \"stand there, spread your legs a bit more.... okay left hand on the wind- shield....turn toward me.....\" and on and on as I took shot after shot. This was too easy, I told myself. Britt knew what looked good and Kate was getting into it.\n\n\"Okay baby, let's see if we can get the photographer turned on, shall we? Put your left knee up on the fender and bend over the windshield....that's good....okay, spread 'em a little more... yeah that's good; make him want to fuck you where you stand....oh yeah, that's the look...fuck baby, I want to fuck you....there you go, that's sexy you little slut.\"\n\nI took shot after shot, and I did want to walk over there and plow her furrow. That long black hair cascading over the white bodywork of the car looked spectacular. Just as I was about to call it a wrap on this set of shots, I had an idea. \"Ladies, I just had an idea; take five; I've got to go grab a ladder\"; and I set the camera on the table and took off into the deep recesses of the warehouse, hoping that I did have a tall ladder.\n\nThe girls were standing by the table, drinking water and giggling little-girl giggles. They watched with amusement as I drug the 12-foot ladder over to the set; bigger than I wanted, but it would do. Setting it up and positioning it roughly where I thought I wanted it, I explained my idea to the girls. \"On those last shots, which by the way did have me a bit hot and bothered, I loved the way her hair laid on the car, so I thought I would like to try a shot with her laying back on the hood with her hair splayed out and I'll shoot it from above. It probably won't make it on the calendar, but I think it'll be a sexy portrait shot; what do you think?\"\n\n\"I think it sounds great,\" answered Britt. \"It'll be like she's lying in bed but on a car hood instead. I think it could look sexy as hell.\" \n\nI glanced at Kate who stared back at me with eyes glistening. \n\n\"Alright, let's do these and we'll move onto the next suit. Britt baby, I'll go up and let you know how her hair looks, okay?\"\n\nI climbed the ladder, cussing my choice of footwear. I got to the top and glanced down; I was clearly in the wrong spot. Britt didn't have her hair situated, but I knew it was going to be a nice shot. I cussed under my breath as I carefully made my way back down. I moved the ladder till it almost straddled the car and realized the lights were now wrong because the ladder was going to throw shadows across the shot. 'Shit,' I said to myself, 'how do I do this?' Then it dawned on me; I had a large ring light upstairs that I didn't use very often; maybe that will work. I glanced over at the girls, Kate now looking beautiful, but a bit uncomfortable, laying on the hood. \"Hold that pose; I'll be right back,\" and then sprinted across the warehouse and up the stairs in search of the light. The girls looked at each other, wondering what the hell I was up to.",
        "I finally found the light and scurried back to find the girls feigning sleep, Kate snoring loudly on her back, Britt in the passenger seat. \"Ha ha, funny; trust me; this shot will be worth it.\" The girls giggled as I got the light set up on the camera. I checked the ladder position one more time and made the precarious ascent once more. I leaned over the top and saw the shot I envisioned. \"Okay baby, spread out her hair a bit more on the right there and I want to see a little more of the hood through her hair down a little lower edge there...okay that looks perfect. Let's see what we've got.\" I took a shot and looked at it on the camera, excited by the shot. \n\n\"Okay, lover, er Kate, look right into the camera and I want to see some different expressions; okay?\"\n\nThe expression on her face was nearly enough to drag me off my perch and make love to her on the uncomfortable British import. I gathered myself up and began snapping shots, bracketing the first one and then concentrating on her eyes as she shifted from lovely to lustful. Her deep brown eyes expressed her desires and it was taking its toll on me, my dick trying to push me backwards off the ladder. I stopped for a second to reposition myself and had another epiphany; dare I ask? I'd made love to this beautiful creature just hours ago, but somehow, in this setting, I was a little apprehensive to make this request.\n\n\"Uh, Kate...uh...do you think I could ask you to take your top off?\"\n\nHer eyes grew big and her smile even bigger. Without a word, she lifted her head and said something to Britt who came over and reached behind her to untie the tiny top. Kate laid her head back down and Britt repositioned her hair. Looking up at me, she smiled and winked and then morphed into the wanton sex goddess I saw earlier. Her nipples stood erect on her ample breasts. She was beautiful, but it's was her eyes that said it all; it made me shiver; here was a Kate I hadn't been introduced to until now. I squeezed off a couple dozen more shots and then had to get off the ladder, my calves quivering from being perched like a bird, barefoot on the ladder and my cock throbbing.\n\nBritt reached up for my camera as I made my way to the bottom. She gave me a kiss on the cheek and a hug as we made our way to the work table. \"So how did they turn out?\" she asked as I took the ring light off.\n\nI wrapped an arm around Kate and pulled her to my side to look at the shots; \"they'll look better on the big screen, but I think you'll get the idea.\" They both gasped at the first shot and were dead-silent, only gasping again as the first topless shot came up. Neither spoke until I had scrolled through them all; \"My god Kate, you're fucking gorgeous,\" said her roommate. I glanced down at the little one, nestled under my arm, her head against my chest. Big tears ran down her cheeks as she bit her lip. \n\n\"Oh baby,\" I said, wrapping my other arm around her; \"what's wrong, don't you like the pictures?\"\n\nShe looked up at me and then over at a concerned Britt...\"didn't know,\" she sniffled.\n\n\"Didn't know what?\" I queried.\n\n\"Didn't know you were this beautiful?\" Britt asked, holding the last image up to her again.\n\nKate nodded in the affirmative against my chest, hugging me tighter. I kissed the top of her head, returning the embrace. \"Oh sweetie,\" said Britt, \"we've always known how beautiful you are and Gina and I have told you that over and over. I guess maybe it took George to bring it out of you and make you look at the real you. He does seem to have that way with women.\" She smiled and kissed my cheek as I blushed and teared up a little.\n\nShe held on a little longer and then said, \"I'm sorry I lost it there. I've just never felt like that, like when I was laying there and looking up a beautiful man who was looking down at me with a look that I'd never seen before. I thought making love this morning was the most incredible thing that had ever happened to me, but just now, I felt....I don't know, I can't explain it, I just felt so different, so complete. I don't know what else to say except I love you both so much; more than I can ever express.\" \n\nWith that, everyone was crying. I finally got it together and said, \"well, let's take a little break, get a little something to eat and then we'll take a look at the other suit and see if we think we can improve on what we've already shot.\"\n\nThey both nodded in agreement and we walked with our arms around each other, me in the middle. Kate was still topless and pulled my hand to cover her right breast and held it tight. The girls decided that they would make some salads and it dawned on me that I'd left the memory card in the camera, so I hustled back out and told the girls that I was going to look at the shots on the computer and to shout when they had the salads put together. \n\nI was engrossed in the shots when I heard the girls coming up the stairs with lunch. \"We wanted to see the shots, so we brought lunch to you. Hope you wanted iced tea,\" said my blonde love. \n\n\"Thanks, that's great; pull up a seat.\" Kate had pulled a t-shirt on and gave me a little kiss before she sat down on one side, with Britt on the other side. I started at the beginning and the girls critiqued the shots, while I just sat back and listened. It was interesting to hear their comments and you could see the progression of Kate's comfort level as we went along. We had about finished our salads when we came to the ladder shots. Again, the silence was deafening as I slowly scrolled through the shots, taking my cues on when to move along by the hands that gripped my thighs. Finally reaching the last shot, I left that shot on the screen; Kate staring into our eyes, lust, love, passion, compassion; all in one look. I wrapped my arms around both their shoulders and kissed the tops of their heads; \"Well, we gave the publisher a couple different choices on swimsuits on the other cars, so maybe we better go ahead and at least do the blue one, okay?\"\n\nBoth girls nodded in acknowledgement and gathered up the dishes and headed downstairs. I was still a bit confused and maybe a little concerned at the lack of comment on the ladder shots as I sat there, mesmerized by her hypnotic gaze. Figuring the girls would soon be waiting on me; I grabbed another SD card and headed downstairs. Instead of heading straight back to the set, I detoured to the front door and cautiously opened it enough to peek in. The girls were locked in a passionate embrace, laying on the couch, grinding and kissing, mumblings of 'love you', 'so sexy', 'fuckin' hot' and so on. I quietly closed the door, readjusted my cock and then softly crept halfway back up the stairs, turned and then stomped my way back down, making as much noise as I could and then yelled over my shoulder as I turned toward the set, \"C'mon ladies, we don't have all day,\" smiling a stupid grin.\n\n** 20 minutes later**\n\nMy girls came hustling out the front door, Britt in the lead, still dressed in her shorts and crop top. Kate followed up a close second, handicapped by the extreme high-heels and dressed only in the tiny blue bikini, long black hair flowing close behind. I had moved the ladder out of the way and this shoot went much quicker as our model knew the routine and was much more comfortable. She even slipped in a couple R-rated poses, exposing a nipple, or a little too much butt crack. Her smile was infectious and I pretty much gave up on getting much in the way of serious or sultry shots. \n\nWhen I decided that we had enough good material to choose from, I called it. Kate stood up and stretched, reaching for the roof. I couldn't help but take one last candid shot. She smiled and stuck her tongue out at me, only to be captured digitally once again. \"Are we going to do the ladder thing again?\" she asked.\n\nCringing at the thought of hanging onto the ladder again I answered, \"I seriously doubt that we'll get any shots that compare to the first round, so no, I think we're done.\"\n\n\"I beg to differ\"; came the retort from behind me. I turned in time to see Britt pull the crop top off over her head, exposing the royal blue bikini top that was a favorite of hers; and mine for that matter as it barely contained her shapely c-cups. It dawned on me as she shimmied out of her running shorts to reveal the tiny bikini bottoms that disappeared between my favorite ass cheeks; she intended to do our 'private' shoot for this car.\n\nWe'd previously done this alone, with a remote to trigger the camera, although Gina and Kate knew about the shoots and for all I knew, had seen the pictures. \"Well,\" I mumbled and stumbled, \"I don't have the tripod set up and I'm not sure where I left the remote,\" trying to make excuses.\n\n\"No problem,\" said my confident sex-driven love; \"Kate and I already talked it over and she'll be the photographer, okay?\"\n\nLike I had a choice, I nodded dumbly and handed the camera to Kate who was stripping out of what little she wore. Catching my questioning look, she answered, \"If you remember, you were naked when you first shot the three of us upstairs, so I thought it only appropriate that I return the favor,\" smiling big, her nipples stiff with excitement.\n\nBritt took my hand and pulled me over to the MG and we followed Kate's instructions. \"Okay George, lose the clothes. Let's see that gorgeous cock.\" Oddly apprehensive, I shucked the shorts and shirt, my erection beyond obvious. Kate giggled with delight as she fired off a shot.\n\n\"Okay, now Britt, bend over a little and put your hands on top of the windshield and George, baby, you snuggle up behind her and hug her tight.\" I did as I was told, my dick comfortably settled in between her warm thighs. Britt giggled and wiggled as Kate snapped off a couple shots. \"Okay, now George, slip your hands under her top and grab those titties.\" I gladly complied, pinching her nipples, getting a little moan in reply. A couple more exposures were taken; \"Okay Britt, honey, stay where you are and George, get on your knees and start pulling down her bottom.\" I caught the two winking at each other as I dropped to my knees and placed a kiss on each cheek, a flash telling me I got caught. \n\nI slowly drew the little bit of blue over her firm pumpkin-ass as the camera continued to fire. I had the little collection of string and fabric on the floor and Britt lifted one foot to get them out of the way. She spread her feet further apart and I looked over at our photographer for direction, only to find her with one hand buried in her own pussy. \"Oh,\" she said, startled that she got caught; \"You know what to do,\" she said, motioning with wet fingers. I smiled and then buried my face in heaven. Britt moaned in appreciation as my tongue had its way with her. \n\nI heard the shutter clack; Kate was right next to me. I felt damp fingers on my cheek as Kate pried Britt's ass cheek out, sneaking a peek at my feasting, snapping obscene close-ups. Britt groaned deeper, writhing against my face and my cock grew harder at the thought of the upcoming slide show.\n\n\"Okay, you can come up for air now baby,\" Kate said to me, her hand on my shoulder, and her head next to mine. I turned to look at her only to be kissed hard, her tongue gathering all of Britt's juices she could find. Breathing hard she broke the kiss, her eyes on fire. She quickly stood, trying to regain her stature as the photographer. Problem was, this put her bare pussy right at my tongue level and I really had no option but to take a quick swipe with my tongue. \n\nLittle Kate squealed and jumped back and Britt laughed, having caught the entire scene. \"Okay,\" said the flustered photog. \"Okay, umm Britt, how about your sit on the rear fender, just behind the driver's seat...okay, can you lean back a little and put your hand on the passenger seat back...no, that's too far back, try the driver's seat.\" Britt twisted around, her bare ass squeaking on the polished fender. \"Crap, that won't work; the car's to short to get you at the right level.\"\n\n\"The right level?\" Britt asked, knowing full well what her friend had in mind, but wanting to hear Kate say it. \n\nKate realized that Britt was trying to embarrass her, so she just went ahead and said it, like it was no big deal; \"I want a shot of George fucking you, but I don't want to break his back. I may have to have him just bend you over like before and fuck you doggie; I don't know,\" she said in frustration.\n\nBritt smiled at her and said, \"I have an idea,\" and then went around to the other side of the car and sat on the back fender and laid back, her long lean body across the car, behind the seat backs. She reached back and pulled off the tiny top, freeing her beautiful breasts and then scooted back a bit more till her head hung just over the opposite fender.\n\nLooking up at me, upside down, she said, \"Okay baby, come fuck my face and you can lean down and finger my pussy.\"\n\nThat sounded like a hell of an idea as a drop of pre-cum threatened to drip on the painted floor. Kate snapped of a couple quick shots of the blonde Amazon sprawled across the car. I stepped up and straddled her head, my cock bobbing above her. The sound of the shutter told me that Kate was right behind me, and I looked back to see her on her knees shooting between my legs. I was impressed as I felt Britt reach up and pull my cock to her, her tongue reaching to lick the droplet off the tip. The camera fired again and my cock throbbed as I envisioned the shot. \n\nI felt Kate's hand on my back, encouraging me to lean down and forward. Wanting to be the cooperative model, I leaned in, running my hands down Britt's sides as she took my cock into her mouth, trying to swallow my length. I held myself up with my left hand on the back of the passenger seat, leaving my right hand to pleasure my girl. Her legs were spread invitingly as I ran my hand flat over her slick wetness. She moaned on my cock as I spread her pussy lips with my fingers, exposing her steamy core, her clit protruding proudly. I heard the shutter release again and looked up to see Kate focused in close, bracketing my hand and her open snatch. \n\nIn my mind, we had just stepped from erotic art to, well, just full-on porn, and it somewhat amazed me that Kate; the one of the three that I considered the most reserved, would turn out to be a closet pornographer. Kate caught me looking and I could see the lust in her eyes. She looked back at my hand spreading her girlfriend's pussy wide and then back at me; \"finger her pussy baby...Britt loves to be finger-fucked.\"\n\nI felt Britt respond to Kate's command, sucking me harder and her own fingers trying to find my ass hole. I obliged, my eyes on Kate as I put two, then three fingers deep inside my lover's hot pussy. I pumped in and out and let my thumb gently play with her stiff clit. Britt groaned at the sensation, both her hands now spreading my ass, driving my cock down her throat. Kate managed to take a few more shots one-handed while she other tormented her own wet sex.\n\nMy back began to feel the strain and I really wanted to slip my stiff cock into Britt's welcoming cunt, when Kate called for a change. \"Okay, that's enough of that,\" as she pulled my hand out of Britt's pussy and then proceeded to clean it off, sucking my fingers, running her tongue all around, not missing a single drop. Britt moaned in frustration as she was left empty. She pushed up on my hips, her lips like a squeegee, until I popped free. I straightened up and bent down to give her an inverted kiss and then helped her spin and dismount. Britt stretched, trying to get herself re-aligned as I did the same, rubbing against each other like a couple cats rubbing up against the couch. Kate joined us, hugging us both, her hands busy on both our sex.\n\nBritt and I leaned over the top of Kate, kissing one another and capturing her between us. Hands and legs and tits rubbed against one another; Kate alternated, kissing my chest and turning to suck on Britt's tits. The end was near as all our breathing came faster; \"Wait,\" said the little pornographer, \"I've got an idea;\" and she took both our hands and led us back around to the passenger side. She opened the door and sat down, her legs still outside of the car. \"Okay baby,\" she said, taking Britt by the hips and turning her back to her, her butt just above Kate's head. Guiding her back she said, \"Here, put your left foot up here,\" guiding it until she had her foot on the running board and her right foot was still on the floor. Kate spread her girl's legs as wide as the door would allow and Britt leaned back a bit, her right hand on the passenger seat back , her left on the top of the wind screen. Kate's hands ran up and down the inside of Britt's legs before slipping a couple fingers in the blonde's anxious pussy. \n\nI didn't need any blueprints to tell me where I was supposed to be and I stepped in between Britt's legs and ran my hands over her, teasing her breasts, massaging her shoulders. I leaned in to kiss her when I felt two small hands wrap around my cock, stroking me, playing with my balls. I released her from my kiss and looked into her eyes, now that wanton shade of blue-black. I pulled my hips back, only to feel a set of warm lips wrapped around my cock, her tongue probing at the little pee hole. Britt's eyes squinted as she heard the soft slurping coming from below. \n\nI held Britt by the butt as she reached back with her right hand and grabbed a handful of black hair; \"Katie, quit fucking around and give me his cock!\" she commanded. \n\nThe little one giggled as she gave one last draw on my cock. With my cock in one hand she began rubbing it up and down Britt's soaked slit, spreading her juices, poking her clit with me. I felt Kate's other hand brush against mine, her destination clearly being Britt's tight ass. Britt's eyes grew big as she felt me reposition my hands and spread her ass cheeks wide, helping the little one on her quest. Kate meanwhile continued to rub my cock between her roommate's swollen inner lips and now anointed the pulsating pucker of Britt's ass hole with her excretions. \n\nBritt glared at me in frustration, willing me to do something; knowing we were both under little Kate's control. \"God damn it Kate, give me his cock now! Fuck me with his big cock like I fuck you with that big black dildo of yours.\"\n\nI felt the tip of my cock being guided cautiously between her pussy lips. We stared at each other and could sense the satisfaction Kate was feeling, being in control. \"How about you George?\" she queried, slipping me a little deeper into through Heaven's gate; \"Do you want me to stick your big, beautiful cock into your girlfriend's hot, wet pussy?\" Britt shivered at the words and my cock throbbed and Kate squeezed it tighter. I had almost had enough of the playing and I was going to lose it soon. \n\nI looked deep into Britt's eyes, \"I want you to stick my cock in her cunt and then you finger her ass and we are going to fuck her until she cums and I fill her with my seed.\" Both women gasped as I felt my cock slip deeper, hugged by her tight pussy. \"Then,\" I continued, \"you're going to eat our cum out of her pussy while I fuck you until you can't take it anymore!\"\n\n\"FUCK,\" we all exclaimed as Kate drove my cock into Britt's cunt, closely followed by two fingers in her ass that I could feel through the thin wall separating us. \n\n\"Ah shit...fuck me...fuck me you little bitch,\" Britt cried as we both abused our favorite blonde. I managed to keep up a respectable pace, even with the feeling of Kate's fingers next door in Britt's ass and her other hand now palming my balls. Britt's arms soon gave out and were wrapped around my neck as I held her up by the ass, with a little assist from Kate. I was going to have a hell of a hickey on my neck as Britt was latched on. \n\nJust as I thought my legs would give out, I felt my balls tighten and Britt pulled off my shoulder and looked at me through wild black eyes. We were both right there on the precipice, ready to fall off the edge of the earth, when it hit us; and like a seasoned porn star, Kate was ready for us. As I jettisoned my load, the little one squeezed my nuts and pushed me upwards, driving my cock as deep as humanly possible. At the same time; her fingers, deeply ensconced in Britt's ass wiggled, her finger tips fluttering deep inside her best friend. ",
        "\"Jesus,\" Britt screamed, her cries careening off the warehouse walls. Her pussy walls rippled up and down my cock, milking me for all I had, my cock throbbed and pumped my scrotum dry. Britt's whole body vibrated, her pussy convulsing involuntarily. I managed to remain upright, while Kate held station, one hand under my groin and the other planted in Britt's butt. \n\nAfter a couple minutes, my head had quit spinning and my equilibrium was back to normal. Sweat pooled between Britt and I as we were still hugging, holding each other upright. We traded a soft kiss and moved to separate when we heard Kate ask; \"Ready?\"\n\nWe stared at each other in disbelief, remembering the promise/threat I made to get us to this point. I had serious doubts that I would be able to hold up my end of the deal after the way I had just unloaded deep inside my love. Kate began to make her move, slowly allowing my cock to retreat and I could feel her fingers in Britt's ass following a parallel path. Her timing was perfect as her hand was free to slide up and cup Britt's sex as soon as my spent cock audibly popped out. \n\nKate began to lie back, scooting her ass out, her back on the seat, feet on the warehouse floor. \"C'mere baby,\" she coaxed, drawing Britt back into the car, lining her up to crouch over the little one's face. Again, I figured out my role, and the sight of Britt suspending her full pussy over Kate's open mouth was enough to keep my cock interested. I dropped to my knees and rubbed my cock on her freshly shaved snatch and like sprinters out of the blocks, Kate uncovered Britt's pussy, releasing the flood into her mouth as I filled her pussy in one fell swoop. Brit inhaled deep as she watched my robust cock disappear in the tiny orifice. Kate couldn't cry out and swallow at the same time and I swear my cock got bigger watching my and Britt's cum cocktail now drizzling out of her reddened pussy lips, falling into the open mouth of this sex-crazed baby bird. \n\nI held Kate's girlish hips and drove like a man possessed as she pulled Britt down to sit on her face, sucking every last drop out of Britt's reawakened pussy which she now ground on Kate's face, smothering the young woman. Unbelievably, I felt a second round loading in the breeches, ready for a final assault.\n\n\"Oh fuck Kate... here it comes baby!\" I choked out, breathing hard.\n\nI couldn't make eye contact, her face buried under sweet pussy and ass; I moved my eyes up over a taut, rippling belly, firm breasts with stiff nipples and a beautiful scrunched up face, racked in orgasm, mouthing; \"I love you.\" \n\nI couldn't even whisper a return as Kate's strangling sex drew me in and we detonated one another, imploding, racked by orgasmic explosions. Kate struggled to catch her breath, trying to push Britt back as I slid my hands under Britt's thighs and lifted her enough to give Kate some relief. \n\nBritt recouped enough to slide on back and lean against the driver's door, accidently leaning on the horn button and scaring us all until we were laughing out loud. My knees were protesting mightily so I regrettably retreated, but not before running my tongue up into her satisfied snatch, collecting some of our custom mix and sharing it with her. I kissed her, her eyes bugged out in disbelief of what I had just done, moaning and savoring the taste of our love. \n\nI broke our kiss, having to stand as there was nowhere to lie, except on top of her. I looked down and took a picture with my mind, knowing that I would never get away with taking a real photograph. Before me lay two beautiful women, wasted and worn out, their legs splayed obscenely, pussies red from over-use and contented smiles on their faces. \n\nI managed to shuffle back over to the work table and gathered up some bottled water and took them back to the car. The girls were where I left them, but showing signs of life. Britt's long legs were now comfortably stretched out over Kate's shoulders and she lovingly petted what she could reach. I handed them each an open bottle which they drained without taking a breath, sighing with relief. Kate looked up at me, her hands still running up and down Britt's smooth gams and started to say something, only pulling up short, pursing her lips.\n\nI raised an eyebrow and asked, \"You were going to say something?\"\n\n\"I guess not;\" her fingers now resting on the intruding appendages. \"Like before, I guess I'm just speechless, which baby doll here,\" caressing the legs again, \"will tell you is not normal.\"\n\n\"That's for sure,\" the blonde responded, bending a knee and trying to play with a nipple with her toes; \"but I understand. Sometimes things happen that are just are so far beyond any expectations that we can't begin to verbalize them.\"\n\n'Pretty profound' I thought to myself for a blonde sex-kitten; not your typical stereotype. I reached out to help Kate stand up, but not without a little protest. We hugged and kissed again before we reached in to help our lover out of the cramped car. We all hugged and kissed, but were too worn out to get to enthusiastic about it. We wandered about the set, picking up scattered clothes and the camera and shut down the lights and strolled arm-in-arm-in-arm back to the house, another successful photo shoot in the books."
    ],
    "authorname": "GeorgeDaBuilder",
    "tags": [
        "model",
        "bikini",
        "threesome",
        "anal",
        "fingering"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/everybody-needs-a-hobby-ch-13"
}