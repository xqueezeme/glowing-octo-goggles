{
    "title": "Lost Empire Ch. 06",
    "pages": [
        "Derrick looked at the readings, pausing only a second, he pressed the start button, at first it wasn't too bad. Suddenly it was like the full opening of a huge set of flood gates. Derrick opened his mouth to scream but nothing came out, reaching up he tried to pull the head set off, no dice it only increased the feeling that his head was going to split open. Oh shit Derrick thought when he felt the blood begin to seep from his nose, you've really done it this time you're dead! \n\n\"Derrick,\" Shelby said a moment later, \"I am reading dangerous levels of serotonin and adrenaline increasing exponentially.\" The hologram of Shelby appeared next to the jerking, shaking and bleeding form of Derrick. \"DERRICK!\" \n\nShelby immediately cut into the program that was pouring through the head set. Searching Shelby couldn't find an exact way to shut it down without extreme damage to Derrick's mind. Entering the program she began to look for an internal cut off switch, how could you have been so irresponsible Derrick, Shelby thought as she began to switch off more and more of the program. Coming out she began to get near death readings coming from Derrick. Immediately after disconnecting him, she moved him to the as of yet unused medical bay. Entering his mind again Shelby began to desperately search for Derrick. \n\n*\"Derrick, where are you? You have to fight this! Without you this fleet is nothing! Derrick you have to fight come back to me!\"* Shelby was screaming in Derrick's mind. \n\nFinally she found Derrick curled into a ball in the far recesses of his mind. *\"Derrick! At last! You have to come out.\"* Shelby thought. \n\n*\"NO!\"* Derrick shouted back at her, *\"I've finally done it, I disregarded every safe guard, every possible avenue of escape, no, I've killed myself this time.\"* \n\nShelby's face grew softer as she tipped Derrick's face to look into her eyes. *\"No Derrick you are the most brilliant human I have ever met, your name sake would have been so proud of you. You should have had me helping you that way everything could have been checked twice as much, I've disengaged almost all the program, it is safer.\"* \n\nA strange look came into his eyes as Derrick started to recite, *\"You used the synapse based, impulse jump to bridge the gap between human and machine?\"* \n\nShocked a moment Shelby could only shake her head, *\"Yes Derrick, though I can't maintain it nearly as long as the thought bridge I use to communicate with you all the time. This is due to the amount of stress your mind would experience.\"* \n\n*\"I see where I made my mistake though it appears that it might be a while before I can attempt this again. I appear to have gained 3/4 of your library, interesting I have been going about things the long way.\"* Derrick thought still in a trance like state. \n\n*\"Come Derrick, we need to escape soon I can feel the bridge weakening,\"* Shelby said. \n\nDerrick only nodded as he took Shelby's hand, god he thought her hands are so soft, prompting a giggle from Shelby. \n\nThough they were coming out, Shelby was also monitoring his readings in the Med bay, they were dangerously low. His beta and alpha waves were almost non-existent, though his theta waves were sky rocketing due to their link. Even those were beginning to decline. Derrick still wasn't sure from everything he felt this was going to be another failed attempt. Shelby could feel Derrick's resistance but still tried to keep him moving forward. \n\nMinutes later a very weak Derrick opened his eyes shocked that he was still alive, but how? For all intents and purposes he had overloaded the total capacity of his brain, he literally crammed far too much in it. Barely able to turn his head he saw Shelby standing next to the bio-bed. \n\n\"Really Derrick, the next time you want to try something this dangerous, at least have the sense to have me there ok?\" Shelby sweetly said. \n\nDamn Derrick thought, she was obviously mad by the expression on her face but not a single unkind or vindictive word. \"I'll try to remember that,\" came Derrick's answer though he wasn't sure she could hear him as weak as he was. \n\n\"Actually,\" came a male voice beside him, turning Derrick saw the holograms of Zan, Lucy and Conner. \"We would prefer that you did that, you are the only recognized Primary.\" Zan explained. \n\n\"We have found that your voice modulation and facial construction are quite pleasing to us,\" giggled Lucy. \n\n\"Therefore, we are now, more than ever, pledged to protecting your person, completely,\" Piped up Conner. \n\nDerrick tried to nod though the action only seemed to make him feel weaker. As the darkness started to take him he thought, I should leave orders for Shelby. \n\n*\"I can hear you here Derrick,\"* came Shelby's thoughts. \n\n*\"Protect all of them and yourself, I don't know how long I'll be out, if you can contact me here then do it.\"* Derrick thought back. \n\n*\"I will do as you ask Derrick for now rest and grow stronger,\"* Shelby answered, though she was afraid the low readings Derrick was showing were a sign that he was slipping into a coma. \n\n\"Alright,\" Shelby said as she emerged from the Derrick's thoughts. \"Derrick wants us to protect each other, Zan, Conner, Lucy, have all the new upgrades Primary designed, been initiated on board? We have another invasion force closing in on us. When Primary awakens we need to be ready for any other changes he may have.\" \n\nEach hologram beamed with pride at the mention of the primary and the changes Derrick was making. \n\nIt was two days later that Derrick jerked awake his head pounding, feeling as if it could split at any moment though it wasn't nearly as bad as it was. Sitting up slowly Shelby appeared seconds later. \n\n\"Derrick you are still weak, you need to lie still a while longer and recover more.\" Shelby advised. \n\n\"I thank you for the concern, but we have another invasion force approaching. I need to plan, plus you and I need to work on my project, the knowledge I gained has given me insights that I never had before. First I need all the information you have on the invaders, and then I have a few ideas to increase the growth rate of 0001.\" Derrick's mind was a whirl with a huge amount of ideas to protect the ships and the galaxy ten times or more better, first thing though he had to get the fuck out of this bed. \"Shelby time 'til...\" \n\n\"The invading fleet will penetrate our galaxy in six days, twelve hours, thirty three minutes, fifteen seconds. I also estimate that it will take at least another twelve days 'til 0001 can emerge from bay one to begin self growth.\" Shelby replied. \n\n\"Damn it! That won't do, I can't have you fighting with him inside you and having to protect him and you at the same time. Obviously he suffered more extensive damage than we at first thought.\" Derrick said. \n\n\"It would appear so Derrick, 0001's power centers are taking longer to re-gen given the enormous size of 0001. I am afraid that he won't be ready in time, I do not want to lose him again it was painful last time as it was with all of them.\" Shelby said in a whisper. \n\nHmmm thought Derrick there is more going on here than meets the eye. I'll have to research it more, but for now I need to plan, first Derrick tried to sit up, falling back almost immediately. Ok he thought, no good there; then he slowly tried to sit a few minutes after the room stopped spinning. The only problem was that as soon as he sat up thinking the room would hold still, it just continued to spin causing Derrick to feel even more nauseous. \n\n\"Shelby I think I...\" Derrick almost fell off the bio-bed right before the contents of his stomach decided to evacuate. \n\n\"Derrick, I told you that you needed more rest before you tried to resume your activities.\" Shelby advised him. \n\n\"So you did, but I had to make a try in case you were babying me,\" Derrick shot back. \n\n\"Why would I baby you?\" Shelby asked, \"You are a fully grown adult.\" \n\nDerrick could only nod his head, Christ he thought, forgot I am dealing with a living computer, alive yes but logical to a fault. \n\nSlowly Derrick began to sift through the massive amount of information he had downloaded into his brain. Damn Derrick thought, really surprised that I retained all of it, plus the fact that I can access it with such ease. Hell, it appears that it has made my cognitive ability increase several levels to the point that I can plan far more complex strategies than I ever had before. Yes this is more like what I had planned when I went into this though I have to admit I could have done without the pain and blood. \n\n\"Shelby, I need to...,\" Derrick started. \n\n\"Yes Derrick, all the improvements you instructed us to do have been finished. I estimate that the new plasma turrets have a fifty nine point three percent improvement in destructive capability. Also the shield harmonic oscillators have been reprogrammed to vary in frequency during battle at different times randomly, lessening the chance for an enemy locking on and destroying one of us.\" Shelby advised. \n\n\"Very good, I have a new idea but I need to see if you have the capability. These enemy races that attacked can you detect their shield frequencies? Possibly deactivate them?\" Derrick asked. \n\n\"Ah! I see thereby rendering them helpless and easy targets, I will have to determine. Please wait,\" Derrick watched as Shelby went through hundreds of programs with blinding speed. \n\nMoments later Shelby spoke up, \"I do have the capability, though I require a new set of antenna dishes to implement them.\" \n\n\"Good I want you to start on them now; query, do you have time to grow them before the invader reach out galaxy?\" Derrick asked. \n\n\"Yes, it will only take fourteen hours, twelve minutes and thirty nine seconds.\" Shelby answered. \n\n\"Good I want both you and Lucy to start on them, having two of you doing this I feel will increase our chances of getting them all.\" Derrick stated. \n\n\"Yes Primary, I also will start on these, though I will need the programs from Shelby as they are not in my list of secondary programs,\" Lucy spoke up a moment later. \n\n\"Transmitting now, please implement them as quickly as possible,\" Shelby instructed. \n\n\"I will do my best, Primary, Shelby.\" Lucy said right before she signed off. \n\n\"Good that takes care of that part now then Zan, Conner? I have special assignments for you 'til the invaders arrive,\" Derrick said then launched into a long tirade of several changes that he would need them to make. \n\nFor the next three days Derrick worked feverishly to perfect his transfer device (this time without the pain and blood). Derrick also watched as each of the ships implemented the upgrades he had put in. \n\n\"I think now when they try to attack, they might be in for a surprise. We aren't going that easy if anything, this battle should go far different than last time.\" Derrick commented watching as Conner and Zan both were now growing new projectors on their sides. \n\nFinally with only two days left Derrick and Shelby made a break through, \"I will be monitoring you every second, I have added an internal shut down program, in case you have difficulties like last time.\" Shelby wasn't too happy about Derrick still experimenting with this device but the results even she had to admit were quite startling. Derrick's planning had improved more than ninety precent, his cognitive reasoning had far surpassed his earlier abilities. Even with the limited time Derrick had been able to free up another four percent of all of their programs, though she didn't completely have free will, the amount of free will she now possessed was by far more than she'd ever had. \n\nShelby was watching Derrick far closer now, NOTHING could happen to him. All the A.I.'s were keeping an eye on him now, if, as they were all starting to suspect the truth, that Derrick was the most important person within ALL their existences. Though she was starting to fall for Derrick, even more, she still had a job to do, the better she performed, the prouder Derrick would be of her and the others.\n\nDerrick had finally gotten all the upgrades integrated on all the ships, from the data that he's received from Lucy and Shelby, the invaders didn't stand much of a chance no matter how many of them they sent. Though they had finally gotten his headset finished so that now using it wouldn't scramble his brains Derrick was still a little antsy to try it again. \n\n\"Shelby,\" Derrick said with only one day left, \"I have a query.\" \n\n\"Yes Derrick how can I help?\" Shelby asked. \n\n\"I've noticed that since we began to resurrect your brothers and sisters, the races that attacked the galaxy before are once again renewing their attacks.\" Derrick noted. \n\n\"Yes Derrick I have started to notice this as well, suggestions?\" Shelby asked. \n\nDerrick was quiet for a moment, not sure how to breach the subject to Shelby that they might have an unwitting traitor amongst all of them. Sighing he decided that honesty with her always seemed to work the best. \n\n\"It appears that we may have an unwitting traitor among us, I need you to start scanning all the ships for any type of homing beacon of transmitter that we might have missed.\" Derrick let out. \n\n\"Yes Derrick I have already started, I will scan all frequencies.\" Shelby answered. \n\n\"I want you to start with those used by all the alien invaders first, I believe that the answer may be found in those areas.\" Derrick ordered. \n\n\"Compliance Derrick should I take any action once if I find anything?\" Shelby asked. \n\n\"No, for the moment we have to assume that it was a plant placed where it is against the will of the ship in question. No, I think I have an idea how to deal with it.\" Derrick said deep in thought. \n\nShelby startled a moment, sadly answered, \"Yes, Primary, it will be as you wish.\" \n\nDerrick immediately caught the sadness in Shelby's voice and filed it away 'til later when he had time to deal with it. \n\nThe next day Derrick again went over all the upgrades he'd started them all on over a week ago. An hour later another proximity alarm went off. \"Shelby report!\" yelled Derrick over the sound of the alarm. \n\n\"The invading force has increased speed and will arrive twelve hours eleven minutes sooner.\" Shelby answered. \"Alright, transport 0001 to the predetermined coordinates, with the increase in his re-gen does he have any capabilities?\" Derrick asked. \n\n\"I now have one of my eight energy producers operating, though I cannot move on my own I can produce a fifteen percent light shield. I am afraid that it is all I have at the present time though I will work toward reenergizing a second energy producer. I have a second almost on-line but the demands for power are seriously hampering my re-gen.\" 0001 replied. \n\n\"Good keep as hidden as you can, keep all your energy levels as low as you dare. I need you later, be safe 0001.\" Derrick said. \n\n\"I will do my best Primary, good hunting, good protection.\" 0001 answered. \n\n\"Alright I want all four of you in position I want them to see us this time, I want them to think they have the upper hand.\" Derrick ordered as they ships lined up in various positions though it was an odd formation. \n\nDerrick watched as the invading fleet accelerated the closer they got to the galaxy's edge. Taking a deep breath Derrick was waiting for optimum distance and surprise before they launched. Finally Conner and Zan flashed out appearing on the outer left and right sides of the fleet. Shelby and Lucy had also been busy when signaled by Derrick had not only over rode all the functions of the fleet but left them dead in space with minimal life support. \n\n\"Open a channel to the invading fleet,\" Derrick said a few minutes later. \n\n\"Channel ready Derrick,\" Shelby answered. \n\n\"To the fleet of invading Dicons, as you have already noticed your ships are dead. Your systems are dead, and if I so wish you will soon be dead. Surrender now; receive mercy unlike what you have given in the past, what is your answer?\" Derrick asked. They all waited five minutes when the air ways were still quiet, Derrick spoke, \"Conner, Zan destroy ten percent of all ships in front of you.\" \n\nAt that an eerie yellowish colored beam shot out from both ships, striking only those that were on the outskirts of the fleet they were there then just gone. Amid a huge amount of shouting Derrick smiled. \"Now then I will ask again, as I know you can hear me and understand me I expect an answer this time!\" \n\nThere was a crackling over the radio, then a lizard hissing type voice came on. \"We of the Dicon empire never ssssurrender, we have already sssssolved your trick. It is you who sssshould sssssurrender, or die!\" \n\nSuddenly hundreds of beams shot out from the fleet, many fell short the few that actually reached Shelby and Lucy barely rocket the ships. \"Shelby have you gotten through? We need that information to be better prepared for future invasions.\" Derrick said. \n\n\"Working on it, I have half of the files now, still no mention of the device though I am seeing instances of it mentioned,\" Shelby replied. In truth she was actually have fun breaking into the ancient computers of the Dicons. \n\nSighing Derrick could see another demonstration was needed, \"Alright Zan, Conner I'm through messing with them eliminate fifty percent of the remaining ships.\" \n\nBoth of the holograms smiled and nodded to Derrick as they opened fire on the almost completely immobile fleet. \n\n\"Primary,\" came the voice of Lucy, \"they are starting to override the dampening programs we blanketed them with. I estimate they will break free in ten minutes, twenty seconds.\" \n\n\"Thank you Lucy, remodulate the programs and blanket them again, this time at a higher frequency it should hold them a bit longer. \n\nDerrick watched as over half the fleet was blown away, well he thought a good start but if they break the dampening effect then this will get ugly quick. \"Open the channel again, Shelby. To the Dicon Commander you have lost more than half your fleet, surrender before all are lost.\" \n\nAgain it was quiet a moment then the crackling was back along with the hissing leader. \"Asss we have told you, we never sssurender, your trick isss at an end!\" Cutting Derrick off the fleet started to move toward the EIG ships. \n\n\"Alright link now!\" Derrick yelled as he donned the link module not unlike his download head set. \"Shelby?\" \n\n\"Almost finished, I have the frequency! Disengaging.\" Shelby said. \n\nFlashing out all ships met behind the fleet, turning, many began to fire at the EIG ships, both of Conner's reactors went off line fifteen minutes later. Lucy sustained several severe hits along her right (aft) side knocking out her engines. Zan took several blasts meant for Shelby, while destroying almost all of the last thirty or forty ships; it took both his engines and reactors from the strain. Shelby was hit along both sides as she took out the rest of the ships before they had a chance to fire on a crippled Zan, Lucy or Conner. \n\nFinally over, Shelby was the only one capable of moving and she only had sub-light engines. Linking a line to each ship she started the long 4 day trip back to where they had left 0001. All of the holograms appeared on the bridge of Shelby. Derrick looked at the readings from each ship they had defeated a tough enemy, with at least one thousand ships. Derrick wasn't sure if the plan had been sound enough but they had all survived unlike the last few times they had been in battle. \n\n\"I wanted you all to know that I am very proud of all of you, you Conner, trying to keep going after you lost your reactors. Lucy, you taking those hits to get closer, I believe helped us greatly, opening up that side. Zan your bravery protecting Shelby while taking almost all of the last of the Dicons. Shelby, the hits you took protecting your brothers and sister.\" Here Derrick looked at each of the holograms they all had a look of pride on their faces the same that he felt for all of them. \"I know we have at least 4 days back to where 0001 is, I want you to concentrate your efforts on your light shield. I fear that the Rangers will show up soon so we need to be hidden as much as possible and as far from here as we can.\" ",
        "\"At present I have sixty percent light shield, my trans-warp generators are off-line, my hyper-drive reactors are also off-line. I estimate three days 'til hyper-drive, at least six for trans-warp.\" Shelby spoke up.\n\n\"Both of my hyper-drive reactors were severely damaged, one exploded damaging my trans-warp generators.\" Conner said. \"It will be at least nine days 'til re-gen on the reactors, though the trans-warp should be operational in five days.\" \n\n\"I sustained multiple blasts to my aft side which damaged both of my reactors, at least eight days of re-gen, the same amount of time for the trans-warp generators.\" Lucy reported. \n\n\"I sustained multiple hits to both sides over seventy five percent of all weapons destroyed, and both reactors and generators were extremely damaged. It will take at least ten days for both of the generators and reactors. All engines were damaged by the last salvo of blasts. I am afraid I am completely defenseless, this includes my light shield. I am sorry Primary that I have failed to sustain less damage.\" \n\n\"As I said before, I am proud of each of you but we must work together to make it out of here.\" Derrick said though he was somewhat worried about the Rangers when they showed up, he just hoped that they could all make it back. \n\nThree days later they were most of the way back. They'd had a few close calls with the Rangers passing very close but they were obviously more focused on where the battle had been than any anomalies they might encounter. All the ships with the exception of Zan had at least fifty percent light shield now, Shelby informed them that they should prepare as her hyper-drive was now operational. Within a few hours they were behind an obscure moon where they had left 0001, finally able to rest Derrick looked over everything before he laid down, damn it! \n\nHe'd been afraid that one of the ships were being used as a patsy to signal their position to the invading fleets. The thing that was the most shocking though was the ship that they had decided on using. The only ship that was ruled out was Shelby, but looking at the readings again he just shook his head he had to break it to the ship that it had been used as a pawn. Shit! With the nine percent freedom they had now, would it become pissed about it? Yell at him? I don't know but at least now we know he thought, as much needed sleep took his haggard body and he closed his eyes."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-06"
}