{
    "title": "The Work Trip Pt. 02",
    "pages": [
        "\"Can I finish my pancakes first?\" I said, stuffing a forkful in my mouth and making a show of looking around the hotel restaurant.\n\n\"Way to make a girl feel wanted,\" Mina said. \"You just missed a golden opportunity to shove aside these dishes and take me right here on the table.\"\n\n\"Oh sure,\" I said. \"Because I was really hoping that this trip would end up with both of us arrested for indecent exposure.\"\n\nShe laughed. But beneath the laughter she seemed nervous and I realized she was probably worried she'd gone too far.\n\nI leaned forward and put my hand on top of hers. \"Joking aside,\" I said, \"I'm interested. But could we maybe talk about it someplace a little more private?\"\n\nShe looked around the room as if seeing it for the first time. There were a fair number of other guests around the restaurant. \"That's fair,\" she said. \"Want to come back to my room with me after breakfast?\"\n\n\"Sure thing,\" I said.\n\nWe kept the conversation casual after that while we finished eating. On the way out I grabbed a to go cup and filled it with coffee. I wanted to make sure I was wide awake for whatever happened next.\n\nMina led the way back to her room and let us both in. I'd never been inside her room before but I wasn't surprised to find it looked just like mine.\n\n\"Have a seat,\" said Mina.\n\nI was about to sit down but then I sipped the coffee I'd brought upstairs with me and couldn't help making a face as the bitter flavor hit my tongue.\n\n\"What's wrong?\" asked Mina.\n\n\"I forgot to add cream,\" I said.\n\n\"There's cream in the fridge,\" said Mina, waving her hand toward the kitchen.\n\nI walked over and opened the fridge. The cream would have been hard to miss. It was almost the only thing in the fridge, apart from some cans of pop.\n\n\"Is this all you've got?\" I couldn't help but ask.\n\n\"What do you mean?\" she said.\n\n\"Well what have you been eating?\" I asked.\n\n\"You've had dinner with me most nights,\" she said, with a puzzled look. \"You've seen me eat.\"\n\n\"Sure,\" I said, \"but what have you been doing for lunch?\n\nWe'd been taking it in turns to eat lunch during the day at work. Lunch was an hour long, but neither of us took that long away from the classroom. One of us would go to the staff lunchroom and eat while the other hung out in the classroom in case any of the trainees had questions or needed extra support with anything. Then we'd swap.\n\nThat gave us each only half an hour or so for lunch, which wasn't enough time to go out and get anything. The office was located on the outskirts of town with nothing nearby but industrial space and other office buildings. The closest food place was more than twenty minutes away in lunch time traffic.\n\nFortunately our company had put us up in long-term stay rooms at the hotel. The rooms had a decent kitchenette, including a full-sized fridge with a freezer. There was also an oven with a stovetop, and even a bunch of cooking utensils and dishes. I'd been making myself lunches at the hotel and bringing them to the office with me during the day. I'd assumed Mina had been doing the same but based on the contents of her fridge there was no way she was.\n\nIn response to my question she pointed at the freezer.\n\nI opened it up and saw a half dozen frozen meals. Cheap ones. The gross kind I used to eat sometimes as a broke undergrad student.\n\n\"Oh god, seriously?\" I asked. \"You know the company is giving us a per diem for food right? You could buy better groceries.\"\n\n\"I don't cook,\" she said, blushing.\n\n\"What?\" I said. \"Seriously?\"\n\nShe nodded. \"Brad cooks,\" she said. \"I do the dishes. That's always been our trade-off. He likes to cook and I hate it.\"\n\nStill looking in the fridge I pulled open the crisper, which was also empty. \"You don't even have any fruit,\" I said. \"You know that you don't have to cook fruit right?\"\n\n\"Shut up,\" she said, still blushing. She was trying to look stern but I could tell she was fighting to hide a smile.\n\n\"Okay,\" I said, \"change of plans for the day. I know you wanted to talk logistics, but we're going grocery shopping first. This travesty cannot stand.\" I gestured towards the frozen meals, shaking my head.\n\n\"Aww, you're going to buy me groceries?\" she said. \"You do care.\" She blinked theatrically and wiped an imaginary tear from her eye.\n\nI laughed and shook my head. \"The company's buying,\" I said. \"But if you tell me what you want to eat for lunches I'll find the ingredients. I'll even cook them for you.\"\n\n\"You're sweet,\" she said. \"You sure you want to go to that much trouble?\"\n\nI looked in her fridge once more and nodded. \"I can't send you back to Brad suffering from malnutrition,\" I said. \"Or scurvy,\" I added, pushing the crisper closed with my foot.\n\nShe laughed. \"I do eat veggies you know,\" she said. \"You've seen me eat them.\"\n\nI shook my head and patted her on the shoulder. \"I'm pretty sure those frozen meals counteract any good food you eat,\" I said. \"It's not a risk worth taking.\"\n\nShe rolled her eyes and swatted my hand away. But then she grabbed my hand, squeezed it and laughed again. \"I surrender,\" she said, picking up the car keys from the kitchen counter. \"Let's go.\"\n\nWe drove to the nearest grocery store. There was also a bookstore in the same plaza. Once Mina saw it, her eyes lit up. \"Ooh, can we go there first?\" she asked.\n\nI'm a bit of a book nerd, so she didn't have to twist my arm too hard on that one.\n\nWe spent a couple of hours in the bookstore, looking at books and talking about books. Part way through our time there the bookstore announced an impromptu scavenger hunt, with a prize for the first five people who finished it.\n\nMina got super into it, and swept me up along with her, so we ended up racing around the store looking for the clues. They were all literary themed, which was to be expected for a bookstore contest. Mina and I were pretty evenly matched when it came to solving the clues, but her love of mystery novels clinched it for us as she guessed a couple of references that I wouldn't have.\n\nNobody finished before us, so we were first and second place. We each got a $10 gift card, but I insisted she take both since without her I might not have won.\n\nShe used them to buy a little stuffed bear that was of all things, wearing a trench coat and a Sherlock Holmes hat. \"To commemorate our victory,\" she said with a grin.\n\nOn our way out of the store she bumped shoulders with me. \"Thanks,\" she said, still holding the bear.\n\n\"For what?\" I asked.\n\n\"For coming with me,\" she said. \"Brad's not a big book guy. He'll come to bookstores with me if I ask, but as much as he tries to hide it I can always tell he's not having fun while we're there. It's a nice change to go with someone that also likes books.\"\n\n\"Any time,\" I said.\n\nWe got groceries after that. At first she was more worried about how complicated things would be to cook and was focused on trying to pick easy things. I managed to convince her to pick out meals she wanted to eat and not worry about the cooking part.\n\nBy the time we got back to the hotel it was midafternoon and a light snow had started falling.\n\nI helped her carry the groceries inside. Once we were back in her room she caught a glimpse of herself in the mirror. \"Oh my god,\" she said, leaning in for a closer look.\n\n\"What?\" I said.\n\n\"You actually let me go out in public like this?\" she said. \"I'm a mess. I look like I rolled out of bed, threw on sweat pants and staggered outside.\"\n\n\"Is that not what you did?\" I said, teasing her.\n\n\"Don't make me throw an apple at you,\" she said, brandishing the grocery bag she was holding.\n\n\"Oh stop,\" I said. \"You look great.\" As far as I was concerned she did. Maybe a little more casual than usual, but still cute.\n\nShe blushed. Putting down the bag she walked over to bump shoulders with me again. \"Thanks. But I think I need to kick you out so I can shower.\"\n\n\"Don't forget to put away the groceries first,\" I said.\n\nShe looked at all the bags and then sighed. \"Okay,\" she said. Then she brightened. \"But after all that we can talk about fucking. Or maybe just fuck. The bookstore thing was kind of like a date so maybe you've romanced me enough already.\"\n\nMy turn to blush for once. She giggled when she saw it and then touched my arm. \"If you don't want to...\" she said, but I cut her off.\n\n\"Maybe I'll go shower too,\" I said. \"You know, just in case.\"\n\nI winked at her and she smiled. Then I left and closed the door behind me.\n\nI went back to my room and showered. After that I got dressed and then sat by the window, watching it snow. I don't know about you, but I find it relaxing to watch the snow as long as I don't have to be out in it.\n\nI hadn't been sitting there very long when there was a knock at my door. I opened it to find Mina leaning on the door frame. At first glance it looked like she was dressed for the office, in a white blouse and a black miniskirt. After a second look I realized everything was just a bit more scandalous than usual.\n\nThe blouse was more sheer and she had more buttons undone, showing more cleavage. The miniskirt was shorter than anything I'd seen her wear to work before. Her lipstick was a wilder shade of red.\n\nI liked it all.\n\n\"Hey sailor,\" she said, smiling at me.\n\nI laughed. \"You look great,\" I said.\n\n\"Thanks,\" she said. \"Can I come in?\"\n\n\"Sure,\" I said, stepping aside to let her pass.\n\nShe walked in and tossed her purse and the car keys onto the side table near the door. Then she walked over to sit on the bed. Gesturing towards her outfit she raised an eyebrow. \"You like?\" she asked.\n\n\"I do,\" I said, nodding. \"I appreciate the effort.\"\n\nThat's when the fire alarm went off.\n\n\"Oh you've got to be fucking kidding me,\" said Mina.\n\nThe fire alarm had gone off once before while we'd been here. On the Wednesday of our first week in town we'd come back from work at the end of the day to find a bunch of people standing around in the parking lot, waiting for the all-clear to go back inside.\n\nOut of curiosity I'd asked around to find out how long they'd been waiting and it had been about twenty minutes by the time Mina and I got there. It was about another fifteen minutes after that before the alarm went off and we were allowed back in the building.\n\nThat memory triggered a few quick realizations.\n\nFirst, it was colder today than the last time the alarm had gone off.\n\nSecond, Mina didn't have a coat with her and was otherwise not dressed to spend thirty or more minutes outside in the snow.\n\nThird, her room was on a higher floor than mine. The elevators would have stopped running when the fire alarm went off. Between that and the expectation to evacuate we couldn't stop by her room to grab any of her stuff on the way out.\n\nAll this meant that we'd have to improvise. \"Grab the comforter,\" I said, pointing to the bed.\n\nMina looked surprised for a second and then glanced out the window at the snow and nodded.\n\nI rummaged through my dresser and found a pair of sweatpants and a sweatshirt. \"These will be big on you,\" I said, \"but better than nothing I guess.\"\n\nShe laughed. \"I have to admit,\" she said, \"I wasn't expecting to put on more clothes when I got here.\"\n\nI laughed too.\n\nShe pulled on the sweatpants and then took off her skirt and tossed it on the bed. As she put on the sweatshirt I put on my shoes and grabbed the car keys and my jacket. I was thinking of offering the jacket to Mina too, but she seemed to guess what I had in mind.\n\n\"You wear it,\" she said. She picked up the comforter from the bed and wrapped it around her shoulders. \"I've got this.\"\n\nWe made our way out of the building, which wasn't as easy as it sounds. As I'd expected the sweatpants I'd given Mina were too big. She had to roll them up at the ankles to keep them from tripping her as we went down they stairs. They kept trying to unroll on her, so our progress was anything but swift.\n\nOnce we'd finally managed to get outside I held up the car key. \"Want to go sit in the car?\" I asked.\n\nMina nodded as a gust of wind tried to blow the comforter off her. \"Please,\" she said.\n\nWe made our way over and I popped the locks. Mina got in on the passenger side, so I got in the driver's seat. I turned on the heat and turned it up.\n\nMina spent some time settling in, pushing down the back of the seat enough to give her room to sit sideways in it, facing me. She arranged the comforter so that she was sitting on part of it and part of it was bunched up behind her neck, so she could lean back on the window without touching the cold glass.\n\n\"This isn't so bad,\" she said once she was comfortable. She glanced at the clock on the dashboard. \"Any bets on how long we'll be out here?\"\n\nI shook my head. \"Long enough that we should have brought a deck of cards or something.\"\n\n\"Or something,\" she said, with a wink. \"I'm sure Brad would have some suggestions for how we could pass the time out here.\"\n\nI smiled. It was mid-afternoon by now but it was overcast and gloomy. It was also snowing harder and faster, which would provide some cover. But looking around outside I could still see a lot of other people standing in the parking lot.\n\nMina saw where I was looking. \"Yeah, maybe a little unsubtle,\" she said with a laugh. \"If my head disappeared from view in the window people might just guess what was going on.\"\n\n\"They might put two and two together,\" I said, nodding.\n\n\"Still,\" she said, \"we're not without options.\" She reached down with one hand to cup the front of the sweatpants and wiggled her fingers suggestively.\n\n\"For example,\" she said, pointing at what she was doing with her other hand. \"Want to help me take some more pictures for Brad?\"\n\nI cleared my throat, shifting in my seat to adjust my pants to leave more room for my stiffening cock. \"Yes ma'am,\" I said, giving her a little salute. \"Got your phone?\"\n\nHer eyes widened. \"Shit,\" she said. \"It's in my purse in your room.\"\n\n\"Poor Brad,\" I said, shaking my head. \"This day is not going in his favor.\"\n\nShe laughed. \"Well maybe it is,\" she said. \"Have you got your phone?\"\n\n\"I do,\" I said, taking it out of my pocket.\n\n\"Are you okay with taking some pics on it?\" she asked.\n\n\"That's fine with me,\" I said, nodding. \"I can text them to you and then delete them from my phone.\"\n\n\"Sounds good,\" she said. She slipped her hand into the sweatpants and I could see her fingers moving around. After a few moments she let out a little moan, bit her lip and closed her eyes. Her fingers moved more vigorously.\n\nI took a few pictures, the phone camera clicking away as she masturbated with one hand. With her other hand she grabbed her chest through the sweatshirt and squeezed, pinching at what I assumed were her nipples although I couldn't see them through the shirt. I definitely wanted to see more.\n\nAfter a few minutes she opened her eyes. \"How's this look?\" she asked.\n\n\"Good,\" I said. And then before I could stop myself I continued, \"but Brad might want to see a bit more of the action.\"\n\nShe looked down at herself, then out the windows and around the parking lot. Then she looked back at me and raised an eyebrow skeptically.\n\n\"I know, I know,\" I said. \"Some subtlety is required in the circumstances. I'm not suggesting you get fully naked. But maybe you could slide those down some,\" I gestured to the sweatpants.\n\n\"Dirty boy,\" she said, smiling at me and shaking her head. But then she shifted around so that her feet were spread apart on the center console near the gear shift and her knees were up in the air in front of her. Then she slid the sweatpants off her ass and partway up her thighs.\n\nFrom my position I could see her panties now, but a casual passerby who happened to glance in at a different angle would probably still only see the sweatpants in the way.\n\n\"Better?\" she asked as she slipped one hand inside the panties to start touching herself again.\n\n\"Hell yeah,\" I said, taking another picture.\n\nI took a few more shots as I watched her play and watched the front of the panties grow damp. Then I said, \"maybe you could move the panties out of the way too. You know, for Brad's sake?\"\n\nShe opened her eyes again. \"Oh for his sake huh?\" she said with a chuckle. \"You're not just trying to get a look at my pussy?\"\n\nI smiled. \"Well I'll admit that I am,\" I said. \"But since you want me to fuck you later, I was hoping maybe that was fair.\"\n\nShe blushed and bit her lip. Then she smiled. \"I guess it is fair after all.\" Still smiling she slowly reached down and slid the panties up her thighs as well, showing herself to me.\n\nHer bush was trimmed into a neat little rectangle, almost like a racing stripe. Her wetness was even more obvious with her panties off as it caught the light coming through the windows.\n\nAfter a few seconds she blushed again and cupped her hands around herself, blocking my view. \"You're the first guy to see my pussy since Brad,\" she said shyly. \"Do...do you like it?\"\n\n\"Fuck yeah,\" I said. \"It looks amazing.\"\n\nShe smiled and then slid her hands to the sides so I could see her again. Then with a wink she actually took her hands and spread her pussy lips open, exposing herself to me completely.\n\nAs I took pictures, she laughed. \"Look at me, here I am showing my pussy to a new boy for the first time and we're in a car in a public place.\" She looked out the window again. \"There's still people walking around over by the doors. I'm such a bad girl.\"\n\n\"Maybe,\" I said. \"But you're being an awesome girlfriend.\"\n\nShe laughed and looked back at me. She kept holding herself spread open with one hand, but the other moved to start stroking her clit. \"So,\" she said, her voice huskier. \"Talking about fucking later makes me wonder, how do you want to fuck me?\"\n\nI chuckled. \"I'm pretty easygoing,\" I said. \"Why don't we start with you telling me what's off the table for you.\"\n\n\"Butt stuff,\" she said and then laughed and blushed again. \"I mean, you can grab my butt, you can spank it. Just, don't try to fuck it okay? At least not for our first time.\"\n\n\"That's fair,\" I said, ignoring the first time comment for now. \"Anything else?\"\n\nShe thought for a minute, distracting both of us by continuing to masturbate. \"No kissing,\" she finally said. \"I don't know that just feels too intimate maybe?\" Looking down at herself and then back at me she shook her head and laughed. \"I don't know if that makes sense given what I'm currently letting you see me do.\"\n\nI nodded. \"If that's how you feel that's okay. You don't have to justify the rules you want to set.\"\n\n\"Thanks,\" she said.\n\n\"No problem,\" I said. \"Anything else?\"\n\nShe thought for a minute, biting on her lip again and stifling a groan. Finally she shook her head. \"I can't think of anything else offhand. I reserve the right to add stuff later though.\"\n\n\"Of course,\" I said. \"Okay then, new question, what's your favorite position?\"\n\n\"Doggy,\" she said without hesitation. \"But some missionary too, at least for the sake of the pictures.\"\n\n\"I can work with that,\" I said.\n\n\"You better be able to,\" she said, her breathing coming faster now. \"By the time we get out of here I'm going to want to go wild.\"\n\n\"Well you've been very patient,\" I said, laughing.\n\n\"Yes, yes,\" she said. \"Now shush for a minute.\"\n\nI shut my mouth and sketched another little salute, which made her laugh. But then she closed her eyes and really got to work on herself.\n\nI sat there and enjoyed it all, from the sounds of her trying to be quiet, to the smell of her arousal filling the car. I got some great pictures for her over the next couple of minutes.\n\nI think she was almost there when the fire alarm stopped. She shook her head and muttered, \"not stopping.\" Then she stuck her mouth into the crook of her elbow to muffle the sounds she was making.\n\nA few seconds later I saw her hips buck and her thighs quiver as her orgasm went through her. She kept fingering herself through the aftershocks and then at last slumped back against the car door with a satisfied sigh.",
        "She opened her eyes and gave me a big smile, then licked her fingers clean. \"Want to go back upstairs?\" she said, raising an eyebrow.\n\n\"Hmm, I guess so,\" I said, giving an exaggerated shrug. She shook her fist at me and then we both laughed.\n\nWe made better time getting back to my room than we had getting outside. But we didn't stay there. Just in case the fire alarm went off again we headed up to Mina's room after she'd grabbed her purse and dropped the comforter off on my bed.\n\nWithin a few minutes we had the door locked and Mina was sitting on her bed. With her thumbs she stretched the elastic waistband of the sweatpants out. \"You may want to wash these,\" she said. \"I may have gotten them a little wet.\"\n\n\"Well take them off then,\" I said with a wink.\n\n\"Oh yes sir,\" she said, winking. She slipped the sweatpants off and dropped them onto the floor.\n\nHer panties were damp and disheveled and I shook my head and pointed at them. \"I'm sure the hotel has a policy of no wet panties on the bedsheets please. Those have to come off too.\"\n\nShe blushed, but didn't protest. The panties joined the sweatpants on the floor and her pussy was bare in front of me again, this time in much better light. I stood there smiling for a minute, drinking in the view.\n\nThen she pointed at me. \"Fair's fair though,\" she said. \"I don't want to be the only one getting naked here.\"\n\nI laughed. \"Okay that is fair,\" I said. I took off my shirt and my pants, leaving only my boxers on. By the time I had done that she had also taken off the sweatshirt, leaving her in the blouse she'd first come to my room earlier in.\n\nShe made a show of undoing the rest of the buttons one by one and then slipped off the blouse. Underneath she was wearing a red lace bra that matched the panties.\n\nReaching behind her she undid the bra, blushing slightly. Then she stopped and pointed to my boxers.\n\nI nodded and slipped them off at the same time as she took her bra off, so that we ended up naked together.\n\nMy cock was rock hard, standing straight up, practically waving at her. She stared at it for a few seconds smiling, then looked up in my face. \"Ready?\" she asked.\n\n\"Oh yeah,\" I said.\n\nShe gestured to her purse, which was over on the side table once again. \"Condoms\" she said.\n\nI nodded and made my way over to the purse. Fishing out a condom I put it on.\n\nBy the time I turned back around Mina had gotten on her hands and knees on the bed, with her legs spread. She looked over her shoulder at me, her messy hair spilling down her back. \"Get over here mister,\" she said.\n\nI did as asked, stopping only long enough to take a picture before kneeling on the bed behind her. Like last time I'm not going to try and detail all the pictures I took, just some of the highlights.\n\nBefore I started it was my turn to look at her and say \"ready?\"\n\n\"Get in there already,\" she said, wiggling her thighs and laughing.\n\nI laughed and then slipped my cock into her waiting pussy. She was still so wet that it slipped in easily.\n\n\"O-oh,\" she said, almost involuntarily, closing her eyes for a second.\n\nI stopped moving. \"You okay?\" I asked.\n\nShe opened her eyes again and nodded. \"Definitely,\" she said. \"You're bigger than I...I mean...it's good, don't worry.\"\n\nI remembered what she'd said before about Brad's equipment and so I let that pass without comment. Besides with her luscious firm ass up in the air in front of me and her pussy gripping on my cock, I had other things on my mind.\n\nGrabbing her hips I started to fuck her, going slowly at first. She rocked her hips back into me, meeting my thrusts and my rhythm.\n\nLeaning forward, I let one hand move from her hip around to her front, sliding up to cup her right breast. She gave an appreciative murmur, so I left my hand there for a bit, gently playing with her nipple.\n\nAfter a minute or two of that I sped up a bit. \"Mmm-hmm\" she said, nodding her head, her eyes closed. She reached out to my hand on her breast, grabbed it, and moved my hand down to her pussy.\n\nTaking my cue, I started to rub her clit, in time to the rhythm while we fucked. \"Pull my hair,\" she whispered, so I wrapped my other hand in her hair and tugged on it, pulling her head back. She moaned appreciatively.\n\nWe kept on like that for a minute or two, fucking while I fingered her pussy and kept her hair pulled tight. I would have been happy to finish off that way, but then I noticed my phone lying on the bed, where I'd dropped it before reaching out to touch her breasts.\n\nRemembering what I was supposed to be helping her with, I let go of her hair and reached out awkwardly with my left hand to grab the phone.\n\nShe murmured in displeasure then opened her eyes and raised an eyebrow at me. I winced and held up the phone. \"Pictures,\" I said.\n\nShe looked startled. \"Right, pictures,\" she said, blushing slightly. \"Hold on a sec.\"\n\nShe slid forward off my cock and then rolled over on the bed onto her back. Then she gave a coy smile and gestured at the phone. I took several pictures like that just of her, and then of my cock sliding back inside her while she bit her lip.\n\nWe fucked like that for another few minutes. She had an expressive face and I enjoyed watching the sexy poses she made, even knowing that she was probably playing things up a bit for the camera. As we fucked she played with her clit, causing the occasional groan and moan. Since we were inside behind closed doors now she didn't have to be quiet anymore and she took advantage of that.\n\nI could definitely have gotten off fucking her just like that, but she had other ideas. At one point she put a hand on my chest and said, \"wait,\" so I stopped mid-stroke.\n\nShe shifted up on the bed and my cock slipped out of her. She reached out a hand and stroked a finger along the condom. \"Can we take this off?\" she said.\n\nI raised an eyebrow. \"Are you sure?\" I asked.\n\nShe blushed a little and nodded. \"Just for some pics,\" she said. \"I can't let you cum in me.\" She shook her head slowly and then softly repeated, \"I can't let you cum in me.\" I didn't have a problem with that, but I wondered who she was trying to convince.\n\n\"Okay,\" I said.\n\nShe smiled and slipped the condom off me. Then she slipped her fingers inside herself, letting out a small moan. She masturbated a few seconds and then took her now soaking fingers and rubbed them all over the head of my cock, lubing me up.\n\n\"Just the tip,\" she said, guiding me into her.\n\n\"Okay,\" I said again. Once the head of my cock slipped into her, I stopped pressing forward. I raised the phone and took a few pictures. While I did that she started wriggling her hips, causing the head of my cock to slide slightly in and out of her.\n\n\"God that feels good,\" she said, pushing forward with her hips so that more of my cock slipped in her. Then she froze for a second, looking down to see how deep I was. A moment later her hips started rocking again, almost of their own accord. She had taken about half my bare cock inside her by now.\n\nAfter a few more thrusts she raised her hips even further, slipping me all the way inside her. With her eyes half closed in bliss she gestured at the phone, so I took a few pics like that.\n\n\"Can you give me a few strokes like this?\" she said.\n\nI did as she asked, giving her a few long, deep strokes in and out of her, feeling her pussy tighten around my cock. She slipped her hand down to rub her clit while I fucked her and her moans started to get even louder.\n\nAfter a half dozen or so strokes - I wasn't exactly keeping track - I started to slow down. She put one hand on my hips and murmured \"don't stop yet\" as she continued to masturbate with her other hand.\n\nSo I sped up again, fucking her harder than before, feeling myself bottom out in her with each thrust. Her fingers on her clit were moving in constant little circles. She moved her other hand up to touch my cheek. Then she pulled my face closer to hers and almost as if she couldn't help herself she planted a soft kiss on my lips.\n\nI raised my eyebrows in surprise, and she blushed and turned her face away, but her hips kept thrusting up towards my cock, so I didn't stop fucking her.\n\nA few minutes later as her hips sped up even more she turned her face back to mine, her eyes bright. We locked eyes for what seemed like an eternity. Then she smiled and slowly kissed me again, harder, our lips clashing together. Her tongue slipped into my mouth and I kissed her back as we fucked.\n\nAt this point I knew I couldn't last much longer, so I had to break the kiss. \"I'm close,\" I said to her, wanting to make sure she knew.\n\n\"Oh god,\" she said, \"me too. Don't stop.\"\n\n\"Are you sure?\" I said.\n\n\"Do you want to cum in me?\" she asked.\n\n\"Yes,\" I said, with no hesitation.\n\n\"I want you to,\" she said. \"Cum in my pussy.\"\n\n\"Yes ma'am\" I said and I kept going.\n\nHer fingers sped up on her clit and she started kissing and biting my neck.\n\nAfter what felt like another eternity but was probably only a matter of seconds after that I felt her legs wrap around my back. Her pussy tightened around me as she started to cum. \"Oh yes,\" she shouted, \"oh god, oh...I'm cumming.\"\n\n\"I'm going to cum,\" I said, knowing it was true.\n\n\"Yes,\" she shouted. \"Fill me up, claim that pussy...make me your slut.\"\n\nThe dirty talk tipped me over the edge and I came hard, deep inside her. Her pussy throbbed around me, milking every drop out of me.\n\nWe shuddered together for a long time. I often find my cock gets hyper ticklish after an orgasm, so that I have to pull out. But this time it just kept feeling good so I could hang in there until she was finished with me.\n\nA minute or two later her thighs finally stopped quivering. She opened her eyes and smiled at me. Then she gave me a little peck on the lips. \"That was great,\" she said.\n\n\"I'm glad you thought so,\" I said. \"I would agree.\"\n\n\"Good,\" she said.\n\nI noticed my phone on the bed beside us where I had dropped it at some point near the end. I pointed at it. \"Um, do you want...\" I started to say.\n\nFollowing my gaze she nodded. \"Right, some pics of the grand finale,\" she said with a laugh. \"Probably should, yes.\"\n\nI took some pictures of my cock slipping out of her and then of her pussy dripping my cum all over. She even had me take a short video of her scooping up some of the cum from her pussy and then licking it off her fingers. \"Love you baby,\" she said to the camera, blowing it a kiss.\n\n\"That'll do,\" she said after that, gesturing lazily for me to put the phone down.\n\nI was about to and then something dawned on me. \"Oh shoot,\" I said.\n\n\"What,\" she said, looking worried.\n\n\"Oh nothing bad,\" I said, trying to sound reassuring. \"I just realized I used my phone camera for all of that instead of yours.\"\n\n\"Oh,\" she said, her expression becoming less worried but still thoughtful.\n\n\"That's okay though,\" I said, holding it out to her. \"You can send yourself all the pics and then go ahead and delete them from my phone.\"\n\nShe took the phone and spent a few minutes scrolling through, sending some pics and deleting others she didn't like. Her phone chimed merrily away in her purse with all the messages she was sending herself.\n\nWhen she was done she handed my phone back to me. I noticed something right away. \"Oh you didn't delete a bunch of these,\" I said. \"But I can do it.\"\n\nThis time she didn't quite blush. She caught my eye and smiled. \"You don't have to delete them,\" she said. \"Um...you can keep them. If...if you want.\"\n\n\"Are you sure?\" I asked.\n\n\"Do you like them?\" she asked.\n\n\"Yes,\" I said. \"You look fantastic. But...\"\n\n\"I trust you,\" she said, cutting me off. \"And besides you did me a big favor, so you should get something out of it.\"\n\nI couldn't help laughing. \"You have quite an unusual definition of favor,\" I said, and she laughed too.\n\nAfter a minute she added, \"And besides, knowing that you have those photos kind of turns me on too.\" She blushed again and looked down, maybe feeling she said too much.\n\nI took her hand and squeezed it, but didn't say anything else.\n\nShe patted the bed beside her, so I lay down next to her and she put her head on my shoulder. We lay like that for maybe ten minutes or so and then her stomach growled loudly enough that we both cracked up laughing.\n\n\"Well?\" she said, arching her eyebrows at me after she'd gotten her laughing under control again.\n\n\"Well what?\" I said.\n\n\"Well aren't you going to cook for me now?\" she said.\n\nI looked at the clock on my phone. \"It's dinner time,\" I said teasingly. \"I only offered to cook you lunches.\"\n\nShe put on a pouty expression. \"Oh come on,\" she said. \"Please?\"\n\n\"Fine,\" I said. \"I can't say no to a pouty naked lady.\"\n\nShe looked down at herself in surprise as if she'd forgotten we were both still naked. Then she laughed. \"So if I stay naked will you do all my chores?\" she asked. \"I have some laundry to do later.\"\n\n\"Don't push your luck,\" I said, wagging a finger at her.\n\n\"Don't underestimate the power of my naked ass to get you to do what I want,\" she said, turning around and shaking her booty at me.\n\nI laughed. I had to admit she had me there. \"We'll see,\" I said, reaching for my boxers.\n\n\"Aww,\" she said. \"You're not going to cook naked?\"\n\n\"That's just hazardous,\" I said, shaking my head.\n\n\"Aww,\" she said again, exaggerating her pouty look even more.\n\nI sighed and dropped the boxers.\n\nI had a feeling the rest of the trip was going to be interesting..."
    ],
    "authorname": "madmartigan37",
    "tags": [
        "exhibitionist",
        "voyeur",
        "sharing",
        "masturbation",
        "bareback"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-work-trip-pt-02"
}