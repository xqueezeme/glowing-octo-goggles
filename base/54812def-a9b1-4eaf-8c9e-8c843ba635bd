{
    "title": "Thorne Ch. 12",
    "pages": [
        "Hello! Thank you for your patience and for reading Thorne. I just wanted to thank all of my beta readers Jean and Donalde for their time and Teacher 2272 for editing. I also wanted to give a heads up- there is no sex in this chapter. Somehow it didn't seem- appropriate? Anyway... thanks again.\n\nKal\n\n\n\n\n\n\"Where would you like to make the food?\" Louise asked Barb the night after the meeting. \"I'm good with wherever you choose.\"\n\nBarb hadn't given it much thought. Her mind was on other things, including the fact that the baby had chosen his name. The second thing was about the move to Hawaii and the alliance. No matter how she sliced it, she was going to be involved no matter what she did. In the interest of preserving the peace and her purse, she decided to willingly join the alliance. The third thing was meeting Thorne's mother. She didn't know why, but she already disliked the woman, although they had never met. In her mind's eye, she saw her as a stoic and unforgiving woman. She had to admit that the fact that Thorne didn't care for her had something to do with it.\n\n\"He doesn't care for you either,\" the voice whispered.\n\nBarb ignored it and answered Louise's question.\n\n\"I think that your house would be better. Your kitchen is fully stocked and aren't you taking those cooking classes?\"\n\n\"Here is fine,\" Louise replied she knew why Barb wanted to come to her house. She wanted to compare their homes. It was all about whose house was better. \"Can you bring those notebooks? Nathan said that he can enter the recipes onto my laptop and then you can have them back if you like.\"\n\nA small pang of guilt hit Barb. She shouldn't have taken the notebooks. She hadn't even looked at them since she took them. She hadn't even looked at it then.\n\n\"I'll bring them,\" she said softly. \"What time tomorrow?\"\n\n\"Is six too early?\" Louise asked. \"I have a couple of new recipes that I want to try out if you don't mind being a guinea pig.\"\n\n\"I - sure; can I bring anything?\"\n\n\"No - we've got it,\" Louise said. \"We'll see you at six and Thorne is invited too.\"\n\nBarb hung up suddenly tired and confused. She went to her room to lay down for a nap. Thorne would be by in a couple of hours to talk to Aidan. Adrianna and Cheung sat out on her balcony while one of the wolf couples sat in the sitting room. She wanted to send them all away. She wanted her life back to the way it was before she met Thorne. She wanted to turn the clock back to when she was married to her ex-husband. She wanted to do things differently. But it was as Gene told her, \"some decisions are irrevocable.\"\n\nThe baby was irrevocable. Her immortality was irrevocable. Her relationship with Thorne was irrevocable unless they could get out of it somehow. Even if she was freed, she would still be tied to him because of the br... baby.\n\n\"Careful,\" the voice cautioned.\n\nBarb lay on the bed letting random thoughts float across her mind. She was almost asleep when the voice woke her.\n\n\"So - why did you take that notebook? It meant and means nothing to you.\"\n\n\"I took it because...\"\n\nShe didn't finish the sentence. To say the reason out loud was like admitting that the others were right about her and she still didn't quite believe it.\n\n\"Tick tock...\" the voice said and faded away.\n\n****\n\nSamantha was still in shock over what Thorne had told her. He had seen her twice with other men. It explained so much about his attitude toward her. If he was to be believed, his mate was similar to her, which didn't bode well, but like her, the woman was now a Blackwell. The question was did she really want to meet this woman? It wasn't a want she decided, but a have to. The next question was did she want a relationship with her grandson? She didn't know the answer to that question. Then there was Noel who she had treated wrongly. At the thought of him she felt a pang of guilt. Thorne had been right in saying that he had gotten it from all sides. What could she do about it? She could do nothing- Noel still loved her as his mother even with all of her failures and shortcomings. Or - she could do the adult thing and apologize. It was her sense of guilt that led her to the latter choice. If it had been Thorne she didn't think that she could do it - but she had to apologize to him too. \n\n\"Karma,\" she muttered under her breath and reached for the phone.\n\n****\n\nNoel was making last minute arrangements for his move when the phone rang. He looked at the caller ID and quickly answered.\n\n\"Mother? Are you alright?\"\n\nSamantha's throat tightened at the genuine concern in his voice.\n\n\"I'm fine, but Noel I need to tell you something...I know that I wasn't a good mother to you and the others. I was even a worse mate to your father...\"\n\n\"Mother,\" Noel interrupted, \"you don't have to do this.\"\n\n\"Yes Noel, I do,\" Samantha replied. \"As awful as I've been to you, you've always loved me. It was brought to my attention that while I may not have physically harmed you; I harmed you psychologically. As Thorne would say, I fucked you up. I won't go into the details about my past doings; one child knowing about them is enough. I just wanted to tell you that I'm sorry.\" \n\nNoel didn't know what to say. He hadn't expected a sincere apology from her. What he knew and sensed was that she felt guilty for her treatment of him. What he wasn't going to tell her was that he knew about the affairs. He had never witnessed one, but he had heard her and his father arguing about it. It was a day that he would never forget because that was the day that the man who had been his father became someone else. That was the day when his father had become an abusive bully and she had allowed it. She had started it. At the time he was hurt, angry and confused. What was happening wasn't supposed to happen. Mates were supposed to love and protect each other forever. Not even Thorne knew that he knew about the affairs.\n\n\"All is forgiven,\" Noel said quietly. \"I am much better and getting a little better every day. So much better in fact that I'm leaving to explore the big bad world.\"\n\n\"What?\" Samantha asked surprised. \"You're leaving? Does Thorne know about this?\"\n\n\"Yes he does and I didn't want him to tell you,\" Noel replied. \n\n\"Why not?\" Samantha asked hurt.\n\n\"Because, to be frank, I didn't think that you would care,\" Noel replied. \"I'm surprised that we're even talking. When was the last time that you called me? Look, it doesn't matter. I accept your apology and I harbor no ill will toward you. You will always have my love and respect simply because you are my mother and, even though you won't admit it, you're lonely. I would like to make a suggestion if I could- call Thorne and apologize. He felt your absence as a mother more than any of us did. The rest of us were swayed by the pretty wrapped gifts that we found every day, but not him.\"\n\n\"Why didn't you say something?\" Samantha asked.\n\n\"Would you have listened to me?\" Noel countered. \n\nSamantha hesitated. Noel was right. She wouldn't have believed him if he told her how badly she was hurting him. She would have told him the same thing that she told Thorne-\"you wanted for nothing.\" She also suspected that Noel's answer would have been the same as Thorne's.\n\n\"Where will you go?\" Samantha asked wondering about the wisdom of his leaving so soon after the hunter situation. She didn't say anything because she felt that she didn't have the right to act like a concerned mother when she hadn't been concerned before. \n\n\"I won't be traveling alone,\" Noel assured her. \"Felix will be going with me. We'll travel around the United States and then eventually I'll settle in Paris. I've always wanted to go there.\"\n\n\"What about the reunion dinner? Will you be there?\"\n\n\"Ah yes...the reunion dinner. I'll be there but I'm leaving right afterwards. I assume that you'll attend?\" Noel asked.\n\n\"I plan to be, may I ask a question?\"\n\n\"If it's about Thorne and his mate, then no,\" Noel replied. \"I've managed to stay out of their issues and I'm going to continue to do so. I have issues enough of my own without adding theirs to it.\"\n\n\"Does he really care nothing for her?\" Samantha pressed.\n\n\"You spoke with him,\" Noel said his tone cool. \"What did he tell you?\"\n\nSamantha blinked. Noel had never used such a cool tone with her. She was talking to a still flawed, but much stronger Noel. She changed the subject to his memory or lack of it.\n\n\"Why do you believe that you were with me the night of the fight with the Sinclaires?\"\n\n\"I can't answer that,\" Noel replied. \"Both you and Thorne tell me that I was there so I must have been. I tried to remember but I got the most horrific of headaches. I've finally come to the conclusion that I'm not supposed to remember. I don't know if I ever will and I no longer worry about it.\"\n\n\"Noel,\" Samantha asked after a brief hesitation, \"Is it possible that you know who betrayed us?\"\n\n\"Mother,\" Noel replied his voice strained, \"I can't talk about this.\"\n\nSamantha stopped pushing when she heard his voice. So it was true she thought. He really did have pain when he tried to remember. She quickly changed the subject much to his relief.\n\n\"How will you ever find your mate, if you're gallivanting around the world?\"\n\n\"We will find each other when the time is right,\" Noel replied, \"and it won't matter what part of the world we're in.\"\n\nSamantha was amazed that in spite of what he had been through, Noel still held the glass half full mindset. Someone weaker would have broken. She wondered if Thorne could have survived as Noel had and decided that he would have. But instead of being the gentle soul that Noel was, he would have become even angrier than he already was. Noel knew this. That explained why he didn't say anything.\n\nNoel ended the conversation by saying that he had to go meet Thorne. He thanked her for calling and hung up. Samantha laid the phone down and then picked it up. She looked at it and put it back down. One apology was enough for the day.\n\n****\n\nLouise wrote down the supplies that would be needed while Nathan went through the cabinets. It seemed as if her belly had grown almost overnight. She massaged it in gentle circles while she waited for Nathan to tell her what to write down. Many of the items in the cabinets were in preparation of the cooking class that they hadn't completed. As soon as the trouble began, Nathan sent the chef back to France with a promise to bring him back once the trouble was over. In all likelihood, the classes wouldn't continue until after the baby was born.\n\n\"Did you get that?\" Nathan asked disturbing her reverie.\n\n\"What? No sorry, I was thinking,\" Louise replied. \n\n\"About what?\" Nathan asked as he sat on the barstool beside her.\n\n\"Everything I guess. So much has happened in a short amount of time. And now Gene is coming. All of us will be together except- Barb's leaving. She hasn't said anything yet, but I know that's what she's planning.\"\n\n\"How do you feel about that?\" Nathan asked.\n\n\"I wish that she weren't going,\" Louise replied. \"I wish that she would stay and get to know her baby and it would be nice if all of us were together for a while. Have there been other couples like Barb and Thorne?\"\n\n\"Unfortunately, yes,\" Nathan replied. \"Fortunately it doesn't happen often.\"\n\n\"Has a couple ever divorced?\"\n\n\"For the most part the word divorce isn't in our vocabulary, but yes it happens. There was a couple that had been together for centuries. The female mate apparently made some very bad choices including not accepting the mate of her son.\"\n\n\"Why didn't she accept her? I thought that was a given.\"\n\n\"From what I understand, the male was of a family where mixed matings were discouraged. The female was of mixed heritage. Her mother black and her father white.\"\n\n\"And what race was he?\" Louise asked.\n\n\"He was Japanese,\" Nathan replied. \"The issue wasn't with the family as a whole, it was his mother.\"\n\n\"Was there ever a problem with your family?\"\n\n\"Never and I'll tell you why later. We need to finish going through the cabinets,\" Nathan said as he kissed her.\n\n\"Nathan Sinclaire, I do believe that you just brushed me off,\" Louise teased.\n\n\"No- it's a really long story and we need to get this done,\" he said kissing her again. \"I promise to tell you about it but while we're talking, we need to think of names for the baby. I still say he's a she.\"\n\n\"Do you know something that I don't?\" Louise asked. \"Can you talk to her like Celeste can talk to Thorne and Barb's baby?\"\n\n\"No, nothing like that,\" Nathan replied. \"It's just time that we bring another girl into the family is all and I just have a feeling. So after we're done here, why don't we go sit on the beach and talk about names for our daughter?\"\n\n\"Fine,\" Louise said smiling, \"but you're awfully sure of yourself.\"\n\nAn hour and a half later, the list was completed. Louise wanted to go shopping that night instead of sitting on the beach so that everything would be ready for when Barb came over. She waited while Nathan arranged for extra security although she was certain that they didn't need it. There were still a few hunters around, but they were just watching. She made a mental note to call Nadine to see how she was doing. She knew that Leon was hoping that she would talk to Rachel or Katrina sooner rather than later. \n\nNeither Louise nor Nathan spoke during the drive to the grocery store. They were each lost in their own thoughts. Her thoughts were on her sister while his was on keeping Louise and the baby safe. There had to be a common plan that everyone followed and then contingency plans. He wondered if Hans and Patrick had spoken to their mates about turning. The safety of them and the children could depend on it. The other thing was teaching self-defense. Louise and Barb couldn't at the moment, but the others, the children included could.\n\nHe made a mental list of things to talk to Ethan and Thorne about. He was sure that he would be asked to take the lead on the plans. He had no problem with that and he knew who he would ask to help him- Leon. That decided, he thought about the nurseries that still needed to be finished. Louise still needed to pick a home that would serve as their primary home. Once she did that, he could modify the room that adjoined their bedroom. There was so much to do, but Gene's apartment would be ready days before he arrived. Thinking of Gene brought up another issue- when they were going to tell him about the family and its history? It was another thing added to his list to talk to Ethan about. By the time they got to the store, his list had doubled.\n\nThey finished their shopping and went home. Nathan made Louise sit while he put things away. He caught her looking wistful and knew what she was thinking about.\n\n\"Sweetheart, I know that you're worried about Barb, but it's out of your hands. I also know that you want her to love her child, but again; that's not in our hands. The good thing is that even if she decides not to love or accept him, he's got plenty of people who do. Thorne loves that baby and he's going to do right by him.\"\n\n\"I know,\" Louise replied. \"I just wish that things were different. Okay, I'm done moping, are you still up for sitting on the beach and talking about baby names?\"\n\n\"I have a few more things to put away and then we can go,\" Nathan replied. \"Louise? It's going to be alright.\"\n\n\"I know,\" Louise replied but she was still worried.\n\n****\n\n\"How was the shopping trip?\" Ethan asked Thorne a few days later.\n\n\"It was- it was....\"\n\n\"I understand,\" Ethan replied laughing.\n\n\"I suppose you do, but I think that they got everything that they needed,\" Thorne replied. \"Ethan, I have a question for you. I don't know whether you can answer it or not and whatever the answer is will have no bearing on our discussion tonight.\"\n\n\"Go ahead,\" Ethan replied.\n\n\"What do you know about the Yancy line? I mean there's Louise who's as powerful an empath as I've ever seen. Leon is also an empath- not nearly as strong as Louise but strong enough. Then there's Juliette and Barb who seem to have no real psychic abilities. Juliette is telepathic and maybe slightly empathic, but Barb...\"\n\n\"She's at least telepathic isn't she?\" Ethan asked.\n\n\"No and that's something that I'd rather not go into,\" Thorne replied. \"The brother that's coming, does he have any psychic ability that you're aware of?\"\n\n\"No, but then I really haven't met him either,\" Ethan replied. \"You haven't mentioned Celeste or the other children.\"\n\n\"I was getting to that,\" Thorne replied. \"I used to hear about people who could talk to the unborn and the dead but until I met that little girl I thought that it was a bedtime story. The other two don't strike me as being gifted, but maybe their gifts are lying dormant until they are found by their mates. But how does one as young as Celeste have such power? In fact, I've never seen an empath as powerful as Louise.\"\n\n\"You're forgetting Kevyn,\" Ethan said and then told him about the Veronica's kidnapping and Kevyn and Louise's roles in her rescue.\n\n\"What the fuck, Ethan,\" Thorne said quietly. \"Who are these people and where do they come from?\"\n\n\"I'll give you the condensed version,\" Ethan said.\n\n\"Are you serious?\" Thorne asked ninety minutes later. \"Their family line has intersected with yours for centuries?\"\n\n\"Yes, our genealogist is still working on it, but the Yancy line was created for the Sinclaire line and now apparently your line. The million dollar question is why us? No one is arguing with it- we're all thrilled and honored to be allied to such a strong family; but we want to know why.\"\n\nThorne didn't know what to say. He had never heard of a family line being specifically created for another family line. If the Yancy line was as strong as Ethan said it was, then that would explain Celeste. \n\n\"Not all of them are gifted,\" Ethan said. \"But it seems that even the mother was slightly gifted as was the father.\"\n\n\"Have you ever met the parents?\"\n\n\"No the father, Victor Yancy died a little over three years ago, the mother, Wanda Yancy died a few months back. Nathan and Patrick are giving each of the Yancy's a book chronicling the history of our families. Would you like one for Barb? Actually we should check to see if your line intersects with theirs.\"\n\nThorne thought about to for a minute.\n\n\"Yes to both offers, thank you.\"\n\n\"No problem-Thorne, we're family as well as allies. Your son and mate ensure that. Even without them we were allies. I don't know what you think happened between our families...\"\n\n\"We were attacked by hunters,\" Thorne broke in. \"One of my brothers was captured by them. When we asked him how he was found, he said that one of you had betrayed us. We took his word for it and came to your place... the rest is history.\"\n\n\"Thorne,\" Ethan said after a long pause, \"we didn't betray you. Our fathers were friends as well as allies. I didn't know you as you were gone a majority of the time but I knew your brothers. I'm going to ask a question that may anger you, but it needs to be asked. Is it possible that the brother who was captured betrayed your family?\"\n\n\"NO!\" Thorne roared. \"It wasn't one of us!\"\n\n\"Alright,\" Ethan said calmly. \"If not one of you and it wasn't us- we had nothing to gain by betraying you; then who? Think about it, what could we possibly have to gain by betraying you? To do so would have been like cutting our own throats. You guarded our backs to the east and we yours to the west. Together we protected the north and south. Why would we betray you?\"\n\nEthan was right, Thorne realized but he didn't believe that it was someone from his own family. Maybe someone had followed one of the home or seen them feeding. That had to be it- there could be no other explanation. But then there was Noel. Why couldn't he remember what really happened that night?\n",
        "\"I agree that you would have had nothing to gain by betraying us- it wouldn't have made sense. But I also maintain that it was no one from my family which leaves a stranger. If that was the case it could have been anyone.\"\n\n\"True,\" Ethan replied, \"but let me ask you this- why was your father so quick to believe that we betrayed him? Why were you so quick to believe it? Why didn't one of you ask us instead of blindly attacking us? If you had, your father and brother would still be alive. The only one that tried to make any sense was Noel.\"\n\n\"Noel?\" Thorne asked. \"What about him?\"\n\n\"He was the only one not participating in the fight. That's what saved his life. He kept screaming for us to stop. By the time it was over, it was too late.\"\n\n\"He doesn't remember being there,\" Thorne said. \"He says that he stayed with mother.\"\n\n\"Well unless he has a twin, he was there,\" Ethan replied. \"Why would he say that?\"\n\n\"I don't know - unless he knows who the traitor was. I'm not going to go into a lot of detail, but my family has and had issues. I think that he doesn't remember because he doesn't want to. And no I don't believe it was him before you ask,\" Thorne said. \"But... I always thought that there was something not quite right about that night...\"\n\n\"So instead of sitting down with us and talking about it; you fucked with us? I'm sorry but that's immature and stupid,\" Ethan said.\n\n\"Add that to the list of stupid and immature things that I've done,\" Thorne said with a grim smile.\n\n\"Look, I apologize,\" Ethan said. \"I'm in no position to call you or anyone else stupid and immature. God only knows the stupid and horrible things I've done. The important thing is we're talking now. Thorne- do you believe me when I say that my family did not betray yours?\"\n\n\"I believe you,\" Thorne replied. \"And for the record, so does my mother. She said the same thing that you did- our fathers were too good of friends to have betrayed each other. But- I am determined to find out who did.\"\n\n\"They could be dead,\" Ethan said.\n\n\"Then so be it,\" Thorne replied as he stood up. \"But I want to know. I also think that Noel is the key and that in due time he will remember. Ethan, I owe you and your family an apology. You are right in saying that not coming to you was stupid and immature on my part. Working with you these past weeks has been an honor and a pleasure. I would like to open my homes to you and yours and take you under my protection. I would be honored if our families were to reunite and be as friends, allies and family.\"\n\n\"It's about damned time,\" Ethan said as he stood and extended his hand. He waited until Thorne took it and spoke. \"Any past transgressions are no more- your apology is accepted. Working side by side with you reminded me of our fathers and how they worked together. I accept the offer of your homes and protection and in return I offer my homes and protection to you and yours. I am honored that your family has once again joined with mine for the protection of those we hold dear.\"\n\nThorne gave Ethan's hand a hard squeeze and released it. \n\n\"This calls for a drink,\" Ethan said, \"What's your pleasure?\"\n\n\"You got any scotch?\" Thorne asked.\n\n\"I just happen to have a bottle of Duncan Taylor cask strength Scotch Whiskey- will that do?\"\n\nEthan poured the drinks, handed a glass to Thorne and proposed a toast. \"Sounds good,\" Thorne replied, \"straight, if you please.\"\n\n\"To new friendships, alliances, and the safety of our loved ones,\" Ethan said.\n\nThey clinked glasses, downed their drinks and sat down. The next topic of discussion was the reunion dinner.\n\n\"I would suggest the club,\" Thorne said, \"but I don't think that's a good idea.\"\n\n\"Probably not,\" Ethan agreed. \"Intel says that there are still a few hunters around. My chef has a restaurant that he only opens on special occasions. We could have it there.\"\n\n\"Is it easily defendable?\" Thorne asked.\n\n\"I'll tell you what, why don't we go over there and you can see for yourself. If you don't think it's satisfactory, we'll look for another place.\"\n\nSecond later they were standing in front if Caesar's.\n\n\"You could have just told me yes,\" Thorne said as he looked around.\n\n\"If the situation were reversed, I would have wanted to see it so no problem. What do you think?\"\n\n\"I think it's fine,\" Thorne replied still looking around. \"When do we do this?\"\n\n\"This is now Sunday morning- how about Friday night?\" Ethan asked. \n\n\"That will work,\" Thorne replied.\n\n\"I'll let Caesar know and, if you don't mind, I'll let him plan the menu.\"\n\n****\n\nThorne went home feeling better than he had in a long time. The only blip in his otherwise decent day was the talk that he had to have with Barb about turning. He also had to tell her when the reunion dinner was. As he walked to her room, he wondered why some of the Yancy's had power in spades while some of them seemed to have none. He tapped on her door and walked in.\n\nBarb stopped what she was doing and looked at him. Was it time for the nightly chat with daddy already? She sat the book that she had been reading aside and waited.\n\n\"The reunion dinner is Friday evening,\" Thorne said as he pulled a chair up beside the bed. \"We've already discussed the possible ramifications of your not joining, so I won't repeat them. I do have another subject that we need to discuss.\"\n\nBarb squirmed. She didn't like the sound of this. She had been hoping that Thorne would say goodnight to the baby and be gone leaving her in relative peace. The fact that he pulled up a chair told her that this wasn't going to be the case.\n\n\"Before we continue, I would like to speak with our son.\"\n\nBarb repositioned herself and watched as Thorne went through the now familiar routine of greeting the baby. She could almost say the words with him, but she didn't. When he was through, he moved back to the chair and looked at her. She met his gaze with one of her own and wondered when he was going to get to the reason for his extended visit.\n\n\"As you know,\" he said, \"Your sister Louise is full vampire. Your other sisters are not. Since the hunter issue...\"\n\n\"I'm not turning,\" Barb said before he could go any further. \"It's bad enough that I have to live forever but I won't become one of you!\"\n\n\"Do you not care about that child within you at all?\" Thorne asked. \"Just once can you think beyond your own wants and needs? I don't make this suggestion lightly and I wouldn't have brought it up if it weren't important. Wait- is it because you think that I have to be the one to turn you?\"\n\n\"I never pretended that I wanted this baby!\" Barb shot back. \"And yes, I'm pregnant because of choices that I made! I'm immortal because of those same decisions but that doesn't mean that I have to turn! I'll be a part of your alliance and I'll do my part, but I will not become one of you, no matter who does it!\"\n\nThorne sat back and said nothing. He had expected her to refuse to turn, but he hadn't expected her to accept her part in the situation that they were in. It didn't change how he felt about her, but it was nice to hear.\n\n\"I expected that you would respond as you just did,\" Thorne replied. \"The offer stands if you should change your mind. Something else to consider is this- you could have drawn up what the humans would call an advanced directive. You could state under which conditions that turning is acceptable and name those who you wish to turn...\"\n\n\"Did you not hear me?\" Barb snapped. \"I want no part of it. If I die then I die.\"\n\n\"You really are a selfish bitch!\" Thorne said unable to hold his tongue. \"You are so beautiful on the outside but on the inside you are as ugly as they come! Do you know what amazes me? It amazes me that you are unaffected by the fact that our child doesn't like you. He has accepted that you don't and won't care for him! The other thing that amazes me is that your family still loves you. They have made every effort to draw you to them and you continue to shun them...\"\n\n\"Listen to you Mr. I'm in therapy!\" Barb yelled back. \"As I remember telling you before, you're no damned better than I am!\"\n\n\"No, I'm not!\" Thorne bellowed. \"I'm worse in many ways. I know and accept that about myself! I took advantage of your weakness! I can't tell you how much I regret that, but I am making an effort to change. At heart, I will always be a bastard, but I'll be a bastard willing to do what I need to do in order to care for my son! What about you? Can you say that or are you going to keep counting the days that you can be free of him? Notice that I said him and not us. As far as we're concerned we never were. I've given you your options; do whatever the hell you want.\"\n\nBarb didn't reply. His words had cut deep. She didn't move when he approached the bed and sat down beside her.\n\n\"Aidan- sweetheart,\" he said softly. \"I am sorry if we frightened you. I have yet to learn how to control my tongue and my temper. Try to rest and try not to worry- you are loved and cared for.\"\n\nHe kissed Barb's stomach, stood up and left the room without sparing her another glance.\n\n\"Tick tock,\" the voice within Barb whispered. \"Tick....tock\"\n\n***\n\nThe week before the reunion dinner passed quickly. Miraculously, the apartment for Gene was ready and fully stocked with his favorite food, snacks and beverages. The freezer was full of meals that only needed to be reheated in the microwave or oven. \n\nThe night before the apartment was finished, and as they were finishing making the food, Louise decided to talk to Barb. For all she knew it would be her last chance.\n\n\"Why did you take those notebooks?\" she asked. \"They meant nothing to you.\"\n\n\"I don't want to talk about it,\" Barb replied as she snapped the lid on the last container.\n\n\"Really?\" Louise asked. \"I don't care whether you want to talk about it or not- I do so let's stop acting like children and talk about this. Why did you take those notebooks?\"\n\n\"Look...\"\n\n\"No, you look,\" Louise said taking the container from Barb's hands. \"We've put up with your nonsense long enough, now answer the question, why did you take those books?\"\n\nBarb was surprised at Louise's persistence but tried to put her off and failed. She was finally forced to answer.\n\n\"I took the damned notebooks because I knew that you wanted them! I knew that they were important to you! Is there anything else that you want to know?\"\n\n\"Did you hate me that much?\" Louise whispered. \"What did I do to you?\"\n\n\"You... took from me!\"\n\n\"I - I what?\" Louise asked confused.\n\n\"You heard me! Do you remember ever having to wear hand me downs? Were you ever teased at school? Were you ever denied anything?\" Barb asked her voice low and filled with anger. \"Did any of those things happen to you?\"\n\n\"How did I take from you?\" Louise asked confused. \"By the time I was in middle school, the older ones had part time jobs and could help out...\"\n\n\"I took those notebooks because when I asked Kevyn to bring me back to California with her, she refused. In fact, I didn't get the chance to ask her - she shut me down before I could ask and told me why she was taking you.\"\n\n\"Maybe it was because she knew what you were after,\" Louise replied. \"We all saw how you looked at Patrick. You didn't make a move on him because you knew better. But this is about more than me coming to California, so let's have it. Don't be afraid of hurting my feelings - you can't because I won't allow you to.\"\n\nBarb took a step backwards. The strength that she felt radiating from Louise was startling.\n\n\"Go on,\" Louise pushed, \"Let's hear it. Tell me how I took from you. If you want me to apologize, I will, but I want to know exactly what I'm apologizing for.\"\n\nWhen Barb took another step away from her, Louise didn't move.\n\n\"Are you going to talk to me or are you going to run back to your house and pout about the unfairness of it all? Whatever you say stays between us so have at it. Nathan is in his office with Thorne and he won't interfere if that's what you're worried about.\"\n\nStill Barb didn't speak. Instead, she grabbed her purse and ran out of the house as fast as she could. Nathan followed by Thorne came out of the office.\n\n\"Sweetheart?\" Nathan said assessing Louise.\n\n\"I'm fine; Thorne - Barb is waiting for you by your car.\"\n\nThat was the last time Louise or anyone else saw Barb. No one knew if she was even going to attend the dinner.\n\n\"I pushed too hard,\" Louise said as she got dressed for the dinner. \"I just wanted her to say it- I just wanted to hear why she was so angry with me.\"\n\n\"Louise,\" Nathan said as he put her arms around her, \"she doesn't hate you or the others. She doesn't like herself. If nothing else, maybe she's doing some serious thinking. But at any rate, you've all done what you can.\"\n\n\"I know, but...\"\n\n\"No stressing ok? The baby doesn't like it.\"\n\n*****\n\nBarb debated long and hard about whether she should attend the dinner or not. Attending wasn't a condition in order to receive her money but... eventually reason took over. She had agreed to be a part of the alliance but only because she felt as though she had no choice. To stay home was, in effect, reneging on that agreement.\n\nShe got out of bed and looked at her choice of dresses for the evening. They were both beautiful and paid for by Thorne. She opted out of the shopping trip with her sisters because she was unable to look at Louise. Instead she went shopping with Thorne and Adrianna. She wasn't even sure that she could manage at the dinner but she had to do it. \n\nAdrianna helped her dress in the pale peach maternity dress that fell just below her knees. Ironically, the dress was similar to the prom dress from years ago. When she realized it, she changed into the black evening dress. She hadn't worn black since the night she went to Thorne's club, but that was preferable to the peach colored dress.\n\n\"You look great,\" Adrianna said as she zipped the dress up, \"and I bet if you let yourself, you'll have a good time.\"\n\nBarb didn't reply. She had been doing that more and more. All she wanted to do was to get through the night, have the baby and be on her way.\n\n\"You look lovely,\" Thorne complimented when she came down the stairs.\n\n\"Thank you,\" Barb replied not looking at him. \"Is it time to go?\"\n\nThorne offered his arm which Barb reluctantly took and led her to the car. Tonight there was a driver who would double as security. Barb knew that Thorne offered his arm only because he wanted to be able to pull her aside quickly if he needed to. Once in the car, he sat on one side and her on the other. Not once did they speak.\n\n***\n\nSamantha dressed for the dinner with some trepidation. She still hadn't apologized to Thorne and planned to do it after the dinner. There wouldn't be time before. She had also decided that she would participate in her grandson's life as much as Thorne would allow her. She would never be the doting grandmother, but she could be a grandmother that would know her grandson. She still hadn't formulated an opinion about Barbara Yancy-Simpson; but that would come soon enough. Instead of going with an escort, she decided to go alone accompanied by a guard. There was no point in stirring up trouble. Samantha sighed heavily; it was going to be an interesting night.\n\n*****\n\nEthan and Katrina were the first to arrive, followed by Barb and Thorne. Everyone else arrived shortly thereafter. Wanda, Victoria, Celeste and Victor had a table to themselves, so that they could talk about whatever it was children talked about. When Barb spotted Celeste, she looked away. Soon the restaurant was full and the dinner began. Thorne and Ethan sat next to each other with her sitting to Thorne's left and Katrina to Ethan's right. Barb stared at her trying to figure out how one forgave someone who brutalized them. Katrina caught her staring and smiled at her. To Barb's left, sat Noel and Samantha who, as of yet, she hadn't officially met. Her first reaction though was instant dislike, but admiration for her beauty. She could see where Noel and Thorne got their vivid green eyes. \n\nTo Katrina's right sat Martin and Rachel, Patrick and Kevyn then two empty places where Jesse Sinclaire and his mate would have sat if they had lived. On their plates lay a single rose. Promptly at six thirty, Ethan and Thorne stood up bringing the chatting to a standstill. Both men looked around the room for several seconds before Thorne spoke.\n\n\"As you all know, the Sinclaires and the Blackwell's were friends and allies in the past. That friendship was severed because of an unsupported accusation that was made by my family. It was an accusation of treachery by the Sinclaire family against the Blackwell's. At the time, tempers and emotions ran high and we didn't stop to think or to talk. We simply reacted. When all was said and done, two of my brothers and my father lay dead. But that wasn't all that was lost. A friendship that had been a century old was lost. Trust was lost- a very powerful alliance was lost.\n\nI stand here before you to take full responsibility for that loss. As the oldest male, I should have stepped up and tried to make my father see reason. Afterwards, I should have stepped back and examined the events of that night. Instead, I harbored anger and hatred that was completely unfounded and wrong. Throughout the years, I had the suspicion that all wasn't as it seemed, but I held on to that hate. In doing that, I have made several errors in judgment that have not affected just me, but others, and for that, I apologize. The past several weeks have shown me how wrong and stupid I was. I now ask forgiveness and ask that we, the Blackwell's and Sinclaires, rejoin as family, allies, and friends. Our homes and all that we have will be at your disposal. You and yours are under my protection for always.\"\n\nBarb sat there flabbergasted. Was he serious? She had no idea of what Thorne was really worth but to offer it up like that? She didn't notice Samantha watching her with distaste. \n\n\"Thorne,\" Ethan said as he extended his hand. \"We have always been allies even, if we didn't acknowledge it. The past weeks have proven that. We were able to set aside old misunderstandings and come together for the sake of our families. Your apology is accepted and the past is no longer an issue between us. We start with a new slate. I, and my family, would be honored to accept you as friends, allies, and family. Our homes and all that we have are at your disposal. You and yours are under my protection for always. From this moment forth, we are reunited.\"\n\nStill holding on to Thorne's hand, Ethan continued.\n\n\"There is another family that I would like to formally ask to join our alliance. They are already a part of it because of marriage, but their involvement goes far into the past.\"\n\n\"What's he talking about?\" Kevyn whispered to Patrick.\n\n\"Shhh\" he said with a smile.\n\n\"The Blackwell and Sinclaires have been blessed to have the Yancy family blend with ours. I could go into a long explanation, but suffice it to say that the Yancy's and the Sinclaires have crossed paths over the past several centuries. On occasion there has even been a mating but the last mating was centuries ago. The Yancy's bring to our families strength and power that we are still discovering. Normally, the oldest male of the family would accept or decline the request, but since he isn't here, Leon will you stand?\"\n\nEveryone, even the kitchen staff, was silent as Leon stood.\n\n\"Leon, as the next oldest male of your family do you accept or decline this offer to join our alliance?\"\n\n\"May I speak?\" Leon asked.\n\n\"You may,\" Ethan replied. He already had an idea of what Leon was going to say.\n\n\"I am pleased and honored that you asked me to accept on behalf of my family, but I think that the honor should go to my sister Kevyn. She may not be male, but she held our family together as much as she could have given the circumstances. She made the hard decisions, knowing that she was going to catch hell for them. I don't know if your rules allow for a female to speak for a family, but if they don't; I think that this should be the exception. So if you don't mind - I'd like Kevyn to be the one to accept or decline your offer.\"",
        "Without missing a beat, Ethan nodded at Leon and turned to Kevyn.\n\n\"Kevyn, will you stand?\"\n\nKevyn stood up not sure of what was expected of her. She felt Patrick's hand on her back and took a deep breath. Barb watched the proceedings with her mouth open. This was unbelievable.\n\n\"Kevyn, you were the first Yancy in centuries to cross paths with us. We are pleased to have you and yours as a part of our family. I am formally inviting you to join in our alliance even though you are already a part of it by past and present matings and because your family has intertwined with ours for centuries. Do you accept or decline this formal invitation to join with us?\"\n\n\"I- I accept on behalf of the Yancy family past, present and future,\" Kevyn said not knowing what else to say.\n\n\"Come join hands with us,\" Thorne said as he held out his free hand.\n\nThe room so quiet that a pin would have been heard hitting the floor. Even Martin and Rachel's baby, Stephanie, who was being held by Joseph, was silent as Kevyn walked over to Thorne and took his hand. The quietness took on a surreal feel to it that even Barb wasn't immune to.\n\nEthan picked up a goblet that was filled with wine spiked with blood. He handed the goblet to Kevyn who took a sip and passed it to Thorne who also took a sip and then passed it to Ethan who took the final sip before setting the goblet down. \n\n\"We are now joined together for all eternity by vow and by blood. It is done,\" Ethan said, as he raised Thorne's hand, who then raised Kevyn's hand, in the air. There was a moment of silence before the cheering started.\n\nAll was as it should be.\n\n***\n\n\"That was a cool ceremony, wasn't it?\" Justine asked Quinn as she petted Buddy's head.\n\n\"Yeah, it was,\" Quinn agreed as he pushed the dog off the bed and pulled her close. \n\n****\n\nBarb sat quietly while the dinner was being served. She avoided eye contact with everyone, keeping her eyes on her plate. She didn't notice when Patrick vacated his seat to take Kevyn out for a breath of fresh air. She was too deep in her thoughts.\n\n\"That poor me look doesn't suit you,\" Samantha said as she sat down next to Barb.\n\nBarb looked up at Samantha and then looked away.\n\n\"My son was right- you are lovely,\" Samantha continued. \"The child will be beautiful as well. Have you given him a name yet?\"\n\n\"Aidan,\" Barb replied not liking Samantha one bit.\n\n\"Ahhh Gaelic for fire. Who chose it? You or Thorne?\"\n\n\"Neither of us... look let's cut to the chase,\" Barb said her tone curt. \"You're only talking to me to scope me out. You want to know that status of our relationship but I'm sure that Thorne already told you. I also know that you don't like me. That's fine, because I don't particularly like you either. Did I answer all of your questions?\"\n\n\"My, my, my blunt aren't we?\" Samantha said with a smile. \"You remind me of me when I was young and too stupid to know any better. The difference between us is that I got my mate to fall in love with me. For you, my dear, that ship has long sailed. Had you played your cards right, you wouldn't be getting a monthly stipend, but you would have had full access to his holdings. Don't be angry, Thorne didn't tell me- I know my son.\"\n\n\"You don't know...\"\n\n\"What I'm talking about? My dear, you really are beautiful, but you are very stupid. You thought that because you carried his child that you could control him. How long did it take you to learn that Thorne can't be controlled or bought? You would have done better to have least pretended to wanted the child. Anyone watching you can tell that you don't want to be here and that you and my son aren't truly mates.\"\n\n\"Samantha, is it? Do you know who Thorne credits with the way that he treated me? You, that's who. I don't know what you did, but he doesn't like you any more than he likes me. To him, we are one and the same, except for the obvious differences. He tolerates both of us, because of this baby. From where I sit, you're no better off than I am.\"\n\n\"I agree,\" Samantha said much to Barb's surprise, \"But while he lived, I had the love of my mate. Tell me, what do you have? Thorne tells me that after the baby is born you're leaving. That tells me something significant. You are an outsider looking in. I saw it tonight when your brother so graciously turned the choice of formally joining the alliance to your sister. I saw none of the pride that your siblings had. Even now they are laughing and talking together but you- you distance yourself. You are in effect alone. Why is that?\"\n\n\"I need to use the restroom,\" Barb said standing.\n\n\"One more thing- a word of advice if you will - forever is a long time to be alone. You may not have the love of my son and you probably never will, but you have a family and a child that will love you. Take it from one who knows what it's like to be alone. You are right about one thing, I don't like you. Perhaps it's because in you I see me as I was. Perhaps you don't like me because you see me as you will be.\"\n\n\"Excuse me...\"\n\n\"You are young enough to change your future, even if you aren't given another mate...\"\n\n\"Mother,\" Thorne said smoothly, \"I see that you have met the mother of my son.\"\n\n\"Yes, we were just chatting,\" Samantha said. \"I must say that tonight was wonderful. Thank for allowing me to attend.\"\n\n\"It is as you said; you are still a Blackwell,\" Thorne said.\n\nBarb listened to the conversation feeling left out. Something occurred to her-who was she? She wasn't a true Blackwell. Thorne had never allowed her to use his last name as hers. He wasn't even introducing her as his mate. She had distanced herself from her family - not even using the name of Yancy, except as part of her last name. But she hadn't claimed the Yancy's as a family in a long time, so where did she belong? If a woman that she had just met for the first time saw all of the things she mentioned- how much of it was true?\n\nSuddenly too warm, Barb had to leave the room. She made a wide circle avoiding people as she made her way to the front of the restaurant and out of the door. She took a deep breath and closed her eyes as the ocean breeze caressed her face and cooled her skin.\n\n\"How's it going in there?\" Adrianna asked from beside her.\n\n\"Not quickly enough,\" Barb replied dryly.\n\n\"Hmmm, sounds like everyone is having a good time,\" Adrianna replied looking back at the restaurant.\n\n\"Not everyone,\" Barb replied.\n\nAdrianna sighed, started to say something and then closed her mouth. It was pointless. She stayed with Barb until she went back inside. Everyone was eating and she had to make her way up front to her seat. Thorne being the gentleman stood, held her chair for her and sat back down. Barb picked at her food while she stole glances at the couples around the room. They all seemed so happy and in love. A memory of her ex-husband surfaced. She had been happy with him and she loved him as much as she was capable of loving anyone. She was only beginning to understand what she had lost. All she had to do was to be honest and she wouldn't be sitting in a roomful of vampires and carrying the child of one.\n\nShe wanted her old life back. She wanted to go back in time and tell her ex-husband the truth.\n\n\"Not possible,\" the voice whispered.\n\nShe knew that it wasn't. She had Googled him after Gene told her about their conversation. He was happily married with four children. Two of them belonged to the woman that he married and two they had together. She realized that she was no longer a Simpson. What did that leave her but Yancy?\n\nHer appetite gone, she lay her fork down and watched the festivities. Thorne leaned over and asked if she was alright. It was the only time he spoke to her that evening. The dinner officially ended at four am. By four-thirty, everyone was getting ready to leave. Louise pulled Barb aside and without saying anything hugged her. Barb stood rigid and then slowly put a hand on Louise's back before pulling away. One by one, her sibling silently hugged her and then walked away. She had just received a clear message. What was she going to do with it?\n\n****\n\nThe week after the reunion dinner, the final preparations for Gene's arrival were underway. Celeste had drawn several pictures that Hans put into frames and hung on the walls. Noel had already gone, but left one of his paintings as a housewarming gift. The small apartment looked warm and inviting. Even the apartment manager liked it and asked if they were interested in redecorating any of the vacant units. The plan was to bring Gene to the apartment, let him get his bearings and then have a party at Kevyn and Patrick's house the next evening. Louise wanted to have it at their house, but Nathan nixed the idea. As far as he was concerned she needed to take a break. The first of the Lamaze classes would begin in a few days and he selfishly wanted as much alone time with her while he could get.\n\n\"We still haven't talked about a name yet,\" Nathan said as he drove over to Kevyn and Patrick's house. They were all meeting there to go to the airport to meet Gene. \n\n\"I know and I'm thinking about it- I suppose you have name in mind?\" \n\n\"I do but I want to hear yours first,\" Nathan replied. \"I propose that a week from today we sit on the beach, make s'mores and decide on a name for our daughter-or son.\"\n\n\"It's a date- do you suppose that Barb chose a name for their baby?\"\n\n\"I doubt it, but anything is possible.\" Nathan replied. \"I'm wondering if she'll come to the airport with us.\"\n\nThat was the hundred-thousand dollar question. Kevyn called but had to leave a message. Barb hadn't returned the call.\n\n****\n\n\"Are you going to meet your brother?\" Thorne asked. If she wasn't going to go, he had things that he could be doing, such as getting the club open for reopening, and going over some sketches for the new club.\n\n\"I-yeah, I'm going,\" she finally replied. \"Give me a minute to change clothes.\"\n\n\"Are we going with the others or going to the airport?\" Thorne asked.\n\n\"With the others,\" Barb replied even though she didn't really want to.\n\nAs she changed clothes she almost changed her mind several times. She reminded herself that she was going for Gene and for no other reason. She looked at the time and realized that she had to hurry. The others were getting into the SUV vans when they pulled up. The only spaces left were in the van with Hans, Juliette and the kids. That was enough to make Barb suggest to Thorne that they drive themselves.\n\n\"Why?\" Thorne asked, \"There's plenty of space.\"\n\nHe helped her in and then got in himself.\n\n\"Hi Aunt Barb and Uncle Thorne,\" all three kids greeted. \n\nThorne gave them a cheerful greeting while Barb barely mumbled hello.\n\n\"Aunt Barb?\" Wanda called, \"Have you felt him move? Does it tickle?\"\n\n\"Yes and no,\" Barb replied now wishing that she had forced the issue of driving to the airport.\n\n\"Can I feel? Aunt Louise lets us touch her stomach...\"\n\n\"No, you can't feel,\" Barb replied tersely. \"If you've felt Aunt Louise's stomach, then you know what mine feels like.\"\n\n\"Yeah, but maybe we can talk to your baby like Celeste can,\" Wanda persisted. \"Celeste doesn't talk to Aunt Louise's baby.\"\n\nThorne found this interesting and thought he knew the reason why. Louise and Nathan's child was secure in the knowledge that he or she was loved and cared for. His and Barb's child knew that his mother didn't care for him and Celeste was his advocate. He wondered what their relationship would be like after his birth and suspected that it would be close. He also realized that the two older Yancy children now knew what their stepfather was. The comment about Celeste talking to the baby confirmed it. He looked over at Barb and shook his head. There was nothing to say.\n\n****\n\nGene settled back in his seat after taking a last look at Pittsburgh from the sky. The past two weeks had flown by but not once did he question his decision to move. His resignation was accepted with a mixture of relief and regret. The relief was because on occasion a bit of the old angry Gene made an appearance. Everyone was waiting for him to reemerge. After each incident, the new Gene apologized to whoever he had offended. The regret was because he was damned good at what he did and he was pulling in clients left and right. To his surprise, the office threw him a farewell party. Apparently they had liked him well enough for that.\n\nThe return email that he got from Dana wasn't encouraging. It basically wished him well and asked that he dropped her a line every so often to let her know how things were going. It was over. He threw a self-pity party where he thought about having 'just one drink', but called his sponsor instead. They spent the evening playing a game with dominoes called 'chicken foot'. By the end midnight, he was back on track and glad that he had decided to move to California, instead of Florida. \n\n\"Goodbye, Pittsburgh,\" he murmured as closed his eyes.\n\nThe bumping of the wheels hitting the runway woke him up. He was amazed that he had slept so well and actually felt rested. He reminded himself that he had been up all night and had gone to work that day to finish things up. He looked out of the window, drinking in the sight of the lit palm trees. At that moment his remaining doubt about moving vanished. He was going to be with his family where he belonged.\n\n*****\n\n\"There he is!\" Wanda yelled and began jumping up and down calling Gene's name. Victor joined her and waved frantically when Gene saw them. He smiled and hurried to meet them. He greeted the children first remarking on how much they had grown but he saw the biggest difference in Celeste. She didn't seem as meek as he had remembered and she was more affectionate toward him.\n\n\"Welcome!\" Kevyn said as she hugged him, \"We're glad that you're here.\"\n\nAs he greeted everyone he wondered where Barb was. Finally he spotted her and Thorne standing off to the side. It reminded him of his first visit to California only that time he had been the one standing with her. He and she against them was how they saw it. After he greeted everyone else, he went to Barb.\n\n\"Hey sis,\" he said and opened his arms.\n\nBarb hesitated and stepped into Gene's embrace. Gene stepped back and looked at her taking in the sad, confused and angry look in her eyes. While Louise looked radiant, Barb looked miserable.\n\n\"You must be Thorne,\" Gene said extending his hand. \"I'm Gene.\"\n\n\"Welcome,\" Thorne said, liking Gene's firm handshake. \"I look forward to getting to know you.\"\n\n\"Come on,\" Kevyn prodded. \"Let's get him to the apartment.\"\n\nOn the way back, Barb made sure to ride in a different vehicle. They rode back in the van with Kevyn and Patrick. It wasn't much better, but at least there weren't the endless questions from Wanda about pregnancy and the knowing looks from Celeste.\n\nGene loved the apartment, although it was much smaller than he was used to. He was touched by the effort that went into it to get it ready.\n\n\"There's plenty of food and dinners are in the freezer,\" Louise said. \"Let us know if we forgot anything.\"\n\n\"From the looks of it, I don't think that you did,\" Gene replied. \"I don't know how to thank you for this.\"\n\n\"You just did,\" Kevyn replied. \"You must be tired; someone will come for you around six for the cookout at our place and bring your appetite. Lou and Barb made grand mom's rice pudding.\"\n\n\"And if you can't wait,\" Louise chimed in, \"there's some in the fridge.\"\n\nGene grinned. He hadn't had rice pudding like that since their grandmother died. He hugged and kissed the women and children and shook hands with the men except for Leon. Him, he gave a hug. When he was finally alone, he sat on the futon and looked around. After several minutes, he stood up, stretched and went to the fridge. He sat on a stool with a container of rice pudding in his hands. Tears trickled down his face as he took the first spoonful, held it in his mouth and then swallowed. He was finally at peace.\n\n****\n\nThe night passed slowly for Barb. While she was glad that Gene was there, but it didn't have the calming effect on her that she thought it would. It wasn't until late morning that she understood why. She hadn't believed that Gene had really changed. She thought that he was playing them in order to get a piece of the Sinclaire pie. She didn't really expect him to settle for Kevyn's tiny apartment but he had. She saw him actually wiping away tears. Even Celeste, who had never really warmed up to Gene, was holding his hand. Her one true ally was gone.\n\nShe debated about going to the cookout, but decided to go. She had nothing else better to do other than shopping and she could only do that online. Thorne had been clear that she was to go nowhere without him even if Adrianna and Cheung went with her. She dressed in a mint green maternity slacks with a matching top and grabbed a sweater on the way out.\n\nAs she passed the rooms where the wolves rested, she heard a giggle and then a moan of pleasure. She hadn't been touched in weeks. She stopped at the top of the stairs when she remembered something that Adrianna told her.\n\n\"Making love with ones mate is as necessary as needing blood. One of the major indicators that one is who they are meant to be with is that they are unable to be apart for long. It can be done, but it is very unpleasant.\"\n\nThorne had sex with her twice since the pregnancy. She was sure that he wasn't going to anyone else so that left him taking care of himself and obviously; he wasn't missing her or sex. She continued down the stairs thinking about all the information that she knew and came to one conclusion. Samantha Blackwell had been right. She had been stupid in thinking that all she needed was her looks. She hadn't used her brain and kept making the same mistakes over and over again. She realized in retrospect that she should have chosen the option to be a mate and mother. How hard could it have been? Thorne's mother did it. As it was, the money that Thorne allotted to her was a mere pittance to what he had. \"Too late,\" Barb muttered as she went down the stairs.\n\nThorne was waiting for her at the bottom of the stairs. He gave her a curt nod and walked her out to the car without speaking. He helped her in without the kiss on the cheek. He didn't see it as being necessary. Word of the Blackwell/Sinclaire and Yancy alliance had spread as it was meant to. The few remaining hunters had vacated the area to inform their higher ups. They would be back at some point, but for the moment, all was well.\n\nThe club reopening was scheduled for the following week. Thorne was looking forward to having a little normalcy in his life, even if it was for a short time. Aidan's arrival would change things once again, but it was a change that he was looking forward to. He remembered with a smile the good times that he and his brothers had with their father before it all changed. He made a silent promise to his son that no matter what happened, he would be protected and loved.\n\n\"Are you going to open the club again soon?\" Barb asked uncomfortable with the silence.\n\n\"Next week,\" Thorne replied. \"Why do you ask?\"\n\n\"Just curious,\" Barb replied and said no more.\n\nThe party had already started and there were more people there than Barb had anticipated. The entire Sinclaire family, including Joseph, was there. Gene was sitting at a table talking to Patrick when they walked in. He excused himself and went to meet her.\n\n\"We weren't sure that you were coming,\" he said hugging her and nodding at Thorne.\n\nHe led her to the table where he was sitting with Kevyn and Patrick and offered her a seat.\n\n\"Would you like something to drink?\" Thorne asked.\n\nIt was courtesy and nothing more. All of them, Gene included knew it.\n\n\"Sure,\" Barb replied without looking at him.\n\n\"We need to check on things,\" Kevyn said as she stood up. \"We'll be back- Barb do you need anything?\"",
        "\"No, I'm fine,\" she replied wishing that she had stayed home.\n\n\"So,\" Gene said when they were alone. \"You two really don't like each other do you?\"\n\n\"No we don't,\" Barb conceded, \"and it isn't going to change.\"\n\n\"Are you really going to leave?\" Gene asked. \"I mean you don't like each other, so how you ended up in bed with him... never mind - I do know, but my point is that you're having a baby with this guy...\"\n\n\"Spare me ok?\" Barb snapped. \"I've been hearing it since I got pregnant and I don't want to hear it again. I'm leaving and that's all there is to it. I don't want to be a mother to anyone's kid and I have no interest in working things out with him.\"\n\nGene held his hands up in surrender and changed the subject to where she was moving to.\n\n\"Hawaii - I've always wanted to go there.\"\n\n\"It is beautiful and expensive,\" Gene replied. \"Sis - doesn't it bother you that you'll be away from family? Can't you find a place here?\"\n\n\"I don't want to find a place here,\" Barb replied. \"I hate this state and wish that I had never come here. My life has been nothing but hell since I stepped foot here and I can't leave here fast enough.\"\n\n\"How much of this is your doing?\" Gene asked. \"I hated it here too but that was my doing. I saw this place as my undoing when it really wasn't. It was here that I began to change...\"\n\n\"Well good for you!\" Barb rudely interrupted.\n\n\"I allowed my jealousies and insecurities color my view of not only this place; but of our family,\" Gene said ignoring the interruption. \"I saw Leon as a big ass kisser, when that wasn't the case. Nathan saw him as he really is- a man who fucked up and came back on top. I was jealous of the ease in which he deals with people. Even at his worst, people flocked to him. He has a way with people, like dad used to have. It's something that I never got the hang of.\"\n\n\"I suppose that you're going to tell me that you were jealous of Louise and Kevyn next?\" Barb asked snidely.\n\n\"As a matter of fact I am,\" Gene replied. \"For me jealousy was the root of all my issues. It was far easier for me to be jealous and to cut them down than it was for me to figure out a way to improve myself. I was jealous of Kevyn's ability to take charge of a situation and to make choices that none of us wanted to make. Instead of helping her, I undermined her every chance I got. I did the same with Louise. I couldn't have taken care of mom the way that she did. She has a grace that none of us has. When I came out here for the wedding, I was greener than your outfit and I made some stupid mistakes. In the end it cost me Dana...\"\n\n\"She isn't taking you back? I thought that you were working things out.\"\n\n\"So did I,\" Gene said softly, \"but it's over and it's time for me to move on.\"\n\n\"That's it?\" Barb asked surprised. \"You're just going to accept that?\"\n\n\"Yes,\" Gene said softly, \"I am and I'll tell you why. I hurt her. I destroyed the trust that she had in me. I failed her as a man and a husband. She has every right not to trust me. Even you wondered if I was for real and you're my sister. Why wouldn't she wonder the same? If we're meant to get back together, we will. Let me ask you something- what would it take for you to stay?\"\n\nThorne returning with her drink interrupted her reply. Thorne handed her the drink and sat down. He and Gene looked at each other not speaking until Gene broke the silence by asking Thorne what he did for a living. Before long they were chatting comfortably. Barb got up and left the table feeling left out. She walked around the grounds avoiding people. She thought that she had succeeded until she ran into Celeste.\n\nThey stared at each other not moving until Celeste reached up and put her hands on Barb's stomach. Barb wanted to pull away but didn't. She was afraid of what would happen if she did. She flinched as Celeste's small warm hands massaged her belly in the same way that Thorne did except that Celeste's touch felt more intimate. Barb realized that it was because the baby was actually talking to her. Finally Celeste removed her hands and looked up at Barb.\n\n\"What did he say?\" Barb asked anxious in spite of herself.\n\n\"He says that there's still time.\" \n\n\"Time?\" Barb asked, \"Time for what?\"\n\n\"He said that you know,\" Celeste replied.\n\n\"Did he say anything else?\" Barb asked, not sure if she really wanted to know.\n\n\"The rest was for uncle Thorne and I can't tell you.\"\n\nBarb watched as Celeste walked back toward the party and decided to follow her. With any luck, she might be able to overhear what Celeste said to Thorne. To her disappointment, the little girl joined Wanda and Victoria at a table and showed no signs that she was going to leave any time soon. \n\n\"Are you alright?\" Louise asked from behind her.\n\n\"Yeah, thanks,\" Barb replied and walked away. \n\nIt was much later in the evening before the adults were alone. Patrick had movies for the kids running in his home theater and had hired someone for child care. Now that the children were gone, the talked to things of a purely adult nature. \n\nAs Gene listened, he got the feeling that he was missing something. The conversation was normal, but there were undercurrents of something else that he couldn't identify. Leon watched Gene and saw his confusion. It was time. He and the others decided that the sooner Gene knew the better. Then they decided that he-Leon would be the one to tell him. Leon kissed Nadine on the cheek and excused himself.\n\n\"Gene-let's walk,\" Leon said tapping him on the shoulder.\n\nGene stood up and followed Leon away from the group.\n\n\"How do you like your new place?\" Leon asked as they walked.\n\n\"It's great and if I'm not careful I'll be as big as a house! Are there any gyms close to where I'm living?\"\n\n\"There's a couple- I can work out with you just so it's in the evenings. Have you been to a meeting yet?\" Leon asked.\n\n\"I went to one today and touched base with a sponsor last night,\" Gene replied. \"Leon, did you know that Barb's leaving?\"\n\n\"Yeah I know and I know about the situation between her and Thorne.\"\n\n\"And?\" Gene asked.\n\n\"And what?\" Leon asked. \"She's a grown woman capable of making her own decisions.\"\n\n\"She's our sister, too!\" Gene retorted. \"You're just going to let her go?\"\n\n\"What do you want us to do?\" Leon asked. \"All of us have reached out to her several times and we get bitch slapped. She knows that we want to be together as a family and she's fighting it by deliberately keeping us as arm's length. Frankly, we're tired of it.\"\n\n\"Yeah, I can see that,\" Gene said blowing out a breath. \"If it's all the same to you, I'm going to try to talk her into staying.\"\n\n\"Go for it and good luck, but Gene if she stays, we won't accept her treating us like shit anymore,\" Leon replied. \"We've had enough. But I wanted to talk to you about something else. I was watching you before we left for our walk. You looked...confused. You heard the conversation but knew that you were missing something; am I right?\"\n\nGene stopped walking and looked at Leon for a moment and then continued waking. He had the feeling that a bomb was about to be dropped on him.\n\n\"Yes-Leon there's something weird going on here isn't there?\"\n\n\"That's putting it mildly,\" Leon said chuckling, \"let's keep walking.\"\n\n\"What drugs are you on?\" Gene asked in disbelief two hours later. \"Vampires and wolves?\"\n\n\"I know that it's hard to believe,\" Leon replied. \"I didn't believe it until Nadine showed me...\"\n\n\"And Louise is a vampire too? All of the Sinclaires? That little girl - what's her name? Victoria, too?\"\n\n\"Yes and if you think about it, the clues were all there,\" Leon said, \"You just didn't recognize them for what they were.\"\n\n\"I did wonder about the nighttime thing,\" Gene confessed. \"I thought it strange that Victoria could stay up all night and how nothing really happened during the day...\"\n\n\"Gene?\" Leon called, when he stopped talking.\n\n\"I'm just - processing, are you sure that you aren't using again because what you're telling me is impossible.\"\n\n\"Is it?\" Leon asked. \"Hard to believe I agree with but impossible? No it isn't. I'm proof that vampires do exist.\"\n\n\"So,\" Gene said as he sat down on the grass, \"You're like Barnabas Collins?\"\n\n\"Okay, here's rule number one,\" Leon said. \"Never, ever call a vampire a vamp. Rule number two, don't ever make reference to Elvira and rule number three; don't compare television vampires to the real thing. If you do any of the above; Nadine will give you a lecture that will put mom's to shame.\"\n\n\"Got it,\" Gene said laughing. \"I suppose that secrecy is a given?\"\n\n\"It is imperative,\" Leon replied. \"Our safety depends on it.\"\n\n\"Shit,\" Gene said when Leon told him about the hunters. \"Shit.\"\n\n\"So you understand why you can't talk about this to anyone - even Dana.\"\n\n\"I get it, but why are you telling me this?\" Gene asked.\n\n\"Because we thought that you deserved to know,\" Leon replied. \"And it was only a matter of time before you figured it out. Telling you is also our way of telling you that we trust you. Now, if you feel that you can't keep this quiet; I'll erase your memory and in your mind this conversation didn't happen.\"\n\n\"Why haven't Kevyn and Juliette changed? Do the kids know?\"\n\n\"It isn't a requirement that the female mate change,\" Leon explained. \"Louise changed because she wanted to be sure that any children that her and Nathan had were born vampire. If she hadn't changed and the baby was a girl, there was a fifty-fifty chance that the baby would be born human. If Juliette and Kevyn weren't thinking of changing, they are now. This thing with the hunters isn't over and if they turn it will go a long way toward easing our minds. They will be better able to protect themselves and the kids, who by the way know everything.\"\n\nThey talked until just before dawn and agreed to meet again that evening.\n\n\"There's a lot more that I need to tell you,\" Leon said. \"Do you mind if I drop in later?\"\n\n\"I would like that,\" Gene replied. \"I might even share my rice pudding with you.\"\n\nBarb hung in the shadows watching. Somehow she had missed Celeste's talking to Thorne. Now she was just listening to hear what she could.\n\n\"You can join us if you want,\" Leon said out into the darkness. \"I'm not telling him anything that you don't already know about.\"\n\n\"So you've told him about them?\" Barb asked innocently.\n\n\"Them?\" Gene asked. \"If you're talking about the hunters, yes, he told me.\"\n\n\"Not the hunters,\" Barb said ignoring the voice warning her to be quiet. \n\n\"We're going to talk about that tonight,\" Leon said his tone warning her off.\n\nGene looked from Barb to Leon and then back at Barb realizing that she was trying to cause trouble.\n\n\"I'm sure that Leon will fill me in on the rest of it tonight,\" Gene said looking at her.\n\nBarb blushed and started to walk away but Gene stopped her. He waited until they were alone before speaking.\n\n\"What the fuck is wrong with you?\" He asked. \"You've been feeding me this shit about how the others aren't trying to understand when it's the other way around. You just tried to put Leon on the spot- why? So you can have the one up on him? Don't you think that it's time to grow up? We're not fucking kids anymore.\"\n\nBefore she had a chance to respond, Gene stomped off.\n\n\"Tick tock,\" the voice whispered.\n\nBarb stood frozen. Was it her imagination or was the voice growing softer each time it spoke? She was still standing in the same spot when Thorne found her.\n\n\"It's time to go, are you ready?\"\n\nOn the drive home, Barb decided to ask Thorne what message the baby had for him.\n\n\"It had nothing to do with you, if that's what you're asking,\" Thorne replied without looking at her. \"But if you must know, he wants Celeste to help decorate his room.\"\n\n\"And she couldn't tell me that?\" Barb asked irate.\n\n\"You only asked because you thought that it was about you,\" Thorne said. \"Why do you even care? You aren't going to be involved in his upbringing.\"\n\nThe rest of the drive was made in silence. Thorne parked in the garage, made sure that Barb was in the house safely and went to his club. It had been a few days since he and Ethan had heard from Olivia so he offered to call. The call took no more than ten minutes and everything was fine. His plan was to work on the reopening and to begin calling staff in. Instead he worked on the plans for the new club that he and Noel were opening. Time flew by quickly and before he knew it; Eustace Matthews was sitting across from him.\n\n\"I heard about the dinner,\" he said. \"Congratulations. So how are things otherwise?\"\n\n\"I never realized how hard it is to change ones behavior,\" Thorne said after a moment. \"As you said I would, I slipped and said what was exactly on my mind- but I didn't apologize for what I said because I meant it.\"\n\n\"I see and toward whom was this outburst directed?\"\n\n\"Barb,\" Thorne replied. \"I'm tired of her and I'm tired of her blaming me and everyone else for her part in the decisions that she made.\"\n\n\"What was her response to this?\"\n\n\"Nothing,\" Thorne replied. \"I spoke with Aidan and left.\"\n\n\"Who's Aidan?\" Eustace asked.\n\nThorne told him about Celeste and the baby and the baby's reactions to Barb.\n\n\"Damn,\" he said softly. \"You and the Sinclaires have hit the jackpot as far as power is concerned, but Barb displays no real gifts other than a strong intuition that she ignores. The fact that she isn't telepathic also supports your claim that you aren't mates. What about sex?\"\n\n\"I've touched her twice since the pregnancy. The last time was months ago and I have no desire to touch her again. She asked me if she could be with other people after she had the baby.\"\n\n\"What did you tell her?\"\n\n\"I told her that she could do whatever the hell she wanted after the baby was born and I meant it. If there was any way to break the bond with her and not the baby I would do it in a heartbeat but they come together.\"\n\n\"You felt nothing when she asked that question?\" Eustace asked.\n\n\"I felt-curiosity,\" Thorne said. \"I wondered if that was the same question that my mother asked my father or did he catch her in the act? But I didn't feel anger - at least not in the way that you think I might. Barb is what she is and as I told her, I won't accept responsibility for her actions. What she does is up to her as long as she leaves my son out of it.\"\n\n\"Have you thought about how you're going raise a child alone?\" Eustace asked. \"What about your club and other business interests?\"\n\n\"My son takes precedence over everything,\" Thorne replied. \"I'm already making arrangements for the club to be run by one of my managers and I will be able to work from home. All of my other business interest will be run in the same manner. All of the Yancy women with the exception of his mother will provide the female influence that he needs. I know that it won't be the same as a mother, but it's a hell of a lot better than what his mother is willing or able to give him.\"\n\n\"What will you tell him about his mother when he's old enough to ask?\"\n\n\"The truth,\" Thorne replied. \"Of course how old he is when he asks will determine how much I tell him, but he'll hear about me too. I won't place all the blame at his mother's feet. The door for him to reach out to her will always be open.\"\n\n\"You've thought through this,\" Eustace commented. \"Did your mother and Barb meet?\"\n\n\"They met at the dinner and as I expected, they didn't get along.\"\n\n\"How involved is your mother going to be in the baby's life?\"\n\n\"I don't know,\" Thorne replied. \"The door is open for her as well.\"\n\n\"And Noel?\"\n\n\"Noel is the excited uncle to be,\" Thorne said with a smile. \"He's already got a child sized easel and art supplies stashed away.\"\n\n\"I think,\" Eustace said, \"that this is one lucky child. But Thorne, I'm going to give you the advice that Gretchen gives to new mothers- take time for yourself. Spend a couple of hours a week at the club. You have a whole network of people at your disposal.\"\n\n\"Noted,\" Thorne said with a nod. \"I know that I'm not fixed. I'm not even sure if that's possible but I would like to keep you on retainer for myself and Noel as well. He may never see you, but I want you there in case he decides that he needs someone.\"\n\nEustace left a short time later to escort Gretchen on her rounds. Thorne closed up and went home to rest. The first Lamaze class was that night. \n\n****\n\nBarb had a restless day. Not even shopping for her new condo settled her nerves. The baby seemed to be more active than usual and she wished that he would stop moving. Finally she got up and sat on the patio. The ocean breeze blew across her face and she inhaled the scent of the air. That more than anything she had tried seemed to calm her. Even the baby seemed to calm.\n\n\"What in the fuck is wrong with you? The question resonated through her head. Gene hadn't been the first to ask her that. He had accused her of being Jealous and childish told her to grow up. \"Tick tock\" was next and then Celeste's message from the baby-\"There's still time.\" Time for what? She wondered. Her and Thorne? \"Not going to happen,\" she murmured. \"I screwed up there,\" she added. A few minutes later she remembered that he said that she still wouldn't have had full access to his money so maybe she had made the right choice. For the second time in a few days, she wanted her old life back and again she was reminded that it was impossible. She sat on the patio until it was time for the Lamaze class. She changed into sweats and met Thorne down in the living room. He was talking to someone that she assumed was Monica. After the introductions were made, the class started.\n\nMonica started by talking about what the class would be about. She noticed that she had Thorne's full attention but only half of Barb's. \n\n\"One of the methods used to help control the pain of childbirth is breathing...\"\n\n\"Listen up!\" Thorne hissed at Barb.\n\nShe forced herself to pay attention and to participate in the breathing exercises. Like Monica, she noticed that Thorne was paying close attention.\n\n\"What else should we have on hand?\" Thorne asked.\n\n\"Tennis balls, hot water bottles and if you want a birthing ball,\" Monica replied. \"I think Gretchen has extra ones and if you like; I can bring one the next time I come.\"\n\n\"Add it to the bill,\" Thorne said as he walked her to her car. \n\nBy the time he was back in the house, Barb was already in her room and in her pajamas. He said goodnight to the baby, but said nothing to her which surprised her. She was expecting the 'this is for your own good speech'. She couldn't wait until it was over.\n\n****\n\nInstead of telling Gene about the Sinclaires, Leon took his laptop. It was the simplest way to do it. He sat back and watched as the expression on Gene's face turned from disbelief to shock to anger and then back to disbelief. He hit the replay button and watched it again and then again.\n\n\"They did that?\" Gene whispered. \"They raped women?\"\n\n\"Yes,\" Leon replied. \"My reaction was the same as yours.\"\n\n\"Kevyn and Louise- were they... were they...\"\n\n\"No,\" Leon assured him. \"Patrick will tell you that Kevyn saved his life. Nathan was a child of rape and had never hurt anyone.\"\n\n\"The twins....\"\n\n\"Were a product of rape. Victoria wasn't. Nathan's brother Joseph was not a product of rape.\" Leon said. \"This whole thing started, as Ethan said, centuries ago. They were told that it was a genetic thing that only finding their mates could cure. That doesn't make it right, but it's what they were told. The twins- Vanessa and Veronica have been trying to find out if there is any validity to that claim.\"\n\n\"And?\" Gene asked.\n\n\"So far they haven't found anything that supports it.\" Leon replied. \"There was a grandfather- Mitchell, I think his name was - who kept it thing going because he was a true serial rapist. He was killed trying to rape someone.\"",
        "\"Wow,\" Gene said. \"And Louise and Kevyn are alright with this?\"\n\n\"Of course they aren't alright with the rapes!\" Leon exclaimed. \"And neither am I, but they're doing everything possible to keep it from happening again.\"\n\n\"What about the victims?\" Gene asked. \"Have they gone to them?\"\n\n\"They're looking for them,\" Leon replied. \"When they are found, they are contacted and given the opportunity to meet with them. The mate of whoever the victim belonged to is always there, but as support and nothing more.\"\n\n\"How many have agreed to meet with them?\" Gene asked.\n\n\"A few, but not many, but then not many have been found.\"\n\n\"Don't they have prisons for this kind of thing?\" Gene asked still shocked.\n\n\"The thing that's hardest to get used to is that this isn't like the human world. The rules here are different although they are changing to be more like yours. When Katrina, Ethan's wife became a part of this society there was no protective services for children. There was no mandatory reporting of suspected abuse of any kind. There was no place for people in need to go. Now these things exist. Unfortunately, she had to be one of the victims before things began to change.\"\n\n\"And you're sure that Kevyn and Louise aren't being hurt?\"\n\n\"I swear to you that they aren't,\" Leon said. \"I told Patrick and Nathan that I would kick their asses.\"\n\n\"You gave the brother talk that I should have given,\" Gene said quietly.\n\n\"Yeah well- you can still give it,\" Leon replied. \"I'm sure that they're expecting you to approach them.\"\n\n\"I will... so that's what Patrick was talking about,\" Gene said almost to himself. \"He told me to call him if I ever needed someone to help share my guilt.\"\n\n\"Probably,\" Leon said. \"Any and all of them will answer any questions that you have. But Gene, I can't stress enough how important it is that you keep the vampire thing under wraps.\"\n\nGene nodded, hesitated, and then asked the question that he had been thinking about ever since Leon told him that vampires existed.\n\n\"Could I be turned if I wanted to?\"\n\n\"I think that you need to think about it,\" Leon replied. \"I turned because Nadine was my mate and, like Louise, I didn't like the odds of having my daughter - if I had one, be born human.\"\n\n\"You make it sound as if that's a bad thing,\" Gene said almost offended.\n\n\"I don't mean for it to sound that way because it isn't. It's just that she would be susceptible to human illnesses and dangers. Then the decision as to whether she should be turned when she's old enough or do we wait until her mate finds her has to be made. My turning takes the guess work out.\"\n\n\"But if I wanted to turn I could?\" Gene pressed.\n\n\"You need to hear what's involved,\" Leon said, \"and then you have to be sure it's what you want because once it's done; it's done. Take your time and sleep on it- there's no hurry.\"\n\n\"I guess you're right,\" Gene said. \"I'm still trying to wrap my head around that other thing.\"\n\n\"The best way to do that is to talk to them about it. They won't lie to you or sugar coat it. Look, I have to get going. I'll call you tomorrow and I'll take you out to where you'll be working.\"\n\n\"Am I working with you?\" Gene asked. \"I thought that I would be doing something for Patrick.\"\n\n\"In a way you are, you'll be working in the investment department of Sinclaire enterprises.\" Leon said. \"From what I hear it's a sweet assed deal. You'll have your own office with one of those fancy coffee machines and your own secretary.\"\n\n\"Are they all vampires?\" Gene asked.\n\n\"Mostly but there's a few wolves there too, but I think that your secretary is vampire.\"\n\nAfter Leon left, Gene called Patrick's cell phone.\n\n\"I know what you mean,\" he said when Patrick answered. \"And we need to talk.\"\n\n*****\n\nBarb was getting more uncomfortable by the day and it wasn't just because of the pregnancy. She wasn't sleeping well, even with the mild sedative. Her mind wouldn't allow her to rest and, because she was restless, the baby was restless. She tossed and turned for most of the day before she finally got up and began to pace. She hadn't spoken to any of her siblings since the party for Gene, preferring to stay to herself. Part of the anxiety was because she felt something was missing. She wracked her brain trying to figure out what it was. She was sitting on the patio when it occurred to her- she hadn't heard the voice since it said that last soft 'tick tock'\n\nShe looked down at her belly when she felt a particularly hard movement.\n\n\"Will you stop it?\" she said exasperated. And the movement stopped but only for a few minutes. Now near tears, Barb tried to lie down. She felt alone. She waited for the voice to ask her whose fault that was, but it remained silent. \n\nHer guards were making rounds and the only one with her was Cheung whom she couldn't stand. He never spoke to her, other than to tell her what the escape plan was or something along that nature. Adrianna was meeting with Thorne and, even if the wolves were available, she liked them no more than she liked Cheung.\n\nFinally she had had enough of her self-imposed exile. She grabbed her phone and hit a number for speed-dial not caring who it belonged to. \n\n****\n\nKevyn was getting ready to join Patrick in the Jacuzzi when her cell phone rang.\n\n\"Damn it,\" she swore and thought about ignoring it. The thought that it might be an emergency made her answer it.\n\n\"Kev?\"\n\n\"Barb?\" Kevyn asked surprised. \"Are you alright? Is the baby coming?\"\n\n\"I-I'm fine-no I'm not in labor. I just wanted to call.\"\n\n\"Okay... what's up?\" Kevyn asked not knowing what to make of the phone call. Louise was the empath not her.\n\n\"I couldn't sleep and decided to call somebody. I just hit speed dial and it was you.\"\n\n\"Okay, but are you sure that you're ok?\"\n\n\"Baby-wise, I'm ok,\" Barb replied. \"I just want it - I mean him - out of me. I didn't ask for all of this... \"\n\n\"I know you didn't,\" Kevyn said still shocked.\n\n\"All I wanted was to live like the people on that show 'the rich and famous' remember us watching that?\"\n\n\"Yeah, I do. Next to the cooking shows, it was mom's favorite show.\"\n\n\"I used to imagine that I lived in a house like that,\" Barb said. \"I would have a cute little red convertible and people to wait on me.\"\n\n\"I think that we all had those daydreams,\" Kevyn said.\n\n\"You did too?\" Barb asked surprised.\n\n\"We all did,\" Kevyn replied. \"I think that it got us through some pretty hard times.\"\n\n\"But-but you had a chance at that with Clay Robinson.\"\n\n\"Clay Robinson was a crook and a murderer,\" Kevyn replied. \"I know that you don't believe it, but I saw him kill someone. I didn't want a life like that, at the expense of other people's lives. He was a drug dealer - he was Leon's dealer for a while - did you know that?\"\n\nBarb's silence told her that she hadn't known.\n\n\"You're probably busy, so I'll let you go,\" Barb finally said.\n\n\"No- it's....\"\n\nBut Barb had already hung up.\n\n\"Everything ok?\" Patrick asked from the bathroom doorway.\n\n\"I don't know,\" Kevyn replied as she dialed Louise's number hoping that she wasn't asleep. Nathan had become almost obsessive about her getting enough rest since the baby's birth was just a few short weeks away. As the phone rang, she wondered what Patrick would be like and decided that he would be even worse than Nathan.\n\n\"Lou? You still up?\" Kevyn asked.\n\n\"I just laid down, what's up?\" Louise asked and then listened as Kevyn told her about the conversation with Barb. \"She called you?\"\n\n\"She said that she just hit a button on speed dial and it happened to be me.\" Kevyn replied. \"You, Leon and Celeste are the family empaths, but at the moment you're the strongest of them so what do you think?\"\n\n\"I didn't hear her so whatever I say will be a guess,\" Louise said. \"I think she's at the point where she has to decide what to do about us. She's for all practical purposes is alone and, yes, she chose that, but she's feeling it. The closer her due date comes, the more alone she's going to feel. Thorne is with her but he isn't, so she doesn't have the closeness that she really wants and needs. Even if she asked him for it, she won't get it. He doesn't love her.\"\n\n\"So expect more of the sporadic, short phone calls then,\" Kevyn said.\n\n\"That's my guess,\" Louise said. \"And Kev- don't expect an apology. Her calling is probably it.\"\n\nKevyn hung up and let out a sigh. \"One small step...\"\n\n*****\n\nBarb dropped the phone as if it was something hot. What had gotten into her? A moment later she realized that a little of her anxiety was gone-enough that she could finally sleep a little. Even the baby cooperated by being still. When she woke up, she felt a little better. \n\nThe next day the anxiety returned and she hadn't heard anything from her inner voice. By the end of the day, she found herself pushing an autodial button. This time it was Juliette who received a call. As with the call to Kevyn, it didn't last long before she suddenly hung up. This continued until there was one person that she hadn't spoken to. It struck her as odd that she hadn't made repeat calls to anyone. But here it was- the anxiety. This time she didn't the autodial for Louise's number; she dialed it and was about to hang up when Louise answered the phone.\n\n\"Barb?\" Louise said, \"Please don't hang up.\"\n\nBarb didn't say anything, so Louise continued.\n\n\"You don't have to say anything if you don't want to, but just listen. I don't know what I did or didn't do that made you so angry. Tell me what it is and I'll apologize but don't let whatever it is stop you from being a part of us. You miss us; I can feel it and you're scared. I can feel that too. Let us help you through the rest of this pregnancy. You don't even have to explain yourself - just tell me what I did wrong and let us help you.\"\n\nBarb's mouth was dry. She licked her lips as she tried to think of a sarcastic response, but she couldn't. She couldn't even think of what it was that Louise had done wrong. Louise had always been the one to reach out to her no matter how horrible she had been treated. She searched her memory for when the unreasonable contempt for her younger sister really began.\n\n\"You said it had something to do with me not wearing hand-me-downs- was that it? Is it because I wasn't teased the way that you and the others were?\" Louise asked.\n\n\"Yes...\" Barb finally whispered. \"You got new of everything! You were so good... what a good little girl you were!\" Barb spat finding the lost sarcasm. \"What do you want to be when you grow up Louise? A nurse cuz I wanna help people. It was never a fashion model or a doctor and even now you've got all of that money and where do you shop? Fucking target! Just what are you trying to prove? That you're better than I am? I watched you grow up and I saw the way that men looked at you and you acted as if you didn't know! That grocery store manager you worked for... he had it for you bad! And you just threw it away! I can understand Kevyn walking away from Clay Robinson but you walking away from the heir of a supermarket chain? You could have ...\"\n\n\"You're mad because I wanted to be a nurse?\" Louise asked in disbelief. \"You're mad because I didn't want to be some high profile model or whatever? Are you serious? You are pissed because... you know what? You aren't even making sense! That store manager by the way was married and I don't care how much money he had I wasn't interested...\"\n\n\"Oh but you managed to wrap Patrick Sinclaire around your little finger didn't you? You didn't hesitate in jumping into bed with Nathan Sinclaire and getting knocked up did you?\"\n\n\"Nathan and I belong together,\" Louise said. \"And I didn't come out here looking for a rich man to marry - that was you! All of your life you've wanted what other people had and that hasn't changed. You got your money but you're still not happy and I'll tell you why - we have something that you don't have. We're happy! And don't give me that crap about how I wouldn't say that if they didn't have money because you know that it isn't true. You had a mate - Hans. But you judged him by what he did for a living. You're pissed at Juliette because she now has what you wanted and she's happy. You're pissed at all of us for the same reason so just be honest about it and move on. I'll tell you one more thing, if you leave that's your choice, but don't you dare say that it was because your family didn't want you. It was you who didn't want us!\"\n\nBarb opened her mouth but no sound came out. She could hear Louise's rapid breathing on the phone and felt her anger. She hung up and threw the phone on the bed.\n\n*****\n\nLouise took slow deep breaths to calm her anger. She was actually surprised that Nathan hadn't come in and taken the phone from her.\n\n\"It was a conversation that needed to happen,\" he said as he wrapped his arms around her. I was listening to the baby's heart beat and she's fine. Lie down and let me rub your feet.\"\n\nAs Nathan rubbed her feet, Louise thought about Barb. She really hadn't meant to be that harsh with her but she had had enough and as much as she was enjoying being pregnant, she was ready for it to be over. \n\n\"Have you thought of any baby names yet?\" Nathan asked trying to distract her.\n\n\"How about Nathan Jr. if it's a boy?\" Louise replied distractedly.\n\n\" That's called a cop out and one Nathan in the family is enough. I was thinking something like Martin Victor...\"\n\n\"After our fathers,\" Louise murmured misty eyed.\n\n\"I think that it's appropriate,\" Nathan said. \"I didn't know your father, but I know that I would have liked him. He was a man that loved his family as I love you and her. Actually, I like Victor Martin better- it flows better. What do you think? And if this baby really is a girl, we'll save it for when we have a son.\"\n\n\"I think- I think that I like it,\" Louise said smiling through tears. \n\nNathan lay down next to her and took her into his arms. Gretchen had warned him that as the due date neared she would become more emotional. He like her was going to be glad when the baby came even though the extra perk of the super intense orgasms would go away. She was becoming more uncomfortable which made him unhappy. She couldn't sleep longer than an hour lying down. It was easier for her to sleep sitting up with her back against his chest. He kissed her head and hugged her.\n\n\"I also took the liberty of coming up with a name for our daughter,\" Nathan said. \"I'm kind of letting the cat out of the bag, but we know about your genealogy because we have someone working on it. We were curious about where your family got their gifts from and that's when we found out about the connections between our families. Your father's ancestry began in South Africa- the Zulu tribe. The tribe has healers called Sangomas who were trained in several areas including tending to social disharmonies. They learned humility, divination and how to counteract witches. I know that this is a long explanation but I want you to understand why I like this name.\"\n\n\"It's alright- I want to know,\" Louise said. \"I always wondered where we came from.\"\n\n\"Well there's Cherokee too and that is a very strong line as well. Your mother's and grandmother on your paternal side ancestors were elders in the tribe. They were also strong empaths and warriors. The point is this- your family is a powerhouse that has intersected with our family for years. Anyway, one of your female ancestors on your father's side was a Zulu healer. Her name was Khanyisile which means bright light.\"\n\n\"What was the Cherokee name?\" Louise asked after thinking for a minute.\n\n\"Ahyoka which means bringer of happiness,\" Nathan replied. \"I like that one too and the name would definitely but somehow...\"\n\n\"Khanyisile feels right,\" Louise finished for him. \"I like it and if we have another girl we'll name her Ahyoka.\"\n\nThe baby moved as if giving approval.\n\n\"Maybe you're right and it is a girl,\" Louise said suddenly sleepy. She cuddled against Nathan and fell asleep.\n\n****\n\nBarb ranted and raved while Adrianna and Cheung played chess. They no longer paid attention to her ranting - they had gotten used to it. Finally exhausted, Barb sat down. She looked at the printouts that Monica had given her from the Lamaze class and threw them on the floor. \n\n\"You must calm yourself,\" Cheung finally said. \"Such anger is not good for the child and it is wasted energy.\"\n\nBarb bit back a retort and decided to take a shower. While she showered, her anger cooled enough that she could think rationally. Deep down she knew that Louise was right and that's what made her angry. In retrospect, she realized that she had always been jealous of the good people that she knew. It was just that she knew that she couldn't get away with tormenting them the way that she could Louise. She had thought that she could get what she wanted with just her looks and yet her sisters weren't as beautiful as she was... they weren't ugly- they were pretty but yet they had everything that she had ever wanted except in Louise's case; a baby.\n\nIt all boiled down to one word: Jealousy.\n\nLouise had been right in saying that she had always wanted what others had. She thought about the prom dress. By the time her grandmother had finished it, it was gorgeous. She had refused to see the beauty of it. It was the fact that it wasn't new. It was ...\n\n\"It's about time,\" the voice said startling her.\n\n\"I thought that you were gone,\" Barb whispered.\n\n\"Almost, but not quite,\" the voice replied. \"You had to experience truly being alone, but tell me what are you going to do now? Are you going to go off halfcocked or are you going to start listening to me as you should have been?\"\n\nBarb swallowed hard and picked up the phone and dialed Louise's number. She figured of all of them, she was the one most entitled to an apology. She grimaced when Nathan answered the phone.\n\n\"Barb, is everything alright?\"\n\n\"Yeah- is Louise around?\"\n\n\"She's sleeping- can I take a message?\"\n\nBarb's courage began to wane. She knew that if she didn't say it then, she wouldn't say it.\n\n\"Just tell her- tell her that she was right.\"\n\nAnd then she hung up. She dried her sweaty hands on her pants and began to shake. Adrianna stopped the chess game that she was winning and went to Barb.\n\n\"Congratulations on making your way back to your family.\n\n*****\n\nThe next few weeks sped by. Both Barb and Louise were increasingly uncomfortable. Thorne stayed close just in case Barb went into labor early and worked from home. The nursery was completed with the assistance of Celeste and was painted in soft blues with the shapes of different animals stenciled in. Barb took no part in the decorating of the nursery. She did however speak to Celeste, who spoke back, but initiated no conversation. All of her conversation was for 'Uncle Thorne'.\n\n\"You know what?\" Thorne told Celeste one day, \"some man is going to be very lucky some day, and if he isn't good to you, I'll beat him up.\"\n\nShe rewarded him with a giggle and a hug. She also knew that he meant what he said. Barb stood outside of the door listening and had to tamp down her anger. She was finding just as Thorne had that it took conscious effort to change her behavior. While she was a little more pleasant to be around and was interacting with her family more- one thing hadn't changed. She did not want to be a mother. She knew that Juliette was hoping that once she saw the baby she would change her mind. She stopped trying to convince them otherwise. The only one of her siblings that she still tiptoed around was Louise and she didn't know why. Louise greeted and treated her as she always had and made no mention of their last real conversation.\n\n\"Guilt?\" The voice asked and went silent. \n\nJust as she hadn't helped with the decorating of the nursery of her own baby, she didn't help with Louise's, although she did buy a baby gift. The gift was a bath set whose color was appropriate for a male or female. She hadn't been to see the nursery but knew that it was varying shades of green because according to Louise it promoted rest and harmony. There were splotches of pink-Celeste's contribution- because it was also soothing and meant affection. All of this information came from Kevyn, who of late had a wistful look on her face every time she saw Barb and Louise or when she talked about the nurseries.",
        "Kevyn and Juliette decided to have joint baby showers at Juliette's house. Barb didn't want to go, but Juliette wouldn't hear of it.\n\n\"All you have to do is look pretty and say thank you. And besides, Thorne will need things for the baby anyway.\"\n\nSo in the spirit of family togetherness, she went. She was surprised to see Samantha Blackwell there, but hid it. Her opinion of the woman hadn't changed and she soon found out that Samantha's opinion of her hadn't changed either. Nathan sat next to Louise with his arm around her as she opened the baby gifts and thanked the giver. Thorne sat next to Barb with his hands clasped loosely in front of him. Barb opened the gifts and then gave a weak thank you. Thorne followed her thank you with a sincere one of his own.\n\nAfter the gifts were opened and refreshments were being served, Samantha sat next to Barb. \n\n\"Your sister is radiant.\"\n\nBarb bit back a sharp reply. She was being baited.\n\n\"Pregnancy becomes her, but you...there is no glow about you. It's obvious that you don't want to be here.\"\n\n\"Did you glow when you carried babies that you didn't want?\" Barb snapped.\n\n\"Inwardly? No, but no one looking at me knew it,\" Samantha replied. \"To all outward appearances, I was the happy expectant mother. I even had my mate fooled.\"\n\nBarb turned to Samantha intrigued in spite of herself. \"How?\" she asked.\n\n\"Do not listen to her,\" the voice warned.\n\n\"What does it matter?\" Samantha asked. \"You've burned your bridges with my son and if what I hear is true, you've burned them with your child. Is it true about the child Celeste? Is she able to talk with my grandson?\"\n\n\"Mother,\" Thorne said interrupting Barb's response. \"I'm surprised to see you here.\"\n\n\"I postponed my trip when Juliette- a lovely woman- called me to tell me about the shower. I was also intrigued by the family history that Ethan alluded to. Your father would be so proud of you. I was hoping to find out a little more about the Yancy part of this alliance.\"\n\n\"Ethan is having a book made,\" Thorne replied, \"I'll see that you get a copy.\"\n\n\"Wonderful and you'll call me when my grandson is born?\"\n\n\"Yes, after I call Noel,\" Thorne replied.\n\n****\n\nGene stood in a corner watching. It was hard to believe that not only was almost everyone in the room vampire, but that the Sinclaires had such a horrible history. He had talked to Nathan and Patrick and was satisfied that his sisters were safe. He had been thinking about the issue long and hard and the longer he thought about it, the more sure he was that he wanted to do it. As far as he was concerned, there was nothing left for him in the human world. He had been correct to assume that it was over between him and Dana. He had gotten a 'Dear Gene' email telling him that she was and had been seeing someone. She had been too afraid to tell him because she didn't know how he was going to react. He had been hurt, but he wasn't so hurt that he wanted a drink. He went to several meetings just because he didn't want to be alone. He loved his job at Sinclaire Enterprises and was surprised to find that he got along with people almost as easily as Leon did. The fact that his secretary Erica was both beautiful and helpful helped.\n\nNow he was watching Barb. He was glad that she made some semblance of peace with the family, but he wished that she wasn't leaving. He waited until she was sitting alone before he joined her taking her a plate of fruit.\n\n\"Nice shower,\" he said as he sat down and handed her the plate of fruit.\n\n\"Yeah,\" Barb said setting the plate of fruit on the empty chair beside her.\n\n\"I'm glad that you're talking to us again...\"\n\n\"Yes well, you were all right about some things,\" Barb replied.\n\n\"Wow- a concession,\" Gene said. \"I wish that you wouldn't go. I know that you hate it here, but maybe since we're all together you'll feel differently. Maybe you'll want to get to know your baby.\"\n\n\"Gene, we've been over this- I need and want to leave.\"\n\n\"Okay but why so soon after the baby is born? Are you afraid that you might actually learn to care about him? Look, give it six months and if you still want to go then go. I'm sure that you can find something with a six month lease. Just think about it,\" Gene said patting her knee.\n\n\"He makes sense,\" the voice said.\n\nReluctantly Barb agreed. It was time to start using her head and no one could say that she didn't try.\n\n*****\n\nThree weeks later Barb was furnishing the three bedroom condo that she had bought in foreclosure. All of her siblings were thrilled. She was still Barb, but much easier to be around. Thorne was surprised by her decision to stay, but made no comment. As far as he was concerned, it changed nothing between them. He didn't tell her that hoping that she knew and understood that. It was too close to the baby's birth to upset her.\n\nHe was in his office working when he got a call from Adrianna.\n\n\"I think you'd better call Gretchen- her water just broke.\"\n\nHe called Gretchen and raced to Barb's room. She was sitting with her back against the bed looking very frightened. He temporarily forgot his dislike of her and went to her side.\n\n\"This is it,\" he said as he gently picked her up, \"in a few hours our son will be here.\"\n\nHe carried her to the bedroom where the birth was to take place and eased her onto the bed. Gretchen was there by the time he had Barb changed into the oversized tee shirt that she wanted to wear. He positioned himself behind her so that she rested against his chest and began to massage her belly.\n\n\"Just relax,\" he crooned in her ear.\n\nAlthough his words and touch was gentle, Barb wasn't fooled. This was for the benefit of the baby and nothing more. \n\n\"Did someone call Kevyn?\" she asked and then gasped as a mild contraction hit.\n\n\"Adrianna did, now breathe and try to relax,\" Thorne replied.\n\n\"Listen to your coach,\" Gretchen said as she examined her.\n\n\"How long?\" Barb asked.\n\n\"How long what?\" Gretchen asked as she set up her equipment.\n\n\"Until this is over,\" Barb replied.\n\n\"That depends on the baby,\" Gretchen replied. \"First births usually take longer- are you going somewhere?\"\n\nFour hours later Barb was screaming for drugs and not listening to Thorne's gentle prodding to breathe, resisting when he tried to rub her back. Finally sick of it he snapped at her.\n\n\"Breathe damn you!\"\n\nGretchen looked up at him and nodded her thanks. Barb was getting to the point of hysteria.\n\nBarb choked back a sob and nodded.\n\n\"Good,\" Thorne said as he wiped her forehead with a cool cloth. \"Much better.\"\n\nThree hours later, Gretchen was yelling at Barb to push. Barb screamed in frustration when, after three pushes, there was no baby.\n\n\"Barb!\" Gretchen said firmly, \"He's almost here now push with everything you've got!\"\n\n\"You can do this,\" Thorne said. \"One more push and you're free.\"\n\nBarb took a deep breath and pushed.\n\n\"That's a girl!\" Gretchen said. \"I see his head... aww, he's got a head full of dark curly hair... here he comes!\"\n\nThe sounds of a crying baby filled the room. Thorne eased from behind Barb and went to see his son.\n\n\"Is he alright?\" Thorne asked as tears ran down his face.\n\n\"He's perfect and he's gorgeous!\" Gretchen replied as she cut the cord and quickly cleaned the baby of the fluids of child birth. \"He's twenty-one and a half inches long and- eight pounds and four ounces. Congratulations!\"\n\n\"Look at you,\" she crooned, \"your daddy is anxious to meet you.\"\n\nGretchen wrapped the baby in a warm blanket and handed him to Thorne.\n\n\"Support his head- just like that.\"\n\n\"God, you're beautiful!\" Thorne said as he kissed the tiny curly head. \"So perfect,\" he said as he examined Aidan's fingers. He stopped when he saw something on Aidan's left arm- a birth mark shaped like a small flame. \"What do you know?\" he whispered as he continued his examination.\n\nHe took the baby over to Barb and sat next to her.\n\n\"This is our son,\" he said softly. \"Two very imperfect people created this beautiful and perfect being; would you like to hold him?\"\n\nGretchen stopped what was doing to watch what Barb did. The baby stopped squirming as if he understood that a decision was being made. Finally, a small arm reached out as if begging his mother to take a chance on him. For just a second, Thorne thought that Barb was going to reach out to their child. Her hand moved, lifted off of the bed and then fell back down. The baby let out a squall that startled all of them. Barb had chosen.\n\n***\n\nCeleste was eagerly waiting for Aidan's arrival with everyone else. At the exact moment that Barb was making her decision, she stopped talking midsentence. When the decision was made, she cried.\n\n***\n\nSomeone was at Thorne's house at all times to help with Aidan. Celeste went with whoever was going always sitting by the bassinet until she fell asleep. Barb moved into her condo three days after the baby was born and came to see him twice in the three weeks since his birth. Each time Thorne encouraged her to hold the baby, but she refused to hold or feed him. Aiden always looked at her with his hazel eyes that he closed as soon as he saw her.\n\n\"Why do you even bother?\" Thorne asked her during the second visit. Barb never answered him but showed up twice a week to see the baby, but she never touched him.\n\n***\n\nLouise couldn't sleep. She was up and down most of the day. Nathan massaged her back, her stomach and any other place he thought might help but to no avail. Finally he sat in a recliner with Louise in his lap.\n\n\"Aidan is a beautiful baby,\" he said kissing her. \"Just think, our baby will be here any time now.\"\n\n\"He is beautiful- how can Barb not love him?\" Louise replied. \"His eyes are gorgeous - can we say future heart breaker?\"\n\n\"Yes we can,\" Nathan said chuckling, \"But our daughter...\"\n\n\"Nathan Sinclaire, you know that you aren't going to let a boy get within ten feet of her,\" Louise teased.\n\n\"Make that fifty,\" Nathan teased kissing her again. \"But she is going to be beautiful like you and she's going to have all of the characteristics that I love so much in you.\"\n\n\"She could still be a he, you know,\" Louise said as she closed her eyes finally relaxed enough to sleep. Nathan didn't move wanting her to get sleep while she could. At six am, three weeks after Aidan Blackwell had been born, Louise went into labor.\n\nNathan carried her to the room designated as the birthing room and called Gretchen. By the time Gretchen arrived, had already called Kevyn and was sitting behind her holding Louise in a much different way than Thorne had held Barb. Gretchen was struck by the difference but made no comment as she did her exam and set up her equipment.\n\n\"Any bets as to what you're having?\" she asked as she examined Louise again.\n\n\"Nathan says a girl,\" Louise replied as she shifted position so that she was more comfortable.\n\n\"What do you think?\" Gretchen asked. This was how she liked to deliver babies. The atmosphere relaxed and both parents happy and excited about the birth.\n\n\"He's probably right,\" Louise said, \"but we have a boy's name picked out if he's wrong.\"\n\n\"Smart,\" Gretchen commented.\n\n\"Enough talk,\" Nathan said, \"rest while you can.\"\n\n\"He's right,\" Gretchen agreed. \"You'll need it.\"\n\n\"How long was Barb's labor?\" Louise asked before closing her eyes.\n\n\"About eight hours,\" Gretchen replied, \"now do as your mate tells you and rest.\"\n\nGretchen thought back to Barb's delivery. She had given Barb the same instructions except that she called Thorne her coach. That's all he had been. Nathan was acting like a mate and that he loved Louise and the baby was obvious.\n\nIt was two hours before labor began in earnest. Gretchen prepared herself for the inevitable begging for drugs and was surprised when it didn't happen. When Louise began to panic, Nathan calmly got her back on track. She trusted him whereas Barb didn't trust Thorne. She slept between contractions until they became too strong and seemed to be one long continuous pain.\n\n\"Sweetheart you're doing great,\" Nathan said in her ear. \"Just keep breathing with me, would it feel good if I rubbed your back?\"\n\nLouise was in tears, but she maintained some degree of control. At one point she asked to walk around.\n\n\"Of course you can, it might even speed things up a little.\"\n\nLouise was all for that and walked around the room for a good half hour before deciding to lie down. It was almost one pm before Gretchen gave the first command to push. \n\n\"Come on sweetheart, just like we talked about,\" Nathan said as he kissed her sweaty head. \n\nOne-thirty pm Khanyisile Sinclaire entered the world at six pounds- one ounce and sixteen inches long.\n\n\"Louise and Nathan you have a healthy little girl!\" Gretchen announced. Give me a minute to get her cleaned up....\"\n\n\"She's all there?\" Louise asked.\n\n\"Yep! I count two eyes, ten fingers and ten toes,\" Gretchen replied as she cleaned the baby and wrapped her. \"She's got a full head of hair too.\" She added.\n\nNathan and Louise both cried as they held their baby for the first time. Louise put the baby to her breast and cried when she latched on. \n\n\"Baby, she's so beautiful,\" Nathan said as he touched the baby's face. \"Thank you for this gift.\"\n\nGretchen did a final check on Louise and went to rest in the next room. Eustace had some early evening appointments and wanted her to wait there. By evening, everyone was there to see the baby - Barb included. As with her own baby, she looked but didn't touch.\n\n\"She's beautiful,\" was all she said and backed away.\n\nFinally, Nathan kicked everyone out, even though Louise said that she was fine.\n\n\"I'm sure you are, but I want my family to myself for a while,\" he said as he rocked the baby to sleep.\n\nThe next evening, Kevyn called Louise with news.\n\n\"I hate to do this, but I know that you'd want to know- Barb left but she left a note. \"I'll read it.\n\n\"Dear family,\n\nI know that I said that I would stay for six months, but I can't. I hate California and I just can't make myself stay here. I know that Gene considers it the place of his rebirth but to me it's been a place of a lot of pain. I will concede that most if not all of it is my doing. I know that I haven't been the best person and I caused a lot of problems because I- well you know. I also know that you were all hoping that I would learn to love Aidan- who knows? Maybe I will, but it isn't now. I know that you will all make sure that he gets the love that I can't give him. I know that this seems like I'm running - maybe I am, but not from you. I don't know what I'm going to do with myself but I promise to stay in touch. You all have my number. This last part is for Louise. You were right about a lot of things and you have nothing to apologize for. You are who you are, just as I am who I am. \n\nBarbara Yancy\n\n\"Where is she going?\" Louise asked.\n\n\"We think to her condo in Hawaii,\" Kevyn replied. \"Her guards went with her, but at least she left us a note and she didn't cut us out of her life.\"\n\n\"True,\" Louise said sadly, \"But I think - I think she'll be back.\"\n\n\"I hope so,\" Kevyn replied. \"I've already told the others. Gene is pretty shaken up since he just got here. He thinks that he's failed somehow.\"\n\n\"He didn't,\" Louise said, \"and I'll call him to tell him that later. None of us failed her and it's important to remember that.\"\n\nLouise hung up and took a hungry baby from Nathan's arms with a smile. She turned her concentration on the baby after saying a prayer for Barb.\n\n****\n\nThorne read the note left for him and wasn't surprised or disappointed. He would have been surprised had Barb stayed. He knew exactly where she was and made sure that she had more than adequate protection. It was all that he could do. He picked his five week old son up and looked into his hazel eyes.\n\n\"We,\" he said kissing the Aidan's cheek, \"are going to be just fine. \"You'll have to give your old man a learning curve, but we'll make it.\"\n\n*****\n\nBarb sat on the beach in front of her condo in Hawaii. The decision had been made and there was no going back - at least not now. She had the last name of Simpson legally removed and was now Just Barbara Yancy. She planned to do as Gene suggested - revisit her life and the decisions that she made. She didn't know if she was going to change or not although to some degree she had. She gave brief thought to Aidan and let it go. He was fine and would be cared for. The voice had been silent, but she knew that it was there. She only had to learn how to listen to it. Her last thought before standing up to walk back to her condo was to Thorne.\n\n\"I'm sorry I screwed our lives up.\"\n\nAt this the voice did comment. \"Another step.\"\n\n****\n\nIn California, Aiden was asleep. His eyes opened and then closed content that all would be well. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "black woman",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-12"
}