{
    "title": "Been Waiting for Love Ch. 07",
    "pages": [
        "\"Didn't you hear me?\" Ricky said and waited for one of them to do something other than stand there and look at him. \n\nKatrina's hand was still clutching on to Scott's shirt. Her mouth was open but no words were coming out. She had never seen Ricky look at her like that, as if she had betrayed him. \n\nScott just swallowed and decided enough was enough. It was going to be hard but he had to tell him the truth and how it was.\n\n\"Ricky, look man, Katrina and I have been together for some time now.\" Scott said.\n\n\"So you're fucking my sister?\"\n\nScott pulled away from Katrina, \"It's not like that man. I love and care for Katrina.\"\n\nRicky narrowed his eyes at Scott as he stared a hole through him. Scott didn't back down, he just wanted Ricky to calm down and listen.\n\n\"Is that true?\" Ricky asked looking at Katrina.\n\nShe sighed to herself trying not to feel like the little girl she always felt when Ricky confronted her so angry. She looked over at Scott and he had a somewhat pleading look in his eyes as if to say \"back us up\".\n\n\"Yes,\" she swallowed, \"It's true.\"\n\nRicky cleared his throat and turned around looking up at the ceiling. Katrina and Scott exchanged glances trying to decipher what to say next. Katrina nearly jumped out of her skin when she heard Ricky laugh. He turned to them both and shook his head.\n\n\"Wow, you both dropped a bomb on me, huh?\"\n\n\"We wanted to tell you sooner man. You're my boy and I didn't want you to feel like I went behind your back.\"\n\n\"But you did. You did the one thing that I wanted you not to do, but hey you know it's okay. I don't know what I expected from you, you always were shit when it came to loyalty, huh? I guess you wanted to add my sister to that list too.\" Ricky said and turned to walk off.\n\nScott's eyes widen when he heard those words from Ricky, \"Ricky?\" Katrina said as he walked off.\n\nScott went after him wanting to know what the hell brought that on. He caught up with Ricky heading to the dining room and grabbed his shoulder. Ricky instantly shrugged him off and turned to face him.\n\n\"What's that suppose to mean?\" Scott said.\n\n\"You know exactly what that means. You couldn't keep your dick in your pants after I told you do not mess with my family.\"\n\n\"Look, I don't know why you're coming at me like I'm some dude off the street, but it's me man. You know me.\"\n\n\"Yeah right, I do know you. I know that you have never been in a real relationship and you just fuck around on your girls. Who's always been around to keep your secrets? Me, that's who and you go and do this.\" Ricky said stepping into Scott's face.\n\n\"You don't have to remind me what I have done, I already know. I'm trying to tell you that this is different.\"\n\n\"And I'm suppose to take your word, that you didn't take advantage of my little sister!\"\n\n\"No, he didn't.\" Katrina said trying to pry between the two.\n\n\"Stay out of this Katrina!\" Ricky yelled.\n\n\"Man, don't yell at my girl like that.\" Scott said feeling his own temperature boil.\n\n\"Oh, excuse me, your girl? I guess that's suppose to make it all better since now you are actually claiming someone huh?\"\n\n\"Don't forget man, you were with me doing a lot of the same shit I was doing.\" \n\n\"You guys, stop!\" Katrina tried again, but they still stared at each other.\n\nShe could see that the both of them were reaching their boiling point. Ricky's fist didn't stop clenching at his side and Scott was turning red.\n\n\"That's different, you crossed the fucking line!\"\n\n\"There was no line to cross, we just fell for each other.\"\n\n\"Not my sister! You are not going to add her to your fuck them and leave them list.\"\n\n\"That's up to your sister to decide man and she already said she isn't going any where, so you better deal.\"\n\n\"Fuck you man!\" Ricky shouted, pushing Scott against the wall, \"You're not good enough for her!\"\n\n\"Ricky, will you just stop and listen?\" Katrina pleaded.\n\n\"Listen to what? Some nonsense about you two being in love. He's going to leave you Kat, that's what he always does. He doesn't care about anyone but himself.\"\n\n\"Fuck you!\" Scott retaliated, pushing him back, \"I took care and carried your ass for years!\"\n\nWhen Ricky found his stance, he charged Scott and punched him in the face. Katrina let out a scream as Scott pushed Ricky away. Scott didn't want to hurt him, even though he was pissed, he didn't want to fight Ricky. Ricky kept charging after Scott and Scott kept trying to push him off. Katrina came over by the two and still tried to pull them away from each other. Pretty soon, everyone came in to see what the commotion was about. Ricky tackled Scott to the ground which knocked Katrina down and she hit her head against the wall. Scott and Ricky's mom tried to shout at them both to stop. James and Nik came to pull the two away from each other. James held Ricky back as he tried to still go after Scott. Kendra instantly went over to Katrina. Katrina shook her head and grabbed her head.\n\n\"I'm confused. Did ya'll know you were fighting each other?\" Nik asked looking puzzled between the two. \n\n\"You okay?\" Kendra asked, helping her to her feet. Katrina could do nothing but nod.\n\n\"You know what? Forget this!\" Ricky shouted, \"I don't need a friend like you. Just stay the fuck out of life! I'm done with you!\"\n\nScott shook himself out of Nik's grasp, \"Fine by me.\" Scott turned to walk out, maneuvering away from his father's grasp. \n\n\"Katrina, come on.\" Scott said as he walked to the door.\n\n\"Katrina! Don't you run after him!\" Ricky warned.\n\nKatrina looked between the two and set her eyes on Ricky. She couldn't believe that he was acting like this and was so careless about her feelings. She shook her head and started backing away from him.\n\nRicky's eyes widened as she made her way to Scott, \"Katrina?\" she turned around and ran over to Scott, \"Katrina!\" \n\nHe watched as they both left. He was about to go after them both and heard Kendra faint voice calling his name. A body stepped in front of him and his eyes focused to see his mother's face.\n\n\"Stop! Just let her go, Ricky.\" she said.\n\nRicky raked his hands down his face as he made his way to the back. Kendra followed behind him trying to comfort him, but he just shut her out. The only logical thought that ran through his mind was, what did he just do?\n\nScott helped Katrina into the truck and got in on the other side. They didn't say anything to each other as he drove. Her mind was elsewhere. She just couldn't believe the look on Ricky's face. She had never seen him so angry. She couldn't understand why he became so angry. They grew up together and Ricky was always telling her how great Scott is, now he treated Scott as if he didn't know him. She looked over at Scott and saw that his cheek was still red where Ricky hit him. She wanted to run her fingers down the bruise but saw how his jaw tensed up. She just settled back in her seat and continued the ride in silence.\n\nThey stopped in front of her house and she looked over at him. He still hadn't looked at her, just straight ahead. She had to start out slow to make sure he didn't pull away from her. She couldn't imagine what he was going through but she wanted him to talk to her. She grabbed his hand that rested on the gear shift as she tried to fight the tears. He squeezed her hand back and looked over at her. \n\n\"Are you okay?\" he asked as he touched her forehead, it still stung a little.\n\n\"I think so. What about you?\"\n\nHe bit his bottom lip and shook his head, \"I don't know.\"\n\n\"I'm so sorry Scott. If I knew he was going to act like that I would have told him sooner. I've just never seen him like that before and I know he didn't mean anything he said.\" he just nodded.\n\nTruth was, there were millions of thoughts running through his head. He couldn't believe himself what Ricky accused him of. He knew that his past relationships may have ended badly but he thought Ricky would give him some credit, especially when it came to Katrina. He couldn't believe he lost his best friend that was like a brother.\n\n\"Do you regret us?\" he heard her tiny voice whisper and he set his eyes on her.\n\n\"No baby, of course not.\" he said running his fingers through her hair, \"I just need to go think for a little bit.\"\n\n\"Scott, we can go and talk about this together.\"\n\n\"I know. I just need some time alone, okay?\" she didn't like this, but she understood. \n\n\"Alright.\" she stepped out of the truck.\n\n\"Call your mom and make sure that everything is alright.\" Katrina just nodded and made her way to the door with her head down.\n\nEverything hurt inside, her head and her heart. She knew her mom said that she would have to pick, but she didn't think it would be this soon or this would be the circumstance. She got to the first step when she felt his arms wrap around her waist. She sighed into his grasp, leaning her head back against him. He rested his chin on top of her head as he felt her relax, he couldn't leave like that looking so defeated. He kissed the top of her head and her cheek.\n\n\"I love you, you know that.\" he whispered and she nodded unable to find her voice, \"I'll be back.\" \n\nShe let him release her and walked back to his truck. She watched him pull away before she made her way to the house. She collapsed on the couch, exhausted and trying to fight her emotions. She didn't want to cry, not now. Instincts told her that when she felt like this she could call Ricky and he would make her feel better, but she couldn't. He probably didn't ever want to speak to her again. She was mad as hell at him and at Scott for leaving her alone. She couldn't think to do anything but curl up on the couch and go to sleep. \n\nThe sudden knocking woke her from slumber. She looked at her watch and saw that it was just after seven. She didn't think she slept that long. She got up to answer the door and saw Jade, Dominique, and Kendra.\n\n\"Hey, are you okay?\" Jade asked.\n\n\"Yea, I'll survive. What are you guys doing here?\" she asked as she let them in.\n\n\"Well we are you friends and we have to check on you, by law.\" Dominique said with a smile.\n\nKatrina smiled to herself and looked over at Kendra and noticed there was something different about her. Her shoulders were a little slumped and her smile looked forced, \"How is Ricky?\"\n\n\"He, um, I don't really know. We talked a little bit and I haven't spoken to him after that.\"\n\n\"Are you alright?\" Katrina asked placing her hand on her shoulder.\n\n\"No, not really. I told him I knew the whole time and he got mad at me for not telling. He threatened to call off the wedding saying how he couldn't trust me.\" her last words were lost in a sob.\n\nKatrina instantly wrapped her arms around her in a hug, \"I am so sorry. I didn't think he would get mad at you.\"\n\n\"Your mom said he's just angry right now and that's the only reason he said it. For some reason I don't believe it.\"\n\n\"He loves you, he really does.\"\n\n\"Where's Scott?\" Jade asked heading to the kitchen.\n\n\"I don't know. He said he needed to do some thinking and dropped me off.\"\n\n\"He probably did. There were some strong words exchanged between the two.\" Dominique said.\n\n\"Well maybe I missed something, but aren't you grown?\" Jade commented.\n\n\"Jade.\" Katrina warned.\n\n\"No I mean seriously, this big brother protect you crap is over. You are grown and frankly so is he. He's got a family to make and take care of.\"\n\n\"You know it's always been me and him.\"\n\n\"Right, now it's him and Kendra then it's you and Scott. I mean from what I see of Scott he's planning on making a future with you and it's evident that Ricky is making a future with Kendra.\" Dominique said.\n\n\"You know as well as I do that your brother can be pigheaded, but you do need to talk to him. I think part of the problem is that Scott did most of the talking. He needs to hear this from you.\" Kendra said and Katrina knew she was right.\n\nThey both turned at the sound of the door opening. Scott walked in and looked at the women in the house who set their eyes on him. \n\nHe cleared his throat as he made his way past them and they stared at him like he was prey. The silence was definitely deafening. \n\n\"Didn't they teach you to duck?\" Jade asked and Katrina looked at her as if she was ready to skin her alive.\n\nScott couldn't help but chuckle and shake his head, \"Apparently I slipped up.\" he looked over at Kendra, \"You okay?\"\n\n\"Yea, where did you go?\"\n\n\"I just went to the lake. James caught up with me and Nik stayed with him to see if he could repair anything. He told me what he said, you know he didn't mean it.\"\n\n\"I know it, but you know how he is. Look, we are going to let ya'll go and talk.\" Kendra said.\n\n\"Good, you can come stay with me.\" Jade offered.\n\n\"I don't know, you and that boyfriend of yours are going to keep me up arguing.\" \n\nKatrina let them out as Scott went and sat on the couch. She looked back at him as he rubbed the back of his neck.\n\n\"It's good to know you are alright.\" she said.\n\n\"Yea, I can handle pretty much anything.\"\n\n\"What happened? Why did you leave like that?\"\n\n\"I just had to think about some stuff, especially about what he said.\"\n\n\"He was angry, that's why he said all that stuff.\" she tried to walk closer to him and he pushed himself off the couch.\n\n\"You don't understand. All that stuff he said, I really did. I really was like that. My track record with relationships aren't really that great. I mean the last thing I want to do is hurt you.\"\n\n\"Can you and my brother stop thinking of me like some porcelain doll? The fact that you care if I get hurt or not let's me know that you won't.\"\n\n\"He knows me though and I'm not proud of what I've done in the past.\"\n\n\"And I don't care!\" she finally shouted, tired of hearing the same thing, \"I don't care. I know you. I know the real Scott, not the Marine, not the playboy, and not the homeboy, but I know the real Scott. You love me and care for me. You are a different person now.\"\n\n\"I just want to do right by you.\" he said walking in front of me.\n\n\"You are.\" she wrapped her arms around him, \"We're just taking this one day at a time. Just don't ever leave like that.\" she said poking his chest and he smiled.\n\n\"Alright, I'll try not too.\" he said just before kissing her, \"Now what do we do?\"\n\n\"Well I think we both need to get some sleep. After that, I will talk to Ricky.\"\n\n\"Are you sure?\"\n\n\"Yea, I really don't want to mess things up between him and Kendra.\" she knew she had to get that done, she just wasn't sure on how to approach it. \n\nThe next day, she called her mom and found out that Ricky was over there with her. She left Scott sleeping in the bed as she sneaked out to see him. She thought about what she was going to say to him all night. She decided the best way was to be calm and make him realize it was his mistake. \n\nHer mom greeted her at the door with a hug, \"How are you baby?\" she asked.\n\n\"I'm good, how about you?\"\n\n\"Well I was expecting a wedding and I still am.\" she smiled.\n\n\"Is this when I tell you, that you were right and that I should have told him sooner?\"\n\n\"I'll save that for another time, just go ahead and talk to him.\" she said pointing outside. \n\nShe looked out there and saw Ricky dribbling a basketball. It was something he always did when he was a little stressed out or thinking. She walked outside and he didn't even turn around to acknowledge her. He just kept trying to shoot a three-pointer while she stood at the back door. She watched as he missed yet again.\n\n\"You've always sucked at three pointers.\" he turned towards her quickly and back to the goal.\n\n\"My game is off.\" he said coldly.\n\n\"Game off nothing, you just were never any good at three pointers.\"\n\nHe tried again to shoot and still missed. He grabbed the ball in frustration and looked over at her, \"What are you doing here?\"\n\n\"Well this is my mom's house and I think that I am entitled to be here.\" she shrugged.\n\n\"Doesn't matter, I'm going back to my place.\"\n\n\"No.\" she said stepping in front of the door, \"You are going to talk to me. What's wrong with you?\"\n\n\"Doesn't matter.\" he said turning his back to her.\n\n\"No, it does, because I don't want this to mess up our relationship.\"\n\n\"Why? Why him?\"\n\n\"You told me yourself you can't help who you fall in love with. I have been wanting Scott for awhile. What I don't understand is why you blew up at him?\"\n\n\"He knew better than to mess with family.\"\n\n\"Come on now, I know that family is not the big reason. It makes no sense. You always told me about how good a man Scott is and everything that he has done. So what, now that we're together you have a problem with him?\" she said moving closer to him.\n\n\"I know that!\" he said throwing the ball done, \"I know that he's a great guy, that's the problem.\"\n\n\"Okay, I'm lost now, huh?\"\n\n\"I know that Scott will take care of you and all that, but then you won't need me.\" he said stuffing his hands in his pockets.\n\nKatrina could do nothing but blink, \"Are you serious? That is what this is about?\" he didn't even look at her.\n\n\"You just don't understand, it has always been you and me. Dad use to always tell me that I have to take care of you and make sure that you are safe.\"\n\n\"Yea, that was okay when I was younger but now I have to go through this on my own. I have gone through some heart ache that you don't even know about and I still came through alright. Scott is good to me and he will protect me no matter what. You don't see me trying to ruin your relationship between you and Kendra because I know she makes you happy.\"\n\n\"I know, it's just the fact that I know Scott won't intentionally hurt you and yea maybe I was being a little selfish.\"\n\n\"And stupid.\" he chuckled, \"You know I'm going to always need my big brother no matter what, but you are going to have your own family to take care of. You have to give me a chance to start my own.\"\n\nHe looked up at her, \"Is it really that serious?\"\n\n\"I want to believe it is. He's already looking for a house for us to move in together.\"\n\n\"Wow, I guess he is growing some.\"\n\n\"So are you going to stop being an idiot and marry the girl of your dreams?\" she said with her hands on her hips and he laughed.\n\n\"Yes I will and I'm so sorry. I forget sometimes that you are grown and can make your own decisions.\" he said wrapping his arms around her in a big bear hug.\n\n\"Apology accepted and I'm sorry I didn't tell you sooner.\"\n\n\"It's no problem, but I do have a question. Does it have to be Scott?\" he whined and she couldn't help but laugh, \"You know how uncomfortable that's going to be when I come over and see him kissing all over you.\"\n\n\"Well, you just have to deal with it.\"\n\n\"I guess I have no choice. In the end, I knew that something was going on, you had that goofy look on your face.\"\n\n\"Whatever.\" she said pushing him away.\n\n\"Well, just to let you know I already apologized to Kendra last night and everything is still good, but I am guaranteed that my first year of marriage will be hell.\"\n\n\"It serves you right. Just curious, what made you angrier, the fact that we went behind your back or that it was Scott.\"\n\n\"I think it was the behind my back part and then to hear it from some chick that he worked with.\"\n\n\"What chick?\"\n\n\"Some girl that I bumped into, I think it was Yolanda or something.\"\n\nKatrina's eyes narrowed, she knew there was a reason she didn't like that girl, \"Oh really?\"\n\n\"Yea, just don't look like that. She must have been trying to get with Scott.\" Katrina just nodded, \"Well, I'm still getting married, but I need my best man.\"\n\n\"Sucks to be a grown up and have to apologize, doesn't it?\"\n\n\"It really does I mean mom didn't prepare us for this part.\" she laughed again, \"Find out where he is for me and I'll go and meet up with him.\"\n\nKatrina pulled out her phone and dialed Scott's cell. She was so elated that Ricky finally got over this whole thing. She found out where he was and told him where to meet Ricky.",
        "Scott, on the other hand, wasn't too thrilled about the meeting. A part of him did want to punch Ricky for what he said. He wasn't denying anything that he did, he just didn't think that Ricky would air out his dirty laundry like that. He was happy that the wedding was still on though. He didn't like that Kendra had to suffer because of this. He agreed to meet him at the lake within an hour. He had to go by the mall to pick up something so, Ricky would have to wait.\n\nOnce Scott arrived at the lake, he saw Ricky waiting in front. He walked over to him slowly, with his hands in his pockets. He looked over at him, his face void of emotions. Ricky turned towards him a little calmer and sighed.\n\n\"What's up?\" Ricky asked.\n\n\"Hey, you wanted to see me?\"\n\n\"Yea, I'm getting married.\"\n\nScott scoffed and shook his head, \"So I heard.\"\n\n\"Yea, I figured by the way I acted she would have kicked me to the curb. Thank God for good women.\"\n\n\"I agree.\" then they were silent, both looking out at the lake.\n\nIt was a tense silence full of things that needed to said, but both were too stubborn to say anything. Ricky was busy shuffling his feet and Scott just stood there. Scot was beginning to get a little impatient.\n\n\"Do you really love her?\" Ricky finally asked.\n\n\"I do, more than anything.\" he immediately answered.\n\n\"Are you willing to risk anything for her, because she definitely deserves that?\"\n\n\"I risked our friendship for her, so yes.\" Ricky just nodded as a response.\n\n\"Why her? I'm not mad anymore but just shocked. I mean we both use to tease her and yell at her to get away from us.\"\n\n\"I can't exactly explain why her man, I just know that I'm happy that I have her. I mean believe me man, I tried to fight it as much as possible but I can only take so much. I mean she was putting it out there for me and...\"\n\n\"That's enough, this is still my sister.\" they both laughed, \"Hey man, I know that you won't do anything to hurt her and I'm sorry that I brought all that up.\"\n\n\"It's cool; I know you didn't mean it.\"\n\n\"I appreciate you letting me get that lucky punch in too.\" he said and they started laughing again.\n\n\"You did that me by surprise, so I let that one slide.\"\n\n\"So, we cool? You there with me?\" Ricky asked extending his hand.\n\nScott paused and shook his head, \"All the way.\" he said slapping his hand with his.\n\nRicky let out a breath that he didn't know he was holding. He knew he really didn't want to lose his boy. No matter what might have been said, he knew Scott was a good man and could be just what Katrina needed.\n\n\"So, does that mean I still have to put on that monkey suit tomorrow?\" Scott asked.\n\n\"If I have to, so do you .\" he smiled, \"Just so you know, you can't break up with my sister.\"\n\n\"Man, I told you, I'm not going anywhere. Your sister is crazy like you; she will come back and hunt me down.\"\n\n\"I heard about this house that you are thinking about getting. You want to move in with her?\"\n\n\"Well, the main objective was for me to get out of the house because that house is kind of small, but yea I do want her to move I n with me.\"\n\n\"You jumping the gun a little, aren't you?\" \n\n\"Hey I'm confident like that.\" he shrugged.\n\n\"Man, I mess up because of that little stunt, now I won't have a party.\" he said looking over at Scott.\n\n\"You better be ready to kiss the rings bitch, because I kept it going for you.\" Scott smirked.\n\n\"Oh bless you man. I knew you loved me.\" Ricky said clutching on to him.\n\n\"Get the hell off me.\" Scott laughed pushing himself away, \"Don't be all slobbering on me because I'm a good friend.\"\n\n\"You are man and I'm glad that you and Katrina are together, really.\"\n\n\"Come on, I'll let you buy me the first round.\"\n\nAfter the party, Scott strolled in around midnight trying to sneak in without Katrina waking up. He didn't expect to be out that late partying. He made sure to leave a message for Katrina just before he left, so he figured that she was with the girls getting ready for tomorrow.\n\nHe opened the bedroom door and was shocked when the bedroom lights came on. Katrina was sitting there under the covers in bed. He just plastered on that goofy smile as he shook her head.\n\n\"So, how was the bachelor party?\" she asked.\n\n\"Oh it was just a regular hang out with the guys, nothing special.\"\n\n\"Stop trying to down play it.\" she said folding her arms.\n\n\"Isn't that what you did?\" he said sitting on the edge of the bed next to her.\n\n\"That's different, I said it.\" she pouted and he couldn't resist leaning down to kiss her.\n\nA little turned deeper as he pushed his tongue in her mouth taking over the kiss. She grabbed the back of his head as he maneuvered on top of her.\n\n\"So, I take it you and my brother made up.\" she whispered between kisses.\n\n\"Yes we did and for what I have in mind I really don't want to talk about your brother.\" he silent her again by kissing her.\n\n\"No, baby seriously, I'm so happy that we went ahead and said something to him. Now we can go out and not worry about what my brother is going to say.\"\n\n\"I'm happy too, really I am, but like I said before I have other things on my mind.\" he said shrugging off his jacket.\n\n\"Those must have been some might good looking strippers to get you all bothered.\"\n\n\"Doesn't matter, I got what I've been waiting for.\" he smiled.\n\n\"You are so corny.\" she muffled before he kissed her again.\n\nThe next morning, everyone was running around like crazy for the wedding. Scott was in the room with Ricky watching him pace. He was making Scott dizzy with the constant pacing.\n\n\"Hey, can you please stop? I get motion sickness.\" Scott replied.\n\n\"You know man, I'm not tripping. I'm cool. I'm cool.\" he said as beads of sweat came down his face.\n\n\"How long are you going to keep saying that? I swore you told me that a couple of minutes ago.\"\n\n\"I'm just saying. I'm cool. I'm cool.\"\n\nScott just shook his head as he looked down in his hand. As soon as the door opened, he tucked his hand away as he saw Katrina walking in. She literally took his breath away when she walked in wearing a black strapless dress. It fit her perfectly without showing too much of figure and it cinched in right below her breast. Her hair was swooped up away from her neck and she looked flawless.\n\n\"Hey are you okay?\" she asked.\n\n\"Please don't make him say he's cool. I am begging you baby.\" Scott said.\n\nShe looked at him confused as she walked to Ricky and fixed his tie, \"Are you nervous?\"\n\n\"Nah, I'm co...I'm good.\" Ricky said catching himself as Scott smiled to himself.\n\n\"Well, I just came to check on you because your lovely bride is waiting.\"\n\n\"I know. I'm ready.\" \n\n\"Okay, well I will see you later.\" she said heading out and Scott followed behind her.\n\nHe pulled her over to him and kissed her, \"Hey baby, you know you look so good.\"\n\n\"I know and as much as I love kissing you, I don't want to ruin my lipstick.\"\n\n\"Aw come on baby, just a little kiss.\"\n\n\"Scott, please. We are in a church.\" she smiled and walked off.\n\n\"That's so wrong.\" he huffed.\n\nHe watched her walk away and smiled to himself. There were no words for her or the way he felt for her. He never expected for him to love someone so much. He was right when he told her that she was just what he was waiting on. Just before she reached the door, she turned to him and smiled. He leaned his head against the wall, shuffling the tiny box in his pocket.\n\n\"I love you.\" he mouthed to he as she stared at his lips.\n\nShe smiled so hard that she swore her face would crack but she didn't care, \"I love you too.\" she mouthed back.\n\nA couple of months after the wedding, Scott had finished all the paper work for the house. It was official, it was all theirs and she didn't know it yet. He wanted to keep it a surprise, which was hard to do with her constantly asking him about the house. He kept everything low key and away from prying eyes. He was also busy helping James move down as soon as James had some time off. James was always good with his hands and planned on buying a mechanic shop from mama Tonya's husband. He was just happy to hear that he was going to chill out for awhile. \n\nOne day he decided to take her to see the house, but told her that he was going to see his friend. They pulled up in front of the house and she got out of the car with him. \n\n\"Your friend's house is beautiful baby. I like it.\"\n\n\"You do, I thought you would.\" he pulled out the key.\n\n\"You have a key to this house?\" she said drawing her eyebrows together. \n\n\"Baby, I may have lied a little bit. It's not his house, it's ours.\" he said pushing the door open.\n\nHer mouth instantly dropped as she walked in. She moved around downstairs checking the fireplace. She went to the kitchen and instantly fell in love with it. \n\n\"Scott, this is just too amazing.\" she said as he followed her into the kitchen, \"You got this for us?\"\n\n\"Of course I did. I saw this and knew you were going to love it. The master bedroom is just as good.\" he leered and she pushed him away.\n\n\"You are just so nasty.\"\n\n\"You should look in the refrigerator, it's really spacious.\" he said.\n\n\"Oh really?\" she opened it and stopped when she saw a little box sitting on the middle shelf. She went still, but she felt like her knees were shaking. She slowly reached for it and her breath caught in her throat. The silence was killing Scott, he was tempted to just take it out of her hand and cut the suspense.\n\n\"Oh my God.\" she whispered before she flipped it open.\n\nHer breath caught in her throat as she looked at the beautiful diamond ring staring back at her. She could feel the tears stinging her eyes as she placed her hand over her heart. I guess this is my queue, Scott thought to himself. He walked close to her and grabbed her free hand. She looked up at him with tears in her eyes.\n\n\"Hey now, no tears okay. I'm just asking you a simple question.\" he smiled wiping her tears away with his thumb, \"I told you that I was planning on making us permanent and I don't go back on my word when it comes to you. I knew there was going to be something special about us, every since I first kissed you ten years ago. Katrina, will you marry me?\"\n\nShe nodded her head vigorously until she found her voice, \"Yes, yes!\" she repeated before his lips came crashing down on hers.\n\nShe wrapped her arms around his neck kissing him senseless. Her body pressed close to his as he ran his hand down to her butt. He lifted her up by the backs of her thighs and set her on the counter. He needed his future wife, right here and now. His kisses moved down to her neck, sucking on the tender spot just below her ear. \n\nHe loved the sound she made when he did that. Her senses were on overload right now as he ran his hands down to her breast. He grabbed a hold of her breast and arched into his touch. \n\n\"Scott, what are you doing?\" she moaned.\n\n\"I'm breaking in our house.\" he said as he reached for the zipper in the front of her dress.\n\nHe pulled the dress open looking at her breast enclosed by her bra. He pulled her to the edge of the counter and started to kiss on the tops of her breast. She grabbed his head as she leaned back on the counter. He kissed her tight stomach all the way to between her thighs. He could see her pussy glistening in her panties and he teased her by running a finger up and down her slit. She gasped as he continued torturing her slowly. He pulled her panties off and lifted one leg over his shoulder. He pulled her lips apart to inhale her sweet scent. Damn, he could feel his dick aching in his pants, but didn't want to rush it now. He wanted to savor this moment. His tongue slowly circled her clit as he felt her fingers through his hair. He pushed two fingers inside of her as he sucked on her clit making her push her hips up against his mouth. Katrina was in complete ecstasy, it was like her vision was becoming blurry as her thighs pushed against his ears. She felt his tongue beat against her hard clit and she felt herself so close to cumming she couldn't take it.\n\n\"Oh shit Scott.\" she moaned, \"I'm so close.\"\n\nHis mouth left her clit and his tongue replaced his fingers. He dove in moving his tongue quickly inside of her. She started to buck against him gripping his hair so tight that he was convinced she was going to rip his hair out. She let out a scream as she came on his tongue. She rode the wave as she still felt his tongue inside her. \n\nHe raised up and she immediately pulled his shirt over his head. She pulled him close to her, wrapping her legs around him. He pressed his lips to hers and she drew him in close as she tasted herself on him. He reached between them to unzip his pants and take his hard cock out. She pulled away to look at the throbbing member in his hand which made her nibble on her bottom lip. \n\nHe closed the gap between them and pushed himself inside of her. She grabbed a hold of him as she felt the familiar stretch. He stilled himself briefly as the need to take her hard and fast course through him. She saw him battling with himself and needed him to move. She grabbed on to him, steadying herself. She nibbled on her bottom lip and he caught a glimpse of that and it turned him on more. He thrusted inside of her holding on to the back of her thighs. Her mouth fell open as she submitted to him. She leaned back against the cabinet and he continued thrusting into her relentless.\n\n\"Oh fuck!\" she gasped digging her nails into his arms.\n\nHe felt him self about to cum soon as she tightened around his cock. He swore he would never get tired of fucking her. She would always feel so good around him. He felt his balls tightening and knew that he was going to cum soon. Katrina was close too. He dug her nails into his arm so hard that she was sure she almost drew blood. He grabbed a hold of her hair tugging it back exposing her neck. He sucked on the tender part just below her chin and she saw tiny little lights burst in front of her as she came on him. He came shortly after her, spilling himself inside of her. He fell against her, trying to catch his breath. He felt his head being lifted off her and her lips against his. They were light pecks against his and some ended with her nibbling on his bottom lip.\n\n\"I love you.\" she whispered.\n\n\"I love you too baby.\" he reached for the ring and slid it on her finger.\n\nShe smiled looking down at it and looked back at him. She didn't know she could be this happy, especially with Scott. \n\n\"I didn't think that this would happen.\" she said.\n\n\"Why?\"\n\n\"I don't know, maybe I was thinking that we were just a dream.\" \n\n\"Well, I'm here to make all those dreams come true, even the naughty ones.\" he leered and she couldn't help but laugh.\n\nShe held on to him as she thought of that moment in front of the lake till now. If this was a dream, she wouldn't wake. She was ready to start her new life as Mrs. Scott Porter, she thought as she hugged him close. She just hoped for her friends to find the same happiness she did. \n\n*\n\nTHANK YOU EVERYONE FOR BEING SO PATIENT WITH ME AND MY EDITING. I WANT TO THANK MY EDITOR K-DOG FOR HELPING ME. AS YOU CAN TELL THIS IS A SERIOUS. I HAVE JADE AND LOGAN'S STORY COMING UP REAL SOON. I HOPE TO SEE A LOT OF READERS FOR THAT ONE. AGAIN I WANT TO THANK EVERYONE WHO RESPONDED AND WHO KEPT READING, THAT'S BEEN MY MOTIVATION TO FINISH. SEE YOU SOON."
    ],
    "authorname": "Myanlass",
    "tags": [
        "interracial romance",
        "interracial novella",
        "romance novella",
        "erotic romance",
        "erotic drama",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/been-waiting-for-love-ch-07"
}