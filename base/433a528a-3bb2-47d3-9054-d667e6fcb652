{
    "title": "TRANCE, Inc. 08",
    "pages": [
        "\"That was fucking hot!\" Amber's voice brought me back to reality and I realized I had almost dozed off in the shower, the hot water cascading over my head and through my hair. \n\nI let my worries about Terra slide away like the water sluicing the sweat from my skin. Turning, I wrapped my arms around my girlfriend's waist, pulling her closer in the confined space. \"Yes...\" I murmured, kissing her deeply. \"It was...\" \n\nHer bright blue eyes shone into mine and her face was still flushed with a post-orgasmic glow. \"So, how was your morning?\" \n\nI considered for a moment as we switched places, Amber taking her turn under the running water. \n\n\"It was good,\" I told her. \"I talked to Mike Lassiter about finding a freelancer to do my job and give me some free time, and after that I went out to try and look for a martial arts studio. I found one that I really liked and the trainer took me through a beginner workout.\" My body sagged as it remembered the grueling training Terra had taken me through, and I wondered whether beginner was really the right word to describe it. \n\n\"Martial arts?\" Amber's voice was a little surprised. She turned to face me, her drenched body pressing distractingly against mine as she looked up into my face. \"Does this have to do with last night?\" \n\nMy face must have exhibited a bit of a sheepish look, because she shook her head and placed her hands on my chest. I tried to stay focused on her words but it was difficult with her perky breasts, all slippery from the soap and water, right there distracting me. \n\n\"You know that you don't have to worry about that, right?\" she asked. \"You don't have to protect us, and you don't have to worry about not being strong enough to take care of things.\" \n\nI tried to smile, but ended up only managing a lopsided grin. \"I need to be better,\" I told her. \"Last night was just a wakeup call.\" \n\nAmber bit her lip and looked down. \"Well,\" she murmured. \"I support you in improving yourself...\" She glanced up through her lashes. \"Even though I think you're perfect how you are.\" Her angelic smile took a seductive turn, her hand slowly reaching out and her fingers wrapping around my cock. \n\nMy breath caught as she began to stroke up and down. \"You're perfect...\" I breathed as the blonde goddess knelt at my feet, taking my growing length between her lush pink lips. \n\nShe moaned, her eyes closed. \n\nMy head dropped back and I enjoyed the sensation of the hot water beating against my chest while my pornstar girlfriend sucked my cock back to full hardness. \n\nThank god for modern plumbing, because the water never grew cold as my tired body was granted a surge of energy and I fucked Amber for the second time that afternoon. \n\nAmber and I lounged in bed for a while after our shower, naked and perfectly comfortable with it. I couldn't think of a time I'd been more at ease around another human being. I enjoyed it. We streamed a few short episodes of a web television series, and decided that it would be \"our show.\" I liked the idea of having something special just for Amber and me \u2014 after all, she was my number one. \n\nAs Amber went into the kitchen to eat a late lunch, I browsed the internet and thought back through my day. It had been a unique one, and it was a strange feeling to know that this might become my new normal. For the first time in my life I didn't really have any obligations. No work to worry about \u2014 though I knew Lassiter still wasn't perfectly satisfied with our arrangement \u2014 and no problems to occupy my thoughts. It was nice, like a vacation, but as I lounged I knew that if I didn't give myself something to work on soon my brain would tear itself to pieces. \n\nOne day at a time. I told myself sternly, flipping closed my laptop and going to the dresser. Don't prevent yourself from enjoying the moment by worrying about the future. I pulled on a pair of boxers and ambled into the kitchen. \n\nThe others arrived home over the next hour or two, Daisy and Carmen bouncy and chatting as they entered around 4 o'clock and Victoria closer to 5:30. It was a Tuesday night, but every night felt like a party with my four gorgeous women around me.  \n\nVictoria had returned with groceries, and it occurred to me for the first time that there were practical things \u2014 like making sure we had enough food \u2014 that I could do during the day to make sure my ladies' lives were easier. I wonder if this is what a stay-at-home husband feels like, I mused, and then immediately banished the comparison far from my mind. Yikes! I thought. Even just the word \"husband\" was still too scary for a young guy like me to think about. \n\nTo my surprise, Daisy immediately rose from my lap to join Victoria in the kitchen, kissing me a quick goodbye on the cheek. \n\nI watched her tight ass as she crossed the cheap tiled floor. \"Daisy cooks?\" I wondered aloud to Carmen, and she grinned as she leaned up against me. \n\n\"Saves me the trouble,\" she answered. \"I'm not great in the kitchen... Well, not with cooking, at least.\" To make sure I caught her drift, she kissed my neck and tugged gently at my earlobe with her teeth. \n\nI laughed softly and turned, kissing her on the mouth. \n\nShe sighed contentedly and grabbed at the front of the tee shirt I'd thrown on, pulling me closer. Her lips were soft and I could taste her sweet chapstick. \n\n\"You'll have to show me sometime,\" I told her when we came apart. \n\nMy teenage minx grinned. \"Yes, sir...\" she murmured. \n\nOur meal was delicious, and after I helped Carmen wash the dishes we headed to the livingroom to relax, hooking up my laptop to the TV. Picking a movie was hard work with five sets of preferences to please, but eventually we settled on a classic romantic comedy \u2014 When Harry Met Sally. The girls had gone crazy when I said I hadn't watched it, and I didn't want to burst their bubbles by reminding them that I'd not really had anyone to watch romantic movies with before them. \n\nIt's not like I'm totally inexperienced, I consoled myself while the girls found a place to site the film. I've had girlfriends... The snide, insecure voice in the back of my mind hastened to remind me how disastrous and short term those efforts had been, but I snuffed it out. Tonight is for me and the girls. Fuck off. \n\nThe film was good, the perfect relaxing combination of cute, charming and clich\u00e9. When the credits rolled, I sighed contentedly and looked around. My small livingroom was full to bursting. Daisy was laying on the couch with her head in my lap, my fingers playing with her flowing crimson hair. Carmen and Amber were stretched out on the carpet under a blanket and Victoria, meanwhile, had just finished a glass of wine and was seated at the other end of the sofa wielding the remote. \n\n\"We should do this more often,\" I declared, stretching and leaning back into the pillows. \n\nEveryone looked around, and smiles lit up four beautiful faces. \n\n\"Mmhmm,\" Daisy sighed contentedly from my lap, closing her eyes. \n\n\"Agreed,\" Victoria declared. \n\nAmber nodded and Carmen kissed my girlfriend's shoulder while she looked up at me with a puppy dog expression. \"Can we watch another?\"she asked, pouting cutely, and I laughed. \n\n\"I suppose it's not past your bedtime yet,\" I answered, chuckling, glancing at an imaginary watch on my wrist. \n\n\"Thank you, Daddy,\" Carmen murmured mischievously, batting her eyelashes up at me, and I felt my stomach do a little flip flop at the embers of desire in her voice. She rose to all fours, crawling across the floor and up onto the couch between me and Victoria. I admired her slim figure as she moved, getting tantalizing glimpses of her skin in the old, too-big tee shirt of mine that she'd turned into a crop cop and a pair of grey sleeping shorts she'd slipped into for the evening. \n\nVictoria rolled her eyes in mock disgust and stood. \"Wine, anyone?\" she asked, and she got a chorus of yes's from Amber and Carmen. Daisy shook her head peacefully, not opening her eyes from where she lay, my fingers still slowly moving through her hair. \n\nWhen Victoria returned, she carried three glasses of red wine and a newly opened bottle (which she placed on the coffee table). She handed a glass to Carmen, who blew the older woman a kiss, and then settled down with Amber on the carpet. \n\n\"It's been a while since I laid down on the floor for a show,\" she said with a grin. \"I feel like I'm at someone's house for a slumber party.\" \n\nAmber laughed and I savored the happy sound as it lit up the room. \"I'm glad your parents are letting you stay over.\" \n\nInstead of another movie, we settled in and decided to select a show we could binge watch as a team in the coming weeks. After filtering through a couple we chose Suits, a legal drama that I was hooked on after the first episode. One of the primary characters, Harvey Spectre, looked like a blueprint for the kind of man I wanted to become \u2014 suave, successful, confident and sexy. As we fired up episode two, I watched him carefully, deciding that this show was going to be as much about research as it was about entertainment. \n\nAt some point while we enjoyed the evening, Daisy drifted off to sleep. The other girls were on their second and third glasses of wine, and I was starting to feel the workouts of the day \u2014 from Terra's beatdown to Amber's shower caper. It was time for bed. \n\nCarmen kissed me on the cheek as I rolled my neck and rubbed my eyes. \"You ready to be up and at 'em tomorrow?\" she asked with a smirk. \"I'm not letting you miss our first run.\" \n\nI groaned and flopped back into the cushions. At the movement, Daisy blinked and opened her eyes. \n\n\"What's up?\" she murmured sleepily, and I stroked her forehead gently. \n\n\"Time for bed, lover,\" I told her, and she nodded, sitting up slowly. \n\nAmber and Victoria, cuddling on the floor, gathered up their blanket and glasses, the brunette picking up the now-empty wine bottle as they headed into the kitchen to dump the dishes before turning in. Daisy headed directly for the bedroom, but as I started to follow Carmen grabbed me by the wrist and pulled me back down. \n\nHer eyes were bright. \"Let the others have the bed,\" she told me. \"I want you on the couch like my sister had you yesterday.\" \n\nI had no doubt about what she meant, and even though my tired brain was begging for sleep the rest of my body perked right up. \n\n\"Besides,\" she added, nodding logically. \"We wouldn't want to disturb the others when we're up bright and early in the morning, would we?\" \n\nI shook my head in agreement as she knelt on the cushions in front of me. She tossed her hair back over her shoulders and looked up into my face, a smiling curving across her mouth. Then, she leaned forward pushed me back into the arm of the couch, bending down to kiss my bare chest. \n\nShe trailed her lips down my stomach, then, with a grin, tugged at the waistline of my sweatpants. \n\nI lifted my hips obediently and she slid them down my legs in one practiced motion, discarding them to the top of the coffee table. My heartbeat sped up and my cock stiffened as she eyed me hungrily, then sat back on her heels. \n\nRaising her arms, she pulled the cutoff tee shirt over her head and dropped it to the floor, her toned body revealed only in the light of the lamps. She let one of her hands play with her hair, lifting it as she closed her eyes and arched her back, the other hand teasing down to tweak one of her nipples. \n\n\"Fuck me...\" I breathed, the blood rushing down south and making my length swell. \n\n\"Mmm... \" Carmen murmured, opening her eyes and staring at me with naked desire plain on her face. \"I intend to.\" She leaned forward, her hair brushing against my thighs, and stopped a hair's breadth from my throbbing cock. Her breath was warm on the sensitive skin and her green eyes twinkled. \"Are you going to ask nicely, Daddy?\" she grinned, daring me to play along. \n\nI flexed my fingers, trying to control myself, and let my need show in my expression. \"Please suck my cock, baby girl?\" My voice was husky and low, and I felt a pulse of excitement run through me as I slipped into the role. \n\n\"Anything for you, Daddy,\" she whispered, staring into my eyes as she lowered her mouth. \n\nI hissed through my teeth as I felt the suction, the pleasure boiling through me like water in a kettle. I lifted my hips and pushed myself into her throat, Carmen only hesitating a moment before relaxing and taking my whole length. \n\n\"That's a good girl,\" I growled, reaching down and tangling my fingers in her deep red hair. I pulled her head down until her nose touched my belly, her eyes widening slightly as I took control. \n\nShe swallowed, massaging my shaft with her throat and I groaned with pleasure, releasing my grip on her head. Without missing a beat, she began to bob up and down, her tongue sliding around my shaft while her lips sucked and sucked at my length. \n\nI felt myself swelling even harder inside her, her sweet mouth the perfect place to shove my throbbing cock. \n\nBut Carmen had other ideas. \n\nShe pulled back, tossing her hair over her shoulders as she licked her lips and stared down at where I lay beneath her. Her lips were wet and shone in the lamplight. \"You have such a nice big cock, Daddy...\" she told me, eyes burning into mine. Her fingers traced down her body and teased at the hem of her shorts. \"I wonder what will happen if you...\" She pulled them slowly down her slim legs. She wasn't wearing any panties, and she was shining wet with desire. \"Try and fit it in my tight little pussy...\" \n\nI groaned, reaching out and sliding my hands up to her hips. \"Let's see, hmm?\" I asked, and she nodded eagerly, biting her lip. I pulled her forward, Carmen lifting her leg and kneeling just above my rock hard cock. I nestled up against her entrance, the tip of my length spreading her apart. \"Ready, darling?\" I murmured, my eyes half closing, feeling her heat. \n\nWithout answering, Carmen lowered herself onto me. She moaned with ecstasy as I split her in half, her body tight and hot and wet and perfect around me. My hands on her waist squeezed tighter as I gasped, her pussy gripping me even stronger than usual in this position. Then, I raised her up and brought her down again. \n\nCarmen arched her back and groaned softly again, her mouth opening as the air escaped her lungs. Her body was outlined in light but her face was thrown into shadow, so all I could see was the red tint of her flowing hair. \n\nShe rose up and down, gasping as she began to fuck me in earnest. Her hips rocked up and down against me and I lifted myself to meet every movement. \n\nMy world narrowed to our two bodies, sheathing myself in her core with every movement. I laid back, my hands sliding up to cup her breasts, one in each palm. I felt her hard nipples pressing into the skin and squeezed them between my spread fingers. \n\nShe cried out sharply, her body rippling in the lamplight as she came and fell forward, her hands on my chest the only thing keeping her up. \"Fuckme fuckme fuckme...\" she gasped, and I did. \n\nMy hands went back to her hips, easily lifting her slightly-built figure and then driving myself up into her as she came down. I didn't give her time to recover from her first orgasm, pounding inside of her mercilessly as my own cock begged for release. Up and down, her pussy clenched around my pistoning rod. \n\n\"Oh yes, Daddy!\" she called softly, biting her lip as her eyes squeezed shut. \n\nI sat up, chest to chest with her as she bounced up and down on my length, burying myself in her body with every upward thrust. Lowering my head, I took one of her nipples in my mouth and sucked, lashing it with my tongue like I was licking her clit. \n\nHer body shuddered as she came again, and this time I came as well, slowing my movements as my body shuddered and my cock released its load inside of her. My hands clamped down on her hips, electric heat jolting through me. My muscles locked and then released, the spreading warmth finally exhaling in one explosive breath as I fell back onto the pillows. \n\nCarmen sprawled forward onto my chest, her head nestled in my shoulder. \n\nWe lay still for a moment, then she raised her head and kissed my neck. \"Did your little girl do good?\" she whispered in my ear. \n\n\"Mmhmm...\" I managed, my exhausted body relaxing in post-orgasmic bliss. \n\nThe 18-year-old giggled. \"Did I wear my daddy out?\" she whispered. \n\nI groaned and slid out of her, finally, my head falling back limply. \"Uh-huh.\" God this girl is fucking hot... \n\n\"Mmm, good...\" she murmured, reaching down to grab a pillow and blanket from the floor before nestling herself against me. Her bare skin was warm against mine and I reveled in the feeling of closeness. \n\nThe lamp still shone with its muted golden light, but I didn't have the energy to sit up and turn it off. I lay there for several moments before giving up the attempt to find motivation. \"G'night, baby,\" I told Carmen softly, kissing the back of her head. \n\nHer hair tickled my nose as she stirred slightly, but I realized she was already asleep. \n\n* * * \n\nI woke to the exquisite sensation of a pornstar's lips wrapped around my morning wood. \n\n\"Oh fuck...\" I groaned, my eyes popping open as I recognized the fantastic feeling. \n\nThe glowing golden light of the rising sun was barely peeking over the tops of the buildings around us to creep in the living room window, but Carmen had apparently awoken without an alarm (or I had been so deeply asleep that I hadn't heard it). \n\nThe redhead felt me stir and her eyes flashed to my face as she looked up from her task. \n\n\"Fuck...\" I moaned again as the teenager used her hands to pump up and down my shaft. I could feel the tightness in my balls as I got closer to spilling myself into her eager mouth, but as I closed my eyes again to enjoy her ministrations I heard a soft pop and felt myself freed from her sucking lips. \n\nMy eyelids snapped up and I squinted down at her. \n\n\"Up and at 'em, sleepyhead,\" Carmen purred teasingly, stuffing me back into my boxers and rising. She was still naked, and my slowly-waking eyes traced her lithe figure. \"I'll finish you off in the shower as a reward for doing our first run together.\" \n\nI sat up and reached out to grab her, but she skipped out of reach with a soft laugh. \n\nI wrinkled my nose and mock-scowled at her. \"Fine,\" I pouted, then grinned. It was hard to stay mad when I had woken up with my cock in the expert cocksucking mouth of a teenage pornstar. \n\n\"I'm going to sneak into the bedroom and grab my running gear,\" the 18-year-old informed me. \"I'll grab you some clothes, too, 'kay?\" \n\nI nodded, and fell back into the pillows as she padded softly out of the room. \n\nAs expected, my body was sore from yesterday. It wasn't really the muscle pain I'd experienced after my few attempts to go to the gym and lift weights, but rather a tiredness that seemed to permeate my entire musculature. Today should be fun, I thought glumly, but steeled myself. This is what it takes to level up. \n\nI checked my phone \u2014 the ungodly hour was just past 6:30 \u2014 and groaned. I hadn't woken up this early (by choice, at least) in years. \n\nCarmen slipped back into the room as I was checking my social media feeds, and I gave a soft oof of surprise as a bundle of clothes plopped onto my belly. \n\n\"Chop, chop!\" my running mate ordered, and I gave her a suspicious look as I sat up and tugged on the shorts and tee shirt. \n\n\"You're enjoying this, aren't you?\" I asked, pulling one sock and then the other over my toes. \n\n\"It's fun to be giving the orders for a change,\" Carmen told me with a wink, then bent down and kissed me on the forehead. \"But don't worry, you're still in charge where it counts.\" ",
        "\"Mmm...\" I grinned up at her, reaching over and grabbing my pair of athletic shoes. \"So what's next, little miss trainer?\" \n\nShe pulled her hair back into a ponytail and used a hair tie to hold it. I admired her body as she tugged on a pair of black yoga pants with white racing stripes down the sides, then a pink sports bra with the words \"Victoria Sport\" on the elastic. She answered while lacing up her white running shoes. \"Let me show you.\" \n\nI could tell Carmen was going easy on me as we jogged through the early morning air, her stride steady and confident while I felt about as clumsy as a waddling penguin. We had hit the street outside the apartment for a quick warm-up and a few stretches before Carmen had said, \"Let's go,\" and headed off at an easy lope. \n\nI had no problem keeping up with her... for the first 200 yards. After that, well... It was another story. \n\n\"I... Hate... Running...\" I panted, sweat beading on my skin even though the morning air was cool to the point of being chilly. \n\nCarmen just glanced over her shoulder at me and smirked. Her voice was as steady as her gait. \"Is that so?\" she asked. \"Do you hate what I'm going to do to you when we're done?\" \n\nI glared at her, but felt a tingle of warmth in the pit of my stomach that didn't have anything to do with the exercise. \n\n\"Stick it out, Chance,\" the teenager ordered. \"You got this.\" Then, she sped up as we headed up a shallow slope. \n\nI gritted my teeth and followed. \n\nI'm not sure when it happened, but we were probably a quarter of an hour into our jog when my leaden legs lost their weight. I was so surprised at the realization that I almost gasped, and then I realized that my breath had quieted a bit, down to a steadier rhythm. My arms pumped in time with my legs, and I actually grinned. \n\nWhat the fuck is this? I wondered. \"Why... do I feel... good?\" My voice wasn't nearly as easy as I wished it to be, considering how slowly we were going, but Carmen laughed and answered without a hint of judgement in her tone. \n\n\"Runner's high!\" she told me joyfully, raising her arms to the softly glowing blue sky for a moment. \"I was hoping you'd catch it today.\" \n\nHmm... I pondered as we reached a landmark I recognized and I knew that we were on the back end of our journey, returning to my apartment. Maybe I don't hate running so much after all. \n\nWe slowed to a halt outside my building a few minutes later and I sucked in deep breaths of air, hands on my knees, while Carmen rolled her neck and looked like she had just completed her warm-up. \n\nWhen I caught my breath, I smiled and approached her. Putting my hands on her bare shoulders, I stared into her face. \"Thank you,\" I told her sincerely. \"For including me. And for helping me to get in better shape. It's important to me.\" \n\nCarmen looked down, suddenly struck by shyness at my gratitude even as she beamed. \"Glad I could help,\" she replied, and I kissed her as she raised her head again. \n\nI stepped closer, my hands circling around her waist and pressing into the small of her back. \n\nThe redhead shivered softly as a cool breeze momentarily disturbed the air and chilled the sweat on our skin, and I could feel the goosebumps rise beneath my fingers. It was an idyllic moment. As we pulled back, I asked without thinking, \"Do you want to move in with me?\" \n\nCarmen's eyebrows scrunched together as I threw her the question unexpectedly. \n\n\"For real, I mean,\" I stumbled, trying to clarify. \"Officially. And probably in a bigger place. Which I haven't found yet, because I wanted to ask you first. With Amber, of course,\" I added. \"And your sister and Victoria, but I haven't asked them yet\u2014\" \n\nCarmen kissed me again, and I could feel her practically jumping with joy. \"Yes!\" she said, looking into my face. \"Yes yes yes!\" She hugged me, and then stepped back and looked me up and down. She laughed at my expression, and rolled her eyes teasingly. \"Not that it will make a difference in our living arrangement, but it's nice to be thought of... 'Officially.'\" \n\nMy body sagged with relief. Man, I thought. I didn't realize how stressed I was about asking her. \n\n\"Good.\" I said, the weight of the stress lifting from my shoulders. \"Good.\" \n\nThe slim redhead grabbed my hand and pulled me up the stairs. \"Now we have an even better reason to celebrate!\" she told me, smiling and biting her lip, green eyes shining. \"You finished your first run and you asked me to move in with you.\" She laughed and winked at me. \"Not sure which was more difficult for you.\" \n\nI tried to scowl at her but couldn't stop the snort of laughter from breaking through. \"Thanks,\" I told her wryly, ignoring my burning leg muscles as we ascended the stairwell. \n\nWe'd left the door unlocked and I peeled my shirt off as we stepped inside. It was still dark in the hallway and bedroom, and I tossed the bundled up garment towards the laundry corner when we tiptoed through past our sleeping companions and into the bathroom. \n\nWhen we flipped on the lightswitch and caught sight of our reflections standing in the mirror, Carmen suddenly froze, an unreadable expression on her face. Then, she turned toward me and put a hand on my chest. I was worried for a moment until a sly smile curled across her lips. \n\n\"Daisy is already up, meditating in the living room,\" she whispered, keeping her voice down so as not to disturb the women who were still bundled up under the covers a dozen feet away. \"If you like...\" she traced her fingertips across my chest, \"we can show you your surprise now...\" \n\nI hadn't noticed who was still asleep in the darkened bedroom, but now that I peered over at the bed there were only two figures in among the covers and pillows. \"Is she usually up this early, too?\" I asked. I didn't realize how oblivious I was to everyone's daily schedule. \n\nCarmen nodded. \"She does her thing. I do mine. But we like to spend time together.\" \n\nI felt a momentary pang of guilt. Am I encroaching on their Twin Time? \n\n\"Don't worry, handsome,\" the redhead told me, obviously noticing my discomfort. She stood on her tiptoes to whisper in my ear and then trail several kisses down my neck. \"We love spending time with you, too.\" She fell back onto her heels and looked up at me. \"So...?\" she asked. \"Your surprise?\" \n\n\"Oh! Yes,\" I answered, eyes widening with excitement. \"Please... I've been wondering about it since the other night!\" I stuck my tongue out at her. \"I would have interrogated you two about it more if you hadn't kept distracting me.\" \n\nThe 18-year-old smiled broadly and nodded, padding barefoot across the floor and across the hall into the living room. \n\nI turned back and stared at myself in the mirror. I was happy at how eager she was to share with me, and I was still tingling with the adrenaline rush of the run, but I was more pleased that she had said yes to moving in with me. Two down, I thought. Two more to go. I wondered how I should ask Daisy and Victoria, but pushed the thought aside. Later. The two teenagers were returning with their gift. \n\nGiven what Carmen had promised me for our shower together, I assumed that the twins' surprise must have been something sex-related, but when Carmen returned with Daisy they were empty handed. \n\nMy eyes flicked from one to the other \u2014 Carmen with her hair in the ponytail, damp with sweat, still wearing the yoga pants and pink bra, and Daisy with her loose hair pushed back cutely behind her ears in the baby blue hoodie and sweatpants she'd been wearing when I'd first met the pair. \n\n\"Morning, Chance,\" she murmured, smiling demurely at me. \n\n\"Hey, Day,\" I replied, grinning. \n\nCarmen closed the door behind them, and then, as I leaned back against the sink, the pair began to strip. Dark red hair tumbled down their backs, Carmen releasing her hair from its hair tie and shaking it loose. Daisy, staring into my eyes, slowly unzipped the hoodie to reveal her smooth stomach and pert breasts, completely naked beneath the jacket. \n\nI drank them in with my eyes, reveling in the show they were giving me. \n\nCarmen turned around and, making sure I was watching, bent over, slowly rolling the yoga pants she'd been wearing down her athletic legs. Without removing her open jacket, Daisy did the same with her sweatpants. Moving almost in unison, the twins provided a hypnotic reflected image of one another as they slipped out of their panties, before standing up and facing me together. \n\nI gave them a calculating look. Daisy lowered the her hood and Carmen lifted her eyebrows at me playfully. \n\n\"Are you ready?\" Carmen asked. \n\nI swallowed, not from nervousness but to hold back the heat that was building in my body as I watched them. Then, I nodded. \n\n\"Close your eyes,\" Daisy ordered, her expression revealing nothing. \n\nIt was my turn to raise my eyebrows, but I did as I was told. There was a rustle of cloth, and I heard the clink of Daisy's zipper as her hoodie hit the floor. There was the shuffle of feet on the tile, as though the twins were moving, and then silence. \n\n\"Open your eyes,\" one of the twins said. Without my sight, I couldn't tell which girl the voice belonged to, but I lifted my lids and felt a throb of arousal shoot through me. \n\nThe two nymphs were totally naked before me, their green eyes bright as they sought my approval. They had both raised their hands behind their heads, pulling back their hair from their shoulders, and I could finally see what they'd been hiding. Under their left arms, arcing across the top of their rib cages where they had previously been hidden by shirts, sports bras or hoodies, were matching, darkly inked tattoos in stylish script. \n\nProperty of Chance. \n\nI was speechless. Holy fuck... \n\nMy twin pornstars were eyeing me with a burning desire in their eyes. Seeing my shocked expression, they shared a glance and then matching smiles touched their sculpted mouths. They turned to face me. \n\n\"We belong to you, sir...\" Carmen murmured, stepping forward and placing a hand on my shoulder. \n\n\"Body and mind...\" Daisy agreed, slipping forward and letting her fingertips trace down my torso. \n\n\"We'll do anything for you...\" \n\n\"And you can do anything you want to us...\" \n\nTaking me by the hand, they led me wordlessly to the shower. Daisy turned the faucet on and steaming water quickly began to jet against the wall. \n\nThe twins were eyeing me, waiting for a response, but I was still speechless. I'd never had a girlfriend for more than a few months, and now I had two 18-year-old stunners with tattoos proclaiming my ownership. \"Wow...\" The gasp tumbled from my mouth as I finally regained control over my voice. \n\nThe twins shared a quick glance, and I detected a hint of worry creeping into their expressions. \n\nThey thought I didn't like it. Can't have that, I thought. Gotta make sure they feel my appreciation. What they evidently couldn't tell was how hot I thought it was \u2014 this pair of beautiful women, completely and utterly mine. \"I'm definitely surprised,\" I told them emphatically. I looked from one to the other, staring into their emerald eyes. \"And I love it...\" \n\nA subtle relief relaxed their tensed bodies, and they grinned at me as one. \n\n\"Good...\" Carmen murmured, stepping back under the jetting water and shivering with delight as the pleasurable heat hit her skin. She pulled me forward and I stepped into the shower after her. \n\nDaisy followed, her hands on my shoulders and her fingers massaging the muscles that were still sore from yesterday's exercise. \"Now,\" the second twin told me, her voice full of longing, \"close your eyes and let us show you what it means to own us...\" \n\nA smile slid across my lips as I closed my eyes and relaxed, letting the steamy heat of the water wet my skin as the twins moved in the confined space. \n\nTwo pairs of hands stroked my body, gliding smoothly across my wet skin. I gasped softly as fingers encircled my cock, which had grown at the sight of my twin beauties and their declaration of submission. I kept my eyes closed but let out another sigh as I felt one of them kneel at my feet and take me into her mouth. Meanwhile, another pair of hands massaged my scalp, relaxing me so that all of my focus could be on the pleasure of her sister's lips wrapped around my shaft. \n\n\"Do you like that, sir...?\" one of the twins whispered in my ear as the other sank her mouth further onto my stiffening length. \"Do you like my sister's hot, slutty mouth on your big, hard cock?\" \n\nI nodded. \"Mmhmm...\" I groaned as the woman at my feet pulled back slowly, her hand stroking my rod. \n\n\"Good...\" The woman's voice was throaty and aroused. \"All we want is to please you...\" \n\nThe water pounded on my chest and I could hear my heartbeat in my ears as the fingers in my hair trailed down my back and legs as the second teenager knelt with her sister. Then, I grunted as I felt a second pair of lips and a tongue begin to lavish my cock with attention. \n\nWorking in concert, Daisy and Carmen began to pleasure me in earnest. I felt ready to burst, my balls tight as one mouth wrapped around the throbbing head and another smooth tongue slid up and down the shaft. One set of fingers gently massaged my testicles as another traced fingernails down the sides of my legs, sending shivers of pleasure through my body. \n\nI grunted as the mouth at the head suddenly leaned forward, engulfing a quarter, half and then my entire length. \"Fuck...\" I moaned. \n\nThe mouth on my cock began to bob up and down, tongue swirling around and around as I felt my shaft massaged by a set of perfect lips. \n\n\"That's it, suck your Master's cock like a good little slut...\" her sister encouraged. \"Take it deep and show him how much you want his cum.\" \n\nThe sound of one twin wantonly encouraging the other sent another shiver of lust through me. I wanted to open my eyes, but kept them squeezed shut, enjoying the unique sensation as my senses took over. \n\nThe first mouth slid off my cock and was immediately replaced by a second. I grunted as the twin slid me all the way into her throat in one smooth movement, my cock sheathed in her mouth to the hilt. She held me there for a moment, then swallowed, and I felt my entire length massaged by the movement. Her throat was volcanically hot, my sensitive skin burning pleasurably in the tight confines. \n\n\"Good girl... \" her twin murmured from her knees. \"Take all of it. Shove his cock down your slutty little throat.\" \n\nThe girl gasped as she finally drew back, her hands immediately pumping up and down on my shaft and pulling me even closer to the edge. \n\n\"Close,\" I grunted, focusing on holding back just a few more moments. \n\n\"Good...\" the twin moaned huskily. \"Cum for us, sir...\" \n\n\"Please...\" the second voice joined in, hands never ceasing to stroke me faster and faster. \"Cum for us. Cover us in your seed. Mark us once and for all...\" \n\nI came, exploding with the pent up energy that had been building since Carmen had woken me with her mouth on my cock. My eyes flew open as my body tensed and then released, watching through the streaming water as strand after strand of my cum covered the twins' upturned faces. \n\nTheir green eyes were bright as they knelt at my feet, burning with lust and pleasure as they pleasured me with their bodies. Their lips were parted, and they let my hot spunk land on their cheeks and spill into their mouths. Their hair was wet and fell down their backs, the bright crimson turned to a darker, deeper red with the water. \n\n\"Shit!\" I gasped as I finally slumped back against the wall, one of twins stroking my cock and milking the last few drops of my cum onto her outstretched tongue. I tried to distinguish one from the other, but they were matching visions of sexy, slutty debauchery \u2014 faces drenched in my seed with matching expressions of utter contentment. \n\n\"Thank you, sir...\" the girl on the right murmured, kissing my cock reverently and staring up into my eyes. \n\n\"Thank you...\" her sister echoed, slowly dragging a finger through the cum on her cheek and popping it into her mouth. \n\nI closed my eyes again as the girls stood, feeling the still-steaming water pounding against my skin. How can I keep this forever? I wondered as the warm glow of pleasure filled my body. What do I need to do? \n\nThen, I turned the thought into a pillar of determination. You'll never want for anything, I promised the twins as they began to spread soap across my chest and shoulders. I opened my eyes and my mouth relaxed into a grin. After all, a man should take good care of his property. \n\n* * * \n\nAmber and Victoria were surprised that I already had two steaming cups of coffee ready for them when they walked into the kitchen. \n\n\"Somebody's up bright and early,\" Amber said, my bombshell girlfriend stepping lightly up and standing on her tiptoes to kiss me on the lips. Her large tits strained against the thin fabric of her grey, cropped tee shirt and I felt her nipples hardening against my chest. \n\n\"Had a bit of a run with Carmen,\" I told her, smiling proudly, squeezing her round ass with one hand as I reached over to hand her her mug. \n\nVictoria moaned softly against as she leaned up to kiss me as well. Neither of the women wore more than a sleeping shirt and a pair of panties, and the smooth expanses of bare skin send a shiver of desire through me. \n\nYou're one horny man, I chastised myself. Give them a minute's rest before you bend them over and fuck them on the kitchen counter. \n\n\"Then the girls wanted to show me their surprise,\" I added, nodding over to where Carmen and Daisy sat side by side on barstools at the kitchen island. \n\n\"Ooh!\" Victoria grinned and accepted her own coffee cup, eyes widening as she looked over at the pair of redheads. \"What was it?\" \n\nThe twins looked at one another with sly smiles. Carmen wore a loose white blouse that fell off one shoulder and a pair of blue jeans with a flared hem at her calves. Daisy, meanwhile, was encased a tight blue sweater that clung to her slim figure and black jeans just as form-fitting. Their hair was still a little damp from our extended shower, but each girl looked so put together that I almost couldn't believe that less than an hour before the pair had been kneeling at my feet, begging for me to cover their gorgeous faces in my hot cum. \n\nThe teenagers rose and lifted their tops, turning to show off the flowing tattoo that ran across their smooth skin in dark ink. \n\nProperty of Chance. \n\nA shiver of pleasure jolted down my body as I saw them once again. Mine... I thought, a protective feeling settling over me. I glanced over to see how the other women reacted. \n\nAmber's face was a picture of delighted surprise. \"Ohmygod!\" she squealed. \"That is sooo hot...\" She ran across the kitchen and wrapped her arms around the other girls, pulling them tightly into her. \"You two are honestly perfect. I'm sure Chance loved those.\" She looked over her shoulder and I grinned, nodding in confirmation. \n\nVictoria, meanwhile, raised her eyebrows but said nothing. The most responsible one of the group, I had honestly expected her to be more thoughtful in her reaction. \"What're you going to tell people who ask about them at work?\" she asked. \"It's not like no one is going to notice.\" \n\nI furrowed my brow. Now that I thought about it, I realized that in their business it wasn't as if they could cover the tattoos up. Someone was bound to see, most likely sooner rather than later. \n\n\"Don't worry so much, V,\" Carmen responded, dropping her blouse back down over her ribs. \"If anyone asks, we'll tell them that they just mean 'our lives belong to chance and luck, and we're just along for the ride' or some other teenage hipster BS.\" ",
        "\"We didn't just do this impulsively,\" Daisy added calmly, rolling the sweater back down and flashing a warm smile. \"Promise.\" \n\nVictoria gave the pair a brief look that conveyed her feeling of responsibility for her two younger companions, and then let her lips curve into a smile. \"Then I'm happy to say that I think it's a wonderful surprise you two came up with.\" \n\nShe crossed to the other three women and kissed Carmen and Daisy both on the forehead. She threw me a look over her shoulder. \"You going to join this group hug or what?\" she asked, smirking. \n\nChuckling, I set down my own coffee mug and walked over to wrap my arms around the group and give a soft squeeze. As we pulled apart, I realized how much I enjoyed waking up early. It wasn't just the fact that I'd been able to make coffee for Amber and Victoria before they'd gotten up or that I'd enjoyed a steamy shower with the twins. I felt like I had a head start on my day, which was a new and surprising sensation. \n\nThe others made breakfast, and I munched thoughtfully on a piece of buttered toast while my scrambled eggs cooled on my plate and the girls chattered about their plans for the day. I looked up when Carmen bumped me with her hip to get my attention and then glanced over at Daisy. \n\n\"By the way, Day,\" she asked her sister. \"Do you want to head back over to our place this afternoon? I know you get off work before me and you told me you wanted to pick up some of your... things.\" Carmen gave her sister a knowing smile, but I wasn't quite sure what it meant. She finished as Daisy blushed a little and glanced down. \"Chance could drive you over,\" she suggested, and I realized she was giving me the opportunity to have some alone time with Daisy and invite her to move in. \n\n\"Yeah!\" I agreed enthusiastically. \"I'd love to see where you two live.\" I gave Daisy a big smile, and she returned it, but for some reason she seemed a little uncomfortable. \n\n\"Okay,\" she agreed, nodding, but then she focused her attention on her plate of food. \"I'll be back in the early afternoon, if that's alright?\" \n\n\"Perfect,\" I agreed. I wondered what might be worrying the teenager, but pushed the concern to the side. I could ask her later when we were alone. \n\nEveryone cleared out after breakfast, and for the second morning in a row I found myself alone in the apartment. Today, however, I wasn't full of an aimless shame and sense of worthlessness. I had a purpose, and I pulled on my running shorts and a new workout shirt before heading down to the apartment parking garage. I hadn't been using my car much recently, and when I saw the beat up blue vehicle I remembered why. Still, it was cheaper than an Uber and would get me where I needed to go. \n\nI pulled up outside the Black Dragon Dojo ten minutes later and parked in a 2-hour public parking lot. Hopefully Terra doesn't take more than an hour or so, I thought. I don't know how much I can handle. Summing up yesterday's intense training and this morning's run, I had been more active in the past 24 hours than I had since I had run cross country on the high school track team. \n\nSquaring my shoulders, I took a deep breath and strode into the martial arts studio. \n\nLike last time, Terra was whaling away at the heavy punching bags, flitting like a butterfly from side to side with her dark hair pulled back in a ponytail. She wore grey leggings today, the tight pants clinging to her athletic figure and sending an uncomfortable amount of blood rushing south. Her smooth skin shone with a light sheen of sweat, and I admired the speed and precision of her strikes for a moment before I called out across the sea of blue mats. \n\n\"Hello!\" \n\nThe woman froze, the muscles in her shoulders tightening, before she slowly turned around. She reached up to turn off the wireless headphones I could now see plugged into her ears, and I saw the surprise on her face. She didn't speak, but instead jogged across the intervening space before slowing and coming to a halt. \n\nI forced myself not to admire her perky breasts as they bounced in her tight sports bra, instead meeting her eyes. \n\nThe woman gave me a look up and down that conveyed her disbelief. \"You're here,\" she said, her accent sculpting the words and distracting me with thoughts I should have saved for a later time. \n\n\"I'm here,\" I agreed, holding her gaze for a moment before coughing nervously and looking away. \n\nShe composed her features into an emotionless expression. I had the feeling that I would not enjoy what was about to happen. \"Then I guess it's time to get started.\" \n\nI slipped out of my athletic shoes and socks before, barefoot, I followed her out onto the mats. My instincts had been right, I didn't enjoy it. \n\nTerra drove me as hard as she had yesterday, if not harder, until I began to get the feeling that I was the object of some sort of personal grudge. Sweat stung in my eyes and each breath struggled sluggishly through my throat as my legs, tired from my earlier run, nonetheless worked overtime to keep up with Terra's snapping instructions. I lost count of my pushups, sit ups and suicides, my speed slowing to a crawl no matter how hard I gritted my teeth and pushed for more from my exhausted body. \n\nIn between circuits, Terra didn't give me a break. Instead, I was made to bounce lightly on my toes throwing combinations of jabs, hooks and uppercuts. \n\nWhat is the point of all this? I started to wonder, gasping and wiping sweat from my face with my forearm. It's not like I'm really learning anything. But there was no way I was going to back talk this sexy, frightening woman. \n\nThen, finally, came Terra's mercy. \"Alright, we're done.\" Her voice was cool and calm, her breath even and smooth even though she had participated in almost all of the exercise alongside me, handily outperforming my every effort. \n\nI slumped to my knees, palms pressed to the mat as I closed my eyes. Fuck... I moaned internally. How is this what you wanted? I asked myself silently. But, to my surprise, as I probed inward my determination to continue hadn't wavered. You'll be back tomorrow, it ordered. And the day after that. And on and on until you've made something of yourself. \n\nI took a long, shaky breath and raised my head. Pushing back the sweaty hair from my eyes, I looked around. \n\nTerra was eyeing me calmly from the edge of the mats, where she perched lazily on the perimeter wall with one leg pulled up to her chest. \n\nI stood and blew out a long stream of air before I walked across to stand in front of her. I nodded respectfully, not sure whether I was supposed to perform some sort of bow to my teacher. \"Thank you,\" I told her, my eyes lowered as I held the position for a moment. Then I stood straight and walked past her, only briefly glimpsing her expression in the corner of my eye. \n\nShe looked surprised for a split second, and then frustrated. \n\nWhat did I do now? I wondered, but didn't have the courage to ask. I pulled my socks and shoes back onto my sweaty feet and trudged from the studio. \"See you tomorrow,\" was all I said as I pushed out the front door and onto the sidewalk beyond. \n\nMy second shower of the day was shorter than the first, but only because I didn't have the energy to stay on my feet. I rinsed my body briefly and then collapsed, naked, onto my bed. \n\nI closed my eyes, taking stock. Legs? Still attached, barely. Arms? Droopy as spaghetti. Core? Sore and tired. My eyelids didn't want to open, so I lay in the darkened room and thought. Daisy would be back in an hour or two, which meant I had a little while to rest and strategize how I wanted to invite her to move in. My early wake up time was starting to catch up with me, though, and I could feel the drowsiness beginning to creep in. \n\nI'll worry about it later, I thought sluggishly, and then I fell unconscious into the darkness of sleep. \n\n* * * \n\nI woke up surprisingly refreshed, an unusual sensation after a daytime nap, and quickly dressed myself before fixing up a sandwich in the kitchen. I was just crumpling up my can of cola and aiming carefully at the trashcan across the room when the front door opened and Daisy entered, her dainty footsteps approaching down the hallway until she stood in the doorway. \n\n\"Ready to go?\" I asked, standing up and smiling broadly at her. It was hard not to be happy at the sight of my teenage lover, her body stylishly flaunted by her outfit and her features accented with the perfect amount of makeup. \n\n\"Sure,\" she told me, smiling back hesitantly as her fingers played with the strap of her purse. \n\nI remembered, suddenly, her anxiousness about taking me back to her place, and I wondered again about the cause. Well... I'll find out soon enough. \n\nWe headed down to the garage, but when I headed for my blue sedan Daisy hesitated. \n\n\"Why don't we take my car?\" she asked, green eyes flickering over to her far-nicer red sports car. \n\nI pursed my lips. \n\n\"I know the way, anyhow,\" she said hurriedly, taking me by the hand and pulling me toward her own vehicle. \"I'll drive and that way we can't get lost.\" \n\nI allowed myself to be dragged over and slid neatly into the passenger side without a word, but I knew something was up. Still, I didn't want to stress Daisy any more than she obviously already was. So, instead, I settled back in the comfortable leather seat and let her whirl me away, out of the parking garage and onto the avenue beyond. \n\nWeird... I thought as we purred down the city streets in the snazzy vehicle, realizing that I hadn't once asked about where the twins lived. Since they had been spending most nights with with me anyway, it had never occurred to me to wonder about their prior living arrangement. I resolved to be more attentive in the future, and then I cast my gaze out the window to figure out where we were going. \n\nWait... What? \n\nWe had left my neighborhood behind long ago and were currently cruising down the streets that made up the border between downtown and the suburbs. High rises stabbed up into the sky around us, and I knew from even my cursory knowledge of the City's real estate market that this was one of the more expensive boroughs. \n\nI was about to ask whether we were in the right place, but before I could open my mouth we pulled up a semicircular drive and rolled to a stop in front of one of the buildings. Before I could speak, a valet in a red vest and black slacks was opening my door. \n\n\"Welcome to Starside,\" he told me, giving me a professional smile. Glancing past me into the driver's seat, his expression grew more genuine. \"And it's nice to see you, Miss Evans.\" \n\nDaisy stepped out of the car, leaving the door open, and tossed the keys nonchalantly over the roof. \"Thank you, James,\" she answered, her voice suddenly sounding far more mature than I was used to hearing. \n\nThe valet caught the keys deftly and walked around the front of the vehicle, sliding in behind the wheel as Daisy linked arms with me and, without a backward glance, pulled me gently into the imposing lobby. \n\nThe room was built to impress, with high ceilings, a marble floor and a large, dark wooden counter running along the far wall. Leather couches were arranged around coffee tables and a cold fireplace, with half a dozen newspapers stacked neatly on various surfaces like they were just waiting for a financial tycoon to take the time to sit down and read them. Starside looked more like a five-star hotel than a residential building, and I suddenly felt incredibly underdressed. \n\n\"You live here?\" I breathed in Daisy's ear, feeling completely out of my element. How do two girls working as pornstars make enough to afford rent in this place? I wondered. I felt like I was in a strange dream, but wasn't quite sure when I'd fallen asleep. \n\n\"Yep,\" Daisy answered, her tone neutral. \n\n\"Miss Evans.\" The professionally-dressed black woman behind the counter nodded to us deferentially in greeting, though I saw her eyes spark when she saw me. \"You have eight missed calls and a message from\u2014\" \n\n\"Thank you, Miranda,\" Daisy interrupted her, her voice slightly more brittle than it had been before. \"I'll take care of those later.\" \n\n\"Of course,\" the woman answered, nodding again. \n\n\"This is Chance, a dear friend of mine,\" Daisy added as she steered me toward the golden doors of the elevator. \"I think Carmen added him to the visitor list a week or two ago.\" \n\n\"Yes, ma'am,\" Miranda replied, and then went back to looking at the computer monitor in front of her, though I could tell she was still watching us. \n\nI was bursting with questions, but waited for the elevator doors to slide open and then closed around us before I spun to face Daisy. \"What the fuck?!\" I demanded, laughing with a mix of surprise and shock. \"How the hell do you live here?\" \n\nDaisy, who had been carefully avoiding my eyes, glanced up into my face. \"Are you mad?\" she asked as the elevator rose. \n\nWhen I screwed my face up into an expression of obvious confusion, she clarified. \n\n\"That we didn't tell you...?\" \n\nI was instantly shaking my head, smiling reassuringly. \"No!\" I told her emphatically. \"Just confused...\" I gave her a perplexed look, but she spoke before I could ask again. \n\n\"How do we afford to live here?\" I caught a hint of bitterness in her voice, but it wasn't directed at me. \n\nThe elevator dinged open and I followed Daisy as she led me down a golden-carpeted hallway to a smooth wooden door the color of dark honey. A gold-colored plaque etched with 'No. 23' was bolted to the wall next to the entrance. \n\nFrom her purse, Daisy pulled a key with a matching number engraved into the metal and slid it into the lock. With a twist of her wrist and a soft click the door swung open beneath her palm. \n\n\"My father is Charles Evans,\" the redhead told me, not looking over her shoulder as she led the way into the apartment beyond the door. \n\nI furrowed my brow as I tried to recognize the name, but came up blank. Then, my mind really did go blank as I followed her into the twins' apartment. \n\nTo say the place was exquisite would have been an understatement. The apartment practically oozed wealth, from the wall-to-wall windows providing a view over the City's skyline to the furniture that could have been transplanted from an interior design photoshoot to the abstract art hanging on the walls and emitting an aura of class and high society. Forward and to my right was a step down into the living room, beyond which a sliding glass door opened onto a long balcony. Directly beside me on the right was a sleek modern kitchen, and on my left a long hallway with several closed doors led deeper into the residence. \n\n\"Wow...\" I barely breathed out the word, in awe of the place. \n\n\"You probably wouldn't have heard of him unless you were in the business,\" Daisy continued, dropping her purse on the marble-topped kitchen counter and moving through the livingroom to stand by the windows, \"but my father manages one of the biggest hedge funds in the country.\" I could hear a spark of pride in Daisy's voice. \"He and my mother travel constantly, but they set up Car and me in the City so that we could 'discover what we want to do with our lives.'\" \n\nA thought suddenly occurred to me as I followed Daisy, walking carefully and feeling as if I might disturb the serene beauty of the room if I made a misstep. \"And do they know about...?\" I trailed off, not sure how to broach the subject. \n\n\"They think I'm an artist and Carmen is a musician.\" Daisy's voice was very carefully neutral, but I could tell that she was holding back emotions that ran deep and had been growing for a long time. \"They don't know about our work in adult films, and we are making sure to keep it that way.\" \n\n\"Ah...\" I said, silently kicking myself. Why would you bring that up right after her big reveal? I berated myself. What do you know about their family politics? \n\nDaisy turned to face me now, and I could see that her nervousness was back in full force. She had no idea how I was taking this revelation that she and Carmen had been wealthy debutantes this entire time. \n\nBut instead of addressing that elephant in the room, she took on the question that I had just posed. \n\n\"I think that Car and I first tried out porn as an act of rebellion,\" she said, eyes drifting away from me as she looked back into her not-so-distant past. \"You know... to show our parents that we weren't just their perfect little bookend twins who wore matching outfits and looked great on the family Christmas card.\" \n\nI didn't say anything, letting Daisy get the story off her chest. \n\n\"Then,\" she continued, \"we realized that we actually liked it. It makes us feel sexy to be desired like that, to have so much control over someone else's pleasure...\" she trailed off. \"Our parents would never understand. They're extremely conservative and couldn't even think of accepting it. But as long as we keep acting like their perfect little daughters they give us a place to live, plenty of allowance and freedom, as far as that goes...\" \n\n\"What do you mean?\" I asked, trying to keep my tone neutral. I couldn't tell whether Carmen and Daisy were living the high life or walking a tightrope act with a very long, scary drop. \n\n\"They pay the bills, so the staff reports to them. Carmen and I need to be careful about when we go out, who we bring home, and even what we wear.\" \n\nI nodded. Apparently the beautiful living accomodations came with a lot more baggage than I had expected. \"Got it. And I don't suppose they approve of... male visitors?\" \n\n\"There was one guy they approved of...\" Daisy trailed off, her expression tight. \n\n\"What happened?\" I asked, not sure how to feel about this new piece of the puzzle. Did I crush a fledgling romance when I introduced Carmen and Daisy into my little harem? \n\nDaisy tightened her jaw and then let out a breath. \"It didn't work out,\" she said, her tone leaving me uncertain as to how or why the situation may have fallen apart, and equally unsure about her feelings regarding the situation. \n\nNow that I thought about it, there was suddenly a lot I was unsure about. Even more than uncertain, I felt embarrassed. And ashamed. I wanted to give my girls the best, but the best was what Carmen and Daisy already had. \n\nI can't compete with this... I thought hopelessly, scanning around at the marvelous apartment. I can't rely on Lassiter's money forever \u2014 even as an executive he doesn't make enough from TRANCE to pay for a lavish lifestyle for five other people \u2014 and I have no real prospects. Even as it is my lifestyle isn't all that luxurious... The more I thought about it, the more I realized how oblivious I had been. \n\nDaisy and her sister had been living in the lap of luxury here at Starside. Sure, they were lying to their parents about how they spent their time, but plenty of teenagers did that. Compared to this place, my apartment was like a cardboard box in the slums. \n\nWhy would you ever think Daisy would want to move in with you when she has all this to come back to? I thought, kicking myself. And why would Carmen have agreed? Did she just feel sorry for you? Did she not want to hurt your feelings? Or is it the hypnotic conditioning? \n\nThe doubts whirled round and round in my head until Daisy's voice snapped me out of it. \n\n\"Don't worry, Chance,\" she was reassuring me, my anxiety obviously evident in my features. \"Our breakup didn't have anything to do with you.\" \n\nWhat? I was still lost in my own world of worries. Oh, yes. The boyfriend who her parents approved of but she evidently didn't. I gave a weak smile and played along. \"You can tell I was worried about that, huh?\" I asked, resolving not to ask Daisy to move in with me and to let Carmen know about the change of plans as soon as I got home. ",
        "Daisy gave me a calming smile. \"It's one of the things we girls love about you,\" she said, stepping forward and laying a hand softly on my cheek. Her skin was cool against mine, and I wondered whether all the thoughts racing through my brain were making my face overheat. \"You're always thinking of us, wanting to make sure we're doing okay and that you aren't interfering with our lives.\" \n\nThe irony of that statement wasn't lost on me. Sure, I thought. I had your best interests at heart when I had Amber invite you over to my apartment in order to turn you into my submissive little sextoys. But instead of letting my bitter thoughts out I just dropped my eyes and let a sheepish smile break through. \"Thanks,\" I said, feigning discomfort at the praise. \n\nThen, I raised my head and looked around as though I hadn't already taken in every inch of the glamorous interior. \"So I guess sleeping over with me was a real step up in the housing department,\" I joked, trying to lighten the mood. \n\nInstead of laughing, however, Daisy stepped closer to me and placed her other hand on my opposite cheek. She gently forced me to look into her eyes, and I suddenly realized that I should never once have gotten the twins confused for one another. While Carmen's eyes were sparkling gems of emerald mischief, Daisy's were deep pools of reflective calm, the color of green grass in the shade of a tall tree. \n\n\"Spending this time with you,\" she told me, her voice full of confidence, \"with you and Amber and Victoria and Carmen,\" she corrected with a small smile, \"has made me more happy than I can tell you.\" \n\nI swallowed but kept her gaze, knowing she wasn't finished. \n\n\"No restrictions...\" she murmured. \"No rules to follow or expectations to meet. No mask to hide behind. Just freedom and affection and caring...\" \n\nFreedom... I thought wryly, remembering Daisy and her twin kneeling in the shower, worshiping me with their bodies after telling me I owned them. \n\n\"Freedom where I need it,\" Daisy amended, a wink and a smirk flipping her expression from somber to flirtatious as she apparently read my mind. She bit her lower lip, her youthful face somehow wise and alluring at the same time. \"... sir.\" \n\nMy heart did a flip flop in my chest. The more I grew to know these two young women, the more I learned that they weren't just identical copies of one another. They had grown up, like Daisy said, as virtually interchangeable bodies, and it sounded like even their parents hadn't gone to the effort of making them feel like unique individuals. But I wanted to. \n\nYou can, a voice in the back of my mind prompted. And they want you to. \n\nI smiled, looking into Daisy's eyes. My resolution from several moments ago crumbled as the words flowed easily and naturally out of me. \"How would you like that freedom for good?\" I asked softly. \"Not having to come back here all the time or ever feeling like you aren't perfectly at home when you're with me and the others?\" \n\nDaisy's eyebrows furrowed. \n\nThe nervousness was rushing back in force, but before my nerve could fail me, I let it all out in one breath. \"Wouldyouliketomoveinwithme?\" \n\nThere was a split second of silence before a grin split Daisy's face and she laughed easily and freely, the single sound reminding me just how young she was. At 23, I suddenly felt ancient when I stood next to this youthful sprite of a girl. \n\n\"Yes!\" she exclaimed, just a split second before her lips were covering mine with kisses. \"Yes yes yes! I would love to!\" \n\nHer lips were soft and happy, and I could feel her smile before she pulled back, staring at me with sudden understanding. \"You asked Carmen this morning!\" she declared, assurance evident in her tone. \"You asked her after the run, before our shower. That's why she was so excited to show you our surprise.\" \n\nI shook my head in disbelief. \"You are incredible,\" I laughed. \"I don't know how you're able to know everything you do.\" \n\nShe smiled shyly, brushing her red hair behind one ear. \"Really?\" \n\nI nodded and kissed her cheek before staring her confidently in the eyes. \"Really.\" \n\nThen, taking her hand in one of mine, I gestured with the other. My gesture took in the City skyline through the eight-foot windows, the beautiful decor and the sense of wealth and status that was so evident in the space. \"So, since I'm relying on you and Carmen to help me pick out a fantastic place for all of us, how about you finish giving me the grand tour?\" \n\nI expected Carmen to be full of unleashed enthusiasm, but when my eyes swept back to meet hers I saw a flash of worry followed by a quick, nervous biting of her inside cheek. It was the same look she'd worn before revealing that she and Carmen were the daughters of an incredibly wealthy investor who paid for them to live in a tiny slice of paradise in the City. \n\nShe was about to show me something, and she wasn't sure how I was going to react. \n\nBut, instead of pressing her about it, I just gave her a reassuring smile. \"What do you say?\" I asked, giving her what I hoped was a rakish wink. \n\nShe giggled at my obvious attempt to calm her nerves, and then straightened her shoulders. \"Alright,\" she agreed. She took a deep breath and let it out, then squeezed my hand in hers. Her green eyes were set with determination, and I could tell that she was leading me somewhere not many people had been before. \n\nThen she walked past me and, with a look over her shoulder, pulled me down the darkened hallway and deeper into the apartment. \n\n* * * \n\nThe TRANCE, Inc. series will be continued in the next few days with Ch. 09. \n\nWhat do you think of the story? What is living up to your expectations? What do you want included in the future? Let me know in the comments down below! \n\nThank you so much for your time in reading this, and please leave a comment or vote if you're so inclined. Your words are my oxygen. Even just a simple, \"This was great!\" makes my day."
    ],
    "authorname": "JCBeleren",
    "tags": [
        "mind control",
        "bimbo",
        "erotic hypnosis",
        "oral sex",
        "slut",
        "romance",
        "romantic",
        "threesome",
        "blonde",
        "redhead"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/trance-inc-08"
}