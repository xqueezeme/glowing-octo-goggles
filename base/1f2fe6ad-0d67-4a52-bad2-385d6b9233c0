{
    "title": "A World for the Taking Ch. 04",
    "pages": [
        "Some folks are still wondering about 'Storm World'. I tried to explain as plainly as I could, but I will give it another try. At this time I have lost interest in writing the story. I see a whole lot of mistakes throughout and I see a bunch of stuff that adds nothing to the plot and could be removed to make the story move more quickly. I found myself forcing scenes rather than letting them flow. That is a ham-fisted way to write and not satisfying to me. I will be deleting the story in the near future and when I feel up to wading into the mess I created I will rewrite it to completion and repost it, perhaps with a new title. If that is the case I will make a note of it so readers will know what is going on.\n\nI also received a message asking about Sgt. Carter and his wives. I do have a plot for them in mind. It may be the next story I work on, but probably not. I need to flesh things out considerably before I begin that project. More likely I will be writing a different story first. I have two in mind that both interest me and are related, though independent of each other. Both take place during the war between the jZav`Etch and CP.\n\nTo ask questions and read answers, please use the forum thread I created for that purpose. Just copy and paste the following link.\n\nhttp://forum.literotica.com/showthread.php?t=1346444\n\n*****\n\nA World for the Taking\n\nChapter 4\n\nF`reet `du Hom took T` Emmi's extended hand and allowed the girl to lift her to her feet. T` Emmi drew her towards a ladder that led up to some sort of platform above the animal stalls. She hesitated, casting a glance over her shoulder to be sure the Humans were not following them. Once on the platform she saw heaps of loose plant material and a row of blankets and mats obviously intended for sleeping. Was this the household bed chamber? Did T` Emmi expect her to rest? F`reet `du Hom knew little about riding beasts of any sort, but it seemed to her sleeping above them with their smells and noises would be unpleasant at best. She looked around this platform, noting how it wrapped around to the other side of the building. Was this whole structure made from wood? Either it was a very expensive building or a very crude one. She could not be sure.\n\nThe young dTel`Qohar did not linger at the ladder once F`reet `du Hom was standing on the platform. She simply went to one of the sleeping mats and rummaged in a bag next to it. Soon she drew out some tightly folded cloth and held it out to the pilot.\n\n\"For me?\" asked F`reet `du Hom, indicating herself with her thumbs. The girl nodded and shook the cloth invitingly.\n\nF`reet `du Hom crossed the platform. The wood under her feet was smooth and evenly cut, suggesting care had been taken in the construction of the building. It was unlikely this was some rude little household residence, after all. These people had some pride in their home, no matter how primitive it might look. Reaching T` Emmi she took the proffered cloth and examined it.\n\n\"Clothing?\" she asked the girl. The girl looked inquisitive but did not reply. \"Can you really not understand me?\"\n\nAgain, the girl said nothing.\n\nLooking down at herself F`reet `du Hom grimaced. She really did look ridiculous in only her pressure suit. And it was not functional for a survival situation. She had not had time to take a uniform when she and Del `uTrect had escaped from the Dusig. And then they had been recaptured. She recalled little of what had transpired afterward. The image of her captain being beheaded by renegade Dusig right in front of her was indelibly burned upon her memory, though. Somehow she had broken free and dragged his body aboard the first scout craft she could reach. Things were hazy. She had been hit in the head at some point, either before or after their initial escape, and just could not remember more. Perhaps it would come to her in time.\n\nShaking off these memories she brought herself back to the present. She looked down to the ground floor and stepped a few paces back from the platform's edge until the Humans could not see her. The cloth unfolded into two garments very similar to what T` Emmi wore. It seemed probable these clothes belonged to the girl. This was confirmed when she saw how the trousers were made to accommodate a tail. The two of them were very close in size and the clothing should fit well enough. Setting the clothing aside she opened her pressure suit and pulled it off. F`reet `du Hom was aware of the younger jZav`Etch's attention and noted her surprise at seeing the under clothes she wore.\n\n\"No,\" she said to the girl, amused. \"We do not go naked beneath our uniforms.\"\n\nBriefly she examined the shirt, noting the odd flap on the neckline that seemed to serve no purpose and the old fashioned fasteners that ran up the front. The material was thick and felt as though it would be warm. That was a good thing. The weather on this planet was chill and though she could have endured it, it was better to be warm. The shirt also had a strange pattern of vertical and horizontal green and black stripes that might have been intended as some sort of camouflage. Her gaze lingered on the pockets and she wondered if they were placed there to draw attention to a female's breasts. Glancing at the girl's shirt, she remained uncertain. Pulling it on she was pleased to discover how well the shirt fit, though her breasts did push the front out more than the girl's would have.\n\n\"That ought to get the males' attention, eh?\" she said ironically, indicating the material stretched smoothly over her chest. The girl laughed, her tail snapped and her ears lay out to the sides just as any jZav`Etch girl's would. \"Not so different from me after all.\"\n\nNext came the trousers. They were of a dark blue material with large pockets on the thighs and rump. Thankfully the waist fastened much as her uniform trousers did. Some sort of snap button was used instead of friction tape, but they were easy enough to manipulate and seemed to hold strongly.\n\n\"How do I look?\" she asked T` Emmi, holding her hands out to her sides, palms up.\n\nT` Emmi nodded, apparently understanding the intent of the question.\n\n\"Well, you've fed me and given me that incredibly savory drink,\" F`reet `du Hom said. \"What now?\"\n\nT` Emmi said something in the barbaric tongue of the Humans and waved her hand as if beckoning her to follow.\n\n\"Wait,\" F`reet `du Hom said, stopping the girl with a hand on her arm. She pointed over the edge of the platform and asked, \"Who are they? Did they take you prisoner? What is the rest of your name?\"\n\nT` Emmi narrowed her eyes as if trying to comprehend but could only shake her head in the negative.\n\nPointing over the edge again F`reet `du Hom carefully pronounced the alien race name, \"Humans?\"\n\nSurprised, T` Emmi nodded. She glanced over the edge and then looked back at the pilot. Pinching up her mouth she pointed back and forth between them and said, \"dTel`Qohar.\"\n\n\"You've heard of us?\" F`reet `du Hom said, pleased. She nodded vigorously.\n\n\"jZav`Etch,\" said the girl again, obviously pleased with her effort.\n\n\"That's right!\" the pilot confirmed. \"We are jZav`Etch! Yes.\"\n\n\"Yes?\" asked the girl.\n\nNodding in an exaggerated, almost theatrical manner, F`reet `du Hom repeated the word.\n\nT` Emmi frowned in consideration and pronounced the word as if she were savoring it. A slow smile of satisfaction spread over her lips and her tail flicked.\n\n\"Who are they?\" F`reet `du Hom asked again, pointing down to where the Humans were gathered. She repeated the question making hand gestures she hoped would convey the meaning of her words. \n\nThe girl seemed to understand. Her eyes brightened and her tail snapped. Stepping a little closer to the edge she pointed to the older female with the dark brown skin and black hair. She said a word. It sounded less strange than most of the others and F`reet `du Hom tried to imitate it.\n\n\"Mho`tHer?\" she said carefully.\n\nNodding the girl pointed to the oldest male, the one with the creamy tan skin and brownish hair and said another word that sounded very similar to the first.\n\n\"F` atHer?\" the pilot asked uncertainly. \"But who are they?\"\n\nT` Emmi frowned in thought for a bit and then her eyes brightened once more. She bent down and rolled a blanket into a tight little bundle then cradled it against her chest and rocked as if she were comforting a small child.\n\n\"Forger and Builder!\" F`reet `du Hom exclaimed in astonishment. \"They are your parents? Mho `tHer? F` atHer? Parents? Mho `tHer? Mother? F` atHer? Father?\"\n\nThe girl grinned and said the words, pointing to each of the older Humans in turn.\n\nFrom below the older male, T` Emmi's father, called up, sounding alarmed. The girl called back reassuringly and said something else. The Humans milled about a bit with wondering expressions and then waited expectantly.\n\n\"How did you get here, I wonder?\" murmured F`reet `du Hom. \"Who are your real parents? I wish I knew the rest of your name.\"\n\nT` Emmi listened but only shook her head, unable to understand. Such questions were, for the moment, beyond resolution. There were Dusig to deal with and these people seemed to have been attacked. That could lead to a war with the Humans and the Hegemony was not yet ready for that. Within a few cycles, likely, but not yet. And certainly not because of a mutinous subject crew. She had to stop the Dusig if she could.\n\n*****\n\n\"Well, that's some progress, at least,\" Deborah said once Tammy had explained what she and the alien pilot had been doing in the loft.\n\n\"We've burned up almost all of the morning, though,\" groused Bob, pacing with his hands behind his back and biting his lower lip in thought. \"We need to get moving. Need more information. If these Dusig characters have been shooting down flyers and spinners, what else are they going to do?\"\n\n\"They knocked out the uplink tower and we think they disabled the orbital station,\" said Mike.\n\n\"With OS1 out of the loop, sir, how are we going to find out what's going on?\" Yoshi asked. His voice was small and uncertain.\n\n\"Well, we've got our pads,\" Roy pointed out. \"They aren't really designed for unassisted communication, though.\"\n\n\"Never thought we would need long range gear with the station and the towers,\" Deborah sighed.\n\n\"Maybe F`reet's ship has a radio or something like it,\" suggested Jean.\n\n\"You need to use her full name, Jean,\" said Tammy.\n\n\"Why?\" her sister asked.\n\n\"Because it's an insult not to,\" Tammy explained.\n\n\"Good to know,\" said Bob, pausing in his stride and looking seriously at the jZav`Etch pilot. \"Anything else we should know about them, Tammy?\"\n\n\"I don't really know that much, Pa,\" she said. Her ears twitched as she considered. \"I can tell you there are supposed to be more females than males in their culture. And they seem to have very distinct gender roles. I'm not sure what that tells us.\"\n\n\"We can't go walking on eggs,\" said Mike. \"Might end up spending so much time trying to not offend her that we screw up anyway.\"\n\n\"Just keep an eye on her,\" Bob said judiciously. \"We all know Tammy. We know when she gets angry and what it looks like. I figure this one will have the same sort of tells.\"\n\n\"Um...\" Yoshi began. \"I don't know Tammy all that well. I mean, I never saw her get mad or anything.\"\n\n\"Just don't interact with the pilot,\" Roy suggested. \"Don't ignore her. Just don't talk to her or do anything that might provoke her.\"\n\n\"Okay,\" said the younger boy.\n\n\"Pa, what about a radio, or something like one, in her ship, though?\" Jean persisted.\n\n\"jZav`Etch have got to have some way to communicate between ships in space,\" Deborah agreed.\n\n\"They've been communicating with CP ships ever since they encountered them,\" Bob said, nodding. \"Let's try to ask her.\"\n\nMore time was eaten up using images on the pads and pantomiming until F`reet `du Hom understood the question. Then it was her turn to pantomime and gesture and all but scream that her ship's communication system had been gutted.\n\n\"Damn it,\" grumbled Bob. He was growing impatient to be on the move.\n\n\"What do we do?\" Yoshi asked.\n\n\"What if we climbed up over Simmons Pass?\" Jean asked. Simmons Pass was the nearest route into the next valley on the far side of the eastern hills.\n\n\"Even if they haven't been targeted the same as this valley, it would take us until tomorrow mid-day to get to the top of the pass. And that's if we rode all night,\" Mike said in disgust. \"Might be a waste of time and we'd have twice the journey just to get back over here.\"\n\n\"We can't just sit around!\" Jean snapped.\n\n\"We can't just go running off all over the place either!\" Mike snapped back.\n\n\"Stop it!\" Deborah barked. \"Both of you. It's not helping.\"\n\n\"The sensors,\" Bob said thoughtfully. \"Deborah, the sensors are programed to detect fire.\"\n\n\"Sure. How does that help?\" she asked, clearly interested. \"We can't access them from here with the uplink tower down.\"\n\n\"They form their own network, though,\" said Bob. \"One sensor will relay to the others all the way back to our place. We could find out where the fliers went down. Should be able to track the movement of fliers by air displacement, too. Remember how I tracked those geese last fall?\"\n\n\"You had to make a bunch of fine adjustments to do it, though,\" she countered. \"I guess it would still be worth having a look at.\"\n\n\"Better than being blind and deaf,\" he said. His expression went quickly from contemplative to intense as a thought came to him. \"And maybe there's something else to try. We need to...\"\n\nAt that very moment a thundering noise came from high overhead to the south. Without thinking everyone dashed for the open door, but F`reet `du Hom tackled Tammy, pinning her to the floor. Roy instantly reversed himself and snatched the pilot from his girlfriend. Shoulders bulging, he hauled her bodily into the air above his head and looked as if he were about to hurl her into one of the stalls. F`reet `du Hom squalled and kicked, but she could not break free.\n\n\"No!\" Tammy cried in alarm. \"Don't hurt her!\"\n\nRoy, over balanced, had to drop the squirming jZav`Etch unceremoniously to the dirt. She rolled away and came up with her teeth and claws bared. Tammy sprang between them as the rest of her family came up behind Roy.\n\n\"What's going on?\" Tammy demanded of the pilot. She moved between her boyfriend and the angry jZav`Etch.\n\nF`reet `du Hom snarled something at Roy and then spoke quickly to Tammy, shaking her head and pointing to the open door.\n\n\"I think she does not want you to go outside,\" Yoshi said.\n\n\"But why?\" wondered Deborah.\n\n\"The ship!\" Mike said. \"She's afraid of the ship, Pa. Roy, back down. She doesn't want them to see Tammy.\"\n\n\"What?\" demanded Roy. He was red in the face and panting, keyed up for a fight the way Mike had sometimes seen him when other boys had needled him about his red hair or his freckles. \n\n\"Tammy is jZav`Etch, Roy,\" said Mike instantly.\n\n\"Holy shit!\" Jean barked. \"Right! If she goes outside and the Dusig see her, they might come down here and try to kill her.\"\n\n\"Makes sense,\" Deborah said, nodding. \"But watch your language, young lady.\"\n\n\"Sorry, Ma,\" said Jean humbly.\n\nFrom the door Yoshi called, \"I can see it! Them! I can see three of them. Coming up the valley. They're just about over Big Lake.\"\n\nBob and Mike rushed to him. Yoshi handed his binoculars to Bob and pointed.\n\n\"It looks like the same kind of construction as the small one last night,\" said Yoshi excitedly. \"Not the same kind of ship. These are bigger. Same style, though.\"\n\n\"Big bastards,\" Bob growled. \"Thirty, maybe thirty-five meters long. About ten meters wide. Lifting body design, but they have to have some kind of null-G gear. They're moving too slow to be flying otherwise.\"\n\n\"Are they armed?\" Deborah asked. She was still behind Roy, ready to pull him back if he should go after the alien pilot again.\n\n\"Assume they are.\" Bob handed the binoculars to Mike and crossed to where his daughter stood between Roy and the pilot. \"Back down, son. She was trying to keep Tammy from harm. Not her fault she can't speak English.\"\n\nRoy glanced at him and relaxed. His head bowed for a second and then he drew himself up and nodded.\n\n\"Sorry,\" he said to F`reet `du Hom, extending his hand palm up.\n\nIt took the jZav`Etch woman a moment to comprehend the big red haired boy was apologizing. When she did she relaxed and stood erect. She looked from his face, open and plain, to his hard calloused hand and reached out to lay her palm on his. A sign of peace if there ever was one, though her tail jerked and snapped with her anger.\n\n\"Pa, they're still coming but slowing a lot,\" Mike called from the door.\n\n\"Something that big can't land at Waimea, can it?\" Jean asked incredulously.\n\n\"The CP has all sorts of ships that can,\" Yoshi said. \"I saw a cruiser come into the spaceport on Albion once.\"\n\n\"But Waimea's port is meant for shuttles,\" Jean said. \"There isn't any room for something larger.\"\n\n\"They're probably military ships,\" said Bob, having to raise his voice above the sound of the oncoming ships. \"They'll be able to land on unimproved surfaces. Maybe they can float above the ground on impulsers*. We don't know.\"\n\nThe thunder of the ships' engines was increasing by the second, spooking the steelies in their stalls and making it hard to hear anything else. The light dimmed as their shadows passed over the barn and dust fell from the rafters. It felt as if the barn was going to collapse, but the ships passed them by, continuing on up the valley.\n\n\"Jesus Christ!\" swore Bob, taking his hands from his ears once the ships had passed.\n\n\"Motherfucker!\" cursed Deborah, wiggling her fingers in her ears with a grimace. Everyone stared at her. She realized it an instant later and blushed. \"Sorry.\"\n\n\"You've been hanging out with Dan too much,\" said Bob teasingly and kissed her cheek. He strode outside and looked north, watching the ship's progress up the valley. \"Slowing down to a crawl. Looks like they're going for town after all. I guess Ferret Doom was right.\"\n\n\"F`reet `du Hom, honey,\" Deborah corrected him. \"Try harder.\"\n\n\"My mom and dad!\" cried Yoshi. He rushed back into the barn and grabbed up his saddle, making for Little Gertie's stall. Roy darted after him, grabbing the smaller boy by the shoulders and spinning him around.\n\n\"You can't go running off!\" Roy shouted.\n\n\"My mom and dad!\" protested Yoshi, dropping the saddle and flailing wildly at Roy. \"They're going to get killed! Let me go!\"\n\n\"Yoshi!\" shouted Bob. His voice snapped like a whip, silencing both boys. \"We'll all go. Roy, you and Mike saddle the stock. Tammy, Jean and Yoshi, pack everything. Load the baggage on the carry pack. Rations, water and weapons on the saddles. Make sure everyone has medical kits. Deborah, come help me try to explain things to Fret doo Hum.\" He clapped his hands sharply. \"Let's go!\" \n\n*****\n\n\"Um... Where are we?\" asked Yoshi. He had been fairly quiet since leaving Dodge Station and apparently had not been paying much attention.\n\n\"We're still south of Kitt's Hole,\" Tammy told him. Realizing the off-world boy might not know the geography of the valley well enough to orient himself, she said, \"See that high hill over there across the river and a little south of here? That's Kelvin Ridge. That saddle in the hills north is where the Postlethwaite homestead is. Kitt's Hole is roughly between them.\"\n\n\"I don't see it,\" he said, trying to look between the trees.\n\n\"That's because there are some low hills in the way,\" Jean said. She leaned over and patted his thigh in a comforting manner. \"It's there. And Transit Bridge is an hour or so north.\"\n\n\"Okay,\" he shrugged. \"But what are we doing here?\"\n\n\"You awake back there, Yoshi?\" Bob asked as he dismounted. \"I need you with me. Maybe you can help.\"\n\n\"Sure, Mr. Mackey,\" the boy said and slid down from his saddle, handing his reins to Jean. \"What can I do?\"",
        "\"Follow me, son,\" Bob said. He handed his reins to Deborah, now mounted on the pack steelie, Dumpling. Bob had taken Sandy's saddle along when they had left their downed spinner and Dumpling was about the same size as Sandy had been. \n\nWhen Yoshi got to him Bob turned up a steep, narrow cut in the slope. Layers of sedimentary stone had been exposed by erosion and Bob used these like a natural staircase. With a quick look over his shoulder at Jean, Yoshi followed the big man.\n\n\"What's Pa up to?\" Jean asked Tammy.\n\n\"Something about the sensors and using their network to communicate through them,\" Tammy said. \"Stay here with Little Gertie. I want to make sure F`reet `du Hom is okay.\"\n\n\"Maybe you should just leave her be,\" Roy suggested from the back of the line. He had ridden drag with his rifle across his lap since leaving his parents' station.\n\n\"I'm just going to check on her,\" Tammy said and thumped Boudi in the ribs, sending her mount forward until she came alongside the carry pack in which the jZav`Etch pilot was seated atop the extra gear.\n\n\"Are you okay?\" Tammy asked her.\n\nF`reet `du Hom blinked questioningly at the girl and then gestured around at the forest. Tammy did not know how to tell her where they were, but she did have a map on her pad. She pulled the device from her pocket and brought up a topographic display. She expanded it into a hologram and showed it to the pilot. F`reet `du Hom looked interested.\n\n\"We were here,\" Tammy said, indicating the location of Dodge Station. She began tracing a line over the hologram until she stopped at their current location. \"We are here now.\"\n\nF`reet `du Hom looked at the map more closely and then reached out a finger to point at Waimea. She met Tammy's eyes and made a gesture the girl did not exactly understand. It could have been a question about whether they were going to ride to the town. The pilot might also have been asking how long it would take to get there.\n\n\"I don't know,\" Tammy said. For either question it was true. She had never ridden to Waimea from this side of the valley so she did not know the terrain between them and the town. \"Pa hasn't told us exactly what he's planning. I don't think he knows yet. We're still trying to figure out what's going on.\"\n\nF`reet `du Hom settled back on the pile of gear and flicked her ears in irritation. She looked at Tammy and pointed to herself then at Boudi. Tammy frowned, trying to understand. The pilot pointed at the steelie again and pantomimed holding reins and bounced up and down on the carry pack.\n\n\"You want to ride?\" chuckled the girl. \"We don't have another saddle.\"\n\nRiding bareback on a steelie, even one as even tempered as Little Gertie, was a dangerous proposition in heavy, unbroken terrain. They tended to hop up on logs and leap over shallow gullies with little or no warning. And if they broke into a run they might choose an eccentric path, bouncing off of trees and boulders like a squirrel at play. Yoshi, who had been riding for a few years now, still had trouble even with a saddle. Bareback, Tammy might be able to stay on a steelie for a while, but not for very long. And she had her doubts this jZav`Etch who had never seen a steelie before coming to Juniper would be able to do as well as the off-world boy.\n\nF`reet `du Hom snorted in disgust, gesturing at the carry pack. She shook her head and slumped forward, resting her elbows on the rim of the cargo wall and planting her chin on her fists. Tammy bit back a laugh and sat quietly beside her until her father and Yoshi returned.\n\n\"Well?\" Deborah asked, holding Temper's reins out to her husband.\n\n\"Yoshi figured it out and I talked with Dan,\" said Bob. \"The Dusig took over the town. Dan hasn't heard from anyone in Waimea since they landed.\"\n\n\"What about the other aircraft?\" she asked.\n\n\"As best we can tell, six others got shot down last night,\" Bob said. \"After that, nobody tried flying. We don't know how many folks were killed. Dan said he was able to reach Troy Perkins's spinner. Troy is banged up bad, but he's alive. Carol is taking care of him.\"\n\n\"That's something, at least,\" sighed Deborah.\n\n\"So what are we going to do, Pa?\" asked Mike.\n\n\"We are heading for Kelvin Ridge,\" said Bob, looking over their little cavalcade.\n\n\"You want to risk crossing Transit Bridge?\" Deborah asked doubtfully.\n\n\"There's a ford about three klicks back that way, Ma,\" said Mike, pointing.\n\n\"Fords are deep right now,\" said Bob. \"That one is damned near impassable. I think we need to risk the bridge.\"\n\n\"Mr. Mackey,\" called Roy from the back of the line. What about crossing at Kitt's Hole?\"\n\nBob blinked at the teen. He seemed about to say something and then clapped his mouth shut. After consideration Bob slowly nodded.\n\n\"There is no ford at Kitt's Hole,\" said Deborah.\n\n\"But there are rapids,\" Bob pointed out.\n\n\"Bob, this side of the river we can ride down onto the rocks, sure,\" she said, throwing up a hand. \"On the far side there's that cliff. I know it isn't a high cliff, but the steelies couldn't climb it. Are we going to leave them behind?\"\n\n\"Mrs. Mackey, there is a tree down,\" Roy said. \"It came down in the spring thaw. The roots are still in the ground at the top of the cliff and branches are resting in the water near the rapids. My dad... I mean, Mr. Postlethwaite and me went fishing there after we moved our stock. I'm sure the steelies can climb it.\"\n\n\"A big tree?\" Bob asked.\n\n\"It's that one you marked for early harvest, sir,\" said Roy. \"Eighteen or twenty meters tall and at least one across.\"\n\n\"Plenty big enough,\" said Bob.\n\n\"I don't like it,\" grumbled Deborah.\n\n\"Kitt's Hole is on the way to the bridge, honey,\" Bob said. \"If it looks too dangerous, we'll just keep going.\"\n\n\"Why not go somewhere on this side of the river?\" she asked.\n\n\"Because I've been putting in supplies up on Kelvin Ridge,\" he told her. \"Just in case.\"\n\nDeborah looked him in the eye for a second before she realized what he meant and then she looked back at Tammy.\n\n\"Right,\" she said, acquiescing to his plan. \"Let's give it a shot.\"\n\nHours later the party drew up on the eastern bank of the river and inspected the rapids below Kitt's Hole. Though the water was high and running fast, there were plenty of rocks their mounts could hop onto. In fact, the rapids would have made a very good place to ford the river had the cliff on the far bank not been there.\n\nLooking through his binoculars, Bob said, \"It can be done.\"\n\n\"I guess it can,\" sighed Deborah. \"We'll have to go up one at a time.\"\n\n\"Me first,\" said Bob. \"The others see Temper go up and they'll understand what we expect.\"\n\n\"Pa, maybe I should go first,\" said Tammy. \"Boudi is as big as Temper and I'm lighter than you. I can jump better, too.\"\n\n\"But I am your father and you are not going first.\" Bob put his binoculars away and thumped Temper's sides. The big stud strode out to the nearest boulder and climbed on top, holding his head proudly.\n\n\"Ma?\" Tammy asked, wanting to argue with her father.\n\n\"He's right,\" Deborah said. \"Temper and your pa have been doing this kind of thing for years. They know each other. Maybe better than I know your pa. Sometimes I think they share the same brain, he's so stubborn.\"\n\nTammy smiled wanly and followed her parents out over the rocks. Only Yoshi hesitated, but Little Gertie followed in spite of her rider's reluctance. In the carry pack F`reet `du Hom hunkered down as low as she could, staring with wide eyes at the churning white water.\n\nEveryone made it without mishap. They gathered on the narrow shale bank and pondered the best route up the fallen tree.\n\n\"Fucking white pines,\" grumbled Bob. \"So many damned branches. It'll be like crossing fences all the way up.\"\n\n\"But they'll work like a ladder, too, Pa,\" said Mike, not wanting to turn back.\n\n\"Roy, you sure the roots are still in the ground up there?\" asked Bob, rubbing his chin.\n\n\"Yes sir,\" Roy said without hesitation.\n\n\"Mike, give me your picket rope,\" Bob said, holding out his hand. \"Wait for me to give the okay before anyone else comes up. And Yoshi, maybe you ought to ride in the carry pack with F`reet whatever her name is.\"\n\n\"I'll be alright, sir. I've been practicing.\" Yoshi sounded nervous but he held onto his reins and looked resolute.\n\n\"You sure, Yoshi?\" Tammy asked, remembering his near disastrous crossing of the ford.\n\nYoshi nodded and adjust his feet in the stirrups.\n\nTammy watched as her father took Mike's rope and secured it under his saddle pack before walking Temper to where the branches of the tall pine rested in the water. The tree had been a good one, only it had grown in soil too shallow for its roots. Tammy knew her father had gotten permission from Tyne & Harper to harvest it for boards, but it had fallen sooner than expected. With a little effort she knew it could still be harvested. Well, it could have been. Now that the family's spinner was a pile of junk in the middle of the forest she doubted the tree could be gotten out.\n\nTemper paused when he reached the old pine as if he were examining it. He did not hesitate for long, though. With a determined effort the powerful stud reached out with a forelimb and got a good hold. After that he made it look easy. The pine shook and its branches rattled, but Temper never slowed down. Bob kept himself balanced over the animal's center of gravity and in less than a minute the pair were on top of the cliff and Bob was smiling down on his family. He disappeared behind the clifftop and the tree shook slightly for several minutes before Bob reappeared and called down for the first of them to climb.\n\nMike on Tico made as short work of the job as his father. Next was Jean, trailing a long lead attached to the pack steelie's headstall. When she reached the top of the cliff and began drawing on the line F`reet `du Hom leapt from the carry pack.\n\n\"What's she doing?\" Bob called from the cliff.\n\nThe jZav`Etch pilot was shaking her head and making gestures suggesting she would not ride the carry pack any further.\n\n\"Pa, I'll take her behind me,\" called Tammy and walked Boudi up to the gesticulating jZav`Etch. She held out her hand but the pilot shook her head, turned to the pine and climbed it in four leaps. Everyone just stared for a second and then broke into laughter.\n\n\"I guess she didn't need to ride,\" called Bob, extending his hand to the pilot with a wide grin and merrily glinting eyes. F`reet `du Hom looked confused by the laughter at first, but she extended her hand and took Bob's, looking pleased with herself.\n\nAfter the pack steelie had made it to the top of the cliff it was Yoshi's turn. Jean stood above him, looking concerned. Tammy drew Boudi in close to Little Gertie and gave the boy an encouraging nod.\n\n\"Just keep your weight in the middle,\" she told him. \"Balance with your toes. Carry your weight with your thighs. And don't be afraid to grab the pommel. Even my pa has to do that going up a cliff like this.\"\n\n\"If I fall, just let the river take me,\" he said, licking his lips nervously. \"I don't think I want to be around your dad with him thinking I'm useless.\"\n\n\"You will do just fine, Yoshi,\" Tammy said firmly. \"Pa is starting to take a liking to you.\"\n\nYoshi considered her words briefly, gave a nod and turned Little Gertie towards the tree. The mare took her time, selecting a route that suited her. She even paused to snap off a small branch she did not like. When she reached the top of the cliff Little Gertie stepped off the trunk with what could only be interpreted as dignity. Yoshi was obviously relieved and he grinned wide when Bob clapped him approvingly on the thigh and waved him away.\n\nTammy was tempted to try climbing the tree like F`reet `du Hom had done, but she decided to stay with Boudi. Sure, the steelie would follow her, but maybe Boudi would be insulted. You never could tell for certain with steelies and it was always best to consider them before doing something rash.\n\nAfter Tammy came Roy. Deborah waited until he was clear of the fallen pine and then made short work of her own ascent. Dumpling was the oldest of the steelies in their group, but she was hard and tough and had no hesitation on this climb. She didn't even bother looking at the tree before climbing onto it. She just put her claws where Temper had and went up like it was a Sunday afternoon stroll.\n\n\"Well, that's done,\" said Bob, gathering in the ropes he had used to tie off the roots of the pine. He looped one into a tight coil and gave it back to Mike. The other he stowed in his saddle pack before mounting. \"We need to get going. I want to be on Kelvin Ridge by nightfall. I doubt we'll make it, but I want to try. It's all hard riding. Most of the trails are well broke, though. We're going at a canter. If you start getting sore, grit your teeth and hang on. No stops unless I say so. You need to pee, do it now.\"\n\n*****\n\nDark had long since enveloped the valley by the time the group made it up to the spot on Kelvin Ridge Bob had picked out for his secret hiding place. It didn't look like much. Tammy had difficulty telling there was anything there, actually. Of course, she was as tired as everyone except F`reet `du Hom who seemed glad to be able to get out of the carry pack and stretch her legs.\n\nTammy dismounted. She removed her mare's tack and poured a pile of feed pellets on the stony ground for her. Boudi immediately bent her head and ate with vigor.\n\n\"As soon as your mounts are finished eating, bring them into the cave,\" Bob said, waving his flashlight at what looked like a rock shelter. Nothing more than a hollowed out place under an overhang of stone that sloped back up towards the top of the steep sided hill.\n\nTrusting Boudi not to run off, Tammy hauled her gear into the rock shelter, discovering a fair-sized passage off to the left. It was easily large enough to allow their steelies to get in out of the weather. She went to the back of the shelter and set her saddle and packs alongside her father's.\n\n\"What now, Papa?\" she asked, stretching and twisting at the waist to relieve the ache.\n\n\"I need to call your Uncle Dan,\" he said. \"While I'm gone get some food ready and eat. There's a stream off to the south about a hundred meters. You can fill the canteens in the morning. I'll be back in a bit.\"\n\nHe leaned in and gave her a peck on the cheek before heading out. Tammy was worried. She did not like her father going off alone with those Dusig flying around blowing things up. But then again, they had not seen the Dusig since their ships had passed over the barn that morning. Maybe they were just hunkering down in town.\n\nBob returned about an hour after he left, coming quietly into the rock shelter. Jean and Yoshi had dropped off to sleep near each other and Roy was dozing with his back against the cave wall where the steelies were housed. The big brutes were quiet, as tired as their riders after the long day's travel.\n\n\"Thank God you're back,\" said Deborah, rising to greet her husband with a hug and a kiss. \"What did you learn?\"\n\nThose who were awake crowded around the camp heater to hear the news.\n\n\"Wake them up,\" Bob said, indicating Yoshi and Jean. Roy had already roused himself and was joining them in the glow of the heater.\n\n\"You want some food, Pa?\" Mike asked, holding out a ration pouch.\n\n\"Thanks, son,\" said Bob and settled himself next to Deborah. \"Those Dusig bastards rounded everyone up in town. Yoshi! Hold on a second, son. Don't go trying to run off. Dan says as far as he knows, nobody has been hurt since last night. Nobody in town is hurt. They've just been put in the meeting hall under guard.\"\n\n\"How did Dan find that out?\" Deborah asked, putting a comforting arm around the off-world boy.\n\n\"Larry and Cindy Dunkin took off out the back of their store as soon as they saw the ships coming up the valley.\" Bob tore open the ration pack and pulled a food bar out, taking a large bite. He spoke with his mouth half full. \"They snuck off a ways and watched. When they got spooked by some of the aliens getting too close, they slipped on down the valley to that cabin of theirs. Called Dan and Carla after I spoke with him and let them know what was happening.\"\n\n\"But why are they doing this, Mr. Mackey?\" Yoshi asked. He looked frightened and angry.\n\n\"Son, I'm pretty well certain it has to do with our lady right there,\" said Bob, nodding at F`reet `du Hom. The jZav`Etch was listening intently and looking from one Human to another as if in hopes of gleaning something from their conversation.\n\n\"Why take over the town if they want her?\" Jean asked.\n\n\"Same reason they knocked out our communications, sweetheart,\" he said and ate another mouthful of food. \"They're isolating us and by doing that, isolating her too.\"\n\n\"Makes sense,\" Roy nodded agreement. \"They don't want us talking to anybody. If they know her ship doesn't have any communications they have to assume she would try for ours.\"\n\n\"The uplink tower isn't the only one on the planet,\" Deborah said. \"Do we know if any of the others are working?\"\n\n\"Dan heard from a friend of his over in Jonestown,\" Bob said. \"Their tower was destroyed about the same time as ours. And from what Dan gathered, so were all the other operational towers.\"\n\n\"What about the one down by Big Lake?\" asked Yoshi. \"And there are others. My dad hasn't finished installing all the communications gear, but Big Lake had its power plant and main coil installed.\"\n\n\"I don't know,\" said Bob thoughtfully. \"If it wasn't complete, they might have ignored it. Doesn't do us any good right now. Aside from the uplink towers, only OS1 had a transmitter powerful enough to call for help.\"\n\n\"And we're pretty sure they took that out before they got to us,\" said Tammy.\n\n\"Why do you think they're after her, Bob?\" Deborah asked.\n\n\"She must know something, I guess,\" he said. \"Dead body on her ship. Mike said they didn't see the head anywhere. I'm thinking her crewmate was executed and she got away somehow.\"\n\n\"They executed him by cutting his head off?\" Mike asked incredulously.\n\n\"People used to do that way back when,\" Bob said, nodding.\n\n\"Oh God.\" Jean looked disgusted and she rubbed her throat as if imagining what it would be like.\n\n\"We need to do something,\" said Yoshi. \"My folks are in town. Who knows what'll happen to them.\"\n\n\"Dan and I discussed that,\" Bob said. \"In the morning me, Deborah and Mike are going to ride out to meet up with Dan and some others. We're going to see if we can get those folks out.\"\n\n\"I'll go too,\" said Roy.\n\n\"And me!\" Yoshi volunteered.\n\n\"No you won't, boys,\" Bob told them firmly. Before they could protest he held up a hand. \"You two, Jean, Tammy and Ferret Doom are going to stay here and wait for some of the other kids in the valley. There are about twenty going to come here. Roy, you'll be in charge. I'm counting on you to take care of them.\"\n\nRoy obviously did not like being left behind, but he reluctantly nodded and held his piece. Yoshi only bit his lip and scowled at the heater.\n\n\"Son, don't get any ideas about following us,\" Bob said, seeing the boy's expression. \"You did good earlier with the software and all, but you don't know the forest, and you aren't good enough on a steelie to keep up. When we get them out, I'll make sure your folks are safe and let them know where you are. They would not want you riding off to try a rescue. Got it?\"\n\nYoshi sighed and looked at Bob out of the corner of his eyes. \"Yes sir.\"\n\n\"Good,\" said Bob, clapping him on the knee. \"You that are staying, go ahead and settle in for the night. Get some sleep. We'll wake you before we go in the morning.\"\n\nNo one wanted to sleep, but Bob would not be gainsaid. He watched them settle in and did not object when either of his daughters snuggled up to their boyfriends. F`reet `du Hom looked questioningly at him and Bob motioned her to join the teens at the back of the rock shelter. She gave him an even look, apparently not liking being ordered away, but as there was nothing she could really learn from their conversation, she submitted.",
        "*****\n\n*Impulsers - Impulse motor - This is the common layman's term for an antenna designed to focus waves of artificially generated gravity to levitate loads above the surface of a planet or counter the effect of artificial gravity on spacecraft and space stations."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "alien",
        "forest",
        "furry",
        "future",
        "multi-chapter",
        "sci-fi"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-04"
}