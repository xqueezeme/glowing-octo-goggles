{
    "title": "Snow Drop",
    "pages": [
        "Note from the writer -- I feel the need to let you know in advance this story deals heavily with the aftermath of one person's suicide. I tried to write this as compassionately and carefully as possible from my limited perspective, but if this is a trigger for you, please stop reading now. Take care of yourselves, now and always, and I wish you nothing but peace and warmth this holiday season (or whenever you might be reading this).\n\n-Ian\n\n* * * * *\n\nThey met after the divorce was finalized, lunch at the last place both of them remembered being happy. It was a final olive branch between them before Julie returned home. In her crossover were the remains of a life together. Most of it she was leaving behind. The thought of taking all those memories back home exhausted her.\n\nFunny that Julie still thought of Pike Bridge as home and not Chicago where she lived since she was eighteen. Spend her teenage life preparing to escape the small town, only to get sucked pleasantly back into its orbit again when she was nearing thirty. That was truly the Pike Bridge way. She smiled around a bite of her orange chicken wrap.\n\n\"It's good to see you smile,\" Brendan said, his voice as exhausted as Julie felt. This hadn't been easy for him either, though that was entirely his fault.\n\n\"Yes, well. Haven't had much reason to.\"\n\n\"I know. I'm... sorry.\"\n\nThat was bizarre. With Brendan, it was never just an \"I'm sorry.\" It was always quantified, always a way to shift the blame from himself. \"I'm sorry you were offended.\" \"I'm sorry you can't take a joke.\" Rule number one of her future dating life? The guy had to be able to say he was sorry.\n\nNo. Rule number one was that her future guy should never, ever make her feel like he might hit her. And Brendan would have. She was sure of it. Maybe he held himself back at the last possible second when he raised his fist in that last terrible fight when they were still together, but there would have come a day when he lost control. Julie knew that on a very basic instinctual level. Stay, and eventually the arguments became something physical. Stay, and be broken. Leave, and be free.\n\nJulie hated that it was so much more a difficult choice than that.\n\n\"Thank you,\" she said simply.\n\nHe looked like he might be about to say something else, his cheeks reddening, the signs of his thunderstorm temper upon him, but instead, Brendan settled back and shoved a fistful of golden fries into his mouth. His post-separation diet had not been kind to him. He was up ten pounds, at least, and if he'd been working out, it didn't show under his rumpled suit. \n\n\"Promise me one thing?\" Julie asked.\n\nHe kept chewing, swallowed, and took a long drink of his 7-Up before asking sullenly, \"What?\"\n\n\"You'll get back on the treadmill. Work out. You always were so much more balanced when you kept at it.\"\n\n\"That's not your concern anymore, is it?\"\n\nShe picked up her wrap again. \"I guess not.\"\n\nBrendan leaned forward. She hated how his anger twisted his boyish good looks, that simple eager puppy dog charm he had that won her over. At first it amused her, but over the last couple years, it frightened her. She wondered if she would ever fully trust a smiling man again. \n\nBrendan spoke his next words like he was jabbing a knife into his ex-wife. \"Tell Tammy I loved that day at her house when I ate her fucking peach of a pussy-\" Sharp gasps from at least two tables around them \"-and she jacked me off into her mouth.\"\n\nHe shoved upwards, his grin like a feral dog's, and walked away, raising a fist up and giving Julie the finger. It should have hurt, because she knew in her heart it wasn't a lie. Brendan was the type to save his most devastating shots for the last salvo. Tammy. Fucking Tammy. Her best friend. It should have made her angry. Instead, Julie blinked away her tears, reached forward, pulled his half-uneaten burger to her, and started eating again.\n\nThe restaurant really did make a killer burger.\n\n* * *\n\nThe Beast of Pike Bridge squinted through the snowflakes falling fat and fast across his windshield. It was damn near a whiteout. Not the ideal weather for the town's annual Fall Festival.\n\nTraffic moved sluggishly, even if most the town was used to these kinds of extremes. The Beast himself -- Colin, to those who were above the age of eighteen and not terrified of the stories that made their rounds about the man -- moved only at about fifteen miles an hour. If he drove any faster, he might not have seen the two small forms marching their way bravely down the sidewalk on Main. \n\nThey couldn't have been too old, in those indistinguishable years between seven and tweenhood, maybe. Colin hit his blinker, slowed, and pulled into a spot well ahead of them. The passenger's side window came down with a groan from somewhere in its machinery, and Colin leaned over to shout at the youths.\n\nHe called, \"Are you going to the Fall Festival?\"\n\nThey looked at each other then back at him and nodded.\n\n\"You two need a ride?\"\n\nThey came closer, but cautiously. Smart. Through the snow he recognized at least one face. Cameron Pisani's daughter, but he couldn't remember the girl's name. That would make the boy his younger son.\n\nThe girl said doubtfully, \"We can't ride with strangers.\"\n\n\"Do you have a phone?\" Colin asked.\n\n\"Uh huh. My mom's.\"\n\n\"Okay. Cool. Your dad is Deputy Cameron, right?\"\n\n\"Uh huh,\" she said. The boy with her stayed silent, watching Colin mistrustfully.\n\nColin smiled. \"Call him up and put him on speakerphone. I think he'll be okay with it but let's find out.\"\n\nShe reached somewhere within her massive down coat and produced a blue-shelled phone. She pulled one glove off with her teeth and called their dad, spitting the glove out into the crook of her arm when it started dialing.\n\nCameron's big booming voice filled the air. \"There's my monster. You feeling better, sweetie?\"\n\n\"Uh huh,\" the girl said. \"We were gonna walk to the Fall Festival but, um, this guy wanted to give us a ride.\"\n\n\"Who?\" Cameron said, nearly a shout.\n\n\"Hey Cameron, it's Colin. Shaw.\"\n\n\"Oh, oh God, she scared me. Hey Colin, how's it going?\"\n\n\"Good, thanks, but it's almost a whiteout out here. I saw the kids walking. They're doing the right thing, not wanting to take a ride from strangers. They're outside the car, with you and me on speaker phone.\"\n\n\"Oh man, yeah. Annie, Colin is okay. You can take a ride from him.\"\n\n\"Okay,\" she said, immensely more cheerful.\n\n\"See you in a couple minutes,\" Colin said. The girl said her goodbye and hung up, stuffing the phone away again. Colin unlocked the back doors and they slid in. He warned them to buckle up, and they did.\n\nAs they drove, he said cheerily, \"So, you're Cameron's son?\"\n\n\"Uh huh,\" the boy said.\n\n\"Cool,\" Colin said, at a complete loss for words. He was not exactly great with kids.\n\n\"People say you're kind of scary,\" the boy said.\n\n\"Lonnie!\" Annie said, and punched his hip.\n\n\"I... guess I am,\" Colin said, smiling tightly. He knew how he looked. The hard, thuggish lines of his face. The sheer size of him, nearly six-six and hulking over most people. The scars along his cheek were the stuff of legend, to his amusement. It was no secret they were the result of a hard fall he took hiking in the mountains and a subsequent nasty infection, but the town loved to spin rumors. Everything from one of his victims gouging at his face to a mountain lion to Silje attacking him with a cleaver.\n\nOkay. That last one didn't amuse Colin so much. He spent a lot of days with Silje in her dark moods, and there had been a few times when she shoved him away or clawed at him when they made love, but that hadn't been her, not really. \n\nTo the kids, he said with false cheerfulness, \"So... you have a good Halloween? Lots of candy?\"\n\n\"Uh huh!\" Annie said, practically bouncing. \"We were the only kids to show up at Mrs. Getty's house and she gave us all her candy.\"\n\nColin chuckled. Only two trick or treaters came to his own door, and he had a pretty strong suspicion it was the same kid twice, just with a different costume. Not that he cared much. He bought three bags of candy and it would have just gone to waste, so good on the kid for being a smart little scammer. Most the local kids avoided his place like it was a real-life haunted house.\n\nThe Fall Festival was the baby sibling to the town's most popular draw, the Snow Drop. Both were vendor-heavy ways for independent businesses, crafters, and artists to get their wares out there. The Snow Drop encompassed more than that, with a traditional Christmas play, live music, visits from Santa complete with sleigh rides that made Colin mildly envious of the kids, and so much free bite-sized food and drink you could get pretty sloshed and stuffed walking the festival end to end.\n\nBoth were great times, but the Fall Festival was really going to be hit hard by this weather. The highways into town were all closed, leaving only local vendors and shoppers attending. Colin didn't expect much of a turnout and he wasn't disappointed. Usually the Festival was held in the city park, weather permitting, and weather was definitely not permitting that day, so they had to set up in the school's gym. There were still enough vendors there was some spillage into the parking lot, with a few big tents facing the handful of shoppers' vehicles in the parking lot. \n\n\"Any idea where your dad might be?\" Colin asked.\n\nSuddenly shy and nervous, Annie said, \"No.\"\n\n\"Um. Okay. I'll stick with you until we find him. He won't be too far.\"\n\n\"Okay.\"\n\nThey found a spot up front, which would have been impossible if the event was running at full steam. Annie and Lonnie didn't have too much to fear. Cameron was standing in the middle of the gymnasium one of Bonnie Ashe's legendary gut-destroying meatball canoes in hand. It was essentially a meatball sub in a hollowed-out hoagie bun, without the messy tomato sauce. Instead, the meatballs were made with rice, and lined in peppers, diced sharp onions, and jalapenos if you were eating them the right way. You could do without the peppers, but that would mark you as a weirdo unsteeped in Pike Bridge ways, and would generally be regarded as someone no one in town could trust.\n\nCameron had the canoe at mouth level, cradling it above a small paper plate. It was necessary given how much of the sandwich's guts might fall out at any given moment. His children ran to him, and he knelt so he could wrap an arm around them both.\n\n\"Can I have a bite?\" Annie asked, pulling away.\n\n\"You told me your tummy was rumblin'.\"\n\n\"It was,\" she said. \n\n\"All right, small bite.\" He tore apart the sandwich into thirds, and put two on the plate while he palmed the third. \"But honey, you shouldn't have come out in this snow. Especially not with Lonnie. Why didn't you call me?\"\n\n\"I'm sorry,\" Annie said, lip trembling. Colin winced. He would have folded in a second if she turned that look on him.\n\n\"Next time, you call or keep your tuchus at home.\" Around a big mouthful, Lonnie giggled at the word tuchus. To Colin, Cameron said, \"Thanks for bringing them down. Kids?\"\n\n\"Thank you!\" Annie said, and Lonnie sort of mumbled something approaching that. \n\n\"I bought you one of these for the trouble,\" Cameron said.\n\n\"Oh, you didn't have to do that,\" Colin said, jamming his hands into his coat pockets. \"Happy to help. Sorry if I spooked you two.\"\n\nAnnie and Lonnie, now firmly hooked up with their dad and good food, cheerfully ignored him and Cameron smiled apologetically. \"I'm set up in the corner booth over there with Mrs. Fisher. Swing by, grab a stress ball and a cookie.\"\n\n\"I'll do that, thanks,\" Colin said.\n\nKaren Fisher. Colin closed his eyes momentarily, feeling his pulse speed up. Not because of her -- oh, she was a terrifically pleasant woman -- but because of her husband, Sheriff Lester Fisher. The only man in town who knew what drove Colin away from the world for a while.\n\n\"It's not really my place, man,\" Cameron said. \"But it's good to see you out, Colin.\"\n\n\"Yeah,\" Colin said, his voice surprisingly even. \"Thanks. And thanks for the sandwich. I appreciate it.\"\n\nCameron nudged his kids and walked them towards the closest booth, where a local was half asleep in her chair next to the artwork she was selling. Colin made his own rounds, heading first for the free coffee to get something warm in his hands. The woman who doled it out eyed him with a wary smile. He knew her from the grocery store. She used to always smile so broadly when she saw him, one of the best professional smiles at the place. Now she eyed him like a cat unsure if the dog was going to take a chomp out of her.\n\nHe took a cup of strong black coffee, mumbled a thank you, and started to wonder if this wasn't a mistake. Before he left, though, he wanted to find something for his mom, who was down with the same stomach crud Annie had hopefully not transmitted to him in his car. His dad was much easier to shop for. Colin walked there next, and the vendor selling home-collected honey and homemade jams and jellies grinned wide, knowing a sale when she saw it.\n\nA jar of spicy honey and a bottle of hot sauce later, and Colin was feeling marginally better about the Festival, though he kept eyeing the sheriff's office's booth. Mrs. Fisher would maybe take it personally if he didn't stop by and say hello, so he walked there, taking deep, measured breaths as he thought about Lester Fisher sitting across from him, looking as sick and pale as Colin felt.\n\nHe pushed the image away. Couldn't dwell on it, or he'd run for the door.\n\nMrs. Fisher was one of his first childhood crushes, as Colin suspected was the case for many of the young men of his generation. Back then, her motherly attractiveness was amplified by a sugar sweet smile and blonde curls she usually dyed lighter shades than her natural butter blonde. Even now, in what had to be her mid-fifties, she was a beautiful woman. She let her natural gray through, though still kept some of her youthful looks with some choice white and dark highlights that gave her short bob some flair.\n\nHe would have given her a fifty-fifty shot at a natural or unnatural smile, but if Mrs. Fisher was hiding any questions about Colin like a lot of the town, she was gracious enough not to show it. \"Colin! So good to see you!\"\n\n\"Hello, Mrs. Fisher,\" he said, his own smile teased out by hers. \"Cameron told me you were here so I had to stop and say hello.\"\n\nShe came around the table and surprised him with a hug. \"It's been so long,\" she said when she pulled back.\n\n\"I guess it has, yeah.\" Colin tried to think of the last time he saw her and couldn't. \"How are you? How's your family?\"\n\n\"With the snow, Lester's hopping. Four accidents last night alone.\"\n\n\"Jeez, sorry to hear that.\"\n\nShe nodded. \"It gets better in the daylight, and with no one moving out there, I'll bet he's planted behind the safety signs on the highways, watching something on his phone.\"\n\nColin chuckled. \"He's a good man.\" Out of the corner of his eye, he watched Annie and Lonnie look at some cheap scarves, hats, and gloves in the stall next to them. Annie gave him a shy wave, and he waved back.\n\n\"Mm. And of course, we're both excited to have Julie home.\"\n\n\"Oh, for Thanksgiving? How's she doing?\"\n\nMrs. Fisher blinked. \"Oh. Oh, I guess you're not on Bottlegenie with her?\"\n\n\"Um, no, I'm not on social media at all anymore,\" he said. Not since Silje passed away, he didn't need to say.\n\n\"She and that... that rotten bastard got a divorce.\"\n\nColin wasn't terribly close to the Fisher family but he did know Karen Fisher didn't curse, not even a \"bastard.\" \"Is she okay?\"\n\n\"Better now. But I know what you mean, and I think so. If he laid hands on her, God help him, because I think Lester would... well....\"\n\n\"Yeah, I can't blame him.\"\n\nA flash of the sheriff, a hand on Colin's shoulder. \"Ah Jesus. Ah fuck,\" Lester whispered.\n\nMrs. Fisher brought him back to the conversation. \"She was hoping to be home today to help out with this, but she's stuck on the other side of the mountains. Like everybody, I suppose.\"\n\n\"Well, I'm sorry to hear things didn't work out with them. Give her my best.\"\n\nHe started to ask about the Fishers' son, whose name he couldn't quite recall offhand. But in the stall next to them, Annie held up a peach-colored scarf. The vendor said, \"Now honey, that's fifteen dollars. Do you have fifteen dollars?\"\n\n\"No,\" Annie said crossly.\n\nThe vendor chuckled with all the puffed-up arrogance of the old versus the very stupid young. \"Well, then, don't touch.\"\n\n\"Excuse me,\" Colin said to Mrs. Fisher, and she nodded and smiled. Colin headed for the two youngsters, and knelt. \"Hey. You think that's pretty?\"\n\n\"Uh huh,\" Annie said.\n\n\"Well, I do have fifteen dollars, but I think Mrs. Willis is selling hats and scarves and some super cool baseball caps further down there and she's much nicer to kids. How about we go there and see what she has?\"\n\n\"Now hang on-\" the vendor sputtered, and Colin walked the kids away. He turned to give Mrs. Fisher a wave and she waved back.\n\nWhile Colin and the kids picked out scarves -- him for his mother, the kids for themselves -- he never noticed Mrs. Fisher watching him the entire time, a finger tapping against her hip as she thought.\n\n* * *\n\nThe snow came early and hard, stranding Julie across the Harpy Mountains just an hour from home. Well, an hour under the best circumstances, but she saw her father respond to too many accidents up on the pass to risk it.\n\nShe stayed in a midrange hotel she vaguely remembered from some youth tournament. With nothing open that late but the gas station, she crashed out in her room with a regrettable sandwich as old as she was and a mountain of snacks. After a bag of M&Ms and way too much teriyaki jerky, she looked down at the half-full bag of remaining snacks, sighed, and headed down to the hotel's gym for a late-night workout. It was perhaps the least sexy she ever felt in her life, and when a guy came in just long enough to leer at her and ask if she wanted a lift buddy, she nearly broke down crying.\n\nBut Julie was also a sheriff's daughter, and when the guy drew closer, she told him sweetly she would beat his ass five ways from Friday and stomp his balls into paste if he tried to touch her in any way. He called her a few choice names, but he left. Julie decided it was time to call it quits and asked the clerk on duty to go with her up the elevator, just so she knew the creep wasn't hanging around.\n\nHe wasn't, and Julie crashed out again, this time sans snacks. She stared up at the ceiling, an arm behind her head, and thought hard about her future. Finding a job wasn't going to be a problem -- she had an open invitation to join the staff at Pike Bridge Community Hospital, since they always needed nurses. But long term, what did she want? She moved to Chicago to go to medical school, intending at first on becoming a doctor or a physical therapist, but eventually moving towards nursing after working as a CNA her first summer there.\n\nIt was a job Julie neither liked or particularly disliked, though the hours could be long and brutal. Hospitals sometimes couldn't afford to care how overworked their staff was if there weren't enough nurses to go around, and Julie would sometimes work north of fourteen-hour days for two weeks straight. It made dating hard. Hell, it made life hard.\n\nBrendan pretended not to care about that. Pretended that he was okay with the long hours and didn't need the attention. But soon that supportive fa\u00e7ade cracked and he began to come in towards the ends of her shifts. He tried to explain it away as being the dutiful husband, trying to support her at her career, but when he started to become disruptive or try to help, Julie had to put her foot down. That angered him. They had small arguments, things she thought were in their past. For a while came a brittle peace. Years, in fact. It was only recently he started coming back in again, looking for her, and this time his reasons were naked. He was checking in on Julie, making sure she wasn't seeing someone else, that whenever she had to stay longer she wasn't secretly blowing one of the doctors.",
        "That was the symptom of his greatest disease -- distrust. Brendan never believed he deserved Julie so he always doubted that she was faithful to him. He didn't believe she was talking to her family, so he would check her phone when she ducked into the bathroom -- then eventually, right in front of her. During one of the worst of their fights, he started questioning Julie about all the contacts on her phone, calling them one by one to see if they were who she really had them listed as. After that fight, Julie went to stay with a friend for a weekend until Brendan showed up with a bouquet of her favorite flowers and an apology on his lips. But never in his heart.\n\nThings went from bad to worse until the day of \"the\" fight. It was his mother who described his temper like thunder. Sometimes a dull rumble you could hear coming, sometimes a sharp, explosive sound that nearly knocked you over. It was as perfect a description as any.\n\nThey were building towards something ugly for a few weeks. Brendan was stressed at work. He was up for a full-fledged executive position soon, which would mean a massive jump in salary and far more responsibility. He thought he deserved it, but management was looking more and more likely to pick one of the other two people up for the position. Brendan pissed and moaned that hiring one of the other two would be racially motivated, since one was a black woman and the other a Latino man. Julie vehemently disagreed and reminded him that up to that point, Alejandro had been a fantasy football buddy and a guy Brendan had drinks with on more than a few occasions.\n\nThat led to a blowout fight where Brendan accused her of taking their sides. Julie told him, no, she wanted him to get the promotion, but not if it meant him becoming a conspiracist who knew in his heart both the other picks had seniority and as much of a right to the job as him, no matter the color of their skin. But that wasn't the end-all be-all fight. That was just the warm-up. For weeks they stewed about it, Julie trying to avoid the topic, Brendan unable to stop bitching about it every single night. \n\nThe real fight mixed Brendan's paranoia with his work stress. When Julie came home from a particularly exhausting shift, the house reeked of her favorite perfume, something she only got to wear away from the hospital since her work asked she not wear any strong scents.\n\nBrendan sprayed every room, every surface he could, and the odor was so strong it nearly made her gag. He was not drunk. He was not on any drugs. This was him, as naked in his rage as he'd ever been. With a voice devoid of emotion, he asked her what she was doing at his office that afternoon. Julie, so tired she was ready to drop, couldn't fathom what he asked her, and started opening windows. He stalked her through the house, asking her again and again despite her assurances she had been working, as she always was when he felt this urge to know where she was at any given moment. \n\nHe told her with icy, clipped words he smelled her perfume in the hallway at work. Julie sat down, dug out her phone, and showed him mutely the perfume's Amazon page. It was the seventh top seller. He probably did smell her perfume, but it wasn't her and he should have known that. That set him off. For an hour and a half he screamed at her at the top of his lungs, leaving her in tears. In the middle of the fight he started flinging things around. Plates. Cups. Another one of her bottles of perfume as he screamed at her that he knew she was a whore. Julie snatched up her car keys, and he grabbed her arm, his fist raised. She would remember that moment for the rest of her life. Brendan was not a fighter, but he was a good-sized man. She was strong but she had little doubt he would beat her bloody if he wanted to. The only thing that saved her from it, she thought, was Brendan himself. His eyes went huge and his fist dropped. He started wheezing her name, but Julie was already moving, running, snatching up her purse. He tried to follow her but she was too fast and slammed the locks into place in her crossover before he could pry the door open and drag her out.\n\nJulie lived through a lot of scary moments in her life. A lot of them stemmed from her dad's job and the late nights he had to work, the times he got called out to deal with a violent offender, the horrific morning when some tweaker stabbed him and he nearly bled out. Some of them stemmed from her patients, some of whom would get violent.\n\nBut never in her life would she be as terrified as that moment when Brendan nearly hit her. It haunted her dreams, made her cry out in her sleep. She would sometimes get the damnedest feeling he was in a room with her, even when she knew the locks were thrown and she was alone.\n\nHer husband did that to her. Not a stranger. The man she loved.\n\nAnd now she was faced with a future of uncertainty. Of rebuilding and regrowth. It was strange, but despite the horrific road she took to get there, Julie almost anticipated it. It would be good to go home again. Maybe for a few months, maybe a few years, maybe forever. It would be good to have her mother there to give her hugs when she needed comforting and her father's steel backbone when she needed his strength. It would be good to have her brother and his family around to cheer her up even when Mickey could drive her crazy. \n\nHome again, home again, she thought, and drifted off to sleep.\n\n* * *\n\nThe morning brought with it gray skies, but no hint of the previous day's snowpocalypse. Julie checked out of the hotel early but didn't hit the road until well past nine. She wanted to give the plows plenty of time to do their business and make sure things were safe. After a long, luxuriously decadent breakfast and two readthroughs of a local paper, she finally hit the road, buzzing with trepidation and warm energy.\n\nHer parents had once liked Brendan, back in his affable, goofy days, but as their daughter soured on her husband, so did they. Julie didn't fear their reaction -- her mother went through a painful divorce when she was just nineteen so they commiserated often -- but she did feel a curious sense of frustrated failure that her marriage didn't work. She didn't regret leaving Brendan. Fuck him. But she did regret that she didn't get it right, even as Julie knew she made no real wrong decisions, save maybe for not leaving Brendan earlier.\n\nShe believed so strongly in love and romance and all that silliness, even now. Since the separation, there had been a few dates, all with pleasant enough guys. She thought there might have even been a spark with one of them, a coworker going through a divorce like her, but he ultimately decided to reconcile with his wife and that was that. For a long time, with Brendan, Julie was so focused on her career, paying down her debt, and beginning the search for a house or a condo that she didn't give much thought to children. Now, though, she began to wonder if she wanted children, and the strange thing was, the return to Pike Bridge brought about a quietly firm answer in her mind. Yes. With her family around, in a small community where she knew the best daycare, the best (and only) school, and the ideal places to live, a small portion of the stress of motherhood could be assuaged. \n\nBut that was definitely a \"later\" idea, one she would explore when she settled in again. For now, at least, Julie warmed to the idea of going home again to her parents' house, to her old bedroom. She looked forward to the minefield of hosting Thanksgiving with all their family and friends, and dropping in on the town's Snow Drop. She wished she could have made it to the Fall Festival, but from what her mom said, it wound up being a pale shadow of its usual self. The Chamber of Commerce was already talking about a redo in the spring, most likely over Easter. \n\nAnd speaking of her parents, Julie saw a familiar SUV parked on a wide turnout. She laughed delightedly as the police lights started up. Her father waited until she passed by, then roared out onto the road behind her, catching up and then passing her on the highway. Fifteen miles he led her like that, lights, blazing. It was probably against so many county codes, but Lester Fisher was nothing if not beloved in his county. Well, excepting some of the people he had to deal with, of course, but anyone worth their salt in an honest, good life loved the man.\n\nOf course, Julie was slightly biased.\n\nOut of the mountain pass they came, and the sight of both the actual Pike Bridge and the town named after it brought warm, happy tears to Julie's eyes. She didn't hate the place as a youth, not exactly, but like most people her age, she yearned to escape from it, to explore the world. Now she wanted nothing else but to be nested in its coziness, in the sleepy aged beauty.\n\nIt was not a town without imperfections. Many of the buildings lining Main Street were in dire need of repairs the owners simply couldn't afford. Some of the paved roads needed maintenance, something a slow influx of wealthier residents was helping with but it was a slow procedure. Most glaring of all was the backbone of the city, a cannery that produced wet cat food. The place was an eyesore but it was the economic tentpole to the area for the last fifty years.\n\nThe beauty far outweighed those problems. The Snow Drop meant the town was regularly listed in travel guides' top Christmas towns to visit, and Pike Bridge began slowly changing to accommodate that. Outdated sidewalk lights were replaced with ornate modern globes, giving Main Street a distinct beauty at night. Two gift shops dedicated to local crafts and Christmas items did a fair bit of business year-round. \n\nOf course, that wasn't the only draw. Pike River lazily snaked through the canyons, a wide, shallow body of water often so low during the hottest summers you could clearly see its bottom. The town saw some summer traffic from fly fishermen and campers heading to the mountains, but nothing quite like that early December rush. In February, ice hockey was the town staple, with a local league and a modest prize purse. Gus Behrs, a local big landowner, recently divvied up part of his property for a push at growing a pumpkin patch and installing a corn maze, something Julie was disappointed she hadn't seen but looked forward to the next year.\n\nSome of the locals grumbled about the loss of the Americana feel as the town slowly grew, but no one could deny the economic bump was sorely needed. \n\nLester shut off his lights as they neared the edge of town. Julie laughed delightedly when she saw two more vehicles waiting for her along another turnoff. Her older brother Mickey's old beater of a truck slid in behind her, and her mom followed along, tooting her horn merrily. Julie honked back, and her dad joined in. Several drivers going the other way stared at their makeshift parade, and Mrs. Turley even turned around to join in, honking along like she was part of the gang. That attracted another couple cars at an intersection, and soon they had a mechanical conga line, making Julie's heart swell to bursting.\n\nHer dad led the charge to their house, and the Fishers parked in the driveway and out on the street. Julie hopped out fast and waved at their townsfolk followers, and got one last round of honks as a response. Then her dad was there, and her mom, and Mickey too, and Julie laughed and cried and buried herself in the midst of their comfort.\n\n\"You guys are crazy,\" she croaked finally when she could speak again.\n\n\"We inherited it from you,\" Mickey said.\n\nShe punched his shoulder. \"But you're the older one.\"\n\n\"Yeah, well, you're infectious, aren't you, brat?\" he asked, grinning. \"I gotta run back to the grocery store. See you tonight for dinner?\"\n\n\"Yes. Absolutely. Are Shannon and the kids around? I might drop in and say hi.\"\n\n\"Don't. I want them to be surprised tonight.\"\n\n\"Perfect. See you, butthole.\"\n\n\"Yeah, love you too,\" Mickey said. He gave her one last hug, and headed out with one final honk.\n\nJulie turned to her parents, her fingers at her sides, crushing the fabric of her sweater. She couldn't look straight at them for fear of losing her shit entirely, and instead focused on the space between them. \"I know you probably need to get back to it, Dad.\"\n\n\"I have time to help you bring your things in, Jules,\" he said softly. \"Baby, I...\"\n\nJulie melted. The tears she leaked since she saw Pike Bridge became a flood. Her parents rushed to her, holding her upright, hugging her, rubbing her back. She clung to them and cried so hard it left her dizzy. Next thing Julie knew her mother was guiding her into the house, an arm around her waist, whispering kind words to her, sweet nothings like \"glad you're home\" and \"with us now.\"\n\nAll the heartache Julie hadn't allowed herself to feel thundered in in those minutes. She was guided down to her parents' couch, a thin wrap draped around her. Her father held her hand for a minute before hurrying out to begin bringing her things in. He was always like that when there were emotions involved, needing to stay busy, stay focused. It was part of what made him a great sheriff, that ability to funnel his feelings into something productive. Julie inherited that from him. She tried to rise to help, but her mom tugged her right back into place.\n\n\"You're sitting right here, I'm making you a cup of coffee or tea, and we're just going to breathe for a while,\" Karen said, her own smile broken in its own way. She had been through this once herself, with a mean drunk of a husband.\n\n\"I thought I had... all this out of me,\" Julie said, her words coming hard. \"I... I... I... thought after we separated I had a good handle on it, that I was going to not get this emotional, but oh my God, it's being home again and just seeing you guys and...\"\n\nKaren hugged her tight again and rocked with her.\n\n* * *\n\nOne of the few places Colin found refuge in the nightmare years was the town's small gym. He would pop in weekdays during the slowest hours and work out a solid hour at the minimum, jogging on the treadmills or lifting weights. He found solace in the mindlessness of the tasks, and the physical high helped pierce his fugue. He was never really out of shape to begin with, but now he looked, even to his harshly critical self, like a slab of muscles.\n\nIt was a small mark of pride, and it provided him with a certain desirability. His harsh face left him not quite handsome, but to a certain type of woman, that added to the allure of him.\n\nIn many of Silje's clearer self-reflective moments, she made Colin promise he would date again if and when she died. He used to tell her she would be able to fight the depression, but that was before her body started betraying her too. Eventually, her pleas became desperate. She needed to know he would be okay after she was gone, and a deeply frightened Colin finally agreed, and again and again when her mind slipped and she couldn't remember having had the conversation. \n\nThere were a couple years after her death when he just couldn't, promise or no promise. He sated himself with old pictures of the two of them in better times. Silje in the lingerie she picked out for their wedding night. Silje in a one-piece, seated on the concrete lip of a pool, her thick bottom spread deliciously wide. A very private selection he kept on a flash drive locked away, their most intimate photos. Her lips wrapped around his cock, one of her hands stroking his base. Silje riding him, one hand on her long blonde hair, the other underneath her small breasts. Silje with her makeup smeared, his come drizzling down her face.\n\nThose last ones hurt a ton. In sex, when Silje's fight was largely with her depression, she found something of a release. Same with her writing, at least occasionally. But as time wore on, those highs became harder to chase, especially with new medications or new afflictions striking Silje left and right. Eventually sex fell by the wayside as they focused on her health. Silje's apologies somehow made all of it more real. She was quick to apologize if they got into a fight -- and oh Lord, was the makeup sex something else with her fire -- but when it came to her body and her mind, she rarely did until she would start to stroke him, lose interest, and cry because she loved him so much she thought she was hurting him.\n\nOh God, to have her back for one night. That was his thought for a long while, and he wanted only her, his lost love. Not even for the sex, just to hold her, just to feel her in his arms again. In the most powerful of his dreams, she was there, wrapped up in him. \"My big bear,\" she would murmur, and snuggle in tighter against him.\n\nFor her, Colin started dating again eventually. Every single time, his dates came from the gym. It was his one limited social interaction of note, but it also was impossible for most the women who came through there not to notice his ripped physique or the way he handled the weights like they weighed nothing.\n\nNone of the earliest dates went anywhere. He dined with them at Meala Culpa, the town's arguably best restaurant. He smiled at their stories and their jokes, drank a single solitary beer, and walked them to their cars, his promise to Silje fulfilled. \n\nBut eventually Colin confronted the truth within himself, that he was only acknowledging the wording of the agreement, not its spirit. One day, when the shy date he was with invited him back to her place, he accepted, though he warned her he was not after a relationship or even a second date. She was okay with that, and explained with some red-faced hesitancy that was what she wanted too. He took her to her place, ate her to a quick, gasping climax, then fucked her from behind, mechanically but dutifully giving her a second and a third orgasm. He couldn't look her in the eyes. Couldn't take seeing another woman's face other than Silje's. If Colin came, he didn't remember it afterwards. It didn't really matter.\n\nThere was an odd string of dates like that, women who approached him for a nice evening and a quick hard fuck afterwards. Even weirder, that was all they wanted, something he was fine with but which baffled him. He finally learned the truth of it from Maria, the fourth woman he saw, a single mom who had been a few grades above him back in high school. After their sweaty, intense hookup, his curiosity finally got the best of him and he asked her, point-blank, if there was some cabal of single women who were using him as a sexual scratching post.\n\nMaria laughed. \"A cabal. I like that. Yeaaah, I guess there kind of is.\"\n\nShe explained Silje used to be quite vocal in high school and beyond about both Colin's skill and size. Curiosity and his widower status stirred up some renewed interest in finding out if Silje was putting them on until they finally managed to land him. Colin roared with laughter at that, and told his satisfied date any time they needed to take the itch off to come talk to him, so long as they were all okay with an understanding there would be no relationship.\n\nSilje, still and forever looking out for him long after she was gone.\n\nHis trips to the gym became something more themselves when Jill, the owner, ran short on staff and Colin volunteered to help out for an afternoon. That turned into a conversation about putting him on the payroll since he was there more often than half her employees. He didn't really need the money -- Silje took care of him in that regard too -- but the extra income was nice and it gave him something to do. So slowly, Colin reentered the working world, and his hookups became an infrequent thing.\n\nNow, he rested on his back on a bench in the women's locker room, his shorts around his knees. Slim Allison Harwood rode him, her motherly breasts bobbing with each bounce. There was little chance of discovery. Anyone who came in through the doors would have to go through a reception point with a secondary locked door only accessible by a gym card. Since they were the only ones in the gym at the moment, they could fool around.",
        "Allison was a fantasy made real. When he was a teenager, she and her then-husband moved in three doors down from his parents. The brunette beauty was, back then, in her thirties, and would wear nearly diaphanous summer dresses that left him drooling over her figure underneath. Her husband left town when an affair with his secretary came to light, leaving behind a miffed -- and still gorgeous -- Allison.\n\nLike many of Colin's hookups, she was not in this for a relationship, and rode him with cheerful abandon, her big breasts bouncing on her slim frame. She was a wisp of a thing aside from those plentiful gems, and he liked the sight of his hands on her trim, tiny waist. His grip tightened each time he thrust his cock up, meeting her stroke for stroke.\n\n\"Ooh, that's it, fast like that,\" Allison panted. She leaned back to rest her hands on his knees for better balance, still rocketing up and down on his cock. Her hair fell across her eyes and she tossed it back, grinning wider as her eyes closed. \"Oh, oh fuck, that's the spot, like that, just like that...\"\n\nHe ran a hand down to her ass and squeezed before gripping her waist tight again. Didn't want her to fall. Her thrusts grew more and more erratic, interspersed with sudden hard grinds. Sometimes she'd reach down and smack her clit, just slap the damn thing. She opened her eyes when she did this, watching him, amused.\n\n\"Ohhh, my clit loves it rough.\" She winked, and he smiled back. Message received. He moved a hand to her mound and thumbed her clit hard. He smacked it too, and she sucked in a sharp breath. \"Oh, ohhh, harder...\"\n\nHe spanked it again and one of her hands flew to his as she jerked up and down. Allison gripped his rough hand and she shivered. Her orgasm swept through her fast and she gasped out, \"Oh, ahhhh, that was a g-good one... take me, take me how you want to...\"\n\nColin gripped her waist again and lifted her. She was light and he had no trouble carrying her to wall beside the lockers. Allison gasped when he pinned her against the wall and started bouncing her effortlessly on his cock. He drove up into her with hard, sharp thrusts, the clock ticking now in the back of his head. She twisted his head, kissed him, her tongue exploring him as he grew more frenetic.\n\n\"Fuck, I'm close,\" he growled.\n\n\"My tits, my tits, you've always liked my tits.\"\n\nHe couldn't help a chuckle at that. Allison wasn't wrong. He let her down and she dropped like a stone. She looked up at him as he slid his slick cock into her cleavage. Her hands went to her breasts and she squeezed them together. He groaned as he started pumping through them. He lasted a minute, maybe two, and then he was pulling back, gripping his cock and aiming at Allison's chest. She licked her lips and pushed up her boobs. He glazed them with five, six shots of come.\n\nAllison giggled as he took a step backwards. She ran a finger through the mess he left and swallowed a dollop. \"You always leave me such a treat,\" she said.\n\nHe chuckled and offered her a hand. \"Thanks. I was a little pent-\"\n\nSirens. Or rather, a siren. And honking. Lots of honking. \"That doesn't sound good,\" Allison said.\n\n\"Maybe they're sending the kids off for something?\" he asked. \"Is it time for basketball tournaments?\"\n\n\"You're asking me?\" Allison asked. She had no kids and even less interest in sports.\n\nHe flashed back on the conversation he had with Mrs. Fisher. \"Oh oh oh, I'll bet that's Julie Fisher's homecoming welcome.\"\n\nAllison started to ask a question, probably who Julie Fisher was, and then she lit up. \"Oh, the sheriff's daughter.\"\n\n\"Yup.\"\n\n\"She was a pretty little thing. Home visiting?\"\n\n\"Well, I don't feel comfortable talking the specifics, but I spoke to her mom. I think it's a little more than just a visit.\" Colin returned his attention to her. \"Let me get you cleaned up.\"\n\n\"Oh, Colin, you're sweet but the showers are right there.\" She tapped her cheek and he leaned down to give her a kiss on the corner of her mouth. She gripped the back of his head and pulled him in for something more fiery, and reached down to give his soft cock a squeeze. \"God, I still can't believe I'm sleeping with my neighbors' son.\"\n\n\"I'm nearly thirty,\" he protested good-naturedly, and squeezed her ass in return.\n\n\"I know but it still feels so... mm... taboo.\" She pulled back and looked up into his eyes. \"And you know if you ever wanted to...\"\n\nThe unspoken statement was something they talked about on their third hookup. After a session that ran late into the night at her house, she made him dinner. She told him hesitantly and shyly if he ever really did want to pursue a relationship, something more real than what they had going, give her a call. Colin tried to let her down as gently as he could, but there were always some barbs when it came to things like that, and he knew he hurt her, at least a little.\n\n\"Thank you, Allison. I mean that. And I hope it's not too painful if I continue to politely decline.\"\n\n\"No. I'll take you how I can get you.\" She squeezed him again. \"And take. And take. And take.\"\n\n* * *\n\nSlater and Kittrick burst through the door in a flurry of snowflakes, already arguing about something. Like all close brothers, they were the best of friends and the worst of enemies. They were so intent on locking horns they didn't notice their aunt kneeling with her arms wide open in the living room as they stomped towards the kitchen.\n\n\"Iron Man has a metal suit and stuff. Spider-Man just has stupid webs,\" Slater said. The older of the two, he was the serious authoritarian, the worldly expert, and the boss of the show. It was commonly agreed in the family that he was the genetic copy of Grandpa Lester in both appearance and temperament, much to Lester's alternating pleasure and surliness.\n\n\"He's really strong!\" Kittrick was a tiny bundle of flamboyance, always dancing or shouting or singing. Forget food. Attention was his fuel, and he craved no one else's like his big brother's.\n\n\"So is Iron Man!\"\n\n\"Well, I feel loved,\" Julie said to her sister-in-law Shannon when she came in the door.\n\nShannon grinned. The boys still didn't notice, and Kittrick asked his grandfather, \"Grandpa, who would win in a fight? Iron Man or Spider-Man?\"\n\nKittrick looked at his teary grandmother curiously. \"Why are you crying?\"\n\nJulie scrambled towards them and grabbed them both around the waist. They screamed and she noshed on their necks with mad flurries of kisses. Kittrick's scream turned to laughter and they spun away.\n\n\"Julie! Julie!\" Kittrick shouted gleefully.\n\nBut Slater looked at her with big, tear-filled eyes and blurted, \"You m-made me pee!\"\n\n\"Oh God,\" Julie gasped. And she had. The boys both had lots of outfits in the spare bedrooms for sleepovers, and Shannon rushed their oldest son away, making sure he was all right. Julie collapsed against the base of her parents' couch, laughing into her hands as Kittrick clung to her. \n\nMickey eyed her, unable to keep a straight face. \"Smooth. Thanks for his nightmares for the next month.\"\n\n\"I'm so sorry.\"\n\n\"Yeah, you look it.\"\n\nShe kept hold of Kittrick and pulled him in for more smooches to his delighted giggles. Then she hopped up and gave Mickey another hug before checking in on Slater and Shannon. When Slater was all cleaned up and changed, he came to Julie, still angry but unable to resist the pull of seeing their aunt again. She held him and told him how sorry she was, and this time she meant it.\n\nFinally Slater seemed to forgive her, and asked her with furiously red eyes, \"What are you doing here?\"\n\n\"Well, I moved back!\" she said brightly. \"I'm staying here with Grandma and Grandpa for a few weeks, and when you come to the hospital for a shot, I'll be there ready to give you a big old poke in the keister.\"\n\nHe giggled tentatively at that. \"You're really going to live here?\"\n\n\"Uh huh. And when I find my own place, we're going to have so many sleepovers.\"\n\n\"Okay,\" Slater said, oh so seriously.\n\nImpersonating him gruffly, Julie put her hands on her hips and said, \"Okay.\"\n\nThey dug out a board game, and after Lester pulled the drop leaves out at the kitchen table, the whole family gathered around it, Shannon and Julie on team, the boys on the other. Karen started up a batch of tortillasoup, the family's general favorite. She also assured Slater that yes, she had a can of tomato soup just for him, since he didn't like the smell of the other.\n\nJulie smiled at all the easy familiarity. She missed this so much. Brendan liked board games too but it grew impossible to play with him when his mood swings left him a sore loser and an asshole of a winner. Here, at home, she could just be.\n\nWhen they all ate a bowl of soup and demolished most of a loaf of garlic bread, Mickey and Lester set about rinsing and putting the dishes in the dishwasher. The kids, utterly emotionally exhausted, were sacked out in Julie's bed.\n\n\"I'm sorry. I know it's going to be crowded in there tonight,\" Shannon said.\n\nJulie smiled. \"I wouldn't have it any other way.\"\n\nWrapping her hands around a big mug of tea, Karen said, \"Speaking of kids... Cameron's kids, Annie and Lonnie? You remember them?\" Julie did, though she hadn't seen them since... gosh, Christmas before last. The deputy was a family friend, as was most her father's staff. \"Well, she was under the weather, so Cameron left them at home to work the booth with me. I guess she must have been feeling better, because in she and little Lonnie came with... guess.\"\n\n\"I... how am I supposed to know?\" Julie asked.\n\n\"Bugs Bunny,\" Mickey said.\n\n\"The Easter Bunny,\" Julie said, falling back into an old sibling rhythm.\n\n\"A Playboy bunny,\" Mickey said.\n\n\"Little Bunny Foo-Foo.\"\n\n\"You two are impossible to tell a story to, you know that?\" Karen said, and Shannon giggled. \"Colin Shaw.\"\n\n\"Oh, Colin,\" Julie said softly.\n\nThe story was heartbreaking. Colin Shaw and Silje Ebbesen were a couple that should have been together forever. Julie was in the same grade as them in school, and as far back as she could remember, they had always been a pair. First as friends, then one day sometime in the fifth or sixth grade, Silje planted her flag and declared to the world -- and to Colin's surprise -- that they were boyfriend and girlfriend.\n\nShe was delightfully impetuous like that, never hesitating, always storming forward with Colin following along good-naturedly. She would grab him up and make him dance with her, or plop down on his lap without so much as a warning, sometimes before class started, to the exasperation of their teachers. Silje had a bright mind and a devil-may-care attitude, but when it came to Colin, she burned her brightest. She was his staunchest supporter, his defender, his constant shadow. And he was her rock, her silent boyfriend, the one person in this world who could calm her rampaging mind.\n\nIt became obvious in in high school that Silje had some mental health conditions. She flew off the handle at random, often. Her weight never seemed the same day-to-day. Julie had an English class with her and Silje could compose the most heartbreaking poetry or write the most amazing stories, then the next day write a hundred lines of \"I hate this I hate this I hate this\" before balling up her work and darting out of class to hide in the bathroom and cry, usually until Colin came to peacefully coax her out.\n\nThe two of them stayed in Pike Bridge after graduation, and Julie was sorry to say she didn't keep in touch. She knew they got married that fall. There was a picture Julie forever loved they posted to Bottlegenie, one of Silje tugging Colin behind her as she charged out of the church after they were married. A bunch of friends attended and said the reception was a riot. Grilled hot dogs, a couple of sheet cakes from Wal-Mart, music arranged by Silje and played over a tinny old CD player. And dancing. Everyone said Silje outdanced them all, still twirling with Colin into the morning hours.\n\nA few years ago, word spread among their high school circles that Silje committed suicide. Julie's heart broke for Colin. In some perfect world he and Silje would have been the perfect doddering old couple, him driving a big old car, her riding with gleeful waves at all the people she knew. But Julie understood too sometimes a fight was not to be won, that hope and love could not always prevail. She cried a little when she heard the news, and sent Colin a card and a message online. He sent out a brief, terse thank you to her and everyone who inquired after him, then vanished from Bottlegenie and the world in general.\n\n\"He's still living here?\" Julie asked. \"I thought maybe with Silje gone, it might be too much.\"\n\n\"I think he stayed because of her,\" Karen said softly. \"I think he loved her too much to let her memory go.\" She smiled a pained thing. \"That's speculation. And I don't like speculating about him. I don't like all the nasty rumors. Anyways, while Colin was talking to me at the festival, he did the sweetest thing.\" She filled Julie and the rest in on how Colin stood up for the two little ones. \n\nShannon touched her heart. \"Aw. That's the sweetest story,\"\n\n\"It was good to see him,\" Karen said. \"He's such a kind soul.\"\n\n\"Mom...\" Julie said.\n\n\"Honey, I know. And yes, maybe I'm trying to play matchmaker, but... well. You could do worse.\"\n\nAt the dishwasher, with his back turned to them, Lester said so softly they barely heard him, \"Colin Shaw is one of the best men in this town.\"\n\nEveryone looked at him and Julie realized something. \"You would have had to... deal with the... with... um...\"\n\n\"Yes,\" Lester said. \"And that's all I'd like to say about that.\" He turned, and his lips were pressed firm together for a long moment before he spoke again. \"We have no right stepping into his business, but I think maybe if we have a casserole or something some night, maybe we ought bring some up to him.\"\n\n\"I want to stop by anyways, give him a hug,\" Julie said. \"That would give me the perfect excuse.\"\n\n\"I don't think you'd need one,\" Karen said. \"I think that's a man desperate for a friendly face.\"\n\n* * *\n\nColin was used to people staring at him long before Silje's illnesses and death. By the time he was fifteen, he was already six foot and as broad shouldered as most men twice his age. He used to buy beer for classmates because he looked seven or eight years older than he actually was. When he played sports, coaches from other teams demanded to see paperwork verifying his age until his was a well-known face and presence, and there was still some grumbling about Colin playing football.\n\nSo he didn't. He was not, by nature, a confrontational person. Protective, yes. He would have done anything for Silje, and on occasion when someone dared to make fun of her around him, her bear showed he had teeth. But sports didn't interest him all that much. He liked working out and running, but he didn't have that killer urge to win win win, hoorah. Really, it was mostly due to his parents' wishes that he even started playing sports in the first place, and since he showed a love of exercise without playing football or baseball, they gave him their blessing to quit.\n\nSilje, of course, told him he should have quit when he wanted to.\n\n\"You don't do anything you don't want to do,\" she said, snuggling in tighter to him on the couch. \"Just say no. I'm not going to. It's that simple.\"\n\n\"Like you telling me to invite you to the party at Steve's this weekend.\"\n\nSilje nipped his chest, and he kind of liked it. \"No. I'm the exception.\"\n\n\"Why?\"\n\n\"Because. I am. Are you really ever going to tell me no?\"\n\nHe chuckled. \"No. See? Just did.\"\n\nShe bit him again.\n\nThey didn't go to that party. Instead, Silje wanted to ride their bikes out to the river. He didn't know why, or ask -- sometimes when Silje changed her mind like that she didn't really know why and the not-knowing frustrated her to tears. Instead, at fifteen, Silje in her poofy party dress and Colin in his good jeans and his best shirt, they sat in the mud holding hands, watching the sleepy waters gurgle by.\n\nNow.\n\nNow Colin was trying to just finish a beer at the bar, but he was being watched from two sides, and he suspected more were probably stealing peeks at him. To his left were two thirty-something guys he vaguely remembered as being part of a construction crew, and to his right were a pair of women and their respective teenagers. The men watched him with smirks, the women watched him like he might come over and pluck their children off their stools.\n\nWhen a waitress hurried by, one of the women said none too quietly, \"We need some go bags.\"\n\nThe waitress looked right at Colin, then back at them and said, \"Sure thing.\"\n\n\"Don't,\" Colin said, smiling tightly at all of them. \"I'll go.\"\n\n\"Goddamn right,\" one of the guys muttered.\n\nColin finished his beer in one long drink, then stood up and grabbed his coat. He thought about trying to reassure the mothers that whatever they heard, he wasn't a monster, but what was the point? As his dad was fond of pointing out, this was 2021, and when it came down to believing truth and common sense or whatever insane bullshit people wanted to be true, they were going to pick the bullshit every time, especially if it gave them a reason to hate and fear someone. \n\nHe thought about his parents on his drive home, and called them up when he pulled into his driveway. His mom picked up on the second ring.\n\n\"Hey, honey. Lyla said she saw you going into the bar.\"\n\nColin smiled. Though he might be the center of much of Pike Bridge's gossip, his mother was its greatest collector. She managed a hair salon, and in their early sixties, she and his dad were now frequent guests at the town's senior activity centers. All of those were hotbeds for the juiciest gossip fit for consumption, and his mom delighted in gobbling it all up. She didn't spread rumors, not unless she could substantiate them, but she was its great stew pot.\n\n\"Yeah, figured I'd give it a shot. Didn't end up working out. I scared a couple of mothers and decided to get out of there.\"\n\n\"Aw, sorry to hear that. You need a ride?\"\n\n\"No, I drove home. And don't worry, only one beer.\"\n\n\"Good. What are you up to?\"\n\n\"I was thinking pizza. If you and Dad hadn't eaten.\"\n\n\"Ooh, that sounds good, but we'll treat.\"\n\nColin chuckled. \"I'm still in the SUV. Let me know what you-\"\n\nHis words faltered. Someone slowed and stopped at his curb. He frowned, thinking maybe it was one of the guys from the bar, or maybe one of the mothers there to chew his ass out for whatever reason they had made up in their head. But no, the woman who stepped out in a down parka was someone he knew and hadn't seen in a decade.\n\n\"I think maybe... black olive and pepperoni?\" his mom said.\n\n\"Hang on just a sec, Mom. Julie Fisher just stopped at the house.\"\n\n\"Oh, tell her hello!\"\n\n\"I will. Call you back soon.\"\n\nColin hung up and stepped out of his SUV as Julie popped open the back of her crossover. She waved and called, \"Hey, Colin! Not interrupting anything, am I?\"\n\n\"No, not at all. Hi. Hi.\"\n\n\"Hi, hi yourself,\" she said, grinning.\n\nJulie was beautiful in high school but she was stunning now. Back then she was wafer thin, and she still was in tremendous shape. But her face had gained some character to it, that vitality of a woman comfortable in her twenties. She had her mother's butter blonde hair, but her smile was all her own, wide and effortlessly charming.\n\nThey hadn't exactly been friends in high school. More like friendly acquaintances. Silje was closer, but then again, she was so much more decisive in that regard. If Silje decided she liked you, you were going to be her friend, no matter your say. \n\n\"I hope you haven't eaten,\" Julie said. \"Well... even if you have, you could freeze it and unthaw it later. All you have to do is pop it in.\" She took a deep breath. \"Let me start over. Hi! Long time no see. My mom and I made some chicken casserole today and thought you might like some too.\" Her smile broke, and she said, \"Oh hell, Colin, I'm so sorry.\"",
        "\"Thanks,\" Colin said, shifting uncomfortably. \"I heard about the divorce from your mom. I'm sorry too.\"\n\n\"Hug?\"\n\nHe chuckled and rubbed the back of his head. \"Love one.\"\n\nThey came together and hugged. It was a gesture he wasn't used to, not lately, and he kept trying to figure out what to do with his hands and his arms as she wrapped hers around him. She sniffed and pulled back to wipe tears from her eyes. \"Good God, man, did you become a cyborg?\"\n\n\"What?\" he asked, pleasantly baffled.\n\n\"it's like hugging a hunk of steel. I mean, not to say that you're a hunk. I mean your muscles are...\" Julie sighed and rubbed her forehead. \"Do you have something to drink? I could really use something to drink.\"\n\n* * *\n\nJulie took off her coat and hung it on a peg by the door. \"I know I should know who owned this house.\"\n\n\"Rita May-\"\n\n\"Velk,\" they said together. Julie continued, \"I did come here once. Dad was helping out with the food bank drop-offs. She invited us in. It was a lot more cluttered. She was kind of a pack rat.\"\n\n\"The last owners mentioned something about having to go into the attic through the roof because her stuff fell across the panel and the stairs.\"\n\n\"Yikes.\"\n\nThe home was straight from the sixties or seventies, small, squarish, but with a nice sloped roof and some Victorian touches like small bits of latticework out front under the eaves. Colin kept it pretty neat, though it did have that faint sporty odor she associated with bachelor places, nothing a good airing out wouldn't fix. The walls were loaded with pictures, both of Silje and their respective families. A wooden cross hung on one wall with two pictures of Silje with women holding Bibles. Julie remembered vaguely that she was big into one of the church's youth ministries.\n\n\"Take a seat,\" Colin said, gesturing at a well-loved leather couch and an armchair. \"What would you like? I've got beer, probably have the stuff for some Black Russians, or rum and coke, I think.\"\n\n\"Black Russian would be perfect.\"\n\nThe kitchen was only separated from the living room by a stubby island on wheels, and Julie watched him move as he collected bottles from on top of the fridge and poured them each a cocktail.\n\n\"When did you get back to town?\" he asked.\n\n\"Just a few days ago. Staying at my parents' house for the short term, but I actually might be your neighbor, kinda sorta.\"\n\nHe glanced over his shoulder. \"The Wilson house?\"\n\nShe laughed. \"You nailed it.\"\n\n\"It's one of the only rentals around the block.\"\n\n\"I forget sometimes how everybody knows everything here.\"\n\nHe chuckled. \"Yeah, I hear you.\"\n\nColin came back out with two glasses and gave her one. He set his on his coffee table and slipped off his coat. Julie tried not to stare. Colin was not a handsome man, not in the traditional sense. He had a fighter's face even if she never saw him lose his temper. It was craggy and almost mean, amplified by his newfound muscles.\n\nAnd holy shit, was it obvious even under a checked shirt that he was really packing some serious muscle now. \n\n\"You have really been working out,\" she said again, feeling slightly stupid and kind of drunk even if she had yet to take a sip.\n\n\"Uh. Thanks.\" He smiled over his shoulder. \"You're, um, looking good too.\"\n\nJulie blushed and he didn't draw attention to it. \"Thank you.\"\n\n\"I need to text my parents and let them know about the casserole.\"\n\n\"Oh, really, Colin, you don't need to change your dinner plans because of us. You can freeze that, or... you know, put it in the fridge or... anything you do with casseroles, I suppose.\"\n\nTongue and mouth, shut up. Shut up now.\n\n\"I'm betting they'll love it more than they love the pizza idea, trust me.\" He pulled out his phone, tapped a message, and stuffed it away again before leaning forward and taking his glass in one of his big hands. \"I have to admit, I'm not great at this whole... talking thing. I've kind of lost the touch. So you may have to take the lead.\"\n\n\"I meant to call. Or visit. Or anything other than that stupid Bottlegenie message.\"\n\n\"Thanks,\" he said uncomfortably, and Julie thought, oh shit, wrong topic.\n\n\"I'm sorry, you probably don't want to talk about Silje.\"\n\n\"No, it's fine now, really. I wasn't in the mindset to talk to anyone for a long time. It was only in the last few months I've been coming out of it. I... cared for her a lot.\"\n\n\"I know. I never saw anyone love someone as much as she loved you. I'm sure you felt the same way about her.\"\n\nColin nodded, looking away from her. \"Yeah.\" They both sipped their drinks. It was strong, but pleasantly so. \"But how about you? You doing okay?\"\n\nJulie took a breath and let it out as she really considered that question. It was something she was asked a lot, but if she was prying at the edges of Colin's shell, it was only fair she let him do the same to her. \"Things are improving. The divorce took so long and every day it was like this bubble building inside me until everything was finished. In my head, I know it's over, but all that tension, it doesn't leave you right away. I'm still sort of, mm, waiting for that bubble to burst even if I know it already has.\"\n\n\"I'm trying to think of his name,\" Colin said. \"Your mom called him a rotten bastard, but I'm guessing that's not it.\"\n\nJulie snickered. \"No. Brendan. And she is definitely not wrong.\"\n\n\"I never heard her curse much. If she said it now, it must be true. So, divorced, back in Pike Bridge, what's the future got in store for Julie Fisher? Going to go for your dad's job?\"\n\n\"Oh, God no. I'd look terrible in uniform. I'm starting at the hospital on Monday.\"\n\n\"A nurse, right?\"\n\nShe smiled. \"Spot on.\"\n\n\"They'll be lucky to have you.\"\n\n\"Aw, thanks.\"\n\nAgain they found themselves in the midst of an awkward silence, and Julie sipped her drink. Take the lead, she told herself. \"So, obviously you've been working out, but what else are you up to? Are you still working for the Forest Service?\"\n\n\"No. That's been a while. Jumped around a lot. A lot of part-time work.\" He looked away from her. \"I took some time off after Silje passed on. I'm working at the gym now. It's really going well.\"\n\nThat left out a large chunk of time, but maybe his parents helped him, or Silje's. \"I'm glad to hear that. I need to come by and sign up sometime. Mom's cooking is going to make me balloon out.\"\n\nHe laughed, and it carried with it a desperately relieved note. \"I hear you. My mom's the same way. Nearing thirty and she still brings me by dinner and leftovers all the time.\"\n\n\"Our parents are pretty great.\"\n\n\"They are.\"\n\n\"Are Silje's parents still around? I wanted to say hi to them too.\"\n\n\"Yeah, still out on the ranch, I think. I bump into them but it's...\"\n\n\"It's gotta be hard,\" Julie said, almost whispering.\n\n\"Yeah.\"\n\n\"Shit. I'm really... I didn't mean for this to be...\"\n\n\"It's okay,\" he said, his voice stilted.\n\n\"I should go,\" she said, and finished her drink.\n\n\"Julie, it's really okay,\" he said.\n\n\"No, I... I meant for this to be a happy thing. I'm dragging all this out of you and I don't know, maybe I'm a little raw from my own stuff.\"\n\nHe stood up and collected her glass from her. \"All right,\" Colin said. He sounded... disappointed. I'm sorry, Colin. \"I really appreciate the casserole. I'm sure my parents will too. And don't be a stranger around the gym.\"\n\n\"I won't. I'd say don't be a stranger around the hospital, but that's probably not a great thing to wish on someone, right?\" He chuckled. Julie came to him and hugged him again. Whereas last time she thought she took him by surprise, given how stiff he was, now he wrapped his arms around her. He was so big. So very much there. She looked up at him and thought for a crazy moment about kissing him. Something friendly, something to let him know she really did mean well.\n\nInstead, she pried herself away, wiping at tears on her cheek, and said, \"Every now and then I think about the time she jumped up on stage at Homecoming and demanded you be king.\"\n\nHe surprised her with a roar of laughter. They walked out to her car together, and Julie looked at him one more time before she slid into her crossover. She wanted to say something sweet and kind before she left, or draw his laugh out again, but she could come up with nothing.\n\n\"I'll see you around?\" she asked.\n\n\"Yeah,\" he said.\n\n\"Good,\" she said.\n\nA block away, at a stop sign, Julie lowered her head to her steering wheel. \"Good?\" she asked herself. \"Good? Oh, you are a dork.\"\n\n* * *\n\nThe house Julie would be moving into wasn't on Colin's way to anything. In fact, it was pretty tucked away in a dead-end street. But still, every day or so, he drove by on his way to the gym or the grocery store, wanting to see her again.\n\nIt wasn't even so much that he was attracted to her -- though he was, and there was no denying that -- but that she was a friendly voice. Was that pathetic? He wasn't sure. But he thought maybe he detected the tiniest hint of loneliness in Julie too, and she certainly seemed as fumblingly awkward as he felt. At least they had that in common.\n\nWhen it came to her questions about Silje, they lacked a certain sort of morbidity he became accustomed to from other people. Instead, there was a fondness there, something he was grateful for. Or maybe Colin was projecting. He didn't know. Regardless, there had been a momentary connection with Julie, a pleasant spark he hadn't felt in a long, long time.\n\nIn the weeks that followed, he had a date with one of his cabal. Amy was a pleasantly plump twenty-two-year-old, a single mom who was too harried for a real relationship. He picked her up early in the evening and they drove out to the Moonshiner Lodge, a modestly upscale restaurant deep in the mountains. The meal was good, the blowjob she gave him on the way back even better. He took her to his house, and around the last corner came Julie's crossover. She waved cheerily and he waved back, smiling.\n\n\"Who's that?\" Amy asked.\n\n\"Old classmate of mine, Julie Fisher. She's the sheriff's daughter. She's moving into the neighborhood, or hopes to, anyways.\"\n\n\"She cute?\"\n\nColin rubbed the back of his head. \"Ah...\"\n\n\"Oh, she is. Single?\"\n\n\"Just divorced.\"\n\nAmy gasped. \"Oh my gosh, maybe we need to make her part of the cabal.\"\n\n\"I think she's looking to catch her breath.\"\n\n\"Colin, if she just got divorced, she's probably looking for someone to fuck her so good she forgets all about her ex-husband. You definitely fit that bill.\"\n\n\"Ah. Heh.\"\n\nBack at his place, he took Amy good and hard, the way she liked it from him. She wound up on her stomach, legs spread wide for him as he rested above her back, thrusting into her. He suspected she liked to fantasize about another guy, someone from her past and probably her kid's dad, and that was fine by him. It wasn't like he invested his heart into these hookups too.\n\nAfter they finished and Amy showered, Colin drove her home. She thanked him with a kiss on the cheek and a pat of his groin. \"Well done tonight, bravo, five-star rating.\"\n\nShe hopped out and blew him a kiss from her front door. Colin drove back home, slowed at his turn, then decided to see if Julie was at the rental. She wasn't, not yet, but he had a feeling she got the place, and he was proven right a few days later.\n\nWhen he wasn't working, Sheriff Lester drove a big purple Tundra made all the more distinguishable by an April Fool's prank by his son, Mickey. The story was the stuff of Pike Bridge legend. Mickey borrowed the truck, ostensibly to go couch shopping in nearby New Bainbridge, but instead of the day he told his father it would take, Mickey disappeared with it for nearly four. Understandably irate, Lester left him a series of slow burning threats over text and voicemail, which Mickey responded to with only a simple, \"Don't worry about it,\" and a smiley face. All these messages were saved for the eventual social media reveal, which saw Mickey finally show up in front of the sheriff's office on April 1st in what had once been a reasonably normal pickup and which was now the sort of thing a tuner would crack up about.\n\nFor starters was the big fake induction scoop on the hood, made all the funnier because the engine was still completely untouched, save for an oil change. Also along the hood were now two black racing stripes, The windows had been tinted to the extent of the law, a chrome disco ball was now nestled on the shifter, and underneath the truck in the wheel wells were purple underglow lights matching the paint. The best touch, most the town agreed, was the special button installed on the steering wheel that would now play the initial seconds of Ice Cube's \"Ghetto Bird\" like a horn. \n\nSheriff Lester was not amused. His deputies and the office staff, on the other hand? Very much so.\n\nThe purple beast was now in the driveway of the home Julie was looking to rent. At the curb was Mickey's old beater with a couch hanging off the back end. The two men emerged in the early morning light, and raised their hands when Colin pulled alongside them and rolled down his window.\n\n\"You fellas need some help?\" he called.\n\n\"Could do, if you got a minute,\" Lester called back.\n\nColin put his SUV in park and pulled the keys. He was supposed to go on shift in fifteen, but given the size of the town, he could make the drive in just a few minutes.\n\nMickey, the smallest of the three, jumped up onto the bed while Colin hefted one end of the couch. Mickey brought his end to the edge of the tailgate and Lester took over for him, grunting as he gently eased it off the truck. He led the way going backwards, and Colin trailed him at the sheriff's pace.\n\n\"How you doing, Colin?\" Mickey asked.\n\n\"She's not too heavy.\"\n\nMickey chuckled. \"I meant in general.\"\n\n\"Oh right. Doing good. Keeping busy. Yourself?\"\n\n\"Peachy keen.\"\n\n\"Glad to hear it,\"\n\n\"Step up,\" Lester grunted.\n\n\"Got it,\" Colin said, and they navigated the couch up a concrete porch and aimed it at the door. In the grand tradition of doors and couches, it didn't want to fit at first until they unscrewed the legs, and then it just barely scraped through. When they had the legs back on it and settled it against a far wall, Mickey crashed out on it.\n\n\"Whew, I'm beat from that. Beer time?\" \n\n\"Gotta get to work,\" Colin said. \"But another time. If there's more and you need help, I'm off in four hours.\"\n\nFather and son walked back out with him. Lester looked uncomfortable, at least as uncomfortable as Colin felt around him. Flashes of Lester standing with him as they watched the EMTs closing the doors. Of Lester handing him a water bottle with trembling fingers. \n\nSuch little blips, but everything about that day was forever burned into Colin's skull, and he held little doubt it was the same for Lester too.\n\nThe sheriff said now, \"Pay you for your time?\"\n\n\"You know better than that. Happy to help. I'll swing by after work, see if you're still unloading.\"\n\n\"That's appreciated.\"\n\nMickey watched their exchange with a curious look, but said nothing, and soon Colin was off to work.\n\n* * *\n\n\"I'm telling you, it's the weirdest I've ever seen Dad act,\" Mickey said.\n\nWhile she talked with her brother over the phone, Julie sat in her crossover in the gym's meager parking lot. Not that she had much competition for spaces. The snow and cold hit hard that November, and she doubted many people would be out until it warmed up some. \n\n\"What do you mean?\"\n\n\"I don't know. It's like... like he was almost quiet around Colin.\"\n\n\"Dad's always quiet.\"\n\n\"Not like this. I mean, they were friendly, but...\"\n\n\"Look, Dad mentioned he was the one who responded to the call when Silje committed suicide. That had to be a crazy emotional time.\"\n\n\"That's not the first suicide Dad's dealt with. He's never acted like this.\"\n\n\"But Silje was young, you know?\"\n\n\"I'm just saying...\"\n\nJulie interrupted him, irritated. \"It's not my business. It's not your business. It's no one's business but Dad's and Colin's.\"\n\n\"You're right,\" Mickey said, but he sounded wounded. \"Yeah. Of course. Just... be careful.\"\n\n\"If Dad didn't trust him, he certainly wouldn't have let him into my house.\"\n\n\"Yeah. I guess. But still, you hear things, you know?\"\n\n\"Oh my God, not you too. It's Colin. He's still the same guy I went to school with. Just older. I'm going to hang up now.\" She hesitated. \"I love you. Don't be this way. Don't be a Pike Bridger.\"\n\n\"You're right. Of course you are. Shit, I'm sorry, Jules.\"\n\nThey said their goodbyes, and Julie put the phone in a sleeve in her gym bag. She hopped out, bracing against the sting of the sharp breeze. The door to the gym opened, and Colin popped out in a pair of gray sweatpants and a long-sleeved shirt. She was glad she wasn't the only one wincing at the cold.\n\n\"Jesus, you picked a day,\" he called as she approached.\n\n\"I know, right? Couldn't have come yesterday when it was forty.\"\n\nThey hurried inside and Colin shut the door before giving her another hug. It was just a quick, friendly thing, something Julie wouldn't have minded lasting a few minutes more.\n\nCalm down, girl.\n\n\"Good to see you again,\" he said.\n\n\"Thanks. And thank you again for helping at the new place.\"\n\n\"Settling in okay?\"\n\n\"Yes. It's so much bigger than my place in Chicago. Nice to have some room to sprawl out.\"\n\n\"That's great,\" Colin said. A pair of women came out through the interior doors, and he spoke to them for a moment, making sure they had a good workout and logging them out of the gym's systems. Julie took a spot near the wall until they were done and out the door again.\n\n\"I suppose I shouldn't stand around and gab with you all day. I wouldn't want you to get in trouble.\"\n\n\"Nah, my boss likes me. But let's get you hooked up with a membership and we can talk inside.\"\n\nThey did, and when she was signed up for a three-month contract, he showed her in. The gym used to be a car dealership in her youth, a small one, but she was a frequent guest whenever she made it home. She liked the grays and whites of the gym. It looked modern, and combined with the huge one-sided windows, it was as nice a place as any she went to in Chicago.\n\nTwo people rode ellipticals and another couple worked some free weights. Julie knew a couple of them, stopped to say a quick hello, and then went to change. When she came out, Colin was wiping down one of the treadmills.\n\nGod, but he lit her up. His shirt fit loose around his stomach but drew tight around his broad shoulders and chest. Yeah, maybe there was some attraction there because he was a wounded bird and that had always been on of Julie's types, but the physicality of him undeniably drew her in too.\n\nHe turned, saw her looking, and smiled faintly. She looked away in a hurry, blushing, and headed for another treadmill near him. Colin spent an awful long time making sure the one he was working on was squeaky clean, talking to Julie about harmless little things. Her new job at the hospital, new businesses in town, the exact definition of a Chicago dog, the Snow Drop, pithy things that kept them together without either of them committing to the obvious connection between them.\n\nJulie finally said, \"Look, Colin. About me nonstop bringing up Silje, I just wanted you to know I meant it only from a good place.\"\n\n\"And that's all I took it as,\" he said, smiling. \"Really, it's okay to talk about her. With you I feel like it's not like you're prying. Just reliving. Reminiscing.\"\n\nTouched, Julie said, \"Thanks. That's how I hoped it came across. All things considered, are you doing okay?\"\n\n\"I have good days and bad. Years on and I still wake up expecting her to be beside me. I don't think that's ever going away. How about you? We didn't get much of a chance to talk about your divorce.\"\n\nJulie slowed her treadmill and wiped at her forehead. It might be cold outside but she was already building up a sweat. \"You know, it's complicated. That's not me trying to dodge the question. A huge part of me, like you say, it's always going to kind of be Brandon's, but that's not necessarily healthy. He was verbally abusive the last couple years and our last big fight before I told him I wanted a divorce, I thought he was going to hit me.\"",
        "\"Oh my God, I'm sorry.\"\n\n\"Me too,\" Julie said, and with a grim smile, \"Even more sorry I didn't brain him.\"\n\n\"I'll bet. Jesus, what an asshole.\"\n\n\"It was a lot of paranoia on his end. He constantly had to check on me at work, make sure I was where I said I was. Really possessive stuff like that. Checking my phone for messages, calling me at random times when I was out with friends. One time he had a friend tail me to a club. I should have gotten out way sooner but you cling to that... that idea, you know? Of being together.\"\n\n\"How bad was the divorce?\"\n\n\"Like the actual proceedings?\"\n\n\"Yeah.\"\n\n\"Not as terrible as I expected,\" Julie said, slowing further as she chewed on that. \"But still kind of ugly. I always used to forgive him because he could be so sweet and normal for a while after a fight. He thought the divorce was going to be the same old same old, with me coming back after a couple weeks. But when I served him, he started coming apart at the seams little by little. He started seeing a therapist, but it was all performative. He would text me pictures of him at the therapist's office, then get mad when I wasn't swayed. Just to take one last swipe at me, in the end he told me he slept with my best friend. If he couldn't have me, he might as well try to destroy everything.\"\n\n\"Jeez. Just going to repeat again. Total asshole.\"\n\n\"Right?\"\n\nOne of the other clients came out of the showers, and Colin excused himself to see them off. Two more came in right then, and he checked them in. When Julie looked at her phone, she realized it was about that time of the day people would start getting off work and she was probably distracting Colin from his duties. She stopped her treadmill and started toweling herself off. When Colin came back, he stopped to gape for just a moment at her butt in profile to him, and Julie caught him.\n\n\"Uh, sorry,\" he said, looking away from her.\n\nJulie smiled. \"I'm not.\"\n\n\"Ah.\"\n\n\"Do you, ah... God, I feel like a teenager again with you. Um, do you want to go to dinner sometime?\" Julie asked, her cheeks flushed and not from the treadmill.\n\n\"Yeah. Sure.\" He blinked. \"What, ah... when, ah... should I, ah...?\"\n\nJulie giggled. \"This is my last day off for a week. Is tonight too soon?\"\n\n\"Yes! No. I mean...\" He rubbed his face. \"Yes. Tonight would be perfect.\"\n\n\"I'm glad I'm not the only flustered one here.\"\n\n* * *\n\nColin planned on taking Julie out, but the weather had other ideas, and the day's breeze became a howl they couldn't ignore. When he walked up Julie's driveway, she threw open the door and called to him, \"We are so not going out tonight.\"\n\n\"Oh. Okay. Well, we can do something next week.\"\n\nShe laughed. \"Not what I meant. Get in here.\"\n\nThe wind kicked up again right then and nearly yanked the door from her hand. Colin hurried to grab it, leaving his hand just above hers and the two of them intimately close. Despite the freezing wind, he stopped to drink Julie in. The spill of her blonde hair down across her shoulders and her back. Her jacket sweater buttoned just once under her breasts as if to force his eyes down to them, a trick he was definitely susceptible to. Her long legs in black leggings under a short skirt he wanted to explore. \n\nColin couldn't help himself. Still gripping the door, he wrapped his other hand around her back and kissed her. It was awkward, and too fast, and she reached out to grab his hand and pull the screen door closed behind him. They stepped away from the door just far enough he could kick it closed with his heel, and Colin chased her lips again, his big hands going to her back, her ass, her back again. She moaned against his lips as he squeezed her bottom and pushed her back towards the couch.\n\nThe perfume dabbed on her neck drew his lips to the soft hollows and she moaned again as her legs hit the couch and they fell onto it. His rough hand came around, slid under her sweater. He marveled at the softness of her, the ripeness, and he filled her lungs with an explosive breath of need. Her bra and the treasure underneath filled his palm and he leaned down to nuzzle the stretch of fabric between her slopes. She gripped his ears, tugged him back up, and he was hungering after her lips again, their tongues darting together, teasing.\n\nJulie pushed herself up just far enough to unbutton and tug at her sweater and he helped her. They got it off before he was gone again, staring down at her breasts pushed up high and proud by her bra. She bit her lip as he went for the front-facing clasp. His mouth dropped to her warm skin, his lips enveloping her thick nipple, sucking it.\n\n\"Colin,\" she moaned, and he slid down further.\n\n\"Lift your ass,\" he said, and she did. He pulled her skirt up and the leggings down, and his face was at her cunt through the fabric of her panties. She loved that, loved the pressure of his tongue sliding up and down her silk-covered slit, and she went electric when he added his thumb to the gesture, dragging back up until he reached her clit through the panties. He yanked them down and wasted no time sucking her nub into his mouth. \n\nHis hand shot up to her breast. Julie took it and brought it further still, hooking her fingers around two of his and sucking his digits into her mouth like it was his cock. He grunted in surprise and pleasure, and his hot breath against her nub felt so good.\n\nTwo of Colin's fingers, then three, slid into her pussy as he licked Julie's clit, fingering her wet depths fast. Her thighs pressed against his head, her feet digging into the cushions. She strained up with her hips, the pleasure too intense to last long.\n\n\"Oh fuck ohhh, Colin, ohhhhh!\"\n\nShe jolted back and forth, her orgasm hitting her as fast as she'd ever experienced. One of her feet kicked out and dropped to the floor, her thighs spreading wide for him now. He moved his lips down, yanking his fingers out to savor the taste of her, first from his fingers and then her wet depts, dragging his tongue through her again before settling in, tonguing her pussy as he rubbed her clit.\n\n\"Tell me how you like your clit played with,\" he said, his lips wet with her need.\n\n\"I'd say you're doing a p-pretty good job,\" Julie gasped, and dropped her head back as he laughed against her pussy. Even that felt good. She didn't know why and she didn't care. He chased her second orgasm as fast and as intent as the first. His fingers at her mouth came back down to her breast, then underneath her to her ass and he squeezed the toned flesh, grunting his pleasure against her. He pulled away long enough to suck that thumb into his mouth, and Julie wasn't sure why until his hand roamed back underneath her.\n\nHer eyes widened as his thumb brushed her bud, then slipped in to the knuckle. \"Oh FUCK!\" she cried out.\n\nHis licking bordered on out of control while he thumbed her ass and stroked his clit. His cock raged to be let loose, and he wanted to take her right there, right then. Not yet, not yet, he told himself, and that snarling, animalistic side of him told him to hurry it up then. So he did, sucking her clit, driving his tongue down lower, eating her out with hungry smacks.\n\nJulie twisted, bounced. She grabbed Colin's hair, yanked his head against her depths. Her thighs smacked together against his ears again, and she couldn't help herself, a high keen of need escaping her. \"Again, ooohh, mmmm, mmmm, ah huh!\"\n\nHer first orgasm had been fast, but her second hit like a bolt. Her back popped from the pleasure, her voice stilled, her hips bounced up and down. When she could breathe again, she gasped, \"Oh God, oh God, I need you I need you...\"\n\nHe shot up her body and kissed her hungrily as his thumb slid free of her ass. She wrapped herself around him, grinding up against his cock still in his slacks. He seemed plenty big, and that excited her into even more mindless humping -- and that's what it was, her body taking over, her need dominating any free will she might have had. They were like animals, barely aware there was still clothing between them.\n\nFinally Colin stood upright, and Julie shot up after him. They frantically yanked at his clothes until they were both nude, and she grabbed his hand to guide him to the bedroom. Colin watched her ass bounce ahead of him and couldn't wait that long. At the kitchen table he grabbed Julie and bent her down over it. His cock slapped against her ass and he pushed it downward against her wet slit.\n\n\"Fu-\" Julie started, then he plunged into her, his big cock stretching her around him. \"-UCK ME!\"\n\nHe did. He grabbed her hands and pinned them against her back just above her ass. Her breasts brushed the tabletop as he hammered into her from behind, unable to control himself. He was so big, filled her so well, her every pleasure center well and truly satisfied. Hair fell across her face and her eyes rolled up with the intense waves of pleasure. She had good sex before. This was beyond that. This was amazing sex. This was the kind of sex that left her mind a gibbering, delighted thing that could only think of their connection and the unstoppable sensations flooding her.\n\nJulie gurgled as she came again, this time a mere shadow of her other two, but her body was so overloaded with feelings it dragged on and on like that. He let go of one of her hands and grabbed a fistful of her hair, pulling her back up and firing his hips against hers as she looked over her shoulder, utterly sightless, mouth wide open. He clamped his lips down on her shoulder, sucked, and started fucking her again, harder, harder. \n\n\"I want this ass,\" Colin moaned.\n\n\"T-take it, it's yours, it's yours,\" Julie panted, and oh God, he was pulling out of her, his cock so slick, and he was spitting into his palm before rubbing it into her bud. Was he really going to...?\n\nHis cockhead pressed against her bud. Then in.\n\nIf she didn't like playing with anal toys, he would have never fit, but Julie loved to be filled there and was prepared -- at least for the first inch of him. That was all she could take that time. \"Right... about there...\" she gasped.\n\nGone to his lust as he was, Colin listened and rocked his hips just that deep, one hand on her ass, the other her waist. She sank back down as he pushed back and forth, her eyes closing. He filled her so much. So very much. This was the same Colin from high school?\n\nHe didn't last long, his hips bucking in hard, short strokes. He tried to ride the wave as long as he could, but finally he came, came, came. His first few shots filled Julie, then he yanked out, his warmth shooting across her ass, her back.\n\nHe stumbled a half foot backwards, his hand coming up to his forehead. \"Oh shit, Julie...\"\n\nJulie pushed herself upright and twisted to face Colin on shaky legs. She threw her arms around him, and he held her tight, both of them laughing breathlessly.\n\n\"So... uh... pasta sound all right for dinner?\" she asked.\n\n\"Dinner? Yeah. Right. Dinner.\"\n\nBut they never did eat that night.\n\n* * *\n\nThey settled into a pretty easy rhythm. Colin understood Julie's job required some long hours that could sometimes leak into even more, so instead of planning anything, they agreed they would fly solo for meals and she would pop over in the evenings if she got off early enough. That first week, the hospital hopped, largely thanks to a bunch of cold weather-related incidents. Julie came over twice, both for a quickie.\n\nTheir third night together, when Julie fell away from him, gasping and sweaty, he held her tight and said, \"So. I kind of have a confession we need to talk about, and probably four or five days ago.\"\n\n\"Oh yeah? What?\"\n\n\"Now, keep in mind, I've not seen any of them since you and I started hooking up, but I'm kind of... um...\"\n\n\"The town gigolo?\" she asked, arching an eyebrow.\n\nHe winced. \"Ah. You heard.\"\n\n\"My sister-in-law told me.\"\n\n\"Oh, that's right, Shannon is Amy's cousin.\"\n\n\"Uh huh.\"\n\n\"So how busted am I?\"\n\n\"How intent are you on sleeping with them again?\"\n\nFor an answer to that, he leaned over and grabbed his phone from the nightstand beside her. She took the opportunity to kiss his arm, and he laughed. He settled back with the phone and dialed a number, putting it on speaker.\n\nAmy's bubbly voice answered. \"Hey stud! I was just thinking about you.\"\n\nJulie snickered and clapped a hand to her mouth. Colin said quickly, \"Ah, hey, Amy. Um. I just wanted to say it's been really, really great, but...\"\n\n\"Who snagged you?\" Amy said, still cheerful. \"We have a pool going.\"\n\n\"Ah, Julie. Fisher.\"\n\n\"Aw, crap, I don't think anybody had her. Well... Colin, it's been a lot of fun. I'm going to miss you. And I take it that's her in the background trying not to laugh?\"\n\n\"It is,\" Julie said. \"Hi Amy. Long time no see.\"\n\n\"You too, hon. Take care of our man, okay? He's a special one, no matter what some bozos might think.\"\n\n\"I will,\" Julie said, and reached down to stroke Colin's spent cock.\n\n\"And hey, if you ever want a third...\"\n\n\"Uh,\" Colin said blankly. \"Um. Thanks. I think she's plenty to wear me out.\"\n\n\"Well, maybe as a special birthday present or something,\" Julie said and squeezed him tighter.\n\n\"Holy shit,\" Colin said. \"I'm going to, ah, hang up now. And have that image in my head forever.\"\n\nAmy laughed. \"See you, Colin. Thanks for the fun times.\"\n\n\"Thank you. It was genuinely my pleasure. You all helped me with a...\" He hesitated. \"A lot of dark times. So thanks. Really.\"\n\nWhen he hung up, he turned on Julie. \"Okay, that was evil.\"\n\n\"What?\" she said innocently. \"I really might like a treat on my birthday. Or your birthday. Or anybody's birthday, really.\" \n\nThey made a handful of calls like that, all of them surprisingly upbeat. Amy called ahead to a few, so the word was out.\n\n\"I guess we're official now,\" Julie said.\n\n\"I guess,\" Colin said, overemphasizing the mopiness in his voice.\n\n\"Uh, Colin, that was an awful lot of women. You've been tested, right?\"\n\n\"Oh, yeah. Sorry. I didn't explain. The two firm rules for everybody were that we all had to be tested regularly, and birth control, either them or me. Speaking of...\"\n\nShe chuckled. \"It's okay. I'm on the shot. I just reupped so if we're talking long-term commitments here, kids are going to have to wait a while.\" He fell silent at that, and Julie's chin hit her chest. \"Yeah. No good way of sneaking that one in there, huh?\"\n\nHe smiled faintly. \"It's okay. I just... haven't had to think long-term in... well, a long time.\"\n\n\"Did you and Silje ever want kids? Is that prying too much?\"\n\n\"No. I'm an open book to you.\" Colin considered that, thought about Julie's father coming up the path on the mountain that horrible day, and shook his head. \"Well... mostly an open book. There are a few things...\"\n\n\"It's okay,\" Julie said. \"Whatever it is, tell me when you're ready. Or not.\"\n\n\"Thank you. I appreciate that. But as for kids, Silje didn't want to risk children having her... her fugues. She was scared of her temper. No. Scared isn't big enough. It terrified her, what that could potentially mean to a child. I wanted kids with her but not if she didn't feel comfortable with it. And in the end, I think we made the best decision we could have.\"\n\n\"I wish you could have had some too. But you do? Want kids?\"\n\n\"Yeah.\" Colin cleared his throat. \"You?\"\n\n\"Yes. And this might scare you off, but maybe sooner rather than later.\"\n\nHe nodded. \"It doesn't scare me off. Whew. Let's keep the awkward big question train rolling. Did the first marriage scare you off from a second?\"\n\n\"No. I still want to believe in it, silly as it sounds. The one. True love. All the Hallmark movie stuff.\" She smiled faintly. \"God, I forgot about this, but Silje and I totally went to a Christmas party sleepover where we watched like... six of those damn Hallmark Christmas movies. She bawled. I did too.\"\n\n\"There wasn't a Christmas movie she didn't like. She loved the holidays. Romance too. So much so in fact...\" He kissed the top of Julie's head and slipped out of bed. \"Stay there. I want to show you something.\"\n\nJulie did, nestling into the pillows and watching his bare bottom as Colin walked out of the bedroom. A minute later, he came back with a paperback in hand. When he slid back into bed, he handed it over.\n\n\"It's not a secret, but the only people who really know about it are her parents, mine, and me.\"\n\nJulie looked at the cover. \"Love Heart Sick,\" by Mari Ross. She pressed a hand to her breast. \"Oh my God, she wrote this?\"\n\nColin nodded. \"She was working on it when we graduated and published it a month or two later. Writing helped focus her, calm her down back then. She couldn't write consistently, but when she did go off on a jag, she'd stay up all night right in front of her laptop. Page after page. She wrote a whole novel in a week.\"\n\nJulie flipped the book over and looked at the back matter. There was an author bio and beside it a picture of the backs of two people's heads. Colin and Silje's. Nothing that would identify her to a stranger, but to anyone who knew her, it was intimately her in subtle ways. The inside inscription choked her up.\n\n\"'To C, forever,'\" Julie whispered. \"How many did she write?\"\n\n\"Twenty-three that she published while she was alive. Ten more she finished and held back for me to...\" Colin's voice tightened and he cleared his throat. Julie took his hand and squeezed. \"She wanted me to publish one a year on her birthday.\" He chuckled but it held no joy. \"The books are how I've been making my living. She had a pretty good following, enough we bought this house and her bills didn't choke us. Still my guardian angel.\"\n\n\"That's beautiful,\" Julie said, and meant it. She put aside the book and nestled into him, kissing his chest, his chin. He cried, and she held him, and cried too. She thought about meeting Brendan at a mutual friend's party. Thought about the goofy, sweet man she fell in love with. About the happiest day of her life, dancing with the man who was supposed to be her forever.\n\nAbout the way lives twist and break.\n\nIt was not a good night, but it was the night both of them realized this was the start of something. When Colin hardened again, they made love for the first time, true, achingly sweet love, and Colin whispered Julie's name with such tenderness she cried again. For him. For Silje. For herself. For that oldest, most comfortable of emotion, the one that lifted them up, made them better, whether that was just for a while or eternity.\n\n* * *\n\nColin dug in the filing cabinet and pulled out what Silje called the Death and Taxes file, a joke he didn't understand. In it was all the information he would need to publish the novels, along with contact information for everybody on that end. That wasn't all though. In it were her assembled loose thoughts for his future, things she wrote down and stuffed away through their adulthood together. Her recipes for Colin's favorite foods. A list of the fifteen women in town she thought he should pursue first. A list of about fifty women that if he slept with them, she would come back and haunt him forever. The cover to a magazine, a vacation she wanted him to take one day because they talked about it for five minutes in a clinic waiting room while waiting to hear back on the innumerable tests in the last few years of her life. \n\nIn it too, laminated so Colin never lost it, were the instructions. Not for her death or for her funeral, but the instructions for his life. These he read nearly every night for two years after her death, and hadn't pulled them out since. Now he did, feeling a tremble deep in his soul as he thought about the truth of what he wanted to do. It felt like betrayal on some level, and he needed the assurance of Silje, even if it was just in written word.\n\nAs though her breathy, deep voice were speaking aloud in his ear, he read the words he needed to, right at the very top of the page.",
        "Love again. And again, if need be. I could only ever love you but I was broken that way. You have a bigger heart. Let me take up space in a corner of it, but let others rent it out too. Love someone, and show them who you are. Tell them about us, and then Colin, please, make your own memories. I want to hear them someday. This is the first thing I want for you.\n\nHe kissed the sheet and put it back in the file. There was no rush to tell Julie what was in his heart. She knew, and he suspected he knew what was in hers. But in order to get himself right, to get himself ready for the long, slow fall into loving her, he needed to do three things.\n\nAnd that day, just a couple weeks before the Snow Drop, he started in on them.\n\n* * *\n\nMartin and Eva Ebbesen lived in a small house on the ranch where they worked. He called first to make sure they were around. Eva picked up, surprised and pleased to hear from him. He explained he wanted to meet up, and they set up a time when both she and Martin would be home. \n\nIt wasn't a long drive, just ten miles beyond the bridge, but it took Colin a half hour, mostly because he stopped at the turnoff for their place and sat in his SUV, his knuckles white around the steering wheel.\n\nHe bumped into Silje's parents on occasion. It was a small town and they circled the same businesses. There was no bad blood between them. In one of her clear spells, Silje recorded a video for them to be delivered after she was gone, explaining as calmly as she could manage what was going to happen and why. Colin recorded it together with her. By then, her darker thoughts were taking larger and larger bites of her mind, and she didn't trust herself to talk about her plans for her death without deciding to just do it if she was alone. It broke Colin's heart in so many ways to hear her explain to her parents the way they'd been talking about it for a couple years, but he tried to stay strong for her.\n\nEven if Silje hadn't left her family the video, they probably would have understood. Their daughter's body failed her so suddenly and rapidly, in so many ways, and that wasn't counting Silje's mental afflictions. They understood the reality. Silje suffered too much. She fought as hard as anyone could have in her shoes, with as much dignity as she could manage for so long. That she would only want Colin with her in the end was understandable too. Their daughter loved him with all her heart and she would be most at peace with him.\n\nNow, Eva walked out when she saw his SUV approach. She was already fighting the quiver in her cheeks that meant she was about to cry, something her daughter inherited from her. Martin came out too after a moment. They looked good, fuller, maybe more vibrant than the last time Colin ran into them, or maybe that was him projecting his need for them to be okay.\n\nEva greeted him with a long hug, one neither of them wanted to break. In their age-old tradition, Colin and Martin shook hands before hugging. They led him inside, and on the kitchen table, still steaming hot, was homemade pizza. Colin laughed, and cried a little too. It was his old favorite of Eva's superb cooking, and he gladly sat for a bite with them. \n\nThey asked after each other, Colin making them go first. Ranch life was going well, though they were thinking more and more about retirement, which would probably mean a move into the town.\n\n\"We're too old for moving,\" Martin said.\n\nColin chuckled. \"You've got my help if you want it. I think I could wrangle Mickey Fisher into it too. We're sort of becoming friends.\"\n\n\"We heard about you and Julie Fisher,\" Eva said quietly. \"That's why you're here, isn't it?\"\n\nColin sighed. \"Yeah. We just started dating but it's obvious there's a connection there, something I want to explore. And I can't do that without...\" He swallowed. \"Without telling her what she needs to know about Silje and me.\"\n\nThere was no need to explain. Martin nodded and folded his trembling hands in front of him. \"Given the quality of her parents, I think she can handle it.\"\n\n\"You know you have our blessing,\" Eva said.\n\n\"That means the world to me,\" Colin said. \"I don't want you to think I don't love Silje any...\" His voice broke, and he couldn't finish the sentence. Eva came to him and hugged him tight. Her presence warmed him, and he slowly composed himself.\n\nMartin said, \"We would never assume that. You two... you were something incredibly beautiful together. She would want you to be happy.\"\n\n\"But Colin, promise us one thing,\" Eva said.\n\n\"What's that?\"\n\n\"I know how painful it must be but we'd love to see you more often. Lunch or something when we're in town. Or come back out any time.\"\n\n\"When you're ready,\" Martin added.\n\nColin took Eva's hand. \"I think I'm ready now.\"\n\n* * *\n\nLester was his next call, and this one was difficult too, though packed with stranger emotions. After the sheriff listened to Colin say he wanted to meet up and talk, he asked one question, \"What are you doing Thanksgiving morning?\"\n\n\"Nothing.\"\n\n\"Supposed to have a break in the weather. I was going to put up my Christmas decorations and I could use some help. Talk then?\"\n\n\"Sounds good,\" Colin said.\n\nIn the meantime, he and Julie kept up their sweet moment-to-moment relationship. She started staying the night more often, and he in turn started waking up earlier so they could have breakfast together, the one meal of the day they could count on. That touched her. Brendan was forever a late sleeper and she couldn't remember the last time they ate breakfast together. \n\nShe had the day off before Thanksgiving, the first really beautiful day in a while. They weren't about to waste it, and swung by the local bakery for breakfast paninis. They ate them in the nearby city park, watching the Chamber of Commerce use a bucket lift to decorate the trees and string up lights along the lamp poles. \n\n\"I've missed Christmas here,\" Julie said. \"People still care. It doesn't feel... mm...\"\n\n\"Obligatory.\"\n\n\"Exactly.\" Her phone buzzed, and she glanced at it. \"Ugh. Brendan.\"\n\n\"Everything okay?\"\n\n\"Oh yeah. Wants to know if I wound up with the potato masher. The fucking potato masher.\" She texted him back, reading aloud as she wrote. \"Probably. Lucky for you, they are widely available for all of five dollars. Best of luck.\"\n\nColin chuckled. She stuffed her phone away and he wrapped an arm around her. She nestled into him with a pleased sigh. One of the lights people nudged another and they blatantly stared.\n\n\"What's their problem?\" Julie asked.\n\n\"Me. Apart from trips to New Bainbridge for groceries and eventually the gym, I didn't come out of my house for a few years. I'm sure you've heard that.\"\n\n\"Something along those lines. Who could blame you?\"\n\n\"Thanks. But it's a small town. People get ideas in their head. It started as a joke. People would tell the wildest things about me. My mom got a lot of laughs about it. Still does. There were some pretty good ones. That I was a serial killer, that I was keeping someone locked up in my basement, that I thought I was turning into a vampire.\"\n\n\"Okay, that is pretty good,\" Julie said, grinning against him and kissing his chest.\n\n\"Right? But then it started to get meaner and meaner spirited, and people... well, you know people. They believe whatever they want to because it makes their lives more interesting. People started to spread darker, less funny stuff. The one I heard a dozen variations of, I was buying up guns and ammo for a big shooting. Another one, there was a guy down in Bowman, he raped this woman, and because his picture looked vaguely like mine, people assumed it was me. They could have looked up the news articles and read about it, but nope, they were convinced already. Lately, because I picked Cameron's kids up to drive them to the Fall Fest, people have been walking their kids a mile around me.\"\n\n\"Oh God, I'm sorry.\"\n\n\"Nah, don't be. But if you're with me, you'll have to get used to it.\"\n\nJulie pulled away from him. \"Screw that. Here's something straight out of Silje's playbook.\"\n\n\"What?\" Colin asked.\n\nShe stood up, and cupped her hands to her mouth. \"Hey! Assholes! You see something worth staring at?\"\n\nThe two men at least had the decency to finally look away, but Julie wasn't done. She stomped forward and in a true imitation of Silje, gripped her designer belt and hitched it up the way Colin's wife used to. \n\n\"Hey! I'm talking to you! What did you hear about him? Hm? Did you hear he sucks the blood out of chickens? Maybe that he had a dick twice your size? I don't know about the chickens, but the second one's wrong. It's three times as big. So get back to work and mind your business, dickheads!\"\n\n\"Jesus, Ms. Fisher, we're sorry,\" one of them said.\n\n\"Yeah, well... good. Spread the word. Stop treating Colin Shaw like he's something weird. That's my guy now and this town is going to start treating him like the great person he is. So apologize to him, not me.\"\n\n\"Uh. Sorry, Colin,\" the other one called.\n\nColin waved tightly, and Julie returned to him. She climbed onto him on the bench, one knee on either side of his hips, and leaned down to kiss him with plenty of tongue in front of everyone. Then she collapsed sideways and they both broke out into fits.\n\n\"How was that?\" Julie asked when she finally could speak.\n\n\"Silje to a T down to the make-out session.\"\n\nColin didn't sleep well that night, even with Julie tucked in beside him. He wasn't worried about the conversation about Silje with Lester, but he did want to ask for the man's blessing in pursuing something with his daughter and that, he wasn't sure if Lester would give him.\n\nBut that wasn't quite it, either. Talking to Lester always carried with it haunted dreams and the memories came sharply into focus again. Holding Silje on the mountain, crying over her, whispering to her long after she was gone. Twigs snapping, rocks kicked around behind them. The sheriff's only words at first and for a very long time were, \"Ah Jesus. Ah fuck.\" Then he came to the pair, and knelt. The two men stayed up there like that, Silje between them, the sheriff crying softly, the city and the river sprawled out below, the sight Silje last wanted to see, aside from Colin.\n\nNow.\n\nNow, Colin woke with Julie, and cooked her breakfast -- scrambled eggs and bagels, with a slice of tomato for her. She sensed his unease but said nothing about it, and when it came time for her to go to work, she kissed him on the cheek.\n\n\"See you for dinner tonight at my parents' place?\"\n\n\"Absolutely,\" Colin said. Assuming Lester didn't warn him away from his daughter.\n\nBut Lester didn't.\n\nThe sheriff was pulling out boxes onto the driveway when Colin stopped at his curb. It looked like he was organizing lights, and Colin joined him.\n\n\"Every year, I see the damn things go on a discount after Christmas and I think I need more. This year, what I don't use, I'm donating. You need some lights?\" the sheriff asked hopefully.\n\nHe didn't. Silje loved Christmas and Easter most of all the holidays thanks to the religious aspects. Those days were sacred to her and Colin had boxes of decorations in his attic and garage. \"Think I'm pretty well set, but you know, there was that fire out at the Brewster place. That might be a place to start.\"\n\n\"Hey, that's not bad advice.\"\n\nLester hooked up an extension cord to an outlet, and they started testing lights. Only half a set was dead, and with a bulb replacement, even that set worked. Lester dug out his ladder, and put it up at a corner of the house.\n\n\"So. You and Julie,\" he said, strapping on a tool belt with an industrial stapler and a big box of extra staples.\n\n\"Yeah. I have to tell you, I'm falling pretty hard for her.\"\n\n\"Julie seems fond of you too. My wife thought you two would hit it off when she came back.\"\n\nColin smiled. \"Karen's a kind woman.\"\n\n\"Best I've ever known, except the one you're dating.\" Lester reached out for the ladder but didn't start to climb. \"You're going to tell her. That's what you're here to let me know, right?\"\n\n\"Yeah.\"\n\nLester nodded and sighed. \"Don't know if that's good or bad.\"\n\n\"Me either, but she deserves the truth.\"\n\n\"She does.\" Lester started climbing.\n\n\"I was worried you might think this was a mistake.\"\n\n\"No, son. I think you and Silje were dealt an impossible hand and you played it out as best you could. There were no easy solutions. Still aren't. I think hiding what happened from Julie's probably worse than telling her the truth, but honestly, I don't know that I could, in your shoes. But I don't think you have anything to worry about. Julie's a terrific girl, and I know you're a good man.\"\n\n\"I'd like it to be something more than dating. Eventually.\"\n\nLester looked down at him, surprised. \"You're talking marriage already?\"\n\n\"At least what we want from a relationship, yeah.\"\n\n\"Huh. Grab me that strand of colored lights at the corner closest to the front door.\"\n\nColin did, and handed it up to the other man. \"I'm going to take my time about it. There's no rush. But I wanted to come to you first. Make sure you approved.\"\n\nLester chuckled. \"Isn't going to make much of a difference if I do or don't. That girl's going to make her own way. But I appreciate it anyways.\" He looked down at Colin. \"You've got it, by the way. If that hasn't been made clear. My blessing.\"\n\n\"Thanks.\"\n\n\"I've been thinking about asking you to apply to the office.\"\n\n\"As a deputy?\" Colin asked, surprised.\n\n\"Son, they see you hopping out of a marked car, they're going to piss their pants.\"\n\nColin laughed at that. \"A deputy. Huh.\"\n\n\"Not opposed to the idea?\"\n\n\"It's an interesting one.\"\n\n\"Well, give it some thought.\"\n\n* * *\n\nThree days before the Snow Drop, and they ambushed Julie. She came out to the parking lot after her shift, pulling her hood up when she saw them. Six women stood in a crescent at the back of her crossover.\n\n\"I've never been mugged by Christmas tin before,\" Julie said.\n\nAmy giggled. \"Some sweets for you, Colin, and your families.\"\n\nJulie strode forward and gave her a hug. \"How are you, Amy?\"\n\n\"Good. Missing your man. We all are.\"\n\nAllison chimed in. \"Don't worry, though, we're not here to try and win him back or anything. We just wanted to tell you we're glad it's you.\"\n\n\"He's one of the best men we've all known,\" Maria said. \"And when we heard about you yelling at those guys staring at him, we knew we had to come give you our support and our love.\"\n\n\"Well, I wanted to convince you to move so we could horn back in on him,\" another woman said, and they all chuckled. \"Be sweet to him.\"\n\n\"Always,\" Julie said. They loaded their tins of goodies into her crossover, and one by one gave her a hug. \"Thank you. All of you. Without you, I don't know that he would have been brave enough to start this thing with me.\"\n\n\"I think for you, he would have,\" Amy said, and there was a chorus of agreement.\n\n* * *\n\nTraffic for the Snow Drop overflowed into the residential areas, leaving it impossible to get better parking than their own houses. The pair walked together, and Julie took Colin's gloved hand in hers. He smiled down at her, and she thought there was the faintest hint of something pained to his eyes.\n\nHe was distracted ever since Thanksgiving. Julie chalked it up to memories of the holidays, which she totally understood. With Brendan, it wasn't the bad holidays that rang in her mind, but the good ones. Waking up early one Christmas morning with Brendan and running to grab one of her presents to them both, luxuriously warm fleece bottoms. They spent the morning cuddled up in bed, drinking hot cocoa and eating cheap Christmas chocolates her parents sent. There was a Thanksgiving too, one of the best of her life, when they took a week-long vacation to visit his family. That had been Brendan at his most lovable. No tension, no arguments, just a week of good food, good people, and good fun. His family stood with him in solidarity during the divorce proceedings, and that broke Julie's heart. She genuinely missed her in-laws and begrudged them nothing.\n\nIn any case, the holidays were a mixed bag for her too, but Julie let herself hope maybe with Colin she could form more good memories. \n\nCameron drove by on a four-wheeler, a Santa beard and a red stocking cap on. He stopped to give them candy canes from a pouch and a cheerful \"ho ho ho\" before moving on to do the same with a group of teenagers down the street. \n\n\"Was it you our senior year who played Santa in the school play with the elementary kids?\" Julie asked Colin.\n\nHe brightened. \"Yes! I forgot about that. The boots were too small so I wore black shoes and they had the Family and Consumer Sciences kids sew me some really basic big black socks that I wore over the bottom of the pants. Then the shoulders were so tight on the suit I tore it halfway through. I actually bought a Santa suit when I was... ohhh, maybe twenty? Still have it somewhere. Anyways, I played it up for my family and Silje's. It was fun.\"\n\n\"I bet you made a great Santa.\"\n\n\"I hope so. I should have dug that out for today.\"\n\n\"Ooh, what would you say to playing Santa for the patients at the hospital?\"\n\n\"Hey, yeah! You could be my Mrs. Claus.\" Colin winced. \"Or, you know, an elf or... ah, the Grinch.\"\n\n\"The Grinch, huh?\" Julie elbowed him. \"I'd love to be your Mrs. Claus.\"\n\nThey looked at each other, the deeper meaning clear, and Colin broke first. \"Julie, I...\"\n\nRinging bells behind them. They turned, and there were the \"reindeer,\" a team of horses decked out with red saddle blankets pulling along a sleigh. Another Santa, this one a local rancher, waved and slowed. His back seat was open, and he bellowed, \"Ho ho ho! Come ride with Santa!\"\n\nJulie turned to Colin, her eyebrow raised. They hurried to the sleigh. Colin held out a hand for Julie to take as she climbed in, and she blushed prettily at the gesture. He followed her in, and clapped Santa's shoulder. \"Thanks very much.\"\n\n\"Had to try to convince you two to get off the naaaaauuuughty list,\" Santa said, and Julie laughed so hard she nearly started crying.\n\nThey picked up another couple and Santa took them to the edge of the city park where much of the festival would take place. It extended all the way to Main Street, where more businesses were open later hours. Their first stop was for a bag of free popcorn from the librarian and her assistant in the outermost booth, and they walked arm in arm again as they snacked, Colin looking far more at ease. Like Julie, Colin liked to stop everywhere and sample little things or browse, and she felt infinitely more comfortable.\n\nWord seemed to have gotten out, and Colin didn't get quite the stares he would have just weeks ago. That wasn't to say people didn't whisper, but Julie was free with her glares and in general they were pretty decent to the gentle giant.\n\nSomewhere deep in the pack of vendors, live music started up, a rocking Christmas classic, and Julie bobbed to it, mumbling lyrics around a soft, delightfully chewy sugar cookie. Colin watched her and grinned, and she grinned back. \"I missed this so much,\" she said.\n\n\"Me too.\"\n\n\"Have you ever thought about selling her books here?\"\n\nThe idea made him blink. \"You know, I haven't. But that would be a hell of an idea.\"\n\n\"I'm sure everyone would love to know there's something of her out there.\"\n\n\"I think her parents would like that too,\" Colin said, musing it over. \"Next year, I'm going to have to look into it.\"\n\n\"Do up a booth, wear your suit...\"\n\n\"You could be my sexy pitchwoman if you have the time off.\"\n\n\"And if I didn't, you know my mom would sell with you in a heartbeat.\"\n\nThey spent the better part of two hours browsing and stuffing themselves on free cookies and snacks. Coin bought Julie a painting of a snowman, and she in turn bought him a lovely set of stoneware mugs to replace his old mismatched ones. Mickey and Shannon caught up to them halfway through, and their boys looked up at Colin with some trepidation until Cameron's kids saw him and ran to him to show off their new musical stuffed reindeer. They danced as the toys did, and Colin, without a moment of hesitation, danced with them. That simple moment endeared him to Mickey and Shannon, and soon their kids too.",
        "\"He's not so scary,\" Slater told Kittrick matter-of-factly, as though he hadn't been hiding just behind his father's leg when Colin said hello.\n\nMickey nudged Shannon. \"If you listen hard enough, you can hear Julie's ovaries actually cry out.\"\n\n\"Baby, MY ovaries are crying out.\"\n\nMickey raised an eyebrow. \"Want to duck away and let me take care of that?\"\n\nShannon laughed and kissed him. Whatever she whispered in his ear lit him up.\n\nMickey wasn't wrong. Watching Colin with the kids was just a cherry on top. Julie decided, assuming they were still a couple, that when her shot wore off, there wouldn't be a re-up. With Brendan, she always sought an excuse to put off children. With Colin, she looked at him and it was like her body said, \"Why yes, please, if he's on the menu, we'll have him.\"\n\nMaybe they could practice that night.\n\n* * *\n\nAfter a few stops to some local businesses and a sweep back through the festival for some purchases they wanted to make but not necessarily carry until they were on their way home, Colin and Julie walked back to her place. He hung her new painting on the wall for her as she supervised, which amounted to her eyeballing the level's bubble he put on the painting and saying, \"Mm, left. No, right. No, left. No, right,\" until Colin caught on and chased her to the couch. Julie was totally ready for a reenactment of their first time together, but when Colin kissed her, he hesitated and pulled back.\n\n\"Is it time to talk about whatever's on your mind?\" Julie asked.\n\nHe nodded, and swallowed hard. \"I'm sorry. I've been trying to figure out how to tell you this, and it's not been easy. If I've been distracted, it's not you. It's really not.\"\n\nShe sat upright and pulled him down next to her. They cuddled up together and Julie said quietly, \"Are we breaking up?\"\n\n\"No. But if you wanted to after I finish, I'd understand. It's what I've been bracing for.\"\n\n\"I'm not going anywhere.\"\n\n\"I hope not.\" He sighed. \"This is going to get dark.\"\n\n\"Oh. Silje.\"\n\n\"Yeah. You need to know before getting into a relationship with me where I'm coming from.\" He took a moment, trying to think how to best shape the words he needed to speak. \"Suicide wasn't an easy decision for her. It was something she thought about a lot at her lowest points, but it wasn't until the last few years of her life that we started to talk about it seriously. She developed a lot of personal health problems, things I won't go into unless you really want to know the details. Things that embarrassed her, things that hurt her a lot. Medication was difficult because of what she was already on and she wanted to be as clear-headed as she could be. That... wasn't always possible.\"\n\nJulie squeezed him tighter, and he kissed her shoulder before continuing. \"She started having spells where she wasn't really lucid. They started coming more and more frequently, until they dominated her life.\" Colin's voice tightened. \"That was the point when Silje decided... when she...\"\n\n\"Oh, Silje,\" Julie whispered.\n\n\"I should have...\" Colin's breath came out in a tremble. \"I should have listened sooner. I made her fight because of me and she was so tired. And finally, one day, I realized she wasn't asking me to help her. She was begging me. She made a video, one for her parents, one for your dad. We went up to the mountains, to our favorite... our favorite lookout. We called your father and explained to him what was going to happen. He tried to talk us out of it, or at least wait until he got there, but that wasn't what she wanted. I'm not going to tell you the details. That's not something you need to know. But...\"\n\nJulie hitched in a breath, and stared up at Colin.\n\nColin whispered, \"Julie. Silje... Silje was deeply religious.\" He pleaded with her with his eyes to understand, to forgive. \"She was terrified of suicide.\"\n\nIt took a moment to understand what Colin was saying. Then it slowly whispered through her. Silje didn't kill herself. Colin helped her.\n\n\"My God, Colin...\"\n\n\"I thought Lester would arrest me. Silje didn't think he would, and she was right. He came up there and sat with me for a long time. Then he called it in, and I carried her down the mountain. Your father and her family have kept it secret all this time. That's where the rumors about me started. That's where people got the idea I'm a monster.\"\n\n\"You're not, you're not, you're so very much not,\" she whispered, and took him in her arms, kissing him gently. There was no outburst of passion. There was only comfort, and love, and with her fingers stroking his face, she tried to give him as much warmth as she could.\n\n* * *\n\nBoth Colin and Lester took the morning shift on Christmas Day so the rest of the deputies could be with their families. In the early afternoon, they came through the door, deep in a conversation and Lester grinning about something.\n\nJulie finished taste-testing her mother's ham -- just a little overcooked, the way they all liked it -- and snatched up Mari from her bouncer. \"Daddy's here,\" she said, and Mari echoed her, \"Dada, hi, hi, Dada.\" Julie kissed her daughter's forehead as Colin came into the kitchen, grinning. He must have ducked home to change. Colin always liked to complain his uniform was too tight, but Julie and most the rest of the female population of Pike Bridge agreed it was deliciously right.\n\n\"There are my girls,\" he said, and swept Mari up before kissing Julie's cheek. Then he knelt lower and kissed her belly. Baby number two was their Thanksgiving surprise news, and they couldn't have been happier to receive it.\n\n\"You're blocking the ham,\" Lester grumbled, and Colin hastily stepped out of the way.\n\n\"What was I thinking? Hello to you too, gorgeous,\" Colin said, eyeing the pineapple glazed ham.\n\nAll this, Karen Fisher watched, amused and with so much warmth in her heart. From the moment she saw Colin at the Fall Festival what seemed like a lifetime ago, she knew in her heart he was the one for her daughter. That he was the one for her husband too in his own way was another blessing. He came into their lives like a puzzle piece they didn't know was missing.\n\nColin walked to her and kissed her cheek. \"And merry Christmas to you too, Mom.\"\n\n\"Merry Christmas, Colin.\""
    ],
    "authorname": "Ian_Snow",
    "tags": [
        "romance",
        "christmas",
        "thanksgiving",
        "christmas romance",
        "holiday romance",
        "anal",
        "hea",
        "small town romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/snow-drop"
}