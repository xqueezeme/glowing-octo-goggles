{
    "title": "Your Turn",
    "pages": [
        "\"Would you pass my wine, please?\"\n\n\"Sure. Shall I top it up...if I can do that without spilling it on the pillow?\"\n\n\"Why not? This is a lot better than that horrible bubbly stuff we had at the reception. What is it?\"\n\n\"It's what we wine connoisseurs call 'red'.\"\n\n\"Thanks, I'll make a note of that...I'm glad that you suggested we slip away.\"\n\n\"Weren't you worried that I was going to lure you to my cottage in the woods, inveigle you into my bed and have my way with you?\"\n\n\"Inveigle? Are you some kind of English major?\"\n\n\"Nah; I just like words, among other things.\"\n\n\"Such as?\"\n\n\"Well...sex, for one.\"\n\n\"Sex for one doesn't sound too interesting. I prefer sex for two...or more.\"\n\n\"You know what I mean!\"\n\n\"Doesn't everyone like sex?\"\n\n\"Some more than others, in my experience.\"\n\n\"I guess you're right. In that case I'm a 'some', not an 'other', as you've probably figured out already, seeing how easy I was to 'inveigle'.\"\n\n\"I think it was when you asked me to unhook the back of your bridesmaid's dress and suggested that we took the bottle of wine to bed with us that I began to suspect something. And now here you are, lying half naked across me, grinning like the cat that's hoping to get the cream.\"\n\n\"Nice...and what more could a man want?\"\n\n\"Well, having the other half naked would be a good start.\"\n\n\"All in good time. First let's talk some more about why we like sex.\"\n\n\"OK; you go first.\"\n\n\"What do you want to know?\"\n\n\"Tell me about the first time you came.\"\n\n\"Sex-for-one or with company?\"\n\n\"Company.\"\n\n\"Right, let me remember...Yes, it was when my favorite cousin Robin came to stay with us for the summer. We'd both just graduated from high school - Don't laugh; I was a late starter! - and my parents sent us off on a camping trip together. I think they just wanted us out of the house for a few days, to give them some peace. And under the circumstances, I bet they never imagined we'd get up to anything. Neither of us could drive so we loaded the camping gear onto our bikes and rode about 50 miles to a State Park that had some very remote campsites. It was late afternoon when we pitched our little two-person pup tent beside a creek way back in the woods and decided to go for a swim. Being shy back then, I went behind a bush to put on my bikini, but when I came out there was my cousin, standing stark naked, saying \"Are you crazy? No one's going to see us here.\"\n\n\"Well, I'd never actually seen a real live naked human being before, or not since I got interested, anyway. I'd seen pictures, of course, but a real live flesh-and-blood body, up close and personal? That just blew me away.\"\n\n\"What did you do?\"\n\n\"Just stood there gawping and looking stupid, I guess.\"\n\n\"And what did he do?\"\n\n\"Ahh...there's something I should tell you about Robin, but you must first promise not to be shocked.\"\n\n\"I promise.\"\n\n\"It's 'what did she do?' Robin's a girl.\"\n\n\"WHAT?!\"\n\n\"You promised!\"\n\n\"I'm not shocked...Surprised, maybe. Definitely intrigued and dying to hear more about her. But I need a few moments to re-imagine this whole story you're telling. I was envisioning this 18-year old hunk of gorgeous boy/manhood carrying you off into the woods, and now you tell me she's a girl.\"\n\n\"Are you nuts? My parents may be liberal but they're not crazy six ways to Sunday. They would never have let me go off camping with a boy.\"\n\n\"So what happened next? No, wait...What color were her eyes?\n\n\"You're a strange man, you know. Imagining a naked girl and you want to know the color of her eyes? They're brown, like mine. Why do you want to know?\"\n\n\"Well, if I know her eye color then I can guess her hair color and imagine how her bush looked nestling between her legs (which is lovely, by the way).\"\n\n\"It was, and I couldn't take my eyes off it. It was dark and curly and untrimmed, and I just wanted to bury my face between her legs and breathe in the scent of her cunt. But then she turned away, ran down to the creek, and jumped in with a shout and a ginormous splash. I thought 'What the hell?\", tore off my own swim suit and ran after her. The feeling of the cold water on my nipples and the lips of my pussy was absolutely fantastic; I can remember it to this day. I could see Robin's naked body through the water, indistinctly, of course, except when she floated on her back with her breasts and pussy just showing above the water. I never wanted that dip to end, not just because it felt so damn good but also because I didn't know what was going to happen next.\"\n\n\"What did you want to happen?\"\n\n\"I was so confused. I'd never been attracted to a girl before - not like that - but all I wanted was to touch her and kiss her and feel her hands all over me. Anyway, she climbed out of the water before me and I watched the muscles in her tight little ass as she scrambled up the bank and walked back towards the tent. I was so excited I could scarcely breathe. When I caught up with her she was lying in the sun on a blanket, with a towel across her hips, looking good enough to eat. I covered my confusion with a towel of my own and lay down beside her. We smiled at each other and I felt myself blushing as she began to examine my body. There was no pretense - she was blatantly drinking in my face, neck, shoulders, breasts, nipples and belly with her eyes. Then she simply pulled away the two towels that were covering our crotches and with them went the last pretense that this wasn't a sexual encounter. \"You're gorgeous\", she said. \"May I kiss you?\" She leant over me, her lips brushing the corner of my mouth as her breast brushed my arm, which sent shockwaves through my body. I felt a warm glow begin to build deep between my legs, unlike anything I had ever felt there before. She gently sucked my lower lip between hers before sliding the tip of her tongue into my mouth. I had never kissed or been kissed like this before and I had to have more. I reached behind her head, slipping my fingers through her thick hair, and pulled her lips against mine. Our tongues entwined and explored. When I gently bit her bottom lip she moaned:\n\n\"I'm think I'm getting wet; how about you?\"\n\n\"What do you mean?\"\n\n\"In your vagina, silly.\"\n\n\"I don't know, but it feels lovely.\"\n\n\"Have you ever...?\"\n\n\"What?\"\n\n\"You know...touched yourself there?\"\n\n\"Only every time I pee, silly.\"\n\n\"That's different. Haven't you ever rubbed your clitoris?\"\n\n\"Just on my bike saddle; I think that's why I like riding so much...Don't laugh!\"\n\n\"Well, it's even better with your finger, believe me. See if you're wet.\"\n\n\"Wow, yes! I didn't know that happened.\"\n\n\"It makes it easier when a man slides his prick into you.\"\n\n\"Have you ever...?\"\n\n\"No, not yet. All the boys I know are such jerks. But I like to think about it when I masturbate.\"\n\n\"How do you do that?\"\n\n\"I'll show you if you like.\"\n\n\"Kiss me again first and rub my breasts, please? That's absolute heaven...Now show me what you do.\"\n\n\"Well, I usually begin by rubbing and pinching my nipples which makes them hard and really turns me on, but I'm already way past that stage right now so I'll skip to the main event. I like to slide my finger between the inner lips on each side of my vagina...like this...and rub the sides of my clit...like this. Then I'll usually slip a fingertip into my vagina...like this...and move it in and out imagining it's some man's hard penis that he's sliding into me as he slowly fucks my brains out. Now I'm really wet - feel me.\"\n\n\"Can I really? Sure you don't mind?\"\n\n\"This is a lesson, remember? Besides, I'm dying to feel your fingers between my legs...Go on.\"\n\n\"Robin, you're sopping, even wetter than I was! I didn't know you could get that wet! And you feel wonderful.\"\n\n\"Don't stop what you're doing.\"\n\n\"Is this OK? Tell me what to do. Your lips are so soft and swollen.\"\n\n\"Slip a finger into me, please. And then slide it out and rub it over my clit. Again and again...please\"\n\n\"Robin...?\"\n\n\"What?\"\n\n\"Would you...do me too?\"\n\n\"I thought you'd never ask. Move your ass a bit closer. That's better; now I can reach you. God, you're certainly wet enough now, and swollen. And soft, and slippery, and tight.\"\n\n\"Robin, how come you're not as tight as I am, if we're both still virgins?\"\n\n\"Now you're going to embarrass me.\"\n\n\"You don't have to tell me if you don't want to.\"\n\n\"I want to tell you everything, pet. One day I was snooping - you know, after school when I was alone in the house - and I came across my mother's vibrator thingy.\"\n\n\"And?\"\n\n\"It seemed like too good an opportunity to waste, so I tried it out. At first I couldn't get it in - it was so big! - but after a while I guess I loosened up a bit and in it slid.\"\n\n\"Didn't it hurt?\"\n\n\"Just for a second, but by then I was so turned on that I came almost immediately. It wasn't my first orgasm, but it was by far the best. So I guess I took my own virginity.\"\n\n\"If you keep on doing that, I think I'm going to come.\"\n\n\"I'd love you to. I want to feel your tight little vagina squeeze my finger.\"\n\n\"Suck my nipples, please! Oh, that's...that's...that's...Ohhhh!\"\n\n\"Wow! You came, all right. Let me hold you and kiss you and rock you while you float back down to earth...\"\n\n\"God, that was absolutely, toe-curlingly, amazing! I think I'm beginning to see what all the fuss is about.\"\n\n\"Better than a bike saddle?\"\n\n\"Much, much better! I loved every second of what we just did. Can we do it again... and soon, please? And often? You know, when you sucked on my breasts and slid your gentle clever finger in and out of my cunt I thought I was going to die! I had this image running through my head of a long hard penis spreading my swollen pussy lips in order to go where no man has gone before.\"\n\n\"I've been thinking...You know what this makes us?\"\n\n\"Lesbians?\"\n\n\"Lesbians? No! We're kissing cousins!\"\n\n\"And then some,\" I said, smiling and rather relieved.\n\n\"Wow! That was quite a story! Didn't Robin ever come?\"\n\n\"Oh yes, did she ever! It was a bit later that evening, but that's another story. Right now I need to pee. May I...?\"\n\n\"Of course; it's through there, Scheherezade.\"\n\n* * *\n\n\"I hope you don't mind...I found this white T-shirt in your bathroom when I was peeing, and I had to get out of that bridesmaid's bra. It was killing me.\"\n\n\"Mind? One of my favorite fantasies is of a girl who looks just like you wearing nothing but a white T-shirt, with just a few wisps of her dark pubic hair showing beneath it.\"\n\n\"How do you know the color of my pubic hair, and what makes you think I'm not wearing panties?\"\n\n\"Well, I don't, but you have brown eyes like your cousin, so it's a pretty safe guess. Also, I thought I caught sight of a little dark triangle between your lovely legs when you climbed back onto the bed just now. And you're not so shy anymore, are you?\"\n\n\"What do you mean?\"\n\n\"You didn't even close the bathroom door.\"\n\n\"Actually, I was rather hoping you'd watch me.\"\n\n\"And there was I, trying to be discreet; next time I'll know better.\"\n\n\"Promise?\"\n\n\"Promise.\"\n\n\"All right; it's your turn.\"\n\n\"For what?\"\n\n\"A story, silly. I'm enjoying this.\"\n\n\"Right, well, let me think...It was early fall and my girlfriend and I and another couple - our best friends, in fact - had borrowed an isolated lakeshore cabin up in the north woods for the weekend.\"\n\n\"Then-girlfriend or now-girlfriend?\"\n\n\"Then. There is no now-girlfriend.\"\n\n\"Good. Maybe I'll apply.\"\n\n\"Well, I'm interviewing for the position right now.\"\n\n\"I could fill you in on my r\u00e9sum\u00e9...And you can fill me in later.\"\n\n\"I'm looking forward to it. Now, where was I?\"\n\n\"Heading for an isolated lakeshore cabin somewhere in the north woods. You know, if it wasn't for creeks and lakes and cabins, I'm not sure there would ever be any sex at all.\"\n\n\"We'd had dinner on the road, so it was already beginning to get dark by the time we had settled in. We were sitting on the deck looking out over the lake, enjoying the evening light and drinking some wine...\"\n\n\"More 'red'?\"\n\n\"...when my girlfriend Heather jumped up and said \"Let's all go skinny-dipping!\" She didn't wait to see how the rest of us would react; she just stripped off her T-shirt...\"\n\n\"White?\"\n\n\"...white T-shirt, dark blue linen shorts and black panties - she didn't wear a bra - and ran down to the water. We all knew each other pretty well - we'd been good friends for a couple of years by then - but we'd never done anything like this before. The other girl, Stephanie, shouted \"Wait for me!\", quickly stripped off all her clothes and followed. John and I were slower to react.\"\n\n\"John?\"\n\n\"Sorry, our friends were called John and Stephanie. Anyway, we just sat there looking at the naked backsides of two lovely women holding hands and gazing out over the lake. After a moment, John looked at me and asked:\n\n\"Think we should join them?\"\n\n\"I'm up for it if you are.\"\n\n\"Hmm...not quite yet, but I think I will be soon.\"\n\n\"Me too!\"\n\n\"So we quickly slipped out of our jeans, T-shirts and underpants. I'd often seen John in the showers after we'd played tennis, and I'd admired his tall thin body, his mat of dark pubic hair and - whenever I thought he wasn't looking - his long slender prick. Which I now noticed was already getting engorged although it was still hanging down between his legs.\"\n\n\"I love to watch a man's prick get hard. It's so...unambiguous. How about yours?\"\n\n\"Mine's not quite as long or as slender as John's...\"\n\n\"I wouldn't know.\"\n\n\"You'll see.\"\n\n\"Oh, good. When?\"\n\n\"Do you want me to go on with the story?\"\n\n\"Yes, but it's making me as horny as all get out. Wouldn't you feel more comfortable without your jeans?\"\n\n\"You mean, to fit the storyline?\"\n\n\"Exactly.\"\n\n\"OK, just a moment...I just need to ease the zipper down over my prick. There, that's better.\"\n\n\"Oh, wow! I didn't realize you weren't wearing underpants; where did you get that lovely thing?\"\n\n\"I grew it special.\"\n\n\"For me?\"\n\n\"Oh, I hope so.\"\n\n\"Go on with the story while I feast my eyes.\"\n\n\"OK. By the time we got down to the water the girls were already swimming, splashing one another and laughing. It was dusk and the light was fading but there always seems to be more light on the water, and I could see Stephanie quite clearly as she stood in the shallows, legs slightly apart, shaking her wet hair.\"\n\n\"Eye color?\"\n\n\"I already knew she was a blue-eyed blonde - not really my type - but now for the first time I saw her blonde bush nestling between her legs.\"\n\n\"Nestling again? Is that how you always think of women's pussy hair?\"\n\n\"I suppose it is. I once knew a girl who had long straight hair down there - very unusual - but most of the ones I've seen are curly and look just like little bird's nests. 'Nestling' just seems to be the right word,. Either that or 'snuggling', maybe.\"\n\n\"If you like, you can pull my T-shirt up a bit and see if my bird's nest snuggles or nestles.\"\n\n\"Hmm...Let's see. Ha! I was right about you removing your panties, and about the color of your hair. Now, lie on your back so I can get a proper look.\"\n\n\"There's nothing proper about the way you're looking! Is this OK?\"\n\n\"Lovely; now spread your legs just a little so I can really see. Dark, curly, untrimmed, definitely nestling, with maybe a hint of snuggling. And I can just see your pink inner pussy lips peeking out through the fur - gorgeous!\"\n\n\"Now who's feasting? Lie back and go on with the story.\"\n\n\"Must I? OK. Well, as we walked back hand-in-hand to the cabin, Heather - who had started all this - asked me quietly:\n\n\"Are you OK with this?\"\n\n\"Sure; I'm loving it!\"\n\n\"What if it goes further?\"\n\n\"What do you mean?\"\n\n\"Must I spell it out? I told you the other night about my fantasy of being fucked by John.\"\n\n\"As I recall, I told you about my fantasy of watching you do it. There's your answer.\"\n\n\"What do you think Steph would think?\"\n\n\"Not a clue, but she was quick enough to follow your lead and strip. Let's just play it by ear. Any one of us can call a halt if necessary.\"\n\n\"I hope no one does\" she said, turning her slippery wet naked body into mine, pulling me to her and kissing me like we hadn't kissed in weeks.\n\n\"When Heather and I got back to the cabin, John and Steph were lying on a wide futon in front of the fire we'd built earlier, sharing another bottle of wine. They both had towels wrapped towels around their waists, but Stephanie made no attempt to cover her lovely breasts.\"\n\n\"Sounds like Stephanie is going to be OK with whatever develops. Am I right?\"\n\n\"Wait and see! Steph smiled up at the two of us standing there naked, and said:\n\n\"Come grab a glass and lie down here with us.\"\n\n\"We'll just get some towels and dry off a bit first.\"\n\n\"Come sit here, Heather, and let me dry your back.\"\n\n\"Thanks, John. Where's that wine? Oh, that feels good. If I lie on my front would you dry the rest of me, please?\"\n\n\"Mmmm...Your ass feels as good as it looks.\"\n\n\"I'm still wet between my legs, John. Would you dry me all the way up between my cheeks?\"\n\n\"I'm wet between my legs too,\" Stephanie whispered to me. \"But that's for a different reason.\"\n\n\"Are you OK with this, Steph?\", I whispered.\n\n\"Yes, I am; John told me he's had this fantasy of fucking Heather for months now, and it doesn't bother me one bit. In fact, it turns me on so much I want to join in and help them. What about you?\"\n\n\"Well, I never expected anything like this, but I know Heather has dreamt about fucking John, and I must admit that I've fantasized about you, as well as watching the three of you make love together.\"\n\n\"Do you really think they're going to fuck?\"\n\n\"Frankly, I doubt anything could stop them. It's both their fantasies, although only you and I know that.\"\n\n\"Oh, good. In that case, I'm going to join them if that's OK with you. One thing, though.\"\n\n\"What's that?\"\n\n\"Will you promise to fuck me when they've finished?\"\n\n\"It would be my pleasure!\"\n\n\"Oh this is just too weird!\"\n\n\"What do you mean?\"\n\n\"Your fantasy about watching someone fuck your girlfriend. I've always wanted to watch another couple fuck, and the more I cared for them both the better it would be.\"\n\n\"Have you ever done it?\"\n\n\"Only in the dark on the beach, so I want to hear all the details. What happened next?\"\n\n\"Well, by this time John and Heather were kissing deeply, oblivious to Steph and me. Heather was lying on her back, the towel lost somewhere, and John was rubbing her nipples, which I knew she loved. Heather's nipples were quite large and when she was excited they got as hard as little berries.\"\n\n\"Were they as big as mine?\"\n\n\"I've never seen yours; how would I know?\"\n\n\"Well, you can feel them through my T-shirt if you like, and tell me.\"\n\n\"My T-shirt. All right, yes, yours are about as big as Heather's, and they feel pretty hard right now. I can roll them between my finger and thumb.\"\n\n\"I'm so turned on that I think I could come just with you doing what you're doing. I've got this glow between my legs that's spreading down to my knees and up to my breasts, and - I'm sorry - my cunt is dripping onto your bedspread.\"",
        "\"That's all right. Would you like to fuck now?\"\n\n\"Yes...no...Go on with the story, please, but promise me we can fuck eventually.\"\n\n\"I promise. So where were we?\"\n\n\"You'd just promised to fuck Stephanie like you just promised to fuck me.\"\n\n\"Right, so Steph slid across and put her arms around John from behind, which startled him, until she kissed the back of his neck and at the same time reached down to take hold of his prick. What she found there was Heather's hand already wrapped around and stroking it. There was a brief moment when I watched them all reassessing the situation, and then John turned his head and kissed Steph, like he was welcoming her to the party. I caught Heather's eye and she smiled and gave a little shrug. Her fingers joined with Steph's as they both stroked John's penis. He lay on his back on the futon with a girl on each side and his long erect prick sticking up towards the ceiling.\"\n\n\"How big was it?\"\n\n\"A lot bigger than when I'd seen it as we stripped on the deck, and bigger than it had ever been in the showers after tennis. But men try pretty hard not to get erections when they're showering together.\"\n\n\"Was it as big as yours?\"\n\n\"Well, I already told you it was slender; mine is thicker but his is maybe an inch or two longer. We never actually compared them side-by-side, you know. At least, not when we were fully erect. I guess you would need to ask Heather and Stephanie to get a true comparison.\"\n\n\"So he really fucked Heather with you there watching?\"\n\n\"I'm coming to that.\"\n\n\"So am I!\"\n\n\"Smartass! Where was I?\"\n\n\"John was lying on his back with Heather and Steph both stroking his cock.\"\n\n\"Right. I watched as Heather used her fingertip to catch a drop of pearly-white fluid that had just oozed from the tip of John's penis. She smiled at me as she brought it to her mouth and, without ever breaking eye contact, licked it off.\"\n\n\"God! How did that make you feel?\"\n\n\"I almost - almost - came on the spot. I was watching the most erotic and arousing scene I had ever imagined. Do you want me to go on?\"\n\n\"I can hardly breathe, but don't you dare stop.\"\n\n\"So then Heather turned around, straddling John and putting her cunt just a few inches above his face. She leant over and kissed Stephanie, who had also watched her lick the drop of pre-come, and then Heather took the tip of John's prick into her mouth.\"\n\n\"Was he circumcised?\"\n\n\"You do want details, don't you? No, he wasn't, but the head of his erect prick was already partly protruding from the folds of his foreskin. Does it make a difference?\"\n\n\"What do you mean?\"\n\n\"Does it feel different to be fucked if the man is circumcised or uncircumcised?\"\n\n\"A little different, for me at least. I don't know about other women; it's not something I've ever talked about. But you know that ridge that runs round the head of your prick? Well, when that slips into the mouth of my vagina it stretches it a little and then sort of plops further in. That's the best way I can describe it. And I love that plop; it's like the point of no return and it's hugely erotic for me. Well, that doesn't happen with an uncircumcised prick. Then the foreskin sort of eases the head-ridge into the mouth of my vagina, and there's less of a plop. I guess that's what it's for, the foreskin, I mean. The other difference is that if I'm not completely wet, willing, and ready to be fucked, then taking in an uncircumcised prick is easier; the foreskin sort of lubricates the entry, like I said.\"\n\n\"I can't imagine you not being wet and willing.\"\n\n\"Well, not all men are as relaxed and patient as you are. Anyway, here's uncircumcised John with Heather straddling his face and sucking his prick. What was Steph doing while all this was going on?\"\n\n\"She was resting her head on John's belly like a pillow, and with her mouth right under Heather's breasts she began to suck her nipples, first one, then the other. She told me later that this was the first time she'd ever touched another woman like this - not like you! - and she had been dreaming of this moment for years.\"\n\n\"So how did Heather react?\"\n\n\"Well, I knew this wasn't her first time with another woman. She'd told me she and her college roommate usually slept together when they didn't have boyfriends around. In fact, she'd often tell me about it when we were fucking because she knew how much it turned me on to hear all the graphic details. So I think Steph was taking her back to her college memories. I watched as she slid her hand down over Steph's belly, over her blonde bush and began to rub her clit. Steph's legs were pointing straight towards me so I had a grandstand view as Heather spread Steph's outer and inner pussy lips and worked her fingers into her open cunt. John had his tongue buried deep in Heather's vagina as she ground her cunt against his mouth...What are you doing?\"\n\n\"Just rubbing myself a little; your story has got me so damn excited. Do you mind?\"\n\n\"Would you like some help?\"\n\n\"Not yet; just tell me what happened next.\"\n\n\"Heather moved her ass off John's mouth, turned, and lowered herself gently onto Steph's tongue instead, and for several minutes the two girls were focused entirely on each other and their mutual pleasures. Then Steph moved her head just enough and guided John's prick into Heather's pussy. If there had ever been any doubt about how she felt, this simple act dispelled it, as Heather sat back with a faraway smile on her face and drove her hips down onto John's hard penis.\"\n\n\"God, John! That's the longest dick I've ever felt; I think you've just touched the end of my vagina. No man's ever done that before.\"\n\n\"Yes...I'm buried in you right up to the hilt; it feels wonderful!\"\n\n\"Steph...\"\n\n\"What is it, love?\n\n\"Would you mind sucking my nipples and rubbing my clit while John fucks me?\"\n\n\"It'd be my pleasure; that's what I'm here for.\"\n\n\"I've never been so turned on in my life, listening to this! My nipples are as hard as your lovely prick, my bush is wet through, my pussy lips are swollen beyond belief, and my cunt is dripping its juices all over your bed sheets!\n\n\"Do you want to fuck yet?\"\n\n\"YES!...no...I don't know. This feels so fucking good, I want it to last forever.\"\n\n\"Then I'd better go on...After a while, Heather lay down on John's chest and deftly rolled him over on top of her. Then she spread her legs and raised her hips as John rhythmically drove his long prick again and again into her eager cunt. I knew her well and could tell that she was close to coming when her breathing became ragged and a flush spread over her breasts.\n\n\"Fuck me, John! Fuck me, fuck me, fuck me! Oh Steph! Ohh John! Ohhh...!\"\n\n\"God, Heather! It feels like your vagina is milking my prick. May I come inside you?\"\n\n\"No, please...not yet...make me come like that again first? That was amazing; it felt like you opened me up. Does he do that to you, Steph?\"\"\n\n\"I can't take him all the way in like you just did, but even so he gives me the most wonderful orgasms. They make me feel I've been turned inside out. And he can stay hard like forever.\"\n\n\"Oh, Steph...Thank you for letting John fuck me! This is a dream come true. His prick feels so damn good, so hot and so hard and...I'm going to come again! Rub me...have me...take me...FUCK ME!\"\n\n\"I love watching you come, Heather. It's a dream come true for all of us, but if I don't get fucked soon I'm going to burst.\"\n\n\"Do you want John? He hasn't come yet and I suppose I could lend him to you if I have to.\"\n\n\"No, I've already got a date, thanks. You keep John for a while longer.\"\n\n\"Oh good, because I think I need to come again, and if you two start fucking I know I'm going to. Go to him, he's lovely, and I'll bet you can take his prick all the way in.\"\n\n\"Were you ready to fuck Steph by this point?\"\n\n\"More than. I told you I'd almost come when Heather licked that drop off John's prick, and when she began to come I felt her orgasms as if they were my own. So I was ready to begin sucking Steph's lovely nipples, licking her clit which Heather had just been rubbing and sucking, and sliding my prick into her vagina. We fucked like there was no tomorrow, both of us completely aroused by what Heather and John were doing right beside us. John continued his slow, rhythmic thrusts in and out of Heather's vagina and I soon found myself synchronizing with him. Fucking to another man's rhythm was amazing; as the girls gasped and moaned in unison, it felt like the four of us were engaged in one single act of love. Almost predictably, we all came within seconds of one another, Heather for about the sixth time, the rest of us in one great communal release of sexual desire.\"\n\n\"John, your prick is absolutely amazing! My cunt is going to be so sore tomorrow; Steph, you'll have to do the honors for both of us.\"\n\n\"My pleasure! It's all part of my master plan!\"\n\n\"John, however can you control yourself like that? When Heather comes on my prick I almost always follow suit immediately. I'd love to have your control.\"\n\n\"Well, I used to have trouble, coming before I really wanted to, so I started thinking about other things when I needed to slow myself down.\"\n\n\"Such as?\"\n\n\"Bus timetables, mostly.\"\n\n\"Bus timetables!?\"\n\n\"Yes, I was in college and rode a lot of buses at that time. But that had two drawbacks: first, it took some of the pleasure out of it for me. Fucking lasted longer but it didn't feel so good, which wasn't a good trade-off.\"\n\n\"What was the other drawback?\"\n\n\"Well...every time I needed to read a bus timetable I would get hard! That still happens, but luckily I don't ride buses so much any more. And after a while I found I could forget about the timetables, although I must confess that this evening's group sex tested my self control to the limit.\"\n\n\"What we just did wasn't group sex; it was a gorgeous four-way love-athon!\"\n\n* * *\n\n\"Love-athon...I like that. Is that what we're having?\"\n\n\"S'what it feels like to me.\"\n\n\"Oh good, but then why is your prick wilting?\"\n\n\"It's my turn to need to pee.\"\n\n\"May I come and watch? I've never seen a guy pee before.\"\n\n\"You're weird...and kinky. but you may, I guess.\"\n\n\"Wow...what a stream! Please...May I hold it? It's like a firehose. Oh, that's such a turn-on! Do some more! It's so warm and lovely!...Am I really kinky?\"\n\n\"Well, let's just say that you're the first girl who's been interested in doing that with me.\"\n\n\"The others don't know what they're missing.\"\n\n\"When I was a kid, my friends and I would use our pee to write rude words in the snow.\n\n\"What did you write?\"\n\n\"All the four-letter words we knew. That's about all our young bladders could manage. Learning cursive made it easier, of course. Before that we had to stop and start if we wanted to write the F's and the K's properly: Kegel exercises for kids! Anyway, Scheherezade, it's your turn again now. Tell me another of your 1001 stories.\"\n\n\"Would you take off your T-shirt then? I want to lie on your belly and watch your soft prick get hard again while I tell you my next story.\"\n\n\"It won't stay soft for long, but I'll take my shirt off if you'll do the same.\"\n\n\"Deal.\"\n\n\"You look absolutely lovely naked! Lie down on me and rest your head here. OK, you can begin now.\"\n\n\"What would you like to hear?\"\n\n\"You already told me about your first time. How about your last?\"\n\n\"As in 'latest', I hope you mean.\"\n\n\"I do.\"\n\n\"Funny you should ask; that was only a couple of weeks ago and it involved someone you already know.\"\n\n\"Not favorite cousin Robin again?\"\n\n\"Right first time! We'd stayed in touch through the years but we hadn't seen one another in a while. I knew she'd been super busy, because she was getting married in a couple of weeks.\"\n\n\"Robin, getting married?\"\n\n\"Yes, to a really cute guy called David. He works in wildlife management, so I think he'll be perfect for Robin. We've hung out together a few times, so I'm getting to know him.\"\n\n\"How did you feel about her getting married?\"\n\n\"You mean, was I jealous? How could I be? Sure, I've been missing her like crazy - not to mention the things we occasionally did together - but I loved to see her so happy.\n\nShe called to invite me to a party for my birthday, saying she had a very special present for me. I'd enjoyed her 'special presents' before, so I was surprised and excited when I arrived at the house that she and David had bought together.\"\n\n\"Cuz! It is wonderful to see you. Come on in!\"\n\n\"Hi Robin. It's been ages - too bloody long! How have you been?\"\n\n\"Missing you, love. Oh, have I missed you! Come into the bedroom and help me get undressed while we talk. Would you unzip me? Thanks. And undo me? Lovely. Any chance you'd like to peel off my panties like you always used to? Oh, I just love getting naked around you!\"\n\n\"You've trimmed your bush! Let me see...that looks really cute.\"\n\n\"Yes, David asked me to shave it like that. He calls it his landing strip and says it gives him something to aim at! Actually, I got my hairdresser to do it, believe it or not.\"\n\n\"How did that happen?\"\n\n\"Well, he'd just finished cutting my hair one day when he said, out of the blue, \"Is there anything else I can do for mademoiselle?\"\n\n\"Mademoiselle?\"\n\n\"Yes, he likes to pretend he's French, although I know for a fact he grew up in New Jersey and has never even been to France. But I just love the way he calls me 'mademoiselle', except when he forgets what nationality he's pretending to be and calls me 'se\u00f1orita' by mistake. So I asked him what he had in mind. And he said \"I am - how do you say? - a tonsorial expert - an artiste! - in women's hair, wherever it may grow. Sometimes you want it, sometimes you do not. I take care of that! Legs, face, armpits (please you will excuse the expression, mademoiselle). You name it, I cut it!\" By this time I was laughing so hard that I blurted out \"Pussy hair too?\" And he said 'Wherever it may grow, Monsieur Jacques will take care of it for you.\"\n\n\"Monsieur Jacques?\"\n\n\"Yes, would you believe it? His real name is Jack, Jack Wineman, but he calls himself 'Monsieur Jacques Bordeaux, tonsorial artiste'! Like I said, David had been on at me for some time to trim my bush down to a landing strip for him so I asked:\n\n\"Do you know the latest style in landing strips?\"\n\n\"Mademoiselle, you are talking to Jacques Bordeaux, tonsorial artiste. There is nothing about landing strips that I do not know. Do you want Charles de Gaulle, Heathrow, New York (either La Guardia or JFK), or perhaps not a commercial airport? A desert strip, perhaps?\"\n\n\"You're telling me there's a fashion in pubic hair styles?\"\n\n\"Mais oui, naturellement! And in case you change your mind about a landing strip, I also have my own line in bush topiary: plants, animals, birds, celebrities, you name it, I cut it! Sometime I must show you my pussy pussy! My own design! For a conservative mademoiselle, I did a George W. Bush bush! And once, I had this very young mademoiselle who came to me almost as soon as she had any hair down there to trim. She asked me to give her an arrow...pointing upwards, would you believe! Between you and me,I think she was anticipating trouble with a boyfriend. And then on her eighteenth birthday she came to me and said: \"Monsieur Jacques, I think it's time you made my arrow point the other way.\" It took some time to grow out, of course, but she told me later that both arrows had worked perfectly. 'Non-verbal communication', she said it was.\"\n\n\"I was laughing so hard I almost wet myself. He took me to a little back room and had me strip naked and lie down so he could survey the scene. After a lot of tutting and head-shaking and lip-pursing, he said:\n\n\"Too small for Heathrow or JFK, alas; you could never handle a jumbo...but I think I can see a jungle strip lurking between your legs - No, I have it! You shall have an Australian bush bush strip!\". He trimmed it - with a straight razor, no less - and now I have to go back every few weeks so he can clear the undergrowth from around the runway. It's really quite sexy, actually; you should try it.\"\n\n\"Did you let him...you know?\"\n\n\"I don't think he was interested in me beyond the hair, and anyway, he's such a damn good hairdresser that I didn't want to mess that up and risk losing him.\"\n\n\"Oh Robin, why do you always make me feel so good?\"\n\n\"'Cos, cuz, I love you and like cradling you in my arms, like this.\"\n\n\"Do we have any time before the other guests arrive?\"\n\n\"Um...I may have misled you a little there, sweetie.\"\n\n\"You've been misleading me all my life, pet. Please don't stop now.\"\n\n\"OK, then; here's the deal: we're the party: just you and me, although David may join us later.\"\n\n\"Then why did I get all dressed up?\"\n\n\"I can help you with that...come here. God, I've missed seeing your breasts. They just keep getting more and more beautiful. Lie down here beside me and let me slip off your panties.\"\n\n\"Yes, please! When did we last...?\n\n\"I don't know, but it's been way too long.\"\n\n\"It must have been that time we went to the beach and stayed in that pokey little B&amp;B.\"\n\n\"Yes, and do you remember that guy we picked up the first evening...\"\n\n\"You picked up...\"\n\n\"...and tried to take back to our room...?\"\n\n\"...and the old biddy who ran the place wouldn't even let him in the door?\"\n\n\"I think she was jealous!\"\n\n\"And so we had to find somewhere else and ended up fucking on the beach, under the stars?\"\n\n\"And God, could he fuck! I can't remember how many times I came that night.\"\n\n\"I can...you came four times the first time he fucked you - I was watching and counting, and you were so loud there wasn't much room for any doubt - and then five more times when he fucked you again after he'd fucked me.\"\n\n\"Oh, yes...That was so damn good. What was his name?\"\n\n\"I don't think we ever knew.\"\n\n\"Do you remember asking him if he'd been to fucking school?\"\n\n\"Yes! And he said \"Do you take me for an idiot? Of course I've been to fucking school!\".\"\n\n\"How many times do you think he came?\"\n\n\"Well, I know he came when he was fucking me, because I felt his semen spurting against the top of my vagina - God, I love that feeling! - but it didn't seem to slow him down a bit.\"\n\n\"And I felt him come a couple of times too, but he stayed hard anyway.\"\n\n\"Do you think he has any idea how good he is?\n\n\"I doubt it. I don't think men compare notes like we do.\"\n\n\"More fools them; you can learn so much! With our combined experience, we could teach Fucking 101.\"\n\n\"And some advanced courses, too! In fact, we should open a school!\"\n\n\"Yes!...a fucking school!\"\n\n\"Happy days...Come over here and let me kiss you. Oh, your cunt tastes as good as ever.\"\n\n\"Move your ass so I can nuzzle your bush bush at the same time. Robin...?\"\n\n\"Mmmm...?\"\n\n\"Is this my 'special present'?\"\n\n\"Just part of it, love, but I'm worried you may not like the other part, and maybe it's more of a favor to me than a present; I don't know.\"\n\n\"What is it, for goodness sake?\"\n\n\"I'm feeling too shy to tell you...\"\n\n\"You, shy?\"\n\n\"Well, here goes, then...As soon as I knew I was getting really serious about him, I told David about you and me; I hope you don't mind.\"",
        "\"Of course not. How did he take it?\"\n\n\"He was cool.\"\n\n\"Cool distant or cool comfortable?\"\n\n\"Comfortable, thank goodness. In fact, I think it turned him on because several times since then he's asked me to fill in more details. But I think he realized I'd been missing you recently. I felt I had to, to be fair to him. Anyway, a few days ago, more or less out of the blue, he suggested that you and I should get together before the wedding. 'Think of it as a wedding present from me, if you like', he said, and I think we both knew what he was talking about.\"\n\n\"Robin, your fianc\u00e9 is something else!\"\n\n\"Isn't he just? I think he must believe in personal freedom or something.\"\n\n\"So here we are in bed together, and it's lovely, but I still don't see where the other half of the special whatever-it-is fits in.\"\n\n\"Well...His generosity started me wondering what I could give him as a wedding present in return.\"\n\n\"No, let me guess...\"\n\n\"You always know what I'm thinking! I know it's a lot to ask pet, but...what do you think?\"\n\n\"God, Robin! Is there nothing you don't want us to experience together?\"\n\n\"I've seen the way he looks at you when he thinks I'm not watching...and the way you look at him, for that matter. I know you're attracted to one another.\"\n\n\"But you also know I'd never do anything to hurt you, sweetheart.\"\n\n\"I know you wouldn't, and I trust David that way too. But don't you see? You're the two people I love most in all the world, so what's more natural than wanting you to make love together? I'd feel like I was giving you to each other...well...lending, maybe.\"\n\n\"But won't you feel jealous?\"\n\n\"I don't seem to do the jealousy thing, at least not with you and David. It would feel so good to me - you're the perfect wedding present in return for the one he gave me.\"\n\n\"Well...you introduced me to sex, remember? And you taught me most of what I know. And I've never been able to refuse you anything so...Yes, I would love to fuck your darling fianc\u00e9. Who knew that wedding presents had this much fun? Thank you!\"\n\n\"No! Thank you, thank you, thank you! Come here and fuck me, you gorgeous woman person!\"\n\n\"Oh Robin, how I wish I could really fuck you!\"\n\n\"Me too, pet, and maybe I've got just the thing in the nightstand. Here, let me strap this over your pretty little ass. I've never been on the receiving end before, but the short end is lovely, believe me. Slip it into your vagina...there...and now you can fuck me six ways to Sunday, as you like to say.\"\n\n\"God, is this what it feels like to have an erection? It's so empowering - I could rule the world if I had one of these!\"\n\n\"The history of civilization in a nutshell. Now, are you going to fuck me or aren't you?\"\n\n\"Oh, yes indeed; spread your legs...and let me slide this gently into you. How's that?\"\n\n\"Ahh...wonderful! Now lie down on top of me and let me hold your naked ass. Kiss me, you fool, and start to fuck me slowly...Rub your tits against me!...Oh! I can feel your clit slip-sliding against mine!...Now gradually build it up - that's right! - and a little more, and harder...harder, and...Oh God! What could possibly feel better than this? Why...have...we...never...done...this...before? Screw me, fuck me, drive that prick into my cunt...Yes, more, more, more please! Ohmigod!...OHmigod!...OHMIGOD!......That was the best fucking orgasm I've had in ages. Thank you, love of my life.\"\n\n\"You're most welcome, dear cuz, welcome and well come. I love to make love with you, however we do it. Help me unstrap this lovely appendage and put it away somewhere safe. Next time, you can be the fucker and I'll be the fuckee!\n\n* * *\n\n\"Wow! Did you come?\"\n\n\"Not right then; I was so focused on fucking Robin - something I had dreamt of doing for years - and giving her pleasure that I forgot about myself. It was amazing how that thing made me feel in charge, in a way I'd never felt before, with Robin or anyone else, for that matter. And there was nothing gentle about the way I fucked her. I got carried away and just needed to take her, possess her. In retrospect, I think maybe I was a little jealous of her and David, and I wanted to punish her for hurting me. But a little later I did come - and in a way I'd never come before.\"\n\n\"Tell on, Scheherezade.\"\n\n\"Well, just then we heard the front door open.\"\n\n\"David? Did he find you in bed together?\"\n\n\"He did...\"\n\n\"That sounds like David now.\"\n\n\"I'd better slip some clothes on, then.\"\n\n\"No, just pull the sheet up over us. He knew you were coming over. 'We're in here, honey!'\"\n\n\"Hi! I hope I'm not interrupting anything...\"\n\n\"Not at all; I was just collecting that wedding present you gave me. You remember my cousin?\"\n\n\"Of course. Hello again, Robin's favorite cousin. You two look lovely, lying side-by-side in bed together with that sheet pulled up to your chins. I bet you're both naked under there. It reminds me a little of one of those photos you took, Robin.\"\n\n\"Photos...what photos? Robin! You didn't! \"\n\n\"Oops!\"\n\n\"Oh cuz, I'm sorry. It was when I first told David about you and me. I was afraid he might not get the full picture, so to make sure there there couldn't possibly be any misunderstanding, I showed him those photos we took of each other the last time we were together; you know, in that B&amp;B at the beach.\"\n\n\"I know which photos you mean!\"\n\n\"Are you cross with me?\"\n\n\"Well, it takes some getting used to...the thought that David here has seen parts of me that even I haven't seen!\"\n\n\"And very nice parts they are too.\"\n\n\"And thank you kindly, sir. All right, deep breaths...I certainly can't fight it so I might as well join it...I guess I can handle it...Tell me David, which photo of me did you like best?\"\n\n\"Hmm...I think the one that Robin took from behind you where you're on your hands and knees, naked, looking back between your open legs.\"\n\n\"God! That one doesn't leave anything to the imagination!\"\n\n\"No. I wanted to have it as my screensaver, but Robin vetoed that idea.\"\n\n\"You bet I did! Some of your wildlife colleagues would go even wilder if they saw that!\"\n\n\"And I really liked the ones of the two of you together, you know...making love.\"\n\n\"Oh, we had fun taking those! Do you remember, cuz? The camera had this automatic feature with a 10-second delay, so we'd set it up, and then jump into bed and...well, you've seen the positions we got ourselves into.\"\n\n\"Which is your favorite, Robin?\"\n\n\"It's the one I took of of you lying between my legs looking up at me, your face glistening with my pussy juice and a few wisps of my hair between your lips.\"\n\n\"You never showed me that one!\"\n\n\"Sorry, David. Some things are just too personal for sharing. But talking of positions, we're lying here stark naked under this flimsy sheet, while you're standing there with all your clothes on. What is wrong with this picture?\"\n\n\"OK, I'll strip for you, but for each article of clothing I shed you must lower the sheet by six inches. What do you say?\"\n\n\"What do we say, cuz? Should we negotiate with him? Four inches, maybe?\"\n\n\"How about eight inches, or twelve? Remember, Robin, I haven't come yet!\"\n\n\"God, I'm sorry, love. Here am I basking in post-orgasmic bliss, and you're still horny as all get-out. David, we must take care of that!\"\n\n\"Umm...did you just mean what I think you meant?\"\n\n\"Yes, David. My wedding present to you is the same as yours was to me. It's the first and maybe the last time that you'll get to fuck another woman with my blessing, so make the most of it!\"\n\n\"And how does your favorite cousin feel about this?\"\n\n\"Strip and I'll show you!...Oh, nice! That'll be eight inches, then.\"\n\n\"You really think so?\"\n\n\"You wish! She's talking about the sheet, you idiot. Come and lie here between us. He's all yours, cuz. Be gentle with him.\"\n\n\"Gentle was the last thing I was feeling! Robin knew I fancied David, but I knew he was hers and I felt that he'd taken part of her away from me. I wanted to fuck him and punish him at the same time. I felt all these conflicting feelings boiling up inside me, and when he turned away from Robin and leant across towards me I didn't know whether to kiss him or bite him. Instead I had him roll over onto his front so he could look at Robin lying naked beside him. Then I knelt over his thighs and began to push my pussy against his ass. It was the last thing he expected and gave me an incredible feeling of power. Robin and he gazed into each other's eyes as I ground my clit hard against the base of his spine. Robin caught my eye, raised her eyebrows and gestured towards the nightstand. I understood what she had in mind, but I shook my head. This was all about my pleasure, not David's. I leant forward along his back, rubbing my nipples on his shoulder blades and bit his neck hard. He felt my cunt rubbing his buttocks and he began to whimper quietly. I dug my fingernails into his shoulders and pulled my body fiercely against his back. It was hard to get the sensations I was seeking, but after a while of humping his ass I felt my orgasm building. Reaching around between his hip and the mattress, I wrapped my fingers round the head of his stiff prick. A few moments later I felt it pulsate as he came, filling my hand with his semen. Immediately, my own orgasm took me, sudden and fierce and sharp, like a Spring thunderstorm. Breathless, I rolled off David's back into Robin's open arms.\n\n\"Wow! What got into you? You were like a hellcat there.\"\n\n\"Conflicted feelings, I guess. I think I may be a little jealous after all.\"\n\n\"Oh sweetie, you know that he'll never come between us\"\n\n\"Robin, he just did.\"\n\n* * *\n\n\"I've been watching as the drips ooze from the tip of your prick and make a little puddle on your belly. Now I'm going to lick them all up and then kiss you.\"\n\n\"Mmm...You taste salty, or is it me?\"\n\n\"It's you. Here, let me give you my mouthful of wine to wash it down with.\"\n\n\"You're outrageous!\"\n\n\"Oh, I hope so. Anyway, it's your turn next.\"\n\n\"OK; what do you want to hear?\"\n\n\"Umm...Have you ever...you know...done it with another man?\"\n\n\"What would you think if I had?\"\n\n\"I'd be shocked...shocked, I tell you! But I might get over it if you told me about it in graphic detail.\"\n\n\"Well, in that case...when I was much, much younger - just past the age of consent, in fact - I had this huge crush on a cousin who's about a year older than me. It was my first and only boyhood crush but I still love to remember it.\n\n\"Boy cousin?\"\n\n\"Boy cousin, called Paul. You're not the only person with a favorite cousin, you know.\"\n\n\"Did Paul know you had a crush on him?\"\n\n\"No, I don't think he had a clue. So one day we were hanging out at his parents' house while they were away. It was summer and we'd spent the afternoon getting about a zillion bales of hay into the barn. We were hot and tired and sweaty so we decided to cool off in their pool. We swam in the buff whenever we could get away with it, which we couldn't when his Mom was around because she'd always tell us to put on our swimsuits. She said it was for the sake of the neighbors, but Paul's family lived on a farm and the nearest neighbors were miles away, which always made me wonder... Anyway, first we swam laps together and then I watched him dive for a bit. He was on the diving team at our high school and had this great body, all muscles and sinews and stuff.\"\n\n\"And what about his naughty bits?\"\n\n\"You are incorrigible!\n\n\"S'right; no one's ever corriged me!\"\n\n\"Ha! Well, if you must know...His prick was nothing unusual - it looked rather like mine, in fact - but it was his, and I thought it was just beautiful.\"\n\n\"Hmm...I know what you mean.\"\n\n\"Anyway, eventually he climbed out of the pool and came over to lie face down in the sun right next to me on one of those big pool chair things. I was a bit disappointed because I loved to look at his prick, but I had to make do with looking at his ass instead. I was usually shy around him - after all, he was a whole year older than me - but on this occasion, for some reason, I blurted out:\n\n\"Paul, have you ever seen a girl naked?\"\n\n\"Sure I have.\"\n\n\"Would you...you know, tell me about it?\"\n\n\"OK, squirt. What do you want to know?\"\n\n\"Well, who was it?\"\n\n\"My big sister, actually.\"\n\n\"Sarah? But she's hot; all the guys at school think so.\"\n\n\"She's OK, I guess.\"\n\n\"So how did it happen? Did you see her in the shower, or do you guys swim together like this?\"\n\n\"Yes, we do sometimes, just when Mom's not here. She'd have a fit if she knew, so don't ever let on, OK?\n\n\"Of course I won't.\"\n\n\"I'm not sure I should tell you this but...there was this one time recently when I got to see her really well.\"\n\n\"How come?\"\n\n\"Well, she had this algebra homework that was due the next day, and math has never been her strong suit, so she said she'd do anything I asked if I gave her some help with it. I love algebra - it's just like a mystery story, once you know the rules - and I've always been pretty good at mysteries, so I whispered to her so our parents couldn't hear:\n\n\"OK, it's a deal if you'll let me see you naked.\"\n\n\"Why? I thought you had a girlfriend. Haven't you seen her body?\"\n\n\"That's just it. We haven't gone beyond kissing yet, and when - or if - we ever do, I want to know what to expect. I've never seen a naked girl up close, except in pictures, of course.\"\n\n\"Oh you poor darling. No wonder you have to jerk off every night.\"\n\n\"How do you know I do that?\"\n\n\"I can hear you in the next room, brother mine, and listening to you come makes me so horny that then I have to come too. All right, if you help me with this algebra you can look at my body all you want...under two conditions. One: absolutely no touching; and two: you must show me yours in return.\"\n\n\"Deal.\"\n\n\"So I helped her with her homework and we agreed that the next time the parental units were away we'd complete the bargain. It seemed like an age until our parents at last said they were going away for the weekend...if we were sure we'd be OK without them. Would we ever! Almost as soon as they left, Sarah and I ran up to her room and locked the door.\n\n\"All right, baby brother. Are you're ready for Show and Tell? I'm going to lie down on my bed and you can look at me all you want. But remember: no touching! Where shall I start?\"\n\n\"Thanks, sis. I really appreciate this! Would you take off your T-shirt and let me see your breasts? Oh, you're not wearing a bra - I thought as much! God, they're lovely! And your nipples are so big and brown...\"\n\n\"And you're making them get hard, staring at them like that.\"\n\n\"Does that happen?\"\n\n\"You bet it does - just watch! - and that makes them super-sensitive to touching.\"\n\n\"How so?\"\n\n\"Well, if I roll my nipples between my fingers...like this...I get excited and start to feel a warm glow between my legs.\"\n\n\"I'm getting more than a glow.\"\n\n\"I can see you are! Don't try to hide it.\"\n\n\"OK, but now would you undo your jeans and slip them over your hips? Oh, I really like those panties.\"\n\n\"You should; they're the ones you gave me last Christmas, and they're my favorite pair.\"\n\n\"I don't think the parents approved...\"\n\n\"No; the look on Mom's face when I paraded round the living room in them!\"\n\n\"And Dad's! Is that your bush that I can see through them, between your legs?\"\n\n\"It is. Here, I'll slip them off so you can get a proper look if you like. There, that's better. Now I'm completely naked, just like you wanted, and it's time I gave you the Grand Tour. As you can see, girls like me have this little triangle of hair between our legs which hides most of what's there. That's why some of us shave it off. But if I pull my outer pussy lips apart...like this...you can see these pink inner pussy lips and my clitoris...here...affectionately known as my clit by those who know her well.\"\n\n\"That little nub? But it's so small!\"\n\n\"Never confuse size with power. On a good day, when I rub it, it just blows me away.\"\n\n\"You mean, you come...like I do?\"\n\n\"Well, I don't know if it feels the same, but I can certainly have an orgasm when I rub my clit and think of...stuff.\"\n\n\"What sort of stuff?\"\n\n\"Never you mind! Have you seen enough of my clit?\"\n\n\"Never! It's lovely and so innocent-looking. I can't imagine it being able to make you come.\"\n\n\"Believe me, it can!\"\n\n\"Move your legs further apart so I can see the rest of you. What's that called?\"\n\n\"Well, the whole thing is called my vulva, but I like to call it my cunt. There's something really earthy and Anglo-Saxony about the sound of that word. My clit's at the front - here - surrounded by my inner and outer pussy lips. The outer lips are covered in my pubic hair, or my bush as you would call it, which tends to spread up my belly if I don't keep it trimmed. Otherwise it starts to show above my bikini. Some girls at school have shaved off all their pussy hair, but I don't like the look of that; it makes them look about ten years old. Are you still looking? If I hold the backs of my inner lips apart...like this...you can see the entrance to my vagina.\"\n\n\"Wow! And that's where a man puts his prick when he's fucking you?\"\n\n\"Well, it hasn't happened yet, but when it does, he will - at least, I hope so.\"\n\n\"Put your knees up and hold your lips apart again for me, please; you're gorgeous and sexy and exciting and perfect I want to remember every detail for the rest of my life.\"\n\n\"God, she let you look at her clit and her cunt and everything?\"\n\n\"I think she enjoyed it as much as I did. We were both as excited as hell. Finally, she rolled over onto her tummy, raised her ass in the air, pulled apart her own ass cheeks and said \"And for my final number...this is my asshole\".\"\n\n\"Good grief! How did you feel then?\"\n\n\"I thought I'd died and gone to heaven, I was so excited.\"\n\n\"What happened next?\"\n\n\"She hadn't forgotten our bargain, of course, so when I'd finished trying to memorize every nook and cranny of her gorgeous body she asked me to take off my shirt, pull down my jeans, and slip off my underpants. My prick was rock-hard, of course, and sticking out like flagpole. I don't think she'd ever seen an erection before because she said:\n\n\"What the hell is that?\"\n\n\"That's my penis, sister dear, and that's what you have done to it.\"\n\n\"When I've seen it before when we're swimming, it's never looked like that.\"\n\n\"When I get aroused - like now - it grows, gets hard and sticks up like this. It's so that if I were going to fuck you, I could slide it into your vagina.\"\n\n\"Well, you're not, so don't even think about it.\"\n\n\"Hey! I thought you said no touching!\"\n\n\"Yes, I did...but you didn't. And I just want to see how it feels, OK? It's sort of hard and soft at the same time, and it's so warm! How does it feel when I curl my hand around it and rub it like this?\"\n\n\"Absolutely fucking wonderful! Keep on doing that, and you'll make me come!\"\n\n\"Then what happens?\"\n\n\"Then my prick gets extra hard and sends this warm rush between my legs, down to my knees and up my spine to my brain. My prick throbs hard several times and my sperm comes spurting out of that little hole in the end. Unless you're very careful it splashes up all over your face and in your hair and on your tits, and...Stop!\"",
        "\"But I don't want to! I want to watch you come! Please come for me!\"\n\n\"Oh, shit!\"\n\n\"The images in my head of Sarah lying naked with her hand wrapped around Paul's prick as he came on her had got me really excited, and my young penis was stiff and pointing skyward. Even so, I was completely taken by surprise by what happened next. Paul had been lying on his front as he told me his story, trying to hide his own erection, I guess. Suddenly he grabbed my shoulder, rolled on top of me, and pushed his erect prick between my legs. I was so surprised and thrilled that I reacted without thinking and grabbed his ass to pull him closer to me. I could feel his buttocks tensing repeatedly as he pushed his prick between my legs. It didn't take him long. He buried his face on my shoulder, gave a loud moan, and released a warm wet sticky flood of semen splashing between my legs and against my butt. As he did so, I could feel his warm prick throbbing between my legs, just as he had described to Sarah.\"\n\n\"Did he try to...?\n\n\"What?\"\n\nYou know, put his prick...\"\n\n\"God no! We were both too naive to even think about that.\"\n\n\"So what happened then?\"\n\n\"The poor guy was immediately covered in confusion. He said \"God, please forgive me! I'm so sorry; I don't know what came over me!\" As for me, I was enjoying the feeling of his prick wilting between my legs as his semen ran down around my ass. I told him that it was fine, not to worry, nothing had changed between us. Eventually he calmed down.\"\n\n\"Did you come?\"\n\n\"Paul was so upset by what had happened that it rather killed the mood. But my balls ached like crazy until I could limp off home to masturbate.\"\n\n* * *\n\n\"You know...I feel like I'm getting to know these people; I wish you'd tell me more about them. Did you ever do anything like that again?\"\n\n\"Well, Sarah and I shed our virginities together about a year later. Would you like to hear about that?\"\n\n\"God, yes please!\"\n\n\"You're getting two for the price of one, you realize? I'll expect your next story to be something very special.\"\n\n\"OK, but please go on.\"\n\n\"I don't think either of us planned it that way; it just sort of happened. We were hanging out together in her room at her parents' house, the same room where she and Paul had first got naked together, in fact. We were alone in the house, drinking some left-over wine from a dinner party that her folks had given the night before. It was the first time I'd tasted decent wine and I was really getting into it. After a bit, Sarah began to ask me probing questions about Paul. I think she knew I'd had a crush on him because she asked 'Did I really like him?' 'Did we often swim together naked?' 'Did I know if he was still a virgin?' 'What did I think of his body?' And finally, 'Had we ever made out together?' It must have been the wine, because I then told her everything Paul had told me about the evening he looked at her body, and how he then lay on top of me and came between my legs. Although she herself had already watched him come - helped him, in fact - my description of our encounter seemed to really arouse her. She whispered in my ear 'Will you show me what he did with you, please?' We still had all our clothes on so I told her it wouldn't be the same, and to my surprise she responded by standing up in front of me as I lay on her bed and simply stripping off all her clothes, panties included. Then she lay back down beside me.\"\n\n\"What are you waiting for? Go ahead and show me what Paul did.\"\n\n\"At that stage in my life I was still very inexperienced. I'd had a few fumbling dates but I was still wet behind the ears when it came to real sex with real girls. I really didn't know what to do, but whatever it was, I knew I had to be naked to do it, so I followed her example and stripped. Now we were lying side by side on her bed, both completely naked. I remembered what Paul had said about girls' nipples being sensitive, so I began to rub hers gently between my fingers. She seemed to like it because she closed her eyes, moaned a little, and then reached her hand down between her legs. I had not dared to look at her down there for fear of coming on the spot, but as her hand snuck between her pussy lips and she began to gently rub herself I had to look at what she had shown to Paul so brazenly a year before.\n\n\"Would you like to look at my cunt, just like he did? Then kiss me first. Hey, your penis looks just like Paul's, and it's as hard as his was.\"\n\n\"Yes, I know.\"\n\n\"Are they all the same? Yours are the only two I've seen.\"\n\n\"No, they come in all shapes and sizes.\"\n\n\"Yours looks just about right to me.\"\n\n\"Think so? I've always wished it were larger.\"\n\n\"No, then I'd be scared it would hurt me. Now, show me what Paul and you did.\"\n\n\"OK then, spread your legs apart. We were talking about you and he suddenly rolled on top of me...like this...and pushed his prick right up between my legs...like this.\"\n\n\"That's too far back. Here, let me guide it in - slowly, please, slowly! Ahhh...Ouch!...That's something Paul couldn't give you. Now can we just lie still for a bit?\"\n\n\"Oh, fuck! That is the most wonderful feeling I have ever felt in my entire life!\"\n\n\"Lie still!\"\n\n\"Are you OK? Did I hurt you?\"\n\n\"Yes, I am, and no, not much, but please let me catch my breath. Are you all the way in?\"\n\n\"Not yet; about halfway, maybe.\"\n\n\"Jesus, you're stretching me, but I think it's going to feel really good in a moment or two. Just don't move yet.\"\n\n\"I'm trying not to, but it's damn hard!\"\n\n\"I know it is; I can feel it.\"\n\n\"Very funny!\"\n\n\"OK, push in a little more now...Oh that's amazing! Are you all the way in yet?\"\n\n\"Almost...there!\"\n\n\"God, you fill me up! Lie still again...please.\"\n\n\"I have this irresistible urge to start thrusting into you and feeling my prick sliding in and out of your vagina.\"\n\n\"Would you suck my nipples...? It's all right, you won't get any milk out, if that's what you're worried about. I've tried it myself, and it feels really good. That's right, gently, and now the other one. Your prick's beginning to feel really good inside me, too. I think I'm relaxing.\"\n\n\"Can I start to move yet?\"\n\n\"Slowly, then. Oh, yes...that feels good!\n\n\"To me too. Shall I go faster?\"\n\n\"Yes, and a little deeper! I'll spread my legs apart further.\"\n\n\"And lift up your knees; then I can get further into you.\"\n\n\"Christ! So you can! That took my breath away.\"\n\n\"I love your hands on my ass, the way you pull me in.\"\n\n\"I want you in me, all the way in! I want to feel your balls against my ass! Fuck me deeply, please!\n\n\"I think I'm going to come. Should I pull out of you?\"\n\n\"No! You mustn't!\"\n\n\"Which? Come or pull out?\"\n\n\"Either! Just keep on what you're doing...please!\"\n\n\"I can't hold on much longer!\"\n\n\"Just a few more thrusts...and suck my nipples. I'm almost there...Ahhh!\"\n\n\"Ohgod ohgod ohgod ohgod ohhhh!\"\n\n\"Hold me, just hold me, please. That was extraordinary...\"\n\n\"I came and came and came. It was wonderful.\"\n\n\"I know, I can feel your semen seeping out of me as your prick is shrinking.\"\n\n\"I'm slipping out of you. Here, rest your head on my shoulder; I think I'm falling asleep, Sarah. Sarah...?\"\n\n* * *\n\n\"You know, this isn't how I imagined I'd lose my virginity. I thought it would be to a much older man, dark and dashing and terrifically romantic, a real Latin lover. In my fantasy he was going to take me out on his yacht, probably somewhere in the Mediterranean or maybe it was the Caribbean. It's dusk and there's a gentle breeze filling the sail as I sit back with his arms around me in the cockpit, watching the crescent moon rise over the horizon.\"\n\n\"If it's dusk and there's a crescent moon, it's setting, not rising.\"\n\n\"Shut UP! This is my fantasy and I can have the fucking moon do whatever I want it to, all right?\"\n\n\"Sorry...go on.\"\n\n\"I lean back against his manly chest as he slides his hand under my blouse and gently cups my naked breasts in his palm. I tilt my head back and we kiss, long and deeply, with mounting passion. Then there's a bit that's not clear in my mind, but somehow he's now naked and begging me to let him make a woman of me. He's so earnest and appealing - despite being years older than me - that I feel I must take pity on him and give in to his desires. He promises to be gentle but it's not necessary. I'm already wet and open and longing to feel his throbbing manhood stretching my virgin vagina. When at last he slides into me there's no resistance and nothing between us. I raise my hips to meet his and he takes me with long, slow, gentle strokes, his rhythm gradually building to a crashing crescendo. He calls out my name as he comes, his cries mingling with the sound of the seagulls wheeling overhead.\"\n\n\"Right...\"\n\n\"But it was much better this way, losing my virginity to a really good friend. I can't thank you enough. Was it OK for you?\n\n\"What do you think?\"\n\n\"Did I do all right? Am I a good lay?\"\n\n\"I'll remember what we've just done for the rest of my life.\"\n\n\"And I'll be able to think 'I lost my virginity to my brother's lover'. I'm going to enjoy remembering that. Can we do it again yet?\"\n\n* * *\n\n\"I don't think it was my name she shouted when she came the second time.\"\n\n\"I bet I can guess whose it was. Where are she and Paul now?\"\n\n\"When their parents died they jointly inherited the family farm. Neither of them could afford to buy the other one out and they didn't want to sell, so they decided to share it. I still see them every now and then; they seem very happy.\"\n\n\"You know, I envy Sarah, losing her cherry with you; I wish I had. Instead I went the Latin lover route.\"\n\n\"How was it?\"\n\n\"He was a selfish s.o.b. - I got the pain; he got the pleasure.\"\n\n\"You mean he got the goldmine while you got the shaft?\"\n\n\"Exactly!\"\n\n* * *\n\n\"You've told me about your first and your last; what's left?\"\n\n\"My longest...\"\n\n\"My shortest...\"\n\n\"My most memorable...\"\n\n\"My most forgettable...\"\n\n\"My funniest...\"\n\n\"How about your best?\"\n\n\"Reality or fantasy?\"\n\n\"You choose, and I'll guess which it is.\"\n\n\"Oh, this'll be fun...Here goes...I'm lying in bed with a really attractive and interesting guy that I just met. We sort of picked each other up at a party and seemed to hit it off right away. We went back to his place, opened a bottle of wine, and were soon in his bed - by my suggestion, in fact. From there, I expected things to take their normal course: some nice foreplay, deep kissing, maybe he'd go down on me if I got lucky, or perhaps the other way round, then when I was ready he'd enter me and we'd begin to screw. If I was really lucky, he'd be able to control himself until I had come - maybe even more than once - and then he'd come and I'd feel that wonderful feeling of his prick moving deep inside me throbbing its little heart out as we both fell asleep.\n\n\"But this time, things are different. Unlike most men I've known (and there have been plenty) this guy seems to be in no hurry to push things ahead. Instead, we begin to talk, sharing some of the most intimate and personal details of our lives. I tell him things I've never told anyone else, and after a while I begin to think that maybe he doesn't want to fuck me after all. Might he be gay? But I get the feeling that he's as much into me as I am into him, so that seems unlikely. And his Goldilocks prick (you know...not too big and not too small) has been waving to me just a few inches from my face for the last couple of hours, which is pretty unambiguous. Maybe I really got lucky this time and found a guy who actually wants to get to know me - wants to integrate the sex, whenever it comes, into the broader context of our budding relationship. Wouldn't that be a turn on?\n\n\"And then I begin to wonder how I want this to develop, because there are no signs of him taking the lead. Maybe it's up to me this time. And that is really exciting. I got a taste of it the last time I made love with Robin, but I am not seeking that kind of control; what I really want is an equal and reciprocal desire and arousal, followed by close physical entanglement, mutual ecstasy and joint satisfaction. That's all; that's my dream. But how to get there from here?\n\n\"I slide my naked breasts up over his chest...like this...feeling his skin rub against my hardening nipples...like this...until I can nuzzle his neck as he lies on his back. As we kiss, I slip my leg over his hip...like this...until his prick is pointing straight at the mouth of my open vagina...like this. I've never felt so desirous or desirable in my life! I inch my hips down to meet his prick, both of us gasping when we first make contact. Not too far back this time. His prick twitches wildly, but he still makes no move to thrust it into me. I spread my legs a little further...like this...and he slips gently in, filling me in with just the faintest of plops as the head of his circumcised prick enters the mouth of my vagina...like that. We smile into each other's eyes, knowing that we've passed the point of no return and are now embarked together on an epic journey.\n\n\"Don't move\" I say, and he just smiles and shakes his head. I lay my head on his chest and concentrate on the exquisite feeling of his penis lodged deep inside me, pulsing its radiant warmth. I can feel a glow spreading through my body, a glow that starts somewhere in my vagina, envelops my belly and clit, slides down my thighs and courses up my spine to my head. I am giddy with feeling, every cell in my body moving inexorably towards orgasm. A wave passes through me and I feel the familiar pulsating contractions of the walls and mouth of my vagina, my ass, and my clit. He holds me even more tightly to him, and I gasp as the glorious feelings wash over me. This is unlike any sex I've experienced before: gentle and motionless, our bodies are communicating at some primeval level. If most orgasms are like waves crashing on the shore (big, Hawaiian surfing waves, if you're lucky), this is more like a huge ocean swell, fifty feet or more high and hundreds - thousands! - of feet long, lifting me up, up, up, over the top and rolling me gently down the other side. And here comes the next one...Ahhhh...This is heaven! Maybe this is what's meant by Tantric sex; if so, I want more of it! I want more whatever it's called. But I need to know how he's feeling, if we're still on the same page, on the same planet, and really sharing this together, so I continue with our game and ask him: \"Well, fantasy or reality?\"\n\n\"Complete fantasy, without a doubt.\"\n\n\"Pig!\"\n\n\"I was only teasing! But now it's my turn, and there's only one experience I could possibly tell you about right now: my next one.\"\n\n\"Please...\"\n\n\"Well, there's this girl, you see. We've only just met but already I'm deeply in love with her. She's cute and funny and gorgeous and sexy and honest and - best of all - we are on exactly the same wavelength. There's so much non-verbal communication going on between us that it's hard to keep up.\"\n\n\"Well, it's certainly hard but you're keeping it up OK. Believe me, I can feel it!\"\n\n\"Me too...Don't move! I'm in bed with her - never mind how we got here; it's a long story - and she's lying half on top of me with my prick buried deep in her vagina. We've been like this for a while already, and wave after wave of amazing feelings keep washing over me, like an orgasm but better, in that I don't have to come. I want these feelings to last for the rest of my life. I bend my head down so our lips can touch, and we kiss long and gently, her tongue entwined with mine as my prick pulses in her cunt. As I kiss her I can feel another wave approaching. This one is ginormous, one of those freak waves like at the end of 'Perfect Storm'. Up, up, up we climb; I can feel her riding with me every inch of the way. And this time...this time, I come, my prick spurting inside her pulsing vagina, my eyes weeping with the sheer unexpected breathtaking delight of this amazing, precious woman. \"Will you marry me?\" I ask.\"\n\n\"Let me think about it...Yes, I think I just might.\"\n\n\"Oh, I do hope so...Maybe weddings are infectious. How did you know the bride, anyway?\"\n\n\"I thought you knew; she's my cousin.\"\n\nTHE END "
    ],
    "authorname": "Conversations",
    "tags": [
        "lesbian romance",
        "lesbian first time",
        "gay first time",
        "foursome",
        "threesome",
        "ffm",
        "incest romance",
        "outdoors",
        "voyeur"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/your-turn-15"
}