{
    "title": "Jack's Snow Day",
    "pages": [
        "Author's Notes:\n\n'Jack's Snow Day' is the fifth story in the saga of Jack Danner. Minimal effort is made in this tale to explain the backstory so it is highly recommended you read the previous stories in the following order:\n\n<ul type=\"disc\"><li>Jack's New Job</li><li>Jack's New Position</li><li>Jack's Daily Grind</li><li>Jack's Wage Slavery Parts 1 &amp; 2</li></ul>\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\nJack greeted his day the same way he had every morning for the past year.\n\nWith a toe in his nose.\n\nActually, to be fair, it wasn't always a toe. Sometimes it was a finger. Or the tip of a tail. On a few occasions, near the beginning, it was a sharp little tooth. That was no longer allowed.\n\nHe opened his eyes and a happy, mischievous little face looked down at him, the tiny foot still planted across his mouth and the toe... in his nostril.\n\nHe tickled the pads of the foot with the tip of his tongue and was rewarded with high pitched giggles, one from the owner of the foot and one from her sister hiding at the foot of the bed. The tiny foot left his mouth but rested on his chest. Jack had no trouble bearing the weight of the two foot tall being standing on his chest.\n\n\"Zaina? What do you think you're doing?\" he asked her as he did each morning. Well... the sister's took turns on alternate mornings but both heard the question.\n\nHer eyes twinkled with excited anticipation. \"Papa was making monster noises!\"\n\n\"Papa's a monster?\" he asked in surprise, his eyes wide. Zaina's muscles began to twitch in anticipation, her tail whipping back and forth, and she couldn't suppress the grin as she nodded.\n\nHe surprised her this morning by suddenly lifting his arms under the sheets and trapping her in a tangle. Two little voices shrieked in delight.\n\n\"Papa's a hungry monster!\" he growled and pretended to bite Zaina through the sheets. More shrieking ensued and Adina launched herself onto the bed to rescue her trapped sibling.\n\nExactly what he'd been waiting for.\n\nWith one trapped in the sheets he grabbed Adina's leg and toppled her onto her back next to her sister. Then he pressed a foot from each of them together and blew a loud raspberry against the bottoms of the two's wiggling toes.\n\nTheir shrieks of laughter had an oddly harmonic synchronicity as the two shared the intense tickling sensation like a feedback loop between them. Their brains had linked sensory centers. What one felt, the other involuntarily did as well. Somehow they were able to distinguish who the sensations belonged to and, most of the time, they could ignore the secondary input.\n\nAdditionally, what one saw and heard, the other could choose to see and hear. They'd discovered there were differing levels of transference and control when it came to some of the senses. Scent for instance, was only minimally shared and often faded quickly. The family had been keeping this unique ability a secret as best they could in the three and a half years since they were born.\n\nWhen he let go of the two legs and pulled the sheet clear of Zaina's head the two had matching expressions of dreaminess on their faces. They were blissed out within their connection. He knew from previous experience they'd come out of it in a few minutes and come looking for him again so he rolled out of bed, grabbed some work clothes, and went to take a quick shower behind a locked door. Just keeping the door closed no longer sufficed with three year old, curious kids in his condo.\n\nHe removed the protective caps from the points of his sharp horns, something else he had to do for the kids. Stepping into the shower he let it blast him with hot water and he quickly lathered up and rinsed off. He carefully washed his long sandy blond hair which hung down to his mid back. He ached to get a short haircut but he'd have to deal with a mutiny in both offices he worked in. He managed to wash and rinse his hair without scratching himself on his horns. He could have left the caps on but water always got inside and he'd forgotten to empty them before and had to listen to it slosh during a meeting or drip out at the worst possible moment.\n\nHe shut off the water and got out to dry off. He shaved, put deodorant on, put the protective caps back on his horns before brushing out his hair, and then brushed his teeth. Before he got dressed he used his towel to buff the slave collar which was fused to his neck. He'd like to ignore it but found if he didn't keep it clean and shiny the skin of his neck became irritated. So he took care of it. He got dressed and put as smile on his face as he looked at himself in the mirror.\n\nYeah, he was fooling no one with that smile.\n\nThe Queen had spent an extraordinary amount of time with him after his rescue from the Allsa Komanae and he was almost back to his old self but something was still missing. He tried not to burden anyone else with it so the smile went back on his face and he opened the bathroom door.\n\n\"RRRAAARR\" roared from throats as the two small, ebony cat-like beings launched from the corner of the bed into his arms. He wrapped them up tight against his chest and kissed their cheeks as he walked them out into the living room where most of his family were. SennLann walked up to him and he dipped his face down to her to give her a good morning kiss. The girls wiggled free to race away down the hall to their room. Playtime waits for no man.\n\nSennLann watched them go with a happy smile. When she turned back she smiled at Jack. \"We let you sleep in just a little longer today. It was not a running day.\"\n\n\"Thank you. Yes, tomorrow I run,\" he responded. \"Any word from Eve?\" he asked looking at SennLann and Diana.\n\nIt was Diana who answered. \"They had a much better night at the hospital. Joseph's fever broke and it's on its way back to normal.\" Jack sighed. The poor little tyke had one ear infection after another. The doctor said he would be prone to them during the next few years. Eve vigilantly stayed by his side. Jack called the Chuuruthian medical board to see if they had any suggestions but they hadn't had too many human infants as patients.\n\nJack collected a kiss from Diana and his daughter Emily. SennLann handed him a breakfast shake and he headed off to work.\n\nHe had a shift at the Embassy this morning and the Trade Commission this afternoon. The offices were just across a lovely courtyard from each other and the walk from his condo wasn't long. He made his way into the Embassy building and went up to the office. Stepping through the doors he said his hellos to the staff as he walked over to Denee, his personal assistant.\n\n\"Good morning Denee!\" he said with a smile.\n\n\"Good morning Jack! You have some special guests waiting for you in your office this morning.\"\n\n\"Really? How long have they been there?\" he asked.\n\n\"Not more than a couple of minutes but you shouldn't make them wait,\" Denee said with a smile. When he didn't move immediately she made shooing motions.\n\n\"Ok, fine!\" he said with a grin.\n\nHe walked over to his office and knocked before entering. Once inside he paused and smiled at the two ladies smiling back at him from the chairs in front of his desk.\n\n\"Queen Elissa! Karrel! To what do I owe this pleasant surprise?\" he said as he walked over and gave them both a quick kiss.\n\n\"Have a seat Jack,\" Elissa said with a smile.\n\n\"Oh, maybe this isn't a pleasant surprise?\" he said with a worried tone as he moved to his chair.\n\n\"Don't be silly Jack. Of course it's pleasant. We have no bad news to deliver to you!\" Elissa said.\n\n\"Ok, good. So, what can I do for you two?\"\n\nElissa and Karrel shared a look and Jack's unease increased.\n\n\"I do have a favor to ask of my Altarian Ambassador,\" the Queen said and Jack unconsciously sat a little straighter in his chair.\n\n\"I need you to take a vacation.\"\n\nJack froze and stared at the two women in shock. They looked back at him with concerned expressions.\n\nHe tried to speak but his voice failed him at first. He cleared his throat. \"I'm... I'm sorry. Did you just ask me to take a vacation? You... you do recall how... badly... the last one went?\"\n\n\"Stop! That wasn't an issue with taking time off. That entire affair was the product of the insidious manipulations of a Mahrell Drun Prime! Who is now dead! Jack. You more than anyone know life moves forward. You cannot and must not allow yourself to fear what lies ahead. You also know we won't put you in harm's way, ever again. You mean too much to all of us!\" the Queen exclaimed.\n\nHe nodded and looked to the windows. The climate on Altaria was stable and consistent so the view out his window rarely varied by much. This allowed his sense of time to sometimes feel like it was standing still. But he knew, as Elissa just said, life moves forward, regardless of our wishes and desires. He closed his eyes and took a deep breath.\n\n\"What-\" He began again. \"Is the vacation the favor you need?\" he asked.\n\n\"No, what I actually need is for you to visit a colony world of ours. The planet is called Chrystan. It's ours only because it resides deep within the Altarian region of space. No Altarians live there as its climate isn't really suitable to us. It's a world of perpetual winter,\" she explained.\n\n\"Wait, if no Altarians live there why am I going?\" he asked.\n\nKarrel picked up the story. \"The planet is populated by the Shreen. Hundreds of years ago the sun above their original home planet began to show dramatic, sudden, and unexplainable signs of instability. It was suspected that the Allsa Komanae were somehow involved as Shreen was close to their territory. The populace of the planet needed to be evacuated but their requirements for survival were so particular none of the worlds in the Gate Network had a suitable offering. The Tik scoured the records of all planets located by all races and found a reference to an icy ball we had located and written off as unsuitable. They approached us and we immediately offered Chrystan to the Shreen. The Tik and the Altarians evacuated the entire populace from the Shreen home world to Chrystan taking with them everything they could save. Only months after the last group was evacuated the sun flared and consumed the planet.\"\n\n\"I don't think I've ever met a Shreen before,\" Jack noted, curious in spite of his earlier anxiety. Queen Elissa was smiling fondly at him.\n\n\"They don't leave their new home. Ever. They've actually found it to be more hospitable than their original home planet. It isn't brutally cold, has a more stable orbit around a young sun, is geologically stable, has plenty of geothermal energy, and the resources are easier to access. The Shreen themselves aren't what you'd call a very adventurous people. Homebodies is a better description of their type. They do trade with the other worlds of the Gate Network but only through brokers,\" Elissa offered.\n\n\"Sounds like a snowy utopia. Why do you need an Altarian Ambassador to visit them?\" he asked.\n\nElissa shared another look with Karrel who chose to answer. \"We've received word, rumors really, of unrest. We'd like you to go as our official diplomat to speak with them to carefully and discreetly determine the source of this unrest so we can figure out if there is anything we can and should do to ease their minds.\"\n\n\"It is not our intention to interfere with their society. They've had a stable government for as long as they've been on Chrystan. We're just... concerned as close neighbors. Go, meet with their Queen and King. Speak with the cabinet members and walk amongst the people. The Shreen are really nice. It's distressing to hear this stability may be in jeopardy,\" Elissa requested. \"They have amazing hot spring resorts. You like snow, don't you?\"\n\nJack chuckled at the pleading tone in Elissa's voice. \"I don't dislike it.\" He thought for a moment. It had been years since he went skiing. It might be fun to do it again. \"These resorts. Do they offer skiing?\"\n\n\"Skiing? What's that?\" Elissa asked.\n\n\"Obviously, you're no snow bunny,\" Jack teased as he did a search on his computer filtering by Earth sports and found a vid. He spun his screen and played the vid showing a man carving his way down a mountainside in fresh powder snow up to his waist.\n\n\"Oh! How is he moving so gracefully and fast through the snow!\" Karrel exclaimed. \"Ah! What's that on his feet!\" she yelped as the skier in the vid leapt over a small tree.\n\nJack froze the vid. He pointed to the long skis. \"These are skis. Long very slippery boards which support the weight of the skier on the snow and allow him to move through it quickly.\"\n\n\"The Shreen have large wide feet for walking on snow. They wouldn't fit on these narrow things.\" Karrel said.\n\n\"I guess that answers the question of will they have skiing at the resort,\" he said and both ladies shook their heads.\n\nHe thought for a moment then pulled up a different vid. Nordic skiing was also fun and didn't require a mechanism to get you back to the top of the hill.\n\n\"Is this skiing too?\" Elissa asked.\n\n\"Yes, this is a different kind but I also enjoyed it back on Earth. If you're sending me to a winter planet I want to do some skiing. This kind is easier to do without the resort having to prepare anything,\" he answered.\n\n\"Does this mean you'll go?\" Elissa asked.\n\n\"Have I ever refused you anything?\" he asked with a raised eyebrow.\n\nShe just grinned widely.\n\n\"Are you going to order some skis for yourself?\" Karrel asked with a smile.\n\nJack looked at the two women. \"No, I have to be fitted for skis at a shop that sells them.\"\n\nThey lost their smiles. \"That means-\"\n\n\"A visit to Earth first.\" He wondered if Queen Elissa would cancel her request but he saw a crafty look appear in her eyes.\n\n\"Challenge accepted. Be at the Gate Terminal in two hours for your trip to Earth,\" she said with a smile as Karrel looked at her in worry.\n\nJack looked at her in surprise. \"Today?\"\n\n\"As of this morning you are on a Diplomatic mission with a few days of vacation. Karrel will cover for you in the Embassy. Your Trade office appointments have already been shifted until you return,\" Elissa said.\n\nJack blinked in surprise. \"Will I get time to pack before you push me out into the snow?\"\n\nThey chuckled evilly.\n\nChapter 2\n\nJack hadn't traveled by Gate since the one visit to the Gate Network headquarters after his kidnapping to speak with the special council about the fate of the Allsa Komanae. Since then he'd stayed close to home. As he stood in the terminal he let the last of the chills run down his spine. He'd push through this. He held faith in Elissa's promise not to ever send him into danger. She'd let him pick the destination on Earth this time and he'd worked out the time of day and season so he was assured to have enough time to shop and the place should have a store catering to his needs.\n\nHe had on a green hoodie, his black one having been shredded by his horns. He had his protective caps on but he would pull the hood up only when they went through the Gate.\n\nHe was waiting on his escort. The Queen said she'd check to see if his favorite team was available and he smiled when he saw Gee and Bal walk in the door. They smiled back to him. He wanted so badly to pull them into a hug but he saw they were on duty so it was all business. They gestured for him to walk up to the customs and security agent. He gave their destination and were given the Gate ID.\n\nThey made their way into the Gate room and he pulled his hood up to hide his horns. Then they walked through the mirror surface. Jack felt just the slightest tingle and he was in Stockholm, Sweden on Earth. He marvelled once more at the simplicity of such an action and the magnitude of its significance. The Gates really were the most amazing invention ever! He looked around and froze when he saw the smiling faces. Here was Queen Elissa's answer to his challenge.\n\nTall, muscular, and truly imposing in her commando gear, with a nasty assault weapon over her shoulder and knives strapped to her thighs, Major Cha'Risa Ash stood front and center. Next to her a tall, slim redhead with a perpetual crooked smile, Captain Nann Graf nodded to him. Two almost identical, solidly built greying brush cuts carrying nastier looking assault weapons, Corporal Leo Orlov and Corporal Maxim Volkov grinned widely at him.\n\nFinally, the last member of their team, a shiny Tik hovered at their side. Tik were neutral, always, and didn't take roles in the military. This meant this particular Tik was Lieutenant Ray Sharif. The first and only sentient AI created from a human mind. The Tik saved him and gave him a Tik body to preserve his mind as the matrix it was built on was degrading.\n\n\"Oh my god! I didn't expect to see you guys here!\" Jack exclaimed happily.\n\nCha'Risa grinned and shook his hand. \"We were in the neighborhood, London to be precise, when the request came through from a certain Queen to take care of her special package. Who could pass up a task like that?\"\n\n\"It's so great to see you all! How have you been doing?\"\n\n\"Really good! We just got back from hunting some smugglers,\" Nann said with a grin and the two men shared her delight but on them the grin looked a little bloodthirsty.\n\n\"Ray, is our transport ready?\" Cha'Risa asked.\n\n\"It will be at the door when we arrive,\" he answered.\n\n\"Any chatter?\"\n\n\"No Major. No indication that our presence has been noted at all.\"\n\n\"Good.\"\n\nWith a nod they made their way to the front of the building and stepped outside just as a small bus pulled up. They stepped inside, Jack spoke an address into the mic, and were moving back out into traffic in seconds.\n\n\"Do you have to get a security detail escort like this every time you shop?\" Ray asked Jack.\n\n\"I haven't been back on Earth since... then,\" Jack answered.\n\n\"Oh, sorry,\" the man in the Tik body said.\n\nJack shrugged. \"It's fine. I had to get back on the horse sometime.\"\n\n\"Where are we taking you today?\" Cha'Risa asked.\n\n\"There's an outfitter for sporting goods I read about. I need to get fitted for Nordic skis. The clothes and all the gear,\" Jack said, suddenly feeling silly for having the commando team as escort on a shopping trip.\n\n\"Us as well,\" Gee offered.\n\nJack looked at Gee and Bal in surprise.\n\n\"Did you not know that we were going with you?\" Gee asked.\n\n\"No! Nobody mentioned it! I was told there are no other Altarians there. Too cold. Are you sure-\"\n\n\"We will be fine,\" Gee assured him.\n\n\"I don't think they will have any shoes that will fit your hooves,\" Jack said looking down.\n\n\"We will find something and make a custom solution before we leave,\" Bal said, scanning the traffic outside the window.\n\nTwenty minutes later they pulled into a side street next to a busy sporting goods store. The commando team got out first and indicated the coast was clear.\n\nFeeling more ridiculous with each passing moment Jack made his way inside with his jet black escorts. Naturally heads turned in the shop, from customers and staff.\n\nAn older man in the shops uniform approached and said something in Swedish then shook his head. \"My apologies, Ambassador Danner. Can I help you with something?\"\n\nIdentity out of the bag and he really had to admit the hoodie thing just wasn't cutting it anymore, Jack pushed it back and smiled at the man. \"Yes, hi, I was hoping I might get outfitted for some Nordic skis, poles, shoes, gaiters, thermal wear, bodysuit, the works. My friends here need the same.\"\n\n\"Certainly Ambassador!\" the man said with a delighted smile.\n\n\"Please, call me Jack.\"\n\nThe man nodded with a smile and gestured for them to follow. Jack was aware of each and every eyeball turned in his direction.\n\nThe man took time explaining their options and took weight and measurements of all three of them. Due to Gee and Bal's petite natures they were being outfitted with skis for teens. Jack's options were more limited due to how heavy he was. Finally they made their selections and the man moved off to get the order started as they tried on thermal clothing. Jack insisted they all get wicking undergarments and then wondered how that worked for furred beings. Item after item went into their baskets.",
        "Occasionally one of the commando team would wander by and give him a nod to let him know they were on the case. It did make him feel safe.\n\nAs he sat on the bench a small boy approached him bravely so he gave the boy a smile.\n\n\"Are you a monster?\" the little voice said.\n\nJack smiled in surprise at the innocent question and saw the boy's mother, not too far away, gasp in dismay. He leaned forward to speak quietly. \"Only for my daughters and only when they ask me to be.\"\n\nThe boy's face lit up with a brilliant smile as he knew what that meant. His eyes went to the large horns and a small hand reached up to touch them. Jack just held still until the boy's curiosity was satisfied. He pulled his hand back and grinned at Jack as he ran back to his mother who was sending Jack a grateful smile. Jack just nodded to her with a smile of his own. He felt... much better.\n\nDone with his shopping he saw the new skis came with bags to carry them and thanked the shop owner after he made his purchases. The man gave him a business card and looked at him hopefully. Jack smiled then posed for several pictures with the him and the staff who were super excited. The mother and her son got a picture as well. He and the Altarians then carried their purchases out to the bus, their silent escort scanning the street with their eyes.\n\nComfortably seated in the bus once more as it headed back to the Gate Terminal Gee and Bal were discussing the shoes they bought and how they could be customized. They did this while scanning the roads around them.\n\n\"All quiet Major, aside from a local radio station reporting on the surprise visit at a neighborhood shop from the Ambassador.\" Ray called out.\n\nShe nodded and turned to Jack. \"You can call on us any time you need to visit Earth.\"\n\nJack looked her in the eye and saw she was still carrying her guilt for letting him get taken from the planet. He'd already explained he didn't hold them accountable but he wasn't going to dredge that up again so he just smiled and nodded.\n\n\"Maybe a dance club in Russia next time?\" he said mischievously seeing Corporal Orlov's eyes widen in delight.\n\n\"Gods, no!\" Maxim moaned causing the others to chuckle.\n\n\"You don't know good music,\" Leo huffed.\n\nThey made it back to the Terminal with no fuss and went inside. Jack shook their hands and saw Bal doing a trade with Maxim. She handed him a small box and the man's face lit up in a broad smile. In turn he handed her a set of three deadly looking, ceramic throwing knives. She gave him a rare smile for the items.\n\nJack saw the Major doing her best to pretend she hadn't witnessed the exchange. \"Thank you very much for your protection. It did make me feel much more at ease. I'd like to be able to come back to Earth more often.\"\n\n\"You have an open invitation. As I said, call on us anytime!\" Cha'Risa replied.\n\nWaving at the team Jack followed the Altarians down to their Gate and stepped through to find themselves back on Altaria.\n\nWhen they reached the exit Gee stopped Jack. \"We will meet back here tomorrow morning at 10AM. Wear your... what did you call them?\"\n\n\"Long Johns,\" Jack smiled.\n\n\"Yes, wear the warmest ones. I understand they will be having a snow storm when we arrive on Chrystan. It will be cold.\" She shuddered.\n\n\"Listen, I don't want you two doing anything you don't want to do! I know Altarians don't like snowy conditions-\"\n\n\"We are going,\" Bal said with a frown.\n\nJack held up his hands in surrender. \"Fine! We will see you both at 10AM.\"\n\n\"We?\" Gee asked.\n\nHe looked at their curious faces. \"Yes, we. I'm not going on my vacation alone. I'm going to a resort so I'm going to invite Diana, SennLann, and... well, not Eve as Joseph is ill but the other two and the kids.\"\n\nGee shared a knowing smile with Bal. \"We will see you tomorrow at 10AM.\"\n\nJack watched them walk away feeling more than a little annoyed. They didn't know what the ladies in his life were going to say.\n\n\"What do you mean, no?\" Jack said incredulously to Diana and SennLann at the dinner table that night.\n\nDiana looked at him while she fed Emily. \"Jack, I'm originally from California. Southern California. I don't do snow. I'm certainly not taking Emily to such an inhospitable place!\"\n\nSennLann was nodding in agreement. \"Phem Kalos is a hot place. I do not like being cold. I will stay here with our daughters.\"\n\nJack pouted. Eve looked at him with sad eyes with the sleeping child in her arms. \"I cannot go-\"\n\nJack held up his hands. \"No, I get it. Sorry. I understand you can't leave Joseph. That's fine. I just thought one or both of you might like to come. It's ok. I won't be alone. Gee and Bal will be there with me.\"\n\nThe ladies relaxed and he sighed.\n\nThat night when everyone had gone to sleep Eve slipped into Jack's bed and cuddled up to him. He typically went to bed alone but most nights he'd get a visitor... or two. It wasn't always for sex. Sometimes they just needed the comfort of another's touch or in this case they knew he did.\n\n\"I'm sorry I have not been here for you lately,\" Eve whispered.\n\n\"Please don't apologize for that. I understand that Joseph needs you now.\"\n\n\"I'm also sorry we can't join you on your vacation.\"\n\n\"Again, you don't have to apologize. It's fine. I am going to miss you though!\" he said kissing her forehead as she snuggled closer to him.\n\nJack fell asleep wrapped up in Eve's arms and her love. It was just what he needed.\n\nChapter 3\n\nThe ground raced past under his pounding feet as Jack explored the pathways beyond his neighborhood in the early hours. There were very few others out exercising at this time of day and none would have been able to keep up with him. He was breathing like a bellows and his body felt good. His music player played the tone indicating it was time to head back.\n\nHe took the next path that veered to the right and smiled when up ahead he saw the opening to a single track path through the woods. It was a beautiful narrow earth path that hugged the side of a gently burbling brook weaving between the trees. As he turned off the paved path to slip into the forest he stopped his music and listened to the sounds of nature, his breathing and the muted thuds of his feet on the soil as he nimbly ran on the twisting trail. He was entering a state of Zen where running was life and life was running and he was one with the trail and-\n\nFUCK-\n\nIn the split second before the collision Jack leapt sideways to avoid trampling three male Altarians who were suddenly standing in the center of the path facing him. His new vector drove him horns first into the trunk of one of the nearby trees.\n\nCr-CR-CRACK!\n\nJack fell back on his ass on the hillside, dazed by the sudden stop. His vision was filled with stars which gradually faded. He heard laughter and looked to the trail where the three males were enjoying his addled state.\n\n\"Look at the stupid look on its face! How incredibly dull witted it is.\"\n\n\"Not much more than a beast really.\"\n\n\"Ugh! Look how shiny and big his muscles are!\"\n\nThe first two looked at the third. \"And it smells funny!\" number three quickly added.\n\nTurning back to him the middle one snorted. \"You didn't even see us step out onto the trail in front of you. Do you run with your eyes closed?\"\n\nWith that bachelor number one kicked a little dirt onto Jack's chest with bachelor two following suit. \"Stick to the paved paths, smelly human! The wooded paths are for civilized beings!\" One said with a sneer.\n\nWith that the three males went on their merry way enjoying the sounds and sweet scents of the forest. Jack lifted a hand to his head and when he pulled it back he froze as his fingers were dripping with something red. He stared at his fingers then he realized it wasn't blood. He sniffed it and noticed the scent seemed extra sweet then it was all around him. He took a deep sniff and smelled... GowGow juice. He looked down and saw his hand was resting in a pool of the sticky red sap which was bleeding from the injured tree he'd run into.\n\nCrk-CRIK-CRACK! BOOM-boom-boom!\n\nJack rolled away from the base of the tree just as the structural integrity of the trunk failed spectacularly. The damaged area had sheared off where he'd struck it, the top sixty feet of the trunk suddenly dropping five feet to slam into the ground and bounce. Jack looked up and saw the canopy was pulling loose of the surrounding trees. It began to lean towards the gap between the trees. Towards the Altarians.\n\n\"Oh... fuck.\"\n\nJack leapt to his feet and dodged around the slowly accelerating trunk to sprint down the trail.\n\n\"RUN!\" he yelled.\n\n\"No, we won't because civil-\" Bachelor number one said haughtily as he turned but his voice stuck in his throat when he saw the tree toppling towards him.\n\n\"RUN, YOU SILLY BASTARDS! RUN!\"\n\nSquealing in fright the three began charging ahead to outrun the falling tree. They could hear the smaller branches of the top snapping and popping. That's the section Jack really didn't want to be in when it struck the ground.\n\nThe canopy of the GowGow tree is where the GowGow seed pods lived. Fist sized, barbed grenades filled with extremely sticky goo. They exploded on impact tossing their hooked seed everywhere. Even if the barbs missed you the seeds would stick to any surface. Getting the sticky residue off was apparently a painful experience.\n\nJack quickly caught up to the Altarians but number three who'd been out front tripped and fell. His friends trampled him in their haste but didn't stop. Whimpering, number three held his arms up to be picked up like a child.\n\nScooping up the crying male Jack put on a burst of speed to dodge around the other Altarians by surging up into the forest and back down onto the path. He had a number of scratches on him from this move but now he was able to pour on the speed as he could hear the crashing sound behind him. The Altarian in his arms clung to him and shrieked in fear. Jack burst out of the trail onto the paved path and kept on running as the top branches struck the ground with a mighty crash.\n\nJack gradually slowed and then looked back.\n\nThere was no sign of the two other Altarians.\n\nJack stayed back as he could hear the occasional pop of a seedpod bursting. He gently set the male back on his feet. \"Do you have a com? You'd better call for an ambulance-\"\n\n\"HUMAN!\"\n\nThey froze as they heard the voice of rage coming from somewhere inside the trees.\n\n\"Are you guys ok?\" Jack called out.\n\n\"I... HATE... you,\" the voice petered out into a whimper.\n\n\"Yeah, I get that a lot from you guys,\" Jack said to himself then looked to the one standing next to him. \"How about you? Do you hate me too?\"\n\n\"No! You saved me!\" it cried.\n\n\"Why did you guys jump out in front of me?\" Jack asked.\n\nThe male pouted and looked back at the mass of tangled branches. When he looked back at Jack there was a new strength in his eyes. \"My name is Numell. I apologize for participating in the childish prank my former associates, Darness and Jolleth attempted to play on you. We heard you coming as your feet make a deep thumping sound when you run. Darness said we needed to hide and step out to make you either knock us down so we could have you charged with assault or you injure yourself in some way.\" He looked ashamed. \"I'm sorry. I'm weak. I let them make these decisions for me.\"\n\nThere was a whoosh sound from above as an Altarian Security Ministry vehicle swooped in to land next to the path. Gee and Bal stepped out, glanced at the fallen tree, heard the pitiful cries from within the branches, and glared in his direction.\n\n\"Numell, here's your opportunity to show real strength. Give a statement to these officers explaining what you just told me. Take responsibility for your actions as Darness and Jolleth should but probably won't. Strength of character is built this way,\" Jack said with an earnest expression. Numell nodded shakily then pulled his shoulders back and marched over to the agents. Gee recorded his statement while Bal came over to speak to him.\n\n\"Are you injured?\" she asked seeing the red sap on his horns and in his hair.\n\n\"No. I clocked my horns against that tree really hard but I was only dazed for a short time.\"\n\nBal looked at him with wide eyes then looked back at the fallen tree. She turned back to him. \"You knocked down a GowGow tree?\" Then her eyes went up to his horns. She pulled a tissue from her gown and reached up to wipe the surface of his horn. Her expression froze and she rubbed harder. He pulled back in alarm.\n\n\"What? What's happened? Are they broken?\"\n\n\"No! No, they are not damaged...\" Bal said her voice tapering off as she stared.\n\n\"That can't be good,\" Jack muttered. He poked Bal to get her attention. \"What are you two doing here?\"\n\n\"There was a minor seismic event in this location and we knew you were out running so we naturally assumed you might be involved,\" she said with her trademark scowl.\n\n\"Not my fault this time... well, felling the tree yes but they caused it. Wait, did you say seismic?\"\n\n\"An initial large spike, followed in rapid succession by two smaller spikes then a long drawn out thump which was the final impact of the GowGow tree clearly,\" she explained as her eyes slipped back up to his horns. \"You have lost your protective caps.\"\n\n\"Dammit! They must have been knocked loose in the impact. I keep losing them!\" Jack growled.\n\nEmergency vehicles were arriving but they kept their distance from the tree out of concern of unexploded seed pods. Gee joined them and Jack waved at Numell as the male walked away.\n\nJack looked back to see Gee staring at his horns with her mouth open.\n\n\"For all that is good and holy would someone please tell me what's happened to my horns now?\"\n\n\"Uh, they... it looks like they have GowGow juice on them. You need to wash that off. And the caps are missing,\" Gee said.\n\n\"Oh, is that all?\" He sighed. \"Can we go now? I just have to take a shower and get dressed. I'm packed and ready to go otherwise.\"\n\n\"Just you?\" Gee said with a small smile.\n\nJack pouted at her. \"Yes.\"\n\n\"Ok, let's go.\"\n\nPop! \"AAAhhh... hate you...\" a voice cried out.\n\n\"A new enemy is born,\" Jack sighed to the two agents.\n\n\"No, Darness and Jolleth won't be a problem. I've filed the report.\" Gee said and they boarded their vehicle. It lifted and flew them back to Jack's building.\n\n\"I'll see you shortly at the Terminal,\" Jack called out as he exited the vehicle. Gee nodded and they lifted off. Jack made it inside, up the elevator and inside his unit without bumping into anyone. As he entered his apartment that was a different story. The TV was on, showing the scene of the tree felling and they'd been watching. Three females rushed over to see him, all of them stopped to stare up at his horns.\n\n\"Enough!\" Jack said, his patience at an end. He marched into his bathroom and looked in the mirror.\n\nRed. Blood red to be exact. The sap from the tree had splashed over his horns. They looked like they were streaked with blood.\n\n\"GOD DAMMIT!\" he yelled.\n\nHe grabbed a scrub brush, stepped into the shower and set the temperature as hot as he could tolerate. Lathering up the brush he ran it back over his horns again and again roughly, careful not to get too close to the tips. When his arms were shaking with fatigue he put the brush down, rinsed, quickly washed his hair and body and turned off the taps.\n\nHe stepped out into a steamy room and opened the window to let the heat out. He dried himself off, buffing the silver collar. Then he roughly buffed his horns until he heard the ripping sound of the tips tearing through the towel.\n\n\"Shit,\" he grumbled as he pulled back the tatters. He noted there was no red on the towel but the scrub brush was a little pink. Wiping the steam from the mirror with the ripped towel he looked up in dismay.\n\nHis matt black horns with thin white veins were now shiny black horns with thin red veins and thicker streaks of red from the midpoint to the tips which were completely red. A deep, dark, blood red.\n\nHe reached up and slid his fingers across the surface and they felt... slick, like he'd added a protective layer of clear coat varnish to them and ran a floor buffer on his head. His horns absolutely gleamed.\n\n\"Fuck me...\" he moaned.\n\nHe thought he looked like a crazy person- no! A homicidal, crazy person! All he needed was some bits of flesh and dripping blood from his horns and he'd be set. At least the red stuff had only stuck to his horns. His hair and skin were free of the substance and its color.\n\n\"Jack? Are you ok? Can I come in?\" a gentle voice called through the door.\n\nHe realized he hadn't brought in any clothes and there were likely kids outside the door. He wrapped the ripped towel around his waist completing the crazy look and opened the door.\n\n\"Oh! Oh my!\" Eve's eyes immediately went up and she gasped quietly. \"They're beautiful!\"\n\n\"Beautiful?\" he croaked.\n\n\"Well... in a raw, instinctive way. I- I don't have the words to describe it,\" she sighed.\n\nHe actually felt a little better. He took her face in his hands and kissed her deeply and she trembled in his grip.\n\nWhen he pulled back she was breathing hard and he heard a soft moan from the door to his right. He looked to see the lust in Diana's eyes.\n\n\"Do you have time?\" Eve whispered.\n\nHe glanced at the clock and growled. He didn't. \"No. I'm running late. Dammit,\" he said softly.\n\nEve pushed his chest gently. \"Get dressed. We'll be fine until you get back.\"\n\nHe nodded stiffly. \"Do I have any more protective caps for my horns?\"\n\nEve shook her head. \"I'll get you a pair of mine.\" She ducked out the bedroom door around Diana who was still clinging to the door jamb eyeing him hungrily and a little desperately. He remembered she had a compulsive attraction to dangerous mates. Damn.\n\nShe slipped inside the door, closed and locked it. \"Jack? Please?\" she begged pitifully.\n\nHis own lust flared. He didn't have time but she was sliding her pants down and turned to present her curvy ass to him. She was so lovely and wanted him so badly.\n\nHe tore away his towel and dropped to his knees to run his tongue roughly over her pussy. He pulled on her hips, arching her back as he drove his tongue deep inside her wetness.\n\n\"OH FUCK, YES!\" she cried out.\n\nBefore she could prepare Jack stood and shoved two fingers into her pussy, fucking her with them as her mouth dropped open and her eyes closed tight. He rubbed his slick fingers over his cock and drove it deep on the first thrust. He sucked the remaining nectar from his fingers as he slapped his pelvis against her ass hard and fast. He grabbed one of her big tits in one hand and squeezed it, tugging on the nipple as his other hand gathered up her long, raven hair.\n\nJack could feel her shaking uncontrollably as he overloaded her body and mind.\n\n\"Jack! Oh fuck Jack! Yes! Take me!\" she pleaded quietly as he spanked her ass with his pelvis. His thrusting started to bump her against the door as she began to lose control of her muscle tone.\n\nHe was right there and so was she. He pressed her body against the door and changed to short, hard rapid thrusts as he bit down gently on her shoulder, the side of his horn pressing against her temple.\n\nHe heard her suddenly suck in a gasp as his 'alien' nature tripped her xenophilia. She reached up and grabbed the horn on the other side of his head and her body spasmed and clamped down on his cock as he drove himself deep one last time. Her body sucked and milked his cock as she squeezed him so tightly.\n\nDiana eventually released her grip on his horn and braced herself against the door panting heavily as he withdrew from her body.\n\nBreathing hard, Jack looked once more at the clock, cursed, and grabbed his clothes to duck into the washroom once more. When he came back out Diana was gone and Eve was standing there with the caps in her hand. They were the gold ones she'd had when she was on Allsa Komanae. He looked at them hesitantly then ducked his head down so she could put them on him. That done he kissed her once more and she pushed him back with a grin on her lips.",
        "He grabbed his suitcase and the ski bag and rushed out into the living room. SennLann jumped up to give him a kiss. The kids were all playing in the living room and were deep in play mode. Zaina and Adina spotted the new color on his horns and squealed excitedly. They rushed over and leapt up into his arms to climb onto his shoulders to touch the color. He felt them both sliding their clever fingers over the shiny surface.\n\n\"So pretty Papa!\" they purred in unison. The silky texture obviously triggering their unity.\n\n\"Thank you! Papa has to go so down you go,\" he said happily.\n\nThey scrambled down and gave his cheeks a kiss on the way by.\n\nHe bent down and gave Emily and Joseph a kiss and they went back to playing.\n\nJack looked around for Diana but she was nowhere to be seen.\n\n\"It's ok Jack. I'll let her know you said goodbye,\" Eve said gently.\n\nFrowning he nodded and rushed out of his apartment lugging his stuff with him.\n\nHe normally spent an hour or so with Diana after she had one of her episodes just to ensure she knew he was there for her but today... he sighed. Eve would have to bring her back to herself.\n\nThere was a taxi waiting for him and he jumped in. The flight to the Gate Terminal was short but when he rushed in he saw two impatient looking ebony Altarians glaring back at him. Their glares faded as they took in the new look of his horns.\n\n\"What did you do?\" Gee gasped.\n\n\"I did what you told me to do! I washed them. The damn stuff hardened and went all smooth!\"\n\n\"Cold water? You washed them in cold water?\" she asked calmly.\n\nJack blinked at Gee. \"What? No, I took a hot shower...\"\n\nThe two Altarians shared a pained look.\n\n\"So I should have used cold water?\" he asked in exasperation. \"How the hell was I supposed to know that?\"\n\n\"We are late! Can we go now?\" Bal said with a partial scowl as her eyes kept slipping up to his gleaming black and red horns.\n\nThey grabbed their suitcases and ski bags and walked up to the customs and security agent.\n\n\"Oh my god!\" the agent gasped gawking at his horns.\n\nJack looked at Gee. \"This isn't permanent is it?\" Gee just shook her head so Jack wasn't sure if she was answering him or was just disappointed in him. Again. He pouted.\n\nBal slapped a palm on the countertop and the agent jumped. She apologized and asked them their destination.\n\n\"Chrystan,\" Bal said tersely.\n\nThe agent's eyebrows rose. \"Chrystan?\" she asked in disbelief.\n\n\"Diplomatic visit,\" Jack offered and she went all dreamy eyed when she faced him again.\n\n\"Yes, the last Gate on the left,\" she purred to him and he smiled at her.\n\nHis escort pushed him away from the desk and set course for their Gate.\n\n\"Wait! Should we put on our warm coats before we leave?\"\n\n\"Chrystan's Gate Terminal should be warm enough and we'll change when we get there,\" Gee explained.\n\nJack hadn't had time to do any research on the planet or the people and felt totally unprepared. He froze in place and the two security agents looked back at him in frustration.\n\n\"This entire trip feels off. It's too rushed. I'm not prepared! I don't know the Shreen! I might do something embarrassing or diplomatically disastrous! What if I pick my nose and that turns out to be a declaration of war!\"\n\n\"You pick your nose?\" Bal asked with a frown.\n\n\"No! I'm just saying I might make some innocuous gesture that they mistake for an insult.\"\n\n\"Picking your nose in front of someone is rude on every planet and to all races.\" Bal explained in a matter-of-fact tone.\n\n\"Forget I said anything about nose picking!\" Jack barked.\n\n\"You don't need to worry about such things with the Shreen. They are a very relaxed and tolerant people. You may be yourself with them. That shouldn't cause too much chaos.\" Gee said dryly.\n\nJack took a deep breath and got his nerves back under control. He nodded to the two agents and they continued on.\n\nAs they walked up to the mirror surface carrying their tall ski bags Jack thought they looked like a family just going skiing. That made him feel better. He smiled at that thought and wondered what kind of winter wonderland they'd be stepping into on the other side. A brief tingle later Jack looked around with a weird feeling of d\u00e9j\u00e0 vu. The room was identical to the one they just left. There was no castles of ice and howling winds. The white domed ceiling was the same non-descript Gate room as before. He felt a little disappointed.\n\nThey walked to the customs and security agent and Jack perked up. Here was his first Shreen in person.\n\nIt was sitting inside a glass booth and chilly air was pouring out of the little window.\n\n\"Name, Department, and reason for your visit,\" the being droned then looked up. Eyes widened in surprise.\n\n\"Jack Danner, Altarian Ambassador. Uh, diplomatic visit with a little skiing thrown in?\"\n\n\"Jack Danner.\" The furred being's large eyes looked up. \"Ah, the horny one.\"\n\nGee snorted as Jack frowned at her.\n\n\"Horned one. I'm travelling with my security escort Gee and Bal.\"\n\n\"What's in the skinny bags?\" the agent asked.\n\n\"Our skis,\" he answered and got a blank look. \"They are long boards we attach to our shoes to glide quickly through snow for fun.\"\n\nFurry brows rose then the being shrugged. It pointed to the doors at the far side of the room and went back to ignoring them.\n\nThey made their way to the door but instead of opening to a vista of crystal spires and an endless expanse of white Jack saw a wide rectangular corridor sloping down as it went underground. It wasn't even made of ice, just a smooth white stone. They saw a Shreen walking quickly up the slope towards them.\n\nJack was now getting his first good look at one of the native population in motion and not mostly hidden inside a custom's booth. He took time to familiarize himself with its distinct characteristics. This one was tall, maybe a head taller than he was. The front side of its body seemed to be covered with a dense, felt like fur. A creamy white with darker tan rosettes and stripes. The back side may have been covered with long fur as he could see it swish around on her arms and legs. This fur was almost reddish brown. As Karrel had said their feet were wide and completely covered with the longer fur until it looked like the being was wearing big furry boots.\n\nAs he'd seen on the customs agent this one had large eyes, a deep grey color, and a black triangular patch which was the nose above a wide mouth. Its teeth were two grinding plates which just looked like wide bands of white teeth but with no gaps, at all. Tall, furry pointed ears projected upwards. The one approaching was only wearing a kind of kilt around its waist which went from hip to mid-thigh.\n\nAs it began to slow to a stop before them Gee looked to Jack who had begun to move forward lifting his hand. Gee blocked his arm with her elbow.\n\n\"Sorry, I just recalled. Keep your hands to yourself, at all times. Touching hands is only for sex,\" she said with a quiet voice.\n\nJack choked back his outraged response as he'd almost sexually assaulted someone with his first greeting. His face flushed with embarrassment and he stepped back as he watched Gee step forward to press her forehead to the Shreen... female.\n\nHe wasn't sure how he knew but his gut was telling him this was a female. The previous one he'd met had been male if he had to guess.\n\nBal mirrored Gee's actions then it was his turn and he stepped forward with a nervous smile and noted she appeared... excited.\n\nAfter they pressed foreheads she glanced up in wonder at his horns then addressed him. \"Hello! Welcome to Elleltris, the capital city of Chrystan. I am Tanz,\" she said in a higher pitched voice than he'd expected for so large a being.\n\n\"I'm a little nervous myself,\" he blurted with a self-conscious grin.\n\n\"Jack, that's her name. Tanz,\" Gee corrected him gently.\n\nHis face dropped. \"Oh! I'm so sorry! I hate to admit but I came here unprepared. I know nothing of the Shreen so I apologize in advance if I make some socially inappropriate mistakes.\" He glared at Gee to remind her of her last second reminder.\n\n\"It's quite all right. We're a tolerant species. This you will learn quickly. We don't take offense without extreme provocation. Unlike one vile race who no longer exist due to your heroic actions!\" she finished with a gush.\n\nHe blinked at her in confusion.\n\n\"She speaks of the Allsa Komanae. The Shreen have the most personal of reasons to hate the Allsa Komanae.\" Gee explained.\n\n\"Indeed! They stole our home from us!\" Tanz nodded emphatically making the long fur sway.\n\nJack realized his impression of Tanz's size was being fooled by the thick mane of long fur on her body. If he took that into account she was actually rather slim, just tall and well furred.\n\nHe looked at Gee. \"Does everyone know my involvement with their genocide?\" he asked quietly.\n\n\"Such information proved to be impossible to contain,\" Gee replied nonchalantly as she seemed personally pleased it had been leaked so widely.\n\n\"We believe it was divine retribution, not genocide. Not that we are a religious people,\" Tanz corrected with a smile.\n\nJack wasn't sure how to respond to that so he just smiled.\n\n\"I am the Queen's Facilitator. I will be your contact during your visit on Chrystan.\" Tanz looked at the large bags they were holding. \"What are these?\"\n\n\"Skis. We use them for gliding quickly over snow. For fun and exercise. I understand we will be spending some time at one of your hot spring resorts?\" Jack asked and Tanz nodded. \"I hope to use them while we are there.\"\n\n\"Most definitely! The storm outside is expected to end in a day or so.\" Tanz smiled. \"Tonight though we are throwing a dinner party for your visit so you may meet the Queen and the King in a less formal setting. This is something else you will discover about the Shreen. We don't insist on a lot of grandiose pageantry or ceremony.\"\n\nJack smiled gratefully. \"That sounds wonderful!\"\n\nTanz couldn't deny her curiosity any longer. \"Your magnificent horns, they look different from the image I just saw before I came to meet you. They look...\" her words failed her.\n\n\"Shiny?\" Jack offered but she shook her head still struggling to find the word. He sighed. \"Bloody and vicious?\"\n\n\"YES! Wait- no. Aggressive? Something of that nature,\" Tanz shook her head and just smiled at him. \"They are most impressive but they don't look like they did in the image.\"\n\n\"Yes, well... I had a little accident this morning. I was out running and to avoid colliding with someone I jumped aside and hit a tree. The tree sap stained my horns red. I'm hoping it fades and goes back to the original color.\"\n\n\"You weren't hurt?\" she asked in surprise.\n\n\"No, getting hit in the head doesn't seem to be as dangerous as it was before I grew these,\" he said pointing up with a self-deprecating grin. \"I'm much more hard headed these days.\"\n\nShe smiled back at him. \"Shall I take you to the palace?\"\n\nJack nodded and they followed her down the ramp. When they passed through the doors at the bottom Jack braced himself for an icy blast but walked into a cool breeze instead. Not frigid but he could see how he would shortly find it to be uncomfortable. They were in a small... parking lot with just two wheeled carts in it. One had seats for two and the other was longer with a cargo bed and seating for eight. Tanz gestured for them to put their bags on the back of the larger vehicle and she strapped them down when they were done. Gee and Bal were leaning against Jack while they waited for Tanz. He looked down at them as he felt them shiver.\n\nWhen she turned from the vehicle she frowned in concern. \"My apologies for the temperature. I can see you're finding it to be a little too cool for your comfort. This is how we keep all of our living and working spaces. I'll get you some warm outerwear for your stay.\"\n\n\"Thank you!\" Jack said.\n\nShe gestured for them to get onto the cart. She climbed up onto the front seat and Jack moved to follow her onto the passenger seat but Gee pulled him after her onto the second-row bench seat. Bal pushed him to the middle then tucked her body up against his as Gee pressed herself against his other side. Smiling gently down at them he pulled his arms up and over their shoulders and hugged them against him pulling them in tighter. Gee let a sigh slip from her lips as the heat from his torso soaked into her chilled body. She studiously looked away, avoiding his amused look.\n\nTanz gave the cart their destination then turned in the seat to look back at them. She smiled at the Altarian's method of staying warm.\n\nThe cart rolled back smoothly and moved them out into another long rectangular corridor of the same white stone that stretched off into the distance. Jack finally realized they were going to remain underground.\n\nTanz saw his epiphany and grinned. \"Yes, we don't live on the surface. We like the cold but we've adapted really well to living underground and it's so much easier to control the climate down here.\"\n\nThe tunnel they were gently rolling and bouncing through was brightly lit from evenly spaced domes in the ceiling. The walls were completely covered with some kind of leafy plant life. Their oxygen scrubbers and suppliers.\n\n\"The palace?\" Jack asked.\n\n\"It's underground too. You were expecting a tall pointy structure built atop a mountain and made from ice perhaps?\" she answered with a grin.\n\nHe nodded with an embarrassed smile.\n\n\"Not practical at all but very dramatic. We actually considered building one and got so far as having an architect draw up plans but no one wanted to live or work in such a drafty building. Ice buildings make their own air currents. Pah,\" Tanz snorted with a grin.\n\nThe corridor continued to slope downwards gradually. \"How deep underground are we going?\" Jack asked.\n\nTanz's eyes widened. \"I should have asked, do you have a fear of enclosed spaces?\"\n\n\"What? Oh, no. I was just curious,\" Jack clarified. He looked to Gee and Bal and both shook their heads. They looked toasty and content.\n\n\"Good. Well, the deepest we typically go is around thirty levels, most only being as tall as this one though we sometimes have much taller chambers. Any deeper and lighting the space isn't cost effective and we don't have plants that like growing that deep so air quality is at risk,\" the Facilitator explained.\n\nThey saw a brightly lit exit approaching. The road continued on but they were slowing. There was a fair amount of activity at the exit as well. Jack wondered if it was a welcoming committee or some kind of festivity to celebrate their arrival. As they got closer the cart rolled into a parking lot and found a spot to recharge in. Once the engine switched off Tanz jumped off and untied their luggage.\n\nJack had to nudge Bal to get her to disengage and move off the bench to go bet her bags. Gee stayed close to Jack until he slid off the bench then she was forced to get up and jump down to get her own bags.\n\nCarrying their stuff they walked through the large sliding glass doors into a market place. Jack felt stupid for assuming they were there to see him. These beings were shopping for their daily needs or selling their produce or wares. The sights and sounds of the marketplace brought Jack sweet memories of the times when he and his mother went to a local market to buy food.\n\nEveryone was wearing some variation of the kilt Tanz had on though some vendors were wearing aprons that went up to their chests as well.\n\nHe finally caught a physical characteristic that seemed to differentiate the sexes. Males seemed to have vestigial fangs projecting slightly over their lower lip. The females did not.\n\nOutside of the plants for sale, almost every bit of open wall space housed the green plants he'd seen in the corridor they'd driven through.\n\nThey made their way through the wide lane running down the middle of the space and people nodded at Tanz and she responded. She said a few words to various individuals on the way and Jack noticed some anxiety she seemed to be able to calm with a word or two. He also received his share of curious looks but none stopped them or interrupted them in any way.\n\nBeyond the large market place they entered another vast chamber which again was filled with people going about their business. This was a shopping district. It almost reminded Jack of one of earth's mega malls except the products on display had a more hand-made, craftsman quality to them. There wasn't a lot of tech for sale though the stores themselves used tech to track the transactions and to advertise their products. He saw a few people consulting their com units for information but for the most part the Shreen just talked to each other directly. He witnessed some good natured haggling but that was the extent of the confrontational behavior he saw.\n\nIt was true that some had stern expressions and moved about their business with a little extra haste but to Jack that just seemed normal for a crowd this size. Certainly it didn't hint at this unrest. Did it?\n\nOnce more, Tanz was called out to and answered back as they made their way through the area. She was obviously well liked and respected.\n\nThey finally exited the shopping district and passed through a wide circular court yard with lanes leading off of it like spokes. Ahead of them were some very wide doors.\n\n\"The Royal Palace,\" Tanz said proudly as she opened the doors and gestured for them to enter. Immediately inside the door was a large landing with a railing on the far edge. Off to either side of the landing were curving ramps leading downwards. They moved closer to the railing and saw the space down below was a vast audience hall with a raised dais at the far side with two chairs. For the Queen and King Jack guessed. Rows of benches faced the two chairs and directly before the dais was a small podium where someone would stand to address the royal couple.\n\nThe most spectacular thing about the room were the brilliantly colored and lit windows running from floor to ceiling. Jack grinned happily at how beautiful the colors splashing across the audience hall looked. He turned to smile at Tanz and he saw the delight in her own eyes.\n\n\"It's wonderful!\" he said.\n\n\"It is. Come on. I'll show you to your rooms,\" she said moving towards the left hand ramp.\n\n\"We're staying in the palace?\" Jack asked in surprise.\n\nTanz looked at him in concern. \"You'd rather not stay in the palace?\"\n\n\"No, it would be lovely! You just surprised me,\" he assured her.\n\n\"Special guests always stay in the palace, not that we get many. The dinner party will be in the great dining hall which is a few rooms over in that direction,\" she pointed to the right side of the Audience hall. \"The royal apartment is up a few levels, and your accommodations are a few chambers to the left.\"\n\nThey reached the base of the ramp and Jack looked up. Around the edges of the huge chamber the walls were formed with ridges and gussets. At the top it looked like the canopy of a tree and the bottom looked like roots. The whole room had an organic feel to it. Even the benches seemed to rise up out of the floor.\n\n\"No public audience with the royal couple today?\" he asked and his smile slipped away when he saw a troubled look pass over the Facilitator's face. She quickly hid it behind a smile.\n\n\"No, they're... taking a short break from that activity,\" she explained but he could tell she was uncomfortable so he withheld his next question.\n\nJack wondered if the Queen and King were too busy dealing with the unrest Elissa had asked him to investigate.\n\nTanz led them through a corridor to the left and they passed a beautiful library and a lounge before they reached the guest suites. She took them down the hall to the last three doors.\n\n\"The rooms are largely identical in amenities so you can choose the arrangement of who gets which room as you like. I will go make arrangements to get you the warmer outerwear and will pick you up for the dinner party. The dress will be informal. There is no need to wear finery,\" she informed them.",
        "\"There are inner doors between the rooms. Do you need these unlocked?\"\n\n\"No-\" Jack began.\n\n\"Yes,\" Gee and Bal insisted.\n\n\"I will take the first room and Bal will take the third. Jack will take the middle,\" Gee explained.\n\n\"OK,\" Tanz replied and opened the middle room's door. \"There are mechanical locking mechanisms on each front door which can be locked from the inside at night if that makes you feel more secure. The palace is the safest place on the planet and the planet is a very safe place.\"\n\nShe went to the inner access doors and unlocked one on either side of the room. She pointed to the sliding panels at the far end of the room. \"The bed is behind the privacy screens. The cleansing facilities are behind the first door inside the room. You can press that button on the wall by the door to summon any kind of assistance you may need.\"\n\nShe looked at them with a smile. \"Is there anything you need right now?\"\n\nJack looked at the two Altarians who looked back at him and they all shook their heads.\n\n\"Ok, good! I will come pick you up in a few hours. You are welcome to explore the palace if you like. The only off limits area is the royal apartments but doormen are there to prevent uninvited guests. You will get to meet the royal couple tonight.\"\n\n\"Thank you so much Tanz!\" Jack said and she smiled as she leaned forward. He suddenly realized what she was doing and moved to gently touch his forehead to hers.\" She repeated this with the Altarians then left the room.\n\nGee and Bal immediately pulled Jack over to a wide couch and sat him down on the center of it. Then Bal rushed off to the bedroom while Gee settled herself on the couch next to Jack, lifting his arm to squeeze herself against his side. Bal returned with a blanket. Jack lifted his other arm as Bal tucked herself against him. The two agents pulled the blanket up to cover all of them.\n\nJack felt them shivering against him so he put his arms around them and pulled them closer. They rested their faces against his chest to get the warmth radiating from him.\n\n\"How can you be so warm?!?\" Gee grumbled.\n\n\"Do not complain! He is the only heat source we have right now,\" Bal grumbled back.\n\n\"I would have thought you two would have wanted to explore the palace right away, learn all the nooks and crannies,\" he teased.\n\n\"We have memorized the layout of Elleltris,\" Gee said cuddling in closer. \"Now hush. You should get some sleep as the party is likely to run late and you should be sharp when you meet with the royal couple.\"\n\nJack snorted quietly as he was sure they just wanted their heater to be still. So he was still and warm and soon they all dozed off.\n\nChapter 4\n\nAs royal parties went, this one sucked.\n\nAfter the friendly welcome he'd received from Tanz and seeing how friendly everyone was, he was surprised by how stiff the royal couple behaved.\n\nThe Queen was a beauty! Tall, with dark grey long fur on her reverse side and brilliant white fur with dark grey rosettes and stripes on her front side. Light grey eyes and a grace about her that commanded respect. Jack thought she was also sad and hiding it poorly.\n\nThe King was almost the polar opposite in coloration. His long fur was white and the short dense fur on his front was dark grey with white rosettes and stripes. His eyes were deep blue which was apparently a new color for the Shreen since coming to Chrystan. Their environment and diet had changed and these changes were manifesting in new coloration in eyes and fur in some cases. Exciting times ahead!\n\nAt the head table he was seated next to the King and Tanz was on the other side of the Queen. The royal couple wasn't speaking much to each other and the head table was drawing anxious looks from the other tables.\n\nThe food had been unique and he'd enjoyed it after being assured it was safe for human and Altarian physiologies.\n\nJack was tempted to leap to his feet and break out his amazing disappearing napkin trick to try to pump some life into the party. He caught Gee's eye at the first table where she was sitting with some of the senior council members and their spouses. He pantomimed the beginning of his magic trick and she shook her head vigorously with wide anxious eyes so he slumped back in his chair and pouted.\n\nThe servers came by and cleared away the plates. Music began to play and there was an almost palpable sense of relief as this appeared to indicate the meal was over. The Queen rose and walked away with Tanz in her wake. They seemed to be making their way over to a group of older females on the far side of the room.\n\nJack heard the King sigh heavily and he caught him watching the Queen walking away.\n\nHe couldn't take it anymore and leaned his head forward to catch the King's eye which swung back to him.\n\n\"I'm sorry your majesty if I'm intruding but you seem a little sad. Would you like to talk about it?\" Jack asked.\n\n\"Your majesty? I haven't heard that one yet. People just use the title. Since we're both... consorts of Queens, could you just use my name? It's Tyg.\"\n\nJack's hand twitched as he stopped himself from reaching to shake Tyg's hand. \"Yes, of course Tyg. Please call me Jack.\"\n\nTyg pushed his chair back and stood. \"I need a drink, Jack. Join me?\"\n\nJack stood as well. \"Lead the way.\"\n\nThey made their way down from the table towards a counter where guests were getting sweets and drinks. Tyg looked at the selection of bottles and frowned. \"Lars, where is the local brew?\"\n\nA male standing beside the table gave the King a pained look. \"I was asked not to bring it.\"\n\nTyg glanced over to the table the Queen was standing before with her back to them. He looked back to Lars. \"The Hra Council?\"\n\nLars nodded unhappily. \"I was forbidden to bring it in... so I left a bottle outside the dining hall in the access way cooling in a chiller,\" he said with a rebellious little smile.\n\n\"You are salt!\" Tyg cheered quietly and Lars worked to hide his grin, turning his back towards the table of elder females. The so called Hra Council Jack guessed.\n\nTyg looked desperately at Jack. \"I cannot leave the dining hall before the Queen but you... you could slip out and bring back that lovely bottle for us.\"\n\n\"Certainly! Which door?\" Jack said with a smile.\n\nWithout being obvious, Lars gestured to the servant's entrance in the corner over his shoulder.\n\nJack nodded and nonchalantly wandered away and felt eyes on him as he approached the door. He turned and saw Bal staring at him sternly.\n\n\"What are you up to?\" she asked.\n\n\"Ah! So good of you to join me. Come with me for a second,\" he said scooping her up against his side. She wanted to protest but his heat felt good. She and Gee were wearing their thermal undergarments but it still wasn't enough. They wanted to go back to the room and hide under the blankets.\n\nJack positioned her in front of the door and pushed it open. \"Keep this open just a little, ok?\" then he slipped out into the hall before she could protest. He spotted the chiller and lifted the bottle out of it. There was no label but this had to be it as he saw no other bottles. He slipped back through the door to see Bal glaring at him. \"Hey! I'm on a diplomatic mission here!\" he scolded her playfully and moved away before she could interfere.\n\nThe King's expression was priceless as Jack arrived. He scooped up two very small glasses and led Jack to a small sitting area for two at the back of the dining hall. He sat and gestured for Jack to take the other chair. He put the glasses on the table and Jack put the bottle on the table between them. Tyg twisted the top oddly and the bottle was open. He poured a small amount in both of their glasses and Jack's eyebrows went up with how little was in his glass. He was a little worried at its strength.\n\n\"This is Lussht. You have to start small. Introduce your body to it gradually,\" Tyg explained.\n\nThey picked up their glasses but before Tyg could drink Jack caught his attention.\n\n\"We should toast.\"\n\nTyg looked at him. \"What's that?\"\n\n\"When people share a beverage like this we traditionally say something we are honoring by sharing the drink. We say something like 'to a successful endeavor' and then we drink. This shows we honor the person or thing we're toasting,\" Jack explained.\n\nTyg smiled. \"I like that tradition! Let's do it! You're the guest so you do it first!\"\n\n\"Ok, for my first toast I'd like to honor something that makes life so much better. To love,\" Jack said and raised his glass.\n\nTyg froze and looked at Jack's honest gaze. He looked like he might argue but he glanced across the room at the profile of the Queen and the protest died on his lips. \"Yes... to love.\" They drank.\n\nJack felt the cool liquid slipping down his throat until it landed in his stomach. The cool sensation remained in his throat but his stomach bloomed into warmth which slowly ebbed.\n\nJack was trying to grasp the flavor but it eluded him. It was good but he just couldn't place it. He smiled across the table into the twinkling eyes of the King. \"I like it!\" Tyg grinned and poured two more. Just a tiny bit more this time.\n\n\"My turn.\" He paused and thought about it. \"To freedom,\" he finally said.\n\nJack raised his glass and nodded. \"To freedom.\" They drank.\n\nThe liquid felt like it rushed down his throat, this time on what felt like the slick patch of ice left by the first drink and the bloom of heat was larger. The flavor... damn. He couldn't catch it yet but he really liked it! \"Oh, that's nice!\" he sighed.\n\nTyg poured two more with a little more. He nodded to Jack indicating it was his turn.\n\nJack thought about his next move carefully. Then it came to him. \"To second chances.\"\n\nTyg paused to think about that. His eyes were drawn across the room and he nodded slowly before looking back at Jack. \"To second chances.\" They drank.\n\nJack held himself very still as the third shot seemed to skip his throat entirely and hit his stomach in record time, the heat bloom exploded and went right to his brain stem. The room went soft focus for just a moment and then settled down into a calm, happy hum.\n\nTyg's eyes kept tracking back to the Queen and he bit his lip.\n\n\"Should... should we do one more?\" Jack asked carefully as his lips seemed to be moving on their own like they had something to say.\n\n\"Yes... but just the one.\"\n\nTyg poured and Jack tried to focus on how much he'd added to the glasses and if it was more than the last time. He shrugged as it was too hard to recall.\n\n\"My turn,\" the sad King said. \"To regret.\"\n\n\"No! I won't drink to that thief!\" Jack growled. He tried to calm himself but his mouth had something to say. \"Regret sucks the joy out of life. The remedy for regret is Action! Perseverance! Honesty! Commun- Comm- Communic- Talking! Give me one of those and I'll drink!\"\n\nTyg stared at the glowering Human with the frightening horns and nodded. \"All of them!\"\n\n\"Aye!\" Jack grinned widely. \"Now you're talking!\"\n\nThey drank one last time.\n\nJack could feel the planet moving under his feet and heard the heart beats of everyone in the room. He wasn't sure what had been in his glass but he was pretty sure it was pretty FUCKING FANTASTIC! He felt like he could do anything! His emotions swelled.\n\nHe smiled at Tyg who was looking across the room at the Queen once more. \"Talk to me Tyg!\" he said leaning forward... or the room did.\n\n\"I'm going to miss my wife,\" the King said quietly.\n\n\"Why would you have to miss her?\" Jack asked, confused.\n\n\"When I leave. I will miss her so much.\"\n\n\"Who is forcing you to leave?\" Jack asked looking around the room for the bastards who would do such an awful thing.\n\n\"She's a young Queen. Youngest ever they say. The Hra Council are 'assisting her' but they just make her follow old rules. I can't do anything to help her. I'm not allowed to do anything!\"\n\nTyg's incredible sadness swept over Jack and he struggled to keep from crying. He- he couldn't just stand by and see love destroyed! He took some deep breaths as the King looked in his eyes. \"Do you love her?\" Eyes flared and Tyg nodded emphatically. \"Do you remember when you fell in love with her? Do you remember why you fell in love with her?\" Jack asked.\n\nTyg gasped a deep breath of his own. \"Yes! She was so young, we both were, and she was so brave when they named her Queen!\"\n\n\"Is she still that woman?\" Jack asked, the answer seeming so clear to him.\n\n\"She's losing her nerve, they are taking it from her.\"\n\n\"Who is?\" Jack gasped.\n\n\"The Hra Council. They never liked me. I wasn't like them. I'm not from their class.\"\n\nJack reached across the table and grabbed the King's forearm in a tight grip. The male froze looking across the table.\n\nJack's blood was suddenly boiling. \"What is your wife?\" he growled.\n\nTyg's mouth moved then he was able to speak. \"The Queen.\"\n\n\"What are you?\"\n\n\"The King?\"\n\n\"Are you asking me?\" Jack said quietly.\n\n\"No! I am the King!\" Tyg blurted.\n\n\"What does a King do for his Queen?\" Jack stared deeply into Tyg's eyes and the male froze once more as some intimate things popped into his head. Jack frowned. \"She's under attack. What do you do?\"\n\n\"Oh! Defend her!\" Tyg gasped in sudden comprehension.\n\n\"But you just told me you were running away!\" Jack growled.\n\n\"She- she doesn't listen to me!\" Tyg tried to explain.\n\n\"Has she lost faith that you will defend her? Stand by her? Who is more intimidated by this council?\" Jack asked with wide eyes. He released his grip on the King's arm.\n\n\"Oh! Oh. But- I said some awful things,\" Tyg said.\n\n\"And you've forgotten how to apologize? What matters most here? Ask yourself that, ask yourself how you should have acted, then ACT!\" Jack thumped the table with a fist and the bottle and glasses jumped as did the King.\n\n\"You're right. I- I have to act!\" Tyg leapt to his feet and rushed off across the room.\n\nGee and Bal were suddenly by Jack's side. \"What have you done?!? What did you do?!? Are you drunk? Did you grab the King? What did I tell you about keeping your hands to yourself?\" Gee hissed rapidly but quietly at him.\n\nHe grinned happily and shushed her, pointing to the King and Queen.\n\nThey were standing off to the side with their foreheads pressed together. The King was speaking quietly but quickly to his Queen. Then he was speaking earnestly but forcefully to her but the Queen's reaction was just to smile wider and wider. Finally he got down on his knees and bowed deeply to her. She said something and he quickly climbed back to his feet and they rubbed their faces. The room erupted into cheers. The royal couple smiled bashfully and nodded to the council members and their partners.\n\nLooking lovingly into the eyes of her husband she pulled her shoulders back and walked back to the Council of Hra. She bowed slightly and said something they really didn't seem to like. Some began to argue but froze when the Queen snapped her teeth together. She tilted her head and each of the old women got up and bowed to her. She said something else and they slowly walked from the room followed by a very happy Tanz.\n\n\"What did you do?\" Gee asked again but softly this time as she watched the royal couple approaching with wide smiles on their faces. Jack stood and his smile matched theirs.\n\n\"If I might have a moment with Ambassador Danner?\" the Queen said to the two Altarians. Gee and Bal nodded and slipped away to give them privacy.\n\n\"May I join you for a drink?\" the Queen asked.\n\n\"Yes! Please!\" Jack gushed as the King added a chair to the small table. Lars handed the King an extra glass with a huge smile on his face.\n\nOnce they were sitting Jack wondered how he'd managed the whole standing and sitting thing with his head so far up in the clouds. Tyg poured for the three of them, the Queen getting the smallest amount. She frowned at him but he whispered something to her and she smiled once more.\n\n\"I need to make a toast, to honor the most important thing in life. To love,\" Tyg said holding his glass up. The Queen matched his gesture and when Jack said 'To love' she said it as well. They drank.\n\nJack held the edge of the small table as the room began to accelerate. When he caught up with the room he smiled at the couple. \"My goodness this is strong stuff!\" he laughed.\n\nThey laughed with him.\n\n\"I cannot tell you how grateful I am you talked me out of my madness!\" Tyg said to Jack sincerely.\n\n\"I am eternally grateful as well!\" the Queen chimed in.\n\n\"There is no battle more noble of purpose than the one to protect love,\" Jack said with a wistful smile.\n\n\"That's lovely! Who said that?\" the Queen asked.\n\nJack looked around in surprise. \"I thought I just did.\" He looked at his glass. \"This is strong stuff!\"\n\nThe royal couple burst into laughter and Jack joined in without knowing why. It just felt really, really good!\n\nAnother toast was raised and this time the Queen insisted on toasting to Jack. He found that to be extraordinarily funny and they only stopped giggling to toss back the next shot.\n\nThe Queen was now up to a full glass like they were but still well behind on becoming drunk. She still had her daunting intellect front and center. \"Jack, would you join us for one more last drink in our apartment. We have the most extraordinary view we'd like to share with you.\"\n\nThe King looked at the Queen with a big grin and nodded to Jack.\n\nJack certainly didn't see anything wrong with having just one more then he'd head off to his own apartment and that lovely bed he'd glanced at earlier. He nodded and they all stood. He couldn't get over how stable his body felt. No swaying, no overly loose muscles, he was able to move around with no sign of the whirling his brain was going through. Neat trick!\n\nGee and Bal approached seemingly ready to 'help him' walk back to their room. The Queen intervened.\n\n\"Jack will be joining us for just one more drink in our apartment,\" she said gently but it was the Queen speaking. Her tone brooked no argument.\n\nThe agents glanced at each other and looked to Jack who smiled happily.\n\n\"I'll be a long shortly. You two should head off to bed now. I'll see you in the morning,\" he said.\n\nKnowing Jack was as safe in the palace as he was at home and seeing no alternative they bowed to the royal couple. With a final glance at Jack they moved off.\n\n\"This way!\" Tyg said playfully and moved quickly towards the side door where the Lussht had been stashed. The bottle in question was clutched in his left hand.\n\nThe Queen moved after him and Jack felt himself being swept along after them like a bit of fluff caught in the turbulence of a passing skimmer.\n\nTyg took them down the service way, past the kitchen, up a hidden staircase and through two other corridors to get to a lift that brought them up two more levels. As they stepped out of the elevator Jack saw two larger Shreen standing on either side of double doors. They stood taller as the royal couple approached and Jack saw them smile slightly when they saw the happy smiles on their Queen and King.\n\n\"Good night!\" the Queen said to them and they nodded. Jack and the King nodded to them in return and then they were inside the apartment, the doors closed behind them.\n\nThe wide foyer led into a sunken living room with cushions everywhere! Beyond that though was a window. An actual window! They must have been at ground level! Jack felt his legs moving him across the living room and up to the window where he looked out at a valley which was currently being swept by winds and snow.\n\nThe view took Jack's breath away and his mouth hung open in awe. Again, his emotions felt swollen beyond his ability to contain them.\n\nHe felt a brief touch on his shoulder and turned. The Queen was standing very close to him with a glass in each hand. She lifted one for him and Jack took it. \"May I make a toast?\" he asked.\n\nShe nodded and he noted how incredibly lovely and soft her light grey eyes were now that they no longer held such sadness. He looked to the King who was reclining back on some cushions in the living room... pit. Well, that's what it looked like to Jack. Tyg nodded emphatically with a smile.",
        "Jack looked at the young couple, so much in love, and sighed. \"This is a special toast. To a loving couple who has rediscovered the truth about how strong they can only truly be when they are united by their love. To the Queen and King!\" Jack said sincerely and raised his glass.\n\nThey followed suit and the three threw back the undefinable elixir.\n\nJack found himself lying back against the cushions in the pit. He felt like he was floating in the clouds without a care in the world. Once more his emotions swelled to bursting and he gasped at the potent mix of bliss and despair that flashed by.\n\nHe heard a giggle to his left so he rolled his head slowly in that direction, careful not to hit the giggler with his horns. Pale grey eyes twinkled happily as the Queen rested on her stomach and elbows watching him. Tyg was on her other side smiling at Jack as well.\n\n\"See! He was only out for seconds! I told you he was made of tough stuff like a Ridger!\" the King said with a grin.\n\nThe Queen happily rolled her eyes as Jack looked at Tyg. \"What's a Ridger?\"\n\n\"I'm a Ridger! I grew up in a back country village on the continental ridge, the foothills before the main mountain range. Life can be tough out there but the tough survive.\" Tyg explained proudly. The Queen rubbed her face against his and he smiled.\n\n\"I believe the Ambassador-\"\n\n\"Jack, please!\" he begged.\n\nShe smiled at him sweetly. \"Then you must call me Lyn. In private only, of course.\" Jack nodded solemnly. She continued. \"As I was saying,\" she gently tugged the open neck of Jack's sweater down to expose the deep V of the slave band on his neck. \"Jack knows how to be tough and how to survive.\"\n\nTyg sighed in admiration when he saw the wide silver links of the necklace. That admiration turned to dismay when he saw the links were embedded in Jacks skin. \"Char! How-\"\n\nJack looked away, tears welling up in his eyes as his emotions once more threatened to overwhelm him.\n\n\"I'm sorry if I've hurt you Jack!\" Lyn gasped.\n\n\"I don't understand. How did you get this device connected to you?\" Tyg blurted.\n\nThe Queen turned to her husband. \"You remember Jack was kidnapped by the Allsa Komanae?\" He nodded. \"They took him to their home planet and put a slave color on him. He's been through horrific torture.\" She looked at Jack. \"I'm so sorry for reminding you.\"\n\n\"It's ok. The collar... it doesn't... speak to me of surviving. It reminds me of the victims who were killed by those bastards,\" he gasped. He bit down on his tongue to contain the truth.\n\n\"Every one of those deaths has been avenged Jack! You know this! It was at your hand!\" she insisted.\n\n\"That's right! I remember now! You killed them!\" Tyg said with a grin then flashed a worried look at his wife as Jack's grief over took him and he burst into tears.\n\nJack was having trouble breathing as his tears wouldn't stop. The mountain of grief and fear he'd been forcing deep into the recesses of his mind ever since he was rescued would no longer be denied. The Lussht disabled the locks on all of his mind's fortifications and the prisoners were all rushing out. He felt all the terror he'd experienced each time the Allsa Komanae lit up his nervous system with their slave collar and shock sticks. He experienced all of the dread of the damage they might be doing and the despair when the Chuuruthians informed him the collar couldn't be removed without permanent loss of sensation in unknown places. It all came crashing over him and he sobbed, muscles shaking.\n\nWhen he eventually came back to himself he discovered he was clinging to the Queen and she was clinging equally tight to him, her forehead pressed against his. Tyg had his arms wrapped protectively around both of them.\n\n\"Are you ok, Jack?\" Lyn asked gently.\n\n\"I- \" he cleared his throat. He realized he had to get it out now or he might never say it. \"I'm terrified of the collar. No... I'm terrified of how it took away my control. My illusion of control. It tore me wide open every time they punished me with it. It exposed me,\" he forced out of his tight throat.\n\n\"It can't do that anymore though, can it,\" her soft voice said gently.\n\nJack struggled to get his breathing back to normal. \"No... it can't. The receiver... it's burnt out. The ones who knew how to interface with it are all gone.\"\n\n\"So, you can let go of that fear?\"\n\n\"Yes... yes I can.\" He took some deep breaths then began to feel embarrassed for dragging these young people into his drama. \"I'm sorry-\"\n\n\"No! Don't deny the significance of letting go of this pain. I think you have been containing it all this time, yes?\" Lyn said sternly.\n\n\"Yes...\" he said with a faint voice.\n\n\"Now that you've set it loose how do you feel?\" she asked.\n\nHe thought about that. He looked inside and discovered he felt... better. Lighter. More relaxed. And exceptionally clear minded. The fog of the drink was completely gone!\n\n\"Good.\"\n\n\"Good,\" she repeated with a smile.\n\n\"You are a smart Queen!\" Jack said sincerely.\n\n\"She's the best!\" Tyg said from her shoulder.\n\nThey gently eased their grip on each other and they sat up to smile at each other bashfully.\n\n\"Thank you so much for that. I... don't know why my emotions became so intense and overwhelming!\" Jack exclaimed.\n\n\"Really? Huh. Lussht typically has a calming effect on Shreen though each batch is hand brewed and can have slight variations in its side effects,\" Tyg explained.\n\n\"Lussht? Now I know,\" Jack sighed.\n\n\"Jack?\" Lyn said just a little nervously.\n\n\"Hmmm?\"\n\n\"This may be totally rude and inappropriate but considering how intimate the night has been...\" her voice tapered off as she ran out of nerve. She glanced at her husband.\n\n\"May we touch your horns?\" Tyg finished for her and she gasped in relief as she looked hopefully at Jack.\n\nHe burst into a smile. \"Of course you can. They used to feel dry and a little rough but since I got that tree sap on them and accidentally bonded the stuff to them the feel is much different. He leaned forward a little and each lifted a hand to touch his horns ever so gently.\n\n\"They're really strong so don't be shy about it. The caps are still on aren't they?\" he asked.\n\n\"Yes, they are lovely. Why do you wear them?\" Lyn asked.\n\n\"The tips need to be covered because they are exceptionally sh- sh- sharp.\" The room went into soft focus for Jack again. He smiled as a blissful calm settled over him.\n\n\"What's happening?\" Jack asked Tyg.\n\n\"Are you feeling good again?\" the King asked.\n\n\"Mmm hmmm!\" Jack nodded with a grin.\n\n\"The waves have begun. Lussht stays with your system for a while. The waves of euphoria should diminish in intensity, eventually. Well, they do with Shreen.\"\n\nJack thought that was pretty funny because only seconds ago he felt clearer than he had in years. His chuckles turned into a laugh as Tyg and Lyn were drawn into his good spirits.\n\n\"What- hoo! What happens if I have more Lush?\" Jack asked as he got control of this laughter.\n\n\"Not Lush! Lussht! Drinking more just extends how long you get the waves- oh! Here come minnneeee...\" Tyg giggled quietly to himself as he slumped back to the cushions.\n\nThe Queen poured herself another glass and tossed it back. While she was gasping Jack grabbed the bottle and poured a little more for himself. Tyg shook his head at the offer.\n\nThe Queen got up and spoke into a little speaker on the wall. Gentle music began to play and she gracefully swayed around the foyer.\n\nGrinning madly Jack clambered to his feet and made his way up to the foyer. He danced up to the Queen as she danced around him. Jack closed his eyes and swayed to the music. It was kind of folksy and orchestral at the same time and Jack heard hints of classical in there as well. At least it had a beat he could move to. He was no dance expert but his current buzz removed all of his inhibitions. He was also still giddy from the sudden release of years of tension and anxiety. He saw the Queen watching him dance and he held out his hand to her. She glanced at it in surprise and looked over at Tyg who was watching them with a huge grin on his face. He nodded to her and gestured for her to take the hand. The moment Jack felt her soft hand in his he gripped it and pulled her in close to dance and walked her through a few steps. He spun her around the gleaming floors of the foyer and her eyes were sparkling with excitement. He knew his moves were sloppy but he had passion and she seemed to be enjoying herself. The music slowed down a little with a dramatic beat so he tried to do a tango but the complexity of the steps eluded him.\n\nLyn was making quiet trilling noises almost non-stop and dragged Jack back to the cushions of the living room next to Tyg who watched them with interest. She stretched out her body over her husband's and rubbed her face on his. She whispered something to him and his eyes widened. He looked over at Jack who blinked back at him curiously. Tyg nuzzled his wife and she trilled at him as well. She turned to Jack.\n\n\"You will join us in lovemaking?\"\n\nJack's buzz was happily humming through his nerves at the time so he didn't quite grasp what she'd asked. He smiled at her. \"Hmmm?\"\n\nShe was suddenly reclining on his chest, her face very, very close to his. She felt very good against his body. \"You will join us in lovemaking?\" she asked again, more insistently this time.\n\nThat got through but his ability to be shocked, embarrassed, shy, or intimidated were washed away with his inhibitions. He smiled up at her. \"But- but I don't know how Shreen make love!\"\n\n\"There is only one way to make love, Jack!\" she laughed.\n\nHe smiled in return as he looked between the two. \"No, no my young friends! There are many, many ways to make love!\"\n\nThe Queen trilled excitedly and rubbed herself against him. She reached out a hand to Tyg and he took the hand in his. Both closed their eyes in happiness.\n\nJack's mind was trying to tell him something. Something about hands. Meh. It couldn't be important.\n\n\"Show us! We want to learn!\" Lyn gasped as she refocused on Jack.\n\nJack laughed. \"I'm no expert. I just know a few things.\"\n\n\"Teach us!\" she trilled. Again Jack laughed at the happy enthusiasm. He was feeling so at ease he just nodded.\n\n\"Well, before I do I need to know something about what you do know. What is lovemaking to you?\"\n\nLyn grinned and squirmed on top of him in embarrassment and the pressure was beginning to wake part of his anatomy.\n\n\"We take our clothes off and Tyg lies on me or I lie on him and we hold hands and rub our bodies together until they connect and we mate.\"\n\n\"Ah, ok. That sounds very nice. What about before that? What things do you do to get excited?\"\n\n\"Before?\"\n\n\"Things you do that make you feel like mating?\"\n\nShe trilled and looked at her husband. \"We hold hands and rub faces,\" he suggested.\n\n\"Do you kiss? Are your lips sensitive?\" Jack asked curiously.\n\n\"Kiss? I don't know what that is,\" she said.\n\n\"May I? he asked the couple.\n\nShe nodded nervously and Tyg grinned. Jack took Lyn's head gently between his hands and caressed her mouth with his, taking small kisses as he went. He stuck with sensual surface kisses only. He smiled as he pulled back.\n\nLyn's eyes were wide and excited. \"Again!\"\n\n\"No, this time you do it with Tyg. Remember slow and sensual as you're just going for subtle feelings, like a tease.\n\nLyn scrambled over to her husband and climbed across his body. \"Slowly,\" Jack reminded her. She nodded then took Tyg's face in her hands and kissed him for the first time. He moaned then trilled loudly making his wife trill back happily. Jack thought their noises were sweet.\n\n\"Undress!\" the Queen commanded and Jack snorted. She looked at him questioningly.\n\n\"Take your time. Make the undressing part of the lovemaking,\" he suggested. They stared at him in surprise. \"You can take your clothes off one at a time while the other one watches or you can help your partner remove their clothes and excite their bodies as you do it.\n\n\"Show me!\" Lyn asked rolling off her husband to land on the cushions.\n\nJack nodded to Tyg. \"The Shreen don't wear a lot of clothes but you have this lovely kilt.\" Jack slipped the first knuckle of his index finger inside her waistband and slowly slid his finger across her stomach. She began to gasp as her stomach muscles trembled.\n\nHe found the kilt's fastener buckle and undid it at her hip. He tugged the corner of her kilt down exposing more of her tender lower abdomen. Jack kissed there and she convulsed. He pulled back and looked at her in surprise. Tyg was watching wide eyed.\n\n\"Are you ok?\" Jack asked.\n\nShe nodded and bit her lip so he peeled the kilt down a little more. He kissed this area and she convulsed once more and began to pant. Jack slipped the kilt down her legs and off. He picked up the scent of her heat and it was sweet and warm.\n\n\"She is very excited!\" Tyg said to Jack indicating the wet lips surrounding her opening. She was very small and not compatible even with his average human endowment so the Shreen weren't a race he'd be having sex with. The lips seemed to have short tendrils on them and they swayed with her excitement, spreading their lubricant around.\n\n\"Here is another way to make love. Oral sex. It feels very good and is a beautiful way to give your lover great pleasure.\" Jack said.\n\n\"Oral? Using your mouth? Down there? What about the sharp teeth in your mouth?\" Tyg exclaimed in shock.\n\n\"Lips and tongue, Tyg. Go ahead.\"\n\nThe male blinked at him, frozen.\n\n\"What's wrong?\" Jack asked.\n\n\"That's... not done,\" he said.\n\n\"Why? Is there a safety or health reason?\" Jack asked.\n\n\"No, no... it's not... natural.\"\n\nJack barked out a laugh. \"Sorry, nothing is more natural than giving your partner pleasure. If it's safe to do, doesn't hurt but instead gives great pleasure then do it!\" he said with a smile. Tyg still looked undecided and poor Lyn was shivering with need. Jack ran a fingertip over and around her opening, caressing the wet lips.\n\n\"YYYYEEEEESSSSSSS!!!!!\" Lyn cried out as she was finally getting some pleasure.\n\nJack looked at the slick fluids on his finger tip as the couple watched him. He put his finger in his mouth and the couple jolted in shock. He looked at them curiously as he licked the juices from his finger. She tasted like... honey! Slightly tart honey.\n\n\"She's delicious, Tyg! Seriously you should do this!\" he said.\n\n\"I- I don't know how! I don't want to hurt her!\" he blurted.\n\nJack sighed. \"Ok, watch and learn!\" He dipped his face down between her thighs and gently kissed and nipped at her inner thighs. Lyn was jumping, gasping and trilling constantly. Jack saw Tyg was still with him watching his every move. Jack stuck his tongue out flat and stroked it across her rippling lips.\n\n\"AAAAAAAAAAHHHHHHH!!!!!!!\" the Queen cried out in bliss.\n\nJack ran the point of his tongue roughly over the surface of her lower lips and she trilled loudly as her body shook. When he plunged his tongue into her opening while sucking on the lips her cries went ultrasonic and her hands grabbed his horns and pinned his face against her sex as she convulsed through an enormous orgasm.\n\nWhen she finally came down from her pleasure he pulled away and she reluctantly released his horns. Jack turned his wet face to look at Tyg. \"Completely natural pleasure. She likes it. Learn to do it.\"\n\nThe King nodded as he watched his wife panting with a blissful smile on her face.\n\nJack pushed himself up to his feet and wandered off to the kitchen where he quickly washed off his face. As he was drying himself his body went through another 'wave' and he came back to himself gripping the edge of the counter as his body felt like it was going to float up to the ceiling. He smiled as the calm surge settled through his body.\n\nHe made his way back and heard a gentle trilling coming from the pit. He made his way down and saw Tyg was on top of Lyn but they weren't moving. He thought this probably got the job done but a little movement might enhance it.\n\n\"Hey Tyg. Rock those hips, man!\" Jack suggested.\n\nTyg looked at him in question.\n\n\"Listen to the music and roll your hips to the beat.\" Jack demonstrated sensually rocking his hips to the music. \"Different music, different feeling.\" Jack was beginning to fade so he sat on the cushion next to the Queen and smiled down at her.\n\nShe smiled back but her face was contorting with the intensity of the sensations Tyg was giving her with the rocking of his hips. They'd connect just to pull away and connect on the other side. This constant tug and press amplified the sensations and she was losing her mind. When Jack lifted her hand to his mouth and sensually kissed each and every knuckle she was seriously racing up on her release. Her hips were moving with Tyg's and he was beginning his orgasm. She looked up at Jack as he put her finger inside his mouth. Her eyes rolled back as a mighty trill burst forth. Jack leaned away from the noises the two were making and released Lyn's finger. He pushed himself to his feet and found they were taking him to the front door.\n\nHe was suddenly tired and the couple behind him showed no signs of stopping. He opened the door and slipped out into the hall. He looked over his shoulder and saw one of the doormen smiling at him.\n\n\"They need some couple time. I'm- I'm gonna go back to my room... but I have no idea how to get there.\"\n\n\"I will get you there Ambassador,\" one said as the other nodded.\n\nJack nodded then followed his guide. He lost track of the turns until they were standing before the door to his room. \"Thank you!\"\n\nThe doorman nodded with a smile and walked away. Jack slipped into his room and locked the door behind him. When he turned to face the room another 'wave' washed over him. This one was bigger and left him very foggy afterwards. He came back to the feel of two hands pulling him across the room. His body tingled as hands undressed him for bed. He purred at the feeling of their soft hands removing his clothes. He reached forward to touch the female before him but she kept pushing his hands away.\n\nWhen Jack was down to his underwear Gee and Bal saw he was tenting them badly and shared a look. Gee pushed Jack back onto the bed and Bal, who was on the bed, pushed him to move up to the pillows. Bal turned and hopped off the other side to put away his clothes while Gee tried to tuck him in.\n\nGee found herself on top of Jack and his hands were squeezing her ass cheeks in a way she had to admit felt wonderful. She sighed and looked over at Bal who smirked with an armful of clothes and shrugged as she left the room to give them a little privacy.\n\nDeciding to do this quickly Gee pushed herself up to sit on his legs. She pulled Jack's boxers down far enough to free his cock. She marvelled at how hard it was then straddled it and rubbed herself up and down on it and felt herself getting wetter and wetter.\n\nJack was moaning with pleasure when she finally tilted him up and drove him deep into herself. She rode him hard and fast but he showed no sign of reaching his release. She was tiring when Jack reached down to grab her hips and began to thrust up into her. Gee felt like a leaf in the wind. Her loss of control was complete when her orgasm suddenly struck and he continued to thrust through the explosion of her pleasure. In desperation she threw herself to the side, pulling free to land on the bed beside Jack. She panted and shook through aftershocks.\n\n\"Bal!\" she called out once before closing her eyes and pulling the blanket over her head.\n\nHer partner came back into the room and saw Gee was under the sheets and Jack was... exposed and very much still excited. Bal scowled at the lump of her partner under the sheets then walked closer to see what condition Jack was in.\n\nHe'd obviously drunk something that was impairing his ability to think. His eyes were rolling as he lay on his back. She looked down at his cock and it was large, hard and throbbing. She reached for it then pulled her hand back. She looked closer at his face and was caught when his arms went around her. His hand gripped the hair on the back of her head and his mouth was on hers and he was kissing her so deeply and sensually.",
        "Her mind fluttered as she tried to react, to push him away, but the truth was... she liked him. He was childish and silly but in his heart he was a good person. There was also the fact that she had no suiters on Altaria. Security Agents don't get a second look from Altarian males. She needed to get her pleasure from time to time. She knew Jack could make her feel good... ah, fuck it. She wanted him.\n\nBal's arms went around Jack's neck and she kissed him deeply in return. Suddenly he rolled them over and his warm body was pressing her down on the mattress. Fuck, he felt so good! They rocked together for a minute until she was almost crying out for him to enter her when he raised his hips. She reached down and guided him to her opening and gasped when he slowly pushed himself in deeper and deeper.\n\nShe knew in his drunken state he was probably imagining Queen Elissa or one of the ladies he lived with but for now, for this moment he was with her. He felt good! Big! She felt so full and warm. This damn planet was so freaking cold! She wasn't cold now!\n\nJack's hips began to thrust faster and faster and she could hear him begin to rumble deep in his chest. That made her tingle. His teeth grazed her neck and she couldn't prevent her instinctive jolt of primal fear quickly followed by a wave of relief and a huge surge of pleasure as her release washed over her mind.\n\n\"Oh god Bal! You're so beautiful!\" Jack moaned as he erupted deep within her.\n\nShe froze. Her sexual bliss was still flaring but the warmth that exploded through her now came from a different source. She clung to his large body soaking in the contact, the closeness, his connection to her.\n\nWhen she came back to herself she was still under him... but he'd fallen asleep. He was incredibly heavy, he wouldn't wake up, and she couldn't move him.\n\nStupid human.\n\n\"Gee. Wake up.\"\n\n\"Hmmm?\"\n\n\"Help get him off of me!\" she growled.\n\nGee tugged sideways from the top while Bal pushed from the bottom until he rolled over onto his back. Gee smirked at Bal then climbed under the warm blankets to cuddle against Jack's warmth.\n\nBal pulled up the blanket as well. Then grudgingly tucked herself against Jack's other side.\n\nStupid warm human.\n\nShe couldn't keep the little smile from her lips so she pulled the blanket over her head to hide it.\n\nChapter 5\n\nJack awoke feeling the oddest sensations.\n\nFirst to catch his attention was the physical. His nose and his toes were cold but the rest of his body was hot!\n\nMore profound than this was the incredible feeling of lightness. He was almost giddy with a sense of relief... but from what? What did he do to feel this way?\n\nHe cast his mind back to the night before and... frowned. His memories were cloudy and jumbled and the bits he could pull out were almost surreal. Going further back he recalled Tanz bringing them to the royal dining room and meeting the cabinet ministers and their spouses. Ah! He needed to get some time to discreetly pick their brains about the unrest on the planet.\n\nThen he remembered meeting the royal couple. After the friendliness of everyone else he'd met they were surprisingly cold and stiff. Troubles in the relationship, he thought. They were so wrapped up in their own misery they wouldn't be aware of troubles in their kingdom. As a source of information on the unrest they were a dead end. As a young couple he hoped they could work it out.\n\nAs he continued on through his memories he remembered eating and being miserable then being with the King and drink- ah. He got drunk. Probing at the rest of his memories of the night was useless. They were a jumbled mess. What the hell had he been drinking?\n\nStill, for a night after a bender he felt good. So good! Almost like a runner's high!\n\nHe looked to his left and right and saw lumps under the blankets. He lifted the blanket and yup. His two heat seekers. The reason he was sweltering under the covers. Guh, he needed a shower.\n\nThere was no way for him to get out of bed without pulling the blanket down and he knew... fuck it. He needed out. Down went the blanket and the cold air hit his bare, sweaty skin. Yikes! He tried to get up quickly but got a few slaps from the two sleepy heads before he was able to walk down to the end of the bed and step off. He looked back and they'd already pulled the blanket back up over their heads once more.\n\nShivering, he grabbed his toiletry kit, gathered some clothes and made his way quickly to the bath room. The shower was enormous! He dumped his stuff on the counter, grabbed his soap and shampoo and stepped into the shower. The controls were relatively simple to figure out and soon he was standing in a vertical stream of hot water. He played with the settings and finally found a way to reduce the flow so it didn't feel like he was being pounded to the ground by a torrent. He let the heat soak into his skin as he lathered up and rinsed.\n\nHe remembered the caps and reached up to remove them before he washed his hair. He shut off the water and stepped out looking for a towel but there were none. He looked back in the shower and saw a setting for what looked like air dry so he pressed it. The stall was filled with swirling, hot and dry air. He ran his fingers through his hair and eventually he felt dry enough. He shut it down and went out to finish cleaning up.\n\nHe felt clean, refreshed and still remarkably light. He buffed his collar with a small hand towel he found then pulled on his clothes. As he exited the bathroom, Gee and Bal brushed past him to get into the bathroom. They were moving stiffly and had dour looks on their faces. They really didn't like the cold. Now that he was dressed he was... comfortable. He didn't know what the plan was today. Tanz would be by... in about forty minutes to fill them in.\n\nHe poked about in the room until Gee and Bal came out of the bathroom. They were still moving a little stiffly and he suddenly recognized their movements from how Leffera and Karrel were after he'd been a little too aggressive with them during lovemaking. His jaw dropped and he moved to apologize.\n\n\"We will not speak of it. Nothing. Happened.\" Gee said looking him right in the eye.\n\nJack blinked, looking between the two agents then nodded.\n\nGee pointed to the couch and Jack moved to sit in the middle with a resigned sigh. They tucked themselves in next to him and Bal pulled the blanket over them.\n\n\"Could they not add a heater to the guest suites?\" Gee grumbled.\n\nBal didn't respond to her partners complaints.\n\n\"I know you don't want to speak of what happened last night but could you clue me in to what happened after dinner?\"\n\nGee looked up at Jack's face in surprise. \"You have no memory at all?\"\n\nHe fidgeted. \"Well, I have some brief flashes but most of it is either gone or bizarrely surreal.\"\n\nGee grunted in annoyance.\n\n\"You spoke with the King and he seems to have reconciled with the Queen. They were very happy when we last saw them. They took you up to their apartment for a nightcap.\" Bal explained.\n\nGee and Jack both looked at her in surprise. She was usually so quiet.\n\n\"What? It's what happened!\" she scowled and burrowed a little closer to Jack. They sat there on the couch for the next half hour until there was a knock on the door.\n\nBal threw back the blanket and leapt to her hooves to answer the door. She returned with Tanz who saw Jack and Gee getting off of the couch and folding the blanket.\n\n\"Good morning! Again, I apologize for the temperature. I have been assured your warmer outerwear will be ready this morning,\" she said in concern.\n\n\"That's great! Thanks! Good morning to you!\" Jack responded.\n\n\"Yes, it is a very good morning indeed! I thought we might go to one of our best hot springs so you could see what makes Chrystan such a paradise... for us,\" she amended seeing the two Altarians looking so chilly.\n\n\"A hot spring would be lovely!\" Jack agreed.\n\nWith a happy nod Tanz led them out of the room and palace. They walked back through the shopping district and the marketplace once more and Jack thought both areas seemed even busier than the first time they'd been through. The people still called out to Tanz and her responses were generating a lot more smiles this time. She was really popular!\n\nThey climbed back onto the cart, Gee and Bal once more making a Jack sandwich for his heat. They pulled out into the tunnel, continuing in the direction they'd gone yesterday.\n\n\"We'll be going around the city to get to the hot springs. Taking the cart is quicker,\" Tanz explained.\n\nShe was staring at Jack with a strange smile on her face. He was going to ask her about it when she turned and the cart rolled into another parking area. The air felt just a little warmer here making Gee and Bal perk up. The group walked through the doors from the parking lot and a gust of warm humid air caressed their faces. The entrance to the hot spring was just up ahead and there was a lot of Shreen coming and going. They went inside and Jack saw a large sign indicating the location and sizes of the pools. Tanz pointed out the one they would go to. If they were feeling adventurous there was a special treat with this large facility. Part of one of the large pools was outside. Swim under a wall and you could surface outside! Gee and Bal immediately killed that idea.\n\n\"Are you ready?\" Tanz asked with a grin.\n\nJack looked for signs indicating men's and women's locker rooms but everyone who entered just headed in the one door. He had an uneasy feeling.\n\n\"Uh, Tanz? Is the change room for everyone? No separate room for male and female?\" he asked.\n\n\"Why would we need separate- oh! I'm sorry, I forgot. We don't get many visitors. Shreen don't have inhibitions about displaying our bodies. Our kilts are functional and decorative, not to hide parts of our anatomy.\" Tanz said looking curiously at Jack's body. \"Do you wish to leave?\"\n\n\"No!\" he quickly looked at the two Altarians who appeared to be willing to be naked as long as it meant they could get into the hot water. \"I'm here to experience your culture so I'll go native.\" He stopped to think about that. \"You don't wear anything in the water, do you.\"\n\n\"Of course not! The clothing would get wet!\" Tanz laughed.\n\n\"We have clothes designed to be worn in the water. We call them swimsuits,\" Jack explained.\n\n\"How strange? What would be the point of covering your body with clothing if you wanted the hot water to touch your skin?\" she looked at him incredulously.\n\n\"Well, a swimsuit is typically a very small piece of clothing that covers a very small portion of our body. Around the sexual organs mostly,\" Jack said, his face burning just a little.\n\n\"AHH! That's right! Human males have externally located genitals!\"\n\n\"How about that swim!\" Jack blurted and clapped his hands together.\n\nTanz looked confused by his sudden change of topic but led them into the change room. They each picked a cubby for their clothes, with biometric reader locks, and began to undress. Jack noticed that it took the Shreen all of a few seconds to strip off their kilts, place them into the cubby and be on their way.\n\nSoon Jack was standing naked with the equally naked Altarians looking at Tanz who looked... much like she had previously.\n\n\"You look much different when you take your clothes off!\" she said in surprise.\n\n\"Yes, that's true. Shall we go?\" Jack asked and he gestured for her to proceed them.\n\nThey walked out into a much warmer corridor and the Altarians sighed happily. There were several paths leading to smaller pools but to get the truly local experience Tanz led them to the main pool where most of the community went to relax and chat.\n\nWhen they entered the vast room the temperature went up a few more degrees and Jack could see Gee and Bal finally relax. They walked through a corridor that rained on them until they exited the other side drenched and frozen. The Altarians made a bee line for the large pool and waded in immediately. The room was a little prone to echoes and the white noise of the water fall they'd just walked through made talking impossible. Tanz nodded when Jack pointed to his ears and guided them further along. Gee and Bal kept pace with them from the water. They looked much happier in the water.\n\nThe sight of the Queen's Facilitator walking along the pool's edge with a tall, horned, furless creature was drawing attention. Heads turned and conversation lulled as they passed by.\n\nTanz was still being called to and nodded to her admirers.\n\nThey found a quieter grotto and slipped into the water. Now that Jack was up to his shoulders in the hot water he felt himself relaxing as well.\n\n\"Ohhhh this is niiiiiiiiice,\" he sighed happily and Tanz grinned at him.\n\n\"I'm so glad you like it! I was beginning to get the impression you were uncomfortable,\" Tanz said with a relieved expression.\n\nJack glanced over to check on Gee and Bal and saw they'd found an underwater ledge to sit on a little distance away which kept most of their bodies under the surface. Their eyes tracked the movements of the guests. He smiled at their vigilance. He turned back to Tanz who, he noticed, had moved much closer.\n\n\"To be honest, I'm not terribly comfortable being nude around strangers. It's not something I would normally do but as I'm on Chrystan and it seems to be how things are done I'll give it a go.\" Changing the subject once more he rested back against the side of the pool. \"Was there a plan for the rest of the day?\"\n\n\"The Queen and King were going to give you a tour of the city but they were up all night so they won't be able to join us today.\" Tanz said grinning expectantly at Jack.\n\nHe wasn't sure why she was looking at him like that. \"What?\"\n\n\"The royal couple were making love all night long after being seen sneaking out of last night's dinner party with you! One of the doormen informed me they were enjoying themselves quite... energetically as you slipped out of their apartment,\" she said excitedly with a giggle.\n\nJack blushed as he struggled to remember what she was talking about. He got flashes of a furred thigh up close and twitching and shook his head to clear the intimate image. Tanz's eyes were wide and twinkling with happiness. \"I- I had a little too much Lussht last night and I may have... done things I can't recall clearly now.\"\n\n\"Do you like Lussht? I could get you some-\" she chirped and began to move away to get some.\n\n\"No! Please!\" he blurted, reaching out to stop her and caught her hand. When her eyes flew wide looking at her hand he snatched his back. \"I'm terribly sorry about that! Human gesture! Means something much less intimate!\"\n\nShe was looking at him oddly as she moved back to her spot.\n\n\"Listen, I wasn't really prepared for this visit and I haven't taught myself how to avoid all of the social taboos so I'm making mistakes. I know you said the Shreen are easy going but I'm finding myself doing things that might be seen as... taboo breaking.\" His mind flashed to the Queen looking at him with a dazed expression as he kissed her finger tips. He groaned quietly and put a hand to his forehead.\n\n\"Does your head hurt from the Lussht? I have not heard of that side effect,\" Tanz said quietly.\n\nJack realized she was much closer now. He knew she was the Queen's closest assistant so she was probably concerned he might be indiscreet with what he... might have done the previous night with the royal couple. \"Listen, I won't tell anyone what we did or might have done-\"\n\nTanz began to giggle.\n\nAgain, Jack was confused by her behavior. \"What?\"\n\n\"I spoke with the Queen and King first thing this morning. They were delighted to tell me about some of the fun they had last night and that you taught them thrilling new ways to make love!\"\n\nHis face flushed as his mind carried him back to a scene of the Queen's face close to his, panting with lust. His eyes cleared and he returned to find Tanz almost leaning against him. He turned in surprise and his erection bumped into her soft fur.\n\nA hand touched then gripped his cock under the water and she gasped.\n\n\"You're huge!\" she cried out.\n\nHe knew he wasn't but perspective is everything. Jack shook his head and gently pulled back from her grip. \"I- I think the heat is getting to me. I'd better go cool off. He moved to the side of the pool and climbed out.\n\nTanz watched him with a worried expression. When she saw his erection her mouth dropped open. She jumped when Gee and Bal moved past her quickly and climbed out to chase after Jack who was walking quickly back towards the change room.\n\nSnapping out of her daze she scrambled to catch up.\n\nHe'd tried, he really did, but he'd never be a nudist. Too many eyes and he was just too shy. He spent a little extra time under the waterfall rinsing the hot spring water off and cooling his... passion. He spotted two dark shapes dart past him in the cold spray. They were spending as little time as they could in the cold water. He felt a part of himself shrinking so he moved on to the locker room to find Gee and Bal standing in the hot air dryers rubbing the water from their fur. The image started to bring life back to what had been shrinking so he turned away to find himself facing a distraught Tanz.\n\n\"I am so sorry if I disturbed you with my touch! I got the impression from the royal couple that you might be... at ease with such bold gestures.\"\n\nJack couldn't stop a chuckle from escaping and a smile began to return to her face. \"I'm sure it sounded like that but remember, I'd had a fair amount to drink and for humans that can have a profound impact on our inhibitions. It makes some of us a little too relaxed about... everything. It can also degrade our judgement so we find ourselves doing stuff that perhaps isn't too wise.\"\n\nHe smiled at Tanz. \"I'm glad the Queen and King weren't offended or hurt by anything I did with them last night.\"\n\nShe looked down again. \"I don't understand how you made love to the Queen with something that becomes so large without hurting her!\"\n\nHe fidgeted again. \"Uh, while I don't have a clear memory of the night, I don't believe Humans are compatible with Shreen for having that kind of sex.\"\n\n\"Kind of sex?\" she gasped with wide eyes. \"Is that like the 'thrilling new ways to make love'?\"\n\n\"Uh, yes.\"\n\nGee and Bal were dressed and standing at his elbow. \"You should dry off,\" Bal said.\n\nHe nodded and with a nod to Tanz he made his way into the dryer.\n\n\"Has he taught you these thrilling new ways?\" Tanz excitedly asked the Altarians.\n\nThe two agents shared a look and eyes twinkled. They saw the woman was almost trembling with curiosity. Gee leaned forward as if to share a secret and Tanz leaned in so quickly she almost lost her balance.\n\n\"As his security team it wouldn't be appropriate for us to make love with him but... I've heard that Jack is most talented with what he can do with his... tongue... down there.\"\n\nTanz trilled loudly in her excitement and eyes turned in their direction. She rushed off to jump in the air dryer next to Jack's. He smiled at her and wondered at her almost manic grin.\n\nJack left the dryer and got his clothes out of the cubby and got dressed. Once he had that layer, or in this case, layers of clothing between himself and the rest of the world he felt much better.\n\nThen Tanz walked over with something large and furry in her arms. Gee and Bal joined them.\n\n\"They arrived! Courtesy of the Queen! Skrahak pelt coats! I asked the staff to bring them to me wherever I was so I could make sure you were warm.\" She handed Gee and Bal their smaller coats and the ladies tugged them on. Their expressions of bliss told Jack all he needed to know.\n\n\"What's a Skrahak?\" he asked taking the larger coat from her arms. It was a little heavy. It was also very soft.\n\n\"They're a native predator on the planet. When they're small they're just a nuisance. When they get big they become a real threat! We've lost villagers on the Ridge to the big ones,\" Tanz explained."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "romance",
        "group sex",
        "oral",
        "science fiction",
        "humor",
        "harem"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/jacks-snow-day"
}