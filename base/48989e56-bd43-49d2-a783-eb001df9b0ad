{
    "title": "The Web Ch. 03",
    "pages": [
        "Third part of an eight part series. I wrote this story to develop some themes more along the lines of \"mind-influence\" than \"mind-control.\" The most erotic time in a relationship is often spent exploring the boundaries of trust and sharing. If that turns you on, then this story will have many molten scenes. At the same time, as the writing progressed, the characters grew and influenced each other in interesting ways. Is it better to get what you want, or learn what you want? I still don't know who really was in control. Maybe you will.\n\n*\n\nFortunately, I spent Friday doing some deep design work, planning out a new communication system for a company that had built up a patchwork of old technologies. They would see the benefit from the new changes. The hours rolled by, and I suddenly looked up at the clock and the day was nearly over. I got everything put away and sailed out the door.\n\nI picked up Kelly first. She looked really good in a summer dress and sandals.\n\n\"You look lovely, Kelly.\"\n\n\"As do you, Brad. Thanks.\" We got settled and pulled out.\n\n\"So how was it having to be celibate this week?\" she chirped.\n\n\"You know, it wasn't as bad before I knew what I was missing. Yeah, I played with myself a couple of times, reliving both of our evenings, but I held off the last few days to conserve my strength. I'm guessing it will be a long weekend.\"\n\nKelly laughed. \"Fortunately, I don't have to perform like you do, so I've been enjoying myself quite a bit. However, spending all my quality time chaperoning you two is seriously cutting into my non-solo sex life. You both owe me big-time.\"\n\n\"Hey, you're getting some quality sex shows here. That's worth a lot, especially with me in them.\"\n\n\"You're right. I forgot just how lucky I am!\" Kelly shot back.\n\n\"That's the spirit. Now, let's see what our co-star is wearing.\"\n\nI pulled into the driveway and went to Cathy's door. She came out in a dazzling summer dress, sandals, and a classy necklace.\n\n\"Wow, you look great, Cathy,\" I said. \"May I please take your bag?\"\n\n\"Of course, Brad.\"\n\nI offered her my arm and we walked down to the car.\n\n\"Damn, girl, you look like a princess,\" Kelly said as Cathy got in. \"Are you sure you want to be seen with us at this resort?\"\n\n\"Oh, I try and keep my reputation for the 'common touch,'\" Cathy replied lightly. \"That way the papers treat me a little better.\"\n\n\"Probably good to keep a low profile, too, given what we're going to be doing this weekend,\" Kelly replied.\n\n\"And what might that be?\" Cathy responded.\n\n\"That, my friend, is what you're going to be telling us.\" We all laughed.\n\nThe trip was fun, with us settling into the banter of good friends as always. I did enjoy trading wit with both Cathy and Kelly, both attractive, smart, sexy women. It kept me on my toes.\n\nThe receptionist was good\u2014I caught just the quickest hint of a smile when the three of us checked into our single room. Kelly had done a great job and picked the room carefully. It had a secluded view on a balcony outside, two queen beds, a dresser with mirror, and some comfortable chairs around a small table. Everything we would need.\n\nWe hung our clothes and stepped out to the patio. I saw several people look up, discretely admiring my companions. A couple of them lightly tipped their head to me. I nodded back.\n\nWe settled in for an evening of cocktails, conversation, and dinner as dusk descended into twilight, enjoying the carefully tended grounds and the stars coming out. As before, the two ladies kept the conversation stimulating and playful, and I marveled again how little the upcoming aspects of the evening intruded on our thoughts. They were just plain fun to be around, and sexy as hell, but in a relaxed, open, way.\n\n\"Ladies, I enjoyed a lovely evening,\" I said after we paid the tab.\n\n\"I did as well, Brad. Thanks for not being in a hurry,\" Kelly replied, winking.\n\n\"As much as I'm looking forward to our walk back to the room, you're right, I'm not in a hurry,\" I said. \"I really enjoy time with you ladies, and I don't want to rush that.\"\n\n\"We feel the same, Brad,\" Cathy added. \"There are many pleasurable aspects to life, no?\"\n\n\"I'm learning that more each day,\" I answered.\n\nEnjoying the softly lit path I took both ladies' hands in mine as we walked back to the room. It just felt right to bring us a little closer together. Cathy gave me a squeeze and a smile.\n\nWe got back to the room. Kelly took her role as activity coordinator for this trip. \"Why don't we all brush our teeth and get comfortable? That way, we can just let the evening flow.\"\n\nCathy and I both nodded. \"Join me?\" she asked Cathy and they both went into the bathroom. I heard some conversation and laughter during the few minutes they were in there. They came out a few minutes later, looking a lot more comfortable. Both had lost the bras\u2014I could at least tell that. I wondered what else was missing. I did notice that Cathy kept the necklace. Kelly had a couple of towels under her arm and winked.\n\nI went in, brushed, and ditched my shoes and socks to match the ladies' bare feet. When I came out, they were seating around the table, with the bed closest turned down. Both had their legs crossed, and I enjoyed the expanse of toned leg on display. Kelly had the towels beside her chair.\n\n\"Shall we start with the beach again, Cathy?\"\n\n\"Please.\"\n\nWe went through the relaxation exercise and I talked with the Controller and Protector again, assigning them their roles. In the Controller conversation, I went a little deeper.\n\n\"So what do you think Cathy thinks of you these days?\" I asked.\n\n\"She does seem to appreciate my role a little more. I hope she continues. I'm here to help her, and I can make her life better. I keep her focused on positive things in conversations, so she doesn't say anything offensive, and she keeps other people happy and involved. I can tell you have appreciated that. I've also helped her achieve some wonderful orgasms.\"\n\n\"Yes, you have for me as well. Can I ask you to keep that up, where you control our orgasms until they are very powerful?\"\n\n\"Of course.\"\n\n\"Could I also ask one more thing?\"\n\n\"Sure.\"\n\n\"Could I ask you to help Cathy achieve her desire? As Kelly told Cathy, we are both comfortable with anything she wants, so it will be our desire as well. She can't hurt us or shock us. So when she vocalizes it, can you work to control the situation so that she gets what she wants?\"\n\n\"I can probably do that, but I will be watching to make sure that is true.\"\n\n\"Fair enough. I really appreciate your help.\"\n\n\"You're welcome.\"\n\nI spoke to Joy as well, who was very happy to have us all here for the weekend. Then it was time for Desire.\n\n\"May I please speak to Desire now?\"\n\nCathy settled even deeper into her chair. \"This is Desire speaking.\"\n\n\"Well, Desire, I think that you got what you wanted last weekend.\"\n\n\"Yes, and it was wonderful for Cathy. I was happy that she followed through on my suggestions.\"\n\n\"How do you think Cathy should keep this going?\"\n\nCathy shifted. \"Well, I have some other things in mind for her, but I'm worried they may go to far.\"\n\n\"Desire, please know that both Kelly and I are here to help you, and to help Cathy, bring these things to light and act on them. I would love to here what you desire.\"\n\n\"OK,\" Desire said. \"I'll discuss them. The first one is pretty easy. I would love Cathy to be able to swallow when she went down on a man.\"\n\n\"I would like that very much as well,\" I replied, my cock stiffening. \"Why do you think it is hard now?\"\n\n\"I think that she fears that it's dirty or slutty.\"\n\n\"Why don't you work with Joy to help her see how much connection she can make to a man through going down on him and swallowing his cum. Cathy can connect to me very well, and I respect her very much. I think she can share a lot of herself with her lover through that act. Also, the Controller should enjoy it, because it's a great way to have her lover's pleasure under her control.\"\n\n\"I will work to do that. Yes, Brad, I can see that you would see it as a positive, joyful thing for you and Cathy. I think I can convince her.\"\n\n\"Great! I think she will enjoy it. Now, is there anything else that we should talk about?\"\n\n\"Yes, and this one's much harder to say.\"\n\n\"Please take your time, and know that we are both here to help.\"\n\nA long pause followed, and then Cathy sighed. \"Last weekend, Cathy really enjoyed turning around and letting you look at her...her bottom.\"\n\n\"Cathy is beautiful everywhere,\" I replied, my cock now rock hard. \"She really turned me on with that.\"\n\n\"You think so?\"\n\n\"Beyond anything you could imagine.\"\n\nCathy paused and sighed again.\n\n\"Well, I would like Cathy and you to spend some time playing with her...with her bottom.\"\n\n\"I would like that very much,\" I answered. \"What type of 'playing' would you like us to do?\"\n\nA long pause. I flicked my eyes over to Kelly and noticed her hanging onto what Cathy would say.\n\nCathy whispered very low. \"Everything.\"\n\nWow. I almost blew in my pants when I thought of the incredible nights we were going to explore. I fought to keep my voice steady and not break the dialogue.\n\n\"Thank you for sharing that, Desire.\" I said. \"How do you think Cathy will like that?\"\n\n\"I think she will love it if she lets go and enjoys it. When you two woke up last weekend, she really enjoyed grinding back into your cock. I know she wants it. You're the right guy for her. You will be gentle, but you will fill her deep when she's ready for that.\"\n\n\"I'm thrilled that you and Cathy trust me in this. I would love to help Cathy experience the joys of anal sex.\"\n\n\"Good. I think that's probably enough desires for Cathy to deal with right now.\"\n\n\"Thank you very much, Desire, for trusting us and opening up.\"\n\n\"Your welcome.\"\n\n\"Now, may I speak to the Controller one more time?\"\n\n\"The Controller is speaking again.\"\n\n\"Did I convince you that I am genuinely pleased to hear of Cathy's desires?\"\n\n\"Yes, you and Kelly both seem very excited.\"\n\n\"We are. Will you help Cathy control her lovemaking to act on her desires for both of our pleasure?\"\n\n\"I will.\"\n\n\"Thank you, Controller. I really appreciate what you're doing to help Cathy work toward her happiness. I'll ask Cathy to make sure she thanks you as well.\"\n\n\"That would be great.\"\n\n\"Also, I think you should really enjoy helping Cathy control me when she goes down on me.\"\n\n\"I will enjoy that very much,\" she replied.\n\n\"Now, would you mind returning us both to the beach?\"\n\n\"Here you are.\"\n\n\"Cathy, can you hear the waves at the beach?\"\n\n\"Yes.\"\n\n\"Do you remember what Desire talked about?\"\n\nCathy shifted again. \"Yes.\"\n\n\"Do you want to try the things that she talked about?\"\n\n\"I would love to,\" Cathy said clearly.\n\n\"Fantastic, Cathy. I'm going to take small steps as far as playing with your bottom, but I think you'll really enjoy it.\"\n\n\"I'm looking forward to it, Brad.\"\n\n\"Let's walk back from the beach.\"\n\nI took Cathy back, and she eventually looked up.\n\n\"Do you remember everything we talked about?\"\n\nCathy's face flushed, and she looked a little tentative. \"Yes.\"\n\nI got up, walked over, and took her hand. I raised her up and embraced her. \"That took a lot of courage. Thank you for sharing...You're a very special person, and I'm thrilled to be your partner in this. We'll take small steps with each other.\"\n\nCathy looked up. \"Thanks, Brad. I'm happy I finally opened up with you about that.\"\n\n\"Me too. OK, just so you know how far I'm going, tonight I'm going to focus on stimulating around your bottom, but not inside. I think you'll be amazed how good that feels.\" I turned to Kelly. \"Miss Chaperone, does that seem all right?\"\n\n\"Yes, I think that's well within bounds, Mr. Heller.\" Kelly answered. \"I'll just stay here and make sure you behave yourself.\"\n\n\"Great. Ready to begin, Cathy?\"\n\n\"Ready.\"\n\n\"Good, because I've been wanting you all night.\" I led Cathy over by the bed and gently twisted her around so that she faced away from me. She sighed her approval and backed into me. Over Cathy's shoulder, I saw Kelly looking us up and down.\n\nI reached up and caressed Cathy's neck, drawing her chin around for a long kiss. She moaned as my hands roamed up her sides. I moved lower and started kissing and nibbling beneath her ears and around her back, as she sighed and leaned back into me. I brought my hands under her breasts and she whispered \"Yes.\" I slid them up, cupping the underside of each breast and then moved higher, cupping her full breast in my hand. Cathy swayed and twisted her upper body.\n\n\"Ummmm.\" Cathy started pushing back into my crotch, as I continued to cup her breasts and slide my hands over her erect nipples. I slid my hands down her sides and started pulling up the hem of her dress. Cathy moaned her approval, so I gathered the material and starting pulling her dress over her hips. I backed away slightly to free her dress from between us, and I saw the unbroken skin as the dress moved up her body. She was completely naked underneath.\n\nCathy raised her arms as I pulled the dress completely off, and draped it over the nightstand. I took the opportunity to quickly adjust my erection before Cathy leaned back into me, hard. My hands found her breasts again, and I marveled at the stiffness of her nipples. Cathy swayed and ground against me, arching her back so her breasts pushed into my hands while her ass pushed against my cock. She reached back and draped her arms around my head, turning her head for another kiss. Clearly, she was just listening to her body and doing what felt good, totally comfortable with her nakedness while I stood clothed and Kelly watched.\n\n\"You are so unbelievably fucking hot,\" I breathed into her ear.\n\n\"I am just on fire,\" Cathy replied. \"You feel so good.\"\n\n\"Wow, Cathy, you're turning me on, too,\" said Kelly. \"You look so sexy grinding your naked body into Brad.\" I looked up and saw Kelly cupping her breasts, her eyes glued to Cathy.\n\n\"Are you ready to get my clothes out of the way?\" I asked.\n\n\"God, yes,\" Cathy breathed, and she turned around and pulled my shirt over my head. She then undid the buckle on my belt, undid my slacks, and pulled them down and off my feet. Finally, she pulled my boxers off as well, immediately standing back up and turning around again. As she backed into me, I lifted my cock so it would nuzzle in the cheeks of her ass.\n\n\"Ohhh, that feels great,\" Cathy said as she resumed her grinding.\n\n\"You feel really good, too,\" I breathed, reveling in the feel of her smooth cheeks massaging the underside of my cock.\n\nWe ground into each other for a while, in no hurry to stop our mutual pleasure. I flicker of movement caught my eye, and I saw Kelly sit up and pull her dress over her head, spreading a towel beneath her and sitting back down with her hand lazily tracing over her pussy lips.\n\nI slid one hand from Cathy's breast down and cupped the side of her ass, testing Cathy's interest in more intimate contact. She immediately responded, twisting to give my hand fuller access and groaning her approval. I slid my hand further down and massaged between her legs, but not going too deep yet. Cathy continued her sighs and moans, lost in the moment. When she thrust out particularly hard, my hand found her puckered hole.\n\n\"Uhhhmmmm!\" she gasped, nearly collapsing against me. I held her chest with my other hand as she turned her head and shoved her tongue into my mouth, her breathing ragged. We had been standing now for a long time, so I decided to give her some rest.\n\n\"Would you like to lie down, while I continue to play with you?\" I asked.\n\n\"Sounds nice,\" she breathed, and allowed me to position her face-down on the bed. I spread her legs a bit and lied down beside her, placing my hand possessively on her ass while I looked into her eyes. I let my eyes communicate trust and acceptance as I massaged deeper between her checks, and I saw a deep relaxation come over her features as she started slowly raising her hips in time to my hand. As I found her rosebud again she let out a long, luxurious sigh.\n\n\"Feels good, huh?\" I said.\n\n\"Ummmm, wonderful.\" Cathy leaned in for a kiss, and we let our tongues slowly dance as I continued massaging. I pulled back, and we continued to look into each other's eyes. The intimacy of our gaze matched the raw intimacy of my stroking her most private place.\n\nEventually, Cathy's eyes started to lose focus, and I noticed her grinding her crotch into the bed on each downward motion. I decided to give the poor girl some relief.\n\nI rolled over onto my back, and gently reached under Cathy's shoulders and pulled her up and over me. I kept guiding her over me until she straddled my face, then I returned my hands to her ass and as she lowered her pussy onto my face. She was hot and wet, and I knew she wouldn't last long. I lapped up and down her slit as I continued her anal massage. For her part, Cathy alternated between pushing into my tongue and then back into my probing fingers. As Cathy started moaning in earnest, I concentrated on rolling her clit around with my tongue.\n\n\"Uhhh, ohhh, ahhhhhh,\" Cathy moaned incoherently as she climbed her peak. Her legs started shaking and I flattened my tongue, letting her mash her clit against it. She tensed her body and held her breath as she pushed over the edge.\n\n\"Ohhhh, fuck!\" she exclaimed as her orgasm washed over her. I could feel the intense contractions of her pussy on my tongue and her anus against my fingers as she shuddered through a long climax. \"Oh, god, oh god!\" she wailed as she collapsed over me. Her aftershocks coursed through her and she heaved for breath. Finally, she lifted herself up, crawled back down my body, and collapsed onto me, dropping her head down over my shoulder.\n\nI caressed her back as she recovered. I knew that this had been a very intense, personal experience for her and that she needed some time alone with her thoughts. Eventually, she lifted her head and nuzzled my face, sighing appreciatively. She pulled back and kissed me, capturing my lip in hers. Finally, she pulled away a little further and looked into my eyes with a soft smile on her lips. We gazed at each other for a while, with no words necessary to express the threshold of intimacy that we had crossed.\n\nI felt Cathy move and then was jolted out of my reverie by a touch on my cock. Cathy's smile now had a wickedness to it, and she seductively licked her lips. \"Stay there,\" she instructed as she lifted up and slid down my body.\n\n\"Uhhhh,\" I groaned as I felt her lips encircle my cock. She wasn't waiting, and slid her warm mouth down my rod. After seeing so much of Cathy's passion, I responded quickly to her bobbing up and down on my cock. She sucked powerfully, sensing that I needed release. After a few minutes, I felt a tingling at the tip of my cock that signaled an approaching orgasm.\n\n\"Oh, god, don't stop,\" I moaned.\n\n\"Mmmmm,\" Cathy responded from around my cock. I looked over and saw Kelly's fingers dancing over her pussy, which heightened my arousal even more.\n\n\"Cathy, I'm coming!\" I gasped as the tingling spread to my legs and toes\u2014my feet nearly burning in its intensity. Cathy kept up her sucking, clearly having decided to take my load.\n\n\"Uhh, aaahhhhh, ahhhhh, ahhhhh\" I grunted as I exploded up into her mouth. Cathy rode out my orgasm with her lips firmly wrapped around my shaft, giving me extra pleasure from each spurt squeezing its way out. I squirmed and twitched under her, my hands clenching the bedsheets. Finally, as my aftershocks subsided, she reduced the pressure and gently swirled her tongue around my shaft.\n\n\"Oh my God!\" I exclaimed. \"I think I'm going to pass out.\"\n\n\"Brad, you are one lucky guy,\" Kelly said from where she was recovering.\n\n\"Don't I know it,\" I replied.",
        "With a final kiss to the head, Cathy let my cock drop to my leg and climbed back up beside me, a satisfied grin on her face. I pulled her lips to mine and kissed her deep, tasting the salty tang in her mouth. For some reason, I always enjoyed kissing a woman who recently swallowed my load, probably because I was using another sense to remember a great orgasm.\n\nCathy lowered herself to the bed beside me and draped on leg over mine. I wrapped one arm around her, pillowing her head, and lazily caressed her lower back and ass with the other.\n\nWe looked into each other's eyes, kissed, and just relaxed. I think I may have dozed\u2014I looked over to see Cathy smiling at me.\n\n\"Worn out, sleepyhead?\"\n\n\"Hey, when you're a sex god, there's a price to pay,\" I replied.\n\n\"I'll gladly pay with you,\" she whispered and reached down to pull the covers over us. I heard Kelly stirring, turning the lights off and getting into the other bed. I lied there in satisfaction and peace until sleep took me deep.\n\nI woke to find sunlight peaking from behind the shades. Cathy was facing me\u2014I hadn't seen her face asleep before. She looked peaceful and beautiful. I lowered my head slightly and let my eyes wander down to her breasts, rising and falling slowly. For the first time, I saw her nipples when she wasn't aroused. I smiled when I saw her necklace still draped against her chest.\n\n\"Enjoying the view?\" an arch voice whispered in my ear.\n\n\"I'm admiring your necklace. It looks wonderful on you.\"\n\n\"I trust it doesn't hurt that it's on a naked woman in bed with you?\"\n\n\"That probably adds a little to the allure, I'll have to admit.\"\n\n\"How about if it was swinging above your face, when that naked woman was riding you?\"\n\n\"I'm sure that would add immensely to its beauty. We should try and see.\"\n\nCathy chuckled softly and then leaned in for a kiss. We made relaxed love, letting ourselves slowly wake up and heat up. When Cathy climbed over me, we both looked over and saw Kelly face down, her hand underneath herself and her raised hips moving in slow circles.\n\n\"Lovely morning, isn't it?\" Kelly giggled.\n\nCathy rolled her eyes as she rocked over me. I came first in a satisfying blast, Cathy intently watching my face. After recovering, I sat up and scooted back against the headboard. Cathy smiled when I invited her to sit back against me, and she squirmed against my probing fingers until she too shuddered in a satisfying climax.\n\n\"Join me for a quick shower? We can all get cleaned up a little faster,\" I asked Cathy after she stirred.\n\n\"Love to!\" she answered.\n\n\"Aren't you going to ask me, too?\" Kelly pouted. \"I'm feeling left out.\"\n\n\"Cat got your tongue?\" Cathy whispered as she felt a hint of an erection behind her.\n\n\"I'll be merciful and save you the agony of answering,\" Kelly chirped. \"You two go ahead, but move out! I'll be starving soon.\"\n\nCathy and I had fun soaping and rinsing each other. Once, after she cleaned my back, I got a playful swat on my butt.\n\n\"That's for what you were thinking when Kelly asked to join us,\" Cathy purred into my ear. \"You men are all alike.\"\n\n\"Yeah, you're probably right,\" I laughed. \"It's hard to keep my imagination in control when I'm in a room with two beautiful women.\"\n\n\"Keep up the compliments.\"\n\n\"I intend to.\"\n\nAfter Cathy and I dried off, we hung our towels and stepped back into the room to let Kelly have her turn.\n\n\"Well don't you two look quite the couple, stepping casually into the room naked?\"\n\nI took Cathy's arm in mine in an exaggerated flourish. \"Madam, may I conduct you to your lingerie drawer?\"\n\nCathy laughed. \"Thank you, sir!\"\n\nAs Kelly showered, Cathy and I dressed and went out on the balcony to enjoy the morning. As we stood against the railing, Cathy looked over to me.\n\n\"Brad, I really a really good time last night. I was interested to try, but I didn't know it could be that good.\"\n\n\"Watching you immerse yourself in the moment was very intense for me,\" I said. \"I think that anything you want to do in bed, you will enjoy it immensely.\"\n\n\"Maybe it's the partner I'm with,\" Cathy said. \"Thanks for taking that small step.\"\n\nWe both laughed, knowing that the big step was really Cathy acknowledging her desires and going with them.\n\n\"Cathy, we'll continue the 'small steps' as you are ready. There's a lot of pleasure to explore, and I think that you'll love it.\"\n\n\"That sounds great,\" she replied.\n\nWe enjoyed a nice breakfast on the patio. I choose good food, knowing that I had stamina to maintain. We went down to the pool, and the ladies' bikinis turned a few heads when they took off their cover-ups. I put them beside each other and lied back as they chatted, enjoying the morning sun. We dangled our legs in the pool and generally relaxed. As the morning wore on and I enjoyed the company of two ladies, I started to get horny. An idea formed in my head.\n\n\"How are you doing, Brad?\" Cathy asked. \"Kelly and I are thinking about going up.\"\n\n\"That sounds great. I don't want to bake too much.\"\n\nWe walked back to the room. As we settled into the chairs to relax, I looked over at Cathy.\n\n\"Cathy, how would you like to take another 'small step,' but this time on me?\" I asked.\n\n\"I'm sure I would,\" she replied, \"but what do you mean?\"\n\n\"Well, I would like to lie down and have you play with my backdoor, including slipping your fingers inside,\" I said. \"It will be very pleasurable for me, and it will help you understand how to relax and enjoy it yourself.\"\n\n\"That sounds like fun,\" Cathy said.\n\n\"The only trouble is that we might have to find something to use for a lubricant,\" I said. \"I'll have to see what will work in the bathroom.\"\n\n\"Oh, don't worry,\" Kelly piped up. \"I'm packing.\"\n\nI looked at her with narrowed eyes. \"Somehow, I'm not surprised.\"\n\n\"Whatever do you mean?\" Kelly asked, all innocent. \"Let me get it while you get ready.\"\n\nI draped a towel across the bed. \"OK, Cathy, this will be a little more like a class, since I will describe what I'm doing. I'm going to start face down here and let you get me warmed up. You're a natural at massage, so you'll do great. As I get turned on, I'm going to get on my hands and knees. You can lubricate a finger then and work it in. The key to understand is that I'm going to completely relax my ass, so you'll slip in easily. Anal sex should never hurt if you do it right. You ready to try?\"\n\n\"I think so.\"\n\n\"Don't worry, I'll talk you through it.\"\n\nI pulled my shorts and shirt off, and I was happy to see Cathy slip out of her suit as well. She started with a general back massage, and then moved to my butt, kneading each cheek deeply before backing off the pressure and lightly tracing her fingertips across my flesh.\n\n\"Oh, god, that feels great,\" I said. \"You know what you're doing.\"\n\nCathy alternated light and firmer touches, and she had me heating up fast. I spread my legs and she responded, working her hands deeper. I raised my hips slightly and arched my back, giving her unfettered access. Her probing fingers reached my ass, and I groaned.\n\n\"You're doing great, Cathy. Keep it up.\"\n\nAs Cathy continued her ministrations, I heard a noise and looked to see a very naked Kelly positioning a chair close to the side of the bed. \"This is pretty hot,\" she said matter-of-factly. \"I want to have a good view.\"\n\n\"Glad to provide the entertainment,\" I responded. \"You got that lubricant handy?\"\n\n\"At your service,\" Kelly said and placed it at my side.\n\nI got up on my knees and spread my legs. Cathy followed me with her hands, rubbing and touching. It felt great.\n\n\"OK, Cathy, let's feel how I can relax or tense up back there. Place your finger over my ass and push gently.\" I tensed my sphincter. \"Feel that? That's how it hurts. Now, feel as I relax. You just concentrate on releasing the tension.\" I felt her finger penetrate just a little. \"See?\"\n\n\"Yes, I do,\" Cathy said. \"I can feel you relax and open up.\"\n\n\"Anal sex is about trust and about opening up to your partner. What happens in your mind happens back there as well. I trust you, and I want to give you the ability to pleasure me. In some ways, I will be giving you ownership of my ass. It's about the most intimate thing I can offer.\"\n\nI let her continue to probe a little longer. \"Why don't you get the lube,\" I said. \"I'm good and ready.\"\n\nCathy squeezed some on her finger and set it at the opening of my ass. I relaxed completely.\n\n\"Now, just slowly push in and let my passage guide you.\"\n\nCathy pushed just her fingertip in, and I groaned. She twisted slightly and pushed in a little further. She naturally knew how to work her finger inside, sliding back a bit before pushing further in. She slid in easily and soon had worked her finger in to the base on her downstrokes.\n\nCathy's finger was working its magic, and I pushed back, enjoying the unique sensations as she slid in and out. I slid my hand under me and found my cock, starting a slow stroke.\n\n\"Feeling good?\" Cathy asked.\n\n\"It feels great,\" I answered. \"It will probably get harder for me to speak...\"\n\nI heard Kelly chuckle.\n\n\"so just put another finger in when you're ready. In fact, do anything you want. Rub your other fingers over my ass like it's yours. It feels really good to just let you take over.\"\n\nI arched my back and ground back into Cathy's hand, really getting into it. In fact, I put on a little bit of a show for her benefit. I wanted her to see how much I enjoyed it so she could anticipate enjoying it herself. I looked over at Kelly and saw her eyes on mine, one hand pinching a nipple and the other busy between her legs. We looked at each other for a while, each enjoying our pleasure.\n\nI groaned again as I felt Cathy's second finger slide in. She slowly worked them both in deep, squeezing the rest of my ass with her other fingers and rubbing with her other hand. I rocked back and forth, and stroked my cock more rapidly. My breathing became ragged as I reveled in the combined stimulation from my ass and cock. I let myself moan my approval as Cathy plunged into my depths.\n\nAs my orgasm approached, I slowed down my stroking, feeling the hot tingling radiating out from my groin. The tension became almost unbearable as I rode the edge, lightening my pressure as the internal pressure mounted. Suddenly, I could feel the contractions starting deep inside. Cathy gasped\u2014she was feeling them, too. As my orgasm welled up, I involuntarily clamped down, squeezing my ass around Cathy's fingers.\n\n\"Uhhhh, uhhhh, ahhhhhhhhhh,\" I moaned as ropes of jism erupted from my cock. I could feel each spasm ripple through me and around Cathy's fingers. It was like getting twice the effect. Cathy held her fingers deep, and I twisted around them, drawing every last bit of pleasure from them as I milked my cock with my other hand. The pleasure stretched out in a long tail. I remained in that position for a while, enjoying the afterglow from a tremendous release.\n\n\"Wow,\" I said, after recovering. Cathy slowly drew her fingers out of my ass but kept rubbing as I relaxed down onto the bed. I looked over and saw Kelly in her own afterglow, her eyes unfocused, slowly stroking her swollen pussy.\n\n\"That was amazing\u2014I'm totally spent and satisfied. You are a really quick learner,\" I said.\n\nWhen I didn't hear anything, I twisted around to look back at Cathy. She had an unsettled look on her face.\n\n\"Brad, I'm...I'm really turned on. Could you...do that for me?\"\n\nLooking closer, I could see the need in her eyes. I smiled.\n\n\"Turned you on, huh? Yeah, I'd be happy to. Why don't we both go clean up and get back in here, so I can get my hands on that lovely ass of yours.\"\n\nAs Cathy was washing her hands, she looked at me in the mirror, still worked up. I moved my head beside hers and placed my hand possessively on her ass.\n\n\"You need it, don't you?\" I whispered.\n\n\"God, yes,\" she sighed, pushing back into my hand.\n\n\"Come on,\" I said.\n\nWe returned to the room and I draped her over the bed, climbing beside her. Kelly just leaned back and spread her legs again, shaking her head with an \"I can't believe you guys\" look on her face.\n\nI gave Cathy a shorter version of the back rub, to avoid her the agony of waiting in heat too long. As I slid down over her firm cheeks, she moaned loudly. She kept her eyes closed, just enjoying the sensations. I started with massage and then lightened the pressure until she was squirming under my hands.\n\n\"Ummmm, feels good,\" she breathed.\n\nI started working my fingers deeper, and Cathy responded by spreading her legs. I noticed her hips lightly thrusting into the bed as I guided closer to my destination.\n\n\"Ohhh,\" Cathy gasped as I brushed her hole. Her hips climbed off the bed.\n\n\"Like that?\"\n\n\"Ummm-hmmmm.\"\n\nI let my fingers roam freely around Cathy's back entrance, drinking in the sight of her twisting body responding to my hand. She radiated eroticism\u2014just completely lost in the sensations. Her hips pushed deeper into the bed and then flexed to open her up as much as possible. I placed my finger directly over her hole and let her drive into it, feeling her ass relaxing as she tried to draw it in. Cathy pulled her knees up and raised her hips off of the bed.\n\nSomething cool touched my leg, and I looked down to see Cathy holding the tube of lubricant.\n\n\"I guess someone's ready,\" I whispered.\n\n\"Ummmmm, please,\" she sighed back.\n\nI spread a dollop over my finger and placed it back at her entrance.\n\n\"Just open up and enjoy,\" I said as I pushed in slightly. Cathy moaned, relaxing her sphincter as my finger pushed slightly inside. I backed out again, twisted, and then slid in a little further, gaining a deep groan from Cathy. At each stage, I waited to feel a sense of total relaxation before I pushed any deeper. Cathy continually groaned and sighed as I penetrated her ass; my other fingers caressing her cheeks.\n\n\"Ahhhh,\" Cathy sighed as she felt my finger bottom out. I started a slow piston movement, watching her rock back and forth in response. As she pushed harder, I did as well, twisting deep within her. I looked up and saw her arms crossed under her breasts, fingers playing with her nipples.\n\n\"Oh, yeah,\" Cathy groaned as I reached under her with my other hand, finding her pussy soaking wet. I slid along her slit lightly, letting Cathy dictate the pace.\n\nLooking back at Kelly, I saw her fingers sliding along her own slit. Her eyes met mine.\n\n\"This is hot,\" she mouthed at me. I nodded, turning back to Cathy.\n\nCathy rippled her torso into my fingers on her pussy, signaling to me to increase the stimulation. I hooked my finger and slid inside, dragging along her clit as I plunged in and out.\n\n\"Ohh, ohh, uhh,\" Cathy panted. I looked down and saw her eyes open, staring over at Kelly. Looking back, I saw Kelly's fingers now dancing over her clit, her eyes locked on Cathy's. The two women were sharing a bond, the eroticism of the moment burning into me.\n\nI kept a steady motion going, knowing that Cathy would get there when she was ready. She had flattened her chest against the bed, pushing her ass even further into my hand. She was completing offering herself to me. I stroked her ass possessively.\n\nI felt the tremors of impending orgasm begin in her legs. She had closed her eyes again and had buried her face into the sheets.\n\n\"Mmmgh, mmmgh, ummmgh,\" she groaned as spasms wracked her body. Hanging on, I felt the throbbing begin in her pussy and ass that signaled a powerful orgasm. Her pussy clamped around my hand, her body went rigid, and her ass pulsed around me finger as the contractions rippled through her. I marveled at the intensity of her pleasure. Behind me I heard Kelly's moans as she came herself.\n\nCathy continued to slowly twist beneath me, squeezing out several aftershocks. Finally, she came to rest, letting out a long sigh. I slowly withdrew my fingers from her ass and pussy, getting a whimper when I pulled out. I continued to massage with the rest of my fingers, letting Cathy come down slowly. She stretched out her legs and lowered herself to the bed, sighing and groaning contentedly.\n\nI stretched out beside her, my hand now resting on her ass. As she looked at me, her eyes conveyed a sense of vulnerability. Cathy's body had admitted\u2014more eloquently than any words\u2014her powerful response to anal stimulation. Both Kelly and I had borne witness to that. Cathy had shared something deep and irreversible.\n\nI let my eyes communicate warmth and acceptance as I leaned in for a kiss. Cathy grinned shyly and opened her mouth to me. I kissed languidly, letting her feel my affirmation and affection through my lips.\n\nWhen I pulled back, she opened her eyes again. This time, they were clear and content.\n\nI lied with Cathy a while and then got up to wash my hands. As I came back and sat on the bed, Cathy rolled over and stretched languorously.\n\n\"I guess you could tell that I liked that,\" she said shyly.\n\n\"Just a bit,\" I replied, smiling back at her. \"I think Kelly liked the show as well.\"\n\n\"Unbelievably hot,\" Kelly said, \"but please don't start again. I don't think I can take anymore right now.\"\n\n\"We wore out Kelly the sex goddess?\" I asked in shock. \"I didn't think that was possible.\"\n\n\"Listen, buster, your fingers can only do so much at a time,\" Kelly shot back. \"I may have to go down to the pool and rape some unsuspecting guy this weekend.\"\n\n\"I better get down there so I have a chance,\" I replied, getting a scowl from Kelly and some shakes from Cathy as she laughed.\n\n\"How about we rest a few more minutes, then get dressed and take a short hike?\" I asked.\n\n\"Yeah, we should probably see more of this resort than the kitchen, pool, and bedroom, although that isn't too bad either,\" Kelly replied. We all laughed.\n\nAfter a bit we got up and dressed. Cathy and Kelly went to the sinks.\n\n\"Maybe if I pull my hair in a ponytail and put a hat on, I'll look like I've been working out instead of spending the day in the throes of passion,\" Cathy said.\n\n\"That might pass a casual glance, but if anyone looks in your eyes, they'll know the score,\" Kelly said knowingly.\n\n\"Oh, haven't I showed you my mirrored sport glasses?\" Cathy said lightly. \"You'll just love them\u2014I definitely turn into a sport babe.\"\n\nKelly snorted.\n\nCathy was right, she did look like a runner in her outfit. We checked at the desk and found a loop hike that was about an hour long. We found the trailhead and started out, getting into a rhythm and enjoying stretching our legs.\n\nAfter a few minutes of just walking along in silence, Kelly piped up.\n\n\"OK, Brad, what you did there was pretty hot. I haven't seen a guy do that before.\"\n\n\"Yeah, a lot of guys would think that's unmanly or something,\" I replied. \"Seems pretty silly to me. It's a whole different set of sensations, and it feels great. It also allows you to connect with a woman in a different way.\"\n\n\"I'll say,\" Cathy added. We all laughed.\n\n\"So, given what happened afterward, I have to ask,\" Kelly said slyly. \"Did you have an ulterior motive in mind when you asked Cathy to play with you?\"\n\n\"Well, let's say that I did want Cathy to learn from watching and feeling me. Telling someone how to relax is not the same as showing them how. The same goes for letting go and enjoying the sensations. I figured she would get a taste for trying it herself. I didn't know it would be so soon.\"\n\nKelly and I both turned to Cathy, who blushed furiously.\n\n\"Those 'sport glasses' aren't helping now, are they?\" Kelly asked knowingly. Cathy looked down and just shook her head.\n\nI laughed and grabbed Cathy's hand. \"It's fun to put you on the spot,\" I said, \"but in truth I loved sharing such an intense experience with you. After that episode, I know you'll love the rest when we get there.\"\n\n\"I think you're right, Brad.\"\n\nAfter a minute, Cathy looked up, a challenge in her face. \"Now, can we switch attention from my sexual needs to one of you two?\"",
        "\"Well, I think we've been attending to mine pretty well,\" I said. \"That leaves....\" We both turned to Kelly.\n\n\"OK, OK,\" she said. \"I guess I've been getting to learn your secrets without revealing mine, so I'll say a bit to even the score. Yes, I like having my ass played with if the right man is doing it\u2014it feels really good. I've also played with a couple of boyfriends that way while going down on them. However, I've never had a man let me pleasure him like you did, Brad. Cathy, it looked like you felt Brad's orgasm.\"\n\n\"I did,\" Cathy said. \"There was both a deep throbbing and a clenching of Brad's....\"\n\n\"His ass?\" Kelly asked.\n\n\"Yes, that,\" Cathy replied, blushing again. \"I guess you can tell it turned me on.\"\n\n\"Kind of,\" Kelly agreed. \"If it helps, I was seriously turned on myself. You two didn't see me frantically diddling myself over there, or you wouldn't be blushing now. I would love to feel a man come that way. I've got some work to do to convince a guy to let me do it to him. Hell, I've got to have to find the guy, first.\" We all laughed.\n\n\"Once you find him, I don't think he stands a chance,\" I said.\n\n\"Good answer, Brad.\" Kelly winked at me.\n\nWe fell into other conversations as we hiked the loop. I was impressed by the physical condition of Cathy and Kelly. Clearly, the two ladies did something to stay in shape. We talked about running, biking, and weight training, and I learned that they often went to the gym together and sometimes went biking or hiking back at home. We agreed to meet for a biking ride next weekend.\n\nWe got back from the hike with just enough time to get cleaned up before dinner. Kelly directed activities.\n\n\"OK, Brad, efficiency dictates that Kelly and I get the bathroom first so you can shower while we dry our hair. You'll just have to put your fantasies on hold for a while.\"\n\n\"No problem,\" I laughed. \"I'm still recovering strength.\"\n\n\"You'll need it,\" Kelly said. \"Come on, Cathy.\"\n\nThe two ladies entered the bathroom and closed the door. I heard occasional laughs as the shower ran. It was clear that they were very comfortable with each other and had traveled together before. They came out wrapped in towels with their hair combed but wet.\n\nI was shooed into the bathroom as Kelly grabbed the hairdryer and got Cathy situated in front of the dresser. I would have liked to watch them groom each other.\n\nI soaked a bit in the shower, rinsing off the dust and sweat from the hike. When I came out wrapped in a towel, the ladies were just finishing earrings.\n\n\"Ladies, those dresses are stunning on you both,\" I complimented.\n\n\"Why thank you, Brad. You are such the gentleman.\" Cathy replied. \"Would you mind meeting us in the bar? I was going to see if I could find Kelly her man.\"\n\n\"You'll probably find many, looking that good,\" I said. \"I'll see you down there.\"\n\nI took my time dressing, knowing the ladies could use some time together. When I walked down, I found them at one end of the bar with their heads close, deep in conversation.\n\n\"...priceless to see Brad's face when we spring that one on him!\" The two ladies leaned their heads together and laughed conspiratorially. I filed it away under my \"good times ahead\" category and figured I would find out when the time was right. I gave them a pause to recover.\n\n\"Ladies, may I join you?\"\n\nCathy turned. \"Why that would be lovely. Please.\"\n\nOnce again, we savored a great dinner outside, lingering over our meals and talking. We swapped recommendations on books and movies, and discussed places we had traveled. I found myself enjoying the conversation so much that I was in no hurry to leave. Kelly got us going.\n\n\"As your chaperon, I wouldn't want you two staying out too long. I think it's time we returned to the room.\"\n\nKelly and Cathy went in to the bathroom to \"freshen up\" as she put it, and they emerged minus bras again. Kelly brought her usual towels with her, winking at me as she went by.\n\nWe all got settled in the chairs, and I turned to Cathy.\n\n\"I know that we haven't completed all of our 'small steps' on what we discussed last night, but I think that will take some time. Would you still like to relax and discuss anything else?\"\n\nCathy nodded, blushing slightly. \"I think I would, Brad. There's still more.\"\n\n\"Let's get started, then.\" I went through the relaxation exercise with Cathy, then I discussed things with her Controller.\n\n\"Thank you for you excellent work with Cathy. You helped her arrange things so that she experienced amazing pleasure. Can I ask you to continue that critical role?\"\n\n\"Yes, I will continue to do that.\"\n\nI discussed the Protector's role, and checked in on Joy, who was understandingly very happy these days. I then asked to speak to Desire.\n\n\"Yes, this is Desire speaking.\"\n\n\"Hello, Desire. How do you feel things are going with what we talked about last night?\"\n\n\"I am thrilled that Cathy opened herself to those experiences. Going down on you and giving you such pleasure was very positive for Cathy. And with her bottom, look at how much she learned to enjoy a new part of herself. I think she will find a whole new side to making love that way.\"\n\n\"I'm glad we could help, Desire. How else can we help Cathy?\"\n\n\"I would like Cathy to watch herself make love.\"\n\nMy cock got hard. \"You mean like in front of a mirror?\"\n\n\"...Yes.\"\n\n\"That sounds exciting. Tell me more about what you want Cathy to experience from that.\"\n\n\"I would like her to see her own body making love. She should see how beautiful she is and how much she has to share. I want her to see what you see.\"\n\n\"OK, Desire, I think we can do that. Anything else?\"\n\nCathy sighed. \"Yes, I want you to be a bit more possessive of Cathy when you make love tonight.\"\n\n\"So that she can relax and let herself go?\"\n\n\"Yes. I want Cathy to let a little of her bad-girl side come out.\"\n\n\"What is that side like?\" I glanced over at Kelly, her attention rapt on Cathy.\n\nCathy paused. \"You know, that she likes sex; she can't get enough; she'll do anything to feel good. That she has this dark side that she doesn't let on.\"\n\nMy cock was straining. \"Thank you for telling us, Desire. I think we all have some version of that dark side, and I appreciate you trusting us to tell about Cathy's. With Cathy trusting us, we can definitely work with her to bring that side out.\"  \n\n\"Thanks, Brad. I know she'll enjoy it.\"\n\n\"OK, with your permission, I'll call the Protector.\"\n\n\"Please go ahead.\"\n\n\"Protector, may I speak with you, please?\"\n\n\"Speaking.\"\n\n\"I know you heard what Desire wanted, and Kelly and I are very comfortable with that. I want your help to protect us all from fear as we explore Cathy's passions. Can you help us that way?\"\n\n\"I'll be on the lookout for Cathy and you. She still may do or say something that will hurt her or you. However, I will try to help as you ask.\"\n\n\"Thank you, Protector. May I speak to the Controller again?\"\n\n\"You are speaking to the Controller.\"\n\n\"Controller, can you help Cathy control her fears as she explores this side of herself? It is a big job.\"\n\n\"Yes, I can.\"\n\n\"Thank you. I know that Cathy appreciates your work very much. Now, can you take us back to the beach?\"\n\nAfter returning from the beach, I asked Cathy: \"Do you remember what we talked about?\"\n\n\"Yes,\" she replied, \"and I'm excited to get started.\"\n\n\"OK, as I get a little more 'possessive' with you, it's a good idea for you to have an out if you start to get uncomfortable. Why don't you say something like 'Let's try something else,' and I'll know to back off. How does that sound?\"\n\n\"That sounds great, Brad, but I doubt I'll need it. I really trust you.\"\n\n\"Thanks, Cathy. This first time, I'll take it easy and we'll see how you like things.\"\n\n\"Working a deal so there's a second time?\" Cathy was looking into my eyes, smiling.\n\n\"That never crossed my mind,\" I said, smiling back. \"OK, let's get started.\" I looked over at Kelly. \"Can you help me get that dresser with the mirror moved so it faces the bed?\"\n\n\"Got me doing home improvement, huh?\"\n\nI laughed and turned back to Cathy. \"So if you're this girl that loves sex, maybe you can lose the clothes while we move the dresser. I want to see your body.\"\n\nStartled, Cathy nodded. She stood up as I turned with Kelly to the dresser. Fortunately, it moved fairly easily on the smooth carpet, and we were able to position it where the mirror reflected the side of the bed.\n\n\"Let's get a chair over here for you, Kelly. Don't want you missing anything.\"\n\nWe positioned a chair at the foot of the bed where Kelly and Cathy could see each other in the mirror.\n\nI turned to Cathy. \"You look fantastic standing there. How does this look for exploring your desires?\"\n\n\"It looks perfect, Brad.\"\n\n\"Will you join me, please?\"\n\nI held out my hand as Cathy walked over. Her eyes revealed the sensation of being the center of attention. She had been naked with me clothed before, but she had been busy kissing and touching. This time, we hadn't started yet. Kelly and I followed her as she walked over.\n\nI took Cathy's hand and pulled her close. We kissed deeply, and I ran my hands up and down her back. \"You have me so excited. I just love your body,\" I breathed into her ear.\n\n\"Ummmmm,\" Cathy replied as she opened her mouth to me.\n\nI ran my hands further down to her ass, cupping her cheeks. Cathy moaned into my mouth. I kissed and fondled her until I felt her breath quicken, then I broke the kiss and turned her around, facing the mirror.\n\n\"Watch yourself,\" I whispered into her ear as I ran my hands up and down her sides.\n\nI watched over her shoulder as Cathy raised her eyes. They showed a mixture of fear and excitement as they flicked over to mine. I raised my hands under her breasts, and her eyes snapped back to watch. I cupped just underneath the nipples, watching them harden in the mirror. I relished the sight of her breasts squeezing under my hands.\n\n\"Ohhh,\" Cathy said as I slid over her nipples. Her eyes stayed riveted as her hard nubs popped in and out of view beneath my hands. I slid my lips down her neck and she turned, her mouth open and seeking mine. I mashed my lips to hers and drew her back against me. After a long, hot tongue dance, we broke away and she turned back to watch me roll her nipples between my fingers.\n\n\"Let's see how it looks from the side,\" I whispered as I turned her so she faced Kelly. We both looked in the mirror as my hands cupped her breasts. I then trailed my hands down to her sides and cupped her ass.\n\n\"Ummmm,\" Cathy purred as she watched me caress her backside. She leaned forward and pushed her ass into my hands. I responded by sliding my hands deep between her cheeks, getting another moan.\n\n\"Is this what you want?\" I asked her.\n\n\"Yesss,\" she breathed, bending over even further. I caressed all around her legs and butt, responding to her need.\n\n\"Let's get my clothes off,\" I told her, my cock straining to be free. Cathy turned around and unbuttoned my shirt, sliding it off of me with a deep look into my eyes. She kneeled down and unbuckled my belt and fly, then slid off my slacks. Finally, she reached up and pulled my boxers off, chuckling as my cock sprang up. As she licked her lips and moved toward my cock, I put my fingers on them, getting a questioning look.\n\n\"Watch,\" I said, and I turned slightly away from the mirror.\n\nCathy smiled as she caught the tip of my cock in her mouth. She was turned toward the mirror, and she could see her lips and tongue working around my cock. She opened up and plunged down, getting a moan from me. I looked over and saw Kelly with her skirt hiked up, playing with herself through her panties. Cathy watched herself pleasure my rod for a few minutes, and then I caught her hands and pulled her up to her feet. I turned her facing the mirror again and cupped her breasts from behind. She arched her back, capturing my cock in the notch between her cheeks.\n\n\"It feels good riding up between your cheeks, doesn't it?\" I breathed into her ear.\n\n\"Yeah, really good,\" Cathy breathed back, watching herself twist in the mirror.\n\n\"Wait until it's sliding in and out of your ass. It will feel incredible.\"\n\n\"I can't wait.\"\n\nI chuckled. \"We'll get there one day. Right now, just enjoy watching how much of a sex goddess you are. You are turning me on incredibly.\"\n\nCathy's eyes shone with excitement\u2014gone was any sense of fear. Her skin radiated the heat of her desire. I stepped from behind her and lifted her leg, placing her foot on the bed. This position spread her open to the mirror and Kelly's gaze. I knelt down, and Cathy's eyes went wide as my lips approached her pussy. I started licking her from below, making sure that both ladies could see everything.\n\n\"Oh, god,\" Cathy moaned.\n\n\"Fuck,\" Kelly said, and then I heard the rustle of her pulling off her skirt and panties. I kept my attention on Cathy, who was watching her pussy get ravished. Her breathing became more ragged, and she started pushing down into my tongue. Deciding to make her come on my face, I flattened my tongue along her clit as she ground into me, swaying and bucking. Her eyes stayed glued to the mirror.\n\n\"Uhh, uhhhh, ahhhhhhh!\" Cathy exclaimed as she grabbed my head and rode me to a smashing climax. I felt the trembling in her legs and the spasms in her pussy as I held on to support her.\n\n\"Feel good?\" I said as I rose up beside her.\n\n\"Really good,\" she answered, still leaning against me for support.\n\n\"Take a little rest, because there's more,\" I said.\n\n\"Sounds wonderful,\" she said, leaning into me for a kiss.\n\n\"Let's use the bed,\" I said, when Cathy started heating up again. I slid back onto the bed, facing the mirror and leaning back on my hands. \"Hop on.\"\n\n\"Hop on, huh?\" Cathy replied, smiling. \"Is it safe up there?\"\n\n\"Not even close. But it will be fun, I promise.\"\n\n\"Oh, goody,\" she laughed and climbed up to straddle my legs. \"I suppose I'm facing the mirror?\"\n\n\"The better to see you with, my dear.\"\n\nCathy giggled and turned around. She guided my cock to her opening and slowly sank down. I groaned as I watched her ass lower to my lap. I leaned to the side and caught Cathy's reflection in the mirror. She smiled and then returned her gaze to herself. I could also see Kelly, who now had her knees hooked over each arm of her chair, slowly playing with herself. Her swollen pussy lips attested to at least one orgasm while watching me lick Cathy earlier.\n\n\"OK, Cathy, I want you to reach down and play with yourself as we make love. Watch yourself make both of us feel good.\"\n\n\"I will,\" she replied, and I watched her hand drop down to find her pussy lips. As her fingers started sliding between them, I could feel the tips brush my cock.\n\n\"You look like a sex goddess,\" I said as I watched her in the mirror. I looked over to Kelly, who was now sliding her fingers in time to Cathy's motions.\n\n\"I think you're losing some of that 'good girl' reserve, Cathy,\" Kelly stated. \"You're really turning me on.\"\n\n\"It is a turn-on, isn't it?\" Cathy said. \"I look pretty damn hot.\"\n\n\"Smoking. And you feel even better,\" I added as Cathy worked her pussy over my cock. She was taking me deep now, her ass spreading as she bottomed out on each down stroke. Her fingers moved up to her clit, and they started a more rapid strumming motion. I could feel the vibrations travel down her pussy lips.\n\nCathy's eyes roamed up and down the scene, sometimes looking into her face, sometimes watching her breasts sway, and often watching her fingers dance over her clit. Another glance in Kelly's direction showed a blurred set of fingers flying above an engorged pussy. The sights and sensations were bringing me to the edge.\n\n\"I'm close, Cathy. You feel so good,\" I grunted.\n\n\"Ummmm,\" she replied, and she raised up to where she was riding just the tip of my cock. The head became super sensitive as she rapidly rocked her pelvis above me. I could feel the heat radiate into my legs as her pussy massaged me, aided by the furious frigging she was giving her clit. The tingling and pleasure became almost unbearable.\n\n\"Oh, Cathy, ahh, ahhh, uuuhhhhhh!\" I cried as my orgasm broke through me. Cathy sank down, her pressure forcing the come to squeeze through my cock, maximizing the pleasure of each spasm.\n\nKelly's cries brought my attention back to the scene in the mirror. She convulsed as she rode out her climax, her head thrown back and her breasts jutting into the air.\n\nBut Cathy produced the mightiest climax of any of us. She started heaving up and down on my cock again as she watched Kelly finish quivering, and then I watched her fingers press deep into either side of her clit. The little pearl stood proud from its hood as she bounced it back and forth between her fingers. I glanced up and saw her eyes intent on her pussy, her breath becoming short and ragged.\n\nHer entire body tensing up, Cathy held her breath as her face twisted in concentration. Her shoulders hunched forward as she squeezed inward to her core. Then she exploded.\n\n\"Ugh, ugh, ahhhhh, ahhhhhhhhhhhhh! Oh! Oh! Oh! Oh!\" Cathy wailed. I felt the contractions churning through her pussy, but then I felt a hot wetness flow down my balls. Cathy rocked above me, groaning incoherently, and continued to spasm.\n\nFinally, the contractions receded. Cathy eased up the pressure on her clit and hung her head, letting a long sigh escape. I waited, knowing she needed time to physically and emotionally recover.\n\nWith another sigh, Cathy shifted both her hands to my knees to support herself and raised her head. We both looked and saw a face stripped of any intent, expressing the deep emotions coursing through Cathy. It may have been the most open and honest expression I had ever seen. Only in our periods of deepest exhaustion or connection do we drop our masks so completely. She was truly beautiful.\n\nCathy shifted her eyes to mine, and we communicated wonder, thankfulness, and something approaching reverence back and forth. How long we stayed like that, I do not know.\n\nSuddenly, Cathy's face burst into a smile, and I involuntarily grinned back at her. The spell broken, we could finally speak.\n\n\"Wow...\" Cathy said.\n\n\"Yeah, wow...\" I returned. \"Did you come on me?\"\n\n\"Yeah, I think I did,\" she said, blushing a bit.\n\n\"Incredible. I've never felt anything like that. Damn, Cathy, you are amazing!\"\n\n\"I didn't know I could cum that hard.\"\n\n\"I didn't know anyone could cum that hard!\"\n\nCathy laughed, and I heard Kelly joining in. \"Brad's right, girl. You took yourself to a different planet.\"\n\n\"I think that I had a little help,\" Cathy replied. She twisted around and looked at me directly. \"Thank you, Brad.\"\n\n\"Anytime.\" I leaned forward and nuzzled her back. \"Anytime.\" Cathy squeezed my knee in response. We remained coupled as we continued to relax and share an extended afterglow.\n\nCathy turned back to me again. \"You ready, Brad?\"\n\n\"Yes. As good as this is, I know we can't stay this way forever.\"\n\nCathy chuckled, and then slowly lifted herself off me. We both gasped as I plopped out of her. Cathy took one more good look at herself in the mirror and then swung her leg over me. I slid back and found a pillow, Cathy stretching herself out to spoon against me. I slid an arm around her and we just lay silent.\n\nKelly got up, and I felt the covers pulled over Cathy and me. \"Goodnight, you two. You were lovely. Sweet dreams.\"\n\n\"Sweat dreams to you, Kelly,\" I answered sleepily. \"Thanks for taking care of us.\"\n\n\"Glad you noticed,\" Kelly responded.\n\nI heard Kelly slide into her bed as Cathy nestled against me. I dropped off quickly.\n\nI woke to see a pair of twinkling eyes looking into mine.\n\n\"Morning, sleepyhead. Worn out from last night?\"\n\n\"Me? Never,\" I countered. \"If you hadn't wanted to go to sleep, I would have been up for two to three hours more.\"",
        "\"So sorry to disappoint,\" Cathy said lightly. \"Maybe I can make up for it this morning?\"\n\n\"Maybe,\" I answered. \"What do you have in mind?\"\n\n\"First, I thought we ought to make sure our chaperon is on duty. Kelly, are you over there?\"\n\n\"On duty, Ma'am,\" Kelly chirped. \"How can I serve?\"\n\nCathy sat up, pulling at my arm to get me up as well. \"Why don't you join us while I tell Brad my request?\" She patted a spot beside her.\n\nA very naked Kelly sat down on the bed beside us. I had seen her naked several times before, of course, but it was different to see her this way before Cathy and I had gotten aroused. I tore my eyes back to Cathy, not wanting to break the mood.\n\n\"Brad, remember what we did yesterday afternoon, after coming back from the pool?\"\n\nI nodded.\n\n\"I, um, really liked it.\"\n\n\"I could tell,\" I said, grinning.\n\n\"Well, anyway,\" she said, hesitating a bit, \"I would like to do the exact same thing again. That is,\" and she looked deep into me as she took hold of my cock, \"if you would like to.\"\n\n\"I'd love to, Cathy.\" My cock started stiffening in her hand.\n\n\"I guess there is only one small thing I'd like to change,\" she continued a little more confidently now, still looking into my eyes. \"I'd, um, like to trade places with Kelly.\"\n\nTime stopped...and didn't restart.\n\nI tried to figure out what she had just said, but her penetrating eyes made it hard to think. Trade places with Kelly. What the hell did that mean? Damn, I can't think! All I can see are those eyes, boring into mine!\n\nSlowly, I put the words together and thought about what it meant. The blood rushed to my cock before I fully worked it out. No, it couldn't be. If Cathy traded places with Kelly, then Cathy would be sitting on the chair, and Kelly would be...\n\n\"I think you like the idea,\" Cathy said softly, tracing her fingertips over my rigid cock. She must have sensed my bewilderment, because she smiled at me, and then leaned close to brush her lips against mine. After the lightest of kisses, she continued leaning until her lips were next to my ear.\n\n\"Yes,\" she breathed. \"I want to watch you and Kelly play with each other's...bottom. Don't worry, it's alright. That's what she and I were talking about in the bar when you walked up, remember? I can feel that at least one part of you likes the idea,\" she giggled as she squeezed my cock, \"but does all of you like it?\" Cathy leaned back.\n\n\"I know it bends the rules a little,\" she continued, looking into my eyes again, \"but I think we can all maintain our relationships. Kelly and I are very good friends, and I would like her to experience a little of the pleasure I have found.\"\n\n\"You're sure that you're OK with this?\" I said, my brain finally able to produce language. \"No regrets afterward?\"\n\n\"More than sure.\" Cathy gazed confidently at me. I looked over at Kelly.\n\n\"And you, Kelly. This is what you want?\"\n\nKelly winked. \"Shocked I'd settle for you?\" She smiled. \"Yes, Brad, I'd love to.\"\n\nI leaned in and gave Cathy a kiss. \"Better get comfortable over in your chair.\"\n\nBoth ladies laughed. I got up and went to the bathroom for a couple of towels. When I returned, Kelly was patting the bed beside her, the bottle of lubricant in her hand and a wicked grin on her face. Cathy had pulled her chair close to the bed, and she giggled when I tossed her one of the towels.\n\n\"What I do to please my friends,\" I said as I stretched out beside Kelly.\n\n\"It's hard to be a true friend, isn't it?\" Kelly said, kneading her hands into my back. \"Thank you for giving sooooo much.\"\n\n\"Whatever,\" I countered. \"Actually, maybe it won't be that bad.\"\n\n\"Oh, it will be real bad, Brad.\" I jumped when I felt the swat strike my ass. \"I'm a bad girl, remember?\"\n\n\"I do now.\" I looked over at Cathy. She smiled back at me, but I could also tell she was hot and excited. She shifted her eyes and watched intently as the second swat struck the other half of my ass.\n\n\"OK, I think I taught you your lesson,\" Kelly cooed. \"Let's rub the pain away, shall we?\" Kelly shifted to a very light touch and started tracing her fingertips over my ass.\n\n\"Ummmm,\" I groaned as her touch lit my fires. \"That feels great.\"\n\n\"Good,\" Kelly said, her voice more serious now. She continued the massage, increasing the pressure and backing it off. I let myself respond to her fingers, grinding my hips into the bed. As I warmed up, I pulled one leg forward and arched my back slightly, inviting her to go further.\n\nKelly responded to the invitation, plunging her fingers deeper between my cheeks. I pushed back against her hands, enjoying the feel of Kelly's touch. I looked over at Cathy. She was still staring intently at Kelly's hands, and I saw her swallow involuntarily. Her fingers traced a pattern around her own pussy lips.\n\nI let out a contented sigh as Kelly's fingers found my anus. I brought the other leg forward a bit to open myself up. Kelly responded by probing deeply around my ass. Her touch was more confident than Cathy's had been, perhaps because she had seen my comfort with it yesterday.\n\nReady for more, I raised up onto both knees, arching my back to give Kelly total access. She hummed her approval and slid her entire hand over my anus, rubbing and prodding. I let her continue like this for a while, knowing the next stage would probably go quickly.\n\nI felt Kelly twist and heard the snap of the lubricant bottle. Her hand left my ass for a short moment, then returned. I relaxed completely and let her slide inside.\n\n\"Ummmmm,\" I groaned as I felt Kelly's finger. She didn't pause, but just slowly pushed to the bottom. I reached back and encircled my cock while she started working her finger in and out. I twisted my head to look at her and she smiled back at me in genuine pleasure\u2014she was enjoying this. I then looked over at Cathy, who noticed my head turning this time. She winked and then looked down, drawing my attention to where her fingers were sliding between her pussy lips.\n\n\"Looks like someone is enjoying the show,\" Kelly observed.\n\nCathy looked up. \"It is pretty hot.\"\n\n\"I know how you feel. You two have giving me some great shows the past few weeks,\" Kelly answered.\n\nEven in my aroused state, I couldn't help it. \"Maybe I'll get to enjoy a show myself some day.\"\n\nThe ladies both busted up laughing.\n\n\"Brad, you are evil. If I didn't have my finger up your ass, I'd get you for that.\"\n\n\"Somehow I don't feel too safe, though,\" I answered.\n\n\"At least you're smart,\" Kelly answered. She drizzled the lube on another finger and slowly pushed it in.\n\n\"Ahhhhh,\" I moaned and pushed back into her hand. I began to pump my cock as she slid her two fingers in and out, going deeper each time. Finally, she was plunging all the way in. I collected the precum leaking out of my cock and slipped it over the shaft, enjoying the warm, slick feeling.\n\n\"This is hot, Brad,\" Kelly said. \"I'm really enjoying this.\"\n\n\"Not half as much as I am,\" I groaned. \"You're doing great...Keep it up.\"\n\nI looked over at Cathy again, and her fingers were dancing over her pussy. I felt Kelly's other hand start rubbing over my ass while she continued to stroke in and out of my hole. The combination of watching Cathy, feeling Kelly's hands both on me and inside me, and sharing such intimacy with both of them, had me rushing toward a powerful orgasm.\n\nI lightened the pressure on my slick cock to draw out the pleasure, but I kept the strokes fast. Heat radiated from my cock and ass, and spread through my entire body in waves. I was just barely touching the underside of my cock, riding the knife edge of release. When I couldn't hold back anymore, I squeezed down and pumped my cock hard. Kelly felt it and plunged her fingers in deep, spreading my ass with the pressure of her knuckles.\n\n\"Uhhhhh, ohhhh, ahhhhhhhhhh,\" I moaned as my orgasm overtook me. Ropes of cum shot out of my cock as spasm after spasm engulfed me. My toes clenched and I balled the sheets in my left hand, completely unable to control my body as I succumbed to the waves rolling through me.\n\nFinally, the spasms settled down and I relaxed to enjoy the aftershocks. Kelly expertly worked both of her hands to prolong the sensations without being too intense. I slowly stroked and milked the last pleasure from my cock. I had lost track of Cathy in the throes of my orgasm, so I opened my eyes and looked over at her. She lay back in the same post-orgasmic glow I was feeling, slowly stroking her swollen pussy lips with one hand while the other cradled a breast. She smiled as she noticed my gaze, and I smiled back. Her eyes expressed contentment and acceptance, reassuring me that she was comfortable with the intimacy between Kelly and me.\n\n\"Whewwwww,\" I sighed, letting go of my cock and resting on my forearms.\n\n\"Just relax, Brad,\" Kelly said as she slowly worked her fingers out of my ass. She continued to slowly stroke back and forth, but brought them out a little more each time. With her other hand, she massaged around my opening, keeping me relaxed as her fingers worked themselves out. When they emerged, she continued to rub my butt.\n\n\"That was unbelievable, Brad,\" Kelly said. \"Just like Cathy said, I could feel your contractions, both in your ass and in your cock. It was like I was riding the waves with you.\"\n\n\"They were really good waves, too. Thanks, Kelly. You were awesome.\"\n\n\"You're welcome. Now, I'm just a little horny myself, so when you think you've recovered, let's get cleaned up.\"\n\n\"Can't wait for me to get my hands on your ass, huh?\" I laughed as I got up and started toward the bathroom. Kelly followed, shaking her head at me.\n\nAfter we cleaned up, I got back on the bed and motioned Kelly to lie down. Cathy settled back into her chair and gave me a wink, mouthing \"You're welcome\" to me. I shook my head, not believing that I would be putting my hands on another beautiful woman this weekend.\n\n\"Ummmmm,\" Kelly purred as I started with a light rub around her shoulders and spine. I moved down to her lower back, getting another sigh of approval. I took the opportunity to study Kelly's body. I could see the swell of her breasts flattened against the bed, the taper of her waist, and then the flair of her hips leading to toned legs. Her ass slowly shifted as she ground herself into the bed. Sensing her need, I slid my hands onto her firm cheeks.\n\n\"Yes....that feels good,\" Kelly whispered. I traced my fingertips over her ass, watching Kelly arch her back to push into my hands. Kelly sighed, and her breathing deepened. I glanced over at Cathy and saw her attention focused on Kelly while her fingers traced between her legs.\n\nKelly spread her legs slightly, inviting me further. When I held back, she pulled a leg forward, arching her back further.\n\n\"Brad....please?\" she begged. I relented and slid my fingers down around her puckered hole. Kelly had arched her ass enough that I had a good view as I circled, watching her twist to get my fingers on her sensitive spot. I committed the show to memory, knowing that it was a one-time experience.\n\n\"Ohhh....yes,\" Kelly sighed as I let my little finger trace directly on her anus. I started lightly and let her build the pressure as she continued to push her ass up into my fingers. With my other hand, I massaged her firm cheeks, giving her stimulation all over. Kelly enjoyed this position for several minutes, then she pulled her elbows and knees under herself and raised her hips from the bed. In this position, I reached under her and cupped a hanging breast, getting another sigh of approval.\n\nSeeing Kelly push and writhe against my finger probing her ass, I decided to see if she really wanted to push against me as much as possible. I brought my thumb down to her sphincter, letting my other fingers spread possessively over the rest of her ass, hinting at what was to come.\n\nKelly immediately groaned and arched her back hard, bringing her pussy into my view. I let my fore and index fingers drift down along either side of her pussy, framing the puffy lips as she squirmed back against me. I realized I was hard again as I enjoyed the view of her ass and pussy just inches from my eyes. Looking up, I saw that Kelly had her eyes tightly shut, a look of concentration on her face. I turned my head to check on Cathy again. She turned up to me, and let out a long breath through pursed lips. Her eyes shone with excitement. She was definitely OK with this.\n\nI found the bottle of lube on the bed and flipped it open with my left hand. Keeping my right hand brushing Kelly's ass, I drizzled a good amount on my thumb and replaced it at her sphincter. She pushed back and relaxed, opening up to me. I pushed in just a bit, getting a whimper of assent. As Kelly repeatedly pushed back into my hand, I worked my thumb in a little more each time, sinking easily into her inviting ass. With her moans of pleasure encouraging me on, I sunk my thumb completely into her. With a final push back, she spread her asshole around the thick part of my lower thumb, my hand jammed tightly against her.\n\n\"Oh, fuck, that feels good!\" she panted. I started a twisting motion as I matched her thrusts. Her sphincter spread open on each push inward, and then pulled at my thumb as I stroked back. I drank in the sight of my hand plundering Kelly's gorgeous ass. I reached back down to her breast and twisted her nipple in my fingers, getting more sighs and whimpers of pleasure.\n\nAfter letting Kelly revel in these sensations, I shifted back and moved my fingers to frame her pussy. She groaned and twisted back into my hand. I took a good look at her engorged pussy, the wet inner lips prominently leading down to the hood of her clit. I let my hands move inward, now sliding along her outer lips. Kelly quickened her thrusts to openly rut against my hand, my thumb plunging into her ass. Finally, I slid my fingers into her inner lips, working to drive Kelly white hot without pushing her over the edge.\n\n\"Ugghh, ugghh, ugghh,\" Kelly grunted in time to her thrusts. She had given herself over to the sensations, and I felt her raw need and her dependence on me. It was time to take her to climax.\n\nI moved my hand from her breast and brought it under Kelly until I was touching her clit, both my arms now wrapped around her. Keeping the pressure on her ass and pussy from behind, I now gently teased her clit from the front, drawing her closer to the edge. As she ascended, I increased the pace but lightened the pressure until she was squirming in my hands.\n\n\"Oh, oh, oh.\" Kelly's whimpers increased in pitch. She had stopped thrusting, her muscles taut as she hunkered down on my hands. I kept her on the edge until she trembled, her back dotted with the sweat popping out of her pores. Then I felt it deep in her ass, the involuntarily quivering of her inner muscles signaling her impending climax. I immediately frigged my fingers hard against her clit, driving her over the edge.\n\n\"Uhhhhhhhh, uuuggggghhhhh!\" Kelly expelled as her orgasm wracked her body. I felt the convulsions billow up from within and wash through her body. Her ass clutched at my thumb as her pussy contracted around my dancing fingers. With each contraction, Kelly whimpered and trembled, and she would have collapsed if not for my arms. I marveled at the intensity of her orgasm as I shared each spasm with her.\n\nFinally, I didn't feel any more contractions, so I slowed my hands to gentle caresses as Kelly twitched with the occasional aftershock. As her panting relaxed into breathing again, I slowly lightened up on her pussy while my thumb came out a little more each stroke. Once I eased it out, I gently massaged her ass, keeping a connection as she recovered.\n\n\"Ohhhhh, God,\" Kelly exhaled as her eyelids fluttered open. She eased her knees back and settled down onto the bed. \"I don't know if I'll ever get up.\"\n\nI patted her ass and chuckled. \"I could feel it. You must be exhausted.\"\n\n\"Yeah, but a good exhausted.\"\n\n\"Brad?\"\n\nI whipped my head around to Cathy, who had that wild look in her eyes.\n\n\"Looks like you enjoyed it too.\" She pointed at my rigid cock. \"You want me to help you with that?\"\n\n\"I'd love it.\"\n\nCathy jumped up from the chair and hopped on all fours on the bed, looking over her shoulder at me. \"Pound it into me hard and fast. Please, just do it.\"\n\nI turned to her and lined up my cock with her swollen pussy. When she felt the head at her entrance, she jammed back as I pushed. I impaled her until my hips slapped her ass, then I grabbed her hips and started pounding. Cathy was right, I needed a good fuck after watching and feeling Kelly, and I could tell that she needed one too. Our bodies slapped against each other as we drove to climax. I saw Cathy slip a hand between her legs, and I felt her fingers graze my balls as she diddled herself.\n\nFortunately, my earlier orgasm kept me from cumming too soon as Cathy worked herself over. She panted and moaned as she repeatedly rammed back into me. Her fingers went into overdrive, then I felt her pussy tense up and spasm as she came all over my plunging cock, never stopping her backward thrusts. Watching her head thrash and her body heave drove me to a new level of excitement, and when I looked down to her gorgeous ass getting flattened by my hips, the cum started surging through my balls. I pushed a few more times and then pulled her hips tight as I spurted into her clutching pussy.\n\n\"Oh, God, that felt good,\" Cathy purred from below me when we had calmed down. \"I needed that so bad.\"\n\n\"I needed it too. You are amazing, Cathy,\" I answered. \"I'm one lucky guy.\"\n\n\"Glad you realize it, Brad,\" Kelly interjected. \"I almost had to play with myself again, watching you two fuck your brains out beside me.\"\n\n\"We were going at it pretty heavy, weren't we?\" Cathy giggled.\n\n\"Yeah. Who would think that cool, collected Cathy would be on her hands and knees, ramming herself onto a hard cock and moaning like there was no tomorrow? Damn girl, I didn't know you had it in you.\"\n\n\"I had a good example to follow, Kelly,\" Cathy replied smoothly.\n\nKelly laughed. \"I guess you're right. I was getting off pretty good myself.\" She turned to me. \"Brad, where the hell did you learn to do that?\"\n\n\"I just let my hands follow your body, Kelly. You did the rest.\"\n\nKelly narrowed her eyes. \"Nice, safe, answer, bud. I'll ask again sometime.\"\n\n\"Of course,\" I replied evenly. \"Now, I think I need a shower. I'm sorry Cathy, I guess I just grabbed your hips without even cleaning up.\"\n\nCathy turned to me. \"Brad, it's OK. I kind of...invited you to grab me, didn't I? I'm glad you listened. Now, about that shower. Care if I join you?\"\n\n\"Um, not at all,\" I replied, seeing her eyes dance as they registered the surprise in mine. After all the things we'd done together, Cathy still hadn't really moved outside the boundaries of our original deal. Even our unplanned encounters could still be chalked up to me helping Cathy loosen up sexually. I had taken care to keep our interactions somewhat neutral, giving Cathy the space to act on her desires without a relationship getting in the way. Now, however, she was offering to just spend some time with me, with a twist. We'd be naked together, but too worn out to do anything besides enjoy each other's company.\n\n\"Give me a sec, and I'll call you in.\" Cathy got up and closed the door.\n\n\"Well, well, well...\" Kelly called out when the door closed. \"Miss Cathy is showing some interest. What are you going to do about it, Brad?\"\n\n\"What any guy with half a brain would do. I'm going to show some interest back!\"\n\n\"Good idea. Now, I figure it's time to ask again. Where did you learn to play with a girl's ass like that?\"\n\n\"Old girlfriend. She taught me what she liked with her ass. I figured that you would like something similar, so I gave you some hints and went ahead when you approved. When I said that I was following your body earlier, it was mostly the truth.\"",
        "\"It was pretty damn good. Cathy is going to be a lucky girl.\"\n\n\"Afraid you missed out on your chance?\"\n\n\"In your dreams, buster. Now, you better be paying attention to your girlfriend.\"\n\n\"Like any gentleman would.\" I made a show of straightening things up until I heard the \"OK, Brad,\" come from the bathroom. As I made my way in, the shower was running, with Cathy's form behind the glass. I relieved myself and then pulled the door open.\n\n\"Thanks for letting me join you,\" Cathy said as she pulled me to her and gave me a long kiss.\n\n\"Thanks for asking,\" I replied, hugging her tight as we stepped into the spray.\n\n\"Would you like for us to wash each other?\"\n\n\"I'd love it.\" I got the soap while Cathy turned away from me. I reached up and started on her shoulders, getting a hum of approval. As I worked down her arms, I felt the particular closeness that bathing someone else brings. Cathy shivered as I used both hands to rub between the fingers of each of hers. I felt her fingers stretch and flex under mine as she surrendered to the sensations. I then slid my hands back up and worked the soap over her back.\n\n\"Ummmm,\" Cathy hummed as I kneaded the muscles of her back. I reached around to the front and started at her abdomen, moving up and cupping under her breasts. Her erect nipples snapped between my fingers as I moved over them. I finished her upper chest and gently pushed her under the spray.\n\n\"I figured you might think my chest needed extra cleaning,\" Cathy teased as she rinsed off.\n\n\"The thought crossed my mind, but I figured we would never get out of here. Now, let's get your hair wet.\"\n\nCathy tilted her head under the spray while I squeezed a blob of shampoo into my hands. I reached up and lathered her hair, gently working the suds through her strands. Cathy hummed her approval as I kneaded her scalp and the back of her neck. Finally, I directed her head back into the spray and rinsed everything out.\n\n\"OK, close your eyes as I do your face.\"\n\nCathy complied, and I reached around and very gently rubbed my fingertips over her forehead, down over her eyes, and around her ears. I felt her kiss my fingers as I brushed past her lips. Cathy sighed as I worked all around her neck, and I felt a thrill as she experienced my touch with her closed eyes.\n\n\"Time to rinse off,\" I whispered into her ear.\n\n\"Ummm,\" she hummed as she moved into the shower and rinsed off.\n\n\"Let's get your legs.\" I grabbed the soap again and lathered up my hands. I started at her hips and worked to the front. Cathy dropped her head back as I worked my hands between her legs, gently cleaning her all over. I continued down each leg to her ankles, then I came around to the back and worked my hands back up past her knees. Cathy moaned as I cupped her ass cheeks in my hands, kneading her firm flesh. She spread her feet to either side of the tub, placed her hands on the wall in front of her, and leaned over, the water cascading from her back.\n\n\"Brad, this feels wonderful,\" she said she pushed her ass into my hands. I slipped into her crack and rubbed up and down, approaching her opening with each stroke. Cathy moaned as I slipped over her sensitive spot and rubbed all around, cleaning and teasing at the same time. When her hips started moving in circles, I placed my thumb over her ass and spread the rest of my hand over her cheek, giving her something to grind into. Cathy pushed back harder.\n\n\"I know this is supposed to be just a shower, but you can't leave me like this.\"\n\n\"Cool, collected Cathy is begging?\"\n\n\"Please, Brad, just get me off!\"\n\nI laughed in reply and swung my other hand under Cathy's abdomen, finding her swollen pussy. I guess she wasn't worn out after all. Cathy moaned as I dipped the tip of my thumb into her anal sphincter, squeezing her ass with my other fingers. My eyes took in the sight of Cathy bent over, her breasts hanging down with hard points for nipples, and her ass twisting against my hand. Cathy closed her eyes in concentration as she rode my hands, her breath coming in gasps. I found her clit and rubbed the knob between my fingers, not trying to slow down her ascent to orgasm.\n\n\"Uhhh, uhhh, uhhh, aahhhhhh!\" Cathy grunted as she shuddered through her release. I felt the contractions ripple through her pussy and ass.\n\n\"Whew. That felt really good,\" Cathy said when she relaxed against my hands.\n\n\"Think you're clean enough down there?\"\n\n\"For now,\" Cathy laughed. She raised up and ran her hands through her hair under the spray, turning her body and stretching out her limbs. She turned to me, a hint of color in her face.\n\n\"I'm having you play with my behind a lot these days, aren't I?\"\n\n\"Don't be embarrassed,\" I replied. \"I love it. I love watching you enjoy that part of yourself. Besides, I love getting my hands on that beautiful ass of yours.\"\n\nCathy turned from me, looking over her shoulder and cupping a cheek. \"You like a lady's ass, hmmmm?\"\n\n\"I like everything about a woman,\" I replied. \"But yes, I am a bit of an ass fan.\"\n\n\"Well, if it gets old, let me know.\"\n\n\"That will never happen,\" I said, surprised at the conviction in my voice. Cathy looked up, a shy smile playing about her lips.\n\n\"Good.\"\n\nI took her in my arms and gave her a long kiss.\n\n\"OK, Cathy, we still have your feet.\" I whispered as I pulled away.\n\n\"I guess we do, don't we?\" Cathy replied.\n\nI sunk down and she daintily lifted one foot to give me access. I cradled her foot in my hands, massaging as I soaped down to her toes.\n\n\"Feels nice,\" Cathy purred.\n\nI gently put her foot down and did the same for the other.\n\n\"All spic and span,\" I said, standing up again.\n\n\"So soon? That was fun,\" Cathy answered.\n\n\"I bet it was. I'm sure the bonus orgasm didn't hurt.\"\n\n\"It never does,\" Cathy quipped, blushing slightly. She stepped around me and pushed me into the spray. \"Now, we've got to get you clean, don't we?\"\n\nI got to experience the same treatment that Cathy did. She cleaned my upper body and across my face. Her fingers felt great kneading through my hair. When her hands started below my waist, she found my erection and paused.\n\n\"Maybe a bonus orgasm for you, too?\" she inquired.\n\n\"You always make me hard, but I'm almost sore from all the great sex we've been having. Maybe a raincheck?\"\n\n\"I'll make sure you collect,\" Cathy murmured in my ear as she slunk down to soap my legs. Coming back up the back, she kneaded my ass cheeks and then slid her hand deep into the crack. I spread my legs and let her fingertips play about my opening.\n\n\"You do that well.\"\n\n\"Lots of practice,\" Cathy replied, pushing me into the water again. \"Now, let's get your feet.\"\n\nWe finished up and shut the water off. After toweling each other dry, Cathy turned to me.\n\n\"Should we just invite Kelly in to start her shower? It's not like we haven't seen each other naked. I'm getting hungry.\"\n\n\"All that sex working up an appetite?\" I laughed. \"Sure, go ahead.\"\n\nCathy opened the door, her body glowing in the steam that escaped.\n\n\"Kelly, would you like to get started on your shower while we finish up?\"\n\n\"Love to,\" I heard in reply. Kelly waltzed in, looked me up and down, and stepped in the shower, winking as she closed the door.\n\nI shaved and otherwise finished up, thankful that I was a man and could get out of the bathroom quickly. I was surprised to see Cathy finishing as well.\n\n\"You're pretty quick...\"\n\n\"...for a girl?\" Cathy shot back. \"Not much need for dolling myself up when we're going hiking later. Ponytails are a girl's best friend.\"\n\n\"Well, you look stunning as always,\" I said, recovering.\n\n\"Good answer. Now, shall we get dressed?\"\n\nWe dressed and walked out on the deck, taking in the view.\n\n\"What are you thinking?\" Cathy asked as she saw me gaze into the distance.\n\n\"Of how great this weekend has been. I can't think of a better one.\"\n\n\"So you don't spend weekends with two hot ladies all the time?\" Cathy bantered.\n\n\"Well, yes, but the hiking and food is so outstanding here,\" I mused, getting a swat and a chuckle from Cathy.\n\nSuddenly she turned and took both of my hands in hers.\n\n\"Brad, this has been a wonderful weekend for me, too, on many levels. Thank you for sharing it with me.\"\n\n\"Anytime, anytime at all,\" I replied, and then I kissed her.\n\nWe turned again to the view and stood together, enjoying each other's company without having to say anything.\n\n\"Anyone hungry? I'm starving!\" Kelly said as she sauntered out on the deck.\n\n\"Let's go!\" Cathy answered back. \"I've got to recover my energy!\"\n\n\"I'll say.\"\n\nWe headed down for a brunch of omelets, fruit, and assorted breads. The ladies kept the conversation lively, as always. We enjoyed our last morning on the patio, and then went back to the room to put on our hiking shoes and pack up our final things.\n\nWe swung our bags into the trunk and got out on a different trail this time. The morning was still cool, and we made good progress hiking around and behind the first ridge. We took a couple of branches to less-travelled trails, planning to loop back to the main trail on the way back. After about an hour of strenuous climbing, the ladies were still going strong. I remembered that I had mountain biked with both of them in the past, so it wasn't surprising. We hadn't seen anyone in quite a while.\n\n\"Getting warm out here,\" Kelly announced. \"I'm going to lose my top, if no one minds.\"\n\n\"I don't mind.\"\n\n\"That's shocking,\" Cathy observed. \"I suppose you'd be OK if I lost mine as well?\"\n\n\"Well, now that you mention it, I think I would be OK. Please don't worry about shocking me. I'm sure I can handle it.\"\n\n\"Oh, I'm not sure about that,\" Kelly said as she pulled her shirt over her head and reached for her sports bra. \"I've heard it really hurts to step on your tongue when it's hanging out of your mouth.\"\n\nMy tongue did hang a bit as Kelly freed her breasts from the sports bra. They stood proud as she stuffed her shirt and bra into her shorts.\n\n\"Come on, Cathy...it'll be fun. I'd like to keep the tan lines down.\"\n\n\"You continue to be a bad influence,\" Cathy said as she took her hat off and reached to her waist. \"I used to be such a nice girl.\"\n\n\"That's why I like you,\" Kelly declared. \"Nothing better than making a good girl go bad.\"\n\n\"You may have succeeded more than you think,\" Cathy answered. She quickly looked down as she realized what she had said.\n\n\"You're the best kind of girl, Cathy. Good and bad in all the right ways...Now, maybe I should take off my shirt, too!\"\n\n\"Whooohooo!\" Kelly and Cathy whistled as I pulled my shirt over my head. \"Show us some skin!\"\n\nWe hiked shirtless for another half an hour. The combination of skin, exertion, and sweat kept my attention on the beautiful ladies hiking with me. We stopped for a drink.\n\n\"Thanks for carrying the water, Brad,\" Kelly said. \"I guess there's a reason to have you around after all.\" She nodded across the valley. \"You'll be disappointed to know that there's another party hiking over there. I guess we'll have to put our shirts back on.\"\n\n\"Bummer. You sure they'd mind?\"\n\n\"Nice try, buster, but I only let select individuals see these goods for free,\" Kelly said as she shook her chest. \"You're lucky to get the package deal with Cathy.\"\n\n\"I'm a lucky guy.\"\n\n\"You bet your ass you are!\" Kelly shot back.\n\n\"You two are like a couple of kids,\" Cathy laughed. \"Let's get our shirts on before we get busted.\"\n\nWe got our shirts back on and descended back to the trailhead. After a quick restroom break, we drove out from the resort for the ride home. Among other things, I talked about a family trip that I would be making the next weekend, leaving Thursday morning.\n\n\"I guess you'll get your chance to meet Mr. Right, Kelly, since Cathy and I won't be taking your time.\"\n\n\"Maybe I should find Cathy a guy that's not so much a smart-ass.\"\n\n\"That won't be hard. However, it'll be tough finding a guy with all my other special qualities.\"\n\n\"Yeah, right.\" Kelly rolled her eyes.\n\nWe got closer to home, and the realization that our weekend getaway was ending.\n\n\"Would you like to stop by for a bite to eat before we all go our separate ways?\" Cathy asked. \"I've got some cheese, fruit, wine...\"\n\n\"I'd love to,\" I replied. \"Kelly?\"\n\n\"Sounds good.\"\n\nWe got to Cathy's, and she handed me a bottle of wine from her refrigerator. When Kelly excused herself to go to the restroom, Cathy came up close to me.\n\n\"I'll miss our session this coming weekend.\"\n\n\"It will be a long two weeks for me,\" I replied, turning to her.\n\n\"Would you like to get together one evening? I know you're probably getting ready Wednesday evening...\"\n\n\"...I can easily pack Tuesday night and have Wednesday evening free, if that would work for you,\" I said quickly.\n\nCathy smiled. \"Maybe you should just start your trip early by spending the night over here. How does that sound?\"\n\n\"Fantastic. This trip is looking up!\"\n\nCathy chuckled. \"Why don't you come over around six. I'll cook up something, and we can get an early start to bed, perhaps?\"\n\nI leaned over to kiss her. \"I like that plan.\"\n\n\"Good.\"\n\nKelly came back and we put together a simple, but tasty, collection of cheeses, olives, fruits, and crackers. I admired Cathy's grace in being able to pull together a pleasant evening right after walking into her house. We took everything out on the patio and chatted as we ate, comparing notes on the resort and the trails.\n\n\"I think we should get together for some running or mountain biking here in town,\" I said. \"I've been with you two on a couple of group rides, but it seems like the group doesn't do those much anymore.\"\n\n\"I would love to, Brad,\" Cathy answered. \"I am always looking for partners on my workouts. I think I wear poor Kelly out!\"\n\n\"In your dreams, girlfriend. But, yeah, we can probably let you come along, Brad.\"\n\n\"Thanks for putting up with me. I'll get something planned when I get back.\"\n\n\"Sounds good. Cathy's right\u2014it will be good to have someone else available to keep her company. Sometimes I'm busy with a hot stud, and now I don't have to feel bad if I spend the morning in bed.\"\n\n\"You'll be getting your exercise either way.\"\n\n\"Exactly, Brad. You catch on quick sometimes.\"\n\nCathy looked up at both of us. \"Speaking of putting up with people, thank you both for putting up with me this weekend.\"\n\n\"I feel like I've really grown as a human being, to be able to sacrifice like I did this weekend,\" I said.\n\nBoth ladies laughed.\n\n\"Let's see. I spent the weekend with two fabulous ladies, I ate great food, I got good exercise, and I even had passable sex...\"\n\nCathy nearly snorted wine through her nose.\n\n\"...so I guess I can say 'You're welcome' for putting up with you.\"\n\n\"I guess the same applies for me, Cathy. I spent the night with two fabulous people, I ate great food, I got good exercise, and I even had passable sex.\" Kelly had an evil grin as she looked at me. I winked back.\n\n\"So for me, Cathy, this weekend was a dream come true, and I guess Kelly even survived OK. I'm happy to put up with you anytime.\"\n\n\"I bet you are,\" Kelly added, and we all laughed again.\n\nAfter a sip of wine, Kelly looked up. \"Actually, Cathy, it was an incredibly hot experience to watch you and Brad make love all weekend. You're definitely loosening up in the bedroom, girlfriend.\"\n\n\"You think so?\" The two girls shared a chuckle, and Kelly started to pull her plates together.\n\n\"Not to be the fun buster, but I'd better be getting home. I've got a few things I need to do this weekend beside diddle myself watching you two screw each other.\"\n\nWe cleaned up the plates, and moved to the front door. Kelly gave Cathy a hug. \"What a beautiful weekend. Thank you for inviting me.\"\n\n\"Thank you, Kell. It meant a lot to me,\" Cathy said, hugging back fiercely. \"I'll give you a call.\"\n\nKelly reached for the door. \"I'll be down at the car, Brad,\" and she slipped out.\n\nAs the door pulled to, Cathy pulled me into a tight embrace. \"Brad, I really enjoyed our time together. Thank you so much for setting it up, and for all your help.\"\n\n\"I spent the best weekend ever, Cathy.\"\n\nShe pulled back, looking into my eyes. \"Ever?\"\n\n\"By far. You amaze me.\"\n\n\"Wow.\" Cathy pulled me close and whispered \"Thank you\" before our lips met. She devoured my lips with passion, sucking and pulling and not getting enough. Finally, she pulled back.\n\n\"Better not go any further, or Kelly won't get home tonight. I'm looking forward to Wednesday.\"\n\n\"Me too,\" I said, \"in a big way. I'll give you a call.\"\n\n\"Please.\"\n\nCathy followed me outside and waved as I got into the car and pulled away.\n\n\"Oh my God, Brad,\" Kelly piped up as soon as we were going down the street. \"That girl is a sex machine. You'd better watch out!\"\n\n\"No kidding.\"\n\n\"But you love it, don't you?\"\n\n\"Yeah, you could say that,\" I grinned back.\n\n\"I can tell. All ribbing aside, I'm having the experience of a lifetime. To watch two people learn to love each other\u2014how many people get to do that? You both are hot to look at, but you also bring incredible passion to your lovemaking. Then there's watching Cathy let her inner sex goddess out. She hides a volcano under that elegant exterior! To see that side of my best friend\u2014Wow.\"\n\n\"I hadn't thought about it that way. That's pretty cool.\"\n\n\"Besides, I'm collecting a lifetime of masturbation fantasies to boot,\" Kelly said playfully.\n\n\"So we're a bit better than a movie?\"\n\n\"Way better.\"\n\n\"By the way, thanks for being there for Cathy. I really think it's helping,\" I said. \"You give Cathy some sort of... permission...that allows her to loosen up.\"\n\n\"Maybe that's what it is,\" Kelly mused. \"She does seem to be relaxed with me around. Maybe because I've got that air of having done it before\u2014it doesn't seem such a jump for her. Which is funny, because I've never done anything like making love in front of my best friend. In some ways, she's way ahead of me.\"\n\n\"Sometimes I think she's way ahead of us both.\"\n\nKelly looked at me. \"Ah, you're gaining a little wisdom, my friend. You've struck gold with Cathy.\"\n\nI couldn't agree more.\n\nThat night, I unpacked, listened to some music, and just went to bed. I thought about jacking off, knowing that I would hold off Monday and Tuesday to rebuild my stamina. However, the weekend had drained me sexually, so I confined the memories to my dreams.\n\n*\n\nPlease take a moment to vote and offer any comments. They mean a lot.\n\nAdditional chapters linked below."
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "cunnilingus",
        "blowjob",
        "friends",
        "shy",
        "female masturbation",
        "romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-web-ch-03"
}