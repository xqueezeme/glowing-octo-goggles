{
    "title": "Rebound Pt. 03",
    "pages": [
        "---Authors note---\n\nI had to split this story up into parts, and alarmingly I noticed this part is ALL PLOT and NO SEX which is very distressing to me and I understand if you want to skip it. I would.\n\nSex does return in Part 4 which is hopefully the end because boy, is this getting long or what?\n\n----\n\n---\n\nThe next morning\n\n---\n\nSaturday\n\n----\n\nNate\n\n----\n\nThank god we were at mine. I dabbed at my face in front of the bathroom mirror, trying to at least clean some of the blood off. If Russell saw this we'd have a homicide on our hands. I swallowed and winced as I applied arnica- which was probably total bullshit and did nothing but despite my notoriety for constantly being covered in scrapes and bruises, this was kind of a new one and I didn't know what to do. I glanced up as I heard the door creak open and Darius stumbled in.\n\n\"Fuck, my head.\" He moaned. He reached for me and blinked as we caught each other's eyes in the mirror. My heart rate sped up. He paused. His jaw fell open. \"Fuck! Your face!\" Time sped up and he reached out for me, wrapping his arms around me and gently tilting my face to look at him. \"Nate- what the fuck happened last night?\" He whispered. I swallowed as I looked at him. Did he... really.... Not...? But his eyes looked sincere. He looked worried. I avoided his eye.\n\n\"I got wasted and had a minor fight with a tree.\" I said cautiously. \"Do you not remember? The tree won- but it was pretty close.\" Darius laughed and squeezed me.\n\n\"Are you ok?\" He said, holding me close and pushing my hair off my face. \"Should we go to A and E?\" I pushed him off me gently.\n\n\"Na, it's super fine.\" I said. \"Looks fucking awful though- do you think they'll let me in at the shelter?\" Darius laughed.\n\n\"They must be used to you with bumps and bruises.\" He winced. \"Although this one is particularly nasty.\" He shook his head. \"Tell me where that tree is, I might have to have words with it.\" I laughed, and we showered, joking with each other like everything was normal.\n\nHe dropped me off and kissed me goodbye, catching my chin before he left.\n\n\"Are you sure I can't get you anything for that?\" I raised my eyebrows. But nothing. Really, truly nothing on his face but concern. I wonder what it's like to get that blackout? I kind of wish I had been actually.\n\n\"Na.\" I smiled. \"I'll see ya soon D.\"\n\nGod knows why I was lying for him.\n\n----\n\nJude\n\n-----\n\nLevi handed me two pills and a glass of water as I crawled out of bed and into the kitchen.\n\n\"Thanks.\" I took them gratefully.\n\n\"Your drinking is out of control.\" He said stiffly, barely deigning to look at me. I glared at him. as if he wasn't the reason for that.\n\n\"I had two glasses of wine.\" I gestured to the mostly full bottle still on the kitchen counter. \"I went dancing. I had a few more. Jesus Lee.\" He sat opposite me at the table and folded his arms.\n\n\"You went dancing?\" He scoffed. \"That's... there's no way.\" I sighed and sank in my seat. Yeah, dancing was very, very far from a good time in my opinion. I don't think I'd actually been dancing since I was 21. But when Levi wasn't home and wasn't answering calls I decided you know what, fuck it, this could still be a lovely night. I dressed down, because with him out of the picture I didn't have to pretend I cared. I went to Birdcage, where the drinks are cheap which is grand- but better than that they do dine in for the hole in the wall chicken wing joint next door. There is nothing better than an espresso martini and spicy hot wings for curing mild depression, and I'll stand by that. Once that itch was scratched I wandered around the city, bouncing from Shepard, to drink champagne and eat oysters- to Puffin, to sample the natural wine... And then it was late and something about the synth at San Fran was drawing me in, even though the hordes of young people in mesh and glitter were REALLY not my scene. I think it was something Nate once said. About crying and dancing. You know, I never understood that before... but I almost did when I was sitting outside and letting the music wash over me and finding that my foot was tapping and tears were spilling all over my face.\n\n\"Where were you last night, if you're so damn concerned?\" I muttered. Levi caught my hand.\n\n\"Do you really want to know the answer to that?\" He asked. I blinked. I looked up at him. Not really. I looked away, and stared at the table and felt my eyes fill with tears again. Why wasn't I enough for him?\n\n\"Why did you propose?\" I whispered. He sighed.\n\n\"I love you more than life itself.\" He said.\n\n\"Then why are you STILL sleeping around?\" Levi sighed. He didn't even pretend to deny it.\n\n\"I don't know.\" He said quietly.\n\n-----\n\nWe didn't say anything else to each other all morning. I showered and got changed, and walked aimlessly out the front door without saying goodbye. I reached Newtown, and did a bit of window shopping and noticed I was heading up the hill. To the SPCA. Where Nate would be.\n\nI smiled as I thought about him. He'd been there last night, and he was absolutely off his face, and he spotted me and wrapped his arms around me and even though he was high as a kite I still might have kissed him. Thank god his slightly less spacey boyfriend was there. As much as I disliked that guy, he absolutely saved my ass last night when he dragged Nate home. Stupid idea to go to the shelter. Although, actually, Nate probably wouldn't even be there. He had to be coming down hard.\n\nBut I turned the corner and there he was, kneeling and playing with a bundle of kittens.\n\n\"Hey Nate!\" I greeted him. He stood up slowly and glanced at me over his shoulder. He winced as he turned towards me and my smile faltered. \"Shit. Nate.\"\n\nOh shit. Nate. I had the weirdest feeling where I both wanted to hit something and to wrap him in my arms at the same time. I don't think I'd ever had the flare up of wanting to protect someone so badly before. My heart was thumping. That was one hell of a bruise. Shit. Maybe I should have been watching him more carefully last night. Shit. I mean Darius was probably fucking wasted- he gave me the filthiest look as he carried Nate out of the bar... ah shit, shit. Poor Nate.\n\n\"Yeah, not my best look.\" He said lightly. \"Should have seen the tree though, I really gave him what for.\" I bit my lip. Oh. Poor Nate.\n\n\"Tree, huh?\" I said quietly. Nate smiled widely.\n\n\"Yep, you know me. Apparently the clumsiness gets worse when I'm drunk.\" He grinned. Not your place, Jude. But you know, at the same time, fuck it.\n\n\"This tree wouldn't happen to be like 6'5 and have an eyebrow piercing would it?\" Nate's face fell. He shook his head unconvincingly. I normally wouldn't, but.. this was Nate. I sighed. \"I don't think it gets better by ignoring it, Nate.\" Real sage words from someone who ignored his problems for years but hey. Nate shook his head again.\n\n\"Look, it's really not like that.\" He said. \"D is an ass sometimes but this one's all me.\" He sighed. \"Promise.\" He said firmly. \"You wanna hang out with the puppies? They're old enough for adoption now but no one else is in so just us again.\" I nodded silently and let him lead me through the shelter, the spring in his step no less pronounced than usual. Nice try, kid. Puppies weren't gonna distract me that much. He unlocked the door, humming to himself and scooped up two puppies, handing me one as he cooed over the other. I watched him silently. \"They're so cute eh?\" He said happily. \"Do you want to feed them?\" I nodded, and he talked me through the various dietary requirements for dogs, and told me all about the day he had planned for them and I listened silently. \"You're very quiet today.\" He said as his chatter ran out. \"Hungover?\"\n\n\"I wasn't half as wasted as you last night.\" I smiled at him. He winced.\n\n\"Ooooh. Yeah.\" He coughed. \"Uh, sorry. I was... a little much.\" I shook my head.\n\n\"Never happened.\" I said. \"Although on that note. Things that never happened...\" Nate turned away from me swiftly. \"Don't cover for him.\" I said. Nate's shoulders slumped forward. \"Look, I know being in love can be hard. I know you want to think he's amazing, and he'd never really hurt you, and I know you think you're just protecting something special between you two but...\"\n\n\"Not love.\" Nate mumbled. \"Barely like.\" He said. \"And I said it wasn't him, and if you don't believe me I can't change that but it wasn't him.\"\n\n\"Ok.\" I said. \"Well. I'm here if you ever want to talk.\" Nate shook his head and turned back to me with a smile.\n\n\"Want to walk them with me?\" He asked brightly. I sighed. Well. I mean... maybe? Maybe he was telling the truth. Maybe I just wanted Darius to be a bad guy.\n\n-----\n\nNate\n\n----\n\nFuck. The last voice in the world I wanted to hear. No, actually, third to last after my mother and Russell. I glanced over my shoulder as Jude approached me. Ugh. He knew I'd be here! Why did he show up?! He must know I needed, like, a solid week of avoiding him before I could be normal again. My palms started sweating as I remembered draping myself over him like a whore and muttering about how perfect he was. I turned around and his big smile dropped from his face immediately. Oh yeah. And I'd also been punched in the face. Well, at least that was a minor distraction from behaving like a dumb slut on MD.\n\n\"Shit. Nate.\" He said flatly. I winced. I mumbled the same excuse I'd given to Darius but I could see from his face he didn't believe me for a second. Well, everyone is always ready to believe the worst of Darius. Not that they're wrong, I guess. But he really is more than just a shitty drunk. I think. You should hear the things he tells me when he thinks I'm asleep. Projects he's thinking about, interesting birds he's seen, how pretty my eyes are... I'm just saying he's not the pitbull everyone thinks he is.\n\n\"You wanna hang out with the puppies?\" I asked Jude. He was almost as dopey as I was around dogs, I knew he'd say yes. I invited him into their little quarters and told him all about their mum, a sweet old Beagle, and his dad who we actually had no idea about although the vets said he must have been a Lab. I talked him through their food and their day and basically anything to keep talking because the whole time he was giving me this shrewd frowny face like he was biting back doing something awful like telling me how worried he was for me.\n\nI can carry on pretty well talking to myself, but even I have my limits, and there's only so enthusiastic you can be in a one sided conversation. I had to slow down eventually.\n\n\"You're very quiet today.\" I said. He gave me sweet fuck all. Thanks Jude. \"Hungover?\" I teased. He raised his eyebrows at me and smirked. Yeah, shouldn't have invited that. That was a major apology I needed to give, but he waved it aside. He pressed me about D. For a second I almost gave in.\n\nMaybe it's a pride thing. I know I'm a ditz but I'm not stupid. And only stupid boys stay with guys who beat them up. Maybe if I lied enough I would believe it.\n\n---\n\nMonday\n\n----\n\nNate\n\n----\n\nAlex was silently making breakfast when I got up, and he looked at me and nodded, his lips tight. I nodded back and started to boil the jug, but he stopped me and gestured at some coffee on the table. He sighed as I thanked him and tapped his fingers on the kitchen bench.\n\n\"So.\" He said. \"You got in a fight?\" Uggghhh. The bruise had faded. It just looked mildly noticeable, you know, like I'd been punched in the face a couple of nights ago. I'd brought some makeup and was pretty sure, after incognito watching some makeup videos, that I could hide it entirely. Which I wouldn't have bothered with except that I work with my older brother and there was absolutely no way he was falling for my bullshit. I shrugged at Alex.\n\n\"Yeah.\" I said. \"I got... I took a little too much on Friday night. I'm actually not sure what happened. Uhhh... just woke up with a black eye.\" I laughed and smiled at him as warmly as I could muster. \"I'm such a dumbass.\" Alex stared at me and nodded his head slowly. Yeah. He didn't buy that for a second. Man. Not even Alex was falling for it huh? I definitely couldn't convince Russell. Alex sat next to me and nibbled on his toast.\n\n\"I used to work for Youthline.\" He said. \"You want the number? It's free to call and it's anonymous.\" I glanced at him. I almost said, you know- 'woah, woah, woah... why would I need that...' but the words died on my lips. I wonder if he'd been home. I wonder if he heard the whole thing. I swallowed.\n\n\"Ok.\" I said. He scribbled it down and pushed the bit of paper over to me.\n\n\"They're really good, you know, if you just want to talk, not even about anything, just to talk. You know, sometimes you can't talk to people you're close with because maybe you feel like you're stupid, or you did something- and even though that's not true, it's definitely easier with like, a voice on the phone...\" I smiled at him and awkwardly touched his shoulder.\n\n\"Thanks Al.\" I said. \"I'll give it a go.\"\n\n----\n\nI called the number on the walk to work, and waited on the line for about ten minutes before someone answered.\n\n\"I don't know why I'm calling.\" I said. \"My flatmate thinks it would be good to talk.\"\n\n\"About anything in particular?\" The voice on the other end said. A girl, youngish. She actually sounded a bit bored, which I kind of liked.\n\n\"Well I mean, it was prompted because I have a black eye, and he thinks my boyfriend did it.\"\n\n\"Sounds like you have a very caring flatmate.\" She said. \"I once got a black eye because I reached for a book on the top shelf of my bookshelf and the shelf collapsed. It really hurt.\" I laughed. This wasn't what I'd expected from a help line.\n\n\"It really hurts!\" I agreed. \"I keep rubbing my face and then I remember. Not to mention I feel like an idiot, and it's so embarrassing when people look at you, like you've got a flashing sign on your head saying 'feel sorry for me'.\" She laughed.\n\n\"Gah.\" She said. \"Pity, right? Like hey, I'm a strong independent person and I don't need your pity!\"\n\n\"Exactly!\" I grinned. \"Did you tell people about the bookshelf?\"\n\n\"Eh, I kept it vague.\" She said. \"I'm a bit clumsy and I play a lot of sport so it wasn't totally out of character. I guess it would have been annoying if it was out of character. Like everyone wants to know why it happened but then the answer will never satisfy them. Especially if they've already made up their mind, like your flatmate.\"\n\n\"He's right.\" I swallowed. \"It was my boyfriend.\"\n\n\"Ah.\" She sighed. \"Keep the flatmate, ditch the boyfriend.\" I laughed.\n\n\"Are you meant to tell me what to do like that?\"\n\n\"I'm meant to listen.\" She said. \"And check that you're not a suicide risk and if you are I'll escalate. But you're not a suicide risk. Just a health and safety risk. And since my priority is your safety, anything that gives you black eyes is considered a risk. My advice is don't indulge in risky behaviour.\"\n\n\"So don't go reaching for books?\"\n\n\"I brought a stepladder.\" She said. \"Risk mitigated.\"\n\n\"Right. Actually, that's where I went wrong. He's only like that when he drinks, and I fucked up and drank with him.\"\n\n\"You didn't fuck up.\" She said kindly. \"Don't blame your actions. You can control you but you can't control everything.\"\n\n\"I can control not drinking with him.\"\n\n\"But you can't control him drinking.\" She said. \"That's a bomb waiting to go off, isn't it?\" I swallowed.\n\n\"He isn't really that guy.\" I said. \"He's never done that before... well. Not to me.\"\n\n\"First time for everything.\" She said. \"Are you ok? I mean, bruised, obviously, but are you feeling safe? You got anyone other than your flatmate looking out for you?\"\n\n\"My brother looks out for me.\" I snorted. \"Maybe too much. I'm a little scared he's gonna actually kill D if he finds out.\"\n\n\"Well, that's not really going to solve the problem.\" She said. \"Tell him to be less reactive and more proactive.\" I laughed.\n\n\"Proactive how?\"\n\n\"Tell him to help you move forward, in a healthy way.\" I sighed.\n\n\"I'm nearly at work.\" I said. \"If I call again can I reach you?\"\n\n\"Probably not.\" She said. \"You can email if you like, tell them you were speaking to Clara. I don't know, I've never been requested before. I feel like a call girl.\" I grinned.\n\n\"Clara, my sweet gal.\" I sighed. \"I'm Nate. I'll pay double.\" She laughed.\n\n\"Thanks for nothing then, Nate. Glad you called. Look after yourself. Take some space before you meet up with your boyfriend ok? And tell your brother.\"\n\n\"Thanks. I'll ignore all of that.\" I hung up.\n\nI did feel better though.\n\n----\n\nMakeup had done the trick, Russell didn't say a word, which definitely meant he hadn't noticed. He was still depressed anyway, he might not have noticed even without the magic of Fenti foundation. We barely talked all morning.\n\nJude came in and looked at me. He raised his eyebrows and opened his mouth and I quickly shook my head.\n\n\"Russell.\" I said desperately under my breath. Jude looked between us and picked up what I was putting down and sighed and handed me his card.\n\n\"Heard back from the boss yet?\" He asked instead. I shook my head. \"Ah, don't worry, any day now.\" He said. \"What's your notice period here?\"\n\n\"Two weeks.\" I looked at him. \"But I can keep coming in after work if that helps with anything?\"\n\n\"Tonight would be excellent, but we're nearly caught up... If that's ok?\"\n\n\"Yeah.\" I grinned. \"Highlight of my day.\" Jude rolled his eyes. \"I'll see you then.\" I waved to him as he walked away. As I watched him his phone rang. He glanced at it, and his shoulders slumped forward. I watched him hang up without answering. I bit my lip. Here I was with my own stupid problems, which were my own stupid fault... I'd almost forgotten about Jude.\n\nShit.\n\nI had to say something, right?\n\n----\n\nJude\n\n-----\n\nNate was quiet when he arrived in the office, which was unheard off. He put his music in and started working, slower than usual. Aw, poor kid. He must be going through it. The way he desperately looked at me when I'd been about to tease him about the makeup he had on had convinced me, if I wasn't already convinced, that his whole bullshit -got wasted, walked into a tree- thing was a crock of shit. His phone pinged and he glanced at it and all the colour drained from his face.\n\n\"Oh no.\" He pulled his headphones off. \"Jude.\" My chest tightened.\n\n\"You ok?\"\n\n\"They want to interview me.\" I felt a smile play on my lips and I tried to hide it. Trust Nate to freak the fuck out about good news and cheerfully lie to me about anything bad. He looked down at himself. \"Oh my god. I can't work in an office. Look at me!\" I rolled my eyes.\n\n\"Adrian will be interviewing you.\" He looked at me blankly. \"You know Adrian? Maori guy, white hair, moko?\"\n\n\"Oh! Long black and two cheese scones.\" He blushed. \"Oh no- that's your boss? Does he know it's me?\" I sighed.\n\n\"Nate. He wanted you. The interview is a formality. He knows what you look like.\"\n\n\"But...\" Nate held out his hands and showed me the tattoos I'd seen a thousand times before. I shrugged. I actually really liked his tattoos- where you mostly seem to see guys with unreadable pithy messages across their knuckles, Nate had phases of the moon, and little hearts and stars. Kind of... gay and witchy. I tried to hide my laughter from Nate and made a silent promise to NEVER say that out loud.\n\n\"Not the job killer they once were.\" I said. \"Although- maybe refrain from getting your face done for a few months.\" Nate smiled at me.\n\n\"As if. Wreck this?\" He joked. He swallowed as he glanced back at his phone. \"10am. Tomorrow. I'll miss your coffee.\"\n\n\"I'll come in early.\" I said with a smile. \"You'll be fine. Just be a lot better at not swearing than you are with me. Just say what we've been working on, how much you enjoy it. Say you've been thinking about the move for a long time and getting back into it with me has done wonders for your confidence and you really think you'd be an asset to the team. Say you have a lot to learn, but you're excited for the challenge.\"",
        "\"Ok.\" Nate swallowed. \"That's good.\"\n\n\"Think of some questions for him. Like- are there any training programmes you can sign up to, what the next steps in your career might be. You don't want to be stuck on coffee runs forever, make that clear.\" I stretched. \"Deep breaths.\" I said as I looked at him. He smiled slowly.\n\n\"Jude.\" He said. \"I.... can't thank you enough for everything you've done for me. I really appreciate it. Thank you.\" I smiled at him.\n\n\"You're welcome. I'll always be here for advice.\" Nate nodded thoughtfully.\n\n\"Um... on that note.\" He sighed and folded his arms. \"I actually... did want some advice.\"\n\n\"Go on.\" He stared at me.\n\n\"It's not about work.\" His eyes were darting back and forth between me and the floor. \"It's a personal thing.\" I leant back in my chair.\n\n\"Well, sure Nate, shoot.\" He nodded slowly and committed to looking at the floor as he began to stammer through a clearly rehearsed sentence.\n\n\"So. I have this friend. And it's like... a little complicated the how and why but I have uh... a suspicion... he's being... cheated on.\" I felt my cheeks grow hot. \"Do you think I should tell him?\" Nate asked quietly, cradling himself. He's a lot of things but no one could ever accuse him of being subtle. I sighed. Why the fuck was Nate asking me this? Did he know? No, That was ridiculous. I glanced at him. He did look guilty as sin though. My heart almost stopped. Shit. No way. I frowned at him.\n\n\"That would depend on the guy.\" I said slowly. \"I wouldn't rush into telling him. He might know. He might not want to know.\" Nate nodded thoughtfully.\n\n\"Would you want to know?\" He asked quietly, staring intensely at the floor. I took a deep breath. Fuck. He really did mean me didn't he? I ran my eyes over him.\n\n\"Maybe.\" I sighed and stared at him, trying to get him to look at me. \"I'd probably want to know a bit more about why you had the suspicion in the first place...\" Nate closed his eyes briefly and glanced up at me. He seemed to shrink into himself. Really? Fucking hell. I guess I should have expected the worst from Levi.... But NATE?! He cleared his throat.\n\n\"You know like, on Grindr, sometimes you're both being kind of... I guess anonymous...\" He started to say slowly. Oh. Grindr. I guess that was better than where mind had gone, to Nate fucking Levi in the bathrooms of a club or whatever. \"And I sort of worked out it was.... This guy... um.... My friend's....\" I cut Nate off. He was really struggling, and I couldn't stand keeping him in that state of misery. I smiled at him kindly.\n\n\"Ah that's a rough position to be in, Nate.\" Nate looked at me like he was in genuine pain. \"Well, ok. First of all- it's not your fault, I can already see you're beating yourself up about that. And second, for what it's worth, I think saying something is the right thing to do.\" Nate blushed as I caught his eye. \"But that doesn't mean it will be taken well, or listened to, and on the other end maybe your friend knows and is figuring it out...\" Nate frowned as he tried to wade his way through my vague doublespeak. I was trying to tell him it was ok, without putting us both in the position of talking frankly- and yeah, I could hear myself. I wasn't doing a great job. But there isn't a handbook for this! \"I'm trying to say- it would be brave and probably the right thing to tell him. But you can't control his reaction, and it's not your place to force him to a conclusion.\"\n\n\"Oh.\" Nate said. He glanced at me and quickly looked away again. \"Would you be ok with it?\"\n\n\"No.\" I said, looking firmly at Nate. Ooh. Jude. Growing some balls huh? \"No I wouldn't.\" I said. That might be the first time I'd said that, actually. \"I'd probably call my old friends from Uni and have a fucking night and work out what I was going to do about it.\" Nate swallowed and looked up at me. He held my gaze.\n\n\"Ok.\" He said. \"That's... good. Maybe I'll leave it for a bit and ah... if it gets worse... I'll say something.\" He winced. \"And maybe I'll... like. Vet headless torsos a bit more thoroughly.\" He smiled slightly and I laughed.\n\n\"I really hope you're not blaming yourself for this.\" Nate shrugged.\n\n\"Kinda.\" He said. \"I feel.... Real shitty.\" I stopped myself from reaching for him.\n\n\"That's dumb.\" I said with a smile. \"Come on, we both know you're not the one who should be feeling shitty. You ever give yourself a break, Nate?\" He laughed awkwardly.\n\n\"Um. I dunno.\" He shook his head and turned back to his monitor, stretching out. \"Anyway, I should hurry up, I gotta head soon.... D is....\" I turned away from him as he started rambling about the movies, and dinner, and all the cute things he and 'D' apparently did these days. I stared at my computer screen, nodding at him, and I could hear the little angel on my shoulder praising me for saying my feelings out loud, and for not going off at Nate, and suggesting that I'd see my friends. Friends, huh? That was a good idea. I mean, they'd tell me to leave him, but I was there already, wasn't I? I caught my reflection on the screen and sat a little taller. Yeah. I was so fucking tired of being a doormat. I was over this. I was SO over this. I smiled at myself and caught sight of Nate behind me, still sort of talking to me as he packed his stuff away. And I caught sight of the bruise on his cheek, where the obscene makeup he'd put on was starting to wear off. The angel on my shoulder shut up and I could hear something else. Something from the other shoulder. Not a good idea. But also, fuck it.\n\n\"Nate.\" I said suddenly, turning around and cutting him off mid sentence. \"Can I ask you for some advice?\" He laughed.\n\n\"Well, first time for everything.\" he said. \"Never been in this position before. Hold on, I need a minute.\" He was smiling, but it fell a little as he looked at my face. His frown came back and he steeled himself. I think he thought I was going to ask him about Levi. Well. No.\n\n\"I have a friend who's covering a bruise. I'm worried about him. Should I be?\" Nate's face turned red.\n\n\"Um.\" He mumbled. \"Uh... what were you just saying? Um... depends on the guy.... Maybe he's just like, kind of clumsy and gets random bruises all the time...\"\n\n\"Maybe.\" I folded my arms. \"Maybe he says that, but maybe he's always been a shitty liar. What do you think?\"\n\n\"I think I'd mind my own business.\" He said, glaring at the floor.\n\n\"Do you?\" He looked up at me. Oh man. That was a really conflicted face. I relented a bit and reached for him. He flinched. \"Nate.\" I said quietly. \"I'm worried.\" He sighed, and he slowly slumped in his chair. He groaned as he hung his head.\n\n\"Don't be.\" He said. \"I know it's a cliche to say it's not what it looks like, but I swear it's not what it looks like.\"\n\n\"So it really was just a fall or whatever?\" He shook his head slowly. \"Tell me it wasn't Darius.\" I said, kneeling beside him. He sighed and looked at me. We sat in silence for a minute as he held my gaze and opened his mouth. Come on, Nate. Tell me I'm wrong. I'd love to be wrong. But he would have said something immediately if I was wrong, and as he looked at me his face slowly crumpled.\n\n\"Look.\" He looked away. \"He was really, really drunk. We were winding each other up all night. He doesn't even know he did it.\" I opened my mouth but he shook his head to stop me. \"I'm not stupid.\" He said. He smiled. \"Well, I am stupid, but I promise I'm not gonna cover for him again. I won't need to. It was a one time thing and he'd kill himself if he knew. I swear I'm not like... you know. Like I don't think I'm gonna change him or anything. But he won't do it again.\" I bit my lip. Oh Jesus. He is stupid, he really truly is. But only about this.\n\n\"I don't believe that.\" I said, as slowly and kindly as I could. Nate smiled and took my hand. He squeezed it with a sigh.\n\n\"I wouldn't either.\" He said. \"But I know D, and you don't.\" I swallowed. Sure. I don't know Darius. But I know Nate, and maybe they were winding each other up, and maybe Darius really wouldn't have if he were sober, and maybe a hundred other excuses that I'm sure Nate had primed, but... you know, most people don't hurt other people. I felt my gut twist with resentment, because Darius had to know who he had with Nate. He had to know he had the sweetest most trusting soul in the whole world. I knew, of course I knew that my reasons for hating Darius were primarily because he had what I could never have, I had to be honest with myself about that. If my own life wasn't falling apart, if I were single when I got to know Nate... well I would have fucking fought Darius myself. I would have smirked at him when Nate was high and wrapped all over me and placed my claim on Nate. But I couldn't. And I wouldn't. But if Nate was some guy who I'd never really clicked with I still would have told him to leave Darius.\n\n\"I don't know him.\" I said carefully. \"All I know is he's apparently a real shitty drunk. Which I would have thought was enough. I don't think you should keep seeing him.\" Nate pulled his hand away.\n\n\"I know.\" He said. \"I'm not in love with him or anything, Jude. But he... he really is...\" He sighed. \"I dunno. Different. Different to how everyone sees him. And if I just fucking... leave... well. He'll never...\" He winced as he trailed off. He'll never what? Change? We both knew that was what Nate was trying not to say. He thought he was going to change Darius, no matter what he said. He thought he'd be the one to bring out all the good stuff, and hide the bad, forever. I couldn't blame him. Wasn't I, in my own way, desperately doing the same thing?\n\n\"Well. I'm here.\" I said with a sigh. \"And I'm watching.\" He rolled his eyes.\n\n\"Great. Just what I need. Another possessive big brother.\" His eyes widened. \"Oh. Don't tell Russ.\" He said grimly.\n\n\"I won't say anything...\" I squeezed his knee. \"But promise me you'll look after yourself. He's not worth it, no one's worth it.\" Nate sighed heavily.\n\n\"Yeah.\" He said. He leant back in his chair and looked at me. \"It looks worse than it felt.\" He said lightheartedly. I glared at him and his mouth twitched. \"Jude!\" He said. \"Don't! Agh, I know. I know.\" He shook his head. \"Look. I'll tell him ok? And then at least he knows, and maybe we can work through it or whatever. It's the drinking, it's always been drinking for him. Maybe he can like, start AA or something.\"\n\n\"But why do you have to bear all of that?\" I asked. Nate smiled at me.\n\n\"Because that's what I do.\" He said quietly. \"I can't help it. I just like lost puppies.\" I couldn't stop myself from smiling, even as the pain in my gut got worse.\n\n\"God.\" I sighed. \"You're an absolute fucking soppy bastard.\" I stood up and started to pack away my laptop. \"Alright, I'm not winning this round. But if he ever fucking touches a hair on your head without your consent you fucking tell me and I'll sort that cunt out, ok?\" Nate smiled at me.\n\n\"Deal.\" He said. He stood up. \"Uh... thanks Jude.\" He frowned as we stood, packed up and facing each other. \"Um.\" He said quietly. \"I guess on that note. If you... need an ear about...\" He twisted his mouth. \"Ah... whatever you're going through....\" I shook my head and started walking towards the lifts. \"Oh, you not staying?\" He asked. I smiled at him.\n\n\"Gonna go catch up with some friends from Uni.\" I said. Nate nodded slowly and caught my eye. \"Oh.\" He said. \"That's a really good idea.\" I nodded as we got into the lift together. He smiled at me and nudged my shoulder. \"Don't get too trashed. School night.\" I smiled back, and we rode the elevator in silence, just smiling sadly at each other as we exited the building. I glanced at Daruis' Hilux and sighed as Nate waved to him.\n\n\"Hey Nate....\" I said. He grinned at me. God, he can turn on a dazzling smile faster than anyone I've ever known. \"Be careful.\" I said. He nodded.\n\n\"Thanks.\" He said. \"I am.\"\n\n-----\n\nI walked towards Laundry, where I hadn't been in months, and paused briefly at the door. Maybe they wouldn't be there. I muted the group chat weeks ago, I don't even know if they still met up here. Oh well. Don't lose face now, Jude. You can always just get a drink and go home.\n\nI walked in, and my eyes scanned the room. I smiled as I saw them. Same table as always. Same idiots with the same haircuts. I made my way across the room and sat in an empty seat. They looked at each other with raised eyebrows as I helped myself to the jug on the table without invitation.\n\n\"Oh hey, Jude.\" Rita said eventually. \"You missed the first round but thank god that was just Geography, you're still gonna help with Media.\"\n\n\"Double points on...?\"\n\n\"Music and Lit, duh.\"\n\n\"Good call.\" I smiled at them and settled in. We said nothing beyond answering questions for a bit, and I bought some more beer, and we loosened up a little, and eventually half time rolled around and I felt the collective eyes as the group turned on me. I rolled my eyes and raised my glass.\n\n\"Yeah, yeah. Sorry.\" I said. \"Next one hundred rounds are on me.\"\n\n\"Are you ok?\" Rita asked.\n\n\"Where have you BEEN?\" Abby almost shouted.\n\n\"What's going on?\" Tama looked at me thoughtfully.\n\n\"Are you and Levi...\" Ethan glanced at me. I sighed.\n\n\"No, avoiding you and... well..\" I sighed. \"He's... there's other guys, don't fucking tell me you know, because I know you know and I know too, and I was trying to pretend it wasn't happening but my fucking BARISTA just tried to tell me, and you know at that point you just have to admit you have to...\" I sighed. \"God, I dunno. Catch up with your old friends and beg them to hold your hand through the break up.\" I mumbled and slowly looked up to scan their faces. Yep. Relief.\n\n\"Thank god.\" Rita said.\n\n\"About time.\" Abby grinned.\n\n\"God, I knew he was an ass.\" Tama added. I glanced at Ethan. He started to laugh.\n\n\"Dammit.\" He said. \"The love of my life is FINALLY on the market and I have a boyfriend!\"\n\n\"Wait... you do?\" I sighed. \"Oh well, there's plan A out.\" Abby thumped me.\n\n\"Logan's way hotter than you.\" She said.\n\n\"Ew Logan?\" I rolled my eyes. \"Logan and Ethan, gross.\" I caught Ethan's eye and he grinned. Thank god. Because lord knows I probably would have. And that would have been awful to Levi and awful to Ethan. Abby smiled sadly at me and leant in.\n\n\"Aw, Judey.\" She sighed. \"You've really been going through it huh?\" I shrugged. And to my shame my eyes started to well up with tears.\n\nI tearfully made it through the rest of the quiz and we somehow came in second. Despite bawling my eyes out I was still pretty on to it with the literature round. That meant we got a bar tab and despite it being a school night I happily embraced the wine that was pressed into my hands by my unflinchingly forgiving friends, who didn't mention once what a total dick I'd been by cutting them out. I told them how sad I'd been, how much I'd been falling out of love, how much he annoyed me because he refused to lift a finger, how hurt I was when he was out late...\n\n\"And he forgot my birthday!\" I wailed. \"Not that it's, like, important, but he forgot and I ended up eating pizza and smoking all night alone.\"\n\n\"Oh baby.\" Rita crooned. \"Call us! It is important! You only turn 32 once!\" I laughed.\n\n\"I should have.\" I said. \"You would have told me he's a douchebag.\"\n\n\"We would have.\" Tama said. \"Honestly, I can't believe you said you'd marry him.\" Our tongues were all loosening by now. \"He never liked us, he always thought we were beneath you.\"\n\n\"Ugh, I know!\" I started to laugh. \"Oh my god- I haven't even told you the dumbest, most stupid funniest part... oh god. I'm falling for another guy.\"\n\n\"Oh my god.\" Abby widened her eyes. \"We thought you were like literally blind to other guys.\"\n\n\"I was!\" I relaxed into my chair. \"Ugh, you'd love Nate. He's so kind and sweet and he'd just get us, you know? But he's with some abusive asshole, and he has no fucking clue I like him, and I'm still fucking engaged...\" Rita edged closer to me and wrapped her arms around me.\n\n\"Well. We can at least solve the you being engaged thing right?\" I sighed and looked at them all blearily. I guess that was solvable.\n\n----\n\nLevi was at the kitchen table working when I stumbled in. He looked me over and rolled his eyes.\n\n\"You're drunk.\" He said.\n\n\"You're a cunt.\" I said. He sat up straight and folded his arms.\n\n\"Ok?\" He said. \"Go off, you always do when you're wasted.\" I sighed and sat opposite him. I did have a speech. I'd had it forming for months, actually. I'd refined it in the last few weeks. I'd really refined it in the last few minutes. But I looked at him with nothing, just absolutely nothing, no respect, no love, nothing.\n\n\"You and me.\" I said, which wasn't the speech at all, but fuck the speech. \"Not working. Wanna break up.\"\n\n\"This again.\" He stood up. \"Talk when you're sober or shut the fuck up, Jude. I've had enough.\"\n\nAnd he stormed out, slamming the door behind him.\n\n\"Me too.\" I said to an empty room.\n\n-----\n\nTuesday\n\n----\n\nJude\n\n---\n\nNate glared at me as I entered Mojo. He was sitting up at the bar instead of behind the counter, hunched over. I smiled in spite of the face he was making, because he was wearing a suit. I'd honestly never considered him in a suit before- and it looked fan-fucking-tastic. He folded his arms and shook his head as I approached him.\n\n\"You said you'd come in early!\" He said. \"You were meant to calm me down before the interview.\" I laughed.\n\n\"Did it go ok? Sorry, I got caught in a meeting.\" Nate sighed and rested his chin on his hand as I sat beside him.\n\n\"Maybe.\" He said. \"It was pretty short. Like 20 minutes.\" I shrugged.\n\n\"That's fine, it's not the kind of role they go through huge processes for anyway.\" Nate bit his lip.\n\n\"I swore.\" He turned red as he looked at me. I tried to hide my smile. I knew he would. He can't stop himself.\n\n\"In what context?\"\n\n\"Does it matter?\" I shrugged.\n\n\"Sort of. Don't stress. You'll be fine.\"\n\n\"Ugh.\" He banged his head on the counter. \"I totally fucked it.\" See?\n\n\"I doubt that.\" I said. I nudged his knee with mine. \"Are you off for the day then? Wanna tell me about it? And if it really was that bad I'll knock off early and we'll go for a drink.\" Nate smiled at me and slumped over the counter.\n\n\"I was gonna get back.\" I glanced up as Russell cleared his throat. He squeezed Nate's shoulder.\n\n\"It's slow dude.\" He said. \"We probably have this. You're owed like three weeks holiday, the company would probably appreciate it if you take some of that.\" Nate's shoulders slumped forwards.\n\n\"Thanks.\" He muttered. I pulled him over to a quiet corner after getting some coffee on the way for us.\n\n\"So... go on.\"I said. \"How'd it go really?\" He sighed.\n\n-----\n\nNate\n\n----\n\n\"No more coffee.\" Russell pulled the cup out of my hand and poured it down the sink as I reached for it. Asshole. I'd opened the cafe, and clocked out like ten minutes ago to get changed because I was pretty sure you're not meant to interview in the apron from your current job. Not that I really had any idea what to interview in. I should have asked Jude. I had a few like... real shirts somewhere in the back of my wardrobe which never saw the light of day and I'd inspected them last night. Shirt and jeans? Too casual? What's a dress code even like these days? What do they say? Dress for the job you want? Well the job I want is walking dogs all day, but ok, that wasn't helping.\n\nI went for a suit. Maybe it was overkill but fuck it, it looked nice. And it had been worn once so the cost to wear ratio really needed a bit of help.\n\n\"You look really professional.\" Russell said seriously. \"Didn't think you had it in you. Nice.\" I smiled at him.\n\n\"Thanks. I need another coffee though. Still got 20 minutes to go.\" He shook his head firmly.\n\n\"You're shaking.\" He said. \"Did you eat this morning?\"\n\n\"Yes.\" I lied.\n\n\"Go out for a cigarette then.\"\n\n\"I quit!\"",
        "\"I know, I thought it might help calm you down.\"\n\n\"Maybe...\" I shook my head at myself. \"No! Besides, I don't want to go in reeking of tobacco.\" Russell sighed.\n\n\"Good point. Have a mint.\"\n\n\"Ah crap do I need one?!\" Russell laughed.\n\n\"Calm down! I'm just trying to think of something to distract you, and if you drink anymore water you'll piss yourself mid interview.\" I laughed and reached for the crossword. That was always a pretty good distraction.\n\n---\n\nI knew the 5th floor pretty well by now, but I didn't like Adrian's office, because it was in a gloomy corner and the door was always closed. I was propped up on a cheap fake ergonomically designed chair outside and the people working all smiled at me warmly as I tried not to sweat so much I left a puddle on the seat. I knew most of them... not their names mostly, just Mr. Trim Flat White One Sugar, and Ms. Soy Hot Chocolate No Marshmallow, and one of my favourites, who waved at me... Ms. When Does The Cute One Start Again? She meant Frank, and she seemed to always miss him by minutes.\n\nEventually, when I was seconds from bolting, Adrian opened the door to his office and smiled at me and welcomed me in. I perched on the chair opposite him, unsure how to sit.\n\n\"This is just an informal get to know you, Nate.\" He peered at me over his glasses, \"Your work with Mr Awatere speaks for itself.\" My hands were clammy and my head felt cloudy. Mr Awatere? Oh. Jude. Duh. I smiled at myself and glanced at Adrian.\n\n\"Thanks.\" I said. \"I've been really enjoying it. I wasn't sure I could actually, it's been so long since Uni...\" I wrinkled my nose and shut myself up mid sentence. Maybe I should really try and keep my answers short. Adrian pulled off his glasses and rubbed his eyes.\n\n\"You have a lot of heart.\" He said. I glanced up at him. That's not exactly on my CV. \"So much volunteer work, I like that a lot. This role is with a group that has to wrangle with a tiny budget and justify its existence at least once a week.\" He sighed. \"Would you like to speak a bit to your experience with some of the organisations you've worked with?\" I swallowed. I hadn't prepared for that. I'd been prepared to try and explain why on earth I wanted to work in an office in spite of that actually. But I sat up straight and did my best. I told him I'd started volunteering in high school because I didn't have a lot of friends and wanted to connect with other people like me, and as I got older I could see the value in my work- helping out with younger people, and supporting shelters through fundraising and whatever else I could do. I said that I just felt like I owed the world a little bit. I got pretty passionate, because I mean, he was asking me to talk about the things I'm passionate about, and I heard myself stupidly say that money had never really mattered to me. I cursed myself silently as he smirked, such a fucking idiotic thing to say to the guy who was in charge of my paycheque. Dammit. I was going to end up paid as little as possible for the rest of my time here, wasn't I? Although I wasn't lying, I sort of didn't care about that at all. Adrian smiled and asked where my interest in economics had come from and again, I put my foot in my mouth and said I didn't actually believe in economics but the only way to dismantle something is to understand it, and I kind of liked numbers. I blushed and he laughed.\n\n\"I'm somewhat of a Socialist too.\" He said, settling in comfortably opposite me. \"You think you can work happily under a National or Labour led team then, Nate?\"\n\n\"I can keep my mouth shut about politics.\" I laughed. \"I've worked in the cafe downstairs for years, I've learned how to be professional regarding government departments.\" Adrian grinned.\n\n\"The only thing I'm really worried about...\" He said seriously, peering at me over the desk. \"Is that I'll never find a decent replacement for my barista.\" I laughed.\n\n\"Russell's pretty good.\" I said. \"But you're right. I am better.\" I smiled at him widely and he smiled back, catching every inch of the generous rays of sunshine I was trying to shower him with.\n\nSo it wasn't a total shitshow. Until, on the way out, he was shaking my hand and made an idle comment about my tattoos that I think was actually meant to be reassuring.... and then I naturally had a pure Nate moment and swore loudly as my phone began to ring. I blush a lot, but I'm pretty sure that was a new shade on me. It probably matched the still fading bruise near my eye. I hastily apologised and said I thought I'd turned my phone off and Adrian dismissed me with a smile and I spent the morning kicking myself.\n\n----\n\n\"Oh, you're fine.\" Jude said airily. \"One of the Uni kids showed up in a t-shirt that said 'Problem Child' and another one said they hoped they'd be earning $85000 by next year which is big talk for someone who's father had to beg us to interview her.\" He smiled at me. \"Even if you didn't deserve it, I'll be honest, your competition kinda sucks.\" I sighed.\n\n\"Well, being the least worst is something.\" I said glumly.\n\n----\n\nWednesday\n\n-----\n\nJude\n\n----\n\nIt was weird living by myself. I hadn't ever lived by myself. When I was growing up I lived with a rotating cast of foster parents and kids smaller than me I had to take care of, and then I flatted all through Uni, and I moved in with Levi after that.\n\nBut Levi wasn't around these days. I think he thought if I never saw him then I couldn't break up with him. And he was right about that- I didn't want to do it over the phone. I didn't want to just move out and have him come home to no one. Knowing Lee the way I did... maybe his absence was designed to trick me into remembering the nicer things about him. His smile, his wicked sense of humour, the way he could discuss any subject and somehow always have a disarmingly witty joke lined up.... And his soft lips... which I think I felt brush against me late at night and early in the morning when I was half asleep...\n\nBut he was causing me more pain than he knew. And I couldn't let him do that to me anymore. He could play whatever game he wanted.... But it was the end of the month and I still wanted a break. Like a really big, move out, get a dog, find someone else break.\n\nI just had to figure out how the fuck to tell him that.\n\n-----\n\nNate\n\n-----\n\n\"Want a lift home?\" I asked Russell. \"I think we're heading to the same place.\" He sighed.\n\n\"Of all the guys you've ever dated I'm genuinely confused that you're sticking with Darius.\" He said. I bit my lip and turned away. Yeah dude. Me too. \"But I guess a lift home would be sweet, thanks Nate.\" He tucked his arm into mine as we trudged to the car. \"Lucky for you I have a date.\" He said flatly. \"Flat's all yours.\" I glanced at him.\n\n\"You don't sound super enthused about that.\" Russell muttered something grimly as he loaded his bags in the back. \"Everything ok?\" I asked him. He sighed and stared out the window.\n\n\"I don't think I'll ever love again.\" He said. I rolled my eyes.\n\n\"Calm down Bella Swan.\" Russell glanced at me.\n\n\"Huh?\"\n\n\"Jesus, are you so straight you've never seen Twilight?\" I nudged his knee. \"You're a walking stereotype.\" Russell sighed and stared out the window again. \"Well, it's not that bad Russ. I don't do love but sex is pretty good too.\" I said. Russell sighed.\n\n\"Yeah, yeah, well it's easier for you.\" He muttered. I shrugged.\n\n\"I dunno. If my boyfriend took me to a sex store and said 'hey baby, pick out a dick and it's all yours' that would be pretty hot.\" Russell snorted. Yess. Progress. \"And anyway, I know you, and whoever this date is, she'll fall for you by dessert, so don't even worry about it. And I bet she's prettier than Shona.\"\n\n\"No ones prettier than Shona.\" I laughed and caught his eyes, and to my relief he started laughing too. \"God I'm pathetic.\" He said.\n\n\"Yep.\" I agreed. \"But I think girls find that kinda sweet.\"\n\n----\n\nYet again, D insisted on making me help him cook dinner, despite my protests that I would truly rather starve. We made little spinach and fake feta pie things and he said they needed to sit for a bit, so I curled up on the couch with him and we tried to find a show on Netflix that we could both stand.... A bit limiting because he didn't watch reality TV or Star Trek and that's kind of all I do watch. Eventually he sighed and let me choose, and mumbled about how I was rotting my brain blah blah blah, and I put my head on his lap.\n\nI blinked and realised I'd fallen asleep and his arms were wrapped around me. Aw D. Why was he so warm? Why couldn't he just be like this all the time? He smiled at me and wrapped a blanket around me.\n\n\"Here.\" He rustled around in the cupboard and I swallowed as he pulled out a bottle of wine. Oh.\n\n\"You sure we should...\" I sighed. Ok. Time to say it. \"Look, D. No wine ok? I can't be around you when you drink.\" I said quietly. He turned to me and frowned.\n\n\"What?\" he said. I looked at him and tried to meet his eye.\n\n\"You're.... Not you, D. When you're drunk. And you....look, can we just... hang out?\" Darius glared at me.\n\n\"Get. Bent.\" He said. \"Who are you to tell me what to do?\"\n\n\"Nate.\" I said. I stood up and I clasped his hands. \"I'm Nate. You really like me. You like me so much you keep making me dinner and taking me out, and inviting me over. And as much as I really- god D, I really tried not to like you, I like you too. And if you want to be boyfriends then I can do that.\" He smiled at me and gently stroked my face... but I stopped him. I took a deep breath. \"But when you're drunk you hit people.\" I moved my cheek, and his eyes went to the bruise. After a day of sweat and hard work, the makeup had melted off. \"You hit me.\" I whispered. \"And it's one or the other. Me or alcohol. Because really, truly, fuck you if you ever hit me again.\" Darius' eyes were glued to the faded bruise on my cheek and his face fell. He slumped over, his body going limbless, and he fell into his chair silently.\n\n\"Why didn't you tell me?\" He said.\n\n\"I...\" I swallowed. \"Well. Uh. I guess. I didn't want to be dating that guy.\" I said slowly. \"So I thought if we both pretended it never happened well.. It never happened. Maybe.\" Darius closed his eyes.\n\n\"I thought I was better than that.\" He whispered. \"I know... with Harold... but I thought... I thought I'd changed.\"\n\n\"You have.\" I said. \"D, you're so... soft... under everything. You just have a problem with drinking. That's ok, we can still have fun. You're still fun.\" He shook his head.\n\n\"I think you should go.\" He said. \"I need... I need space Nate.\" I swallowed.\n\n\"Really? We can talk, D...?\"\n\n\"Please.\" He opened his eyes and looked at me, his mouth tight. \"Please Nate. I really need some space.\"\n\n\"Ok.\" I said quietly. \"Call me ok?\"\n\n\"Ok.\" He muttered.\n\n-----\n\nI really, really want to say that was it.\n\nI want to say he changed. I want to say he called me, and he broke down crying, and we made love and I dated him and we went dancing, and everything was fine.\n\nOr even that he never called me again. That he went his way and I went mine. And maybe he got better, and maybe he didn't. And either way, it didn't affect me.\n\nBut Darius got really, really drunk that night.\n\nAnd he called me.\n\nAnd we met up.\n\n---\n\nThursday\n\n---\n\nNate\n\n---\n\nI was early to work, but I didn't want to go in.\n\nThere wasn't enough makeup in the world to convince Russell I looked normal.\n\nI paced back and forth outside and debated what to do. Eventually I had to just cave. I sighed and called Russell. He picked up.\n\n\"Why are you calling? You locked out?\"\n\n\"No.\" I stood on the other side of the door and watched him unstacking chairs one handed. \"I'm outside. I just have to talk to you before I come in.\"\n\n\"K, what's up?\" I sighed and fiddled with a loose thread on my t-shirt.\n\n\"You have to promise me.\" I said slowly.\n\n\"What?\"\n\n\"No lecture and no murder.\" I said.\n\n\"Huh?\"\n\n\"No lecture. No murder.\" I said firmly. \"No fights. You can move out or kick him out, I don't care...\" I watched as Russell stood up straight and glanced towards the door. I waved to him half-heartedly as he dropped his phone and practically ran towards me. I flinched as he opened the door and took me in. A vein popped on the side of his forehead. His jaw clenched.\n\n\"No murder!\" I squeaked. He growled.\n\n\"That fucking cunt.\" I flinched as he reached for me- but it was only to embrace me. \"Oh Nate, fuck dude. Come here. Shit shit shit.\" He pulled me into the cafe and inspected me. \"Oh Christ.\" He said. \"You can't work like this Nate.\"\n\n\"I feel fine.\"\n\n\"Well you look like you've been run over by a semi.\" He sighed. \"Jesus Christ.\" He rubbed his forehead and winced as he looked at me again. \"Oh Jesus H Christ. I am going to strangle that little shit...\"\n\n\"You promised no murder!\"\n\n\"I didn't agree to anything!\" He stood up, and I winced as he punched a table. \"Ow.\" he mumbled, nursing his hand.\n\n\"Dummy.\" I said. \"Come here.\" I held his hand and checked that he hadn't done himself any damage as he swore under his breath. \"Anyway, D would take you in a fight.\" I said.\n\n\"You reckon?\"\n\n\"You just lost a fight with a table so yeah, I reckon.\" Russell laughed.\n\n\"Christ, Nate.\" He said. \"You... it's over right?\"\n\n\"Na, once this heals up I think I'll marry him.\" We laughed. I squeezed his hand. \"Yeah.\" I mumbled. \"It's over. I'm a big dumb idiot and I ended up beaten up just like all the fucking dumb idiots who think they're different and D loves them or whatever.\"\n\n\"You're not dumb.\" Russell said. \"You're the smartest guy I know. And we all knew D has a drinking problem, and we all knew why Harold left him, and if anyones the dumb one it was me for thinking he'd changed with you.\"\n\n\"You would never have gotten yourself into this situation.\" Russell sighed.\n\n\"No.\" He said. \"But I have done a million dumber things regarding girls so you know.\"\n\n\"Oh like what, Romeo? You're always the picture perfect couple.\" Russell raised his eyebrows at me.\n\n\"Well.\" He said slowly. \"Almost all my relationships start off on a lie, so there's that.\"\n\n\"It's not a lie.\" I said. He put his arm around me. He sighed.\n\n\"Most people don't see it that way.\"\n\n\"Most people suck.\"\n\n\"They do. But you know. I could meet them halfway. I just wish I didn't have to.\" I tucked myself into his arm.\n\n\"I wish you didn't either.\" I said. \"But Ms Right is out there. She's hot, and not only does she not care she's kind of into it, but not in a fetish way, just in a she loves you for who you are and wouldn't change a hair on your receding hairline...\" Russell laughed. He took a deep breath.\n\n\"Actually, not the best time to bring it up... but Shona ended up calling.\" He said. He glanced at me and swallowed. \"I was gonna ask you for some advice...\" I snorted.\n\n\"Yep, real smart call Russ, ask the gay idiot with a black eye for some advice about women.\" He laughed.\n\n\"Gay, yes. Idiot, absolutely. Black eye, well. Regretfully. But you're the only one I trust. The guys just... You know they don't even know, most of them. I told them she wouldn't put out.\" I laughed. \"Which is true, actually.\" Russell said, staring out over the cafe. \"Only I didn't mention that was because we were moving so fast she had her hands down my pants before I could come clean...\" He winced. \"God, Nate. You should have seen her face. I've never seen someone go from horny to confused to fucking disgusted so fast.\" I put my hand on his knee.\n\n\"She'd stayed over...\" I said slowly. \"You really waited for weeks to get to second base?\" Russell sighed.\n\n\"I really liked her.\" He said. \"And uh... you know. It's not like she was um... unsatisfied...\" I tried not to gag. Russell noticed and punched me in the shoulder. \"Oh come on, you must have heard our rep.\" He said.\n\n\"Huh?\"\n\n\"They say the Novak bro's don't have a lot in common.\" He grinned at me. \"Except we're both really good at oral.\" I closed my eyes in disgust.\n\n\"Ergh.\" I said. \"I did not know we had that reputation.\" Russell grinned.\n\n\"Oh, everyone knows we have that reputation.\" He stretched out. \"Anyway. So Shona called me. She said... she said some really nice things actually. She said she was really sorry. She said she freaked out, which she did. Actually you aren't the only one who ended up with a fist in their face...\" He winced. \"Sorry, I shouldn't joke.\"\n\n\"Ugh.\" I shrugged. \"If you can't laugh you cry.\"\n\n\"Mum always said that.\" He smiled at me. \"But anyway, Sho told me she'd been thinking about me, all the time. And she said she liked me more than anyone and she was terrified she'd fucked it up forever, and she wasn't asking for forgiveness, but maybe a second chance...\" Russell slumped over and looked at me with wide eyes.\n\n\"So?\" I prompted. \"What did you say?\" Russell winced.\n\n\"I um. I actually... called her a TERF and blocked her.\" He said quietly. I laughed. \"But then I couldn't stop thinking about her. She seemed really sincere.\" I squeezed him.\n\n\"Yeah.\" I said. \"I think she probably was. She must have felt like an asshole.\" Russell nodded.\n\n\"I was the asshole.\" He said. \"I shouldn't have put her in that position.\" We sat in silence for a second as I debated what to say. I mean. He probably shouldn't have. But who am I to say that?\n\n\"Well.\" I said. \"I guess we can look at it like this. You made a choice, and she reacted to that, and neither of you are particularly proud of what you did, and it sounds like you'd both like a chance to rectify that.\" Russell blinked at me with his arms wrapped around his torso defensively. He bit his lip.\n\n\"If she... can't.... Deal with it.\" He said slowly. \"Then I think... I think she might break my heart. And she already did that once. I don't think it will hurt any less the second time around.\" I nodded.\n\n\"Ok. Broken hearts hurt. I think. I've never had one. Only a broken face.\" Russell smiled slightly in spite of himself. \"She might be worth it?\" I said quietly. \"I can't really answer that for you Russ. But I guess I'd say... I like her a hell of a lot more than Becky, or Samantha.\"\n\n\"Or Isobel.\"\n\n\"That goes without saying.\" Russell smiled.\n\n\"I don't know.\" He reached out and put his arm around me. \"What would you do?\"\n\n\"Me? I'd... ask myself.... if she has an unfortunate relationship with alcohol?\" Russell snorted\n\n\"Nah.\"\n\n\"Is she secretly engaged to your boss?\"\n\n\"Well, you're my boss, and that would be one hell of a curve ball...\"\n\n\"Is she a liar, a cheat, a misandrist, a homophobe, or an axe murderer?\"\n\n\"No! She's soft, and warm, and she listens to Iron Maiden with me.\" I tried not to roll my eyes.\n\n\"Ok... last question, and it's really the most important one. A lot hinges on this because it can really take someone from ok to absolutely unacceptable.\" Russell looked at me and nodded seriously. \"Is she... allergic to dogs?\" Russell's face split into a smile.\n\n\"Ah shit.\" He said. \"She's perfect. I need to call her.\" I stood up and glanced around the cafe, which was in complete disarray.\n\n\"Save it for your break, Casanova. We're already late opening.\" Russell grinned at me and started to unstack the chairs in record speed.\n\n\"On that note.\" He said, glancing at my face. \"Cover story? You're gonna scare away customers.\" I nodded and began to prep the coffee machine\n\n\"Well. You know me.\" I said with a sigh. \"I was walking Brioche...\"\n\n\"Brioche?\"\n\n\"That cute little Bichon-Frise?\" I explained. Russell rolled his eyes.\n\n\"So I was filming a video and I didn't look where I was going and walked into a pole.\" Russell laughed.\n\n\"Even for you that's verging on unbelievable.\" He said. I pulled out my phone.\n\n\"Is it?\" I showed him the evidence. He laughed as he watched the video.\n\n\"Who on earth lets YOU walk dogs?\" He grinned. \"You're the one who needs to be kept on a leash, Jesus.\" I grinned.\n\n\"You know, it's normally hotter when guys say that to me.\" He gagged. \"Anyway, no one will ask questions, no one wants to know why their Barista looks like he's been punched in the face. Life will just go on as usual.\" Russell made a non committal nose as he turned on the lights and the music and unlocked the front door again, just in time for the morning rush.",
        "\"You reckon that'll scar?\" He glanced at my forehead, just above my left eyebrow, where Darius' ring had caught me. I swallowed.\n\n\"Yeah. It'll look hot though right? Like, make me look a bit tough.\" Russell laughed.\n\n\"You're probably right.\" He sighed. \"Annoyingly. It would take a lot more than Darius to ruin your pretty face.\" I laughed.\n\n\"True.\" I said. \"Still, I don't think I'll risk it again. Can you remind me next time I start to get carried away with a guy we both know is a jerk?\" Russell shook his head.\n\n\"I can only try.\" He rolled his eyes and squeezed my shoulder.\n\n\"Hey Russ.\" I said as he slipped behind the counter and started to help unpack the baking from the kitchen. \"Thanks for skipping the lecture.\" He looked at me softly.\n\n\"Aw Nate.\" He smiled at me. \"You really think I'd skip the lecture? I'm saving it for your lunch break.\"\n\n----\n\nJude\n\n---\n\nI walked into the Mojo and frowned as I didn't see Nate. Russell nodded and smiled at me half-heartedly.\n\n\"The usual?\" He asked. \"Which... Nate usually makes... uhhh....\"\n\n\"Quad shot americano.\" I prompted. \"And a cheese scone.\" He nodded and keyed it in. \"Nate ok?\" I checked. \"Is he sick?\" Russell stared at the eftpos machine and didn't meet my eye.\n\n\"He's just running an errand for the kitchen.\" He said. I frowned to myself as I waited for my coffee in silence. I shouldn't be upset, but you know, I'm here at the same time everyday. Couldn't Russell have gone to get whatever the kitchen needed? I thanked Russell absentmindedly as I left the cafe. Well, in his defence maybe Nate didn't quite place the value I had on our daily interactions. And at any rate, I'd see him tonight.\n\n\"Back so soon?\" Caro asked. I bit my lip.\n\n\"Oh really?\" I glanced at the time.\n\n\"Usually you're down there for 20 minutes.\" She said, typing away. I leant over conspiratorially.\n\n\"Usually Nate's there.\" I muttered. Caro grinned. She eats that shit up. It actually is kind of nice to have an insane office co-worker who totally gets off on gossip. She raised her eyebrow at me.\n\n\"Ah, we're admitting it.\" She said. \"What on earth are we going to do when he's working in the actual office? Surely the fianc\u00e9 won't be stoked about that.\" I took a deep breath.\n\n\"The fianc\u00e9.... and I.... are.... completely unrelated to Nate... not speaking.\" I said. \"Maybe permanently. I'm not sure.\" Caro's eyes widened.\n\n\"Fuck Jude. I had no idea. I'm so sorry. I wouldn't have...\" I shook my head.\n\n\"You're alright. I started this job at a weird time.\" I sighed and played with my scone. My appetite seemed to be completely non-existent at the moment. \"We haven't managed to talk about it sober.\" I said. I glanced at Caro. She'd abandoned her work and was looking at me with a horrible expression of love and concern on her face. She stood up and knelt beside me and pulled me in for a hug.\n\n\"Aw Jude.\" She said. \"If you need a friend, you know, one who isn't Ryan because god knows he will not be a great person to talk to about this, I'm here. And if you need space, I'm also here.\" I embraced her back awkwardly.\n\n\"Thanks, Caro.\" I nestled my head on her shoulder when I felt my phone begin to vibrate and with a sigh I picked it up, barely glancing at the number. \"Jude speaking.\"\n\n\"Jude Awatere?\"\n\n\"Yeah.\"\n\n\"Mr Awatere, this is about Denise Lawton. You're listed as her...\"\n\n\"Denise?! Is she ok?\" I sat up and Caro stepped away from me, her eyes even wider and more concerned than before.\n\n\"She's had a fall.\"\n\n\"Is she ok? Where is she?\"\n\n\"She's at the hospital...\"\n\n\"I'm on my way.\" I hung up and stood up, my chest beating wildly. I glanced at Caro. \"My mum's in hospital.\" I choked out. \"Caro.... I have to...\"\n\n\"Go.\" She said. And I ran.\n\n----\n\nBy the time I made it there I was... ok. My heart rate was normal and I could breathe, and think again. Enough to call work, and explain properly, and my boss was kind and understanding and told me not to worry about work. Enough to call Levi, who was as distraught as I was, naturally, and also racing to the hospital. We met each other in the ED room and embraced.\n\n\"Oh god.\" He said. \"The worst timing in the world. I can't believe this.\"\n\n\"Shhh.\" I stroked his hair. \"I'm here, Lee. She's ok. We'll be ok.\" Lee pulled away from me and wiped his eyes.\n\n\"Thank you.\" He said. \"I know it's so selfish of me to need you right now, but I need you.\"\n\n\"Of course.\" I said, squeezing his hands. He blinked up at me.\n\n\"You mean as much to her as I do.\" He said. \"And this is the worst place and time in the world, but Jude. You're right. It's not fair to you, who I am, what we're doing. And we will separate, and we'll do it properly, sober, and kind, and knowing it's for the best but please.... Please...\" His face crumpled. \"Please just love me right now.\" I pulled him back against my chest and we sobbed on each other in earnest.\n\n\"Oh Levi.\" I kissed his head. \"You know I'll always love you. No matter what.\"\n\n----\n\nWhen we were finally allowed in I could hear Denise from the end of the corridor, throwing a fit about not being allowed to smoke inside. Levi and I smiled at each other and approached the room, where a young volunteer was standing with her arms folded. She glanced up at us.\n\n\"Mr Awatere? Mr Lawton?\" We nodded and she sighed with relief. \"Denise.\" She said firmly. \"You can argue with your sons now. I'm not paid for this.\"\n\n\"Well thank god for that, missy. You're an awful nurse.\"\n\n\"I told you, I'm not a nurse, I'm a volunteer.\"\n\n\"So you'll be a nurse one day.\"\n\n\"Absolutely not.\" The young volunteer stuck out her chin. \"I do this because I'm an awesome human being. I'm not studying nursing, I'm in construction. And my shift was over ten minutes ago.\" She unfolded her arms and looked at me and Levi. \"Good fucking luck.\" She said, and stormed out. Lee and I laughed as we sat on either side of Denise.\n\n\"Mum.\" Levi took her hand. \"Don't bully the staff.\" Denise rolled her eyes.\n\n\"I don't.\" She said. \"I'm very nice to the young Doctor.\" She looked between us. \"You two speaking again then?\" Levi shrugged.\n\n\"For your sake, mum.\" He sighed. \"Are you ok? What happened? We've been worried sick?\" Denise sighed and folded her arms.\n\n\"I had a fall.\" She said. \"Which used to mean you got a bandaid and a lollypop bit I guess when you turn 90 they get all fussy about your hips.\"\n\n\"90?!\" Levi laughed. \"Mummmm.\" Denise was nowhere near 90. I grinned at her.\n\n\"Goodness, you look amazing for 90.\" I said. She grinned at me.\n\n\"I look incredible, age notwithstanding.\" She sighed and tried to sit up, and Levi stopped her and fussed with the bed. She grumbled, but allowed it, before looking at us shrewdly. \"Well, if I knew all I had to do to get us in a room together was fall over I would have done it a long time ago.\" Levi and I looked at each other.\n\n\"Mmm.\" He said. Denise sighed.\n\n\"Jude promised he'll still be my son if you break up.\" She said. \"So I'm glad you two can still play nice.\" Levi shook his head.\n\n\"Mum!\" He said. \"Are you ok?\" She waved him away.\n\n\"So are you two biting the bullet?\" She asked. \"You know I love you both terribly but you're making each other incredibly unhappy.\" Levi sighed and slumped in his chair.\n\n\"Mama, we're here for you. Not to talk about us.\" She raised her eyebrows.\n\n\"And I'm very old and very frail and I want you to both be happy. And you're not.\"\n\n\"Denise.\" I said firmly. \"You're the one making Lee unhappy. He doesn't want to talk about it.\"\n\n\"Well I'm on my deathbed and I do want to talk about it.\" She stuck her chin out obstinately, the same way Levi does, and I shook my head with a sigh.\n\n\"Have you ever won an argument with her?\" I asked Levi. He smiled.\n\n\"Once, I think.\" He said.\n\n\"You have not.\" She said.\n\n\"No? When I was 15 and you let me go to that party?\" Levi grinned. Denise grinned and shook her head.\n\n\"Ah, no.\" She said. \"I wanted the house to myself but I knew you'd never want to go if I let you.\" Levi laughed.\n\n\"Mama.\" He said. \"You're so mean.\"\n\n\"Aye.\" She said. \"So. Tell me. How's the breakup?\" Levi and I looked at each other. Eventually he sighed and took her hand and I took her other hand.\n\n\"Hard.\" Levi said. \"Jude's been drinking a lot. But I know that's because I'm hard to talk to.\" Denise nodded.\n\n\"You get that from your father.\" She said. I snorted.\n\n\"He gets it from you.\" Denise fixed me with her steely gaze.\n\n\"You can't only face your problems drunk, Judey.\" She said. I sighed.\n\n\"No.\" I mumbled. \"It is easier though.\" I said. Levi scoffed.\n\n\"For you.\" Fair. Denise squeezed both of our hands.\n\n\"Ah.\" She said sadly. \"My boys.\"\n\n----\n\nNate\n\n-----\n\n\"Woah.\" Russell said. I glanced up at him and raised my eyebrows.\n\n\"There are two guys in the doorway.\" He said. \"They're like... bizarro world us where I'm jacked and you're asian.\" I looked in the doorway and laughed. He was totally right. One of them was tall, and shiiiit he was jacked, and blonde and 'All American' just like Russ. And the other was like... well, bizarro world me was right. My height, the same long dark hair, wearing a t- shirt exposing his arms which were absolutely covered in ink. I laughed as I looked at Russell.\n\n\"Freaky.\" I said. \"Ooooh, they're coming in. Bags.\" Russell rolled his eyes and let me take the counter.\n\n\"Nate!\" The blonde one grinned at me. I stared at him. I definitely didn't know him. His smile stretched even wider. \"Jude's prot\u00e9g\u00e9!\" He said. \"Ryan. I work with Jude, we're so glad to have you coming on board.\"\n\n\"Coming on...\" Ryan's eyes widened, and impossibly, his smile did too.\n\n\"Oh, don't tell me you haven't checked your email? You're our new intern!\" He gestured to the guy beside him who was grinning at me. \"This is Sammy, my husband, he used to work here too but he's in the Minister's office now.\" He rolled his eyes. \"Way too smart, kept getting himself promotions.... But anyway we're both off today, I only came in to do some housekeeping and grab a coffee, Jude says yours is better than down the road...\" He suddenly cut himself off. \"What the hell did you do to yourself?\" He said. My whole cover story died on my lips because I was so taken aback by everything.\n\n\"Drunk asshole.\" I said. \"I'd love to say I gave as good as I got but...\" I shrugged. \"Anyway- coffee?\" Ryan's face fell as he looked at me and he and Sammy glanced at each other. Oh Jesus. That look. It had been on everyone's face all day. It was why I ran out when Jude was due and made Russell take the counter.\n\n\"What, are you just going to hide from him till that heals?\" Russell had said. I winced.\n\n\"Just until I can think of a good excuse.\" I mumbled. \"Jude's too smart. And he'll say I told you so.\" Russell's eyes widened.\n\n\"He told you so? How much does he know?\" I blushed.\n\n\"We talk sometimes, when we work.\" I sighed. \"Actually he kind of knew that D was... I mean I told him a bit... anyway I can't face it, please Russ?\"\n\n\"Yeah, of course.\"\n\nRyan and Sammy said nothing except their order and I listened in on them as they talked about their little weekend getaway they were about to go on when Ryan's phone rang. Sammy sighed and leant over the counter, watching me work.\n\n\"Nice sleeve.\" He said. \"Warnock right?\" I glanced at him.\n\n\"Yeah.\" I said. \"You got any of his stuff?\" Sammy showed me a Korora on his arm done in the same style.\n\n\"And some flames on my shoulder.\" He said. \"I like his stuff.\" I nodded absentmindedly.\n\n\"You're covered then?\" I said. He smiled.\n\n\"Well... I can usually get away with it in a suit.\" He glanced at my hands. \"Which you can't.\" He grinned.\n\n\"Oh.\" I looked at my tattooed hands, worried for the third time in a week about them. Yeah. I mean- they all know. But I feel like a fucking idiot. Ugh, why didn't I listen to mum?! Sammy laughed as I muttered that last bit out loud.\n\n\"Offices are ok these days.\" He said. \"Anyway, you still got the job.\" I grunted. \"Congrats by the way.\" He said. \"Jude speaks very highly of you.\" I blushed.\n\n\"He's been really kind.\" I said. \"I wouldn't have got the job, only he made my CV look awesome, I have no idea how he did it.\" We glanced up as Ryan returned with a frown on his face. He glanced at me.\n\n\"Saammmmm....\" He said beguilingly. I turned away and pretended not to listen as Sammy sighed.\n\n\"What?\" He asked flatly. I smirked to myself. I had a feeling Ryan could usually get away with murder, but Sammy was clearly not going to fall for it.\n\n\"Jude's in hospital with his mum.\" I heard him say. \"He might be out all week. It's gonna put a lot of pressure on the team if I'm away too.\" Sammy sighed.\n\n\"Dammit.\" He said.\n\n\"I know I promised.\" Sammy took Ryan's arm gently.\n\n\"Extenuating circumstances.\" He said sadly. \"But you know what that means.\" I glanced at Ryan who was turning pink all over.\n\n\"Got it.\" He said. Sammy was grinning at him. I wondered what it meant. Something really juicy. I strained my ears.\n\n\"You have to go back now?\" Sammy asked.\n\n\"I'm already here.\" Ryan said apologetically.\n\n\"Alright. Well. Think about how to apologise properly and I'll see you tonight.\" Oooh. I smirked to myself as I turned away. Ugh, that was so hot. I glanced at Sammy and to my chagrin he was looking at me, an eyebrow raised. I cleared my throat. \"Hmmm.\" He said as he looked at me. \"You're not a very subtle eavesdropper are you.\" I felt my ears turn pink.\n\n\"Uhhhh....\" Sammy grinned.\n\n\"It's ok.\" He laughed. \"Nice to meet you, Nate. I'll probably see you around a bit once you start. Good luck.\"\n\n\"Thanks.\" I said hoarsely. He paused as he stood up and gave me a look.\n\n\"Hope drunk asshole isn't going to give you any more grief.\" He said. I almost died on the spot. You know most people really don't pry. Ryan and Sammy seemed like... way, way too open. I swallowed.\n\n\"I have an angry flatmate, and angry older brother, and an angry boss when Jude finds out.\" I said. \"I think I'm covered.\"\n\n\"You can add an angry Ryan to that list.\" Sammy said. \"And believe me that guy has one hell of a punch.\" He winced as he started to walk away, and I waved at him blankly. God. Was that what an office was like? Everybody all over each other's personal lives? Maybe this was a bad idea.\n\n----\n\nI was locking up for the night when I heard someone approaching. I glanced up and swallowed, Crap.\n\nJude looked up and his face fell as he looked at me. He didn't say anything, he just crossed the distance between us with like two steps and embraced me. God. He actually was the perfect height. His arms wrapped around me and my head fell to his shoulder and I let him hold me tight, feeling a lump form in my throat.\n\n\"Oh, Nate.\" He stroked my hair as he felt my breathing grow unsteady. He let me shudder as silently as I could on his shoulder, gasping for air between muffled sobs and he just held me. When I finally pulled away I noticed his eyes were wet too. He stroked my face gently. His big brown eyes were filled with kindness. \"And here I was thinking you were so mean for running out when I came in today.\" He smiled a little.\n\n\"Don't say I told you so.\" I choked out. His face fell.\n\n\"Oh Nate.\" He shook his head. \"Of course not. Oh.\" He stroked my hair again and I let him. I didn't care how inappropriate it was. It was so nice to be held.\n\n\"I heard about your mum.\" I said. \"Is she ok? Are you ok?\" Jude smiled and squeezed me.\n\n\"Everything's ok.\" He said. \"I'm off for a week, Ryan will take over inducting you.\" He sighed. \"And then one more week before I have to put up with Russell's coffee I guess.\" I laughed.\n\n\"But you get to see a lot more of me.\" I blushed furiously. Perfect time for flirting, Nate, you're such a catch. But I looked up and Jude was kind of... smirking. He sighed as he let me go.\n\n\"I have a feeling you are going to be remarkably distracting.\" He said, grinning at me. Oh my god. Real flirting. But he was engaged! \"Go easy on me.\" He said, as he approached the lifts.\n\n\"What?\" I laughed. He raised his eyebrows and... one hundred percent no doubt about it... he checked me out.\n\n\"I'm just going in to grab my stuff.\" He said. \"I'll see you next week, Nate.\" He waved goodbye as the elevator closed and my chest thumped. What... what the hell was I walking into?\n\n-----\n\nThe next week\n\n----\n\nMonday\n\n-----\n\nNate\n\n----\n\nMy phone rang as I was unstacking chairs. Fucking Russell. He was late. I picked it up with a sigh.\n\n\"What?\" I muttered. \"Don't tell me you're sick.\"\n\n\"Uhhh.... Not exactly.\" He mumbled. \"Um. I'm... outside.\" I looked at the door and he raised his arm in greeting. I swallowed. This had a really familiar ring to it.\n\n\"Locked out?\" I asked quietly.\n\n\"No....\" He said. \"Uh... what was it we agreed on? No lectures and no....\" I cut him off and threw my phone down as I marched to the door and swung it open. Fucking moron. I sighed deeply as I took him in.\n\n\"Hey.\" He smiled guiltily.\n\n\"Oh for fuck's sake.\" I embraced him. He held me tight and as I pulled away I inspected his face. \"We match!\" I joked, looking at the ugly purple bruise on his face. He closed his eyes and winced.\n\n\"Yep.\" He said. He yawned and locked the door behind him as he followed me in. I sat him down and made him a coffee as I continued to open.\n\n\"Shona?\" I joked. He smiled and shook his head.\n\n\"Guess again.\" He yawned for a second time. \"I'm sorry. I know you didn't want any fighting. I just... saw red when I got home last night.\"\n\n\"Well, that'll teach you to try and take on someone with a black belt and three inches on you.\" I ruffled his hair. \"Are you ok?\" Russell grinned.\n\n\"Exhausted.\" He said. \"We spent all night with the police in the emergency room. I have an assault charge, please don't tell mum.\"\n\n\"What?!\" I whirled on him. \"You don't?! What the fuck? Did D call the police? What a fucking cunt!\" Russell shook his head.\n\n\"Darius was in no state to call the police.\" He said grimly. \"I uh.... I actually... knocked him out in the end. Uh.... so then I got scared and dragged him to the emergency room because I thought I really might have killed him, and we ran into some police on the way because I was speeding, and they helped me get him there... and, well, I mean, it was all a bit weird but he was desperately trying to cover for me... so anyway... uh.... Job prospects a bit ruined. I think I'll get off with community service. Him too. We'll both plead guilty.\"\n\n\"Oh fuck Russ.\" I sat down. \"Fucking hell man. You shouldn't be at work.\" I swallowed. \"What about your job placement?\"\n\n\"I... I guess I'll have to call them.\" He swallowed.\n\n\"Ok. That first.\" I said. \"I'll call in Frank to do the morning, you have to sort your shit out. Jesus.\" I hugged him again and he winced.\n\n\"Ribs.\" He said. \"Please let go.\"\n\n\"Oh sorry.\" I dropped my arms and pulled out my phone. Frank was pretty fucking mad to be called in early but when I told him it was because Russell had taken it upon himself to beat up my ex he suddenly got really interested and decided he could make it after all. But he wanted all the gory details. That's hospo for you. I sighed as I turned back to Russell, who was half heartedly trying to help with opening- moving like a sloth in pain. I winced. \"You knocked Darius out?\"\n\n\"Only for like a second.\" He said. He swallowed. \"I'm sorry, Nate.\" I shook my head.\n\n\"You're meant to be the smart one.\" I mumbled. \"Can I help with the legal stuff?\" Russell bit his lip.\n\n\"I'd rather you didn't.\" He said. \"I'll get a lawyer. Darius and I agreed we'd like to keep you out of it.\"\n\n\"But it's my fault!\"\n\n\"Oh Nate!\" Russell stopped what he was doing and embraced me. \"None of this is your fault. All you've done is be sweet and kind. You just wanted Darius to be a better person. And you begged me not to do anything. None of this is on you, ok?\"\n\n\"It is!\" I insisted, wriggling out of his grip. \"If I hadn't gone and gotten myself beaten up....\"",
        "\"Shhhh.\" Russell grabbed my shoulder gently. \"Nate, dude. You are the only person in this whole mess who's innocent. Please be kind to yourself, little bro. We love you. Even Darius, although his way of showing it needs work...\" He sighed. \"Tell you what. I guess I have the day off. Can I arrange a counselling session for you? I think it might be good for you to talk. To someone who isn't me.\"\n\n\"Oh.\" I bit my lip. \"Na, I'm fine.\"\n\n\"You're not fine.\" Russell sighed. \"I know you always think you have to be fine, and strong for me. But you're about to start a new job and you can't start it with all this on your shoulders.\" he looked at me with wide eyes. \"It's literally the least I can do.\" I swallowed.\n\n\"Fine.\" I said. \"You pay then.\" He nodded. \"And what the hell do we say to mum?!\" I moaned. \"We're meant to have family roast this week! Two black eyes, cracked ribs, and an assault charge?!\" Russell laughed.\n\n\"Uhhhh.... I was walking Biscuit with you?\" I rolled my eyes.\n\n\"Brioche.\" I corrected him. \"She'll be so disappointed.\"\n\n\"She'll be worried.\" He said with a frown. \"Even more reason to see a counsellor, Nate.\" He sighed. \"She'll get the whole story out of us either way. I guess we come clean.\" I wrinkled my nose.\n\n\"Another I told you so.\" I sighed. \"She always told me I was fucking terrible at choosing a nice guy.\"\n\n\"I know.\" Russell said. \"I remember. The amount of times I heard 'Nate, you can date whoever you like but not HIM. THAT BOY IS BAD NEWS....\"\n\n\"Blah, blah, blah...\" I agreed. \"And whenever you brought a girl home it was all smiles and have another serving of potatoes and oh Russell, she's so nice.\"\n\n\"Well I date nice girls.\" He smiled. \"Speaking of which.... In the middle of all that last night... It's really boring waiting in the ED room... I called Sho.\"\n\n\"Oh?\"\n\n\"We were gonna have dinner tonight.\" He smiled at me. I raised my eyebrows.\n\n\"Tonight? You sure that's... smart timing?\"\n\n\"I can't wait any longer.\" He sighed. \"I miss her so bad.\" I smiled.\n\n\"Aw. Cute. What's she gonna say about all of...\" I gestured at him.\n\n\"She's gonna say I'm an idiot.\" He sighed. \"And that she hopes I'm ok.\" I looked at Russell, and I gently stroked his back.\n\n\"She's the one.\" I said. He looked at me.\n\n\"I think so.\" He said.\n\n----\n\nI wasn't sure what I was meant to be doing, with Jude away, but Ryan showed up just as I was closing the cafe with a big smile and asked if I was game to start with... being inducted I guess. He talked me through the job, which was a step down from what I'd actually been doing. Admin, emails, coffee rounds... absolutely piss easy, boring, and I'd be doing it all for an extra three dollars an hour. Ryan was easy to talk to, easier than Jude actually, although maybe part of that was that I wasn't half in love with Ryan. He was jokey and kind and had this energy about him- like he was kind of moronic- but I could tell from the way he looked at the work I'd been doing with Jude and his advice for me he was deeply smart.\n\n\"You're actually wasted interning.\" He said as he showed me around the empty office. \"But it's a great step in the door, and in six months Jude and I will make sure there's a real job for you.\" I grinned.\n\n\"We'll see.\" I said. \"I don't know if Jude mentioned but I'm kind of a hazard. Let's just take it one step at a time.\" Ryan laughed.\n\n\"A hazard? How so?\" I opened my mouth but I didn't need to tell him because at that exact moment I tripped on a cord and reached out to stop myself from falling. I grabbed onto someone's tray and covered myself and the desk with an alarmingly big stack of papers which fluttered gently around the office. I moaned as I blinked up at him from the floor. \"Oh.\" He laughed and helped me to my feet. \"I see.\"\n\n\"Shit, I'm sorry. Oh, sorry, not shit, um...\" Ryan laughed again.\n\n\"He did mention you have a filthy mouth.\" He said. \"We probably do need to work on that.\" I blushed as I started to gather the papers.\n\n\"Yeah.\" I winced. \"I'm trying.\" Ryan helped me and we started to put the giant report back in the right order. \"They could have stapled this.\" I grumbled.\n\n\"That's on me.\" Ryan winced. \"I didn't realise that was going to be an issue. I'll tell the team we might need to up the staple budget.\" He laughed at my face. \"It's ok.\" He reassured me. \"This isn't a biggie.\" I swallowed and continued putting the paper together in silence. My eyes drifted over the pages as I worked, ignoring the 'Classified' sign stamped on every page. But really, if you're gonna leave classified documents in an open office in-tray- isn't that kind of not my fault if I read it?\n\n\"Huh.\" I muttered. \"This is what Jude's been working on eh?\" Ryan grabbed the stack of papers off me.\n\n\"Don't read it.\" He chastised me. I blushed.\n\n\"Don't leave it out in public.\" I mumbled. My eyes flew open. \"Oh fuck, sorry.\" I winced. Swearing again. \"Ah... um....\" Ryan cut me off with a huge grin.\n\n\"You're going to be an utter delight to work with.\" He said. \"I can see why Jude likes you so much.\" I blushed.\n\n\"He's only here for a few months right?\" I asked. Ryan shrugged.\n\n\"He's contracting.\" He said. \"Although... I dunno. I think Adrian has a plan for him. If we can offer him the right salary he might stick around. Gonna have to be some salary though, Jude makes three times what I do in six months.\" He shook his head. \"All the overtime isn't worth it though, he barely sees his fianc\u00e9.\"\n\n\"Oh yeah.\" I mumbled. \"Well. That might be why...\" I cut myself off. Ryan was just too easy to talk to. And also I can't shut up. I swallowed. That was such a bad combination. I wasn't going to last a day in this office. Ryan looked at me shrewdly. He swallowed.\n\n\"You and Jude talk a bit then?\" He said quietly. I looked at him. Oh. He knew too. Maybe everyone knew.\n\n\"A bit.\" I said quietly. \"He wanted to help with...\" I gestured at my face. Ryan raised his eyebrows.\n\n\"He's like that.\" He said. \"How... is... that, by the way? You know, between Jude and I we could probably really scare the shit out of him.\" I laughed as I imagined D confronted by two of the tallest, broadest men I'd ever seen working in an office.\n\n\"Well....\" I winced. \"You know Russ? He's my brother, he works with me downstairs.\" Ryan frowned.\n\n\"The dark haired one one?\"\n\n\"Na, the tall blonde one.\" I sighed. \"Different dads.\" I explained for the billionth time. Ryan nodded slowly. \"He ah... he kind of already... took care of that.\" I swallowed. \"Although taking care of isn't exactly how I'd phrase it... anyway, I won't be showing up at the office with black eyes, I swear.\" Ryan nodded.\n\n\"Nate.\" He sat down at a desk and I swallowed. Oh no. I'd talked myself out of this before I even started. \"You seem very worried you won't fit in here.\" He said quietly. \"Don't be ok? Adrian saw your work and asked Jude to get you to apply, and Jude already thought the sun shone out of your ass. I like you a lot, I'll make sure you get on ok, and you're smart and you got through all that work after hours that would have taken the team months. Don't worry about what people will think of you. It's not like that. Anyway most of them already know you from downstairs. This isn't shark infested waters. This is a small team who want to see you succeed.\" He sat back and smiled at me, and I tried to ignore the lump in my throat. \"And, never ever tell anyone this, but before I met Sam, I was the most useless person on the team. I was late with everything, I half assed any task anyone gave me, and I'm not famed for my coordination either.\" He chuckled as I went red. \"But even at my absolute worst when I fucked up some budgeting really, really badly, the old boss Erin called me in and she didn't dress me down, or fire me, or be a dick. She asked if I was ok, and said I wasn't showing the promise I had when I started the job, and she put a formal warning on my record and gave me monthly check-ins to get me up to speed. No one is going to yell at you or think you're stupid if you can't keep up in your first month- and I think you will keep up anyway. We're on your side, Nate. You'll enjoy this.\" I blinked. Crap. I didn't trust myself to speak.\n\n\"Thanks Ryan.\" I said huskily. \"I am looking forward to it.\" I coughed, trying to will the tears to retreat into my eyeballs. \"I'm just nervous. I should have done something like this straight out of Uni, and now...\"\n\n\"You'll be a whole lot better because you're not straight out of Uni.\" Ryan reassured me. \"Life experience gives you perspective.\"\n\n\"Thanks.\" I said again. \"You and Jude... you've been so nice. I really appreciate it.\" Ryan smiled.\n\n\"Alright, come on.\" He said. \"Let's conclude the tour and set you free for the night.\"\n\n----\n\nFriday\n\n----\n\nJude\n\n----\n\n\"Dammit.\" Levi huffed as he helped me with the boxes to Logan's van. \"I didn't realise you owned so much damn shit.\" I laughed.\n\n\"Be grateful I'm not keeping the furniture.\"\n\n\"How dare you, it's all mine asshole! Ugh, your new place is going to be so badly decorated.\" I laughed.\n\n\"Well, if I need an interior decorator I'll call.\" I sighed as I looked at him. \"Thanks for helping.\"\n\n\"Of course.\" He stuck his hands in his pockets. We looked at each other awkwardly. He sighed and stuck out his hand. \"I don't know what to say.\" He said. His face fell and his eyes started to water. \"God. Here we finally are, and it's the right thing, and we've done it the right way, and all I can think is I love you more than ever, and I wish you'd stay.\" I swallowed. In spite of myself I embraced him, ignoring his hand, and we squeezed each other tight.\n\n\"I know.\" I laughed and wiped my eyes as I pulled away. \"I keep thinking the same thing. But....\" Levi cut me off, shaking his head.\n\n\"I know.\" He said. \"Well. Goodbye Jude. I love you. Be kind to yourself. Please stop smoking, it's really bad for you. And... please, whoever the next guy is, don't you dare downgrade. He better be so much hotter than me or I'll scream.\" I laughed.\n\n\"Goodbye Lee. I love you too. I hope you can find happiness with... as many guys as you need.\" He laughed and we really did shake hands....\n\nAnd Logan blasted the horn... and we parted... and I drove away, watching him watch me from the rearview mirror.\n\n-----\n\nHis mother had made us do it properly. She made us get dinner together, and talk about everything openly, without alcohol. It hurt like hell. We both cried all night, and we agreed if, in two years, we were miserable, we'd try again. But for now this was it- everything we'd ever shared was split up, and packed in boxes or left in a now bachelor's apartment. I dumped everything I had in a storage unit and booked a hotel for two weeks while I worked out if I could afford to buy my own place. I wouldn't mind renting, but now that I was single my absolute number one priority was getting a dog, and that would be easier if I had my own place.\n\nWe agreed we'd just have to not engage with each other for some time. It was too hard, and we knew we'd fall prey to feelings, and memories about good times. Denise put us on rotation to visit her so our paths wouldn't have to cross. Levi told me he really, truly wanted me to be happy, and he would never forgive himself for the pain he caused me, and I told him I felt the same.\n\nAnd tonight I was getting absolutely fucking wrecked with my friends from Uni.\n\n------\n\n\"No ring!\" Rita greeted me. \"Oh my god Jude. I can't believe you actually did it.\" I shrugged and reached for my wine.\n\n\"Me either.\" I said with a grin. \"I thought I'd never get to bottom again!\" I called out to the whole bar, who stared in fascination at me. Ethan hit me.\n\n\"Jude, you've only had like two wines!\" He chastised me. \"Keep it down!\"\n\n\"No!\" I stood up. \"Ass for the taking! A bit rusty but game as hell!\"\n\n\"Jude!\" Abby pulled me to sit down again and I gestured to the bartender.\n\n\"Shots!\" I called. She folded her arms.\n\n\"Absolutely not.\" She glared at the others. \"Control your horny gay friend.\" Ethan blinked.\n\n\"Woah.\" He said. \"Weird to hear that not directed at me.\" I laughed at him and sipped on my wine.\n\n\"Tell me about it.\" Logan said, wrapping his arm around Ethan. I smiled as I looked at them. It made me sad, how happy they were, but only because I envied it. From the second I'd met Logan I knew he was kind, and doting, and so right for Ethan, and I kind of hated them both, and I kind of wished they'd let me in and we could have a soft poly thing. But I knew that wouldn't work. Logan and I are both the jealous type. I stared across the bar and caught eyes with a guy who was definitely grinning at me. I grinned back and raised my wine glass and he beckoned me over. I glanced at my friends, who were arguing about which Star Wars was better, fucking nerds. They wouldn't notice if I.... I felt my wrist in a vice like grip as I slipped off my stool and glanced around guiltily. Logan was glaring at me.\n\n\"I'm just....\" Logan raised his eyebrows.\n\n\"Rebounding.\" He said. \"Which is fine. But you're not in any state to consent.\"\n\n\"I've had two wines!\"\n\n\"And a broken heart.\" Rita reminded me. \"Just us tonight, Jude.\" I sighed and slumped back down on the stool. Dickheads. I glanced at the guy who was laughing and he stood up. Ooh. I straightened my back as he walked over and placed his hand on the small of my back. Oooh. I smiled up at him shyly.\n\n\"I'm sorry to eavesdrop.\" He joked. \"But I couldn't help overhearing your quiet conversation regarding an ass for the taking...\" Rita turned around and batted his arm off me.\n\n\"Nope.\" She said. \"Jude is busy tonight. Sorry.\" He glanced at my friends, who were all glaring at me, and back to me. He raised his eyebrow at me.\n\n\"Jude?\" He asked quietly. I stuck out my hand with a smile. \"Thomas.\" He said. \"Your friends think you're busy tonight.\" I melted under his soft gaze and opened my mouth.\n\n\"Jude!\" Abby punched my shoulder. \"I'm sorry, Thomas, but we really have to watch out for him tonight.\" I gently pushed her away.\n\n\"No you don't.\" I said. \"Thomas is just gonna buy me a drink, ok? We'll sit right over there.\" I pointed to the corner he'd been in. I looked Rita pleadingly in the eyes, because she was the softest touch and she winced as she looked at me.\n\n\"Fine.\" She said. She grabbed Thomas' elbow and looked at him firmly. \"He's not going home with you.\" Thomas smirked as he shook her off and offered me his hand. I grinned as he motioned for another drink for me and the bartender poured it reluctantly. He ushered me back to his seat and laughed as we sat down.\n\n\"Wow.\" he said. \"A whole team of bodyguards protecting your ass. Must be a great ass.\" I laughed.\n\n\"It has its moments.\" I sipped on my wine and looked him over. He was roughly the same size as me, maybe a little broader, and a little shorter. He had curly dark hair and was wearing a trenchcoat inside. He had very intense dark eyes, and he was staring at me as I glanced at him. Ugh, I hadn't been properly hit on in so long. This felt so good. I smiled at him.\n\n\"So, what are you doing alone in a bar?\" I asked. He settled back into the seat and shrugged.\n\n\"Drinking.\" He said. \"Same as you.\" I smiled.\n\n\"I'm not alone.\" I reminded him. He smirked.\n\n\"Unfortunately for me, no you are not.\" He glanced at my friends. \"Do they always try that hard to cockblock you?\" I sighed.\n\n\"I'm just out of a long relationship.\" I said. \"They think my head's not in the right place- they might be right, in their defence.\" Thomas looked at me thoughtfully.\n\n\"Well, I mean. One night stands are meant to be good for breakups aren't they?\" I grinned at him.\n\n\"Preaching to the choir, buddy.\" He grinned.\n\n\"Well.\" He said. \"Tell you what. I'm actually busy tonight anyway. Why don't you take my number and maybe when your friends aren't around I can help you get over him.\" I handed him my phone wordlessly and smiled as he handed it back.\n\n\"Thanks.\" I smiled. \"You off now then?\" He glanced at the bar, where my friends were heatedly arguing over something stupid, no doubt. He looked at me and moved closer.\n\n\"I have a bit of time.\" He said. \"Why don't we get to know each other?\" I moved closer to him and let his arm fall over my shoulders, and I leaned into him as he asked me what I did, who I was... all the while slowly moving his hands over my body and making me blush. He pressed his lips to my neck and I let myself fall into him. I glanced up, more than ready to start making out in a secluded corner with a guy I'd just met, but his phone started buzzing and he sighed.\n\n\"Yeah.\" He picked up. \"Yeah, sorry, I met a hot distraction.\" He winked at me. \"I'm coming. See ya.\" He hung up and shrugged apologetically at me. \"Well that's me.\" He said. \"Text me.\"\n\n\"I will.\"\n\nI drifted back to my friends with a smug smile on my face and sat next to them, ignoring the rolled eyeballs as I sipped on my wine.\n\n\"Hey!\" I said, as Abby scoffed. \"I behaved! He's gone, I'm back.\" The girls pursed their lips at each other and Tama shook his head.\n\n\"Just... be careful.\" He pleaded. I rolled my eyes.\n\n\"Anyway, weren't we going dancing?\" Ethan said. The others excitedly agreed and started to pack up their stuff and I reluctantly let myself be led out to a club. Dancing for me usually means sitting outside in the smokers section, chatting up whoever happened to sit next to me. I wasn't exactly looking forward to it.\n\n----\n\nA few more drinks down and dancing didn't seem as bad. More than that, we'd ended up shedding Tama at some point, which was our straight guy friend gone, and then Abby, which was our mom friend gone, which left three gay men and a total drama queen and that meant Ivy, which meant that dancing was more like foreplay... and even though I never danced I was getting bored of sitting and watching the others as I drank my way through maybe two bottles of wine.... so I slowly found myself pulled into them, and sort of tried my best... but I was a lot more interested in some guy who decided to wrap his arms around me, grinding against my ass and running his hands over my torso. Now that was fun. I closed my eyes and let him tease me, running his hand up under my shirt right there on the dance floor, and gently pulling on my nipple... I was that close to begging him to take me in the bathrooms when I felt the presence of Ethan and Logan on either side and before I could protest, I was frogmarched outside. Logan apparently had the same bad habit as me because he pressed a cigarette into my hand and tried to calm me down.\n\n\"You're so wasted Jude.\" He moaned. \"Stop hitting on people, you'll get laid, just not tonight.\"\n\n\"I'm sooo horny.\" I moaned loudly. \"Where did that guy go? He was cute.\" I looked around and Ethan stopped me from getting up.\n\n\"What did he look like?\" He asked pointedly.\n\n\"Cute.\" I said. Ethan laughed.\n\n\"Ah-huh.\" He said. \"What colour was he?\" I glanced at Ethan and bit my lip.\n\n\"Ummmm.... White?\" Ethan shook his head.\n\n\"Nope. Good guess, this club is like seriously lacking in pigment.\" He glanced around. \"But your guy was brown.\"\n\n\"Good, that's hotter anyway. We'll make beautiful brown babies. Where did he go?\" Ethan sighed.\n\n\"Not the point, Judey. Baby boy, you're wasted.\" I sighed.\n\n\"Ok, fair point. I probably can't get laid tonight.\" I sighed. \"Dammit, why did I drink so much?! I so can't get hard. Although maybe I'm relaxed enough to...\"\n\n\"Jude?\" I heard a voice say and I blushed as I looked up.\n\n\"Ryan!\" I grinned. I jumped up and wrapped my arms around him. I was so excited to see him. He would help me get laid. He would get rid of Ethan and Logan... god that was a mouthful... but Ethan and Logan together is just... Ethan. E-Lo? I shook myself out of that whole rabbit hole and went to introduce them. \"Dudes, this is Ryan, he's my best friend at work... Ry... and Sam, his Dom...\" I giggled. \"Oops. His husband... guys this is Ethan and Logan. E- Lo? They're cockblocking me.\"",
        "\"Oh...kay.\" Ryan gently pushed me off him.\n\n\"Sorry.\" Ethan said. \"We were meant to be babysitting but we looked away and he's uh... had one or two too many.\"\n\n\"Aw.\" Ryan said. \"Man, I did not take you for a drunk clubbing kind of guy Jude.\"\n\n\"I'm not.\" I sighed and sat down, clutching at Ryan's shirt. \"Levi and I broke up. I mean, we already were, but like this time it's proper... anyway I'm having a real quick breakdown.\"\n\n\"Oh shit.\" Ryan sat next to me. \"Fuck, are you ok? Ok, well, obviously not, you're an absolute mess....\" I glanced to my side as Sam moved to the other side of me and stroked soothing circles on my shoulder. Man, Ryan was so lucky. Sam was so pretty. I reached out absentmindedly and touched his hair and he flinched away.\n\n\"Sorry.\" I jerked my hand away as I woke up a bit. \"Uhhh.... Long night. Long hair...\" I gestured at Sam and he glanced at Ryan with a shit eating grin. \"Long hair winds me up.\" I said. \"Sorry Sam.\" Sam shrugged.\n\n\"Apologise to my husband.\" He said grimly. I glanced at Ryan and swallowed, but he shook his head.\n\n\"Eh. We've all been drunk and horny.\" He said. I sighed.\n\n\"Very very guilty on both counts.\" I sighed and flopped over the seat outside and sort of onto Ryan. \"Sorry.\" I mumbled to Sam. \"But he's not my type so don't worry.\" Sam laughed and looked at Ethan and Logan.\n\n\"We were sort of wrapping up our night anyway.\" He said. \"If you guys want to stay here we'll take Jude to get a kebab and get him home?\" Ethan and Logan gave each other a look.\n\n\"Oh... na...\" Ethan said. \"We... this is our fault. We can get him home.\"\n\n\"It's all cool.\" Ryan said. \"You guys should enjoy your night.\" Logan and Ethan debated that and I sighed.\n\n\"It's ok guys, you did your best.\" I consoled them. \"You kept me from having raw sex with at least two guys, that's like a silver medal. And Ry and Sam get gold if I get home.\" Ethan laughed.\n\n\"Well... if you're sure that's ok....\" He mumbled, but Logan was already dragging him back inside. Ryan sighed as he put his arm around me.\n\n\"It was the right thing to do.\" He said, squeezing my shoulder. \"Proud of you.\"\n\n\"Huh?\" I glanced at him. He sighed and pulled me up.\n\n\"Levi.\" He said. \"Sam, help me with this? He's heavier than he looks.\"\n\n\"He looks plenty heavy.\" Sam eyed me up with a frown, but he sighed and helped Ryan, wrapping his hand around my waist and helping me get down the street. I squeezed them tight.\n\nThey sat me down outside a hole in the wall pizza place and bought me a massive slice of pizza which I devoured in between cigarettes.\n\n\"Didn't know you smoked.\" Ryan wrinkled his nose. \"You never smell like cigarettes.\" I sighed.\n\n\"I'm mostly reformed.\" I said. \"When I'm drunk I'm... the worst.\" Sam laughed.\n\n\"Hmmm. I can think of worse drunks.\" He raised his eyebrow as Ryan and Ryan's face fell. Sam reached for him. \"Oh.\" He said quietly. \"I didn't mean that.\" I looked between the two of them. Ugh. So soft and lovely. Soooooo perfect for each other. Even if, by the sounds of it, Ryan was a mean drunk.\n\n\"Nate's ex was like that.\" I said, completely oblivious to social conduct. \"Asshole. I was gonna hunt him down and beat him up myself.\" Sam looked at me, confused.\n\n\"You following that at all?\" He asked Ryan. Ryan sighed.\n\n\"Nate.\" He said. \"Our new intern. Black eye.\"\n\n\"Oh.\" Sam said. \"Still not following....\"\n\n\"So pretty.\" I said. I was staring at Sam's hair again and I could see him and Ryan exchange a look.\n\n\"You might want to stop hitting on my husband, Jude.\" Ryan said, sort of lightheartedly. I frowned at him as I saw the glint of annoyance in his eye.\n\n\"Huh?\" I looked at Sam and laughed. \"Oh... no....\" I couldn't stop giggling. \"Just his hair.\" I gestured at Sam and shook my head with a grin. \"I'm thinking about Nate. He's nothing like you, Sammy, he's very... bubbly.\" I sighed. \"He likes dogs. Actually he likes all animals but he thinks dogs are the best, he'd give up men for them, but he doesn't need to because I like dogs too....\" Sam and Ryan looked at each other.\n\n\"Oh dear.\" Ryan said. \"Oh that's not good.\" I sighed and lit another cigarette.\n\n\"I think it's fine.\" I said quietly. I blinked and tried to sit up straight. \"He's... incredible, but usually I'm kind of an adult. I'm sure there are other pretty men who like dogs and have long hair I can fuck.... You've caught me on a very off night.\" I sighed. \"Sorry.\" Ryan sighed and put his arm around me.\n\n\"You're alright Judey.\" He said. \"It's been a week huh?\"\n\n-----\n\nSunday\n\n---\n\nNate\n\n----\n\n\"We start with my job right?\" I said to Russell as we walked up the path. \"She can't be mad at us if you and I are both about to be in real jobs.\" Russell laughed.\n\n\"Yeah, that will distract her for as long as she's not looking at us.\" He sighed. \"Christ. I hate it when Mum's mad.\" I swallowed and took his hand.\n\n\"I know.\" I said. \"She's the best mum in the whole world. Fucking rotten luck, both of our dad's being assholes, and then both of us being total fuck-ups.\"\n\n\"Speak for yourself!\" Russell laughed. \"I'm only a minor fuck up, I was doing pretty well until this week.\"\n\n\"Actually, true.\" I grinned. \"I get to be the golden child! This is gonna be awesome!\" Russell squeezed my hand.\n\n\"Enjoy it.\" He said. \"Won't last.\" I laughed and we paused on the doorstep. He swallowed. \"Here goes.\" He muttered, and reached for the door- but Mum was already there. She swung it open and her smile dropped as she looked at us.\n\n\"Oh Jesus, really?\" She folded her arms. \"Well, come in anyway. I can't eat all this by myself.\"\n\nWe trailed in behind her and she set us up in the living room as she fussed around the kitchen and brought us out chips and cheese to nibble on.\n\n\"Beer?\" She asked us.\n\n\"Thank you.\" Russell said.\n\n\"It's in the fridge.\" She directed and I went to get it, giving her a hug as I passed her.\n\n\"Missed you mama.\" I squeezed her and she held me back.\n\n\"Nate, you're getting tall?\" She said, \"Are you having a growth spurt?\" I laughed.\n\n\"Short as ever.\" I sighed. \"How come I didn't get ANY of your height?\" She and Russell were both tall. Mum apparently came from a long line of tall people. I guess my waste of a father managed to give me the only thing I really didn't want, which was his stupid short genes. He was Tongan! There was no excuse for it, honestly. Maybe short genes are dominant. Which is so unfair. I grabbed the beer and handed one to Russell and he looked at me. Yeah. like 5 more minutes of this and then we were in for the third degree. Mum hummed as she finished up in the kitchen and took her apron off, coming to sit with us.\n\n\"So who started it.\" She looked at both of us. \"Not that it really matters, you're both far too old to be fighting each other.\" Russell sighed.\n\n\"I started it.\" he said. My head jerked up.\n\n\"Liar!\" I winced as I looked at mum. \"A um... a guy I was seeing started it.\" I mumbled. \"And I guess Russ took it upon himself to finish it...\"\n\n\"Oh Nate.\" Her face fell as she looked at me. She stood up and wrapped me in her arms. \"Oh you poor baby.\"\n\n\"Mum!\" I protested, but I let my head fall to her shoulder.\n\n\"I hope he looks at least as bad as you do.\" She glared at Russell.\n\n\"Worse actually.\" He blinked.\n\n\"Well that's something.\" She sighed. \"Russell, you have to take better care of Nate! You KNOW he has bad taste in men!\" Russell choked on his beer.\n\n\"I told him not to see him! I can't control Nate, he's a grown ass man!\" I laughed and pulled away from Mum.\n\n\"Mummm! Russell doesn't have to take care of me! Anyway, you're one to talk about bad taste in men!\" Mum glared at me.\n\n\"Exactly why I worry.\" She said, sitting opposite me again. \"Of all the things to pass on to you I have no idea how you ended up with the stupid about boys gene. I thought I raised you better.\" Russell sighed.\n\n\"Don't be mad at Nate.\" He said. \"It's not his fault.\"\n\n\"I know.\" Mum said. \"And YOU Russ! Fighting is not a way to solve your little brother's problems!\" He sighed and put his head in his hands.\n\n\"I have learnt that lesson.\" He said quietly. \"Albeit the hard way.\" He swallowed and looked at me. \"I have a court date.\" He mumbled.\n\n\"A WHAT?!\" Mum stood up and looked like she was about to box Russell's ears, but she must have changed her mind when she saw his face. She sighed and sat down again.\n\n\"He pressed charges?\"\n\n\"Na, the police got involved though.\" He swallowed. \"I talked to a lawyer. First offence, mitigating circumstances... kind of... I'm pleading guilty. 100 hours community service, probably. So that's ok, I'll just hang with Nate at the shelter.\" I grunted. We hadn't discussed that. But fair's fair.\n\n\"You should think about working with Briony.\" Mum said. Russell looked up at her. He winced.\n\n\"Aw... mama.... I told you I don't like being involved in that kind of thing.\"\n\n\"Your brother always does.\" She folded her arms. \"I don't see why you're so hateful about it. Nate's always put up his hand for trans activism.\" Russell sighed. He looked at me and I shrugged. We'd had our own fights about that. Russell never wanted anything to do with pride, or trans or gay rights, or anything like that. I let him be because... well. He's stealth. Sure, I think it's his fight but I respected his right to disengage with the community. You don't owe anyone shit- straight, gay, trans, whatever.\n\n\"People will look at me different.\" He muttered.\n\n\"You don't have to come out.\" Mum said. \"There's nothing to come out about anyway, except to anyone you want to sleep with.\" Russell winced and I contained my snort of laughter. \"You had me and Nate.\" She said firmly. \"We were always there for you. And I got you counsellors, and tried to get you into community groups. You had all the support in the world and there are a thousand little boys out there with none of that. They need a big brother, Russell.\"\n\n\"So they can have Nate!\"\n\n\"But they need you.\" Mum said. \"Remember when you met Rich?\" Russell sighed.\n\n\"God, the fucking guilt tripping, mum.\" He groaned. \"Rich WANTED to help me. I don't want to help anyone.\" Mum raised her eyebrows and glared at Russell.\n\n\"Of all the damn things to come out of your mouth Russell Novak. You don't want to help anyone? Fine.\" She said coldly and stood up again to drift to the kitchen. Russell groaned and sat back on the couch.\n\n\"Ughhhhhh.\" He said to me. \"Fuck.\"\n\n\"You don't have to.\" I said. \"Mum doesn't really get it.\" Russell sighed and shook his head.\n\n\"She does.\" He said quietly. \"Actually, she really does. I really lucked out.\" He groaned. \"She's right. I am selfish.\"\n\n\"You're on your own journey.\" I said. \"You're not selfish. You're lucky. You pass. No one knows. I can see why you wouldn't want to fuck that up.\" He moaned.\n\n\"You're making me feel worse.\" He said. \"You know Ange?\" I shrugged. Vaguely. A friend of Russell's from high school who transitioned a couple of years back. \"She went through hell. All the guys stopped talking to her. None of them got it. They made fun of her. And the whole time I just... sat there. And nodded. I wish I'd reached out.\" I bit my lip.\n\n\"It's not too late.\" I said.\n\n\"She's happy. I don't want to dredge up bad things from the past for her.\"\n\n\"She might appreciate the chance to go off at you.\" I smiled. \"Anyway, Mum always guilt trips, you're right. Don't let it get to you. Do whatever you want to do.\" Russell shook his head.\n\n\"So...\" He called out to Mum. \"What exactly would working with Briony entail?\" Mum poked her head around the corner and smiled at Russell.\n\n\"Helping and distributing gender affirming clothes to people who can't afford it.\" She said. \"Not too bad is it?\"\n\n\"I guess.\" Russell said. \"So no group therapy?\"\n\n\"No.\" Mum said. \"But if you did meet someone who wanted to talk... that option might be there.\" Russell sighed.\n\n\"Fine.\" He said. \"Ok, put me in touch. I'll think about it.\"\n\n----\n\nWe sat around the table and Mum asked us about work. Russell had managed to save his job- he'd gone in for a meeting with HR and they were a little concerned at first, and a lot of it hung on what he ended up sentenced with, but they seemed to be understanding, and they wanted him, so it looked like he'd be ok. I sat there almost bursting at the seams as they talked about it, dying to show off to mum for the first time in my life that I, too, was finally doing something with my degree. Russell rolled his eyes as he looked at me bouncing in my seat.\n\n\"Nate has news.\" He said. Mum looked at me.\n\n\"Oh?\" She didn't sound very excited.\n\n\"I got a real job!\" I said. \"I'm working in an office! In MBIE! It's a really small team, really specific stuff about environmental impacts on indigenous communities. I'll just be doing the real boring stuff for a bit but they seem to think I can move forward at some point, you know I'll be, like, working on mitigating economic impacts on marginalised communities with environmental reforms...\" Russell rolled his eyes.\n\n\"So boring.\" He moaned.\n\n\"It's not!\"\n\n\"I'm so proud of you!\" Mum said, welling up a bit. \"I thought you were going to tell me you'd adopted a dog.\" I laughed.\n\n\"I don't have room for my own dog, I have all the others.\" I grinned. \"Isn't it great?!\"\n\n\"Oh baby, I'm so happy.\" She smiled as she looked at us. \"When did all that happen, Nate?\" Russell snorted.\n\n\"His boyfriend needed some help and Nate practically creamed himself offering it.\"\n\n\"Russell.\" Mum chided.\n\n\"Sorry.\" He mumbled.\n\n\"Your boyfriend?\" Mum frowned. \"Not...\" She looked at me and I sighed.\n\n\"NOT my boyfriend.\" I rolled my eyes at Russell. \"And not the guy who.... No, just a customer, Jude. He helped me out a lot, I mean, he got me the job for sure.\"\n\n\"And Nate's in love with him.\"\n\n\"AM NOT!\" I glared at him. \"Anyway, he's married... oh, engaged actually I guess... so shut up.\" Russell shrugged.\n\n\"Doesn't stop you from flirting with him literally every day.\" Mum sighed.\n\n\"Russell, stop teasing you brother. Nate, stop flirting with married men.\" I rolled my eyes.\n\n\"I'm not!\"\n\n\"You soooo are.\" Russell said. He looked at mum. \"The annoying thing is he's the only decent person Nate's ever been into. Life's shit like that huh?\" I sighed.\n\n\"Russell's seeing someone.\" I said to take the heat off me. \"They're probably getting married.\"\n\n\"Oh?\" Mum's steely gaze immediately turned to Russell, who blushed furiously. \"Why isn't she here?\" Russell sighed.\n\n\"Well she's not here because we knew you'd have something to say about turning up with black eyes.\" He said pointedly. \"Shona.\" He mumbled. \"I guess she could come round next time.\"\n\n\"Good.\" Mum said. \"We need someone to help with the lamb. You sure you don't want any, Nate? I spent a lot of time on that.\"\n\n\"Mummmm!\" I whined. \"I've been vegetarian for years now!\"\n\n\"Thought you were vegan.\" Russell teased.\n\n\"Uhhh... plant based but sometimes kind of bad at it.\" I mumbled, looking at the pile of potatoes on my plate drenched in butter. Russell laughed. Mum sighed and smiled at us.\n\n\"I forget how LOUD you two are.\" She said. \"Thank God we only have to do this once every couple of weeks.\" I laughed.\n\n\"We could go weekly.\" I said. Russell kicked me under the table and I grinned at him. He sighed.\n\n\"We could.\" He said. \"If you want, mum.\" Her eyes welled up again and I looked down at my plate. God, what a soppy family. I'm so lucky.\n\n----\n\nJude\n\n----\n\nI woke up in a house I didn't recognise and almost shat myself before I saw Ryan coming around the corner with a pot of coffee. He nodded at me.\n\n\"Morning.\" He said. \"You were very vague about where you live, so you're at ours.\"\n\n\"Fuck.\" I mumbled. \"Oh god, how bad was I?\" Ryan laughed.\n\n\"Not so bad.\" He said. \"Although you owe Sam an apology.\" I winced. I remembered getting pizza... and I remembered yarning on and on about Sam's hair... I remembered vomiting on a tree... and vaguely being in a taxi...\n\n\"Oh no.\" I said. I sat up. \"Did I hit on him? I wasn't thinking straight.\" Ryan shook his head and sat beside me.\n\n\"Nooo....\" He said with a yawn. \"You made it very clear you weren't hitting on Sam... but you did insist on...\" We glanced up as Sam himself entered the room. I looked at his head, which was done up in a thousand braids, piled on his head. He grinned at me.\n\n\"Morning Jude.\" He stretched out and went to sit beside Ryan. \"How's your head?\"\n\n\"Ok actually.\" I winced. \"Um... I... shit. I'm sorry for last night.\" Sam and Ryan grinned at each other.\n\n\"You're ok.\" Sam said. \"Look at your masterpiece!\" He gestured to his head and I winced.\n\n\"Did I do that?\" Sam laughed.\n\n\"Yep. We got you home, got you a nightcap and you decided that playing with my hair was the best idea in the world and we couldn't talk you out of it.\" I winced.\n\n\"Ok, that's kind of a new one.\" I felt myself laughing. \"Christ. That's very patient of you. Sorry Sam.\" He looked slyly at Ryan.\n\n\"Do we tell him?\" He asked. Ryan sighed.\n\n\"What, that he was calling you Nate all night?\" I blushed.\n\n\"Oh god.\" I moaned, putting my head in my arms. \"I wasn't?\" Sam shrugged.\n\n\"Yeah.\" He said. \"Well, Nate's a lucky guy. You're a talented hair stylist.\" I moaned and looked at Ryan. He raised his eyebrows at me.\n\n\"Crap.\" I said. \"Well. I guess secrets out that I have a bit of a thing for Nate.\"\n\n\"Secret was never IN that you have a thing for Nate.\" Ryan said with a sigh. \"But... Jude... just... as a friend... maybe rebounding from a pretty serious relationship with our intern isn't the smartest idea in the world.\" I looked at him and swallowed.\n\n\"I had no intentions of actually....\" I sighed. \"Yeah, you're totally right. I didn't realise I was so hung up on him actually.... Well, you've taken over his mentorship, maybe we keep it that way? I'll tell Adrian I don't have the time and you're willing to help out. We'll put some distance between us, and I'll call Thomas from last night and rebound properly, with an awful one night stand.\" Sam laughed.\n\n\"That's a really smart idea.\" Ryan smiled at me. \"Although I am sorry. Nate is really nice. I can see why you like him so much.\" I sighed and wrapped my hands around my knees.\n\n\"Eh, maybe it'll fade.\" I said. \"He was the first person I talked to on my first day, and I was so sad about Levi at the time. I think he was easy to become infatuated with. Everything Levi wasn't. Open, and naive, and sweet and young...\" I laughed. \"And you know. Long hair.\" Sam laughed as Ryan put his arm possessively around him.\n\n\"Well you made that kink pretty clear.\" He teased. \"You need to come to some gigs with us.\" He grinned. \"We're into metal- not a hell of a lot of gay men there, but the ones who are all have long hair.\" I smiled at them.\n\n\"Thanks for last night.\" I said. Ryan sighed and stood up to pour us each some coffee.\n\n\"It's what friends are for.\" He squeezed my shoulder. \"But you only have three months of falling apart and then I'm afraid we'll have to stop being kind and understanding and start staging interventions.\" I laughed.\n\n\"Actually, it's out of my system.\" I said. \"Definitely ready to be level headed again. But... you know. Still. Thanks.\" I swallowed as we talked about work, and what my plans were for the next week, and they slowly helped me plot out a schedule that didn't leave a lot of time for drinking and wallowing, which was kind of them. They were so nice. I'd never really had work friends before. It was a different vibe from my old friends from Uni. These two met me at a different stage- I could tell they didn't really feel like they needed to watch out for me the way my other mates did. I could tell they liked my work anecdotes, and our conversations were fewer arguments about pop culture and more politics. It wasn't better... It was just different. It was nice to have the balance.\n\nEventually Ryan started going on at Sam to hit the gym together and I winced.",
        "\"Ugh, you are not working out on a SUNDAY? When we were up till god knows what hour?\" Sam sighed.\n\n\"See, Jude gets it.\" He moaned. Ryan shrugged.\n\n\"Ok Sammy.\" He said. \"You lie in bed all day. But that deadlift goal is for Wednesday, and I know you really wanted to meet it.\" He grinned slyly at Sam who sighed.\n\n\"I can skip training for a day and make it.'' I could hear the doubt in his voice.\n\n\"Yep.\" Ryan said, kissing his forehead. \"Totally.\" Ryan went to shower and Sam sighed as he tidied away the coffee. He looked conspiratorially at me as he sat down again.\n\n\"I'm not making it either way.\" He said with a sigh. \"I think he knew I wouldn't. Jerk.\" I laughed.\n\n\"What's the deal if you don't?\" Sam blinked at me and turned bright red. \"Oh I see.\" I coughed. \"Ignore that.\" I laughed. I wondered to myself exactly how their whole dynamic worked. Sam totally 100% seemed to be in charge but every now and then Ryan clearly held the whip. Sam caught me looking at him thoughtfully and rolled his eyes.\n\n\"Ryan talks too much.\" He said amicably. \"My advice is don't ask, don't tell.\" He stretched out. \"But it's definitely more fun when neither of you really have the upper hand. Imma shower, and then we really will head. You can stay if you want?\"\n\n\"I'll head back to the hotel.\" I sighed.\n\n\"Oh, you actually are in a hotel?\" Sam frowned. \"We thought you were being funny.\"\n\n\"Yeah, Lee's mum helped with the apartment so it's his really. He's buying out my share in instalments.\" I sighed. \"Looking for a place, but you know, mildly homeless in the meantime.\" Sam bit his lip.\n\n\"Ryan will kill me if I don't offer here for a few nights.\" He said slowly. \"We do have a spare room, but we couldn't drag you there last night so you were sort of stuck on the couch...\"\n\n\"Thanks Sam.\" I smiled. \"But umm... I'm good.\" I smiled at him and he smiled back. Yeah. Neither of us really wanted to live with each other. Especially when, whatever happened in their bedroom, I had no doubt it was loud.\n\n-----\n\nNate\n\n----\n\nI was walking the dogs in the dark when I got home from Mum's because Alex was away for a couple of weeks and I didn't get a chance earlier, when my heart stopped.\n\nThere, just down the path, was Darius. His face fell as he saw me. I slowly walked towards him and he winced as he looked at me. He did look bad, Russell really had done a number on him. I felt my stomach churn a bit, but even though he kind of scared the shit out of me.... my fucking dumb heart was fluttering. Come on! Why did I still like him? I guess you don't just get to switch that off. He swallowed as I approached him.\n\n\"Nate.\" He greeted me with an awkward nod.\n\n\"Hey.\" I said, pretty cheerfully all things considered. \"How are you, D? Oh, dumb question. Forget I asked that.\" He snorted.\n\n\"I always like that about you.\" He smiled. \"No matter how bad things get, you're like a little ray of sunshine.\" I was glad it was dark enough he couldn't see me blush.\n\n\"Eh.\" I said, and sat down on a park bench. \"I think it's stupidity, not optimism.\" D sighed and cautiously sat next to me, leaving room for Jesus between us. He offered me a cigarette and I took it without thinking before laughing and handing it back.\n\n\"I quit like a year ago.\" He frowned.\n\n\"Did you?\" I laughed.\n\n\"You didn't notice?!\" He winced.\n\n\"Man, I can be a bit self absorbed.\" He muttered. I bit my lip.\n\n\"You made me vegan lasagna.\" I said. \"I guess you notice the important stuff.\" He sighed.\n\n\"Nate... I...\" He sighed and I reached for him in spite of myself. I squeezed his hand and after a second or so he squeezed back.\n\n\"It's ok.\" I said. \"I think we both knew we were on limited time here.\"\n\n\"I shouldn't have kept going for you.\" He said with a sigh. \"I'm real sorry Nate. I am. I just felt you slipping away and I... I didn't know how to get you to stay... but I should have known better. I really thought, for you, I'd just... be better.\" I smiled at him.\n\n\"Me too.\" I said. \"You are completely and utterly a dickhead, and it was fucking dumb of me to think I'd be different.\" Darius sighed and I put my arm over his shoulder. \"And uh... you have a drinking problem.\" I said quietly. He winced. He looked at my face.\n\n\"Yeah.\" He mumbled. \"I... I'm off it for a bit.\" We sat in silence. The wind was getting smoke in my face and I breathed it in. God I could go for a cigarette. Darius sighed. \"I guess we can't ever go back to how it was.\" He said quietly.\n\n\"Na.\" I agreed. \"That was barely working before, it definitely won't work now.\" He sighed and pulled away from me.\n\n\"I'm in counselling.\" He said. \"And uh... you know. AA. And I can't even... begin to properly apologise. I'll never forgive myself. I know I fucked up. I'm so sorry for hurting you Nate.\" He said. He looked at me and brushed a strand of hair off my face. \"You deserve so much better. I'm sorry. You trusted me and I let you down.\" He started to stand and I stopped him.\n\n\"Thank you.\" I held his hand tight. \"I forgive you, D.\" I stood up and looked at him. I got onto my tiptoes and brushed my lips against his cheek. \"Maybe if we're both single when we're 30....\" I suggested. \"Assuming you don't drink by then....\" He grinned.\n\n\"Absolutely.\" He said. He looked at me and smiled sadly. \"It's not fair of me to tell you this now.\" He said. \"But I really do love you.\" I sighed.\n\n\"I know.\" I said. \"You know if you weren't such a jerk we could have had a really nice time.\" D laughed.\n\n\"I'll miss your ass, Nate.\" I sighed.\n\n\"Definitely skipping the break up sex then?\" He laughed.\n\n\"If your brother catches me anywhere near you, probably ever again, I am like completely and utterly dead, Nate.\"\n\n\"Probably true.\" I smiled. \"Oh well. You have the honour of knocking Finley off his perch as the worst guy I've ever dated. That's something.\" Darius snorted and we walked away, in opposite directions.\n\n----\n\nMonday\n\n----\n\nNate\n\n----\n\nLast week! I was so close to being a real person! So close I was completely losing the plot at work. I made the wrong order like 5 times and some asshole told me this was why I was stuck in a coffee shop. I sighed and looked at him.\n\n\"Well, lucky for you I'll be out of your hair in a week.\" I grinned. \"Unless you work on the 5th floor and then I'm afraid I'll be more in your hair than ever.\" His eyes bugged out.\n\n\"What are you talking about?\" He said. \"This is a litany...\"\n\n\"Big word.\" I widened my eyes. \"Sorry, you lost me.\"\n\n\"Nate...\" Russell pulled me away and began the grovelling apology that he'd be stuck doing for the next couple of months in my absence. He whirled on me and folded his arms.\n\n\"If you are going to be an ass for the next week, could you at least help with the cleaning? You don't have to talk to people that way.\" I sighed and launched myself up on the counter to get around to cleaning the glass shelves that I'd been putting off for like 3 months and swore I'd get done before I left. I let Russell and Frank look after the people, which was probably a good idea if I kept running my mouth off, and got through a not unimpressive amount of polishing. And then I slipped.\n\n\"Shit.\" I whispered as I lost my footing on the counter and reached for anything to stop me from falling backwards. But my hands grasped nothing and I closed my eyes and pictured my skull breaking on the concrete floor. I braced for impact, trying to keep my head tucked into my chin...and something broke my fall. I blinked and realised I was cradled in someone's arms. Someone incredibly strong to catch me like that. My chest thumped wildly.\n\n\"Fuck, Nate.\" He whispered. I blinked and Jude was looking down at me. \"Shit, you ok?\"\n\n\"Uh.\" I quickly righted myself, jumping out of his arms and finding my feet.\n\n\"Any pain?\" He insisted, somehow still holding me.\n\n\"Uhhhh... yes. Painfully embarrassed.\" I pulled myself out of his arms. \"Thanks. I guess I uh... owe you my life. Or at least my back.\" I laughed half heartedly. Jude bit his lip.\n\n\"Fuck, Nate.\" He said again. \"You could have...\"\n\n\"Yeah, yeah. I'm an idiot.\" Jude sat down, staring at me. He was breathing heavily. \"You ok?\" I asked. He winced.\n\n\"Sorry... just...\" He shook his head. \"Quad americano please.\"I grinned.\n\n\"I'll bring it over.\"\n\nRussell had the same look in his eye.\n\n\"Fuck Nate.\" He said. \"I thought you were done for.\" I shook my head.\n\n\"I know, I'm still shaking.\"\n\n\"Fucking Gigolo Joe just sprinted across the whole restaurant.\" He said. \"Don't you dare charge him for that coffee.\" I laughed.\n\n\"You know I never charge Jude for coffee unless I absolutely have to.\" Russell sighed.\n\n\"He looks shaken up.\" He said. \"You too, actually. You wanna take 5?\"\n\n\"I'll just get Jude his coffee.\"\n\n\"Just go sit with him.\" Russell said. \"I'll bring them both over.\" I wandered back over- my legs really were shaking, and threw myself beside Jude. He glanced at me.\n\n\"You'll be safer in an office.\" He said. I grinned.\n\n\"I dunno- you've seen me trip myself up on my headphones more than once. And god forbid I knock a computer over. Shit, maybe I should stay here. At least here I can only really damage myself.\" Jude frowned at me. And really slowly he reached out and squeezed my knee.\n\n\"I'm going to win lotto.\" He said seriously. \"And buy you a bubble to live in. You'll give me a heart attack injuring yourself the way you do.\" I laughed and he started to grin. And I found my hand on his, for no good reason.\n\n\"Thanks.\" I squeezed his fingers. \"For... everything.\" He smiled at me. His eyes lingered a little too long on mine, and I noticed we were still holding hands. And then I noticed something else.\n\nHis ring was gone.\n\n-TBC-"
    ],
    "authorname": "DrHenderson",
    "tags": [
        "gay romance",
        "office romance",
        "drama",
        "heartbreak",
        "love",
        "relationships",
        "slow burn"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rebound-pt-03"
}