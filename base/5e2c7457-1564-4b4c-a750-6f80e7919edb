{
    "title": "How to Charm Panties off",
    "pages": [
        "How a White Haired Gent Charms the Panties off the Schoolmarm\n\nWho knew she was so rowdy?\n\nFirst off, let me reassure you that being a schoolteacher has a bad reputation. Women who teach school are not the prudes that most perceive them to be. We simply have to behave like that because our profession demands it. However, there are times in our lives when we relax enough to allow our true selves expression. I would like to tell you how to charm the panties off any woman who appears to be cold and distant.\n\nTo begin the seduction, one need only apply some intelligence to the situation. Women love to have their intellect engaged. It shows that you have a brain between your ears, and that you think (if only occasionally) about something other than sex. The gentleman of whom I am thinking as I write this manual took a book to a crowded pub on a Friday evening as he went to eat his solitary dinner. A book can signify many things when you are eating alone. It can signify that you are single and not interested in watching others flirt during dinner. It can signify that you are temporarily alone due to business travel (your own or a partner's), or it can provide a topic for conversation with another person who is similarly eating alone.\n\nThis lovely man was not pushy or overly forward. He responded to conversational gambits by the bartender and myself, but bided his time and sipped his beverage. We ate dinner together \u2013 two strangers sitting at the bar, because sitting alone at a table on a Friday night is very depressing. We discussed our geographic locale, our occupations, and our children in a desultory fashion. Dinner was there to be enjoyed, and having a conversation with someone else was a pleasure. He engaged my intellect in our discussion of current events, sports and the book he had brought with him to stave off loneliness.\n\nThe materials needed for seduction of the schoolmarm are basic. A book, a brain, the crowded pub in a location that has a lot of traffic, and the ability to put them together for your own benefit. Craig used all of his materials well. He also had a killer smile and sparkling blue eyes indicating a devil-may-care attitude. I do not understand why that is so exciting for women, but I confess to falling for it often throughout my life.\n\nFirst, Craig never mentioned his raging erection or his need for sex. Guys, it is assumed that you need sex. We do understand that. We simply do not want to hear about it unless we know you intimately. The realization that sex does not have to be verbalized is important to the charm factor. The goal here is to charm the panties off the school marm.\n\nSecondly, Craig was polite and used his table manners while dining alone. Gasp! There are people who appreciate good table manners. Women expect that men will use their manners in public settings. If you are not polite in public, you will express yourself with greater disregard for polite conventions in private. Therefore, manners are an essential tool to charming a school marm.\n\nThird, Craig was interested in the current events portrayed on the television at the bar, but not to the exclusion of conversation with an attractive woman who happened into the bar to dine alone on that fateful Friday evening. He understood references to the current darling of the NBA, one LeBron James, who I had had the pleasure of watching as a young man in our hometown. Yes, there are women who appreciate a well-played game of basketball (or football or baseball), who might not wish to discuss it ad infinitum, but who are at least conversant with the basic points. Craig understood that I appreciated basketball, but that it was not a driving force in my life. Talk about it, but be prepared to vary the topic of conversation to something else. Current events can become too heated in these days of controversy about the war in the Middle East or any of the Bush policies or procedures. There's always someone who dislikes what is going on \u2013 and the goal is to get the school marm out of her panties, not up on her soapbox!\n\nFourth, Craig was responsible. He did not drink to excess, nor encourage me to do so. While getting a woman inebriated may be a good ploy for seducing the college girl down the corridor, it is frowned upon by women of mature years. We all have to drive home afterwards. Drinking is not responsible if one has a distance to drive before reaching home. Craig was also responsible financially. He did not grab for my tab or assume that conversation meant he was to be responsible for my meal. A quiet offer and refusal, and he was content. \n\nNext, Craig was respectful. He did not dominate the conversation, or intimate that conversation was a precursor to satisfying his erection. Please see the first step above for a reminder that it is not necessary to talk about your erections. It is lovely to know that you are responding to our femininity, but please keep the details to yourself. This is not the time or place for measurements (we really do not care) or circumcision status. Your goal here is to charm, and flirt and be nice. \n\nAs we left the pub, Craig asked if he might hug me goodbye. A hug, I can hear you thinking? Adult women are starved for simple affection. Rarely are we offered a conversation or a hug or having our hand held in a movie. The proffered hug was very nice, and exhibited that erection that men love to discuss and women wish to discover for themselves. It was quite titillating. I found that my panties were suddenly damp.\n\nAt long last, Craig bent his head and brushed gossamer kisses across my lips, my face and my neck. Nirvana. I was so glad that he did not attempt a tonsillectomy with his tongue, that I found myself responding to a far greater extent than I would normally have done. We walked into the darkened car park hand in hand, occasionally stopping to exchange another lovely soft kiss. \n\nWhen we arrived at my car, Craig unlocked the door for me and checked to make sure there was no one hiding inside. Many large cities these days have stalkers waiting in car parks, and I was glad to see that Craig was extending his courtesy to ensuring my safety. However, it seemed that Craig had something more in mind than my safety. He continued to kiss me until my knees weakened. At that point, Craig opened the rear door and slid me inside, following after. He never stopped kissing me. His hands were gently smoothing my back and my hair, and running up and down my arms, but not causing alarm by groping my breasts or my bottom far too early for my comfort.\n\nAs we continued to kiss in the rear seat of my car, I realized that Craig was pulling me closer to him. In fact, he asked me to sit on his lap to prevent him from twisting and injuring his back. I thought that was a reasonable request, and moved to sit on his lap. His kisses became deeper, stronger, more passionate. My hands were twined into his thick white hair, and his were stroking my arms and back. The kissing had gone on for probably 30 minutes by this point, and I was feeling very warm. I slid my blazer off, and dropped it on the front seat. Craig responded by sliding his hands up my ribcage and palming my breasts, while continuing to kiss me.\n\nHow lovely to have someone else's hands caressing me I thought, just before my brain ceased to function. Craig's hands were gentle, kind, and used very little pressure. He did not grab and twist nipples to inflame a barely ignited passion. He understood that blowing gently on a flame would make it burn hotter and brighter. His hands roamed my upper body while his lips continued their dance around my face and neck. I squirmed on his lap, encountering that raging erection that Craig had still not mentioned. I moaned, just as Craig decided to dispense with my bra. Off it came, and was dropped on top of my blazer in the front seat. I was topless in the car park, sitting on the lap of a man I had encountered several hours earlier as a stranger in the pub. \n\nCraig's hands began a slow exploration of my legs. I tend to take very good care of my legs and wear skirts when leaving the house. Today was no exception to that rule. I was wearing stockings and hold-ups under my skirt, and Craig rapidly discovered this for himself. He traced the welts of my stockings with one finger while continuing to stroke my upper body with his other hand and kiss my face.\n\nWhen Craig reached the tops of my thighs, I moaned again, and my legs fell open for his journey of discovery. He found that my panties were absolutely soaked, and gently removed them, tucking them into his blazer pocket. His fingers (nicely manicured and smooth) gently spread my lower lips, and touched ever so softly my wet and glistening petals. Craig's hands were patient, and his kisses, while passionate had still not left my face and neck. He gently stroked and smoothed my skin while kissing me so that my brain would not awaken. Oh how lovely to have a man touching my nether lips, and how well he did so. His touch was so gentle and exploratory. He discovered where I liked to be touched, and with what degree of pressure. I was very aroused. \n\nFinally, Craig asked if I would mind if he tasted my juices, which were flowing steadily. I was hesitant. I did not know this man, and he wanted to taste my very liquid center. The hesitation lasted but a moment, when he lay me back on the seat and knelt beside me. He looked at my nearly naked body (I was still wearing the stockings and hold ups) in quiet enjoyment. His hands never stopped stroking my body, searching for areas that would make me purr with pleasure. He bent to my center, and began to lick ever so gently at my lower lips. His kisses resembled those he had earlier showered on my face and neck. Soft and gossamer, his lips and tongue encountered my well-trimmed pubic area. His hands continued to stroke any area of my skin that he could reach, further inciting my passion. I wanted to orgasm hard for this man who offered so much of himself without asking anything in return. He began to probe my vagina with his tongue, kissing me steadily with the passionate kisses earlier experienced by my mouth. My passion was burning white hot, and I was ascending to the pinnacle of my desire. \n\nMy bottom was cradled in the hands of this man who was giving me such pleasure. His hands slid lower, and fingers probed tiny holes, groping for access. Would I allow his fingers access to my pussy? Would I even let him finger my bottom? I cared not at this point, as his tongue gently kissed my clitoris, bringing me ever closer to orgasm. I sat on the edge of the seat, with my knees over Craig's shoulders as his hands plundered the holes in my bottom and his tongue urged my clitoris to orgasm. My hands were stroking my breasts in that slow, gentle fashion women find so erotic. I was on the verge of orgasm when Craig suddenly leaned forward and kissed my lips allowing me to taste my own sexual flavor. I sucked his tongue into my mouth, and his fingers into my bottom orifices and squeezed as the orgasm raged through my body with the energy of a freight train. As I exploded into orgasm, Craig gasped. He had come along with me with no stimulation other than experiencing my orgasm. \n\nHe kissed me gently, straightened his disheveled clothing, and slipped out of my car. I dressed myself for the long drive home, and only then discovered that Craig retained my tiny silk panties. This then is the manner in which to charm the panties off the school marm. I hope that if you follow my instructions, you will enjoy many sexy assignations with women who will enjoy your charm, only to lose their panties. "
    ],
    "authorname": "leggydragonlady",
    "tags": [
        "panties",
        "mature",
        "school teacher",
        "how to"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-charm-panties-off"
}