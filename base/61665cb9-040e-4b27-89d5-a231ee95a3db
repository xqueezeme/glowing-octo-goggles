{
    "title": "Pink Pills of Persuasion Ch. 05",
    "pages": [
        "\"Fox Loose in the Hen House\" \n\nApril's palms were firmly pressed against the mattress of the bed with her bubble butt swaying back and forth out at me in all of its glory. I took a few seconds to admire this natural wonder of the world until the aching desire in my groin just became too much. I firmly placed each of my hands on her hips and simultaneously pulled her towards me while I moved my now throbbing dick towards its destination. As I felt myself about to enter the promise land, I gently rocked April back on to me while giving her a slight thrust at the same time. The reaction was immediate as I felt an electrifying sensation jolt through my body while April simultaneously unleashed a loud shallow breath. Not to take chances, I eased my groin into her wonderous backside with a slow but methodical rhythm. \n\nI immediately felt my dick wanting to explode and stopped mid-stride. With my hard-on still nice and snug in April's wet and hot pussy, I carefully rested my upper body on the flawless light brown skin of her back. Once I had confirmation that there was no pain or discomfort from this position, I reached around to grab her perky tits making sure to pinch and rub the large protruding eraser nubs of her nipples. This foreplay provided enough of a distraction to April to allow me time to recover from premature lift-off. Once I was satisfied that my dick was no longer trigger happy, I straightened myself up and resumed pumping my dick deep into April's pussy. \n\nIt had been almost a week since we had our sexual escapade in the locker-room shower at work. Unfortunately, we had to wait until the bruise on April's back fully healed before we could get down and dirty. Not that I'm complaining though since we haven't exactly been celibate for the last few days. In a way, I felt that we were both like Oprah and instead of giving each other cars, we were giving each other oral pleasure spontaneously throughout the week. You get a blowjob! You get cunnilingus! Surprise, you just won another blowjob! Did you say you want your pussy eaten again? Sure, no problem, coming right up. It actually became a lot of fun trying to find inventive ways to get each other off without potentially hurting her back. \n\nI looked over at April's bedside clock and the glowing red digits read 5:30 pm. Damn, I got to get her to the airport before her flight takes off at 7:45. \n\n\"Did you already check in?\"\n\n\"Yes Johnny, all set, but let's focus on the task at hand please! We got to keep our priorities straight!\"\n\nAye, aye Captain! With those marching orders, I grabbed April's wrists and pulled them back for leverage while trying to of course be careful not to hurt her. Once settled in this new position, I increased the velocity of driving my groin into April's extremely wet pussy. After not being able to do this for a week, April certainly didn't just sit there like a wet noodle and began ramming her bubble butt right back into me. This glorious coordinated movement resulted in a loud melodic clapping sound and louder moaning from April. Wanting to enjoy this moment that took a week in the making, I closed my eyes and took in all of the pleasurable sensations of finally enjoying each other completely. \n\nI only had my eyes closed for a hot minute as my cock started to pulsate indicating that I wouldn't be able to last too long in this position. Thankfully, April reached her orgasm before I did and I just had to hold on like a bronco buster until she was done. April's orgasm was a week in the making and she didn't hold back. Her whole body started to vibrate as the orgasm seemed to erupt from deep in her pussy slowly rippling out through the rest of her body. It was so intense that she could no longer support herself with her hands. I grabbed her tighter from the waist to hold up her legs and backside as her arms and faced collapsed on the bed until her last shudder of ecstasy. \n\nAs April finished and I gave her a moment to recover, I tried to quickly flip her around so that I could unleash my own orgasm into her waiting mouth. However, I wasn't able to completely hold off until April was in place and the first streams of cum clumsily hit her cheek and nose before she was able to secure her mouth in place on my erupting penis to take the rest in. I closed my eyes again in ecstasy and relief as April licked the rest of the cum off of my dick. \n\nAfter I was done, I opened my eyes and looked at the mess that I made on April's face. Our eyes met and she started to laugh.\n\n\"It's okay Johnny, it's been a long week and it was still worth the wait.\"\n\nI sat down on April's bed to catch my breath while April quickly cleaned herself off, got dressed and finished her packing. As I watched this energetic little pixie do her thing, I reflected on the past week. \n\nLast Friday, a client of the company that I worked for slipped me some pink pills to help cure my massive hangover. It not only got rid of my headache but also granted me the powers of persuasion over females for a limited time. In my first day alone, I was able to live out several sexual fantasies including a raise in more ways than one with my boss and capped the night with my first threesome ever!\n\nUnfortunately, one of those hook-ups, April, suffered a traumatic altercation with her now ex-boyfriend that same day and has pretty much been under my watch since then. We spent the weekend together which included my second threesome in two nights with her and a MILF named Laney. Unfortunately, Laney had to go be an adult on Sunday leaving April and I alone for the day. We spent it mostly cuddling and watching Netflix. I didn't mind watching romantic comedies all day as long as I could occasionally massage her bubble butt as if I was rubbing a Genie's lamp every half hour or so. \n\nAfter filling her in on Laney and I catching J.R. snooping around at her place on Saturday, April decided that she wanted to work from home on Monday. And when I say work from home, she meant my place. With the beauty of work laptops and virtual conferencing, I thought it was a great idea and I worked from home as well. With her spending the entire Monday braless in only a tight t-shirt and cotton white panties working from the couch in my living room, it was the best start of a workweek ever. We occasionally took breaks by going down on each other. \n\nWhile I was on a teleconference with my web camera directed to my upper body, April positioned herself underneath my home desk and started to give me a wet and wild blowjob. She was really sloppy as she was trying to see if I would lose my concentration while on this call. When she started to lick my balls while jerking off my saliva-lubed dick, I had to firmly grasp the edges of my desk with both hands to ensure that I wouldn't lose control of my body. Mercifully, the call ended early and I rewarded April for her mischievousness by unloading a full serving of cum into her mouth.\n\nFor the remainder of the week, we went into work in separate cars in order to keep our newfound booty call as discreet as possible with our co-workers. On the home-front, Brett had no problem with April extending her stay until Thursday especially when he found out that she could cook. Brett and I were both spoiled by our mothers and home-cooking was what we both truly missed since moving to the West Coast. \n\nI didn't press April about J.R. but I did know that he was consistently trying to contact her to make amends. On Wednesday, she did get flowers at work from him and he actually showed up on Thursday to apologize in person. I didn't see J.R. pleading his case but I did catch a glimpse of him leaving with a dejected look of not accomplishing his goal of winning her back. When we got home that evening, I held April in my arms as I could tell that this whole ordeal with closing the door on that toxic relationship was taking an emotional toll on her. \n\nAs my moment of reflection ended, I saw April standing in front of me with her bags packed and a sly smile on her face. \n\n\"Dreaming about my butt again? Come on, let's get a move on. It's Thursday night so traffic is going to be intense if I want to get to the airport in time.\" \n\nWhen April smiled, it was contagious and I couldn't help but smile back. I stood up and lifted this beautiful little Asian pixie off the floor in one fluid movement. She wrapped her legs and arms around me. I stared into her solid brown almond eyes and leaned in for a kiss. As we explored each other's mouths, it felt surreal as if we were lifted out of April's apartment and floating up in the air like Clark Kent and Lois Lane. \n\nReluctantly, I put April down, grabbed her bags and we were off to the airport shortly thereafter with me as her personal chauffeur. April was heading home for the weekend for some much-needed family time. As much as she was grateful for my help and hospitality, I knew she was looking forward to being pampered by her parents for a few days. I also needed the break as I was starting to catch feelings for her and didn't want to ruin our little arrangement especially since she was emotionally fragile and most likely not currently available for another relationship. I had a feeling that one weekend on my own experimenting with the power of these pills would definitely slow down these growing feelings. \n\nAs we were driving over to the airport, I noticed a large black truck with tinted windows start to tail us shortly after leaving April's neighborhood. At first, I figured that we were both going to the airport which is common. However, I noticed that the truck would stay exactly one car behind us in whatever lane that I chose to be in. After 15 minutes, I was almost certain that this wasn't a coincidence. I decided not to say anything to April as I didn't want to hamper her excitement of going home!\n\nAs we pulled into the drop-off area of the airport, I turned to April.\n\n\"Are you sure that you don't want me to escort you in?\"\n\n\"Jeez Johnny, I'm a big girl! Plus, if you do, I might change my mind in leaving!\"\n\nMaybe, just maybe, she was feeling the same way that I did. However, I didn't linger on this thought as I didn't want to inadvertently overthink this in case it was just harmless flirting!\n\nI smiled and jumped out of the car to grab her bags from the trunk. As I strode to the back of my car, the black truck slowly passed me. It had the passengers' window down and I glanced into the cab. My eyes were met with the intense glare of J.R. He didn't say or do anything else as his truck kept moving along the airport drop-off line, but his intent was clear. Even though I don't think he knew for certain the extent of April and I's relationship, I'm sure that he came to his own conclusions and in no doubt, these conclusions were infuriating him. After he was a few feet ahead, he hit the gas and moved quickly out of sight. This might be a bigger problem than I originally anticipated. I continued back to the trunk of the car and met April who thankfully was apparently oblivious to everything as I found her checking the flight status on her phone. \n\nAfter I unloaded her bags which was surprisingly only a backpack and small rolling suitcase, we both shared another smile. April quickly closed the gap between us and reached over my shoulders to pull me into an embrace. She then laid a kiss on me that was reminiscent of a classic over-the-top smooch found on the cover of a romance novel. \n\nShe finally unlocked her luscious lips from mine and whispered, \"I want to jump your bones right now but this will do until I get back.\"\n\nWith that she winked at me, turned towards the sliding doors of the airport and slowly made her way in. She made sure that her bubble butt which snugged perfectly in her skin-tight jeans was in my clear view as she walked away from me. Damn, what a sight! \n\n---------\n\nUnlike April, I had to work on Friday, but in a glass half full type of way, I only had a half day! My brother Mikey was coming in from the East Coast for St. Patrick's Day Weekend. I still had those two VIP tickets to Lucky's for tonight and I wanted to cash in on that drink offer from Amy, the waitress from last Friday night that I saved from David's creepy lingering. Speaking of David, I haven't heard from him since leaving him passed out in his hotel suite that night. Between his embarrassing lack of performance with Laney in the bedroom as well as hopefully the guilt of drugging me with the pink pills for his own selfishness, he had a lot to think about as he flew home that weekend. Since I took both bottles of HRS-101 from his suite, I'm sure that I'll eventually be hearing from him. \n\nI also hadn't heard much from Melissa and Chris this week as they were both out for business travel at a logistics conference being held in Memphis. Previous to my review last week with Melissa, I wouldn't have thought twice about this. Now that I know that these two are hooking up with Chris using Melissa to help himself while keeping me down, it was not cool that they were using company time and money to get a vacation out of this. Oh well, at least I won't have to deal with that douche bag for the week, but I would have to wait a week to find out if Melissa's recommendation for my raise was approved by Sr. Management. \n\nI was trying to get out of dodge before everybody came back from lunch. As I closed down my computer and gave the room one last look, I spotted Nicki by herself at the printer. Until this moment, I only saw Nicki occasionally during the week as she did a really good job of not giving me any opportunities for the two of us to talk. She didn't give me any dirty looks which was a relief but I could tell that she was embarrassed to be even near me. This makes sense as I not only got her topless in a conference room but also had her give me a hand-job. Of all the experiences since obtaining the pink pills of persuasion, I felt the most guilt about what happened with Nicki. Despite the fact that she was mostly a bitch to me and I enjoyed that fleeting moment of revenge last week, I couldn't shake that look of confusion and helplessness across her face. It was almost haunting me at this point. With the desk area currently deserted, this was the perfect opportunity for me to clear the air and hopefully fix things.\n\nI took out two pink pills from an empty breath-mint tin that I had in my pocket and swallowed them down with a swig of water. For the first time since my threesome with April and Laney last Saturday night, the pink tint of the drug took over my vision. Thankfully Nicki didn't initially see me coming as she was organizing the paperwork that was coming off the printer. She was wearing a low-cut black blouse which displayed ample cleavage from one of her signature push-up bras. She had on tight blue jeans (casual Friday!) and black pumps to complete her ensemble. From afar, I could already tell that her make-up was laid on thick as usual and she had her curly dark hair loose down past her shoulders. \n\nAs I got closer, I mentally instructed Nicki to remain calm and keep her voice low regardless of what was being discussed. When she finally noticed me, she gave me a disappointing look.\n\n\"So, you and April are hooking up?\"\n\nHoly Shit?!?... even though I had the pink pills of persuasion, I was caught off-guard by Nicki's first words to me. I looked around the office to double-check that there was still no one in earshot of us. To be safe, I instructed Nicki to walk to the back of the office to the gym area. Hopefully, the gym was empty for the 2nd week in a row. I followed Nicki's shuffling big ass to the gym while trying to figure out how Nicki knew about April and me. And an even worst thought crossed my mind...how many others might be in the know? \n\nAs we entered the empty gym, Nicki turned to me and waited as I went around to make sure that the coast was clear. As she crossed her arms, she inadvertently lifted the push-up bra from underneath which ended up looking like her chin was resting on two bountiful pillows of flesh. \n\n\"Look Johnny, I've been trying to avoid you all week which means paying more attention to you than I would like to. It didn't take a rocket scientist to notice the way that you two look at each other even when you're trying to be discrete about it. I figured a horny guy like you would be checking out a cutie like April on the sly, but I was surprised when April was doing the same thing.\" \n\n\"Okay Nicki, look, April just got of a really bad relationship and I'm just kind of helping her move on.\"\n\nNicki let out a low sarcastic chuckle. \"Well, I now know what you do in meetings to avoid work so I can only imagine what helping her to move on means.\" I couldn't help but look at the floor as I was guilty as charged. \n\nI finally lifted my head and scanned her face. At the moment, my mental instructions to have her remain calm were back-firing as I couldn't tell if she was angry, sarcastic, or both. \"Look Nicki, that meeting was certainly interesting, but I didn't plan any of it.\"\n\n\"About that, could you please explain to me what in the blue hell happened last week? One minute, we're going over issues and the next I'm topless with your...thing, in my hand.\" She continued to remain calm and talk in a low enough voice but I could see in her eyes the intensity starting to flare up. \n\n\"Look, at that moment, I was just as clueless as you.\" Our eyes met as I said this. It was the truth after all. During my encounter with Nicki in the conference room, I didn't yet know or understand what those pink pills were doing to me or her. \n\n\"You took advantage of me!?!\" I wasn't 100% sure, but I was thinking that Nicki was more sad than angry as she said this. \n\n\"Look Nicki, I didn't ask you to take off your top and I didn't ask you to stroke me. I did ask you to calm down and lock the door to keep both of us out of trouble.\" I figured a half-truth wouldn't hurt right about now. \n\n\"Did you mention it to anybody? I'm sure your dumbass friends enjoyed hearing the story of your slut co-worker letting you fondle her and jerk you off.\"\n\n\"No, Nicki, look, I kept what happened in that room between us. Plus, would anybody actually believe me?\"\n\n\"I don't know, I know that people around here think I'm a slut.\" She almost had tears in her eyes now. \n\nDamn, my heart dropped as I started to see Nicki in a different light. With a concerned look on my face, I closed the distance between us and placed my hands on her shoulders. She didn't pull away but she wouldn't look me in the eyes. \"I don't think you're a slut nor have I ever called you that. And who gives a shit what a bunch of awkward, bumbling scientists and engineers think anyway. Keep in mind, most of these guys get their rocks off on pixelated versions of Nintendo princesses!\"\n\nNicki finally lifted her eyes and cracked a smile. \"We do have some unique co-workers.\"\n\nShe was gradually letting her guard down without me persuading her. \"Nicki, I truly am sorry about last week!\" \n\n\"So, you didn't enjoy it?\" Nicki asked with a raised eyebrow. For the second time in this conversation, I was completely caught off-guard.\n\n\"Of course, it was the best and most productive meeting that we've ever had.\" It wasn't my most eloquent response but I think that it still did the trick. I looked at Nicki and she tilted her head and gave me a small smile but no verbal response. \"Nicki, did you kind of enjoy it too?\"\n\n\"I don't know, I'm embarrassed and angry that it happened but at the same time it got me excited by doing that at work. I didn't know that you had this side to you and wanted to see what else we could do. However, once I figured you and April out, I was pissed but honestly more disappointed.\"\n\nThis was an odd twist. \"Look Nicki, April and I aren't dating. Plus, it sounds to me like you're looking for just a little bit of stress relief!\" I was remembering Nicki's deft touch on my dick and I could feel it stiffen as it was suddenly waking up to the possibilities. I moved my hands from her shoulders to wrap around to her lower back as I closed the remaining distance between us until we were now embraced in a tight hug.",
        "Nicki buried her head into my chest as I could tell she was internally torn. For my own ego's sake, I didn't want to use the pills to influence her decision, so I just held her for a few minutes. When she didn't leave my embrace, I decided to make the first move. I shifted my upper body back while taking one of my hands and gently lifting her face by the chin towards mine. She still had her eyes closed but didn't resist. I leaned down and placed a kiss on her fully coated lips. Thankfully, she kissed me back and reached up with both arms to cup the back of my neck. Within minutes of lip-lock, I noticed that she was an aggressive kisser with an active tongue. Knowing that we were making out in the locker room of work during lunch potentially being caught must really turned Nicki on.\n\nSince it worked for April and I last week, I smiled at Nicki during one of our momentary breaks of air and gave her a head nod towards the locker room bathrooms. I followed Nicki into the bathroom, locked the door and wrapped my arms around her from behind. By now, there was no resistance at all as I felt Nicki lean back into my chest. She reached up and wrapped one of her arms around my shoulder and upper back as if we were in a daytime soap opera. I grabbed the bottom of her black blouse and pulled her shirt off over her head. I was greeted by a black lacey push-up bra. Just like last week, this bra didn't stay on too long freeing her perky breasts. I cupped her breasts from behind and felt her breathing get shallow as she started to grind her ass into my hardening dick. \n\nI reached for the front of her pants, but Nicki had other ideas as she did a quick spin and did a full hand grab of my dick through my jeans. She raised one of her eyebrows and gave me a devilish grin as once again she showed me her magical power of getting my pants down to my ankles faster than I thought humanly possible. She reached up and grabbed my boxer briefs and gave it a quick jerk down. My dick sprung to freedom nearly smacking Nicki in the jaw but her reflexes were impressive as she dodged my flying boner. As my dick was commencing its second bounce, Nicki grabbed it and placed a kiss on my mushroom head. She admired it for a second and then swallowed it whole. She then proceeded to give me a blowjob for the ages as she was alternating from placing my dick fully down her throat to licking the sides of my rock-hard member. My first thought during this pleasurable experience was that I was a fool for not mentally instructing her to give me a blowjob instead of a hand job last week. \n\nAfter five to ten minutes of watching her perform masterful oral sex, I leaned down and whispered. \"So, this public sex thing turns you on especially being only a few feet away from our co-workers?\" \n\nShe started her answer with a purr and then in a low voice, \"I'm so wet right now.\"\n\n\"Hmm...I want to taste.\" Nicki smiled and stood up. \n\nI quickly removed my shirt and kicked off my jeans, boxer briefs, and shoes. I turned around and Nicki was bent over naked placing her clothes on the small changing bench in the locker room. As I was admiring Nicki's ass and glimpse of her pussy from behind, I became slightly confused. I was expecting a larger ass based off all of my previous glimpses of Nicki's outfits at work. In fact, I was shocked by the firmer, smaller ass that she actually possessed.\n\nNicki noticed the confused look on my face and gave me a nervous smile.\n\n\"Okay, I have a slight confession to make. I wear butt pads.\"\n\nI looked at Nicki and then at her clothes that were on the bench. There on the bench were these two half-crescent pads each shaped like a butt cheek. This girl wears heavy make-up, push-up bras, and butt pads. \"Why?\"\n\n\"Well, I know that guys dig a full-figured woman with big tits and ass.\"\n\n\"Nicki, you got a fantastic perky body! Why would you do this?\"\n\n\"Well, I come from a family of curvy Latinas and I just don't possess that hour-glass figure.\"\n\n\"Twirl for me Nicki.\"\n\nNicki obliged and started to spin her naked body around for me. Along with her perky breasts and firm ass, she had a nice flat and toned stomach and a perfectly trimmed landing strip above her pussy. Her skin tone was slightly darker than mine with a nice olive-tone to it. I was flabbergasted on why she would want to cover this tight figure up with body enhancing clothing. \n\n\"Damn, you got a killer body. What's your secret?\"\n\n\"Kickboxing!\" A pure smile of pride and joy came across Nicki's face. Don't get me wrong, I dig big tits and big asses, but I couldn't believe Nicki's low self-confidence over this toned, perky body that would get most heterosexual males in heat. \n\nNicki leaned back on the set of lockers in the bathroom and put one foot on the bench. I needed a closer look at this perfect landing strip so I got down on my knees and lightly brushed my pointer finger through the well-groomed pubic hair. With my delicate touch, she purred again. Then with both of my hands, I gingerly opened up Nicki's moist pussy lips. I admired the beautiful sight in front of me and let my tongue explore all of the exposed areas of her lightly stretched pussy. She wasn't lying as her pussy was indeed very wet and pretty soon my lips and chin were glistening from her pussy juice. I could tell that she was enjoying every minute of this as she leaned heavily against the lockers. \n\nAfter a few minutes of vaginal exploration and listening to Nicki purr like a jungle cat, she whispered, \"I need you inside of me now.\"\n\nThat was certainly an offer I wasn't going to refuse. I stood up and backed off a few feet as Nicki twirled again, bending over, and grasping the bench from each side. Her ass was not of the caliber of April's bubble butt, but it was still a beautiful sight to behold. I leaned in, grabbed her from the sides and inserted my dick from behind. Her pussy was so wet and smooth that my dick just glided into place. She gasped and started to gyrate her ass causing immediate pleasure to both of us. This girl must be some dancer as her butt worked wonders bouncing and rotating around my hard-on that was fully encased by her pussy. \n\nAfter a few minutes of sexual La Bamba, she looked back at me and grunted \"grab my hair.\" Nicki was certainly entering full freak mode. I'm not usually into this type of sex, but I could tell it would put Nicki into sexual orbit, so I reached out to grab some of her curly hair. As I did Nicki arched her back and started to pump herself up and down on my dick. While holding her hair, I started to pound her pussy from behind like I was a bucking a bronco at a rodeo. Nicki was moaning and purring in sexual delight. \n\n\"Now smack my ass!\" Whoa baby, this girl was a freak and I obliged by giving her a love tap with my open palm.\n\n\"Harder please.\" This girl was something else. Laney would have a blast with her! Per her command, I abandoned the love tap with a hard slap to her ass!\n\n\"Mmm...that's more like it. Now do it again!\"\n\nWithin about five minutes of riding her from behind with some intense smacks to her ass, I could feel her body tense up as her orgasm was mounting. I slightly tightened my grip on her hair and increased the velocity in which my dick was entering and exiting her perfectly lubed up pussy. As she started to cross the threshold into her orgasm, I let go of her hair which resulted in her starting to bang her head like she was at a heavy metal concert. The sounds of her orgasm were a mixture of intense purring and moaning as I'll have to wait for another day to see if she's a screamer since I mentally instructed her to keep her voice low. \n\nAs her orgasm subsided, her upper body momentarily collapsed onto the bench and my still rock-hard dick slipped out of her pussy. I let her take a moment to recover as I admired Nicki's surprisingly toned body from behind. With her second wind quickly found, she leaped off the bench and twirled herself around again. She gulped down my rock-hard dick and started to aggressively bob on it. Since I was already close to orgasm while bucking her from behind, my dick just unleashed itself in Nicki's mouth shortly thereafter. Nicki's eyes went wide as my first shot of cum blasted against the back of her throat, but she quickly recovered and I was surprised by the amount of cum that she was swallowing. As I finished, Nicki stood up and hugged me. \n\nWhen she finally released the tight hug, our eyes met. I smirked as I saw that Nicki didn't fully swallow all of my cum as there was a little bit of my love juice dripping from the corner of her mouth. As I pointed to it, she chuckled as she quickly spooned it up with her pointer finger and inserted her finger into her mouth like a popsicle. \n\n\"Hmm... that was fun! Let me go rinse off in the shower.\" With that, Nicki disappeared into the same shower that April and I occupied last week. Left alone, my curiosity got the best of me as I wandered over to the bench and picked up one of Nicki's butt pads. I couldn't believe that she stuck these in her pants every day especially since it was clear to me that she had a kick-ass body. \n\nFinally, I looked at my watch. \"Shit\" I got to get to the airport to pick up Mikey. As I started to gather my clothes, I could hear some movement in the gym. Shit, this could go sideways if it there is somebody out there that wants to use this bathroom as I exit not knowing that it is still occupied by another individual. \n\nWell, Mikey can wait a few minutes and I'll just jump in the shower with Nicki at this point. Nicki was pleasantly surprised to see me emerge into the spacious shower with her. I was even more shocked to see Nicki without her make-up. Her natural olive skin tone was radiant under the spray of the shower water and she had natural light brown eyes with specks of green in them that stood out more now that the heavy eye shadow was washed away. Gone was her deep red lipstick and now replaced by a lighter pink hued lips. I smiled at the sight of this now naturally beautiful Latina. There was a natural beauty with Nicki but unlike April, Nicki hadn't yet learned to live in her own skin. We quietly washed each other's bodies with only the sound of the shower filling the air. \n\nWhen I was fully cleaned off, I leaned over and kissed Nicki on the lips. \"I got to go pick up my brother from the airport, but I enjoyed this and I hope you did as well. Just some food for thought, but you might want to consider ditching the push-up bra and butt pads because kick-boxing has been extremely kind to your body.\"\n\nShe smiled and again purred, \"thank you.\"\n\nAnd I couldn't help myself especially with her under the influence of the pills. \"Also, you have a beautiful natural tone to your skin and lips. I would recommend highlighting this instead of covering it.\"\n\n\"Well, look at you, Mr. Tenderheart! Who knew that there was a gentleman under that East Coast drinking swagger!?!\"\n\nDamn, I got a reputation. I smiled back at her and walked out of the shower. \"Have a great weekend Nicki!\"\n\n\"Hey Johnny, you think that I can score that same deal that you and April have?\"\n\n\"Excuse me?\"\n\n\"Well, that was fun and I could use some more \"stress relief\" if you know what I mean!\"\n\n\"Haha, sure Nicki, let's talk on Monday but for now, let's just continue to keep our little office fun to ourselves.\"\n\nWith that Nicki blew me a kiss and returned to the warm spray of the shower. \n\nBy the time, I left the locker room bathroom, the coast was clear. \n\n---------\n\nI pulled up to the pick-up zone of the airport. I could immediately see Mikey impatiently waiting for me. I placed the car in park, popped the trunk of my sedan and jumped out to greet my brother.\n\n\"What's up putz?\" I said utilizing one of our standard greetings that has lasted since childhood.\n\n\"Moron, did the California sun burn your brain until you can no longer tell time?\" Well, we're off to a great start. \n\n\"Sorry bro, I had one last meeting that went long and dirty!\" I smiled as my brother just shot me a look of disappointment. \n\n\"All work and no play make Johnny a dull boy!\" My smile got bigger as Mikey couldn't be any more wrong. \n\nAs I closed the trunk, I gave my brother a bear hug. After a slight reluctance, he returned the favor with his own rough embrace. \n\n\"Miss ya bro.\"\n\n\"Yeah, I guess I missed you too. Please tell me that you got good beer in the fridge!?!\"\n\nI laughed. \"That's about all I got in the fridge!\"\n\n---------\n\nAfter dumping his bags in my bedroom, Mikey and I grabbed a cooler of beer and spent the rest of the afternoon on some lawn chairs on my apartment balcony. Overall, Mikey is a good guy and just like any typical younger brother, he could be a royal pain in my ass. Without his signature goatee, we could have passed as twins despite the 3-year age difference. \n\nWith only a few months away from an English degree at a major university in Boston, he was suffering from some major senioritis. The fact that he had made it through a year of college yet alone on the verge of graduating was a miracle. He certainly never lacked intelligence but always had trouble focusing yet my mother refused to get him tested for ADHD. While he was floundering during his freshman year, he ended up hooking up with one of the teacher's assistants and she utilized sex as an incentive to get him serious about school. And damn, she must have been great in bed as Mikey flourished with dean's list honors from that point on. She graduated but Mikey found other classmates to help motivate him. Now with only a few months to go, he was ready to move on. \n\nNot really wanting to discuss the last week of my life as if he would believe me, I just sat there sipping my beer listening to what was going on in his life. Mikey's latest female conquest was Bessie, a pre-law student during the day and bartender at night. Mikey liked his ladies curvy and it sounded like Bessie fit right into his favorite body-type of big tits and round asses. As usual, Mikey was nonchalant in his relationship leading into some typical issues as Bessie wanted to get serious with him. Since they couldn't come to an agreement on where they were at in the relationship, they were on a break so this trip to California wasn't just about brotherly love. \n\nBeing my brother, Mikey knew my checkered history with the ladies especially some of my failures and missed opportunities. I wasn't a complete stooge but I've definitely squandered some apt chances due to either lack of confidence or awareness. I didn't think that he had much confidence in my lady skills, so I was excited to prove him wrong tonight with a little assistance of some pink pills. \n\n---------\n\nWe arrived downtown at 9 pm with VIP passes in hand. This wasn't my typical Friday night but I was looking to impress my younger brother. As we were escorted through the entrance of the hotel, we marveled at the boutique hotel's modern d\u00e9cor with sleek minimalist lounge chairs and couches. Of course, there was a special antique elevator that guided us from the confines of the hotel to the super posh rooftop bar that looked like it was out of an old-school MTV music video. There was a large bar to the left as you entered with at least two or three smaller island bars spread out over the floor. The dance floor was in one of the corners with a DJ already going through his set with strobe lights and a fog machine synching with the beats coming from the speakers. On the other side of the bar with a slightly elevated floor was the VIP section. It was roped off with its own private bar, lounge chairs and several fancy bonfire pits with blazes already going. With the theme being St. Patrick's Day weekend, the spotlights and back-lighting were all in green.\n\nThat wasn't the only thing in green as the ladies were in barely there green skirts and plunging green tops adorned with green beaded necklaces, shamrock shaped head boppers, and bedazzled derby hats. We continued to take in the sights as we made our way to the VIP section. As we entered, I saw the statuesque Amy by the bar, and the minute she saw me she smiled and waved me over.\n\nMikey being his cool self didn't flinch but made a side comment to me \"damn, did that brunette just wave at my brother?\"\n\nTrying to be cool, I simply replied \"welcome to California, little brother!\"\n\nWe both checked out Amy as we made our way to her. She had on a tight white long-sleeved top with a plunging neckline, a small green micro-skirt, and mid-thigh black boots with green laces. She had a Shamrock decal just under her left eye and a large flashing shamrock necklace that hung around her neck. And the finishing touch was that she sprinkled some green glitter on her chest making it impossible not to look at her cleavage. She gave me a big hug which I didn't mind and she gave Mikey a quick hug as I introduced him. \n\nAfter some brief chit-chat, another gentleman joined in on our conversation and he quickly put his arm around the lower back of Amy as he glared at us. \n\n\"Oh, guys, this is Dan, my boyfriend. Dan, this is Johnny and Mikey.\" My heart dropped at this revelation. Even though I was living out some unbelievable fantasies with several hot women over the past week, I was a tad bit jealous of Dan. It was just that I wanted to impress my brother with Amy and even though he most certainly was impressed by her beauty, he probably felt bad for me. Knowing Mikey, he probably thought that one of my goals for the night was hooking up with Amy and showing him that I have improved my skills with the ladies since moving to California. Which would make him absolutely correct! Instead, I fell for the ole' let's get together as friends and I'll buy you a drink act.\n\nMikey and I both offered our hands to Dan and he reluctantly shook it as he grunted some kind of greeting.\n\nAmy turned to me and said, \"hey Johnny, I owe you a drink. How about a fireball for old times' sake?\" She sarcastically smiled as she finished a sentence that she's uttered so many times before at me while working. \"Don't worry, I'll go get you a Guinness minus the shot.\"\n\nMikey joined Amy in grabbing us drinks leaving me and friendly Dan alone. Dan didn't waste time or words for that matter. \"Look you pissant, that's my girl. I know she's friendly at work, but that's just an act to get her tips. If you think you're getting lucky with Amy, you're on a one-way trip to your bed with your dick in one hand and your phone in the other watching internet porn just like every other Friday night of your miserable life. That broad is mine and trust me, she might just be okay in bed, but damn she looks great on my arm.\"\n\nWow, what a charmer! I couldn't believe my ears as I have found another piece of shit with a woman that he clearly doesn't deserve. Now, I'm disappointed and pissed! As much as I would love to introduce this douche bag to my fist, he simply wasn't worth it. I had the pink pills of persuasion on me and there was an entire rooftop of scantily clad women whose pots of gold were awaiting me. Sorry Amy that your boyfriend is a dud but this stud is now going with plan B!\n\nAfter a round of drinks in awkward company, I excused myself as I started to walk over to the bathroom. Dan once again chimed in with more words of wisdom, \"little boy must have a small bladder.\" \n\nI gave him a sarcastic thumbs up as I walked away and glanced over at Mikey. My brother might be a pain in my ass, but we're family and I could tell that he was contemplating hanging this loser over the edge of the rooftop by his feet. \n\nI went to the sink as I entered the bathroom. Thankfully, this bar didn't employ those annoying attendants who sit in the bathroom all night offering you breath-mints while squirting soap into your hands as you go to wash up. I quickly pulled out two pink pills, tossed them in my mouth and washed them down by hand-cupping the water out of the faucet. Not exactly the classiest way, but it did the trick. ",
        "As I re-emerged from the bathroom, my eyes were no longer seeing the once green-lit rooftop bar rather it was now covered by my new favorite color of pink. The possibilities of this bar covered in twenty-something hot women was overwhelming and I didn't know where to begin. I leaned against the wall trying to strategize on what to do next. I could stick it to that piece of shit Dan and sweep Amy out of here, but I didn't want a repeat of the April-JR situation. As I stood there, I picked up on a conversation being had just a few feet over from me. \n\n\"Dang girl, this is so much better than Alpha's St. Patrick's party on the Quad.\"\n\n\"Wait, don't you miss drinking Natty lights and jungle juice while taking in the smell of crusty old gym shorts and music from piss poor speakers?\"\n\nThe pair of coeds giggled. \n\nBingo, college girls!\n\nAs I approached the two coeds, I realized that both would score high on the Mikey like scale as both ladies looked stacked from the bottom to the top. \n\nThe shorter of the two had shoulder-length dirty blonde hair cropped closely to her round face. She had a cute smile that displayed a perfect set of radiant white teeth. She had on a tight green top that teased just enough cleavage to make you want more. She completed this look with a tight black mini-skirt and matching black boots. \n\nThe taller brunette had a green body dress that looked spray-painted on to her body. It was sleeveless and plunging so that her luscious breasts were perfectly on display but just long enough to barely cover her large ass. She had beautiful light olive skin with freckles and her hair was pulled in a stylized ponytail. \n\nAs I got closer, I smiled at both of them. Pleasantly surprised, they both returned my smile with warm smiles of their own. It was a nice confidence booster but I wasn't interested in picking them up the natural way as I was on a mission.\n\n\"Hi Ladies, how's your evening going?\" I mentally instructed them that their night was going to get infinitely better now that I was here. \n\n\"So far so good, how about yourself?\"\n\nI smiled as I motioned towards one of the waitresses carrying a tray of green Jell-O shots. \"It's Friday night, I'm always good on Friday nights!\"\n\nI grabbed three Jell-O shots off the tray, smiled at the waitress and mentally had her charge Dan in VIP's tab (hopefully he had one)! As I handed off the shots to the two young coeds, I slipped the waitress a 5!\n\nWe did a quick cheer by clinking the plastic tubes and down the shots.\n\n\"Ladies, I'm Johnny, pleasure to share the first shot of the night with you!\"\n\nThe spunky blonde immediately responded, \"I'm Meredith and this is Morgan!\"\n\n\"Great, can you wait here and get us four more shots as I go get my brother? Oh, and charge Dan in VIP, he's a swell guy! In fact, both of you get yourself something top shelf while you're at it. Dan's a really swell guy!\"\n\nThey both nodded and grinned at me at this open bar opportunity.\n\nI met Mikey at the entrance of the VIP section, and he was visibly annoyed, \"do you want me to drop this dickhead for you?\"\n\n\"It's okay bro, Amy is a sweetheart but Dan is certainly not the man! That's why I'm now executing plan B for the night!\"\n\nMy brother shot me a quizzical look. He obviously doubted me especially since my conquest of Amy never even got started!\n\n\"Well, do you want to follow me to the promised land or just stay and hang out with Dan?\" Mikey rolled his eyes at the thought and followed along.\n\nAs we got closer to the ladies, the waitress had 4 Jell-O shots, 2 bougie glasses of some green-tinted alcohol and two beers waiting on her tray. Morgan, the brunette, was the first to notice us approaching and gave us a big smile and wave!\n\n\"Damn bro, please let this be Plan B!\"\n\n\"Welcome to California, little brother, this time for real though!\" \n\nFor the next hour, we drank to our hearts content thanks to Dan! We even danced a little bit on the dance floor. We naturally paired off with the spunky Meredith grinding on me while Mikey trying his best to bust a move with Morgan without being obviously mesmerized by her cleavage. Plan B was off to a great start but it was about to blast off into orbit as Mikey grabbed my arm in mid-dance and pulled me off the dance floor. He had a goofy smile on his face as he started to excitedly yell at me, \"bro, they live in a sorority house. We need to go back there; this is a life-long fantasy of mine!\"\n\n\"Right, going home with a sorority girl was your top priority at 5!\"\n\nMikey punched me in the shoulder. \"You know what I mean dipshit!\"\n\n\"Alright, let's take the party back to the sorority house! I got some extra pink pills in my pocket just in case we spend the night!\"\n\n\"What pink pills?\"\n\n\"Music must be too loud for you little brother! I said fresh bills for an UBER ride home!\" Damn, I need to watch myself!\n\n---------\n\nOn the ride to the Sorority House, Mikey got stuck in the front passenger's side of the UBER car while I planted myself right in between Morgan and Meredith. Luckily, the driver was female and I mentally instructed her as well as Meredith not to pay attention to what I was about to do. Even though Meredith was my sexual goal of the evening, I slipped my hands in the plunging dress of Morgan and gently massaged the smooth flesh of her large breasts. Thankfully, Morgan was seated right behind Mikey on the passenger's side, so Mikey had no idea that I was getting first dibs on Morgan's luscious body. Even though it was warm in the car, Morgan was chilly in that little dress and her nipples were at attention. I gave them a gentle squeeze and felt her breath quietly go shallow. Out of respect for my brother, I didn't go further than this even though he probably wouldn't have blamed me for feeling up Morgan. \n\nAs much as I wanted to continue to keep Morgan's breasts warm, I was amazed by the sight that greeted us as we pulled into sorority row. There were mansions on both sides of the street with large Greek letters adorned over ridiculously ornate entrances, wide porches, balconies, and perfectly manicured yards. As we pulled up a brick-stone mansion with blue-shuttered windows, Meredith indicated that we were there. As we jumped out of the Uber, Morgan and Meredith turned to us quickly. \n\n\"It's after-hours and we didn't clear you guys in advance, so we'll have to sneak you both in via my bedroom window which is over there.\" Meredith was pointing at the right side of the house. She smirked at us briefly and then both ladies excitedly ran into the house.\n\nMikey turned to me in disbelief. \"Do you think that they're ditching us and calling campus security telling them that two sleaze-balls are spying on their house?\"\n\nI smiled at Mikey. \"We're in like Flynn, little brother! Give it 5 minutes!\"\n\nTurns out, that Meredith and Morgan were both horny and fast as lights turned on in one of the rooms in less than 5 minutes. Meredith waved us over and we ran over to the window like kids running downstairs on Christmas morning. As we both jumped into the open window on the first floor, I thought to myself that I would never be back on a college campus yet alone sneaking into the bedroom window of a sorority house. Carpe Diem, motherfucker!\n\n---------\n\nMorgan and Meredith were not roommates so the awkwardness of us hooking up with girls in the same room was thankfully avoided. After Morgan and Mikey retreated to her room somewhere in the house, I turned my attention to Meredith. The spunky dirty blonde wrapped herself around me and we started making out. Meredith had a nice curvy body and she knew exactly how to rub it up against me. Feeling those firm large boobs against my chest along with my hands firmly planted on her large caboose was getting me rock hard. As our make-out session intensified, she started to gradually direct me to her twin-size bed. \n\nI sat on the edge of her bed and reached out to find out what was underneath Meredith's tight green shirt. As Meredith pulled off her shirt, I was greeted by a nice set of large firm breasts snuggly fitted into a white lace bra. She quickly shimmied out of her bra and I reached up to cup her newly freed tits. It didn't take long for Meredith to start feeding me her luscious breasts into my salivating mouth. This was so much better than the green Jell-O shots! I must have been doing the right things as Meredith clasped both of her arms around my head and pulled me in so tight, I almost suffocated on her tits. If I had to leave this world, this would have been my preferred method!\n\nAfter finally untangling myself from clutches of near-death by her luscious tits, I ripped off my shirt as Meredith moved over beside me to her bed. She leaned back on the bed spreading her legs and I noticed two things very quickly. As Meredith pulled up her mini-skirt, I realized that she has been going Commando for the entire evening as a wet pussy was clearly on display for my viewing pleasure. Secondly, I realized that the carpet didn't match the drapes as Meredith wasn't a true blonde as she was the proud owner of a pretty clean-cut little brown bush. \n\nAs my mouth nearly drooled at this beautiful sight, Meredith provided me a non-verbal invitation by opening her pussy lips with her fingers while giving me a mischievous smile. I dropped to my knees, leaned my upper body against the side of her bed, and put my tongue and lips to work. After exploring her delicious pussy for a bit, I rotated my tongue in a circle just slightly touching her clit on every turn which caused Meredith to grab my hand and squeeze in approval. As she got closer to her orgasm, she started to wriggle and moan on the bed. I increased the intensity and speed of my tongue's rotation which quickly resulted in the first orgasm of the evening. Meredith let go of my hands, moved them to my head and massaged my scalp as I continued to provide her with oral pleasure. Her moaning was low and melodic and I could feel my rock-hard dick straining against the fabric of my pants wanting to get in on the action. \n\nAs her orgasm subsided, she giggled in delight and sat up. \"That was fun, my turn!\"\n\nShe leapt off the bed in a single leap and she started clawing at my pants. Being slightly inebriated, she had a little bit of difficulty in getting my belt off (Nicki would have to teach her that trick!). I playfully swatted her hands away with a big smile while removing my belt and unbuckling my pants. In an instant replay from the past few weeks, my dick bounced out of my pants in celebration of freedom. Meredith tried to catch it as it bounced and she missed it a few times. When she finally managed to grab a hold of my cock, we both chuckled at the non-stereotypical foreplay. \n\nRight before she engulfed my dick with her mouth, she gave the shaft a once-over and gave it a goofy smile. Thankfully, she had more control of her mouth than her hands as she started to give me a very wet albeit slightly sloppy blowjob. While it was apparent that she lacked experience, she certainly didn't lack enthusiasm as she explored every inch of my cock and balls with her tongue. At one point, she glanced up at me like a puppy dog looking for approval. I simply smiled and cupped her cheek with one of my hands as I inserted my dick back into her mouth. I've had a lot of erotic memorable moments over the last few weeks, but this girl's energy and exuberance was just so much fun to be around!\n\nI really wanted to reward her spunkiness so I helped her off her knees, gave her a big hug and a quick peck to the lips. She still had on her mini skirt but since it wasn't in the way, I lifted her off the ground and laid her on the bed. While remaining standing, I scooted her body to the edge and filled into the space between her dangling legs as she opened them for me. She instinctively wrapped her legs around my back and pulled me closer to her and her wet crotch. As I got close enough, my hard cock entered her body in one abrupt thrust. Her pussy was tight, wet and warm. I gently grabbed her sides for leverage and started to rhythmically pump her pussy with my hard-on as she closed her eyes in ecstasy. With the moonlight providing the only light in the room, I watched her beautifully curvy young body jiggle with each thrust especially enjoying the way her large perky boobs bounced uncontrollably. After a few minutes of this, Meredith steadied her boobs by crossing her arm over her breasts. With her hand now inches from her nipple, she instinctively pinched it to provide additional pleasure. She snaked her other arm towards her crotch and gave herself extra stimulation to her pussy. Coupled with my pounding dick, it didn't take long to explode into her second orgasm of the evening. \n\nMan, this girl is a lot of fun! I love college chicks!\n\nAs her orgasm subsided, Meredith once again giggled in delight. Even through the entire orgasm, she never relinquished her leg grip on my body. She must have been a soccer player in her youth as her muscles were quite developed in her calves and thighs. Then in one single motion, she used her lower body to flip me onto the bed. When her legs finally released me, I laid down on her small twin-sized standard college bed. Like a jungle cat, she leaped up and facing me lowered herself on to my rock-hard dick. Like an equestrian riding a horse at full speed, she rode my dick as if she was on the last lap of the Kentucky Derby. I quickly and smartly gripped the sides of the bed so that neither I nor Meredith would fly off the bed during this ride. In this position, we were both quickly approaching orgasms. For my own ego's sake, I really wanted her to hit her third orgasm before I unleashed my own. With the sight of her tits bouncing in every direction possible above me, it was becoming increasingly difficult. Thankfully, the sex gods were on my side and soon the beautiful spunky co-ed started to deliver a loud orgasm containing a mixture of moaning and giggling. \n\nAs she started to slow her riding pace, it felt like my dick was in a hot sauna thanks to the flow of her warm pussy juices. That warm and wet sensation was pushing me over the edge into my own orgasm. Since I seemed to lack the capacity to speak due to this building ecstasy, I lightly tapped Meredith on her hips with my fingers to notify her that she needed to hop off. Within seconds, Meredith not only jumped off of me and the bed in one leap but also excitedly helped me back on to my feet. With the moonlight shining through the window spot-lighting Meredith's big beautiful tits, I knew the final destination of my building load. Within seconds, I unloaded a stream of hot cum right on to her voluptuous curves giving her something to wear other than her beautiful smile. \n\nOnce I finished, I leaned over onto the headboard of her bed recovering from a wild ride. Surprisingly, Meredith bounced up with what seemed like boundless energy, wiped herself off with a wet nap, kissed me on my cheek and jumped into her twin bed. By the time I realized what happened, Meredith was already fast asleep leaving me naked and standing in her room in a middle of a sorority house. Oh shit, this is new! What am I going to do now? To make matters worse, the pink pills were wearing off and I was starting to feel the jackhammer revving up inside the front of my skull. Damn, those Jell-O shots!\n\nI tried to walk over to the bathroom to throw water on my face, but I only made it a few steps as the spins started to take over. What the hell? Great, this throwback college experience came complete with a monster headache and the spins. Yep, I think I took a wrong turn on this trip down memory lane! Not knowing what else to do, I sat down in the middle of Meredith's room. I looked over at Meredith nestled comfortably in her bed without a care in the world. Well, she's going to be no help for me in this time of need. I placed my head into my hands and closed my eyes praying that this would center me from the spins. I couldn't believe that I just had sex with a hot coed in her bedroom of a sorority house and I couldn't even bask in the glory of it! Damn it! \n\nI looked over at my pants bunched up at the foot of Meredith's bed. The little breath mint tin that I keep some of the pink pills in was visibly sticking out of my pant's pocket. Shit, I've never taken the pink pills back-to-back with little recovery time in between. I had no idea what the side effects would be. However, I needed to find a way to move past this shitty headache and the spins. \n\nOh hell, damn the consequences! I reached over and grabbed the tin. I was immediately greeted with the sound of the pills bouncing around in the tin. Come to papa! I looked up at Meredith's desk which was just past her bed near the bedroom door and I saw her officially licensed Sorority pink water bottle with Greek letters emblazoned vertically on it. Please be water in there as I don't think that I'll make the bathroom. I staggered to my feet, stumbled over to her desk and just slightly bumped into her desk knocking over a few picture frames that were on her desk. I picked up the bottle and heard a slight swish of water coming from the plastic container. Oh, thank God! I grabbed two pills out of the tin, tossed them in my mouth, and sipped from the pink straw that was coming out of her pink water bottle. Figures that I would need water from a pink bottle to swallow some pink pills and loose my headache while gaining pink vision at the same time. This is going to be ridiculous if it didn't work. \n\nIt didn't take long for me to find out if it worked as my headache and spins were immediately replaced with a renewed energy and pink-tinted vision. Oh damn, that felt so good! I tried to steady myself but realized that I didn't need to as I stood up straight without anymore stumbling. I looked down and realized that my posture wasn't the only thing erect as I was sporting a re-energized woody! Not just a woody, but a don't waste my hard-on with a cold shower or self-pleasure type of woody! Well, I'll be damned! Just minutes ago, my dick was waving the white flag after erupting on Meredith's cans and now it's telling me game on! Maybe, I could wake Meredith up and have a second go-around with her young, curvy body!\n\nThis wasn't the best idea but I didn't want to enter the hallways of the Sorority House with this raging boner and knowing my luck, run into the boyfriend of one of the other members. Dan was the last douchebag boyfriend that I'm going to deal with tonight. I walked over to Meredith and looked down at her. She was clutching a huge body pillow with a big smile draped over her sleeping face. I started to chuckle at this sight. \"My dick runs deep, put her ass to sleep!\" Like Ice Cube said, today was a good day!\n\nJust then, the door to the bedroom opened up and I immediately reacted by backing away from Meredith's bed. As the light from the hallway entered the room, I laid eyes on a cute strawberry blonde in jeans, flannel shirt, and a white tank top. She dropped the backpack that she was carrying while staring at me in disbelief. I straightened up, glanced at her and then back to my dick which was still hard as a rock unaffected by the changing situation. \n\nThe strawberry blonde spoke first. \"Who are you and what are you doing here?\" Surprisingly she didn't move or look to make a move.\n\nAfter a moment of reflection, I realized that I had the powers of the pink pills at my disposal so I might as well tell the truth. \"Meredith and I met at the bar tonight, ended up here, and she inexplicably fell asleep on me after we were done!\"\n\nAt first, the blonde just stared blankly at me not giving any indication if she bought the story or not. After an awkward silence that felt like an eternity but only a few seconds in reality, she chuckled. \"Meredith always knocks out quickly when she gets some action especially if the guy is good.\" ",
        "With that, I puffed out my chest in pride and thought you're damn right I was good! In fact, I was so good, this strawberry blonde should just come over and try me out for herself!\n\nAs quickly as that thought popped in my head, the strawberry blonde walked over to me, got on her knees and popped my raging boner into her mouth! I closed my eyes as her tongue explored the hardened flesh of my dick. Oh, that felt good! With her tongue still going at it, she started to bob up and down my dick placing one of her hands firmly on the base of my pelvis. I'm pretty sure that she was tasting the mixed juices of both Meredith and I on my flesh but she didn't seem to mind! When I finally opened my eyes, I got a better look at this cutie that was currently playing my skin flute to perfection. Along with straight strawberry blonde hair, she had a narrow face with a pointy nose and cheeks covered in cute freckles. No wonder I'm getting a good look at her as I glanced up to realize that we never shut the door to the bedroom. As much as I didn't want to remove this cute girl's mouth from suctioning on my dick, I wanted to keep the action behind closed doors. \n\nI mentally instructed the strawberry blonde to close the door. As she stood up and walked away from me, I noticed that she had a classic pear-shaped body. For a white girl, she had some big hips and a nice round ass! As quickly as she closed the door, she immediately plopped back down on her knees and went back to work on my hard knob! Okay, I guess we'll do introductions later!\n\nMeredith was fun...a lot of fun, but this girl was extremely proficient with blowjobs! In between bobs, the strawberry blonde started to talk to me.\n\n\"Hi, I'm Tabitha!\"\n\n\"I'm Johnny! Pleasure to meet you!\" At first, I put out my hand, but quickly realized that it was pointless since Tabitha was more interested in another part of my body. \n\nOnce again, she started to talk to me in between bobs. \"This is so much better than my study session!\" Then she took another dip on my stick. \"Who the hell schedules a Friday night study session?!? Stupid bitches!\" This rant about wasting her Friday night in the study hall lasted a few more minutes and eventually she was talking longer than she was sucking. \n\nFinally, I couldn't take any more of this rant. \"I'm sorry, that doesn't sound like much fun. Do you mind if we discuss this later?\"\n\nThis time without taking my dick out of her mouth, she simply nodded. \n\nWith my cock fully coated with a mixture of Meredith's juices and Tabitha's saliva, I picked up and guided Tabitha over to her bed. She quickly shed all of her clothes and laid down on the bed. She had small perky breasts that were covered with the same cute freckles as her cheeks. With her legs spread, I lowered my sights to her pussy. She had a nicely trimmed bush with fine strawberry blonde hairs just above her light pink pussy lips. I leaned in, opened her folds and stuck my tongue in. I was slightly expecting the taste of strawberries, but it wasn't so. She still tasted good, but no strawberries today! I burrowed myself into her pussy with my mouth and started to enjoy the taste of the 2nd coed pussy that I've had tonight! For such a talker earlier, Tabitha wasn't much of a moaner but she did grip the sheets tighter and tighter as I delved deeper into the sweet nectars of her pussy. \n\nRight as I had her on the brink of an orgasm, she suddenly pulled away and jumped off the bed. She placed both hands on the bed, bent over and smiled at me. As I followed her off the bed, I dramatically circled around the naked bent over body of Tabitha slowly taking in the sight. Once again, the Moon Goddess was on my side, as her gigantic pale pear-shaped bottom half was on display as if the moon was a spotlight for it. I grabbed her wide hips and took a deep breath at this gorgeous backside that I was about to enjoy. Almost in slow motion, I directed my hard-on into her wet pink pussy. As I entered, Tabitha was again quiet but I saw her hands grip her bedsheets tightly in anticipation. Her pussy wasn't as wet as Meredith's but it was tighter. I slowly rocked my groin back and forth until my dick was well-lubed and then I picked up the pace. As I picked up the pace, Tabitha started to push back with her big ass creating one of my favorite sounds in the whole world of flesh smacking flesh. \n\nJust as I was getting a good rhythm going, Tabitha freed herself from my dick and jumped on to the bed. Within seconds, Tabitha was smiling at me while on her hands and knees on her bed with her big ass waving in the air. Face down, ass up, that's the way Tabitha likes to fuck! I climbed on to the bed and kneeled down in the space between Tabitha's legs. I grabbed Tabitha's big hips and pulled her towards my raging boner. Once she was in, I started to get my rhythm back and watched Tabitha bury her face into her pillow in appreciation. I glanced over at Meredith's bed and she was still fast asleep not realizing that her roommate and the guy she took home tonight were getting it on just a few feet away. This thought just seemed to make my dick even harder and I increased the intensity of my pumping. \n\nAs the intensity increased, Tabitha finally picked her face up out of the pillow as she reached up and grabbed the top of the bedframe. At the same time, I moved my hands from her hips to her shoulders providing me more leverage. With Meredith, the sex was just fun and loose. However even under the influence of the pink pills, it was more methodical and business-like with Tabitha. Even with my encouragement, I felt like our sex was being utilized as a stress relief for her. Tabitha was quickly queuing up her orgasm as I could feel her body tense up in anticipation. I tightened my grip on her shoulders and really started to ram my groin into her backside. It wasn't long before Tabitha's body started to tremble and twitch in ecstasy as she entered into her orgasm. Instead of moaning, Tabitha buried her face into her pillow again while one of her hands lost its grip on the bedframe. \n\nWith Tabitha's big ass still rippling from the final moments of her orgasm, the throbbing of my dick was becoming too much for me to handle and I needed to release my second load of the night. I barely had pulled out my dick before I unleashed my load on Tabitha's big ass and lower back. Stream after stream decorated her left ass cheek at first and then I moved over to her right cheek to ensure that her entire ass was fully coated with my love juice. As I finished, I leaned back on my knees with my hands pressed to my hips as I allowed my body to come down from this orgasmic high. Once again, I glanced over at Meredith and she was still fast asleep just feet away from us.\n\nAfter a few moments of taking in the stress relief that was just provided, Tabitha got up and excused herself to the bathroom to clean herself off of my love goo. I stood up and stretched. I couldn't believe it as I just had sex with two coeds in the last two hours and I still had energy for another round. In fact, I looked down and noticed that I was still semi-hard. Damn, my dick was ready for more action! These pills are miracle workers. I still had a few hours left on this latest dosage but my curiosity was calling. What if I doubled-up on the dosage? Could I literally just go around the sorority house in a door-to-door booty call? \n\nI grabbed two more pills and started walking towards the bathroom. My timing was perfect as Tabitha was just coming out. The cute and still naked strawberry blonde gave me a quick squeeze and peck on the lips before moving back to her side of the room. I entered the bathroom and closed the door behind me. I knew what I was about to do, but just in case, I wanted to take these pills in solitude. I looked at myself in the mirror and my vision was still coated in that familiar pink hue. In one quick motion, I threw back two more pills and scooped some water out of the faucet to wash them down. \n\nJust like all the pills before, I could feel the effects immediately occur as the pills dissipated into my system. However, this didn't feel like anything before as my body felt a burst of energy that rippled through my muscles. The pink hue that I have grown accustomed to surprisingly went away from most of my vision as I looked around the bathroom. Instead, as my gaze returned to the mirror, I realized that my entire body was now glowing in a pink hue. I examined my hands and arms and the pink was practically radiating off of my skin. Again, the pills cause my dick to be hard as a rock! Holy shit, what did I just do? \n\nBefore I could contemplate what to do next, the door to the bathroom opened, but not the door that I came in on. Until now, I didn't realize that this bathroom had two doors and was in fact a shared bathroom between two bedrooms. The person entering was neither Meredith nor Tabitha. Instead, it was a little blonde in a ponytail in a white ballet leotard. For the second time tonight, I had a random cute coed walk in on me while I was sporting a hard-on!\n\nThe blonde looked me over and sighed in displeasure. \n\n\"Look, I had rehearsal all night and the showers at the studio weren't working. So, if you could take your boner and go back to either Meredith or Tabitha in the other room, I would greatly appreciate it.\"\n\nWow, I wasn't expecting this response from a female while I had the pink pills of persuasion in my system. While in shock, I locked eyes with the annoyed ballet dancer. Her eyes immediately turned the same shade of pink as my body. She didn't go in a trance, but I could see her look of irritation transform into a look of lust. \n\nAs I checked her out, she was just over 5 feet tall and there was not an ounce of fat on her tight little body. She had little perky boobs and lean, muscular legs with cute tiny feet. I wanted to see her ass and as if she was on stage, she obliged and did a pirouette. What a tight, compact little ass on this miniature little frame! I could feel the desire to have this blonde become my own private dancer. \n\nAs if she could feel my craving for her, she completed her pirouette and pounced on me like a tiger attacking its prey. By definition it was kissing, but this lip-lock was absolutely animalistic in execution. Our tongues were mostly in each other's mouths but occasionally spilling out moisturizing the skin on each other's face. She pawed my back and I could feel her fingernails starting to scratch the surface of my skin as her tightly toned thigh was fiercely rubbing my boner. \n\nThis moment of animalistic instinct was finally broken up when the ballet dancer's fingernails dug in a little too deep into my skin. I pulled away quickly and kept her at arm's length. I looked at the ballet dancer and her eyes were fierce with desire. \n\nNot wanting to get into a conversation, we made some quick small talk. \n\n\"Hi, I'm Johnny. Who are you?\"\n\n\"Kendra, nice to meet you.\"\n\n\"Yeah, likewise, shall we re-convene in your room?\"\n\n\"Sure.\"\n\nWith that, I followed the tight little ass of Kendra into her room. As she entered her room, Kendra peeled off her leotard revealing to me the tight little body that her leotard already indicated that she had. She did another pirouette right into my arms with one hand grabbing the back of my neck while the other snagging a hold of my hard cock. We resumed our lip-lock as she started to jerk me off hard. I grabbed her ass and realized that Kendra's ballet training gave her buns of steel!\n\nUnlocking her lips off of mine, Kendra made her way south on my body kissing every part of me along the way. I grimaced as she took a hold of my dick at the base. Damn, she's got a tight grip! Without even a single lick to sample my dick, Kendra instead swallowed my hard-on whole and went to work seesawing her mouth on my cock. It wasn't the most pleasurable, but it was definitely a memorable blowjob. \n\nAfter a bit, it became apparent that Kendra could attack my dick with her mouth for the entire night. I finally pulled her off to give my still-hard dick a momentary break. After lifting her back to her feet, she did a half-pirouette close to her bed. She bent over and grabbed the edge of her bed while starting to wag her ass back and forth in front of me.\n\n\"Spank me!\" \n\n\"Excuse me?\" \n\n\"Spank me, damn it! And don't be gentle, I can take it!\"\n\nFor the second time today, I was invited to spank a female. Unlike my experience with Nicki earlier, I did want to let Kendra have it especially for her rough physicality to my dick during the blowjob. I reached back and gave Kendra a hard but not too hard slap to her left ass cheek. Her body immediately tightened at impact. \n\n\"That's a good start, Johnny, but come on, you can do better than that!\"\n\nNot exactly comfortable with this, I started to pepper Kendra's left ass cheek with fierce slaps. At first, Kendra moaned after each slap, and then after a while, she started to giggle through it. Damn, she was turning me on and scaring me at the same time!\n\nWith Kendra's left ass cheek now raw and quickly approaching a darker shade of red, I stopped out of sympathy. She stood up, glanced over at her left ass cheek, and nodded. \n\n\"Not bad, Johnny! I still think you went easy on me though!\"\n\n\"Um... you're welcome!\"\n\n\"Pick me up and turn me upside down so we can have some fun!\"\n\nKendra didn't even allow me a moment to consider this, as she jumped back into my arms and started to lean her body to the side. In one single fluid motion, I was greeted by the beautiful sight of Kendra's tight little pussy adorned with a small patch of blonde hair in my face. Meanwhile, Kendra was upside down and didn't waste any time hanging between my legs as I felt my dick find its way into the back of her mouth. Holy Shit, my first standing 69 as I completed the position by sticking my tongue into her wet little pussy. As my tongue discovered the tight landscape of her pussy, I felt Kendra's strong toned legs wrap themselves around my head. With her legs locked in, there was no turning back now. I nibbled, sucked and licked my way inside and around Kendra's tight pussy. Thankfully, she toned down the physicality of her blowjob so I was able to enjoy the receiving end of the fellatio this time around. I could tell that she was getting closer to orgasm as her legs tightened their grip on my neck. I dug in and really pushed it. Kendra crossed over in orgasm releasing my dick from her suction as she began a chorus of moans and deep breathing. \n\nI flipped Kendra back on to her feet as her orgasm subsided. She leaned on to her bed trying to regain her composure. I also took this moment to breathe and take in what was going on. With my eyes closed, I noticed for the first time that there were additional sounds coming from inside the room. These moans startled me out of my moment of reflection and I opened my eyes to see that Meredith and Tabitha were standing just inside the bedroom. Both were still naked and furiously fingering themselves on each side of the doorway to the bathroom. \n\nStrangely as I looked them over, both had the same pink tint in their eyes. Unlike Kendra, I didn't make eye contact with either Meredith or Tabitha until now, so how did the pink tint get into their eyes? In bewilderment, I looked down at my body and noticed that the pink tint that was radiating from my body was more intense than before. It dawned on me that the combination of the intense sexual activity and the double-dosage of pink pills attracted both of the ladies into the room like a sexual magnet. They were almost in a raw animalistic sexual state.\n\nBefore I could figure out what to do with the two sexual observers in the room, Kendra spoke up. \n\n\"Ladies, why don't the two of you get comfortable on my bed and go down on each other?\"\n\nAs if in a sexual trance, Meredith grabbed Tabitha's hand and guided her to Kendra's twin size bed. Tabitha laid down on the bed and anxiously awaited Meredith's pussy by licking her lips. Meredith hopped on the bed and I truly enjoyed watching her large breasts sway as she crawled into place over Tabitha. Once she was in place, Meredith lowered both her head and pelvis on to Tabitha. Within minutes, I could hear moaning from both sides of the bed as both ladies were now as furiously licking each other as they were fingering themselves earlier. \n\nI hadn't lost my hard on since taking the second dosage of pills, but I could feel my dick throbbing like never before. At this point, Kendra was shoulder to shoulder with me watching the two roommates eat other out like it was their last meal. I could tell the sexual freak that was Kendra was getting off on this as she was panting loudly as she fingered herself. \n\nAs much as I was enjoying the show, I wanted in on some more coed action. As if she read my mind, Kendra grabbed my arm and guided me towards her bed. As we got within a foot of it, Kendra turned to me.\n\n\"Pile drive me, Johnny!\"\n\n\"Excuse me, what the hell is a pile drive?\"\n\nKendra laughed at my apparent innocence. \"It's called a pile driver, silly!\"\n\nAs she said this, Kendra laid down on the floor next to her bed. On her back, she shimmied over to her bed and placed both of her legs against the bed. She leaned her elbows into the carpet, spread her legs and lifted her pelvis into the air. I'm no rocket scientist but I could now figure out what a pile driver is. I filled in the new space between Kendra and the bed and wrapped my arms around her thighs. At the same time, I inserted my hard-on into her open pussy and started to move my lower body like a piston into her. Even in this position, Kendra was definitely the tightest of the three co-eds that I've had the fortune of penetrating this evening. I could feel the walls of her vagina tighten on my hard-on until I bottomed out in her. Hot damn, why haven't I done this before? \n\n\"Damn Johnny, fucking give it to me!\"\n\nI tightened my grip on her legs and started to really drive my lower body into Kendra almost to the point where I was worried that her body would fold like an accordion. With the flexibility and strength from being a ballet dancer, her pussy would contract and release my driving dick with ease and be ready for more. With the encouragement of her panting and moaning, I continued the frenetic pace of driving my flesh piston down into Kendra with vigor and energy that I didn't know was still left in the tank after tonight's previous activities. With this pace, position, and increasing slickness of her wet pussy, I knew it wouldn't be long before she began her second orgasm of the night. \n\nSure enough, my efforts in this pile-driving position were rewarded by a loud orgasmic mixture of moaning, panting, and gyrating as Kendra fully succumbed to her orgasm. As if the ladies were in synchronization, both Meredith and Tabitha dove headfirst into their own orgasms. Surprising myself, I was able to put off my own orgasm while continuing to pound Kendra's pussy and listening to the moaning and giggling of the other two. \n\nAs the orgasms subsided, an idea popped in my head. I lifted Kendra to her feet again followed by quickly guiding both Meredith and Tabitha off the bed and onto their feet. I first turned Kendra around and bent her over so that her palms were against her mattress. I was greeted by a firm but cute small ass with her pussy fully exposed. I followed this up by repeating the same positioning with Tabitha. Soon her big pale ass was waving in the air with her pussy also wonderfully exposed. Meredith didn't need any guidance and quickly lined up next to Tabitha with her round but tight ass waving at me. \n\nI stepped back and admired the scene before me. I was now taking in the sight of three beautiful but differently shaped naked asses ready to be taken by my still-raging hard-on. As if this moment couldn't get any more surreal, a song aapopped in my head to give me my own soundtrack. It was a song that my grand father loved: \"Good Vibrations\" by the Beach Boys. ",
        "\"I'm pickin' up good vibrations.\" I grabbed Meredith's waist and fully thrusted my dick into pussy from behind. \n\n\"She's giving me the excitations\" and I gyrated back and forth with my hips landing my dick in her pussy on the \"oom bop bops\" of the song. Meredith moaned and squealed in delight as I continued to pump her as the song continue to play in my head. It felt so good having her curvy tight ass bouncing off of my groin like a basketball. I glanced over at both Tabitha and Kendra and they were busy keeping their pussies warm and wet with their fingers. Unfortunately, the moon didn't illuminate Kendra's room like Meredith's and Tabitha's. Instead, there was a outside lamp just a few feet away from the house that provided the same effect. And this artificial light was perfectly illuminating the fine asses right in front of me. \n\nAs much as I was enjoying delivering my dick into Meredith's backside, I didn't want Tabitha to get too lonely. I exited Meredith and slid my way down in front of Tabitha's big ass. What a contrast between Meredith's curvy yet toned ass and Tabitha's wider, whiter ass with her enlarged pussy lips peaking out! I wrapped my hands around Tabitha's wide hips and guided my hard-on to its second destination on this sorority row of pussies. While the first go-around was all business with the objective being to achieve stress relief, Tabitha felt more relaxed now as we got into a sexual rhythm as she started to both purr and moan as our nether regions met. \n\n\"Johnny, come on. I need you in me.\" Kendra was pleading with me while still fingering herself. \n\nI gave Tabitha a love tap to her fat ass as I exited her pussy. She sighed that I was no longer in her but didn't vocally complain like her sorority sister.\n\nKendra's tight little ass was waving at me again visibly begging for me to take it. Her left ass cheek was still a little red from earlier. I grabbed Kendra from her waist, picked her up and slid her pussy onto my cock. While keeping her suspended in air bent over within my grasp, I started to pump Kendra like no tomorrow. She responded in kind by loudly moaning and gasping as she enjoyed the ride. Her voracious demeaner again caught the attention of both Tabitha and Meredith. In fact, they had both turned around and had crouched down in a catcher's stance fingering themselves with their eyes glued to the two bodies in front of them.\n\nEven with a double dosage of pink pills that granted me what at first felt like a never-ending second wind, I could feel myself starting to tire. The good news is that I felt my orgasm started to materialize at the same time. With the little energy left in my tank, I put Kendra back on her feet and gave her one last burst of thrusting to try to put me over the edge. Kendra sensed what I was trying to do and started to use the power of her ballet training in driving her toned and tight lower body into me. This did the trick as I could feel the ecstasy building in my body. I gave Kendra's non-red ass cheek a love tap and she jumped off. As she jumped off and got in position in front of me, she was quickly flanked by Meredith and Tabitha. \n\nKendra reached up to grab my dick, but it was too late as the hose was loose and ready to spray. My cock erupted right at Kendra's upper body with the first burst of semen hitting her on the cheek and lips. Thank goodness, I didn't get her in the eyes! Showing off her ballet skills, Kendra leaped up and gobbled my dick before the second burst was released. Not surprising, Kendra was a fierce trooper and took in my 2nd, 3rd, and 4th bursts of cum with no problem. I couldn't believe how much cum was coming out of me but I'm sure that my replenishment of resources was a side effect of the double-dosage of pink pills. \n\nMy energy and cum depleted at the same time and I bent over to place my hands to my knees to catch my breath. With a sly smile on her face, Kendra turned to Meredith, grabbed her face and placed her mouth over Meredith's. As they each opened their mouths, I watched gobs and gobs of my semen drip down into Meredith's waiting mouth. Kendra then turned to Tabitha and unbelievably delivered more gobs and gobs of my cum into her mouth. Holy Shit, how much did I cum?!? \n\nWith her fingers pointed to her mouth, Tabitha motioned for us to watch her. In a slight exaggerated display, Tabitha swallowed the load in her mouth, opened her mouth wide for proof, and smiled. \n\nNot to be outdone, Meredith leapt to her feet, did a shimmy and swallowed the load that was in her mouth. As she finished, she giggled and continued to shimmy with her large boobs bouncing wildly. She then pulled Kendra to her feet and started to lick up the remaining jizz on Kendra's face. Not to be left out, Tabitha approached Kendra from behind and wrapped her arms around Kendra's waist watching her roommate clean off her sorority sister's face.\n\nI still felt the power of the pink pills coursing throughout my body and decided to give the ladies one last gift for the night. Using my hand as an invisible six-shooter, I aimed my pointer finger at Tabitha and mentally instructed her to have an orgasm as I pulled the imaginary trigger. With Kendra still in her arms, Tabitha immediately broke into an orgasm and leaned down on to Kendra's body. Kendra, not knowing what was going on, leaned back and smiled. \n\nWith the same pointer finger, I turned it towards the giggling Meredith and again pulled the trigger. Her giggling quickly transformed into a high-pitched moaning as Meredith leaned back on to Kendra's bed and pinched her own nipples as she entered her own orgasm. Kendra was now looking over at me in disbelief while I played dumb and simply shrugged my shoulders. When Kendra's attention returned to the nipple-pinching Meredith on her bed, I pulled two imaginary pistols out of their holsters and mentally gave Kendra a double-dosage of orgasms. Kendra doubled over to her knees as the intensity of her orgasm overtook her body. Meanwhile, Tabitha joined Meredith on her bed. I watched as all three enjoyed wave after wave of orgasmic delight ripple throughout their bodies. \n\nI stumbled into the bathroom as I could start to feel the effects of having uninterrupted sex for a few hours with these three beautiful sorority sisters starting to take a toll on me. I grabbed the sides of the sink and looked at myself in the mirror. Holy shit, I couldn't believe what just happened over the course of this evening! I noticed that the pink glow of my body started to lighten and dissipate. That's strange, it hadn't been a full four hours yet. Maybe the intensity of the double-dosage shortened the effectiveness of the drugs. I jumped in the shower hoping that the hot water would soothe my now aching body. \n\nI didn't have much time for self-reflection in the shower as Kendra popped in. \n\n\"Whoa Johnny... that was insane!\" She had a look mixed with disbelief, amusement, and satisfaction. \n\n\"What a way to start the weekend!?!\" She leaned in and placed her head onto my chest. After ballet training and a wild sexual evening, I could tell Kendra was spent. We held each other for a bit until the aching in my legs was starting to overwhelm me. \n\nI gave Kendra a kiss on the forehead and told her \"good night.\" She managed a smile but couldn't muster anything more. \n\nI exited the bathroom and re-entered Meredith and Tabitha's room looking for my clothes and a spot to sleep. I figured Kendra's room wouldn't be a good landing spot for me as her roommate might come back at some point. Plus, Kendra kind of scares me and I don't want to be woken up in knots of rope. \n\nI looked over at Meredith's bed and realized that she didn't leave me much room as she was naked clinging to a full-body pillow. It was impressive on how quickly this girl could fall to sleep after getting her sex on. I just shook my head and chuckled in disbelief at this sight. \n\n\"It is pretty funny, isn't it? I wish I had that superpower!\" Tabitha was smiling at me from her bed. Not only was the cute strawberry blonde under the covers but she also had made room for me. Did I hit the lottery with these pills or what? A cute co-ed offering me a place to sleep next to her after having a night full of mind-blowing sex with her and her roommates. Score!\n\nWithout hesitation and clothes, I jumped into the small twin-size bed with Tabitha. She nestled really tightly into me and soon our bodies were entwined like a naked pretzel. She kissed me on the cheek and whispered.\n\n\"I have a big exam next Thursday, can you come over afterwards to help me de-stress?\"\n\n\"Sure thing!\" was the last thing I remembered saying to her as we both dozed off into la la land.\n\n---------\n\n\"Johnny, wake up bro!\" I could feel my loose arm being tugged slightly. I begrudgingly opened up my left eye and could make out my brother Mikey standing over me. He was fully dressed and looked to be in a hurry.\n\n\"What the hell Mikey?!?\"\n\nMikey persisted. \"We got to roll. Morgan informed me that since we didn't officially check in, we could get the girls in trouble with the House Mom. Apparently, she's a real bitch!\"\n\n\"House Mom?\" \n\n\"Yeah, forget it Johnny, we'll talk later. We need to jet...now.\"\n\nMikey's whispering was loud enough to wake Tabitha as she lifted her head off of my chest and peered at us through half-open eyes.\n\n\"Cut the shit guys! Go back to sleep!\"\n\nMikey took a step back in disbelief. \"Wait, that's not Meredith?\"\n\nBefore I could answer, Tabitha spoke up. \"Thanks genius, I'm glad that your eyes seem to be working. I'm Tabitha. Meredith is that curvy lump sleeping in the bed on the other side of the room.\" With that said, Tabitha was done with us and turned over to her other side so that she could go back to sleep.\n\nA smirk now crossed Mikey's face as he started nodding in appreciation of discovering his brother's prowess with the ladies. He whispered, \"both?\"\n\nI nodded and smiled.\n\n\"Give me a minute to get dressed.\" Mikey nodded and headed outside the room into the hall. As I disentangled myself from Tabitha's limbs, the first thought in my head was of April. Wow, my objective for this weekend was to have fun with some ladies and fight these feelings that was starting to develop for the bubble butt pixie. I definitely achieved the first half of the objective by indulging in sexual fantasies with four different ladies in the last 24 hours. Obviously, I had failed the second half as I woke up hoping that I would see April.\n\nI just finished buckling my belt when Mikey barreled back into the room. \n\n\"The House Mom is out there. We need to go out the windows.\"\n\nWell, things are certainly coming full circle. We started to walk over to the same window we used to gain entry just a few hours ago. \n\nAs I was about to climb out, I realized that my phone was missing. \n\n\"Shit, Mikey, hold on. I need to go back for my phone.\"\n\nMikey was straddling the window frame but stopped and smiled sheepishly at me. He stuck his hand in his pant pocket and fished out my phone. \n\nHe handed me back the phone. \"Sorry bro, Morgan gave me Meredith's number and I just wanted to make sure that you got it in your phone. I grabbed your phone just before waking you up and I forgot that I had it on me. Probably forgot after seeing that you double-dipped last night like a champ!\"\n\n\"Come on Mikey, ye' of little faith in his older brother?\"\n\nMikey winked at me as he swung himself out of the window. I quickly hurdled the window after him and closed the window as gently as possible as to not wake up the girls. Well, at least Tabitha. At this point, I think Meredith could sleep through World War 3.\n\nJust as my luck would have it, the sprinklers around the Sorority House went off the minute that we were both out of the house. The walk of shame or in our case the walk of glory turned into a sprint for the sidewalk. As we reached the sidewalk, Mikey stood there with his hands on his hips laughing at the ridiculousness of the situation. As for me, I quickly realized that I was completely out of breath. In fact, I was still as dead tired as I was last night right after the double dosage of pills wore off. And on top of this, I was famished. And for the icing on the cake, we had no ride. Shit, why the hell did Mikey drag me out of the house? I could have at least hid out in the girls' room while trying to score Eggo's or some shitty-tasting rice cakes. \n\n\"Okay, you putz, we're out of the house! What the hell is going on?\"\n\n\"Sorry Johnny, Morgan's girlfriend came over this morning and things went down hill fast.\" \n\nDamn, the pills had struck again. \n\n\"Well, sorry Mikey, at least you had some fun while it lasted!\"\n\n\"You know, if we were keeping score, hooking up with a lesbian would be given the same amount of points as hooking up with roommates!\"\n\nI didn't want to burst Mikey's bubble like he would have believed me anyway. In reality, he hooked up with a lesbian while I had sex with not two but actually three coeds! If you wanted to get technical, the pills assisted both of us in making it an unforgettable night!\n\n\"Whatever you say, two problems that you need to solve for me since you put us in this position. One, we need a ride and two, I'm starving!\"\n\nMikey put his hand on my shoulder and that sheepish smile reappeared on his face. \"So, I kind of took care of the ride issue as well. One of your friends texted you while I was entering Meredith's digits into your phone.\"\n\nWith what little energy that I had in the tank, I stood up in shock. \"What? Who?\"\n\nAs if the world aligned for the moment, I felt a car roll up behind me.\n\n\"I heard you dumbasses needed a ride home!?!\"\n\nI closed my eyes as I immediately knew who was picking us up. \n\nTo be continued..."
    ],
    "authorname": "ziphuntington",
    "tags": [
        "mind control",
        "orgy",
        "group sex",
        "group"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/pink-pills-of-persuasion-ch-05"
}