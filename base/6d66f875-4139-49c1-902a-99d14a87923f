{
    "title": "Prince of Darkness vs Prom Queen 04",
    "pages": [
        "coldhands_warmheart \u00a9 2013\n\nThe sequel to Prince of Darkness v Prom Queen 1, 2 &amp; 3\n\nChapter 1 The Little Prince of Darkness\n\nThere was a new Dominant in the house.\n\n<p align=\"center\">Matthew Donovan Corbett\n\nBorn: October 11<sup>th</sup>\n\nProud Mom: Laci Corbett\n\nPanicked Dad: Donovan Corbett\n\nAu Pair &amp; Unofficial Big Brother: Victor</p>\n\nBy all accounts he was a remarkably good-natured baby. Not quite two months old, he was eating well and sleeping for slightly longer periods of time. He had his father's very dark hair, his mother's bright blue eyes, was alert and curious, and did his share of gurgling and cooing. Sometimes he smelled a little funny.\n\nAnd he screamed like a banshee whenever Donovan got too close.\n\nList of Donovan Corbett Haters\n\n1. Frank Harding -- depraved pervert\n\n2. Virgil -- stuffed unicorn with beady eyes\n\n3. Prince Ogre -- growling horse\n\n4. Matthew -- son and heir\n\nThe list was growing. Great. Just great.\n\nLaci's pregnancy had been a shock. It wasn't unwelcome, in fact, before he and Laci were married they had spoken extensively about starting a family. It still shocked him when she occasionally spoke about her past. Even if her parents had gone through a difficult divorce, how could two people bring a child into the world then simply ignore her existence, especially someone like Laci. It was funny how she seemed less bothered by the situation than he was. She'd accepted it and moved on. She never dwelled in the past and always looked to the future. Now, together, they were facing future parenthood. He just wasn't sure he was ready. He wasn't sure he'd ever be ready considering how little experience he had with babies. Hell. He had no experience with babies. He was still having trouble taking care of himself.\n\nLaci handled pregnancy with her usual efficiency. It never slowed her down and she insisted on working the entire time. The only thing she craved, morning, noon, night, and all times in between, was orange juice. She drank enough to keep the citrus growing industry in business for years. He should have purchased an orchard for her. This kid wasn't going to have a cold during his entire lifetime considering how much damned vitamin C he had absorbed before birth.\n\nOh. And there was that other craving. She called it a hormonal mood swing. He called it horny.\n\nReally horny.\n\nShe was horny the entire time. Month after month of horniness and not just regular horny. It was more like sex fiend, nymphomanical horny. Morning, noon, night, and all times in between. Must have been all that damned orange juice mixed with the hormones. Laci Corbett had the happiest, horniest, and most vitamin C packed pregnancy on record.\n\n'Insta-fucks' had been pushed aside for 'mega-fucks'. Quite often, there were 'super-mega-fucks'. On more than one occasion she craved a trifecta of 'super-colossal-mega-fucks'. What the hell ever happened to pickles?\n\nDonovan's way of life had been built around the business of sex and sex slaves. He understood sex. He liked sex. There was almost nothing he'd rather do than engage in some form of sex with his very beautiful wife. After the fourth 'super-colossal-mega-fuck' trifecta, he found himself trying to hide from her out of sheer exhaustion. Hiding didn't work. Her sex-radar was infallible. Why the hell couldn't she be craving some type of food containing tryptophan so she'd fall asleep once in a while? He wasn't exactly complaining. It was actually a spectacular dream come true. All he wanted was a little time off for good behavior. An hour? Maybe two? Just to catch his breath. He'd been really good.\n\nHe actually had been good, trying his best to be as supportive and available as possible, even if he was slightly overwhelmed. Once again Laci had steered him into new territory. Donovan Corbett was going to be a father? He had started a huge corporation with less anxiety. Business was business. There was a task to do, it was done. Case closed. On the flip side, he was a Dominant. He trained slaves. He told them what to do. They did it. Sometimes they had to be persuaded but usually that was a choice of their own making. Bottom line was: he gave a command and the slave responded. Somehow he didn't think things would be as simple with an infant.\n\nHopefully the kid would be sleeping most of the time but what about later? Would the days start with the kid screaming for attention? Usually Donovan was the one demanding attention. Was every meal going to be about what the kid was and wasn't eating? He hated those parents who followed their kids around trying to coax them to gobble a spoonful of cereal. He liked quiet and relaxing mealtimes with a superb bottle of wine and pleasant conversation. What was going to happen when Laci got home? Was she going to make a run for the kid? Donovan liked it when she made a run for him. Was the kid going to demand all of Laci's time? He liked knowing Laci was always going to be there for him. And what about sex? Was the kid going to want to sleep in their bed? He liked being open and free with his wife, making love any time of the day or night, 'insta-fucks', even 'super-colossal-mega fucks'. Was that all going to end? Parenthood didn't seem too appealing and definitely not very sexy.\n\nStill, in spite of his many misgivings, he tried his best and he understood his need for staying in control. Dominants didn't just discipline their submissives; they also cared for them. Even if the Dom/sub lifestyle was a bit blurred between him and Laci, it was still his responsibility to care for her and it was something he really wanted to do. He wanted to share the entire experience so like he did with all his projects he did his online research and read his books. He might be terrified, but at least he'd be terrified and informed.\n\nThe more he read, the greater his concerns. Babies wanted constant attention. They ate a lot and they puked a lot. He really could have done without that childbirth video. Gross was not the word. Hideous and repulsive came to mind. He should have offered to get Laci a kitten while he still had the chance.\n\nShe was her usual confident self. She was certain it was going to be a boy even before her doctor confirmed it and his name was going to be Matthew. She said it was her favorite name after Donovan. How could he argue with that? At least she didn't want to call the kid Virgil. Or Victor.\n\nShe changed her mind about how she wanted to decorate the nursery at least ten times, finally settling on no theme other than simple and tranquil in shades of blue and cream. He'd let her have that, too. He'd wait and pick his battles saving them up for things like diaper changing.\n\nHe was shocked to discover they'd have to abstain from sex for six weeks after the kid's arrival. SIX WEEKS?? Sure he was tired from the demands brought on by her hormonal horniness, but six weeks? All he needed was a day or two, not six weeks. The kid wasn't even born and he was already causing problems. Her due date was rapidly approaching. Her voracious horniness never abated the entire time. Maybe six weeks off wouldn't be so bad but a kitten really would have been the way to go.\n\nFinally, it was time. Laci, the Wonder Prom Queen, handled labor like a champion. Donovan was nauseous. He told himself it was from nerves but it wasn't helped by the cheerful doctor who placed a very slimy and screaming Matthew in his father's hands. Did Donovan Corbett look like someone who did slimy? He had only recently gotten slightly adjusted to dusty. Laci was beaming brighter than her usual sunbeam self and was a little tired but hardly had a hair out of place. Donovan looked and felt like he had been run over by a speeding baby carriage.\n\nWas it too late for the kitten?\n\nThe next day, Donovan and Laci took their new little Prince of Darkness home. No one was more excited than Victor who had discovered his inner Mary Poppins and was going to be helping to care for Matthew. How the hell did Victor, with his slightly shady past and questionable background, know how to change a diaper so easily? How the hell did Victor, who knew how to pick locks, know how to work a car seat? How the hell did Victor, who used to work with Donovan training sex slaves, know how to swaddle? In all the years of slave training Donovan could not recall a single instance of swaddling.\n\nHe wasn't surprised when Laci adapted to motherhood as easily as she did to everything else. She was a natural and always knew how to soothe Matthew and make him feel safe and secure. With Cousin Marian's blessing, Laci was taking a few weeks off from work, then going back part time and would also be working from the house when necessary.\n\nMatthew happily snuggled in his mother's arms and sighed with baby contentment every time she was around. Daddy would have liked feeling some of that safety and security, too. He wouldn't have minded some snuggling either.\n\nMatthew also liked Aunt Marian, who was technically Cousin-Once-Removed-Marian, and who, as far as Donovan knew, had never had even the slightest interest in babies. During all the years they had spent together, during their many conversations about their pasts, presents, and futures, she had never even mentioned babies. She completely shocked the hell out of him by offering to baby sit any time Matthew needed her. How about when good old Cousin Donny needed her?\n\nUncle Victor Poppins and Matthew bonded within two days. Victor had the amazingly wonderful idea of turning the dining room into a makeshift nursery so Laci wasn't constantly running up and down stairs. It was a nice room, convenient to the entire lower floor, and flooded with soft sunlight for most of the day. It was also where Donovan used to enjoy his quiet and relaxing mealtimes, with a superb bottle of wine and pleasant conversation. The kid was taking over already.\n\nFor the first two weeks Donovan tried his best. He wasn't quite ready to try diaper changing although he watched Laci, Victor, and even Marian take their turns. He wasn't sure he understood the whole swaddling concept and that fucking baby seat thing might as well have been a twelve thousand piece jigsaw puzzle. For the moment, he would just try holding. The kid did not agree. The minute Donovan even attempted to get near him, the Little Prince of Darkness screamed purple-faced, holy-hell, bloody murder. After the second week Donovan left things to those in favor with the prince.\n\nHe retreated to the peaceful solitude of his office which did not house any type of baby related paraphernalia or coddling adults. Laci, Marian, and Victor had everything under control. Donovan hardly ever even heard the baby cry. Maybe when the kid was about eighteen and asked who that tall guy with the dark hair was, Laci could introduce them.\n\nChapter 2 The Tale of the Dethroned Dominant\n\nThe weather was cool and rain was predicted. Laci had taken the reigning, miniature Dominant to visit his pediatrician which meant the house was calm and quiet. The recently dethroned Dominant was enjoying the peace and solitude as he surveyed his former kingdom. It was only one kid. How the hell had the realm become a baby emporium in less than two months?\n\nIn one corner was a swing. In the other, the twelve thousand puzzle piece baby seat. Small and mysterious colorful objects that made a variety of noises were scattered about. Toys? Victor seemed to be having fun playing with them. By the door was the diabolical stroller that Donovan had helpfully spent twenty minutes trying to fold before giving up only to see Victor come along and collapse the damn thing with one toe. One single fucking toe.\n\nThe Prom Queen had learned to submit to a new Master, which really didn't explain why she hadn't been able to pick up that skill with the old Master. Maybe the old Master should have tried crying and cooing. He sort of felt a bit like crying right now.\n\nDonovan refilled his mug with coffee and returned to his tranquil office. He used to enjoy working from home. Sometimes he went out to conduct business but the benefit of having his own company was working where he wanted to work, when he wanted to work. He remembered the old days when he'd walk through the door at the end of his day and Laci couldn't wait to jump into his arms. It was almost as good as jumping into her waiting arms but these days her arms were full.\n\nThey all seemed to have forgotten it was his house. Before any of them moved in, before the days of diabolical strollers, baby powder, and Master Matthew, the house and all it contained belonged to Master Donovan but he had been overthrown by a pint-sized subversive and his band of followers.\n\nWhat, Donovan wondered, would happen if he snuck out? How long would it take before they'd realize he was gone? He sat and surveyed his lonely office domain. Probably not a good idea to desert the fortress. By the time he got back, Dom Junior would have probably staked his claim for a playroom.\n\nDonovan glanced up as Victor puttered into the room.\n\n\"Hey, Daddy-bug! Whatcha doin?\n\n\"Are you addressing me?\"\n\nVictor looked around the room. \"Don't see any other Daddy-bugs around so I must mean you.\"\n\nI would appreciate if you'd call me by my given name and don't you have anything better to do than annoy me with your inane and time-wasting remarks?\n\n\"Nope. Not 'til Noodle-bug gets back from the doctor.\"\n\n\"What the hell are you talking about? If you're seeing bugs call an exterminator. Ask how much extra he'll charge to rid the house of persistent and pestilent Victor-bugs.\"\n\n\"Someone's in a bad mood.\"\n\n\"Someone is trying to enjoy the peace and quiet that has been in short supply the past few weeks.\"\n\n\"Okay, Donovan. What's going on now?\"\n\n\"Victor, why does anything have to be going on? I'm sitting here alone, bothering no one. Why does that translate to something going on?\"\n\n\"Because you're always sitting here alone, for hours, like a forlorn hermit crab. That's crab as in grumpy curmudgeon. Hey, I'll bet Noodle-bug would love playing the vocabulary game when he gets older. I'll have to remember that. He's the most brilliant kid I've ever seen.\"\n\n\"He's not even two months old.\"\n\n\"So? I'm telling you he's a genius. You'd see that if you ever ventured out of your crab cave. Laci's worried about you sitting in here all gloomy and sulky. You're not enjoying Noodle-bug.\"\n\n\"Victor, has it escaped your constant and annoying attention that MATTHEW screams every time I am within ten feet of him? How does he even know I'm there? According to what I read infants can't even see clearly.\"\n\n\"Not when they're first born but he's already starting to focus. He knows Laci and he'd get to know you if you'd quit hiding.\"\n\n\"I'm not hiding. I'm working.\"\n\n\"You're jealous of Noodle-bug.\"\n\n\"That's absurd and stop calling him that ridiculous name.\"\n\n\"So what's going on? You upset and horny because it's been awhile since you and Laci did the naughty, naked mommy-daddy dance?\"\n\n\"Victor, why is every aspect of my personal life your business?\"\n\n\"So are you jealous of Noodle-bug, or just scared of him?\"\n\n\"I don't like making him cry. It's not good for his blood pressure or mine.\"\n\n\"Don't recall you having any reservations about making slaves cry. Made me cry a few times and that never bothered you.\"\n\n\"When the hell did I ever make you cry? You're usually the one bringing me to tears.\"\n\n\"Why don't you try getting to know him or are you planning to hide until he goes to college?\"\n\n\"Is there any chance I can get you to hide until he goes to college?\" Donovan growled.\n\n\"C'mon Donovan. You might as well tell me what's going on. You know you're not going to feel better until you do and you know I'm going to keep annoying you, so let's quit wasting time. Which is it? Jealousy? Fear? Mad that you're being neglected? Just plain horny? Out with it!\"\n\nDonovan sighed. \"Is there a category for all of the above, and how exactly did you acquire your extensive knowledge of newborns? Where the hell did you go to school? The Poppins Academy of Dubious Lock-Pickers and Swaddlers?\"\n\n\"I've been around, plus, I've been looking after you for years. If I can take care of you, Noodle-bug is a cinch. Wanna help me change him when he gets back? Just a warning...he may pee on you. Aim's not real good yet.\"\n\n\"No thank you.\"\n\n\"Gonna keep pretending he's not here, 'cause I'm pretty sure he's planning to stay. He likes it here.\"\n\n\"Why the hell wouldn't he like it here? He's taken over every damn room except the master bedroom and my office. He has more clothes than I do. He's got the constant attention of three used to be rational adults, including your wife and mine who also happens to have a husband she seems to have forgotten about. All of you think every single thing he does is like some amazing miracle. He has every need taken care of the minute he makes a sound. He'll never leave and why the hell are you grinning at me like some psychotic babysitting baboon?\"\n\n\"Because you're scared to death of him,\" Victor answered smugly. \"You may be feeling really horny after six weeks...\"\n\n\"Seven and a half,\" Donovan interrupted with a scowl.\n\n\"Excuse me. I stand corrected. You may be feeling really horny after SEVEN AND A HALF weeks, and you're jealous and think you're being neglected because there's a new man in Laci's life, but mostly, you're just plain scared to death. You. Master Donovan, who can discipline with a riding crop in each hand and is in constant demand as one of the best trainers around. Donovan Corbett, one of the toughest, most ruthless and most successful business owners in the country. And you're scared to death of a Noodle-bug.\"\n\n\"I understand business. I understand dominance and discipline. I understand control. I don't understand him. I don't even understand his stupid stroller. I can assemble a whipping bench faster than anyone. I've designed and sold my own discipline apparatus and I can't fold the damned stroller. I know how business works. How the hell does he work? I'm guessing he doesn't have an off-switch.\"\n\n\"Maybe you need to stop trying to control everything and being perfect. There was a time when your business was new. There was a time when you were a brand new Dom. You needed to learn about those things. Give yourself a break. In a couple of years, you and Noodle-bug will be laying on the floor in your underwear watching the ballgame together, drinking beer and juice boxes.\"\n\n\"When the hell have you ever seen me lying on the floor, much less lying on the floor in my underwear watching a ballgame? And the only beer I drink is imported. It's not lying on the floor drinking beer. It's sitting upright in a chair and taking the time to savor beer.\"\n\n\"Right,\" Victor acknowledged with a snooty look on his face, \"then you'll want to pair it with the organic apple juice boxes, the ones with less sugar. I tell you, Donovan, that stuff is damn good. Marian buys it for me all the time.\"\n\nDonovan looked at Victor with annoyed disgust. \"My cousin buys juice boxes?\" He paused for a moment. \"What in the fucking hell is a juice box? Juice is supposed to come from fruit, not boxes.\"\n\n\"It's a new world, Donovan.\"\n\n\"I like the old world. I like it even better when you're not in it. Go away.\"\n\n\"Can't do that, Daddy-bug. I'm stickin' with you and Noodle-bug. Wanna get naked and I can tie you to something? That always makes you feel better.\"\n\n\"That makes you feel better. Go away.\"\n\nVictor headed for the door. \"You know, Donovan, he's starting to turn into a little person and if you spend your time hiding in here, you're going to miss it all.\" The door slammed closed behind him.\n\nDonovan glared at the closed door. Obviously Victor didn't know everything. It had somehow escaped his attention how many nights during the past seven and a half weeks Donovan had stood next to the crib, alone and silent in the tranquil blue and cream room, watching his son sleeping.",
        "Chapter 3 Coitis Interruptus\n\nThe door was still closed an hour later when he heard a slight tapping and looked up to see Laci peeping inside.\n\n\"Can I come in?\" she wanted to know.\n\n\"Of course you can,\" he responded. \"You're always welcome. Everything go well at the doctor?\"\n\nInstead of answering, she pulled him out of his chair and across the room to the sofa. Pushing him down, she snuggled next to him before answering, \"Everything went fine, in fact the pediatrician thinks Matthew is doing exceptionally well. He's very alert. What I want to know is how you're doing? You've been working so much. I've hardly seen you.\"\n\n\"Had a few problems to deal with. Nothing unusual. How've you been? Haven't seen much of you these last few weeks either.\"\n\n\"You're always awake before I am and usually still working when I fall asleep. You've been so quiet. I haven't even heard you getting into bed.\"\n\n\"Just trying not to disturb you. I want you to get your rest. You've been rather busy. We haven't talked too much. How are you feeling? It's been a long time since we...\"\n\nShe smiled at him, beaming a little brighter. \"It's been seven and a half weeks, fifteen hours and,\" she glanced at her watch, \"about nine minutes since we...\"\n\nHe smiled for the first time since she entered the room. \"You've been keeping track, too?\" he asked incredulously.\n\n\"Yes, I've been keeping track, too, and I think we can stop keeping track and start doing other things beside keeping track unless, that is, you still have some work problems to deal with.\"\n\n\"I can make the sacrifice.\"\n\nThe sound of crying filtered into the room. \"Uh oh, I think someone wants a snack but I will see you later.\" She kissed him before leaving the room.\n\nDonovan sighed with contented happiness. Maybe normalcy was finally returning. He should have known Laci would take care of everything.\n\nIt was a perfect evening. They shared a quiet, romantic, and uninterrupted dinner in front of the fireplace in Donovan's office. He was positive their discussion was going to be all about the kid but Laci wanted to know everything Donovan had been doing. That wasn't expected. Things were going back to the way they had been, he thought with satisfaction. Perhaps the Munchkin Dom wasn't going to be a big problem, after all.\n\nAfter dinner they promised to meet in their bedroom in an hour. Laci was going to get Matthew settled and Donovan had some last minute work to finish. He'd been keeping track for seven and a half weeks, and now he was counting the minutes.\n\nHe wasn't disappointed. When Donovan opened the bedroom door, he stood in pleasantly surprised shock. She had outdone herself. The room was illuminated by flickering candles and Laci was standing by the bed wearing the sexiest blue lace nightgown he'd ever seen. Wow! Damn she looked good. Even so, he couldn't wait to get it off her. The only thing better than Laci, was naked Laci.\n\nHe was already hard and he hadn't even touched her yet. He didn't have to wait very long. She was in his arms before he could say a word. Her fingers were already unbuttoning his shirt. Either she really missed him and was as ravenous as he was, or all her horny hormones were still present. He really didn't care. He missed those hormones. A lot.\n\nScooping her up, he placed her on the bed, gently lowering the whisper-thin straps of her nightgown. His thumbs caressed her breasts and he felt the nipples harden under his touch. He smiled listening to her tiny sighs of pleasure. Her skin was like stroking satin and he needed to touch every inch of her. It had been too long. She was pushing his shirt off his shoulders, running her nails along the surface of his skin, behind his neck, up and down his back. Her touch made him shiver in anticipation.\n\nUsually meticulous, he was almost ripping his clothes off. He was battling with himself, wanting to be inside her immediately but also wanting to take his time and savor her. He wasn't accustomed to needing anyone the way he needed her. Usually others needed him, but it was always different with her. His desire for her was endless and, amazingly, she hungered for him just as much.\n\nShe mesmerized him. These had been the longest seven and a half weeks of his life. He craved every inch of her perfection. He loved her gentle caresses and the countless, feathery kisses she was giving him. He had touched her so many times, but this time felt like the very first. It was magical.\n\nShe was making him feel incredible, but she always made him feel incredible. More than incredible. She was making him feel spectacular. He had never met anyone who could wear him out like she did. His wife was nirvana. Lusty, exhilarating, insatiable, passionate nirvana. Damn, he was lucky.\n\n\"WAAAHHH!! GURGLE.\"\n\nNO! Not now. Maybe the kid would fall back to sleep. He couldn't be waking up now. It wasn't his turn. He'd had his turn for seven and a half weeks. Didn't he know about sharing?\n\n\"WAAAHHHH!! WAAAAAAHHHHHH!!!!\"\n\nDamn! Damn! Damn!! Damn!! DAMN!!!\n\nLaci was off the bed, adjusting her nightgown. \"I'll be right back,\" she told him.\n\nOh, yeah. Great. Just great. Donovan rolled over and stared at the ceiling pondering all the wonderful benefits of parenthood. He knew he was being a little unfair, maybe even irrational, but this was supposed to be his time with Laci. She had been his Prom Queen long before the kid entered the picture and Donovan didn't like sharing either.\n\nHe'd read about this in his books and articles. Once there was a baby on board, romance sank like a stone. How much longer was he going to have to wait? Maybe he needed a break from baby-world. He could take Virgil up to the ranch and they could commiserate with Prince Ogre. All three of them had been neglected during the past seven and a half weeks. They could drink beer and juice boxes.\n\nIt was nearly forty-five minutes before Laci returned to the bedroom. Donovan was lying on his side, his back to her, pretending to be asleep. She had to smile as she slipped quietly into bed, giving him a light kiss on his shoulder, knowing he was pouting.\n\nCould she possibly love him anymore than she already did? Accepting her into his neatly arranged and orderly life had been so hard for him, but he had done it because he loved her. He changed so much of himself and who he was for her and that was something she didn't take lightly, but he was used to being the center of his own world and hers, and now he wasn't and it had thrown him off balance again.\n\nShe wasn't worried. She knew him far too well, even if he was the most confident Dominant with insecurity issues in the entire universe. She had lavished him with attention during her pregnancy, knowing how it would be after Matthew's arrival. Blaming it on hormones had been a stroke of genius. Now it was time for another stroke of genius. By this time tomorrow, Donovan was going to be self-assured and back in control.\n\nAnd all it was going to take was just a little bit of submission.\n\nChapter 4 Prozac and Pee-Cones\n\nSitting at his desk in the office, Donovan could hear Victor singing in the garden.\n\n\"One little, two little, three little...\"\n\nWhat the hell was he singing about? He had to presume Victor was entertaining Matthew. One could never be certain of anything when Victor was involved, but Victor was singing? Not once in all the years they had known each other had Donovan ever heard Victor singing anything. True, there weren't many 'Sound of Music' moments in the life of a slave training Dominant or his assistant, but even so...Victor was singing? What other surprises could Donovan expect? He really didn't need any more surprises.\n\nAfter many hugs and kisses to Matthew, and a kiss goodbye to Donovan, Laci left early to drive to a nearby town to interview someone for work. She was going to be gone for most of the day and she hadn't even mentioned their interrupted romantic evening, causing him to feel even more neglected than before. He wasn't sure if he was more annoyed at her or himself, but he was annoyed at someone. Maybe he could take it out on Virgil and kick him around for a while. Damned unicorn would probably kick him back.\n\nHe should just go talk to Laci. She always understood and made him feel better. But Laci wasn't there and wouldn't be back for hours. There was always Victor. If Donovan sat and wasted enough time steaming and stewing, eventually Victor would figure out he was bothered about something and would annoy him into confessing his dilemmas. Might as well go talk now and just get it over with. Make things a hell of a lot easier. Victor? Easier? Damn! He must be desperate.\n\nAs Donovan opened his office door Victor was coming out of the dining room. Victor motioned for Donovan to be quiet as Donovan motioned for Victor to follow him into the office.\n\n\"Could you sit down for a minute,\" he addressed Victor. \"I'd like to talk to you.\"\n\nVictor frowned slightly and looked behind him. \"There's no one else in the room, so that must mean you want to talk to me, but you never want to talk to me. Are you sick or something?\"\n\n\"No I'm not sick. I need some advice.\"\n\nThe frown deepened. Victor reached into his pocket and pulled out his wallet. He flashed his driver's license to Donovan.\n\n\"Now what the hell are you doing?\" Donovan demanded.\n\n\"Showing you my I.D. You asked for advice, so I figured you'd mistaken me for someone else. See,\" he held out the wallet, \"it's me. You never ask me for advice. You sure you're not sick?\"\n\n\"Victor, is it possible to have a simple conversation with you?\"\n\nVictor's frown was joined with puzzlement. \"You want to have a simple conversation? You? When do you do anything simple? Maybe you should sit down. You must be sick. Need an aspirin? You're not dizzy or anything, are you?\"\n\n\"Damn it, Victor. I don't need an aspirin and you're the only one making me dizzy. This is why no conversation I have with you is ever simple. It is too much to ask that you just listen? Quietly. Without interrupting. Preferably while you are paying attention. Or at least giving me the illusion that you're paying attention.\"\n\n\"Sure, Daddy-bug. What's on your mind?\"\n\n\"Well, for one thing, can you stop calling me by that ridiculous moniker?\"\n\n\"Sure, Donovan-bug. What's on your mind?\"\n\nDonovan glared at him. \"And you wonder why I don't have more conversations with you. Have you always been this annoying?\"\n\n\"Of course I have. I haven't changed. You're the one who's changed.\"\n\n\"How have I changed? I haven't changed.\"\n\n\"Well, that's partially true. You're still demanding and compulsive. That hasn't changed. You'll always be fastidious and persnickety. That's never gonna change. And you might as well get used to the egotistical, self-absorbed part of you, 'cause that ain't going nowhere. I mean, let's be honest here, Donovan. You're kind of a general pain in the ass.\"\n\n\"Thank you, Victor. It's nice to know you hold me in such high regard, especially since I'm the one who signs your pay checks.\"\n\n\"Of course I hold you in high regard. You're my idol. Hell, you're your own idol. So, what's on your mind?\"\n\nDonovan sat quietly, staring out the window. \"I don't know.\"\n\n\"Okay. Good place to start. Any chance you could elaborate?\" Victor's frown was back as he watched Donovan. The poor guy looked miserable. This was something big. \"Everything good with you and Laci?\"\n\nDonovan looked up with surprise. \"Yes. I think so. Why? Did she say something?\"\n\n\"No. She seems totally fine. You're the one who's a mess. C'mon Donovan. Out with it. Quit stalling and tell me what's going on.\"\n\n\"Is Matthew afraid of me?\"\n\nThe light bulbs starting popping everywhere. \"Of course not. You're more afraid of him than he'll ever be of you. Kids are like animals. They can sense things and Noodle-bug can sense your fear.\"\n\n\"Great. So he's going to need baby Prozac and it will be my fault. I'm a lousy parent.\"\n\n\"You're a new parent, and you're going to need super industrial strength Prozac if you don't calm down. Donovan, be honest. You've learned a lot since Laci came along, but you still can't really take care of yourself. There isn't some little gas gnome living in the trunk of the car who replenishes the gas for you. I do that. There isn't a dry cleaning elf who comes here and takes away your suits, then brings them back when they're clean and pressed. I do that, too. I know your routine and your needs and I take care of them. You don't bother because you don't have to and that's exactly what you're doing with little Noodle-bug. I'm doing it and Laci's doing it, so you're just stepping back and letting us handle it.\"\n\n\"So, we agree. I'm a lousy parent.\"\n\n\"Question...suppose Frank Harding showed up and tried to hurt Matthew. What would you do?\"\n\n\"Kill the bastard,\" Donovan growled. \"Even though I'm sure he's long gone, if anyone ever tried to hurt Laci or Matthew, the last thing they'd see would be me choking them to death.\"\n\n\"So I guess that makes you the worst father and husband in the entire world because your first instinct is to protect your wife and child. Damn. You're a horrible person, aren't you?\"\n\n\"Are you trying to tell me you wouldn't protect Marian?\"\n\n\"Course I would, but up until now, all your instincts have been focused on business and training and yourself. You're comfortable in those situations and you know exactly what to do. Now you're dealing with a whole new situation and a whole new set of priorities. Give yourself a chance to get comfortable with Noodle-bug and all your Daddy-bug instincts will kick in. You'll see.\"\n\n\"I don't know.\"\n\n\"You'll be just fine and I can teach you about the rest. I can show you how the stroller works and how the pee-cones work.\"\n\n\"Pee-cones? What the hell are pee-cones?\"\n\n\"It's like I said yesterday, his aim's not real good yet so when you change him, you put a pee-cone over his little dick. Then he can't pee on you.\"\n\n\"Pee-cones? I hope you're kidding. Besides, I think diaper changing has to wait. I'd probably stab him with the pins and he already isn't particularly fond of me as it is.\"\n\n\"No pins, Donovan. You use tape for diapers.\"\n\n\"Tape?\" Donovan sounded perplexed. \"You tape his diapers on? What kind of tape? Packing? Strapping?\"\n\n\"The diapers come with their own tape. I'll show you. I can show you the bath fish, too.\"\n\n\"Bath fish?\" Perplexed was replaced with horrified. \"You put fish in his bath? Why? Is it like a baby Jacuzzi or something? And what kind of fish? Like gold fish? Or trout?\"\n\nVictor rolled his eyes. \"No, Donovan. It's a little plastic thing that floats around Noodle-bug's bathtub and it has a little temperature thing on it so you know the water isn't too hot.\"\n\nDonovan was sitting with his head in his hands. \"Why can't I just touch the water? And how the hell do you know about diaper tape and bath fish? And pee-cones?\"\n\n\"Oh, remind me to show you how the onesies work.\"\n\n\"What the hell are onesies? Are there twosies and threesies and one hundredsies? Do they have anything to do with that song you were singing before?\"\n\n\"And I can show you how to use the bottle warmer. And the burp cloths.\"\n\n\"The bottle warmer and burp cloths? What are burp cloths?\"\n\n\"So he doesn't puke on you,\" Victor told Donovan, who was wincing with a pained expression. \"And Noodle-bug loves it when somebody talks to him. Do lots of talking.\"\n\n\"Talking. Finally something I understand. There are ten thousand things I have to figure out and the only one I know is talking. Great odds. Maybe I could use that Prozac after all.\" He looked up at Victor. \"It is regular talking, right? I don't have to learn some secret baby language, do I? Why are you laughing at me?\"\n\nVictor sat chuckling with a huge grin on his face. \"And you don't think you've changed? Donovan, I'm proud of you. You're turning into a real live person.\"\n\n\"What the hell was I before? A robot?\"\n\n\"Pretty much. Your whole life was robotic. You just went through the motions. You got up at the same time and ate the same foods. You never really did anything except work and train. You went weeks without smiling. Now even when you're grumpy you're happy and you're trying all kinds of new things. You eat pizza. You can make toast. You're learning about pee-cones. Back when we were in the training facility, in the pre-Laci days, did you ever think you'd be learning about pee-cones?\"\n\n\"I can assure you, pee-cones did not enter my mind. Pee-cones are not Dominant requirements.\"\n\n\"They are if you're a Dominant-bug with a Noodle-bug.\"\n\n\"I hate that name, Victor. His name is Matthew. Do you call my wife Laci-bug?\"\n\n\"Hell no. She'd kill me.\"\n\n\"So you just live to torment me?\"\n\n\"Hell yes. Me and that little gnome who lives in the trunk of your car. He knows all the best ways to annoy you.\"\n\nDonovan shook his head in frustration. \"Do you see what my life has become? Upstairs is a stuffed unicorn who gives me the creeps because he's always staring at me. Downstairs is my infant son who screams every time I walk within fifty feet of him. There's a growling horse in another state that hates me, and you get guidance from non-existent gnomes. Any chance you or the gnome would happen to know how long it will be until Matthew starts sleeping through the night?\"\n\n\"You still horny? What the hell am I saying? You're always horny. Even when you're grumpy, you're horny. The only time you weren't horny was when Laci was expecting Noodle-bug and that was only because she didn't give you time to be horny. I think she has you beat in the horny marathon.\"\n\n\"And how horny are you, Victor?\"\n\n\"Depends what I'm doing. When I'm hanging with you, horny doesn't come up much, but when Marian and I are flipping for tying privileges, I could run a close second to Laci in the marathon.\"\n\n\"WAAAHHHH!!\"\n\n\"Noodle-bug's awake. C'mon, Donovan, and I'll show you the pee-cones.\"\n\nHe watched Victor happily toddle off to pee-cone land. Pee-cones. Donovan had never even heard the term before and in less than ten minutes it had become a regular part of his vocabulary. Pee-cones.\n\nPee-cones and bath fish and onesies, oh my!\n\nSuper industrial strength Prozac was sounding better all the time.\n\nMaybe he could talk to Virgil and Prince Ogre and get some sympathy. The three of them could form a support group since they were all being neglected by Laci. Maybe they could all use some super industrial strength Prozac. They could get a group rate.\n\nChapter 5 Dominantly Challenged\n\nDonovan felt like a complete and total failure and had a pounding headache when he finally returned to the silent sanctuary of his office after Victor's crash course in Noodle-bug 101.\n\nFor nearly fifteen years his company had grown because of his hard work, dedication and perseverance. He had accomplished things others had failed at. He had quadrupled his own personal fortune and made many other people wealthy by disassembling then reassembling and merging dozens of companies. He had given thousands of people job security and did his part to bolster the economy. He had successfully conducted business all over the world.\n\nHe had trained as a Dominant, excelling to the highest standards of understanding and being in control. As a trainer, he was revered by the wealthiest denizens and habitu\u00e9s in the BDSM culture who called upon him for his knowledge, skill and his ability to obtain quick and lasting results. He could operate and manipulate every type of apparatus and equipment used to discipline a slave.\n\nAnd he had nearly strangled his infant son with a damned onesie.\n\nHe had changed his clothes three times after having been peed on and puked on and screamed at by a miniature, very loud and unforgiving disciplinarian.\n\nFinally Donovan had waved the white diaper of surrender and taken refuge.",
        "The newly reigning Dominant, Master Matthew, seven and a half weeks old and twenty-one inches tall, had defeated him.\n\nThe mighty Master Donovan had fallen and he wasn't sure he'd be getting up any time soon.\n\nThe future seemed dismal. His son wanted nothing to do with him. Eventually the kid would grow up and Donovan would buy him a car and pay for his college education at one of the best schools in the country. Someday he'd turn his business over to his son who would make an even bigger success of it. There would come a time when Matthew would get married and have kids of his own and he'd tell them stories about their reclusive grandfather who had once been a titan of corporate capitalism, a business genius who had never backed down from a challenge, who had squarely faced every adversary and won, a man who excelled in science, mathematics, and engineering, a man who had retired to live in quiet solitude on his own private island of Kalake after he had been taken down by a pee-cone.\n\nWhat a legacy.\n\nHow the hell did Laci do it? She had given birth just a few short weeks ago. She hadn't officially gone back to work for a couple of weeks after the kid was born, but she worked from home keeping up on everything that was going on at the magazine. Even after she had gone back to her job, she attended to every one of Matthew's needs that Victor wasn't attending to and she supervised Victor which was a job in itself. In addition, every single square inch of their home ran smoothly.\n\nShe made it all look so incredibly easy. She could do almost everything. She was smart. She was efficient and organized. She never got tired. She always looked perfect and beautiful. She could do thirty things at once. She was the Warrior Super Hero of wives, mothers, writers, and Prom Queens. Her grandchildren would be proud of her, look up to her, ask for her advice, admire her many accomplishments and feel endless amounts of sympathy that she was stuck with a doddering, feeble-minded, anti-social husband who was pee-cone challenged. Great. Just great.\n\nEven Victor seemed to think he was a lost cause, finally throwing his hands up and admitting that Donovan needed a break from Daddy-bug duty. If Victor was willing to admit defeat, Donovan must have made the leap from hopeless to wretchedly pathetic. At least he'd accomplished something.\n\nHe looked up at the sound of a tap on the door. Victor was standing there looking sympathetic. \"You okay?\" he wanted to know.\n\n\"Sure, Victor. I'm great. I don't think I've ever been better.\"\n\n\"We can try again tomorrow.\" Victor attempted to sound reassuring. \"You did fine for your first time.\"\n\n\"Fine? I did fine? What was the defining moment for you? Was it that I needed nine diapers for a single attempt at diapering? Perhaps it was his never ending impression of that famous Belgian fountain 'Manneken Pis'. According to what I've read, baby's bodies contain more than 70% water. I can totally vouch for that. So much for pee-cones. Personally, I think I'll go with setting off the smoke alarm when I nearly set fire to the pacifier by dropping it in the bottle warmer. That's a moment Matthew will remember for the rest of his life. He screamed almost as loud as the siren. If he didn't need baby Prozac before my attempt at parenting, I'm sure he does now. I was thinking group rate for me, Virgil and the horse, but now we can go group rate and family plan.\"\n\n\"Yeah. Uh...I kinda hate to tell you this but I have to leave and Laci's not back yet.\"\n\n\"You're leaving? I'll be here alone?\"\n\n\"Yeah. Marian has tickets for something and I have to go get ready and pick her up so we can have dinner before the show or play or concert or whatever it is we're doing. Laci did call a while ago and say she was on the way, so she should be back any time now. I already changed Matthew and gave him his bottle. I think the little guy's kinda tired from this afternoon's 'Daddy &amp; Me' session.\"\n\n\"You think?\"\n\n\"Yeah. Well, he should probably sleep for a couple of hours and Laci will be back any minute. Dining room's kinda a mess, but I can deal with it tomorrow. Are you gonna be okay if I get going?\"\n\nDonovan sighed in defeat. \"Sure, Victor. I promise to stay away from flammable objects and if Matthew is as tired as I am, he'll sleep until next week.\"\n\n\"Okay. Well, call if you need anything.\"\n\n\"I will. Have a good time. See you in the morning.\"\n\nSilence. Silence never sounded so good.\n\nHe could only hope he hadn't traumatized the kid. What the hell was Laci going to think when Matthew ran from the room screaming every time he heard a siren or saw a cone shaped object? Maybe she wouldn't notice. Maybe her attention would be focused on Donovan who would also be running from the room screaming. He could tell her it was a Corbett family trait.\n\nHis cell phone buzzed with a new text message. He glanced down at the screen. It was from Laci.\n\n'Stuck in traffic. Be there soon. Love you.'\n\n\"WAAAAAAHHHHHH!!!!\"\n\nAnd the day just got better and better.\n\nWith a deep sigh, Donovan got on his feet and headed toward the dining room, preparing to face the enemy. Hopefully he wouldn't find himself naked and tied to the stroller before the night was over. How would he explain that to Laci? Victor wasn't around to blame it on. How about Virgil did it? Good as any other excuse.\n\nHe stood in the doorway, surveying the wreckage of his once elegant and formal dining room. It looked like a team of infant Dominants had run amok and now their Commander in Chief was red faced, loudly screaming, and demanding total submission.\n\n\"C'mon Matthew. Matt. I need some help here. Victor says you're really smart. He says you're a genius. Any chance you could point to what you need?\"\n\n\"WAAAAAAHHHHHH!!!!\"\n\n\"I guess not. What was that song he said you like? One little, two little, three little...\"\n\nWhat the hell had Victor been singing about?\n\n\"One little, two little, three little... Damn!\"\n\n\"One little, two little, three little... What the hell was he counting?\"\n\n\"One little, two little, three little........DOMINANTS, four little, five little, six little dominants,\n\nSeven little, eight little, nine little dominants, ten little dominants with canes!\"\n\nMaybe not entirely appropriate, but the kid had stopped screaming. True he was staring with suspicion and a slight hint of mistrust, but at least he wasn't screaming.\n\n\"Look, Matt\", Donovan said wearily, \"I know it's been a hard day for both of us. I'm sorry about the smoke alarm and all, but I'm trying to be honest with you. It's just you and me and I know that's a really scary thing, but until someone gets here to rescue us, we're stuck with each other.\"\n\nMatthew gurgled.\n\n\"Yeah, I know. It's not my first choice either, but if you start crying again it's just going to mean a sore throat for you and a worse headache for me.\"\n\nThe kid was staring again, probably trying to evaluate his chances of making it out of their current situation alive. Donovan should know. He was pretty much having the same thoughts.\n\n\"Victor said he gave you a bottle, so you can't be hungry. Any chance you're just really, really tired. I could sing the Dominant song again for you. Maybe it'll make you sleepy. Sleepy would be good.\"\n\n\"WAAAAAAHHHHHH!!!!\"\n\n\"Okay, okay. No Dominant song. Maybe it'll make the slaves sleepy the next time I train. I'll have to remember to try it. Diaper change?\" Matthew gurgled again. \"Yeah, I was afraid of that.\"\n\nDonovan lifted his son out of the bassinet and laid him on the changing table. It only took a minute to remove the diaper. \"Why are these things so much easier to take off than put on? Fuck! Forgot the pee-cone. Where the hell does Victor keep the damned pee-cones?\"\n\nHe looked down at Matthew. The kid was staring.\n\n\"I guess I'm going to have to start watching my language. It won't look good if you're running around demanding a 'fucking' bottle or a 'damned' pee-cone. Maybe I can start tomorrow. Today's been kind of stressful and I'm not exactly in control, which is actually kind of ironic. Do you know where the hell Victor keeps the damned pee-cones? Sorry, but there really should be some kind of pee-cone dispenser. They can send people to the moon, so a pee-cone dispenser should be relatively easy. I would have designed one myself, but I had no knowledge of the existence of pee-cones until today. I guess I can't leave you while I go on a pee-cone hunt. I think they're over there. C'mon.\"\n\nHe picked Matthew up and started rummaging through the cupboard. \"None in here. I was positive he said this was the pee-cone spot. Or was this the burp cloth location? Maybe...Hey! Damn it, Matt! This is a linen shirt. You have to quit peeing on me. You can't just go around peeing on people. Now I have to change again. I hate to be messy. Neat is important. I don't do messy. Or peed on. By the way, are you supposed to be peeing this much? You'll get dehydrated. It's not good to get dehydrated. I can't find the damned pee-cones. Victor's going to have to give me a map to this place. I don't know where anything is. Knowing him, he'll give me the map then rearrange everything just to annoy me. The hell with it. Forget the damned pee-cone.\"\n\nA little over an hour later the Dominant duo were headed back downstairs. Donovan stood at the bottom of the stairs, holding Matthew in his arms and looking down at his son, who looked back with wide-eyed interest.\n\n\"So, I guess I should thank you for being cooperative with the diaper change. This time I was able to manage it using only six diapers. I guess that's an improvement. Can't really be sure. Why the hell is that tape so weird? It sticks in all the wrong places. Oh. And sorry about the powder explosion. You wouldn't think baby powder would contain incendiary devices. Doesn't seem safe. By the way, how the hell do you get the top of the damned powder off the damned powder bomb? Remind me to ask Victor about that. I'll bet you a thousand pee-cones the people who design this stuff have never even touched a kid. Exploding powder isn't safe for a baby or an incompetent father. Take my word for it.\"\n\nThe kid was still staring.\n\n\"You're a stare-er too?\" Donovan sighed. \"Well, at least you're not staring at me like that damned unicorn upstairs. I keep trying to lock it in the closet, but he keeps finding his way back. I'm telling you that thing hates my guts. At least if you're going to stare, you have your mom's eyes. He's got these little black beady eyes and he watches me with this malevolent look. I think he's jealous. I can just tell he's waiting for the right opportunity to stab me with that big, pink satin horn. And you know what his name is? It's Virgil. I hate that name. That's a hell of a stupid name for a unicorn.\"\n\nMatthew started furiously kicking his legs.\n\n\"Thank you!! Finally!! Finally someone who agrees with me! Virgil. Why the hell does she call him Virgil? Stupid name.\" He looked down thoughtfully. \"You know, maybe we can work something out. Just between us. You'll be mobile one of these days, so maybe you can start taking Virgil out for walks. You can dominate him. You seem to understand how that works. Grab him by the damned horn and just drag him everywhere. Down the stairs. Up the stairs. In the garden. Let him roll in the mud a few times. Spill juice boxes on him. Pretty soon he'll have to go. You do that for me and when you're old enough, I'll buy you whatever kind of car you want, as long as it passes the crash tests and it's safe to drive. Is it a deal?\"\n\nMatthew kicked again.\n\n\"Thank you. At least we agree about something.\" Donovan sighed. \"How about we go sit down?\"\n\nChapter 6 The Tell-Tale Dominant\n\nMinutes later they were comfortably settled in Donovan's office. \"I suppose I should also thank you for being cooperative enough to stay in one place while I was changing, although I wouldn't have had to change if you'd quit peeing on me. I can't believe how many times I've had to change because of you and now I'm actually wearing jeans and a T-shirt. I can't believe it. Your mom bought these for me. I've only worn them once, when we went to the ranch. She insisted. I'm sure it won't be a surprise if I say I'm not real good with the ranch stuff, but I can tell you about that later. I like my suits and I always like to look neat and coordinated, although your mom says my ass looks great in these jeans. I don't look at my ass too much. She has a great ass. I'm usually looking at hers, so other than the ranch, I never wear jeans, but at least they're washable. Armani is not. Washable. Usually I wear Armani. Sometimes Gucci. I have some Ralph Lauren and Burberry, but I'm not a jeans guy. I don't do washable.\"\n\nMatthew kicked again.\n\n\"Yeah, well you have to do washable, but wait till you're older. As soon as you can stand up I'll take you for your first suit. Pinstripe I think. Navy blue or light charcoal. Maybe if you look dignified, Victor will stop calling you Noodle-bug. Stupid name. It's as bad as Virgil. Hate that name.\"\n\nThe kid was back to staring.\n\n\"Anyway, I also appreciate the not crying. I know I'm really bad at this stuff, so if you have any helpful hints, I'm open to suggestions. In a few years from now when you need help with calculus, or chemistry, or physics, I can return the favor. Hell of a thing to be an expert in physics and a failure in pee-cones. Actually, pee-cones are the least of my worries. I have to make sure I don't break you. Are you breakable? Your mom won't be pleased if I break you, and speaking of your mom...I wonder where she is. I tried calling when we were upstairs but she didn't answer her phone. I left a message. She said there was traffic, but I hope everything is okay. Usually Victor would be here but he went somewhere with Marian. Your mom should be back soon. I hope. Don't break before she gets back, okay?\"\n\nMatthew hadn't taken his eyes off Donovan.\n\n\"Aren't you tired? Even Victor said you'd be tired. I'm exhausted, but you look wide awake. Victor said you like talking, so I guess we can do that for a while. Uh...I guess I should start by introducing myself. Even though you've been here for a couple of months, we've never actually met, unless you count the day you were born when the doctor decided to hand you to me. Who the hell told him that was a good idea? Believe me, you look a hell of a lot better now than you did then. And there were the few other times I tried to hold you, but you were too busy screaming for introductions. Anyway, I'm Donovan. Donovan Corbett. I'm your father, heaven help you. That pretty blonde lady who's always around, except now when we need her, is Laci. She's your mom, but you've probably already figured that out. And you know Uncle Victor. He's not really your uncle. He's more like...our pet. Don't know why he calls you Noodle-bug. Do you like that name?\"\n\n\"WAAAHHH!!!!\"\n\n\"Well, I don't like it either, but you'll have to be the one to tell him because he doesn't listen to me. He never listens to me. I sort of hate it when he's usually right about things, but I've learned to live with it. What else do you want to know? Victor is married to Marian. I'm still trying to figure that one out. I grew up with Marian. She's my cousin, which also makes her your cousin, which means we're both kind of related to Victor now that he's married to Marian. What I don't understand is why he's married to Marian and why she's married to him. What do they talk about? I can't remember the last time I had a normal conversation with him, so I'm damned if I can figure out how she manages. Maybe they don't spend that much time talking. Thinking about what they do instead of talking is making my headache worse. Let's change the subject.\"\n\nThe kid seemed to be in agreement.\n\n\"I guess Marian and I were lucky. Our family has a ton of money. Maybe that wasn't lucky. I grew up not knowing how to do anything for myself. I still can't do much, but I'm getting better, mostly because of your mom. And Victor, but don't tell him I said that. I don't really bother with most of my family. I have nothing in common with them. They don't do anything except waste time and spend money someone else earned. Marian and I aren't like that. She started a magazine. That's a pretty big thing to accomplish. Your mom works for her. Your mom is a really good writer, so when I'm helping you with the chemistry stuff, she'll be the one helping with the composition and writing stuff.\"\n\nThis wasn't the most scintillating conversation. Why did the kid look so interested?\n\n\"I started a company, too, before I was even out of college. Maybe when you get older I can turn it over to you. It's pretty big now and I have more money than most of my family combined, but I work because I like working and I think I do good things. Basically what I do is buy companies that aren't doing too well and put them together with other companies and make new companies that are successful. Does that make sense?\"\n\n\"Gurgle.\"\n\n\"Yeah, well it's good because companies get to stay in business and people keep their jobs and my company makes money making sure everybody else makes money. It's good to have control like that. Speaking of control, I do something else. I guess it's okay to tell you this considering you have no idea what I'm talking about, but I have another business. I'm a Dominant, you know, like in the Dominant song. It's a little hard to explain, but some people like to be in control and some people like to be controlled and I train the ones who want to be controlled by the controllers. That's actually how I met your mom, although the whole control thing is a little harder to understand when she comes into the story. Hell, I was there and I still don't get it.\"\n\nWhere was Laci? Why wasn't she back yet? He tried her phone again.\n\n\"You see, I have this sort of instinct about most people. It doesn't work too well with your mom or Victor, although, I'm not sure Victor qualifies as a person. It does come in really handy with company business because I know when someone's being honest or trying to cheat me. That's a good thing to know. And with Dominant business, I know when a slave is being trained properly and not getting hurt. That's a really important thing for a Dominant. When I'm doing that, they call me Master Donovan. Your mom calls me that sometimes too, but I don't think she means it in the same way. Hey! Want to hear how I met her? It's a pretty good story, although the beginning wasn't so good, but it gets better.\"\n\nMore staring. The kid could out-stare Virgil\n\n\"We used to live in a different city. I had a really big house where I did my training and Victor worked for me. Your mom worked for a different magazine. The first time I saw her, we were at some party and I noticed her the minute she walked into the room. After a while, I saw her noticing me, but I was noticing her because she's really pretty and she was looking at me like I was some kind of weird science experiment. Trust me, she's looked at me like that many times since. Anyway, I didn't actually meet her until she came to my house. Now this is the not good part. You see, the son of a bitch she worked for tricked both of us, and sorry about the language, but he really was a perverted bastard. His name was Frank Harding, and he tried to get me to train her as his sex slave.\"\n\n\"WAAAHHH!!!!\"\n\n\"Are you sure you don't understand what I'm telling you?\" Donovan looked at Matthew who looked right back. \"Okay, well, at first I was kind of mean to her, but I felt really bad about that, and then I found out the truth about what was happening. Oh. I left out the part about when she tried to kill me. She almost ripped my head off, and how come that's not making you cry? I didn't really understand it at the time, but for some reason I wanted to protect her and I sort of kidnapped her and took her to my island. I have my own island. It's called Kalake. That's a Hawaiian word and it means grace, which is kind of coincidental because your mom's name used to be Laci Grace. Anyway, Victor was in charge of keeping her safe until I got there. Meanwhile Harding burned down my house because he was looking for your mom. He was a really bad guy.\"",
        "\"WAAAHHH!!!!\"\n\n\"Okay, this is getting weird. Are you sure you don't understand all this? I guess not. Well, I went to the island and Harding followed me and he had a gun and had it pointed at me and Victor. I was yelling my head off to try and warn her, but she doesn't always listen. In this case it was a good thing because she has this skill. She is really good at using a whip. She walked into the room with this look on her face like she was sick of all of us but she had a whip hidden behind her back. Damn! You would have been proud of her. She barely moved, but she flicked the gun right out of Harding's hand, then she moved again and coiled the whip around his neck. It was kind of awesome. Victor does have some use, because he grabbed the gun. I was too busy staring at her, kind of like you keep staring at me. Anyway we got rid of Harding and Victor told me some stuff about what happened to your mom before I met her and that was kind of when I first knew she was special. The thing is, I'm always in control. It's what I do and it works really well for me, but when I tried to talk to her I turned into an idiot.\"\n\n\"Gurgle.\"\n\n\"Yeah. I know, but it always happens when I talk to her. See, the thing is, I'm in control all the time except when she's around and that's when I say and do some pretty stupid things. The first time I tried to talk to her, I ended up naked and tied to a door. Then when I tried again, she called Victor for help because she thought I was having a breakdown. After that we were sitting on the beach and I was trying to explain things and I started to tell her a story about a boy unicorn with a magical golden horn that got all big and hard when he saw a pretty girl unicorn. She looked at me like I was a lunatic. Luckily she agreed to come here to Georgia with me and Victor, although I'm pretty sure it was out of pity. I swear, Matt, I'm really good with the science and math stuff, but if I was studying Laci Grace Corbett, I'd get an 'F' minus. Hell, I'd get a negative, double 'F' minus. Every single damn bit of that insight and control I usually have, vanishes. Poof! Vanishes every single time. Don't understand it at all.\"\n\nMatthew continued watching with intent interest.\n\n\"I wonder where your mom is. She should be home by now. Hold on and I'll try calling again.\" Donovan grabbed his phone and dialed. \"It's just ringing and going to voice mail,\" he announced. \"I'm starting to get worried. I'll give her another little while and then I'm calling Marian and Victor. Marian's her boss so she might know what's going on. You're still not tired? I guess that means more talking. Well, I guess I can tell how it was when we came to Georgia.\"\n\nMatthew was kicking again. He must be enjoying himself.\n\n\"When we first came to Georgia, I was living in this house and your mom was living in the guesthouse and she started working for Marian at the magazine. She was already friends with Victor and she got to be friends with Marian, but she wasn't exactly friends with me, at least not the kind of friend I wanted her to be. I don't think she really trusted me yet. You see, your mom's a girl and I'm a boy and that's really good because girls and boys like to do certain things. One particular thing. You're a boy so you'll understand one of these days although you really shouldn't think about doing it until you're older. A lot older, and how the hell am I going to explain this to you when you are older. I can't explain it now and you haven't even asked yet. Just promise me when the time comes you won't ask Victor, or you'll end up believing in storks and cabbage patches and I've already traumatized you enough with the smoke alarm and the powder bomb and the fucking pee-cones. Sorry. I'm really trying to watch my language. I'm still trying to adjust to you, so the bad word thing is going to take a little while.\"\n\nHe could swear the kid was giving him a dirty look. Great. Just great.\n\n\"Now it gets a little complicated because even though I'm still good at understanding other people, I wasn't ever good at understanding Laci and I really thought when we left Kalake things were going to be a certain way, but nothing turns out the way I think it's going to when I'm dealing with her. See the way it works is since I'm the Dominant, she's supposed to be the submissive, but her way of submitting and my understanding about submitting don't exactly mean the same thing. She was making me crazy. Victor would say crazier than I already am, but you have to understand something. Your mom is really beautiful and really smart and the more I got to know her, the more I wanted to do what boys and girls like to do. And she was the one I wanted to do it with, but she didn't seem to understand that. Maybe she did. I don't know, but I tried to convince her. I really tried. I didn't think she'd ever say yes. I tried everything I could think of. Nothing and I mean nothing, worked. I was just about ready to give up.\"\n\nHe was almost positive Matthew was looking at him with sympathy.\n\n\"Then one afternoon, we were sitting right in this room. It was kind of cold and really rainy outside and I said I was going to make a fire in the fireplace. This house is really old and there are three fireplaces. There's the one in this room and the one in the living room and the one upstairs in the master bedroom. They're all kind of unusual and they have this special stonework and we started talking about the fireplaces. She always likes to know about stuff like that and I asked her if she wanted to see the one upstairs, and stop looking at me like that. I swear, I didn't have a single ulterior motive. I was just showing her the fireplace and that was when it happened. She got this look in her eyes and we didn't leave the bedroom for the rest of the weekend. Damn! It was fucking fantastic! Sorry. Bad words again, but it was fucking fantastic. I mean I wanted it to be really good, but it was so fucking fantastic. Who the hell knew the damned fireplaces would make her so horny? See what I mean about not understanding her?\"\n\nHe was staring again.\n\n\"I'm not sure if I should be telling you this stuff. You're not going to have nightmares or anything, are you? I was actually hoping you would start sleeping more. Like at night. Like when I want to spend some time with your mom. Like when I want to show her the fireplace. It would be really good if you slept through the fireplace seminar. We had a lot of fireplace showings before you were born. She really liked the fireplaces. We talked about them constantly. We even talked about them in rooms that didn't have fireplaces. She really liked talking about the fireplaces. I really miss not talking about the damned fireplaces. You have no idea how much I want to talk about them.\"\n\nAnother dirty look. Victor said the kid was a genius. Hopefully all the talk about fireplaces wouldn't come back to haunt him when the kid started asking questions about Santa Claus coming down the chimney. How the hell was he going to explain that?\n\n\"So, your mom and I were getting along pretty well, but I wasn't really sure about everything and then this guy named Trent Nichols made friends with your mom. Not fireplace friends, just friend friends. Except I thought she wanted them to be fireplace friends because she went to California with him and that wasn't fair because I wanted to be her only fireplace friend. Then Victor told me he and Marian were getting married and I got all mad and decided I didn't need her or anybody and that I could take care of myself. You know how the dining room looks now? Well, when I was done taking care of myself, the kitchen looked a lot worse. Naturally, that was the day she came back from California and she almost killed me again, only this time it was with manual labor. Damn she's bossy. She made me scrub every inch of the fucking kitchen. I work every day, but never like that. Then she made me eat pizza with pineapple, which is actually pretty good. Then she taught me about tying privileges, which are also pretty good. I'll explain those when you're older. A lot older. Maybe.\"\n\nSkeptical? The look was skeptical. The kid was two months old. How the hell did he know skeptical?\n\n\"After the scrubbing lesson and the pizza lesson and the tying lesson, we were talking. She told me some stuff we had never talked about before and this is kind of hard for me to tell you, but it's important. I don't bother with my family because they're worthless and they don't care if I don't bother with them, but your mom's parents treated her really badly. I'm almost as mad at them as I am at Frank Harding, because they had no right to do that. Not to her. She's very special and she's the kindest most amazing person in the world. It makes me so mad they hurt her and if I thought she wanted them in her life and it mattered to her, I'd hunt them down and drag them here. Believe me Matt, I know how to persuade people to do what I want them to do. Well, not her, but other people. The thing is, she's not one of those people who let things get to them, you know. I admire that about her. She could have been a really angry and bitter person, but she's not. She's happy. She's happy with me, and she's happy with you and our strange little family with Victor and Marian. The important thing I want you to know is that's not happening with us. I'm not good at pee-cones and I may have come close to choking you with that damned onesie thing, but I will never turn my back on you. Ever. We probably won't always agree about things, but that doesn't matter. I will always be here for you and your mom. I promise.\"\n\nThe kid looked like he understood every word. Maybe he really was a genius.\n\n\"Anyway, that was the first time I told Laci how I really felt and how much she meant to me. And that I love her. Then she told me she loved me. Wow! I didn't know I could feel that good.\"\n\nMatthew erupted in a series of loud burbles and sputters. Was he asking a question?\n\n\"I'm not exactly sure what you mean, but I'm guessing it's about what I just said. I suppose it's a little hard to understand, but your mom is really special. She made me believe love is a real thing. Before her, I thought it was only in books and movies. It's good I have my work, because my work keeps me sane. Usually when I'm around here with your mom, I'm a mess. She confuses the hell out of me and I feel all kinds of things I never felt and I don't understand any of it but it's a good confusion. She understands me and that's an incredible thing because I don't even understand me, especially after a conversation with Victor. The thing is, before your mom, I just did stuff. Now I experience everything. Like pineapple pizza. I would never have tried that if it wasn't for her. She gets me to try and do all kinds of things. She makes me happy. I wasn't happy before and I didn't even know it. And I want to make her happy. I love it when she's happy. Hey! I have another good story for you. Want to hear it?\"\n\nMore kicking.\n\n\"Well, I knew I loved her and wanted to get married to her and I bought a ring with a blue diamond. That's what you do when you want to get married. You give the person you want to marry a special ring. I bought a blue diamond because she likes blue and it matches her eyes. She has really pretty eyes, only I wasn't sure how I wanted to give the ring to her. I knew she would like it but I wanted her to really like it and I was all nervous and confused like I always am. I thought of about a hundred different ways but none of them seemed right, so finally, I got an idea. She loves pineapple pizza and we had it the first time we said we loved each other so I got her a pineapple pizza. I asked the pizza place for an empty box, and I put the ring in the empty pizza box, so when I gave her the boxes, she thought she was getting two pizzas. You should have seen the look on her face when she opened the box with the ring. Wow! She kissed me about ten thousand times.\"\n\nMatthew appeared to be gurgling his approval.\n\n\"Yeah. I did good with that one. See. I'm not always crazy. The day we got married was really good, too. We didn't have a big wedding, but that was what she wanted. She looked so beautiful. She's always beautiful but she looked like an angel that day. Or maybe a Prom Queen. Laci has this special kind of glow thing. It's like sunbeams are shooting from her and that day she was lit up like you wouldn't believe. For our honeymoon she wanted to go to Kalake. I would have taken her anyplace in the entire world, but that was where she wanted to go. It was really great. We talked about fireplaces all day and all night long. We talked about them all over the place. Inside. Outside. There's a little hidden cave down by the beach and we even talked about fireplaces there. I never talked about fireplaces so much in my entire life. She knows a lot about fireplaces. She knows things about fireplaces even I don't know, and I'm kind of a fireplace expert. You know, Matt, I'm hoping you'll try and have a really good and long night of sleep tonight. It's been quite a while since your mom and I discussed fireplaces and I really want to talk about them with her. For a long time. We need to have a very long and detailed discussion about fireplaces. Where is your mom? Maybe I should try calling her again.\"\n\nDonovan dialed Laci's number, but again it went straight to voice mail. Next he tried Victor. No answer. He tried Marian's phone. No answer. Finally he tried Laci again. He left another message. \"Hey! Where are you? Matt and I are getting really worried. Call me. Love you.\" He smiled down at his son. \"We both love you. Call me.\"\n\nChapter 7 Mission: Submission\n\nLaci wasn't far from the house. She knew every time Donovan tried to call and she'd heard every one of his messages. Now that she'd finally heard the one she had been waiting for, it was time to head home.\n\nHer little Dominant needed a few kisses and cuddles. Her bigger Dominant needed a lot of kisses and cuddles. She had known exactly what she was doing and what to expect, and now she couldn't wait to get home to see them.\n\nMatthew was still watching Donovan with wide and curious eyes. Instead of being tired, he was contentedly listening to every word his father was saying.\n\n\"I really am starting to get worried. I wonder if there's something wrong with her phone. I know she can take care of herself, but I still want to know she's okay, and I miss her when she's not here. Man, she shocked the hell out of me the night she used the whip on Harding. A few months after that I asked her to show me what else she could do. Trust me on this, Matt. Do not make her mad when there's a whip around. Actually it's wise not to make her mad anytime. Even though she looks really tiny and delicate, she's not. She's a steamroller masquerading as a Prom Queen. One time she even kicked me in the balls. There's this saying about how people who get hurt see stars. Yeah, well, it's true. I saw all kinds of pretty little stars that night. She didn't really do it on purpose. It was my own fault because I sneaked into her room, but I was not prepared for Ninja Laci. That was the only time I was glad to see Virgil. He sort of cushioned the blow. Do you feel that thing under you that keeps getting hard every time I talk about your mom? I'm not sure it would be working as well as it does if it wasn't for Virgil. Still hate him though. Stupid unicorn. Hate the fucking horse, too. Want to know about the horse?\"\n\n\"Gurgle.\"\n\n\"Well, there's a ranch not too far from here and your mom used to work there. She likes to go visit whenever she can and I used to hate that, but then she told me about the people who own the place and how nice they were to her. They're like her family and anybody who's nice to her is okay with me. She'll bring you up there when you're older. You'll like it, but it's kind of dusty and dirty and ranch-y. You may recall our earlier discussion about me not doing too well with dirt and mess. There's this big horse up there and she made friends with him. She calls him Prince. They call him Ogre. They're right. I used to ride horses, but I rode real horses. Not monster horses. Prince Ogre is huge and grey and mean to everyone except her. His head is bigger than you and he's totally and disgustingly in love with your mom. I've seen it with my own eyes. He'll be stomping and snorting at the people who work there, but when she calls him, he gets all mushy and he tries to hug her and nuzzle her. It's revolting. He'll probably like you, but he hates me. He growls at me. Horses aren't supposed to growl. It's kind of unsettling to be in competition with a stuffed unicorn and a growling horse, but I keep reminding myself I'm the one who talks about fireplaces with her. Speaking of fireplaces, can I remind you again that I really want to have a talk about fireplaces with her? Tonight would be a good night for a talk about fireplaces. It would be a perfect night for a fireplace conference. We have a lot of fireplace talking to get caught up on. Your mom and I haven't talked about fireplaces since you were born and I really need to talk to her about them. A good long talk.\"\n\nHe could swear Matthew was burbling in agreement.\n\n\"You know, I was in this room when I realized you were coming. She gave me that picture on my desk for our first anniversary. Kind of appropriate. It was the very first picture of you for our first wedding anniversary although I thought you were a peanut. I couldn't understand why she was giving me a picture of a peanut. That's a good name. I can call you Peanut. Hell of a lot better than Noodle-bug.\"\n\nThere was a lot of leg kicking in agreement.\n\n\"Okay. I'll call you Matt or Peanut, although I'm pretty sure Victor is going to stick with Noodle-bug, so you might as well get used to it. I suppose I should get a new picture of you, but I kind of like the peanut. Anyway, I got so nervous when I realized what was happening I knocked over the table by the door. Luckily it only has some books on it, but you should have heard the crash. It was almost as bad as the smoke alarm. See, your mom didn't exactly tell me about you. She was giving me hints and sort of let me figure it out myself. I guess it was her version of the pizza boxes. It was a good surprise but I was really nervous. I'm still nervous, although taking care of you today has turned out pretty well. Victor will probably be shocked considering what he saw earlier. He knows I'm not even good at taking care of myself. That's why he's here. He and your mom take care of both me and you. Don't tell him I said this, but Victor's a good guy even though I'm pretty sure he wakes up every day planning how he's going to annoy me. Annoying me is kind of like his hobby, but he really cares about all of us. I care about him too. He'll never let any of us down. Hey! That sounded like your mom's car. Good thing I didn't break you. I don't think she'd want to discuss fireplaces if you were broken. Let's go meet her. C'mon.\"\n\nDonovan got to his feet and headed for the door. A couple of seconds later he opened it for Laci. Her sunshine smile could not have been any brighter at the sight of her favorite man in the entire world cradling her second favorite man in his arms.\n\n\"Hey!\" he greeted her, \"we were worried about you. Everything okay? I left a bunch of messages.\"\n\n\"I know,\" she responded reaching up to give him a kiss. \"I heard every one of them. It looks like you've got everything under control here. What time did Victor leave?\" She leaned down to kiss Matthew.\n\n\"A couple of hours ago. How did you know he wasn't here?\"\n\n\"Marian told me she had tickets for the symphony.\"\n\n\"Victor is with Marian at the symphony? What the hell does he know about the symphony? He spent all morning singing the Dominant song.\"\n\nShe gave him a quizzical look. \"There's a Dominant song? Is there a secret Dominant handshake, too?\"",
        "Donovan sighed. \"It's kind of a long story. I can tell you later and please don't go in the dining room and don't ask questions if you do. Victor said he would take care of it in the morning. Of course, that was before the powder bomb exploded.\"\n\n\"The powder bomb?\"\n\n\"Yeah, but all things considered, Peanut and I did pretty well,\" he told her proudly.\n\n\"Peanut?\"\n\n\"Matt says he likes the name Peanut better than Noodle-bug.\"\n\n\"Matt told you he likes Peanut?\"\n\n\"He sure did. I'm starving. What would you like for dinner? I was thinking about ordering pineapple pizza. Peanut and I have been talking about it all afternoon. Somehow I seem to be in the mood for pineapple pizza. Is that okay with you?\"\n\n\"You and Peanut spent the afternoon talking about pineapple pizza?\"\n\n\"We talked about a lot of things. We had a pretty good afternoon.\"\n\n\"Donovan? Are those the jeans I bought? You swore you'd never wear them unless you were at the ranch.\"\n\n\"Yeah. We had a little pee-cone problem, but we figured things out. Right, Matt?\"\n\nStill in his father's arms, Matthew gurgled in response.\n\nHer sunbeams were shooting everywhere. \"You and Peanut seem to have managed quite well on your own. I'm very proud of both of you.\" She kissed Donovan again. \"You're a wonderful dad. I knew you would be as soon as you gave yourself the chance and I would love some pineapple pizza.\"\n\n\"Okay. Why don't you get comfortable and I'll call in an order. When you're done, maybe you could walk me through a diaper change. We're not too good with that yet, right Matt? I'm pretty sure I remember how the bottle warmer works though.\"\n\n\"I'll be back downstairs in a few minutes, and Donovan,\" she was still smiling, \"your ass looks fantastic.\"\n\nHe watched her walk out of the room then looked down at Matthew. \"I have a feeling your mom set us up. Did you hear what she said? She heard all my messages, she knew Victor wasn't going to be here and she knew I'd be fine if I gave myself the chance. She's very smart. A little too smart. And sneaky. I think we both got a Laci lesson in submission. I told you she was confusing, but she also thinks my ass looks fantastic. I'm not confused about that. I have a feeling she'd really like to have a nice long talk about fireplaces later. Damn, I love her! C'mon. I'll teach you how to order pineapple pizza.\"\n\nAfter pineapple pizza, bottle warmers, diaper changes and more diaper changes, Donovan was standing alone and silent in the tranquil blue and cream room watching his infant son sleeping. It had been a remarkable day, thanks mostly to his even more remarkable wife. Donovan Corbett was a dad and even though he might need a little training, he was going to be great at it. Laci had never doubted him for even one minute.\n\nChapter 8 Shoe-gasms\n\nWhere was Laci?\n\nAfter helping to settle Matthew, she said she had a few minutes of work to do on the computer and then she'd be back. Donovan had headed for the shower hoping she would join him, but she hadn't appeared. Damn! She'd had a long day. Maybe she was too tired to talk about fireplaces.\n\nHe stood under the cascading water, letting the stress of the afternoon wash away. All things considered, the day had ended pretty well, considering it had started with a onesie debacle. And a flaming pacifier. And a powder bomb. And the Dominant song. He was going to have to talk to Victor about that and find out the actual words. It didn't seem like the best idea for Matthew to go around singing the Dominant song. He had to smile. One afternoon with a Peanut and he was already thinking like a dad.\n\nWhere the hell had Laci learned so much about control? Was there a day that had gone by when he wasn't somehow surprised by her? She had quietly and stealthily dominated him into submitting to his own fears about interacting with his son and he had mastered it like he did almost everything else. She had more confidence in him than he had in himself. Kind of interesting how much she had taught him, considering he was the trainer. Amazing how much she believed in him.\n\nHe couldn't wait to see the expression on Victor's face in the morning when he walked into the house to find Matthew snuggled contentedly in his father's arms. It wasn't too often he had the opportunity to shock Victor. Might as well enjoy it while he could. He might even help with cleaning up the powder bomb explosion after working in a few lessons on how to handle the damned thing in the first place.\n\nWhat an experience to spend the afternoon telling his infant son so much about the past couple of years. Hopefully Matthew wouldn't actually remember it. He really didn't want the kid growing up with some weird obsession about fireplaces. Or an irrational fear of unicorns. Virgil. Stupid name.\n\nMatthew Donovan Corbett. Occasionally known as Matt, Peanut, or Noodle-bug. He almost couldn't wait for him to wake up so they could play with some of those strange looking toys Victor seemed to be enjoying so much. After a good night of sleep. The kid needed his rest. A long rest.\n\nAnd where the hell was Matthew's mom? The Peanut had an exceptionally busy day, hopefully busy enough to sleep through at least a brief discussion about fireplaces. He'd just have to tear her away from work and get her upstairs. It was for her own good. She must be exhausted from all that driving.\n\nDonovan stepped from the shower and dried himself off, then knotted the towel around his waist. He flung open the bathroom door and almost screeched to a halt, his jaw dropping in shock.\n\n\"Holy fuck!!\"\n\nYou'd think he would have learned his lesson after all this time. The Prince of Darkness had once again underestimated the Prom Queen.\n\nCandles were flickering in the room and there she was, half sitting, half reclining on the bed, sparkling all over the place and wearing nothing but a black lace thong and the highest, fuck-me-est heels he had ever seen. Damn! She was so ready for a fireplace symposium.\n\n\"Good evening, Master Donovan. I was actually planning on some unholy fucking, but we can do it your way, too. You've had such a difficult day. How may I serve you?\"\n\nHe should probably say something but he couldn't seem to stop staring. First the unicorn, then the Peanut, now him. It wasn't polite to stare, but DAMN! She really never had managed to get the whole Dom/sub thing straight, but maybe her way was better. It was always good to keep an open mind.\n\nLaci had that look in her blue eyes and suddenly Donovan found himself on the bed, his hands tied together and to the headboard. How had that happened? Wasn't he wearing a towel? It seemed to have mysteriously vanished along with his illusions of control. Hypnosis! It had to be hypnosis.\n\nShe was never quite sure about her favorite part of submission, but it always started with his confusion. He truly never seemed to have any idea about what was happening to him. Poor guy must be suffering from temporary blackouts. Nothing to worry about. He'd be just fine. Eventually.\n\nShe had to start with a kiss. Many kisses. That was tradition. He had the best lips. Nibbling on his lips was wonderful, especially when he started nibbling back. Donovan was always such a gentleman and gentlemen always kissed back when they were kissed. He was so good at being a gentleman.\n\nHe always seemed to want to know exactly what she was planning before she did it. That was easily dealt with. Forcing his eyes to close with kisses to his eyelids was a perfect solution. Moving from his eyes to that spot by his earlobe then back to his eyes was sure to confuse him even more. First relaxed, then stimulated, then relaxed, then aroused. Switching back and forth between ears was good. Now it was back to eyes. Another nibble on his lips, then back to the ears. Now the side of his neck. He always appreciated her attention to the side of his neck. Right there. That was the spot. The shuddering had started. Any second now and he'd be too dazed to even think about opening his eyes. So much was going on. He was going to forget all about watching.\n\nIt was time for the scalp massage. Lightly dragging her nails through his thick, dark, still damp from the shower hair felt really good. He loved that. He was already making that little growling sound in the back of his throat. Why the hell was he always so bothered by Prince Ogre? The two of them practically spoke the same language.\n\nHe was already completely relaxed and completely aroused and she was just getting started. Her kisses had moved to the base of his throat, along his collarbone, sweeping across the tops of his shoulders. He was almost disoriented with contentment and the growling was getting louder. His growl was so much sexier than Prince's growl. She'd have to remember to tell him that one of these days.\n\nShe was moving on, dragging her nails in tiny circles at the top of his chest. More shuddering. This was always one of the best parts. The look on his face was unbelievable. He was so calm. He looked like he was floating on a cloud. Donovan was always so strong, so proper, so much in control, until she wandered into the room. It was good to see him unwinding and even better to know she was the only one who could actually get to him like this. He was so good at dominating.\n\nShe was brushing her hair over his chest. He liked that, too. His growls were turning into those little moans. Fascinating how something so small could turn him on so much. Those shoes she was wearing hadn't hurt either. That look on his face when he came into the room and saw her waiting. Wow! Seducing her husband was the best, and those shoes weren't going anywhere. She'd probably end up wearing them more than all the rest of her shoes, and they'd never even make it out of their bedroom.\n\nTime to start getting serious. He really had been through a lot today. He deserved a little special attention. She was kissing his chest and going lower and lower and lower. He was already tensing up, knowing exactly where she was headed. He was not going to be disappointed.\n\nShe could remember the first time she ever heard of Donovan Corbett. She always thought he was enigmatic, mysterious, and gorgeous, but never did she think she'd be so happily married to him, sharing his life, giving birth to his son. Doing what they were doing right now. Was he mumbling about a fireplace? What the hell was he talking about? Oh well. It didn't matter. If it made him look as happy as he looked, he could talk about whatever he wanted. But a fireplace?\n\nHer tongue was flickering the very tip of his cock. That made him crazy. Almost as much as having his hands tied so he couldn't touch her. Not that she didn't love his touch. The things he could do to her with his fingers and tongue could make her see more fireworks than any Fourth of July celebration, but giving him pleasure was breathtaking. She loved seeing how much he truly trusted her.\n\nThe man seriously had the most perfect cock, not that she was a cock expert, but it was perfect for her. The tip was so soft and smooth. She loved touching it with the edge of her nail, gently. So gently. He wasn't just growling. He was damn near roaring.\n\nNow she was using her teeth, grazing him ever so slightly. He had tried to explain how painful it could be if she used her teeth the wrong way, but he'd never quite managed to make that argument stick. Good thing she didn't know the wrong way. He seemed to enjoy her way, just fine.\n\nSecret spot time. That tiny spot under his cock, right below the tip. Sometimes she used her flickering tongue. Sometimes her teeth. Sometimes the edge of her nail. Tonight, she was using all of the above. Oh, he liked that. Was he still talking about the fireplace? Talking was changing to moaning. He was definitely moaning. He hadn't been this happy for the last seven and a half weeks.\n\nAbstaining from sex since Matthew's arrival hadn't been easy for either of them, although he really did need a little break after all those weeks of horniness. Okay, maybe she had twisted the truth just a little by blaming it on her hormones. Even though he was exhausted, he really hadn't seemed to mind that much and she had to give him a standing ovation for all those different and creative positions they had discovered. He was amazingly flexible. They were absolutely going to do that thing on his office chair again. Even if it had taken him about twenty minutes to regain his equilibrium. Small sacrifice.\n\nNow she wasn't playing fair, but kissing and gently nipping his inner thighs was too good to pass up. He seemed almost afraid to ask where she had learned to do some of the things she did to him. He tried several times, but it was almost like he didn't really want to know. The ranch certainly had been an educational place, especially at the end of a long hard week when all the guys would sit around and drink and talk up a storm. They almost seemed to forget she was there, but she had learned quite a bit about what men liked from listening to them. Who knew men gossiped so much when they got drunk? She had eavesdropped on the most amazing things. She'd have to tell him that. One of these days.\n\nHe liked the kissing and nipping. He was actually breaking out in a cold sweat. Not playing fair was good. Not playing fair with Master Donovan was fantastic. Damn he was sexy!\n\nSecond secret spot time. Donovan had erogenous zones, nerves endings, and pressure points all over the place, but this one was the best. The ticklish spot under his balls. A flickering tongue. The edge of a nail. A little kiss. DAMN! He was shaking enough to mix a martini. Maybe she'd remember that for next time. He'd probably enjoy a cool drink after she was finished.\n\nHe was pretty much ready to come, but she wanted to tease him just a little longer. She was touching the backs of his knees, making little circles with her fingertips. The groaning was starting again, but she wasn't finished yet. Of course she understood the whole Dominant/submissive thing. She wasn't an idiot. Always being strong and in control was how he lived his life, how he ran his business, but he knew that she knew he sometimes actually enjoyed letting her have her way with him. Just as long as he was always in control. The very sexy Master Donovan was always in control.\n\nShe was almost finished. And so was he. She was rubbing his legs with those amazing shoes and he was loving it. Now it was time for her favorite part. She deserved some fun, too. He was so hard it was easy to straddle him and envelop him with her soft wetness. Just for good measure she ran the tips of her nails across his flat stomach. Every one of his senses was being assaulted. She could feel him clenching. Quivering. Shuddering. He was ready and so was she.\n\nOkay. Fireworks time! Sky Rockets! Roman Candles and Sparklers, too!! HAPPY FOURTH OF JULY!!\n\nHe was struggling to open his eyes. How the hell did she always manage to do this? Why wasn't he used to it by now? Had he been babbling about the fireplace?\n\nHe was finally able to focus and there she was, glowing as brightly as one of the candles. Wearing only those shoes. Fuck! He was going to be in major trouble every time he thought about those shoes. It wasn't dignified to have a shoe-gasm in the middle of a business meeting.\n\n\"What the hell did you do to me this time? And how did you tie me to the bed without me knowing you were doing it? And where did you get those shoes? And are you planning to untie me?\n\nLaci reached over his head and released his wrists from the headboard, without untying them. She gently massaged his shoulders and leaned down for another kiss. \"Thank you for dominating me.\"\n\nHe shook his head in frustration. Might as well just give up and go with it. \"You're very welcome. Dominating you is always a pleasure even when I don't know I'm doing it.\" He held up his hands. \"Could I dominate you into untying me?\"\n\nUh oh! She had that look in her eyes again and he hadn't had time to recover from her last bout of submission. Damn. She was slithering, straight up his body, into the circle of his arms. She was so good at slithering. Did Prom Queens take slithering lessons? Did they not get their tiaras until they learned how to slither? She had totally earned her tiara.\n\nShe didn't stop until she was completely on top of him, eye to eye, lips to lips. Her hands were free, but his were tied together behind her back. And she was still wearing those spectacular shoes. He was pretty sure another shoe-gasm was coming on. How did she manage to slither wearing those shoes?\n\nOkay. This was not fair. What the fuck was she doing to him now? He was struggling to get his hands free. He really wanted to touch her, but her knot tying skills were comparable to her slithering skills.\n\nWas she . . . rocking? She was rocking. Back and forth. Harder. Harder. Damn! She flipped them over. He was on top but his hands were still tied and trapped under her. During which insane moment had he actually thought she might be tired?\n\nThose nails. The way she ran them up and down his spine was electrifying. And that spot. Oh god, that spot. How did she know every single spot on his body that made him tremble? Had she also taken a class in Donovan's Bodily Geography? She must have been the damned valedictorian. And he was getting rock hard. Again. In record time. The Prom Queen didn't just slither, she was a submissive puppeteer. And she knew exactly which puppet strings to pull. So not fair that his hands were still tied.\n\nWas she actually arching her back and angling her hips so that he could thrust into her? Damn she was limber! Okay, that was new. She'd never done that before. Finally he could take back some control. He could thrust, slowly, rhythmically. She was loving that and she was matching him, move for move and thrust for thrust. Damn that felt good.\n\nHe was picking up the pace, or maybe she was picking up the pace. Oh hell. She hadn't had sex for all this time either. Was she planning to make up for the entire seven and a half weeks in one night? Was she going for another trifecta? If she was, she was totally forfeiting tying privileges. He had to take control of something. No tying privileges. At least for the rest of the night.\n\nHer legs were wrapped so tightly around him and he could feel those shoes rubbing against his ass. Those shoes. Those remarkable shoes. Those phenomenal shoes. Just thinking about her wearing nothing but those shoes. HA! He was right! Oh FUCK!! Another SHOE-GASM!!\n\nChapter 9 Do Unicorns Have Nine Lives?\n\n\"You're very quiet.\"\n\nShe had rolled them over again and was nestled in his arms even though his wrists were still tied behind her back. Exploding shoe brain seemed to have subsided and he was finally starting to breathe normally again as he smiled down at her. \"I was just thinking about how many times I've been naked and tied to something since I met you. Hasn't always turned out so well, until tonight. I don't mind being naked and tied to you. Especially when you're wearing those shoes.\"\n\n\"I'll keep that in mind. Shall I untie you?\"\n\n\"No rush. My wrists are already numb. A few minutes more won't hurt.\" Reaching down she freed his wrists, taking time to massage the feeling back into them. \"Thank you.\"\n\n\"You're very welcome.\"\n\n\"I meant thank you for earlier. For forcing me to spend the day with Matthew. He's pretty amazing. I spent all afternoon talking to him and I swear, he understood every word, although I hope not. Especially not all the stuff about the fireplace.\"\n\n\"What about the fireplace?\"\n\n\"I told him about how I was showing you the fireplace and we ended up doing what we did tonight and how good it was. You don't think he'll remember that, do you?\"\n\n\"Donovan, he's only two months old and even if he does remember, what's wrong with him knowing how much his parents love each other?\"",
        "\"I guess.\" He was silent for several minutes. \"Laci? What would you think if I stopped training for a while?\"\n\nIt was her turn to be silent, then she sat up looking at him with concern. \"Donovan, you love training. It's part of who you are. Why would you want to stop? Are you okay?\"\n\nHis smile could not have been any bigger. \"I'm fine. I swear, but at some point this afternoon I suddenly realized how much we have to look forward to over the next few months. Matt's going to start laughing, reaching his little arms up when he wants to be held. It won't be long before he starts talking, walking, running all over the place, wanting to play with Virgil. If I'm gone for a month at a time, I'm going to miss all of that and I don't want to miss a minute of it. I can't wait to see how cute he's going to be dragging Virgil all over the place. I'm not sure I'm ready to give it all up forever, but for a while.\"\n\nShe snuggled back down into his arms. \"You know, Master Donovan, I think you need a spanking for doubting yourself. You're a great dad.\"\n\n\"No, Laci. No. Not happening. No. Never. No. Absolutely no. Not ever. No.\"\n\n\"Will you consider wearing jeans once in a while?\"\n\nHe groaned. \"Maybe. I'll think about it. Only if they're the ones that make my ass look really good.\"\n\n\"Your ass always looks good.\"\n\n\"Thank you. Hey! Do I still get to spank you? I haven't done that in a while.\"\n\n\"I'll give you my answer after we go jeans shopping.\"\n\n\"You're blackmailing me? You really need to try understanding how the Dom/sub thing works.\"\n\n\"I guess you'll just have to keep training me. As I recall, I'm a work in progress.\"\n\n\"Was I ever in control?\"\n\n\"Donovan, you're always in control, but now you're in control of other things, different things, things you never controlled before. Maybe your need for control has shifted a bit.\"\n\n\"Victor did say how much I've changed. I can't wait to see the look on his face in the morning. He tried to give me a crash course in taking care of the Peanut, and it didn't go so well. He's going to be shocked at my sudden ability to not set off the smoke alarm.\"\n\n\"You set off the smoke alarm, too? I have to confess I couldn't resist sneaking a peak at the dining room disaster.\"\n\n\"Yeah. It'll look better after we clean up the powder bomb explosion,\" he assured her.\n\n\"Donovan, I should probably prepare you. Victor may be a little unhinged in the morning.\"\n\n\"Unhinged? More unhinged than he usually is? Why?\"\n\n\"After I finished the interview earlier, I called Marian and she had just gotten off the phone. She got some unexpected news and she was planning to tell Victor in the morning before she leaves for work. She thought it would be better for him if he was distracted with looking after you and Matthew.\"\n\n\"Better for him? What's wrong? Is Marian okay? It's not Victor is it? What the hell is wrong, Laci?\"\n\n\"Do you remember just before Victor and Marian got married and they were talking about adopting a baby?\"\n\n\"Of course. They went through the whole process, but Marian was having second thoughts. She spends so much time working and she wasn't really sure about the whole thing. Victor was disappointed. That's probably why he's so attached to Matt.\"\n\n\"Well, she never contacted the adoption agency and after seeing how much fun she was having with Matthew and how good Victor has been with him, she started having second thoughts about her second thoughts. She got a call yesterday and there's a little boy available. His name is Jeremy and he's just a few weeks older than Matthew. They should have him by the end of the month.\"\n\nThere were several seconds of silence. \"Victor is going to be a parent? Victor? Shady background Victor?\" Donovan sighed. \"Damn good thing he attended The Poppins Academy of Dubious Lock-Pickers and Swaddlers. Victor?\" He sighed again. \"Well, it will be fun for Matthew to have a cousin to grow up with. Jeremy, huh? I can see it now...Matthew and Jeremy learning to talk and walk. Then learning to run. Pretty soon both of them will be dragging Virgil all over the place. Poor, old Virgil. He may have had a chance with one kid, but he'll never survive two. Especially two rambunctious, little boys. Poor Virgil.\" For some reason Donovan didn't sound that sorry. \"Don't worry. When the day comes that Virgil is ready for the trash, I'll buy you a new unicorn. One without beady eyes. Poor Virgil. His days are numbered. Guess I'll be buying two cars in about eighteen years.\"\n\n\"Why will you be buying two cars in eighteen years? And what does that have to do with my unicorn?\"\n\n\"What? Oh. Uh, I just meant that earlier when Matt and I were talking, I promised to get him a car when he was old enough to drive, so now, I guess I'll be buying one for Jeremy, also. This will be like having two kids without actually having two kids. Nothing personal, but I'm not sure I could survive another bout of pregnancy hormones. Are you okay with just having Matthew?\" he questioned.\n\n\"I really am. I'm very happy with you and Matthew. Because of your introduction to Marian, I have a job I love and I have a perfect little son and I have you. Thank you, Donovan. There isn't anything else I want. There isn't one single part of my life that I would change. I love you very much.\"\n\nHe leaned down to kiss her. \"And because of you...I have you. You and Matt. Nothing else I want either, except, maybe, more shoes. When we go jeans shopping, I think we also have to go shoes shopping. How many colors do those shoes come in? I may have to build you a shoe closet. Really amazing shoes. You, Matt and shoes. I'm happy. I love you too, even without shoes.\"\n\n\"You and Victor are going to have so much fun with Matthew and Jeremy. You'll be taking them to the playground and teaching them how to swim. Showing them how to finger paint.\"\n\n\"Finger painting is messy and playgrounds are dirty. Does this mean I'm going to be hanging out with Victor and Matthew and Jeremy while you and Marian go to work? I work, too, you know.\"\n\n\"True, but you did say you didn't want to miss one minute of watching Matthew grow up. You'll have plenty of time to work and still have time to play with Matthew and Victor and Jeremy and the dog.\"\n\n\"I guess. Finger painting, huh? Wait! Dog? What dog?\"\n\n\"Two rambunctious little boys are going to want a dog. They can only roll around with a stuffed unicorn for so long and like you said, eventually Virgil will be heading to unicorn heaven.\"\n\nShe sounded very definite. At least she was accepting the demise of Virgil.\n\n\"But, Laci, dogs are messy. They shed and they drool. They track muddy paw prints everywhere. They smell funny. They want to sit on the furniture. Dogs smell like dogs. And I think they have beady eyes. Do dogs have beady eyes? I know they growl. A dog will hate me. He'll be in love with you and Matthew and hate my guts. A dog? I don't know about a dog.\"\n\n\"He'll love you. Just wait. He'll run to greet you every time you walk in the house. He'll want to be with you constantly. And since we'll eventually be getting rid of the unicorn, we can name him Virgil.\"\n\nWhat was that strange sound?\n\n\"Donovan? You really need to try understanding how the Dom thing works. I don't think Dominants are supposed to cry. Are they?\"\n\n*****\n\nI am so grateful for all your comments. When I started Prince &amp; Prom Queen, I wasn't expecting this much positive feedback. Let's be honest -- how many stories on Lit. have a stuffed unicorn in them? Virgil is quite thrilled with his fan club!\n\nA very special THANK YOU to Bigg_Mike for being a terrific editor and always coming through, no matter what!\n\nCHWH"
    ],
    "authorname": "coldhands_warmheart",
    "tags": [
        "romance novella",
        "humor",
        "strong woman",
        "male dominant"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/prince-of-darkness-vs-prom-queen-04"
}