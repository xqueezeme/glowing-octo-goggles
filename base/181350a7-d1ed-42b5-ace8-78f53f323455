{
    "title": "Secret Smiles and Three Little Words Pt. 41",
    "pages": [
        "Chapter 57 \n\n\"These sessions are going nowhere!\" he raged suddenly, standing up and walking to the window. \n\n\"Jack,\" Sy said patiently. \"These things take time.\" \n\nJack had been on his sabbatical now for three weeks. He was still no further along that he was when he got here. He was still dreaming of her...sexually. He was still seeing her daily. \n\n\"Sy,\" Jack exhaled as he leaned his head against the glass of the window. \"I don't think this is going to work.\" \n\n\"It will work if you forgive yourself,\" Sy told him. \n\n\"I don't deserve it.\" \n\n\"Then I'm going to have you committed,\" Sy said forcefully. \n\n\"Why?\" \n\n\"Because, I have seen the look in your eye before,\" Sy told him. \"When you finally give up, you become a danger to yourself.\" \n\n\"Tell me you haven't thought about it,\" Sy dared him. Jack said nothing as he closed his eyes. \n\n\"Do you think I was wrong to give her absolution?\" Jack asked him. \n\n\"I'm not that type of priest,\" Sy pointed out. \"It's a judgement call, suicide is a mortal sin. There are those in the church that believe there is no absolution for it.\" Jack nodded that he understood that. \n\n\"But here is the rub,\" Sy said sitting forward and putting his notebook down. \"As a psychiatrist I look more at a person's inner workings. In my studies I know there is a psychological term call 'suicide by cop'.\" \n\nJack returned to his seat and sat down. \n\n\"What does that have to do with me?\" Jack asked him. \"I'm not going to run out and have a cop shoot me...I couldn't live with the fact that cop would have to deal with the knowledge he killed someone.\" \n\n\"No,\" Sy said with a smile. \"My point is this, even if someone else is the reason for your death, is it still suicide if you do something that is going to ultimately lead to your death?\" \n\nJack shrugged as he looked at him as he had no idea where he was going with this line of thinking. \n\n\"In medical terms, yes, it's still suicide, hence the term,\" Sy told him. Jack nodded that he agreed. \n\n\"Well, put that in our line of work,\" Sy suggested. \"Do we give absolution to him? If he did something he knew someone else would be required to kill him? Granted he didn't physically take his own life...but he caused it to happen. Is it a technicality? Do we grant him in his time of need a chance to meet his maker with a clear conscious?\" \n\n\"God I wished you would speak English so I could understand,\" Jack grumbled. \"I'm too damn tired to play mind games.\" \n\n\"Then this will absolutely blow your mind,\" Sy told him. Jack sighed as he didn't need his mind blown right now. He needed sleep, days upon days of sleep. \"Walk with me on this...does the church consider suicide by cop a mortal sin?\" Jack nodded. \n\n\"Why?\" \n\n\"Because to do anything that you know will result in your death is suicide, the fact you didn't do the actual physical part of your death is irrelevant...it's the frame of mind. You wanted to die,\" Jack told him. Sy chuckled and stood up. \"What?\" \n\n\"Frame of mind? What was Livy's frame of mind?\" Sy asked him. \n\n\"Regret,\" Jack told him softly. \"Remorse.\" \n\n\"So, isn't that frame of mind more important?\" Sy asked him. \"If frame of mind is important, shouldn't that be the only thing we consider?\" Jack nodded. \n\n\"Now add this little nugget to your already scrambling brain, is it any different from somebody who rides a motorcycle recklessly and gets in a crash that he knew was bound to happen sooner or later,\" Sy continued his head aching line of thought. \"Do we give them absolution?\" Jack nodded. \n\n\"Why?\" Sy asked him. \n\n\"He didn't know for certain, that his actions were going to result in his death,\" Jack told him wearily. \n\n\"So that's the line?\" Sy asked him. \"Certainty?\" Jack nodded. \n\n\"Then, by that same thought process...Did Christ commit suicide?\" Sy asked him. \n\n\"Are you out of your mind?\" Jack gasped, his brain screeching to a halt at the most absurd question he had ever heard. \n\n\"Did He not do things He knew...certainly...would end in His death?\" Sy asked. \"Did He not know that His death would occur with His actions? Yet He still went through with them. So in that same frame of mind, when the Romans, or cop in our case, had to kill Him...and He knew that was going to happen for a certainty...is that not suicide by cop?\" \n\n\"It's not the same,\" Jack laughed without any sense of humor. \n\n\"Who decides that?\" Sy asked him. \"Christ knew His teachings would lead to His death...a man comes out of his house and threatens a cop with a fake or unloaded gun...the end result is they both knew how that was going to end. They actually wanted it! They both embrace it...one becomes our Savior, then other burns in Hell for a mortal sin.\" \n\nSy opened the door and began to leave. \n\n\"You know if the Church hears your theory there, you are going to have a lot to answer for,\" Jack laughed. \n\n\"We will all have a lot to answer for,\" Sy told him. \"Even Pope Francis...but the good news is, the Righteous will do it. So I leave you with this tender little nugget...did you, in a woman's most horrible moment give comfort because you rested her soul with absolution, thus saving her from a mortal sin? Did you do your duty to save those who wanted to be saved?\" Jack sat there, his mind slipping gears as he tried to process that. \n\n\"But in the end, that's not what's bothering you,\" Sy pointed out. \"Whether you were right or wrong about giving her absolution...I mean really, the only thing you can do is say some magic words, but ultimately, in the end, the Lord grants or doesn't grant absolution.\" \n\n\"No, the real problem you must answer is, do you deserve absolution,\" Sy finished. \"Until you make that decision, until you decide if you deserve or even want to wear that collar...it will still feel like shackles around your neck.\" \n\nJack sat there in the room looking out the window for a few minutes. His mind was tired. His body was tired. His clothes were baggy on him from his weight loss. Walking outside he decided to go for a drive into town for a distraction. \n\nIt was an hour before he realized where he was going, he knew it when he saw the cemetery. He had subconsciously driven to her. He sat in the car for a good twenty minutes before he forced his feet to move and got out and walked to her grave site. The grass just beginning to take root, the grave was becoming green with it, less brown. \n\nHe walked to a nearby tree and sat down under it. He wanted to sleep, but instead he stared at the only thing left of Livy, her headstone. He lowered his head and tried to block the visions of her in his waking dreams. \n\nThe soft smell of perfume had him lifting his head, expecting to see her haunting form yet again. But it wasn't her. He watched the woman stand there after placing flowers at Livy's grave. Lost in thought. Lost in the emotions. The tears falling softly down her face. She looked just as tired as he felt. \n\nPart of him was angry, knowing what this woman before him had done to Livy. He blinked away the tears only to find Livy standing just beyond the headstone looking at him. The woman's head bowed as she cried hard, silent tears. \n\nLivy intimated with her head her demand he do something for the crying woman. Her eyes widening, reinforcing her demand. He shook his head at her, refusing to provide any comfort for her mother. \n\nLivy stomped her foot petulantly and pointed to her mother, her body doing something he had never seen from her. Demand. He rolled his eyes and lifted his tired body from the shade of the tree. Livy crossed her arms across her chest angrily as she scowled at his slow approach. \n\n\"Mrs. Lasko?\" Jack croaked out. \n\nThe woman jumped at the voice from the silence of the serenity surrounding them. \n\n\"I'm sorry,\" he said apologetically. \"I didn't mean to startle you.\" \n\n\"No,\" she shook her head and wiped her tears. \"I just thought I was alone.\" \n\n\"Yeah,\" he smiled. \"I thought I would be too.\" \n\nMarylyn looked at him, it took a few moments to recognize him. \n\n\"I'm sorry,\" she gasped when she realized who it was. \"I didn't recognize you without your collar!\" \n\n\"Yeah,\" he frowned. \"I'm kind of on a sabbatical.\" He explained as he touched his bare throat. \n\n\"Why?\" she asked. \n\n\"Doubt,\" he said simply. \n\n\"Because of what happened?\" she asked him turning back to the headstone. \n\n\"Yes,\" he admitted. \n\nThey stood there saying nothing, the silence killing them both. He looked to Livy who rolled her eyes angrily. He shook his head. What did Livy want from him? Did she want him to do the impossible and give comfort to this woman who was directly responsible for Livy making the choices she made? There was no way that was going to happen any time soon. \n\n\"Well,\" Jack said finally when the silence could be bore no longer. \"I'll take my leave of you.\" \n\n\"Thank you,\" Marylyn whispered. The tears returning. \n\nJack turned and took two steps before opening his eyes. Now Livy stood in front of him. Her eyes angry, her face hard. \n\n\"She needs you Jack!\" Livy told him. \n\n\"I don't care,\" he replied. \n\n\"Liar,\" Livy countered. \"Of all the people that need Father Jack back, that woman needs him the most!\" \n\n\"I can't,\" he whispered. \"I hate her.\" \n\n\"That's my mother!\" Livy growled. \"Show her what I fell in love with! Your heart, your love...your compassion!\" \n\nJack turned and slowly walked back to her. \n\n\"Did I do this to her?\" Marylyn asked him, knowing he came back to her. \n\n\"It's hard to say who is to blame,\" Jack said softly. \"Are you to blame with your words and your belief? Or am I to blame with my lack of a decision and my absence?\" \n\n\"I don't understand,\" she told him. \n\n\"Neither do I...some things can't be explained,\" he told her. \"I was with another of my congregation...celebrating the life they brought into this world. When Livy needed me the most...I wasn't there.\" They stood there quietly for a few moments. He behind her watching her body shake with her tears. \n\n\"I'm so lost!\" Marylyn finally admitted. \"I have no hope of being found!\" Jack looked to the God he felt had forsaken him. Looking for answers. \n\n\"The most important thing,\" Jack said with a deep exhale. \"Is to not let Livy's death be in vain.\" \n\n\"What?\" \n\n\"On many of our conversations,\" Jack told her. \"We talked about you...your church.\" Marylyn closed her eyes. Her former church. \n\n\"She was so worried about you,\" Jack admitted. \"That you were being led down the wrong road.\" \n\n\"She was right,\" Marylyn cried out. \"I was so blind...I was so foolish!\" \n\n\"The great thing about going down the wrong road,\" Jack said softly. \"Is once you realize it's the wrong road, all you have to do...is turn around. Once you have accomplished that impossible feat, walking back is easy.\" \n\nMarylyn's shoulder heaved as she cried. With every ounce of available energy she had, she turned to face him. With an uneasy step she closed the distance between them. Jack did the rest and pulled her into an embrace and let the woman sob into him. \n\n\"Welcome to the path of redemption,\" Jack whispered into her hair as she clutched him like a frightened child. His tears dropping into her hair. He looked up and saw Livy smiling at him. A soft bright tear streaking down her face. \n\nShe wiped it clear and blew him a kiss from her fingertips, the smile bright and happy. \n\n*** \n\nMarylyn sat at the table with him, his face scruffy with his beard. His face tired and hollow. \n\n\"I didn't think it would come to this,\" she told him. \n\n\"How could you?\" he asked her. \n\n\"I thought my church was Christianly,\" she whispered. \n\n\"It's not the church, it's the leader,\" he told her. \"But there are more churches, with better leaders.\" \n\n\"So often we ridiculed others that left for another faith,\" Marylyn frowned at his suggestion. \n\n\"Why does one faith have to have a monopoly?\" Jack asked her as he sipped from his coffee cup. \"There are those in my faith, Catholicism, they also feel that only we will enter the Kingdom of Heaven. God doesn't say that! All He says is those that believe in Him, shall not parish but have everlasting life!\" \n\n\"Is it that simple?\" she asked him. \n\n\"You think that is simple?\" Jack laughed. \"To believe in something that you have no tangible proof of? Only a feeling you get when He touches your heart? And the rest of the world ridiculing you for believing in some magical invisible being? That's simple?\" \n\n\"Then how do we do it?\" Marylyn asked. \"How do we find a church that's right?\" \n\n\"By walking into one and listening,\" Jack smiled. \"My family was Methodists...I didn't feel God moving in me there, using me.\" Jack shrugged when she looked to him. \"My father finally sat me down and said 'son, your path may be elsewhere'.\" \n\n\"So I left, and began walking alone,\" Jack whispered. \"I found a Catholic church in New Orleans during Mardi Gras. A small woman was praying, I sat down in the back. As she was leaving she smiled at me and struck up a conversation.\" \n\n\"Within that conversation, I felt...moved,\" Jack told her. \"Her passion...her conviction!\" \n\n\"When I got home I found a local church and started going...I felt God move more in the short time I had spent in Catholicism than I had my entire life!\" Jack smiled remembering the feeling. \n\n\"I realized then, that God doesn't care which house you reside in, it's where your heart is,\" Jack shrugged. \n\n\"What do I do then?\" Marylyn asked him. \n\n\"Start looking for a new house,\" Jack said firmly. \"God will stop you when you find the right one. One that moves your passion!\" \n\n*** \n\n\"Father!\" Corrine called out to him as he came into the rectory. \n\n\"Corrine,\" Jack smiled at her. \"Do me a favor, call Sybian and tell him I won't be returning.\" \n\n\"Are you sure?\" she asked him. \n\n\"Yes,\" he nodded. \"I'm not to be disturbed, I have a sermon to prepare and I'm behind.\" \n\n\"Of course Father,\" Corrine smiled. \n\nJack walked into his room after showering and shaving the scruff from his face. He walked to his dresser and pulled out a shirt and a fresh collar. He put it on and for the first time in a long time. He felt right. \n\n*** \n\nAlex sat laughing with Gavin and her father, they were teasing each other mercilessly as they watched the game. The doctors finally clearing it to allow him to watch his Penguins on TV. Tonight they were facing the Blackhawks, Gavin rooting them on. \n\n\"Guys are so silly,\" Nora finally said as a commercial came on. \n\n\"How is that?\" Alex asked her. \n\n\"To get all excited about hockey!\" Nora frowned. \n\n\"Sacrilege!\" Al exclaimed. \"We are going to have to make a believer out of you!\" \n\n\"What?\" Nora asked him, narrowing her eyes on him. \n\n\"We will have to take you to a live game,\" Al smiled. \"Hockey is much better in person!\" \n\nNora rolled her eyes showing she didn't believe that. She went back to her book on Alex's IPad instead. \n\nThe door opening had then all turning to see who it was, Krista walked in with Trevor. \n\n\"Cool!\" Trevor immediately said. \"You have the game on!\" He quickly pulled a chair to where he could watch. \n\n\"Silly boys,\" Nora grumbled as she used her finger to swipe the screen for a new page. \n\n\"Hey,\" Krista said to Alex. \"Can I talk to you for a sec?\" Alex rolled her eyes and let out a deep disappointed breath. She stood and replaced Nora from her lap to her chair. Following her older sister out into the hallway. \n\n\"What?\" Alex asked. Her anger seeping through the one word warning her sister not to start an argument. \n\n\"Have you seen Mom?\" Krista asked, ignoring her sister's anger. \n\n\"No,\" Alex grunted. \n\n\"Neither have we,\" Krista told her. \n\n\"What?\" Alex asked. \"She is living with you!\" \n\n\"She was,\" Krista told her. \"I came home Monday and found this note.\" She said holding it up. \n\n\"What does it say?\" Alex asked her. \n\n\"Says she is going to take a few days alone to think,\" Krista shrugged. \"Says not to worry, she will call when she has found some answers.\" Alex snatched the letter from her sister and read it herself. \n\n\"She didn't come to Bible study on Wednesday,\" Krista told her. Alex looked at her. Mother always went to church. She could be sick as a dog and she crawled in there. Alex felt a little nugget of concern form. \n\n\"Is this because you guys were banished to the back pew?\" Alex asked her loudly. Krista immediately looked to the ground. \n\n\"What?\" \n\n\"Last Sunday,\" Krista began slowly. \"We got there early...sat in our usual spot.\" \n\n\"And?\" \n\n\"Mom was forced to sit in the back row...alone,\" Krista finished. \n\n\"Why?\" \n\n\"We didn't save her a seat,\" Krista said softly. \n\n\"You people just aren't getting it are you?\" Alex suddenly raged. \"It's already killed one of us...how many more have to die before you idiots get your head out of your asses?\" \n\n\"What are you talking about?\" Krista asked defensively. \n\n\"All for this stupid fucking church,\" Alex said shaking her head. \"Turn your back on your own flesh and blood. Way to go Judas...be sure to collect your pieces of silver. You might need it when the church turns on you as well...and you will be alone...in the back of the church.\" \n\nAlex walked back into the room angrily. \n\n\"What's all that caterwauling?\" Al asked immediately when the two girls came back in. \n\n\"Nothing,\" Alex said sitting down on the bed with him. \n\n\"Alexandria?\" Al growled. Alex looked to the bed as she picked up his hand and thought of how to break this to him. \n\n\"Mom is missing,\" Alex told him softly. \n\n\"I thought she was with you?\" Al barked at Krista. \n\n\"She was,\" Krista assured him. \"But she left Monday, left only this note.\" Al snapped it from her and read it. \"She didn't show up for Bible study last night either.\" \n\n*** \n\nThe knock on the door was strong and hard. It caused her to jump in her seat. Marylyn got up and walked to the door and looked through the peephole. She opened the door slowly. \n\n\"Mrs. Marylyn Lasko?\" The police officer asked her through the crack in the door. \n\n\"Yes,\" she confirmed. \n\n\"May we have a word?\" the officer asked her. She nodded and undid the chain on the motel door and let the two police officers in. Her first thought was that there was complications from Al's surgery and that he had died. That she wouldn't be able to handle right now. \n\n\"Is everything alright Mrs. Lasko?\" one of the officers asked as the other looked around the room. \n\n\"I was about to ask you the same thing,\" Marylyn told him. \n\n\"Your husband called us,\" the officer told her. \"Said no one has seen you since Monday...he was worried about you.\" \n\nMarylyn let out a deep sigh of relief. \n\n\"Al called about me?\" she asked him when the words clicked. \n\n\"Yes Ma'am,\" he confirmed. \"He wanted us to do a wellness check.\" The tears welled in her eyes and it caused the officer to look at his partner. \n\n\"I'm fine,\" she smiled wiping a tear away. \"I was just trying to find some answers...alone. It seems a big one just got answered unexpectedly!\" \n\nThe officers said their goodbyes and made their way to their police cruisers. Marylyn walked to the bed and sat down. She pulled the phone to her and dialed the hospital. \n\n\"Hello?\" Alex's voice came across the line. \n\n\"Alex,\" Marylyn smiled. \"Is Al up for a short conversation...I promise not to upset him and to keep it short.\" \n\n\"It's Mom,\" Alex said, her voice distant telling Marylyn that she was holding it out to her father. \n\n\"Jesus Marylyn, where are you?\" Al asked immediately. \n\n\"I'm in a motel,\" she said softly. \n\n\"Are you ok?\" he asked the relief filling his voice and the line. \n\n\"I haven't been ok in years,\" Marylyn admitted. \"But I'm working on it.\" There was a silence on the phone. \n\n\"What can I do to help?\" Al offered. \n\n\"Just believe that I know I traveled the wrong road for a long time and I'm trying to find my way back to you!\" she said through a cracking voice. ",
        "\"I'm here,\" he told her, his own voice breaking. \n\n\"You just worry about getting better,\" Marylyn told him. \"I'll do the rest.\" \n\n\"I'll be waiting,\" he said softly. \"I love you.\" \n\n\"I...love...you,\" she choked out. \"Hopefully one day you will forgive me as well...you and Alex and baby Nora.\" \n\n\"Sounds like you have found some answers,\" Al told her. Her head began to nod. \n\n\"Yes,\" she smiled. \"Now I have to find the rest of them.\" \n\n\"Take your time,\" Al smiled. \"I can't run anywhere without everyone yelling at me!\" This caused Marylyn to burst into tear filled laughter. \n\n\"Add me to that list,\" she smiled. \n\n*** \n\nFriday afternoon, Alex helped her father into the front seat of her Mercedes. After making sure he was securely in she closed the door and Gavin opened her door and she climbed into the back with Nora. Gavin got behind the wheel of the SUV. \n\n\"Thank God!\" Al exhaled. \"I've never been so happy to leave a place like I am right now!\" \n\nThe group laughed with him. \n\n\"Where to?\" Gavin asked. \"Home?\" \n\n\"No,\" he shook his head. \"Pittsburgh.\" \n\n\"What's in Pittsburgh?\" Alex asked from the back. \n\n\"I told you once,\" Al laughed. \"The Industry Public House, home of the Blast Furnace Burgher!\" \n\n\"Sounds good,\" Gavin nodded. \"What is it?\" \n\n\"What is it?\" Al scoffed. \n\n\"No,\" Alex said firmly from the backseat. \n\n\"It is only the best hamburger you could ever taste! It shouldn't even be called a hamburger...it should be called a gift of the gods!\" \n\n\"No,\" Alex repeated. \n\n\"What's on it?\" Gavin asked him. Ignoring her altogether. \n\n\"Oh man! Only the good things!\" Al raved. \"Start off with two thick slices of buttery toasted bread served with huge chunk of juicy beef covered in ghost peppers! Slap on a heavy dose of Sriracha sauce, tomato, sweet delicious pig dressed as bacon and top it all off with candied jalapeno!\" \n\n\"Damn,\" Gavin gasped as he smacked his lips at the mere description of the scrumptious sandwich. \n\n\"Better order a pitcher of beer for that boy-o!\" Al laughed. \n\n\"I'm up for it,\" Gavin told him. \n\n\"No,\" Alex said again shaking her head. \n\n\"Tell you what, one quick stop,\" Gavin nodded as he started the car. \n\n\"Where's that?\" Al laughed rubbing his hands together. \n\n\"The funeral home,\" Gavin shrugged. \"That way you can pick out your own casket.\" Gavin said dropping the hammer down letting him know there would be no trip to Pittsburgh. The tone of his voice going from motivated accomplice to that of annoyed doctor. \"You have got to be kidding me right?\" \n\n\"Thank you!\" Alex said with a smile. \n\n\"Absolutely not!\" Gavin growled. \"You are on a strict diet from here on out!\" \n\n\"Awe c'mon!\" Al whined. \n\n\"No sir!\" Gavin laughed. \"Alex would kick my ass!\" \n\n\"You aren't afraid of her are you?\" Al asked him. \n\n\"You're damn right I'm afraid of her!\" Gavin laughed. \"Keep in mind, she has backup now!\" \n\nAl looked over his shoulder and saw Nora with her arms crossed over her chest like Alex. \n\n\"No hamburgers Grandpa!\" she said firmly. \"The doctor says so!\" \n\n\"Doctors schmoctors!\" Al said to her. \"I thought you were on my side?\" \n\n\"I'm with Aunt Alex, she says they are bad for you!\" Nora told him. \n\n\"What does she know?\" Al grumbled as he turned back around. \"She is marrying a Blackhawks fan!\" \n\n\"What was the score of the game again?\" Gavin teased. \n\n\"I revoke my permission to marry my daughter,\" Al said with a smile. \n\n\"Take that up with her,\" Gavin nodded. Al looked over his shoulder at her. \n\n\"Yeah, not worth that tempest in a teacup!\" Al laughed. \n\n*** \n\nSunday came and Jack made his way out to the pulpit. He smiled at everybody who was smiling back at him, thankful to have their priest back. \n\n\"Good morning,\" Jack said to them. \n\n\"Good morning,\" the said back to him collectively. He saw his poker playing partners, all there in support of him. Leaving their own church for one Sunday to support a member of the faith. Sybian was there as well along with the Bishop. It appeared all were happy to see him back behind the pulpit. \n\nLooking around at all the smiling faces he saw her in the back of the church. Sitting where her daughter once sat in the beginning. He smiled at her broadly. He began his Mass. \n\n\"So,\" Jack said finishing up. \"Where do we go from here?\" The congregation waited. \n\n\"I guess I should explain my absence,\" Jack nodded. \"I must admit to you, I have been lost.\" \n\n\"Not lost somewhere in Pennsylvania,\" Jack laughed. \"But lost in here.\" He pointed to his head. \"And here.\" He pointed to his chest. \n\n\"All of you know by now, the loss in our family,\" Jack said looking to where he last held Livy. \"With that horribly painful loss...I lost my faith.\" He looked up to find the church hanging on his every word. His tears causing their eyes to tear up as well. \n\n\"What happens when you lose your faith?\" Jack asked them. \"You look for answers.\" Jack told them. \"But where?\" He held up his Bible and smiled. \"Here?\" he asked the silent group before him. There was a soft \"Amen\" from one of his fellow preachers. He smiled. It was not something normally said in the Catholic Church, but it was obvious that one of his fellow preachers was into his sermon. \n\n\"But this doesn't have all the answers like we were told,\" Jack told him dropping his hand. \"Hell, it isn't even complete!\" he said dropping the book on the altar in front of him with a soft thump for dramatics. There was a soft murmur. \n\n\"We pray,\" Jack smiled. \"But what if, we are so angry with Him, that we can't pray any longer?\" Jack tilted his head to the side pointing to the sky to indicate God. \"An innocent child died right here,\" Jack said standing where Livy breathed her last breath. \n\n\"I held her,\" Jack said looking down at the spot. \"She died in my arms.\" There was a silence that seemed to ring out. \n\n\"I gave her Last Rites. I gave her absolution!\" Jack told the crowd. \"My Bishop,\" Jack said pointing him out with a raised hand. \"Might tell you that wasn't allowed. A mortal sin cannot be forgiven.\" Jack nodded as he returned to the pulpit. \n\n\"My shrink on the other hand tells me that absolution is basically some magic words meant to provide comfort. It's the Father, our Lord and Savior, that actually decides whether or not to grant absolution. The Righteous.\" \n\n\"And I'm ok with that,\" Jack smiled. \"For we all one day, will meet our Father. I will pray over each one of you, I will grant you absolution...but I don't know for sure if you deserve it!\" Jack said. \"That I leave in the hands of God!\" Another soft \"Amen\" rang out, this time more of the preachers and one or two of the usual congregation joined him. \n\n\"And we are ok with that...aren't we? In the end, we all meet God...we all will answer for our sins. Not I, nor this church nor the Pope himself can look into your hearts the way the Father can. And He will.\" \n\n\"Are you ok with that?\" Jack asked his congregation. \"Will you drop to your knees repentantly and beg for forgiveness for the way you lived your life? Or will you drop to your knees...thankful to be in front of the Father?\" \n\n\"I will meet my Father with an open heart, with calloused knees from where I prayed daily,\" Jack smiled. \"But I will meet Him with a clear conscious.\" \n\n\"Not because I'm a priest,\" Jack laughed. \"I'm a sinner, just like you. No, I will meet God with a clear conscious because I have lived my life the way He commanded. I have loved everyone. I have forgiven those that have transgressed me. I have loved unconditionally with all my heart. As the Son commanded.\" \n\n\"Amen,\" the congregation said aloud more and more becoming moved with this addition to the Mass. \n\n\"Now I was about as lost and confused as any man could get,\" Jack told them. \"I was shaken to my very core! My foundation! What saved me you ask?\" He smiled. \"The grace of God. He put someone in my path. Someone that was as lost as I was. Someone who felt as I had felt. Someone who loved as I have loved.\" Jack shook his head. \n\n\"Oh how I hated this woman,\" Jack told them, surprising them. So many had looked at their priest as above that. But Jack wanted to point out he was no better than them. That he could have the same emotions, the same sins. \n\n\"See, I unfairly blamed her for where I was. And there she was, right there for me to eviscerate with my hatred!\" Jack hung his head. \"What did I do?\" \n\n\"I held her,\" Jack told them. \n\nHe made his way back to his pulpit. Jack stood there for a few moments. Just staring at the dark wood grain of the pulpit. Not saying anything, waiting for his composure to come back. Thinking of where to take this group that was hanging on his every word. He was proud that the Lord was again using him for His purpose. It made putting the collar back on worthwhile. \n\n\"I was reminded of the poem 'Footprints in the Sand',\" he began again. \"You all know it. In the poem it says the man asks the Lord when he was at his lowest why did God leave him. The Lord replies, I didn't leave you, it was then that I carried you. That is why you only saw one set of footprints.\" \n\n\"I used to think that was metaphorically,\" Jack told them. \"But now I know better. For I saw my footprints...and I knew they weren't mine because I couldn't walk due to the fact I was so low! Then I thought of someone, someone so precious to me that it had me questioning this collar.\" Jack said pulling on it, admitting it all to those in front of him. Coming clean for the world to see. \n\n\"She too was at her lowest when we first met. But she was carried by our Lord and Savior, carried right through those doors!\" Jack said pointing to the back of the church. \"He carried her to this pew,\" Jack said standing next to it, remembering their first conversation here in this house of God. \n\n\"Then, when she needed Him the most, He carried her out the same way. Wrapped in His love, through those same doors. How do I know that?\" Jack asked them. \"I feel it here.\" He said tapping his heart. He walked back to the front of the church and stood there, surveying the many tear filled eyes in his congregation. \n\n\"Know this,\" he said finally. \"All of us will meet the Lord. All of us will answer for what we have done.\" He shrugged. \"But the good news? All of us will be forgiven, it only takes the courage to kneel.\" \n\n\"May the Lord love you and bless you,\" Jack said to them. \n\n*** \n\nJack shook the congregation's hands as they left. All telling him they were moved by his words. He thanked them. \n\n\"Mrs. Carson,\" Jack smiled at the elderly woman. \n\n\"I thank the Lord for you Father,\" she told him. \"And I know that Livy is in Heaven as well.\" Jack looked back one person and saw Marylyn standing there...listening. \n\n\"I remember her coming into my home and helping me after my surgery,\" Carson said to him. \"Good Christian woman, and I agree with you, suicide or not she is in Heaven...tells me she had a good mother!\" Carson patted his hand as he held hers. \n\n\"How is that?\" Jack asked as he watched Marylyn's lip tremble. \n\n\"Because she was thinking of others before herself,\" Carson smiled. \"You only get that if you are raised right!\" Marylyn spun and nearly ran back to the pew she had just left. \n\nMarylyn couldn't believe the words she just heard. Someone thought she was a good mother? They would surely not say those things if they knew her. Not if they knew what she did to Livy. They would surely change their opinion. Her church ridiculed her. This church, did not pass blame on her. Even though they all knew her daughter had taken her own life. But none held judgement on Livy, none rolled their eyes or elbowed each other in silent disagreement when Jack proclaimed her innocent. Unlike her church and its preacher who thought she was a waste of time. \n\n\"Funny,\" Jack smiled as he sat next to her. \"How one church looks on her as a good Christian woman, raised by a good mother...while another casts blame.\" \n\n\"I don't understand,\" Marylyn began. \"If that woman knew me!\" \n\n\"She would think the same,\" Jack told her. \"Were you lost? Yes.\" He said definitively. \"But like your daughter, the Lord carried you through my door, ironically He sat you in the first seat she sat in as well for her first Mass.\" Marylyn looked to where she was. \n\n\"In our church, the back pew is for the lost,\" Marylyn pointed out. \n\n\"How can you be lost, when everybody around you knows exactly where you are?\" Jack asked her. \"Open your eyes Marylyn, see where God has placed you.\" \n\n\"It's a place of love,\" Jack said putting his arm around her. \"A place of salvation. A place where no one is lost and the back pew only means you have to listen harder, no judgement placed on you, no shame.\" \n\n*** \n\nJack awoke with a start. He smiled at her. \n\n\"Thought you had left me,\" Jack said swinging his legs out to sit on the edge of the bed in front of her as she sat in the chair. \n\n\"I'm never leaving you Jack,\" Livy smiled. \"I will always be here.\" She whispered putting her hand on his chest. \"And here.\" She said moving her hand to his head. \n\n\"I love you,\" he whispered. \n\n\"I know,\" she smiled. \"I'm going to watch Nora for a while...but I will keep an eye on you.\" Jack nodded as she got up to leave. He didn't want her to, now he wanted her to stay. He didn't care if that meant he would be in pain for the rest of his life. \n\n\"Are you in a good place?\" he asked her. \n\n\"No,\" she said softly. \"I'm in a great place!\" \n\n\"Thank God!\" he gasped. \n\n\"No, thank you,\" she whispered back placing a soft kiss on his head. \"Watch over my mom.\" \n\n\"I will,\" he smiled. \n\n\"See you on the other side,\" she said to him. \"Work on your poker skills while you can.\" \n\nHe laid back down with a laugh, and didn't dream of her. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-41"
}