{
    "title": "The Cabo Connection",
    "pages": [
        "Damon: I'll bet you'll get up to some trouble in Cabo. \n\nI smirked at the text that flashed up on our chat-log from the computer screen. He was always teasing me.\n\nAshleigh: No trouble. At least not the good kind of trouble. I'm going with my boyfriend don't forget. \n\nThere was a pause, and while I anticipated his next words, I took a sip of the vodka soda I was prone to drinking while I spent my online hours chatting with my favorite virtual stranger, DamonX. I leaned back in my computer chair and surveyed the mess of clothing on my bed. I still hadn't packed, and my flight was leaving in the morning.\n\nDamon: It's not a real vacation without the good kind of trouble. Besides, I thought you were breaking up with him. \n\nI frowned. I had shared a lot with this faceless stranger. Damon and I had connected online several months earlier on a social networking site over a shared love of writing and dirty martinis. He preferred to maintain a sense of mystery about himself, whereas I had bubbled over, sharing all kinds of personal details about myself. I'd even sent him the link to my Facebook page, but he hadn't added me yet. It was something that had irked me somewhat at the time, but I assumed he had his reasons for wanting to maintain his anonymity. Besides, this was technically supposed to be escape, not reality.\n\nAshleigh: This is my last attempt at working things out. It's been five years. It's like an investment at this point. I just want to make sure there's nothing there left to salvage. \n\nDamon: Haha... sounds incredibly romantic when you put it that way. I still think you should have left him at home and used the trip to figure out if you'd miss him if he weren't there. Instead you'll probably find that you don't miss him, even while he IS there. \n\nAshleigh: Thanks for the vote of confidence. \n\nDamon: I think I know you by now, that's all. And I think you'll have a few dirty confessions for me by the time you get back. \n\nAshleigh: Not going to happen. \n\nDamon: Wanna bet? \n\nI laughed out loud, taking another sip of my drink while I considered my response. He had to know I wouldn't be able to resist such a lure. I began to reluctantly type back.\n\nAshleigh: OK, what's the bet? \n\nDamon: If you do hook up with someone other than your boyfriend, then you have to book yourself on a flight and come here and visit me. And I get to do anything I want to you. \n\nI paused for a moment, a half-smile frozen on my face.\n\nAshleigh: And what if I win? What do I get? \n\nDamon: You'll get to hear me say that I'm wrong. \n\nAshleigh: Ah, well we all know that you're never wrong. \n\nDamon: See there might be a first time for everything. Think of the satisfaction. \n\nAshleigh: I'm thinking. \n\nI paused for a moment to take another long sip of my vodka soda.\n\nDamon: Good. Cause I know I'm already thinking of my own satisfaction after I pick you up from the airport. \n\nAshleigh: Hah! You're so sure of winning! Fine, I'm going to call your bluff on this one. But if I win, I want more than that. You have to send me a real picture of yourself. No more of this dark, grainy avatar that I've been staring at for the past three months. \n\nDamon: Deal. But you'd better log-on from the hotel. I want updates so I know how much lube I need to buy this month. \n\nAshleigh: I can't believe you! \n\nDamon: It's ok, you will when I win... :) \n\nI logged off, shaking my head, although I was secretly amused by our conversation. Damon had a way of getting under my skin, even from day one. We had logged endless hours of bantering and flirting, and this kind of teasing bet was certainly not out of character. Although, in reality there had never been any question in my mind that I'd win. My relationship may not have been on entirely solid ground, but I did still love my boyfriend Scott. And I certainly wasn't going to cheat on him while we were on a couple's vacation together! In fact I had been hoping that Cabo would be just the kind of distraction from life that we needed to reconnect again. Work had been dragging our relationship down for quite some time. His long hours at the law firm, combined with my messy and erratic schedule with dance rehearsals had left us with very little combined time together. Quite often, I was at home, entertaining myself online with Damon while watching the clock. Sometimes I would already be asleep by the time Scott got home at night. Maybe it wasn't the healthiest place we had ever been in, but whose relationship was perfect?\n\nScott and I arrived in Cabo San Lucas on the kind of day that the Baja peninsula was famous for, sunny with endless blue skies. The dry desert heat warmed my skin immediately, and the first few days of our vacation was spent relaxing by the pool at the Melia Me Resort. It felt so luxurious to be laying on one of those white cabana loungers, listening to the DJ spinning trance tunes nearby while I sipped margaritas. I busied myself reading magazines and people watching behind my oversized sunglasses, trying to ignore the fact that Scott had been typing away on his laptop for the better part of the afternoon.\n\nHe had booked us at a trendy hotel, and at first, I'd thought it was more out of a desire to kick things up and have the kind of fun we used to have back when we'd first met. I was beginning to realize that the brochure boasting \"wireless by the pool\" might have been his real incentive. As it turned out, there was very little difference between Scott at home versus Scott on vacation. He'd been furiously typing emails and doing conference calls on his cell phone since the moment we'd arrived. I was hoping that he'd relax enough to start enjoying our time there, but several days later it was obvious that we were on two different schedules. I began to wonder why we'd even bothered.\n\nAs it turned out, I was beginning to feel like I was on vacation by myself. I had already perfected my tan, read two beach novels, and had drank enough to fill several vacation's worth of umbrella drinks. That day, Scott had balked at my suggestion to use a stronger SPF, and had ended up with a superficial sunburn, making him extra cranky though dinner. I convinced him to have drinks at the Nikki Beach Club bar at our resort so that we could watch the famous Saturday night fire-show, and he had reluctantly agreed. Unfortunately he spent the entire time complaining about the noise and had camped himself out on one of the lounge sofas, completely disinterested in venturing onto the dance floor.\n\n\"You're not being very much fun,\" I'd quipped. I frowned and looked out at the other vacation goers, laughing and drinking and enjoying the party. \"You know how much I love this music.\"\n\n\"I thought we were past this whole scene, Ashleigh,\" he sighed. \"You know I'm trying to make partner at the firm. I told you this was going to be a challenging year. I thought you were on board. I'm doing this for us... for our future. You know... to get you that diamond ring you've been eyeing.\"\n\nI rolled my eyes. It was typical of Scott to lord the whole concept of an engagement over me to get out of doing something that he didn't want to do. Any immediate relationship demands I had were to be shelved for the greater good of getting one step closer to a marriage I wasn't even sure I wanted anymore. Not when it meant a lifetime of this.\n\n\"I'm going to get a drink,\" I said finally. \"Do you want me to bring you one back?\"\n\nHe leaned back against the lounger and half closed his eyes. \"Nope.\"\n\nIncensed by his attitude, I sauntered towards the long bar, noticing that I was getting appreciative stares from all the people I passed, except from the one that I had come with. Two days in the sun had left my skin golden and sun-kissed, making my long blonde hair seem brighter as it bounced around my bare shoulders. I was wearing a short white strapless beach dress that hugged my tight little curves in all the right places, and I had barely registered more than a passing compliment from Scott all evening.\n\nI slammed my purse down against the bar in frustration and immediately caught the attention of the bartender.\n\n\"Another margarita por favor, and please make it a double\".\n\nAs I rummaged in my purse for a $20 bill, I sensed someone lean in behind me. I felt warm breath against the skin of my neck and a voice near my ear. \"You're doing that all wrong, you know.\"\n\nI turned to look to my side and caught a flash of a mischievous smile and startling green eyes as the man beside me took a seat at the barstool beside me. For a moment, I was caught off guard.\n\n\"Excuse me?\"\n\nHe turned from me and signaled the bartender. \"Two shots of Petrone,\" he ordered brazenly, and then turned to me to me and winked. \"Double margaritas will have you water logged before you'll ever catch the buzz you're after.\"\n\n\"And what makes you think I'm looking to catch a buzz,\" I asked, still unnerved by the way he was looking at me.\n\n\"Well, you're in a beautiful vacation spot, and your eyes are like razor blades. No offense, but you look pretty pissed off. A double margarita is an admirable attempt at escape, but I think I can put a smile on your face a little faster.\"\n\nI couldn't help but laugh at his audacity, but something about him had me disarmed almost immediately. I studied his features. He had the kind of eyes that I just couldn't seem to turn away from. They were lively and playful and I sensed a quick intelligence about him that had me intrigued. His smile was confident, if just a little bit devious, and he had dark brown hair and a golden tan that let me know he'd already been in Cabo for at least a few days. My eyes quickly flicked downward and I noticed his lean muscular frame, the definition of his physique still obvious beneath his white shirt and dark jeans.\n\n\"So am I right?\" he asked when I hadn't said anything yet.\n\n\"About?\".... My voice trailed off, and I realized he had me noticeably distracted already.\n\nHe had an easy laugh in response, and I realized with a flush that my attraction to him was probably already apparent. I cleared my throat and looked away, embarrassed.\n\n\"I mean, I'm not looked to get drunk, if that's what you mean,\" I stammered. \"It's just been... a long day.\"\n\n\"A long day in paradise? Aren't those supposed to be the best kind of days?\"\n\nI turned back to him and smiled, trying to relax. I don't know why this stranger had me so nervous. It had been a long time since I'd had that kind of physical reaction to someone I didn't even know. I assumed it must have been in part due to my frustration with Scott. Maybe it was a little friendly attention that I was craving more than anything else that had me unable to resist smiling back at him. Flirting with this stranger had been was the most fun I'd had on the entire trip up until that point.\n\nThe shot glasses of Petrone were placed on the bar in front of us, crossed with a bright green slice of lime and a saltshaker and I looked at them with some measure of trepidation.\n\n\"Oh I don't think I should...\" I said, shaking my head with distaste. \"It's one thing in a margarita but...\"\n\n\"Come on,\" he goaded. \"It's Cabo. It's the law. When someone buys you a tequila shot, you're obliged to drink it.\"\n\n\"The law?\"\n\nHe shrugged. \"Yeah, I'm sure I read it in a guidebook somewhere.\"\n\nI laughed, and finally conceded defeat. \"Ok then... we don't want to break the rules.\"\n\nHe cocked an eyebrow and grinned. \"Are you sure about that?\"\n\nI shook my head and laughed nervously. \"Is that the country motto or something?\"\n\n\"Well, when in Cabo... why not? These getaways are all about suspending the rules of life aren't they? It's like a week of fantasy with no ties to the real world. There's nothing wrong with taking a vacation from the rulebook every once in a while.\"\n\nI smirked, and picked up my shot of Petrone.\n\n\"Want to make things interesting?\" He asked with a mischievous grin.\n\nI shrugged, while unconsciously turning my body so that it was facing him directly. I realized I had taken a step towards him, all the while silently berating myself for indulging this flirtatious stranger when my long-term boyfriend was only a few yards away.\n\n\"What would make it interesting?\"\n\nHe boldly reached across the space between us, and gently drew his fingers across my collarbone, brushing my hair back over my shoulder, exposing the line of my neck. He smiled, and ran his fingers down the sloping curve and I shivered with his touch, my mouth slightly agape at how daring he was in touching me when we'd just barely met.\n\n\"How about body shots. A lick of salt... off this spot right here.\" His fingers were resting in the small space where the curve of my neck met my shoulder, and I felt my pulse quickly race in response. He had unwittingly hit one of my most sensitive erogenous zones, and the idea of this stranger putting his lips and tongue on me had me suddenly wet with arousal.\n\nFor a moment, our eyes locked and I felt a deep blush stain my cheeks before I forced myself to look away.\n\n\"I... can't,\" I said, struggling to speak.\n\n\"You can't.... or you won't?\"\n\nI sighed deeply. \"I can't.\" I looked across the dark poolside bar, my eyes scanning for the lounge sofa that I'd left Scott on. I could see him still sitting there. His head was titled downwards and I realized he had nodded off to sleep. My heart sunk just seeing him and I quickly felt a rush of guilt. \"I'm here with my boyfriend.\" I explained, gesturing in his direction.\n\nMy flirtatious stranger followed the direction of my gaze towards Scott with curiosity.\n\n\"Boyfriend. Hmm... You mean that guy passed out on the couch? That's your boyfriend? What's he doing over there, making his hot little girlfriend order her own drinks?\"\n\nI frowned, realizing how pathetic it made me sound. \"Well, he's tired... he had too much sun today... and anyway... he didn't want anything to drink so...\"\n\n\"Well,\" he said cutting me off. \"I don't think he's in any danger of waking up...\" He raised an eyebrow as though testing me.\n\nHeat flamed through my face. \"I really can't.\"\n\n\"OK, you can't. But what about me? What if I take full responsibility for breaking the rules on my own?\"\n\nHis gaze held mine for several moments, and my heart started to hammer unexpectedly, partially in shock that I hadn't shut him down immediately. What was I thinking? Was I already in danger of losing that bet?\n\nBefore I could say another word, he leaned in, and my eyes widened, unable to find the willpower to move while he brought his lips to the curve of my neck. I felt his warm tongue move slowly over my skin, while I held my breath, my panties soaking in response to his mouth. Gently he pressed my head to the side and I instinctively arched my neck as he loosely shook salt over the wetness, before moving in again to suck the salt from my skin. I inwardly stepped towards him; the combination of his mouth on me, the scent of him, and the warm breeze had me instantly craving more. I felt in a daze watching him pull away and down the shot of tequila quickly before biting into the slice of lime. He set it down and smiled at me.\n\n\"Now that was definitely the way they recommend doing it in Cabo.\"\n\nI didn't know what to say, other than to just stand there, still in a heady daze of shock at what had happened. I suddenly had an uncontrollable desire to hand him my shot so that he could repeat the entire process.\n\n\"Are you sure you don't want to bend those rules... just a little?\" he asked teasingly. \"I can make some suggestions to guide your tongue and find the perfect place for you to lick\".\n\nMy face flamed with embarrassment and I let out a low laugh, trying to shake myself out of the succession of dirty thoughts my mind immediately conjured. I looked in Scott's direction, relieved to see him still sleeping and unaware of what had just happened.\n\n\"I... have to play by the rules here,\" I said, clearing my throat, trying to get my mind back on track.\n\nHe flashed me a smile and winked. \"I understand... especially when you have the game-keeper just a few yards away.\"\n\nHe stood there and watched me expectantly while I nervously licked the inside of my wrist and shook salt onto it. My hands were almost trembling under the intensity of his gaze as I drank the shot of tequila and sucked hard on the slice of lime, unable to stop myself from making a face at the potency of the hard liquor.\n\n\"Ugh\" I moaned while setting down the slice of lime. \"I haven't had tequila in years.\"\n\nHe grinned. \"Well vacations are good for all kinds of explorations that way. You end up doing things you never really thought you would.\"\n\nWe both paused and a moment passed between us. I'm not sure what I was thinking, but by the look in his eyes, I knew exactly what was going through his mind.\n\n\"Uhm... I should... get back... to my boyfriend,\" I said awkwardly stumbling over my words.\n\n\"Convincingly said!\" he laughed. \"OK, enjoy your evening. I'm sure I'll be seeing you around...\"\n\nHe paid for the drinks, and I picked up my purse off the bar. I realized I didn't want the moment to end, perhaps a little too late, because he was already walking away when I called out to him. \"Are you staying at the hotel here?\"\n\nHe half-turned and nodded, not breaking his stride. \"Is that the answer you were hoping to hear?\"\n\n\"Honestly? I'm not sure anymore.\" I called back with a nervous laugh.\n\nHe grinned. \"Well, I'm sure you'll find the answer to that question before the end of your trip. Have a nice evening.\"\n\nHe didn't look back as he walked away, but I watched him until he was out of sight, admiring the confident ease of his gait as he disappeared up the concrete staircase leading into the main hotel. The alcohol buzzing through my veins made me half consider following him, while simultaneously berating myself for even thinking such a thing. As I walked back to Scott, I realized that I hadn't even asked his name.\n\nThe following morning I found myself distracted as Scott and I ate breakfast in silence at the outdoor restaurant by the pool. My eyes were searching for any glimpse of the mysterious stranger from the night before, and unfortunately coming up empty. After another morning of flipping through magazines on the beach, I told Scott I was going for a walk. He barely looked up from his Blackberry, and I couldn't help but roll my eyes. Certainly my boyfriend was doing nothing to hold my attention and to compound the situation, I had been unable to stop replaying the scene from the night before in my mind. I was comfortable with wandering around the resort in my black string bikini, but tied a short sarong skirt low around my hips to make it a little more modest. I figured I could go into the business centre and log-on to my email, and send a quick update to Damon. I knew he would enjoy hearing my dirty thoughts and knowing he was still in the running on our bet, even if it was only in theory. After all, what was the real likelihood that I would run into my mystery man again?\n\nAnd yet as I opened the heavy glass door leaving to the business centre, I felt a little jolt run through me to see the dark haired man from the evening before sitting at one of the computer stations. He instinctively looked up and our eyes met. For a moment, I couldn't move and my mouth went dry. I felt naked and exposed in my little black string bikini and skirt as his eyes traveled up and down my body, over every golden curve, still moist with suntan lotion, my long blonde hair tousled in waves from my swim in the ocean earlier that day. Those green eyes seemed to quickly inspect every inch of me while I stood there uncertainly. Finally he met my eyes again and smiled.\n\n\"Hello again.\"\n\n\"Hey... I was uh... just going to check some emails.\" I said, trying to sound light and breezy to hide my nerves.\n\nThere were several other people using computer stations. I had been hoping to get a seat near him, but to my dismay, there were none available. I looked down the room to the only empty station left and gave him an awkward smile. \"Well, I guess I'll be down there.\"",
        "He grinned back at me, obviously enjoying my reaction to him, and I silently berated myself for being so nervous around this man. He was just a stranger. Nothing was going to happen. I willed myself not to look back but I wanted to imagine his eyes on me as I crossed the room and slid into the chair by the empty computer. I brushed my hair back off my shoulders, using the opportunity to quickly glance in his direction. He was back to typing and I immediately felt foolish. We had flirted the night before, but we'd both been drinking. This whole thing was quite possibly all in my head. I focused on the computer screen and quickly logged on to MSN. I had been expecting to send off a quick note to Damon but to my surprise a chat box quickly opened up. I leaned back in my chair and smiled.\n\nDamon: So? How's paradise?\n\nAshleigh: Beautiful! I'm a bronzed goddess already! \n\nDamon: Damn! I'm snowed in and it's -20. Thanks for rubbing it in. So put a smile on my face. Can I expect to see my bronzed goddess sooner than later? Are you being a dirty girl? \n\nI bit my lip, the adrenaline of having my sexy stranger just a few feet away from me had me in a playful mood. And I did love to tease Damon, just as much as he enjoyed teasing me.\n\nAshleigh: Maybe. I'm still deciding how dirty I want to get. \n\nDamon: Oh? You're already past your high hopes for a rekindling your romantic connection with your boyfriend? That was fast! \n\nAshleigh: Scott is just... you know. Nothing changes. I think maybe I have my sights set on a dirtier kind of connection here.\n\nI threw a glance down the room at my dark haired stranger who was still typing quickly, focused on his computer screen. I quickly studied every perfectly defined feature, admiring him once again. He had me instantly distracted from anything I was doing, until I heard the MSN alert signaling a new message that made my eyes quickly return to the screen.\n\nDamon: Haha You little slut! So what are you waiting for? \n\nAshleigh: Don't get your hopes up too fast. I just said I was toying with the idea. I don't even know if anything is going to happen. Maybe it's enough just to imagine it might. \n\nDamon: Stop making excuses. I know you're good at them. I also know you're probably already wet just thinking about it, aren't you.\n\nI couldn't help but grin to myself.\n\nAshleigh: Maybe. \n\nDamon: Then make it happen and do me proud. I have to get back to work but I want all the dirty details later. It's good news though. I never lose a bet. I might have to stop by the sex store after work and buy a nice little slut collar and leash for you to put on for when I pick you up from the airport.\n\nI couldn't help but laugh out loud and several people turned to look at me, including my mysterious stranger who grinned and raised an eyebrow, obviously questioning what had suddenly amused me. I blushed and shook my head, imagining his reaction if he knew how he had factored into my fantasies as well as their possible repercussions. I quickly typed back a hasty goodbye to Damon, and logged off.\n\nI stood up and shook out my blonde waves and slowly crossed the room. His mischievous green eyes were still on me and I knew he was going to stop me before I could walk past him. Indeed, his arm shot out to block me from passing by and lingered against the taut bare skin of my exposed stomach.\n\n\"Not so fast. Care to share what was so amusing? Were you checking in with your second boyfriend?\"\n\n\"No\" I laughed. \"Just reading a funny email. Nothing worth mentioning.\"\n\nHis eyes narrowed playfully, as though not quite believing me. His arm did not relinquish a pass to me and instead boldly curled around my waist, drawing me closer to his chair. I was startled by the move but he clearly had no intention of letting me escape.\n\n\"I wanted to show you something,\" he said, nodding to the computer screen. I allowed him to draw me in, my eyes following his gaze to the screen. To my surprise it was a map of the hotel we were staying at. He pointed to a section of the resort close to the beach. \"I want you to meet me here tomorrow at 3pm.\"\n\n\"What is that you're pointing to?\"\n\n\"My room. #820.\"\n\nI let out a nervous laugh but my mouth immediately went dry. \"Wow, that's rather... confident of you.\"\n\nHis hand slipped from my waist and moved over the soft curve of my hip bone, brazen and daring as it continued to slide down the length of my leg while I looked down at him, feeling like I should stop him but being unable to put up any resistance. Not even when his fingers slid around my smooth tanned calf and squeezed it softly. My breathing became shallow and I felt my nipples harden and rise up under the thin fabric of my bikini as I felt him slide his hand up and around the inside of my thigh as though daring me to stop him.\n\n\"What are you doing?\" I finally whispered.\n\n\"Just seeing how much you're going to let me get away with.\"\n\nHis fingers slid slowly towards the inside of my bikini bottoms. I should have slapped his hand away but instinctively I found myself spreading my legs apart, just slightly, my gaze heavy and half-lidded as those fingers traced the length of my slit through my bikini bottoms that were already soaked with juices. I licked my lower lip, biting it softy, as he mercilessly teased me, sliding his fingers back and forth. I couldn't believe his audacity, nor my own at letting it go on, ignoring the other hotel patrons typing away at their own computer stations. They were either oblivious to what was happening, or trying hard to ignore it.\n\nI opened my eyes and found him watching my expression carefully, enjoying my lusty disregard for the moment. His fingers hooked into the inside of my wet bikini bottoms to trace the outline of my smooth pussy lips before sliding a finger into my wetness. I smothered a gasp as I felt him push into me, first one finger and then two, surprising myself as I moved back against them to deepen his entry.\n\nHe smiled. \"So do you think you can get away from your boyfriend tomorrow afternoon?\"\n\nI felt him slide his fingers in and out of me, smoothly finger-fucking me in public, willing me to stop him and extremely confident in knowing that I wouldn't. His fingers felt so good inside me that I found my hips moving back against them, imagining what it would be like if he grabbed me by the hair and forced me down over the computer table and just fucked me then and there while everyone else watched. I heard someone in the vicinity clear his throat with distinct discomfort and part of me knew that we weren't being very discreet.\n\n\"I have to... get back.\" I whispered breathlessly, while he increased thrusting in and out with his fingers, while his thumb teased my clit.\n\n\"Before your boyfriend notices you're gone and comes looking for you? What do you think he'd say if he walked in and found a stranger fingering his girlfriend? Do you think he'd mind?\" His voice was teasing, clearly enjoying how conflicted I was.\n\n\"Yes... he'd be... furious,\" I stammered. I made a futile attempt to push his hand away but his other hand caught me by the wrist, and held me tight.\n\n\"But you're ready to break the rules now, aren't you?\"\n\n\"Maybe,\" I whimpered. \"Look I don't know. I need to think about it.\"\n\nI wanted him to convince me, and take away the guilt I feared I might have if I went through with this. I had never cheated on Scott before. In all likelihood I would end up walking down the aisle with him one day. Did I really want this on my conscience? Was it worth it to risk everything to satiate the sudden lust for this one random stranger? With all these thoughts relentlessly playing through my mind, I desperately wanted him to force my hand into a decision. But instead, he abruptly slid his fingers out of me and smiled and leaned back against his chair while I stood in front of him, my knees still trembling.\n\n\"Pretend to think about it tonight. And then tomorrow I'll see you at 3pm.\"\n\n\"I don't know if I'll be there.\" I whispered, my uncertainty growing.\n\nHe stood up and drew in his breath, standing close to me. So close that I felt myself freeze as he leaned into me as though to whisper, and I felt his tongue flick my ear. \"I know you'll be there,\" he said in a low voice.\n\nI watched him walk out of the business centre, confident in his stride. He looked back and gave me a knowing wink before he disappeared down the hall. I was left standing there, breathing heavily, and knowing the decision was still mine to make, but fearing that my undeniable attraction to him may have already made it for me.\n\nThat night I slept restlessly beside Scott. My desires had left me feeling both guilty and deliciously dirty. I had never done anything like this before. And somehow I felt like I needed to. Despite how devious it was to hook up with a total stranger on a vacation holiday with my boyfriend, my desires began to overtake my good judgment. In the morning, I felt like I was outside the moment, listening to myself easily lie to Scott about a spa appointment I had made for 3pm. He barely looked up from his Blackberry, and mumbled some encouraging words about enjoying myself. I smiled to myself, spurred on by his lack of interest. Oh, I'd enjoy myself.\n\nAt 3pm, my sandals were clicking down the sandstone pathway leading to the section of the hotel by the beach. I was nervous and my stomach was in knots. I couldn't believe I was actually going to go through with this. I kept a countdown to the minutes that passed where I could still turn back and call it all off, and my pace slowed considerably as I walked down the hallway nearing his hotel room. I lingered outside room #820, realizing it was the moment of no return. I was wearing a little white tank top and a short white skirt that set off my golden tan, and yet seemed oddly pure considering I had dressed with the explicit plans of cheating on my boyfriend. Scott had said he was going to the gym and then would likely take a nap before dinner. That gave me... a few hours.\n\nOh god. What was I doing? The panic returned and made me second-guess my decision. I started to back away from the hotel room door when it abruptly opened. He was standing there, wearing dark jeans and nothing else. He had a gorgeous body, all lean muscle, perfectly defined, with tanned smooth skin. His smiled wryly, bracing his hands against both sides of the door as though he was a jungle cat staring down his prey.\n\n\"Where did you think you were going?\"\n\n\"How did you know I was...\"\n\n\"I've been watching you through the keyhole. I figured you'd be the type to always be exactly on time. I was just waiting to see how long it was going to take you to knock.\"\n\n\"Well, to be honest... I'm not sure this is such a good idea...\" My voice trailed off unconvincingly.\n\nHe let out a low laugh. \"Sounds like you want me to persuade you.\"\n\nI smiled nervously. \"It's not that. You see, it's really...\" but before I could ramble through another excuse, he stepped forward and grabbed my wrist, drawing me towards him, until he could seize me around the waist and pull me into the room. I yelped with surprise as suddenly I was inside the hotel room with him, as he had slammed the door and pinned me up against it. My heart started pounding in response to the sudden shift in the uncertainty of my plans.\n\n\"I don't think I can do this,\" I gasped.\n\nHe pressed the length of his hard, muscular body against mine and seized both my wrists pulling them up over my head and pinning them against the door. I could feel the hard swell of his cock through his jeans as he pushed his pelvis against mine, as though tempting me with what was to come. My breathing quickened as I writhed against him, the force of his restraint was unexpected and had me immediately aroused.\n\n\"Do you want me to do it for you? Do you want me to make you my dirty little slut this afternoon? Will that make it easier for you? More exciting?\"\n\nI couldn't speak. My green eyes met his, trying to process what was happening, but ever more aware of the feel of the contours of his body against my small frame. I leaned my upper body back against the door, my chest rising and falling with every breath as I thrust my little hips against his, eager to feel him hard against me. He smiled slowly, encouraged by my instinctive reaction that belied my weak protests.\n\nHis leaned in again, his hot breath against my neck, his lips near my ear. \"Looks like you're ready to play.\" Teasingly, he bit my earlobe, still holding my wrists pinned tightly above my head. \"Are you going to be a good girl for me, and do everything I say?\"\n\n\"Yes.\" I murmured obediently, feeling a rush of raw desire for him. The chemistry of our initial attraction rose up to fill me with a kind of debased sexual devotion that I knew instinctively would hold no inhibitions when it came to pleasing him.\n\nEven restrained as I was, I pressed my body back against his.\n\nHis face came around, inches from mine and he smiled. \"You're feisty, aren't you? But remember, even though you're breaking all the rules... you still have to play by mine.\"\n\nI was panting by then, eager for him. \"I'll do anything you want\".\n\nHe let out a low laugh. \"Mmm... you probably shouldn't have said that.\"\n\nHe clamped down onto one of my wrists bringing it down between us and twisting it as he swiftly spun me around, pushing me forward until my cheek was against the smooth wooden door, before capturing the other wrist and pinning them both behind my back. I was breathing hard; the uncertainty of what I had gotten myself into was beginning to excite me. I could feel the dampness in my little white panties as he pressed the hard bulge in his jeans against my ass, grinding against it. He moved so that he was against my hands that he had pinned against my lower back. Licking my lips, my fingers reached blindly to stroke that hard cock through his jeans, the torment of wanting to touch him was palpable within me, even as he limited my mobility.\n\n\"Do you feel something that you like?\" he teased.\n\n\"Yes,\" I moaned. \"I do\"\n\n\"How badly do you want me to fuck you right now? You want me to pound that tight little pussy nice and hard, don't you. And then if you beg nicely, maybe I'll fuck that slutty little ass too\".\n\nI could feel myself soaking through my panties at his words, as he pressed his hips harder against my ass, so that I could feel that delicious bulge swelling against my flimsy white skirt.\n\n\"I want it,\" I whimpered finally, unable to deny my desires. \"I want you to fuck every hole and fill me up with cum, and turn me into your little cum slut.\"\n\nI could almost hear him smiling with satisfaction at my sudden flood of profanity, as my hesitations and reluctance faded away and was replaced with a strong throbbing and tight ache in my pussy.\n\n\"You're going to have to earn it first,\" I heard him say.\n\nHe kept one hand clamped tightly around the back of my neck keeping my face pressed against the door, and with the other hand, he roughly pulled up the back of my skirt, pushing the hem up so that my round ass cheeks were exposed. I felt his fingers in between my thighs, testing my wetness. My juices quickly covered his fingers.\n\n\"Hmm... you're pretty wet for a girl that was nervous about cheating on her boyfriend. Do you get this wet for him?\"\n\n\"N...n...no,\" I stammered, feeling him push aside my white thong and slide his fingers up into my soaking cunt. I pushed back against his entry, unable to resist moving against them like I had the day before, desperate to feel some part of him filling me up.\n\n\"Uh uh\", he scolded me. \"Did I say that you could start fucking my fingers? I don't think so.\"\n\nHe pressed my face harder against the door and I moaned a little as I felt both his hands steadying my hips before yanking the little white panties down my thighs until they were at my ankles. Then he took my own hand and placed it between my legs. \"Go on, I want you to fuck your fingers\". Obediently I slid my fingers into my moist folds, shocked by how dripping wet I was. I played with my clit while I slid my digits in and out of my pussy, coating them with juices. Then he abruptly pulled my hands behind me. \"Spread those little ass cheeks apart for me\".\n\nSmothering a moan I did as I was told, pulling my cheeks apart\n\n\"You seem like a dirty girl\", he mused, obviously pleased with my compliance. \"I'll bet you like to finger fuck your ass too, don't you\".\n\n\"Sometimes,\" I whispered meekly, somehow embarrassed.\n\n\"Hmm... and do you let your boyfriend fuck your ass?\"\n\n\"No\" I admitted finally. \"He's never... asked... or... wanted to\".\n\n\"But you like it don't you? You must miss the days when you had men fucking this slutty little ass all the time\"\n\n\"Sometimes.\"\n\nHe pressed my fingers, still slick with my pussy juices against my tight hole. I knew what he wanted. He grabbed both cheeks of my ass and held them apart, instructing me as I slid my finger into my ass, first one, and then two while he watched me rhythmically moving them in and out, creating that familiar tight pleasurable ache that had been so long since I'd indulged. I felt my face flushed as it pressed against the cool wooden door as I moaned softly, imagining his hard cock had replaced my fingers already.\n\n\"That's good,\" he said finally in a tight voice. \"Now clean those fingers off in your mouth. I'll bet a good little slut like you loves to lick ass\".\n\nFeeling dirty and desperate for more, I brought my finger around, sliding them into my mouth. He grabbed a handful of my long blond hair and pulled it back so he could watch me. My large green eyes looked up at him mischievously as I slid my fingers past my soft pink lips, slurping the wetness off my fingers while he smiled at my obedience.\n\nOnce he was satisfied, he stepped forward, grabbing me roughly around the waist and moving his mouth against mine. My lips parted against his kiss that was hot and openly demanding. I sucked his tongue into my mouth, eager to taste him, desperate to have any part of him inside me. His hands peeled down the straps of my tank top, pushing it down over my waist and shoving it over my hips along with the little skirt. I wriggled to get out of it, wanting to feel his hot skin against mine. I felt his hands on my ass, pulling me into him, and I was sure I was soaking his jeans as I threw one leg up over his hip, seeking to feel that nice hard bulge against my pussy again. I was getting more needy and more desperate for him to fuck me, and while he was happy to indulge me, it was clear there were more rules to be followed before this reward.\n\n\"You're not quite done just yet,\" he said, grabbing hold of my small shoulders. He forced me down until I was on my knees, naked, flushed with lust, and panting hard.\n\n\"I want you to fuck me,\" I gasped, looking up at him with pleading eyes. The waiting and anticipation had my heart thudding in my chest loudly, and the blood rushing through my head. I would have done anything in that moment; suddenly ready to beg for something I had been so reluctant for only a short time earlier.\n\nHe tilted my chin upwards. \"Oh I'll fuck you. But first you have to show me that you deserve it\".\n\nHe gestured to the buckle on his jeans, and like a starved woman, my hands worked quickly to unbutton them and tug them down. My mouth watered to see his beautiful cock spring free, already hard and glistening with precum. My hands slid up his thighs, as I leaned forward, keeping my eyes locked on his as I flicked my tongue over the knob, then running it along the underside of his shaft, undulating it against that sensitive spot just beneath the head. Then I took him into my mouth, moving my soft, wet lips all the way down the length of his cock. I wanted all of him in my mouth, and I pushed forward, deeply, until I could feel the pulsing head against the back of my throat. I paused, fighting my gag reflex and moved forward yet again, looking up at him for approval. He smiled down at me and put his hands into hair, grabbing hold of my head, firmly. I started to slide my lips back over his now wet shaft, trying not to sputter, and then relinquished control to him. He began to thrust his hips back again forth, over and over again, relentlessly fucking my mouth while I kneeled naked in front of him, dripping wet with my own juices.",
        "\"Don't take your eyes off mine,\" he instructed me in a low voice.\n\nI obediently kept my gaze fixed on his, my small hands gripping his muscular thighs, hanging onto him. I loved seeing the look of lust in his eyes while he used my mouth, moving back and forth past my wet lips. I could feel his delicious pre-cum mixing with my saliva running down my chin, as I gasped and panted around each well-timed thrust. I was unabashed and uninhibited. It was a moment to submit to my dirtiest fantasies without thinking about anything beyond those delicious hours, frozen in time, in that hotel room in Cabo.\n\n\"That's it, you're doing well. I think you like my dick in your mouth, don't you?\" he said, not pausing, as he continued to fuck my face with rhythmic thrusts.\n\n\"Uh hmmm,\" I struggled to signal my pleasure, unable to emit more than a gurgled sound as I sucked that delicious shaft as it penetrated further into the depths of my mouth.\n\nFinally he slid it out of my mouth, emitting a wet pop as the head slipped past my hungry lips. I gasped as I tried to catch my breath, my lips and chin still wet from my efforts. But before I could gather my bearings his hands were on my shoulders pushing me back until I was against the ceramic tiled floor. It felt cold against my naked body, but everything inside me felt hot and electric as I gazed up at his hard naked body standing over me.\n\nMy hand moved instinctively to my slippery wet pussy lips, as I played with my clit, breathing hard, and excited for more. \"I want to taste you,\" I gasped. \"I want to make you cum.\"\n\nHe lowered himself over my face, and my head slightly rose up off the ground in anticipation, my lips parted, my tongue sliding out to suck his balls into my mouth as he straddled my face. I rolled them on my tongue, massaging them with my lips, while my hands slid up over his muscular ass, pulling him forward. As he inched upward, my tongue released his balls and began to slide, wet and eager towards his asshole. My tongue circled his tight hole before I began to the length of it with long strokes, hearing him groan with appreciation. It felt so dirty to be laying there on the floor of another man's hotel room, and even more debased to know my unsuspecting boyfriend was somewhere else on the resort, oblivious to the knowledge that his girlfriend's tongue was about to find it's way into a stranger's ass.\n\nThe very idea of it made me writhe beneath him, my juices flowing as he reached forward to slide his fingers into my wet folds and rub my clit. My tongue pushed against the tight ring of his asshole, probing past it and then wiggling to get even deeper inside. I stiffened my tongue so that I could fuck his asshole with it, thrusting in and out; moaning as he expertly stimulated my clit with one hand while stroking his cock with the other.\n\nMy hands gripped the muscular cheeks of his ass, keeping them apart as I continue to lick and tongue fuck him, encouraging him to grind against my face, loving how dirty it all made me feel.\n\n\"Mmm, you love licking ass, don't you.\"\n\nI moaned my agreement in response, not taking my tongue off him for a second.\n\n\"Does your boyfriend know what a little slut you are? Do you tongue-fuck him like this too?\" He continued grinding against my mouth, groaning as I worked my tongue deeply inside his asshole. His finger continued to rub my clit and I felt my juices slippery against his fingers as that familiar throbbing began inside me.\n\n\"I don't lick his ass,\" I gasped finally. \"I only want to lick yours. I want you to come all over me, so I can lick up every last drop, and taste every part of you.\"\n\nHe groaned and continued stroking his cock, while I slid my tongue in and out of his delicious little hole, feeling my own orgasm building while I moved against his fingers, until I was moaning. I felt the hot spasms radiate from my clit as it took me over the edge and I came hard, my juices soaking his fingers. It made me grip his ass cheeks hard, as I dove my tongue into him feeling his muscles contracting as he neared orgasm. I released him as he moved back just slightly as I tilted my face up, my lips opened wide to catch the spattering of cum that erupted from his cock in several long creamy jets. It covered my tongue, and my lips, and my cheeks. He quickly slid his cum covered cock into my mouth and I sucked it greedily, swallowing his warm seed. I sucked and licked him clean and then smiled up at him as he used his fingers to transfer the cum that had spattered onto my cheeks and neck up into my mouth.\n\n\"Is that what you wanted...to be my dirty little cum slut? To break all the rules?\" He mused, while I sucked his fingers dry, my eyes never leaving his.\n\n\"Yes\" I admitted with a mischievous grin. \"Right now I only want to live by your rules.\"\n\n\"You're following them nicely. Did you come hard?\"\n\n\"Mmm... yes.\" I could feel my pussy slick with juices, and I was still flushed from my orgasm.\n\n\"Good. Because I can't wait to taste you.\"\n\nHe stood, pulling me up off the floor with him, his hands clasping the round cheeks of my ass as he half dragged me to the bed, throwing me down onto it, while I panted, breathless and still ready for more. He seized my legs and pulled them up and apart. Being as flexible as I was from years of dance training, they fell back easily against my breasts and spread wide apart. I watched him with wide eyes, and smothered a moan as he bent forward until his tongue found the wet folds of my pussy now slippery and slick with juices. He sucked my clit before his tongue dove deeply inside me, and then moved up again to flick my clit back and forth while I writhed and moaned, until I was bucking my hips up against his mouth.\n\n\"Fuck yess....\" I cried.\n\n\"Mmm, you like that, don't you my little slut,\" he murmured, before diving his tongue back into me.\n\nHe ran his tongue up and down my juicy slit, increasing the length of his strokes. His hands gripped my ass from below, lifting me slightly off the bed so that his tongue could slide down to my ass, pressing against my little puckered hole, and making me moan with pleasure. My hands gripped both my ankles as they were up high over my head, giving him full access to everything he wanted. He entirely controlled my lower half, lifting it up off the bed, bent in half as I was, and drawing me against his mouth while he licked my ass and thrust his tongue into it eagerly, while my hands clutched the sheets for balance. I could feel my pussy convulsing as he alternated sucking my clit before sliding down to sample my pussy and my ass with an unexpected rhythm that had me gasping. Each sensation drove me closer and closer to a full-bodied orgasm that had me thrusting desperately against his mouth and thrashing against the sheets. He fingers dug into my ass cheeks, holding me tightly as his tongue filled me again, feeling each spasm as I came hard for him.\n\nThe heat from my orgasm had not dissipated. My pussy was still throbbing and sensitive, and my eyes were half-closed still revelling in the after throws. Before I could gather my senses, he slid up over my body, and I felt the sudden hard thrust of his cock filling my pussy to the hilt. I moaned with pleasure at the sudden assault, as my slick cunt gripped his cock tightly as he pounded my hole, making the bedsprings creak beneath us. He hooked my legs up high, over his shoulders, deepening his entry until I could feel his balls slapping against my ass. The room was filled with the sounds of our sex, loud and wet, combined with our moans and gasping as he fucked me harder than I'd ever been fucked before. My hands slid down over his muscled back to claw at his ass, pulling him into me, while I pushed up to meet every thrust. The tempo increased until we were both wet with sweat, and the headboard was slamming against the wall.\n\n\"Fuck me\", I cried in dazed ecstasy. \"Fucking use me up and make me scream.\"\n\n\"Oh yeah. You want more?\" He taunted, as he aggressively pounded me harder.\n\n\"Yesss\"\n\nSuddenly, he pulled out and rolled me over roughly.\n\n\"Get on your knees,\" he demanded.\n\nPanting, I scrambled to rise up on my knees, bracing myself on shaky legs. My hands clutched the sheets, as I presented my ass to him, arching my back and looking over my shoulder teasingly. \"Is that you want?\"\n\nHe smiled, and raked his hands roughly over my ass before giving it a nice hard slap, leaving a glowing red print in its wake. The heat from the sting was delicious as I felt him spread my cheeks apart, using the wet juices from my freshly fucked pussy to smear over my asshole.\n\n\"How long has it been since someone has fucked this little ass?\" he asked.\n\n\"Too long\" I moaned. \"And it's all yours now?\"\n\nI felt the smooth head of his cock slide back and forth over my asshole, teasing it while I boldly pushed back against it, my hands gripping the sheets, preparing myself with anticipation for his delicious assault. He pressed forward, and I felt myself stretch to accept the large knob of his cock. I moaned and arched downward until my face was against the mattress. My hand slid between my legs to play with my clit as I pushed back against him, relaxing the muscular ring of my asshole to accept more of him inside me. Slowly he slid his entire shaft deep inside my ass, until I could feel his balls pressing against me. The depth of his penetration filled me up so completely and turned the initial ache of his entry into a heady pleasure that filled me with a warm heat and a desire for more. He slid back, before plunging forward again, each thrust causing me to moan as I pushed back against him. I urged him on, begging him to fuck my ass, feeling depraved and raw with my need to be owned by him completely.\n\nHis hands squeezed my ass cheeks, raking them as he continued to fuck me fast and hard.\n\n\"Does that feel good?\"\n\n\"Oh god, yes,\" I moaned, as I clawed at the bed, my breasts jiggling with every delicious thrust.\n\n\"You like being my little cum slut don't you?\"\n\n\"Yes!\" I cried, lost in the moment, as I spewed forth a litany of dirty profanities begging him to fuck my ass as hard as he could, eliciting a moan from him as he grabbed the long length of my hair and pulled it, yanking my head back as he renewed the intensity of his assault. He continued pounding my ass as the bed shook beneath us, the headboard slamming viciously against the wall. We continued on and on until I was flushed and wet with sweat, feeling split apart by each thrust of his cock, ever hard and eager to fuck my ass with an energy that seemed relentless. My pussy throbbed in response, my hair being pulled back in ecstasy until his hands were on both my shoulders, against my neck pulling me back against him with every violent thrust. The wet sounds of our sex filled the room, as I was coming hard. I moaned as I felt the fast electric pulsations radiate from my cunt, causing my little asshole to contract around his cock as though milking it. He pushed forward, penetrating me as deeply as he could before I felt his cock throbbing inside me, filling me with long streams of hot thick cum. His hands ran up and down my body, slick with sweat as he slowed his thrusts until he finally slid out of my ass.\n\nStill gasping, I rolled over, sliding down as I looked up at him with half-lidded, lusty eyes, and put my lips around his cock, still slippery and wet with cum, and licked him slowly. I slid his shaft deeply into my mouth, tasting the remains of our heated sex play. He smiled at me, running his hands through the messy tangles of my blonde hair, watching me clean every last drop of cum from him. Finally, once I was satisfied, I collapsed back against the bed sheets, my whole body exhausted, feeling dirty and beautifully fucked. He lay down beside me, and for a few moments there was silence, as we caught our breath, listening to the soft whir of the ceiling fan. The haze of our afternoon slowly began to clear as each breath brought me slowly back to the truth of where I was.\n\n\"Oh my god,\" I sighed finally. \"I'm such a slut! I can't believe I did that.\"\n\nHe let out a low laugh. \"It's your vacation from reality.\"\n\n\"I feel like I've been taking too many vacations from reality.\" I muttered under my breath, suddenly thinking of Damon and the fact that I had lost our little bet. He would love hearing all the sordid details, I thought to myself. But then what did that mean? Was I really about to admit to what I had just done and then be on the hook to book myself on a flight to Damon's home city? And then I would end up cheating on Scott yet again, and continuing my spiral into sexual slutdom! Scott. The thought of him suddenly flew through my mind and in a panic; I finally looked towards the sliding glass doors leading onto the beach and noticed that dusk had fallen already. How long had I been in that room? I turned to the clock on the bedside table and realized it was 7pm. I let out a little gasp.\n\n\"I have to go! I didn't realize it was so late. My boyfriend thinks I'm at the spa!\"\n\n\"That was one hell of a spa appointment,\" he teased.\n\nI smirked as I quickly got to my feet and started to put my clothes back on and try to brush through the tangle of my hair. I needed a shower, but I couldn't waste any more time before getting back to the room. Hastily I surveyed myself in the mirror and then turned to this man I barely knew, although no longer a stranger to me, as he walked me to the door.\n\n\"I had a great time.\" I admitted. \"It was... the perfect escape.\"\n\n\"And now you think you're ready to return to the real world?\" he questioned.\n\nI smiled. \"Yes, I do. And after all, what happens in Cabo, stays in Cabo.\"\n\nHe laughed, his green eyes sparking mischievously, as he raised an eyebrow. \"Are you sure about that?\"\n\nI grinned, \"of course!\"\n\nI left a quick kiss on his lips, and then slipped out the door, quickly hurrying through the warm balmy evening to my own part of the hotel. I felt like such a dirty girl, and yet somehow I felt more alive than I had been in a long time. The blood was pumping fast through my veins again. My senses seemed more alert, more self-aware. Clearly I looked like a visual mess. I'd never been fucked so hard in my life, and my skin was still flushed and my hair in disarray. I felt his cum just starting to drip from my ass as I opened the door to my own hotel room. It was dark, and I crept inside. Scott was still sleeping. Not believing my good luck, I snuck into the bathroom and threw on the lights, grateful for the hot shower that would wash away my sins. Nobody would ever have to know.\n\nIndeed, Scott had no idea what hour I had returned to our hotel room that evening. The next day we were back on our flight home, leaving the memories of Cabo playing over and over in my mind. A dirty adventure with a mysterious stranger had been just what I needed. I smiled to myself, realizing that I had never even known his name! Part of me had been somewhat disappointed that I hadn't seen him at all the next day around the resort, but I resigned myself to the reality that it had been a moment in time. It was something to put into the vault and never to be spoken of again.\n\nAs I sat in front of the computer the following evening, sipping my vodka soda, I questioned what to tell Damon. Part of me wanted to brag about all the dirty details, and the other part of me realized I would be setting something in motion by conceding defeat. There had been some guilt around what I had done. But it had been vacation... a separation from my real life. And wasn't real life more important than indulging yet another fantasy?\n\nThe chat screen suddenly popped up in front of me, and my heart skipped a beat.\n\nDamon: Welcome back. So, what's the verdict?\n\nI paused for a long time... so much so, that he ended up typing again.\n\nDamon: Uh oh. Is that the silence of guilt that I'm hearing? \n\nClearly I had to make my move. I took a deep breath, typed my message, and hit send.\n\nAshleigh: I didn't do anything.\n\nHis response was instantaneous.\n\nDamon: Liar.\n\nI typed back fast, before I could change my mind.\n\nAshleigh: I'm not lying, I swear! I thought about it... but in the end I chickened out. \n\nDamon: Are you sure? \n\nAshleigh: Yes, I'm sure... \n\nDamon: Well... then congratulations. I guess you won the bet!\n\nI started to feel a pang of guilt as the memories of my sordid afternoon skipped through my mind again.\n\nAshleigh: You don't have to send the pic if you don't want to... it's no big deal. \n\nDamon: No, no... a bet's a bet. You would have fulfilled your end of the bargain if you'd won, right? \n\nAshleigh: Of course I would have! \n\nDamon: Well, then so will I. Hang on a sec... I'm sending it right now.\n\nThe email popped up in my inbox a few minutes later and I stared at it, feeling ambivalent about getting any kind of reward after all my deceptions.\n\nThe chat-box flashed again with another urging message.\n\nDamon: Open it.\n\nWith a sigh of trepidation, I opened the attachment, and the picture popped up as I blinked back disbelievingly at the screen. The dark hair, green eyes, and mischievous smile staring back at me were all too suddenly familiar and I leaned back in my computer chair, my heart hammering. I read the email in wide-eyed shock. \"Cabo was fun, wasn't it? I'm looking forward to seeing you again. Let me know your flight details. I'll meet you at the airport.\"\n\nI shook my head, my lips curling up into a dirty little smile.\n\nHis text flew up on the screen a moment later.\n\nDamon: Surprise! \n\n*** The End *** \n\nAuthors Note: Any resemblance to persons living or dead is purely intentional. Thanks to DamonX for inspiring me, and for giving me permission to publish this piece."
    ],
    "authorname": "Dancing_Doll",
    "tags": [
        "rough sex",
        "dirty talk",
        "anal",
        "vacation sex",
        "rimming",
        "cheating",
        "oral"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-cabo-connection"
}