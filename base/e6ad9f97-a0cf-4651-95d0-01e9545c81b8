{
    "title": "Past, Present and Future Ch. 04",
    "pages": [
        "<p align=\"center\">A short story of a sugar relationship and where it can lead. <br>It's a stand-alone tale but follows from and builds on earlier chapters.<br> Please enjoy! <br>\n\n+</p>\n\nWednesday \n\nI'd met my roommate in the library for a tea. If there's one things girls can talk about almost endlessly, it's new relationships.\n\nI could see Marcy eying the diamond as we talked. She was impressed with it, perhaps a touch jealous, even though I'd told her it wasn't really an engagement ring. It was, I don't know quite what to call it &mdash; a commitment&hairsp; ring, maybe?\n\n\"So your, um, 'arrangement' stays the same?\" she asked.\n\n\"Yes.\" I dimpled a little at the thought. I was surprised at how happy I was with it &mdash; me, with all my principles.\n\n\"And you enjoy it? I mean, really? The no-clothes thing? Being a sugar-baby?\" Her eyebrows were up, questioning. I could see she was still struggling with that. A fully-dressed older man expected a pretty young woman to be constantly nude for his visual pleasure would be well over the line for most women on campus.\n\nI had struggled with it too and I had to think about how to best answer.\n\n\"Like I said, at first, no. I was totally pissed off at first. I was angry at Tony for not playing the usual boy-girl social-interaction games. I was angry at myself for having got caught doing something really juvenile and, yeah, I was furious at myself for agreeing to spend the whole weekend with him, knowing in advance that that meant my being naked the whole time.\n\n\"I mean, I didn't have to agree to his 'invitation', but he'd just politely snickered at my ain't-I-cute routine and pushed a big stack of black chips into the middle of the table. I could've stomped away, but Tony made me feel, in a really weird way, that he was treating me like a fellow adult, as opposed to a smug, entitled adolescent who's just noticed she has tits.\n\n\"And, yeah, it was totally embarrassing having to leave my clothes in the closet once we got to his place. But, you know, I never felt threatened, Marcy. Not once. I always had an option, a way out. I could do what he expected or &mdash; totally my choice &mdash; he'd put me into a cab and send me home with no hard feelings. A boy our age would have been pushing really hard for me to go along, but Tony? It was like he didn't even care.\"\n\nShe nodded a little, took a sip of her tea.\n\n\"I guess it became much easier to accept when I realized that he wasn't really perving out over me, Marcy. Yeah, I was starkers and, yeah, he spent a lot of time looking at my boobs and bum, but he wasn't greasy about it like the boys on campus would have been. He was appreciating&hairsp; my body for the same reason he enjoyed my music &mdash; because he found me beautiful. It was totally different. I felt like a work of art in a museum or something.\n\n\"And there's a difference between embarrassed and humiliated. I was really, really embarrassed at first, but he never humiliated me, never asked me to do something I'd feel ashamed of later.\n\n\"And when he did finally make his move, it was just amazing. I thought I'd die, Marcy. He's good, really good.\"\n\n\"Really good at what?\" a voice said from behind me.\n\nI jumped.\n\n\"I thought I saw a familiar face,\" Tony smiled. \"How's my favourite lab partner?\"\n\nTypically, he was the best-dressed person in sight &mdash; nothing fancy, just a mostly-unbuttoned dark blue shirt with its sleeves rolled up, dark slacks and sockless black loafers. His white hair and beard were perfectly groomed. He looked like he was on his was to a GQ photoshoot.\n\n\"Tony,\" I said, \"this is my roommate, Marcy. Marcy, meet Tony.\"\n\nTony sat down without being invited. I'm embarrassed to admit how pleased I was that he sat next to me and not her. Don't be bitchy, Stephanie. \n\n\"Ah, the renowned Marcia!\" he smiled. \"We meet at last.\"\n\nHe didn't offer to shake hands.\n\n\"Stephanie tells me that you're an accomplished artist,\" he said.\n\n\"Well, hardly 'accomplished',\" she replied. \"I'm still learning.\" She batted her eyes and I laughed inwardly. I'd just finished telling her that he didn't play the usual boy-girl flirting games and she'd followed her hormones; I could see how this one would play out.\n\nI hoped.\n\n\"Stephanie says you're experimenting with watercolours. They're supposed to be very difficult to learn.\"\n\nI looked at him out of the corner of my eye. Normally he was, if not exactly remote, then at least reserved. This was the most pleasant I'd ever seen him be to, well, to anybody but myself &mdash; and that was only after he'd shredded me for the same sort of cutsie routine. Was he being nice because Marcy was my friend?\n\n\"They can be,\" she said. \"I need to practise more. Stephanie tells me you have great views from your porch. And great sunsets.\" Her smile was dazzling, perfect white teeth.\n\nWas she angling for an invitation?\n\nShe batted her eyes again, licked her lips.\n\nI waited for his response. His grey eyes suddenly looked positively flinty; he'd seen through her games, the same way he'd seen through mine. It was truth or consequences time; I waited to see how he would react.\n\n\"How to put it, Marcy?\" he said. His voice had that still calmness I had come to recognize as controlled irritation.\n\nHe put his hands on the table, giving me an option of holding his or not, depending on how I saw my reputation.\n\nI reached out, took a hand, squeezed firmly. He looked down at that, then at me, smiled warmly and squeezed back gently.\n\nA little of the irritation faded from his face.\n\n\"Marcy, it's going to depend totally on what my girlfriend here says.\" My heart skipped a beat. It was the first time he'd used that word, the first time he'd publicly acknowledged our relationship. I'd always despised reading about women with 'fluttering hearts'. I understood it now. Mine was.\n\n\"Stephanie visits my farm under some special... conditions.\" His eyes shifted to mine, \"Which remain in place, incidentally.\"\n\nMarcy's eyes opened very wide. She knew what those conditions were -- and now she knew that Tony knew that she knew. If you follow all that.\n\n\"So, it's her call, Marcy.\"\n\nHe looked at his watch, rose to his feet, adding, \"Under the same conditions, of course.\"\n\nMarcy blushed and her jaw dropped a little. I loved Marcy, but a triumphant Inner Stephanie did a private happy dance. Thank you, Tony!\n\n\"Forgive me, but I do have a class. It's been a pleasure to meet you, Marcy.\" With that, he kissed my hand and was gone. I could feel the tingle all the way down to my toes. I saw a couple of people around us smiling at his old-fashioned courtliness.\n\n\"Wow,\" Marcy said quietly. \"I see what you mean.\"\n\nShe shivered a little. \"He's pretty spectacular.\"\n\nSilent for a minute, she finished her tea, looked at the cup in her hands, turning it as if it might hold the answer to an age-old mystery.\n\n\"So?\" she asked, \"It's up to you?\" She wasn't giving up easily, but at least she wasn't batting her eyes at me. \"Including the clothes?\"\n\n\"I need to think on that, Marcy.\"\n\nBy itself, I was OK with the concept of my BFF coming to paint on Tony's deck.\n\nAnd I trusted Tony and I liked him. Oh, crap, no &mdash; thinking on it, I realized that, despite our differences and despite the short amount of time we'd been together and despite our financial arrangement, I pretty much loved the man. Therein lay the complication.\n\nTony had just explicitly said his no-clothes-at-the-farm rule was still in effect, but how that applied to the tiny cutie sitting in front of me, I wasn't quite sure. I didn't want to be the only naked woman there, but if she had to go bare too, that led to 'Tony plus bare Marcy' and I wasn't sure how that equation would play out.\n\nI knew I wasn't ready to share Tony.\n\nAll that took me maybe two heartbeats to work through. It left my mind no clearer.\n\n\"But here's something for you to think on, Marcy. Being with Tony isn't like going on a normal date with a guy &mdash; you know, he's thinking about how to make his move before you even get to the theatre and you're always wondering when it's coming and what to do when it does. There's none of that with Tony.\n\n\"I tried the 'little bundle of sexy' on him after class and he stared me down like I was a bratty child trying to butt into an adult discussion.\n\n\"And, honey,\" I said, patting her hand, \"you just tried the same cutsie routine I did.\"\n\nShe flushed. I could see she was irritated by my having seen through it, honest enough acknowledge it, a good enough friend to not hold the truth against me. I hoped so anyway; I really didn't want to lose Marcy as my friend.\n\nMy phone chirped. It was a text from Tony, a simple: ?\n\nI shrugged, showed it to Marcy. She shrugged back. Over to you.\n\nI thought, typed: we're thinking -- c u friday.\n\nI looked at it, added: XO.\n\nI hit Send.\n\n+\n\nThursday\n\nI walked into my room with a smile on my face. It'd had been a good day. I'd even got a couple of assignments back with higher-than-expected marks. I was looking forward to spreading some of that joy around with a good roommate gossip evening.\n\nI could see instantly that that wasn't going to happen. Marcy was sitting on the edge of her bed, clutching her teddy bear as if it was the last friend she had in the world.\n\n\"Marcy?\" I knelt beside the bed. \"Honey? What's wrong?\"\n\n\"Oh, I just had another big quarrel with my sister. It's the same old shit, every time.\"\n\n\"Want to talk about it?\"\n\n\"No. No point. It's always trivial stuff. Denise is so opinionated, so narrow-minded.\"\n\nShe sagged. \"I just hate the fighting.\"\n\nShe sniffed. I sat beside her on the bed, stroked her hair. \"It's OK, Marcy. It'll be OK.\"\n\nI thought for a moment. \"I don't know what sisters are like, of course.\"\n\nI had three brothers and that dynamic changed every time I saw them. They went from knuckle-dragging trolls to shining knights &mdash; and back again &mdash; about every ten minutes.\n\nShe gave me a wry smile. I put my arm around her shoulder and she leaned into me. At times like this, it's all about just being there.\n\n\"What's your mom say?\"\n\n\"She has to live with Denise, at least until she finishes high school. She doesn't want to rock the boat too much. And it's half my fault; I could just ignore Denise's crap, but she knows just which buttons to push to set me off.\"\n\nShe needed to talk. I needed to listen.\n\n\"I know it's going to happen every time I call home and I always light up at her shit and I'm still crying and it's so silly.\"\n\n\"No. No, it's not. Not after Mark dumping you two weeks ago and everything else. It's a lot happening all at once, a whole lot of stress.\"\n\nShe needs a good cry, I thought.\n\n\"I probably just need a good cry,\" she said.\n\nI pulled her into another hug. \"I've got extra tissue.\"\n\n+\n\nFriday\n\n\"You're off to see Tony again, right?\"\n\nI just looked at her. My having packed only my toothbrush and my flute for the weekend might have been a clue.\n\n\"Yup. I'll see you Sunday.\"\n\nMarcy looked at me glumly. Her lip wasn't quite quivering, but she was definitely not a happy camper.\n\n\"I'll be back Sunday,\" I repeated. \"Why? Do you need me to stay? Tony will understand.\"\n\nShe shook her head. \"No. Don't be silly. There's nothing you can do.\"\n\nShe closed her eyes, took a deep breath and then it all came out in a rush.\n\n\"I'm just sick of this place, sick of the same freaking routine every day. I'm down over my bitchy sister and still pissed about Mark and I'm sick of the crappy residence food and that idiot three doors down with the always-loud music and I'm sick of waking up to the same four walls here every morning.\"\n\nWhoops. I could see this one coming.\n\n\"And I'm jealous of you,\" she whispered.\n\nNow, that one I hadn't&hairsp; seen coming.\n\nHer eyes met mine. \"You're more confident since you met Tony, Steph. You're getting it together. You seem happier now.\"\n\nI had no idea what to say.\n\n\"Tony said you could set the terms.\" Her voice was barely audible even in the room with the door closed. She looked up at me with red eyes. \"Just for an afternoon, maybe? Please? Just to get out of here?\"\n\nOh, poop! Now what? \n\n\"Let me talk to Tony, hon.\"\n\nShe nodded. I gave her a last hug and left her with her teddy bear. Thankfully alone in the elevator, I leaned against the wall, took a deep breath and let it out slowly, pondering.\n\n+\n\nTony was waiting in his old Land Rover. He hopped out, dressed to the nines, as always. A couple of dozen kisses and hugs later, he helped me into the car and we were on the road to his farm near Watford, half an hour outside the city.\n\n\"You seem rather quiet tonight, Stephanie.\"\n\n\"Sorry. Just thinking.\"\n\nHe grinned. \"That's what your text said. A blonde 'thinking' for three days straight. It's positively amazing.\"\n\nI gave him a poke in the short ribs. \"That'll be enough of the blonde jokes, mister.\"\n\n\"Yes'm,\" he grinned.\n\n\"What had you planned for dinner?\"\n\n\"Well. I'd originally been thinking of frisky blonde, but that seems off limits now, so how about an omelette aux fines herbes?\"\n\nI reached over, took his arm in my hand. \"I'd love an omelet, but I didn't say that frisky blonde was off limits, sir.\"\n\nHe laughed now. \"A man needs to be sure, these days, Stephanie.\"\n\n\"Well, frisky blonde is -- for you -- always on the menu, Tony.\"\n\n+\n\nI knew my way around the farmhouse and, leaving my clothes in the usual closet, was in place on my stool, flute assembled and ready to play, before Tony had started to get dinner ready.\n\nHe surprised me, though.\n\nHe looked over the kitchen island, eying me appreciatively. His gaze locked on my bosom. He flinched, slapped his forehead with the palm of his hand.\n\n\"I'm very sorry, Stephanie!\" he said and walking quickly into his bedroom. He reappeared seconds later with my -- his -- necklace. He stepped behind me and I lowered my chin to make it easier for him to fasten it around my neck.\n\nHe'd tried to give it to me after our first night together, only to have me refuse it as too valuable.\n\n\"It's too much,\" I'd told him. \"Stephanie's not for sale, not like that. I knew what the weekend was about before I got into your car, but I didn't come here for this.\" My fingertip had swept over the sterling links. \"I'll stay without it, Tony, but if you insist on my accepting it for what happened last night, then please call me a cab.\"\n\nWe'd compromised. The necklace stayed at the farm and I wore it -- and only it -- whenever I visited.\n\nIts weight felt good on my neck. I walked down the hall to the bathroom to look at myself in the mirror. The afternoon sun poured in through the skylight, turning my hair into a beacon of light.\n\nI am, in all fairness, a very good-looking girl. I've got the looks, the Playboy figure. I know I turn heads in class. Right now, wearing Tony's heavy silver, the only head I wanted to turn was his. And that silver, I thought, was simply perfect for the purpose. I somehow felt complete&hairsp; when I was wearing it, as if both it and I had been created solely to enhance each other.\n\nI went back into the kitchen.\n\n\"Before you start, Stephanie, what do you know about herbs?\"\n\n\"They're green and they come in bottles.\"\n\nHe didn't quite wince.\n\n\"OK, change of plan; we'll do a quick cooking lesson before the concert, young lady. To start off with, a good omelet needs really fresh herbs.\"\n\nA small cup and scissors in one hand, he led me outside to a small garden, pointed to the various plants.\n\n\"The one here with the long, skinny leaves is tarragon.\" He plucked one, crushed it slightly, held it under my nose.\n\n\"Chives are almost a weed; they grow like crazy. Parsley you'll recognize, I'm sure, and this one here, with the funny leaves, that's chervil. Those four are the classic herbs for a proper omelet.\" He picked some of each, put them into the cup and took me back inside.\n\nHe sharpened the knife on a well-used steel. \"A sharp knife doesn't need as much force to cut, so you have better control. It's less likely to slip and cut you.\"\n\nFinished, he put the sharpening rod away and laid the knife down in front of me.\n\n\"OK, here we go. Pile all the herbs on the chopping board.\"\n\nHe came around behind me, his arms around my sides.\n\n\"Hold the knife with your thumb and forefinger on opposite sides of the blade, like this. It gives you better control. Rest the tip of the knife on the cutting board, like this, and work the blade up and down, pivoting on the tip. None of your fingers are anywhere near the cutting edge, so it's quite safe.\"\n\nDemonstration over, he put the knife down, stayed pressed against me. \"Your turn.\"\n\nI could feel the warmth of his body against my back, his breath by my ear.\n\n\"Go on.\"\n\nThe knife was much larger than I would have chosen, a little bit intimidating. I'd never used fresh herbs before and thought it would take quite a while. It was surprisingly easy; I had finished in less than a minute.\n\n\"Knife down, hands away.\" I did.\n\n\"Simple, yes?\"\n\nI nodded.\n\n\"Or,\" and I could hear his grin, \"you can just put all the herbs in a cup and have at them with a pair of sharp scissors. It works about as well, but isn't nearly as much fun for the teacher.\"\n\nWith that, his hands, rose up my arms, slid over my shoulders, then down to clasp my breasts in a gentle squeeze. I squirmed happily as his fingers teased my nipples, rolling them gently, pulling them. They grew harder under his loving stimulation.\n\nHis hands dropped to my waist, pulling me in for a hug.\n\n\"Fresh herbs and knife control. How was the cooking lesson?\" he whispered.\n\nI leaned back, rested my head on his shoulder.\n\n\"I don't think I'll forget it anytime soon, Tony.\"\n\nI turned my face up, lifted my lips to his, felt a swelling in my loins and breasts.\n\n\"Good,\" he laughed, slapping a butt-cheek gently. \"Now go play your flute and let an old man work.\"\n\nI wiggled my bare bum against him for a moment and, smiling, took my place on the stool opposite the island.\n\n\"What would you like?\"\n\n\"Do you know Bolero? Ravel?\"\n\n\"Of course.\"\n\n\"Please.\"\n\nAside from a soft snare drum, the piece essentially opens with a flute solo. It shifts to a series of woodwinds, then back to pair flute with a trumpet. I thought I did a good job of working through it with only my flute and Tony seemed to enjoy it.\n\nAs I played, he swept the herbs onto a plate, broke some eggs into a bowl, set out a frying pan and made a green salad. I was still playing as he sat down and watched me appreciatively.\n\nWhen I finished, he came around to my side of the island and circled me, slowly, his eyes on my body. I smiled for him. It was in one sense so easy to please Tony.\n\nOnce around, into a second circle. This time his hand came out, trailed over my skin as he moved.\n\nI shivered as it drifted over one breast, then the other.\n\n\"Spread your legs a bit, please. You're too pretty to hide that.\"\n\nHe'd said that the first night I'd been here, too, and I thought I'd die of embarrassment. Now, I merely complied. Being visible was part of our agreement and, like I've said before, if there's a reason for women to be pretty, it has to be so that handsome men will notice.\n\nHe surprised me by kneeling in front of me. Strong hands spread my legs and he leaned in to lightly kiss my sex &mdash; just one gentle kiss.\n\n\"Beautiful,\" he pronounced softly before rising to his feet again. My heart melted; no boy had ever said that to me before.\n\nHe returned to the stove, put a pan on it and called me over.\n\n\"Another cooking lesson, Stephanie. I've done most of the prep; you're going to actually cook. Start off by putting a piece of butter about the size of your thumb into the pan. It'll melt as the pan gets warm. Now, the eggs.\"",
        "He handed me a whisk and the bowl with eggs in it.\n\n\"Some people like to make their omelets richer by adding milk or even cream. Especially for this sort, I prefer fluffy to rich, so all we'll add is a couple of teaspoons of water.\"\n\nHe handed me the measuring spoon. \"Or you can just eye-ball it.\"\n\nI used the spoon.\n\n\"OK, just flail away. Beat them up. A whisk makes it easier, but you can use a fork if that's all you have. Try to use wrist motion rather than your whole arm. You'll get better control, less splash.\"\n\nI began working the eggs, smiled when he stood beside me, his hand coming down to squeeze a buttock before rising to rest tenderly on my bare hip.\n\n\"That's enough. And the butter should be melted by now. We don't want it to brown. Swirl it around so that coats the entire inside of the pan.\"\n\nTony dumped the eggs into the pan, sprinkled the chopped herbs all over and handed me a fork.\n\n\"Start stirring. We want a thin layer of not-quite-cooked scrambled eggs.\"\n\nThen, \"Enough, put the fork down. We could leave it like this, but I like to strengthen the edges, so it doesn't tear when we go to fold it.\"\n\nTaking the pan from me, he demonstrated, tilting the pan. Some of the still-uncooked eggs flowed down to form a shallow puddle by the edge. Using a flexible spatula, he lifted the edge of the omelet, allowed some of the liquid eggs to flow down into the gap. He handed me the flipper.\n\n\"Your turn. Work your way around it.\"\n\nIt was easy enough, but I would never have thought of it.\n\n\"That's enough. We'll let it cook until the top looks a little dry.\"\n\nA minute later, he took over, showed me how to flip the soft eggs without tearing. Cutting the folded omelet in half, he put one piece on each of our plates, sprinkled a few leftover chopped herbs on top, garnished with some more parsley.\n\n\"Voila!\" he said. \"Good job, you.\"\n\n\"'Voila', from an Italian, Tony?\" I snickered.\n\nHe looked sheepish. \"Not so loud; Momma would rise up out of her grave if she heard you! French cuisine wasn't fit for human consumprion, according to her.\" He grinned. \"Funny how one's horizons broaden as one gets older.\"\n\nHis hand pulled me in for a brief hug, released me.\n\n\"Bread and salad's on the table.\" He seated me, a gentleman, even here. \"For a meal this light, we'll want a light wine, too.\"\n\nAs I might have expected, dinner was superlative.\n\n\"I've never had eggs this good, Tony. Thank you!\"\n\nHe just smiled at me. \"You cooked it, Stephanie.\"\n\n+\n\nIt was still hot after we'd finished doing the dishes.\n\n\"I'm for the pool,\" I announced. He nodded, went to leave his clothes in his bedroom, returning just in time to see my second front flip off the board. I could see the admiration in his eyes when I surfaced.\n\nNo diver he, Tony just walked into the pool with a massive splash. I ducked under the water and came up behind him. His head flipped back and forth, looking for me. I sank below the surface, swam around him and took his sex in my hand, pulled myself towards him to suck him in briefly between my lips, tongued his soft head before surfacing, laughing in front of him.\n\nI loved the smile on his face, the way his hands swept me against him, the way they held me tight.\n\nSmiling, I leaned up for a kiss. I wasn't disappointed; his face came to mine and my heart almost stopped.\n\n\"You are amazing,\" he laughed. \"How do you always know how to light up my life, Stephanie?\"\n\nThere was no answering that. I just hugged him as hard as I could, glowed inside at the feel of his hands on my bum.\n\nGetting out of the pool, he set two chairs together, facing to where the sunset was just beginning to form.\n\n\"Join me?\"\n\n\"Of course.\" I dried myself off, hung up my towel, sat down. I was still surprised at the feeling of wicker against my bare bum -- comfortable enough, but strange.\n\nTony went inside, returned in a few minutes with the remaining half-bottle of wine. He'd combed his hair and beard and had, for the first time since I'd known him, put on a shin-length wrap of some sort. A sarong, maybe? I wouldn't call it a kilt. Bright blue, it stood out well against his tanned skin. It &mdash; he &mdash; looked smashing.\n\n\"This is new,\" I said.\n\n\"I went on vacation in the Cook Islands. Everybody wore them and I found they are a lot more comfortable in hot weather than, say, jeans.\"\n\n\"Oh.\"\n\nTony motioned me out of the chair, chose instead a pair of chaise lounges. Positioning them side by side, he helped me sit down. We watched the farmlands, coming into harvest soon enough.\n\nHe reached out, pointed, as he had done that first night, to a gap between two woodlots. I was as entranced, now as then, to see two whitetail does with their fawns cross on their way to lie up for the night. I squeezed his hand in thanks.\n\nHis hand squeezed back, then slid over to come to rest on my thigh. I felt his fingertips slide over my skin.\n\n\"So smooth,\" he whispered.\n\n\"Glad you like them, sir.\"\n\nHis hand travelled down to my knee. I shivered as it gently made its way back up, slowly, so softly as to be almost imperceptible. Back down. Up again. He knew how sensitive my thighs were; the man was a master at arousing me.\n\nI closed my eyes, opened them to see him smiling at the sight of my nipples springing to attention.\n\n\"Glad to see I'm not the only one enjoying myself,\" he smiled.\n\nI closed my eyes again. He shifted in his chaise and I gasped a little as his lips found a nipple. His lips held my bud while his tongue swept its tip, over and over. Instinctively, I pulled his head against my me, hard, moaned as his tongue swept my nipple, harder, faster.\n\nI gasped again as his hand rose up along my leg, a fingertip tracing along my ladybits. I felt a sudden slippery wetness under his finger, felt my lower lips swell in welcome.\n\nI could see how this would go. I knew I was going to &mdash; sooner or later &mdash; have an amazing orgasm. I lay back, soaking in his stimulation for a moment, then changed my mind. I squirmed away, hopped off the chaise. I reached down, touched the tip of his nose with my finger.\n\n\"\"You're very good, Tony. I don't know who taught you, but I'd like to send her flowers. Right now, I want to play, too.\"\n\nI could see a small tent in his sarong, pointed at it. \"I think somebody else does, too.\"\n\nHe just lay back, watching me. I moved to behind my chaise, lowered its back down to horizontal. Two seconds later, his chaise joined mine; he brought his hands behind his head. I knelt on my chaise, facing him.\n\nI held up my breasts with their now-rigid tips for his inspection, ran my thumbs over them and saw the hunger in his eyes grow. \"You drive me crazy, Tony. I love it. It's amazing. But sometimes I want to get you super-horny, too.\n\n\"If you don't mind, that is. If it would please you.\"\n\nHe smiled, waved one hand in a go ahead&hairsp; gesture, returned it to behind his head.\n\n\"To start off with, would it please Mr. diRossi to watch me do this?\"\n\nKneeling, I spread my legs wider, making my sex easily visible to him. I could feel the warm evening breeze on my wetness. Keeping my eyes locked on his, I reached down, trailed a forefinger along my glistening labia, back, forward again, then around my clit.\n\nHis eyes widened. From the corner of my eye, I could see his member twitch under the colourful fabric. I laughed, reached to get a grip on the fabric, pulled.\n\nA second, harder tug pulled it loose. His cock swayed a little as I flipped the fabric to one side. Tony didn't move; his eyes remained on my hand slowly moving over my sex.\n\nMy arousal was climbing with each touch of my finger, but I could see it build in Tony's eyes, too. I see it in the set of his face, in the sudden tautness in his belly.\n\nI shifted to beside his knees, his poor knees, scarred and battered from that long-ago helicopter crash. I leaned down, kissed first one, then the other, leaned closer, ran a nipple over one kneecap, then the second. A quick glance showed Tony staring, fascinated, his cock now stiff with his desire.\n\nI leaned further up, ran my tongue over his knees, left first, then right, felt the puckered, twisted flesh, slid further up his legs, back and forth along and between his inner thighs. I felt his breath catch, smiled inwardly.\n\nResting more on one elbow, I reached up, cupped his sac, tight now against his abdomen. His hand swept over my head, played with my hair.\n\nI was close enough that I could smell his male scent. I paused, inhaled deeply, felt it resonate deeply inside me, felt my nipples and nipples swell still more.\n\nI licked gently behind his twins, heard him hiss as my tongue circled their wrinkled sac. I shifted my hand, seized his hardness, felt the blood beat in it, squeezed. Shifting again, I rubbed his crown with one nipple, then the other before sliding down to take him in my mouth. He tasted of musk, of love, of Tony. I lowered my head, took him deeper.\n\nMy lips made a soft pop&hairsp; immensely strong hands seized me around my ribs, lifted me like a child, laid me down, my head on his inner thigh, his cock inches away. I felt his beard inside my own legs, wiggled with pleasure as his tongue found my sex.\n\nI took him by the shaft, pulled myself closed enough that I could swirl my tongue around his crown, flick lightly at his slit. I stopped for a second as his lips closed on my clit, sucking it deeper, pulling softly on it. A weight began to build within me, heavy, latent -- a rock, hovering on the brink of a mountain slope.\n\nI pulled his head into my mouth, shifted again to take him still deeper. Holding him around his sac and the base of his shaft, I started to bob my head, sucking him into me, my cheeks hollow, my tongue lashing his head.\n\nI again groaned around the length filling my mouth. Tony's hands seized my hips, pulled his head against me. I moaned, more loudly now, as a finger found my entrance, probed, swept over my welcoming walls. His tongue waltzed with my clit, driving me higher still.\n\nI shifted my hand to grasp his shaft outside my mouth, began to pump his skin back and forth.\n\nThe rock within me fell free, knocked another loose, then another, a building rockslide of irresistible pleasure. I sucked harder, pumped faster. Tony's leg under my head tensed and I could feel his orgasm begin. I pulled him in, almost to the back of my throat, began swallowing his joy as his manhood surged and shuddered on my tongue. Inside me, the avalanche grew, sweeping all before it. I pulled off him, gasping with happiness, gasping for air.\n\nTony's head fell back from my pussy, lay on my leg. His hand drifted lovingly over my hip. Again he leaned forward for a moment, kissed my ladybits gently.\n\nI drifted off to sleep, smiling at a gentle finger tracing its way down my spine.\n\nI dreamed of blossoms, of butterflies, of endless drives along flowered country roads.\n\nOf Tony.\n\n+\n\nPi, the farm's feline owner, woke me up Saturday morning by walking on my tummy. She was polite about my having taken her side of the bed and let me off with only a warning.\n\nIt was a lovely morning, warm already, warm enough for the pool. Rather than starting my homework, I decided to practise my dives.\n\nI'd been almost satisfied with a half gainer, a backwards dive. I emerged from the water to see Tony standing with a cup of coffee in his hand. As usual on arising, he worse only a pair of white cotton pyjama bottoms, the waist cords carefully tied. Typically, he'd combed his white hair and beard on arising.\n\nHe looked gorgeous. Older, yes; slack or flabby, no. He limped a bit, particularly when it was cold &mdash; no surprise, given the damage from that crash &mdash; but Tony worked out, kept himself in delightful shape.\n\nI climbed out, kissed him as he wrapped a big towel around me and pulled me into a fond embrace.\n\n\"How's Stephanie this morning?\"\n\n\"Happy to see Tony.\"\n\nHe laughed gently. I could feel the kindness in him, wondered at my luck. I could have still been dating one of the boys on campus.\n\n\"Any special plans for today?\" he asked.\n\n\"No. I have work to do, of course.\"\n\n\"Need some help with your lab report?\"\n\n\"Please.\"\n\n+\n\nHe paused, peered at me, tilted his head to one side.\n\n\"You're rather quiet this morning, Stephanie. Is something bothering you?\"\n\nSometimes the man was just too perceptive. I'd been trying to figure out how to raise the issue, but he'd beaten me to the punch.\n\n\"Oh, it's just Marcy. Her family life has been really miserable lately, her boyfriend broke up with her two weeks ago and she's just generally blue. Rez fever on top of it too, I guess; at times, it seems like the place has bars on the windows.\"\n\n\"You're concerned.\"\n\n\"She's upset and she's my friend.\"\n\n\"And...?\"\n\n\"She asked if she could come out here for a few hours.\" That came out in a rush, but getting it out in the open made it easier.\n\n\"What did you tell her?\"\n\n\"I said I needed to talk to you.\"\n\n\"Well, now you are, but I'd already said it was your decision, Stephanie.\"\n\nI stroked his cheek. \"Tony, you are a wonderful, kind, generous man, but you can play pretty rough. I know I was behaving like a silly little fool that afternoon, but there aren't many girls could deal with your expectations. Don't get me wrong; you're an amazing gentleman when you let yourself, but I don't think Marcy is quite ready for you in your feral state.\"\n\nHis eyebrows went up at my use of that word.\n\n\"And I'm not sure if I'm ready to watch you playing hardball with my best friend, either.\"\n\n\"I'm hardly likely to seduce your best friend in front of you, Stephanie.\" His expression was half-amused, half-affronted.\n\n\"Look, I know you said it was my call, but what are your expectations if she comes here? I know how you treated me, and I'm thrilled &mdash; now &mdash; but it was a tough go then and Marcy's kind of fragile at present. And you weren't 100 percent clear about here when you talked to us at the library.\"\n\nHe raised his eyebrows again. Obviously, he thought he had been.\n\n\"Tony, you said, 'under the same conditions'. I know that that means I need to stay peeled. I'm OK with that, but what about Marcy?\"\n\nHe thought for a second. \"Which would you prefer, Stephanie? You're roommates; presumably you've seen each other.\"\n\n\"Of course, but not like this, not for long periods. And this place is crackling with sex, Tony. I don't want to be the only bare one here in any case.\"\n\nHe grinned. \"OK, so she has to join you.\"\n\nI grinned back cautiously.\n\n\"Or both of you do.\"\n\nHe glared at me. Never in hell.\n\n\"OK, got it. But you were pretty direct, Tony, pretty open about staring at me. It's nervous-making for a girl.\"\n\n\"Sorry, but I'm a boy. I'm going to look.\"\n\nI nodded. Point to him, I guess.\n\nI closed my eyes for a moment. Seriously, was I really negotiating this?\n\nI leaned against him, gave him a gentle hug. \"Ok, here's the tough one for me, Tony. I'm not sure I could bear to watch you with her.\"\n\n\"I think I just said I wasn't going to seduce her, Stephanie.\"\n\n\"Yes, but all of it. There's magic in your fingers, Tony. Each time your touched me that first time was...\" I paused, tried to think how best to say it.\n\n\"I'm trying really hard not to be possessive, Tony, but I'm just not sure I can watch you getting even a little bit physical with her.\"\n\n\"Stephanie, I can live with 'look but don't touch', if that's what would make you feel better.\" His smile was surprisingly reassuring.\n\nHe stroked my hair with a hand, kissed my forehead.\n\nI squeezed his arm, looked up into those grey, knowing eyes. \"Thank you, dear. I'm very grateful. I'll ask her to come just until dinner.\"\n\nIt was, I knew, a measure of how far our relationship had developed. Despite being stark naked all the time, I was far more confident, far more willing to stand up to him than I would have been fully dressed a month ago. And Tony had become gentler, less wary, less demanding, more willing to accept my standing up for myself.\n\nI looked at my phone. It was 9:30 A.M. I thought of texting, decided to call instead.\n\n\"How are you doing?\" I asked.\n\n\"I really need to get out of here, out of the city, Stephanie. Please.\"\n\n\"OK, how about you come from whenever you get here until 5 this afternoon? But Marcy, you know the basic rule, right?\"\n\nDead silence at the other end. I decided to nudge her.\n\n\"Just for the record, you told me you were topless at the beach when you went down south for Spring Break. I know what bikini bottoms you wore; there isn't a heck of a lot of difference between topless in those and nothin'-at-all naked. And that was in front of ten thousand drunken 20-year-old boys.\"\n\n\"I know,\" she sighed. \"But that many guys are like, I don't know, wallpaper, maybe? They're not even real. But one man, all by himself...\n\n\"Especially Tony,\" she said, very softly.\n\nWhy, &hairsp; I wondered, was I trying to convince my best friend to take off her clothes off in front of my boyfriend?\n\n\"He won't lay a finger on you, Marce.\"\n\n\"I know, I know, it's just...\"\n\n\"I understand. Really. But it's his house, his rules. Well, his rules for me anyway and I'm not going to be the only one here without clothes. I love my roomie, hon, but that's it. Sorry.\"\n\n\"You sure he won't....\"\n\n\"I promise.\"\n\nThere was a long pause. \"OK. Fine.\"\n\nThere was another pause.\n\n\"I'll do it.\"\n\nI texted her directions. Her reply was almost instant: 1030 c u thanx.\n\nI grinned &mdash; it wouldn't, after all, take her long to pack.\n\n+\n\nI was waiting for her by the barn and heard her the muffler on her old Ford before she turned into the lane.\n\nI waved to her and pointed to a parking spot. Silence returned when she turned off the engine.\n\nStill inside the car, her eyes ran over me, then around the farmyard, then back to me. Yeah, roommates, but nudity in residence was quick-change and unprovocative. A tall, utterly bare blonde casually leaning against a tree was in a different category entirely.\n\nI walked out towards her, careful of my feet on the gravel. I stopped a few feet from her door and, a welcoming smile on my face, waited. Eventually she got out.\n\n\"Hey.\"\n\n\"Hey. How was the drive?\"\n\nThe girl was silent. Her eyes swept over me, as if trying to make her brain accept what she was seeing. I'd thought of putting on some clothes to make it easier for her, but, as they say, the best way to get used to the water is to just dive in. So &mdash; Bare.\n\nUnder normal conditions, I would have offered a hug. Not today, not like this.\n\n\"Tony?\" she asked.\n\n\"He's out back. You won't see him until you're ready to, Marcy. Like I said, he's a gentleman.\"\n\n\"Oh.\" I couldn't tell if she was relieved or upset.\n\nHer finger rose, swept over the links of the heavy silver necklace around my neck.\n\n\"This is it, right? And you gave it back, Stephanie?\" There was a look of small awe on her face.\n\n\"He didn't buy me, Marcy. It's a small difference, but important.\"\n\n\"Yeah. I suppose.\"\n\nI helped her carry her easel and stuff, put it all down on the porch. There were a couple of new chairs and we sat down.\n\n\"Let's talk before we go in. Can I get you something to drink?\"\n\nI could see she was as nervous as a mouse at a tomcat convention. Well, I'd been that way my first time here.\n\nShe shook her head. \"No, thanks.\" She leaned her head back, rested it on the wall behind her, took a deep breath, let it out slowly.\n\n\"What in hell have I got myself into?\" I snickered.\n\nShe looked at me out the corner of one eye. \"So, you're a mind reader now?\"\n\n\"Not hard in this case.\"\n\n\"No. I guess not.\"\n\n\"You can change your mind, Marcy. Nobody will judge, I promise. I'll see you Sunday.\"\n\nShe gave a weak grin, turned away and stared off into the distance, deliberately not looking at me.",
        "\"You know, Steph, I've always admired your judgement.\" Her voice was soft, reflective. \"So, when you told me what was going on here, I had a hard time getting my head around it.\"\n\n\"Me, too,\" I admitted.\n\n\"But Tony seems really nice and I got thinking... I mean, maybe you're not crazy, maybe this isn't all creepy. Denise had me really down and I needed a chance to get out of the Zoo for a while. What I really&hairsp; needed was a change, a reboot. So, here I am.\"\n\nI reached out, touched her arm. \"It's OK. You don't have to explain.\"\n\nHer eyes flipped back to mine. \"But you're&hairsp; OK with all this, Stephanie?\"\n\n\"Mostly. Tony's fine with it. But, he's a boy, Marcy; you know he's going to look, right?\"\n\n\"I sort of figured. Of course. Why else?\"\n\n\"I mean, he's going to look,&hairsp; Marcy. It's a given. It's not like a boy in class checking you out when he thinks you're not looking.\"\n\nShe nodded.\n\n\"OK, then. Let me introduce you to Pi.\"\n\nInside, her eyes swept the place, its cleanliness, its attractive design, the photos of firefighter Tony from years before. She turned and smiled at the vista of fields and trees beyond the west-facing windows.\n\nPi bumped our ankles in greeting; we petted her briefly.\n\nThe back of Tony's head could be seen in a chair on the deck just outside, pointedly not looking inside at Marcy. I could see the shoulders and collar of the light linen shirt he was wearing.\n\nAgain, her eyes checked out my nakedness. We were roomies; she'd seen me before, but never in this context. \"This is for real, isn't it?\" she whispered.\n\n\"Uh-huh.\"\n\nShe stretched out a finger, ran over the links of the necklace around my neck. I could see the wheels going round in her mind. Her hand fell to her side; she shrugged slightly.\n\n\"So, where do I leave...?\" Her question was obvious.\n\nI took her by the hand, led her to the closet, opened it. My purse hung neatly beside the clothes I'd been wearing Friday night. The closet was empty except for those and some spare wooden hangers. For some reason, the sight of my panties and my bra on a hanger by themselves was a more emphatic statement of my relationship with Tony than my not actually wearing them.\n\nShe took a deep breath.\n\nI wanted to give her a hug of encouragement, but figured it would just freak her out. Me, too.\n\n\"It's over to you now, Marce. But if you decide to stay, I'll be out there.\" I simply pointed over my shoulder with my thumb.\n\nI felt very odd as I turned and went to join Tony outside, leaving my best friend struggling with the same issues I'd been through so very recently. I realized that I'd just done to Marcy precisely what Tony had done with me. Leave your clothes here, dear, then come join the adults. \n\nHad I just sold her out to Tony?\n\nWhat if he were more interested in her?\n\nTo her credit, it took her less time to make up her mind than it had me. In less than a minute, Marcy appeared in the door, clothed in glory. And she didn't do that silly embarrassed naked woman thing, trying to cover her boobs and sex with her hands. Standing with her arms by her side, she could have been a model at the art school.\n\n\"Thank you for your hospitality, Tony.\" Her voice actually seemed calm to me.\n\nHe turned at last to look at her, smiled warmly.\n\n\"You are indeed welcome, Marcy. Would you like a tea or a drink of some sort? Mi casa, su casa.\"\n\nTony was not ignoring her nudity as he had initially ignored mine, but neither was he blatantly ogling the lovely young woman before him.\n\nOh yes, he was looking, but his examination was not a leer and his open admiration was hardly the callow lust of our classmates back at the university.\n\nMarcy just stood there for his perusal. There was a lot to examine.\n\nScarcely a fingerbreadth over five feet tall, Marcy had eyes so dark as to be almost black, framed with lashes many girls would kill for. For her size, she had a better figure than me, with a pear-shaped bum and firm boobs capped with pink areolae and long nipples. Yet there was solid muscle under those female curves, for Marcy was a cheerleader; her form was as athletic as it was feminine and she moved with a dancer's grace. Today, she'd left her hair loose; it almost reached the dimples over her bum. She was just mouth-watering.\n\nAnd now she she was standing naked in front of my Tony.\n\n\"Turn around, please.\"\n\nThe girl flushed slightly, then &mdash; 'he's going to look, Marcy'&hairsp; &mdash; she turned slowly on the spot, resumed her stance facing him.\n\n\"Lovely,\" Tony said respectfully. He smiled. When he put his mind to it, nobody had a nicer smile than Tony.\n\n\"Thank you for gracing my house.\" Marcy saw that he meant it and seemed somewhat shaken by his sincerity.\n\nI saw recognition in Marcy's eyes. It had been this I had tried to explain to her. Tony made his own rules, but within those, he was as courteous and considerate as any person I'd ever met. The bottom line was that Tony wasn't looking at either of us like we were peelers in a Dundas Street bar. Yes, we were there for his pleasure, but it was, she was realizing, hardly demeaning.\n\nShe turned her head, looked out at the farms stretching into infinity. \"This is so pretty. The light is perfect. May I sit down?\"\n\n\"Of course. Or, if you wish, you may start painting.\"\n\n\"Where would you like me?\" She froze the instant those words left her mouth, turned scarlet at the possible double entendre.\n\nTony could have destroyed her with a word. Instead, refusing to even acknowledge that a double meaning might even exist, he simply said, \"Wherever you wish, Marcy. I do look forward to being able to watch an artist at work.\"\n\nHe didn't put any emphasis on the word 'watch' &mdash; even if his eyes were openly wandering over boobs and smooth mound.\n\nHow was I feeling? I guess 'mixed' would be about right. My eyes kept flipping between her and Tony. I was happy when Marcy got set up and launched into painting. She was absorbed in something else than her own problems and that was all to the good.\n\nI kept wondering what Tony was thinking now that he had Marcy unclothed in front of him. I took a quick look at his trousers, noticed no particular stretching and was a little happier for that. If all he wanted to do was look at the girl, I was OK with that.\n\nSort of.\n\nI knew I wasn't ready to share, had seen the effect the petite girl could have on boys even clothed. When Tony told me to set the terms, I could have just told her to come. Instead, I'd insisted on her being nude, too. And she was simply luscious and Tony was...\n\nTony was being Tony. He'd been the same kind but insistent gentleman I'd seen my first time here. And if there was a part of Marcy he hadn't looked at, it could only be the soles of her feet.\n\nI watched as Marcy settled herself and held a pencil out horizontally in an outstretched hand. Perspective, maybe?\n\nI was surprised when Tony squeezed my hand gently.\n\n\"Thank you for this, Stephanie.\"\n\nI could see that he was entirely sincere in his gratitude. He was enjoying the sights, like I'd taken him on a tour of an especially nice garden.\n\n\"Might I ask for some background music, please? Whatever you think would suit.\"\n\nI nodded, went inside and returned with my flute in my hand, started to sit down beside him again.\n\n\"Stephanie, might I ask you to stand by Marcy when you play, please? There's a shady spot if you want to stay out of the full sun.\"\n\nStanding a couple of steps behind Marcy, I began to play. Her head came around to look at me when I started. This was hardly unforeseen. She smiled, turned back to her work.\n\nFor the next 45 minutes or so, Tony simply sat where he was, enjoying my music and the sight of two young women dressed only in their beauty. Every few minutes, he rose and, without touching her, came to stand by Marcy, taking in the fine details as she worked on her piece. Each time he did so, he returned to his seat only after coming to me, kissing the back of my neck and gently caressing me. He'd placed me behind Marcy, so his fondling and kisses were not obvious, but she turned once and saw his fingers drifting off my nipples. Blushing, she turned away. It took a minute for her to restart.\n\n+\n\nIt was getting on to noon. Tony stood up, thanked me for my music and went back into the house. Marcy kept painting; I pulled out a textbook.\n\nSome time later, he emerged from the house, a picnic basket in hand.\n\n\"Marcy, Stephanie and I will be having lunch. I've made enough for three if you would care to join us.\"\n\nThe picnic basket made it obvious that we weren't going to be eating here. Marcy looked at her painting, her paints, back up to Tony.\n\n\"Um, where...?\"\n\n\"Not far. In the barn, actually.\"\n\n\"The barn?\" I asked. It hardly struck me as a picnic spot.\n\n\"Trust me,\" he smiled. \"Marcy, I can leave your lunch here, if you would like.\"\n\n\"No, I need a break anyway. My stuff will be OK here?\"\n\n\"Just fine.\"\n\nHer back stiff, Marcy closed her eyes, put her hands in the small of her back, stretched backwards. Those perfect boobs were pushed up and forward and she had Tony's absolutely undivided attention. Her arms came up to over her head and she leaned from side to side, stretching. It was an amazing sight.\n\nShe opened her eyes, saw both of us staring and turned beet red.\n\n'He's going to look, Marcy.' &hairsp; She'd remember in future, I thought.\n\nIgnoring her blush, he picked up the basket and wordlessly headed off to the barn. Marcy, wide-eyed, looked at me.\n\n\"Told you,\" I said softly.\n\n\"Yeah, but...\" She fell silent.\n\nI'd had to learn, too.\n\n\"Well, I'm hungry,\" I said. I got up and followed the man with lunch. Marcy didn't take long to follow. We walked together, sun and breeze on our bare skin.\n\n\"This feels weird,\" she said. \"Weird, but nice.\"\n\n\"What? Being naked? Or following an older man so he can watch you in your birthday suit?\"\n\nShe thought about all that.\n\n\"Yes.\"\n\nI grinned. \"Gotcha.\"\n\nShe stopped, turned to me. \"It's also... I mean, I feel really vulnerable like this.\" Her hand waved over her nudity.\n\n\"I know. It's about trust, I think. It's something I've had to learn, too, Marce.\"\n\nShe thought about that, started walking again.\n\nIt wasn't a big barn, as these things go. Tony had said this had never been a dairy farm, so farm animals would have been mainly a few horses for wagons, ploughs and such, with maybe a couple of cows for milk and butter. The boards over the stone foundation were well-weathered, mainly grey now with some traces of a bright red remaining from heaven knows how many generations ago.\n\nThe big main doors, which I'd never seen closed, were on one side. Tony was waiting for us, sitting on the bumper of the jeep parked inside. He led us to the foot of a large ladder heading up to the next floor, the original hay loft. The scent of that long-gone forage still lingered, I thought. The old boards forming the barn wall had pulled apart from each other over the years and on one side sunbeams peeking through the gaps were highlighted with dust motes. He motioned me up the ladder.\n\nI knew what he would say if I suggested that he go first. I made a point of wiggling my bum at him as I climbed. When I got to the top, Marcy had not started up. I could see the thought running through her mind &mdash; climbing that ladder with Tony immediately below her would...\n\n\"Marcy?\" I called softly. She looked up, saw me, shrugged and started climbing.\n\nAnd yes, of course he looked.\n\nI held out a hand to help her up the last few rungs. Tony was still below.\n\nHer eyes were wide; her blush hadn't faded.\n\nI ran my hand gently over her head, hoping to comfort her.\n\n\"How're you doing, Marce?\"\n\n\"I'm...\"\n\nThere was a long pause.\n\n\"Is... is he always like that?\"\n\n\"More or less. Still OK?\"\n\nShe took a deep breath. \"Yeah, I guess. But this takes some getting used to.\"\n\n\"It gets easier.\"\n\nWithout thinking, I held my arms out to her, an offer of a comforting hug. Instinctively, she stepped into my arms, pulled herself against me. I held her head against my shoulder, let my hand run up and down her back, felt her arms close around my waist. Both of us silent, still, I could feel her heart beating.\n\nIt hit both of us at the same time. Friendly hugs were common between us -- but bare-skin hugs? No, not once, not ever. We jumped apart a little, both blushing from head to foot. Neither of us could meet the other's eyes.\n\nBut I couldn't forget how smooth her skin had seemed under my hand, how soft her breasts had been against mine.\n\nThere was a low chuckle from the ladder. Tony's head was just above floor-level; it was clear he'd seen our embrace, had noticed the embarrassment.\n\nHis damnably expressive eyebrows went up, then he gave a small grunt and lifted the picnic basket up to rest on the floor. He followed a moment later and recovered the basket.\n\n\"This way.\" It was as if he'd seen nothing, as if discovering two striking young women in a naked embrace was an everyday thing here. He led us the length of the building, to where the outline of a large door could be seen on the end wall.\n\n\"Be careful. There's no rail.\" Putting the basket down, he grasped a handle on the door and began to pull it along the wall with those big shoulders. Creaking, the door slid open. Both Marcy and I gasped a little at the view.\n\nSouth-facing, the open door overlooked the farmyard and gave a view of rolling farmland stretching just about into tomorrow. A couple of small birds darted by outside. We were high enough to be above many of the trees.\n\nJust inside the opening was a large sofa, elderly, but in good condition. Tony set the basket on a low table separating the couch from the drop outside.\n\n\"I come up here sometimes,\" he said. \"It's a nice view and it's cool. The couch is long enough for a nap and I find it's easy to fall asleep, especially if it's raining. Raindrops on the roof are relaxing.\"\n\n\"The sofa's pretty,\" Marcy said, \"but how did you get it up here?\"\n\n\"It was my uncle's. I moved it up here when I redecorated.\" He pointed to a beam protruding outside the opening, a pulley at its end. Of course. How else would hay have been brought up here?\n\n\"Anyway, it's a nice spot for a picnic.\" He smiled, sat down in the middle of the sofa.\n\nI sat down, realized Marcy was having a bit of trouble with the thought of bare-her-next-to-clothed-Tony. I shrugged. Tony would behave and that made it Marcy's problem. It took a few seconds before she sat down beside him, carefully, keeping as far away from him as the sofa arm allowed.\n\nThere was a long, crusty loaf of bread, sliced salami of some sort, lettuce and cut-up peppers, a hard cheese, olives, fizzy water, grapes. The man was a culinary genius.\n\nTony allowed us to serve ourselves, then filled his own plate. Putting the dish on his lap, he leaned back, his left arm over my shoulder. He seemed to be making an effort not to lean against Marcy.\n\n\"How's Stephanie?\" he asked softly.\n\n\"Good, Tony. Thank you. And I would never have imagined the old barn would be such a great place to eat.\"\n\n\"I know. I've had a couple of offers from contractors wanting to buy the barn. There's apparently a great market for barnboard right now.\"\n\n\"You said no.\"\n\n\"Of course.\"\n\nHe turned to his right. Marcy's blush had faded. Caught with her mouth full, it started again, a little. She tried to smile.\n\n\"Thank you for joining us, Marcy,\" Tony said softly. \"I hope this hasn't been too hard for you.\"\n\nShe swallowed, took a sip of water. The blush faded. I could see she was coming to understand my earlier remark about 'embarrassed but not humiliated'.\n\n\"Good, thank you.\" She looked at her plate, half-empty now. Marcy burned calories like a wood stove; she ate nonstop back at the residence and never put on an ounce. \"This is very good.\"\n\n\"You're welcome.\" He turned away from her, looking outside again. I rested my right hand on his leg, ran it over the cotton of his slacks.\n\n\"Me, too. This is delicious, dear.\"\n\nThat earned me a fond kiss, which Marcy pretended not to watch. I squeezed his leg harder, returned to lunch.\n\nFinishing his meal, Tony let himself sag back against the sofa. I leaned in towards him, let my head rest on his shoulder. I ran my hand over his leg.\n\n\"My thanks to Momma for teaching you to cook, Tony.\"\n\nHe chuckled.\n\nWe silently watched the clouds drift over the countryside in front of us.\n\nI sensed Marcy taking a deep breath.\n\n\"Tony?\"\n\n\"Mmm?\"\n\n\"Thank you again.\"\n\n\"You're welcome again.\"\n\n\"I'm sorry to be so... stiff.\"\n\n\"It's an unusual situation for you, Marcy. I understand that. Again, thank you for brightening our day with your visit.\"\n\n\"Tony?\"\n\n\"Mmm?\"\n\n\"May I hug you, too?\" Her voice was a whisper, almost plaintive.\n\nHis head turned to me, for once asking permission instead of expecting compliance. I nodded. This could do no harm.\n\nTony, silent, lifted his arm around Marcy's shoulder and pulled her in. Her head was almost too low to rest on his shoulder, but she stretched a little and fit.\n\nWe sat there like that for some minutes. Looking out of the corner of my eye, I could see the top of her head on his shoulder, her hand resting like mine on his thigh.\n\nI was surprised to see that I was OK with that.\n\nTony's arms gave both of us a strong hug.\n\n\"Marcy, I think you came here to paint and I don't want my lunch to give you cause for falling behind. In any case, I need to talk to Stephanie for a few minutes. Do you need a hand down the ladder?\"\n\nAs dismissals go, it was pretty polite.\n\n\"Would you like me to take the basket?\"\n\n\"No, thank you. We'll bring it along when we come. Help yourself to anything you need in the house.\"\n\nHe kept his arm lying along the top of the sofa when she rose. She started to bend down to give him a kiss, caught herself and went to the ladder. Black eyes lingered on mine as her head went down out of sight.\n\nA minute later, I caught a glimpse of her bare form going around the corner of the house, then she was out of sight. From the corner of my eye, I could see Tony watching her, too. It was a very&hairsp; nice bottom, I thought.\n\n\"Thank you, dear,\" I said, squeezing his thigh again. \"She needed this.\"\n\n\"She's nervous,\" he said.\n\n\"I was too, Tony. I got through it. But thank you for not pushing her.\"\n\n\"Why push? Especially with you here?\" As he said that, his hand slid down off my shoulder, fondled my breast casually, almost absentmindedly. I was surprised that I found it to be precisely what I needed right then. I squirmed a little in acknowledgement.\n\nWithout removing his hand, he hugged me and I realized again why loving this man was a good idea.\n\n\"So, what did you want to talk to me about?\"\n\n\"Nothing in particular,\" he admitted. \"I just wanted to get some time alone with you. It's peaceful up here.\"\n\nMy boob filling his hand, his thumb began to stroke my nipple, ever so softly.\n\n\"Peaceful indeed, sir.\" I paused. \"In most ways.\"\n\n\"Most ways?\"\n\nI giggled slightly, pointedly looked at his trousers. There was a noticeable bulge.\n\n\"Y\u200eou have me at a disadvantage, Tony.\" He laughed softly, continued his caresses. I felt my nipples harden, felt my ladybits tighten slightly.\n\nI slipped out from under his arm, knelt in front of him. Moving quickly, I unfastened his belt and trouser button, unzipped his fly.\n\nI looked up solemnly, then grinned. \"If this is what pleases Mr. diRossi right now?\"\n\nAs if it wouldn't...\n\nSmiling, he cooperated and lifted his bum, which saved me the trouble of having to fake-wrestle them off him. I pulled his slacks down off his legs, folded them and left them on the table. I wasn't surprised to see he'd gone commando.\n\nI hopped back onto the sofa.",
        "\"That's better!\"\n\nI leaned against him, my head on his shoulder, smiled as his hand again found my boob. I looked down at his beautiful cock, wondered what it would feel like have one.\n\nMy hand slid over his thigh, fingers circled his sac and gripped his length. It was warm under my fingers, hard and expectant. I decided to follow his example, take things slowly. I let my hand merely drift lightly along his shaft, cup and roll over his swollen mushroom, slide gently back down his length, sweep his wrinkled sac, tickle behind it.\n\nAnd again. Slowly. Softly. We had the whole afternoon, I thought. There was no need to rush things. If Tony wanted more, he would let me know.\n\nHis hand slid off my breast, swept gently over my tummy, began to stroke my inner thighs. He was good at this, very good. I shivered in pleasure, but tried not to let that change my slow teasing of his cock and balls. Leisurely, gently was the order of the day.\n\nAt least I had thought it was. I gasped a little as an expert finger flowed over my slippery lower lips. His 'slowly and gently' could produce amazing, almost instantaneous results in my Mom's little girl. It got worse -- better -- when his other arm proved long enough to reach my other breast.\n\nI could only reach him with one hand and decided to change strokes. I gripped the bottom of his shaft with my thumb and fingers, softly dragged his skin up his length, my hand flowing off his head before starting again at his base. Up and off, up and off, slowly, softly.\n\nHe tensed a little, inhaled deeply and I smiled.\n\nOtherwise, both of us sat quite still, as if we were merely enjoying an afternoon on a public park bench. Neither of us saw any reason to speak.\n\nTony's one finger started to stroke deeper between my lips, up, barely missing my clit, then moved down to start again. Hand on my pussy, hand on my boob, I felt a growing heat inside me. I took a deep, deep breath, let it out a bit raggedly, then another.\n\nI continued the slow, gentle bottom-to-top sweep of his cock, but started to paused each time, circling his turgid rim with my thumb.\n\nI looked up at him. His eyes were closed, a faint smile on his lips. His chest rose and fell slowly, but very deeply.\n\nThere was a slipperiness on his slit now, almost matching the slipperiness between my legs. My hand halted, my fingers squeezing his shaft as my thumb swirled the sticky wetness over and around his helmet, almost purple with arousal. I could sense Tony's desire rising with each circle of my thumb.\n\nI moaned a little as his finger probed my entrance, withdrew. I was just on the brink, hovering, so very, very ready...\n\nI moaned again as his hands suddenly left my body, one catching my wrist to pull my hand away from him.\n\n\"Tony?\" I whispered.\n\n\"Patience, Stephanie. Relax. Enjoy the view.\" He gave me a gentle hug. He shifted, poured some water into a glass, shared it with me.\n\nMy body was frustrated beyond belief, but I knew how good he was at this. I snickered soon after when his manhood twitched slightly. I ran one finger lightly down its length, laughed as it jerked again. I put my hand back on his hip.\n\n\"Have I mentioned how beautiful you are today, Stephanie? How utterly desirable you are? How good it feels for a man to have somebody this delightful with him?\"\n\nI ran my finger over his cockhead.\n\n\"I sort of guessed.\"\n\nI grasped his whole plum, squeezed it. \"But it's nice to be told.\"\n\nHe laughed; his hands returning to their leisurely teasing and I found that the delay had made me want his touch, want him&hairsp; more.\n\nI closed my eyes as his hands unhurriedly stimulated my nipples, my pussy, my legs.\n\nMy mind.\n\nAbove all, I was finding, Tony knew how to work my mind to take me higher than I'd ever been before, then keep me hanging there for what seemed like forever before finally releasing me into my blazing passion.\n\nAs my body was learning to be more responsive to him, my mind was also learning that his strong male presence only strengthened my femininity, never diminished or trivialized it. His masculinity was not a challenge to me or my identity; it helped, it pushed, it supported.\n\nIt fed.\n\nI moaned softly as a gentle finger found my clit, circled it at the same time that his other hand teased first one nipple, then the other.\n\nI began to pull the soft skin of his cock back and forth over his oaken core. His breathing was deeper now; his nostrils swollen. Even his flat male nipples had become a bit erect.\n\nThe flame within me soared, higher, closer to erupting into an open blaze. I started pumping him harder now, then groaned as his hands again pulled away from me, pulled my hand off his sex. I was almost quivering in frustration, half a breath from the orgasm he'd been orchestrating.\n\nHis hand came to my jaw, turned my head over and up to face his. His lips crossed mine, his tongue tip swept between mine. He pulled me in, his tongue probing, needy, intent. I met him with my tongue, equally needy, equally hungry.\n\nHe was smiling when he broke the kiss. I knew that smile, loved it almost as much as him.\n\n\"How's Stephanie?\" His voice was husky.\n\n\"About to jump you, Tony. This is delicious, deliciously cruel, deliciously wonderful.\"\n\nI gave a small yelp as his thumb and forefinger pinched a nipple gently.\n\n\"Do you have any idea of how close I am, Tony?\"\n\nHe smiled, looked down to his own lap where his abandoned organ swayed, engorged, red with delayed lust.\n\n\"I think so.\" He again pulled me into another deep, loving kiss. My mind whirled. Had this been one of my previous boyfriends, he would have lost it by now.\n\nTony was a man and I knew how lucky I was for it.\n\nI had no idea of time, but the shadows outside had shifted significantly and he was still starting, stopping, driving me closer and closer, holding me there. I was doing my best to follow his example, lightly teasing his cock, balls, nipples, skin. I could smell his need on the soft breezes in the old barn.\n\nHis touch suddenly became stronger, more focussed. A long finger entered me, then a second. They twisted, turned, pulled against my walls. I felt a surge inside me, sped up my pumping, harder, faster. Tony's body beside me on the sofa went rigid, his cock began to jerk and shudder in my hand. Gouts of his essence jetted from him.\n\nHis fingers gave a last pull on my G-spot and I was launched into my own orgasm, pounding, dark, harder than I could ever remember. My applauding nipples were echoing my clit's cheers. Waves of ecstasy erupted, echoed, reverberated through every part of my body. It felt like my toenails&hairsp; were having an orgasm.\n\nSlowly, gradually, it faded.\n\nFor the first time since we'd first made love, Tony had fallen asleep on me. Well, I could hardly blame him. I smiled softly as I cleaned off his chest and tummy with a napkin, then snuggled against his chest for my own happy nap.\n\nI could get used to this. \n\n+\n\nI was surprised at how much progress Marcy had made on her painting. She'd actually set it aside, maybe to dry or something, and had started work on a second.\n\nWe'd been longer than I thought, up in the barn.\n\nShe'd also shifted to into the shade of the gazebo. It was a hot sun.\n\n\"Hi,\" she said.\n\nI could see it on her face -- she knew.\n\n\"Hi, yourself,\" Tony replied casually, ignoring her expression. \"You've got a lot done!\"\n\n\"Well, thanks for pushing me to get back to it. I think this is finally working out for me.\"\n\nShe'd kept her wristwatch on, glanced at it now. \"But it's after four. She pointed to the new painting. \"I won't be able to finish either of these today.\"\n\nShe looked up at Tony.\n\n\"May I come back tomorrow, please? This is so nice.\"\n\nTony looked at me. I nodded.\n\n\"It'd work, Tony. Marcy can drive me home tomorrow.\"\n\nTony didn't answer. He looked at me, smiled, touched my cheek with a gentle finger. He stepped up to look at the new painting, spent some time inspecting it. His examination shifted from painting to artist. He began to circle Marcy, his eyes sweeping over her boobs, flat belly, pert bum, perfect legs. Her eyes opened in surprise at first, realized that this was the normal here and relaxed. Tony took his time.\n\nHe stepped back to stand beside me, took my hand in his.\n\n\"Of course, Marcy. We'll see you tomorrow.\" His smile was as charming as could be.\n\nAnd that was that; Marcy was gone minutes later, leaving paints and paintings behind.\n\nHe turned to face me, used both hands to turn my face towards his. His grey eyes were soft now, gentle.\n\n\"Are you still OK with this, Stephanie?\" I could hear genuine care in his voice, thought I could sense affection, hoped it included at least some love.\n\nI smiled up at him, nodded a little.\n\n\"I think so. Thank you for being gentle with her, Tony.\"\n\nHe did have a nice smile.\n\n+\n\nI worked on my school stuff, did some reading, spent some more time just sunning. I had become accustomed to nudity. It felt right, something I'd been made for. That Tony was normally dressed was also just... normal. How else could it be?\n\nIn an hour or two, Tony was ready to make dinner. He called me in, waved towards my stool in the kitchen.\n\n\"Anything in particular you'd like to hear?\"\n\n\"Your call.\"\n\nI thought, began Brahms 4th Symphony. I've always found the slowly falling notes expressive.\n\n\"So sad!\" Tony remarked.\n\nOK, something else. I started into the Brahms Intermezzo I liked so much and his face brightened. He chopped, sliced, stirred, his head weaving to the music.\n\nHe put the pan into the oven. \"Keep playing,\" he said, stepping towards me.\n\nThere was none of his cool detachment of our first evening. I could feel his eyes on every part of my body and face. Only once did he touch me; his hand came up to sweep my hair off my face. He continued to circle me, smiling, appreciative of my music and of my appearance. I was surprised at how content it made me feel, being treasured like that.\n\nWhen I finished the piece, he led me outside onto the deck, under the shade of the gazebo. He stood behind me, his arms again around my waist. The view was as gently perfect as ever.\n\n\"Thank you for that, Stephanie. You are as lovely to listen to as you are to watch.\"\n\nWe stood there, watching clouds drift by, for what seemed a long time. A timer rang inside.\n\n\"I hope you like sole,\" he said.\n\nSilly question. Tony, I had learned, could turn running shoes into a gourmet treat.\n\n\"How's Marcy doing financially?\" he asked over dinner.\n\nI stared at him. He caught my look, chuckled.\n\n\"No, Stephanie, not that. I meant that I rather like her painting so far. Do you think she would sell it to me when it's done?\"\n\n\"I can ask.\"\n\n\"No, don't bother. I'll ask her myself tomorrow.\"\n\n+\n\nWe watched the sunset after doing the dishes. It was peaceful, warm, a quiet time, a good time for one's soul. Birds were singing in the far distance. Tony's hands slowly and gently swept over the skin of my stomach and hip. I leaned against him, played with his hair with my hand. I felt my nipples grow hard again, felt his breathing change. As the sun dipped below the horizon, his strong arms swept under me. A slight heave and I was in his arms, through the door and down the hall to his bedroom.\n\nI watched him undress from where I was on the bed. I shifted to watch him better, lying on my tummy, my chin resting on my hands.\n\nHe finished stripping off his clothes. I smiled, felt my insides quiver to see the proud manhood pointing at me.\n\nI wanted it.\n\nHe went to kneel beside me on the bed; I pushed him back.\n\n\"I'd like to try something new, Tony. Please?\"\n\nI tried to smile. I'd thought of myself as quite daring for having just thought of this, but suddenly felt quite shy. Tony and I had made love in so many different ways, in so many different positions, yet this was, indeed, another big step for me. Maybe he'd disapprove of my suggesting...\n\nHe stood by the bed, looking down at me, his eyebrows up in question. I leaned my head back further.\n\n\"There's something men are supposed to like, Tony. If it would please you, I'd like to try. I've been practising, you see.\"\n\nI smiled up at him.\n\nI rolled over onto my back, shuffled towards him so that my head hung off the edge of the bed. I saw the understanding in his eyes, the sudden longing.\n\nI had indeed been practising, trying to overcome my gag reflex. Using the soft handle of my toothbrush, I'd been probing the back of my throat in the residence bathroom to get used to being poked there. It hadn't been easy at first, but I thought I was ready to try it for real, if Tony would be patient.\n\nI giggled at the sight of the underside of his manhood, his dangling sac right in front of my nose. It was a view of Tony I'd not seen before. Reaching out, I bought a hand up, caught his cock and pulled him gently towards me. I slid my hand up and over it, held it by its base.\n\n\"Let me guide you, at least at first?\" I whispered. \"Please?\"\n\nHe nodded, a gentle smile on his face. \"Of course, Stephanie. But you don't have to do this...\"\n\nI smiled up at him. \"I know, but I want to try it &mdash; for you. Is that OK?\"\n\nHe merely nodded again.\n\nI shifted my grip, fingers circling his scrotum, pulled him towards my mouth. His tip probed me gently and I opened for him, licked my lips and covered my teeth with them.\n\nI shifted my grip again, took him by the hips, pulled gently. Obediently, he moved forward a little, paused when my hands did. I swept around his cockhead with the tip of my tongue, pulled on his hips again.\n\nSlowly, taking guidance from my hands, Tony moved deeper into my mouth. I felt the softest touch at the back of my throat, paused, deliberately relaxed, not just my throat, but my whole body. I could do this.\n\nI took a deep breath, pulled slightly on his hips again. There was a fleeting hint of gagging and then Tony's crown was into me and all was fine. I adjusted my head angle, pulled on his hips and he was another inch down my throat.\n\nI found I couldn't breathe. I was expecting that, pushed back slightly on his hips. He pulled out slightly and I could breathe through my nose. I took another breath and pulled again on his hips; in a few seconds, his length was fully inside me, his wrinkled sac touching the tip of my nose. I pushed back and Tony slid away. Before he quite left my throat, able to breathe again, I took another breath, felt my nose fill with his male scent. Despite my full mouth, I smiled. I liked the way he smelled.\n\nAnother deep breath and I pulled him back in, this time rather less slowly. His cock filled my throat. Again I pushed on his hips and again he pulled back. I let him pull all the way back, caught his wet shaft with my hand as his head left my mouth. I began to pump it, drag its soft skin up and down over its solid core, swirled the soft triangle under its head with my thumb. I smiled up at him around it.\n\n\"How's that, Tony? Is it good?\"\n\n\"Very good, Stephanie.\" There was indeed a look of delight on his face. \"But that's enough...\"\n\nHe was a considerate lover.\n\n\"Nope.\" This was my man and I wanted this.\n\nI pulled him back into my mouth, caught his hips with my hands and pulled him back into my throat. I guided him in and out several times, then moved my hands to catch the swollen balls directly in front of my eyes, fondled them, tickled behind them with my fingertips.\n\nVery gently, Tony slid in and out of me, pausing to let me breathe every few strokes. His hands swept over my breasts, caught my nipples and the pleasure flowed both ways.\n\nI could feel tension building in the muscles of his thighs and stomach. When he pulled back the next time, I pulled loose, smiled up at him. \"Give me a moment, dear.\"\n\nI took two or three deep breaths, opened my mouth again and felt his cock slide slowly into me until his sac was again touching my nose. I had read of something else, something to add, something additional for his pleasure.\n\nI began humming. I could feel the vibrations in my throat; oddly different than normal. I rocked my head just a little, hummed louder. Oddly enough for a music student, I could suddenly think of no tune. My mind darted this way and that, drew a total blank then seized on...\n\nIt was all I could remember; Tony would have to settle for Fr\u00e8re Jacques.&hairsp; I began humming it, softly at first, then harder.\n\nTony chuckled, began stroking into me again, still very carefully, very gently, but faster, more confidently. His hands drifted over my boobs, squeezing, playing, loving.\n\nHis hands clasped my head, hard. His body rigid, I could feel waves of bliss rippling through his stiffness, over my lips, along my tongue. I felt his pleasure emptying deep into my throat.\n\nSome seconds later, I was running short of breath. A push on his hips and I felt his length sliding out of me now, back out over my lips.\n\nI swallowed, took a deep breath, kissed the wet tip just in front of my face, rolled over on my tummy and smiled up at him. As I watched, one last drop oozed from his tip. I reached up with one hand, gently spread it around his plum with a fingertip. I giggled when it twitched under my finger.\n\nTony looked almost dazed. I grinned.\n\n\"I think you liked that.\"\n\nWordless, he sat heavily on the bed beside me.\n\nI leaned against him, put my head on his shoulder, an arm around his waist in a loving hug. I could wait; he wasn't going anywhere. It was a minute or two before he spoke.\n\n\"You say that was the first time you've done that?\" His voice was very soft.\n\n\"Yes. I learned how for you, Tony.\"\n\nHe took a deep breath, a soft grin on his face now.\n\n\"Heaven help an old man's heart when you get practised, girl,\" he chuckled. This time, his hands held my head in place while he gently kissed my lips.\n\nHe rose and, naked too, went out into the kitchen, returning with white wine. I found that I was surprisingly thirsty.\n\nWe lay on the bed together, cuddling, a gentle, soft time.\n\n\"Thank you, Stephanie. That was remarkable. How are you doing?\"\n\nI giggled. \"Pretty good. You've led me down all kinds of strange paths, Mr. diRossi. But you know what? I kind of liked it. I mean, I'm never going to have an orgasm that way, but I do very much like pleasing you, Tony. So it was fun. Does that make sense?\"\n\nHe chuckled softly. His hand took my wine glass, set it beside his on the side table.\n\n\"Very much so,\" he said. With that, his strong arms slid under my body, lifted me up, turned me completely around and sat me down on his face.\n\n\"Tony! Your beard tickles!\"\n\nHe lifted me up, his voice slightly muffled.\n\n\"Does it? Too bad.\" He released me to fall back on him, his hands pulling down on my thighs as his lips began nibbling on my labia. I felt the old familiar Tony fire again.\n\nI tried to turn, to reach his organ, but his hands held me firmly in place. I fell half-forward, leaning on my hands. I gave a low moan as his tongue swept along my lips, dipped inside my opening, carried on, only to return again and again.\n\nMy nipples were hard as bullets. I sat up, seized my breasts in my hands, played with them, received a telegram of of total approval from my clit. I gasped as his tongue found it, swirled around it, lapped it with increasing speed.\n\n\"Tony!\" I shrieked, trying to wiggle away from his remorseless stimulation. My arousal soared higher and higher with each stab of his tongue, ever nip of his loving lips on my pearl.\n\nI felt pleasure burst inside me. I pinched my nipples and was off in a whirling explosion of ecstasy, booming through me and around me, my heart pounding.\n\nSlowly, slowly now, Tony continued to lick and nibble, prolonging and extending the orgasm in echoes and rebursting joy. Eventually, his grip on my legs eased and he lowered me to the mattress, spooning me from behind, his strong hands gently stroking and caressing my body and head, over and over.",
        "I felt his fingers in my hair, his chest rise and fall with his breathing, soft lips on my shoulder.\n\nI knew it now.\n\nI was loved.\n\nI don't think I've ever slept better.\n\n<p align=\"center\">+</p>\n\n<p align=\"center\"> Thanks for reading.<br>If you enjoyed this tale, please take a moment to vote or comment.</p>\n\n<p align=\"center\">+ + + + +</p>\n\nFor those who enjoyed Stephanie's tale so far, a sample of Chapter 5:\n\n\"So, many happy returns, Tony. I hope you're enjoying yourself.\"\n\n \"Oh, yes,\" he said. \"Oh very yes! Your being here is a very nice birthday present, Stephanie.\" \n\nI'd thought about this. Thought about it a lot. \n\nI looked at the bare form of Marcy in front of me, watched her bite her lower lip in concentration as her paintbrush moved between paintbox and paper. Tony's eyes followed mine. \n\n \"About that,\" I said gently. \"I'd thought of something else.\"\n\nI put my hand on his arm, squeezed tenderly. \n\n \"How about a hall pass?\" I whispered. "
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "cmnf",
        "nudity",
        "sugar-daddy",
        "deep throat",
        "naked picnic",
        "edging"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-04"
}