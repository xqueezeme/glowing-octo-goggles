{
    "title": "My Little Ventrue Pt. 06 Ch. 17",
    "pages": [
        "~~Jack~~\n\nOnce Jack got back, his mom seemed to have gotten past what was probably a couple solid hours of crying. She'd be miserable, for months, but time healed all wounds and all that crap, so he knew to be patient. Antoinette would know, too.\n\nHis mom threw her arms around him when he walked back in, and he had to calm her down. A few pats on her back and some encouraging words did the trick. When he got her back into her seat, he and Antoinette sat down, and spent the rest of the night calmly explaining to her what life would be like as a vampire. They explained the five common blood clans, the five covenants, and the current state of the covenants in Dolareido. They explained some rules, like how Elysium was a no-feeding, no-violence zone, and how the Carthians and Invictus split South Side evenly for feeding. \n\nThey explained the Masquerade, and did their best to explain the Danse Macabre, but Jack could see his mom struggled with the idea that vampires were all paranoid, deceitful, manipulative bastards, looking to gain as much power as they could in their immortal lives. He knew Antoinette had already explained some of the physiology basics, but Jack knew they should again. He explained feeding, blood, vitae, avoiding fire and sunlight, torpor and the daily sleep, and the Blush of Life.\n\nAnd they'd have to explain it again, no doubt. And that was fine. She had all the time in the world now, now that she was safe. In the Elysium Tower, she could learn in safety, and she could grieve in privacy.\n\nAntoinette and Jack ended their lesson with an hour to spare, took her to one of the big, fancy bedrooms Antoinette kept free \u2014 for no reason Jack could understand \u2014 and helped her settle down. \n\n\"You'll... be here when I wake up?\" she said.\n\n\"Well I'll be on the floor below you, but yeah, in the building.\" He smiled down at her, sat on the bed with her, and pat her on the leg. \"There's hundreds of feet of marble, earth, and metal between us and anyone who wants to get into the tower. You...\" He looked over his shoulder to Antoinette.\n\n\"C'est vrai. Rest, Samantha, and take all the time you need. As your son has said, he has been given time away from his duties, and I am sure he will spend them aiding you with your new life.\" The tall Daeva nodded at her childe from over his head, smiling, and Jack mirrored it as he looked back at his mom.\n\n\"Oh... ok... ok...\" She gulped, coughed, and looked around. \"All this for me?\" A big bed, white silk sheets, big open space, a desk with a mirror and an assortment of makeup kits and whatnot, and a wardrobe filled with robes that would never fit his mom.\n\nAntoinette laughed, before letting the somber weight the night held settle her voice. \"All this and far more, Samantha. Now please, rest, and mourn if you feel the need. Tomorrow night, you will have time to spend with your son, and time to grieve. Perhaps, given a few days time, we can go shopping for you?\"\n\n\"Shopping?\"\n\n\"For clothes, my dear.\"\n\n\"Oh... b-but, I have clothes, at home, and\u2014\" She stopped, frowned down at the blankets underneath her, and sighed. \"Right, new clothes, new me. That... that sounds doable, maybe.\"\n\n\"Alright,\" Jack said, \"we're off.\"\n\n\"You two... sleep in the same bed?\"\n\nJack winced, but nodded. \"Yeah. We love each other, Mom. A lot.\"\n\nNodding, she sighed as she looked down again, and twisted the blankets with her hands. \"Can... can you tell me about that, too? Your relationship? N-Not now, but later? I... I can't believe you found a woman, you know? And\u2014\"\n\nJack put up his hands, surrendering. \"I'll tell you everything.\"\n\n\"G... Good.\" She nodded, but once Jack got up, she snapped her hand out and grabbed his wrist. No words, but she looked at him with the saddest doe eyes he had ever seen on her.\n\nHe sat back down, wrapped his arms around her, and stayed there for a minute. \"I'm right here, ok? I'm right here and I'm not going anywhere.\"\n\nShe squeezed him tight, tighter than she probably realized she was doing. Vampire strength was a thing, and it came naturally to Daeva; any harder and she was going to hurt him. But he pat her back, stroked it, and squeezed her in return until she started to settle. Years, so many years, since he'd hugged her like this. When his dad died, it'd never occurred to him that she was looking for someone to lean on, that she needed some support. He was a kid, and she was the parent. Parents were supposed to be self-sufficient, bastions of stability.\n\nHoly fuck, how stupid he'd been.\n\n\"Promise?\" she said.\n\n\"Promise.\" He leaned back from her, found her pinky finger, and hooked it with his own. Like old times.\n\nShe nodded, let him go, and slowly scooted further back on the bed. She was still in the robe and hospital gown, and Jack doubted she even realized. That'd change, as the insanity of her new life resolved, and she began to process.\n\n\"You will sleep all day,\" Antoinette said. \"Torpor will keep you deep in slumber. Once dusk arrives and you awaken, Jack and I will come for you.\" With a bow, the Prince turned and left, and Jack followed after her, offering his mom a small wave as he did. She returned it, smiling at him, and watching him go until he stepped outside her room, and closed her door.\n\nAnd then he opened it again and stuck his head through. \"Oh, this locks. See this big metal bar here? It'd take a freight train collision to break it. Lock it once we're gone.\"\n\n\"W-Why?\"\n\n\"Because shit happens. Kindred lesson 101, be paranoid. This way, you'll be secure, and you can sleep knowing no one's going to interfere with your daily rest.\"\n\n\"Oh. Ok.\" Nodding, she got up and came to the door. Before he closed it, he gave her the small wave again, and she returned it, just like he used to when going to bed when he was a kid.\n\nHe fell in beside Antoinette, and followed her back to their room. The enormous vault door, and walls easily ten feet thick, meant it was the most difficult room to break into; by conventional means anyway. Could someone like S\u00e1ndor bust in here? He doubted it, based on what Fiona told him, but the monsters were difficult to predict, or understand. Maybe S\u00e1ndor would pull a movie monster move, and break out of the cell with some bullshit ability? The sheriff was confident he was trapped, but still.\n\nHe closed the vault door behind him, and watched Antoinette as she slipped out of her suit. No sexual display, no flirting or flaunting, no tossing of her hair, no exaggerated swaying of the hips, nothing. She set her clothes aside by the wardrobe at her desk against the wall, reached in, and plucked out a robe. Wrapped in white, she sat down on the bed, upon its foot edge, and watched him.\n\nSighing, he stripped down to his boxers, and sat beside her. \"... hey.\"\n\n\"My love.\" She slipped her arm around him, and he reciprocated, sliding in closer until their legs touched, and he could hook his arm around her waist.\n\nThey had a bit of time before sunrise, time to sit there, and talk about things. Except he didn't want to talk about things. He didn't want to talk about Julias, or the curse. He wanted to bottle it all up, sit on it, and brood. So, by this point, he knew he should talk about them. You can only make the same mistake so many times before you have to learn from it.\n\n\"Julias is dead,\" he said. \"I... Beatrice and I, we both sort of... it got pretty heavy for a bit there. We both cried.\"\n\n\"That... is saddening, my love, but healthy.\"\n\n\"Let it out, mourn, grieve, all that?\"\n\n\"As clich\u00e9 as it must sound, it is quite true, mon amour.\" She rubbed his back a little, and leaned down to put a kiss on his head.\n\nHe sighed, nodded, and leaned into her, putting his cheek against the nook of her shoulder and chest. \"After that conversation with Triss, I... I feel so drained, tired. Wrecked.\" He looked up at his lover, before hiding his eyes against her robe. \"Julias is dead, and I... I... just want to forget.\"\n\n\"You cannot forget.\"\n\n\"I know, I know. But, fuck, I looked into his eyes when he died, Antoinette. I saw them, and... and...\"\n\n\"I have... had known Julias Mire for far longer than you, my love. If I knew him as well as I believe, then I can only imagine he felt joy, that he could not only spend his last moments with you, but saving your second life.\"\n\n\"Yeap. That's exactly what happened. He had that cocky, happy smile on, and... and... he died with it on.\" Slow, Jack, take it slow. Work through it. \"He had a few last words, encouragement for me, and... things he wanted said to Triss, things I managed to say before she left, earlier tonight. The whole scene at the hospital was... it was... fuck, if it'd been anyone else, they'd have either raged or cried at the end. Not Julias. He accepted it, and... and I knew he was thinking about Triss, right till the end, and...\"\n\nFuck it. He held her tighter, and let some sobs come up. He didn't want to cry anymore; honestly, he was getting sick of it. Cried over Mary, then the next night, cried over Julias with Beatrice. Now, same night, crying again. He was emotionally exhausted.\n\nA minute later, the sobs passed, and he pulled his head away from Antoinette's robe.\n\n\"Sorry,\" he said, \"for... not wanting to spend the rest of the night sputtering sobs, I guess? I'm just too tired.\"\n\nShe nodded, and pet his head a few times before she scooted back further onto the bed. \"Come, lie with me. I wish to hold you.\"\n\nAnd there was that. In all the chaos and insanity, he'd almost forgotten about this part, about how, while Julias died and left Triss alone, he'd also almost died, and almost left Antoinette alone. Selfish of him, to forget that. And, kind of selfish of Julias, to leave Beatrice like he did. Selfish and selfless. \n\nJack slid into bed with her, and curled up, facing away, knowing she'd definitely want to be the big spoon tonight. She was a foot taller than him, so the big spoon came naturally to her, but they didn't always go that way. This time, he knew she'd want to, because he fucked up, almost died, and... and put her through what Beatrice was going through.\n\nSure enough, she pulled the blanket up to their shoulders, turned to face him, and pulled him into her. She pressed her body to his back, held him close, and set her cheek against the back of his head.\n\n\"Sorry,\" he said.\n\n\"For?\"\n\n\"Almost dying. Almost... yeah.\"\n\n\"It... would have been devastating, I cannot lie.\" She sighed, a knowing sigh. \"There are many things we should speak of.\" She was too smart. All the thoughts he'd taken a day to process, to realize, she'd probably thought of immediately. Julias's death, Jack's curse, his Masquerade violation, S\u00e1ndor's capture, his mom's embrace, and the fallout of everything related to those five things, she'd probably made a list of in her head and gone through them and the hundreds of connected variables already. Him, he was still struggling with accepting the five things as reality, let alone calculating possible outcomes from the fallout.\n\n\"I think I can talk now,\" he said.\n\n\"Bien. What did the Invictus bestow upon you as punishment for violating the Masquerade?\"\n\nHe managed a small chuckle. \"Nothing. They're... they're pretty broken up about Julias, too. And they understood the extenuating circumstances. I have to take time trying to figure out this curse, before I'm allowed to return to work.\"\n\n\"Then Maria and Michael have grown wiser, since they arrived in my city so many decades ago.\" She squeezed him a little harder for a moment, and kissed his ear once. \"The circumstances were extreme, and the loss, far worse. They know better than to damage a valuable asset, or harm a dear ally, such as yourself.\"\n\n\"A tactical decision, then.\"\n\n\"No.\" She squeezed yet again, and nudged her cheek against his head. \"Well, perhaps. They are Invictus, after all. But I believe they are not the soulless manipulators they pass themselves off to be. They care about the Invictus, and its Kindred.\"\n\n\"It's hard to imagine Maria being emotional about things. And Michael, I expect would sooner throw a punch.\" His turn to sigh. \"But that's not really what you want to talk about, is it?\"\n\n\"No, I suppose it is not.\"\n\nHis sigh turned into a groan, but he knew it was coming. \"The curse, the thing, I assume Daniel filled you in on what I told him?\"\n\n\"Oui, but... I must hear it from you.\"\n\nYeah, that was understandable. He really, fucking really didn't want to, but it was the least he could do.\n\n\"Maria and Michael said it was the Strix, when I described the dream.\" That earned a hard freeze from her, and her grip on him tightened. \"Striges, or whatever. They... infected me, or my ancestor, a woman, my great great grandsire. A Sanctified sealed it away, locked the curse behind some sort of spell. And over the centuries, it wore away, and I managed to break it. I... I guess I'd been trying to break it ever since Angela first hurt me.\" He turned around, and faced her. Her eyes were wider, staring at him as if he might turn into ash in her hands. \"Don't look at me like that.\"\n\n\"I... I am sorry, my love, but\u2014\"\n\n\"I'm still me, Antoinette. The thing, it's there, but it's... it's no different than the Beast we all deal with.\" Not true. Now it could speak to him. Now, it had desires that extended beyond the typical hunger and animal aggression of a mindless beast. Now, it wanted revenge, with the sick joy of a psychotic killer. \"Ok, it's not the same. It's different, but it's not different in that it's not me, but a separate thing, same as your Beast. It's hungry, and angry, and it's...\" He closed his eyes and pushed in closer, setting his forehead to her sternum. \"It's fucking terrifying, but it also helped me, saved my life, captured S\u00e1ndor, killed three hunters, and...\"\n\nThe elder Daeva shivered for a moment, and clutched him tighter still, almost hurting him as she squeezed.\n\n\"I... am frightened, my love. Of all the possibilities, I had not thought something as grandiose, or horrible, could be lurking within you.\"\n\nHe wrapped his arm around her, the other underneath him on the bed, and he held her close as well.\n\n\"It seems... unreal, doesn't it? People dying, that feels real, like a hard punch to the gut. But this... thing... it doesn't feel real. Feels more like a fairy tale, something out of a book.\"\n\n\"It was quite real, my love. The crows, the blood and carnage, the... personality... that emerged.\" More shivers worked through her, and she loosened her grip on him enough so she could lean back and look down at him. \"The weight of death, murder, family, bullets and knives, money and blood, we contend with these every day. They are easy for us to understand, to grasp, and combat. But we are also creatures of the night, of fantasy and nightmares. The fantastical, and the horrific, we must also concern ourselves with. As easy as it may be to dismiss this curse as... less real, than the death of your sister or sire, I urge you to reconsider. I have dealt with entities beyond our understanding before, and... and the wake of destruction they can leave, is far too real.\"\n\nHe nodded, and she leaned back in to hold him tight against her. She was right, of course. Julias and Mary's death felt like serrated blades in his gut. Memories of Angela, and the way she and Jeremiah had tortured him, felt like hot pokers being dragged down his spine. This curse, lurking in his heart, waiting to pounce, was almost too insane to believe.\n\nBut it was real, and it wasn't going away.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\n\"Hey Damien!\"\n\nDamien got up from his seat on the roof, and walked over to the fire escape on the side of the building. He held out his hand, and Fiona took it, pulling herself up and joining him.\n\n\"Hey.\"\n\n\"What're we doing up 'ere?\"\n\n\"Wanted to update you, in private.\"\n\nShe raised a brow, and wandered around the rooftop, hands behind the small of her back against her brown, leather jacket. \"Update? So... not a date?\"\n\nHe couldn't help but laugh. How had he not seen that coming? He really was a dumbass, as Jessy said.\n\n\"Update tonight, date another night?\" he said. There was maybe ninety minutes before sunrise, and he wouldn't waste them on a date, even if he really, really wanted to.\n\n\"Ugh, fine!\" She bounced over to him and beamed up at him. \"What happened? No one's told us anything, but we ken something's going on.\"\n\nSighing, he nodded toward the building edge. He sat down, legs dangling off, and she joined him, sitting beside him. It was a twenty-story building, and beside them was a giant, bright neon sign that read 'Dips and Curves'. A hotel, and brothel. Men \u2014 and some women \u2014 came to stay the night, usually with a partner they brought, but sometimes they acquired a partner at the hotel itself. It had a strip club, a bar, a supposedly reputable buffet, and many other amenities that made Damien laugh thinking about them.\n\nLucas would have hated it, how the building encouraged a casual view of sins. Compared with the shit getting shoveled Damien's way these past few months, it seemed too petty a concern.\n\n\"Julias is dead.\"\n\n\"Julias, Jack's sire?\"\n\n\"Yeah.\"\n\n\"I... how?\"\n\n\"Angela and her group attacked the hospital last night, to try and capture Jack's mother. Jack was there, with Julias. They saved her, fought off the hunters, killed a few of them, and even captured S\u00e1ndor, but Julias died in the fight.\" Three sentences to summarize what must have been an utterly horrific experience for his friend. Three sentences didn't do it justice.\n\n\"The crows!\" Fiona pat him on the leg, several times, each basically a slap, an exclamation point for her waves of surprise. \"I saw on the news! And it's aw over the internet.\"\n\nWincing, he nodded, and looked down at the tiny woman beside him. \"That was Jack.\"\n\n\"... really? Wee Jack?\"\n\n\"Yeah, really. He awoke some sort of curse inside him, far as he can tell, something ancient and a part of his bloodline. It... snapped, when Julias died, broke free, and Jack summoned an army of crows.\" Damien shivered as he remembered the sky, the thousands upon thousands of crows that descended from above, and the hundred or more that had killed themselves in order to break a few windows. \"It was terrifying, and awe-inspiring. I thought, for a moment, that perhaps I was witnessing a biblical event, something out of the Old Testament.\"\n\n\"I was in my lair, sleeping, recovering from yer Kiss.\" She managed a smile for him when she said Kiss, but it faded quickly. \"Jack, he... he must be feeling horrible. What happened to his maw?\"\n\n\"The Prince turned her, and brought her back to the tower.\"\n\n\"Yay!\" Fiona bounced in place a few times, butt hitting the rooftop edge. \"Oh, oh, so she's Daeva now! I bet she'll be fun... once... she gets over her wee one dying.\"\n\n\"I think it'll be a little while before we can see Samantha. A little while longer, before she feels comfortable enough to... socialize, with other paranormals. I suggest being a little more... um...\"\n\n\"What?\" Her smile returned, and quickly became a mischievous grin, with a hint of 'I dare you to insult me'.\n\n\"Less aggressive with her, than you are with others.\"\n\nHer grin only grew wider. Wham. She threw herself at him, a full on tackle; impressive, considering she was sitting down. But she managed to get some weight into it, and it was enough to send him onto his back.\n\n\"I am nah aggressive!\" she said, even as she crawled onto him, and straddled his waist. His legs were still dangling off the building edge, and it was a far enough drop to give any Kindred pause. If Fiona fell, would she survive, die instantly, or swing away like Spider-Man?\n\nOf course that's where his mind went, not to the fact the beautiful woman was straddling him, and grinning down at him. An ingrained reflex, to always look for the negatives, when a positive was set on his lap.",
        "\"I... I uh... um... I\u2014\"\n\nGroaning, she rolled her eyes, leaned down, and kissed him. \"I'm glad yer fine,\" she said without ever lifting her lips, half burying the words.\n\n\"I\u2014\" Ok, talking wasn't going to work. In fact, she seemed quite insistent on not letting him talk. The gorgeous little woman pressed herself down on him, squashed her jacket and breasts to his suit jacket and chest, and her hands found his. She guided them, set them on her hips, and smiled into her kiss as she continued.\n\nShe knew how to kiss. He didn't. He felt wholly inadequate to be a part of this exchange. But, God, it felt nice. Her lips were so warm, and soft, and\u2014\n\n\"Ye were injured!\" she said, pulling her head off of him at last. \"In the tunnel, ye were injured, but ye still went to help Jack?\"\n\n\"Maria wanted me to. And... I mean, yeah. He's my friend.\"\n\nFiona squealed, and started kissing him again. \"So brave!\" Giggling unendingly, she rubbed her nose on his a few times, and made sure to push her chest down on his, so there was no question about the feminine softness hidden in her jacket. \"Did ye like my picture?\"\n\n\"I... haven't been able to stop looking at it.\"\n\nHe almost gasped as the fiery redhead blushed, deeply at that.\n\n\"Sorry if I'm being aw... ye know... slutty.\" With more giggles, she stood up, and helped pull him to standing. \"I can't help it! I get aw... tingly, when things gie scary.\"\n\n\"Fear junkie,\" he said, managing to put a touch of sarcasm on his inflection. It wasn't easy, bantering like this, but she definitely made it easier. She made everything feel easier, even as he felt a hundred walls throw themselves up in his brain, trying to stop him from just giving into the joy, the giggles, the fun.\n\n\"Well I am a creature of nightmares!\"\n\n\"Does Vrall get tingles from being scared?\"\n\n\"No. She's different.\" Shaking her head, Fiona took his hand, and walked him toward the fire escape. \"Come on, let's go have fun!\" Fun came with some very blatant eyebrow wiggling.\n\nAnd, as much as it would have been so easy to simply follow her, let her pull him along into a journey of what was bound to be endless sexual fun, he resisted. He planted his feet, and she came to a stop, despite her continuous attempts to pull. He didn't invite her up here for sex, or a date, or any of that. He invited her up here because he was worried about her, and he wanted to make sure she knew what was happening.\n\nThere was no greater killjoy in his life, than himself.\n\n\"Fiona.\"\n\n\"What? Come on.\"\n\n\"Fiona, I... want to talk.\"\n\nShe frowned at him. \"Why?\"\n\n\"Why?\" He gave a small tug, and she had to come back onto the middle of the roof to not fall over. \"Because you don't seem to want to.\"\n\n\"I dinnae understand.\"\n\n\"We nearly died in that tunnel, Fiona. Julias died that same night. Jack's got some sort of curse doing only Lord knows what. Hunters are everywhere. And... and I nearly killed you.\" Much as he knew his words carried weight, they didn't seem to land. They bounced off the tiny redhead, as if she were impervious to all the worries in the world. Considering how quickly she recovered from getting drained of half her blood, maybe she was.\n\n\"And?\"\n\n\"... and? Come on Fiona, I'm worried you're not\u2014\"\n\n\"Nae taking things seriously? Dinnae ken what's going on?\" Her smile faded, replaced with a far more serious frown than he'd ever seen on her. Uh oh.\n\n\"I\u2014\"\n\n\"Damien! Ye dinnae... ye're the one that doesnae understand. Ye vampires are so concerned with tomorrow, ye never enjoy today.\"\n\nWell, that was true. That was very true, he supposed, and he was one of the worst offenders. Fifty years hiding in sewers could do that to a man. It was paranoia well deserved, though, even if it meant interrupting what obviously could have been a very enjoyable night.\n\n\"But I\u2014\"\n\n\"No! Shut up!\" She stomped her foot, and Damien took a step back. \"Ye're dumb!\"\n\n\"I... I'm afraid I have to agree. I am pretty dumb, and\u2014\"\n\n\"No! No no no no no!\" She stomped around a few more times, before she marched up to him, and punched him in the shoulder. \"Ye're supposed to protect me!\"\n\n\"I... what?\"\n\n\"I'm the princess! Ye're supposed to protect me, and be both sexy and caring, but also dark and scary and mysterious. Ye're supposed to scoop me up, guard me from this horrible world, and fuck me as you do!\"\n\nWow. Ok, confused did not begin to describe his state of mind. \"I don't know if I'm the guy to\u2014\"\n\nShe grabbed his hands, and started pulling again, but this time she started pulling him toward the rooftop entrance, a locked door. \"I'll have ye know, I think about those things, about the hunters, and Jeremiah, and how Angela is hurting my friends, and how the Prince and the others dinnae really want us here, and all sorts of stuff!\" A spidery silhouette erupted from around her back, and Damien flinched as the eight limbs of shadow slammed into the door, piercing the metal. A moment later, she yanked it open, and it banged against the rooftop entrance protrusion.\n\n\"I... I don't think it was locked.\"\n\n\"Shh!\" She glared at him, but didn't let go of his hand, as she dragged him down into the hotel. The roof entrance showed a stairway, one that led down to another door. A passage used by staff only, probably. A light flickered, not doing the best job lighting the rarely used stairway. \"This will work.\"\n\n\"Fiona, I\u2014\"\n\nShe snapped her hand out, and again the silhouette of the spider woman appeared around her. How their monster abilities worked outside the nightmare realm, he didn't understand. It wasn't like she was carrying around her horror half in a physical sense; otherwise S\u00e1ndor would have weighed several tons, at least, and carrying him out of the hospital would have been impossible for him. But, they were able to summon up their physical forms in a limited, specific sense, like Fiona stabbing with her spider legs momentarily. What other strange things could they do? S\u00e1ndor had penetrated Eric's dreams once, attacked him there, turned it into a nightmare. If the gargoyle horror could do it there, could the man tied up in the Prince's cell do it as well?\n\nFiona's snap shattered the light bulb overhead, and drowned them in darkness. \"Close the door behind ye.\"\n\nHe did, and regretted it. Complete, total, one-hundred percent darkness. Kindred eyes were good, but not that good.\n\n\"Damien,\" she said, \"ye Kindred are all stupid dobbers! Do ye nae ever consider the moment? Ye're all so concerned with the future, ye never enjoy the present.\"\n\n\"It's hard to enjoy the present when you know the future is going to get you killed, Fiona.\"\n\n\"Pfft.\" She snorted, and pulled him down the stairs. Without light to go by, she went slow, but still faster than he'd like, and he almost stumbled down the hard stairs multiple times. \"Why dinnae ye do it for me?\"\n\n\"What?\" he said to the darkness.\n\n\"Do it for me? Ye're so focused on the future, but ye never see the things in front of ye. It's like ye're afraid of... of being happy for once, ye ken?\"\n\n\"I\u2014\" He froze as he felt his boot land on something soft. The air turned humid, hot, and it blanketed him in sweltering heat; no concern or real discomfort to a vampire, but it was startling nonetheless. Still pitch black, but now he could feel mud start to overwhelm his boots, branches hit his suit, and moisture soak through into his clothes. He knew where they were.\n\n\"You're always so worried about the future,\" she said, except her voice had changed. No longer was she the cute little redhead, but something else instead. \"And it's more than that. You always observe, never participate. You're always on the outside, Damien, watching. It's as if, you never consider that maybe, you could have a piece of what others are having, as if the pleasures others find in each other, is not something you're... allowed to have.\"\n\n\"I... guess I got used to that. Fifty years of hiding is a long time. And... and when I was finally done, it all sort of fell apart.\"\n\n\"But it's not like that anymore. You don't have to be so paranoid that everything you touch is going to fall apart. Especially me.\"\n\n\"You say that so easily, but\u2014\" And then he was upside down.\n\nOnly now, as he dangled upside down and was lifted higher, did some light manage to pierce through the canopy above them. What light found him confirmed his suspicions, and he gasped as he watched the branches, leaves, vines, and moisture droplets of the jungle pass by. There were creatures as well, the sort you'd expect to find in a jungle, though attempts to see them proved borderline futile. And considering it was a jungle of darkness, he doubted he wanted to. Centipedes were probably the least frightening thing this jungle held within its endless shadows.\n\nHigher, and higher they went, until the floor was gone, and only branches remained, giant and layered with dark vines. The moonlight punctured the canopy better up here, but the trees were tall and taller still, burying him in shadow, with only several beams of moonlight able to reach him. Enough to see by, enough to look around, and realize he wasn't moving up anymore.\n\nHe was stuck, not upside down anymore, but still stuck. In a spider web. Stuck in a spiderweb. The human reflex in him demanded he panic and struggle. The Kindred reflex in him told him to vanish, disappear, find a shadow to hide in. Neither were of much use in this situation, and he grit down on his teeth as he told both sets of instincts to shut up.\n\n\"Damien Damien Damien,\" the spider monster said, hidden in the shadows that blanketed the forest. \"So concerned with everything, all the time, and refusing to embrace the comforts given to you. I've known people like you Damien, hundreds and hundreds of years ago. A wounded soldier, wounded in the mind, unable to accept that, perhaps, they could be happy, if they just lowered their guard for a moment.\" She chuckled, the alien voice rippling along the enormous trees. \"I can fix that.\"\n\nSquirming accomplished nothing. The webbing was thick, strong, and he didn't have the easy strength of a Nosferatu or Daeva to fuel his efforts.\n\n\"Fiona, you\u2014\"\n\nThe spider woman descended from the trees, and he froze as he stared up at her. Up this high, the canopy was open enough to expose the two moons, providing just enough light for him to see a few feet into the dark night. He was glad he could. As much as Fiona in her human form was terribly attractive, in her horror form, the true form of her monster half, she was beautiful, exotic, and terrifying.\n\nThe long, thin spider legs that emerged from her back were smooth, and the texture of them looked almost like metal, matching their dark tint. She pressed their sharp tips against the thread, and climbed down it with more delicate, precise skill than any real spider could manage. Her humanoid body hovered before him, held up by the eight legs, and she smiled down at him as she descended upon him.\n\nShe had no eyes; a stark difference to the many eyes real spiders had. Instead of eyes, smooth, dark horns curled up and back from where eyes would have been, and they joined the myriad of enormous horns that decorated her head like a grand crown. No hair. Beneath the almost-black horns, her skin was of similar color, dark steel, and her small nose, pointed chin, and tiny lips gave both figurative and literal sharpness to her gorgeous face. Her slender neck joined to a very human torso, a long white dress of spider silk hiding her huge breasts, but there were plenty of holes in it, and it was tight enough that he could see the inhumanly tiny waist sitting above her wide hips, and curvy butt.\n\nHer legs were human shaped, but instead of ankles or feet, her shins were twice as long as a human's, and came to sharp points, like her eight spider legs. She had hands, but instead of four fingers and a thumb, she had two fingers and thumb, each a large claw that matched the rest of her blades.\n\nVrallar'trakla of the Eight Blade Arach. He didn't know what that title was about, except that it was appropriate.\n\n\"... Fiona,\" he said, and he tried to pull his head back a little. No such luck. He was thoroughly trapped. \"What are you\u2014\"\n\n\"I'm not letting you run away this time. You are trapped, vampire, and I will make you feel pleasure, and joy, no matter how much you wish to hide from it.\" Her eight spider legs took to different corners of the enormous web, keeping her humanoid center stable as she hovered, and came in closer to him, and closer, until she was only inches from his face. \"I've seen your looks, your eyes, when I've been in this body around you. You like it.\"\n\nHer voice was far more smooth and natural than it had been the first time he met the monster, but he could still hear the hisses and rasps. He gulped, and tried to keep his eyes on hers. Not having her own eyes made eye contact difficult. It grew especially difficult when she leaned in closer, until she pressed her breasts into his chest, and set her lips on his neck.\n\nAny concern her spider body had hard skin vanished, as her massive, soft breasts squished against his suit jacket. Good God.\n\n\"It's... it's very attractive, in a unique way.\"\n\n\"Isn't it?\" Laughing, her deeper, huskier voice showing through, she kissed his neck, and set her clawed hands onto his shoulders as she came in closer still. Her pelvis pressed to his, and he squirmed as he felt her lovely thighs against his pants.\n\n\"Fiona, I\u2014\"\n\nOne of her hand's claws pressed to his lips, and she shook her head as she smiled at him. \"Damien, listen. Fiona wants you to Kiss her again, drink more of her blood; except next time, she wants you to be inside her when you do.\"\n\n\"Fiona does...\" Right, Fiona was Vrall and Vrall was Fiona. It was a strange way to think, but it wasn't like they were two different people. Just, two different bodies, with different personalities to go with. \"I almost killed you.\"\n\n\"No you didn't.\" Laughing, the beautiful monster put a kiss on his jaw, and nudged her cheek into his. \"You drained her, quite a bit, but she was fine. It was strange, seeing you being so aggressive, giving into your Beast like that. Fiona... loved it. Fiona wants that desperately, to feel your hands hold her down as you drink her. She wants to squeeze on your cock and soak you in her cum as you devour her. She wants her dark, dangerous man, delirious with hunger, to pin her down and take her.\"\n\nHe blinked, a dozen times. This was starting to sound very similar to Jack's advice. \"She... does?\"\n\n\"Yes, she does. She wants to sit down with you, talk about your past that you refuse to talk about, and she wants to tell you about her life. She wants to order in pizza, and watch a romcom with you.\" It almost made Damien laugh, hearing the ancient spider monster say 'romcom' in her scary, hissing voice. \"She then wants you to take her hand, kiss her, and then pin her down and Kiss her, as you fuck her into a coma.\" The monster laughed, and offered him a small shrug as she leaned away. \"Not a literal coma, but there is no doubt that the Beast you unleashed in that moment was... stronger than expected. Perhaps it was the blood?\"\n\n\"Maybe. It was unusual, the taste of her blood.\"\n\n\"But pleasant?\"\n\n\"... very.\"\n\nShe nodded, smiling, and leaned in again. He couldn't move, but that was fine, he was ok with letting the spider monster kiss him; mostly ok. Eyes closed, moment frozen, he managed a small smile as her small lips opened, and he felt the hint of her long fangs within. She probably had a venomous bite. Scary. Exhilarating. Maybe he had a fear kink, same as Fiona?\n\n\"But, you ran away.\"\n\n\"I didn't run away!\" he yelled. \"I thought I... thought I might have really hurt you.\"\n\nShe giggled, and set a kiss on his chin. \"You do not raise your voice often.\"\n\n\"I have learned to be... reserved, and quiet.\" It was the only way to survive all those years.\n\n\"Mmmm, that was then. Things are different now.\" Shrugging, she hovered away a couple feet, and raised her claws to her shoulders. With slow movements, and a subtle, evil grin, she began to cut through the shoulder straps of the tiny, flimsy dress. \"Fiona finds your behavior confusing. I recognize it, though. You are a man that is not used to pleasure, and does not know how to accept it. You flee from it, terrified it might make you happy, and that, eventually, you might lose that happiness.\"\n\n\"I... I don't think...\" Was that it? He'd legitimately thought he'd crossed a line with Fiona, thought maybe his Kiss had bordered on an attack, maybe a deadly one. He hadn't considered that maybe he was just lying to himself, and that he was afraid of being happy. \"I\u2014\"\n\nHis jaw dropped, as the spider lady's dress fell. Good Lord, her breasts were enormous, and her nipples were black against the dark steel skin, like her lips. The humanoid part of Vrall was of average size for a woman, a little shorter than him, but her waist cut into a size that belonged on a Barbie doll more than a real person. Her thighs were toned and smooth, and her sex was smooth as well, with the same black color of her nipples.\n\n\"Fiona does not understand why someone would behave that way. She just chases the things that make her happy without a second thought. I, on the other hand, have existed for thousands of years, and am all too familiar with the self-destructive nature of man.\" \n\n\"Umm...\" Words failed him, eyes too busy staring at the gorgeous body of the monster.\n\n\"That is why I have trapped you in my web. There will be no fleeing from me. And\"\u2014she leaned in, and pressed her breasts into his suit hard enough he could feel her nipples harden against it\u2014\"unlike Fiona, I am at my most content, when my prey is bound and helpless.\"\n\n\"Prey?\" That earned a small squirm from him.\n\nShe laughed again, and started to undo the buttons of his suit jacket. \"Blush Life for me, vampire.\"\n\n\"Fio... Vrall, I\u2014\" He shivered as her claws slipped into his pants, and began undoing the fly. \"I don't\u2014\"\n\n\"Shh.\" The busty creature undid the buttons of his shirt with swift precision, and once she exposed his chest to the humid, warm jungle air, she pressed her huge breasts into him. Their softness molded to the hardness of his chest and abs, and Vrall let out a long, quiet moan. \"I would ask you to drink me, as you did with Fiona, but I do not think a Kindred's body can gain sustenance from a true horror.\"\n\n\"P... Probably not.\" He froze, paralyzed, and tried to keep his eyes open as the monster gently eased her body up and down using her eight spider legs. Soft, warm, silky, he gulped as he looked down, and stared at the huge pillows squashed to his chest.\n\n\"Blush.\"\n\n\"I feel like you'll drink me if I do.\" Irony, for a Kindred to be the one worried about being sucked dry into a withered husk.\n\n\"... I might, but I guarantee you will enjoy it.\" She leaned in to him, and began to kiss his neck, opening her mouth enough for him to feel her fangs. \"Blush for me, and I will tell you all the ways Fiona wants you to touch her.\"\n\n\"But, I thought you were Fiona.\"\n\n\"I am. But I am Vrall, and right now, Vrall is me, and Fiona is her.\"\n\nGive up trying to understand how the Begotten work, Damien, and go with it.\n\nHe Blushed Life, and immediately, his shaft began to press on his pants, hard, hard enough it hurt. The spider woman moaned into his neck, and slid her hands down his body. He couldn't see what she was doing, but he could feel her immense finger claws ease his pants down, and his boxers.\n\n\"Ooh.\" She giggled. Not Fiona's giggle, but Vrall's, a foreign, subtle, scary, from-the-depths-of-forgotten-jungle laugh. Her grip surrounded his length, and squeezed.\n\n\"Ah... h-hey.\" Her long claws couldn't curl around his length due to the shape of them, so instead, she used her soft palm to cup his shaft, and grip it with enough strength to make him stir. Someone else's hands were on his penis, and the strangeness of it, and exhilaration, got his heart beating fast enough he could feel it hit his chest and her breasts pressed to them.",
        "\"You are more well endowed than your passive nature suggests, vampire. You hope to fit this into Fiona? She is a tiny thing.\"\n\nDamien managed a small chuckle, but it was weak. He was too overwhelmed to be chuckling. A spider monster had trapped him in her web and was currently stroking his cock, gently bringing her soft skin back and forth along its underside. Circumcised, he shivered as her palm eased up along the swollen head, before slipping down to the base again. Sensitive as all Hell, the touch made him gulp again, and this time he gulped saliva, fueled by the Blush and craving.\n\nSo he was, perhaps, a little more well endowed than statistically common. Her words stroked his ego almost as much as her hand stroked his length, and he blushed red.\n\n\"I... yeah, I do.\"\n\n\"Then I shall tell you in what ways you could treat Fiona in bed, because Fiona is, and is not Vrall. We have different tastes.\" Nodding, Vrall pulled back, and hovered a foot away from him, giving him more than a perfect angle for him to admire her inhuman curves. She reached out, and began to slice his clothes open.\n\n\"Wha\u2014hey.\"\n\n\"The Invictus will buy you new clothes, surely.\" Laughing, she sliced apart the shoulders and sleeves, and threw the fabric away, before doing the same to his pants, all with exact precision, and all within mere moments. She'd be an amazing surgeon.\n\n\"I know, it's just... how am I going to get back home now?\"\n\n\"We will cross that bridge later.\" Nodding again, she grinned as she looked him up and down. \"Fiona will love this. She will very much want it.\" He almost said something, but she came back in again, and lowered herself down, and down, until her face was eye-level with his shaft. \"Vrall wants to ensnare you, Damien. Vrall wants you as you are, bound, helpless, free for me to take my time and enjoy my meal.\"\n\nCalling him meal, and prey, was definitely making him nervous. It was also pumping his body full of fake adrenaline fueled by the Blush, and he found himself panting. Tiny bits of fear danced up and down his skin, as he realized he was in a nightmare, and a monster had him trapped in a literal web. When he first met her, he'd stumbled through this jungle, and was taken aback by how much it was a real jungle, smells, humidity, heat, noises, all included. She had corpses dangling about, some from Dolareido, many others far, far older, and Vrall had made it known she was an old creature. Killing a vampire like him, who was tied up and helpless? He knew Fiona liked him, but Vrall was another story. It certainly seemed like the monster liked him, but he wasn't completely convinced yet.\n\n\"But Fiona?\" Laughing softly, she came in closer, and set her face against the underside of his shaft. She smiled up at him as he felt the angles of her oddly beautiful face nudge along the veins of his girth. \"Fiona is a young woman, with the fantasies of many young women who are as nice as her. She wants a strong man, a dangerous man, to take her, and have his way with her.\"\n\n\"I... I'm not\u2014\"\n\n\"You are a dangerous creature, Damien. You have the body of an agile warrior, a history worthy of story, the skills of an assassin, and the determination of someone with resolve. Combined with your young face, and your... movie vampire aesthetics, a modern young woman is bound to fall for you.\"\n\n\"Movie vampire?\" Arg, not the emo thing again. \"I\u2014\"\n\nThe eyeless monster giggled once again, quiet, with a few small hisses, and she offered his shaft a slow kiss along its underside. God in Heaven. The beautiful creature looked almost regal with the array of horns on her head, how they curved backward and then out and in like a crown. The fact she didn't have eyes, but more horns coming up and out to join the crown, didn't rob her of her beauty; made her as scary as Lucifer, but didn't rob her.\n\n\"She wants you to pin her down, Damien. She wants you to take her, hold her down, and enter her. She wants you to wrap your grip around her throat, and make her squirm as she climaxes on your length. She wants you to bind her, and finger her until she squeals, as you drain her of blood.\" With a slow, gentle touch, Vrall brought her face up to the tip of his cock, and offered the swollen head a loving kiss. Immediate sparks ran down his length as he felt the warm, succulent, massaging touch of her lips on his glans. \"Hug her, hold her, drain her, and force her to cum until she has almost passed out. And when she is defenseless, exhausted, soaking wet and shaking, she wants you to fuck her, hard. Or soft, depending. As long as she is weak and unable to stop you. A limp woman in your arms, insides trembling, juices flowing, that is what she wants to be.\"\n\n\"That... is...\" A lot to process. Honestly, he'd almost done all those things, that time in the subway. If things had gone any further, he'd been liable to either Kiss her until death was a real possibility, or he would have spent every bit of energy he drained out of her, fucking her.\n\n\"Is this not to your liking?\"\n\n\"I'm not sure. I... I...\" It wasn't a part of him he normally ever indulged, the desire to be aggressive, overpower, and penetrate. But, that time in the subway changed that. The sight of her, panting, exhausted, helpless, soaking his fingers in her cum, it'd sent an overpowering desire into his guts to have her, take her, and do things to her.\n\n\"Imagine it.\" Again, the spider woman kissed the head of his cock, and he groaned louder, above a whisper now, as the pleasure ripples continued to build. \"Fiona, sitting in your lap, her hands tied behind her back. She is exhausted, whimpering and mewling, her legs hooked around your waist, and your length buried inside her. She is too tired to do anything, so you grab her hips and force her back and forth, all the while your teeth are sunk into her neck, and letting her blood flow into you. She trembles, squeezing on you, and her juices flow down your cock again, and again, until yours join them.\"\n\nAs her intoxicating story finished painting a vivid picture he couldn't deny he wanted to taste, she began to suckle on the whole of his length's head. His breath caught in his throat, and he gazed down at the spider monster as she slid his length between her spread lips, back and forth, slow and tight. He could feel her spider fangs, four fangs that curled back in her mouth, so only the flat side of the front of them nudged against his glans. It was her lips that shocked him to stillness. Her kisses had been gentle, but once she'd slipped them over the whole of the sensitive skin, he struggled to manage the sensation.\n\nIt had been a long, long time since he'd had an orgasm. Decades. And never, ever, had he experienced the touch of another. The overwhelming sensation shook him to the core, literally, abs squeezing and cock flexing upward in her mouth as he struggled to handle the onslaught of bliss. Wet, warm, soft, and tight. Smaller groans and pants managed to escape him, and his eyes closed as he felt the building heat between his legs.\n\nAnd then she stopped. He forced in a useless breath, and gazed down at the beautiful woman and her royal crown of horns.\n\n\"I... uh... wow.\"\n\nVrall chuckled, and gave his cock's head a quick kiss, before she hovered up a little higher. Once her breasts were level with his length, she took his girth into a palm, and guided it onto her right breast. She held it, aimed it forward and pressed it into her soft, dark nipple. Gently, slowly, she massaged her breast with his cock, and he shivered as she acquainted his glans with the texture of her skin, her swollen areola, and the engorged tip.\n\n\"Vrall, on the other hand, prefers her men in the opposite situation.\"\n\n\"S... Sounds like... you're her other half.\"\n\n\"It does, does it not?\" Nodding, enormous crown moving with her, she slid his length down, and pressed it up against the soft, heavy underside of her breast, so the silky weight overflowed it. She rubbed it from side to side, sending more pulses of growing bliss along his length, but not strong enough to bring him to orgasm. The edge of bliss, a pleasure he hadn't felt in so long, he was almost afraid to experience it again, afraid it wouldn't live up to the paltry memory.\n\n\"I um... I don't know if\u2014\" Another shudder, and his eyes went wide as he looked down, and the found the spider woman suckling on his glans again.\n\n\"You will do as I say for Fiona. She craves it, and you crave it.\"\n\n\"I do?\"\n\n\"Oh yes.\" Her lips slipped down further, and she set a kiss along the underside of his cock, and another, and another, peppering its whole length with them. \"You want to. I remember the animal that awoke in you when you tasted her. I saw it in your eyes. A hint of the Beast rose to the surface, and you embraced it.\"\n\n\"I\u2014\" His eyes closed again as she started to suckle his length's head again, all of it. It was the sensation of her lips sliding back and forth along the base edge of his glans, at where the bulbous shape connected to his length, that filled him with rising waves of bliss and sensitivity. The monster knew what she was doing, and he was helpless to control the waves of warmth flowing up from underneath his shaft.\n\nHis jaw dropped, and he forced himself to keep his eyes open \u2014 half successful \u2014 so he could watch the beautiful creature suckle, as he came into her mouth. Her suckling grew softer, slower, and he sighed relief as she kept the pleasure from crossing into painful. Each flex of his insides sent a wave bliss up through his cock, and a gush of warm fluid came with it, landing on the tongue teasing his girth.\n\nThe pleasure was staggering. Small grunts escaped him as his insides flexed, lungs crushed by muscles as he struggled to handle the waves of pleasure. She continued to suckle, easing her lips back and forth again and again, slow, tight, milking him of his cum, and gulping it down with quiet moans. The vibrations of her voice on the sensitive skin was euphoric, and his eyes eventually closed as he melted into her suckling kiss.\n\nEventually, she relented. He managed to open his eyes again, and he stared at the spider woman as she grinned up at him. \n\n\"Your first?\" she said.\n\n\"Y... Yeah.\"\n\n\"The first time you have cum at the hands of another, and it is a monster's lips.\" Laughing, Vrall hovered higher, enough so her breasts nudged against his thighs. With a lick of her lips, she pushed her body into him closer, enough so his cock rested between her breasts, and she stayed there, grinning up at him. \"Still aroused?\"\n\n\"I... I...\" He blinked, gulping, panting, and continued to stare at the sight of his length sitting along her sternum. His testicles pressed to her tiny stomach, and when she pushed her shoulders and biceps forward, it pushed her breasts forward, squashing the mounds to his inner thighs and pelvis, and burying much of his length between them. The softness of them molding around his shaft felt heavenly, and relaxing, compared to the extreme stimulus of lips on his glans, and he managed a small, exhausted smile, as he gazed down at the sight.\n\nHer shoulders were moving slightly, and had been before, he only just realized. And looking at her now, he could see why. She was masturbating, one of her claw hands underneath her doing something he couldn't see, but it was obvious now that he was looking. Of course, he was bound to a web, and could only look down, not actually give into his cravings and maybe help her out. Despite himself, despite trying to hold still, he inched his hips forward, and sighed bliss as he felt her breasts fight to keep his body and cock where they were.\n\n\"I will take that as a yes.\" Her shoulder moved faster, and her breasts began to jiggle lightly, ripples working through them and into his pelvis. Her mouth parted, exposing her spider fangs, and quiet, girlish moans mixed into the sounds of the jungle, as she played with herself. He did not know how long she'd been masturbating before, but it must have been a little while, as her body started to move faster rather quickly. She was already on the edge.\n\nOver the edge. She shuddered, made a few hiss-filled groans, and pressed her breasts harder into him, smiling up at him as she trembled. He felt it, felt her quivers through her body, and how they caused her squashed breasts to jiggle and bounce where they were pinned to him.\n\nAfter a few moments, she let out her own long sigh, and hovered upward again until she was eye level with him. One of her claw hands reached down, took his cock, and guided it toward her own sex, a smooth, hairless pelvis that looked basically human, except for the dark metal color. Her sex's lips sat beneath, and she smiled at him as she slid herself in closer, and pressed his glans against the folds.\n\nSoaked. Wet warmth enveloped his cock's tip once again, except this time it wasn't from her mouth. It was soft along her folds, between her thighs, and she eased herself back and forth a couple inches, enough for his cock to slip along the almost dripping lips. Her cum coated him in moments, and he shivered as he struggled to keep from thrusting his hips forward.\n\n\"Fiona wants to be taken, and protected. Beauty and the Beast.\" Nodding her head of horns, Vrall angled her hips back a little to aim her sex more toward him, and began to push toward him. His engorged glans pressed to her hot, clenching slit, and Damien froze again as the soft, hot skin of her insides began to spread around his cock. Soft, but tight. Very, very tight.\n\nWith a hearty chuckle, the creature lowered herself down onto him, inch by inch, and she leaned back as she did. Her hands took his shoulders, and she licked her fangs as slowly but surely, she devoured him, sheathing every inch he had into her depths, until she was pressed snug and firm to his pelvis. She leaned back far enough she was almost horizontal, and he could feel the upward angle of his cock press toward her belly button. And, with how she leaned back, her breasts flattened and spread against her chest.\n\nTight. Extremely tight. He clenched on his jaw and flexed his core as he felt her insides squeeze, and he let out a quick pant or two as she squeezed harder still. He had not expected it to feel like this, not at all. No wonder every man in Dolareido did everything they could, to have sex as often as humanly or inhumanly possible.\n\n\"But I am the Beast this night, and you are bound, helpless.\" She let go of his shoulders, but her many spider legs emerging from her back remained attached to the spider web. They moved with precision, subtle and silent, and he stared at how they adjusted on the web, some reaching out far, others staying close, to keep her snug to his body as she held herself horizontal as if lying on a table, and then down a little further. Leaning back and down as she was, it drove his cock upward toward her belly harder, and he shivered as she clenched again. Hot juices dripped down onto his testicles, mixing with the humidity of the jungle, and he gulped as he looked down to see her tiny slit spread wide and taut around his girth.\n\nThe head of his length was pressing against her depths, and Fi\u2014Vrall moaned as she pushed herself in toward him harder, causing his length to fill her, and for his glans to rub against the furthest reaches within her. Good Lord. The sparks of bliss that her insides sent down the sensitive skin were enough to make him gulp.\n\n\"How does it feel?\" the spider said. Before he could answer, eyes locked onto her spread sex and her extreme hourglass figure, she lifted her two human legs, and set them on his shoulders, the blade-like points coming up past his head and his ears.\n\n\"I... it...\" No words could describe the combination of stimulus. The tightness of her depths, the heat and wetness that combined into a massaging grip that worked every inch of his length, it reignited the sensitivity and bliss her mouth had minutes before.  \n\nShe used her spider legs to ease herself away a few inches, and pull her back in with a soft impact, making the webbing shake, all while keeping her two human-ish legs up and on his shoulders. Back and forth, each stroke a slow motion, and she timed her squeezing muscles with them. Rolling waves of pleasure flowed down through his length, and he found his whole body flexing in surprise at the overwhelming sensation of the friction of her insides on his cock's tip.\n\nThe fact he got to watch her body as she slid back and forth in the air, heavy breasts jiggling up and down on her chest with each thrust, was making it excruciatingly difficult to keep his pleasure under control. And as the almost painful, delicious minutes went by, the spider made it a thousand times harder, as she started to squeeze all the more. Her movements came to a halt, and she kept herself balls deep, as her hands roamed her body. She raised herself a little so she was horizontal again, and she smiled up at him as she squeezed her breasts, causing them to spill over her long, sharp blade-like fingers, as she quivered. Her insides gripped him in random spasms, milking, massaging, leaking her juices onto him until a couple drips fell from his testicles, onto the awaiting dark jungle beneath.\n\n\"It has been so long,\" she said, sighing with long, heavy breaths, each causing her breasts to rise and fall, \"since I have felt another inside me.\" With a quiet chuckle that almost disappeared into the sounds of the jungle, she sat up further and further as she hooked her legs around his hips. Her hands took his shoulders again, and she came in close, doing her best to keep him fully sheathed inside her as she brought her face in to his, and pressed her breasts to his chest. \"These may be firsts for you, Damien, but for Vrall, these are ancient pleasures I once bathed in.\"\n\n\"B... Bathed... in?\" He struggled to breathe. He was on the edge of orgasm, and he could still feel hers, her insides trembling around him, clenching in spurts, and her panting body pressing her breasts tight to his hard chest. Air was unnecessary for a Kindred, but the Blush of Life looked for it anyway, and the few panting sounds he didn't manage to suppress earned smiles from the regal creature sitting on his cock.\n\n\"Memories, faded, buried in time from centuries of sleeping in the nightmare. I was once worshiped by the people of the jungle. They feared the spider, and sacrificed to me. Some did more than worship.\" Sighing, she set her lips to his, but only just, skin grazing along his chin and cheek. So close, his eyes were left looking at the enormous horns that came straight up from her face before curling back; it was almost like a mask, hiding where eyes should have been. \"I enjoyed those nights. I hope you have enjoyed this one.\"\n\nEven as she said it, she nudged her lips into his, and ground her hips forward, rubbing her clitoris into his pelvis as she clenched on him. She'd become so much more eloquent since he first met the monster, as if she was becoming more and more used to Dolareido. Still a bit of that Portuguese-ish accent coming through, making him wonder how much Vrall adapted to her other half's environment.\n\nHis wandering mind came back to the moment as he felt his cum start to build up once again. Trying to think about anything \u2014 and normally he never stopped thinking \u2014 was impossible, as the spider creature clenched her depths on his cock, and began to milk him. The sweet, blissful friction of her slit, dripping around him as its depths massaged his length and glans, was euphoric. No words, no thoughts, only pleasure, as the spider woman started to work herself faster.\n\nHe was helpless to do anything but stand there, arms and legs out, held by the web. It was sort of freeing, not being able to do anything, but he did try to thrust a bit. The webbing was flexible enough that he could drive his hips forward, and the small whimpers he earned from Vrall were intoxicating. It was a sound he'd heard women make before, in his nightly hunts, but never one he'd ever heard from so close, or one he'd helped a girl make. And it felt so very different, when he could hear it from so close, be part of her, indulge in her moans as he thrust into her a little harder.",
        "He came, and slowed down his thrusts. She didn't. As he felt his fluids pour into her, each clench of his muscles spurting thick warmth up through his length, Vrall continued to grind herself against him, squeezing hard enough to make him wince. Orgasm turned his glans sensitive, and her thrusts were almost painful, as she milked every last drop of him into her awaiting body.\n\nShe stopped once she started shivering, and hugged him. Her face disappeared into the nook of his neck, forcing his head to lean over to make room for her horns. The moans and pants the spider monster made were amazing, and he closed his eyes as he relished the feel of her insides squeezing, shivering, and the feel of her heart beating against his chest. The feel of her breasts, massive and overflowing, and the feel of her thighs, squeezing around his hips, was a euphoric mix of softness, and power.\n\n\"Now,\" the spider monster said, turning her head, and then kissing his earlobe, \"I want you, Damien, to understand. I have seen many men who refused to embrace comforts when they came their way, for many reasons. Take it from someone much older and wiser than you, that that is foolhardy. Enjoy what pleasures you can find in this world, vampire. They are few.\"\n\n\"R-Right. I... I think I... can see your point.\"\n\n\"Good.\" With another pleasing sigh, she floated away from him, and hovered about three feet out from his body while her eight spider legs remained attached to the web. She reached down, scooped up between her legs, and traced a line of white up her tiny waist, and then up onto one of her heavy breasts. \"While I do expect you to take Fiona to bed, and fuck her regularly, Damien, I also expect to find you back here in my web frequently as well. Understood?\"\n\n\"Um, understood.\" He was dating two women. How had that thought never occurred to him?\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nEveryone was waiting for her.\n\nSighing, groaning, she got up from crawling through the tiny cave entrance, and stood before the witches of the Circle of the Crone. Jen came up behind her and stood with her. She'd stayed with her, when Triss had decided to not return to the cave after learning about Julias. But this was the next night, and she had to report back. The cave was also the only truly safe place she had anymore, now that she couldn't stay in Julias's bunker. Last night, she'd risked sleeping in a dark little corner in the tomb, and Jen had stuck with her.\n\nStupid girl. Triss was lucky to have her.\n\nOthello and Aaron both approached, but Triss held up a hand, halting them from fifty feet away.\n\n\"Not looking to talk, guys. Besides, you'd suck at it.\"\n\nThat managed to lighten the heavy weight blanketing them all, at least a bit, and the two men smiled a little, nodded, and backed off. Jacob stood by the sacrifice bowl further back, between it and the hundreds of bones that decorated the wall of stone behind him. Dressed in his black robes and white eye bandage, he looked like his usual, imposing self.\n\nExcept, he wasn't smiling his usual jackass smile. He wasn't shifting around like a restless child annoyed with the world for being too slow, like usual. He wasn't in his weird half imposing, half inviting postures, and he wasn't chuckling, or making any sound. All her boss did, was stand there, and look at her. His expression wasn't cold, but it wasn't playful or teasing like usual either. It wasn't anything. It was just there.\n\nShe walked up to him, put her hands on the disgusting sacrificial bowl's edges, and looked at him. Four feet separated them, and the fucker didn't flinch once. Hell, he could have been a statue; not like vampires needed to breathe.\n\n\"You heard?\" she said.\n\n\"I did,\" he said.\n\n\"You know what I'm going to ask for.\"\n\n\"I do.\"\n\n\"... I don't plan to ask, not yet.\"\n\nA small smile broke through on his lips, but it faded just as quickly. \"Smart.\"\n\n\"Black Blood paid me a visit.\"\n\n\"Did he now?\" Not a break in his tone or a flinch in his expression. Either he knew, or expected.\n\n\"It, Jacob. It's an it.\" \n\n\"It identifies as a he, Triss. Don't judge.\"\n\nRolling her eyes, she couldn't stop herself from chuckling at that. God damn it, she didn't want to laugh right now. \"It... he...\" She looked down at the bowl. Empty. Her fingers squeezed on the metal, avoiding the bone of the skulls and whatnot that were part of its shape. Don't break the bowl, the bowl did nothing to you. \"He thinks I should... think... about things.\"\n\n\"Sound advice.\"\n\n\"... can we talk? In private?\" She looked over her shoulder to Jen. \"You ok with that?\"\n\n\"Yeah, it's fine. I'll catch the boys up.\" Jen nodded her head toward Aaron and Othello, and the three of them disappeared into one of the alcoves carved in the cave wall. Some of the ghouls drifting around came with her, following the Ventrue with intent to obey her orders. They were trustworthy, according to Jacob, and Triss had grown used to their presence in the many months she'd spent in the cave.\n\nBut she didn't want them around when talking with Jacob, not about this.\n\nJacob nodded, and the two of them took a side tunnel into a winding path. Eventually they came to his room, though Triss knew he slept elsewhere. She couldn't blame him. Elders had earned their paranoia, surviving for centuries by trusting no one, not even their closest servants. After last night, she thought about asking him for tips. If nightmares were going to haunt her daily torpor for the rest of her life, the least she could do for herself was ensure she did it someplace safe.\n\nJacob pulled the hanging fur aside, and the two of them sat down on the floor on his many furs. She didn't visit his room very much, not since the hunters had made an appearance. If she had to stay someplace for the day, someplace safe, her and Jen could just stay at Julias's. But that was the past, and she had to adapt. Don't think about Julias, think about the future. Think about revenge.\n\nShe looked around the walls of Jacob's alcove. There were bones on the walls, hanging masks, and furs from animals she didn't know. She'd described one of the masks to Jack once, and he assured her it was from a video game. Apparently, a playful imp stole it from a merchant who had a bunch of masks, and put it on. Unknown to the imp, the mask was possessed with some sort of evil god or entity thing, and it took over the imp to use him as a conduit for destruction.\n\nShe told him no fucking way it was from a video game. The fuck would Jacob be doing with a fucking cosplay prop? Surely everything in the room was authentic. The bones, the voodoo bags, the carvings, it made the room look like some sort of occult shop, and there was no way the five-hundred-year-old vampire would stand for anything less than authentic. She hoped. It was Jacob, and he was a joker, a trickster, and an all-around maniac. Maybe it was all silly fake shit?\n\n\"Black Blood visited you?\" he said.\n\n\"Yeah. He... he wanted to present... options.\"\n\nJacob reached up, grabbed one of the masks, and put it on. Holding it by the chin, he kept it against his face, and started talking in a Southern accent.\n\n\"You sure you want to make deals with the devil, pretty lady?\" The mask was solid black, covered in bark or something, and she had to admit, if Black Blood ever needed to wear a mask, it'd be a pretty good option.\n\nShe slapped the mask off his face and out of his hand. \"Not in the mood for laughing, Jacob.\"\n\n\"Then it's the perfect time for laughter, isn't it?\" He put the mask back, sighed, and looked at her. With his knees apart, legs crossed, he almost looked like he was meditating, considering he was wearing a robe. \"Black Blood is free to do what he wants, and if he came to you, he sees an opportunity. Plus, he's going to be drawn to you.\"\n\n\"Drawn?\"\n\n\"Black Blood is old, older than me. He's absorbed the disgusting waves of murder and death in Dolareido, since long before the Prince and I showed up.\"\n\n\"So... he's a murder spirit?\"\n\nThe Nosferatu shook his head. \"Spirits are everywhere, and they've been fucking with shit for as long as Earth has existed, Beatrice. They've shaped our side of the curtain, and we've shaped theirs. If they live long enough, they get big, and complicated, and weird. Black Blood may have been a murder spirit at some point, but he's absorbed things, merged with things, eaten things, and... he is Dolareido.\"\n\nShe frowned. Ok, either Jacob didn't really understand the nature of his friend, or he did, and Triss was struggling to grasp the sheer scope of Jacob's explanation.\n\n\"Ok, assuming Black Blood, this grotesque monstrosity that's been helping you help me learn Cr\u00faac, really is the spirit incarnation of our city, that means our city is based on murder?\"\n\nJacob laughed as he nodded, and he reached over to grab one of his books, one of the creepy ones she was half sure was bound in human skin. \"Probably crawled up out of the ground as a spirit of death, not murder, and the area was ripe with death. Maybe some sort of clan war? Maybe the natives fought off invaders. Something happened here, before the Colonial period.\" After flipping through a few pages, he motioned for her to come sit next to him. She did, putting her back to the wall and knees up to her chest, with only a couple inches between them so she could look at the book.\n\nSomeone had drawn stones, a big circle of stones. And they'd drawn bones, lots, and lots, and lots of bones. The stones weren't natural, but carved, big and square and sticking out of the ground. Skeletons were tied to them. Remnants of clothes were drawn, but the artist wasn't the best; shitty parchment and a drawing that must have been six hundred years old didn't make for accurate depictions. But she could feel the death coming off the page just by looking at it.\n\n\"Where'd you get this?\"\n\n\"Early colonials traded for information about this place. A flood must have come through or something, destroyed the site, but the natives remembered it; probably told ghost stories about it. The natives tried to warn the colonials off. They didn't listen.\" Triss hadn't signed up for story time, but she knew better than to interrupt Jacob. And besides, it was relevant, if she was going to do business with the devil. \"So the colonials started up a tiny village. Lot of convicts sent from across the drink. Far as I can find out, once they got the homes built, people started getting underhanded. Murdering each other for resources, for pussy, for whatever. Must have been at each other's throats for two or three hundred years, lying, stealing, killing. Black Blood was there for that, so he tells me, when he was nothing more than a tiny, creeping ink stain, looking to hide from hungry spirits on the other side. He seeped into the cracks in the Earth, into the walls of their homes, and he watched, and... partook.\n\n\"That's when the Prince and I showed up with the Sheriff, and Viktor. We took over, and turned that shitty little village into the utopia you live in today. Black Blood was there, watching, absorbing, learning.\"\n\n\"Spirits can do that?\"\n\n\"When they get as old and intricate as him, yeah, apparently they can. He's part death, part shadow, part environment, part... so many things.\"\n\nShe frowned at Jacob, and shook her head. \"How can Dolareido and this thing be so intertwined, if Black Blood is a death... shadow... spirit thing?\"\n\n\"He's not. The fuck did I just say? He's grown well beyond that. All the dark, twisted, weird, sexual, loving, deadly parts of Dolareido, Black Blood has absorbed in some way. Simon called him a Magath, whatever that is.\"\n\n\"Simon, right, the Uratha Avery used to go with.\"\n\n\"Fuck those dogs.\" Jacob ground his teeth, and flipped to the next page. It was written in some language she didn't recognize, so no reading. The pictures were good enough, and this page had a picture of some woods, with some skeletons tied to them as well. Christ, Dolareido might as well have been built on unholy ground or something. If she went digging outside in the canyon, she'd probably find legions of dead.\n\n\"I wanted to talk about Black Blood, and Cr\u00faac, and... and...\"\n\n\"My attempts to resurrect Minerva.\"\n\nShe froze, and slowly moved her eyes from the page of the old book, to the Nosferatu elder sitting next to her. As if he hadn't said anything, he flipped the book to the next page. A cliff, overlooking the ocean. Nowhere near Dolareido then. Whoever this traveler was, they must have been important, for Jacob to want their book. Maybe they'd been a vampire.\n\n\"So you did try.\"\n\n\"I did. Even learned how.\" He flipped the page. Woods, and some tipis sitting about, with people sleeping around them. No, wait, not sleeping, dead. Fucking horrible. \"I expect you'll want to jump for joy, knowing that.\"\n\n\"Minerva's still dead, so... whatever it is, I can't believe I could do it if you couldn't.\" She wanted to believe, fuck did she want to believe, but she wasn't stupid. \"Black Blood says I should wait a couple weeks, so I can calm down before I do anything stupid.\"\n\n\"Good advice.\" The next page. Some very spooky trees, with a few owls perched on the branches. Dark, shadowy owls. \"And if you're looking for me to tell you how to resurrect Mire, I\u2014\"\n\n\"Don't... please don't say no. Please?\" She collapsed back against the wall, head falling forward to dangle. \"I'll wait. Two weeks or something, before I ask. Ok? Please.\" She couldn't keep the begging sound out of her voice. It made her sound pathetic, and she didn't care. If Jacob decided to tease her, rub her misery in her face, that was fine, she didn't care. All that mattered was\u2014\n\n\"Beatrice, look at me.\"\n\nShe froze, again, before slowly lifting her head enough. As she did, Jacob raised a hand, and pulled his bandage down around his neck. Eye contact. The man's empty eye sockets stared straight at her, and she did her best to meet them. She had snake eyes, but Jacob's lack of eyes was a thousand times scarier, especially considering his eyelids looked like they'd been removed by a serrated spoon.\n\nHe looked sad. The ancient, deadly vampire, looked sad. It hit her in the stomach, and a harsh sob worked up through her before she could stop it. The following sobs were quieter, and she managed to keep them from exploding out of her; doubtless they'd have summoned Jen if she let them out at full volume. No, enough crying. But meeting the old man's face, and how his fucked up deformity didn't stop him from showing some real, genuine emotion, was just too fucking hard to deal with. Her gaze fell back to the floor.\n\n\"I hate this,\" she said. \"This... this wasn't... wasn't supposed to happen.\"\n\nJacob turned back to the book, closed it, and kept his scary gaze on its dark, stained cover. \"It never is. And unlike those fuckers out there, or everyone else, none of those assholes know what it's like, to have love taken from you like that. I know. I know what it's like to find someone who connects with you, emotionally, physically, and intellectually. I know what it's like as a Nos, to... fuck, I'm just wasting my breath, aren't I?\" He laughed, quiet and heavy, and shook his head. \"My words can't\u2014\"\n\n\"No... no, tell me. I want to know.\" She sniffed, and pulled her knees up to her chest tighter so she could hug them. \"You're right. How many of them know what it's like, to be a Nos, find love, and then have their love fucking killed? Murdered? It... it...\" She squeezed her legs harder. \"It's burning me up. It's in my bones. It's in my fucking chest, and I want to reach inside and tear it out, and I can't. I can feel myself ready to frenzy, even though I've fed. I ca... ca... can't handle this, Jacob. I can't! I can't I\u2014\"\n\nTouch stopped her cold. Jacob set his hand on her shoulder, but still looking down. Maybe he caught on that she couldn't handle looking him in the eyes right now, not when he looked sad as well.\n\n\"Minerva was... something like Julias. She looked for the best in people, without being naive. And, she wasn't afraid of me. Well, maybe a little afraid, but she didn't let it stop her. We grew to know each other because of her courage and insistence. She was... intelligent, far more intelligent than she had any right to be. The Prince and I both included her in our more specific experiments, as we both tested the waters of the spirit world.\"\n\nOh, wow, real knowledge about Minerva. Holy shit.\n\n\"You and the Prince?\"\n\n\"You think Annie and I are enemies?\"\n\n\"It... does seem that way, a little.\"\n\nJacob laughed. \"I guess it does. But, we both have an... academic interest, in the Shadow Realm. So did Minerva. I let her in on a few secrets, so did Antoinette, and before we knew it, she was performing her own experiments. She learned about Black Blood, and other spirits. She became convinced that... that things could change.\"\n\n\"Things?\"\n\n\"This.\" He gestured around him, to the wall covered in bones and masks, to the shelves carved into the stone that held dolls and small bags filled with only god knew what, and several books as old as dirt. \"Other things, too. Vampires, sucking on veins, fighting each other over sheep. Werewolves, slaughtering spirits or the possessed. Monsters, bound to their hungers no vampire could hope to understand. She thought she could change the world, find missing pieces of the puzzle, fix things. Spirits, ghosts, dreams, death, life, the afterlife? She dug deep into learning all she could about those things, and tried hard to find ways to bridge the gaps between them.\"\n\nBeatrice gulped. \"I never thought of it like that, that it's all... separate. She wanted to bring it together? How?\" It sounded too crazy to be real, but at the moment, crazy was better than reality.\n\nWith a dark chuckle, Jacob nodded, and licked his teeth. \"I'll show you.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "monster",
        "monster girl",
        "monster sex",
        "paranormal romance",
        "romance",
        "slow",
        "vampire",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-06-ch-17"
}