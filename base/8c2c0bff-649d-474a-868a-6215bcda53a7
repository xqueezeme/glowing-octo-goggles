{
    "title": "Lost Empire Ch. 63",
    "pages": [
        "0001 - Tempro \n\n0003 - Conner- Thomas \n\n0097 - Ace - Zimmel \n\n0098 - Lucy \n\n0101 - Shelby (mother ship)\n\n0125 - Lars \n\n0200 - Ellen \n\n0301 - Rodrick \n\n0403 - Johnathon \n\n0667 - Marco - Brown \n\n0778 - Jan \n\n0798 - Celeste - Shelby (human) \n\n0908 - Tara - Mara\n\n-------------\n\nUngrown - unnumbered\n\n------------\n\n4 - onboard Shelby 0805, 0808 in re-gen,\n\n1000 - Sherry 0250 Tendra 0999 - Zan - still lost\n\n----------------\n\nKnown and OR numbered\n\n----------------\n\n0501 - Thaddeus???? - Lena\n\n-----------------------------------------------\n\nOn the far side of the clearing that housed where Duke Risen was hiding, a commotion was rising. Trent Hartwell had held his anger for as long as possible, now it was to the boiling point.\n\n\"I don't give a shit!\" Trent was growling into the communicator. \"Get that heavy artillery here now! This may be the only chance we have to kill this bastard!\" Turning to his nephew he almost shouted, \"can you believe those bastards? They want to wait 'til the weather is better. If they don't move now we might lose him, again!\"\n\n\"Uncle Trent,\" William said laying a hand on his Uncle's shoulder. \"Please remember your heart isn't that well now.\"\n\n\"As if I give a shit! After having my brother and sister in law killed. Plus, my niece was left behind in his palace when it crumbled. Your brother killed in action during the Republic wars, something I am sure that that ass had a hand in. I don't really care if I die as long as I can take that piece of garbage to hell with me!\" Trent Hartwell shouted his face growing more crimson by the moment.\n\nWilliam was starting to grow worried as he'd not seen his uncle this upset in a long time. \"Don't worry uncle, if you don't kill him I most certainly will!\" William's face twisted into a mask of hatred.\n\nTrent Hartwell was suddenly shocked at seeing the intense emotions. \"We'll get him you mark my words we will. In the mean time you think you can help me get them to bring everything up? If we can flatten this place, we more than likely kill him also.\"\n\nWilliam was nodding as he opened his own communicator. Moments later he was as loud if not louder than his uncle had been.\n\nTrent was now starting to smile, if anyone could get them off their asses it was William. William walked up a moment later. \"Well it wasn't easy to convince them. They're on the way now, I just hope it's enough to kill him.\"\n\n\"Ha!\" Trent let out a little louder than he intended. \"As much firepower as we have lifted from the Duke, it damn well better be!\"\n\nWilliam nodded as he stepped outside to await the arms. It had better be he thought they were putting most of what they had into this operation.\n\nWithin the small building Risen was still pacing. Looking over the readings he saw that there were still eight of those be behemoth, monstrosities in orbit around his planet. When had he lost control of everything? Searching through his mind there had to be a way that he could turn things around. He could always call the Cregons again.\n\nRisen thought about it, the Cregons had only lost a few thousand ships, really nothing to them. Then again if they won this time not many would be safe. If he did call them he might have to word it VERY carefully.\n\nThen again, he thought the Delcrons had no such aspirations as Cregons or the Tendrax. He'd really thought the Tendrax would have seriously depleted the fleet. Well live and learn he thought.\n\nThen again, he thought he had enough problems with the homicidal new leader of the Taiolan sect. He almost regretted calling on them. Though now that they were here he felt a hell of a lot safer than he had before.\n\nHe'd just walked over to the leader when several alarms went off. The leader's raspy voice could be heard, \"What are you detecting?\"\n\n\"It appears to be a group of raggedly dressed men sir.\" The tech told the scarred faced and body man standing next to him. \"They are on the opposite side of the clearing. None of them have made an any attempt to get any closer.\"\n\nThe leader nodded, \"Keep an eye on them let me know if they become a threat.\"\n\nThe tech nodded mumbling something then was silent. Inside the tech released the breath he'd been holding, it wouldn't have taken much for the man to kill him. He for damn sure knew that there would have been no way he could have stopped him.\n\nThe leader looked up to see Risen standing nearby. \"Friends of yours,\" he asked.\n\nLooking closer Risen couldn't really make out anybody. \"No, more than likely it's the rebels that were in the area. Just rabble trash that my men were trying to put down. They knew this area far better, so we were still at it when all hell broke loose.\"\n\nThe leader was nodding as he evaluated the situation. \"We'll keep an eye on them to ensure no interference.\" Pointing to one of his males he came over to the leader. Leaning in the leader whispered into the male's ear. Nodding affirmative the male then left out of the door. Smiling the leader thought now we'll see what is going on.\n\n_________________________________________________\n\nDerrick was checking on all the ships as he was getting dressed. Growling at the Ranger males who were helping him, Derrick wasn't that comfortable with all this frump and fluff. Christ it almost felt as if he was wearing a dress the way the silly thing puffed out.\n\n\"Sire if you don't hold still we won't be able to dress you!\" One of the males told him.\n\nAnnoyed to the extreme Derrick balled up a fist smashing it into the male's face. The male bounced across the floor a few feet as a blood red faced Derrick stood over him. \"I am not a weak woman, child or one of the infirmed that needs pampering. I most certainly DO NOT need help getting dressed. As the universe is my witness this will be the absolute last time I will appear in public like this.\"\n\nAll the males there were suddenly biting their lips. They had heard the Empress declare something altogether different only a few hours ago. They all held their tongues no need getting the Emperor even more upset than he was.\n\nShaking his head Derrick again linked to Shelby. {How are you Shelby?}\n\n{Much better Derrick. Both Lucy and I now have seventy five percent of our trans-warp. I am afraid that Lucy's wing mate is only at fifty percent. The new procedure that the Empress discovered has helped greatly. It appears that the greater the emotion the faster the ripalon particles are expelled.} Shelby's thoughts conveyed to him.\n\n{We are still analyzing the last data that Zan took. If they are as accurate as we think they are we may still have a problem. Zan stated that he had detected not thousands. He'd detected tens of thousands. He took perhaps a hundred or more at the front when he launched.} Derrick told her.\n\n{What of those brain boxes that are still out there?} Shelby asked a tinge of hope in her voice.\n\n{I intend to get all of them that we can. For that we're going to have to rely on Lucie a hell of a lot more. I just hope that she is up for it. I don't want to miss a single one, I can sympathize with them. Though for me the emptiness of space was calming to me. Especially with what was in my head.} Derrick told Shelby even as she shuddered remembering the creature that had been a part of Derrick.\n\n{Oh, I want to let you know. I have identified all three cases, 0805 and 0808 are in re-gen. I hope to have them ready within ten days. I am glad you discovered the flaw in the re-gen matrix with less time than this Derrick.} A grateful Shelby told him.\n\nDerrick issued a sigh before he continued. {Please Shelby, I am still feeling bad about that. I felt I put so many in danger. I let my anxious fear rule instead of my head. I just hope that they can forgive me.}\n\n{Derrick!} Shelby's thoughts said causing Derrick's head to snap up. {They were proud that you had them ready sooner. They all would gladly do it again for a chance to serve you. Please never think otherwise.}\n\nDerrick nodded his head, {I will try Shelby.}\n\n_______________________________________________________\n\nOn board Ace, Lucie was just starting to wake up. Moaning when she tried to sit up she immediately fell back to the bio-bed. \"Oh god!\" She said looking around then she spotted Zimmel. Lucie moaned louder causing Zimmel be at her bed side in a moment. \"God! What in the world hit me?\" She asked, everything seeming fuzzy in her mind. \"I remember Zan had...\" Here fresh tears started.\n\n\"It's alright we'll get him back. With the new locator signal the Emperor installed on him it shouldn't be that hard.\" A barely smiling Zimmel told her.\n\nAce appeared a moment later checking all her readings. \"I can find no physical damage to you Prime Lucie. Though I do believe that under the circumstances that put you here, you should remain for a few hours longer.\"\n\nLucie took a deep breath then winced as her head throbbed slightly. \"Ugh! I think that's a good idea also Ace.\"\n\nAce looked at Zimmel then shook his head. \"How gratifying to have a patient that actually wants to get better.\" Zimmel stared at Ace incredulously. \"I have read the reports about several of the command members. About their apparent hatred of the bio-beds. The Emperor in particular has a great mistrust of them.\"\n\nZimmel was about to go on when a smirking Derrick's holo-gram appeared. \"Not a hatred of the bio-bed as much as being inactive for so long. The command members and I were soldiers for a long time. To us being idle for too long, was like laying down awaiting the enemy to come and kill us. Even when there were no enemies we tried to keep on the move.\" Derrick suddenly turned his head, \"stop that! I will knock every one of you out if you continue.\"\n\nZimmel was doing his best not to laugh though the scene was extremely comical to him. Derrick whirled when he heard the stifled noise from Zimmel. Derrick's eyes narrowed as he looked straight at Zimmel, \"I could make it an order that ALL of the Captains and command crew dress up as I have for the marriage.\"\n\nZimmel's face twisted into a grimace as he stared at Derrick who now had a large smile on his face. Suddenly the holo-gram images of Hartwell, Thomas, Rayburn and Kimison appeared. \"You wouldn't dare... Sire.\" Hartwell added as spit out his words.\n\nA now almost truly wicked smile lit up Derrick's features, \"try me! Especially you!\" Derrick said pointing directly at Hartwell. The man swallowed hard, 'Best shut the hell up,' he thought. Instead Hartwell just nodded to Derrick. \"I only have about two hours left, I need a report from all of you.\"\n\nTaking a relieved breath Hartwell looked at Thomas. \"As of yet we have no confirmation, though we have picked up increased activity in one of the two suspected areas. We've also picked up a modulating shield. It is comparable to our own shields. We've been looking for a way in, as of yet nothing's been found.\n\nDerrick nodded then turned toward Kimison and Rayburn. Rayburn nodded to Kimison who started, \"We are still working on the father ship. After hearing that you had discovered what possibly could be a huge amount of brain boxes, we thought it to be the most prudent project.\"\n\nWhen Derrick nodded with a slight smile on his face Kimison continued.\n\n\"We have also been working on the problem of the ripalon energy. It was as you and the Empress suspected. Strong positive emotions have a powerful and vigorous force against it. Upon further investigation we discovered that the energy seemed to be almost the same wave length. Kimison stated.\n\nDerrick was quiet a moment as he digested this. \"Excellent and the father box?\" He asked.\n\nHere both men took a deep breath as their faces fell. \"As of yet we are still having trouble integrating the memories into the main frame of the box's systems. Looking at the matrix that the other ships have helped greatly. The problem is though the matrixes are almost identical, the section that holds the personality is entirely different. It's like the human...\" here Rayburn stopped cold as his eyes opened wide. Derrick was starting to nod, \"the brain! Oh my god!\"\n\nKimison was staring at Rayburn when his eyes also opened wide. \"Of course! Could it be that simple?\" Rayburn was nodding vigorously.\n\n\"Sorry sire, have to go!\" Both men said then winked out.\n\nDerrick chuckled so like the both of them when they were truly on to something. Derrick was about to say so when Mary appeared bowing low. \"There isn't much time Sire.\"\n\nDerrick nodded, \"This will be broadcast to all. I just hope nothing comes up while we are doing this.\"\n\nHartwell hoped as well, they needed a break for once though knowing their luck that wasn't about to happen.\n\nAlmost an hour later Derrick was standing in a now somewhat converted and crowded throne room. Derrick was standing with the head of the religious order on the Imperial planet. What in the hell was going on he thought he was shaking like a leaf! This was Shelby for god's sake! Derrick thought that 'til a few moments later Shelby appeared wearing a pure white lacy wedding dress. The train had to be at least thirty feet! The front was low cut as was the back, revealing Shelby's perfect skin. A veil hid Shelby's face for the moment.\n\nDerrick was breathing hard; what in the hell was wrong with him? Christ if he didn't know better it felt almost like he was having a coronary! Hartwell had to slightly nudge Derrick to get him to close his almost gasping mouth. \"I...I...I\" was all Derrick could say when Hartwell leaned over to him.\n\n\"Yeah, I agree.\" A stunned Hartwell said, then he noticed that all the people in the huge, filled room were silent also.\n\nFinally, Shelby made her way to Derrick. Her own nerves were on edge also. She'd almost fainted when she stepped out seeing Derrick's over six-foot frame adorned as the Emperor he was.\n\nThe both of them shaking still, Derrick was barely able to lift the veil. As he lifted it with Shelby's face coming into view, Derrick thought she is more stunning the more I reveal.\n\nBoth knelt as the religious leader indicated. Then finally he spoke. \"We are here today to join the Emperor of the realm to the Empress Shelby. Do you understand that you will not only be the companion of the Emperor? You will be the well spring from which the next generation springs from. Though not ruling by blood you will rule. You will become the mother Empress of the realm. Do you accept all these things before we start?\"\n\n\"I do accept all these things and more.\" A trembling lipped Shelby stated.\n\nThe religious leader nodded pleased at the answer. Turning to Derrick he stated. \"Do you Emperor Derrick, take your Empress to be your mate, your life companion, the mother to your children and the realm. The other half of the realm for you when needed. To protect her as you do the realm?\"\n\nDerrick could only stare at the religious leader. Try as hard as he could he couldn't seem to get a damn word out.\n\nHartwell who was also almost struck numb, noticed that Derrick was still quiet after the religious leader finished. Leaning over again he whispered in Derrick's ear. \"I think that's your que Commander.\"\n\nDerrick snapped out of his shock as he looked at Shelby then back to the religious leader. Bowing his head Derrick stated, \"I will do all this and more. To the absolute best that I am.\"\n\nThe religious leader nodded a wide smile on his face. Turning to Shelby he started again. \"Having accepted the conditions that are before we started, I now ask. Do you Empress Shelby take Emperor Derrick to be your mate, your life companion, the father of your children and the realm. The first half of the realm in all things your ruler and sovereign. Yours to protect and be protected.\"\n\nShelby looked straight at Derrick then she bowed her head. \"I will as I pledge myself to him and the realm.\"\n\nThe religious leader nodded an even bigger smile on his face. He then stepped back as Mary appeared.\n\nLooking at the bowing Shelby she stated. \"To the citizens of the Empire, I am Mary the law holder and palace security AI. I was empowered by the very first Emperor Angelius (Gregor) with the power to crown she who the present Emperor deems worthy. She who has the codes and commands the Emperor's heart. The woman before me is of the people an Empress capable of many great things. She is the first in over two hundred years to display all that the Empire requires. Empress? Are you ready to assume the duties as ruler and protector of Empire, and do you at this time acknowledge that you rule for the people?\" Mary stated in an official voice.\n\nShelby her head still bowed low spoke, \"I do with all of my heart and being.\"\n\nMary nodded waving her hand as a pair of robotic arms appeared with a sword and crown. Mary stated, \"By the power invested in me by the mandates written by the first emperor,\" here she touched each shoulder with the sword. \"I dub you Empress Shelby O'Toma, wife and Empress to Emperor Derrick O'Toma the first.\"\n\nHere Mary turned to Derrick who looked up at her nodding.\n\nMary nodded back then stated, \"Please arise Empress Shelby O'Toma and receive the crown of the empire.\" With a slight smile Mary lowered the crown via another set of mechanical arms upon Shelby's head. \"Please be seated Empress,\" Mary advised her as she turned toward all that were watching. \"It is done! Long live the Empress, long live the Empire!\"\n\nDerrick stood bowing low to Shelby taking her hand kissing it softly. \"Long live my Empress!\"\n\nTurning he looked out over the assembled crowd as he spotted his Mother and Grandmother with tears in their eyes. Suddenly all there started to shout, \"Long live the Empress and Emperor! Long live the Empire!\"\n\nShelby blushed deeply as she stared at Derrick with a look of absolute love. Derrick had made a lot of sacrifices for her and this wedding. She could almost feel the love that seemed to be oozing out of him for her. Finally, she thought he loves me almost as much as I do him!\n\nDerrick stood as soon as the many people there started to cheer. Holding up his hands to quiet the crowd he turned back toward the relieved religious leader. \"Thank you sire.\" He stated. \"To all assembled. All pledges and oaths given before god and all of you I pronounce then united. Please Sire, Mistress turn to face all here. I present to you, Emperor Derrick O'Toma, Empress Shelby O'Toma.\"\n\nAn even greater amount of shouting started as they both moved away from the religious leader. 'Damn,' Derrick thought, 'we only have one throne, we need to do something about that.' Even as he thought it he heard a gasp as he stopped turning to see another throne seat appear next to the first. Mary was standing there a great smile on her face nodding.\n\nDerrick sighed then returned her nod as he and Shelby made their way to the grand dining room.\n\n____________________________________________________\n\nDeep out in space a voice cried out, 'where in the world was she?' It was pitch black though not unaccustomed to it, it was a bit disconcerting. The fact that she could hardly move and there was no sound didn't help either. What in the hell had happened? The last thing she remembered she was working on the escape capsule when it locked down on her then jettisoned. 'Oh gods,' she thought! 'She was adrift in space! Something major must have happened to the fleet for the autos to come up this fast.'\n\nFeeling around she found and activated the emergency locator beacon. Sighing she realized that if there had been a major disaster as she thought, then there may not be any coming after. Well not before she expired. Calmly she started recording what she felt would be the last days of her life. She was about to speak when she thought she heard a voice. What the hell?\n\nListening harder she was shocked when she realized that the voice was in her head. \"Uh... yes I can hear you. What!? you're near? Can you, you have no body? What are you talking about? Me? I'm in a life capsule. From where? The Tendraxian fleet. Hello? Where did you go?\" The females voice stated feeling herself suddenly all alone.",
        "This was worse, as the time started to pass. First, she was alone, isolated, then she hears a voice almost warm, inviting. Then just as suddenly it was snatched away. Shaking her head, the little that she could, she was beginning to think that she was starting to experience the space madness. Laughing a moment, she thought of the irony of it. She survives an obvious catastrophe only to go mad within the very thing that was designed to keep her alive.\n\n____________________________________________________________________\n\nLucie was finally out of the bio-bed though she'd actually wanted to stay there a bit longer. She'd watched the wedding of the Emperor and the Empress practically drooling over the beautiful wedding dress the Empress had worn. 'Christ,' she thought, 'if she was only half as beautiful.' She was released just after the wedding ended.\n\nLucie was making her way to the quarters she'd been given. She'd just passed Zimmel when she suddenly went stock still. Alarmed he called out for Ace who suddenly appeared. \"What in the hell is going on?\"\n\nAce looked at her on each side then several lights passed over her. \"She appears to be in conversation with a ship. I therefore cannot interfere 'til such time as she contacts me or vocally calls me.\"\n\nZimmel was nodding though not really liking it. He'd seen Lucie like this before, so he knew there wasn't a damn thing he could do 'til she was done.\n\nLucie stood there listening to the ship nodding once in a while still in as trance like state. Almost five minutes later Lucie snapped out of the trance as tears started to fall from her eyes. Turning she looked straight at Zimmel then turned to Ace.\n\n\"I have to talk to the Emperor.\" She stated.\n\n\"I am afraid that isn't...\" Ace started.\n\n\"NOW!\" Lucie almost shouted startling both Zimmel and Ace. Taking a deep breath Ace nodded.\n\nDerrick had just taken a bite of wedding cake when his wrist com. went off. A worried look came over his features, this had to be pretty important if they were calling right now. \"What's wrong Ace?\" Derrick said as soon as he saw the worried look on the A.I.'s face.\n\n\"It's Prime Lucie she...\" Ace started.\n\n\"Out of the way!\" He heard Lucie say as her face came into the picture. \"I'm sorry sire this is an emergency!\"\n\n\"Of course,\" Derrick said even more worried as Shelby steered to a more secluded spot. \"What's wrong?\"\n\n\"One of the boxes contacted me. There is a survivor of the Tendrax fleet, she's alone adrift in a tight life capsule.\" Lucie told him.\n\n\"How is this an emergency?\" Derrick asked slightly irritated.\n\n\"Sire,\" Lucie said dropping her voice. \"She heard the same box!\"\n\nA look of shock and surprise came to his and Shelby's faces. \"Hang on.\" Derrick tuned his comp a moment then said. \"Admiral, I need you to retrieve your sister. It appears we have a survivor of the Tendrax fleet.\" \n\n\"Ok, so what's the big deal?\" Hartwell said.\n\n\"She can hear one of the boxes.\" Derrick stated. Hartwell suddenly stopped nodding his head.\n\n\"On my way.\" Hartwell said then clicked off.\n\n\"Your brother should be there in a moment.\" Derrick replied to Lucie.\n\nLucie with tears in her eyes thanked Derrick even as Johnathon appeared near Ace. A moment later she was onboard Johnathon then they were almost immediately in trans warp.\n\n\"I'm taking us to where Zan set off the thermic missiles.\" Hartwell told his sister. A minute later they exited the portal as Lucie stared straight ahead.\n\n\"She is far away straight ahead. No wait! She's off to the side quite a bit.\" Lucie said as she turned to the right side.\n\nHartwell nodded as Johnathon winked out appearing outside the huge debris. Both Hartwell and Johnathon waited as Lucie stared straight ahead. \"That way,\" she pointed slightly to the right. Moving off they were starting to get further and further from the debris field.\n\nJohnathon suddenly spoke up. \"Admiral prime, I am detecting a weak beacon signal. I am also detecting metal of the sort that our brain boxes are made of.\"\n\n\"Yes! \"I can feel her more. We're very close.\" They moved forward another few thousand kilometers when Johnathon stopped.\n\n\"I believe I have found them, identity confirmed. Now starting scans of both. I am afraid this will take almost three hours.\" Johnathon told them.\n\n\"We have to hurry!\" Lucie stated. \"She has connected to the life pod though it appears that the power is starting to fail in both.\n\nHartwell sighed there wasn't much he could do, even as important as this was he couldn't hurry. \"We'll just have to hope that the both of them can hold on. Without these tests we'd be flying blind you yourself know that. Not much good to be a rescuer if the one you're rescuing kills you without knowing it.\" Turning to Johnathon he asked. \"Anything we can do to delay power failure?\"\n\n\"Possibly though I am afraid it will just help.\" With that a bolt of energy hit both the capsule and the box that was attached. \"I'm afraid that's the only time I can do that anymore could possibly overload the both of them.\"\n\nHartwell watched at the four sets of clearing went on. It was excruciatingly slow as he and Lucie watched the energy start to drop. At two and a half hours they saw that the capsule was about to be critical.\n\nLucie was pacing the entire time as the energy sunk lower and lower. \"Damn it, Johnnie! She's going to suffocate in there we have to do something!\"\n\nHartwell could only shake his head no as another fifteen minutes crawled by. This last clearing had to be done knowing the propensity of the Tendrax to set traps as they did.\n\nFinally, several chimes went off as Hartwell ordered, \"get them on board. Get that damn capsule open, prepare the med-bay.\"\n\n\"Compliance Admiral prime.\" Johnathon stated. A moment later an alarm went off. \"Prime I am unable to get it open. Warning. Warning! I am reading failing life signs!\n\nHartwell and Lucie were both suddenly standing in front of the capsule. Lucie was screaming for her brother to do something. Hartwell grabbed the nearest metal rod smashing it into the seal. Yelling at Johnathon to keep trying to open the capsule, Hartwell was about to start smashing at the seal again when there was a pneumatic hiss.\n\nAs the case slid open Hartwell could only stare at what was inside. The female inside was not breathing as Hartwell couldn't seem to find his voice. She was slightly petite with ashen white hair plus she was stark naked!\n\nPushing her brother out of the way Lucie started to yell at Johnathon to transport the female to the med-bay. Hartwell still in shock sat with a thump as his sister shook her head with a smirk."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence",
        "fantasy"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-63"
}