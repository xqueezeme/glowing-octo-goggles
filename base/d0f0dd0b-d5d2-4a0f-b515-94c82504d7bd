{
    "title": "The Twelve Vitali Ch. 05",
    "pages": [
        "Authors note: Hello everyone. This story is a spinoff of the Twelve Tables series I wrote a while ago. I hope you enjoy this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\nThe Twelve Vitalis\n\nChapter 5\n\nCat woke up and stretched. The bed was luxurious, and she hated the thought of getting up and starting her day for the briefest of moments. Then she remembered why she was here in the first place, as well as the fact that Matteo was sleeping on the couch in the other room while all of his clothes were in here with her. She rolled over and twisted up into a sitting position, placing her feet on the floor. She rolled her neck on her shoulders, working out the kinks of a restless night sleep and looked at the closed bedroom door. She had to stop thinking about Mr-tall-dark-and-handsome, Matteo. Despite the unusual proposal he had presented her with last night, this was her time to do something for herself, and she needed a clear head for her meeting with Lucia and Peri Donati today.\n\nHunger and the need for a bathroom drove her from the bedroom, and she padded through the apartment toward the bathroom, trying to be quiet in case Matteo was still asleep. She didn't think he would have left already, particularly as his clothes had been unpacked and hung in the bedroom wardrobe. She'd found them last night as she had explored the room. Five perfectly tailored suits hung with two shirts for each in the wardrobe. They were different in colour, as well as style, and she had fingered the expensive tailored material as she had explored the room last night. He seemed to have packed no casual wear at all, which only made her wonder about him even more. Was he an all work and no play type of man? She ran her fingers through her hair after washing her hands, trying to tame its wildness, and went out to the kitchen wondering what she could make for breakfast. Her mind went through an inventory of what she could remember of the refrigerator from the day before. If nothing else she would make toast with the bread she had seen on the bench.\n\n\"Good morning,\" Matteo greeted her from the small kitchen bench where he stood sipping coffee. \"I just made a fresh pot, would you like some?\" He offered, as he took in her sleep-tousled hair that she had obviously combed with her fingers rather than a brush, the soft pyjama top that did nothing to hide her braless state beneath it and the matching feminine boxer short shorts she wore exposing her long slim legs.\n\n\"Yes, please, with milk, no sugar,\" she nodded but slowed her walk as she saw the look in his eyes and the way they roamed over her. She became self-conscious of the way she was dressed and wished she had have taken the time to get dressed or had bought a robe when she had gone shopping for this trip. Not that she would trade in her new leather jacket for one. Remembering that this man could be seeing a whole lot more of her eventually, she gave a mental shrug and rather than hiding she straightened her posture and walked steadily toward him, feeling the bounce of her unfettered breasts beneath her pyjama top, and was pleased when he seemed to grimace and look away. She never ceased to be amused at the power of having breasts.\n\n\"I better get dressed or I'm going to be late,\" he said after pushing a cup of coffee across the bench to her. As she reached for it their fingers accidentally touched, and Matteo seemed to pull his hand back as if he had been burnt, making her frown. He walked away without another word, leaving her staring after him.\n\nCat busied herself in the now empty kitchen, taking eggs and milk from the fridge along with cheese and butter, and set to work making omelettes for breakfast. She made toast to go with them, and by the time Matteo emerged from the bedroom again she had set the table and invited him to sit.\n\n\"You can cook,\" he commented, raising his eyebrows.\n\n\"The basics only, don't get too excited,\" she said conversationally, placing an omelette and toast in front of him with a fresh cup of coffee.\n\n\"Thank you,\" he murmured, dragging his eyes away from her body to the plate before him. He took a bite and murmured appreciatively. \"It's good. Shouldn't you be getting ready for your meeting too?\" he asked.\n\n\"The car isn't picking me up until ten,\" she shrugged. \"I have plenty of time.\"\n\n\"Do you?\" Matteo raised an eyebrow. Then he slid his phone across the table toward Cat and tapped the screen which showed eight forty-five on the screen. \"I think you might have slept longer than you realised.\"\n\n\"It won't take me an hour to get ready,\" she scoffed. \"I know you're used to beautiful starlets who probably need hours of pampering before leaving the house, but, trust me, I am not one of them,\" she gave a self-depreciating laugh. \"As you can tell,\" she took another mouthful of her omelette and chewed.\n\n\"You, Miss Leone, are an unusual woman, I agree,\" he chuckled. \"Unfortunately, some of us have an earlier start to the day, and I have had to conduct one meeting already by phone this morning as you have kidnapped my wardrobe. Now that I am dressed, however, I'll leave you to get ready in your own time.\" He stood, having wolfed down his omelette and taken a large sip of the coffee. \"I will talk to D. about finding you alternative accommodations today. We'll talk this afternoon, try to make lunch if you can. Good luck for your meeting,\" he gave her a genuine smile.\n\n\"Good luck with what you have to do today,\" she responded, watching him walk away and enjoying the sight of his broad shoulders under the pinstriped suit jacket. He'd been all business, but that was okay with her, it was what she was considering signing up for, after all.\n\nCat considered him as he left. Maybe she should get ready earlier, he obviously knew the Donatis' a lot better than her, and they may expect her to look more professional than she had thought from the friendly phone calls she had shared with both Lucia and Peri. Out of habit, she cleaned the kitchen before going to change and put on a little make-up for her meeting, and at ten she was down in the lobby when the car pulled up, and the driver got out to open the door for her.\n\n\"Thank you,\" she said, feeling awkward, and slid into the back seat of the car. She stared out of the window during the short drive, taking in the sights of a new city and thinking it was much the same as the city she had come from. Not that she had ventured into the city heart very often from her home in the outer suburbs. They seemed to drive past all the flashy buildings and shopping malls and into a warehouse district, although she was sure she was still, if not in the heart of the city at least close to it. The car pulled up in front of a regal old building that proclaimed it to be the House of Lorraine. It took her less than a minute to realise that this was an auction house, and she turned to the driver.\n\n\"I think there has been some mistake,\" she gathered her wits about her. \"I'm not...\"\n\n\"Mrs. Donati has an office here. She will be waiting for you,\" he said helpfully. He smiled encouragingly to diffuse her concerns that he, of all people, might not know where he was supposed to bring the young woman. The Donatis' were good people, and if Peri had wanted to meet with this young woman then she, by extension, was in all likelihood good in some way too.\n\nCat walked slowly inside the building. She wasn't sure what she had expected, but the grandeur of this place wasn't lost on her. She had known the Donatis' were rich and as well connected as the Vitalis', but she definitely didn't belong here in this place surrounded by priceless heirlooms and people dressed in suits and business attire. She smoothed her hands down over the flowing floral print dress she had considered quite appropriate for this meeting until walking into the old-world charm of this place. She was so self-conscious, she was glad she had taken the time to put on a little make-up and braid her long hair into a semblance of minor sophistication.\n\n\"You must be Catriona Leone,\" a man in a suit and an easy smile walked toward her. \"I'm Darius, one of Mrs. Donati's assistants,\" he said in a friendly tone, and she tried to relax the stiffness in her posture as she took his hand.\n\n\"That would be me,\" she quipped and smiled back at him, swallowing her fear and trying to put her best foot forward. This job meant a lot to her in terms of freedom and independence to make choices about her future.\n\n\"Excellent, follow me, Peri is very excited to meet you,\" he came to her side and, with a hand hovering but not touching behind her back, he guided her through the auction house to a rear office. Cat walked in, and even as Darius was announcing her name she was being embraced by Lucia Battaglia.\n\n\"I'm so glad you're here, at last,\" Lucia said. \"This is my sister-in-law, Peri,\" she introduced the other woman in the office. \"I'm so sorry about the mix-up with the apartment, we'll get that sorted out today, won't we, D.?\" she turned to look at the man sitting behind the desk.\n\n\"It was entirely my fault,\" Dante admitted. \"I'd totally forgotten that you were flying in last night, and, with that said, I have some work to do, so I will let you girls have my office to yourselves for a little while. I hope you enjoy your stay, Miss Leone,\" Dante addressed Cat with a similar friendly tone to that she had received from Darius. This interview was going nothing like she had expected.\n\n\"Please, have a seat,\" Peri invited, as Lucia disengaged from Cat and went to take the seat vacated by Dante.\n\n\"I need to go and make a call, I'll let you two talk for a bit, and then you and I will have lunch and really spend some time with each other,\" Lucia grinned. \"I really am so glad you are here.\"\n\n\"I'd like to discuss a project I'm working on with you.\" Peri began, as Lucia closed the door behind her. She pulled a folder of papers that had been sitting on the desk toward her side, opening it up and looking at the documents with pursed lips. \"First let's get the unpleasant things out of the way.\"\n\n\"Unpleasant things?\" Cat's eyes widened in stunned surprise. This was an interview, and she felt like she had been called to the principal's office at school again when her mother couldn't be located and her brother had gotten into trouble for fighting again. The well-meaning principal had seen through her charade then, and now she felt like an imposter here in this elegant office and prepared to make her apologies and leave.\n\n\"Don't worry, there's nothing truly unpleasant in here,\" Peri hastily reassured the young woman. \"It's just that we are an intensely private family and like to protect our children and home life as best we can, so before I talk to you about the project I am working on I'd like you to sign a non-disclosure statement.\" Peri took a piece of paper from the top of the folder and slid it across the table. \"My parents-in-law were murdered a few years ago, and my husband insists on a certain level of security around public knowledge of our family.\"\n\n\"I see,\" Cat said in such a small voice it was barely heard as she picked up the piece of paper and glanced over it. \"I'm a fairly private person myself, so I understand not wanting the world to know your business. I would never betray a client though, if you hire me, you have my assurance on that.\"\n\n\"Take a minute or two to read through it, it's all very standard stuff. Can I get you some coffee or tea?\" Peri offered.\n\n\"Water would be good if you have it,\" Cat used the same quiet voice, her eyes skimming over the document she held. Once she was sure it was exactly what Peri had said it was, and that there was nothing hidden in there that said she was selling her soul or first-born child to the devil, she put it on the desk and signed it. Who would she tell anyway? She didn't know anyone in this town. She picked up the glass of water she'd forgotten she asked for and took a sip while Peri countersigned the document and placed it back into the folder.\n\n\"Now for the fun part,\" Peri took another piece of paper from the folder. This one brightly coloured, and she placed it on the table facing toward Cat. \"I absolutely adore this piece! Dante saw it the last time he was in Melbourne, so when I travelled down there recently with Josh we had a look at it ourselves.\"\n\n\"This?\" Cat asked in astonishment. \"This is the reason you asked to meet with me?\"\n\n\"Initially, I just loved this, but when I checked out your website and found out that a few buildings had pieces of yours, I contacted the interior designer on those projects and found out some more details,\" Peri said enthusiastically. She was nothing if not thorough in all her research.\n\n\"Now I'm the one who feels like they need a non-disclosure statement,\" Cat laughed, overcoming her initial nervousness and relaxing into her usual friendly mode.\n\n\"Dante saw and told you about this?\" Cat asked, finding herself relieved that the Vitalis' had not somehow manoeuvred this interview for her in an attempt to get her out of town and further away from Ricco when they still saw each other strictly as friends.\n\n\"A family friend has this hanging in their entertainment room,\" Peri laughed. \"Which is just a nice way to put the room where he and his mates watch Friday night football and drink far too much beer. Can you tell me about it?\"\n\n\"Wow,\" Cat said gathering her thoughts. \"Your family friend coached that team. It was my brother's team. That's him there,\" she pointed to one of the sagging depleted men in the painting. \"They had just lost the grand final. The first grand final the club had made it to in over a decade.\"\n\n\"No wonder there is so much raw emotion in the scene. You were there to witness it, I assume,\" Peri nodded.\n\n\"Yeah, it was a tough day. All the platitudes about making to the final game itself didn't help in the slightest. A lot of them, including David, hung their boots up after that,\" Cat said sadly.\n\n\"David is your brother?\" Peri prodded. \"You're close, I take it?\"\n\n\"Yeah, but for better or worse we are both spreading our wings a little this year and flying solo without a net. He's got a great job that looks like it will lead to a great career, and I am off on new adventures in an effort to get my art taken seriously,\" she looked at Peri. \"Sorry, that was probably too much information. I tend to chatter when I get nervous.\"\n\n\"Chatter away, I can already tell we're going to be friends,\" Peri said warmly. \"Now that I know a little about you, let me tell you about my family and see if you feel the same way and if you feel like you would like to work with us.\"\n\nFor the next hour, Peri told her about herself and the relationship she had with twelve of the Donati men, starting with her love affair with two of the brothers, Josh and Dante. Legally she was married to Joshua, but unofficially he was just as committed to her relationship with Dante. Both men encouraged and embraced the situation, and they all lived together with their children in a big country house which was their main residence, and a large penthouse when they were here in the city.\n\nCat was intrigued and asked blunt questions, to which she got equally open answers. The triplets that were nearing their third birthday were definitely Joshua's children, but the twin babies could be either man's children, and there would never be a paternity test to prove one way or the other who the real father was because they were a single family unit and the children were theirs as a family.\n\nCats mind boggled at the idea, but who was she to judge, families came in all shapes and sizes. She guessed it was better to have three parents than none, like she had mostly grown up with. Her unreliable, addict mother was barely conscious for much of her life. Peri went on to talk about the other Donati men and their families. Cat could tell how much these people meant to Peri, and she smiled thinking that it was strange to find a woman with such a huge heart that held such deep love for so many people. Peri had been right; Cat did like her, and believed they could be friends, good friends.\n\n\"What I want,\" Peri said at the end of her story, \"Is a picture like this. Not the football context, but a group portrait in a context that would suit them, we can debate that once you have met them all. I want a portrait of the twelve men relaxed in a moment where it shows their love and affection, their friendship and camaraderie. I want something that shows they are a family who would move heaven and earth for each other.\"\n\n\"Not an easy task without a context or getting to know them well. I can tell you about most of those guys in this painting like I could talk about my brother. I knew them all very well,\" Cat said, pointing out the difficulties and jabbing a finger at the picture of her painting.\n\n\"That's to be expected, and why I would like you to take the time to get to know my family,\" Peri agreed. \"I understand that a project of this magnitude could take months, or even a year to complete. I am not expecting miracles overnight,\" she said in a soft voice and saw the young woman relax in front of her.\n\n\"Please take what I am about to offer you in the spirit it is intended and not as an insult,\" Peri took a deep breath as Cat looked up at her sharply. \"I told you I didn't just look at your website, I really looked into who you were as an artist. I feel like I have known you for months rather than just meeting you for the first time. I'm sure you are exactly what I want and need for this project, but I want you to be comfortable with the situations I will be putting you in to get to know these men so you can do the painting with the passion you did this one with.\"\n\nCat sighed as she realised that Peri knew she came from welfare alley and had nothing and no one of value in her life except her brother.\n\n\"There are several events set up for the next couple of weeks; this is a very busy time for our family. There is an annual family gathering where hundreds of Donati relatives descend on us. It used to be held in April, but the memorials have made us move the dates, which means it is crazy trying to get things done at this time of year. Luckily for me, I have the most wonderful sisters-in- law who will do all the heavy lifting for several of the events this year because the babies are so young,\" she put her hand to her forehead and did a mock swoon, making Cat giggle. \"I would like you to be part of that mayhem so you can see the men interact with each other in both formal and more relaxed settings.\"\n\n\"That would make trying to come up with a context and capturing a moment easier,\" Cat agreed. \"I'm not sure why you were worried about telling me this,\" she frowned knowing more was coming.\n\n\"The thing is, there will be several charity balls and formal dinners here in the city before we all go out to the country house for two weeks. I hate to be indelicate, but I'm not sure you have the finances or where-with-all to shop for so many evening gowns and cocktail dresses, so I would like you to let me purchase you a wardrobe for the duration of your time here with my family. Call it the tools and equipment you need to do the job I am asking of you, if it makes you feel better. My mother is an expert personal shopper who will keep true to your creative persona and hit all the factory outlets to save us some money. I promise you will not be beholden to me, and everything we purchase will be yours to keep, on top of the fee for accepting the project.\" \n\n\"You're right,\" Cat nodded. \"I've never even owned a formal evening gown, and I am sure my idea of what a cocktail dress should be and yours are entirely different,\" she considered the woman sitting across from her. \"I guess we could call them tools of the trade, and I could accept them along with the paint and brushes and sketch pads I will need to do some preliminary drawings.\" The woman was rich and was offering her this bonus. She didn't want to be a charity case, but this didn't feel like accepting a hand-out, it felt more like, as Peri had put it, a necessary evil to get the job done. She was a girl from welfare alley, and she had to accept helping hands when they were offered in this way. She considered what this would mean if she also took on Matteo's proposal and his hinted at preferences for a makeover.",
        "\"Good, I'm glad that's settled. It took me a while to get used to all of this too,\" Peri said conspiratorially. \"My mother and I used to live from pay cheque to pay cheque, and I never would have dreamed of being here before love found me and dragged me into this world,\" she indicated her surroundings. \"If you'll just sign here and here to say you have accepted the commission, we can get to work,\" Peri grinned.\n\nCat hadn't actually accepted anything but the invitation to meet and observe the twelve men, but she had nothing to lose, and this was why she was here after all. If Matteo were serious about the partnership he had offered, then he would have to understand that she wouldn't just give up a great opportunity like this because he had other plans. She would need her own life and career, such as it was, as well if he wanted his family to believe she wasn't in it for the money. Especially after a failed relationship with one of his brothers already.\n\n*****\n\nAfter a brief conversation with Cat to discover that Peri had wanted her to do some preliminary tasks that afternoon, Matteo had given her the address of the apartment he had found for her and promised to have her belongings delivered there. He had also told her that a set of keys would be available from the desk in the lobby. He had a commitment that evening that he had hoped she would be available to attend with him, but she had declined for the same reasons she had declined his lunch offer. He had felt an unexpected disappointment.\n\nMatteo got back to the apartment that afternoon and found no trace of Cat or that she had ever been there. It was as if he had dreamt up the woman who had been in his thoughts all day. He hated to admit it, even to himself, but he was disappointed that he wasn't going to see her this evening for the New Years Eve party. He had felt the first stirrings of that disappointment when Dante had assured him that he was welcome to the apartment for the duration and that he wouldn't have his personal space invaded again. Now that he had asked for her belongings to be taken to a studio apartment he had found with an art studio attached, it was like a wet blanket had been put over his mood, and he was glad he was going out with Dante and the rest of the Donatis' this evening. The apartment seemed empty without her energy and restlessness pervading the space.\n\nHe had to stop thinking about her. Maybe he should have offered to deliver the keys to her personally. He hoped she hadn't changed her mind about the trial week she had suggested, and had begun avoiding him rather than tell him up front. She sounded happy on the phone, but he had no idea how her meeting truly went today, and for all he knew she could be on her way back to god knows where in Melbourne tonight.\n\nDejected and believing that she probably had changed her mind and left him without any desire to revisit the proposal, he went back to his original plan of trying to find an actress to play the role he required. He had a few hours to confirm the actress he had originally chosen to play his fianc\u00e9 and meet her for cocktails before the party, so he picked up his tablet and walked into the kitchen to grab a cold drink. If Cat had changed her mind, he needed a backup plan. He could call her, of course, but what would he say? He'd left the ball firmly in her court. He would go and see her early tomorrow morning before she had the excuse of work to keep him at arm's length.\n\nHe swore as he saw the message pop up from the talent agency. \"Mrs. Perkins is unwell and unable to make a meeting this evening. We would ask about the duration of the intended booking as she has disclosed she is pregnant and that may interfere with her playing the role longer than six months. Regards...\"\n\nMatteo went back to the talent pages and began swiping through profiles. The girl next door type could make a reasonable future fianc\u00e9, but her eyes were brown, not the blue he found he now preferred, the fresh-faced country girl with cute freckles scattered over her nose, the dark-haired femme fatale took his attention for the moment. None seemed right, and their only real flaw was that they weren't Catriona Leone, he finally admitted. He wondered how she would feel about a late night visit rather than waiting until the morning to see her again.\n\nHe could encourage her further by offering her art installations in some of the more prestigious construction projects he was involved with, as well as a good remuneration package for her work. He went to her website as he carried his can of soda back through to the living room and took a seat on the couch.\n\nWas he an idiot? He asked himself. He'd barely spent more than a couple of hours with her, and she was already under his skin. Why would he want to put himself in harm's way again? He needed a non-emotional relationship, and he didn't want to compromise on that. If she wasn't ready to commit to his proposal, then he could live with that if he had to, but she had to give him an answer one way or another. Maybe he'd meet someone at this party tonight that would fit the bill. Maybe, maybe, maybe, he sighed and tossed the tablet to his side, leaning back and shutting his eyes for a moment. The fact that she had invaded his thoughts at all was enough to cause him a restless dream-filled sleep last night. He hated that she had gotten under his skin, then just disappeared. The short, disappointing phone call to decline his lunch and dinner invitations seemed... 'Seemed what?' He asked himself. 'She didn't owe you anything. She's changed her mind, move on,' he told himself.\n\nHe groaned and stood up to go have a shower and change for the party. No use sitting around here and wondering about a girl who clearly hadn't given him a second thought today. He ran the water and stripped off before stepping under the steaming hot jets. \n\nSteam was rising in the shower, clouding the glass walls, the water was too hot. Matteo turned the dial back just a little and waited for the temperature to adjust. He stepped in. The water poured down, the heat hit his feet first, then his torso, then finally he brought his head forward. As the falling water splashed in his eyes, Matteo blinked. The image of a rain-soaked Cat showering here to warm herself last night entered his mind and woke his sleeping cock. It jumped at first, then rose slowly. Matteo took it in his hand and began to work it up and down. His eyes already closed, the images in his head began to appear with increasing clarity. God, how long had it been since he had indulged in mindless, loveless fucking for the sake of it.\n\nA room was materialised on the inside of Matteo's eyelids. White walls, no windows. Air conditioning on high making his skin goose bumped as he waited patiently. His mind's eye walked across the room, and a girl appeared. She was a tall, dark-haired beauty with high flaring cheekbones, wide-set crystal blue eyes and long, toned limbs. Everything about her bespoke sensuality, and it was apparent that she had no idea how she affected men like him. Her breasts were ample, not large, but neither small. He saw her long, slender, perfectly proportioned legs; they naturally led his mind's eye upward. In an instant his heart was beating faster as he imagined the girl's well-manicured pussy right before him.\n\nMatteo was getting hot now. The images in his head were vivid. His cock was fully awake now; the feeling of his hand moving up and down the shaft was doing its job.\n\nThe girl had not spoken. She knew not to break the silence of this room, his room. The image of her eyes expressed perfectly the hunger he wanted her to feel. She stared down at his hand moving along his shaft. Matteo saw her lower herself to her knees and open her mouth in offering. She was hesitant at first, but showed increasing depth and skill with each bob of her head. The vision slowly changed and he saw her forehead collide with his hard pelvis. She had taken the full length of his member down her throat. Though he had imagined her skill, he could not help feeling impressed by her. As she came up for air, she let her tongue slide along the head of his cock, causing him a moment of pure pleasure.\n\nPulling her mouth free from his cock, Matteo saw her smile. Her perfect white teeth centred between pale full lips. Her dark hair cascaded down in thick, soft waves, framing her face. She stood. A wide padded bench appeared in the white room and she turned to bend over it without a word passing between them. Gently she relaxed herself down, at first jumping slightly at the touch of the cold leather, but as it warmed she let her breasts make contact, then her elbows. Her pussy was neatly tucked in between her perfect ass cheeks. It was wet, warm, inviting. He wanted to taste her, but mental images could only go so far.\n\nWhite leather bands circled her wrists and upper arms, and, as his gaze slid lower, he saw them circle her thighs and ankles in the same way, rendering her immobile. \"Perfect,\" he groaned, his fist working harder on his cock.\n\nHis fantasy self placed a hand on the small of her back as a small signal and thrust his cock home, deep inside her. He started off slowly, but she opened her mouth in a silent moan that begged him to fuck her harder. As he picked up the pace, he felt the sensation he had been missing for a while now, the warmth spreading from his stomach to his chest, neck and face. His pace quickened. His climax was quick to follow. It hit hard, long spurts of cum erupting from the tip of his cock. They fell onto the floor of the shower being washed away by the steaming cleansing water.\n\nMatteo groaned. His cock was raw from how hard he had jerked off. He straightened his back and opened his eyes. He could faintly make out his reflection in the slick glass surface. His face was red. His breath was ragged. He shook his head and washed and rinsed himself again before he stepped out of the shower. The tile felt warm on his feet as he towelled off and wiped his hand over the mirror. He viewed himself dispassionately. \"You're an idiot,\" he chided himself, and vowed to bury all those feelings when he saw Cat next and approach her on a strictly business level.\n\nBy the time he emerged from the bathroom after shaving, he had done enough self-talk that he felt back on track again. Cat was a pleasant diversion for a couple of hours one rainy night, nothing more than an aberration in an otherwise perfectly controlled life. He wrapped a towel around his waist and walked into the bedroom and froze. There, propped up on the pillows, was a single white sheet of paper with a sketch of a dark-haired girl with blue tribal paint on her face. He smiled as he read the hastily scrawled words beneath it.\n\n\"Thank you for being so chivalrous in the face of being invaded. The bed is all yours tonight. Cat,\" there was a small child-like drawing of a Cat's face at the end of her name, and he smiled. Just when he thought he had cleared her from his mind for good, she came flooding back. The image of an adorable, wet and bedraggled girl with a paint smear across her face stumbling into the apartment showed clearly in his mind.\n\n\"Don't be stupid,\" he scolded himself out loud. In the bathroom he had come to the conclusion that Cat was a girl that said what she wanted when she wanted, and therefore could never pull of a hoax like he was planning. It would be far too dangerous. He needed to forget her. He knew he should crumple up the sketch and throw it away, just as he was trying to rid himself of his thoughts about her, but he couldn't. He looked at the sketch and laughed. She really was like no other woman he had ever met, and there was a small chance that she hadn't changed her mind about the trial, he just had to find her and talk to her to find out.\n\nHe was still smiling as he left the apartment and slid into the car he'd ordered next to the driver. \"Take me down to the House of Lorraine and wait for me there, please,\" he said, hoping to catch Dante before he left for the party. Even Peri's influence hadn't truly affected Dante's disregard for black tie events. He went because it was required, mostly, and he was never in a hurry to get there, so Matteo knew he would be back at his desk working until the close of business. He wasn't there though, and being at a loose end he decided to go and visit Peri to see if Cat had gotten the commission.\n\nIt felt silly allowing the driver to take him halfway around the large block, but he wanted the car there in case he had missed seeing Peri there too. It was getting later, and they have left for the party already because they were the hosts. He'd only been here once before, but he knew that the penthouse was his destination. He gave the doorman his name, the doorman then called the apartment, and he was given a key to the elevator and allowed to go up. There was a lot of security around this family, not that he blamed them, but it was sometimes tough for outsiders to deal with.\n\nHe entered the apartment and Josh looked up from where he sat with his phone, dealing with last-minute hiccups and details. He waved Matteo into the room with a smile.\n\n\"D.'s down in the nursey,\" he whispered, barely moving the phone from his ear and led the way to the internal stairs and pointed. Matteo nodded and followed the staircase down.\n\n\"Here's your Uncle Matt-ay-oh!\" Dante exclaimed, as he threw a tiny, giggling girl into the air and then flew her like an aeroplane to where Matteo stood chuckling as the two little boys scrambled around his feet to be next to be thrown into the air. \"Here, hold this for me,\" he passed the pretty little girl to Matteo and bent over, swooping the wriggling boys into his arms.\n\n\"This is Blayze,\" he tilted his head to one side, \"This is Cruze,\" he indicated the other child, \"and you are holding the very regal Princess Eden,\" Dante said like a proud father.\n\n\"Pirate, Papa,\" Eden frowned at Dante.\n\n\"Okay, how about a princess pirate?\" Dante said, as if he made this negotiation with the little girl all the time.\"\n\n\"No princess,\" she said adamantly, and turned to look at the man holding her. \"Pirate!\" she stated emphatically.\n\n\"You are the prettiest pirate I have ever seen,\" Matteo grinned at her. \"Are you sure you're not a princess?\"\n\n\"Eden can be a pirate if she wants,\" Peri rolled her eyes at the men. \"We are all about gender equality in the nursery, and I don't see you calling either of them a little princess,\" she fixed her eyes on her sons and smiled widely.\n\n\"Are you kidding! These little rough nuts could never be princesses,\" Dante was mortified at the thought. \"Your Dada, on the other hand, is pretty enough to be a princess,\" Dante winked at Matteo.\n\n\"I heard that,\" Josh said, coming down the stairs.\n\n\"I meant you too, you were always the pretty one, just like Princess Eden,\" he teased.\n\n\"No princess,\" Eden shook her head again and reached out for Josh. \"No princess, Dada.\"\n\n\"No princess,\" he agreed, and she wrapped her little arms around his neck and hugged him tightly. \"Hey, Matteo, sorry, I was on the phone when you arrived.\"\n\n\"That's okay, I came to see Peri anyway. I saw enough of both of you today,\" he chuckled.\n\n\"I'm sorry about the confusion last night,\" Peri said, taking Blayze from Dante's arms and kissing his cheek.\n\n\"No drama, she has somewhere else to stay now. So I assume I'm good to stay there?\" he asked. \"They've asked me to hang around for a bit, and I'll admit I can find a distraction or two here to occupy my time.\"\n\n\"Of course, and, honestly, if our construction guys were as good as yours the overlap would never have happened. It's just with so much family coming into town early for the annual Donati family gathering it's been a bit of a squeeze. It's all sorted out now though,\" she smiled. As she continued kissing the children and handing them off to their nannies.\n\n\"How did the meeting go?\" he asked casually. \"Did you hire Catriona Leone to do a commissioned piece?\" he continued his line of inquiry, wondering if she was still in town or if she had gone back to Melbourne.\n\n\"I did,\" she nodded absently. \"Cat will be at the party tonight, you can ask her about it yourself if you like.\"\n\n\"Okay,\" he ground out the word. He was equally as thrilled with the prospect of seeing Cat again as he was pissed that she had turned down his invitation to accompany him to this event. \"I wouldn't have thought black tie and Ball gowns was her thing,\" Matteo admitted, considering her wardrobe from the night before.\n\n\"It's not my thing either, but I still have to go,\" Dante grumbled after farewelling the children.\n\n\"I'll ride with Matteo,\" Dante said. \"There are a couple more questions I want to ask him. Plus, it's a given that Josh is stressed, and I will probably do something to make him want to punch me,\" he grinned. Dante loved his life, he was happy at home and at work, and it made him more inclined to be relaxed and have fun, often at Josh's expense, as he became even more of a control freak, trying to keep on top of everything instead of trusting everyone to do their jobs. He was a heart attack waiting to happen, and Dante knew he needed to find a way to make his brother relax. He teased and made fun of him, though, when he was too over the top, like tonight. It was important that everything went well, but Josh was determined that this evening would be perfect. Having become the leader of such a huge family with little guidance or preparation before his father died had made him work twice as hard to prove he was up to the task.\n\n\"What's up?\" Matteo asked as he climbed into the car next to Dante.\n\n\"That story I told you yesterday,\" he glanced meaningfully at the driver and said no more until he saw the comprehension stiffen Matteo's features, and a small nod occured. \"Well, a lot of elements of that story went into the novel we're launching in a few days. A complete work of fiction,\" he said, his voice grave underlining that Matteo would find more truth than fiction between the lines. Only people who knew the family would read anything but the fictional story, but after yesterday it was only fair that Dante warn Matteo. He hadn't realised how much Nik's betrayal had hurt people outside their family, as well as those closest to her. \"I just thought you should know she may get mentioned in the montage tonight, better forewarned, you know.\"\n\n\"Our chat yesterday gave me all the closure I needed,\" Mateo said, and genuinely meant it. \"I just needed to know the truth to move on,\" he said in a hushed voice.\n\n\"Good, I'm glad I said something though, best not to get any nasty surprises if you're hanging around for a week or two,\" he grinned. Dante felt like a weight had been lifted from him. He'd been becoming more in tune with his inner feelings and trusting his gut a lot more since becoming the Oracle, and he looked at his cousin and narrowed his eyes. \"So, you and the painter chick, huh?\" he grinned.\n\n\"No! Nothing happened. She is interesting though,\" he admitted, and was suddenly unwilling to say any more about her. \"I'm glad she got the commission from Peri. I have a feeling she needed it,\" he said thoughtfully, remembering that she said she couldn't afford to go to a hotel and that everything she owned was in those two ratty bags she had brought with her.\n\n\"Well, in that case, I'm glad too, but don't think you're fooling me for one minute. You forget I'm an oracle now,\" Dante leaned back in the seat and relaxed. \"Nothing might have happened last night, but I can tell you'd like it to tonight.\"\n\n\"I somehow doubt she will be there tonight. I can't imagine that a girl with paint permanently staining her hands is going to be comfortable hobnobbing with the rich and powerful while wearing a ball gown,\" he chuckled.\n\n\"She might surprise you,\" Dante offered. He'd done the research for Peri on the girl, with the help of Ben, and he had helped her to put together a package that would practically ensure she would stay and keep any family secrets she found out about them along the way to herself. \"Speaking of which, she has a brother that works for one of your construction companies. Putting in a good word for him might go a long way to getting you a date. If that's what you want, of course.\"",
        "\"Unlike you, I take my confirmed bachelorhood seriously,\" Matteo teased. \"Plus, on the evil scale of things, I think my ex far outweighs yours.\" Of course, Nik had added murder to lying, cheating, stealing and drug-trafficking, so it went without saying that Dante would have had to have dated a serial killer to even consider besting him. \"It stands to reason my baggage far outweighs yours as well. Don't try to get inside my head, my friend, it's a deep dark place full of monsters and she-devils.\"\n\n\"Did I mention that I also perform exorcisms in my spare time?\" Dante offered, as the car pulled up to the curb to the ballroom they used regularly and he got out.\n\n\"You'd need a lot of spare time for me,\" Matteo quipped back, and walked toward the entrance.\n\nThey were early enough that Matteo could look around the room and appreciate the ambience of the place. He was able to greet his cousins and with no real surprise spend a few minutes talking with his brother, Jacobi, and Maryanne, who had flown in for the evening. Maryanne had come to support her family, as they used New Year's Eve as a memorial for all of those that had been lost to them in the preceding three years. Seeing them made him think that being seen with Cat tonight by his brother could go a long way to making his proposal to her more real in his family's eyes.\n\n\"Ricco didn't come with you?\" Matteo asked.\n\n\"He's around somewhere,\" Jacobi shrugged.\n\n*****\n\nCat's day had been a whirlwind from the time she signed the commission form with Peri. From there she had been whisked out of the office to meet Lucia and Andie Donati. She had barely stopped, as Andie had her poked and prodded and Lucia fed her lunch as she had her hair cut and styled properly with just an extra hint of the natural blue that coloured her black hair. They had shopped for everything from underwear and shoes to dresses, talking about her style, her likes and dislikes. She had come home with several bags and a promise from Andie to ensure she had exactly what she needed to get through the next few weeks without raising an eyebrow from even the most suspicious of the Donati men. Lucia had laughed and admitted that was her husband, Dino.\n\nShe checked her watch and stood in front of the mirror one last time and nodded. The fabric was beautiful, and though the dress exposed more of her than she might have otherwise been comfortable with, she couldn't deny the effect of the tiny shimmering crystals was amazing. The cut of the dress made her look toned and curvy rather than tall and lanky. Her hair was loose but had been tucked artfully with invisible bobby pins behind her ears, and her make-up had been applied more expertly than she ever could. She looked like a completely different person from the drowned rat that had arrived in Brisbane last night.\n\nShe not only looked but felt like a completely different person to the girl she was last night. Life seemed suddenly full of possibilities. She hoped deciding not to tell Matteo that she would be at the party tonight and with her new look would work in her favour. He had been fairly specific about having preferences about her wardrobe when they had discussed her future makeover last night. She picked up a clutch bag that went with the ice blue satin of her dress and shoes and looked around at the artist studio apartment Matteo had found for her today. She smiled again, if this was what happy felt like she could do with a little more of it.\n\nShe was overwhelmed with the generosity of the people she had met since arriving here. While she had never wanted to be treated as a charity case, these people have given her what she needed to fulfil the role they needed her to play and had not made her feel lacking in any way while they did it. Neither Peri nor Matteo had made her feel like a pitiful girl from welfare alley when they had offered to help her. Unlike the Vitalis' she had known in Melbourne, they had given her choices and let her maintain her own sense of style rather than making decisions for her.\n\n\"You don't have to justify why you would accept such expensive gifts, women did it all the time for doing much less in return,\" she told herself out loud. She walked downstairs to meet the car Peri was sending for her, still justifying what she was doing. \n\nCat was nervous, she wasn't sure what to expect, and as she slid into the car she could feel the tightness of her dress make her keep her posture perfect. She looked down at the wide square neckline of the sleeveless cocktail dress and found her breasts straining against the fabric and making her look buxom, something she had never been or felt before. She would have to be careful whenever she sat tonight or risk a wardrobe malfunction of the worst sort.\n\nStepping from the car, Cat stood looking at the building and surrounding gardens before slowly walking up the stairs feeling a little like Cinderella entering the ball. She smiled as she saw Andie hovering at the entrance and went to greet her warmly.\n\n\"I'm so worried I'm about to burst out of the top of this dress,\" she whispered nervously.\n\n\"Non-sense, you look amazing, and every man in there will notice you and want to talk to you tonight,\" Andie laughed softly. \"This is my husband, Charles, and his son, Peter,\" she introduced the men beside her. \"This is Catriona Leone, the young lady we've been waiting for. I didn't want you to have to walk in alone, and Pete is such a nice man, he agreed to escort you into the lion's dean, so to speak.\"\n\n\"Doctor Donati,\" Cat said enthusiastically. \"I've never thanked you properly for helping me the way you did. I think you saved my sanity more than once.\"\n\n\"Please, call me Pete tonight. I wouldn't have recognised you if Andie hadn't said your name,\" Pete stepped forward and kissed her cheek before offering his arm. \"You've recovered well, it seems.\"\n\n\"Very well, thanks to you and Lucia. Thank you for waiting out here for me. I know Andie probably made you do it, but thank you anyway,\" she said happily.\n\n\"You are most welcome. It doesn't do my ego any harm either to walk in with the most beautiful woman here tonight on my arm,\" he winked at her, making her laugh believing he was teasing her.\n\nThey circulated, and she met several of the men who were on the list Peri had given her of the men who would be in the portrait. She had been laughing with Pete and one of the Donati brothers when a voice said her name from close behind her. She turned and looked into the confused eyes of Ricco.\n\n\"Cat?\" he asked again, as if he couldn't believe she was the girl he knew.\n\n\"Hello, Ricco, I wasn't expecting to see you here tonight,\" she said pleasantly, while her stomach tied itself in knots. Cat leaned forward placing a hand on his arm as she kissed his cheek.\n\n\"You look amazing. What are you doing here?\" Ricco asked, the confusion still lacing his voice.\n\n\"Peri Donati invited me to fly up to meet with her about a project she would like me to do for her. She invited me tonight as well. How about you? What are you doing so far from home on New Year's Eve?\" she enquired, sounding like her usual self.\n\n\"I came with Jacobi and Maryanne. Maryanne's family does some sort of tribute thing every New Year's Eve,\" he explained. \"I missed it last year, but Jacobi told me the party was worth crashing.\"\n\n\"Well, it's good to see you looking all handsome in a suit outside the courtroom,\" Cat desperately tried to grasp at something to make small talk about.\n\n\"Hey, Ricco, I'm sorry, I need to steal Cat away again, Peri's got me running errands for her tonight, and she just waved Cat over again,\" Pete interrupted the conversation.\n\n\"It was really good to see you,\" Ricco said, and allowed Pete to lead her away.\n\n\"Your words were all cool and confident, but you really need to watch your body language if you want him to think you're completely over him,\" Pete murmured in her ear, making her blush deeply. \"Don't worry, I doubt he noticed, he was just as bemused by your appearance as I was when I first saw you tonight. You look very beautiful.\"\n\n\"You mean the black eye and bed hair didn't do it for you when you met me in Melbourne?\" she laughed.\n\n\"I didn't say that,\" he laughed with her. \"Both visions of you have their merit.\"\n\n\"May I be honest with you?\" she asked.\n\n\"Of course,\" he nodded.\n\n\"I would like to find Matteo Vitali if possible in this crowd. Not that you haven't been a delightful escort, but I owe him an apology, and I feel like I should do that sooner rather than later so I can relax and enjoy the rest of the night,\" she said quickly.\n\n\"Ask, and you shall receive,\" Pete pointed to the tall, dark and brooding man standing barely a meter from them. \"Matteo,\" he lifted his voice, and the man turned around to look in his direction, his eyes immediately going to the woman beside him.\n\n\"Pete,\" he smiled. \"It's good to see you,\" he grasped Pete's hand, pulling him into a one-armed hug.\n\n\"Seems the blind date Peri and Andie set me up with is more interested in finding and talking to you than being entertained by my sparkling personality; so, could you look after her for a few minutes for me, please, while I go and see Maryanne?\" he asked with a roll of his eyes.\n\n\"I can do that. Hi,\" Matteo said to Cat. \"I wasn't sure if you'd want to see me tonight after blowing off lunch today, but I can see that you have been busy. You look lovely,\" he commented, and felt a twinge of regret as he saw the criticism of her declining his invitations hit home.\n\n\"I'm sorry about lunch today. I have found Lucia, Peri and her mother very difficult women to say no to,\" she admitted. \"I was wondering if, as a thank you for finding me the perfect place to stay while I am here, you would let me take you out for brunch tomorrow?\"\n\n\"You don't have to thank me. I'm very glad you like it though,\" Matteo grinned, finding Cat's words affected him in a way he hadn't expected.\n\n\"Is that a polite way of saying no to brunch?\" she asked. \"I had some questions about your pro... the project we talked about last night,\" she amended at the strange look he gave her.\n\n\"Not at all, I would enjoy taking you to brunch tomorrow,\" he said, easily changing the way she had phrased the invitation. \"Have you seen Ricco tonight?\" he asked, warning her of his brother's presence.\n\n\"Yes, and it wasn't awkward at all,\" she grimaced. \"I haven't seen Maryanne or Jacobi tonight though.\"\n\n\"Be careful what you wish for,\" he looked over her shoulder, making her turn to greet Maryanne who was making her way through the crowd toward her.\n\nShe had barely spoken to Maryanne for a minute, just enough time to exchange pleasantries, when Pete was at her side again with his brother, CJ, and pulling her away to meet yet another member of the family. She found herself standing within a group of tall men when the speeches started, and enjoyed the banter between family members as they watched first Joshua Donati and then Angelo Donati, who was more of a showman, take to the small stage to address the gathering.\n\n\"I can't believe we have to be his backup singers again,\" a man in a leather jacket and a close-cropped beard complained.\n\n\"You'd rather go up there alone?\" a stockier man with a deeper voice grouched at the first man. Cat thought his name might be Carlo, but she couldn't be sure.\n\n\"Guess not, but shit, I haven't even had time to get some of that Dutch courage that Dino thrives on,\" He chuckled and moved toward the stage.\n\nPete guided Cat to a table where Andie and her husband sat. Andie pulled Peter down to whisper something in his ear, and he laughed, taking a seat beside Cat rather than follow the other men he had been standing with toward the small stage. He watched as Angelo was passed a small note from his daughter, who, at eighteen, was attending her first family New Year's Eve Party, and leaned across to whisper to Cat.\n\n\"The Donatis' celebrate all the big events in the year with singing. Never let them near a karaoke machine when there is alcohol involved,\" he chuckled. \"As a way to farewell to the year and bring in the new one, the tech guru gathers video and photos from the families big events, and usually Josh, but sometimes others, sing something sad and beautiful to go with the montage.\"\n\n\"That sounds lovely,\" Cat said, looking back at the stage. \"Aren't you a Donati too?\" She grinned back at him.\n\n\"Yes, but I am a cousin, so I don't have the same strange singing affliction of Josh and his siblings,\" he chuckled. \"They usually make the five of us cousins who are the closest sing, under duress, I might add,\" Pete pouted.\n\n\"Hey, do you know what's going on?\" Larry whispered as he walked behind Pete, noticing that he hadn't followed them towards the stage.\n\n\"Not a clue, but I think Peri has something to do with it if Andie knows,\" Pete laughed and nodded at his stepmother. \"Cat, this is Larry, one of the five who doesn't break into song every time they see a karaoke machine.\"\n\n\"Hi,\" Larry chuckled, pulling up a chair. \"You Pete's date?\" he asked sceptically.\n\n\"I'm not sure, to tell you the truth, I think he was just roped into keeping me company because I don't know anyone here except him and Andie. I met Peri today briefly, and Lucia is a friend.\"\n\n\"Now you know me as well, come have a drink with my wife and me once the home movies are done,\" he rolled his eyes. \"I'm going to go and punch your brother for not giving us the heads up about what's going on.\" Larry grinned evilly to Pete and moved off.\n\nCat became mesmerised as Peri took the stage and handed Josh a guitar, calling Dante up to join him and sat them at the edge of the stage in a corner facing the big screen that had dropped down and showed the family crest.\n\n\"My apologies for the delay, everyone, slight change of plans, and I just had to make sure my special guests were ready. Gentlemen, just play the songs as you rehearsed them,\" she smiled and left the stage. Josh shrugged and began strumming the opening chords to Nat King Cole's 'Smile'. He frowned at Dante, as they hadn't practised together, and he wondered what was going on.\n\n\"We'll have to have words with CJ about this surprise attack later,\" he grumbled.\n\n\"Control freak,\" Dante chuckled. \"I doubt Peri gave him a choice about helping her, and I have yet to see you say no to anything she asked you to do,\" Dante continued to chuckle softly and turned his head as his niece took the stage, singing the soft, soulful number, and the montage began to play before them. As the song came to its slow end, Dante leaned toward Josh and whispered, \"Don't get mad. Just smile!\" Then he cut over Josh's soft strumming with different chords and a much quicker tempo.\n\nArianna was joined on stage by her siblings and cousins, who jumped around holding colour pictures and placards singing Sia's version of 'You're Never fully dressed without a smile'.\n\nCat watched as the stage became a riot of singing children as the happier times in the year played out on the big screen behind them. School awards and trophies, lost teeth and broken limbs all got equal coverage alongside their parent's triumphs. She looked around the room to find beaming parents and friends, their eyes glued to the spectacle. She had worried about the sombre mood during the first half of the presentation, but the kids had changed that and tears had turned into smiles in the blink of an eye.\n\nThe night ebbed and flowed with music and singing once the children had been soundly hugged and kissed and sent home with their nannies. The Donatis' all had wonderful voices, including Maryanne, who seemed as at home on the stage as any of her brothers, sisters, or cousins. Pete continued to help Cat circulate and talk to the twelve men and their wives, and even though he complained bitterly he went onto the stage at least three times during the night. Each time he left her he handed her off to Matteo, who seemed relaxed and enjoying being with the Donati men. Both Pete and Matteo seemed to run interference for her when it came to Maryanne, Jacobi and Ricco.\n\nCat had purposely drunk very little over the course of the night, and although people kept handing her glasses of wine, she managed to offload them to whichever table she was near at the time and pour herself a glass of water to carry. She didn't go out a lot socially, and she'd never been at a party quite like this before. Her New Year's Eve celebrations had always been quieter and usually involved watching the fireworks on television before going to bed alone.\n\n\"I think I need some fresh air,\" she said quietly to Pete. \"Stay here, I won't be long, I'll stand in the doorway so you can come and rescue me if I end up talking to someone I'm not supposed to,\" she laughed lightly and got to her feet.\n\n\"I'll come,\" Margarite said happily. \"I love the buzz I get when the fresh air hits me after so much wine,\" she grinned.\n\n\"Don't take too long, it's close to midnight, and I don't want to have kiss Pete instead of you. He likes it too much,\" Larry chuckled.\n\n\"That's your own fault for being such a good kisser,\" she giggled. \"Have at it, Pete, I highly recommend it,\" she winked and took Cat's arm, walking them toward the wide-open French doors. \"I should be used to these things by now, but I still feel like the new kid in this big family. It's nice to have someone else new here with me since Louisa went home early.\"\n\n\"Really?\" Cat asked, surprised by the admission.\n\n\"Well, Larry is a cousin, and he used to race bikes, so we travelled the circuit mostly before... well, before we had the baby,\" she seemed to change her mind about what she was going to say.\n\n\"Cat, I was hoping to catch you again,\" Ricco said walking toward the two women. \"Vanessa told me that you resigned and I was worried about you!\"\n\n\"Peri Donati offered me a commission that sounded like fun, so here I am. It will probably take at least six months. It didn't seem fair to expect Vanessa to keep my job open when I couldn't guarantee when I would be back, or even if I would be back,\" she said with a wide smile showing she was happy about the commission and not running away from him and his family.\n\n\"You never said anything,\" he seemed confused. \"You could have at least told me you were leaving and said goodbye.\"\n\n\"I'm sorry, Ricco, I guess I didn't tell many people at all because I wasn't sure it would all work out. I only met with Peri today for the first time. There was no use telling people anything until I was sure what I was going to do.\" She tried to placate him, and she could see him becoming angry with her.\n\n\"You were sure enough to quit your job!\" he snapped, and she could tell he was more than angry with her now.\n\n\"Yes, but I wasn't sure what I would do when I got here. We're friends, Ricco, and I'm sorry I didn't say anything, but I didn't think you'd care that much. We barely see each other anymore. If Vanessa hadn't told you I doubt you would have even noticed before I came home again,\" she sighed.\n\n\"Of course, I noticed!\" he hissed, trying to keep his voice low, and she took a step back from him. \"I care about you, I have always cared about you more than you believed!\" he denied her words and was acting like a jilted lover. Visions of Ned and his drunken rants when he came back to claim her time and time again ran through her head, and she tried hard to hold herself from shattering into little pieces in front of these people who had been so welcoming and kind to her.\n\n\"Look, Ric, this isn't the time or the place for this conversation,\" Margarite stepped between Ricco and Cat, making him blink and shake his head as if he'd been in a stupor.\n\n\"I'm sorry, oh God, I'm sorry!\" he said quickly, seeing the fearful look in her eyes and the paleness of her face and neck beneath the make-up. \"You know that I would never do anything to harm you.\"\n\n\"I know,\" she said woodenly. \"It's okay, Ricco, and I'm fine, honestly,\" she said to both him and Margarite as she struggled to pull herself together.",
        "\"Problem?\" Matteo said, coming to where they stood. He had watched the exchange. He knew it was Cat who had broken up with Ricco and why. He'd read it in the report, and she had told him herself. The exchange told him that there were obviously still unresolved issues there for Ricco and that he had just scared her in some way. He considered his brother carefully.\n\n\"You left me unsupervised for too long, and now I have to go riding with Carlo tomorrow,\" Larry appeared and pulled a giggling Margarite into his arms. \"Horseback riding!\" he looked seriously crestfallen.\n\n\"Oh dear, that sounds just dreadful,\" she commiserated with a laugh, \"But if it means I get to spend the day with Louisa than I'm sure you can suffer through it.\"\n\nMatteo would never knowingly hurt his brother. He wondered if ripping the band-aid off for him by telling him he was planning on dating Cat would be a much kinder solution to both their problems than his obvious awkwardness. Ricco obviously couldn't, or wouldn't, offer her a future with any certainty.\n\n\"Horses?\" Matteo looked up with a grin.\n\n\"Oh yeah, you're the horseman, I forgot,\" Larry nodded. \"Come with us,\" he invited easily.\n\n\"I really want to, but I have a date tomorrow, and it's been hard to pin her down to a definite time, so I can't cancel,\" he said with mock sadness. \"She stood me up for lunch today, but considering how beautiful she looks, it's hard to hold it against her,\" he winked at Cat, who blushed and immediately looked at Ricco, who turned on his heel and walked away.\n\n\"Oh, Cat, come out to Louisa's place with us, she won't mind,\" Margarite said, bringing her back to the conversation. \"She's nesting, and Carlo won't let her lift a finger. She's grateful for anything that distracts him at the moment, so she'd love to have someone who is properly interested in horses out there to distract him rather than Larry, who would rather ride anything with an engine.\" Margarite bubbled away enthusiastically.\n\nIt was time to make his move with Cat. He'd enjoyed the time he'd managed to spend with her, and he would talk to Ricco for her benefit, and also so there would there were no misunderstandings that he planned to be standing beside her at midnight.\n\n\"I guess,\" Cat said uncertainly in the face of Margarite's enthusiasm.\n\n\"Great, I'll tell Louisa to expect two more for lunch!\" she clapped her hands and immediately began to text her friend.\n\n\"They're starting to make the circle,\" Pete said, approaching the group and offered Cat his arm. \"Andie sent me to escort you since I'm such a nice man and all.\" He chuckled and led her away. \"Tradition,\" he explained, \"Antonia likes to make sure she kissed every man in the room on New Year's Eve, and I think Peri enjoys it too.\" He placed Cat in the smaller inner circle with the women and took his place opposite her, smiling encouragingly.\n\n\"You're safe here with us, remember that,\" Pete murmured and kissed both her cheeks when the countdown ended. Then he let go and she found herself facing another man. She did well to remember so many names as she moved around the circle kissing cheeks and wishing people well for the new year until she came to Ricco and froze.\n\n\"I'm sorry, I was an idiot. You're free to do whatever you like, including dating my brother if you want. Honestly, I'd rather you dated him than someone I didn't know, and he would treat you well, he's a good guy,\" he said sadly. \"I guess I'd just hoped...\"\n\n\"I know,\" she stopped him. \"That's why I had to move away. I didn't know he was your brother when I met him, and when I found out I turned him down flat, but he likes to argue, just like you.\" She gave a small laugh. \"Happy New Year, Ricco, I hope this is a new beginning for both of us.\" She leaned forward and let her lips brush over his before kissing his cheek gently.\n\nMatteo raised an eyebrow at her as she came to stand in front of him. Needing to make a point to himself, as well as Ricco and Cat, he pulled her into his arms and kissed her properly. The tender kiss deepening until she gave way to what he wanted and parted her lips, allowing him access to her tongue briefly. He had pulled her close to his body, and he could feel her begin to relax and kiss him back after a minute or two. It disturbed him how right it felt, and he knew he was playing a dangerous game. He needed to get the details of this contract in place before he did something he was sure he would regret with this girl.\n\nWhen he ended the kiss, it was as if he had stolen her breath, and Cat looked up at Matteo, confused. They hadn't discussed intimacy of any kind except to joke about it. She was stunned momentarily, but the strength and passion of that kiss... but as she saw his eyes glance to his brother, she knew why he had done it. He was staking his claim, and she knew she didn't like that it was the reason for what had just happened between them, even if she had liked the kiss.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "new years eve",
        "party",
        "family",
        "brothers"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-05"
}