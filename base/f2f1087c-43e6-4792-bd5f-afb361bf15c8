{
    "title": "Deceptions Ch. 02",
    "pages": [
        "Okay, this is becoming weird, and not a little uncomfortable.\n\nAfter my sexy little late-night encounter with Dirk, I'd gone back to my room. J.T. was still up, while a half-sober Ray had stumbled in only moments ahead of me. Being somewhat shitfaced, Ray wasn't exactly shy in whooping it up over my tiny shorts and skimpy tank top.\n\n\"Whoa! Where's the party, and how come I wasn't invited?\" He literally burped it out. \n\nI just smirked. \"Nice. At least your eyes still seem to work. I'm not so sure how much longer we'll be able to say that about your liver.\"\n\n\"Fuck my liver! He's no fun! That's fun!\" he said, pointing to my dramatic camel toe. Glancing down, I realized I'd never bothered to pull my thin shorts from my pussy before returning to our room. I also noticed that at least my lips weren't still peeking out.\n\nA laughing J.T. smacked my ass, then he yanked my shorts up to give me another thong wedgie. When I slapped at his hand, he pulled me down beside him on his bed. \"Screw it,\" I giggled, leaning back against the wall to face them. After I'd wrapped my arms around my raised knees, Ray pointed between my legs while sloshing out, \"Didja have yourself a little accident there?\"\n\nJ.T. and I looked to where Ray was pointing. I smirked again, and J.T. gave me an accusing grin when we saw what was plainly a large wet spot on my shorts, right over the mouth of my pussy. Due to the way I was sitting, those tiny shorts were sucked directly into my drenched pussy. This time it was more like a g-string, with definite lippage peeking out on either side of the narrow strip of nylon.\n\nDeciding to tease them, I subtly spread my legs.\n\n\"Ray, I know you're drunk and all,\" I smiled, \"but you might want to learn to develop some sort of edit function between your brain and your mouth. It's really not polite to point at and talk about a girl's body like that.\"\n\n\"Huh?? Since when? You've been running around here naked every night, and now I'm not allowed to talk about your body?\"\n\n\"Yeah, what's up with that?\" laughed J.T. \"And what's up with that?\" he added gleefully, going right back to the sight of my obviously drooling pussy.\n\n\"What can I say? It's a hot book,\" I said, holding up my vampire novel. I really didn't want to get into the whole Dirk thing with them.\n\nNot then, and maybe never.\n\nAfter peeling off my top and shorts, I climbed under the covers, laughing to myself over the hungry-dog looks they gave me when I bared my breasts to them. \"Good night, guys,\" I grinned.\n\nA few minutes later the lights were off, and for the first time I let J.T. fuck me with Ray in the room. I was facing Ray while J.T. took me from behind, but it didn't matter since Ray was already sawing logs.\n\nReally, though, none of that was the uncomfortable part. I'd quickly adjusted to doing whatever I wanted in their little dorm room. Although I wasn't blatantly flaunting myself to Ray the way I had that first day, I did simply begin to dress and behave the same whether Ray was there or not.\n\nNo, the uncomfortable part came when we did our auditions for the play. First off, I quickly discovered that this wasn't merely an Off Broadway play, it was a way Off Broadway play! Talk about low-budget, and what a crappy theater! Here I was, imagining myself in a slightly smaller scale \"Phantom of the Opera.\" Instead, this place was off of some alleyway in Times Square. The theater only held maybe a few hundred people. Still, it was a professional play, and if I landed the part I would at least have that on my r\u00e9sum\u00e9, along with a little extra spending money.\n\nThe initial thing that made it difficult was when Katherine politely let J.T. know she wouldn't be able to use him in the play. He was definitely bummed about it, though he seemed genuinely happy for me when Katherine said she was excited about my potential.\n\nThings really got weird at my second audition, a couple of days later. J.T. came along again, and holy shit but was his face something to behold when Dirk walked through those double doors.\n\nPoor J.T., he looked like someone had just run over his dog.\n\nKatherine waited until we were all together before telling us the game plan. \"Jen, I want to try having you do a scene with Dirk here. Dirk, this is Jen. Jen...Dirk.\"\n\n\"No need for introductions,\" Dirk said. \"We went to the same high school. We've already done a couple of plays together.\"\n\n\"Excellent!\" said the always bubbly, hyper-enthusiastic Katherine. \"You guys should already have some familiarity with each other!\"\n\nLong story short, I got the part, and so did Dirk. During the cab ride back to our dorm, that's when things really became uncomfortable.\n\n\"I fucking can't believe it. I just cannot believe it. That asshole!\" said J.T., fuming.\n\n\"What's the big deal? It's not like you really cared about being in this play anyway,\" I said, playing dumb.\n\n\"You're right, I really don't care. I never thought I was gonna get the part anyway. I'm no actor, and I don't look anything like Clapton. I know that. It's him! Dirk! You know how much I hate that guy! Goddammit, I can't believe it! No matter what, I just can't seem to get away from that fucker! First he gets my position on the football team. Now he's going to fuck my girlfriend again!\"\n\nThis was the angriest I had ever seen J.T. It was also the most honest I'd ever seen him.\n\nI tried to soothe his ego a bit. \"Again? J.T., you're the only person I've ever fucked. What's this 'again' stuff? It's a play. It's only acting. Whatever they have us do, you know it won't be real. Come on, we're not really going to be fucking.\"\n\nThat's when J.T. broke down and told me his side of what happened in high school with his girlfriend, the one he said Dirk stole from him. I have to say, it was really nice to see him being a little honest with me for once.\n\n\"How come you never told me this before, especially after Dirk moved in right next to you at the dorm?\" I asked. \"No wonder it drives you crazy to hear him constantly fucking all those girls.\"\n\n\"Yeah, you're telling me. That guy is beyond lucky.\"\n\n\"J.T., please, as if you've ever been lacking in the frequent-fucking department. You've been having just as much sex as he has, ever since I've known you. Before you started fucking me you were doing a different girl every week, and we both know you haven't stopped now that we're together. Even after I let you fuck me - even after I let you turn me into a total slut - you still fuck plenty of other girls. You have nothing to complain about.\"\n\nHe continued silently fuming, until eventually his expression softened. \"I know he's going to fuck you, Jen. You know it, too.\"\n\nHoping I was gauging his mood correctly, I grinned mischievously. \"Maybe I should just let him fuck me. I should at least encourage him with a little teasing and flirting, don't you think? Seriously, would that be so bad? I mean, god, you're always getting on me about loosening up and becoming more flirty and adventurous. You can't deny you love it when I let Ray see me.\"\n\n\"That's Ray, not Dirk. Ray's my friend, and he's not trying to fuck you.\"\n\n\"How do you know he's not?\" I asked coyly, feeding the fire.\n\nJ.T. just looked at me.\n\nDamn it, I couldn't keep it going. First my lips curled into a shaky little grin, then I tried to suppress a giggle, and finally we both laughed.\n\n\"Okay, fine, Ray isn't trying to fuck me...at least not yet, anyway. He should be, though, so why isn't he, especially after I practically offered him my pussy on a silver platter! Aren't I hot enough?\"\n\n\"Jen, please. Ray would fuck you in a heartbeat. That's about how long he would last, too, if you ever let him. He's absolutely in lust with you, and you know it.\"\n\nGrinning evilly, he was back to being his usual J.T.\n\n\"Sounds to me as if you kind of like that idea,\" I said. I was fishing; deflecting and fishing.\n\nJ.T. thought about it for a few moments. \"Do I actually want you to fuck Ray? No, I can't fully say that. I'm not sure there, but yeah, I do like the way you've been acting so much sexier with him lately.\"\n\n\"Oh, come on, who do you think you're kidding? When I was naked and wrestling with Ray, you totally got a huge boner. You got another one when you saw him staring at my pussy in my little shorts. I know you like the idea.\"\n\nLetting that one hang there, I flashed him a teasing grin.\n\nBy saying nothing, he admitted I was right. I took another chance...\n\n\"What if Ray had fucked me that first day I got naked for you guys? I was right there on his bed, totally spreading my legs for him. I pooched my bare ass way up high, and I even pulled it open to let him look. Most guys would've considered that an obvious offer, so what would you have done if Ray had gone ahead and fucked me?\"\n\nJ.T. quickly deflected. \"Would you have let him?\" \n\n\"As turned on as I was, and if you didn't mind? Yes, I would have let him fuck my brains out, but that's not the point,\" I said, volleying it back. \"We're talking about you and the way you like to show me off, and how far do you want to go with it? Would you have let Ray fuck me? Does that get you off, the idea of your friends seeing me naked and fucking me? I know on some level it does. Your hard cock always says so.\"\n\nNoticing the conspicuous silence, it suddenly hit me that we were having our lurid discussion in the back seat of a moving taxi cab! I glanced forward, and the leering cabbie was scoping me in the rearview mirror.\n\n'Whatever,' I thought. 'This is my life now. These things are going to keep happening to me, so I'd better just get used to the idea.'\n\nI looked over at J.T., my impatient stare pressing him for an answer. Truthfully, I didn't even care about his answer. I just wanted to avoid having him turn it back on me.\n\nI guess I really am learning more and more every day. As I become more openly sexual, I'm learning about these little verbal deception games. I'm even beginning to understand how J.T. must feel all the time, since he's always having to lie, spin, and change the subject!\n\n\"I don't know, Jen,\" he finally said. \"I like the idea of you being so hot, especially the way you go naked in front of us and all that, but I don't know how jealous I would be if you really did it with someone else.\"\n\n\"You might be okay with it if it was Ray, but probably not Dirk,\" I offered.\n\n\"Yeah, I guess,\" he said, not very convincingly. \"I hate Dirk. The more I think about it, though, fuck, maybe I do like the idea of him seeing how hot you are...you know, how amazing you've become lately. You're way better-looking and much sexier than any of his girlfriends, so yeah, I guess I like the thought of showing you off to him. I'm sorry, I know that's 'shallow' of me or whatever, but it's the truth. The more you make me think about it, the more I like the idea of him seeing what I have, okay?\"\n\n\"But you're still not sure that you want me to fuck him, just like you're not sure whether you want me to fuck Ray.\"\n\n\"Yeah, maybe. Fuck, I don't know. I don't even think I care if you fuck Ray. He's just...Ray. It wouldn't mean anything to you, so it wouldn't mean anything to me either.\"\n\n\"J.T., you seem to be forgetting something,\" I said, a little shocked by his cavalier attitude. Oddly, though, I also realized I wasn't angry, and that surprised me. 'I'm really starting not to recognize myself,' I thought.\n\nHe gave me a challenging look. \"What's that? What am I forgetting?\"\n\n\"Uhhh...duh! Hello?! You're the only person I've ever had sex with...remember? I may be loosening up about how I dress and flirt around the dorms, but it's not like I've suddenly started fucking tons of guys! Sex is still a big deal to me, you know. I was a virgin just a few months ago, or have you already forgotten that too? Jesus, J.T., not all girls are like your porno sluts!\"\n\n\"So you're saying you'd fall all in love and stuff with Ray just because you had sex with him? If I ever see you two in bed together it would mean you've fallen for him, and you're gonna dump me?\"\n\nThat one actually stopped me in my tracks. \n\n\"Umm...maybe,\" I said, hesitantly. \"I don't know! Isn't that what it's usually supposed to mean when a guy finds his girlfriend in bed with another man? If I'm having sex with someone, isn't it supposed to mean that I feel something for him?\"\n\n\"It's just fucking, Jen. It's just sex.\"\n\n\"Is that all we do?\" I asked pointedly. \"Just sex...just fucking? It could be anybody, and it wouldn't matter?\"\n\n\"You know what I mean.\"\n\n\"So, okay, if it's 'just fucking' with Ray, why would it be any different for you if I let Dirk fuck me too? I barely even know him. By your logic, it'd be 'just fucking' with either one of them. As long as I don't have strong feelings for the guy, I can fuck anybody I want, and you shouldn't care.\"\n\n\"It's different with Dirk,\" he said.\n\nI noticed his responses were becoming clipped. Also, his voice was losing its confidence.\n\n\"Different, how? Ray or Dirk, either way it ought to be 'just fucking' for me, according to you. If it's 'just sex,' why would you care? That's what you do, right?\"\n\n\"Not with you, Jen. You know that,\" he said, his voice at least rising in pitch.\n\n\"Uh-huh. Okay, so if I have this straight, you don't mind at all if Ray and I have sex, but you're not sure how you'd feel if I let Dirk fuck me. On one level you like the idea, while on another it scares you.\"\n\n\"I never said I was scared. I said I hate the guy, and I'm just not sure what I think, other than it would be cool for me to have him really see how hot you are. You being with him that way, you know, in the play, I like the idea of making him jealous, okay?\"\n\n\"You just aren't sure yet about the idea of us having sex.\"\n\n\"Yeah.\"\n\n\"Okay, what about just fooling around, though, even if it's only acting? This all started with you saying he's going to fuck me, but right now that's neither here nor there. What we know for certain is that he and I are going to be performing simulated sex in front of a live audience - including you at some point, I would hope. Watching us, how are you going to feel? Sweetie, we're going to be fully making out and fucking. Sure, we'll only be pretending to fuck, but we have to make it look good, and we're going to be making out for real. We can't fake that. So, knowing all this, do you want me to tell Katherine I can't do the play?\"\n\n\"No, don't do that. It would be totally shitty of me to make you quit. Even I'm not that big of a jerk. I know you want to act, and being in this play could turn out to be a really big deal for you. Whatever happens, I'll just have to live with it. Do me a favor, though.\"\n\n\"What kind of favor?\" I asked, impressed by his sudden change of attitude. 'Wow,' I thought. 'He actually can be a little mature sometimes. Who knew?'\n\n\"Just don't let him enjoy it too much, okay?\" he grinned. Pinching my nipple, he made me squeal with laughter.\n\n\"Look, if I do let him enjoy it, I'll make sure to tell you all about it,\" I said, returning his grin. \"Will that work? Come on, you love it when I turn other guys on. In fact, wouldn't it be better for you if I went out of my way to turn him on as much as I can, every chance I get? He'll be all crazy horny, totally dying to fuck me, but he'll know I'm yours. Wouldn't that be super hot for you?\"\n\nJ.T. just smirked. \"This is about to get weird, isn't it?\"\n\n\"Uncomfortable too, maybe. I don't know whether I'll be able to handle it.\"\n\n\"Oh, you'll handle it just fine,\" he smiled, squeezing my hand. \"You've always been weird. I'm the one who's about to become uncomfortable.\"\n\nWe'd reached a d\u00e9tente. Again...wow. He was right, though. The weirdness was just beginning, and the level of discomfiture would only treble from here on out - for both of us.\n\nAs the taxi made its way through our sprawling campus, I stared out at the mottled gray sky. The rolling grounds were an explosion of leafy colors, and kids just like me were everywhere. I saw groups of students laughing and gesturing wildly to each other. Girls were scurrying around, chatting excitedly on cell phones. Stealing a moment of intimacy beneath a blooming cherry tree, a cute couple kissed while making love with their eyes.\n\nThey were all just like me. They were kids struggling to grow up; kids trying to forestall ever having to grow up. Knowing how uncertain we were about the prospect of life beyond the safe cocoon that was our insulated little college world, most of us wanted to hang on to being kids as long as we could.\n\nThen it dawned on me that no, most of them probably weren't much like me at all. I'd only just turned eighteen, and already I was throwing myself into the deep end. Things were about to become really intense.\n\nWatching the last vestiges of my innocence reflected in the faces of all those carefree students, I thought, 'Welcome to growing up, on stage in New York City. You wanted this, Jennifer, and now you're going to get it.'\n\n~ ~ ~\n\nWooo, a professional play is nothing like our old school plays. \n\n'Hectic' would be the word. Everything's hectic, with everybody always seeming to be in a huge hurry. Everyone is constantly drinking coffee, and practically every last person smokes. There sure are a lot of bitchy people, too. I guess it's the fact that this is how they're making a living. There's more pressure, so the petty jealousies and competitiveness go through the roof, at least compared to how it was in school plays. Those were just fun times; little more than extended slumber parties.\n\nThis is obviously serious business.\n\nIt's not all bad, though. Katherine, the director, is just an absolute doll. She's so sweet and friendly, and always totally supportive. While everyone else is running around pissing and moaning, she's this wonderful flat sea of calm in the middle of a raging storm. Of course I tend to hang out with her most of the time. She immediately seemed to take me under her wing, and I was more than happy to let her. Whatever she wanted me to do, I was going to do it. I just knew she would look out for me.\n\nThe first full rehearsal was kind of fun. The producers showed up, and all they wanted to see was Dirk and the band perform an actual song. That was their big thing. They didn't want the play to get trashed in the press for something as obvious as a poor performance by the band, or the Clapton character sounding horrible. It took a while, but Dirk was right, he does a fairly awesome Clapton. With the way they did his clothes, hair and make-up, along with his nailing of Clapton's body language, yeah, he was pretty deece, despite being ten years younger than Clapton was during the \"Layla\" era. His singing voice even sounded a lot like Clapton's, and I was shocked at his British speaking accent. It was really good!\n\nI swear to god, once Dirk belted out \"Why Does Love Got To Be So Sad,\" I became totally wet. I had never heard that song, but he showed me the lyrics before rehearsal. When he actually sang it that day, staring at me as he cried out like he was in real pain, I knew I was in trouble.\n\nI'm having fun, though, especially since they always have me wearing \"period correct\" clothes. What that means is I get to wear real hippy chick stuff! Cool! They usually seem to dress me up in a poet's shirt and a long, flouncy peasant skirt, though sometimes I'll be in a micro-mini dress or pencil-thin leather pants, like I'm some posh Londoner. They're adamant that I never wear a bra either, which is so killer!\n\n\"Jen, you're a lot more stacked than the real Layla, you know,\" Katherine grinned one day before rehearsal, then she giggled, saying the critics would probably be willing to overlook that fact in my case.\n\nI love working with Katherine. She's just so great to be around. Right off the bat she became like a big sister to me, and my new best friend. I think she likes me, too. I mean she likes me. The way she sometimes looks at me, I can tell.",
        "I don't mind. Actually, I love it. \n\nOne evening Katherine took Dirk and me aside to go over the script. \n\nWow. I mean...wow. There was certainly a lot of nudity, that's for sure. I was to be completely topless for three scenes, and in another we were supposed to trade off giving each other oral sex! There was also one where we climb into bed together and fuck, and not just missionary either. They wanted us to do it in a couple of positions, including having me on top, riding him like crazy.\n\nKatherine explained that for some scenes the lighting would be really dim, or almost completely dark. Either that, or we'd be covered by the bed sheets. Or both. She said the lighting would be super important during this one scene that had us ending up in a \"sixty-nine.\" I didn't want to tell Katherine, but I didn't even know what that meant.\n\nReading the directions in the script, I soon figured it out! Jesus! I hadn't even done that yet in real life!\n\n\"This is all supposed to be faked?\" asked Dirk. He seemed dubious as to how we could possibly fake some of this stuff without looking totally lame.\n\n\"Yep,\" she said. \"Actors perform simulated sex scenes every day, even in live theater. Most of the time, they're simply covered with a sheet or whatever. When that's not possible, it's usually just a matter of lighting and positioning. The point is to make it look like they're really doing it, without showing the audience too much.\"\n\nShe explained that some of the scenes required Dirk to be fully nude, though he probably wouldn't be facing the audience then. She was still debating that one. She added that although I would be topless, and the audience would see my bare breasts, I would always at least be wearing panties.\n\nOkay, I was prepared for that. I knew there would be partial nudity, and for a woman that usually means going topless, but I was pretty shocked that Dirk would be totally naked.\n\nOne of the first scenes she had us rehearse was an argument that ends with the two of us flinging ourselves into each other's arms for a long, hot kiss. She wanted to see how convincing we looked together. \"Okay, that was great. Now let's do it again. Make it real,\" she kept saying, almost like a mantra.\n\nShe always wants us to be more convincing. Above all else, that's her biggest concern. No matter what we do, her comments follow that same theme. \"Dirk, that's not how you would do it to her in real life, is it? Do it the way you'd really do it!\" Or her favorite one: \"Jen, you want this man like crazy, but you're conflicted. Show it. Show him. Show the audience. Show us how desperately you want him!\"\n\n'Now isn't that ironic?' I thought, smiling to myself.\n\nShe's always so wildly supportive, constantly saying things like, \"Jen, I know you can do it! This is a piece of cake for an actress like you!\" \n\nShe is just totally awesome. Not only does she always make me feel like I can do it, she absolutely makes me want to do it. She shows so much confidence in me, I never want to disappoint her.\n\nTelling J.T. and Ray about the script and the first rehearsal was...interesting. Ray couldn't believe I was going to be giving a \"blowjob\" on stage. He thought it was the coolest thing ever, especially once I told him that Dirk would be returning the favor by going down on me. Slobbering like an excited basset hound, he begged me to sneak him into the next rehearsal. He was only half kidding, and I think the half that was kidding was only kidding. J.T. actually grunted when he found out that Dirk would be fully nude with me, at least for one long sex scene.\n\nHe asked, \"If you're always supposed to keep your panties on, why does he have to be naked?\"\n\n\"Maybe Katherine just wants to see his big dick!\" laughed Ray, which made me laugh too. Even J.T. couldn't help but snerk over that one.\n\n\"I don't really know,\" I said to J.T. \"All I know is she thinks it's important for believability, which is always her big thing. She said it would mainly be important for the sixty-nine scene. Or maybe it was the morning sex scene? I'm not sure, actually.\"\n\n\"You're gonna do a sixty-nine scene?!\" exclaimed J.T. \"Do you even know what that is?\"\n\nSince Ray was listening, I was going to lie, but I decided not to. \"No, I didn't, not at first,\" I admitted, blushing. \"Then I read the script some more, and it was pretty easy to figure out.\"\n\n\"You always were a smart girl,\" Ray quipped. \n\nJ.T. had a pained expression, as if to say, \"We haven't even done a sixty-nine yet!\"\n\nI just shrugged. What could I say? What I did manage to offer was that it was only acting; it wasn't as if it would be real.\n\nJ.T. finally blurted out, \"Why is all this crazy sex stuff necessary anyway? I thought it was supposed to be a musical, with just some occasional nudity and a little playing around beneath the sheets.\"\n\nI told him what I knew. \"They want something exciting and different; something that will scandalize an audience and create a stir. They say this hasn't been done before; this story, told this explicitly. They think it brings these people down to earth, these gods, Eric Clapton and George Harrison. Rather than be so polite about it, the way people always are when they approach these kinds of subjects, the writer and the producers and Katherine all agree that by showing the real human element of the lust between Clapton and Layla it will make the story much more believable. They also figure it will be a whole lot more exciting for the audience. They're banking on the Perv Factor to help put 'butts in the seats,' as they put it. Anything to get more publicity, really.\"\n\n~ ~ ~\n\nBefore the next rehearsal, Katherine took Dirk and me aside again. \"Okay, let's start getting you two used to being with each other without any clothes on. We're going to have to do it eventually, and I want you guys to look natural when you're together. You need to be able to move around on stage without looking like you're terrified of being seen naked, either by each other or especially the audience.\"\n\nThe first thing she had us do was go to our dressing rooms and change. She wanted me in nothing but panties and a little silk robe, while Dirk was to slip into a pair of matching silk pajama bottoms.\n\nWhen we came back out, she cleared the stage except for one lighting guy.\n\n\"Ignore him. Get used to ignoring him, and everyone else too. It's just you two, always,\" Katherine said.\n\nShe had us recite our lines to a scene that comes to a climax when I cry out to Dirk, \"You know I love you, but we just...can't!\" This was to be followed by Dirk pulling me in for a smothering kiss, silencing my protests. That's exactly what he did, and he sure dove in with gusto! While crushing our lips together, he held me close, forcing my breasts against his chest. Our kiss was only supposed to last about ten seconds, but Katherine must have lost track of the time because she let us go on for what seemed like forever!\n\nWhen we finally broke the kiss, she smiled with a look of obvious satisfaction. \"That was good. Give me more.\"\n\nHe kissed me again, and this time I felt his tongue trying to slip between my lips. When I tentatively parted them, he slid right in; from there I couldn't help myself. Opening all the way, I moaned into his mouth, then we simply started tongue-lashing each other. As we were kissing, I could feel his huge dick pushing into me. He moved his hands down to my barely covered bottom, pulling me against his cock. I pressed my breasts to his bare chest, and we basically just made out in front of Katherine.\n\nIt wasn't long before his hands slid beneath my robe and directly onto my ass, then he began squeezing my bottom and grinding his hard cock right into my pussy. Finally Katherine said, \"Okay, stop. That was excellent. That's what I want. Always, guys, exactly like that. Jen, that was perfect. At first you seemed a little uncertain, then you gave your mouth to him, and your body totally softened. Dirk, you couldn't help yourself. You just want to devour her! Again...perfect! You two look gorgeous together!\"\n\nI was fucking flying. That was so hot!! I just wished she hadn't stopped us. I absolutely loved when Dirk slid his hands onto my ass. Katherine didn't even tell him to do it, which only made it that much hotter. It was like making out at a drive-in movie, with my best friend watching from the front seat.\n\nGod, it was so sexy. My pussy was screaming. \n\nAs soon as Katherine had us stop, her eyes and mine immediately locked on to Dirk's enormous erection, which was making just a crazy tent in his silk pajamas. He tried to turn away from us to hide it, and Katherine laughed, \"Awesome! You two are so awesome together! That's the kind of passion I want! See what you did to him, Jen?\"\n\nOh yeah, I sure saw. I felt, too.\n\nWhen we went to change back into our normal clothes, Dirk came to my dressing room. He was still wearing his pajamas, and I was sitting at the vanity in my little robe. I couldn't help it; I had to check out his cock again. Though he wasn't fully erect anymore, he was definitely at least semi-hard, which I could clearly see in his skimpy pajamas. As I watched his long, thick shaft bob and sway beneath the thin silk, the circumcised head looking like a ripe apple just waiting to be plucked from the tree, my mouth watered. I think I even bit my lip.\n\n\"That's what I wanted to talk to you about,\" Dirk said, following my gaze down to his rising erection. \"I know this isn't professional. I'm sorry, I didn't mean to get like that out there. I just couldn't help it.\"\n\nI was actually touched by his seeming sincerity. Either that or I was just touched in the head, blind to his bullshit.\n\n\"It's perfectly okay, Dirk. Katherine told me to expect it. She said it happens all the time, and it's just part of the job. Anyway,\" I grinned, never taking my eyes off his jutting bulge, \"who said I mind?\"\n\n\"Really? You don't mind?\"\n\n\"Dirk, why would I? You're a great-looking guy, and isn't it usually considered flattering to a girl when a man reacts to her that way? I mean, come on, we were pressing together and totally making out, and our hands were all over each other. I think I'd mind a lot more if you didn't get hard for me. Besides, Katherine said she loved it. That's what counts, right?\"\n\n\"Yeah, I guess so,\" he grinned, appearing to regain a bit of his usual spark.\n\nThough I enjoyed his moment of humility, what I really like about Dirk is his sexy confidence; that, and his cock. I already knew that I liked his spectacular cock a whole lot. Still, it was great to see his playfulness return.\n\n\"Now, if you wouldn't mind...\" I said, slowly untying my robe, giving him his cue to leave.\n\nHe smiled, reluctant to go.\n\nTurning my back to him as I slipped the wispy silk from my bare shoulders, I watched him in the mirror. When our eyes met, I grinned. \"Scoot. Don't be so impatient. You'll have plenty of opportunities to see me naked.\"\n\nHis cock rose majestically in his pajamas, and he continued to smile. Damn. If he hadn't left my dressing room then, I would have let him take me right there.\n\n~ ~ ~\n\n\"That had to be the funnest thing ever!\" I gushed, writing my girlfriend Steph an e-mail that night. She just couldn't believe all the things that had happened with me in the past few weeks. As I sat at the computer in J.T.'s room while he and Ray watched TV only five feet away, all I had on was a pair of really tiny panties. My going topless around the boys was an amazing thing to Steph, yet anymore I didn't even think about it.\n\nI had learned there was a fine line regarding what I should tell the guys about my rehearsals and, maybe more importantly, when I should tell them. Sometimes J.T. would seem to become agitated; other times he'd just turn super horny. I liked it a lot better when he would get horny, yet I had to be careful with it because we'd progressed to the point that he was openly fondling me right in front of Ray. At first I was reluctant to let him do that, but then he'd say, \"Baby, you're going to have hundreds of people watching you make out and have sex every night. You'll be constantly groped, licked and fucked in front of everyone you know, so why worry about this?\"\n\nWhen I eventually had to admit he was right, it was like I'd declared open season on my body. I would tell him that Dirk squeezed my bare ass or whatever, and if Ray wasn't there he'd go into a frenzy, fucking me like a maniac! Soon enough I was letting Ray watch J.T. finger my pussy and play with my breasts while I told them about that night's rehearsal. The guys always begged me to take off all my clothes for \"story time,\" until it became this hella fun game where they would wait to see whether I'd stay partially dressed or get completely naked the moment I walked through the door. If I stripped nude, they knew I was going to have something really juicy for their listening pleasure.\n\nJ.T. would always want to fuck me while I recounted the sexiest parts of my day for them, and finally one night I let him. After coming 'home' and immediately getting naked, I was describing how Katherine kept putting her hands on my ass during one of the make-out scenes. She was positioning me at different angles to the audience, trying to come up with the best way to hide Dirk's gigantic erection. At least that's what she said, but everyone laughed when a stagehand shouted, \"Katherine, we all know you're just using this as an excuse to grab Jen's ass!\"\n\nKatherine laughed too, calling out, \"Yeah? So? You're just jealous!\" Grinning, she gave me an affectionate pat on the bottom. \"They always have to spoil my fun,\" she whispered.\n\nJ.T. was finger-fucking me the entire time I was telling the story, and Ray was hanging on my every word. I have to say, I loved the way he was totally dying over me. He seemed spellbound, just staring at my breasts and pussy; it was like he couldn't decide where to look. Eventually J.T. and I went ahead and slid under the covers, and J.T. took off his shorts. I was on my stomach, my head cradled in my arms, with my horndog boyfriend stretched out on top of me. Since I wasn't saying no, he immediately drove his cock straight into my pussy. God, he was so turned on; his dick had never felt that rock solid before. Without any build-up, his hips started bombing away at my bouncing ass. He was fucking me hard and fast; we were making no effort to hide what we were doing. Though Ray couldn't see the actual penetrations, he certainly heard the rhythmic sounds of our bodies slapping together, and J.T.'s butt moving up and down beneath the sheets had to be more than obvious.\n\nThe whole time we were fucking I was writhing on the bed while pouring on the hot, breathy sex-talk, trying to drive them both completely out of their minds. \"Mmmm, yes, fuck your little slut's wet pussy...make me cum on your hard cock...\" I moaned, throwing off the sheet so Ray could watch me take my pounding doggie-style even as I continued to pant vivid descriptions of Dirk absolutely molesting my aching tits and bare ass only a couple of hours earlier.\n\n'So, here I am,' I grinned to myself, turning my body to give Ray a clear view of my raised ass being split by J.T.'s driving length. 'I have one guy's cock buried deep inside me, another guy with a huge hard-on is watching us fuck, and they're both getting off on hearing about a third cock that was pushing into my pussy all night!'\n\nIt was just crazy.\n\nMaking it even crazier, Ray began openly beating off. Though he kept himself covered by his sheet, he was obviously spanking away. Eventually he shot me this awesome look of desperation, as if to say, \"I can't help it!\"\n\nWhile J.T. continued fucking me, I just smiled, nodding to Ray that it was okay. \"Keep going,\" I mouthed. When his arm started jerking faster, I grinned my approval.\n\nAfter letting loose with a killer groan as he finally shot his cum inside me, J.T. collapsed onto my back. Rolling away, he curled up against my side. I turned towards Ray, who was stroking himself a little more slowly. He kept staring, his expression pleading.\n\n\"I'll be back in a bit,\" I whispered to J.T.\n\nNaked, with a pussy dripping fresh cum, I moved over to Ray. Kneeling by his bed, I gave him a warm smile while taking a handful of covers. \"May I?\" I asked softly.\n\nLust fought with terror in his eyes, and I guess lust must have won. He nodded, giving me the okay.\n\nI pulled back the covers, and there was his hard cock in his hand. It was about the same length as J.T.'s, but a lot thicker. The veins were just intense, they were bulging so much. After removing his hand from his throbbing dick to place it gently on my breast, I took his warm cock into my mouth. My plan was to give him the best blowjob ever, and I started going down on him. The thing is, I didn't even complete one up-and-down sucking motion before he erupted on my tongue while crying out, \"Fuuuuck, Jen!!\"\n\nThough I tried to keep up and swallow each blast, there was so much cum that some of it spilled from the corners of my lips. I kept sucking, thoroughly cleaning every inch of his thick shaft; also, since he came before I could even get the whole thing inside, I still wanted to take the rest of it. One good thing was that he seemed to relax a little once his orgasm was done. I could tell, because it no longer felt like he was trying to rip my nipple off! My intent was simply to enjoy having his entire cock in my mouth, yet it soon became apparent that he wasn't softening like J.T. always does after I swallow his cum.\n\nNope. Ray stayed hard as steel.\n\nTaking the whole thing down, I went seriously crazy on it; licking it, sucking it, nibbling on it, swallowing it deep into my throat. I wanted to make sure that no matter what he would always remember the first time I really sucked his dick. Finally, after giving him a good, long, wet, proper blowjob, I pulled away. \"Hope you don't mind sloppy seconds, but I still haven't cum yet...\" I grinned, sliding my way up his body. His expression was one of stunned disbelief when I straddled his hips before placing his amazingly hard cock at the entrance to my dripping cunt.\n\nYes, I was thinking of it as my cunt, not merely my pussy, and my cunt wanted fucking. My cunt hungered for another huge load of cum, just like the one that same cock had rocketed into my tummy.\n\nMost of all, my cunt just wanted to cum from the pounding of a wickedly hard erection.\n\nSpreading my soft pink lips, I eased myself down onto what was only the second cock ever to go inside me.\n\n\"Fuck me, Ray. Cum inside me again, the way you came in my mouth,\" I moaned. Taking his hands, I set them on my bare ass and had him spread it open as I drove up and down. Soon enough he got the gist of what I wanted, which was for him to hold me by my bottom and wildly toss me around on his thrusting cock. When his fingers began to slide into my crack, towards my tight little asshole, I couldn't help but arch my back for him. Moaning even more hotly, I hissed, \"Yes...do it...put your fingers in my ass. Fuck me there, too...mmmm...while your big cock fucks my pussy....\"\n\nHe hesitantly began to explore my ass, so I reached back and guided his thick middle finger directly into my tiny star while lowering my breast to his mouth. When he bit my nipple, I exploded in a huge cum before crashing against him.\n\nFor the next twenty minutes we fucked like porn stars. I took him every way imaginable; riding him hard, letting him drill me from behind, rolling onto my back and spreading my legs wide...just loving his sexy cock pounding deep inside my pussy. \"Harder,\" I panted into his mouth as we kissed. \"Cum inside me, baby. Fill my hungry cunt, and keep fucking me in the ass....\"\n\nBam. Crying out even louder than the first time, he totally lost it. Judging from his whole-body spasms and the incredible flood of pulsing warmth spreading throughout my happy pussy, he must have unloaded at least five solid blasts of thick, creamy cum inside me.",
        "I thoroughly loved every second I spent in his bed. The main thing I loved wasn't the actual sex; it was the control. I was learning how to make men cum, and also how to make myself cum. Even better, I had grown to love cum; in my mouth, filling my pussy, glistening on my breasts...anywhere. As Ray was fucking me, I realized I wanted it in my ass, too.\n\nNow I almost can't wait to get fucked in my ass. Though I'm barely eighteen, I think I'm already learning how to be a great lover. One thing for certain is that I know I adore having sex.\n\nI also learned that at least where Ray is concerned, J.T. was absolutely right. It really was \"just fucking.\" Without a doubt, it was only sex. We totally fucked each other's brains out, and I was perfectly fine with it. J.T. supposedly fell asleep and missed the whole thing, but whether he was actually watching or not didn't even matter to me...and that's the whole point. I can fuck someone just for sex. I love to fuck, and I obviously don't need to be in love to do it, or to enjoy it. I simply love the sheer power of it. I don't love J.T., and I don't love Ray either, yet I love having sex with them.\n\nI just have to be turned on, then I need someone who will fuck me well enough to make us both cum.\n\nMaybe I am becoming a slut?\n\nI decided that I probably am, and also that I love it. If this is what being a slut is, fine, I'm a slut. Sign me up.\n\n~ ~ ~\n\nThe next rehearsal was amazing.\n\nFor starters, Katherine had us practice the first blowjob scene. It cracks me up just to say that!\n\nThe first blowjob scene.\n\nI mean...really? The first blowjob scene? What, one wouldn't be enough?\n\nGod, Steph was going to die laughing.\n\nAnyway, Katherine had us recite our lines, then she began positioning us to see how we would look to the audience. Trying different locations and body angles, she'd have me kneel before him and lean down over him; sometimes by the couch, other times beside the chair, or maybe next to the bed. Nothing seemed to work for her, so she kept moving us all around the stage.\n\n\"Guys, I want to try something,\" she finally said. \"What's bothering me here is the obvious fakeness of this scene. We're not doing porn, so I can't have it look as real as I would like. Still, we can do this. I know it's different from what we talked about, but I really think it will work better. We need to use lighting to help us imply what we can't actually show.\"\n\nShe called out to the lighting guy, telling him to watch for her signal before gradually darkening the stage.\n\n\"Okay, Dirk, I want you on the couch, leaning back against the armrest. Jen, I need you kneeling beside him. I'm thinking you can start by kissing his chest and stomach. When he reaches over to turn off the lamp, slowly undo his pajamas. While you're doing that, the main lights will dim. You only need to make the initial motion, like you're undoing the snap. Once Dirk clicks off the lamp and the stage lights go down, you'll be in relative darkness; not complete darkness, though. I still want the audience to be able to make out your shapes. That's when you begin sucking his dick.\"\n\nI laughed, and she did too. \"Just use your body to shield what you're doing. Seriously, I need it to look like you're really sucking his dick. I want you to go totally crazy on it. I want to see your head and shoulders moving up and down, and I definitely want to hear your wet sucking sounds. This is an intense, sexy scene. It's going to last for at least a couple of minutes. Finally, with Dirk unable to take it any longer, he pulls you into the sixty-nine. Let your little robe hang down; once you're on top, it will cover most everything you do. The sixty-nine should last for another few minutes, and I want you both to have killer orgasms, especially you, Jen. You're being taken from your lover. You need to be overwhelmed. Dirk's gotta give you a damn good reason to leave your man, who's not just any man. He's a fucking Beatle! So, after you explode in a wild cum, you'll collapse on top of him before spinning around to kiss him again, then we'll completely darken the stage to end the scene. When the curtain drops, you guys go get ready for the next one.\"\n\nShe gave me a big grin. \"Got all that? Again, I really need you to sell it. Passion, guys, passion. Make us believe it.\"\n\nYow. Dirk and I were blown away. This time he didn't even bother to be embarrassed; he simply let his cock grow until it was jutting out like a baseball bat as Katherine and I openly stared at it. Eventually dragging my protesting eyes back up to his face, I gave him a happy smile. Katherine, though, she just bopped the head of his insane erection with her clipboard, laughing, \"That's the spirit! You desperately want to drive that huge dick inside this young, beautiful girl, and who could blame you? Now let's do this! I want it hot!\"\n\nAfter reciting our lines, we started kissing next to the couch, with the lights medium-dim. Dirk was so out-of-his-mind horny that he wasted no time in jamming his silk-covered cock straight into my pussy, then his tongue was in my mouth. I wasted no time either, immediately pressing my tits and pussy against him while sucking his tongue like it was a miniature cock. Right away his hands went beneath my robe, lifting it as he fondled my ass. All I had on were white bikini panties; when he slid his hands inside, fully cupping and squeezing my bare bottom, Katherine exclaimed, \"Excellent! That looks fabulous! Awesome ass, Jen! Keep going!\"\n\nI couldn't help it. I giggled into Dirk's mouth at that \"Awesome ass, Jen!\" comment shouted across an auditorium. Everything with Katherine was \"awesome,\" and she was such a nonstop cheerleader. I totally loved that about her.\n\nDirk let me finish giggling before whispering, \"She's right, though, Jen. You do have an awesome ass.\" Nipping my bottom lip, he added, \"And I can't wait to taste it.\" \n\nThat shocked me right back into the moment, and there was Katherine again, calling out, \"That's good! Keep whispering to each other! We can't hear it, so it doesn't even matter what you're saying, but that's what real lovers do. The whispering is great, guys. It's the perfect touch!\"\n\nGiggling again, I whispered, \"Who said anything about tasting my ass, hmmm? There's nothing in the script about eating my ass. You're only supposed to eat my pussy, and I'll always have panties on.\"\n\n\"Who said I was talking about the play? You weren't wearing any panties the other night in the rec room,\" he grinned, pulling back to look me in the eye.\n\n\"Oh...god,\" I moaned. \n\nMaybe I couldn't have everything I wanted just then, but I could at least have something, and I was determined to take it.\n\nTotally spacing out on Katherine's directions, I whispered to Dirk, \"Turn that damn light off already. I need to suck your cock.\"\n\nAfter a brief hesitation, he reached over and clicked it off. Grinning, I went straight to my knees. The house lights dimmed, and boy did they dim! I wasn't expecting it to be so dark! I looked over to where I knew Katherine was sitting, and I couldn't even find her. Turning back to Dirk, I could see him easily enough from the little bit of ambient light coming from the side of the stage. He smiled as I ran my hands up his thighs and across his stomach before bringing them to his cock. I was supposed to have him lean back onto the couch, but first I wanted to enjoy a few moments of exploration, caressing and squeezing his to-die-for dick.\n\n\"Fantastic!\" laughed Katherine. \"Jen, I like your way even better. Keep going with it. Just do whatever comes naturally. You two look awesome!\"\n\nWith my hands returning to Dirk's sexy stomach, I nuzzled my face against his erection. Brushing my cheeks and lips up and down his silky length, I paused to give it a playful growling bite.\n\n\"Hey! No teeth!\" he hissed, grinning.\n\nGiggling again, I bit a little harder. \"Shhh! You just hush, cock boy! You're mine now!\" I whispered, softly mouthing the tip through his pajamas. Knowing that I needed to get on with it, I positioned him lengthwise on the sofa.\n\nThe back and arms of the couch were so tall that nobody to the rear or on either side of the stage could really see him. Only the audience would be able to see him, and it was my job to shield his midsection while pretending to suck his cock.\n\nDebating whether to go for it right away or keep teasing him, I ran my fingertips provocatively along his waistband.\n\nDirk made the decision for me by pulling my head down to his stomach, ostensibly to hide what we were supposed to be doing. Squeezing his hips, I began nuzzling his tightly muscled abdomen with my nose and lips. While moving my face in sensual circles, the thought occurred to me that I never should have cut my hair so short. I wanted to fan it out to help cover us, but my shoulder-length Goth cut wasn't nearly long enough.\n\nNo biggie. During the actual performances Dirk and I will be wearing \"early '70s long hair\" wigs, as Katherine describes them.\n\nOn the plus side, J.T. tells me he likes that he doesn't have to keep moving my hair away to watch my face when I suck his dick.\n\nThat thought made me giggle, which made me giggle even more over the realization that I'm really still just a goofball teenager who giggles at everything. I giggle at the silliest sex stuff, always at the dumbest times. It reminded me that Dirk's slutty girlfriends probably don't constantly giggle like nine-year-olds, the way I do. Well, too bad! I giggle a lot! So what?\n\n\"You are such a retard. What are you giggling over now?\" Dirk whispered good-naturedly.\n\nBeing called a retard on stage by the guy whose dick I was about to suck made me giggle even more! 'God, this is so awesome!' I laughed to myself. \"Sorry!\" I finally whispered. I suppressed my giggling fit by planting my lips on his belly button. He groaned when I stuck my tongue inside and wiggled it around, then I slid my mouth all the way down his \"happy trail\" to his waistband. Using my teeth, I unsnapped the button before giving his cockhead a teasing nip. Once I had the pajamas undone, I just mashed my face into his pubic hair and nuzzled there for a while. His rock-hard cock was to the left of my face, between my head and the back of the sofa.\n\n\"Looks great, Jen! Love the nuzzling!\" \n\nAgain Katherine's shout of encouragement made me crack up. This time I laughed out loud.\n\n\"Sorry!\" she giggled from across the auditorium. \"I'll try to shut up now!\"\n\nDirk whispered, \"Jen, stop giggling already, and suck my cock! Come on, I'm dying here!\"\n\nGrinning, I ran my face along his hard shaft, most of which was still covered by his pajamas. When I made it to the enormous mushroom tip, I nudged the jammies aside with my nose; after baring his huge dick, I pressed my cheek to it, savoring its warmth. Stroking my face back and forth along his pulsing length, I stopped to nip at the junction where the base of his shaft meets his lower abdomen. His cock sprang straight up alongside my jaw, so I turned to it while forming my mouth into an 'O' shape. Placing my lips on the hot flesh, I trailed all the way up and down one side of his thick pole before pressing it flat against his thigh with my cheek. Using my hand to hold it down, I planted a row of kisses on the other side of the shaft, right beneath the throbbing head.\n\nA drop of pre-cum dribbled from the slit. Delighted, I licked his flared crown. \"Yummy,\" I whispered, smiling over the torture I was giving him.\n\n\"Jen, please! Put it in your mouth!\" he hissed in desperation.\n\nI took that opportunity to spin around, placing my panties-covered bottom right over his face. Leaning down, I buried my mouth in his smooth, hairless balls; gently biting them, I tugged on the bare skin.\n\nI let out a shriek when I felt his teeth latch on to my pussy through my panties. He simply took my entire sex into his mouth and began sucking on it! I was so excited that I came almost instantly, completely drenching my panties. I heard him sputtering, trying to find his breath as I humped my trembling pussy against his face. With my ass wildly hopping up and down, he pulled my panties aside to jam two fingers deep into my hot cunt. Once he started fucking me, I flopped my upper body onto his legs, positioning my face and shoulders between his cock and the audience.\n\nGrabbing his dick at the base, I brought it to my mouth; feeding it inside, I took as much as I could and began giving him a thoroughly wet, noisy blowjob.\n\n'Finally, I'm sucking your cock,' I thought triumphantly. When his satisfied groans joined mine within the echoing auditorium, I grinned around his thick dick and sucked even harder.\n\nKatherine clapped excitedly, but for once she managed not to say anything.\n\nI treated myself to two long passes before relaxing my throat and taking his cock all the way down. When I buried my nose in his balls, showing him that I'd taken every inch, I felt his entire body spasm. I held that position, moaning happily as he poured his enormous load into my tummy. Though I wanted to pull back and taste his cum, I just kept my head still, letting him fully enjoy his orgasm.\n\nThere would be other times, I knew. Besides, by swallowing every last drop I left no evidence that we'd really done it, right?\n\nWhen he was finished cumming, I discreetly tucked him away and snapped his jammies closed before spinning around again to stretch out on top of him. Immediately he slid his hands beneath my robe, cupping my ass. I loved the feeling of his big hands on my bare bottom, and I told him so. \"Mmmm, I finally got to suck your gorgeous cock, and your hands feel so perfect on my ass. I think I'm really going to like doing this play,\" I whispered.\n\n\"Me too,\" he grinned between kisses. \"You have an incredibly great ass.\"\n\n\"Oh yeah? Well you have an incredibly awesome cock...maybe even too awesome. I'm going to have a tough time hiding what we're really doing if I suck your beautiful dick every time I see it, which is exactly what I always want to do. We're gonna get busted for sure!\"\n\nThe house lights dimmed to pitch-black. When they came back on, an applauding Katherine shouted, \"Yes! That was excellent! You guys are just awesome together!\"\n\nAfter we were dressed and done for the day, Katherine took us aside for another of her little pow-wows. Grinning, she said, \"Look, guys, I've been thinking. I know, scary, right? Anyway, Jen, that scene was super hot, but realistically any man who was in Dirk's position would want your panties off.\"\n\n\"Definitely,\" Dirk said, nodding sagely.\n\nI just had to laugh. \"Jeez, Katherine! So now you want me to go pantiless, too?\"\n\n\"Well...yes, I do,\" she answered, smiling sweetly. \"In fact, I think I'm also just going to have you take Dirk's pajamas all the way off in this scene. It makes sense for the flow of the story, since the next scene has you both naked in bed. The audience will see Dirk fully nude at the beginning of that one. There's no way you'd put your panties back on after doing a sixty-nine, not when you two are headed to bed to make love. The question is how to do it? Do we have you take your panties off as part of the make-out scene, making a big production of it, or are you simply not wearing anything beneath your robe in the first place? Maybe we get you completely naked during the sixty-nine scene, like Dirk's going to be.\"\n\n\"Don't we still need my robe to help hide what we're supposed to be doing? Dirk has a really big cock, so it's going to be difficult enough as it is to keep the audience from seeing it if he keeps getting hard like this...\" I said, reaching down to grasp his erection, which she could clearly see for herself anyway.\n\nWatching me stroke his firm length, she smiled. \"Sweetie, as long as you're in this show, I'm sure he'll be constantly hard. Okay, you're right, I think we ought to start off by keeping the robe, at least until you're done with the sixty-nine. Here's what we'll do. This will be much sexier. Next time, Dirk, when you're kissing Jen in front of the sofa, reach up beneath her robe and pull her panties down. This is before she gives you the blowjob. We'll go ahead and make it a big production. Nothing's sexier than watching a woman take her panties off, especially when a man does it for her while she's still standing. That one little part, when the woman wiggles her hips to help the panties slide over her ass and down her thighs, then that last part, as she gingerly steps out of them? There is nothing hotter. It's like the dropping of the flag at a car race. It's the final barrier removed...permission granted. Complete surrender. I'm telling you, it's the hottest fucking thing on the planet. It always is. And with Jen's perfect, amazing ass? That would just be super incredibly, awesomely hot!\"\n\n\"Okay, okay!\" I said, laughing again. \"We'll have him take off my panties!\"\n\nKatherine is just a total crack-up, the way she talks a mile a minute like that. She is such a spaz. God, I love her.\n\nStill zipping along at warp speed, she said, \"You have to make absolutely, positively sure to show the audience her ass, Dirk. After she steps out of her panties, slowly run your hands up the backs of her thighs and over that stunning bottom of hers, lifting her robe above her ass with your wrists. Cup it, squeeze it...caress every supple inch. I mean really savor it. Show it off. Let's make her ass a star too. When you pull up her robe, do it like a museum unveiling, super slow and sexy. I want the audience to die from that first glimpse of perfection. Jen, as he's fondling you, make sure to do that awesome little ass-wiggle you always do. Then, Dirk, allow the robe to slip back down, covering her again. Just give us a tease, a tantalizing taste of why you're so fucking insane over this woman.\"\n\nI couldn't believe her! \"Katherine! That awesome little ass-wiggle I always do? What?! I do no such thing!\" I said, completely busting up.\n\n\"Yes, you most certainly do!\" she said, laughing right along with me. \"You know, that awesome little wiggle you do whenever your ass is really happy! When Dirk puts his hands on your hips or ass, you do this mouthwatering little ass-wiggle every time! I swear, it's almost as if your gorgeous bottom just can't help but celebrate his hands being back where they belong. Girl, it's so outrageously sexy, I thought for sure you were doing it on purpose.\"\n\n\"On purpose?! I'm not even aware I'm doing it!\" I said, giggling again like an imbecile.\n\n\"Well, whatever you do, don't stop doing it. Every time you dance your ass that way, I'm seriously tempted to jump out of my seat and run up onto the stage to take a big bite out of your pretty little bottom. Dirk, can you imagine how the audience is going to react when they see it?\"\n\n\"Yes, I can,\" he said, shooting me a knowing leer.\n\n\"Exactly!\" laughed Katherine. Giggling up a storm, she gave me a good swat on the bottom.\n\n\"Fine!\" I shouted, jumping away while laughing like crazy. Holding my hands over my ass as protection, I giggled right back, \"So Dirk takes off my panties, he shows everyone my ass, and whenever possible I should do some sort of little ass-wiggle to make all the pervs like you two happy. Is that about it?\"\n\n\"So far, yep, you've got it,\" she grinned happily. \"Now, Jen, like we said, you can keep your robe on all through the sixty-nine scene if you think it'll help hide Dirk's erection. Otherwise, if you want to take it off, go ahead. I won't mind. It's not that big of a deal either way, since we're mainly counting on the lighting for coverage. Somewhere during that scene, though, maybe after you've both cum, I want you to pull your robe off as slowly and sexily as possible before you turn to stretch back down onto Dirk, face to face. The side-shot silhouette of you taking off your robe will look miraculous with your succulent tits and smooth, round ass, plus I want you both nude in the next scene anyway.\"",
        "With a glowing smile she kissed me on the cheek. \"Sweetie, of course we still have lots more of these exquisite little tortures planned for you later!\" Pulling me close for a warm, playful hug, she kissed me a dozen more times while laughing every bit as much as I was.\n\nGod, even for Katherine this was way up there on the good-mood scale. She had me completely giddy, again just totally flying.\n\nI swear, if she ever told me to split an atom, I would probably figure out a way to do it.\n\n~ ~ ~\n\nDear Steph,\n\nYou won't believe it. Or maybe you will, you little slut! Anyway, last night I finally let J.T. fuck me with Ray right there watching. Ray even spanked his monkey while perving over us! I made J.T. cum inside me, then I scooted over to Ray and sucked his cock! I gave Ray a blowjob! And check this out. He came, like instantly. I didn't even have time to get his dick all the way in my mouth before he totally blew his load!\n\nYou would have been so proud of me. :giggles:\n\nI still wanted to get the whole thing inside my mouth, though, so I kept sucking him. He never went soft!\n\nNow, as great as all that was, here is the part that will really make you freak. See, since I hadn't cum yet, I went ahead and fucked him! I had sex with Ray, right in front of J.T.! God, we fucked like crazy. We went at it for the longest time, and yep, we both came! Even though he'd already shot this massive load in my mouth, he still gave me another incredible load in my pussy, and I had a killer cum!\n\nI didn't make some huge deal about it, either. Can you believe it? It was seriously no biggie for me. It was just fun, casual sex. Your sweet, innocent little Jennifer having casual sex, and loving it?\n\nPretty cool, huh?\n\nAlso, during rehearsals tonight I sucked Dirk's ginormous cock on stage, with Katherine and the lights guy watching us! It was kind of dark, so they couldn't see too well, but I'm pretty sure Katherine suspected we did it for real. I deep-throated him, and he came in buckets! It was awesome! He wouldn't let me off the hook, either. Eating my pussy and fucking me with his fingers, he made me cum all over his face!\n\nSteph, Dirk told me tonight that he can't wait to taste my ass. He even hinted that we might do it right here in the rec room. Not just my pussy, but my ass too!\n\nI'm almost getting to be as bad as you, beautiful girl.\n\nLove ya! Jen\n\nRay was gone, and J.T. was asleep. The TV was still on, so I knew I wouldn't disturb him just by typing Steph our nightly e-mail. Besides the fact that I was way too wound up to go to bed, I also didn't have any classes in the morning. No noises were coming from Dirk's place next door.\n\n'Hmmm,' I thought.\n\nStill buzzing like crazy from everything that had happened during rehearsals, I decided I wanted to be crazy some more. Since I was already sitting nude at the computer table, I eagerly grabbed my little kimono, which is much smaller than the one Katherine has me wear. That one comes to mid-thigh, and it covers me completely up top once I cinch it tight. The one I wear at home just barely covers my ass, and even when it's tied up nice and tight it still leaves most of my boobs exposed.\n\nI slipped it on, tying it only loosely. I grabbed my vampire book and room key, and out the door I went. As I passed a couple in the hallway going the opposite direction, they did a serious double-take, their heads spinning to watch me strut on by.\n\nGod, this exhibitionism stuff is getting to be so much fun. Can someone become addicted to something in just a few weeks? I'm beginning to think so. I know I'm already finding myself looking for any opportunity to let people see me.\n\nThe rec room was sadly empty when I plopped myself down sideways again into the love seat.\n\nI wasn't alone for long, though.\n\n\"I was wondering when you'd make an appearance,\" Dirk said, entering the room.\n\nGlancing down, I noticed that my little robe had slipped off my thighs. When I saw Dirk, I scooted my hips forward and leaned all the way back, letting my legs fall open. I was hoping my pussy was showing. I was sure my pussy was showing.\n\n\"I was beginning to think you wouldn't come,\" he continued, moving towards me. Slowing, he sat directly in front of me on the adjacent sofa.\n\n\"Oh, I came alright. You were there,\" I smiled, tracing a polished fingernail up the inside of my thigh. 'Jesus, I really am becoming bad,' I grinned to myself.\n\n\"Yes, I was, and it was awesome,\" he smiled. \"Too bad you had panties on, huh?\"\n\n\"Well, that's not going to be a problem for you anymore, is it? You and Katherine have me completely naked now.\"\n\n\"Yes, but I'll be naked too, remember?\"\n\n\"Mmmm-hmmm,\" I purred. \"I definitely remember. We're going to be naked in bed together, pretending to fuck.\"\n\n\"Pretending to fuck...\" Dirk repeated.\n\nI said it again, sultrily drawing out each word. \"Pretending...to...fuck. We'll be naked in bed together...really naked. I'll have no panties on. There won't be anything at all protecting my tight, wet pussy. It'll just be your hard cock...my spread legs...and we'll be pretending to fuck. That's what the lady said.\"\n\nDirk smiled wickedly. \"We pretended to do a sixty-nine tonight.\"\n\n\"Yes, we did, and while I was pretending to suck your huge cock you went ahead and shot a gallon of cum down my throat. I can only imagine what will happen when we're completely naked under the covers, pretending to fuck.\"\n\n\"Do you like what you're imagining?\"\n\n\"Hmmm, let me think...\" I said, slowly stroking my fingertips up my bare thighs, all the way to the moistening delta at the top. \"What's an innocent girl like me to imagine, if not your big, hungry cock sliding deep inside my welcoming pussy...mmmm...fucking me long and hard, until you fill me to overflowing with your delicious cum. Mmmm-hmmm, I definitely like what I'm imagining. Then again, I believe you also warned me that you would soon be tasting my ass.\"\n\n\"That was a promise, not a warning,\" he said, watching intently as I caressed my glistening lips.\n\n\"Same difference,\" I smiled. \"You also implied that we wouldn't necessarily be at rehearsals when you fulfilled that promise. I think you even mentioned something about this rec room, didn't you?\"\n\nGrinning, Dirk reached down to adjust his dick. All he had on was a thin pair of Puma sweat pants - the cool, shiny kind. When he got up and went to go grab something from the kitchen, it was obvious he was wearing no underwear. His amazing cock was just obscene.\n\n\"Want anything?\" he asked, leaning into the fridge.\n\n\"Sure,\" I said, getting up to go to him. My robe was so loosely tied that on my way there it managed to fall open. The air felt amazing on my naked pussy.\n\n\"Looks like you again don't have any wet panties to leave on my face while I sleep,\" he said, still grinning.\n\n\"Sorry. Perhaps another night?\"\n\nI slid my hand down his smooth, sculpted stomach as he offered me a Sprite. Accepting the soda, I kissed his shoulder before turning to go back to the love seat. I knew he was watching my every move. With each step, I could feel his eyes on my swaying hips. I made a show of pulling my robe together, as if to close it, yet I merely drew it higher, revealing the beginning swells of my naked bottom. When I stood over the love seat, I leaned at the waist, baring the rest of my ass and my pussy too while setting my drink on an end table. Recalling what Katherine had said, I did a little ass-wiggle.\n\nLooking back over my shoulder, I gave him a coy smile. \"You don't mind that I came out here with no panties on, do you? I was kind of hoping I'd have other things besides wet panties that might interest you.\"\n\nHe put his soda back in the fridge.\n\n\"By the way, is this what Katherine meant?\" I asked, continuing to move my hips while spreading my legs.\n\nI turned away from him. Facing forward, I kept wiggling my ass...waiting. I couldn't see him. I couldn't hear him. My heart was pounding. Still I waited.\n\nWetness...a single kiss at the base of my spine. A trailing tongue, followed by strong hands taking hold of my hips. Teasing nips in my deep cleft, as my cheeks were spread apart. A gentle nudge in the lower back, urging me to lean over the love seat. A caress of warm air...soft breath on my pussy.\n\nTingling. Exciting. \n\nA low moan escaped my lips when a flattened tongue began a slow journey from the top of my left thigh to the initial curve of my ass, across the gap between my thighs, over to my other cheek. A light nibble there, before the tongue trailed down my right thigh.\n\nHands grasped my ass...searing breath poured into my spreading pussy. A tongue separated my lips...a wet finger grazed my aching clit.\n\nElectric. Intense.\n\nAs the tongue stabbed deep into my pussy, the mouth enveloped me, sucking in everything from the shroud over my scarlet bud to the beginning split of my sex. Scratchy whiskers scored my tender flesh at the tops of my thighs, then the tongue was knocking at my back door.\n\nI spread my legs and arched up onto the balls of my feet, inviting entry. The tongue dripped moisture into my tight ring, hot breath combining with warm saliva to soften my sensitive pucker. A thick finger slid effortlessly into my steaming slit, making my legs tremble, and I cried out when the tongue pierced my tiny star.\n\nMy naked breasts rejoiced when that strong hand returned to cup them and tug on the wanting nipples, even as the slippery tongue began a slow, thorough penetration of my hot core. Now the tongue was fucking me...fucking my asshole. The finger in my pussy was joined by a second, then a third, and again I cried out.\n\nI'm a small girl, and a young girl. My pussy is petite and still very tight, so it was stuffed nearly to the point of pain by those three large fingers, yet it was the tongue spearing my ass that bored straight through my soul.\n\nWhen my legs began to buckle, the strong hand released my breasts to hold me up by my thighs, gently steadying me as the tongue laved all throughout my deep split. The probing tongue seemed to sense my approaching crisis; the fingers quickly withdrew, and the slithering serpent in my ass was replaced by a single long finger that drilled me to the root in smooth sync with a hot mouth clamping down over my pussy. I felt the mouth opening wide, then the tongue reentering my pink embrace.\n\nAs the most perfect orgasm I'd ever experienced crashed through my pussy, I couldn't stop creaming into that thirsting mouth.\n\nFinally my orgasm was ebbing, and careful hands lifted my upper body from the back of the love seat.\n\nDirk carried me to the sofa, where he gently laid me on my back.\n\nHis cock was rampant in his silky track pants. I reached for his hips and pulled down on the waistband, freeing him to my hungry gaze.\n\n\"I want to be able to taste it this time...\" I said, sitting up. He stood between my spread legs as I slipped my lips over the head, and there was nothing else in the world for me but that glorious cock in my mouth. I pulled him in deeper by his smooth, taut ass, then I pulled back to scrape my teeth over his pulsing shaft.\n\n\"Don't make me wait,\" I said. When he nodded, I took him down my throat, until I was humming in his pubic hair.\n\n\"Oh, fuck, Jen, where did you learn to do that? God, you take me so easily.\"\n\nHe was right, I did take him easily. I don't know why, but I was able to do that almost straight from the start. The second time I ever sucked J.T., I took him down my throat. He's not as big as Dirk, but still he was surprised by how effortlessly I did it.\n\nI pulled back to show Dirk my tongue before sliding my mouth all the way down his cock, until he was again buried in my throat.\n\nWanting to try something Steph had recommended, I pressed my finger to Dirk's asshole while humming around his dick. He tensed up, but I held him in place, breathing through my nose. I pulled back only long enough to say, \"Relax for me.\"\n\nFinally, after enough bobbing of my head up and down his shaft, he unclenched his ass, and I slowly slid my middle finger inside. I got as far as the second knuckle before he moaned, \"Oh, god, Jen! Now! Now!\"\n\nI pulled back to place the tip of his cock on my tongue, resting it just inside my mouth. He began firing away; one, two, three, four heavy strands of hot, thick cum onto my tongue. When his jerking spasms made me momentarily lose containment, I was treated to a long rope across my cheek and nose. Wanting not to miss another drop, I gobbled his shooting cock back into my mouth in time to enjoy the rest of his awesome load.\n\nWhen he was finally done cumming, I popped him out, making sure to keep my lips tightly sealed. Using his cock as a paintbrush, I spread the cum that was on my nose and cheek all over the rest of my face while happily thinking, 'Thanks for the tip, Steph!'\n\nDirk had this cool faraway gleam in his eyes. \"You're incredible, Jen,\" he said softly, looking like he was going to float right off to heaven.\n\nOpening my mouth to show him his cum, I slowly swallowed twice, taking it all down. \"Mmmm, so are you,\" I purred, stretching out flat on my back. After gathering the remaining cum on my face, I popped my fingers one by one into my mouth, savoring the rest of the sweet gift he'd given me.\n\nWith a happy sigh, I raised my knees and spread my legs. My shining wet pussy smiled in open invitation.\n\nKneeling to kiss me, Dirk cupped my face with one hand while touching my soft pussy lips with the other. \"Jen, it's not just your mouth that will taste my cock. You know I'm going to fuck you here, too,\" he said quietly, caressing my pussy. The way he said it, damn, it was the sexiest thing I'd ever heard. I was liquid on his fingertips.\n\n\"Yes, I do know, and I want you to fuck me,\" I whispered, spreading my legs wider.\n\nHe slipped two fingers into my pussy and began tenderly stroking. After maybe thirty seconds of gentle fucking, he pulled out to caress my lips again before sliding his fingertips down to my moist, pliant asshole. \"I'm also going to fuck you here,\" he said, even more quietly.\n\n\"Baby, yes, fuck my ass. I'm still a virgin there, and I want you to be the one to take me,\" I said, breathing it in his ear.\n\nThat made him smile. \"I will, though not tonight, and not in this rec room.\"\n\nHe was going to make me wait.\n\nArching my back, I moaned, \"Take me now. Fuck me right here, where anyone could come in and see us. You can have my pussy...and my ass. You can have me...all of me...everything you said you ever wanted. I need you, Dirk. I need you to fuck me.\" I reached out to stroke his thick, heavy cock. \"Please, baby, let me feel you sliding deep inside my pussy tonight. Don't make me wait.\"\n\n\"Now is not the time, Jen,\" he said, whispering it in my mouth.\n\n\"The play?\" \n\n\"The play.\"\n\n\"So the play is the thing,\" I said, finally understanding.\n\n\"Yes, beautiful. For us, the play is the thing.\"\n\n~to be continued~\n\nPlease leave a vote and a comment. Let me hear what you think. Your comments and questions deserve a response, so when you send feedback make sure to include a return address. "
    ],
    "authorname": "stevieraygovan",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/deceptions-ch-02"
}