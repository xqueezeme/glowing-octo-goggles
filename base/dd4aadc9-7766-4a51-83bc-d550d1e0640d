{
    "title": "When Ordinary Isn't Ch. 03",
    "pages": [
        "Peggy's cellphone rang as she drove home.\n\n\"This is Doctor Foreman,\" Peggy answered on the hands-free.\n\n\"Doctor Foreman, my name is Monica Sanz. I will be piloting the aircraft Mr. Reiter has dispatched to Orlando for you. Do you have a few minutes to answer just a few questions?\"\n\nCaptain Sanz asked Peggy for her home address, which she located on Google Maps. Considering the little information Mr. Reiter had provided about the passenger, the captain was somewhat startled by the appearance of her passenger's residence on the satellite and street views, but decided it wasn't her concern, or any of her business.\n\n\"Ma'am, the airplane will be ready to depart at six o'clock. We need to be airborne no later than 7:40am in order to have you in Atlanta by the appointed time. You're free to board anytime between. I will forward you the address to the facility from which we'll be departing. I'll have it to you within the hour. If you have any specific requests, please don't hesitate to mention them in a reply. You'll be served breakfast on the aircraft.\"\n\n\"Um, okay,\" Peggy replied, sheepishly.\n\n\"Have a good evening, Doctor Foreman,\" the pilot said before disconnecting the call.\n\n\"What have I gotten myself into?\" Peggy whispered to herself.\n\nPeggy pulled into her driveway just after 8:00pm and walked into her house. In her bedroom, she stared blankly in her closet, having no idea what to pack.\n\n\"No luggage restrictions or fees. Yeah. It's a private freaking jet! Sheesh. Maybe I should just take everything.\"\n\nPeggy spent a half-hour to settle on four different business suits, two with pants, two with skirts. She decided she'd be more comfortable flying in the light gray suit, so she left it on the rod and began packing a medium sized hard-side suitcase with other sundries and comfortable, casual attire.\n\nShe heard her phone chime with an incoming iMessage. It was from Captain Sanz. Opening it, she found a geo-pin which, when tapped, opened Apple Maps. The pin was situated in the parking lot of a building directly adjacent to a large hangar. \n\nThe pilot had decided Orlando Executive Airport to be the most convenient facility to Peggy's residence which was also capable of servicing a Cessna Citation.\n\nPeggy punched her address into the \"From\" field, and was given a route which estimated about a twenty minute drive from her home. She set an alarm for 5:15am which was only a half-hour earlier than any typical workday. She finished packing, dressed for bed, turned out the lights, and stared at the ceiling for almost two hours before she finally fell asleep.\n\nThe next morning, Peggy had no problems locating the facility, though found the whole following experience to be disorienting. She'd never once flown in anything other than a typical commercial airliner, with all the annoying hustle and bustle, hurry-up and wait chaos of a typical flight.\n\nAs soon as she entered through the front doors at 6:45am, a young man working the reception desk stood and approached her.\n\n\"Good morning, ma'am. May I help you?\" he asked.\n\n\"I'm meeting a plane here, I think,\" she chuckled.\n\n\"Can I have your name?\"\n\n\"Doctor Margaret Foreman.\"\n\n\"You came to the right place. Please, follow me, Doctor. Your plane and crew are standing by.\"\n\nHe relieved her of her suitcase, and she followed him down a long hallway to a fire door. When she followed him through it, she stepped into a world with which she was completely unfamiliar. She stepped into a cavernous hangar that had to have held a half-dozen aircraft. Another was chocked immediately outside the high-bay doors. She saw an airplane, brightly lit, landing on a runway a few hundred yards outside those doors. She could hear the high-pitched squeal of the parked plane's auxiliary power unit. Its plumes of heated air refracted the landscape behind.\n\nAs the two neared the aircraft, a uniformed man approached her.\n\n\"Doctor Foreman?\" he said with his volume raised to be heard over the sound of the aircraft's APU.\n\n\"Good morning,\" she acknowledged.\n\nThe receptionist handed her bag off to an individual who was wearing a bright yellow safety vest. The former turned and went back to the door they'd passed through, and the latter took her bag directly to the plane and stowed it.\n\n\"Right this way, ma'am,\" the uniformed man said, walking her to the airstairs.\n\nNo check-in lines, no baggage check, no taking shoes off for security, no body scans or x-rays of carry ons. No lines anywhere, no hassles of any sort. Three minutes after closing her car door, Peggy was escorted onboard the airplane.\n\nA woman significantly older than herself, who bore four stripes on both epaulets of her well-tailored uniform, greeted her at the steps. \n\n\"Good morning, Doctor Foreman. I'm Captain Sanz. Welcome aboard.\"\n\nThe pilot gestured to the steps, and Peggy climbed in. She had to crouch slightly as the door and cabin were a little too short for her to stand fully upright.\n\n\"Ma'am, I'm Danny Harper, your host,\" the uniformed man said. \"Please take whichever seat you prefer.\" \n\nThe cabin was configured to seat six with three seats on each side of a narrow aisle. The forward-most seats faced each while the aft-most pair faced forward. Peggy chose the first plush leather seat which faced forward on the port side of the luxuriously appointed cabin. She removed her suit coat which Danny hung in a closet opposite the small galley. She watched the copilot pull the airstairs in. The interior was quieted.\n\n\"If you're comfortable, please buckle up,\" Danny said.\n\nShe did.\n\n\"Ready to head north, Doctor Foreman?\" she heard from the cockpit. \n\n\"Yes, Captain,\" Peggy answered.\n\n\"This is a short hop. We'll have you in Atlanta in about an hour.\"\n\n\"Okay, thanks!\"\n\nShe chuckled at herself because, until that point in her life, the only words an on-duty airline pilot had ever spoken to her directly were 'buh-bye' as she disembarked a commercial flight.\n\nNot one minute later, the engines spooled up and the airplane began its taxi. Five minutes after that, it was airborne.\n\nThe flight was comfortably smooth. Peggy considered the breakfast she was served to be beyond compare. The printed card describing it made Peggy's stomach growl because she was seldom one to shy away from exotic fare.\n\nIt consisted of an omelet of goose eggs, caribou sausage, with melted Gruyere and Fontina cheeses. It was presented with the cutest little bottle of Tabasco sauce Peggy had ever seen. It was served with a toasted bagel alongside a small tub of cream cheese. A bowl of prepared berries rounded the meal, and a cup of gourmet coffee was provided which Danny kept full. He sat in the aftmost seat on the opposite side and checked in on her only a few times. He displayed the perfect balance of attentiveness without being obsequious.\n\nHe came to collect her tray just before she heard the landing gear descend. Four minutes later, they were on the ground at Atlanta's Fulton County Airport, taxiing to another hangar.\n\nPeggy's eyes widened when she saw Eric through her window. He was standing near a Mercedes-Benz, appearing as the man she saw in the photograph. Incredibly distinguished and impeccably attired, he exuded the same confidence and strength. He seemed so completely unlike the man with whom she'd spent a very pleasant day and a half.\n\nShe waved at him when his eyes found hers in the window, and he smiled and waved back. The airplane came to a stop, and its engines were shut down. She observed safety-vested people scurry around the plane before Danny came to fetch her.\n\nAs she walked down the short aisle, the pilot looked over her shoulder and said, \"Have a pleasant morning, Doctor Foreman. We'll see you later this afternoon for the flight to Oklahoma City.\"\n\n\"Thank you, Captain Sanz,\" she responded before heading down the air-stairs. \n\nAs she stepped out of the door, she saw a crewman hoist her suitcase into the back of the Benz and close the trunk. The driver opened the passenger doors and waited. Eric stepped sprightly to the aircraft and offered his hand as Peggy reached the final step.\n\n\"Good lord, Eric, you look incredible. Is it really you in there?\" she asked with an appreciative up-and-down survey.\n\nHe laughed his discomforted laugh, so she knew it was definitely the same man.\n\n\"Yeah, it's me,\" he grinned. \"I know, I know, I'm way overdressed. I hate this kind of showy crap, but it kinda comes with the territory on days like today.\"\n\nHe leaned in toward her and whispered in her ear, \"You look absolutely stunning, Peggy. I can't tell you how desperate I am to kiss you right now, but it's not the right time or place.\"\n\nOnly then did she notice a few photographers standing behind a cordon, all with optics pointed straight at them. The images they captured wouldn't show her stunned look of confusion because she'd instinctively turned her back to them. She nodded her understanding.\n\nEric guided her to the Mercedes and helped her into it before closing her door. He walked to the other side and entered the vehicle. He didn't need to say anything. As soon as his door closed, the driver briskly drove away from the mild chaos.\n\n\"Holy crap, Eric. Will you please tell me what the hell is going on? The last sixteen hours have been absolutely insane. You have to tell me what this is all about. If I'd have known I was going to be paraded in front of a bunch of reporters or whatever those people were, I probably would have stayed home.\"\n\n\"I apologize. I guess the Oklahoma press caught wind of this somehow. Please, Peggy, listen to me. Remember what I said yesterday on the phone. I'm me, okay? All this crap and foofaraw is nuts, and I get that.\"\n\n\"What the hell does all that mean?\"\n\nHe watched her body language and expressions. She seemed exceedingly tense and nervous, if not embarrassed. He knew he didn't need to ask her the question.\n\n\"Eric, are you going to tell me&mdash;\" \n\nHe kissed her softly, stopping her words. She grunted in opposition for a split second before her senses caught up. She then returned his kiss slowly and with equal tenderness. He was freshly shaven, and she enjoyed the texture of his smooth-as-silk skin as her lips contacted him in the kiss. His familiar scent, flavor, warmth, and soft lips re-centered and balanced her. She looked ahead to see if the driver was watching. There was a screen between the compartments. Only then did she realize the vehicle was a limousine. \n\nShe took a deep breath, clutching Eric's hand fiercely in her own. He enveloped it, holding it with both of his. She looked at him and saw his warm smile.\n\n\"It's me. Do you believe me?\" he asked.\n\n\"Yeah. I remember you,\" she smiled.\n\n\"Okay. We've got about a half hour until we get where we're going. What do you want to know?\"\n\n\"Well, for starters, exactly where are we going?\"\n\n\"The offices of Jacobs and Sterns, a law firm. They're managing the contracts and all the garbage that goes along with the endowment I've offered to the hospital.\"\n\n\"Huh? Contracts? Don't you just write a check and it's done?\"\n\n\"Don't I wish. No, there's an awful lot more to it than that, and that's why I have attorneys to deal with all of it. I've retained this firm for years and years and trust them more than the local firms in Oklahoma. Since you'll be new in the room, it'll be a little bit of a meet and greet, lots of handshaking and introductions. Several members of the board of the hospital will be there, and they're going to try to grill you with questions.\n\n\"Answer them if you want, or defer them until tomorrow. No one but me is expecting you to be here today. That was a purely selfish thing on my part,\" he smiled. \"But think of today like a warm-up for tomorrow. You'll be fine. It'll probably be sort of like when you defended your thesis.\"\n\n\"How did you know I wrote a thesis?\" she challenged. \"Most MDs don't.\"\n\n\"Is that really what you want to ask right now?\" he smiled.\n\n\"Yeah. That can wait.\"\n\nShe stared at him for several moments.\n\n\"Eric, exactly who the hell are you?\"\n\n\"There it is,\" he smiled. \"Like I said, I'm the guy you met a few weeks ago. But there's more fluff and nougat to me, I guess you could say. Now you know I co-founded Reiter-Marlin, and that I sort of walked away from it. You don't know that wasn't my first rodeo. Lance and I... you talked to Lance yesterday, yeah?\"\n\nShe nodded.\n\n\"Lance and I have founded four startups in the last fifteen years. Our first was a flop. We were right out of college and were looking to conquer the world, but it was a total disaster. We declared bankruptcy within two years. Our second one broke even, and we sold it to the venture cap firm that financed us. Cleaned up the bankruptcy of the first one with the leftovers.\n\n\"Our third was... well... it was successful. Very successful. We both walked away from it. It made us an awful lot of money. We'd been living on peanut butter sandwiches and ramen for years, and, all of the sudden, we were eating steaks in Manhattan. That was when I had the same sort of experience as you last night and this morning.\n\n\"Lance and I were called at midnight one night and were told to go to the airport where a jet was waiting. We didn't even think to pack anything.\n\n\"We landed in New Jersey three hours later and were escorted to a pilot's lounge where we were able to catch some zees. A bunch of suits walked in at nine that morning, made us an offer, and wire-transferred eight digits's-worth of dollars into each of our bank accounts.\n\n\"Those same suits then left in the same plane we'd just gotten out of a few hours before and flew off to wherever.\n\n\"We were left there in the same street clothes we'd put on like twenty-four hours earlier. They got what they came for and left us there, two suddenly very wealthy boys, with no ride home.\"\n\n\"Is that true?\" Peggy asked.\n\n\"Totally. We'd just sold our business for over four hundred million dollars, and we're sitting there at an airport in Teterboro, scratching our heads, and wondering what the hell we were going to do next.\"\n\n\"What happened next?\"\n\n\"That's when it got weird,\" he chuckled.\n\n\"It wasn't yet? Tell me,\" Peggy said.\n\n\"We took a taxi into Manhattan for lunch and enjoyed the best steaks we'd ever eaten. The ma\u00eetre d' had to lend us sport-coats, because our clothes didn't comply with the restaurant's dress code. We'd struck it rich, and thought we were on top of the world.\n\n\"We flew back to Oklahoma that evening. Commercial. Coach, even. It was so weird, you know? We went back to our offices the next day, stood there in the lobby for a few minutes, just staring blankly at each other because we suddenly realized we didn't run the place anymore. Only then did we realize we didn't even have jobs.\"\n\n\"Then what happened?\"\n\n\"Hundreds of people lost their jobs, and shit hit the fan and all that because the company that bought us out had no intention of keeping our people employed. They only wanted our intellectual property and patent portfolio and shut the company down.\n\n\"Lance and I learned a few days later that our employees arrived to locked doors when they came to work the following Monday.\"\n\n\"Oh my god,\" Peggy said.\n\n\"Exactly. We were ignorant and naive. We were immature and impulsive. We were suddenly the enemies to an awful lot of incredible people. Lance and I vowed to never make that same mistake again. We made it right, though, or at least we tried.\"\n\n\"How?\"\n\n\"We continued our former employees' salaries for six months under a paper company.\"\n\n\"What does that mean?\"\n\n\"We created a company in court filings, and put a sizable share of our cash into it. That company paid the employees and continued their benefits.\"\n\n\"That's fantastic.\"\n\n\"You'd think, but it didn't satisfy everyone.\"\n\n\"Is that why you keep asking me if I know who you are?\"\n\n\"Partly. It's amazing how people come out of the woodwork as a former employee or relative of one and make things difficult. Then there's the other side.\"\n\n\"What's the other side?\"\n\n\"That's going to take more time to explain. We're almost there. I'll answer anything you ask later. I promise.\"\n\n\"Eric, this is all so sudden. It's so weird. Am I going to be okay?\"\n\n\"I'm sure of it,\" he said earnestly. \"You've got this. Today is only an introduction.\"\n\n\"An introduction for what?\" she asked because she didn't have but a fuzzy picture of what she would be expected to discuss.\n\n\"Right. So you read the article in the paper about the endowment. It mentioned that I'd added a proviso. I required the consideration of you for the position of research director.\"\n\n\"But what if I say 'no?'\" \n\n\"If you don't want to do it, that's fine. It's entirely up to you, but don't answer either way until you've soaked on it for a few days.\n\n\"I think you're a perfect fit for that position. I downloaded your thesis after Lance gave me your full name and your credentials. That's how I know you earned both an MD and PhD. I read it and a few of your other papers. That's why it took me a few hours to call you back. I knew in an instant that you're a perfect fit. You told me enough about your history and experience to at least take the risk.\n\n\"That final requirement for the endowment is that they only consider you for the position. I will not be pushing you on them. That'd be both improper and unethical. I only want to make the introduction and let them do their thing. If you decline, they've still fulfilled the requirement. I'll fly you back to Florida, and that'll be that.\"\n\n\"And what if we all say yes?\"\n\n\"Well, I imagine you'll have a hell of a lot of work to do, which, if you plan on practicing medicine along with your research, will include getting licensed in Oklahoma. Probably better ethically and for liability reasons to get licensed regardless.\"\n\n\"That's true,\" she acknowledged.\n\n\"You ready?\" he asked.\n\nShe hadn't realized they were stopped at the curb of a high rise. The driver opened her door and she stepped to the curb.\n\nWhat followed was hours of palm pressing and informally structured discussions and lots of legal gobbledygook of which she stayed clear. A phenomenal catered lunch was served, and Peggy had to consciously fight the urge to gorge on the delights because she didn't want to appear gluttonous. \n\nEric saw the bird-sized portions on her plate and whispered in her ear, \"We'll can enjoy a nice dinner later.\"\n\nShe chuckled at him with a knowing smile.\n\nThe meeting, such as it was, wasn't nearly as arduous or taxing as she'd expected. She was still relaxed when it adjourned at three o'clock.\n\n\"Where's everybody off to?\" she asked.\n\n\"What do you mean?\"\n\n\"It's only three o'clock. I figured this would be an all day thing.\"\n\n\"Well, several of them have to be back in time for tomorrow's meeting in OKC. And they're flying commercial. We'll probably land there before some of their flights depart.\"\n\n\"Showing off?\"\n\n\"Just a little bit,\" he grinned, gesturing a small gap between his finger and thumb.\n\n\"Jeez,\" she looked out the windows of the skyscraper. \"What have I gotten myself into?\"\n\n\"Too much?\"\n\n\"I wonder,\" she sighed.\n\n\"Hey. Come here,\" he requested with his arms held apart.\n\nShe walked to him and he pulled her into a comforting embrace.\n\n\"Is it really just Eric? Or is it always going to be Mister Eric Reiter?\" \n\n\"I'm sorry, Peggy. This is kinda my life right now, but that guy you met back in Orlando can't wait to show up. Like I said this morning, I really hate all this showy crap, but it's expected by certain folks, and it's what I do. You were fantastic, by the way, so I know there's some secret sauce about you, too.\"\n\n\"Oh? How so?\" she challenged with mock offense.\n\n\"Your wit. Your confidence. It was really exciting for me to see your professional side. You're more like me than you think. I saw a few weeks ago that you're fun, you're funny, you're playful as all hell, you're... well, it's awesome to see your professional portion blend so perfectly with your off-hours persona.\"",
        "\"Yeah?\"\n\n\"Yes,\" he smiled. \"You ready to head to the airport?\"\n\n\"Sure,\" Peggy answered.\n\n\"I'll let Monica know we're on our way, and have the car come fetch us,\" he said as he tapped two texts on his phone.\n\nThey rode down the seventy-seven floors in an elevator, enjoying a few moments of silence with some of the same closeness they'd enjoyed the first time they rode in an elevator together.\n\n\"What else would you like to know?\" Eric asked after they climbed into the limo.\n\nShe thought to herself for several moments. \"Did you come to Orlando in your plane a few weeks ago?\"\n\n\"No. I flew commercial.\"\n\n\"Why?\"\n\nHe shrugged. \"Well, it's not an inexpensive airplane to operate, and it's kinda overly opulent. I don't use it for trips like that. I don't use it for personal stuff at all, even though I own it. Flying commercial keeps me steady. Keeps me rooted. Just one of those things, like eating at McDonald's or Panda Express, you know?\" he said with her eyes studying his. \"But I did fly first class,\" he added with mock pomp.\n\n\"What's the other half of why you didn't want me to know who you are? What would have happened if, the first time you asked me that question, I'd said I knew who you were?\"\n\n\"That's a mean question.\"\n\n\"Why?\"\n\n\"Because the answer might hurt your feelings, and I don't want to do that.\"\n\n\"Please. I'm a big girl.\"\n\n\"No, you're not. You're tiny,\" he said, trying to inject humor. When he noticed she wasn't buying it, he continued, \"I would've said it was nice to have met you, and that would have been the end of it.\"\n\n\"Is that so.\"\n\n\"Yes.\"\n\n\"What if I'd lied?\"\n\n\"I was sure you weren't,\" he answered.\n\n\"How?\"\n\nHe thought for a few moments. \"Do you remember me telling you that the reason I am so cautious is that I've been burned before?\"\n\n\"Yeah.\"\n\n\"I hope what I'm about to say doesn't sound like I'm stereotyping people. I know most women aren't like this, but over the last few years, I've not dated a single woman, not even one, that didn't have ulterior motives. Keep in mind that the ladies I'd met were usually already aware of who I was. I'd meet them at business meetings or functions or whatever. I'd never date one of my own employees, just ladies in the same circles. And then the shows would start.\"\n\n\"What kind of shows?\"\n\n\"Strange shows. They'd act like Stepford women, you know? Their motives would begin to show. One woman I'd become, at least I thought, quite serious came out and said it. 'If you don't give me an allowance, we're through.'\n\n\"We were through, alright. I kicked her out of my life so fast it left smoke behind. It ripped my heart out, and I stopped dating after that.\"\n\n\"So how does that tell you I wasn't lying to you?\"\n\n\"Because I could tell. The signs weren't there. I've been duped enough that I've learned to smell the scent of greed from miles away, and I caught not a single whiff from you. I know that sounds dreadful, but it's the truth. I sensed you as a person who was willing to let her hair down and have fun on equal terms. Like I told you back in Orlando, I could tell you were real. That thrilled me.\"\n\n\"I don't know whether to be offended or pleased,\" Peggy said.\n\n\"Then can I choose for you?\" he chuckled nervously.\n\n\"I'm being serious.\"\n\n\"I know. Sorry. I'll shut up now.\"\n\nThey rode the rest of the way to the airport in silence. Peggy's mind was reeling. She didn't know what to think. She wanted to be pissed off that he'd even assume she'd be like the other women he described, but she couldn't. She didn't know who he was. She didn't know he was rather well-to-do, but he'd told her, quite honestly, that he liked her, found comfort in her company, and she'd told him the same.\n\nShe considered her first impressions of him as being genuine, approachable, yet nervous and unsure around her. Natural. Present. She spent several minutes doubting her senses. She instinctively knew they were keen, because her senses saved lives.\n\nShe remembered perceiving him as vulnerable. He was vulnerable. It all made sense as the fog gave way to clarity. His experiences made him necessarily guarded, something she'd felt herself. He said he was walking out on a limb. He'd said on the phone the previous evening that he trusted her. He'd said it a few weeks earlier, too.\n\nShe knew she certainly liked Ordinary Eric.\n\n\"I'm that guy you met two weeks ago,\" he'd said, and she believed him. \"I hate all this showy crap,\" and she believed that, too.\n\nAs the Benz drove onto the airfield, she asked a simple question.\n\n\"Are you really just Ordinary Eric?\"\n\n\"I swear to you, Peggy, I am. Does it matter that Ordinary Eric owns a jet and a nice ranch and a few nice suits and has money?\"\n\n\"If I asked you to throw all this away, would you?\"\n\n\"No. Of course not. I would never throw it away, but I do want to carefully give some of it away. Like $50 million in a few days,\" he answered calmly. \"Besides. I earned it.\"\n\nHis last sentence smacked her in the brain, and it made her feel a little shameful for having asked the question.\n\n\"Yeah. You did,\" she said with a barely-masked smile.\n\n\"But I have to ask,\" she continued. \"The endowment. The consideration of me to lead the unit. I don't know how to put this, so I'll just say it. Are you doing that because of me? Are you trying to&mdash;\"\n\n\"No. I'd already started ironing that out when I came to Orlando. That was the reason I had to leave when I did. I had meetings and stuff which couldn't be postponed.\n\n\"But the research director position? Yes. When I got home, the idea hit me. I couldn't stop thinking about how good of a fit you would be.\"\n\n\"Really?\"\n\n\"Absolutely. But then I felt like an absolute stone-cold moron for a couple of reasons.\"\n\n\"Why?\" she asked.\n\n\"Because, if I'd have thought of it while I was there, I would have told you and then I wouldn't have been searching for almost two weeks trying to find you. The board has already interviewed at least a half dozen other candidates. You might, in fact, be the last one they talk to for all I know.\"\n\n\"And the other reason?\"\n\n\"This one is probably more stupid than that,\" he grinned sheepishly.\n\n\"What is it?\"\n\n\"I didn't know that Peggy is a diminutive of Margaret.\"\n\nShe grasped his hand in hers and began laughing. Her laughter unleashed his.\n\n\"Thank you for believing in me. At least I hope you do,\" he asked.\n\nThat same nervous, searching, earnestly honest expression showed on his face. She took that face in her hands and kissed its lips warmly. She tasted him and he delighted in her. \n\n\"I do, because that's Ordinary Eric right there,\" she sighed. \n\n\"And there's the kick-ass-karting, laser-tag-cheating Peggy right there,\" he chuckled and stroked her warm thigh.\n\n\"Are there going to be other business folks on the flight to Oklahoma?\"\n\n\"Nope, just you, me, and the host.\"\n\n\"Then it wouldn't be weird if I change into more comfortable clothes before we get on the plane?\"\n\n\"Weird? Hell no. I plan on doing the same thing when we get to the FBO. I don't like wearing a suit any more than I have to.\"\n\nWhen the limo deposited them at the terminal, both passengers took their bags inside the building where an agent escorted them to two private rest rooms. Their comfortable lounge facilities were designed for flight crew members wanting to rest and refresh in privacy as they waited for their passengers to do whatever business they did. Each featured a reclining massage chair, a microwave, a small refrigerator full of bottled water and soft drinks, and a television. Of course, the entire facility, indoors and out, had high-speed wireless internet access available.\n\nPeggy unpacked comfortable garb and began to remove her clothes when she saw an appliance labeled \"Hot Towels.\" She opened the cabinet and steam rose from the enclosure. There were numerous plush, moist towels of various sizes inside.\n\n\"Holy crap,\" Peggy said to herself, \"These folks think of everything.\"\n\nShe finished disrobing and gave herself a warm, refreshing sponge bath. She let one hand towel cool slightly before employing it on more delicate areas. She deposited the spent linens in the designated bin, then reapplied her deodorant and freshened her makeup. She donned comfortable shorts, and a figure-flattering fitted blouse. She brushed her teeth, then her hair. She bundled her locks into a bouncy ponytail. She exchanged her heels for strapped sandals.\n\nAfter carefully rolling up her suit into a tidy parcel and stashing it, she zipped closed the liner of her hard-side and strolled to the door.\n\nEric had just exited his similar room and was walking ahead of her. \n\n\"Hey,\" she whispered.\n\nHe stopped and turned toward the voice.\n\n\"Have mercy,\" he said with wide eyes.\n\n\"What's wrong?\" \n\n\"Nothing. You look... damn. Sorry. I'll keep my mouth shut.\"\n\nHer eyes displayed genuine concern. \"Am I underdressed?\"\n\n\"Hardly. I was just going to say you look really cute. But, that'd be rude because you don't like that word.\"\n\n\"I like it when you say it,\" she smiled sweetly as they resumed walking.\n\n\"Hey, Danny?\" Eric beckoned the host as they entered the hangar.\n\n\"Yes, Mr. Reiter?\" He hustled over to the pair.\n\n\"I won't be needing your services for this leg, so have your dispatcher get you back to Oke City. Thanks for taking good care of Doctor Foreman this morning.\"\n\n\"My pleasure, sir,\" he answered.\n\nEric shook his hand and Peggy saw a few green-colored slips of paper exchange their palms.\n\n\"Monica, we're anxious to get going,\" he said to the pilot.\n\n\"Of course, sir,\" she acknowledged. \"Welcome back, Doctor Foreman. We'll be at Will Rogers about two hours after we depart. We'll leave just as soon as we receive our clearance.\"\n\n\"Perfect. We'll settle in,\" Eric said.\n\nHe gestured to the airstairs and Peggy climbed them with Eric following behind, watching what he knew was the most beautiful backside he'd seen flex and tighten as the legs underneath ascended.\n\nAfter they'd buckled into two seats facing each other, Peggy asked, \"Why'd you leave Danny behind?\"\n\n\"None of the crew work for me directly. They're a contract service. If the service doesn't have a route for him, Danny can hang out in Atlanta tonight and fly back tomorrow or go home today. Besides, I just tipped him two hundred dollars. Knowing him, he'll probably go see the Braves game later tonight since they're playing the Rangers.\n\n\"Monica has flown this plane for as long as I've owned it. She had just retired from an airline. She'd been flying 737s for the previous twenty-plus years and finished earning her type rating for the Citation. I always ask for Danny and Monica because I like familiarity. Very seldom has anyone else taken their spots.\"\n\n\"That doesn't answer my question. Why'd you kick him off?\"\n\n\"Because he'd be sitting here in the cabin.\"\n\n\"So what?\"\n\n\"Peggy, I don't want him in here,\" he said. \"I want to... I want to be alone with you.\"\n\n\"Oh,\" she said before pausing for a few moments.\n\n\"God, Eric, this is all so incredible,\" she said, stretching her back then nestling more deeply into her comfortable seat.\n\n\"Isn't it?\" he said without an ounce of ego. \"This is the best part,\" he said before he elevated his voice.\n\n\"Captain, we're all set back here,\" he spoke.\n\n\"Roger, Sir,\" she replied.\n\nThe plane started moving less than two minutes later.\n\nPeggy smiled widely, then glued her face to the window to watch as the plane barreled down the runway reaching 115 knots when the nose gear left the pavement. The plane leapt like a rocket into the air.\n\n\"Incredible,\" Peggy said with a wide smile.\n\nShe turned, looking at Eric. He was watching the moving map on the LCD screen he had removed from its compartment.\n\n\"How's your foot, by the way?\" she asked.\n\n\"All better. I took the stitches out last night,\" he said as he stood from his seat and stepped to the galley. He drew closed the lightweight door between them and the flight deck.\n\n\"You? You didn't!\" she barked.\n\n\"Why not? A rather gorgeous surgeon told me they could come out in two weeks, so I took them out.\"\n\n\"A medical practitioner should have done that,\" she glowered at him.\n\n\"Why should I have to pay for that in either time or money? I clipped 'em with snips and they popped right out. Took me less than a minute.\"\n\n\"Jeez. You own this million dollar jet, and you're worried about a seventy-five dollar office visit. Any bleeding or oozing?\" she asked.\n\n\"No. And this plane was closer to twenty million,\" he chuckled. \"But we're in Georgia. You're not licensed here.\"\n\nShe unbuckled her seat belt and scooched forward. \"Come on, big guy, let me have a look,\" she smirked.\n\nHe dutifully did as instructed. He slipped off his loafer and propped his foot on her armrest. \n\nShe studied his foot for a few moments. She could smell on his skin the same light citrus fragrance which scented the hot towels she'd used. His foot was clean and tidy. She suspected he was nice and tidy all over.\n\n\"Yeah, okay,\" she observed, examining the scar and minuscule pin-holes left by the sutures. \"You did alright,\" she smiled. \n\n\"Good to know,\" he said, watching her closely.\n\nInstead of tickling his foot like she had before, she brought it to rest on her thigh and slowly began to massage it. \n\n\"Any tenderness?\" she whispered.\n\n\"No,\" he sighed. \"None at all,\" he said with a relaxed smile.\n\n\"Good,\" she said, but she didn't stop. Eric was no stranger to a pedicure, and the way she was massaging his foot and calf felt better than at any salon. Because it was her. It was Peggy. Her tenderness warmed him.\n\n\"Does this feel good?\" she asked after several minutes of comforting caresses.\n\n\"Yeah,\" he said, \"absolutely.\"\n\n\"Give me the other one,\" she smiled. \n\nHe repositioned and placed his unshod foot where the other had been, and she began to massage it just as comfortably. After a few moments, she stopped, slipped off a sandal, and propped her foot on his thigh with a grin.\n\n\"How could someone that probably spends the majority of her day on her feet have such pretty ones?\" he asked, firmly kneading into the arch and between her toes.\n\n\"Same as you, probably,\" she smiled sweetly. \n\n\"Did you just say I have pretty feet?\" he grinned.\n\n\"Yeah. You do.\"\n\nShe slowly repositioned the foot she was massaging and placed it between her thighs. She massaged his toes as she slipped slightly forward in her seat until the sole of his foot was nestled into her crotch.\n\nHis eyes widened at the realization. \"Peggy&mdash;\"\n\n\"Does the crew ever open that door?\" she asked, as she rubbed his foot against her body.\n\n\"Not until the plane is on approach,\" he answered, \"or if it's on fire,\" he said as she pushed his heel very gently into her core.\n\nShe twisted the foot he was massaging slightly and probed against his body with her toes, feeling a pronounced mass of firm flesh underneath cloth. He sighed deeply when she stroked it and moved his pelvis in reflex.\n\n\"Well, Ordinary Eric, I definitely smell smoke,\" she cooed.\n\n\"You've told me my foot is in perfect health. How's your tail light?\"\n\nShe nudged his feet away and slowly stood from her seat. Watching over her shoulder, she turned away from him and bent, hardly subtly, at her hips. Just as he'd done the prior time, his eyes widened, his brows rose, and the corners of his lips curled.\n\nPresented with her perfect backside, he reached slowly forward and palmed her, feeling the heat of her body through the cloth of her shorts. He could feel the elastic at the legs of hidden panties, and traced it with his fingertips over the swells of her bottom.\n\nHe gave into his desires. He placed his hands at her hips, leaned forward in his seat, and brought her body close to him. The cheeks of his face stroked the cheeks of her beautiful butt and he exhaled audibly.\n\n\"God, Eric, I can feel your breath,\" she sighed. \n\n\"Sorry. I'm so sorry. I'm misbehaving,\" he whispered, gently nudging her away from him. \n\nShe was jolted by his words. She pivoted and looked at him. \"What's wrong?\"\n\n\"I don't know. I'm... shit. I...\"\n\nShe sensed he was struggling for words. She watched him, studying his expressions and the non-verbal language of his body.\n\n\"What is it, Eric? What's wrong?\"\n\n\"I'm... I... \" his eyes studied the floor.\n\n\"Tell me, Baby. Talk to me.\"\n\nBaby. He heard it. He knew he heard it. It wasn't a mistake. It wasn't the same tone of voice his prior vacuous relationships used. It sounded tender. It sounded whole. It sounded real. It sounded... Good lord almighty. She is real! That realization made his mind ring.\n\n\"Peggy, I'm scared.\"\n\n\"Why?\"\n\n\"I don't know.\"\n\n\"What are you thinking? Just tell me, okay?\"\n\n\"I don't know. I just don't know what to think.\"\n\nShe saw that he wouldn't meet her eyes. \"Eric, who do you think I am? Do you know me?\"\n\n\"I don't know, Peg. This is so unfamiliar,\" his voice cracked.\n\nShe sensed it in her core that his shields were up. His armor was back on in full. \n\n\"Baby, look at me,\" she encouraged.\n\nHe didn't.\n\n\"Eric, please look at me,\" she said, palming his face and turning his head upward. \"What are you worried about?\" she begged.\n\n\"I'm scared that what I've done... what I've told you... what we're doing right now is changing your impression of me,\" he said. \"I met you like, what, barely two weeks ago? And, in that very first hour, you were so unlike any other woman I'd met in almost forever. You've got me freaking turned inside out. I... I just wasn't prepared for this.\"\n\n\"You'd better believe it's changed my impression of you,\" she whispered. \"But I'm wondering if you are thinking I might be one of those gold-digging stalkers Lance mentioned. Because I swear to you I'm not, and, right at the moment, I have no way of convincing you otherwise.\"\n\n\"What'd he tell you?\" he asked with surprise in his voice.\n\n\"Not much. He said he'd leave that for you to explain, and you kinda have. But I'm not like that. All this stuff,\" she said, waving her hands around, gesturing at the trappings of their surroundings, \"yeah, it's pretty freaking cool. It's amazing, and I'm having a blast. \n\n\"But... I'm not Cinderella. I'm not Rachel Chu and you're not Nick Young.\"\n\n\"Wha... What? Who are they?\"\n\n\"The book. Crazy Rich... never mind,\" she chuckled.\n\nHe looked into her eyes, and she his. She lowered her knees between his into a half-kneel against the front of his seat and pulled him toward her and kissed him. She pierced his nervous mouth with her tongue and drew his into her. She blindly found his arm and traced her fingers to its extent, to his hand, and brought it to her chest. \n\n\"Feel that?\" she said, knowing her heavy pulse would be evident.\n\n\"Thump thump,\" he said, boyishly.\n\n\"Yeah. Thump thump. That's you. You, Eric. That's so completely you. You don't know me, do you. I'm not Cinderella,\" she smiled warmly at him. \"Are you sure the crew isn't going to open that door?\"\n\n\"Yeah.\"\n\n\"Then let me have you.\"\n\nHe stared agape at her.\"Now?\" he gasped.\n\n\"I want to make love to you. For the last two weeks, I've thought of almost nothing else. I've been thinking about what we did a few weeks ago; the way you talked to me, the way you complimented me. The way you touched me, the way you wanted me even though I was... yeah. No one has ever made me feel so desirable as you did... as you do. I want to make love to you, Eric. Please.\"\n\nHe softly said, \"I didn't bring any condoms.\"\n\n\"I don't care. I need to feel your skin. Your skin.\"\n\n\"But, back in Orlando, you said&mdash;\"\n\n\"I know what I said. I'm on the pill, and I trust you.\"\n\nHer implicit statement was that she trusted him to tell her if he had any medical reasons to need to use a condom. Her trust was genuine, and it wasn't betrayed.",
        "Eric retracted the arm rests of his seat. He grabbed Peggy around her waist, twisted her sideways, and pulled her into his lap, her feet dangling in the aisle. Their faces met at the mouth and they kissed. \n\n\"I can't tell you how bad I want you,\" Eric said to her. \"You've been in my dreams since you left the resort. You've done something to me,\" he smiled at her. \n\n\"It makes me feel very good the way you say things like that,\" she cooed, stroking his cheek with her soft hand. \"But I swear to god, if you don't touch me, I'm going to scream,\" she growled softly.\n\nHe placed his hand in the warmth between her legs, cupping her crotch as she sought the moisture in his mouth with frenzied passion. When she felt the pressure of his fingers against her sensitive vulva, she gripped his hand with her thighs, holding him fast.\n\n\"Ooh,\" she groaned softly as he sculpted her.\n\n\"I should warn you,\" he said between kisses, \"please don't scream. That door is hardly soundproof.\"\n\n\"That's too bad,\" she whined, standing up.\n\nShe stood in front of him and slowly untied the leather cords belting her shorts. She teased him, wagging her hips in front of him as he softly stroked her bottom.\n\n\"Do what you did before,\" he asked after she'd unsnapped the fastener and lowered the zipper.\n\n\"What, this?\" she said, bending over in front of him.\n\n\"Yeah.\"\n\nAgain, he buried his face in her bottom, tracing his nose to the puffiness of her vulva at the base.\n\n\"You smell so good,\" he groaned. \"I want more.\"\n\nShe stood more erect and began to lower her shorts. She left her panties in place because she wanted him to see them. She remembered how much he enjoyed the sight. She presented her backside to him again, and he accepted her offering and began to slide her panties down slowly.\n\nHis breath caught when the moist fabric at the center began to peel away from denuded flesh. A thread of fluid stretched as the gusset of her panties was separated from her labia. \n\n\"Holy hell's bells,\" he hissed. \n\n\"What is it, Baby?\" she cooed. \n\n\"You shaved?\" his voice squeaked, which made her chuckle good-naturedly. \n\n\"Yeah. Just a little. Do you like it?\"\n\nHe separated her labia and placed his nose at her vagina. He inhaled deeply the scent of her arousal. Her clitoris was just out of his reach, but he lapped into her slit and trailed his tongue through her flesh, relishing its flavor. He traced the flat of his tongue over her opening. \n\n\"That feels so good but I want you inside me. Right freaking now.\"\n\nShe grabbed him, pulled him from his seat, and damn-near threw him away from her as she reclined it. The seat-back reached its extent and she climbed atop it, pointing her ass toward him.\n\nHer shorts and panties were bundled around her knees which was a sight he found incredibly erotic. He unfastened his cargos and pushed them down his thighs. Peggy giggled when she saw his cock spring and bounce when it was released from its confinement. \n\n\"Eric,\" she hissed, \"I want it. Please take me.\"\n\nHe penetrated her, pushing his penis into her.\n\n\"Yeah!\" she quietly moaned. \"Right there, Baby. That's the spot. Push harder,\" she begged, and he did.\n\nHe grasped her hips and drew her onto him. He pushed into her body until there was no space between them.\n\n\"Yeah, yeah, yeah,\" she stuttered. \"Please, Baby, I want to cum,\" she whispered.\n\nHe waited for her, slowly withdrawing then pushing gently but purposefully against her, feeling her insides quiver and squeeze. Just mere inches of motion made her shiver.\n\n\"Ooh, what you're doing feel so good,\" she hissed, massaging her clitoris with her fingers.\n\nShe curled one finger against it and gave the underside of his penis a firm knuckle to stroke. She felt his scrotum swaying underneath him.\n\n\"Oh oh oh oh,\" she moaned before she began to utter gibberish, clenching every muscle in her body as her orgasm poured from her tightness and washed over her soul.\n\n\"You're so beautiful, Peggy. God your body is built so perfectly. I can't believe how good your little pussy feels around me. I've never... Ugh! Mm, oh shit,\" he growled.\n\nThe sights, smells, tastes, and sounds finished him. He erupted against her womb with such force he worried the crew would hear his delight.\n\n\"Yes, Baby! I feel you cumming! I feel it!\" \n\nHe grasped her buttocks. Her flesh went pale under the pressure, squeezing her, until his orgasm was complete.\n\n\"Stay like that, stay there,\" she groaned, cocking her hips back and forth, twisting his penis in mild arcs. \"It feels so good there... right there... right... oh fuck!\" she hissed, sliding slowly forward drawing him out a few inches.\n\nShe dribbled on the leather upholstery, panting through her second climax.\n\n\"Oh shit, I'm sorry,\" she giggled a few moments later, \"I've made a mess of your seat!\" \n\nHe playfully smacked her rump and pulled himself out of her body, watching his frothy semen follow. As she had in the shower, she pressed her hand to her vagina to hold the disgorgement at bay as she chuckled. Her laughter encouraged more out, and it dripped between her fingers and joined the clear fluids already on the leather.\n\n\"Oh, crap!\" she laughed. \n\n\"The lav is back there!\"\n\nHelping her to a stand, he laughed hard as he watched her waddle down the narrow aisle with a hand between her legs and her shorts sliding down around her ankles.\n\nHe followed behind her when he realized the facility would be unfamiliar and certainly unusual to her. He slid the door open and showed her how to unlatch and raise the seat hiding the toilet. She sat and cleaned herself with tissue, laughing the entire time because she saw she'd dripped all the way down her thighs almost to her knees.\n\nShe washed her hands in the small sink, took off her shorts and panties and paraded her partially naked body back to her seat as Eric finished cleaning up the small mess on his cushion.\n\n\"Holy crap that was so awesome,\" he giggled like a schoolboy.\n\nHe watched Peggy pull a clean pair of panties out of her purse and slip them on, followed by her shorts.\n\n\"You always keep an extra pair in your purse?\" he grinned.\n\n\"After what happened at a pharmacy a couple of weeks ago, I do,\" she laughed.\n\nShe plopped into her seat with an audible sigh and grinned at Eric. \n\n\"So that's what it's like?\" she asked.\n\n\"What what's like?\"\n\n\"Having sex at,\" she looked at the LCD screen, \"thirty-five thousand feet?\"\n\n\"I guess so,\" he grinned, returning his seat to its prior configuration.\n\n\"You guess? You mean you've never...\"\n\n\"Nope. Never.\"\n\n\"You own this bird, and you've never once brought a girlfriend on it and did it?\"\n\n\"I bought this beast more than four years ago. I didn't even have a serious relationship in the previous few years before I bought it. Certainly never met a girl I wanted to have fun with like that,\" he answered. \"Until you,\" he smiled sweetly.\n\nPeggy smiled and absentmindedly played with her hair, twisting a tassel around her finger. She smacked her tongue as if she was saying mya mya silently.\n\n\"You have any water on this plane? I'm kinda parched after all that,\" she grinned.\n\n\"Oh, crap. Of course! I'm a horrible host,\" he chuckled as he sprung up and went to the cold-cabinet at the front of the plane and brought back two bottles. She cracked hers and drained half of it.\n\nShe burped, barely audibly. \"Oh, escusez moi!\" she said with a blush.\n\nHe chuckled. \"Blame the cabin pressure.\"\n\nShe laughed and smiled at him. \"You're absolutely goofy, you know that?\"\n\n\"I've been told,\" he winked.\n\nShe bobbled her bottle of water and looked at the LCD screen. It showed they were flying west at 515 miles per hour, at thirty-five thousand feet, just over Little Rock, Arkansas. She peered out the window and saw fragments of civilization below.\n\nShe smiled broadly and began cracking up. \"I just realized something,\" she said.\n\n\"What?\" he asked.\n\n\"You and I are now new members of a very exclusive club.\"\n\n\"Oh?\"\n\n\"Yeah. The mile-high club.\"\n\nHe was silent for a few moments. \"Whoa,\" he furrowed his brow. \"Yay!\"\n\nPeggy propped her foot on Eric's leg once again, and he slowly began to massage it. She sighed in relaxation and pleasure at his touch. He thought her feet to be very, very pretty. Perfectly sculpted, incredibly smooth, with beautifully painted nails.\n\n\"So, what happens in Oklahoma City?\"\n\n\"I think we should go have a nice dinner, maybe enjoy a bottle of wine, and relax.\"\n\n\"Is that all?\" she asked. \n\n\"I think so, why? Something else you'd rather do?\"\n\n\"I was thinking maybe you and I could spend the night together,\" she sighed under the tenderness of his massage. \n\nHe smiled broadly at her. \"That sounds very, very tempting. But I don't think it'd be a good idea.\"\n\n\"Why's that?\"\n\n\"Because, if I did, I would want to keep you up all night, and we can't have you all worn out tomorrow.\"\n\n\"Boy, who do you think I am?\" she asked wickedly.\n\n\"I think you're a woman that wants to impress.\"\n\n\"I'm also a surgeon that is not unaccustomed to high stress, late-hour diversions from my normal schedule. I think I can manage some low stress, late-night cardio,\" she grinned.\n\n\"Yeah?\"\n\n\"Yeah,\" she smiled sweetly.\n\n\"Well, alrighty then,\" he answered, beckoning her to offer him her other foot, which she did. \n\n\"Good lord, Eric. You keep doing that,\" she moaned, \"you might relax me to the point you'll have to take me off this plane over your shoulder.\"\n\nShe rocked her hips and shoulders, settling more relaxed and comfortably in her seat with an incredibly handsome man giving very thorough, very pleasant attention to her heels, toes, and soles.\n\nHe smiled. The two sat silently for several minutes, both enjoying what they were giving or receiving.\n\n\"So, how do you think today went?\" she asked.\n\n\"I think you were impressive.\"\n\n\"You were pretty quiet, though.\"\n\n\"I kind of need to sit on the sidelines because I don't want the risk of even appearing to exert pressure, but I wanted so much to ask my own questions and join the conversations.\"\n\n\"What kind of questions?\"\n\nHe grinned wildly. \"Oh, you know, things like 'What is that wonderful scent you're wearing,' or, 'How is it that you make that suit look so incredibly sexy?'\"\n\nShe tittered, \"Probably wise to have kept your mouth closed, then.\"\n\n\"But, seriously. I want to know how you plan on measuring data. How are you going to gauge the efficacy of one particular protocol over another? How are you going to level the field?\"\n\n\"You mean, how do I plan on maintaining a baseline across both the test and the control groups?\"\n\n\"Yeah.\"\n\n\"That is the question to which I've devoted most of my thought.\"\n\n\"What's your thinking so far?\"\n\n\"I'm not certain. That's where I think a good group of research panels will be invaluable. I want lots of opposing theories to challenge me so the protocol can be brought to the point the data will be rock solid.\"\n\n\"So... wait. You're saying that establishing a research protocol is adversarial?\"\n\n\"Oh, hell yeah. Want to know why?\"\n\nHe nodded.\n\nShe spent ten minutes describing the whole process, as well as what her hypotheses and conditions entailed. He listened to her with rapt attention. Her brilliance wasn't inhibited in any way, and it thrilled him that he managed to find such a catch. He hadn't even noticed the sounds of the engines spooling down. \n\nAfter a while, the intercom chimed. \"Mister Reiter, Doctor Foreman, we'll be landing in about fifteen minutes.\"\n\nPeggy looked at the LCD. They were fifty miles away, descending through eighteen thousand feet at 345 miles per hour and slowing.\n\n\"Come here,\" Eric beckoned with his finger.\n\nShe leaned forward in her chair, and he brushed her cheek softly with his fingers before kissing her. \n\n\"That's always nice,\" she sighed with a smile.\n\n\"I had to. Gotta buckle up now so I can't do it again for a while.\"\n\nThe two strapped into their seats and watched Oklahoma City arrive underneath them. Peggy recognized the OU Stadium as they turned to the north. They landed a few minutes later.\n\n\"Where do you feel like having dinner?\" Eric asked.\n\n\"Know any good steakhouses?\" Peggy asked.\n\n\"Of course.\"\n\n\"Then take me to your favorite,\" she suggested.\n\n\"Excellent,\" was his simple reply.\n\nThe plane taxied to its hangar, and the pair disembarked. Walking through the hangar to its exit, Eric neared one of the workers who was wearing coveralls.\n\n\"Hey, Kevin, when do you think the annual on my Skylane will be finished? I'm hoping to go to the ranch soon.\"\n\nKevin Mace was one of the better A&P mechanics on the field and was in high demand. He was also the flight instructor who trained Eric how to fly and to earn his instrument rating.\n\n\"She's all yours. I finished it this morning,\" he answered.\n\n\"Outstanding! You'da'man,\" he said and fist-bumped him in passing.\n\nFive minutes after that, Peggy and Eric were in his Victory Red Silverado LTZ Crew Cab, heading toward Interstate 244.\n\n\"What's a sky lane?\" Peggy asked after he'd settled into traffic.\n\n\"That's a single-engine airplane.\"\n\nShe stared at him for a few seconds.\n\n\"What?\" he asked.\n\n\"You have another airplane?\"\n\n\"Yeah.\"\n\n\"And more pilots?\"\n\n\"No, I fly the Skylane myself.\"\n\nShe stared again. \"You're a pilot?\"\n\n\"Yeah?\" he answered questioningly.\n\nShe just shook her head.\n\n\"What's the matter?\" he chuckled.\n\n\"Nothing. You're just full of surprises,\" she said.\n\n\"It's no big deal. Just about anyone can be a private pilot.\"\n\n\"Then why didn't you fly the jet?\"\n\n\"No. No way. That's way above my skill-set. I let pros do that. Monica has close to twelve thousand hours in total time. I'm just over four hundred.\"\n\n\"Why not just take the jet to the ranch?\"\n\n\"Well, the Citation costs about two thousand dollars per hour to operate. The Skylane, about two hundred. The Citation can't land there. The asphalt strip there is too short and can't handle the weight of the Citation.\"\n\nAbout ten minutes later, a valet took Eric's keys, tagged them, and handed him the stub. Eric escorted Peggy through the doors and was met by the hostess.\n\n\"Good evening, Mr. Reiter! It's been a while! Table for two?\" \n\n\"Hey, Sherri. Yes, please.\"\n\n\"Sure. Give me just a couple of minutes,\" she said, scurrying into the dining room. She returned quickly and escorted them to a table in a quiet corner.\n\nEric had a strong affinity for that particular steakhouse. Of course, the cuisine was five-star, but it was the dress code that he preferred. They would have been thrown out of even inferior establishments due to their present casual attire, but didn't draw any concern from the staff or any other patrons.\n\n\"Can I see your menu when you're done with it?\" Peggy asked Eric. \"Mine doesn't list prices.\"\n\n\"No,\" he said, grinning.\n\n\"Oh, okay,\" she grinned back. \"Live dangerously, then,\" she chuckled, but she had plans of her own.\n\nHe perused the wine list. When the steward came to the table, Eric requested a bottle of Two Hands Shiraz Ares 2014. He returned with it moments later, presented the bottle, then uncorked it. He poured a small sample into a crystal goblet and waited.\n\nEric carefully slid the goblet across the white tablecloth to Peggy. \"What do you think?\"\n\nPeggy's eyebrows arched. She picked up the glass, swirled the wine to aerate it, inhaled the aroma, and then took a small sip. \"Beautiful,\" she sighed, and nodded at the steward.\n\nHe carefully poured the bottle into a decanter, then poured from it into their goblets, then left them to themselves. Their dinner orders were taken a few minutes later.\n\n\"Okay, I just have to ask,\" Peggy began, \"You tooled around in Orlando for a week or so in an Audi R8. A quarter-million dollar hunk of bad-assery. We rode around in Atlanta today in a Mercedes-Benz limousine, and I've spent three hours on your, what'd you say, twenty-million dollar Cessna Citation, and you own a Skylane.\"\n\n\"The limo wasn't mine, it was from a car service, but yeah?\"\n\n\"You drive a Chevy truck.\"\n\nHe laughed. \"Yeah. Don't get me wrong. That Audi was incredible. It was fun.\"\n\n\"I'll say,\" she interrupted.\n\n\"Those kinds of cars are exactly that. Just for fun. They're totally impractical, and I can't see myself owning one. My truck fits my lifestyle better. I tow things, you know.\"\n\n\"Of course you do,\" she smiled. \"You have a ranch.\"\n\n\"Yup.\"\n\n\"But you can own more than one vehicle.\"\n\n\"I do. I also have a Chevy Equinox and a Cadillac Escalade. You know, for when I need to look a little more formal,\" he postured comically. \"Besides. The Skylane is the Chevy of the skies.\"\n\nThat made her laugh.\n\n\"I like to have fun and work hard, but I like being practical. I think I'm going to sell the Citation soon,\" he said.\n\n\"Why?\"\n\n\"Well, I'm kind of out of the business, right? The venture capitalists that originally financed Reiter-Marlin didn't see the benefit of it, which is why I own it instead of the company. It was a tremendous asset for when I needed to fly all over the country working with customers and suppliers and prospects and stuff, but... those days are over,\" he added quietly.\n\n\"You're retiring?\" she chuckled.\n\n\"Well, sort of. I'm only thirty-seven. But I'm kind of tired of it all,\" he said.\n\nHe'd begun to explain his reasoning when their meals were served.\n\nShe listened to him, nodding her understanding, as he described how his passions were changing. He no longer wanted to \"conquer the world,\" as he described his earlier years. He wanted to settle back and work with charities, create scholarships, and simplify his life.\n\n\"Yeah, I can understand every bit of that,\" she said. \n\nAs they continued to dine, she began to tell him more about how she wanted her own career to progress. She loved her profession, and was rightfully proud of her success. But the excitement of being able to do research was what propelled her, but always led to disappointment when funding was refused. \n\nThe waiter brought the tab in a leather portfolio and placed it in front of Eric. Peggy quickly took it and said, \"Eric, please let me buy dinner.\"\n\n\"Uh, Peggy, this is kind of an expensive steakhouse. The bottle of wine alone was over six hundred dollars.\"\n\n\"I know, I'm familiar with the label. Please. I got this,\" she said as she extracted her wallet, and from it, a card.\n\n\"Peggy, I don't want you to spend your money like that.\"\n\n\"I can afford it, okay? Do you know who I am?\" she peered at him with a sweet smile.\n\n\"I guess not.\" His pulse was quickened. \"Spill, girl. Tell me what's going on.\"\n\nHe watched her stare into the distance with a thoughtful expression forming on her face.\n\n\"It's kind of hard to explain. Suffice it to say that I'm not the struggling doctor you might think I am. I do alright. I think you termed it 'fluff and nougat'? Well, I've got almonds and caramel. I promise I'll explain it all to you... if you'll make a promise to me.\"\n\n\"What can I do?\"\n\n\"What happens after tomorrow?\"\n\n\"I'm not sure, really, we've got a full day of meetings and reviews and more introductions just like today, and I'll fly you home to Orlando. But after that, the decision is out of my hands. I'll give the nod to my attorneys. Then I'm done, I think.\"\n\n\"Okay. Then make me one promise. When you have some free time, come back to Orlando.\"\n\n\"Of course, I would love to,\" he said, but his eyes still questioned. \n\n\"But you'll need to come when I'm not working.\"\n\n\"I understand,\" he said. \"After tomorrow, you're on call for two days, right? Does that count as working?\"\n\n\"Only if my phone rings.\"\n\n\"Can I take that chance and go back with you tomorrow?\" he asked.\n\nShe considered it for a few moments. \"Yeah,\" she nodded.\n\n\"Wow,\" he said, staring at the almost empty decanter on the table.\n\n\"What's wrong?\"\n\n\"I am pretty sure I had only two glasses of wine since I'm driving, but... am I drunk? Because all this seems so insanely weird all of the sudden.\"",
        "\"No, we both have had only two,\" she assured him.\n\nThe waiter came to fetch the folio, and a minute later brought it back to her. She replaced her card into her wallet, then signed the check. He caught the amount at the bottom. $822.40 before tip. She rounded the total to an even $1000.00.\n\nIt was quiet at the valet stand. When the valet left to fetch Eric's truck, Peggy took the opportunity of solitude to offer Eric a kiss, squeezing the hand he was holding. The valet took just a few minutes to return with his truck.\n\nWhen they buckled into it, she asked, \"So where is this ranch of yours?\"\n\n\"It's a little over two and a half hours away by car. It's just outside of Nocona, Texas.\"\n\n\"Is that right?\" she asked. Eric noticed the tinge of surprise and interest in her voice. \"How big is it?\"\n\n\"A little over twelve hundred acres,\" he answered.\n\n\"You own a two square mile chunk of Texas. Right on top of the Barnett shale, in Texas Horse Country,\" she said with a tone of voice that made her sound distracted, like she was thinking about something else.\n\n\"When did you buy it?\" she asked.\n\n\"Seven years ago. Right after Lance and I sold our third start-up. How do you know all of that stuff? You're from California and you live in Florida. Most people from either of those places think of Texas as fly-over country.\"\n\nPeggy's mind was racing. She wanted to dismiss it all as purely coincidental, but couldn't, so she guarded her words. She didn't want to distract his driving. He wanted to watch her face and her body language, but it was dark in the cab of the truck and traffic was too busy to afford more than a glance.\n\n\"There's something you're not telling me,\" Eric said.\n\nShe sighed. \"Eric, let's talk about it tomorrow, okay?\" \n\n\"Sure. Alright,\" he said, sensing her hesitance. He was curious as all hell, but didn't want to press.\n\nThey arrived at the hotel just before nine o'clock. He fetched both of their suitcases out of the back seat of the truck and walked toward the entrance with her.\n\n\"When you check in,\" he said, \"the room is in your name but has already been paid for. Room service and minibar, too,\" he chuckled.\n\n\"Sure. Because I'm starving,\" she laughed.\n\nShe retrieved her key card from the front desk.\n\nAs soon as they entered the elevator, Eric pulled her close to him. He whispered in her ear, \"I am having so much fun being with you. You're really someone quite special, you know that?\"\n\n\"How is it that words like that coming out of your mouth cause me to feel so important?\" she asked, kissing him.\n\n\"Because you are. Simple as that,\" he said, returning her kiss with a little more intensity. \n\nWhen the elevator arrived at the selected floor, she walked hand-in-hand with him to her room and unlocked it. \n\n\"Peggy, I am really curious about something. I'd like to ask you a very personal question, and I want you to know that you should feel completely free to wave me off. I'm not entitled an answer, but I'd like to ask.\"\n\n\"Sure,\" she said.\n\n\"Like I said in the elevator. You're an incredible woman. You're like one in a billion. I've never met anyone like you. I'm just really curious why...\" he hesitated.\n\n\"Why what?\" she asked tenderly.\n\n\"Why you haven't been snatched up. I mean, sheesh! Not to sound like a pig or anything, but you've got to be one of the most attractive women I've ever met. And I don't just mean physically.\n\n\"You're crazy whip-smart, which truly has to be the most attractive thing about you. Why in the world have you not&mdash;\"\n\n\"Because every man I've ever been interested in turned out to be a ten-ton douche-wagon.\"\n\n\"Of course,\" he said, clearing his throat nervously.\n\n\"Whoa, that didn't come out right. Forgive me. You're not a... Crap. Sorry. But the last thing you just said. That I'm smart?\"\n\n\"Yeah?\"\n\n\"Every man I've met has been... I don't know. I think for a lot of them, especially in my peer group, I can only think it's that their egos are so huge there's no room for anything else. You told me you worry about gold-diggers. So do I. Then, there's the whole scalpel-jock mentality. Others maybe are intimidated by someone that might be as or more intelligent than they are.\"\n\n\"Why?\" He asked about her final declaration, having missed the clue because it fit so neatly into his weltanschauung that he didn't notice it.\n\n\"I have no idea. You tell me,\" she said, with exasperation in her voice.\n\n\"I can't. I really can't. Because you're like the total opposite of every woman I've encountered. You called them gold-diggers which is as apt a metaphor as I can conjure. They were vacuous and vapid. In it to win it. But you... you're challenging.\"\n\n\"I'm not sure how to respond to that.\"\n\n\"I like challenges,\" he whispered. \n\n\"I like you,\" Peggy said.\n\n\"I want you,\" he answered.\n\n\"Shit. What took you so long?\" she rasped as she quickly began to shuck her clothes. \"But I haven't showered since like five-thirty this morning,\" she said as she walked toward the bathroom.\n\nHe pulled the duvet from the bed and it settled into a heap beside it. \n\n\"I don't care,\" he said as he pulled her back and lifted her from the floor. He playfully carried her over his shoulder and swatted her vulnerably exposed rump while she squealed. He walked to the bed and placed her atop it. It took him barely five seconds to remove his clothes. Peggy grinned madly at his aggressiveness.\n\n\"You want this, huh?\" she challenged, splaying her labia with her fingers, showing him how very ready she was.\n\n\"You bet I do,\" he said, crawling on top of her and pushing himself between her fingers into her vagina.\n\n\"Oh fuck,\" they groaned in unison as they joined.\n\nShe decided to take the role of the aggressor, and flipped him on his back. His eyes flew wide in surprise. His cheeks pulled back in a wide, very satisfying grin. She sat atop him and took him into her body again. She ground her fur into his. The friction of his coarseness rubbed into her clitoris when she found the perfect angle. He nestled into the magic spot she was convinced her toys would never again satisfy the way his perfectly shaped and sized penis did. It tingled and throbbed with pleasure. \n\nShe ground against him. Her clitoris burned with incredible pleasure and sensation. The expression on his face mimicked her own. She watched his eyes peering right through her. Her soul was ignited. She felt she was walking on the edge of a cloud, right at the point of falling off into the abyss of weightless ecstasy when he reached to her breasts with both hands and played with her nipples.\n\n\"Peg, you're so unimaginably beautiful. We fit together perfectly. I've never felt such... \" he stopped before he admitted more than he was ready.\n\n\"What, Baby?\" she groaned.\n\n\"You're just... perfect,\" he sighed.\n\nThe sound of his voice and the tone of his compliments yanked the ends of threads and she began to slowly unravel. She felt the first strands give way, and her flesh erupted with goosebumps. \n\n\"Tell me more,\" she whispered, craving his affection and attention.\n\n\"The way you're moving. I love how you move! Your body is so... I don't know how to explain it. It feels so good! You're so... in balance! I could have you there forever because you're keeping me right on the edge without sending me past it. You are so totally in control... and it's so... perfect,\" he said, as he found her rhythm and rocked his pelvis with hers. \"I'm at a loss for words.\"\n\n\"God, Eric, where have you been all my life?\" she cried softly.\n\nThose words hit him squarely in the chest. He heard and felt her emotional release and it rang in his bones. He so craved to tell her, but vestiges of his armor remained and held his words at bay.\n\n\"In the wrong place until I met you,\" was his guarded answer.\n\nThey grasped and pawed and bit at each other's bodies until her release washed all over her emotionally and a portion of his midsection physically. Eric was thrilled to feel her erupt just moments before he ejaculated deeply into her body.\n\nShe adored the echoes of his groans and growls through his climax and the tight grip he had on her hips when she felt his semen washing over her cervix. She could almost feel it thumping against his glans when her muscles did the involuntary dance of orgasm.\n\nThey both cleaned up their fairly significant mess as best they could then settled into the dry half of the bed and cuddled each other to sleep."
    ],
    "authorname": "WillDevo",
    "tags": [
        "drama",
        "love story",
        "private jet",
        "female doctor",
        "doctor",
        "mystery man",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/when-ordinary-isnt-ch-03"
}