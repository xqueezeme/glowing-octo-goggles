{
    "title": "A Trick For Their Treat",
    "pages": [
        "Authors Note: Welcome to my entry in the  and my first story in this category since 2014, amazing how time flies. This is a fun story and although I still take a little time to set the scene, this one is less of a slow burn and more of an inferno than some of my other stories. Enjoy, Lovecraft68.\n\nChapter One\n\n\"Where the hell is he?\" Lisa lowered her cellphone when it went to Rick's voicemail for the third time in twenty minutes. \n\nShe looked at phone for the tenth time in the same period. It was 8:15 and their company was coming at nine. Rick's commute was close to an hour, and he'd promised to be out of the office by no later than six.\n\nThe last she'd heard from him was 6:15 and he said he was wrapping something up and would be on the road soon. Of all days to get stuck at the office. He should have done what Lisa had, leave at noon, and take the rest of the day off so they'd be relaxed and well rested for their yearly tradition. \n\nThe doorbell rang and Lisa checked the ring doorbell app she had open on the phone. Please don't let her be early. No, just three trick or treaters. Lisa walked to the door, grabbing the basket of candy from the small table next to it. \n\n\"Oh, look how cute you guys are!\" Lisa beamed as she was confronted with three young children dressed as different colored M&M's, their arms, and legs, protruding from the big round circle that comprised the costume. \n\n\"Trick or Treat!\" they cried out in unison.\n\n\"Well, I can't give you M&M's that would be kind of creepy, wouldn't it?\" \n\nThey all giggled and held up their bags while Lisa dropped a full sized Hershey bar in each. \n\n\"You guys stay close to mom and dad,\" Lisa waved to their parents who were waiting down the walkway. \"Lot of ghosts and scary things out tonight!\" They all yelled thank you and she laughed at the way they awkwardly waddled back to their parents.\n\nLisa remained in the doorway watching for any other kids that might be heading over. The few small groups across the street had already been to her, and there weren't any on her side now. \n\nShe went to close the door, then stopped when a car pulled up to the left of their driveway. The car door opened, and a tall blonde stepped out. Lisa watched her reach into the car and remove, then don, a pointy witch's hat. \n\nWhen she walked around the car, Lisa's breath caught. The girl's costume consisted of a knee high fuck me boots with a pair of black and white striped thigh high stockings protruding from them.\n\nHer tattered black dress barely went past her ass, and even from her vantage point, Lisa could make out the tops of the girl's large breasts in the low cut costume. It was hard to see her face with the brim of the hat obscuring part of it, but when she stepped under the streetlight, she appeared to be no more than twenty. \n\nIt was her, it had to be, Lisa's heart raced in excitement and beneath her silly Halloween t-shirt that featured Snoopy with fangs and a Dracula cape carrying a bag of candy, her nipples stiffened.\n\nThe trick was early, and Rick was late. She might just have to start without him, as the M&M's forgotten, Lisa was thinking about something else that would melt in her mouth. \n\nShe thought about closing the door and trying to rapidly ditch the shirt and baggy black pajama pants that featured dancing skeletons on them and answer the door in the outfit she'd planned on.\n\nBut the girl was now in front of the house and had glanced her way. Lisa remained in the doorway, her eyes bouncing from the girls' tits to her long legs, especially her creamy upper thighs visible between the hem of the dress and the silly Wizard of Oz style witch stockings. \n\nShe reached the walkway but kept going, her absurdly high heels clicking on the sidewalk. Lisa stepped out of the doorway and was going to call to her, when the girl suddenly waved and yelled \"Happy Halloween!\"\n\nTwo other girls, dressed in equally trashy costumes came running over from the house two doors down and the three of them hugged, then headed back to the other house, laughing, and chatting excitedly.\n\nLisa had forgotten the Norman's were away on business, and their 20 year old son and 18 year old daughter were home alone, and apparently throwing a Halloween party. Lisa sighed, and went back into the house, wondering how they possibly thought none of the neighbors would tell the Norman's they had a house full of young, and most likely drunk and high kids partying?\n\nAll she knew is she wouldn't say anything, nothing wrong with a little fun, after all, look how her and Rick celebrated the holiday. \n\nA trick for their treat, as he always said. \n\nShe put the candy back on the table, then pulled her cell from her pocket when Rick's ring tone, Billie Eilish's \"Bad Guy\" came up. \n\n\"Where are you?\" she demanded.\n\n\"I know, I know!\" he replied. \"Client needed some last minute revisions done on a contract, didn't get out until after 7.\"\n\n\"I've been calling.\"\n\n\"I was talking Jennifer through the list of people she needed to send it to, then to get Ross to sign and notarize it. If I stayed to do that I'd be another hour.\"\n\n\"I'd have started without you, you know that, right?\"\n\n\"Hey, worse things than walking in on two hot women going at it on the couch.\"\n\n\"It would serve you right, but you know I want you there. I love undressing them together.\"\n\n\"Perv,\" he laughed.\n\n\"Your perv, baby.\" \n\n\"I'm offended by that comment.\"\n\n\"Rick, not a man in the world would be offended by his wife wanting to bring a girl into the bedroom for some extra fun.\"\n\n\"Your fun, you're the one who craves pussy from time to time.\"\n\n\"Oh, so when you get to fuck them, that's for me too?\" \n\n\"Strictly for you, I take it for the team,\" he laughed. \"Or she takes it from the team, one of the other.\"\n\n\"Who am I kidding,\" she sighed. \"It is for me; I love watching you fuck those luscious young things. Those tight bodies, firm titties, and tight cunts.\"\n\n\"Sounds like you're getting ready to start now.\"\n\n\"I've been ready all day, baby,\" she giggled. \"I woke you up sucking your cock, didn't I?\"\n\n\"Best wife ever!\" he laughed.\n\n\"How far out are you?\"\n\n\"I'll be there in fifteen, should have time to change, I need to get out of this suit.\"\n\n\"Aw, you don't want tonight's playmate to help? Maybe wear your tie?\"\n\n\"I had a chili dog for lunch and wore some of it.\"\n\n\"You're bringing sexy back for sure,\" Lisa shook her head. \"Then break some laws and get your ass home.\"\n\n\"Working on it.\"\n\n\"You confirmed with the agency, right? She's coming at 9?\"\n\n\"Yes.\"\n\n\"You stressed younger the better?\"\n\n\"I told them barely legal is the preference.\"\n\n\"Did...\"\n\n\"I did it, Lisa. Age, dressed seasonal, needs to be into men and women and I paid for a three hour block, she's ours until the witching hour.\"\n\n\"How much?\"\n\n\"They get $150 an hour. Her price, for her,\" he cleared his throat. \"Time and company is a grand.\"\n\n\"Ouch,\" wasn't last year less?\"\n\n\"No, last year the girl asked for $1200. They charge more for couples, remember?\"\n\n\"Oh,\" she shrugged even though he couldn't see it. \"I got it mixed up.\"\n\n\"Now, if you want to go back to the first time we did this ten years ago, I wouldn't mind those prices.\" he gave a mock sigh, \"Inflation.\"\n\n\"That's right its our tenth year of giving ourselves a naughty little trick for a treat.\"\n\n\"Some couples celebrate weddings and first dates; we celebrate the anniversary of the Halloween we decided it would be fun to have a private party with only one guest.\"\n\n\"A young succulent one.\"\n\n\"The kids dying down? Be a pisser if the damn bell keeps ringing once she's here.\"\n\n\"Yeah, usual pattern, it's been a trickle since 8, most younger kids are home before nine, once she's here we'll shut the lights off, and start the party.\"\n\n\"Sounds good, crap! Jennifer is on the other line, see you in a few.\"\n\nThe doorbell rang and Lisa passed out candy to a group of teenagers that were a little too old to be out there, but as they left, another look up and down the street showed very few kids still milling about.\n\nShe glanced to her left at the sound of laughing and saw some more kids were arriving at the Normans. She eyed a tall redhead dressed as a slutty nurse and another girl as a French maid.\n\nLisa sucked on her lower lip, her nipples once more at attention as she imagined getting her hands, and mouth, on them. Hearing their delicious little whimpers and squeals as she showed them how a woman can eat their pussy far better than their boyfriends.\n\n\"Down girl,\" Lisa chided herself and slipped back into the house. \n\nIt was quarter to nine. Lisa wasn't sure who was going to win the race over, Rick or the main event, but she knew she was done with trick or treaters for the night. She still left the light on for their impending guest but wasn't going to answer the door for anyone else. \n\nRick would come in the back, so if it wasn't a hot young woman on her doorbell camera, they were out of luck. Lisa put the basket of candy on the coffee table then went over to the cherry wood credenza along the wall that was covered with photos of her and Rick along with their nieces and nephews and other family members \n\n\"Don't look guys,\" she told the smiling faces staring out from their frames. Lisa opened the top drawer and removed an envelope, counting out ten hundred dollar bills. \n\nThere was another five in there as they always liked to have some cash on hand in case of an emergency, or in this case, even though this was already an $1800 night, they'd happily throw their playmate a tip if she were that good. \n\nLisa looked around the room to make sure all the blinds were down, then stripped off her shirt. \n\nTime to get some candy for herself. Young, hot, sticky sweet candy.\n\nChapter Two\n\n\"Made it!\" Rick exclaimed as he came bursting out of the kitchen, causing Lisa to jump and almost drop the lighter in her hand. \n\n\"You got five minutes,\" she called out as she finished lighting the last of the half dozen candles she'd placed around the bedroom. \n\nThe candles threw enough warm light to be able to give a good view of all the action, but keep the corners of the room in darkness, and the flickering shadows they cast on the ceiling and wall was an effect both romantic, and sexy.\n\nRomance wasn't in the air, but the room would be smelling of sex, very shortly.\n\n\"Damn, look at this,\" Rick entered the bedroom, his tie already hanging around his neck and unbuttoning his badly stained white shirt.\n\n\"I know, they're a great touch, really makes all that soft smooth skin glow.\"\n\n\"I was talking about you,\" he put his arms around her and planted a deep kiss on her lips.\n\n\"Hmm,\" she sighed as she returned the kiss, parting her lips and slipping her tongue into his mouth. \n\nHe got her hands between them, finishing his buttons as their tongues probed each other's mouths. She pulled his shirt open and slid his hands along his thick hairy chest, then teased her long nails down and cross his hard flat stomach. \n\nHis hands found her breasts, fondling them through the silky material of her short orange robe, and matching bra. His fingers played across them until he found her nipples and gave them a light pinch.\n\nLisa groaned into their kiss, her hands now on his belt, deftly undoing it, then popping open his slacks and yanking his zipper down. Rick's mouth left hers and nuzzling into her hair, his lips found her neck.\n\n\"That's the spot,\" Lisa purred, letting her head fall to the right, giving him better access to her soft flesh. \n\nHe groped her breasts harder, and her hand dipped into his boxers, her slender fingers slipping around his thick hard cock. She pumped him and he moaned into her neck, as he licked and gently sucked on her. \n\nLisa stepped back and sat on the edge of their king sized bed and yanked his slacks and boxers down. His cock, his beautiful long thick, and even after 20 years together, always hard for her, cock. \n\nShe licked her lips, then kissed his already oozing tip. She opened wide, then gasped, \"Hey!\" when he caught the sides of her face in his hands and stopped her. \n\n\"She's going to be here any minute!\" he told her. \"Get out there while I take a speed shower and change.\"\n\n\"But,\" she blinked, Jesus, she'd been so horny all day she'd literally lost control of herself. \"Just a taste?\"\n\n\"Nope,\" he stepped back from her. \"She gets first taste, that's our rule.\"\n\n\"Killjoy,\" she pouted him through her full sensual lips which were currently sporting black lipstick on the top, while her lower lip was coated in bright orange. \"She tastes me first too then.\"\n\n\"That's...\"\n\n\"And I taste her first!\" she gave her head a defiant toss sending her long blonde hair flying behind her. \n\n\"Yes ma'am, now get out there so she doesn't ring the bell, think she got stiffed and leaves.\"\n\n\"Oh, she's going to get stiffed tonight,\" she gave his twitching cock a playful slap. \"As many times as we can suck it hard.\"\n\n\"I accept the challenge!\" he laughed, slipping his shirt off, then pushing his pants down and stepping out of them.\n\n\"Rick, just looking at you still makes me wet; you know that?\"\n\n\"Born romantic you are,\" he laughed, then pointed to the door. \"Man your post, before you lose out on our candy.\"\n\n\"Yes sir!\" she gave him a mock salute, but her eyes remained on him as she left the room. \n\nRick, a former safety in college who if not for a bad knee injury may have had a shot to be drafted, was still a physical specimen at 40. 6'2\" and 210lbs of solid muscle. His shoulders and chest were broad, but tapered down to a narrow waist, maintaining the triangular build he'd had as an athlete. \n\nHe wasn't jacked as the expression went, when he worked out it was to maintain strength and tone, not add mass, but his biceps stood out even when he didn't flex, and his forearms were thickly muscled. \n\nHis stomach still had the vestiges of the perfect six pack he'd managed to hold onto most of his life but had begun to slip over the last year. But it was still flat, hard, and impressive. \n\nNot as impressive as Lisa's favorite of his physical attributes, his amazing cock. Once back in college when they'd first started having sex, she'd been drunk and high and decided to measure it. \n\nHe'd come in at just under nine inches and his girth matched his length. Lisa had always enjoyed sex, starting with her first time, ironically on the night of her sweet sixteen party, proving she was anything but. \n\nShe'd had sex with several boys in high school and that many just in her first year at PC. When she'd met Rick in their sophomore year, she'd had plenty of experience, but the first few times they had sex he had to go slow because if he didn't, between his length and how thick he was, it was more painful than enjoyable. \n\nEven giving him head wasn't easy at first, but Lisa knew practice made perfect and in no time she was deep throating him and taking his cock deep and hard doggy style and any other way they could come up with.\n\nOne of the many hot things they enjoyed about the occasions they treated themselves with a hot young thing, was the delightful little squeal and the high pitched yelps when Rick fucked them. \n\nThat wasn't always the case with the escorts, some of them, even by their early twenties, had taken enough cock they were used to pretty much anything, which was why when Rick contacted the agencies he specifically asked for whoever they felt had the least experience. \n\nBefore she left the room, she gave Rick a smile and a wink, and took a second to admire him from the neck up. His thick black hair had gone salt and pepper a couple of years ago, but it was a good look on him. \n\nThat extended to his short neatly trimmed beard as well, and again, she liked the effect. He was a sexy man getting older and embracing it. His stunning ice blue eyes accompanied by his strong jaw and rugged features, earned him his nickname of \"GQ\" at his law firm where after 12 years he'd finally made senior partner. \n\nLisa reluctantly left the room, but not before she watched him walk into the bathroom, taking in his wide powerful back and firm ass. She was a blessed woman, and about to feel even more blessed. \n\nShe wandered back into the living room to see it was five of, she was cutting it close by getting carried away in there. Lisa removed her phone from her robe pocket, and pursed her lips in thought, the agency had the number of the phone Rick only used for occasions like this, not hers, if the girl was going to be late she wouldn't know. \n\nRick would be out in a few minutes, so if she were late, it would work out. Lisa went over to the bar and leaning over plucked a bottle of Captain Morgan Parrot Bay Rum from behind it. \n\nShe poured some in a shot glass, knocking the smooth coconut flavored rum back, then poured some in a larger glass and mixed pineapple juice into it from the bottle she'd brought from the kitchen earlier. \n\nShe sipped at the sweet drink and took in her reflection in the mirrored back of the bar. For the occasion, Lisa's long straight honey blonde hair which fell to her mid back had been pulled into pig tails, and she'd added some spray color, streaking the right with black, the left orange.\n\nShe had curled some of the front, enough to give her a pair of banana curls that framed her face and were the opposite color of the pig tail on that side. Her eye shadow was orange on top, the lower half black and her eye lashes heavily caked with black mascara. \n\nSame for her normally fair cheeks, where she normally used just enough blush to highlight her high cheek bones, but tonight applied it far more liberally. Her lips sporting the dual Halloween colors further called attention to how large and sensual they already were. \n\nLisa wasn't vain, but knew her and Rick made a beautiful couple, and not just from the neck up, in her case either. At 5'9 her legs were long, strong, and perfectly shaped. Her build was slender and athletic, with a thin waist and just enough hips to give her a good figure, her ass was as firm and tight as her legs, but her breasts didn't match the rest of her, and neither Rick or any other man, or woman, had ever complained.\n\nLisa's breasts were a full D which would have been prominent on any woman but looked even bigger on her in proportion to the rest of her slender athletic build. The hazard of big round natural breasts was gravity, but to her relief, although they weren't quite the things of wonder they were at 20, they were still holding up well. \n\nWhen she noticed the slight sag, Lisa took to keeping her bra on for occasions like this or extra sexy nights with Rick when they went away, and she wore new lingerie, and they had all night to play.\n\nShe would just pop 'the girls' out of the cups and let the bra help hold them up. Lisa often thought she was glad she'd managed to keep her legs and ass firm with yoga and running, kind of hard to hide a sagging ass, at least with your pants or skirt off. \n\nLisa walked away from the bar sipping the drink and admiring her long nails which were alternately painted orange and black. She was barefoot, and her toes matched. As did her outfit which was a lingerie set she'd bought just for tonight.\n\nThe black lace trimmed orange robe barely went past her ass to where if she bent over she'd be flashing her black string thong with a patch of orange lace covering her pink slit. \n\nThe back of the thong was only a black string between her cheeks and topped with a cute pumpkin bow. The matching bra, so skimpy more than half her breasts were visible, and a bounce from falling out, was black with orange laced cups. \n\nShe'd tied it loosely so plenty of her large breasts could be seen between the black trim. Lisa's look and ensemble screamed Halloween, and soon she'd be screaming whatever the name of their playdate was. ",
        "The doorbell rang, and she chugged the rest of her drink before moved slowly to the door, checking the phone to make sure it wasn't trick or treaters.\n\n\"Oh, look at you,\" she purred as she took in the vision on her doorstep. \n\nA tall brunette in a sexy devil costume, complete with a pitchfork in one hand, and a plastic pumpkin dangling from the other. \n\n\"Rick!\" she called out. \"She's here, hurry up!\"\n\nHe didn't respond, probably couldn't hear her from two rooms away and the shower running. Oh, well, he was going to miss sharing her first full look at tonight's delicious treat. \n\nLisa went to the door, her heart racing with excitement and anticipation of the amazing time they were going to have. She opened the door and laughed when the girl lifted the pumpkin and chirped, \"Trick or Treat!\"\n\nShe certainly was a treat in every sense of the word. Her costume consisted of a one piece short red dress belted tightly in the middle. The top featured a V-neck which plunged down between her breasts, which were on the smaller side, but propped up nicely from not just the tight dress, but the black bra Lisa could see the edges of. \n\nHer long legs ended in a pair of black open toed fuck me heels and were encased in red thigh high fishnets, and despite being on the slender side, had a nice shape to them. The fish nets ended a few inches from the tattered strips that made up the hem of her dress, leaving a few inches of her well-toned thighs visible.\n\nThe girl's long, raven black hair had been pulled over her shoulders, so it hung alongside her breasts, framing the visible flesh of her chest. No doubt done deliberately, and it was an effective and sexy touch, her ebony hair a hot contrast to both the bright red dress and her fair complexion. A red headband with horns sat atop her head, completing her naughty devil outfit.\n\nThank God for an unseasonably warm night so the little minx didn't have to cover up an inch of her perfection with a jacket. As hot as her body was, her face was just as exciting. Like Lisa, her red eyeshadow and mascara were garishly applied and her cheeks heavily rouged. \n\nHer lips, as full and sensual as her own, were painted blood red, but trimmed with black lip liner. The overall look leant her an intense and dissolute look, but Lisa's practiced eye could see the soft features beneath the whorish make-up.\n\nBeneath the eye shadow, her brown eyes were wide and innocent, doe eyes, but Lisa imagined they could smolder under the right circumstances. Her face was slightly round, especially her cheeks, the last vestiges of a baby face.\n\nBecause of her youthful features her full lips, which on an older woman would be described as sensual, gave her more of a petulant bratty look. Overall, her face was caught between a teenager and a mature woman, a look that drove Lisa wild. \n\nShe wasn't just young, she looked barely legal as the saying went; exactly what her and Rick always looked for but could rarely find. A girl old enough to legally fuck and willing to do it for money wasn't easy to find. \n\nLisa's face flushed and a similar heat grew between her legs at the image of those lips pressed into a precious little pout as she looked up at her with those big doe eyes. Or better yet, around Rick's cock, whimpering as Lisa fed it to her.\n\n\"Trick or Treat?\" The girl repeated, and Lisa realized she'd been standing there gawking. \n\nShe recovered from her lust addled daydreaming and went along with the game. \"Are you looking for some candy, little girl?\" she teased.\n\n\"Well, um,\" she lifted the pumpkin again, and Lisa noticed it was close to full. \"It is Halloween.\"\n\n\"You even brought candy, what a nice touch!\" Lisa beamed at her. \"But there's only one thing I'm looking to unwrap, my sexy little devil.\" She ran her tongue over her lips, \"Hmm, aren't you scrumptious looking.\"\n\n\"Thanks,\" the girl gave her an odd look, \"You look good too, like a Halloween Harley Quinn.\"\n\n\"You like?\" Lisa held up the pig tails. \"They make great handles.\" \n\n\"I guess,\" she laughed, but it seemed forced, and Lisa's excitement grew; she was playing shy with her. \"So, um, do you have any candy?\"\n\n\"I sure do,\" Lisa stood to the side and pointed into the living room to the wicker basket. \"You're the last trick I'm treating tonight,\" she winked at the joke, \"So you can help yourself.\"\n\n\"Really? The girl flashed a big smile. \"That's really nice of you, I can fill this thing, then go party!\"\n\n\"That's sounds like a plan,\" Lisa moved to the side to let her by, \"Come on in, I'm Lisa.\"\n\n\"Candy,\" the girl walked past her, and Lisa caught a whiff of her perfume which she recognized as Ariana Grande's Sweet like candy because Rick's teenage niece wore it. \n\n\"Like the perfume and the holiday?\" Lisa joked as she closed the door behind her, then turned to admire the girl's small firm ass which was well displayed in the tight dress. \n\n\"No, for real,\" she reached the table and leaned over to rummage through the basket. \"My name's Candace, so my nick name's candy, guess this is and Valentines are my holidays.\"\n\n\"Something tells me you'd be fun to unwrap any day of the year,\" Lisa sauntered around the table so she could get a look down Candy's dress and wasn't disappointed by the view of the inner halves of her smallish breasts in what looked like a black imitation leather bra. \n\nCandy had been pulling out Tootsie rolls and snickers bars, and dropping them into her rapidly filling pumpkin, but paused at her remark. She looked as if she were going to reply, but instead continued picking through the basket, but more quickly.\n\nLisa took a moment to admire her long black nails, then a quick glance at her feet to see the toes beneath the red fishnets matched. \n\n\"I know all that candy is tempting, but I have something a whole lot sweeter for you,\" she emitted a naughty giggle. \"Stickier too.\"\n\nCandy grabbed a last handful of treats and put them in the now full pumpkin, then straightened. In the heels she was Lisa's height, and their eyes met for the first time. Lisa's bright with excitement, but Candy's eyes were wide in shock.\n\n\"Are you hitting on me?\" \n\nOh, how precious! She was playing shy! Where was Rick? He was missing the start of the game!\n\n\"Damn straight I am,\" Lisa told her. \"Baby girl, you are hot as fuck.\"\n\n\"Baby girl?\" She looked away, and Lisa was impressed with the look of genuine embarrassment on her face. She swore there might even be a hint of a blush under the heavy make-up. \"I...I'm flattered, but I'm not into girls.\"\n\n\"I'm no girl, honey,\" Lisa gave her a wicked smile, \"I'm a cougar looking for a kitten,\" she released a perfect tiger's growl, rolling her tongue.\n\n\"Um, wow,\" The flustered look on Candy's face was worthy of an Oscar, this girl was amazing. \"But I'm not looking for that, I'm just trick or treating.\" She lifted the full pumpkin. \"Thank you for the candy, I'm...\"\n\n\"Just trick or treating?\" Lisa smirked. \"At your age and that outfit?\"\n\n\"I'm only 18,\" she shrugged, and Lisa caught the delectable way her firm tits jiggled, but that thrill paled in comparison to her words; was she really only 18? The agency had out done itself this time. \"I'm going to a party after this.\"\n\n\"That you are,\" Lisa stepped towards her, but Candy took a nervous step back. \"A private party.\"\n\n\"I told you when you said I could take what I wanted that meant I could go party sooner,\" she seemed seriously put off, one hand on the hip, and even her foot tapping. Was she working her way through a performing arts school? What the fuck was Rick doing?\n\n\"And just so you know,\" Oh my god, she even has the tone to go with the body language, Lisa thought. \"I'm trick or treating for my little brother, he broke his leg and can't go, so I said I'd bring him home candy.\"\n\n\"What a good big sis,\" Lisa nodded, playing along, and stalling for Rick to come out. If she found out he took a call from work, she'd shut him off for a week after tonight. \n\n\"Could have just bought some though, no?\"\n\n\"I haven't gone in a couple of years and thought this would be fun.\" \n\n\"I bet it would be fun walking around looking as luscious as you do,\" Lisa laughed. \"Let me guess, the women gave you dirty looks, the guys gave you extra treats?\"\n\n\"Pretty much. You're the first woman that's done it though,\" Candy told her. \"I appreciate you letting me fill up, have a nice night.\"\n\nShe spun on her heeled foot, and Lisa caught her arm.\n\n\"Hey!\" Candy pulled away from her. \"What are you drunk, or something?\"\n\n\"Okay, honey, I love that you're all in on role playing, but how about we start a new game? My husband will be coming out in...\"\n\n\"Your husband?\" Candy's face scrunched up. \"You want to tag team me? Ewww, creepy old people!\"\n\n\"I am not old!\" Lisa snapped at her, then took a breath. \"Sorry, I didn't mean to raise my voice, but I asked you to stop playing coy.\"\n\n\"I'm not playing anything,\" Candy had the indignant tone again. \"Or with anyone, at least not here.\"\n\n\"Not here?\"\n\n\"I'm off to a party and maybe I'll meet someone to hook up with, but one person, a guy my age, not my mom's.\"\n\n\"Still with the act?\" Lisa sighed. \"I'm sorry if I'm coming on too strong, you're young, maybe you're new to this. I have had a couple of drinks and I'm feeling fun and flirty.\"\n\n\"I'm not new to being perved on, its usually just not by a woman. I'm going now,\" she put her finger up in warning. \"Don't grab me again, okay?\"\n\n\"Here,\" Lisa reached down and picked up the envelope from the table. \"This will make you less nervous. I should have already given it to you.\"\n\n\"What's that?\" Candy eyed the envelope warily. \n\n\"Its for you, just take it. Consider it your best treat of the night.\" Lisa leaned over and dropped it into her pumpkin, then sat down on the couch. \"Go ahead, you can make sure it's all there.\"\n\n\"Huh?\" Candy pulled the envelope from the pumpkin and peered into it. \"Holy shit.\"\n\n\"A thousand dollars, and if you're as good as you look, there might be a tip when we're done.\"\n\n\"Holy shit!\" she repeated louder. \"You think I'm a hooker?\"\n\nLisa rolled her eyes. \"I might have to forget the tip if you don't do as I ask and drop the games. That's the donation we agreed on with your agency.\"\n\n\"Donation?\" she was still staring into the envelope.\n\n\"\"For your time,\" Lisa winked. \"I mean that's all we're paying for, anything else that happens, just happens, right?\"\n\n\"Nothing's happening!\" Candy flipped the envelope back into the table. \"I can't believe you think I'm a whore! Why? Because I'm dressed in a sexy costume?\"\n\n\"Easier than to believe you were actually trick or treating like that, and for the last time, I'm going to nicely ask that we drop the oh, I don't do that, act and switch to playful.\" She patted the couch next to her. \"Come to mama.\"\n\n\"Jesus! I'm not switching to anything because I'm not a fucking hooker! Can't believe you think...\" she snapped her fingers. \"You think I'm one because you're expecting one!\"\n\n\"Duh.\"\n\n\"For you and your husband, that's...\" she waved her hand. \"Whatever, you do you and whoever else you want, I'm out of here.\"\n\n\"Oh, for fuck's sake!\" Lisa rose from the couch. \"Honey, if you don't think you can go through with it, fine go, but once I call the agency you won't be...\"\n\n\"Lisa!\" Rick spoke behind her, making her jump. \"Let her go.\"\n\n\"Huh?\" she turned around to see Rick clad in just a pair of black sweatpants behind her. \n\n\"She's not the girl.\"\n\n\"What?\" Lisa's eyes went wide.\n\nRick lowered his voice to a whisper. \"Agency called, that's why I took so long. The girl got rear ended a few hours ago, and just called them when she got out of the ER, hurt her back and neck.\"\n\n\"Oh, shit,\" Lisa felt her face flushing, and no longer from passion. \n\n\"They can't find anyone else short notice, guess we're not the only ones who like a trick as a treat. I tried two other places I found online and same thing. We're out of luck.\"\n\nHe stepped around Lisa.\n\n\"I apologize for this embarrassing situation, um...?\"\n\n\"Candy.\"\n\n\"Seriously?\" He started to laugh, then stopped when she wasn't smiling. \"Again, apologies. My wife thought you were someone else, and honestly I can't really blame her, you showed up exactly when she was supposed to, and you look the part shall we say.\"\n\n\"Thanks,\" Candy shook her head. \"Told you I wasn't a hooker.\"\n\n\"I'm sorry, far sorrier than Rick is because I made an absolute fool out of myself.\"\n\n\"It's okay, I guess,\" she shrugged. \"Now you know I wasn't lying about trick or treating.\"\n\n\"Right, and that's a nice thing you're doing for your brother. I hope you have a great time at the party.\"\n\n\"Thanks,\" Candy surprised her with a smile. \"Okay, now that this is sorted out, it is kind of funny.\"\n\n\"Funny for you maybe, you didn't act like a reject from desperate housewives.\" \n\n\"I don't think you're desperate,\" Candy wasn't looking at her as she spoke, instead she was eying Rick, like blatantly up and down eying him. \"I think you're pretty lucky, your husband's damn fine.\"\n\n\"Why thank you!\" Rick flashed his high wattage smile. \"Seeing you said that I won't feel as creepy to tell you I'm even more disappointed about tonight after seeing you. I can see why Lisa was so excited. \"You're a beautiful young woman.\"\n\n\"Yeah?\" Candy's smile broadened. \"You think so?\"\n\n\"Not just beautiful, you're, what's the expression, sexy as fuck.\" He put his hand up. \"I mean that in a harmless way but have to call it like I see it.\"\n\n\"You can call it whatever you want,\" Candy beamed. \n\n\"Hey, you called us a creepy couple and told me I was your mom's age!\" Lisa complained. \"Now you're all smiles.\"\n\n\"I think older guys are hot,\" Candy shrugged, and Lisa saw Rick catch the same jiggle she had. \n\n\"Do you now?\" Rick winked at Lisa. \"Tell me more.\"\n\n\"Daddy issues,\" Lisa folded her arms over her chest.\n\n\"Behave, babe,\" he chided her. \"We're the ones who were rude to her,\" he chuckled. \"Well, you were.\"\n\n\"She's pouting,\" Candy pointed to Lisa, \"That's funny.\"\n\n\"I love a good pout,\" Rick admitted. \"My wife has a good one, but they're better from a pretty young girl. I bet you have a good pout, especially with those big eyes.\"\n\n\"I do have a nice pout,\" Candy lowered her head and looked shyly at him. \"Wanna see it?\"\n\n\"I'd love to.\" Rick was standing to Lisa's right and slightly behind her, just enough to give her ass a quick tap, a signal to play along. \"You going to show me, or you teasing?\"\n\n\"I guess I could show you,\" Candy gave him a quick smile, then pushed her black coated lower lip into an adorable pout while looking up at him through her long lashes.\n\n\"Oh, that is nice,\" Rick said softly as Candy managed to make her lower lip tremble. \"Very bratty, very sexy.\"\n\n\"You get whatever you want with that don't you?\" Rick tapped Lisa again and she took the hint he wanted her to let him do the talking.\n\n\"I do.\"\n\n\"Just from your dad or, you know,\" Rick gave her a sly smile. \"From the boys?\"\n\n\"From everyone, but,\" she fixed her eyes directly on his, \"Especially from older men.\"\n\n\"Right, you said you like older men, but we didn't get to hear why.\"\n\n\"They're not stupid like boys my age, they don't play games, they're not grabby, and I don't know, boys my age should be in shape, but an older guy who looks good? That's hot.\"\n\n\"For someone who's only 18, you know a lot about older guys,\" Lisa spoke up. She could feel Rick shooting her a look, but her question paid off.\n\n\"Just because I'm 18 doesn't mean I haven't fucked a couple of older men.\"\n\nLisa's nipples stiffened at her comment, and she felt her excitement returning. Since Rick had appeared, Candy's demeanor had completely changed. She was obviously flirting with him, but she'd also said she didn't like women. If they couldn't get her into both of them, it wouldn't happen. \n\n\"Something you didn't say about guys my age,\" Rick took over. \"Is thing with boys your age, they're with a hot young woman like you and they think its always going to be that way. \n\n\"But for us? We know that's not always the case, so we appreciate a fine young body in a way they don't. We know we're lucky to be with them and we treat them a lot better because of it.\"\n\n\"I don't know,\" Candy nodded towards Lisa and her next words had her pussy flowing once more. \"Your wife is pretty damn sexy, I think you made out okay.\"\n\n\"She is sexy,\" Rick put his arm around her and leaned in, giving her a quick kiss. \"Lisa's still the most beautiful desirable woman I've ever seen.\"\n\n\"Aw, that's sweet!\" Candy clapped her hand to the one still holding the pumpkin. \"Tell you what, you guys are both lucky.\"\n\n\"We think so, that's why we do anything we can to make each other happy, but right now? I feel like I owe you something to make you happy.\"\n\nHe picked up the envelope and reached into it.\n\n\"Yeah?\" Candy watched him; her eyes bright in anticipation. \n\n\"I think this can make up for our little case of mistaken identity.\" Rick handed her two hundred dollar bills. \"Fair?\"\n\n\"Thank you!\" She took the money, folded it, and shoved it deep into the pumpkin. \n\n\"It was nice meeting you, Candy,\" Rick extended his hand. \"You have fun at that party,\" he gave a mock sigh. \"Too bad there will only be boys there though.\"\n\n\"Right, the party.\" Lisa saw her eyes were darting back and forth between the envelope in Rick's hand and Rick himself.\n\nThey moved from his face to linger on his muscular torso, then to Lisa's delight directly on his crotch. Lisa wasn't the only one excited, even in the loose fitting sweatpants, her husband's semi hard cock was prominently displayed. \n\nShe tried to slow her breathing and stay calm and gave credit to Rick who despite his own lust was still acting casual and conversational, his experience as an attorney paying off. \n\n\"You should be going, don't want to miss anymore fun.\" He put his hand up in an \"Oh, well\" gesture. \"Our fun was ruined, yours doesn't have to be.\"\n\n\"I think you guys can have plenty of fun from the looks of it.\" \n\n\"We do, all year long,\" Lisa said, \"I am a lucky woman, we still go at it like teenagers, but thing is? Once a year we give ourselves a little treat.\"\n\n\"Ten years now?\" Rick asked casually.\n\nCandy's eyes had been on Rick but shifted to Lisa and her heartbeat faster when she saw her dark eyes roam over her, starting at her bare feet, and ending at her breasts. \n\n\"Yeah, I think so.\"\n\n\"Can I ask you guys a question?\" \n\n\"Sure,\" Rick answered then put his hand up. \"Hey, you want a drink?\"\n\n\"I'm only 18,\" Candy reminded them, but with a smile playing about her lips.\n\n\"Because you weren't going to drink at that party?\" Lisa raised her eyebrows. \n\n\"Guilty,\" she giggled, a sound Lisa longed to hear in her ear or muffled from between her thighs.\n\n\"How's an appletini sound?\" Lisa asked. \"Its sweet, but does the job,\" she winked. \"Kind of how I like my girls.\"\n\nThis time Candy wasn't put off by her remark and nodded. \"Can I really have a drink?\"\n\n\"Absolutely,\" Rick gestured to the recliner. \"Have a seat.\"\n\n\"Thanks!\" Candy sat down and put the pumpkin on the coffee table.\n\nLisa kept an eye on her as she went to the bar and watched her cross her long legs. She caught a flash of white thigh and black thong, and when she picked up the appletini mix, her fingers trembled on the bottle. \n\nIt could still happen.\n\nLisa ignored the small glasses and poured her a tall one and brought it over to her. \n\n\"Hear you go, sweetie,\" she leaned over, and felt her confidence grow when Candy looked down her robe as she took the drink.\n\nShe took a sip, then a long swallow as Lisa joined Rick on the couch across from Candy.\n\n\"Wow, this is good!\"\n\n\"It is, the real ones are stronger, but I buy the mix,\" Rick admitted. \"Too lazy to make drinks.\"\n\n\"He has better things to do,\" Lisa put her hand on his thigh, a few inches from his semi hard cock.",
        "\"You said you had a question?\"\n\nCandy paused to take several large swallows and Lisa's nipples ached when she watched her face flush while her already brighter eyes blinked rapidly. \n\n\"Damn,\" she breathed. \"Question? Oh, yeah, I mean if you don't mind.\"\n\n\"We owe you, so you feel free to feel free.\" Rick encouraged her. \n\n\"And feel free to feel free with me,\" Lisa laughed. \"That's the rest of the expression.\"\n\n\"I like it,\" Candy had now downed two thirds of the drink in less than a minute. \"I guess I'm wondering why you do it?\"\n\n\"The escorts?\" Rick answered. \"We like to have fun with a sexy young thing from time to time, but we're both professionals, don't want to be seen hitting on girls at clubs and aside from that? You have no idea what she'll be like or into, this way we get what we want.\"\n\n\"No, I meant more about Lisa,\" she pointed to her. \"You're okay with him getting to have sex with another girl? A young one?\"\n\n\"I love it.\"\n\n\"But its kind of not fair, or do you do this with young guys too?\"\n\n\"You're not seeing it the right way,\" Lisa explained. \"Rick gets to have sex with another woman, but I get to have sex with her too. We both enjoy her, and we love watching each other enjoy them.\"\n\n\"But you don't want a guy?\"\n\n\"Nope, my husband keeps me plenty satisfied,\" she took a chance and put her hand on Rick's cock, lightly caressing it through the sweatpants. \"But once in a while I crave cunt and he doesn't have one of those.\"\n\n\"That's dirty,\" she giggled and finished off the drink. \"Whew, that went down easy.\"\n\n\"I go down easy too,\" Lisa told her. \"On men and women.\"\n\n\"I like to go down,\" Candy nodded enthusiastically. \"Only guys though.\" That pussy inspiring giggle again. \"I like sucking dick.\"\n\n\"You have the perfect lips for it,\" Lisa agreed. \"You give little pouts from down there too?\"\n\n\"I do,\" she held out the glass. \"Can I have another one?\"\n\n\"I don't know, hon, you're driving right?\"\n\n\"Oh, right,\" she frowned.\n\n\"But you know, if you want to hang out here for awhile you can have another one,\" Rick suggested. \"That way you can wait until your head clears up.\"\n\n\"Or I can take you home in your car, and Rick will follow me in ours, get you home safe.\"\n\n\"I was wrong, you guys are mad cool!\" Candy declared. \"I'm sorry I said mean things to you, Lisa.\"\n\n\"I deserved them, I thought you were playing around, I should have known better.\" She quickly poured her another drink, this one with a third less, and brought it over. \"Slow, okay?\"\n\n\"Okay,\" she took it and promptly chugged half of it. \n\n\"Okay!\" Rick laughed. \n\n\"If you're wondering,\" Lisa sat down close to Rick and casually draped her right leg over his, causing her robe to open and leave Candy staring at her tight thighs and the thin strip of orange between them. \n\n\"I've always been wild. I was kind of slutty in high school, worse my first year of college, in my sophomore year my roommate was into girls, and we got drunk and high one night, and she seduced me, and I loved it.\"\n\n\"I was going back and forth, boyfriend, then a girlfriend, had a couple threesomes mixed in.\"\n\n\"That's so hot!\" Candy whispered, as she sipped more slowly at the drink. She was hot at this point as well, sweat visible on her forehead and she was breathing harder. Hopefully it wasn't all from the drink. \n\n\"I met Rick junior year and he kind of made an honest woman out of me. Something about him.\" She took his hand and kissed the back of it. \"Gorgeous, sexy, but sweet and romantic. He could make me feel like a queen then fuck me like a whore, everything I wanted.\"\n\n\"Such a romantic.\" Rick laughed.\n\n\"I like that,\" she finished the drink, and put the glass down on the end table next to her, and Lisa winced when it banged on the table, she'd already given herself a buzz.\n\n\"I wanted to be loyal to him and stopped seeing girls. We got married two years after we graduated and we've always had a great sex life, but after a few years I started getting the itch, watching lesbian porn, checking out women, flirting with them.\n\n\"Rick knew I had girls in college, and he noticed me paying attention to them again, found the porn on my computer, and he told me if I really wanted to, it would be okay with him, he wouldn't be jealous, he wanted me to be happy.\"\n\n\"Your husband is awesome,\" Candy nodded so seriously Lisa had to hold back a laugh. \n\n\"He is, but like you said, how is that fair? I'm having fun with someone else and he's not, so I suggested we share another woman, no surprise he was happy about that.\"\n\n\"Nope, I take it for the team,\" Rick sighed.\n\n\"I won't bore you with details, but the first couple of times were with women our age, then ten years ago we were in Vegas for Halloween and there are escorts everywhere working all the parties and we saw an adorable young girl, I mean just precious, and Rick said let's do it.\n\n\"We went up to our suite with her and it was amazing. We decided that with our careers we can't do this often so we would make it an annual event, every Halloween we hire a trick for our treat and since then always young girls.\"\n\n\"You like them young?\" Candy was repeating the conversation, and Lisa hoped the second drink wasn't a mistake.\n\n\"Love it,\" Lisa released a breathy sigh. \"Those tight young bodies, soft skin, big wide eyes, little whimpers and pouts. The way they squeal when Rick fucks them and those soft pink tongues between my legs.\"\n\n\"The best is when we have a girl that's young enough to squeal, but knows how to fuck too,\" Rick added. \"Eager and inexperienced can be fun, but we like a girl who knows what she's doing too.\"\n\n\"At least with Rick,\" Lisa nudged him with her elbow to let him know he might have screwed up. \"When it comes to me if they've never been with a girl? That's a dream come true.\"\n\n\"Yeah?\" Candy uncrossed her leg and leaned over, resting her elbows on her knees and her chin in her hands, a cute young girl pose. \n\n\"You think you can drive, or you need a ride?\" Rick asked, as if that's what he wanted. \n\n\"I...uh...\" she pointed to the envelope. \"You were really going to pay that girl a thousand dollars to have sex with you?\"\n\n\"More than that, the agency gets money too.\" Rick told her.\n\n\"That's a lot of money.\"\n\n\"Its worth it,\" Lisa had kept her leg over Rick's and saw Candy sneak several quick looks at her exposed thong. \"And it was for 3 hours, nine to the witching hour.\"\n\n\"It's more because it's a couple, girls who play both ways can earn more.\"\n\n\"Just for time though,\" Lisa pointed out. \"Paying for sex is illegal, so we pay for the time, but hey, whatever happens between consenting adults, right?\"\n\n\"Getting two hundred dollars for being mistaken for a hooker isn't a bad deal either.\" Rick reminded her. \n\n\"Not as good as a thousand,\" Candy's gaze went from Lisa to Rick, to the envelope and back again. \n\n\"I think its safe to say I speak for both of us when I say we'd be happy to let you earn it.\" \n\nLisa held her breath as Rick finally took the plunge. \n\n\"Earn it,\" Candy repeated softly. \n\n\"Tell you what, we'll toss in the other two hundred so you'll get the full thousand, plus the money we already gave you.\" \n\n\"My dad got laid off a few weeks ago and money's been tight,\" she said quietly. \"We could really use the money.\"\n\n\"Trick or treating for your brother, thinking of your folks, you're a good girl, Candy,\" Lisa said. \"I mean that.\"\n\n\"But I could make a thousand dollars being a bad girl,\" Candy looked at Rick. \"You are hot, and um,\" she pointed, indicating his crotch. \"You look like you have a big dick.\"\n\n\"Trust me, he does,\" Lisa grabbed it for emphasis. \"Want to see it?\"\n\n\"I, um...\" she blushed furiously and looked away. \n\n\"Hips,\" Lisa whispered as she dropped her leg from over his. \n\nRick quickly lifted his ass off the couch and pushed his pants down, allowing his fully hard cock to spring free. \n\n\"Hmm,\" Lisa took it in her hand, pumping it. \"Twenty years and I still can't get enough of this amazing cock.\"\n\n\"Oh...wow,\" Candy's eyes widened, and Lisa smiled when the young girl sucked on her lower lip as she watched her jerk Rick off. \n\n\"Wow is right, you should feel how hard he is, and how it can fill your mouth,\" Lisa spoke in a sultry purr, \"Or when he stuffs it in your tight cunt.\"\n\n\"I don't know,\" Candy whispered, but her eyes were glued to his cock. \n\n\"Thing is with a cock this fine? You can't see it and not want to taste it.\" Lisa turned on the couch, so she was facing Rick, and lowering her head, took him into her mouth.\n\n\"We know there's one bad girl in the room,\" Rick sighed as Lisa bobbed her head slowly, along his hard shaft.\n\nRick moved her pig tail so Candy could get the full view of Lisa taking him deep into her mouth. She moaned loudly around him as his pre cum dripped down her throat. She was totally turned on by sucking him in front of her, but she did add some volume for the benefit of their young visitor.\n\n\"Oh my god,\" Candy's eyes looked as if they were going to pop out of her head, but her right hand strayed across her left breast, idly caressing it as she watched. \n\nRick put his hand on the back of her head, and when she stopped moving, thrust his hips, fucking her mouth, the head of his cock striking the back of her throat with each time he drove it into her.\n\nLisa released a series of wet gagging sounds as Rick face fucked her. Candy was slowly shaking her head as if she couldn't believe what she was seeing. Rick abruptly stopped his brief assault on her mouth and pulled her head from his lap.\n\n\"Aw, I wanted more!\" Lisa gave him the pout.\n\n\"Maybe you'll get more, but only if you have someone to share it with,\" Rick slipped his pants back up, covering his now glistening erection.\n\n\"You hear that, baby girl? I don't get any if you won't play with us!\" Lisa slid away from Rick and patted the cushion between them. \"How about you come on over, and make good money being a bad girl.\"\n\n\"I don't know,\" Candy looked torn between obvious desire and nerves. \n\n\"All show no go,\" Rick sighed. \"That's why we go to the agencies, so we know they'll send us a woman, not a little girl.\" \n\n\"Rick!\" Lisa hissed at him. \n\n\"I'm not a little girl!\" Candy retorted with an attitude. \"You think I dressed like this because I'm a tease?\"\n\n\"Seems that way.\" Rick shrugged. \n\n\"Let me tell you, I plan on bobbing for more than apples at that party!\"\n\n\"Big talk from a little girl,\" Rick egged her on. \n\n\"I'm not all talk! I bet I've had a lot more sex than you think I have. I told you I've been with older guys.\"\n\n\"If you say so,\" he sounded deliberately patronizing. \"Talk's cheap, but my wife and I aren't. You want the money, and you looked like you were squirming in the chair when she was sucking my cock. How about you walk the walk and show us that bobbing you were talking about.\"\n\nDamn, he was going the other way, full out aggressive, and Lisa was worried they were going to lose her. \n\n\"You think I won't suck your dick?\" Candy flicked her tongue at him. \"I give great head!\" she rose from the chair. \"How about I give you a blow job, and maybe you give me two hundred more, and...\"\n\n\"No.\" Rick cut her off. \"All or nothing, and by all I mean you're not just playing with me, this is for both of us.\"\n\nCandy looked over at Lisa, and her sudden bravado wavered. \n\n\"Come on, honey,\" Lisa eased the robe and the cup of her bra to the side, showing off her right breast, and lightly traced her swollen pink nipple with an orange tipped finger. \"Shouldn't a bad girl want to try something new? I did, and here I am still hooked.\"\n\n\"You have nice tits,\" Candy's shoulders slumped. \"Mine are little, why would you want to play with them?\"\n\n\"Because they're yours and I love adorable little titties.\"\n\n\"Okay, time's wasting, and there are a couple other places I could call.\" Rick picked up the envelope and waved it back and forth. \"No more trying to convince you. A thousand dollars, going once, going twice...\"\n\nHe paused and Lisa held her breath.\n\n\"Going three...\"\n\n\"I'll do it!\" Candy blurted out\n\nChapter Three\n\n\"You sure?\" Rick asked, making Lisa want to smack him, but his next words calmed her somewhat. \"We never want to force anyone to do something they don't want. Bad as we want you, if you don't really want us, then forget I even asked.\"\n\n\"You're so sexy,\" Candy whispered. \"I want to play with you for real.\" She giggled nervously. \"Shouldn't say this, but I'd fuck you for free.\"\n\n\"That's exactly what we want to here,\" Rick put his hand on Lisa's leg, \"But what about my wife? You willing to let her show you why girls can be just as much fun?\"\n\nCandy stared at Lisa, and when she answered her voice had a nervous tremble that had Lisa wanting to just shove her back into the chair, drop to her knees and bury her face between her legs.\n\n\"Okay, but you know, just go kinda easy?\" she pouted, but this time it was truly from nerves, not an act. \"Please go slow?\"\n\n\"Trust me, this cougar will be very patient with her sexy little kitten.\" Lisa patted the couch again. \"Come on over and let me show you.\" \n\nCandy nodded but stayed where she was and both her and Rick remained silent, not wanting to push. Rick's hand was still on her leg, and he gave it a gentle squeeze, as if saying 'be patient'.\n\nAfter a few more seconds, Candy took a deep breath and slowly walked towards them. Rick lifted his legs, bracing his feet on the edge of the coffee table he pushed it back, giving them more room. \n\nCandy came around to his side, briefly looked down at him, a nervous smile on her face, then turned and sat down between them. Lisa had already turned to her side on the cushion, and he did the same so they were both facing her. \n\nShe looked at Rick, then Lisa, and swallowed nervously. \n\n\"I...um, how do we start?\"\n\n\"We always start with a kiss,\" Rick told her. \"I should have told you we're not into anything rough or degrading, we're all about fun here, including yours, and part of the fun isn't just sex, but affection.\"\n\n\"Okay,\" Candy, turned to him and leaned towards him.\n\n\"Nope,\" Rick gently put his hand on her face and turned her away from him. \"Ladies first.\"\n\n\"Oh,\" Candy turned on the cushion to face Lisa. \"I guess we...\"\n\nHer words were cut off by Lisa, tired of being patient, taking her face in her hands and pressing her lips to hers. Candy released a tiny squeal of surprise in her throat that was almost as precious as the little whimper that immediately followed it. \n\nLisa's initial kiss was firm enough to stop her in midsentence, but she quickly eased back, now barely grazing Candy's full soft lips with hers. Lisa moaned softly at the sensation of those young lips; lips that had never been kissed by a woman. \n\nCandy remained stiff as Lisa worked her lips teasingly over hers, caressing them more than kissing. She opened her eyes to see Rick had slid up behind Candy, but not touching her yet. Seeing her looking, he gave her an encouraging smile and mouthed.\n\n\"You got this.\" His words were followed with a smile and a wink, one Lisa returned as Candy's eyes were shut, but tightly so, as if she were afraid to look more than she was into it. \n\nLisa removed her hands from her face and was thrilled Candy didn't try to pull away. She put her arms around the girl's slender waist, drawing her into an embrace as she continued to explore her sweet young lips with hers. \n\nShe flicked her tongue across Candy's upper lip, then capturing the lower one between hers, sucked on it. Candy emitted a soft moan when Lisa playfully nipped her lip with her teeth, and for the first time, tried to return the kiss. \n\nLisa eased up, letting Candy tentatively respond, but did run her hands over her back, then up into her long hair. Her young and nervous lover was now breathing more heavily into her mouth, and the next kiss was much more confident. \n\nIt was Lisa's turn to groan as Candy kissed her harder, parting her lips wide enough to encompass hers. In addition to becoming more aggressive with her mouth, Candy's hands were now moving, first caressing Lisa's exposed upper thighs, then sliding up over her hips. \n\nWith Candy's lips parted, Lisa plunged her tongue between them, and the ensuing whimper sent a shiver through her. Lisa opened wider, her lips finding Candy's as her tongue swirled over hers. \n\nCandy surprised her when her hands moved between them, sliding over Lisa's breasts. She moaned into their kiss as her palms gazed her aching nipples through the silky robe.\n\n\"Oh, yeah,\" Lia purred when Candy gave her breasts a soft squeeze.\n\nCandy's tongue was following the lead of her hands, darting out to probe Lisa's mouth as she did the same. Candy gasped, then sighed, and Lisa opened her eyes to see Rick had joined in the fun.\n\nHe'd pushed Candy's hair to the side and placing soft kisses on the back of her neck. She shivered in Lisa's arms and leaned back towards Rick. Lisa went with her, keeping her lips on hers and her tongue buried in her mouth. \n\nCandy's hands left her breasts, but moved up to grip her pig tails, and Lisa's pussy gushed when she pulled on them, keeping her face pressed to hers. Rick was now nuzzled into her neck, kissing and licked her creamy skin. \n\nHis eyes met Lisa's and she ducked her head, breaking her kiss with Candy to kiss him. They shared a brief tongue filled kiss before Lisa moved her head to her left and pushing Candy's hair away worked the other side of her neck, first kissing, then gently sucking.\n\n\"Hmm,\" Candy cooed as the they continued kissing her. \"That's feels...Oh!\"\n\nHer gasp was the result of Rick slipping his arms around her and cupping her breasts, squeezing them while his tongue ran up her neck, and playfully flicked her silver skeleton earring. \n\nCandy leaned back into him and turned her head, her lips puckered in an invitation to a kiss. Rick happily accepted, kissing her hard, his tongue plunging into her mouth. She yelped into their kiss when his fingers found her nipples through her dress and bra and lightly pinched them. \n\nLisa slid her lips from Candy's neck to her creamy throat, then left a soft wet trail of kisses down her upper chest and between her breasts. Candy let her hair go, to make a move that had Lisa squirming on the couch.\n\nShe reached her right arm back over her shoulder to grab Rick's hair and keep his face pressed to hers while her other arm went around Lisa's shoulders, hugging her to her as she teased her lips along the inner portion of her dress, sliding them over the partially exposed inner portion of her firm tits. \n\nShe slowly licked the curve of her right breast and Candy whimpered as she arched her back, thrusting her chest into Lisa's lips. Lisa raised her head and joined the kiss, pressing her lips to the sides of theirs. \n\nRick tilted his head, kissing her, his tongue quickly darting over hers, before Lisa turned her attention to Candy and pressing her lips to hers. Their years of sharing showed in the way Lisa eased her lips to left of Candy's mouth, giving Rick just enough room to catch the right corner of her lips.\n\n\"So hot,\" Candy moaned softly as she simultaneously kissed them. \n\nLisa felt her hips rocking between them as the three shared a long passionate kiss, lips and tongues sliding over one another as Rick was still teasing her nipples, Candy dropped her arms from around them and put her hands over his, pushing them harder into her tits. \n\nLisa grabbed Candy's red plastic belt, briefly struggling with the cheap clasp as her fingers trembled with excitement. She got it undone and pulled it from around Candy, tossing it onto the floor. \n\nShe eased back from their three way kiss and rose from the couch. Taking the ties of her robe in her hands, she playfully flicked them at Candy, striking her in the shoulder. \n\nAs always, Rick knew where she wanted to go, and releasing Candy from his embrace, stood up. He put his hands on her arms and tugged, encouraging their unexpected lover of the evening to stand up between them. ",
        "As soon as she was on her feet, Lisa kissed her while grabbing her slim wrists and bringing her hands to the ties of the robe. Candy, no longer shy about kissing her, plunged her tongue into Lisa's mouth, but hesitated, her hands holding the black silky strips. \n\n\"You don't want to see?\" Rick had his hands on her shoulders, his lips once again exploring her neck. \"You're going to make her feel bad, you don't want that, do you?\"\n\n\"No,\" Candy whispered, then whimpered when it was now Lisa's hands on her breasts, her fingers tracing slow circles around her nipples through the dress. \n\n\"Then go ahead.\" Rick encouraged her. \"It would be a lot more fun for me if you do to it.\"\n\n\"Yeah?\" Candy asked, her eyes on Lisa's fingers as she lightly caressed her breasts, using every ounce of will she had to not rip the girl's dress open and get her first look at them. \n\n\"Hell yeah, nothing like a gorgeous woman being undressed by another gorgeous woman.\" \n\n\"I'm gorgeous?\" Candy giggled. \n\n\"You both are, now stop being shy, you know you want to see what's under that robe.\" Rick kissed her neck, then whispered. \"Make her happy, and I'll make you happy.\"\n\nHis words were accompanied by a wink at Lisa, teasing her over the fact Candy was far more into him. She gave a slight shrug, whatever worked was fine with her, besides, once Candy warmed up to her, she'd give Rick a run for his damn money on who'd make the little minx come harder.\n\nHer attention went from Rick to her waist when she felt Candy tug on the ties. Her robe fell open, and not wanting to have to wait to talk Candy into doing it, Lisa pushed it back over her shoulders, causing it to fall to the floor.\n\n\"Wow,\" Candy's dark eyes roamed over Lisa's body. \"You look so good!\"\n\n\"Why thank you!\" Lisa beamed.\n\n\"Especially for an older woman.\" Candy added, and Lisa shot Rick a look when he burst out laughing behind her. \n\n\"For any woman,\" he quickly added, trying to save face.\n\n\"You like?\" Lisa ignored him, putting her arms over her head, and gave a little shake, causing her large breasts to jiggle and come close to falling out of the skimpy bra.\n\n\"Look at those tits,\" Candy was doing just that as she spoke. \"I wish I had big ones like that.\" \n\n\"Speaking of, I think its time we get to unwrap our Candy,\" Rick suggested. \n\n\"Like I never heard that before,\" Candy rolled her eyes, and it was Lisa's term to snicker at him. \n\nHe gave her a good natured smile, then grabbed the hem of Candy's now loose dress and lifted it. Lisa licked her lips when he eased it over her hips, revealing her black fake leather thong.\n\nIt was little more than a G-string, thin strips over her slender hips and a minimal patch between her firm thighs. Rick took the dress higher showing her flat tummy which featured a silver barbell pierced through it.\n\n\"Arms up,\" Rick told her, and Lisa noticed she'd crossed her arms over her chest and seemed nervous again. \n\n\"Come on, baby girl,\" Lisa purred. \"Show us that hot young body of yours.\" She gestured to her own scantily clad form. \"I went first.\" \n\n\"Are we back to the all show no go conversation?\" Rick asked.\n\nAgain, he hit on just the right way to motivate her. Candy's dark eyes flashed with a momentary spark of anger, and she thrust her arms up with an air of defiance that made the act even sexier. \n\nLisa grabbed the front of her dress and helped Rick pull it up and off her. They threw it over the couch, and she whistled in appreciation at Candy's long slender form. \n\n\"Beautiful,\" she whispered, and slipped her arms around her waist, pulling her into her. \n\nShe gave her a quick kiss on the lips, before ducking her head, and kissing her neck. Lisa squeezed her tighter, crushing her to her, causing their breasts to press together through their bras.\n\nBehind her, Rick had pressed into her back, his long arms reaching around them to caress Lisa's back. He ground into her from behind, and Candy gasped, \"Oh, my God, you're hard!\" \n\n\"I'm with two sexy women, how could I not be?\" He kissed the back of her shoulder, then briefly kissed Lisa, their lips both caressing her neck. \n\nHis lips left hers and worked their way across Candy's upper back, then down the middle. He crouched down as he kissed his way down, his lips trailing their way down to the small of her back.\n\nNow on his knees, he kissed the left side of her ass, and Candy giggled, then groaned when he gripped her cheeks in his large hands and gave them a hard squeeze. \n\n\"Damn, you have a cute little ass,\" Rick breathed as he kissed the other side of it. \n\nLisa matched him from the front, her lips sliding down her upper chest, then beneath her breasts as she eased down to her knees. She licked her way down Candy's stomach and felt the young girl's body trembling beneath her lips. \n\nShe kissed each of her quivering inner thighs, then teased her tongue along the edge of the black material covering her pussy. Candy, her hands gripping Lisa's bare shoulders, squirmed between them as the were both now running their hands up and down her long legs, through her fishnets, then her back and chest, reveling in the feeling of her smooth young flesh. \n\nCandy gasped when Lisa pressed her face to the thong and shook her head rubbing her nose into it. Her hand slid up Candy's right thigh and when her fingers grazed the strip between her legs, she released a delightful little squeal, as Lisa breathed. \n\n\"Someone's wet, baby.\" \n\n\"Besides you, you mean?\" Rick joked, then after place two quick kisses, one to each of Candy's cheeks, he rose to his feet. \n\nHe ran his lips along her shoulders, while Lisa teased her fingers along the edges of the thong as if she were going to slip them into it. Candy's body tensed and her legs trembled in nervous anticipation.\n\n\"Oh shit!\" \n\nCandy gasped, and her nails dig into Lisa's arms as Rick caught her by surprise, deftly unsnapping her bra with practiced fingers at the same time Lisa dipped one finger inside her thong, slipping it through her soft, and very wet flesh. \n\nRick continued to kiss her back as he hooked his fingers into the straps of her bra, sliding them down her arms. Lisa pushed her finger through Candy's soft lips, and when she encountered her swollen clit, she whimpered, and her hips jerked. \n\nLisa removed her finger and looking up at Candy, slipped it into her mouth and sucked on it. Her eyes rolled back at the sweet taste of her young succulent cunt, as it sent a wave of moisture between her own thighs. \n\nShe rose to her feet before she yanked the thong to the side and buried her face in Candy's pussy. She wanted the edge of her first so when Lisa went down on her she'd have to work for it, as if licking a pretty, young thing's cunt was work.\n\nRick had her straps down to her elbows, causing Candy to curl her arms as she seemed to reflexively default to shy. Lisa took her by her shoulders and turned her so her back was to the couch and gave her a light shove.\n\nCandy yelped as her knees hit the couch and she fell into a sitting position, struggling to keep her bra up. Lisa stepped up to Rick and kissed him while grabbing his cock and stroking it through his pants. \n\nThey turned and both put a knee on the couch, keeping Candy between them. Displaying the teamwork they'd perfected over the years they'd been sharing women, they each grabbed one of the straps of her bra and tugged on it. \n\nCandy swallowed hard, but lowered her arms, allowing them to whip it off her. \n\n\"Look at those perfect titties,\" Lisa whispered as they got their first look at her breasts. \n\nThey were adorable; small, perky, and perfectly shaped. Her nipples were tiny, a deep shade rose red, and most importantly, as hard as Lisa's. Continuing to move as one, they each cupped one of her tits, their thumbs stroking her nipples.\n\n\"Oh my god,\" Candy moaned. \"This is really happening.\"\n\n\"Baby, we haven't even gotten started yet,\" Lisa lowered her head and flicked her tongue across her nipple, while watching Rick do the same. \n\nCandy released another pussy inspiring little whimper, as she put her arms around each of them. She watched her husband slowly tongue Candy's taut nipple, while his eyes were on hers. \n\nThey shared a familiar and affectionate smile as they swirled their tongues faster. Lisa let some spit dribble from her mouth onto Candy's firm tit, then used her tongue to apply it to her nipple, getting it nice and slick. \n\nShe lifted her breast higher and took it between her lips, sucking it gently. Candy's breath hissed above her as Rick emulated his wife. Candy's nails dug into Lisa's arm again as they licked and sucked on her perfect nipples while fondling her breasts. \n\nHer soft sounds of pleasure mixed with the still nervous whimpers had Lisa's hips rocking, and her body in sore need of attention. She was sure Rick's cock, as well as his balls, must be aching from being so hard, but it was an unspoken agreement they'd give their inexperienced trick the first treat.\n\nLisa slid her free hand down Candy's stomach, then over to her hip, her fingers slipping under the black string of the thong. Rick mirrored her movement, and Lisa lifted her head from Candy's breast to look up at her.\n\n\"Ass up, honey, time to show us that sticky sweet treat we're dying to eat.\"\n\n\"Corny,\" Rick whispered, then sucked gently on the firm creamy flesh of Candy's breast to the left of her nipple. \"But true.\"\n\n\"I....I don't know,\" she stammered. \"What if...Ohhh!\" \n\nHer long low moan and sudden thrust of her hips was her response to Lisa shoving her hand between Candy's legs and rubbing her thong. \n\n\"Baby girl, you are hot, wet, and ready to pop. Don't prove Rick right about being a poser. Time to show us the girl who was going to that party to get down and dirty.\" \n\nShe kept rubbing, running her fingers over the thong, and pushing it between her lips, when Candy's high pitched yip told her she'd found her clit, Lisa rubbed her fingers in hard circles.\n\n\"Shit,\" Candy groaned. \"That...hey!\" she exclaimed when Lisa removed her hand. \"That felt good,\" she flashed the pout.\n\n\"It'll feel better without this in the way.\" Rick suggested. \"Besides, you want me to take these off don't you?\" He patted his pants directly over the huge bulge in them.\n\n\"Oh, yeah,\" Candy sucked her lip and Lisa endured another smug smirk from her husband, when she quickly lifted her hips. \n\nBut whatever worked, and not like she wasn't looking forward to seeing if Candy was all talk when it came to getting her hands, and more, on her husband. For now, her attention, and excitement was on Candy raising her hips. \n\nThey pulled the strings down her hips and over the sweet curve of her cheeks, then upper thighs. Candy sank back down on the couch, but without being told lifted her legs, bending them at the knees. \n\nLisa glanced quickly at Rick's face, loving his look of anticipation in his eyes as they were moments away from unveiling the sweetest part of their mutual treat. They weren't disappointed as the crotch of the thong momentarily resisted their efforts before peeling away from Candy's flesh.\n\n\"Hmm, someone is already nice and sticky,\" Lisa breathed, then released a soft sigh of appreciation as they slid the thong away to reveal Candy's pussy.\n\nPink, completely shaved, and her lips tucked up nice and tight, leaving them confronted with an adorable little slit. But as tight as her cunt was, her swollen pink clit was just visible, winking out from under its hood. \n\nThey yanked the thong down past her knees, and down to her feet. Rick, hooked his fingers into her heel, pushing it off her foot to land on the floor. Lisa removed the other, then yanked on the thong, snatching it from Rick's loose grasp.\n\nLisa pressed it to her face, inhaling deeply, her eyes rolling back from the scent of Candy's young cunt. \n\n\"Damn,\" Candy whispered when Lisa, staring across her at Rick, slipped her tongue out and licked the crotch of the thong. \n\nA shudder ran through her at the sweet taste of her juices. The little tart had been wet to the point thong wasn't just wet, but sticky enough that when she eased her tongue from it, a sticky strand trailed from it. \n\nFlipping the thong at Rick, Lisa leaned up, and abruptly kissed, Candy. She caught her off guard, roughly plunging her tongue into the young girl's mouth, and giving her a good taste of herself.\n\nCandy's gasp turned into a groan as Lisa's lips worked hers, then morphed into a squeal when Rick slipped his hand between her thighs and rubbed her pussy. \n\n\"Oh, shit!\" Candy pulled her lips from Lisa's to watch Rick's large hand caressing her pink slit.\n\nHis long think fingers caressed her lightly the first few strokes, then pressed between her tight lips, opening them so he could explore the inner folds of her pussy. His mouth returned to her nipple, sucking it harder as he fondled her. \n\nLisa lowered her head to give her other rosy nipple attention while her free hand plunged between Candy's thighs. She pushed Rick's down, her fingers finding her swollen clit, and capturing it between them. \n\nCandy's fishnet clad legs straightened until her feet were on the coffee table, but remained wide open, allowing them to play with her. Lisa gently rolled her clit between her fingers, her eyes on Rick's hand while he ran two fingertips through her lips. \n\nShe waited, her tongue and fingers busy while anticipating Candy's reaction to his inevitable move. The next time he worked his finger down, he eased the tip into her, then plunged it deep. \n\n\"Deep,\" Candy groaned as he slowly pumped her. \n\n\"You are wet,\" Rick said softly, \"And so damn tight.\"\n\n\"Wait until he gets his cock in there,\" Lisa said around her nipple. \"Maybe you should try to get her a little more ready.\"\n\nRick eased a second finger inside her and Candy whimpered, her ass sliding up the couch as he spread her tight cunt with his thick fingers. He continued to push until his knuckles were pressed to her and when he gently shook them back and forth, she cried out.\n\n\"Oh, oh, that's,\" her words turned into a shuddering moan.\n\nLisa switched from teasing her clit between her fingers to pressing her thumb to it and working it in slow circles. Candy was breathing hard, each breath ending in a tiny whimper.\n\nHer hips squirmed as Rick now worked his fingers in and out, easing about halfway before pushing them back into her tight twat. Lisa worked her clit faster, and Candy's hips bucked, pushing into both of their fingers. \n\n\"I can't believe I'm doing this,\" she moaned as she wiggled between them. \"This is so crazy,\" she gasped when Rick drove his fingers in harder. \"But sooo fucking hot!\"\n\nLisa laughed around her breast, then grabbed Candy's hand from her shoulder and promptly placed it on Ricks' cock.\n\n\"So hard!\" she moaned, her hand gripping him through the sweatpants. \n\nRick sighed around her nipples as she slowly stroked him, then grabbed the waistband of his pants, and lifted enough to push them down. Candy let him go, then when his cock sprang free the way she immediately grabbed his now bare cock had Lisa's cunt aching, and her own hips moving. \n\n\"God, what a nice fucking dick!\" Candy cooed as she watched herself pump him.\n\nLisa watched as well, breathing hard around her nipple while taking in Candy's long, slender, red tipped fingers around Rick's thick cock. Candy stroked faster and when she squeezed just beneath his tip, causing a spurt of pre-cum to flow out over her fingers, Lisa lost any doubts she had about Candy not being able to deliver when it came to men. \n\nShe rolled her palm over Ricks swollen purple head, making his hips jerk, then resumed stroking using her now slick hand to glide faster along his cock. Another not so inexperienced move, seems like their guest may be a bad girl beyond her age after all. \n\nLosing patience, Lisa eased each strap of her bra down her arm while still gently stroking Candy's clit, then popped each of her breasts from the lace cups of the bra. Rising on one knee, she removed her lips from Candy's breast.\n\nShe gave her a quick kiss, then sliding her hand under Candy's hair, pushed her head down into her right breast. Candy yelped in surprise, and at first didn't do anything, except nuzzle her face into Lisa's large breast.\n\nLisa shook side to side, sliding her nipple across Candy's face, then groaned when she felt her hesitantly flick her tongue out. Even that brief, nervous contact sent an electric shock of pleasure through her.\n\nNo longer in the mood to keep coddling, Lisa roughly shoved her nipple into Candy's mouth while wrapping her hand in her hair so she couldn't pull back. Candy's tongue snaked out again, this time giving her nipple a harder and more lingering lick. \n\n\"That's it, baby girl,\" Lisa moaned. \"Suck that fucking tit!\"\n\n\"Baby steps!\" Rick whispered with a smile, then released a sharp breath when Candy gripped his cock harder and pumped it faster. \n\nHe returned the favor, once again burying his fingers deep and shaking them side to side. Candy yipped into her breast, and Lisa's breathing grew even heavier at the sloppy wet sounds Rick's fingers made in Candy's obviously wet pussy. \n\n\"Oh god,\" Candy groaned when Lisa pressed two fingers to her clit and rubbed it much harder than she had before. \"I...y...you're going to make me come!\"\n\n\"That's the point, sweetie,\" Lisa giggled. \"But only if you start sucking. I want those big soft lips around my nipple,\" she kissed the top of her head. \"Do it right, you can put them around that big dick you're playing with.\"\n\nCandy obediently opened wide, and Lisa purred delightedly when her full lips pressed into the firm flesh of her breast. Her tongue swirled around her aching pink nipple, before tentatively sucking on it. \n\nLisa released her hair to remove the silly devil horns from it and toss them over her shoulder. Candy moaned around her tit as Rick alternately finger fucked her, then worked them side to side.\n\nLisa had eased up on her clit, wanting to enjoy Candy's lips on her tit before they sent her over the edge for what she planned on being the first of several orgasms. On that note, she desperately needed one of her own, but she'd hold off and let Candy, then Rick, have their fun, that way they could both take their time with her. \n\nThe way Candy's hips were working and her labored breathing around her breast told Lisa they weren't going to be able to stall much longer. She could feel Candy's warm drool sliding down her tit as her moaning made it impossible for her to close her mouth around her nipple. \n\nHer back arched, pushing her tit deeper into Rick's mouth and her long legs straightened; her black tipped toes pointing forward. Her hand had stopped moving, now just gripping Rick's cock as her entire body tensed. \n\nLisa glanced at him, and when their eyes met, she gave him a quick nod. Candy gasped when he thrust his fingers deep inside her while Lisa rubbed her clit in hard circles. \n\nShe captured Candy's nipple between her fingers and caught her off guard with a hard pinch. \n\n\"Ow!\" Candy yelped around her breast, \"That....\" Her mouth remained open, but nothing came out except a high pitched whistling sound. \n\nRick's hand flexed and Lisa knew he'd curled his fingers inside her. Candy lifted her head from Lisa's breast and her brown eyes went wide. The high pitched wheezing sound turned into an even higher whimper and Lisa felt her slender thighs trembling against her hand. \n\n\"Oh, oh...\" she gasped as Rick resumed to fucking her with his now glistening flingers, but much rougher than before. \"I...Oh fuck!\"\n\nCandy squealed when Rick gave her nipple a light nip with his teeth at the same time Lisa pinched the other. Between them Candy exploded into a long loud wail that would make a porn star proud and had Lisa flooding her already sopping thong. \n\nHer body bucked against theirs, her tight young pussy convulsing around Rick's fingers which he'd buried knuckle deep, making her come on them. Lisa's fingers kept moving on her clit, and she lowered her head to her nipple. ",
        "Candy's legs closed, trapping their hands between her firm, now sweaty, thighs and she writhed on the couch, releasing a series of sharp little yips that sounded like hiccups. \n\nLisa and Rick continued to work her like the experienced team they were, their fingers still moving, their tongues and lips still on her nipples. \n\n\"Oh my god, oh my god!\" Candy squealed her arms going around their shoulders, her nails digging into them, and using the leverage to lift her ass off the couch as her hips thrust and ground into their hands. \n\nLisa felt as if she were close to popping just from pent up excitement and listening to Candy's deliciously loud, powerful orgasm. She eyed Rick's now glistening cock bobbing between his legs, and her mouth watered at the thought of sharing it with their new special friend. \n\nCandy's yelping turned into breathy whimpers and her hips slowed, her ass settling back on the couch as her body relaxed. \n\n\"H...holy shit,\" she panted, her breath coming in ragged gasps. \"I came really hard,\" she giggled as she dropped her feet from the coffee table. \n\nLisa rose from the couch and swung her leg over Candy's hips so she was straddling her and pulled her head into her left breast. This time now only did Candy immediately suck her nipple, but much more confidently. \n\nLisa moaned and ground her hips into Candy's as without needing to be told, their horny little devil switched to sucking her other tit. Rick leaned over and Lisa turned her head to kiss him.\n\nShe grabbed his cock, stroking it while now shaking her side to side, slapping her large breasts into Candy's face while grinding on her, giving her an impromptu lap dance. \n\nShe pumped Rick harder, loving the way he moaned into her mouth. He was so fucking hard! She could feel his cock throbbing in her hand and whispered. \"Your turn, baby?\"\n\n\"Or yours,\" he replied, his hand cupping her left breast, lifting it, and feeding her nipple to Candy, a move that caused her to squirm even harder. \"I can wait.\"\n\n\"Hmm-mm,\" she sighed as she tuned to the side giving Candy her right breast while Rick lowered his head to her left. \"We need to get you off so you can fuck us long and hard, isn't that right, baby girl?\"\n\n\"I want to get fucked!\" Candy giggled again.\n\nLisa moaned at her words and that precious little girl giggle. She leaned back, allowing her two lovers more room to suck her aching nipples. Raising her arms over her head, she slowed her hips, as if she were riding the young girl.\n\n\"Tell me my wife's not sexy as fuck?\" Rick spoke around her nipple. \n\n\"Yeah, she is,\" Candy smiled up at her, then with teasing slowness, traced a wet circle around her nipple with just the tip of her adorable pink tongue. \"She's really wet too!\"\n\nLisa got herself wetter, putting her hands on the back of their heads and guiding them together. Neither protested as their lips parted and they kissed deeply. Lisa watched Rick's tongue explore Candy's wide open mouth and grabbed his cock once again.\n\n\"I think I need this in my mouth,\" she lowered her face to theirs, giving each of them a brief, but tongue filled kiss. \"Now.\" \n\nShe slid off Candy's lap, planning to sink to her knees and getting Candy to join her. But as soon as she moved, Candy turned on the couch, bent over Rick and took his cock deep into her mouth.\n\n\"Fuck,\" Rick gasped as Candy bobbed her head in his lap. \n\n\"Guess she's more than talk,\" Lisa still had his cock in her hand, now holding it for Candy who wasn't just sucking, but moaning softly, her brown eyes partially shut and a look of delight on her face as if Rick's cock was the best thing she'd ever tasted. \n\n\"She's showing me,\" Rick sighed and leaned back on the couch, one hand on Candy's back, the other brushing her dark hair from her face so Lisa could get a clear view of her soft black lips gliding along her husband's thick shaft.\n\nLisa released his cock and leaned over Candy, kissing Rick hard while the young girl moaned around him. He returned the kiss, his hands going to her tits, playing with her nipples as their tongues waged war between their lips. \n\n\"Look at her go,\" she purred as Candy's head moved faster and her moans were now accompanied by sloppy slurping sounds that had Lisa's clit throbbing. \n\nShe gave Rick a last quick peck on the lips and dropped to her knees in front of him. Her eyes on Candy as she continued to blissfully suck, Lisa grabbed his pants and tugged them off him. \n\nRick spread his legs and Lisa slid up between them and lowering her head, sucked his balls into her mouth. He groaned as she swirled her tongue around them, bathing them with her soft pink flesh, then sucking on each side of his sac, leaning her head back, stretching them.\n\nCandy's eyes opened and met her gaze as worked her husband's swollen sac. Lisa smiled at her, then placing her tongue on his balls licked her away over them, then onto his shaft. \n\nShe slid her tongue along his hard flesh until she met Candy's lips. \n\n\"My turn?\" Lisa smiled sweetly at her.\n\nCandy released his cock, and a shudder ran through Lisa at the trail of pre cum laced drool that dangled between Candy's chin and Rick's cock. She caught it with her tongue, and noisily slurped it between her lips. \n\nShe made a show of fluttering her tongue up and down Rick's shaft, then around his purple head, before taking him into her mouth. Lisa teased him, gently sucking on just his head before opening wide and taking his full length in one smooth suck. \n\n\"Damn!\" Candy exclaimed as Lisa's multicolored lips wrapped around the base of his shaft. \n\nLisa opened wider, making a wet gagging sound as his cock pushed down the back of her throat. She slipped her tongue out, sliding it over his balls, then released him with a loud wet sucking sound, spit flowing down her chin. \n\nShe took him back into her mouth and went to town, bobbing her head rapidly, and showing off, repeatedly deep throating him, each suck ending in a nasty gurgling sound. She lifted her pig tails and Rick took them in his hands. \n\nLisa stopped moving, and Rick eagerly took over, thrusting his hips and pounding his cock down her throat. His moving caused Candy to ease from his lap and drop to her knees next to Lisa. \n\nWith Candy no longer across him. Rick rose to his feet and holding her pig tails ruthlessly fucked her mouth. Lisa's squeal turned into a choking sound as he pounded his cock down her throat deep enough for his balls to slap into her chin. \n\nLisa gagged, but in between moaned and whimpered. Her now watering eyes rolled back as her husband abused her talented mouth and throat. She shifted her gaze to the side to see Candy staring, her eyes and mouth wide as she watched Rick brutally face fuck her. \n\nDrool and pre cum flowed down her face which was now red from exertion and streaked with mascara. Rick shoved her head back, his now dripping cock exiting her mouth among a wet slurping sound and a large sticky glob pouring down her chin. \n\nAs Lisa gasped for breath, he turned slightly to the side, offering his sloppy cock to Candy. To Lisa's excited surprise, she showed no hesitation, opening wide and taking him back into her mouth. \n\n\"Look at you,\" Rick whispered when Candy emulated Lisa, putting her hands on his thighs, and using just her mouth on him.\n\nShe sucked faster then she had before and Lisa's hand strayed between her legs, stroking her sopping pussy through her thong, when Candy opened wider and gagged from taking him deeper than she had before. \n\nShe kept her mouth on him, her eyes widening and her face turning red as she opened wider and was obviously forcing herself to take more of his length. She had him about tow thirds down before she removed him, took a deep breath then attacked his cock like this was now a personal question. \n\n\"You little slut!\" Lisa laughed, her hand going into Candy's long dark hair to keep it from her face as she choked herself with Rick's cock. \n\nGagging, eyes watering, and spit spilling from the sides of her mouth, Candy wouldn't be daunted. She angled her head, and in a move that thrilled both of them, turned her dark eyes up to Rick, meeting his gaze as she force fed herself his long dick. \n\nWith a triumphant gurgle, she pushed her lips to the base of his shaft. She held him there, then shook her head vigorously side to side. \n\n\"Fuck,\" Rick gasped as her move caught him by surprise.\n\nHe moaned louder as she kept swirling his sensitive head around in her warm wet mouth and Lisa was splattered with the drool escaping her mouth. Candy slurped her way back to his tip, then eased her mouth halfway down before stopping.\n\n\"Hmm?\" she batted her eyes at him as she remained motionless. \n\n\"Jesus,\" Lisa swallowed hard against her rising lust, the little minx wanted him to fuck her face. \n\nRick was happy to oblige, but went much slower than he had with Lisa, sliding his cock into Candy's willing mouth only partway before easing back. Lisa slid over behind Candy and slipped her arms around her. \n\nWhile she admired Rick's long, wet, and now black and orange smeared cock, she cupped Candy's small tits and fingered her nipples. Candy moaned around Rick's cock and moved her head forward, driving him deeper into her mouth. \n\nRick moved his hips faster and was now pushing his cock further into her mouth, and after an initial sloppy gag that sent spit flowing from her chin onto Lisa's left hand, she eagerly accepted him. \n\nLisa put her chin on Candy's shoulder and opened her mouth, wagging her tongue. Rick eased his cock from between Candy's lips and slipped it between hers. Lisa groaned as he gave her several quick thrusts, his head thumping against the back of her throat.\n\nHe removed it and Candy quickly grabbed it and shoved it back into her mouth, sucking with an enthusiasm that had Lisa squirming in her soaked thong. Rick withdrew from her mouth, and Lisa sighed when Candy went \"Awwww!\" and pouted when he fed his cock once more to Lisa. \n\nThis time he pumped her mouth much slower, and she figured he was getting close and trying to back down to enjoy more of this incredible double blow job.\n\n\"Trick or treat!\" Candy exclaimed and opened wide. \n\n\"Oh my god, you're perfect!\" Rick laughed and Lisa joined him, giving her tits an appreciative squeeze. \n\n\"Told you I like to suck c...hmmm!\" she groaned when Rick shoved his dick back into her mouth, this time more roughly than before. \n\nHe fucked her mouth harder as well, now using long hard strokes that had Candy gurgling and making sloppy choking sounds, but her head bobbed in time with his hips, driving her mouth onto his plunging cock. \n\nDrool and pre cum dripped down her chin and chest, sliding over her small tits. Lisa scooped some in her fingers and rubbed it into her hard nipples. Candy whimpered and her hands roamed over Rick, her fingers sliding over his hard stomach and thick thighs. \n\nRick whipped his cock from Candy's mouth and Lisa eagerly accepted it, rising higher on her knees to be able to suck it better. When he removed it to give to Candy, Lisa spit on his head, and sighed in lust inspire awe when the young girl happily gobbled his cock just as quickly. \n\nWhen Rick slipped it out, Candy returned the favor, letting a thick glob of drool flow into it. Lisa noisily slurped it from her husband's cock before sucking him once more. She released him and slid back to her left, so Rick's dick was between them. \n\nWhen he went to give it to Candy, Lisa grabbed it, placed her lips along side his shaft and ran them up and down. Taking the cue, Candy pressed her black lips to the other side.\n\n\"Life is good,\" Rick moaned, his hands on their heads as both women ran their lips up and down his shaft. \n\nLisa opened wider, wrapping her lips around his cock, and remaining still. Rick thrust his hips, and catching on, Candy did the same, so he was now fucking both sets of their soft lips. \n\nLisa's hands caressed his thigh and she felt it trembling. She put her hand on his stomach and pushed. Rick sat back on the couch and opened his legs wide. Lisa slid along his right leg, and as Candy joined her, she grabbed her face and kissed her.\n\nThey moaned as they're tongues, both sticky with precum, caressed each other. Lisa pressed her lips to Candy's and sucked hard, slurping a sticky mess from Candy's mouth to hers.\n\nShe broke the kiss and spit the mess onto Rick's cock before grabbing it and sucking it into her mouth. She bobbed her head rapidly and felt his leg shaking against her. \n\nShe stopped sucking and angled his cock to Candy who obediently opened wide. Lisa fed it to her, easing it between her lips and hold it while she sucked him fast and hard. \n\n\"Shit,\" Rick groaned. \"You two are a little too good at this.\"\n\nLisa ducked her head, and once again sucked on his balls as she continued to blow him. When she ran her tongue up his shaft, Candy released his cock, letting Lisa take it into her mouth, and took her turn on his sac, sucking the entire thing into her precociously talented mouth. \n\nRick put a hand on each of their heads, and Lisa felt his fingers trembling as well. She joined Candy on his balls, the girl moving her mouth over so they were each working one side. \n\nLisa stroked his sloppy wet cock and felt it twitching in her grip. She kissed Candy, then trailed her tongue up his shaft. Candy followed her example and when Lisa reached his smooth swollen knob, she swirled her tongue around it. \n\nCandy did the same and Rick's breath caught, and his hips jerked. Lisa wrapped her fingers around the base of his shaft, and lightly stroked him. Her partner in lust put her fingers over Lisa's so they were both stroking him.\n\nRick's fingers tightened in their hair as Lisa licked faster, now catching the sensitive ridge beneath his head. Candy worked her tongue over his head, bathing it and occasionally swiping over hers. \n\n\"Oh.... oh damn,\" Rick moaned, his legs straightening around them as his entire body tensed. \n\nLisa continued to simply lick, letting the teasing orgasm slowly build. His cock jerked in their fingers, and she now added her lips, grazing them over his head as if she were going to suck, but simply caressing him. \n\nShe met Candy's for a slow kiss that had Rick's breath coming in short gasps as they stalled his release. Candy worked her lips over his head and have him a hard suck that made him groan.\n\nWith a sexy little giggle, she then resumed just using her tongue on them and Rick was now squirming on the couch, yearning to cum. Lisa loved having him like this, her strong, sexy confident husband, wiggling and moaning like a teenage boy as she and Candy had him at their mercy. \n\nLisa cupped his balls with her free hand, lightly tickling them with her nails, then released a moan over his head when Candy, this time without being coaxed, cupped Lisa's right breast, her thumb gliding over her pink nipple. \n\nBetween their battling tongues and teasing lips, Rick's cock twitched, and his head was so swollen it looked as if it were going to explode. A trickle of pre cum leaked out, and they both caught some on their tongues and proceeded to smear it over each other's lips.\n\nLisa sped up her stroking, pushing Candy's fingers to keep pace. She pressed her lips to his tip and sucked, slurping up more pre cum, as Candy swirled her tongue just beneath her mouth. \n\nShe gave his balls a gentle squeeze, then worked her lips up and down his shaft, stroking him with them as Candy continued to work his head. Rick's legs were shaking violently and when Lisa returned to his head and joined Candy in tonguing him he released a soft whimper she wished she had on tape, and a pearly drop of cum appeared in the slit of his cock. \n\nIt oozed out and Lisa shivered when she caught it on her tongue. Another drop followed, and Candy caught this one, a soft moan escaping her as she tasted him. \n\n\"Fuck!\" Rick exclaimed and a long thick spurt erupted between their lips. \n\nThe first squirt shot onto Lisa's cheek, but she pushed his cock towards Candy do the next one was a direct shot into her mouth. Candy once again backed her talk by proving she was no cum dodger.\n\nNot flinching, she continued to lick Rick's spurting cock, the cum oozing from her mouth over her lips and down both her chin and his shaft. Lisa fed him to herself, getting a good dose into her own mouth, and pushing it out with her tongue sending it flowing back onto him.\n\nRicks moaning and gasps were lost among Lisa and Candy's as they continued to work his spraying cock while his cum smeared over each other's lips and tongues. His cock thrust between them as he lost control of his hips, his oozing tip smearing over their cheeks. \n\nHis hips slowed and his moans softened as only a few weak dribbles flowed from his spent cock. Lisa took him into her mouth and sucked hard enough to hollow her cheeks, making him moan her name as she was rewarded with a few more drops. \n\nShe released him and grabbed Candy's face, between her hands, and pulled her into a sloppy cum filled kiss. Lisa's breath hissed int Candy's mouth then she removed her hand from Ricks still twitching dick, to grab Lisa's other breast and was now fondling both of them. \n\nLisa let her face go and returned the favor, playing with her tits while their lips and tongues passed Rick's cm back and forth. Lisa, her lust out of control, broke the kiss and began licking the cum from Candy's face, slurping it between her lips. \n\n\"So fucking dirty,\" Candy whispered, but it didn't stop her, from returning the favor, and pressing her lips to Lisa's chin and sucking the cum from it.\n\nLisa had kept a mouthful and lowering her head let it drool onto Candy's right breast. She quickly ducked down lower and sucked it from her firm young flesh. Candy emitted a high pitched little sound as Lisa sucked her cum coated nipple and thrust her tit further into her face, shaking side to side and smearing it around Lisa's face. \n\n\"That was fucking amazing,\" Rick sighed, his hands sliding down their backs as Lisa raised her head and resumed kissing Candy, where she promptly had the cum Candy had in her mouth shoved back into hers. \n\nThis time she swallowed it, moaning at the way his salty load slid down her greedy throat. \n\n\"I need to fucking cum!\" Lisa hissed, rising to her feet.\n\n\"Let's go into the bedroom, where we have more room,\" Rick suggested.\n\n\"Fuck that, I want it now!\" \n\nLisa sprawled onto the couch, throwing one long leg over his, the other over the arm of the couch. She yanked her thong to the side, exposing her glistening pussy. \n\n\"Eat my cunt, baby girl! Mama needs to cum!\" \n\nCandy looked up at her, her face red and sweaty, her make up streaming down her face from forcing Rick's cock down her young throat. Her cheeks and chin were sticky from remains of their shared load, and she was breathing heavily, her small tits rising with each breath. \n\nShe eyed her pussy with a mixture of nerves and desire, But Lisa was losing patience. \"Come over here and give me a kiss, little girl,\" she spread her lips wide and tapped her throbbing clit. \"Now.\" \n\n\"Easy there, boss,\" Rick slid next to her, and slipped his hand between her thighs, stroking her wet slit. \"Patience.\"\n\n\"You just got your cock sucked by two hot girls! Stick patience up your ass!\"\n\nCandy laughed at her and eased over on her knees until she was between Lisa's wantonly spread legs. \n\n\"Let's get this out of the way.\" Rick grabbed the side of Lisa's thong and with a hard yank snapped the side off her hip. \n\n\"Ow!\" Lisa yelped, then groaned at the way he roughly ripped pulled the torn thong from beneath her, leaving her cunt completely exposed. \n\nRick's fingers eased over her clit, then through the patch of blonde fuzz over her moist pink flesh. \"My wife has a beautiful pussy, don't you think?\"\n\nHe cupped her breast and lifted while lowering his head and sucking her nipple. ",
        "Candy licked her sticky lips nervously but placed her hands on her inner thighs. She leaned in close, and Lisa struggled not to grab her head and shove it between her legs. Candy was so close Lisa could feel her hot breath on her yearning clit.\n\n\"Please,\" she whispered, changing tactics. \"Please don't tease me, baby girl. Be good to me and I'll be sooo good to you when we go into the bedroom.\"\n\nCandy blew lightly on her clit, and Lisa whimpered, her hips twitching at just that limited sensation. \n\n\"Come on, Candy,\" Rick encouraged her. \"I just saw how good you are with that naughty little tongue. Let's see if you can get a woman off as good as you can a guy.\" \n\nCandy looked up at him. \n\n\"Do I get to suck your cock again?\"\n\n\"Honey, that's a question you never have to ask,\" Rick laughed. \"But not until you take care of Lisa.\"\n\n\"Oh, for God's sake,\" Lisa sighed, then gasped when Candy caught her by surprise by kissing her clit. \n\nShe followed the kiss with a quick flick of her tongue that felt as if she were trying a food she'd never tasted before, which in a way, was the truth. She licked her again, this time with a little more confidence. \n\n\"Yes,\" Lisa sighed, \"Just like that, baby, nice and easy, get to know that pretty kitty.\"\n\n\"Cornier,\" Rick muttered.\n\n\"Shut up, and suck my tit,\" Lisa punctuated her remark with a soft slap on the back of his head, before sliding her fingers into her hair. \n\n\"You guys are funny,\" Candy giggled, then swirled her tongue in a circle around her clit. \n\n\"Lower,\" Lisa instructed. \"And up and down, its not all about the clit, baby girl. Just thing of it like sucking cock, work it all not just the head.\"\n\nCandy eased her face down and Lisa moaned when she slipped her tongue between her moist lips. She licked side to side, slowly making her way back to Lisa's clit. \n\nShe gave her an unexpected quick suck that elicited a soft sigh from her before working her tongue back down. She took Lisa's advice, her soft tongue probing the wet folds of her pussy. \n\nCandy showed more patience than she expected, her tongue moving slowly, gaining confidence as she continued to get a feel for pleasing her. Her tongue dipped lower, and Lisa held her breath when the tip teased along the entrance to her hot wet twat. \n\n\"Oh, yes!\" Lisa squealed when Candy, with the air of someone taking the plunge into cold water, shoved her tongue inside her. \"Right there, honey!\"\n\nEmboldened by her reaction, Candy swirled her tongue inside her and Lisa watched her eyes widen at what a gooey mess her cunt was at this point. But undeterred, Candy's tongue continued to explore her hot wet twat. \n\nShe slurped her tongue back into her mouth and Lisa sucked on her lip at the way, Candy licked her lips at the taste of her sticky juices. She slid two fingers through Lisa's lips, then spread her wide. \n\n\"Such a good girl,\" Lisa purred as Candy plunged her tongue back inside her now wide open hole. \n\nShe moved her head, fucking Lisa with her tongue and Rick whispered. \"Someone watches porn.\"\n\nLisa paid no attention to his remark, she was too busy wallowing in the sensation of having a barely legal inexperienced girl lapping her cunt. She cupped her other breast, rolling her nipple between her fingers while Rick licked and sucked the other. \n\nHer hips rocked gently into Candy's tongue, pushing it deeper. Candy gave her another hard suck, then swirled her tongue from inside her and up through her sticky lips. \n\nLisa moaned when she replaced her tongue with a long slender finger. She pumped it slowly into her as her tongue once again found her clit. This time she licked it more boldly, her tongue moving side to side, then up and down and in slow, then fast circles. \n\n\"Another finger,\" Lisa breathed as she relaxed back into the couch, playing with Ricks hair and her taut nipple as Candy added a second finger while working her needy cunt with increasing skill and enthusiasm.\n\nLisa lifted her legs and placed her bare feet on Candy's shoulders before sliding them down her smooth back. Candy switched to sucking her clit in a slow gentle rhythm, that had Lisa's thighs trembling and her hips rocking faster. \n\n\"Another finger, spread that cunt open, baby,' Lisa told her. \"You've seen my husband's cock; you're not going to hurt me.\"\n\nCandy eased a third finger into her, and Lisa groaned when she wiggled them inside her. Her soft tongue was now playing Lisa's clit as well as some of the other lovers they'd shared over the years.\n\nShe didn't quite have the touch or control of more experienced women, but she was putting a serious effort into keeping her tongue moving and varying how she licked her. Lisa pumped her hips into her fingers and dropped her hand from Rick's hair into his lap, finding his cock.\n\nHis still hard cock. \n\nShe wasn't surprised, even Viagra couldn't compare to watching a teenager girl on her knees, licking your wife's cunt/ Lisa slowly stroked him, her fingers barely touching his still sticky, and lipstick smeared shaft. \n\nWhile she watched Candy's tongue dance over her pink button, she imagined the cock in her hand plunging into her lover's tight little box. That first delicious squeal she'd emit, when he worked it in followed by louder sharper sounds when he decided to cut loose and really fuck her. \n\n\"Right there,\" Lisa moaned as she slid her feet up to rest on Candy's shoulders. \"Just like that, baby, lick and suck and keep those fingers moving.\" \n\nRick's fingers had replaced his tongue with his fingers as he rested his head on her shoulder as he watched Candy lick and slobber over her clit. He squeezed her nipple hard enough to make her breath hiss between her teeth, but she did the same to the other, twisting and tugging on it. \n\nCandy was now sucking her clit much harder than before, her lips occasionally smacking together when it slipped from between them. Lisa's back arched and her ass lifted from the couch as she felt the first twinges of orgasm building within her. \n\n\"Don't stop,\" Lisa implored her as she thrust her hips harder into her fingers. \"Keep sucking that clit, just keep...Fuck!\"\n\nCandy surprised her by pushing her pinky inside her and curling all four fingers. The sudden, and borderline, painful spreading of her cunt, sent her spiraling over the edge. Lisa threw her head back and released a long loud wail that made Candy's orgasm sound tame. \n\nRick gave her nipple a hard twist at the same time Lisa tugged and pinched the other. Her hips went wild as her toes curled hard into Candy's shoulders and she pushed with her feet to keep her ass off the couch. \n\nHer hips ground in hard fast circles, smearing her sticky cunt into Candy's still moving tongue and fingers. Lisa slipped her legs behind her, and crossing her ankles behind Candy's head, pulled forward, pinning Candy's face to her quivering flesh. \n\nHer pussy convulsed around her fingers and Lisa yelped and squealed, her hand now pumping Rick's cock much harder in the throes of her orgasm. Candy squealed between her thighs now pumping but her tongue kept fluttering over her clit. \n\nLisa arched her back and her legs straightened as her entire body tensed. She pushed her feet forward, and pushed back against the couch, lifting her hips higher until she heard one make a popping sound. \n\nSensing what was about to happen, Rick gave her nipple a savage pinch, twisting it as he did. Lisa howled like an animal and felt something release deep inside her. Candy yelped in surprise, her face jerking back as a stream of sticky fluid sprayed her face and Lisa's inner thighs. \n\nLisa cried out and jerked her hips, sending another stream, this one catching Candy directly in her mouth and chest. With a low moan, Lisa's body went limp, slumping back into the couch, her feet hitting the floor as she lay there panting, her heart pounding and the ceiling spinning above her.\n\n\"Holy shit,\" Candy wiped the sticky mess from her face with the side of her hand as she eased her fingers from within her. \"I thought that stuff was made up for the movies.\"\n\n\"I think you did a good job, honey,\" Rick gave Lisa an affectionate kiss. \"How was that babe? Good for a first time?\"\n\n\"Good for any time,\" Lisa smiled down at her. \"You're a natural, baby girl.\"\n\n\"Can we fuck now?\" Candy rose to her feet, her eyes on Rick's cock in Lisa's fist. \"He's still hard!\"\n\n\"How could I not be?\" Rick told her. \"What do you say, hon, ready to take the party to the bedroom?\"\n\n\"I'm not sure I can move.\" Lisa sighed as she sat there in a spreading puddle on the couch. \n\n\"Then we'll start without you!\" Candy looked around. \"Where's the bedroom?\"\n\n\"Down the hall,\" Rick whistled. \"Candy, there is no way the girl who was supposed to be here could have been better than you.\"\n\n\"Yay!\" She clapped her hands and hopped up and down like a little kid, and Lisa felt a new wave of desire when she watched her perky titties bouncing. \"Let's go!\" \n\nShe turned and strolled across the room towards the hall.\n\n\"Christ, we hit the fucking jackpot!\" Rick stood and taking Lisa's hand helped her to her feet, he frowned at the couch. \"That cushion is history.\"\n\n\"Flip it over,\" she told him, her eyes on Candy's ass as she paused in the hallway, waiting for them.\n\n\"Other side is the same, remember last...\"\n\n\"Who cares about the fucking couch!\" Lisa slapped his arm. \"Look at that!\" \n\nShe pointed to Candy who decided she was done waiting and was now sauntering down the hall. With a laugh, Rick, still holding her hand ran across the room, with Lisa trailing behind him.\n\nAs much as she enjoyed watching Candy's perfect little ass sway and how good the red fishnets looked on her long legs, Lisa was more caught up in laughing along with her husband as the ran naked across the room, his cock bobbing and her pussy still dripping from her explosive orgasm.\n\nRunning after a nearly naked young girl who they were going to fuck senseless in their room. As Rick had said, life was good! They caught up with her, and Lisa dealt her ass a playful slap. \n\n\"Get moving, little girl!\" \n\nCandy yelped, then laughed, and to their delight, proceeded to skip the rest of the way down the hall. She entered the bedroom and when Lisa and Rick reached the doorway she'd thrown herself onto the bed, lying in the center of it, her legs spread wide, and a big smile on her face. \n\n\"Come get me!\" \n\n\"I need to f...hey!\" Rick exclaimed when Lisa slipped her hand from his and shoved him t the side. \n\nShe took three steps and launched herself onto the bed. She landed on her stomach and bounced on the firm mattress, flipping over onto her back next to Candy who laughed at her. \n\nLisa sat up, and looking at Rick, stuck her tongue out at him. \"Firsts!\" she told him,. Then rolled over so she was between Candy's legs, smiling down at her. \n\n\"Hi!\" Candy returned the smile. \"Wanna play?\"\n\nLisa's answer was to lower her head and plunge her tongue into Candy's mouth. Her young treat slipped her arms around her, and gripped the end of her pig tails, holding them as they kissed. \n\nLisa moved side to side and they both groaned as her breasts slid across Candy's their nipples, rubbing over each other. Candy released her hair, and slid her hands down her back, then between them, holding Lisa's breasts. \n\nLisa slid higher up the bed until her tits were in her face and lowered her nipple to her. Candy eagerly sucked it, now wrapping her long legs around Lisa's waist. Lisa moved to the side, offering her other tit, and looked to her left.\n\nShe saw Rick in the mirror over the bureau, standing there with an appreciative smile on his face and his cock still at the ready. He'd come closer to the bed, content to watch, and as much as Lisa wanted to take her time, she wanted to give him the show he'd been waiting for. \n\nLisa crawled back down the bed, and Candy let her legs drop from around her. Lisa paused to lick and suck each of her tiny nipples, also taking a moment to suck on the firm flesh of her small breast. \n\nCandy sighed, and arched her back, pushing her tits into her face. She extended her right arm and tapped the bed. \"You can sit here,\" she said to Rick. I can keep you busy!\" she wagged her tongue at him. \n\n\"You just lay back and enjoy,\" Rick told her. \"I'll be joining in, don't you worry.\"\n\nLisa left Candy's tits, her tongue trailing down her soft tummy as she worked her way down the bed. \n\n\"Someone doesn't look to nervous about you going down there, now does she?\" Rick observed behind her. \n\n\"You guys haven't steered me wrong yet!\" Candy declared.\n\n\"Priceless,\" Rick sighed. \n\nLisa didn't add to the exchange, she was too busy running her lips over Candy's completely smooth mound, her mouth watering in anticipation of tasting her. Candy's stomach rose and fell faster, showing her own excitement and when Lisa turned her eyes up to her, she saw, as Rick noted, no sign of nerves, just desire. \n\nLisa forced herself to pause to give a gentle kiss to each of her thighs as she eased back further on her knees, so her face was directly between her legs. She stayed kneeling to give Rick a good view of her ass and pussy before he came over to watch her tongue works it magic on their sweet treat. \n\nLisa placed her face between her slender thighs and inhaled deeply, her eyes rolling at the sweet scent of Candy's tight cunt. She teased her tongue along the edge of her lips and Candy moved her hips, wiggling impatiently. \n\nLisa placed her hands over her slit and used her thumbs to open her tucked up lips, spreading the delicious young flower she was about to taste. She gave her clit a soft kiss, then a fast swirl of her tongue. \n\n\"Oh!\" Candy gasped. \"I can't believe I'm letting a woman go down on me!\" \n\n\"Just returning the favor, my now officially bi little tart,\" Lisa winked at her, then pressed her tongue to her clit.\n\nShe licked it in a slow circle, before sliding her tongue down, moving it side to side, taking her time as she worked her way down to the sweet center of tonight's \"Candy\". She whimpered and lifted her hips, and with a smile, Lisa moved with her, not letting her push her tongue inside. \n\n\"Awww!\" Candy moaned. \"Please?\" \n\n\"She is asking nicely.\" Rick said from her left where he was now standing to get a view of the action. \n\nLisa obliged them, opening Candy wider and plunging her tongue inside her. While she squealed above her, Lisa sighed as her tongue explored her hot juicy twat. She swirled her tongue, then slid it back in her mouth and sucked on it, getting a good taste of her.\n\nShe pushed her tongue back in while she used her thumb on her clit, lightly rubbing it and causing her hips to rock into her touch. Lisa shook her head, moving her tongue around inside, before making her tongue rigid and fucking her with it. \n\nLisa sucked hard, her mouth filling with her juice while her ears filled with Candy's whimper of pleasure. She flinched when Rick put his hand on the cheek of her ass, then moaned when his fingers slid inside her. \n\nShe wiggled her hips, working him deeper as her tongue took a slow teasing journey back through Candy's lips to her clit. She gave it a hard suck that caused Candy to gasp before sucking more gently on it. \n\n\"That's nice,\" she cooed, and Lisa looked up to see she'd cupped her tits, her fingers stroking her nipples.\n\nHer wide brown eyes were on Lisa as she made a show of tonguing her. She eased back, showing off the trail of sticky fluid from her cunt to the tip of her tongue. She slurped it up, following it back to her pink clit. \n\nLisa's tongue danced over it, fluttering quickly, and lightly, her tip barely in contact with her quivering flesh. Candy pushed her hips, forcing more contact, and Lisa indulged her, licking more firmly. \n\nRick's fingers eased from inside her, and Lisa paused when she felt his weight settle on the bed behind her. Candy's gaze rose to look behind her, and she saw them widen. A moment later, Rick grabbed her hips and drove his cock into her in one long hard thrust.\n\n\"Fuck!\" Lisa squealed into Candy's pussy. \n\n\"Let's see how good you can focus.\" Rick said, then proceeded to fuck her in a slow steady rhythm. \n\nLisa moaned as his thick cock slid in and out of her but returned her tongue to the task at hand. She was amazed Rick was fucking her first, it wasn't their usual pattern, but she wasn't going to complain, and the look on Candy's face was priceless as she watched Rick take her from behind. \n\n\"That looks so good!' she moaned; her fingers still busy on her nipples. \"I want some!\" \n\n\"Then come nice and hard for us.\" Rick told her. \n\nLisa switched to sucking, and Candy squirmed on the bed, her soft wet flesh grinding into Lisa's face. Behind her, Rick grabbed Candy's ankles and lifted her legs, putting them around Lisa's waist.\n\nLisa turned her eyes to see into the mirror and saw him cross Candy's ankles, locking her legs around her. He leaned over and grabbed her pig tails, tugging them back.\n\n\"Let's make it harder.\" Before the words were completely out of his mouth, he tore into her, fucking her hard and fast. \n\nLisa cried out into Candy's pussy, and it took a minute for her to be able to gather herself enough to resume licking her. The bed rocked from the force of Rick's fucking her, and she had to struggle to keep from yelping and keep her tongue on Candy's clit. \n\n\"Damn, he's fucking you!\" Candy groaned, her hips moving faster. \"This is so much better than a party!\" \n\nRick shifted his hands, now gripping both her pig tails in one while holding Candy's ankles together with the other, keeping Lisa immobile as he continued to hammer into her. \n\nLisa's tongue blurred over Candy's clit, he breath coming in hot gasps as Rick fucked her hard enough for his balls to slap against her clit. She released a startled yelp when he slapped the left side of her ass, then quickly struck the right. \n\n\"Do it again!\" Candy told him, and Lisa winced when he dealt her two more hard smacks. \"Do it...Oh!\" \n\nLisa cut her off by shoving two fingers roughly into her pussy and fucking her hard with them. Rick nonetheless gave her two more hard smacks, before returning his grip to Candy. \n\nLisa focused harder on her tongue, slathering Candy's hard button and mixing in a few hard sucks. She curled her fingers, then straightened them and shook them side to side as Rick had earlier.\n\nCandy was so wet she could hear them swishing inside her and her legs tightened around Lisa's waist. Sensing her close, Rick slowed his fucking to let Lisa pay more attention to her.\n\nIt wasn't a selfless move, the sooner Candy came, the sooner his dick was going to be inside her young cunt. Not that Lisa wasn't almost as eager for that as he was, and she took to Candy's clit with all her skill as a lover.\n\nHer tongue danced expertly over her throbbing button as her fingers wiggled and flexed inside her sopping slit. \n\n\"I...that's....\" Candy stammered as her hips moved faster and she tugged on her nipples as Lisa had done, stretching them to the point it looked painful. \"I...Oh, Lisa!\" \n\nThe way she cried out her name just as her pussy contracted around her fingers and her hips exploded into motion sent a gush of warm sticky fluid around Rick's plunging cock and down her thighs. \n\nCandy filled the candlelit room with another impressively loud wail as her thighs tightened around Lisa's face. She kept her lips affixed to her clit, sucking hard as she continued to wiggle her fingers inside Candy's convulsing cunt. \n\nWhether it was because Lisa had succeeded in getting Candy off, or just losing control in his excitement, Rick once again tore into her, pounding her with long hard strokes.\n\nLisa yelped repeatedly into Candy's hot, quivering, and sticky flesh as he fucked her hard enough to cause the bed to rock. His grip shifted to her ass, his strong fingers gouging into the soft skin of her ass hard enough to hurt.",
        "But not enough to stop Lisa from reveling in the action. Her eyes remained on Candy, watching her brown eyes roll back and her lips part as she cried out in ecstasy. Her face was a red, sweaty, and sticky mess, half her lipstick smeared around her mouth, and some of her dark hair plastered to her sweaty chest and shoulders.\n\nShe looked like a beautiful hot mess, and between that, and Rick's giving it to her good and hard, she felt her own clit, responding, aching for more of the snake that had bit, or in her case, licked her. \n\n\"Ohhh, fuck me,\" Candy moaned as her body went limp, her hands falling from her having tits. \n\n\"That's the plan.\" Rick pulled his cock from Lisa's dripping cunt, and grabbing her right hip, yanked her to the side.\n\n\"Hey!\" she squealed as she rolled onto her back next to Candy. \"You don't have to.... Oh, baby, I love it!\"\n\nHer abrupt mood shift was courtesy of the way Rick leaned over the bed, placed his hands on Candy's thighs and buried his face between them.\n\n\"Shit!\" Candy cried out as Rick plunged his tongue insider her and sucked loud enough to make his lips smack. \"That's, oh god!\"\n\nRick slipped his tongue through her lips and Lisa watched as he traced her still quivering clit in several fast circles. He slipped two fingers inside her, making her squeal, and her legs kicked by his sides, as he switched to sucking her now over sensitive clit.\n\n\"Stop,\" she whimpered, her hands on his broad shoulders, trying in vain to push him away. \"It feels too good, I...stop, please stop!\" \n\nHer begging had him sucking her harder and Lisa rolled to her knees and grabbed Candy's wrists, pulling her hands back. \n\n\"Oh, oh, oh!\" Candy bucked on the bed, writhing, and whimpering as Rick continued working her clit. \"It's too, I.... I just.... I can't...Ohhhh.\"\n\nHer hips bucked wildly, but Rick slipped his arms around her thighs, holding her down while he ate her young cunt with a gusto that had Lisa's mouth and pussy watering and yearning for another release. \n\nCandy tried to pull her hands from Lisa's grasp, but she held her tightly and using her weight, leaned over, pinning her arms over her head. \n\n\"No, no!\" she whimpered. \"Its too much, it tickles! Oh, stop!\"\n\nRick gave her clit one more hard suck, then slid up onto his knees on the bed. He grabbed Candy's ankles, and lifted her legs in the air, holding them open, he pushed the head of his cock through her slick lips.\n\n\"Yes!\" Candy's tune immediately changed, and she stopped squirming. \"Fuck me!\"\n\nRick teased all three of them as he slid his cock through her lips several times, and Candy moved her hips, thrusting them in hopes of getting him inside her.\n\n\"Don't be mean!\" she pouted, \"No fair teasing me!\"\n\n\"No fair!\" Lisa mimicked her in a little girl voice, pushing her lips into a pout that rivaled hers. \n\n\"Don't make fun!\" Candy tried to pull her hands from Lisa's grasp. \"I just want to get fucked! I thought you guys wanted to.... Oh my God!!!!!\"\n\nWith her attention on Lisa, Rick caught her by surprise, entering her in one long thrust. \n\n\"Fuck that's.... big!\" Candy whimpered, her eyes going so wide Lisa wanted to laugh. \"Easy,\" she moaned as Rick eased back, removing all but the tip. \"Go easy.\"\n\nRick obliged her, this time slowly introducing his cock to her inch by teasing inch. Candy whined and moaned but didn't resist as he pushed his full length into her and remained still, letting her spread around him.\n\n\"Christ, she's tight!\" he marveled. \n\n\"His cock is so big!\" Candy moaned, her eyes shifting to Lisa. \"He was fucking you so hard!\"\n\n\"I'm used to it baby girl,\" she leaned over and kissed her precious pouting lips. \"You'll get used to it too.\"\n\nRick eased partway out, and Lisa licked her lips at the sight of her pink flesh tightly clinging to his thick wet shaft. He eased back in, then began slowly fucking her. \n\nCandy moaned and Lisa released her arms, but she let them remain on the bed over her head as she lay there breathing hard and whimpering as Rick took his time letting her get accustomed to his size. \n\nLisa fondled her breasts, playing with her nipples and whispered. \"That's a good girl, just relax, pretty soon you'll want him to fuck you as hard as he was fucking me.\" \n\nCandy's response was another whimper, but for the first time her hips moved, rising to meet Rick's cock. He picked up the pace, not just going faster, but inserting more of his length with each thrust. \n\n\"Oh, oh, that's,\" Candy stuttered, then sighed. \"Wow, that's starting to feel good!\" \n\n\"There you go, that's my girl.\" Lisa gave her nipples a playful pinch, as she watched Rick's cock plunder her young flesh. \n\nShe leaned over and opened wide, Rick removed his cock from Candy and slipped it into Lisa's waiting mouth. She sighed around him as she bobbed her head, tasting both her and Candy's juices from his hard flesh. \n\nShe slipped him from her mouth but grabbed him and slapped his cock against her clit. Candy gasped, then groaned when Lisa pushed his cock through her lips and fed it to her pussy. \n\nRick took it up a level, now going faster and spreading her legs wider. \n\n\"Deep,\" she moaned, but her hips were moving faster, and her whimpers were now sounds of total pleasure, and not mixed with any discomfort. \"So deep!\"\n\nLisa could tell Rick was struggling to hold back, but he managed to only go slightly faster. Her clit throbbed and her nipples were aching for another release, and tired of babying her, Lisa swung her left leg over Candy's head, so she was straddling her shoulders. \n\nBefore she could react, Lisa lowered herself down sitting on her face. Candy squealed, then again and with a much higher pitch when her move caused Rick to lose control and fuck her much harder. \n\nCandy's legs jerked in his grasp, but he held her red clad ankles tightly as he was now giving her a good hard pounding. Her hands came up behind Lisa, grabbing her hips and trying to push, but she had no leverage.\n\nLisa ground her hips, smearing her wet flesh into Candy's face as she whimpered and yelped beneath her. She leaned over, and Rick did the same. They shared a long tongue filled kiss as they both pleasured themselves on the young girl pinned between them. \n\nLisa leaned back and grabbed Candy's tits, rolling her hard nipples between her fingers. Candy's yelps continued but seemed less urgent as she became used to Rick's increased pace. \n\nHe maintained a fast pace, his cock driving into her prone pussy, but didn't go any harder. When he pulled her legs together and placed her fishnet clad feet on his chest and let them go, she kept them there. \n\nHe placed his finger on her swollen clit and Candy jerked beneath her. Lisa ground her hips faster, now sliding front to back and she groaned when for the first time she felt Candy's tongue flick over her clit. \n\nLisa moved faster and Candy kept her tongue rigid, letting her ride her face. \n\n\"She's goddamn amazing,\" Rick whispered as he rubbed her clit in hard circles. \"She can't be 18.\"\n\n\"You tell me,\" Lisa giggled. \"That cunt feel 18 to you?\"\n\n\"She is fucking tight,\" he sighed. \"Even this wet she doesn't want to let go.\"\n\nHis words caused her hips to move faster and now in a circular motion. Candy's hands slid from her hips, up her sides and Lisa moaned, and Rick whistled in admiration when he her hands found Lisa's tits. \n\n\"Jesus,\" Lisa gasped when Candy's fingers captured her nipples. \"I swear I'm ready to fucking come again already!\" \n\nWhether she was just getting more excited or could hear Lisa from beneath her, Candy moved her head side to side, causing Lisa to remain still and let her lick her clit. Her thighs were already trembling around her head, and Lisa saw Candy's feet were pushing harder into Rick, lifting her ass, and pushing his cock deeper.\n\nHis thumb continued to work her clit as Lisa played with her nipples. She felt Candy's breath coming hot and fast into her quivering pussy, and Lisa wiggled on her face, moving her clit into the girl's fluttering tongue. \n\nLisa gasped when Candy pinched her nipples roughly then again when she caught her clit between her lips and sucked hard on it. Rick saw the look on he face and knowing how close she was, reared his hips back and tore into Candy as hard as he had Lisa.\n\nCandy released a long squeal into her hot flesh, and Lisa cried out when she pinched her nipples even harder than before. Lisa paid her back in kind twisting Candy's just as hard. \n\nCandy's back arched, but she sucked Lisa's clit hard several times and a sudden twist of her nipples sent her over the edge. Lisa came like an animal, her head back, mouth wide open and howling in pleasure. \n\nHer orgasm triggered Candy's who bucked wildly between them, her hips bucking, legs kicking in the air and yelping into Lisa's convulsing cunt. Rick kept working Candy's clit but slowed his fucking.\n\nHe was as read and sweaty as the two women were and his breathing was getting heavier. Even with his control and having already come Candy's already tight teen aged cunt contracting around him had him getting close. \n\n\"Hold on, baby,\" Lisa moaned in between her sharp yips as she ground her pussy into Candy's trapped face. \"I want more!\"\n\nRick gave her a look of 'Are you kidding' but knew she wasn't. He could either try and last longer this round before they took a breather, or she'd immediately suck him until he was hard enough to shove into her needy cunt, and she was sure Candy would help.\n\nBetween them, Candy released a long high pitched sigh, and stopped moving, her hands falling from Lisa's breasts and her legs falling limply by Rick's sides. Lisa wiggled her hips once more into her face as the last of her orgasm flowed through her, then managed to swing her leg over her.\n\nRick quickly withdrew from Candy, trying for enough time to back away from the point of no return.\n\n\"You...guys.... are... hardcore,\" Candy spoke between ragged breaths, her face a bigger mess than it was before. \n\n\"Not done yet, baby girl.\" Lisa told her. \"Roll over and get that cute ass in the air.\"\n\nCandy displayed the same look Rick had.\n\n\"You don't want to take that dick doggy?\" Lisa shrugged and rolled onto her hands and knees. \"All mine then, come on baby, take your dirty pony for a ride!\"\n\nRick slid up behind her and slammed into her hard enough to make her rock forward. He gripped her hips tightly and went to town on her, showing that even the short time out he'd taken had given him new life.\n\n\"Yes, yes, yes!\" Lisa cried out. \"Pound that pussy! Take that sloppy fucking cunt!\" \n\n\"Wow,\" Candy said as she sat up. \"Your wife is a goddamn nympho.\" \n\n\"No,\" Lisa turned her head to smirk at her. \"Just not a little girl who can't take a real fucking.\" \n\n\"What\" Candy bristled. \"Screw you, old lady, I'm not done yet!\" She quickly rolled onto her knees next to her and wiggled her ass enticingly. \"How about you take a younger model for a ride?\"\n\n\"Holy crap, can we keep you?\" Rick whipped his cock from Lisa and slipped it into Candy.\n\nLisa smiled as Rick hammered into the young girl as hard as he had her. \n\n\"Ow, ow, ow!' Candy cried out, but when he slowed yelled. \"No, don't stop!\" and with a laugh, Rick resumed tearing into her.\n\nThey were only a foot apart, and she leaned over, kissing her, and capturing her precious yelps in her mouth. Rick slipped his fingers inside Lisa's at this point literally sloppy cunt, thrusting them while he fucked Candy. He removed his cock and went back inside Lisa, now fingering Candy. \n\nHe went back and forth several times, giving both women a minute of good hard fucking. They both lowered their heads to the bed, pushing their asses up and watching each other get fucked. \n\nWhen Rick switched to fucking Candy, Lisa sat up, then putting her hand on his shoulder, stood on the bed. Bracing herself on him she swung her leg over Candy and lowered herself onto her. \n\nUsing her height and long legs, she knelt over her so she was resting on Candy's back, but her knees and hands were on the bed, keeping her full weight off her. Now presented with their wet cunts on top of each other, Rick slipped it into Lisa for a few thrusts, then Candy.\n\nHe moved back and forth more quickly, only giving each of them a few slow pumps before switching. Lisa knew he was close again, and this time she'd let him get off, but give him one more thrill. \n\nShe slipped off Candy and rolled onto her back next to her. Lisa eased over until her head was between Candy's knees and opened wide. Rick gave Candy several hard thrusts, then withdrew and dipped his cock into his wife's willing mouth.\n\nShe let him fuck her face, moaning as a mixture of their juices flowed down her throat. Rick pushed on Candy's back, and she obediently lowered herself, spreading her legs wider. \n\nLisa lifted her head and gave her clit several quick licks making her groan. Rick plunged his cock back into Candy and Lisa switched from licking her clit to his balls as he fucked her. \n\nShe was so wet she was dripping into Lisa's mouth, as she sucked both. Rick didn't remove his cock from Candy, just continued to pound her harder and faster. Candy yelped as his thrusts were now much shorter and bordered on brutal as he neared his climax.\n\nLisa flicked her tongue once more over Candy's clit, then kept it still, letting Ricks balls slide across it. \n\n\"Fuck,\" he gasped, his breath coming in ragged gasps. \n\n\"Give it to me,\" Lisa demanded. \"You know how I want it!\" \n\nRick squeezed Candy's hips harder and gave her several brutal thrusts that had her squealing. He whipped his cock out and pumped it as Lisa sucked on his balls. A long spurt of cum splattered against Candy's quivering pussy.\n\n\"Ohh, that's nasty,\" Candy moaned as his load slid down through her lips and flowed into Lisa's waiting mouth. \n\nRick kept stroking, sending several long squirts into Candy's pink cunt. She squirmed above her as the cum oozed from her pink flesh to drip beneath her. Lisa grabbed her hips and pulled her down to her, noisily slurping her husband's cum from their lover's pussy as she whimpered and groaned, squirming in her face.\n\nWhen Rick sat back on his knees, Lisa eased out from between Candy's legs, and sat up. She tugged on Candy's shoulder, to get her to do the same. When she did, Lisa opened her mouth to show the puddle of cum pooled on her tongue. \n\nCandy leaned closer, and Lisa kissed her, shoving the warm sticky contents of her mouth into hers. Their tongues swirled around the hot mess, some of it sliding down their chins. \n\nLisa eased back and lay back on the bed in front of her, mouth open. \n\n\"Trick or Treat!\" she called out.\n\nCandy, a wicked smile on her face, leaned over and let the drool laced glob of cum flow into Lisa's mouth. She sat up, opened wide to show the mess, then tipped her head back and made a show of swallowing.\n\nShe opened wide, showing both her now empty mouth. \n\n\"Have I ever told you you're the best wife ever?\" Rick gave her a tired smile as he wiped his sweaty face. \n\n\"You guys,\" Candy looked from one to the other, a look of disbelief on her sweat, and worse, slicked face. \"Are wild as fuck, you know that?\"\n\n\"Pretty wild yourself,\" Rick told her. \"Apologies for saying you were all talk.\"\n\n\"You sure you're 18?\" Lisa asked. \"It doesn't matter, but you're a little shall we say advanced?\"\n\n\"I like sex,\" she shrugged. \"I'm kind of a party girl, so I've had some fun. Nothing like this though.\" She laughed. \"My parents would shit!\"\n\n\"Great,\" Rick rolled his eyes. \n\n\"That was something.\" Candy wiped at her face, then frowned at the mess that came away on her hand. \"Think I could maybe shower?\"\n\n\"Of course, you can,\" Lisa told her. \"We'll shower together while the man here rests up.\"\n\n\"Together?\" Candy asked.\n\n\"Baby girl,\" Lisa pointed to the clock next to the bed which showed 10:55. \"We have you for another hour.\"\n\n\"No,\" she shook her head. \n\n\"What do you mean no?\" Rick asked. \"Deal was until midnight, remember.\"\n\n\"Yeah,\" Candy nodded. \"But I told my parents I was sleeping over a friend's house, so why stop at an hour?\" she reached out and playfully flipped Lisa's right breast. \"I can spend the night!\"\n\n\"Did I say jackpot?\" Rick laughed. \n\n\"You seriously want to stay the night?\" Lisa's eyes darted to the smooth pink cleft between Candy's sweaty thighs, already craving another taste.\n\n\"I can, but it depends.\" Candy gave her a sly smile.\n\n\"On what?\" Rick asked.\n\n\"How much more money do I get?\"\n\nHappy Halloween!\n\nAuthor's Note: Hope you enjoyed this twisted little treat, and I think its safe to say none of us would mind unwrapping some Halloween Candy. This is a contest entry so your votes and comments are appreciated. As always thank you for reading and supporting my work over the years. Lovecraft68."
    ],
    "authorname": "lovecraft68",
    "tags": [
        "threesome",
        "barely legal",
        "group sex",
        "lesbian sex",
        "menage a trois",
        "older couple younger woman",
        "halloween",
        "cougar kitten"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-trick-for-their-treat"
}