{
    "title": "Unexpected Threesome Ch. 21",
    "pages": [
        "[Here, to maintain the change of pace and perspective, Amy continues to narrate the time spent in Bora Bora]\n\nWith Liddy due here at 8 am, 7.40 found me sitting in the cockpit, enjoying my morning coffee dressed in nothing more than the bikini I'd be wearing that day.\n\nFive minutes before that, the sound of Ned climaxing on Ellen had wafted up from their cabin through the small hatch that sat on the port side of the companionway. The loud grunting before his climax and the multiple repetitions of the 'oooooohhhhhh'ing' noise Ned makes as he shudders through the little mini-climaxes that follow his main one told me he'd had yet another good one; maybe too good if our objective had been to drain him of all sexual energy for the day.\n\nIt had been anything but a quickie. Ellen is a lot less vocally expressive than I am but I'd still heard her have two climaxes before the sounds made it obvious Ned was pumping away for his. The trouble with having watched so much sex between Ned and Ellen (indeed between him and all the other girls) is that the sounds carry so much mental image with them.\n\nEllen's climaxes might not be vocal, but they're a visual feast; her body quivering with rising excitement beforehand and aggressively thrown at Ned during it. So it only takes the most suppressed groan from her to bring it all to mind.\n\nAnd as for Ned, the sight of him in full pumping mode is one to behold. You can see the pleasure on his face and transmitted through his whole body. I've watched as the full length of his shaft has disappeared into Ellen and come out glistening with her juices. That's the thing about sex that never ceases to amaze and arouse me; the sheer intimacy of it. The thought that so much of Ned is so deep inside her (or my) body.\n\nI wouldn't have thought that watching or listening to someone I love making love to another could be anything other than distressing. But at least among the girls on the boat it's anything but. It always leaves me aroused; no less so than this morning when I feared some moistness might be penetrating the gusset of the fresh bikini I had on.\n\nBut if that other woman was Liddy, I was far from sure my feelings would be so sanguine.\n\nThe routine that would usually be followed told me that Ned and Ellen would now be up and starting their own breakfast. I looked up at the sound of the approach of a small outboard motor to see Liddy sitting in the bow of a RIB with a middle aged couple behind her. Seeing me looking at them, she waved.\n\nI moved down onto the swim platform to help her aboard.\n\n\"I hope you don't mind me being early. George and Nancy wanted to start their trip early and needed to get rid of me. I don't mind waiting down here if you guys aren't ready.\"\n\n\"It's fine, everyone one will be up. Come and say hello and have a look at the yacht.\"\n\nI sussed her out as she moved from the RIB to the platform. She was wearing a white light gauze cotton mini sundress, exactly the same as Ellen's. Long sleeved, it had a tailored cut to hug the body's curves, a button down front and a plunging neckline. The latter seemed to be something of this woman's trademark. A thin tie belt cinched the waist of her dress tightly against her stomach just above her hips. \n\nI'd guess she was wearing one the same size as Ellen's too; which meant it was too tight to accommodate her breasts. She had the top button undone, exaggerating the depth of the plunge at the front and partly exposing the small bikini top she was wearing underneath and an awful lot of breast flesh. This woman also seems to have a thing about red underclothes. Her bikini was a plain red. The top was a slide tri with triangles no bigger than the style Ellen and I wear. Through the translucent material of her dress, I could see the bottom was string sided in a low rise hipster. The back of it wasn't quite Brazilian cut, but not full coverage either; the front a moderately small triangle. Any hope I had that she'd be wearing a grandmother one piece were blown away in an instant.\n\nAs I let her climb the ladder onto the aft deck ahead of me, I looked up at her butt. Really! Not the slightest hint of orange peel disrupted the line of her light brown skin. I don't know if her tan was sun induced or bronzer. If the latter she was brave wearing a white dress.\n\nDesperately I tried to find some age induced flaw in this disgustingly genetically blessed woman. I did notice some sun damage to her skin and that it had lost some of its elasticity; bunching up into mini waves where it was compressed as she moved. And just maybe her inner butt was starting to develop some of the hollowness older thin women can get. But then, maybe not. Maybe it was no different to my own.\n\nMoving through the cockpit, I overtook her to lead her down into the cabin where Ned still lurked to find the others not quite as progressed with their morning routines as I thought they'd be.\n\nEllen was standing stark naked at the galley, filling the kettle. I'll give Ellen her due, she didn't bat an eyelid as I simply waved my hand to her and said...\n\n\"You remember Ellen.\"\n\nTo which Ellen managed to reply...\n\n\"I'm just putting the kettle on for a cuppa. Would you like something?\"\n\n\"That'd be nice. Can you do a coffee?\"\n\nBrushing past Ellen I led Liddy to the door of the master cabin which was accessed from behind the galley, partly thinking Ned would be there, partly because that's the routine we go through when showing someone over the yacht.\n\n\"This is the master cabin.\"\n\nI looked over Liddy shoulder as she surveyed the cabin and suddenly realised it was making some significant statements about things aboard the boat. There were three pillows lined up across the head of the bed. Strewn around in plain sight were both Ellen's and my dresses from last night intermingled with the clothes Ned had been wearing. And Ellen's tiny panties were hanging on the door knob of a cabinet where they'd been hung to dry after the wet trip home.\n\nBoth Ellen's present nakedness and the clothes were a function of the fact we never really had worked out how to deal with our clothing with the rotating room arrangements we had. The master cabin wasn't generously equipped with cupboard space and what was there barely accommodated Ned's stuff. All our stuff was stored in a large locker and storage area that sat on the port side opposite the amidships bunk cabin. Here there was a vertical rack of open shelves, one for each of our gear bags, and a hanging locker and shelving for additional clothing and the boat's sheets and towels.\n\nNormally whoever was sleeping with Ned would take a bikini into the master cabin with them for the morning or just put on the one they'd taken off to go to bed. But we were late getting in last night, dressed in evening clothes, and the usual arrangements hadn't worked out. And nakedness had never really been an issue on the boat; at least once the present arrangements had developed. \n\nI could see Liddy taking in what she was seeing. With Ned not in the cabin, I turned to Ellen who was keeping her cool with her naked state and wasn't making any rushed move to cover up.\n\n\"Where's Ned?\"\n\nShe simply pointed to the closed door of the head (bathroom) on the starboard side.\n\n\"Would you like to see the rest of the boat?\"\n\nI led her past the galley and main cabin with its table and settee arrangements towards the amidships cabin. Just as I did, Tash walked out of the cabin topless; moving across to her gear bag to get out something to wear. Tash acknowledged Liddy before continuing to rummage through her bag as we brushed past her, moving along the companionway towards the door of the cabin.\n\nIn a way, the amidships cabin finished the story Liddy had seen in the master cabin. The cabin contains two vertically stacked single bunks and it was obvious only one of them had been slept in.\n\nForward of there I showed her the bow cabin; its double bunk little used because it moves about more in a seaway.\n\nAs I led Liddy back along the companionway towards the main cabin, Ned exited the head; as naked as Ellen was. Not noticing us, he walked over to Ellen who at this stage had moved across a little to the sink where she was still facing us but the full length of her left side was visible from where we stood, outside the line of the bench. He'd had sex with her three times during the night and, no doubt still washed with oxytocin and loving feelings, pushed the left side of his torso against her left flank, put his hand lovingly on her still naked butt and asked her...\n\n\"Would you mind if we used your little backpack as the second bag for our gear today. I'll take my waterproof harken duffel bag as the other?\"\n\nLiddy had a clear profile of him; dangling dick and all. Ned's in that happy goldilocks space between a shower and a grower, if you know what I mean. What's there at rest is an impressive enough sight, but there certainly room for growth too. As he so intimately touch Ellen like that, you could clearly watch as a half mongrel developed; it visibly lengthened and arched up, the tip brushing across her thin, blonde, landing strip of pubic hair.\n\n\"Sure.\" And then as Ellen pointed at us, she added... \"You know Liddy's here, do you?\"\n\nNed look our way with considerable surprise and flushed bright red.\n\n\"Ops, excuse me.\"\n\nNed quickly disappeared into the master cabin and closed the door.\n\nI turned to Liddy who had a bemused smirk on her face. \"Why don't we wait for the others in the cockpit?\"\n\nOne by one the others joined us in the cockpit with their breakfasts and Liddy's coffee, Ned dressed in board shorts and a short sleeve polo shirt, the girls both in bikinis. Breakfast finished, we left Liddy momentarily alone in the cockpit while we collected ourselves together for the trip.\n\nEllen emerged wearing the same sundress as Liddy, apologising for the fact while indicating it was her preferred walking outfit. Over my bikini I wore a mini A line skirt with a plunging front crop top. Tash wore a pair of hot pants matched with a loose fitting tie front, midriff exposing shirt that basically left her boobs hanging in their bikini top out the front of it. \n\nPiling into the RIB, we headed down to the head of Faauni Bay where we'd identified a little canal which would take us past what appeared to be some sort of fish farm complex into the heart of Faauni Township. From there we'd start our walk, which was intended to take us up to the Valley of the Kings, then across to Fittiiu Point and back through Faauni Pass to our starting point; with a swim at Fittiiu Point to cool off.\n\nWith the width of the tracks and roads we were using, we couldn't really do much other than walk in a 3/2 or a 2/2/1pattern, with the distance between the front and rear group depending on the walking speed of the constituents of each group. As a slower walker I generally found myself at the back and some distance behind the leaders. Initially Ned, Ellen and Liddy formed the front group with Tash and myself bringing up the rear. \n\nWhat struck me as we followed the other three was how alike Ellen and Liddy looked. With identical outfits and both with long blonde hair, from behind you could actually pass them off as sisters, if not twins. Only their difference in height - Ellen's 182cm while Liddy would be about 177, with the result Ellen's bikini bottoms always peeked out from beneath her dress, whereas Liddy's just gave occasional flashes of hers - spoilt the illusion of identical twins. From the front, you might have picked them as mother and daughter.\n\nTo give her due respect, Liddy made every effort to engage each of us in conversation through the walk. After about 20 minutes, she dropped back to join Tash and myself, Tash taking the opportunity to stretch her legs to move up to the faster group up front.\n\nI must have said something in our conversation yesterday which intrigued her. She'd picked up that my presence in the Pacific was not just a random frolic and that there was something behind it. She gradually turned the conversation back around to our pasts.\n\nI suppose thinking that giving something of herself away would facilitate that, she revealed she'd been widowed at 50; the father of her children dying in a car accident but at least leaving her comfortably off financially. After two years she'd remarried, only to find the apparently charming man she'd fallen for was actually abusive. She didn't put it that way, but she was clearly strong enough not to stand for that. She quickly divorced him; but having obtained enough video evidence of his abuse and manipulation that his attempt to share her wealth failed and indeed, he found himself on criminal charges.\n\nWith her kids going their own way and temporarily at a loss as to what to do with her life, old friends of hers had talked her into joining them on the yacht cruise.\n\nThat of course opened the way for me to talk about my past and it was actually lovely to be able to talk with someone who understood all too well what I'd been through without in any way being judgemental about my slowness to act. The empathy and understanding she showed in the discussion felt all too real and it was perhaps the most supportive discussion on the topic I'd ever had; not least of all because Frank had always been able to turn on the charm for my parents enough that they did wholly believe what I told them.\n\nBut slowly that discussion turned to how I'd ended up on Ned's yacht. And inevitably she very subtly started to probe around the question of the sexual relations on the boat. It wasn't that I wasn't willing to put her out of her misery, it's just I wasn't sure how to blurt out... \"You know we all fuck Ned nearly every day.\"\n\nStill, in ever diminishing circles around the issue, she eventually asked straight out...\n\n\"I noticed you and Ellen sleep with Ned?\"\n\nI decided to answer in a way that laid out the whole sordid story; making it clear a night sleeping with him was rarely merely that.\n\n\"We all take turns. And the one that doesn't get to have sex with him overnight gets private time during the day.\"\n\nHer jaw nearly dropped, even if her voice remained level.\n\n\"So he has sex with each of you every day. How does he manage that?\"\n\nI was tempted to tell her he'd had sex five times last night but thought the better of it. Instead I described how Issie had introduced the concept of 'fuck me' bikinis and other clothing and how that, combined with a lot of flirting and other fooling around, seems to keep what we call his testosterone up. \n\n\"Do you girls actually want sex every day?\"\n\n\"We're the ones who always instigate sex. Ned just goes along with it. He certainly never makes us do something we don't want to.\"\n\n\"But why. I would have thought that's more than most women want?\"\n\nI described to her Ellen's theory of 'the fear of missing out', but as she kept gently and unjudgmentally questioning me, I began to realise my motivation was far more complex than that. Yes, the fact we've each came aboard in a somewhat sex deprived state contributed to it; but you'd think that would burn itself out - as in fact it seems to be with Tash, who's needs don't seem to be as constant.\n\nBut really, as we talked, I came to fully realise how my ten years with Frank had left this giant empty void in my sexuality. The way Ned had linked being loved with intimacy and highly enjoyable sex had made it almost addictive. The void was being slowly filled, but there was a long way to go yet. On top of that, presenting myself sexually and feeling sexy for it, just seemed to make me feel like sex. It was a self-reinforcing virtuous circle if you think having a lot of sex is a good thing.\n\nAt one stage, as I nearly broke up while talking about the contrast between life with Frank and life with Ned, she put an arm reassuringly around my shoulder; making me feel quite close to her.\n\n\"How did it all start?\"\n\nThat of course led me to talk about Issie and how we'd been planning to seduce Ned and of the night it had all just fallen into place and of how when each of Ellen and Tash had later come aboard, they been given the choice of participating or not.\n\n\"I suspect you and Ellen really love him, don't you? And I've seen how he loves you guys in return. I'm not so sure about Tash.\"\n\n\"I think that's probably right. I suspect Tash largely uses Ned for sex. She respects him, even likes him, but she's more emotionally detached and for that reason Ned probably keeps his own emotional distance.\"\n\n\"What about when the trip's over?\"\n\n\"Ned has always said he's too old for us and our future lies elsewhere. He's even encouraged us to have things like 'sleepovers' if we meet someone nice while were travelling about, but none of us have ever done it.\"\n\n\"You don't really want to give him up when you get back, do you?\"\n\n\"Is it that obvious?\"\n\n\"Certainly for you. Maybe for Ellen too. But what about if you want children. Ned's going to be too old to start over being a father again isn't he?\"\n\nI incoherently floundered for an answer.\n\n\"I know. Maybe. That's where a big issue is. I'm not sure how that works out.\"\n\nI think she'd come within a millimetre of having the courage to ask if Ned was allowed sleepovers too; but held back. \n\nLiddy and I had been walking alone for maybe 20 minutes. During that time we'd slowly dropped back from the other three. I'd seen both Ellen and Ned look back occasionally to see where we were. Eventually Ned stopped the lead party to let us catch up. In the reshuffle that brought about I noticed Liddy manage to cut Ellen out form the group and have a long talk with her too before re-joining the party that included Ned.\n\nDuring the course of the morning we manage to find and admire the ancient stone ruins of the original civilisation on the Island in the Valley of the Kings. From there we moved on across the peak of the ridge that runs from North to South on the island and into the little township around the shore of Vairou Bay, stopping for some refreshments at a general store.\n\nFurther along out on Fitiiu Point we looked at an old WW2 gun emplacement before coming to the end of the point itself. Our intention had been that, after a swim here, this would be our turn back point. We moved beyond some cottages and around to the South East of the point where we found a private beach and stripped off for the swim.\n\nIt was as Liddy took off her sundress that I had my final disappointment. In a way my mother had kept her figure nearly as well as Liddy. Maybe she'd put on a little more weight and was showing some orange peel. And certainly her boobs had sagged way more than (what I assumed were) Liddy's implants. But overall, she wasn't that different. But mum's stomach displayed clear evidence of the children she'd borne. Her navel had always struck me as looking like someone had stamped it in with a large dried prune; badly stretched and with its edges flappy and uneven and surrounded by stretch marks, there was nothing left of the neatness of her teenage one.\n\nBut Liddy had escaped even that. Maybe, because I made a point of looking, I could see it had been changed in the course of her carrying children. But you had to look closely and it was subtle. And not a single stretch mark could be seen on the flawless skin of her stomach. Maybe she lacked the prominent mons that Ned found so attractive in me and there was a general outward curve to her stomach rather than a plank flatness. But she had a better figure than most of today's crop of 30 year olds and I was having a lot of trouble coming up with the distinguishing feature that would make it clear to Ned that younger is better.\n\nJust off Fitiiu Point a narrow deep channel stands between the point and the shallow lagoon that forms part of the outer fringe of the reef. Out in this lagoon is where you find some of the postcard sights of the Island like the resorts with their rooms stretched out on pylons over the water.",
        "With the tide being low, we could see that once you swam across the deep channel, there were large patches of coral sands interspersed in the shallow water, which made it look like an interesting place to explore; right across to the resorts on the ocean side.\n\nThe channel looked like it was only 70 meters across at its narrowest point and it was Ellen who suggested we swim across. Ever the cautious one, Ned expressed some concern about currents and wildlife, looking at Liddy to see what her view of the matter was.\n\nLiddy indicated she was willing to follow the others, being a strong enough swimmers to comfortably go the distance. It was Tash who broke the impasse by offering to do a test swim. As a former squad swimmer, she was easily the best and she already amply demonstrated an endurance that made the proposed crossing look like a mere stroll. Wadding in, she quickly crossed to the other side, finding little in the way of a current and enough sand areas between the coral to make walking safe. \n\nSo Ned repacked our towels, his wallet and our reef shoes into his waterproof bag and slung it over his shoulder, the remaining four of us leaving the second bag with our clothes hidden in bushes on the beach and swimming in a group over to rejoin Tash. From there we started to pick our way across the lagoon shallows; walking, wading and swimming as the need took, all the time heading towards the ocean side.\n\nIt's at times like this Tash's more playful nature tends to come out. I think she gets bored just going from one place to the next, whether that's swimming or walking, and wants to introduce some horse play into it. Ellen and I were wading side by side thigh deep across a section of the lagoon when Tash came rushing up from behind and did a flying tackle which took both our knees out and left us squealing as we fell face down into the water.\n\nIn these situations, Ned thinks he can just stand back and play the adult while the kids play; in this case while Tash struggled to stop either of us from getting up. Which is of course the last thing Tash will let him do. Reaching out she grabbed the waistband of his swimmers, offering him the unspoken choice of surrendering to her pull and been drawn into the wet melee or being dacked. The front had been pulled down and his cock was already half way out of his pants before he gave into the former, landing face down on Ellen and myself.\n\nWhile Ned struggled to extract himself without pushing either of us under, Tash grabbed the bag off his back, stood up and started running across the shallows, looking back at Ned as she teased him...\n\n\"Come and get your bag.\"\n\nShe'd only covered a short distance into shallower water and was still looking back when her progress was halted by an unexpected intervention as Liddy gave her a full on flying football tackle before struggling with her over the bag.\n\nCaught by surprise, as Tash lost her grip on it, she could only mutter... \"What the...\"\n\nShe heard Liddy mutter in her ear... \"I used to practice football with my kids.\"\n\nBy that stage Ned had got up to chase down his bag, his intended understated intervention suddenly turning physical as Ellen and I tackled him onto the top of the pile already formed by Liddy and Tash. Somehow the game turned into one of Tash, Ellen and myself against Ned and Liddy' everyone trying to grab the bag away from the melee.\n\nNed's moment with the bag came to a sudden halt as Ellen and I pushed him onto his back and sat on him; me on his face, Ellen over his crotch, to remove it from where his hands held it between us. I'd managed to get it, but as I stood up to run away I suddenly found Liddy straddling Ned between me and Ellen, grabbing at it. The triangle over her right breast had been pulled aside when she'd tackled Tash and it was now fully exposed.\n\nMy focus momentarily transfixed by the sight, as I noted it was as uniformly tanned as the rest of her and I desperately scanned the underside of it for a surgical scar, she managed to wrap her arms around the bag, holding it close to her. We both sunk down, each trying to pull it out from under the grip of the other, until she was squatted over Ned's chest and I had the top of his head pressed firmly into my crotch. That let Ned intervene, pulling my arms away to leave Liddy with the bag, her body curled over it on top of Ned.\n\nLiddy started to squirm forward; almost crawling on her elbows over Ned and my legs as she kept the bag under her curled up torso, trying to escape with it. I heard Ellen, still behind her, simply say...\"No you don't.\" With that Ellen grabbed Liddy's ankles, pulled her legs out from under her and back along Ned's torso; leaving Liddy sprawled flat along it, the bag still wrapped in her arms under her.\n\nReleased from under the pressure of other bodies I stood up to find a somewhat displeasing sight. When Tash had first pulled down the front of Ned's swimwear she'd - intentionally or not didn't matter - released the drawstring knot. As she'd let it go, the waistband had snapped back against his torso very low - just above the base of his cock, creating a loose fold at the front into which his cock had dangled. With all the girls fooling around on him, he'd grown a bit of a mongrel; probably enlarged to full size by Ellen sitting on it. But trapped as it was in the fold, it had grown outward into what we girls call a \"full horizontal\"; although since he was lying on his back, that actually meant it was vertical. \n\nWith the drawstring loose, his erection had lifted the waistband up, fully exposing the base and half the length of his hardened shaft. Had that been on the yacht with just the three of us fooling around with him, that would have been great. But as Ellen had slid Liddy back along Ned, her progress had been stopped as her crotch came up against Ned's vertical shaft. Now as Tash joined Ellen in bending over Liddy to try and get the bag out from under her, the movement of Liddy body meant Ned's shaft was rocking back and forwards as his naked hardness was rubbed against the gusset of her bikini. \n\nI watched as time and again Liddy's bum rose and her crotch slid up along his shaft and dropped again. The contact was firm enough that each time the hardened length of his shaft was pushed down towards his legs, springing back as her stomach dropped back onto Ned's torso, her bottom dropping to start the cycle again Each time the waistband of his heavily stretched swimmers was pushed further up his shaft until only the top third of its length was still covered, his balls bulging out of the extended leg hems.\n\nI looked to see if Liddy was doing it deliberately. But her movements were perfectly synced with Tash's almost violent jerking of her to get the bag back.\n\nAnd with Ned's arms helping Liddy retain the bag, the fight for the bag was at a standoff, and his shaft just kept rocking and rocking.\n\nTash's competitive instinct was up and I could tell she wasn't going to let this old woman get the better of her. Moving over Liddy shoulders, she put her arms under them and physically lifted Liddy into a squatting position, exposing where her arms were wrapped around the bag; which would have been good for the competition except for the fact that now left Liddy's gusset sitting over Ned's mouth, her shins pinning Ned's arms under them. With the water just deep enough that Ned had to lift his head off the sand to breathe, Ned had little choice but to keep his mouth pressed firmly into her crotch as Liddy was lifted up and down by Tash and Ellen in the struggle for the bag. And all the while I could see his eyes transfixed on her naked breast with their now jutting hardened nipples; supplemented as her left one was also fully exposed in the tussle.\n\nAll of which sort of me standing by basically watching the girls sort of help Liddy rape Ned; or was it the other way around?\n\nWith Ned no longer able to assist because his arms were pinned under Liddy and eventually overpowered, Liddy was forced to surrender the bag to Tash, whose dash with it was brought to an end as Ned finally brought his strength into play. Released to get up off his back, over 50 meters he ran her down, his erection bouncing amusingly as he ran, high stepping through the shallow water, while Ellen, Liddy and myself in turn pursued him. Catching Tash, he lifted her off her feet as he grabbed her around the waist with one arm, the initial swing of her body bringing his still horizontal erection up between her legs. With the other hand he pulled the bag out of her grip. Then he simply held it in the air, using his height to place it just out of easy reach.\n\nMobbed by four girls, three of whom were jumping up trying to get the bag, Ned just stood there impassively. Tash tried to get him to exchange the bag for his modesty; first exposing his erection, then playing with it and finally pulling his swimmers down around his ankle where Ned was forced to step out of it to avoid being tripped over. Ellen all the while was using her height to try and jump up to get it, until Liddy tickled her into a curled up submissive ball.\n\nI just kept to the outer circle of the tussle; observing more than participating; my only contribution being a few pathetic jumps. Ned wasn't the only one exposed. Tash had all but lost her top in the first tackle as it dangled loosely by the neck string covering nothing. That was normal for Tash. With breasts her size covered by the tiny tops she wears, they were often exposed in our games.\n\nEllen too had one breast out of her top and her pants dragged so low you could see through to the underside of her mons.\n\nBoth Liddy's triangles has slid across and were now bunched up uselessly between her breasts and her pants dragged low enough by Tash to expose a small landing strip of pubic hair. Still I studied the perfectly shaped, brown skinned, orbs, looking for the telltale scars. Now completely exposed and unsupported, I suppose you'd say there was some droop; maybe just enough to hide the scars in, but there wasn't much. I don't know how implants behave, but I'm sure natural ones can't sit up like that in someone in their fifties.\n\nAnd yet I'd found my attitude to Liddy softening; as was my desperate need to find some flaw in her appearance. I'd come to like the person, liked the way she'd joined wholeheartedly in our game, even if I hadn't been comfortable with everything I'd seen, and admired someone who can look like her at that age. But most of all, I had actually enjoyed our conversation. I think she'd got the message Ned wasn't available for any immediate bedroom antics, whatever fun she'd just had with him. I couldn't exclude any post cruise intention of a serious catch up. I'd accepted our departure from Bora Bora wouldn't signal the last time we'd see her. Unless I was misreading both her and Ned's behaviour towards each other she was going to keep popping up as our respective yachts weaved their way across the Pacific to Sydney.\n\nShe clearly wasn't concerned about showing her tits to Ned; although the fact they were uniformly tanned suggested bare boobs were no big thing for her. And the fact that Ned was standing there with a fully exposed erection was hardly putting a premium on modesty.\n\nNed called a halt to the shenanigans by suggesting we make our way over to the nearest resort to see if we can get a drink at the beach bar; on him.\n\nAn hour later and we were swimming back across the channel to where we'd hidden out clothes to start the walk home. Liddy had got us to agree for her to take us to dinner at the club at her expense, since their yacht was sailing in the morning. Normally Ellen and I don't find ourselves together in these walks because she's a fast walker and I'm a slow one; so if there's two groups, she's out the front and I'm behind. But this time I found Ellen had maneuvered herself into being my walking companion. I had a fair idea why.\n\nAs we watched Ned, Liddy and Tash walk ahead. Liddy's wet red bikini had caused her suntop to become transparent so that the bikini showed brightly through it as she brushed alongside Ned. It was Ellen who raised the topic.\n\n\"What'da think?\"\n\nShe didn't need to elaborate. I knew what she was talking about.\n\n\"I don't know. I like her, but I'm not comfortable with it.\"\n\n\"Same here.\"\n\n\"Why did you impale her on Ned's cock?\"\n\n\"What'da mean?...Oh that. I wasn't thinking; got a bit caught up in the game. And then Tash came along with her intense competitiveness and what should have been a momentary contact became more like Ned being raped.\"\n\nWe fell into silence for a moment, before I expressed my ultimate fear...\n\n\"We haven't seen the last of her have we?\"\n\nEllen put her arm around my waist. It was an unusual feeling. I mean, she's had her fingers up my pussy with some of the threesome antics we get up to when the two of us are with Ned, but this was an altogether different contact. More sisterly. I reciprocated.\n\n\"No, she's going to keep turning up like a bad penny. Is it Ned having sex with her that worries you?\"\n\n\"I don't think that's really it. More what the sex might lead to. She's too nice. Too pretty. Ned's so animated and relaxed when she's around.\"\n\nI hesitated before admitting to someone in our group for the first time the truth that Liddy had already sussed out.\n\n\"I'm not sure I really want to walk away from Ned when we get back to Australia. But if she's around, Ned may not give me a choice.\"\n\nEllen moved her arm up to my shoulder, where she protectively drew me into her.\n\n\"I know what you mean. I have the same worry. I want to dislike her, but I can't. Do you know she's a doctor too? And so was her deceased husband. I really enjoyed talking to her, but I don't want her to take Ned away either.\"\n\nI thought I detected in Ellen's answer the same reluctance to give Ned up when we got to Australia. That surprised me, even though I well understood she was strongly attached to him.\n\n\"Are you saying you don't want this to end with the trip too?\"\n\n\"I want to leave the issue open.\"\n\n\"Have you thought of having children with him? You know Issie did.\"\n\n\"He might have a say in it. He's not going to be a young dad. And even though he offers pretty nice genetics, you know that men's sperm starts to get the same problems as older women. The risk of some defects increases. But that's not to say I hadn't thought about the issue. As I think have you.\"\n\n\"Yes, I've wondered about it. I suppose it's the big issue with staying with him after we get back. I just don't have an answer. Especially when the biological clock starts ticking. But I don't want the question answered for me by Liddy either.\"\n\n\"Even if it lets Ned find a more lasting happiness?\"\n\n\"That's what makes it hard isn't it. Mind you, we're presuming an awful lot. They've only known each other for a day. And we don't really even know what Ned thinks of her.\"\n\nThe rest of the walk home went pleasantly enough with the usual changing of walking partners along the way. Liddy made a point of spending some time with me and somehow the conversation circled around again to deal with abusive partners; especially when they have the knack of appearing so charming to everyone else in the world. And that was the thing with Liddy. She seemed to understand people and knew what they needed to talk about and get out of their system.\n\nBut she did raise one thing that left me thinking when she told me that recent research indicated that abuse survivors often suffer Post Traumatic Stress Disorder. As these things do, it left me wondering whether I did. I didn't think so. I don't suffer nightmares or reliving the past. But hell, I wasn't sure I wanted Ned knowing about that. If there was the slightest suggestion he was exploiting me when I was vulnerable he'd close down our sex life and put distance between us and that was the last thing I wanted.\n\nThe day had been a longer one than expected, so by the time we were back at the yacht, it was already time to move into getting ready for dinner mode.\n\nWe all just grabbed our going out clothes from the yacht, so that the act of dropping Liddy in the RIB back at the yacht club marina where her boat was berthed, also became our one of going to the club facilities for another shower and spruce up for the evening. Long hot showers are a rare luxury on a yacht and an opportunity for one is never missed.\n\nWe were still setting up to enter the shower booths when Liddy joined us, already stripped down to her bikini; towel, toiletry bag and after clothes draped in a cloth bag over her arm.\n\n\"Sorry ladies. The owners were lining up to use the yacht's shower. I thought it would be quicker if I came down here.\"\n\nThe shower booths themselves were private - in the sense they had a door - but were so small and wet after your shower that drying or getting dressed in them was a joke. We'd discovered last night that, unless you had some serious modesty inhibitions, it was easier to abandon the booth and dry and get dressed outside it. Indeed, because we'd overindulged in the 'hot' part of the shower, in the steamy climate of Bora Bora, it was actually nice to stand around naked to cool back off before getting dressed.\n\nThe previous evening, with just the three of us girls in the area, we'd stood naked as we brushed our hair and put on our make up before we'd finally got dressed.\n\nWith Liddy as the only other person tonight, I didn't feel any need to go all prudish, so followed the same pattern; as did the others. Liddy emerged from her shower with a towel wrapped around her; it being insufficiently wide to properly hide what emerged from either the top of bottom of it. Seeing us standing around naked as we dried ourselves, she quickly followed suit; letting me suss her out as she stood their completely naked.\n\nIt seemed like she had some really tiny pair of bikini pants that she sun bathed in; some sort of thong that covered little more than her pussy and a small triangle of her mons; because the rest was a uniform tanned brown. She had a shaved pussy with just a small landing strip of pubic hair left. That intrigued me enough to ask her about it.\n\n\"Ned's always said his generation didn't go for shaved lady parts. Bush was meant to the good.\"\n\n\"My second husband talked me into it and I was silly enough to comply. I didn't want to deal with the itchiness of shaving or even waxing, so I had it lasered. Which is a pity, because now I regret it.\"\n\nStill I couldn't see any sign of surgery scars under her breasts, although completely unsupported as they were there was enough sag that they may have been hidden in the fold. Nor could I see any orange peel; damn it. \n\nAs we got dressed, I was a bit dismayed by her outfit for the night. Ellen, Tash and I were constrained by the fact you only carry a limited wardrobe on the boat. We all had on the same clothes as the night before.\n\nLiddy's dressing started by donning panties in the form of tiny, red, string sided hipsters.\n\nAs for the dress, I'm not sure if you'd call it a party dress or a proper dance dress. In some sort of finely woven, sparkly, red spandex, it had a string halter neck which supported two small triangles covering (or partly covering would be a more accurate description; and not a very big part at that) her breasts. They merged with a sheath bodice, deeply plunging almost down to her panties at the back, where it was laced up tightly on her. And the tightness of her bodice simply highlighted the impressiveness of the breasts that sat jutting above it.\n\nFrom the hips down the dress flared, the light folds of material draping rather provocatively over her butt and even somehow highlighting her mons. And it was short; leaving two thirds of her thighs exposed.\n\nWorn braless, her nipples were obvious even in the warmth of the club when she hadn't been aroused by dancing with Ned. And when they were up? Well, the effect made you wonder why she bothered covering them at all, given the detail which was discernible through the material.",
        "But, with the same band playing as the night before, the real challenge came when she danced. As Ned threw her into spin turns, the flare of the dress spun out horizontal, completely exposing her panties up to the waistband. In a way I was glad that, being so close to her, Ned was probably the only guy in the room who couldn't see them. And you could see by following their eyes, the rest could certainly see them!\n\nWatching her dance with Ned left me with a strange mix of awestruck admiration for the beauty of their dancing, jealous rage at the competitive advantage it gave her and the absolute, panty wetting, hots for the man dancing so beautifully with her. \n\nPerhaps the only good thing was that she'd drew enough attention that other guys started to hit on her. When Ned was dancing with Ellen or me, she'd often get approached for a dance and accepted more than a few; although none of the other guys could dance her as well as Ned.\n\nMaybe the jealously momentarily took control when, after two successive waltz numbers where she was dancing with her thighs interlocked with Ned's and their bodies rising and falling in a way that gave her every opportunity to brush her pussy on his thigh, she did a spin turn near our table that I'm sure disclosed her panties had a damp patch through the gusset. I mean, she's post-menopausal; meant to be as dry as a desert in a drought. And those bloody headlight nipples kept brushing against Ned's chest as she span into him.\n\nBut for the most part my night was a rising tide of arousal; not just watching Ned dance, but dancing with him. Compared with the night before, my feelings about Liddy were becoming more calm and sanguine; notwithstanding a few issues about her dress, nipples and damp panties. And that actually meant when I was dancing with Ned I was getting into the joy and excitement of doing that, instead of trying to make a point. \n\nOutwardly I might have looked the same when I was dancing with him; alternating between girlishly, flauntingly, seductive and body drapingly close depending on the speed of the music. But now my brain was focused on seducing him, not pissing off someone else. And when I was up close and personal in the slow numbers, the erection I was inducing in him was for my pleasure - then as I rubbed myself against him, and in contemplation of later in the night as I did a lot more than that - not as visual evidence he was screwing a girl half his age.\n\nIt turned out there was a cruise ship in town, because Liddy wasn't the only one being hit on. Compared with the night before, the room quickly became a lot more crowded and had a complete buzz about it. Soon, I wasn't even given a chance to sit down; indeed none of us four girls - yes I'm willing to include Liddy in that - were allowed to.\n\nI suppose it was the first time since I'd met Frank that I really had the chance to cut lose and flaunt myself - completely and fairly outrageously really - in a room full of guys. There's no other way to describe it; I was in an absolute prick teasing mood. Guys would see me dancing with Ned and assume I was an easy target; only too keen to get away from the old guy and into their arms, and they thought, their bed. And I'd give them a dance and flirt, flaunt, flash and drape myself at and all over them, enjoying their youthful bodies and the general press of their male flesh and how easy it was to induce an erection in their pants.\n\nAnd as much as I got high on it and felt a rosey glow, as much as it did wonderful things for the feminine side of my ego as I had this sense of being mobbed my attractive young males who clearly fancied me, it all only made me want Ned more. The guys were nice enough - most of them anyway. But not once did I think...\"I could go for him.\"\n\nI was just using them to have fun and feed my ego. I hope they enjoyed it; after all, not every girl's going to dance with a stranger as provocatively and intimately as I did with them. But if they were looking for an easy lay, as I made clear in the nicest possible way as I left them, I wasn't going to be it. Not for them anyway. I was warming myself up for someone else.\n\nWhat it made me realise - for better or worse - is just how much I really did love Ned. There was no shortage of attractive appropriately aged males and I had a ball in amongst them. And yet, not for a moment did I lose focus on where Ned was nor cease to be physically and emotionally drawn to him, even from the furthest reaches of the room. I savoured every moment of the night and yet it was one long foreplay to the orgy of sexual indulgence I wanted to share with him back on the boat.\n\nFortunately for me, Tash had already declared an intention to play around a bit that night. Ellen and I had reminded her of the condom rule if she didn't want to be relegated back to having to use one with Ned. After all, it wasn't just Ned exposed if she didn't use one, it was us too.\n\nBut the fact she was originally scheduled to share Ned's bed instead of me wasn't going to be an issue; she wouldn't even be on the boat. Did I wish Ellen would have followed Tash's lead? Not really. I was used to sharing Ned with her and her presence didn't detract from the quality of the sexual indulgence. Indeed, it was perfectly capable of enhancing it. But when I spoke to her, it was clear she was in a similar position to me; having a ball but looking forward to spending some carnal time with Ned at the end of it.\n\nLiddy? Well she could dance with him all she wanted, but we knew from the outset she wasn't coming back to the boat and Ned was. Ultimately that's all that mattered. In any case, towards the end of the night, while she never stopped looking to Ned for dances, it appeared that one of the many men she attracted the attention of with her pantie displays might be in for an interesting night as he increasingly dominated her time.\n\nBefore midnight Ellen and I decided we couldn't wait any longer. We had the hots and we needed Ned to satisfy them. Grinding our crotches against him on the dance floor wasn't enough any more; indeed was only making it worse.\n\nTo compound our problems Ned's dancing with Liddy had attracted the attention of every woman in the room. The middle aged US socialites from the cruise boat wanted to use him to show off their own dancing skills and even the younger ones wanted a piece of him because he looked so good on the dance floor.\n\nWe baled him up in front of Liddy, pushed both our bodies into intimate contact with him and said it was time to go.\n\nTrish declined to come; indicating she'd look after herself, even in the light of Ned's concerns about how she'd get back to the boat before morning. It wasn't so much that she wasn't entitled to stay out; more that the guy she was staying with couldn't get her aboard the ocean liner he was on, leaving her no comfortable alternative. I'm sure she could have brought him aboard the yacht; but Tash didn't seem to fancy doing that. What Ellen and I were clearly about to do to Ned may have had something to do with that.\n\nLiddy gave Ned a full contact body hung and sloppy lip kiss; indicating she was sure they'd cross paths again soon enough. Ellen and I didn't doubt it. Then she walked him to the door for another hug and kiss.\n\nNed walked back down the jetty towards the RIB with an arm around and patting the butt of a girl half his age on each side of him; amusingly raising the eyebrows of a few people out strolling along the jetty that we went past. If I'd had him alone I would have happily straddled his lap with his cock up my pussy for the trip home. I was that ready for him; the bouncing of the RIB through the waves providing an interesting experience. But I didn't have him alone and Ellen was feeling no less a desire for physical contact than I was.\n\nOnly the need to balance our weight across the RIB so as not to capsize it stopped Ned from having two girls dry humping him as he steered the boat. That maybe and the fact we had to go past the crowded and well-lit cruise boat terminal to get to the yacht.\n\nBut still, as we sat opposite him in the RIB, each of us was rubbing a foot up and down the length of his erection as it towered up in his pants for virtually the whole trip. As we came alongside the swim platform of the yacht, Ned, as he always does for us, held the RIB tightly against the platform as we got off. \n\nWith Ned's hands fully committed to holding the RIB in place there was nothing he could do as Ellen, getting off first, straddled his head with one foot on the yacht and the other on the thwart of the RIB, grabbed his hair and brought his nose under the hem of her dress; rubbing it into the crotch of her panties. A bit jealous that she thought of it first, , all I could do was playfully imitate her as I followed her off the boat; allowing myself a bit more time than she did to enjoy the play of his nose through my crease and against my clit.\n\nNo sooner had he followed us onto the platform than Ellen was undoing the belt buckle on his pants while I worked down the length of the front of his shirt undoing the buttons. Maybe concerned about being stripped naked on the open deck, he somehow pushed us through the cockpit and down the companionway. It was in the galley that he lost all his clothes; with me peeling his shirt off and Ellen kneeling down to drop his pants and boxers all in one go. As I wrapped my arms around him and kissed him while Ellen licked his cock while she was down getting his pants over his feet, I told him...\n\n\"Go the animal on both of us.\"\n\nTo which Ellen added...\"At the same time.\"\n\nNed was momentarily flummoxed. \"How do I do that?\"\n\nEllen wasn't going to offer any detailed instructions. \n\n\"Wing it. We've had your cock hard for half the night. Just let it and your lust call the shots.\"\n\nThere was a moment's silence, and then she added...\n\n\"By the way, don't forget the rule.\"\n\n\"What rule?\"\n\n\"If I pass out.\"\n\n\"You're not going to do that again are you?\"\n\n\"Maybe, maybe not. Either way, just keep going. You've got no idea what that next orgasm's like when you do.\"\n\nHe dragged Ellen to her feet and backed us up the additional two paces into the master cabin until she and I were standing side by side. He was in such intimate contact with us and I could feel his manhood pulsing so anxiously that, for a moment, I thought he was just going to back us up against the bulkhead and hammer us both unmercifully into it; still in our dresses or not. \n\nInstead he put a hand under the hem of each of our dresses and pushed two fingers against our wet panties and deep into our creases where he played it against our clit for a few moments before he bent down far enough to bring his whole forearm under the dresses, his hand caressing up along our stomachs as the inside of his elbow lifted the hem.\n\nHis hand continued up our torsos, dragging the hem of our skirts with it, until it cupped a braless breast. With his fingers tweaking our nipples, he moved his elbow out sideways, continuing the lifting of our dresses. With its side splits, mine lifted readily. But I sensed from Ned's momentary distraction that Ellen's wasn't being so co-operative. I looked across to see that it had drawn in against her butt and caught there.\n\nWithout missing a single tweak of each of our nipples, Ned simply angled the elbow up Ellen's dress more around her back to unhitch it, letting him bring both elbows up to the horizontal and exposing both of us from the breasts down. From there, in one action he grabbed the back of both dresses and lifted them over our heads; dropping them on the floor to let him immediately slide a hand, palm inward, down the front of each of our panties.\n\nI moaned a little as he stroked his fingers along my clit; noticing Ellen bend her knees quietly to the same pleasure. Then he slipped his fingers through my crease and tested the receptiveness of my sex; finding it more than ready for him.\n\nIn a single action he dropped the back of his hands to the floor, taking our panties with them and using the lowered position of his head to have a suck on my nipple as he let us step out of the panties. In less than 30 seconds we'd both been stripped naked even as he'd touched us up all over.\n\nHe bent down and lifted me up in a cradle position before half throwing, half dragging me on my back into the centre of the bunk, pulling Ellen onto the bunk too as he knelt on his haunches between my legs. Unceremoniously he dragged me by my legs until my bum was up over his thighs, bending his cock down until it sat just inside the opening to my sex. In a single movement, he knelt up, supporting me under my bum just enough that the forward thrust as he rose into an upright kneeling position skewered the full length of his hardened manhood into my sex. I let out an audible gasp; half shock, half pleasure with the determination of it as I was left hanging off his cock like that with my hips raised in the air. \n\nThe next moment the hand under my bum was gone as I watched as he pulled Ellen around to make her stand in front of him, so that her feet straddled my chest, her head bent over his, since there wasn't enough headroom in the cabin to stand upright on the bunk.\n\nWrapped around his hips, my feet were just managing to reach the bunk to take some of the weight off his shaft and my shoulders in supporting my elevated position.\n\nWith the curve of Ellen's body, Ned had to lean forward for his mouth to reach Ellen's crotch. It seems like it was right over me that Ned spread apart the lips of Ellen's crease with his fingers and I watched his tongue emerge from his mouth to flick at her visibly engorged clit. In the next moment he shoved a couple of fingers up her sex and I could see him rapidly thrusting them in and out applying pressure to her g spot.\n\nAs he was initially playing around with Ellen he'd been gently rocking back and forwards just enough to move his shaft inside me. With Ellen set up, it seemed like Ned's mental attention turned back to me. He jerked his hips in a single rapid back and forwards movement that withdrew half the length of his shaft and thrust it back in; heavily raking against my g spot and crashing his pubis against my clit as he grunted with the effort.\n\nI gasped again and let out a little cry at the intensity of the sensations it generated; overwhelming pleasure but mixed with something else that might be called discomfort, maybe pain.\n\nSatisfied with the effect of that first thrust, he did it again and then again until it became a fast, continuous, hard thrust and withdrawal of his shaft into my sex; each time massively stimulating my g spot and massaging my clit.\n\nAbove me, I could already see Ellen's thighs had started to quiver; her body tensing and her breath growing shorter and hypoventilated like she does when she's getting really sexually excited; her juices starting to drip onto my chest.\n\nBut as my own arousal grew, I found myself having trouble staying in full contact with Ned. As he'd initially dragged me on the bed, he'd pulled up the corner of the bed covers, leaving me resting on the sheets and him with his knees on the underlying cover of the bunk cushion. Now every time he thrust hard into me, he was propelling me back a short distance; the sheet bunching up under me.\n\nOn his knees, with his hands full as he sucked and finger fucked Ellen (or was it more a case of Ellen being full of his hands), initially he was having to throw his hips further and further forward to produce the same crashing termination to his thrust. That was unsustainable and he soon had to shuffle his knees forward, pushing Ellen backward; no easy task when she was nearly rigidly tensed up on the verge of an orgasm.\n\nThe stimulation of my g spot was intense, more so after he repositioned and every thrust was delivered with its full force. Settled for a moment, building to an orgasm, I remembered I'd wanted to try and imitate Ellen's hypoventilated breathing to see if I could get the same magnification of my climax. She does it spontaneously; I had to work at it, taking short shallow breaths and trying to breathe out more than in.\n\nI was just starting to feel a bit light headed when it exploded...\n\n\"OOOohhhhhh my god, fuuuuuuuucccck, aaaaaaaahhhhhhhh...oh...aaaaaaaaaahhhhhh\"\n\nIt was so powerful, so mind blowingly intense, it was unlike anything I'd experienced before. It just went on and on. As I'd thrown my hips up as it had burst, Ned had rammed home a massive thrust which had thrown me further back with my head now raised up against the sloped side of the boat. \n\nWith his shaft now only half buried on full thrust, the tip of his cock was raking unrelentingly with full pressure against the shallow location of my g spot, prolonging this almighty orgasm and causing me to scream out like I'd never had before; moaning and groaning and crying out as if begging for mercy when I wanted nothing of the sort.\n\nNed might have moved further forward again, releasing the intensity of the stimulation except for the fact a moment after I came, so did Ellen, breathing out a long soft moan as she curled over Ned and squirted copiously over his hand and down onto my tits. With Ellen frozen in place by it, Ned was left jerking his hips in my direction, the end of his hardened cock banging again and again at my g spot.\n\nAs Ellen's climax relaxed a bit, Ned pushed her forward again, again burying himself fully at the end of each thrust to the extent I found my head banging softly against the overhead locker every time he crashed against my pubis.\n\nBut now Ellen was seriously hypoventilating as Ned continued to suck and hand fuck her. You could hear her moans; shallow, repetitive, barely breaths at all. All the while you could tell she was building to another climax. The quivering of her thighs was becoming so extreme it felt like the whole bunk was shaking. That just seemed to spur Ned on to finger fuck her harder and faster and that somehow seemed to translate into how hard and fast he continued to fuck me.\n\nEllen's no screamer, but like this she starts to vocalise; short sharp moans with every thrust of his hand which as it keeps building turns into a staccato, machine gun like stream of hypoventilated grunts. She was clutching Ned's head like her life depended on it, wrapping him up so tightly I was surprised he could breathe.\n\nThen she tensed rigid and let out, what for her, was an enormous cry. I watched as her knees buckled. Ned must have been expecting it, because immediately he wrapped both arms around her butt; letting her torso slip in a controlled way through his grip as she collapsed kneeling onto the bunk over me. From there he directed her limp form off to the side until she was laid out flat on her back on the bunk; only her right lower leg across mine.\n\nFrom the elevated position of my head, I could see her eyes were open, but rolling and unfocused. The rise and fall of her chest told me she was breathing normally again. But I was still surprised by what Ned did next.\n\nWithdrawing from me just as I was building to another orgasm, he knelt over Ellen straddling her thighs. Leaning over her, he penetrated her, an arm around her back lifting her butt a bit to give him a better angle. Her breasts wobbled as he started pounding her; hard, fast continuous thrusts.\n\nNed's done this to me when I've asked him to go the animal, but I'd never really watched from this angle as he unleashed himself on one of the others to quite the extent that Ellen was being hammered. It was arousing just watching him in full flight like that; the side view I had letting me see how Ellen's semi limb body was being pushed around like a rag doll. But he must have known what he was doing. I desperately tweaked my own nipples, trying unsuccessfully to find that one more orgasm that Ned had left me on the verge of.",
        "Ellen's eyes had stopped rolling but were not entirely focused either. Her previously relaxed face started to tighten, as If something was developing deep inside her; something she hadn't yet grasped the implications of. \n\nWith a sharp intake of breath, followed by a mighty cry, she climaxed again; the almost surprised look on her face a contrast to the way her body tensed and arched, pushing Ned up. As her hips sat there suspended off the bunk by the arch of her back, he gave some final thrusts, propelling his manhood repeatedly in and out of the warm slippery tunnel of her sex.\n\nA little \"No!\" escaped me as I thought Ned was about to unleash his seed into her. Having been left mid orgasm, I wanted what she'd just got; some full body contact pounding to finish me off and I wanted his seed in me. It was my turn. Ellen had got the last dump this morning. This one was mine.\n\nThe 'no' attracted Ned; maybe just in time. He looked my way and I gave him a little coquettish 'come here' with my forefinger to which he replied with a wink.\n\nHe withdrew from Ellen, leaving her still heaving out the last of her orgasm before she slipped into a petite mort and turned back to me; pulling my legs down to lay me back out flat again and pushing her leg out to the side. Lifting my head up, I watched as the tower of his manhood, glistening with all the juices that Ellen and I had left on it, dropped between my legs, felt it as its full length and hardness effortlessly entered my body.\n\nLike he had with Ellen, he put a hand under my butt, lifting it slightly off the bunk, opening up a bit the angle of his thrust and pushing his shaft more firmly against my g spot. Then he started; hard fast thrusts that soon had my head banging against the side of the boat again. I know how Ned likes looking down at my breasts as he's pounding me; more so if they're wobbling. With most of my weight on my shoulders, it was easy for me to let my body rag doll to the pounding and have my breasts wobbling around like a plate of jelly on a corrugated road.\n\nI teased my own nipples up to jutting peaks, just to add to the visual effect and because playing with them has such an arousing effect on me too.\n\nThe orgasm that had been toying with me all that time soon broke; all the more powerfully because I'd been so aroused for so long. My cry was more a scream; completely unfiltered in the throes of my passion and accompanied by a string of profanities that would shock a whore. I squirmed and bucked under Ned, but he just kept pounding me, never letting my orgasm settle down, it just went on and on, wave after wave of it.\n\nAnd then just when I thought it was over, just when I thought I couldn't take any more, he pushed me into another climax and the cycle repeated itself.\n\nBut Ned too was starting to show signs that he couldn't hold it any longer; or maybe just didn't want to. He was grunting in the way he does when his thrusting turns from pleasuring me to pleasuring him; fast slippery thrusts, no longer looking for maximum g spot or clit contact. You could tell his excitement was boiling over. His eyes were fixated on my breasts as I wobbled them around.\n\nI squeezed him within me and in two more thrusts he was gone; throwing his head back to release an almighty groan; banging his rigid manhood in hard as his ropes of seed flooded against my cervix. And then as all energy drained from his body, he collapsed on me; shuddering and shaking as he was wracked by little mini after climaxes.\n\nHe was left panting heavily against the side of my head, his body sprawled over me, his cock still captured by my sex. I wrapped my arms around his neck, pinning him there. He worries about crushing us and usually wants to roll over at this point. I was just worried about him escaping. I wanted to prolong the intimacy of the moment, keep his body in contact with mine and his still rigid cock within me for as long as I could.\n\nBy now Ellen had sort of recovered and wanted a piece of the cuddle. She lay down close alongside us and extended an arm over Ned's back. Still face down, Ned put an arm over her in return but as long as I kept his manhood within my sex he couldn't redistribute his weight and the intimacy of his contact to share it more equitably between us. And to the extent I had any control over the matter, I was in no hurry to release it.\n\nNed was obviously completely and utterly spent. We'd asked him to go the animal on both of us and he'd fully complied and performed with flying colours, but the effort would have drained a man half his age. The real surprise was that he'd held back his release for as long as he did; but that might have been a function of the amount of sex he'd had in the last 24 hours.\n\nStill, he was in no hurry to move. Even after a performance and climax like he'd just experienced, his cock had to soften eventually and it dutifully did; effectively shrinking its way back out of me in a manner beyond my control. But still Ned just lay there; eventually squeezing himself down onto the bunk between Ellen and my closely pressed bodies.\n\nEllen and I were both clearly feeling the effect of the oxytocin or whatever other hormone it is that floods your body after that sort of love making. We both kissed and preened at his prone, face down body as if that would somehow restore his energy to him; all while whispering flattery and admiration of him and his performance into his ears. Ned hummed in appreciation while disclaiming any excesses of praise we offered him, but no amount of attention was able to restore his strength.\n\nEventually he found the energy to turn face up whereupon Ellen and I cuddled up next to him, running our fingers down his torso and even teasing his cock up into a new erection. But to have tried to have used it would have been asking too much.\n\nWe drifted off to sleep like that until I was woken at about 3 am by the sound of splashing near the transom; soon followed by the sound of someone lowering and climbing up the stern ladder onto the swim platform.\n\nThere are some places that yachts like ours are in danger of being boarded by malevolent parties during the night, but Bora Bora isn't one of them. I guessed it might be Tash, but thought I'd better check. I stuck my head out of the hatch to find her completely naked and dripping wet, but starting to unpeg a towel from the lifeline where it had been left to dry.\n\n\"How did you get here?\"\n\n\"I swam.\"\n\n\"At night? Weren't you worried about sharks?\"\n\n\"A little, but I managed to get out to the end of that jetty so I didn't have very far to swim. Only trouble was, my panties came off as I dove in.\"\n\nShe pointed to a long commercial jetty about 60 meters away which gave access at any tide to the boats that used it. I was surprised she managed to get around the security fence.\n\nHaving quickly towelled off the worst of the water, she unpegged a bikini of hers that had also been left to dry and pulled it on.\n\n\"I need to go back and get my gear.\"\n\nThere was something in her manner told me she hadn't had a good night and wanted some companionship.\n\n\"Would you like me to go with you?\"\n\n\"That'd be great. It would save me anchoring the RIB while I get my stuff.\"\n\nI unpegged and donned one of my own bikinis and sat in the front of the RIB as Tash slowly steered towards the shore a bit further up the bay from where we were anchored. \n\n\"How was your night?\"\n\n\"A bit shit. Andrew couldn't get us on the cruise boat so we spent forever looking for somewhere private. We thought we could get down onto the beach but the foreshore is lined with houses and it was hard to find any public access or even any privacy when we got there.\n\nAnd then when we finally did find somewhere on the beach we could make out, he was a bit of a dud. He wanted to do some titty fucking as part of our foreplay and instead came prematurely between my breasts. I asked him to finger me while we waited for him to get it back up but it was like he didn't have a clue what to do. He might as well have just run a bit of 4 x 2 randomly through my crease for all the sensitivity of it.\n\nThen when he did get it back up the bastard wanted to argue about using a condom and when I finally won that one, he came again before he was half way in.\n\nAnd that was it. Two ejaculations and he said he needed to get back to catch the last tender out to the ship, leaving me stranded and frustrated on the beach.\n\nI didn't want to sleep alone there, so knew I need to swim out, but it took me a while to find a good starting point. I had to get around the fence blocking off the jetty I swam from and I had to do that almost naked because I wanted to be able to get my gear back when I came back in the RIB. Then because the tide was half way out and the jetty was a bit high off the water I lost my panties when I hit the water as I tried to do a fast dive to give me a good start.\"\n\nIt was clear Tash just wanted to download, so I listened unjudgementally as she laid out her story. The guy she'd left with had seemed nice enough and was certainly a bit of a dish; all of which maybe just added to her disappointment.\n\nI held the RIB in the shallows as Tash went up the beach to get her gear. It was on the way back that she gave me the second half of her tale of woe that probably compounded her feelings about the night.\n\n\"You know I could hear you guys at it all the way over on the beach. Especially you; but even Ellen and Ned this time. I suppose it sounded like someone having an orgy rather than a beating, but even so, it's a wonder someone doesn't call the police.\n\nBloody Andrew was at one stage more interested in what was going on in the yacht than he was in making out with me. I think he half expected I'd take him out there and let him join in.\n\nI hope Ned's got some energy left because I need a bloody good fuck from him when he wakes up.\"\n\nNed was awake when I climbed back into bed with him and Ellen. I gave him a whispered briefing on what had happened and a heads up on Tash's likely carnal intentions in the morning. Knowing Tash, I fully expected she'd be pretty direct in fulfilling her intentions.\n\nTash was a little late waking up. Ellen, Ned and I were already sitting in swimwear in the cockpit enjoying our morning coffees when Tash stuck her head and naked top out of the companionway.\n\n\"Ned, can you come here for a bit please?\"\n\nEllen and I gave him a raised eyebrow look as he meekly complied. He was still looking a bit bedraggled from last night but no one was under any false illusions about what was to follow.\n\nIn short order, we heard Tash cum with nary a sound from Ned. Ellen looked at me with a grin...\n\n\"Fingering. He probably was being suffocated in amongst her tits as he sucked them too.\"\n\nWe shared a little giggle at the mental picture of it. That was in short order followed by the sound of Tash building to a second orgasm; soon accompanied by Ned grunting.\n\n\"Sounds like she's getting a good fucking now.\"\n\nSure enough, we were soon entertained by the sound of Tash's second orgasm, followed by Ned's; including all the little extra sounds that accompany his little shudders and mini after-climaxes. It seemed he had another good one.\n\nIt was about five minutes later that Tash emerged looking much happier than she had before. Ned followed shortly behind. He looked more like he'd just been through a full cycle in a washing machine. We might have asked too much of the poor man in the last day and a half."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-21"
}