{
    "title": "Box Shaped Heart Ch. 22",
    "pages": [
        "Chapter Twenty-Two - Enough to Make a Difference\n\n\"No, it's just some allergy and stuff,\" he quickly wiped his cheeks with his hands.\n\n\"I didn't know you were allergic,\" Aron said, still worried. \"What triggered your allergy?\"\n\n\"A shmuck,\" Carter said brightly. \"I mean, that shmuck from earlier. The reporter. Yeah, that's it. I'm allergic to scumbags.\"\n\nAron placed a hand on Carter's shoulder and squeezed gently.\n\n\"You don't have to act brave. I know how what I said must be affecting you right now.\"\n\n\"I don't act brave,\" Carter protested.\n\nAnd you have no idea why.\n\nHe'll never have.\n\nThat's right.\n\n\"I love you,\" Aron said simply. \"That's all that's important right now. I promise: no more doubts.\"\n\nOkay, if Aron was going to keep it like this, his allergy was going to act up again. So he needed to do something. \n\n\"Let's just go inside. I'm beat, and I think we both need the rest. And just so you know, none of this was your fault. The reporter and everything. And ... I love you, too.\"\n\nHis throat was dry like an afternoon in Sahara. But nothing mattered at this point. Aron was happy. So mission accomplished, right?\n\nAfter getting out of the car, he had to walk with Aron holding him tightly, like the man was afraid that he was going to lose his husband if he was going to let go.\n\nThey were barely in, when his phone rang again. He almost dropped it when he saw the caller ID.\n\n\"Mother in law,\" he barely managed and gulped loudly.\n\n\"My mom? Ah, damn, in all the ruckus I forgot to call my parents and give them my new number, too,\" Aron said. \"Come on, pick up, and then pass her to me.\"\n\n\"Hey,\" he answered, his voice as tiny as a speckle of dust.\n\nHow was Alex addressing his mother in law? Was he calling her by her name? Or was he calling her 'mother'?\n\n\"Hello, Alex,\" a voice he knew so well came through, a tad tired, and strained. \"Aron is not picking up. And what is this story about a scandal? Are you two all right?\"\n\n\"I think your mom wants to talk to you,\" he handed Aron the phone, without replying to all the questions.\n\nYes, he knew that was rude of him. But he didn't have it in him to talk to Aron's mom right now. He hadn't heard Clementine's voice in years, and he could not take it. He just needed to sit down.\n\n\"Yes, mom. I ... my phone was stolen. I'm sorry about all this. No, it's my fault and no one else's. I know I didn't hand over my phone, but ... Yeah, okay. Tomorrow night, then. I'll send a message with my new number. I love you, too. Bye.\"\n\n\"Oh, God,\" Carter groaned, as soon as Aron finished his conversation with his mom. \"Now your parents saw that, too?\"\n\n\"No, they didn't see it,\" Aron shook his head. \"And they wouldn't, don't worry. They just want to see us, tomorrow, at dinner.\"\n\n\"Oh, fuck, why?\" he buried his face into his hands. \"Will we get lectured?\"\n\nHe couldn't image Aron's parents giving them some big talk on how they shouldn't be naked all over the news, but he was fairly mortified. If there was someone in the world he really didn't want to let down, that someone had to be Clementine Ruskin, followed closely by her husband.\n\n\"No,\" Aron smiled. \"My parents are not big on lectures. They just think that we need support. Baby, I know you're not crazy about family visits, but we see them too little these days. And, if they happen to say something, I'm ready to take full responsibility. You have no reason to worry. And it's just dinner.\"\n\n\"I ... I'd be happy to see your parents,\" he mumbled. \"And it's not like you shot that video by yourself. Gosh, it's just ... I just feel ashamed right now,\" he added.\n\n\"Hey, what happened with being all chill about it?\" Aron joked, clearly trying to lighten up the mood. \"Thousands of people saw us.\"\n\n\"Yeah. Strangers. Who gives a fuck about them?\" Carter snorted. \"But just thinking that your mom and dad ...\"\n\n\"Don't worry. My parents are not exactly the type to go browsing porn sites,\" Aron sat next to Carter, and held him. \"They just heard about it from an acquaintance. Apparently, the little news featuring us was all over TV, too, in prime time. Censored, but still.\"\n\n\"Oh, fuck,\" Carter made himself little in the sofa.\n\n\"Come on, my parents are the least likely to lecture us in the whole universe. They just want to know that we're all right, and they want to see us.\"\n\n\"Okay, if you say so. But I'm still ashamed as hell,\" Carter spoke softly.\n\n\"Want to go to bed?\" Aron hugged him. \"I promise, no more playing director in the bedroom,\" he added with a small chuckle.\n\n\"Ha, ha, really funny,\" Carter said dryly. \"But frankly, I'm beat. I think I'll sleep like a log.\"\n\n\"I second that,\" Aron agreed. \"And I want to thank you. For tonight and for everything. That was one hell of revenge. But how come you knew that guy's the boss's son?\"\n\n\"I scrolled through his Twitter really fast. I guess I was lucky to find that picture. My guess is that the guy changed his name to avoid people saying about him that daddy hired him. And I noticed the other dude's name and realized who that was. No big deal, really.\"\n\n\"I'd say it is. It looks like I'm sleeping in the same bed with a detective,\" Aron joked. \"But what if you couldn't find anything compromising in the guy's phone?\"\n\n\"Are you kidding me? Everything you need to learn about a person, you only need their phone, and you're set,\" Carter snorted.\n\nNow that he thought about it, Alex's phone seemed kind of clean. Not that he snooped around. But there didn't seem to be any compromising pics, although Simon had a ton, and all in all, the guy knew how to be discreet. It felt like Alex knew well how to keep things out of sight. Yes, he seemed ... practiced.\n\n\"Well, good thing someone's the brains in this family,\" Aron placed a quick kiss on Carter's lips. \"Which means I'm the muscle guy.\"\n\n\"Of course you're the muscle guy. Have you looked at yourself in the mirror? You're like ...\"\n\nWhat did he want to say?\n\nAdonis?\n\nHmm, too serious.\n\nGorgeous?\n\nHmm, too little.\n\n\"A sex god,\" he said promptly.\n\nAron burst into laughter. \n\n\"I thought you wanted to sleep tonight,\" the man cooed into his ear, making him shudder.\n\n\"Hmm, hmm, I think I should,\" he replied.\n\nI don't.\n\nWho's asking you?\n\n\"Let me just make you happy, then,\" Aron caressed him slowly. \"You won't have to do a thing, I promise.\"\n\n\"Sounds ... really good,\" he murmured.\n\nHalf an hour later, after having come into his best friend's skilled mouth like there was no tomorrow, he fell asleep. And in his dream, he tumbled down a one-of-a-kind type of rabbit hole, with pictures of his old life being friends with Aron adorning the smooth walls, in downward spirals.\n\n***\n\n\"Alex,\" Yolanda jumped into his arms, the moment he sat foot in her office the next day. \"I have no idea what you did, and I'm really dying to know, but I won't ask. The editor in chief at New Entertainment called this morning and offered a tear jerking apology, while humbly offering some ad space, free of charge. Damn, how have I managed to rule this household without your help until now? And how can I repay you?\"\n\nCarter hugged the lady back.\n\n\"Don't sweat it. Trust me, it was my pleasure,\" he said with a small secretive smile. \n\nYolanda smiled in turn.\n\n\"I know! I should give you a little bit of time off. How about that?\"\n\n\"That would be nice, only that, at this point, I have no idea what I would do with so much free time on my hands. However, I do want to ask if the day after tomorrow, you could let me off the hook earlier. There's something I need to do with Aron.\"\n\nIt was perfect for going to see his body. And he wasn't willing to postpone things anymore. With all the excitement involved by being Alex, it was like he had almost forgotten about the most important things of all. And that was that he needed to find a way to return to his old self. To his own body, and his own life. No matter how he felt about it all. No matter how amazing it was to wake up in Aron's loving arms. \n\n\"Sure thing, pumpkin,\" Yolanda said and pinched both his cheeks. \"There, you seemed a little pale.\"\n\nHe nodded, a bit less absent minded. Yeah, Aron was right. He wasn't particularly thrilled with having his cheeks pinched, and spoken to in a loving voice. But not for the reasons Aron thought. No, not at all.\n\n***\n\n\"Boss, I am really so sorry,\" Mark welcomed him.\n\n\"Man, would you quit it?\" Carter smiled and ruffled Mark's hair in passing. \"You worry way too much. And it wasn't your fault.\"\n\n\"It was,\" Mark insisted, while brushing down his disturbed hair with his fingers. \"I wasn't paying attention. I ...\"\n\n\"Alex, do you have a minute?\" Simon peeked from behind the door, opening it without knocking.\n\nOkay, this was going to be tough.\n\n\"Mark, prepare my schedule for today, and bring it over in ... let's say 15 minutes. Come, Simon,\" he gestured for the other to follow him into his office.\n\n\"But boss, I already have your schedule and ...\" Mark protested, jumping from behind his desk.\n\n\"Mark, it's okay,\" Carter smiled at his assistant. \"I know how to wipe my own ass,\" he added with a wink.\n\nMark sank back into his chair, and pouted. All right, he could deal with his assistant and his hissy fits later. Now, he needed to listen to what Simon had to say.\n\nHe waited until Simon closed the door behind them, but he remained standing.\n\n\"Hey, you don't have to look at me like I'm going to execute you,\" Simon mumbled and he looked to one side, seemingly nervous.\n\n\"Well, I'd rather take a blow standing up,\" Carter said. \"I would ask what brings you here, but I suppose you want to tell me about how you intend to inform my husband about our affair.\"\n\n\"No,\" Simon said, keeping his eyes down.\n\n\"No?\" Carter wondered out loud.\n\nI think puppy eyes is on our side, now.\n\nNot on our-our side, though.\n\nDetails.\n\n\"I ... saw the video,\" Simon said with a small huff.\n\n\"Ah, the video. Well, we sent requests everywhere to be taken down, but well, this is the Internet. Nothing ever gets erased for good,\" Carter said quickly.\n\n\"It wasn't what I could have expected,\" Simon crossed his arms over his chest, still refusing to look at Carter. \"I thought you hated having sex with your husband. You always complained about him being too big, and always pressing you to come while being fucked ...\"\n\n\"Pressing me to come?\"\n\nHow the fuck?\n\nI thought Aron was kind of a douche because he didn't seem to care about that too much!\n\nYeah, like I said ... how the fuck?\n\n\"Yeah, you said that it took you half a year to get him to understand that you could live without coming during fucking, and another half to get him to come faster so that he could let you be.\"\n\n\"That's bullshit!\" Carter exclaimed.\n\nDamn, he needed to stop saying everything crossing his mind.\n\n\"Yeah,\" Simon threw him a curt look. \"It looks like you lied to me. And you didn't have any hard time coming when you were with me, so ... Alex, you tell me what to think.\"\n\n\"Really, I have no idea,\" Carter mumbled, shaking his head.\n\nThis Alex dude didn't cease to amaze him. How much of a spoiled brat could he be to act like this? And why on earth was Aron taking everything from him?\n\n\"In that video, I saw you happy,\" Simon accused. \n\nActually, there were just two people fucking.\n\nShut up, can't you see this boy is trying to tell us something here?\n\n\"How ... why did you ... why did you lie to me?\" Simon continued. \"You gave me false hopes, you said you were going to divorce, you always whined about how Aron was so annoying always trying to make you happy by force ... Why? Can you please just tell me why?\"\n\n\"I ... really wish I knew the answer to this one,\" Carter shook his head. \"For all that's worth, I'm sorry, Simon. I mean, you're a cool dude. You're handsome. You're generous. Letting aside that you were with a married man ... but that's on me, I guess. I think you're a decent guy. So, you're not going to tell on me?\"\n\nSimon threw him a hurt look.\n\n\"No, but you should tell Aron everything. All this time, I thought you were unhappy with him, when actually ... you were just two-timing us, right? Why wasn't I enough? Why wasn't your husband enough? No, I won't tell on you. But I tell you this, and I tell you because somehow, I don't know why, I still think you should be happy. Tell Aron. You won't feel right until you tell him.\"\n\n\"How old are you again?\" Carter looked at the guy. \"Really, that sounded really profound right now.\"\n\nSimon smiled, and managed somehow to look again like a silly puppy. Well, silly, but cute. \n\n\"I've read it online, on a relationship advice website.\"\n\n\"Of course you did,\" Carter said wryly. \"Well, thank you for your concern with my wellbeing and happiness. But now, I should ask you. Are you still hoping that you're going to get something out of this?\"\n\nSimon looked away, and bit his lips.\n\n\"A bit, yes,\" he admitted in a small voice. \"But I won't say it. I might jinx it.\"\n\nMoron, you just did.\n\nHey, have a little compassion here. Look at them puppy eyes.\n\nDogs will be the death of us.\n\nAre you stupid? I have no idea how you managed to put that in a sentence.\n\nMagic.\n\n\"So, if Aron decides to kick me out and divorce me, you'll be here, waiting?\" Carter tried to make clear whatever was happening in Simon's silly brain right now.\n\nSimon nodded happily. Yeah, the only thing the guy was missing was a tail to wag it.\n\n\"Damn,\" Carter sighed. \"You really should go chase someone else. With your looks, I bet 99% of single gay people in this city would want to be with you.\"\n\n\"Yeah, like for one night,\" Simon shrugged. \"Or two,\" he added, after a bit of deliberation, and a small frown. \"You're my longest relationship ever,\" he declared, opening his arms and throwing them aside.\n\n\"Ah, fuck,\" Carter mumbled. \"Still, this doesn't mean that you should just take everything that's thrown at you. I kind of treated you like shit these last days.\"\n\n\"Actually,\" Simon looked down again and smiled, mostly to himself. \"I kind of liked these last days. You introduced me to BDSM, you fed me from your own hand, you spanked me when I asked, you didn't talk me down once ...\"\n\n\"Talk you down? Like how?\"\n\n\"Like how I should change my haircut, or change my favorite designer,\" Simon grabbed the hems of his coat sleeves, and pulled, like he wanted to make a point. \"You know. I mean, I know you're more good looking than me, but I was born with this nose, and ...\"\n\n\"What's wrong with your nose? I'd say it's a bit too perfect,\" Carter said.\n\n\"That's strange. I mean, it was the other time when you asked me if I went under the knife ... But I didn't. You kept telling me it's too long and pointy, and I see why. But I went to see a surgeon ... there, you made me said it, and despite me pleading with him, he told me that I shouldn't ruin what Mother Nature gave me. What does he know, right?\" Simon snorted, although it was clear that he was unconvinced by that.\n\n\"Well, he told you the truth. You have a perfect nose. Don't go cut it or do something stupid. It's perfect as it stands on your face. Hey, how come you work in marketing, and you're not a model yourself?\"\n\nSimon was now looking at him like Carter was growing a second head.\n\n\"But you told me I'm no model material,\" Simon spoke. \"That I should stick to what I know.\"\n\nCarter could feel his head bursting. What was with this Alex, and his obsession to torture everyone around him? It was getting tedious, to say the least.\n\n\"Really, I have no idea what you see in me, if I used to talk to you like this,\" Carter eventually managed to speak.\n\n\"Well, you have your days. Well, they don't happen that often, but you do have your days. When it's like you're everything I want.\"\n\nYou were everything I wanted.\n\nRemember Aron's words?\n\nYeah ... what the fuck is going on here?\n\n\"So I'm willing to wait for you,\" Simon said brightly. \"If you ever grow tired of Aron, I'm here for you.\"\n\n\"Ah,\" Carter sighed. \"Please don't do that. For your sake, please don't. Can't you see how much of a scumbag I can be?\"\n\nSimon shook his head slowly.\n\n\"No, you're not. You're not a scumbag. You just weren't loved when you were a child.\"\n\n\"Say what?\" Carter exclaimed.\n\n\"Yeah, I mean ... your mom and everything,\" Simon looked away, seemingly embarrassed. \"But I won't talk about that. I know it upsets you.\"\n\n\"Okay,\" Carter mumbled.\n\nNo matter how deep this rabbit hole he was passing through was running, the one Alex had seemed to dig all his life was even weirder.\n\nThat's no way to compare things. You're pitching apples versus oranges.\n\nPitching. Pitches. Peaches.\n\nWhere are you going?\n\nLeave me alone.\n\nBut don't you want to know about Alex?\n\nNo, not really. I'm not going to feel for the guy now.\n\nOkay.\n\nYou're agreeing for once?\n\nYeah, why not.\n\n\"I won't keep you anymore. And I hope we can still be friends until, well, until you decide to leave Aron for me,\" Simon spoke, interrupting his thoughts.\n\n\"You're really bent on this,\" Carter murmured.\n\nNow that was worse than the prisoner's dilemma. On one hand, if he went and told Aron about Simon, he was going to make Aron unhappy and ruin his marriage. On the other, if he didn't, he was forcing Aron to continue living a lie, in the shape of a marriage to a famous model. What the fuck? He was still going at this in circles. \n\nNo, he needed to tell Aron. But he needed to choose his moment well. Maybe after the dinner with Aron's mom and dad? No, better yet, after going to see his body. He needed to make all the ruckus around this die down before starting another shitstorm.\n\nHe was again lost in thought, so he didn't notice when Simon came close to him and hugged him. \n\n\"Hey,\" he said gently and patted the other on the back.\n\n\"I'm going to miss you,\" Simon sniffled. \"But I'll wait. I'm sure you're the one for me.\"\n\nAlex had to be a magician. Or simply, an expert in playing people. Because both Aron and Simon were smitten enough to think that Alex's whims were just the result of an unhappy childhood or something like that. Somehow he wasn't buying it. The guy seemed an emotional chameleon, capable to change to get the others fall for him.\n\nAnd really? He had had Aron buy him an expensive car, like really frigging expensive. So Alex wasn't only after other people's feelings, he was after their money, too.\n\n\"What did you buy me last time as a gift?\" he asked Simon suddenly.\n\nThe guy took one step away from him and smiled.\n\n\"The spanking paddle,\" he answered like a child happy to know all the answers to a school quiz.\n\n\"That was more like for you, but let's not talk about that right now,\" Carter said quickly, unnerved by how Simon's lovely caramel eyes were turning sultry and inviting. \"Before that.\"\n\nSimon seemed to take one moment to remember.\n\n\"Well,\" he began counting on his fingers, \"it was that three day trip to Italy, on which you went alone, and before that was the diamond dust treatment for your skin at your favorite spa, and, ah, of course, your phone, that was a limited edition, just so you know, and before that ...\"\n\n\"Stop,\" Carter raised his arms in surrender.\n\nJust how much frigging money and things this guy needed? He was clearly making plenty of money, despite not being Kate Moss and all that, and he was still having his husband and his lover buy him ludicrously expensive stuff. What the hell was he doing with all his money?\n\n\"Thank you,\" he added, when Simon looked at him, confused. \"Just for the record, since we're no longer together, please don't buy me stuff anymore.\"\n\nSimon's face fell.\n\n\"But I enjoy giving you things. My family has enough money.\"\n\n\"Then why are you working here? You could have fun spending your money to have fun, right?\"\n\n\"My parents taught me that work is important. But they don't forbid me to spend money on gifts for someone else.\"",
        "That made sense. It was clear that everyone around was well paid, but Simon did have an expensive car and was always dressed like he was ready to walk down the catwalk, despite only working for the marketing department. So Alex had a nose for choosing his victims well. Despite being different from one another, Aron and Simon had a few things in common, such as solid work ethics and generosity. And fat bank accounts.\n\nThe scumbag didn't deserve Aron. What the fuck was he to do? All this time, he only wanted to see Aron happy, but was this really okay? Alex seemed to be on a quest to dig up all the money in the world, and not one second willing to stop. And he didn't seem to love Aron too much. He didn't love Simon either.\n\nThe guy simply loved money and nothing else.\n\n\"Simon, puppy eyes,\" he murmured, \"I'm saying this, and I hope you'll understand. Go find an awesome guy to deserve you. I'm ...\"\n\nA piece of shit.\n\nWe don't know all the facts.\n\nStop being the devil's advocate.\n\n\"I will be your friend until you're ready to accept me,\" Simon spoke. \"I won't take no for an answer. I'll show you that I can be the one for you. Even if every day you will still go home to your husband. But I'll leave you now. Everyone is talking about you, how much you've worked lately. It looks like we'll all get a raise because the company is getting showered in contracts. And the guys with the underwear collection? Their sales seem to have taken off after your homemade clip. So, it looks like everything you touch turns to gold,\" Simon laughed. \"So I won't keep the company's employee of the month from working his magic,\" he added. \"See you around.\"\n\nCarter stared at the door closing behind Simon. Not one moment without a surprise, or so it looked.\n\n***\n\n\"Are you sure we shouldn't bring anything?\" he glanced nervously at Aron, as they stood in front of the door to Aron's parents' home.\n\nHe only needed to look over the fence and see his childhood home. His parents were probably inside, but the house seemed silent. But there were more memories he had from this house, the one in which Aron and he had grown up, under the loving watch of Aron's mom and dad.\n\nAnd now, that he was here again, he had the strangest of sensations that he had suddenly grown too much, and the house was smaller than what he could remember.\n\n\"Don't worry, mom clearly said that everything is taken care of, and just bring ourselves,\" Aron replied, and took him by the shoulders, squeezing in reassurance.\n\nIt was not reassurance he needed, but a cleaning agent for all the stuff Alex was capable of. Somehow, he doubted such a solution had been invented.\n\nThe door opened, and there stood Gary Ruskin, Aron's dad, with a warm smile that was lighting up his entire face. Aron was handsome like him, and anyone could notice the resemblance, although not Gary, and certainly not Clementine, were as tall. Apparently, Aron was taking after a grandfather, in terms of height. \n\nCarter could not help notice the signs of time on Gary's face. His hair was completely white now, and the wrinkles he remembered were now deeper and set. But he was still the jolly man Carter knew.\n\n\"Clementine will be so happy to see you two,\" Gary gestured for them to come inside and hugging them both. \"I told her not to worry too much, but you know how mothers are. Always worrying,\" he added, with a small, but fond eye roll. \"Come, come, let's have a seat at the table while my lovely wife is making herself pretty. She prepared some really delicious foods she intends to fatten us tonight with. Alex, please, this is your father in law asking. Just forget about your diet for tonight. Clementine really went head over backward to make the most exquisite foods. I promise, it's nothing too fat.\"\n\n\"Sure thing ... dad,\" Carter said, after a short moment of hesitation.\n\nTwo pairs of dark eyes stared in shock at him.\n\nGreat.\n\nIt felt weird to just call him Gary, okay? He was always Mr. Ruskin to us.\n\nYeah, but I doubt Alex is calling his father in law 'dad'.\n\nEh, we'll live through it.\n\nThe older Mr. Ruskin seemed to be to first to recover himself from the shock. He smiled fondly and hugged Carter again.\n\n\"It's good to see you, son,\" the man said simply.\n\n\"I ... I think I'll just go grab some water from the kitchen,\" he replied.\n\nHe was in danger of doing something stupid again, and he needed a small break.\n\n\"I could bring you a glass,\" Gary offered. \n\n\"No, that's okay,\" he shook his head.\n\n\"Do you still remember where the kitchen is? You so rarely visit. I'm sorry, it wasn't a reproach,\" Gary added quickly.\n\n\"Baby, are you okay?\" Aron intervened.\n\n\"Yeah, don't worry. I know where the kitchen is. I'll be back in a jiffy,\" he hurried the two other men to see about their business. \n\nHe could find his way in that house if he was blind. And he really needed that glass of water. That was no lie. His throat was dry and his eyes were prickly again.\n\nAh. But it was inevitable, and it was better like this than together at the table, with all eyes on him. He took in Clementine Ruskin, her wavy hair styled in an updo, probably for the occasion. She was turned with his back at him, fiddling with some kitchen utensils. She was wearing a flowery dress, and Carter could swear he could smell vanilla from where he stood, in the kitchen door.\n\n\"Hey, Mrs. R,\" he spoke in a tiny voice.\n\n\"Carter?!\"\n\nThe woman turned so fast on her heels that she managed to catch a porcelain bowl in the process, making it slide and crash on the floor.\n\nCarter stood nonplused. Was he transforming? Could Clementine see him? Really see him?\n\n\"Ah, I'm so sorry, Alex,\" the woman started speaking right away. \"For a second, I thought ... Never mind.\"\n\nShe made a gesture to begin gathering the shards from the floor. Carter shook off his trance. He wasn't transforming. So he hurried to help Aron's mom.\n\n\"Please let me,\" he offered right away. \"Your dress is too pretty to risk staining it.\"\n\n\"Oh, thank you, Alex,\" the woman smiled. \"For the help, and for the compliment, of course.\"\n\n\"My pleasure,\" he said politely, while Clementine pointed out the trash can for him. \n\n\"Were you here for something?\"\n\n\"Just a glass of water. I didn't mean to startle you.\"\n\n\"Oh, don't worry,\" Clementine waved. \"I just visited Carter at the hospital two days ago, and I just ... Well, I suppose Aron told you how close we all used to be. I feel like he's my son, too. And I was just thinking about him ... But don't let me bore you with this. I'll get that glass of water for you.\"\n\nHe focused on the shards, placing them in the trash can and then grabbing the broom from a nearby closet for the smallest ones. \n\nWhen he raised his eyes, Clementine was staring at him, the glass of water in her hands, which she held onto like a talisman. There was something odd in her eyes. \n\n\"I didn't know you were so handy around the kitchen,\" she said.\n\n\"Ah, I just thought not to leave anything sharp on the floor. So that someone doesn't get hurt,\" he explained.\n\n\"Okay,\" she nodded, and her warm smile returned. \"Now please, get out of my kitchen, and go take a seat with the rest of the boys. I will be right there.\"\n\n\"I can help,\" Carter offered.\n\nClementine's smile widened.\n\n\"That is so very nice of you.\"\n\nThe least he could do. So Clementine had gone to the hospital to see him? He was such a douchebag for not visiting them in two years. The same two years spent away from Aron. Like he had denounced his friendship with the entire Ruskin family. That wasn't fair.\n\n***\n\nIt had to be a wonder the way he could manage to answer all the polite questions Clementine and Gary were asking him about work, not once mentioning the scandal. Aron seemed happy, really feeling at home, joking with his parents and laughing.\n\nAnd he felt like he was going back in time. How many times had he had dinner with the Ruskins? It had been more times than with his own mom and dad, with them always away on their exploring missions, away from home and, what truly mattered, away from him. \n\nIt felt like home, not only for Aron, but for him, too. He studied the wine glass in front of him, lost in thought.\n\n\"You made quite an impression on Carter's parents,\" Clementine was the one to address him again. \"Such a fine young man, they said, and I can only agree. I am happy to be your mother in law. Proud, too,\" she added. \"I know Carter managed to make a bad impression at the wedding, but you should know, that is not who he is. We know him since he was seven years old. To this day, I cannot say I know what caused that outburst. And, after that, he has never returned our calls, nor picked up when we called him.\"\n\n\"He was surely embarrassed, dear,\" Gary spoke. \"Carter has always had troubles expressing his emotions,\" Aron's dad said in an apologetic tone. \"And he grew up here, with Aron, like they were brothers. I'm sure that somehow he thought at that moment that you were going to steal his longtime friend. In his name, I feel like I must apologize.\"\n\n\"No need to,\" Carter made himself little in his chair.\n\n\"Well, I will have a talk with him once he gets up from that hospital bed,\" Clementine spoke again. \"It's enough how long he has ignored us. I won't let him do that again. Time heals all wounds, and he must be less affected now than two years ago by the fact that Aron is married.\"\n\nTo a guy.\n\nTo a douchebag.\n\nThey don't know that.\n\nThey might suspect it.\n\nAre you getting involved with the in-laws too, now?\n\n\"I would like to ask you, Alex,\" Clementine placed a small warm hand on his, \"to try being friends with Carter. He is usually such an easygoing person. All right, I admit that he might have his quirks, but he's a true friend to Aron, so it would be nice for you to welcome him as a friend, as well.\"\n\nCarter looked at Aron, searching for help. His husband was seemingly preoccupied with examining the leftovers on his plate. Ah, so the entire family was ganging up on him.\n\nIt should make you happy. They love you.\n\nYes, they do. But Alex still hates us, remember? I cannot really offer the right answer here.\n\nAlways ruining a good thing? Stop talking about 'us' in this. I want to hug Mrs. R so much right now.\n\nNo can do, and you know it.\n\n\"I'll consider it,\" he said slowly, afraid of the words coming out of his mouth.\n\nWell, Alex was bound to be back to his own body at some point and he surely wasn't going to be all lovey-dovey toward Carter. So there was no point in giving Aron's parents false hopes. Better to just leave things in a limbo.\n\n\"Thank you, dear,\" Clementine squeezed his hand, without showing one second whether she was disappointed by that vague reply or not.\n\nNot the same thing he could say about Aron. His friend was looking at him from across the table, his eyes a bit sad. He looked away. Talking about a huge ass mess up. \n\nTo his relief, Aron's parents dropped Carter as a topic of conversation for the duration of the dinner. \n\n***\n\nIn the end, he had survived dinner at the Ruskins, and he almost felt the need to pat himself on the back. Except for that freakish moment when he had thought Aron's mom had seen right through him, everything seemed in order. If anything, Aron's parents seemed enchanted with him, although he had made an effort to speak very little. It was quite funny that he was so stressed that Clementine and Gary could guess he was not the real Alex.\n\nBut everything had an explanation. And that was that Aron's parents knew him, Carter, inside out, and it was more like he was afraid of giving himself away than anything else.\n\n\"Well, that was fun,\" he commented, as soon as they were in Aron's car and on the way back home.\n\n\"I thought you were starting to warm a little toward Carter,\" Aron said right away. \"I was a bit surprised by the answer you gave mom.\"\n\nAh, Aron had no intention of beating around the bush. Well, the man deserved an answer, even if it wasn't going to be the correct or the honest one.\n\n\"Well, I'm totally ready to welcome Carter in our lives, as a friend,\" he spoke. \"But, as long as he's asleep there, in the hospital, there's no way of telling how he is going to react. I didn't want your mom to be disappointed when he'll wake up and start spewing all kinds of homophobic shit at us again.\"\n\nAron stopped for a second, as the light turned red. Then he turned toward him.\n\n\"But you have no issues, otherwise?\"\n\nCarter shrugged.\n\n\"Why should I? Let bygones be bygones.\"\n\nThe smiled he earned from Aron was killing him a little inside. \n\n\"Don't worry. I'll make sure he'll keep his big mouth shut until I convince him to behave like a normal human being. And thanks for thinking about my mom's feelings. That's really thoughtful of you.\"\n\n\"That's who I am,\" Carter sighed.\n\nHow long do you think this is going to take until it blows right into our face?\n\nHmm, give or take, exactly two seconds after the body swap gets reversed. \n\nThat is absolutely correct. Alex will want our head.\n\nWe need our head, though.\n\nYeah, tough luck for him.\n\n\"So we'll go to see him tomorrow?\" he said nonchalantly.\n\n\"Yeah, sure. Should I come pick you up from work?\"\n\n\"Yeah, that would be nice. I'll take a taxi to work in the morning.\"\n\n\"You could still take your car. It's no problem if we drive separately to the hospital. I know how much you love your car,\" Aron said with a smile, now focused on the road ahead.\n\nGood thing he wasn't looking, or he might have noticed the expression of disgust on Carter's face. That guy and his greed. Damn, he needed to bring Aron up to speed about the entire cheating deal. But not tonight. Tomorrow was as good a day as any. He doubted he could go see his body again, if Aron was going to kick him out of the house and he needed to sleep in the bushes.\n\nOr at a hotel.\n\nC'mon, you're ruining the dramatic effect.\n\nSigh.\n\n***\n\nAron was prompt at his workplace at the hour they had agreed on, and Carter had to admit that his heart felt a bit small in his chest. He was going to see how Aron really saw him. Him, as Carter, not as a stand-in for a cheating husband.\n\n\"Since I leave early, I suppose you could leave now, too,\" he spoke to Mark on his way out.\n\n\"Yes, thank you,\" his assistant answered brightly. \"Good luck, boss.\"\n\n\"Hmm, okay,\" he replied.\n\nGood luck? What was that supposed to mean? What did he need luck for?\n\n\"Just for the record, boss, it's been really nice working for you,\" Mark added. \"I wish you all the best.\"\n\n\"Hey, it's only mid-week. You'll get to see more of me. No need to see me out like I leave on a three-month trip to see Machu Picchu,\" he joked.\n\n\"Why Machu Picchu?\" Mark inquired, his face all a smile.\n\n\"I don't know. It seems like a faraway place. And eight thousand feet above sea level? It should take me quite a bit of time to get there,\" Carter explained.\n\n\"It's not eight thousand feet above sea level,\" Mark remarked.\n\n\"No, it's 7.970,\" Carter laughed. \"What's a few feet here and there?\"\n\n\"Enough to make a difference,\" Mark said enigmatically.\n\nCarter took a moment to stare at his secretary. \n\n\"You're full of puzzles today, Mark. Well, I'd love to stay and chat about the importance of a few feet above sea level, but I must go. See you tomorrow,\" he waved with a smile.\n\nHe could swear Mark had sighed as he closed the door behind him. Not a sigh like the guy was in pain, but a sigh like it was coming from someone feeling suddenly very compassionate and resigned about another person. \n\nBut why would Mark feel that way toward him? It made no sense.\n\n***\n\n\"So, we're here,\" Aron stopped in front of the door to the hospital room. \"Ready?\" he turned with a smile toward Carter.\n\n\"I was born ready,\" Carter smiled. \n\nThe room was as he remembered it. The same breathing machines keeping the guy on the bed alive. The same pristine white bed. Even the air seemed the same.\n\n\"Hey, buddy,\" Aron spoke, taking him by surprise.\n\nHe took in with dread how Aron hurried to the bed, and took an inert hand into his. Well, at least, his body was no longer looking just as bad as before. Maybe the doctors were right, after all. \n\n\"Today I brought someone special with me. You already know him, but, well, I feel like you two should get reacquainted.\"\n\nAron was talking to his body, and he was standing right behind the guy. If this didn't count as an out of body experience, he had no idea what else could. \n\nIs that allergy acting up again? And really, Aron is talking to us. Shouldn't we talk back?\n\nShut up. As usual, you're a complete moron.\n\n\"Alex, come here. I want you to talk to Carter, too, today,\" Aron encouraged him.\n\n\"Nah, I think I'm fine over here,\" he refused.\n\nAron didn't look like he was willing to take 'no' for an answer. So, with a fond smile, he grabbed Carter's hand and brought him closer.\n\n\"Here, you can touch his hand, too. Who knows? Maybe you'll have more luck than me to convince him to wake up,\" Aron made a small attempt of a joke.\n\nThe hand was warm in his, like he could almost feel a pulse. It was faint, but it was there.\n\nOf course it's there, we're not dead.\n\nNo, no, this seems ...\n\nWhat the hell was happening?\n\n\"Alex!\" he heard Aron's panicked voice through the drums giving a rock concert in his ears. \n\nIt was like he was falling, but without hitting the ground. Another rabbit hole? What kind of Wonderland was this, anyway? His eyes closed on his own accord, too dizzy with everything around him spinning fast.\n\nThen suddenly he felt at peace inside. Could he attempt to open his eyes? Hmm, his eyelids seem to be controllable. That was good.\n\nHe opened his eyes and blinked. And stared at Aron who was gently shaking his husband, speaking in a hurried voice, like he was trying to make sense of why the guy was standing there like a statue.\n\nAnd the guy was looking at him like Carter was some kind of sea monster, ready to sink all his sails. It took him a moment to hit him.\n\n\"Ah fuck!\" he said out loud.\n\nHis voice was hoarse and sounded weird, like it was coming out of a well. Aron stopped shaking his husband and turned towards him in obvious shock. \n\n\"Carter, you're awake?\"\n\nIs this a good moment to faint?\n\nExit. Stage left.\n\nTBC"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/box-shaped-heart-ch-22"
}