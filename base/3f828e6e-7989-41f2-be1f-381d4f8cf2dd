{
    "title": "Blue Topaz Eyes",
    "pages": [
        "She had the brightest blue topaz eyes I'd ever seen. \n\nAlmost clear, a perfect pale blue, even in the dim light. \n\nThey flashed furiously as she struggled to free herself from my grip and my weight as I pinned her to the rough asphalt, her dark curly hair spread out in in a lush fan. Her skirt was 10 feet away next to the matching yellow purse where I'd thrown them; her blouse hung in shreds and the plastic front snap on her bra was broken, leaving it hanging off of her as an irrelevant scrap of blue lace. What modesty she had left was only preserved by a matching pair of light blue lace thong panties nearly the same color as her eyes. That modesty wasn't going to survive long \u2013 as soon as I could trap both her wrists in one hand, I planned to rip the waist band through and tear them off her. It was, honestly, proving to be difficult \u2013 she was stronger than she looked, and she wasn't wasting her breath screaming for help. Instead she had sunk her teeth into my right forearm. I'd managed to tear it free in a spray of blood that spattered both of us, then had to fight to recapture her wrist. Her second bite attempt bought her an elbow to the mouth that split her lip. More blood, hers now, mixing with mine. \n\nI'd made pretty good progress on my initial attack, catching her guarded, but uncertain in the darkness of the empty lot, dimly lit by a distant, dying, streetlight. I'd yanked the heavy purse from her arm \u2013 no point in risking a gun or pepper spray - and ripped the skirt off in almost one motion, zipper teeth flying everywhere, while bearing her to the ground. I pinning her down, working my body between her legs. Despite her small size \u2013 maybe 110 pounds total \u2013 she was in very good shape and, as it turned out, she was a fighter. \n\nWe locked eyes for an instant \u2013 just a fraction of a second \u2013 and at that moment, I saw a slight smile curve her lips. I could feel myself grow hard against her between her legs\u2013 she clearly noticed, eyes widening as she hissed in renewed fury. \n\nThen everything went wrong. \n\nShe snapped her teeth at my right arm again \u2013 and when I tried to arch it out of the way, her trapped left wrist shot straight out, dragging my grip with it; then she drove her right knee into my left hip \u2013 I was instantly overbalanced. I might have recovered, but I had to stretch my left leg out to compensate \u2013 and she promptly drove her knee into my groin. The world exploded in pain and stars of brilliant white light, as I felt her tear free of my grip. I kept rolling to my right, trying to gain distance to get to my feet. Her nails raked at my eyes, but I was moving too fast and had shut my eyes tightly against the pain. A fortunate accident more than anything else. Even as I got to my hands and knees I heard rushing feet and felt three rapid-fire sledgehammer impacts into my side. Ribs cracked and snapped under the blows. It almost seemed impossible for a person her size to deliver that kind of power in a kick. I rolled again using the force of her third kick, but this time I kicked my own legs out in a hard sweep, feeling it slam into her legs. I heard her slam into the ground as I rolled to my feet. Even so, as I locked eyes on her, she was already up \u2013 in the easy, upright, bouncy stance of a Tae Kwan Do practitioner. That at least explained those brutal kicks. I dropped into a lower, more grounded, Shotokan combat stance. She was covered in beads of sweat and blood, mouth open, panting with exertion, chest heaving, her small brown nipples crinkled by the cool air. She seemed to be favoring her left leg, so I stepped to circle to the injured side for a better attack angle. \n\nA Klaxon blasted, jarring both of us. I straightened up and dropped my hands to my sides, watching out of the corner of my to make sure she did the same. She did. Watching me. \n\n\"Lights!\" \n\nIllumination grew as the grim, grey-ponytailed instructor walked over from the jersey barriers that circled the asphalt training floor. I could see Tier Two students staring wide-eyed from outside the barriers. They were filing in from an observation room. The training floor was asphalt and gravel, roughly the size of a basketball court. A row of cars sat parked along one edge. \n\n\"Agent.\" She turned more toward him wordlessly, still keeping check on me out of the corner of her eye. \n\n\"I know he outweighs you, but when you force dismount him, you have to follow, keep your hip into his inner thigh. Gaining positive control form the superior position is the goal of that move. As you found out, even a solid strike to the groin isn't necessarily disabling if your opponent has a high pain threshold. You really should have taken the option to flee when faced with an opponent who is this much bigger and stronger. Still. Passed.\" \n\n\"Sergeant.\" I half turned to him as well \u2013 still tracking her cautiously. \n\n\"Good initial attack, and rolling out of the dismount was a good choice, but you should have thrown the sweep the first time. That would have saved you some broken ribs. Passed. End exercise. End of training.\" Green lights lit at that command and tension fell off us both. \n\nHe turned and walked off back to the T2 students \u2013 the men were openly gawking at my thong-clad opponent, while the women glared at me with a mixture of horror and revulsion. \n\nThe agent staggered a bit as she tried to step off; she almost fell, but caught herself, barely staying upright. \n\nI peeled off my sweat-and-blood soaked t-shirt and extended it to her. She nodded tersely and took it, dropping her shredded shirt and bra to the ground before pulling it on, bouncing lightly on her one good foot. It made a pretty good mini-dress on her. It was more to protect her from getting the chills than for modesty \u2013 if, in fact, she had any modesty left after \"Junior Woodchuck\" (Outdoor Survival), \"Alibies and Lies\" (Covers and Legends) and \"Advanced Beatings\" (Counter Interrogation) classes. \n\n\"Infirmary?\" I asked. \n\nShe nodded, then wiped her bleeding lip on the collar of the t-shirt. \"I can't walk at all. I don't think anything is broke, but it won't support my weight for a while.\" \n\n\"The sweep?\" \n\nShe nodded again. \"Probably a bad bone bruise. Damn good thing this is my last day.\" \n\n\"I can carry you there if we keep your weight on my right side. I need my ribs bound anyway.\" \n\nShe nodded again. Social pleasantries like \"Thank you\" and \"please\" were firmly discouraged here \u2013 part of keeping students from getting to know each other. I knew she was a Federal police officer of some kind \u2013 BATF, FBI, or DEA, maybe - because he had addressed her as \"Agent\". Likewise she knew I was with Military Intelligence as I was addressed as \"Sergeant\". Civilians from intelligence agencies like CIA were generally addressed as \"Officer\". Names weren't used here at all. \n\nThe female T2 students watched in shock and disbelief a she let me gently pick her up and even more so when she draped an arm around my neck. They didn't understand. They weren't field operatives, they were just being given familiarization on how we trained here. \n\nWhere was \"here\"? \n\nThat would be a bit problematic. Suffice to say that it was somewhere east of the Mississippi. Maybe. It didn't really have a name, just an ever-changing alphanumeric designator; so, in the irreverent tradition of spooks and spies everywhere, it went by several names: Saint Tristan's Academy for Wayward Girls and Wicked Boys, Mistress Dominique's Emporium of Pain, and, most commonly, Anti-Social Behavior 101. The schooling consisted of several classes geared to teach things not covered in a standard college curriculum - students were given a course of instruction based on their mission set. The ones I knew of were: \n\n\"Mayhem\" (Unarmed Combat) \n\n\"General Mayhem\" (Small group unarmed combat \u2013 I did not attend this as I deployed alone) \n\n\"Sneaking\" (Counter Surveillance) \n\n\"Wreck and Ruin\" (Defensive and Offensive Driving) \n\n\"Gee, Mr. Wizard\" (Improvised Weapons and Explosives) \n\n\"Junior Woodchuck\" (Outdoor Survival) \n\n\"Alibies and Lies\" (Covers and Legends) \n\n\"Advanced Beatings\" (Counter Interrogation) \n\n\"Goat Bones and Chicken Blood\" (Technical Surveillance) \n\nWhat we had just finished was the final exercise for \"No Means No\", a comprehensive anti-rape training set for female operatives. Rape is understandably a big fear for many female operatives working under cover, and the class was designed specifically to at least partially counter that. For the final scenario, male students who had completed \"Mayhem\" well above standard were selected at aggressors. We'd been given very specific instruction \u2013 and some training \u2013 for the scenario to make it as terrifying and as real as possible. We were matched with female students as much as possible to magnify the fear based on their psych profile. \n\nSound horrifying yet? \n\nIt should; actually it's meant to. \n\nThere are only half a dozen female operatives in training at any time, and it was simple to have them report to the admin office from the ersatz restaurant where they were finishing a cover exercise (what is more harmless than a waitress?). The easiest route was across the apparently empty, darkened, training room. After 6 months of training, they wouldn't be completely unguarded, but they'd never even been told there was a final exercise for \"No Means No\". The only warning they had was when the red \"Exercise Begin\" warning light kicked on with its accompanying klaxon; which also signaled the aggressor to attack. Even the gaudy yellow and red waitress uniform, with its too-short skirt and flimsy blouse was intended to make them feel vulnerable \u2013 and to signal all instructors that the exercise was underway. It also ensured that the aggressors weren't accidentally triggered against a lost T2 student. And the aggressors were encouraged to be very aggressive \u2013 we could fail the exercise as easily as the female operatives. Anything short of actual penetration was allowed, even encouraged. \n\nFor us, this was the last exercise of the last class \u2013 the male students departed this evening, and the female students would leave the following day. Both after a careful screening interview. \n\nWe didn't talk as I carried her down the hall, it just wasn't done here. It was a short trip - someone had wisely designed the building so that the infirmary was on the same floor as the unarmed combat training room. Personnel got hurt here. A lot. There were no pads or mats on the training floor; knives were blunt, but metal, guns fired reduced load rubber bullets that hurt like hell. We didn't write greeting cards for a living and everything here was intended to inculcate that. \n\nThe few personnel we passed simply ignored us; weird clothing and injuries were hardly unusual here. As I walked into the infirmary, the nurse simply said \"Room 3\", so I carried my charge into the room and set her on the exam table as carefully as possible, although she still winced as her weight settled. Then I sat down in a side chair. Somewhere nearby, muffled sobbing filtered through the walls. She listened for a second, her blue eyes flickering around the room. \n\nQuietly \"Someone failed.\" \n\nI nodded \"I'd guess.\" \n\nThere was a long pause. Finally, without looking up, she asked, \"So what was up with the hard-on?\" \n\nI had been so hoping she wasn't going to mention that. \"In six and a half months, the most meaningful human contact I've had was getting water boarded in Advanced Beatings. A pretty girl with blue eyes, pretty much naked under me? I'm only human, this practically qualified as a romantic evening out, considering.\" \n\n\"I get that, I mean why only toward the end? A girl could take that as an insult\" \n\nI laughed. \"I'm not into rape. Doesn't do a thing for me. But when you smiled \u2013 probably thinking about how you were planning on smashing my balls \u2013 I knew that you knew it wasn't real.\" \n\nShe actually smiled at me. \"I really got my head straight when I got my teeth into your arm. That was when I really accepted that it was another training scenario. When I smiled it was because the thought struck me that if I stopped struggling, I might actually get laid for the first time in half a year. Hell, if I'd have just waited another 30 second to throw the dismount, I'd have had an orgasm.\" \n\n\"I wonder how the instructors would have handled that? Probably would have criticized our technique.\" \n\nShe snickered \"I can hear it now 'Agent, you need to put more power into your thrusts and your angle needs improvement.'\" \n\nShe buried her face in her hands as she fought to suppress her laughter, not entirely successfully, which had me fighting to do the same. \n\nThen she looked up at me, tears of laughter streaming from her eyes \"Can you imagine the T2 students?!\" \n\nAt that point we both lost it and it took a while to catch our breath. \n\nBefore we could continue our conversation, a slightly harried doctor breezed in and began to examine her, which resulted in her being handed a pair of crutches. He also put a wrap on my ribs, mostly to stabilize them so they wouldn't hurt as much. As usual, he didn't bother with pain meds for either of us, just some anti-inflammatories. Once in the main hall, as we turned and headed in different directions, she looked me in the eye and smiled. \n\nI watched her disappearing form and pondered the heat and moisture I had felt from her during the exercise \u2013 and against my arm as I carried her to the infirmary. I was pretty sure now it hadn't been all sweat. It only dawned on me as I got on the plane later that she still had my t-shirt. \n\n****Two Years Later**** \n\nThe Division Chief, Donna, had called me off of a well-earned leave with instructions to come in to the office immediately. So I headed in, unshaved, wearing sandals, shorts and a \"Joe's Crab Shack\" T-Shirt. As soon as I stepped past her secretary and into the conference room I saw the \"his-and-hers\" suits, with standard issue government filler seated at her table looking at me expectantly. Deliberately ignoring them, I turned to Donna. \n\n\"What's with Mulder and Scully here? Please tell me this isn't an assist to the Feebees.\" \n\nShe shot a glance at the two, who were looking me over with obvious distaste. \"Long term covert surveillance, they'll be in charge. This is coming down from the Director. We have to play ball \u2013 they need the language and tech capability.\" \n\nI rubbed the bridge of my nose and closed my eyes for a second. \"Donna, completely aside from my personal feelings about this, look at them; they might as well have 'F.B. fucking I.' stamped on their foreheads. Anyone with a traffic ticket is probably running from the building right now - there is no way a cover operation using these two will work.\" \n\nThe woman was glowering at me while the guy was trying to compose himself. Donna looked at me with exasperation, but she had to know this was coming. \n\nThe female agent finally spoke \"What's your damn problem?\" \n\nI yanked the side of my t-shirt up to expose the bullet scars on my side. \"Last time I played with you guys, one of your agents went all law-and-order cowboy and got three of us shot up, including himself. I recovered his gun and settled the issue, and in return your agency wanted to prosecute me based on my failure to follow instructions. I wasn't supposed to have a gun, so apparently, when he went down, I was supposed to just die in place. And if he would have waited 30 minutes like I told him to, the local LEOs would have helped take the ring down and there would have been no problems. But he didn't want to share the fucking credit.\" \n\nShe paused, glancing at her partner. To him she said \"I told you that report looked odd.\" \n\nBack to me \"I'm hardly going to go undercover, Executive Assistant Directors rarely do. For the record, I'm the one that squashed the intent-to-prosecute. The report just smelled wrong. Look, we brought an agent who is just as skittish about using untested military assets as you are of working with us. If the two of you give the operation a no-go, we'll look at different options.\" \n\nI bit my tongue and nodded rather than reply \u2013 an Executive Assistant Director (EAD) at the FBI was a little higher up the food chain than even I was prepared to tell to fuck off. Donna was looking a little too smug \u2013 we'd have to discuss this one later. \n\nA second later, the door opened behind me and a female voice, started \"Ma'am, the tech looks good, if they just train me on the equipment, we don't need...\" \n\nAs I turned, the voice drained away and she stood staring at me wide-eyed and mute. I was just as silent, lost in the impossible blue topaz eyes. \n\nShe found her voice first. \"Sergeant\" \n\n\"Agent\" \n\nI could sense the confusion from Donna and the other FBI agents. It was about to get worse. \n\n\"I still have your t-shirt. Have your balls healed?\" Her eyes sparkled with amusement. \n\n\"Oh yeah, they're fine. How's your ass?\" \n\n\"As good as new.\" \n\n\"You can keep the t-shirt. I was never at Rutgers.\" \n\nHer lips curved in a Cupid 's bow. \"I was planning on keeping it \u2013 it's my favorite sleeping shirt. The blood never did really come out, I forgot to wash it in 'Cold.' Set the stains permanently.\" \n\nDonna arched one eyebrow at me in amusement \"Friend of yours?\" \n\n\"Old school chum from St. Tristan's.\" \n\nThe agent gave me a wicked smile. \"We had a very short, very intense, very, very, physical relationship. I couldn't walk for a month.\" \n\nTwo could play this game, I returned her smile. \"She broke my heart, and my ribs.\" \n\nHer two supervisors looked confused and more than a little uncomfortable. The agent noticed and decided clarification might be a good idea. \n\n\"We were opponents in scenario based individual combat training during a specialized course for undercover operatives a couple years ago.\" \n\nThe male agent still looked lost, but the EAD nodded with comprehension. \n\n\"That course has a reputation for being rather brutally realistic.\" \n\nThe dark haired woman continued on to explain the scenario, although it sounded rather clinical and detached compared to my visceral and intense memories. At least she didn't mention the hard-on. \n\nDonna looked a little concerned. \"This may not work \u2013 I did my training there, too. I'm not sure how I'd handle trying to work with my former... opponent. And it has been nearly ten years for me.\" \n\nThe agent smiled \"I'll be fine. Not that it wasn't terrifying at the time, but it was a training scenario and he was following his instructions.\" \n\nDonna looked impressed, then turned to me. \"So are you willing to do this?\" \n\nI nodded, reflexively watching the agent out of the corner of my eye, \"As long as we can work out the details to make sense, I'm willing to work with her. We generally have the same training and she keeps her head under pressure.\" \n\nEmma. Her name was Emma. And she was brilliant. \n\nShe had done much of the planning for the operation and it didn't remotely resemble the usual cookie cutter goat-fucks that federal LEOs (law enforcement officers) usually came up with. Instead of surveillance vans disguised as telephone linemen or whatever, we were simply going to rent a house and work in the area. Emma had actually gotten her LPN license somewhere along the way and kept the license current \u2013 that way the FBI could put fake LPN documentation in a different name without taking risks that she would be over her head. With her working part time at a low-cost women's health clinic on the edge of the neighborhood and me working as a substitute teacher for the High Schools nearby, we had pretty good control over our schedules and ample time to work the target. We could hide in plain sight. Emma and I built our cover. We would present ourselves as newlyweds, who had spent six months apart because I had been teaching overseas to complete a scholarship requirement. ",
        "The target was a Romanian neighborhood where the FBI had multiple tips that weapons were being smuggled to drug cartels and, more importantly to me, terrorist cells in the US. Important to me because the anti-terrorism rules allowed me to be seconded to the FBI as a technical asset as a linguist. Several tips led to the same neighborhood, but none of them named specific people \u2013 the court order request must have been spectacular, because we had almost carte blanche for the surveillance based on \"Compelling need of the state\". We'd have a suite of cell phone intercept equipment, parabolic microphones and a plethora of other equipment ranging from lipstick cameras to audio bugs disguised as all kinds of items. \n\nWe spent the next four hours eagerly going over the framework for the operation \u2013 pretty much ignoring Donna and her supervisors to the point that they simply left us. Emma's attention to detail was spectacular. There were really only minor tweaks to be made, which was fortunate since we only had two weeks to launch. \n\nSince we'd be obvious on entry into the close knit immigrant community, we decided to 'hide' by making extra noise. The Friday before we moved in, I'd go through the neighborhood, leave notes on doors apologizing in advance for blocking the street with a rented moving van. When we arrived our car would have the residue of a badly scraped off \"Just Married\" soap writing. We'd have a half dozen men and women from both our agencies \"helping us move in\"; in reality they'd also be techs setting up equipment in the basement and attic of the house. Emma would drop by the clinic where her cover job was, on the same day. It worked beautifully, as did the rest of the operation. Due to classification concerns you will be able to read all about it in 75 years. Or so. Suffice to say six very bad men and one confused woman with very poor judgment went to prison. \n\nAs for Emma and I, it was six months of what can only be described as bliss. We meshed instantly \u2013 she was perfect; smart, beautiful, fun and understanding. We didn't even make a token effort to deny our mutual attraction, we were in bed together the first night. For the first month, I thought we were in lust, then I decided it must be mutual infatuation. By the fourth month, I was sure we were in love. We shared stories \u2013 about our childhood, about previous assignments. I told her about my two months in a Buddhist monastery hunting terrorist infiltration routes between long bouts of trying to stay awake during meditation practice. She told me about going undercover as a lesbian art dealer. Maybe a little too deep undercover since her and her \"partner\" ended up sleeping together a few times. After years at an all-girl boarding school, it was hardly new to Emma, but it was the first time for her partner who ended up leaving the Bureau, taking the Bar exam and was now living downtown with another woman. \n\nI bought her flowers, we went on picnics, and we had backyard barbeques with the neighbors. We even babysat for the neighbors on occasion. I could see Emma would be a perfect mom someday. It felt so real. But it wasn't. \n\nEmma's flaw was ambition. She wanted to succeed on her own, and nobody, nothing, was going to stop her. Her parents were very wealthy; not the kind of wealthy you are probably thinking of \u2013 way beyond that. She was essentially raised by elite boarding schools in Switzerland, and her entire childhood was one long training session to turn her into the ruthless shark lawyer her parents wanted to protect their business empire. \n\nShe hated it. \n\nShe hated every minute of boarding school, prep school and, while she excelled at Law, she hated that too. So when she graduated, instead of joining her one of father's firms she promptly applied for the FBI. She was going to fight her way up on her own. Her parents ranted, raved, threatened, and finally disowned her. \n\nIn the end, that ambition was too much. I was in love and so was she, but there was no way she would give up her dream \u2013 she had invested too much in it. She couched it in as gentle terms as possible, saying that neither one of us could afford to make commitments at this point in our careers since it would mean leaving covert work. And covert work meant we couldn't even keep seeing each other on the side \u2013 we had to break it off cleanly. Besides, it was dangerous, the odds of one of us being killed or having our work \"follow us home\" was far too high. She was adamant. It saddened her as much as it did me, our last month was full of soft kisses, tears and late nights holding each other. She clung to me every night as if her last breath depended on me, but in the end, she felt we had to part. \n\nThe mission ended quietly. Good missions do; they end in a quiet knocks on doors rather than loud gun battles. A quiet debrief or two. That's all. \n\nAnd a broken heart. \n\nIt was six years before I saw her again. \n\nI was just finishing my daily summary when the phone rang. \n\nShe obviously expected me to remember her voice \u2013 all she said was \"We need to meet at Walter Reed Hospital. In the entrance lobby. As soon as you can get there.\" \n\nThen she hung up. \n\nI ran a quick google search and headed out the door, telling my secretary I had an emergency. When I'd transitioned from military to civilian, I'd taken Donna's position along with her secretary. Donna had moved up as well; I still worked for her, but now I oversaw the operations. \n\nI found her in the center of the busy lobby \u2013 posture still straight, but her hair now shot through with iron grey. It looked good on her. Her expensive tailored outfit screamed \"senior government official\" even if the body guard standing slightly off to her left hadn't been so obvious. He was trying to keep his line of fire clear of a tall woman in a suit and a shorter woman in an overly colorful skirt and blouse. I could see his hackles rise as I headed straight for my caller. \n\nI kept my hands in the clear and nodded as I walked up \"Deputy Director.\" \n\nShe gave a terse smile \"A hair more polite than the first time we met.\" \n\n\"I may learn slowly, but I do learn.\" \n\nShe paused, a shadow passing over her face \"Emma... Emma got hit by a car bomb in Turkey a month ago\" \n\nI felt my heart stop. \n\n\"She will live. She's in an induced coma while they repair everything \u2013 she lost her right leg to the knee, part of her right hand and she will have to have plastic surgery on the right half of her face. She will live, but...\" \n\nI'm sure she said something else \u2013 she may have talked on for a while, but I was no longer listening. \n\nShe had the brightest blue topaz eyes I'd ever seen \n\nShe was peering around a rainbow scattered skirt, from under a mop of dark curls, held back by a pink ribbon. \n\nI know how the moth feels. I didn't think about it at all, couldn't think. I stepped over to her and knelt down. Fuck the expensive suit, I wasn't sure my knees would hold me up any longer anyway. \n\nSomebody else started to say something, but neither of us could hear it. Eyes locked in wonder. I knew. She knew. She spoke first. \n\n\"Where have you been?\" \n\n\"Chasing bad guys. But I'm done now.\" \n\n\"They won't let me see Mommy.\" \n\n\"That's because they don't know tough you are sweetheart.\" \n\nShe reached her hand over to take mine. Rainbow Skirt stared at us with an expression of horror. \n\nI stood up. \n\n\"Where's Emma's room?\" \n\nThe elevator ride up to Emma's ward was an experience. \n\nEllie. Her name was Ellie. And she was brilliant. \n\nFive years old, she loved gymnastics, horses and mango smoothies. \n\nEveryone else had sensibly stopped talking. By the time we reached the top floor, we were inseparable. Even Rainbow Skirt seemed to acknowledge it. \n\nI picked her up and headed straight for Emma's room. A nurse moved to block us, but the bodyguard waved her off. \n\nI felt Ellie tense and gasp in my arms as we entered. Emma was a mess. Bandages covered half her face, her left hand and what was left of her left leg were bundles of bandages. IV bags, oxygen and a half dozen hissing and lightly beeping machines crowded the end of her bed. I lifted Ellie up to lay against Emma's right side. \n\n\"Mommy's asleep, but I think she could use a good, long, snuggle.\" \n\nEllie smiled and curled right up against Emma. \n\nI turned back to the Deputy Director. \n\n\"Why now?\" \n\nShe paused for a thought \"Cathy and Monica's power of attorney runs out in a week. And Emma's parents are seeking custody.\" \n\n\"Emma would hate that. And against that kind of money, only the biological father would be sure to win, right?\" \n\nShe nodded \"Not that I am in the habit of explaining myself to anyone other than Congress, but she swore me to secrecy. Leaving you hurt her more than she would ever admit to anyone, but I could see it. She was trying to do the right thing.\" \n\nThe right thing, I thought, would have been to marry me and live happily ever after. This wasn't the time or place to argue that, though. \n\nShe continued \"It may be a fight \u2013 Emma's father is using his money to cause problems \u2013 Cathy and Monica were refused at the last minute when they tried to renew their lease on their apartment, so they have to be out next week. Monica's bakery has had four inspectors from different agencies in the last week. I am putting a stop to that, but it won't be long before he moves against her suppliers.\" \n\nRainbow Skirt and Suit \u2013 Monica and Cathy I presumed \u2013 stared at me. \n\nI decided to address them and get it over with. \"I am sure you don't trust me\" I held up a hand to forestall argument \"and why should you? You don't know me at all. So here's what I can offer. My farm is down the Green line, my house is plenty big enough for everyone \u2013 it's an old farmhouse with six bedrooms, not counting the basement. You can stay rent-free until Emma wakes up or you decide to move out.\" \n\nMonica stayed tight lipped, but a grim faced Cathy spoke up. \"Deal. Just so we can watch over Ellie. We promised Emma we would. And we don't have a lot of options.\" \n\nI suppressed a smile when I realized that Cathy had been Emma's \"partner\" in the Art studio. She eyed me suspiciously, but I decided not to broach the subject. Besides, Monica might not know \u2013 and I didn't need any more drama. \n\nI explained where the farm was and wrote down directions. She said they would come over after picking up some clothes from home. The electricity to their apartment had mysteriously shut off last night and they couldn't seem to find anyone to turn it on. \n\nMonica fixed me with a hard stare \"Don't get any ideas. Lose any weird male fantasy about the two of us walking around in panties all day.\" \n\n\"I have somewhat more important things to worry about now than your choice of underwear.\" \n\nI went back in to see Ellie, she was sitting up waiting patiently, gently stroking the side of Emma's face, while the nurse looked on in a near-heart failure. \"Are we going to live with you now?\" \n\nI couldn't help but smile. \"Little rabbits have long ears.\" \n\nShe grinned, a real grin. \n\nI pulled out my phone and pulled up a picture. \"I could use some help with Frankie.\" \n\nShe craned her neck to look at the picture \"He's SO cute! He's a pug isn't he?\" \n\n\"He's a little goober. And he could use a friend.\" \n\nShe giggled. \n\nBy the time they reached the house, it was nearly 9 PM. The two women walked in slowly looking around cautiously, but Ellie just sprinted past them screeching to stop just in front of me, almost nose to nose with a wildly wagging Frankie. \n\nThat was truly love at first sight; within seconds they were playing happily on the floor. \n\nCathy and Monica relaxed a tiny bit as I showed them around the house \u2013 a great rambling structure dating back to just after the Civil War. I'd ended up inheriting it and 72 acres from my Grandfather due to my interest in history, while my siblings had been given more land. I sold 30 acres of the land to finance restoring the house to its former gracious beauty. I'd updated it a bit in a lot of small ways that weren't obvious, but kept the historical ambiance. We selected a room for Ellie next to mine, while Cathy and Monica's room would be on the other side of hers. \n\nThere were a lot of adjustments to be made \u2013 Ellie had to get used to farm girl jeans, shirts and rather than dresses, frilly or otherwise. \n\nCathy \u2013 and especially Monica \u2013 had to learn to trust me \u2013 a trust that was neither easy to build or along an obvious path. \n\nI think Monica finally decided I could be trusted when Ellie got a stomach virus and I stayed up all night with her, cleaning up vomit, changing sheets and holding her. \n\nA few days later, while I was reading in the library, well after Ellie had gone to bed, Cathy, then Monica walked very deliberately through the library. In T-shirts and underwear. They wore what were obviously brand new \"Hello Kitty\" underwear. A very considered gesture of trust. It was never repeated, but the meaning was very clear. \n\nWe settled into a pattern \u2013 every night, Cathy, Monica or myself would stay for a few hours with Emma, listening to the machines. On Saturdays, Ellie would visit her for a few hours. \n\nAlmost a month after Ellie had moved in, the court date for custody came up. \n\nCathy and Monica walked to the front while I hung back \u2013 with Emma's boss. \n\nI finally saw Emma's parents \u2013 an exceedingly well groomed man with perfect hair and a five thousand dollar suit, alongside of an aristocratic grey haired woman in Vera Wang. They excluded wealth and power. And I could see why Emma had said she was surprised they'd managed to actually have sex to create her. They clearly disliked each other. \n\nAfter their lawyer wound down, I was gestured forward. Emma's father eyed me with surprise. Obviously his people had failed him \u2013 after all, they should have looked into why Cathy, Monica and Ellie had moved in with me. \n\nAt the Judge's prodding I produced the DNA reports, and explained that Emma's misguided attempt to protect my career had kept me in the dark about Ellie. \n\nTheir lawyer tried to recover \"So your work presents a danger to the child?\" \n\nI shook my head \"No, I no longer work in cover assignments \u2013 there will be no safety or instability issues.\" \n\nThe Deputy Director went on record to support my assertion. \n\nI further explained that Cathy and Monica were willing to assist me until Emma recovered. \n\nThe end judgment was essentially inevitable. Emma's father listened with the emotionless eyes of a shark \u2013 but her mother's blue topaz eyes seemed to radiate loss. As soon as the judge walked out, so did Emma's father, a cloud of assistants and lawyers trailing in his wake like debris pulled along by a current. \n\nEmma's mother stood in shock, just a driver standing next to her. \n\nI walked over. \"You are welcome to visit on Sundays. It's a farm though, so you'll probably want a pair of jeans and some boots. Call first.\" \n\nShe looked at me gratefully, eyes welled with tears. \"Th... Thank you. I tried to raise Emma the way I had been raised, but her temperament was different. I know I made mistakes with Emma, but I didn't realize how much she resented... resented everything. Until it was far too late to fix. I'd like to be in my granddaughter's life, even if only a little.\" \n\nI gave her driver the address and phone number. \n\nThe very next Sunday, she came by, after calling. And every Saturday after. \n\nEvelyn. Her name was Evelyn. And she was brilliant. \n\nShe wore jeans \u2013 a little too new \u2013 and boots \u2013 a little too fancy - and a plain t-shirt. And she showed up every Sunday. Without fail. Ellie took her on horse trails, picnics and built bonfires. \n\nEvelyn and her husband had not married for love- they were essentially pushed together to build a dynasty. On the day they married, the DJIA jumped 253 points. But they basically lived separate lives and much to her husband's disappointment, Emma turned out to be an only child \u2013 due to his health issues rather than hers. After he gave her a social disease, her efforts to produce another heir ended. Divorce simply wasn't an option \u2013 the financial quake would have been disastrous. \n\nEvelyn had houses in France, Portugal and New York, but she realized what she had lost with Emma and was determined to make up for it. She added an apartment in Falls Church. She put her foot down to stop Emma's father from pursuing any more legal \u2013 or illegal \u2013 actions. She let him know that if he pursued it further, she would divorce him and let the damage be done. Which was fine with me, as my menu of options went quickly to the dark side of human nature. \n\nIt was another three months before they let Emma fully wake up. And when she did we were there, Ellie sitting on the edge of her bed, me in the back corner of the room. \n\nWordlessly, she pulled Ellie in close and held her for a very long moment, tears streaming. I stayed back while she hugged Cathy and Monica. I let them talk. \n\nHer clear blue eyes settled on me and widened. Her mouth formed a tiny \"o\". \n\nFinally \"I'm so sorry.\" \n\nCathy and Monica scooped Ellie from the room, leaving us alone together. \n\n\"Sorry for what?\" \n\n\"For not telling you I was pregnant. For not telling you about Ellie. \n\n\"I can understand \u2013 you were up front about how you felt about our careers. You were trying to protect me as much as Ellie. I'm not saying it didn't hurt or that I'm happy to have missed her first five years.\" \n\nShe obviously didn't know what to say to that and a silence began to build. \n\nShe started again, hesitantly \"I kept having dreams about you.\" \n\nI smiled down at her and sat on the edge of the bed next to her. \"I was here reading to you about three days a weeks for the last few months.\" \n\nI reached over and took her hand. \n\nShe smiled softly, almost shyly. \"I missed you so much. I should have... \" she paused \"I don't know. I don't know how to make this up to you.\" \n\nI shook my head \"We'll have plenty of time to figure things out. Ellie will be glad to get you out to the house.\" \n\nShe looked a confused, so I had to explain about Cathy and Monica moving out to the house with Ellie. \n\nHer mouth tightened in anger when I explained about their lease \u2013 and dropped open in disbelief when I told her about Evelyn's visits. \n\nIt didn't take much argument at all to convince her to move in to the farm house, given the united front she face with Cathy, Monica, Ellie and me. And we smuggled Frankie in to support our claim. Which resulted in an epic chase through the halls and nearly got me banned from the hospital. Evelyn's status as a primary donor saved me too much trouble. \n\nIt took a month of Physical Therapy before she could come home with us. It was four months before she moved to my room. A move Ellie pushed for with all her heart. \n\nAnd we were still \"us\" \u2013 whatever chemistry we had was unbreakable. The scars and lost foot didn't matter to me at all and that made Emma's path easier. She'd given up covert work because of Ellie, and now she accepted that she could no longer do field work. She began working in oversight and ended up working her way to EAD herself. \n\nThe hardest part for Emma was accepting Evelyn \u2013 it was 4 years, and two more children before she trusted her completely. We ended up with two more houses on the property \u2013 Cathy &amp; Monica's house, and Evelyn's. Evelyn never wears Vera Wang anymore \u2013 but her jeans are well broken in. She still has expensive taste in boots though. \n\nEllie's first child \u2013 our grandchild \u2013 was only seconds old when I met her. \n\nHer name is Elisa. And she's brilliant. \n\nShe has the brightest blue topaz eyes I've ever seen."
    ],
    "authorname": "Todd172",
    "tags": [
        "betrayal",
        "modern",
        "secret agent"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/blue-topaz-eyes"
}