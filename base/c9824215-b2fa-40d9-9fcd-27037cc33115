{
    "title": "Visit to the Lingerie Store",
    "pages": [
        "Saturday \n\n\"Well? Will you do that for me? Jack?\"\n\nHe wasn't really focused on what she was saying. Anna was wearing a pair of white see-through small panties and matching bra. Her toned slender figure was accentuated by the flesh coloured high heels she was wearing. \n\nAnna was deciding what she should wear for their first shopping trip together. She was strutting around the bedroom deciding upon her outfit. Jack thought how she was dressed was just perfect as it was. \n\nHer breasts were were a perfect size for him. She had enough to create a nice cleavage and her bra had given them enough support to press them together. Her slim toned waist showed off her tanned body from time spent running in the sunshine. \n\nHer arse was perfect. A pert rounded peach. He just wanted to constantly stroke the curve of her cheek down to the top of her thigh. Her legs seemed to go on forever. Her thighs and calves were shaped and formed from years of dancing and hard work in the gym.\n\n\"Jack? Up here. Eyes north,\" she giggled. She had seen him carefully running his eyes over her body.\n\n\"Sorry. You just make it hard to concentrate,\" he replied.\n\n\"I can see I make something hard,\" Anna winked and looked down to Jack's growing erection -- obvious in his thin boxers.\n\nHe stared into her big brown eyes and she raised one of her eyebrows, \"I'm not apologising at all. You're so sexy and I'm just a mortal man. What do you expect? Even if you were dressed, it would be in this state,\" Jack joked.\n\nShe looked down at his erection again. She could make out the outline of his cock head through his underwear. Anna bit her lip and sighed. She could feel her juices beginning to flow. She sighed longingly and the shook her head, \"I said... I need to pick out some things today so will you help me decide?\"\n\nHe smiled and just nodded.\n\nAnna smiled back, \"My friend owns a store in town and I often get my things from there. I think you'll enjoy it.\" Anna turned away smiling to herself. He had no idea what she had in store for him.\n\nThey got to the store around 3:30pm. They walked up the street and Anna turned and said, \"here it is,\" she gestured with her arm to show the door.\n\nIt was a clean and modern looking store front. It had the name 'Ellie's' written in clear, white joined-up handwriting on the sign. There was nothing else to signal what type of store it was. The green wooden door had two large glass panels but the glass chosen was too dark to see anything inside.\n\n\"Looks nice,\" Jack said earnestly.\n\nAnna pushed the doorbell and a single clear bell ring went off somewhere in the building, \"I've know Ellie for years. She worked hard to build up her small business here. We help each other out when we can.\"\n\nThe door buzzed from the inside and Anna pushed it open.\n\nInside, the place was lit in a warm orange glow. Non-description instrumental music was playing in the background. There were rails of women's clothes to the left and right with the usual types of skirts, shirts, jackets and jumpers. Anna and Jack walked passed these through the middle of the store towards a clearly lit area where the till was located. Anna leaned against the glass counter top, looking down at the glistening jewellery. Jack tried to look further into the building but there was a thick, velvet red curtain hanging from the ceiling. 'A changing room' Jack thought.\n\nThen he heard her.\n\nJack turned to see high heels making their way from the curtain. The heels were black. The woman wearing them had black sheer tights on and her tight, black skirt stopped well above her knees. She wore a loose fitting red, silk blouse with the buttons almost up to her neck. Jack could clearly make out her ample breasts through the material though. They pushed the red silk out and made two smooth looking mounds on her chest. \n\nShe had long, naturally blonde hair that came down below her shoulders. It was pinned up at the top of her head to keep it from her eyes. They were blue, stunningly blue. She wore wide rimmed glasses which sat upon a thin button nose. Her full lips were painted with the same red coloured lipstick as her blouse. \n\nShe was beautiful. A head turner, Jack thought. \n\n\"Anna. Look at you. Gorgeous as usual,\" Ellie hugged Anna tight and kissed her on the cheek. Ellie's breast pushed tight into the slender frame of Anna. \n\nAnna did look gorgeous today, Jack thought. She had decided upon the underwear and heels he had already seen. She had placed a delightful summer dress over the top. The dress hung tightly over the curvature of her sexy, pert arse and it splayed out to cover her arse cheeks -- only just. The top half of the dress accentuated Anna's body and a 'V' line dipped down into her breasts creating a nice amount of cleavage. Anna's hair, as usual, was tied up. \n\n\"Ellie, this is Jack, Anna gestured to Jack. \n\n\"Finally, we meet. Anna has told me all about you,\" her eyes seemed to twinkle with the word 'all'. Ellie also quickly flashed down Jack's body. \n\nEllie then moved in for a hug. Jack could feel her breasts pushing against him and the he felt her lower body and crotch against his. He thought 'she smells incredible'. Ellie pulled away, smiling, \"Anna, I've prepared the things you wanted. They're all in changing room 3 round the back. Let me know,\" Ellie waved her hand as spoke. Anna looked towards the big curtain.\n\n\"Thanks Ellie. C'mon then Jack, let's go,\" Anna started to walk away towards the red curtain. Jack looked over to Ellie. \n\n\"Go on,\" she said \"she needs you in there.\" Ellie giggled and playfully pushed Jack towards the curtain. \n\nJack walked through the heavy curtain into a dimly lit corridor. There were doors on either side of the corridor with huge mirrors in between each door. The rooms must have been big just because of the space between the doors. Lights above each door shone a number out. Jack moved towards door number 3. He entered.\n\nThe room was big. The ceilings were quite high and the room was well lit. There were two comfortable looking sofas facing a small podium with a small table between them with water and two glasses. \n\nBehind the small podium was a curtain, a changing area. Along the side walls were huge mirrors which gave the room the feeling of vastness. On the wall, next to the door, was a panel of switches and dials and something that looked like an intercom. \n\n\"Sorry Anna, I didn't know I was coming in with you,\" Jack exclaimed as he looked around the room. But she wasn't in there. \n\nThen he heard her. \n\nShe was behind the curtain, moving around. \n\n\"That's fine Jack, just sit down and relax. I won't be long.\"\n\nJack moved across to the sofa suddenly fully aware that the mirrors on the side showed his every angle. He sat down facing the small raised podium. He raised his voice in order for Anna to hear as he spoke, \"this is a great place Ellie has here...she's nice and friendly too.\"\n\n\"Do you fancy her Jack?\" said the friendly voice from behind the curtain, \"It's ok, most people do, she's gorgeous.\"\n\nJack was a little lost for words, \"I...er...no, of course not...why...er...would...\" he never finished because Anna stepped out from behind the curtain, looking straight at him. \n\nShe had removed her summer dress and had managed to put on a pair of tight fitting leather trousers. Her high heels accentuated her strut in them as she strode towards the podium. She didn't have a top on and her breasts moved in her bra as she stepped up. \n\n\"Thoughts? Jack?\" she said in her playful authoritative tone. She slowly turned around to show how good her arse looked in them. All the while she kept looking back at him.\n\n\"Wow.\" It was all he could muster. The shape of her legs were really on show. Her arse looked incredible. He had seen it naked and it looked fantastic then but now it was just so well defined by the leather. \n\nAnna broke the silence, \"Is this sexy Jack? How does my arse look now? Do you like these trousers? Should I buy them?\" \n\nJack nodded. His cock started to stir. \n\n\"If I did buy them I could wear them for you. You could cum all over them Jack. Right...here.\" \n\nBiting her lip, Anna looked back at him and carefully placed a finger on her sexy arse. Jack couldn't speak, his cock was fully erect now so he shifted in his chair whilst nodding. Anna stood up and moved back to the curtain, she disappeared behind the curtain, closing it behind her.\n\nJack looked down at his cock. He rubbed his hand over the head of his cock. He couldn't believe how quickly his cock had grown erect. Jack knew she was changing again because he could hear her shuffling around behind the curtain. He wondered whether to keep stroking and he could cum but something was telling him that this show had only just started.\n\nThe curtain flew back and she strutted out towards the podium again. Heels clicking as she walked. \n\nAnna was wearing a very tight Lycra minidress. It was white and hung off her shoulders. It just about covered her pussy and arse. She stopped on the podium with her hand on her hip - thrust to the side. \n\n\"I like this one because it shows off my long legs. I know it barely covers my arse though,\" with that she turned around. \n\nJack looked at her sexy arse and he swore she had removed her panties and bra. There was no visible evidence. There couldn't be, the dress was so tightly fitted. \n\n\"I know it's tight but I like the way my breasts look too,\" she continued as she turned back round. She reached up and stroked her hands over her breasts. She lingered over her nipples and stroked around them, \"Jack...mmm...what do you think? Can you see my nipples in it Jack?\" \n\nHe could. They were straining against the Lycra now after her attention. \n\n\"Oh no, Jack my nipples have gone very hard and erect. Can you see Jack? Look at them.\" Anna pushed her breasts out and used her hands to force them together. Jack's erect cock was straining against the loose material of his trousers. \n\n\"Anna,\" he whispered, \"I'm so aroused right now. Can we go?\"\n\n\"No, Jack. I've got things to try on. You stay there and watch.\" Anna then moved towards him and looked down at his cock. She giggled and carried on towards the intercom. She pressed the button and a buzz sound echoed around the room, \"Er...hi Ellie. I need your help in here please. Thanks.\" Anna then moved away back towards the curtain. Jack watched her sexy arse sway away from him. He rubbed the head of his cock again whilst watching her move towards the changing curtain.\n\nSuddenly the door opened and Ellie entered after locking the door behind her and dimming the lights at the switches. She moved over to the sofa where Jack sat. \n\n\"How's it going Jack? Seen anything you like?\" She flashed a glance down to his cock and her eyes seemed to glisten and light up and she saw his erect cock. Ellie looked directly at Jack, raised a single eyebrow and whispered, \"I see.\"\n\nSuddenly the curtain opened again and Anna stepped out. She was dressed in a white corset with white suspenders. The corset hugged her wonderful figure and made her breasts stand out, looking voluptuous. \n\nThe white panties she was wearing were a little see-through and Jack could make out the strip of public hair she had shaved. Her legs looked phenomenal. The white suspenders had a frilly design at the top of them, delicately leading the way further up. Her calves stood out thanks to the white high heels she had on. \n\nJack's erection was really straining in his trousers. \n\n\"Well, what do you think?\" Anna asked the silent pair in the sofa.\n\n\"You look so sexy,\" Ellie replied, \"doesn't she Jack?\" and Ellie turned towards Jack. He nodded.\n\n\"Stand up please Jack,\" Anna instructed.\n\nJack shook his head, a little embarrassed.\n\n\"Come on Jack, do what she has asked. Stand up,\" Ellie repeated. \n\nJack stood up and tried to adjust his erection in his trousers. Anna stepped down from the podium and took Ellie's hand. Ellie stood smiling and joined Anna back on the podium. \n\n\"What do you think about the corset Ellie? Is it tight around my chest?\" Anna questioned whilst looking directly at Jack. Ellie followed Anna's gaze and she too gazed directly into Jack's eyes. \n\n\"Let me see,\" Ellie moved around behind Anna and moved a hand up the side of her stomach towards her breasts, \"this material is so soft,\" she whispered to Jack. \n\nJack looked on longingly. He was desperate to grab his cock.\n\n\"Jack,\" Anna whispered, \"take off those trousers and come a little closer.\" \n\nJack undid his belt -- all inhibitions now gone -- and slid his trousers off. He stood up and his tight boxers showed every line of his straining cock. He stepped forward so his head was level with Anna's midriff. Ellie stroked her hand further up to Anna's breasts. She cupped them in both hands and stroked over them towards Anna's nipples.\n\n\"Ohhh...mmm...does it...hmmm...feel too tight Ellie?\" Anna murmured.\n\nEllie looked directly into Jack's eyes, \"no Anna it feels...perfect. Let me check one more time.\" Ellie repeated her first movements but slower this time. Her hands grasped Anna's pert breasts and she squeezed them gently. \n\nIt made Anna gasp out loud, \"Ohhh, fuck. Look at Jack's cock Ellie. Can you see it straining in his boxers?\" \n\n\"It looks very hard,\" Ellie replied, clearly enjoying the show, \"I'd love to see it.\"\n\n\"Jack,\" Anna said, \"take off you boxers, let us see how hard you really are.\"\n\nJack slid his tight boxers down. The material pushed his cock down and rubbed gently against the head of his cock. He let out a quiet groan as they fell loose. He kicked them away. \n\nHis cock was like steel. The head was pulsing. He badly needed to touch it.\n\nThe girls giggled. \n\n\"Well, Anna the corset looks like it's the right size, how is the thong? Is it...tight? Do you want me to...check?\" Ellie questioned. \n\nAnna looked directly into Jack's eyes and just nodded whilst smiling at him. Ellie's hands slowly stroked down the bodice over Anna's soft, tanned skin. Then moved her hands down to the top of Anna's thighs. She continued her slow, teasing journey along to the top of the thong at the front. Jack could hear Anna's breathing, if was coming in short breaths now, she was desperate to be touched down there.\n\n\"Jack, hold your cock for me,\"Anna managed to say. \n\nJack instantly grasped his cock. He could see pre-cum starting to gather at the head already. He was desperate to give it a stroke. \n\nEllie's hand moved over the front of Anna's thong. It snaked down her pubic strip to her cunt lips. It kept going. Over her lips down between her legs over the material. \n\n\"Ohh fuck. That's...mmm...fuck. That's...good,\" Anna moaned. She moved her hips when Ellie had got her hand down between her legs and parted them so Ellie could get her hand down between Anna's thighs. Ellie moved her hand back up in the opposite direction it had just travelled. \n\nAnna gasped \"oh...that feels...oh god that feels so good. Mmmm...\"\n\nEllie pulled her hand away and moved away from Anna towards Jack. She stepped down from the podium. Anna's hand instantly went to her body, stroking up and down over her breasts almost swaying as she stood. She was watching what Ellie was doing. \n\nEllie moved towards Jack. She stopped right in front of him. He held his cock out in his fist. Ellie swayed and Jack could feel the material of her short skirt gently rub against the head of his cock. \n\nHe jerked. \n\nThe sensation was incredible. Ellie turned around to face Anna. \n\n\"Jack, no cumming yet. You get to cum when we decide. You got that?\" Anna instructed. \n\nJack nodded.\n\nEllie turned around to face Jack again and lowered herself down to her knees. Her face was inches from his cock.\n\n\"Look into her beautiful eyes Jack,\" Anna instructed, \"look at how close your cock is to that beautiful mouth.\" The head of Jack's cock was merely centimetres from Ellie's lips. Ellie teased by opening her mouth as if to take it in her lips but she stopped short and giggled. \n\nAnna started to remove her thong. She slid it down her legs and stepped off the podium. Then she sat down on the podium and opened he legs wide. Ellie was now on her knees in between both Jack and Anna. \n\nEllie looked across at her friend's pussy. It was clearly very wet. \n\n\"Wow, look at how wet Anna is Jack. She wants to cum, don't you Anna?\" Ellie whispered.\n\n\"Yes, I really do,\" Anna murmured. She placed her hand directly on her clit and started long, slow circular strokes, \"Ohhh...god that's good...mmmm...fuck I need to cum so bad.\" Anna moaned. \n\nEllie looked up at Jack watching this perfect woman masturbating in front of him, \"stroke it Jack,\" Ellie instructed, \"stroke that big cock for me.\" \n\nJack instantly started stroking. He stroked down and up three times and his balls started to tighten. He wasn't going to last long. \n\nElle watched him shake and she sensed what was happening, \"Anna, looks as though Jack here is already very close. I'm going to unbutton my shirt and if he makes it that far I'm going to let him cum all over my breasts. Here we go...one button...now the next button...\" \n\nJack had to slow down almost to a stop. He was desperate to cum on Ellie. \n\nHe glanced over at Anna and she was furiously rubbing her pussy now. Her hips were moving up and down in sync with her strokes. Jack could see her arse cheeks leaving the floor and then coming back down. \n\nHe looked back at Ellie slowly unbuttoning her shirt \"...the last button now...that's it\". Ellie opened her shirt up for him and he could see her big breasts under the shirt. She had ample cleavage. \n\nHe pointed his cock directly at it and started to speed up again. \n\n\"Oh...fucking hell...I'm so wet,\" Anna was saying as she sped up, \"nnnngg...look at her...fuck me...look at those breasts Jack...I want to see...ohhh god...I want to see you cum on them...oh god, oh god. Fuck... I'm cumming, I'm cumming!\" She bucked her hips faster and let out one long muffled scream.\n\nAnna's words and orgasm pushed Jack over the edge. He had stroked his cock for around 10 strokes in total and was now cumming. \n\nHe came all over Ellie's breasts. It dribbled into her cleavage and down into her bra. Some of it landed on her chin as she watched him cum. He milked the last drops of cum from his cock, gripping it tightly and jerking his hips as though he was fucking his hand. \n\nEllie looked up at him, \" I am so fucking wet right now,\" she said to him. Anna giggled at that comment. \n\n\"We'll take it all Ellie...\" Anna whispered \"...and we need an appointment next week, don't we Jack?\" \n\nJack couldn't speak. He just nodded and started smiling."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "ffm",
        "mutual masturbation",
        "lingerie store",
        "cum on breasts",
        "cum on tits",
        "tease",
        "instructions",
        "dirty talk",
        "voyeur",
        "dressing up"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/visit-to-the-lingerie-store"
}