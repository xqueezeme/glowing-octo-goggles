{
    "title": "Shifting Priorities",
    "pages": [
        "Author's Notes: \n\nThis was another quick little 'simple tale' that evolved into something unexpected. I rather enjoyed the ride. \n\nI hope you enjoy it too. \n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n******** \n\nShifting Priorities \n\n******** \n\nChapter 1 \n\nThe tour company bus was going to leave without him. \n\nThat thought circled his brain as he ran down the sidewalk towards the train station's parking lot. While most tour guests probably arrived on the 10AM train, Kyle had come in the previous night as he was supposed to meet his fianc\u00e9 Gwen at a quaint hotel in the small town. He'd flown to France from Canada and had taken an early morning train to reach the tour's starting point. Gwen was already in France working as an editor for one of the authors of the publishing house she worked for. \n\nKyle had booked this, very expensive, vacation to rebuild their relationship which had been going through a rough patch over the past few months. They'd been together for five years and both had a love for being outdoors and cycling especially. The couples and adults only cycling holiday was their chance to reconnect. He'd hoped to recapture the bliss of their love for each other. \n\nLuxury accommodations were a condition Gwen had insisted on, hence the choice of this particular tour company and package. He'd tried to argue for a more affordable trip but she'd told him flat out if he wasn't willing to invest his money in their relationship there was no point. \n\nSo here he was in France, but the trip, so far, hadn't turned out as he'd hoped at all. \n\nThe previous day as he'd checked in, instead of finding his fianc\u00e9, he found a letter from her at the reception desk. He'd taken it to his room to read. \n\nGwen wasn't joining him on the vacation. In fact, she'd never intended to. At her request, he'd paid the full price for their vacation and then some, digging deep into the savings he'd worked so hard for. She'd written that this was punishment for not giving her the lifestyle she deserved and it was the final lesson he'd needed to learn from her. \n\nInstead of joining him, she was going to marry the author. He realized she'd become wife number three for the man. The author was wealthy, worldly, and eighteen years older than his twenty-five. Gwen was just twenty-four so her forty-three-year-old husband had himself a new trophy wife. \n\nKyle had met Gwen in college. He was taking an Investment Management course and she was in a Publishing course, and he'd fallen for the petite brunette hard. She was 4\" shorter than his 5' 10\" and beyond lovely. Short, tousled black hair, large blue eyes behind serious black rimmed glasses, cute button nose, and a wide, friendly smile. She kept her body trim and fit and was delighted that he was willing to follow her request to get his body in shape as well. Under her coaching he worked hard and quickly lost the soft pudginess on this frame. Muscles grew and hardened and he even stopped eating the foods he liked. He endured this willingly as it kept a smile on her face. He adjusted to his new fitness regimen and diet as her happiness was his greatest joy. \n\nShe'd proven to be more experienced in bed than him but he was a quick learner and she taught him much about what to do to make her happy between the sheets. Gwen was his first and only. \n\nThose early days had been very exciting and they'd discovered a mutual love for cycling. \n\nHe got a good job once he graduated and so did she. They had rapidly growing careers and supported each other during their upward climb through their respective positions. Kyle thought they had a really good thing going. \n\nNow with her final act of cruelty, he knew he'd been the only one in the relationship who thought so. \n\nOnce he'd finished crying after reading the letter, Kyle had wandered down to the bar feeling like he had a ragged hole in his heart. He tried to fill that hole with scotch. He'd barely managed to get back to his room and slept through his alarm this morning. \n\nHe was damned if he was going to lose all of the money on this trip. He loved cycling, it wouldn't betray him and rip his heart out so viciously as Gwen did, so he decided to proceed with the trip on his own. \n\nHe just had to get to the bus before it left without him. \n\nRunning with a hangover wasn't how he wanted to start his vacation. But then, neither was discovering he'd been dumped. \n\nHe sighed with relief as he saw the tour company van was still there and they were only beginning to load the luggage into the trailer. A passenger van was parked behind the trailer. \n\nA cheerful, young blond woman wearing the jersey of the tour company and carrying a tablet PC turned to smile at him as he arrived out of breath. \n\n\"Good morning! You made it!\" she said with a grin. \n\n\"Almost didn't,\" he gasped. \n\n\"Your name?\" she asked. \n\n\"Kyle. Kyle MacDenny.\" \n\n\"Ah! Here you are!\" she said looking at her tablet. She ticked the box next to his name and saw the name linked to his. She looked up and past Kyle. \"Will Gwen Carrington be joining us soon? We need to get on the road.\" \n\n\"She's, uh, she's not coming,\" he said with a distinctly uncomfortable look on his face. \n\n\"Oh! Oh, ok, well... let's get your bag stored and you can take a seat in the van.\" She smiled awkwardly at him and made a notation on the tablet to indicate the cancellation. \n\nHe sighed and put his duffle with the other luggage being loaded into the trailer. He nodded to the tall, dark, and handsome man handling the luggage. Kyle turned and came face to face with an equally tall and lovely blond woman with a prominent, strong nose and a long ponytail who was helping the man with the loading. He smiled at her as well. Both were slim and very fit looking in their matching tour jerseys so these were obviously the other guides. He saw a couple and a mother and daughter standing on the sidewalk next to the van. He smiled and nodded to them then climbed inside. \n\nThe back of the van was equipped with two rows of three seats and a third row for four. Ten seats. He wondered if they rented the vans based on the size of the group they had. He made his way to the back row. \n\nHis head was really thumping by this point so he almost missed the pleasant greeting from a petite red haired woman seated in the middle of the middle row. She was sitting next to a large bear of a black man who was snoring against the window. \n\n\"Sorry, bit of a headache this morning. Good morning, I'm Kyle,\" he said, tucking his small shoulder bag on the van's rear bench as he turned to her. \n\n\"I'm Kimberly,\" she said as she reached out her hand. He shook it. \"The big guy next to me is my husband David. He had a few too many glasses of wine last night,\" she said with an embarrassed eye roll. \n\nKyle gave her a smile as he touched his temple which continued to thump. \"Then I can sympathize with him.\" She gave him a false scowl then grinned as he moved back to drop himself on the bench. He slid himself along the bench to the window and leaned his left temple against the glass as the cool surface made his head feel a little better. He let his eyes close and just listened to the people boarding. Kimberly was greeting everyone as they climbed inside so he guessed she was a very social person.  \n\nWhen a soft weight landed on his right hip Kyle's eyes flew open. He looked into the shocked and apologetic eyes of a woman who was moving back to the middle of the seat. She seemed a little older than he was but had a kind of... classic Hollywood allure. Gwen had been overly fond of those old movies. This woman looked... like a brunette version of Grace Kelly. That lovely auburn hair was pulled back and fell to her shoulders. She was fairly slim but she'd felt pretty soft when she'd landed on him. \n\n\"I'm so sorry about that!\" she gushed, her British accent catching Kyle's ear. \"My clumsy daughter knocked me as I was sitting.\" \n\nHe smiled at her. \"Not a problem.\" \n\nShe smiled gratefully. \"I'm Helen.\" Gesturing to her right she continued. \"This is my daughter Skye.\" \n\n\"Hi, I'm Kyle,\" he replied and nodded to the younger version of Helen sitting on her opposite side. \n\n\"Are you travelling alone?\" Skye asked, her accent as thick as her mother's. \n\nHe opened his mouth to answer but there was a noise from the front of the van. He closed his mouth and just nodded as he looked forward, missing the grin on Skye's face as she nudged her flustered mother. \n\nThe woman with the tablet was smiling at the group before her. \"Ok, we're all here and the bags are loaded in the trailer. My name is Vivian Dalton but you can call me Viv and my partners are Dita Marek who will be driving the support van behind us today and Jules Michel who's in the driver seat next to me.\" The man waved with a smile. \n\n\"We will be with you for the next six days, riding through the beautiful French countryside. We have nine cyclists with us this trip, only one cancellation. That's a good size group. Not too big so we shouldn't lose more than two of you. I'm kidding!\" The group chuckled politely at her silly joke. \n\n\"With the GPS bike computers and two of us on our bikes with you at all times you won't be getting lost. From the survey you filled out we know we have a good mix of skill levels. From the elite,\" she gestured to a man in the first row with salt and pepper hair and he pumped his fist enthusiastically. \"To the casual.\" She gestured to the platinum blond woman sitting next to the elite cyclist. The woman just raised an expensively manicured slim hand. \n\nVivian went over the basic rules and how they would support the riders during the rides. She explained how the accommodations would work and which meals they would be responsible for managing on their own. \n\nThen it was introduction time. \n\nMr. Elite Cyclist was first. He turned to face the back. Kyle saw he was probably in his fifties but he seemed to be full of vitality. \n\n\"I'm Albert Hollings. I'm a cardiac surgeon from Santa Barbara, California.\" He smiled and nodded to the others. \n\nThe woman next to him turned to face back and Kyle saw she was much younger than her... husband? Maybe in her early thirties? She was also very beautiful though her symmetry may have been assisted by surgery. She'd likely seen the inside of spa's on a frequent basis as well. Still, her looks caught the eye which was obviously her goal. \n\n\"I'm Fiona Hollings. Unlike Albert, I'm more into yoga and going to the gym so I hope I won't slow everyone down,\" she said with a smiling pout. With her full lips that pout was significant. \n\n\"You'll likely be keeping me company then!\" the woman seated next to her said with a big smile. \"I'm Larissa. I'm a casual cyclist as well. I just ride my bike to work and back. My husband Carl and I are from Boulder, Colorado. I'm a dental hygienist.\" She had short brown hair, a pleasant round face, and a sunny disposition. Nothing surgically enhanced for her. \n\nKyle guessed her age to be in her early thirties as was her husband. He saw her getting along with Kimberly quite well. \n\nSeated directly behind Larissa, her husband spoke next. \"Carl Burkette. I'm a bank manager. Larissa is being modest about her riding. We also ride our bikes on the weekend though that's the only riding I do.\" \n\nCarl looked like he was carrying extra pounds on him. With Kimberly sitting between him and her husband she looked especially tiny. \n\n\"I'm Kimberly Wallis. I'm an Administrative Assistant at the Children's Hospital in Philadelphia. I love cycling and try to ride every day! I bully this big guy into joining me as often as he can,\" she said gesturing to her husband. \n\nThe man was awake now and gave his wife a weary look before he addressed the others. \"I'm David. I'm regional manager for the Sparkle Beverage Company in Philadelphia. I don't ride much. I prefer football. I played it in college.\" \n\nFaces turned in his direction and Kyle sat up a little straighter. \"I'm Kyle MacDenny. Investment Manager for an investment house in Vancouver, BC.\" He saw some confused expressions. \"Canada.\" Awareness dawned. \"We're- I'm a big fan of cycling,\" he finished awkwardly. Speaking as a couple was a habit he needed to break himself of, soon! \n\nHe glanced over at Helen who was watching him. She smiled then jumped a little. \n\n\"Oh! Me! Well... my name is Helen Livingston and I'm from London, England. I'm between jobs at the moment. Taking a little break. I've been trying a number of outdoor activities to determine which one I like best. Cycling is my current favorite but I'm not much more than a casual rider.\" She looked to her daughter. \n\n\"My name is Skye. I'm here with my mum to enjoy some quality time with her and have some fun!\" the young woman enthused, bumping shoulders with her mum. \n\n\"That's wonderful! So we have six Americans, Two Brits, and a single Canadian!\" Vivian called out. \n\n\"Are you single?\" Skye asked Kyle boldly. \n\n\"Skye!\" Helen gasped. \n\nKyle was nodding before he caught himself and looked away from the grinning girl. \n\nVivian got their attention once more. \"I'm American too, living my dream here in France. My boyfriend is on a professional team and rides in the Tour de France. Jules was born here so his French may be a little better than mine and Dita is our resident Czech. Between the three guides you have all the translation services you'll need for the tour, though my Canadian is a little rusty. Sorry.\" \n\nLaughter erupted while Kyle just smiled and nodded. \n\n\"Seriously though, if you have any questions please just let one of us know. We're here to make your trip the best one possible. We'll be reaching our start point in about an hour where we'll have lunch then get the bikes all settled for your first ride this afternoon. The route is fairly easy but very scenic. For now just sit back and relax,\" Vivian explained. \n\nKyle took her advice and closed his eyes to will his headache away. \n\nHe hoped the riding would make up for the rough start this trip had begun with. \n\nChapter 2 \n\nThe road hummed happily under the wheels of his racing bike. Gwen had insisted that he spend the extra to get them the upgraded bicycles so here he was enjoying the perk regardless of her spiteful intent. \n\nWhen he discovered that Kimberly, the sole female racer in the group, would fit the upgraded bike he'd already paid for, he offered it to her. \n\nHe'd endured her squeals of joy and hugs and she hadn't stopped gushing to him about how amazing it rode. Her incessant chatter was driving him nuts. \n\nWhen Albert, also riding one of the upgraded racers, shot away from the front of their group, Jules followed and Kyle saw Kimberly's muscles twitch so he told her to give chase. To really push her bike to its limit. And herself. \n\nWith a happy smile to him and a glance at her husband she was off like lightning. A minute later the rest of the group was happily riding along in relative silence. \n\n\"Thank you.\" \n\nKyle looked over at David and nodded with a smile. \n\n\"Telling her to chase him was genius. It's so much quieter now!\" the husband said, sighing in relief. A few of the others chuckled at his look of happiness. \n\nKyle grinned as he understood exactly how the man felt. \n\n\"You're riding one of those fancy bikes, why aren't you racing ahead too?\" Skye asked him as she came up to his side. She had the flat bar model of the standard bike and seemed to have no trouble riding it. \n\n\"Today's ride is short enough. I thought I'd just enjoy the scenery on this one,\" he replied. \n\n\"So, who was the other bike originally for?\" she asked and Kyle heard her mother making another sound of protest at her daughter's boldness. \n\nHe sighed. Maybe it was better to get it all out now so he wouldn't have to deal with it the entire trip. \"I was supposed to be taking this trip with my fianc\u00e9 but she chose to elope with an author she worked with instead.\" \n\n\"Shit! This is an expensive trip! You should have cancelled and gotten your money back!\" David blurted. \n\n\"I didn't find out until last night.\" \n\nKyle heard exclamations of shock from several of the riders around him. \n\n\"She waited until last night to tell you?\" Skye asked in surprise. \n\nKyle saw this story was growing so he tried to sum it up quickly. \"She was working here in France and I was to meet her at the hotel last night. When I arrived there was a letter from her saying she'd run off to get married to this other guy and she'd only had me pay for this trip, with the upgrades, to punish me for not 'giving her the lifestyle she deserved'. This was the first time I'd heard our lifestyle wasn't meeting her expectations.\" His heart was aching but he shrugged. \"I could have just gone home but I'd booked the vacation days, the trip was paid for, and I love France and cycling. I'm going to enjoy myself!\" \n\n\"Good for you!\" David said. Speaking quieter, he glanced at the others then back. \"I think you dodged a bullet.\" \n\nKyle grinned at him and nodded. He was beginning to think so too. He saw his story was being relayed to the other riders in the group. Hopefully that would be the end of the speculation. \n\nA short while later Fiona made her way up to ride next to him. Now that he could see her properly he let himself take a quick look. She was maybe 5' 6\" and looked especially petite leaning over her handlebars. Her platinum blonde hair was tucked up under her helmet but it still reached her shoulders. She had big Hollywood sunglasses hiding her eyes. She looked just a little winded so Kyle thought she was doing fine. He smiled to her and she returned it. It took a great deal of effort to keep from staring at her large but obviously fake tits squeezed into the cycling jersey she wore. \n\n\"I heard what happened,\" she said. \n\nHe picked up what she meant pretty quickly so he just nodded. \n\n\"Are you rich?\" she asked and he looked at her with wide eyes. \n\n\"Am I rich?\" \n\n\"Yes, are you rich?\" she asked again. \n\n\"That's a rather personal question,\" he replied. \n\n\"That's silly. It's a simple question!\" she responded with a frown and that pout. \n\n\"It's actually not and why are you asking it at all?\" he asked. \n\n\"You said your fianc\u00e9 left you because she said you weren't 'giving her the lifestyle she deserved'. If you're rich and she felt neglected...\" \n\n\"Really?\" he asked in surprise. Then he saw she was still waiting for an answer. \"Let me clarify things for you. No, I'm not rich, just careful with my money. That said, I never neglected Gwen in any way. She was my world. I gave... I gave her everything! What she wrote doesn't indicate how I treated her. It's how she expects her new rich husband to treat her. I wish her luck with that. She's wife number three for an asshole who knows a thing or two about pre-nup agreements.\" \n\nWhen she pouted again as if his answer upset her, he'd had enough. He mashed the pedals and leapt ahead of the group to be alone. He took deep breaths and kept his eyes on the scenery and soon he was feeling a little better. \n\nThey eventually found their way into the parking lot of a huge chateau, their first overnight stay. Vivian was there with Dita by the support van. \n\nJules was also there with Alfred and Kimberly, the latter still chattering excitedly about the ride. Alfred was looking pretty happy too. He'd gotten his race companions after all. \n\nAs Kyle stopped next to them Alfred walked over to shake his hand. \n\n\"I wanted to thank you for upgrading Kimberly's bike. She's an amazing rider and gave me quite a race to the finish line! We almost left Jules in the dust!\" \n\nKyle smiled at the man's excitement as Kimberly rushed up to give him another hug. He looked over their heads to Jules who smiled and shook his head slightly. Kyle didn't think these two could outride someone who made his living on a bicycle. ",
        "\"Thank you! Thank you! Tha-\" \n\n\"Kimberly! Enough! You're very welcome! I don't need to hear you say it anymore. I'm just glad the upgrade didn't go to waste,\" Kyle said firmly but with a smile and the woman grinned back, nodding. \n\nThe remaining members of their group arrived and Vivian got their attention. \n\n\"Just leave your bikes with us but take your helmets with you. Your bags have been taken to your rooms. Check in with registration to get your keys. Dinner tonight is in the chateau's dining room and is covered except for alcohol. Additionally, the bar afterwards, should you choose to visit it, is not covered,\" she explained. \"We'll meet you back here tomorrow morning at 9AM. Have a lovely night!\" \n\nThey made their way inside to the reception area, admiring the d\u00e9cor of the huge building on the way. \n\nKyle somehow ended up being the first in line. He smiled at the young woman behind the desk. \"Hi, Kyle MacDenny.\" \n\n\"Ah! Monsieur MacDenny! We have the Princess Suite for you,\" the woman said in a charming French accent he could have listened to all night. Then what she said about his upgraded room sank in and it all came back to him. She glanced at the screen with a curious frown then looked back to see his pained expression. \"Will Mrs. MacDenny be joining you? I do not see that her bag was taken to the room.\" \n\nHe shook his head. \"There is no Mrs. MacDenny. The woman I was supposed to be traveling with... made other plans. I don't need a suite. A smaller room would be fine.\" \n\n\"I'm sorry. We have no other rooms available,\" she said with a sympathetic expression. \n\nHe turned to see Carl and Larissa watching him. \"Would you guys like to switch rooms with me, no extra charge?\" \n\n\"What's wrong with your room?\" Carl asked. \n\n\"Nothing. The Princess Suite is just bigger than I need,\" he sighed. \n\n\"Yes! We'll take it!\" Larissa yelped happily, clapping her hands. Carl snorted in amusement. \n\nKyle smiled and turned back to the woman at the counter. They made the switch and the staff were sent to move the bags. \n\nOnce Kyle was squared away in his very nice smaller room he cleaned up and put on some nice clothes for dinner. He had time so he wandered the grounds, soaking in the ambiance. There was a small lake with swans floating back and forth. He spotted Helen and Skye going for a walk. They spotted him and Skye changed their course to join up with him. \n\n\"Hi! I heard you gave up the Princess Suite to the Burkettes.\" Helen said with a twinkle in her eye. \n\n\"Yeah, I thought the whole Princess thing would ruin my image as a lone wolf renegade,\" he said with a small grin. \n\nHelen giggled and even Skye cracked a grin. \n\n\"Did you get a special room at each of the chateaus?\" the daughter asked. \n\n\"No, not all of them offered upgrades. I called each of the chateaus on the itinerary to see what was available and booked what I could,\" he said with a shrug. \n\n\"Will you be surprising others with free upgrades in the future?\" Skye asked. \n\n\"Skye! You're such a cheeky girl!\" Helen scolded her daughter who was showing no remorse. \n\nKyle grinned at the mother. \"Yes, she is. But she may also be right. We'll just have to see how it goes. You never know, some days I may feel like a princess.\" \n\nThat caught Helen off guard causing her to snort. She burst into an almost hysterical giggle at the sound he'd surprised from her. He watched her with a big grin and she swatted his arm gently as her face warmed with a blush. \n\n\"Would you like to join us for dinner tonight?\" Skye asked. \n\nRealizing he wasn't looking forward to being by himself he nodded gratefully and Helen smiled happily at him. \n\nThey made their way inside and saw some of the others were already seated at their tables. Helen informed the hostess that Kyle would be joining them and she had a place setting added to their table. \n\nThe food was excellent and Kyle splurged and ordered a bottle of wine with dinner. \n\nHelen proved to be a bit of a lightweight when it came to alcohol and became increasingly giggly. Kyle was feeling just the hint of a pleasant buzz but Skye showed no effects at all. \n\nWhen dinner was over they made their way into the bar to get another drink. They were joined by the rest of their group. The bartender smiled as he saw the customers entering. \n\nKyle, Helen, and Skye took seats at the bar and placed their orders. \n\nThe Burkettes stopped beside Helen. \"Kyle, thank you for switching rooms with us! The Princess Suite is gorgeous!\" Larissa gushed. \n\n\"Your welcome. That's great!\" he replied with a smile. \n\n\"It's huge! Is your room nice?\" Carl asked. \n\n\"Yes, it's perfect for me. Not too big,\" he nodded. \n\n\"Apparently, he has a few other special rooms booked so we'll just have to stay on his good side to have a chance to get the next upgrade!\" Skye said, teasingly, bouncing her eyebrows at the ladies. \n\nLarissa and Helen burst into giggles as Kyle shook his head with a grin. \n\nThey ordered drinks and talked a little about their jobs back home. \n\nAlbert walked in with Fiona on his arm and Kyle thought they looked like the picture perfect example of a rich husband and his trophy wife. The man couldn't have looked more pleased with himself and Fiona was dazzling in that airbrushed, artificial perfection, her hair gleaming under the lights. Her blouse struggled to contain her tits and exposed quite a bit of cleavage, gold chains disappearing between the large orbs. \n\nDavid and Kimberly walked in directly behind the Hollings, the petite redhead giving Kyle a big smile and a wave which he returned. \n\n\"What are we drinking?\" David asked. \n\nHelen and Skye gestured to their wine glasses. \n\nKyle lifted his tumbler. \"Scotch.\" \n\nThe big man's eyes lit up. \"I knew there was something I liked about you!\" He gestured to the bartender to set him up with a scotch as well. \n\nKimberly frowned at her husband disappointedly. \n\nAlfred ordered himself a scotch while Fiona asked for a Black Russian. Kimberly just ordered a club soda as she said she didn't drink. \n\nCarl and Larissa decided to stick with cola as they'd had wine with dinner too and were concerned about the difficulty of the next day's ride. Apparently there would be some moderate climbing. \n\n\"I thought you two were from Boulder, Colorado. I'd have thought you were used to hilly rides?\" Alfred asked. \n\nCarl answered for them. \"We stay out of the mountains for the most part. We walk the higher grades.\" \n\n\"Just ride at your own pace,\" Kyle said with a smile. He was feeling very relaxed. \n\n\"Since you're riding one of the faster bikes, are you going to join us elite racers out front tomorrow?\" Alfred asked Kyle. There was definitely a challenge in his voice and Kyle just smiled at the man. \n\n\"We'll have to see how the spirit takes me. I intend to ride hard on a couple of days at least, just to see what the bike can do. Maybe it will be tomorrow, maybe not.\" \n\n\"Why did you get the better bike if you aren't going to use it to its full potential?\" Alfred pushed with a grin. \n\n\"He got the upgrades because his ex-fianc\u00e9 demanded them to punish him before she dumped him,\" Fiona told her husband keeping her eyes on Kyle. \n\nAlfred had obviously missed the story when he'd raced ahead. \"Ex-fianc\u00e9? Is that who you were bringing with you on this trip?\" \n\nKyle nodded as his mood began to sour. He gestured to the bartender for another. The rest moved to tables leaving Kyle, Helen, and Skye at the bar. \n\nHelen saw his frown and put her arm around his back to give him a friendly hug. \"Cheer up! It's her loss, I'd say!\" \n\nKyle smiled at the woman who was leaning against him in a rather familiar way. Definitely a lightweight. \"Thanks Helen. That's sweet of you to say.\" \n\nThe woman grinned and squeezed him again before turning back to her drink. \n\nKyle looked over at Skye who was giving him the oddest smile. \n\nA short time later Alfred returned to the bar for refills. \"What's this I hear about free room upgrades?\" the man exclaimed at Kyle's elbow. \n\nHelen spun around to address the man. \"This fine young gentleman purchased a few upgraded rooms on our trip. He generously offered the first one to the Burkettes.\" \n\nSkye leaned forward to join in. \"If he feels so inclined, he might offer the next one to you and your missus.\" \n\n\"Maybe we could race for it?\" he asked Kyle. \n\nKyle knew Alfred was burning to race somebody on this trip. The tour they were on didn't really have too many days where the route was really challenging but there was an alternate route on day three which could be used to test their mettle. He turned to look at Alfred whose eyes were twinkling with excitement. The man was definitely fit and was an avid cyclist. Kyle was no slouch himself. It would be kind of fun pushing himself to chase the 'elite rider'. He grinned and the other matched it. \"Day three, alternate route? I have an upgraded room in the chateau that evening.\" \n\n\"YES! You're on!\" Alfred cheered and held out his hand to shake on it. \n\nKyle laughed and shook the man's hand. It looked like he'd just made the man's whole trip. \n\n\"Wait! You get the upgraded room if you win. What does Kyle get when he beats you?\" Skye said, intentionally saying 'when', not 'if'. Her eyes flashed with challenge. \n\nAlfred barked a confident laugh. \"He has all of tomorrow to think of something. And all of the following day to realize it didn't matter. I won't lose.\" \n\nKyle just shook his head with a grin. The man looked like he had reason to feel that confident. Kyle was just going to push himself with Alfred's help and see how hard he could ride. It didn't really matter to him if he won or not. \n\nThe bartender handed Alfred his scotch and another Black Russian for Fiona. He walked away drinks in hands, gleefully chuckling. \n\nKyle sipped at his drink as he watched Alfred telling his wife, the Burkettes, and the Wallis' about the challenge. Surprised eyes turned back in his direction and, feeling silly, he raised his tumbler in salute. They raised theirs in return. Then his eyes locked on Fiona's as she smiled and nodded ever so slightly to him. \n\nWhen he turned back to the bar, Skye was watching him with a knowing smile. She leaned in. \n\n\"Are you going to ask that blow-hard for a tumble with his wife?\" she whispered. \n\n\"What!?! No!\" Kyle exclaimed in shock. \n\n\"It would serve him right for being so overconfident!\" Skye said with a shrug and a smile. \n\n\"What would?\" Helen asked having missed the first part. \n\n\"Nothing, just more cheekiness from Skye,\" Kyle said to nip the conversation in the bud. \n\nThey got another drink then joined the others at the tables as they talked about cycling and other ways they relaxed. Fiona tried to convince everyone how yoga would improve their lives. David asked her to demonstrate the breathing exercises three times before she caught on that he just wanted to see her blouse open with each inhalation. She shook her finger at him with a fake scowl but Albert laughed the loudest. \n\nKyle glanced at the clock and decided he'd head back to his room to get some sleep. He was still feeling the remnants of the previous night's binge. \n\n\"It's been a lovely night but I think I'll head off to bed,\" he said with a smile for the others. \n\nHelen pouted and Skye stood up as well. \"I think it's time for us to go as well.\" Her mother looked up at her in surprise but got to her feet at her daughter's tug. \n\nAlbert snorted. \"Isn't this backwards? Aren't the young supposed to stay up all night partying and the oldsters go to bed early?\" \n\n\"I'll take that as a compliment!\" Helen teased. At 36, she was the second oldest in the group, second only to Albert's 56 years. \n\nSkye moved her mother along but Helen's stability wasn't so good with the wine in her system. \n\n\"Ooo! The room's spinning a bit, dear,\" Helen sighed. \n\n\"Kyle, there's no elevator in this building. Would you help me get mum up to our room?\" Skye asked sweetly. \n\nHe looked at her then Helen and saw the shy smile on the mother's face. He smiled. \"Sure.\" He wrapped an arm around the woman's back and walked her down the hall to the stairs. He helped her up to the second floor, the whole time her body was pressed tight against his, hip to hip. She clung to his hand on her hip as it supported her. \n\nAs they climbed he heard her breathing oddly so he glanced over. Her eyes were half lidded and she was biting her lower lip sexily which began to wake parts of his anatomy. Seeing such a seductive expression on her lovely features was more than a little stimulating. \n\nHe glanced over at Skye and she was smiling to herself. They finally got to the room and Helen was breathing pretty hard at this point. \n\n\"Sleep well-\" Kyle began. \n\n\"I think mum is going to need a little more help before that's possible, Kyle.\" \n\nHe looked at Skye in question and saw she had a wicked grin on her lips. \n\n\"You've gotten her all hot and bothered after all. You can't leave her in that state!\" Skye said and opened the door. Helen was blushing furiously at her daughter's words but she wasn't arguing. She lifted her eyes to his hopefully then her eyes tracked downwards and saw he was showing against his pants. Her smile grew. \n\nKyle was out of his element here. \"I don't think-\" \n\n\"We'll be discreet. No one needs to know. Just a little bit of fun. A release of some pent-up tension and frustration. We could all use a little of that it seems!\" Skye grinned, also looking at the bulge in his pants. \n\nKyle's eyes widened as Helen took his hand and Skye gently pulled on his other one. He was stunned to find himself following them into the room. \n\nSkye closed the door and locked it as Helen led him further into the room. He quickly glanced around and saw there was just one decently large bed. He supposed mother and daughter would share it- He jolted as he realized the bed wasn't the only thing they planned to share tonight. \n\nHe couldn't believe that he was actually doing this. It was so out of character for him. The scotch had relaxed him but he was by no means drunk. What the hell was he doing? \n\nThe first thought that went through his mind was, what would Gwen think? His next thought was a hot flash of not giving a fuck what she thought! It was obvious to him now that Gwen had a roaming eye and her idea of an ideal match had more to do with a bank balance than love. \n\nHer intrusion on his thoughts now was not welcome. He pushed her out of his mind and asked himself... what do I want? \n\nWhen Helen stepped close and tilted her face up to his, there was no hesitation. He kissed her and found her mouth to be very soft and sensual. She moaned when his kiss became demanding. His hands went into her hair and their passion grew. She submitted to his need and clung to his hard body as his kiss fanned the flames of her own desire. \n\nWhen he pulled back from the kiss they were both breathing hard and looking deeply into each other's eyes. Skye's hands circled around his body to begin undoing his shirt. Helen worked the buttons of her own blouse as Skye pulled his shirt off. \n\n\"Ooo! You've a lovely body!\" Helen sighed looking at Kyle's strong toned arms, firm chest, and tight stomach muscles. \n\nHis mind returned to him for a moment of clarity. \"Wait, aren't you married?\" he blurted. \n\n\"Divorced,\" Helen said with a grin. \n\nKyle suddenly felt firm tits pressing against the bare skin of his back as Skye's hands began working the buckle on his belt, then the button and zipper on his pants. This shocked him back to reality. Geezus, he was really doing this? Once more he heard Gwen's criticism in his head and his resolve strengthened to put her out of his thoughts. \n\nHelen's blouse fell to the floor and his eyes locked onto her breasts straining to be freed from her bra. She reached back, undid the clasp, and pulled the straps forward exposing a very lovely pair of breasts. \n\nSkye's tits slid down his back as she pushed his pants and underwear down. \n\n\"Oh my! That's a very nice cock too!\" Helen gasped as she faced it. She pushed her skirt and panties down as she knelt in front of him and smiled up at him. Skye pressed her lips to his ass and he started from the strange sensation and looked over his shoulder at the young woman squeezing his ass. He gasped when he felt lips on his cock and looked forward to see Helen holding his eyes as she took his hard cock deep into her mouth. \n\n\"That feels incredible!\" he moaned and Helen's eyes twinkled with joy. \n\n\"This ass is incredible! So fucking firm!\" Skye purred as she squeezed his cheeks with her fingers. \n\nAfter working Kyle's cock into a rock solid state Helen pulled back with a pop and squeezed the base as she admired her handiwork. \"Skye, look at this! It's a good length and thickness! Better than your father's!\" \n\n\"Mum! I don't want to hear about dad's privates!\" Skye whined. \n\nHelen chuckled. \"Sorry, love! I'm just a little over-excited. It's been over two years since I've been with a man!\" \n\n\"Again mum, too much information!\" \n\nKyle couldn't help chuckling at that as here was a daughter stark naked before her mother preparing to have sex with a stranger. He bent and helped Helen to her feet as Skye got to her own and rushed around to the other side of the bed. \n\n\"Kyle, why don't you lie down on the bed so we can both ride you at the same time.\" \n\n\"Dear, he only has one cock,\" Helen said in confusion. \n\n\"Yes, but don't forget he has a mouth too,\" Skye said with a grin. \n\nHelen's eyes flew wide as the idea hadn't occurred to her. \n\nTo be fair, the idea of being with them simultaneously hadn't occurred to Kyle either but he was quickly accepting his role in this 'little bit of fun'. The more it flew in the face of what he'd have been 'allowed' to do, the more appealing it became. \n\nHe climbed on the bed and Helen looked at her daughter in question. \n\n\"Why don't you let him use his mouth on you first?\" the young woman suggested. \n\n\"I've never done that before,\" Helen said nervously. \n\n\"How about you Kyle, have you ever given face? Are you good at it?\" Skye asked. \n\nHe flashed back to a memory of Gwen screaming through a mighty orgasm and nodded with a hot smile. \n\n\"Mmmm! I'm looking forward to my turn!\" the young woman purred. \n\nHe slid down a little on the bed and Skye helped her mother get into position over Kyle's face. The woman gripped the bed's ornate headboard as she slowly lowered her pussy towards his waiting mouth. She sucked in a breath and twitched as he began to kiss the inside of her thighs. She bit her lip and moaned. \n\nKyle was beginning to really enjoy himself. He knew what to do here and each kiss and lick was having the desired effect. He sucked in a breath when he felt Skye rolling a condom over his cock... with her mouth. He moaned as she plunged his cock deeper and deeper. \n\nWhen Helen finally settled on his face he got to work and she immediately moaned in bliss and tightened her grip on the headboard. He'd been expecting this and worked with the natural rolling of her hips. \n\n\"Oh! Oh god! Kyle! Yes! There! Right there!\" Helen chanted under her breath as bliss radiated from her tingling pussy. \n\nKyle moaned deep into Helen's wet channel as he felt Skye's tight pussy sliding down over his cock. The sensations were a little muted by the condom but it still felt awesome! She was taking more and more of him until he felt her settle down on his body. He was fully inside. She rocked slightly side to side as she became accustomed to his size. He knew he wasn't particularly large but Skye was on the small side herself. \n\nHe went back to work on Helen with new energy and she began to gasp and shake as his tongue sent bolts of bliss through her body. \n\n\"Mum! He fills me up so well!\" Skye sighed as she began to slowly lift and drop herself on his cock. \n\nHe began to thrust his hips up every time she dropped on him. This finished each stroke with a slap which had the desired effect of accelerating her pleasure. ",
        "\"Ooo! Ooo! Ooo! Fuck! Fuck! Fuck!\" Skye whimpered as the delicious vibrations spread through her tender flesh. Her release was quickly racing up on her. \n\nHelen had begun to grind against Kyle's mouth so he sped up his sucking and licking to keep pace. \n\n\"Ahhh! Kyle! Shit! Shit! Shit! I'm cumming! AAAAAAAAHHHHHHHH!!\" Helen cried as her trembling became a full-on quake. She squeezed his head between her thighs as her muscles spasmed through her release. \n\nKyle reached down blindly to grip Skye's hips to pull her down more forcefully with each thrust and she peaked and squealed through her own orgasm. \n\n\"FFFFUUUUUCCCKKK!!\" the young woman yelled as her pussy squeezed his cock in pulses. He held her tight against his body and rocked her side to side to prolong her pleasure. She sucked in her breath as the pleasure sharpened and she finally flung herself onto the bed next to him to stop the intensity. She threw an arm over her eyes as she panted. \n\nHelen moved herself down Kyle's body gingerly as she was still feeling the residual aftershocks. She was smiling down at him when his cock found her wet opening. Her expression changed to surprise as the head slipped inside and she froze. \n\nKyle hadn't cum yet and he was getting close so he gripped her hips and pushed down, sliding his cock deeper into her wet opening. \n\n\"Ooo! God you feel good! It's been so long!\" Helen sighed. \n\nHe smiled up at her and rolled them over until he was resting on top of her, his cock reaching her very depths. \n\n\"Ahhh god! So good!\" she whimpered. \n\nKyle began to slowly draw himself out and thrust in with energy and she gasped each time his body slapped against hers. He felt his own release rushing up and his need grew. \n\nHelen was thrashing her head back and forth under him as she was almost delirious with the delicious sensations. \n\n\"Oh Kyle! I'm going- I'm there- It's happening! I'm cum- Oh! Oh! OOOOHHHHHYYYEESSSS!! Helen howled as she shook under his pounding thrusts. \n\n\"Fuck! I'm cumming too!\" he grunted and ground himself against her as he filled the condom. \n\nAfter a bit, he pulled back as Helen was showing signs of becoming too sensitive. He gently slid his cock free of the woman and she sighed happily. \n\nHe settled down on the mattress between the two women who were both smiling blissfully. He stared up at the ceiling, the reality of what he'd just done making him wonder what the fuck had gotten into him? He'd never done anything this impulsive before. Having sex with a sexy mother and her daughter, at the same time? Unreal, but he allowed himself a happy smile. He was glad he'd chosen to do it! \n\nThe next thing was, what now? He was back on unfamiliar ground. Did they have expectations? \n\nAs if she was reading his mind, Skye pushed herself up on one elbow to look down into his eyes. \"That was lovely. I quite enjoyed that!\" She looked over at her mother's smiling face. \"Looks like mum enjoyed that too.\" \n\nKyle smiled at her and glanced over at Helen who seemed to be drifting off. \n\n\"Yes, that was fun! I- I think I'd better head back to my room to let you two get some sleep,\" Kyle suggested quietly and Skye nodded. That was the answer she was looking for so he nodded in return and moved down the bed. He collected his clothes, stepped into their bathroom to shed the condom, quickly tidied himself and dressed. Then Skye let him out into the hall with a smile. \n\nHe heard the lock click so he turned to head back to the stairs and froze. Fiona was watching him as she helped her obviously tipsy husband down the hall towards their room. Her eyes were on him and the corner of her mouth was turned up in a slight smirk. \n\nKyle got himself moving forward and nodded to Fiona as he passed by, his face showing as casual a smile as he could muster with burning cheeks. He felt her eyes on him as he made the corner and descended the stairs. He managed to get back to his room without bumping into any of the other members of his tour so he breathed a sigh of relief. \n\nHe took a quick shower to freshen up, dried off and climbed into the bed. Shutting the light, he hoped the Livingston ladies were as discreet as they promised they'd be. He also hoped Fiona wouldn't mention it to her husband. \n\nIt was just the start of the trip and this could seriously fuck up the rest of it. What was he thinking? \n\nChapter 3 \n\n\"A word of advice?\" \n\nKyle looked over at Dita, their Czech guide, in surprise. This was the first time she'd spoken to him and she had a rather stern look on her face. \n\nThe group had straggled down to the breakfast room as each was nursing different levels of hangovers. Kyle had slept like a baby, felt great, and was the first to arrive and leave so he missed most of the others. \n\nNow they were gathered once more with their bikes. He'd given Helen and Skye a friendly good morning when they passed by, and true to their word they were not overly familiar with their morning greetings. Helen was all smiles though she moved a little stiffly and he hoped she wouldn't have difficulty on the ride because of their... fun. \n\nThey were preparing to ride to the next destination but Dita had sauntered close to him to give him some advice. \n\nHe smiled and nodded. \n\n\"We're a small group. For the sake of harmony, we recommend you hunt for sex partners outside the group,\" Dita said. \n\n\"What?\" he blurted in surprise. \n\n\"We've seen holidays turn ugly when guests try to have sex with other guests or the guides. The company has strict policies against the guides doing that,\" the woman said a little stiffly. \n\n\"That's not-\" Kyle began but she was already walking away, message delivered. \n\nShe was dressed for riding so she'd be out on the road with them today. He vowed to stay away from her if he could. Vivian was also riding with them with Jules in the support van. \n\nHe looked over at the Livingston's and they seemed oblivious to the drama that just occurred. Fiona, however, had been watching. He caught her eye. Perhaps she said something to Dita? She looked away and went back to adjusting her helmet. \n\nFace burning he returned to getting himself ready. \n\nThey finally got out on the road and soon Alfred was off with Kimberly in pursuit. Dita slipped away from the pack to keep an eye on them. \n\nKyle rode out in front of the group and just enjoyed the beautiful scenery and the peace and quiet. \n\n\"I thought you were going to be discreet?\" \n\nKyle looked to his left and saw Skye riding next to him. \n\n\"I was. I didn't tell anyone.\" He paused for a second. \"But Fiona saw me leaving your room last night.\" \n\n\"Shit,\" she cursed quietly. \n\n\"Yeah. Did you get a lecture from Dita this morning?\" he asked. \n\n\"What?!? No!\" she blurted then began to laugh. \n\nKyle just gave her an annoyed look. \"Yeah, it's real funny having the guides peg me as some kind of sexual predator.\" \n\nSkye struggled to get her laughter under control then patted him on the ass, getting a squeeze in for good measure as she bit her lip with a smile. He stared at her incredulously as the others could see. \"Don't worry, I'll speak to Viv and set Dita straight too. Your innocence is safe.\" \n\nHe shook his head and climbed out of the saddle to pick up his pace to leave her and the rest behind for a while. \n\nBy 1PM they'd reached a quaint old town where they'd be having lunch. They parked the bikes with the support van and found their reserved table on the patio under the umbrellas. Kyle saw Alfred and Kimberly sitting across from each other, deep in an animated conversation. Kindred spirits, obviously. Alfred looked up with a smile when he saw Kyle approaching. \n\n\"Preparing for tomorrow? Thought of something you want to race for?\" the man said with a grin. \n\nKyle just smiled and shook his head as he sat on the bench a ways down from Kimberly, leaving space for David. \n\n\"Hey! I want you motivated so you'll at least give me a little competition! Don't worry about being aggressive about naming your prize. Anything,\" Alfred boasted, looking him in the eye. \n\nKyle just shook his head. He didn't want to deal with this now. \n\nKimberly bounced on the bench excitedly. \"I know! Ask him to pay for the upgrade on the bicycle I'm using!\" \n\nKyle grinned at the woman and shrugged. \"Sure. How about that?\" \n\nAlfred snorted but nodded with a wide grin. Confidence was oozing from every pore and Kyle wondered what that felt like. \n\nFiona arrived with Helen and Skye and they took seats on the bench on Alfred's side, Fiona next to her husband, then Skye and Helen. The Burkettes were last with David who called out to Kyle to move down the bench one spot so he could sit at the far end. Kyle raised his eyebrows but moved next to Kimberly who gave him a brief smile. \n\nSkye was watching him with a sly little grin and he threw her a warning glance which Fiona unfortunately saw as well. The woman's eyebrow went up as did the corner of her mouth. \n\nDita stood at the far end of the table and got their attention. \"This afternoon's ride isn't too strenuous but there is one long climb which can be a little tiring. As well, the temperatures are rising so make sure you refill your water bottles.\" With a nod to the group she headed back to the table she was sharing with the other guides. \n\nAlfred's eyes were twinkling with excitement. He looked across at Kimberly who was sharing is excitement. \"You ready for the challenge?\" he asked. \n\n\"Bring it!\" the petite woman chirped back at him with a big grin. \n\nAlfred turned his eyes to Kyle. \"How about you? Are you going to test your mettle against us elite riders this afternoon or ride with the ladies in the pack?\" \n\nHelen snorted as she drank her water and some passed through her nose. She held her napkin to her face as she coughed with watering eyes. Everyone looked towards her reddening face. When she settled down she whispered something to Skye who exploded into hysterical laughter. Helen swatted her daughter's arm gently to get her to settle down. \n\nWhen Skye finally got control of herself she corrected her mother far too loudly. \"No mum, he said 'ride with the ladies in the pack' not 'ride the ladies in the sack'!\" \n\nThe table erupted with laughter and Kyle's face felt like it might ignite. Helen was also red faced as her daughter began laughing again. \n\nAlfred was chuckling as well but was watching Kyle's embarrassment curiously. He caught his wife's knowing smile and whispered something in her ear. She gave him an annoyed look and turned her face away from him. Anger flitted across his face before he forced a smile back on his lips. \n\nThe waiters arrived with the platters of cheeses, salads, rolls, and a tureen of rich stew. \n\nKyle was grateful for the interruption and filled his plate with some of the delicious looking food. As they all began to eat they made sounds of delight as the food tasted as good as it looked. Conversations returned to normal. Favorite routes at home, movies recently seen, and current events were discussed and nobody pressed Helen or himself for details. \n\nHe stopped himself from going back for seconds though David was already having a third plate. Kyle excused himself from the table and made his way to the washroom. \n\nAs he was relieving his bladder, he heard voices arguing outside the window. He caught Alfred's voice. \n\n\"What the fuck was that back at the table?\" he growled quietly. \n\n\"What was what?\" Kyle recognized that as Fiona's voice. \n\n\"You obviously know something about the Brit's little slip of the tongue. What happened?\" Alfred pushed. \n\n\"Oh, does it take a sex scandal to get you to remember you are on a holiday with me and perhaps spend a little time with me?\" she hissed. \n\n\"What are you talking about? I'm with you all day!\" he blurted. \n\nKyle urged his bladder to hurry as he didn't want to hear this private stuff. \n\n\"No, when you're on the bike you disappear. You asked me to come on this holiday so we could share the experience but you ride at your own pace and leave me behind,\" she insisted. \n\n\"We don't have to be side by side to share the experience! You know I can't ride as slow as you!\" Alfred scoffed. \n\n\"Fine but stop expecting me to keep you up-to-date with the experiences you're missing when you race ahead or when you're drunk,\" she hissed. Kyle heard Fiona storming away. \n\n\"God damn it!\" Alfred cursed quietly. \n\nKyle finished up and was washing his hands when Alfred pushed his way through the door with a scowl on his face. He paused when he saw Kyle then glanced to the open window above the urinals. It was his turn to get red faced. Kyle nodded to him and headed out to the bikes. \n\nHe stopped next to Skye as she put her helmet on. \"I'd appreciate it if you could try to keep what happened last night private.\" \n\n\"I'm afraid it's a little too late for that now. Cat's out of the bag, thanks to the lady with the outrageous knockers,\" Skye said with a wide grin. \n\nHe grimaced and nodded. \"Well... please make an effort to not bring it to everyone's attention.\" \n\n\"Right, Captain!\" she barked and threw him an exaggerated salute. \n\nHe shook his head and made his way to his bicycle. A quick inspection showed all was good and he put on his helmet and gloves. He was feeling like he needed to burn off a little energy so he decided to try to keep up with the elites this time. He heard that Dita had already left. She would likely pause and wait for them near the top of the main climb. He rode over to stop next to Kimberly. \n\n\"Are you going to join us for the climb today?\" she said, giving him a friendly smile. \n\n\"Yeah, I think I will. I'll try at least,\" he said with a smile. \n\n\"Hey! This mean you're ready to get serious?\" Alfred boomed as he trotted up to put his helmet and gloves on. \n\n\"Bring it,\" he said, borrowing Kimberly's line. They both beamed happy smiles at him. \n\nOnce Alfred was ready he got them out onto the road and set the pace. Kimberly tucked in behind him and Kyle hugged her back wheel. The first ten kilometers were fairly easy with gently rolling hills but there was a definite if gradual upwards slope to the road. \n\nTrees lined the sides of the road as they climbed into the foothills, each taking a turn at the front of their breakaway group to share the effort of breaking the wind. Alfred seemed delighted that Kyle knew how to ride in a group. \n\nThey rounded a corner and the long climb appeared before them as they broke free from the treeline. Kyle had been the leader at the base of the climb but Alfred immediately attacked and swung out and around him with a short bark of laughter as he leapt from the saddle to dance on his pedals. Kimberly was right there behind him holding his back wheel, also out of the saddle. \n\nKyle grinned at the excited look on the woman's face and switched to his chasing gear as he climbed out of the saddle to follow. They were already two bike lengths ahead of him and slowly pulling away. They managed to get three bike lengths on him before he settled back into the saddle and got himself into his climbing cadence. Heart beating strongly, breathing smoothly and evenly, he kept his head down and concentrated on maintaining his tempo. \n\nAlfred glanced back and saw Kyle's head was down and his legs were pumping. He allowed himself a grin, thinking he'd already broken the will of the younger rider. He saw Kimberly grinning behind him and was once more amazed by her strength. Still, he had to lose her too. He picked up his pace just a little more. \n\nThe gap between Kyle and Kimberly's back wheel grew to four then five bike lengths as they gradually approached the top of the pass. From there, the road would slowly wind its way down the other side to reach the village they would be overnighting in. \n\nKyle looked up and saw Dita looking down at her cell as she casually rode up to the crest of the hill with Alfred racing up at her, out of the saddle and head down, Kimberly in hot pursuit. Both elite riders were eager to be the 'king of the hill', first to crest the pass. Neither was watching ahead of them. Kyle yelled a warning. \n\nDita looked up at the last second and tried to veer right, closer to the guard rail on the wide shoulder. The toe of Alfred's right shoe struck her on the back of her left calf causing them both to wobble badly. Kimberly saw Alfred's wobble as an opportunity to leap ahead and surged forward to shoot over the crest with a victory cry. \n\nAlfred cursed back at Dita before racing after the redhead. The guide collided with the guard rail and grabbed a metal sign post to stay upright. She would have gone over the railing onto the rocky field beyond if the post hadn't been there. \n\nKyle rode up to her and hopped off his bike, leaning it against the railing behind her. \n\n\"Are you alright?\" he asked seeing her grimace in pain. \n\n\"NO, I AM NOT ALRIGHT!\" she barked back at him as her body shook. \n\n\"Let me help you-\" \n\n\"I DON'T NEED YOUR HELP!\" \n\nHe faced her and held her eyes with his. \"Let me help you,\" he repeated gently. \n\nShe was fighting back tears as the cramping in her left calf hurt so much. She finally nodded and he put his right arm around her back and held her against his body as his left arm went behind her thighs to lift her from her bike. Her bike leaned against the railing and he carried her forward to sit on some large, flat topped stones just past the end of the railing. He sat next to her with her leg resting across his thighs. \n\nHe looked at her leg and he could see the muscles bulging badly. \"I need to massage that knot out of your calf before it tightens up.\" \n\nShe scowled at him but knew he was right so she finally nodded. \n\nHe sighed. \"I'm sorry, it's going to hurt at first. You may want to lie back.\" \n\nShe closed her eyes and leaned back but remained on her elbows. He slid his hands up her calf and she jumped. \n\n\"Relax and take deep breaths,\" he said calmly. He listened to her breathe. \"Ready?\" \n\nShe nodded and he began. \n\nShe screamed for a bit as he pressed and kneaded the knots but soon she slumped back and only moaned from time to time as he spread and stretched the abused muscle. He continued this until it was hot and loose once more. Her moans stopped and she pushed herself back up to her elbows. \n\n\"Thank you,\" she said quietly, eyeing him guardedly. \n\nHe nodded. \"I'm not that guy you accused me of being. I'm not trying to score with the other guests or guides. I just came to ride and forget my woes,\" he said quietly, as his hands gently kneaded her calf. \n\n\"Your woes. This is your fianc\u00e9 leaving you?\" she asked. \n\nHe nodded once more. \"She was my mistake. I thought it was true love but I wasn't what she wanted and it seems she wasn't who I thought she was.\" He shrugged. \"It's better it happened now, before we got married.\" \n\n\"This thing that happened last night. Rebound?\" \n\nHe blinked in surprise and thought about that. \"Yeah... maybe that's what it was. It surprised me as it was completely unlike me. I wouldn't have normally... done that,\" he finished with a self-conscious grin. \n\nDita was feeling more comfortable with him now. \"It will make for an uncomfortable week for you.\" \n\nHe sighed. \"The week didn't exactly begin well so this actually feels like an improvement. Besides, I'm in France doing something I love,\" he said nodding to the bikes. She smiled at that. \n\nHe released her leg and she gingerly put it down on the ground and slowly got to her feet. She smiled at him as she was able to put her weight on it. \"It is much better. We should go.\" \n\nThey got back on their bikes and set off down the other side of the pass. The route to the village was largely downhill so very little pedalling was actually required. \n\nThey eventually saw Alfred and Kimberly waiting for them in the parking lot. The man was grinning at Kyle. \n\n\"Is this all the challenge I can expect from you tomorrow?\" he boomed with a wide grin. ",
        "Kyle shared a look with Dita as the woman rode off to speak with Jules who was standing by the support van. \n\n\"No, barring you're injuring another of our guides I believe I'll be waiting for you at the finish line tomorrow,\" he said calmly. \n\n\"Injuring- if she hadn't been wobbling around on the road she wouldn't have ridden into me! As for beating me, if you're feeling so cocky why don't we up the wager to include your upgraded accommodations for the rest of the trip. As for your reward, name it.\" Alfred leaned closer to Kyle. \"Anything.\" \n\nKimberly was watching them with wide eyes. \n\nKyle suddenly grinned. \"OK, you pick up the cost of all of my upgrades. That includes both bikes.\" \n\nAlfred grinned as his eyes showed his amusement. They shook on it. \"And here I thought you'd have the balls to ask for a night with Fiona.\" He snorted and walked away chuckling to himself. \n\nKyle and Kimberly shared a surprise look. The petite redhead shook her head and watched Alfred walk into the hotel. \n\nChapter 4 \n\nThe group was on their own for dinner that night. Luckily they were in a lovely village with a good selection of restaurants. There was also a very nice bar in the hotel they were staying in and word got around that they would meet back at the bar after dinner and a little sight-seeing. \n\nJules approached Kyle as he left the hotel and thanked him for taking care of Dita. \n\n\"It is my understanding there is a wager between you and Monsieur Hollings for tomorrow's ride. The alternate route is a strenuous one with a tricky descent. I want to be sure the two of you will be cycling safely.\" \n\n\"I believe we're both experienced riders. I have a lot of experience with riding in the mountains as I do it at home. You'd have to ask Alfred about his skill level with descents,\" Kyle remarked. \n\n\"He is a very strong rider and a good climber. That said, we hope you crush him.\" \n\nKyle blinked in surprise as the man walked away. \n\nHe decided to head into the village on his own as he wasn't feeling that social. The main street had a number of restaurants and he spotted Alfred and Fiona entering one he'd just chosen. He stopped in the square and frowned. He didn't want to spoil his dinner looking at that man's smug expression. \n\nHe decided to follow a group of locals who he'd overheard talking about dinner. As he wandered down a small lane leading down to the river he spotted a small restaurant in an alley off the lane. The hostess took pity on his poor French and offered him their last small table in the corner. \n\nAs he reviewed his menu he spotted Vivian and Dita standing in the doorway looking for an empty table. He saw Vivian pout as she saw no free tables but Dita waved to him. He gestured they were welcome to share his table. There was just enough room for two more though it would be tight. Smiling happily, the ladies squeezed themselves in. \n\n\"This place is only known to the locals and those who work in the village. How did you find it?\" Vivian exclaimed. \n\n\"I know a little about traveling. Eat where the locals eat for the best food and value,\" he explained. \n\nHe got smiles for that. \n\nWhen the waitress arrived he ordered the fish as he spotted it on a neighboring table and it looked quite good. Dita followed suit but Vivian ordered a chicken dish. Kyle ordered a bottle of wine for the table. \n\n\"How's your calf?\" he asked and got another smile from the ladies. \n\n\"My left calf is perfect but my right one is jealous of the massage the other one got!\" Dita pouted. \n\nKyle laughed and Vivian gave her friend a raised eyebrow and a subtle warning glance which Dita waved off. \n\nThe wine arrived and Kyle did the honors of tasting it. He nodded happily to the waitress and she served the ladies then topped his glass up. \n\nVivian closed her eyes and sighed with happiness as she swallowed the wine. She looked to Kyle. \"Good choice!\" \n\n\"Yes, very nice!\" Dita smiled. \n\nKyle nodded to the ladies. Then he fixed his eyes on Vivian. \"Jules tells me you're rooting for me in tomorrow's ride.\" \n\nThey started to laugh and nodded. \"Yes, officially we cannot take sides but Mr. Hollings is a bully and we heard he was going to offer you a night with his wife if you won. What a creep!\" \n\n\"Yeah, I couldn't believe he said it but he may not have been serious!\" He suddenly paused and looked at her. \"Wait- where did you hear that?\" Kyle asked, puzzled. \n\nDita looked at Vivian. \"I overheard Mrs. Wallis telling her husband. She wasn't exactly being quiet about it. Some of the others were within earshot.\" \n\n\"Damn. I hope Fiona doesn't hear it through the grape vine. That would be humiliating,\" Kyle said with a wince. \n\n\"She wasn't worried about your feelings when she told everyone about spotting you coming out of the Livingston's room.\" Dita said as she examined Kyle. \"Did you really sleep with both of them.\" \n\n\"You don't really expect me to answer that question, do you?\" Kyle said with a frown. \n\n\"You're discreet. That's good, at least,\" Vivian nodded cautiously. \n\n\"May I ask about your relationship with your fianc\u00e9?\" Dita said carefully. \n\nHe looked at her and nodded. \n\n\"Was it a long-distance relationship?\" \n\nHe sighed. \"We were together for five years and lived together for most of that time. Seven months ago she was asked to be the editor for this author in France. She leapt at the chance and I fully supported her move as it was a definite promotion for her. It wasn't supposed to be permanent. I tried to visit as often as I could.\" His expression became sad as he thought of the good times they'd had. He now saw that time in a different light. Knowing how discontented she'd become with their life, a life he'd believed was a damn good one, it felt like such a waste of time now. \n\nDita gave him a sympathetic look as she recalled the breakup of her own marriage. \"It is just a new start. It gets better.\" \n\nKyle smiled and nodded. \n\n\"My marriage lasted only three years. I was on the road doing these tours and my husband took a lover while I was away. I returned home and found divorce papers in my apartment. He'd moved out,\" Dita said with a shrug. \"That was three years ago. I know now I'm better off without him.\" \n\n\"As I am, without Gwen,\" Kyle said and raised his glass to touch it to Dita's and Vivian's. \n\nThe food arrived and they sighed with happiness at the delicious aromas. The taste was equally good and they dug in. \n\nKyle topped up their glasses a few times, and ordered a second bottle, as the meal went on and they ate until they could eat no more. He surprised them by picking up the tab and they thanked him graciously. \n\n\"Are you going to be good for the ride tomorrow?\" Dita asked, looking at their second empty wine bottle. \n\nKyle nodded. \"I'm good. No more drinks for me tonight and right to bed with a large bottle of water.\" \n\n\"Good!\" Vivian exclaimed. \n\nThey made their way outside and Kyle waved to the ladies as he turned to head back to the hotel. \n\n\"Hold up! I'm heading back your way,\" Dita called out. \n\nKyle waited and Dita gave Vivian a quick hug before jogging up to Kyle's side. \n\n\"I'm staying with a friend tonight just past the hotel,\" Dita explained as they walked back up the lane towards the more touristy area near the central courtyard. \n\nThe night was lovely and Kyle was feeling really good. He looked up at the stars as they passed between the buildings. He loved looking at the stars as they always put things in perspective for him. \n\n\"It's really lovely here. I wonder what it would be like to live in a quaint little historical village,\" he sighed. \n\nDita snorted. \"Do you live in a big city back in Canada?\" she asked with a smile. \n\nHe looked over at her but he could barely see her now as this section of the lane had no street lights. Just ahead was the brightly lit central court and he thought of the tourist areas back home. He smiled. \n\n\"Yeah, Vancouver is pretty big. Not huge, but it certainly doesn't have a small village vibe like this.\" He took a deep breath and smiled wistfully. \"Maybe... maybe it would just be running away, escaping the rush and pressure of home but... I could get used to this,\" he said as his steps slowed to a stop and he closed his eyes. He felt is mind and heart opening up to the energy of the place. \n\nSoft lips pressed against his and his eyes flew open. Dita was standing very close and she was looking at him to see his reaction. He was watching her curiously but he didn't pull away so she leaned in again and their lips met once more. His arms automatically went to her back as she placed her hands on his shoulders. She was maybe an inch taller than his 5' 10\" and Gwen had been shorter. It was a novel experience to have to tilt his head up to kiss her but her mouth fit his so very well. \n\nShe dipped her tongue into his mouth and he caressed it with his own making her hold him tighter. \n\nHe felt her gently pushing his shoulders so he moved his hands from her back to her hips. She finally ended the kiss though he ran his lower lip across hers as she did and she gasped. \n\nDita patted his shoulders gently as she leaned her forehead against his. \"That was... very nice!\" she sighed quietly. \n\n\"What was that for?\" he asked. \n\nShe pulled her face away and smiled at him as she tilted her head to the side. \"An apology for this morning? A thank you for helping me this afternoon? A kiss for good luck tomorrow perhaps?\" \n\n\"I accept. Your welcome. Thank you,\" he said as he dropped his hands to let her step back. \n\n\"I cannot do more, though I would like to,\" she said with a pout. \n\n\"I get it. I do. This was really nice. I had a really great night!\" he replied. \n\nThey got moving once more and stepped out of the dark lane to join the tourists and locals in the main square. Two oblivious visitors set off flashes right in their faces as they tried to get past the pedestrian clogged street. \n\nHe grinned at Dita. \"Ok, I could do without the tourists.\" \n\nShe returned the grin and nodded. \n\nHelen and Skye were window shopping with the Burkettes. They'd bumped into the couple at a restaurant just off the main square and shared a table. Dinner was good if less than memorable. Now they were all looking for something to bring home to remind themselves of the fun they were having. Nothing was jumping out at them as the unique item that summed up the trip so far. \n\nSkye was waiting outside the last store on the east side of the square when her mother and the Burkettes exited from the shop empty handed. \n\nHelen noticed Skye was smiling dreamily. She followed her eyes and saw the silhouette of a young couple standing in the shadows of an alley, backlit by a streetlight in the distance. They were kissing and Helen flashed back to her night with Kyle. He was a great kisser and she'd really enjoyed herself! She sighed and heard Skye sigh as well. \n\nCarl spotted what they were sighing about and gestured to Larissa. \n\n\"Oh my! That's lovely! I wish I'd brought my telephoto lens!\" Larissa said, snapping a photo of the couple. \n\nWhen the subject of her photo separated and walked out into the light of the square, the four of them gasped. It was Kyle and Dita! They were smiling and talking like good friends but that kiss had been far more than a friendly peck. \n\n\"Well...\" Carl began but was at a loss as to what to say next. His wife just slipped her arm through his and smiled at Helen and Skye who were staring at Kyle in shock. \n\n\"Shall we get a drink in the bar at the hotel?\" she asked. \n\nHelen nodded and smiled in return though her daughter was still watching Kyle. \n\nThey made their way back to the hotel, following Kyle and Dita at a distance but always in sight. The young couple never got close or touched again as they walked though they appeared to be speaking and laughing together. Dita waved and went on her way when they reached the hotel and Kyle went inside. \n\nWhen their group reached the hotel bar, Kyle was nowhere to be seen. Kimberly and Fiona were sharing a table but they weren't smiling. There was no sign of either of their husbands. \n\n\"Hi Kimberly, Fiona. Is something wrong?\" Helen asked the women. \n\nFiona appeared to be angry about something. \"Did Kyle come back with you?\" she asked tersely. \n\n\"No, he got back before us. We saw him come in. I guess he went straight up to his room,\" Carl offered. \n\n\"If you will excuse me,\" Fiona said as she slipped from the booth and walked out of the bar. \n\n\"What was that about?\" Skye asked Kimberly. \n\nThe petite woman looked uncomfortable but couldn't stop herself from sharing once more. \"After today's ride Alfred told Kyle he wasn't much of a challenge but Kyle said tomorrow he'd win. Alfred upped the wager. He's racing tomorrow for all of Kyle's remaining upgrades.\" \n\nHelen made a sound of protest as she'd hoped to convince Kyle to give her one and planned to offer to share it with him. The others looked at her and her face flushed in embarrassment. \n\n\"What's Kyle asking for?\" Skye asked with a crooked grin and Kimberly frowned at her. \n\n\"He just asked for Alfred to pay for all of the upgrades,\" she answered. \n\n\"That's probably a good piece of change but I don't see how that would upset Fiona,\" Larissa said and Carl nodded in agreement. \n\nKimberly's eyes twinkled with the juicy tidbit she'd saved until last. \"Alfred told Kyle he thought he'd have the balls to ask for a night with Fiona.\" \n\n\"What?!?\" Carl gasped and Larissa's jaw dropped. Skye was grinning wickedly but Helen was shocked. \n\nKimberly leaned closer to the group. \"I really believe Alfred would have agreed to it too. He's that confident.\" \n\n\"He's that much of a sexist bastard, you mean,\" Helen growled. \n\nKimberly shrugged. \"Kyle hasn't exactly proven his innocence on this trip.\" She gave Helen and Skye a knowing look. \n\nThe four thought about the passionate kiss they'd witnessed and couldn't argue. They grabbed chairs around the table. \n\n\"Where's David?\" Carl asked. \n\n\"He drank too much at dinner and is sleeping it off,\" Kimberly said with a scowl. \n\n\"And Alfred?\" Larissa asked. \n\n\"Went to bed early to be in top shape for tomorrow's ride. He really wants to destroy Kyle,\" Kimberly said with wide eyes. \"Kyle seemed to have trouble keeping up with us on the climb so I don't know why he told Alfred he was going to beat him. He seemed so confident when he said it too.\" \n\n\"Now I'm really rooting for Kyle,\" Helen said with a determined smile and Skye gave her a knowing grin of her own. The mother swatted her daughter's arm but their smiles remained. \n\nKyle heard a loud, insistent knocking on his door. Fresh from a quick shower, he wrapped his towel around his waist and answered the door. He was surprised to see Fiona standing on the other side. Her stern expression changed to surprise and her eyes flew wide as she stared at the wet, hard muscles of his arms, chest, and stomach. \n\n\"Fiona? What's wrong?\" he asked. \n\nShe blinked and seemed to gather her wits. \"May I come in?\" \n\nHe hesitated. \"Uh, I'm still wet from the shower and not dressed.\" \n\n\"It will only take a moment,\" she insisted as her frown returned. \n\n\"OK, but I don't want to hear any rumors about my conduct tomorrow,\" he said with a frown of his own, knowing she'd been the one to squeal on him about the Livingstons. \n\nShe squared her shoulders back and nodded firmly with a serious expression. \n\nStill holding some misgivings, he stood aside and she entered the room, eyeing his chest once more as she passed. \n\nHe closed the door and followed her in. \"What's up?\" he asked. He moved past her but saw he'd forgotten to take clothes out. He turned to face her. \n\n\"Kimberly told me what Alfred said to you after the ride today,\" she blurted. \n\nKyle sighed. \"Of course, she did.\" He ran his free hand through his hair then wiped it on his towel as he realized he was still dripping wet. \n\nFiona faced him wearing a frustrated pout as she put her fists on her hips. \"I want you to know something. I'm not some airhead trophy wife! Alfred treats me like one sometimes but the truth is I have more money than he does! I came from a wealthy family and I manage my parent's chain of hotels!\" Fiona exclaimed defensively. \n\nShe moved her hands under her tits and lifted them as she stared him in the eye. \"I got these for me, not Alfred! He doesn't have any say in what I do with my body! I was a flat chested ugly duckling my entire life and I wanted these so I bought them. I like them! I like how they make me feel pretty!\" \n\nKyle watched her outburst with surprise and saw her full bottom lip was starting to tremble. His guilt weighed heavily on him. \"You're right. I completely judged you by your looks and that was a terrible thing to do. I sincerely apologize for that. You deserved better. I'm very sorry.\" He watched her expression as she took a deep breath. She seemed to be getting control of her emotions once more. She released her tits and they didn't drop very much. He pulled his attention back from them. \n\n\"I want you to know I never assumed you were his to use in the wager,\" he said to clarify his position. \n\n\"I'm done with him treating me like his personal plaything! He's going to apologize to me!\" she asserted. \n\nKyle gave her a smile. \"Good for you! You deserve to be treated better!\" \n\nHer face lit up with a huge smile then it turned serious. \"You have to beat him tomorrow!\" \n\nHe snorted in amusement then grinned as he thought of how many people were rooting for him. Alfred wasn't making many friends. \"That's my intention. I'll certainly do my best but I can't make any guarantees. He's a strong rider.\" \n\nShe was back to staring at his body with wide eyes. She bit her lip. \"You- you look... strong.\" \n\nHe heard something in her tone that made him feel a little uneasy about standing in front of her in only a damp towel. \"Thanks. I think you should probably head back to your room now before the others start returning to theirs.\" \n\nShe nodded but moved a little closer to him. Her eyes were roaming is chest and the ridges of his stomach muscles. Her voice became a little breathy. \"Alfred pretends to be so confident and aggressive but the truth is... it's all an act. He overcompensates because he has Micropenis.\" \n\n\"What?!?\" Kyle blurted in surprise. \n\n\"He had a hormone deficiency. It didn't form fully when he was a baby.\" She moved a little closer to Kyle and he took a step back, then another as she followed slowly, her eyes now on his towel. \n\nKyle suddenly felt really bad for Alfred, not that it excused his acting like an asshole. His sympathy was quickly replaced by how nervous Fiona was making him with her stare. \"Uh, Fiona? Shouldn't you be heading back to your room-\" \n\n\"Can I see it?\" \n\n\"See what?\" he asked nervously. \n\n\"Your cock. Can I see it?\" she asked again, never taking her eyes from the surface of the towel which was beginning to show a ridge. Her eyes widened. \n\n\"Fiona, you're married. This is really not a good idea! I- I think you'd better leave now.\" \n\n\"Please Kyle! I just want to see it.\" She stepped closer still and he tried to back away but his legs hit the cushioned bench at the end of his bed and he toppled backwards. His towel flew open as he threw his hands back to catch himself as he hit the mattress. \n\n\"Oh!\" she sighed as she feasted her eyes on his growing erection. \"Oh my god! It isn't even fully hard yet!\" she gasped as she dropped to her knees before the bench and placed her hands on his thighs. The sensation of her touch sent a jolt through his cock and it surged as she watched. She cooed with delight. \n\n\"Geezus, Fiona! You can't do this!\" Kyle growled as he struggled to sit up, pushing the mattress behind himself. Her left hand shot forward to press against his hard stomach muscles and she pushed him back down as she wrapped the slim fingers of her right hand around the base of his cock. ",
        "\"Oh fuck, it's so big and hard!\" she gasped. Then his cock was sliding between two plump lips and over an active tongue. \n\nIt was Kyle's turn to swear. \"Fuck! What- what are...\" Then he stopped. Fiona was making him feel really, really good. He didn't ask her to and he certainly wasn't forcing her to, so... why was he upset? He felt himself just... set aside the moral ramifications of her being married and basically a stranger to him. He felt a little light headed and he couldn't tell if it was from how deep she was taking his cock into her throat or if it was the complete surrender and submission of his conscience. \n\nHe pushed himself up to his elbows and, with hunger in his eyes, watched the gorgeous blonde worshiping his cock with her mouth. Her nose pressed against his body again and again as she deep throated his cock. He couldn't take his eyes from her and a slight smile grew on his lips as she delivered a level of bliss he'd never experienced before. \n\nBlue eyes looked up at him as she ran her lips over the fat head of his cock before sucking him deep into her throat once more. He could only moan as his stomach muscles trembled. Her eyes rolled back a little as she felt that under her fingers. Then she began to accelerate her strokes. \n\n\"Oh fuck! If you keep that up I'm going to cum!\" he gasped and she practically vibrated as she squealed in excitement, slamming his cock deep into her throat faster and faster. \n\n\"FUCK! I'M CUMMING! FUCK! OH! CUMMING!!\" he gasped as hot cum sprayed into her waiting mouth. He felt the tip of her tongue tickling the sensitive flesh under the head and he fell back on the bed as his muscles clenched and shook with the intensity of the sensations. \n\nFinally, he was completely spent and he felt her lips gently kissing the head and shaft of his softening cock. With his release achieved, his newfound moral ambiguity slipped away and he was suddenly faced with the guilt of what he'd just... allowed to happen. He pushed himself back up to rest on his elbows again as she stood. Her satisfied smile told him she got what she wanted. \n\nHe watched her swallow and tremble with a happy smile. When her blue eyes opened once more she locked them on his. \n\n\"Thank you, Kyle. I trust I can rely on your discretion?\" she purred. \n\nHe just nodded as he looked up into her eyes. \n\n\"Crush him tomorrow. Crush him and I'll be able to get an apology from him,\" she asserted. \n\nKyle was dazed so he just nodded once more. \n\nWiping the corner of her mouth daintily with a manicured fingertip she smiled happily once more and made her way out of his room, closing the door behind herself. \n\nKyle struggled to get his head working again as he stared at the door. He could have stopped her but... he didn't. Why was he behaving this way? It couldn't still be rebound, could it? He pondered that for a bit. \n\nShaking his head, he pushed himself to his feet and moved to lock the door. \n\nSkye was coming upstairs from the bar and watched Fiona exit from a room with a satisfied smile on her plump lips. The woman then walked down the hall to use her key to enter another room. The young Brit moved into the hall and walked to the door Fiona had exited. Her eyes widened. It was Kyle's room! She grinned as the door might still be unlocked. She boldly turned the handle and slipped inside. \n\nHer grin widened as she came face to face with Kyle who was completely naked! His cock was wet and streaked with a color that matched Fiona's lipstick. \n\nShe locked the door behind her. \n\n\"Skye, what are you doing?\" Kyle asked with a frown but made no effort to cover himself. It was a little late for that. \n\n\"I don't have to ask you what Fiona was doing!\" Skye grinned wickedly. \n\nKyle held her eyes with his. \"She... had her reasons. You can't tell anyone as that would hurt her.\" She nodded. \"Not that there's any reason to worry about my reputation at this point.\" He frowned as he realized once more he was acting uncharacteristically comfortable about standing before the young woman completely naked. He finally caught the mischievous smile slipping over her lips. \"What do you want?\" \n\n\"You never got a chance to show me how good you eat pussy,\" she pouted playfully. \n\nHe really just wanted to get some sleep but he saw she wasn't going to take no for an answer. He knew she could cause him a lot of grief with Alfred so he nodded and moved closer to her. \n\n\"But first, I want you to kiss me like you kissed Dita!\" she begged. \n\nHis eyes widened, then he just gave her a resigned look. \"I don't know why I'm surprised. Is someone watching my every move on this trip?\" he grumbled. \n\n\"So, you admit you're a bit of a player?\" she said with a grin. \n\n\"No, actually I'm not. I don't know why I'm behaving this way. I was never like this... before Gwen left me. She was my first, my one, and only. Dita suggested it might be rebound,\" he said with a frown. He was beginning to think there had to be more to it than that. \n\nShe grinned up at him as she stepped closer. She shivered with excitement as she felt the heat from his naked body so close to her. When his eyes focused on her she could see the hunger in them and her trembling increased. She gasped slightly as he gently slid his fingers into the hair at the back of her head and tilted her face up to his. When his mouth touched hers, it was just the faintest of caresses but she felt it right down to her toes. \n\nHe trapped her lower lip between his lips to softly suck on it then stroked her upper lip with the tip of his tongue. \n\nShe squeaked with the intensity of the sparks he was sending through her body with his sensual kisses and she tried to chase his tongue with hers but he just sucked it between his lips making her moan. \n\nKyles hands traveled down her body as he explored her mouth and nibbled her lips. She gasped as he lightly tugged on her nipples and slid his clever fingers down her sides. \n\nSkye was beginning to pant and desperately wanted him to begin. She quickly undid her belt, button, and fly but his hands slipped into her waistband and slowly slid down the outside of her hips, tugging her pants and panties down as they went. He helped her step clear of her clothes then walked her back to the bed. He sat her on the edge and had her lay back. He slid his hands down her legs as he knelt beside the bed and kissed the inside of her thighs. \n\n\"OH! Oh fuck! Oh Kyle!\" she gasped. \n\nHe moved his kisses upwards as he slowly lifted her legs higher and she moaned and grabbed at the sheets. \n\n\"Please! Please! Put your mouth on me Kyle!\" she begged as his kisses got closer but never quite touched the flesh that needed his kiss the most. \n\nHe pushed her legs back and her ass lifted slightly off the bed. \n\n\"FUCK! Oh Geezus! Kyle!\" she cried as her excitement surged. She was panting with need and clawing at the sheets in desperations. \"Fucking eat me!\" she whined. \n\nKyle's tongue stroked the sensitive skin between her pussy and her rosebud and her body lifted off the mattress as she screamed silently. Then he stroked her pussy from base to clit with the flat of his tongue and her breath gushed out. He sunk his tongue deeply into her pussy as he rubbed against her clit and her body shook from the intense bursts of bliss. \n\n\"FFFFFFAAAAAAHHHHHHH!!\" she screamed as he finally sucked her clit into his mouth and danced his tongue skillfully around it. \n\nHer eyes were rolling back as her climax crashed through her senses. He eased off on her clit when he could tell she was becoming too sensitive and caressed her gushing pussy with his lips and tongue until she weakly pushed at his head to stop. \n\nKyle gently lowered her legs as she panted and gasped on his bed. He stood and made his way into the bathroom to quickly rinse himself once more. \n\nWhen he returned with a towel wrapped around his waist he saw she was sitting on the edge of the bed with her clothes back on. She yawned widely and he smiled at her. \n\n\"God, that took a lot out of me!\" she sighed. \n\n\"It was ok?\" \n\nShe smiled blissfully as she nodded. \"It was heaven!\" \n\n\"Then it's time you headed back to your room to get some sleep. We have a big day ahead of us,\" he replied. \n\nShe nodded and shakily got to her feet. He helped her to the door and gave her another gentle kiss. \n\n\"Your kisses are so dreamy!\" she sighed. \n\n\"Sweet dreams,\" he said as he listened for noises in the hall. He cracked the door open, they heard nothing but silence, and she slipped out. \n\nHe locked the door and checked it twice. He wanted no more visitors tonight! He had to rest up for the ride as he had a lot of people counting on him. No pressure. He smiled and shook his head as he shut off the light. \n\nChapter 5 \n\nKyle awoke feeling better than he had in weeks. The early morning blues he'd been feeling over Gwen's betrayal certainly felt like a thing of the past. A wide smile slipped onto his face as he sat on the edge of the bed. \n\nHe looked out the window and saw the sun was just beginning to creep over the horizon. He had time before breakfast then. \n\nHe went through his morning stretches, then his exercise routine to help loosen his long muscles and tighten his core. Then he took a shower and pulled on his cycling pants and jersey. He assumed Alfred would kit up in some official cycling team colors so he opted for a different message. His jersey's message was simple. Red sides with white centers and a huge red maple leaf on the chest and back. \n\n\"Represent!\" he thought to himself with a grin. \n\nHe tucked the matching gloves into his helmet. \n\nHe finished getting ready, packed, and moved his duffle bag into the hall to be picked up. \n\nThen he headed down to the dining room with his helmet in hand and rolled his eyes when he saw Alfred entering the room ahead of him. The man was wearing the fabled yellow jersey of the Tour de France leader. The man's cockiness knew no bounds. He suddenly felt bad about using that term to describe the man's overconfidence. \n\nWhen Alfred turned his face to the side Kyle saw his scowl. Kyle hoped Fiona hadn't said anything to her husband about their... interlude. Then he felt guilty for willfully participating in Fiona's cheating. \n\nBreakfast was a buffet so Kyle selected foods he knew wouldn't adversely affect his stomach on a strenuous ride. Then he found a table by the window. He relaxed and watched the scenery as he enjoyed the meal. \n\n\"Good morning! May we join you?\" said a lovely British accent. \n\nKyle smiled and turned to look at Helen and Skye who were smiling hopefully. \n\nHe gestured to the chairs before him and they settled in. \n\n\"How are you feeling today?\" Skye asked him with just the hint of a naughty smile on her lips. \n\n\"Really good. You?\" \n\n\"I slept blissfully,\" Skye replied as the wicked grin finally surfaced. \n\nHelen looked between the two of them as she read his neutral expression and her mischievous one. \"Did you two...?\" \n\n\"Mum!\" Skye exclaimed in obviously fake shock and outrage. \n\nHelen's bottom lip pouted just a little as she realized she'd missed another 'little bit of fun' last night. She caught Kyle's eye as he peeled a banana. \n\nHe stopped as he picked up the message from Helen pretty clearly. She wanted to be with him again. He felt his face warming up. This had never happened to him before. He cleared his throat. \"There are plenty of opportunities left on the tour,\" he said softly and Helen's face absolutely lit up. Skye grinned at seeing her mum's happiness. \n\nHe lifted the fruit to his mouth but spotted Kimberly approaching. He gave her a friendly nod. \n\n\"Good morning!\" Kimberly said cheerfully as she walked past with her plate. \n\n\"Good morning, Kimberly!\" Helen and Skye blurted with just a little too much enthusiasm, happy smiles spread across their faces. The redhead was slightly taken aback by the burst of joy from the ladies. She turned her eyes curiously towards Kyle but he just smiled and nodded again with a slight flush to his face. She continued on but glanced back to see Helen trying to hide her excitement about something. \n\nKyle threw a look to Helen to calm herself and she nodded as she turned her attention to her breakfast but the smile refused to be dismissed. \n\nShaking his head slightly, he lifted the banana once more to his mouth but was again interrupted. \n\n\"Good morning Helen, Skye,\" Fiona said as she stopped by the extra chair next to Kyle. \"Good morning Kyle. May I join you?\" \n\nHe blinked in surprise at her as her husband was only two tables away. \"Uh, sure.\" He set his breakfast down on his napkin as he stood up to move his chair a little to give her room. He pulled her chair out for her and took the opportunity to glance quickly over his shoulder to catch Alfred scowling in their direction. \n\n\"Ooo! Such a gentleman!\" Fiona said as she settled onto the chair. \n\nAs Kyle sat back down he noticed the banana was missing. He glanced over at Fiona in surprise. \n\n\"I haven't had one of these in years! Would you mind if I had a little of your banana?\" Fiona asked with a wide eyed innocent look on her face as the tip of the fruit stroked against her plump lower lip. \n\nKyle froze as he wasn't sure what to do. He found himself nodding as he watched the banana slip between those full lips and slide into her mouth ever so slowly. Then he realized she was facing him directly, presenting her husband with a clear view of her suggestive display. Kyle's cock throbbed in his bike shorts and he swallowed as she took her bite and handed it back to him. \n\nShe turned her face forward again, chewed the fruit in her mouth and swallowed daintily. \n\nSkye was watching her with a happy grin on her face. Helen was trying not to stare and concentrated on her own breakfast. \n\nKyle shifted on his chair to make room in his shorts. He caught the satisfied smile on Fiona's lips. \n\n\"Is everything ok?\" he asked her cautiously. \"Alfred's been looking pretty sour since he got here.\" \n\n\"We had a little disagreement last night. I told him I wanted an apology for what he said to you about me. He told me I was being too sensitive and it was actually a compliment. So, I told him which of his orifices he could stick that compliment in. We aren't currently talking and won't until he stops being such a pig and apologizes.\" She smiled at the two ladies across the table. \"You don't mind if I ride with you two today, do you?\" \n\n\"Not at all! You're welcome to join us anytime!\" Helen said with a smile. \n\nKyle turned his attention back to his breakfast and saw she'd eaten half of his banana. This made his mind flash back to the night before when she'd taken him all the way into her throat. He shifted again. \n\n\"Are you alright, Kyle?\" Fiona asked with the hint of a smile on her lips. \n\n\"Yes, fine,\" he mumbled as he ate the rest of the fruit. \"I'm going to see if they have another banana.\" \n\nHe pushed back from the table and dropped his napkin on his plate as he moved behind Fiona. On a bold and reckless impulse, once more completely out of character, he leaned forward slightly as he stepped past her and dragged the bulge in his bike shorts across the exposed skin of her back. She sucked in a sudden breath as she felt the heat of him through the thin, tight fabric. \n\nHe left to head back to the buffet, leaving Fiona gasping and wide eyed as she replayed the memory of the sensation over and over in her mind. \n\n\"What's wrong?\" Helen asked as she watched Fiona's face heat up. The blonde just shook her head and tried not to be too obvious about looking for Kyle across the room. Helen thought she looked a little wild eyed. \n\nKyle was standing before the fruit, oblivious of the selection as he tried to get a handle on what the hell he was doing. He would never have behaved like this before! Was he becoming some kind of man whore? He snorted at the term as he thought of it. He didn't feel like he'd treated any of these women poorly. He was just being way more promiscuous than he'd ever been before. Is this how he wanted to be? He had to rein it in! \n\n\"You ready to lose, lover boy?\" \n\nKyle started from his thoughts. \"What? Sorry, I wasn't paying attention... wait, what did you call me?\" \n\n\"I said, are you ready to lose, lover boy?\" Alfred was annoyed at having to repeat himself as his words lost their impact. \n\nTruthfully, he was pissed off his wife was sitting with 'the enemy', his opponent for today's ride. He psyched himself up before every competitive ride by choosing his enemy. Today, Kyle was it. He knew the kid was close to half his age but he felt confident in his ability to outride him. \n\nAlfred knew that little display Fiona made of fellating the banana was some kind of dig at him. He was unsure what Kyle made of it and that unsettled his mind. He glanced down and saw something to sour his mood even more. No doubt Fiona was aware of Kyle's... dimensions. Cycling pants weren't exactly designed to hide the area. \n\n\"Loverboy?\" Kyle asked, cautiously. \n\nAlfred sneered at Kyle. \"I heard about your little romp with the Livingston ladies, though I use that term for them loosely.\" \n\n\"Hey, say what you want about me, but there's no reason to be rude to the women,\" Kyle said with a scowl. \n\n\"Whatever. Are you going to uphold your side of the bargain?\" Alfred asked impatiently. \n\n\"Yes, but I have a question. \"Are you expecting to race from here to the next chateau or are we only racing during the alternate route section? \n\n\"The entire route! Or will that be too much for you?\" Alfred pushed. \n\n\"Either is fine.\" He paused to look closer at the man. There was an almost tangible sensation of belligerence emanating from him. He leaned a little closer to speak softly. \"You know, you can be aggressive without being hostile,\" he suggested calmly. \n\nAlfred snorted. \"I have a race to win. I'll wait for you at the finish line, but don't make me wait too long,\" he boasted as he walked from the dining area. \n\nKyle just shook his head as he watched the man leave. Alfred was showing his true colors and it wasn't pretty. \n\nComing back to himself he picked up another banana and walked back to the table, peeling it as he went. He looked up and saw three sets of eyes watching him approach. He could almost feel them peeling his clothes off and a twitch went through his cock in response to their hungry looks. \n\n\"I see you found the bananas,\" Fiona said as her eyes were looking directly at the bulge in his bike shorts. Skye burst into giggles and even Helen got in on the fun with giggles of her own. Fiona flashed them both a happy smile then turned her blue eyes on Kyle with heat in her expression. \n\nKyle finished swallowing his breakfast standing next to the table. The calm from the night before settled in place and he nodded to the blonde, returning the heat much to his surprise. Her nerve broke first and she licked her lips nervously. Smiling, he moved behind her chair to toss the peel onto his plate and pluck his helmet from the back of his chair before stepping back out. He ensured his bulge pressed firmly against her bare back both ways then smiled at the ladies as Fiona gasped and shivered. She was biting her lip when he smiled at them, holding his helmet before himself. \"See you at the bikes. Have a good ride, ladies.\" \n\nAs he turned to leave he saw David and Kimberly sitting with Carl and Larissa. He nodded and said good morning to them. David was looking more than a little rough and Kimberly's smile seemed forced with tension in the corners of her eyes. \n\nThe Burkettes smiled happily at him and wished him luck. \n\nHe nodded and made a quick pitstop at the washroom to have one last pee before the ride and adjust himself more comfortably in his shorts. He was grateful when he'd finally relaxed down there as he tucked himself away. \n\nHe then made his way outside to the courtyard where the support van was. Jules and Vivian were wearing their cycling gear and were talking with Dita who would be driving the support van today. ",
        "\"Good morning!\" he said and they greeted him. \n\n\"Alfred seems intent on riding hard today. I will join you to keep an eye on your group,\" Jules said. \n\n\"That would be welcome. I think he's being a little too intense about this. He's forgotten this is supposed to be fun!\" Kyle said with a smile and Jules nodded and shrugged. \"That said I don't intend on losing if I can help it.\" That brought bigger smiles from the guides. \n\nHe thought of something. \"David didn't look very good at breakfast. I'm thinking it might be a good idea to suggest he take a rest day.\" \n\nDita nodded and smiled. He returned it but kept it casual. \n\nKyle went to his bike and did his inspection. Everything was good. He did his stretches and felt his muscles respond smoothly. Vivian came by and filled his water bottles with an electrolyte drink as the day would be another hot one and they would be riding hard. \n\nAs the others came outside he rode around the courtyard getting the feel of his bike and letting his muscles prepare. \n\n\"You ready to go?\" Alfred said as he rode up next to him. \n\n\"When Jules says it's time,\" he responded calmly. Alfred clucked his tongue at Kyle and turned to ride back to the group. Kyle did the same and they listened to Jules give the day's itinerary. The man had a lovely French accent and he could read an accounting manual and make it sound exotic and exciting. \n\n\"We are aware there is a group that will be racing today but again I say, safety is priority number one. OK? Please, do not take any unnecessary chances. Let's have fun and enjoy the day,\" Jules said firmly. \n\nKimberly rode up beside Kyle. \"Did you ask Dita to ask David to ride in the van?\" \n\nKyle saw she wasn't angry so he nodded. \n\nShe relaxed and smiled at him. \"Thank you! I could tell he wasn't up to riding but I couldn't tell him that. He'd just call me a nag.\" She frowned. \"It was a mistake bringing him on this trip.\" \n\n\"He's not enjoying himself?\" Kyle asked. \n\nShe shook her head. \"He hasn't enjoyed doing anything pleasurable with me for a long time,\" she mumbled then her eyes flew wide and her mouth dropped open as she heard her own words. Her face matched the red of her pony tail. \n\n\"It's ok, I get what you mean-\" \n\n\"Hey Dr. Phil! Are we going to race or whine about our feelings?\" Alfred barked. \n\nKyle gave him an annoyed look. Kimberly apologized to Kyle but he just shook his head firmly. \"Jules is still talking with Vivian. When he's ready, we go.\" \n\nHelen, Skye, and Fiona rode by with Carl and Larissa close behind. They all smiled at Kyle and Kimberly, wishing them success and Fiona cheered the loudest. They mostly ignored Alfred who was riding in circles, seething with anger and frustration. \n\nVivian and Jules joined the pack and Kyle picked up the wheel of Jules with Kimberly right behind him. Alfred shot past them mashing on his pedals. Sighing, Kyle swung out and gave chase. Alfred was too strong to let him get too far ahead. He put Kimberly and Jules out of his mind. They'd either catch up or be left behind but he seriously doubted the latter would happen. \n\nHe heard whoops of support as he shot past the group and they saw he was already eating into Alfred's lead. The man had used too high a gear when he launched his attack and his mashing was tiring him out. He'd sunk back to the saddle and was trying to get back to a proper cadence. Kyle eased himself into position behind Alfred and Jules rode up beside him to give him a questioning look. He just shrugged to the man so the guide faded back to ride in Kimberly's slipstream. \n\nAfter about twenty minutes of cruising along at a fast clip, Alfred finally pulled to the left and let Kyle move up to the front to face the wind while he slipped back to ride behind Jules. \n\nKyle allowed the pace to drop a little as there was along way to go and he had no desire to use all of his energy on the lowlands when there was a climb ahead. Besides, he was in France and there was scenery to enjoy. He pulled the group for fifteen minutes before he pulled to the left and let Kimberly take a turn at the front. \n\nAs he dropped behind Alfred, the man looked over at him. \"Are we here to sightsee or race?\" \n\nKyle just smiled and got in behind Alfred who veered left and attacked once more, passing Jules and Kimberly. \n\nShe and Jules had fresh legs so they immediately leapt forward to follow. Kyle fell back a length or two before he was able to catch the back of the group. \n\nOnce more Alfred set a brutal pace for twenty minutes but Kyle kept pace, much to the older rider's annoyance. Alfred moved to the back again. \n\nFrom the front, Kyle allowed the pace to slow slightly once more to give them all a little rest and to enjoy the beauty of the forest canopy they were now riding under. They were getting closer to the base of the day's climb. He stayed at the front for twenty minutes this time. \n\nAs Kyle let himself move to the back, Alfred once more sprung out of his saddle to drop the others as they raced along the roads in the rolling foothills but they reeled him back in. \n\nAlfred scowled but from the previous day's experience knew he was a stronger climber than Kyle so he decided to bide his time. While he wouldn't show it, he was using more energy than he'd expected and right now, he needed to reserve it for the climb. \n\n\"We are approaching the turnoff for the alternate route,\" Jules eventually called out from the front. \n\n\"I'm getting a stitch in my side. I won't be going with you,\" Kimberly answered. \n\n\"You ok?\" Kyle asked with concern. \n\n\"Yes, I'm just not up to a race uphill. I'll go on and wait to meet you on the other side where the route merges again,\" she said. She pulled out to the left and let Kyle and Alfred pass on her right. \"Good luck boys!\" she called out. \n\nKyle grinned his thanks but Alfred just nodded tersely. \n\nThey saw the mountain road veering right and turning uphill just ahead. The road they were on continued through the forest and Kyle thought that would have been a lovely route to do today. But it was not to be. \n\nThe moment they took the slight right turn onto the upwards slope Alfred was out of the saddle and surging forward. \n\nKyle had been anticipating the move and was right there on his wheel, matching his pace. He knew he was in for a tough climb. The top of the pass was around 10 kilometers away with an average grade of 6.5%, though some sections had a grade of 11%. He knew Albert would try to lose him on those steeper sections. \n\nAlfred dropped back into the saddle and Kyle did the same. It was much too early for him to attack against such a strong climber. \n\nJules was hanging on to their tail. Kyle knew he wasn't going to do anything to increase the pace or help as he was just an observer now. \n\nHe took another drink as he watched Alfred for tells for his next attack. He'd been sipping along the route and had maybe half a bottle left. \n\nThey ground their way up the mountain road with the sun beating down on them and Kyle was grateful he'd kept hydrated during the ride. \n\nAs they rounded yet another switchback Kyle felt the grade suddenly increase and downshifted to maintain his cadence. Just as he shifted gears Alfred was out of his saddle and mashing on the pedals to pull away. Kyle responded but Alfred was giving it everything he had. They were getting closer to the top and the doctor wanted a serious lead on Kyle as they crested. The gap grew to three lengths then four. Kyle kept an eye on his opponent ahead of him as he pushed himself to increase his cadence just enough to slow the loss. Jules pulled up beside him but Kyle ignored the man's curious look. Jules leapt out of the saddle and pushed to catch up with Alfred as he could see the man was wobbling just a little with the effort he was making to break Kyle and get his lead. \n\nAs they approached the final switchback before the last climb to the pass Alfred allowed himself to glance back. He saw Jules was on his wheel but he ignored him and looked further back to see Kyle at least fifteen lengths back. Not as far as he'd wanted but the punk had his head down and his legs were pumping at a pace he couldn't possibly maintain for long. He smiled. He'd done it! He broken the fucker! Now for the sweet descent and the dash across the rolling foothills to the chalet! \n\nHe was feeling his 56 years as he struggled to maintain his brutal pace up the last climb. As he crested he glanced back once more expecting to see Kyle on the previous section of road. He was surprised to see Kyle was now much closer and his legs were still rapidly spinning the cranks. \n\nThe descent on the other side of the mountain was a little more forgiving. There were less switchbacks than the climb had but they were still tight. Also, there were longer straight sections as the road wound back to join the main road at the base of the mountain before moving on to the next village. Alfred pedaled as fast as he could and took the corners at speeds that raised the hairs on the back of his neck but Kyle suddenly shot past him and accelerated away. \n\nStunned at the display of reckless speed, Alfred tried to keep up but Kyle's seemingly fearless cornering and minimal braking was too much for Alfred to match. He saw Kyle's lead increase after each bend in the road. After one particularly hairy corner, Alfred heard Jules quickly suck in a breath and swear softly as they watched Kyle narrowly skirt disaster once more then surge further ahead of them. \n\nSoon Kyle was several corners ahead of them and was entering the longer straight descents close to the base. The young man stayed in the saddle but his legs were almost a blur as he pushed his biggest gear to fly down the slopes. \n\nWhen Alfred passed the final turn, reaching the longest straight stretch, he shifted up and poured it on to try to catch up with Kyle. \n\nThat's when he felt it. \n\nThe fatigue. The strain of his muscles complaining he'd abused them too much on the climb. He forced that pain aside as he couldn't afford it. It didn't matter how much he hurt. He couldn't allow Kyle to win. Fiona told him that should he lose to Kyle he'd have to apologize to her in front of the group. That wasn't happening. \n\nGroaning in pain, Alfred pulled himself out of the saddle and hammered as hard as he could to shrink the gap between himself and that cocky shit ahead of him. Ten minutes later he looked ahead and the red and white jersey was nowhere to be seen. Desperate he looked back at Jules. \n\n\"Help me, dammit!\" he growled. \n\n\"I cannot! It is a race between you and Monsieur MacDenny. I did not help him on the climb.\" \n\n\"Fucking useless,\" Alfred grumbled as he tried to push himself harder still. \n\nAs they approached the intersection of the main road and the end of the mountain road they spotted a cyclist waiting for them. They got closer and Alfred saw it was Kimberly. Didn't she meet up with Kyle? Maybe he went off the road somewhere between the last time they saw him and here? He felt almost giddy with relief. As they swept out onto the road Kimberly accelerated to catch up and rode beside Alfred. \n\n\"You haven't seen Kyle yet?\" he asked with a grin. \n\n\"Oh! Yes, I saw him but there was no way for me to match his pace so I just waited for you two,\" she said happily. \n\n\"SHIT! GOD DAMMIT!\" Alfred yelled as he leapt up out of the saddle and dropped right back down onto it as his legs cramped in protest. \"FUCK!\" \n\nHe pedaled as hard as he could but his legs were wobbling with the effort. He gritted his teeth and pushed onwards. \n\nKimberly looked to Jules who just smiled at her so she slipped in behind him. This wasn't her race either. \n\nToo soon they came upon a sign for the chateau on their right and pulled off the main road onto a lovely treed lane that wound its way back to the large building. \n\nThere was Kyle, enjoying a glass of champagne as he stood next to the support van. Alfred saw the fucker didn't even look winded. \n\nAlfred ground his teeth together as he took in the smiling face of the punk as he rode closer. He popped his shoe's cleat from the right pedal and put his foot down. His leg suddenly wouldn't support him and he began to topple over on his right side, his left foot still trapped by the pedal. He went down on the hard packed crushed gravel with a heavy thump. A brilliantly sharp pain exploded across his chest. \n\n\"AAAAHHHHHH!!\" he screamed. \n\nJules was immediately off his bike and kneeling next to him. \"Call an ambulance!\" he called out to Dita who rushed back to the van to get her phone. Kyle knelt down next to him and got his left foot loose of the pedal and eased the bicycle out from between the man's legs. David hustled over from the van to see what the screaming was about. \n\n\"Monsieur Hollings, I believe you may have broken your clavicle. Please hold still,\" Jules said calmly. \n\nHe wouldn't lie back so they helped ease Alfred to a seated position to make him as comfortable as possible as they waited for the ambulance to arrive. \n\nCarl and Larissa rolled up the lane and looked on in shock at the scene. The man leaned over to speak to Kimberly. \"Did Kyle lose and knock Alfred down?\" he asked quietly. \n\n\"No!\" the petite redhead exclaimed loudly causing the others to look her way. She blushed and turned to the banker. \"No, Kyle won the race by a large margin. Alfred just fell over when he got here. We think he broke his collar bone,\" she said with a quieter voice. \n\nVivian guided the remaining three from their group up the lane. \n\n\"What happened?\" Fiona called out as she rode up. \n\nKyle responded. \"Alfred pushed himself too hard. His right leg gave out when he stepped down from the bike and he fell over. He may have broken his collar bone.\" \n\n\"Fuck you!\" Alfred barked from his position on the ground then moaned quietly. \n\nFiona walked up to stand in front of her husband and put her hands on her hips. \"Kyle won?\" \n\nAlfred looked up at the satisfied smile on her face and his expression twisted into something ugly. \"Fuck you too,\" he growled quietly. \n\nKyle scowled at him but Fiona's smile just got wider. \n\n\"What happened to your precious sportsmanship? You lost. You're the loser. You have promises to make good on.\" Fiona said calmly. \n\nThe bitterness in Alfred's face was ugly. \n\n\"Are you going to uphold your side of the bargain?\" Kyle said using Alfred's own words against him. The man's eyes shot to his as he heard them. Kyle could see he was trying to think of a way out but dropped his eyes and nodded with a wince. \n\n\"Oh, I'll make sure he pays his debts to you in full,\" Fiona said firmly. \n\n\"And his promise to you?\" Kyle asked as he looked to the woman. \n\nShe cocked her head to the side as she faced her husband. \"How about it Alfred?\" Fiona asked. \n\nHis eyes came up and there was nothing in them but bitter contempt. \n\nFiona's smile slipped away. \"I see.\" She pulled her shoulders back. \"Then there's nothing left to say. You'll hear from my lawyer tomorrow. Goodbye... little man.\" \n\nShe turned and walked towards the front doors to the chateau as Kyle watched in surprise. \n\nHe was stunned to have witnessed a marriage just dissolve before his eyes. Obviously there was a lot of back history that led to this moment but it was still disturbing to see happen. \n\nAlfred turned his face away. \n\nKyle looked to Jules. \"Do you need any help?\" \n\n\"No thank you, Monsieur MacDenny. I do have a question though? Your descent down that mountain road was terrifying! How much control did you have?\" Alfred couldn't stop himself from looking to hear the answer as well. \n\nKyle grinned broadly as his eyes lit up with excitement. \"I love descending! It makes me feel so alive! That's how I ride at home all the time. I've had a lot of practice on much less forgiving mountain roads. This one was simple!\" \n\nAlfred's expression showed his shocked disbelief. \"He's insane,\" he mumbled. \n\nJules frowned at Alfred's comment but his eyes were troubled as he recalled how close Kyle had come to the edge of the road after whipping through the corners at breakneck speed. \n\nKyle walked over to join the others who were handing off their bikes to Dita and Vivian. He received many smiles. \n\n\"So, just how much of a lead did you have when you got here?\" Carl asked. \n\nKyle thought about that. \"I don't know. I didn't really time it. Maybe seven or eight minutes.\" \n\n\"Minutes?!? Wow!\" Carl exclaimed in surprise. \"I was thinking it would be in seconds!\" \n\n\"I decided not to ride to the top and was waiting at the end of the mountain road where the alternate route ended. When Kyle came down he flew by so fast I knew there was no point in trying to catch up. I was surprised to see how far behind Alfred was when he and Jules finally showed up. By that point, Alfred had nothing left in his legs,\" Kimberly gushed. \n\nThe ambulance finally arrived and the group watched the paramedics load the doctor onto a stretcher and get him into the vehicle. As it left, Jules walked over to join them with a frown. \n\n\"I suppose this means Alfred is done riding?\" Kyle asked the man. \n\nJules nodded and his frown became an uncomfortable look. \"Yes, he said as much. In very colorful terms. He indicated that he would say some very damaging things, about me specifically, in his complaint to the tour company.\" \n\n\"Anything he says to them will be negated by statements we'll make on your behalf. Alfred's a bully and a thoroughly unpleasant blowhard!\" Kyle growled. \n\nJules smiled gratefully. \"Thank you. I would appreciate that!\" \n\nThey nodded and gave him smiles. He returned them and made his way over to help the other guides. \n\nKyle was still pissed off at Albert. \"What a prick!\" \n\n\"We could stand around complaining about the departed member of our group or we could get ready for our wine tour this afternoon,\" David suggested. Kyle let his anger go and nodded. \n\nThey made their way inside. There was a fun evening ahead to get ready for. \n\nChapter 6 \n\nThe chateau was gorgeous inside and out. Inside, the appointments had an 'over-the-top' elegance that took their breath away. The grounds were vast, with beautifully manicured gardens and mazes. A feature of this particular property was its vineyard. The owners made a truly lovely wine and the group would be getting a tour of the facilities before dinner. \n\nKyle had showered and dressed in a pair of khaki pants, a white dress shirt, open at the neck and with the sleeves rolled back, and brown leather shoes and a matching belt. It was casual but neat and fit his hard body very well. He hadn't packed anything much fancier than this as it was his vacation and he wasn't going to be uncomfortable on his vacation! \n\nLarissa and Carl joined him in the salon where they were told to gather to begin the tour. \n\n\"Such a beautiful home!\" Larissa gushed. \n\n\"Did you get the big fancy room again?\" Carl asked. \n\nKyle grinned self-consciously and nodded. \"Yeah. I was going to offer it to Fiona as her husband is paying for it but I can't find her. Do you know if she left?\" \n\n\"Who left?\" Skye asked as she walked into the room with Helen at her heel. \n\nKyle turned to face them. \"Fiona.\" \n\nHelen answered Kyle's question. \"She went to the hospital to drop off Albert's suitcase. She said she'd be back by dinner.\" \n\n\"Any chance they'll reconcile?\" Kyle asked. \n\n\"No. Fiona was still pretty upset with her husband, or I should say soon-to-be ex-husband,\" Helen suggested. \n\nDavid and Kimberly arrived and greeted the group. There was a stiffness between the couple that was easy to detect. \n\n\"How are you feeling?\" Kyle asked the big man. \n\n\"Much better! Being chauffeured around the French countryside in an air-conditioned van is definitely more my speed than forcing my body up and down those bloody hills on a bicycle,\" he moaned. \n\n\"If you rode more it wouldn't feel like such a chore to ride the hills,\" Kimberly offered gently with a smile. "
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "tits",
        "oral sex",
        "anal",
        "romance",
        "mature",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/shifting-priorities"
}