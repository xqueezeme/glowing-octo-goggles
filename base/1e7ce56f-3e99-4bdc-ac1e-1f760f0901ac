{
    "title": "A Father's Justice Pt. 06",
    "pages": [
        "Many thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\nTo understand the full context of what is taking place here, I suggest you first read, \"A Father's Justice Pt. 01,\"\"A Father's Justice Pt. 02,\" \"A Father's Justice Pt.03,\" \"A Father's Justice Pt. 04\" and \"A Father's Justice Pt. 05.\" For those who may be wondering, there is one final part left. I had originally planned to end it with this part, but it got a bit more involved than I thought and I didn't want to rush the ending.\n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n...\n\nEnd of \"A Father's Justice, Pt. 05\":\n\n\"You gonna be alright?\" Ryan asked. \"You did put your career on the line tonight.\"\n\n\"Let me worry about my career,\" Smith said. \"It'll be alright. I'll call you tomorrow, okay? You gonna be home?\"\n\n\"I'll be flying back east with Sarah, Bob and Ryan, but you can still get me on my phone,\" Ryan said. Smith nodded his head.\n\n\"Okay,\" he said. \"I'll be in touch.\"\n\n\"Thanks again,\" Ryan said. \"For everything.\"\n\n\"You're welcome,\" Smith said, shaking Ryan's hand. Weary, Ryan closed the door and headed upstairs where his wife-to-be was waiting. He knew they would only get a few hours sleep before she had to get up and tend to her chickens.\n\n\"I need a break,\" he said to himself as he laid down next to Beverly.\n\n\"Goodnight, my husband-to-be,\" Beverly said as she kissed him on the face. He returned her kiss and wrapped his arm around her. She felt so soft and warm.\n\n\"Goodnight, my wife-to be,\" he responded before falling asleep.\n\n...\n\nAnd now, \"A Father's Justice, Pt. 06\":\n\nThe next morning, Ryan woke to the smell of bacon coming up from the kitchen. He rubbed his eyes and looked at the clock -- 7:00 am. Crap, he thought. Beverly liked to get up early to feed her chickens. He glanced at her side of the bed and noticed she was already gone. He didn't even know she was up.\n\nHe stumbled out of the bed, took a quick shower and dressed in his usual clothes. That's when he saw the note on the dresser.\n\n\"My dearest Ryan,\" it began. \"I got up early to go tend to the chickens. I have some deliveries to make this morning, so I'll be gone till about 12:00. I knew you were exhausted from last night, so I let you sleep. Sarah said she would make all y'all some breakfast. I know you planned to take the kids home today. If you have to leave before I get back, just call. I'll be okay. Love you so much!\"\n\nThe note was signed, \"Your soon-to-be happy wife, Beverly.\" He smiled and shook his head. She was so devoted to those chickens, he thought. How could she have done what she did last night and still get up so early to tend to them, he wondered.\n\nHe heard the television playing as he made his way downstairs. Buster saw him coming down, and motioned for him to come in the front room. Little Ryan was sitting on the couch with Buster and Ian, so he picked the youngster up and set him on his lap as he took a seat. The boy's eyes were glued to the television, like everyone else in the room.\n\n\"Check this out, man,\" Buster said, turning the volume up a bit.\n\n\"Shares of Knight Petroleum took a hit this morning as news broke of a possible attack on a southeastern New Mexico retreat owned by the company,\" the anchor said. \"State law enforcement officials are working with agents of the FBI to determine what actually took place. We take you live to a press conference in progress at the camp.\" The scene shifted to a report taken at the site of the camp. Agent Smith's bleary-eyed face took up the screen.\n\n\"We are still collecting evidence in an effort to determine what took place here overnight,\" he said.\n\n\"How many were killed or injured in the attack?\" one reporter shouted.\n\n\"We are not releasing any of that information until the next of kin have been notified,\" Smith said.\n\n\"Were there any survivors or witnesses?\" another reporter asked. Smith shook his head.\n\n\"No,\" he said. \"None that have come forward at any rate. No survivors have been located in the camp.\"\n\n\"Is it possible drugs may have been involved?\" asked a third reporter.\n\n\"We are examining all possible scenarios,\" Smith said.\n\n\"What about terrorism?\" another reporter shouted out.\n\n\"As I indicated before, we are looking into all possibilities,\" Smith said.\n\n\"Could this be related to the ongoing investigation of the former CEO, Jacob Knight or the shooting of interim CEO Lisa Knight?\" another reporter asked.\n\n\"We have not ruled out either of those possibilities,\" Smith said.\n\n\"If so, how would this impact either of those investigations?\" the first reporter asked.\n\n\"You'll have to direct that question to the federal prosecutor in charge of those cases,\" Smith said. \"I'm here to investigate a possible crime, not speculate on the impact of an ongoing case where litigation is either pending or ongoing.\"\n\n\"Damn, that Smith fella is one cool cucumber,\" Buster said. Everyone agreed.\n\n\"Can you tell us anything about how this was reported?\" one reporter asked. \"This is a fairly remote area and from what we can tell, the nearest neighbor is several miles away.\" Smith turned to a local deputy sheriff, who stepped to the podium.\n\n\"Actually, the nearest neighbor is about 12 miles away,\" the deputy said. \"He happened to be outside when he thought he heard gunfire from this general direction. He called 911 and it took officers up to an hour and a half to determine this was the site of the incident.\"\n\n\"Why so long?\" one reporter asked.\n\n\"Well, look around,\" the deputy said. \"There's very few roads going in and out of here, not very many people. There's a lot of territory to cover out here. This ain't the big city, you know.\"\n\n\"Agent Smith, have you been in touch with any of the executives at Knight Petroleum?\" a reporter asked.\n\n\"I have not, no,\" he said. \"We attempted to make contact but were told they were not available.\"\n\n\"Don't you find that a bit odd?\" the second reporter asked.\n\n\"We find a lot of things about this... incident odd,\" he said in reply. \"That will be all for now. We'll be in touch when we have something new to share. Thank you.\" He stepped down, and the scene shifted to a reporter on the scene, speaking into a microphone.\n\n\"And we just heard from FBI Special Agent John Smith, who basically said they are looking into a number of possible scenarios, and have no real information to share at this time,\" the young woman said. \"It is interesting to note that earlier, two damaged SUVs with what appeared to be Mexican license plates were spotted being removed as well as the damaged fuselage of a Lear jet registered to Knight Petroleum. We were able to confirm the aircraft is one of a small fleet used to ferry executives and VIP clients. Back to you, George.\"\n\n\"Thank you, Sherry,\" the male news reader said when the scene shifted back to the studio. \"We now go live to Central City, where reporters are waiting to hear from a media spokesperson at Knight Petroleum.\" The scene shifted once again to a briefing room. A podium sat in front of a curtain that displayed the Knight Petroleum logo. As they watched, an attractive brunette took her place behind the podium and consulted her notes.\n\nSarah, seeing that everyone was glued to the news on the television, started bringing plates filled with scrambled eggs and bacon into the living room. She set a place mat on the coffee table and put a smaller plate of food for little Ryan on it.\n\n\"Sorry, hon,\" Bob said. \"Do you need some help?\"\n\n\"No, no, I got it,\" she said. \"You boys keep your eyes on the news.\" The men began eating as soon as they had food in front of them. Ryan sat the young boy down in front of the coffee table so he could eat his breakfast. As they watched, the brunette looked at the reporters in the room and spoke.\n\n\"As you all know, reports emerged this morning that a retreat owned and operated by Knight Petroleum allegedly came under attack by a person or persons unknown,\" she said, reading from her script. \"There have been reports of casualties, but we are not releasing any names pending notification of next of kin. Of course, our condolences go out to the families of those individuals and we will do everything we can to minimize the impact on the families of the victims. We are working with federal and state officials in New Mexico to determine the facts of the case. We will now take a few questions from members of the press.\"\n\nAll of the reporters raised their hands, and the brunette picked one in the front row.\n\n\"A report from the scene said a damaged Lear jet registered to Knight Petroleum was removed from the scene for analysis,\" the reporter began. \"As I understand from your own records, that jet is one of several used by your company to ferry executives, members of the board and VIPs. Were any of your executives or board members on that aircraft or in the camp at the time? And if so, what is their disposition?\"\n\n\"I am not privy to that information,\" the brunette said. \"At this time, I do not know who was on the aircraft. It's possible that it was empty and simply made a stop there to refuel. Our flight crews do that sometimes, and often make use of the facilities for overnight sleepovers. We also keep a small staff stationed at the facility for maintenance and security.\"\n\n\"You don't know where your own executives or board members are?\" the reporter pressed.\n\n\"I didn't say that,\" the brunette said. \"I simply said I do not know if any executives were on the aircraft or at the facility. It's quite possible there were no passengers.\"\n\n\"But the flight plan we uncovered showed the aircraft left here the day before yesterday, and the plan said its destination was New Mexico,\" another reporter said. \"Also, the manifest we obtained showed the aircraft had nine passengers on board, the maximum number it could safely carry. Can you explain that?\"\n\n\"I cannot explain that,\" the brunette said. \"I will have to check with management to verify that allegation.\"\n\n\"Why haven't we heard from your board of directors, Mr. Elmer Jenkins?\" another reporter shouted out. \"Or anyone else from the board?\"\n\n\"I cannot answer that,\" the brunette said, prompting groans from the reporters. Another reporter stood up.\n\n\"There have been several reports in the last day or so from the UK that say the body one of your board members, a Mr. Colin Blackstone, was found dismembered and stuffed in a suitcase in Manchester, England,\" the reporter said. \"How do you respond to that?\"\n\n\"We just received those reports as well,\" the brunette said. \"Mr. Blackstone recently returned to England to deal with a family emergency. We have nothing else to report other than we are working with authorities there to solve the case. That will have to conclude today's conference, ladies and gentlemen. Thank you very much.\" She turned and left the podium, clearly agitated. Reporters shouted questions as she left, but she never acknowledged them. Ryan turned to Jorge and Bill.\n\n\"Blackstone,\" Ryan said. \"That's the guy Timmy fingered as the one who introduced him to Jake, remember?\" Jorge nodded his head.\n\n\"What?\" Sarah asked.\n\n\"Yeah,\" Ryan said. \"Timmy was the one who shot Lisa. According to him, this Blackstone fella approached him about the job, took him to meet Jake, then set him up with the gun, the instructions and the payment. I asked Elmer about it, and he told me Blackstone had to go home for a family emergency.\"\n\n\"Bloody hell,\" Ian said.\n\n\"I agree,\" Ryan said. \"But we've got another problem.\"\n\n\"What's that?\" Buster asked.\n\n\"If Sheriff Coltrane saw that report, he'll be looking for answers,\" Ryan said.\n\n\"That's the sheriff who came out last night and escorted us to the state line?\" Jorge asked. Ryan nodded his head.\n\n\"One and the same,\" Ryan said. \"Agent Smith and I talked directly to him. Russell T. Coltrane may come off as a down-home country sheriff, but he's sharp. He'll put two and two together and I suspect he'll be out soon.\"\n\n\"Then we should probably make ourselves scarce,\" Buster said.\n\n\"I agree, mate,\" Ian said.\n\n\"If Gunner can help me out, I can have the chopper ready to go in 15 minutes,\" Jim said.\n\n\"Bill and I should probably head out as well,\" Jorge said. \"He got a good look at me and my van.\" Ryan thought for a moment and nodded his head.\n\n\"Alright,\" he finally said. \"Let's roll.\" They all got up and put their things together. Bob went out with Jim and helped get the chopper ready to fly. Ryan walked Jorge and Bill to the van.\n\n\"Do me a favor, would ya?\" Ryan asked Jorge.\n\n\"Sure, anything,\" Jorge said.\n\n\"Can you let me know when Jake has his next court appearance?\" Ryan asked.\n\n\"I think he's set to be in court tomorrow,\" Jorge said. \"I'll have Bill double-check the docket on our way back and we'll let you know.\"\n\n\"You can do that from your van?\" Ryan asked. Jorge smiled.\n\n\"Of course,\" he said. \"That's why they call it 'mobile.' We can access the Internet from anywhere these days. Welcome to the 21<sup>st</sup> century.\"\n\n\"Okay, okay,\" Ryan said. \"Thanks.\"\n\n\"No problem,\" Jorge said. \"We'll be in touch.\" They said their goodbyes and Ryan watched as they drove off. He went back inside the house and met Ian, Cap and Buster. They had each gathered their things and were heading out. Ryan shook their hands.\n\n\"Thank you, guys,\" Ryan said. \"I really appreciate all your help.\"\n\n\"No worries, mate,\" Ian said. \"Just make sure to invite us to the wedding.\"\n\n\"You got it,\" Ryan said. They walked out to the chopper and Ryan watched as it lifted off, raising a huge cloud of dirt. After the dust settled, he saw Bob making his way to the house.\n\n\"You think Elmer may have had that Blackstone guy murdered?\" Sarah asked as she cleaned up the dishes. Ryan nodded his head.\n\n\"I do,\" he said. \"He was a loose end that had to be eliminated.\"\n\n\"What a mess,\" she said. \"And to think Lisa was part of all that. What a waste. She had us all fooled.\" Ryan noticed her use of her mother's name. It was the first time he could remember her not calling Lisa, \"Mom.\"\n\n\"That she did,\" Ryan said. He looked at little Ryan, who was sitting on the couch, watching television. \"I'm glad to see Ryan's up and about.\"\n\n\"Me too,\" Sarah said. \"He had me so worried last night. That Cap guy checked him out last night and said he should be okay. Still, I wanna scratch that bitch's eyes out for what they did to him.\" Ryan had no argument, so he gave her a hug and a kiss on the forehead.\n\n\"I know how you feel,\" he said. \"Look, I have to make some calls. I'll be right out front.\"\n\n\"Okay, Dad,\" she said.\n\n...\n\nFBI Special Agent John Smith looked around at what was left of the camp. It looked quite different in the light of day. He remembered the events of the previous evening as he took in the carnage. He shuddered when he saw Elmer's burnt head in the still-smoldering fireplace of the building where he, Jorge and Ryan confronted Jenkins and considered himself glad that Ryan insisted he leave the building when he did. He knew of the old mercenary's reputation, but he never fully realized just how vicious Ryan could really be.\n\nHe had seen things like this before during his time in the SEALs, but never from anyone he had served with. As he watched, crime scene investigators cataloged and bagged thousand of rounds of 7.62 mm brass -- shells he knew came from the minigun Bob used last night.\n\nA part of him felt sorry for the poor suckers at the receiving end of that barrage. More than one pile of bloody body parts were recovered from the compound and he knew the chances of them being positively identified were slim. There just wasn't enough left to put back together.\n\nAmong the evidence collected were two cross-bow bolts removed from the dead bodies of two security guards. He remembered shooting one of those bolts last night, killing one of the guards.\n\n\"Any fingerprints on these?\" he asked Jones as he looked at the bolts that were now in separate evidence bags.\n\n\"No, none,\" Jones said. \"Whoever used them knew what they were doing.\" Smith grunted in response.\n\n\"Any video? Surely they had some surveillance set up,\" Smith said.\n\n\"They had a system set up, but all of the cables ran through the security shack, and they were cut,\" Jones said. \"So, no, there isn't any surveillance footage.\" Smith nodded his head. Ryan was apparently more clever and thorough than he originally thought.\n\n\"What about tire or shoe tracks?\" Smith asked.\n\n\"Forget about it,\" Jones said. \"When I got here the whole road was jammed with all kinds of vehicles. They had to bring in a big ass truck to get rid of the trees blocking the gate and there must've been a hundred agents and LEOs stomping all over the place. Whatever tracks might've been there are long gone.\"\n\nSmith nodded his head as he took in what Jones said. He mentally considered what was found in the camp.\n\nThe buildings contained the nude and nearly-nude bodies of a number of people, some of whom were obviously shot as they engaged in sex. He and Agent Jones had uncovered a huge cache of illicit drugs and weapons. Cocaine, marijuana, meth and date rape drugs like Ecstasy were found, making him wonder what really went on here.\n\nThey also found a treasure trove of DVDs and documents, all of which were bagged and tagged for further examination back in El Paso. Several computers were bagged and taken for further examination. Agent Jones came up to him and handed him a document. He looked it over, and saw it was a list of known casualties. Except for Colin Blackstone, the list included the entire board of directors of Knight Petroleum, along with the company's chief financial officer.\n\nThe list also included the four names of Mexican nationals, two of which he recognized as known members of a vicious drug cartel that operated across the border. Why were they here, he wondered. Eight unidentified women were included on the list. Perhaps, he thought, they were prostitutes who were either brought across the border or procured in one of the local towns. Or both.\n\n\"I've already forwarded this to El Paso,\" Jones said. \"They'll arrange all the notifications. They'll also reach out to the Mexican consulate.\" Smith nodded his head.\n\n\"Good,\" he said.\n\n\"What do you think, boss? A drug deal gone bad?\" Jones asked. Smith looked around before speaking.\n\n\"Possibly,\" Smith said, fully knowing the real story. \"How would you call it?\" Jones thought for a bit before speaking.\n\n\"Just from the amount of drugs, the viciousness of the attack and the presence of those Mexican nationals, I'd be tempted to say it was drugs,\" Jones said. \"Maybe a rival cartel did this and the Knight people were just in the wrong place at the wrong time.\"\n\n\"Hmm,\" Smith said. \"Sounds logical to me.\" Smith's calm voice masked the turmoil taking place inside him. He had served his country all his adult life, first in the Navy as a SEAL team member, then as a Special Agent in the FBI. Now, he was directly involved in covering up his own illegal actions.\n\nHe thought about the situation as he looked around the compound. He knew how easy it was for a case to fall apart. All it would take was a partial fingerprint, a reflection in a cell phone photo or a tiny blob of DNA from someone's spit. Was Ryan really that good, he wondered. Could he really have pulled this off without leaving anything behind?\n\n\"Anything else?\" he asked Jones. Jones shook his head.\n\n\"No, boss,\" he said. \"That's pretty much it. Everything is on its way to El Paso.\" Smith nodded his head. As he thought about the scene, something niggled at the back of his mind. Ryan said he saw no vehicles here earlier. He knew the jet carried maybe nine people, tops. The two SUVs might have carried 10 or 12. What about the others?",
        "From what he and Jones saw, it appeared that at least 15 people had been staying here full time. Surely, Knight wouldn't have left them here without transportation. And could someone really have heard the gunfire from 12 miles away? Something didn't make sense here, and he was determined to get to the bottom of it.\n\n\"Okay, lets get on outta here,\" he said. \"I'm tired and I could use some sleep.\"\n\n\"Sure, boss,\" Jones said.\n\n...\n\nRyan finished making his calls and went back in the house. Sarah was playing with little Ryan out by the pool, so he went into his office. He knew he would have to get rid of any evidence from last night's raid, so he disassembled the weapons he and Smith used, cleaned them thoroughly and placed them in a box. He would have to get rid of them, but how?\n\nHe picked up his desert camouflage and the gloves he wore, and noticed the dried blood. His boots also had blood on them. He put it all in a bag and carried them to an incinerator by his pistol range where he burned most of his trash. He put the clothing in the unit, along with his garbage and fired it up, hoping it would do the trick.\n\nHe took the box of pistol parts and dug a hole by the range, covering the box with dirt. He knew he would have to eventually dump the parts somewhere else, but at least this would get them out of the house.\n\nHe got back and had just cleaned up when he heard a car pull into his driveway. He looked and saw it was Sheriff Coltrane. He looked around to make sure there was nothing incriminating in the open, then opened the door and went outside.\n\n\"Good morning, Sheriff,\" Ryan said as he stepped onto his porch. \"What can I do for you this morning?\" Sheriff Coltrane came up to the porch and offered his hand, which Ryan accepted. \"Can I get you something? Coffee? Tea?\"\n\n\"No, but thanks for asking anyway, Mr. Caldwell,\" he said. \"Mind if we talk for a couple minutes?\"\n\n\"Not at all, Sheriff,\" Ryan said. \"Have a seat. Mind if I light up?\"\n\n\"Your house,\" the sheriff said. \"Mind if I join ya?\"\n\n\"Help yourself,\" Ryan said, lighting up a cigarette.\n\n\"How's Beverly these days?\" Sheriff Coltrane asked.\n\n\"Doing quite well, thanks for asking,\" Ryan said. \"She's out delivering eggs this morning.\"\n\n\"Yeah, I saw her over by the Jennings place,\" the sheriff said. \"You two getting along okay?\"\n\n\"Yes, as a matter of fact, I asked her to marry me,\" Ryan said. \"And she said yes.\"\n\n\"Good for you,\" Sheriff Coltrane said. \"Congratulations. I knew the two of you would hit it off.\" he took a long drag off his cigarette before continuing. \"I see y'all got home safe and sound last night. Everything go okay?\"\n\n\"Yeah, it did, thanks,\" Ryan said. He knew the sheriff was toying with him and waited for the other shoe to drop.\n\n\"You see the news this morning?\" the sheriff asked. Here it comes, Ryan thought.\n\n\"You mean about the incident in New Mexico last night?\" Ryan asked. \"Yes, I did.\"\n\n\"Interesting, the FBI guy they interviewed was the same fella I talked to last night,\" Sheriff Coltrane said. \"I took a look at my map, and noticed that camp's not too far from where I left you at the state line last night. You wouldn't happen to know anything about that, would you?\" Ryan shrugged his shoulders. He looked at the sheriff and tried to read his expression, but was unable to. He thought for a moment and made a decision. He hoped it was the right one.\n\n\"They had my daughter and my grandson,\" Ryan said quietly. \"They were going to rape her then sell her off and do God knows what to the boy if the feds didn't back down from prosecuting Knight Petroleum.\" He looked at the sheriff, but was still unable to read his face. \"Tell me, sheriff, what would you have done if it was your daughter? Your grandson?\"\n\n\"Well, Ryan,\" the sheriff said. \"May I call you Ryan?\" Ryan nodded his head. \"I reckon if it were me, I'd move heaven and earth to get 'em back.\" The sheriff looked at him hard before continuing. \"You know, Ryan, I may be a country sheriff, but I'm not stupid,\" he added, his west Texas accent all but gone. Ryan looked at him, confused. \"I figured it was something like that. I understand the secrecy, but I just wished you would've told me up front.\" Ryan nodded his head.\n\n\"So, what are ya gonna do now?\" Ryan asked. Sheriff Coltrane shook his head.\n\n\"Nothing I can do or say, even if I wanted to, which I don't,\" he said. \"That FBI fella swore me to secrecy, remember? Besides, there ain't no law against riding in a van late at night. At least not in this county. Far as I'm concerned, if you took that bunch out, you did us all a big favor.\" Ryan chuckled, noticing the accent had returned. Who was this guy, really, he asked himself.\n\n\"Speaking of the law,\" Sheriff Coltrane added. \"You ever consider going into law enforcement?\" Ryan laughed.\n\n\"Seriously?\" he asked. \"I'm an old man, and I only have one eye.\" Sheriff Coltrane laughed.\n\n\"Old?\" he asked. \"Son, I'm a lot older than you. Besides, I have to deal with this,\" he said, lifting one trouser leg to reveal a prosthetic limb.\n\n\"So, why are you asking me?\" Ryan said. \"I've never done police work in my life, and I'm too old to start out at the bottom.\"\n\n\"Fortunately, that's not a requirement to be sheriff in this county,\" the sheriff said. \"Sheriffs here are appointed by a county board, based on recommendations from local citizens.\"\n\n\"That's all well and good, but where are you going?\" Ryan asked.\n\n\"I'm planning to retire in a couple months,\" the sheriff said. \"Been thinking about who might be best to take my place.\"\n\n\"Surely you have deputies who would be far more qualified than me,\" Ryan said.\n\n\"Yeah, they're a good bunch of fellas alright,\" Sheriff Coltrane said. \"Hell, one of 'em even served on the LAPD before coming here. But none of 'em want the job. I already asked.\"\n\n\"Why me, then?\" Ryan asked.\n\n\"Folks here like you,\" the sheriff said. \"They all say you're a good man, and I agree. Besides, you command respect. Trust me, it's a lot safer than what you did before you moved here.\" Ryan looked at him, shocked.\n\n\"Oh yeah,\" the sheriff said. \"I know all about you. You're not the only one with friends, you know. Does Beverly know?\"\n\n\"Yes, she does,\" Ryan said.\n\n\"And she's okay with it?\" Ryan nodded his head.\n\n\"Well, there ya go,\" the sheriff said.\n\n\"If I do this, will you at least help snap me in?\" Ryan asked.\n\n\"Of course,\" Sheriff Coltrane said. \"I wouldn't just throw you to the wolves.\"\n\n\"I have a few loose ends to tie up and I'd have to talk with Beverly about it first,\" Ryan said.\n\n\"I'd expect nothing less,\" the sheriff said.\n\n\"When do you need to know?\" Ryan asked.\n\n\"Anytime in the next few days will work. Just don't wait too long, though,\" the sheriff said. \"You let me know, and I'll put in my recommendation to the board. By the way, when are you and Beverly getting married?\"\n\n\"We haven't set a date yet,\" Ryan said.\n\n\"Well, I'd appreciate an invitation,\" the sheriff said. \"Believe it or not, I think the world of her. She's been through a lot.\"\n\n\"Consider it done,\" Ryan said. \"By the way, why don't you come on in and meet my daughter and grandson?\"\n\n\"I'd love to,\" he said. \"And please, call me Russell, willya?\"\n\n\"Okay, Russell,\" Ryan said. They went inside and saw Bob, Sarah and little Ryan in the kitchen. Sarah looked up as they walked in.\n\n\"Bob, Sarah, this is Sheriff Russell Coltrane,\" Ryan said. \"Russell, this is my daughter, Sarah, her husband, Bob and my grandson, Ryan.\" Russell smiled as he gave Sarah a hug, then shook Bob's hand. He knelt down to say hello to little Ryan, but the youngster held on to Sarah's leg.\n\n\"It's okay, young feller,\" Russell said. \"I'm a friend of your granddad's.\" Little Ryan looked up at Sarah then at Ryan, who smiled and nodded his head. Slowly, he let loose of Sarah's leg and held out his hand. Russell smiled and took the boy's hand in his and gently shook. Russell stood up and looked at Sarah.\n\n\"That's quite a young fella you got there,\" he said. Sarah smiled nervously as she thanked him.\n\n\"It's alright, sweetheart,\" Ryan said. \"He knows.\" Russell nodded his head.\n\n\"Are you alright?\" Russell asked her.\n\n\"Yes, we're doing fine, thanks,\" she said.\n\n\"I'm glad to hear that,\" Russell said.\n\n\"Are you going to,\" she began before Russell shook his head.\n\n\"Arrest your father?\" he asked, finishing her question. She nodded her head. He shook his head before speaking. \"No, I'm not. Hell, I'd have done the same thing if it were my daughter. In fact, I'd like your dad to take over when I retire.\"\n\n\"Really?\" she asked, shocked.\n\n\"I can't think of anyone better to protect the folks in these parts,\" Russell said.\n\n\"Wow,\" she said, smiling. \"My dad, the sheriff.\" Ryan shrugged his shoulders.\n\n\"Are you gonna do it, Dad?\" Bob asked.\n\n\"Well, I need to talk it over with Beverly first and I have a couple loose ends to deal with, but I think so,\" Ryan said.\n\n\"Well, congratulations, Sheriff,\" Bob said, holding out his hand. Ryan smiled as he shook Bob's hand.\n\n\"Well, folks,\" Russell said. \"I've got to be going. Good meetin' y'all.\"\n\n\"Good meeting you, Sheriff,\" Bob said. Ryan walked Russell to the door just as Beverly drove up. They met in the driveway.\n\n\"Hey, Beverly,\" Russell said.\n\n\"Hello, Sheriff,\" she said. \"Is everything alright?\"\n\n\"Everything's fine dear,\" Ryan said. \"He knows.\" She looked at Russell, wondering if he was taking her husband away.\n\n\"It's alright, darlin',\" Russell said.\n\n\"So you're not going to arrest Ryan?\" she asked.\n\n\"Arrest him?\" Russell asked. \"Hell no. I plan to make him sheriff.\" She looked at him shocked.\n\n\"Seriously?\" she asked.\n\n\"Well, the final decision is up to the county board, of course, but if I have my way, yes,\" Russell said.\n\n\"I haven't said yes yet,\" Ryan said. \"I told him I needed to talk to you first.\"\n\n\"Thank you for that,\" she said. \"Personally, though, I think it'd be a great idea. It'd get you out of the house anyway,\" she added with a smile. Russell laughed before continuing.\n\n\"By the way, I hear congratulations are in order,\" he said. \"You're daddy would be so proud.\"\n\n\"Thank you,\" she said. Suddenly her face changed. \"Oh my God, that reminds me.\"\n\n\"What?\" Ryan asked.\n\n\"Who's gonna walk me down the aisle?\" she asked. Ryan looked at her for a moment, then they both turned to Russell. Beverly spoke up first. \"Sheriff, I hate to ask, but would you...\"\n\n\"What? Walk you down the aisle? Why, I'd be proud to, Beverly,\" Russell said. \"That is, if Ryan doesn't mind.\"\n\n\"Not at all,\" Ryan said. \"In fact, I can't think of anyone better.\"\n\n\"Well then,\" Russell said. \"It's settled.\" Beverly wrapped her arms around him and kissed him on the cheek.\"\n\n\"Thank you so much,\" she said.\n\n\"You're welcome,\" he said. \"But only if you start calling me Russell.\"\n\n\"I will, Sher, er, Russell,\" she said.\n\n\"Well, I'd better be getting,\" Russell said, opening his car door. \"Y'all have a good day, y'hear?\"\n\n\"Will do, Russell,\" Ryan said. \"And I'll call when I get back. I wanna talk to you a bit about this before I make a final decision.\"\n\n\"Sounds good, Ryan,\" Russell said. \"See ya then.\" They waved as Russell drove off. Ryan helped her carry her things into the house and poured her a glass of tea.\n\n\"So, what happened?\" she asked when he handed her the tea.\n\n\"Did you hear the news this morning?\" Ryan asked.\n\n\"I heard something about it on the radio,\" she said. \"They're suggesting it was a drug cartel or something.\"\n\n\"Well, as I suspected, Russell saw the report and put the pieces together,\" Ryan said. \"He came out to talk to me about it. I thought for a moment he was going to arrest me, but he didn't. Said Smith swore him to secrecy. He also said he knows about my past. He had every right to put me in cuffs and haul me off, but he didn't. Instead, he says he wants me to take over his job when he retires.\"\n\n\"I guess someone's looking out for you,\" Beverly said.\n\n\"Reckon so,\" he said. \"So, how'd it go with you today?\"\n\n\"Went very well,\" she said. \"I picked up a couple more customers today.\"\n\n\"Good,\" Ryan said. \"By the way, I've got reservations to fly the kids back set for this afternoon. I didn't want to leave until you got back.\"\n\n\"I appreciate that,\" she said. \"I'm sorry I didn't wake you up this morning, but I figured you'd be plum tuckered out. I know I was.\"\n\n\"Thanks, I appreciate that, but you still should've woken me up,\" he said. \"I'd have gladly helped you out.\"\n\n\"I know, but I wanted you to get some sleep,\" she said. \"Speaking of sleep, I'm wiped. I hope you don't mind if I go home and crash.\"\n\n\"I don't mind a bit,\" he said. \"You deserve a good night's sleep.\"\n\n\"Thanks,\" she said, standing up. He took her in his arms and kissed her deeply.\n\n\"I love you so much,\" he said. She smiled and kissed him back.\n\n\"I love you more,\" she said. \"Call me tonight, okay? I wanna make sure you got there okay.\"\n\n\"I will,\" he said. \"You run on home now. I'll call you this evening. Maybe when I get back you can model those little shorts for me again.\"\n\n\"Maybe I'll make a new pair, just for you,\" she said with a wicked gleam in her eye. They held each other for a bit, looking in each other's eyes.\n\n\"Okay guys,\" Sarah called from the kitchen. \"There's young eyeballs here.\" Ryan and Beverly smiled and turned to Sarah who was holding little Ryan. The boy looked at Beverly, somewhat frightened. Beverly walked over to the young boy and ran her hand through his hair.\n\n\"I'm sorry, we've never really met,\" Beverly said.\n\n\"Are you grandpa's friend?\" little Ryan asked.\n\n\"Yes, she is,\" Sarah told him. \"In fact, she's gonna be your new grandma.\" The boy looked at Beverly for a moment, confused.\n\n\"Are you really gonna be my new grandma?\" he asked. Beverly smiled and nodded her head.\n\n\"Yes, I am,\" she said. \"Is that okay with you?\" The boy thought for a moment before answering.\n\n\"Are you gonna help grandpa find his eye?\" he asked.\n\n\"If he wants me to, yes,\" Beverly said. Ryan looked as if he was deep in thought. Then he looked up at her.\n\n\"Okay then,\" he said. \"You can be my new grandma.\" Beverly smiled and took the boy in her arms.\n\n\"Thank you,\" she said. \"That means so much to me.\"\n\n\"You're welcome,\" he said. Beverly stood up and looked at Sarah.\n\n\"He's a lovely boy,\" she said. \"Reminds me of my own son. Well, if you don't mind, I'm going to run home and get some much needed sleep.\"\n\n\"Sure, Mom, you've earned it,\" Sarah said, hugging her. Beverly's eyes watered as she heard Sarah call her \"Mom.\" They broke apart and Beverly headed for the door.\n\n\"Don't forget to call,\" she said as she opened the door.\n\n\"I won't, dear,\" Ryan said. He walked to her and gave her one more kiss. \"Have a good sleep, okay?\"\n\n\"Don't worry, I'll be asleep as soon as my head hits the pillow,\" she said. He watched as she walked to her car. He waved when she left and saw her wave back.\n\n\"She's gonna be good for you, Dad,\" Sarah said from the kitchen. \"I just know it.\"\n\n\"I know,\" Ryan said. \"Well, are y'all about ready to leave? The plane leaves at 2:00.\"\n\n\"Just about,\" Bob said. \"I'm just finishing up.\"\n\n\"Well hurry up, we need to get going,\" Ryan said.\n\n\"On my way,\" Bob hollered back. Ryan shook his head.\n\n\"Kids,\" he said jokingly. \"Take a bullet and they think they can get away with anything.\" Sarah laughed.\n\n\"It's good to see you joke, Dad,\" she said. He smiled as he gave her a hug. Bob came back downstairs carrying a suitcase.\n\n\"Okay, I'm ready,\" Bob said. \"Let's hit the road.\" Sarah chuckled as Ryan shot her a sarcastic look. He checked the doors and grabbed his duffel bag, then followed Sarah and Bob out the door. His phone buzzed when he parked the truck, letting him know he got a message. He pulled his phone out and saw he got a text from Agent Smith.\n\n\"Long day,\" the message said. \"Watch tonight's news. Interesting developments. Call me after. Gotta get some sleep. Too old for this shit.\" Ryan chuckled and put his phone away. He was curious to see what Smith had to say.\n\nThey headed into the terminal, checked in and headed for the security area. His phone buzzed again, and he saw it was a call from Bill.\n\n\"Yeah,\" he said when he answered.\n\n\"Verified that Jake has a court appearance at 8:00 tomorrow morning,\" Bill said. \"Also took a look and found they're going to be doing maintenance on the video surveillance system all day tomorrow. I think they're gearing up for possible protests and such.\"\n\n\"Interesting,\" Ryan said. \"That's good to know.\"\n\n\"I thought so as well,\" Bill said. \"So, how'd it go with the sheriff?\"\n\n\"He figured it out,\" Ryan said.\n\n\"What? And you're still walking around free?\" Bill asked.\n\n\"Yeah,\" Ryan said. \"In fact, he wants me to take over as sheriff.\"\n\n\"Damn,\" Bill said. \"Talk about luck.\"\n\n\"Tell me about it,\" Ryan said. \"Anyway, we're getting ready to board the flight now. I'll call you later. Oh, Smith texted me, said to watch the news tonight. Maybe you can catch it while you're on the road.\"\n\n\"Yeah, sure, will do,\" Bill said. \"That's pretty much all they've been talking about today. Knight Petroleum is taking a beating on the market.\"\n\n\"Couldn't happen to a nicer bunch of assholes,\" Ryan said. \"Talk to ya later.\"\n\n\"Okay, boss, talk to you later,\" Bill said, ending the call. They finally settled into their seats and were sound asleep by the time the aircraft reached its altitude. When the plane landed, they disembarked, grabbed their luggage and headed for the car rental where Ryan got a nondescript sedan.\n\nAfter they arrived at Bob and Sarah's home, Ryan and Bob put everything away. Fortunately, most of the mess left behind by the abduction had already been cleaned up, but the house still smelled of bleach and antiseptic. Sarah opened the windows to air the place out. Bob grabbed a couple beers, handing one to Ryan. They sat in the front room and turned on the news.\n\nThey listened as the anchor read off a few local reports, but their eyes were soon glued to what was hailed as \"breaking news.\"\n\n\"This just in to Eyewitness News,\" the anchor said. \"Federal authorities have released the names of those killed in a raid on a New Mexico retreat owned and operated by Knight Petroleum. According to officials, the casualty list includes six of the seven members of the company's board of directors, including Elmer Jenkins, the chairman of the board.\n\n\"That follows reports from the UK that say another board member, Colin Blackstone, was found dead in Manchester,\" the anchor said. \"In addition, the chief financial officer of Knight Petroleum was found dead in New Mexico. We now turn to Brenda Carpenter, reporting from El Paso. Brenda...\" The scene shifted to an attractive blonde standing outside a tall building, presumably in El Paso, Texas.\n\n\"Yes, Jerry, thank you,\" she said. \"We spoke to federal officials earlier, and they informed us that in addition to the Knight executives, at least four Mexican nationals were among those killed in New Mexico. Additionally, a large cache of drugs and guns were found at the facility, leading investigators to suspect involvement of a drug cartel.\" Suddenly, Smith's face appeared on the screen, his eyes covered with a pair of extremely dark glasses.\n\n\"We are still going through all the evidence that's been collected,\" Smith said. \"But at this point, we believe the compound was targeted by a drug cartel.\"\n\n\"Can you confirm reports that claim the site was used for illicit sex parties and human trafficking?\" one reporter asked.\n\n\"The evidence we have seen so far would suggest that is the case,\" Smith said.\n\n\"There have also been reports that two of your agents were killed in Central City,\" another reporter said. \"From what we were told, they were protecting the daughter of Lisa Knight, the interim Knight CEO who was gunned down in a company parking lot. Can you confirm that report and is it related to this incident?\"",
        "\"I have been authorized to confirm that information,\" Smith said. \"At this point, I think it's fairly safe to conclude that everything regarding the incidents involving Knight is related at some level.\" The scene shifted yet again, going back to the blonde reporter.\n\n\"Agent Smith tells us the agency is sifting through a mountain of evidence that suggests executives were involved in a myriad of crimes. It seems we're just seeing the tip of the iceberg. Back to you, Jerry,\" she said.\n\n\"Thank you, Brenda,\" Jerry said. \"For more, we turn to Andrew Conrad, live at the federal courthouse where disgraced former CEO Jacob Knight is set to appear yet again tomorrow morning. Andrew?\"\n\n\"Yes, Jerry, indeed, Mr. Knight, who is confined to a wheelchair as the result of a mugging, is set to appear here tomorrow morning,\" Andrew said. \"I spoke to Marvin Morrison, the federal prosecutor in charge of the case.\" The video changed scene and they saw a tall, thin man with curly hair talking with the reporter.\n\n\"The evidence we've seen so far suggests to us that the executives of Knight Petroleum spent more time committing crimes and covering them up than they spent producing oil and gas,\" Marvin said. \"And something tells me this is just the beginning.\"\n\n\"Will there be more charges filed?\" Andrew asked. Marvin looked intense as he answered.\n\n\"Absolutely,\" he said. \"And I expect there will more on top of that.\"\n\n\"Will you be speaking with the surviving executives?\" Andrew asked.\n\n\"Yes,\" Marvin said. \"We've already started those discussions, and we've widened the investigation to include lower-level managers.\"\n\n\"The defense has been quite effective in blocking your motions so far,\" Andrew said. \"What is your strategy for that?\"\n\n\"Well, Andrew,\" Marvin said. \"You're right that the defense has been effective in putting up roadblocks. But I think that will all change tomorrow.\"\n\n\"What kind of charges can we expect to see?\" Andrew asked.\n\n\"Shocking charges,\" Marvin said. \"That's all I'll say about that right now. You'll get a better idea tomorrow morning.\"\n\n\"So, Jerry,\" Andrew said after Marvin walked off, \"it looks like we might see some fireworks tomorrow morning.\"\n\n\"Thank you, Andrew,\" Jerry said. \"We'll be watching.\" He turned to face another camera. \"The allegations against Knight Petroleum have also had a serious impact on the market today as shares have dropped, causing concern among investors. We now turn to Eyewitness News financial analyst Tyler Morgan. Tyler, what do you see happening?\"\n\n\"Well, Jerry,\" Tyler said, having suddenly appeared in the shot, \"I think Knight Petroleum may be on its last leg, so to speak. If something isn't done soon, the company will fold, and that could have global repercussions.\"\n\n\"Do you know of anything in the works?\" Jerry asked.\n\n\"I've heard rumors, but nothing I can conclusively report at this time,\" Tyler said.\n\n\"I know if something does happen, you'll be the first to let us know, Tyler,\" Jerry said. \"Thank you.\" He turned back to the camera. \"Up next, man's best friend goes on a little joyride. Stay tuned to Eyewitness News.\" Bob turned the TV off as the station went to a commercial.\n\n\"You're the analyst, Bob,\" Ryan said. \"What do you think?\"\n\n\"I think Knight Petroleum is screwed, blued and tattooed,\" Bob said. \"I'll be surprised if they're still in business a month from now.\" Ryan nodded his head in agreement.\n\n\"I think you're right,\" he said. He pulled out his phone and called Smith, who answered on the first ring.\n\n\"Yeah, Smith,\" he said.\n\n\"Just saw the news,\" Ryan said. \"Is all that shit true?\"\n\n\"You wouldn't believe the shit we found at that camp,\" Smith said. \"I have a feeling if we hadn't acted when we did, someone else would've.\"\n\n\"What did you find?\" Ryan asked.\n\n\"Unbelievable shit, Ryan,\" Smith said. \"More drugs than you can shake a stick at, DVDs of drug-crazed orgies, possibly including underage girls, ties to drug cartels, evidence of human trafficking, you name it. I also think I know why the agency turned a blind eye to Gillespie's murder.\"\n\n\"Damn,\" Ryan said. \"Don't tell me they had a mole in the agency.\"\n\n\"Yup,\" he said. \"Someone fairly high up in the food chain. He's already been brought in for questioning.\"\n\n\"Any evidence linking Lisa to all this crap?\" Ryan asked.\n\n\"Nothing yet,\" Smith said. \"It's possible they managed to keep it from her, but I don't see how she could've not known something was going on. Maybe she was blinded by Jake's money and too involved in her own work to notice. I don't know. So, what's the word on your end?\"\n\n\"Well, Sheriff Coltrane put it together after the report this morning,\" Ryan said. \"Came out to see me after the guys left.\"\n\n\"Oh?\" Smith asked. \"And he didn't take you in?\"\n\n\"No,\" Ryan said. \"In fact, he wants me to take over as sheriff when he retires.\" Smith laughed.\n\n\"Damn, son, you get all the breaks,\" he said. \"You gonna do it?\"\n\n\"I'm considering it,\" Ryan said. \"I got a couple things to take care of first.\"\n\n\"Well, I just might be knocking on your door looking for a job when this is all over,\" Smith said.\n\n\"You planning to retire or something?\" Ryan asked.\n\n\"I'm thinking about it,\" Smith said. \"The agency just isn't what it used to be.\"\n\n\"Maybe they need a good man like you to become director and make it all right,\" Ryan said.\n\n\"Maybe. I don't know. It's all political these days. How's Beverly and your kids doing?\" Smith asked.\n\n\"They're doing alright,\" Ryan said. \"By the way, you coming to the wedding?\"\n\n\"Wouldn't miss it for the world,\" Smith said. \"Anyway, I'll be in touch. You watch your six, you hear me?\"\n\n\"Will do,\" Ryan said. \"Bye.\" They ended the call and Ryan left the room to call Beverly. A little while later, he returned with a smile on his face. Sarah noticed, and sat next to him on the couch as he wrestled with little Ryan.\n\n\"Talk to Mom already?\" Sarah asked. Ryan knew she meant Beverly. He nodded his head.\n\n\"Yeah,\" he said, as he tickled the young boy in his lap. \"How did you know?\"\n\n\"Well, you left the room to call, and then you come back with a shit-eating grin on your face,\" she said. \"It's good to see you in love again. I remember you used to be that way with Lisa.\" Ryan looked at her and saw a tear form in her eye. He stopped tickling Ryan long enough to wrap an arm around his daughter. She broke down crying.\n\n\"I'm so sorry, Daddy,\" she cried. \"I treated you like shit when I was a kid and you still saved my life -- twice. I don't deserve a father like you.\"\n\n\"It's okay, princess,\" he whispered in her ear. \"You were young, dumb and impressionable when that happened. They took advantage of that. But you smelled the coffee and woke up. You've made something of yourself. I'm proud of what you've done with your life. You have a wonderful family and I'll always be here for you.\"\n\n\"Thank you, Daddy,\" she said, sniffling. \"I love you.\"\n\n\"I love you, too,\" he said.\n\n\"I'd better go make dinner,\" she said. After she left for the kitchen, Ryan turned his attention back to his grandson, who squealed with delight as the older man tickled him some more. That night as he slept, Ryan dreamed of pretty blonde farm girls in Daisy Duke shorts and white t-shirts.\n\n...\n\nThe courtroom filled up quickly the next morning, as reporters, potential witnesses, and observers filed inside. No one paid any attention to the tall man who sat in the back row. Wearing a dark baseball cap, dark glasses and a bandanna that covered the lower half of his face, he looked much like several others in the room. Because of social distancing guidelines, everyone was seated at least six feet apart.\n\nAs the man watched, Jake was wheeled into the room, a chain locked around his waist. The attorneys entered and took their places and the bailiff ordered everyone to stand as the judge entered the room. They all sat back down when the judge nodded his head, having already taken his place behind the high bench.\n\nHe watched the lawyers make arguments, counter arguments and motions, followed by counter motions. The judge took it all in and said very little. To the man in the back row, it sounded like something out of an old Charlie Brown cartoon -- gibberish that included very little real words, at least to him. He did understand the judge's last order, however.\n\n\"Motion to continue granted,\" the judge said. Marvin stood to argue, but the judge pounded his gavel. \"Court adjourned until tomorrow morning at 9:00,\" he said. \"That is all.\" Marvin, frustrated, tossed his paperwork on the table in front of him as Jake sneered. The guards came to wheel him away and no one noticed the man had already left the room.\n\nLikewise, no one paid any attention when the man stood at the junction of two hallways, watching the interaction between Jake and his guards.\n\n\"Goddammit, I need to take a shit,\" Jake declared. One guard shook his head and motioned for the other to check out the restroom. The second guard went inside, glanced around, looked under the large stall at the end and seeing no one, walked back out. No one noticed the tall baseball cap-wearing man walking out of the building.\n\n\"It's clear,\" the second guard said. Jake looked at the first guard.\n\n\"Get these off me before I shit my pants, willya?\" Jake demanded. \"I'm in a fucking wheelchair for crying out loud. I'm not going anywhere. Just give me some privacy for a couple minutes.\"\n\n\"All right, all right,\" the first guard said, unlocking the chains. \"Make it fast, though.\"\n\n\"Yeah, yeah,\" Jake said as he wheeled himself inside the restroom. After the door closed, Jake made his way to the large handicap stall at the end of the restroom. He moved his chair to open the stall door and wheeled himself inside. He closed the stall door and was surprised to see a tall man wearing a baseball cap, dark glasses and bandanna standing in the corner. He wondered why the man wore an old apron, latex gloves and blue show coverings.\n\nSomething inside Jake snapped as he realized who it was before him. He also remembered what the man had said to him once: \"If you ever raise a hand to Lisa, or if you ever do anything to hurt anyone in my family, I swear to God I will hunt you down like the dog you are and I will cut your stupid fucking head off and feed it to the pigs.\"\n\nThe blood drained from Jake's face and his eyes grew wide in terror as he realized he was about to die. He tried to say something but couldn't. The pressure in his chest suddenly built up and he could no longer breathe. As the man watched, Jake raised a hand to his chest, and tried with all his might to breathe, just one last breath.\n\nBut it never came. Jake slumped over in his wheelchair, unconscious. The man lifted his glasses and examined Jake with his one good eye without touching him. The man had seen enough death to know Jake had gone to his eternal reward. Or punishment, as the case might be.\n\nHe looked at his face in the mirror, the glass eye in his scarred left eye socket reminding him of something out of an old science fiction movie. He put the dark glasses back on and turned around. Bending low, he jumped up to the ledge at the bottom of the high window, and climbed up onto the ledge. He opened the window slightly to check out the littered alley.\n\nSeeing nothing, he climbed out, quietly closed the window and jumped effortlessly to the ground. Following a pre-arranged path, he disposed of the apron, hat, booties, glasses and gloves in storm drains along the way.\n\n...\n\nAbout fifteen minutes later, the guards at the door to the restroom decided they had given Jake enough time to finish his business.\n\n\"I swear to God, he does this every fucking time we're here,\" one guard said. \"Go in there and get him the fuck out here.\"\n\n\"Okay,\" the second guard said. A few seconds later, the guard came back out. \"Call 911, we need an ambulance here right now,\" he said.\n\n\"What?\" the first guard said. He keyed his microphone and made the call as he went inside. When he got to the stall, he saw Jake's lifeless body on the floor. His eyes were wide open and the guard knew he was dead. Nevertheless, he checked for a pulse. Looking around, he saw no evidence that anyone else had been in the stall, leading him to believe Jake had probably suffered a heart attack.\n\n\"Couldn't happen to a more deserving asshole,\" he said to no one in particular. When the paramedics arrived, he went to the security room to see if anything out of the ordinary had been reported. If anyone had been anywhere near this part of the building, it would have been captured by the video surveillance system.\n\nUnfortunately, for him, however, the security system was down and there had been no video captured from that part of the building. Updates and maintenance, he was told, all in preparation for potential riots that might happen that night. Or the next. Crap, he thought. He went back to the restroom and saw them bringing Jake's body out on a gurney, covered in a white sheet.\n\n\"He didn't make it,\" one paramedic said. \"We're taking him to the coroner for an autopsy, but we're pretty certain he had a heart attack.\" The guard nodded his head in understanding.\n\n...\n\nRyan got into his rented sedan, noticing he still had a few minutes left on the parking meter. He put his patch back on, donned his old Stetson, then lit a cigarette and took a deep drag, offering a silent prayer of thanks that he didn't have to lay hands on Jake. When he finished, he realized he still had a couple stops to make before going back to Bob and Sarah's house.\n\nA half-hour later, he pulled into the parking lot of the rehab facility where Lisa had been taken. He knew from Sarah that she would be here for some time undergoing therapy. He also knew that Lisa's ability to speak would be severely diminished, and she had limited control of her arms and legs. However, he also knew that she would understand what he had to tell her. He grabbed the DVD laying on the seat and got out of the car.\n\nHe went inside and was directed to her room. She perked up when she saw him and opened her mouth to say something, but he shook his head.\n\n\"Don't say anything, Lisa,\" he said. \"Just listen.\" She looked crestfallen and nodded her head slightly. He rolled a chair next to her head and took a look at her. She had once been so beautiful and full of life. That was all gone now.\n\n\"You know, you almost had me fooled,\" he said, prompting her to look at him, surprised. \"I almost fell for it. But you know the old saying -- almost only counts in pitching pennies, horseshoes and throwing grenades. For a moment, I found myself starting to believe what you were telling me. I have to admit, the food was a nice touch. Nearly worked. And the phone -- that was nice. Did you know Elmer had it cloned and crammed full of spyware?\" She shook her head.\n\n\"Problem is, Lisa, I don't believe you,\" he said. \"I'll never be able to believe another word you say. That's what cheating and lying does.\" He paused to let it sink in before continuing.\n\n\"When I heard you were shot, I rushed right over. What I learned after that cut me to the core. That's when I learned your own board of directors conspired with Jake to hire a hit man to take you out.\" Her eyes opened wide. \"I take it you didn't know they were out to get you, did you? Well, Elmer made a huge mistake. He threatened Sarah, Bob and little Ryan. He also informed me of your activities. Not only did you cheat on me with Jake, but with the whole goddamned board. And you were doing it long before you said you took up with Jake.\" He tossed the DVD on top of her covers.\n\n\"That's just in case you get bored,\" Ryan added. \"According to Elmer, that contains the highlights of your career as a company whore for Knight Petroleum. Yeah, I know all about your executive 'retreats' in New Mexico and how you were the life of the party.\" He saw a tear slide down her face, but continued.\n\n\"Yeah, I've seen it,\" he said. \"And so has Bob and Sarah.\" He paused to let it sink in before continuing. \"She's not too happy with you right now. Especially since you planned to introduce her into your depraved lifestyle.\" Lisa dropped her head as more tears fell.\n\n\"Elmer had Sarah and little Ryan kidnapped,\" Ryan added. \"Did you know anything about that?\" She looked up, surprised, and shook her head.\n\n\"They're safe now,\" he said. \"No thanks to you. But it seems that Knight Petroleum no longer has a board of directors. And I've been told by the FBI that they've uncovered a mountain of evidence of crimes your company has committed. Everything from trafficking to drugs, guns and who knows what else. I don't know if you had a hand in any of that.\" She shook her head and mouthed \"no,\" but Ryan continued.\n\n\"So far, they haven't found any direct evidence linking you to those crimes, but that doesn't mean they won't,\" Ryan said. \"Even if they don't charge you with crimes committed by Elmer, Jake and the board, you may get charged as an accomplice. If I were you, I'd get an attorney to cut a deal. Maybe they'll give you immunity if you turn state's evidence.\n\n\"At any rate, Knight Petroleum is all but history right now. You should also know that a class action lawsuit has been filed against Jake and/or his estate. Seems I'm only one of about 100 other men whose lives and marriages he's destroyed.\n\n\"I'm not a lawyer, so don't ask me to explain it all, but my lawyer back home also happens to be a member of the bar in this state, and he found a loophole in the law that makes the suit possible,\" Ryan added. \"I wouldn't be planning any trips to the French Riviera any time soon if I were you. By the time they're done, I don't think Jake will be worth a plugged nickel. Even if his lawyers win the case, he'll go broke paying the bill.\" She looked at him with tears falling down her face.\n\n\"I... I'm so sorry,\" she croaked. Ryan nodded his head.\n\n\"Yeah, well, that and a couple bucks might get you a cup of coffee somewhere,\" he said, causing more tears to fall down her cheek. \"But right now, it don't mean shit to me. You once asked if we could be friends. The answer to that is no. I can never be friends with a backstabbing, lying, hypocritical cheat. Besides, I've met a wonderful woman and we're going to get married soon.\" He pulled out his phone and showed her a picture of him and Beverly embracing each other. More tears fell as she sobbed.\n\n\"Beautiful, isn't she?\" Ryan asked. \"Her name is Beverly, and she's made me feel better and more alive than I've ever felt in my life. I thought I would never love another woman again, until she came along. You know, she helped rescue Sarah and little Ryan. Sarah has even started calling her, 'Mom.' And little Ryan seems to love her as well. I think she'll make a wonderful grandmother, don't you?\" Lisa's body jerked as she sobbed. He pulled his chair back and stood up.\n\n\"Chances are you won't be seeing me again,\" he said. \"And I suspect Sarah and Bob will also cut you out of their lives,\" he added as she wept. \"Sucks losing everything, doesn't it? But you know what they say -- karma's a bitch. And then you get the bill. Enjoy what's left of your miserable existence. Goodbye.\" He put his hat back on and walked out of the room. He could hear her wailing as he walked down the hallway and he saw the nurses rush into her room. He didn't care, though, and walked on out to his rented car.\n\n...\n\nTo be continued..."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "cheating",
        "husband",
        "lawsuit",
        "revenge",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-fathers-justice-pt-06"
}