{
    "title": "New Girl in Town Pt. 01",
    "pages": [
        "All characters are at least 18 years old except where is stated otherwise. There is no sex in this chapter so be advised. Thanks for reading.\n\n*****\n\nThe August heat beat down on the varsity football team of the Carter High School Wildcats as they jogged their way around the track.\n\n\"Keep it up guys!\" Coach Yates yelled as he jogged along with the lead pack of kids.\n\n\"Yes Coach!\" The kids shout back.\n\n\"Come on guys, let's show'em that first team leads the way!\" Patrick Green the starting quarterback barks from the front of the pack. He gets another chorus of cries from his teammates and the pace increases.\n\n\"Easy to lead when this isn't your second practice of the day,\" I mutter under my breath from my second place position.\n\nAntoine \"Tank\" Adams finds himself drifting back, sweat pouring off his bronze skin and his breath coming in painful gasps. Tank had put on about forty pounds of muscle over the summer to bulk up to try and win the defensive captain spot this year. Now he was now feeling the extra weight dragging him down under the hot August afternoon sun.\n\nI notice that he's not looking so great and start dropping back with him. \n\n\"You doing all right big guy?\" I ask.\n\n\"Jake?\" He asks surprised to find the usual \"number two\" guy not in that position. \"I... I just can't... keep... up.\"\n\n\"With all that muscle you added over the summer, I'm not surprised. I'm already regretting when we slap the pads on and you light me up.\"\n\n\"I'll... try and... go easy... on you.\"\n\n\"Less talking, more running!\" Coach Jim Yates yells as we pass the coaches. \n\n\"Notice how he didn't say anything to Captain Wonderful when he opened his mouth,\" I point out to Tank.\n\n\"Can't... yell at... his meal... ticket,\" Tank answers.\n\n\"Don't I know it. All he yelled about at practice this morning was how a winning season would break records. Like any of us on second team will be any part of it.\" \n\nThe main pack has pulled ahead of us by a decent margin already and soon the coaches are going to take notice.\n\n\"Hey, is it cool if I hang back with you? I could probably catch up with Mr. Wonderful and pass him with ease but if I did that after a two hour practice already under my belt today Coach would test me for steroids.\"\n\n\"Hell, I think... I'd like to... see you... do that. Thought you wanted to be... the stud QB this year?\"\n\n\"Have you seen that fucker smile? He already has an agent signing him up for toothpaste commercials and car dealership ads. There's no way I'm going to be the guy with him around.\" I say looking to the front of the pack where Captain Wonderful aka Patrick Green is putting distance on them with each step.\n\n\"Fuck... don't make... laugh... man...\" \n\nCoach Pennington, the defensive coach, noticed as his star middle linebacker had started struggling and was falling pretty far behind the pack of runners. When Antoine showed up this afternoon for the first team practice, he was worried about the kid. He looked like all he did was hit the weights all summer. Apparently, he forgot to work on his cardio though. Coach Pennington started jogging to catch up to the faltering pair of kids that were letting the main pack get further away. He was surprised when he found the back up quarterback jogging along with \"Tank\" as the kids called Antoine.\n\nJake Gibson was usually right on Patrick heels.\n\n\"Are you two doing all right?\" Coach asks the two youths as he reached them.\n\n\"Sorry coach... I wanted to be... stronger... this year...,\" Tank answers. He stumbles forward nearly falling over until I catch him.\n\nThe coach helps me keep Tank upright. \"He needs some water.\"\n\n\"I'm on it coach,\" I state taking off across the field dodging the marching band practice and the cheerleaders like a halfback in the open field.\n\n\"Damn, I thought Gibson was slowing down because of all the running from this morning.\" Coach Pennington says helping Tank take a seat on the bench.\n\n\"Jake's pretty... good this year... huh coach?\" Tank asks.\n\n\"Hell of a lot of stamina, that's for sure. Patrick better keep his eye on him this year.\"\n\n****\n\nJessica Golden stood in the Carter High office going over her transfer papers with her mother and Principal Owens and hating every second of it.\n\n\"Everything looks to be in order here Ms. Golden.\" He states looking up at the tall and pretty girl with pale blonde hair. \"From looking at your records I can see that you will be a tremendous academic asset to our little school. Your GPA will put you near the very top of the senior class and I'd be amiss if I didn't mention how you led your school to the state championship in volleyball last year.\" \n\n\"It was a team effort sir but I'm looking forward to trying out for the team here and checking out your drama club.\" Jessica answers politely. She loved playing volleyball for her old school in Charlotte but the drama club was a new interest, suggested by her father in the hopes that it would help her come out her shell a little.\n\n\"She'll be an asset to them all.\" Her mother Dr. Victoria Golden tells him beaming with pride. \n\n\"Mom,\" Jessica says in a lowered voice wishing her mother wouldn't embarrass her.\n\n\"No, it's fine.\" The principal laughs. \"It's refreshing when the parents show so much interest in their children.\"\n\nWhile her mother and the principal talk Jessica walks around the office pausing at the trophy case. Each school sport seems to be represented but the football team has the most trophies. The past seven years the schools program has produced the state champion.\n\n\"We're very proud of our boys.\" Principal Owens tells her when he mistakes her boredom with interest. \"State champs for seven years running and if you don't mind a little bragging I think we're set for an eighth and a state record for Coach Yates. The kids love him.\" \n\n\"I can tell the school is very proud of them.\" Jessica says trying to sound like she cares. In her experience, most football players were mouth breathers who skated through classes because they played a game well. The ones who seemed to have a brain only used it to get alcohol, drugs or girls into their beds. The few football players she knew at her school had made sure that she wasn't a fan.\n\n\"If you'd like to have a look at the team they're down on the field now. The second practice of the day has \"kicked off\" so to speak.\" He chuckles at his little joke.\n\n\"I'm good, thanks.\" \n\n\"Other than volleyball, Jessica isn't really interested in sports.\" Her mother states while patting her daughters shoulder. She wished that she'd at least go have a look to show a little school spirit. \n\n\"Well maybe our boys can change your mind on that. They are a real fun bunch.\" Principal Owen states.\n\nOn the way to their car Victoria notices Jessica glancing towards the stadium and smiles. \"Jess, why don't you head to the stadium to watch practice? I've got to run by the house, pick up your sister and go to the elementary school to fill out her paperwork.\"\n\n\"I really don't feel like checking out a bunch of mouth breathers, oh excuse me, I mean the \"fun bunch,\" She states making air quotes around \"fun bunch.\"\n\n\"You might make some new friends.\"\n\n\"I don't need new friend's, mom.\"\n\n\"Baby, we talked about this. I know this move has been hard on you but we...\"\n\n\"Had to move because of Dad's job, I know mom, I've heard this a dozen times but it doesn't make this any easier.\"\n\n\"I know baby and I'm sorry about that. The move has been hard on all of us.\"\n\nJessica sighs. \"I know mom and I'm sorry. I think I will head to the stadium and check out the marching band at least. They sound pretty good.\"\n\n\"Okay baby, I'll be back in about an hour unless you call me before then.\"\n\nJessica nods and heads towards the stadium.\n\n****\n\n\"You feeling all right now big guy?\" I ask Tank after he takes another sip of water.\n\n\"Better. Thanks man, I appreciate it.\"\n\n\"I just hope that you remember how kind I'm being next time coach has us play Bull in the Ring.\" I jokingly say.\n\n\"I make no promises,\" Tank chuckles.\n\n\"Tank, you feeling okay,\" Coach Pennington asks as he joins them after Coach Yates sent the rest of the team to the showers.\n\n\"I'm better now coach.\"\n\n\"We'll work on some conditioning drills and get you back in shape in no time. If you had to do two a days I'd already have you halfway there.\"\n\n\"Think you can make me as good as Ken here?\" Tank asks.\n\nCoach Pennington laughs. \"I can give it a try. I need my star linebacker in tip top shape in time for the season.\"\n\n\"I'll be ready coach.\" \n\n\"Jake, you're free to hit the showers with the others if you want. Your two a days are officially over.\"\n\n\"If I thank God for many more laps does that get me?\" I ask.\n\nCoach Pennington chuckles. \"None from me but you'd better watch it around Yates. He's hungry for that record setting season.\"\n\n\"Thanks coach,\" I say then turn to Tank. \"You sure you're all right big guy?\"\n\n\"He's being nice to me so I don't knock his block off when we get to Bull in the Ring.\" Tank jokes.\n\nCoach smiles, \"Sounds to me like you just volunteered to be the first Matador Mr. Gibson. I want to hear those pads pop when I call your number Tank.\"\n\n\"You got it coach... I'm gonna miss you white boy.\"\n\n\"Is it too late to go out for track, ya think?\"\n\n\"You ain't running track Jake; we need your arm on the team this year. Captain Wonderful is getting too damn cocky and it's gonna catch up to him.\"\n\n\"When he's thirty and overweight maybe. Coach, if it's cool with you I'm gonna run the steps for a while.\"\n\n\"Glutton for punishment Jake,\" Coach asks.\n\n\"Come on Coach, our band wins competitions and stuff. They can't be that bad,\" I joke before taking off towards the stands.\n\n\"Damn coach, what did you give that guy after practice this morning?\" \n\n\"Other than the playbook and water, nothing special,\" Coach Pennington answers. \"He's been doing a lot of running these practices, guess it is paying off for him.\"\n\n****\n\nJessica sits alone on the topmost bench but there are random groups of kids spread throughout the stands; some watching the football jocks whose practice looks like just broke up and others watching the marching band practice.\n\n\"Not bad huh,\" a voice asks from behind her. She turns to find a handsome blonde haired boy flanked by a couple other guys, they all look freshly showered telling her that they're all on the football team. \n\n\"Pardon,\" She asks.\n\n\"I said not bad huh,\" The boy repeats.\n\n\"The band's pretty good,\" She states and he just laughs.\n\n\"Sorry, I meant me.\" Patrick Green states. \"I'm Patrick, quarterback and the guy that led all the laps you just watched.\"\n\n\"I'm here for the band but congratulations on leading the laps I guess.\" She states already feeling annoyed at the intrusion.\n\nShelly Marsh is sitting with her friend Jody Mabe when she looks up and notices Patrick and his crew standing around a new girl.\n\n\"Hey, do we know her?\"\n\nJody turns her head and looks. \"I don't think so, never seen her before but she's in our lunch spot.\"\n\n\"Should we go and save her from Captain Wonderful?\"\n\n\"It does seem like it's our solemn duty as Wildcats.\" Shelly states and follows her friend up the steps.\n\n\"Hey,\" Jody says stopping in front of the new girl.\n\n\"Hi,\" Jessica answers looking at the stocky girl with dirty blonde hair and a orange and blue Wildcat t-shirt.\n\n\"Jody, we were talking here.\" Patrick states.\n\n\"We could see that Patrick,\" Shelly answers giving him a cold smile before turning back to Jessica. \"Hi, I'm Shelly and this is Jody.\"\n\n\"Hi, are you new here?\" Jody asks.\n\n\"Hi Jody, yes I'm new here. My name's Jessica.\"\n\n\"Jessica, that's a pretty name for such a pretty girl.\" Patrick flirts. She blushes slightly at the handsome boy's compliment. \n\n\"Thank you Patrick.\" She says flattered despite herself.\n\n\"Hey Patrick, check it out.\" Jamie Hicks, outside linebacker and friend of Patrick points to where Jake is running the stadium stairs. \"Looks like your shadow is finally catching up to you.\"\n\nThe group of guys all laugh as Jake reaches them.\n\n\"What happened out there Shadow? I expected you to finish right behind me as usual.\" Patrick teases as he makes sure he gives Jessica his best smile.\n\n\"I guess I lost a step or two since last year.\" I answer noticing how pretty the new girl is.\n\n\"That ain't all you lost last year,\" Jamie snickers.\n\n\"That's bull and you know it Jake. You're running the stairs after having two practices today. I saw you checking on Antoine. Is he all right?\" Shelly asks butting in.\n\n\"Just a bit winded but Coach Pennington will have ready to lay me out when we pad up.\"\n\n\"That's gonna be fun to watch. Do you think he'll play nurse once he knocks you out? God knows you'll need someone to do it.\" Patrick chuckles.\n\n\"He'll have to take care of himself now that Jennifer has changed schools.\" Jamie smirks as he makes a jerking off motion.\n\n\"Don't be dick Jamie,\" I warn him trying not to get into a fight in front of the new girl.\n\n\"Oh I'm a dick huh,\" the larger boy says then angrily shoves me causing me to stumble backwards a couple of steps. \"Do something bitch. Do something!\"\n\nI ball up my fist ready to punch that smirk right off his face but when I look at Shelly, she shakes her head. Jody is doing the same while the new girl just looks shocked at the turn of events.\n\n\"Fuck you Jamie,\" I state then turn and head away from the group.\n\n\"Not likely, you fucking virgin,\" Jamie shouts behind me but I don't turn back. Their laughter chase me down the stadium stairs.\n\n\"You guys are such jerks.\" Shelly says. She gets to her feet and goes down the steps after Jake. Jody gets to her feet to follow her but pauses and looks at Jessica.\n\n\"You should come with us Jessica.\" She tells her.\n\n\"Jessica is fine with us, Jody. How about you walk us to my car and we can all go for a little ride around town? I'll show you all the cool places to hang out.\" Patrick says reaching for Jessica's hand.\n\nJessica looks up at the attractive boy and gets to her feet. Patrick smiles his eyes drifting over her figure, already feeling himself fucking this hottie in the back of his Camaro.\n\n\"My mom should be back to pick me up so I should be going.\" Jessica states. Patrick grabs her hand and gives her a smile.\n\n\"Well at least let us walk you over. I'd like to welcome her here too.\" He states. Jody frowns as she watches the group walking away. \n\n\"Not a good call Jessica,\" She thinks then hurries to catch up to Shelly and Jake.\n\n****\n\n\"I am so fucking sick of them Shell,\" I say while we watch from the field as Patrick walks away with the new girl.\n\n\"I know you are sweetie, believe me I know, but punching that Neanderthal will just get you beat up and they'd probably end up kicking you out of school for it.\" Shelly states.\n\n\"Some day's it feels like it'd be worth it.\" I tell her.\n\n\"Jessica left with them.\" Jody announces as she joins them.\n\n\"Of course she did,\" I sigh.\n\n\"Are you going to be all right Jake?\" Shelly asks.\n\n\"I didn't even know her name until Jody just said it, it's not like I had...\" I begin but stop when they start giggling.\n\n\"I meant the whole Jennifer thing.\"\n\n\"Oh... yeah that,\" I answer trying not to blush.\n\n\"Forget that, I want to know what your level of interest is in Jessica?\"\n\n\"I'd like to know the answer to that as well.\"\n\n\"I'd ask you both to drop it but I know that's not happening.\" I tell them.\n\n\"You know us too well and we'll be sure to find out more about this Jessica girl too now that you're showing interest, right Jody?\"\n\n\"Oh definitely,\" Jody answers with a giggle.\n\n\"Thanks, it'll be nice to know more about who Patrick's going to be flaunting over me for the foreseeable future.\" \n\n\"I know things haven't always gone your way Jake but give this one a chance. Maybe this time things will be different.\"\n\n****\n\n\"Those boys seemed awfully nice,\" Jessica's mom says as she drives them back home. \"What were their names again?\"\n\n\"The one doing all the talking is Patrick. He's the starting quarterback apparently.\" Jessica answers.\n\n\"He sure has a lot of teeth,\" Sarah, her little sister announces. \"I don't like him.\"\n\n\"The starting quarterback you say,\" Her mom, ignoring Sarah, says. \"He sure is a handsome young man and I'd guess pretty popular as well.\"\n\n\"Not with everyone it seems but he sure knows that he's handsome. There's a reason I don't date jocks.\" Jessica states.\n\n\"Boys are icky,\" Sarah adds.\n\nJessica smiles back at her little sister. \"Agreed. When did you get so smart?\" \n\n\"I take after my big sister,\" Sarah answers and Jessica giggles at her cuteness.\n\n\"Did you know that your father played on the baseball team in high school? He looked so cute in his uniform.\"\n\n\"I'm sure he did mom.\"\n\n\"Did you meet anyone else while you were there?\" \n\n\"A couple of girls came up to say \"Hi\" when Patrick and his crowd were talking to me. They were nice, the girls I mean. I wasn't very impressed with those guys but I'm not looking for any dates. I'm just going to concentrate on my education.\"\n\n\"Yes dear, I'm glad that you have your priorities straight,\" Her mom states patting her daughter's leg.\n\n****\n\n\"You need to get your priorities straight son,\" My dad tells me once I get home. \"Football is the only way you're going to college.\"\n\n\"They don't give scholarships to back up's dad.\" I argue back. \"I've got a better chance at an academic scholarship than I do for football.\"\n\n\"I thought you worked hard over the summer to get ready for this season?\" \n\n\"I have but it's not going to change a thing. Patrick's always going to be the number one guy and I'm just his Shadow.\"\n\n\"You can show them something in practice that could change their minds.\" He suggests.\n\n\"All I'm showing them is how many laps I can run before I throw up or pass out.\" I tell him.\n\n\"Well maybe this year's gonna be your year.\"\n\n\"Maybe so Dad,\" I answer just to end the conversation but I'm thinking \"Fat chance,\" as I head to my room. I don't know why dad thinks this year will be any different. Ever since kindergarten I've been in Patrick Greene's shadow hence the clever nickname I earned from Patrick and his cronies back in middle school. I go over to the heavy bag I put up last year when I needed a way to work out my anger without getting in trouble and begin throwing jabs when I hear my dad shout from the living room \"And think about getting a hair cut!\"\n\nFirst Day of School\n\n\"There she is,\" Jamie states pointing towards the far end of the hall where Jessica just entered.\n\n\"There's who,\" Staci Daniels asks straining to see who Patrick and the others are looking at. Staci is a cheerleader with honey blonde hair and has been Patrick's on and off again \"girlfriend\" since freshman year.\n\n\"The new girl,\" Patrick tells her. \"We met her yesterday after practice and I want.\"\n\n\"I thought I was going to be your girl this year? We were going to do the whole Prom King and Queen thing.\" Staci asks as she turns to size up this new girl.\n\n\"We can still have fun baby but we're seniors this year and you know how our thing is. We both have fun whenever we can.\" He states then points towards Jessica. \"And that is going to be fun.\"\n\nStaci looks Jessica over, \"She's tall, not gorgeous, but pretty enough I guess,\" She thinks as Jessica gets closer.\n\n\"Hey Jessica,\" Patrick says. \"Finding your way around all right?\"\n\n\"Um, okay so far.\" Jessica answers looking up from her schedule to see that Patrick's smiling face.\n\n\"If you have any trouble, you just let me know.\" Staci states giving her a big smile, \"I'm Staci.\"\n\n\"Hi Staci, I'm Jessica. It's nice to meet you.\"\n\n\"Nice to meet you,\" Staci begins but Patrick cuts her off.\n\n\"What's your first class Jessica?\" Patrick interjects.\n\nJessica looks at her class schedule before answering, \"Um, Room Two Forty Three, AP English with Ms. Simpson.\"",
        "\"Ooo, AP English huh,\" Staci says then indicating towards the schedule, \"May I?\" \n\n\"Uh, sure,\" Jessica answers handing over her schedule but not letting it out of her sight. It'd be her luck to lose her schedule on the first day.\n\nStaci looks over the classes. \"Wow, Jessica, it looks you're an overachiever.\"\n\n\"I guess it runs in my family. My mom's a doctor, my dad's an architect, and my little sister will probably be an astronaut.\" She answers. \n\n\"They must be proud of you. I don't think I've ever seen anyone with some many AP classes before.\"\n\n\"Well maybe a couple others, right Patrick?\" Ray Halston, starting tight end, asks as he stops and joins in the conversation.\n\nPatrick only grumbles as Ray smiles at Staci.\n\n\"Guess you won't be in any classes with her now huh Patrick? Nerd classes aren't for you.\" Jamie snickers. Patrick spins and gives him an angry look that shuts him up.\n\n\"Sorry about that. He doesn't have much in the way of manners.\"\n\n\"It's okay, I should get to class.\" Jessica says taking her schedule back.\n\n\"I may not have AP classes but I know where Ms. Simpson's classroom is. Let me walk you.\" Patrick suggests.\n\n\"I think I can find it on my own.\"\n\n\"It's the least I can do. Make up for Jamie's big mouth.\" \n\n\"Hey,\" Jamie protests but it's too late. Patrick already has put his arm around Jessica's shoulder and is steering her away.\n\n\"Guess that ruins his plan to get into her pants huh?\" Ray chuckles. \n\n\"Are you kidding Ray? According to you there was no way he was going to fuck Jennifer and the whole school knows how that turned out. My boy can't lose.\" Jamie argues.\n\n\"We'll see,\" Ray says.\n\n\"How will his plan not work,\" Staci asks Ray.\n\n\"With all those AP classes she's in, it sounds like she'll be too smart to fall his usual line of bull,\" Ray points out and Staci gives him a dirty look.\n\n\"It's not all bull.\" Staci argues.\n\n\"Yeah, it is Stace but you'd know that more than most I guess which kind of sucks,\" Ray responds then gives her a smile. \"Hope I see you at lunch.\"\n\n\"Jackass,\" Jamie mutters as he walks off.\n\n\"I wonder why he said that,\" Staci wonders aloud.\n\n\"Obviously he's jealous of Patrick.\" Jamie answers but that wasn't what she was wondering about but she knows how and where she can get her answer.\n\n****\n\nPatrick lays on his best moves as he walks Jessica through the hallway until they reach Ms. Simpson's room but leaves frustrated when he doesn't seem to make any headway.\n\n\"Thanks for the walk,\" She tosses over her shoulder then walks into the classroom and towards the teachers desk.\n\nShe starts to introduce herself but someone is already at the desk. It's the boy from yesterday, the one that Patrick called Shadow standing there chatting with the teacher. She overhears her asking him if he plans to come out for Drama Club again this year.\n\n\"Are you really that hard up for a sound guy Ms. Simpson?\" she hears him ask.\n\n\"Well Michael did graduate last year, so yes,\" Ms. Simpson answers with a smile, \"but I also happen to think you can snag a few starring roles this year.\"\n\n\"Are we doing Phantom of the Opera or wait, let me guess, The Elephant Man,\" the boy asks sarcastically when Ms. Simpson notices Jessica when she giggles at the question.\n\n\"Yes, can I help you?\" Ms. Simpson asks going back into teacher mode.\n\n\"Hi... sorry to interrupt but this... is this AP English?\" Jessica asks.\n\n\"You found us. You must be Ms. Golden,\" Ms. Simpson says with a smile. \"I'm Ms. Simpson and welcome to AP English.\"\n\n\"Thank you ma'am, it's nice to be here.\"\n\n\"Well we'll do our best to keep it that way for you.\" Ms. Simpson says then turns to me. \"Jake, if you would please show Jessica to a seat so we can get started.\"\n\n\"Yes ma'am,\" I answer walking the aisle towards my seat. I gesture towards the back of the room. \"There are a couple of seats towards the back free.\"\n\n\"Um, shouldn't you be getting to your own class?\" Jessica asks looking up at the clock realizing the bell is about to ring.\n\n\"This is my class.\" I state.\n\n\"Oh, so where do you sit?\" She asks reassessing her \"dumb jock\" opinion of him.\n\n\"That would be this one here,\" He nods towards his desk. \n\n\"Cool if I sit here?\" She asks indicating the seat next to mine, which was free.\n\n\"Sure,\" I tell her.\n\n\"I'm Jessica by the way,\" she states.\n\n\"Jake,\" I answer giving her a smile.\n\n\"From yesterday, I remember,\" She answers sharing her own smile.\n\n\"Ah yeah, I'm sorry about that.\"\n\nShe starts to ask him what he thinks he should be sorry for but the tardy bell sounds before she can.\n\nMs. Simpson stands and smiles at the class. \"Okay class, I see a lot of faces I recognize, some I wish I could forget... Mr. Gibson.\"\n\n\"Are we going to start this up again this year Ms. S?\" I call back. \"I promise that I have no idea how that camel happened to show up at your house last year. I don't know where to find a camel in this town. Now a llama on the other hand... I can get you a llama no problem.\" \n\n\"Save your llama for your cold nights at home Mr. Gibson.\" She jokes back getting several Ooo's from the class.\n\n\"I need to be excused to go see the nurse for that burn Ms. Simpson. I think it's a third degree one.\" I answer. \n\n\"I've told you that \"Fire Hot\" but you continue to ignore my outstanding advice,\" Ms. Simpson states then smiles warmly. \"For those that don't know, I am kidding with Mr. Gibson but if he tries telling you that he's my favorite student, he's lying.\"\n\n\"That's true but there is a worst teacher of the year award. I'm not lying about that.\"\n\nJessica giggles then looks worriedly towards the teacher but Ms. Simpson is wearing a wide grin. \"Mr. Gibson and I go way back and we're just kidding around a little to get rid of some first day jitters some of you may have. We work hard here but we do have fun so be patient and be prepared. Now I'll hand out some books and we'll be ready to work.\"\n\nAs the class bell rings Jessica grabs her book bag and hurries to catch Jake before he disappears into the crowded hallway.\n\n\"Um, Jake can you wait up?\" She calls out as she exits the door. I stop so quickly that she nearly collides with me.\n\n\"Sure,\" I state. \"Need something?\"\n\n\"I'm having trouble finding my way around this place. Can you show me where I can find... uh,\" She asks trying to hold her purse and book bag all the while failing. I reach over and snag her book bag before it topples onto the floor. \"Thanks.\"\n\n\"Not a problem,\" I tell her while she retrieves her class schedule. \"Where do you have to be next?\"\n\n\"Um... Trigonometry with...\"\n\n\"Mr. Creepster,\" I state then start walking while still carrying her bag.\n\n\"It says Hester but how'd you know,\" Jessica tells him falling in step beside him. \n\n\"Trig is only taught by Creepster and you'll see why we call him that, unfortunately. Just... just try and sit towards the back of the room.\" I inform her.\n\n\"Uh, okay,\" She answers confused. \"I can take my bag back if you want to just tell me which way I'm going.\"\n\n\"I'm in Geometry, again, its right next door so we're headed the same way. So what do you think of Carter so far?\"\n\nBefore Jessica can answer someone calls out Jake's name.\n\nApproaching them is a tall and muscular African American boy. \n\n\"You feeling all right today T,\" I ask as we slap hands.\n\n\"I'm good man, even better now, looking at this beautiful lady here with you.\" Antoine flirts with Jessica.\n\n\"T, this is Jessica, Jessica this is Antoine or \"T\" if he's hit you so hard that you forget what day it was,\" I introduce them.\n\n\"Nice to meet you Antoine,\" Jessica says.\n\n\"The pleasure is mine pretty girl,\" he flirts. \"Don't believe Jake here, he never forgot what day it was when I hit him.\"\n\n\"He's right, it wasn't the day I forgot,\" I confess. \"I thought he knocked me back to my freshman year.\"\n\n\"That sounds more like one of my hits.\" Antoine laughs.\n\n\"I'll keep you in mind if I need you to have him forget something then Antoine.\" Jessica jokes.\n\nHe laughs. \"You're quick Jessica, I like that. Where has he been hiding you?\"\n\n\"I haven't been hiding anyone T, Jessica's new here.\" I inform him.\n\n\"Well welcome to Carter,\" Antoine says falling into step with us. \"How are you liking it so far?\"\n\n\"It's been okay so far. I miss my friends back home mostly.\"\n\n\"Uh huh, and where's home?\" I ask.\n\n\"Charlotte.\" She answers as they walk along.\n\n\"Big city to this place? Ouch,\" Antoine says.\n\n\"It's going to take some getting used to but it's for the best.\" She answers.\n\n\"Is that your mom or dad's line?\" I ask.\n\nShe laughs. \"Lately, both of them but as much as I hate it, it's only for a year.\"\n\n\"Well Jake and I will try to make it a little more tolerable for you. You just let me know if you need to me erase this guys memory for you.\" Antoine tells her then stops. \"This is me, catch you guys later.\"\n\n\"Later T,\" I say.\n\n\"Bye Antoine, it was nice meeting you.\" Jessica says.\n\n\"Nice meeting you too,\" he calls back.\n\n\"He seems nice.\" Jessica states as we continue on.\n\n\"Yeah Antoine's a good guy. He'll probably knock me out at practice this week, but he's a good guy.\" I joke as we reach Mr. Hester's classroom. Instead of handing her the bag at the door though, I walk into the room and spot Shelly who smiles. \"You too huh?\" I ask.\n\n\"He's not that bad.\" Shelly states with a laugh.\n\n\"That's not what I've heard. Free seat?\" I ask.\n\n\"Right here,\" Shelly tells me pointing to the seat beside her, which Jessica sits in as I put down her bag. \"Hi Jessica,\" Shelly says smiling at me.\n\n\"Shelly right,\" Jessica asks hoping she's right.\n\n\"You got it.\"\n\n\"Um... Mr... Mr. Gibson, you are not in this class.\" Mr. Hester states. Jessica looks at the short, balding man with his greasy comb over and insect like glasses. Creepster looks like an apt nickname.\n\n\"No sir but I was doing my good deed for the day by showing a new student where her class is.\"\n\n\"That would be Ms... uh... Golden I presume.\" Mr. Hester states.\n\n\"You presume correctly sir,\" I answer then turn to back to Jessica. \"Hope you have a nice class Jessica. I should be getting to mine; I just wanted to make sure you didn't have any trouble.\" Jessica watches him turn and pause for a second in a sort of staring contest with Mr. Hester before departing. She turned to Shelly. \"Am I missing something?\" \n\n\"Mr. Hester has been known to get a little pervy with some girls in the past. Nothing too terrible, lingering a little too long when he's looking over your shoulder, trying to look up short skirts, but enough to make some of us feel uncomfortable. Luckily he's also scared of the football team so he knows to leave you alone now too.\" \n\n\"Jake's done this kind of thing before I take it?\" She asks.\n\n\"A few times,\" Shelly answers.\n\n\"Oh,\" Jessica says wondering why she suddenly feels less special.\n\n\"All a girl has to do is ask him to and he'll do it. My cousin's a regular white knight for some people. How'd you even know to ask him?\"\n\n\"Wait, he's your cousin?\" Jessica asks.\n\n\"That he is,\" She answers. \"His mom and my mom are sisters.\"\n\n\"Oh wow, okay. I thought you two might be a couple or something.\"\n\n\"We only argue like old married people but that's the extent of it.\" Shelly explains. \"So how'd you know to ask him to get into a stare off with Creepster?\"\n\n\"I didn't know. He knew where I was supposed to be when I told him I had Trig so he just took my bag and lead me here.\"\n\nShelly's face brightens up. \"Got him carrying your books and it's not even been a full day yet. You go girl.\"\n\n\"Oh it... it's not like that.\" Jessica states but she's not so sure of her own words.\n\n****\n\n\"I'm sure the cliques are the same at your old school,\" Shelly says as she enters the cafeteria with Jessica. The pair had spilt up for third period but met up again in fourth period French. Shelly was more than happy to show Jessica the way to cafeteria and if she happened to get a little more info on her for Jake's sake, so be it. \"Patrick and his crew hold court over on the side there. The hierarchy trickles down from there, starting with teammates and cheerleaders. They draw in the preppy boys and \"Mean Girls\" followed by the hangers on and wanna be's.\" \n\n\"Our very own modern caste system, hey, by the way,\" Jody says with a grin.\n\n\"Hey Jody,\" Jessica answers as the trio move to the line.\n\n\"You remembered,\" Jody smiles choosing a salad. \"Color me impressed.\"\n\n\"It was very sweet of you to come say \"hi\" to me yesterday. Of course I couldn't forget your name.\" Jessica tells her then turns back to Shelly. \"You were saying?\"\n\n\"Patrick's group is mostly football players and cheerleaders but I'm sure you'd fit in if you wanted to go sit with them.\" Shelly tells her.\n\n\"Of course she wants to sit with us,\" Patrick says popping up from behind them. \"Why don't you and Jody head outdoors to your little gang of misfits and let Jessica get to know some different people?\" He places his hand on Jessica's shoulder and steers her towards his table.\n\n\"Um, I'll see you later I guess Shelly,\" Jessica asks back over her shoulder.\n\n\"Sure,\" Shelly answers then turns with Jody to head outside.\n\n\"Oh well, I guess she's in the power clique now.\" Jody says.\n\n\"Looks that way,\" Shelly answers with a sigh. \"Let's go see if our gang has it's old spot again this year.\"\n\nJessica watches them go as she's introduced to the people at Patrick's table.\n\n\"Look's like someone's plan is working out.\" Staci whispers to Ray.\n\n\"Maybe,\" He admits. \"It is just the first day though.\"\n\n\"It might take him a little longer but she'll just be another notch on his bedpost before the year's out but then you know all about that right Staci?\" Jamie whispers to them.\n\nStaci gasps and Ray turns a shade red. \"Why don't you keep your mouth shut for a change Jamie?\" Ray snaps.\n\nJamie just laughs as Staci excuses herself. Ray gets up and follows her out of the cafeteria.\n\n\"What's up with them?\" Patrick asks pulling his attention from Jessica for a moment.\n\nJamie shrugs and goes back to his pizza.\n\n****\n\n\"You really should let me do something with this mane of yours Jake.\" Rosanne \"Roxie\" Weaver states as she runs her hand through the back of my thick brown hair.\n\n\"I might let you have a crack at it Rox. My dad's giving me crap about getting it cut now that football seasons started.\" I tell her.\n\n\"You could show off his school pride Rox. Shave down the sides and color them blue and orange. His dad would love that.\" Bobby Lang says with a chuckle.\n\n\"I'm thinking more an emerald green. It'll bring out his eyes.\" Roxie says leaning back as Shelly and Jody approach.\n\n\"I see we got our usual spot.\" Shelly says as she takes a seat on the bleachers.\n\n\"You missed the pitched battle for this prime piece of real estate Shelly,\" Bobby tells her.\n\n\"Then I shall dine among the carnage,\" Jody says popping open her salad.\n\n\"We'd have been here sooner but we were showing Jessica around the cafeteria until Patrick swooped in and pulled her to his table.\" Shelly tells them.\n\n\"Jessica,\" Bobby inquires. \"Oh, is that the tall, hot blonde that Jake was telling us about.\"\n\n\"Hot huh,\" Shelly teases.\n\n\"Thanks for putting that out there Bobby,\" I sigh.\n\n\"Hey, you said it pal. So is she Shelly?\" Bobby asks.\n\n\"Tall, yes,\" Shelly answers which causes the girls to break into laughter. After that settles down she turns to me. \"You know, she's not your usual type.\"\n\n\"I have a type?\" I ask. \"I've had two girlfriends and they were pretty different.\"\n\n\"You've had at least three girlfriends that I'm aware of and they had similarities.\" Shelly argues.\n\n\"Maria doesn't count.\" I respond.\n\n\"Maria totally counts.\"\n\n\"We were a couple for less than twenty four hours before she went back to her ex. It doesn't count.\"\n\n\"Did you make out with her?\" Bobby asks.\n\n\"Well, yeah but,\" I answer.\n\n\"If you used tongue, it totally counts.\" Roxie pipes in.\n\n\"Fine but why are we even talking about my love life?\"\n\n\"Because you think Jessica is hot.\" Jody answers.\n\n\"Fine, I think she's hot, smart too... funny as well in fact but it doesn't really matter. Patrick staked his claim and that's the end of that.\"\n\n\"This could be your year, ya know. You just gotta give it a shot.\" Jody tells me.\n\n\"Have you been talking to my dad?\" I ask her.\n\nShe shakes her head. \"No, why?\"\n\n\"He said much the same thing about the football team this year and I know how that's going to turn out. Much like I know how this Jessica thing will turn out.\"\n\n\"Things could be different this year,\" Bobby interjects. \"I need to meet her first of course but you know what I'm saying.\"\n\n\"I'll introduce you Bobby,\" Shelly tells him. \"That way you can tell doofus here to go for it.\"\n\n\"Like doofus will ever listen to me.\"\n\n\"I'm sure I've listened to you once,\" I joke, \"There's probably still a scar from it but I did listen.\"\n\n****\n\nRay catches up to Staci in the senior parking lot calling out to her as she reaches her car. \"Stace, wait up.\"\n\n\"What do you want Ray?\" She snaps.\n\n\"I just wanted to see if you're all right.\" He answers.\n\n\"Why do you care?\" She asks. \"Hell, why do I even care that everyone knows that I screwed Patrick? The whole school knows exactly who he's screwed sometimes before the act is even over. It's just that, I hate thinking of myself as just a notch like Jamie said.\"\n\n\"Jamie's a dick and anyone that sees you as that is an asshole.\" Ray states.\n\n\"Most of the people that do are your friends Ray.\" She points out.\n\n\"They aren't really anyone's friends. I know they'd stab me in the back given half the chance. I can't be friends with people that treat shit like they did to Jake as a joke.\"\n\n\"God, that was so awful. I know we were never really friends but I felt so bad that she did that to him. I heard she changed schools so she didn't have to face him this year.\" Staci states.\n\n\"Now it's about to start all over again with this poor Jessica girl.\" Ray says.\n\n\"I wish I could warn her but I don't want them to turn their attention to me. God, I'm so selfish.\"\n\n\"It's not selfish, it's self preservation. Maybe we can try and watch out for her somehow.\"\n\n\"Something we'd work on, together?\" She asks, her lips edging up to a smile.\n\n\"I'd love that.\"\n\n\"I think I would too.\" She answers as she takes his hand and the pair walk back into the school hand in hand.\n\n****\n\nAfter lunch Jessica makes her way to Mrs. Harper's AP Biology class without any help from Patrick or crew. Patrick shrugged when she asked if he knew where it was. She deflected most of his attempts at flirting during lunch and figures that's the reason he didn't offer to escort her. Jamie just made another remark about her being a nerd causing Patrick to shush him but Jessica already wasn't liking hanging out with this group. She makes a mental note to stick with Shelly and Jody tomorrow as she makes her way down the crowded hallway. Finding the class isn't too much trouble and she quickly takes a seat beside a cute girl with long curly brown hair.\n\n\"Hi, I'm Jessica,\" Jessica offers as she puts down her bag.\n\n\"Hi back, I'm Lee Ann,\" Lee Ann Baker says giving her a smile. Just then Jessica looks up and sees Jake enter the classroom. He doesn't appear to see her and takes a seat at an unoccupied lab table near the front of the room.\n\n\"Um, how bad a person would I be if I switched seats after meeting you?\" Jessica asks. Lee Ann follows her gaze and giggles.\n\n\"He's smart, cute and funny, you could a lot worse for a lab partner that's for sure Jessica.\" Lee Ann tells her.\n\n\"Oh it's not that, I just... it's just that I'm new here and Jake's in my English class so I kind of know him, not that I wouldn't like to get to know you... God, I must sound like a crazy person,\" Jessica begins but Lee Ann laughs. \n\n\"You go ahead sweetie. Jake and I already have a little history together already.\"",
        "\"Uh, okay.\" Jessica answers picking up her bag and heading towards the free seat. \"Saving me a seat again Jake?\" She asks with a smile as she puts her bag down.\n\n\"Jessica?\" I say confused as to how I missed seeing her come in. \"Where did you...\"\n\n\"I was already sitting over there, your friend said I could move.\" Jessica answers.\n\nI look over and see Lee Ann who grins and mouths \"You're welcome\" to either me, Jessica or both of us. I mouth back a confused \"thanks\" as she gives me a wink.\n\n\"So, anything I need to know about Mrs. Harper?\" Jessica asks settling in as we wait for the bell.\n\n\"She's pretty laid back and will hand out extra credit if anything science related is happening around town.\"\n\n\"Are there a lot of those?\" She asks.\n\n\"The planetarium in town almost always has something going on every weekend.\"\n\n\"Every weekend huh,\" She teases. \"Do you think I'll need that much extra credit?\"\n\n\"It pays off in this class, believe me.\" I tell her as the bell sounds.\n\n\"Good afternoon class and welcome to Biology,\" Mrs. Harper begins. \"Some of you are new to me and several of you I've had before. It's nice to see you all. I know that you've picked your own seats but make sure that the person you're seated beside is the person you want as your lab partner for the whole year. We'll be doing several lessons that you and your partner will endeavor to work on together. Take a few minutes to make sure that you are where you want to be and then we get started.\"\n\n\"If you want to sit with your friend Lee Ann, I'm cool with that,\" Jessica says. \"She told me that you two have a history.\"\n\nI chuckle. \"Last year she and I were paired together in a science class and we ruined the grading curve for the class. That's the history she's talking about.\"\n\n\"Oh okay,\" Jessica says. \"Do you want to go for two years of grade ruining with her? She's cute.\"\n\nI glance over and see that Lee Ann is chatting away with Dean Reynolds. \"She is that but if I tried to evict Dean from that seat she'd kill me. She's had a crush on him since freshman year so this pairing might give them the push they need.\"\n\nJessica looks over at the pair and smile. \"Aw, that's so cute. I guess that means you're stuck with me then Jake.\"\n\n\"I'll somehow find the strength to cope.\"\n\nAs the class bell rings, I grab my stuff and ask Jessica, \"So where are you off to next?\" \n\n\"Art,\" she answers picking up her stuff. I laugh as Mrs. Harper stops Jessica and I at her desk.\n\n\"Jessica, I trust that Jake here is explaining how extra credit works with me?\" \n\n\"He explained how to get it,\" Jessica answers. \"I'm looking forward to earning some.\"\n\n\"That's what I like to hear. I hope you both have a great afternoon.\"\n\n\"Thank you ma'am,\" I answer picking up one of the brochures off her table. Jessica follows suit then follows me out into the hallway. \n\n\"Ooo, weather exhibit this weekend at the planetarium,\" She reads aloud.\n\n\"Extra credit,\" I state. \"Mrs. Harper doesn't push anyone to take it but if you know where to look...\" \n\n\"On her desk for example,\" Jessica chimes in.\n\n\"Right,\" I answer.\n\nJessica pauses a moment in the hall and before I can offer to show her to her next class she stops Lee Ann and Dean. \n\n\"Lee Ann, did you or Dean grab one of these?\" She asks the pair.\n\n\"Oh, I missed it.\" Lee Ann answers sheepishly.\n\n\"What is it?\" Dean asks showing that it's first year with Mrs. Harper.\n\n\"Lee Ann will explain it and you two can share mine.\" Jessica tells her as she hands it over. \"See you two later.\"\n\n\"That was nice of you but are you going to remember the time and all?\" I ask as we start walking down the hallway.\n\n\"I'm counting on my lab partner to take care of me,\" She says then looks around. \"Am I even going the right way?\"\n\nI laugh and nod. \"Mr. Pennington's class is this way. It's my next class too.\"\n\nShe laughs a cute laugh. \"It looks like I just can't get rid of you huh?\"\n\n\"I was about to say the same thing.\" I respond.\n\n\"You can't get rid of you either?\" She jokes as we reach the door of the classroom.\n\n\"A lot of us have that problem when it comes to Mr. Gibson.\" Coach Pennington states overhearing Jessica as we enter.\n\n\"She doesn't need any help from you Coach. Jessica here is as sharp as they come.\" I tell him as I look for a table for us. Before I can steer Jessica to one, Shelly appears and takes Jessica by the arm.\n\n\"Sorry Cuz, but this is girl talk time.\" Shelly states pulling Jessica along to a table near the back of the room.\n\n\"So that's Jessica huh, okay she's hot.\" Bobby says kicking a chair out for me to sit in. \"When are you gonna introduce me?\"\n\n\"That was Shelly's promise not mine.\" I tell him as I take a seat.\n\n\"Afraid I'll snake her from you huh? I understand. I mean I am irresistible.\" He states.\n\n\"You meant, \"irritating.\" I joke back at him.\n\n\"Ooo, look at you with the quick comeback. You must be having a good day.\" \n\nI glance over at Jessica and smile. \"I guess I am.\"\n\n\"Okay gang,\" Coach Pennington states getting to his feet and walking the room. \"Most of you know me but for those that don't, I'm Mr. Pennington and welcome to Art class. Now we'll doing several different projects this year from drawing to painting and if I can swing it, a little sculpturing but let's start off with some sketches. Grab and easel, pick one of the set ups from around the room and start sketching.\"\n\nI grab an easel for Bobby and myself who then asks what I'm going to pick.\n\n\"The vase of flowers maybe,\" I state. \"You?\"\n\n\"I dunno, the violin probably. Closest thing to a guitar in the options.\" He answers. I move my chair slightly when something else I want to sketch catches my eye. I pull out my pencil and begin to draw.\n\nRight before the bell was to ring, calling an end to the school day, I quickly covered my sketch with a new piece of clean paper and sketched out the vase of flowers.\n\n\"I liked the first one better,\" Coach Pennington said quietly as he passed behind me. Before I can respond the bell sounds and everyone starts getting up. \"Sketches on my desk and we'll pick back up with them tomorrow. Those of you I won't be seeing in practice in a few minutes be safe getting home.\"\n\nAs Bobby and I start to get up Shelly and Jessica stop at our table. \"Jessica, this is our friend Bobby,\" Shelly introduces, \"Bobby, this is Jessica.\"\n\nBobby hops up and offers his hand to Jessica who laughs and accepts it.\n\n\"Nice to meet you Bobby,\" Jessica says as I get up and place my easel on Coach Pennington's desk.\n\n\"Same here Jessica,\" He answers. \"I feel like we've met already with these guys talking about you.\"\n\nJessica looks at Shelly and I with a smile. \"Should I be worried?\"\n\n\"You've spent a few hours with them both, you tell me.\" Bobby responds as we all head out into the hallway.\n\n\"Well with Shelly, I'm sure I'm fine but with Jake here,\" She states bumping my arm playfully. \"I think I need to watch out for him.\"\n\nBobby bumps my other arm. \"You did say she was a smart one too. You weren't lying about that either.\"\n\nJessica laughs. \"What else did he say about me Bobby?\"\n\n\"Nothing bad, I promise but that's all I'll say.\"\n\nJessica gives me a smile. \"I knew I was going to have to watch out for you.\" She teases.\n\n\"Is this where I plead the fifth?\" I ask her and get the laugh I'm hoping for.\n\n\"Too late for that,\" Shelly laughs.\n\n\"Too late for what,\" Jody asks coming up to join our group.\n\n\"Jake here is trying to plead the fifth so he doesn't incriminate himself with what he's been saying about Jessica.\"\n\n\"Jake!\" Jody scolds and punches my shoulder.\n\n\"And the hits just keep coming,\" I state coming to a stop at my locker. \n\n\"Don't say mean things about Jessica. She's really nice.\"\n\n\"Jody, he didn't say anything mean. I mean as far as I know.\" Jessica explains.\n\n\"It's all been good.\" Shelly adds.\n\n\"Some would use the term glowing.\" Bobby adds.\n\n\"Oh gee, look at the time. I gotta get to practice. See you guys tomorrow.\" I state grabbing the books I need for homework before hurrying away from the group.\n\n\"Was it something I said?\" Bobby asks garnering a laugh from the girls.\n\n\"More like whatever he said,\" Jessica jokes getting more laughs.\n\n****\n\n\"We're going to have a little quarterback contest today,\" Coach Yates says as the team huddles up around him. Inwardly I groan because I already know that whatever it is, it'll be stacked against me. \"We're looking for completed passes. Whoever has the most wins, fewest is gonna owe me laps.\"\n\n\"Are you ready to run all night long Shadow?\" Patrick calls out getting laughs from his buddies which includes most of the receivers.\n\n\"I'll be keeping up with incomplete passes so quarterbacks, receivers, and tight ends line it up.\"\n\nPatrick goes first and completes a curl pass to Scott Kennedy. I step up and my receiver is Ray Halston. He's set to run a slant pattern and I expect him to develop alligator arms but I throw it where I'm supposed to, leading Ray just a bit so he catches it on the run. To my surprise he plucks it from the air with ease then jogs back to the line. I hear grumbles from Patrick's group and wonder what is going on. The junior that's going out for quarterback overthrows his turn and coach shouts out \"That's one!\"\n\nThe kid looks rattled so as Patrick takes his turn I go over to him.\n\n\"Don't let coach get to you, he likes to put on the pressure to see who'll crack.\" I tell him. \"I'm Jake by the way.\"\n\n\"Thanks Jake, I'm Sean.\" He says.\n\n\"Go through your motion just like you usually would. You'll be fine.\" I tell him as Patrick completes his second pass.\n\nI go back up to the line and this time Scott is lined up as my receiver. The play calls for a five step drop and as I let the ball go it's right on target but Scott doesn't even reach out for it until it's passed him.\n\n\"One for you Gibson,\" Coach calls out.\n\n\"First of many,\" I hear Patrick whisper to his group.\n\nSure enough, the receivers are unable to catch any of my passes with Ray being the lone exception. He catches everything I throw to him even one I went a little long on.\n\n\"Nice catch,\" I call out to Ray who nods at me right as coach calls practice.\n\n\"Great job as usual Patrick, no laps for you.\" Coach reads out. \"Wilson, you owe me five laps and you Mr. Gibson owe me twelve. How in the hell do you think you're gonna be number two with that kind of half ass play? Answer is that you ain't.\"\n\n\"Yes coach,\" I state. Arguing with him about how he heard Patrick and the receivers plotting to drop my passes would do me no good. Patrick is his golden boy, his ticket to the state record and nothing will stand in his way.\n\n\"You two get to running and the rest of you hit the showers.\"\n\n\"Twelve laps is gonna have Shadow running half the night,\" Patrick laughs as the team is showering.\n\n\"It should have been twenty,\" Jamie calls out. \"What the hell were you doing catching his passes Ray?\"\n\n\"My place on the team is based on catching passes. I figured I probably ought to do that at the first real practice.\" Ray answers while toweling off.\n\n\"Your place is wherever I tell Coach Yates it is.\" Patrick boasts. \"It'd be in your best interest to remember that if you ever think about catching anything Shadow throws your way again.\"\n\n\"Haven't you done enough to him already Patrick?\"\n\n\"He needs to learn his place,\" Patrick states while the group gets dressed.\n\n\"Like he hasn't learned that already with what you did to him and Jennifer last year.\"\n\nPatrick shrugs. \"He seemed to let it slip his mind with the way he was trying to put the moves on my girl today.\"\n\n\"Jessica isn't your girl.\" Ray points out. He too had seen Jake and Jessica walking together in the hallways. Maybe that was a way for him and Staci to \"help\" Jessica. He makes a mental note to run it by Staci later.\n\n\"Oh she is, she just doesn't know it yet.\" Patrick says.\n\n\"From what I saw today, you need to step up that game of yours because Jake looks to be ten steps ahead of you and pulling away.\"\n\n\"Fat chance of that,\" Jamie states smugly.\n\n\"Fat chance of what,\" Staci asks as she meets them outside the locker room.\n\n\"Shadow getting in the new girls pants before Patrick does,\" Jamie shares.\n\n\"Jamie, do you have to be disgusting all the time?\" Staci asks making a disgusted face.\n\n\"All this talk of getting into pants is making me horny,\" Patrick says then tugs Staci towards him. \"You wanna make out a bit in my car?\"\n\n\"No,\" She answers curtly jerking away from his groping hands.\n\n\"Staci, would like to go out and grab some dinner with me tonight?\" Ray asks taking Staci's hand.\n\nShe smiles and nods. \"Yes, I would.\"\n\n\"Cool deal,\" Ray smiles then turns to the guys. \"Later.\"\n\n\"What the hell was that?\" Patrick asks Jamie as they watch the couple walking away together.\n\n\"Looks to me like there's a few people that need to learn their place this year.\" Patrick states as he stares daggers after the departing pair.\n\n****\n\nI'm on lap ten when Coach Yates yells from the door of the locker room. \"Gibson, get your ass in here!\"\n\nI jog over. \"That was only ten, Coach.\"\n\n\"I can count goddamn it! I just don't want to be out here all night while you take your sweet ass time jogging around. You'll start with two extra laps to run at the start of practice tomorrow and don't think you're gonna lollygag them either. Now get your ass changed so I get home!\"\n\n\"Yes Coach,\" I tell him fighting the urge to salute the bastard. I quickly grab my stuff from my locker and meet him outside. \"I'm ready coach.\"\n\n\"'Bout damn time,\" He states and I just nod. \"Lazy ass kid.\" I hear him mutter as I begin jogging to my car. I come to a sudden stop about halfway to my car when I notice that I not only have one flat tire on my Mustang, I have two.\n\n\"Son of a bitch,\" I exclaim.\n\n\"Looks like you've got a little problem there huh Shadow?\" I hear Jamie call out from behind me. I turn and see him and Patrick laughing their asses off.\n\n\"Sucks to be you Shadow!\" Patrick shouts as Jamie revs his engine then peels out of the parking lot.\n\n\"Assholes,\" I mutter as I pull out my cellphone and call Bobby. \"Hey man, how's it going?\"\n\n\"Decent I guess, just finished up my homework. What's up? You home from practice yet?\" He asks.\n\n\"Had to run laps and guess what I found when I got to my car?\"\n\n\"A-fucking-gain?\" He asks already knowing the answer. \"I don't know why we even took the air compressor out of the back of my truck.\"\n\n\"We're idiots apparently.\"\n\n\"Apparently,\" He answers. \"Give me about ten minutes to get the thing loaded back up, maybe fifteen.\"\n\n\"Thanks man, I appreciate it.\"\n\n\"Yeah, yeah,\" he says. \"Just when you finally decide to kick Patrick's teeth down his throat, make sure I'm there to see it.\"\n\nIt takes a little under an hour for Bobby and I to get my tires inflated. I thank him again before heading home. When I get in Mom informs me that I'm late as if I wasn't painfully aware of that fact.\n\n\"Sorry mom,\" I apologize. \"Thanks for keeping my dinner warm.\"\n\n\"Can't let you starve now can I?\" She jokingly asks.\n\n\"Practice run late,\" Dad asks when he hears us.\n\n\"I had to run laps and then my car winded up with a couple of flats. Had to call Bobby to come out with his compressor.\" I answer. \n\n\"I'm guessing that you didn't run over anything this time either,\" Dad states. \n\n\"Nope,\" I answer, \"I need to hit the shower before I eat. Coach didn't want to hang around for me to get one after practice.\" I head up to my room and begin to undress when my cell rings. Checking the number, I see that it's Shelly.\n\n\"Hey Shell, I was just about to hop in the shower.\"\n\n\"I know, Bobby updated me a few minutes ago. You need to call the cops on Patrick's ass.\" Shelly tells me.\n\n\"Would those be the ones that work under the Police Commissioner who plays golf with Patrick's dad on the weekends or are there different ones I should know about?\"\n\n\"They take an oath Jake.\" She points out.\n\n\"To manipulate and destroy, right?\" I ask.\n\nShe giggles, \"It's serve and protect, bonehead.\"\n\n\"When it's the Greene family, I'm sure,\" I answer.\n\n\"This will hopefully put an end to the whole \"Jessica\" thing at least. You two have become friendly enough for this little stunt to piss her off at him too.\"\n\n\"Shell, you can't tell her.\"\n\n\"Are you concussed? I didn't think you guys were padded up yet.\"\n\n\"We're not,\" I answer.\n\n\"Then explain to me how you damaged your brain.\" She states.\n\n\"It's just... it's not fair to her Shell. Jessica is new here and she shouldn't be put in the middle of this garbage that's been going on for years.\" I tell her.\n\n\"She's already in the middle and we should at least arm her so she can defend herself.\" She tells me.\n\nI laugh, \"You make us sound like some small rebel faction fighting against an evil empire.\"\n\n\"Maybe someone made me watch Star Wars too much when we were kids but I stand by my statement.\"\n\n\"That I'd make a terrible Han Solo? Thanks Shelly, that still hurts by the way.\"\n\nShe laughs. \"Go take your shower. I'm sure you smell like you've been swimming around in a trash compactor but don't worry, I won't tell Princess Jess anything. She'll learn everything eventually anyway.\"\n\n\"Yeah maybe, see you tomorrow Shell.\"\n\nNext Day\n\n\"Hey Shadow,\" Jamie shouts as I enter the lower hallway the next morning. \"How's your tires looking this morning?\"\n\nI look up and see that Patrick and his crew are camped right outside of Ms. Simpson's room.\n\n\"Chasing after Jessica no doubt,\" I sourly think as I continue towards the door.\n\n\"Two flats at once and after all those laps you had to run too,\" Patrick says. \"What are the odds?\"\n\n\"Odds of what,\" Jessica asks as she appears heading in from the opposite direction.\n\n\"Shadow had a little trouble after practice last night. Hope it doesn't happen again.\" Jamie says pointedly as I pass the group and enter the classroom. The warning is clear\n\n\"What happened,\" Jessica asks.\n\n\"His car got a pair of flat tires last night. He must have run over some nails or something.\" Patrick explains causing his group of football guys to laugh. Jessica knows that something is up with the way they all thought that was so funny so she excuses herself and heads into the classroom.\n\n\"Fuck,\" Patrick mutters. \"Why is this one so hard?\"\n\n\"She's a fucking nerd dude,\" Jamie snorts. \"Sure, she's cute and all but there's hotter chicks just waiting for you to say that word.\"\n\nPatrick nods, \"Maybe I'll let them occupy my time until I get into her pants.\"\n\n****\n\n\"Uh oh, she showed up for a second day,\" Ms. Simpson says as Jessica walks in. \"I guess Mr. Gibson was on his best behavior yesterday then.\"\n\n\"Not really but I knew you'd need all the help you can get with him.\" Jessica jokes back then looks over at Jake whose head is down on the desk with a pair of earbuds in.\n\nMs. Simpson sighs. \"Earbuds day is not a good sign.\"\n\n\"It's not,\" Jessica asks pausing at Ms. Simpson's desk.\n\nMs. Simpson shakes her head. \"Like I said yesterday, he and I go way back. He's been in my classes since freshman year and earbud days are ones when he's trying to tune the world out.\"\n\nJessica nods then makes her way to her seat but pauses before sitting down. She reaches over and plucks one of the earbuds out of my ear and smiles when I look up.\n\n\"Good morning,\" She says. \"You know that you're missing out on some great ribbing at your expense.\"\n\n\"I am huh,\" I ask looking towards the door expecting to see Patrick's smug looking face. \n\n\"Yep, I am on my 'A' game today. You shouldn't be tuning me out.\"\n\nI can't help but smile back. \"You are? Well it is rude of me to miss that.\"\n\nUp front, Ms. Simpson smiles at how easily Jessica got Jake to put away his earbuds and now has him smiling.\n\n\"I see that you've decided to join us Mr. Gibson.\" She says.\n\n\"Yes ma'am,\" I answer. \"I was told that I was missing someone's 'A' game this morning.\"",
        "\"Yes, our Ms. Golden came to play today and you were just laying there ignoring her.\"\n\nI turn to Jessica. \"My apologies for missing your rapier wit Jessica, it won't happen again.\"\n\n\"See that it doesn't Jake,\" Jessica states as she takes her seat. \"I like an appreciative audience.\"\n\nDespite my mood I laugh. \"Do I clap or throw roses?\"\n\n\"Lilies,\" She states.\n\n\"Lilies,\" I ask.\n\n\"I like lilies over roses so if you plan on throwing flowers at me, that's rude by the way, it should be lilies.\"\n\n\"Got it,\" I answer. \"I should not throw lilies at you.\"\n\n\"Hand them,\" She tells me. \"It's the polite way.\"\n\n\"Yes ma'am, I'm making a mental note now.\"\n\n\"Don't take too long, class is starting.\" She jokes as the bell rings.\n\nMs. Simpson stands up and begins to speak, \"Now class...\"\n\n\"One second Ms. Simpson, I'm making a mental note.\" I tell her garnering several giggles from around the room.\n\n\"We don't all class for you to finish Mr. Gibson.\" She retorts getting more laughs.\n\n\"I've almost got it. Lilies, not for throwing. Thank you for the extra time.\" \n\n\"I'm sure he's got it Ms. Simpson. The little mouse in his head is back on the wheel thing.\" Jessica jumps in.\n\n\"His name is Mortimer.\" I tell her.\n\n\"As entertaining as this show is, may I get back to reading list for the year?\" Ms. Simpson asks us.\n\n\"Mortimer says go ahead,\" I state getting a laugh from her.\n\n\"You'd better feed him lots of cheese Mr. Gibson because he's going to need the energy.\"\n\n\"So do you want to talk about it?\" Jessica asks as she walks beside me heading towards our next classes.\n\n\"About what books I'm going to choose off the reading list?\" I deflect.\n\n\"I heard something about tires,\" She continues volleying my deflection right back in me face.\n\n\"Wow, you slapped that right back into my face real quick,\" I jokingly tell her.\n\n\"Years of practice,\" She states then noting the confused look on my face. \"I play volleyball. Spiking things back is sort of my thing.\" \n\n\"Volleyball huh,\" I ask.\n\n\"Yeah, I know volleyball is pretty lame compared to football and all that but I enjoy it.\" She says.\n\n\"Who says volleyball is lame? It's pretty exciting and way faster paced than football is.\"\n\n\"Watch a lot of volleyball do you? It's not all beach volleyball with us in skimpy bikini's ya know?\" She teases.\n\n\"If you tell me that the tight shorts are a myth too, I think I might cry.\" I tease back.\n\n\"Oh those, those are real.\" She says cocking her hip towards me so my eyes are drawn to her shapely rear.\n\n\"I... uh... see... uh...\" I stammer.\n\nShe pushes me towards my classroom door as she heads into Trigonometry and I swear she puts an extra swish in her hips as she enters the room. \"Work on that stammer Mr. Gibson.\" She teases before disappearing into the room. I nearly walk into the door of my class causing the teacher Mrs. Warren to ask if everything's all right.\n\n\"Things are spectacular Mrs. Warren, absolutely spectacular.\""
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "football",
        "volleyball",
        "virgin",
        "blonde",
        "high school",
        "nerd",
        "bullies",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-01"
}