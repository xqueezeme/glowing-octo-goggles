{
    "title": "Family Issues Ch. 05",
    "pages": [
        "Sorry that it takes so long but finding time to write is not always easy.\n\nI would like to thank Madison (ThanatopicFolds) for all the time invested. Your red pen is the string that holds the story together and prevents it from falling on its ass.\n\nI also want to thank all the nice people who wrote me and encouraged me to keep going.\n\nOn with the story.\n\n$$$$$$$$$$$$\n\nHelen bounced up and down to the rhythm of Eminem's 'Lose Yourself' as it pumped through her headphones. Patches of sweat soaked her T-Shirt, her long legs kicking as she bypassed every runner in sight. She was the fastest kid in elementary and the fastest kid in high school. It came naturally and running always made her forget\n\nHer date with Dennis was still a stinging memory, but whenever she remembered last night, it was Kevin that was in her thoughts. His hands hugging her body, offering comfort and understanding. There was something new in the air. Expectation. She felt like she was on the brink of a great discovery. It was frightening, but she knew that the first step was made and there was no turning back.\n\nThe afternoon sun tinted the skyline with pink, and the seagulls from the bay filled the air with shouts of glee. She felt someone running beside her, and it was surprising because most joggers wouldn't opt to train at her pace.\n\n\"Yo, snail lady, move aside! You're killing my rhythm.\"\n\nShe turned and had to slow down and laugh. It was Kevin.\n\n\"I saw you jog already in the morning,\" she kept jogging side by side with him.\n\n\"Must've been someone else; I'm too fast to spot.\"\n\n\"Looked kinda slow.\"\n\n\"Wanna race?\" He huffed.\n\n\"Only if you promise not to cry when your ass gets owned,\" she said.\n\n\"From here, back to the house. First one who gets there showers first. On your mark, get set.\" He shifted gear and left her in the dust.\n\nHelen laughed and took off after him. Her long legs ate the distance, but he was surprisingly hard to match, even though he had to make almost two steps for each one of hers. Her heart was pumping, and a sense of wild joy overtook her. They sprinted past the trail under the wooden bridge, and Helen changed her course, cutting through the playground wall. Kevin followed, but he had trouble climbing the tall fence and she laughed as she left him far behind. She ran through the line of Scarlet Oaks and checked behind her, just to be sure. To her surprise, not only had he not given up, but he was gaining on her.\n\nThey burst into the street, zigzagging past surprised pedestrians. Kevin had the size advantage here, as he was more agile. She gave everything on the last street, going into the road, to cut a straight line. She was confident that she had it in her pocket, but Kevin surprised her again. Proving that he too had some reserves, he accelerated to a mad dash and passed her in the last ten meters, almost hitting the building's wall.\n\n\"Yeah!\" he roared. \"What a twist, ladies and gents! He changed the game he flipped the script!\" Kevin dabbed twice and did a backflip.\n\n\"Goddamn,\" she bent over, gulping air. \"How the hell- did you do that?\"\n\n\"I was the best runner in my high school cross country team.\"\n\n\"You were in a cross-country team?\"\n\n\"I know that you look at this body,\" Kevin stretched his small, willowy form and posed like Mr. Universe, \"and immediately you're thinking, 'sumo wrestling team' or 'basketball team'. Something that goes better with my physique. But running was my call.\"\n\nShe laughed.\n\n\"Whose ass got owned?\"\n\nHelen lifted her hand.\n\n\"You can shower first,\" Kevin said. \"Your humiliation is a big enough reward. But be super quick about it, or we'll be late for the movie.\"\n\n\"What movie?\"\n\n\"The one we're going to catch.\"\n\n\"What?\"\n\n\"Wonder Woman. You like science fiction stuff, no?\"\n\n\"I do, but I can watch it in a few weeks when the DVD is out.\"\n\n\"I don't see the point. You'll know the plot in advance because you'll be watching it with me tonight. Or maybe you think the DVD version would have a different plot?\"\n\n\"Kevin,\" she smiled, \"I'm not going.\"\n\n\"Tonight, is Diana's night shift at the store, and we're going to catch a movie like we do every Sunday night. It's a tradition. You can't break tradition, Helen.\"\n\n\"We have never watched a movie together.\"\n\n\"Every tradition's gotta start someplace, no? Look, I already bought tickets because you asked me to, so not coming is a dick move.\"\n\n\"I never asked you to buy anything.\"\n\n\"I have it on record, so you can either come or expect a heavy lawsuit.\"\n\n\"You have nothing on record.\"\n\nKevin sighed, pulled out his mobile and pressed a recording application. \"Kevin, please buy two tickets for Wonder Woman Sunday night.\" He imitated Helen's throaty voice. \" I wanna munch on a massive popcorn bucket, while watching Wonder Woman kick ass on a big screen. Watching movies on TV sucks ass.\"\n\n\"That doesn't even begin to sound like me.\"\n\n\"Tell that to the jury.\"\n\n-----\n\n\"It was good,\" Kevin said. \"I didn't expect to like it, but I did.\"\n\n\"Why not?\" Helen said.\n\n\"On the only day of the week on which I have a girlfriend-free pass, I go to see a movie about a girl named Diana who thinks she's a princess.\"\n\n\"Come on, Kevin.\"\n\n\"It's just that superheroes and supervillains aren't really my jam. But it was good. When Steve said he loved her and sacrificed himself... Man.\" He gave a deep sigh.\n\n\"Wuss.\"\n\n\"Fuck off!\" Kevin opened his eyes wide. \"You wiped your tears on your sleeve when he died. I saw you.\"\n\n\"Totally not. I was just cleaning some popcorn that landed on my blouse.\"\n\n\"With your eye?\"\n\n\"Yep.\"\n\n\"Is that what they teach you in the Marine Corps? To lie shamelessly? Born Again Hard my ass, more like Born Again Marshmallow.\"\n\n\"I cry in films, Kevin, if that's okay with you?\"\n\n\"I thought it was sweet.\"\n\n\"Hmmm... Don't patronize.\"\n\n\"That's not patronizing. Patronizing means to look down on someone, just so you know.\"\n\nHelen kicked his ass, and Kevin laughed.\n\nThe movie was excellent, but she liked all the rest even better. Sitting in the dark theatre munching on a bucket of popcorn, joking with Kevin about nothing in particular. At one point Kevin imitated the main actress' accent, and she was glad the theatre was almost empty because she choked on her Coca-Cola.\n\n\"Thanks,\" Helen said.\n\n\"For what?\"\n\n\"For being relentless and not letting me just do what I always do.\"\n\n\"We can really make a tradition out of it. Maybe a Sunday night movie when Diana is working?\"\n\nShe looked at him, and Kevin gave her a warm smile.\n\n\"I would really like that,\" she said.\n\nThey came in a cab but decided the weather was beautiful enough to walk back home. The center was a hub for theatres, shows, restaurants, and clubs. The streets here were big and open, with food stalls selling fast-food in every corner, and they were brimming with locals and tourists. Somewhere to the south and closer to the bay, they could hear soft guitar music, and the happy sounds people make when they have fun. Kevin motioned her to follow.\n\n\"It's a street party. They have one here every Saturday, in August.\"\n\nThe street party was in a fountain square near the theatre district. The DJ station was constructed on an elevated stage, where a guy covered in tattoos was sending smiles, good vibes, and pop music to anyone who cared to join. Above the crowd, from street lamp to street lamp, lay a mesh of strings from which white paper chandeliers, flags and colored balloons dangled to commemorate the summer twilight.\n\nPeople of every age, size, shape, race, and gender, both locals and tourists were having fun and making a lot of noise while they were at it. It was festive, it was loud, and possessed the kind of cheerfulness that crawls under the fingernails, climbs all the way to the face, forces the corners of the mouth to go up, and the legs to follow the rhythm. Life was happening everywhere, and Helen wondered why the hell she chose to sit on the fence instead of taking part.\n\nPeople moved in pairs or groups, laughing and dancing to the DJ's music.\n\n\"I'm crazy about this song,\" Kevin tried to pull Helen, and when she wouldn't move, he danced around her.\n\n\"Do you know what the song is about?\"\n\n\"Some girl named Despacito?\"\n\n\"The guy basically tells the girl to make love slowly,\" Helen said.\n\n\"Sounds like a plan,\" Kevin smiled. He remembered last night and Nadine's soft body moving slowly against his. He really wanted to give her a call but knew he could do without the complication.\n\nProfessional dancers wearing white t-shirts and criminally short jeans were leading the crowd through the steps. Helen gave a timid attempt at moving her hips sensually and won a warm smile from Kevin.\n\n\"That's the spirit.\"\n\n\"Quiero desnudarte a besos despacito\"\n\n\"I want to undress you in kisses slowly\"\n\nHelen had a flitting image in her mind, of her and a lithe body with enormous purple eyes kissing passionately on a big bed. She blushed and turned her head. The night out with Kevin felt too precious to ruin with childish sexual daydreams.\n\nSomeone touched her hand. A tall, dark dancer in a striped shirt tried to drag her into the middle of the crowd. He pulled her hand, and she pulled back with force. The dancer lost his balance and fell on his ass. He was kind enough not to be angry at her, but rose and gave a mock bow, before returning to the dance. Helen saw a couple of faces turning in her direction, curious. She had a sudden sensory overload, as the sounds and the crowd overwhelmed her. Someone grabbed her hand again, and she turned, snarling, then let out a long breath when she saw it was only Kevin.\n\n\"Are you okay?\" Kevin said.\n\n\"No.\"\n\n\"You wanna bounce off?\"\n\n\"You wanna stay?\"\n\n\"Nah, you're too stressed,\" he said.\n\n\"Thanks. Too much... The... A little too much.\"\n\nKevin nodded. \"Just a sec.\" He ran to a street corner where a man wearing clothes that hadn't seen the inside of a washing machine this century sat drinking from a bottle. The homeless man had cardboard that read 'Family kidnapped by evil ninjas, needs $ to learn karate.' Kevin shook the man's hand and gave him a thumbs-up. \"That sign is the best yet, Jacob,\" he said. Kevin then pulled out his wallet, but the Jacob stopped him.\n\n\"You know I don't take money from friends, Kevin.\"\n\n\"Just this time. You'll be doing me a huge favor,\" Kevin placed a stash of bills in the hat and ran off back to Helen before the astounded Jacob could say anything.\n\n\"Let's go,\" he beamed at her.\n\n\"Did you just put a shitload of money in that hobo's hat?\"\n\n\"His name is Jacob, not 'Hobo'.\"\n\n\"How do you know his name?\"\n\n\"I know him. He always sits here, and he always makes funny signs. He's a nice dude. Used to be a stevedore in the Northern Docs. He's a cool guy.\"\n\nHelen looked back at Jacob. He had gray in his hair, and his face was a map of creases that people who spent all their years under the sky have. Growing up in West Englewood she knew more than a few dockworkers. A hard bunch with a strong union once, which like the projects and the rest of the east side succumbed to progress. \"Ships don't roll up in the North Docks anymore,\" she said. \"They laid everyone off ten years ago. I still remember the strikes. It was very sad.\"\n\n\"Something like that happened with the quarry near my hometown. Half the town became unemployed when it was closed.\"\n\n\"How much did you give him?\"\n\n\"Four hundred and forty dollars.\"\n\n\"Are you insane?\" She stared at him, eyes wide. \"I thought you were broke?\"\n\n\"I am. I won it last night gambling, and I think it's bad money.\"\n\n\"Because it's gambling money?\"\n\n\"Because I think it came from exploiting prostitution, and extortion, and probably other stuff that I don't even want to think about.\"\n\n\"Where the hell were you and Diana last night?\"\n\n\"I'm not so sure.\"\n\nHelen sighed. \"You should have kept the money, Kevin. Money is just money; it doesn't stink.\"\n\n\"Let's say you find Pablo Escobar's hidden stash. Would you feel okay to take it knowing that people paid with their lives, families were ruined, and bad people got richer because of it?\"\n\n\"Yes.\" She shrugged. \"No. I don't know.\"\n\n\"It's bad karma, Helen.\"\n\n\"Do you believe in Karma?\"\n\n\"No, but my mom always said that for everything that you do there is a reward, and there is a punishment.\"\n\n\"Was your mom super religious?\"\n\nKevin's leaned back and looked up. \"Depends on what you're comparing to. We used to go to church every Sunday, and we thanked God a whole lot. But everyone in my hometown is like that. Anyway, it's not what you think. My mom used to say that bad deeds and good deeds are rewarded in this life, not just in the afterlife.\"\n\n\"No, they're not.\"\n\n\"If you do shitty stuff, it makes you a shitty person, and you have to live with yourself knowing that you're a shitty person. It's an instant punishment.\"\n\nHelen snorted, \"I bet that punishment kept Pablo Escobar awake at nights.\"\n\n\"I know it sounds stupid to you, but-\"\n\n\"It sounds stupid because it is stupid.\"\n\nKevin tensed, and she tried to read his face, but he wasn't half as transparent as she was, and understanding people wasn't Helen's forte. \"That sort of bullshit is exactly what a priest on a Sunday sermon would try to sell,\" she said.\n\n\"You got something against priests now, or does my religiously fanatic mother rub you the wrong way?\"\n\n\"We had a Catholic church in West Englewood not far from where I used to live. Father Nicolas taught his flock that futanari are an abomination, an insult to the All Mighty. I had to suffer ricochets from his sermons through my entire childhood, so excuse me if religious bullshit rubs me the wrong way.\"\n\n\"I don't believe you're an abomination, Helen, but I do believe that bad deeds and good deeds are rewarded in this life, and that the only virtue that can be completely good is a good will. My mom didn't quote a priest, she quoted Kant,\" he said in a quiet voice. \"I believe both my mom and Immanuel were right.\"\n\n\"Belief has nothing to do with it; it's just false.\"\n\n\"Maybe. But it's something that my mom used to say all the time, and I try to live by it, okay?\"\n\n\"Why?\"\n\n\"Because my mother said you should.\" He started walking down the street leading to the park, and Helen hurried after him.\n\n\"You always do what your mom tells you, Kevin?\"\n\n\"Always.\"\n\n\"No doubts? Parents are sometimes stupid. My mother, bless her heart, always had the best intentions, but she was so wrong about so many things. \"\n\n\"Always, Helen.\"\n\n\"Okay, I'm not judging.\"\n\nHe stopped walking. \"Sounds like you are.\"\n\n\"I'm sorry.\"\n\n\"Are you?\"\n\n\"I didn't mean to belittle your mom's beliefs.\"\n\n\"Yes, you did. My mom...\" His voice trembled a little. \"My mom has a part in everything that I am, Helen. She taught me how to cook, she taught me to love the ocean, she took me to my first scuba diving, she taught me fishing, playing guitar...everything.\"\n\n\"Cooking? So, all the amazing food in my refrigerator? I should thank her?\"\n\n\"We owned a restaurant, a family business that she ran, and I worked there for as long as I can remember. She didn't just teach me to cook. She taught me how to make dinner when twenty angry patrons are waiting for twenty different orders, you're missing ingredients, and the stove broke yesterday.\"\n\n\"Maybe we can go and visit her restaurant next Saturday?\"\n\n\"No.\" Kevin started walking again, and Helen found herself again running after him.\n\n\"Why not? Is it far?\"\n\n\"There is no restaurant. It's closed.\"\n\n\"What happened?\"\n\nKevin shrugged. \"Let's talk about something else, okay?\"\n\n\"W...Why?\" She tried to reread his face, but he was unreadable. \"Kevin?\"\n\n\"What?\" He raised his voice.\n\nShe touched his arm. He flinched and shook her off.\n\n\"My mom died three years ago,\" he suddenly said. \"She and my little brother were both killed in a car accident.\"\n\n\"I'm so sorry.\" She stared at him with horror.\n\n\"She was a simple woman, not a big vice president like you, Helen, but she was the smartest and the kindest person I've ever known, and not you or anyone else gets to say shit about her or what she believed in.\"\n\n\"I'm so sorry, Kevin.\"\n\n\"About my dead mom, or about calling her version of what makes a decent human being stupid?\"\n\n\"About both.\"\n\nKevin stopped walking and stared at her. Helen wasn't just sorry; she was terrified. She was scared that with insensitivity she managed to ruin the fragile thing they began to share this evening. In a sense, she wasn't very different to Iman, Nadine's sister, with her inability to decipher a simple human interaction. Another thing his mother taught him was to never be cruel or impatient in the face of weakness. \"I'm sorry,\" he said, and hugged her, to show her it was alright between them. Helen let out a long breath. \"I lashed, and I shouldn't have,\" he said. \"I'm touchy when it comes to her.\"\n\n\"You're not mad at me?\" She even asked like a little girl, and it made him smile.\n\n\"It's just hard, and I'm...they say that time heals everything, and that life goes on and all of that crap. But that's just bullshit. It's been three years, and I still wake up every morning hoping it was just a bad dream, and that I'll open my eyes, and I'll see them both.\"\n\n\"It's hard.\"\n\n\"She was my best friend. She was...\" His voice broke. \"Everything I do, and she's there. Like she's watching me.\"\n\n\"Sounds a lot like my mom.\"\n\n\"It's hard.\"\n\n\"Yeah.\"\n\nThey walked in silence for a long while, leaving the noisy center and the party behind them. The sky was clear and the air warm, but they were both shrouded in blankets of past sorrows. It was a heavy burden, and always has been, but sharing made the load a little lighter. At some point, he realized Helen was stressed by that silence, frightened that he was still mad at her, and he gave her palm a reassuring squeeze.\n\n\"We used to talk, my mom and me,\" Kevin said. \"Every day. Just talk about everything. I really miss her.\"\n\n\"What...? How did it happen?\"\n\n\"Just one of those things. Nobody's fault...\" he paused and touched the back of his neck. \"Nobody's fault. There was ice on the road, and she lost control of the car. My little brother died immediately. She died in the hospital. Everything just went to shit after that.\"\n\nHelen felt like hugging him, but she wasn't sure if he would like the gesture. She touched his face tenderly instead. \"I'm so sorry, Kevin.\"\n\n\"Hey, I made you go out with me because you never have any fun. I didn't mean to be so depressing.\"\n\n\"Talking about real stuff that's... I only ever talk about work. Thanks for sharing.\"\n\n\"I have an idea that'll cheer you up. Ice cream.\"\n\n\"Ice cream?\"\n\n\"I'm on a tight budget, but I still have enough left of my monthly fun budget to squeeze in two ice-creams.\"\n\n\"I can take us to a nice restaurant if you like. My budget isn't tight.\"\n\n\"Another thing my mom used to say, is that the guy should always pay.\"\n\n\"It's not a date.\"\n\n\"Still.\"\n\n\"Diana buys you clothes all the time,\" Helen said.\n\nKevin flinched. \"First, ouch. Second, that was under the belt. Third, I never asked her to, and I always ask her to stop. Last, when she buys me stuff, it doesn't really bother me that much, because frankly, I don't like your little sister that much.\"\n\nHelen blushed. The direct implication was that he liked her which felt nice, which led to her feeling like a Judas. \"No comment, Kevin.\"\n\n\"About me not liking Diana?\"\n\n\"Yep.\"\n\n\"But it didn't come as a complete shock, didn't it?\"\n\n\"No comment.\"\n\n\"Look, Helen, me and Diana, it's a complicated issue. She's your sister. She's my... Hell, I don't even know. Let's just, you know, declare that topic taboo.\"\n\n\"Pretend it's not there?\"\n\n\"Something like that. Regarding me paying, there's very little in my life right now that I feel proud about.\"\n\n\"And we're back to Diana?\"\n\n\"Please let me keep a little dignity. I'm buying.\"",
        "\"Okay, but no ice-cream. Just looking at ice-cream makes my butt bigger- Hey, don't be a creep,\" she said as Kevin checked her butt, but she was sure glad that he did.\n\n-----\n\nHelen licked her ice cream, closed her eye and tilted her head back. \"Worth every calorie,\" she said.\n\n\"Plus, it's good for you,\" Kevin said. \"I've read an article that researchers in NYU proved that an ice-cream a day makes a man healthy, wealthy and wise.\"\n\n\"That and smoking cigars.\"\n\n\"You read it too?\" He tried to steal a lick off her cone, but she raised it out of reach.\n\n\"Mine, all mine.\"\n\nKevin's mobile hummed. \"Hey, it's my former landlord.\"\n\n\"Mrs. Lewinski? Hi. Long time. How are you doing?\n\n\"Thanks. I miss you too.\n\n\"That old thing? I told you a thousand times-\"\n\n\"Yeah, I'll come over. You just need the pipes cleaned. I'll drop by first thing tomorrow morning, before my first lecture.\"\n\n\"Tonight? I can't. I'm hanging out with a friend. Helen Brion. Yeah, that Helen Brion.\"\n\n\"I'll tell her.\"\n\n\"Oh, come on, Mrs. Lewinski. I'm sure that-\"\n\n\"I'll... Okay, I'm actually not far from your place. Yeah. See you soon.\" He ended the call. \"You got a 'Best Wishes' from Mrs. Lewinski, and we need to make a little detour,\" he said.\n\n\"To Mrs. Lewinski's house? I can take a cab from here back home.\"\n\n\"She'll be happy to see you.\"\n\n\"Are you sure?\" Helen blushed.\n\n\"Why are you so weird about it?\"\n\n\"Well, you said...\"\n\n\"What?\" Kevin said.\n\n\"That she needs her pipes cleaned.\"\n\nKevin smacked his palm against his forehead. \"Jesus, you're still thinking that my seventy-year-old former landlord and I are dancing the horizontal mambo. You actually believe that she was my sugar momma, don't you? Her washing machine is broken, Helen.\"\n\n\"Oh.\"\n\n\"And stop thinking all those nasty thoughts about me. That's hardly fair, and you shouldn't treat someone who cares about you like that, okay?\"\n\n\"Sorry. Really.\"\n\n\"Hmph...\"\n\n\"Why do you need to fix her washing machine?\"\n\nKevin shrugged. \"I don't need to; I want to. She's a friend.\"\n\nMrs. Lewinski's home was an old house in an avenue of ancient houses facing the park. It had the charm of the country, but apparently, the insides had all the benefits of a modern penthouse. A gray stone wall confined a rose garden, and a rusty looking greenhouse, from which the sounds of singing came out.\n\n\"Who's singing?\" Helen said.\n\n\"There's a band who call themselves 'the Anarchist Dream', and Mrs. Lewinski let them use her greenhouse for rehearsals.\"\n\n\"Never heard of them.\"\n\n\"They're very big in... I wanted to say, in the computer science faculty, but that would be a lie. They do protest songs mainly. Billy Bragg, Bob Dylan, that sort of thing. But I've never heard this girl. She must be new. She rocks.\"\n\nHelen had to agree. The invisible singer had a clear contralto, and she gave a perfect acapella performance of Hozier's 'Take me to church.\n\nKevin banged on the house's door. \"She's half deaf, and the other half can't hear shit,\" he said.\n\n\"I think she sometimes pretends she can't hear when she doesn't want people to argue with her,\" Helen said.\n\nMrs. Lewinski, Kevin's former landlord, gave Kevin a warm hug when she saw him and a light peck on the cheek for Helen. A tiny Futanari, she was shorter than Kevin, was in her seventies, grey-haired and dark-eyed. Mrs. Lewinski had a gentle expression and misleading frailness behind a mesh of wrinkles. Deceptive, because when Helen negotiated the contract to buy her apartments, she met a sharp mind with the stubbornness of a wild boar.\n\nKevin entered the house to see what could be done with the misbehaving washing machine, while Mrs. Lewinski served coffee and cakes on the porch for Helen and herself.\n\n\"He is just the sweetest soul,\" Mrs. Lewinski said.\n\n\"Who? Kevin?\" Helen took a sip of the coffee. It was too strong to her taste. \"Yeah, he's something else.\"\n\n\"You two...?\" The old futanari smiled.\n\n\"Oh, no,\" Helen blushed. \"We're just friends, hanging out together.\"\n\n\"He's a real gem. I should have charged you double for the apartment just because it came along with him.\"\n\n\"Yeah, he's great. A little late on the rent, but still, he's amazing.\"\n\n\"His stupid dad's fault, not the kid's fault.\"\n\n\"His father's fault?\"\n\n\"The old man got into some debt, and he thinks his son should pay it every month.\" Mrs. Lewinski grunted as she dragged two chairs for her and Helen to sit on. She nodded her thanks when Helen took them from her hands. \"Don't tell Kevin, but I called his father once, and asked how come he thinks it's fine to drop such a heavy burden on the shoulders of his twenty-year-old kid.\"\n\n\"What did his father say to you?\"\n\n\"Not to butt my nose in where it doesn't belong.\"\n\n\"Kevin never said anything,\" Helen said.\n\n\"He's probably not too proud of it. Don't be hard on him, Helen, concerning the rent. I know it's not my business to ask you to be generous with your money, but he's a really good kid. The minute he can, he'll pay you back whatever he owes.\"\n\n\"Yeah.\" Helen blushed. Forcing Kevin to be with her sister was as hard on him as it gets.\n\n\"The drive belt fell off the splutch pulley,\" Kevin came out of the house, wiping his hands on a towel, \"It's all worn out. I've put it back on, and it should be fine for some time. I'll drop by in a couple of days and replace it.\"\n\n\"How much does a belt cost?\" Mrs. Lewinski said.\n\n\"Ten, twenty dollars tops. What I don't get is why you keep that rusty dinosaur?\"\n\n\"So, if something is old and rusty,\" Mrs. Lewinski pointed at herself, \"then you just dump it and buy a new shinier model?\"\n\n\"Definitely!\" Kevin said, and Mrs. Lewinski laughed.\n\n\"I told you he's a gem, Helen. You two should consider being more than just good friends.\"\n\n\"Rachel?\" Kevin said.\n\n\"What? Helen is a real catch, kid. She won't let it show, but she has a good heart, not to mention a dynamite body.\"\n\n\"Rachel, please behave,\" Kevin said.\n\n\"Bubeleh, I had a lifetime of behaving. I've reached a point in life when I can say whatever the fuck I want. Hey Mike,\" she hollered at a heavyset young man coming out of the greenhouse. \"What the fuck did I tell you about trampling my garden like a hog?\"\n\n\"Sorry, Mrs. L., won't happen again!\" The guy jumped clumsily back to the paved trail. Mike had the pale complexion of someone who spent too much time indoors, he had black, not so clean looking dreadlocks reaching almost to his ass, and he carried an acoustic guitar. \"Kevin, bro, what's good?\"\n\n\"Nothing much. Who's your new singer?\"\n\n\"Her? She's the bomb!\" Mike said.\n\nThe rest of the band came out of the greenhouse. A tall guy with a keyboard, a drummer, a girl with a trumpet, and a bassist. They all appeared to be around Kevin's age.\n\n\"Helen, Anarchist Dream, Anarchist Dream, Helen.\" Kevin smiled. \"Helen, this is Brandon on the bass, Noah on the keyboard, Jack, the drummer, and Grace plays a mean horn. The one with the dreads, Mike, is the self-appointed bandleader, and the most reliable source of weed in the entire university.\"\n\n\"Is this the girlfriend we've been hearing about?\" Grace, a brunette with a crooked smile and puffy cheeks, said.\n\n\"No way,\" Mike said. \"Not in a bazillion years.\"\n\n\"What if she is?\" Kevin said.\n\n\"Swank, dude! She's way prettier than you. You could do a lot worse.\"\n\n\"Fuck off.\"\n\n\"Fuck off next Wednesday, Kev, and I mean that with love.\"\n\n\"I'm not his girlfriend. I'm single.\" Helen got a kick off Mike calling her pretty, enough to like him for the moment. \"Did you hear that, Kevin? He thinks I'm pretty.\"\n\n\"Who doesn't?\" Mike said. \"I totally dig the sexy pirate vibe, by the way.\"\n\n\"It's not a fashion statement, you dipwad,\" Kevin said. \"She served with the marines, and she was injured in Iraq. Got a Bronze Star to show for it.\"\n\n\"Wicked,\" Mike went for a fist bump, and Helen complied because he called her pretty. \"That's exactly what this band is all about. We aim to expose the lies of the bosses who send the working man to die in their wars.\"\n\n\"Slow down, Trotsky, she's way out of your league,\" Mrs. Lewinski smirked. \"Little working man my ass.\"\n\n\"Yeah, Mike, for someone who never worked a day in his life, what do you know-?\" Kevin stopped in mid-sentence because at that moment the band's new singer came out of the greenhouse and he had a panic attack. She was a tall girl with her blonde hair in a pixie cut, her extra-long legs barely covered by a mini skirt.\n\n\"Hey, Kev.\" Ginger smiled, but her smile was visibly strained.\n\n\"Hi,\" Kevin choked.\n\n\"Why is Kevin getting a facial erection?\" Mike looked at Kevin and then at Ginger, back and forth. \"What is happening? Someone please tell me. How come I'm always the last to know any gossip?\"\n\n\"I...I need to talk to Ginger in private,\" Kevin stuttered.\n\n\"Ooooh,\" Mike and Mrs. Lewinski said together, and everyone laughed except for the two who were the butt of the joke.\n\nGinger nodded and motioned him to follow her into the greenhouse.\n\n\"Hey,\" he said when they were out of earshot. \"I didn't know you were part of Mike's band, or that you have such an amazing voice.\"\n\nShe scanned his face before answering. Her eyes weren't exactly cold, but there was a wall between them that wasn't there before. \"Are you sure you wanna talk to me, Kevin?\"\n\n\"What do you mean?\"\n\n\"Because the last message from you said that someone will slice my dick off and use it as a rope to hang me if I ever go near you again.\"\n\nHe gave a bitter laugh. \"Diana saw your happy birthday message and freaked out.\"\n\n\"I figured it wasn't you.\"\n\n\"I'm sorry. I wanted to call and apologize, but Diana wiped out every trace of you from the mobile. I didn't even know what faculty you're in to search you up today. Are you mad?\"\n\n\"Shaken. I'm not used to getting death threats.\"\n\n\"Diana is all bark.\" He looked around for a place to sit, noting sadly that the little fish-pool Mrs. Lewinski paid him to assemble in the greenhouse was dry. Mrs. Lewinski probably forgot to take care of it. \"Diana's not a gangster like she would make you believe. But I understand if you'd like me to keep my distance.\"\n\n\"I think you're in a bad relationship, Kevin.\"\n\n\"Tell me about it.\"\n\n\"Maybe you should consider keeping your distance from her?\"\n\n\"Like I said, it's complicated.\"\n\n\"Sometimes we think things are when they're not,\" she leaned and kissed him tenderly. Her lips were warm and soft on his, and the kiss ended far quicker than he wished. \"I'll add my number to one of your co-worker's profiles, and I won't send any more messages. But the offer still stands.\"\n\nThey went back to the porch. Mrs. Lewinski made the band carry chairs and a small table for everyone to sit around. She also brought out cold lemonade and homemade cookies. Kevin noted that Helen felt comfortable enough not to take the backseat. She joked with Mike and answered Grace's inquiries about her service in Iraq. It felt great to see her crawling out of her shell. Somewhere, wherever she was, he knew his mother was looking down at him and smiling.\n\n\"Roll me a J, Mike.\" Mrs. Lewinski suddenly said.\n\n\"A what?\"\n\n\"Grass, what's it called nowadays? Tea, a roach, a J? Hotboxing?\"\n\n\"I don't follow.\" Mike totally did, but Mrs. Lewinski was seventy-something, and Mike wasn't used to fuddy-duddy grannies asking him to roll them one, even if she was a loudmouth granny like Mrs. Lewinski. \"What's hotboxing?\"\n\n\"Don't play cute with me, Mikey. I've been around the block, and I know what you have in that guitar case.\"\n\nMike ruffled his dreadlocks, a perplexed look on his face. \"It's hardcore stuff, Mrs. L.\"\n\n\"Bubeleh, I was doing psychedelics in the sixties; back when dreadlocks were a black people thing, kapisch?\"\n\nMike gave Kevin a desperate 'help me' look, but Kevin shrugged. \"Okay,\" he rolled one joint and gave the old lady. \"Go slow.\"\n\n\"Yay, freebies.\" Ginger clapped.\n\n\"Fuck no,\" Mike said.\n\n\"What's going on, Trotsky?\" Mrs. Lewinski took a deep hit like she was born with a joint. \"How come when it's your money, you're going capitalist all of a sudden?\"\n\n\"It's a mystery. Like the female orgasm or why bedwetters go into politics. No one knows.\" Mike rolled a joint for Ginger.\n\n\"I want one too,\" Helen said and immediately blushed.\n\nMike gave her a deep bow. He took care to roll her a perfect joint, and he lit it up for her.\n\nHelen gave a gracious smile, then took a hit and coughed.\n\n\"Slow down, tiger,\" Kevin patted her back a couple of times.\n\n\"Just a little out of practice.\" She took a slower hit, filling her lungs, waiting for a few seconds before exhaling. \"Better?\"\n\n\"Like a pro.\"\n\n\"That's what I call living.\" Mrs. Lewinski sat down and lifted her legs on the small table. \"Old school vibes and sexual harmony. What I'm missing now is good jamming like we used to do when that son-of-a-bitch Nixon was in the Whitehouse. Kevin, play something nice.\"\n\n\"Sure.\" Kevin pulled out Mike's guitar. \"I'm a little rusty, so don't judge.\" He gave the strings an experimental caress, then rose, bowed, and sat himself on the porch's rail. \"My next song is by an awesome dude called Colin Hay from Down Under, and it's dedicated to a very special girl.\"\n\n\"Let me guess,\" Mike lit a joint for himself, took a hit and passed it around. \"Her name is Ginger.\"\n\n\"Her name is Valkyrie, actually,\" Kevin said. \"She's one of them beautiful souls the universe chucks your way from time to time. And if you're just smart enough, you might notice how beautiful they are, even if they work hard at hiding it.\"\n\n\"Huh?\" Mike said.\n\nHelen took a slow hit and smiled at him. Kevin started playing. Like his cooking, his guitar playing skills were superb. Kevin didn't like doing things halfway.\n\n\"And you say, be still my love; Open up your heart, Let the light shine in.\n\nBut don't you understand, I already have a plan, I'm waiting for my real life to begin.\" \n\nHelen looked around. Hers was a world of million-dollar contracts, fast instincts, and hard competition. You were expected to walk on corpses from time to time. Kevin's world was the kind that when a friend called because their washing machine was broken, you dropped by and fixed it. She wanted a world relocation.\n\n\"When I awoke today, suddenly nothing happened; But in my dreams, I slew the dragon.\n\nAnd down this beaten path, up this cobbled lane, I'm walking in my old footsteps, once again.\"\n\nThe song wasn't just for her, it was about her, and even though the words were sad they filled her with wonder. She tried to remember the last time she felt like this and couldn't. Excited, maybe even a little, reckless, and there was something else; happiness. A warm buzz that begins in the stomach and envelopes everything. Feeling content at nothing in particular, just about being.\n\n\"And you say, just be here now, forget about the past; your mask is wearing thin.\n\nJust let me throw one more dice, I know that I can win; I'm waiting for my real life to begin.\"\n\nHelen's mask was wearing thinner with every passing minute. Maybe it was the weed, perhaps it was the easy company, and a lot of it was probably the young man that used to live downstairs, who now lived in her house and was fast taking a permanent residence in her heart. She gave a solemn oath to stop walking in her old footsteps, and to never again wait for her real life to begin.\n\n----\n\n\"Fuck, no! Did they just kill Eddard Stark?\" Kevin stared at the screen, mouth agape. \"Fuck no! Wow... I didn't see that coming.\"\n\nHelen wore that smug little smile, that people who read the Game of Thrones books have when they watch people who haven't, tumble with one of the show's first great upsets.\n\n\"He was my favorite coolest dude. Who are they gonna kill next, Khaleesi?\"\n\n\"Her name is not Khaleesi, it's .\"\n\n\"I don't wanna watch your stupid show no more,\" Kevin said.\n\n\"Okay. Should I play the next episode?\"\n\n\"...Sure.\"\n\n\"Mwahaha!\" She rubbed her palms. \"The power of Game of Thrones.\"\n\nThey were taking it easy on the living room couch, the end of a hard day for both, and munching on a Bananas Foster. Kevin did the cooking and Helen did the complaining that she'd added five pounds since Kevin came to live in their house. She managed to convince Kevin that watching good TV shows was sometimes as good as going to the movies, especially if it was in the Brion Penthouse, with its 75-inch flat TV and a sound system that could put any modern theatre to shame. She also introduced him to HBO, particularly Games of Thrones, with its court intrigues, dragons, ten boobs an hour, and ice zombies. Watching TV with a friend was a new experience for her, and Kevin's Game of Thrones virginity added a refreshing perspective to the experience.\n\n\"Actually, don't play another episode. I've got to study.\" Kevin fired up his ancient laptop. \"I have an assignment due next week.\"\n\n\"There's a whole seven days until next week. Plus, the next episode is even more extreme.\"\n\n\"Helen, you're dragging my grades down. My mom used to warn me about girls like you.\"\n\n\"Mrs. Lewinski says I'm a catch.\"\n\n\"You're a slippery slope, that's what you are. First, it's another episode of Game of Thrones, next you're selling your body to the other hobos sharing your cardboard box to support your meth addiction. No episode. Study.\"\n\n\"Total bum sauce, Kev.\"\n\n\"Yeah, and stop quoting Mike. He's not cool, he's just childish.\"\n\n\"Sure thing, mom.\" Helen fired up her own laptop. \"If you're studying, I'm guessing I'm working. Let's see. 'Cushman &amp; Wakefield 2017 first quarter review of east side survey by the numbers.' Fun. Fun. Fun.\" She gave a dramatic sigh.\n\n\"Emotional blackmail doesn't work here no more, Helen. It moved to Nevada.\"\n\n\"Say what?\"\n\n\"Sigh a little louder.\"\n\n\"Oh, you saw through that? Damn you, you're so perceptive. Foiled again.\" She sighed deeply.\n\n\"Grrrr! Compensatory Caf\u00e9 au lait Louisiana style?\"\n\n\"Yes, please.\" Helen gave him an innocent smile, stretched her tall body on the couch and kicked him off the couch. \"Just remember it's scalded milk not boiling milk. And maybe a little ice-cream on the side. But just a pinch, okay?\"\n\n\"Just a pinch, okay?\" He imitated her voice and Helen laughed.\n\nEven working when Kevin was in the room was a different experience than she was used to. It was so good that she almost completely stopped burning the candle at both ends. She started coming home early in hope of finding him there. If Kevin noticed her change of pattern he didn't say anything, for which she was grateful. Tonight, Diana worked unexpectedly late, and that had its own merit. There was always a tension when she was around, even if she never said anything about Helen and Kevin's movie date nights. Plus, if she wasn't at home, she couldn't drag Kevin away to the bedroom.\n\nKevin was in the kitchen, warming the milk, when his phone rang.\n\n\"Hello?\" he said.\n\n\"Hi, angel,\" the voice had the slight accent that reminded him of a faraway land where women wore Burkas and Hijabs. It also made his heart beat much faster.\n\n\"Hey, Nadine. How you been?\"\n\n\"Missing you. A lot.\"\n\n\"That's nice,\" he said.\n\n\"Asshole. Can you be less enthusiastic? A girl says she misses you. The least you can do is say that you miss her right back.\"\n\n\"I do, Nadine. I... I miss you a lot.\"\n\n\"Hmmm... Try harder.\"\n\n\"That night, I can't stop thinking about it. I never had anything like it before.\"\n\n\"Or after.\"\n\nHe laughed. \"How did you get my number?\"\n\n\"I have my mysterious ways.\"\n\n\"Like God?\"\n\n\"I took it off Diana's phone when she was busy doing...you know... So if you want me that much, then why don't you come over again? I'll make you feel even better. We'll make it last longer. I want to spend the night with you, Kevin, and wake up with you in my arms.\"",
        "\"Helen...\"\n\n\"It's Nadine.\"\n\n\"What?\"\n\n\"You said Helen.\"\n\n\"Did I?\"\n\n\"I said I wanted to wake up with you in my arms and you called me Helen. Freudian slip much?\"\n\nEven though he was on the phone, Kevin blushed. \"I'm a... I really want that too. Believe me, I fantasised about us more than once, Nadine.\"\n\n\"Iman asks about you every day. She wants me to take her to see you. You left an impression, Kevin.\"\n\n\"Give her a kiss for me.\"\n\n\"Why don't you come over and give it to her yourself?\"\n\n\"But you're a... What you do for a living, that's not how I was brought up to be.\"\n\n\"Come on.\"\n\n\"You're trafficking in humans.\"\n\n\"Nobody is forcing these boys to work for us. We pay well.\"\n\n\"Yeah, I bet those young Chinese boys grew up dreaming about being prostitutes.\"\n\n\"Need and supply, Kevin. Grow up. That's how the world works.\"\n\n\"Not my world. I... Hey, wait a minute. Last time we went to your place Diana's mobile was broken. I remember specifically, because she threw it at me in one of her tantrums, and it hit the wall. She made me take it to the lab. She didn't have her mobile then, she had a backup mobile that had no contacts in it.\"\n\n\"So?\"\n\n\"So, you didn't copy my number back then.\"\n\n\"Does it matter? Look-\"\n\n\"She's with you right now, isn't she?\"\n\n\"What do you want me to say, Kevin?\"\n\nKevin blushed again, this time due to anger. \"The truth? She said she had to work late unexpectedly, the little liar. But she went to your place?\"\n\n\"And imagine my disappointment when she didn't bring you along.\"\n\n\"She's not with you, she's with those two Chinese boys, right?\"\n\n\"Forget about Diana.\"\n\n\"Stop pretending this has nothing to do with you, Nadine.\" Kevin raised his voice. \"You know what I hate the most about Diana? Aside for her being a selfish lying cheat? That she treats me like I'm an idiot, which is exactly what you are doing right now.\"\n\n\"I don't think you're an idiot. Quite the contrary.\"\n\n\"Just na\u00efve as fuck. Little Kevin will rush into your arms and you will spend the night together. How romantic. All this time his girlfriend, who you fucking hate, will bang the boys from your escort service. What's going on, Nadine?\"\n\n\"What do you mean?\"\n\n\"Why is she really there? What do you need her for? She doesn't have any money,\" He tried to control his voice.\n\n\"Kevin... It's not what you think.\"\n\n\"Says the woman who works in extortion. You know, I drove all the way to your place two days ago, Nadine.\"\n\n\"What?\"\n\n\"Yeah. I Argued with myself for like sixty minutes outside. I really wanted to knock on your gate, like you wouldn't believe. I had to bang my head against a wall to stop myself from running to you. I'm so glad right now that I didn't break.\"\n\n\"Kevin, I'm sorry that-\"\n\n\"No, don't be. And you're talking to a different Kevin right now. You said I shouldn't change? Well, it happened. Kevin's been growing up lately. The old na\u00efve Kevin is dead. When you feel like you can treat me like I'm an adult and tell me the truth, please call me, Nadine. Until then, have a nice life.\"\n\nKevin hung up.\n\nHe almost called her right back to apologize, then he saw her number flash on the screen and almost answered. The night they spent together changed him in more ways than he was willing to admit. The memory of her warm body was engraved on his deepest desires and several of his wet dreams. Even hearing her voice was enough to ignite his passion. He was confident that had she been here right now, they would be in bed already. But pretending she wasn't a criminal who worked at exploiting people? And what the hell was her plan for Diana?\n\n\"Hey, you're boiling the milk,\" Helen's smiling face appeared at the kitchen's door.\n\nHe poured the milk into a glass and blew on it. \"There. All good.\"\n\n\"And the base should be drip brewed not espresso.\"\n\n\"Says who?\"\n\n\"Mr. Google, Kevin. It knows everything.\"\n\nHe toyed with the option of coming clean and asking for her help. Then he thought it wasn't the fair option. Despite the fact that on paper Helen had every leverage on Diana, she was helpless when it came to her little sister. He'll gain nothing other than causing her needless heartache.\n\n\"Eh, google, shmoogle.\" Kevin imitated Mrs. Lewinski's voice and body language. \"This whole Internet gig is just a passing fad. I've seen thousands of them come and go in my time.\"\n\nHelen bit her lip to stop herself from laughing.\n\n\"Not the laugh,\" Kevin said. \"Just not the laugh, okay?\"\n\nShe looked up, looked down, pinched herself, but then it burst like a tsunami. Her rolling laughter was super funny. A quiet wave of soft gasps followed by a sudden fog horn. Kevin started laughing as well. When Helen began one of those avalanches, you just had to join.\n\nShe smiled nowadays, a lot more than she used to, and he didn't feel like changing that. He'll need to solve his problems with Diana on his own.\n\n----\n\nDiana's lithe silhouette shuffled into the room at four thirty in the morning. Kevin was a light sleeper, and when she kicked off her high boots and turned on the light, he woke up.\n\n\"Clients were shopping for clothes this late?\" Kevin yawned. \"Wow.\"\n\n\"Go to sleep, Baby Butt, I didn't mean to wake you.\"\n\n\"So considerate. People always ask me to name three things that you love most about Diana. And I say, consideration, consideration, and consideration. She's always so considerate.\"\n\n\"I'm tired, Baby Butt.\" Diana yawned. \"Do you mind waiting with the stupid till tomorrow?\"\n\n\"Sure.\"\n\n\"Hmmm... So sweet.\" She leaned to kiss him, but he pushed her away.\n\n\"Don't. You reek of alcohol and sex.\"\n\n\"Sex?\"\n\n\"The sex you had with those Chinese boys at Nadine's place.\"\n\n\"What?\"\n\n\"What?\" Kevin imitated her.\n\n\"Don't be stupid.\"\n\n\"I know you fucked them the last time we were there. I saw you. And I know you didn't work late tonight; you went to Nadine's.\"\n\nDiana stood above him, blinking, and placed her hands on her hips. \"Bullshit! I worked late, then went for a drink with the girls.\"\n\n\"So it's okay now?\"\n\n\"What?\"\n\n\"To sleep with other people and then lie about it. We're at that stage in our relationship?\"\n\n\"Who do you want to sleep with, Kevin?\"\n\n\"Do you even care?\"\n\n\"Ginger?\" She said in a quiet voice. \"You want to sleep with that whore?\"\n\n\"I don't want to be your boyfriend no more, Diana.\"\n\nThe slap she gave him rang around the room and made his head spin. He tasted blood in his mouth and touched his cheek that was beginning to swell. Her nails plowed two trails of blood.\n\nShe stared at him with horror. \"I'm... I'm so sorry.\"\n\nKevin shot out of bed. She tried to grab him but was too drunk and confused, and he rolled under her hands quickly.\n\n\"Kevin, stop! I'm sorry. I didn't mean to.\"\n\nWearing shorts and a white T-shirt, he ran outside the room and outside the apartment. Her shouts followed him all the way into the street.\n\n----\n\nA WEEK LATER; MIKE'S ROOM, IN THE UNIVERSITY DORMS\n\nYou could set a Rolex according to Samantha's dick. Mike's girlfriend woke up every morning at six-thirty sharp with a boner. No exceptions. From his mattress on the floor, Kevin saw her nudging Mike's shoulder.\n\n\"What?\" Kevin heard Mike's sleepy voice.\n\n\"Turn over,\" Samantha whispered.\n\n\"Why?\"\n\n\"Three guesses.\"\n\n\"Oh.\" Kevin saw Mike turn on his side and snuggle his back to her. Samantha, a plump brunette, frantically messed with Mike's body under the blanket, then threw something behind her back. Mike's blue underwear dropped on the floor near Kevin's head. Samantha, who realized her mistake, turned, and Kevin just managed to close his eyes, pretending to be asleep.\n\nNext came the frantic movements under the blanket, and Mike's sharp intake as she speared him. Then the blanket started rising with a slow wave-like ripple accompanied by Samantha's heavy breathing. Her rounded ass set a slow rhythm, and the bed started making creaking sounds. Morning exercise. Kevin felt himself stiffen.\n\nThe blanket was pulled when Samantha overdid one thrust. She pulled it back on but didn't do a thorough job and now half of her plump ass was left on display, jiggling and rippling as she moved in and out of Mike's body.\n\nSamantha leaned and kissed Mike's neck.\n\nKevin felt it was enough intrusion on his friend's sex life for one morning and he slowly turned his back to them. It meant he was facing the other bed.\n\nOn the opposite bed, he could also see rhythmic movements under the blanket. Thomas, Mike's roommate, was probably watching the free porn show and masturbating.\n\nJust great!\n\nKevin turned on his back and closed his eyes, trying to mute Samantha's heavy breathing and the bed's creaking sounds.\n\nA minute went by, and he suddenly heard the tiny fast footsteps of Thomas' dachshund. The little dog sniffed near Kevin's ear, and he felt the wet nose touching his cheek.\n\nThe dog then clip-clopped to the other side of the mattress and started humping Kevin's leg.\n\nOh, for fuck's sake!\n\nThere ain't no rest for the wicked, and it ain't a garden of roses for nice guys either.\n\nHe jumped out of bed and silently exited the room, grabbing his mobile on the way. He sat in the Dorms' corridor on the third floor's rail and surfed the web, passing time. Samantha was just as predictable with her lovemaking as she was with her morning boners. In fifteen minutes she'll finish, and then he can sneak in again and maybe steal another thirty minutes of sleep.\n\nFuck!\n\nHe overstayed his welcome. He knew Mike would never say a word, but a good friend doesn't need to be told. The dorm room was so tiny it felt crowded when two people were inside. Four people, plus a dog...\n\nBut where could he go?\n\nFinancially, his situation hadn't improved. Most of his salary went to his dad, who said it was just a temporary arrangement until his store started making money again. That was seven months ago. Temporary turned out to be a permanent routine. He still couldn't afford to pay rent.\n\nHe could quit his studies, put them on hold, and work two jobs. That would be the same as raising a white flag. He was studying hard so that one day he'd earn enough to not be on the verge of financial disaster all the time.\n\nThere was also the considerable debt he still owed Helen.\n\nHe felt trapped.\n\nHis mobile rang.\n\n\"Hey, good morning, Valkyrie.\"\n\n\"Hi, Kevin.\"\n\nHelen sounded sad, and that made his heart squeeze. \"How's it going?\" He said.\n\n\"Great.\"\n\n\"I...crap...\" Her great sounded like a heartbreaking sigh and Kevin wanted to run over just to give her a hug and see her smile.\n\n\"Yeah, just great. Diana cries all the time. Says you won't answer her calls or messages.\"\n\n\"I asked about you, not about Diana.\"\n\n\"Me?\"\n\n\"You.\"\n\n\"I'm okay, Kevin, I miss you, that's all. It's hard going back to crappy takeaways after...after you.\" She tried laughing, but it wasn't an impressive effort.\n\n\"I miss you too, Helen. I miss our talks.\"\n\n\"Me too.\"\n\n\"Hey, I'm still coming for our Sunday night movie.\"\n\n\"I... I'm really looking forward to that. How are you holding on, Kevin?\"\n\n\"Weighing my options.\"\n\n\"And?\"\n\n\"They're not great. I'm still broke. And I still owe you rent.\"\n\nShe sighed. \"Forget about the stupid debt. We'll figure something out.\"\n\n\"I can't. I'm not like that.\"\n\n\"Let me guess, your mother told you a man should always pay his debts?\"\n\n\"Yeah, actually, she used to say that.\"\n\n\"Jesus, Kevin, can't you give yourself a fucking break just once?\"\n\n\"Helen.\"\n\n\"Please come back home, Kevin.\"\n\n\"What?\"\n\n\"I...\" She went silent on the other side of the line again. Probably shocked at her outburst. Her reactions were always filtered before she met Kevin.\n\n\"I can't go back.\"\n\n\"Isn't there any way that you and Diana could somehow...? I'll... I'll help. Whatever you two need. If you need nights without me being the third wheel? I've been forcing myself on you two lately. Just say so. I'll give you and Diana more space. Just come back home.\"\n\n\"Diana hit me.\"\n\nThere was a stunned silence again. \"Diana did what?\" Helen said in a small voice.\n\n\"She struck me. The swelling lasted for three days. I lost a tooth.\"\n\n\"Why...?\" Helen's voice shook. \"Is she using again?\"\n\n\"I don't know. You sound shocked.\"\n\n\"I am. On the other hand, it's not the first time that she's violent with someone she's dating. She promised me that she'll never... Goddamn.\"\n\n\"I think she was drunk.\"\n\n\"There are lines that can't be crossed, Kevin.\"\n\n\"She didn't mean to.\"\n\n\"Do you know what you sound like right now?\"\n\n\"Me?\"\n\n\"I grew up in West Englewood. Half the women on my block suffered from domestic violence. You sound just like them. Next you'll say it was your fault and that you pissed her off.\"\n\n\"I did piss her off.\"\n\n\"I feel so ashamed right now,\" she said\n\n\"You didn't do nothing, Helen.\"\n\n\"I forced you into this relationship.\"\n\n\"Nothing to be sorry about. It saved me financially, and I wouldn't have met you otherwise.\"\n\n\"What are you going to do?\"\n\n\"Dunno. Maybe I'll come back.\"\n\n\"I really want you to, but now I think that you shouldn't. Oh shit, here she comes.\" Helen hung up.\n\nThere was always the option of crawling back to the Brion Penthouse. Back to Diana with his tail tucked between his legs.\n\n\"Want a cig?\" Thomas came out of the room wearing shorts. He lit himself a cigarette and offered one to Kevin.\n\n\"Seriously? You're going to puff on that now?\" Kevin said.\n\n\"Why not?\"\n\nKevin shrugged. He heard of a post-sex cigarette, but never of a post-masturbation cigarette.\n\nThomas' tiny dachshund came wobbling out of the room, sniffed Kevin's leg and then proceeded to make love to it.\n\n\"I swear, Thomas, I'd never dream of hurting a dumb animal but Bagel is dangerously close to making me cross that line.\"\n\n\"Dumb? He's a pure breed. He cost my dad 1300 dollars. I'll show you.\" Thomas whistled, and the little dog wagged his tail harder, but didn't stop humping Kevin's leg. \"Bagel, sit!\"\n\nThe dachshund stopped, sat, scratched his ear, and then resumed making love to Kevin's leg.\n\n\"Wow, he's a genius, bro,\" Kevin removed the dog gently from his foot. The little dachshund kept humping the air. \"Fucking Stephen Hawking you got there.\"\n\nAnimals were not allowed in the dorms, and Bagel crapped in every corner of the room. Thomas usually kept him outside, but since Kevin came to live in the place last week, he took him in, knowing Mike wouldn't be able to complain about breaching rules.\n\nJust another reason for Kevin to evacuate the room ASAP.\n\nHis phone rang again.\n\n\"Jack?\" He said.\n\n\"Try again. I've added my number to Jack's contact to avoid detection.\"\n\n\"Hmm... Perfect contralto. Adele? Is that you? Hello from the other side?\"\n\nGinger laughed. \"Kiss-ass.\"\n\n\"No, like really. You have Adele's perfect contralto. You could blow Simon Cowell's tits off if you try the X-Factor.\"\n\nGinger laughed again. \"I heard from Mike that you broke up with Diana.\"\n\n\"Yeah.\"\n\n\"You didn't call me.\"\n\n\"It's still fresh.\"\n\n\"It's just that there's this party tomorrow evening at the Alpha Pi Alpha sorority building. And I would love it if you would come with me, because I'll be the envy of every girl there.\"\n\nMaybe he had options he hadn't even thought about.\n\n\"Alpha Pi Alpha? Aren't they a little...you know...snobbish?\"\n\n----\n\nThere weren't futanari only sororities on any US campus, at least on paper. There used to be, but the Civil Rights Movement put an end to that in the sixties. However, prejudice and habit proved stronger than slackly enforced integration. People being people, with the pernicious nature of xenophobia, encouraged a unified, often tribal reaction of solidarity among futa. You could try, but you couldn't get into the Alpha Pi Alpha sorority unless you had both a penis and a vagina.\n\nA series of articles in the NY Times called 'Discrimination on Campus,' caused universities make flip flops, and bend the rules so that they won't be labeled futaphobic. As a backlash, the Alpha Pi Alpha was the newest, most modern house on campus. It rose like a middle finger, fuck you, amongst the other ancient and in some cases rundown fraternity and sorority houses. It was modeled after the White House, and both the lush gardens outside, and the interior with its chandeliers and wooden floors, spoke of class or tacky ostentation. Kevin couldn't decide which it was.\n\nHe tried to call Ginger, but his battery died the moment he dialed.\n\n\"Fuck.\"\n\nThere were chargers available in the Computer Science Lab; that was a three mile walk. The heat of the day had diminished, but the air was thick, sultry with honeysuckle. He'd be drenched by the time he got there. He decided to sit in the shade and wait for a passing-by sorority sister that would be kind enough to take him to Ginger's room. One sorority member was sitting cross-legged on the stairs leading to the Alpha Pi Alpha building, but he couldn't ask her anything.\n\nBeing a futanari didn't mean you automatically qualified to be an Alpha Pi Alpha, not by a long shot. You also had to be somebody. A senator's daughter, a super athlete or super-rich.\n\nThe girl sitting cross-legged on the stairs was no different. Kevin knew her by name. Everyone did. Sharon Richardson aka 'I like it natural' Sharon, which was the theme in a beer commercial that she starred in. She was a law student, but she wasn't famous for her mediocre academic accomplishments. She modeled. Nothing local. Her perfect symmetric face had been plastered on popular magazines, like Grazia and Dazed. Catlike blue eyes, flawless skin, luscious lips and long silky platinum locks were her trademark. She looked more Photoshopped than real, and was the fantasy of every boy on campus, both futa lover and one hundred percent hetero.\n\nA mortal didn't talk with a goddess, and the Kevins of this world didn't speak with Sharon Richardson, so he couldn't ask her. He sat on the pedestal of a statue of Athena posed to welcome people into the garden and waited for another girl to stroll by.\n\nSharon Richardson noticed him and gave him an appraising look. It made him fidget.\n\n\"You're Kevin, right?\" She suddenly said.\n\nKevin checked behind him. He was sure that another Kevin was standing there.\n\n\"Yeah, you are Kevin.\"\n\n\"You're talking to me?\"\n\n\"No, to the statue.\"\n\nHas the world gone mad? \"I'm... I'm looking for Ginger. Can I go inside? I'm not up to date on Alpha Pi Alpha ground rules.\"\n\n\"Boys are allowed until twelve PM.\"\n\nKevin looked at his digital watch. \"The big hand is on six, the little hand points to six. Lets' see... It's six thirty. I'm in the clear. Dope!\"\n\nShe gave him an appraising scan again. Kevin tried hard not to look at her bosom, which wasn't easy. She had a famous viral video with Kate Upton, both wearing sexy lingerie, and Sharon gave Kate a fair fight when it came to boob size. It didn't help that she wore a yellow tank top and no bra, either; it looked like the strings holding the ladies were ready to snap.\n\n\"I'm looking for Ginger,\" he tried again.\n\n\"You're here for the party?\"\n\n\"You got free beer?\"\n\n\"Sure.\"\n\n\"Count me in.\"\n\nShe laughed and then stood up, glided over to him, as a Goddess would, and smelled him. Not casually, or even trying to be inconspicuous about it. She leaned over, almost touching the crevice between his neck and shoulder, and inhaled deeply. Awkward wasn't beginning to describe how it felt. Maybe goddesses didn't need to abide by human conventions?\n\n\"Too much aftershave?\" he asked.\n\n\"Huh?\"\n\nHe smelled his hand and gave his shoulder a sniff.\n\n\"I'll take you inside.\" She didn't ask, she commanded, taking his hand and dragging him after her.\n\n\"Wait? Are you taking me to Ginger?\"\n\n\"She's not here yet. I'll give you a tour of the place.\"\n\nShe pulled him past the entrance, and he had little choice but to follow her long steps. Like most of her kind, she was much stronger than him, and regardless, Kevin was sure that if Sharon Richardson commanded, then mortals like him should obey. For a tour guide, she wasn't too keen about displaying the sites, explaining, or talking at all. They went past the foyer into the hall. Several girls were busy decorating it with red balloons, pink ribbons and signs giving didactic hints like 'You miss 100% of the shots you don't take', with a picture of a glass and a lemon slice to remove any doubt.",
        "Everyone looked up when Kevin and Sharon entered, but the tall model pulled him towards the massive wooden stairs before any questions could be asked.\n\nA stringy, unusually tall futanari stopped them in the middle of the stairs. Kevin also knew her by reputation. She was one of the Foster Twins, Kevin had no idea which one. They were part of the university athletic team. Ashley was the college basketball team's captain, with a promising future in the professional league.\n\nThe powerful-looking athlete checked him out. \"This is Kevin, right?\"\n\n\"Is it written on my forehead or...?\"\n\n\"I'm Megan,\" she smiled and offered her hand. She was the twin who set a national collegiate record for the 1500-meter run. She wasn't pretty, but her smile was genuine and captivating. Kevin felt drawn to that smile.\n\n\"Ginger showed us a video of you on her Instagram,\" Megan said.\n\n\"Huh?\"\n\n\"Playing guitar...?\"\n\n\"Oh.\" He remembered her pointing her smartphone on that evening on Mrs. Lewinski's porch.\n\n\"I know it sounds a bit snobbish, but we don't allow everyone in our parties. We have a standard. That video was your ticket in.\"\n\n\"It sounds a lot snobbish.\"\n\n\"Think of it as a screening net for creeps.\"\n\n\"Either way, I've made it into the cool girls' club. Up top.\"\n\nMegan laughed and high-fived him.\n\n\"Megan, can you go be annoying someplace else?\" Sharon Richardson started pulling Kevin again.\n\n\"Where are you taking him?\" Megan said.\n\n\"I'm giving him a tour.\"\n\n\"Starting the party early?\"\n\n\"Jealous much?\"\n\n\"Of you? Of course. Everyone is jealous of you, Sharon, all the time.\"\n\nThe silver-haired model's face brightened with a smile. Either sarcasm was beyond her, or she just didn't give a fuck.\n\nMegan shook her head. \"Anyway, Kevin, welcome to the Alpha Pi Alpha house.\" She pointed to a big poster being plastered in the hall below. It read, 'Slutz Fest. Welcum!!!'\n\n\"Wow, very poetic,\" Kevin said.\n\n\"It's a tradition.\" Megan rolled her eyes. \"Clever, right?\"\n\n\"And full of class.\"\n\n\"Sorority traditions are sadly hard to change.\"\n\nKevin tried thinking of a smart answer, but Sharon yanked him away. He gave an apologetic nod to Megan who smiled at him.\n\nSharon pulled him upstairs, down a hallway to the last door. The room beyond was a standard university dorm, but it had the best view in the chapter house because it faced the garden. Dominating the room was a canopy bed with pink curtains and pink satin sheets. A massive wardrobe with mirrored doors occupied the other half of the room. Pressed between the wardrobe corner and a beautiful dressing table was a simple bed. A relatively short ashen-haired futanari sat on the mattress and was busy texting on her phone.\n\nShe looked up, \"Hi.\"\n\n\"This is Michelle. She's my roomie. Michelle, Kevin, Kevin, Michelle.\"\n\n\"Hi,\" Kevin said.\n\n\"Michelle was just leaving.\"\n\n\"And bye.\" Michelle jumped out of bed and ran out because Sharon motioned her with her head to make herself scarce.\n\n\"Why did you kick her out?\" Kevin said.\n\n\"Do you want her to watch?\"\n\n\"Watch?\"\n\nSharon Richardson locked the door, leaving the key in the lock.\n\nKevin was not a rookie when it came to confident Futanari with less than honorable intentions. Still, he blushed deeply. \"I thought you were taking me for a tour.\"\n\nThe tall model pulled her ribbon and unfurled her luxurious silver hair, then jumped on the big bed. \"A tour? Okay. This is my room. This is my bed. I'll give you a guided tour of my dick in a second.\"\n\n\"Uh, what?\"\n\n\"Come here,\" she patted her bedsheet.\n\n\"I'm here to meet Ginger.\"\n\nSharon Richardson opened two big beautiful eyes. \"You're kidding, right?\"\n\n\"Can you point me to Ginger's room? I'll just wait for her in there.\"\n\n\"You won't find Ginger's room.\"\n\n\"I'll look awful hard.\"\n\n\"She's not an Alpha Pi Alpha, you daf. She doesn't live here.\"\n\n\"Good for her.\"\n\nSharon pulled her top off as if it was the most natural thing in the world. Kevin blinked. It was a well-known internet fact that those perfect round balloons could cure cancer, bring about world peace, and give you a boner from August to March.\n\n\"I...\"\n\n\"Are you shy?\"\n\n\"I came, um...Ginger...\"\n\nSharon stood up and crossed the distance between them, pinning Kevin against the door. She leaned down and pressed her magnificent chest to his shoulders. \"Damn, I have something big and hard because of you.\" Her lips sought his, but Kevin turned his head away, and she nuzzled his neck. Her hands went to his ass cheeks, and she squeezed them both. \"Do you carry a license to be that sexy?\" Her perfume tickled his nostrils, something woody with a hint of lavender. Her magnificent mounds pressed into both sides of his head.\n\n\"I...Ginger...\"\n\nSharon ground herself against his body, and he could feel her hardness under her jeans. She ran both palms across his stomach and cupped his ass cheeks, squeezing them gently; her hands holding each one comfortably. She then left him standing breathless and returned to the bed. Sharon unzipped her jeans and pulled her cock out. It was hard, and had a weird bend at the top, giving it the look of a jack wrench. The big purple head was heaving slowly.\n\n\"Come here, sweetness, I want you to kiss it.\"\n\n\"Sure.\" Kevin unlocked the door.\n\n\"Where do you think you're going?\"\n\n\"I'm...uh...it's a surprise. Close your eyes.\"\n\n\"Surprise?\"\n\n\"Close your eyes. I'm gonna do something that's gonna blow your mind.\"\n\n\"Okay.\" She smiled happily and closed her eyes.\n\nKevin went out and closed the door.\n\n'What the fuck?'\n\nHe ran down the stairs all the way down, and out of the Alpha Pi Alpha house. He checked behind him, expecting any minute to see a pair of perfect boobs in hot pursuit. Running with your head turned in the wrong direction can be tricky, and Kevin slammed into a tall body and fell on his ass.\n\n\"Shit, oh, I'm so sorry.\"\n\n\"I'm not.\" Megan reached down and helped him up. \"I think this gorgeous thing belongs to you, Ginger.\"\n\nKevin winced from the pain, while Megan appeared unaffected. Ginger stood behind the tall athlete. She wore a red skater dress with lace bodice and crisscrossed back straps.\n\n\"Hi,\" he said. \"You look pretty.\"\n\n\"You look...\" She gave him a warm hug and then kissed him deeply on his lips. Her tongue boldly burrowed and tasted his.\n\n\"Oh...hi.\" He huffed. \"Wow!\"\n\n\"Sorry. Couldn't wait anymore.\"\n\n\"Oh...okay. I totally get you. I'm irresistible. Yep.\"\n\nGinger laughed. \"So, what do you say, Megan?\" Ginger turned to the athlete.\n\nMegan nodded.\n\nAt that moment a fully dressed and very angry Sharon stormed down the stairs.\n\n\"Son of a mother fucking shit cunt asshole!\" Her face was crimson, and splotches of red went down her neck all the way to her magnificent bosom. \"You think you're funny?\"\n\n\"What's wrong?\" Megan said.\n\n\"What's wrong? What's wrong? A surprise, eh?\" She gave Kevin a murderous stare.\n\n\"Well, you look surprised,\" Kevin said.\n\nSharon Richardson showed him her middle finger and stormed off.\n\n\"What was that all about?\" Megan looked pleased.\n\n\"She said she'd give me a tour, but she dragged me to her room, pulled out her genie and wanted me to rub her lamp.\"\n\nMegan laughed. \"Don't you know what a tour means?\"\n\n\"Now I do.\"\n\n\"What did you do to piss her off like that?\"\n\n\"I made a disappearing act.\"\n\n\"Oh my god, Kevin,\" Megan clapped her hands. \"I think that you're the first guy who ever told Sharon Richardson to fuck off. I love you so much right now. Will you marry me?\"\n\n\"Sure! Ginger, it has been nice knowing you, but I feel like Megan and me, we're the real deal.\"\n\nGinger didn't laugh. If anything, she looked pissed.\n\n----\n\n\"Are you trying to fuck with me?\" Ginger's voice was tense.\n\n\"Not straight away. Let's talk a little. Go on a date or two. A little foreplay maybe? Then...\"\n\n\"I'm serious, Kev.\"\n\nThey were sitting on Megan Foster's bed. Megan was kind enough to offer them privacy when Ginger said she needed to talk with Kevin. The walls were decorated with 'animals in the wild' photos. A Herd of elephants under the Kilimanjaro, a lioness sleeping on a rock, and a colorful octopus in the Australian Grand Reef; you would think this was the room of a National Geographic photographer rather than the rooms of two aspiring athletes. The room didn't even smell of sweat, like a jock's den would. It had a vase of daffodils, and the flowers' pleasant aroma made Kevin think of home, and the vast swamps he explored to hunt for tadpoles as a child.\n\n\"I'm serious, Kev. Are you trying to screw me over?\"\n\n\"What did I do?\"\n\n\"Why did you have to piss off Sharon Richardson?\"\n\n\"What was I supposed to do? Give her head?\"\n\n\"Well...\"\n\nKevin stared bug-eyed at her. \"Are you for real, Ginger?\"\n\n\"Well, if you didn't want to you could have just given her an excuse. You didn't have to make her boil like that.\"\n\n\"You weren't there.\"\n\n\"Kevin, I've been trying forever to get into Alpha Pi Alpha. The Bid Day is in two weeks, and Sharon is on the committee.\"\n\n\"So maybe you won't have her vote?\"\n\n\"You think?\"\n\n\"Megan Foster, on the other hand, is totally on our side.\" Kevin smiled and gave an encouraging thumbs-up. \"Her vote is as good as Sharon's.\"\n\nGinger shook her head. \"She's not on the committee.\"\n\n\"I know what. We can dig dirt on Sharon. Like Watergate...minus the deep-throat, cause I didn't even though she wanted me to. We can spread a rumor that her cock is super weird, which isn't so far from the truth, by the way. Shame will lead her to depression, which will lead to eating which will lead to her growing fat and if her balloons get any fatter she'll start floating up like a blimp and wouldn't be able to vote on the Bid Day. Boom!\"\n\n\"You're not funny, Kev.\"\n\nHe laughed. \"A lil' bit.\"\n\n\"It's important to me, even if you don't give a fuck.\"\n\n\"Why?\"\n\n\"Why what?\"\n\n\"Why even bother being in a clique with all these over-privileged spoiled princesses who think they're still in high school and they're the queen of the class?\"\n\n\"I'm studying to be a lawyer, Kevin. Do you have any idea how hard it is to get a decent job in a half-decent firm? It's not where you studied; it's not how high your grades are.\"\n\n\"It's how popular you were on campus?\"\n\n\"It's who your dad knows, Kevin. And my dad is a junior high janitor in Brooklyn.\"\n\n\"I'll go suck her dick right now.\"\n\n\"Now you're a dick,\" she said.\n\n\"Sorry,\" he touched her cheek and kissed her. \"I didn't realize it's so important.\"\n\n\"Sharon Richardson is the daughter of William Richardson, co-founder and president of Richardson and Williams, one of the biggest real-estate firms in this city. I don't give a fuck about her being a model or how she thinks the sun rises from her peachy ass every morning. All I care about is her vote and the fact that if her dad wants to, he can find me a job in a second.\"\n\n\"Oh, she's the daughter of Helen's boss, then.\"\n\n\"Who?\"\n\n\"The tall girl I came with to Mrs. Lewinski's house. Diana's big sister.\"\n\nGinger squinted her eyes. \"Ah, her. I was curious about her. What's the deal with you two?\"\n\n\"Helen? She's a good friend.\"\n\n\"Does she know?\"\n\n\"What?\"\n\n\"That she's a friend.\"\n\n\"What do you mean?\"\n\n\"Because the way she looks at you.\" Ginger closed her hand on his thigh. \"Like a sixteen-year-old high-school girl looks at her first crush.\"\n\n\"What? No! We're good friends.\"\n\nGinger kissed him. \"It's kinda cute that you're so clueless.\" Her lips were warm and soft on his, and he wanted it to last longer, but Ginger pulled back and slapped his ass. \"Come on, let's go party and do some damage control!\"\n\n\"I'm not sucking her dick!\"\n\n----\n\nHelen grabbed her mobile and dialed Kevin's number, but didn't press the call button. She'd called him twice today already, and even though he was happy to get her calls, she felt that calling him a third time would be crossing some invisible line. Helen looked at the office clock and sighed. It was eight thirty, and she was falling back on her old patterns, letting life pass her by. At least the weekend was near, and Kevin promised he'd come over on Sunday for their movie date.\n\n\"Helen, can you come here for a second?\" William, Helen's boss, always sounded tired these days. Nasty rumors were flying around about his wife suing for divorce because she caught him red handed at a hotel with a lover. A futanari no less. True or false, there was something bad going on with her boss.\n\n\"Helen?\"\n\n\"Is it urgent? I've got to finish going over some invoices.\"\n\n\"It's not urgent, but if you could come by my office anytime soon, please do so.\"\n\n\"I meant to drop by anyway,\" she said. \"There's something that I need to show you. \"\n\n\"Okay then. Thirty minutes?\"\n\n\"Sure.\"\n\nShe tried to focus on both the report and the invoices on her desk, but her stomach had been giving her a hard time all day. Painkillers didn't do much, and she was sure she was developing a fever. She went for a drink of cold water. The office was mostly empty but Jessica Bell, the bay area senior analyst, was at the water cooler. Helen turned around before social conventions would force her into small talk. She didn't like Jessica much. She overheard her once complaining over the phone about working late, and how her bitch Futa boss, who has no life of her own, thinks that everyone else should be miserable like her.\n\nHelen tiptoed back to her office but was too late.\n\n\"I'll have the Solomon project CRE report on your desk in an hour, Helen, an hour and a half, tops,\" Jessica said.\n\n\"Oh, is that's why you've stayed so late?\" Helen said.\n\n\"Why else?\" There were black circles under Jessica's eyes.\n\n\"We have the Barrington contract sign up, so I won't get around to it until next week. You can go home.\"\n\n\"Seriously?\" Jessica had a surprised look on her face. \"That's a...you always read the reports on the weekend.\"\n\n\"I can do one weekend without NOI estimates, and you look like you could use a good night's sleep. I'll read it next week.\"\n\n\"Thanks. I'm...thanks,\" Jessica let out a heavy sigh. \"My grandson has been keeping me awake.\"\n\n\"Oh.\" It was Helen turn to look surprised. People never shared personal information with her. \"Is everything okay?\"\n\n\"My daughter lost her scholarship at MIT this year because she wasn't up to par with her grades. I told her that she and her husband need to wait with having children for at least another year, but you know how kids are, they never listen.\"\n\nHelen nodded because she felt it was the correct reaction.\n\n\"We've been trying to figure where we can scrape forty-five K for the tuition fee. I'm currently babysitting my granddaughter three times a week while she works nightshifts. She is a doll, but that's why I have these.\" Jessica circled her finger around her eyes.\n\n\"Why don't you take the employee loan?\" Helen said. \"That's a fifty-grand loan, with a seven years repayment plan unless you leave us, plus it has a zero percent interest rate.\"\n\n\"That program is only open for top management.\"\n\n\"I think I have enough authority to bend the rules just this time. Sarah won't bitch about it as long as she sees my signature on the application form. If she asks, I'll say it's part of the employees' retention policy.\"\n\nJessica stared at her, mouth agape.\n\n\"Should I send the application now?\" Helen said.\n\n\"Seriously? You'll do that for me?\"\n\n\"You're an excellent analyst, Jessica. It's a smart move to make sure you stay with us for seven more years.\" Helen returned to her office, filled the form, printed a copy, and gave it to Jessica. \"There. Money in the bank.\"\n\n\"I don't know what to say?\" The elder woman said, and a second later stunned Helen when she hugged her. \"You just saved my life, Helen.\"\n\n\"Eh...glad I could help.\" Helen heard herself say. \"It's my good deed for the day, and good deeds are rewarded.\" She gave a nervous laugh.\n\n\"Wow, you didn't strike me as the religious type.\"\n\n\"It's not a religious thing. It's just something that a smart woman used to say, and I try...yeah.\"\n\nMaybe she'll call Kevin after all?\n\n---\n\nKevin aimed the ping pong ball and let it fly. It painted a beautiful arc, clicked as it bounced on the table and landed inside a tall cup. The girls around him cheered. The game was called Chandelier Lick, and it was some version of beer pong. A sorority sister read the rules before the game, but they were so stupid, Kevin didn't bother listening.\n\nThe guy playing against him, Kamlesh, a tall Indian looking boy that Kevin knew from the Linux lab, gulped a cup of beer. It was his sixth already. Wobbling, he pulled a note from the jar, but his eyes crossed, and he couldn't read it.\n\nHis partner, a curvy brunette futa, took the note from his hands, read it and screamed. \"Bellybutton!\" She jumped on the table and pulled her top, exposing her belly, then lay down.\n\nThe girls around them started cheering again.\n\n\"Lick!\n\n\"Lick!\n\nLick!\"\n\nKamlesh poured some of the beer on the exposed bellybutton and licked up and down. His tongue traveled on her abs all the way to her tit. The girl exposed one full breast and Kamlesh attached his lips to it like a toddler and started sucking.\n\n\"I think you just won,\" Ginger said. \"That guy is shitfaced.\"\n\n\"What did I win?\"\n\nGinger attacked his lips with a kiss that left him breathless. Her hand traveled down his back, and she capped his ass cheek, squeezing it in his jeans. She inserted her thigh between his, and he felt the pressure of her body as she started grinding against his leg. He felt her hardness under her dress, and it excited him. The power he had to ignite these women was intoxicating. Among them, he wasn't Kevin, the invisible guy that no one cared to notice. It was still mind-boggling, but he was that hot chick that all the guys want to be with.\n\n\"Do you wanna go someplace- ouch!\" someone slapped his butt hard. He turned around and found himself face-to-boobs with Sharon Richardson's fantastic chest.\n\n\"You're a very naughty boy,\" she waved her finger at him.\n\n\"You're a very drunk girl.\"\n\n\"Very, very, naughty,\" she slurred. \"But I love you anyway.\"\n\n\"Same here.\"\n\n\"I love you so very much. Wanna...wanna...wanna go on a tour?\"\n\n\"Maybe next time.\"\n\nShe leaned in and kissed his lips, surprisingly tenderly. Then she kissed his neck. \"I'm gonna take you...I'm gonna...I'm gonna, uh...make you feel tour,\" she said, fell on her ass, and started giggling. Kevin and Ginger helped her up and dragged her to a sofa. Sadly, it was occupied.\n\nA Russian looking guy, naked except for bowtie and a waistcoat, sat upright on the couch. His legs were hiked up, feet apart and flat by his side, while a black futa in a green dress played with his ass. Her fingers exposed the pink interior of his inviting rectum. She spat into the hole, then lifted her skirt, moved her panties to the side and pulled out her cock.\n\nThe guy smiled at her, slowly patted her almost tennis sized balls, then took hold of her cock, and proceeded to jerk her off. The girl sat down, her naked bottom next to Sharon's head. The model didn't notice because she was already in the dream world of double D sized girls.\n\nThe black girl then pushed the guy on his side, and slid between him and the back of the couch, spooning him. She propped herself up on one elbow to get some leverage for her hips. Her cockhead effortlessly slid deep into his waiting hole. A second later she was balls deep.\n\nOn the opposite couch, a redheaded futa had a slim bookish-looking guy draped over her knee. His pants were down to his knees, and his naked shiny bottom was up in the air. The redhead slapped him hard, and a circle of girls around her cheered.\n\n\"Three.\" The girls counted together.\n\nShe smacked him again. His butt began to redden.\n\n\"Four.\"\n\n\"Oh,\" the guy moaned. This time, the blow caused the flesh of his ass cheeks to undulate and quiver. The round globes of flesh were now flushed red from the impact of the spanking.",
        "\"Who's a bad boy?\"\n\n\"Me!\" The guy laughed.\n\nPlacing a hand on each buttock, she spread open his ass crack.\n\n\"No, don't,\" he giggled.\n\nSmack!\n\n\"Five!\"\n\n\"You don't tell mommy what she can or cannot do!\"\n\n\"Yes, mommy.\"\n\nSmack!\n\n\"Six!\"\n\n\"Do you want mommy in your ass like Kisha is inside of Andrei's ass?\" She turned his head to look at the opposite couch. The black girl was taking her time sliding lazily in and out of Andrei's ass. The Russian looking boy looked much more enthused than her. His eyes were closed, and he was bucking back into her, moaning, but the girl stopped him every time. She was taking it slow, savoring every thrust.\n\nKevin thought of Nadine and how she conquered his body. His cock stirred.\n\nSmack!\n\n\"Seven!\"\n\n\"Tell me you want mommy in your ass like Kisha's is inside of Andrei's!\" The redhead pinched the now fiery red buttocks.\n\n\"I want you in my ass.\"\n\nSmack!\n\n\"Eight!\"\n\n\"Who do you want?\"\n\n\"You, mommy!\"\n\nSmack! Smack!\n\n\"That's for being a naughty boy and wanting naughty things!\" She pushed the guy off her lap and made him stand. He had a red stiffy, his little dick wobbling excitedly, almost like a dog wagging his tail.\n\nThe girls around them laughed and cheered.\n\n\"What do we say to mommy?\"\n\n\"Thank you, mommy, for disciplining me.\" The guy pulled up his pants and leaned for a kiss. The redhead turned him around and smacked him one last time on his buttocks. \"Who's next?\" She hollered, then pointed at Kevin. \"You! Hot stuff! Come here you little tease. You've been bad.\"\n\n\"I'm good,\" Kevin raised his hands. \"I'm a good boy.\"\n\n\"You look naughty!\"\n\n\"I always sleep with my hands above the covers.\"\n\n\"Like all the good boys?\"\n\n\"Except when I masturbate.\"\n\n\"Still.\" The redhead bit her lip. \"A little spanking never hurt anyone.\"\n\n\"That sounds suspiciously false.\"\n\n\"Come on, Kev, be a sport,\" Ginger slapped his ass.\n\n\"It' too much like a frat party, only we're the girls getting molested. Hey, wait a minute.\" Kevin scratched his head. \"'Sluts Fest'? We're the sluts, right? The guys? I thought that meant...how stupid of me.\"\n\nGinger laughed. \"Why not? When frat bros do it, they're just studs sowing their oats. When futanari do it, they're sexual predators.\"\n\n\"It's not a 'who's a bigger douchebag' competition, Ginger.\"\n\n\"There were three sexual assaults reported this year in frat houses on this campus alone. How many sexual assaults were reported in futa sororities? \"\n\n\"Thirty?\"\n\n\"None, Kevin.\" she pulled him over, her hands running freely over his body, making him hard.\n\n\"I wanna report one,\" he kissed her lips.\n\n\"You assaulted me.\"\n\n\"Paradise room!\" Someone shouted.\n\n\"What's that?\" Kevin said.\n\n\"The local version of seven minutes in heaven.\" Ginger nibbled his ear.\n\n\"Seven minutes in heaven? Are you thirteen?\"\n\n\"Don't you wanna play?\"\n\nKevin pulled her for a kiss, sending his tongue exploring and acquainting himself with every corner of her mouth.\n\nGinger pulled him along to a large group assembled in a circle. A fishbowl filled with notes sat on a tall stool. The redheaded futa who had just played spanking momma swayed her hips as she vamped and circled the bowl. She made a great show of pulling a note.\n\n\"Andrei.\" She read. \"He's being drilled right now by Kisha, I'll draw another.\"\n\n\"The rules say one draw,\" Megan shouted from a nearby couch.\n\n\"I like a fresh ass.\" The redhead tossed the note and pulled another from the bowl. People booed around her and threw empty cups, as well as some that were not so empty.\n\n\"Okay, okay. Kevin!\" She read the name. \"You, hot stuff!\" She pointed at Kevin. \"Seems like you're getting momma's treatment after all.\"\n\nKevin panicked.\n\n\"What are you trying to pull? Your note says Dan,\" Megan laughed.\n\n\"You're such a party pooper, Megan.\" The redhead got another round of laughter, and stuff thrown in her general direction. \"Dan?\"\n\n\"Right here!\" A tall, striking albino boy with blue eyes raised his hand.\n\n\"Which part of heaven do you want me to give you?\"\n\n\"The hardest part.\"\n\nEveryone laughed as the pair left the party, going upstairs, probably to the girl's room. Megan stepped next to the bowl. \"My turn.\" She pulled a note and her eyes rounded when she read the name. \"What do you know? I got you, Kevin.\" People laughed, but Megan flipped the note and showed everyone that it indeed held Kevin's name.\n\n\"That's not me, I didn't put my name in there,\" Kevin said.\n\n\"We did it for you.\"\n\n\"So considerate.\"\n\n\"Come on, sunshine, which part of heaven do you want me to give you?\"\n\n\"Thanks, but I was already sexually harassed earlier, I'm kinda full.\"\n\n\"Come on,\" Ginger said and surprised him when she pushed him towards Megan.\n\n\"I'm a super athlete.\" Megan winked at him. \"I've got lungs like you wouldn't believe.\"\n\n\"Nice pitch, but I'll pass.\"\n\n\"What are you doing?\" Ginger whispered furiously behind him.\n\n\"Nothing, if that's okay with you. I don't want to make out with her.\"\n\n\"Don't be an asshole.\"\n\n\"Hey, he said he doesn't want to,\" Megan pretended that she was cool, but it was clear that she took some offense. \"Don't push him, Ginger. We're not a frat house; no means no.\"\n\n\"Just a second.\" Ginger pulled Kevin's hand and dragged him behind her. She pulled him through the entrance into the garden, to a secluded corner.\n\n\"What the fuck are you trying to do?\" At first, Kevin thought she pulled him outside because she wanted some piece of heaven herself. However, her face was furiously red. \"Are you trying to fuck this up for me on purpose?\"\n\n\"What?\"\n\n\"I told you I need this. I have one semester left till my diploma. One. This is my last chance to be an Alpha Pi Alpha.\"\n\n\"What do you want me to do?\"\n\n\"Cut the prude act.\"\n\n\"Should I go and make out with her, so you'll be everybody's favorite girl?\"\n\n\"Yes!\"\n\n\"What if she wants me to suck her cock or something, is that cool too?\"\n\n\"What's the big fucking deal?\"\n\nHe stared at her bug-eyed. \"Are you for real, Ginger?\"\n\n\"That's the first time they invited me to one of their parties. I can't fuck up this one-time opportunity.\"\n\n\"If they invited you, then they must think you're Alpha Pi Alpha material, though based on what I've seen tonight I'm not sure that's a compliment.\"\n\nGinger snorted. \"They only invited me because I showed them the video I have with you in it.\"\n\n\"What did you tell them about me?\"\n\n\"That you're not a killjoy.\"\n\nHe shook his head. \"Another slut for the Sluts' Fest? No means yes, yes means anal?\"\n\n\"What's the fucking big deal?\"\n\n\"I thought you liked me, Ginger.\"\n\n\"I do.\" She tried to pull him for a kiss, but he pushed her away.\n\n\"I'm getting mixed signals. You want me, and you want me to suck Megan's and Sharon's dick, so they'll let you into their jet-set sisterhood.\"\n\n\"What's the big deal?\"\n\n\"Really?\"\n\n\"I saw you a few weeks ago in a club, giving a stage act, sucking dick like a pro to some girl that was definitely not Diana.\"\n\nKevin felt his entire body catching fire from the humiliation. \"I didn't want to do it.\"\n\n\"That's why you deep throated and kissed her cock like a pro?\"\n\n\"So that's what you told them. The neighborhood bike, Kevin, is coming to town,\" he said in a quiet voice. \"Why the hell did you talk to me in the first place if you thought I'm a skank? I mean, I thought you wanted me for something more than a fuck-and-chuck.\"\n\n\"Come on, Kev, it's not a big deal. I thought we could hook up; have some fun. Let's, you know, Yolo. Be nice to Megan, and I'll make it worthwhile to you. Trust me; I'm gonna give you a night to remember.\"\n\n\"I'm not a slut, Ginger.\"\n\n\"Think of it as an opportunity to move up a little. Hang out with different people than losers like Mike.\"\n\n\"Mike is not a loser.\"\n\n\"Five years for a three years diploma? Come on. All he cares about is his weed and pretending he'll ever perform anywhere else than his cousin's bar.\"\n\n\"You know what, Ginger? I don't need you to treat my friends and me like dirt, I've got Diana for that. If you want to move up in life so bad, maybe you should go and suck her dick.\" Kevin turned around and left her standing under the Athena statue. She called him, but he started running, and she was too drunk, and he was too fast.\n\n---\n\n\"Tell me what you think,\" Helen said to William.\n\nHer boss, fifty years old, grey-haired but still very handsome, sighed, and searched his table for his reading glasses. Helen noted that his wife's picture was missing from his desk. Maybe the rumors about them had a grain of truth? The other picture of him and his three stunning daughters on a fishing trip still stood in its regular place. All three kids were futanari despite the fact that Carmela, William's wife, wasn't a futa. It was a rare but possible occurrence. It meant both William and his wife carried futanari genes. His eldest daughter, a famous model, held high a huge seabass in the picture. It always seemed to Helen that there was something haughty and cruel about her expression in that picture.\n\nWilliam donned his reading glasses and scanned the list of invoices. \"What am I looking at here?\"\n\n\"Invoices for ElasticDatica; a big data BI company.\"\n\n\"Aren't we using Informatic and Big-Insights?\"\n\n\"Usually, but sometimes we use the services of smaller players.\" Helen's stomach sent her a painful message. She had to lean on her boss's desk.\n\n\"Are you okay?\" William said.\n\n\"Yeah.\"\n\n\"You look pale.\"\n\n\"Just a little stomach ache. Anyway, this analysis that we supposedly paid for? I looked for it in the Kibana and couldn't find none of the reports.\"\n\n\"Ask IT to help you.\"\n\n\"Already did. The analysis doesn't exist. It's like we're paying for bogus work. It's small amounts. Twenty-five grand here, another fifteen there. But it's a weird pattern.\"\n\n\"What's weird about it?\"\n\n\"The original invoices were created using MS-Word. It's like someone faked them.\"\n\n\"Weird. Who ordered this Big Data Analytics from what's-their-name?\"\n\n\"ElasticDatica? It was Marianne's team.\"\n\n\"Could be a mistake. I'll ask Marianne on Monday.\" He took off his glasses. \"I called you because we have a bigger issue on our hands.\" William pointed to an envelope sitting on his desk.\n\n\"What's that?\"\n\n\"Sarah Flores' resignation letter.\"\n\n\"What?\" Helen raised her voice.\n\n\"My reaction exactly when she gave it to me two hours ago.\"\n\n\"What? Why?\"\n\n\"She wouldn't say. Personal issues.\"\n\n\"She's been working for you-\"\n\n\"For twenty-five years. From the day I created this company. She was one of the original five founders.\"\n\n\"Wow.\"\n\n\"Something fishy is going on around here, Helen. That's the third VP to resign in two months. Can't be a coincidence. If someone is out there headhunting my best people, I need to know about it. Has anyone contacted you, Helen?\"\n\n\"What? No!\"\n\n\"Well, someone is making a move out there.\"\n\nHelen shrugged. \"That doesn't make any sense, William. The market is still crappy. Companies have been downsizing for two years. No one is recruiting; certainly not headhunting.\"\n\n\"We need to find out what's going on.\"\n\n\"What we need is a new CFO.\"\n\nHe sighed deeply. \"If it were up to me, I would promote Bernard, but the board will never go with it. Damn, that new bitch, Suzan, sometimes I think she's just there to sabotage. I know that you're already swamped, Helen, but I'll need your help recruiting and interviewing. You know, sift the grain from the chaff.\"\n\nHelen flinched. She hated interviewing because it involved mind games and lies that she wasn't skilled with, plus she always felt bad when she had to disqualify a candidate. \"Sure thing. Do you want me to continue with the invoices?\"\n\n\"What I want you to do is go home. It's nine pm, and you look awful.\"\n\n\"It's just a little stomach ache.\"\n\n\"Helen, during the five years that I've known you, you've never taken a day off or called sick even once. Go home. You need to be in bed. That's an order, Marine!\"\n\n---\n\nAn owl hissed somewhere above him but other than that, in the Alpha Pi Alpha garden tranquility reigned. In the sorority house the lights were off, but outside, someone forgot to turn off the blue orbs of light that decorated the entrance. They looked like jellyfishes, glowing in the dark, and reminded Kevin of a night dive with his mom. For the millionth time since her death, he wished he could just call her. For a minute, nothing greedy, just to hear her voice. She always knew what to do.\n\nHe almost called Helen, because her calm had the same effect on him, but stopped himself at the last minute because he didn't want to wake her up.\n\nHe thought he'd be spending the night in Ginger's bed, and now he had nowhere to go. So, he leaned against the Athena statue, melancholic, and stared at the half-crazed moon. His stomach made funny sounds, as he didn't eat yesterday. There was a diner on the campus premises called Black Bear that served shitty cheap food twenty-four seven. He thought he should hang in there until morning, instead of in this dark garden, and maybe get something to appease his stomach complaints.\n\nKevin wrote a check to his dad at the beginning of the week, and he had to manage with what little was left in his wallet until payday. To his surprise, his wallet was empty. Then he remembered giving Ginger his last hundred-dollar bill for the party fee, and that he forgot to ask for change. He rummaged through the wallet pockets and found fifty cents. What now?\n\n\"Heads, I quit my studies, and go back home. Tails, I crawl back to Diana. If it lands on its edge, I'll join the circus.\"\n\nHe flipped the coin, it flew up and didn't land. Great, now even gravity had something against him.\n\n\"Heads or tails?\"\n\nKevin turned around. Megan Foster stood above him, holding his coin. She wore a flowery nightdress. Her blonde hair was washed and tied with a yellow band. \"What the hell are you doing here?\"\n\n\"Chillin'.\"\n\n\"Here?\"\n\n\"Everybody got to be someplace, no?\"\n\n\"Are you crying, Kevin?\"\n\n\"I'm an idiot.\"\n\n\"What?\"\n\n\"I'm the stupidest, most gullible idiot ever.\"\n\n\"Why?\" She sat beside him on the grass.\n\n\"I was a happy nobody a month ago. Now I'm a famous slut.\"\n\n\"Noooo.\" She put her hand around him, and he didn't push her off because her touch was warm and comforting.\n\n\"At least everyone in Alpha Pi Alpha thinks so, and the rest of the campus will be up to date with the news in a week.\"\n\n\"Nobody cares if you are, Kev. It's the twenty-first century.\"\n\n\"I care.\"\n\n\"You shouldn't. You know, everyone tonight said that you're the hottest, cutest thing that they ever saw. Flip your perspective, and you might find there are some perks. You know what they say when life gives you lemons...\"\n\n\"Only people who never made lemonade say that. For lemonade, you need lemons, sugar, water, and motivation, which I lack.\"\n\nShe laughed. \"You are cute. For what it's worth, considering everything that happened today, I think Ginger is full of shit.\"\n\n\"She said I'm easy, didn't she?\"\n\n\"She hinted that you might be promiscuous.\"\n\nKevin smirked. \"Oh yeah, I bet she said 'promiscuous'. Give it to me clean, Megan, I'm not a baby.\"\n\n\"She said that one beer is all it takes to turn you into a futanari cock-sucking machine.\"\n\n\"Awesome! Now I get all the hints, and why Sharon took me for a tour.\"\n\n\"No, she would have done it anyway. She thinks she's irresistible. Look, Ginger acted like an asshole, no reason to shed tears over it.\" She rose and offered him her hand. \"And why are you in here anyway? You need a lift home?\"\n\n\"Just passing the time 'til sunrise.\"\n\n\"You don't have a place to sleep tonight?\"\n\n\"Nah, and I'm good, thanks.\"\n\n\"Wanna crash at my place?\"\n\nHe stared at her.\n\n\"Come on, don't give me that stiff upper lip nonsense. There's no shame in accepting help when you need it. My sister won't be coming until tomorrow, and I have a free bed.\"\n\n\"Thanks.\"\n\n---\n\n\"Goodnight, purple eyes, don't let the bedbugs bite.\"\n\n\"Night.\"\n\nKevin was tucked inside the comfortable bed and was grateful that he didn't have to spend the night outside. The bedsheets were clean and smelled faintly of soap. It sure beat the itchy mattress on Mike's floor. Megan was about to turn off the night lamp when the room's door opened. A traveling bag flew through the air and hit Kevin's head.\n\n\"Ouch!\"\n\n\"What the fuck?\" Ashley, Megan's twin sister and the captain of the basketball team, stood in the doorway. \"There's someone in my bed, Megan!\"\n\n\"You said you'd be coming tomorrow.\"\n\n\"It doesn't mean you can rent my bed, fuckwit. You, get the fuck off!\"\n\n\"Sorry.\" Kevin jumped out of bed. He wore nothing but his shorts.\n\n\"Wow.\" Ashley opened her mouth wide. \"Are you my Christmas present for being a good girl?\"\n\n\"No.\"\n\n\"Get back in.\"\n\n\"Shit! Sorry about that, Kevin\" Megan said. \"Uhh...you can sleep with me.\"\n\n\"No, no, no, you can sleep with me, cutie! Sorry I startled you,\" Ashley said. \"Me and my big fucking mouth! Get back into my bed. Please, please, please!\"\n\nKevin crawled into Megan's bed, and the athletic girl turned on her side, leaving ample space for his slim body. Nonetheless, her warmth and the smell of her shampoo beckoned, and he moved closer to her back.\n\n\"Hey, no touching!\" Megan pushed him away.\n\n\"I'm not diseased!\"\n\n\"Still, keep to your side of the bed.\"\n\n\"Did I do something to piss you off?\" He sniffed.\n\n\"No, just humiliated me in front of everyone when I pulled your name from the bowl.\" There was genuine hurt in her voice. \"You know you could have just taken me upstairs, and we could have just pretended. You didn't have to treat me like I have leprosy.\"\n\n\"Fuck! Sorry, I didn't think-\"\n\n\"That ugly girls have feelings too?\"\n\n\"You're not ugly, Megan.\"\n\n\"Sure.\"\n\nKevin raised his head and looked at her profile in the weak night lamp's yellow light. Calling her pretty was a lie, and saying 'cute' would stretch the truth. On a blind date sales' pitch, guys would say stuff like, 'she's got a great personality.' Her blonde hair was mousy, and her mouth was too big. Her long body had zero fat, including in the chest area; where she was almost flat. Every part of her body was tight, her muscles long and her long powerful legs were made for covering long distances.\n\n\"I'm so sorry, Megan. I was an asshole, and you were nice even though I was an asshole.\"\n\n\"Forget about it; go to sleep.\"\n\nHe touched her shoulder.\n\n\"I said don't touch me. You had your chance earlier.\"\n\nHe moved closer and kissed the back of her neck.\n\nShe elbowed him. \"Watch it, buster! I said no!\"\n\n\"Why?\"\n\n\"I don't take pity sex.\"\n\n\"How about fun sex?\"\n\n\"No!\"\n\n\"I need pity sex,\" Ashley called from her bed. \"I don't give a fuck! Pity sex, mercy sex, emergency sex. I need whatever you got!\"\n\n\"Shut the fuck up, Ashley!\" Megan growled.\n\nKevin shifted, and sat upright on his knees.\n\nMegan turned on her back. \"That trick won't work.\"\n\n\"What trick?\" He leaned closer, his face close to hers. His big purple eyes wide open, devouring her.\n\nMegan felt her mouth go dry. \"That trick.\"\n\n\"Do you remember?\" Kevin whispered so Ashley won't hear. \"Do you remember a time when you wanted something, and when you got it, it turned out to be something else entirely? Do you remember being confused and feeling sorry for yourself, enough to trample other peoples' feelings?\"\n\n\"Feeling sorry for yourself doesn't give you an excuse to crap on other people.\"\n\n\"I know. I'm honestly sorry.\" He kissed her lips, and this time she didn't push him away, nor did she open her mouth to receive him. He kissed the crevice of her neck and Megan moaned, but she kept her lips together, so it came out sounding more like a low humming sound. Her body tensed up, and she closed her eyes.\n\nKevin ran his hands up the front of her thighs, gliding up to briefly cup her breasts. Megan gave a halfhearted attempt to push him away, but he sucked her fingers and licked each one.",
        "\"Wow,\" Ashley said.\n\nKevin turned the lamp off.\n\n\"Turn it on, I'm afraid of the dark,\" Ashley said.\n\n\"She's an idiot,\" Megan said loud enough for her sister to hear. \"Ignore her.\"\n\n\"She's cute, and so are you. And I think you're pretty, Megan.\"\n\n\"Because it's dark.\"\n\n\"Because you smile a lot and it makes everyone around you feel comfortable.\" Kevin pulled her nightdress over her hips and ass. She was wearing a cute pair of lacy boy-short panties underneath, which he peeled lovingly down her thighs.\n\nMegan began to lift her nightdress, but Kevin stopped her. \"Let me,\" he whispered.\n\nHe pushed her dress up and kissed her stomach lightly, then turned on the light. \"I just had to see,\" he said. \"I thought I had great abs, but you're like a gym commercial with that six-pack.\"\n\n\"My abs are way better,\" Ashley said. \"Some of my abs are so abby, they have abs of their own, and even they are better than her abs.\"\n\n\"Shut the fuck up, already!\" Megan shouted.\n\nKevin laughed and turned the light off again. He slid his fingertips into the waistband of her panties, and pulled them down. He kissed her toned stomach, then licked the underside of her boobs. He heard her gasp. Her hand reached, hesitating for a moment, before she began stroking his hair.\n\nHe peeled her dress and lifted it over her head. Megan wasn't the assertive, loving domination that was Nadine, and she wasn't the narcissistic violence that was Diana. He felt her heart flutter like a scared rabbit under his seeking hands.\n\n\"I want you,\" he whispered.\n\n\"Okay,\" she huffed. \"What now?\"\n\n\"Whatever feels good.\" He let his right-hand wander down the flat of Megan's stomach until he was lightly cupping her balls. He knew she was wet; he could smell her sweet musky scent. It turned him on, and he rapidly hardened. He licked between her small mounds, tasting sweat and excitement. He caught one stray drop in his mouth and savored it, before licking up towards her neck.\n\n\"Oh fuck,\" Megan moaned. The feeling of Kevin's tongue, strong, yet soft. Her body, like a great violin, sang its music. She heaved instinctively and dry humped his leg. \"Fuck! Oh, Kevin!\"\n\nFrom the next bed, Ashley wasn't talking, but she was breathing hard. Kevin played with her voyeurism, surprised by how excited he was.\n\nHe sucked on Megan's tiny tit. It was teardrop-shaped, and sat high and firm on Megan's chest. It was soft, but firm and perky. Tenderly, softly, Kevin began kissing the pliant flesh in a circle, from its top to the underside, letting his tongue trail around in between his kisses. Creating smaller and smaller circles around the nipple. He teased the most sensitive part of Megan's chest by drawing closer and closer, leaving hot spots where his mouth had been to be replaced by the chill of the cold air.\n\nMegan began panting, intoxicated by his soft tongue and skilled mouth. She had a boyfriend in high school and a few sexual encounters on the sports team. None of that even came close. When Ginger showed them Kevin's video, the last thing on her mind was that they'd end up like this.\n\n\"Kevin, that's so good!\"\n\nShe started grinding harder against him. Her rolling hips placing pressure on her cock. Electric jolts sparked from both her cock and her breasts. Megan could feel her release just around the corner, and she was desperate to get there.\n\nMegan's moan turned into a near-shriek as she felt his teeth gently dragging across her breast. He started biting her, and then soothed each vampire kiss with his velvety tongue.\n\nMegan moaned with every move, marveling at how talented Kevin was with his mouth. She shivered as she thought of his talented mouth being applied elsewhere. The image alone almost sent her over the edge.\n\n\"Mmmhmm?\" Kevin's hand cupped her breast and then eased its way over her stomach. Her member was pointing skyward, as hot as a furnace. It jumped to the lightest touch of his fingers. He played with the tip and felt her wetness. Underneath him, Megan arched her back and moaned.\n\n\"Kevin!\"\n\n\"Shh...let me.\"\n\nHe dove down, and licked the head before wetting it with his lips.\n\n\"Oh, fuck,\" Megan said.\n\nKevin gave her tip a loving kiss, then sucked the slit, mixing her pre-cum with his saliva. He played with the fluids in his mouth, then let it drool and coat her long cock. Diana taught him the best handjob techniques long ago, but with Diana, it felt like he was always in the middle of an oral exam with a very impenitent professor. She was quick to anger if Kevin failed to follow her directions. Megan was just grateful.\n\nWith her cock thoroughly lubed with body fluids, he started rubbing it slowly. Just two fingers and a thumb, up and down, teasing, barely touching. Each time his thumb stroked the sensitive glans' ridge on its way up, Megan jerked and gulped air.\n\n\"Like it?\" he said.\n\n\"Oh, God!\"\n\n\"I hope he's not looking.\" Kevin stopped moving his hand and used only his thumb to rub the underside of the glans.\n\nHer leg spasmed and she kicked the air. \"I'm...\"\n\n\"Shhh...not yet.\" He let go of her cock, and Megan sighed. Kevin blew his hot breath on the cock's head.\n\n\"Oh, God.\" Her cock was hard as steel, and ready to explode.\n\n\"Soldiers on deck, ready to be deployed?\" Kevin said.\n\n\"Fuck.\"\n\nKevin applied all five fingers and started jerking her up and down, the fluids making lewd wet sounds against his fingers. His other hand cupped her balls and teased them, goading their cargo. He stopped moving, and her cock jerked wildly in his palm, like a young buck jumping in his pen, anxious for release.\n\nKevin then flicked his tongue on the cap, slapping it.\n\nMegan promised to herself that she'd make it last forever, or at least for another minute, and then immediately exploded. Fireworks hit her pleasure center, and her balls churned her baby-making milk. The first massive spurt hit Kevin's tongue. When he felt the viscous fluid, he immediately closed his lips around the bulbous cock head. Her cock spasmed and twitched hard, it jerked and pulsed, and then it sprayed the second shot deep into his mouth. The next spurt hit the back of his throat. However, he was no rookie. Even though she filled his mouth to near full capacity, Kevin gulped it down. His mouth was sprayed with more of her fluid. Another spurt and then another followed. Kevin swallowed them with ease, engulfing her cock in his warm, loving mouth, adding an edge to her pleasure and increasing the shockwaves.\n\nMegan's sperm went down Kevin's throat and into his belly. It was slippery, very slick, and a little sweet.\n\n\"Ah, fuck, fuck, fuck!\"\n\nMegan had a lot stored for him, but he managed not to spill anything. Time after time, she kept squirting more ropes of cum into his mouth, and time after time he gulped, not caring about the loud noises he was making, or her sister who could hear them from the next bed.\n\nSex was beautiful, and all traces of inhibition from his former life were devoured by Diana. In a sense, all the futa girls who followed her footsteps owed her big-time.\n\n\"Oh, god,\" Ashley said from her bed.\n\n\"Oh, sweet Jesus, oh fuck, oh fuck, oh fuck!\"\n\nThere was a lot of worshipping in that bedroom through that powerful orgasm. Megan's cock filled his tummy up with sweet cum. When she stopped shooting, Kevin still didn't drop her from his mouth. He held her cock softly between his lips and nursed on it while she shuddered on the bed.\n\n\"Fucking. Wow!\" Megan groaned. She reached between her legs and rested her hand on his head as he kept sucking ever so gently on her softening cock.\n\n\"That was amazing,\" she said, and then laughed. \"Jesus.\"\n\nKevin finally let her cock go. \"What do you mean was? We've just begun.\"\n\n\"Yeah, give me a few minutes. Like several hundreds of them, and I'm good to go.\"\n\n\"I thought you were a super-athlete?\"\n\n\"I'm good to go,\" Ashley said. \"Not insinuating anything. Just, well, you know.\"\n\n\"Shut the fuck up!\" Kevin and Megan said, and immediately burst out laughing because they said it in almost perfect sync.\n\n\"You two stink, and I hate you both,\" Ashley said. \"Except for you, Melvin, I like you.\"\n\n\"It's Kevin.\"\n\n\"I like you too, Kevin.\" She waited for a few seconds. \"Kevin? Hey there, it's your cue to say you like me too. Much better than you like Megan. In fact, she holds you against your will, and you want me to knock her cold, rescue you and take you into my bed, where you'll reward me for saving you. Kevin? Kevin?\"\n\n\"He can't talk right now,\" Megan said. \"His mouth is busy.\"\n\n\"Oh, god,\" Ashley said.\n\nMegan gasped as she felt the tip of her dick press into Kevin's pillowy lips. Her cock pressed against his slick teeth. His tongue slipped out and deliciously licked across her tip. Megan felt electricity run down her spine.\n\nKevin's teeth parted, and his mouth opened around her cock. She pushed forward slightly, letting her bulbous head press into his mouth. Just as the mushroom tip slipped in, his lips sealed around her, stopping Megan from pushing further.\n\nHis tongue, soft and velvety, swirled circles around the tip, and Megan moaned her guttural approval. Only once in her life had she felt so excited; when she stood on the podium's highest level, waiting for the gold medal after she had set a national collegiate record for the 1500-meter run.\n\nHe pressed the tip of her cock against the hard roof of his mouth and swirled his tongue around the base of her cock.\n\nMegan moaned and writhed as she felt his gentle suction. She pushed her cock deeper and immediately pulled out of his mouth because she thought she was too aggressive.\n\nKevin swirled his tongue around the shaft. \"Why'd you pull out?\"\n\n\"I didn't want to hurt you.\"\n\nKevin kissed her cock, then devoured it, and she felt it pressing into the back of his throat. He bathed her cock, lubing her up to go deeper. He then pushed, and she felt her tip slide quickly over the bend into his throat. Deeper it went into that tight pressure sleeve, and Megan's toes curled as a pleasure she didn't know existed overwhelmed her.\n\n\"I can't believe how wonderful it is,\" Megan gasped.\n\n\"Oh, shut the fuck up,\" Ashley said.\n\nShe tried to pull out, thinking he needed to breathe, but Kevin clamped down, biting her lightly, but also warning her not to move.\n\n\"Oh God, Kevin!\" She was rock hard again.\n\nKevin swallowed, his throat contracted around her and Megan almost lost it. He felt her spasm and pulled out, freeing her cock from its loving prison. The fresh air felt like torture to Megan, and she thrust. But Kevin was already sitting on his haunches.\n\n\"I need...\" She gasped and tried to rise too, but he pushed her on her back again.\n\n\"I need you,\" he squatted above her and got the head of her cock positioned at his entrance. She sighed and slowly pushed herself. Megan felt the head open up his outer sphincter, then she felt the pressure from the inner ring.\n\n\"Oh, Jesus,\" she sighed. \"I'm in.\"\n\n\"Yeah.\"\n\nMegan paused to adjust to the new sensation. Then she started rocking her hips, little by little, drawing deeper and then pulling back. His tunnel was ecstasy, bathing her cock in heat and pressure. She felt herself sink further into him until his cheeks cushioned her hips.\n\n\"This feels so good,\" she breathed.\n\nShyly, she reached out in the dark, searched and touched his cock that was rock hard, pointing towards her.\n\n\"You feel fantastic, Megan.\"\n\nShe gently rubbed his cock, and could almost feel the sparks flying between her finger tips and his hard member. Her cock was sending her blissful messages from the tight sleeve that locked it.\n\n\"Fuck me,\" he whispered.\n\nShe slowly pushed and pulled him, controlling the pace and depth as he rode her cowboy style. Then she felt his palm close on her hand that was holding his cock. Kevin had strong fingers, trained by carrying numerous scuba tanks almost daily. His fingers closed around her palm, and together they pumped his hard member.\n\nMegan started thrusting inside him, pushing up, her powerful leg muscles almost lifting him off the bed. Her breath now came in grunts, timed with her rocking. They started to slam into each other.\n\n\"Oh, fuck yes,\" she groaned. Their hands gave his cock a workout just as Kevin's rectum gave her cock a workout.\n\n\"That's it, baby,\" he encouraged.\n\nShe increased her pace, bucking like a bull below Kevin, her trained body easily lifting him alongside her, rearranging his insides. She thrust more boldly now. Her cock scraped the inside of his tunnel and Kevin gasped as she started massaging and hitting his g-spot. Megan felt herself melting inside of him. Her hips wouldn't stop moving now, even if she commanded them to.\n\n\"I'm gonna cum soon,\" she panted. Small pinpricks of sweat broke out on her skin. She pushed and twisted. Her cock was on fire.\n\nKevin reached behind him and gave a light squeeze to her heavy balls.\n\n\"Oh God!\"\n\nKevin squeezed again, her muscles tensed, then he clenched his ass cheeks around her hot member and Megan found herself beyond the point of no return.\n\n\"I'm cumming!\" she yelled, and rammed into him, lifting Kevin up in the air. Her voice dissolved into guttural grunts and moans as she came, hard. While Kevin's ass squeezed around her cock, she thrusted with abandon deep inside him, shooting and painting his insides with white cream.\n\nHer shriek of delight hit his pleasure center, and he held onto her hand and started spraying her abs with his own seed.\n\nThe next several minutes were hazy for both of them. There were grunts and a mindless orgasm, followed by deep lustful kissing.\n\nAt last, Kevin tore himself off her softening member and lay down on his back, panting.\n\n\"Wow.\" Megan stared at the ceiling, still not entirely down from the cloud she was floating on.\n\nAshly started clapping from the bed next to them.\n\n\"Don't mind her, she's not really family,\" Megan said.\n\n\"Yes I am,\" Ashly said.\n\n\"Mom and dad didn't have the heart to tell you this, but you're adopted. We found you in a trashcan,\" Megan panted.\n\n\"I'm your identical twin.\"\n\n\"Hey,\" Kevin kissed her neck.\n\n\"What, baby?\"\n\n\"I need... I need...\" He pulled her to him and buried his body in her warmth.\n\n\"Whatever you need.\"\n\n\"I think I need this.\" He kissed her neck and snuggled deeper into her. \"I need a girlfriend. A real girlfriend.\"\n\n\"Oh?\"\n\n\"Do you have anything planned for 2017 to 2070?\"\n\nTo be continued...\n\nYou know the drill. I write the story, and you guys punch the stars (hopefully he 5 and not the 1) to show me you care.\n\nI come here every couple of days and read your comments. I enjoy them (especially the ones not calling me rape advocating asshole). Plus I use them as reference and change stuff along the way (like how I stopped mentioning Big Bird because enough people said it sucked, and not in a good way). Your words do have an impact on my writing, and I thank anyone who took the time to post their input.\n\nChapter 6 is already done and awaits editing\n\nHope to post again soon"
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "shemale",
        "shemale on male",
        "futanari",
        "futanari on male",
        "dickgirl",
        "dickgirl on male",
        "romance",
        "futa romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-05"
}