{
    "title": "There and Back Again Ch. 103-104",
    "pages": [
        "Chapter One Hundred Three: Alien Nation\n\n\"Nice shot, by the way,\" I praised Kallian.\n\n\"Not that nice -- I meant to nick his cheek.\"\n\nZevran chortled, and I howled, bending over and propping my hands on my knees as I laughed. \"Well thank you for erring in that direction! A guard with an apple pinned to his nose would not have helped our cause any.\"\n\nKallian flushed and looked away, but I saw a smirk before she turned.\n\nWhen we all finally got our giggles under control, we turned back to the Alienage gate. Kallian took a deep breath, steeling herself, and squared her shoulders. Then she marched through, and we followed her across the bridge.\n\nMy first visit to the Alienage was a revelation, and not in a good way. Much of it was in worse shape than even the game had demonstrated; the buildings all sagged together, looking one stiff breeze from total collapse, and even those that were well-maintained were clearly old and worn out. There were half-dressed children running around and playing games, ribs visible from long-standing malnutrition, bare feet blue from the cold.\n\nThe children gave us a wide berth, even as some of them tentatively waved at Kallian, staring at the group of us with wide, frightened eyes; within moments, they were gone. The further we walked, the more elves I noticed watching us -- from balconies and alleyways, through doorways and from behind abandoned crates. Word apparently spreads fast in the Alienage. We were all very careful to keep our hands well away from our weapons, and we let Kallian lead.\n\nNo one approached us until we reached the centre of the Alienage, and I got my first look at a Vhenadahl. It was beautiful, huge and green, and someone had decorated it with paper lanterns and other colourful, handmade ornaments. A grey-haired elf who I recognised as Valendrian was waiting for us, as we got closer to the massive tree, and when he saw Kallian, he let out a cry and held out his arms. With a sob, she ran into them, and he folded her into a protective hug. We stayed back, respectfully, to allow them to have their reunion. After a moment, he gestured to a nearby elf who was watching with an inscrutable expression, and I heard him say the name Cyrion. With a nod, the elf jogged off, presumably to go get Kallian's family.\n\nA bunch of the elves who'd been watching us approached cautiously, greeting Kallian with enthusiasm even as they stared at us with barely concealed suspicion. It didn't take long before a familiar red-headed elf came running -- Shianni, Kallian's cousin. The two women hugged, both crying, and then pulled a smiling Soris into the embrace when he showed up. They talked quickly, Shianni's dirty looks morphing to begrudging appreciation, and I guessed Kallian was telling them that we had been responsible for her rescue from the dungeon. Soris nodded, pointing at Wulf and Leliana.\n\nThe crowd of elves now surrounding us parted to allow a tall, tired-looking, salt-and-pepper haired elf to shuffle through. He stopped, shocked, when he saw Kallian, and dropped to his knees, reaching one hand out towards her. She cried out and dove to her knees at his side, wrapping her arms around him as he kissed her forehead, tears streaming down his face. Everyone turned away, giving them as much privacy as they could, given the public nature of the reunion.\n\nValendrian addressed the crowd, shouting to be heard. \"Go about your business. These people are no threat to us. They brought us the supplies for the plague and the warning about slavers, and now have brought Soris and Kallian home. Please, go home.\"\n\nSlowly, with a lot of shoulder patting and handshaking and hugging, the crowd dispersed, leaving us alone with Kallian, her family, and Valendrian. The Hahren gestured to us, and we came closer; Kallian actually smiled at us, shifting to stand next to Wulf, as usual. I saw Cyrion raise his eyebrows at this, but it seemed both Kallian and Wulf were unaware of the connection they apparently shared. I hoped it wasn't just gratitude, on Kallian's part, or protectiveness on Wulf's, or we were going to be seeing heartbreak down the road.\n\nWe were all introduced to Valendrian, Cyrion, Soris, and Shianni, and they all thanked us profusely for our help, both with the rescue and the plague. The elves began talking amongst themselves, Kallian telling them what had happened to her, though she glossed over the abuse. Apparently Vaughn, after the unsuccessful rescue attempt by Soris and Nelaros, had kept her as a plaything, and a cautionary tale for other women who'd been kidnapped. Soris had had no idea she'd survived, and hadn't seen any of the other victims either; it was assumed they were all dead. When Howe imprisoned Vaughn and declared himself Arl of Denerim, he'd passed Kallian over to his son, Thomas, and eventually, Nathaniel.\n\nShe was very careful not to mention rape or torture, but the pity in the eyes of her family was obvious. And I couldn't blame them -- she'd been through hell. Somehow, though, talking to them about what happened, even the abridged version, and hearing them praise her strength and courage, she seemed to come alive. Her rigid posture relaxed some, and she smiled and laughed, not sardonically like I'd seen before, but actually mirthful. She was absolutely gorgeous when she smiled, which was not lost of Wulf, who watched her with longing eyes.\n\nAfter a bit, Kallian asked if we would wait while she went to the home she shared with Cyrion and now Soris, and we agreed, settling down in the grass near the Vhenadahl to wait. The children were back outside playing, and the elves walking around in the Alienage largely ignored us, though at least we weren't the focus of so much rage anymore. I did notice that many of them, male and female both, had poorly concealed weapons -- I could see bulges under sweaters, in waistbands, and several 'walking sticks' that I was quite sure were actually disguised spears. And there were rakes, hoes, and shovels laying around, apparently abandoned, in places where they could be easily grabbed and used as weapons. I wondered if several of them had actually even been sharpened.\n\nZevran had obviously noticed the same, and he frowned when our eyes met. Nothing good could come out of this. I stood and walked towards Hahren Valendrian, who was standing nearby talking with passing elves.\n\n\"Hahren?\"\n\n\"Yes, my Lady?\"\n\nI scowled. \"Please call me Sierra? I really hate the 'lady' thing.\"\n\nHe chuckled. \"Ah, you are Warden Aedan's sister. He said something similar.\"\n\nI laughed. \"I'm very happy to see everyone here safe, and Kallian and Soris back home. But, Hahren...\"\n\n\"Yes, Sierra?\" he prompted.\n\n\"These people...they need to hide their weapons. There will be a purge if any guards come through here and see so many armed elves.\"\n\nHe glanced around, assessing each of the people within sight. \"I don't see any weapons.\"\n\nI shook my head. Looking around, I pointed at one. \"There. That man has a dagger sheathed in his armpit. That one's got a sword down his pant leg. And no one makes walking sticks that long. It's a spear. I'm not even all that well trained, and I can tell. Someone from the army, or a guard...they'll know instantly.\"\n\nZevran approached. \"Yes, cara mia, you are correct. This will bring a world of trouble onto the Alienage, no?\"\n\nValendrian paused, thinking. \"What would you have me do? I have already tried -- and failed -- to convince the people not to arm themselves.\"\n\n\"I think that ship has sailed,\" I muttered, and Valendrian grimaced. \"Maybe...Zev? Could you at least teach them to hide them better?\"\n\n\"We'd need different weapons. Swords and traditional daggers aren't easy to conceal, yes?\"\n\n\"Hmm.\" I pouted. Zevran laughed, and Valendrian chuckled.\n\nAfter a while, Kallian emerged from her house, exchanging hugs with her father, Soris, and Shianni. She walked over, expression sad but determined. There were tear tracks on her cheeks. \"I am ready to go now.\"\n\nValendrian twitched. \"You aren't staying? Kallian-\"\n\n\"I cannot, Hahren. Surely you must understand. Nelaros is dead.\" She choked back a sob. \"I may not have wanted to marry him, but he died because of me. My father cannot afford another wedding contract, and even if he could, who would marry me now?\" She gestured down at herself, and we all flinched. \"The guards may still come after me, if they see me. I will bring nothing but trouble if I stay here.\"\n\n\"But, my dear, where will you stay? What will you do?\"\n\n\"You can stay with us, for now, until you figure it out,\" I offered. \"No one will bother you at the estate. I'm sure Duncan won't mind, and the Arl won't even notice.\"\n\nValendrian looked at me, a strange expression I couldn't interpret on his face. \"Duncan?\"\n\nI nodded, incredibly glad that the world knew about Duncan so I was free to tell the elderly elf. \"Yes, that Duncan. He's staying at the Arl of Redclffe's estate with us.\"\n\n\"We will make sure she's safe, ser. I promise.\" Wulf stood behind Kallian, close but not touching.\n\nFinally, sadly, the Hahren nodded. \"Your mother would be so proud of you, Kallian. Please come to visit as often as you can.\"\n\nKallian closed her eyes as he kissed her forehead, then threw her arms around the elder's neck. \"I promise.\"\n\nWith that, she turned and marched out of the Alienage, and we all shuffled along behind her.\n\nOnce out in the Market District, I had an idea. \"Hey, can we stop by Gorim's on the way back? I want to see how he's doing.\"\n\nNo one disagreed, so I veered towards the little house he shared with his wife and her family. One of the mercenaries Aedan had hired stood outside, leaning against the wall. He nodded to me, and I replied in kind. I knocked on the door, and Riana answered, her belly now bulging past what should have been physically possible even at this late stage of pregnancy.\n\n\"Oh!\" she exclaimed when she saw us, and I couldn't tell if she was pleased or irritated by our presence. \"You'll be looking for Gorim, I imagine. He's out back with father. Let me just get him.\" She looked nervous.\n\n\"Please,\" I stopped her, putting my hand on her shoulder, \"let me. I'm not here to take him, I promise. We just want to talk. Don't trouble yourself.\"\n\nShe smiled, patting her belly fondly. \"It's not as bad as it looks. I'm still capable of walking a few steps.\"\n\n\"Still. Please. I just have a quick question anyway.\"\n\nShe nodded towards the back of the house, and I left her there chatting with Leli and Wynne, being introduced to the others. I found Gorim in the shed that doubled as a smithy, bundling up weapons while Riana's father hammered on a lump of white-hot metal. He smiled at me, and gestured outside; he didn't try to talk, as it would have been impossible to hear over the forge anyway.\n\nWe stepped outside and closed the door, and he turned to me with a grin. \"I wanted to help Sal get caught up, but I was going to come back to the estate tomorrow, honest-\"\n\n\"No, no. I'm not here to collect you, Gorim. No reason for you to sit around staring at the estate's walls with the rest of us. The politics here don't involve you, and you and Riana need some time, anyway. I actually have a business proposition for you.\"\n\nI told him what I had in mind, and he gave me a price. Once agreed, he walked me into the house, putting his arm around Riana's shoulders when we reached the front door. He greeted the others, nodded at Kallian, and then excused himself to go check on Revan in response to wailing coming from the back hall. Riana watched him go with a fond smile, and then turned back to me, grabbing my arm.\n\n\"Thank you,\" she whispered. \"For bringing him back. I never thought I would see him again.\"\n\n\"I didn't do anything, I assure you, but you're welcome, anyway.\" I squeezed her hand.\n\n\"Is he...did you find her?\"\n\nI raised my eyebrows, surprised. \"He didn't tell you?\" She shook her head, lip trembling. \"We did. She's the Queen of Orzammar. Bhelen joined the Legion of the Dead.\"\n\n\"Why didn't he stay?\"\n\nI looked at her for a moment, thinking. I am not going to be the one to tell her he slept with Sereda and then left because he couldn't be her consort. \"Do you really want to know? Does it matter? He had a chance to stay, and he didn't. He's here. Given that you sent him to another woman, do you really want to know the details?\"\n\nA single tear trickled down her cheek. \"I shouldn't, but I do.\"\n\nI squeezed her hand again. \"He's here, and he's not going to leave you again. Your baby will have a father, and so will Revan. He loves you, and there won't be anything hanging over his head. And if he wants, he could get a job with the Palace Guard or the army without any trouble. You both have the gratitude of the entire Dwarven nation, and you're together. Just... be happy, and don't think about the rest, okay?\n\nShe nodded, wiping away the tear and taking a deep breath. \"You're right. And I am grateful. It doesn't matter.\" She smiled tentatively. \"Thank you again.\"\n\n\"Tell Gorim I'll be back to visit in a few days?\"\n\nShe nodded, and we headed out. We took another quick detour to meet with the messengers who we knew waited just outside the city once a day from the camp we'd left outside Denerim. Dariel, Mithra and a Circle mage from the camp waited just outside the gates. We filled them in on what had been happening; they had no real news.\n\nWe headed back to the estate after a few minutes of idle chit chat; I was pleased to see Dariel less afraid of me, and starting to come out of his shell a little. The trip was thankfully uneventful, and we trooped inside to find Aedan and Alistair waiting for us in the hall.\n\nAlistair grabbed me in a hug, then held me at arm's length to inspect me. Aedan looked us all over, a deep frown on his face.\n\n\"Where were you?\" His tone was trying to be scathing, but ended up just sounding anxious.\n\nHolding Alistair's hand with one of my own, I turned to Aedan with a chuckle. \"You're just jealous we weren't stuck in a meeting all afternoon.\" He growled, and I sighed. \"We escorted Kallian to see her family. You didn't ask any of the servants? I told them where we were going.\"\n\nAlistair rubbed his neck sheepishly. \"It didn't occur to us.\"\n\nI laughed. \"Anyway, we're back. How did the meeting go?\"\n\n\"Oh, you're going to love this.\" Alistair actually giggled.\n\nAedan rolled his eyes. \"Let's go talk.\"\n\nZevran and I followed, leaving Kallian and the others to their own devices. Aedan led us into the library, turning and closing the door with a thump. Alistair sat on a chair and tugged me into his lap, and Aedan and Zev sat together opposite.\n\nThe two took turns telling us about the meeting. Apparently, Anora had not only said some rather rude things about Cailan's intelligence and competence, apparently implying that Ferelden was better off without him, she'd also attacked me and my relationship to Alistair.\n\n\"Theron was furious. It was a good thing she was sitting with her back to him, because if she'd seen him the secret would have been out.\" Alistair laughed. \"I thought we might not have to worry about competing for the throne -- it looked for a minute like he was going to strangle her right there.\"\n\n\"Speaking of, where is Theron?\"\n\n\"In the barracks, murdering a sparring dummy.\" Aedan rubbed his eyes irritably. \"We asked about the regency, why she had supported her father against the charges; why, if she was so capable, she needed a regent at all, and she just kept changing the subject. Like I was too stupid to notice that she never answered the question.\"\n\n\"She accused Aedan of trying to put a Cousland on the throne surreptitiously, saying I'd be a puppet King.\" Alistair's face was positively gleeful.\n\nI looked at Aedan, who flushed and pinched the bridge of his nose. \"I might have lost my temper a little.\"\n\n\"But Eamon jumped in and assured her that there were no plans for you to be Queen,\" Alistair assured me.\n\n\"Of course he did. You know,\" I giggled, \"one of these days she's going to notice how we all keep dancing around actually calling Alistair the King. We say 'the son of Maric' or 'the future King', stuff like that. It's kind of hilarious. I can't wait until she sees Theron's face.\"\n\nAedan sighed. \"She invited me for a private discussion afterwards, asking me to support her bid for the throne. She called Alistair-\"\n\n\"Let me guess -- charming but stupid.\" Alistair frowned at me. \"Her words, love. Not mine.\" I kissed his nose and he stuck his tongue out at me.\n\n\"Essentially, yes. But then she starting nosing around a marriage alliance.\" I stiffened, and Aedan snorted. \"Not to him. To me. She asked me if I really wanted a Cousland near the throne so badly, and if I thought you were the right person for the job.\"\n\nI laughed out loud. \"She actually propositioned you?\"\n\n\"Well, not in so many words. She even implied that my 'friendship' with a particular Antivan wouldn't be a major problem as long as we were discreet.\"\n\nZevran sat forward, eyes flashing mischievously. \"I rather think I'd enjoy being the paramour to the King.\" Aedan punched him, and I giggled.\n\n\"She also hinted that duties in the bedroom would not be required.\"\n\n\"Yeah, well, she's barren anyway -- what would be the point?\"\n\n\"She said that the infertility was Cailan's.\"\n\n\"That's not true.\" They all stared at me. \"Not my secret, okay? Let's just say that before he married Anora, he certainly wasn't infertile.\"\n\n\"I'm an uncle?\" Alistair looked...enthused.\n\n\"Not anymore.\" I sighed. \"She died.\"\n\nThey all contemplated that for a minute. \"Before he got married? So his child died, then Maric, and he was left alone and grieving and married to her?\" Alistair looked horrified.\n\n\"Yeah.\" I sat silently for a minute. \"Turns out he had a hell of an excuse for not being the best King, at least at first. And then Anora and Loghain had taken over and wouldn't even let him help.\" I sighed. \"So what did you say to Anora?\"\n\n\"No, of course. I told her the Couslands would have enough to do between the Grey Wardens and Highever and we wanted nothing to do with the throne. I also said I thought it was important that a Theirin was King. She wasn't happy.\"\n\n\"I'll bet.\"\n\n\"And I'll be watching her and Erlina, to see what she does next?\" Zevran grinned. \"Perhaps I should try seduction of the lovely Orlesian handmaiden, yes?\n\n\"No.\" Aedan took Zevran's face between his hands. \"Not a chance. Mine.\" He kissed Zevran, and I giggled, remembering my own possessive spouse back in Redcliffe.\n\nChapter One Hundred Four: Helping or Hurting\n\n\"So what are the next steps?\" I asked Aedan.\n\n\"Well, Anora didn't tell us about the Alienage, so either she didn't know about the slavers beforehand or she figured out that they weren't successful.\"\n\n\"Maker, I wish we knew whether she really was involved in all this. At the end of the day, she's still his wife. I don't envy him the choices he will have to make.\" I'd never wanted to be involved in politics less.\n\n\"So now we just wait for the Landsmeet.\"\n\n\"Which is when?\"\n\n\"A week today, Eamon said.\"\n\nA week of waiting did not appeal. I turned to Aedan. \"Okay, in the meantime, I have a plan.\"\n\n\"This has to do with our side trip on the way back from the Alienage?\" Zevran asked.\n\nI nodded. \"I want to help the elves.\"\n\nI went on to tell Aedan and Alistair about the elves carrying poorly concealed weapons, and how it put them at risk if a guard noticed. \"And they'll notice, believe me. If I could figure it out, so could a guard.\"\n\n\"So what's your plan? You think you can talk them out of carrying weapons?\" Aedan looked skeptical.\n\n\"Nope. I propose a trade-in program.\" At their confused looks, I elaborated. \"Gorim's father-in-law can make knives like the ones Zev has hidden all over the place. Thinner, smaller, easier to conceal. We have a bunch made, and then tell folks in the Alienage we need their thicker, larger weapons for the army, and offer a trade. One small, concealable blade for one clunky weapon. I think Kallian, Zev, and Wulf will have to do it -- no doubt they'll think it's a trick if a human offers them a weapon -- but Gorim said he would get us a discount for quantity, and also if any of the weapons turned in have decent, useable metal they can reforge.\"",
        "Aedan looked like he'd accidentally bitten into a raw onion.\n\n\"What?\"\n\n\"Sierra...\" He looked at Zevran helplessly. \"Look, I appreciate that you want to help, but...we can't get involved with arming the elves. Duncan's already going to skin me for giving them the coin to do it themselves.\"\n\nI stood abruptly, pacing to the bookshelves and back. \"So we just, what? Let them get arrested? Imprisoned, maybe tortured? Killed? All because they want to protect themselves and their homes? It might be one thing if the guards actually patrolled properly and defended them, instead of just making sure they don't 'get out' and cause any problems for the humans. Just look at what happened to Kallian! You can't blame them for wanting weapons. But they're going to get themselves killed. Alistair?\"\n\nI turned to my husband, who sat there looking like he was trying to get swallowed by the floor. \"Uh...\"\n\n\"Really?\" I kicked the base of a bookshelf irritably, and a book tumbled out into my arms. I caught it, holding it uselessly, tears spilling over to trickle down my cheeks. \"Zev?\"\n\nThe elf stood, coming over to me and taking the book away, dropping it on a table. He reached out and put one hand on my shoulder, the other cupping my chin. \"Cara mia, these things take time, yes? We can't just give them new weapons and expect the problems to be solved, even if we could get away with it. You know Theron is sympathetic -- just wait, bella donna. Now isn't the time.\"\n\n\"Would you say that if it was me who'd been serially raped for months, and we weren't allowed to fight back?\" I shrugged out of Zevran's grip, shot a dirty look at both Aedan and Alistair, and ran out of the room in tears.\n\nIt was Kallian who found me, later, huddled in the room I supposedly shared with her and Solona. I'd missed supper, and she brought me a plate of food; for once, I had no appetite. I picked at it listlessly. She sat down cross-legged on the floor across from me.\n\n\"Aedan told me your plan.\"\n\nI sniffled and looked away.\n\n\"I appreciate the thought, Sierra, but...that's not the way to make things better, you know that, right?\"\n\nI sniffed again. \"I just want to help. I wasn't...wasn't raised to just be able to accept this sort of thing. Treating someone else like that just because their ears are different. No one should have to go through what you have, and those people in the Alienage...there's no one to protect them from it happening again and again.\"\n\n\"I know. But handing a bunch of half-trained children knives will only make things worse. My father told me that already a handful have been arrested -- fighting on the docks and pulling a dagger, that sort of thing.\"\n\n\"If a human did that, no one would even notice, unless it was someone important that they killed.\"\n\n\"That doesn't make it okay. Perhaps the focus should be on disarming the rest of the world, not arming the elves?\"\n\nI thought about Earth -- about the NRA and other conservative gun-nuts. \"Good luck with that.\"\n\nShe laughed. \"Listen, I do appreciate the thought. And after the Blight...well, there will be some changes, I hear, and I hope we can make things better. But for now, let's just get through the human politics, and then the Blight, okay?\"\n\nI nodded, dejected. \"Is there anything we can do? Those children...\"\n\n\"Need more than any one person can offer. I was lucky -- my father was well-off, as elves go. We always tried to feed the little ones, but...\"\n\n\"But they wouldn't take food from us if we brought it to them, would they.\"\n\n\"Probably not. And even if they did -- are you going to feed them all forever?\"\n\nI sighed. \"I intended to talk to Mother Boann and encourage her to set up a school. Give her some coin for supplies. Do you think the kids would go?\"\n\nShe thought about it. \"Some of them. And I can ask my father and Valendrian to encourage more.\"\n\n\"What about buying the weapons for coin? Think they'd sell?\"\n\n\"Probably not. But if you're actually offering, I can put out the word that the Grey Wardens are looking for spare weapons and willing to pay.\"\n\n\"I have some coin. Aedan won't even notice -- he's probably forgotten I have it in the first place. How much do you think we should pay?\"\n\n\"They'll be poor quality weapons. More than twenty-five silvers each would just make them suspicious.\"\n\nI considered. Four weapons for a sovereign, then...I fished in my coin purse and handed Kallian ten sovereigns. \"If you need more, let me know.\"\n\n\"Why are you doing this?\"\n\n\"Like I said, I wasn't raised to accept blind racism. Elves should have the same rights as humans. So should mages, for that matter. And someone has to be the first to try to change everyone else's mind.\"\n\n\"But, I mean, why me? I could just take your coin and leave.\"\n\nI thought about it. \"What you've been through...you are an incredibly strong person. You helped Nathaniel even when he was too weak to make you. I'd say you earned it. Besides, Duncan knew your mother. I think he'd approve.\"\n\nShe smiled. \"My mother? Who is Duncan, anyway? You mentioned him to Hahren Valendrian.\"\n\n\"Oh, uh, he's the Warden Commander. He's been mostly hiding in the barracks since you got here, I suppose. As I recall, he wanted to recruit your mom, but she wanted to stay and have a family with your father.\"\n\n\"I bet he has stories about her before I was born, then.\"\n\n\"I imagine, yes. You should ask him.\"\n\n\"Would you mind if I came with you when you speak to Mother Boann? I should thank her. She tried to stop us from being kidnapped, even if she wasn't successful.\"\n\n\"Of course.\"\n\nMy appetite returning, I reached over and grabbed a bun and a piece of cheese off the platter Kallian had brought me. \"I suppose I should go apologise to Aedan and Alistair.\"\n\n\"They're not mad, as best I can tell.\"\n\n\"Doesn't mean I don't feel like a bitch.\"\n\nShe laughed. \"I think they're in the library.\"\n\nI grabbed another bun, gathered myself up off the floor ungracefully, and went to find them. On my way, I ran into Nathaniel, who avoided making eye contact.\n\nI rolled my eyes. \"Good evening, your Grace.\"\n\nHe looked up, startled, and I smiled. He scowled at me, and then snorted a brief laugh. \"I've heard you don't like being called a lady. Given that you outrank me...\"\n\nI grinned. \"That's fair. But I made you laugh.\" He smirked and I giggled. \"How are you doing, then, Nathaniel?\"\n\n\"Better than yesterday.\" He flushed and looked away. \"About that...\"\n\n\"No need. You'd been sedated. And you needed someone to talk to. I didn't mind.\"\n\n\"Thanks.\" He rubbed his forehead. \"And thanks for taking Kallian home. Not that I understand how you know me, or her, and where exactly you come from...?\"\n\nI considered. \"I think...maybe now's a good time to tell you my, uh, history, as it were. If you're interested?\"\n\nHe nodded.\n\n\"Alright. I think my brother is in the library -- I need to get something, and then I can meet you there?\"\n\nHe agreed and headed to the library; I quickly ran back the way I'd come, ducking into Alistair's room to rifle through some of my belongings. Finding what I was looking for, I headed back to the library.\n\nAedan, Alistair, Zevran, and Nathaniel all sat chatting quietly when I arrived, and it was nice to see them all getting along -- I'd been a bit worried that Aedan would hate Nathaniel no matter what, but Nathaniel's misfortune at his father's hands seemed to have made an impact. The two were laughing together, reminiscing about times when the families had visited, joking about pranks played on poor Delilah, the only girl. Theron stood by the door, silently watching as usual.\n\nThe talk stopped suddenly when I came in, and I paused, blushing. Alistair smiled tentatively at me, and I beamed at him. He tilted his head towards Aedan, and I nodded. Aedan wouldn't meet my eyes, and I walked up to him feeling awkward.\n\n\"I'm sorry,\" I blurted, and he looked at me, deep blue eyes startled. \"I wasn't trying to imply you didn't care. I just...\" I looked down. He reached out and grabbed me in a hug, and I relaxed into it, relieved. I put my arm out to Zevran and Alistair, and then we were having a group hug. Until Zevran made a dirty joke, and we sprang apart like we'd been electrocuted. Zev laughed uproariously, Alistair chuckled, and even Nathaniel smirked. Aedan just groaned theatrically and punched the elf's shoulder.\n\nI settled into Alistair's lap, kissing his neck and murmuring apologies while everyone else was seated; he squeezed me and told me not to worry about it.\n\nI turned to Aedan. \"I was thinking we should tell Nathaniel about...me.\"\n\nHe nodded. \"I agree. Especially given what you know about...\"\n\nHe didn't complete that sentence, but I knew what he meant. Amaranthine. Where the Architect and the Mother will go to war. I grimaced, and then took a deep breath.\n\n\"When I was born, somehow my mind, my consciousness, was sent to another world by a mage. We don't exactly know why, or how, but to my parents, I just never woke up after birth. Apparently I was breathing, but didn't respond. They took me to healers and mages, but no one could figure out what was wrong. We don't know what happened after that, but they never told Aedan he had a sister.\"\n\nAedan nodded in agreement, while a wide-eyed Nathanial looked at him skeptically.\n\n\"Meanwhile, I was living in another world, called Earth. I was found abandoned, and raised as an orphan. There was no magic, on Earth, no elves or dwarves, no darkspawn. They have only people, and the things that humans can build, and a bit of herbalism. Because of that, I guess, they've learned how to build some amazing things. Like this.\"\n\nI lifted my iPhone, which had been sitting in my lap, turning it on; Nathaniel gasped. I took a picture, and then a video, played some music, and then handed it to him to hold. He looked like it was a snake just waiting to bite, and we laughed.\n\n\"It is quite safe. Anyway, one of the things they built, sort of like that, was a way to interact with a pretend version of Thedas. Somehow, someone over there knew a lot about Thedas. There were books, and a game. You watched it on a bigger version of that screen, and could influence events in certain ways. So what is happening now, with the Blight...a lot of people on Earth actually know Thedas' future.\n\n\"I was one of those people...and then, one day, I woke up here. At first I assumed it was a dream, but I'm pretty sure it's not.\"\n\nAlistair chuckled. \"Only pretty sure?\" He made the words sound like an innuendo of some sort, and I elbowed him in the chest while he laughed.\n\n\"So I knew what your father was doing. Not the details, but...anyway. I knew about the Blight, knew Loghain would abandon the Grey Wardens at Ostagar. So, since I was stuck here, I decided to help, to try to...improve things, somehow. In the game...well, after the Blight, you returned from the Free Marches, angry with Aedan for killing your father because you didn't know what he'd been doing. You ended up being recruited into the Grey Wardens. I knew you were a good person, and I wanted you to know the truth so you wouldn't blame Aedan. That's why I wrote to you. I didn't even know if my letter would find you, because they never said where in the Free Marches you were, but I had to try. And I never dreamed your father would...\" I swallowed, whispering the next words, \"torture you.\"\n\nI hadn't given him time to respond, so I stopped, waiting to see what he would say. He seemed speechless, staring at my phone like it held some sort of answers.\n\n\"I know a little bit about you, if you'd like me to tell you?\" I prompted, racking my brain for what I'd learned in Awakenings.\n\nHe nodded, not really paying attention, but I decided to take him at his word.\n\n\"Well, let's see. You grew up at Vigil's Keep. Your father hated your mother, but I think her family were rich so he needed them. There was a portrait of your mother at the Keep that was only brought out when your grandmother came over. You would be paraded in front of the old lady while she'd point out every fault she could find, so you always felt you weren't good enough. You had a groundskeeper, an elf named Samuel, who used to call you 'Little Nate,' and a servant -- a nanny maybe? -- named Adraia, who was the only real mother you ever had.\n\n\"Your brother Thomas liked to drink too much and throw up on your shoes, and your sister, Delilah, had a crush on a merchant in Amaranthine, and hated Aedan for ruining a dress when you were little. Your grandfather joined the Grey Wardens, and you never saw him again; he had a bow that you used to admire, but your father hid it away. And you weren't allowed to explore the basements and cellars in the Keep -- for good reason, because there's a Deep Roads entrance down there, as well as an Avvar tomb full of demons and undead.\"\n\nHis eyes got progressively wider as my list went on. When I finished, he stared at me in complete silence for at least a couple of minutes.\n\nWhen he finally spoke, his voice was somewhat amused, but still a little skeptical. Who could blame him? \"That's quite the trick. Do you do parties or salons as well?\" He grinned to take the bite out of the words, but it was obvious they weren't entirely joking. \"And now you're going to be the Queen?\"\n\nIt hadn't occurred to me how it would look to Nathaniel, and with a deep blush I stuttered, climbing out of Alistair's lap. \"No, believe me, I have no plans to be Queen.\" I sat beside Alistair, who claimed my hand, lacing his fingers between mine.\n\nI glanced at Theron, who seemed to understand my question; he inclined his head slightly. Another quick glance at Aedan showed my brother nodding thoughtfully. I turned back to Nathaniel.\n\n\"There's something else you should know, but you must keep it a secret at all costs. No one can know. Will you promise?\"\n\nHe looked from Alistair to Aedan and back to me, all of our expressions deadly serious. I turned to Theron, who had double-checked the lock on the library door and was reaching up to pull off his helmet. Alistair gestured, and Nathaniel turned to look just as Theron swiped his golden hair off his face and smiled at Nathaniel.\n\nNate paled, leaping to his feet and taking a step forward, only to stumble to his knees, one hand covering his mouth, the other reached out in supplication.\n\n\"You...you...?\"\n\n\"Yes, me.\" Theron grinned, stepping forward and using Nathaniel's outstretched hand to haul him to his feet. \"It's good to have you with us, Arl Howe. But please, until after the Landsmeet, call me Theron.\"\n\n\"Theron?\" He nodded, looking dazed, and Theron grinned. \"But you were killed. By darkspawn, I was told.\"\n\nTheron chuckled. \"I get that a lot.\"\n\nI giggled. \"Rumours of his demise have been greatly exaggerated.\"\n\n\"But how?\"\n\n\"Sierra.\" Theron nodded at me. \"She saved my life at Ostagar. Duncan, the Warden Commander also survived because of her.\"\n\n\"Your Maj-\" Theron frowned, and Nathaniel cleared his throat and restarted. \"Theron - why haven't you taken your throne back? Why are you hiding?\"\n\nAedan answered, \"If he'd known Theron was alive, Loghain would have made sure he didn't survive to reach Denerim. He'd already hired assassins to kill the Grey Wardens; we couldn't take the chance he'd be successful in a second attempt to gain the throne through murder.\"\n\n\"Not to mention, I sort of needed to know if my wife was involved. Which it seems, more and more, she likely was.\"\n\nZevran nodded, though Aedan's frown didn't indicate total agreement. I wasn't sure what to think. The fact that Anora had stomped out of the room and refused to talk to anyone except Aedan and Eamon if she could get away with it wasn't helping. Theron's expression was pained, and Nathaniel winced in sympathy.\n\n\"Wait. You called me Arl Howe.\"\n\n\"Yes?\" Theron smiled.\n\n\"Don't be disingenuous. My father certainly lost any rights he had to the Arling, never mind the other titles he claimed.\"\n\n\"Tell me, Nathaniel: if you had known what your father was doing, would you have gone along with it?\"\n\n\"Never.\"\n\n\"And if you had been here?\"\n\n\"I'd have tried to stop him. Probably been killed before he even took over Highever.\"\n\n\"So remind me, then, why you should pay for the crimes of your father?\" Theron patted Nate's shoulder, then turned to pace. \"I've been reminded,\" he glanced at me and I smirked, \"that I cannot live my life comparing myself to my father and his legacy. Why should that be any different for you? The Arling was yours by rights when Rendon died. He's dead. The Arling is yours, if you want it.\"\n\n\"But...\"\n\n\"Prove me right, Nathaniel. Prove you aren't your father, if you feel the need to, by fixing his mistakes.\" Theron turned back to look at Nathaniel. \"You'll have a few houseguests, though. At least at first.\"\n\nNathaniel frowned, confused. \"Houseguests?\" I don't even think he noticed his agreement is being assumed. Theron isn't terrible at this manipulation thing.\n\n\"The Grey Wardens. After the Blight, we have reason to believe they'll be needed in Amaranthine.\"\n\nNathaniel looked at me, then glanced to Aedan and Alistair. We all nodded encouragingly.\n\n\"Thank you.\" He took a knee in front of Theron again, a lot more gracefully. \"I, Arl Nathaniel Howe, do hereby swear my fealty and loyalty to you, Cailan Theirin, and to your heirs, and pledge myself to live honourably and prove your faith in me was not misplaced.\" Theron pulled Nate up, and the two men shared a brief, manly hug. \"I will gladly host the Grey Wardens for as long as they choose to stay in Amaranthine.\" He turned to me. \"I hope that, at some point, you can help me to understand why they will be needed there?\"\n\nI nodded. \"Does that mean you believe me?\"\n\n\"Hard not to,\" he gestured to my phone, \"especially when my King vouches for you, my Lady.\" I wrinkled my nose in distaste, and he chuckled. \"Sierra. Will you be accompanying the Wardens to Amaranthine?\"\n\nAlistair wrapped his arm around my waist possessively, sliding me back into his lap, and I laughed. \"I go where my husband goes.\" I tilted my head towards Alistair. \"Literally, whether I want to or not. So, probably. I assume.\"\n\n\"Husband?\"\n\nTheron chuckled. \"Yet another secret. Please, Nathaniel, we must ask that you keep this - all of this - to yourself. No one else can know about Sierra, and I must remain anonymous until the Landsmeet.\"\n\n\"I swear, no one will learn of this from me.\" He muttered, \"Honestly, who'd believe me anyway?\" and we all laughed."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-103-104-1"
}