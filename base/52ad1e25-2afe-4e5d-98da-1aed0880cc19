{
    "title": "Succubus Summoning 113",
    "pages": [
        "/**AUTHOR'S NOTE\n\nThis is a continuation of the Succubus Summoning series that begins with \"Succubus Summoning 101\"*/\n\nThe air was different.\n\nIt was a subtle change, but Phil still sensed it.\n\nFor as long as he'd been held captive in the succubi's castle there had always been the ever present aroma of sex and arousal in the air. The scent was still there, only now it was a lot stronger. The air was thick with it. It caught hold of him and started a niggling little itch in his balls. It wasn't as if he was lacking for sex at the moment. On the contrary, he was getting so much it was killing him.\n\nPhil looked out of the window. The sky had also changed. It was a darker, more sensual shade of pink. The orbiting celestial bodies were different as well. The fiery planet and giant iron ball were gone. In their place were pastel balls of red and pink, and what looked like great gossamer bubbles.\n\nSo quiet as well. Where were the wargen? Normally the grotesque monsters would be shuffling around the grounds. An expectant hush had descended over the entire castle.\n\nThe silence was broken by the sound of flapping wings. Phil backed away from the window as Verd\u00e9 landed on the sill and gracefully stepped into the room.\n\n\"Hello fledgling,\" she breathed. She advanced on him, her hips swaying.\n\n\"Um hi,\" Phil said. He backed away until his calves came into contact with the side of the bed. \"What do you want?\"\n\nWhy did he bother asking that question? He knew what she wanted. It was the same thing she always wanted. She was a succubus; she wanted to fuck him. It wouldn't be a bad thing, but succubi were daemons; they used sex to suck out the life force of their victims. Phil knew this and yet his treacherous cock was still rock hard and twitching in anticipation. It didn't help that -- horns, wings and tail aside -- Verd\u00e9 was absolutely gorgeous.\n\nAnd completely naked.\n\n\"Do you know what that sky means, fledgling?\" Verd\u00e9 asked, still advancing on him.\n\n\"No,\" Phil replied, inching away from her around the bed.\n\n\"The spheres are in conflux. The conjunction is upon us. The dominion of Lust is unbroken,\" Verd\u00e9 continued.\n\n\"What does that mean?\" Phil asked.\n\nThe geography of Hell was a complete mystery to Phil. It changed every day.\n\nVerd\u00e9 continued to slide towards him. She fondled her ripe breasts and pouted full, luscious lips.\n\n\"While the planes of lust are aligned there is no outside influence from the other dominions of sin. My sexual desires and those of my sisters are increased tenfold. The wargen won't approach the castle today. They're hiding in the woods.\"\n\n\"Tenfold?\" Phil asked.\n\nVerd\u00e9's arousal was clear to him. Juices dribbled out from between her labia and ran down her inner thigh. She smiled and beads of her aphrodisiac venom formed where her fangs rested on her sumptuous lips.\n\n\"Now is the time to show you can fly fledgling,\" Verd\u00e9 said. \"You have no time left.\"\n\nPhil understood. The castle contained five succubi with turbo-charged libido and he was the only available male.\n\n\"Smogglerfoggum!\"\n\nPhil dashed for the door.\n\nFive succubi in heat. There was no way he'd survive that. He had to get out of the castle and take his chances in the forest.\n\nHe got halfway across the courtyard before Rosa swooped down out of the sky and gathered him up in her embrace.\n\n\"Fleeing prey, my favourite,\" Rosa laughed as she carried him up into the lurid pink sky.\n\nPhil struggled, but Rosa wrapped her arms and legs tightly around him. She crushed her soft lips against his and kissed him until the fight left his body. His body went limp in her embrace.\n\n\"We've never fucked while flying have we fledgling,\" Rosa laughed as her broad wings held them motionless in the sky. \"This is going to be fun.\"\n\nPhil's thoughts were clouded and his limbs felt weak. Rosa's hot kiss had drained all the resistance from him. Her powerful thighs wrapped around his waist and he shivered in pleasurable surprise as his erection slid into her moist vagina.\n\nHot.\n\nHot and tight.\n\nRosa's body boiled with lust. Her heat enfolded his body and overwhelmed his senses. Still flapping her wings to keep them airborne, she thrust her hips against him. Her lust was contagious. Phil pushed back against her, feeling his cock slide against the hot walls of her pussy.\n\nRosa laughed with wild abandon and swooped around the black stone minarets of the castle. The horizon and the sky became one dizzying blur to Phil as he span in Rosa's embrace. Faster and faster she flew, until Phil felt the wind streaming through his hair and down the naked skin of his back. Higher she took them, until the castle became toy sized beneath them. They were suspended in the sky, their bodies slamming together in passion.\n\nShe planted another fiery kiss on Phil's lips as their bodies slowly turned and ascent changed into a steep dive. Rosa cried with passion as the wind whistled past them. Phil's heart thudded in his throat as they hurtled downwards. He saw the dark stone walls of the castle rushing up to meet them.\n\nDid Rosa know? Did she care? Her wings were folded back against her body as they continued their steep dive.\n\nThe black walls and spiky towers filled Phil's vision now and still Rosa showed no signs of slowing down. Too fast. She wasn't going to be able to pull up in time. They were going to be dashed against the walls. They were going to die.\n\nThey were going to....\n\nThey didn't hit.\n\nPhil opened his eyes and almost wished he hadn't as narrow stone walls whizzed by in a blur. They were plunging through some kind of chimney system inside the castle. Rosa navigated the turns and sudden forks with a speed that left Phil breathless. Mere inches separated his naked flesh from the hard stone as it zipped past.\n\nThey fell deeper through the castle until the walls opened out into a cavernous pentagonal room. Phil saw a floor covered in blood red sheets and scattered with pastel cushions rushing up to meet them before his view changed with a lurch. Rosa had flipped him mid air and he was now looking up at a ceiling covered in swathes of plush velvet and embedded with large mirrors.\n\nTheir descent abruptly slowed as Rosa opened her great red wings above him. Not enough Phil thought. They were still falling too quickly. He was still going to hit the ground har---.\n\nThey hit the floor with a soft whumpf. Sheets and pillows were thrown up in the air by the impact. The floor gave beneath him and he realised he'd landed on a gigantic bed, luxuriously soft and very deep. He sank into the surface with Rosa's hot body riding on top of him, the impact driving his cock deeper into her tight pussy.\n\nTheir downward momentum was halted and then reversed as the bed sprang back. Phil was bounced upwards and into Rosa's embrace. Her pussy squeezed around his cock and Phil groaned as he exploded within her, the head of his cock wedged deep into her hot flesh. At the same time Rosa's vagina shuddered and shivered around his member as she too was claimed by a violent orgasm.\n\nShe rode him as the bed swayed and undulated beneath them, her hot pussy fluttering around his cock. Phil bucked and thrashed in helpless pleasure as she stretched out his orgasm until the ecstasy became almost unbearable. His balls convulsed as her dripping vagina hungrily sucked the seed from his body.\n\nPhil thought he might expire from the pleasure, but gradually the wild pitching motions of the bed died down and his orgasm slowly petered out with it. He gasped great lungfuls of air as his jangling body recovered from the release.\n\n\"Whew, that was good,\" Rosa said. Beads of sweat spilled from her forehead and formed on her full breasts.\n\nOnce Phil got his breath back he took a look around at his surroundings. He was in a large pentagonal room with stone walls. The entire floor seemed to be taken up with this gigantic bed. Soft cushions and pillows were piled high all around him.\n\n\"Well done Rosa. I see you've captured our little plaything.\"\n\nPhil looked up and saw N\u00ffte lying in a large alcove set in one of the walls. It was the first time he'd ever seen her completely naked and her pale white body was breathtaking. Her jet-black hair was untied and rained down on her pale shoulders like a waterfall of shadows. The inviting curves of her creamy white breasts rested against the floor of the alcove.\n\nShe was not alone.\n\nNurse Honey sat in another alcove on the other side of the room. She smiled down at Phil, her face that strange cross of angel and porn star. Glistening fluids oozed from her exposed pink nipples and dribbled over the luscious curves of her full breasts.\n\nBetween them, in an alcove of her own, sat C\u03adr\u03bcl\u0259a. This wasn't the C\u03adr\u03bcl\u0259a that resembled the innocent child, but the adult C\u03adr\u03bcl\u0259a with the improbable curves of a comic-strip goddess. Her blue hair cascaded down her back in a luxuriant mane. Promises of forbidden lust glittered within the depths of her ruby eyes.\n\nVerd\u00e9 was here also. There was a hint of sadness in her face.\n\n\"Too bad little fledgling,\" she said. \"I don't think you'll ever get your chance to fly.\"\n\nAll five of them, their eyes gleaming with lust, Phil noted.\n\nHe was dead for sure.\n\nHe didn't feel Rosa's fangs enter his neck. He only realised she'd bitten him when he felt her aphrodisiac venom pour into his bloodstream. He lay there, his eyes wide, gasping and twitching as Rosa continued her venomous kiss. His blood heated up until it felt like warm lava running through his veins. His balls shivered and convulsed. It was a little uncomfortable to start with as his balls felt dry and depleted, but then the venom took hold and they began to swell up like ripe juicy plums.\n\nRosa murmured appreciatively as she caressed his sac.\n\n\"That will keep you going for a while,\" she breathed in his ear.\n\nThe bed swayed as the other four succubi dropped down on it.\n\nThis was really bad. Phil knew it was really bad. The message hadn't reached his cock though. That was standing up as straight and as hard as a bar of iron. Sparks crackled across the pleasure receptors in his brain as Rosa's venom coursed through him.\n\n\"The five of us all together,\" Verd\u00e9 said. \"Our little fledgling really is in for a treat.\"\n\n\"Do you remember the young warlock that accidentally ported himself here during the last conjunction?\" Nurse Honey said.\n\n\"Mmm, he was tasty,\" Rosa said.\n\n\"How many times did we make him come?\" N\u00ffte asked.\n\n\"Twenty-seven,\" C\u03adr\u03bcl\u0259a answered.\n\n\"Halfway through he thought he'd died and this was heaven,\" Nurse Honey said.\n\n\"He smiled even as I drained the last drops of fluid from his body,\" Rosa said.\n\nPhil noticed the skulls then. There were hundreds of them, all piled in alcoves around the edges of the room. Was this a boudoir or a mausoleum? Phil thought, a chill running up his spine. Candles, coloured and scented, were mounted on and inside them. Molten strands of gaily coloured wax formed a vivid contrast with the macabre objects they dribbled over.\n\n\"Don't be frightened,\" Verd\u00e9 said. \"They died in bliss, as will you.\"\n\n\"What shall we do first?\" C\u03adr\u03bcl\u0259a asked.\n\nN\u00ffte whispered in a language Phil didn't recognise and sounded so foul the words took flight from her mouth like plague-ridden beetles. Shadows coagulated out of the air and wrapped tightly around Phil's arms and legs. He was bound, spread-eagled, to the bed by strips of solidified darkness.\n\n\"Now now,\" Verd\u00e9 said. \"I thought we agreed to play nice.\"\n\n\"Of course dear Verd\u00e9,\" N\u00ffte replied, her voice slippery like scented oil. \"I won't put so much as a single scratch on our little fledgling.\"\n\nShe ruffled Phil's hair with a black-taloned hand.\n\n\"Nurse Honey, would you care to join me for a little smothering?\" N\u00ffte asked.\n\n\"Oh, I do enjoy breath play,\" Nurse Honey replied. She lay on Phil's legs, her soft breasts resting on his thighs.\n\nN\u00ffte stood over Phil's head. He could see right up between her legs to the moist gash of her vagina. It was dripping with her juices. He watched as it slowly descended towards him, her pale white cheeks filling his view.\n\n\"I'd recommend taking a deep breath about now,\" Verd\u00e9 said. She rested on her elbow next to him. \"It might be a while before you get another.\"\n\nPhil followed her advice just as N\u00ffte's buttocks pressed down on either side of his face. His nose and mouth were smothered beneath her flesh. There was nothing Phil could do. He lay there, bound and helpless, as N\u00ffte sat on his face. He couldn't see or breathe.\n\nNurse Honey moved up until her breasts were level with his groin. She squashed them against him and he felt a warm sticky fluid flood out over his cock and balls. A warm glow emanated from his crotch as her exquisite honey sank into his flesh. The pleasure grew greater as Nurse Honey squeezed the soft pillows of her breasts around his straining member and moved them up and down. Phil moaned into N\u00ffte's smothering pussy as Nurse Honey slathered his cock in syrupy liquid and buried it in her cleavage.\n\nAs blissful as the pleasure was, Phil was running out of air. A tickling sensation was building in his lungs. He opened his mouth to suck in air and got only a taste of N\u00ffte's spicy juices. Her pussy was suffocating him.\n\nNurse Honey continued to masturbate him with her breasts. She pushed her nipples inwards and squirted thick dollops of warm honey over his balls.\n\nPhil felt light-headed. He tried moving his head to the side to steal a breath. N\u00ffte simply shifted position so his face stayed wedged between her cheeks.\n\nHe was going to pass out.\n\nNurse Honey pressed her breasts together firmly around his cock and rubbed them up and down his shaft. Her soft pillows stroked up and down his cock.\n\nHe was going to come.\n\nPhil squirmed helplessly beneath the two demons, his lungs burning for air, his balls aching for release.\n\nN\u00ffte lifted her ass a little, enough for him to steal a quick breath. At the same time his balls contracted and his hips bucked as he spurted a thick load of cream over Nurse Honey's neck and breasts. Relief at both the incoming oxygen and ecstatic release flooded his system.\n\n\"Such an eager boy,\" Nurse Honey purred.\n\n\"You like being smothered by my pussy don't you,\" N\u00ffte said. \"I think I'll keep you under a little longer.\"\n\nShe sat down again, hard. Phil only managed a quick gulp of air before his nose was once again pressed against her moist pussy. She rocked on his face, grinding her sex against him. The little air Phil was able to inhale was saturated with her arousal. The scent made him light-headed and caused his balls to itch.\n\nHe felt someone plant kisses up his inner thigh. The kisses alternated between hot and cold. One boiled with ardent desire, but then the next was as cool and refreshing as a mountain spring. The kisses moved up his leg until he felt plush lips press against the twitching head of his cock. The constant temperature changes sent shivers of pleasure down his shaft. He writhed under N\u00ffte's pussy as the lips teased his cock.\n\nN\u00ffte allowed him another sex-saturated breath as C\u03adr\u03bcl\u0259a took his cock all the way into her mouth. Phil squirmed as the shock sent electric shivers crackling through his body.\n\nHot.\n\nCold.\n\nThe conflicting sensations drove his mind crazy. He writhed helplessly as C\u03adr\u03bcl\u0259a's tongue tickled up and down his shaft. He was startled when the tip of another tongue tickled against his member. He was in C\u03adr\u03bcl\u0259a's mouth, how...\n\nThen he felt another, and another, and another, until a multitude of tongues were tickling against his sensitive skin. His cock was surrounded by a snake's nest of warm, throbbing tongues. They licked his shaft in synchronised waves, bearing him up like a cork in rich champagne as he floated and swirled in languid bliss.\n\nN\u00ffte pressed her ass firmly into his face, completely shutting off all air. Black spots danced across the lobes of Phil's brain.\n\nC\u03adr\u03bcl\u0259a's many tongues coiled around his cock and tugged.\n\nPhil moaned into N\u00ffte's suffocating ass and his hips spasmed upwards as he ejaculated explosively into C\u03adr\u03bcl\u0259a's mouth. She gulped down his seed and used her lapping tongues to tease out the orgasm until a secondary shock ran through Phil. He shuddered as he pumped a thick stream of cum down C\u03adr\u03bcl\u0259a's waiting throat.\n\nThe lack of oxygen and violence of the orgasm was too much for Phil. He fainted.\n\nHe wasn't out long.\n\nRosa breathed lightly in his ear, bringing him back to consciousness.\n\n\"No sleeping on the job fledgling.\"\n\nShe and N\u00ffte lay on either side of him, their hot bodies pressed against his. His head was currently cradled in C\u03adr\u03bcl\u0259a's lap.\n\n\"Wasn't my fellatio simply divine?\" she smiled down at him.\n\n\"You cheat,\" Rosa said.\n\nC\u03adr\u03bcl\u0259a stuck her tongue out at the other succubus. The end split into two waggling forks.\n\n\"Would you like to take a turn?\" N\u00ffte asked Verd\u00e9. Her black-clawed fingers fondled Phil's cock and balls.\n\n\"Mmm, yes please,\" Verd\u00e9 replied.\n\nShe crawled up over Phil's legs on all fours, her breasts swaying hypnotically beneath her. He was no longer bound by N\u00ffte's magic, not that it made any difference. He wasn't getting away any time soon.\n\n\"I think he needs a little perking up,\" Verd\u00e9 said, pouting at Phil's flaccid cock.\n\n\"Allow me,\" C\u03adr\u03bcl\u0259a said.\n\nShe lay Phil's head back down on the bed and then leant over and pressed her soft lips against his in a gentle kiss. As she broke off, she pursed her luscious lips and blew a cloud of perfumed blue smoke into Phil's face. His head was enveloped. He inhaled and immediately felt light-headed and giddy, as if he was drunk but without any of the bad effects. Lust surged through his veins as her perfume diffused through his body. It was the same as the venom in Rosa's and Verd\u00e9's fangs, only in a gaseous form, but by the time he realised this he was already breathing in a second fragrant cloud. It wrapped his mind in a comfortable fog.\n\nA tongue tickled lightly at his scrotum. Verd\u00e9 kissed then drew one of his balls into her mouth. Phil squirmed in pleasure as she sucked it. He didn't feel her fangs go in, only the explosion of pleasure as her venom flooded his sac. His balls swelled up immediately. His limbs trembled as the extra succubus venom overloaded his nervous system. His cock went from limp to rock hard in an instant.\n\nVerd\u00e9 smiled down at him, her emerald eyes sparkling as she lapped a drop of pre-cum oozing from the tip of his twitching cock.\n\n\"Better,\" she said.\n\n\"I can really perk him up,\" N\u00ffte said.\n\nShe turned Phil until his ass was exposed. Her black tail reared up over his legs. The end was bloated with venom like a scorpion's tail. A noxious black liquid, smelling like the sweet nectar of a night blooming flower, oozed from the tip. Phil's eyes widened as he realised exactly where she wanted to insert it.\n\nVerd\u00e9 wagged a disapproving finger.\n\n\"Our fledgling is a little too innocent for that,\" she said.\n\n\"He's a bit too tight,\" Rosa added.\n\n\"That's easy to fix,\" Nurse Honey purred. \"He just needs a little lubrication.\" She rubbed erect nipples against Phil's buttocks.\n\nBefore Phil could protest he was rolled onto his front with N\u00ffte underneath him.\n\n\"While you're here,\" she whispered like silk into his ear.\n\nShe opened her legs and Phil's cock slid smoothly into the tight sheath of her vagina. Getting out would not be so easy as she crossed her legs over the back of his thighs, trapping him between her legs. Phil wasn't that keen to leave anyway. Her pussy was exquisite; tight and ever so tactile. She rocked her hips beneath him and the muscular walls of her vagina stroked up and down his shaft with the dexterity of a hand. She delicately nibbled the lobe of his ear.\n\n\"He is very tight isn't he,\" Nurse Honey commented. A deft finger gently massaged the sphincter muscle of his anus. \"We need this to be more relaxed.\" Phil shivered as he felt Nurse Honey probe his ass with the tip of her tongue.",
        "Soft hands picked up Phil's left hand. Supple lips, alternating between hot and cold, sucked on his index finger.\n\n\"You silly boy,\" N\u00ffte whispered in his ear. \"Your body will not be able to withstand the five of us together.\"\n\nShe wrapped her arms around him and pulled him down until his chest was squashed against her heaving breasts. Her lust enfolded and overwhelmed him. His body was no longer his to control as he thrust into her tight pussy.\n\nNurse Honey pressed a heavy breast between Phil's buttocks and squirted her thick honey. She murmured soothing nothings as she massaged his sphincter with light circular motions. Phil jolted forwards as he felt her finger, lubricated with her thick honey, slide into his ass.\n\nBeneath him N\u00ffte flexed her hips and legs, drawing Phil's cock into her as deep as he could go. Her walls squeezed around his cock, holding him snugly in place as they began to suck. Phil's whole body stiffened, his nerves jangling like wires as he felt another powerful orgasm approaching.\n\n\"Fill me,\" N\u00ffte breathed in his ear.\n\nAt the same time Nurse Honey pressed a nipple against his ass and began to pump her warm viscous honey inside him.\n\nPhil cried out as another orgasm crushed him in its grip. He reared up over N\u00ffte, his spine flexing as if it had been wired to an electric current, his hips driving hard against her as he spurted cum deep into her hot flesh. She accepted it and her walls squeezed tightly around him, sucking him and teasing out the orgasm longer and longer until finally spent, Phil collapsed on top of the soft pillows of her breasts.\n\nHis body was coming apart. His breath came out in ragged wheezes, like he'd run a marathon. He felt drained, weak. And he knew it was nowhere near over.\n\n\"Is he ready?\" N\u00ffte asked.\n\n\"Relaxed and lubricated,\" Nurse Honey replied. She kissed his buttock.\n\n\"Good,\" N\u00ffte said.\n\nShe flipped Phil over so he was lying on his back on top of her, his shoulders resting on her breasts. She hooked her legs up over his and then forced his knees apart. Her tail, the tip swollen with venom, reared up between his legs like a striking cobra. Phil's eyes widened but he didn't struggle, he had no energy left.\n\n\"You'll enjoy this,\" N\u00ffte whispered in his ear. Her tail playfully boffed his erection back and forth. \"I'm going to make you come like a fountain. Verd\u00e9, would you care to drink of our delicious little fledgling?\"\n\n\"Ooh yes,\" Verd\u00e9 said, standing astride him. \"My pussy is so thirsty.\" Hers and N\u00ffte's tails briefly entwined, like two kissing snakes.\n\nShe stood above him and rubbed her clitoris. Her juices ran out down her inner thigh. The scent of her arousal rolled over Phil like a wave. He inhaled and his mind fell into a deep bed of fragrant blossoms.\n\nShe lowered herself down on him with teasing slowness. She stopped, letting her labia kiss his glans. Her lips brushed him at first, then a gentle press, enough for him to feel the warmth of her body. She bounced, letting just the head of his cock sink into her fleshy folds. Phil was eager for her to continue the descent, to wrap his whole length in her succulent heat, but she teased him, holding her body above him as her eyes glinted with amusement.\n\n\"So eager to race to his doom,\" N\u00ffte said, her legs stopping him from thrusting up into the luscious vagina hanging above him.\n\n\"They always are,\" Verd\u00e9 replied.\n\nShe slid down his cock with exquisite slowness, wriggling her hips as she descended to heighten his pleasure. He sank into her moist folds and an upwelling of pleasure gushed over his body. She stared directly into his eyes as her vagina engulfed his cock completely.\n\n\"I would have liked to have shown you the exquisite possibilities of pain,\" N\u00ffte breathed in his ear. \"But you're not ready so I'll be gentle.\"\n\nHer tail wormed into his ass, lubricated by a thick layer of Nurse Honey's syrup. Phil bucked upwards, but this served only to drive his cock deeper into the waiting embrace of Verd\u00e9's pussy. The succubus on top of him sighed and pushed back against him. Phil was trapped between two impossible pleasures as N\u00ffte's tail wriggled in his ass while Verd\u00e9 rose up and down on top of him.\n\nThe other succubi were not about to be left out.\n\nC\u03adr\u03bcl\u0259a returned to sucking his fingers. Her supple lips crackled with electric charge as they took his fingers into the warm interior of her mouth. Her tongues slithered and coiled around each digit in turn.\n\nNurse Honey lifted his right foot and began to tickle the sensitive sole with an erect nipple. She sucked each toe in turn, wrapping her soft lips around them as she drew out the tension in his foot.\n\nPhil's other hand was trapped in the moist space between Rosa's thighs. She worked some magic and his hand gained a mind of its own. Phil didn't order his fingers into the hot cavity of Rosa's cunt, but he still felt the pleasure as her pussy sucked them with the dexterity of a mouth.\n\nToo much. Too much pleasure.\n\nVerd\u00e9 rocked her hips on top of him, the slick flesh of her vagina rubbing against his cock as he plunged in and out of her. N\u00ffte's tail thrust back and forth in his ass, the tip tickling against his prostate and sending little shivers of pleasure up his spine.\n\nToo much.\n\nHe was floating. No, he was glowing. No, he was floating on a glowing pool of bliss. Warmth was welling up inside him and cascading through his body.\n\nRosa leant over and fastened her hot lips over his for a wet kiss. As she drew back she pursed her lips and Phil felt something leave him and enter her.\n\n\"You're a delicious feast,\" Rosa said before leaning down for a longer kiss that left Phil breathless.\n\nHe felt her pussy spasm around his probing finger, flooding his hand with her hot juices as she came.\n\n\"We feed on the spirit as well as the flesh,\" C\u03adr\u03bcl\u0259a said, positioning his other hand between her legs as she leant over him.\n\nC\u03adr\u03bcl\u0259a seemed determined to outdo Rosa as she brought her lips down for her kiss. Her tongue wriggled between Phil's lips like an electric eel. She exhaled more of her aphrodisiac perfume directly into Phil's lungs.\n\nPhil felt his willpower draining into the demons. They were feeding off the pleasure they were causing him and drawing out his spirit with it. The fight and the fear were ebbing from his body until all that remained was a languid torpor.\n\nHe looked up in the mirror and saw a scene that could only belong in the most opulent of sex films. Was that really him lying there, naked, while five visions of loveliness sucked and fucked him to higher planes of bliss? What he saw was so far beyond even the sweatiest, most furtive of his night-time imaginings he knew it had to be real.\n\nWas he really that thin?\n\nHe looked further along the reflection of the bed and his blood chilled when he saw a skeleton lying spread-eagled on the red sheets, the bones arranged in a similar pose to the one he was in now.\n\nHe had to... He had to...\n\nPhil's view was blocked by the round globes of C\u03adr\u03bcl\u0259a's and Rosa's breasts as the two succubi came together in sapphic embrace. They giggled as they kissed, their ripe breasts hanging invitingly above Phil. They lowered their bodies and jiggled their soft boobs in his face.\n\nWas it so bad? All he had to do was surrender to the pleasures they were giving him.\n\nNo. He had to resist. He didn't want to die, even in ecstasy.\n\nHe had to...\n\nOh...\n\nN\u00ffte's tail vibrated pleasantly in his ass. Verd\u00e9's vagina squeezed around his cock. He squirmed as waves of ecstasy washed through him.\n\nHe couldn't fight. His will was draining away, sucked out by their exquisite lips and pussies. He was melting into a puddle of purest bliss.\n\n\"Ready?\" N\u00ffte asked.\n\nThe point of her tail scratched against his prostate. The tip was wickedly sharp.\n\n\"Yes,\" Verd\u00e9 sighed.\n\nShe slammed her hips against Phil faster and faster. His cock plunged back and forth into her slippery flesh with greater speed. Her breasts swayed back and forth as she bounced on Phil's groin. Phil felt an itch grow in his balls until it overwhelmed all other sensation.\n\nHe was going to...\n\nHe was going to...\n\nN\u00ffte plunged the needle tip of her tail into Phil's prostate. The venom sac in her tail pumped its full contents right into the quivering heart of the gland.\n\nAh... Fuck...\n\nThere was no pain. Instead it felt like a bombshell of sexual ecstasy had just detonated inside Phil's body. Phil's eyes glazed as he erupted up into Verd\u00e9 like a volcano. His legs rattled against the sheets as he thrust his hips upwards. It felt like a geyser of boiling cum was rocketing out of him.\n\nVerd\u00e9 sat right down on him, her quivering labia pressed tight against his crotch as her vagina swallowed the full length of his cock and sucked it with powerful, organic pulses.\n\nPhil was collapsing in on himself. He fountained both cum and energy into Verd\u00e9's greedy pussy. He had to stem the flow before he was completely drained, but he couldn't. N\u00ffte continued to urge him on with her thrusting tail. His poisoned prostate twitched and pulsed like a pounding heart, each beat pumping more of his life out of his body. \n\nHe was dying.\n\nEven Verd\u00e9 was taken aback by the force of his ejaculation. Her cheeks reddened as her own orgasm overtook her. She threw back her head, unfurled her wings and yowled like a cat. Phil felt her pussy explode around his cock with wet bursts. He was buffeted inside her as powerful tremors ran through her body. The force of her orgasm ripped him along like a piece of flotsam in foaming rapids.\n\nHe thought the flow would never end, that he'd keep spurting his energy into the succubus's body until his body dried up like a shrivelled cadaver, but again Verd\u00e9 turned off the tap before she emptied him completely. Her own orgasm subsided and she smiled down at him. Her cheeks were flushed and her body was covered in a thin sheen of perspiration.\n\n\"That was beautiful,\" she whispered.\n\nPhil passed out. \n\nAgain he wasn't out for long.\n\nHe opened his eyes and saw Nurse Honey's angelic face before him, her full lips pursed as she blew a stream of breath into his face. She lay on top of him, her voluptuous breasts lying on his chest, her warm thighs resting around his. She pursed her full lips again and blew another soft breath into his eyes.\n\nNo, not Nurse Honey now.\n\nThe realisation hit him like plunging through the icy surface of a frozen lake.\n\nHer white hair hung down on either side of her face like drifts of Arctic snow. An elaborate set of horns threaded through it like a crown. Great white wings, glossy like latex, were stretched above him.\n\nNot Nurse Honey, Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n!\n\n\"It's time,\" she said, her lips curling up in a cruel smile.\n\nTo be concluded... "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "warlock",
        "face sitting",
        "smothering",
        "group sex",
        "orgy",
        "blow job",
        "magic"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-113"
}