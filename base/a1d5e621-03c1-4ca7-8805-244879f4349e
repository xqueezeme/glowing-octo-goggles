{
    "title": "Crucifix: Temptation Ch. 06",
    "pages": [
        "Chapter 6. RETRIBUTION FOR SINS OF THE FLESH\u2014REUNION OF THE FLESH\n\nBrody considered not answering the phone but knew he had to. \"Sorry.\" He kissed Claudia, not wanting to give up the moment but knowing that he had to. He slowly pulled himself from her and noticed they were both dripping with sweat. He glanced at the clock. Eleven fifteen. He got the phone from his desk and cleared his throat, \"Brody Anderson.\"\n\nClaudia sat up and grabbed the blanket off the couch across from her. She was totally exhausted. But thoroughly content. She lay back down and closed her eyes. She halfway heard Brody talking. Her mind and body were still reeling from what had just happened. In her mind's eye, she relived his face above her.\n\n\"Yes? Can I help you?\" He blew Claudia a kiss and tried to focus on the voice on the phone. \"Yes, she works for my family.\" He glanced down at Claudia and saw that she was almost asleep. \"Could you hold on just a second?\" \n\nHe put on his jeans and picked back up the phone. \"Florida?\" Why was someone from the Florida State Highway Patrol calling for Claudia? \n\nClaudia heard 'Florida' and her eyes flew open. \"Who is it?\"\n\n\"Someone with the Florida Highway Patrol. Why are they calling you?\"\n\n\"My family is in Florida.\" She reached for the phone, \"Remember. I told you the first time I met you.\" Claudia took the phone and put it to her ear, \"This is Claudia Fitzpatrick.\" Brody watched her as she listened to the voice on the other end. He saw her elated expression fall into a blank emotionless fa\u00e7ade. \"Yes, I understand. Thank you.\" \n\nShe handed Brody the phone and he listened to the receiver. Whoever it was had hung up. Claudia started putting on her clothes. \"What's wrong, Claudia?\" She didn't answer. \"Claudia, please tell me what's wrong?\"\n\nShe walked to the studio door and turned to him, \"My mother and father were killed this afternoon. The lady said they've been trying to reach me. My brother was in the car, too. I have to go to him.\" She turned and walked away. Claudia reached to pull her long hair out from inside her shirt and it got caught on the clasp of her necklace. \n\n\"Oh, God. Claudia.\" Brody grabbed his own shirt and ran after her, \"Claudia, wait. Please.\" \n\nClaudia turned and looked at him. She was not the same person he'd been holding only moments ago. She tried to pull the hair out of the clasp with no success. With little care, she yanked the chain from her neck, pulling some hair with it and threw it on the floor. Claudia looked at the piece of jewelry as it lay there and walked away.\n\nShe didn't even pack. She just showered and then waited for the cab to come and take her to the train station. \"Claudia, please let me take you. The girls are asleep. It's alright. Please let me take you.\" But she wouldn't have it. Brody sat with her and held her. She was an empty shell. He tried to talk to her, but she'd turned to stone and didn't want to say or hear anything. \n\nWhen the taxi arrived, Brody walked her to the green minivan and held the door open for her. She turned just before she got in and kissed him one last time then whispered so quietly, he could barely hear her, \"I love you, Brody Anderson.\" \n\nTears streamed down his face, as he said, \"I love you, Claudia Fitzpatrick.\" She sat and pulled the door shut. He stood there in the dark of that night and watched as the red taillights disappeared into the inky nothingness. She was gone.\n\nBrody walked numbly back to his studio, stopping only to pick up Claudia's crucifix. If God was punishing him, punishing them, He was doing one fucking good job. Brody fell onto his couch and grabbed the blanket. He could still smell her on it. The next thing he knew, the bright August sun was stabbing at his sleeping eyes. \n\nHe stretched and was greeted with a painfully stiff neck. As Brody went to rub the muscle, he realized he still had Claudia's crucifix in his hand. So it wasn't just some beautiful dream that had morphed into an unspeakable nightmare. It did happen. He'd had her, made love to her, tasted her, become one with her and now, she was gone. \n\nHe felt as though something had been ripped from his soul and he was drowning in sorrow. Only there was neither a lifeline nor a shore just a vast cold ocean of sorrow. When Nina and the boys asked where Claudia had gone, Brody told them about her parents. Nolan and Nicholas were upset that she'd left without telling them goodbye and Brody tried to explain that she couldn't.\n\nNina, sweet Nina. She could tell from the look on her father's face that there was more behind his words. She could see the sadness in his green eyes. Though she wasn't exactly sure what had actually happened between the two of them, she knew that look. It was the same look she'd had when Lou-Lou, her poodle had been hit by that car last year. It was the type of sadness one has when they know that the thing they adored was gone forever. \n\nAs for Brody, he had to cope. The world was still spinning and wasn't going to stop for him. He, too, was a walking talking shell of a person. \n\nBrody didn't really care about what happened in the following months. Summer ended and the kids went to school. He was alone all day so he drew. Drew like a madman. Dark, hard, images. His editor loved it. But Brody hated every single image. \n\nBrody was trying so hard to put Claudia out of his mind. But it was hard. Especially when he worked. He kept finding little sketches of her. And then there was the painting. It hurt so badly. \n\nAnd then he had to deal with Shannon. She'd come back after about five weeks later, professing her undying sorrow at what she'd put him through, begging him to take her back. But he wouldn't have her. In fact, when she arrived at the house and found that the locks had been changed she was furious. \n\nShe pulled out her cell phone and looked up to the studio window, \"Goddamn it, Brody, open this fucking door now. This is my house, too. Listen you mother fucker, if you don't open this goddamn door, I'll call the sheriff.\" She saw Brody stand up and look out the window and down at her.\n\nWhen Brody opened the door he stared at her as though she'd stepped out of some dark pit. In the back of his weary, beleaguered mind he prayed that Claudia would come back, or call, or write. And if she did, and Shannon was there, Brody feared that she'd walk away from him again.. But Claudia didn't come back. She walked out that night and never looked back.\n\nAs he stood there in the doorway looking at her with less than an ounce of care or concern, Shannon realized he was serious about not trying to make their marriage work. The snake in her came out and she became vindictive. She looked around the living room and said, \"I'll take every fucking thing you have, Brody Anderson. Everything.\" \n\n\"Go ahead. Give it your best shot, Shannon. I don't really fucking care.\" Brody went to his studio and locked the door. \n\n\"You'll care.\" She screamed at him as he walked away from her. \"Do you hear me Brody? You'll fucking care!\" Shannon hired a top divorce attorney and she wasn't joking when she professed her intentions. She went after him for everything. The house, the kids, even the rights to his comic book heroine. He had based her off of Shannon, a much younger, kinder Shannon. \n\nBut he didn't care about the house, in fact he'd moved himself and the kids to his mother's house three days after Shannon came back. He threw the new house keys at her as he and the kids left that day, \"Here you go Shannon\" He put the kids in the Escalade and put the key in the ignition. \n\nJust before he closed the door, he stepped out and had one final thing to say to her, \"Hope you're fucking happy here, alone.\" As he headed back to the SUV he turned and smiled at her, \"Oh, and, by the way, yes, I did sleep with her. And she was better than you ever were. Ever.\" \n\nHe saw Shannon's eyes narrow and if a look could drip acid the ground around her would have melted as the hatred in her surfaced. \"Fuck you, Brody.\"\n\n\"You already did, Shannon. But never again.\"\n\nBrody's mother cleared out the attic for him, just like when he was younger, to be his new studio. As he worked, or tried to work, he'd often run across a sketch he's drawn of Claudia. He thought burned every one. And those that he found were a painful reminder. He burned those, too.\n\nBut the painting, he kept that one, hidden behind that cloth. Every now and again, when he felt so lonely he wanted to die, he'd pull back the material and stare at her sleeping there beside the rose bushes. Somehow, as if the image had some type of medicinal quality, it eased the pain.\n\nHe figured Claudia decided to move on with her life. She'd often talked about how excited she was to go away to college. She was probably sitting down in some cool campus eatery discussing the upcoming game or finals. It was going to be such a change for her, after having spent the last four years of her life in a strict Catholic boarding school. And he was sure guys were salivating to be with her. It killed him.\n\nShannon almost triumphantly took over the house and threw out anything that reminded her of Brody. When the kids came to visit they demanded to know where everything was. \"Gone, now shut up and eat your dinner.\" No, Shannon was not a very happy person and wanted to make everyone around her suffer, too. She called her lawyer almost daily asking about progress on the settlement. \n\nBut when her attorney said that they'd end up going to court, she was livid. She contacted Brody's editor and informed him that he was about to lose the right to use her image. And she contacted the school the kids were attending and tried to tell the principal that Brody had no right to enroll them and that she could sue the district. Both actions pissed Brody off beyond words.\n\nBut Brody didn't care about his most lucrative character. However, the kids, they were a different matter. He fought her tooth and nail for them. And it looked like she was going to win, especially when he admitted to the judge that he'd slept with Claudia, that one time. He wasn't ashamed of it, so why not tell? It was the most beautiful thing he'd been a part of, aside from his children being born. Brody prayed that the judge would see through Shannon. But she was their 'mother' and mothers usually win.\n\nAnd then...Frank Hennesy mailed Brody a letter with pictures and videos of Shannon doing things that were so depraved, so scandalous they would make the typical housewife look like a fucking saint. Brody finally saw a little flicker of light at the end of the pitch black tunnel he'd been trapped in for months. The only condition, he couldn't tell anyone from whom he had received the pornographic material. When asked, Brody said, \"I got them in the mail.\" Which wasn't a lie.\n\nYes, it seems dear Frank, the bondage and pain man, was pissed with Shannon for screwing him over on some type of business deal after they'd split up. He wanted her to get what she deserved. And being that some of the people in those videos were obviously minors, that meant the possibility of jail time. The ensuing investigation was almost too much for Brody and his children. But, in the end, Shannon got her comeuppance. \n\nShannon was looking at twelve years for the statutory rape of Jefferson Green, the sixteen year old son of her boss. She plea bargained for a lesser sentence, six years and the title of 'sexual predator' that would haunt her for the rest of her life. Needless to say, the judge granted Brody sole custody of the kids. \n\nThe day she went to prison, Shannon didn't even get to say goodbye to her kids. But Brody did. As sat across from her in the little holding room he smiled, \"Well, Shannon, I guess you got your wish. I'll bet you'll be told to do lots of things. Yes, I'm sure you'll get to have lots of fun fucking your new cell mates. Why, I'll bet they'll have something special waiting for you tonight. Goodbye, Shannon. No, wait...not good...just bye.\" He got up to leave the holding room.\n\nShannon, dressed in blue jeans and a white T-shirt, halfway laughed, \"Well, you know me, Brody, I'll make the best of it.\" The guard came to escort Shannon out the back door. Before she stepped out, she turned to her now ex-husband and said with a grin, \"Oh, yeah, Brody, I meant to tell you earlier. You know my attorney, he's a real thorough fellow. When you told everyone about your fuckfest with that little bitch, he sent a P.I. out to find her. You know, get a little dirt on the deflowered slut.\"\n\nBrody stopped and turned. Shannon laughed again, only it was the most ill-tempered, shrewish laugh he'd ever heard, \"He found her. Yep. Back home in Orlando. She's been pretty busy with her brother and other things. Pretty pathetic if you ask me. Apparently James felt sorry for her and told her why he was there. You know, I figured she would have been on the first flight back here to help you fight for the kids. But she wasn't. Hmm, maybe she's over you, Brody. Maybe she was over you before you came inside her. Or maybe, James got a little taste of that sweet little ass of hers, too. Yum, I'll bet it was good.\" \n\nBrody jumped towards her and almost made it across the table before Dean Winston, his attorney, rushed to hold him back. \"She's not worth it Brody.\"\n\nThe guard yanked Shannon toward the door and Shannon blew him a kiss and waved, \"Bye lover. Sweet dreams.\" The door closed and she was out of his life, at least for the next six years.\n\nDean drove him to his mother's house and told him how sorry he was for what Shannon had said. As he drove out of sight, Brody walked dejectedly into his old childhood home. He kissed his kids as they ran to greet him.\n\nNina, now eleven, was the only one of them who really understood had happened to their mother and why they wouldn't be seeing her. They showed him the cookies they'd baked with Grandma. And when Nicholas handed him Mr. Snoop because he looked so sad, Brody wanted to shoot himself.\n\nGrandma Anderson smiled and put dinner on the table. \"Well, now that all this mess is over, why don't you take the kids out of school and go on a nice trip somewhere. It's so cold here. I know, why don't you go to the Keys? You always loved the Keys, Brody, remember?\"\n\n{Florida Keys?} He stared at his roasted chicken. {Florida} Brody took a sip of water. {Orlando} He smiled into his glass, \"What about Disney World?\" \n\nThe kids all whooped with excitement. And Nolan jumped up and danced around the room shouting, \"We're going to see the mouse. Going to see the mouse. Uh, huh, yeah, yeah.\"\n\nThe next morning, Brody called Shannon's attorney and he, somewhat reluctantly, told Brody where to find Claudia. Grandma came along for the trip and Brody was appreciative of her presence, too. Three kids could be a lot to deal with, especially with what he'd been through and hoped to do. \n\nOnce they'd settled in to their hotel suite, Brody went to the computer and pulled up a map of how to get to Claudia's. It was nearly six thirty and he was so tired. They'd been up since five o'clock that morning and then there was the plane ride and the fiasco with picking up the car not to mention finding the stupid hotel. \n\nBut he couldn't wait any longer. He wrote down the directions and kissed his kids goodbye, knowing they were in good hands with his mother. His mother whispered in his ear, \"Brody, are you sure you want to do this?\" He didn't answer. He just turned and left the suite.\n\nAs he drove, Brody got so frustrated. The on-line map obviously hadn't been updated for a while as there were new roads and exits all over the place. Brody finally stopped at a gas station and asked how to get to Barrington Grove Road. \n\nHe pulled up in front of beautiful home at nineteen thirty six Barrington Grove Road and sat there for a while. It was a gorgeous Mediterranean style home. He knew her family had to be pretty well off to be able to afford to send her to Holy Cross for high school. He pulled out the little box with her necklace. He'd had the chain fixed and wanted to give it back to her.\n\nMaybe she had been mad at God on that day and probably was still pretty ticked off with Him, but Brody knew that one day, she'd be thankful to have the necklace back. And maybe, she'd want him back, too. He went to the front door and rang the bell. He waited for what seemed to be the longest two minutes of his life. \n\nA tall older woman opened the door, \"Yes?\"\n\n\"Yes, uh, hi. Is this the Fitzpatrick home?\"\n\n\"Yes. May I help you?\"\n\n\"Is Claudia in? Or do you know how I can get in touch with her?\" He felt so nervous, like when he went on his first date.\n\n\"Miss Fitzpatrick is in. Whom should I say is calling?\" Brody looked at his feet. The wizened older woman shook her head, \"Oh, you must be Mr. Anderson. Won't you come in, please?\" Brody didn't know what to make of her tone but he stepped inside. \"Please wait here.\" She motioned for Brody to sit in one of the living room chairs. He heard a boy shouting at a video game and figured it had to be William.\n\nHe followed the voice and found William sitting in front of a huge TV playing some racing game. William looked over at Brody and nodded. Brody knew that he was seventeen and noticed that he had the same stunning blue green eyes as Claudia and was extremely handsome. \n\nWilliam would definitely not have any trouble getting girls. Then Brody saw the wheelchair the boy was sitting in and also that he was missing his right leg, just below the knee. {That's right. He was in the accident, too.} Well, at least Brody could understand the angry face Claudia's brother wore. Lost his parents. Lost his leg. {Damn} \n\nThe old woman found Brody and asked him to follow her. \"Miss Marshall is sitting by the pool, Mr. Anderson.\" As they stepped out onto the patio she turned to Brody and added, \"Please Mr. Anderson, do not upset her. She's got enough to deal with right now.\"\n\nHe came up behind Claudia and smiled. Brody missed her so much he wanted to run up and hug her in half, just so there would be twice as much of her. \n\n\"Hello, Brody.\" Claudia didn't turn around. Her voice sounded sad but still melodic. \n\n\"Claudia,\" he stood behind her, \"I've missed you so much.\"\n\n\"Have you? Funny, you never returned my letters.\"\n\n\"What letters?\" Brody was confused. \"You sent me letters?\"\n\n\"Yes, four of them about five months ago.\"\n\nBrody sighed, \"Christ I'm sorry. I moved out of the house. Shannon probably threw them away. I'm sorry.\" He watched Claudia put her hand to her head. \"But I'm here now, Claudia.\" \n\nHe went to kiss her shoulder. But Claudia leaned forward, placing her head in her hands and started to cry before he could. \"I thought you forgot me. I thought you didn't love me anymore.\"\n\n\"God, no, Claudia.\" He rubbed her shoulders, \"But you never came back. Or called. You could have called. I knew you were devastated when your parents died. I thought you decided to go on with your life without me.\"\n\nClaudia's sobs grew stronger. But she stopped long enough to say, \"I'm pregnant.\" And then she started crying more.\n\n\"What?\" \n\n\"You heard me. I'm pregnant.\" She stood up and even though she was wearing a short loose baby doll style dress there was no mistaking the small bump at the front of her tiny body. \"I'm so sorry. I was going to...but I just couldn't, I mean I couldn't do it...\"\n\nBrody was stunned. \"I don't know what to say.\"\n\n\"You don't have to say anything, Brody. It's my fault. I should have walked away. You warned me. You don't have to worry about supporting me or anything. We're doing okay now that the estate has been settled. You can leave if you want to. I understand.\" Tears streamed down her face.\n\n\"Leave? Why would I leave you? I told you I love you. I meant it.\" He held her close and rocked her gently as she cried on his shoulder. \"And this,\" he rubbed her belly, \"just proves it.\" He kissed her and when he felt her soft lips part and then felt her silky tongue glide across his, it only reaffirmed how much he loved her. ",
        "Claudia had prayed for this moment for the past six and a half months. It felt so good to have him hold her. His embrace made her feel safe and alive again. His kiss reignited the fire in her soul that she thought would never burn again. She melted in to his arms, \"I love you.\"\n\nHe and Claudia sat by the pool and talked about everything that had happened in the previous months. About the accident, her parents, William and dealing with the lawyers about her father's company. She lamented, \"William is so angry. He was a track star at St. Joseph's. Now that's gone. This was going to be his 'golden year'. He thought he'd get a scholarship even though he doesn't really need it.\"\n\n\"What about you? What about college?\"\n\nClaudia smiled, \"I'll get to it, eventually.\"\n\nBrody knew she'd given up her dreams because of the baby and it tore him up inside. But he smiled at her and nodded. Now was not the time to be make her feel bad about her decision.\n\nAfter Claudia found out about what had been going on with Brody over the past few months, she was shocked beyond words when she found out about Shannon. \"Are you serious? Oh, God. That's horrible.\" Brody nodded. \n\nWhen the mid-March sky had gone completely dark, Claudia went in to formally introduced Brody to her little brother, William. \"William, could you please stop for a minute? He's always playing those games.\" Claudia smiled at Brody. It was good to see that smile back where it was supposed to be.\n\nWilliam stopped playing and looked at her. \"Let me guess, this is the guy that knocked you up, right?\" He rolled his eyes and went back to playing the game.\n\n\"William!\" Claudia was taken aback. \"I'm so sorry, Brody.\"\n\n\"It's alright, really.\" He looked at William and added, \"And yes, I'm the man who got your sister pregnant.\"\n\nWilliam pounded on the X button on the controller and stared at the TV, \"Why'd you decide to show up now? Did it fit in your schedule or something? Jesus, you're nothing but a prick. Why don't you just take your little bitch and leave. I don't need her. I've got enough money to last me. Go on, take her...oh, that's right you already did. Suppose that was a promise you just couldn't keep, right Claude?\" He smiled angrily at his sister.\n\nBrody saw Claudia was crying and didn't want to put up with William any longer. He grabbed the game control and threw it aside. Then he spun William around, \"Listen, I know you're still upset about your parents and your leg and about Claudia being pregnant. But I'm not going to let you sit here and berate the one person who stopped her life to take care of you. Do you understand?\"\n\n\"Whatever.\" William shook his head\n\n\"Don't fucking 'whatever' me.\" Brody stared down into William's angry eyes and saw a world of hurt hidden behind his rage. \"I'm not going to take Claudia away from you, if that's what you're afraid of.\" William's angry face softened but only slightly and Brody looked at Claudia, \"I'm not going back to Connecticut. There's nothing left for me there. I'll move the kids down here.\"\n\nClaudia burst out into tears and ran upstairs. William rolled his eyes, \"Good going, asshole, now she'll be crying all night. You know that's all she did when she found out she was pregnant. Days of tears. Christ, and it was all, 'Brody is going to be so mad. He'll hate me. What'll I do?' Now that you're here and not mad at her , I don't think she knows what to do. So why don't do her a favor, don't move down here.\"\n\nBrody thought about smacking him but he walked away. He knew that deep inside, William was terrified that he was going to take away the last bit of family he had left. But Brody couldn't just 'walk away'. \"Fucking grow up, kid. This is the real world, welcome to it. It's time for you to get over yourself and grow up. I know your mad as hell at everything right now, but sitting here playing video games and belittling your sister isn't going to make you feel any better.\" \n\nBrody walked away from William, holding back the rest of what he wanted to say. Claudia and his child were his main concern. Brody made his way up the sweeping staircase and listened for Claudia's crying to find her. \n\nWhen he opened the door to her room, he found her lying on her bed with a stuffed bear to her face. She looked like such a little girl. Brody went to her and took the bear, \"Claudia, I'm sorry. He's mad at me, not you. He'll get over it. I promise. It's just going to take some time. Claudia, please stop crying and look at me.\"\n\nHer sobbing stopped and she sat up. Claudia looked up into his eyes as he stood by her. Brody massaged her aching neck. \"My poor Claudia, you're so tense. Turn around.\" She turned and he put his hands on her shoulders and gently started to kneed away the months of tension. \n\nBrody leaned and kissed her neck and heard her give the softest moan. He kissed her earlobe and she tilted her head back with a slightly louder moan. He sat down on her bed and kissed her shoulders a bit more aggressively.\n\nBrody grabbed the bottom of her baby doll dress and pulled it up and over her arms. Her breasts, now fuller and riper than before, were freed and he reached around her to put his hands on them. \"God, I missed touching you.\" Brody felt the wonderful familiar stirring in his loins as he moved his hands across her breasts and gently rubbed his fingers across her swollen nipples. He gently squeezed and played with her breasts. \n\nHe ran his hands down across her tight, swollen belly and looked over her shoulder see himself lovingly caress where his child lay in her womb, safely tucked away from the noise and confusion of the world. Brody kneaded her breasts somewhat urgently and whispered in her ear, \"I want you. I want to make love you, Claudia.\"\n\nClaudia felt herself slipping into that wonderful place between desire and fulfillment. \"I want you to.\" He started to suck on Claudia's earlobe and she almost lost her wits. \"Wait, wait, no Brody, we can't do this. I mean, I'm, well, you know.\"\n\nHe slid his hand down her belly, between her legs and whispered, \"Yes, we can. Remember, I have three kids. You don't think I ever went nine months without sex, do you? But if you don't want do, I'll wait.\" He gently touched her swollen clit and she sank into him as he massaged the one part of her that screamed to be touched, \"I'll stop if you want me to. But you don't want me to, do you?\"\n\nClaudia shook her head, and softly said \"No, I...I don't.\" She turned and kissed him so deeply it unleashed all the unbridled lust with in her. Her breathing was quick and her voice was low, \"God, Brody. Please. I need you. I've thought about you every night, praying for you to come to me.\" Claudia started to feverishly unbutton his shirt. Brody was shocked but only mildly, he knew that women were often more sexually aroused when pregnant. \n\nClaudia ripped off his shirt and started to kiss his neck and chest somewhat ferociously. Brody laughed tenderly and said, \"Slow down, honey, you're liable to hurt me.\"\n\nShe stopped and looked up at him, \"Sorry. Sorry, I just...it's just that...well, I mean. God, Brody, I want you so badly.\" Tears started to well up in her eyes. \"I need you. I need you so badly. When I left you that night, I never felt so alone before in my life. I'm so sorry I didn't call you sooner. I'm so sorry. I love you so much, it hurts.\"\n\nNever before in his life had anyone declared such love for him. \"I know, baby, I know. I can't even begin to describe the pain I felt waiting for your call. But it's behind us now. You don't have to hurt any longer.\" He was with her now and that was all that mattered. \n\nBrody pulled out her pony tail and ran his fingers through her hair. \"Lie back.\" He took hold of her panties, which were still relatively tiny, but then again, so was she. He guessed that she'd gained maybe fifteen, possibly twenty pounds since he'd seen her last. \n\nBrody slid them down her thighs and looked her body. Jesus, she was one beautiful pregnant woman. The artistic portion of his mind raced to hold the image, desperate to bring it to life on paper. The rest of his body and soul ached just looking at her. \n\nBrody knelt on the side of her bed and pulled her to him as he softly said, \"I seem to remember you liked this.\" He gently spread her legs and lowered his head between them to her wet wanton lips. His first taste of her was as sweet as his last one had been and the memory of the love they had for one another overwhelmed him. \n\nClaudia couldn't stand it. He knew exactly how to make her feel like she was on the sun and the moon at the same time. She cried a little and as he moved his tongue over her clit making those familiar flashes of light return, she sighed and breathlessly said, \"You are so wonderful.\"\n\nHe stopped for a second and looked at her. With a mock sigh and an added false arrogance he said, \"I know. It's a fault of mine.\" She playfully popped cheek and laughed at him. Then he returned to his delightful assault on her. He gently sucked on her and tickled her with his tongue. \n\nIt didn't take long for Claudia to let herself go and allow the waves of rapture wash over her. Claudia felt like she was sinking in that ocean again, only this time, she knew where she would surface. She moaned and cried in sheer delight. And Brody was so happy when he'd brought her to it. \n\nHe tenderly lapped up the last bit of her and then stood. Brody smiled down on her and marveled at the glorious smile on her face. \"Jesus Christ, Claudia, I'm going to have to start carrying a sketch pad with me from now on.\" \n\nClaudia put her finger to her lip seductively and giggled. Then she sat up and wrapped her arms around his waist. She gently slid down onto her knees resting her head against him and could feel his throbbing member pulsing along her cheek. She looked up at him, unfastened his belt and then unzipped his slacks, her eyes never leaving his. With a coy grin, she said so sweetly, \"My goodness, look what I've done. Whatever shall I do now?\"\n\nBrody was trapped in her seductive gaze and he pulled her up to him. With a deep kiss he hungrily said, \"Whatever you want.\" \n\n\"Good.\" When Claudia turned him and slinked back down. She pulled his pants off and then pushed him onto the bed to pleasure him. Needless to say, Brody was more than a little impressed. Claudia took his painfully swollen cock into her hands and gently massaged it. Brody closed his eyes to everything around him. \n\nAll those months of lying there alone in his bed trying to recall the sweet sensation of her touch had been in vain as the outside world always invaded his thoughts. But now, here he was with her and the outside world was neither a nuisance nor a cause for worry. \n\nBrody marveled at her soft kisses along his inner thigh and how she trailed her tongue along with those kisses. He took in a long deep breath and said, \"God, Claudia, that is so nice.\" When she licked and then sucked on one of his balls, Brody felt a jolt of energy fly through him and it shook his entire body\n\nThen he felt her warm breath on his stiff shaft and he waited much like a child on Christmas Eve waits for bedtime to come, knowing that Claudia was about to put her soft lips around him. And when she did, it was like Christmas morning and that giddy elation that comes when a child sees his stocking filled with goodies and packages placed beneath the tree. \"Claudia.\" Brody could barely form the word as her tongue glided across the tip of his swollen head.\n\nThough she'd only done it once before, the sensation, the utterly erotic feelings she'd had while doing it, had never left her. She smiled as she recalled all those stupid popsicles she'd eaten in the past couple of months. They were good, but nothing like him. And no matter how many she ate, she'd never felt as satiated with them as she did with Brody. \n\nAnd Brody had to admit, Claudia was, hands down, the best damn mouth he'd ever had the pleasure of getting his dick in to. He didn't want it to end. Brody would have liked nothing more than to have her sweet sucking lips on him for hours on end, but he'd waited so long to be with her and felt so good, he had to fight to hold off as long as he did. \n\nClaudia closed her eyes when he sat up and placed his hand on her head and was so happy when he started to move his hips, knowing that he was going to fill her with the one flavor she'd been denied when she'd eaten all those fruity treats. She felt him hit the back of her throat again and again and waited with anticipation. And, as before, when he came, she savored him like some exquisite and exotic treat. \n\nShe knew he had been fully satisfied when his thighs started to relax and it was only then that Claudia released him. This time, she noted to herself with personal pride, not one ounce of him had spilled from her lips. Knowing he was bound to be tired, she climbed up on the bed and snuggled up next to him. She reveled in the peace that had started to settle within her. \"I love you so much, Brody.\" As they lay there, Claudia giggled and grabbed his hand, \"Do you feel that?\" She set his hand on the side of her expanding belly. \"She's kicking.\"\n\n\"She?\" \n\n\"Yes, 'she'.\" He could practically hear Claudia smiling, \"I had them check like three times and they even brought in another technician just to make sure. Oh, there she goes again.\"\n\nBrody felt the small kick of his unborn child beneath his hand, \"God, I love you.\" Then he kissed Claudia's belly, \"And I love you, too.\" He patted her tummy and grinned at Claudia, \"Do you have any idea how you've changed my life? Before you, I was just going through the motions of being happy in my marriage, but I wasn't happy. And now, I don't think I really ever was. Don't get me wrong, my kids were and still are the best part of my life. I love them with all my heart. But, somehow, I always felt like there was something missing and it was eating away at me. At my soul. I think you may very well have saved my sanity. Thank you.\" \n\nThere was another kick and Claudia turned to Brody. \"You're welcomed. And I understand. I found out I was pregnant about six weeks after my parents were killed and William was still in the hospital and then there was dealing with the estate and Dad's business and I thought I was going to go crazy. But when I would lie in bed and it was so quiet, I'd think of you and the gift you'd given me. Some of my friends said I should abort her, but I couldn't. She's a part of you and I was afraid she was all God was going to let me have of you.\"\n\n{God? Shit, her crucifix.} Brody jumped out of the bed and grabbed his pants. \"I almost forgot,\" he pulled out the box and handed it to Claudia, \"I knew you were angry, but I thought you'd want it back one day.\" He opened it and pulled out her necklace. \n\nClaudia started to cry as he put it around her neck, back where it belonged. \"Thank you. Thank you so much. I...\" She could barely talk, \"My parents gave me that.\" She wrapped her arms around him and cried.\n\nBrody held her and when she was done he laid her back and kissed her breasts. The were so full and firm. He massaged them and rolled her nipples between his fingers. He sucked one of Claudia's pert nipples and chanced to taste her rich, creamy milk and with a deep groan, rolled over on his back, \"That is going to be one happy baby. God, I could just eat you up.\"\n\nClaudia sat up, giggled and took her finger to her own nipple to taste a tiny drop of liquid and nodded. She looked at Brody and saw that he was getting hard again. Claudia straddled his legs and stroked his growing cock. With each gentle move and the ensuing pulsation of him, her clit started to tingle more and more and she grew wetter with each second.\n\nBrody sat up and said to Claudia, \"Do you trust me?\" She nodded. With that, he lifted her up and set her down on him and as he entered her, Claudia started to tremble. \"It's alright, I promise.\" He gently moved his hips and Claudia closed her eyes. \"That's it, relax, baby, relax.\" \n\nHe rubbed her shoulders as he moved and kissed her breasts and when he felt her hips moving with his, Brody laid back. Claudia slowly ground her hips into him, trying with each subtle lift, to get him deeper inside her. Brody felt so good, like he was floating on a cloud of pure bliss. He grabbed a pillow and rested his head on it so he could watch her more easily. \n\nThe muted light in her room washed over her softly tanned skin making her appear to be emanating an almost angelic light. Brody smiled. {She's going to be my new heroine. He started to draw her in his mind. Earth Angel. Sent down to right the wrongs of man even if it means she'll have to kick a little ass. Along the way, she finds herself falling for...} Brody felt her starting to move even faster and his thoughts flew away from him. \"Claudia, Claudia...oh, Jesus.\" \n\nClaudia couldn't believe how good it felt to have him inside her. It was a hundred times different than the other time. Not better, different, but equally as satisfying. {It must be the baby.} As a result, she couldn't control her own body. It screamed at her to rock on him, faster and faster. The more she moved the more she felt her muscles contracting around him. And her swollen clit was squeezed between her body and his bringing even more joy. {Jesus Christ. This is fucking awesome.} \"Brody, I...\" \n\nBrody put his hands on her hips and helped lift her up and down. He didn't want her to stop, it felt too good. He wanted to scream as her muscles contracted around him, for they brought that joyful pain that all men want. That all men need. He felt it welling up inside him and couldn't stop himself. Brody's hips started to pump her with such depth it was staggering. He was overcome by the ferocity of his orgasm. It literally rocked him to the point where he forgot to breathe.\n\nClaudia moaned so loudly she was sure that Ms. Taylor and William must of heard her, but she didn't care. She was ready to explode and when Brody started to pump her as he neared his own rapture, she let go and the wave of ecstasy that had washed over her earlier returned, only this time, it was more than just a wave. It was an all out tsunami. \"Brody!\" she screamed as she came.\n\nAfter they'd finished Brody sat up and hugged Claudia who was still trembling from the intensity of her orgasm. He kissed her forehead and could taste the sweat on her brow. It was wonderful. She kissed him deeply and sighed, \"Brody, please don't leave me again.\"\n\n\"I won't. I promise. I'll never leave you. You're my masterpiece, remember?\" He patted her belly, \"Okay, you, too.\" Then he smiled at Claudia's beautiful face. Brody gently lifted her off of him and together they snuggled beneath the covers and fell sound asleep. It was the best sleep he'd had in a long, long time. \n\nThey married three weeks later in an intimate ceremony with about fifty guests at Claudia's house. It was a beautiful ceremony, too. She wore a white empire style gown, which hid her tiny tummy and carried a bouquet of pink and white roses. Her only jewelry: her delicate crucifix necklace. William, with his prosthetic leg, walked her down the aisle. \n\nIt was a long walk, too, as he was not quite used to the new appendage, but well worth it. He looked into his sister's eyes and saw a peace so beautiful he cried as he whispered, \"I know Mom and Dad are happy.\" When he placed his sister's hand into Brody's, and looked at Nicholas and Nolan and then over at Nina, holding Claudia's bouquet, William smiled knowing he wasn't losing his sister, but gaining a new family. \n\nEmily Denise Anderson was born seven weeks later on May fifteenth. She was six pounds, one ounce and nineteen inches long. And she was just as beautiful as her mother. \n\nClaudia went to college and got a degree in Art History and she and Brody would talk for hours about art. Many of those discussions led to intense love making. Which is why Emily was the first of four children Brody and Claudia Anderson had. ",
        "And as he watched all his children grow he couldn't help but thank God for bringing Claudia into his life. Yes, Shannon made a nuisance of herself when she got out of prison. But Brody didn't worry about it, he just let the attorneys handle it. And, 'Dia, Earth Angel' was a smash. His comics sold out as fast as he could draw the new stories. Life was good.\n\nBut let us not forget William. \n\nNo, he didn't get his scholarship; but, he did go to college. He slowly let go of his anger and decided that God wasn't punishing him. And by doing so, the world around him opened up. \n\nHe started to run again, something that he had always loved and even trained in hopes of becoming a paralympian one day. He became a physical therapist that's where he met a fragile, broken ballet dancer, named Erin. But that's another story..........\n\n...{{Erin Durant opened her eyes and saw that damn crucifix dangling over her. William smiled, \"Take my hand, Erin. Try again.\" God, how she hated him. Why wouldn't he leave her alone? She'd never dance again so why should she care if she could walk?...}}"
    ],
    "authorname": "Browniepoints",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/crucifix-temptation-ch-06"
}