{
    "title": "Recipe For Cum",
    "pages": [
        "Arriving home after a hard day at work, Amy took a long shower, slipped into her comfortable sweats, and sat down at the computer with a glass of wine. Logging on to Literotica, she began to surf the \"new stories\" area. She loved visiting the erotic literature site, and always found something stimulating. Occasionally she discovered a real gem, a combination of just the right fantasy and a style of writing that resonated with her precise personal preferences. When she found one of those she would save it, and revisit the story many times, usually with her battery-operated friend. Sometimes it gave her an idea for a fantasy she could act out with her boyfriend.\n\nTonight she noticed a story called \"White Showers\" and decided to check it out. It turned out to be about a woman with a driving love of cum. One night her lover takes her to a chateau outside of Paris for a special surprise. \n\n\"Hmm, French chateau - good start,\" thought Amy. (\"Story of O\" had always been one of her favorites.)\n\nThere the woman is blindfolded and taken to a room where she is undressed. She can feel that at least three people are removing her clothes. Her hair is brushed back from her face and secured in a ponytail. Someone dabs perfume on her neck and between her breasts; she is not familiar with the scent, but it is exquisite \u2013 hypnotic. Some kind of soft cuffs are placed on her wrists, perhaps velvet or fleece, and she is led into another room. There they make her kneel on cushions, and they have her lean forward until her upper body is resting on a comfortable support. The middle of the support is open to allow her breasts to hang down. Her wrists are secured to ropes so that although she can move them somewhat, the range of motion is limited. These people leave, and a few minutes later she can hear others entering the room. She can't tell how many, but it sounds like quite a few.\n\nBy now Amy had a pretty good idea where the story was heading, and she liked it very much. She slipped her hand inside the elastic waist of her sweats and began to enjoy the story even more.\n\nThe woman is made to service an unknown number of men. They use her mouth frequently, and she is taken from behind in her pussy and ass. Her bonds allow her hands just enough freedom for her to cup their balls as they cum in her mouth. She swallows load after load, and eventually her face is covered with hot male juice. As they fuck her and cum on her she has multiple orgasms, and eventually the sperm is dripping from her breasts and is running from her pussy and ass, coating her thighs. Finally she hears the men leave the room. She realizes, however, that one has stayed as slips his rock-hard cock between her wet lips. Confident that she knows who it is, she sucks hard, jerking on his cock with one hand while gently squeezing his balls with the other. Just as he is about to cum, her pulls off her blindfold and she looks up at the face of her lover as he adds his hot sperm to her dripping mouth.\n\nWhile reading the story, Amy brought herself off twice. She thought it would be fun to act out the fantasy with her boyfriend and be covered in cum. Going to the \"Toys and Videos\" link on Literotica, she found a squirting dildo that could be filled with fake cum. But where to get fake cum? The mixtures described on the site did not seem like they would really look or feel like cum, and she didn't want to squirt something sugary inside herself because she heard it can cause yeast to grow. On a hunch she browsed the \"How To\" area and - eureka! - there it was: \"Recipe For Cum by Hamilton G.\"\n\nRecipe For Cum by Hamilton G.\n\nThis recipe for theatrical cum looks like real cum, has no sugar (so as to discourage yeast), and has a neutral taste so that you can really get into the fantasy. Because it contains raw egg white you should make it fresh right before use and discard the leftovers. If you are concerned about using raw egg, either don't swallow it (half the fun!), or use pasteurized egg whites, which can be purchased in most supermarkets. However, fresh egg gives a better consistency.\n\n1 cup water\n\n2 tablespoons cornstarch\n\n1 raw egg white\n\n1 tablespoon plain yogurt\n\npinch of salt\n\nDissolve cornstarch in \u00bc cup of water and set aside. Bring the remaining water and a pinch of salt to a simmer in a small saucepan, then stir the cornstarch to redissolve it and stir it in. Simmer and stir the mixture for about two minutes, it will be very thick. Cool the mixture thoroughly. If you don't let it cool the egg will get cooked. If you are impatient, set the pan in a bowl of ice and stir to speed the cooling. When cool, stir in the egg white and yogurt. Mix thoroughly with a wire whisk until smooth. If you want a little more flavor you can add \u00bc teaspoon of vanilla extract and some Equal or Splenda for sweetness when you add the egg.\n\nIf you don't have a toy to use with this, you can get a squirt bottle (such as is used for ketchup) in supermarkets or kitchen stores. Fill the bottle and put it in the microwave for about fifteen seconds to make it just warm.\n\n\"I know there are other recipes that are easier to make. This one is a little more work, but when you shoot it you will know where that extra work went. Now there's nothing wrong with the others. They are real, real, real good shit. But this one is a fucking madman. I'll take the Pepsi challenge with that Amsterdam shit any old day of the fucking week.\" - Hamilton G. (with apologies to Quentin Tarantino)\n\nNeedless to say, you assume all responsibility for how this is used and what happens. If you use it in a film and you want to be a good person, give me a credit, such as \"Hamilton G. - additional catering.\" ;-)\n\nEnjoy!\n\nHamilton_g"
    ],
    "authorname": "Hamilton_g",
    "tags": [
        "toys",
        "fake sperm",
        "faux cum"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/recipe-for-cum"
}