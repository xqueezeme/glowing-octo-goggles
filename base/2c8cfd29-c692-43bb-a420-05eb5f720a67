{
    "title": "Little Bright Eyes",
    "pages": [
        "Copyright \u00a9 2019\n\nForward: First, let me thank blackrandI1958 for inviting me to take part in the \"Wine and Old Lace,\" story theme. Second, let me thank her again for her editing skills. \n\nI hope you enjoy my story and as always, I look forward to your comments.\n\n***\n\nI was on my way to photograph three members of the Cal-Town Women's Club making decorations for an upcoming charity bazaar. What can I say, not all newspaper photography is exciting. I got the job right after graduating high school in 1960 and had now been a Morning Star, staff photographer for four years. Even though taking photos of three elderly ladies making streamers wasn't my idea of thrilling, overall I loved the job and it did have its exciting moments. \n\nI had only been working there a little over a year when I was sent on a raid with the Indiana State Police. A gun battle broke out and a bullet passed so close to my ear it sounded like an angry giant hornet. I felt so helpless while bullets were flying all around that as soon as I was old enough I applied for a concealed carry permit, and from then on, wore my Beretta three-eighty under my sport coat. Since then I'd been on countless police raids but never had to draw my gun...thank goodness. \n\nI was only a couple miles from the women's club assignment when my pager went off. Those things were a two edged sword. The paper bought a slew of them and gave one to all the reporters and photographers. We had to wear them during working hours and off hours if we were on-call. Sometimes it was nice. An assignment would get cancelled or changed for some reason and the news room could let us know so we didn't show up to a locked door. Other times I'd be out with my wife and get called out to a fire or accident. That wasn't so nice. Sheri, my wife, didn't mind that as much as she did when the damn thing would start buzzing at two or three o'clock in the morning. \n\nI looked at the display. All it read was, \"call off.\" I pulled into the first gas station and up to the outdoor phone booth. The paper had a general phone number that went through a switchboard. Marge was the operator who would then connect the caller to the proper department.\n\n\"Hi, Marge, Clint just paged me.\" Clint Wilkenson was our city editor.\n\n\"Okay, Dylan, here you go.\"\n\n\"City desk,\" he answered, as usual.\n\n\"Clint, it's me. You paged?\"\n\n\"Yeah, forget the three bag ladies.\" Clint was a sarcastic cuss. \"We'll reschedule it. Get over to South Chicago, around a hundred and sixty-fifth and Kennedy. Some woman was beaten up and raped in her own back yard. The guy took off on foot so half the police force is pounding the pavement, looking for the jackass. Get a couple shots of the cops peeking around a corner or beating the bushes or something. I'm just looking for some general art.\"\n\n\"All right, on my way,\" I told him. I wasted no time getting to the intersection but saw no cops anywhere. I figured they were probably searching the alleys and back yards so I parked the car, grabbed my Nikon and took off in pursuit of a couple of blue uniforms. I wandered along streets and through the alleyways until I finally spotted a couple of boys in blue. I knew one of them and we talked after I got my shots. I was curious about what happened. \n\n\"Dylan, I feel so sorry for the poor girl. She lives with her mother and has a three year old daughter. I think the father deserted her. Anyway, she was hanging laundry up in the back yard when this creep rushed her from the sidewalk, knocked her down with a punch to the face, and then jumped on top and raped her.\"\n\n\"Jesus, Tom,\" I replied. \"It's broad daylight. The guy's got to be out of his mind.\"\n\n\"Yeah, the victim said she thought he was high on something. A couple of the neighbors heard her scream and called us but we didn't have any squads in the area. By the time we got here he took off. We'll find him though. We have a good description and all the neighboring forces have been notified to keep an eye out.\"\n\n\"What's the description, just in case I see him?\"\n\n\"Long, dark brown hair, scruffy beard, dirty white T-shirt, and baggy levis,\" Tom answered. \"If you do see him, be careful, he's got a knife. He threatened the girl with it when she wouldn't stop screaming.\"\n\nI told him I'd be careful and thanked them both for the photos. Of course they were thrilled knowing their pictures would be in the paper. As I started back to my car, I realized, while wandering around looking for cops, I had strayed a mile or more from where I was parked, so I started taking shortcuts.\n\nI was walking through a blacktop alley with homes on both sides and was within a couple blocks of my car when I heard something. At first I figured it was a dog but wasn't too worried since there was a five foot tall, cyclone fence between me and the noise. I looked at a bunch of wild bushes growing between the fence and the back of a garage on the other side of it. He was all crouched down and pretty well hidden but I could see parts of the white T-shirt. \n\nSon of a bitch, I thought, I got him. I drew my gun and attempted to get to the other side of the fence through the gate but it was locked with a padlock. Shit. I was pretty sure he knew he'd been discovered, so if I went to the end of the block and all the way around to the front of the yard, he'd be gone by the time I got there. \n\nI figured he knew I couldn't get to him and was afraid he'd bolt on me, so I made sure he saw my gun and told him to lie flat on the ground and throw the knife into the yard. To my relief, he obeyed but I thought; what now? I had him covered but I still had a five foot fence between us. \n\nI did the only thing I could think of and started hollering HELP at the top of my lungs. I was hoping for one of the cops to be close enough to hear me. \"HELP\u2014POLICE, HELP! HELP! HELP!\" Nothing! I kept it up and kept it up, thinking sooner or later somebody would hear me, but my voice was starting to get weaker and weaker. I was starting to lose it completely but what else could I do? \"SOMEONE PLEASE CALL THE COPS AND TELL THEM I HAVE THE RAPIST!\" Still nothing and I was now straining to raise my voice above a couple decibels. \n\nJust as I was about to give up, I heard someone. \"What's going on?\"\n\n\"Please get the police,\" I croaked. \"I've caught a rapist they're looking for.\"\n\n\"We are the police,\" one said as two cops came around the corner of another house. When they both got next to me, their eyes followed down my gun barrel until they saw what it was aimed at.\n\n\"Jesus Christ, that's him,\" one of them exclaimed. \n\nSuddenly they both became animated, trying to figure out how they were going to get to him. Neither one looked like they could climb the fence. \"Can you keep him covered while we go around to the front?\" one asked.\n\n\"Yes, but please hurry. I've been standing here for about twenty minutes and I'm getting tired,\" I managed to say with my horse throat. \n\nThe two cops walked to the end of the alley then disappeared behind some houses as they made a right turn. I didn't see them again for a couple of minutes until I saw them searching for the right yard. I started waving my arm until they spotted me. By that time, they had called for back-up and I got photos of several cops cuffing the jackass and throwing him into the back of a squad car. I also got shots of the knife. \n\nI was excited as hell by the time I got back to my car. Not only did I get some great shots of the cops taking the rapist into custody, but I was the one who captured him. In the years I'd been with the paper, my name had appeared on hundreds of my photos but I'd never been the subject of the story before. In spite of my sore throat, I couldn't stop grinning. I looked at my watch and saw I still had time to make my last assignment before going into the office. I was taking pictures of a woman on her one-hundredth birthday. To my way of thinking, if someone can last a hundred years, they deserve to have their picture in the paper.\n\nI stopped at a drug store on the way and got a couple boxes or cough drops for my sore throat. \n\nWhen I got to the location, I asked if I could use their phone. I called in and told Clint what happened so they knew to hold more space open for the photos. \n\nThe end of the day was the only part of the job that I considered to be work. We had to develop all our own film and make our own prints. They were clipped to the day's assignment sheets and numbered to coincide with our notes and identifications for each shot. We were normally given a couple hours for all this, but if we had a busy day that wasn't always enough time. \n\nWhen I was done, I ran my work up to the newsroom and handed it in to Lyle, the photo editor. Clint saw me and walked up.\n\n\"Lyle, where's the art from the rape?\"\n\nLyle thumbed through everything and pulled them out. \"Here you go.\"\n\nRarely did anyone see Clint smile but a big grin stretched across his face. \"These are great, Dylan. What a story. Busey's writing it. Go sit down with him and give him your version.\" He threw the photos back down on Lyle's desks and walked away. \"I love it,\" he chuckled to himself.\n\nI sat down with Rich Busey, and told him everything that had happened. When I was done, I had a question.\n\n\"Any word on the girl?\"\n\n\"Yeah, I just got off the phone with her mother,\" he replied. \"She's got a broken nose and cheek bone. She also tore some cartilage in her shoulder while she was struggling. Her mom sounded like she was more worried about the psychological trauma than the physical injuries, though. I guess her daughter's been through quite a lot over the last couple years. She's at Mercy Hospital. \n\n\"You should stop on your way home. I'll bet they'd like to meet the man who captured that asshole.\"\n\n\"Nah, I've got to get home,\" I responded. I was actually anxious to tell Sheri about my day. \n\nI felt sorry for the girl, but even so, I couldn't stop grinning from ear to ear on the drive home. At twenty-two years old, I felt like I had the world by the tail.\n\nTwo years prior, I married Sheri, the love of my life, my high school sweetheart and former captain of the varsity cheerleaders, no less. Every guy in school was after her, but she picked me. \n\nWe wanted to get married right out of high school but our folks were dead set against it, saying we were too young. Two years later they gave up. They still thought we were too young but they could see we were truly in love, so they gave us their blessing. \n\nSince then, not a day had gone by that I hadn't felt like the luckiest guy on earth. On top of being married to my dream girl, I had a job I loved and paid well to boot. We had a nice apartment, two decent cars, and could even afford to go out on the town now and then as long as we didn't go overboard. \n\nI could hear my lovely bride slaving over a hot stove in the kitchen as I walked in. \"Guess what?\" was my lead in just before getting my welcome home kiss. \n\n\"They doubled your salary,\" she sarcastically replied as soon as our lips parted. \n\n\"No, you just kissed a hero,\" I responded. \"You can read all about it in tomorrow's paper.\"\n\n\"Like I'm going to wait until tomorrow, you'll tell me now or there'll be no nookie for you tonight.\"\n\n\"Well, since you put it that way,\" I said with a grin. She knew damn well I couldn't wait to tell her. I poured myself a cup a coffee then sat down at the table as I launched into my adventure. \n\nShe listened while putting the finishing touches on dinner. She was setting the table as I concluded my tale. I could see a worried look on her face.\n\n\"I wish you wouldn't take chances like that. What if he'd had a gun? He could have shot you.\"\n\n\"Honey, if he had a gun he wouldn't have been brandishing a knife,\" I replied. \n\n\"Still, you didn't know for sure. You almost got your head shot off that one time. I just wish you'd be more careful.\"\n\nI should have never told her about that. She cried at the time and I knew it was always in the back of her mind. \n\n\"Honey, please don't worry about me. There was no way that guy had a gun. There were half a dozen witnesses that saw him run away from the girl. They all saw the knife but not one mentioned a gun.\"\n\n\"Just be careful, okay,\" she commented while putting a couple pork chops on my plate.\n\n\"I promise, babe. Can I help with something?\"\n\n\"No thanks, everything's all ready. Besides, heroes don't do kitchen duty,\" she said with a smile. \n\nLater that night, you might say I got a hero's welcome as I slipped into bed. I felt Sheri's hands on my chest before my head hit the pillow. I turned to face her and was met with those delectable lips of hers...and they didn't stop there. Slowly, lovingly, they moved downward. When she saw how hard my cock was already, she looked up at me with a big smile before placing a kiss on the tip. \n\nI guess she decided oral stimulation wasn't really necessary because she climbed on top of me and slipped her wet pussy over shaft, braced herself with her hands on my stomach and began to ride. I worked hard to keep myself from coming immediately as Sheri closed her eyes and did her best imitation of riding a brahma bull. I felt her pussy muscles contract as she screamed out her first climax. \n\nI took a short reprieve while Sheri struggled to take control of her body again. It allowed me to move beyond the point of no return without coming which would greatly increase my stamina. \n\nI could see she was about ready for round two so I put my hands around her waist and guided her up and down in rhythm with my hips. Soon she was thrashing wildly around with another explosion of euphoric bliss. \n\nWhen she realized I had yet to come, she hopped off the bed and stood at the edge, bracing herself on the mattress with her hands. I walked around and took her from behind. This time we both exploded in unison. It was after two-thirty by the time we cuddled in each other's arms and drifted off in a post coital state of unconsciousness. \n\nThere must have still been a trace of adrenalin in my blood because I woke up an hour before the alarm went off. I was curious to know if the paper had been delivered yet. We don't get it, why pay when I can take one off the press, but several people in the apartment building had it delivered. \n\nI threw on my robe and quietly snuck out of the bedroom so I wouldn't wake Sheri. I opened our front door and peeked out. Sure enough, there were several papers left in front of the other doors. I looked around to see if anyone was around. When I was satisfied the coast was clear, I darted out to grab the one three doors down then successfully scampered back inside our apartment without getting caught. \n\nWith a grin on my face, I went into the kitchen and threw the paper on the table while I made coffee. While it was brewing I sat down and slipped the rubber band off to unfold the proclamation to my heroism. I was disappointed to see it wasn't on page one. I found it just inside though, on page three. \n\nThey used five of my shots, two were several columns wide. I started to read the story. I wasn't mentioned until the end. \"Morning Star photographer, Dylan McHenry was dispatched to the scene and captured several photos of the police manhunt. While walking through an alley on the way back to his car, he noticed a figure crouched behind some bushes. Recognizing the subject from witnesses' descriptions, Dylan was able to hold the suspect at bay until officers took him into custody.\"\n\n\"That's it?\" I said out loud.\n\n\"That's what?\"\n\nI looked over the top of the newspaper and saw my wife in her robe. \"Where'd you get that?\" She queried on the way to the coffee pot.\n\n\"I stole it.\"\n\n\"You what? From who?\"\n\n\"The Wilsons. I wanted to read about my heroism but it doesn't sound like much in print,\" I chuckled. I read her the last few lines while she poured two cups of magic elixir. \n\n\"You go put that back,\" she said, making no comment on the story.\n\n\"I will. What are you doing up so early?\" \n\n\"Telling you to put that paper back before they see it's missing and blame the paperboy.\"\n\nI rolled it back up and slipped the rubber band around it. On my way passed, I stopped to kiss Sheri on the lips. \n\nLater that morning, I hiked up the stairs to the newsroom and got my assignments for the day from Lyle. I was glancing through them when Rich came up to talk to me. \n\n\"Busy day?\"\n\n\"Good morning, Rich. Nah, not too bad; anymore on the girl that was raped yesterday?\"\n\n\"As a matter of fact, I just got off the phone with her mom. She's going to be released this afternoon. They asked if there was any way you could stop in before then.\"\n\n\"Me? Oh, I don't know, Rich. I don't even know them. Why would they want to see me?\"\n\n\"Why do you think? They read the story. When I called to get an update on the girl's condition, she asked me about the brave photographer, so I told her the whole story.\"\n\n\"Rich, come on, I joked with my wife about being a hero but it really wasn't anything.\"\n\n\"Dylan, if you hadn't done what you did, that guy would have gotten away. We both know that. He would have most likely done it again, and who knows, he might have killed someone the next time.\"\n\nI looked at my assignments again. The hospital was only five minutes away and I had plenty of time to get to my first job. \"Okay,\" I acknowledged. \"I'll head on over there in a few minutes. What's her name?\"\n\n\"Maria Cooper, her mother's name is Angela. They're in room two-twenty-eight.\"\n\n\"All right, I have to drive right past there anyway.\"\n\nI went down stairs to check in and see if there was anything for me in the photography office but I didn't see anything so I headed over to the hospital. The mother instinctively knew who I was and greeted me as soon as I walked into the room.\n\n\"Oh,\" she said while putting both hands up to her face, \"you must be Dylan. I was hoping you'd come.\"\n\nBefore I could say anything, she turned to her daughter lying in the hospital bed. \"Maria, look, it's the man who caught the guy who beat you up.\" \n\nI noticed she didn't say raped. I looked, but it was hard to see her under all the bandages. They also had her right arm in a shoulder cast. I smiled and walked up to the side of her bed. \"I understand you're going to be just fine,\" I said. \"That's good to hear.\"\n\nShe smiled back the best she could. \"Thank you,\" she said in a quiet voice.\n\n\"Thank you for coming,\" her mother gushed. \"We both wanted to thank you in person for what you did. Maria has been through so much. If you hadn't caught that creep she would be terrified knowing he was still out there and could come after her again.\"\n\n\"Well, I didn't really do that much. I'm sure the cops would have caught him anyway. Your neighbors gave them a pretty good description and they had every cop for miles around looking for that guy.\"\n\n\"Maybe,\" Angela commented, \"maybe not. We don't have to worry because of you, though.\"\n\nI smiled with a little embarrassment from their gratitude. I really did believe the cops would have probably caught the guy anyway. \"Well, I'm glad I could help,\" I told Angela. I looked down at Maria who was smiling up at me. That made me smile in return. \"And you get better real soon, okay?\"\n\nHer smile got about as big as she could muster as she nodded her head.\n\nI told them I had to get going so we said our goodbyes and I took off for my first assignment, but that meeting put me in a good mood for the rest of the day. I told Sheri about it over dinner that night. Now that she was over being angry with me for taking a risk, she seemed much more interested and showed concern for Maria.\n\n\"So she's going to be okay then?\" \n\n\"Yeah, as far as I know.\"\n\n\"How old is she? The paper didn't give any details about her. Is she real young?\"\n\n\"The paper?\"\n\n\"Yeah, I went out and BOUGHT one,\" she said, emphasizing 'bought.' \"I wanted the article for my scrapbook.\"",
        "\"Scrapbook?\" That was news to me. \"What scrapbook?\"\n\n\"I started it as soon as you got the job with the paper,\" she said. \"Up till now it's just been pictures you've taken, but I had to include the article this time.\" She looked at my shocked face. \"Well, someday we'll have grandchildren and I think they should know what their grandpa did for a living.\"\n\n\"Where is it?\"\n\n\"Never mind. I don't need you looking at it and getting a big head. You never answered my question. How old is she?\"\n\n\"Oh, I don't know. It was hard to tell with all the bandages, but she has a three year old kid. I'd guess she's probably our age.\"\n\n\"Oh, okay. I had the impression she was younger. Of course, something like that should never happen to anyone at any age, but I was afraid she was in her teens.\"\n\n\"No, no, I'm sure she's not that young.\"\n\n\"Well, if I didn't tell you yesterday, I am proud of you.\"\n\n\"Thanks, babe; proud enough for a repeat of last night?\" I asked with big grin.\n\nShe stepped up to me and gave me a light peck on the lips. \"Of course,\" she answered with her own big grin.\n\nBy the following day my fifteen minutes of fame was a thing of the past and it was business as usual. I was looking forward to a three day weekend. That was actually one of the neatest things about working for the paper. We had four rotating shifts and six photographers. They were all supposed to be eight hour shifts, although if you got done early you could go home early. By the same token, if it was a busy day and it stretched to nine or ten hours, well that's the way the cookie crumbles. \n\nThe first photographer started at seven am. At nine, two more guys started. At two-thirty in the afternoon, two more guys started and at three-thirty one more. That gave us full coverage throughout the day and night. It was really neat because some weeks you had time off during the day and other weeks you had your nights free. If an emergency came up during the night, it was usually one of the night guys who was called out. In addition, our days off we were also on a rotating schedule. The really, really neat thing was that the guy who had the last day shift got the following Saturday, Sunday, and Monday off. \n\nI had booked a little cabin near Starved Rock. It had no phone and no TV. What it did have solitude, a place outside to build a campfire, and a giant bed. It was three days of heaven on earth. \n\nGoing on nights was always a little harder. For one thing, I didn't like leaving Sheri home alone, although we had some nice neighbors in the building that she would visit if she got too lonely. The other reason was scheduling. Most of the assignments during the day were booked well in advance and usually things went pretty smooth. The night shifts were much more unpredictable. There was always something popping up here and there to screw things up. \n\nI was already running late by the time I returned to the office. It was ten-thirty. My shift was supposed to end at eleven-thirty but I still had at least two more hours of film processing and printing to do, thanks to Gene Anderson, one of the reporters. My last assignment for the night was a town hall meeting in Arlington Hills where they were trying to use eminent domain to seize a couple of private businesses. \n\nI was supposed to stop in, take a couple shots and leave, but tempers were running so high, Gene was sure a riot was going to break out and begged me to stay. Of course the meeting ran late, and me being the conscientious type, stayed till the bitter end; in spite of no riots. The first thing I did when I got back to the office was call Sheri to tell her I wouldn't make it home until one o'clock. \n\nI was beat by the time I got home. I thought, thank God I didn't have to be at work again until three-thirty in the afternoon. Sheri was sound asleep by the time I slipped between the sheets and faded into dreamland.\n\nIt seemed as if I had just closed my eyes before something was nudging me in the ribs. I opened one eye and could see it was still dark out. I heard Sheri mumble something but I couldn't understand her because of some damn buzzing noise...oh no! As the fog in my head started to clear I identified the noise\u2014please, not tonight.\n\n\"Dylan, will you please turn that damn thing off.\" \n\nI reached over to the nightstand and hit the button on the pager before looking at the display. \"Call off.\" Shit. \n\nThe graveyard shift at the paper consisted of two people, Mike, in the newsroom, and the night watchman. They would sit and BS with each other all night unless the phone rang. Then it was Mike's job to look on the list and see who was on call.\n\nI went out to the kitchen so I wouldn't bother Sheri any more than I had to. \"Mike, I've had all of an hour's sleep.\"\n\n\"Sorry, Dylan, but there's a three alarm at a warehouse only a couple miles from you.\"\n\n\"Fuck,\" I grumbled. \"Okay, give me the address.\"\n\nBefore leaving I went back into the bedroom to let Sheri know I had to go but she had gone back to sleep already, so I wrote her a quick note and left it on my pillow. I took off at a trot across the parking lot and was a few feet from my car when I saw it, a flat tire. \"Damn, what next?\" I mumbled. Well, I wasn't about to take the time to fix it so I ran back inside and grabbed the keys to Sheri's car. \n\nI knew exactly where the fire was from the address so I put my foot to the floor and was doing about seventy-five when I saw flashing lights in my rear view mirror. By now I was getting down-right aggravated. We all had signs saying, \"Press,\" in the rear window of our cars. Rarely did the cops bother us when they knew there was a fire or bad accident\u2014especially at three in the morning. Then I remembered I was in my wife's car...shit. \n\nJust about the time I was wondering what else could possibly go wrong, the officer walked up to my window...a rookie! I knew almost every veteran cop in a fifty mile radius, but I'd never seen this guy before. What was worse is that he hadn't been on the job long enough to know about extending courtesy to the press. \n\n\"License and registration, please.\" He barely looked twenty-one.\n\nI pulled my license from my wallet then reached over to grab the registration from the glove compartment. As soon as the door dropped open, a couple dozen envelopes and some tri-folded papers fell to the floor. I was surprised because Sheri was usually a very neat person. The rest of the car was spotless. \n\nI poked around and found the registration and handed it to the officer along with my press pass. \n\n\"What's this?\"\n\n\"I'm a press photographer, officer. I'm sorry for speeding but I'm on my way to the factory fire on Euclid.\"\n\nHe stared at the ID like he had no idea what to do. \"Please wait in the car, sir,\" he said as he walked back to his squad. I assumed he was radioing his sergeant. It took him only a couple of minutes before he was back at my window. \"Okay, Mr. McHenry, you can go,\" he said, handing me back everything I'd given him. \n\nI didn't take time to put it back in my wallet. \"Thanks officer,\" I said, tossing everything on the passenger seat. \n\nThe fire was raging when I got there and had progressed to a five alarm. There were several cops holding people a good distance back. \"Be careful, that stuffs poisonous,\" I heard one say as I ran passed him. \n\nI had grabbed three rolls of film before leaving the apartment and was glad I did. I had a fresh roll in the camera already and shot every frame of the four rolls. I was starting to feel a burning in my eyes and throat and figured it was about time to back up some. I spotted Randy Crowl, one of the fire chiefs. He was taking a break well away from the flames.\n\n\"I hope no one's inside.\"\n\n\"We have one person missing,\" he told me, \"the night watchman. Between the smoke and gas, if he's in there, he's a goner.\"\n\n\"Jesus, you got a name?\"\n\n\"No, not yet. It'll be morning before we can get in there for a search, but if he'd gotten out, I'm pretty sure we'd know by now.\"\n\n\"Damn, I'm sorry to hear that. I've got to take off. You and your men be careful, Randy.\"\n\nI could see a glimmer of light on the horizon as I parked the car in front of the Star building. I developed the four rolls of film then went upstairs for a cup of machine coffee while they were drying. Mike saw me walk past the newsroom.\n\n\"Was it bad?\"\n\n\"Yeah, they don't think the night watchman got out,\" I told him while taking a sip of battery acid. \"I got to get back down there. I've got a ton of work and I'd really like to get home sometime today.\" \n\nI ran each and every shot through the printer and selected fifteen great shots by the time I was done. I was just laying them on Clint's desk when he walked in.\n\n\"Are those from that warehouse fire?\"\n\n\"Yeah, there's fifteen shots with idents. I think there was one fatality, the night watchman.\"\n\n\"Yeah, I heard,\" he replied. \n\n\"I'm going home, Clint. I'll see you at three-thirty.\"\n\nHe picked up the pictures and started going through them. \"Get some sleep, and thanks, Dylan, this is good work.\"\n\nWhen I was on the job like that, it didn't make any difference how much sleep I had or didn't have. My adrenaline was pumping and I was focused on what had to be done, but once it was over, it was like a runner hitting the wall; I was drained by the time I pulled into our parking lot. I almost forgot about all the papers lying on the floor. \n\nAs tired as I was, I really didn't want to leave a mess in my wife's car so I started to gather everything up. I couldn't help but notice that the writing on the face of the envelops looked masculine. They were addressed to my wife except that we got our mail at the apartment. We didn't even have a post office box; at least I didn't think we did. It appeared Sheri refolded most of the letters and stuffed them back into the envelops, but a few were loose.\n\nI could feel myself getting tense and I thought about jamming everything back into the glove box without looking, but there was no way. The return address said they were from a Carl Landow at Tri-State Distributors in Saint Louis. The name was vaguely familiar but I couldn't place it. I knew if I didn't at least read one, I would wonder about them for eternity and it was possible they were completely innocent. Unfortunately, as I started to unfold one of the letters and saw the salutation, I knew innocence was not going to be the prevailing theme. \n\nHey Gorgeous,\n\nHow's the sexiest creature on earth? Good news, I have another trip to Chicago coming up in ten days. I'll be in town for a whole week so I'm hoping we can get together more than once this time. I can't wait to slip my dick into that tight little pussy of yours again.\n\nI will let you know as soon as they book my hotel. It'll be the week of the fifteenth so write me back and let me know what shift camera boy will be on so we can make plans. \n\nCan't wait, \n\nYou're magic tongue lover, \n\nCarl\n\nBy the time I finished reading, my heart screamed with pain. The letter wasn't dated so I looked through the empty envelops for post marks. Only one was dated the previous week but I had no idea if they went together. While wondering if their meeting had taken place yet or not, I realized it didn't matter. From what I had just read, our marriage was already toast. \n\nI reached over and pulled a tissue from the box of Kleenex Sheri always kept in her car, dried my eyes, and just sat there...thinking. No, that's the wrong word. Thinking refers to rational thought. There was nothing rational about the chaos my brain was going through while trying to process what I had just read. \n\nA small noise disturbed my solitude and I realized it was a tear that had dripped down and fell to the paper I still held in my hand. I reached up with my already moist tissue and dried more sorrow from my eyes.\n\nI didn't really want to read any more but I had to know the whole story, or at least half of it. I, of course, didn't have the letters she wrote back to him. With that realization, I felt a glimmer of hope. Maybe subsequent letters will reveal this was nothing more than a fantasy of this guy, Carl, whoever he was.\n\nI looked through the envelopes and found the earliest postmark, going back almost a year. I was surprised to see it had our regular address. The letter inside, explained how he ran into Trudy, one of Sheri's best friends. They started talking about their high school days and Sheri's name came up. He requested her address and Trudy gave it to him. \n\nHe went on to explain he was in sales. His territory included the Chicago area and he came to town six or seven times a year.\n\nIt was coming back to me. There was a Carl Landow on the football team in high school, but he was a couple years ahead of Sheri and me. I thought back and remembered she made the varsity cheer leading squad in her sophomore year. We didn't start going together until our senior year so it was possible she dated him. Maybe they had sex in high school; but that would mean she lied to me. She told me I was her first. Still\u2014I could certainly accept a lie before I could bear the thought of them having sex after we'd been married.\n\nWith that small ray of hope, I dug through the pile of envelopes until I found the next oldest postmark. Again, it was addressed with our apartment number. I removed the letter inside and started reading. It pretty much confirmed my suspicions, they had dated in school, and although he never came out and said it, there were enough sexual innuendoes to convince me I was right about them having sex as well. That's when the anger started.\n\nI still wasn't sure what the S.O.B. was talking about in the first letter I read; was he reminiscing, fantasizing, or talking about a recent event. I'd have to read more letters to find that out, but there was no doubt that Sheri lied to me about being a virgin. Shit, I was eighteen at the time and about as na\u00efve as they come. I had heard there was blood involved with a girl's first time but was too embarrassed to ask why there wasn't any after we had done it. She yelled and screamed like it hurt, which is what I was expecting so I didn't give the lack of blood that much thought. I now know she was faking the pain. \n\nLearning this was changing my attitude about reading more letters. I was no longer reluctant as I dug through the envelopes to find the next one in line. She must have told him who she married in her return letter because this was the first time he used the term, \"camera boy.\" \n\nHe didn't say anything derogatory about me but the nickname was obviously condescending. The rest of the letter went on with him bragging about how important he was to the company he worked for. According to him, he had the largest territory and brought more money into the company than the next three salesmen combined. I really wished I could see Sheri's responses because I couldn't believe she would fall for his BS.\n\nThe next envelope, however, proved me wrong. It was the first one address to the P.O. Box. Obviously, she wanted to keep corresponding, but felt she had to hide it from me. That told me she knew damn well what she was doing was wrong. The letter inside was also the first one that referred to her as \"gorgeous,\" in the salutation and thanked her for the picture. I wondered which one she sent. I had taken a couple of tasteful nudes of her on our last vacation. They didn't really show much but you could tell she was naked. Could she have sent him one of them? \n\nDamn, now my brain was starting to make accusations based on pure speculation. I couldn't allow that. I didn't want to make things any worse than they were, at least not until I had read the rest of the letters.\n\nIn the next one he told her he was coming to Chicago. The one after that was the most flattering to date. He told her the picture she sent didn't do her justice and how much he enjoyed her company over lunch.\n\nThe following letter was more flattery, but the one after that talked about what a great time he had over dinner and that he'd almost forgotten what it felt like to hold her in his arms. Sheri loved to dance. I was hoping that's what he was talking about.\n\nBy the time I read that letter, anger was taking over the emotional roller coaster I was on. Since he hadn't requested a picture, it was obvious that it was her idea to send him one. On top of that she'd been out with the jerk twice while I was working. I didn't want to admit it to myself, but his eagerness to slip his dick into Sheri's pussy again was looking more and more like a current encounter.\n\nAgain, my courage was waning. The more I read the more reluctant I became to read anymore, but I had to know the truth. Over the next few months they'd gotten together three more times. He had been in Chicago more often, but evidently his schedule and mine just didn't coincide on every occasion. \n\nI only had six or seven more letters to read and a little voice inside my head was telling me to stop there. I almost wish I had listened to it but I couldn't, I had to know the whole story. I opened the next letter with a sense of dread. Sure enough, it was the one I'd feared. It was postmarked five months earlier. He'd gone into detail about the softness of her lips, the taste of her nectar, the intense response he got from sucking on her nipples and the tightness of her pussy\u2014all things I was acutely aware of myself. \n\nThat was it. I stopped reading after that. There was simply no point in going on. I looked at my watch. Jesus, it was almost ten. I knew Sheri had been up for a while. I wondered if she called the paper and found out I'd left a couple hours earlier. She might be in the apartment worrying about me, but somehow I just couldn't muster any concern whether she was or she wasn't.\n\nAs much as I hated the thought, I had to go in there and confront her but before I did that I wanted to make copies of the letters. The nearest place with a copy machine was the post office. While I was there, I found her box number and looked in the little window. The envelope inside told me the affair was still going on; of course it wouldn't make any difference even if it had ended. I made two sets of copies. If the asshole had a wife, she would get one set. The other was for my folks. They loved Sheri almost as much as I did. Without seeing those letters they would hound me to my grave about staying in the marriage.\n\nI gathered everything up and headed for home. I stuck the copies in my own glove compartment and locked it before going inside with the originals. She was on the couch watching TV.\n\n\"Honey, oh my God, you must be dead on your feet. I don't know how you're going to get through the night. Can I fix you something to eat or are you going straight to bed?\" \n\nI said nothing. I knew there'd be fresh coffee so I made a bee line for the kitchen, tossing the evidence of her affair on the coffee table in front of her as I passed. I thought I heard a distressed gasp as I felt the pot to see if it was still hot...hot enough. I poured myself a cup and heard her crying as I walked back into the living room. She looked up at me with a tear streaked face. \n\n\"I...I'm so sorry,\" she cried. Her eyes were already red and puffy. The hand that held one of the letters trembled and her body language looked like she wanted to fly into my arms and beg for forgiveness, but was afraid.\n\nSeeing the love of my life in so much pain did nothing to ease my own, but I was determined to stay stoic, even as my own tears built up behind the mask. \"You don't have a job so there's no way you can afford to live here on your own. I...I don't know, I'm sure your folks will let you live with them for a while, or...or I suppose you can move in with Landow.\"\n\nSheri's face contorted with anguish. Her hand convulsively tightened around the paper she held, crinkling it into a ball. \"Nooo, no, no, no,\" she moaned. \"Please, Dylan, no. I'm sorry, I'm so very sorry. I promise never, I'll never do it again, I swear, please.\"",
        "Her mournful cries penetrated my already breaking heart but I knew I'd never trust her again. \"Sheri, you even lied to me about being a virgin. How...\"\n\n\"Dylan, by the time we had sex I already knew you were my guy. I didn't want you to think I was some slut. I'm sorry I lied but I didn't want to take the chance of losing you.\"\n\n\"Then why, Sheri? I mean\u2014am I really that bad in bed?\"\n\n\"No, no\u2014Jesus, no, you're not bad in bed. You're terrific in bed. I...I don't know why I did it. I was just scared.\"\n\n\"Scared...of what?\"\n\n\"I don't...everything! Dylan, when we got married, everyone told us we were too young, your parents, my parents, friends. You have your job. You're out there meeting new people every day while I sit at home watching game shows on TV. I guess I was afraid of melting away--fading so far into the background that no one would ever see me again.\"\n\n\"So you go fuck an old boyfriend? That's your idea of not fading into the background?\"\n\n\"Yes! No! Oh, I don't know,\" she cried. \"I was so popular in high school. I guess I needed to feel like that again. Please understand, Dylan, please. I didn't mean to hurt you. I do love you, and believe me, you have no problems in the bedroom. I could never feel as close to anyone as I do you when you're making love to me.\"\n\nHer impassioned plea only brought me down further into the depths of despair. Silently, I prayed for God to somehow make this all go away, but of course I knew that wouldn't happen. I watched the hope in her eyes evaporate as I slowly shook my head. \n\n\"I'd go to work every day wondering if you were out somewhere screwing another guy, Sheri. Every time we'd make love from now on, I'd wonder if somebody else was in there ahead of me. I can't live like that.\"\n\nSheri let out an almost inhuman sounding moan as she dropped her face in both hands and started bawling hysterically. As young as we were, I was afraid she was going to have a stroke. I sat down next to her and took her in my arms. Immediately, she grabbed me and pressed her face into my chest as she sobbed. We sat like that for a while, until she ran out of tears. Even then, she didn't move. I was beginning to wonder if she cried herself to sleep, then I felt her stir. \n\nI reached up and stroked her hair. \"Are you all right?\" \n\n\"No, I don't want to lose you, Dylan.\"\n\nWhile we had been sitting there, I was thinking. There was no doubt in my mind that we were over, but maybe she needed more time to come to terms with it. It probably wouldn't hurt me to take some time to get used to the transition as well.\n\n\"Look, at the very least, I think we need some time apart.\" I glanced at my watch. \"I've got three hours before I have to leave for work. Let's call your parents and ask them to come over and take you back with them. Spend a couple weeks there.\"\n\n\"Does...does that mean we still have a chance?\"\n\nI took a breath and let it out with a small sigh. \"I'm not making any promises, Sheri. We've been married all of two years and you've been cheating on me for almost half that time. I don't think you'll ever know how devastated I am right now, but a couple weeks will at least give me some time to think.\"\n\n\"Wh...what'll I say?\"\n\n\"Just tell them we're going through a rough patch right now, that's all. You don't have to go into detail. Just say we need a little time apart. They're not going to turn you down.\"\n\n\"Okay, but I can drive myself.\"\n\nThat reminded me of my flat. I'd forgotten all about it. \"I don't think you should drive, Sheri. I'll drive your car over there tomorrow morning and take a cab home. I have your spare set of keys. My car's got a flat. That's why I took yours in the first place. Why not call them now while I change into some old clothes to change that tire.\"\n\nBy the time I came back in from fixing the flat, Sheri was packing. \"I called. They'll be here in a few minutes. You need a shower.\"\n\n\"I know; I'm going to jump in there right now.\" The hot water felt good, soothing. It also helped invigorate me a little.\n\nWhen I stepped out of the master shower, I saw Sheri must have shut the bedroom door to give me my privacy but I could still hear voices. I got dressed and could feel the stress in the air as I entered the kitchen. Sheri immediately wiped some fresh tears from her eyes when she saw me.\n\n\"You won't fall asleep at the wheel tonight, will you?\" She whimpered. \n\n\"No, I'll be fine,\" I replied as I greeted her parents with a nod of my head, \"Mom, Dad.\" \n\nSheri's mom looked like she had shed a few tears herself. She didn't say anything but her dad spoke. \n\n\"I'm sorry to hear you two are having problems, son. I hope this little sabbatical idea works, I'd hate to see you guys break up.\" \n\n\"Me too, Dad.\" She obviously hadn't told them the reason we were separating. That was okay with me, as long as she didn't try to make me out to be the bad guy. \n\nNot much else was said. I helped Sheri put her bag in her dad's car. Her folks got in the front seat and gave us a moment. Again, tears broke loose and dripped down my wife's beautiful cheeks. I reached up and wiped them away with a light touch. She threw her arms around me and whispered in my ear that she was so sorry. That made two of us. \n\nI gave her a small, forced smile and told her I loved her. It was true. As much as she hurt me, I couldn't just turn that love off. We kissed before I helped her into the back seat then walked out to the sidewalk where I could watch them drive away. Sheri turned to look out the back window and threw me a kiss. I smiled through my grief and waved. It felt as if they were driving off with my soul. I finally went back inside the apartment and broke down. \n\nOver the next several days the only thing that held me together was the job. As long as I had a camera in my hand I was fine. The rest of the time was torture. At the start of each day it felt as if someone covered me with a cold, wet blanket. I'd get up, stumble into the kitchen to make coffee, then sit at the table staring at the walls and listening to them echo my loneliness.\n\nI had yet talked to my own folks so I called and asked if I could come over for dinner that Sunday. Although I didn't give her any details over the phone, mom sounded very concerned when I told her it would be just me. \n\nDad wasted no time. As soon as we dispensed with the hugs and kisses, he spoke right up. \"What's going on, Dylan? Why isn't Sheri with you?\"\n\nLike him, I didn't mince words. \"I found out she's been having an affair with an old high school boyfriend, Dad. Right now she's staying with her folks.\" I thought mom was going to have a heart attack and I could see the doubt in my dad's face. I knew he would have a hard time believing me. I still had the copies in my glove box if I needed them. Luckily, I didn't. It would have pissed me off if I would have had to prove myself to my own parents. \n\nI told them everything that happened while we ate, then relaxed in the living room where we talked about other things. I felt a little better by the time I left, but it didn't last that long. The emptiness of my apartment emphasized the split between reality and the life I was supposed to live with my partner, facing what life threw at us as a team. \n\nIt was still early but I found no reason to stay up. At least sleep nulled the loneliness that coursed through my veins. When I awoke at six-thirty the following morning, it occurred to me that I had nothing to do until I had to be at work at two-thirty, so I stayed in bed until I absolutely had to get up. I know a lot of guys who drink to forget, but I'm not much of a drinker. I found sleep was a better pain reliever for me. Over the next couple of days I did a lot of it. Work and sleep, work and sleep, it wasn't much of life, but I was surviving. \n\nMarge, our switchboard operator, worked from nine to five. Before leaving for the day she'd set the board up so the phone would ring directly into the city desk. I had walked into the photography office a little after eight and was getting ready to develop my film from the day when the phone rang. It had to be Dale, the night shift city editor. I figured I was about to be sent out again.\n\n\"This is Al,\" I sighed.\n\n\"Relax,\" he said. He must have heard my sigh. \"Somebody called for you about an hour ago. He said his name was Steve and he wanted you to call him back when you came in. He gave me a number, you ready?\"\n\n\"Hold on a second, Dale.\" I grabbed the pen from my sport coat. \"Okay, shoot.\"\n\n\"Five, five, five, eight three one nine.\"\n\n\"Got it, Dale, thanks.\" I figured it had to be Steve Richardson. He and his wife, Bonnie, were friends of ours. Bonnie was on the cheer leading squad with Sheri in high school. She met Steve a year or so after graduation. Sheri was a bride's maid at their wedding. I really didn't want to hang around the paper any later than I had to so I developed my film first then made the call as it was drying. \n\n\"Hello.\"\n\n\"Hi, Steve, it's Dylan. I just got back to the office and they told me you called.\"\n\n\"Yeah, ah, I know this is none of my business but is something going on between you and Sheri?\"\n\n\"Why do you ask, Steve?\"\n\n\"Well, Bonnie was in the shower when I got home from work. She only showers that late if we have something planned for the evening. At first I thought I forgot about some engagement we had, but she told me Sheri called earlier in the day and wanted to go out tonight, just the two of them. When we go out together it's usually the four of us. I'm wondering what gives.\"\n\nI wasn't about to give him details but I too had questions. \"Sheri and I are going through some rough times right now. She went to stay with her parents for a while.\"\n\n\"Jeez, I'm sorry to hear that, Dylan. I hope it's nothing real serious.\"\n\n\"Did Sheri come to pick Bonnie up?\"\n\n\"Yeah, but she didn't stay; just long enough for Bonnie to grab her purse and they were gone.\"\n\n\"How was she dressed?\"\n\n\"Ah, nicely...like she always is when we go out, you know, skirt and blouse, nothing real fancy.\"\n\nAt least he didn't say she was dressed to kill...or fuck. \"Do you know where they went?\"\n\n\"No. Bonnie said they were just going out for a couple drinks and to talk. If they're both going to be drinking I doubt they'll go too far. My guess would be Plato's or maybe Styer's Lounge. You want me to call Bonnie and check?\"\n\n\"No, don't do that. I haven't seen Sheri for about a week and I just wondered.\"\n\n\"Okay, old buddy. I just thought I'd see if there was something going on I should know about, but if you're not worried, I'm not worried.\"\n\nI thanked him for his concern before we said our goodbyes then I went back to printing my shots from the day. I pretty much blocked Steve's call from my mind until driving home. I've heard people say not knowing is sometimes worse than knowing. Boy is that true. My mind was conjuring up all kinds evil thoughts. Of course I already knew about Landow so it really shouldn't have made any difference, my marriage was already over, but I couldn't help it. \n\nI didn't hear from Steve for a couple of days but that Saturday I got another call.\n\n\"Damn, Dylan, do you ever get a day off?\"\n\n\"Now and then,\" I chuckled. \"I'm off tomorrow.\"\n\n\"Good, then you can have a beer at Plato's with me tonight after you get off.\"\n\n\"That won't be until about ten-thirty there, old buddy. I won't make it to Plato's till eleven or so.\"\n\n\"That's okay. We won't stay long. I just thought it'd be nice to have a quick one with you.\" \n\n\"Okay, sure. I'll meet you there. If I'm not there by eleven fifteen you know I got called out for something.\" \n\nWe both hung up. It didn't take Sherlock Holmes to know he had something to tell me about Sheri. I actually got there a little before eleven and saw Steve warming one side of a booth in the corner. He waved at me when I walked in. We got a little small talk out of the way while I waited for my beer. He got to the real subject of our meeting just as I finished the first sip. \n\n\"I, ah...I didn't get a chance to talk to Bonnie until last night. I asked if she and Sheri had fun the other night. She's a little worried. They didn't come here or go to Styer's, they went to Huntley's. They have a live band on Wednesdays and she told Bonnie she wanted to kick up her heels a little. Bonnie said she danced with every guy who asked her and even kissed one of them. \n\n\"I'm not trying to make trouble or interfere with your marriage, Dylan, but if it was me, I'd want to know what was going on.\"\n\n\"I understand, Steve, and I appreciate it,\" I replied. \"I'll be honest with you, and please don't go around repeating it, but our marriage is over. I sent Sheri to her folks to give her some time to come to terms with it, but it sounds like she's already done that.\"\n\n\"Oh, man,\" he commented with a slight gasp. \"God, I'm so sorry to hear that. I really thought you two were forever.\"\n\n\"Yeah, me too. Both of our parents told us we were too young, I guess they were right after all.\"\n\n\"That's the same thing Sheri said. She told Bonnie you guys were having trouble and she went to stay with her parents for a couple weeks. She said her dad told her she should ask for a six month legal separation so she can experience life a little before you guys got back together.\"\n\nI had to snicker at that.\n\n\"Yeah, that's exactly what I thought. I told Bonnie there was no way you'd take her back if she started dating other guys.\" \n\n\"There's already no going back, Steve. As much as I love her, I can no longer trust her.\"\n\n\"Just because she kissed some guy?\" Steve asked in Sheri's defense. \"Dylan...\"\n\n\"No, that has nothing to with it,\" I said, cutting him off. \"I don't really want to go into it, but she's done a lot more than kissed a guy.\"\n\nSteve just sat there, looking at me. I'm sure he put two and two together but he didn't press me anymore. Instead he tried to lighten the conversation. \"How about them Cubs, huh?\" He forced a smile.\n\nI played along. \"Yup, should clinch the series with no problem,\" I joked. Hell, the Cubs hadn't even won a pennant in seventeen or eighteen years. \n\nWe sat and talked about anything and everything for another half an hour, but Sheri's name didn't come up again. \n\nThe next day I awoke even more depressed than ever. I made a pot of coffee then sat at the kitchen table, just thinking. It had been the worst week and a half of my entire life and I had no idea what to do about it. I sure couldn't go on like I was. My marriage was over. It was inevitable, but I was stalling. I kept thinking about all the good times we had and the plans we made. We were supposed to live our lives together. Ending my marriage felt like I was ending my life.\n\nI poured myself a second cup of coffee then walked to the picture window in the living room. There were a couple birds singing in the trees. I could see a squirrel scampering around across the street. Life around me seemed to be unchanged. Why then did I feel so terribly empty inside? \n\nI took a deep breath through my nose and let it out with long sigh. I knew what I had to do. I was planning to wait a little longer, but from what Steve told me, there was no need anymore. \n\nI took a shower and got dressed. On the way over to my in-law's I stopped off for breakfast. I took the time to convince myself once and for all that I was doing the right thing. \n\nI saw their car in the drive but had to knock twice. I was beginning to think they weren't going to come to the door when Sheri opened it and stepped outside.\n\n\"Hi, honey,\" she said with a sheepish smile. She looked like she was trying to decide on whether to kiss me and finally chose to take a pass. She invited me to take a seat in one of the two chairs on the front porch. She sat in the other one. \n\n\"Obviously, you folks don't want me in the house?\"\n\n\"No, it's not that. You know my dad. He's more adamant than ever about insisting we're too young to be married. You've heard it all before and I didn't think you were interested in hearing it again, that's all.\"\n\nShe was right. \"How come he's on that kick again? He was nice enough at the apartment when they came to pick you up.\"\n\n\"I don't know. My dad never misses an opportunity to say, I told you so.\"\n\nShe was right about that too. \n\nAs much talking to myself as I had done, I never really rehearsed what I was going to say when the time came. I wasn't going to start out by tattling on Steve and Bonnie. I guessed the best way was to just come out and say it. I was about to open my mouth when Sheri started talking.\n\n\"Dylan, I was pretty emotional last week and I'm not sure I told you how sorry I am. I still don't understand exactly why I did it. I really think I was just trying to capture that feeling of being so popular again.\" \n\nShe looked down at her feet then back up at me with a worried face. \"Honey, I...ah...I know you're going to need more time so I thought, why don't I stay here for a few months. My dad suggested we get a formal six month separation, but I don't know if that's really necessary, what do you think, honey?\"\n\nWell, that pretty much told me where her mind was. For all she knew I was coming over to ask her to come back home but she didn't even wait to find out. \"Sheri, I have the day off tomorrow so I'm going to look around for a divorce lawyer.\"\n\nI could see from her expression she wasn't expecting that. I really didn't understand her surprise.\n\n\"Sheri, you cheated on me multiple times over months. I really can't believe there's any kind of future for us after that,\" I said while standing up. I'd said what I came to say. I didn't see any reason to stick around longer, debating the subject. I started toward the steps. \n\n\"Wait, Dylan, wait. I said I was sorry. Look, I...I don't have to stay here. I'll come home with you. We can settle this, I know we can.\"\n\nI stopped and looked back at her. \"Sheri, six months or six years, I'm never going to forget that you had an affair and I'd never trust you again. I'd never feel comfortable leaving you alone again. No, it's over. You have no idea how badly you've hurt me, do you?\"\n\nI saw tears in her eyes again, but somehow I had the idea this was going to be a lot harder on me than on her. She started crying and ran into the house as I drove away.\n\nThe next day I found a lawyer from the yellow pages and got an appointment for that Wednesday morning. I was on the late night shift so I had plenty of time. I sat in his office while he explained the ins and outs of getting a divorce. Since we'd only been married a couple of years he doubted the judge would hit me up for any alimony, especially since she could live with her parents. He told me he would draw up the papers and have them ready for me to sign by Friday. His retainer took every cent I had in the bank. I sure hoped he had some kind of a payment plan for the rest.\n\nBy the time the papers were ready on Friday, I was already at work. I was on days the following week and would have no time to stop into his office so he sent them to me with instructions for me to sign where he had red exes and Sheri to sign on the blue. I wasn't looking forward to going over there again, but it would cost another hundred bucks to have them delivered and I was broke.\n\nI called ahead and spoke to her dad. I told him what I had and asked when I could come over. He said to make it after dinner. I expected Sheri to there but he was alone. He invited me to sit down at the kitchen table and gave me a cup of coffee.\n\n\"Can I see then?\"\n\n\"Sure,\" I replied, sliding the envelope to him. \"They're pretty straight forward. We don't really have anything except the two cars and I'm giving her the one she drives.\"\n\nI sipped my coffee while he studied the paperwork. After a couple of minutes he put it down. \"I have no idea what started all this, but don't you think you're rushing into this, son? Sheri doesn't want a divorce. She just wants a little time to herself.\"",
        "I wasn't sure what to do. I didn't particularly like my father in law but I didn't want to hurt him; neither did I want him to think I was being unreasonable. I wasn't going to say anything to anyone but I really did want him to know the truth.\n\n\"Dad, do you remember a kid in high school by the name of Carl Landow?\"\n\n\"Uh, vaguely; if I remember right, he and Sheri dated briefly. What does he have to do with this?\"\n\nThere was no sense beating around the bush. \"He and Sheri have been having an affair.\" \n\nI didn't get quite the reaction I thought I would but I could see the shock in his eyes. \"No way! She wouldn't do that,\" he flatly stated. \n\n\"It's true, Dad. They've been writing back and forth to each other for almost a year. She kept all his letters in her glove compartment. I discovered them when I was called out one night and had to take her car.\"\n\n\"Okay, I'll admit, they shouldn't have been writing to each other, but...\" \n\nI knew what he was going to say. \"I read them, Dad. On three separate occasions they were shacked up in his motel room while I was at work.\"\n\nDad lowered his head and sighed. \"I'm sorry, Dylan. I didn't know that.\"\n\n\"I didn't want you to think I was being a jackass or I wouldn't have told you.\"\n\nHe nodded but still couldn't look me in the eye. \"Leave these here,\" he said, laying his hand on the paperwork. \"I'll make sure she signs them for you.\"\n\nI thanked him as I stood and he followed me to the front door. We shook hands. \n\n\"I don't suppose there's any way you'd ever forgive her?\"\n\n\"Dad, the distrust and suspicions would tear us apart anyway and we'd probably end up hating each other. I think this is best all around.\"\n\nI didn't even bother turning the lights on when I got back to the apartment. Somehow, the thought of illuminating my world seemed offensive. The darkness was much more welcoming to my mood. \n\nUsing only the moonlight coming through the window, I navigated my way to the fridge and retrieved a lonely bottle of beer. I scrounged around in dark, feeling for the opener and pried off the cap before seeking refuge in my favorite chair. I wasn't much of a drinker and certainly one beer wasn't enough to make me forget, but I thought it might make it easier for me to sleep.\n\nIt was only a little after nine, but what the hell, there was no reason to stay up. Sleep, I found, was the only true relief from sadness. \n\nI couldn't tell you what they were, but I know I had three or four bad dreams that night. The last one woke me up. I took the opportunity to take a leak then went back and sat on the edge of the bed. I felt so empty, so hopeless, so void of life. \n\nAs my eyes adjusted to the predawn light they seemed to be drawn to the knurled grip of my Beretta sticking out from the holster on the nightstand. A small voice hidden deep inside my soul told me to remove it from its sheath. I hefted it a couple times in my hand. It felt good. It was a little lighter and a little thinner than most three-eighties so it fit my hand perfectly. I could put eight rounds in the black of a twenty-five foot pistol target and never cut white paper. \n\nUnconsciously, my thumb reached around and pushed the safety lever over revealing the small red dot that told me the weapon was operational. I closed my eyes and suddenly felt light as a feather, almost as though I was floating. I could hear the click of the hammer as it snapped into the cocked position. When I opened my eyes again, I was looking down the barrel. Just a four pound trigger pull stood between me and eternal peace. My hand slowly started to squeeze. \n\n\"You know your parents are going to blame themselves.\" This voice was much louder than the other. This one was coming from the frontal lobe of my brain and sounded angry. \"Are you really willing to saddle your folks, not to mention Sheri, with a life-time of guilt? What about that asshole, Landow, you going to let him get away with ruining your life?\"\n\nI had been so wrapped up in my own misery I'd almost forgotten about Landow. Yeah, I'm not sure how yet, but there's got to be some way to fuck up that asshole's life like he did mine. My thumb eased off the trigger and I returned my Beretta to its holster. \n\nI stretched back out on the bed and propped up my pillows. I felt a little better focusing my thoughts on Landow, at least it gave me something to live for. I was hoping he was married. Then I could destroy his marriage like he did mine, but I had no idea how to get the information, Jerry would though. Jerry Spencer was our investigative reporter. He knew how to do all that stuff. \n\nI went in to work a little early. Jerry was one of the few reporters who had his own office, which is where I hoped he'd be. He was busy pounding away on his typewriter when I knocked on his door.\n\n\"Come on in, Dylan. To what do I owe the pleasure?\"\n\n\"Hi, Jerry. I need your expertise. How would I find out if someone is married, and if so, how would I get his home address?\"\n\nHe looked up and gave me his full attention. \"Well, you could try calling the operator and asking for information, but without his address I doubt she'd be able to help. Does this person live around here? I mean you can try looking him up in the phone book, then call the house during the day and see if a woman answers.\"\n\n\"No, he lives in Saint Louis, or at least around there. All I have is his name and work address.\"\n\n\"Is it a real common name?\"\n\n\"No, I don't think so. His name is Carl Landow, but he spells it funny. Instead of an \"a-u\" at the end, he spells it with an \"o-w.\"\n\n\"Yeah, I doubt there's a lot of Landows with that spelling. The branch of the Chicago Library on North California has phone books for all the major cities in the country. If they don't have Saint Louis, the main branch downtown will. If there's more than one Landow you'll just have to call until you find the right one.\"\n\n\"Thanks, man. I knew you were the one to ask.\" \n\nThe following day I got over to the library. I found the book I wanted and sat down to start looking for Landow. There were a bunch who spelled it the other way but only with that spelling. I took down the information but wouldn't have time to call till the following week. \n\nWhen I finally had time during the day, I made the call. A woman answered so I introduced myself and asked if she was Carl's wife. When she answered yes, I went on to tell her the nature of my call. She didn't sound all that surprised over the phone. When I explained about the letters she asked if I still had them. I told her I had copies and she took me up on my offer to send them to her. That was music to my ears. \n\nLater in day, between jobs, I stopped at a stationery store, bought a large manila envelope, filled it with the letters, and sent it along. God, I prayed she'd divorce his ass and take him for every penny he was worth. \n\nThe little bit of euphoria I got from that didn't last long, unfortunately. The very next night Sheri's dad stopped by the apartment with the signed divorce papers. This time it was me offering him coffee. I could tell he was distressed. He sat at the kitchen table and told me what was on his mind.\n\n\"Dylan, I can't tell you how sorry I am about all of this. When you two first told us you were going to get married, I was dead against it. You were simply too young. I still thought you were too young when you tied the knot, but you had a good job, and anyone could see how much you loved each other, so I gave you guys the benefit of the doubt. After that first year, I changed my mind. You guys seemed to be doing great and I told myself I was wrong. I pictured the two of you making each other happy for the rest of your lives. It turns out I was half right all along. Sheri is too young. I'm not sure if that's our fault or just the way she is, but she just hasn't matured yet. \n\n\"She does love you, Dylan. It's extremely obvious to me and her mother. We hear her sometimes crying in her room, but for some reason love doesn't seem to be enough. She still has this need to be the most popular kid in school. \n\n\"I told her she has to go out and find a job. I don't know, maybe that'll make her grow up some. I sure hope so,\" he said with a melancholy tone. \n\n\"Well,\" he said, standing up and getting ready to leave, \"anyway\u2014there's the paper work. Those teardrops are from Sheri as she was signing them. Maybe someday, after she grows up some, you guys will get back together.\" \n\nHe looked into my face but didn't see much hope in it. \"I know,\" he said with a forced smile. \"I'm just so sorry to see you guys break up. I don't blame you. I'd do the same thing under the circumstances, but it's just such a shame.\"\n\nI walked him to the door. He turned and started to shake my hand but pulled me into an embrace instead. \"You take care of yourself, my boy,\" he said while patting me on the back. \"Don't be a stranger.\" With that he left me with tears in my eyes again. \n\nLife after that was barely worth living as far as I was concerned. There were some high points here and there. I had some good times with my parents. Dad and I would go fishing now and them. It was something we'd done together since I was three or four. He was a great fisherman and taught me everything he knew. I always got along good with my folks but fishing was the one thing that made me feel closest to my dad. \n\nThen there was the call I got from Carl Landow. It gave me great pleasure to hear his anger as he ranted and raved about the loss of his marriage. I pissed him off more when I giggled at his threats, then had one of my own. \"Come on, shit head. You're more than welcome to come after me. I'll give you a third eye right between the other two, mother fucker.\" He hung up after that.\n\nThere were other things as well. I'd get a good assignment that I enjoyed shooting now and then, but other than that, my life was pretty miserable. I didn't feel like socializing, in fact I felt loneliest when I was with others. I spent a lot of time at home, in bed. I slept a lot and it was getting harder and harder to get up every day. It was like rising from the grave only to find you're still dead. \n\nI found emotional pain was a lot worse than the physical kind. Its scars were invisible but very much and forever present. Days turned to weeks and weeks to months of a soulless existence. \n\nIt had been over a year since our divorce. It was too painful to keep in touch with Sheri's parents, but I heard through the grapevine that she strongly regretted our break up. Steve was the only friend with whom I still associated now and then. Over a beer, he told me she seemed to do a lot of growing up over the last year and asked him if he thought there was any chance she could get me back. \n\nI was curious. \"What'd you tell her?\"\n\n\"I said I wasn't the one to ask, you were.\"\n\n\"Steve, as much as miss her, if she asks again, tell her no. I'm barely surviving now. I couldn't go through it again. It'd kill me for sure. I couldn't take the chance, Steve.\"\n\n***\n\nAs I was driving into work, I was looking at all the barren trees. Fall was almost over. We'd be slipping and sliding on snowy roads before long. I hated to see that. The short, cold days just added to my overall melancholy outlook on life. \n\nI exchanged the usual greetings on the way to pick up the day's assignments and was looking through them as I meandered along to the photography office. We usually averaged six to eight assignments a day, but I was only handed three. I saw why as I started to read the third one. \n\nThey were sending me to Evergreen Plaza, an indoor shopping mall. I'd heard of the one in Minnesota but had never seen it in person. A couple of the other photographers took picture as Evergreen was being built and said it was incredible. It was a forty-five minute drive one way, and Lyle wanted lots of shots for a full page Sunday spread. To make sure I had enough time, he blocked out four hours for the shoot.\n\nI was instructed to stop at the security office when I got there. They'd give me some kind of pass that showed the store managers that I had permission to be taking pictures in the stores. The pass turned out to be an orange plastic card that I had to hang around my neck. It looked stupid but I guess it worked because I didn't get hassled by anyone, including security guards.\n\nI had been there for a couple of hours, shot two rolls of thirty-six exposure film and was about half way through my third. When I finished that roll I was going to head out. \n\nI was in the concourse, shooting down a row of stores. I was looking through the eyepiece and focusing when I felt something wrapping around my leg. I looked down and right into the terrified blue eyes of a little girl. She couldn't have been more than four or five years old. By the way she was clinging to my leg I knew she was in trouble. I assumed she had gotten separated from her mother and was lost. I looked down at her with a big friendly smile and was about to ask her name, when in a quivering, small voice, she told me her problem.\n\n\"Please, mister, a man is following me. He took me away from my grandma and wants to take me away. Please don't let him take me, mister, please.\"\n\nJust then I heard another voice, a man's voice. \"Come on, honey. Mommy's waiting for us. Leave the nice man alone and let's go.\"\n\nI looked up and saw a middle aged male approaching us. The little girl hugged my leg even tighter and moved around to the other side of me for protection. \n\n\"Is this your little girl?\" I asked. \n\nHe smiled. \"Yeah, she's always running around, playing games.\"\n\n\"She's really cute. What's her name?\"\n\n\"Ah, Mary,\" he answered, sounding a little unsure.\n\nI looked down at her. She was shaking her head. \"My name is Sabrina. He's not my daddy. I don't have a daddy.\"\n\nThat was good enough for me. I raised my camera and quickly focused on the guy's face before pressing the shutter release.\n\n\"Hey, what are you doing?\"\n\n\"Taking pictures for your family album,\" I replied as I snapped off a second shot.\n\nHe put his hand up to block his face and made a beeline for the nearest exit. By that time, the little girl had a death grip on my leg. I smiled again and knelt to her level. \"It's okay, Sabrina, he's gone. I won't let him bother you again.\"\n\nShe let go of my leg and threw her arms around my neck, pressing the side of her head into my chest. My heart just melted as I gently returned her hug. \n\n\"Okay,\" I said, not wanting to appear to be a pervert, myself. \"You said you were with your grandma. Do you know what store you were in?\"\n\nShe shook her head. \"No,\" she answered, now with tears in her eyes. She was really tugging at my heart strings. I was wishing I could take her home with me, but of course that was out of the question. \n\n\"Don't cry, Sabrina. We'll find her. We won't leave here until we do, okay?\"\n\nNow she nodded her hear with a little more confidence. \n\n\"There is an office down here with a nice lady who will help us find your grandma. Will you go there with me?\"\n\nAgain, she nodded as she reached for my hand. It was so tiny and delicate. She smiled up at me as we started for the security office. I had to remember to walk slowly so her little legs could keep up. When we got to the office I helped Sabrina into a chair then turned toward the woman sitting behind the desk. Her name was Amanda. She was the same person who gave me the ugly orange press pass. \n\n\"Amanda, we have a problem. This is Sabrina. She got separated from her grandmother and has no idea where she is.\"\n\nAmanda looked relieved and almost gasped. \"I can tell you exactly where she is. She's with two of our security guards, frantically searching for her granddaughter.\" She was already reaching for a walkie-talkie that was sitting on her desk. \"Art, Art this is Amanda, come in.\"\n\nI heard someone squawking back at her.\n\n\"She's here, Art. Tell her grandmother she's safe and sound in the security office and bring her back here, will you.\" She put the walkie-talkie down and directed her attention to Sabrina. \"Honey, your grandma will be here in just a minute.\" \n\nI don't think I'd ever seen a smile that big, certainly never as beautiful. \"Thank you.\" You could tell the fear was gone and was replaced with excitement. \n\n\"Where did you find her?\" Amanda asked.\n\n\"I didn't, she found me. She said some guy took her from her grandmother. I got a good picture of the guy. I'll print it out when I get back to the paper and give copies to the cops.\"\n\n\"Oh wonderful, could you send some copies to me as well. I'd like my security people to know him on sight,\" she asked while handing me her card. Just then we heard footsteps rapidly approaching and an elderly lady rushed in.\n\n\"Grandma!\" Sabrina scooted off the chair and the two threw their arms around each other in an emotional scene of love and tears. \n\nThe two security guards stood by the door. It struck me that they didn't know who I was. For all they knew, I was the guy trying to kidnap Sabrina. I walked over and took the card from Amanda. \"How many copies do you need?\"\n\n\"Is it too much to ask for thirty? I'd like to give one to the stores as well.\"\n\n\"I'll send you fifty,\" I told her. I turned around to say goodbye to little Sabrina. \n\n\"Dylan!\" \n\nI looked up at the elderly lady who had just exuberantly shouted my name. She looked vaguely familiar but that happened a lot. Most people remembered the guy who took their picture for the paper, but for me, they were just another assignment. \n\n\"I'm Angela Cooper,\" she gushed. \"You caught the guy who beat up my daughter.\"\n\nI got instant recall. \"I met you in the hospital room. How's your daughter doing?\"\n\nShe glanced at Sabrina to see if she was listening. She was. Angela looked back at me and I could see she didn't want to talk in front of her granddaughter. \n\n\"Not good,\" she whispered with a wince. \"It seems like every time we have a crisis of some kind, you're there to save us. Hey, how about coming by one night this week and letting me cook you dinner. Bring your wife.\"\n\nNow it was my turn to wince. I never thought of Sheri while I was working and I wanted to keep it that way. \"I'm not married,\" I replied. \"I don't want to impose.\"\n\n\"Oh please, it's no imposition. I have to show my appreciation some way. I'd offer you a reward or something but I don't have any money. The least I can do is give you a home cooked meal.\"\n\n\"Please,\" we all heard coming from the peanut gallery.\n\nI looked down into those big blue eyes. How could I possibly resist. \"Okay, what night is good for you?\"\n\nWe made arrangements for that Friday night and she asked me what kind of food I liked. I knew they didn't have a lot of money and I do like a good bowl of spaghetti and meatballs so that was my choice.\n\nI don't know why, I'm certainly not a shy person, but I was nervous as I rang the doorbell. I had brought a bottle of wine with me. I didn't know if they drank wine or not but I didn't want to go empty handed so I brought a bottle of chardonnay.\n\nWhen the door opened, there stood the tiny package of beauty that had captured my heart a few days earlier. \"Hello, Mr. Mc...Mc...\"\n\nI could see she was embarrassed that she forgot my last name. \"It's McHenry, Sabrina, but if you don't think your mom and grandma will mind, you can call me Dylan.\"\n\n\"No,\" she said, \"I need to be respectful. Welcome to our home, Mr. McHenry. Please come in.\" \n\nGod, she was just the most polite and adorable little lady I'd ever seen. She guided me into the kitchen where her grandmother was setting the table. I offered the wine and she asked if I'd open it for her. We made a little small talk before she said anything about the mall incident.\n\nI was wondering how she let some guy just walk up and take Sabrina. She told me he had an accomplice, a woman who distracted her. She pretended to bump into her and dropped her purse. A bunch of stuff spilled all over the floor. When Angela bent down to help her pick it up, the guy must have been right behind her. He had a doll that he used to lure Sabrina far enough away to take her hand. He told her he was taking her to her mother. When Sabrina started to resist, he squeezed her hand and jerked her along with him. When she finally broke free, she saw me. Sabrina told her it was the orange thing I had around my neck. She said I looked like somebody important. That's why she ran to me.",
        "I'd seen some really terrible things while working for the newspaper, but it was hard to imagine that such evil actually existed.\n\nBy the time Angela finished her story, it occurred to me that I hadn't seen her daughter yet. I was beginning to wonder if she was out on a date or something. When Sabrina went into the living room for a little while, Angela explained in a quiet voice.\n\n\"Dylan, you asked before about my daughter, Maria. She's not doing well, I'm afraid. I'm really worried about her. She's scared to death of men.\"\n\nI thought back. \"She didn't seem to be afraid of me in the hospital, in fact she gave me a nice smile.\"\n\n\"I know, but since then she's regressed. She was only eighteen when she got pregnant. Her boyfriend was a good-for-nothing jerk. When she told him about the pregnancy, he beat her up pretty bad. We were afraid she was going to lose the baby for a while. She was already very gun-shy of men when that monster beat and raped her in the back yard. For a while I thought she'd be okay. Then the nightmares started. She sometimes wakes up while trying to fight off an attacker. She told me she can actually feel the blows in her sleep. As time passed she became more and more of a reclusive. It's gotten so bad she won't even leave the house anymore.\"\n\n\"I'm so sorry, Angela. Have you tried therapy,\" I asked.\n\n\"I can't get her to go, Dylan. I can't get her out of the house let-alone to a therapist. I...I hope you don't mind, but I remember that smile she gave you and I'm hoping she'll join us tonight. Maybe if she sees you again, she'll see all men aren't going to harm her.\"\n\n\"I don't mind at all,\" I told her. \"I'm more than happy to do anything I can.\"\n\nShe had a nice smile too. I figured it must run in the family. \"Have a seat, Dylan. I'm going to see if I can get her to have dinner with us.\" She walked down a short hallway and gently knocked on a closed door. \n\n\"Maria, Dylan is here. Come on out and have dinner with us, honey.\"\n\nI heard a voice from behind the door but I couldn't catch what she was saying. I could guess though from Angel's response. \n\n\"Come on, Maria. You've got to eat.\"\n\nJust then the little bundle of joy emerged from the living room. \"Mommy, please come out. He's not bad, he's a nice man. He won't hurt you, I promise.\" When she didn't get a reply, Sabrina reached up, turned the doorknob, and walked in.\n\nAngela came back to the kitchen, sadly shaking her head. \"I'm sorry,\" she said. \n\nJust then a small miracle happened. With a big smile stretched across her beautiful face, Sabrina led her mother into the kitchen by the hand. \"Mr, ah...Mc...McHenry,\" she remembered with a smile. \"This is my mommy.\"\n\nAngela immediately pulled out a chair on the opposite side of the table for her. \"Here, Maria, sit here. You remember Dylan, don't you? He came to see you at the hospital that time.\"\n\nMaria had been looking down but raised her head slightly and gave me a nervous smile as she nodded. She was petite but due to the baggy clothes she wore, it was impossible to see her figure. Her raven black hair hung around her shoulders and she had the same striking blue eyes as her daughter; unfortunately, behind them I saw the same fear I saw in Sabrina's a few days before.\n\nWe were well into our dinner before she spoke. Her eyes darted in my direction then back down. \"Dylan, I...I never did get a chance to thank you for what you did. I...I understand we have another reason to be grateful to you, too.\"\n\nI gave her the broadest, friendliest smile I could. \"No thanks is necessary, Maria. I'm just so glad I was there to help.\"\n\n\"He was really brave, mommy. He made the bad man run away,\" Sabrina offered.\n\nI was still smiling. \"He ran away because I took his picture. I sent copies to Amanda at the mall and to several police forces. Hopefully, they'll catch him before he tries it again.\" \n\nIt was the first time in a long while that I'd had a great time without my folks present. Sabrina had a lot to do with it. She was the most precious little girl I'd ever seen. Maria seemed to be loosening up a little bit, but she retired to her room and closed the door soon after putting Sabrina to bed. Angela was almost giddy at how much her daughter socialized. She told me Maria stayed in her room all day when they had to have a plumber come out earlier in the month. She wouldn't unlock her door or even eat anything until he'd left. \n\nIt was heartbreaking to hear and I wondered how it was affecting little Sabrina, seeing her mother like that. As I was leaving, I asked Angela if it would be okay if I came by and visited once in a while. Her strength surprised me as she wrapped her arms around me in a bear hub. She kissed me on the cheek and said I was welcome anytime, day or night. \n\nI actually went to bed that night with a smile on my face, and thoughts of how to help Maria replaced my usual unpleasant thoughts of ending my life. When I got up the next morning, I felt like I had a purpose other than simply going to work. The first chance I got, I went to the library to learn as much as I could about Maria's condition and what I could do to help. \n\nOf course I'm not a psychiatrist, they have a language all their own. After hours of reading I wasn't sure I knew any more than I did when I started. Ninety-five percent of what I had read went right over my head. The things that I did understand just seemed to be common sense: don't lose your patience, don't make fun of or undervalue a person's fears. For the patient those fears are very real. Don't try to force a person to face their fears. The person will let you know when they are ready, but it's a long, slow process. Hell, I had all the time in the world.\n\nI had no idea if I could help at all, but I was going to try. They were a nice family who had been dealt a raw deal. I'm not sure why I felt so strongly about helping them but I did...if for no other reason than Sabrina; she deserved to have a mother with whom she could bond. \n\nI started to wonder how I would begin. I couldn't very well just barge in and say, Maria, I'm going to help you get over your fear of men. That would probably scare her right back into her bedroom. The more I thought about it, the more I thought about Sabrina, she was the key.\n\nI called ahead and told Angela I was coming with a present for Sabrina. I rang the bell and put the wrapped package behind my back. Angela opened the door and asked me inside. Almost before the door was closed, an excited little girl ran up and almost tacked me by throwing her arms around my legs.\n\n\"Hi, Mr. McHenry.\" She'd obviously been practicing my name. \n\nI bent down and hugged her back with one arm, since the other held her present out of sight. I looked around but didn't see Maria. As we walked into the living room I got a glance at her bedroom door and saw it was closed. Angela had a carafe of coffee and cups on the table in front of the couch where she offered me a seat. \n\nLittle Sabrina was obviously starved for a man's attention. She hopped up and sat on the couch right next to me. \"It's nice to see you again, Mr. McHenry,\" she said in a manner that befitted someone much older than her five years.\n\n\"Well, it's very nice to see you again, too,\" I replied. \"I had to come back because last time I was here I forgot your birthday.\"\n\nShe giggled. \"It's not my birthday, silly,\" she laughed, finally starting to act like a five-year old. \n\n\"But it was your birthday a while back, and I didn't bring you a present, so...\" I let my words hang while I brought her gift out from behind my back. I didn't know how many presents she got on her birthday or Christmas, my guess was not many at all from the expression on her beautiful face. \n\nI think the air split in two from her shriek. She leaned over and hugged me while thanking me several times. She finally looked over to her grandma and told her she was going to show her mother. Angela had a big smile on her face while she nodded her head. Sabrina jumped down and ran into her mother's room without even knocking.\n\n\"You didn't have to do that, Dylan. I hope it's nothing too extravagant,\" Angela said.\n\n\"Nah, it's just a doll. Believe me, it was my pleasure.\"\n\nJust then Sabrina came running back into the living room with Maria trailing behind. She stood in the corner while her daughter came up and sat beside me again. \"Mommy says I should unwrap this in front of you.\" With that she started tearing the paper off. Her mouth dropped open with a gasp when she saw the Barbie Doll looking back at her through the clear plastic cover.\n\nI'd won several awards for my photography and had a bunch of shots picked up by news services who then disseminated them around the world, but I'd never experienced the kind of pride I did when I saw Sabrina's face light up with joy. \n\n\"Mommy, Mommy, look, it's Barbie!\" She hopped down from the couch and ran to Maria whose eyes were now wide with surprise. \n\nShe looked over at me. \"How did you know?\"\n\nAngela saw my befuddled expression. \"She wanted one so bad for Christmas but we were so broke we just couldn't do it.\"\n\nThat put a smile on my face. \n\n\"Have you thanked Mr. McHenry yet?\" Maria asked of her daughter.\n\n\"Yes, she did,\" I replied. \n\n\"Can I thank him again?\" she asked Maria.\n\n\"Of course, honey.\" It was the first time I'd seen Maria smile.\n\nSabrina turned, ran up to me and literally jumped in my lap, throwing her arms around my neck. \"Thank you, thank you, Mr. McHenry. Thank you so much.\"\n\n\"You're very welcome, Sabrina.\"\n\n\"Okay, honey; why don't you take Barbie in your room and play so grandma can visit with Mr. McHenry.\"\n\n\"Okay, Mommy,\" Sabrina replied. Quickly, she stretched up and kissed me on the cheek before jumping off my lap and running into her room. \n\n\"Would you like a cup of coffee?\" offered Angela. \n\nI was hoping Maria would sit and visit with us but it wasn't to be. As Angela poured the coffee, Marie thanked me again for her daughter's doll but retired back into her room afterward. \n\nAngela and I had a nice visit. She was a very pleasant person, but she also had some hard times. Her husband died in a freak accident in the mills when Maria was only two. About a year later she met a man she fell for and thought was marrying material. Fortunately, or unfortunately, however you want to look at it, he showed his true self before they got hitched. They'd gotten into an argument about something and he hit her\u2014a couple of times. Of course, Maria witnessed it. Angela had the sense to throw him out and tell him she never wanted to see him again. After that she just concentrated on bringing Maria up as well as she could. \n\nAngela told me she never liked Maria's boyfriend. He had the same kind of air about him as the guy she almost married. She wasn't really surprised when he beat up Maria. Thank God, like her mother, she had enough sense to stay away from him after that. The beating, along with seeing Angela beaten when she was a little girl, left Maria with emotional scares, so when she was attacked again by the rapist, it triggered her intense fear of men. \n\nAngela was worried about Sabrina. \"Dylan, I won't be around forever. What's going to happen to that sweet little girl if something happens to me?\"\n\n\"Angela, you look very healthy to me. Just take good care of yourself and Sabrina will be married with kids of her own before you leave us.\"\n\nShe smiled. \"You're optimistic, I'll say that for you,\" she laughed. \n\nGoing home that night, I was more determined than ever to help Maria. Over the next few months I visited once or twice a week. I talked to my folks as well. Dad warned me about getting too involved but there was no such thing as far as I was concerned. He'd never met Sabrina. \n\nOn Christmas Eve, I showed up at the Cooper home with my arms full of presents. Most, of course were for Sabrina, but I also got several for Angela and Maria. As I left that night, Angela kissed me on the cheek again and thanked me for the best Christmas they'd ever had. Talk about feeling good, I'd almost forgotten about Sheri, entirely; not completely, of course. I did wonder how she was doing from time to time. \n\nChristmas day, I had spent with my folks. I'd already had their Christmas present delivered; a brand new Zenith color TV. It was the first color set they'd ever had. I was so proud to be able to buy it for them. Hell, since the divorce, I had nothing else to spend my money on. \n\nAll through winter I'd kept up my weekly visits with the Cooper family. By spring I almost felt like part of the family myself, although Sabrina still insisted on calling me Mr. McHenry. \n\nMaria had her good days and bad. Sometimes she would sit with Angela and me and even join the conversation once in a while. She always kept her distance from me though. Other times she wouldn't come out of her room again, although those days were getting fewer and fewer. \n\nI'd gone back to the library several times, although all the books and psychological theories I was reading about really didn't seem like they were helping a whole lot. The one thing I kept coming away with was patience, every book talked about being patient and not trying to force anything, but after several months with very little progress, patience was becoming a challenge. If I could just get her to trust me, then maybe I could slowly introduce her to a couple of friends. \n\nSome of the books I read talked about reliving comfortable times from the patient's childhood. I asked Angela if there was anything she could think of that might fit that bill. She told me she used to take Maria on picnics when she was young. She said they couldn't afford to go out to eat, but she'd make sandwiches for Sunday lunch, then they'd walk to the park, spread out a blanket, and eat under the trees. She said Maria really loved it. Unfortunately, the neighborhood had changed considerably since those days and that park wasn't a very nice place anymore. \n\nI knew the perfect place; a beautiful little park along the Kankakee River. The paper had four women's fashion sections every year as a Sunday supplement, and we'd sometimes shoot them in the park. No one had ever bothered us, in fact, during a weekday there was hardly anyone around. Now the problem was how to get Maria there. \n\nOne of the things all those books agreed on was to not force anything. Originally, I thought of getting Sabrina so excited over the idea that she'd convince her mom to come with us, but after further consideration, I didn't think it was a good idea. If she couldn't get her mom to go she might develop some animosity towards her mother and that was the last thing I ever wanted. No, somehow I was going to have to convince her myself and there was nothing in any of those books that offered a clue on how to do it.\n\nMy dad was smart person. I talked with him about various problems in my life and he always had good advice, so I sat down with him one Sunday after dinner. \n\n\"Son, I agree, I would not use the little girl. I think that would be the worst thing you could do. Does this Maria know you're trying to help her?\"\n\n\"Ah, no, not really. I've never said anything to her and I'm pretty sure Angela, her mother's never said anything.\"\n\n\"Okay. The problem is, you, me, most people at least try to think rationally. Her fear of men is not rational. I'm not saying it's not understandable with everything she's been through, but it's still not rational. It's my experience that you simply can't reason with an irrational person, but if you can gain their trust and confidence you can sometimes coax them.\"\n\nI really didn't understand exactly what he saying. He could tell by the look on my face.\n\n\"First, how are you going to gain her trust if you don't ask for it to start with? I think you've probably laid the groundwork by going over there so much. Maybe now it's time to level with her. Tell her you'd like to help her and ask for her trust. Tell her you'd like to help her to get over her fear of men so she can interact with her mother and daughter, in public. If she accepts your help you'll have to be careful not to go too far too fast. Take baby steps.\"\n\nIt sounded like my dad knew more than all those books in the library. I thought about what he said that night when I got home. Leveling with her was easier said than done, though. I had no idea how to approach her. I decided to do it like dad would\u2014straight on.\n\nThe next time I was over, Maria had come out of her room and was sitting across the kitchen table from me. She always sat in the same seat. It was closest to her room if she suddenly felt the need to retreat. \n\nI saw the panic in her eyes when I asked Angela to leave us alone for a few minutes. \"Please, Maria, don't be afraid. I know you're afraid of men and with what you've gone through, I don't blame you, but I would never hurt you.\"\n\n\"Ah,\" she nervously stammered. \"I...I still think mom should be here.\" She looked as if she was getting ready to run.\n\n\"Maria, I want to help you, please let me try. I promise I would never do anything to hurt you. I will never make you do anything you don't want to do, but you have the sweetest, most beautiful little girl in the world who needs you. She needs you now and she's going to need you even more as she grows up. \n\n\"All I want to do is help you get over your fear. Please work with me. Let's do it together.\"\n\nWell, at least she was still sitting in her seat. That look of fear was still there, though. She was quiet and just stared at a spot on the table. \"I...I'm afraid,\" she finally said. \"How are you going to fix it so I'm not afraid anymore?\"\n\n\"I really don't know, Maria, but I do know that there are a lot of great people in this world and about half of them are men. I was thinking that maybe we could start by just getting you past your fear of me.\"\n\nShe raised her head and finally looked at me. \"You're...you're o...okay, I guess. I know Mom and Sabrina like you a lot.\" And there it was again, a small and very nervous smile, but still a smile. \n\nI was thankful for any miracle I could get, no matter how small, and returned her smile with an even bigger one of my own. My dad said level with her. I was about to do just that. \"I've never told anyone this before, but meeting the three of you has turned my life around. A couple years ago I discovered my wife was cheating on me. The divorce was devastating. I became so depressed I could barely function. At home all I did was sleep. I even had thoughts of suicide, more than once. \n\n\"That all changed for me that day at the mall. Now when I wake up, I look forward to the day. I can even laugh again. You, your mother and daughter have shown me there's so much to enjoy in life. I would like to return the favor if you'll let me.\"\n\nShe looked startled that anyone would share something so personal with her. This time the smile was almost imperceptible, but it was there. \"I...I don't know why I'm afraid of you. I\u2014I don't really think you're going to hurt me. I just can't help it. I know that's silly.\"\n\n\"It's not silly, Maria. Some people are afraid of spiders, some are afraid of the dark. Everyone's afraid of something. The fears are very real. That's not silly at all. I used to be afraid of tomorrow.\"\n\n\"Why were you afraid of tomorrow?\" She was starting to sound a little more confident in her speech. She wasn't quite as timid as she'd been.\n\n\"Because I knew tomorrow was going to be like today and yesterday, lonely\u2014lonely and empty,\" I answered. \"Sheri didn't take much with her when we split up. We'd only been married a couple of years so we didn't have very much. What she did take made me feel like life no longer had meaning.\"\n\n\"What...what was it, what'd she take?\"\n\n\"My self-worth,\" I admitted. \"I thought I'd lost it forever, but I found it again when a frightened little girl asked me to protect her.\" I'm not sure what I said, but whatever it was, it seemed to break the ice between us. Maria's nervous little smile suddenly spread across her whole face. ",
        "\"You are a nice man,\" she said, assuredly. \"I know I can trust you, but it still might take some time.\"\n\n\"That's okay, Maria. I'm not going anywhere and I won't force you to do anything you're not comfortable with.\n\n\"When you're ready, what I'd like to do is go on a picnic.\" I saw her immediately tense up. \"When you're ready,\" I reiterated. \"I know of a beautiful little park not too far from here. It's right near a river. We could spread a blanket out under a tree and listen to the ripples of the water as we eat.\"\n\n\"That does sound nice,\" she said. \"Mom and I used to go on picnics when I was young.\"\n\n\"I know, she told me. So here's what I want you to do tonight when you go to bed. I want you think about the picnic. Picture yourself there. Concentrate on having your mother on one side of you and Sabrina on the other. The sky is as blue as your eyes and there's a gentle, warm breeze rustling the leaves in the trees. You can hear the current from the river. You're safe without a care in the world.\"\n\nShe'd had her eyes closed the whole time I was describing the scene and opened them again with another smile when I finished. \"That does sound nice,\" she said. \n\nGoing home that night, I thought I had made progress, but once again, it proved to be more difficult than I thought. As much as Maria wanted to go on that picnic, her fear just wouldn't allow it. \n\nAgain, I was explaining the situation to my folks when my dad came up with a suggestion. \"Dylan, this girl seems to trust you, she's just not sure about being exposed to others yet. Why not bring them over here for a Sunday dinner. Since she trusts you, knowing I'm your father, I would think would get me half way there. Then she'd see there were two men she could trust.\"\n\n\"Oh, honey, that's an excellent idea,\" added my mom. \"I've heard so much about your friends, I'd love to meet them.\"\n\nI thought about it then called to run the idea past Angela first. She was more concerned with imposing on my mom and dad, but did think it might help. She told me Maria talked about me all the time and she was really trying to get over her fear. \n\nA couple nights later I stopped in after work. Sabrina dominated the first half an hour, of course, but then went to play. Maria, Angela, and I sat talking. I was very surprised when I mentioned going to my folks place. I wasn't met with nearly the resistance I was expecting. Maria was nervous, but was determined. \n\nThat Sunday, when I drove over to pick them up, Sabrina ran up and almost tackled me. \"Mommy's coming with us!\" she shrieked. \"Thank you, thank you for having mommy come with us,\" she almost screamed again. \n\nI'd never seen her quite so happy. I looked up at Maria whose smile reached from one ear to the other. Angela's was almost as big. They were all dressed like it was Easter. Maria looked absolutely gorgeous. I didn't think to tell them to dress casual. Oh well, I just hoped my dad didn't greet us at the door in his boxers.\n\nMy dad can be a little intimidating. He's six-two and weighs around two-forty. I noticed Maria kind of hiding behind me when she first saw him. \n\nSabrina, on the other hand, showed no fear as she stepped right up to him and offered her hand. \"How do you do, sir? Thank you for inviting us,\" she stated in her precious and precocious, very grown up alter-ego. \n\nMy dad was hooked immediately, I could tell. He got a broad smile on his face and immediately stooped down to shake her hand. \"You're very welcome, young lady. Thank you for accepting our offer, and welcome to our home.\" It took about as long for her to capture his heart as it did for her to capture mine. \n\nIt took almost twenty minutes for Maria to step out from my shadow, but she eventually got more comfortable. She helped my mom in the kitchen and again with the dishes after dinner while dad sat making paper airplanes with Sabrina. She was mesmerized by his aeronautical craftsmanship with a piece of paper and a pair of scissors. By the end of our four hour stay, it was as if we'd all known each other our whole lives.\n\nOn the ride back, Maria pensively watched out the side window as the world went by. It was the first time she'd been outside their house in over a year. As I pulled into their drive, Angela asked me to stay for a cup of coffee. I helped Sabrina arrange the twenty different pieces of winged stationary in her room while the coffee was brewing, then I joined mother and daughter in the kitchen. They both thanked me profusely for the wonderful visit and asked me to relay their thanks one more time to my folks. When it was time to leave, Maria walked me to the door. Sabrina came up and hugged me goodbye. To my shock, Maria then gave me a peck on the cheek and whispered in my ear.\n\n\"I'm ready,\" she said, quietly, \"for the picnic.\"\n\nIt was the first time Maria and I had any physical contact. It was so nice, I couldn't stop grinning on the way home. \n\nThe following week, I was on the late night shift so I didn't have to be at work until three-thirty. I had just finished breakfast when I heard a knock on my door. That was very unusual. I didn't get company during the day. My mind pretty much turned to mush when I opened the door. She was just as gorgeous as I remembered. \n\n\"Hi, Dylan.\" \n\nFor a few minutes I'd forgotten why we'd broken up and my heart went pitter-patter just like it did in high school. My first emotion was pure joy. God, it was good to see her. \"Hi, Sheri, come on in,\" I said, moving aside to allow her access. \"Coffee's not too old, would you like a cup?\"\n\n\"I'd love it, thanks,\" she said with that smile that could light up a coal mine at midnight. \n\nShe followed me into the kitchen and automatically took a seat at the table where we had shared so many meals. I poured us both of us a cup of java and set hers down in front of her. The euphoria of seeing her again was starting to wear off and feelings of sadness, with still a twinge of left over anger, was taking its place. She was watching me closely and must have seen the change in my face when I finally remembered why we broke up, because she actually winced before speaking. \n\n\"Dylan, for the last month or two I've been thinking of different ways to go about this. I'd come up with all kinds of sneaky plans, but I know you. I know you hate it when people play games. You admire people who are up front and just say what's on their mind, so here goes.\n\n\"First, I want to apologize for what I put you through. It was never ever supposed to go so far and hurting you was the last thing from my mind. At the time, it was exciting, but you know what they say about hindsight, as I look back now I can see it was the stupidest thing I've ever done...the stupidest and the most hurtful. I've never hurt anyone the way I've hurt you, the man I love. \n\n\"The second thing I want to say, and I know you're going to think I've got brass balls, but I want another chance. I've done a lot of growing up in the last two years, Dylan.\" \n\nWhat was it about her? It was more than just her beauty. Hell, we had two female reporters at work that rivaled Sheri in looks but I never had any romantic notions toward either one of them. I had to sit down while my heart did cartwheels. \n\nShe went on. \"I got a job. When I moved in with my folks, dad said I had to earn my own keep so I waitressed at night and went to school during the day to get a beautician's license. I'm working at a high end salon and make pretty good money. I'm still living with my folks so I've been able to save almost five thousand dollars. We could use that for the down payment on a house. \n\n\"I've learned my lesson, Dylan. Personally, I'd like to just get married again. I think we know each other pretty well, but maybe you'd like to just date again for a while? I'm good with whatever you want, Dylan, just please say you'll give me another chance.\"\n\nI sat there, stunned. I couldn't even speak for a minute or so. I had no idea what to say anyway. My insides were churning like a Mixmaster. I'd give anything for things to go back to the way they were, but I'd need a time machine for that. \n\nSheri just sat there, holding her breath. \n\n\"I don't know, Sheri, I just don't know. I'm going to need some time to think this over. I'm sorry, I don't mean to put you off, but...\"\n\n\"I understand, Dylan,\" she said as my words tapered off. \"I know the hurt is still there, at least some of it. When I go to bed at night, my last thought before falling asleep is that I wish I had a magic wand that I could wave and relieve the pain I caused you. I know I can't do that, but if you let me, I'd like to try my best to make up for it.\"\n\n\"Are you still seeing what's his name?\"\n\n\"Carl? Hell no. I meant what I said that day you confronted me, I haven't seen or talked to him since before we broke up. I did try to call him once. Although he never used it, he did have our phone number. I figured he might try to call when my letters stopped coming and I didn't want him getting a hold of you by accident. I knew hearing the sound of his voice would hurt you even more.\n\n\"I didn't get a chance to talk to him though. Evidently, he wasn't as important to that company as he thought. I guess he showed up half gassed one day and they canned him.\"\n\n\"He did call here,\" I told her.\n\n\"Oh, Dylan, I'm so sorry.\"\n\n\"It wasn't your fault. He called to talk to me. He was a little pissed because I told his wife about your affair and sent her copies of his letters. He said she kicked him out. That's probably why he was drinking,\" I said with a smile.\n\n\"Dylan, you...you will at least think about it, please?\"\n\nI gave her a reassuring smile and nodded my head, but I was not about to make any commitments. After saying what she had to say, Sheri told me I could reach her at her parents and wondered if I still had the number. I confirmed the number that was in my phone book to make sure they hadn't changed it and she left soon afterward. It was so weird. I'd been living on my own for the last couple of years but as soon as she walked out that door I felt lonely. \n\nLater in the week, I called my parents to see if I was invited for Sunday dinner. Mom answered the phone. \"Are you going to have your friends with you?\"\n\nShit, that reminded me, I'd been so preoccupied with thoughts of Sheri, I hadn't stopped in at Angela's all week. \"No, mom, it'll be just me this time.\"\n\nThe next day I checked my work schedule and stopped in at the Cooper's to make sure Maria was still up for the picnic. My day off was that following Monday. On Sunday, I was at my folks. After dinner, I helped Mom with the dishes then we all took our coffee in the living room to visit more comfortably. \n\n\"You'll never guess who showed up at my door the other day?\" Before they had a chance to speculate, I answered my own question. \"Sheri.\"\n\nNeither of them seemed all that surprised. Dad spoke up first. \n\n\"How's she doing?\"\n\n\"Pretty good, she got her beautician's license. I guess she's making good money. She said she's saved up about five grand for a down payment on a house.\"\n\n\"What's she going to do with a house?\"\n\n\"She's not talking about living there alone, mom. She wants a second chance. She wants to get married again.\"\n\n\"And?\" \n\n\"I don't know, Dad. I honestly don't know. I found out the other night that I still have feelings for her, strong feelings, but... I don't know. I don't think I'll ever really trust her again. I'd always be waiting for the other shoe to drop.\"\n\n\"What about Maria,\" mom asked? \n\nI thought mom was trying to change the subject already and was a little annoyed. \"We're going on that picnic tomorrow,\" I said.\n\n\"That's not what I mean, Dylan. When we were doing the dishes last week all she talked about was you. You've become almost as big a part of her life as Sabrina and her mother. She's in love with you. You're the reason she trying so hard to get over her fear.\"\n\nI guess mom saw the shock in my face. \"Don't tell me you had no idea.\"\n\n\"No...well, you know...I've been going over there for months and last week is the first time she's even touched me. Did she tell you she was in love with me?\"\n\n\"No, but it's not hard to figure out. She told me coming here was the first time she'd stepped foot outside of her house in almost a year. You know the fear hasn't gone away. She was scared to death of your father, but she trusts you. She's terrified of going on that picnic, but she's not going to let it stop her. She wants to get to the point where you'll ask her out on a date. \n\n\"You can't tell me you've never notice the light in her eyes when she looks at you?\"\n\n\"I guess I never really paid any attention, Mom.\"\n\nMy dad entered the conversation again. \"Do you have feelings for her, Son?\"\n\nI had to think for a minute. \"I'm not...I don't know, to tell you the truth. I think I've purposely rejected the thought of having any romantic notions because of her condition. I mean...I never thought of her being able to become romantically involved with a man.\"\n\n\"I just mentioned it because I think you're going to find Maria is very much in love with you and is trying her best to overcome her fears. As determined as she is, I'm pretty confident she's going to succeed, so I thought you should take that into account before making any decisions,\" Mom said.\n\n\"Great!\" I said, jokingly. \"I came over here for help with my decision about Sheri and you guys complicate things even more.\"\n\nMy dad got up to pour himself some more coffee. I raised my cup as well. As he poured, he gave me more advice at the same time. \"Sorry, Son, sometimes life gets complicated. Sometimes your brain and your heart fight with each other. When that happens, my advice is to go with your gut.\"\n\nI didn't get a whole lot of sleep that night. I couldn't turn off my brain. I did have feelings for Maria. I'd known that for quite a while. I also thought of Angela as my second mother and Sabrina as the daughter I wished I'd had. I guess, in the back of my mind, I had suppressed those feelings. \n\nI was anxious to see how the picnic would go. I told them I would take care of the food. There was a new chicken place that opened in town. I'd heard they had a special recipe that was extremely good. It was called, Kentucky Fried Chicken. It was perfect for picnics because you could buy a cardboard bucket filled chicken along with fries and biscuits. \n\nI picked up a bucket on the way to pick them up and the whole car smelled delicious by the time they piled in. Of course, one whiff and everyone was oohing and aahing before we even got out of the driveway. \n\nAs I figured, no one was at the park on a Monday afternoon. Except for a couple stragglers, the place was deserted. Sabrina picked out a nice place along the river with a big oak tree for shade. We formed a circle around the blanket we laid down and I dished out the paper plates and a bottle of wine, before we all dug in. Sabrina got grape juice. After a few bites, everyone agreed the chicken place was well deserved of its reputation. \n\nI could see everyone was really enjoying themselves. We were there for about an hour when Maria slid over by me and whispered in my ear to put my arm around her. Another breakthrough, I thought. Until last week she would almost panic at the thought of a man touching her. \n\nAs soon as she felt my arm, she leaned into me and laid her head on my shoulder. Sabrina was playing with a doll, but as soon as she saw her mother cuddling with me, she came over and put her arms around both of us in a three way hug. Angela had a grin that covered her whole face. \n\nFor the first time, I started to wonder if there was a chance to live a normal life with Maria. Then there was also the matter of sex. As afraid as she was with the physical presents of man, I would think sex would really be out of the question. I didn't want to think of myself as being shallow, but I was in my early twenties, I'll be damned if I wanted to live the rest of my life like a monk. \n\nOver the next few days I did a lot of thinking, not just about Maria, but about Sheri as well. Sex with her was pure heaven. She wasn't home when I called. Her mom said she was out shopping. We had a pleasant talk before I finally asked her to have Sheri call me back. The thought I had as I hung up the phone told me I'd made the right decision. \n\nSheri called back about an hour later. Her voice sounded hopeful. I told her we needed to sit down privately somewhere and talk. Since her mother and dad had no plans on leaving the house, she headed for the apartment. I had fresh coffee brewing when she got here. \n\nShe gave me a peck on the cheek as she walked in but didn't say much. We sat down on opposite ends of kitchen table with our coffees in front of us. Well, the stage was mine so I took a deep breath and started.\n\n\"Sheri, you were my first love and I can attest to what they say; I will always love you. When I found out about your cheating, I'm not sure what was stronger, my anger or my pain. It's been a little more than two years and most of the anger is gone, but a whole lot of the pain is still there.\"\n\nI could see her trying to anticipate my ever word. I should have just came out and told her in one short sentence, but I wanted to make sure she understood.\n\n\"I've given it a lot of thought since you were here the other day. I had already made my decision when I called earlier but the conversation with your mom clinched it for me.\"\n\n\"My mom? What did she say?\"\n\n\"When I asked if you were there, she told me you were out shopping.\"\n\nShe made that cute little face she always made when she didn't understand something. \"I was,\" she said. \"I needed another pair of shoes for work. I'm on my feet all day so they don't take long to wear out.\"\n\n\"I'm sure you were,\" I confirmed, \"but I wondered if you were out with a man.\"\n\nShe shook her head and opened her eyes wide. \"I wasn't, Dylan, honest. I was at the store.\"\n\n\"And I have every reason to believe you, Sheri, but I still wondered.\"\n\nI saw the look of understanding on her beautiful face as she suddenly realized what I was saying. \"The trust...it's gone for good, isn't it?\"\n\nI nodded my head. \"I'm afraid so, Sheri. I would always have that lingering doubt.\"\n\nShe stared at a spot on the table and looked like she was a million miles away as she took a sip of coffee. I assumed she was trying to think of a way she'd be able to restore the trust, but I knew she couldn't. After a long moment she came to the same conclusion. When she looked back up at me, her expression was one of acceptance. \"You're right about first love,\" she said with sadness in her voice. \"I will always love you too, and I'm so very, very sorry I destroyed what we had.\"\n\n\"I am too, Sheri. Believe me, if there was a way of fixing this...\"\n\n\"I know,\" she said, interrupting me, \"you'd do it in a heartbeat\u2014me too. To be honest, I really didn't think you'd take me back, but it was worth a try. I'm surprised you haven't told me that there's someone else. I really thought you'd shoot me down when I was here the other day. When you didn't, I got my hopes up, but in the back of my mind I knew it was a long shot.\" \n\nShe stopped talking for a minute and looked at me with a smile. \"I really do love you, you know.\"\n\nI thought about saying something nasty like, just not enough to stay faithful, but I discounted the thought immediately. She was truly remorseful. I could see it in her eyes. I was sure she had been beating herself up for a while and I don't kick people when they're down. \n\n\"How about you?\" I asked her. \"Got somebody waiting in the wings?\" \n\n\"Nah, I've been concentrating on getting my head on straight. It took me almost a year to realize what I gave up. Since then, I've been working to become the kind of person you could love again.\"\n\n\"I'm sorry, Sheri.\"\n\n\"I know, Dylan. You don't have to say it. The hurt I inflicted runs deep. You can't help the way you feel. Sometimes love just isn't enough,\" she said, forcing her smile this time. \"We're both young good looking, successful people, I'm sure we'll each find someone someday. I guess I'd better start putting myself out there again, I've been sticking pretty close to home until now.\"",
        "\"I wish you the best of luck, Sheri, I really do.\"\n\n\"Thanks, Dylan, you too,\" she said with another smile. \"Well, I'd better go. The folks usually go to bed pretty early these days and I don't want to wake them up.\"\n\nShe finished the last of her coffee in one sip and stood. I walked her to the door and had it open when she turned toward me.\n\n\"One last kiss for old time sake?\"\n\nI took her in my arms and pulled her into me for one more lingering, passionate kiss. We both had tears in our eyes as she walked to her car. Just before getting in, she turned and silently mouthed, 'I love you,' before throwing me a kiss. Once again, I felt the loneliness as I watched her pull away. \n\nIt was still too early to go to bed so I poured another cup of coffee and cuddled up in my lounge chair with a Mickey Spillane paper back. After several minutes I discovered I was still on the first paragraph. My mind was on Maria and I didn't even realize it. \n\nI was glad Sheri had the courage to ask about reconciling. After the divorce, I always felt like something was left undone. I think subconsciously, I was always a little uncertain of my decision to end the marriage. I was obviously angry and didn't even consider counseling. Over time, as the anger dissipated, doubt crept in. Sitting there, I finally felt comfortable. I felt like I could truly move on, but was Maria really the right woman, or was I jumping from the frying pan into the fire?\n\nI was always trying to come up with reasons to get her out in public without being too obvious about it. Sabrina's birthday was the following week. I thought about taking her to Kiddy Land. It was a year-round amusement park for young kids. They had all kinds of rides but nothing too intense. Of course there was cotton candy, games with ping pong balls, and all the trappings as well. \n\nI was afraid it might be too much too fast. Unlike the park, Kiddy Land was always packed with humanity. I called and talked to Angela before going over there. I didn't want to say anything in front of Sabrina and make Maria feel she was being forced into something she wasn't ready for. Angela said she'd talk to her after putting Sabrina to bed and see what kind of response she got. \n\nI stopped in the day after. Almost immediately, I noticed Maria being more nervous than usual. The three of us were sitting at the table talking when she opened up.\n\n\"Dylan, I understand you want to take us to Kiddy Land for Sabrina's birthday.\"\n\n\"Only if you think you're up to it, Maria. I don't want you feeling like you're being pressured in any way. I have a few presents for her and I can come and have a small intimate party right here if you'd rather do that.\"\n\nMaria didn't say anything for several moments while she thought it over. \"I know she'd love it. I thought about her going with just you and Mom, but she'd be disappointed if I wasn't there, too.\" She took another few seconds to summon her courage one last time. \"You'll stay with us, right?\"\n\n\"I'll be right by your side the whole time,\" I assured her. \n\nIt was a nervous smile but a smile none-the-less. \"She's in her room.\"\n\n\"I'll get her,\" Angela volunteered. She jumped up from her chair and walked down the hall to Sabrina's room before Maria had a chance to change her mind. \"Honey, Mr. McHenry has something he wants to tell you.\"\n\nLittle bright eyes came running out and right up to me. She had already hugged and kissed me on the cheek when I walked in, but then retired to her room to play with some of the toys I'd gotten for her. Of course, every time I came bearing gifts, Angela and Maria would bawl me out for spoiling her. \n\n\"Sabrina, do you know what day it is next Friday?\"\n\nHer eyes got big along with her smile. \"It's my birthday,\" she acknowledged with exuberance. \"I'm...I'm going to be six years old,\" she told me while showing me all five fingers on her right hand and her index finger on the other.\n\n\"That's right, young lady. You're almost grown up already,\" I joked.\n\nShe giggled with pride. \n\n\"Do you know where young ladies like you go to celebrate?\" She shook her head. \"Do you know what Kiddy Land is?\"\n\nI guess she did because her eyes grew the size of saucers as she rapidly nodded. I was awarded with another kiss on the cheek before she directed her attention to her mother. Suddenly, she looked worried. \"Mommy, are you coming with us?\"\n\n\"Yes, honey, I'm coming.\"\n\nSabrina went to her mother and crawled up into her lap. She put her arm around her neck. \"I love you, Mommy.\"\n\nI could see the pride those two had in each other from where I was sitting. Maria was also proud of herself, and rightly so. She was conquering her fears and bonding with her daughter. She wrapped her arms around her little girl and hugged her while giving me a big smile. \n\nLater that night, I thought more about what my mother said. I started to wonder, how do you tell love from gratitude? I could certainly understand Maria being grateful for everything I'd done, but could that be what Mom saw in her eyes? \n\nA couple days later I picked my second family up and we all headed to Kiddy Land. I brought my camera to chronical the event. As we walked around, Sabrina was between her mother and me, holding our hands. Angela was on the other side of Maria so she felt protected. We all took turns accompanying the birthday girl on the rides, even her mother. I think I spent about twenty dollars in quarters before Sabrina won a plastic duck by throwing ping pong balls into a group of cups. She only got two out of three but I think the guy behind the counter took pity on her...or me. \n\nIt was a full day and about the only person who wasn't tired out at the end was the birthday girl, herself. I wound up staying for dinner at the insistence of three very special ladies so by the time I got home it after eight o'clock. I heated a half full pot of coffee on the stove and kicked back, thinking about the day. I was truly amazed at how well Maria handled it. I did see her shy away from a guy a couple of times but she sure was a lot more confident around people than she was the first time I stopped in. Angela didn't say anything but I know she noticed it too.\n\nThe following week, I was busy at work and hadn't had a chance to get over there. It was almost eight by the time I got home one night. I was boiling a couple of hot dogs for dinner when my phone rang. It was Angela.\n\n\"Hi, Dylan, I wanted to call you real quick while I had a chance. Maria is with Sabrina in her room and I don't want her to hear me so I have to talk quietly. I just wanted to tell you that Maria came shopping with Sabrina and me today. \n\nI saw Sears was having a fifty-percent-off sale on children's winter coats. Sabrina grew out of hers last year and it won't be long before she needs another one so I told Maria I was going to take her to get one. I couldn't believe it when she volunteered to come along. Dylan, this is a miracle and it's all because of you. I don't think any of us will ever be able to thank you enough.\" \n\nIt sounded like she was in tears as she finished. \"Angela, the credit belongs to Maria, believe me. She has been working so hard. How did she do? I mean no one bothered her anything, did they?\"\n\n\"No, everything was fine. Sabrina starts the first grade in a couple of weeks. I still have to get her some things for school. I'm hoping Maria will come with us again.\" \n\nAngela lowered her voice. \"I hear them coming, Dylan. I have to go. Thank you again.\" With that, the phone went dead. \n\nAs I sat at the table eating my hotdog and potato chip dinner, I thought about how good it felt to be able to help someone like that. It struck me that had I still been married I'd never have been able to do it. As much as I hated losing the love of my life, some good did become of it. Amazing how some things work out, I thought. \n\nOver the next couple of weeks, Maria made even more strides. She did go with her mother and daughter to buy school supplies, in fact she was going with them almost anytime they had to leave the house. \n\nThe first day of school is a big day for any child. I still remember mine. Dad and Mom took me to the school and handed pencils out to all the kids. When Sabrina asked if I could come along on her first day, I jumped at the chance. I was working the late shift so I was free the whole morning. Sabrina was between Maria and me, holding our hands when we walked into the classroom. Her teacher made the obvious mistake, thinking I was her Dad. When no one corrected her I just let it go as well. My chest swelled with pride. \n\nA couple weeks later, I had Sunday dinner with my folks. As was usually the case, after we ate we sat and visited in the living room. It took me a while but I finally noticed some strange looks, back and forth between Mom and Dad. I knew something was up. I figured it would be easier getting it out of mom so I directed my question in her direction. \"Okay, what's going on?\"\n\nI heard my dad chuckled as Dom put her hands in her lap and straightened her back. It was a sure sign she was hiding something. \n\n\"We're not supposed to say anything,\" she muttered. \n\n\"You might as well spill it, honey. You know you're dying to tell him,\" dad told her. \n\nMom looked at Dad, then at me, then back to him, then back to me. \"Have you talked to Maria lately?\"\n\n\"Ah, not for a few days, why, nothing happened, did it?\"\n\n\"No, she called here. She tried to pump me for information.\"\n\n\"Tried?\" laughed my dad. \"You told her everything she wanted to know and then some.\"\n\nNow I was really curious. \"Information about what?\"\n\nMom looked at me like I was stupid. \"About you, of course. I told you a while ago that she was in love with you. It looks like Sheri is out of the picture for good now, so I'm wondering what's taking you so long, so is Maria. She asked if I had any suggestions that would make you get up off your butt and ask her out.\"\n\nI wasn't quite sure how to react to that. I had been fighting with that subject for a while but I wasn't sure I liked the idea of my mother talking about me to others, especially someone I had feelings for. Still, I thought, maybe it's a good opportunity to talk my thoughts over with them. We had talked a little about it a few months prior, but didn't go into any depth.\n\n\"Mom, I know you think she has feelings for me, but I think there's a good chance that could just be gratitude. I did a lot of reading on phobias before I even thought about trying to help her and they all talked about it. A lot of times a patient will develop feelings for their therapist. It's called transference. It's not real love. Maria feels safer when I with her. She may love that feeling rather than me. All the books talk about the ethical responsibilities of the therapist not taking advantage of a situation like that.\"\n\nThe room fell quiet as I finished. I know both Dad and Mom were thinking. I thought dad would be the one to offer pearls of wisdom but it was mom who spoke up.\n\n\"I can understand why a professional therapist would have an ethical obligation to reject a patient who fell in love with them, but you're not a professional therapist and Maria is more to you than a patient. How are you ever going to know if she truly loves you or not if you don't at least give her a chance?\"\n\n\"But would I know if her feelings are real or not? Like you said, I'm not a professional.\"\n\n\"You'll know,\" dad said, chiming into the conversation. \"Besides, there's no hurry. Take your time, get to know one another. Maybe you're right, but you'll never forgive yourself if you don't make an effort to find out one way or another.\"\n\nOf course dad was right, I'd sure hate looking back in a couple of years and wonder if I let the right one get away. It was almost three in the morning by the time I decided I'd ask her out and finally fell asleep. \n\nFrom visiting and talking, I did know some of her likes and dislikes, but they'd never had money for anything but necessities so she hadn't done a lot. She'd only been to a theater once as a little girl. One of her friends had a birthday so her parents took her and five or six of her friends to see a Disney animated movie. Maria still talked about how big the screen was. They had a small black and white television in the house so I thought she might enjoy going to the show again. I checked the paper and saw The Palace was playing a Bob Hope comedy with Elke Sommer. I knew she liked Bob Hope and I sure wouldn't mind watching Sommer.\n\nMaybe she was just being very brave, but Maria showed no signs of being afraid in the theater. In fact she was relaxed and laughed hysterically throughout the movie. Afterward, we crossed the street and went to a little diner that was famous for their pie. We each ordered a slice with coffee and sat and talked. It was the first time she and I had been able to do that alone. In the past, Maria's fears always concealed her true personality. In that little diner, I saw the real Maria starting to emerge. She was smart and witty. As she talked, I watched her eyes. The fear was gone. At the end of the night, I gave her small peck on the lips. She smiled and gave me a small peck back before going inside. \n\nWe had to work around my schedule, but we managed four more dates over the next three weeks. So far we'd done nothing more than kiss a few times. I really wasn't sure about even approaching her with anything sexual. \n\nAt work, I spent about seventy percent of my time driving from one assignment to another so I was always sorry to see snow falling. Unfortunately, Chicago is notorious for its cold snowy winters and one was approaching. We all spent Thanksgiving at my folks but Angela drove over early to help Mom and Dad prepare the feast and I picked up Maria and Sabrina and drove over a little later. The whole day felt so natural, like one big happy family. \n\nI spent Christmas like I did the year before, spending Christmas Eve with my adopted family and Christmas day with my own. \n\nMaria was doing great and showed no sign of her fears anymore. In fact, she had gone to the grocery store several times on her own. I had been invited to a New Year's Eve party and figured if she could handle an environment like that she could handle anything. She surprised the heck out of me when I asked her to go.\n\n\"Where will we spend the night?\"\n\nI was a little confused and wasn't quite sure what she was asking. \n\n\"Dylan, we've been going out together for almost four months and you've been a perfect gentleman. I appreciate that. I think it might have something to do with my history, but I'm not like that anymore. I'd like to start the New Year's off with a bang,\" she smiled slightly, \"if you know what I mean.\"\n\nOkay, dense I am not. \"How about we go my place after the party, then?\"\n\nThose crystal blue eyes of hers lit up. \"Do we have to go to the party?\"\n\nAt first I thought she was serious, but she saw the look on my face and said she was only kidding and was looking forward to the party as well. I was honestly a little afraid of the party, not for me, but for Maria. She would be mingling with strangers. Most of my friends were down to earth married couples, but there would be a few people who could get pretty wild, especially around midnight. \n\nAs it turned out, Maria handled herself just fine. For the first hour or so, she stayed pretty close to me, but she started to relax after a while and before I knew it, she was socializing with the whole group. I'd lost count of how many of my friends asked where I'd been keeping her. I just kept thinking how impressed they'd all have been if they had seen her before. I know I sure was.\n\nJust before midnight we all gathered in front of the TV to watch the ball drop. Maria nestled up to my side and put her arm around waist. In return, I put my arm around her shoulders and pulled her into me. That was the moment everything felt so right. For the first time since my divorce, I felt whole again. \n\nAs the ball hit bottom and 'Happy New Year' flashed across the screen, Maria reached behind my head and gently pulled our lips together. I'd been a little nervous until then. I wasn't sure how she'd react at my place, but that kiss told me everything would be just fine.\n\nI kept my eye on her as people worked the room, kissing everyone in sight. Of course most had been drinking and I wanted to make sure none of her admirers got too friendly, but everybody took it in stride when she turned her head and took the kiss on her cheek.\n\nWe stayed for another half hour but we were both anxious to bring the New Year in properly. When we started saying our good-byes, Maria got several invitations for lunch with the girls and I got a lot of 'attaboys' from my buddies. As we stepped outside, Maria was taken away with the winter wonderland that greeted us. Without us realizing it, the snow must have been falling for a while. The fluffy white covered trees and branches made everything look like a Currier and Ives post card.\n\nMaria took my arm and laid her head on my shoulder. \"Oh, Dylan, look at it out here. It's so beautiful.\"\n\n\"It really is,\" I confirmed.\n\n\"How far is your apartment?\"\n\n\"Not far, six, seven blocks.\"\n\n\"Really?\" She asked, looking up at me. \"Do you think we could walk there? We can come back tomorrow and get your car.\"\n\nMy Camaro was in the parking lot of the apartment complex along with a hundred other cars so I wasn't worried about it. \"I think that's a great idea,\" I said. \n\nWe had only walked a block or so when Maria broke out in song. \"I'm dreaming of a white Christmas, just like the ones I used know,\"\n\nThat's where I joined in, \"where the tree tops glisten and children listen, to hear sleigh bells in the snow-\"\n\nBy the time we reached my door, we had harmonized on White Christmas, Jingle Bells, and Baby It's Cold Outside,\" or at least as much as we could remember of it. \n\nAs much as we enjoyed the walk, the warm air of my apartment was welcomed. I helped Maria off with her coat and hung it up in the closet with my own. She sat on the couch while I strolled over to my record collection and queued up my Sinatra Christmas Album, then stacked another three hot wax LPs on top, giving us about ninety minutes of listening pleasure. \n\nThe moment of truth had arrived. I stood in front of her and reached out my hand. There was no mistaking the nervous anticipation in her face as she let me help her up. I continued to hold her hand as I led her into my bedroom. She turned into me as I took her in my arms and a year of wanting this woman came out in one long, passionate kiss. \n\nBeing as soft and gentle as possible, I continued to kiss her neck as I stepped behind her. She had her eyes closed and leaned her head back as I reached around and started undoing the buttons of her blouse. I ran my hands down the soft skin of her arms as the garment fell to the floor. I felt the pounding of her heart as I slowly undressed her. I smile at her blush as she stood in front of me in her birthday suit. In spite of the hard life she'd experienced, Maria was as beautiful as any princess in any fairytale. \n\nBashfully, she slipped under the covers while I quickly got undressed myself. My cock was already rock hard and Maria grinned as it sprang into view when I lowered my shorts. She closed her eyes and started to breathe deep almost immediately as I started exploring her body. I felt her gasp the first time my lips found her nipple. It had turned into a moan by the time I'd worked my way to the other one. \n\nI could feel her actions all around me as I worked my way south. I could feel her head turning from side to side, her back arching, and her hands grabbing at the covers. \n\nAs I reached my destination, I slid my hands under her tight butt and gently lifted it ever so slightly for a better angle. Suddenly, Maria cried out with alarm at the touch of my tongue.",
        "\"Dy...Dylan, wh...what are you doing?\"\n\nIt occurred to me, she'd never had her pussy eaten. \"Relax, honey,\" I assured her. \"Just lie back and enjoy.\" I guess it's normal for a term of endearment to come out at a time like that. It didn't take long before she was moaning loudly with each manipulation of my tongue. I thought I was going to have to peal her down from the ceiling when I sucked on her clit. \n\nI counted three orgasms but it was hard to tell because she was going from one to the other. My cock was stretched so tight it hurt. I had to get it inside of her, but I was still going to take my time.\n\n\"Oh, oh, oh yes,\" she moaned. \"Oh, God.\"\n\nI held out as long as I could but inevitability was nearing an eruption. Suddenly I thought of one small detail...\"Maria, are you on the pill?\"\n\nHer affirmative answer came just seconds before I exploded inside of her. At the same time, her body bucked wildly in the air as she came again, this time even more intensely. I held myself above her as every muscle in my body was wound like a stringed instrument. I finally collapsed beside her heavily breathing frame. Neither of us could talk for a couple of minutes. \n\nI was still winding down when I felt the bed shift. I looked over and saw Maria had turned her back on me. She was trying her best to stifle it, but I could tell she was crying. I was sure the sex had triggered some terrible experience from her past but had no idea what to say or do. I wasn't sure if I should even touch her. I felt like shit. I finally rolled on my side and lightly touched her shoulder. Immediately, she turned toward me and buried her head in my chest. I could feel her tears against my skin. \n\nI just held her for a minute and was about to assure her everything would be okay when she quietly spoke between her sobs. \n\n\"That's the way it's supposed to be, isn't it?\"\n\n\"What?\" I wasn't sure I heard her correctly.\n\n\"That's the way it's supposed to be, I mean tender like that\u2014loving. It was the most wonderful thing that's ever happened to me.\"\n\nShe must have felt my relief. I think my whole body relaxed.\n\n\"Tommy, Sabrina's father, never did anything like that. He'd just spit on me...\"\n\n\"Spit on you?\" I almost yelled in horror.\n\n\"Yeah, you know\u2014down there, to make it easier to go in. He pretty much just pushed it in whenever he felt like it, then pounded me until he came.\"\n\n\"Was he your only other sex partner? Surely, you've had others since?\" \n\n\"No, he was the only one. My mother was after me to go out with other boys for a while but nobody wanted to date a girl with a baby. We both gave up after a little while and I just concentrated on raising Sabrina. Then that...that awf...awful day...\"\n\nI knew what she was talking about. \"Don't think about it, Maria. It's over and you survived. Now it's time to look ahead and fill the rest of your life with nothing but happiness.\"\n\nShe looked into my eyes with a big smile, then cuddled into me a little more. It was a sad reminder of how Sheri used to do the same thing. I fought to get those thoughts out of my head. I was about to ask if she was ready for round two, but realized she had fallen asleep. I had to smile. I guess I wore her out, I thought with pride. \n\nI had my alarm set for seven the next morning. Normal people had New Year's day off...not press photographers. Maria stirred, but didn't fully wake up with the alarm, so I carefully got out of bed and took a shower. It was the smell of coffee and eggs with bacon that actually got her moving. She joined me in the kitchen.\n\n\"I'm so sorry. I fell asleep on you last night.\"\n\n\"Don't be sorry, you're beautiful when you're sleeping.\"\n\n\"What do you have planned for today?\"\n\n\"I have to work.\"\n\n\"Work! Today? It's New Year's.\"\n\n\"Yup, that means New Year's Day parades. You know all those pictures you see in the paper the day after...well...\" I said with a smile. \n\nShe thought for a second. \"Can I go with you?\"\n\n\"Well, you could,\" I said, serving her bacon and eggs, \"but I doubt you'd find it very interesting. I just get as close as I can to the parade route, park the car, jump out, grab a few shots, then high tail it to the next one. After that, I'll have to go into the paper, develop the film and make prints so everything's ready for tomorrow.\"\n\n\"I'd love to go if you don't mind. I've never watched a photographer before.\"\n\n\"It's okay with me. You'd better call your mom and let her know.\"\n\nMaria watched every move I made, both on the shoots and in the darkroom. It was only a four hour day so I had her home by midafternoon. Sabrina greeted us at the door and Angela talked me into staying for dinner. It was after seven when Maria walked me outside and gave me a very passionate kiss as I left.\n\nWe started dating hot and heavy after that. In eight months we hadn't had a single cross word with each other. Sexually, Maria had some catching up to do but she was more than willing, and she caught on fast. \n\nThere were no residual fears or problems from her past and I no longer had any doubts that Maria could handle herself in any situation.\n\nI had carried the ring in my pocket for a week before I found the right time and place. She bawled like a baby as I slipped it on her finger. We waited till the next spring and were married on the last Saturday in April. Sabrina, of course, was our flower girl. \n\nAbout thirty of our closest friends and family watch as my parent's minister pronounced man and wife. As I kissed my lovely bride, we heard laughter coming from our guests. We both looked to see an excited little girl running toward us. She stopped in front of her mother and indicated with a crooked finger, her desire to quietly ask a question. Maria bent down so Sabrina could whisper in her ear.\n\nNo one heard Sabrina's question, but Maria spoke so everyone could hear. \"I think you should ask him that, honey,\" she replied. \n\nSabrina turned to face me. \"Mr. McHenry, can I call you daddy, now?\"\n\nIt had already been an emotional day. As I looked into that angelic face, I felt tears trickling down my cheeks. I picked her up in my arms as our guests laughed. \"You sure can, honey.\" \n\nShe smiled, put her arms around my neck, and gave me a big kiss on the cheek before looking out to our guests, \"He's my daddy,\" she told everyone. \n\nWhile still holding Sabrina with one arm, I offered the other to my bride and together we walked down the aisle toward the front of the church to the sounds of a standing ovation. \n\nAngela took care of Sabrina while we spent our honeymoon on St. Thomas, in the Virgin Islands. As we were on our way back, Maria thought about the living arrangements. \"Honey, where are going to live? I just thought of it. Your apartment is only a one bedroom. I...I don't suppose you'd consider living with my mother, would you? I hate leaving her alone.\"\n\nI was wondering when she was going to think about that. What she didn't know was my dad and I had already been working on that problem. As an early wedding present, dad gave us the down payment for a small house not far from him and mom. It was only a two bedroom and needed some work but it had a nice apartment over the garage. It had two entrances, one was on the side of the garage and had several stairs, but the other exited into the kitchen and had only four stairs to navigate. \n\nDad had asked Angela how she felt about selling her house. Since she'd lived there with her husband, we weren't sure she'd want to move. Dad and I were both a little surprised when she told us she couldn't wait to get out of the neighborhood. \n\nDad and I worked to get the place fixed up and he was helping Angela move into the 'mother-in-law's' suit while Maria and I were on our honeymoon. Of course I kept all this quiet. When she asked about the living arrangements I just smiled and told her not to worry, we'd work something out. \n\nI'll never forget the look on her face when I carried her over the threshold. Sabrina and our parents were inside to greet us with the biggest grins we'd ever seen. \n\nLife is good. Angela loves her apartment and enjoys the peace and quiet, knowing she can visit her family anytime she wants. I started the adoption process for Sabrina and Maria and I are already talking about giving her a little brother or sister very soon. Dad already checked things out and says it'll be easy to add another bedroom. \n\nI sometimes look back to the day I sat on the edge of my bed, staring down the barrel of my gun. I vividly remember believing my life was over, why not just end the pain. If it hadn't been for a little girl wrapping herself around my leg for protection, who knows what would have happened. \n\nThe End."
    ],
    "authorname": "laptopwriter",
    "tags": [
        "newspaper",
        "pager",
        "photographer",
        "wine and old lace story"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/little-bright-eyes"
}