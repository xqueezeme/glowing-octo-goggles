{
    "title": "The Judgment of Harris",
    "pages": [
        "\"They're here, Mom!\" Ellen yelled into the house.\n\nShe stood to wave as the flashy silver BMW convertible turned into the driveway with a squeal of tires and a blare of its horn. The Gamma Phi Beta \"World Tour\" had arrived.\n\n\"Brains!\" Diana yelled from the driver's seat.\n\n\"Cut it out,\" Ellen said with a blush, giving Ivy a hug as she climbed out from the front passenger seat. The three rising seniors in the car might not be future Phi Beta Kappas, but none of them was dumb. Not really dumb, anyway.\n\n\"Hey, you're the girl with the four-oh,\" Ivy said. \"You're going to turn us into one of those literary societies.\"\n\n\"Yeah, fat chance of that,\" Tiffany said with a giggle. She was still lounging in the back seat, combing her long blonde hair out.\n\n\"So how was the trip?\" Ellen asked.\n\n\"Great so far,\" Diana said. \"Did our clothes arrive?\"\n\n\"They got here this morning. I can't believe you're FedExing your clothes ahead of you.\"\n\n\"Tiffany's makeup case doesn't leave us much room in the trunk,\" Ivy cracked.\n\n\"Ha, ha,\" Tiffany said as she finally climbed out to give Ellen a hug. \"Like you guys didn't bring makeup cases, too. It's good to see you, Brains. So where are we now?\"\n\n\"Troy, New York,\" Ellen said with a sigh. \"The armpit of the tri-city area. Come on in and meet my mom.\"\n\n\"Can I just return this one call first?\" Diana said. \"They called just as we got into New York and saw one of those big \"Hands-free only\" signs. Freaked Ivy out.\"\n\n\"It did not,\" Ivy protested.\n\n\"Oh, it did so,\" Tiffany said. \"You're such a goody two shoes.\"\n\n\"Make your call,\" Ivy told Diana.\n\nThe women's chit-chat was soon interrupted by Diana's raised voice. \n\n\"Oh, my God. Oh. My. God. So what do we --? The bylaws?\"\n\nShe covered the phone and looked at her sorority sisters.\n\n\"Bylaws?\" she mouthed to the others with a shrug and raised eyebrows.\n\n\"Yeah, they're all here,\" she continued. \"Me and Tiff and Ivy. How long do we have? Alright, I'll call you back before then.\n\n\"Holy shit,\" she said as she clicked the phone closed. \"Pam's pregnant.\"\n\n\"Pam our president?\" Tiffany asked with a squeak.\n\nDiana nodded.\n\n\"She's withdrawn from school this semester.\"\n\n\"So who's president?\" Ivy asked.\n\n\"Apparently it's up to us three to decide,\" Diana said. \"The three seniors. We have until August first.:\n\n\"August first?\" Tiffany asked. \"That's like less than a month.\"\n\n\"It's less than two weeks,\" Ivy said. \"So what do we do?\"\n\n**********\n\nBy that evening, the three girls were no closer to deciding on the new president of Gamma Phi Beta sorority. Each thought she deserved it.\n\n\"Maybe we should back up a little,\" Ellen said. She had quickly assumed the role of mediator. \"What are we looking for as far as image goes?\"\n\n\"Beautiful,\" Tiffany said with a flip of her hair.\n\n\"Talented,\" Diana said, flexing the arm that had led her to a third place finish at last year's NCAA swimming championships.\n\n\"Nurturing,\" Ivy said. She had always been the friendliest of the three girls.\n\n\"Okay,\" Ellen said. \"Why don't all three of you make a list of the four qualities of the sorority that you think our president should reflect? And we'll go with whichever one finishes highest.\"\n\nThree minutes later, Ellen read off the lists. \n\n\"Okay. Ivy: Nurturing; service to others; sexy; welcoming. Diana: Talented; successful; sexy; athletic. Tiffany: Beautiful; blonde; sexy; and, um, blonde. Well, I guess our winner is 'sexy.' I don't suppose we're going to be able to agree on who's sexier, are we?\"\n\n\"Well, obviously I am,\" Tiffany said. \"What guy wouldn't want me?\"\n\n\"One with an ounce of self-respect,\" Diana muttered. \"Look, I'll admit you're the most beautiful, babe. But sexy?\"\n\nShe shook her head and began to tick off names.\n\n\"Amanda Beard, Misty May, Anna Kournikova, Maria Sharapova, Serena Williams. Strong women. Strong, sexy women. You can keep your golden mane and oval face, Tiff. I know what men like.\"\n\n\"What they like, Diana, is these.\"\n\nIvy lifted her hands to cup her breasts. She released them and smoothed her hands down her waist and over her hips.\n\n\"Men like women, ladies. Women that look like women. They see a body like this and sex is the first thing that comes into their mind.\"\n\nEllen decided it was time to interrupt.\n\n\"So the answer is 'no.' We're not going to be able to come to an agreement on which of you is sexier.\"\n\n\"Apparently not,\" Tiffany said. She flipped her hair in disgust.\n\n\"Why don't you decide, Brains?\" Diana asked.\n\n\"Seriously. You don't have an axe to grind,\" Ivy chimed in.\n\n\"Oh, no. I'm not getting in the middle of this.\"\n\n\"How 'bout your mom?\" Tiffany asked.\n\n\"My mom?\" Ellen asked. \"She still has that Alexis Carrington hair thing going on.\" \n\n\"Your dad?\" Diana asked.\n\n\"My dad thinks my mom is sexy.\"\n\n\"How about your little brother?\" Ivy asked.\n\n\"Forget it,\" Ellen said with a glare. \"If you let Ricky choose the president of my sorority, I will never hear the end of it. Plus he's only sixteen. I don't think that's the image we really want, is it?\"\n\n\"Well, then, you'll have to find us a judge.\" Diana said. \"We have three more days we can spend here in Troy, then we have to Boston to visit Cheryl over the weekend. We can stop back here again on our way south.\"\n\nEllen squirmed under the gaze of the three seniors. Her mind raced as she considered and rejected various candidates.\n\n\"Okay. I've got just the guy. He was a year ahead of me in high school. A little shy, but very, very cute. He lifeguards at the community pool every afternoon.\"\n\n\"So what do we do?\" Tiffany asked.\n\n\"That's up to you. You can each have one day to convince him.\"\n\n\"One day and one night?\" Diana asked.\n\nEllen smiled enigmatically.\n\n\"Sure,\" she said. \"First of all, though, we're going to put this in writing. And all three of you are going to agree to it.\"\n\nEllen retrieved pen and paper and drafted a short little form. All three seniors acknowledged their willingness to abide by the decision of the judge.\n\n\"Suppose he has a girlfriend?\" Ivy asked.\n\n\"Harris?\" Ellen said with a giggle. \"Have a girlfriend? Let's suppose he doesn't and save ourselves the worry. Now, who wants to go first?\"\n\n**********\n\nHarris O'Connor scanned the pool yet again. His eyes touched briefly upon the teenagers that he had whistled for roughhousing. There were the two mothers whose silly dispute over using the wading pool he had resolved. There were the giggling junior high school students whose crush on him was both obvious and unfathomable.\n\n\"Where were they when I was in junior high school?\" he muttered as he continued his survey. \n\nFor that matter, where was Ellen McKay? She hadn't been here yesterday either. So far, she was the only thing that made this job worthwhile. Well, that and the money.\n\nHarris would have much preferred to have gotten a full-time summer grant at the engineering school he attended. The part-time grant only paid for his work from eight o'clock to noon each day, not enough to let him keep his apartment over the summer. So in order to prevent him from having to move back in with Mom and Dad, he had reclaimed his afternoon shift at the pool. \n\nHe hoped Ellen was okay and found himself blushing at the thought. She had been there nearly every day so far that summer. She had been a year behind him in high school, a rare combination of class valedictorian and prom queen. She was going to some Southern college now -- Auburn or Alabama, something like that. \n\nIt wasn't like he had ever actually spoken to her. Everything about her -- her auburn hair, her blue eyes, her smile -- tied his tongue. There was that one time when he had almost spoken to her, just after band practice in the late fall of his last year at Troy Senior High. But he had run into a water fountain and Ellen's boyfriend-of-the-month had swooped in and spirited her down the hall.\n\nThis particular day at the pool was not without its compensations, however, Ellen's absence notwithstanding. The hot-looking girl in the lap lane had shown up about half an hour ago, flashed him a big smile, and started swimming like she belonged in the Olympics. She was currently doing the breaststroke. It was a slow, easy stroke that had the advantage, from his perch atop the lifeguard tower, of showing off the gorgeous muscles that flexed in her butt each time she pulled her legs in for a frog kick.\n\nThe three o'clock lull remained a mystery even after three years of lifeguarding. It simply made no sense that everyone would be out of the pool at the same time. But it happened every day. Not that Harris was complaining. It afforded a nice break. All he had to do now was keep an eye on Jimmy Warder. Jimmy was a tenth grader whose favorite sport was edging his way along the fence until he got behind Mrs. Shepherd, who appeared to have an entire drawer full of bikinis that she had purchased when she was slightly less well endowed. A glare was usually enough to send Jimmy heading back in the other direction.\n\n\"So what time do you get off?\"\n\nThe voice had come from his left and when he looked down, there she was: the swimmer. She was very attractive, with close-cropped dirty blonde hair and a crooked smile. She was wearing a one-piece red swimsuit that accented the muscles beneath the tanned skin of her arms and legs.\n\n\"Uh, I get off at five, but the pool will stay open until nine.\"\n\n\"That's nice,\" she said. \"Why would I want to stay here after you leave?\"\n\nHarris O'Connor blinked his eyes a few more times than was probably necessary. He opened and closed his mouth as if he were some sort of fish. He took a quick glance around the pool, hoping that by the time his gaze returned to the goddess at his feet he would have thought of an intelligent response. He was forced to return his attention to Jimmy Warder, though, and as he watched the youngster slink off, he sighed. The woman had probably left long ago.\n\nHis eyes snapped back.\n\n\"So I'm Diana Stephenson,\" she said, still standing exactly where she had been. \"And you're . . .?\"\n\n\"Harris,\" he said. \"Harris O'Connor.\"\n\n\"Hi, Harris O'Connor. I was on my way back home after a swim meet in Boston and decided to spend the night in Troy. Lucky break for me, huh?\"\n\n\"Sure,\" Harris agreed. It had never occurred to him that spending a night in Troy would be anyone's idea of good luck.\n\n\"It's really nice of you to let guests use the pool like this,\" she continued.\n\n\"The city fathers are always nice to people with five dollars of disposable income,\" he said. \n\nShe gave him a big smile.\n\n\"So you get off at five. Interested in going out for a little dinner?\"\n\n\"Dinner?\"\n\nAs soon as he spoke, he realized that his tone of voice had suggested that \"dinner\" was a concept wholly unfamiliar to the citizens of Troy, New York, as if they went straight through from lunch to breakfast the next morning.\n\n\"That would be great,\" he blurted out. \"I know a good Mexican place.\"\n\n\"Perfect,\" Diana said. \"How about I just meet you here in the parking lot at six?\"\n\n\"That would be great,\" Harris said again.\n\nDiana smiled.\n\n\"See you then, Harris O'Connor.\"\n\nHe watched her walk out of the pool complex, his eyes fixated on that beautiful butt.\n\n**********\n\nHe was fixated on it later that evening as well. It was long after the margaritas, the chips and salsa, and the grilled fajitas. He was in his bed, in fact, completely naked. The twin moons of Diana's ass were rising above his hard-on. She was straddling him, a position she called a reverse cowgirl.\n\n\"Seriously?\" she had asked a second before. \"I would have thought everybody in Troy would have been given a box of Trojans as a graduation gift. That's okay. I always come prepared.\"\n\nShe leaned forward to reach for the pants she had dropped at the foot of the bed. She had efficiently stripped Harris and then pushed him back onto the bed. Her own striptease was a more elaborate affair. She took pride in showing off her body, in drawing Harris's attention to her completely shaved pubic mound -- \"better for swimming,\" she had claimed with a wicked grin.\n\nBefore that, they had simply bypassed the whole seduction thing. Over coffee, Diana had leaned over the table and softly whispered, \"Let's go back to your place and fuck.\"\n\nHarris was unwilling to wait for his change, so the waitress had received an exceptionally generous tip. He was glad that his apartment was fairly tidy. He was especially relieved that he had put away the high school yearbook to which he had been jerking off the night before.\n\nThe reward for his cleanliness was beyond price. As he watched Diana lean forward, he looked through her legs, watching her firm breasts swing beneath her. His breath caught in his throat.\n\nShe apparently found what she was looking for; her ass once again settled back on his stomach. He heard a package being torn open and then felt her slipping the lubricated latex over his hard cock.\n\n\"Mmm,\" she purred, moving forward just a little and putting her feet on either side of his hips. She lifted her ass up one more time. \"Ready, lover?\"\n\n\"Yes,\" Harris whispered.\n\n\"Me, too.\"\n\nShe grabbed his dick and positioned it at the entrance to her slit. As she sank back down, Harris suddenly found his dick squeezed in an exquisite vise. He groaned.\n\nDiana looked back over her shoulder and gave him that same wicked smile before returning her gaze to the front. Harris felt her place her hands on his thighs. He stared in wonder as that gorgeous ass began to ride up and down his pole like a wooden horse at a merry-go-round.\n\n\"Fuck, baby, yeah,\" Diana growled.\n\nShe sank back down one last time and slowly began to slide her ass backward and forward.\n\n\"Mmm, yeah,\" she moaned. \"You are good at this, baby.\"\n\nThat was hard to believe. So far his job had consisted of little more than lying on the bed. Maybe he should move a little. He started to move his hips in a rhythm that he thought would match hers.\n\n\"Fuck, yes,\" Diana purred. \"Harder, lover.\"\n\nThat was not a problem either.\n\nDiana groaned again and leaned back onto her arms, letting Harris take over completely. She gasped loudly as he filled her over and over again and Harris, afraid for her safety, reached around. His hand slipped easily into the valley between her hips, sliding down over her bare mound until it found the wet cleft beneath. His index and ring fingers instinctively captured the ridge between them while his middle finger slid in between.\n\n\"My clit! Oh, God!\"\n\nDiana's voice was a soft hiss that made Harris revel in his newfound power. He started wiggling the tip of the finger against the small, hardened nub.\n\nThat made Diana's perch even more precarious. She appeared to be coming unglued. She was screaming, albeit in a grunting sort of way that matched Harris's thrusts inside her. Harris finally had to put both hands on her hips just to hold her in place.  \n\nBut that set off yet another round of screams and grunts and Harris finally found that he could control himself no longer. Slamming himself inside her one final time, he held her there and felt himself explode into the latex condom. Diana was exploding as well, her body rigid, her throat suddenly closed to everything except a series of small squeaks.\n\n\"Oh. Oh. Oh. Oh.\"\n\n\"Harris,\" she whispered, collapsing backward on his chest as he relaxed beneath her. \"Sexy, wonderful Harris.\"\n\n**********\n\nThe junior high school girls who had a crush on Harris O'Connor knew immediately what had happened. The mothers around the kiddie pool noticed. Harris O'Connor was sitting taller in his lifeguard chair, plying his whistle with more confidence. He had ordered the two teenage boys to stop running around the pool in such a strong, quiet tone. Even the nerds at the research lab could tell that something was different. Speculation around the lunchroom, after Harris had left for the day, was that he had just bought a hot new video game.\n\nThe women at the pool knew better. That pretty swimmer who'd been hanging around yesterday afternoon had taken their nice Harris home with her and fucked his brains out.\n\nAnd now here was another, even prettier one. She wasn't muscular, like yesterday's had been. In fact, she had barely jumped in the water at all, and had been careful not to wet her long, blonde hair. Instead, she preferred to sit in one of the poolside chairs and coat her already perfectly tanned body with lotion. She needed a good bit, not because she was a big girl -- her breasts were actually smaller than those of yesterday's girl, her body much, much slimmer -- but because her white bikini covered very little surface area. Harris was a professional, but everyone at the pool accepted that his scans lingered for just an extra second or so on the newcomer. \n\nTiffany made her move at three o'clock. Standing, she made sure that Harris's attention was on her by ostentatiously rearranging one of her boobs inside her top and smoothing out the waistband of her bottoms. Then she began walking toward him.\n\nIt was a practiced walk, practiced for so long as to be completely natural and perfectly devastating. She was conscious of the eyes of the teenage boys on her, their mouths hanging open as they watched her head for the lifeguard. She was conscious of the junior high school girls, their catty remarks stuck in their throat as she passed them. She was conscious of the moms, one of whom clearly had not fully resolved her own sexual identity. The poor woman's nipples were hardening underneath her swimsuit.\n\nBut her eyes always returned to Harris, holding his eyes, paralyzing his body.\n\n\"Hi,\" she said. \n\n\"Uh, hi,\" Harris said. \"You're new.\"\n\n\"Yeah,\" Tiffany smiled. \"I've been visiting my aunt for the last week. I can't believe I didn't discover you -- I mean y'all's pool here -- before now.\"\n\n\"Yeah,\" Harris agreed. \"It's nice in this heat.\"\n\nTiffany smiled at his evident discomfort. Even down at school, it took an incredibly confident, usually older guy to even think about hitting on her.\n\n\"So what are you doing after?\" she asked.\n\n\"After?\" Harris asked.\n\n\"After you get off work, silly,\" Tiffany said with a giggle. \"Want to get some dinner?\"\n\n\"Dinner, sure. Dinner would be great. Shall I pick you up at your aunts?\"\n\n\"Let's meet here,\" Tiffany said. \"Six o'clock?\"\n\n\"Six o'clock is great.\"\n\nShe took a few steps.\n\n\"Wait a minute,\" Harris called. \"I don't even know your name.\"\n\nThe girl turned and smiled.\n\n\"Tiffany,\" she said. \"Just like the jewelry. Tiffany Ray.\"\n\nHe watched Tiffany leave the pool. For that matter, everyone watched Tiffany leave the pool. It was not until she had vanished into the parking lot that they started breathing normally again.\n\nHarris enjoyed the way that heads turned as he walked into the Italian restaurant with Tiffany on his arm. He enjoyed the way that the waiter offered them a complimentary bottle of wine, for \"la bella signorina.\" He even enjoyed watching Tiffany play with her food, unwilling to do much more than sample each of the dishes that they had ordered.\n\nBut the best part of dinner was the part, as they sipped their coffee, when she sat back in her chair, her eyes sparkling, and asked, \"Do you want to go back to your place and fuck me now?\"\n\nHarris's answer to that was yes. There were four men at the surrounding tables, all of whom also heard the invitation. One of them breathed a \"yes\" as well. His wife refused to speak to him for the rest of the evening. The other three kept their assent to themselves.\n\nThis time Harris took off his own clothes and put on his own condom. He had bought a box at lunchtime, not dreaming that he would be able to use them quite so quickly. Rather, he had looked on them more as an investment, in case a goddess like Diana ever showed up again at the pool. He hadn't given much thought -- any thought at all actually -- to one's appearing that same afternoon.",
        "When he was naked, he turned his attention to the patient Tiffany. She had chosen a sleeveless black mini-dress that set off her blonde hair and gorgeous skin and showed off her seemingly endless legs.\n\n\"Would you like to undress me, Harris?\" she asked.\n\nShe turned around without waiting for an answer. Harris stepped behind her and knelt down. Those five inch heels had to be uncomfortable, he thought. No doubt she would appreciate having them off first. He carefully undid the straps and held them in place while Tiffany stepped out. As he began to rise, he saw that Tiffany had pulled up the bottom of her dress, displaying her slender ass to his gaze.\n\n\"Kiss it,\" Tiffany whispered.\n\nTiffany felt him plant his lips on the creamy white skin and begin to follow her suggestion. Tiffany purred, pushing her ass further back against him. She felt his hands slide up her thighs and heard the catch of his breath as he realized that the panties that he expected to find were no more than a thong. She felt it slide off her hips under his tugging. His mouth slipped into the crack between her cheeks and she bent over, her hands resting on Harris's bed, to give him even more access. She loved the way he buried his nose between her cheeks as his mouth slid further down to ravish the bottom of her slit with soft, wet kisses and long, steady strokes of his tongue.\n\n\"Harris,\" she whispered. \"I want to see you.\"\n\n\"Hmmm?\" Harris asked, dragging his face away from the perfection in front of him.\n\n\"Take my dress off,\" she moaned, \"and let's get on the bed.\"\n\n\"Okay,\" Harris agreed.\n\nHe stood up and unzipped the little dress. Tiffany let it slip forward off her shoulders and fall to the floor. After a few seconds of fumbling, Harris gently opened her black lace bra and let it slip from his fingers.\n\nTiffany turned to sit on the bed and then lie back against the pillows. Her legs, crowned by the sparse blonde thatch at their intersection, opened to invite Harris's return. To Tiffany's delight, he moved to the end of the bed and crawled up, taking her thighs over his shoulders as his mouth found her wetness once again.\n\nShe was a delicious blend of tangy sweetness, her juices flooding his mouth with each suck of his lips and each swipe of his tongue. She was moaning softly, her hands wrapped in his hair, her thighs squeezed against his ears.\n\n\"Harris,\" she whispered. \"Baby. So good.\"\n\nHe continued to make love to the sensitive, swollen flesh, ferreting out the tiny button of her clitoris and wrapping his lips around it.\n\nTiffany's voice became a long, drawn out wail and Harris glanced up over that lovely mound. His eyes took in those lovely firm breasts, each topped with a small pink areola perfectly centered around a tiny, stiffened nipple. He studied her face. Her eyes were shut, her head thrown back against the pillows. Her mouth was an ecstatic circle, keening her satisfaction.\n\nPerhaps it was because he had momentarily stopped licking, or perhaps because Tiffany had an innate sixth sense that told her when she was the subject of adoration. She blinked her eyes and looked down at him.\n\n\"What do you want now, lover?\" she asked. \"Tell me.\"\n\nHarris lifted his mouth a fraction of an inch off Tiffany's pussy.\n\n\"I want you,\" he said. \"I want to -- to fuck you.\"\n\nTiffany smiled.\n\n\"Then fuck me, baby,\" she cooed.\n\nHarris crawled forward again, enjoying the way that Tiffany kept her calves on his upper arms to let him spread her even further apart. He paused to give each nipple a suck and then felt his cock meet the well-lubricated lips of Tiffany's opening.\n\n\"Mmmmm, yes,\" Tiffany whispered as he pushed slowly into her. \"Slowly, lover. Slowly to start.\"\n\nHarris was happy to take her advice. He set a slow, even pace, thrusting through her velvety folds and then withdrawing. Tiffany greeted each renewed attack with a murmur of satisfaction and lamented each retreat with a twist of her delicate fingers into the pillow on which she rested those beautiful golden tresses.\n\n\"Faster now, baby,\" she said. \"Faster now.\"\n\nHarris gradually picked up the tempo until he could hear the slap of his thighs against hers. His hands were wrapped around her slender waist, pinning her to the bed as he impaled her with each plunge into her core.\n\nSuddenly he felt her body tremble just before it stiffened. Her fingers left the pillow and gripped his upper arms, the well-manicured nails digging into the flesh. Her legs, previously folded over his arms, went rigid, squeezing him just he felt her pussy squeeze him.\n\n\"Cumming,\" she gasped, her voice coming in soft pants. \"Cum with me. Harris\"\n\nOnce again Harris O'Connor was happy to comply. The two came simultaneously. This turn it was Harris's turn to collapse on the bed, although it didn't take long for Tiffany to squirm out from underneath and nestle herself underneath his arm.\n\n**********\n\n\"Shit!\"\n\nHer three friends turned to look at Kelly, shocked looks on their faces. Their ninth grade clique wasn't the \"good girls,\" but they did try to save their profanity for when they really needed it. The three followed Kelly's eyes and each muttered \"shit\" beneath her breath.\n\n\"First we have to watch that Amazon,\" Brittany said, \"and then yesterday that little blonde princess.\"\n\n\"Yeah,\" Andrea added, \"but neither one of them had a body like that.\"\n\n\"Shit,\" they all said in unison.\n\nThe girl approaching them had what they all hoped for, a perfect 36-24-36 figure. By some miracle of engineering, though, her crochet bikini, tan outlined with red, made her breasts look even larger and her waist even smaller. It just wasn't fair.\n\nIvy had heard all about the junior high school girls at the pool. Diana and Tiffany had both taken great delight in relating their exploits at the pool and in Harris's apartment in graphic -- often pornographic -- detail.\n\n\"Hey, girls, how are you?\"\n\n\"Fine,\" Kelly said. \"What's up?\"\n\n\"Not much,\" Ivy said with a shake of her head. \"Mind if I sit with you?\"\n\n\"Okay,\" Andrea said. \"So, um, are you like in college or something?\"\n\n\"Yeah,\" Ivy said. \"Down in Alabama.\"\n\n\"I noticed you had a little accent,\" Brittany said.\n\n\"Can't help that,\" Ivy said with a laugh. I grew up in North Carolina.\"\n\n\"So what are you doing in Troy?\" the fourth girl, Natalie, asked.\n\n\"My boyfriend and I were headed for Saratoga,\" Ivy explained. \"I found out he's been cheating on me when he got a phone call from this bitch I thought was my friend. So I made him drop me off here.\"\n\n\"Cheating on you?\" Kelly asked in disbelief.\n\nIvy shook her head.\n\n\"It happens, ladies. Men are scum.\"\n\nThe girls all nodded.\n\n\"Not that I couldn't use one, if you know what I mean. We all have needs, don't we?\"\n\n\"Tell me about it,\" Andrea said.\n\n\"I got a flight home tomorrow,\" Ivy continued. \"So I figured I'd rent a car in the meantime. That's where I found out about the pool. So, any cute guys here?\"\n\nShe looked around the pool.\n\n\"Well, there's Harris,\" Brittany said.\n\n\"Brittany!\" Kelly protested.\n\n\"Is he already claimed?\" Ivy said. \"Don't worry. I'm not a poacher.\"\n\n\"It's not like he even looks at us,\" Andrea informed Kelly. \"See the lifeguard?\"\n\n\"Yeah,\" Ivy said. \"Cute, huh?\"\n\n\"Yeah,\" the four girls said in a dreamy tone.\n\nIvy burst out laughing.\n\n\"He's had a different gorgeous girl hit on him the last two days in a row,\" Natalie said.\n\n\"Oh, well,\" Ivy said. \"I'll just have to look elsewhere.\"\n\n\"Are you kidding?\" Kelly said. \"Look at you. I'd kill to be built like you.\"\n\n\"What are you girls, sixteen?\"\n\n\"Fifteen,\" Andrea said.\n\n\"Well, hell,\" Ivy said. \"I didn't get these until I was a junior in high school. You girls will all be knockouts.\"\n\nThey all smiled at this new goddess's praise.\n\n\"So go for it!\" Kelly said after a pause.\n\n\"What's that?\"\n\n\"Harris,\" she said. \"Go get him, girl.\"\n\n\"You think?\" Ivy asked.\n\n\"He's been looking over here,\" Andrea said. \"I'll bet he'd go for it. You need to wait a little bit, though.\"\n\n\"So he gets his eyes full of you girls?\" Ivy asked. \"I'm not that dumb.\"\n\nAll four girls laughed.\n\n\"Nah,\" Kelly said. \"There's always a lull around three o'clock. Wait 'til then and you can go up and talk to him.\"\n\n\"In the meantime,\" Brittany said, \"take my seat. Then you can stretch out with your legs pointed right toward him. Give him a good look at that bod.\"\n\n**********\n\nHarris took another good look at the body of Ivy Dalton. She had ended their Chinese dinner together by telling him -- not asking him, but telling him -- that what she wanted more than anything at that very moment was to go back to his apartment so that they could make love together. They had undressed each other, smiling, laughing and openly appreciating each other's bodies. They even shared a laugh at the \"oh, sugar\" that followed Ivy's stumble when she tangled her feet in the panties she pushed to the floor\n\nBut they stopped laughing when they climbed into bed together. Ivy couldn't laugh with her mouth full of cock. And Harris, eating out Ivy's pussy, its thick, dark curls matching so beautifully the long, raven-colored hair that she had been wearing in a French braid earlier that evening, was too busy to laugh. He lay beneath her, her slit plastered against his face, her pendulous breasts flattened against his stomach as she sucked on him.\n\nShe had finally pushed him off, telling him that he was just too good at that for her to let him go on much longer. Instead, she had turned around, still on her hands and knees, and looked back over her shoulder.\n\n\"I want you,\" she said.\n\n\"I want that,\" she added with a nod toward his saliva-coated cock.\n\nHarris got to his hands and knees. He took a moment to admire Ivy's beautifully curved ass, its flesh jiggling ever so slightly as she invited him to approach. Her face, framed by those dark locks that she had let tumble out of the braid while she was sucking, carried a similar invitation in its large, brown eyes and its full, dark lips.\n\nAnd those breasts. They hung beneath her, swaying from side to side. He longed to touch them, to squeeze them in his fingers, to knead them.\n\n\"Harris,\" Ivy whined. \"Come on.\"\n\nHe quickly moved behind her. He confidently circled one hand around her waist and slid his fingers through those dark curls.\n\n\"Are you ready?\" he asked, strumming his fingers across her clit.\n\n\"God!\" she cried. \"I've been ready since we left the pool. Get your finger out of my -- out of there and put that big thing in me.\"\n\nWith one hand on Ivy's hips, he pressed his thighs against hers and slid his cock into her. It was evidently far too slow for his date. She pushed herself back against him, groaning when he bottomed out inside her. He hadn't expected to meet her quite so suddenly, and the force knocked him a little off balance. He reached out wildly for her shoulder, but his his hand slipped off, down over her ribcage, and grabbed hold of her breast.\n\n\"Yes,\" she said with a long hiss. \"Squeeze my boob, lover. Squeeze it hard.\"\n\nHe felt the skin give way to his fingers, the flesh expand into his palm. He felt the big fat nipple that he had seen when they were undressing harden against the knuckle of his middle finger. He heard Ivy groan.\n\n\"Oh, sugar,\" she whispered again.\n\nIvy Dalton may have been sugary sweet, and her body a sybarite's delight, but she made love with abandon. As he slammed into her over and over from behind, he thought he heard yet another whisper from her.\n\n\"Sorry?\" he gasped.\n\n\"Spank me,\" she said louder.\n\n\"Spank you?\" he asked.\n\n\"Spank my rear end!\" she screamed at him.\n\nHe spanked her rear end with the hand that wasn't otherwise occupied with that gorgeous globe of flesh that hung beneath her. It was enough to drive Ivy higher and higher, until finally her body shook with a long, sustained series of climaxes. The last of them pulled Harris into a climax of his own, as her pussy clutched at his dick like it had no intention of letting him go.\n\nThey both collapsed forward on the bed.\n\n\"That was amazing,\" Harris whispered into her ear.\n\n\"You're amazing, Harris,\" she whispered into the pillow beneath her.\n\n**********\n\n\"So about those girls that you, um, saw last week,\" Ellen began.\n\nHarris reacted with visible alarm.\n\n\"How do you, um . . .\"\n\n\"They're friends of mine,\" Ellen said, reaching across the table to take hold of Harris's hand.\n\n\"All three of them?\"\n\nEllen nodded.\n\n\"I kind of gave them your name,\" she said. \"They were arguing about which one was sexier and I kind of told them that you would help them decide.\"\n\n\"I thought you liked me yourself,\" Harris protested. When he had returned to the pool yesterday, after a weekend in which he had started to once again dream of Ellen rather than the three goddesses who had visited him the week before, she had been there. Her eyes had lit up when Harris had asked her if she would like to go out to dinner.\n\n\"I do like you,\" she said. \"I thought it was a pretty nice gift. Plus I did think that going out with them would maybe give you a little more confidence. So you would, you know, ask me out.\"\n\nHarris smiled.\n\n\"Well, it worked. I asked you out the first day you came back.\"\n\nThey had gone to a Japanese steakhouse and spent the evening talking until they were finally kicked out. The evening had ended with a long kiss at the door of Ellen's house, a kiss that promised much more in the days to come.\n\nFor their second date, the very next evening, Ellen said she wanted to go to T.G.I. Fridays. They had been given a booth which had already been reserved for them by Ivy, Diana, and Tiffany, who occupied the booth on the other side of the glass divider.\n\n\"Yes,\" Ellen agreed. \"You still have to decide about the girls, though. They're the three seniors in my sorority. Whichever one is sexier will be our president next year.\"\n\n\"That's an odd sort of election,\" Harris said with a laugh. \"Having the candidates sleep with a judge from another school.\"\n\n\"It's kind of an emergency. Please?\"\n\nHarris rolled his eyes.\n\n\"Fine. Jeez. Sexier? What do I know from sexier?\"\n\n\"All you have to do is pick one.\"\n\n\"That first girl -- Tiffany? -- was gorgeous.\"\n\n\"She is very pretty,\" Ellen agreed.\n\n\"But sexy? I don't know. Have you ever seen the Paris Hilton sex tape?\"\n\n\"Um, no.\"\n\n\"Yeah, right. Me neither. But I heard about it. She's very pretty, too. But I heard she kind of fucks like she wants to be worshipped. Sort of like Tiffany.\"\n\n\"I really don't think I want to hear about --\"\n\n\"It was like 'you may now please me.'\" He stopped and looked around. \"What was that noise?\"\n\n\"What noise?\" Ellen asked. She knew perfectly well that it was the sound of Ivy and Diana snorting.\n\n\"Anyway, Diana was like just the opposite. Beautiful muscles. That's sexy.\"\n\n\"So Diana?\"\n\n\"Eh, not so much. It was like 'you will now please me.' I spent the whole night in fear that I had gone to bed with a praying mantis. Do you know about praying mantises?\"\n\n\"No.\"\n\n\"The male and female do it and then the female eats the male. I mean literally. There it was again. I can't believe you can't hear that.\"\n\n\"I have poor hearing. So that leaves Ivy.\"\n\n\"I liked Ivy. Ivy was nice.\"\n\n\"Nice?\"\n\n\"Maybe a little too nice.\"\n\n\"What does that mean?\"\n\n\"I think she's congenitally incapable of swearing.\"\n\nEllen grinned. That was quite true.\n\n\"She kept saying 'oh, fudge' and 'oh, sugar.'\"\n\nEllen started to giggle.\n\n\"I was afraid that in the middle of sex she was going to ask me to fudge her and I'd burst out laughing.\n\n\"'Fudge me, baby,'\" Harris said in a breathy voice as Ellen shook with laughter. \"'Fudge me harder.'\"\n\n\"Stop it!\" Ellen yelped. Her voice covered up the snorts from Diana and Tiffany.\n\n\"You shouldn't have to worry about laughing while you're making love.\"\n\n\"No. Look. Here's a piece of paper. All you have to do is write a name on the line right there.\"\n\n\"This line, right here?'\n\n\"Right there.\"\n\n\"Fine. Give me a pen. There.\"\n\nEllen stared at the paper for a long time before looking up at Harris with an expression of horror.\n\n\"You can't do that,\" she whispered.\n\n\"Why not?\" he whispered back. \"And why are we whispering?\"\n\n\"Because you're supposed to pick one of them.\"\n\n\"It says, 'The sexiest Gamma Phi Beta is blank' and I filled in the blank.\"\n\n\"But we haven't even had sex yet.\"\n\n\"Yet?\" \n\nEllen blushed a deep scarlet.\n\n\"The other girls all put out on the first date,\" Harris pointed out. \"It's not my fault you're all coy and flirty.\"\n\n\"Then why me?\"\n\n\"Because of the way your eyes flash when you laugh. You're smart and clever and fun to be with. You're even quicker than I think I am. You, Ellen McKay, are sexy.\"\n\nEllen picked up the paper and folded it in half. A smile spread over her face as she tapped the paper twice on the table and lifted it up to slide it over the divider.\n\n\"Remember, ladies.\" She raised her voice to let herself be heard over the din of the restaurant. \"You have until tomorrow to call the school. You all agreed.\n\n\"Come on,\" she said to Harris. She stood and reached for his hand.\n\n\"Where are we going?\"\n\n\"Your place, Harris. I want to go back to your apartment and I want you to fudge the sugar out of me.\""
    ],
    "authorname": "MarshAlien",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-judgment-of-harris"
}