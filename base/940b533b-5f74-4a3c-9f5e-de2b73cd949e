{
    "title": "Louise Ch. 11",
    "pages": [
        "Louise wiggled in her seat. She wasn't used to wearing a dress, hose and heels. Her legs itched and her feet felt as though they were on fire even though she had only walked as far as the car to the back yard where the wedding was being held. However, even more uncomfortable than the shoes and hose was the way Barb was staring at them. It was a stare filled with ... hatred. She hated them. Louise let out a sad sigh as the feeling that something horrible was going to happen grew.\n\n\"Sweetheart?\" Nathan whispered in her ear, \"Are you alright?\"\n\nHe had felt the stare too but was ignoring it until it disturbed Louise. He raised his shields protecting her from the emotions that Barb was emanating across the yard. He turned toward Barb and gave her a warning look keeping his eyes on her until she turned away.\n\nLouise knew when Nathan raised his shields but said nothing for several minutes.\n\n\"I'm ok.\" she whispered.\n\n\"Are you sure?\" Nathan asked.\n\n\"I'm sure... who invented pantyhose anyway?\" she asked as she scratched her knee.\n\nNathan laughed as with a touch he took away the itch.\n\n\"Will I be able to do things like that?\" she asked. \n\n\"Yes.\" Nathan replied patiently. \"As soon as everything is settled, we'll start your lessons.\" \n\nLouise was going to reply but the anger belonging to someone else distracted her. She looked behind her and saw Joseph, Nathan's younger brother looking off to the side. The anger that came from him was every bit as dark as Barb's but the reason for it was different. As soon as he realized that she was looking at him, his shields went up.\n\n\"Sweetheart?\"\n\nBefore Nathan could say anything more, the processional started and Louise pushed Joseph and Barb out of her mind. She found the wedding beautiful but still didn't want one of her own. The idea of a private ceremony and then a reception was more to her liking. She stole a peek at Kevyn who nodded in agreement.\n\nAn hour later, the ceremony was over and the two couples were greeting their guests. Barb hid in the back and caught sight of Joseph sitting alone. She waited for several moments to see if anyone joined him. When she decided that he was single, she walked up to him and sat down.\n\n\"Hi, I'm Barb Yancy Simpson. Kevyn and Louise are my sisters.\"\n\n\"I'm Joseph Richardson, Nathan is my brother.\"\n\n\"It's Nice to meet you.\" Barb said trying to be casual. \"It was a beautiful wedding wasn't it?\"\n\nJoseph looked at her and decided to lay his cards on the table. He wasn't in the mood to play games.\n\n\"Look, I know who you are and I'm not interested in you or any other woman for that matter. If you just want to share a table that's fine but there won't be any dinner dates.\"\n\nBarb's face burned with embarrassment that she was that transparent. The ball was in her court. If she left, she would confirm what he was thinking. If she stayed, she still had a chance at changing his mind.\n\n\"Thanks, it would be nice not to eat alone.\" \n\nJoseph nodded at her and began watching everyone as the reception began.\n\n\"How about a dance?\" Barb asked after they had eaten.\n\nJoseph hesitated and then shrugged. He held his hand out to Barb and led her to the dance floor. His touch was firm but impersonal. Barb could have been a mannequin from a department store as far as he was concerned. He would have been just as content sitting at the table.\n\nNathan watched Barb and Joseph dance but wasn't concerned. Joseph could take care of himself as far as Barb was concerned, but it was the anger that concerned him. He wasn't worried that Joseph would rape. He was as considerate to his few dates as he had been to the women that he himself had dated. Nathan watched them for a few more seconds before turning his attention back to Louise. He had to make a point of talking to Joseph and sooner rather than later.\n\nNathan spent twenty minutes trying to convince Louise to dance with him.\n\n\"I'm not going out there!\" \n\n\"Come on, you won't have to do anything but hold on to me.\" he replied. \"One dance.\" he urged as he wrapped his arms around her and began to sway to the music. \"Please?\" He begged as he kissed her cheek.\n\nFinally, Louise gave in.\n\n\"One dance and don't complain when I step on your toes.\"\n\nOne dance turned into three. They left the dance floor when the music went from slow dance songs to fast ones.\n\n\"Thank you.\" Nathan said.\n\n\"How many times did I step on your toes?\" Louise asked.\n\n\"None and Louise, you dance well.\" Nathan replied.\n\nBy this time, Joseph had excused himself telling Barb that he had several legal briefs to write. Barb watched Joseph walked away, stopped to talk to a tall, handsome dark skinned man and left. She was thinking about introducing herself to the man and was in the process of standing when a woman approached the man. Remembering what happened with Veronica, she sat back down.\n\nShe looked around hoping to see another male sitting alone. At this point, she didn't care whether he was rich or not, she just wanted someone to pass the time with. She jumped when she heard Kevyn's voice behind her.\n\n\"Nice wedding wasn't it?\"\n\n\"What do you want Kevyn?\" Barb asked ignoring the question.\n\n\"Nothing,\" Kevyn replied, \"I saw that you were sitting alone and thought that you would like some company.\"\n\n\"I'm fine... I suppose you and the mouse are planning a wedding?\" she asked dryly.\n\n\"No Louise and I aren't planning a wedding.\" Kevyn replied putting the emphasis on Louise's name. \"We're going to have a private ceremony and a reception afterwards. I would ask you to help but I already know what you'll say.\"\n\n\"What about the others? Are you inviting them?\" Barb asked not sure of why she cared.\n\n\"We're planning on it.\" Kevyn replied. \"We haven't called them yet.\"\n\n\"Congratulations.\" Barb said her voice tinged with bitterness. \"I have a question though, how did you do it? I mean how is it that the two of you ended up in one of the wealthiest families in the world?\"\n\n\"I can't answer that.\" Kevyn replied.\n\n\"Can't or won't?\" Barb shot back.\n\n\"Can't.\" Kevyn replied. \"Have you ever stopped to think that if you stopped looking so hard that it might just happen?\"\n\n\"Easy for you to say....\"\n\nKevyn threw up her hands and walked away. Even as Kevyn walked away, Barb wanted to call her back. A small part of her wanted to be happy for her but she held back. To acknowledge that one small fact would mean that she was thinking that maybe Louise was right. She stood up to leave and ran into Louise,\n\n\"Where's Nathan?\" Barb asked.\n\n\"He's talking to Patrick.\" Louise replied. \"Barb....\"\n\n\"I have to go, I'll see you later.\" Barb said interrupting her. \"Call me about the reception.\"\n\nShe walked off before Louise could say anything and wondered why she wanted to go to the reception. It would be nothing more than another reminder of what she didn't have. If she didn't go, she would have to explain why and it was much easier to go and to feign happiness than to go through Juliette and Leon's interrogation and lectures.\n\nShe was escorted to her car, helped in and she drove off without looking back.\n\n*******\n\nLouise watched Barb leave with a sense of disquiet but came to a decision. Nothing more could be done for Barb. It was time for her to move forward in her new life with Nathan and for Kevyn to move on in her life with Patrick. She looked around to see Nathan looking at her and blushed. She knew what the look meant. She stood rooted in place as Nathan moved toward her with smooth, graceful movements. Her nipples tightened as he closed the space between them. She didn't think that she would ever get used to the way that he looked at her or to the way that she responded.\n\nA ball of warmth started in the pit of her belly and began to spread to the rest of her. By the time Nathan reached her, her entire body was hot. Suddenly, his arms were around her and he was holding her tight against him taking some of the heat away.\n\n\"It's the remnant effects of the turning combined with being newly mated.\" he assured her as he cooled her body with his.\n\n\"How long will this last?\" Louise asked thinking about her mother and her complaints about \"hot flashes\".\n\n\"A few more days and things will start to level out.\" he replied as he stepped back and led her to their table where a pitcher of ice water waited for them. Nathan poured her a large glass of it, refilling the glass as soon as it was empty.\n\n\"Better?\" he asked.\n\n\"Better.\" Louise replied as she looked around.\n\nHer eyes landed on Joseph who was talking to Winston and seemed to be genuinely happy.\n\n\"Winston has agreed to work at his firm.\" Nathan said when he saw whom she was watching. \"He passed his 'Bar' which doesn't surprise me.\"\n\n\"What kind of law does Joseph practice?\" Louise asked realizing that she did not know much about Nathan's family.\n\n\"Mostly corporate law but he also has a small firm that practices criminal law as well as pro bono work. Uncle Patrick as you know is a professor at the community college where Kevyn attended. I'm an architect but I also teach from time to time, Uncle Ethan owns a conglomerate of companies that deals with anything from computer software to you name it as well as several research companies, Katrina his mate is a social worker and as I said, very instrumental in the changes that have occurred in our world . My father is an architect, my mother a private teacher and the twins and their mates are all physicians.\"\n\n\"Wow, smart people.\" Louise mused.\n\n\"Which reminds me.\" Nathan said. \"You wanted to go to cooking school, is that still a dream?\"\n\n\"Yes. I have a stack of brochures that I haven't looked at yet.\" Louise replied.\n\n\"Are any of them in Europe?\" Nathan asked\n\n\"No, they're all here. I was thinking about the community college one. Why?\"\n\n\"I'm sure that it's a good program but why don't we go to France? After that we can go to Italy, England or anywhere else that we want to go to.\" Nathan said.\n\n\"France?\" Louise asked.\n\n\"There's a cooking school there that's reputed to be one of the best and they have room for two.\" Nathan said. \"Think about it. I reserved the spots just in case you said yes.\"\n\n\"Nathan!\" Ethan said from behind them. \"Mind if we join you for a moment?\"\n\n\"Of course not, please have a seat.\" Nathan replied standing up to greet his uncle and aunt.\n\nLouise and Katrina looked at each other and smiled shyly at each other.\n\n\"We never got the chance to thank you for helping us.\" Ethan said speaking for both him and Katrina.\n\n\"You're welcome, I didn't do much.\" Louise replied.\n\n\"Yes you did.\" Katrina replied. \"You helped save our daughter, someone that you didn't know and we'll always be grateful for that.\"\n\nLouise blushed not knowing how to respond.\n\n\"How's the house coming along?\" Ethan asked changing the subject when he saw Louise's discomfort.\n\n\"Great, it should be done in another week.\" Nathan replied. \"We've already been shopping for the paint and carpet.\"\n\n\"I think that the shopping is the worst of it.\" Katrina said softly.\n\n\"Me too.\" Louise replied, \"But Nathan can be very entertaining.\"\n\n\"That must be a Sinclaire male trait.\" Katrina replied laughing getting over her initial shyness. \"I hear that you like to play scrabble.\"\n\nSoon the women were chatting easily and exchanging cell phone numbers. Ethan and Nathan looked at each other and nodded. It had been Nathan's idea to get the two women together. He wanted Louise to have someone to talk to in case she had questions or concerns about the family that she needed a woman's perspective on. He knew that his mother had made herself available as well but he felt that Katrina was a better fit.\n\nNathan looked around to see if he could see Joseph and saw him getting ready to leave.\n\n\"Sweetheart, I need to talk with Joseph for a minute, I'll be back.\" Nathan said and kissed her on the temple before hurrying off.\n\n*******\n\n\"Joseph!\" Nathan called just as Joseph reached the gate leading to the front of the house.\n\nJoseph stopped, turned around and waited for Nathan to catch up with him.\n\n\"Leaving already?\" Nathan asked.\n\n\"You know me and weddings.\" Joseph replied.\n\n\"Yes, I know... so when does Winston start?\"\n\n\"Monday. He'll work with me but he wants to do criminal law as well.\" Joseph said.\n\n\"Does that surprise you?\" Nathan asked.\n\n\"Not in the least.\" Joseph replied. \"He's brilliant and I'm lucky to have him. By the way, congratulations on your mating.\"\n\n\"Thanks... Joseph, why don't we go out one night and shoot some pool or something? It's been far too long.\"\n\n\"Yes, it has.\" Joseph agreed. \n\n\"How about tomorrow? I think that Louise and Kevyn have plans to cook and bake all day. They're under the impression that they can keep ahead of us.\" Nathan said.\n\n\"I gather you didn't bother to tell them not to try?\" Joseph asked chuckling.\n\n\"I plead the fifth on that one but what about it? Are you free?\" Nathan asked.\n\n\"I am but Nathan, what's really going on here?\"\n\n\"Nothing, I just want to spend some time with you and make sure that you're alright.\" Nathan replied.\n\nJoseph's blue eyes flashed angrily.\n\n\"Why does everyone think that I'm not alright?\" he demanded. \"Mom, dad, Mason Donahue have all approached me and now you! What the fuck?\"\n\n\"Maybe it has something to do with the way that you just reacted.\" Nathan said. \"Joseph, you can deny it until time ends but anyone who knows you knows that there's something going on with you. I want you to know that you can come to me no matter what it is.\"\n\nJoseph started to say something and changed his mind thinking that Nathan wouldn't understand.\n\n\"I'm sorry that I blew up like that. I'm fine but if anything comes up, I'll call you.\"\n\n\"Are we still on for pool tomorrow?\" Nathan asked.\n\n\"Umm sure. What time?\" he asked.\n\n\"How about seven? That way you can have dinner with us and get to know Louise and Kevyn a little better.\"\n\n\"Sure.\" Joseph said and walked away.\n\nNathan watched him leave and knew that Joseph wouldn't make it for dinner. It seemed that Louise wasn't the only one with an angry sibling. Satisfied that he had done all that he could do at the moment, Nathan went back to the table. Louise was still talking with Katrina but Patrick and Kevyn had joined them.\n\nEthan was standing and holding his hand out to Katrina.\n\n\"We have to go see the twins off. They're leaving for their honeymoon in a few minutes.\"\n\nAfter they were gone, Kevyn looked at Louise, started to say something about Barb and changed her mind. Instead, she brought up their ceremony.\n\n\"Any thoughts as to when?\"\n\n\"No but we need to call home and find out when people are available to come out.\" Louise replied.\n\n\"It's too late tonight, we can do that tomorrow.\" Kevyn said. \"All of them should be at home. Where do we want them to stay?\"\n\n\"I think that we should have them stay at the hotel.\" Patrick said. \"It was easy having one person who didn't know who we were in the house but several? The chances that someone will ask about our nocturnal lifestyle is too great as well as the chances of someone finding something. We'll also have to erase memories like we did with Barb.\"\n\n\"I agree.\" Louise said thinking of their nieces and nephew, Wanda in particular.\n\n\"I'll call Hans when we have a date.\" Patrick said. \"Is the ceremony going to be just the four of us or are we inviting certain family members?\" he asked.\n\n\"Where would the cutoff be?\" Kevyn asked. \"I don't see how we could invite some and not others.\"\n\n\"I agree.\" Louise said. \"Do we need a witness or something?\" \n\n\"Not unless you want one.\" Nathan replied. \"We're already married and this is something for you and Kevyn.\"\n\n\"So it could be just us and a minister?\" Kevyn asked.\n\n\"If you wish.\" Patrick said. \"And just like human marriages, rings are optional. I can't speak for Nathan and Lou but I would like for us to wear rings but we can talk about that later.\" he added.\n\n\"Ok, where are we going to do this?\" Kevyn asked.\n\n\"Our house.\" Louise said before anyone else spoke. \"The new one... I mean if that's alright with everyone.\"\n\n\"I agree.' Nathan said pleased that Louise had referred to the house as \"ours\". \"We can have the reception there if you want\"\n\n\"How about our place this time?\" Kevyn said. \"The last party was at your house and our house is closer to the hotel.\"\n\nThe conversation was interrupted by an announcement made by Ethan with Katrina at his side.\n\n\"The twins and their mates are about to depart for their honeymoon. If any of you wish to see them off, be at the front of the house in ten minutes. All of us would like to thank you for attending this happy occasion and you are welcome to stay until just before dawn. If you need transportation home, see any of the security guards. Thank you.\"\n\nNathan held his hand out to Louise as Patrick held his out to Kevyn and led her to the front of the house. A few minutes later, the twins came out each of them holding the hand of their mate. They smiled and waved happily as they passed by and stopped in front of Kevyn and Louise.\n\n\"We came very close to having a send off service instead of a wedding.\" Vanessa said. \"We have you to thank that it was the latter. Thank you both.\"\n\nThe twins and then the grooms hugged Kevyn repeating the sentiment before continuing on their way to the waiting car. Louise leaned back in Nathan's arms no longer worried about the public displays of affection. They waited until the car pulled off to decide what they were going to do next.\n\n\"Why don't you come home with us?\" Kevyn asked. \"We were going to spend the day cooking anyway and we can call the others while we're at it.\"\n\n\"What do you think?\" Louise asked Nathan.\n\n\"Fine by me but I need to call Joseph. He was coming to our place for dinner.\" Nathan replied.\n\n\"Great, I'd like to meet my nephew by marriage.\" Kevyn replied. \n\nA few minutes later, their cars were brought to them.\n\n\"See you in a few minutes.\" Kevyn said as Patrick helped her into the car.\n\nNathan helped Louise into their car and followed Patrick and Kevyn home. He occasionally glanced over at her amazed at how much she had grown and at how easily she seemed to be adapting to a new way of life.\n\n\"I am so proud of you and proud to be your mate.\" he told her as he brought her hand to his lips and kissed it.\n\nLouise didn't know what to say. She gave his hand a squeeze, laid her head against the headrest and closed her eyes. \n\n*********\n\nBarb got back to the apartment and changed her clothes. By the time she was changed, she felt a little squeamish. She looked in the tiny medicine cabinet hoping that Kevyn had something for an upset stomach. She found a roll of antacid that hadn't been opened in the back of the cabinet. She opened the roll and chewed two of them before lying on the sofa and falling to sleep without turning the television on.\n\n         ************** Pittsburgh, Pennsylvania\n\nGene Yancy stumbled into the house without turning on the lights. Things had gone downhill for him since Clay died without making that big investment which would have gotten him financially out of the hole. It was a detail that he hadn't thought about when he decided to kill Clay. \n\nHe had his yearly evaluation before he left work and it hadn't been good. In fact, it had been disastrous.\n\n\"Gene, you're good at what you do when you do it and when you aren't pissing people off.\" His office manager told him. \"I know that the past few months and especially the past few weeks have been hard for you but I can't keep covering for you. You aren't pulling your weight.\"\n\n\"Is it my fault that my investor died?\" Gene snapped.\n\n\"No it isn't but to be honest, had I known that it was Clay Robinson I wouldn't have accepted his money.\"\n\n\"What? Do you know how much money he was going to invest?\" Gene asked incredulous.\n\n\"It doesn't matter because I also have to be concerned about the integrity of this office and accepting money from a known drug dealer...\"",
        "The meeting had ended in a shouting match with the manager putting Gene on suspension for insubordination.\n\n\"Get out Gene and you're suspended for thirty days without pay.\"\n\nThat caught Gene's attention.\n\n\"What? Come on! You're suspending me because I disagreed with you?\"\n\n\"I'm suspending you because you've used up all of your chances.\" The manager replied. \"I've talked to you time and time again about being late and your attitude. Even now, when I'm telling you that your job performance isn't up to par instead of asking how to improve, you argue with me. Now get out before I call security.\"\n\nGene opened his mouth to argue.\n\n\"Shut the fuck up or you're fired.\" the manager said not backing down.\n\nGene stormed out of the office, went to his own office and grabbed his coat. He avoided looking at anyone certain that they knew what happened. On the way home, he stopped at 'Harvey's for a beer before going home. If he hadn't run out of money, he would have had more than four beers.\n\nInstead of going to his room, the one that had been his mother's, he sat on the couch and tried to figure out what he was going to do for the next month. It didn't occur to him that he could make use of the employee assistance program for help in controlling his temper or for financial assistance.\n\nIn his mind, he had been wronged. It was time to find another job where he and his talents would be appreciated and put to good use.\n\n*******\n\nLeon Yancey stopped at the 'Super Wal-mart' on the way home from work to buy flowers for the gravesite of his parents. He was off on Sunday and decided to go to the gravesite before going home to sleep. When he got up, he would run to 'De Luigi's' for a large cheese steak with hot sauce, hot peppers, cheese and mushrooms with a large order of fries and eat it while he watched the basketball game.\n\nWhen he got to the 'Wal-mart', he picked up two bouquets of flowers and a twelve pack of grape soda. He had given up drugs and alcohol years before and had worked his ass off at the steel factory until he reached the position of night shift supervisor. The people working under him found him to be fair and knew that he didn't ask anyone to do anything that he wouldn't do himself. \n\nIf he found someone struggling with their duties, instead of berating them and adding to the problem, he helped them until they caught up. His small office walls were filled with plaques and awards that he had gotten over the few years that he had worked there.\n\nHe had never married and didn't have the desire. It was a woman that had started him on the path to near destruction. He didn't blame her exactly. All he had to do was walk away from her but he couldn't. It started with a little weed and then progressed from there. Waking up naked and bleeding in an unfamiliar place had been his wake up call. \n\nHe dumped the woman, checked into a rehab place and never looked back. As he drove home from the 'Wal-mart' to the cemetery, he thought about Louise and felt a pang of guilt. They should have helped her more... \"I should have helped her more.\" he murmured accepting the responsibility for his perceived lack of action.\n\nIt was early yet so he pulled into a 'Denny's', got out of the car and went in. He grabbed a paper and perused it while he waited to for a table.\n\n\"Lee?\" a familiar voice from the distant past called.\n\nHe looked up to see Janet Duncan, the woman who had been a part of his near destruction.\n\n\"Janet?\" He asked shocked. He barely recognized her. She looked older than her years.\n\n\"You're looking good.\" she said as she moved closer.\n\n\"Thanks... I managed to get clean...\"\n\n\"Good for you... you got any money for an old friend?\" she asked laying a too thin hand on his arm.\n\n\"Umm no but I'll be glad to buy you breakfast.\" he replied.\n\n\"Thanks but I need the money.\" Janet replied. \"I'll give you something in return.\"\n\n\"I.....\"\n\n\"Hey you!\" the manager on duty called. \"Come get your coffee and get out.\"\n\nLeon looked at her and then at the manager.\n\n\"Can you add a sandwich and a juice to that order? I'll pay for it.\"\n\n\"Keep your damned charity!\" Janet snarled as she took the cup of coffee and unsteadily walked out of the restaurant.\n\nLeon watched her leave and felt a mixture of sorrow and relief as he realized that had he not changed, that it could have been him begging for money for the next fix. That thought triggered a memory.\n\nWhen he got out of rehab, he had nowhere to go. Kevyn was already in California, Gene was married but was having problems, Barb knew that he needed help but hadn't offered to help him and Juliette was having her own issues. Victor Yancy was still alive then and was very disappointed in him. However, Louise had stepped up for him.\n\n\"We have the space so why can't he stay here with us?\" She asked. \"He can help with the yard and things like that.\"\n\nFinally, Victor agreed but gave a stern warning.\n\n\"Alright but I swear, if I smell alcohol on you or you come through that door high, you're out. Do you understand?\n\n\"I understand and dad? Thank you!\"\n\nAfter they were alone, Leon hugged Louise and thanked her. \n\n\"You won't be sorry.\" he told her.\n\n\"I know and you know what?\" she said, \"it's going to be alright, I can feel it.\" And it was. The question that he asked himself was, \"why didn't I step up and help her more than I did?\" That one question would keep him from sleeping the way that he wanted and needed to.\n\n*******\n\nJuliette checked her bank account to see if she had enough to cover the expense of shipping Barb's clothes and other personal items.\n\n\"The account ending in 0077 has an available balance of two-hundred dollars and twenty-one cents...\"\n\nJuliette hung up and sighed. There was no possible way that she could afford to send Barb her things and buy Wanda what she needed for her next science project. Her only option was for Barb to pay for it herself. She refused to deny her children something that they needed in order to help her sister.\n\nJuliette glanced at the clock. \n\n\"It's four am here which makes it one am there.\" she murmured to herself. She wasn't sure of when Barb got up and decided to call her around three pm Pittsburgh time. She could almost hear the conversation.\n\n\"What do you mean you can't pay for it? When does Wannie need her stuff? Just pay for it and you'll have your money back in a few days.\"\n\nIn the past, Juliet did whatever Barb wanted; it was easier that way and it hadn't interfered with anything that the kids needed as it did now. Barb, she decided was just going to have to get over it and pay for the shipping herself if she wanted her things.\n\nJuliet wondered how things were in California. She knew that Barb had been angry and then jealous when Kevyn took Louise back with her and all of them noticed how she had drooled over Kevyn's man. Juliette shook her head at the memory but was honest with herself. If a rich man came along and promised to take care of her and the kids, she would jump on it but she wouldn't sell her soul for it.\n\nShe set her alarm and made a last check around the house to make sure that the windows and doors were locked. The kids father Angel Mendoza was picking them up at nine to take them to spend the day at his house with his wife and her son. She and Angel hadn't gotten along as a couple but they made good friends because of the kids and besides, his wife Anna was good to them. He loved them and she knew that if she were to ask him for the money for Wanda, he would give it no questions asked. But she wasn't going to ask. She wasn't going to ask for money just to help Barb.\n\nSatisfied that the apartment was secure, Juliet went to bed thinking about Kevyn and Louise.\n\n\"Kevyn, you're one lucky ducky.\" she murmured as she fell asleep.\n\n*******\n\nLouise wiggled around in the seat. The heat was back worse than it had been before. Her clothes felt tight and the panty hose made her legs itch. Finally, she couldn't take it anymore. She unbuckled her seatbelt, kicked her shoes off and ripped the pantyhose off. The relief that she felt was minimal, removing the pantyhose did nothing to ease the burning in her stomach and the rest of her body.\n\nNathan gave her hand a reassuring squeeze and murmured something. Immediately her body cooled and the itching went away.\n\n\"You have got to teach me how to do that.\" Louise said sighing with relief.\n\n\"I will but it's only a temporary fix. It'll be better in a day or two I promise.\" Nathan replied.\n\n\"Thank god!\" Louise said. \"Are we almost to Patrick's house?\" she asked.\n\n\"Yes but we'll go in through the back unless you need to see Kevyn for something.\" Nathan replied.\n\n\"No, I'm good. I just want to get out of these clothes and into my tee shirt.\" Louise said beginning to squirm again.\n\nNathan inwardly groaned. He hated anything that kept his skin separated from hers. When they got to their suite, he would bring up the offending item.\n\nFive minutes later, he was parking the car in the garage located in the back of the house. \n\n\"How are your feet?\" he asked before he got out.\n\n\"Much better since I took my shoes off.\" Louise replied and then added, \"I can walk so don't even think about carrying me.\"\n\nNathan chuckled as he got out of the car. \"Thank you\" he murmured to whatever fate or god who happened to be listening.\n\nA few minutes later, they were in their suite and Louise was undressing. Nathan sat on the bed and watched her as she undressed and carefully hung her dress. When she was about to take her slip off, he stopped her.\n\n\"Sweetheart, wait.\"\n\nLouise stopped and turned to look at him.\n\n\"Come here.\" he said.\n\nBy the time she reached him, he was naked and his cock was pulsing. He pulled her so that she was standing between his legs and ran his hands up her thighs massaging them with the soft silkiness of her slip. His hands moved to her ass gently kneading the cheeks as he pulled her even closer. \n\n\"Nathan?\" Louise breathed.\n\nHe stood up, took the slip by its hem and slowly pulled it up and over her head leaving her only in her bra and panties. He reached behind her, undid the clasp that held her hair in a simple bun and pushed her back so that he could look at her.\n\n\"Beautiful.\" he said as he looked at her starting at her head, his gaze lingering on her breast, soft stomach and between her legs. He lowered his shields and let her see herself as he saw her.\n\nTears stung Louise's eyes at what she saw. While she had never considered herself ugly, she never thought of herself as beautiful. However, that was how Nathan saw her.\n\n\"That's really how you see me?\" she whispered a little of the old insecurity showing.\n\n\"That is how I saw you the very first time I laid eyes on you and it is how I will always see you.\" he replied as he stepped closer to her and touched her face.\n\n\"You're crying. Why?\" he asked as he wiped a tear away and tasted it.\n\n\"I... no one outside of Kevyn and Leon has ever taken the time to see me... that didn't sound right.\" she muttered. \"I've never seen myself the way that you do and it feels good. I also realized that for the first time in a long time that I'm happy. I also wish that my parents were still alive, they would have loved you and I wish ...\"\n\nNathan held her as she cried. She was missing her parents.\n\n\"I would have loved them too.\" he said. \"But Lou, I believe that they've been watching and they are as proud of you as I am.\"\n\nThey stood there with their arms around each other for several minutes.\n\n\"Lou, do you want to go back to visit the gravesites?\" Nathan asked.\n\n\"It's all the way in Pennsylvania.\" \n\n\"That doesn't matter.\" Nathan replied, \"But you do and if you want or need to go back to Pittsburgh then we'll do it.\"\n\nLouise hesitated before replying. \n\n\"I'll think about it.\"\n\nA second later, Louise was as naked as Nathan was. He cupped her large breasts in his hands and stroked the nipples until they were hardened peaks. He stepped backwards still holding on to her breasts and flicking at the nipples with his thumbs.\n\nWarmth filled Louise as moisture gathered between her legs accompanied by a dull ache. Nathan's nostrils flared as the scent of her arousal hit him. He was torn, he wanted to be inside of her but he wanted to taste her too. In the end, the desire to taste won out.\n\nHe laid her on her back and parted her legs. He kissed and then licked the inside of each thigh before reaching his goal. He licked the clear fluid that ran from her savoring it as if it was the most precious liquid on earth. His cock throbbed painfully but he ignored her. She and her pleasure would always come before his. \n\nHe could hear her whimpering and knew that she was going to come even though he had yet to touch her clit. He was thrilled by the knowledge that he affected her so strongly. He slipped two fingers inside of her and began to slide them in and out while he watched her clit fill with blood and harden. He fought the temptation to take it into his mouth. He wanted to watch it spasm and throb as she came.\n\nHe took a quick peek at Louise and almost came when he saw her pulling on her nipples. Even when they had made love almost non-stop after the turning, she hadn't touched herself. His gaze went back and forth from her face to her breast and then to her clit.\n\nHe was watching her face when the orgasm began. Quickly his eyes snapped to her clit, which was protruding from beneath its hood and pulsing wildly. The moan had become a low scream as the pulsing of her clit increased. Unable to help himself, Nathan took the hardened bud into his mouth and grazed his teeth across it careful not to cause her pain.\n\n\"Nathan!\" Louise screamed as she bucked and ground against his face.\n\nThe calling of his name was his undoing. Even as he suckled her and pumped his fingers in and out of her, he came. The friction of the comforter increased his pleasure as he writhed against it his semen adding lubrication.\n\nHe didn't want to move his mouth from her clit so he screamed for her telepathically. When her orgasm ended, he was still hard. Without missing a beat, he got to his knees, lifted Louise's shaking legs and slid in clear up to his balls and then he stopped to catch his breath.\n\nThe thought that this lovemaking session was every bit as intense as the twenty-four hour lovemaking session had been crossed his mind but disappeared when Louise began to move beneath him. He lasted longer only because of the previous orgasm but the one that was coming promised to be every bit as intense.\n\nLouise reached for him wanting and needing to be held as they came. Taking her hands, Nathan pulled her up to him, pressed his lips against her neck and bit just hard enough that there was a thin trickle of blood. \n\nLouise screamed his name again, let her fangs descend and bit him on the shoulder. The bite was considerably harder than the one Nathan had given her but he didn't seem to mind. If anything, she felt him swell inside of her and when she fastened her lips around the bite and sucked, he came with a roar that she was sure Kevyn and Patrick must have heard on the other side of the house\n\nAs Nathan eased Louise back onto the bed, he again wondered about the intensity of the orgasms. They wouldn't be the first or last couple to conceive so soon after mating. He would just have too wait and see but in the meantime, he wouldn't say anything to Louise who was snuggling against him already half asleep.\n\n********\n\n\"There you are!\" Kevyn said when Louise finally made it to the kitchen. \"I've already started but to be honest with you I think that this is a lost cause.\"\n\n\"Why is that?\" Louise asked.\n\n\"Well, I made two of those breakfast casserole things and Patrick already ate half of one.\" Kevyn replied. \"The other half is in the oven for you and Nathan.\"\n\n\"He'll like that.\" Louise replied sitting down. \"So what are we doing? Are we going to try to cook ahead or not?\"\n\n\"I'm game if you are.\" Kevyn replied. \"And we have to make dinner anyway, Joseph is coming.\" she added.\n\n\"What about something like chicken?\" Louise asked. \"I don't think that my stomach can handle any more rich foods.\"\n\n\"How about that corn flake chicken you make?\" Kevyn asked.\n\n\"That's easy enough.\" Louise said. \"We can make macaroni and cheese and a veggie. The question is do we have what we need?\"\n\n\"Good question, but the chicken will be frozen even if we did.\"\n\nLouise looked at the clock.\n\n\"It's only one but we have a couple of options. We can thaw it out and let them eat the casserole as a snack or we could have the grocery store deliver it. The delivery would be the fastest and the easiest way to go.\"\n\n\"Agreed.\" Kevyn said. \"Lets make a list and we can place the order online. After that we can start making phone calls.\"\n\nTwenty minutes later the order was in.\n\n\"According to this it should be here by four.\" Kevyn said. \"So who do you want to call first?\"\n\n        **********************\n\nPittsburgh, Pennsylvania\n\nGene was sprawled out on the bed still fully clothed except for his shoes when he woke up. His mouth felt and tasted like dirty socks. His head pounded and he wondered what he had been thinking in getting buzzed as he had and thanked god that he hadn't gotten into any fights and that he had run out of cash.\n\nHe reached for the bottle of water that he kept by the bed, guzzled it down and got out of bed fighting nausea. He stripped while he was in the bathroom, turned on the cold water of the shower and stepped in.\n\n\"Son of a bitch!\" he cursed when the cold water hit his body. After a few minutes, he gradually adjusted the temperature of the water until it was comfortably warm. By the time he got out, he felt good enough that he thought that he could eat something without throwing up.\n\nHe threw on a pair of lounge pants and a tee shirt and made his way to the kitchen. He was going to settle for a bowl of cereal but he was out of milk which left eggs and toast as his only viable option. As he cooked, he cursed himself for not being able to keep his mouth shut. He couldn't afford a month's suspension and would have to use all of his vacation time if he wanted any extra money to live on.\n\nBreakfast made, he turned on the television and wondered what Leon was doing. There was a basketball game on that he wanted to see but he had cut all but the basic cable off. After breakfast, he got dressed to go buy the Sunday paper. There had to be other firms that were hiring. Before he left he called Leon.\n\n\"What's doing?\" he asked.\n\n\"Not much.\" Leon replied. \"I went to the grave sites this morning on my way home. Why?\"\n\n\"Are you going to watch that game today?\"\n\n\"Yep... you want to come over? I was going to get a cheese steak from 'De Luigi's', I can make it two.\"\n\n\"That would be great; I can pay you when I get there.\" Gene replied.\n\n\"Nah, my treat... see you in an hour... And Gene? You know that I don't drink anymore right?\"\n\n\"I know... I'll bring some soda or something.\" Gene replied.\n\nHe grabbed his car keys and left the house. The phone rang just after he left.\n\n**********\n\nJuliette steeled herself for the conversation with Barb. The kids were already gone a fact for which she was grateful. She didn't like them to hear that she was having problems with money. She especially tried to keep any money issues away from Wanda. At eight years old, she always felt guilty whenever she asked for anything. On the occasions when money was tight and Juliette didn't even go out, an extra one-hundred dollars or more would come from Angel and always with a note.\n\n\"Julie,\n\nThis is for whatever the kids need. If you need more, please ask. They are my children too and I want to help in any way that I can.\n\nAngel.\"\n\nIt was times like that when Juliet wondered why they couldn't make it work. Angel was a good man and father. He never cheated on her and never abused them in any way but they couldn't make it work. Part of the problem was that they were young when they had Wanda. He was nineteen and she was barely sixteen but they loved each other. The next year Victor was born and after that Celeste.",
        "Angel had been there for each of their births crying each time as he cut the umbilical cord. He had worked his ass off to provide for them while attending school for computer programming and not once did he complain. He had wanted so much for them including school for her.\n\n\"Baby when I'm done, you can go to school. You can be a nurse, hell a surgeon if you want but we need to get your GED first.\" \n\nShe hadn't believed him although she didn't know why. She was smart but that wasn't the problem. She just didn't want to do it. She liked being a stay at home mom so that she could talk to her friends and take care of the kids. She only got her GED because Angel wouldn't shut up about it.\n\n\"Baby come on! You have to do this so that we can help the babies with school!\" he pleaded.\n\nAt the age of nineteen, Juliette got her GED and then Angel started pushing her to take classes at the community college. He couldn't understand her resistance but he tried.\n\n\"What if something happens to me?\" he asked her during yet another argument about school. \"Who's going to make sure that our babies are cared for? Welfare? Julie, I love you and our babies and I want to see the world with you but I can't do it alone! You have got to help me.\"\n\nHis pleas fell on deaf ears until one day he came home and sat on the sofa. In so many ways, Angel reminded her of her father in the way that he always spent time with each child listening as they talked about their day no matter how tired he was or how bad his day had been.\n\n\"That's a beautiful picture!\" he said to Wanda. \"May I keep it?\"\n\nJuliette stopped what she was doing. Something in his voice caught her attention.\n\n\"It's for you silly!\" Wanda replied as she threw her arms around Angel and hugged\n\nAngel held her tightly and twirled a long braid in his hands.\n\n\"I love you mija never forget that.\"\n\nJuliette's alarm grew as he said the same thing to each child before he sent it out to play.\n\n\"Julie, sit down, we have to talk.\"\n\nJuliette closed her eyes at the memory. After all of this time she finally understood why they didn't work. It was all her. Angel had grown rapidly and she had refused to grow with him. She also realized that she compared every man that she went out with to Angel.\n\n\"Idiot!\" she said as she brushed away a tear. \n\nShe was about to pick up the phone to call Barb when it rang.\n\n\"Hello... Kev? How are you guys? I asked Barb about you but you know how she is. The kids are fine; they're at Angel's house. So what's new? What? Our Louise is getting married? Who's the lucky guy? Nathan... ok does Nathan have a last name? Si....Sinclaire? Nephew? Is she there? I want to talk to her!\"\n\nKevyn handed the phone to Louise and moved away.\n\n\"Lou? Oh my god! You're really getting married? When? Oh... I see but there's going to be a reception? Do you know when? I don't care if I have the time or not, I'm coming! Have you talked to Gene or Leon? If I had to guess I would say that Gene's over at Leon's... there's some game on today. What does Barb have to say? I'm sure... While I have you on the phone, I want to tell you something.\n\n\"I'm sorry that I didn't help you with mom and that I tried to pressure you into taking her home. Kevyn was right; it would have been too much. I also wanted to thank you for doing it without complaint and for watching the kids for me.\"\n\nLouise listened to the apology and felt the sincerity of it.\n\n\"Juliette, it's over and done with. It's time to move forward. We'll let you know when the reception is.... Of course the kids can come! Ok, do you need to talk to Kevyn? Ok, here she is.\"\n\nLouise smiled when she heard Juliette's excited chatter. One relationship healed three more to go. She thought to herself.\n\n*******\n\nGene looked around Leon's well-kept apartment with a tinge of jealousy. He had the latest model big screen television set as well as surround sound and all of the cable channels. On more than one occasion, he thought about asking Leon if he could move in with him and split the expenses. It would save both of them money but then, Leon didn't need his money. He had a nice little nest egg where most of his money went after expenses. The television, surround sound and lap top were bought with income tax money and what wasn't spent was added to his nest egg.\n\nAs far as Gene knew, the only ones that Leon helped financially was Louise and on rare occasions Juliette. He had never offered to help him or Barb figuring that since they were single they were doing as well as he was. In Barb's case, it was a correct assumption although she always bitched and moaned about not being able to afford things.\n\nIn his case, it couldn't have been further from the truth. When Dana left him, she took almost everything except the clothes on his back. For all practical purposes, he had had to start over and hadn't made it past square one. He had pinned all of his hopes on Clay Robinson, which would have been a bust no matter how he looked at it.\n\n\"You ready for the game?\" Leon asked.\n\n\"Yeah... umm Leon, I might need to borrow some money from you.\"\n\n\"What for?\" \n\n\"I.... I got suspended for thirty days without pay and once I pay the house note and other bills, I'm tapped.\"\n\n\"How much?\" Leon asked.\n\n\"Six hundred?\" Gene asked. He hadn't planned on asking Leon for money but seeing the apartment and knowing what Leon had in his retirement account....\n\n\"Six hundred? I can give you two-hundred. Does that help?\"\n\n\"Yes... thanks.\" Gene said flabbergasted. He also knew that he wouldn't be able to hit Leon up again.\n\n\"No problem, I'll bring it by tomorrow.\"\n\nGene watched Leon and realized that out of all of them, he was the one who was the most like Louise. Gene had watched Leon pull himself out of near destruction to become a good, solid successful man and wondered why he couldn't do the same thing.\n\nHe realized that it wasn't because he couldn't... he just wanted things the easy way like Clay Robinson's money to get him to where he wanted to be. An uncomfortable thought hit him, just as Leon was similar to Louise; he wasn't very different from Barb. She wanted the same things that he did but didn't want to work for them.\n\nLeon turned on the television and threw the remote to Gene. \n\n\"Find the game while I go get some plates and napkins. Any preference on soda?\"\n\n\"Whatever you've got is fine.\" Gene replied as he began to flip through the channels.\n\nLeon's telephone rang, the number showing on the television screen.\n\n\"Answer that will you?\" Leon called in.\n\nGene felt a stab of jealousy that Leon didn't have to avoid answering the phone because it might be a bill collector.\n\n\"Hello... Kevyn? Hey how are you?\" he said with false enthusiasm. \"Yeah me and Leon are going to watch the game. Wait... I think that he has speaker phone.\"\n\n\"Who is it?\" Leon asked when he came into the room.\n\n\"Kev and Lou. They have some kind of news for us.\" Gene replied.\n\nA few seconds later, they were on speakerphone.\n\n\"We were going to skype you but you were off line.\" Kevyn said.\n\n\"No problem, how are things in sunny California?\" Leon asked genuinely pleased to be talking to his sisters.\n\n\"Nice and warm.\" Kevyn replied. \"Let me tell you why I'm calling, Lou and I are getting married and we want you to come to the reception.\"\n\n\"Lou's getting married?\" Leon asked. \"To who and have you met him?\" \n\n\"I have and he's really good to her.\" Kevyn replied. \"She's here; I'll let her tell you.\"\n\nThere was the sound of movement and the click of the speakerphone coming on.\n\n\"Hi guys.\" Louise said.\n\n\"Lou? How are you doing?\" Leon asked.\n\n\"I'm good... how's the steel mill?\"\n\n\"The same but I want to hear about this man. Who is he and how did you meet him?\"\n\nGene sat back and watched as Leon asked the questions that he should have been asking.\n\n\"His name is Nathan Sinclaire and he's Patrick's nephew.\" Louise said.\n\n\"Does Nathan have job or does he live off of Uncle Patrick?\" Gene asked.\n\nLouise hesitated at the underlying sarcasm and jealousy that she heard in his voice even though he tried to hide it.\n\n\"He has a job.\" she replied her tone cool.\n\n\"So Lou, you're happy right? He's good to you?\" Leon asked as he shot Gene a \"What the hell?\" look.\n\n\"Yes to both questions, do you think that you can come?\"\n\n\"Just say when and I'm there.\" Leon said. \"But give me a heads up so that I can start looking at airfares.\"\n\n\"Don't worry about that.\" Kevyn said. \"We'll get you here.\"\n\nGene sat seething. Two of his sisters were marrying into money while he was barely scraping by. He barely heard the end of the conversation coming out of his thoughts enough to say good-bye.\n\nAs soon as they hung up, Leon turned to Gene.\n\n\"What in the hell was that?\"\n\n\"What was what?\" Gene asked.\n\n\"That shit that you just pulled is what.\" Leon said. \"You didn't even congratulate her! I could hear the jealousy in your voice. What is it with you and Barb?\" he asked and turned away effectively ending the conversation.\n\n*******\n\nThe last phone call was to Barb who reacted as they thought she would but she didn't say that she wasn't going to attend.\n\n\"Where are you putting people up?\" she asked ready to complain if they said at one of the houses.\n\n\"At the same hotel that you stayed at.\" Kevyn said. \"We're looking at having the reception in two weeks. That gives people enough time to rearrange their work schedules.\"\n\n\"Whatever. Just let me know the place and time.\" Barb said.\n\n\"It's going to be here and at seven in the evening.\" Kevyn replied.\n\n\"Am I allowed to bring a date?\"\n\n\"Sure if you want.\" Kevyn replied not anticipating the question.\n\nKevyn hung up and looked at Louise.\n\n\"That went better than I thought it would. I told Barb two weeks, is that good?\"\n\n\"Fine by me but you might want to call Juliette and the guys back.\" Louise said. \"And while you're doing that I'll start getting the supplies together for dinner.\"\n\n\"Alright.\" Kevyn said a few minutes later, \"There's no problem on their end. I told them to be at the airport by nine pm.\"\n\n\"What about the hotel?\" Louise asked.\n\n\"I'd better call him too, are you alright with finding things?\" Kevyn asked.\n\n\"I'm good and the groceries should be here soon too. Do you have any money for a tip?\"\n\n\"There's petty cash in that drawer by the spices.... Hello Hans?\"\n\n*********\n\nHans waited on the guest at the desk with pure professionalism even though the woman tried to get his attention by leaning farther then necessary to sign the papers. When he handed her the keycard, she made a point of brushing her hand across his.\n\n\"Will that be all Madame?\" Hans asked.\n\n\"You know, you have the most remarkable gray eyes... I'm sure that you've been told that.\" the woman said.\n\n\"Thank you, was there anything else?\"\n\n\"You wife must have to fight the women off. I mean just look at you, tall, gray eyes and blonde... a nice combo.\"\n\nTiring of the woman, Hans pushed a button underneath the counter and waited.\n\n\"Yes sir?\" A young man who seemed to come from nowhere asked.\n\n\"Ollie, this is Mrs. Rickman. Please help her to her suite.\"\n\n\"Yes sir.\" Ollie replied hoping that this guest wasn't anything like Barb Yancy Simpson.\n\nHans shook his head as he watched Ollie and the woman walk away.\n\n\"Humans.\" he muttered under his breath.\n\nHe was going over the availability for the coming weekend when the phone rang.\n\n\"JS hotel, this is Hans, how may I be of assistance?\"\n\n\"Hans, this is Kevyn Sinclaire.\"\n\n\"Ah Mrs. Sinclaire! How are you?\"\n\n\"I'm fine and call me Kevyn for god's sake. We were almost family.\"\n\nThe offer of familiarity threw Hans but he recovered.\n\n\"As you wish, what can I do for you?\"\n\nAs Kevyn told him what she wanted, Hans looked over the diagram of the hotel.\n\n\"How many rooms did you say?\" he asked.\n\n\"Four and they can all be suites. Juliette my sister has three children so she'll need one of the bigger suites.\" Kevyn said.\n\nAnother sister Hans thought and hoped that she wasn't anything like the one who had just left and she had children to boot.\n\n\"How long will they be staying?\"\n\n\"Let's say a week and they can order whatever they want to eat plus have full privileges.\"\n\n\"Very good, is there anything else?\"\n\n\"I can't think of anything except this, Juliette is a lot nicer than Barb and her kids are well behaved.\" Kevyn said.\n\n\"Fine, if you need anything else, use my private number day or night.\"\n\n\"Thank you Hans, we'll be in touch.\"\n\n\"Somebody order groceries?\" Nathan said as he came into the kitchen carrying several bags with Patrick following with more.\n\n\"We did and it's for dinner tonight.\" Kevyn replied kissing Patrick's cheek. \"If you're hungry you can eat the rest of the casserole.\" she added.\n\nLouise blushed only a little when Nathan kissed her but she kissed him back.\n\n\"What's for dinner and how can we help?\" he asked as he began to unpack the grocery sacks.\n\n\"Corn flake baked chicken, macaroni and cheese, green beans and rolls.\" Louise replied. \"And ice cream for dessert. Nathan, can you get out the biggest bowl that they have and several of the largest baking pans? Patrick, could you fill the largest pot you have with water, add some salt and turn the burner on high when the water boils, add the macaroni. Kev, pour the cornflakes into the bowl, melt some butter and mix in whatever seasonings you want.\"\n\nLouise stopped talking when she realized that they were staring at her. \n\n\"Wow.\" Patrick murmured impressed.\n\n\"I'm sorry...\" Louise started to say.\n\n\"Don't be.\" Patrick said, \"If you run the kitchen at your restaurant like this you'll be packed.\"\n\n\"Sweetheart he's right.\" Nathan said agreeing with Patrick.\n\n\"Yeah but you're my family not my employees.\" she replied embarrassed.\n\n\"True but if you're comfortable in delegating to us then you'll be fine with other people.\" Nathan said kissing her temple. \"So, you need baking pans and a large bowl, what else?\"\n\nKevyn stood back and watched Louise and Nathan for several seconds before she set about her task. They were better than good together. They were perfect.\n\n*******\n\n\"Are you sure that he said he was coming?\" Louise asked when seven-thirty came and went.\n\n\"He said he was.\" Nathan replied, \"But then I really didn't think that he would. Something is really bothering him and he won't talk to anyone about it.\"\n\n\"Well, why don't we eat?\" Kevyn said. \"If he shows up we'll feed him.\"\n\nLouise looked over at Nathan. She would have been able to tell that he was worried without her ability. She took his hand and gave it a squeeze that he returned.\n\nThe dinner talk veered away from Joseph to the plans for the ceremony.\n\n\"The question is do we want to do it ahead of time or on the evening before the reception?\" Patrick asked.\n\n\"I would say that if we're going to have it at Lou and Nathan's we should do it before hand since the reception is going to be at our house. We need to be there to make sure everything is ready.\"\n\n\"Not necessarily.\" Patrick said. \"I'm sure that Katrina and Ethan would take care of that end of it and to simplify things, let's have it catered. That way there's no set up or clean up on our part and no one needs to worry about bringing food.\"\n\n\"Then we could do it on the same day. Lou what do you think?\" Kevyn asked.\n\n\"I think that will work but if we're going to use a caterer, we'd better be calling but Kev, I know that we said that we wanted this to be just us but I think that the others should be there. I mean we were together at mom and dad's funerals, shouldn't we be together for this?\"\n\nKevyn blew out a breath. That meant inviting Barb.\n\n\"I know what you're thinking.\" Louise said, \"But I think that she'll behave as much as she's capable of behaving. What do you think?\"\n\n\"I agree.\" Patrick said surprising Kevyn. \"If the only issue is Barb, she's manageable and if she isn't I'll compel her ass to go sit in a corner somewhere.\"\n\n\"Ok.\" Kevyn said, \"I'm good with it.\"\n\nNathan was the only one who hadn't voiced an opinion. He was watching Louise and debating about Joseph.\n\n\"If we're inviting siblings, then you should invite Joseph.\" Louise said, \"And your parents.\" she added to everyone's surprise. \"If our parents were alive we'd want them here wouldn't we?\"\n\nTheir ceremony which had started with five people including the minister had just increased to eleven people, fourteen counting Juliette's children.\n\n\"Sweetheart are you alright with this?\" Nathan asked. \n\n\"I'm fine.\" She replied with a smile although she was already nervous. \"Do you think that the people who catered the wedding are available?\" she asked changing the subject. \n\n\"One way to find out.\" Patrick said as he took out his phone.\n\n\"They're not available but they gave me the name of another service that they swear by... do you want me to call?\"\n\nSeveral minutes later, Patrick was off the phone.\n\n\"Well?\" Kevyn asked.\n\n\"They sound good and they were wondering if we wanted to set up a time to sample their food.\" he replied.\n\n\"When were they thinking of doing this?\" Louise asked.\n\n\"Tomorrow night.\" Patrick replied.\n\n\"Sounds like a plan if you guys aren't busy.\" Nathan said as he stood up and began to gather the dirty dishes. \"Why don't you and Kev relax? We've got this.\"\n\nKevyn and Louise went and sat on the patio neither of them speaking for several minutes.\n\n\"Who would have thought that this was possible?\" Louise asked as she rocked in the rocker. \"Do you remember when we used to tell scary stories about ghosts and vampires?\"\n\n\"I sure do but I didn't think that they existed.\" Kevyn replied laughing. \"Goes to show how much I knew.\" she added. \"Lou? Are you really okay with being a vampire?\"\n\nLouise thought about her answer.\n\n\"I did the right thing for me and Nathan so yes, I'm fine with it. The only thing that I think I'm going to miss is going out during the day with you. Was it hard? Finding out about Patrick I mean?\"\n\n\"You have no idea.\" Kevyn replied. \"First there was Lonnie and I swore never again... something else I was wrong about. The vampire thing didn't faze me, the fact that I had fallen for a rapist did. I was running away from Patrick when I came to Pittsburgh, which turned out to be a good thing. But the important thing is that I'm not fine with what they did, but I'm fine with Patrick.\"\n\n\"The vampire thing didn't faze me either.\" Louise said. \"The family history surprised me and maybe if Nathan had been a rapist I would have reacted differently but at any rate, I'm glad that you're ok.\"\n\nNathan and Patrick listened to the soft murmurings of the sisters and smiled at each other.\n\n\"Damn we got lucky.\" Patrick said thinking about Barb.\n\n\"Yes, we did.\" Nathan replied. \"Do you still have the name of the man who does genealogy?\"\n\n\"His name is Jackson Parker and I've already spoken to him. He wants us to gather as much information as we can but in the meantime he'll find out as much as he can with what I told him.\" Patrick replied.\n\n\"So you think there's something there too. Any ideas?\" Nathan asked.\n\n\"I'm not even going to venture a guess.\" Patrick replied. \"What about you?\"\n\n\"I'm with you but do you think that it means anything that Lou is the first female mate to turn in over three-hundred years?\"\n\n\"Again, I'm not going to try to guess.\" Patrick replied but I will say this, I won't be surprised if there is someone very powerful in their line. Whether any of the others are gifted remains to be seen.\"\n\n\"Barb is gifted.\" Nathan said.\n\n\"How do you know?\" Patrick asked.\n\n\"It seems that I had emphatic tendencies before Louise and being with her has enhanced them.\" Nathan said. \"What I'm saying is that I felt it the night that we were at the club. She is very intuitive but ignores it. She isn't anywhere near as strong as Lou and Kevyn nor will she ever be. I think that it's the same with the others and I wouldn't be surprised if one or more of them are ungifted.\"",
        "\"I'm anxious to see what Jackson finds out.\" Patrick said as he opened the door to the patio.\n\n********\n\nKevyn had just finished the third round of calls for the night when Patrick and Nathan came out.\n\n\"I told them to be at the airport by nine two weeks from this Thursday and I told Juliette that we would take her and the kids shopping on Friday night. I hope that's ok.\"\n\n\"That's fine.\" Patrick said as he pulled her out of the chair, sat down and pulled her back into his lap. \"I suppose Barb is a part of the shopping expedition?\"\n\n\"Yes, we really can't exclude her and besides she'd want to see Juliette and the kids.\" Kevyn replied. \"What are the chances that you and Nathan can take my brothers around?\"\n\n\"And leave you unprotected? Not a chance.\" Nathan said before Patrick could say anything. \"And I'm not about to give someone else the responsibility.\"\n\n\"Well then,\" Kevyn said not bothering to ask Patrick. She already knew what he would say. \"I guess we're all going shopping. But I think that Lou and I need to go before that so that we can find our dresses.\"\n\nLou grimaced.\n\n\"I have two stipulations.\" she said. \"No pantyhose and no heels.\"\n\n\"Not a problem.\" Kevyn replied. \"As a matter of fact, since it's on the beach why wear shoes at all?\"\n\n\"We wouldn't need to wear anything fancy either, just something that looks nice and that we can wear to the reception.\" Louise commented.\n\n\"So why don't we do this.\" Nathan said. \"Go to the caterers, go shopping for dresses and if there's time look for rings.\"\n\n\"Sounds good.\" Patrick said, \"Now what's for dessert?\"\n\n********\n\nBarb tossed and turned on the small sofa. She wasn't sure of what she was feeling besides ill. The phone calls about the wedding, seeing her siblings and the shopping should have made her happy, but they didn't. It wasn't that she didn't want to see her siblings; it was just that Juliette was also a competitor. The fact that she had three children wouldn't be a deterrent especially once the man saw how well behaved they were.\n\nBarb considered herself more beautiful than Juliette and wondered about the insecurity of having her in California. Juliette, she realized wanted the same things that she did but just hadn't gone after them in the same way. In fact, she wasn't even actively trying to find a rich man. She had the feeling that Juliette would be happy with any man who loved her the way that Angel had and to some degree still did.\n\nShe also wondered why she was thinking about the things that Louise said. The words came back to her at the oddest times such as when she was ready to sleep.\n\n\"You're wrong.\" she muttered. \"You're wrong about everything.\" she said as she closed her eyes.\n\n**************************\n\nTwo weeks later in Pittsburgh\n\n\"Wannie come on already!\" Juliette called out. \"The cab will be here in five minutes!\"\n\n\"Coming!\" Wanda called back as she tried to cram her science book into an already over stuffed backpack.\n\nFinally, she gave up and decided to carry it. She was so excited about the trip and excited that the teachers at school had given her the assignments for the week but admonished her to have fun too.\n\n\"Come on Wannie!\" Victor said from the doorway. If possible, he was more excited than Wanda was. He loved airplanes of all kinds and wanted to be an Air Force pilot. When he found out that they were going in a private jet, he whooped and danced around the apartment until he fell down exhausted.\n\n\"I'm coming, stop bugging me!\" Wanda replied.\n\nThe only one not sharing in the excitement was Celeste. Of the three children, she was the most timid and the one overlooked because she hid behind the more dominant personalities of her siblings. She sat on the sofa saying nothing but watching everything. \n\n\"Are you scared baby?\" Juliette asked.\n\n\"No.\"\n\nJuliette sighed and stroked the girl's head. For a while, both she and Angel were worried that there was something wrong with their youngest. Fortunately, both of them had insurance and they had her tested for everything and anything.\n\n\"She's fine.\" they were told time after time. \"Just give her time and she'll blossom.\" \n\nFor her anxious parents, that couldn't happen soon enough. \n\nThe sharp beep of a car horn made everyone move in a flurry Celeste included. Fifteen minutes later, they were on their way to the airport.\n\n\"Victor will you please sit still?\" Juliette said smiling. She fully understood his excitement. She could barely sit still herself.\n\n\"Will Uncle Gene and Uncle Leon be there?\" Wanda asked.\n\n\"They're supposed to be.\" Juliette replied.\n\n*******\n\nGene looked around the house to make sure that he had unplugged everything except the refrigerator and freezer. His bags sat by the front door. As he scanned the living room, he saw his phone charger lying on the coffee table. \n\n\"Shit!\" he said relieved that he had found it.\n\nOn top of his suitcase lay a manila folder that contained investment propositions that he planned to show Patrick sometime during the week. Over the past two weeks, he realized that he had handled Patrick all wrong. Instead of seeing him as a threat, he should have seen him as a potential investor but he had been so sure of Clay. Getting the Sinclaire's as investors would be a big feather in his cap and no one could touch him. He could only hope that it wasn't too late to fix the damage that he had caused because of his shortsightedness.\n\nHe took one last look around, picked up his bag and stepped outside to wait for the cab.\n\n*********\n\nLeon looked at his reflection in the mirror and was satisfied with what he saw. Of the three boys, he had been the one who had inherited their father's height that had been just shy of six feet two inches, his looks and his drive. He ran a brush over his closely cropped hair, gave himself a final check and left the bathroom. \n\nLike Gene, he checked to make sure that the power was off but didn't unplug anything. The last thing he grabbed before his bags was his laptop. He set the security alarm and went to the manager's office where Barry who was the manager/owner of the apartment building and his friend waited for him.\n\n\"All set?\" Barry asked as he closed out whatever program he had been working on.\"\n\n\"Ready and I appreciate the ride.\" Leon replied.\n\n\"It's no problem. I wasn't doing anything anyway.\"\n\n\"Where are Nancy and the kids?\" Leon asked as they walked to the car.\n\n\"They went to see some animated movie. I'm meeting them for pizza afterwards.\" he replied. \"So some guy finally snatched Lou up huh?\"\n\n\"It appears so.\" Leon replied.\n\n\"Lucky man.\" Barry muttered.\n\n\"Yeah he is.\" Leon agreed while giving Barry a curious look. \n\n\"She's a real sweetheart, if I had been single; I would have gone for her myself.\" Barry said.\n\n\"And I would have had to have kicked your ass.\" Leon said only half joking.\n\nWisely, Barry dropped the subject of him and Louise.\n\n\"So who's the lucky guy?\" he asked.\n\n\"Nathan Sinclaire.\"\n\nBarry stopped walking.\n\n\"Who did you just say?\" he asked.\n\n\"Nathan Sinclaire and yes I know who he is.\" Leon said before Barry could ask.\n\n\"Holy shit!\" Barry exclaimed. \"Do you think....\"\n\n\"No I'm not going to give him your phone number.\" Leon interrupted.\n\n\"Come on Leon, I've been trying to get to this guy for years! One word from you and it could happen.\"\n\n\"Alright, here's what I'll do,\" Leon said, \"and you can take it or leave it. If he asks if I know of anyone who would be worth considering for a project, I'll give him your name and number what happens after that is up to him.\"\n\n\"Thanks man! Now let's get you to the airport!\"\n\n*********\n\nThey all arrived at the airport within minutes of each other with Juliette arriving first. Wanda was the first to see a man standing by the entrance of the terminal with a big sign with their name on it in big block letters.\n\n\"Look mom! Someone's waiting for us!\"\n\nThe man smiled and nodded when he saw Wanda looking at him and approached the cab.\n\n\"Miss Yancy? My name is Jonas and I'm here to escort you and your family to the jet.\"\n\n\"Are you a pilot?\" Victor asked.\n\n\"No I'm not but I know the pilot. Perhaps I can convince him to let you see the cockpit of the jet.\" Jonas replied.\n\n\"Mom! Did you hear that?\" he asked excitedly.\n\n\"I heard and what do you say?\" Juliette asked.\n\n\"Oh... sorry... Thank you.\"\n\nGene arrived next and then Leon.\n\n\"Are all of you here?\" Jonas asked.\n\n\"Yes.\" Leon replied.\n\nJonas looked behind him and nodded. A few seconds later, someone came out with a cart for their luggage.\n\n\"Follow me please.\" Jonas said and walked away.\n\n\"Come on baby girl.\" Leon said to Celeste and picked her up. \n\nCeleste wrapped her arms around Leon's neck and hung on tight. A tear ran down her face as she felt a peace that she hadn't felt since Louise left surrounded her.\n\n*****************************\n\n\"Are the rooms ready?\" Kevyn asked Hans during a final check.\n\n\"They are and I took the liberty of putting another refrigerator in the suite where the children will be staying.\"\n\n\"Thanks, I hadn't thought about that.\" Kevyn said.\n\n\"No worries.\" Hans said. \"I know how children get hungry for sweets and things like that. I also made sure to remove any alcohol out of all of the rooms as well. One can't be too careful where little ones are concerned.\"\n\n\"Jeez Hans you're awesome! Thank you!\" Kevyn replied.\n\n\"Is there anything else that I need to be aware of?\" Hans asked.\n\n\"No, I think that you've covered all of the bases. We'll call you when we leave the airport... oh and the banquet room is ready?\"\n\n\"Yes and with everything that you requested. I'll be awaiting your call.\"\n\n*********\n\nBarb got dressed and waited for the car that Kevyn and Patrick sent for her. She was surprised at the gesture and the offer of a room at the hotel. Instead of accepting the offer, she made snide comments.\n\n\"What floor is it on this time? What's the food budget? Fifty dollars?\"\n\nShe knew that she shouldn't have said it but she couldn't help herself. She knew that she was pushing her luck when she heard the tone of Kevyn's voice.\n\n\"Look Barb.\" Kevyn said. \"This is supposed to be a happy time and I don't want your shitty attitude ruining it so you have a choice, stay your ass home or come. But if you come, behave because if you don't I swear to god I'll kick your ass are we clear? Now, are you coming or not?\"\n\n\"I'm coming.\" Barb said.\n\n\"Fine and remember what I said.\" Kevyn said and hung up.\n\nThat conversation took place almost two weeks ago and she hadn't spoken to Louise or Kevyn until today when she called Louise to talk about the plans for the evening. \n\n\"Is everything set?\" she asked.\n\n\"It is and I even made bread for everyone. I made the kind with cheese in it and added a little jalapeno pepper in it for you.\" Louise replied.\n\nBarb swallowed hard. Louise was still the sweet, kind sister that she had always been even after everything that she had done.\n\n\"Thank you, that was sweet of you... did you put my name on it? You know how Leon is about spicy foods.\"\n\n\"I sure did.\" Louise replied laughing. \"I even put extra jalapeno in his. Barb...\"\n\nBarb braced herself for the admonishment to behave.\n\n\"What?\" she asked her defenses already up.\n\n\"I'm glad that you're coming.\"\n\n\"I'll see you later.\" Barb said and hung up surprised that she hadn't made a smart assed comment. \n\nAll was well until she got to the hotel. The driver helped her out and got her bags for her. As soon as she stepped through the door, jealousy reared its ugly head. She saw Hans at the desk checking in a guest, walked over and waited her turn.\n\n\"Mrs. Simpson!\" he greeted. \"You're the first one here.\"\n\nInstead of greeting him, Barb gave him an irritated look.\n\n\"So am I in the same little room as before?\"\n\n\"No.\" Hans replied his tone cool.\n\n\"All of you will be staying in suites and will have full privileges and use of the spa services.\"\n\n\"How nice... what about food?\" Barb asked.\n\nHans looked at the beautiful but ugly woman in front of him and once again thanked the fates that she was no longer his.\n\n\"Everything is arranged.\" he said. \"There is a buffet set up in the banquet room that you may help yourself to. Ollie will take your things to your suite if you like.\"\n\n\"Fine.\" Barb said.\n\n\"I'll call him...\"\n\nHans stopped mid sentence when he heard the voices of children and then the voice of someone admonishing them to be quiet. He swallowed hard as the voices got closer forgetting that Barb was standing in front of him.\n\n\"Hey! Earth to Hans!\" Barb said tersely.\n\nHowever, he wasn't paying attention to her. His eyes were riveted across the lobby where a group of people were approaching the desk. His gray eyes fastened onto one figure in particular who was holding the hand of an exuberant little boy.\n\nBarb had stopped speaking and turned to see what had captured Hans' attention. All she saw was her family approaching and didn't understand at first what or who he was looking at. Anger flared when she finally saw who had drawn Hans' attention.\n\nJuliette. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "louise",
        "barb",
        "kevyn",
        "yancy's"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-11"
}