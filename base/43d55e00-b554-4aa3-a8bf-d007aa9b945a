{
    "title": "New Kahala",
    "pages": [
        "Sequel to \n\nDear reader. This is set in Australia. We spell colour, with a 'u'. We have arses. We are sometimes arses. OK, most of the time we are arses. 'Shit' is one of our most versatile words. 'Fuck' is punctuation and sometimes 'Cunt' is a diminutive sobriquet. \"Naw, lookit the little cunt.\" I'm sorry in advance for the legwork you may have to do to google search 'Ozzy slang'. \n\nThis also follows my recent entry in the Valentines Day comp, . There is sex. But if you're here for a wank, try a more, \"I never thought this would happen to me\" story.\n\nAnd thankyou so much for caring about one of my characters, \"Trina\" as much as I did when I wrote her. Here is her story.\n\nI reserve all the usual publishing rights and all characters are fictional, all persons consenting adults.\n\nFor my wifey who insisted that Trina deserved happiness.\n\n*\n\nSomewhere back in your sheltered eyes I see a secret garden.\n\nAround a cottage long since lived in, flowers scream their Technicolor rage.\n\nTwisted trellises torture roses and a pissing-boy fountain fills with your tears.\n\nA pathway bleeds from a wound in the open front door\n\nAnd inside, tables and chairs lie where you kicked them;\n\nOrnaments litter the floor.\n\nMumbles of lies and secret violations echo from the trust-spattered walls,\n\nAnd I wonder....\n\nDo you ever come back and sit by the fountain,\n\nbury your feet in the never-mown grass and wish\n\nthat spring would someday return\n\nto the garden inside of your heart?\n\nHAPPY EVER AFTER\n\nIt's been a fucking long week. One of those weeks where I've made too many withdrawals and too few deposits into the relationship bank. Sasha is understanding. She had a week like that a fortnight ago with one of her big cases. Walking home from work I stop in the mall and pick up some flowers from a little shop.\n\nShe loves daisies.\n\nSix months ago, I didn't know that. All I knew was I liked her a shit-tonne, she was dynamite in the sack and fucking stupid enough to want to share it with a clown like me. Now I know all sorts of things.\n\nI know sometimes she goes quiet and it's not because she's angry. It's because she's day-dreaming. Dream building, creating a future in her head or simply just enjoying the peace and wonder that she's experiencing. Her favourite colour is pink. Dogs not cats. All sorts of tiny details too and I love them all.\n\nWe started using the \"L\" word a few months ago. A lot. I feel it too. A lot. She's my thing and I'm her thing. Two parts to a puzzle that didn't make sense until we got them together. And trust me, we get our parts together as often and as furiously as we can.\n\nLife and work conspire to keep us busy and tired, like they do to most couples. It's hard to reconcile our need for each other and our availability and sometimes it spills over into jealousy. Not ridiculous accusations or suspicion but jealousy for others demands on our time. Our disappointment is usually turned inward with genuine feelings of loss instead of damaging feelings of neglect. It's the cost of being with someone you love and still respect on an intellectual level. Someone whose career is as important to you as it is to them.\n\nIt's still hard though. Like tonight. My heart burns to see her and my mouth swarms with words that I haven't been able to tell her because she's been in Townsville all week with a rape trial. She'll probably be asleep when I get home. Sasha says she never sleeps well when she's away and every time she gets home, she stretches on the bed we share and falls asleep, savouring the remembered smell of us; sometimes even in the clothes she flew in.\n\nThis week I was swamped too. Bogged down in bloody spreadsheets and dodgy cheap accounting software trying to unravel three years' worth of embezzlement. I worked too late, missed her calls, missed her and felt like shit. I hope she's still awake when I get home.\n\nThere's a busker in the mall with a small crowd of onlookers. I hear the music lilting over the bustle and noise of people. It's one Sasha's favourites. \"Beautiful Wreck\" by Shawn Mullins. I jockey through the people and lean against a storefront listening to the boy crucify it enthusiastically. When he's done, I flip a gold coin in his guitar case and glancing sideways I see a jeweller's display.\n\nDo you believe in signs? I've always struggled with the concept that a higher power is leading us somewhere. But there in the display case is the most beautiful ring I've ever seen. It's pink and shaped like a small heart. Why have I never bought her jewellery?\n\nAt the unit I untie my shoes and slip them off. This is another of life's sheer pleasures. Stretching my toes and clearing my throat I call, \"Home darlin.\"\n\nThere's no answer and peeking around the closed bedroom door a snuggled mess of dark hair and perfect curves lies naked on the bed. There's a note on the bed near her feet, \"Wake me up roughly. I've missed you.\"\n\nSo inspired, showering takes me all of a minute. Drying off, maybe thirty seconds and getting to the bedroom less than three. My weight on the bed alone is enough to rouse her and sleepy eyed, she smiles and pushes me down to mount me.\n\n\"Fucking far too fucking long.\" She growls as she works me into her slowly; advancing and retreating until her lubrication welcomes me to the hilt.\n\n\"Far too long.\" She groans and works her hips to a rapid and sharp orgasm, then slumps back against the bed. I slip from her and hustle to reclaim my prize. Kissing her gorgeous lips, I press insistently inside her and buck my way in short succession to a hurried repossession of our union. All too quickly I cum inside her and fall away myself.\n\n\"Hey.\" I cradle her face with my hands.\n\n\"Gidday idiot.\" She dimples at me.\n\n\"Love ya.\"\n\n\"Hold me tight, I'm really fucked.\"\n\n\"Well...\"\n\nShe punches my shoulder and snuggles off to sleep again.\n\nAt the first hints of drool and snoring I rise and find food. We've reached that stage of partnership where bodily functions lose their surprise, but we still try to fart privately.\n\nSitting on the couch watching drivel on the telly, I can see her through the open door and only close it when Mum and Dad come home after dinner. Deprived of my favourite view, I take some bourbon to the balcony and stare out over the city.\n\nLife is good. Once that would have worried me with thoughts of sudden downfalls, but this seems to be my new normal. My happy ever after.\n\nIt's not a fairy tale any more. There are bills and responsibilities and interruptions and sickness and all the usual ways that life tries to fuck you in the arse but I'm really quite content. Not new lover happy but real-life content. We display our love socially and include our friends in our new 'normal', not frightened any longer by its fragility.\n\nTrina worries Sasha when she's away and I sleep over now and then. Going to their Strathpine duplex and hanging out with the little enigma sort of works for me too when I'm missing Sasha. Trina is a playful distraction and I can sleep better in Sasha's bed with the smell of her skin still on the pillows. We share our memories of Sasha and Trina fills me in on just enough grotty secrets to embarrass the fuck out of Sasha when I get the chance.\n\nShe's started growing her hair too and looks cute in a tom-boy sort of honey blonde way. Her bob cut locks curl wildly and frame her precocious face with hints of femininity that I think she struggles to contain. Most of the time she has it tied tersely in a hair band or squarely kept under a cap but sometimes when she thinks no one is looking (me included) it gets away from her.\n\nIt's good to see her looking happier too. Sometimes dark things trouble her; I've no idea what and Sasha just shrugs and says, \"don't ask.\" But generally, she seems to share our new happiness and loves when we include her in our lazy, much less frantic now, kind of unplanned dates.\n\nThe following day is Friday and in a silly way, I still get excited for our standing lunch date. Today is my turn to grab coffee and treats so I leave the office to visit the little coffee shop nearby. On the way, I pass the jewellers where the busker was yesterday and, on a whim, decide to inquire about the pretty ring in the window.\n\n\"Who's the lucky woman?\" asks the jeweller. \"Must be pretty special.\"\n\n\"Oh... girlfriend, she is special.\"\n\n\"Well you must be feeling pretty nervous.\"\n\n\"Oh? Why's that?\"\n\nThe jeweller passed me the trinket and I turn it carefully in my hands. Thousands of tiny lights twinkle in the faceted pink stone.\n\n\"I remember asking my own wife to marry me. I was terrified she'd say no.\"\n\n\"Ah.\" Now I understand, \"No, I was just looking for a gift.\"\n\n\"Ahuh. Well perhaps you'd like to consider some other items.\"\n\n\"No, I like this.\"\n\n\"It is quite a special ring. I admire your taste for fine jewellery. Sir, that is three quarters of a carat of vivid Pink diamond. Perhaps one of the created sapphires if you are drawn to the colour would be more affordable as a gift. That stone alone is valued at around thirty thousand dollars and set in platinum like that, well we're asking thirty-four, nine ninety-nine. It was a one-off design that the buyer defaulted upon.\"\n\n\"Holy shit.\" And I almost drop the thing I'm so frightened by its value.\n\nHe smiles understandingly at me and holds out the box for me to return the ring.\n\n\"Well. Thank you. I'll need to re-consider things.\" I'm a little embarrassed and smiling awkwardly I leave to fetch coffee and cheesecake.\n\nSasha rambles about the rape case and her stay in Townsville while she drinks her coffee and takes hungry spoonful's of her cheesecake. Her honey brown eyes dance on mine occasionally and her dimples catch me staring.\n\n\"What?\" she asks between mouthfuls, \"You okay?\"\n\nIt's been almost eight months since that Valentine's date, far too soon for the things I'm thinking and caught off guard I blush. \"Nothing. Just thinking about some things.\"\n\n\"Anything kinky?\" she asks cheekily.\n\n\"Well now I am.\"\n\n\"You're insatiable mister.\" She giggles.\n\n\"Are you complaining?\"\n\n\"Hell no.\" And then like we do more and more these days we slip into comfortable silence, just satisfied with each other's presence.\n\nI wonder, as I watch her eating and flicking through the newspaper what she'd say if I proposed. We practically live together but keep separate houses. Through the week she stays at the unit with my parents and I and on weekends we're very seldom apart. Usually we take Trina up to the farm but on weekends when either of us has commitments in town we stay at her place.\n\n\"You're staring at me again.\" She tells me suspiciously.\n\n\"You're beautiful.\"\n\n\"I know right.\" She laughs, \"This silly bloke I know keeps telling me.\"\n\nNot in the next few days, but the time will come. I check my savings account while we lunch, then log into my portfolio.\n\n\"Well my lover, I'm back to the grindstone. Will you be coming over tonight, or picking me up in the morning?\" The sultry look she fixes me with leaves no question about it.\n\n\"I'll bring pizza and beer.\"\n\n\"You're so easy.\" She smiles victoriously.\n\nWe kiss and she leaves.\n\nBack at my laptop I drop some stock and watch as it sells quickly and later on, I walk out of the quite surprised jeweller's store with a very different investment in my pocket. The little hard box taps against my thigh with each step and fills me with nervous excitement for when the right day comes and terror that I'll be mugged before I make it home. As I unlock the small gun safe in the unit and slide the box in beside my Glock 35, I wonder if I'll ever have the balls or the opportunity to propose. Knowing Sasha, she'll get around to it before I do.\n\nOn the drive to her Strathpine unit I'm stopped for a random breath test and as I blow in the tube for the nice young lady cop, I can picture Sasha in a uniform. We'll have to try that out sometime and I make a mental note to ask if she still has any uniforms.\n\nDomino's is busy and it takes about fifteen, twenty minutes for them to cook the two pizzas. One is ham and pineapple with jalapeno's for Sasha and the other is seafood with extra anchovy. I'll eat both but Sasha won't touch the anchovies and Trina won't touch the jalapeno's. Two garlic bread and a bottle of coke complete the meal.\n\nDelia, my Statesman De-Ville, smells like an Italian feast for the remaining ten-minute drive and I'm salivating like Pavlov's pups by the time I pull into the drive of the little duplex Sasha owns. Trina is in the yard swinging a whipper-snipper like the grim reaper harvesting the grassy souls of the garden edges.\n\n\"Pizza Boy is here!\" she yells over the two-stroke noise and shutting it down she crosses the lawn to give me a sweaty hug and a kiss on the cheek. \"Good to see you stranger.\"\n\n\"Same Kitty-Kat.\" It's been a couple of weeks.\n\n\"Sassy is in the pool. Pop that in the oven and join her. It's fucken hot. Soon as I'm done, I'll take a shower and find ya's.\"\n\nSo I do. I pop the cardboard pizza boxes and the al-foiled garlic bread in the oven at 80C to keep it warm and take two bourbon and cola cans out to the pool area where I strip to my undies and bomb dive into the sheer bliss of cool water.\n\n\"Fucking arsehole! Look at my fucking phone. Fuck me.\" Sasha growls at me wiping her phone on a towel and scowling with a smirk. \"Get over here.\"\n\nSo I do that too and love the sloppy tongue filled connection of happy face and sweet smelling mouth and woman that I know.\n\nSighing she pulls away, \"Such a fucking long week. Love you idiot.\"\n\n\"Love you too.\"\n\nThen we're both surprised by, \"Gross. Yuck. Can you two just like 'not fuck' for a few minutes please? I want to get in there before you mank it up with lovey stuff. I'm HOT!\"\n\nTrina stands poolside in her usual black one-piece.\n\nSasha blushes but I give it back, \"I don't know about 'hot', maybe I'd stretch to pretty. Maybe just 'sweet' like a Kit-Kat.\" Kit-Kat is a brand of chocolate covered wafers, it's also the nickname I've settled on for her after learning her name is really Katarina. It's half truth, half tease. She hates the girly attention thing. As her hair has grown and she's relaxed around me she is really starting to look more... well more... girly; attractive kind of girly.\n\nAnd there it is, a deep Bronco's maroon flush to her pretty little face. For a moment, her blue eyes are almost purple.\n\n\"Stop it Jimmy.\" Sasha tells me, \"Don't be an arsehole. Now, I was kissing you mister, get back here and stop perving on my big sister.\"\n\nLater as we eat pizza in the balmy December evening air, I become aware that Trina is watching me very closely. Not staring but constantly watching whenever she can.\n\n\"What Kitty-Kat? What's bothering you?\" I ask her and Sasha turns her face in question too.\n\nTrina stands and leans on her hands on the table her attention turned completely now to Sasha and in a trembling voice peppered with low menace she says, \"You have until Monday to tell him bitch. Then I will.\"\n\nThere are tears in her eyes as she tidies up the empty boxes and takes them off inside.\n\n\"What was that about?\" I ask and Sasha's eyes drop in sadness.\n\n\"Don't worry for now, we'll talk this weekend. Work stuff.\" There is mystery tainted with sorrow in her voice and her eyes are far away for a few moments. \"Hey Jimmy?\"\n\n\"What?\"\n\n\"I always wanted to do it in the pool. Fancy some skinny dipping?\"\n\n\"Last one in is a rotten egg.\"\n\nI chase the giggles through the dark.\n\nWINTER IS COMING\n\nSasha has been working with Dad on something or other all weekend, so we've taken the opportunity to get a bit more work done on the F350. Presently, we're wire framing the inner guards on Effie, Trina and I. To fit the big block motor, we've had to cut out the original wheel wells. Now with the front springs out we turn the wheels through their full movement and tack weld wire to mark the range of free movement required. Later I'll have Dad roll a one mil sheet to the shape of the wire frame and I'll weld it into the guards.\n\n\"Think that'll do it Kitty-Kat.\" I wipe my hands on a cloth and lean against the driver's door where Trina sits holding the wheel. \"Time for lunch?\"\n\nLooking up through her fringe with those purple blue eyes she gifts me a lopsided grin and nods. There's a fridge in the shed near the door. I grab two beers and the sandwiches Mum made this morning and we sit on the tailgate of the ute and eat in silence. A lot of what Trina and I do is done in silence. She has an uncanny way of knowing what I need before I ask and I guess we work a bit like Dad and I do, communicating in shorthand with looks and gestures.\n\nWe're startled by a noise behind us and looking to the roller doors I see Sasha leaning against the door frame smiling at us.\n\n\"My two favourite people in the world.\" She says with tears on her cheeks.\n\n\"I guess that's my cue.\" Trina says and leans up to kiss my cheek. \"I'll leave you two alone.\"\n\n\"What's?..\" I ask not really knowing what to ask but knowing something is up.\n\nTrina walks toward the garage door stopping only long enough to give Sasha a meaningful glare before she leaves towards the house.\n\n\"What's this?\" I turn the envelope over and search for clues. Sasha wipes her eyes and sits beside me.\n\n\"Just open it.\"\n\nTaking the stapled pages from the envelope I read the first few paragraphs slowly.\n\nContractual agreement between Royce, O'Sullivan and Bourke Pty Ltd (hereinafter 'the firm') and Sasha Louise O'Sullivan regarding tuition, retainer and tenure subject to terms and conditions as regards:- \n\n<ol type=\"1\">\n\n<li>\n\nOne year full time LLM International and Transnational Criminal Law, Amsterdam Graduate School of Law.\n\n</li>\n\n<li>\n\nOne year internship UNICEF Manhattan, New York City.\n\n</li>\n\n<li>\n\nAll expenses, travel and yearly retainer equivalent to current salary financed by the firm conditional upon satisfactory completion of study.\n\n</li>\n\n<li>\n\nFive year minimum tenure to the firm upon completion of studies.\n\n</li>\n\n</ol>\n\nConditional requirements:-\n\nMy heart is in my throat. \"You're crying because you've accepted this aren't you?\"\n\nSasha nods.\n\nMy feet move and my mouth won't work. I just look at her with welling eyes and walk. I'm not sure where I'm going until I find the end of the little jetty and sit. I don't sit because I want to. I sit because I can no longer see and my feet don't feel trustworthy. Sasha's footsteps echo along the wooden planks and for the first time since I've known her, I wish she wasn't there. She sits beside me and hands me a beer.\n\nHer tears stopped long ago and the beer ran out too but it's sunset by the time my tongue works.\n\n\"So what happens now?\"\n\n\"Oh god Jim, I don't know.\" She puts an arm around me and it feels awkward. \"If you asked me to stay...\"\n\n\"I can't. You know that.\"\n\n\"I know. Part of me wishes you could.\"\n\n\"It's just chance in a lifetime stuff.\"\n\nShe nods and starts crying again.\n\n\"When?\" My mouth asks the question my heart dreads.\n\n\"January sixteenth.\"\n\n\"So soon.\"\n\n\"Hold me Jimmy, I'm broken inside.\"\n\nI'm not usually an overtly emotional sort of man but when I look at her eventually, I break all over again and we sit there crying in each other's arms for far too long until mosquitoes and hunger lead us eventually back to the house. Mum is waiting on the verandah watching us walk back and her red eyes tell me that once again I am the last to have known.\n\nDinner that night is solemn. The only thing worse than the leaden weight in my chest is the reek of empathy around the table. Later when we make love it's like the first and the last time. Like I want to memorise every inch of her and savour it, commit it permanently to memory. When she bucks and shudders on me, she is crying, sobbing against my chest and moving me inside her. My chest is wet with her tears, my body wet with sweat and the love we've made. It's like our bodies are crying in pain. Sasha sleeps but I watch her long into the night before I slip into hollow dreams beside her.",
        "The drive to work on Monday is quiet. I guess everyone is navigating their own grief. Mine seems to have settled in my stomach like an anchor. For the first time in a very long time I am grateful for the distraction of work. Nesting in the mountain of paperwork, I feel safe. But only for moments. Sasha finds me just on five o'clock. She busts through my door crying and tackles me in a needy embrace.\n\n\"I'm fucking angry and I don't know why Jim.\"\n\n\"Grief darlin.\"\n\n\"I know that, I just don't like it.\" She sobs against my neck. \"Take me to the range.\"\n\nWe'd taken up target shooting as a kind of couple's hobby. Sasha had years of pistol training and has got me to the point where I can almost group as well as her. The suggestion suddenly seems like a wonderful idea. I'm angry too. I'm angry at the universe. I'm angry that I can't fix Sasha's pain. I'm angry that I can't change this whole thing. At the unit as I open the safe and take out our pistols. I'm not angry any more.\n\nA little blue box reminds me all over again and I fight off tears as I change my clothes and meet Sasha back down at the car. She sees straight through me and wraps me in her arms. When I settle again, she asks, \"Are you able to do this? If it's too painful we can just do it like a band-aid.\"\n\n\"Like a band-aid?\"\n\n\"Just split. Just do it now so we don't have to spend every day thinking about it ending soon.\"\n\n\"Does it have to end?\"\n\n\"Two years is a long time Jimmy.\"\n\n\"I don't want anyone... I could-\"\n\n\"We can promise each other all sorts of things but neither of us knows the future.\"\n\n\"Fuck it. Fuck it all.\" I'm angry again. \"This isn't a great idea. The guns I mean.\"\n\n\"Take me upstairs and fuck me Jimmy.\"\n\nThe elevator ride is frantic but kept only nearly decent by the threat of the doors opening. When we make my bedroom, I'm wearing only my shirt and Sasha only a grin and the bag containing guns and ammo. She pushes me back onto the bed and smiles, \"Just gonna put these guns away, you know 'safe sex' and all. Don't want any UD's.\"\n\nI'm pulling my shirt off when I hear her scream. She is kneeling on the floor crying like she's just been gut punched.\n\nHolding a small, open, blue box.\n\nWhen she eventually settles in my arms and her body has shed its own weight in tears, she looks up at me and says, \"I would have said yes.\"\n\n\"I know.\"\n\nWe fuck. It's leisurely and sad. I've never had a sad fuck before, but I have now. Our bodies are moving in each other and our grief combines us in sorrowed need. There are no tears just a deep acknowledgement of each other's need for intimate connection. And in that intimate connection the knowledge that it will end. If I never have a sad fuck again, I'll die happy.\n\nLater, there is a knock at the door and I call, \"Decent, come in.\"\n\n\"Sasha, Jim.\" Dad is using his best barrister baritone. \"Tidy up, come have tea. We need to talk.\"\n\nMum's made roast chicken and enough vegies for twelve people. It's like some kind of 'last supper'.\n\n\"So, kids.\" Dad begins putting his fork down and arranging it carefully while he thinks, \"I've been talking to Garry and Neil. We can't have you pair moping around the office for the next month. Effective immediately you are both suspended on full pay.\"\n\n\"Dad... It's not-\"\n\n\"Jim, it's done. Enjoy Christmas, New Year's Eve, whatever. Go on a holiday. Just don't come near the bloody building or I'll have you both thrown out.\"\n\nWhen he takes that tone you just comply.\n\nDARKNESS\n\nMy Aunt died from cancer when I was a teenager. Because of my age I wasn't privy to the details but I remember watching my Uncle through the months between her diagnosis and her death. He was a model of dignity, always there for her and always thinking of her pain and not his own. Part denial, part savouring every good moment, part letting go, it was like he was moving through the grief process before she left. It was only at her funeral that he was able to fall apart and feel for himself.\n\nThose last few weeks with Sasha were a lot like that. We held ourselves together, each for the other. Sometimes we failed. I remember one night when we were sitting by the pool feeling sorry for ourselves, I saw Trina in the kitchen and my heart broke afresh.\n\nShe was standing staring at nothing and I could tell by the way her chest racked with sobs that she was crying. Nudging Sasha I pointed and said, \"Go to her.\"\n\n\"No Jimmy. You. You are going to have to be here for her. You'll be all she has when I'm gone.\"\n\nGreat, now I had two crying women. Sasha pushed me gently, urging me to go so I did. I had no words for Trina, but we shared the same grief. So, when I found her in the kitchen, she welcomed my arms around her and sobbed into my chest.\n\n\"I hate you Jim.\" She told me in a voice that rose with fury. \"Why can't you stop her? Why won't you try? She'll be gone and then you'll be gone, and then it will just be me. You're all leaving me. And I need you.\"\n\n\"Shh.\" I held her and kissed the top of her curly head. \"Shh. She'll come home one day. Until then you'll just have to put up with that dickhead who uses you for slave labour on his F truck.\"\n\n\"Arsehole.\"\n\n\"Bitch.\"\n\n\"Jim?\" She untangles herself. \"Will you leave me too?\"\n\n\"No Kitty-Kat. I'm gonna need you I think.\"\n\n\"Good.\"\n\n\"You'll be sick of me in no time.\"\n\n\"I'm sick of you already dickhead. Want me to order pizza?\"\n\n\"Sounds good.\"\n\n\"Now fuck off. I'm embarrassed about being all sooky. Go. Fuck off.\"\n\nThere were a lot of those moments when one or more of us fell apart. Hell, there were even times we all sat and moped like fucking muppets. But there were also a lot of times when we tried to squeeze as much joy as possible from the moment.\n\nWith both of us effectively on holidays for a month we spent every day trying to fill it with memories. We dragged Trina along whenever possible, but she was still working so we made 'dates' with her for the weekends. Ice-creams and beaches seemed to fill her need for normality.\n\nOne evening after a long day of swimming and making love, Sasha and I were almost asleep when the door opened to let a crying Trina in.\n\n\"Come on Trinie.\" Sasha said and lifted her sheets to let her in for a cuddle.\n\nThen one day it all finished. One day with red eyes and broken hearts Trina and I stood in the international departures lounge and watched a plane take off with both our hearts on board.\n\nJust like that.\n\nWe drove home in stony silence, alone with our grief. It was only ten in the morning when I dropped Trina off at the empty duplex.\n\n\"Hey dickhead?\"\n\n\"Yeah?\"\n\n\"Hang out for a while?\" Her bloodshot blue eyes implored me, \"Just be around for a bit?\"\n\nThere is a hollowness to spaces when someone who used to fill them with their personality is no longer there; a tangible wake left by their movement away, and we both felt it that afternoon and many more afterward. Before I left that day, Trina had another of those teary moments and sniffled against my chest as we watched kid's afternoon TV.\n\n\"I am going to be a fucking pain in the arse.\"\n\n\"Never...\"\n\n\"Sarcastic arsehole.\" She handed me her phone. \"I'm going to need you now and then. Put your number in. I promise not to spam you but sometimes I'll need an ear ok?\"\n\n\"Any time Kitty-Kat. Any time at all.\" I hand her my phone. \"Besides, we still got Effie to finish, you and I.\"\n\n\"True dickhead.\" For a moment her eyes look lavender and there is a hint of a sad smile on her lips.\n\nThe first month felt surreal. It was like I thought she was just in the next room or gone to the shops, temporarily absent, not thousands of miles away over the sea. Countless times I turned to tell her something or reached for my phone to ring her. On Fridays I still expect the door to open and for her to march in with coffee and cake.\n\nI've spoken to her a few times. The time difference and her busy schedule makes it difficult. She calls me on the weekend, usually around six o'clock at night which is just after eight in the morning for her. She cried at the end of each call and told me she missed me but what I took mostly from those calls was the wonder and adventure that she was feeling.\n\nIt hurt to speak with her but it helped to hear that her studies fascinated her and she sounded genuinely excited for the learning. At least that felt like she had done the right thing. Each time she called I broke again. I'd have just reassembled my world, thrown myself into work, or found a distraction when she'd call and the wound would open again.\n\nOne Sunday in mid-February Sasha rang to wish me a happy late Valentines Day and we laughed and reminisced about our Valentines date the previous year. When we finished that phone call, I asked her not to ring again. It hurt too much. She understood, saying that every phone call left her disoriented for days. We agreed to stick to occasional facebook messages and for the most part that worked.\n\nIt was still a little bit of a sting to see the chat head picture of her pop up on my phone but at least I could wait until I was prepared emotionally to open it and hear about her study or her touristy exploits. She kept in phone contact with Trina though and quizzed her about me.\n\nOn the weekend before Saint Patricks day Trina helps me load Effie on the farm truck. We've got her to driving stage and now she's off to visit Blue for a lick of paint. She still has no interior but sitting on a fold up camping chair, Trina grins from ear to ear as she turns the key and presses the starter button.\n\nThe big 460 chugs over on the starter then coughs into life. Trina rolls the ute up the loading ramp at an idle and I guide her onto the tray.\n\n\"Fucking hell dickhead, the sound of that motor is enough to give me a boner and I don't even have a dick.\"\n\n\"Pretty girl like you could have as many dicks as she wanted. Besides, I'm told I've got two of them and they're both rock solid.\"\n\nShe's blushing for some reason. I didn't think there was any innuendo in my attempt at humour.\n\n\"I don't really think you're a dickhead. It's just got to be like a habit. I'll try to change it.\"\n\n\"You could go with cock-womble. What about jizz-trumpet?\"\n\nLaughter seems to help. We spend a lot of our time trying to find something to laugh at. She has an eclectic sense of humour and on weekends while we work on my F350 or sometimes when we go for an ice-cream and a walk on the beach, she surprises me with her intelligent irony. She always has a funny story from the day care centre and we sort of feed off each other's banter.\n\n\"Cock-womble? It has a ring to it...\" She giggles.\n\nSasha's messages these days seem to gravitate to questions about Trina. How she's doing with work, whether she is happy, have I seen her lately, am I trying to include her and keep her busy. Fuck, anyone would think that she'd left Trina, not me. I'm not complaining, it's not a chore. The little minx is a lot of mischievous fun and quiet mystery.\n\nThere are lots of things I'm learning about her. She doesn't like me calling her \"Kitty-Kat\" for example. Her father used to call her \"Katty\". So, I've dropped the 'Kat' and stuck with 'Kitty'. It suits her. She's like a little Kitten. Loves affection one moment, wants to scratch you the next. And she carries herself with a strange aloofness that I still don't understand.\n\n\"Give it.\" She gestures at me, \"Keys Jim.\"\n\n\"Really? You have to drive everything?\" I hand her the keys to the truck. I learned soon after Sasha's departure that every trip to the farm was an opportunity for Trina to drive another piece of machinery. Apparently, her father taught her to use every implement they kept on the farm. Tractors, trucks, bikes, quads, you name it. Trina explained that her father grew up in a poor farming family and that women and men shared work equally.\n\nSo there you go. A day-care worker, who has a truck licence, swings the big old Dodge out onto the highway and brings us up through the four-speed box. It's a slow old girl and pretty thirsty with its fireball 318 and I watch the enjoyment spread across Trina's face as we bounce along the highway. Her wide full lips curl in a smile that goes all the way up over her high cheeks to her almond shaped eyes.\n\n\"What?\" She asks having caught me looking.\n\n\"Penny for your thoughts?\"\n\n\"Really? Right this moment?\" She wrinkles her nose.\n\n\"Yeah.\"\n\n\"Okay, but remember you asked dick- I mean, Jim.\"\n\nI shrug and she continues, \"Well, I've been taking vitamins this week. Good ones. Cost me around forty dollars. Been feeling a bit run down and well, when I piss it's bright yellow.\"\n\n\"Okay...\" I laugh at her. \"That's pretty normal you know.\"\n\n\"Yeah, I know but what I was thinking just now was, why yellow? If the chemists are so smart, why don't they make them so you can piss in different colours. Like each pill makes a different colour and you don't know what colour today is going to be. You'd be like looking back in the bowl each day going, 'wow cool, green' or 'ooh pretty, pink'.\"\n\n\"You're a fucking drongo.\" I tell her laughing, \"Red would be no good, I'd shit myself if I pissed red.\"\n\n\"Like what about rainbow coloured?\" She laughs, \"If someone was sad you could be all, 'here sad person, let me piss you a rainbow'.\" Her laugh is raucous like a sniggering donkey. It's not at all feminine but its bloody cute.\n\n\"I think you've been taking something stronger than vitamins Kitty. Remind me to be more careful if I ask what you're thinking in future.\"\n\n\"Scare myself sometimes Jim.\" And the smiles falls from her face almost audibly. \"Heard from Sassy?\"\n\n\"Oh... Just a couple of facebook messages.\"\n\n\"No phone calls?\"\n\n\"No. We stopped ringing. Too hard -- you know.\" I don't like talking about this stuff.\n\n\"She asks about you. How you're doing, what we're up to.\"\n\n\"Oh.\"\n\n\"I told her you seem to be coping by keeping yourself knee deep in cocaine and hookers. That seemed to shut her up.\"\n\n\"Harsh...\"\n\n\"Gives me the shits sometimes is all.\" She mocks Sasha's voice, \"Look after Jimmy for me. Make sure he keeps busy... Like you need some sort of god-damned baby-sitter.\"\n\n\"Sorry.\" She says a few moments later, \"No more ranting.\"\n\n\"I do appreciate your company you know, but don't feel like you're obliged.\"\n\n\"I know and I don't. I like the company too. Just... it's like she's the one who left, and she is trying to run our lives by remote control. She has no right to. Selfish bitch.\"\n\nWe drive in silence until we reach Kilcoy where we pull in to a service station for fuel. While Trina fills the truck, I wander around the service station taking in all the touristy knick-knacks. At the counter I pay for the fuel, a stuffed bigfoot and a packet of Winfield Blue cigarettes.\n\nBack at the Dodge, she hands me the keys. \"Can you drive for a while, Jim. I'm a little weary. Didn't sleep well last night.\"\n\nIn the cab, she sits against the window with her feet up on the bench seat fiddling with her phone. I have to shift her feet to plug my belt in, so I give her ankles a tickle while I'm at it.\n\n\"Hey,\" she giggles, \"Stop it dickhead.\"\n\n\"Hot date keep you up last night?\"\n\n\"As if... Nightmares. They're worse when I'm home alone.\"\n\nAn hour later as we pull up outside Blue and Denise's, I have to shake her gently to wake her. With all the noise of the truck and the bouncing she was still able to fall asleep with her head on the backrest and her legs stretched out and her tiny feet pressed into my thigh. Human contact was lovely. I didn't realise how much I'd missed it.\n\nI wander around to her side and open the door for her to step down. She stretches and yawns beside the truck.\n\n\"Blue! Kids are here!\" Denise yells from the front door.\n\n\"Gidday Denise.\" I wave and she meets us at the bottom of the stairs.\n\n\"Hello Jim, and I've told you before it's 'Mum' to you. That stupid daughter of mine left you, not me.\" Her arms fold around me and she hugs me tight.\n\n\"And look at you, Katerina...\" She plays with the curls either side of Trina's neck. \"So much like your mother. So beautiful. It's been too long.\"\n\n\"Stop fussing or I'll cut it off again.\" And she squirms under Denise's scrutiny.\n\n\"You need to eat better young lady. Come on inside I'll make afternoon tea. Jim, Blue's gone up the shed. Said for you to head up to the ramp and he'll help you unload.\"\n\n\"Thanks Mum.\"\n\nSasha's father Blue and her Down's Syndrome brother, Tony are waiting at the loading ramp and guide me back to it. It's a better set up than what we have at the farm, with a concrete face that I can snug right up against. I'm met with a firm handshake from Blue and the same from Tony.\n\n\"Now you've got a Ford Jim I have to shake your hand like a man. No hugging anymore.\"\n\n\"Okay Tony. I spose you won't want this then either if we're being all grown up.\" Handing him the bigfoot, I laugh as he breaks his no hugging rule then kisses me on the cheek.\n\nBlue is walking around the F350 inspecting the body work.\n\n\"Who did the lead wiping? No one does that anymore. Workplace health and safety would crack the shits and it's so time consuming.\"\n\n\"Ah, that would be Dad. He's a bit of a stick in the mud when it comes to panel-beating. Says bog might be quicker but it doesn't flex.\"\n\n\"Well he's right and he's pretty fucking good at his work too.\"\n\n\"His dad was a panel beater. Still got all Grandad's tools.\"\n\n\"Not much work in this for me Jim. Just prepsol and spray by the looks. Might just run an eye over some of your Dad's work but it looks good.\"\n\n\"I'll tell him you said so, Blue. He was worried about the patch job in the top of the windscreen. Had to cut a section about this big out. Then the section we welded in warped a little with the heat. Took him about an hour with the mallets to have it how he wanted it before he wiped it.\"\n\nBlue is running his hand along the bodywork in question.\n\n\"Nah, yeah. Can't even feel it from the top. Can't get work like this done anymore. So have you settled on your paint yet?\"\n\n\"I was hoping for some help with that Blue. I want the original mint green but these two samples are the closest mixes I can find.\"\n\nHe shakes the cans as I drive the F350 around into his paint booth where he stands with a screwdriver levering the tops off.\n\n\"Two-pack yeah?\" He asks and I nod in answer.\n\n\"You won't get the exact same colour with two-pack. The original paint was enamel. Carries the tint differently and dries slightly different in colour. The two-pack is more durable and doesn't chip or scratch quite so easily. Good paint but if you want original you'll need some of this.\"\n\nHe opens a cupboard and pulls out one of three twenty-litre tins.\n\n\"Factory enamel bases. Got em at auction when Geelong closed its doors. Bunch of old tints and such too. Leave it with me Jim. She'll roll out of here looking like it would have in the dealers once.\"\n\n\"Thanks Blue.\" I hand him the packet of cigarettes and he smiles at me shaking his head.\n\n\"Silly bitch... I told you to be careful of her. Come on, come and have a look at this.\"\n\nIn the rear of the larger shed where his cars are kept there is what looks like a small office. Blue takes a cigarette out of the packet and lights it, drawing greedily on it and exhaling a trail of smoke. He gestures at a shelf above the desk that is covered in trophies.\n\n\"They all yours?\" I ask believing them to be car show trophies but upon closer look, some have footballs, some swimming figures, a tennis trophy.\n\n\"There's two of Greg's up there. Kick-boxing trophies, but the rest are Sasha's. All her life she's been chasing the next big thing. She's been driven all her life. Everything seems to come so easy to her that she's always hungry for a new challenge. When we first met you, I was afraid you'd end up on the shelf one day too. And here we are.\"\n\nWe stand there, Blue and I. Him smoking and describing each of the wins that went with the trophies and me just listening and pondering whether I was just another trophy for the shelf. Not much of a fucking trophy I decided. And hey, I knew what I was doing all along, I did a fair bit of the pursuing and enjoyed a whole lot of the catching.",
        "\"Ah well. Come on mate, best get back down the house before they send a search party.\"\n\nCAN'T SEE FOR LOOKING\n\nTony leads us into the house saying, \"Mum, Jim got a Ford.\"\n\nDenise sits us at a gingham tableclothed spread of cold meats, fresh bread rolls and salads.\n\n\"Beer?\" Asks Blue.\n\n\"Um. Driving mate.\"\n\n\"You could stay tonight and head home in the morning.\" Denise suggests. \"You're always welcome.\"\n\n\"What do you think, Kitty?\" I ask Trina.\n\nOne of Denise's eyebrows makes a reach for the ceiling and she eyes me oddly upon hearing my nickname for Trina.\n\n\"I don't mind Jim. Actually, it would be good to go open up the old house and let some air through. There's always something needs doing there and I'm hardly ever home these days.\" Her eyes shine purple on mine as she speaks. Denise's eyes follow mine to Trina's then settle back on mine with a brief hint of a smile.\n\n\"Plenty of room Jim. Blue could use the company too. Since Greg's been back at work, he's minus a drinking buddy.\"\n\n\"Settled then.\" I tell them.\n\nAs Denise and Trina tidy the table after we've eaten, Blue and I discuss Effie.\n\n\"I tell you what those inner guards look shmick mate.\"\n\n\"Yeah, they leave a bit more room for the exhaust. I wanted extractors but it was still really cramped in there.\"\n\n\"Don't think you'll be short on ponies.\" He laughs. \"Hey did you keep the rubbers?\"\n\n\"Some spare ones in the bathroom cupboard if Jim needs rubbers.\" Denise calls from the kitchen and I look just in time to see Trina blushing furiously.\n\n\"Yeah, nah. I got all new ones. They're in the tray with the old Y block and the glass. Still got to pick up the interior. I keep forgetting.\"\n\n\"That old y-block might come in handy for a Mainline ute I've got up the back with a seized flat-head.\"\n\nDenise brings more beers from the kitchen and Trina announces she's off to the other house.\n\n\"Katerina darlin, why don't you take Jim with you. There're two boxes of wine in the laundry that are going to waste. Maybe he can carry them to the quad for you.\"\n\n\"What is it with you and driving? Control issues?\" I joke climbing onto the back of the Polaris quad.\n\n\"Shh. Hold on, the road gets a bit bumpy.\" So I put my hands around her waist. Leaning back, she says over her shoulder, \"Haha, stop groping me, I meant hold on to the rack.\"\n\n\"You love it.\" I leave my arms around her waist. The contact is nice. I can't see her face, but her neck is flushed as she thumbs the quad to life and drives us back down the main driveway to a side track back out at the gate. The side track follows the fence line down to a line of trees alongside a creek. Over an old bridge, the trees open up to another farm about the same size as Blue and Denise's.\n\n\"New Kahala.\" Trina tells me as we pull up at the wrought iron gate in a low flaky picket fence. \"This was Mum and Dad's place. Technically it's mine now but Blue and Denise run cattle on it to pay the rates for me. Laundry is under there.\n\nIt's a high set Queenslander style house that looks like it could use a lick of paint like the fence. Following Trina through the knee high lawn to the front stairs she stops and tells me, \"Find me upstairs when you're finished.\"\n\nUnderneath the house is concreted and there is one walled in area that I presume is the Laundry. I make my way between old mowers and two covered vehicles to the laundry and find the boxes as directed. Carting them one by one back out to the quad takes all of a few minutes. Trina's shoes are beside the open front door, so I sit on the top step and remove my own while looking out at the yard. From this higher vantage I can make out garden edges and rose bushes and a wisteria covered Arbor. Someone must have loved this garden very much.\n\nWhistling comes from deeper inside the house. When she's relaxed sometimes, like when we work on the F350 or walk on the beach she whistles to herself. Rooms branch off on both sides of the long hallway that runs straight through the house. I can see the back door from the front door. In what is obviously the living room my attention is drawn to photographs that cover the top of a fireplace mantel.\n\nI find a photograph of the most beautiful woman in a wedding gown. I know they say that every bride looks beautiful but that's just bullshit like saying there's no such thing as an ugly baby. This lady however looks like a fairy tale princess. She is tall and willowy with white blonde hair that falls to her hips. She looks like my imagined version of Lady Galadriel. Her purple eyes peer out from a photogenically perfect face that reminds me of the one that appears beside me.\n\n\"Mum.\" Smiles Trina.\n\n\"She's beautiful.\"\n\n\"Her name was Astrid, everyone thought so.\"\n\n\"This is Dad, Elmo.\" She indicates another photo frame and picks it up to wipe dust from the glass before passing it to me. The photograph shows a very tall man next to the woman. They are standing in what looks like the Arbor downstairs and a girl of about thirteen is holding a bicycle. The girl looks up at the camera with mischievous eyes that mimic her mothers and a face that rivals her beauty. Long curly honey gold hair spills down past her shoulders.\n\n\"Who's the brat?\"\n\n\"Dickhead.\"\n\n\"You were a beautiful kid.\"\n\n\"They were happy times. Come, I need a hand in the kitchen.\"\n\nIn the kitchen I help her move the fridge and watch as she uses a dustpan and brush to clean out a mouse nest. When she's vacuumed and mopped behind it, I shift the fridge back and she takes two beers from it and hands me one. She stares at hers for a moment before opening it then asks, \"The kitchen has always been my favourite part of this house. It's where most of life happened... Want the magical mystery tour?\"\n\n\"Sure.\"\n\nShe shows me through the house. Her parents room seems as they left it. There is even a tie lying on the bed and shoes near a dresser that look like someone just stepped out of them and left.\n\n\"This is the Library, Mum loved to read.\" One verandah is built in and lined with book shelves, \"I try to cobweb and dust each time I visit. I can almost see her sitting in that chair sometimes still.\"\n\n\"This was my room.\" It looks like a kids room. There are dolls on the bed and playfull curtains. A pink doona covers the double bed.\n\n\"Do you come home often?\" In the year I've know her I've never heard her speak of the house.\n\n\"No.\" Her voice is flat, so I let all my questions rest.\n\n\"It's a beautiful old house.\"\n\nThat gets me a sad smile and we return with our beers to the kitchen.\n\n\"Come for a walk?\" she asks from the door.\n\n\"Sure, let me get my shoes.\"\n\nIn silence she leads me through a gate in the back yard. There are several old outbuildings and we take a cow track path that wanders through them. Along the way Trina picks yellow dandelions and gathers a small bunch of them.\n\nOne shed contains an old Ferguson tractor and a small Commer truck. There are farm implements stored beside them and I'm tempted to ask if they all still work but Trina is intent in her silence.\n\n\"The old dairy.\" She introduces it like an old friend. \"This is where I remember them best. Mum down there in the milking pit hooking up the milker. Fussing over cleaning teats and smiling up at me. Happy even with her feet in cow shit.\"\n\nShe drops the dandelions down into the sunken centre of the dairy to land beside the withered remains of countless others. Toward the rear of the building sunlight spills through broken roofing and as Trina walks toward it her hair shines like a halo.\n\n\"Dad was usually round about here somewhere, fussing about cell counts and milk quality. They were saving for a better heating system, a new electric one. The old boiler was gas fired and the relief valve always sticking.\"\n\nShe stares through the hole in the roof for a while then she walks back through the dairy without waiting for me. I follow her to an old camphor laurel tree that stretches its giant limbs over cattle yards that once served the dairy. There is a little cast iron table and chairs beneath the tree.\n\n\"I found them when I came home from school. The boiler had blown up. Part of it went clear through the roof. The steam and pieces of it killed them. Mum's face was burned completely off. Dad copped most of the shrapnel. I ran all the way to Sassies house screaming.\"\n\nSometimes there are no words for the moment, so I study her face and watch loss and pain wash through her. Offering me a grim pout, she continues, \"They used to sit here for a cup of tea. I buried their ashes under that table. Sometimes I come out here and have a cuppa with them. Stupid huh?\"\n\nAll I can offer is to pull her into my chest in a dumb half hug. The gesture brings tears and she wraps her arms around me holding me tight while she sobs. I tangle fingers in her hair and hold her shoulders until they eventually stop shaking.\n\n\"Fucking sook.\" She says wiping her eyes, \"Sorry about that.\"\n\n\"Come on.\" She takes my hand to pull me along after her back to the house. At the back stairs we realise we are still holding hands like kids and she stops to turn to me.\n\n\"Come down here a bit dickhead. That's better.\" She rewards me with a quick peck on the lips and answers my raised eyebrow with, \"Thanks for... you know.\"\n\n\"Thanks for trusting me Kitty.\"\n\n\"Yuck, enough girly shit. I'll duck up and get us some roadies. Meet me back out at the quad.\"\n\n\"What's in the bag?\" I ask her when she arrives a few minutes later.\n\n\"Just some clothes for us. Old stuff I haven't worn in ages, hope it still fits. Also got some of Dads clothes for you.\"\n\n\"Oh thanks, I hadn't thought of clothes.\"\n\nShe puts the bag on the front rack and hands me another beer. It's almost finished by the time we get back to find Blue has fired up the barbeque. I unload the wine cartons onto the verandah and Trina tells me to go wash up.\n\n\"Get a shower before there's no hot water Jim.\" She hands me a towel and a pile of clothes.\n\n\"Shorts and a t-shirt. Thought Dad's jocks were a bit creepy.\" She smiles.\n\n\"Ta.\" I can't help thinking as I shower of my 'second date' with Sasha and the naughty scrubbing that night. The shorts fit surprisingly well. They're a little old fashioned but you can't really see them for the length of the t-shirt. They smell like mothballs, but they feel a lot better than my sweaty clothes from today. \"What is it with visiting here and not having my own clothes?\" I wonder as I 'freeball' it back out to the barbeque.\n\n\"Trina says you had a look at her folk's dairy. See the hole in the roof?\" Blue asks.\n\n\"Yeah.\"\n\n\"You'd think we'd have heard that wouldn't ya? Just across the creek and all but nup. Not a sound. Wind must have been going the other way. Tragic. It's been tough on the kid.\"\n\n\"She's stronger than she looks.\"\n\n\"Aint that the truth.\" He says shaking his head. \"That girl has had to carry a lot.\"\n\n\"Oh?\"\n\n\"Not my stories to tell, Jim. I'm just glad you two seem to be friends. She doesn't make many friends. Speak of the devil.\"\n\nIf the devil wears tiny daisy dukes and a white singlet top, then he looks a lot like Trina did when I looked up to the back door. I've only seen her in a dress once, a swimsuit a couple of times, otherwise she has a uniform code that extends to loose fitting jeans and button up blouses. This curly blonde whose legs look a lot longer than her five-foot frame should allow is not the Trina I know.\n\n\"Woah! I've met your sister.\" I dramatically extend a hand for introductions.\n\n\"Fuck off dickhead.\"\n\n\"Seriously, wow.\" I gesture for her to turn around and she screws her nose up in disgust. \"What have you done with Trina?\"\n\n\"Don't be a dick, Jim.\" She's flashing a purple eyed grin at me as she punches me.\n\n\"Woohoo, I remember this Trina.\" Blue says, reaching across to pinch Trina on the bum. \"Good to see you back darlin.\"\n\n\"Dirty old cunt.\" She laughs rubbing her arse.\n\n\"Can't blame an old man. She used to have all the local boys lined up drooling, Jim.\"\n\n\"I can see why Blue.\" I smirk at Trina who blushes and tells us both to fuck off, flipping us off and wandering away. From behind her Blue and I simply stare at her disappearing butt. The frayed bottoms of her shorts allow a generous sight of pert thirty-three-year-old bum cheek.\n\nWe both realise we're staring when Denise snaps her fingers. \"Earth to Blue. I said, 'did you want more beer?'\"\n\n\"Do dogs lick their nuts darlin?\"\n\n\"Jim?\"\n\n\"Please Mum.\"\n\nAfter dinner we take up the traditional place in front of the television. Tony wants to watch Home and Away but Blue veto's that decision and selects re-runs of Blue Heelers from a digital channel.\n\n\"Fucking homos and gays. Not watching that shit in this house.\"\n\n\"It's probably best you don't sit near Jim.\" Tony tells Trina as she brings more beers into the lounge room. \"He gets erections a lot. And now he's got a Ford... Well.. With Sasha gone, he could get dangerous.\"\n\nDenise rolls her eyes.\n\n\"I think I'm pretty safe Tony.\" Trina says kissing Tony on the cheek.\n\n\"You can always come sit on my lap.\" Blue offers.\n\n\"Dirty old bastard.\" Denise tells him.\n\nTrina sits like she did in the truck with her back against the end of the couch and she puts her feet up on my lap. The air-conditioning is set as Blue likes it, to 'frozen wasteland' and I notice her tank top peak over her small breasts. I'm bothered by my reaction. There is a tension in my trouser region that threatens arousal and sans underwear that could spell disaster if it manifests while her legs are on my lap.\n\nThe more I try to ignore it, the worse it gets. Especially when Trina uses one foot to scratch her other calf and the heel of the scratching foot accidently brushes my slowly hardening willy. \"Fucking hell, not again.\" I think.\n\nLooking to see her reaction to the accidental contact she makes an \"Oh my god, really\" face at me and I raise my palm to my face in defeat. \"Sorry.\" I mouth in her direction and she offers me a shrug. Feeling me harden further under her ankle she pulls a blanket off the back of the couch and throws it over her legs.\n\n\"What's with you and that bloody air-con, Dad? It's like Siberia in here.\"\n\nI swallow a lump from my throat as Trina runs her heel along my shaft and shoots me a cheeky wink. Oh my god, this is Sasha's best friend and kind of sister who is teasing me with her feet, under a blanket on the couch near- just holy shit. I grab her foot to keep it still and pretend to massage it.\n\n\"Aw, thanks dick- um Jim. Sore today. Think I stood on something 'hard'. There's a bit of a 'lump' there.\" She smiles at me and points cheeky violet eyes at mine. Denise looks at Trina's eyes then at me and smiles to herself. Whatever that's about.\n\n\"Thanks Jim. I need the loo.\" Trina rises and leaves me with my blanket and my hard-on and my confusion. There's a memory I have of a cat I owned when I was a child that was run over right in front of me. I focus on the mental picture of that mess until my throbbing mast lowers to family friendly level.\n\n\"Jim. Can you help me with those cartons of wine love? I'd like to get them into the pantry.\"\n\n\"Sure Mum.\" I'm thankful for the distraction.\n\nI follow Denise to the verandah but instead of picking a carton up, she sits down on one and gestures for me to sit on the other.\n\n\"Wha-\" I ask but she cuts me off.\n\n\"Shh, love. I want to say some things. Important things. And I just want you to listen. You're clearly not a kid, so take or leave my opinions when I'm done. Ok?\"\n\nI nod and she continues, \"Sasha is an ambitious fool. She left you to pursue a career that when she achieves it will be just another empty victory. I believe she already knows realises what she left behind in you.\"\n\nI chew that over and don't have much to say in response.\n\n\"I-\"\n\n\"Shh.\" She pats my knee. \"Just listen... You are blind too, to what is right in front of you. You need to move along. Let me tell you a story. Has Trina shown you pictures of her mother?\"\n\n\"Yes, she was beautiful.\"\n\n\"Inside and out, Jim. She was a lovely friend and a kind human. Her beauty came from inside her. She had these eyes... They were deepest blue. So blue that they looked purple. She loved her husband and Trina so much. One day Elmo slipped using the chaff cutter and his fingers brushed the grab. He lost the tip of his index finger and spent four days in hospital. Those four days her eyes were red with tears and blue. Blue like an empty sky. Do you understand what I'm telling you?\"\n\n\"Her eyes change colour like Trina's?\"\n\n\"Uhuh. But... And this is my point; I've not seen Trina's eye's purple a single time since that horrible day she came home and cut off all her hair.\"\n\n\"They were purple just before... Heaps of times...\"\n\n\"Yes... For you, Jim.\"\n\n\"Fuck.\"\n\n\"Yes. Now...\" she pats my knee in earnest. \"Now you know. I have also not seen her with her hair long since then. I have also not seen her in her 'lucky' shorts since then. Now what you do with this is up to you. You owe Sasha nothing. You owe us nothing. But that little woman is in love with you. I can't tell you her stories, but she is precious and a bit fragile, but also the strongest kid I know. We love her and if she gets hurt... We'll I don't know how we'd help put her back together again.\"\n\n\"Fuck.\"\n\n\"Do all accountants swear as much as you Jim?\" She watches me with amusement. \"Just fucking with you dear. Now, I don't know how you feel about her; or if you even see her that way. Please just be honest with her and careful with her heart. She's a grown woman but she's had a rough road.\"\n\n\"What happened to her? She showed me the boiler and the dairy.\"\n\n\"I can't tell you that. Just... I can say she was treated poorly by men. That's all. So, you treat her well now. You're a kind, and gentle man. I trust you.\"\n\n\"Thanks Mum. I think.\"\n\n\"And no matter what, or where or how we all end up, Blue, Tony and I are your family. Don't fuck that up either, or you'll break my heart. Am I clear? Tony loves you like his brother and if you hurt him, I'll break your arms and keep you in the old dairy as a gimp.\"\n\n\"Ah. Right then.\" I'm picturing fingers tapping on heads like in Pulp Fiction, despite the sudden gravity.\n\nShe kisses my cheeks then stands, \"Fuck the wine. Never liked the stuff. Only made you go and help her to see what came of it. You're a good kid, Jim.\"\n\nI draw a very deep breath. Like I need oxygen for a brain that's not quite caught up yet.\n\n\"The bridge, Jim.\"\n\n\"What?\"\n\n\"Her place to think. She's probably gone for a walk. It's how she thinks. And her favourite place in the world is the bridge. Elmo used to take her fishing there.\"\n\n\"Okay?\"\n\n\"Go.\"\n\n\"Okay...\"\n\n\"And Jim?\"\n\n\"Yup.\"\n\n\"I don't even know... Just be you. You'll figure it out.\"\n\n\"Haha.\" Its nervous, I have no idea what's going on. So, I just walk into the moonlight. Wander down the dusty track to the front gate with a giant shaggy companion that seems to think its job is to hold my hand with its mouth. I don't even know which of the two wolfhounds it is; Chewdith or Bacca? I just know that one of them wants to hold my hand in its mouth and lead me down the moonlit lane.\n\n\"Hi dickhead.\" I hear from the shadows. The wolfhound drops my hand and slinks into the dark.\n\n\"Gidday Kitty.\"\n\n\"Sorry.\"\n\n\"Hey?\"\n\n\"For fucking with you on the couch.\"\n\n\"Oh. Nah, I'm sorry. It has a mind of its own. I-\"\n\n\"My fault.\" She says swinging her legs over the side of the bridge.\n\n\"Nah I think technically, that was all on me.\"\n\n\"Nah, I teased.\"\n\n\"So where're we at? You ok?\" I ask and sit beside her.\n\n\"Nah, I'm all sorts of things but not ok. We still mates, Jim?\"\n\nPutting an arm around her shoulder I pull her against my side. \"Best mates Kitty.\"\n\n\"Good.\" She leans her head against me. \"Messes me up every time I go to the house. It's like there's a box of memories there and when I open the door, they all come out. The good ones, the bad ones, all of them, all at once. No excuse for...\"",
        "I kiss her on the head. \"Shut up Kitty.\"\n\nShe does and I just hold on to her. We sit like that for a few minutes until she speaks again, \"Come on.\"\n\nJumping up she pretends to push me into the creek and I startle, trying to keep my balance.\n\n\"Gotcha.\" She laughs at me then offers me a hand up. \"We best get back, I'm tired and they'll be wondering where we are.\"\n\n\"Ok, you go on ahead and I'll follow.\" I smirk and deliberately check out her butt.\n\nI'm rewarded with her snorting chuckle, \"Pervert.\"\n\n\"All day, every day.\"\n\nIn the moonlight she is lit silver and grey and the only colour is the deep purple of her eyes on mine.\n\n\"You're a good bloke for a dickhead, Jim. Come down here a moment.\"\n\nShe presses her wet lips against mine and they linger for seconds longer than any of her previous quick pecks. I can smell her skin and her hair and drink her in. An animal part of me wonders if I could put aside my uncertain emotions and simply respond to this kiss and take advantage of the beautiful girl in front of me. Then she pulls away. \"Thanks Jim. Thanks for... Just...\"\n\n\"Shh... Come on.\" I take her hand and we walk back down the long driveway to the house in silence.\n\nWe return to an empty house. The television is off and I can hear Blue snoring away down the hall.\n\n\"You want Sassies bed or the couch?\" Trina asks.\n\n\"Either way, too tired to care much.\"\n\n\"Me too. I like the couch.\"\n\nWatching her arrange herself on the couch and pull the thin blanket over herself, I catch myself smiling.\n\n\"Night Kitty.\"\n\n\"Night Jim.\"\n\nI tuck the blanket up under her chin and kiss her on the forehead then find Sasha's room and flop down on the bed. Sleep eludes me despite my weariness. If what Denise said is true and Trina has feelings for me, what are mine for her? I saw her this afternoon in those shorts and later on the couch for the first times as a sexual being. Until then she was a friend; just wonderful companionship and helpful distraction. Or was she?\n\nThese days I look forward to the weekends, as much for spending time with Trina as for escaping the city. I forget Sasha's urging to keep Trina busy and involve her because I enjoy her presence as much as anything else. Could I be? I find I hardly ever think of Sasha when I'm busy with Trina. In fact, through the week I'm beginning to wonder what Trina is up to more often. I spend far less time looking through Sasha's facebook pictures and posts than I used to. Mostly because it's... well no it's not painful anymore, it just seems like wasted time.\n\nThe door opens and a little blonde head above a wrapped around blanket pleads with her wet purple eyes. \"Can't sleep.\"\n\nI pat the bed beside me, and she walks around and lies above the blankets wrapped in her own.\n\n\"What's the matter Kitty.\"\n\n\"Nothing.\" She sniffs and snuggles under the arm I drape across her, pulling my hand up to her shoulder, \"Nothing now.\"\n\nAnd just like that my thinking settles too and I just relish the nearness of someone. Sleep claims her quickly and I topple into dreams beside her.\n\nI wake late in the morning. It's after nine-thirty when Trina waves coffee smells at me.\n\n\"Morning sleepy. Brekky is going cold.\" She says standing beside the bed with her coffee. \"Come on, Denise is dying to quiz you about our sleeping arrangements last night. I'm teasing her by pretending I'm too embarrassed to discuss it. She thinks we did the nasty, I reckon.\"\n\n\"You're a shocker.\"\n\n\"She was standing in the doorway watching us sleep when I woke up this morning. So she saw me above the sheets, it's killing her though.\"\n\n\"Fuck my life...\" I laugh then remembering my morning boner, \"Um, Kitty, I need a few moments...\"\n\n\"What?\" She puzzles, \"Oh! See something you like?\" She waggles her cut-off's at me and giggles her way out of the room.\n\nAfter I've visited the bathroom and splashed water on my face to wash the sleep out of my eyes and tried comically to piss out of my morning wood, a feat which required bending at the waist to try and aim it into the bowl, I join the family in the kitchen. Denise is indeed watching me closely and searching for any sign of changed body language or eye contact.\n\n\"Look who's crawled out of the fartsack finally.\" Blue laughs between bites of bacon.\n\n\"Someone keep you up late?\" asks Denise.\n\n\"You could say that.\" I answer and pull out my wallet. I always keep a couple of hundred in cash on me, you never know when you'll need it.\n\nDenise's eyes widen even further when I tuck four fifty-dollar notes under Trina's coffee cup and say, \"Thanks for last night, darlin.\"\n\n\"No problems Jim. oh...\" She tucks one fifty in her top and hands me the others back, \"big boy discount.\"\n\nThe only person at the table with a closed mouth is Tony. Blue has stopped eating and is staring at Trina. Denise is going paler by the second.\n\nTrina can't hold it anymore and starts that braying snigger of hers. \"You should see your fucking faces.\"\n\n\"Nothing happened Denise. Kitty couldn't sleep, wanted company I guess.\" I explain.\n\n\"Under and overed it, Mum. Him in the bed, me on the top. All very innocent.\" Then to me, \"You're not getting this fifty back though. You dropped your guts so bad this morning I'm going to need counselling.\"\n\n\"Bullshit. It was probably you. You snore too did you know that?\"\n\n\"No way.\" Trina scowls across the table.\n\n\"How could anyone tell over the freight train I sleep next to.\" Denise laughs.\n\nAfter breakfast, Trina and I head over to her house to grab showers and a change of clothes.\n\n\"You have a look through Dad's things. There'll be something there for sure. Take whatever you like. I have to get around to donating them all, just never... never really in the mood. Just wish I could pay someone to clear out their room. It's long overdue.\"\n\n\"Thanks.\"\n\n\"Remember where everything is?\"\n\n\"Yup.\"\n\nIn her parent's room I find a cabinet of draws and rummage through clothes eventually finding a pair of cargo shorts about my size and a polo shirt that looked comfortable. I could hear the shower running already so I got a glass of water from the kitchen and snooped. There was a teaspoon collection displayed in one corner that suggested her family had travelled a lot of Queensland and New South Wales.\n\nI'm looking at the different locations when I hear, \"They loved this country. One of the things Dad loved to say was that had to travel all over Europe to find all the things you could in one Australian state.\"\n\n\"Holy smoking cheer-leaders, boy wonder!\" I blurt. She is wearing a short, pleated skirt that drops just past her bum and has me praying already for windy weather. Matched with a short sleeved checked shirt that's knotted at the waist showing a lean tummy and a belly button piercing she looks like a farmgirl cheerleader.\n\n\"Shut up dickhead. I just don't have any of my normal clothes. These are old things.\" Her blush is lovely.\n\n\"All you need is pigtails, Kitty.\" I tease her.\n\n\"Oh, you'd like that, all girly-girly.\"\n\n\"Uhuh.\"\n\n\"Fuck-off. Go have your shower, Uncle Pervy.\" She says through a million-watt smile.\n\nMy shower thoughts don't drift too far from Ellie-May in the kitchen. As I wash certain anatomical necessities, I'm aware my arousal is linked directly to thoughts of Trina. It makes me feel strangely like a betrayal of Sasha. She's only been gone two and a half months. If I had loved her as much as I thought, would I be boning up over her friend? I still haven't decided as I consider whether to rub one out in the shower. The water decides for me by going cold, so I towel off and dress in the clothes I found. I'm still towelling my starting to need a haircut length mop as I walk into the kitchen.\n\n\"Fuck.\" Accompanies the sound of breaking glass.\n\n\"You right?\" I hang the towel over a chair and survey the damage. Taking the dustpan from the floor near the fridge, I help Trina pick up pieces of broken cup from amid the mess of juice.\n\n\"Stupid.\"\n\n\"What?\"\n\n\"Me clearly. You looked so much like Dad for a moment. Got a fright. What a wally.\"\n\n\"Well I'm wearing his clothes and clearly male model material so I can see the resemblance.\"\n\n\"Dickhead. Ow...\"\n\n\"Stand still. Let me see.\" There is blood on her left foot. \"Let's get you to a chair.\"\n\nScooping her up, she giggles. There's nothing of her. I grunt and stagger,pretending she's enormous. \"Holy fuck, how much do you weigh? Like a hundred and eighty kilo's or something.\"\n\n\"Forty-eight, dickhead. Now put me down.\" I sit her on the table and pull out a chair to examine her feet. There are some tiny shards that I can easily brush away or pull out, but the one that's bleeding is going to need tweezers.\n\n\"In my bedroom, in the top drawer.\" I'm told and return quickly with tweezers and tissues. I have to lift her foot up to better see the deeper splinter and in doing so she quickly re-arranges her skirt to hide her pretty baby blue cotton undies. In no time, I have the splinter out and ask for band-aids.\n\n\"Medicine cupboard in the bathroom.\"\n\nSo, I squat between her feet and cover the two worse cuts.\n\n\"What's the verdict Jim?\"\n\n\"Well, they are going to hurt a little. Glass cuts do. But they don't need stitches. Those two are just little gashes and they look clean. Not sure about the other one though.\"\n\n\"What?\" she follows my pointed finger and eyes to where her skirt has risen up flashing her knickers again and turns crimson. \"Idiot.\"\n\n\"From the smell I reckon it's infected. You should get someone in now and then to hose it out for you.\"\n\n\"You're a fucking shocker, dickhead.\" She laughs and playfully pushes my head.\n\n\"Stay there, I'll vacuum and mop.\" She watches while I vacuum up the last few shards and mop the kitchen floor.\n\n\"Domesticated? Who'd have known. Could get you a job at the day-care centre, we always need someone to mop and get out splinters.\" When I'm done, we lock up the house and check all the switches. She's limping as we get to the door. I don't know what comes over me, but I pick her up fireman style over my shoulder to carry her to the quad.\n\n\"Put me down idiot.\" She laughs and pummels at my back.\n\nI smack her bum at my shoulder, \"Behave yourself.\"\n\nTrina tries to put the quad into reverse but hurts her foot. \"Fuck. You drive Jim. Just don't kill us.\"\n\nIt's the same as the quad Mum and Dad have, so I wait for her to scoot back then we wind our way out over the little creek.\n\n\"Stop groping me.\" I whine, mimicking her admonishment of yesterday. She has her hands around my waist and I feel her head rest against my back.\n\nHer phone is ringing as we arrive back at Blue and Denise's. I leave her on the verandah with Denise and go to find the Dodge. We need to get it back to the farm tonight, so we can travel back to Brisbane with Mum and Dad in the morning. Pulling up in the driveway I'm alarmed to see Trina crying while she's talking. Denise is frowning as she wanders off inside. I hear parts of her conversation as I approach the verandah.\n\n\"He's fine. Look, just...\"\n\n\"It was your decision.\"\n\n\"Sasha,\" she mouths at me and shoo's me away.\n\nNodding I make for the door, but not quickly enough to avoid hearing, \"Look, Fuck You! You don't get to tell me what to Fucking do. You think I don't know what you're doing? Pushing us together all the time to make yourself feel better about being a fucking selfish cunt. What, are you hoping we get together so you can feel all righteous and vindicated?\"\n\nI know she waved me away, but my feet won't operate. Denise stands in the doorway clearly trying to listen but not be seen. She puts a hand to my face and shrugs.\n\n\"Well it's fucking working.\" Trina is sobbing now. \"It's fucking working you fucking bitch.\"\n\nShe lifts her purple tear-soaked eyes to mine and says quietly into the phone, \"I fucking love him. I can't help it. I just fucking wake up and love him without thinking. I don't need your fucking blessing, it's a thing that lives inside me. But...\" and she sobs afresh, \"His heart is still full of you, you fucking cow. There's no room for me. No room. Now fuck off and don't ring me again. I'm fucking serious. If you ring me again, I will change my number. Fuck off.\"\n\nThen she hangs up and stands there with shoulders sagged, her eyes streaming and her hands over her face. Denise pushes me, \"Go.\" She whispers.\n\nCrossing the boards slowly, I fold my arms around Trina and cradle her head to my chest. I have no words, so I rock her and hold her. She melts against me and slowly her breathing settles until with a powerful shove to my chest, she explodes away from me.\n\n\"You can fuck off too! You're no fucking better! I'm not some consolation prize you get! Your pet Kitty!\" she spits vehemently then takes a deep breath, \"You can't just use me as a fucking distraction, Jim. You're not doing me any favours. Every instant I'm around you I love you more and every instant hurts when I don't see it back.\"\n\n\"I.. Trina...\"\n\n\"Just fuck off Jim. Get in your truck and fuck off out of my life. I want nothing to do with you unless you want the whole package. I don't want to be your ice-cream buddy, I don't want to be your mechanic, I don't want anything unless there's a chance I can have it all. Everything that silly cunt threw away. Now just go. Please, just go.\"\n\nShocked I stand and watch as she limps inside. I look to Denise who shrugs and follows Trina in. Sometimes when Mum and Dad argue, Dad puts his hands up in surrender and goes to the shed for a while. It seems to work for them, so I wander up to Blue's shed to find him already fussing over small test pots of mint green paint.\n\n\"Bit of a fuss? Heard some of it?\"\n\nI shrug. \"No idea what to do.\"\n\n\"That's women for you. Go fetch my smokes.\"\n\nReturning with the packet he lights two. \"How long ago did you quit?\"\n\n\"Ah, fifth of August two thousand ten. How did you know?\" I ask as he puffs out a cloud of blue smoke and hands me one of the cigarettes.\n\n\"You hang around when I smoke, you like the smell still.\"\n\n\"Guess so. Reminds me of Grandad.\"\n\n\"Never too late to quit again. I've quit five times this year already.\" He laughs. \"Denise will sort it out. Just hide out up here with me until she knows what needs doing.\"\n\nA short while later Denise finds us discussing shades of green and looking at old ford colour charts on the internet.\n\n\"Jim.\"\n\n\"Mum.\"\n\n\"She's okay. Just hurting. When she settled, I helped her get her thoughts straight and she wrote this down for you. A lot of what she said was true but came out wrong.\"\n\nDenise hands me a plain white envelope and I try to lift the corner.\n\n\"No love, when you get home. I'll put Trina on the train later on. She'll be fine. You head off and give her some breathing space. Things will be okay. Now give me a hug and then do like the lady said, 'Fuck-off'\". She laughs and wraps me a world-righting hug.\n\n\"See you round Blue. I'll try and get up maybe every second weekend if that's okay. I can pitch in with polishing and shit jobs.\"\n\n\"Goodo son. Goodo.\"\n\nLIKE A BANDAID\n\nAfter dinner I take some of Dad's moonshine to the front verandah and sit watching the last red and purple fade from the sky. Turning the white envelope in my hands I gather courage and eventually tear open the side to take out a plain piece of white paper.\n\nThe first thing I notice is the simple beauty of her hand-writing. On the unlined paper, her cursive is even, precise and generous.\n\nDear dickhead Jim,\n\nDenise thinks I'm writing some kind of apology, but I'm not. I meant every single word I said. Every one. But some of it came out a bit harshly and mean. \n\nI love being your 'Kitty' whatever that came to mean. I love being your pretend mechanic and I love the ice-cream trips. Last night was the first night in a long time that I've slept without nightmares. I love the way you make me feel safe and how you make me laugh. I love that you always have time for me. I love that you listen and that you let me finish speaking. I love your hugs. \n\nBut I want more now. I know your heart was broken when Sassy left. I know that you still have feelings for her. I know also that perhaps you may never feel the same way about me. So, I know too, that I have to put some space between us. I need to get my shit together and you need to start moving forward in your own journey. Maybe in time your heart will make a little space for someone like me and you'll be happy.\n\nThankyou for being as much as you have been able to be for me. \n\nI love you. \n\nK\n\n\"Fuck...\" Folding the paper, I return it to the envelope and take it to my room where I pull out a box from the top of my built-in wardrobe and place it in among the other trinkets I've saved over time. Cards from Sasha, photographs from special occasions throughout my life; all the little keepsakes that have some sentimental value. It's only early still so I take my laptop to the kitchen to sit and check e-mail and such.\n\nFacebook tells me I have five new messages and my heart sinks anew when I find they are from Sasha.\n\n[Jimmy can you check in on Trina pls?]\n\n[Let me know how she is.]\n\n[Have you spoken to her yet?]\n\n[Please Jim, she was really upset.]\n\n[Maybe you could visit her.]\n\nI can't even begin to think about how to reply. I simply click out of messenger and check Sasha's page for the first time in weeks. There are pictures of her with friends in different places around Amsterdam. Touristy looking photographs and in every one I see the same thing. I see her happiness. She is almost glowing with her new life.\n\nAs I examine each photograph, I find myself content. In the past, I would have been sad and reminded of my loss, but I realise now that I am finding joy in her happiness. She is where she wanted to be, achieving what she wanted to achieve.\n\n[Hi Sasha. It's band-aid time. I have loved you with all my heart and now I need to let you go. Not in sadness; I'm happy for my memories of you and happy for your new life too. I hope when you return eventually that we can still be friends, but I realise for that to happen I need to go my own way and search for my own happiness. So, as I 'unfriend' you on here, know that it's just so I can 'refriend' you with a clear heart later. I hope you understand.]\n\nStaring at the message I've written and read and re-written and re-read until it stops making sense I know if I don't click send I never will. Nervously, I tap the mouse and watch as the message makes its way across the globe.\n\n[I do. Go get happy mister. I've loved you too.] Bounces back across the world before I've left the page.\n\nHarder still is clicking the 'unfriend' link but once I have, I feel a weight rise from me. The feeling of freedom stays with me all that working week. I expected for it to burst eventually but as I travel north on the highway that weekend, it feels like footsteps on a new path.\n\nI find Blue in the shed as expected. He's masked the F350 and shot a coat of surfacing primer.\n\n\"Just a single coat I reckon. Your father is a bloody good panel beater for a barrister.\"\n\n\"He'll love hearing that.\"\n\n\"This bit's not the fun part though,\" he says handing me a block and some wet and dry sandpaper. Between Tony, Blue and I we have the whole cab and style side tray rubbed, ready for a primer sealer by mid-afternoon. Blue's taken the cab and tray off the chassis and I can see he's added some of his own touches to the paintjob Dad and I did on the chassis.\n\n\"Just a bit of detail work.\" He explains, \"See the brake drums and the disks. That sort of thing. Doesn't hurt to get a little fussy.\"\n\n\"Looks good.\"\n\n\"Be lost without Tony. That boy has magic hands. He can feel the slightest dimple, scratch or imperfection. Anyway, beer o'clock.\"\n\n\"Um Blue...\"\n\n\"Listen Jim, Denise was talking to her last night. She's fine. You did the right thing.\" He pre-empts.",
        "\"Oh Sasha...\"\n\n\"Something else?\"\n\n\"Well yeah, I was hoping to borrow a mower, give Trina's house a bit of a tidy up.\"\n\n\"Oh. Righto. Listen we'll grab some beers, I'll take the tractor, you grab a whipper-snipper and just watch Tony go on the zero turn. He fucken loves that thing. Hard to convince him he's finished sometimes. Come on then.\"\n\nOn dusk, Blue leans against the wheel of his big blue tractor smoking a cigarette and Tony has decided to mow the edge of the road all the way back to the house. From where we stand drinking a well-earned cold beer the yard looks like a garden again. Blue has slashed all around the outside and down around the dairy.\n\n\"Fucken thing was this long.\" He tells me describing the black snake he hit with the slasher.\n\n\"Jesus. Glad I didn't find it with the whipper snipper.\"\n\nAs usual Denise insists that I stay overnight. \"Too many 'roos after dark. Don't want to ding up that pretty Statesman.\"\n\n\"Hmmph, bloody Holden would probably look better with a roo stuck through the grill.\" Blue laughs.\n\nThe phone rings after tea and Denise takes the cordless into the kitchen, \"Hi darlin, oh you should see what the boys did at the old house today.\"\n\n\"Uhuh, the whole lot. Looks great.\"\n\n\"Trina.\" She mouths for our benefit.\n\nThen taking the phone from her face she addresses us, \"Trina says thanks everybody, especially you Jim.\"\n\n\"Oh, okay then.\" She frowns, then hands me the phone.\n\n\"I did bloody not, I said, 'thanks dickhead'.\" Trina says quietly.\n\n\"Haha, you're welcome. Can't have you getting bitten by a snake. Shoulda seen the one blue hit with the slasher.\"\n\n\"I spoke to Sasha tonight.\"\n\n\"Oh good. I was kinda worried for you two after last weekend.\"\n\n\"Yeah... Um, she told me about you too. Good for you Jim.\"\n\n\"Well some bossy cow told me I needed to move along a bit.\"\n\n\"Ha, that bitch can be annoying sometimes. Anyway, put Mum back on. See ya.\"\n\n\"See ya Kitty.\"\n\nDenise wanders back off into the kitchen with the phone and dishes clatter in the sink. Tony, Blue and I watch a few episodes of Russell Coight's adventures and I'm about to head off to bed when Blue says, \"Oh, found a couple of goodies in the junk pile if you got a few minutes.\"\n\n\"Sure.\" Following him up to the shed, I stop at Delia and look for the smokes I bought him. They must have fallen on the floor or something so I reach beneath the seats and as always find more than I should. There's an old chiko roll packet. There're the smokes but what is... Oh. I'm holding a small clipseal bag containing a pair of pink g-string knickers. I know just the thing to do with them too.\n\n\"You're a good kid.\" Blue says accepting the packet of cigarettes. He takes them to the little office at the back of the shed and offers me one from the packet he still hasn't finished.\n\n\"Thanks.\" He lights mine then his own and nods toward the back door.\n\n\"This way Jim.\"\n\nOutside there is a lean-to arrangement where an emergency shower and sink and such is located. On the floor of this sits a pallet containing a supercharger, assorted pulleys and plumbing and other electrical items.\n\n\"Joking Blue? Where'd you find this?\n\n\"Ask no questions, get told no lies, Jim. Let's just say I have some friends who drive tow trucks and look after a lot of insurance cases.\"\n\n\"That must be worth...\" I try to calculate the value.\n\n\"Absolutely nothing.\"\n\n\"What?\"\n\n\"If it's fitted to your car after you insure it, it automatically voids your insurance so it's best if it disappears before the assessor has a look.\"\n\n\"Oh...\"\n\n\"So, how do you reckon your F truck's gonna go with efi and a blower.\"\n\n\"How's it gonna stop more like.\"\n\nAfter we finish our cigarettes and hide the butts by flicking them into a growing pile at the back door we walk back through the office. While Blue's back is turned, I discreetly take the little bag containing the knickers out of my pocket and put it on the shelf at the back of Sasha's trophies.\n\nWinter passed mostly like that. I fell into a lazy comfortable cycle of work, weekends at the farm and working on Effy with Blue. I blink and suddenly a month has gone, breathe and there goes another. Whenever I am up at Caboolture, I have started doing a few more things to Trina's house. I'm not sure why but it feels like some sort of connection despite not seeing her. Denise keeps me up to date on both the girls.\n\nSasha is enjoying her studies. I'm happy for her. Denise says she's been a little bit sick of late but nothing to worry about. Trina is busy with work and friends. She even got a promotion of some kind at the day care centre, so is doing more hours. She hasn't been back to the farm since March. Denise said she seems happy but wishes she would eat better.\n\nThe fence has a coat of paint. Blue and I fixed the roof on the dairy. He showed me Elmo's cars too. Underneath those car covers were a nice old Valiant CL Charger and a VH safari wagon. \"Mopar man.\" Blue explained. \"Bloody wogs loved those things.\" Effy was coming together well. The interior finally got picked up. I had it redone in beige with dandelion yellow piping. Really goes well with the mint paint.\n\nBut I felt a little empty. Happy, content, but there was a little nagging hollow spot I recognised as the part where love had been. I thought very infrequently of Sasha these days. Usually only when passing a photograph of her or when Denise mentioned her. And when I did think of her it was with happiness not pain so this empty spot confused me. I'm not that unhappy with my own company or needy so it annoyed me with its tenacious insistence.\n\nI fucked one of the admin pool girls accidently. It was a professional faux pas. Bloody work parties. No harm, no foul; just sweaty half drunk, condom friendly, reciprocated rooting in my office. She was an enthusiastic little red headed thing with an infectious sense of misadventure and naughtiness. I took very little seducing. It had been a LONG time between drinks... Susan or Suzette or something. She didn't want my number. It didn't fill that empty spot either, it was right there along with the hangover the next day. Mum gave me some very serious glares.\n\nOne day I woke up out at the farm and it was September. Time flies by when you throw yourself thoroughly into the present because otherwise that nagging hollow spot returns. My mobile rings beside me in the boat. I miss the call, busy with a little bass that I threw back. Returning the call, I hear Blue's voice.\n\n\"Fucken listen to this son.\"\n\nVaroom.... I hear the whistling suck of supercharger and low growl of the massive motor.\n\n\"Machinery is done, plates are on and keys are waiting. Effy is a go mate.\"\n\nIT BREATHES\n\nThat weekend I leave Delia at the farm parked in the garage next to the old farm ute. I plan on picking Effy up through the week and giving Blue the final payment. I know they could use the money.\n\nFrom time to time the firm sub-contracts my services to the police and on Monday I fly out to Rockhampton on the police jet to assist with investigations into political misappropriation. It's late Thursday when we wrap up and I fly home. I'm worn out and cranky, so I take Friday off.\n\nMy phone becomes my shield whenever I'm forced to use public transport. If you look intently enough at the screen people don't tend to start conversations with you or otherwise bother you. I use the time too transfer the last two-thousand-dollar payment into Blue's account and to check my portfolio.\n\nI started buying shares when I was in high-school. Mum had explained her rule of ten percents when I was old enough to start earning pocket money. She gave me ten one-dollar coins and an old coffee tin. She said that every time I got money, one dollar of every ten gets put in the tin, I have to give one dollar to someone who needs it, and the rest is mine. As I grew up, she helped me understand budgeting as well with a similar rule that if you were spending more than fifty percent of your income on bills, you were living beyond your means.\n\nI was one of those privileged kids who always had money and as a result became good with it. When that first old coffee tin got full, Dad taught me about investing so that my savings started making money for me instead of sitting in a tin. We bought two heifers with the coins from that tin and when they calved the following year, I gained my first understanding of interest.\n\nThe calves grew and sold for just over a thousand each when I was in fourth grade. I was going to need a much larger coffee tin, so Mum set me up with a bank account. By year ten I had a share trading account and a portfolio that was humble but growing. Now, at thirty-nine, I have just under a two hundred and fifty thousand invested, averaging around twenty thousand in income a year depending on the market. I also own half the cattle at esk and own three rental properties.\n\nI'm not boasting. I'm well aware that markets fail, and that my debt on the real estate is around the million mark. The properties are paying interest on that debt and a small amount of the capitol. It's not like I'm rich, but I'm better off than many. My only real vices are my cars, Jameson's whiskey and fishing so I can afford to indulge a little.\n\nI sponsor a family in Tibet. That's my attempt at some sort of karmic tithe. The charity mob send me email's and photographs and it makes me feel good. So, I guess it's an investment of that one coin in ten that pays off somehow. It's these pictures I'm looking at when the tin can voice announces Caboolture station.\n\nDenise is waiting on the platform and walks me to her car where Tony is waiting. One of the things I like most about Tony is that he just does not give one single fuck. Ever. He acts on an instinctual understanding of his feelings and a childish kindness. Right now, his heart tells his forty-year-old body to run across the carpark and give me a hug.\n\n\"Oh Jim. Wait till you drive your truck. Dad took me down the driveway in it and I had to go and have a bloody good wank later.\"\n\n\"Tony. We don't always need to hear about wanking.\" Denise tells him as we pull out of the carpark.\n\nOut at their farm Blue has parked the F350 out the front in the driveway. He's covered it with a drop sheet. I'm not sure if for protection or if for a bit of a dramatic reveal. It would be wasted on me as I've been part of the process from beginning to end. Fuck, I spent two weekends just last month sanding and buffing the thing till my arms felt numb. Blue won't use electrical sanders or buffing wheels. He says they leave swirl marks.\n\nAs we pull up, he pulls off the sheet and makes a 'et viola' gesture with his arms.\n\n\"You're a Ford man now Jim.\" Tony tells me.\n\n\"Bi-vehicular perhaps.\" Laughs Blue. \"Owns a ford but still likes something a bit queer now and then. Hey Jim, Denise and I bought you a gift to go with it. Big old swag in the tray. Seemed a shame not to have something in there.\"\n\nBlue hands me the keys and I tell him I've transferred the money.\n\n\"Gonna get strange not having you here quite so much.\" Denise says sincerely.\n\n\"Gonna be short a drinking buddy too.\" Blue says, \"Don't be a stranger. Get up here for no reason now and then hey?\"\n\n\"Will do Blue. And thanks for everything mate.\"\n\n\"Dad.\" He says. \"If you can call that old boiler Mum, you can call me Dad. I'm not so embarrassed about it now you got a decent car.\"\n\nHe shakes my hand and pats my back, \"You're a good bloke. Let me know when you're up for a new project.\"\n\n\"Someone has to keep him in cigarettes.\" Denise says.\n\n\"What?\" Blue asks.\n\n\"Can't fool me, you silly old bastard. Now fuck off Jim. Get going before the old fart starts getting gushy. He always does when he finishes a car. It's like he's had a baby or something.\"\n\nI'm laughing at their banter as I open the door and slide up onto the wide bench seat. The key turns and the twin stacks grumble quietly when I press the starter. I can feel the whole car alive with the murmured threat of that motor. The dyno tuning guy who set up the boost and efi limited it to around six hundred horsepower to keep it streetable. I'm just sitting there encompassed in the experience of this vehicle when I look across the cab.\n\nInto the empty space. The same emptiness that lives in me.\n\nAnd for the first time I recognise it for what it really is. Another wake left by someone.\n\nWhen Blue asks, \"You alright Jim? Something missing?\"\n\n\"Yup.\" I tell him. \"And I know exactly what.\"\n\nI laugh at the world in general and wave to their confused faces as I gently squeeze the accelerator. I know exactly where I'm going for the first time in a long time. I stop only twice on my way back into the city. The first time at the Burpengary BP to fuel up the thirsty bitch and the second time when I spy dandelions growing on the edge of the highway.\n\nTHE DEEP END\n\nMy hands shake as I turn off the key. In the sudden quiet of the cab I start to doubt myself. Fear flashes briefly through me and I remember all the times Dad told me that fear is good, it means you are taking things seriously. Then I gather the dandelions and what courage may come and step out of the door, locking it behind me and turning to walk toward the day-care centre.\n\nLooking up the path to the high kid-proof gate I'm met with twelve or more pairs of small eyes quietly gathered at the fence and one pair of big sky blue wet ones. You can't sneak anywhere with a 460... I hold those eyes in mine and will my legs to keep moving.\n\n\"Hello dickhead.\" The little giggles and sniggers of children punctuate the moment.\n\n\"Hi Kitty.\" I hand her the flowers through the fence. \"It was empty without you.\"\n\n\"What was? Effy?\"\n\n\"No. Not Effy. My life. It was empty. It was empty because you weren't in it anymore.\"\n\nHer hair is golden and much longer now, it's held in a ponytail and waves as she shakes her head and wipes her eyes. \"What are you saying?\"\n\n\"The whole show. I need you. Just too stupid to see it.\"\n\n\"If you're fucking with me, I'll macram\u00e9 your fucking testicles.\" She says as she struts to the gate flings it open and reaches for my face. The giggles of children are replaced with whispers and 'oohs' as she brings her pretty lips to mine. The world around me grows quiet and distant and all I know are her lips pressed against mine, the wet of her tears and then the tip of her tongue touching mine as her lips open and we say with our mouths what we have no words for.\n\nThe need for breath separates us. But only our mouths, her arms are locked around my waist and mine around her. She leans into my chest and says, \"I've missed you so much arsehole. You are my safe place.\"\n\n\"I've missed you too. Just too stupid to work it out.\"\n\n\"Miss 'K', I think perhaps it's best for the children if you take the rest of the day off. There are words we don't want their parents hearing.\" A smiling older woman says to Trina and then to me, \"You be good to her or...\" she glances at my crotch, \"macram\u00e9. Okay?\"\n\n\"Were they making babies Missus 'G'? My Mum and Dad make babies all the time.\"\n\n\"That's enough Emily, time for finger painting. Inside everyone. Come on now.\"\n\nThen we are alone. With the interruption, a gravity has risen.\n\n\"What now?\" Trina asks.\n\n\"Don't know. Hadn't really thought that far ahead. How about ice-cream?\" That gets me another voracious kiss which for reasons of decency we break off as our hands find each other's bums. Perhaps your day-care employer's carpark is not the best porn set. Which is pretty much where that kiss was headed.\n\n\"Here.\" I hold out my palm with the single silver key in it. \"You only ever loved me for my cars.\"\n\n\"Can't have one without the other.\" She laughs and punches me in the arm.\n\nIn the driver's seat she buckles up, turns the key and presses the starter and grinning from ear to ear she turns now properly purple eyes toward me and says quietly, \"It was never your cars. It was always you.\"\n\n\"I love you too Kitty.\" And as I said it, I knew I meant it.\n\n\"Get fucked!\" She covers her mouth with her hand.\n\n\"Not quite what I thought you'd say.\" The good thing about the cab on the old F truck was that there was plenty of space in it. Enough space say, for a petite crying woman to unbuckle her seatbelt, climb across the bench seat and curl up on your lap, if you're lucky. And today I felt pretty lucky as I held her until she settled enough to raise her chin and plead with her eyes.\n\n\"Kiss me dickhead.\"\n\nThis kiss was gentle and less urgent but still got a salute from the man downstairs which just made her giggle.\n\n\"He's an impatient fellow, isn't he?\"\n\n\"Just knows a good thing when he feels one.\"\n\n\"You drive. I just want to cuddle.\"\n\nShe follows me as I slide across the seat and buckles herself in the middle. All the way to Bribie she snuggled against my side and her lips stayed curled in a smile that filled the place in me that used to be empty. Later as we ate gelato on the tailgate looking quietly out across Pumicestone passage, she laughed and licked ice-cream from her wrist.\n\n\"What?\" she asked when she caught me smiling at her.\n\n\"Just remembering that little blue-eyed pixie one Valentines date all that time ago.\"\n\n\"Ha, was just thinking the same thing. What are the odds?\"\n\nSullen moments beckon me to truth and I rub an imaginary beard.\n\n\"Ok, so that brings me to 'the talk' Sasha and I had to have.\"\n\n\"Yeah.\"\n\n\"Well it's something you need to consider if that's where we're headed.\"\n\n\"One in two hundred and sixteen.\" She smiles at me.\n\n\"No it was one in thirty-six. And even when it's not active there's a slim possibility of transmission. Just stuff you need to know. Awkward to discuss but important.\"\n\n\"One in six to the third, dickhead.\"\n\n\"What?\"\n\n\"One in two hundred and sixteen.\"\n\n\"That's one in six to the second, one in thirty-six.\"\n\nShaking her head, she kisses my cheek, \"You're the dumbest smart person I know. Me too. The big H. Me too Jim. The chances that three people with the big H would be in one room at the same time would be one in two hundr-\"\n\n\"Two hundred and sixteen.\" I finish for her.\n\n\"That's just one thing you are going to learn about me Jim. I've got stories to tell you too. Take me home.\"\n\nAs I indicate to exit, she looks across the bench seat where she leans against the door with her feet pressed against me, \"Not that home Jim, 'New Kahala'. My real home.\"\n\nThere's a thing that Trina does when she is thinking. She sort of sucks her top lip. She's doing it now as we drive through Caboolture. As we get closer to Blue and Denise's she sits forward, puts her feet on the floor and stares out the window.\n\n\"I have nightmares. Some nights it's pictures of Mum and Dad and that horrible day. Some nights my brain plays tricks and makes it different people with the same injuries. People I know and care about.\"\n\n\"That's horrible.\"\n\n\"I avoid going to my home because it's worse there. All the memories come back, all the smells of the farm bring them to me. There have been times I wanted to burn the place down. Then that night you held me and they didn't come, I knew one day I'd be able to go home. I just didn't know how, or even if I'd ever find someone to quiet me like you do.\"\n\n\"You're beautiful Kitty. Inside and out. I'm sure you'd have no trouble dating.\"\n\n\"I don't trust men, Jim.\"\n\n\"You trust me.\"\n\n\"I do. I knew I loved you way back then you know? On the beach that Valentines date. You reminded me of my father. Tall and blue eyed, kind and gentle. But other men... They freak me out. It's not always a good thing to have my mother's looks. Sometimes you get the wrong attention. That's where the other nightmares come from.\"\n\n\"Other nightmares?\"\n\n\"Stop at the gate Jim. Walk with me a bit.\"\n\nI take her hand and she leans into my side as we slowly walk down Blues driveway. She stops at a point about twenty metres from the gate where a large granite boulder sits off to the side.",
        "\"One afternoon after school, Sassy and I had just got off the bus. I was eighteen, Sassy was fourteen or fifteen. We were popular girls. Pretty I guess.\"\n\nShe looks up at me for a moment her eyes are blue like an empty sky. I know what Denise meant now when she described Astrid's eyes that way. There is an empty sadness there. Vowing to make keeping them purple my new mission in life, I listen as she continues.\n\n\"A car drove by and men whistled. That used to happen to us a lot. But this car came back. It came back to the driveway and four men got out. They were wearing football jerseys and drinking beer. We knew something was wrong by the way they were looking at us and the creepy shit they were saying so we started to run.\"\n\nPart of me is getting angry. I can feel where this story is going and there is nothing I can do about it. It must show on my face because she smiles sadly and kisses my cheek.\n\n\"They caught me. They had to. Even if Sassy was faster than me, I thought if they didn't catch me, they would have caught both of us. So I let them catch me and they held me over that rock and told me how pretty I was and how beautiful my hair was and all sorts of things while they... When they were all done, they got back in their car laughing and yelling and drove off leaving me there like discarded rubbish.\"\n\n\"I walked back to the house. Sassy and Greg found me.\"\n\n\"The day you cut your hair?\"\n\n\"Yes.\"\n\nShe takes my hand and leads me back toward the ute.\n\n\"Then when you came into my life, I started feeling safe again. You were Sassy's, but you were still there for me. I felt safe enough to be me again.\"\n\n\"Your hair?\"\n\n\"I let it grow, I get those wolf whistles and guys are jerks now and then but it didn't matter. I only really went anywhere with you and Sassy.\"\n\n\"Fuck.\" Seems to be my go-to word when I don't have anything intelligent to offer.\n\n\"So, that's my big H story. One of those bastards gave it to me. I hope it was the first one and the others got it too. I was in hospital for a week. I needed lots of stitches, the last one used his whole fist like it was a joke or something. The police came to see me, but I couldn't go through with it. I had let them catch me. They did things I didn't want but I let them. I know that thinking is wrong but it's how I felt. The first of them was admitted while I was still in there. Someone had broken his jaw, both arms and kicked him so hard in the testicles that one had ruptured. Two more ended up in hospital and the fourth one disappeared. Guess he heard what happened to the others and left town.\"\n\n\"Remind me to buy Blue a carton of Jamesons sometime.\"\n\n\"You'll need two cartons, one for Greg too.\"\n\n\"So full disclosure. The whole Katerina.\" She grimaces. \"Scared you off?\"\n\n\"And you reckon I'm a dickhead.\" I scoop her up and kiss her. \"You'll have to try harder than that.\"\n\n\"Okay, NOW I'm driving.\" She pushes me away and runs to the driver's door. As we rumble down the gravel road to the bridge and \"New Kahala\" I make a mental note to borrow Blue's tractor and shift that fucking rock.\n\nI'm reminded that Trina hasn't been home since March when we cross the little bridge and she lets out another patented, \"Get fucked!\"\n\n\"Did you do all this?\"\n\n\"Blue and Tony helped. Tony keeps it mowed now for you. Earns himself fifty bucks pocket money a week. He's been having fun at Bunnings.\"\n\n\"It looks like I remember.\" She says, opening the gate and looking up at the house. \"Just like when they were still here.\"\n\nShe is crying again. I think they're happy tears. \"We've started scraping the house lately. Tony's going to help me paint it.\"\n\n\"Why? Why did you do all this.\"\n\n\"Didn't really know at the time. Just made me feel good.\"\n\n\"Put your ute around the back. I need to shower and freshen up.\" There's a confusing look on her face. Part joy, part nervous smile. Whenever I'm confused about what a woman's thinking I err on the side of compliance. After shifting Effy around the back into the little garage that I'd cleaned out a few weeks ago, I got myself a glass of water from the kitchen. I'd almost finished it when she called from down the hall somewhere.\n\n\"Hey dickhead.\"\n\n\"Uhuh.\"\n\n\"Got a second?\"\n\n\"Sure.\" I follow her voice toward her open bedroom door.\"\n\n\"In here.\"\n\nTo find her standing in front of her dresser brushing her long wet hair and smiling those pretty lips and purple eyes at me in the mirror. Completely naked.\n\n\"I'm nervous.\" She says in a whisper.\n\n\"You're beautiful.\" I've never meant it more. She is small but perfectly made. Her skin is pink within tan lines that accentuate her heart shaped bum and, in the mirror, small round breasts topped with tiny dark nipples beg to be tasted.\n\n\"Do you want me?\" She finds my eyes in the mirror and asks quietly.\n\nI answer by turning her by the shoulders to face me and kissing her waiting mouth. She fumbles between us at my buttons and in no time I'm as naked as her. Pressing my chest, she guides me backward to the bed and urges me down on my back. She kisses her way up my chest as she straddles me then without fanfare or foreplay, she impales herself on me in one swift slick moment of pleasure.\n\nThis tiny elfin form above me holds me hilted within her body and captive in her eyes as she pulses around me.\n\n\"Sorry.\" She hides her eyes.\n\n\"What on earth for Kitty?\"\n\n\"I'm a little broken down there.\" Purple eyes plead with mine.\n\n\"You feel perfect to me. Like we were made to fit together.\"\n\n\"Not too big? I had lots of stitches.\"\n\n\"Perfect darlin. Perfect.\" And I mean it. She holds me like a glove. Not too tight, just like a perfect hot wet silky glove.\n\nTiny wet kisses play on my mouth as she moves me inside herself, grinding and writhing upon me. My hands claim the cheeks of her bum and finding a rhythm, she pushes up away from my hungry mouth and quickly bucks herself to a shuddering orgasm.\n\n\"Oh god. God Jim. So sorry. So greedy. So good. Oh, I've wanted that for so long. Oh god, don't stop.\" She rides her way through it, and I feel her insides clutch at me and I don't stop. I couldn't if I wanted to. As she pushes me in and out, my own end approaches, but I don't want this to stop. It's with almost sorrow that I groan and release inside her. Her eyes widen when she knows I'm cumming and she brings her mouth back to mine. Her tongue quieting my urge to cry out.\n\nI'm still twitching with aftershocks when she groans in my mouth and shudders through another wet pleasure of her own above me.\n\n\"Oh Jim.\" She falls floppy against my chest and plays with my face as she stares joyfully into my eyes. \"I love you dickhead.\"\n\n\"I love you, Katerina.\" I like the taste of her name on my lips.\n\n\"Kitty.\" She corrects me. \"I'm your Kitty.\"\n\nWe lie like that for long moments, I've softened but remain inside her. Her eyes are closed and she nestles in my neck, her lovely little boobs pressed against my hairy chest and the mess of us leaking around our joined bodies. I'm wondering if she is sleeping when she speaks. \"We're going to have to do that a lot.\"\n\n\"Oh okay. If we have to.\" Sarcasm is one of my best looks.\n\n\"I forgot how nice it was. I haven't had a man since that shitty day.\" God, I want to turn someone inside out. In pain, for her tormenters, in pleasure for herself.\n\n\"Well then, we have a lot of catching up to do.\" Are the only words I have.\n\nI think she feels me hardening again, in any case she slowly rises to resume her rocking on my cock. As I harden to fully erect, she already claims my mouth to cry into me in orgasm. Many beautiful moments later I fill her again and this time we're both sweaty and totally spent. She flops down on top of me. We don't get to enjoy this moment for too long as the sound of wheels on the gravel road spur us into action.\n\nHurriedly I dress while she sneaks a peek out the window and announces, \"Denise and Blue.\"\n\nGiggling like a naughty school kid, she grabs some clothes from her drawers and runs to the bathroom. I check my messy head in the mirror and tidy it a bit with Trina's brush then head to the kitchen to wash my hands and face.\n\n\"Hello?\" Denise calls as the gate creaks open.\n\nStanding on the verandah, I watch as Blue and Denise cross the yard and a small arm snakes around my waist. Looking down I see Trina smiling back. She's wearing a little yellow summer dress and looks at me like the kitten that got the cream.\n\n\"Holy fuck!\" I look back to the stairs to see Denise holding her heart and Blue sniggering at her.\n\n\"For a moment then...\" Denise mutters as she climbs the stairs, \"For a moment I thought it was Elmo and Astrid back to haunt me.\"\n\nWe both get big hugs from Denise while Blue explains. \"Saw the dust and thought we should check who was here. Didn't know you were coming and we've had some snoops about lately. What are you guys doing anyway?\"\n\n\"Ahem,\" Denise says, \"I know exactly what they were doing, and I think we should leave them to it... Jim, I've never seen your hair brushed so carefully.\"\n\nTrina blushes beautifully and I give a short, embarrassed chuckle.\n\n\"Well, Glad to see he came to his fucking senses.\" Denise says to Trina. \"I'm really happy for you both.\"\n\nBlue nods, \"How about you guys drop over around dark and we'll see about beer and a barbeque.\"\n\n\"Sounds good Dad.\" Trina agrees. I see Blue and Denise back out to their car and Trina waves from the stairs. As I walk back, Trina growls, \"Ready for round two dickhead?\"\n\nLEARNING TO SWIM\n\nBlue shares barbeque duty with me. It feels a bit strange. I've never seen him hand the tongs to anyone else except Greg who is up in Blackwater with the mines now. I can see Trina and Denise through the kitchen windows. They chat excitedly and I don't think I've ever seen Trina this animated.\n\n\"You reckon we could shift that rock down the driveway?\" I ask him, turning the sausages.\n\n\"She tell you then?\"\n\n\"As much as she thought I needed to know.\"\n\n\"I've tried to shift it in the past mate. Can't budge it with the tractor. Leave it with me. I'll talk to Greg about it, he might have some ideas. Did she tell you what happened to those cunts?\"\n\n\"Ha, she said they met the Karma bus.\"\n\n\"Well, three of them anyway. It's like the last one just disappeared. Fell down a hole or something.\"\n\nMy beer is empty, so I hand Blue the tongs and go to the kitchen to get a couple more. Trina is on the phone and giggles when she sees me then runs off down the hall with it.\n\n\"Sasha,\" explains Denise. \"Probably comparing notes.\" She winks and laughs to herself.\n\nFinding two beers, I turn to leave and I'm trapped in another of Denise's hugs. \"Thankyou for bringing Katerina back to us. I don't think you know what you're in for. Take your vitamins, eat well and hang on tight.\"\n\nLaughing, I kiss her on the top of her head and re-join blue outside. Trina finds us a little while on. She's still on the phone but in the process of saying goodbye. When she's finished she hands the phone to me.\n\n\"Congratulations mister.\"\n\n\"Hi Sasha.\"\n\n\"You've made her so happy. Thankyou.\"\n\n\"Well, you're welcome, I guess. A girl has never thanked me for bonking their sister before.\"\n\n\"Haha. Seriously though, I'm happy for you.\"\n\n\"Thanks. How's the study?\"\n\n\"Going well, almost complete but I have to defer my final units until early next year so that'll add some more time.\"\n\n\"Oh, something wrong?\"\n\n\"No. I um... I go in for minor surgery next week. I'll be out of action for a short time and have to make some ah... adjustments. Nothing serious, so don't go worrying Trina with it. Mum knows and I'll check in with her after. Promise not to worry Trina with it. It's not life threatening.\"\n\n\"Ok, well I hope it goes well for you.\"\n\n\"You too Jimmy. I am glad for you both.\"\n\n\"Bye Sasha.\"\n\nHanging up with a confused look on my I find the family silently watching me. \"What?\"\n\n\"Thanks for fucking my sister.\" Trina blurts out laughing, then jumps on my lap to hug me. Blue and Denise snort with laughter too. As I help Denise wash up later, I ask her about Sasha's surgery.\n\n\"Oh, um that... She's made me promise not to say too much to anyone about it. It's kind of well... Lady business. Not serious, so don't worry Blue or Trina with it. She'll be more than fine when it's over. Actually, I'm very happy for her. So, don't you worry either.\"\n\nTrina finds us chatting and makes a show of yawning.\n\n\"Oh, fuck off Katerina. You want to get this man home to bed but it's got nothing to do with sleeping.\" Denise laughs at her.\n\n\"Can you blame me Mum?\" She asks almost coyly.\n\n\"No, I think I might go and throw the old man a mercy myself later. You kids have fun. Oh, lady business. Come with me a moment Trina.\" They wander down the hall away whispering furtively and Trina reappears putting something into the pocket on her dress.\n\nWhen we've showered, I quickly discover what the thing with the pocket was. Towelling off, someone wraps their arms around me. A very naked someone who pinches my bum then giggles as she takes one, then on an afterthought two, condoms from the top drawer of the cabinet. Grabbing me by the short handle she pulls me along after her toward her bedroom.\n\nShe must have seen my confused glance at the condoms because she explains as we walk. \"Mum thought it would probably be a good idea until I get on some birth control. The doctors said I can't get pregnant but better safe than sorry.\"\n\n\"Oh.\" It's hard to make witty riposte while a beautiful naked woman is holding your penis leading you to her room.\n\n\"Deal breaker? The no kids thing? There's a chance with surgery or IVF if I want later. Just scar tissue.\"\n\n\"We'll just get lots of practice in till then hey.\" It's the least I can fdo.\n\nSo we practice vigorously. First, I practice by picking her up fireman style and rushing her giggling to her bed where I drop her to bounce and laugh. Then I practice by learning her body with my mouth from her cute little ears, past her eyes and nose, lingering a little longer on her mouth then chin and neck. I love her collar bones and spend more than a few moments just below them on her perfect breasts and their tiny nipples.\n\nWhile I'm practicing on her nipples, licking and gently nipping her hands urge my head lower still across the slight swell of her tummy to the hot mound that's thrusting for me. So, I practice teasingly along each side of her pouting swollen pussy. Blowing warm breath on her tiny hooded clit then I move down her thigh kissing my way teasingly down to her toes.\n\nPractice makes perfect they say, and I discover a thing about her as I pull her big toe into my mouth and swirl my tongue around it. She moans as I repeat the movement on each of her toes and swap to the other foot. As I suck the big toe of her other foot she squeals and suddenly clutches her sex with both hands, bucking on the bed and watching me through frightened pleading purple eyes.\n\n\"Oh god. How? How. My god. Fuck. Stop. Stop... too much.\" So I put her foot back down gently and kiss my way back up her other leg.\n\n\"No-one ever... Amazing. Oh god. I fucking came...\" She huffs grasping my hair and pulling me away from my almost claimed prize to kiss me passionately. \"How did you know that?\"\n\n\"I didn't and I have more to learn.\"\n\nShe spreads her legs as I move back down over her breasts again and plant kisses on her mound, teasing around the outside of her slick slit. I push her legs apart even further and push her knees up to gain access to her bum cheeks and I kiss them too. The smell of her arousal is my new favourite thing, so I follow it with tiny kisses back to its source where I am confronted by a scar that runs jagged from near her butthole to the base of her vagina.\n\nSaddened I kiss it like I'd like to kiss it better. My nose is pressed against her sodden lips and they gently part as I move up slowly to lick along her, over her opening and upward to the little hooded prize above. She gasps when the tip of my tongue lightly flicks her nub then travels down to probe inside her. Her hands at my hair insist on my return to her clit so I slide slowly back up and suck her into my mouth.\n\nShe's moaning now in time with my pulses of suction and I add a gentle lick to her swollen clit while shifting to slide two fingers inside her. Inside of her my fingertips learn her walls, finding the roughened spot inside at the top that brings a louder moan and then further back I circle her cervix and I'm saddened again by the rough tissue there. With each circle I draw around her cervix she thrusts against my face and tongue and her moan has become one long guttural plea for release.\n\nMy tongue crescendos on her clit and she thrusts against my fingers and I'm rewarded with the slapping of her thighs to my ears as she clenches at my fingers in rhythmic synchronicity to her voiced, \"Oh, my, god, Jim, god, fuck, fuck.\" My tongue baths her with gentle pressure as she crashes through her climax. \"Get up here dickhead.\" She growls eventually, \"Up here. Let me kiss you.\"\n\n\"I love the smell of me on you.\" She mumbles around my lips and tongue. \"I'd love to return the favour but right now I need you in me.\"\n\n\"Condom...\" I look around for them and see them on the dresser.\n\n\"Fuck the condom. Just fuck me dickhead.\"\n\nHer hair is spread around her beautiful face in a mess of golden curls. She looks like an angel as I push into her. Two heels against my bum urge me deeper as I stare down at her face twisting in pleasure. When I drop to my elbows to kiss her and my weight falls on her pelvis, she groans into my mouth and thrusts against me. I rock against her moving just in and out a few centimetres at a time.\n\n\"God, so good Jim. So deep. Don't stop.\"\n\nMoving in time with her cries of \"ah, ah, ah,\" she clutches at my back as she moves against me also. This thing we're making seems bigger than just the two of us, I can feel it building in me as well. Her small cries match the tightening spasms in my balls and as she shrieks in pleasure and comes around me, I pump her full with my own orgasm. We're frozen together in this moment of mutual pleasure. Fused in body and moment.\n\nMy arms threaten to drop me on her tiny frame and I shake as I hold my lips still against her gasping mouth, trying to catch my own breath, watching as her eyes search mine for explanation.\n\nEventually she speaks. \"I love you Jim. So much right now I don't think I can hold it all in.\"\n\nTears form at the corners of her eyes and swell till one breaks free to roll down her beautiful cheek.\n\n\"We'll grow into it Kitty. I love you too.\"\n\nShe holds her palm against my face. \"I love you, now get off me dickhead. I'm serious I don't think I can hold all that in either.\"\n\nRolling off her, I'm followed by a gooey slippery mess that pools beneath her. Laughing, she grabs my discarded towel and balls it up between her thighs.\n\n\"Oh my fucking god Jim. What just fucking happened?\"\n\n\"Pretty sure they call that sex, Kitty.\"\n\n\"Nope, that was more like making something out of both of us. Maybe that's what they mean when they say making love and fucking are different.\"\n\n\"You're a sappy thing when you get your rocks off.\"\n\n\"Haha fuck you.\" She smiles across at me.\n\n\"Again?\"\n\n\"Hell no. You even touch me down there right now and I'll hit the fucking ceiling.\"\n\nKissing her quickly I rise from the bed. \"Loo. Back in a tick.\"\n\nOn the way back I grab a tall glass of water from the kitchen. I hear the toilet flushing as I pull back the bedspread and climb in between the sheets.\n\n\"Water on the dresser.\" I tell her happy head when it pops into sight.\n\nShe smiles and turns off the light. She sips the water and stands their naked in the moonlight and I know I'm truly fucked. If I thought I've loved before I've never known this depth of it clearly.\n\n\"What?\" she asks crawling in beside me."
    ],
    "authorname": "Rollinbones",
    "tags": [
        "drama",
        "love story"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/new-kahala"
}