{
    "title": "The Mystery at Faldor Hotel Ch. 08",
    "pages": [
        "Walking the lighthouse footpath with Bess, George's mind was awash with thoughts of sexuality that were becoming more perverse by the minute. Most prominently, and also most disturbing amongst these thoughts, was her cousin's shapely posterior, the way her schoolgirl's skirt rode up in back to show off those see-through, blue lace panties. The sight teased her until she had to force herself to stop looking, but she'd already seen it, her imagination already allowed enough fodder to fantasize about what it would be like to pull the back of that skirt up for a peek at the rest of her cousin's behind, maybe place her hand there and softly caress her cheeks, squeezing at their bottoms before slipping her fingers between her legs... \n\nShe would force these fantasies from her mind, admonishing herself for them while reminding herself that it was bad enough that it was Nancy who she really wanted. Did she really have to let her mind be a total slut, betraying her feelings for her dark blonde friend with lust for Bess, her own cousin at that? \n\nThis guilt would bring on thoughts of Elora and how she'd already, in a sense, cheated on Nancy with her. Of course, she and Nancy weren't together so George understood that it wasn't, in a strict sense, cheating, yet Nancy's encounter with Ned felt that way. While this fact did rationalize her own illicit encounter in Suite 305, it somehow didn't help to alleviate any guilt from the closet lesbian's mind. \n\nAnd, while thinking of her encounter with Elora Sasser, the darkly beautiful, well-endowed Dining Room Hostess, it was impossible not to again start thinking of her tongue. Was that real? Did that really happen? George was mostly convinced, despite her loss of virginity, that it must have been some alcoholic hallucination. Apart from communion wine, she'd never had so much as a drink before, but she'd seen drunk people and how erratically they could act, how their judgement and perceptions were obviously compromised. How did she really know the effects it could have on her? Wasn't it possible that she'd mistaken what she'd seen that night, that she'd hallucinated the writhing tongue, even that the whole thing was no more than a dream she'd had after she'd passed out? And, considering the drinks she'd had at the boutique, wasn't this also a good explanation for her current thoughts of Bess and her sexually inviting body? \n\nReturning to Elora, more upsetting was the memory of how good that imaginary tongue felt, both at the back of her neck, and then snaking around inside her. Her mind lingered on how it had rammed through her virginity and brought on the sudden, intense explosion of physical sensation that started between her legs, and then whipped through her entire body as though she were having a seizure. A sudden mental image, a fantasy of the unnatural thing slipping from Elora's mouth to explore under the back of her own hiked schoolgirl's skirt, inside her pink panties and then up inside her sex brought on a flush of excitement and shame as she walked beside Bess. \n\nShe had to force the image from her mind, only to be then left with the sudden shame of walking around in public the way she was and how that very shame only added to the excitement of it. She wondered what had even gotten into her head that would make her think such public indecency would be acceptable before remembering hers and Nancy's curiosity about doing such a thing, their brief conversation regarding this topic the night before and how she now had the answer. It was exciting and shamefully fun. Anyway, there was also Anna's observation of how overdressed she would have felt beside Bess had she not left the boutique dressed like her. While recognizing the absurdity of such reasoning, it nevertheless held, perhaps only propped up by her intense sexual arousal of the moment. \n\nIn the face of all her inner debate, the one sure thing in George's mind was that it might be a good idea for her to stay away from alcohol. \n\nAs did George, Bess walked in deliberation. She also pondered how she could see her present wardrobe choice as acceptable, but more out of curiosity than concern. She loved how it made her feel, how good she knew she looked in it and, though she was filled with apprehension about it, the possibility of meeting someone, a man, or men in particular, excited her. All morning, she'd been thinking off and on of Ray and Brent's molestation of her body in the boutique, the brazen way they'd touched her, hiked her top and dress and put their hands where they'd wished. She thought of their big, slick, hard penises and how inviting they'd looked, how she'd had the almost overwhelming desire to grab them, wrapping her fingers around them and squeezing while shamelessly allowing them to fondle her beautiful young body. Walking along with these thoughts, she couldn't help the sudden and vague notion that her body was meant to be fondled and played with, that she herself was no more than a plaything for anybody who wanted to entertain themselves with her. This notion excited and pleased her. \n\nBess was also becoming quite excited by the attention George was giving her body. She'd thought she'd noticed her cousin looking at her in that way before, most notably when she'd removed her bra for Manny, but she'd chalked that up to a naturally expected reaction to seeing Bess so inappropriately dressed in front of the horny bellhop. After all, Nancy had also stared at her chest, but it was different with George in a subtle way that her mind had easily rationalized away at the time. Now, however, after events in Annabelle's Boutique and the very strong suspicions about George that those events had planted in her mind, Bess was sure those looks were about a lot more than shock at her inappropriate behaviour. George, Bess was now quite sure, was a lesbian, thus explaining her sometimes tomboyish behaviour and lack of interest in boys. Furthermore, the gift she'd picked out for Nancy in the boutique spoke of feelings for their friend that amounted to more than just friendship. She'd often noticed the way George would dote on Nancy, complimenting her, praising her and even sometimes practically hanging off her, but disregarded this behaviour in the belief that George simply admired Nancy as a person and therefore valued her as a close friend to the point of being a bit of a suck-up. Of course, Nancy responded to this as anybody would, understandably taking George's almost sycophantic friendship as nothing more than loyalty, which anybody would naturally appreciate and value. \n\nBut now George's eyes were on her. All over her. And it felt as good as it did when men looked at her, but for different reasons. One reason was that, other than Anna's inexplicably tempting invitation to play with her and the large, black, double dildo, she'd never before considered women as sexual interests. The new idea of such a thing carried such forbidden excitement that Bess couldn't ignore it, but there was another, pettier reason for this excitement where George was concerned. It felt good that one of the two girls that had so often made her the butt of jokes regarding her weight and appetite now had a sexual attraction to her. In Bess's mind, it was a sort of rare, perverse justice of life and the thought of seducing George, of taking her from Nancy in some respect, held a fascination that her ego couldn't resist. \n\nAt the end of the walk, the lighthouse now in front of them, Bess asked, \"Okay, so where did you two find it?\" \n\n\"Huh?\" George asked, snapped from some very unwholesome thoughts about her cousin's body, only to notice that Bess's nipples were pressing at her top even through her bra. \n\n\"Susan's Bikini,\" Bess explained. \"Where did you find it?\" \n\n\"Oh, uhh, around the back of the lighthouse, but we should really check out the whole area.\" \n\n\"You're right,\" Bess agreed, adding, \"Not that there's a lot to check out here.\" \n\nNevertheless, they closely inspected the clearing in front of the lighthouse, and even the tall grass and weeds between the edges of the clearing and the steep, bouldered embankment that fell away to the water for any clues. Finding nothing, they agreed to split up, round the lighthouse and meet at the back. At the last moment before the old building cut off their line of sight of each other, Bess turned and caught George looking her over. George's hungry expression turned to one of surprise and then guilt, but Bess only smiled. \n\nSearching the pathway to the left, Bess continued to smile at the situation. The usually unflappable George was suddenly so nervous now, so unhinged at her attraction to her own cousin and the way her sexuality, previously a non-issue, was suddenly such a factor. For the first time since she'd known her, George was on her heels and this was something else that Bess found quite satisfying. \n\nMeeting at the back of the lighthouse, neither girl had found anything. They both, however, continued their close study of the ground where the bikini had been found. \n\nGesturing towards the rocky embankment that led down to the water's edge, George said, \"Well, I guess you were right.\" \n\nLooking herself, Bess saw how the large rocks here had been arranged in such a way as to form a rough stair set leading six feet down to the water. From where they stood looking down, the stairs seemed to continue on beneath the surface. \n\n\"About what?\" Bess asked, both of them peering through the water. \n\n\"She was probably skinny-dipping,\" George clarified. \n\n\"Hmmm...\" Bess commented, looking up and in the direction of the Faldor. \"Well, it would seem to be the perfect spot, but anybody could see from the Hotel.\" \n\nGeorge looked too, seeing a handful of people on the rear veranda that Nancy had told them about, one of them standing out in what looked like a red dress, one like Nancy owned. \n\n\"Not very well.\" \n\n\"Well enough that they could have seen she was naked.\" \n\n\"Maybe she didn't care,\" George theorized while kicking off her new heels. \n\n\"Maybe,\" Bess agreed, theorizing further with, \"Maybe she came here at night when nobody would see anything from the hotel.\" \n\n\"I don't know,\" George replied doubtfully as she began descending the natural stair set, \"It was pretty dark back here last night, and that was with a clear sky and starlight. These stairs would be pretty dangerous at night...\" \n\nShe paused and looked around at Bess, both girls wondering if they hadn't just found a possible explanation for Susan Quinn's seeming disappearance. As though the possibility of a fall that resulted in Susan's drowning, the tide then carrying her body out to sea was too horrible to contemplate, George turned and continued downward, neither girl postulating further on this gruesome and tragic theory. Coming to the end of the stairs that were above the water's surface, she tentatively stuck her foot into the water, finding the next one and resting her weight on it. \n\n\"George, be careful,\" Bess warned while eying the portion of her cousin's derriere that hung out from under the back of her skirt. Her white garter straps and stockings with those pink panties looked so sexy and she wondered if George was aware of how invitingly the wide gap between her thighs exposed her crotch. \n\nWithout answering, the more adventurous of the two cousins continued on her way down the stone stair set until the water had passed the tops of her stockings and was almost to the hem of her sexy little skirt before she stopped. \n\n\"There seems to be some kind of landing here,\" she reported. \"Flat stone...\" \n\nGeorge carefully struck out in a straight line from the stairs in an effort to find out how large the underwater surface was. At approximately eight feet from the foot of the stair set, her foot found an edge and, after further exploration, George determined the surface to be roughly square. With a questioning expression, she looked up at Bess, momentarily distracted by the fact that she could see up the front of her cousin's skirt from that angle and, while she could see no real detail at that distance, she did see that Bess's panties were also see-through in front. \n\n\"Maybe a dock of some sort?\" Bess offered, not missing George's lingering gaze up the front of her skirt. \n\n\"Un- (ahem) - under the water, though?\" George answered. \n\nStepping to the very edge of the top stair, Bess replied, \"Is the tide in? If it is, maybe it's above the water when the tide is out.\" \n\n\"I don't know,\" George admitted, not able to help another glance up Bess's skirt, even though the blonde was looking right at her. With a flush, she added, \"It's possible, but a person would have to be pretty careful approaching a submerged dock like this. It could tear the bottom of a boat right open.\" \n\nWith a shrug and a pointed look down George's blue sweater, Bess said, \"This is a pretty old lighthouse. Maybe the platform was a lot higher when it was built and it's settled since then. It would certainly be heavy enough and, given enough time...\" \n\nGeorge allowed her gaze to travel up the tall structure that loomed above her in an attempt to cover another blush at Bess's attempt to see down her top while informing, \"The Colonel implied that he knew some history of the Hotel. I wonder if he might know about this.\" \n\n\"Possibly,\" Bess replied. \"Regardless, I'd say it's a pretty safe bet that Susan was skinny-dipping here. It really would be the perfect place and, since she didn't mind the Colonel and Billybob watching her swim at the hotel in that skimpy little suit, it's quite possible that she wouldn't have had any problem with anyone watching her skinny dip from the hotel. The only real question is why she'd just leave her suit here after she was done. For that matter, why would she even wear the suit if she was only going to go skinny-dipping anyway? She could have just worn some clothes, taken them off, and then put them back on to leave after she was done.\" \n\n\" ... Maybe she wasn't skinny-dipping after all,\" George said, still looking up at the lighthouse. \n\nSeeing where she was looking, Bess turned and looked up. At the top of the old structure was a railing, denoting an outer walkway of some sort up there. Her eyes then travelled down the peeling structure to the weeds at the edge of the footpath where George and Nancy had found Susan's bikini the night before. \n\nMinutes later, the two girls were standing on the other side of the lighthouse, in front of the door that protruded from the side of the cylindrical building. Taking the knob in hand, Bess found the door to be unlocked. Entering first, George followed, closing the door behind them. \n\nThey discovered the ground level interior to be a long abandoned living quarters. In the center, illuminated by indirect sunlight from above, was a large, old desk. Its top was covered in dust and a backless, wooden chair was pulled up to it. Opposite the door and against the wall was an old fashioned metal bed, its spring frame bare of mattress and also covered in dust. Beside it was an old chest of drawers, three of its four drawers missing, the pieces of which littered the floor along with an old pot with no handle, half a pair of scissors, a bent spoon and other assorted debris. \n\nIn her wet stockings, George approached the foot of a circular staircase that led up the inner wall, spiralling high up to the top of the structure. Realizing what type of up-skirt view that climbing these steep stairs would provide, she paused, looking back at Bess. Her mouth opened to ask which of them should go first but, as though thinking better of the question, she shut it and continued to look at Bess. \n\n\"Would you like me to go first?\" Bess asked. \"It's okay if you want to look up my skirt.\" \n\nPoor George was flabbergasted. Her face reddened again, deeper than ever at her cousin's implication that she'd want such a view but, before she could gather herself well enough to deny this, Bess pushed past her, their breasts rubbing as she admitted with a rather naughty smile, \"You can look at me like that all you want. I like it.\" \n\nGeorge stared after her, her jaw sagging as the well-endowed blonde started up the narrow stairs. There seemed little to say in return, so she simply started after her, staring in mild, paranoid shock at Bess's bottom as she mounted each step with a pronounced wiggle. \n\nShe kept staring as they circled the inner wall, higher and higher, mesmerized by the sight of Bess's heavy, pouting vaginal lips as they filled the crotch of her see-through, lace panties. Even her little anus was visible, the puckered orifice as much a turn on for George as her cousin's inviting sex was. As mortified as she was at having been given permission to look all she wanted without having denied any wish to do so, she couldn't look away and her own arousal was approaching the point where it might drive her mad if it wasn't satisfied in some way. \n\nAfter winding tighter and tighter in on itself, passing three round windows that let in the sunlight, the staircase levelled off at a small landing that allowed for a door in the outer wall. Beyond the landing, the stairs led only a little further up before ending at a trap door, but Bess stopped at the landing. This door, like the one that gained them entry to the tower, was unlocked and led outside to a gallery that ringed the outside of the lighthouse just below the lamp room. \n\nThe Gallery offered a good view of the town from its height and, other than that of the Faldor, they could look down on all the buildings in town from there. \n\n\"Look,\" George said, pointing inland. \n\nHer finger led to a somewhat large, single story building within the trees. Its roof was covered with weathered gray, cedar shingles and was full of holes, one section actually caved in. What looked as though it was once a large outer yard was half grown in with shrubbery and young trees. The remains of a roadway, now more a walking trail as it had also grown in, led towards the town, coming out of the trees a short distance beyond the last building along the chip sealed secondary highway. \n\nBess nodded, saying, \"It looks like some kind of old factory. Look, there's another one to the right.\" \n\n\"I see it,\" George reported, momentarily distracted from Bess's body by the view from the gallery. \n\nThis site was larger, but consisted of several buildings, some of which had collapsed. The overgrowth there was more marked than at the first site except for the trail that connected the two abandoned facilities. \n\nAfter a detailed survey of the rest of Cinder Bay that this perspective offered, George focused on the Faldor. The figure she'd earlier seen on the veranda, the one who looked like a woman wearing a red dress such as the one Nancy owned, was now standing in the water. Whoever it was, she appeared to be wading, perhaps knee deep while somebody watched from the veranda. George wondered if it was Nancy with the Colonel watching, but that didn't seem like the type of thing her long-time friend would do. Then again, hadn't she just been doing the same behind the lighthouse? \n\n\"Let's move around back,\" Bess suggested, \"and see what we can see from there.\" \n\nWithout verbal answer, George followed her, vaguely wondering at her suddenly overactive hormones while almost helplessly looking at her cousin's bottom again. Well, Bess did tell her she could, had even told her that she liked it, so why shouldn't she look? \n\n\"Oh!\" Bess exclaimed, bending at the waist and picking something up. \n\nThe thrill this maneuver gave George was interrupted by what Bess had retrieved from the gallery decking. It was a clear plastic package with blue and yellow cardboard liner inside of it. The package, about two and a half feet long and approximately three inches wide and deep, was empty, but Bess's face displayed a knowing smile as she held it. Looking closer, George read from the labeling, 'King Shlong'. ",
        "\"What is it?\" the slender brunette asked. \n\nBess, though still smiling at the all too familiar box from Annabelle's Boutique, replied, \"It's uhhh... heh... well, it's for women.\" \n\n\"Huh?\" \n\n\"Two women.\" \n\n\"But, what is it?\" \n\n\"Bess explained it to her cousin, telling her afterward that she'd seen one on display at Annabelle's the first time she'd visited. \n\nGeorge could only stare, her mouth working without sound as she visualized two women using such an ingeniously naughty implement. \n\n\"Sooo...\" Bess pondered, still with that knowing smile, \"This would suggest that Susan was up here on the gallery... with some other woman... took off her bikini, dropped it over the side and then, later on, left... naked?\" \n\n\"My heavens,\" George almost whispered. \n\n\"I know,\" Bess giggled. \n\nThere seemed little else to say and the two soon returned to the door leading inside, taking their clue along with them. George's head was filled with what it would be like to use King Shlong with Nancy, the both of them sitting across from each other with their legs spread as they pumped one another to mutual bliss. Before long, the idea that she could return to Annabelle's and buy one for herself found its way into her mind and this was what she was thinking as she closed the door behind her. These thoughts, however, were soon pushed out by the sight of Bess once again mounting the stairs ahead of her, climbing the short distance from the landing to the trap door. \n\nWith the refreshed view of her cousin's nether regions practically in her face, George's unexplained arousal began to escalate as they reached the trap door. As Bess prepared to tackle it, one foot on a higher step than the other, George stepped up so that her face was mere inches away from her cousin's snatch. Bess's womanly aroma filled her nostrils and she moaned so low that even she barely heard as she slipped her hand under the front of her own skirt. She barely had time to press fingers to her clitoris, emitting a short gasp when the trap door opened, bright sunlight spilling down on them from above. \n\nThe door slammed down on the floor of the lamp room and Bess climbed the rest of the way up, allowing George to do the same. For safety's sake, Bess bent and closed the trap door again, this repeated maneuver causing her skirt to ride up quite far in back while George watched. With another slam, the door closed to the floor and Bess stood upright and turned around to fix George with a knowing grin. George flushed again and returned a guilty one before she looked away. \n\nThe lamp and the giant lens around it still occupied the lamp room. Surrounded on all sides by windows, the walking space around the lamp was somewhat narrow and offered no apparent clues, so the two went back to the trap door to begin their ascent. This time, however, Bess stood back to allow George to open the trap door, once again giving her that knowing smile that George could only ignore. One having achieved her task, George straightened up, blushing again as she tugged down at the back of her skirt even while knowing it wouldn't accomplish anything. Though she didn't see it, she knew that Bess had taken her turn to look up her skirt and there was no denying the thrill this gave her. \n\nBess started down first, George following, and it wasn't long before the empty package that her cousin carried caused more perverse thoughts to run through her head. In an effort to remove them from her mind, along with any thoughts Bess was having about her sexual orientation, she broke the thick, hormonal silence between them with a rather loaded question. \n\n\"What makes you think I like looking at your body?\" \n\n\"The fact that you always are.\" \n\n\"It's just the way you're dressed. I'm not used to seeing you like that, is all.\" \n\n\"Oh,\" Bess replied, obviously not convinced. \n\nAfter an uncomfortable pause, George stated, \"I'm not a lesbian. Really.\" \n\n\"Would you tell me if you were?\" \n\n\" ... Yes.\" \n\n\"Have you ever been with a boy?\" \n\n\" ... What do you mean?\" \n\n\"I mean, have you ever had sex with one?\" \n\n\"No.\" \n\n\"Ever at least kissed one?\" \n\n\"Yes.\" \n\n\"Lips or cheek?\" \n\n\" ... Lips,\" George lied. \n\n\"How about a girl?\" \n\n\"No!\" George lied again while her memory briefly cut to Elora and her wonderfully horrid tongue which must have been a hallucination. \n\nBess stopped up, pausing as though in thought before turning around, fixing George with that knowing smile once again before asking, \"Do you want to see my boobs, George?\" \n\nAgain, George's mouth worked with no sound coming forth, her face reddening at Bes's shocking offer. She knew she should decline and she indeed wanted to for the sake of her reputation, but the fact was that she did very much want to see Bess's boobs. Her hesitation, as it turned out, was answer enough and, before she knew it, Bess was raising the front of her top to her neck. \n\nBess's bra, George found, matched her panties and she could easily make out her dark areolas in the open lace design. In fact, her erect nipples were poking right through the lace cups and George found she couldn't look away as Bess stuck her hands inside the cups and slowly turned them out for George. She watched them as though in a trance as they spilled from their restraints, showing their full shape and size, their perky lift and amazingly erect nipples. Bess even bounced on the balls of her feet a little, holding on to the railing with one hand while holding her top clear with her other. \n\n\"Oh, Bess...\" \n\n\"Do you like them, George?\" \n\n\"Why... they're perfect,\" she replied in a small voice without taking her eyes from them. \n\nA moment later, Bess looked at the front of George's skirt, it being at her eye level, and said, \"Let's take your panties off.\" \n\nThis did get George's attention off Bess's chest but, before she could answer, Bess reached up with both hands under the front of her skirt, taking the waistband of George's panties in her hands and pulling them down. George gasped as they slid down past the tops of her stockings. Out of instinctual reaction, she moved to grab them but, the next thing she knew, they were at her ankles. \n\n\"Bess!\" she hissed in alarm. \n\n\"Oh, they're pretty,\" Bess remarked before prompting her to step out of them with her hands firmly clasped just above her cousin's ankles. \n\nA moment later and with a rather wicked smile, Bess held them up, then flung them over the railing and away. George could only stare at her audacious cousin, lower jaw agape as Bess smiled back. \n\n\"Why did you do that?\" George managed. \n\n\"I don't know. I wanted to.\" \n\nGeorge was at a loss, her eyes going back to Bess's chest as if some explanation would be found there. She was so turned on, but also confused by hers and Bess's behaviour, especially when Bess's hand rose to the front of her skirt and slowly pulled it up. \n\nBess watched excitedly as she slowly revealed George's snatch with no interference from the tall brunette, noting that the neat sex of her cousin was shaved and smooth beneath a tuft of black pubic hair. Her thin lips were parted, clitoris extended and she was obviously wet and ready for anything. Glancing up at George's face, she would have been hard pressed to define her expression. Using her other hand, palm and fingertips up, she touched George just below her opening, getting a breathless gasp in return. \n\n\"Oh, Bessss!\" George moaned as the blonde slowly ran her finger over her hole, rubbing her clitoris and stroking her entire length between her lips. \"Uhhh-hh?\" \n\nShe then turned her hand over and ran her finger down, George taking the front of her skirt to hold it for her while watching in open mouthed awe and excitement. Adding a finger, she teased George's clit, making the slender brunette flinch and gasp before slipping those two fingers right up inside her. \n\n\"Uhhhhhh!!\" \n\n\"Why, George!\" Bess exclaimed, \"I thought you said you'd never been with anyone!\" \n\nShe'd said it with a teasing smile, but she was more interested in probing her cousin's depth than her lie, comparing it to her own. The soft, wet smacking sounds this exploration made excited her further and she enjoyed the look on George's face as she jerked and moaned. She slowly pulled her fingers out and held them in front of her face, shiny and wet with her cousin's juice. Opening her mouth, she stuck out her tongue and licked them as George gasped again at her cousin. \n\n\"Mmmmmmm! Oh, George... you taste delicious!\" She exclaimed, putting her fingers into her mouth afterward to suck them clean. \n\n\"B-Bess! What are you- uhhh-hhhhnn!\" George groaned as Bess's fingers again disappeared up inside her. \n\nMoments later, Bess was again tasting George's essence, licking, then sucking her fingers clean. This time when she was done, however, she leaned closer to George, her face between her legs and, while George continued to watch in disbelief, still holding her skirt up in front, Bess licked her wet snatch from bottom to top, then kept licking. \n\n\"Oh, Bess! Ohh, Bess! Ohhhh, Beeeesss!\" \n\nBut she could only watch, twitching and jerking to the pleasure Bess's dancing tongue gave her. It swept her open slit, teasing and washing her clitoris, poking at her opening and bathing her lips. \n\nSoon, Bess fastened her mouth right to George, no longer just licking, but sucking her opening, alternately massaging her clitoris with her tongue and poking at the entrance to her canal, trying to worm up inside for more of George's essence as Elora's unnatural tongue had. Her hands had moved to George's buttocks, holding her there as she feasted, looking up at her cousin from just beneath her black tuft with half closed eyes, and obviously enjoying herself very much. \n\nGeorge couldn't believe this was happening, her mind disjointedly wondering if this wasn't another hallucination, her own cousin Bess, wantonly licking and sucking at her private area while all she did was hold her skirt for her and watch. But it felt so good and it was feeling better and better. Their eyes were locked in forbidden passion as this went on until she felt herself approaching a place where, surely, the pleasure Bess was giving her would be too much to bear. \n\n\"Be- Oh! Oh! Oh! Oh, Bess! Sa-!\" \n\n\"Mmmplpp, mmmm, ulmmm (slurp) mmmmmm.\" Bess replied. \n\nGeorge's hips bucked hard as pleasure suddenly increased tenfold. Sound and vision faded as she gripped the railing tighter throughout an experience she remembered from being with Elora. She squealed a few times in a high voice as pure pleasure shot through every inch of her body. It was so intense that she had to grab Bess's hair at the back of her head and pull her face from her well satisfied sex. \n\nShe found herself sitting down on the stairs, leaning back a little with her legs wide open, Bess looking at her with a smile and a soaked face. Head lolling, she struggled to bring some sense to her existence as her bare breasted cousin moved up a stair, then two more, her feet straddling George as the brunette stared up her skirt. Bess's full lips loaded the lace crotch of her panties, her extended clit poking through the open lace as her nipples had been in the matching bra. Face upturned, she never protested when the blonde went to her knees, bringing her completely hairless sex to within two inches of George's face. \n\nStill trembling from her orgasm, George stared at the thick, white cream that oozed from her cousin's opening and, when Bess's hand at the back of her head helped her lips to hers, she didn't resist. \n\n\"Kiss me, George...\" Bess breathed. \n\nShe did, lightly pressing her lips to Bess's sex. The thick cream stuck to her lips and, out of reflex, she tried to lick it away, only to find two things. First of all, it was sticky enough that it stuck to her upper lip, and what felt like a thick string had formed between it and Bess's opening. Second, she enjoyed the taste. She licked her lips again, but the thick goo wouldn't clear. She kissed her cousin's opening again, soon licking Bess's pouting pussy through the lace as Bess moaned from above. \n\nBess's moans, however, became frustrated and George soon understood why. Lifting herself only far enough to allow for her Hands, Bess reached down and tore the fragile lace crotch open. Bess's pussy dropped slightly, squeezing between the two outer seams, and George's tongue was waiting when she settled herself back on her face with something between a sigh and a happy moan. \n\nGeorge's tongue, now unimpeded, was able to curiously explore, for the first time, a woman's vagina. She loved Bess's taste, her thick essence, the way her labia parted for her tongue and how her hard clitoris felt against its swishing tip. All the while, Bess's gooey essence stuck to her lips and infiltrated her mouth. George soon began swallowing it, moaning with pleasure at performing this act, loving how her face was trapped by soft inner thighs. All she could see was pussy. All she could smell was pussy. All she could taste was pussy, and all she wanted was pussy. \n\n\"Ahh, yesss, George, lick my muffin...\" Bess moaned. \n\nSupporting herself with her hands on the stair just above the one that the back of George's head rested on, breasts thrust out from between her arms, she began to ride her cousin's face a little. Not only was she enjoying the physical sensations of this lewd act, but it was the fact that it was her cousin that made it better, more forbidden and therefore more enjoyable. Also, there was the fact that one of the two friends who'd always made jokes about her weight was sucking from her opening as though it were the wellspring of life. For Bess, it was as satisfying in a personal sense as it was physical. \n\nGeorge's happy moans rose from between her legs, the brunette's hands finding their way up to Bess's breasts to squeeze and fondle while she licked and sucked, making deliciously wet smacking sounds in her tongue's new playground. It wasn't long before the now familiar feeling of impending pleasure overload came to Bess's senses. Her moans grew louder as her legs spread further, her eyes rolled back a little as their lids fluttered, tingles travelling from the sides of her neck, down to her bottom as George pinched and rolled her nipples. \n\n\"Oooooh, George!\" she strained in a high voice. Ooooh, my clit! Lick- keep licking my clit, George!\" \n\nGeorge didn't need to be told. The more she licked Bess's clitoris, the more of her thick, creamy essence seeped from her opening and into her waiting mouth. She could feel her getting close to the same release she'd just experienced, could feel Bess's body tightening, almost vibrating as she rubbed herself against George's face. \n\nAhhh, George! George! George, omigod, George!\" \n\nTaking one hand from Bess's breasts, she placed it instead at her cousin's lower back, pressing her closer and holding her there. This move seemed to precipitate the crashing of Bess's senses as she let out a high pitched wail, her body convulsing in the extreme pleasure overload that she'd experienced on the exer-cycle, and then later in Suite 408's bathtub. It was divine, the best thing in the world and Bess, in that moment, knew that she was addicted to it, that she and her cousin would do this again, that she would experience this sensation with different people and in as many different ways as possible. \n\nGeorge, meanwhile, found herself almost drowning in sudden, spurting explosions of Bess's essence. It coated her face, filled her mouth and, as she willingly swallowed the sweet, thick stuff, her only thoughts were of how good it felt to be a bad girl."
    ],
    "authorname": "Ameaner",
    "tags": [
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-mystery-at-faldor-hotel-ch-08"
}