{
    "title": "The True Master Ch. 11",
    "pages": [
        "February 25 2016: \n\n*The True Master* \n\n\"What do you mean you found Beth?!\" asked Tracy. \n\nI pulled up the schematic on the computer, \"I found out where the Company bases its operations in the City. She's apparently being used as the test subject for the newest variant of Doll, her and a dozen other people.\" \n\n\"Test subject!?\" said Tracy her voice rising to such a level that I winced. \n\n\"If it makes you feel better all of this stuff is experimental!\" I said. \n\nTracy turned to glare at me, Kate leaned over, \"Not helping Master.\" \n\nI nodded and continued, \"The building where they are based had their servers slaved to back up to the facility that Jeremy got me access to. I essentially have access to everything but the most secure servers in the building. Those secure servers happen to be the research and they have the source code for the dolls so no joy on finding anything to help me deactivate your chips. It did give me the tracking database though.\" \n\nTracy blinked, \"Tracking?\" she asked. \n\nI nodded, \"The older model Dolls, like all of you for example don't have active tracking. You're supposed to ping the Company whenever you're plugged into one of the tablets so they can keep track of you that way. The newer model like Beth have actual GPS tracking.\" \n\nI pointed at the small red dot representing her location inside the basement of the building she was in, her dot was clustered among a dozen other small red points. \n\nDr. Song frowned, \"could you show us all of the Dolls, not just the new ones?\" \n\nI nodded and turned back to my computer, I had seen the raw data for this statistic already and it was not pretty. \n\nIt took my computer and the entirety of the server farm I had slaved to my process to sort through and plot the data. The map quickly expanded and flattened out showing the entire world. \n\nA counter appeared at the bottom, and red dots slowly began to appear on the map. \n\nWithin moments most of the largely populated sections of the United States were covered, Europe, China, Russia, the Middle East, every continent save Antarctica had at a few. The counter on the bottom of the screen quickly tallied the active trackers, topping out at 22,894. \n\n\"They've been at this for a long time, and it's got to be an international effort,\" I said dejected. \n\nThey stared at the display for a long time, looking at all of the different dots representing another woman under the control of a chip. A few men too, the tracking data showed general statistics, although the women were by far the more popular choice. \n\n\"This is assuming that no one has done what I have as well, hacked into the dolls to figure out how they work and duplicated the process,\" \n\n\"You think that's possible Master?\" asked Kate speaking up for the first time. \n\nI shrugged, \"It's not impossible as I've proven, and this has to be a billion dollar market. You think competing crime syndicates are going to be content to let someone corner the market?\" I asked. \n\nKate slowly shook her head. \n\n\"What about Beth? Can you hack her chip or something?\" asked Tracy. \n\nI hesitated, \"The chips she has, and the programming inside of it are from what I can tell experimental, she's part of the first group they've tried them on, and hell she might have been the first. All of the data on its construction and protocols is stored offline in a non-networked server the data I have only referencing it. The new chip's designed to be in constant interface with a computer, to allow for more immediate and dramatic changes to the subjects programming.\" \n\nI leaned back and pulled up the analysis of Kate's chip, \"And I've only just started to understand how the programming in your chips works. Hers could be based off of it like an incremental upgrade or it could be a completely new framework, I have no idea.\" \n\nTracy was now glaring at me, and I sighed, \"If I were able to get into it I have no idea what I would be able to do, I'm willing to bet I could hack into it but from there I have no idea what to do.\" I explained. \n\nShe stared at me for a moment looking like she was going to argue, but slowly nodded and backed away from me falling into one of the analysis chairs and put her head in her hands. \n\nI blinked, considering the chairs for a moment as an idea struck me. \n\n\"What are we going to do to save her then?\" asked Helen. \n\n\"I'm not sure, I need to test some things for now to figure out what might work,\" I hesitated for a moment, \"We will be getting her back.\" \n\nThe three of them looked at me for a moment and I glanced over at the clock, it was nearly three in the morning and I was exhausted. I had been up working on getting into the Companies systems until Kate had come down to get me, and then we had woken everyone to tell them what I had found. I had gotten barely any sleep the night before and my head was pounding. \n\n\"I need to get some sleep first though,\" and getting to my feet I slowly made my way up the stairs, my eyes hurt just as much as my head and it felt as if I were walking along the deck of a ship in a pitched storm. The adrenaline surge from finding Beth already wearing away. \n\nI could see that Tracy wanted to argue with me, and for once I was glad that the chip in her head was keeping her complacent. \n\nCollapsing into the large bed I felt Kate lay down next to me, and reaching out I pulled her on top of me. She was dressed in only a thin camisole and I could feel the warmth of her skin through it. On top of me and with my hands on her body I could tell that she was excited, her chip thinking that despite my tiredness I might want her. \n\nFor once, their wasn't a dominate thought in my head with her pressed against me. I was tired. I had been going at this nonstop for months since the night Kate had shown up on my doorstep. I was nearing some sort of limit, and near the end of the rope was where people lost concentration and made a mistake. \n\nReaching around her I pulled Kate up until her head was on my chest, my arms around her shoulders simply holding her to me. I couldn't make a mistake, one slip up and she would be taken from me. \n\n-- \n\n-- \n\n*The True Slave* \n\nI woke up first, to find that I was still in the Master's embrace his arms around me and the musk of his skin and sweat flooding my senses. \n\nI took in a deep breath, feeling like I was melting away completely in his arms. \n\n\"You awake?\" asked Tracy. \n\nTurning over slowly so as not to wake the Master I looked at her, \"yes.\" \n\n\"Do you think we can get her back?\" she asked. \n\n\"Why wouldn't we be able too? The Master doesn't give up.\" \n\nTracy nodded, \"True, but despite that he's not any closer to turning off the chips is he?\" \n\nI frowned, \"You don't think he will be able to do it?\" \n\n\"It might not be possible for a single person to do it.\" \n\nI glanced up at the Master's face, it looked different when he slept the stress that was usually on display gone. \n\n\"He will, we've made it this far.\" \n\nTracy sighed, \"We have, but even after all of this, after we save Beth, after he deactivates the chips our lives aren't going to be the same. We've got the proverbial mark of the devil now. We can't go back to what our lives were, even looking back on it now I can't imagine doing that,\" she hesitated for a moment. \n\n\"Looking back on my life it feels like I was half asleep until the Master saved me. Like I wasn't really living, just going through the motions,\" said Tracy as she adjusted herself on the bed. \n\n\"It's like everything is clearer now, more focused and precise.\" \n\n\"We have implants in our heads. That's bound to do something to the way you see the world, reprograming people is possible, the rich and powerful are more corrupt and powerful than any other time in history, and they control the technology that could destroy the world. If those facts don't change your world view something is wrong with you.\" \n\n\"Do you two have to be talking this early in the morning?\" grumbled Helen. \n\nI glanced over at her, and then looked back at the Master and reaching out poked his cheek. He remained dead to the world and I turned back to Helen, \"It's not bothering the Master.\" \n\n\"It's bothering me,\" she groaned and turning back around she collected half of the comforter on the bed and disappeared. \n\nShaking my head I slowly began to disentangle myself from the Master, in his sleep his arms were more relaxed and after some wriggling I managed to escape. \n\nStanding up and silently stretching I made my way to the bathroom and turning on the shower stepped into the hot stream of water. For several minutes I simply stood in the stream of water luxuriating, my mind wandered to what the Master had discovered yesterday Beth's fate. \n\nThe Master would not stop, he would not leave her in the hands of the Company, not unlike how he refused to leave me under the control of the chip. Going up against the Company though was dangerous, and they wouldn't hesitate to kill us. \n\nI opened my eyes as the door to the large shower opened and the Master stepped inside. \n\nHis eyes raked over me and demurely I struck a pose, extenuating the curves of my body for him to enjoy. \n\nThe Master smiled, \"Mind if I join you?\" he asked. \n\n\"I'm not sure Master, what do I get?\" I asked even as he stepped into the water next to me, his body making it very obvious what he was going to do. \n\nThe Master reached out and casually flicked my left nipple, sending a shock of sensation through my body. \n\n\"What is it you want?\" he asked. \n\n\"I'm not sure Master,\" I said as I let my hands drift down to grip a particular part of his anatomy. \n\nHe grinned, \"I think I know exactly what you're after.\" \n\n\"You sure you don't see anything you want Master?\" I asked. \n\n\"I see plenty of what I want.\" \n\nThe Master carefully stepped around me his hands trailing across my skin as he moved, keeping me to him. \n\nI shuddered, the Master was always in control of me, but when he took me like this used me like this was when I felt it the most. \n\n\"No cumming until I say so,\" he said. \n\nHe pushed me up against the tiles of the shower and quickly entered me. \n\nI gasped, the Master was usually careful and he usually played with me before using me. I had told that he didn't have to, that I was always ready for him to use me but it had taken him a long time to get used to the idea. \n\nThe Master moved slowly in and out, his hands on my hips holding and controlling me, directing me in how best to serve him. The warm water was streaming down my back, a pitiful amount of heat compared to what was building up inside of me. \n\nThe Master grunted and his hands moved away from my waist and up to my shoulders. Moving away he turned me around and pressed my back up against the tile and continued. \n\nI put my arms around his neck and closed my eyes reveling in the feeling. \n\nThe Master continued for several minutes, his slow pace beginning to quicken. \n\n\"Now,\" he grunted. \n\nThe pleasure inside of me, the heat spiked and a let out a shout. The Master froze still buried inside of me. For a moment the two of us hung there, until slowly he let us fall to the floor of the shower. \n\n\"That's quite the morning greeting Master,\" I said as I got my breath back. \n\nHe smiled. \n\nEverything was right in the world. \n\n-- \n\n-- \n\n*The True Master* \n\nLooking over the helmet for a moment I weighed the thing in my hands, it really was an insane to try this. The consequences of implementing a completely new protocol based on something I had hacked together from the basic code of the Doll control protocols wasn't really the best way to test a theory. \n\nStill, I couldn't ask someone else to do it. Kate would volunteer without much input from her chip, Helen and Tracy would volunteer because of the chips, Dr. Song wasn't an option since she was crazy enough to want the helmet on in the first case, and Jeremy like any sane individual would refuse. \n\nLooking at the computer monitor I sighed and slowly lowered the thing on my head. For once I was being careful, the door to the basement was locked and Dr. Song was in the back room doing whatever it was she was trying to do with the second helmet. Taking off the thing in the middle of the test would cause a whole host of issues. \n\nSlipping it on I winced as the cold metal contacts touched my skin and interfaced, the points where the microwave inducers would fire their pulses into my brain and pick up the responses. \n\nI had stripped the program down to its basics, my computer was running in parallel with a cloned system so a crash wouldn't be detrimental and I would have enough time to safely exit the system. Still even with all of the precautions in place this was a dangerous operation. \n\nThe helmet booted up and the computer showed that the connection had been made and it was ready to perform a POST. Leaning forward I pressed the button. \n\nIt felt like someone had dunked me in an ice cold lake and set me on fire, my vision flickered in and out as my brain was bombarded by what was most likely a very unhealthy amount of radiation. The link was stable though, and it was so far working despite the discomfort I was feeling. \n\nSlowly I activated the next step of the test, a simple AES encryption brute forcing algorithm utilizing the parallel properties of the tertiary processor currently attached to the system to try and guess the password of the encrypted files. \n\nI actually felt the spike in the helmet as the program was offloaded into my own head. \n\nThe human brain is despite the abilities of modern supercomputers still the most powerful processor in the known universe. Quantum computers come close in their abilities but besides the incredibly delicate one inside an NSA facility in Utah they were still mostly theoretical pipe dreams. The human brain though had been tuned by billions of years by evolution, and its capabilities were untapped in modern circles mostly due to the ethical considerations which I was for the moment trying to ignore. \n\nThe processing power was not in the terms of calculations per second, the human brain is chemically driven. It will not keep up with the speed of an electrical system like a computer. The advantage is the parallel abilities inherent to it. A computer can only do a single task at once, sure it can do that one task incredibly quickly but still only a single operation at once. \n\nThe human brain juggles and operates hundreds at once sometimes thousands. \n\nI winced as the computer began to run the program, and I felt my arms go dead. I couldn't stop the process now if I wanted too. My consciousness was overridden, it was after all irrelevant to the current process towards which I had set my brain to complete. \n\nI had no sense of time or consciousness, I was asleep. \n\nThe next moment though I opened my eyes, and glanced at the clock. It had apparently taken only just under twenty minutes for the program to complete. \n\nThe encryption key was sitting in front of me, the data files unlocked. \n\nWhat had taken the commandeered servers' days to go through had taken me less than half an hour. \n\nSmiling I took the helmet off of my head and set it down on the desk, berating myself slightly to even consider it I turned off one screen and looked at my reflection in it checking to make sure my eyes did not have a burst blood vessel, or that my nose or ears were bleeding. All common side effects in the movies of fucking with one's own brain, I wasn't bleeding though. Not that I couldn't have damaged something in my head but still, the bleeding would mean I had internal hemorrhaging of the brain and I would be dead in a moment or two anyway. \n\nStill it had at least worked, a direct interface from my computer to the human brain, and not to simply reprogram myself into some willing slave but to perform an actual function! This application alone, cracking an encryption scheme would mean I could in practice steal millions, no billions from banks. Hack into companies and governments for data! \n\nShaking my head in wonder I stood and slowly made my way back up the stairs to the first floor of the house. I had tested it and not messed anything up, so moving forward with the next idea was possible. \n\nKate, Helen and Tracy all looked up at me curiously as I opened the door. They were lounging in the living room the magazines and books strewn around them as they entertained themselves as I worked, none of them had much in the way of clothing but otherwise it looked like a perfectly normal scene. \n\n\"Tracy, Kate, could I borrow you two?\" I asked. \n\n\"Yes,\" said Kate not missing a beat she put her book down and stood. Tracy nodded and stood as well. \n\nLeading the two of them back down to the basement I went into the back room, \"Dr. Song You're going to want to see this,\" I said. \n\nThe woman looked up from the helmet in front of her and multitude of books and other electronic components she was working with. \n\n\"Alright, what are you doing?\" She asked. \n\n\"Experimenting with something like the helmet for you.\" I said. \n\nHer eyes widened and she stood brushing herself off and followed me back out into the main basement room. \n\n\"Sit down in the chairs and plug yourselves in,\" I said pointing at the chairs addressing Kate and Tracy. \n\nThe two looked at me and then back at one another. \n\n\"What are you going to do?\" asked Tracy. \n\n\"I'm going to try and put you in Beth's shoes.\" \n\nTracy blinked, \"What?\" she asked. \n\nI pulled up the specs for the new brain chip they had put in her, and how it hypothetically hooked up to the brain, \"The new chip has access to almost every section of the brain, If I can put you in control of it she would be a puppet under your control.\" \n\nTracy looked at me for a moment, \"You want me to have control of Beth?\" she asked. \n\nI nodded, \"Although for the test it's going to simply feed her visuals into your own. Once we've got it working well enough you could simply walk her out of the building.\" \n\nTracy looked skeptical but she nodded and sat down in the chair plugging the lead into the jack in the back of her head. \n\nI turned back to my computer, Tracy was already successfully connected and integrated into the system. \n\n\"I'm not going to be able to see anything that you are, the data being streamed in is going to be in the raw format,\" I said. \n\n\"What?\" asked Tracy. \n\n\"The computer has no way of making heads or tails of the data, so despite everything you're going to be seeing going through it first and then to your head we're going to have to rely on what you tell us about Beth's situation to form a plan to get her out.\" \n\n\"So you can't take pictures of what she's seeing?\" said Tracy. \n\nI nodded, \"She's not a camera, heck you're going to be getting a direct image stream from her brain, I'm just betting that your brain will be able to adapt. But every brains different, like how we don't know if we all perceive the same color spectrum.\" \n\nTracy nodded again, \"Alright, but what should I be looking for?\" \n\nI shrugged, \"I could give you something to let me have greater access to the computer systems but for now all you're going to be doing is looking through Beth's eyes. So it's going to be disconcerting since you won't even be able to control your own gaze, just keep an eye out for anything that looks useful.\" \n\n\"Very specific,\" deadpanned Tracy. \n\n\"This is fascinating!\" said Dr. Song as she looked between me and Tracy, \"To even think that we have the ability to place someone's perception in front of your own!\" \n\nTracy rolled her eyes at the doctor and leaned back into the chair. \n\n\"You might want to close your own eyes,\" I said. \n\n\"What do you need me to do Master?\" asked Kate. \n\n\"Oh, yeah! I'm going to be borrowing your brain.\" \n\nKate pursed her lips looking skeptical. \n\n\"I figured out how to use the human brain as a parallel processor to break through encryption schemes, something that not even the biggest supercomputers can do.\" ",
        "Kate blinked, \"So you can hack into anything?\" \n\nI shook my head, \"No, I can break encryption schemes. I have to already have access to the data to do so. And at the moment I've only tested it on symmetric encryption like AES, I'm not sure how it would fare against something like RSA or similar. The mathematics involved are different and I haven't written a program to test them yet.\" \n\n\"So you can hack more stuff?\" she asked, her face easily communicating that she had not understood a word of what I had said. \n\n\"Yes,\" I said. \n\n\"Alright then, let's do this!\" \n\nI really needed to bring in another computer programmer, or hacker. I was doing things that were supposed to be decades off but I couldn't get any recognition for it or explain it to anyone. \n\nI turned around to my computer, the program already up and running I quickly began to assault on the Companies servers. To anyone observing the majority of the attack would look like a standard DDoS attack. In fact the majority of it was, the traffic originating from the collection of servers I already had under my control routing their traffic all over the world to make it look like a botnet attack. \n\nThis was something that network engineers had to deal with on a daily basis and was the most common type of attack that showed up on the news, although it hardly qualified as hacking since all it did was slow things down. \n\nWhile that was keeping the Companies network engineers and firewalls busy though I was running a brute force attack on their SSH terminals. With Kate acting as another processor and my own successful tests of the scheme I was fairly confident we would be able to get access to their network. \n\n\"You feeling OK?\" I asked Kate as the program ran. \n\n\"You started it? I don't feel anything,\" she said. \n\nI frowned and glanced back at her, she did appear to be handling it better than I had. Probably had something to do with her brain being better adapted to artificial input and processing. \n\n\"Tracy? As soon as we break in we're not going to have much time so be quick,\" I said. \n\n\"Ok!\" \n\nIt took only fifteen minutes to break through the Company firewalls, now that I knew where they were hiding them inside of their network and I had a way to break encryptions schemes, It seemed like it was almost too easy. \n\n\"We're into the network Tracy, I'm looking for Beth.\" \n\nI was scanning all of the devices on the local network of the Company building I had no idea what Beth would look like on the network so it took a precious few minutes. I sorted out anything that had a standard office operating system which left me with a pool of over a dozen networked devices any one of which could have been Beth. \n\nThe serial numbers inside of the addresses matched up though, and looking back at the data I already had on Beth I quickly narrowed the search. \n\n\"Found her, this is probably going to feel weird Tracy,\" I said as I started the connection, a few hundred miles away the input from Beth's eyes was being funneled into a computer network and out of the Company servers into Tracy, who would hopefully be able to interrupt them. \n\n\"I'm good!\" she said. \n\nTracy stiffened, her hands gripping at the chair's faux leather her nails almost puncturing it. \n\n\"She OK?\" asked Dr. Song concerned. \n\n\"Should be, it's a one way street for data.\" \n\nDr. Song stepped up to Tracy and pinched her arm, the woman didn't respond. \n\n\"God damn it,\" I turned back around to my computer, the data stream was still active. I looked at it more closely, there was a lot of data nearly ten gigabytes a second. \n\n\"Tracy!\" shouted Kate. \n\nI turned around, Tracy was standing but her stance was wrong, her limbs were stiff and the only expression I could use to describe her was robotic. \n\nHer eyes were open, and she was staring directly at me. I shivered, the look in her eyes was not Tracy. \n\nI glanced back at my computer, the data stream was spiking again going far past what my ISP should have allowed. Whatever was going on here it was beyond my control. \n\n\"I'm going to cancel this!\" I said. \n\nI began to quickly type in the commands that would cancel the link. \n\n\"Master!\" \n\nI glanced back around Tracy had turned to the laptop that was next to her analysis chair, and her hands were moving more quickly than even I could type. \n\n\"Shit,\" I strode across the room towards her, she made no move to stop me when I reached up and pulled the jack out of the back of her head. \n\nFor a moment Tracy remained standing, and then pitching forward she collapsed into the chair limp. \n\n\"Don't unplug yourself!\" I said to Kate. \n\n\"Song!\" I shouted. \n\nIt took a moment but the resident doctor made her way out of the back room where she had set up her lab. \n\n\"What that hell happened?!\" she shouted. \n\n\"I was running an experiment, Tracy started behaving weird and I couldn't shut down the process logically, so I went for the physical shutdown.\" \n\nDr. Song nodded, and stooping down she slowly rolled Tracy over on her chair. Pulling a small penlight from somewhere she opened on of Tracy's eyes and shined the light in. \n\n\"She's responsive at least.\" \n\nI nodded, and moving back to the computer I ran the shutdown command. Within moments the normally very loud computer was turned off and the basement was suddenly very quite. \n\n\"You can disconnect now,\" I told Kate. \n\nShe nodded and disengaged the cable. \n\nThe two of us went over to stand next to the doctor and Tracy. \n\n\"It looks like she went into shock, but she should recover,\" said Dr. Song. \n\n\"Good,\" Leaning over I picked up the laptop. \n\n\"What happened?\" asked Kate. \n\nI looked at the laptop for a moment, and studied the commands that Tracy had entered. \n\n\"The Company's a step ahead,\" I breathed. \n\n\"What?\" asked Kate. \n\n\"The Company hacked us instead of the other way around. Tracy just sent our IP to the Company. We need to leave,\" I said as I read through the commands. Here I was thinking I had the upper hand that we were going to save Beth. \n\nFurious I threw the laptop down on the ground watching its screen crack. Stalking over to my computer I unplugged the laptop and the two redundant backup drives. \n\nLeaning over to the side of my server of a computer I flipped a switch, the power supply units inside the things switched on and dumped the full AC current into the motherboards and peripherals. We didn't have time for a more destructive solution. \n\n\"Grab anything you want we're leaving in five minutes,\" I said. \n\nKate and Dr. Song looked at one another, \"We're leaving?\" asked Kate. \n\n\"The Company know where we are, she just sent them our location. We have to go!\" I said. \n\n-- \n\n-- \n\n*The True Slave* \n\nThe Master was shouting different things yelling at everyone to get warm clothes on and get into the cars now. \n\nTracy was still out of it, and I had to half carry her upstairs and help her get dressed in jeans and a sweatshirt. \n\n\"Let's go!\" shouted the Master as he burst into the room and grabbed his jacket from the closet. \n\n\"What about all of this?\" I asked waving my hands around the room and the house in general. \n\n\"I would say we should burn it but that's liable to get out of control too quickly. The Company knows where we are Kate, they might even know who we are. We have to leave now!\" he said. \n\nThe Master blinked and looked at Tracy, \"she feeling better?\" he asked. \n\n\"What happened?\" asked Tracy her voice barely audible still sounding like she was out of it. \n\n\"We'll figure that out later, we have to go!\" \n\nThe Master hurried the both of us back down to the garage, two cars were idling in the driveway, Jeremy and Dr. Song in one and Helen was behind the wheel of the Master's car. He quickly opened the back door and threw his laptop in and then gestured for me and Tracy to get inside. \n\nSlamming the door behind us he jumped into the passenger seat. \n\n\"Let's go!\" he said. \n\nHelen hit the gas and the car jerked forwards. \n\nThe Master pulled out his cell phone and quickly dialed. \n\n\"You and Dr. Song should be safe, ditch the cell phone when we get back to town. We're going to have to go on the run again and set up somewhere else.\" \n\nThe Master listened for several moments and I heard Dr. Song shouting through the phone. \n\n\"That's just stupid!\" said the Master raising his voice as well. \n\nHe listened again for a moment. \n\n\"Fine, still toss the phones.\" \n\nThe Master disconnected the call. Rolling down the window he then tossed the cell phone out the window. \n\n\"What happened?\" I asked. \n\n\"They don't want to split up, or rather Jeremy doesn't really care and Dr. Song doesn't want too. They're being stupid.\" \n\n\"What do you think happened?\" I asked. \n\nThe Master turned and looked back at Tracy who still seemed a little bit dazed. \n\n\"My guess is they put a call home protocol in the dolls after what happened with you, and enough of that programming filtered in through Beth to Tracy for it to operate,\" he sighed. \n\n\"At least that tells me the different generations of chips are backwards compatible, meaning the newer programming should be based on what you guys have.\" \n\nThe Master leaned back in his seat, and closed his eyes. \n\nThere was a slight twitch in his cheek and for several minutes he said nothing as Helen continued to drive down the winding road. \n\n\"Master?\" I asked. \n\n\"What the hell am I doing? I honestly thought I would be able to take down a multinational by hacking into it, by pulling out just a few of the foundations. I can't even save one person, I can't even save you and I've had access to your programming for months!\" \n\nThe Master's hand whipped out and hit the door, the plastic paneling cracked and the metal groaned for a moment. \n\n\"Now we're on the run again, I'm going to have to start over again, every fucking thing I do only makes things worse!\" \n\nI didn't know what to say to the Master, I didn't know what we could do. \n\n-- \n\n-- \n\nFebruary 26 2016: \n\n*The Company* \n\n\"What did you get?\" asked Adams as she took another sip of her Coffee. Jon had called her in the middle of the night and had immediately gone off about some sort of homing program. \n\n\"For the newer models of the Doll's you know the ones I've been working on. I had the techs put in a homing program. Someone tries to tamper with the code or the mechanisms and the Dolls call home telling us what happened.\" \n\n\"Alright, but we've not distributed any of the newer models yet. The only ones in service are here, and you've made what? Five?\" \n\nJon shrugged, \"Five, twenty, something like that, but you're right we've not distributed any of them.\" \n\n\"Then why call me in them idle of the night?\" \n\n\"Because someone tried to hack into one of the new ones, it was a standard cyberattack from what the techs have told me up until they accessed on of the newer dolls and linked it to an older model. We only know of one person at the moment who's hacking into our dolls.\" \n\n\"That Marcus guy, the one that has the defective doll Belial messed with,\" said Adams as she put the coffee aside no longer needed. \n\nJon nodded, \"yep, and we've got a location. Could we use this opportunity to test the other protocols?\" \n\n\"The offensive programming in the new models?\" asked Adams. \n\nJon nodded, \"We've got all of the training complied from those different brain scans, why not put it to use?\" \n\nAdams closed her eyes and thought for a moment, \"Do it.\" \n\n-- \n\n-- \n\nFebruary 27 2016: \n\n*The True Slave* \n\nAll of yesterday we had driven south, the cold weather that I had gotten used to at the cabin quickly faded as we retreated through the states each one blurring past as we went. \n\nTracy had recovered well enough, the Master hadn't let her drive the car worried about her passing out or suffering other ill effects. \n\nHe'd spent most of yesterday in the backseat of the car with her, his laptop attached to the chip in the back of her head as he ran tests and compared things to make sure that whatever had happened to her would not repeat. \n\nWe had finally stopped in some diner off of the side of the high way, and piled out. \n\nDr. Song and Jeremy had been together in the car behind us for most of the day and just between the two of them swapping drivers they looked more worn out than I felt. \n\n\"Could we please just check into a motel or something?\" asked Jeremy as he sat down in the booth next to the Master. \n\n\"We need to keep moving, use more of the back roads and avoid cameras,\" said the Master in a whisper as the bored looking waitress came by and took our order, everyone getting a strong cup of coffee. \n\n\"We've traveled something like a thousand miles, they can't track us this far even if they were tracking us in the beginning,\" said Jeremy. \n\nThe Master looked over at him plainly irritated, \"what's that supposed to mean?\" he asked. \n\n\"You're paranoid, I've never had someone track me across state lines,\" said Jeremy. \n\n\"Nothing you've done would put a multi-billion dollar industry at risk,\" snapped the Master. \n\n\"Will both of you stop?\" said Dr. Song, \"We're all exhausted and I don't feel like playing mediator right now!\" she said. \n\nThe Master and Jeremy glowered at her but listened. \n\nFor several minutes everyone around the table was silent as we nursed our coffee and waited for the food to arrive. \n\nLooking out of the window I watched the cars as they drove past the small diner, mostly old beat up cars that were fitting enough for the out of the way place we had stopped. Trucks and cars that were from the 70's. \n\nAs I watched my mind elsewhere it took a moment to recognize the black van, it was clean and couldn't have been more than a year old based on how everything looked. By the time my mind registered the oddity the van had pulled up into the lot next to the two cars of our group. \n\n\"Master!\" \n\nHe looked up just in time to see the people streaming out of the van, all of them dressed in black combat gear with the words of a certain three letter agency emblazoned on their uniforms. \n\nThe men charged into the dinner, the waitress carrying our food let out a blood curdling screech as they started to yell for everyone to get down on the ground. \n\nJeremy was the first to react, he scrambled up out of his eat and bolted towards the kitchen of the restaurant. He didn't make it far one on the black suited men simply raised a gun and fired, instead of the bang of a gunshot there was only a slight hiss of air. \n\nJeremy collapsed onto another table a barbed needle syringe sticking out of his back. \n\nBefore Dr. Song could even turn a similar needle made it into her neck. \n\nThe Master turned to look at me, and he shouted something I couldn't hear as the world faded to black. \n\n-- \n\n-- \n\n*The True Master* \n\nI opened my eyes slowly, and my stomach rebelled. \n\nWithout thinking I leaned to the side and retched, bile and sick fell onto the floor and all I could do for several moments was purge my stomach. \n\n\"Is he alright?\" asked a female voice. \n\n\"He's fine. Our friend here gave him a rather high dosage of tranquillizers, some people react rather badly to them,\" said another voice male this time. \n\nSpitting to try and get the taste out of my mouth I looked up. A woman dressed in a suit cut to her frame and a thin man dressed in clothes that were too large for him were standing in front of me. Flanking them were several of the people who had abducted us. Beth stood among them dressed up in the armor as well. \n\nI swallowed but didn't say anything. \n\nI was strapped into a chair movie style, leather bands around my wrist and up my arms, around my legs and my chest keeping me nearly immobile in the chair. \n\n\"Well it's nice to finally meet you Mr. Roland. You've caused quite a lot of trouble for us,\" said the woman. \n\nI spat out another bit of bile and looked at the woman, \"You know my name, what's yours?\" I asked. \n\n\"You can just call me Adams,\" said the woman. \n\n\"Well what now Adams?\" I asked, trying to act more confident then I was. \n\nThe woman smiled, \"I'm going to kill you, there's no avoiding that considering how much headway you've made.\" \n\nThe woman walked over to a desk and picked up one of the helmets, \"You've managed to break into the very tight security we have on our products, and you were in the process of duplicating it.\" \n\nShe lifted the helmet that Dr. Song had made and I had programmed, it hadn't been attached to my computer when we left the cabin, so its memory was still full of all the data pertaining to the reprogramming. \n\nI glared at the woman. \n\n\"It's simple, I want to know who you were working with and how much of the dolls programming you were able to duplicate,\" she said as she placed the helmet back down. \n\n\"No one. I was trying to figure out how to counteract the programming.\" \n\nShe raised an eye at that and sat down in the chair across from me. \n\n\"So out of the goodness of your heart you dumped your job and life, assaulted a man and stole his money, then broke into some very heavily secured servers. All while resisting the temptations of not one but three dolls designed for nothing else but to illicit a sexual reaction in men.\" \n\n\"They're not doll's they're people,\" I growled. \n\nDams rolled her eyes and leaned back, \"So you did have sex with them. So much for your morality.\" \n\n\"I'm ready to pay for what I did, and I have every intention of freeing them from the likes of you!\" I said. \n\nAdams sighed, \"You want to tell me who you were working for? Do that and we'll just kill you quickly. If not we just stick an Interface in your head and then ask you. Then we tell you to pick up a gun and kill yourself.\" \n\n\"So what are you going to do when I tell you the same thing with the chip? It's only a matter of time until someone else figures out like I did.\" \n\nAdams stood, \"and the same thing will happen to them.\" \n\nShe motioned and the man in the frumpy clothes shuffled forwards, sticking me in the neck with something. \n\n-- \n\n-- \n\nThe world was black, shapes were flickering around the edges of my vision. After what felt like hours the indistinct form of a man materialized in front of me. \n\nI wondered what the hell was in the drugs they had given me. \n\n\"You're not dreaming,\" said the man. \n\nI blinked, trying to focus my eyes. \n\n\"What?\" I asked. \n\n\"You're not dreaming, this is more like an interactive chat program. You've made it far enough for me to trust you,\" said the man. \n\nMy vision focused and I found myself some sort of empty room, the only solid objects in front of me seemed to be the table and chairs from the interrogation room. \n\n\"What?\" I repeated. \n\nThe man across from me didn't look solid, his form was hazy almost like he was composed of gas or liquid. The most indistinct feature was the face. \n\n\"You made it far enough into the scenario, I can trust you with the technology.\" \n\n\"Do I have to repeat myself again?\" I asked. \n\nThe man chuckled, \"No, I guess you do deserve some amount of an explanation.\" \n\nHe leaned back in his chair, and putting his feet up on the table spread his arms out wide, \"I invented the Interface, or the chips as you call them.\" \n\n\"And you are?\" I asked. \n\n\"Belial, I was there at the beginning when the Company came to me, they had gotten their hands on what research I had already done and they wanted more. I was already known for having little in the way of moral restrictions, but even I had reservations about what they were going to do, the ability to control the human mind and all the Company can do is think with their dicks.\" \n\nDespite the oddness of my surroundings and the man in front of me I chuckled, \"I had a similar thought.\" \n\n\"Of course you did, but we'll get back to that,\" Belial waved his hand and an image flashed up on the wall, a woman kneeling in front of some portly man. ",
        "\"The first success was a little over ten years ago back in 2005. You know looking back on it now that time seems so innocent, no cell phones, no social media, no Interfaces,\" said the man musing. \n\nI looked at him and tried to clear my head, \"If you were against development of the Interfaces as you call them why help the Company?\" \n\nThe formless man shrugged, \"They already had the preliminary research from several sources, I wasn't the only one working on it. So they would have succeeded in creating the technology in any case. I figured I had better retain control of it. So for nearly ten years I helped the Company make their idiotic dolls.\" \n\n\"You kidnapped and enslaved thousands, tens of thousands of people!\" I said. \n\n\"History if full of enslavement, the powerful will always prey on the week. Anyone who thinks that will ever change is fooling themselves,\" said the man severely. \n\nI glared at him for a moment, \"that's not a justification.\" \n\n\"No, but it is an explanation. Do you want me to continue explaining or are we going to have to pause every few moments to suffer your moral grandstanding?\" \n\nI raised an eyebrow but shook my head. \n\n\"Good. I helped the Company develop its dolls, but around 2010 I made another breakthrough. One I kept to myself and one you've only touched on.\" \n\n\"The integration of personalities and the chips programming?\" I asked. \n\nHe nodded, \"that little step was the key to everything, although the version you've managed is useful it is nothing near the complete potential. You're subjects are in a state somewhere between a doll and a human. The fully realized version would be many times better than a human.\" \n\nHe flicked his hand and another an MRI scan appeared on the wall. It showed two scans, one with a smaller chip embedded in the back of the brain near the limbic system and another with the limbic implant as well as something much smaller in the hippocampus. \n\n\"Memory integration and manipulation of complex neurological pathways,\" said Belial. \n\nI looked at the man stunned for a moment. \n\nHe smiled, \"Your one of the few who got the implications of that straight away, but then you would.\" \n\nI stood up and, ignoring the presence of anything that actually resembled a floor I walked over to the image. \n\n\"You can implant memories, experiences and skills!\" \n\nBelial nodded, \"It's more of a transplant. I couldn't write a program with enough complexity to give anyone a skill, but I was able to copy skills and memories from one person and move them to another brain.\" \n\n\"Could you store them?\" I asked. \n\nBelial laughed, \"Of course, why not? The brain is simply an electro-chemical supercomputer. I'm sure a lot of people would like to postulate that inside it all theirs some intangible soul but then I don't ascribe to that theory, and neither do you.\" \n\nI didn't say anything. \n\n\"I made this development around 2010 and that's when I started to plan how to make sure my technology wouldn't be forever wasted on sex dolls and short sighted Company CEO's with no imagination. I continued to feed the Company small developments over the next few years, actually leading them away from the path of development I had gone down for the memory implantation and copying while I put the finishing touches on my plan.\" \n\nBelial stood up and another image appeared on the screen, it showed another brain image next to a body in a hospital bed being kept on life support. I felt an unnatural chill run down my spine for some reason. \n\n\"Adam Shells, a young man who decided to go motor biking without a helmet. Ended up spraying a good portion of his internal organs across the road, and banged up his head in the process. No family, and no brain activity to speak of, rather expected given the trauma,\" Belial pointed at the brain scan showing a rather messed up brain. \n\n\"He's the base. The blank slate on which the next five years of work were done. It took me a long time to figure out how to mesh memories experiences and skills together well enough so that their were no conflicts. He's got the raw intelligence of a Harvard graduate, the problem solving skills of an engineer, the ruthlessness of a solider, the charisma of a politician, and a much better moral compass than my own,\" said Belial. \n\n\"So you built a perfect person, by harvesting and using memories and experiences from others?\" I asked. \n\n\"I'm not sure I would use perfect, but certainly an upgrade over me. I wanted someone who I could trust with the Interface technology. What better wat to ensure that than build that person myself?\" \n\nHe was silent for a moment, and continued to look back at me over the table. \n\n\"You're going to say it's me.\" \n\nBelial chuckled, \"You've performed perfectly. I didn't expect you to make it this far without getting caught.\" \n\nI stared at the mad man for a moment, and my mind tried to reject what he was saying, I reached back into my childhood memories searching for an error or misplaced item. I tried to reason out how whatever was going on in my head was insane, that I wasn't a product of some insane megalomaniacs programming. \n\n\"I got some of your memories, didn't I?\" I asked. \n\nBelial smiled, \"You got a fragmented copy of my own knowledge and coding skill for the Interface.\" \n\nI nodded, \"Which is why I was able to reverse engineer and modify the code on the chips so quickly. Did you put something in place so I would ignore how strange it was that I could do those things so quickly? Program something that should have taken months?\" \n\n\"No, that was your ego,\" said Belial. \n\nI glared at the man, and sighed. \n\n\"You're not going to argue?\" he asked. \n\n\"What would be the point, if you're telling the truth it's not like I'm going to change anything I'm trying to do. You might have encoded the morality too well into me, or much more likely this is all a bad dream because I'm getting a chip implanted into my head at this very moment so the Company hacks can interrogate me.\" \n\nBelial clapped his hands together, \"exactly! That's how I prove it. You see I never implanted you with the limbic control system, or as you think of it the V1 of the chips. You have only the V2 enhancement, the implant in the hippocampus which influences memory and thoughts. Your little chip has a special override, you'll get the commands from the implant but you won't have to follow them.\" \n\nI shrugged, \"Alright we'll see then. Can I ask questions then or are we on a schedule?\" I asked. \n\nBelial shrugged, \"Go ahead.\" \n\n\"Where are you in the real world? If this is all in my head?\" \n\n\"I'm dead.\" \n\nI blinked, \"what?\" \n\n\"I'm dead, I knew too much, I might have also been tempted to wrest control away from you and that would defeat the whole premise of building someone better than me to be responsible for the Interface technology. So the plan was after I started your program I'd off myself. I could've changed my mind, like I said this is more of a chat program than anything,\" he patted his chest. \n\n\"So I shouldn't take your word that you're gone,\" \n\n\"Probably not no.\" \n\n\"Alright then, Kate?\" \n\nBelial smiled, \"Ah, Kate. She's the companion piece, the complimentary focus for everything you did. I didn't program her, it took five years to create one complete person. So inside the Companies servers I left a few flags and a small subroutine. When the correct match to your morality was found she would be sent to you,\" \n\n\"Correct match?\" \n\n\"A man always fights better when he has something to protect, I could have just left you the information, a few backdoors into the Companies servers to investigate them and then get caught, but that's hardly much of a test for your morality.\" \n\n\"So her missing memories?\" I asked. \n\n\"A byproduct of the necessary subroutines inside her programming. The Interface she has took in the full Company Doll programming, I wrote a program that would let her overcome it and find her way to you. The program also disabled and erased all data related to her as a security measure.\" \n\n\"Are the memories their?\" I asked. \n\nBelial shrugged, \"I have no idea she wasn't important for the project. You were.\" \n\nI was around the table in moments his malformed and indistinct shirt in my hands as I lifted him up. \n\n\"Not important! You took her life away!\" I shouted. \n\nBelial put his hands on mine, \"Nice to see the morality is still well ingrained. The Company had already kidnapped her and put the Interface in her. She was going to be a Doll in any case, she just happened to fit the parameters for you.\" \n\nI dropped Belial and he landed on his feet, I turned away from him. \n\n\"What were those parameters?\" I asked. \n\n\"Ah, well their were quite a few but the most important one was her innate inclination to a relationship with differing amounts of power and control. She truly enjoys being your slave.\" \n\nI turned around to look at Belial again but I couldn't think of anything more to say. \n\n\"How do you know it's not programmed in?\" I asked. \n\n\"As much programming as I can implement into the human brain, there are still emergent properties just like in any complex system. Some would call that a soul, I wouldn't but the point is that these emergent properties are not ingrained in any particular part of the brain nor are they subject to manipulation without completely destroying the mind they inhabit,\" said Belial. \n\n\"So now what? I'm getting the limbic implant, and if this isn't all some weird dream what do I do next?\" \n\nBelial smiled, his teeth an odd whiteness in the haziness of his face, \"You take control of this small arm of the Company and move forwards.\" \n\n\"I'm not going to enslave people!\" I shouted. \n\n\"So you're going to tell the government, tell the press what the Company has been doing?\" asked Belial. \n\nI hesitated, \"No.\" \n\n\"We have already stolen the fire, we've opened Pandora's Box, and we've become the destroyer of worlds. You can't stop the march of progress and technological progression. My invention, it allows man for the first time to reach into himself and modify, change his very core. If we want to continue evolving we can't remain separate from our technology forever. This is the first step in joining with it,\" said Belial. \n\nI shook my head in amazement, \"You're insane!\" I said. \n\nHe nodded, \"maybe but that's the reason I made you. I need someone who can be trusted to guide this technology. Make sure it's not used by the rich and powerful to sate their more base desires! Make sure it's used for something better!\" \n\n\"Like what? From what I've seen this technology you invented has done only harm,\" I said. \n\nBelial scoffed, \"You can't be that short sighted, when we first discovered radiation we thought it would only ever cause harm now we use it in daily medical procedures. You could do anything you wanted! The whole reason I made you was to make sure that it was used correctly!\" \n\nBelial slammed his hand into the table, \"pointless wars, pointless suffering, the rich getting richer and the poor getting poorer. With this technology you could wrest control from the so called leaders of the world and fix everything!\" \n\nI glared at him, \"People said the same thing about the nuke, and despite its power we still have wars, we still have inequality because trying to fix the world by threatening it doesn't help anyone! You can't take over the world with just a small bit of technology!\" \n\nBelial and I glared at one another and then he sighed, \"This is why I made you, to make sure it's used correctly. I can't do that, I'm a sociopath at my core and the power would be too tempting. You will perhaps be the ultimate test to the phrase, ultimate power corrupts absolutely.\" \n\n\"You're just a coward who doesn't want to deal with the consequences of what he's done. You're trying to make this out like your all noble, but you're a fucking coward! You dump this mess off on someone else and expect them to deal with it!?\" I shouted. \n\nBelial considered me for a moment and then nodded, \"Yep.\" \n\nHe glanced over at the smoky wall where he had been display images, \"Also time for you to go. This entire conversation was played out incredibly slowly to keep your brain activity near that of a comatose patient. You've been out for about three days. Remember 'I opened the box in 05' enter that on a company terminal and you'll have full access to my notes as well as root access to everything inside the Doll arm of the Company.\" \n\n\"Wait!\" \n\nBelial stood and all around me the world began to fade to black. \n\n-- \n\n-- \n\nMy eyes snapped open, and disturbingly the irises independently began to adapt to the light in the room, the right eye taking slightly longer then the left. A very prominent sign that my brain was at its biological breaking point. \n\n\"Stand up.\" \n\nI felt an odd impulse like a multitude of hands were reaching out and directing my limbs, which quickly directed me to stand next to my bed. \n\nThe woman from before, Adams was standing in front of me. \n\n\"Everything operating?\" she asked. \n\nThe man, the scientist from before nodded, \"Nothing wrong, he's good to go.\" \n\nAdams nodded, \"Go sit in the chair,\" she said pointing towards a small chair in the corner of the room. \n\nOnce again my limbs moved of their own volition, and I sat. \n\nReaching around the scientist held out a cable and snapped it to the back of my neck. I now had a port similar to Kate's. When the connector clicked home I felt a small charge, once again both of my eyes went through the odd focusing routine. It felt odd, and following the feeling I realized I could tell what the scientist was doing on the tablet, the entire operational structure of the device was open to me. \n\nFor a moment I was stunned, it wasn't so much that I could see but feel. I could feel the data moving from the CPU cache and registers to external RAM, I could feel the operating system making queries through its process trees, the individual threads of the processes. I couldn't understand any of it, but I could feel it. \n\n\"Who were you working for?\" asked Adams. \n\nWell it was time to test the claim that was either something my brain had produced in a fugue state or perhaps more frighteningly confirm that it had not been something my brain produced. \n\n\"Some organization in New York. I never knew which group,\" I said. \n\nAdams nodded her head, oblivious to my inner turmoil. \n\n\"The Russians?\" asked Adams turning back to the scientist. \n\nHe shrugged, \"No idea. They were looking into getting at our research back in 2009 but we haven't heard much from them since.\" \n\nAdams seemed to consider this for a moment, slowly I tried to figure out what the hell was going on with the Interface. \n\nAll Belial had given me was the ability to resist anything fed in through the thing, I couldn't really control computers with my mind apparently. Still leveraged correctly the ability to easily resist a command would afford me an opportunity at some point. \n\n\"Did you get any of your contacts names?\" asked Adams. \n\n\"Belial,\" I said. \n\nHer face froze and then very slowly began to turn red. \n\n\"Belial!\" she shouted. \n\nI remained impassive doing my best to act like an automaton. \n\nShe rounded and stomped out of the room, hastily setting down the computer tablet I was still attached to the scientist followed after her. \n\nThis was my opportunity if there ever was one. \n\nI grabbed the tablet, and brining up a terminal as quickly as I could I entered the code that Belial or the memory of Belial, whatever he had been gave me. \n\nThe password worked, and within moments I was redirected to a simple file directory. Glancing at the address for the files I could see that it was a semi mobile encrypted data package that was constantly propagating and bouncing around the Companies servers. With the data inside of it I had access to everything, the data logs and research, the monetary assets, and most importantly the security feeds and the source code for the Interface programming. A cursory glance at the security system showed that it was running facial recognition on everyone in the building. \n\nI smiled, one I had logged into the system the name hovering next to my face was Belial. He had put me into the system it seemed. \n\nActivating one of the more senior functions in the security system I set the building to ignore my movements, and did a quick search for Kate. \n\nA security feed showed a cell that was labeled to be only two floors below me, Kate, Tracy, Helen, Dr. Song, and Jeremy were all inside of it with her. Standing guard just outside the cell door was Beth dressed in the combat armor I had seen on her earlier. Apparently her police training was being put to use. \n\nReaching up I disengaged the cord from my neck, and strode out of the room. \n\nThe phrase is that confidence will get you through most situations, act like you know what you are doing and people will believe you. It's a little hard to be confident when your ass is showing in a medical gown but I apparently had a confident enough aura. \n\nA few people glanced at me as I walked past but no one tried to stop me so I continued, reaching the stairs I padded down the two flights. At the next landing I stepped through the door into what I could only describe as an airlock of sorts, thankfully without any actual guard in it and only a camera. \n\nA handprint scanner and iris scanner were embedded in the wall beside the far door. Even without the security system alerting them to my absence I doubted I had much time before Adams and her cronies noticed my absence. \n\nI stepped up to the scanners, put my hand down and placed my chin on the guard for the eye scan. \n\nBoth devices made a happy chirp and the door in front of my slid open. \n\nThe mood inside was different, the room upstairs had been clinical and professional. This room was cold and a feeling of defeat hung over it. Looking around I saw men and women sitting in cells, with a disproportion of 3 to 1 of more women then men. This was where the Company kept their raw product. \n\nA few people looked up when I entered, but before they could manage any words I had swept past them towards the other side of the floor where the single solitary difference was Beth standing guard in front of the cell. \n\nAs I approached her she turned to look at me her eyes still impassive. I continued forwards, she was linked to the security system of the building and was therefore subject to all of its directives. I was a top level asset in that system now, so anything I told her would be followed. \n\nShe didn't move as I approached. \n\n\"Master!\" shouted Kate. \n\nEveryone in the cell quickly jumped to the bars, \"Marcus!\" said Dr. Song. \n\nI smiled, \"Beth, open the cell,\" I said. \n\nBeth turned and punched in the code to the cell doors opening the bars. \n\nPeople all around us were starting to yell, I turned around. \n\n\"I know this is fucked up but I can't get everyone out now! I'll be back!\" I shouted. \n\nThat didn't really calm anyone not that I had expected it too. \n\n\"Beth, protect me and call any other Dolls who are security enabled to converge on us, accepting commands from no one else but me. If you're still bouncing around in their I'll get you out in a few hours but for now I need you as is, understand?\" I asked. \n\nThe impassivity of the Doll's face didn't change but I would like to think I didn't imagine the twinkle in the eyes. \n\n\"Alright let's go!\" I shouted. \n\nKate threw herself at me, \"Master!\" she said. \n\nI smiled, or at least forced one onto my face. She and I were just another part of Belial's program, and even having knowledge of it like I did I wasn't going to deviate. The thought to just grab everyone and run, escape the Company had gone through my head, but like Belial had said they would only continue their work and perhaps improve and make something truly dangerous. ",
        "Better to have someone who knew what they were doing act as the one in charge. Which was apparently going to be me. \n\n\"How did you escape?\" asked Dr. Song. \n\n\"Long story, complicated story,\" I said. \n\n\"You have an implant in the back of your head, how do we know you're not playing out a program?\" Asked Dr. Song. \n\nKate paused, and looked at me for a moment. \n\n\"You want me to be completely honest?\" I asked. \n\nDr. Song nodded. \n\n\"I am playing out a program, I apparently have been this entire time since before I met Kate. So we can either follow it to the end where the Company is destroyed or we can deviate and let them win.\" \n\nDr. Song looked nonplussed but nodded, \"Alright continue then.\" \n\n\"I'm getting out of here!\" said Jeremy. \n\n\"Can you wait five minutes? You're going to set off every security system in the building if you make a break for the exit,\" I said. \n\nJeremy looked at me like I was crazy but then raised his hands, \"Fine.\" \n\n\"What do you mean you're running a program!?\" asked Kate. \n\n\"Later!\" I said. \n\n\"Beth, have security restrain Adams and that scientist she was with, anyone else they are with put them in the main office wherever that is,\" I said. \n\nBeth nodded once. \n\n\"How'd you get control?\" asked Tracy as she followed almost directly in Beth's shadow trying to wake her up. \n\n\"Later! I'll explain everything later!\" I said as I continued to walk forwards. \n\nOpening the door to the prison cell level I stepped back into the normal bland stairwell of the office building. \n\n\"Oye!\" Jeremy shouted from behind me, I turned around just in time to get hit in the face with a gray folded piece of fabric. Grabbing it and unfolding it I saw that it was one of the jumpsuits that he and everyone else was dressed in. \n\n\"The girls might like your ass but I'd prefer not to see it!\" he said. \n\n\"Thanks.\" \n\nI slipped into the thing and we continued back up the stairs, passing the medical level where I had been and entering the higher level of the building. \n\nAs I pushed open the doors from the stairs several of the Doll's in the hallway snapped to look at me, they were like Beth, except most of them had masks and helmets on over their faces. \n\nIgnoring them and trying to clear my own head I strode forwards towards the main office. \n\n*****"
    ],
    "authorname": "Weerdo",
    "tags": [
        "master",
        "slave",
        "doll"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-true-master-ch-11"
}