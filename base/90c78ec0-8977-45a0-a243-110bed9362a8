{
    "title": "Twice Ten Point Zero (10.0)",
    "pages": [
        "A Story by XXscribbler\n\nPreliminary note to my readers: this is an old story, written very early in my career, and stowed away for years. I'm not really happy with it - the tale seems (now) a bit heavy in the last half. But it is FUN in its own way. Here it is for what it's worth. Cheers!\n\nAirports themselves were okay, it was the cell phones that he hated. \n\nUsed to be, before the cell age, his waiting time in airports was usable and reasonably private: he got lots of reading done back then. Not now. Yammer, yammer, everywhere. A dozen or more conversations within earshot: you could close your eyes but not your ears. His refuge now was his fantasies and memories, where the voices in his head could drown out the verbal trivia around him. The plane was late, but he was patient. Memories were good.\n\nBarry had been in Beijing some months ago. He was the only American, and the only academic, in a group of non-Chinese, mostly businessmen and women, on a multi-week PRC-government-sponsored tour. Not to mention he was the only foreign participant who wasn't significantly overweight, the only one who insisted on getting up and running daily, for both sanity and health. At least the group collectively didn't smoke, and their hosts had tried valiantly, with partial success, to accommodate that despite the amazing prevalence of Marlboro posters on public walls.\n\nHe was there because the Chinese Government had admitted, finally, a need for help in analyzing and planning some aspects of their changeover from command to market economy.\n\nThe usual PRC arrangements held: well-escorted and tightly choreographed visits, motorcades, lectures and consultations.\n\nA good all-purpose \"guide/maitre-de/translator/concierge\", too, assigned to their group full-time, from breakfast to taps. Her name was a sibilant mix of sounds unpronounceable by westerners: she warned them first thing that their attempts at her real name would almost certainly result in something quite pornographic, so they should just call her \"Missy\".\n\nMissy seemed young, and was physically tiny, at most perhaps five foot zero, and maybe forty-five kilos wet? She also seemed plain at first glance: not a trace of makeup, no jewelry. The more one studied her, however, the more one realized that she was quite refined and attractive. At any rate, she was stunningly graceful and quick in her movements, none of the usual unfortunate flat-footed local gait. Squarish face, classically fine-featured, atop a long, elegant neck, a neck emphasized by her shiny, jet-black hair pulled up into a French-roll, distinctly not a local style.\n\nAnd always, everywhere, even at the nightly banquets (all of which she attended), she was dressed in formless khaki, as were most of their hosts. Too bad, Barry thought on several occasions. Eternally observant, not to mention near-terminally horny, Barry studied her covertly throughout the first few days. He always paid attention to women's exteriors, even as he consciously tried not to let those exteriors get in the way of appreciating a woman's other aspects. In his defense, he also appreciated her interior: she was smart, friendly, and capable.\n\nWithin a couple of days, he had had several reasonably long conversations with her during breaks. Missy had a very good, extensive technical background, was mentally quicker than most of the bureaucratic hosts, and also quite obviously better educated in general. She didn't stumble over many terms, handled people and questions nicely. She spoke good simple English, carefully restricting herself to mostly one- and two-syllable words, thus avoiding the trap of \"show-off\" polysyllabic nonsense that ensnares so many educated non-native speakers.\n\nMissy also had an odd habit that took him some time to spot: she never used contractions, shades of Star-Trek's Commander Data, and that made her sound very formal.\n\nOn about day three, when Barry and Missy had already had their first few casual face-to-face talks, and had discovered that they could, in fact, enjoy one another's company, the group had a two-hour bus ride to an industrial plant. For the trip they picked up a factory interpreter who lectured them enroute, thus relieving Missy of her usual duties.\n\nEntirely by accident, they wound up sitting together in the rear-most seats, and passed the time well. He was used to discussing technical subjects with non-technical people, and that ability seemed to help. Early in the ride he praised her English, and compared her very favorably against the current speaker, who was busily boring everyone with murky, over-fast, and generally unintelligible gibberish.\n\nShe accepted the compliments gracefully, then told him \"My first English teacher once said I should read Mark Twain and Winston Churchill and learn to speak their way. That means using only small words, because they are strong and clear and easy to remember. So Mister Twain and Sir Winston have been my real teachers.\"\n\nThe conversation had later become more personal: she was 37 (Barry would have guessed perhaps 25, told her so, and was rewarded with a blush and \"Thank you!\"), had a seven-year-old daughter, lived with her twenty-eight year old sister and their mother in a 400 square foot apartment (\"Four fifty if you count the balcony and our part of the hallway!\") Barry was thinking, \"That's half the size of my garage!\"\n\nBarry was single, unattached in any significant way at the moment. When in the general course of the conversation he volunteered that information, she returned the confidence, told him she was divorced. There was pain and embarrassment in her face as she spoke. It was so obvious that he apologized for \"forcing\" her to tell him (which he certainly had not done).\n\nHe considered the possibility he might be acting the \"cultural imperialist\", then explained the term and warned her that he would like to say something about her situation, but from his own cultural perspective. She found that interesting and told him to go ahead, that she wouldn't be offended no matter what, since they could surely agree that cultural differences were a matter of opinions and beliefs, thus matters of taste instead of fact.\n\nBarry didn't know it, but she was mentally gritting her teeth, expecting him to tell her (as if enough people hadn't done so already!) how damaging, how devaluing, a divorce was to a woman, just as in her own society. But no, how wrong an assumption that had been!\n\nHe told her, \"Missy, everyone makes mistakes. Absolutely everybody, and in all sorts of ways. Some errors are small, others large. A divorce merely means that you had the good sense to see a mistake, and the strength to try to fix it. It means nothing about your worth, you know. My own parents were divorced after twenty years and four kids. In America, over half of all marriages end in divorce within ten years. So for us Americans, at least for me and for most thoughtful ones, a divorce is not evil or degrading or bad for one's face. Many people have several divorces and marriages during their life. People do change, we live a very long time nowadays, and it is a mark of strength to accept and deal with the changes, even if it can be painful.\"\n\nHe paused for a deep breath, then continued: \"So, Missy, I could not possibly think badly of you for such a strong and clear decision. In fact, if the Chinese view is that divorce is a disgrace or something evil, then I would admire you even more for making such a hard choice.\"\n\nShe was astounded: nobody had ever told her such a thing, quite the opposite. Her mother and friends all were appalled at the divorce, and kept bringing it up even now, years later. Tears started to come, but she successfully fought them back. She did observe, through her upset, that Doctor Barry carefully took no notice of the tears, and let her settle down without comment. More sensitive than she would have expected.\n\nThe conversation continued, but on much more impersonal topics, through to their arrival at the factory. There, she was back into her guide/interpreter role. Barry spent more time watching her than attending to what she was saying.\n\nAt one point, while she was standing to one side interpreting, and all the other folks' eyes were on the speaker, she caught Barry staring hard at her and blushed brightly. Barry was embarrassed for having embarrassed her, but he scanned the room and discovered that nobody else seemed to have noticed. By the end of his scan, her color was back to normal, and she hadn't missed a word or broken stride.\n\nHe was to learn that these spectacular color changes, and their almost instant resolution back to base-level coloring, were part of Missy's physiology. He found it utterly endearing, and also found himself very strongly attracted to Missy in general, but had the good sense to keep that as much to himself as he could.\n\nHe didn't know that she was fully aware of that attraction, within the classical feminine capability of deploying emotional antennae without being observed - aware, and quite flustered. He didn't pick up on that. Of course he didn't, being thoroughly male! He did nothing, she did nothing. Except that they covertly observed one another.\n\nFor both, the next day or two were actually moments of studying the other, strung together with periods of \"other stuff\": trivia!\n\nDr Barry, she soon discovered, always went running early in the morning, despite the heat and generally poor air quality. For Barry, going out at dawn meant he wasn't simply the central \"object-of-gawk\" for the whole city, and could avoid much of the worst of the smog.\n\nEach day as he crossed the lobby just after first-light, she was sitting in a comfortable chair, apparently deep in study of the day's itinerary. He always nodded and said good morning, but never bothered her, and completely failed to notice that she followed him intently with her eyes as he passed, lingering as he trotted down the stairs and out of sight.\n\nShe thought it was nice to see a round-eye in good shape and conscientious about exercise. He was BIG, by her standards, but lean and not as bear-hairy as many Caucasians. She found his bulk, and the glistening golden hairs of his arms and legs interesting: certainly it was a contrast from the slenderness and baby-smooth hair-free-ness of the local men.\n\nMuch more interesting than his coloring and fur was the stretching he did when he returned drenched in sweat after his forty or forty-five minutes of running. Even when he was done with post-run stretching, no other group members were up and about. Slugabeds all.\n\nFinally, on day four, she watched him through the lobby window as he leaned on the building, doing what looked to her like random exercises to cool down, very ineffectual exercises they were, too. She surprised herself when she left her paperwork on the lobby chair and walked outside to say hello.\n\nBarry was likewise surprised, but pleased. From his position leaning against the wall, he eyed her under his arm, and responded quite informally, \"'H'lo... I'll be done shortly!\"\n\nShe felt emboldened by their discussion, on the bus, of her divorce: they seemed to have made real connections then, and he had certainly not been put off by the revelation. And he was friendly in a way that made her comfortable, very different from the ordinary guest-guide interactions. She smiled at him and said how nice it was that he took care of his body, then startled him: \"Doctor Barry, would I be impolite if I showed you some better exercises to cool down?\"\n\nHe said \"Of course not. I always can use a lesson. What do you think I should do instead of these?\" He wondered what in her background led her to feel like giving him exercise advice? He would find out shortly.\n\nFor her part, she was going to show off for him a little: the desire to do so was unusual for her. She kicked off her clogs and shuffled her bare soles against the rough pavement. He watched with interest: she seemed to be testing the surface, then she spread her small toes wide apart and visibly gripped the asphalt. With her feet adjusted, she tucked her shirt tightly into her belt, stiffened her legs, and jack-knifed forward until her forehead touched her ankles.\n\nThen, as he goggled, she put her hands on the ground and rotated in painfully slow-motion into an absolutely perfect handstand. And did several vertical pushups. And then smiled up at him, flipped herself onto her feet, and giggled: \"Start this way!\"\n\nHer happy-little-kid expression said it all: \"Gotcha! Didn't expect THAT from me, did you?\"\n\nHis totally flummoxed expression amused her no end, so she explained. \"I was on the Olympic team for floor exercise. Long time ago, more than twenty years! The real team was five girls, I was number seven. I went to the games as an 'extra' for emergencies but did not compete. The others were too good and too lucky, nobody got injured. My sports career was over when I was nineteen!\"\n\nShe shrugged: \"Then I coached a little while, but I really wanted to become a ballerina. I found out it was too late in my life, and I was too small! Imagine -- too SMALL to be a ballerina! Anyway, I still, today, like my studies of gymnastics. I go four nights every week, for two hours. It is good for the body.\"\n\nShe paused, eyed him much more frankly than he expected, a coach's practiced inspection. He was almost embarrassed.\n\nHe returned her long glance silently, then said \"Well, Missy, that is very interesting. I am impressed: very few people in the world get to such a level. It isn't important that you didn't get to compete, the important thing is that you were able to advance so far. All I could ever do in sports was finish a few non-competitive marathons. I was not fast, but steady. But I like gymnastics, and I watch it every Olympics... especially the women's floor exercises. The women there are the prettiest in the world.\"\n\nHe almost chuckled: \"So, Missy, it's highly probable that I watched you as a child, and with great interest, too. I like pretty women, you know.\"\n\nThe final comment was aimed quite clearly at her, personally. She did another of her patented quick-rise, instant-fade blushes, looked away briefly, controlled herself.\n\nHe waited a second, then almost giggled at her, and in a conspiratorial whisper asked \"Want to know a secret of mine? Promise you won't be embarrassed if I'm very frank with you?\"\n\nShe was surprised, but nodded her agreement. His streak of frankness, she already knew, was meters wide, and she approved, once she got it separated, in her own mind, from rudeness.\n\nHe told her, \"Well, I have always wished the gymnastics could be done in the nude. Naked. The contestants, all of them, men and women but especially the women, and in particular the floor-exercise girls, have incredibly beautiful bodies, and I'd like to see them naked. After all, the ancient Greeks exercised and competed in the nude.\"\n\nShe went a much deeper red, looked away for a second, then back at him eye to eye.\n\nHe shrugged and sighed, finished with \"Of course, that would be dangerous in a way. Every man watching would be totally aroused. Sexually. Every man in the world, I think, would like to make love to the little women gymnasts. They are so pretty and so flexible, it would be... well, Missy, it would be much more than just interesting. It would be a cosmic experience! But then, I've always been a great day-dreamer. Especially about women.\"\n\nShe was quiet, studying him.\n\nHe worried that perhaps he had gone way over her boundaries, didn't understand why he had felt compelled to tell her that.\n\nShe relieved his anxiety: \"Hmm. I often thought in competitions that it would be easier to be naked: the costumes are not very comfortable, and they hardly cover anything anyhow. Especially how they become transparent when the body gets sweaty! But to perform completely naked? In front of judges and the whole world, on television? I could not possibly do THAT!\"\n\nThen she grinned at him, and her face radiated. She could be so extraordinarily pretty! She changed the subject smoothly; \"Doctor, you look like you do exercises, too, not just running.\" She pointed to his arms: \"Running does not build up those muscles!\"\n\nHe told her of his tri-weekly sessions in the gym, on the machines. Thirty machines, lots of muscle groups, plenty of sweat. She understood: they had good older-generation Nautilus equipment in her current gym, and she used it still, although not as much as she should, she told him.\n\nShe picked up her story: \"So, after gymnastics, I went to technical school, and learned English, and here I am, working with your group.\"\n\nShe then proceeded to show him several new cool-down stretches: she was a good instructor and seemed to instinctively sense just how far he could go with each one. She spent the time watching his muscles work beneath his tight, oddly-colored skin. The most interesting thing to her was the abrupt change in color of skin that showed on his back when he bent forward and down, moving his waistband. He was very white in those hidden places! That did nothing to quiet her imagination.\n\nOn the evening of day four, dinner ended rather early, and Barry retired to his room. It was nicely appointed, good view, good solid bed, a nice bathroom (with the usual Chinese plumbing's random surprises). They were busy being good hosts, the Chinese.\n\nHe took a quick shower to rid himself of the dust and gunk of the day, then donned the hotel's terrycloth robe. It was Chinese-sized, and hit him about the top of the knee. Very Scottish.\n\nPost-shower, Barry was horny: nothing unusual in that. During his shower he'd developed a roaring hardon, and now he was about to relieve it manually. While he traveled, he liked to masturbate to fantasies about women he had just met, and for the last couple of nights the subject had been Missy... after all, she was the only even slightly attractive woman in view most of the time, and he loved exercising his imagination.\n\nJust as he tied the robe's belt, there was a gentle knock at his door. He was expecting no interruptions or visitors was travelling totally alone, so stepped to the door, left it closed, and said \"Yes?\"\n\nFrom outside came a gentle, quiet voice which he recognized instantly: Missy! This was more than merely odd. He pulled his robe tight around himself and opened the door a few inches.\n\nShe was standing there looking up at him, face prettily blushed, wearing the first non-government clothing he'd seen her in... a beautiful silk-print dress, flowing, almost kimono-like. His surprise showed, and she apologized for disturbing him. Then she finally noticed the state of his dress, bare legs beneath the robe, and immediately started to back away, apologizing again for interrupting him so late in the evening. Obviously he was about ready to go to sleep after the long day, she shouldn't bother him.\n\nBarry wouldn't have anything to do with that nonsense, just hoped he could keep his erection hidden until it deflated. Whatever her reason for visiting, the company would be nice. He opened the door and invited her inside. After a few moments' hesitation she accepted. He closed the door behind her, wondering what the dickens she was doing here... and being careful not to let his imagination run away with itself. He invited her to sit down, and he sat in another easy chair across from her.\n\nShe was very pretty, he decided, especially outside of those awful GI clothes. She sat bolt upright: for the first time ever, he could see traces of breasts beneath the fabric. That didn't help his erection go away.\n\nHe waited. She'd come to him, it was her move.\n\nMissy had spent the entire day working herself up to this moment, and was nervous as a cat in a room full of rocking chairs, but she didn't let much of that show. It took a while for her to get going, but finally, in a very small voice she said \"Doctor Barry, I have a problem, and want to ask you for help. But you do not know me very well, so maybe you will not want to do anything. Perhaps even if you do want to, you will not be able to do anything. I am very embarrassed to ask, and it is really not proper, but I have nobody else to go to. You said, on the bus, that you thought it was good when a person had a hard problem and decided to take action. Even if the action was not good in that person's culture.\"",
        "He was intrigued: she had apparently decided to include him in something quite serious. He hoped it wasn't political! That was the last thing he needed on this trip, some personal political entanglement. No way. He was going to be careful.\n\nShe was now looking steadily at her lap, where her tiny hands were busy displaying the depth of her upset. This was very, very difficult for her, he could see. He leaned forward, touched her gently on the knee, just a tap. He had never touched her before, and the intimacy both startled and pleased her.\n\nShe looked into his face, and once again flushed brightly. Now, he thought, she's gorgeous! But he didn't say so: instead, it was \"Missy, you can ask for anything you wish. Everyone likes to help, because it makes them feel like a hero. That includes me. Besides, I can always just say no, can't I? I will help if I can. And if I think I shouldn't, I'll just tell you so. Now, ask, please!\"\n\nShe whispered \"Thank you!\"\n\nThen, more strongly, she launched on her request: \"I told you that I have a young daughter. She is only seven, just starting school. Chinese society does not value women highly. Everyone wants sons, not daughters. The whole world knows that. The revolution made things easier for women, and made women and men more equal. At least, that is what they say, but it is not really true.\"\n\nShe stared down at her hands for a moment, thinking. \"Women, like me, and my daughter, have a hard time getting a good education, and then it is hard to get a good job. Men are always chosen over women, and a man's opinion will always count more than a woman's, no matter what. So I want to go somewhere else, so that my daughter can grow up in a different system. I would like that for both her and me. I know that in the right place, I can do much bigger and better things than I will ever be allowed to do in China. But I have to get the proper education, and that will not happen here. Not only because I am a woman, but in our system I am far too old for more school. That is not true in America.\"\n\nShe paused to study his reactions: his face was neutral, but at least he was nodding and he was paying close attention.\n\nHe relaxed internally: it wasn't anything governmental or political that she wanted, except for, probably, the politics of women's' rights and social position in Chinese society. In educational matters, he was on firm personal ground.\n\nHe muttered \"That's a bold idea!\" She took that as tentative approval, and relaxed a little.\n\n\"Doctor Barry, I think I could go to school, to college or graduate school, in America. I have studied both mining and electronics in technical schools here. I have looked at universities in America, on the Internet, and I think I know how to apply. I have checked carefully, and my country would let me go if I could get accepted and find the money, and many of your universities have very fine programs to help students such as me. But if I apply, I would need help to be sure I do the best job I can.\"\n\nHe nodded, she kept on, now in a hurry to finish up. \"So, you are the only professor I have met from America. I would like your help, especially for a letter of recommendation. I know that such letters are required and are very important, and you are the only American who knows me... but that is a big thing to ask, since you have not seen my transcripts and you have not known me very long.\"\n\nShe pulled a small sheaf of papers from a deep pocket: \"Here are my transcripts, showing my grades and listing the subjects I have studied. If you wish, you can look at them and decide if you can write a letter to help me. Please?\"\n\nBarry looked at her, considering. She awaited the decision, hand outstretched, trembling slightly. This was perhaps the biggest gamble she had ever taken, and the important first real step on the path she was laying for herself. And it all depended, for the moment, on the good graces of this personable, friendly, but formidable new acquaintance.\n\nBarry's erection had deflated: this was a request meriting careful thought, and not allowing parallel processing of fantasies, however horny he might be. He took the papers from her hand, perused them quickly: fortunately they were in English. She had good grades indeed, very high marks in every single subject. Good math and sciences, lots and lots of technical courses, not much of anything resembling the humanities. He compared her record mentally to things in the US system as best he could, and decided that she had at least a masters-level technical background... and possibly somewhat better. With her English, she could, indeed, get accepted, get support money, and probably could hold her own against almost any flock of graduate students.\n\nAll of that took Barry only a minute, for he was used to doing such analyses. He said nothing, however, and Missy began to get nervous.\n\nShe was genuinely upset when he stood up silently and walked to the window to look out: she didn't really understand his personal body language yet, but was convinced that he not only wasn't going to help, as evidenced by his apparently not really taking time to study her documents, but that he was somehow insulted or upset with her for having the temerity to ask such a favor.\n\nShe was devastated: he was going to turn her down! And if he were upset, he could spoil her entire career by complaining about this to her superiors. She had probably, somehow, badly misjudged both Barry and the whole approach. She bit her lip hard, waiting, mentally frantic about what to do if she had erred.\n\nShe had things quite wrong. Barry wasn't going to turn her down: any of his friends or students would have known that from the way he was standing preoccupied in thought. He'd already decided to write her a letter, a killer letter in fact. He was just mulling over exactly what he might be able to legitimately say in it, and what other advice he could give her. He had no idea just how upsetting his concentration and especially his silence were. He stared down at the street many stories below for several long breaths. Through his concentration, he didn't even hear Missy as she stood up and moved.\n\nHe turned around to tell her how delighted he would be to prepare such a letter, and his jaw dropped. She was sitting on the corner of the bed instead of in the easy chair where he'd left her. The green silk of her dress was now off her shoulders and bunched about her waist, filling her lap, making her look like a strange, pale blossom emerging from a cluster of huge shiny leaves. She was naked from the waist up, exquisitely nervous, actually shivering in fright, her hands in her lap were clasped so tightly that he could see the bloodless white indentations of fingertips on other flesh. She was staring down at them, unblinking, shaking.\n\nShe was beautiful - exquisitely formed and in wonderful physical condition. Her diminutiveness made her the perfect foil for his most intense erotic fantasies, smaller even than many of the young girls that he daydreamed about.\n\nBarry's first coherent thought was \"God, what beautiful skin and breasts!\" Her skin was almost translucent, nearly genuinely white, parchment-textured. It made him want to slide his hands over it. So likewise with her breasts, full and firm, probably 32-C, he guessed, hence large for her tiny frame: proud, solid, with brilliantly erect nipples. They showed no sign at all of ever having nursed a kid: he wondered if bottle-feeding had taken over China, too? And in the folds of her underarms a few jet-black, shiny hairs squirmed their way to freedom, like the finest of calligraphy lines on perfect rice paper. The sight churned his belly into a maelstrom.\n\nThen he realized what was happening, and flushed red in embarrassment for her: his silence, his slowness, had frightened her, and this was a bribe.\n\nHe felt awful, as if he had already failed her. It was his own clumsiness that had led her to needlessly offer herself like this.\n\nBarry stepped over and dropped to his knees on the rug before her. That confused Missy mightily: she wasn't certain what was supposed to happen next in this scenario, but surely not this? He said quietly \"Missy!?\" but she wouldn't look at him. She couldn't look: she could hardly even breathe through her fright, and her shivering became shaking.\n\nBarry raised her face with a pair of fingertips, held it so that she could not avoid his gaze: she was just aware enough of him to wonder why he was so flushed, why he looked so concerned, and to realize that both were not what she had expected.\n\nThen he reached for her waist, his hands - big, big hands, huge compared to hers - gently picked up the fabric and raised it. She finally realized he was trying to cover her, but he didn't understand the construction of the dress. As he worked, the base of his thumb brushed gently against the outside of her breast, then a fingertip slid across a nipple as he tried to rearrange things. She was amazed at how good the touch felt, through her trembling.\n\nFinally he said \"That is NOT necessary, Missy. I'd love to write you a letter of recommendation. I'll write you a very good letter, in fact. But not because you offer yourself to me this way. That's not required, I didn't ask for it, you didn't need to offer it, and I won't accept the offer. But where in the world did you get this idea? It doesn't seem very much like you, at least, not like what I've seen of you!\"\n\nShe looked at him, her heart thundering: He was going to help her after all?! And he was NOT going to accept this offer of hers? Now she was thoroughly embarrassed. Why in the world had she been so hasty with the offer, why had she panicked so completely? That certainly wasn't like her. Neither, as Barry intuited, was the offer itself. She'd never done anything like this, not ever!\n\nBut then, on second thought, should she perhaps be insulted? Here he was, turning down what she thought every man wanted from every woman. All the novels and poetry of millennia said so, didn't they? Maybe this meant that once again, a man was telling her how ugly and worthless she was, and in a particularly nasty and backhanded way? She discarded the thought as being perhaps unworthy of her, and most certainly of Doctor Barry.\n\nBut he had asked a question, and she knew exactly what the answer was. Where had this idea come from? \"Doctor Barry, we have a saying, \"I am a child of my mother.\" It means that what she is, so am I. My mother survived the Japanese occupation of Nanking.\" She watched him: his reaction, a slow nod and whispered \"Oh my God!\" told her that he understood. That was amazing for a Caucasian foreigner, and he went up a notch in her estimation.\n\n\"She told me many times that we all must do whatever we must do to survive. And she said that we women actually have some big advantages in bad times, if we can be brave enough to use them. So that is where the idea came from.\" Her heart was pounding wildly now, and she was hoping against hope that she hadn't done something so terribly stupid and unwarranted as to turn Barry away from her entirely. Barry nodded silently, held his peace for a few seconds.\n\nThen Barry spoke again, picking up where he had left off and smiling at her, making some of the panic dissipate. \"Don't misunderstand me, Missy. You are absolutely beautiful. You would be beautiful in any time, in any culture. I would like very much to take you up on the offer, and I am very flattered that you feel I am important enough to rate making it. But I won't do so - because I think then you would never believe me when I say your documents look very good, and that I'd love to help you. So I will help. And I will not take advantage of you, even though you have perhaps the nicest body, and certainly the nicest breasts, that I've seen in years. Maybe ever!\"\n\nShe blushed brightly, and muttered with obvious bitterness, \"That cannot be true. My husband said my tits were too big. He hated them. Many, many times he told me I was deformed and ugly.\"\n\nBarry was surprised at the word \"tits\": she must have had a good colloquial speaker for a teacher at some time, someone not too prudish. He was right: she had the complete common sexual vocabulary, and used it properly, albeit with occasional blushes and hesitations. He was also astounded at her statement, for he'd meant every word of his compliment, and she clearly was just reporting what her husband had said.\n\nHe replied \"Ugly? Deformed? YOUR chest? With those absolutely stunning, beautiful breasts? I don't think so! Such nonsense! I've seen hundreds of women's breasts, Missy, I like breasts, and yours are not just pretty, they are truly gorgeous! They are a nice shape, they are firm....\"\n\nShe went brilliant crimson when he said that, from crown of her head to the bottom of her belly: some part of her mind must have been hoping that his hands hadn't felt what they'd touched! \"...and even more important, they are very sensitive, or your nipples wouldn't be so hard right now.\"\n\nThat raised the blush to a new intensity.\n\nHe could see them sticking up through the thin silk, she could feel his eyes on them. He wanted nothing more than to roll them between thumb and forefinger, then suckle, but no. He thought about what to say and how to say it, and decided to relax the formalities in favor of letting her know how he really felt.\n\n\"All of that is exactly the way it should be: everything looks good and works perfectly well! I hope I'm not being rude, Missy, when I say that your husband seems to me to have been blind, stupid, and ignorant. Not to mention crude and insensitive. What a jerk he must have been! How did you ever wind up with such a person? Surely he wasn't someone you felt compatible with! What happened?\"\n\nHe paused, then said, very carefully, \"Excuse me, Missy, for asking. That is not my business, and I really, truly intended no rudeness. Of course, you don't need to answer or explain yourself to me.\"\n\nDown in the warmth beneath his robe, Barry's hardon had returned with a vengeance, but he was hardly aware of the condition. Missy most definitely didn't remain unaware of it: her face was still downcast, and as Barry shifted on his knees she caught a glimpse of him through the drape of the robe. He looked enormous down there, far bigger than her husband had been. Of course, she thought, Dr Barry ought to be bigger \"there\", if only because he was so much bigger in general! But still... maybe it was good, after all, that he had turned her down? She would have had to deal with that huge thing!\n\nThen the view closed. She was thankful for a moment away from his gaze in which to compose her face and thoughts. She raised her face and whispered \"Thank you for being so kind to a poor stranger, a divorced middle-aged uneducated woman, Doctor Barry. What happened was this: I had an arranged marriage. My mother chose a match-maker and paid her to find a man for me. Mother and the match-maker did the interviews and set it all up. I didn't meet him until the wedding, but he sounded quite good. He was older than me, and soft, and not a very big, or strong, man. Much smaller than YOU!\" She almost smiled at her private double-entendre; it was accidental, too, for she had merely meant in terms of stature and weight. \"We all thought he was going to be a good husband, but we were wrong.\"\n\nShe sighed and said \"Shall I tell you?\"\n\nBarry nodded, then put a finger on her lips and said \"Only if you want to: it isn't necessary.\"\n\nShe said \"I would like to tell you. So you can understand more about me. A person should know the important things about someone he helps. Doctor Barry, I was a good Chinese young woman! I was a lady, not a play-around good-time girl like some. I was still a virgin when we married. That is a requirement in China, no man wants a used woman, not for anything, not ever.\"\n\n\"I was looking forward to being married, having a husband and a family, very excited. The night of our wedding, we got to our apartment and I took off my clothes for my new husband. I was embarrassed and wanted the lights out, because no man had ever seen me naked, but he wanted them on, so they stayed on. When he saw me naked, he was very angry, and said he had been cheated! He told me I was ugly because my tits were too big for a normal woman. Then he insisted on turning out the lights so he could not see me when we got in bed together.\"\n\nBarry couldn't think of anything to say except \"Good lord, what a jerk!\"\n\nShe understood. She smiled wanly and kept on: \"Then for the next year, he tried to get me to spend all of my wedding money on doctors, surgeons, to make my tits smaller. I refused: the money was too important for our future because he had nothing of his own, and although I wanted to please him, I was also scared because we do not do such operations very well here. Maybe in France or America, but not here. And I did not WANT to do it, not for myself.\"\n\nShe studied her hands again, then went on: \"Then despite my ugliness I got pregnant and my belly got very big with my daughter, and he thought that made me even uglier. I had a big belly and big tits both. That was too much for him and he left one night, before our daughter was born. No warning, no talking, he just left. I came home and he was gone.\"\n\nShe sniffled gently and finished \"At least he did not steal anything of mine. A few days before my daughter was born I got an official letter. He had arranged a divorce, and it was already final: because he was a man, he got it without me even knowing it was happening. That is one reason why I want to raise my daughter somewhere else!\"\n\nBarry said nothing for a long time. She waited patiently, not knowing what else to do. Finally he sighed deeply and said \"Missy, I am sorry, sometimes, that I am a man, because so many men in the world treat other human beings so badly. Especially women. I'm very sorry about your troubles, but I tell you again, It seems to me that you have behaved very smartly. You are a very strong woman. And beautiful, and well educated also. You would be a fine catch for any intelligent man who appreciates beautiful, intelligent women and would like to have one at home as a lifetime partner and to make love with. I think it is a criminal shame that a woman so lovely as you hasn't had a good experience in her marriage. No love, no support, and probably a horrible sex life as well. I am very sorry.\"\n\nQuite unexpectedly, he leaned forward, took her face in his hands, and kissed her once, very lightly, then released her. Her heart seemed to skip several beats in a row. He whispered \"If things were different, I would love to teach you that there are men who would appreciate you, and who would consider it the highest honor to make you happy, both physically and otherwise.\"\n\nWith that, her heart seemed to actually stop completely, then restarted with a horrible squeezing sensation. It took a few seconds to regain control of her body -- especially its vocal apparatus!\n\n\"Thank you again, Doctor Barry, but I would not be a good catch. I am middle-aged, I am certainly not a virgin and so I have lost most of my bargaining power, and I have a daughter already. I am a very used piece of merchandise! Who would want me? Nobody, no man at all, not ever. After all, men always want virgins, do they not?\"\n\nBarry shook his head. \"Not if they're smart, they don't. Missy, I believe that for two people, the only events that matter are those things which happen between themselves. Whatever happened in the past is not part of the relationship, except that each of us carries our personal history with us. We can't avoid that. But earlier relationships don't count. I have made love to well over a hundred women, Missy....\"\n\nShe looked up, startled again by his directness.\n\n\".... and I would never expect any of them to be virgin. And if I ever find a woman to marry, I won't expect that of her either. I just don't think it is important. After all, MEN aren't supposed to be virgins when they marry, are they? I simply can NOT imagine what value there is in a woman's virginity. It should be the other way around, you know: in every other area of life, we value experience. We pay highly for it when we hire someone, don't we? What nonsense all this is!\"",
        "Missy had never had a man say such a sensible thing to her: she had never, in fact, had a talk about anything sexual with anyone except her mother, and that only just tangentially. She managed to say \"I keep telling you \"thank you\"! You come from a very different society. If everyone over there thinks like you do, then it must be nice place to live. But I find it very hard to believe that you can think me beautiful, or desirable. I have never been told such things in my life! My husband was my only man, and since he left I have just taken care of myself and my daughter. And my mother, who is getting old.\"\n\nBarry snorted gently and said \"Sorry to disappoint you, Missy, but although many Americans feel just as I do, others do not. There are plenty of men in my own society who have attitudes that probably can't be told from your husband's. But that's not me, or most of the people I know and like and trust.\"\n\nShe nodded: that made sense. His next statement both embarrassed and pleased her thoroughly: \"Missy, I find you extraordinarily desirable. I'll tell you a secret. When you knocked, I was just getting ready to...\"\n\nHe paused, she looked up expectantly. He grinned, turned quite red himself, which she thought was somewhere between totally ugly and monumentally cute.\n\n\"Well, I was going to imagine making love with you and masturbate. And not for the first time, either!\" Her instant patented flush told him that she fully understood. \"Because I have been doing that, imagining being with you, every night since we met. And you make me very, very sexually needy. So there!\" His own flush brightened, but he didn't drop her gaze.\n\nShe was so utterly confounded that she could say not a single word. This was incredible: him, imagining making love to HER? Impossible that he could even THINK of such a thing. But how interesting. And complimentary, she guessed, at least in his mind, therefore in hers too.\n\nAbruptly, Barry rose and stepped over to the desk, pulled a pad of hotel stationery from the drawer, took her documents and spread them before him on the desk. He sat for a few moments, then began writing with a strong, swift hand. Missy stood and moved over behind him, where she could see over his shoulder. He had beautiful penmanship.\n\nThe letter was short, detailed, and strong. It was not what she would have written but she understood every word, and could see exactly why he said what he said and why he said it in a particular way. He had a great deal of practice at this: she was unbelievably lucky!\n\nHe finished it quickly, with signature, title, address, and an invitation for the reader to contact him for further information. He looked up at her and smiled, asked if he had left out anything she wanted to include. Would it do?\n\nShe nodded, and whispered again \"Thank you!\" as he folded it neatly and put it into an envelope. He rummaged through his briefcase and added several of his business cards, then handed the envelope to her. She didn't know what to do, and said so.\n\nHe stood up in front of her: he was truly gigantic by her standards, although not nearly as big as many of the tour members. Gigantic, but comfortable to be near, even though they knew one another so little. That was another strange thing: she had never felt such ease in the presence of a man before, especially in a private setting, and even more so after her unfortunate marriage.\n\nHe stopped her wandering thoughts: \"I think it would be a good idea if you left now. We can talk a lot more tomorrow, after I cool off. You are a very great temptation, and I don't want to get either of us into trouble, and I also don't want to take advantage of you. Which I will definitely do if you stay much longer.\"\n\nHe put his hands gently on her shoulders and said quietly, \"Missy, you are a very brave woman. I admire you. I also think you are beautiful and intelligent. I want to help. So, when you start to make all this happen, I expect you to contact me and let me help in any way I can. I am perfectly serious. Do we agree that you will do so? Have I your promise on that?\"\n\nShe nodded, happy and pleased.\n\nThen he took her face in his hands again. She thought how easily he could squash her head, his hands were bigger than her face, yet they held her with such delicacy, as if she were a work of art painted on an eggshell. She wondered what he would be like if he were excited or angry?!\n\nHe whispered almost fiercely to her \"So here's my pay for the letter. I get to know you better, we discuss your plans together so they make sense and will work, and this...\" He kissed her again, lightly, and so fast that she had no chance to respond. Not that she would have known what to do, since kissing was not in her repertory. No dating, no necking. Lots of movies, though, so at least she could imagine things. And imagine she did, images from film and books whipping past like lightning single-frame shots. But she couldn't move.\n\nThen he turned her around and with a firm pressure escorted her carefully towards the door. He opened it for her, ushered her out into the hall, said softly \"Good night, beautiful lady!\" and shut the door.\n\nShe stood there speechless in the empty hallway. In the dim light of a few twenty-watt bulbs, the line of closed brown doors seemed to stretch to infinity, almost like some abstract version of hell. In her hand was the letter she had so greatly desired and needed. It was perfect. And this crazy big round-eyed man! He wanted nothing for doing such a wonderful thing for her. Nothing! Except to help her in her quest, and to get to know her better. It was unbelievably romantic, straight out of a fairy tale, and it had happened, really happened, to HER.\n\nShe shook herself to see if it was a dream, established that it was not, then took one step down the hall. She stopped, considering. Bravery? She didn't think of herself in those terms. Nor beauty. Nor intelligence, really. He must be crazy!\n\nShe made up her mind, turned, and knocked gently on Doctor Barry's door again. One tiny rap with her knuckles. Now her heart was genuinely pounding, as if she had just finished a competition floor exercise. Her armpits were drooling wet.\n\nThe door opened and her own Doctor Barry stood there before her, towering over her. He looked at her very hard, then before she could say anything, he stepped towards her, half into the hall. There was an amazing bulge beneath his robe, and her fright descended upon her again, but he was holding her by the shoulders and saying \"If you come back inside here with me, then we are going to make love. No ifs, no ands, no buts, lady. You have had your chance to escape from me! You can still say either yes or no, so choose carefully. Take your time.\"\n\nShe looked at him, heart thumping so loudly she felt he must be able to actually hear it. Instead of saying anything, she just raised her arms towards him.\n\nHe smiled, whispered \"OK, so be it!\", then leaned down and scooped her bodily into his arms, lifted her into the room with him, turned and shut the door with his foot.\n\nShe was torn between being terrified of what she had started, and the desires she was experiencing and couldn't even name for their newness.\n\nHe carried her, she thought, as if she were a feather. He stood her beside the bed in the bright light. She whispered \"Darker, please?\"\n\nHe shook his head and replied \"Nope. I warned you already that I think you are beautiful, and I mean it. And beauty like yours can't be properly appreciated in the dark. I intend to study every millimeter of your body, to touch it, to memorize it. Besides, it is so much fun to be able to watch one another!\"\n\nShe flushed: that thought --watching!- had never occurred to her, but she was intrigued. She knew so little, and it seemed like he knew so much. She hoped she was doing the right thing. She wondered if she would ever know what the \"right thing\" was?\n\nHe was slipping the top of her dress down again. He was a fast learner, she thought: one lesson and he had it figured out perfectly, no fumbling whatever. The gentle slither of silk against her nipples felt like fire and ice combined, a whole new sensation. It didn't take long for her to decide she liked it. Then her breasts were completely free. She shivered slightly as his thumbs stroked down their sides, as gentle as a butterfly landing on a flower.\n\nThen he was on his knees before her again, but now his hands cupped her shoulders from behind and pulled her slowly towards him. Her belly trembled, then flipped as he engulfed first one, then the other, nipple with his mouth. She groaned: he inhaled almost her entire breast, sucking and gently chewing. Instincts working perfectly, she reached for his head, pulled him hard against her.\n\nAs she wallowed in the sensations generated by his lips and tongue and teeth, his hands were doing wonderful things to the nape of her neck, to her earlobes, to the delicate skin along her spine. Then somehow they were pulling her dress down even farther, it was slipping over the slight womanly flare of her narrow hips, pooling on the floor.\n\nShe found herself suddenly petrified at the idea of him being able to actually see her in the nude; her only similar experience had been so totally painful. Rather than step back into his vision, she moved forward to press against him, almost hiding, out of his sight. But the roughness of the terrycloth robe was wildly different from the cool silk, but perhaps even more arousing. Especially with the hard foreign body and warmth inside it.\n\nHe wrapped her in his arms, released her breast from the confines of his mouth, pressed her to him, one hand cupping both of her buttocks, the other cradling the back of her head. She kept coming back to how BIG his hands were: the palm by itself could hold most of one of her buttocks. Not only could, but did, and felt as if it were designed for the purpose. Between them, still beneath the terrycloth, his erection made a huge lump against her upper thighs and crotch.\n\nThen he kissed her. She wanted that to happen, but she really had no idea what it entailed, what it would feel like, what to expect. Strangely, her mouth seemed to be on fire, liquid fire. She immediately found that mouths were very nice. No wonder there was so much kissing in movies and novels! She kept her eyes closed, followed him as if they were dancing, he was leading, instructing. Coaching her in this new sport.\n\nHe explored her, she encouraged it. Silently, he invited her to reciprocate, and she did. He tasted minty, clean. His tongue-tip left traces of fire on her inner gums, almost all the way to the back of her palate. Better than in the movies, far better than her imagination. This she could get well and deeply into!\n\nJust as she was relaxing a little he picked her up again, cradling her easily in his arms. She kicked to free herself of the tumbled dress now tangled about her feet like a mis-wrapped turban, and shook off her shoes as well.\n\nShe was naked now, for she had been ultimately daring and worn no underwear tonight, something she could not remember ever in her life having done before -- a salvageable part of the original now-defunct plan. It felt so nice, too, quite shocking and forbidden!\n\nThe panic returned as he faced them towards the big wall mirror. She refused to look at their reflection. He didn't insist, but whispered to her that she should try to get his robe off while he held her. That didn't seem possible, but somehow, with him shifting her weight from arm to arm, they managed. It seemed so silly, but somehow right. He had made her naked, now she was doing him. Symmetry.\n\nThe robe fell to Barry's feet and he kicked it away, then stood her on the floor beside him, turned them to face the mirror squarely. She had her eyes squeezed tightly shut. She couldn't stand it if he were to have her husband's reaction to her body. That would devastate her.\n\nFrom their first touches Barry had decided that this was going to be a virtuoso encounter, for her sake. Therefore, she was going to have to unlock her eyes at her own pace. It was obvious that she had never had anything like a decent erotic experience with a man, quite the opposite. Care and tenderness were needed, and above all patience. The result, if he handled things correctly, would be very much worth the effort, for them both.\n\nGently, he stroked her all over, using palms and fingertips. His eyes feasted on curves. Muscles. Shapes and textures. Colors, light and shadow, interplays of plane and line and curve. He described to her what he was seeing: she kept her eyes shut, listening, trying hard to see herself as he was describing. It didn't work well, but it was very nice having him describe her in such glowing terms.\n\nBarry murmured \"God but you are beautiful\" over and over, until her gentle trembling stopped and was replaced by tiny movements of encouragement, like a cat seeking a stroking hand, until the moment when he put his fingertips against her eyelids as if to open them for her. The idea didn't scare her so badly as at first. He stopped behind her, with his fingers still on her lids, and whispered into her ear:\n\n\"Missy, I know you had a terribly difficult experience with your husband. I understand. But believe me, you are genuinely beautiful. You can't judge that for yourself, only someone outside of you can do so, and I'm going to be that person. What your crazy, stupid husband said, and how he behaved, were HIS PROBLEMS, not yours, and certainly not MINE!\"\n\nHe paused: \"Now, I'm going to open your eyes for you in a second, and you'll be looking right into the mirror. But I am going to keep my eyes closed until you tell me I should open them. That means you won't need to look me in the face and be embarrassed. I understand that! And while my eyes are closed, I'm going to explore your whole body with my hands and tongue and lips, and I'm going to tell you what I think and feel about it. Your job is to just pay attention to what I'm saying, and enjoy yourself. And to watch us in the mirror -- we are going to make a lovely couple. You'll see!\"\n\n\"Then, when you feel you're ready, you can tell me to open my eyes, and you can do the same thing for me. I'll be yours to explore any way you want. There is no hurry, you know. Hurrying is the enemy of pleasure between a man and his woman!\"\n\nHer heart did a double-take: \"His woman?\" That's what he had just said: maybe that was just his way of referring to his partner of the moment, to any partner. But it did feel nice! She nodded silently.\n\nThe entire universe behind her was filled with Dr Barry, he loomed there like a storm cloud. Where he wasn't actually touching her she could feel the heat of his body bathing her skin. Her mind was in a strange, foggy place: it was odd, but there were no sounds in their universe save those they generated. She could even hear the two-toned whistles of their breathing.\n\nAs he began to touch her, she felt swarms of goose-bumps grow and migrate en-masse across her body, realized she had never felt such intense, and pleasant, sensations in her life, and it seemed likely that there must be something inherently wrong with receiving so much pleasure, it just wasn't part of the human condition, it could not be right, moral, proper.\n\nCould it?\n\nOr had she perhaps been mistaken about the details of that condition all along?\n\nThen his fingertips released her eyelids, slid them open, like shutters on their private world, the opening scene, start of the show. There they were, together, in the mirror, tiny woman and big man. Startling, beautiful. He was behind her, eyes closed as promised, looking almost meditative and certainly very happy. He was crouched slightly, pressing his chest to her back, cupping her breasts in his hands, letting her nipples protrude between his fingers. Squeezing first breast, then nipple, back and forth, left, right.\n\nBehind her, against her lower back, his erection made a comfortable presence, its curve fitting the long indentation of her lower spine perfectly. Barry's face was visible above her shoulder. She studied his expression: it was relaxed, concentrating, beatific... and there was no doubt about how much he was enjoying himself. That helped enormously: she had never been told, much less shown, that she could actually please a man with her body, not in any way.\n\nTentatively taking the initiative she rolled her back slightly against him, making his cock work in her spinal groove. He sighed and smiled, returned the wriggle. She liked the exchange. It was non-threatening, mutual, warm, close. All good things.\n\nHis lips tickled her earlobes. She was surprised at their sensitivity. More unexpected sensations! He talked slowly and quietly, describing details carefully, as his fingers explored. She listened, gradually relaxing, eyes following the voice and touches. He explored her with fingers and tongue and lips, all over. Went around her, counted vertebrae with his teeth, cupped her breasts with his hands, let his lips tickle the backs of her knees, then trace the crease of the bottom of each butt-cheek.\n\nHe undid the French roll, let her long dark hair fall forward over her shoulders so that each nipple peeked through a veil. That was very artistic-looking: it pleased her, the view in the mirror. Imagine, seeing herself as a living work of art! Very like classical calligraphy, black on near-white.\n\nHe told her about her breasts' multiple textures, his fingers raised the areolas into corrugated circles with tiny pylons of nipples in their centers, told how he loved the rough and smooth, her private and special shapes and colors. He described how much he liked her flat belly, compared her navel to an almond in shape, wondered at how she had managed to stay so trim and small.\n\nHis hands went slowly down her legs, feet, ankles, backs of knees, the creases of her buttocks. And her bottom gave him rhapsodies: it was very well-shaped to his taste, not the board-flatness along the back which was so common in the local women, but rather with a good protrusion and curvature that made his palms itch to cup it.\n\nShe breathed a quick explanation of her size: her family's women stayed small, didn't gain weight and breadth the way so many others did, and she had produced a very small child, only a kilo and a half at birth, the birth had been no problem despite her own tiny size. He moved to kneel in front of her: kneeling, he was almost as tall as she, not quite, and it put his face at just the right level for playing his wonderful games with tongue and teeth, along the underside of her breast, a place she would never have thought to tickle for herself.\n\nHe put her hands behind her head, spread her elbows wide, then spent a minute exploring each armpit with his lips and tongue, exclaiming over the length and sparseness of her pit hair. She shivered at the touch: even the thought of this was alien, but the reality seemed so natural and desirable.\n\nShe vaguely felt she ought to protest, because after all, truly nice Chinese women didn't do such things (Did they? If not, then why not?) - much less enjoy them, but she kept still. Doctor Barry was doing the evaluation, not she. He had told her to just enjoy herself, and, like every good obedient traditional Chinese woman, she was doing exactly as told by her man. Sometimes, she thought, traditional roles could be advantageous!\n\nThen his thumbs were tracing the edges of her crotch as he sucked on her nipples: down the side-creases they went, softly, carefully, trailing fire. She was shivering as they moved towards what she knew was their target. Then came the gentlest stirring of the scanty pubic hairs at the edges of her vee, like ripe wheat in the first winds of a rising storm, his fingers arrived first, then other things, quite different but unseen.... she couldn't see in the mirror exactly what he was doing because his head was in the way, but it produced the most wondrous, warm, insanely intense tingling, it had to have something to do with his mouth because he was silent now for the first time in long minutes.",
        "She didn't object to the silence, the silence did not mean lack of communication, for he was using a whole new language and vocabulary to tell her how much he enjoyed her body. A truly nice language, too. Then his face was free again, his voice was floating up to her through the odd haze in which she found herself. This man was telling her how much he liked her womanly crotch-shapes and textures, how pleasing this part of her body was even to his taste-buds and to his nose, and she was caught between marveling that he could think so, and gasping at the wonders his touches were producing.\n\nThen, eyes still closed, he said \"Your turn, if you would like. Shall I stand?\"\n\nHe stood up when she said nothing.\n\nThen, gently, \"Missy, shall we open our eyes now, together?\"\n\nShe was tingling from head to toe, feeling as if she must be physically glowing from her inner heat and excitement. \"Not yet,\" she told him, no eyes together yet. Not ready for that. But soon.\n\nRight up to this moment she had been genuinely frightened about the upcoming reciprocity, about her first-ever real exploration of a man's body. In her uncertainty she kept her eyes averted, let her fingers do the initial exploration, but as she started, the anxiety was replaced almost instantly by enjoyment of the reactions her touch was producing. She found that could make this huge man shiver and shake at her will! With just a fingertip. And oh, my, how blatantly he was enjoying her touches!\n\nAll of a sudden her attitude changed -- in a millisecond she was no longer afraid of being seen, or of facing him. In fact, it seemed that now mutual vision was required, not something to be feared. Things were changing so fast for her this evening, so terribly fast!\n\nShe followed her instincts, and shyly reached for his face, set fingertips against his eyelids, raised them as he had done for her. Their eyes met, she smiled, he returned it but said nothing. She let her eyes explore him now, at last.\n\nShe gasped slightly at her first unimpeded view of the full, hard, up-curved erection he was sporting. It was as big as she had thought, as she had feared. She had no frame of reference, of course, except for the few \"always-in-the-dark\" experiences with her husband, and he'd been a small man generally. Hence Doctor Barry's entirely average-sized cock seemed enormous.\n\nNevertheless, she gamely resumed her exploration of his body. She exclaimed over his strong buttocks and thighs, spent minutes enjoying the delicious tickle of his golden hairs against fingertips and palm. Tweaked his nipples to see his reactions. Smelled him, odors of cleanliness overlaid subtly with gentle maleness, many different odors, all interesting, all new.\n\nAt length, she arrived at his cock. He watched her fingertips trail across his smoothly-shaved crotch. She paused there, just at the base, to ask \"You shave here? Why?\"\n\nHe explained, a personal preference, better access to nerves, nicer to the touch than a mat of tough pubic hair.\n\nShe nodded, murmured her understanding, at least in the abstract... it did make sense. Her fingertips explored: he shifted, spread his feet: she recognized the invitation.... to give her access to his balls if she wished. She kept her eyes fixed on his face as she cupped, stroked, tickled: she liked, liked very much, the reactions she was getting... they were totally trans-cultural, a language in which she found herself quite unexpectedly fluent, the fluency being an odd occurrence that both surprised and pleased her. Barry was in heaven, and she was the cause. Her ego ratcheted up several clicks.\n\nFinally, she let her fingers trail delicately up the shaft. He made it twitch heavily, repeatedly, wrapped her fingers around it, showed her how the skin slipped and slid over the hard core. This mystery, this new-found representative of a class of objects for which she had developed such distaste, laced with such actual fear, was genuinely FRIENDLY! That was unfathomable. It was hot, hard, very much alive, with almost a separate being, separate will, nearly a conscious thing on its own: this cock-thing was a very new and very different sort of entity. She was fascinated, but also frightened and worried: it was literally almost as big in diameter as her wrist, completely different from what she had felt, but never really seen or explored, with her husband.\n\nAnd the HEAD was naked, pink, swollen. It was either beautiful, or horribly ugly: she knew that was a matter of taste, so she decided it was going to be for her a beautiful thing, since it was attached to this man and giving him such pleasure. Besides, on closer study, it was nicely textured, and symmetrical... much less worrisome, and more attractive, than she had first thought.\n\nBarry taught her, gently, carefully, how to touch him, used his hand to guide her, showed her how fingernails could be used to best advantage on the back of his ball-sack, around the rim of the helmet. He gasped repeatedly as she played. She smiled to herself while keeping her eyes locked on him, judging his reactions: this unknown territory where man and woman intersected was proving to be both interesting and manageable.\n\nShe played that way for several minutes, steadily gaining confidence in her ability to give pleasure. Perhaps her husband's opinion of her body and its behavior had been wrong, as Barry had insisted?\n\nThen the game reached a changing point as Barry sighed deeply, picked her up and effortlessly carried her to the bed, set her gently down. She curled up into a ball for a moment, then rolled onto her back and opened her legs widely. She turned her face away from him, and put one wrist over her eyes. She was trembling visibly again: in the ten feet from mirror to bed, in that short time, all her new-found confidence and happiness evaporated. Gone like mist in a sudden burst of sunshine. She was back where she hated to be, naked in bed with a man looming over her. She was deeply upset with herself for the change, but couldn't control it.\n\nBarry sensed and understood.\n\nShe lay there on her back, face and gaze averted, as Barry knelt on the mattress beside her. Before he could say anything, she whispered \"Doctor Barry, I don't know how to make you happy. Not in bed. My husband said I am a terrible woman in bed, that I do not have any idea how to make a man happy.... but he never would explain what he wanted me to do. I was just supposed to know it, I guess. But I did not know! Nobody teaches these things to girls here. So, I must ask you, am I doing this right? You will have to tell me! This is the way my husband wanted me to be. Perfectly quiet and still, those were his demands. He never wanted me to move, just to lie beneath him. I did not like that. I never thought that was the way it should be, but I did not know what else to do, either.\"\n\nShe sniffled once, loudly, and went on: \" He always hurried, and always complained that I never got wet, and therefore he could not enjoy himself, which was his only goal. That made him terribly angry.\"\n\nShe glanced at Barry, took in his expression, correctly read and understood the mixture of distress mingled with concern, and ended with \"He always hurt me, Doctor Barry. Never pleasure. Not hurt badly, but very uncomfortable, not nice, certainly not at all enjoyable for me. And he was much smaller than you are, down there, so how can I possibly get you inside me? It will hurt me and I don't believe I can give you any pleasure at all. I'm so sorry!\"\n\nTears trickled. Barry tilted her face towards him with a fingertip's pressure, and stared down at her until she finally met his gaze. He smiled at her and said \"Missy, when we make love, it is my duty to see that you feel good and enjoy yourself. If I don't do that, then I have failed both you and myself, because if YOU don't feel good, how can I?\"\n\nShe nodded, and more tears came: \"But Doctor Barry, that must mean that I have the same duty to you. And I do not know how, so I am doomed to failing!\" She sniffled again, very much the little girl panicked and angry with herself, with an icing of fright.\n\nBarry shook his head: \"Not so! Missy, everyone needs a teacher in these matters. I had mine, and she was very good.\" She looked startled at that, but he just grinned and kept on. \"If your husband didn't teach you, then he failed in his duty to you. He should have taught two people... first you, and second, he should have taught himself how to work with you so that you could have enjoyed one another in making love. I'm very sorry he failed in both tasks, but that is not YOUR fault.\"\n\nHe smiled at her, friendly, lovingly, not scornfully. \"And besides, HIS failure means that now Doctor B gets the privilege and responsibility of being your teacher. I don't particularly want or expect virginity in my women, but I really do love to teach and to surprise and delight them. Especially you!\"\n\n\"Now, Missy, I want you to just relax and FEEL what happens. I can tell, even if you CANNOT, that you are a very sensitive and very sexual person. Okay? It's really easy, you know... just pay attention to your teacher, follow his directions. Teacher will do nothing to hurt you in any way. And believe me, I will be getting intense pleasure all the time -- and later, we can turn things around! I promise. Now, are you ready?\"\n\nShe managed a tiny grin, and wiped her eyes. Barry leaned forward, hovering above her like some immense blanket, and licked the tears from her cheeks. She relaxed a little, wondering what...?\n\n\"The instructions are simple, just three things... RELAX, trust me, and enjoy yourself. Believe me, Missy, you will be giving me great pleasure. I will enjoy every second of what we do, and later, we can come back and you can learn other things to please me even more... but for now, this is going to be YOUR pleasure-trip. Okay?\"\n\nShe nodded, amazed at the whole idea. He really was a strange, wonderful person, this Doctor Barry! He paused, then whispered, \"Before we start, we need to decide about birth control... I don't think you need another child... I can't make you pregnant. I've had a vasectomy...\" He watched her face: she knew what that was. \"...but Missy, lots of men will say that when it's not true, just to avoid using birth control. That's a very dishonorable thing, and I don't want you to worry about whether I'm telling the truth. So if you want, we can use something else as well.\"\n\nShe shook her head and said \"No, but thank you. I believe you. But no other method is necessary, because I take birth control pills. To control my period. Without them it is very irregular, and very painful. So we are safe.\"\n\nBarry just nodded and smiled. Both were relieved: no obstacles left. Except al her years of emotional roadblocks. Then his head was moving gently down the front of her body, staying precisely on centerline. The tongue tickles were very nice, she thought, and then she caught her breath as he hit her navel: he didn't seem to be slowing down or veering! She gasped mentally: was he really headed that way with his mouth? Did real people actually do what this intimated... did they do those things that all her girlfriends, even advertisements, hinted at but never really discussed? How could he want to do anything like that?\n\nMemories flooded her. Traveling with the team. The night in the Amsterdam hotel, her first international trip, she was 13, sharing a room with her friend My Ling. Missy had been in their room after dinner, fascinated by the thirty-channel television with its variety and color and fast pace and obvious freedom: many languages, too, but nothing oriental and certainly nothing in Mandarin. My Ling had burst in, terribly excited about the latest team gossip: apparently one of their coaches, an ancient old woman of about 26, had managed to \"escape\" from the relatively tight control of the Chinese custodial staff last night. She had spent the night, the entire night, with one of the Dutch male gymnasts, an absolutely beautiful man, at his apartment!\n\nAnd she had told someone who told someone else, who told My Ling, about the incredible, sexy things he had done with her. Including something unbelievable, involving his mouth and her crotch, something she apparently thought was the most wonderful thing that had ever happened to her, she had told someone that it made her feel as if she were plastered to the ceiling, and on fire, and in direct contact with God, all at once.\n\nMissy and My Ling giggled and sputtered, red-faced, as they turned these few data over and over, trying to understand just what might have happened. Later, lonely and craving closeness, they shared one of the two beds. There, perfectly innocently, My Ling had whispered into Missy's ear, wondering whether the two of them might explore one another, see if they could figure this mystery out, but Missy couldn't bring herself to do any such thing. Discussing the possibility, however, was very exciting.\n\nEventually, they decided that it must just all be a rumor or a made up story, since real people couldn't possibly behave in such a bizarre, almost disgusting way. Could they?!\n\nNow, back inside her brain and settled into the present, she floated through a mental sea littered with all the disconnected bits and pieces of erotic knowledge, rumor, folklore she had accumulated. Ideas, imagined imagery swirled. Bits of advertising, scenes from novels and movies, carefully-phrased tidbits from friends repeating and enlarging upon similar sources.\n\nBlind leading the deaf through a valley of smells? It seemed that a person was just supposed to KNOW all about this stuff, but HOW? By some sort of cosmic osmosis? What did she actually know, really? Not all that much, she supposed.\n\nAnd, too, just what did she want from this sex-business? Did she even KNOW what she wanted? It wasn't easy to sort it all out. Buried in her belly, down low, there was this funny heat, like little embers glowing. The closest thing she could compare it to was the sensation in her gut when she had once taken a big swallow of good Japanese whiskey. She investigated her own knowledge, mentally: the bits of erotica she could summon fueled the glow. She studied it more: how could a fire possible maintain its glow through the dampness she was experiencing down there? What did she want? What indeed?\n\nHe waited patiently, sensitive to her bout of introspection.\n\nThen, when she surfaced again, his hands arranged her legs like a coach working with a new student. He was very calm, slow, and totally self-assured; all of which made her feel better. He dropped onto his knees between her legs, face downwards, approaching: she held her breath, like a deer in headlights, as his thumbs spread her outer lips wide apart. Then there was his voice, soft, low, delicious, she could feel his breath as he spoke, tickling, stirring her insides as if it were an oar in her bowels. Odd how such a tiny stimulus could generates so powerful a response, and so distant from the site! Missy hadn't yet discovered that the brain was the big erotic organ, but she would, eventually. He was talking into her pussy as into a handset, saying \"You have the most beautiful pussy, Missy... gorgeous... I love this part of your body, it's so pretty, so sensitive. Lots of colors, lots of textures, every one is different...\"\n\nShe tensed visibly as his breath wafted over her clit, and he stopped. Her crotch was gorgeous, exquisite, precisely what he dreamed about in a woman... small, symmetrical, prominent, with sharply defined creases and folds. The sparse black pubic hairs were concentrated on her mound, the lips themselves were nearly naked and fully visible just as he most preferred... no concealing jungle, no dense Brillo-pad here.\n\nHe could see plainly how swollen and ready she was -- as ever, the body was really in charge and doing its own thing -- matter over mind in things sexual. The smooth outer lips were now swollen, hot and blood-full and taut, the inner lips exposed and swollen enough to separate the outers, revealing the dark inviting pink tunnel of the entrance. All glistened wetly: Barry couldn't imagine any man not being entranced by the sight, and said so.\n\nWhen Missy didn't respond, and continued tense, he stopped entirely, and whispered to her: \"You know, Missy, this part of you looks for all the world as if you are a twelve year old virgin!\"\n\nHe did know how to relax her, didn't he? She giggled and protested the impossibility, but he persisted: \"No, really... it looks as if nothing has ever been in here, not your finger, not your husband, and certainly not a baby's head! Your pussy is absolutely beautiful! Very exciting. I love it. You should, too, because it is going to be your best friend soon.\"\n\nShe managed another tiny giggle that further broke her nervousness. The entire idea of talking about such things was alien, but she did like what he was telling her.\n\nBarry kept on, knowing that explaining would help. \"Missy, I can SEE that you are excited and dripping wet... it's so obvious that I don't even need to touch you to know. That's very unusual, it's very nice, and I find it really exciting. It tells me something, something very important. Want to know what?\"\n\nMissy opened her eyes, met his, and nodded.\n\nHe continued: \"It means that your BODY is working independently from your mind... your mind may have been misguided by your husband or by your upbringing, but your BODY is in fine shape and knows exactly what to do. Give me your hand!\"\n\nSilently, she slid her hand down her belly to meet his: the size mismatch between their hands was enormous.\n\nShe wondered what he proposed to do, and quickly found out. He took her middle finger and slid it down her slit, through her lubrication, across the erect lips, over the top of her clit. She shivered. He placed the tip at her entrance, and only then did he settle just one of his own fingertips against the opening. \"Feel here? You are as wet, Missy, as any woman I've ever encountered. You are DRIPPING! Your husband was completely wrong, Missy... he just didn't know what he was doing, and neither did you, so you couldn't help. Your body is working perfectly, whether your mind knows it or not! We just have to educate the mind, and that is not going to be difficult.\"\n\nHe gave her a few seconds to explore herself, then said \"Here... Follow me.\" He rotated his fingertip around the inner edge of her opening, slowly, gently, taking her finger with him. As he moved, he pressed forward, sliding his finger gently inside, taking her finger along, until they were both embedded inches deep alongside one another, sharing the tunnel's warmth and closeness.\n\nHe murmured to her \"Nice in here, isn't it?\"\n\nShe looked at him, took a deep breath, smiled a tiny smile, and nodded, with his finger doing a long, slow writhe.\n\nBarry gave her his analysis: \"Missy, what happened to you with your husband was unfortunate... because you have an absolutely first class sexual body. In this body of yours, you own a Ferrari racing car, high powered and capable of enormous things sexually. It is a very sensitive, sophisticated machine. The problem was that your husband was just a clumsy tractor-driver, not a racing driver. And he mistreated you as a result.\"\n\nShe giggled openly at the \"tractor-driver\" comparison, finally relaxing into the situation, loving the feelings their two fingers were generating. She found herself, indeed, swollen and dripping wet down there, something she had never managed with her husband, and that alone was wonderful. The idea that the \"not wet\" difficulties he had complained of were her husband's own fault and not hers, was a revelation. There really truly was nothing wrong with her body. Or with her mind, from the way she was rapidly beginning to enjoy every little nuance of contact with this man! She didn't need much more from Doctor Barry to convince her that he was right: not her fault at all!",
        "After several long, slow circles of their fingers, she began to squirm and rise to meet the penetration. Barry knew for sure that this was a pleasure-shiver, not tension or embarrassment. Things were improving rapidly.\n\nShe sighed, and asked \"So. If you are correct, then perhaps... well, Doctor Barry, I do not think you are a tractor driver! Are you a race-driver?\" She watched his face.\n\nHe understood what she did not yet, that her ability to toss back a little joke of her own meant she was relaxing deeply, not superficially. He nodded, and dipped his face towards her crotch, waiting for her reaction to the move. He was gratified: instead of the earlier tensing, what happened was a sigh of expectation and an invitation to proceed, an almost invisible, but distinct, dropping of her knees sideways. She had just provided him with perfect access, and the invitation screamed at him: please do come on in! She had lowered her defenses and joined the game, even if she didn't yet know it.\n\nThen his mouth engulfed her clit, and with it, she felt, her entire soul.\n\nEach lick of his tongue against her tissues was like a pulse of air into a swelling balloon, expanding the something deep in her lower belly, raising the tension, stretching the skin of the buried thing almost unbearably thin, taut, quivering - she studied the licking, the delicious evil nasty glorious licking.\n\nThis man's face was pressed solidly up against her body, right down there where she peed, and he was obviously loving it, he showed no embarrassment (quite the opposite!), no hesitation, no repugnance. Whatever in the world did he receive for his troubles? What sensations could he be getting to make him so enthusiastic? Maybe his analysis was right, that the very act of giving pleasure could provide the giver with his (or her?) own pleasure? She lost the thought.\n\nEach delicate, powerful nibble seemed as if he were taking in a long, long string of precious gray pearls and biting off one. Each nibble shortened the string, dragging nearer the huge single pearl at its end, an object mysterious, powerful, beautiful and almost frightening. It felt as if the entire string were embedded in her spinal cord, and the movement generated waves of color and sound that suffused her entire body. The big pearl drew steadily closer: mysterious, surely, but she suspected that she knew what the big pearl contained, it was a surprise package, it was related to the tension in her belly, related to the small earthquake-spasms she used to get late at night when, alone in bed, she daydreamed of her novels and movies and squeezed herself against the pillow, or the little pleasure-lightning she would get once in a while during gymnastics practice, when certain slidings and rubbings \"accidentally\" repeated themselves long enough.\n\nShe smiled inwardly, for Dr Barry's attentions to her crotch had also triggered remembrances of the petit camaraderie that developed among the girls of her exercise brigade, how every once in a while one of them would glaze over momentarily, then shiver, then return dreamily to their collective world... the shared, suppressed tiny giggles followed by coy, averted glances, the briefly reddened faces which those occasions scattered in their wake.\n\nShe didn't know what was going to happen due to Doctor Barry's extended ministrations, nor did she know when.\n\nThe pearl hit, rolled over her like an earthquake. One or two low, distant rumblings, then total involvement. She climaxed as if falling into a deep well: protracted, intense, profound. Her body shook and spasmed against his mouth, wrapped itself around his fingers now so deep inside her that they were moving her inner parts about in new, entrancing ways. The monstrous orgasm continued until she was soaked in sweat, until she couldn't breathe, until she had to beat on his head with her palms to get him to slow, to stop, to let her get air.\n\nThen he was kneeling between her legs, stroking that huge organ of his against her newfound, wonderfully swollen wetness, and she was tense once more, in spite of everything she could do.\n\nBarry wasn't surprised, and stopped with his cockhead just touching her. He understood the resurgence of uncertainty and fear. He whispered to her, \"Hey... I have a better idea. Let's do something different. I know why you feel uncomfortable with me hovering over you like this, Missy. And I don't want you frightened for any reason... therefore...\"\n\nBefore she knew it, he rolled them over so she straddled him. Down between her legs his cock still pressed against her in exactly the right place to gain entrance, but now she was astride him as if seated horseback. She had never even heard of a woman being on top. Wasn't there something very perverted, unnatural, about this?\n\nThen he grinned up at her and said \"One of my favorites. This puts you in charge. YOU, Missy, are going to have to make love to ME, to US actually, not the other way around. Go at your own pace. I am going to lie here and enjoy every second of whatever you decide to do! I'll give you a little advice if you need it. Which I very much doubt you will!\"\n\nWith that he put his hands behind his head and raised his knees slightly to cradle her buttocks. He almost laughed, and said \"My god, woman, what a beautiful view I have from down here!\"\n\nShe was so pleased at his obvious happiness that she preened, and in the preening forgot to be frightened any longer. She sighed and let herself settle. She discovered with that very first movement just exactly what she wanted and needed: she needed this man inside her.\n\nMaybe if she were to go very, very slowly, it could be made to work despite his size and her equally massive inexperience? She would find out. She MUST find out! She let herself settle more, and suddenly what her body demanded was completion, so she drove herself downwards. His entry into her body was so deliciously easy and right! She didn't get the impalement she feared: her body relaxed and swallowed him up perfectly.\n\nIt was exactly when he bottomed out inside her, against the mouth of her womb, that an entire army of goose-bumps went on parade over her back and arms and thighs. Barry noticed and stroked his fingers over the roughened skin, prolonging the event. She stared at his face: it was wide-eyed and full of serious arousal. His hands came up and gripped her hips lightly, pulled her against him pube to pube, and showed her how to set up the motion she needed.\n\nLater, she could vaguely remember thinking her spine might be going to snap from the intensity of her whole-body muscle contractions as she came around him, A first-ever internally generated climax that pulsed her whole body over and over: her legs had never shaken so hard in gym practice as they did now. This man's cock felt like it must be going to come out through the top of her skull any moment.\n\nTo her surprise the bigness she had feared now seemed to be a real asset instead of a problem. She thought it odd how rapidly one's perceptions, one's evaluations could change! And his thumbs on her clit were unbelievable. The whole sensory suite was mind-numbingly intense, beyond anything she had ever known. She had no idea how long it lasted, this riding, but it had to have been for eons. And when he came inside her, it was like a drawn-out explosion deep within her belly. That set her off again, like a little volcano responding to a bigger eruption nearby. He had been right: her giving him that pleasure had triggered her own, unexpectedly, incredibly... and it just went on, and on, and on!\n\nWhen finally he let her settle back down to earth, she found that she was on her back, he was atop her, embedded deeply inside her body, and that he had all of the toes of one of her feet in his mouth... the tickling, now that her climaxes were receding and she could breathe again, was excruciating as his tongue washed into every space between toes. How in the world did he think these things up, she wondered? And just exactly when, in their ecstasy, had she wound up beneath him like this? She couldn't remember, and it didn't matter.\n\nThen he was pulling her legs together beneath him, trapping his erection partially inside her, partly between her thighs, and sliding it greasily, solidly, in and out of her. Another nuance, another new thing. He smiled at her gentle thrusting and wiggling as she sought to maximize her sensations.\n\nHe kissed her thoroughly, then broke and asked with a grin, \"So? Tell me now, My Lady Missy, how does it feel to be well and thoroughly fucked? By someone who cares about YOU!?\"\n\nShe blushed for the first time in many minutes, wrapped her arms around his neck and said \"I hope we were not just doing that... the word is crude and not pretty. I think we were making love. I prefer that term, please. And YES, in case you could not see it and need to be told, Doctor Barry, YES this little not-a-Chinese-virgin-any-more woman liked it. Every bit of it, from start to finish!\"\n\nShe kissed him ferociously, and said \"Thank you!\" Then, after a long slippery-sliding pause, she asked \"I was busy, you know, so I could not check up on you. Tell me please, did you... did YOU fully enjoy yourself?\"\n\nHe laughed and told her \"Damned right I did: I climaxed wonderfully hard, and probably put a deciliter of sperm into you, which is one reason we are so juicy right now. You have a wonderfully sexy body, Missy. All my fantasies rolled into one nice package.\"\n\nShe preened again, and whispered, with an edge of eagerness, \"Is there more to learn?\"\n\nTo which he replied \"Ah, I see you are addicted already! So I've done my job correctly, at least up to now... YES, Missy, there's lots more to learn!\"\n\nMissy lay there in his arms for a while, then looked over at the desk clock and jumped: it was much later than she had thought, they had been very preoccupied indeed! She looked at Barry and said \"Shall I stay the whole night with you? Would you like that? I would like it very much. But only if you want me to!\"\n\nHe nodded enthusiastically.\n\nOn the room-phone she dialed home, put her hand over the mouthpiece and said to Barry \"My sister will answer, Mother refuses to answer the phone when it rings, because she says nobody should be able to just summon her like emperors used to do with commoners... but Mother will talk on the phone later, talk almost forever, once someone else answers! They can take care of my daughter. I will just let them know what is happening...\" She giggled: \"Well, not all of it!\"\n\nThen it was rapid-fire Chinese, not to mention one-sided. Barry moved to slide one hand beneath her bottom, slipped a finger into her pussy, teasing, distracting. In return, she cupped his balls in her hand, all shyness gone. Then she paused, and whispered \"Mother's turn to talk. But my sister is JEALOUS! You would not believe what she was saying to me! I must tell you about her sometime. I did not expect her to react this way, not at all. Wow!\"\n\nHer face changed when Mother came on-line. The conversation took on a much sharper tone: even Barry's ear could tell that things were not entirely smooth. At one point Missy was almost in tears, arguing or explaining very rapidly, in emphatic tones. Eventually, after some minutes, things calmed down again, and Missy slowly hung up the phone, turned to him, her face carefully neutral. \"Mother at first thought I was doing a terrible thing. She thinks that what I am doing is a political act, or a revolt against our society, and that it is a very bad thing.\"\n\n\"But I told her she is wrong, and that I am very happy with my choice. I told her that you have taught me a great deal, and made me think better about myself. She thought also, at first, that I was becoming a prostitute, and that was why she became very angry. I think that upset her much more than the other thoughts she had. I explained that I was not, and that you gave me the letter I needed without asking for anything in return.\"\n\nShe laughed: \"That shut her up, which is hard to do because she likes to talk a lot. Also, she is not used to men who behave honorably. Finally she just said to me \"We do what we must do.\" That is her saying, and it is one way she can let me know she understands, even if it is not okay with her. I think my values have changed very much in the last two hours, and hers never will. I had to think very fast, Doctor Barry, and I think that this night with you is my own declaration of independence, so it is my personal Fourth of July. I had not thought about it until I had to explain to Mother, but I feel free, and completely grown up, for the very first time in my life. I do not think she will ever know how I feel right now. Very happy, very powerful.\"\n\nShe stopped: it had been an amazing speech. Barry simply nodded.\n\nShe bounced on the bed slightly and smiled at him, leaned forward to kiss him again, and finished with \"Everything is okay at home, they will take care of my daughter for me. And I will stay here all night!\" A very long pause, then her face approached his again: as she brought their lips together, she breathed \"You promised me some more!\"\n\nHe grinned at her, and replied \"Of course there's more where that came from, Missy. Anything you could imagine or want. One nice thing about sex when it is properly done, is that the supply is inexhaustible... plus it has no calories and is free! But one of the rules of this game is that you have to ASK, you have to tell me what pleases you, and you have to ask for what you want. So do I: this is a two-way street we are on. And you have to be perfectly frank, completely honest. Otherwise, how will we ever get to know what the other person wants and needs? We'll never be able to make the other really happy unless we tell one another, will we? And you have to use the right words... no silly shyness... words like fuck and cock and pussy and climax and suck and lick... words you know but probably don't use at all are perfectly appropriate between lovers! Okay?\"\n\nMissy nodded, then thought for a little while and finally whispered \"What I would like very much, what I really want, is this...\" She touched his lips with her finger. \"...down here...\" She took his hand and guided his middle finger to her clit. She continued: \"...and then, I want your... cock... inside me. I mean, I want us to fuck again. Very deep and very hard. And finally I want to sit on top of you again! Until we both climax. Is that okay? Did I ask clearly enough?\"\n\nBarry laughed and told her \"Perfectly delightful, lover... I couldn't have come up with a recipe that would please me more if I tried.\"\n\nShe hesitated, he asked what was bothering her now, and she said \"Well, I just thought... maybe you won't want to put your mouth down there right now. Because, you know, we are very wet from both of our juices, and probably you won't like the taste, so I shouldn't ask for that!\"\n\nBarry looked at her with a tiny frown, then relaxed it and said \"Missy, that's silly, but nice of you to worry. It's a good thing you are wet, and after all you're right, it's just the juices from our making love... the mixture is like a gift from both of us to both of us. So believe me, I do not mind. Now, lie down and let me get to work on your request!\"\n\nMuch later, nearly exhausted and very contented, they lay there together in the midnight darkness, she curled fetus-like inside his the larger comma. His arm lay across her, his hand cupped her uppermost breast. Her nipple stirred against his palm as she studied the contact. She was drowsy, infinitely comfortable, enjoying the warmth: she felt protected, cared for, valuable, and very, very capable.\n\nAll the thoughts and feeling she had hoped for in her marriage, and never found, had come flooding down upon her in a torrent. She was thoroughly into the sensations from this man next to her. His breathing was slow and very deep, unlabored, silent. She could feel his breath against the nape of her neck and earlobe, stirring the tiny baby-hairs there. His heartbeat, too, against her back, like a low distant drum. Ka-thump! Gentle tickling of the hairs on his upper thighs against the backs of her legs. She wiggled slightly against him, he pulled her slightly closer, nuzzled her neck.\n\nShe was amazed and pleased at her body's responses and capabilities in this new arena. She was sure that her gymnastics training had helped, but wasn't certain exactly how. For all intents and purposes, despite having borne a daughter, she was a virgin... until now, anyhow. After all, she thought, she had clearly never, ever, made love before this encounter with Doctor Barry, and had hardly any experience with simple fucking, either... her marriage had lasted less than a year, and her husband hadn't been interested in sex with her after his first sight of her boob-laden chest, so what did that amount to? Certainly less than once per week for a year, probably more like a two-minute mini-rape once every fortnight, a total of maybe, on the outside, twenty more-or-less sexual encounters, ending almost eight years ago?\n\nAnd of course, nothing before that... not only was she raised at home by Mother as a \"traditional\" girl, and therefore pretty thoroughly cloistered, but once she had gotten into the gymnastics scene, she was completely controlled by the state's sports authorities, and not allowed even to THINK about boys and dating, much less given time and opportunity to do it.\n\nSo... she supposed she could fairly legitimately consider herself to have been a virgin today, if she wanted to. Should she? She almost giggled: the question was certainly moot now, wasn't it? Even Barry, when looking directly into her crotch from VERY close indeed, even he had said that she looked like a little-girl virgin! The facts were, she HAD had sex quite a few times with her husband, and she HAD birthed a daughter (no virgin birth that!), and now she HAD been, for good and certain, actually made love to... or WITH? She hoped it was \"with\" and not \"to.\" Maybe in the morning she could ask him?\n\nShe turned over slowly, to face him. Her arms went around him: she knew what a teddy-bear was, and he was like a huge, but very active (!), teddy-bear, wasn't he? If a teddy bear is not evil, how can what it does be evil?\n\nHe wakened, and his lips sought hers in the dark: they kissed for a long, long time, kissing could readily be their entire universe, fully contained, nothing but tongues intertwined, protected by lips. Eventually they broke: between them, his erection had returned with a vengeance. She realized this change was all her fault, and she was proud of it. Proud! Of her own abilities, of her own attractiveness. Amazing.\n\nHer memories and musings all coalesced into one throbbing urge, which came from essentially nowhere. She squirmed slightly, rotated, slid herself downwards until her face was next to his hardness. She knew what she wanted to do, but not how to do it, the reciprocal of what he had done so specially for her. Everyone talked of it, nobody gave any detailed instructions.\n\nSo much of this sex-business was like that, nothing open, nothing straightforward, all half-speak and innuendo, like many other aspects of her society. It only made for unhappiness and confusion and uncertainty. At least between themselves she could change that, with his help!\n\nHer nose was filled with his musk, their mingled scents from lovemaking, her very first lovemaking ever. She wondered if she were doing this right? She found out. Beneath her, Barry spread his legs, helped make her comfortable, whispered as she touched him \"Oh my god that's nice! Thank you!\" He had given her so much intense pleasure this way, and now she genuinely wanted to reciprocate. Maybe this was what he meant by wanting to get one's own pleasure by giving to one's partner?\n\nShe pulled slightly back, whispered \"Doctor Barry? Can I tell you something? You will not think me a bad woman for it? Promise?\"",
        "Barry agreed, and Missy said \"I like lying here with you. It is very nice. I have been lying here dreaming for a long time tonight, while you slept. You are a very, very good teacher and the nicest man I have ever met. We cannot have much time together, because you must return to America soon. So, I want you to teach me everything. Everything, everything... every single thing you know or want to do. Teach me. Please? I promise to be a good pupil! I want to know.\"\n\nThen, tentatively, \"Does that make me a bad woman, to want to do all those things I have heard about, that are so forbidden?\"\n\nBarry thought for a second: he had scratched the cold surface and found a boiling spring just beneath it. It wasn't the first time he'd had that happen, just far and away the most spectacular. He said quietly, \"Not a bad woman at all. A wonderful, sexy, adventuresome, talented woman. My kind of woman. Do you really mean it, learning everything?\"\n\nShe wondered briefly what she was getting into: \"everything\" was awfully broad. Throughout her life she had been told repeatedly, and seldom in jest, \"Never volunteer for anything, in any way!\" Perhaps that was good advice? Did it apply here? She didn't think so!\n\nShe said \"Yes. I trust you, and I want to learn. You are very experienced, and I am not. You said you like to make up fantasies about women... you even said you make fantasies about ME. That is very flattering, you know. Nobody ever told me that before! What do you think about when you do that? Are they real things you remember from other lovers, or are they new things you have not tried yet? We could try those things if you wish. I would like to learn to do what pleases you. EVERY thing that pleases you will please me, too! This I can already see. It is a wonderful thing to know!\"\n\nShe was impressed with her own boldness, with the flow of her thoughts: all this was bubbling up and spilling out without her really willing it or considering it before she heard it herself.\n\nBarry turned on the bed-lamp so they could see one another. He was for the first time thankful for China's low-wattage mania: the soft yellow glow was perfect. He stood up beside the bed, leaned over her, kissed her once, said \"You are incredible! And I'm going to take you at your word. You are perfect for some of my fantasies, and you have been a major actor in them recently.\" He picked her up and placed her on her hands and knees. She didn't know what to expect, but complied readily when he tucked a pillow under her face and chest, lowered her onto it, spread her knees wide apart. Then he was behind her, and his tongue was doing its magic on her clit again, but this time from the rear. She gasped, nearly climaxing already. He had her reach back, spread her bottom wide open for him.\n\nA very few hours earlier, she would have frozen in prudish horror at the very idea: now, it was just another instruction, although very interesting indeed. She did as he asked, feeling wanton and extremely vulnerable. Then there was the oddest feeling down there, of something hot-wet-soft-hard and ALIVE. She realized with a shock that it had to be his tongue-tip, and POP there it was, wriggling inside her bottom. Good god!\n\nBut it was awfully sensual, and if it felt good and was being done to her by this man, then it was by definition completely acceptable. How quickly she had changed her attitudes... in minutes, the utterly unimaginable became not only reality but desirable!\n\nThen he was gone, murmuring \"Don't go away!\" Into the bathroom h went, and returned with a small plastic tube of slippery-stuff, the grease he used on his inner thighs to avoid chafing while running.\n\nWhen Barry knelt behind her, she could feel again his radiating warmth. She wondered what he was going to do -- or better yet, what THEY were going to do together: he hadn't touched her with anything but his tongue.\n\nLittle mysterious noises, then a dab of coolness squarely on her anus. He reached beneath her with both hands, put one finger into gear on her clit, cupped a breast lovingly with his other hand, and launched her again. Through her glow, she felt the head of his cock pressing on her, sliding slowly and solidly up and down the entire length of the crack between her buttocks. It was interesting, sensual but diffused and low intensity.\n\nThen the tip caught on the pucker of her bottom: diffused and low were the wrong adjectives now. She realized what was afoot, but instead of panicking, she composed herself with two rapid-fire thoughts, first that her Doctor Barry had promised not to do anything that could possible hurt her and he had performed exactly that way up to now, and second, that she had, in volunteering, really and truly meant it - she wanted to try whatever would please him. And that thought was overlain by the certainty that whatever pleased him was undoubtedly going to please her just as much.\n\nGently, carefully, with the patience of a saint and the power of a glacier, Barry pressed himself against her anus. Over many, many seconds, he felt her bottom-guardian muscles release and relax. She felt him entering, completely alien, completely evil, quite literally illegal, and utterly, breathtakingly wonderful. Forever after, she would date her sexual initiation and coming of age from that moment when she felt, so clearly and distinctly, his cock-head slide through her sphincter..... and loved the sensations. THAT was when she began, when she came into separate being.\n\nThere was some profound form of spontaneity, some release from inhibition, an important declaration of absolute personal independence from her past and even from her present, that went with the act. It had not been so when he first kissed her, or touched her with his fingers, or even when she had sat down upon him and taken him inside her so wonderfully.\n\nAnd it was different, too, from what she had described to her relatives on the phone. No, it was this completely unique moment from which SHE had been formed, born, started.\n\nShe felt him sliding in, spreading and opening her body, and she flowed like liquid silver into a climax that went on for nearly five minutes, until she was drenched in sweat, until Barry was pounding into her hard and deep -- amazingly, her bottom had become utterly open, relaxed and infinitely receptive. She couldn't believe that the whole process was producing such wonderful sensations.\n\nThen he came, the most intense, groaning, heart-rending sobbing she'd ever heard. At first it scared her, made her ask anxiously if he was okay. He managed a tight little laugh, told her that he was fine, just enjoying himself beyond anything he could have imagined -- which made his noises into a very sexy thing for her.\n\nThey slept soundly, cuddled together. Missy woke at four, lay there thinking hard. She hadn't the English word for it, but she was having an epiphany about transgressing rules and mores... the important and interesting thing was how nothing externally-visible had changed about her as a result of these adventures. There was no scarlet letter, no lightning bolts from Mao or the Central Committee, nothing except enjoyment and contentment and a profound desire to do it all again. And yet again!\n\nIt was an intricate phenomenon: the transgressions were monumental, or seemed so on their surface... not just the fucking, but the whole social complex from approaching a strange man for help (Foreigner! Government guest! Someone for whom she was a guardian and guide!), to making her bedroom offer, to breaking the guest/host barrier, to actual violation of specific laws.\n\nIt was for her the beginning of a long period of wondering \"Why?\" about many, many things. One thing was very clear to her, though... here, this moment, she was cocooned and protected from whatever was going on out there in the rest of the world. Four layers of protection: the hotel's isolating shell, the room itself, the sheet and blanket under which they curled, and last, most important, the strength and knowledge and caring of this man, her newfound partner - a partner for the moment perhaps, but a genuine partner!\n\nShe found that she didn't want to think beyond this very instant - she couldn't face the fact of his already-looming inevitable departure. For the moment, however long that moment could be made to last, she was happy! All this was uniquely comfortable and safe-feeling - she hoped it wasn't an illusion, that none of the layers were cracked somewhere that she couldn't see.\n\nWhile she thought, Barry slept, one arm protectively about her. Finally, she stirred him awake by sliding down beneath the covers again. She had to leave soon, to get to the lobby when she was expected to be there, but she was curious, about her powers to re-arouse this man. Could she?\n\nTentatively she lowered her head and explored his sleep-softened cock with her tongue, then took the entire head into her mouth. A good fit. Interesting textures, quite different from when he was already hard, a nice feeling having him there when he was soft. But his cock expanded and grew so quickly! More power to her credit - she understood that the growth was HER DOING! In moments the soft, wrinkled thing had returned to its powerful state, big enough so that her mouth hadn't room for more than the head.\n\nShe looked up at Barry, released his cock and asked \"What shall I do? Teach me, and tell me what pleases you! Remember our agreement!\"\n\nHe got onto his knees, laid her on her belly before him, showed her how to cup his ball-sac in one hand and his bottom in the other, how to stroke him with mouth and hands together. To his amazement, he came, quickly and powerfully: he told her how unusual that was for him, how incredibly strong the feelings were, and how talented she was, all things that she could tell were true. His balls and cock together jumped in her hand like a live fish when he came.\n\nHis juices were from him, from deep inside him, like he said, a gift of sorts. She liked the taste, which surprised her mightily. Especially when they shared it afterwards. Powerful, powerful, she was going to be good at all of this. But now, it was time for minimal toilette: he loaned her his toothbrush, and that was somehow an ultimate intimacy. Odd.\n\nThen she was gone. The room smelled delicately of their activities. Barry studied the scent, and slowly stepped into the shower, almost not believing all this had happened.\n\nBreakfast talk, over ersatz coffee with his fellow-delegates, was desultory at best. The next time he saw Missy, she was back in front of the group, translating some sub-minister's remarks.\n\nAt lunch, she sought him out, and pressed a small official-looking envelope into his hand: \"Message for you, Doctor Barry.\" She left immediately. He excused himself from the conversation, opened it: the folded slip inside had written on it \"Open in private please\". He did so, unobtrusively shielding the sheet from view.\n\nIt read \"Dear Doctor Barry. I have been wet (perhaps you can guess where?) all morning. I am still wet now, and I expect to stay that way this afternoon. It is all your fault. Because it is your fault, I think you should help me fix the problem. If you would like to help, I could bring the problem to your room at 7:30 tonight after dinner. If you nod your head to me next time we see one another today, I will come to the room and knock five times. Conditions at home, with my daughter, are the same as last night, if you wish.\"\n\nFirst chance, he nodded. She smiled briefly at him, quite non-committally, and passed him without another glance. Nicely done.\n\nShe knocked at precisely 7:30. He let her in, and as soon as the door was shut they frantically stripped one another and fell together onto the bed. They broke their clinch only after some minutes, winding up laughing at themselves for their eagerness, and discussing what they were going to be doing together, and to one another.\n\nMissy found it very easy, and very exciting, to lie there just gently fondling whatever parts attracted attention, and discussing pleasuring one another. It was a topic worthy of very detailed consideration. After several minutes of gentle mutual nuzzling and exploring, Missy asked if it would be okay for her to call home, even though she didn't need to do so: she had already told everyone that she would probably not be home again tonight.\n\nBarry agreed, told her it was a good thing, he wouldn't be the least bit upset. Sister answered, or so he assumed from the tone of the conversation: certainly Missy wasn't talking to a little kid, and she'd said Mother wouldn't actually answer the phone. He lay there with his erection waving in the breeze while Missy talked and fondled him at the same time, without hesitation or obvious embarrassment. Barry knew that that would have been the case a week ago, and felt quite pleased with himself as the responsible agency.\n\nMissy got into a very animated conversation, so much so that Barry wondered what was going on: every few moments Missy would giggle, turn red, and drop her voice conspiratorially as though to be certain he couldn't understand her, even though she knew full well he couldn't understand a word. He got more and more curious, and finally reached up and flipped Missy onto her back, spread her legs and buried his face in her crotch, making her squeal loudly into the receiver and then launch into a breathless, highly interrupted discussion of... what? He didn't know, and didn't really care. He was having fun, and so, apparently, was Missy. She finally hung up the phone, relaxed against his face, and came instantly with a pent-up fury that surprised both of them.\n\nEventually, she calmed down and answered Barry's query. Yes, that had been her sister Hanshi on the phone. And yes, they were very close and Missy always told Hanshi everything. And she meant EVERYthing! She turned prettily red as she admitted to that.\n\nBut Hanshi didn't date, even though she was twenty-nine. That was not unusual in this society, because dating was a western decadence hence had been frowned upon for generations, and marriage was expected to occur late due to population and social pressures. Nevertheless, a woman not married by Hanshi's age would most likely never get married, so Hanshi was destined to be an old maid, almost certainly. Just like her older sister, now.\n\nThe two sisters were a badly-matched pair in terms of marriages and offspring, a grand disappointment to their Mother and other relatives. It was too bad, because Hanshi was a very nice person, or so thought Missy. Now that Missy and Barry were having sexual adventures, Hanshi was extremely curious and very, very jealous. She had made Missy tell her everything, all the details of their lovemaking, and even just now she had been describing both Barry, and his actions, and her own actions, and especially how things felt and what her feelings were. Right while Barry was eating her!\n\nThat amused Barry no end: he told her that nothing like that had ever happened to him, except for once when a girl-friend had insisted on opening his pants and sucking on him while he was on an important business call. Missy tee-heed over that image, then said she hoped Barry didn't mind her telling everything to her sister... Did he? She could stop if he wished.\n\nBarry told her not only did he not mind, but that he thought it very sexy to think of Hanshi knowing all about their sex life. It was okay with him: in fact, if Hanshi could speak English, he told Missy, he would find it exciting to participate in the descriptions over the phone. Missy swatted him gently, and expressed her genuine amazement at his liberality. And she pointed out that a week earlier, she would have thought it unbelievable that anyone, much less herself, could have such a conversation as this... or could have adventures like hers to relate to a sister.\n\nBarry expressed his regrets that Hanshi was in such a predicament, tried to explain that in his own society her situation would be anything but unusual and certainly not looked down upon, but that didn't help anything much... even though Missy seemed to understand.\n\nShe listened to him for a while, and when he ran down, she took a deep breath and said \"I think I should tell you some things about my sister. I told you that Mother survived Nanking, and that makes her different from other women. I will tell you some things so you will understand when I say Hanshi is, well, very different from me.\"\n\n\"She is only twenty-nine, still almost a baby! But she has a good technical education in mathematics: she is a statistician. She speaks a little bit of English, but not very much. She is much bigger than me: she is tall, only a little shorter than you, maybe she comes up to your eyebrows. And thin, too. She has almost no tits.\"\n\nShe laughed slightly: \"Maybe my husband should have married Hanshi instead of me! That was so important to him!\" Then, \"We have different fathers, Hanshi and I, so the differences between us are not surprising, maybe. My father died of pneumonia. That is too bad, because Mother says he was a nice man, and today we could cure him easily. Mother will not talk about Hanshi's father: none of us have ever seen him and we do not even know his name.\"\n\n\"Oh. Life can be difficult and unfair. I'm sorry.\" said Barry. He went no further.\n\nMissy looked at him speculatively: \"And Mother never will tell us, either. Barry, I told you that in China women are not valued highly. Hanshi is a victim of that. She is very shy, and afraid of men, and for a good reason. When she was just a little girl, about eleven, she was attacked by three men, in the dark, one winter night when she was coming home from school. They were drunk, we think. We hope so, because we do not want to think that men who were sober could do such a thing.\"\n\n\"One of them stomped hard on her foot to break it so she couldn't run away. They hit her with a bottle, on the head. Then they raped her. She was lucky, really, because they were discovered and ran away before they could decide to kill her, which would not be unusual here. But the bottle broke when they hit her and it made a serious cut from here to here...\"\n\nShe indicated from the bridge of her nose to well up in her right-side hair-line.\n\n\"The cut did not heal well, so she has a long, thin bright red scar. It is impossible to conceal with makeup or with a haircut. And her foot was badly broken: she still has a limp. So she is valueless to most Chinese men: she isn't a virgin, she is getting old already, she has a scar and a limp.\"\n\nShe shrugged: \"She will never marry. No matchmaker would do anything but laugh at the idea of making a match for her, and it is impossible for us to arrange enough marriage-money, I mean a dowry, to overcome these defects. She has never even had a boyfriend. She will not marry and she will be both unhappy and disappointed all her life because of that. We talk about it every once in a while. It is too bad.\"\n\nBarry listened, made what he hoped were appropriate comments, not too judgmental, about the local customs in such matters. By quiet mutual consent, the topic seemed to just melt away into slow, gentle stroking. Missy lay there with her fingers around his cock and balls while Barry's hands did yet another full-body, whole-skin inventory of her own body. Shortly she was purring again, the slight blue mood gone with his touches.\n\nEventually Barry stood up, leaned over, and picked her up like a doll. Her arms went around his neck, and she nuzzled against the special little hollow at the base of his big neck-ligaments. He carried her to the bathroom, stood her in the tub, turned on the water full blast, hot. At first she was concerned about the water... such profligacy! But it was paid for, after all, and he could say it was being used in the service of his stay and under invitation from the PRC."
    ],
    "authorname": "XXscribbler",
    "tags": [
        "translation",
        "sisters",
        "sex ed for adults"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/twice-ten-point-zero-10-0"
}