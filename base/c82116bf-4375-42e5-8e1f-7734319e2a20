{
    "title": "Master! Master! Pt. 15",
    "pages": [
        "\"Have you ever even played badminton before?\" Lorraine asked from the other end of the net.\n\n\"We did in my gym class for a few days. I thought it was kind of fun.\" It was just after breakfast, and Elise, Lorraine, and I were setting up several nets out in the fields behind the mansion. \"Knowing you, you were probably busy in the storage room, giving some guy a rusty trombone.\"\n\n\"Ah, good times!\"\n\n\"I think this is a good idea,\" said Elise as she helped me secure one of the posts of the net. \"This ought to get them all tuckered out.\"\n\nIt could not have been a more beautiful day, with warm sunlight and a perfect breeze.\n\n\"That, and I was thinking I might be able to get closer to Neija if I partner up with her. For that, Lorraine, I need you to partner up with her brother so she can't.\"\n\n\"What is it that she has against you anyway?\" Elise asked.\n\n\"She hates me because I got her involved for the sake of keeping you and the girls safe.\"\n\n\"I can understand that.\"\n\n\"I know I used her, but she was never just the means to an end. With every girl I created, I promised myself that I would do everything I could to do right by them, to make sure they could live the best lives possible. It was love at first sight for all of them.\"\n\n\"Maybe I could talk to her. After all, I was the reason why you went to that zoo in the first place.\"\n\n\"Thanks, that would really help.\"\n\n\"You know,\" said Lorraine, \"I think I might know what would really help her relax.\"\n\n---\n\n\"You do realize that I have to report this stuff, don't you?\" Dr. Lawrence groaned. \"Do you have any idea what my superiors say when I update them as to this kind of stuff?\"\n\nHe and all the other doctors were gathered on the patio to watch our badminton tournament, all them with faces flushed with embarrassment and uncertainty. Why? Because they were the only ones wearing clothes. All the hybrids, as well as me and Lorraine, had gone au naturel for this event. Even Elise had decided to go with the flow and let the dogs out. Men and women, they were all the happiest I had ever seen them, finally able to strip off the clothes they hated so much and feel the sun and wind on their bare skin. The games hadn't even started and they were already running around and hollering like they had just popped some pills at Coachella. Goddamn, Lorraine's guys were ridiculously hung.\n\nOnly Leah was absent, preferring to stay with the doctors on the shady patio and protect her skin. I was enjoying the chance to go nude as well, having never been naked outside since... ever. It was very liberating and refreshing, and the feel of the yard under my bare feet was wonderful. No wonder the girls had always complained about wearing clothes.\n\n\"Hey, it was Lorraine's idea. And look at their smiles, how could this not be worth it? Besides, I know for a fact that every one of you has seen my equipment.\" I then looked back at Dr. Moody. \"Dr. Moody, I enjoyed reading your notes earlier, but there is a question I still have. What do you think? How's the angle of the dangle?\"\n\nShe didn't even answer, just burst into laughter, along with the other doctors. They were laughing at the question, right? Right?\n\n---\n\nAs Lorraine and Elise explained the rules of the game, I found Neija in the heart of the crowd with a warm smile on her face, brought on by the sunlight on her beautiful body. \n\n\"You really do have a lovely smile,\" I said as I approached her. \n\nNaturally, she went back to scowling when she saw me. \"What do you want?\"\n\n\"Let's partner up. I bet you and I can beat everyone here.\"\n\n\"Leave me alone.\"\n\n\"Come on, I really want to get to know you.\"\n\n\"The feeling isn't mutual.\"\n\n\"Look, I'm not asking you to trust me or to even like me. I'm just asking you to have faith that someday you might, and to let this be the first step.\"\n\n\"You're just doing this because you want me to mate with you at that sleepover they're all talking about.\"\n\n\"No, I'm doing this because I want you to be happy, and if your anger for me is keeping you from smiling, then I want to change that.\"\n\n\"Have you ever considered that maybe I would be happy if you just left me alone?\"\n\n\"But even then, you'll still have that anger in you.\"\n\n\"And before we start,\" Elise hollered, \"everyone put on sunscreen!\" \n\nOn cue, Lorraine squirted sunscreen all over herself. \"Come on, boys! If you want any sunscreen, you'll have to catch this greased pig!\"\n\n\"Fine, if it'll shut you up, I'll do it,\" Neija said. I handed her a racket. \"By the way, what do I get if I win?\"\n\n\"A cake.\"\n\nSeveral pairs of ears perked up.\n\n---\n\nOur first opponents were Amanda and her brother, Simon. \"Master, you won't be mad if we win, will you?\" she asked.\n\n\"Of course not, so don't hold back.\"\n\n\"What is a cake, anyway?\" Simon asked.\n\n\"It's a really sweet treat. It's so good that Momo and the others would give their right arms for one. Ok, let's start.\"\n\nI served, lobbing the shuttlecock over the net. Across the field, countless other shuttlecocks were flying as everyone started. Who am I kidding? Barely anyone managed to actually hit it the first time. Even I missed. Neija scoffed in annoyance at my failed attempt.\n\n\"You think you can do better?\" I asked as I tossed it to her.\n\nShe got it and dropped it to smack it with her racket. She hit nothing but air and the cone landed the grass. Her tail scrunched in annoyance and she looked off into the distance so as not to meet my gaze.\n\n\"I thought so.\" I took it back and this time managed to send it over.\n\n\"Whoa! Whoa! Whoa!\" Amanda hollered, staggering back and falling to the ground. The shuttlecock bounced off her forehead and landed upright on her left breast.\n\nThis time, Simon served it, but without missing a beat, Neija jumped into the air and spiked it like she was playing volleyball. Two points for us. Crap, I had set this little tournament so that the first team to ten points would win and move up to the next match, but that might not be feasible. We'd probably have to let everyone get used to the game first.\n\n\"Nice one, Neija.\"\n\nShe simply smirked while giving a little \"hmmph\" of self-satisfaction. Simon again served, this time lobbing it to me, and I knocked it back over, now with Amanda managing to return it. Finally, we were starting to get into the right rhythm. The shuttlecock began flying back and forth, with the four of us getting better and better with each whack. During the lull after one side would score a point, I look around to see how everyone was doing.\n\nNearby, Chloe and Lola were having some trouble. They were running around in circles, frantic, their instincts telling them to avoid anything falling their way. In the wild, even a fennec fox had to learn to fear the claws of birds of prey, and Lola had inherited that fear despite spending her life in the zoo. It was pretty pitiful, but of course, that makes it adorable as fuck.\n\nJenny and Peter were doing remarkably well, taking the same approach as Neija. While they were average in serving, they would jump into the air to spike anything lobbed their way. If they weren't careful, they might end up falling on the net.\n\nTwo screams drew my eyes to Elise and Betty, Betty having tripped over Elise's tail. I don't know who suffered more, Elise for getting her tail stepped on by Betty's giant hooves or Betty for falling hard on her tits. They were facing off against Momo and Sonja who seemed to have found their calling. True, Sonja was having a hard time resisting catching the shuttlecock in her mouth (heyooooo!), but she had spent countless hours chasing after balls and frisbees, so this was natural to her. It was the same for Momo, the shuttlecock reminding her of birds and invoking her predatory instinct.\n\nThe pillar men were doing well, but their Mistress was failing miserably. Rather than the shuttlecock, her eyes were glued to, well, other \"shuttlecocks\". She was staring at her buff creations, licking her lips with insatiable lust. Playing in the sunlight, we could all go for a cold drink, but she was the thirstiest person here.\n\nAfter some time to let hybrids get used to the game, we paused so everyone could get a drink, then started the tournament, with Dr. Lawrence marking the brackets. Countless rounds were played, with sweat pouring and evaporating and feet turning green from the grass. Neija and I moved up the line, beating whoever crossed our path. The more we played, the more I began to fall into the same pit as Lorraine. My eyes spent more time on Neija than the shuttlecock, her bronze body glistening with sweat. Goddamn, she was the epitome of sexiness in a way not even Betty could match. The only thing that drew my gaze from her body was her smile. Every time we scored, she'd grin from ear to ear, and when we won a match, she'd jump up and down and holler in joy. The thrill of winning was mixing with the endorphins of her exertion and causing her to unwind. \n\nFinally, it was the last match, me and Neija vs Momo and Sonja, with everyone watching.\n\n\"Yeah! I finally get to play with Master! Hi, Master! This is so much fun!\" Sonja was as sunny as usual, not even appearing tired after hours of playing. \n\nMomo, on the other hand, was focused as a laser. \"Momo wants that cake, Master,\" she said coldly.\n\n\"Does this little cub really think she can stand up to me?\" Neija asked with a sly grin.\n\n\"She has cake on her mind, don't doubt her,\" I replied.\n\nI served, sending it over to Sonja who knocked it back with the happiest smile I had ever seen. It went over to Neija who jumped up to spike it down, but Momo had already gotten in position and was ready to intercept. Almost immediately, Sonja and I were pushed out of the game and it became a single match between Momo and Neija. They were zooming back and forth, not trusting me or Sonja to repel any lobs. The longer they played, the closer and closer they got to the net. Momo too was jumping up to spike the shuttlecock, her hair standing on end and a ferocious look on her face. Sonja simply stood in the corner, jumping up and down and cheering in endless excitement.\n\nThe decisive moment came, Momo rebounding it over to Neija, and before the shuttlecock even passed over the net, she had pounced to counter Neija's spike. So worked up, they ended up colliding in midair with the net between them and then falling on their backs. The shuttlecock, knocked back by Neija's racket, flew through the air, bounced off Sonja's head, and landed at her feet.\n\n\"Master and Neija win!\" Jenny cheered as she jumped up and down like Sonja had before.\n\nThe fatigue of the game had slowed down my thought processes, because one moment I was standing in the corner of the court, and the next thing I knew, Neija was hugging me tightly, our sweaty bodies pressed tightly together.\n\n\"We won! We won!\" \n\nThen as soon as she had appeared, she let me go and walked away, apparently having remembered her grudge. But everyone else was celebrating, overjoyed by the fun we'd all had. In the crowd, Lorraine came up behind me.\n\n\"Man, she's the queen of tsunderes, isn't she?\"\n\n\"I don't know what that means, but I can guess,\" I said. \"Also, can you please stop grabbing my ass?\"\n\nShe instead squeezed. \"Honk! Honk!\"\n\n---\n\nThe tournament had definitely accomplished one of my goals: everyone was tuckered out, and many had gained a nice tan. There was only enough strength to scarf down lunch, after which, it was a lazy afternoon of showering and napping. The whole mansion was silent. I found myself lying on a couch in one of the common rooms of the house, reading a book. This spot had the best light for reading. Snoozing between my legs was Shannon, a species of goat called a Nubian Ibex. Her hair was light, a mix of gray and brown, and growing from her scalp was a pair of curled horns, which I was using as a bookstand. Like Betty, she had hooves for feet.\n\nSoon enough, the fatigue overwhelmed me as well. I closed the book and set it on the floor, but that noise was enough to wake up Shannon.\n\n\"Huh? Master?\"\n\n\"Sorry, I didn't mean to wake you. I just need to change position.\"\n\nI pulled out the pillows from behind me and lied back. A sleepy smile on her face, Shannon crawled up closer to me and settled next to me with my arm around her and her arm across my chest.\n\n\"Today was so fun,\" she murmured before closing her eyes and drifting back to sleep.\n\n\"Yeah, it really was.\" Then I stroked her long ears until my own eyes closed and I drifted to sleep.\n\n---\n\nAfter napping and eating dinner, everyone went back to their own thing, and I went in search of Neija. I found her sitting at one of the tables on the patio, watching the sunset. There were a few hybrids playing badminton out in the field.\n\n\"Hey,\" I said.\n\nShe turned to me. \"What do you want?\"\n\n\"Did you forget? We won the tournament.\" In one hand I held a small cake, and in the other, I had two forks.\n\n\"Just leave me half, I'll eat it later.\"\n\n\"Ok, but I guess you won't mind if I eat my half out here.\"\n\nShe rolled her eyes and I sat at the table with her, removing the plastic top covering the chocolate confection. It was small enough to be eaten in one sitting, though any of the doctors would disagree. I took the first bite and let out a loud hum of bliss, but Neija refused to acknowledge me and continued watching the sunset.\n\n\"Goddamn, that is delicious. I meant to get you all cake back when you were in the hospital, but they considered it too unhealthy. It's become a tradition in this family to celebrate with cake when a new hybrid joins us.\"\n\n\"I haven't joined you.\"\n\n\"But I still want to celebrate you being here. I like having you around. I loved seeing you smile today.\" She ignored me, so I took another bite of cake and let out another loud groan of happiness. \"Neija, seriously, you really need to eat this. It is so good, you won't believe it.\"\n\n\"I don't want to.\"\n\n\"Just a taste and I'll shut up.\"\n\nShe groaned, grabbed the other fork, and took a bite. That was all it took. Her eyes became wide, her tail stood erect, and her ears perked up. She became frantic, digging in like there was a prize at the bottom. \n\n\"Whoa, slow down a bit, you're getting way too worked up.\" I grabbed her wrist to stop her, and quick as a flash, she sank her teeth into my arm. I tensed up, using all of my willpower to keep from shouting in pain. She didn't let go and neither did I. \"Shhh, just take a deep breath. If you eat so fast, you'll make yourself sick.\"\n\nShe finally let go, revealing the deep teeth marks in my skin. Neija sat there, unsure of what to do, her lips colored black and red with chocolate and blood. What was going to happen now? How was she going to be punished? Blood was trickling from the wound, but I ignored it and simply took another bite of cake. \"I can't blame you, it really is that good.\" She still didn't move, just stared at me. \"Go on, you don't have to stop. I just didn't want you to get a stomach ache.\"\n\nShe slowly resumed eating, the tension fading with each bite. Soon enough, the desert was gone, and the sun had finished setting. I stood up, taking with me the plastic cake container and the two forks. I did so with my good hand, since using my other would make my wound hurt. The bleeding had just about stopped, leaving my arm and hand encrusted with blood. It was itchy as hell and I desperately wanted to scratch it off, but I also didn't want to acknowledge it, not with Neija's eyes on me.\n\n\"All right, the mosquitoes are going nuts, so I'm going to head inside. Are you coming?\"\n\nShe perked up. \"Huh? Uh, no. I'm going to stay outside a little longer.\"\n\n\"Ok, goodnight.\" \n\nShe didn't say anything, so I turned around and walked back to the door. But the moment I touched the knob, I heard her. \"Wait, M\u2014 uh...\" I looked back at her. \"It was fun playing badminton,\" she said while looking away.\n\nI smiled. \"Yeah, it was. Let's pair up again next time.\" Then I stepped inside and closed the door behind me.\n\n---\n\n\"Jesus, Neija did this to you?\" Dr. Lawrence asked as he examined my arm.\n\n\"Yeah, but it was my fault for grabbing her wrist.\"\n\n\"She used to attack the doctors back at the hospital, but I thought that had stopped. We need to make sure this behavior comes to an end before she hurts someone else.\"\n\n\"No, she won't do it again.\"\n\n\"What makes you so sure?\"\n\n\"She was sorry. She didn't say it, but she was sorry. In this case, I think it would help our relationship more if I forgave her rather than punished her.\"\n\nDr. Lawrence began scrubbing the blood off my arm with a towel soaked in rubbing alcohol, leaving me on the verge of screaming.\n\n\"I'm not so sure about that. If you give her special treatment, it may make her feel alienated or she'll see it as just a desperate attempt to make her like you.\"\n\n\"I'm not going to punish her for acting on instinct. She's a lioness, and if I can't accept her for that, then I'm not fit to be her Master. I can still show her how to act like a person without trying to quash her animal side. I'm not giving her special treatment to win her favor, I'm simply trusting her to understand that what she did was wrong and to learn from that mistake without me having to rub her nose in it.\"\n\n\"Well I don't think you'll need any stitches. Come back here in the morning and I'll take another look.\" Dr. Lawrence laid some gauze on my arm and then wrapped it in bandages.\n\n\"Thanks.\"\n\n\"What are you going to tell the girls when they ask?\"\n\n\"I'll just say I got a rash from playing outside. I think we're still in browntail moth season.\"\n\n\"All right then, goodnight.\"\n\n\"Goodnight, Doc.\"\n\n---\n\nThe next day, I found myself sitting at a table in one of the common rooms with five girls seated across from me: Talia, Amanda, Neija, Kerrie, and a Lycaon pictus, otherwise known as an African wild dog, named Piper. Her hair was a mix of white, brown, and black, and she had huge round ears, like Chloe and Lola, with a long fluffy tail. Under normal circumstances, Neija would bitch and moan and refuse to be anywhere near me, but not after the incident last night. She was too proud to say she was sorry, part of her still felt like she had nothing to be sorry for, but that same pride wouldn't let her make a fuss and be belligerent. Instead, she simply non-verbally expressed her boredom and discomfort.\n\n\"These are the letters of the alphabet, see?\" I slid a piece of paper over to them, on which I had written all twenty-six letters, both uppercase and lowercase.\n\n\"How are we supposed to remember all that?\" Lola asked frantically.\n\n\"That is way too much!\" Amanda added.\n\n\"Just take one step at a time. Momo, Sonja, Chloe, Leah, and Jenny all had the same reaction when they first started. I've built up plenty of experience in teaching others how to read. Here, I know a way to get you interested. Lola, can you write this letter here, then this one, the first one again, and then this one?\" She took the pencil, first holding it the shovel way, but I showed her the proper form. She wrote down the four letters. \"Good, now Amanda, write down the letters I point to.\"\n\nThey each took a turn, copying the letters that I told them to in specific orders. Neija didn't complain, though she constantly rolled her eyes. For such an intelligent hybrid, she certainly acted like a brat. Piper did it last and I held up the paper.\n\n\"Congratulations, you all just wrote your names.\"\n\nTheir eyes widened and they leaned forward as if I had just performed a magic trick. Behind them, a girl poked her head through the door. It was Levi, the anaconda. \"Can I write my name too?\" she asked.\n\nI invited her over and I showed her the letters to use. More girls started showing up. \"Me too!\" they all said. In seconds, the room was filled, with all the hybrids fighting for the pencil. \n\nThis is why we can't have nice things.",
        "---\n\n\"What the hell is this?\" asked Fred, Neija's brother. He was grimacing at the tuna casserole on his plate. \"Three meals a day and not once have I gotten to eat some beef. I need red meat!\"\n\n\"We don't eat beef in this house,\" I said. \"Just enjoy your dinner.\"\n\n\"Why the hell not?!\" Ugh, lions, such a persnickety species. Oh shit, was that racist?\n\n\"Take a wild fucking guess!\" Betty shouted as she stood up and slammed one of her hooves on the table.\n\nFred stood up as well. \"I'll eat you then!\"\n\n\"Say that again! I dare you! I double-dare you, motherfucker!\"\n\nShe and I had just watched Pulp Fiction earlier that day.\n\nI stood up and pulled her back. \"Let's both take it easy. Fred, I'll talk to the cooks about getting you something meatier than casserole. Betty, how about tomorrow, we go out to eat, just you and me on a date?\"\n\nHer tail started whipping back and forth. \"Well, if Master really wants to...\"\n\n\"Good, then let's all sit back down and enjoy dinner.\"\n\nWe took our seats and resumed eating, and like Fred, I grimaced at the sight of the tuna casserole. Goddamn, I really wanted a steak.\n\n---\n\nIt was not my alarm that woke me up the next morning, but a great weight on my lap. I opened my eyes to the view of Betty's glorious tits, the naked cow milf straddling me. The rest of the girls didn't stir, but that was likely because they didn't consider Betty's arrival to be worth getting up for.\n\n\"Good morning, Master,\" she said with a lascivious grin.\n\n\"Well, well, you're certainly energetic this morning.\"\n\n\"I was up all night, thinking about our date today.\" She leaned over, letting her gargantuan breasts dangle over me. \"My fingers wouldn't keep to themselves.\"\n\nMy arm was on top of the covers. I reached up and felt her slit, sampling her wetness. She must have been playing with herself all night. She shivered from my touch, loving that I showed no hesitation in forcing my fingers inside her.\n\n\"I suppose I should be strict with you and make you wait until tonight, but I've got some morning wood that I need taken care of.\"\n\n\"As you wish, Master,\" she said while licking her lips.\n\nShe pulled away the covers, revealing my fallen log. Her tongue found the shaft, greedily licking up the salt from my sweat. The girls began to stir, no longer able to ignore what was going on.\n\n\"Good morning, Master,\" they all said with yawns while Betty deep-throated my member. \n\n\"Good morning, girls. How did you all sleep?\"\n\n\"After yesterday, I slept so good,\" Momo purred.\n\n\"Yesterday was so much fun!\" Sonja chirped.\n\n\"I had dreams that things were falling from the sky to eat me,\" Chloe whined.\n\n\"I slept ok,\" said Jenny.\n\nIn her bed, Leah gave a joyful squeal.\n\nThe girls then moved aside, as Betty made it clear what position she wanted to take. She turned around and swung her leg over my head, smothering me with her humungous caramel-colored ass. I feasted on her snatch with gusto, slurping up her liquid arousal to the sound of her moans. Morning pussy, the most important meal of the day. Betty was pulling out all the stops with her mouth, using the greatest skill and technique she had. She wanted to make me climax before moving on, but lustful impatience took over and she finally broke away. \n\nShe moved farther down, showing me her bare back and massive ass. She grasped my cock and it entered her pussy, sending a shiver of bliss up her spine. We had learned from the first time having sex, that her ass, as big and beautiful as it was, pushed me back like an airbag and made doggy style and reverse cowgirl difficult unless done at certain angles. Instead of remaining upright, Betty leaned over and began throwing herself forwards and backward, her ass thundering towards me like the boulder from Raiders of the Lost Ark and then receding like the tides. I was mesmerized, watching my cock slide in and out of her cunt like I was hollowing it out. I wished I could have put my middle finger into her anus, but that would probably terrify Momo, Sonja, and Chloe.\n\nTo hold themselves over until breakfast, Momo and Sonja crawled over and snuck their lips onto Betty's nipples, drinking her milk like they had just run a marathon. I came after a few minutes, but Betty didn't even feel me go flaccid as an orgasm swept through her. Were it not for Momo and Sonja latched onto her like leaches, she would have sprayed milk clear across the room. It wasn't until she caught her breath that she felt my hot semen inside her.\n\n\"That's just a taste,\" I said, \"you'll get the rest later.\"\n\nShe looked back at me and licked her lips. \"I can't wait.\" She then got off the bed and got dressed, then left to head down to the kitchen.\n\n---\n\nIt was another beautiful morning, and Elise and Levi were enjoying it by sunning themselves on the patio. Their long tails stretched and curled as their scales soaked in the warmth and radiance of the sun.\n\n\"Elise, can I ask you something?\"\n\n\"Sure?\"\n\n\"Have you ever felt... not so fresh down there?\"\n\nElise pulled off her sunglasses and looked at her. \"What do you mean?\"\n\n\"The scales on my underbelly feel gross and itchy, like I just slithered through something. It wasn't like this back when I was at the zoo or in the hospital.\"\n\n\"Oh, uh, oh, ok. I think it's browntail moth rash. I got some too after slithering around the yard the other day. Dr. Lawrence can probably give you something for it.\"\n\n\"Good, I was worried.\" A few moments of silence passed and then Levi turned to Elise. \"What did you think I was talking about?\"\n\n\"Nothing, just forget about it.\"\n\nThe doors then opened and Betty stepped out, wearing a tube top and shorts. She laid herself out on the lawn chair next to Elise, soaking up the sun like the two snakes. \"Elise, can I ask you something?\"\n\n'Oh God...' Elise thought. \"Sure.\"\n\n\"What exactly is a date? Master said we would go out to eat. Is that what a date is?\"\n\n\"A date is pretty much anything two people do together with the goal of getting to know each other romantically.\"\n\n\"And what exactly do I do on a date. Sex?\"\n\n\"Well, that is the goal of it. Really you just talk to each other, find out if you're compatible.\"\n\n\"Am I supposed to wear something special for it?\"\n\n\"Hmm, I'll help you put an outfit together.\"\n\n---\n\nThat afternoon, a truck full of food arrived. Until the eating habits of all the hybrids were established, these deliveries would be coming every day. What few people knew was that in the back of this refrigerated truck were pounds upon pounds of ground beef. Everyone in the mansion would get to satiate their beef craving while I took Betty out on our date.\n\nI told her we would leave by 5:00, as I wanted to get out of the house before the cooks started preparing dinner. I stood by the door, freshly showered and shaved, and just as I was about to pull out my phone to check the time, I heard the familiar thumping of hooves.\n\n\"Hey, I'm ready to go,\" Betty said.\n\nShe was wearing a pair of jeans and a white blouse. Normally, her clothes were made of stretchy fabrics to accommodate her figure, but it seems these custom clothes really fit her well.\n\n\"You look great,\" I said, causing her to start whipping her tail. \"Well then, shall we head out?\"\n\n\"I'm looking forward to it,\" she said as she took my hand. \n\nWe got into my car and made the long drive off the property. \"So where exactly do we go to eat?\"\n\n\"It's a restaurant that I've passed by a couple times. I think it looks good.\"\n\n\"What's a restaurant?\"\n\n\"It's a place you go where they cook and serve food for you. They have a menu of what you can eat, you pick something, and they prepare it for you.\"\n\n\"Oh, this sounds like it's going to be a good night.\"\n\n---\n\nThe restaurant I had picked was rather fancy, the kind of place that intentionally prepares your food very slowly to make you wait. That way, everyone back at the mansion would have plenty of time to eat dinner and remove all traces. We left my car in the parking lot and made our way inside with Betty clutching my arm. Any other hybrid would probably be nervous by this, but she seemed perfectly calm and confident.\n\nIn a brightly-lit corridor, we met the ma\u00eetre' d, a young woman standing behind a podium with a book of reservations. As soon as she saw us, I could see the blood drain from her face. I was starting to love seeing that expression. After all, there was plenty to take in, from her hooves to her breasts, to her ears, to her height. And of course, her tail was whipping back and forth from her excitement.\n\n\"Hi, I have reservations for two under Helton,\" I said. When out with the girls like this, I wasn't allowed to use my real name.\n\nThe young woman didn't know how to react. She simply stared at Betty with her mouth opening and closing.\n\n\"Do you have a nice quiet table you could seat us at?\"\n\nFinally, she reacted.\n\n\"Uh, I, uh... we have a rule about wearing shoes in the restaurant.\"\n\n\"Oh, you can't see them from here.\" Betty raised one of her hooves, revealing rubber cleats on the bottom. \"Horseshoes count as shoes, right? Well, cow shoes in this case.\"\n\n\"I... need to speak to the manager. Please excuse me for a moment.\"\n\nShe went into the restaurant, leaving us to wait.\n\n\"Is this what it's usually like?\" Betty asked.\n\n\"You're the first hybrid to ever eat here. They're just surprised.\"\n\n\"Should I leave a Yelp review? Lorraine said that's something people do. I don't know what it is though...\"\n\n\"Meh, let's wait until after we eat.\"\n\nAnother couple then entered the corridor, an older couple, and they stiffened up when they saw Betty. \"Hello,\" she said. They didn't respond.\n\n\"Have you two eaten here before? Is the food good?\" I asked.\n\nThe ma\u00eetre' d then returned with a waiter, the man doing his best not to stare. \"Right this way, please.\"\n\nWe followed him through the restaurant and passed the bar. So early in the evening, only about a third of the tables were occupied, but everyone was staring. The waiter led us to a small table in the corner with windows all around and we took our seats and gave us drink menus. He forgot to give us the house special, but I could forgive him since his eyes were glued to Betty's rack. Had she worn a tank top and showed off some cleavage, he might have locked up like a fainting goat.\n\nOnce he was gone, I turned to Betty. \"You sure handle the looks well.\"\n\n\"They're kind of rude, but also funny. I just wish they'd answer questions when asked.\" She looked at the menu. \"Ok, what am I supposed to pick?\"\n\n\"Whatever you want, whatever is familiar. They probably have the same wine you and Elise typically drink.\"\n\n\"And they bring it to the table?\"\n\n\"That's right.\"\n\nThe waiter soon returned and took our orders, switching our drink menus with dinner menus. This time, his eyes fell to Betty's tail, hanging out of the back of her chair. When he left, Betty began to laugh.\n\n\"He would be so easy to break. A pathetic little whelp like him? A few minutes and he'd beg for the honor of kissing my hooves.\"\n\n\"Sometimes I forget that you still have that sexy dom side to you.\"\n\n\"Well let's just say I learned the pecking order,\" she replied, rubbing her leg against mine. \"Ok, so help me out with this menu. A lot of these words don't make sense to me.\"\n\n\"They do that to make their meals seem fancier. Let's see... I think you might enjoy the lamb salad with vegan charcuterie. I'll get... the crispy roast duck.\"\n\n\"You're not going to order a burger?\" I looked up from my menu at her. Her smile had vanished. \"I bet everyone at the mansion is eating one right now.\"\n\n\"You knew?\"\n\n\"Of course I knew. Why else would you take me, the only cow in the mansion, out to dinner? You wanted me out of the way.\"\n\n\"Betty, that's not it.\"\n\n\"I bet it will happen again next week. Lorraine will take me out so you'll get a turn to eat my friends and family.\"\n\nA knot was forming in my stomach. \"Betty...\" I didn't know what else to say.\n\nShe glared at me for a few moments and then burst into laughter. \"Relax, I'm kidding. You are still so much fun to mess with. Like you said, I still have a dom side.\" I gave a sigh of relief and laughed with her. \"But thanks for taking my feelings into consideration. I don't really mind if you or others eat beef as long as I'm just not around for it.\"\n\n\"I've actually always wondered about how you felt. I mean, I'm sure you can imagine how many cows get eaten in this country.\"\n\n\"Back before we transformed, Tobi would spend all his time in the barn with us, hunting for rats and mice. I know that animals get eaten. I eat meat after all, I mean, now that I am what I am.\"\n\nThe waiter returned with our drinks, a Long Island ice tea for her and a light beer for me. I couldn't drink much since I was driving. We gave our orders and he again departed.\n\n\"So how long do we wait before we get our food?\"\n\n\"Typically, the better quality of food, the longer it takes to prepare, at least I hope that's what will happen. They want to give us plenty of time to talk to each other.\"\n\nShe took a drink from her tall glass. \"How exactly do you expect this all to end?\"\n\n\"What do you mean?\"\n\n\"What do you think the next step will be? I know the hybrids from the zoo are supposed to stay with us for a month, but then where will they go? Or will they want to stay with you and Lorraine? Maybe you and I never go back to our homes and we all live in the mansion together forever.\"\n\n\"I prefer to go under the assumption that there won't be an end. In the real world, there is no such thing as a happy ending, just a pleasant status quo that is inevitably interrupted and ended. Whatever happens next will simply be the end of another chapter. I suppose... the true ending I want is to lie on my deathbed, surrounded by you and the girls, after a long and easy life.\"\n\n\"But do you think it'll go the way you want?\"\n\n\"According to the Multiverse Theory, there is an infinite number of dimensions in which every possible event and outcome has happened, and in that infinite, there is an infinite number of infinites. There is an infinite number of dimensions where hybrids occur naturally, dimensions where I don't have this ability, dimensions where this exact series of events has happened, except we're all the opposite sex. \n\nThat means there is also an infinite number of universes in which everything turns out perfectly, that I get to die of old age after a happy life without tragedy or misfortune. I like to live my life believing that maybe I'm in one of those universes, that even when things go wrong, it's still possible for the rest of my life to be smooth sailing. There are an infinite number reasons why things might go wrong, but also an infinite number of reasons why they might not. I guess I just have to hope the odds are in my favor.\"\n\n\"I barely understood any of that, but it was very pretty.\"\n\n\"Thanks, I came up with that when I was in my cringey freshman stage in high school.\"\n\n---\n\nWe continued to chat, talking about our plans for the future, our worries, and funny stories. The restaurant slowly filled, with new customers unable to peel their gazes off of us. Betty and I didn't mind the stares, I didn't even mind when I saw people taking pictures with their phones. Those pictures would end up online, showing a human and a hybrid enjoying dinner together. Every pixel would be a tiny step towards normalizing the hybrids' existence. \n\n\"By the way, I'm looking forward to this sleepover you're planning,\" Betty said after our food was delivered. \"It sounds like a lot of fun, having all of us in your room for a crazy night. Are you sure you're up to it?\"\n\n\"I think I might be able to, just maybe. Four hours is the maximum amount of time a man can sustain an erection before suffering physical damage, and that's not counting the stress of sex. Even if the spirit is willing, the flesh can be spongey and bruised. However, I've learned that Leah's saliva can help dull pain and heal light injuries. I'm thinking that if I have her blow me after every girl, she can remove all the soreness from friction and maintaining the needed rigidity. That way, my erection is always fresh, even for a full night.\"\n\n\"Will that be enough?\"\n\n\"I was also thinking you could help me out. Your milk is great at restoring my stamina. If I add some energy drinks and protein bars, I might be able to satisfy everyone.\"\n\nBetty gained a coy smile. \"My tits belong to you, Master,\" she purred.\n\n---\n\nDinner was delicious, and by the time we were done, the summer sun had set. I paid for dinner and we walked out with a very affectionate Betty clinging to my arm. \n\n\"So, shall we go back to the mansion and head right up to the bedroom?\" she asked as we reached my car.\n\n\"I had something a little naughtier in mind.\"\n\n---\n\nSitting on the hood of my car, Betty wrapped her legs around my waist, pulling me closer as we sampled the leftover taste of dinner from each other's mouths. We were at the park near the mansion and it was late and dark enough that no one would interrupt us. As we kissed, I fondled her breasts, drawn to them like an addict. At first I tried to undo the buttons of her blouse one at a time, but impatience cost be my dexterity and I gave up, instead ripping it open and exposing her sinful tits to the night air.\n\n\"Oh!\" she gasped in surprise as the buttons went flying. \n\nI then pulled off her pants and underwear, much to her enjoyment. Mature, intelligent, and strong, Betty was a natural dominatrix, but that wasn't to say she didn't love playing the role of the masochist as well. To go down on her or to simply force myself inside her, she was expecting one or the other, but a shiver of lust ran up her back when told her to turn around and lie on her back. She obeyed, assuming the position with her head hanging down in front of me and her legs spread towards the windshield. \n\nI whipped my cock out and she opened her mouth, eager to receive it. \"You really are a slutty cow milf,\" I said with a laugh, \"and I just love you so damn much.\"\n\nI forced my cock in her mouth and down her throat, gagging her with it. I skull-fucked her without mercy, slapping my balls against her face as she choked on my member. For those saying this is cruel or degrading, if I were to go easy on her, she would just get pissed off. The only time she wants vanilla is when we've just finished going all out and she's too tired for anything more. The last time I tried to go slow and gentle when she was all revved up like this, she slapped me and called me a bitch boy.\n\nAs she basted my cock with her mouth, I jammed my fingers in her pussy and violently shook them, making her moan in bliss to the sound of macaroni and cheese being stirred. Anticipation had done a lot of the work for me, she was already soaking wet. Some rough boob groping pushed her over the edge and she squirted all over my windshield. I didn't let up, continuing to finger her to see how much I could make her spray. At the same time, milk was shooting from her breasts like the fountains in front of the Bellagio. She came again and again, but I didn't stop until I had an orgasm of my own. To anyone listening, it would sound like a cow getting mauled. I didn't give her any warning, I buried my cock in her throat and emptied my load. She began to cough and I pulled back, letting my semen pour out of her throat and cover her face.\n\n\"Goddamn, I never met a bull who could do that,\" she said with a grin.\n\n\"Are you ok?\"\n\n\"Of course I am, what do you take me for?\" She then sat up and turned back around, spreading her legs for me. \"Now show me what you got.\"\n\n\"Hold on, let me clean you off.\" I pulled a tissue out my pocket and wiped away the semen covering her face.\n\n\"You're just buying time so you can get hard again,\" she said with a laugh.\n\n\"You don't want me pushing rope, do you?\"",
        "\"Well, everyone else ate beef tonight, it wouldn't be fair if you didn't get to.\"\n\nTaking the hint, I crouched down and started licking her pussy, savoring the taste of her delicious arousal. Such gentle flicks of my tongue, yet they left her trembling, her voice now like the chirping of a bird. She put her hand on the back of my head and tried to push me deeper into her clam so that I may feast upon her with all the ferocity she and I desired. I penetrated her with my tongue as deep as I could, with her labia against my cheeks and her titanic brown thighs pressing on my ears.\n\n\"Master! Master!\" she exclaimed, now running her fingers through my hair as her body once again submitted itself to me.\n\nI had regained my original rigidity, so while she tried to recover from her climax, I pushed her onto her back, readied myself, and barreled into her. She moaned from the sensation of being pierced, her calls repeating as I started slamming into her. She laid back, her breasts jiggling and rolling with each impact against her cervix. She was sucking me in, massaging my dick with her interior like she was trying to shape modeling clay. I grabbed her hips and pulled her farther down the hood of the car so her rear was hanging off the edge. Much to her enjoyment, I started reaching down and slapping her fat ass, punishing her for being so sexy. I spanked her again and again, able to feel the vibrations moving through her with my cock. I grabbed her ass and squeezed her cheeks, using them like handles as I fucked her.\n\n\"Oh fuck, I'm going to cum!\" she moaned.\n\nI increased the strength of my thrusts, hammering her again and again until she released a deep moo that echoed through the night. I didn't give her any rest, I pulled my cock out of her pussy and buried it deep in her anus. She moaned from the new feeling, her asshole once again being trained for my personal use. \n\nShe sat up, flushed, her eyes swimming. \"Master, please, my breasts are so full.\"\n\nI leaned down and my lips met one of her nipples. I drank greedily, drawing forth more moans. I switched between her breasts, sucking her dry as I sodomized her. Betty's milk gave me all the strength I needed to continue going while her own strength waned. She laid back, unable to remain upright as I brutalized her. I grabbed her breasts, massaging them and coaxing more milk to squirt free.\n\n\"I'm going to blow,\" I said.\n\n\"Pour it deep inside me, Master,\" she begged.\n\nI erupted, pouring everything I had deep into her anal cavity. I finally came to a stop, my body still charged with energy but my penis waving a white flag. If I had Leah here for support, I probably could have kept up this pace all night. Betty was near comatose, but a gentle kiss on the lips revived her.\n\n\"That was a wonderful date,\" she said.\n\n---\n\nThe day of the sleepover had arrived, though technically, there would be two sleepovers happening. Both groups of hybrids were excited, eager to finally understand what playing meant. Both Lorraine and I were prepping ourselves so that we could properly entertain all of our guests for the evening. We both slept in to get all the rest we could, so having missed breakfast, we decided to just make our own.\n\nWe were sitting on opposite sides of the dinner table, scarfing down lots of meat, bread, and vegetables. We needed all the complex carbohydrates, fiber, and protein we could get. This would be the only kind of food we'd eat for the rest of the day. In between mouthfuls, we'd try to psyche each other up, even though the main event wouldn't happen until after dinner.\n\n\"Are you ready for this?\" I asked.\n\n\"I'm ready for this. Are you ready for this?\"\n\n\"I think I'm ready for this.\"\n\nShe reached across the table and slapped me. \"Don't think you're ready, know you're ready! You're the Master of all of those girls and you're the only one capable of satisfying all of them!\"\n\n\"You're right, I can do this!\"\n\n\"Good, now slap me too!\" I leaned over and smacked her the same way she had smacked me. \"Now spit in my mouth!\"\n\n\"What?\"\n\n\"Forget about it, just focus your mission!\"\n\nIt would be another eight hours until I and all the girls retired to my bedroom, but the anxiety and anticipation were driving me insane. I'd probably need to see Dr. Lawrence before I ended up having a heart attack.\n\n---\n\nIt was a beautiful day, not a cloud in the sky, perfect for lying in the sun. The huge mansion patio would often get taken over in the afternoon, many of the more lethargic hybrids coming out to get a nap and charge their batteries. Elise, whose tail was like a giant solar panel, was one of them. She hated herself for it, hated how lazy she had become. Before coming to the mansion, she had done her best to keep herself busy, taking care of the farm from inside her house. However, days and weeks of this new lush lifestyle were feeding certain reptilian instincts. Now, all she wanted to do was soak up the warmth and conserve energy. But after a lifetime of hard work, some stagnation was just what she needed. A silver lining of her snake tail, it forced her to learn the joys of laziness.\n\nElise was lying out on a lawn chair, wearing nothing but a pair of sunglasses. Since that badminton day, everyone in the mansion had seen her nude, both the doctors and the hybrids, so she no longer cared about wearing clothes. Maybe that was a side effect of becoming a hybrid, having an animal's lack of shame.\n\nThe patio doors opened and out stepped Neija, eyes scanning for a good spot. Many of the lawn chairs were taken, several hybrids simply lying on the grass, but she spotted an empty seat next to Elise. She strode over and stripped down, remaining the queen of not giving a fuck. She didn't say a word to Elise, just took her place in the adjacent seat. A low purr began to sound in her throat, joy from the warmth of her bronze body being washed in sunlight.\n\n\"I was the reason,\" Elise said after a few minutes of silence.\n\n\"Hmm?\" Neija mumbled, not sure if Elise was talking to her.\n\n\"I was the reason he turned you.\"\n\nNeija growled in frustration. \"I already know he did it to protect his pets. That doesn't make it right. I'm not some tool for him to use.\"\n\n\"And I'm not a pet.\"\n\n\"Get over yourself, we're still just animals to them. That's all we'll ever be.\"\n\n\"No, because I was never an animal. I was originally a human.\"\n\nNeija stared at her in shock. \"How is that possible?\"\n\nAround the patio, several hybrids raised their heads, equally shocked. Until now, they had just assumed that Elise was a serpent that had transformed, just like Levi. They had no idea it was possible for humans to undergo the change.\n\n\"No one has told you that I'm Lorraine's older sister. Maybe this transformation was due to my own ability, but I think the two of them caused it. I used to be a farmer, I raised cows. I lost so much when I gained this tail; my freedom, my future, my independence, and my livelihood.\"\n\n\"So you should hate him even more than I do. He ruined your life.\"\n\n\"It was an accident. He didn't mean to turn me into this, neither of them did. I guess you also don't know that Momo, Sonja, and Chloe happened the same way, even Betty. He probably told you he went to that zoo to help keep them safe, but you just assumed that he created them by choice. It wasn't until Leah that he could actually do it on command, and even then, we don't know whether or not it will continue to happen on its own.\n\nIf you're going to be mad at someone, be mad at me. He did all this to try and give me my life back.\"\n\n\"I don't have to listen to this,\" Neija said as she got up to leave.\n\n\"Yes, you do.\"\n\nFast as lightning, Elise's tail wrapped around Neija, pulling her back. Neija snarled and hissed, trying to pull herself free. \"Let me go!\" she shrieked. She no longer had her lioness claws, so she tried biting into Elise's tail instead, but the thick black scales withstood her teeth.\n\n\"You should also know that he wasn't the one to come up with the idea of making all of you. Tobi, Lorraine's fox, came up with the idea. He suggested that the two of them create countless hybrids in a public place so that the world would finally know what was happening and they could get help. Tobi, a hybrid, just like you, was the one to decide you should be created.\"\n\nCRASH! \"Let go of my sister!\"\n\nOne of the glass patio doors shattered as Fred burst outside. He grabbed the end of Elise's tail and unwound it from around Neija. He then pulled her back out of Elise's reach, but she pushed him away and turned to Elise with angry tears in her eyes.\n\n\"You really think this will make me forgive him? You think that this makes up for what he did to me? I don't know what I am! You all keep saying that he loves me, like I should count myself lucky! I don't owe him anything! I don't need him! He used me! Why should I believe anything he says when he made me and left me behind?\"\n\nElise's expression was like stone. \"Because he loved Penelope.\" Neija looked at her in confusion, wondering if she was supposed to know that name. \"That was the name of the first hybrid to die. She was a deer who transformed in the wild, miles from his home. She froze to death before the two of them could even meet. Momo, Sonja, and Chloe found her in the snow and he gave her a proper burial. He told me how much it hurt to realize he had caused her death, how he loved her even though she died before he knew of her. The grief nearly killed him.\n\nHe created you to take responsibility for what he did to me, now let him take responsibility for you. If you still want to hold your grudge, fine, you're under no obligation to love him, but he does love you, and no amount of arguing will change that.\"\n\n\"No!\" Neija screamed. \n\nHer face wet with bitter tears, she turned and ran away, off towards the woods behind the yard. Fred was going to go after her, but Elise stopped him. No one saw her for the rest of the afternoon.\n\n---\n\nDinner was full of excitement, with everyone chatting about the imminent sleepover. As soon as we were done eating, all the girls would grab their mattresses and bring them to my room, and all the guys would bring their mattresses to Lorraine's. We had stocked our room with games and other various means of entertainment to keep the hybrids from getting bored. I had all night to pleasure over fifty girls, so each one would have to do a lot of waiting. They might as well play Wii Sports until their turn to get boinked. We also had plenty of food so that no one got hungry and soda and energy drinks so that everyone stayed awake. \n\n\"Are you sure you don't want to join in?\" I asked Elise, who was sitting next to me.\n\n\"I'm not part of your mega harem, I want nothing to do with it. You have fun, I'm going to enjoy having the rest of the house to myself.\"\n\n\"Come on, you got to admit you're curious.\"\n\n\"Look, I'll check in before I go to bed to make sure you're still alive, but I don't want to get roped into this.\"\n\n\"Can I see you two for a minute?\"\n\nI turned around, finding Dr. Lawrence. With how loud it was in here, he could have worn tap-dancing shoes and still snuck up on us.\n\n\"What's up?\" I asked.\n\n\"I need to talk to the both of you.\" He was looking at me and Elise, not glancing at Lorraine even once.\n\n\"Sure,\" said Elise.\n\nWe got up and followed him through the mansion, heading towards the dormitories of the doctors surveilling us. Only when we were far from the dining room did he start talking.\n\n\"Neija is missing.\"\n\n\"Wait, WHAT?\" I asked.\n\n\"Well, not technically missing. She's absent but we know where she is. She probably doesn't know that.\"\n\n\"She and I got into an argument about you and she ran off into the woods. I didn't think she'd still be out there,\" said Elise.\n\n\"Yes, I heard about that. Anyway, we have the woods filled with cameras so that we can track everyone's movements. The two of you should probably get Fred and pick her up.\"\n\n\"No, I'll get her myself. I've done this before.\"\n\nDr. Lawrence led us into a room behind the mansion's clinic, with the walls lined with computer monitors. Every room of the house was put up on these screens, as well as several camera shots from outside the mansion. \n\n\"Ugh, it stinks in here,\" Elise said.\n\n\"That's the smell of dedication.\"\n\n\"It's the smell of people not bathing enough.\"\n\nDr. Lawrence sat in a chair before the largest monitor and brought up an outdoor view. It was from a camera deep in the woods, showing a large boulder with Neija sitting on top of it, her knees hugged to her chest.\n\n\"I know that spot, I'll go find her.\"\n\nThe sun had yet to fully set, but the light would surely abandon me by the time I reached her, so I brought a flashlight along. I marched across the open pastures surrounding the mansion and entered the forest, grimacing from the ravenous mosquitoes. I had spent more than a month living in the mansion and had memorized the forest after plenty of walks with the girls. I knew exactly where I needed to go. My guess had been right, as the moment I reached the boulder, the sun fully sank below the horizon, leaving only the faint light of dusk.\n\nNeija heard me coming, she had to, but she didn't react to me climbing up and sitting down behind her, back to back.\n\n\"You cats are all exactly the same. Momo did the same thing a while ago, running away when she saw me and Sonja playing together. She did it because she thought Sonja had replaced her, that I loved Sonja more than her. I'm guessing it's something similar with you.\" Neija didn't respond. \"If I told you I loved you, would you believe me?\"\n\n\"Would it matter?\"\n\n\"Of course.\"\n\n\"But it wouldn't matter to me. I'm just one of an army you created. I do believe you love me, but don't lie to me and say you love us all equally. Could you ever feel the same way about me that you do about Momo? All of us from the zoo, we're expendable, you can just make more whenever you want. What are we to you? Tools to protect the ones you really care about? Slaves to obey your every will? Objects to use for pleasure?\"\n\n\"None of them. You are all whatever you choose to be. If any of you girls from the zoo want to stay with me forever, then I'll do whatever I can to make it happen, but if you have other dreams or ambitions, then I'll help you every step of the way. Momo, Sonja, Chloe, I took care of them because they were my responsibility, same for Betty, Leah, Jenny, and all of you. I kept them hidden so that they would stay safe in a world that wouldn't understand them. \n\nBut the world is changing. Neija, the world knows about you, knows about your kind. Go out and explore it if you want to. You've spent your life in a pen at the zoo, well now you can do whatever you want. You can now walk farther on two feet than you ever could on four. I got you mixed up in my mess, and I'm sorry, I'm sorry from the bottom of my heart, but you no longer have to spend your life in a cage. \n\nIf you want to, you don't even have to come back to the mansion. Just walk away, disappear into those woods, I won't try and stop you. Go forge your own path. Or you can come back to the mansion, maybe join all of us in my room to have some fun, and then tomorrow, I'll help you figure out how you want to spend the rest of your life, whether it's with me or without me. I'll help you find a home, even if it's on the other side of the world. I loved you, Neija, from the moment I saw you, from the moment I made you, and I'll love you no matter what you do.\"\n\nWe would silent for several moments, watching the light vanish from the woods.\n\n\"You should know, I've mated before, back at the zoo. If you really do want to mate with me, know what it won't be my first time.\"\n\nI finally pulled away from her. She tensed up, waiting to hear me walk away, but instead, she shivered when I rested my hand on the top of her head, and even began to purr as I rubbed her ears. \"But it will be your first time with me. Besides, we're just playing, all that matters is having fun and enjoying ourselves.\" I stood up and held my hand out to her. \"Come on, let's go home. Everyone is waiting for us.\"\n\nWith tears a joy streaming down her cheeks and a beautiful smile on her face, Neija sprung up and embraced me, her arms wrapped tightly around my neck and her lips pressed to mine. \n\n\"Yes, Master!\"\n\nOnly one chapter left! Please comment!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "cow girl",
        "anal",
        "anal sex",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-15"
}