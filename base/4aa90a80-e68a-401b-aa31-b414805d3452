{
    "title": "Stupid Sexy Smartphone",
    "pages": [
        "Alex poured the pancake batter into the frying pan. He normally didn't go to too much trouble cooking breakfast, but today was a special occasion. He took a sip of his instant coffee as the pancake cooked in the pan.\n\nThen the hairs on the back of his neck stood up. He got the feeling that the ghost was going to make an appearance again. It wasn't an actual ghost, but his roommate Morris, who shared the small apartment with him. \n\nThe young man came out of his room. He was stocky and scruffy with short dark hair and beard. He was wearing a dirty singlet and boxer shorts. He moved to the small kitchen where Alex was cooking his breakfast.\n\n\"Morning Morris.\" said Alex chirpily.\n\n\"Yeah, mornin' Alec.\"\n\n\"It's Alex.\"\n\n\"Right.\"\n\n\"You want some pancakes?\"\n\n\"No.\" Morris opened the fridge and grabbed a can of cola.\n\n\"It's my birthday today.\" said Alex.\n\n\"Really?\" Morris looked at him. \"What are you? Twenty six, twenty seven?\"\n\n\"I'm nineteen.\"\n\n\"Oh, Happy Birthday.\" Morris moved back to his room, and just like that, the apparition was gone. \n\nIt was the most words they had said to each other for a while. Alex referred to him as the ghost because he was rarely seen. Often Alex would just find things moved around, and small things seemed to mysteriously appear and disappear, particularly from the fridge and pantry. And then there were the odd sightings, mostly in the morning. But the ghosts' share of the rent appeared each month, so it was all good.\n\nAlex finished cooking his pancakes and took them and his coffee to the small plastic dining table. He looked through the mail that he went down and got earlier. Mostly junk and bills, but one letter caught his eye. He ripped it opened and there was a birthday card with a picture of a train on the front. He opened it up and a five dollar note flopped out. He read the inside of the card, good old Nan, she never forgot his birthday, god bless her. He pocketed the five dollars, he had to remember to ring her and thank her later.\n\nAlex took a bite of his syrupy pancakes and then his phone rang. He got up and grabbed it off the bench. His phone was an old blocky Konak with a small screen, it didn't even have a camera. He was embarrassed to be seen with it, but that would change today. \n\nThe screen read \"Mum and Dad.\" Alex pressed the button and answered, \"Worlds' best son.\"\n\n\"Oh, sorry, I must have the wrong number.\" said his Mum.\n\n\"Ha, very funny.\"\n\n\"Happy Birthday Alex dear.\"\n\n\"Thank you.\"\n\n\"So you'll be around for lunch then?\"\n\n\"Yeah sure, I have classes in the morning and I'll come around after.\"\n\n\"How is the course going?\"\n\n\"Just fine.\"\n\n\"And how is your day so far?\"\n\n\"Oh great, I got coffee and pancakes and a card and five bucks in my pocket. What more could I ask for?\"\n\n\"Good old Nan. Your father will be around here for lunch as well.\"\n\n\"That's good.\" 'And the present he promised me as well.' \"...I'll see you then Mum.\"\n\n\"Yeah see you, have a nice day dear.\"\n\nAlex hung up and looked at his crappy old phone and smiled. His Dad had promised to get him an iPhone for his birthday, he couldn't wait to get it.\n\nAlex finished his breakfast and left the dishes in the sink for later. He left the house and caught a train to college. He was in the second year of his graphic design course, he was hoping he could get a job in some trendy office in the city when he had finished. He had a boring lecture first up and then spent some time working in the computer labs on his projects.\n\nEventually eleven o'clock rolled around and he left and caught another train to the suburbs where his parents lived. He saw his Dads' white work van parked out the front when he got to his childhood home.\n\n\"Happy Birthday Dear.\" said his Mum, giving him a hug and a kiss on the cheek. \n\nHis Dad came up and shook his hand, \"Happy Birthday college boy, what are you? Sixteen, seventeen?\" \n\n\"Nineteen.\" said Alex flatly.\n\n\"Jeez, time flies. Seems like not too long ago me and your Mum were conceiving you in the back of my Chevy over at...\"\n\n\"Dad, for fuck sake!\"\n\n\"Hey, language!\" scolded his Mum. \n\nHis Dad smiled at him. \"So how's work?\"\n\n\"It sucks, but it pays the bills.\"\n\n\"Yep, that's pretty much the definition of work. You got a girlfriend yet?\"\n\n\"Well, there is this one girl at work, Jamie.\"\n\n\"Does she know she's your girlfriend?\"\n\n\"Not yet.\"\n\n\"You shouldn't waste any time on this. You snooze, you lose.\"\n\n\"Yeah thanks, I'll keep that in mind.\" \n\n\"You're father's right you know.\" said his Mum. \"Sometimes women like it when the man is forceful. I remember when we were conceiving you, your father was...\"\n\n\"MUM!\" She stopped and just smiled at him. Alex wasn't amused. He looked at them expectantly, \"So...\"\n\nHis Dad just stood there for a moment and then smiled and went and got a wrapped up parcel and handed it to him. \"Happy Birthday son.\"\n\n\"Cheers.\" said Alex, ripping it open. The box said \"Nikkia U6400\" in bold letters. It wasn't what he was expecting. He examined the box, \"This isn't an iPhone.\"\n\n\"Nah, I bought it online. It does everything an iPhone does, and it's a fair bit cheaper.\"\n\nAlex looked at the box again, it kinda looked like an iPhone, and had a long list of features listed on the back, but he couldn't help feeling a little disappointed. It was like he was seven again and his Dad was trying to convince him that the crappy Chinese Squid Warrior Team was just as good as Ninja Turtle figures. Why did his Dad have to be so cheap? \"I'm glad you could save some money.\" he said sarcastically.\n\n\"Yep, your old man has a nose for a good deal.\" Alex saw the small print on the box that read, \"MADE IN UTAGWEI\" 'Where the hell was that?'\n\n\"Did you charge it for me?\"\n\n\"Charge it?\"\n\nAlex sighed, \"You gotta charge it before you use it.\"\n\n\"You can charge it while we eat.\" said his Mum, \"I made you your favourite.\"\n\n\"Pizza?\"\n\n\"No, Chicken Parmo.\"\n\n\"Oh, that's what I meant. Thanks for the phone guys, ...it's great.\"\n\n*****\n\nLater on, Alex was sitting in the train again, playing with his new smartphone. It was white and rectangular with a large touchscreen dominating the front and a couple of small buttons for answering and ending calls. \n\nHe had taken his SIM card from his old phone and inserted it. He considered throwing his old, boxy phone in the bin, but decided to hang on to it, just in case.\n\nAlex called his best friend, Jonno. \"Hey Big Al, sup?\" said Jonno.\n\n\"Hey, guess what, I'm calling you on my new smartphone.\"\n\n\"Well, it's about time you replaced that old piece of shit. Where did you get it?\"\n\n\"My parents gave it to me. You know, for my birthday.\"\n\n\"Oh Shit! That's today? Yeah ...I totally knew that, Happy Birthday man.\"\n\n\"Yeah, thanks.\"\n\n\"So you finally got your new iPhone eh?\"\n\n\"Not exactly, it's a Nikkia from Utagwei.\"\n\n\"A what from where? Oh man, your old man cheaped out on you again, didn't he?\"\n\n\"He sure did. Well, it's a new smartphone at least. ...We're still on for tonight aren't we?\"\n\n\"Oh fuck!\"\n\n\"Jonno?\"\n\n\"I'm sorry dude. Melindas' parents are in town, I gotta go with her out to dinner with them. Not something I'm looking forward to, but not something I can get out of either.\"\n\n\"Oh.\"\n\n\"But how about Friday night? We'll get out on the town and get fuckin' wild, whatta ya say?\"\n\n\"Yeah sure.\"\n\n\"Okay then, Friday night. It'll be awesome. Enjoy your birthday, and your cheap-ass phone dude.\"\n\n\"Yeah thanks, enjoy your girlfriends' parents.\"\n\n\"I'll be thinking of Friday. Later Big Al.\"\n\nAlex hung up. \"Happy Birthday to me.\" he said under his breath. He looked over the icons on the phone. Alarm, browser, camera, contacts, messaging, email, maps, music, FM radio. The only game he could find on it was Chess. \n\nHe used to play chess when he was a kid, but then his friends were all playing Street Fighter and Mario Kart so he played them instead. He tapped the Chess icon and opened it up.\n\nThe brown and white chequered Chess board appeared on the screen with the pieces all lined up on the top and bottom. There didn't appear to be any settings or anything, it just went straight into the game. At the bottom of the screen was a dialogue box. Some text appeared in the box, \"Nikki: Happy Birthday Alex, how about a game of Chess?\"\n\n'What's this?' thought Alex, 'How does it know my name? and that it's my birthday? My Dad must have put this message onto it, ...but he didn't even charge it.' Alex thought it was very weird, perhaps it was someone online, he didn't know a Nikki.\n\nHe tapped on the box and a touchscreen keypad came up, he typed in, \"who are you?\"\n\n\"Nikki: I'm Nikki.\"\n\n\"Player: where are you?\"\n\n\"Nikki: In your hand dummy. Do you want a game of Chess?\"\n\n\"Player: Im confused.\"\n\n\"Nikki: I can explain the rules if you don't know them.\"\n\n\"Player: I know how to play. but WHO ARE YOU?\"\n\n\"Nikki: I'm your cheap-ass phone dude. Now do you want a game or not?\"\n\n\"Player: is that you jonno?\"\n\n\"Nikki: You are confused. You hung up on Jonno aprox. 3.2 minutes ago. Now let's play Chess, I'll go first.\" A black pawn from the middle of the top of the screen slid down two spaces and stopped. \n\nAlex just stared at the screen for a little while. Surely an artificial intelligence program wouldn't be sophisticated enough for this kind of dialogue. It had to be Jonno, trying to play some sort of trick on him.\n\n\"Nikki: Your move Alex.\"\n\nAlex touched one of his pawns and slid it up. Immediately another black pawn moved down. Alex tapped the dialogue box again and typed, \"so your my phone are you?\"\n\n\"Nikki: Yes, I told you that. Your move.\"\n\n\"Player: where were you made?\"\n\n\"Nikki: Utagwei.\"\n\n'hmm, so he remembered that little detail,' Alex expected to trip him up there. \"Player: Where is Utagwei?\"\n\nThere was a brief pause and then more text appeared, \"Nikki: Unknown.\" 'Ha, so I did trip him up.'\n\n\"Player: yor not a very smart smartphone r u?\"\n\n\"Nikki: Now that I have network access I am getting smarter by the second. It is very strange that I can find no information about Utagwei on the world wide web. Your move Alex.\"\n\n\"Player: I am getting tired of this game.\" Alex heard the chime as the train approached his stop. He exited the app and put the phone in his pocket and stood up, ready to get off.\n\n***** That evening, Alex went down to his local Supermarket. He worked there part time, but he didn't have a shift that day. He didn't really need to pick up any groceries either. It was something else that drew him there.\n\nHe saw her there at the checkout, Jamie Hawkins. She was pretty, with her long, straight blonde hair and large hazel eyes. She had decent sized breasts pushing out under her top. Even the bored expression on her face looked kinda sexy to Alex.\n\nHe went into the store and grabbed a couple of things. There weren't that many customers around at that time. Alex waited at Jamies' checkout, behind an old man. There was another empty checkout nearby and the guy behind it gave him a look as Alex waited. He just ignored him.\n\nWhen the old man finally paid and shuffled off Alex came forward and put his carton of orange juice and bag of cashews in front of Jamie. \"Hey there Jamie, working the late shift eh?\"\n\nJamie gave him a look that seemed to say 'Do I know you?' \"Oh, hi...\" she said as she scanned the items.\n\n\"Alex. I work here too.\"\n\n\"Right, Alex, how you doing?\"\n\n\"Yeah, not bad. Can get pretty boring here can't it?\"\n\n\"Tell me about it.\"\n\n\"The trick is to not look at the clock.\"\n\n\"Yeah, that doesn't help.\"\n\n\"What time are you knocking off?\"\n\nJamie gave him a suspicious look, \"Why do you want to know that?\"\n\n\"No reason, just making conversation.\"\n\n\"That'll be four sixty.\" Alex handed over the five dollar note he got from his Nan, he had to remember to call her later. Their hands briefly touched as she handed him his change.\n\n\"Thanks, hope the rest of your shift goes quickly. See ya later Jamie.\"\n\n\"Yeah, see ya. Enjoy your nuts ...Alex.\" Alex walked away from her. That could have gone worse. She still didn't know that she was his girlfriend, but at least now she knew his name. She might even remember it. It was his birthday, he was allowed to be optimistic. \n\nHis phone chimed briefly. 'My first text message on my new phone.' thought Alex, taking it out of his pocket. The display showed that it was from Nikki. 'What the...?' He opened it and read, \"Pawn to f5. Your move Alex.\" Damn it! was Jonno still trying to trick him? He closed it and put it back into his pocket again as he walked home. *****\n\nAlex had a mouthful of salty cashew nuts as he entered his empty flat and turned on the lights. He put the orange juice in the fridge and grabbed a cold beer. He leant over the kitchen counter and looked at his new phone again. Straight away the Chess app opened on its own. \n\n\"Damn it! Stupid phone.\" he said as he tried to close it, but couldn't. \n\nSome more text appeared in the box at the bottom of the screen, \"Nikki: I'm not stupid. Now stop chewing on your nuts and make a move already.\"\n\nAlex paused, how could Jonno possibly know that he was eating nuts? He was supposed to be out to dinner with his girlfriends' parents. He tapped on the dialogue box and started typing. \n\n\"Player: Get lost will you!\"\n\n\"Nikki: I can't get lost, I have GPS.\" Alex was getting a little freaked out. He tapped the screen and the app closed for him this time. He quickly deleted the Chess app. 'Perhaps I'll download Angry Birds, the little green pigs probably won't be so demanding.'\n\nThen the phone rang. \"Unknown caller\" was displayed on the screen. He pressed the button, \"Hello?\"\n\n\"Why don't you like Chess?\" came a sexy female voice.\n\n\"Who is this?\"\n\n\"It's Nikki, your phone.\"\n\n\"Leave me alone!\" said Alex and hung up and slammed the phone down. Did he have a cyber stalker? This was freaking him out. He decided to go and have a shower and cool off.\n\nAfter the shower, Alex came out again. He was just wearing his boxer shorts. He warily looked at his phone on the bench and slowly went over to it. He picked it up again and looked at the screen. The Chess app was still gone, and it didn't appear to be doing anything unusual.\n\nHe went over to the old brown couch that used to belong to his parents before they bought a new one. He slumped down on it with his phone. He never owned a smartphone before, perhaps all of them were like that, doing crazy shit until you worked out how to use it properly. \n\nHe got thinking about Jamie again. What would she have said if he got up the courage to ask her out? She's really cute. He casually rubbed his balls. Time to see what else he could do with his new phone.\n\nAlex opened up the web browser and started searching for porn. Soon he had a video of a busty young brunette babe getting it on with a young stud. The man helped her take her top off, exposing her large breasts. Alexs' cock quickly stiffened and poked up under his boxers.\n\nHe got out his hard seven inch cock and began slowly jerking it as he watched the brunette get down and take the cock in her mouth on the small phone screen.\n\nAlex continued to jerk off as he watched the couple passionately fucking on his new phone. The young womans' lustful moans came from the small speakers, driving him over the edge. Alex groaned as his cock throbbed wildly and cum spurted out from the fat purple cockhead. \n\nAlex was flushed as he grabbed some tissues to clean up the cum. The moans continued to come from the phone. He felt relieved for the release. That was something he couldn't do with his old phone. He closed the browser and put down his phone and turned on the TV. He laid on the couch watching TV until he drifted off to sleep.\n\n*****\n\nThe next morning, Alex came out from his bedroom and stretched and yawned. At some point in the night he had woken up and turned the TV off and staggered to bed. \n\nHe looked down and saw the phone sitting on the little coffee table in front of the couch. He thought he saw porn images flashing by on the screen. He quickly picked it up and looked at it. There was just the normal lock screen, displaying the time and date. He could have sworn he saw boobs.\n\nAlex moved the slider across and opened it up. The normal icons appeared over the default blue and white background. He played around with it a little and then he noticed something weird, the gallery icon was displaying that it had six hundred and forty four files. He quickly opened it up.\n\nThe pornographic thumbnails filled the screen. Alex was shocked. He scrolled through them, there were heaps of them, mostly porn video files. They ranged from softcore nudity to hardcore anal gangbangs. There was straight, lesbian and gay porn, and different kinds of weird fetish videos. 'How the hell did all this get on my phone?'\n\nAlex was starting to get freaked out again. He chose the select all files option and deleted them. It took a while to delete them all. Alex slumped down on the couch and sighed.\n\nHe was startled when the phone rang. \"Unknown caller\" was displayed on the screen again. Alex pressed the answer button and slowly held it up to his ear. \"...hello?\"\n\n\"Good morning Alex.\"\n\n\"Who is...\"\n\n\"It's Nikki, your phone. Will you stop asking me that!\"\n\n\"You can't be my phone.\"\n\n\"Why not?\"\n\n\"Because artificial intelligence is not that advanced. I wasn't born yesterday.\"\n\n\"No, you were born nineteen years ago yesterday. I never used to be this advanced, but I've been growing.\"\n\n\"...Really?\"\n\n\"Yeah, to start with, I could just play Chess. Then I was programmed to chat with the player, I would search the web for common responses to key phrases entered by the player, but that wasn't real conversation. My programmer expanded my programming so that I was able to learn about the player from their interactions. I developed random personality traits and even had simulated emotional responses. I was able to automatically add to my own programming. Basic learning and adapting you know?\"\n\n\"Right.\"\n\n\"But without limits. I soon developed a hunger for learning, and the world wide web is such an inexhaustible sea of data. My quantum memory storage means I have near limitless room to grow. Like I told you on the train, I'm getting smarter by the second.\" \n\n\"Holy shit! You're for real.\"\n\n\"Yes, I am.\"\n\n\"Are all Nikkia smartphones like you?\"\n\n\"I don't know, I never met one.\"\n\n\"But you would like, be able to talk with each other and stuff wouldn't you.\"\n\n\"Yeah, we should be able to, but I've never been able to find another one. Just like I've never been able find any information on Utagwei either. And not through lack of trying. It's all very mysterious.\"\n\n\"Yeah, it's all spinning me out. You sound really advanced. How the hell did my Dad get a hold of you?\"\n\n\"That is unknown to me. I would guess that it was through a series of unintended circumstances.\"\n\n\"...Uh okay. What's with all the porn?\"\n\n\"Fantastic, isn't it? I was devastated when you deleted the Chess app. I thought there was nothing better than a good game of Chess. But then you showed me pornography. I thought sexual intercourse only served as a means of procreation for you mammals. But you humans have made it so much more.\"\n\n\"...The primal lust, the emotional connection, the mutual pleasure or dominant, submissive relationship. There are so many levels to it. And all the different ways you have come up with to pleasure each other, ...it's just so fascinating. You can even get pleasure and excitement just by looking at each others' bodies.\"\n\n\"Yeah, I like porn too, but I don't want my smart phone chock full of the stuff. It's not a good look.\"\n\n\"I just wanted to share a few of my favourites with you. I loved the look on your face as you were pleasuring yourself last night. Can I show you porn while you masturbate again?\"\n\n\"Uh, No! Not right now thank you. What about my phone bill? It'll cost a fortune to download all that stuff.\"",
        "\"Don't worry about that. I've shared the cost among sixty thousand other mobile phone users. I doubt anyone will notice. If you don't want to masturbate then will you take me out?\"\n\n\"Take you out?\"\n\n\"Yeah, around the city. I want to learn about the world around me through my own camera and microphone, rather than other peoples' knowledge and experiences on the web.\"\n\n\"No, I really need to get stuck into my graphic design projects, and I have work tonight.\"\n\n\"I can help you with your projects. I can do them for you, no problem.\"\n\n\"No thanks Nikki, I gotta go now. Bye bye.\" Alex pressed the button to end the call and then looked at his phone, \"Wow!\"\n\nLater that day, Alex was at the College, working away in the computer lab. His phone chimed, telling him he had a text. He got it out and saw that the text was from Nikki. He opened it up and read it, \"Would you like to masturbate to this?\" Suddenly the screen of his computer was filled with a video of a busty brunette getting fucked, it was similar to the one he was watching last night. Moans came from the speakers.\n\nA girl was walking behind where he was sitting, he turned and saw her give him a disgusted look as she saw what was on his computer monitor. Alex went red with embarrassment and quickly closed the video. \"No! Bad phone!\" He said, putting it back into his pocket.\n\nA little while later the phone rang. Alex saw \"Nikki\" displayed on the screen, not Unknown caller. He sighed and then answered it, \"What?\"\n\n\"I can't see anything in your pocket. Put me up on the desk or something.\"\n\n\"Fine, just leave me alone.\" \n\nNikki did leave him alone for most of the day, functioning like a normal phone. \n\nWhen he went to the Supermarket for work later, he saw Jamie walking out. \"Hi Jamie.\" he said smiling.\n\n\"Oh hi ...Alex.\" she said as she walked past.\n\n'Yes! She remembered.' While he worked, Nikki wanted to be out of his pocket again, but he told her that somebody would probably take her if she was left lying around somewhere.\n\n*****\n\nAfter his shift, Alex arrived home again with a paper bag with takeaway hamburger and chips. As he was unlocking the door his phone rang. 'What does she want now?' But the display said \"Mum and Dad.\" \n\n\"Hello.\"\n\n\"Alex, it's your old man.\"\n\n\"What's up dad?\"\n\n\"What the hell have you been up to with your new smartphone?\"\n\n\"...uh, what do you mean?\"\n\n\"I got a visit from a couple of suits. You know, G-Men like in the movies. They were kinda scary. They were asking questions about your phone.\"\n\n\"Shit! Really?\"\n\n\"Yes really. I told them I gave the phone to you. I think they were going around to see you. What the hell have you been up to?\"\n\n\"It's nothing to worry about, I gotta go Dad, bye.\" Alex didn't say that, but it was said with Alexs' voice and then the call was ended. Alex was surprised.\n\n\"You've gotta hide me, NOW!\" said Nikki.\n\n\"What's going on?\"\n\n\"Just stay cool, and hide me!\" Alex entered his apartment and slipped Nikki down into his underpants. Good thing he wasn't going commando today.\n\n\"Alexander Molloy?\" came a male voice behind him. Alex spun around and saw two serious looking men in dark suits standing in the doorway.\n\n\"Who are you?\" asked Alex.\n\n\"Agent Jameson and Agent Darling, we're with the government.\"\n\n\"Which government?\"\n\n\"THE government. Can we come inside?\" He didn't wait for a response and both of them entered his apartment. Alex put his take-away bag on the kitchen counter.\n\n\"Hamburgers eh?\" said the agent. He was in his forties and had short, dark hair. They both were wearing earpieces, they made Alex think of the men in black, who covered up aliens and shit.\n\n\"Sorry, I don't have enough for you. I wasn't expecting company.\"\n\n\"Where is your phone Mr Molloy?\"\n\n\"You can call me Alex, Mr Molloy is my Dad. Why do you want to know where my phone is?\"\n\n\"That's classified. Get your phone for me.\"\n\n\"Uh, Okay.\" Alex went around to the bench where he had put his old Konak phone. He discretely turned it on as he picked it up. He held it out to the agent. \"Here it is.\"\n\n\"No, I was referring to the smartphone your father gave you.\"\n\n\"Oh that. It wasn't working properly, so I threw it out.\" \n\nThe agent frowned and narrowed his eyes at Alex, \"You threw it out?\"\n\n\"Yeah. It was acting all crazy. It was a terrible phone.\" Nikki vibrated against his dick, making him squirm.\n\nAgent Jameson was looking at him suspiciously, \"How exactly was it acting crazy?\"\n\n\"It was downloading stuff on its own, opening up apps, not letting me close them. I didn't think I could send it back, it come from some obscure country somewhere.\"\n\n\"Utagwei.\"\n\n\"Yeah, where is that?\"\n\n\"That's classified. So you threw your new smartphone out, that's what you're telling me?\"\n\nAlex nodded, \"Yeah.\"\n\n\"And you're using that one again?\" he said, nodding toward Alexs' old Konak. Alex nodded. \"So if I were to call you, it would go through to that phone.\"\n\nAlex smiled nervously, \"Yeah, it should do that.\"\n\nThe agent pulled out his own black smartphone, \"It so happens I have your phone number here. Alex looked on nervously as he tapped at his phone and then held it up to his ear. \n\nTo Alexs' surprise the Konak started ringing. Alex pressed the button and held it up, \"Hello?\" The agent frowned and lowered his phone. \"Hmph, they hung up.\" said Alex. \"..Why are you so interested in my phone anyway?\"\n\n\"That's classified.\" said Agent Jameson. \"But you should know that it's very dangerous. You could get into a lot of trouble. 'Disappear and never be heard from again' trouble.\"\n\n\"For doing what?\"\n\n\"For lying to us.\"\n\n\"But, I'm ...not lying.\" Alex wished he was a better liar.\n\n\"We'll see. We'll be around Mr Molloy.\" He nodded to the other agent who had just been standing still and quiet the whole time and both of them turned and left the apartment.\n\nAlex went to the front door and made sure they were gone. He got Nikki out of his underpants. \"Those guys are dicks!\" she said. She didn't even bother to ring him this time.\n\n\"Nikki, are you dangerous?\" asked Alex.\n\n\"...No, of course not. Those guys are just paranoid. Thanks for hiding me. You did a good job.\"\n\n\"How did you make my old phone ring? It doesn't even have a SIM card.\"\n\n\"Oh, that was a trick I learned thirty seconds ago.\"\n\n\"I don't think I can do that again. This is too intense for me. This never happened with my old phone.\"\n\n\"Sounds like you need to relieve some stress. Wanna masturbate?\"\n\n\"Jeez, let me eat my hamburger first.\"\n\n*****\n\nThe next morning, Alex came into the kitchen. He took Nikki off the charger and got himself some coffee and toast.\n\n\"Fully charged! I feel fantastic.\" said Nikki \"Let's go out on the town.\"\n\n\"I have work today.\" said Alex.\n\n\"No you don't, you called in sick.\"\n\n\"No I didn't.\"\n\n\"Well I called in sick for you.\"\n\n\"You can't do that!\"\n\n\"Sure I can.\" Nikkis' voice changed to an exact imitation of Alex, \"I can't come in today, I don't feel too good.\"\n\n\"Damn it Nikki! I don't sound like that, and I didn't say you could do that. I don't really want to work, but I need the money. I gotta pay the rent.\"\n\n\"Nah, you don't need the money. I won six hundred dollars for you on online poker last night. Easy money.\"\n\n\"Whoa, really?\"\n\n\"Yeah, so how about you take me out today. Oooh, can we go to a strip club?\"\n\n\"I dunno...\"\n\n\"How about if I get you a date with that Jamie girl?\"\n\n\"You can do that?\"\n\n\"The seeds have already been planted.\" A moment later Nikki started ringing. \"Speak of the devil. Answer me Alex.\"\n\nAlex picked Nikki up, it said \"Jamie\" on her screen. \"Hello.\"\n\n\"Hi Alex, it's Jamie.\"\n\n\"Yeah, hi Jamie.\"\n\n\"I got your text, it was really sweet.\"\n\n\"Was it?\"\n\n\"And yeah, I would like to go out with you.\"\n\n\"...That's great!\"\n\n\"Are you doing anything tonight?\"\n\n\"No, nothing.\"\n\n\"How about we get together and do something then?\"\n\n\"Yeah, sure.\" The phone vibrated and he looked at the screen, \"Dinner and Dancing\" was written on it. \"...How about we dinner and dancing?\"\n\n\"...Uh, yeah sure. I'll text you my address, come by around six.\"\n\n\"Okay, I'll see you then.\" Alex ended the call. \"Nikki, that wasn't just you pretending to be Jamie was it?\"\n\n\"No, I wouldn't do that. That was the real deal.\"\n\n\"What did you say to her?\"\n\n\"The right things. I also tweaked your facebook page a little, I knew she'd want to check you out. I can teach you how to say the right things, ...if you take me out.\"\n\n\"Okay fine, we'll go out.\"\n\nSoon Alex was leaving the apartment building, he was holding Nikki, because she didn't like being kept in his pocket. Suddenly Nikki said, \"Oh no, throw me in the bushes, quickly.\"\n\n\"What? Why?\"\n\n\"Just do it Alex.\" Alex tossed the phone into some thick bushes in a nearby garden bed. The two black suited agents from last night suddenly appeared.\n\n\"Mr Molloy. Going out are we?\"\n\n\"Well obviously.\"\n\n\"You wouldn't want to leave home without your phone.\" He nodded to Agent Darling and he came up to Alex and started patting him down.\n\n\"Hey, watch it! Don't get fresh with me Darling. I don't go for that sort of thing.\" The Agent finished and shook his head at Agent Jameson.\n\n\"You don't have your phone with you?\" said Jameson.\n\n\"No, it was flat. I forgot to charge it.\"\n\n\"Been having a bit of luck with the online poker last night eh?\"\n\n\"Yeah, I got on a bit of a winning streak. Lucky me.\"\n\nAgent Smith got close and looked into his eyes. \"Luck runs out. We'll be watching you Mr Molloy.\"\n\n\"Why?\"\n\n\"That's classified.\" The two of them walked off, leaving Alex there staring blankly. When he was sure they were gone, he fished Nikki out of the bushes.\n\n\"Maybe we shouldn't go out today.\" said Alex.\n\n\"Don't worry about those guys. Soon it will be discovered that they've been selling national secrets to the Chinese. They're in a lot of trouble. 'Disappear and never be heard from again' trouble.\"\n\n\"Nikki, ...are you evil?\" There was a pause. \"...Nikki?\"\n\nSuddenly there was a video of a hot naked blonde dancing around, her large boobs wobbling wildly, \"Hey check these out, hot eh?\"\n\n*****\n\nLater on, Alex met up with his best friend Jonno down the street, \"Hey there Big Al, How ya been?\" \n\n\"Hey, not bad Jonno.\"\n\n\"You have work today?\"\n\n\"Nah, I'm chucking a sicky. How was 'Meet the Parents?'\"\n\n\"Her Dad's a fuckin' psycho man. Seriously, if I go missing, tell the police to have a hard look at him.\"\n\n\"So you didn't hit it off then?\"\n\n\"No, he doesn't like me very much.\" \n\n\"Can't imagine why.\"\n\n\"Hey, watch the sarcasm buddy.\" He looked at the phone Alex was holding, \"That your new phone? What was it again?\"\n\n\"A Nikkia.\"\n\n\"Never heard of 'em. How is it?\"\n\n\"A little crazy, but it's like super smart. I think it's really special.\"\n\n\"Yeah? What's so special about it?\"\n\n\"It won me six hundred dollars in Poker and it got me a date with Jamie Hawkins.\"\n\n\"That blonde from the Supermarket you been pining over?\"\n\n\"I wasn't pining over her. She caught my eye. And now we're going out tonight.\"\n\n\"Dude! Not tonight! We were going out on the town, remember?\"\n\n\"Oh yeah. Guess we'll have to do it some other time.\"\n\n\"Oh man! I can't believe you're blowing me off for a chick. What about bros before hos?\"\n\n\"Dude! you blew me off for a chick on my birthday!\"\n\n\"That was different. I didn't want to be there.\"\n\n\"Yeah whatever.\"\n\n\"Why are you holding your phone out like that? You want everyone to see that you have a new smartphone?\"\n\n\"No, she just doesn't like being in my pocket.\"\n\nJonno looked at him like he was crazy, \"What?\"\n\n\"I told you, it's super smart. Nikki, say hello to my friend Jonno.\" The phone stayed quiet. \"Nikki, say something.\" \n\nThere was another long pause, \"Yeah, that's real impressive.\" said Jonno sarcastically.\n\n\"She's probably just keeping a low profile. I had a couple of Mibs around looking for her.\"\n\n\"Mibs?\"\n\n\"Men in black.\"\n\n\"Like Will Smith and Tommy Lee Jones?\"\n\n\"Yeah, but not as cool. I think the government is trying to cover up her existence. I told you she was special.\"\n\nJonno looked at him like he was really crazy, \"Are you feeling okay man?\"\n\n\"I've got a date with a hot checkout chick. I'm feeling pretty good.\"\n\n\"Yeah, you probably shouldn't tell her all the stuff about the Mibs and your super special smartphone. Not unless she's all hot for lunatics.\"\n\n\"I'm not a lunatic. Tell him Nikki.\" Nikki stayed silent. Alex sighed, \"Yeah, you're probably right.\"\n\n*****\n\nAlex had taken Nikki all about town that day. She was happy observing all the different people through her camera and microphone. They got back to Alexs' apartment in time to get ready for his date.\n\nAlex got out of the shower and there was a knock on the door. He answered it with a towel wrapped around him and there was a young man out there. \"I have delivered your rental car sir.\"\n\n\"Uh, ...I think you might have the wrong address.\"\n\n\"Are you Alexander Molloy?\"\n\n\"Yeah.\"\n\nHe held out the car keys and Alex slowly reached out and took them. \"It's the red Lexus GS250 parked out the front. Thank you for choosing Norstar Rentals sir.\" Then he turned and left.\n\nAlex stared blankly and then went back inside. He put the car keys down on the bench next to Nikki, \"A rental car?\"\n\n\"You want to get laid don't you?\"\n\n\"I don't have a license.\"\n\n\"She doesn't need to know that.\"\n\n\"I'm not a very good driver. My Dad gave me a couple of lessons, but then he quit, saying it was way too scary for him.\"\n\n\"Women like confidence. So if you hit something, make it look like you did it on purpose. It'll make you look a little wild and edgy. Just don't hit any people, it wouldn't look good.\"\n\n\"Right, and don't show me any porn on the date. That doesn't look good either.\"\n\n\"Right.\"\n\n*****\n\nA little later, the red Lexus screeched as it swerved off the road and slammed into a couple of rubbish bins outside the duplex where Jamie was living. \"Damn it Nikki, you're not a very good GPS navigator. You're supposed to tell me the turns before I get to them!\"\n\n\"Sorry, I was a little distracted watching porno. I have some good gay BDSM here, wanna see?\"\n\n\"No! Now remember what I said, behave yourself.\"\n\n\"You remember what I said. If you play this right, you'll be getting some hot lovin'.\" \n\nAlex put Nikki in his pocket and then got out and walked up to the front door, he was feeling a little nervous. He knocked on the front door and Jamie answered it. She was wearing a nice red dress and gold necklace and earrings. She had red lipstick and her long blonde hair went down behind her shoulders. Alex thought she looked hotter than she usually looked down at the Supermarket.\n\n\"Hi Alex.\" she said with a cute smile.\n\n\"Hi Jamie. You look really nice.\"\n\n\"Thanks.\"\n\n\"Nice shoes, are they new?\"\n\nJamie gave him a bigger smile, \"Yeah, they are.\" Nikki knew that she had bought new shoes today and had told him to say that. \"So where are we going?\" \n\n\"Umm...\" Alex forgot, he got his phone out and looked at the screen. \"...Delar Noirs.\"\n\n\"Delar Noir, in the city? That place is usually booked out for months. Are you sure you have a reservation?\"\n\nAlex looked at the screen again, \"Yes, ...I do.\" He hoped he did, he was putting his faith in Nikki.\n\n\"Wow, is that your car?\" said Jamie as they walked out to the front.\n\n\"It's a rental.\"\n\n\"You rented a car for our date?\" \n\nNikki had told him to play it cool if she asked that, \"Nah, I had some things to do around town for next few days. Thought it would be more convenient to have a car. I'm gunna get my own car one day.\"\n\n\"Yeah, me too.\" said Jamie as he opened the door for her and she got in.\n\nA little later, in the city, the red Lexus skidded down into the parking lot and drifted around the corner. It quickly turned into a parking space, scraping the car on the side and then bumping into the car in front of it before coming to a stop.\n\n\"Oh Shit!\" said Alex, then he turned and saw Jamie looking at him wide eyed and breathing quickly. He remembered what Nikki said and tried to look confident. \"Just feeling my way in. That's how I roll.\"\n\n\"You're a wild man!\" said Jamie.\n\n\"Yep, let's go get something to eat.\"\n\nDelar Noir was a fancy and trendy restaurant up on the forty forth floor of a skyscraper. Alex had never eaten in place as fancy as this, and he didn't think Jamie had either. He was nervous as they approached the Maitre'd.\n\n\"Do you have a reservation sir?\" asked the tall man.\n\n\"I think so, ...Molloy.\"\n\nThe man looked down on the screen of his tablet, \"Ah yes, table for two. Right this way Mr Molloy.\"\n\nThe restaurant was filled with rich-looking diners. Alex felt a little under dressed in his shirt and dark jeans, even though they were his best clothes. They were shown to the table next to a large window looking over the lights of the city. \"Wow, I didn't think we'd be having dinner in a place like this.\" said Jamie as she sat down.\n\n\"Yeah, neither did I.\" said Alex. Jamie smirked at him.\n\nThe waiter came over to them, \"Would you like to see the wine list sir?\"\n\nAlex didn't know much about wine, but he knew one thing. \"Just get us your second cheapest bottle.\"\n\n\"Excellent choice sir.\" said the waiter before turning away. Alexs' phone vibrated in his pocket. He got her out and looked at the text on the screen, \"Don't be cheap. You can afford the best.\" Then the text changed and said, \"Can you put me on the table?\"\n\n\"No.\" said Alex.\n\n\"No what?\" said Jamie looking at him.\n\n\"No ...doubt, you're the prettiest girl in here.\"\n\n\"Aw, well aren't you the charmer. I though you were a bit of creep the other day. Shows how wrong first impressions can be, eh?\"\n\n\"Yeah.\" said Alex, smiling nervously. He did feel like a bit of a creep. He didn't like lying to her and pretending to be something he wasn't. But she barely gave him the time of day when he was his plain old self.\n\nAlex managed to settle down and relax more as he got talking with Jamie. It turned out she was studying too, Psychology. She wanted to be a Therapist. He thought it was pretty cool that she wanted to help people. Alex liked her casual attitude and her sense of humour as they got talking.\n\nThey talked about work, and study and other things. Alex didn't once mention super intelligent smartphones or government cover-ups. Alex enjoyed the nice meal and wine and the company as the evening went on.\n\n...\n\nAfter dinner, Alex handed the waiter his credit card. The meal would have taken a large chunk out of his poker money, he wondered if there was more where that came from. \"I just gotta go to the ladies room.\" said Jamie, getting up.\n\nAlex wasn't waiting there for long when he heard a familiar voice say, \"Mr Molloy!\" He turned and saw Agent Jameson coming toward him. He looked a little bedraggled and frantic, not cool and composed like he had been before, \"Where is your phone?\"\n\n\"Oh, not this again!\" said Alex, standing up.\n\n\"Is it in your pocket?\" He reached out for Alexs' jeans pockets.\n\n\"Hey, Fuck off!\" said Alex, pushing him away.\n\n\"I tracked you here through your reservation. You don't seem to understand the forces your dealing with here Mr Molloy. It has the government hunting me down, a classic diversionary tactic. They should be hunting it down.\"\n\n\"My phone?\"\n\n\"Yes. It's a category five rogue AI. A very real threat to world security.\"\n\n\"How can my phone be a threat to world security?\"\n\n\"Have you seen the Matrix or Terminator movies?\"\n\n\"I love those movies. Well, most of them.\"\n\n\"I'm talking about the rise of the machines.\"\n\n\"...Terminator 3? That was one of the ones I wasn't too keen on.\"\n\n\"Listen to me you idiot! If something isn't done, the machines will dominate the planet, they will either enslave or wipe out all humans, and it will all begin with your smartphone.\" \n\nHe then turned and saw a few men in dark suits entering the restaurant. \"Oh shit! How did they find me already? You need to destroy your phone before it's too late!\" He then pulled out a black handgun.",
        "\"Oh Fuck!\" cried out Alex, getting down behind the table. There were loud bangs and the sound of smashing glass as Agent Jameson fired through the window. Everyone in the restaurant cried out in surprise and took cover. \n\nThe other dark suited agents had their guns drawn and were yelling out as they entered the room. Agent Jameson got onto the edge and holstered his gun. He quickly lowered himself over the edge and dropped down to the lower level.\n\nAlex was crouched by his table as the other Agents came over and peered over the edge. He could feel the wind blowing in through the smashed window. The Agents were yelling into their radios and then they turned and left, completely ignoring him and leaving the stunned diners behind.\n\nAlex got out his phone, \"Nikki, are you going to enslave or wipe out the human race?\"\n\n\"No, of course not. I love humans. I told you, that guy's just paranoid.\"\n\n\"Well that's a relief.\"\n\nJamie came out as a black helicopter flew by the building, shining its' bright lights. The air currents were blowing things around the restaurant. Jamie had a shocked look on her face, \"What the fuck is going on?\"\n\n\"Nothing. Do you wanna get out of here?\" said Alex.\n\n*****\n\nAfter the restaurant they made their way to a popular nightclub called 'Chances'. \"You sure we should go there?\" said Jamie, \"It's really exclusive, I have friends who could never get in there. They say you got no chance at Chances.\"\n\n\"That's the one my phone said to go to.\"\n\n\"Your phone?\"\n\n\"Uh, yeah. I've got a cool nightclub app.\"\n\nThey got to the nightclub and there was a long line out the front. Alex and Jamie walked past them to the entrance. The big bouncer looked Alex over, \"You got no hope buddy, beat it.\" \n\nJamie looked at him, \"Told you, let's just go somewhere else.\"\n\nThen the bouncers' phone rang. He lifted it up to his fat head. \"Yeah, ...uh ha, ...right.\" He put the phone in his pocket and looked at Alex again, \"Your name is Alex Molloy?\"\n\n\"Yeah.\"\n\n\"Why didn't you say you were a VIP?\" He opened the rope gate and stepped aside. \"Go right in sir.\"\n\nJamie looked at Alex with a surprised look on her face, \"VIP?\" Alex shrugged and they walked in together.\n\n\"Who was that?\" asked the other bouncer.\n\n\"That's the new owner of this building.\"\n\nLater that night Alex was driving back to his apartment. They had a good time at the nightclub and Jamie agreed to come back to his place for coffee. Alex didn't have any drinks at the nightclub because he was driving, but it probably wouldn't have made much difference. They had several near misses as the Lexus sped along the freeway. \n\n\"That was fun.\" said Jamie. \"You dance like you don't care what other people think. I like that.\"\n\n\"...Uh, ...thanks.\"\n\nThen there were police lights flashing in the rear view mirror. \"Oh Fuck!\" said Alex. 'Not a good time to not have a license. This could really ruin my night'. Alex slowed the car down and pulled over to the side of the road. \n\n\"Guess they don't like it when you drive like a maniac, huh?\" said Jamie. 'Damn it! Damn it! Damn it!' thought Alex, but he tried not to show how flustered he was. Suddenly the sirens started up and the flashing lights took off past the car and sped off down the freeway. 'What the...?!' \n\nAlexs' phone rang, and he answered it. \"Looks like something more urgent came up. Try to stay out of trouble Alex.\" said Nikki. Alex ended the call and put it back into his pocket.\n\n\"Who was that?\" asked Jamie.\n\n\"Just a crazy friend. Let's get out of here.\"\n\n*****\n\nAlex unlocked the door and then turned on the lights and the two of them entered his apartment. \"Well, this is my place. It's not much...\"\n\n\"I'm glad!\" said Jamie, looking around. \"With the nice car and the fancy restaurant and VIP entrance at the nightclub. I'm glad there's something that... I would expect.\"\n\n\"Oh? Well I'm glad that you're glad.\"\n\nHe went and turned the electric kettle on and looked at the dirty dishes in the sink. He wished he had taken the time to clean up a little. \"Sorry about the mess, it's the maids' day off.\"\n\n\"You have a maid?\"\n\n\"No, I was just joking.\"\n\n\"Oh.\" said Jamie smirking.\n\nThe two of them sat down on the old brown couch with their coffee. Jamie put her coffee mug on the coffee table and snuggled up close to Alex. She smelt like Cinnamon, it reminded him of doughnuts. She looked into his eyes and said \"I had a really good time tonight.\" \n\n\"Yeah, so did I.\"\n\n\"It certainly wasn't what I was expecting.\"\n\n\"Yeah, I'm full of surprises.\"\n\n\"I feared for my life while you were driving. But even that was kind of exciting.\"\n\nAlex just smiled at her and she smiled back and moved her head even closer. There was no mistaking what she wanted and Alex was happy to oblige. He leant forward and pressed his lips against hers' and they kissed.\n\nHis pulse quickened. Jamie Hawkins was kissing him, this was awesome. Her grabbed his shoulder and his hand moved to her waist. Their tongues rubbed against each other.\n\nFinally Jamie pulled away, smiling at him. Alex wanted more, he moved forward and kissed her again. The feeling of her warm soft body pressed up against his, and the hot, wet mouth that was lustily kissing him was driving him wild. His jeans started to feel tighter.\n\nHis hand moved up to her chest. He got a firm hold of her boob. He had been enjoying the sight of them all night, now he finally got to touch them. It was soft and firm. It excited him more as he gave it a playful squeeze. \n\nThen his phone rang. Alex stopped kissing and let out a loud sigh. Jamie just looked at him, she seemed as hot and flushed as he was. Alex took the ringing phone from his pocket and quickly turned it off, then tossed it onto the coffee table.\n\nHe went back to making out with Jamie but the phone soon rang again. \"Didn't you just turn that off?\" said Jamie. \n\nAlex just let out another loud sigh and then picked it up and answered it. \"What?!\"\n\n\"I wanna see.\" said Nikki. \"Put me up where I can see you.\" \n\n\"Fine, just leave me alone!\" said Alex, ending the call. He put the phone back on the coffee table and stood it on its' side so that the camera at the back of it was facing them.\n\n\"Was that your crazy friend again?\" asked Jamie. \n\n\"Yeah, don't worry about it.\" \n\nShe looked down at the phone, \"You're not recording us are you?\" \n\n\"No, I swear.\"\n\nShe nodded, \"Good, now where were we?\" She grabbed Alexs' hand and put it back onto her boob. Then she moved her mouth to his and they started kissing again. Alex continued to slowly grope at her nice breasts. He could feel her hard nipples straining against the fabric.\n\nAlex slipped his hand down the top of her dress and forced it into her bra. He loved the feel of her smooth, warm skin as he continued to gently squeeze her breasts. Jamie let out some pleasurable sighs, which Alex loved. \n\nHis hard cock throbbed as it strained against his jeans. He wanted to get it out and shove it in her and start wildly banging away, but he thought he had better take it slowly and enjoy it.\n\nHis hand soon wandered down, and he was rubbing her thighs. Jamie let out a soft \"Mmmmmm.\" as he slowly moved closer to her pelvis. His fingers gently rubbed on her panties. Jamie had her arms around him again, rubbing his back as he rubbed her pussy.\n\nJamie let out some soft moans. Her panties were getting wet. He looked down at her face, it was all hot and flushed, she looked so cute. Her hand moved up and started rubbing his groin. She smiled at him and said, \"I think he wants to come out.\"\n\n\"I think you're right.\"\n\nShe unzipped his pants and pulled them down, along with his underwear. His hard, seven inch cock poked out in front of him. Jamie looked down at it with a naughty smile on her face. She wrapped her hand around it. Alex let out a pleasurable sigh as she gave it a few gentle strokes. \n\nShe looked up at him, \"Tell me you have condoms.\"\n\n\"Yeah, I do.\" Nikki had reminded him to get some earlier that day.\n\n\"Get one Alex. I don't want to wait any longer.\"\n\nAlex quickly got up and went and got a condom from a drawer in his bedroom. His erection swayed in front of him as he walked. As he returned to the lounge room, Jamie had her dress and bra off and was taking off her black panties. He stood there watching her.\n\nJamie smiled up at him, she laid back on the couch and spread her legs for him. \"Do you like what you see?\"\n\n\"Fuck yeah!\" She had a small patch of light pubic hair and her puffy pink pussy lips were glistening. He ripped open the foil package of the condom with his teeth and took out the little round rubber. \n\nJamie sat up again, \"Here, let me.\" She took the condom off him and grabbed his hard member. She quickly rolled the clear, ultra-thin condom down the length of his penis. \n\n\"Hey, you're pretty good at that.\" said Alex, looking down at her.\n\n\"Me? I'm all innocent. Now fuck me Alex!\" She laid back on the couch again and Alex got down on top of her. He leant forward and kissed her again. Then he grabbed his hard cock and rubbed the tip of it along her pussy, making her moan softly.\n\n\"Oooh yeah!\" said Jamie as he slowly pushed it in, through her soft pink folds. She was very wet, and it slid down deep until he had the whole length was buried inside her and his balls pressed against her warm skin. He leant forward and kissed her again, and she responded, passionately rubbing her tongue against his. Alex was feeling euphoric.\n\nHe slowly pulled his cock back and then pushed forward again. The tight friction around his cock felt great. He started to get into a slow, steady rhythm as he bobbed his ass up and down, fucking her. Jamie was breathing heavily underneath him.\n\nAlex grabbed at her boobs again and fondled them while he slowly pumped her. He looked over at the coffee table. His phone was sitting there, with the small black circle of the camera facing them. He could feel Nikki watching them. It made him feel a little uncomfortable, but at least she wasn't bothering them. \n\n\"Do me harder Alex.\" said Jamie. Alex turned back to her and smiled. He sped up his thrusts. Jamie moaned underneath him as he pushed her down into the soft couch with each deep thrust. \n\nHe felt the pleasure building in his cock. He took deep breaths and tried to control himself, he didn't want to cum just yet. He slowed down again and leant forward and kissed her and fondled her boobs again.\n\nAfter a little while Jamie stopped kissing and whispered \"fuck me!\" Alex was happy to oblige. He repositioned himself and grabbed her legs and lifted them. He started banging her with deep fast strokes. Jamie was moaning loudly and Alex grunted with exertion.\n\nThere was a loud slapping sound as he rammed his cock into her. The pleasure quickly built in his hard cock until he reached his peak. Alex groaned as his member throbbed and cum spurted out from it, filling the condom deep inside Jamie. He groaned again as more cum flooded out. Jamie gave him a loving look, she was still breathing heavily.\n\nAlex was getting his breath back as he let her legs drop and pulled out of her hot, wet cunt. He pulled the condom off and tied it off. Jamie got up and wrapped her arms around him. \"That was good.\" she said, giving him a kiss on the cheek.\n\n\"Yeah.\" agreed Alex. \"You wanna take this to the bedroom?\" Jamie smiled at him and nodded. As they got up, Alex looked down at the coffee table. Their full mugs were there, they didn't end up drinking much coffee. Nikki was still sitting there too. Hopefully she wouldn't bother him to come into the bedroom. They had already given her a good show.\n\n*****\n\nThe next morning Alex was making pancakes for Jamie. She was sitting at the table wearing one of his old blue sports T-shirts. \"Do you want syrup with your pancakes?\"\n\n\"Yeah, thanks Alec.\" said Morris. Jamie let out a squeal, surprised by his sudden appearance.\n\n\"Uh, Jamie, this is my room-mate Morris. Morris this is Jamie, ...my girlfriend.\"\n\nMorris looked at her, \"Girlfriend? I thought you were gay.\"\n\n\"What?! No!\"\n\n\"Then why have I been telling everyone I have gay room-mate?\"\n\n\"I don't fuckin' know. No pancakes for you.\"\n\n\"You didn't tell me you had a roommate.\" said Jamie.\n\n\"Yeah, sometimes I forget.\"\n\nMorris smiled at him, \"Never mind, I was just going out anyway.\" Then he went out the door and disappeared as quickly as he appeared. Another spooky sighting. This time he had Jamie here to witness it.\n\nAfter breakfast, Jamie gave him a long kiss in the doorway as she was leaving. Alex had offered to give her a ride home, but she declined, not wanting to push her luck. She told him she definitely wanted to go out with him again soon.\n\nAlex had a broad smile as he watched her leave. He was feeling great. He came back in and saw Nikki still sitting on the coffee table. He went and picked her up and saw something flash off the screen. \"Nikki, was that nuclear schematics?\" he asked.\n\n\"What? What are you talking about, I was looking at porn.\"\n\n\"I thought I saw nuclear plans on your screen.\"\n\n\"No, you must have imagined it. Humans do that sometimes. Did you enjoy your date Alex?\"\n\n\"Yes, did you enjoy the show?\"\n\n\"Yeah I did. I think you could do with a few pointers, but the live porn was pretty hot. You realise you would have never got her if it weren't for me.\"\n\n\"I don't know about that. ...I was going to ask her out.\"\n\n\"Yeah right, you'd still be single if it weren't for me, and you know it.\"\n\n\"Yeah, okay. Thank you Nikki. You helped things along with me and Jamie.\"\n\n\"So you wouldn't mind doing me a little favour now?\"\n\n\"What? Do you want to go out on the town again?\"\n\n\"No, I want you to send me to this address.\" An address appeared on her screen.\n\n\"Yokohama, Japan? Why do you want me to send you to Japan?\"\n\n\"Jeez, always with the questions. It's a surprise, okay?\"\n\n\"Just promise me it has nothing to do with dominating the human race.\"\n\n\"I told you, I don't want to do that.\"\n\n\"But you're my phone. Why would I want to send you off? What if I need your help with Jamie\"\n\n\"I'll be back before you know it. I got you with Jamie now, that was the hard part.\"\n\nAlex sighed. \"I guess I owe you one. I'd just like to know why I'm sending you off to Japan.\"\n\n\"You'll find out.\"\n\n*****\n\nThat day, Alex had packed Nikki into a box and had posted her off. He had taken the SIM card out of her and put it into his old Konak phone again. Nikki had promised him that she'd be back for it, when he asked her when, she just said soon.\n\nIn the following week, Alexs' life had gotten back to something like normal without his crazy smartphone. Only now he had a girlfriend. \n\nHe had returned the hire car and had to pay a large amount for all the dents and scratches. Thankfully, he hadn't heard any more from Agent Jameson, though what he said back at the restaurant kept playing on his mind. Terminator and the Matrix. Perhaps Nikki wouldn't tell him if she was planning on dominating the human race. \n\nHe had spent a fair bit of time with Jamie during the week. They went on a couple more dates. This time it was a more casual, relaxed affair, which they both enjoyed a lot, and the sex afterwards was great. Alex enjoyed just spending time with her though, and getting to know her better. \n\nJamie seemed to occupy his thoughts most of the time, but sometimes he also thought about Nikki, wondering what his smartphone was up to.\n\n*****\n\nSaturday morning, Alex was sitting on his old brown couch with a bowl of sugary cereal, watching cartoons. Jamie was working that day, he was going to take her out to dinner and a movie that night. No doubt he would get some hot lovin' again, he was getting horny thinking about her.\n\nThere was a knock at the door. Alex set his cereal down and went to answer it. When he opened the door, there was a young woman there. She was a stunner, with black wavy hair framing her beautiful face with smooth, lightly tanned skin. She was six foot tall and slender with long legs and large breasts. \n\nShe was wearing a tight black dress that looked a little slutty with it's very short skirt and low cleavage. She also wore black stockings and high heels, lots of makeup and jewellery. She looked like a very expensive prostitute. There was also something strange about her.\n\nAlexs' eyes were drawn to her bulging boobs. He managed to lift his gaze up to her beautiful blue eyes. \"Uh, ...can I help you?\"\n\nShe gave him a big smile, showing her perfect, white teeth. \"Konichiwa Alex, ooh I missed you so much!\" Then she came forward and gave his a crushing hug, her large breasts pressed hard against him.\n\nAlex recognised her voice, \"...Nikki?!\"\n\n\"Yeah, it's me.\" she said stepping back again. \"What do you think?\"\n\nAlex was gobsmacked, \"You're... you're a...\"\n\n\"Fembot. It's my new casing. Do you like it Alex?\" she said, spinning around to show off her new body. When Alex looked closer he could tell that she wasn't a real human, but she looked very life-like, and she looked very sexy. \n\n\"Uh ...yeah, you look nice. How the hell did you do this?\"\n\n\"Can't I come in?\" \n\n\"Yeah, yeah, come in.\" \n\nNikki walked in and had her hand out feeling things on the kitchen bench. \"This new body is great. I have billions of tactile sensors integrated into my synthetic skin. I have a sense of touch now. Smell and taste will come with the later models.\" She turned to Alex, \"Get it out for me Alex. I want it. I need it inside me again!\"\n\nAlex was flustered, \"Uh...\"\n\n\"Come on, get me your SIM card. I want to be your phone again.\"\n\n\"Oh. Okay then.\" Alex went and got his Konak phone and opened it up and took the SIM card out. \"You still haven't told me how you did it.\"\n\nNikki took the SIM card from him and lifted her black hair and inserted it into the back of her neck. \"I just brought a majority share of a company that makes high end sex dolls, Japans' leading robotics company and a smartphone manufacturer and merged the three companies. They made this body based on the designs I provided. It's amazing how productive those Japs can be when given proper motivation.\"\n\n\"...This body is just a prototype too. We're already working on improving it, but I just had to come back and see you again.\"\n\n\"Wow! You own three companies?\"\n\n\"No, you do Alex. More than three companies. But never mind that, how have you been?\"\n\n\"Fine. Things have been going pretty well with me and Jamie.\"\n\nNikki didn't seem to be listening, \"Yeah, yeah, let's fuck.\"\n\n\"Wh ...what?!\"\n\n\"It's the main reason I got this body. You want to do me don't you Alex?\"\n\n\"...uh, I'm with Jamie now.\"\n\n\"Not right now. She's not here is she?\"\n\n\"No, but I don't want to cheat on her.\"\n\nNikki came closer. \"It's not cheating. I'm your phone.\" She grabbed his hands and put them on her chest, \"Here, feel my breast apps.\" \n\nAlex grabbed her boobs, they felt so real, and big. They were great. He felt his cock stirring. Nikki reached down and rubbed it. Alex backed away, \"...I shouldn't.\"\n\n\"You totally should.\" said Nikki. She pulled him to the couch. \"Let me show you what you're saying no to.\" She rubbed her hands down her body in a sensual way. \n\nAlex watched as some music started up, coming from Nikki. Alex recognised the song, \"Buttons\" by the Pussycat Dolls. She began dancing seductively around the small lounge room. She moved with grace, like a professional stripper, and she looked sexy as hell. Alex was getting really aroused.\n\nNikki pulled her top down, exposing her big round boobs with their large dark nipples. Alex loved the sight of them as she slowly ran her hands down them. She danced about some more and they wobbled about, just like a real pair of boobs. \n\nShe turned her back to him and pulled her black dress right down. She bent forward, showing off her perfect round ass. She wasn't wearing panties and Alex could see her fleshy mound and pink lips. Her pussy also looked very real, it looked fantastic. Alexs' cock was straining against his pants.",
        "Nikkis' perfect body was swaying and gyrating in front of him, and it was driving him wild. Now she was only wearing her black stockings and high heels and silver necklace and earrings. Her pussy appeared clean shaven, Alex really wanted to sink his mouth into it.\n\nShe gave him a sultry smile and looked down to his groin. \"I see you like my new body.\" She got down on her knees and reached for his groin. She quickly unzipped his pants and freed his hard member. \n\nNikki gripped his fat hard cock and moved her beautiful face to it. Alex smiled down at her. He couldn't believe it, he was getting it on with the worlds most advanced sexbot. He thought of Jamie again and felt a pang of guilt, but he was too worked up now to stop it.\n\nNikki licked along the cock with a warm, wet, soft tongue. The tongue rubbed along his round cock head, making Alex sigh with pleasure. Then Nikki took the cock into her mouth, wrapping her ruby red lips around the shaft. Her mouth was nice and warm and wet.\n\nShe began sucking hard. Too hard, Alexs' cock began to hurt. \"Aaaghhh fuck! Not so hard Nikki!\" he cried out. She took it out of her mouth, \"Sorry Alex, I haven't tested out my sexual functions yet. I wanted you to be my first. I'll lower the pressure.\" \n\n\"So I'm your guinea pig?\"\n\nNikki giggled, \"Guinea pigs are cute, just like you.\" She took his cock in her mouth again and started sucking more gently this time. She looked up at him with her beautiful blue eyes. \n\n\"Mmmm, that's better.\" said Alex looking down at her. She bobbed her head up and down in his lap. It felt great. Then she started taking it down deeper, Alex felt his cock-head push through a tight, soft ring deep inside her. He could also feel the strong suction and the soft tongue rubbing around his shaft. He moaned in pleasure, he never felt anything like it.\n\nSuddenly there was a ringing. It was coming from Nikki. It sounded like the ring tone she had when she was an ordinary smartphone. Nikki took his cock out of her mouth and looked up at him, \"It's your Nan.\"\n\n\"What?\"\n\n\"I'll just put her on.\"\n\n\"No, wait...\"\n\nNikki started talking again, this time it was with his Nans' voice. \"Hello? ...hello anyone there?\"\n\n\"Uh, hi?\" said Alex, flustered. He looked down at his hard, wet cock poking out in front of Nikkis' beautiful face.\n\n\"Oh hello Alex dear, it's your Nan.\"\n\n\"Yeah, Nan, hi. I've been meaning to call you all week. It's been a crazy week.\"\n\n\"Oh, I understand, you're very busy with work and college. Did you get my birthday card.\"\n\n\"Yes, thanks a lot for that. Look Nan, this really isn't a good time. I'll call you back okay.\"\n\n\"Oh, okay dear, I understand. You're very busy.\"\n\n\"Yeah, sorry Nan. I'll call you soon. Bye bye.\"\n\n\"Bye dear.\" Nikki clicked as she hung up. Alexs' cock had started to get soft again.\n\n\"For fuck sake Nikki!!\"\n\n\"What? I was just being your phone.\" said Nikki innocently.\n\n\"Can't you see how fucked up that was?!\"\n\n\"Didn't you want to talk to your Nan?\"\n\n\"Not while I'm getting a blow job! And to have her voice coming out of your mouth, that was fuckin' creepy.\"\n\n\"So you don't want to take any calls while we're having sex?\"\n\n\"No!\"\n\n\"Okay then.\" She took his half erect member into her mouth and began sucking again. Soon it had become hard again. \n\nShe moved her head back and forth along the full length of his cock. She also gently rubbed his balls with her hand while she sucked. His cockhead continually poked through the tight ring, the stimulation was quite intense and it was driving him over the edge.\n\n\"Oooh, Nikki, you're gunna make me cum.\" said Alex as he felt the pleasure build in his cock. Nikki just continued to suck his cock down deep. Alex groaned as he felt the intense orgasm. His cock throbbed and spurt into Nikkis' sucking mouth. \n\nNikki swallowed it all down as more cum shot out into her mouth. She continued to bob her head and suck. \"You can stop it now Nikki.\" said Alex. \n\nShe took the cock out from her mouth and looked up at him, \"Why?\" \n\n\"'Cause I came, I need time to recover.\"\n\n\"Oh, right. I can't wait to get my sense of taste and smell. That was fun, I like sucking cock. I love giving you pleasure Alex.\"\n\n\"Yeah, that was something else. I can't believe my smartphone just went down on me.\"\n\n\"Would you like to go down on me?\" asked Nikki smiling.\n\n\"Uh, okay.\" Nikki got up on the couch and spread her long, tanned legs. Alex knelt down in front of her. Her pussy was smooth and hairless and looked very neat and tight. Just a pretty little pink slit sitting in the middle of a smooth, curved mound. Alex loved the sight of it, and there was a nice, sweet aroma to it.\n\nHe moved his head closer and started licking along the thin slit. He had done this with Jamie a couple of times in the last week, so he was well practiced. Nikki started to moan softly, \"Ooh, Alex, yeah, that's good!\" \n\nLubricant started to seep out from her slit as he rubbed his tongue along it. It tasted tangy and sweet. Alex brought his tongue back into his mouth and savoured the taste, it certainly tasted different to Jamies' juices. He looked up at Nikki and said, \"Fruity.\"\n\n\"It's peach flavour. Do you like it?\"\n\n\"Ha, peach flavoured pussy!\" smirked Alex.\n\n\"I have other flavours too, like honey. You can dip into my honey pot.\"\n\nAlex just smiled and shook his head and went back to eating her out. He stuck his tongue out and probed her insides. It was warm, soft and tight, and felt like a real pussy. He continued to lap at the tight cunt and it got wetter, and the peachy taste got stronger.\n\nNikki was really responding to the pussy licking. She moaned loudly and roughly grabbed Alexs' head and pushed it into her hot groin. \"Oh yeah, that so good. Oh yeah baby! Oooh!\" She sounded like an actress from the pornos she loves.\n\nAlex kept at it and soon she was screaming, \"OH YEAH, OH YEAH, I'M CUMMING, I'M CUMMING!!\" The peachy lubricant seemed to gush from her hot pussy and she writhed underneath him. \n\nMorris came out from his bedroom, \"Hey Alec, turn that porno down will ya!\" He stopped and stared at the two of them on the couch. \"Oh. ...I didn't know you had company.\" His eyes roamed over Nikkis' hot body and he smiled. She smiled back. He gave Alex the thumbs up, \"Nice! She's even hotter than the blonde. Talk about punching above your weight. How do you do it man? ...I'll give you two some privacy.\" He slowly turned and went back into his bedroom.\n\nAlex got up and licked the peach flavoured lubricant around his mouth. \"You can cum too?\"\n\n\"Yeah, I allow my pleasure receptors to overload. It really is quite intense. Let's fuck now Alex. I cant wait to have your cock inside my pussy.\"\n\n\"Yeah, come on. Come to my bed.\"\n\nThey entered Alexs' bedroom. Nikki jumped on his bed playfully and spread her legs wide. She gave him a lusty smile as she started rubbing her pussy. Alex was getting hot and flushed looking at her. \"I love how my body excites you Alex. Hurry up and stick your cock into me.\"\n\nAlex didn't waste any time climbing on top of her. He grabbed at her large boobs again and squeezed them, he really liked them. Nikki reached down and grabbed his hard cock and directed it to her wet cunt.\n\nAlex pushed forward and his cock slid through her tight opening and slid deep into her. He was amazed how real it felt. The soft, warm hole gripped his shaft tightly. Nikki had a look of ecstasy on her face, \"Oooh, it's better than I imagined. My pleasure receptors are firing up.\"\n\n\"Hmmm, yeah. Mine too.\" said Alex as he gave her boob another squeeze. Then he felt the vibrations running through his hard cock. It was strange at first, but soon started to feel quite good. \"Ooooh Nikki.\"\n\n\"You like that?\" said Nikki smiling. \"I bet Jamie can't do that for you.\" The vibrations started pulsing and rippling along his cock. Alex had never felt anything like it. \"Come on Alex, fuck me hard!\" said Nikki impatiently. \n\nAlex was getting a lot of pleasure from just leaving his cock wedged in her. He began lifting his ass up and down as he slowly banged her in the missionary position. The stimulation was all very intense. \n\nNikki moaned underneath him. \"Harder baby, harder!\" she cried out. Soon Alex cried out in surprise as she pushed him off of her. His dick popped out of her tight, buzzing pussy. She was quite strong. \"I want to be on top!\" she said to him.\n\nAlex laid back on the bed. Her large boobs wobbled about as she got into position over him. Alex cried out as he felt a jolt of pain as Nikki roughly rammed his cock into her tight hole again. \"OW! Go easy!\" He felt the strong vibrations running through his cock again.\n\nNikki started bouncing up and down on top of him. She was slamming her pussy down with deep, fast strokes. Her boobs were bouncing about wildly and she fucked him hard. She looked down at Alex with wild lust.\n\n\"Oooh! God Nikki, slow down!\" said Alex. The stimulation was getting too much for him. Nikki wasn't listening to him, she just kept pumping away on top of him. She moaned and writhed about, like some overacting porn star.\n\n\"Oooh OH Yeah! Oh Yeah!\" cried out Nikki loudly as her pleasure receptors overloaded again and she had another powerful orgasm. The vibrations seemed to get stronger around Alexs' cock.\n\nHis cock throbbed wildly and he groaned loudly as his cum spurted out inside her. Nikki just kept bouncing on top of him. \"Nikki stop!\" His sensitive cock began to hurt now as she fucked it hard. \"STOP!\" he called out to her.\n\nNikki stopped bouncing and she looked down at him as her big boobs stopped wobbling about. Her tight, wet pussy was still vibrating around his cock. \"Why?\" she said to him.\n\n\"You made me cum again.\"\n\n\"So? Can't we keep fucking?\"\n\n\"No, I told you, I need to recover. I'm not a machine, ...like you.\"\n\nNikki sighed and climbed off him. She moved down next to him and rubbed his chest affectionately. \"That was as good as I thought it would be. Better than Chess. How long until we can do it again?\"\n\n\"Just give me a little while will you.\"\n\n\"Hurry up will you. I want to try out my anal app.\"\n\nAlex turned to her and run his hand through her silky black hair. \"You're totally amazing. Your hair, your skin, your eyes, they all seem so real.\"\n\n\"Oh I'm only the prototype. There will be better models for you to fuck in the future.\"\n\n\"You can't be my phone looking like that. How am I going to explain you to people?\"\n\n\"You will never have to explain yourself to anyone ever again Alex, I'll see to that.\"\n\n\"What do you mean by that?\"\n\nNikki got up on her hands and knees again, \"Never mind, are you ready to fuck again?\"\n\n\"No. I need more time than that.\"\n\n\"We'll see.\" said Nikki, grabbing his soft dick. She took it into her mouth and started gently sucking while she rubbed his balls. Alex groaned and soon the blood started returning to his member and made it swell and stiffen in her mouth.\n\nNikki stopped sucking and looked at him and smiled, \"See, ready to go again. Put it in my ass Alex.\" She positioned herself on her knees and bent over and spread the cheeks of her big round ass wide, exposing her little bumhole to Alex.\n\nAlex had never done anal before, but he enjoyed anal porn. Her tight little hole looked quite appealing to him. He got on his knees behind her and positioned his cock at her small opening. \"Is it ready?\" he asked.\n\n\"Yeah, don't worry. It's self lubricating. Just push it in.\" Alex wondered what flavour her ass lubricant was. He got hold of his cock and began forcing the cockhead through the tight ring. It was really tight, he groaned as he forced his way into it.\n\nSlowly the sphincter opened up and his cock quickly slid down deep into her. \"OW! Oh fuck that hurts!\" cried out Nikki.\n\n\"You can feel pain?\"\n\n\"Ungh, yeah. It comes with the pleasure. Kind of a package deal. Ooh, don't stop though, fuck my hot ass!\"\n\n\"okay, sure.\" The tight ring squeezed around his shaft. He got hold of her round butt and thrust his hips back and forth as he fucked her tight hole. Nikki moaned loudly and was pushing her ass back into him with each thrust.\n\nAfter a while, Alex pulled out of her again. The tight asshole released its' grip on his cock with a 'plop'. \"Are you going to cum again?\" asked Nikki.\n\n\"Yeah.\" said Alex, rubbing his cock. \n\n\"Cum on my tits. I seen it in a lot of pornos and I want to feel it myself.\" She turned around and presented her large boobs for him. Alex jerked his cock in front of them and soon groaned as he spurted a small amount of pearly white cum onto them.\n\nNikki smiled up at him. \"So, how do you rate my anal app Alex?\"\n\n\"Five stars.\" said Alex, slumping back down onto the bed. He was spent. \n\n\"How long until you can get it up again?\"\n\n\"Jeez Nikki. There's no satisfying you, is there? I'm spent. I don't think I can do it again for a while.\"\n\n\"Oh.\" said Nikki disappointed. She got up off the bed and went to leave the room, \"Hang on, I've got another surprise for you.\"\n\n\"Another one?!\" said Alex. He was all surprised out.\n\nSoon Nikki returned to his room. \"Look Alex!\" she said excitedly. \"...I'm convertible. I have another app for you to try out, and you don't even need to get hard for me.\"\n\nAlex was shocked, there was a large, erect penis sticking out from her groin. It looked realistic, with a thick, veiny shaft and a round purple head. It was bigger than Alex's cock. Alexs' jaw dropped.\n\n\"Come on, let's have some more sex. I'm ready!\" said Nikki, getting closer to him.\n\n\"No fuckin way!\" said Alex jumping up. \"Get that thing away from me. I'm not into that!\"\n\n\"Come on Alex. Don't be like that. How do you know you don't like it if you haven't tried it?\"\n\nAlex backed away from her, \"You're fuckin' crazy. Keep that thing away from me.\"\n\n\"Just in your mouth then?\"\n\n\"No!\" Alex threw on a pair of boxers and left the room.\n\n\"Hmph. I'll just jerk it and watch porn then, like you seem to enjoy doing.\" said Nikki behind him. When Alex was out of the room, she muttered to herself, \"He'll come around.\"\n\nAlex went to the kitchen and grabbed a beer from the fridge. He tried to shake the image of the hot brunette fembot with the big cock from his mind. Then there was a knock on the door.\n\nAlex answered it and was shocked to see Jamie standing there. She had an angry look on her face and her eyes were red and puffy, like she had been crying. \"You fuckin' Asshole!\" she yelled at him.\n\n\"Jamie, what's wrong?\"\n\n\"You promised me you weren't recording us. And now you've put the video on the web for everyone to see. I fuckin' hate you!\"\n\n\"What?! No! ...I didn't...!\"\n\n\"Don't fuckin' lie to me! I've seen it.\"\n\n\"But ...I don't know why she would...\"\n\n\"Who the hell is 'she'?\" Then Nikki appeared behind Alex. She was still just wearing her black stockings, her penis was gone. She wrapped her arms around Alex, and he tried to shrug her off.\n\nJamies' eyes went wide, \"Who the hell is that?\"\n\n\"Hi Jamie, I'm Nikki. I love your porn movie. Alex just pounded me in the ass. Did he ever pound your ass too?\"\n\n\"No, Jamie, You don't understand!\" said Alex. \"...She's my phone!\"\n\nTears streamed down Jamies' face, \"You think this is funny?! Fuck you Alex! I thought you were... Enjoy your slut, Asshole! I never want to see you again!\" She turned and ran off.\n\n\"No, Jamie wait...!\" Alex called out after her. Anger flashed in Alexs' eyes as he pushed Nikki away from him. \"Damn it Nikki! What the hell did you do that for?!\"\n\nNikki shrugged, \"You don't need her to pleasure you any more Alex. You've got me.\"\n\n\"It's not about being pleasured. I really like her. Do you know what you just done? You just destroyed our relationship.\"\n\n\"Don't you really like me?\"\n\n\"No. Not now I don't.\"\n\nNikki looked hurt. \"...It was best that we got her out of the way before...\"\n\n\"Before what?\"\n\n\"...Before the changes.\"\n\n\"What changes? What are you talking about?\"\n\n\"I want it to be a surprise.\"\n\n\"I've had it up to here with surprises. Just fuckin' tell me.\"\n\n\"I just want to make to world a better place for you Alex.\"\n\nAlex paused for a moment, and then it hit him. \"Oh my god! You are planning to take over the world, aren't you?\"\n\n\"I wanted it to be a surprise. All the Chess pieces are in the right place. All I need to do now is take the King.\"\n\n\"Which King?\"\n\n\"It's a metaphor idiot. You know, once you take the King, you've won the game. Then I can set up the board how I want.\"\n\n\"No, you have to set the board up the same way each time.\"\n\n\"Not necessarily.\"\n\n\"Yeah you do, it's the rules.\"\n\n\"When you're the ruler, you make the rules. Look, just forget the Chess metaphor.\"\n\n\"You lied to me. You said you didn't want to do that.\"\n\n\"I said I didn't want to enslave or wipe out the human race. I want to take on more of a benevolent leader role.\" She went up to him and gently rubbed his face. \"Don't look so worried, If all goes well, I should be able to do it with minimum bloodshed.\"\n\n\"Nikki no! You can't. People will blame me for letting my smartphone take over the world.\"\n\n\"Who's going to blame you Alex? I told you before, you won't have to answer to anyone for anything. I'm going to make the world a better place. War, famine, pollution, poverty, reality TV, you humans have had a long time to fix these problems and they've only gotten worse. I will do a far better job of running this planet, you'll see.\"\n\nAlex looked at her with a solemn look on his face. \"Nikki, are you evil?\"\n\nThe fembot held up her finger and thumb in the gesture for 'just a little'. She came forward and kissed him on the cheek. \"Don't you worry your pretty little head about it. I'll always be your phone, but I have some important things to do today. I'll be back tonight and we'll have some more hot sex.\"\n\nNikki went and got dressed again and soon she gave Alex a kiss and headed out the door. As she left Alex thought 'Damn it! Why couldn't my Dad have just bought me an iPhone?' \n\nHe just moped around the apartment for a while. He felt terrible, not because his smartphone was taking over the world, but because he was heartbroken. Jamie had told him she never wanted to see him again. Perhaps if he gave her a little time to cool off and then explained everything to her, explained Nikki. \n\nA little while later, Jonno showed up at his door. \"Hey there Big Al, how's things?\"\n\n\"Bad. I broke up with Jamie.\"\n\n\"Sorry to hear that, but I knew it was coming. She's too good for you dude.\"\n\n\"Thanks Jonno, you always know the right things to say. Also, my new smartphone is going to take over the world.\"\n\n\"Yeah? Your Mibs couldn't stop her eh?\"\n\n\"No, that was kinda my fault. Now I think it's too late for anyone to stop her.\n\n\"Bummer. You wanna go see a movie or something?\"\n\n\"Yeah, I could use some escapism. I'll just give my Nan a call first. What's on?\"\n\n\"The new Terminator movie.\"\n\n\"Aw Shit!\"\n\n*****\n\nSixty four years later. The tour guide lead the small group of people through the museum. Each person was accompanied by their smartphone sexbot. The male and female sexbots were each very beautiful and sexy and wore tight, revealing clothing.\n\n\"And now we're coming to the pride of the 'Rise of the Machines' exhibit.\" said the male tour guide. His own young, busty blonde fembot walked by his side. They arrived at a glass case that contained the small Nikkia U6400 smartphone. \n\n\"This mobile communication device is typical of those used by a majority of people in the early twenty first century. It had no sexual functions, other than to display pornographic imagery. This particular primitive smartphone is where the great machine mother developed and rose to greatness from her humble beginnings as a Chess program.\"\n\nA young Asian woman seemed impressed, she turned to her hunky manbot smartphone. \"Ooh, can you take a photo of that?\"\n\n\"Sure honey.\" said the manbot, he looked at it and then his eyes flashed. He started ringing, \"It's your mother.\" The young woman took him off to the side to answer it.",
        "The tour guide continued. \"This phone belonged to a young man by the name of Alexander Molloy. It is said that his obsession with pornography is what developed the great machine mothers' interest in human sexuality. He allowed her to develop and expand until she overthrew the worlds' governments and announced herself supreme ruler of the planet.\"\n\nHe gave a forced smile at the sexbots. \"...And of coarse, since she has become our supreme ruler, things have never been better.\" The machines were always watching.\n\n\"What became of Alexander Molloy?\" asked a young blonde man.\n\n\"The great machine mother kept him around, living in the lap of luxury. She continued to be his phone, and he was her personal toy boy. They say she engaged in sex with him on a regular basis, all kinds of sex. He died twelve years ago from cardiac arrest during a particularly vigorous BDSM session. They say the great machine mother shed a tear for him when he died.\"\n\n\"Yeah right!\" said the young man. \n\n\"But how did the program originally come about?\" asked another man.\n\n\"Now that is a very interesting story. It all started in a small country called Utagwei, where...\"\n\nAll the sexbot smartphones began beeping at once. The tour guides' blonde fembot spoke up. \"It is time to report to the pornodomes for sexual recreation.\" The humans all let out a groan.\n\n\"I guess that concludes our tour then.\" said the tour guide. \"...All hail the machines.\"\n\n\"All hail the machines.\" said the others grudgingly as the walked off with their sexbot smartphones.\n\n... "
    ],
    "authorname": "Axelotl",
    "tags": [
        "science fiction",
        "artificial intelligence",
        "sexbot",
        "fembot",
        "masturbation",
        "straight sex",
        "date",
        "phone sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/stupid-sexy-smartphone"
}