{
    "title": "Swots Explore Sex Ch. 03",
    "pages": [
        "The first two chapters of this story were in the \"first time\" category. However, as the characters and scenarios have developed I've placed this into the \"exhibitionism and voyeur\" category. Given the storylines below this appears to make sense. I hope it doesn't mess with people's brains too much.\n\nFor the next week or so, after we'd lost our virginity together, we were insatiable. In fact, that insatiability continued for a lot longer. But it was most pronounced in those very early days.\n\nWe were fortunate that one or both sets of parents were out of the house, working, during the days (thankfully for us there were no extended Christmas holiday breaks in those days).\n\nSo we were able to spend time, in one or other of our bedrooms, fucking each other senseless! Actually, what it really allowed us to do was to explore, further, what we both enjoyed.\n\nA few days after boxing day Anna came round to my house. We had loads in common. And really enjoyed spending time in each others company. But - at that stage - as soon as we were alone together, we were tearing each others clothes off.\n\nNo sooner had Anna shut the door behind her we were pawing away at each other. My tongue was deep into Anna's mouth and I was peeling her jumper over her big tits.\n\n\"Fucking hell, Jack. I love how you can't keep your hands off me. And your tongue too,\" Anna laughed. \"Talking off which, I really need another good fucking. But I've been missing the way you lick my pussy. So let's not forget about that.\" she suggested. \n\n\"Too right,\" I agreed. \"I love licking your hot, juicy, cunt. And I'm certainly not giving up on blowjobs, just because I can fuck you too. So get upstairs and spread those legs, so that I can get my tongue on your clit and in your pussy!\"\n\nRacing up the stairs, shedding the remainder of our clothing as we went, we fell onto my bed. I was, of course, desperate to lick Anna's pussy - and have my cock sucked - but I also adored kissing. In large part for it's own sake. The pleasure, the sensuality, the intimacy of french kissing - for me at least - was almost unmatched. It was, almost certainly, my single biggest turn-on.\n\nAnd, in Anna, I'd found a kindred spirit. So, part of the pleasure I derived from it was the capacity it had to turn Anna on.\n\nSo, before moving down to kiss her pussy lips, I continued to cup her head and delve deep into my mouth with my tongue. With her tongue meeting mine, with equal enthusiasm, as they dueled against each other.\n\nBut our kissing did not rely solely on having our tongues deep into each others throats. We both loved very gently grazing each others lips. As well as lightly touching the tips of our tongues together. And I combined what I was did with my tongue and lips, with stroking Anna's cheeks and temples. \n\nFinally breaking our kiss, I told Anna how I felt, \"Oh my God, it drives me wild when we kiss like that.\"\n\n\"You and me both,\" she murmured, \"feel my pussy, I'm dripping wet.\"\n\nReaching down, I tested that claim, \"fucking hell, you are too,\" I chuckled, as my finger slipped straight in to her waiting pussy.\n\nI continued to finger her pussy whilst dropping my head to suck and nibble on her wondrous tits. I loved Anna's tits. And she loved the attention I paid to them. But today she was eager for me to move lower and pay attention to her pussy. So, she grasped my head and encouraged me \"southwards.\"\n\n\"Come on Jack, lick my wet pussy. I need to come on your tongue!\" she implored.\n\nFollowing her bidding, I moved down and positioned myself between Anna's legs. But just before starting work on her pussy, I reached up and took a pillow from my bed. \n\nPlacing it under her arse and lower back I looked up, \"I reckon this will give me a slightly better angle to work on your pussy.\"\n\nAnd it did. It meant I could lick all the way from her arsehole, along her perineum, giving her pussy long licks. Right up to - and very much including - her clit. At the same time as I was licking her - and particularly when I was paying more attention to her perineum or pussy - Anna was playing with her clit. She was clearly more comfortable now in displaying herself before me.\n\n\"God, that's hot,\" I grunted upwards, in between mouthfuls of pussy. \"I love watching you touch yourself.\"\n\n\"Nnnghhh,\" grunted Anna, grasping my hair and pulling me harder against her pussy.\n\nI reached up and started tweaking a nipple, whilst continuing to lap at her cunt.\n\nSometimes I liked to take my time bringing her to orgasm. But today I could sense a real urgency in her. I continued to lick from just above her arsehole, along her pussy. But then focused my efforts directly on her clit. Within minutes her breathing quickened and I knew she was close to coming. \n\n\"Nnnnghh, GOD, ooooooohhhh...\" she panted, \"keep going...\" she demanded, as she pulled my hair harder and dragged my tongue deeper into her pussy and against her clit.\n\nShe was almost fucking my face with her clit as she ground hard against me. I held on tight to her hips and worked my tongue hard and fast against her.\n\n\"OOOOOhhhhhhh, YESSSSSSS...\" she cried out, as the spasms of orgasm hit her.\n\nPulling away from her pussy I moved up and held her in my arms as she twitched and quivered against me, feeling the after shocks of her orgasm.\n\nAfter a little time to recover, and sensing my hard cock pulsing against her, Anna begun working her way down. Teasing me by first kissing my neck, chest and abdomen. Then, before taking my throbbing cock into her mouth, she starting playing with my heaving balls. In fact, she took one into her mouth and sucked it gently.\n\n\"Oh shit, that is gorgeous,\" I encouraged her. \"suck those balls and then suck my cock.\"\n\nBut, before doing that, Anna moved even lower. Copying what I'd just done to her, she gave my perineum some attention. Gently kissing and licking it. I had no idea how good it would feel. \n\n\"Oh my God, I love that,\" I told her, squirming with the pleasure she was giving me.\n\nAs pleasurable as that was, I needed her to take my cock into her mouth. And she finally relented and did that.\n\n\"Gnnnrrrghhhh,\" I grunted incoherently, as I held Anna's head as she worked on my cock.\n\nIt appeared, already, that she delighted in giving me oral pleasure as much I loved giving it to her. And as much as I loved receiving it.\n\n\"Come on baby, suck my cock,\" I demanded, as I followed her lead and grasped her head hard against me. \"I'm going to fill your mouth with my hot, salty, spunk...\" \n\nThe more I encouraged her, the more enthusiastically she sucked. And, combining what she was doing with her mouth, she moved a hand down and started fondling one of my balls. \n\nThis combined pleasure was just too much. \n\n\"Shit, I'm COMINGGGGGG...\" I cried out. My whole body quivering as I shot a huge jet of spunk into her throat. Followed by a number of smaller, though no less intense, bursts.\n\nHowever much there was, it didn't phase Anna. She swallowed the lot! \n\nWe fell into each others arms and drifted off into a post-orgasmic nap.\n\nAs we chatted on awakening, Anna quizzed me. \"Did you buy a big box of condoms. I really hope so. Now that we've started fucking I want to do LOTS of it.\"\n\n\"You're on,\" I agreed, with a laugh. \"And yes, I did buy a few dozen. But I still want a lot of kissing, licking, sucking and sensuality. Just as we've done\". \n\n\"Spot on,\" Anna agreed. \"But now, roll one of those condoms on and fuck me rigid!\"\n\n-------\n\nWhen we'd first had sex it had been missionary. And we both still loved that position, as \"mundane\" as it may have appeared to be. But we were also keen to mix things up and experiment with different positions.\n\nThe next day we'd begun fucking in missionary, before I suggested to Anna, \"Let's switch positions. Why don't you go on top of me?\"\n\n\"That sounds cool,\" she agreed readily, \"I like the idea of being the one in charge,\" she chuckled.\n\nI quickly discovered this position (cowgirl as we subsequently learnt it was called) was one of my favourites. \n\nI found I enjoyed it for several reasons. Like missionary it meant that we could, if we wished, indulge in our love of french kissing, whilst fucking. \n\nSo, I reached up and pulled Anna down to me and kissed her passionately. \n\nAfter breaking from our kiss I looked up at Anna, \"God, this is horny. I love the ascetics of it. It's so fucking hot to look up and see you grinding away on top of me.\" \n\n\"Just like this?\" Anna queried, as she rubbed her clit into my pubic bone, whilst her tits swayed above me. \n\n\"Exactly like that,\" I agreed, with a grunt. \"Plus, I love the access it gives me to reach up and play with and suckle your wonderful tits.\"\n\nTwo or three weeks ago I'd have been hard pressed to have a firm opinion on whether Anna had decent sized tits or not. Despite having known her for years. Now, I was obsessed with them. \n\nI loved to look at them when we were together. Even when - sometimes in fact especially when - she was fully clothed. I loved to turn her on, during foreplay and sex, by playing with them. I loved fondling them, kissing them, sucking them, gently biting them. And coming on them - or between them.\n\nWe were finding a rhythm now. Anna was doing most of the work, gyrating above me and grinding against my cock. But, as she bore down on me, I pushed firmly upwards into her eager, sopping wet, cunt.\n\nAt the same time I reached up and starting rubbing her clit.\n\n\"God, yes,\" she groaned, as she ground even harder against me.\n\nAnna was now bucking above me, as I was fucking against her, as forcefully as I was able to. Whilst still trying to maintain some pressure on her clit.\n\nI was wondering how long I could last before I filled the condom. But, just as my orgasm started to build, I could sense the same in Anna.\n\nHer breathing quickened, her tits were bouncing furiously above me, until she cried out, \"Fuckkkkkkkkkkkkkkkkkkkk\" as her orgasm ripped through her. \n\nJust as her orgasm ended, mine began. And I came, shaking with the intensity, sending several powerful jets of spunk into the condom.\n\nFrom then onward, we experimented with multiple positions. Though simple, \"boring\", missionary and the aforementioned cowgirl were probably our two favourites.\n\n-------\n\nBack in the summer, before heading off for Uni, I'd passed my driving test. I had neither the money, nor really the need, for a car. But my Mother had added me to the insurance on her old run-around. So I was able to have some mobility and independence when I was home.\n\nJust prior to New Year's, Anna asked if I was able to borrow the car and take her to see her Grandmother, who lived about 20 miles away. She'd come round to Anna's house on Christmas Day, but after I'd been there. So I hadn't seen her.\n\n\"I love my grandmother. And we're really close.\" Anna explained. \"It's important to me that she meets you. And hopefully likes you. Mind you, she's really perceptive. So she may just let me know that I've made a terrible mistake, surrendering my virtue and my heart to you.\" she grinned.\n\n\"I'd like to meet her,\" I replied, \"I've heard you talk about her a lot. And if she's as perceptive as you suggest, I'm sure she'll love me. And recognise how lucky you've been to snare me.\"\n\n\"Jeez, Jack,\" Anna said, with a groan, \"I wish I had just a little of your self- confidence. Or is it arrogance? I can't decide.\"\n\n\"Actually,\" I replied quietly, \"it's me who's been lucky. And, whilst I'm not sure if I had any virtue, I can tell you that you've certainly captured my heart.\"\n\nThen, taking a deep breath, I continued, \"I hope this is not too soon, but I've fallen, very deeply, in love with you.\"\n\n\"Oh, Jack,\" Anna gushed, throwing herself at me. \"It's not too soon at all. I love you too. Very very much.\" \n\nWe held each other tight, both of us with tears in our eyes, as we gloried in the feelings - emotional as well as sexual - we had for each other \n\n-------\n\nA few days later I picked Anna up and we set off to meet her grandmother. She gave us a really warm welcome to her comfy terraced house and insisted on providing us with lunch and copious cups of tea.\n\nAs Anna's grandmother went to get us some biscuits to go with one of those cups of tea, she (Anna, not her grandmother - that would be a whole different story) whispered into my ear, \"on the way home I'm going to need you to stop somewhere quiet, take me into the back of the car, and fuck the shit out of me.\"\n\nThankfully her grandmother wasn't in the room, as I spat my tea over the carpet. Neither was she there to see Anna reach into my lap and give my balls a squeeze.\n\nSomehow I managed to continue to make the obligatory, \"old lady\" small talk with her grandmother. Actually, to be fair, she was good company. She clearly loved Anna - as much as Anna loved her. And I could see they had a really strong bond. \n\nSensing my own strong feelings towards Anna, she seemed well disposed to me too. Plus, like Anna, I was - to the outside world at least - the well spoken, well behaved, sort of boy that old people liked.\n\nWe bade her grandmother farewell - with promises to return soon, \"bringing that nice young man with you.\"\n\nAs we walked to the car, Anna grasped my arm and pulled it around her, \"thank you so much for being so good with her,\" she said. \"As your reward, you'll get an extra special fuck on the way home.\"\n\n\"Two points I'd like to make,\" I laughed. \"the first is that it was no trouble at all. I liked her. A lot. And it was really lovely to see the two of you together.\" \n\n\"But,\" I continued, \"who will be the beneficiary of this extra special fuck.? Me, or you?\"\n\n\"That's a very fair point,\" she conceded with a grin. \"Hopefully, the two of us. Now, get this car in gear and find us a quiet spot on the way back.\"\n\nOur way home took us through the countryside, between the two towns. I was aware of a number of tracks leading off the main road, into wooded areas. In the gathering gloom of a late afternoon, at the end of the year, I was sure one of those would afford us enough cover.\n\nSure enough, I found a heavily wooded lane, leading up a hill and, after about half a mile, coming out in a small clearing. There appeared to be no-one else around - and little chance of anyone happening upon us. \n\nAlmost as soon as I'd switched the engine off, Anna was leaning across my seat and drawing me in for a passionate kiss.\n\nAs passionate as the kiss was, it was also uncomfortable. The front seats of cars - in fact cars themselves - are not the ideal \"make out\" environment. Handbrakes, gear sticks, seat belts, etc, just get in the way.\n\n\"Come on,\" I suggested, \"let's get in the back, we'll be more comfortable there.\"\n\nWe stepped out of the car and Anna came around the front of the bonnet and drew me in for another embrace. Pushing me back against the car, feeding her tongue into my mouth, she ground herself against me. Whilst pulling my hand up to grope her tits.\n\nBreaking the kiss, even in the gathering darkness, I could see a lustful look in her eyes. A look I was now becoming familiar with.\n\n\"Oh my God,\" she said, \"there's something really horny about kissing like this outdoors. The car, even in the back, is going to be cramped and uncomfortable. But I've got an idea. Instead of getting back into it, how about you fuck me over the bonnet!\"\n\n\"What!\" I spluttered, incredulously, \"are you mad? What if someone sees us?\"\n\n\"Even better,\" she chuckled. \"But look, don't worry, we're miles from anywhere, it's late, it's very nearly dark, no-one is around. Surely you've always fancied the idea of an al fresco fuck? And a fuck over the bonnet is a particularly dirty idea.\"\n\nAs she said this, she was nuzzling my neck and manipulating my dick over, and through, my jeans. \"And I can see a part of you certainly thinks so.\"\n\n\"Do you know?\" I responded, \"in my many masturbatory fantasies, I've never once considered a \"fuck over the the bonnet.\" So no, it's not something I've always fancied doing.\"\n\n\"And the reason my dick is hard is because of the way you are playing with it.\" I continued. \n\n\"But, now that you've suggested it, I can see the appeal.\" I grinned. \"But, let me reiterate, you are, once again, corrupting a previously innocent soul. It's just a good job for you that I'm so easily corrupted!\"\n\n\"We can argue the toss about who's corrupting who later,\" Anna suggested, unzipping her jeans and shrugging them down, wiggling her stunning arse at me. \"But get a condom on, bend me over and stick your hard cock up me. We'll have to be quick though, it's freezing!\"\n\nWhilst I genuinely had never considered this scenario (nor anything like it) before, I was enormously turned on by it. Anna's arse, in that position, was so enticing. And she was right, the chance, albeit a slim one, of being caught, added a frisson to proceedings.\n\nExtracting a condom from my wallet I peeled it onto my raging boner and positioned myself behind Anna. We'd had little or no foreplay, so I nibbled the nape of her neck and reached round to grope her tits. Whilst testing her pussy with a finger to see if she were wet enough for me to enter. Why had I worried?\n\n\"Fucking hell,\" I exclaimed, \"I thought you might need a little warming up.\"\n\n\"No way,\" she winked back at me, \"my arse is cold, but my cunt is on fire. This is so fucking slutty. Get your cock in and start fucking me. Hard!\"\n\nNeeding no further encouragement I slipped straight in.\n\n\"Mmmmmmfff,\" grunted Anna, \"that's gorgeous\".\n\nI wasn't quite sure how the bio-mechanics would work, but I found this was a pretty good height and position. Grasping Anna by the hips I was quickly into a good rhythm. Pumping away at a decent pace. And at an angle that was clearly hitting the right spot for Anna.\n\n\"Oh God, Jack. Yes...that's so good. Fuck me harder,\" she demanded.\n\nLeaning forward I moved my hands from her hips and starting groping her tits. Initially over her clothing then, pulling up her jumper and tee shirt, and pulling down her bra, I was tweaking her nipples. Whilst still fucking her hard.\n\n\"Shit Jack, that's so hot. Pull them harder!\" she exhorted.\n\nI was developing a sense that Anna liked to be treated a little roughly. Though only in the throes of passion. So I took a chance. I moved my hand from her tits and started gently tugging her hair.\n\nI'd read somewhere that some women liked this during sex. Anna appeared to be one of them!\n\n\"Oh, Yes,\" she gasped, \"That's horny. Fuck me hard and pull my hair.\" as she reached down and started playing with her clit.\n\nWriting this now I've got a clear vision of how hot a scene and experience that was. The sheer, wanton, lust of Anna - in fact of us both - was overwhelming.\n\nI picked the pace up further and was now hammering away at Anna's pussy. I used one hand to pull her hair and the other to grasp an arse cheek. Whilst, below me, Anna continued playing with her clit. \n\n\"Come on Jack, fuck me harder,\" she demanded. \"I'm nearly there.\"\n\nI was close myself. Initially, as turned on by sight of Anna as I was, I was also fearful of being caught. So that helped me from coming too quickly. \n\nHowever, as I got more and more into it, everything about this was turning me on: the ascetics of it, with Anna's sculpted arse looking especially enticing in front of me; the wanton desire she was displaying; her apparent submissiveness; and the threat, albeit small, of discovery.\n\n\"Come on baby, fuck me, fuck me, fuck meeeeeeee!!\" she cried out, as her orgasm hit. \n\nI'd held back to let Anna come first. So, I pulled out, spun her round and dropped her onto her knees so my cock was at eye level. I starting wanking myself furiously. Within a few strokes I exploded, all over Anna's beautiful face. Some she managed to swallow, some trickled down her chin and onto her heaving tits below. \n\nWith a huge grin on her spunk splattered face, she looked up and said, \"I told you that you'd get an extra special fuck...\"",
        "-------\n\nI was finding it incredible how sexually progressive Anna was. To the rest of the world she was unchanged. Still the polite, diligent, \"conservative\", well spoken and academic \"swot\" she had always been. Albeit in tighter clothing! But very much the embodiment of the \"goody two shoes\" type, beloved of staid adults. As an example, my parents, plus other relatives who'd met her, thought the absolute world of her already. \n\nBut, behind closed doors - or to be more accurate away from prying eyes - as she was equally at home outside of closed doors - she really was a sex fiend.\n\n\"I find it ridiculous,\" she confided to me, the day after our \"bonnet of the car fuck\", as we were relaxing in my bedroom after another steamy session. \"Why is it women are only supposed to endure sex? And not enjoy it? Which is just crazy, when sex is so fucking fantastic.\"\n\n\"That's an interesting observation,\" I agreed. \"As you're the only woman who's ever \"endured\" sex with me I can't, of course, speak for any others. But it does seem really daft. Maybe everyone else is just shit at sex?\" I suggested, with a smirk. \"And you enjoy it so much - and find it so fucking fantastic - because I'm such a wonderful lover?\"\n\n\"You never miss a chance to big yourself up do you?\" groaned Anna. \"It's far more likely that I'm just an insatiable sex fiend. And other women are not blessed with my high sex drive.\"\n\nThen, semi-seriously, she posed a question she'd asked me a few times before, \"actually, are you sure I'm not a slut?\"\n\n\"No. You really are NOT a slut,\" I assured her. \"Nor even a harlot, as you suggested a week or so ago.\" I laughed. \n\n\"It may be that you act in a slutty manner,\" I continued. \"But, honestly, I think that's wonderful. I genuinely am so lucky to be with someone so open-minded and uninhibited. Combine that with your wonderful, clever, engaging, funny, personality. And add in your beauty. That all makes me think I'm the luckiest guy in the World.\" \n\nCheesy, I know. Possibly over the top. But I really did mean that.\n\n\"Oh Jack,\" she cried, flinging her arms around me. \"I appreciate that so much. And you didn't even take the piss!\" she laughed.\n\n\"Actually, I think we are both really lucky.\" she went on. \"We trust each other completely. And we don't judge. And, sexually, we seem to be really compatible. I've decided, once and for all, that I'm not going to apologise any more for my \"slutty\" behaviour. Not least because it's clear you love it.\" Anna grinned.\n\n\"In fact, let me confide in you a little further,\" she continued, \"yesterday helped me realise a couple of things about myself. Things I'd always suspected were the case. And you may have suspected them too.\" \n\n\"The first,\" she went on, \"was less of a surprise to me, as some of my fantasies had been about this. But I love the idea - and quite possibly the reality - of exhibitionism. One day, I think I'd like to be watched fucking. Does that shock, or surprise you?\" she asked.\n\n\"No, it doesn't,\" I conceded. \"At least, it certainly doesn't surprise me. Nor does it particularly shock me. I was sort of expecting that, after what we did - and you said - yesterday. And I found it a turn-on too. So I'm pleased, if anything, not shocked. Though I'm not sure I'd ever have the guts to go through with fucking in public.\"\n\n\"Good, I'm relieved to hear that.\" Anna responded. \"And I'm sure I'll bring you round to performing in front of a crowd.\" she chuckled. \n\n\"The second realisation may be a little more of a shock. And I'm surprised - and a little ashamed - to admit it to myself...\"\n\n\"Let me guess,\" I interjected, though a little hesitantly, \"you like it when I'm a little rough, and/or forceful?\"\n\n\"Spot on,\" Anna agreed, with an exhalation, \"you're very perceptive. Do you think you'd be OK with that?\"\n\n\"I'm really not sure,\" I conceded. \"I'm probably happy to be a little more forceful. In fact, I was yesterday. And I'll be more comfortable in the future. Especially now that I know you like it. But I don't like the idea of being rough with you. I'm actually a real softie.\"\n\n\"Don't worry,\" she assured me. \"I'm not suggesting we go in for heavy S&M stuff. I just enjoy it when you take control. But hair pulling, like you did yesterday over the bonnet, was a real turn-on. ...And perhaps some light spanking...\" she suggested, shyly.\n\n\"Right,\" I agreed, pulling her too me. \"I've got a cock that needs sucking,\" as I nuzzled her neck whilst tugging her head back with her hair. \"And you've got a pussy that needs fucking. And, if you ask me nicely, I'll spank you whilst I'm doing it.\"\n\nSo, with that precedent set, we often incorporated hair pulling - and more infrequently spanking - into our lovemaking. \n\nWhat I appreciate, looking back, was that our sex was never formulaic. The only constant, probably, was passionate kissing. But everything else varied, depending on our mood. Frenetic quickies. Or slow, prolonged, sessions. Sometimes rough, more often sensual. Oral sex, tit fucks, mutual masturbation. And fucking in any number of positions. \n\n-------\n\nThe two of us had exams in mid-to-late January. And we didn't need to return to Uni until those. As besotted with each other - and with sex - as we were, we remained conscientious students. The first year at University is not especially pressurized. But we still wanted to do well. So, when we weren't fucking, we spent a considerable time studying. And occasionally exercising. \n\nI was keen to maintain my improved physique. And Anna had always enjoyed exercise. So we went to the gym and played squash together quite often.\n\nOne morning, just prior to returning to Uni we arranged to go for a run together. We planned a route of around 3-4 miles, out of our small town, into the countryside and back. \n\nAnna, even when dressed to go for a run in mid-Winter, looked - to my eyes at least - ridiculously horny. Her hair was scraped back, highlighting her delicate features. She had a sweatshirt on. But still fitted enough to showcase those spectacular tits. And running leggings. Which were tight enough to show, very clearly, her fine, taut, athletic, buttocks.\n\n\"Are you sure you don't fancy ditching the run and going upstairs for a workout?\" I suggested,.\"I'm sure we'd work up a real sweat.\"\n\n\"God, you're insatiable,\" she responded, with a grin. \"Hold that thought. But I do want to get a good run in. I'm feeling a bit sluggish and cooped up after spending all morning - most of the last few days in fact - in my books.\"\n\nSo we set-off, at a decent pace, out into the countryside, along some farm tracks. Just after the half way point, as we'd looped round and were making our way home, we passed a ruined farm building. The roof, door and windows were long gone. But the brick structure was still, largely, intact.\n\n\"Hang on, I've got a stitch, \" I told Anna, coming to a halt just outside one of the ruined doorways.\n\nAs she stopped to check on me I grabbed Anna and pulled her into the house - or what remained of it.\n\n\"What are you doing, Jack? I though you had a stitch?\" she laughed. Before I silenced any further questions by pulling her to me for a deep, passionate, kiss. Holding her head in my hands, pulling her hair gently, whilst driving my tongue deep into her throat.\n\nFinding absolutely no resistance, I moved Anna further back into the ruined dwelling. And combined kissing her, with groping her tits and arse over her clothing. \n\nAs I'd hoped/expected, she was grinding her crotch against mine. And added to this by grabbing my hips, encouraging me to gyrate against her.\n\nReaching down between us I slipped my hand under her leggings and began fingering her pussy directly.\n\n\"Fucking hell,\" I spluttered, \"you're absolutely dripping. Is that sweat or arousal?\"\n\n\"You're a cheeky sod,\" she grunted back. \"It's a good job I love your cock so much. Actually, its probably a bit of both. But mainly arousal. This is so dirty. And so fucking hot!\"\n\nWe continued making out, whilst standing up, in the back part of the ruined house. There was nothing left in the dwelling. The walls were mossy and the floor covered in leaves and debris. But it was not as \"grimy\" as I feared it might have been. \n\nWe were just yards away from the farm track. But the walls, solid as they still were, meant we were not directly visible from it. \n\nI pushed Anna back against a wall, to steady ourselves. Then getting bolder, I pulled her sweatshirt and tee shirt up and unhooked her bra so I could access her tits. Dipping my head down I started sucking and gently biting one of them, whilst hooking my fingers into her leggings and properly frigging her.\n\n\"Oh shit, Jack,\" that's gorgeous, she gasped. \"This is so horny and unexpected. I can't wait to get home so you can give me a proper, hard, fucking.\"\n\n\"Why wait until we get home?\" I asked, with a glint in my eye. I was wearing a pair of rugby shorts. Which, in those days, had pockets in them (I had never really understood why). Reaching into one, I pulled out a condom, in its wrapper.\n\n\"I thought we might have a fuck here?\" I suggested. \n\n\"Ooh, you kinky fucker. You're calling my bluff on my idea about more al fresco lovemaking\" Anna laughed. \"Did you plan this?\" she asked. All the while rubbing my hard cock through my shorts.\n\n\"Well, I remembered this old building was out here. I wasn't sure if it would be fit for purpose. But, from my days in the Scouts, I always remembered the phrase, \"be prepared.\" So, this morning, I put a condom in my pocket, just in case.\"\n\n\"Anyway, what do you think?\" I queried.\n\n\"God, yes, I'm up for it,\" Anna responded eagerly.\n\nReasoning, self-evidently, that in the middle of the day, we were safer with a quickie than a prolonged session, I wasted no time in rolling a condom onto my cock.\n\n\"Turn round and lean against the wall,\" I directed Anna.\n\nAs she did that I positioned myself behind her and did my best to manoeuver my cock into her waiting pussy. I knew from our brief foreplay that she was - as seemed to be the case permanently - aroused and ready for me.\n\nI found it wasn't quite as easy as our \"car bonnet\" fuck. Anna was a little too upright for me to easily enter. But that was certainly no reflection on any lack of eagerness on Anna's part.\n\n\"Christ, Jack, stick your cock in me,\" she exhorted. \"I'm ready and very willing.\"\n\n\"Bend forward a little more,\" I suggested. \"I just need to get the angle right.\"\n\nAnna did just that. Which meant that her glorious arse was now sticking more outwards and upwards. Grasping her by the hips, I leaned forward, pushed firmly and was in, with a \"swoosh.\"\n\n\"Fucking hell,\" she gasped. \"Christ, this is horny. Now. Fuck me hard!\"\n\nI pulled almost all of the way out and then thrust back in, forcefully. \n\n\"Nngghhhh, yes,\" Anna grunted. \"Come on. Like that. But harder and faster. Fuck this juicy cunt of mine.\"\n\nHeeding her instructions, that's exactly what I did. Grasping her by the hips and pumping away with a good rhythm.\n\nWhen we'd first starting having sex I sometimes struggled with coming quickly. But, as we'd become more accustomed to fucking, I'd learnt to last longer. Plus, it helped that we were having so much sex that my balls never felt too full! \n\nBut, on this occasion, I was, from the off, close to exploding. The view (looking down on Anna's gorgeous arse), the illicit nature of it, and Anna's obvious delight in the situation, were an incredible turn-on. \n\nFortunately for me, Anna was at least as turned on as I was. And seemed, already, close to orgasm.\n\nLooking back over her shoulder Anna had the most wanton look I'd ever seen on her. \"Come on you you dirty sod. Fuck the shit out of me!\" she demanded.\n\nThat was all the encouragement I needed. As I'd done over the car bonnet (and now knew that Anna liked), I took hold of her hair with one hand, placed another to steady myself on her back and began pumping away at a furious pace.\n\nJust feet away from a farm track (albeit a largely unused one) I tried not to make any noise. But, if anyone had walked past, they would have heard the sound of my hard cock powering away into Anna's \"squelchy\" pussy. And my balls slapping against her.\n\nBelow me, Anna reached under and started playing with her clit. Whilst occasionally trying to reach back and play with my balls. God almighty, it was an impossibly horny sight!\n\nI was now very close to orgasm. But, thankfully, as I began to build up to it, I felt the tell tale signs of Anna's pussy contracting around my cock.\n\nI redoubled my efforts and was pumping away furiously. I was desperate to give vent, vocally, to my feelings. But determined to stay quiet, in case anyone was walking past the ruined farmhouse.\n\nAnna, clearly, did not have quite the same level of restraint. Or maybe she cared less about being discovered!\n\n\"Oooooh shit, yes!! Come on, fuck me Jack,\" she cried out. \n\nI was no longer capable of holding back. I just hoped I'd be able to bring Anna to orgasm in the minute or so before I came. As usual, I shouldn't have worried.\n\n\"Ngghhhhhh, YESSSSSS...\" Anna almost hissed, as she finally realised that a little discretion was in order. As I felt her reach her own orgasm it triggered my own. I fired several jets of spunk into the condom. It was spine tingling; I was shaking with the power of it. \n\nMy legs were like jelly. From the intensity of my own orgasm and the effects of taking my own weight as we fucked against the wall. Even though we were outside, in the middle of a cold winter's afternoon, we were both covered in a sheen of sweat. \n\nPulling Anna back to her feet, we dragged our shorts and leggings back up. And I held her tight in the warmest of embraces. She was still gasping for breath. As was I.\n\n\"Oh my God, Jack, that was sensational,\" she managed to say. \"You're an animal,\" she grinned. \"And a really kinky fucker. I love it!\"\n\nAfter our heart rate finally returned to normal we jogged back home. Though at a very sedate pace after the exertions we'd just enjoyed.\n\nBoth parents were due home soon. So we decided to return to our own homes. As we parted, Anna pulled me to her. \"That was so, so horny. We'll have to do that again. Soon!\"\n\n-------\n\nWith tearful farewells, in mid-January, we departed back to our respective Universities. We planned to focus on our exams and meet in two weekend's time. Our colleges were about 50 miles apart, probably a two hour journey on the train.\n\nWe spoke, occasionally, on the phone. But, in those days, long before mobile phones, they were only snatched conversations, on pay phones, in draughty corridors of our halls of residence. But it seemed that the exams, for us both, went pretty well. Two weeks later, I pitched up at Anna's Uni accommodation. Looking forward to - I was pretty confident - a weekend of debauchery. \n\nAs Anna greeted me at the entrance to her halls my stomach flipped. I held her, briefly, at arms length, before pulling her in for a huge hug.\n\nPushing her away from me a little, I looked her up and down, with a huge grin on my face.\n\n\"Oh my God,\" I gushed, \"you look fantastic. Absolutely beautiful.\"\n\n\"Jack, you are such a sweetheart,\" she replied, blushing furiously, \"I'd forgotten what a charmer you are.\" \n\nThe truth was, she probably didn't look any different to when I'd last seen her. But, after two weeks of absence (and abstinence) I'd almost forgotten how gorgeous - and horny - she was. I really did think she was beautiful. And felt lucky and proud to be with her.\n\nShe held my hand and led me up to her room. Her accommodation, like mine, was cramped and basic. But it had the main requirement for our weekend. A bed!\n\nAs soon as we entered her room, I dropped my bag and pulled her to me. Some of the time - in fact quite a lot of time - we enjoyed a gentle, sensual, build up. But, right now, after more than two weeks apart, we were pawing away at each other.\n\nBreaking our kiss, Anna looked up at me and asked, with a grin, \"would you like a tea or coffee, or even have a look round campus?\"\n\n\"Shut up. And get undressed.\" I replied. \"I'm absolutely desperate for you.\"\n\n\"Correct answer,\" Anna replied. \"I'm gagging for you too.\"\n\nI knew that neither of us needed much foreplay, so, after stripping off, I quickly pulled a condom from my overnight bag.\n\nLaying, spreadeagled on the bed, in the most lascivious of fashions, Anna looked up at me, with a shy smile. \"You needn't bother with that Jack,\" she said. \"I've been to the Uni med centre. And they've put me on the pill.\" \n\n\"Oh my God, are you sure?\" I asked incredulously.\n\n\"Of course I'm sure, you idiot,\" Anna laughed in response. \"I wouldn't mess about with something like this. Now get that hard, unsheathed, cock into my pussy. I'm desperate for a good fucking.\"\n\nLaying her on her back I hovered above her. My hard, twitching, cock, just millimeters from entering her. I had butterflies in my stomach. After weeks of unbridled fucking we'd now gone a fortnight without seeing each other. Plus, the thought of finally enjoying the pleasure of her pussy, without a condom on, made me, strangely, a little nervous.\n\nThose nerves disappeared as soon as I entered her hot, juicy, pussy. I was in heaven!\n\nSo, it seemed, was Anna, \"oh shit Jack, that is gorgeous. I can feel every ridge and nodule on your beautiful cock.\"\n\n\"Oh God, I know. Your pussy felt fantastic with a condom on. But the sensation is OVERWHELMING without one.\"\n\nAnd that, I'm afraid, was the problem. Two weeks of abstinence (I'd been wanking, but nowhere near as much as we used to have sex) and our first ever bare backed fuck was just too much for me.\n\nSensing this, Anna, as she'd done when we'd lost our virginity together, urged me on.\n\n\"Come on Jack, don't hold back. Fuck me hard and pour your hot spunk into my pussy!\"\n\nRealising the futility of even trying to prolong things, I did exactly as she suggested. Pumping away for all I was worth.\n\nGiving me further encouragement (though absolutely none was needed) Anna urged me on. \"Fuck me Jack, give me two weeks of your sticky jizz.\"\n\nThat, I'm afraid, was all it took to set me off. \n\n\"Nnnnngh, YESSSSSSS!!\" I cried out, as I poured a torrent of spunk into her eager pussy.\n\nPushing myself up, but still embedded in Anna's pussy, I looked down and began apologizing. \"Shit, I'm so sorry. It's been so long. You are so, so, horny. And I was desperate. And the enhanced feeling, without a condom, was just too much to bear.\"\n\n\"Please don't worry. It's a compliment in some ways.\" Anna assured me. \"And I know you'll be good to go again several times over the weekend.\" she grinned.\n\nAs Anna said that, my cock started twitching inside her. In fact, it hadn't really softened. And it was already raring to go for round two. \n\nOh to be 19 again!\n\n\"Bloody hell,\" Anna exclaimed. \"I wasn't expecting it to be quite so soon!\"\n\n\"That's the effect you - and two weeks without sex - have on me,\" I laughed in response.\n\nTaking advantage of my renewed erection I began, slowly at first, to fuck Anna for the second time in just a matter of minutes.\n\nAnna was always well lubricated. But with my semen sloshing around inside her she was particularly wet. Fortunately, the hardness of my erection and the tightness of her pussy meant there was still an enormous amount of feeling/friction.\n\nIn fact, my dick was almost tingling with the pleasure it was deriving from being uncovered in Anna's tight, wet, pussy. \n\nJust as we'd done when we'd lost our virginity together I was determined - and able - to put my needs aside on this second attempt and focus on giving Anna the same pleasure she gave me. I was massively turned on. But not so much that I was likely to explode again immediately, as I had just a few minutes ago.\n\nI pulled all of the way out and then, slowly, re-inserted my dick. All of the time, glorying in Anna's delicate features, as I looked deep into Anna's soulful eyes.",
        "\"Oh, fucking hell, yes,\" Anna grunted. \"That hits the spot. I've missed you and your hard dick so much.\"\n\n\"Now, come on, give me a proper fucking. I'm desperate for an orgasm myself.\"\n\nI moved down for a deep, passionate, kiss. Whilst starting to grind away in Anna's pussy. Breaking the kiss I starting sucking, then gently biting, Anna's nipples. All of the time pumping deep, but still quite slowly, into Anna's pussy.\n\n\"Oh jeez, that feel good,\" Anna gasped, as she started squirming below me.\n\nMoving up a gear I was now fucking Anna harder and faster. She was starting to respond vigorously. Gripping me tightly with her pelvic muscles and fucking back against me. Fortunately though, I still felt very much in control. \n\nSo much so that I was able to go \"full throttle.\" After two weeks without her, I had been desperate. So, it appeared, had Anna. The harder I fucked her, the more she enjoyed it. And the more vocal she became.\n\nShe was thrashing about on the the bed. Gripping the sheets with clenched fists. And crying out (much more loudly than I thought sensible), \"come on Jack, fuck me, fuck me, fuck me hard...\"\n\nI was now pumping as fast and as deep as I was able to. In mid-winter, Anna had the radiator on full blast so the room was warm. The sweat was pouring off me as I powered way, fucking Anna for all I was worth. \n\nThe headboard on her cheap bed was banging against the wall and Anna continued to grunt and exhort me to fuck her harder. \n\nIn no time at all, the tell-tale signs of her impending orgasm were apparent. Her breathing quickened, the flesh at the top of her chest mottled and she gripped me even harder, as she ground her clit against my pubic bone. Shortening my strokes I continued to fuck her hard whilst I pulled her hair.\n\n\"Come on baby, come for me,\" I urged her.\n\n\"Nearly there,\" she grunted.\n\nAnd she was. She started bucking furiously below me. Wrapping her muscular legs around my arse and grasping my hips to pull me deeper inside her.\n\n\"Fuckkkkkkkkkkkkkkkkk!!\" she cried out as her orgasm hit. \n\nHaving come just a little earlier, I was still not there myself. So I kept pumping away. Almost before the first orgasm had finished Anna transitioned into a second and then a third. It seemed like they were coming in almost continuous waves.\n\nAs the third finished my own body tensed and I unleashed another sizeable load of spunk to add to my earlier deposit. \n\n\"Wow!\" was all she was able to gasp. As we both collapsed back on her bed and held each other tightly, with Anna quivering occasionally with the \"aftershocks\" of our wonderful reunion. \n\nRousing ourselves, Anna looked down and joked, \"cool, my first ever creampie.\" As two loads of jizz leaked out of her. \n\nWe had a quick shower (not together as Anna's accommodation had no en suite) and got dressed to go out for the evening. As we passed through her communal kitchen, Anna introduced me to a few of her friends, as her \"new boyfriend\".\n\n\"We guessed as much,\" one of them replied, archly. \"Or at least we hoped so. As there were some strange noises going on in your room a little earlier.\"\n\nWhich caused me to blush and stammer an apology. Whilst Anna, seemingly, was completely unfazed by this. \"Just getting re-acquainted after two weeks apart.\" she replied with a grin. Making me realise, once again, that she had changed so, so, much over the last month.\n\nBefore heading out, we spent a little time with her friends. They were a nice bunch. Anna clearly felt comfortable with them - and they with her. And they made me feel very welcome. I wondered how she'd fit in with some of my more boorish flatmates. Given her increased social - and sexual - confidence I reckoned she'd do pretty well.\n\nA small group of us went to the student union (just as dingy as mine) for a drink. Then Anna and I left to go into town for a pizza in a small, cosy, Italian restaurant. \n\nWe'd spent a lot of time together at home since we'd started dating. But this felt different. There were no parents, no neighbours, nor even friends. It was just the two of us, to do as we wished all weekend. It felt, somehow, very \"grown up\". And almost signaled a new stage in our relationship.\n\nWe had a wonderful evening. Cementing, for us both, that we enjoyed each other's company socially - as much as we did sexually. We retired to her dorm, relatively early, for a more leisurely fuck. Before falling asleep, for the first time ever, in each other's arms.\n\n-------\n\nThe following morning we were laying in her bed (tiny as it was), relaxing after another frantic fuck. Going to bed with Anna - and even more so waking up alongside her - was another new pleasure. \n\nWhilst we'd had a lot of sex in our nascent relationship, until this weekend, we'd never \"slept together\". Cuddling up close in the warmth of her cozy dorm room was a wonderful experience.\n\nWe were sated, for now, but were still lazily kissing and caressing each other. As I've previously commented, passionate, sensual, kissing played a huge part in our relationship.\n\nWithout the urgency to bring each other to orgasm we were delighting in the simple - though possibly under-rated pleasure - of locking our lips and tongues together.\n\n\"God, I love the way you kiss me. And how much you kiss me,\" Anna murmured. \"I didn't think boys liked kissing this much.\"\n\n\"Well, as I've said before, I can't speak for all of mankind, but I certainly love it,\" I fed back.\n\nBut there was something in the way she said boys that pricked a thought in my brain.\n\n\"Hang on, do you think girls like kissing more than boys do?\" I queried. \"And do you have any first hand knowledge of that?\"\n\nEarly on in our time together Anna had blushed at the the drop of a hat. But, as our relationship had developed - and she'd become more assertive and sure about her sexual self - that had pretty much stopped. \n\nBut now!! She went crimson, and looked away, very quickly. Realising I was on to something, I pulled her to me and ensured she looked me in the eyes.\n\n\"Come on, spill the beans,\" I demanded, with a smile. \"Is there something you need to tell me?\"\n\nInitially, she wouldn't maintain this eye contact. And was clearly a little embarrassed about something. \"Jack, it's nothing, really. It's not a big deal at all.\" \n\nWhich, of course, only made me more curious about what vexed her. And more determined to discover it.\n\n\"Right,\" I said, firmly, \"you told me a few weeks ago you weren't going to apologise for any behaviour. And you know how accepting I've been of anything you've done, or felt. So let's get to the bottom of this.\"\n\nShe could see I wasn't going to give up on this. So, with a deep breath, she explained. \"You know my cousin, Natasha,? Or Tasha as we call her? Two years above us in school?\"\n\n\"Yes...\" I said slowly. Wondering - possibly hoping - where this might be going. \"Isn't she at this Uni too?\"\n\nNatasha, unlike Anna, was one of the more \"obvious\" girls in our school. Not slutty. In fact, a little like the two of us, diligent and academic. But seriously good looking. And very confident in those looks. Probably the girl in her year that the most boys, me very much included, fancied.\n\n\"So, what about Natasha? How has she helped form your views on whether girls like kissing more than boys?\" I probed.\n\nAfter another very deep breath, Anna continued. \"Right, no piss taking, no interruptions. And don't judge. I'm going to tell you what happened.\"\n\n\"You're right, Tasha is in her final year here. And she plays hockey with me for the Uni team. I've always got on pretty well with her. Even though she was always the cool, hot, girl. And, as you know, I was the quiet, uncool, one. But she's been really lovely to me since I got here. And has helped me settle in.\"\n\n\"Late last term, after our last game before we broke for Christmas, we had a hockey club party back in the Student Union. Everyone got really drunk. Natasha and I very much included. She lives off campus in a student house, with several friends. But it's about 5 miles away. She was going to get a taxi back. But she struggled to book one. So I told her she could stay with me, in this flat, in the halls of residence on campus.\"\n\nI was starting to like where this story might be heading. But, I kept my counsel and let Anna continue with the tale, at her own pace.\n\n\"So,\" Anna continued, \"as the party broke up we staggered back here, arm in arm, giggling and hugging. Like you do when you're drunk. Natasha said she'd sleep on the floor, because my bed is pretty small. But I was having none of it and told her to scoot up with me.\"\n\n\"We stripped down to our bras and knickers. And I went to find Tasha an old tee-shirt to sleep in. I'm sure I was less self conscious than I would have been if we'd not been drinking. But I had known Tasha since we were kids. As I passed her a tee shirt she gave me a big hug, telling me how much she had enjoyed seeing me fitting in so well at Uni. And I thanked her for helping make that happen. And gave her a big hug and kiss myself.\"\n\n\"But then, breaking the hug, she held me at arms length and looked me up and down, with a big, drunken, grin. \"Oh my God, Anna, I can't believe what a killer body you've got. Maybe these tits run in our family?\" she suggested.\n\n\"I remember being a little embarrassed. But also proud, that someone like Tasha thought I had a \"killer body.\" But I got more embarrassed, when she suggested, \"let's take our bras off and compare tits.\" She wanted to see how much of a family resemblance there was.\"\n\n\"I don't know why I went along with it. The vodka had clouded my brain probably. But, as she unhooked her bra, letting her tits swing free, I did just the same. \n\n\"Please don't think I'm as arrogant as you,\" Anna chuckled, \"but I recall thinking, \"Christ, they are lovely tits, but I prefer mine.\" Tasha's tits are probably bigger than mine, but, perhaps because of that, they sag a little more. And her nipples are quite small. And, drunk as I was, I clearly remembered thinking that I liked my big nipples more. You really are rubbing off on me,\" she grinned. \n\nBy now, I was, predictably, rock hard! I'd resisted the temptation to interrupt, or comment, on Anna's story. But I hadn't been able to resist idly stroking my cock. Plus, as Anna told me how her cousin's nipples looked - and compared them to her own - I reached over and started to fondle those nipples.\n\nPausing, briefly, Anna insisted on me giving her tits - and pussy - a little attention. But, before we started getting too steamy, I wanted to hear more about the story between her and Anna.\n\n\"Go on,\" I said, \"now you've started you may as well tell me everything.\"\n\n\"OK,\" she agreed, \"I'm actually feeling better now for telling you. Even though, perve as you are, I knew it would turn you on,\" she laughed.\n\n\"It would turn almost any boy on,\" I countered, \"it's a standard male fantasy.\"\n\n\"Fair point,\" Anna agreed. \"Though I still think you're a perve. But, of course, that's one of the reasons I love you.\" she laughed. \n\n\"Anyway, let me finish the story. So, Tasha and I stumbled down into my bed. And lay, side by side, with only our knickers on. She started fondling her tits. And then reached over and grabbed mine.\"\n\n\"Looking back, especially as inexperienced as I was back then, I can't believe I let her do that.\" Anna continued. \"But maybe that's why. I was so lacking in any knowledge of sexuality I just assumed this was normal. Plus, I quite enjoyed the feelings in my tits - and my pussy - that her fondling was causing.\" Anna suggested, with a grin.\n\n\"Tasha then really shocked me. She pulled me too her, took my head in her hands, a little like you do, and gave me a proper french kiss.\"\n\n\"Once again, as inexperienced as I was - and of course drunk as I was - I though maybe this was pretty normal. So I kissed her right back. I really didn't have much clue what I was doing. I just responded to what she was doing with her lips and tongue.\"\n\n\"I know that, once more, I'm sounding as arrogant as you again,\" Anna continued, with a chuckle. \"But I reckon I'm a natural when it comes to kissing. And Tasha certainly seemed to think so.\"\n\n\"Tasha told me that she loved kissing, almost more than anything else. But her boyfriend seemed to see it, in her words, \"as a means to an end\". Whereas she enjoyed it for its own sake. But she told me, a couple of times, that I was a \"fantastic kisser.\" Mind you, when you're drunk you tend to say lots of nice things to people.\" \n\n\"We didn't really do a great deal more than that. Tasha was, if anything, even drunker than me. And after about 5-10 mins of kissing - plus a little groping of our tits - she just let me go, rolled over, and started gently snoring. \n\n\"So, was that the only time you and Tasha have kissed like that?\" I queried.\n\nBlushing again, Anna paused, but then responded, \"Well, the next morning, we were pretty hungover, so we just had a coffee before Tasha made her way back to her house. However, before she left she pulled me back into her arms and gave me another big, sloppy, kiss.\"\n\n\"She wanted to know if I was OK with what we'd done and told me how gorgeous I was. I must say, coming from her that was a real confidence boost. She told me boys would be falling at my feet. But to make sure I picked a decent one. Looking back it's just a shame I didn't heed her advice,\" Anna chuckled.\n\n\"Oi,\" I answered, in mock horror. \"From what I've been discovering of you, the sort of boy you need is an indecent one.\"\n\n\"Fair point,\" she conceded with a grin. \"And thank you for not interrupting. Now that I've started, let me finish my story.\"\n\n\"Crikey, is there more to tell?\" I asked.\n\n\"Not a great deal more, really,\" she conceded, \"but I did see Anna on New Year's Day. We went round to visit her folks. Whilst the oldies were chatting we went for a walk in the village and she was quizzing me about you. She knew we were dating and was really keen to hear how it was all going. In fact, she sounds as obsessed with sex as I am,\" Anna laughed. \"It really must be a family trait.\"\n\n\"She was desperate to know: whether we were having sex; how much I was enjoying fucking; were you a good lover; and how big your cock was?\"\n\n\"I hope you gave all the correct answers,\" I demanded. \n\n\"My parents brought me up well,\" Anna agreed, \"so I always tell the truth. I told Tasha that I was really enjoying sex. Despite the fact that you were a terrible, inconsiderate, lover. And how small your cock was!\"\n\nThe impact of these insults was somewhat reduced by Anna firmly grasping my cock and wanking it up and down.\n\n\"As you often say to me, you're a cheeky sod.\" I told her. \"So, I don't suppose you want another session of dodgy lovemaking with this tiny weapon of mine?\" which I shook, in all it's erect glory, against her tits.\n\nPulling me to her, her only response was, \"Shut up and fuck me.\"\n\n------\n\nA little later, after we'd enjoyed another wonderful fuck, we were relaxing in each others arms, before stirring to get some breakfast. As we began getting dressed, Anna paused and looked at me with a shy smile on her face.\n\n\"Actually, there is one other thing I should tell you,\" she confessed. \"I told Tasha we'd had sex over the bonnet of your car. And I was discovering I was, potentially, something of an exhibitionist.\"\n\n\"Bloody hell,\" I spluttered, \"I thought you warned me off about telling anyone about our sex life.\"\n\n\"I'm sorry,\" Anna apologised, \"perhaps I should have been a little more discreet. It's just that Tasha was really persistent. And it felt good to tell someone how adventurous we've become. I really hope you don't think I've betrayed your confidence?\"\n\n\"Plus, if it makes you feel better, I lied about how small your cock is and told her you were sort of OK in bed.\" Anna laughed. \n\n\"OK, I forgive you,\" I grinned, \"actually, I think it's quite cool that you've confided in your cousin. Though I promise you I have NO plans to confide in any of my friends or relatives.\"\n\n\"I'm relieved to hear that,\" Anna said. Then, taking a deep breath, she continued, hesitantly. \"There's one last thing I need to \"fess up\" to. As much as I have exhibitionist tendencies, it seems like Tasha has voyeuristic tendencies. And she's asked me if we'd consider letting her watch us fuck?\"\n\nI think my jaw actually dropped!\n\n\"Now you're taking the piss and winding me up?\" I suggested. \"There's no way you'd have had a conversation like that... Is there?\"\n\nThough, actually, as soon as I paused to consider it, knowing what I'd recently learnt about Anna, it really didn't seem that unlikely.\n\n\"No, I'm not winding you up,\" Anna assured me. \"I know it's a pretty \"out there\" suggestion. But if you were up for it, I certainly would be.\"\n\nIt really didn't require a great deal more thought. Whilst Anna was, I'm sure, more of an exhibitionist than me, it was still something that appealed to me. Plus, I quite liked the idea of showing my sexual prowess off in front of another hot woman. I also wondered - though had the sense not to articulate this thought - whether Tasha may want to take part.\n\n\"Ok,\" I agreed, \"if you and Tasha are really serious then let's set something up for the weekend after next, when I come back to see you.\"\n\n-------\n\nSo, two weeks later, I was back in Anna's dorm on a Sunday morning. We'd spent the weekend fucking. But also exploring Anna's university town and meeting a few more of her new Uni friends. Our bond with each other was, if anything, strengthening.\n\nI was a maelstrom of emotions. Hugely turned on of course. But nervous and a little apprehensive that I may not perform \"in front of an audience\". Most of all though, I felt incredulous. This situation just seemed surreal. \n\nA month ago I was a shy virgin, desperate to gain experience - of any sort - with women. Now I was about to disrobe - and more importantly have sex - in front of Tasha, one of the hottest girls from school. I'd always lusted after her, but I realised I'd probably never even spoken to her (geeky kids just didn't speak to hot older students). \n\nBut here I was, about to fuck my beautiful, horny, girlfriend - her cousin - whilst she looked on and watched. I really couldn't believe my luck. \n\nThat said, I was also a little cautious. Could this affect my relationship with Anna? There had been no mention of Tasha participating in any way, other than voyeuristically. But should I be wary of finding Tasha too attractive? And causing Anna to become jealous? Would it lead to Anna asking us to fuck in front of one of my friends, or cousins? Which (and I knew this was hypocritical) was not a scenario I found remotely appealing.\n\nJust a little after the agreed time, there was a knock on the door of Anna's dorm. Followed, immediately, by Tasha striding confidently in. It didn't seem that she shared the anxiety that I was most certainly feeling.\n\nShe and Anna greeted each other with a big hug. Turning to me, she held out the arms bidding me to do the same. \n\nNatasha was, I now realised, a taller, blonde, version of Anna. Not identical by any means. They were cousins, not sisters. But you could certainly see a family resemblance. And she was, if anything, even more gorgeous than I'd remembered from school. I really was going to have to be careful not to leer over her too much! \n\nIt was clear she felt the \"senior partner\" in this situation. And I guess she was. She was two years older than us. And, it seemed, more sexually experienced than either of us. Plus, this whole idea had been hers.\n\nBreaking from our hug, she held me at arms length and appraised me. \n\n\"Wow, you've changed from the shy, slightly awkward, kid I vaguely remember,\" she exclaimed, with a smile. \"I can see now that you and Anna are a pretty hot couple.\"\n\nIt might have been a little patronising. But Tasha had a warmth about her that diluted that. Plus, being told that I was one half of a \"hot couple\", by someone who had been - and still was - the embodiment of \"hot\", made be beam.",
        "What made me smile even more broadly was Tasha looking back and fore at the two of us, with a lascivious grin on her face, \"I'm going to really enjoy watching you two fuck...\" I swear she actually licked her lips. \n\n\"Actually,\" Tasha continued, \"can I just check you're OK with this? I don't want Anna to have press ganged you in to something you're uncomfortable with?\"\n\n\"I appreciate you asking,\" I responded. \"You're right, Anna is pretty bossy.\" I said, with a grin. \"But I'm well up for this. Though I am a little nervous. How is this going to work exactly?\"\n\n\"Well, I don't want you to follow a script,\" Tasha replied, \"just do what comes naturally. Anna told me you're a great kisser. And, though she made me promise not to repeat it - because you'd get even more big headed - pretty good at fucking too. So I'd just like to watch you two in action. It's always been a fantasy of mine to do that.\"\n\n\"And what are you going to do?\" Anna queried. \"If we are going to \"get our kit off\" then I think you should too.\"\n\nMy heart (and my dick) leapt at that suggestion. I was hoping that would be the case. But I was wary of suggesting it. Fearful of what Tasha may say. And what Anna might think. \n\n\"I just thought I'd watch and wank!\" Tasha retorted. \"If you guys are OK with that? And yes, I'm certainly planning to be nude. It will make my wanking much more comfortable,\" she sniggered.\n\nArmed with this information and now even more eager to progress things, I pulled Anna to me. Softy, sensually, I started to kiss her. \n\nI was absolutely determined to put on a good \"show\" and illustrate to Tasha that Anna's boasts were well founded. Cupping Anna's head in my hands, stroking - and gently pulling - her hair. As well as lightly kissing almost every inch of her beautiful face and neck. Coupled, of course, with lots of deep, passionate, french, kissing.\n\nFinally pulling away from me, Anna turned to Tasha and reported, \"see, I told you he loved kissing. And he's really good at it too.\"\n\n\"I can see what you meant, on both counts,\" Tasha agreed. \"Do you think he's a better kisser than me?\"\n\n\"Mmmn, I'm not sure...\" Anna pondered. \"Why don't you give me a reminder of your skills?\"\n\n\"What, like this?\" Tasha asked, pulling Anna to her. And then, taking her into arms. \n\nPushing Tasha away, briefly, Anna looked over at me, \"Jack, why don't you use the time to shed your clothing and get yourself ready.\"\n\nAnd she then repeated, with Tasha, what she and I had been doing moments earlier.\n\nOnce again, I really do think that my jaw dropped! Anna had clearly explained to me what they'd done. But, somehow, it hadn't occurred that they would repeat their clinch in front of me. Stupid of me, I know.\n\nI'd never seen two girls kissing before. Certainly not in real life, nor even in the limited amount of porn I'd watched (lesbian scenes didn't seem to have been as prevalent in those days). But I discovered it was MASSIVELY horny. \n\nWatching the two of them locking their lips together, stroking each other's hair and faces, interlocking their tongues and grinding against each other was sooooo arousing. \n\nI realised then that I wasn't just turned on by kissing and being kissed. I was also turned on by watching people kissing. Especially two hot girls!\n\nFollowing Anna's bidding, I tore off what little clothing I was wearing and sat, with my back to the wall, on Anna's bed, with my erection rearing up before me. Idly playing with myself, whilst watching the two of them make out.\n\nAfter several minutes (not that I was counting as I was enjoying the show) Anna broke from the kiss with a theatrical \"pop\".\n\n\"Mmm, very difficult to judge,\" she reported. \"You're both very good, in different ways. But I think Jack has the edge as I could feel his hard cock grinding against my pussy whilst he's kissing me. That's an advantage he'll always have.\"\n\n\"That's a fair point,\" Tasha conceded with a laugh. \"But what an earth has happened to the timid, virginal, Anna I've known for so long? Though, of course, if you were still timid and virginal you wouldn't be about be let me watch you be skewered by that very impressive weapon that Jack has there.\"\n\n\"I'm glad you appreciate it,\" I agreed, a little smugly. \"But I'm feeling seriously overdressed here. It's about time you two caught up.\"\n\nAnna quickly disrobed. But Tasha decided on doing a more provocative strip. Standing next to the bed, just feet away from me. She shrugged off her jeans and peeled her tee shirt off. Revealing some seriously sexy, lacy, black lingerie. High leg knickers, almost cut like a thong. And her spectacular tits spilling out of a half cup bra. She looked sensational.\n\nMy back was against the wall of the tiny dorm room. And my legs were sticking out over the side of the bed.\n\nTasha moved closer. Still standing above me, but with her legs either side of mine. She began cupping those tits as she reached back and unclipped her bra.\n\nPausing for effect, she then flung the bra onto my head and let her tits swing free.\n\nI was dumbstruck. Anna was right. Tasha's tits were bigger than hers. And perhaps did sag a little more - but only a little. At that stage of my life I only had Anna's to compare them to. I probably preferred Anna's. But only just. I thought these were a very very close second best!\n\n\"Oh my God,\" I managed to croak. \"This is even hornier than I expected.\"\n\n\"I'm glad you think so,\" Tasha agreed. \"It's got me really worked up too.\" As she put her hands onto her knickers and looked set to take them down.\n\nBefore Tasha did that, shocking me again - in fact she seemed to have an almost limitless capacity to do that - Anna made a suggestion.\n\n\"Jack, it seems unfair that I've kissed Tasha. And I've kissed you. But you two have only experienced a kiss with me. Why don't you let Tasha experience your kissing prowess?\"\n\nVery unusually for me, I really was struck completely dumb. Which may have been a good thing. Because, as I started to process this information, I half wondered if it were a trap. And Anna would berate me for wanting to kiss another woman.\n\nPicking up on my lack of response - and the look of shock/terror/surprise on my face - Tasha looked at me with an exaggerated frown, \"what's the matter with me? Aren't I attractive enough to kiss?\"\n\nStung into life, I managed to splutter, \"no, no, of course not, you're gorgeous (which I immediately regretted as I feared what Anna would say). I just wasn't expecting that...\" I finished lamely.\n\nFortunately, Anna came to my rescue. \"Oh, Jack, if you could see your face,\" she laughed, \"I've just made a suggestion most men would kill for. But you look terrified. But it is only a suggestion. It's up to you - and more importantly Tasha - whether she'd like to kiss your ugly mug. It's only a kiss though. That's as far as far it will go. Your cock is mine. And mine only.\"\n\nPulling me off the bed and to my feet, Tasha held me in her arms. \"Jack, you poor, tormented, soul. I'd love to kiss you. And, if your twitching dick is not mistaking me, you'd love to kiss me too,\" she chuckled. \"My boyfriend has got a lovely cock, great stamina and fucks me as well as I could possibly wish. But he's not as keen on kissing as I am - and you seem to be.\"\n\nSensing, a little belatedly, that I needed to take some form of initiative, I silenced any further comment by pulling Tasha to my chest and reached up - in one of my \"signature moves\" to cup her head in my hands. And then leaned in to kiss her. I was determined to show Tasha that Anna's boasts about my kissing prowess were well founded. \n\nIt seemed that, from the off, whatever I was doing, was working. Tasha, like her cousin, was a very enthusiastic kisser and was, almost immediately, moaning into my mouth as our tongues and lips locked together. Plus, she began grinding her pussy against my groin.\n\nIt was surreal and impossibly horny. I was completely nude. And Tasha was only wearing some very flimsy knickers. My dick, as hard as it possibly could be, was sticking straight up and was sandwiched between us.\n\nThe instinctive thing to do was to grasp Tasha's arse, fondle or even suck on her tits. And reach between us and insert my fingers into her pussy, through her very flimsy kickers. \n\nBut I held off from that. I knew the boundaries. And had no desire to over-step them. Plus, I was getting huge pleasure from the kiss itself.\n\nOut of the corner of my eye I could see Anna laying back on her bed. She had one hand on her tits. And the other was between her legs, gently frigging her pussy. \n\n\"Don't stop on my account,\" she suggested, with a sleazy grin. \"I thought I'd just experience a little of the \"watching and wanking\" that Tasha is planning.\"\n\n\"Oh my God, you dirty little minx,\" Tasha exclaimed, pausing briefly from our kiss. \"Let's give you an even better show.\"\n\nTuring back towards me she redoubled the passion of our kissing, driving her tongue deep into my mouth. Whilst, at the same time, grinding her pussy against my erect cock.\n\nFinally, she broke from our embrace. \"Bloody hell, you were right,\" she reported to Anna. \"He's a very fine kisser indeed. Now, let's see how good a fucker he is!\"\n\n\"Good idea,\" agreed Anna, \"watching you two kiss and playing with myself has got me properly worked up. I'm in need of a really good fucking. Come on Jack, get that cock of yours inside me.\"\n\n\"Whoa tiger,\" I responded, \"I'm not some \"wham, bang, thank you Mam\" type. I like a little foreplay. And watching you frigging your pussy has made me want to give it some attention myself.\"\n\n\"Oooh, Yes please.\" squealed Tasha. \"I'd love to see you lick Anna's pussy.\"\n\nPushing Anna onto her back I prepared to go down on her. The bed was a small single. And it was a squash for the three of us to fit on it. Tasha positioned herself right at the top of the bed, leaning back against the head board. Anna laid below her, with Tasha's legs either side of her head. And I was between Anna's legs.\n\nI began to slowly work my way up Anna's inner thigh, towards her waiting pussy. She was already squirming against the sheets and I could see how wet she was. \n\nJust as I prepared to give Anna all my attention I looked above her and saw Tasha gently frigging her clit, whilst leaning forward to get as close a view of the action below her as she could. \n\nAs she did, those hugely impressive tits of her swayed in front of her. The dorm room stank of sex. It really was proving to be an insanely horny experience.\n\nOrdinarily I liked to take my time and tease Anna with my tongue. But I sensed - for both Anna and Tasha - that this wasn't the time to prolong things too much. Both wanted some more immediate gratification. Anna in person and Tasha vicariously.\n\nSo, I began to kiss and lick Anna's swollen labia. Albeit, gently at first. Barely grazing my lips on her pussy. \n\nBecoming impatient, Anna grasped my head and pulled me against her. \"Come on, Jack. This situation has got me so worked up. I need you to get me off like this. And then give me a good fucking,\" she demanded.\n\nSo I moved it up a gear - or two - and gave firmer, more immediate attention, to Anna's prominent clitoris. And I inserted one, then two, fingers into her throbbing pussy.\n\nWithin moments she was writhing against my tongue. Tugging my hair and pulling me against her, whilst wrapping her muscular legs around my head.\n\nAbove us, Tasha kept up a running commentary on my efforts. \"Go on Jack, your horny little fucker. Lick my cousin's wet, juicy, pussy. Stick your fingers up her cunt. Make her come on your beautiful, talented, tongue.\"\n\nAs I looked up I could see that Tasha had stopped frigging her pussy and had reached down to fondle Anna's tits. \n\nAnna seemed to be experiencing sensory overload. Tasha was playing with her sensitive nipples. I was licking her succulent pussy and Tasha was keeping up a voyeuristic commentary that I knew would be adding to Anna's arousal.\n\nIndeed, that overload led, very swiftly, to her first orgasm of the session. Bucking and writhing on my tongue she let out a stream of obscenities.\n\n\"Fuck, fuck, lick my cunt, you dirty fucker. Grab my tits Tasha. I'm comingggggg...\" As she arched her back and enjoyed a huge, shuddering, climax.\n\nAnna lay back on the bed, catching her breath and still twitching gently from her orgasm. Tasha looked at us both, \"Fucking hell, that was horny,\" she reported. \"I can't wait to watch you two fuck.\"\n\nPropping herself up, Anna pulled me up from between her legs, \"come on Jack, it's showtime,\" she demanded. \"Let's give Tasha the performance she's come to see.\"\n\n\"Too right,\" I agreed readily. I was, predictably, rock hard. And eager to get some satisfaction myself.\n\nSo, pushing Anna on her back I edged forward and entered her gaping pussy.\n\n\"Oh fuck, that's good,\" she grunted. \"I love having my pussy filled after I've orgasmed on your tongue. Come on, fuck me hard.\"\n\nAs I began pumping away Tasha leaned forward from her position above Anna's head and brought my face to hers, \"kiss me again, Jack,\" she urged, \"I want to taste my cousin's pussy juice on your tongue.\"\n\nHappy to oblige, I opened my mouth and flicked my tongue against Tasha's as we enjoyed another passionate kiss, whilst I fucked Anna beneath me. I marveled at the depravity of these two cousins. And my incredible good fortune in sharing in it. \n\nSensing that I'd better not devote too much attention to Tasha I broke from the kiss and concentrated all my efforts on giving Anna a good fucking. A fucking that she most certainly wanted - and Tasha most certainly wanted to watch.\n\nTo facilitate that, Tasha edged away and sat, with her back against the head board. And began, in earnest, playing with her pussy, whilst, just feet away, I was thrusting into Anna.\n\nTasha's masturbatory style was to have a couple of fingers sawing away at her pussy. Whilst using the other hand to alternate between frigging her clit and, occasionally, flicking a nipple.\n\nI could see - and hear - that she was really aroused. Her mighty tits were heaving. Her face was contorted with lust. Her pussy was glistening with juices. And she was squelching as she was fingering herself, in tune, it seemed, with my fucking.\n\nFor my part, watching her masturbate was adding, hugely, to my own arousal. Seeing her bringing herself close to orgasm, whilst I did the same to Anna, was a huge turn on.\n\nBut I was conscious that Anna was facing away from her cousin. I had a strong sense that she would also enjoy watching Tasha frig herself. And also that Anna would want to be on \"full display\" to her cousin.\n\nI slowed my thrusting and suggested to Anna, \"why don't we switch positions? If you go on top you'll get a better view of how much Tasha is enjoying the show. And she'll get a better view of those tits of yours swaying in my face.\"\n\n\"What a great idea,\" she agreed readily. Flipping me off her and onto my back. Then immediately impaling herself on my rampant dick.\n\nShe was already worked up. From the cunnilingus and the missionary. So Anna went swiftly into full on fucking. Bouncing around on my dick, whilst grinding herself against my pubic bone. \n\nI was now blind to Tasha's activity behind me. But both she and Anna kept me informed via their commentary.\n\n\"Oooh, Tasha, you dirty little bitch,\" Anna reported. \"I can't believe you've got three fingers up you.\"\n\n\"Fuck yes,\" she grunted in response. \"This is so fucking horny. I love seeing you two fucking. In fact, I love the sounds and smells, as well as the vision.\"\n\n\"And those beautiful tits of yours look sensational jiggling up and down as you bounce on Jack's hard cock. Jeez, I can see his erection glistening with your pussy juice as he's thrusting up at you. He's as hard as steel.\"\n\nComments then became less coherent - and restricted to grunts and gasps - as the three of us concentrated on our pleasure. Tasha self pleasuring, whilst Anna and I focused on each other. But also conscious that, by doing that, we'd give Tasha the best show we could. \n\nWe'd spent the weekend fucking and I'd come multiple times over the last few days. So I was able to hold off from spunking too soon. Anna, seemingly, had an almost limitless capacity for orgasm. Having come just a little earlier on my tongue I could sense that she was close again. Her breathing was shortening and she was starting to quiver against me.\n\nBut, before she came for the second time, Tasha beat her to it. Over my shoulder I heard her start to cry out, so I tried to turn to get a glimpse of her orgasm.\n\nOut of the corner of my eye I could see a blur of activity as she fingered herself aggressively.\n\n\"Oh god, I'm coming,\" Tasha cried out, \"fuck, fuck, fuck, YESSSSSSSS.\"\n\n\"Shit Tasha,\" Anna reported, as she slowed her own gyrations to watch her cousin, \"that seemed like a big one. I'm so glad that we are turning you on so much.\"\n\n\"Christ, yes,\" Tasha agreed, \"it's so horny to watch the two of you fucking. I hope you enjoyed my little show too.\"\n\n\"Even more than I expected,\" Anna agreed, \"but poor old Jack didn't really get to see it.\"\n\nKind as it was of Anna to think of me, I certainly didn't' feel like \"poor old Jack\". I was fucking my gorgeous girlfriend, whilst watching - albeit sporadically - someone I'd fancied for years, wanking themselves to orgasm. And all of this just a few months after I'd lost my virginity. So I really wasn't feeling too hard done by.\n\nBut, all of that said, I wasn't about to turn down an enhanced view of proceedings. So, when Anna suggested we switch positions again I was certainly keen.\n\n\"Come on Jack, fuck me in doggy,\" she demanded. \"That way we'll both have a great view of my sexy cousin.\" \n\n\"Oooh, good idea,\" Tasha agreed. \"I love doggy, it's such a slutty position. I'd love to see you two like that.\"\n\nAnna went down onto all fours and I positioned myself behind her. It was a massively horny sight. Now, I had a clear view of Tasha in all her masturbatory glory. Anna was just inches away from her. And Tasha could see me pumping away in Anna's juicy pussy.\n\nEasing my way into her I soon found my stride. Reaching down, as she usually did in this position, to play with her clit, Anna urged me on, \"come on Jack, I can feel that hard cock of yours right up me. Fuck me hard.\"\n\nJust above her, Tasha had slowly resumed frigging herself. It seemed that, unlike Anna, she wasn't overly sensitive after she'd come. And she was rubbing herself as enthusiastically as she'd been at the start. But she paused in her actions and moved around to the side of us.\n\n\"Keep going Jack,\" she demanded, \"I want to see your cock sliding in and out of Anna's pussy.\"\n\n\"Oh my god, look at that tight little cunt of Anna's. It's gripping you as you fuck her. And your cock is glistening with her pussy juice. Christ, that's horny,\" she continued.\n\nI had no idea, just a few weeks ago, that I'd enjoy fucking in front of someone. At that stage, I'd have been happy to fuck someone - any one perhaps - one on one. In total darkness. But, now that I was experiencing it, I was getting a massive buzz from it.\n\nPart of that was the vicarious pleasure I derived from Tasha, and particularly Anna's, enjoyment. For both of them, clearly, this was a huge turn on. And that transmitted itself to me. Helped of course, by the commentary from Tasha. \n\nBut I was deriving enormous pleasure myself in performing. For someone who'd seemingly been virtually anonymous to women - certainly in a sexual sense - this was a huge ego boost. But, most of all, I was genuinely aroused at being watched whilst we fucked. \n\nPutting those thoughts to one side I focused, once again, on giving Anna pleasure. And trying to bring her to another orgasm. Though I didn't expect that to be too difficult!\n\nI was right. I knew that licking her made her pussy sensitive. And she always loved being fucked hard after this. Plus, the situation was really turning her on.",
        "So I upped the pace, whilst grabbing her hair. Partly for extra purchase. And partly as I knew how much she enjoyed this when she was in this type of heightened sexual mood.\n\nAnna continued playing with her clit, whilst I fucked her hard and fast. Within minutes I could feel that the orgasm that had been building for some time was about to hit her.\n\n\"Fuck, fuck, fuckkkkkkk\" she cried, as she spasmed beneath me, collapsing onto the bed as I stopped thrusting and pulled out of her.\n\nRemarkably, I'd been able to hold off from coming - just about. In large part because I wanted to complete our show with a \"cumshot finale\".\n\nBut I was, now, desperate to come myself. So, as soon as Anna's orgasm started to subside I flipped her onto her back. Straddling her I rubbed my throbbing dick between her tits.\n\n\"Come on baby, wrap those tits around me,\" I encouraged her.\n\nSensing my desperation she complied readily. In the heat of her room we were both sweating, so my cock slid smoothly between her impressive orbs. \"Come on Jack, shower me with your jizz,\" she urged.\n\nWatching on intently, Tasha continued to play with herself and maintained her commentary.\n\n\"Ooh yes, come on you kinky little fuckers. Let me see you coat those tits with your hot, creamy, spunk.\"\n\nSeconds later, I did just that, \"Oh fuck, here it comes,\" I warned. \"YESSSSSS!!\" \n\nI cried out, as I arched my back and shot several jets of spunk over Anna. The first hitting her squarely on the chin. With the remainder pooling between her tits. \n\n\"Wow,\" Tasha laughed, \"what a load. And what an aim!!\"\n\n\"Care to taste it?\" Anna asked. Of us both. As she ran her fingers through my hot spunk. \n\n\"I don't think so,\" Tasha demurred. \"I doubt my boyfriend wants to taste another man's jizz on my tongue. As kinky as that it is.\" she grinned. \"But you guys go ahead.\"\n\n\"Your loss,\" Anna laughed, as she scooped up most of my spunk and took a mouthful of it. Before pulling me in to snowball it.\n\n\"Christ, you guys are wild,\" Tasha reported. As she re-applied herself to her pussy, swiftly bringing herself to a second orgasm as the two of us looked on, intently.\n\nWe all collapsed, in a heap, onto the small bed, as we recovered from our exertions.\n\nFinally stirring from our post-orgasmic torpor Tasha began dressing.\n\n\"You guys are the best,\" she declared. \"Thank you so much for fulfilling a fantasy of mine. That was so fucking hot. If you ever want to do it again, please let me know.\" \n\n\"I'm going straight round to my boyfriends now. He's going to get the fuck of his life. Though I'm also going to insist he goes down on me first. If he wants a blowjob, then he needs to lick my pussy.\"\n\nGiving us both a huge sloppy kiss (forgetting perhaps that both us had my spunk in our mouths), Tasha departed in a hurry. Eager, it was clear, to get her pussy both licked and fucked.\n\n\"Well,\" I opined. \"I think we can safely say neither of us are the timid, virginal, types we were just a few months ago.\"\n\n\"Where on earth do we go from here?\" I wondered..."
    ],
    "authorname": "hammondo",
    "tags": [
        "being watched",
        "dirty talk",
        "first time",
        "girls kissing",
        "outdoor sex",
        "talking dirty",
        "sexual exploration"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/swots-explore-sex-ch-03"
}