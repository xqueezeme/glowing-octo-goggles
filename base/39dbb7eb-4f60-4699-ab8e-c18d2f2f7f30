{
    "title": "Love Knows No Color Pt. 13",
    "pages": [
        "As we walked away from the courthouse, heads held high, I felt a sense of relief. Rose was being sentenced at this very moment. I'd grabbed Shavonda and split with my dark-skinned beauty because I'd seen enough. All the pain Rose had caused to everybody close to her, and I still got the feeling she didn't get it. Rose didn't get just what a disaster her blind hatred of us had caused. She'd gambled everything on breaking us apart and failed. We were still standing, married, stronger than ever. But everything else around her had crumbled. It was such a waste. So much time, stress and money wasted for what? A pointless exercise in self-destruction?\n\nWe walked up Grant Street to the busway, and got on a bus to Wilkinsburg, where we'd parked the car. We'd left Althea comforting Barbara in the courtroom. I hoped they were okay, but I was so stressed right now, I couldn't even eat. So, we'd passed up our traditional lunch downtown at Villa Reale. We waited at the old train station for the bus, and rode it east. Though it was standing room only, somebody took pity on Shavonda, who was now in her 24th week of pregnancy, and gave up their seat for her. \n\nWe got off at the park n ride, quickly finding the Cruze among the sea of parked cars. Shavonda was on the phone. Calling her mother, no doubt. I really wasn't paying attention to her conversation, being lost in my own world. \n\n\"Mama says Rose got 12 to 20,\" Shavonda told me as she hung up the phone. \"They took her into custody right there. She's gone. Barbara is a mess. Althea's bringing her by the house. She shouldn't be alone.\"\n\nGreat! But what if I wanted to be alone? I needed to calm down. I wasn't angry, just upset. I'd seen enough misery to last me a lifetime. Rose's mother Barbara in tears, faced with the loss of her daughter. Brittany and Ethan losing their mother. Though they didn't know it yet, last weekend was the last one they'd spend with their mother. In 12 years, Brittany would be 18, Ethan 16. It didn't have to be that way. Now we'd have to pick up the pieces.\n\nIt wasn't like we didn't know this day was coming. I'd actually been happy when Rose had been arrested after trashing Shavonda's shop. I'd been ecstatic when family court awarded the kids to us, first on an emergency basis, then permanently. I'd even been relieved when Rose had taken the plea deal. But the sentencing hearing was different. This was playing for keeps. I'd gone in this morning with my queen, intending to ask the court to throw the book at Rose. I'd even had a prepared statement to read, just as Shavonda had. But in the end, Rose was the woman I'd been married to for six years. And try as I might, as I contemplated the misery around me I couldn't ask them for that. In the end, I had asked the court to get Rose some mental health care. I hoped she'd get it, that they'd listened to my plea. In the end, after all we'd been through, I had forgiven Rose.\n\nI headed for the day care to pick up the kids. We were picking them up early today, for neither of us was working. Arriving there, we quickly strapped them into their car seats and headed back across town to our home. Traffic was rather light for midafternoon, we'd beaten the start of rush hour traffic and were home by 3:15. Althea had already arrived with Barbara. Since she had the key, she'd gone in the house and made tea for a distraught Barbara. The kids were glad to see her, and bounded up the steps shouting, \"Grandma!\"\n\nBarbara smiled and gave them each a hug, before pulling Ethan on her knee. Shavonda and I sat on folding wooden chairs she'd had on her porch forever. She put her feet in my lap and I instinctively unstrapped her sandals, rubbing her feet. \n\n\"Don't worry,\" I told Barbara. \"You won't lose the kids. Von and I have discussed this, and we want to transfer Rose's visitation schedule to you. You can have them every other weekend, and you're welcome to visit them here any time.\" That seemed to ease her mind a little. But there was still something bothering her.\n\n\"Rose told me you won't take the kids to visit her,\" Barbara stated. I nodded my head, not sure what to say. \n\n\"He can't,\" Althea defended me. \"State prison rules won't allow victims to visit convicts. He has a good heart, and if he could I'm sure he would.\"\n\n\"I didn't know that,\" Barbara said softly. \"Rose made it sound like you were doing it out of spite.\"\n\n\"You heard the statement I just gave the court,\" I replied. \"Did I sound spiteful to you?\" Barbara shook her head no.\n\nAlthea had the solution. \"He can't, Barbara, but you can. Jason and Von have given you Rose's visitation rights. That means you have full control of the babies when you have them. What's to stop you from taking them to see their mother? You have no restrictions on visiting her.\"\n\n\"I don't know,\" Barbara said sadly. \"I don't know if I can bear to see her locked up like that. In spite of what she did, she's still my daughter.\"\n\n\"Ms. Barbara, that's a decision you have to make,\" Shavonda said respectfully. \"We can't make it for you. But we will be behind you whatever you decide. You can stay here for a few days if it will make you feel better. We won't turn you away. Jason's birthday is tomorrow and we're having a party. We want you to come. And, even though it isn't Rose's week to have them, you can take the kids this weekend, unless you decide to stay here. Whatever you decide, know that our family will be there when you need us.\"\n\nI gently lowered Shavonda's legs to the floor and got up. Walking to the kitchen, I found the bottle of black cherry rum we had left over from the honeymoon. It had sat untouched for two and a half months, because Shavonda couldn't drink during her pregnancy, and I didn't want to touch it without her sharing it. I made a stiff drink for Barbara with the Dr. Pepper we had on hand, and brought it to her.\n\n\"Here,\" I said, handing it to her. \"Maybe this will help.\" I watched her take a sip, as I pulled Shavonda's legs back in my lap. Barbara grimaced just a little when she realized how strong I'd made her drink, but she didn't put it down. \"Drink up. There's more where that came from. And you're not driving home tonight. You can crash on the couch.\"\n\nWe spent the rest of the evening on the porch, comforting her. Althea insisted on getting up around six, and cooking dinner for us. Barbara alternated between lucid conversation, and uncontrollable bouts of tears. Eventually, her speech started to slur. I cut her off then. A hangover tomorrow was the last thing she needed.\n\nWhen Althea called us into the kitchen, I put my arm under Barbara's and supported her as I walked her to the kitchen. Althea had fried us some pork chops, with greens and corn. Now I knew where Shavonda had learned how to cook. The food was delicious. Barbara picked at hers for a while, but eventually ate. It was heartbreaking to watch her. After dinner, we let her pass out on the couch. With food on her stomach, I'd let her have some more rum.\n\nAlthea stayed until about 10 pm. She wanted to make sure everybody was okay. Her main concern had been Barbara, but she also knew how hard this had been on Shavonda and especially me. \"Jason, Von might not agree with me, but what you did in court impressed the hell out of me. Not too many victims are concerned about their attacker's well-being. It took a big heart to do what you did. I'm proud of you.\"\n\n\"I don't know,\" I said slowly, choosing my words. \"I just look at it all and see the wasted life. I see that she hurt the very people she said she cared about the most. I also saw that she still didn't understand that. And I hope that with help she can begin to see what she did and why it was wrong. I don't hate her, just what she did.\"\n\n\"I'm still mad at her,\" Shavonda said. \"I know you meant well, Jason. But I'm convinced she is an evil woman, and I don't think she'll change. I know I'm supposed to forgive her, and eventually I will. But I'm not there yet. The wounds are still open.\"\n\n\"You at least have to give her a chance, baby,\" Althea said. \"Where she's at she can't hurt you. Jason's right. Maybe with help, she'll see what she did was wrong, and she'll be able to get past it and become a better person. Maybe she'll find Jesus in there.\" Althea's phone rang. \"Hello,\" she said. Pause. \"I'm at Von's. Yes, they're okay. I'll be home in a few minutes.\" She turned to us, hanging up the phone. \"Your father wants me to come home. I have to go. I'll see y'all tomorrow for the party.\" We watched her sway her way down the steps to her car. Damned if she didn't walk like Shavonda. I'd never noticed it before. Wicked hips must be a family thing.\n\nWe sat on the porch for a while longer, listening to the crickets. I held Shavonda close telling her, \"It's over now.\" She squeezed me tighter, and I heard a muffled sob. My queen was letting it all out, all the pent-up anger and frustration of the past year. The endless court hearings, the financial hits we'd taken from legal fees, the nagging feeling in the back of our minds that Rose would go back on the deal and we'd face charges. It was all over now. We finally had the clouds that were hanging over our relationship dissipate. \n\nExhausted, we trudged our way upstairs and helped each other out of our clothes. I held her close, spoon style, as we fell asleep. \n\nAlthea arrived late the next morning. She helped Shavonda get set up for the party. They'd planned this well in advance, and as the guests began to arrive, they made the run to Salvatore's for pizza. Barbara had finally awoken, and she seemed in better spirits, if a little numb. The guests kept her busy, talking to her, offering their condolences. They really helped, and by the end of the night, Barbara was well enough to face the world.\n\nSome weeks earlier, we had bought the kids a wooden swing set and play area, which we'd set up in the backyard near the bird feeders. They played in the play area with Patty's kids, who had come over with their mother for the party. \n\nIn addition to the pizza, the ladies had gotten me a cake from Oakmont Bakery, which they'd picked up a couple of days before and hidden in the downstairs refrigerator. I hadn't noticed it, even though we'd had train night down there, because Shavonda had made sure to get me whatever I wanted to drink from the refrigerator, so I wouldn't open the door and see the cake.\n\nMy queen and her mother had gotten them to decorate the cake in a railroad theme. It was so beautiful I almost hated to cut it. But it was chocolate cake, and I'd been brought up that it was a sin to waste food. Especially chocolate cake. They had put 32 candles on it, and when I went to blow them out, one kept relighting itself while everybody laughed. I was going to get Shavonda good for that. After all, I knew where her sweet spot was.\n\nWhen we opened the gifts, Althea and James handed me a card. \"Happy Birthday, Jason,\" James said. I opened the card. Inside was a check for $10k. \"This is so you can add an extension on the house. You'll need more room for your growing family. Your parents are matching this amount. Consider it a combination birthday and wedding present.\"\n\nSure enough, Shavonda brought me the card my parents had sent. Inside was another check for $10k, marked home improvement in the memo section. There was also a newspaper clipping from the Monroe County Times. \"Von,\" I said. \"Would you look at this?\" I read the clipping. \"Jenkins-Waite. On May 18, Shavonda Marie Jenkins of Pittsburgh, Pa married Jefferson Scott Waite, also of Pittsburgh, PA in that city. Mr. Waite is the son of Ed and Julia Waite of Waiteville. The newlyweds will continue to live in Pittsburgh.\"\n\n\"Our wedding notice,\" Shavonda said. \"How nice of them.\"\n\n\"Down there, weddings and funerals are news. Up here they get lost in the shuffle,\" I explained to everybody.\n\nThere were two huge wrapped boxes. One was long and relatively flat, the other was almost the size of a small cabinet. \"These two are from me,\" Shavonda said, with a gleam in her eye. \"I think you'll like them.\"\n\nI opened the flat one first. I couldn't believe what I saw on the box. Shavonda had bought me an electric bass guitar. Kissing her, I turned to the other present. Peeling off the paper, I found the amp to go with the guitar. \"Oh, yeah,\" I said with an evil laugh. \"We gonna keep the neighbors up half the night.\"\n\n\"Maybe next time we go to the farm, we can fit these in the jeep and blow your cousins away,\" Shavonda laughed. \"At the very least, you'll be able to practice getting your finger movements right.\"\n\nLater, after the kids left for the weekend with Barbara, we headed into the bedroom. Shavonda said, \"Now for your special birthday present. Unwrap me baby. Hope you're not sleepy, because I'm having you all night long.\" I pulled her maternity dress over her head, gazing upon her naked body. She'd secretly removed her bra and panties during the party. I noticed her belly button was starting to pop out. I wondered if it was due to the baby growing inside her slowly expanding belly. It looked sexy. \n\nShe sat on the bed and pulled my pants down. I stood in front of her as she took me deep into her mouth. Her soft brown lips felt so good on my shaft, working their way up and down its swollen length. \"Don't hold back,\" she said as I fondled her tit, squeezing it softly as I ran my thumb lightly over her nipple. Just to make her point, she stroked me with her hand as her lips moved over the head of my penis. In no time at all, she had me on the edge, pulling me over with her lips. My toes curled in pleasure as I groaned, my muscles clenched and spasmed, releasing my hot load into her waiting mouth. She watched my face as she sucked my orgasm from me, milking me. My legs turned rubbery as my energy drained out of me with each jet of my sperm. Popping me from her mouth, she pulled me onto the bed and rolled me onto my back. \n\n\"I had to get the first one out of the way,\" Shavonda said as she kissed me, her tongue finding mine. \"I love watching you when you come. You make the cutest face. And you taste so damn good.\" She kissed me again. \"Tonight, I want you to last. I want you to eat me now. I know that gets you hard. And I want you hard as soon as possible.\" She straddled my face, rubbing herself back and forth over my mouth and tongue. She rose up off me, and turned around, so she could straddle me while she licked me hard again. I loved this position. I gazed at her moist chocolate folds as I pulled her inner lips apart to reveal the pink within. I licked her, savoring the taste of her juices. \n\nShe moaned in pleasure, the vibrations bringing pleasure to my still soft member. I licked her deeper as she moaned again and bucked back against my seeking tongue. I had her scent now, and between it and her wicked tongue I was rapidly inflating again. I could feel her swollen belly pressed hard against my chest as she writhed in pleasure against my tongue, and wondered how much longer we'd be able to do this. I was sure going to miss sixty-nine. She lifted her head off my now erect manhood as she dissolved in orgasm, flooding me with her sticky juices. She rode out her orgasm on my willing face, then loosened my hands from her hips and climbed off me.\n\n\"What?\" I asked, \"Did I do something wrong?\"\n\n\"No,\" Shavonda sighed, \"You've done everything too well. But if I'm going to give you your birthday gift, I have to stop.\" She crawled up next to me on hands and knees, and her mouth hovered over mine. \"Mmmmm,\" she purred, \"I love a man who tastes like pussy.\" Her lips met mine and we kissed deeply, her tongue exploring my mouth excitedly. \"Get up, birthday boy,\" she ordered. I complied, willingly. Shavonda put her face down in the pillows, ass in the air, wiggling it at me. She grabbed a tube of anal lube from the nightstand drawer, and reached back for me. \n\n\"Let me get you ready,\" she whispered as she spread lube in the palm of her hand and stroked my length. \"I've been thinking about this all day and it's driving me wild.\" She squirted more lube on her fingers, and slipped them in her ass crack. \"I really enjoyed the last time we did this, before the wedding. Jason, make love to my ass.\" She guided my hardness to her puckered opening, placing the head just outside. \"Just let me do the work.\" Shavonda eased back onto me, her opening giving resistance before finally opening to accept me. She stopped, getting accustomed to my girth within her. \n\nI let her hold me like that for a minute, before I felt her lean forward, then drive her ass back onto me again, impaling herself deeper on my spear. Her hand found her clit, and she rubbed furiously. She did this several times more, driving me deeper inside her most private place, until I was buried up to my balls. Stopping, she let herself adjust to my full length. I felt her take several deep breaths as the relaxed around me. Even with the lube, she was tight and it took some effort to penetrate her this deep.\n\nShavonda rubbed her clit faster, bringing herself to an orgasm. It was weird to feel this from the other side, as her muscles clenched me and she pushed back into me hard. I could go no deeper. I felt her shudder with a growl as her passion swept her away. I stayed still as the contractions gradually lessened in force and she fell into the afterglow. My queen was totally relaxed now. \"Ok, Jason,\" she said, \"Now fuck me good.\"\n\nI started moving inside her tight hole, the lube easing my way. We'd some anal before, several times. But, due to my size, I had been afraid of hurting her. The last time we'd done it, she finally seemed to really enjoy herself. But this time, she craved it. Shavonda had found the secret, and it was no longer painful for her. She met my thrusts with the same fervor as if I was in her pussy. Her hand was back fingering her clit. I hadn't noticed, but she'd put her finger vibrator on, and was buzzing her sensitive nub with it. I could feel its vibrations through her walls, and they were making me crazy with lust. As another orgasm wracked her body, she arched back into me, her muscles trying to draw me in deeper. \"God, YES Jason!\" she cried, \"Do me just like that!\" I was pumping her hard now, and she just kept coming and coming. I felt the old familiar tensing as deep down the geyser got ready to erupt. \"Jason, baby are you close?\" came her frantic cry, \"Come in me baby. Flood my ass with your nut!\" I gave up on trying to hold back and let the sensations take over. Pumping hard, I exploded inside her as jet after jet shot out of my throbbing dick deep into her bowels. Spent, I collapsed on the bed, legs rubbery, pulling my wife on her side as I went. We were still connected, and she was not ready to let go just yet. \n\nWe lay there, spoon style, panting. \"That. Was. Amazing,\" Shavonda gasped. She lay there and caught her breath before she continued. \"I don't know why, I just had the urge to do that. When we did anal before the wedding, it felt good to me. Now I know the secret. I came hard this time.\"\n\nWe lay there on our sides, as some semblance of muscle control slowly returned. I softened and slipped out of her tight hole. \n\n\"I enjoyed it too, boo,\" I said. \"I never got the feeling I was hurting you this time. That made it special for me.\" I eased up off the bed, offering my hand. \"Let's go clean up.\"\n\nWe walked to the shower. The lather felt good over our skin, and as usual, we spent a lot of time soaping up our sensitive spots. After the shower, we dried off and headed back to the bedroom. We made love two more times, slowly, deeply, cuddling in between. It was getting light out, when we finally drifted off to sleep. Happy birthday to me.\n\nSaturday, we went to a costume store. The Ren Fests were coming up. The first was next weekend. Obviously, Shavonda wasn't going to fit in her regalia. She found a peasant dress she liked, and I bought her two of them. ",
        "Our finances had gotten much better since the marriage. We were no longer maintaining two houses. Brian and Tamika were renting my place, covering the mortgage. In addition, they were paying the utility bills. All told, that added about $1000 a month to our budget. We'd used the first month's savings and what was left over from the gift cards our parents had given us for the honeymoon to pay off the balance on my Liberty, which we now owned free and clear. Add another $350 a month to the budget. \n\nBut, we were about to take a hit. Since Rose was now in prison, the child support payments were stopping. In addition, we'd now have to pay for day care. We discussed the situation with Althea, who volunteered to sit the kids when Shavonda was working. Soon, they'd both be in school, and Shavonda had enrolled them in the local school. Ethan would be starting kindergarten this year, and Brittany would be in first grade. When the time came, Shavonda would get them off to school in the morning, and Althea would come over to the house to be there when the school bus dropped Ethan off around lunch time. She'd be there when the bus dropped Brittany off later in the afternoon, and would leave when either Shavonda or I returned home from work. The morning of my birthday, Shavonda had called the day care to inform them that we would be pulling the kids out when school started.\n\nAs always, Barbara would be welcome to come over and visit the kids whenever she wanted. We informed her of the new arrangements. We hoped that increased contact with the grandkids would help compensate for the loss of her daughter. Shavonda had come to love Barbara, and made it a point to invite her to any family functions. \n\nOn Sunday, I took the week 24 photos of Shavonda's pregnancy. She was growing, having put on about 15 pounds since the wedding. She still felt fat, but I told her it was all baby weight, and that it made her even more beautiful to me. I also reminded her that we were now past the point of viability, and that even if she delivered today, the baby would survive. That really put a smile on her face. I took a photo of her standing there, naked with her hands holding baby bump lovingly, with the huge grin on her face and sparkling eyes. I also posed her for the same photo clothed. Even she commented on how beautiful she was. \n\nThe next week, we looked at contractors. We had $30k to work with, the two $10k checks, and the $10k we'd gotten from the settlement from the Ethan's daycare. Ethan still had his money in a trust fund, we had set it up so that we couldn't touch his money until he went to college. \n\nWhat we wanted to do was add two bedrooms to the house, which would make it into an L shape and almost double its size. There would be an excavated basement underneath, and we could put in a game room as well as move Shavonda's office space down there. We put the job out for bid, to carefully selected contractors. We didn't let anybody without a stellar reputation bid on the job, having heard horror stories about rip-off contractors. The bid we selected came in at $44k, with half due now, and half due upon completion of the job, which was expected to take six weeks. Reluctantly, we decided to get a home improvement loan on the house for the remaining balance. I joked to Shavonda about when you go white your credit gets right. She laughed, then said, \"Boy my credit was right before I met you.\" \n\nThat week, at train night, Ziggy mentioned that they'd finally gotten Officer Shoemacher. They'd tried setting him up with various undercover women cops as bait, but he didn't bite. Then, they worked a cop who looked a little like Shavonda, and he took the bait. They were building a case against him that would stick.\n\nAbout a week later, the DA called, asking for Shavonda's testimony in the case. \"Of all the women who have accused him of attempted rape, Shavonda has the most impeccable record. She's a well-regarded member of the business community, whereas most of the other women were streetwalkers. Shavonda would make a credible witness. \n\nShavonda told him, \"Look, I mean no disrespect, but I am having a baby in a couple months. I don't think I want the stress of the trial to harm the baby.\" She agreed to contact the DA after the pregnancy.\n\nWe made some changes to how we did the Ren fests. Shavonda no longer helped carry the cases from the company van. Tamika and I did all the work ourselves. Shavonda's only duty was to staff the booth. I didn't want her straining herself. Brian, as he had the past summer, worked the festivals as a food vendor and wasn't available during the day. He did, however, share Tamika's motel room and they hung out with us in the evenings.\n\nWhen we did the main Ren fest, the one that lasted six weekends, we stayed at the same motel across the street from the bar where Darren and Minnie hosted karaoke. Shavonda still wanted to sing, so on the weekends we didn't have the kids I'd accompany her to the bar while she sang her heart out. Some people remembered her from before our wedding, when nobody knew she was pregnant. They congratulated us on the marriage and the baby. Shavonda still ate the bar food, which was very good. But we made sure she drank only non-alcoholic beverages. \n\nThe first week, Shavonda's first song choice was 'Giving him something he can feel.' As she started into the song and reached the chorus, somebody in the back of the bar shouted, \"That's why you're in the condition you're in.\"\n\nShavonda, mic in hand, walked over to the heckler. \"What was that?\" she asked. Darren had paused the song.\n\n\"I said, that's why you're in the condition you're in,\" an embarrassed older white man replied.\n\n\"Yes, it is,\" Shavonda replied, not missing a beat. \"And it was gooooood.\" The crowd laughed. She wandered back over to me and Darren restarted the song. She sang in her best Aretha imitation, and when the song was over, introduced me. \"This is my husband, Jason, who inspires me to sing these songs. I gave him something he could feel, and all I got was this big belly.\" The crowd laughed again.\n\nAnd so the night went. The heckler had released the playful side in Shavonda, which I hadn't really seen in a while. \n\nBy this point, she was well into her third trimester, and the pregnancy was starting to take a toll on her. She complained of aching back and hips. The baby was active as well, and now when it kicked, you could see her belly move. Labor Day weekend, she was at 27 weeks, and things were beginning to slow down for us. Up until this point, Shavonda's pregnancy had increased our already active sex life. I loved how easy it was to make her come multiple times, seeing hearing and feeling her in the throes of passion ignited something primal in me. But now, fatigue and pain were starting to put a damper on things. \n\nWe'd had to adjust our positions to compensate. Gone was any position where she lay on her back. Instead, we did doggy style, or she rode me. I didn't mind, either position gave me one helluva view of my fertile goddess. I enjoyed the view either way. Doggie, I got to watch myself sliding deep into her. Her on top, I got to watch those luscious D cups bounce and sway to our rhythm. I enjoyed her larger breasts. If I thought they were perfect before, they were truly great now. \n\nShavonda had never really slept on her back, preferring a semi fetal position. I always liked this because it allowed me to curl up into her while we slept. I enjoyed feeling her push back into me in the night. But now, she'd started sleeping with a pillow between her knees. She claimed it helped to ease the soreness in her legs. All I know was the pillow parted her thighs enough for me to easily slip my hand between her legs as we slept. If she was going to grind her booty into me and make me hard during the night, I was going to mess with hers as well. \n\nThe week before Labor Day, the contractor started on the addition to the house. First, they dug a huge hole in the backyard adjacent to the existing house, then poured a concrete footer at the same level as the existing basement floor. After that cured, they laid out the foundation in cement blocks, and set the doorways for the outside entry, and the doorway between the existing house and the extension. Soon after, they had the walls and roof up, and the extension was protected from the elements. The remaining four weeks was spent putting up the floors and walls, adding the plumbing for the added bathroom, and doing the electrical work. The building inspectors signed off on the new construction, and by the first week of October, the extension was ready. \n\nShavonda was at week 32 in her pregnancy, and her belly was getting huge. I told her how sexy she was, how I loved the way she looked knowing she was bulging with our baby. \n\nWe spent the next weekend shopping for new beds, for the kids. I moved our bed into the new master bedroom at the rear of the extension, just beyond the new bathroom. The new bedroom was a bit larger than the old one, which we equipped with a brand-new queen bed. It would make a good guest room for when family visited. We set up the new kids' beds in the new second bedroom in the extension. We also bought a crib for the baby. Eventually, we'd give the baby a room to itself. But to start, we wanted the baby close by. \n\nThe bathroom was amazing. We'd had them put in an extra-large tub/shower, so we had room to move when we resumed our bubble baths. It also had a private entry into the master bedroom, so we didn't have to walk naked in the hall.\n\nThe Ren fests had been good for business, so much so that we were running out of stock to sell in the stores. Shavonda had thought ahead, and the photos of the jewelry that were on the website were saved. Usually, when an item sold, we took the photo down. Now, we'd leave them up, marked special order. If somebody wanted one of those items, we could make another one to order. The special orders kept us in business when we ran out of items to display in the stores. \n\nThe photos were also selling reasonably well. By now, we'd gotten a reputation for being a place where you could buy some different looking photos. And we now custom framed them at the Ellsworth store. My evenings after work were sent doing solder work. I tried to put in at least an hour every day. With the booth venting all the fumes outside, Shavonda was able to join me in her garage workshop while I did this work. I enjoyed her company, and we'd taken to pulling up albums at random on the iPod, and playing them all the way through. Every night we'd pick a different band to listen to, alternating choices between ourselves. It was hard to believe after well over a year of listening to each other's music, we'd still not heard it all. The iPods each contained almost 10,000 individual songs. \n\nAfter I was done working in the workshop, we'd head upstairs where we often spent time reading books out loud. The doctors had told Shavonda that the baby liked to listen to the parents' voices, and we tried to pick short stories or poetry that didn't take a long time to read. Often, I would read with the book next to Shavonda's belly, close to the baby. During these times, we often watched the baby kick. I hoped that, in addition to strengthening our marital bond, we were also bonding with the baby.\n\nOur final festival before the baby came was the Bedford Fall Festival in mid-October. Like we did the previous year, we'd driven over the mountains, with Brian and Tamika following us, though they knew the way by now. When we checked in, the Indian lady, who'd last seen us on our honeymoon, looked at Shavonda's belly and said in her heavy accent, \"Didn't take you long!\" She fawned over Shavonda's belly when she saw the baby kick, and her daughter, about Tamika's age, also felt the baby. They were happy for us.\n\nThe first night when we were there, we were playing Uno on the bed when Brian dropped one of the cards, on purpose. Tamika volunteered to pick it up for him, and leaned over the bed in search of it. When she got back up, Brian had an open ring box in plain view. \"Tamika, will you marry me?\" he asked.\n\n\"Yes! Yes!\" whimpered a tearful Tamika. Brian slipped the ring on her finger, and she grabbed him and pulled him down on the bed for a long, passionate kiss. Uno cards scattered everywhere. So much for the game. We celebrated with a bottle of wine they'd brought. Even Shavonda had a glass, saying, \"Just one drink won't hurt the baby. This is way too special not to celebrate.\"\n\nAfter we'd finished the bottle, they retired to their room next door, and we listened to them making love while I rubbed Shavonda's back. They were so loud we couldn't help but listen. Later, Brian told me it was the first time Tamika had let him in without a condom, and that he hoped he'd put a baby in her. I told him to do what we did. Just keep flooding her womb with seed until something took. He laughed, and said, \"We intend to.\"\n\nThe festival was busy, and we'd pretty much sold out of whatever stock we had. Shavonda, being the smart businesswoman she was, had marked some of the jewelry 'display sample, may be custom ordered' so that even though we lacked product to sell, we could still take orders and mail out the items when we'd completed them. We even sold the display items, with the provision that they couldn't be picked up until the end of the festival. \n\nThe second evening, the four of us went to a movie after the festival closed for the day. Dinner consisted of subs from Sheetz, the only edible thing open that late. I also got Shavonda a pint of fudge ripple. She still had her cravings. That night, after a loving shower than ended up with me inside her, I led her to the bed where I feasted on her toes. It had been awhile since we'd done that, and I'm sure Shavonda's moans kept Tamika and Brian's attention through the walls. Especially after I left her toes and licked the cream from between Shavonda's legs. I never got tired of her taste, either before or after sex.\n\nIn the morning, before we turned in our keys and went for breakfast and the festival, I took the week 34 pictures of Shavonda. We were in the home stretch now, and Shavonda was occasionally feeling contractions. By this point, she'd picked up about 25 pounds, and become pleasingly plump. \n\nArriving home from the festival, we got a call from Tamika. \"You got a letter came to the house. I'm gonna bring it over. I think you two should read it right away.\"\n\nThe letter turned out to be from Rose, addressed to Mr. and Mrs. Jason Waite. It had come to Tamika's house because that was the only address of mine she knew. We still hadn't let her know where Shavonda's house was.\n\nIt read:\n\nDear Jason and Shavonda,\n\nI still do not approve of your relationship and marriage. But I wanted to thank you for taking good care of Brittany and Ethan while I am away. Mother brought them to see me today, and she tells me you have built an addition to your house so that they can have their own rooms. She also tells me that the reason you didn't bring the children to see me was that the DOC won't allow you to visit me. I understand. The fact that you willingly let Mother bring them to me means a lot.\n\nMother and the children both tell me that Shavonda takes very good care of the children, loving them like they were her own. I am glad that if they can't have me, at least they are loved by their new family.\n\nThe prison has me going to group therapy sessions, and as part of this I am reaching out to tell you I appreciate what you are doing on the childrens' behalf.\n\nSincerely,\n\nRose Meridith Waite\n\nWe looked at the letter in shock. Was this Rose's way of showing remorse?\n\nShavonda insisted on hand writing a response, which she handed to me to read before sealing it in an envelope:\n\nDear Rose,\n\nThank you for your letter. I am writing this letter with Jason's consent and approval. \n\nIt means a lot to me that you took the time to write me, especially since I know you can't stand me. \n\nThe Lord's prayer in part says, \"Forgive us our sins as we forgive those who sin against us.\" You have committed many sins against us, trying to destroy us. We are still standing, stronger than ever. The past is the past. I am willing to forgive you and let this matter go. I am doing this because I need to move on. I can't let resentment for what you did to us rule my life. So, I have decided to forgive you. I hope one day the good Lord will see his way clear to soften your heart, so that you won't let hatred continue to destroy your life. \n\nSincerely,\n\nShavonda Marie Waite.\n\nIt was such a beautiful letter, and I was very proud of my ebony queen for writing it. I mailed it the next morning. \n\nThe final weeks of the pregnancy flew by. Sundays, when we had them, we took the kids to church. The AME congregation had accepted them with love, and it was a good spiritual home for all of us. \n\nThe last weekend in October, I took a 4-day weekend and we made the long trip to my parents' farm. Edie made the trip with us, longing to see Kenny again. Evidently, they had been getting together once a month or so, at a location midway between Pittsburgh and his home in Western Virginia, just a stone's throw from my parents. The leaves were still in brilliant color when we arrived. In addition to my parents and Grandma, Kenny was on the front porch awaiting our arrival. He greeted Edie with a hug and kiss like they were long term lovers. They spent the evening with us, then he took her home to his place. They stopped by to visit every day.\n\nWe ribbed Kenny about licking the chocolate tootsie pop, and he laughed. He was as happy as I'd seen him in a long while. \"See what you started,\" he said. \"You had to bring Von here and disrupt things. Now I am in love with a woman who lives 300 miles away, and I don't know how much more of this I can take. One of us is going to have to move, and soon.\"\n\nOur visit went well. Everybody pampered Shavonda. She barely had to do anything for herself all weekend. In the mornings, we sat in the kitchen chairs while Mom made breakfast, Shavonda's feet in my lap. Everything felt so right. We finally had peace in our lives in both places. Shavonda passed on the invitation from her parents for my family to join them for Thanksgiving dinner. Hopefully, by that time the baby would be here.\n\nShavonda seemed increasingly weary and forgetful. Mom said that was normal. \"Just keep doing what you're doing and she'll be fine,\" she said. \"Remember, her body is about to be turned inside out. The baby is stretching everything she has, and to be honest, those changes hurt. Just hold her. Tell her you love her. Tell her how beautiful she is and how proud of her you are. Rub her wherever she hurts, and above all, let her tell you what she needs. If she needs sleep, let her rest. If she needs love, give it to her. But you already do this. I can tell by the way you two interact that she's having her needs met.\"\n\nTo Shavonda, she said, \"I know you're sore. But do what the doctor tells you, even if you're too tired. It will help you and the baby. Remember, both of you, it isn't about you anymore. It's all about the baby from here on in. Von, you only have a couple of weeks to go. It looks like you've done a good job so far. Just keep up what you're doing, and try not to get irritated by the little things. Above all, try not to be afraid. You can do this. There is a blessing at the end of it all, but you have to endure some misery to get there. Just remember, seeing the baby for the first time will make it all worth it.\"\n\nMonday morning, Kenny brought Edie back, and we all had breakfast together one last time before hitting the road for Pittsburgh. On the way back, Edie and Shavonda had the girl talk. They talked about Kenny and me, comparing notes. They talked like I wasn't there. Obviously, Edie was in love. She wished she could have stayed longer, but she had to leave. We all had jobs to get back to. As happy as the conversation was, there was an air of sadness that hung in the air.",
        "The next weekend, the family threw a baby shower for Shavonda in the church hall. We received so many gifts, there really wasn't much else to buy for the baby. We'd already bought the big stuff. The gifts took care of things like clothing and diapers for the foreseeable future. It was all becoming more real by the day now. The house was filled with signs of the impending arrival. Now it was just a waiting game.\n\nWe celebrated Shavonda's 32nd birthday in mid-November, at week 37, with family and friends. Even Barbara was invited. Unbelievably, Rose had replied to Shavonda's letter with one of her own, that she had given to Barbara on her recent visit. Shavonda read the letter out loud to the guests.\n\n\"Dear Shavonda,\n\nMother tells me it's your birthday. I just wanted to wish you a happy birthday.\" \n\n\"I really appreciated your letter. I don't deserve your forgiveness. After all I put you and Jason through, you had every right to hate me. And you did. I could see it in your eyes, in the way you talked around me, in your statement at my sentencing hearing. I couldn't blame you for that, but I did. I am happy that you've been able to move past that and find peace in your heart. Maybe someday I can do the same. I'm working toward that.\"\n\n\"I understand the baby is almost due. May your baby be healthy and happy. And may the baby bring you as much joy and happiness as mine have brought me. I am a bit jealous that Jason will be there for you during the birth. He wasn't for me. He was across the country, trying to make a way for us. You have a good man there. I didn't realize how good until I lost him. That was my fault. There are many things in my life I've come to regret. Appreciating what I had when I had it was one of the biggest ones.\"\n\n\"Good luck,\n\nRose Meridith Waite\"\n\nIt was touching. If Rose had started down the path she was now taking before she let Shavonda get to her, we'd have never gone through the pain and heartache we had endured. But we'd come through it all stronger. It was Rose's decision to strike out against Shavonda, without ever having talked to her, without trying to at least get to know her. It was ironic that the first conversation the two of them had was when Shavonda had kicked her ass in the woods. It was also ironic that it took the loss of everything Rose valued to bring about even this slight change of heart. But at least she was making progress.\n\nFor her birthday, I had gotten her a keyboard and amp, so she could join me in the game room as I practiced my bass guitar. Unfortunately, we didn't get a chance to set it up before she went into labor.\n\nShavonda had visited the doctor a few days previous, and told me he'd advised she do a perineal massage. She told me she wanted me to do this for her every day. She wanted me to put my thumbs in her vagina, and gently pull and massage the lower part, pulling it downward toward her butt. The idea was to loosen her up for childbirth. But to be honest, she'd wanted me to do this because she knew how much I loved playing with her. After all, when she slept with a pillow between her legs, my hand often rested there, gently stroking her lips. The first time we attempted the massage, we ended up making love after I'd eaten her to orgasm. \n\nThe perineal massage became part of our routine. Often, we put the kids in their room, and she lay on the bed, ass propped up with pillows, naked except for the bra she now wore most of the time. Her breasts were becoming full of pre-milk, and her nipples leaked now. It was another sign we were close to delivery. Often, she read poetry aloud to the baby while we were doing the massage, and I always tried to give her some additional stimulation just to hear the catch in her voice as I hit her sweet spot. One night, she rolled over on her side, saying, \"Damn you boy. I can't take this anymore.\" She grabbed me by the rod, pulling me up to her mouth, where she proceeded to give me some of the best head I ever had. That was saying something, because Shavonda knew how to please me. But something about the urgency with which she did it that night made it even more special. \n\nShavonda often had insomnia, and would lay there cuddled up to me, sleepless, while I got a good night's sleep. She'd go to work the next day, tired, and often fall asleep in a recliner we'd put in the back room while the other employees minded the store. When you own the place, you can do things like that. Nobody complained, because they knew she made the effort to come in every day no matter how bad she was feeling. Often, when she had insomnia, she would still be awake when I had to get up for work. I had some early starts certain days, and getting up as early as 2am was routine. She often joined me in the shower in the mornings.\n\nThe Thursday before Thanksgiving was one of those early days. Shavonda had joined me in the shower, and as we soaped each other up, she seemed to be really responsive to my touch. So, when I washed her private areas, I rubbed her clit until she came. I loved the way she made those sexy little growls and squeals as she stiffened her back and pushed back into me. As she came down from her peak, her legs were shaking, and I had to grab her by the hips to steady her. That was all it took.\n\nShavonda looked at me with lust crazed eyes. She kissed me deeply, driving her tongue deep into my mouth and banishing my own as hers invaded and ravished me. There was a passionate urgency that I'd seen before, but this time was different. It was like she knew something was about to happen. Breaking our kiss, she whispered huskily, \"Take me, Jason. It may be the last time we do this for a while.\" She removed my hands from her hips, and turned around with her back to me. Bending over, she grabbed my member and guided me into her little slice of heaven. I remember noticing she seemed a bit looser than she'd been. The perineal massages must have been working. But she tightened up around me as I thrust in, bucking her hips back into me and impaling herself as deep as I would go. She was like a wildcat, riding me as she shook with another orgasm. \n\nI wondered what had gotten into her, guessing it had something to do with pregnancy hormones. Whatever it was, I was enjoying the ride. All I could do was hold on for dear life as she worked her ass back into my pelvis, driving me deep with every stroke. I couldn't even meet her thrusts, as she'd backed me against the shower wall. I had no room to pull back. I was completely at her mercy as the warm water cascaded over us. Her pussy walls clutched and squeezed as she worked back into me. \"Come for me, baby,\" she moaned. My hands clutched the side of her hips as she rode, squeezing her with increasing firmness as I felt my own peak building. \"Jason, boo, mama wants to feel you come. Drive it deep, boo. Give it to me.\" \n\nShavonda knew I loved it when she talked dirty to me. And she also knew I was close. She crashed her hips back into me one last time as I help her hips tight. When she pulled forward, I held her hips to me as I let go deep inside her. \"Mmmmm, that's it baby,\" she moaned as she felt me shoot spurt after spurt of my sticky juice deep inside her. \n\nWe dried each other off, then staggered to the bed where we lay for a little while. Shavonda had curled up on her side and gone to sleep, our juices seeping out of her along the bottom of her ass cheek, pearly white against her sexy chocolate skin. I quickly dressed and left for work, kissing her on the lips as I left.\n\nShe went to work that day at the normal time, but by lunchtime she'd started having contractions. Shortly after noon, her water broke. One of the employees drove her to Magee Hospital, where they admitted her to the maternity ward.\n\nI was in State College, working my way to my last stop, when my phone blew up. There were about 5 calls in the space of about ten minutes. Arriving at my stop in Bellefonte, I quickly checked my phone. 3 calls from Shavonda, one from Althea, and one from Nick, my boss. I decided to call Nick first. \n\n\"Where are you at?\" he asked. \"Get your ass back here. Your wife's having a baby!\"\n\nI let them unload me, then closed the truck back up and called Shavonda. \"Where you at?\" she asked. I told her. \"Well get back here as soon as you can. The baby's coming.\" I heard her scream out in pain as a contraction gripped her. \"Boy get your ass back here! I'm not doing this alone!\"\n\nNormally, I enjoyed the long 4-hour drive back to Leetsdale. But today, it seemed like the longest drive ever. It seemed like on every hill, I was boxed in by fully loaded trucks. With me being empty, I could normally pass them all up, as long as one loaded truck didn't try to pass another, tying up the left lane for a mile or more. Coming up the mountain out of Milesburg, I was lucky to make 40 because of all the trucks. It was the same way on the mountain out of Clearfield. Finally, with the two big mountains out of the way, I could make some time. I arrived back in Leetsdale about 6:30 pm and quickly parked the truck. Turning my waybills in to Nick, I told him, \"Don't expect me in tomorrow. It's going to be a long night.\" \n\nI fought rush hour traffic to Oakland, where the hospital was located. Luckily, I had stashed a change of clothes in the car a couple weeks earlier, and as I entered the hospital I had the duffel bag slung over my shoulder. In the other hand, I had my camera bag, which I usually kept in the Jeep. Security looked through the bags, then let me go up to the room. Security looked up Shavonda's name and gave me the room number of her birthing suite.\n\nWhen I walked in the room, Shavonda was sitting up in bed, legs spread, with Althea seated in a chair beside her, holding her hand. \"It's about time,\" she said crossly. Then her tone softened. \"I didn't mean that, boo. I'm in a lot of pain right now. I've been praying you'd get here in time.\"\n\n\"How far along are you?\" I asked. \n\n\"5 centimeters,\" she said. \"That was the last time they checked about an hour ago. I'm about halfway dilated.\" I kissed her and took her hand. \"Baby, maybe you'd better wash up. We'll keep the nurses busy.\"\n\nI looked at Althea, who nodded. \"We got this,\" she said with a smile. I entered the bathroom and quickly washed up in the sink, giving myself a quick shave as well. I changed into the clean clothes and put the dirty ones in the duffel bag. A quick spray of Dark Temptation, and I was ready for duty.\n\nI took over Althea's seat, holding Shavonda's hand as another contraction hit. She squeezed my hand hard enough to hurt, but the pain was a small sacrifice compared to what she was going through. She gritted her teeth as her body slowly pushed the baby just a little bit more. \n\nLooking around the room, I noticed Althea had brought our cd player and one of the iPods. Giles Reaves filled the air. I smiled. I had introduced her to his soothing brand of new age music. Shavonda, being a lover of smooth jazz, had instantly recognized his music for what it was, a masterpiece of composition. It flattered me that, of all the music we both had, she chose this to relax to while she gave birth. I thought it was a great choice.\n\nThe rest of the evening passed quicker than I had anticipated. Althea retired to the waiting room where James was waiting. Every so often, she'd wander in to check on Shavonda's progress. In between contractions, I read poetry to Shavonda, feeding her ice chips, trying to keep her mind off the pain she was enduring. But the contractions were coming more frequently now. On one she screamed at me. \"You did this to me!\" I couldn't help but smile a little. We'd often joked about this very thing, how clich\u00e9 it was. And how she swore she'd never say that to me in the birthing suite.\n\nA bit after midnight, the doctor came in to check on Shavonda. \"It looks like you're 10 centimeters now. It won't be long until the baby is here,\" he said cheerfully.\n\n\"Just get that thing out of me,\" Shavonda hissed, her face contorted in pain. I just kept quiet.\n\n\"Well, you're coming along just fine,\" the doctor said. \"I'll be here until you deliver. Let me know when you feel the urge to push.\"\n\nWe waited for the next set of contractions. Shavonda didn't feel the urge to push for about a half hour, then suddenly, she did. I held her hand and rubbed her arm as she bore down and gritted her teeth. The contractions were coming every couple of minutes now, and the doctor was encouraging her to push with each one.\n\nAfter about 35 minutes of pushing, Shavonda was ready for the final phase. \"I have to push,\" she moaned. \"This baby is coming now!\" She bore down with all her might, her hand crushing mine in the process. Her head was bathed in sweat and the nurse wiped her with a cool sponge.\n\n\"She's crowning,\" the doctor said. \"I can see the top of the baby's head.\"\n\n\"Baby, I'm sorry. I have to let go of your hand and watch this,\" I said.\n\nShavonda nodded, sweat drops flying as her head moved. \"Go see your baby. I'm fine,\" she said through gritted teeth. \n\nI walked over to the front of the bed, where the doctor was. I stood beside him. Shavonda was spread wide, the top of the baby's head was plainly visible. She gritted her teeth as another contraction took hold.\n\n\"Push, baby,\" I said to her. \"It's almost over. One more good push and the baby will be here.\" Shavonda bore down and groaned loudly as she pushed with all her might. The baby's head popped free, followed by first one shoulder, then the other in a little shimmy. I would remember that shimmy as long as I lived. Shoulders free, the rest of the baby easily slid free into the doctor's waiting hands. The nurse quickly cut the umbilical cord. The baby was now free.\n\n\"You did it!\" I exclaimed to Shavonda as the doctor slapped the baby, who took the first breath in the most beautiful cry I had ever heard. He handed the baby to the nurse. Taking the baby to a small table, the nurse cleaned up the baby, tied off the umbilical cord, and wrapped her in a blanket. I followed the nurse to a small scale table where she weighed and measured it.\n\n\"What is it?\" Shavonda asked anxiously. \n\n\"It's a girl. 7 pounds 12 ounces. 21 inches,\" the nurse said as I gazed upon my beautiful baby girl. She stared back at me, whimpering softly. She had wispy black hairs, blue eyes, and skin the color of peanut butter. Placing a knit cap on the baby's head, she handed our little wonder to me. \"Support her head. Her neck is very fragile. Take her to her mother.\"\n\nI carried our baby to Shavonda, and handed her over. \"Support the neck,\" I said. \"Meet your baby.\"\n\n\"Hello, Miracle,\" Shavonda said. Turning her head to the nurse, she whispered, \"That's her name. Miracle Shavonda Waite. I've waited so long for this. I can't believe she's finally here.\" Tears ran down her face. I grabbed my Nikon from the bedside table, and quickly took Miracle's first pictures. She was resting peacefully, snuggled to Shavonda's body as she sat up in the bed. The smile was priceless. Shavonda, though exhausted and in a lot of pain, was happy.\n\nAnd so, at 1:27 am on Friday, November 22, Shavonda Marie Waite, gave birth to a healthy baby girl to the man she loved, fulfilling her lifelong dream.\n\n\"Well, Daddy,\" she said. \"What was it like to finally see your child born?\"\n\n\"It was the most beautiful thing I've ever seen. Thank you, boo. It was worth it. I love you so much.\" I smiled at the two most beautiful girls in my life. One who I loved deeply enough to stand by her through the hard times. And the one I never dreamed we'd create. Miracle wasn't just ours, she was us. She had my blue grey eyes, and she had Shavonda's nose and hair. Her pigmentation was midway between our skin tones. \n\nThe nurse let us bond with the baby. Shavonda had taken off her hospital gown earlier during the evening after I'd arrived, saying it was too constricting. She now positioned the baby next to one of her breasts, and the baby took a couple of tentative licks then opened its lips and latched onto her dark nipple. We watched in awe as the Miracle took her first feeding from her loving mother. \n\nI asked if it was okay to have visitors, the nurse said okay but only a couple at once. At Shavonda's request, the nurse pulled a blanket over her naked body, leaving only the head of the baby suckling at her breast visible. Reluctantly, I left the room, and walked to the waiting room. \"It's a girl,\" I smiled as I told the waiting crowd. \"Miracle Shavonda Waite. 7 pounds 12, 21 inches long. And healthy. Both mother and daughter are doing fine. You can come back if you want. Two at a time.\" James and Althea followed me back to the room first, where they hugged us and cooed at the baby. James seemed a little uneasy at the sight of his daughter feeding the baby. But I said, \"Isn't mother-daughter love special?\" Althea smiled at me, then Shavonda, who smiled back.\n\n\"That it is,\" was all Althea said. \n\nVelma and Shaunice were next, and finally Brian and Tamika. \"When you gonna put one of those up in me?\" Tamika asked Brian in a playful mood. \n\nBrian simply said, \"Whenever you want one. We'll be married by the time it gets here.\"\n\nAfter a little while, they moved Shavonda out of the birthing room to her own room. Miracle went to the nursery to allow Shavonda to get some rest. She was exhausted. I pulled up a chair beside the bed, and reclined it back. Grabbing her hand, I held it, stroking the back with my thumb. \"Congratulations,\" I said. \"You just gave me the most beautiful thing in the world. I love you so much, boo.\"\n\nShe looked down at me, and my pale hand holding her dark one. \"No, Jason,\" she said. \"Holding my hand won't do. Climb up here in the bed and hold me. I need you right now.\" She rolled over, back to me. I climbed up in the hospital bed, after removing my shoes, and curled up behind her, arm around her protectively. The nurse walked in a short time later, and quickly walked out. By this time, Shavonda was sound asleep in my arms.\n\nIn a couple of minutes, the nurse returned with a couple of other nurses. \"Awww, that's so sweet,\" one of them said. I looked at them and started to get up. \"No, it's okay. She needs you. Hold her. Make her feel special.\" Our nurse pulled the covers over us. Shavonda was still naked, having yet to get out of bed to put her gown back on. The nurses left the room and we slept the rest of the night in her hospital bed. \n\nThe next morning, Shavonda was able to get up and walk around. She put on a hospital gown, and we slowly walked to the nursery to see our baby. Miracle lay in a nursery bed, looking cute in her little knit cap. The nurse picked her up and brought her to the window, holding her up for us to admire. \"You did good work,\" I said. \"She's beautiful. You know, the first time we made love, and you told me you couldn't have children, I remember thinking what a shame that was. Because we'd make a beautiful baby together. I'm glad we got the chance.\"\n\nShavonda smiled at me. She kissed me and said, \"Thank you for being there.\"\n\nWe talked to the nurse, and requested the baby be brought to the room whenever possible. We wanted to bond with Miracle as much as possible. A short time later, after we'd walked back to the room, they wheeled her in, lying in her little nursery bed. I picked her up and held her, rocking her gently as Shavonda grabbed my camera and started taking pictures. \"You look good with her, Daddy,\" she said with tears in her eyes. \n\nThe day was a busy one. We welcomed a constant stream of visitors to the room, and a couple of people had sent flowers as well. They brightened the room with their bright colors and sweet smell. Late in the evening, Ziggy arrived and after greeting Shavonda and the baby, he asked about Shavonda's testimony at officer Schumacher's trial. \n\nShavonda said. \"If they put me on the stand, the defense will eat me alive. I'm going to have to think about this. Can you give me a couple of weeks?\"",
        "\"Yes, I think they can do that,\" Ziggy replied. \"If need be they can probably move the trial date back. Your testimony is vital. There are several women willing to testify, but they all have drug problems or history of prostitution. You're the only one with a clean record and a good reputation in the community. And if he challenges your version of events, Jason and I can testify as well. So, you can see how much we need your cooperation.\"\n\nI said, \"Let her think about it. I'm not worried about the baby now, but only Von can decide if she's up to the stress. As she said, once the defense knows, they'll try everything to discredit her. The whole incident may go public. She's been a victim of this man once. I don't want her to be a victim again. But I leave the decision up to her.\"\n\nThe new room had a shower and a tub in the bathroom, and Althea had brought us a change of clothes. We locked the bathroom door, and I ran Shavonda a hot bath. She gingerly eased her way into the warm water, holding my hand for support the whole time. I knelt beside the tub and I gently washed her body. The nurse knocked on the door while Shavonda was in the tub, and I told her I was giving my wife a bath. After I helped her out of the tub, and patted her dry, she put her hospital gown back on and sat in the reclining chair while I took a quick shower and changed my clothes. \n\nSitting beside her, I said, \"See, I was a good boy.\"\n\nShavonda laughed. \"The next six weeks are going to be hell. In my mind, I want to make love to you to show you how much I love you for giving me this beautiful baby girl. But my body needs to heal first. I promise you, when the doctor says we can again, I'm going to hurt you. I'll have six weeks of pent up love to release on you, and I'ma wear you out.\"\n\n\"Promises,\" I said. I was looking forward to it. It was going to be a long six weeks.\n\nI spent the night with my wife again, curled up in the hospital bed. If I couldn't be intimate with her, at least we could hold each other. We could still be close.\n\nThe next day in the hospital was more routine. We had a few visitors, but it was mostly quiet time, with the baby in the room much of the day. At Shavonda's request, I walked her down to the cafeteria for dinner. We had hamburgers, they weren't the best, but Shavonda said they were better than what they fed the patients. \n\nAfter dinner, the doctor came in to examine her, and he cleared Shavonda to go home the next day. Tamika and Brian showed up a little later, with a deck of Uno cards, and we played Uno on the overbed table while Miracle slept soundly in her nursery bed. They stayed until visiting hours were over. \n\nSunday morning, we had a nasty surprise waiting for us when we went to leave the hospital. Shavonda had left her car in the parking garage when she'd been driven in in Thursday afternoon. I'd arrived Thursday evening. Neither of us had left since that time, so we had two cars with 3 days each of parking charges in an expensive garage. The hospital would validate only one of our parking tickets, so we had to pay the full rate for one of the cars. As if they hadn't made enough money off Shavonda in the past three days.\n\nAnother wrinkle was a bit less severe, but one we hadn't thought of. The hospital wouldn't release Miracle without an infant's car seat. We had one but it was still at home in the box, a gift from the baby shower. We called Althea, and she swung by the house for the car seat, and brought it to us. Problem solved.\n\nWe drove home from the hospital in our separate cars, me in the Liberty, Shavonda in the Cruze, in a cold November rain. She said Miracle cried the whole way home, but she quieted down when I picked up the car seat and took it in the house. It doubled as a sort of baby carrier as well. \n\nOnce inside, I set the baby carrier/car seat on the living room floor next to the couch, saying, \"Welcome to your new home, Miracle.\" Shavonda stood in the front doorway, tears running down her cheeks. The baby was home, safe and sound. Later that evening, Reverend Frazier stopped by for a visit. He cooed and laughed at Miracle, who looked at him with an odd smile on her face, before bursting into a crying spell. Shavonda had to pick her up to quiet her. \n\nSince it was the week of Thanksgiving, Barbara offered to take care of the kids an extra day to let us settle in. She'd had the kids since Thursday, when she picked them up from Althea after Brittany had gotten off from school.\n\nIt was odd being alone in the extension with my ebony wife and the baby. The house seemed too quiet. Shavonda's milk had come in so she breastfed the baby while we listened to music and generally relaxed. It was a totally different vibe than we'd had before. There was none of the frenetic sexual tension we'd had in the past. We were, in a word, domestic. \n\nHaving a three-day work week for the holiday, I was in no position to call off Monday, even though I wanted to. So I went to bed early. Shavonda curled up with me as I fell asleep, then took the baby back into the living room so I could get some sleep. She woke me the next morning at 3am, \"I know it's a little bit early. But the baby's asleep now, and she only took one breast. I was going to pump the other one, but I thought I'd offer it to you first. Since we can't have sex for a while, maybe this can substitute. Be gentle, my nipple is a little sore.\" She offered me her left breast, milk beading on the nipple. I gladly took her dark nipple into my mouth. Her milk was sweet, unlike anything else I'd ever tasted. It was good. I enjoyed sucking her tit dry for her, and she enjoyed having a little bit of foreplay in her life again. \n\nThe week went fast, and in no time at all, my family arrived on Wednesday evening. We put Mom and Dad up in our old bedroom, and Grandma in the kids' old room. Kenny, who'd come up for the weekend, was supposed to sleep on the couch, but Edie came over to visit him, and she ended up taking him home. Everybody fussed over the baby. Especially Grandma.\n\nI gave Mom and Dad the tour of the extension, upstairs and downstairs. \"Thank you for the gift. This is what you helped pay for,\" I said proudly. \"We have room to grow now.\"\n\nThanksgiving Day, we all gathered at James and Althea's house for the traditional dinner. Dad and James had hit it off good, both being electricians. The had a lot to talk about. Mom, Althea and Barbara hung out in the kitchen. Shavonda would have liked to have joined them, but the older ladies in the family wouldn't leave her and the baby alone. Later, Kenny dropped by with Edie, having spent much of the afternoon having dinner with Edie's family. All in all, I kind of felt like the odd man out for the first time since I'd known the family. Shavonda noticed, and had me sit with her. I rubbed her back as she talked with the ladies. \n\nWhen we went home that night, we were all exhausted, and I fell asleep on the couch with my head in Shavonda's lap as she nursed Miracle. Our family was complete."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "pregnancy",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-13"
}