{
    "title": "Heaven in the Desert Ch. 04",
    "pages": [
        "A/N: You rock! Thank you for the continuing support and feedback for heaven. I want to have two more chapters next month and then I think I want to write a sex scene a day to celebrate my birthday month in September. Here's hoping. :-) Special thanks to Animefreak9872 for motivating me in the final hour. Enjoy. \n\n***** \n\nWe do not exist in, any other instance, \n\nHere in this dimension, you and I are meant to be. \n\nI have waited lifetimes to find you, now that you're here I can remind you, \n\nOf the things you've been dreaming times two, I promise yooooooou \n\nIf you just give me 24, man all I need is 24 hours \n\nI promise you'll want plenty more, you'll probably be with it forever \n\nSo how does it sound, us on the ground, giving you my love? \n\nAriana sang the lyrics to one of her favorite songs as she smiled and spun samples in a centrifuge. It had been 3\u00bd weeks since she had decided to stay in Omash. \n\nShe was currently working with a group of researchers on a new drug that could aid people with multiple sclerosis. She was on the part of the team that would create the actual drug for the drug trials. \n\nAs she loaded the drug samples into the GC-MS she thought back onto how things had changed between her and Aaryan these past weeks. \n\nTrue to his word Aaryan allowed her to work in his offices as long as she was accompanied by her shadows. \n\nHe had also stopped taking long trips. If he did leave it was only for 2 days at a time and they would always have teleconference dates while he was away. \n\nHe had also relented to her demand to work regular hours and have a regular job like anyone else at the company but at a price of course. \n\nShe had also learned so much about him. She smiled as she remembered their conversations. \n\nShe learned that his favorite color was green, that he liked to do most things himself, that he was a fierce businessman, worked hard and would forget to eat and sleep if she didn't remind him. \n\nShe also learned they liked a lot of the same things. Their favorite time of day was sunset, their favorite music was R&amp;B, their favorite food was Italian and that ironically he loved winter weather just like her. \n\nShe could really see herself falling for him but the thought of getting married was still quite scary. \n\nShe did however have hope that they could have a successful relationship. They had already survived their first fight. \n\nAriana looked up at the clock on the wall, it was after 5:30pm and she was supposed to leave every day at 5pm. She was going to be late! \n\nShe set the GC to run the samples overnight and rushed onto the elevator. \n\nAriana steamed at Raskshan. \n\n\"Why didn't you warn me it was getting so late? You know he will have my head if I'm late for dinner.\" Ariana said as the elevator doors opened onto the main floor. \n\nShe shuffled to the car and sat down anxiously. \n\nAs Rakshan began to maneuver the suv toward the palace Ariana began to fidget nervously. \n\nAs part of the agreement for allowing her to have a regular job at the company and earn money, Aaryan had insisted on them having nightly dinners. \n\nSometimes Ariana would have to cook and other times the chef would prepare the meal. \n\nThese dinners however were private, between just the two of them and Aaryan would always pick out something for her to wear. \n\nNormally he would have an elegant dress accompanied with jewels and heels waiting for her but that all changed the first time she was late. \n\nHe had shocked her having had her entire wardrobe brought to Omash. Out of all the outfits he had picked out a black form fitting dress that came just past her knees and had small oval cut outs under her breasts. \n\nShe had bought the dress for her birthday because she thought she looked ravishing in it, but never had the chance to wear it. \n\nThe dress was so tight she didn't have to wear a bra. It was also tight enough that he could not reach under it. \n\nHe had learned his lesson. \n\nThe second time she was late he had once again picked from her American wardrobe. That time he picked out a short black skater dress that had mesh cutouts around her upper breasts and lower belly. \n\nIf that wasn't bad enough he also picked out the bra and panties she wore and insisted she serve him dinner while sitting on his lap. \n\nThat had been a hot night, she thought as she bit her lip. Who was she to refuse a sultan? With the increasingly delicious results, she no longer wanted to. \n\nAaryan had found his way underneath her dress many times and always took that opportunity to squeeze her thighs and buttocks. \n\nAlthough she was nervous about what he would do if she was late tonight, she was also exhilarated by it. \n\nNo sex, no sex, no sex, she chanted in her head. \n\nAs soon as she arrived at the palace she raced inside. She checked the clock in the entrance and growled. It was 5:59pm and dinner was at 6pm. She stared daggers at Rakshan as he gave a sheepish look. \n\nAaryan walked toward her as she heard him ending a business call. \n\nShe licked her lips in anticipation. \n\nHe came to her and wrapped his arms around the small of her back. \n\n\"You are late.\" Aaryan said with a smirk, his hands resting at her hips. She moved them up. \n\n\"So I am.\" She said kissing his cheek and trying to move out of his embrace. \n\nHe stopped her by holding her hand. \n\nShe turned and said through gritted teeth, \"I assume my clothes will be waiting?\" \n\n\"You assume correctly.\" He said as he turned her back into his arms and gave her a passionate kiss on the lips. \n\nShe ducked her head when he broke the kiss trying to hide her smile. She loved how his kisses made her feel. \n\n\"Ass.\" She mumbled under her breath. \n\nShe turned and began walking to her room to shower and dress when his voice stopped her. \n\n\"Ariana...make sure you don't take too long.\" He said with a chuckle. \n\nShe had every intention of doing just that. She stayed in the shower for 20 minutes and then took another 15 putting on body oil. \n\nWhen she stepped outside to find her outfit she scrunched her nose in confusion. Normally there would be four neat piles waiting for her. One with jewelry, one with undergarments, a dress and the last with heels. \n\nToday there were just two piles. In the first there was a black corset with mostly see through mesh with black boy short panties that had pink garter straps. In the second pile there were thigh high pantyhose and a pair of 6-inch heels. All were from her American clothes. \n\nIn between was a note that said \"You should be late more often.\" \n\nShe laughed. \n\n\"There is no way I am wearing this.\" She checked her closets and drawers and they were empty of all her other clothes. \n\n\"Smart man.\" She said with a scoff. \n\nShe looked at the curtains to see if she could put those on but they were too high to reach and lace. \n\nShe sighed. She didn't like to lose and although this game they were playing wasn't expressly stated, Aaryan had definitely won this round. \n\nShe put on the boy shorts and attached the pantyhose. She then put on the corset and the heels. \n\nShe sat on her bed with her back to the door and called out to Kadshah. \n\nAfter the corset was tightened to her liking, and her makeup and hair were artfully arranged, she thanked Kadshah. \n\nTaking a deep breath she walked all the way down to the kitchen. \n\nShe noted that it was especially quiet this night. Normally she could hear or see the palace staff hustling about to do their work but today she saw and heard no one. Her shadows were not even around. \n\nAaryan had surprisingly stood by her no sex rule so she didn't know what he was trying to tempt tonight, her or his patience? \n\nAs she arrived to the dining room she couldn't help but grin. \n\nThere were candles all around and off to the side she noticed instead of dinner there were many plates of small pastries and fruits along with melted chocolate, caramel, ice and whipped cream. \n\nAaryan was standing in front of the dining table which only had a briefcase at the opposite end. \n\nAs she closed the doors behind her she thought, \"Let the games begin.\" \n\n\"You look ravishing.\" Aaryan said as he looked her up and down leisurely. \n\n\"Aaryan.\" She said in answer, slightly miffed. \n\n\"Razam.\" Aaryan corrected. \n\n\"Good evening Razam...How may I serve you tonight?\" She asked as she looked at him under her lashes, with one hand on her hips. \n\nAlthough she was upset that he had won, she loved the way she looked and felt in the lingerie. \n\nShe wanted to push him down on the table behind him, crawl on top of him and... \n\nNo sex, no sex, no sex, she chanted in her head. \n\nHe smiled as she slowly began to walk toward him, accentuating the movement of her hips. \n\nHe pulled her closer to him and this time she did not stop his hands. \n\nWhen they were alone in this room, there was no pretense. \n\nThis was their element, this was their safe haven, this was their...home. \n\nHere they could lay it all bare, connect...build. \n\nHe kissed her hard and she gripped his arms in appreciation. \n\nHis hands gripped her curves as he easily slipped his tongue in her mouth. \n\n\"Oh Razam.\" She moaned when he pulled back. Aaryan chuckled in answer. \n\nHe placed softer kisses on her cheeks and neck. \n\n\"You can start by putting two of everything on a plate.\"Aaryan said as he spanked her then gripped her butt. \n\nHe then took off his suit jacket and sat down at the head of the table. \n\nAriana gathered the food and sat down on his lap without a word. She fed him a bite of the food first and then she took a bite. \n\n\"How was work today?\" She asked as she rest a hand on his chest and continued to feed him. \n\n\"Work was good. I negotiated a few new deals in Europe, and expanded our product line further into Asia.\" He said looking her in the eyes as he caressed up and down her arms. \n\n\"So the usual then.\" She said as she touched his cheek. The rest of the food lay on the table forgotten. \n\n\"Yes, the usual as you say.\" He said turning her in his lap to face him. \"What did you do today?\" \n\n\"Well, I put the finishing touches on the trial one drug, and then I...\" Ariana began but abruptly cut off as Aaryan gripped her hips and licked the left side of her neck. \n\nHe looked at her expectantly and she continued. \n\n\"...began analysis on the samples. We have to make sure, Mmmm...\" She moaned as he continued licking her neck. \n\n\"Continue.\" He said with a chuckle as he bit down on her neck and began to lick a path lower. \n\n\"We have to make sure, that we know everything about the samples before we...Ahh...start testing them with patients.\" She moaned again and unconsciously pushed her chest higher. \n\nAaryan had pushed her left breast out of the corset and was now slowly licking around her areola. \n\nHe lifted her up and sat her at the edge of the dining room table. She arched back as he sucked her nipple. \n\n\"Mmmm...and I also...mmmm...I also went on a lunch picnic.\" Ariana said in between gasp as she gripped his hair. \n\n\"A lunch picnic?\" Aaryan asked in confusion. Although his company was vast he still knew about most of the day to day operations and he did not remember seeing a company picnic on the agenda. \n\n\"Yes...with Fadil.\" She moaned and then gasped. Aaryan had bitten her nipple. \n\n\"How is my little brother doing?\" Aaryan asked putting her breast back inside her corset. \n\n\"Still in love, still the charmer and romantic.\" Ariana said laughingly and then she pouted. Where was he going? she thought. \n\nAaryan ignored her and went over to the dinner table, gathering things she could not see. \n\n\"I think I will keep having weekly lunches with him, I do have to keep my options open.\" She said with a smirk, trying to peek over his shoulder. \n\n\"Lay down.\" Aaryan said ignoring her statement. \n\nHe went to the other side of the table and opened the briefcase. She felt something soft wrap around her ankles but thought nothing of it. \n\nShe trusted Aaryan. Although Aaryan could be rough with her, she liked it, and he never took advantage of her vulnerability or trust. \n\nIf anything he was too gentle with her. Sometimes she really wished he would just pin her up against the wall and make her beg for it. \n\nOne day she would get him to do that. One day. \n\nShe was so caught up in her fantasies that she had not even noticed what Aaryan was doing. \n\nWhen she felt the breeze and realized her breasts were now exposed to his gaze she gasped and covered them. \n\nAlthough Aaryan had sucked her breasts before, she had never been before him topless, she felt vulnerable and exposed. \n\nThey stared into each other's eyes. \n\nDid she want to be so vulnerable with him so soon? Did it matter if she was going to do it later anyway? \n\nShe already knew she would give him her virginity, did it matter when? \n\n\"Kiss me.\" She said and pulled him on top of her. \n\nAs their lips and tongues met they both moaned in appreciation. \n\nShe unbuttoned Aaryan's shirt and slowly scratched down his abs as she kissed a path to his neck. \n\n\"You need to learn to reciprocate.\" She whispered sexily in his ear. \n\nWith both of them naked from the waist up, Aaryan instructed her to lay down once again. \n\nHe began licking her neck trying to seek out her spot as she ran her hands over his biceps, triceps and lats. \n\n\"Mmm...that feels so good.\" She moaned as he sucked and bit down on her neck. \n\nAaryan swirled his tongue along the tender spot on her neck and bit down hard making Ariana gasp. \n\nHis hands gripped her waist as he moved down to her breasts, placing bites along the way. \n\nHe slowly trailed his tongue around the outer rim of her areola and worked his way inward toward her nipple. \n\nShe arched her back and gasped as he bit her nipple then soothed the sting away with flicks of his tongue. \n\nHe pushed down hard and swirled his tongue on her nipple and areola as if he could lick the light chocolate hue of her skin away. \n\nShe scratched his back as he placed harder bites around her breasts to tease her. \n\n\"More.\" She gasped as he sucked her right breast back into his mouth. \n\nHe licked the underside of her breasts and then licked his way down to her navel. \n\nHe flicked his tongue in out of her navel and then bit down on her lower belly. \n\nHe stared at her then. \n\nWhen she made eye contact, he slowly began pulling down her boy shorts. \n\nShe tried to open her legs to assist him but realized something was holding her ankles. \n\nAaryan smirked as she noticed the fur and leather cuffs around her ankles. \n\n\"Clever.\" Ariana said as she tested out the movement in the restraints. \n\nHe started at her ankles and made his way slowly up to her inner thighs placing kisses and soft bites. \n\nAriana moaned as Aaryan kissed and licked around her inner thighs. \n\nShe arched and opened her legs wider as he bit down hard on her upper thighs. \n\nAs much as he enjoyed teasing her, he was ready for a taste. \n\nHe braced his arm under her buttocks and pulled her closer toward his face. \n\nAriana jumped as he placed light kisses on her already wet pussy. \n\nHe had never kissed her there before and one kiss wasn't enough to satisfy either of their appetites. \n\nWith a groan, Aaryan split her lips with his tongue and tasted her essence. \n\nThey both moaned as he licked around her clit. \n\nAaryan began slowly swirling his tongue around her clit in a clockwise motion. \n\n\"Fuck.\" Ariana exclaimed as she wiggled her hips and gripped Aaryan's long hair knocking off his keffiyeh. \n\n\"You like that.\" He asked as he began flicking her clit causing her to bounce in excitement. \n\n\"Yes, Razam, I love that.\" Ariana said breathily as he continued. \n\nAaryan lightly bit on Ariana's clit and gently slid a finger inside of her dripping pussy. \n\n\"Oooooh.\" Ariana moaned as she began to ride Aaryan's first finger and then a second. \n\nHe formed a suction with his lips as he swirled his tongue over her clit and pumped two fingers in and out of her pussy. \n\nAfter two minutes of this sweet torture she was begging him for more. \n\n\"Razam...?\" She said barely able to breathe. \n\n\"Yes?\" He said, trying to concentrate as he continued to pump. In and out, in and out. \n\n\"I need...\"she stopped and bit her lip. She moved from side to side causing her breasts to jiggle. \n\n\"What do you need?\" He asked with a smirk. As soon as she said it aloud he was going to plunge into her. \n\n\"I want...uuuuuhhh...\" She moaned and arched her back as he began sucking her left breast. \n\n\"What do you want?\" He said removing his fingers and slowly massaging her clit with his thumb. \n\n\"I...I...(moan)...Razam, fuck me!\" She ended with a shout as she jumped from the sensations he caused. \n\nAaryan chuckled and moved so that he was hovering above her. \n\nHe continued to rub her clit as he tongue kissed her. \n\nAriana frantically undid his belt and unzipped his pants. \n\nFreeing his cock, she stroked it up and down as she wiggled closer, positioning him at her entrance. \n\nAaryan took over and rubbed his head against her clit and entrance, covering himself in her juices. Ariana moaned and moved her hips trying to push him inside of her. \n\nAaryan spread her legs as wide as they could go as he rubbed her clit and began to push in. \n\nThere was a knock at the door. \n\nAaryan continued to rub her clit and asked, \"What is it?\" \n\n\"I'm sorry to disturb you sir, but there is an uprising.\" Rakshan said through the door. \n\n\"In the Northeast?\" He asked with a growl, Ariana was moaning as she rubbed herself all over his cock. \n\n\"Yes sir.\" Rakshan answered. \n\n\"Casulties?\" He asked removing his cock and placing a finger inside her quickly. Ariana gasped. \n\n\"In the 100s so far sir.\" Rakshan replied. \n\n\"Have everyone meet in the conference room in five.\" Aaryan commanded. \n\n\"Yes sir.\" Rakshan said, walking away. \n\nTurning back to Ariana he said, \"I have to go but...\" \n\n\"No Aaryan, No! I know what you are planning to do, don't!\" Ariana said as she tried to move away from him. A strong arm on her hip stopped her. \n\n\"Let me.\" He said and moved down her body so that he was flush with her pussy. \n\n\"Aaryan, no!\" Ariana shouted as he once again parted her lips with his tongue. \n\nHe slid his tongue inside of her pussy and swirled it around gathering up her juices. He then licked up and down her slit. \n\nAfter a few strokes, he stopped at her clit and began sucking it in and out of his mouth. \n\n\"Fuck...no...\" Ariana said as she bounced on his tongue and continued to squirm. \n\nHe began slowly pumping a finger in and out of her pussy. \n\n\"I don't want...I don't want to come without you.\" Ariana pleaded. \n\nAaryan ignored her and continued sucking her clit. \n\nEach suck took her closer and closer to the point of no return. Her muscles tensed as Aaryan continued pushing her closer to the edge. \n\n\"Razam...Razam...Razam!\" She chanted as and he attacked her clit fiercely with his tongue. \n\nHe added another finger and pumped faster. \n\n\"Fuck, Razam...Raaazaaaaaam.\" Ariana screamed as an orgasm washed over her. \n\nShe scratched his upper back and moaned as he continued licking her pussy. \n\nHe continued to lick and suck her clit lightly until the tremors subsided. \n\nWhen it was over she pulled him to her face and kissed him passionately. \n\nEyes shimmering with emotion, she stroked his face lovingly. \n\nHe undid the ties at her ankles and she wrapped her legs around his back. \n\n\"That was unfair.\" She said and kissed him again. \n\n\"You enjoyed every second of it.\" He said daring her to say otherwise. \n\nHe sat up and slid his arms into his shirt and she slowly removed her legs from his lower back. \n\nShe buttoned his shirt and regrettably buttoned his pants and redid his belt. \n",
        "He kissed her again and then walked to the door. \n\n\"Tell your mother I'm picking out my own dress.\" She said as she got dressed. \n\nThere was no need to ask what dress she was referring to. \n\n\"Are you sure?\" He asked, looking for confirmation in her eyes. \n\nShe nodded and smiled before she kissed him. He pushed her against the table, grinded into her as their tongues dueled. \n\nShe reached down and boldly gripped his cock in his pants. \n\nHe almost said to hell with the uprising and finished what they started. However, he knew he had a duty to his people. \n\n\"I will.\" He said, stepping back and handing her his suit jacket before leaving the room. \n\nShe stroked her lips as she watched him walk away. \"Damn uprising!\" She thought, shaking herself and standing up straight. \n\nShe walked back to her room in a happy daze. She closed her bedroom door and rest on it as she let her mind wander about getting married and what that would mean. \n\nShaking herself out of her reverie, she decided to do a little research on the uprising and check her email. \n\nEver since she decided to stay at the palace she was allowed more freedom. One being, she now knew the log in password for the computer. \n\nShe signed into the computer and entered Omash in the search bar. \n\nShe scrolled down until she found a webpage titled the history of Omash. \n\nIt read: The Al Said Aaban's have ruled Omash as an absolute monarchy since its first sultan Ghazi Haad Al Said Aaban came to power in 1281. \n\nGhazi Haad Al Said Aaban also known as 'Ghazi the Wise' established Omash after the The Battle of Laheya. \n\nDuring the Battle of Laheya, Ghazi and the 8 clans overthrew the oppressive Pashian regime in a successful coup. Ghazi was declared ruler and the 8 clans divided themselves into 4 regions. \n\nThese four regions continue to exist today. They are: \n\nThe Kinsha, Awaan, and Ashake of the Northern mountainous region. \n\nThe Adab and Gutan of the Southern tropical region. \n\nThe Isin of the Western desert region. \n\nThe Imitti and Eshtar of the Eastern coastal region. \n\nAriana went back to the search bar and searched: conflict in northeast Omash. \n\nThere was not much news on the actual conflict but she determined, the conflict was between the Awaan and Imitti. \n\nClicking out of her research she signed onto her email and social media page. \n\nA few weeks ago she had updated her status letting her family and friends know that she would be staying in Omash for a wonderful work opportunity. \n\nThey wrote comments wishing her well and saying she would be missed. \n\nShe also had a private message from her roommate asking her what project she was going to be working on at her new job and telling her that some pretty hot but intimidating men came to get her belongings and gave her money for the rest of their lease term. \n\nShe responded saying: My employer is a pretty serious guy. It seems that he gets everything that he wants. I am sorry to run out on you and Louie, I will miss you both. At my new job I will be working on the synthesis of a drug to assist in the symptoms of multiple sclerosis. Wish me luck! \n\nClosing out of her social media page she brought up her email. There were the usual spam messages from companies trying to get her to buy something and a few messages from friends. As she reached the bottom of her inbox, she stopped cold. \n\nThere was a message from her mother. \n\nIt read: \n\nDear Ariana, \n\nI have not heard from you in a long time and I miss you. I know that you and I have not always seen eye to eye but you are my daughter and I am your mother and I love you. Your brothers tell me that you have some new job oversees somewhere. I wish you would have stopped by to see your old mother before you left but I understand. My little girl has grown up, she is a grown woman now and she is living her life. If you get a break from your job you know how to reach me and you know where I will be. Live your life and be happy my child. I will always love you no matter what. \n\nForever &amp; Always, \n\nCharlotte \n\nAriana didn't know what to say to her mother. Although they were not on speaking terms she didn't hate her mother. She decided it would be best to talk to Ghani and ask her what to do. \n\nShe closed the laptop and let out a sigh. \n\nShaking off thoughts of her mother she decided to wait for Aaryan outside of his office. \n\nShe didn't have to wait long because five minutes later, he arrived at his office visibly worn out. \n\n\"You didn't say goodnight.\" She said looking at him expectantly with her arms folded across her chest. \n\n\"Goodnight, Ariana.\" He said kissing her softly with a hand at her nape. \n\nHe went into his office leaving the door open so that she could step inside. \n\nHe sunk into his chair and sat back with his eyes closed facing the ceiling. \n\n\"You poor thing. You look so tired.\" Ariana said perched on the door jam. \n\n\"I am.\" He said continuing to face the ceiling. \n\n\"Let me help.\" She said locking the door behind her and walking over to him. \n\nHe thought she meant to give him a massage so he was shocked when he opened his eyes to find her kneeling before his seat. \n\nShe unfastened his belt and pulled his cock out of his boxers while looking him directly in his eyes. \n\n\"Ariana...\" He began. \n\n\"Don't.\" She cut him off, \"This is reciprocation.\" She said kissing the head of his cock. \n\nShe continued kissing his head and then sucked his cock into her mouth, wetting its length. \n\nShe was shy about doing this but she was determined to please Aaryan as he had pleased her earlier tonight, so she pushed him back into the seat. \n\nShe bobbed up and down his cock sucking not to hard but not to light. \n\nWhen it was nice and wet she used her right hand in a firm grasp to pump up and down as she sucked. \n\nAaryan grunted and clenched his fist. \n\nShe started off light and then increased the pressure of her grasp as she got more confident. \n\nShe sucked up to his head and looked him into the eyes as she licked and swirled her tongue around his helmet. \n\nShe alternated bobbing up and down and flicking her tongue around the sensitive spots at the head of his cock. \n\nAaryan grasped her hair and pushed her head further down on his cock as she continued to bob. \n\n\"Fuck.\" He exclaimed. \n\nShe swirled her tongue round and around his head as she continued to grip his cock as she bobbed faster up and down. \n\nShe felt Aaryan's cock twitch in her mouth and he pulled her off of him. \n\nHe pulled her up, bent her over the desk and pulled her boy shorts down. \n\nShe smiled in glee and spread her legs wide as she flattened herself on the desk. \n\nHe braced himself with a hand on the desk and rubbed against her entrance and clit with his cock. \n\nShe wiggled against him and then looked back in shock as she felts jets of his cum hit her ass. \n\n\"That was a dirty trick.\" She said with a pout. \n\n\"So was this.\" he answered with a smirk. \n\nHe wiped his cum away with a tissue before pulling her boy shorts up and turning her around. \n\n\"No sex before marriage remember.\" He said mockingly with a quick kiss on the lips. \n\n\"But...But...you asked for it.\" She said gesturing toward her outfit. \n\n\"And you begged for it, but rules are rules.\" He said with a smirk. \n\nShe stared daggers at him. Two can play this game, she thought. \n\nShe shoved his chest and stormed toward the door. \n\n\"Goodnight, Ariana.\" He chuckled. \n\n\"Goodnight, Aaryan.\" She answered, miffed. \n\n\"Will you always call me Aaryan when you are angry?\" He asked continuing to find her anger hilarious. \n\n\"Yes Aaryan.\" She said folding her arms and pushing up her boobs. \n\nHe licked his lips and looked at them and she growled. \n\n\"Goodnight.\" She said storming out of the room. She could hear his laughter down the hall. \n\n****** \n\nThe next day Ariana awoke to a bustle of activity. She heard servants running around the palace and in the halls. \n\nShe got cleaned and dressed and walked to the entrance. It was there she found Aaryan on the phone conducting business. She slowly approached as he ended the call. \n\n\"What is going on?\" Ariana asked gesturing toward the staff and security standing close by. \n\n\"I am going to the Northeastern region, to establish a cease fire.\" Aaryan said. \n\n\"That's a great idea, I'll take the second Mercedes.\" Ariana said walking toward the door. \n\n\"You will not.\" Aaryan began. \"These security guards will be monitoring the palace and protecting you indefinitely. There could an unprovoked attack or an uprising and I want you to be safe.\" \n\n\"There will be no safer place than with you.\" Ariana said, walking over and caressing his cheek. \"Besides, if I am to be your wife, I need to be able to support you in all things. You have to let me in Aaryan, let me help you with stuff.\" \n\n\"But...\" Aaryan began. \n\n\"No buts...\" She began in a whisper so the guards would not overhear. \"I refuse to be a pretty little housewife that waits for you, cooks you dinner, you fuck me and then leave me again.\" \n\nAaryan's eyes sparked when she said fuck. He flashbacked to when she said it last night. \n\n\"Yes, I know we will both have our independence...\" She said putting both hands on his cheeks, \"...but marriage is a partnership. I am not just signing on to be your wife, I will also be their queen.\" \n\nThey stared silently into each other's eyes. \n\n\"Ok.\" Aaryan said after a while. Ariana bounced and clapped her hands in glee. \n\n\"But you must follow my instructions here and not attempt to get in the middle of anything or go off on your own. Rafiq and Rakshan go with you everywhere you go, understood?\" \n\n\"Understood.\" Ariana said with a quick kiss to his cheek as she raced off to the car. \n\nAriana rode in a car with Rakshan, Rafiq and Kadshah behind Aaryan and his security guards. \n\nAs they drove to the region which was nearly 2 hours away, Ariana thought over what Aaryan said and possible ways she could help ease the conflict. \n\nNaturally she would let Aaryan take the lead but she wondered if there would be any ways for her to help. She had no idea what they were going into. \n\nShe wasn't prepared. \n\nAs they arrived into the region a foul stench permeated the air. Ariana looked outside of the car to see rows and rows of the dead wrapped in cloth near the entrance of region. They were meeting in the middle not far from where most of the fighting occurred. The bodies seemed out of place to the mountains in the distance. \n\nKadshah handed her a niqab and Ariana quickly dawned it before stepping out of the car behind Rakshan. \n\nThe leaders of both sides agreed to an impasse for the day to talk with Aaryan. \n\nThey were waiting for him a tent in the center of the makeshift encampment. \n\nAaryan came to Ariana and grasped her hands. \n\n\"You cannot go in there with me. I will listen to both sides and I promise to tell you everything that is happening and what I will do.\" Aaryan began. \"Do not leave Rafiq and Rakshan's sight, stay close to them at all times.\" \n\n\"Ok, I understand. Come back to me.\" Ariana said squeezing his hand as she looked at the heavily armed men outside of the tent. \n\nOne wrong move and Ariana thought the fighting would easily start up again. \n\nAaryan entered the tent with the two men and after greetings were over, they sat down. \n\nAaryan began speaking. \n\n\"The losses are heavy on both sides. This fighting will solve nothing but costing you more lives. You will leave your wives without husbands, and father's without sons. We must find a solution to end this today. What is the cause of this senseless violence?\" \n\nThe two men began talking at once and nothing could be heard. \n\n\"Stop!\" Aaryan said in a commanding tone. \n\n\"I am here to listen and help but nothing can be solved with both of you yelling. You sir...\" Aaryan gestured to the man on the left, the leader of the Imitti clan. \"Speak.\" \n\nOutside of the tent, Ariana wandered around the encampment. \n\nShe saw many women and children peeking out from some tents with fearful looks. \n\nShe went over to the oldest woman and greeted her as kadshah translated. \n\n\"She says you have wonderful robes fit for a queen.\" Kadshah translated. \n\nAriana expressed her thanks. \n\n\"There a rumors in the regions that the sultan has taken a wife. Are you that woman? Are you our queen?\" Kadshah continued. \n\n\"Yes.\" Ariana said extending her hand. \n\nAlthough shocked Kadshah smiled and said, \"Congratulations miss.\" \n\nThe woman excitedly bowed over it and exclaimed she had touched the queen and how beautiful Ariana looked. \n\n\"Why are all the women here, so close to this fighting?\" Ariana asked. \n\n\"To care for the dead, and the sick.\" Kadshah translated and pointed to the entrance. \n\nAriana thanked the woman for her time and continued walking around the encampment. The women now followed her. \n\nAriana walked around assessing the conditions. \n\nIn this area between the coast and the mountainous region, there were not many crops or grass. Children from both sides ran through the low foliage. \n\nAriana noticed what appeared to be a stream coming from the mountains but it was very small. \n\nA she got closer to the stream she noticed a small boy by himself, watching the other children as he sat with a nearly emaciated dog. The boy could not have been older than 7. \n\n\"Kadshah, ask our new friend who that is. Why does he sit all alone watching the other kids?\" Ariana asked. \n\nThe woman made a face and looked angry as she spoke. \n\n\"He is an orphan and the villagers want nothing to do with him, he is abandoned from the other side.\" Kadshah replied. \n\n\"What happened to his parents? His family?\" Ariana asked looking at the boy. \n\n\"He has no family, she says. They were told his mother died in childbirth and his father was a drunk who was killed.\" \n\n\"What normally happens to orphans?\" Ariana asked. \n\nWhen kadshah did not answer she looked back at the women and saw that they looked uncomfortable. \n\nAriana looked at kadshah for explanation. \"Most die or wander off to some other place.\" \n\n\"Why doesn't some other family in the village take them in?\" Ariana asked indignantly. \n\n\"They can barely take care of their own mouths.\" Kadshah explained. \n\nAriana was torn between anger and sadness. \n\n\"You have to understand Miss, that is the way it has always been.\" Kadshah said. \n\nAriana noticed he had a sling around his arm. \"How did he become injured?\" She asked hesitantly. \n\n\"He was...kicked trying to save that dog during a village fight.\" Kadshah answered. \n\nAriana was incensed. How could this happen, she thought? \n\nAriana took a deep breath and slowly approached the boy. She noticed that he was feeding the dog a small piece of bread and scraps and trying to coax it into drinking the water. \n\n\"Hello, my name is Ariana, what is your name?\" Ariana began. \n\n\"I am, Quadir.\" he said. Ariana was startled that he spoke English. \n\nNoticing her reaction he said, \"My father taught me some English words before he died. He was a brave man.\" Quadir said punching the dirt. \n\n\"How long has it been since your father passed?\" Ariana asked gently as kneeled down. \n\n\"Two...two years.\" Quadir answered. Ariana's eyes rose in alarm. She was angry to think that this small child could be on his own for 2 years. \n\n\"It's very nice to meet you Quadir, and who is our friend here? I here you saved her, that was very brave...What kind of dog is she?\" Ariana said gesturing toward the dog. \n\n\"I have not named her and she is a saluki.\" Quadir answered. \n\nAriana paused and looked at Quadir thoughtfully. \n\n\"Quadir...\"Ariana began unexpectedly. \"How would you like a job?\" \n\n\"What kind of job, Miss Ariana.\" He asked hopefully. \n\n\"Please, just call me Ariana and the job is...Royal translator. I do not know much Omashi and my current teacher is horrible at teaching. So this is what I propose.\" \n\nQuadir perked up and moved in closer. \n\n\"I think I can teach you more English as you teach me Omashi. Does that sound perfect?\" Ariana asked. \n\n\"That sounds wonderful Ariana, but how will I teach you? I live here.\" Quadir asked sadly. \n\n\"Well, since you are the royal translator you will have to stay in the palace. Close enough that you are there whenever I need you. You and your saluki will have your own room and staff and clothes. We can have lessons over dinner every night.\" She answered. \n\nUnderstanding her kindness, Quadir jumped up and gave Ariana a hug. She held him tightly as she willed the tears not to fall. She would change this boy's life and she would talk to Aaryan and make sure that this did not happen again. \n\n\"You have to make me a promise before I agree Quadir.\" Ariana said pulling back from the hug. \"You have to promise to go to school every day before our lessons, ok? Education is important.\" \n\n\"Ok Ariana, I promise.\" Quadir said hugging her again. \n\n\"Now, I want you to follow this woman and go get anything you need and wait for me in my car ok.\" \n\n\"Ok.\" He responded. \n\n\"I will see you soon.\" Ariana said ruffling his hair. \n\nThe women were shocked as they saw the boy race off to gather his things. \n\nOne of the women spoke to her. \n\n\"What is she saying Rakshan?\" Ariana asked. \n\n\"She is asking why you did that. She says he is dirty, he is from the other side.\" Rakshan replied. \n\n\"Tell her this: There is no such thing as dirty blood or being dirty because he comes from the other side. We are a community and we must learn to work together. We will never have anything if we continue to fight over the same small piece of bread. There is always something we can learn from each other. I encourage you all to do so.\" \n\nMeanwhile Aaryan exited the tent. He had gotten both sides to agree to continue the cease fire while he worked on a strategy and returned in a few days. \n\nHe watched Ariana shaking the hands of the women of the women of both sides as the children ran around them with smiling faces. \n\n\"What has she done?\" He asked one of his guards. \n\n\"She has adopted an orphan boy and is talking to the women about working together with the sick and the dead.\" The guard answered. \n\n\"An orphan boy?\" Aaryan asked in surprise. \n\n\"Yes, your majesty, him.\" He said gesturing toward Quadir who was running to Ariana. \n\nAaryan watched as she crouched down and spoke to him as they both smiled. \n\nHe approached them with an unreadable mask. \n\n\"Ariana.\"Aaryan said. \n\n\"Your majesty.\" She said with a bow. \"I would like you to meet the new Royal translator. I wish for him to teach me Omashi if it so pleases.\" \n\n\"Your majesty.\" Quadir began, \"I am Quadir, Royal Translator and protectior to Miss Ariana.\" \n\n\"Protector? That is a big job, are you sure you can handle it? Aaryan asked and Quadir nodded. \n\n\"Even from big men like me?\" Aaryan said, towering over him. \n\n\"Yes, sir.\" Quadir said, standing up to his full height. \n\nAaryan studied his face and looked him up and down. Ariana bit her lips nervously in silence. \n\n\"Well, in that case, you're hired...Please join us.\" Aaryan said and Quadir ran to the car. \n\nAriana and Aaryan walked slowly toward the cars as her shadows and kadshah flanked. \n\n\"Thank you for this, yoooour majesty.\" Ariana said playfully. \"How can I show you the proper thanks?\" \n\n\"I'm sure you will think of a way.\" He said smiling at her suggestively. \n\n\"You have a good heart.\" He said after a while. \n\n\"So do you,\" She said arriving at her car. \"You just try to hide it.\" \n\nShe wanted to kiss him then but knew she would have to wait until they were back at the palace. Instead she locked her pinky around his and gripped tightly. Their eyes conveying the love they had for each other, even though the words were yet to be spoken. \n\n****** \n\nNight fell as they drove home, and Quadir chatted excitedly with Ariana about how he would be the best Royal Translator and bodyguard she could ask for. ",
        "After 30 minutes of discussing his big plans, he fell asleep, his head falling onto Ariana's shoulder. \n\nAriana stared outside the window as her mind wandered. \n\n\"Stop the car.\" She yelled abruptly and the car came to a screeching halt. \n\nShe carefully moved Quadir and stepped out of the car, moving to what captured her eye in the distance. \n\nAaryan got out of his suv and walked toward her car as he tracked her movements with his eyes. \n\n\"What is she doing?\" Aaryan asked Rafiq. \n\n\"She said she has never seen a waterfall in the mountains before.\" Rafiq answered. \n\n\"Wait for us here.\" Aaryan said removing his jacket and tie and running after Ariana. \n\nAriana lifted her dress and slowly stepped knee deep into the beautiful blue green waters of the waterfall. \n\nShe sat on a rock close to the shore and listened to the rushing water as she faced the starlit sky. \n\n\"They don't have waterfalls in America?\" Aaryan asked sarcastically. He had removed his shoes and walked in the water to her rock. \n\n\"Can I tell you something without you laughing at me?\" Ariana asked when he reached her rock, she was visibly embarrassed. \n\n\"I promise not to laugh.\" Aaryan said as he smiled with his fingers crossed behind his back. \n\n\"I didn't know things like this existed over here. I thought it was all...\" She gestured with her hand \"...desert.\" \n\nAaryan let out a big laugh. \n\n\"Hey.\" Ariana said and tried to splash his face with water. \n\n\"The ideas you Americans have.\" He said continuing to laugh. He sobered when he saw the pout on Ariana's face. \n\n\"Join me.\" He said extending his hand. \n\n\"But I'll get all wet.\" She said looking down at her clothes. \n\n\"You're always wet around me.\" He said with a knowing grin. \n\nShe splashed his face with water as he chuckled. She tied her dress around her mid-thigh and stepped into water. \n\n\"Tell me about the conflict.\" She said as she put her arms around his neck. \n\n\"They are fighting over resources. The Awaan have a stream that runs through the mountain so they have access to fresh water and can grow a lot of leafy green vegetables like lettuce and spinach, and other vegetables like carrots and potatoes. The Imitti have this coastal area, and here they grow things like garlics, onions, spinach, squash and celery.\" Aaryan explained. \n\n\"Do they grow during the same season?\" Ariana asked running her hands through Aaryan's hair. Aaryan flexed his hands that were around her hips. \n\n\"No, the Awaan have a short growing season around late summer and the Imitti grow during the spring, fall and early summer.\" Aaryan answered. \n\n\"Well start there. They need to help each other in their off seasons. If they do, they will both have more crops and they can trade the resources they don't have. It is a win-win situation.\" She said as he pulled her toward the shore. \n\n\"The only problem is, they don't want to work together.\" Aaryan said sitting down on the grass and pulling her into his lap. \n\n\"I was thinking about that.\" She said straddling his waist. Her dress had risen higher. \n\n\"And the way I see it you have three options...Option 1: You can force them by law to work together.\" She said in concentration. \n\n\"Go on.\" Aaryan said caressing the tops of her thighs. \n\n\"Option 2: You can highly suggest that they work together but not formally force them to do so...and Option 3: You can lead by example and bridge the gap between both sides.\" She said looking at his face for answers. \n\n\"Hmmm.\" He began contemplatively. \"I agree with all of the options you gave...however...I think Option 3 is the best.\" He said quickly turning over and pulling her down on top of him on the grass. \n\n\"Aaryan!\" Ariana screamed. \n\nHe silenced her alarm with a hard kiss on the mouth. She immediately yielded and softened to him. \n\n\"You will make an excellent Queen. You did...well today.\" He said as he continued to kiss her. \n\n\"I just like solving problems. Speaking of which...\" She said suggestively as she brushed against his cock with her calf. \n\n\"No sex remember.\" Aaryan teased and she swatted his chest. \n\nThey laid that way for a while. Ariana laying on chest, stroking his hair and staring at the stars, while Aaryan held her and closed his eyes. \n\n\"This is a very weird situation that we are in.\" Ariana said tilting her head to the side. \n\n\"What do you mean?\" Aaryan asked, looking at her. \n\n\"If this was a normal situation we would be dating or we would be boyfriend and girlfriend.\" Ariana said looking at Aaryan closely. \n\n\"Girlfriend? I have never had a girlfriend before. I've never even been in love before. There has never been time for such things.\" Aaryan said with a confused look on his face. \n\n\"I know that you want to marry me, but don't you think before we walk down the aisle we should have some form of commitment?\" Ariana asked. \n\n\"Like an engagement?\" Aaryan asked. \n\n\"Yes, like an engagement. It will let all of the men at the office that I am off the market and show our level of commitment to one another.\" Ariana said with a serene smile. \n\n\"Is anyone bothering you?\" Aaryan asked with clenched fist. \n\n\"Not really anyone besides Fadil...\" Ariana said with a chuckle. \n\n\"This way we can let him down easy.\" Ariana said as she stroked his chest. \n\n\"I will take great pleasure and letting my brother know you are \"off the market\" girlfriend.\" Aaryan said and Ariana giggled. \n\nHe kissed her and then helped her right her clothes before they began walking back to the car. \n\nThey locked pinky's and he opened her car door and helped her inside. \n\nShe rode back to the palace with Quadir resting in her lap and a serene look on her face. \n\nShe had a family now. \n\n******* \n\nA few days later, Ghaniyah stopped by for their weekly informal Wednesday dinner. \n\n\"I'm glad you arrived early Ghani, we have much to discuss.\" Ariana said as she got the ingredients ready for the Chalua. \n\nShe had already mixed minced garlic, chopped onions, 1 \u00bd cups of water, salt and pepper, cayenne pepper, \u00bd cup of vegetable oil, cumin, and cilantro together and added it to the cooked lamb. \n\nNow Ariana was preparing the spinach and rice. \n\n\"Yes. I hear congratulations are in order my dear child.\"Ghaniyah said embracing Ariana and kissing her on both sides of the cheek. \n\nAriana blushed deeply as she lightly cooked the spinach in cooking oil and tossed it in a skillet. \n\n\"I know this is the right decision. I can help him and he can help me and we can have a wonderful life here together.\" Ariana said as she looked at Quadir in the distance. \n\n\"I'm so glad you have come to right decision. Now I don't want you to worry about any of the details, I will take care of everything but the dress. We can meet with the designer soon and go over what you want.\" Ghaniyah said as she prepared the basmati rice. \n\n\"That is great...\" Ariana said, with a hint of sadness clouding her tone. \n\n\"My dear...what is wrong?\" Ghaniyah said, putting the spoon down and reaching over to Ariana. \n\n\"My mother...my mother wrote me last week and...I don't know what to say or do.\" Ariana said looking at Ghaniyah for answers. \n\n\"What is this conflict between you and your mother?\" Ghaniyah asked in a motherly tone. \n\n\"My father died when I was 12. He had a stroke while behind the wheel of his car. I was devastated...After he died, his best friend helped us a lot. He would take my brother's to games, help me with my homework, look after my mom, etc.\" Ariana said with tears in her eyes. \n\nGhaniyah touched her arm lovingly. \n\n\"When I was 13, I caught him and my mom having sex. My father hadn't even been dead a year yet and she was already moving on with another man, and his best friend no less.\" Ariana said with a clenched fist as tears rolled down her eyes. \n\n\"Oh honey.\" Ghaniyah said pulling Ariana into a hug. \n\n\"What if she had been sleeping with him the whole time? That's a very fast time to just fall in love with someone. How could she do that? How could she do that to my father like that?\" Ariana said crying openly. \n\n\"Sit.\"Ghaniyah said gesturing toward the table. She turned the rice down low. \n\n\"My husband has been gone for 11 years. There is not a day that goes by that I do not think of him. I see him every time I look at the amazing children we were blessed to have. I see him in these walls, in the memories we shared, in the happiness we once had. That kind of love does not just go away.\" Ghaniyah began. \n\n\"I still love my husband but after he passed I fell in love again too.\" Ghaniyah said with a chuckle. \n\n\"How?\" Ariana said pulling her hands away. \n\n\"The heart is a strong resilient organ. It can be damaged many times over and repaired. You can think you will never get over some heart ache and then you simply do. The heart has the capacity for more than one great love. I love my husband, and no matter who I love or who loves me after that, it will not undo anything that he and I had. I still have the utmost respect for him and his legacy, and I will never speak ill of the time we had.\" Ghaniyah said. \n\n\"It is unfair of you to think that your mother should spend the rest of her days alone. It is childish and it is wrong. I'm sure you know that his best friend is a good man that treats your mother right. If you open yourself up to him, it will not erase any of the memories you had with your father or undo any of the love that you have. Don't be afraid. No one can ever replace your father in your heart.\" Ghaniyah continued. \n\n\"I just feel guilty.\" Ariana said in frustration. \n\n\"Don't, your father would want you all to be with happy. Let it go. Make amends with your mother. Your father would not be happy seeing you two fight like this. You are happy here with my son, yes?\" Ghaniyah said holding Ariana's hands. \n\n\"Yes.\" Ariana answered. \n\n\"Don't you think your mother deserves that kind of happiness too?\" Ghaniyah asked rhetorically. \n\n\"You are right. As always you are right. How do you know so much?\" Ariana said with a sniffle and chuckle. \n\n\"Truth is, I don't. But that is my secret.\" Ghaniyah said patting Ariana on the hands and once again stirring the pot of rice. \n\n\"Please go and tell Aaryan that the food is ready.\" Ghaniyah said. \n\nAriana wiped the tears from her face as she walked down to Aaryan's office. She found him asleep at his desk. She knew that he had been up late the previous night working on a solution with his advisors for the northeast region. \n\nShe looked at him as emotion washed over her. \n\nShe stroked his hair and whispered in his ear, \"I love you.\" She quietly left the room and had dinner with Ghaniyah and Quadir."
    ],
    "authorname": "PoeticallyPersonified",
    "tags": [
        "middle eastern men",
        "black women",
        "coed",
        "s&m",
        "interracial sex",
        "omash"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/heaven-in-the-desert-ch-04"
}