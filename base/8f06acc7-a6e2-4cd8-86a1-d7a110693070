{
    "title": "Confessions of a Fledgling Flasher",
    "pages": [
        "<p align=\"center\">True Confessions of a Fledgling Flasher</p>\n\n<p align=\"center\">Part One</p>\n\nA fan of Snap Shot shared a very personal story with me, asking me to tell it for her in a way that would help make her tale as enjoyable as possible to anyone who might be curious as to how one young woman became an unabashed exhibitionist. To prove to me that she enjoyed doing the things she said she did, the young lady sent me some amazingly brave snapshots endowing me with vivid views of a few of her naughty escapades out in public. I apologize that she has asked me not to share those pictures with you. Luckily, the young lady is very eager to reveal even the most intimate details of how she happened to become an exhibitionist, hoping that each and every one of you who reads her story will envision every moment as vividly as if you were actually there with her and seeing everything for yourself. To remain as true possible to what she confided, I have made as few changes as possible to her original narrative. Though I wrote this for her, every bit of it remains very much her story. You will discover her story doesn't follow the usual standard chain of events found in most erotic stories. The reason why, is because everything is true, and what you will read actually happened in exactly this way. I sincerely hope you will enjoy reading what this amazing young woman revealed to me as much as I enjoyed writing it for you.\n\nM. Millswan\n\nMy name is Jenny Lynn, and I must confess, I am an exhibitionist. Actually, I don't know if there could ever be truly just one exact definition for what I enjoy as my particular fetish. If it were possible for there to be just one word to tie it all up into one neat little erotic package, I think I would be very eager and very surprised to learn what that one word could possibly be. But what I do know, as surely as I was born a girl, is that I become extremely aroused and even deliciously sexually excited whenever I am presented with the occasion, either premeditated or accidentally, to expose my sweetest intimacies to those fortunate individuals with whom I am so lucky as to cross paths.\n\nAs is always the case with these types of \"things,\" it all seemed to start innocently enough. I experienced my all-important first occurrence at a relatively young age; though age, maturity and desire, regardless of what any legal statute may state can be quite subjective. I always remember my mother being so quick to tell me something along these lines, \"Jenny Lynn, you behave like a teenager who's actually going on twenty-five.\" See, even at an early age my Mom recognized I had the maturity and the desires of an older and more experienced woman who knows what she wants out of life.\n\nAnyway, I can clearly recall that fateful day at school, when I discovered the thrill of flashing. Right off, I knew how much I enjoyed the innocent cat-and mouse game of exposing myself well before it ever developed into my single most passionate pastime.\n\nI used to sit in the library for study hall and a boy, I'll call him, Gilbert, he would often sit across from me at the same table. Gilbert, of course, wasn't really his name, as like in the old television show \"Dragnet\" all names have been changed to protect the innocent. The only problem is who is ever truly innocent? Which is, of course, what makes life so much fun!\n\nAll that aside, in the study area there were about twenty tables, each only large enough for only four people to sit at, two on one side of the table and two on the other. I really didn't know Gilbert at all, except to see him at study hall. He never seemed to notice me either, and I don't recall if before that day if I even cared whether or not if he did. Though, for the both of us, this was about to change.\n\nOne day, as I so vividly recall as if it almost truly was, \"once upon a time,\" I was at school and wearing, as usual, a feminine, little light blue dress with a square cut neckline and white silk embroidery. Conservative and definitely a very proper kind of young girl's dress, it really wasn't what I'd describe as low-cut at all; so I was sure it was a very decent and respectable dress, the kind my mom and dad thoroughly approved of. That particular day I had a lot of Latin homework, and working through translations of phrases like, Carpe Diem and Modus Operandi, I spent more than two hours wading through it all. When finally I was finished and with that woeful task thankfully behind me, I began studying my algebra and then finally a little history. When I was done, I stood up to stretch, and as I was ready to leave I bent over the table to gather up my books.\n\nTruly, I hadn't planned for this, but as I struggled with the heavy texts, ever so innocently my neckline must have fallen away from my body, and the tops of my breasts became openly exposed. Sweetly oblivious to my social faux pas as I busily restacked my books, I happened to glance over at Gilbert across the table. You can only imagine my chagrin and surprise as I could not help but notice he was blatantly staring down the front of my dress and had his high school boy eyes fixed upon my breasts. He was so enjoying himself he didn't even notice I had caught him looking. In response to his reaction, I, too, looked down and was shocked to behold so much of my youthful bosom was so openly exposed.\n\nPerhaps as a fortunate accident, for Gilbert anyway, this morning I had chosen an old bra, which really no longer was ample enough for the amount my rapidly developing breasts had recently grown. The piece of lingerie covered my nipples and not much more. It certainly left more of me available to Gilbert's eagerly probing eyes than it concealed. To my own startled eyes my breasts appeared as if they were spilling out, and compounding my shock and surprise it actually appeared as if my nipples, at any second, might even slip into view with my very next deep breath. Embarrassed, but also touched with an entirely unexpected trace of something electrifying I had never experienced before, I lifted my eyes to glance back over at Gilbert.\n\nMaybe it was an ESP contact, but coincidentally, at the same moment, Gilbert's eyes came up to meet mine. And in sharing one of those memorable moments of moments, his response to being caught with his eyes in the cookie jar, so to speak, was to flush a bright and thoroughly guilty red.\n\nMy first and natural reaction was to be angry with him for looking down the front of my dress. But, I also realized the experience had actually caused me to feel quite excited in knowing he had just been afforded the opportunity to enjoy a public peek of my breasts. Even more exciting to me, for some reason, was the knowledge he had deliberately wanted to see my body. In fact, I was so excited at this discovery I found I just couldn't get it out of my mind and was even quite deliciously wet every step of the way walking home after leaving the library. All the while, I was reliving the clandestine thrill in envisioning myself so openly exposed in such a very public place and Gilbert shamelessly taking full advantage in enjoying himself by ogling my bared breasts.\n\nAfter that singularly life-altering afternoon my life would never ever be the same. Always being what my mother might define as a bit precocious, but what I would just call adventurous and fun loving, I vowed to wear dresses as often as I could. Not just any dresses, but dresses with scoop necks and short hemlines, those which could \"accidentally\" ride up my thighs as I sat studying so innocent and unaware, or even blow up about my waist when caught by a wayward breeze. While wearing this type of dress, and when the mood just happened to come upon me, I would sometimes allow myself to be \"careless\" about bending over, or in how I would sit. Not just in the library across from Gilbert, but I allowed this devilishly delirious delight to become an important past time in some of my regular classes and outside activities, as well. Employing the guise of sweet and girlish innocence as an alluringly important ingredient in my naughty little schemes, I always preferred if it seemed as if I was entirely naive and completely unaware any part of my underwear or body were exposed. But, of course, so much of the thrill was that I was fully aware of exactly what I was doing. This wonderful pretense was the illusion I could employ to heighten my own excitingly erotic thrill in providing my exposed body as a thrill to those around me.\n\nThen, on another day in the library, Gilbert, who now always made a point to sit across from me dropped his pencil and bent under the desk to retrieve it. Though my mother had trained me from an early age to sit like a lady whenever I wore a dress, I never really paid all that much attention to how my legs were positioned when they were under a table. Yet this afternoon, I realized while Gilbert's head was under the table my legs were in anything but a ladylike position of modesty. Gilbert, surely, must have received a pretty good glimpse of my panties, as he spent quite a long time looking for that pencil. This knowledge took me to an even higher level of thrill I could scarcely have imagined and excited me even more, actually opening up for me an entire world of new and exciting possibilities. After that, whenever we found ourselves studying together, Gilbert \"conveniently\" began dropping his pencil with an inordinate amount of regularity. Always eager to enjoy the thrill in fulfilling my newfound desire for excitement as well as his, I made sure to conveniently spread my legs whenever he did so.\n\nNever able to leave well enough alone and rest on my laurels, I decided to take it to another level. It was such a thrill to put my exhibitionist designs to the test and actually buy a pair of see through panties at the mall. Of course, I didn't let my mother see them, as she would have confiscated them in a heartbeat. She always bought me conservative white cotton panties, which were what \"nice\" girls should wear.\n\nFor me though, I couldn't wait to get to the library for study hall the first day I had stepped into my new panties. I was so excited; I was hoping as hard as I could Gilbert would be there to play his ever so important role in fulfilling the fantasy I was setting into motion. I was elated to see once I arrived he was there, already in his regular seat across from where I normally sat. Even better, fortune was indeed with me as the chair directly across was indeed vacant. My heart was pounding as I sat down, each of us pretending not to notice the other.\n\nAs a further enabler, I had worn a frilly white skirt, which was a little shorter than I usually wore. I wanted to be sure if the opportunity arose, and he so conveniently dropped his pencil, Gilbert would be able to treat us both to a really good look at my pussy. Before too long he dropped his pencil. What a surprise! With me keeping my nose in my book, even as he started to bend down, I opened my legs really wide. That in itself was worth the cost of the panties. But I would have gladly paid double or even triple such was my pleasure when I could actually hear him gasp as he saw the dark blonde hair between the spread of my legs for the first time. Having spent time testing this scenario in front of the mirror in my room I knew full well the panties were so clear it was almost as if I had nothing at all covering my little lips and even my vagina. So much more than excited; I was thrilled. It was extremely difficult to maintain my sweet pretense of ignorance and keep my eyes buried in my book the entire eternity that boy spent under the table searching in vain for that errant pencil.\n\nAs an added bonus, in short order I was treated to know just exactly how much Gilbert had enjoyed the view of my pussy I had just given him. Perhaps as a response to the heat he surely was feeling as much as I, the fire alarm bell went off, and we all had to get up immediately and leave the library to go outside. Poor, red-faced Gilbert. He even banged his head on the table as he attempted to scramble back onto his feet. As we all rose to begin filing out, he vainly tried to carry his books in front of him. But he was so excited, surely from just having seen what he thought was my bare naked pussy, he was doomed. I saw it as well as a number of the other girls with me; his schoolboy cock was sticking straight up creating a blatant bulge at the very front of his baggy pants. With the other girls oblivious to the true root of his misery, and me, of course thrilled by the secret knowledge of what I had done, we all giggled at his unfortunate state of distress as we made our way outside.\n\nFrom this day forward I began to work diligently as a pretty and sexually aware girl should at honing my skills as a fledgling feminine flasher. In almost no time I discovered it wasn't just my own thrill which was heightened exponentially if I could make it appear as if my exposure was an accident or unknown by me. I quickly learned those whom I treated to a quick flash of a naked nipple or an entirely bared breast, or even a long and heated gaze at my bared pussy as I sat at a desk with my skirt up my thighs and my legs open just enough for him to see, they, too were so much more excited if they thought the view was clandestine, and I was completely unaware. It became such an exhilarating challenge to find new ways in which to expose my body to an obviously very willing and very eager public. In seemingly no time since that first fateful day when Gilbert had educated me as to how much he enjoyed looking down my dress, I had my opportunity to graduate from a mere school-girl exhibitionist, to a full-fledged, femme fatale.\n\nI clearly remember it was on a Friday, and I dimly recall it was the thirteenth. I had gone over to my friend Kaylee's house to study. We had an important history of the American Revolution exam coming up the following week and really needed to study together if we were going to make sure we covered all the required reading. I had originally met Kaylee back in middle school. As giggly tween-age girls, a few times, we enjoyed sleepovers at each other's houses and would sometimes share innocent, little kisses while dressed in our nighties and lying close together in Kaylee's bed. Unfortunately, Kaylee and I had different friends and activities in high school, and didn't see much of each other over those years. Now that we were freshmen coeds at the same local university and had this history class together, it just felt natural to renew our friendship. That afternoon at Kaylee's house we could have studied anywhere, but Kaylee chose her bedroom. Her carnation pink room with its lacey white curtains looked almost the same as I remembered, and being alone with Kaylee in her bedroom made me feel a little bit like a middle school girl all over again. Of course, we both would never be able to forget our soft kisses and exciting, little touches as we lay together in the dark. Kaylee had twin beds, but we would share one during my sleepovers. It had been so much fun for Kaylee and me to take turns pretending to be this boy or that boy we liked at school. As I kissed her or she kissed me, we would imagine it was the press of his lips or the tickle and touch of his fingers he were feeling. Yet, being older now, we both had to act as though all that had never happened. We spent several hours quizzing each other on dates and battles and that sort of thing before Kaylee's mother surprised us by coming in to ask if we had looked outside lately. Of course, we hadn't. When we did, we saw that a huge amount of snow had fallen without us even noticing.\n\nSince I was barely out of high school and didn't own my own car, I had ridden my bicycle to Kaylee's house. I told Kaylee's mom I could walk my bike home, but she said it would be too dangerous for me to try to go home before the city plowed the roads. In those days, we didn't have cell phones. I told her I would need to use their phone to call my mother and tell her I would be home late. She surprised me by offering to call my mom and if I wanted to, she would ask if it would be okay for me to spend the night.\n\nI protested, saying I didn't want to be a bother and reminded her I didn't have any pajamas, a toothbrush or anything. Kaylee's mom said I wouldn't be a bother and I could borrow one of her nightgowns. Kaylee was quite petite, especially her little, teacup breasts. I was proud of having developed into a full-fledged 35 C, but since Kaylee's mom was even more buxom than me, I could only image any nightgown she loaned me would be large and loose fitting on my body. Her mom said everything else I needed wouldn't be a problem as Kaylee's dad traveled a lot, and he had several of those goodie bags the airlines give out containing toothbrushes and toothpaste and stuff like that. She then called my mom for me, and I was delighted to learn it wouldn't be a problem if I spent the night with them.\n\nKaylee and I studied for another hour, then her mom called us in to dinner. We ate in the formal dining room with her mom and dad. Mr. Taylor was in his early forties and very good looking and in excellent shape as a result of his frequent workouts using all the equipment he had in their basement Rec room. After dinner, Kaylee and I kept studying, and later, when we got ready for bed and changed clothes together in her bedroom, we were both giggling like middle schoolers once again. Kaylee, always such a good girl, kept her panties on under her nightgown. Me though, I have never liked to sleep in my panties, so I was completely naked under her mother's rather large cotton flannel nightgown. It had thin straps and was a bit low cut, but definitely not enough to ever be considered sexy by anybody except a flannel freak.\n\nTogether, like such sweet innocents, Kaylee and I strolled out to the living room to say good night to her parents. Their family custom, as was the same at my house was for a good night kiss. I had kissed Kaylee's parents good night when I had been at their house for sleepovers back in middle school, and though I was older now, I didn't mind keeping with the tradition. Her mom smiled and kissed me on the cheek, and I then walked over to her dad to kiss his cheek, as well.\n\nFor some reason my heart was already beating strongly in my breast as I came to him. He was sitting down in his easy chair, so I had to bend over to reach his cheek. As I did so, the left strap of the too-large nightgown slipped off my shoulder, and my entire left breast was bared to his view. I paused, momentarily frozen while Kaylee's dad looked directly at my openly exposed nipple only a few inched from his eyes.\n\nIt was truly a moment of moments. Actually closer to his lips than to his eyes, my nipple immediately sprang erect, as his eyes grew wide. Time seemed to stand still for me, but it couldn't have been more than a second, maybe two at most. Coming back to myself, I quickly pulled the nightgown back up, and overwhelmed with an excited flush and with my heart beating up in my throat, I gave him a quick little daughterly peck on the cheek. As I left the room, it wasn't lost on me he seemed to be looking at me quite differently from the way in which he had always looked at me before. Luckily, no one except Mr. Taylor had seen my nightgown slip down and openly expose my bare breast.\n\nThis became our very first secret.\n\nBack in Kaylee's room I could barely sleep. All evening, I had secretly hoped Kaylee and I might share a kiss or two again after going to bed, but now that we were older and had grown, it really didn't seem practical for us to sleep together in one of her twin beds. I was disappointed about not discovering if Kaylee was eager to resume the role-playing we had explored back in middle school. But I was so very excited at the thought that Kaylee's dad had actually seen my entire naked breast, that I had much more thrilling things on my mind. Adding to my excitement, in that long moment Mr. Taylor and I had shared, I could tell how excited he was at the sight of my body. While lying only a few feet away from Kaylee, very quietly and quite shamelessly I played with my pussy and my nipples for quite a while. All the while, and with Kaylee so close but completely unaware as to what I was doing, I was toying with myself between my legs, touching, tickling and shamelessly sliding my fingers so that I was trembling and shaking when I brought myself to the edge and then beyond. In my mind, I kept reliving that electrifying first flash over and over again. It was my own bare-naked nipple, only inches from Mr. Taylor's eyes. \"Naked,\" that word seemed to resound in my mind. There was simply no escaping the fact my entire breast had slipped out, and not only had Mr. Taylor not appeared offended, and he hadn't said a single word, but when I stood up, he actually smiled at me.",
        "It was this revelation I found as such a sweet icing on the cake of my own erotic thrill. He was a man, a full grown and mature man, and he had obviously been sexually arouse by our wonderful little accident. As I at last drifted off, my own juices so sticky sweet on my fingers and still so wet between my legs, I vowed to someday bolster my courage and see if I dared try to take it any further.\n\nIn the morning, Kaylee and I went out to breakfast still wearing our nightgowns. I saw Kaylee's dad looking at me speculatively. I thought he might be wondering whether the over-sized nightgown might slip down off my shoulder again. I didn't want to disappoint him, though I knew I would have to be careful so that neither Kaylee nor her mom would see. When both of them had gone into the kitchen to get the breakfast dishes and bring them into the dining room, I managed to drop one of my hair ribbons onto the floor, and in order to get Kaylee's dad's attention, I said, \"Oh darn, I dropped it!\"\n\nI bent down to pick it up with my back to the kitchen and my front facing Kaylee's dad. As I had hoped, and with only a little help from me squeezing in my shoulders as I had practiced in the bathroom that morning in hopeful anticipation, the night gown slipped off again. Only this time, both my breasts were bared. That moment was absolutely breathtaking. I might just as well have been topless out there in the center of their living room, and Kaylee's dad was staring directly at my naked breasts. Holding my breath, I somehow managed to wait a few long and luscious seconds and then, as if I had only just noticed that my breasts were exposed, I excused myself and pulled the nightgown back up.\n\nMy voice actually quaked, and I remember holding my hands apologetically clenched at my waist. \"I'm so sorry, Mr. Taylor.\" I brought my hands up to tug at the shoulder straps. \"It just slipped down.\"\n\nKaylee's dad folded his morning paper over his lap, looking me straight in the eyes. \"That's okay, Jenny Lynn. I think last night I realized the nightgown seemed a bit large for you.\"\n\nHe didn't mention at all having seen my breasts. But we both knew full well exactly what had happened. There just was no getting around it. I had stood there, right there in their dining room, basically topless and with him looking straight at me. Even if it had been for only a few moments, my nightgown had slipped down, and my breasts had been entirely exposed to him. And absolutely, positively, he had enjoyed seeing me.\n\nLater, at breakfast as I sat there across from Kaylee, I was so excited in knowing I had been able to expose myself to a good looking older man I could barely eat anything at all.\n\nHaving discovered how exciting this kind of flashing could be for me, as well as for the man who saw me, it quickly became second nature for me to flash whenever I had the opportunity. I began practicing on the buses in town. The first two seats on the municipal buses faced towards the rear of the bus. The rest of the seats faced toward the front. Most people don't like to ride backwards so the first two seats were always the last ones taken. I started sitting in those seats whenever possible. If a good-looking man was sitting across from me, or across the aisle from me, I would take out a book to read, and then, as if unaware, I'd let my legs gradually spread a little bit apart. My legs aren't skinny, and they definitely aren't heavy by any stretch of the imagination, so with my knees spread even the slightest bit apart, and with the right sort of skirt on, anyone sitting across from me could see all the way up to my panties. I found, too, that I really enjoyed sneaking a peek back and seeing men's eyes riveted between my legs. It was very, very exciting and even endowed me with a sense of power all at the same time.\n\nA few weeks after I had stayed over at Kaylee's that snowy day, I visited my friend again. This time, we had prearranged with our parents so I could stay overnight. I had planned accordingly and brought things to change into for sleeping and for the next day. Kaylee's dad seemed very pleased to see me. Her mom, too, but her dad was nice to me in a very different way. As we said hello, I knew I could see something in his eyes, a remembrance I hoped, but maybe even something more. And I knew full well, if I was lucky enough to have my way, he was not going to be disappointed at all by my visit.\n\nI was so excited all day, my thoughts always rushing back and forth between my last visit and what I had planned. After dinner and studying, Kaylee and I changed into our bedclothes. Kaylee wore the same nightgown she had worn previously, and again wore her prim, white panties under her nightgown. They were the same conservative white cotton girl's underwear my mom always bought for me. I, on the other hand was quite eager to set my plan into motion. I had spent so many nights in my bed planning and hoping that a next opportunity to experience once more such a deliciously clandestine thrill would eventually come my way. Now that it was here at last, I found my fingers a bit clammy at the mere thought of what it was I hoped would happen.\n\nWith great purpose and forethought, I had chosen to wear a very short white night gown of a diaphanous material. It wasn't quite see through, but almost. I had been delighted at home when I'd tried it on and looked in the mirror, and could see the slight telltale outlines of my nipples and a definite tease of darkness where my pubic hair covered my pussy. Now, in Kaylee's bedroom, I tried to strain my neck backwards to see if I could see the crack of my ass but I only ended up hurting my neck, and I definitely wasn't about to ask Kaylee to check. In any case, I knew from previous experience that with any amount of light behind me, it would definitely be possible for Kaylee's dad to see through the nightgown and enjoy all the shamefully delightful details of my naked body just beneath the gauzy fabric.\n\nThe nightie had a fairly low vee neckline, which enhanced the swell of my breasts. In anticipation of tonight, I had practiced bending over in front of the mirror at home, and I knew full well from the right angle it was possible to see all of my breasts and my nipples and even down to the triangle of hair covering my pussy. At this age, I hadn't begun shaving or even trimming yet, but my little blonde bush only served to make me look that much more feminine.\n\nI had been a little worried Kaylee might think my nightgown was too sexy, but since she obviously couldn't think of her own father looking at her in a manner that would acknowledge she was becoming a woman, I was pretty sure she would never imagine him looking at me in that way.\n\nWith my excitement building, Kaylee and I went out to kiss her parents good night. I was so pleased to see her mom was still sitting on one of their two couches in the living room, while her dad was sitting on the other, which was parallel to the first and with a low glass top coffee table in between. As we walked in, I saw her dad immediately glance up at me. I was rewarded in being able to notice right off he was acutely interested in seeing exactly what kind of nightgown I had decided to wear tonight. And adding to my own pleasure I was so delighted to see he cared.\n\nWatching my every move as carefully as he could, considering the circumstances, his eyes seemed to narrow a bit as if he was trying to make out whether he could actually see through the material of my nightie or not. And for my part, I was already so thrilled, and could only hope he would keep looking at me.\n\nKaylee kissed her mom first, then walked over to kiss her dad, who still had his eyes trained upon me. I turned my back to Kaylee's dad and keeping my long legs straight, I bent over ever so ladylike from the waist to give her mom a quick peck. As I did so, and as had happened when I'd practiced before the mirror alone in my bathroom for the entire week before going to Kaylee's, I reveled in the delightfully naughty sensation when the hem of my nightgown actually slipped up over the cheeks of my bottom, leaving most of my bottom bare, and perhaps even a peek at my pussy lips, openly exposed to his view.\n\nAs Kaylee turned away from me and was presently occupied with her dad, I knew she wouldn't be able to see how much of my intimacies her dad was able to enjoy. Even so, I didn't dare stay in this position for too long, just in case Kaylee did happen to glance back at her mom and me. With every moment I was learning. I knew from all of my earlier flashing at school and on the bus, that the risk of getting caught was a large part of the thrill. But I wasn't so young and na\u00efve not to realize that not getting caught is what makes the risk so worthwhile.\n\nWhen at last I stood up and turned toward Kaylee's dad, there was absolutely no doubt he had definitely been taking full advantage of the intimate view I had given him. I hazarded a quick glance down to his lap to see if what had happened to Gilbert had happened to him as well. The telltale bulge wasn't standing straight out as dramatically as Gilbert's had been, but there could be no question to my delighted eyes he had achieved the beginnings of a quite respectable erection. I was almost beside myself with elation, as I knew absolutely that the sight of my naked pussy had been the cause of his arousal.\n\nBut I had a problem. I desperately wanted Kaylee's dad to be able to look all the way down the front of my nightgown and completely see my naked breasts, my nipples and hopefully, even my pussy when I bent over to give him a kiss. Yet, I absolutly didn't want Kaylee's mom to see my naked bottom. That would definitely have put a dampener on the evening's fun. So on my way between the two couches I had a wonderfully nefarious idea, and turned to Kaylee's mom, asking sweetly, \"Mrs. Taylor could Kaylee and I please have some warm milk before we go to bed?\"\n\nKaylee's mom replied, \"Of course, dear.\" And, as I had hoped, she fell into my plan, and stood up, immediately going into the kitchen. Even better than I could have possibly hoped for, Kaylee offered to help, and she followed her mom into the kitchen, leaving me and Mr. Taylor suddenly all alone.\n\nWith my heart pounding in response to this unhoped for good fortune, I walked over to him and bent over right in front of Kaylee's dad. With that wildly delicious thrill of anticipation racing through me, I put a clammy hand on my shoulder strap, knowing it would cause him to follow and look in that direction. Then, finding my courage in my burning desire to actually go ahead and do as I had fantasized, I offered in a shy and coy little voice, \"I hope I don't fall out of this nightgown, too, Mr. Taylor. I certainly wouldn't want to embarrass you again.\"\n\nHe laughed, though he was already looking down the front of my nightgown, exactly as I had wanted him to. With his eyes taking me in he replied, \"Don't worry, Jenny Lynn. I wasn't embarrassed at all, quite the contrary. I'd like you to know I definitely feel you have blossomed into quite a very pretty and well-endowed young lady.\"\n\nMy toes gripping the carpet as butterflies stormed in my stomach, it was all I could do to find my voice and ask, \"Do you really think so?\"\n\nTaking his time, my excitement was such it was as though I could feel his eyes actually tracing every exposed curve. Giving into the thrill I even leaned over a bit more, feeling my nightgown fall completely away from my body. Then, hazarding a quick glance down of my own, I was electrified to see my own breasts and nipples so completely exposed, and even a quick flash of the pubic hair tucked between my legs. And time, for me anyway, seemed to stand still.\n\nWhen at last he looked up to meet my eyes, in a dry and shaky voice he even commented on how this nightgown suited me so much better than the one I had borrowed and worn the last time I was here.\n\nIn response, I thanked him, then playing the game; I gave him a very daughterly peck on the cheek and stood up just before Kaylee and Mrs. Taylor came back in with the warm milk. Actually, I despise warm milk and would never drink the nasty stuff at home, but it had been the only spur of the moment ploy I could come up with, which would get Mrs. Taylor out of the way for a moment.\n\nWith my palms clammy and sweating, my knees gone weak and my taut nipples tickling me under my nightie, Kaylee and I said goodnight, and we took our milk back to her bedroom. Of course, I forced myself to drink, but it was a small price to pay for the wildly incredible experience I had just enjoyed. When we went to bed and the lights were out, I played with myself for the longest time. Especially after Kaylee's breathing had become regular, and I knew she was asleep, I let my hands do what I hoped fortune might someday allow Mr. Taylor to do to me. Finally, and very contentedly, I fell asleep with my right hand tucked between my legs and my fingers lost amid the warm wetness.\n\nThe next morning, as usual I woke up early. Kaylee was still fast asleep, but I could hear someone out in the kitchen moving around. Then I remembered that Mr. Taylor had said last night that this morning he had an early indoor tennis game. Suddenly invigorated I hopped into the bathroom, peed, washed my hands, brushed my teeth and ran a brush though my shoulder-length dark blond hair. Standing before the mirror I quickly massaged my nipples, and was very pleased to see their stiffness was quite visible through the light material of my nightgown. And as always, it was a delight to know I wasn't wearing any panties under my nightgown.\n\nGoing out to the kitchen, I closed the bedroom door quietly, hoping it wouldn't squeak as it usually did, so as not to awaken Kaylee. Once down in the kitchen, to my great delight, I found it was Mr. Taylor in the kitchen and not Kaylee's mom up early to fix breakfast for her husband. We were all alone!\n\nTo my even greater delight, it was a very sunny day, even if it was still cold outside and there was still a blanket of snow covering the ground.\n\nI stepped up silently to stand in the light, then offered as sweetly as I could, \"Good morning, Mr. Taylor.\"\n\nThe Taylor's had a large picture window in the kitchen, which gave them a lovely view of their garden. It also allowed the sun to stream in, which I earnestly hoped would allow for a lovely view of me if I had in fact positioned myself correctly. Standing as I was, I was only too happy to allow myself to fall into the playfully sweet role of the young innocent who is entirely unaware she is revealing the intimacies of her body.\n\nMr. Taylor turned in response to my bright, \"Good Morning,\" and smiled, obviously genuinely happy to see me. Already dressed in his tennis shorts, he had his tennis cover-ups draped over his arm. He set his cup of coffee down on the counter and replied with such a sincere, yet masculine charm, \"And a very good morning to you, too, Jenny Lynn.\"\n\nWasting no time, as I had no idea how long I would have him to myself, I quickly positioned myself so the morning sun was behind me and shining through, causing my nightgown to go transparent and illuminating my naked body in silhouette within. Knowing full well exactly what I was doing, but feigning blissful oblivion, I followed Mr. Gibbon's eyes as they moved down from my eyes to my breasts and then between my legs, which I had ever so conveniently set fairly wide apart. With great glee, I saw his eyes actually widen, as obviously he could clearly see the spread of the gap between my legs and the darker outline of my pubic hair, exposed as openly as if I didn't have on any nightgown at all.\n\nFor me, all the while he was looking me over in great detail; I was reveling in wave after delicious wave of deliciously electric excitement. I remained posed in that position for a couple of minutes while we both somehow managed to act as if nothing at all was going on, even chatting lightly about his tennis match.\n\nEverything about the game we were playing was so absolutely erotic. Me acting as though I had no idea I was revealing myself to him, and Mr. Taylor pretending as though he was simply having a friendly chat with a friend of his daughter. While we were talking, I had glanced down a couple of times and could see for myself that with the light all around me I appeared as though I was wearing nothing at all. Deciding, though, to try a slightly different angle I swallowed dryly and moved my bare feet to angle my body a bit more sideways. Of course, all the while we were talking, my excitement was such that my nipples had hardened to the point I could feel the tips tickling against the fabric of my nightie every time I moved or breathed. With this change in position, my nipples were ever so sensitive and very noticeably erect, surely completely exposed to his eyes, but in silhouette, thanks to the warm morning sun shining through around me. My pubic hair, which I had fluffed up in the bathroom, though I couldn't see for myself, I knew, should be also quite visible from this new angle. Adding to my intense delight in knowing just exactly what I was doing, it was quite flattering every time Mr. Taylor would let his eyes stray from mine. Every time he did, with his next few words he'd suddenly stammer just a bit, delightfully distracted by my body as we continued to pretend to chat as if nothing was going on at all.\n\nThis was all so very exciting to me, but I wanted Mr. Taylor to see much more of me, and I had the distinct impression he did as well. A new plan formed in my mind as I remembered from when I had visited them previously, Mrs. Taylor kept the orange juice on the bottom shelf in the refrigerator. While still talking to Mr. Taylor I ambled over to the refrigerator and with my back to him, I opened the door. Thrilling every second as I made up my mind to just go ahead and do it, I positioned myself with my back to him and with my legs as straight as possible. Then I bent over totally from my waist, as if I really was interested in searching for the orange juice.\n\nIt was such a thrill to feel the hem of my nightgown slide all the way up my bottom and atop my hips until I knew I had to be absolutely bare from the waist down. With my pulse racing, as it had gone deathly still behind me, I moved my feet a little further apart as if to provide a better balance for my search, and even managed to push my ass a little backward and upward to make absolutely sure my naked pussy would be totally in view.\n\nI was so excited!\n\nAll pretenses aside, I was swimming in the delightful ecstasy of knowing my nightie had slid all the way up over my hips, and there just was no denying the luscious excitement and heart-pounding exhilaration of being totally aware I was now displaying my bare naked bottom and pussy to Mr. Taylor' eyes. I was almost beside myself, and I could feel my vagina becoming wetter and wetter between my legs. Yet somehow, I was sure if Mr. Taylor could tell what my exposing myself to him was doing to me he wouldn't mind.\n\nTaking my time and throwing caution to the wind I pretended I couldn't find the orange juice. With how I stood bent over, my nightie was hanging down off of my shoulders in front, and for me the sensation was as if I truly were completely naked. Searching, for what seemed the longest time, while carrying on a running if somewhat disjointed conversation, I finally marshaled my courage and asked Mr. Taylor if he could please help me look.\n\nThey had a cold storage refrigerator, which was very large, so there was plenty of room for both of us to rummage if that was what we desired. Mr. Taylor came up behind me, but although there was room for him to stand beside me, he positioned himself behind my bare bottom and slightly off to my right side. A delicious shiver passed through me as I first felt his left leg brush lightly and then more firmly against the back of my bare right leg. We stayed in this position for several long and thoroughly thrilling seconds. Then Mr. Taylor reached across me and said, \"Maybe it's over to your left, Jenny Lynn.\"",
        "With that, his left leg, as if by accident, slid to my left, and he nestled his muscular thigh firmly into the cleft of my naked pussy and ass.\n\nI gasped, but immediately pushed back against him. Mr. Taylor obviously understood this as the invitation it was. He, as well, threw conservative caution to the wind, and placing his hands about my waist; he moved over behind me and pulled my bare bottom tightly up to the front of his shorts.\n\nThere was simply no doubt now as to where we were headed. Here I was, his daughter's friend over for a sleep over, and I had my nightie up about my waist and was bending over and pressing my naked pussy up against the rock-hard bulge in the center of his shorts.\n\nAs a young girl this was something I definitely did not have happen to me every day. I had only seen and felt an erection a few times, and so I was beside myself to have an opportunity to enjoy his this morning in any way possible.\n\nMr. Taylor, his silence as strong as his hands, continued to nestle and press his erection more and more firmly into my bare-naked pussy. Bent over as I was, I was so hot and so wet with excitement. I was still very much a virgin, and though the idea of a man filling my vagina with his stiff penis was a little frightening, I found myself craving for Mr. Taylor to pull his shorts down around his knees, part my lips with his fingers and then thrust himself all the way up inside me. I was so eager and so willing to let him have his way with me however he wanted, yet that he was holding my hips with both his hands and then began to rub his stiff cock up against my pussy almost drove me wild. Starting to dip and then raise his knees repeatedly, Mr. Taylor was sliding himself back and forth up and down my slick pussy all the way to my ass and then back again. Breathless, my hair having come loose and hanging down about my face as I remained bent over with him in control behind me, I was in absolute heaven. Yet heaven became paradise in just another moment when Mr. Taylor, now holding the tip his cock firmly pressed up against the entrance to my vagina, bent further over me and moved his hands up from my waist to find and cup my breasts hanging free under my nightgown. I think I gasped, and hoping he would recognize the invitation for what I hoped he would, I reacted by pressing my pussy even more persistently into the bulge in the front his shorts.\n\nAt first deeply cupping my breasts to me with my ridiculously stiff nipples buried into his palms, he lifted away his hands, and a heartbeat later his fingers found my each of nipples. Still with the bulge in the front of his short buried between my pussy lips, he began to caress my nipples exactly as I had been craving for him to do. Every second of it was all so delicious, so intensely powerful in that what we were doing was so utterly clandestine and so spontaneously erotic.\n\nIn seemingly no time, the neckline of my nightgown had slipped down off my shoulders and onto my arms. When I looked down and saw my nipples between his fingers and thumbs, that I could see him touching my body in such an erotic way felt like a dream come true. Letting go of my nipples and Mr. Taylor gently putting his hands back on my hips and urging me to comply, he moved me away from the refrigerator and around to the kitchen table. Not knowing what might come next I was in absolute heaven as I was now even more eager than ever to let him do just exactly with me as he wished. Keeping behind me, without a word and using just his hands he urged me to lean over before him and spread both my hands apart on the edge of the kitchen table. Then leaving his left hand holding my hip, with his right he reached up and slipped my nightgown all the way up my bare back until it hung draped all the way up about my neck and shoulders. That for all intents and purposes he had me almost completely naked was something I hadn't even dared hope he might do. Bringing those firm but gentle fingers back to my breasts he once again started caressing and teasing first one nipple and then the other. Though I could only feel it and couldn't see it, the tip of his erection was making the front of his shorts stand up like a tent pole. When he pushed this into the open spread of my legs and begin once more to side that stiff bulge up and down within the lips of my soaking wet pussy, I couldn't believe how exquisitely exciting the sensations rushing all throughout my young body felt.\n\nWith my nightie now bunched up above my shoulders, and me for all intents and purposes naked as I bent over before him, I instinctually responded to what he was doing. Moving my bottom from side to side up against the rise and fall of his erection, I reveled in the different sensations of having his rock-hard bulge slide over against my right cheek, then my left cheek, and then press firmly right back into the center of my vagina.\n\nHere Mr. Taylor and I were standing out in the middle of his kitchen with the warm sunlight streaming in through the garden window. Entirely engaged in our erotic little rumba, we were both growing more and more excited. Yet neither of us dared to make a single sound, and there was something about the silence all around that served to fuel the clandestine thrill of doing what we were doing right out in the open. I didn't want him to stop anything he was doing, but at the same time I was becoming almost beside myself to feel him pull down his shorts and then plunge himself all the way up inside me. Even though his erection was still contained within his shorts, it felt so big and strong, and stiff. From playing with myself and fantasizing with my fingers what an excited penis would feel like inside me, I knew that within my vagina I was so tight Mr. Taylor might have trouble entering me. But that I was so hot and wet I didn't care. All I wanted was to feel him inside me.\n\nAs though he could read my mind, Mr. Taylor suddenly withdrew his fingers from my nipples, and behind me I could feel him start tugging at his shorts. The exquisite anticipation of what he was about to do to me had my breaths coming in shorter and shorter gasps as the electric sensations shooting from my nipples to my pussy intensified to the point I knew I would lose it the moment I felt the swollen head of his erection slid inside me. To get his shorts down, Mr. Taylor had no choice but to pull back and use both hands. As he did, I was about to burst from the pleasure of the anticipation when we heard the squeak of Kaylee's bedroom door. At that instant, as if stung, Mr. Taylor quickly jumped back and well away from me.\n\nI reacted as well. Standing up, I frantically began pulling at my nightgown, trying to get it organized and cover my naked body. With it all bunched up around the top of my shoulders I think I almost panicked, but luckily it really only took but a few heartbeats to get it down over my breasts and cover me again. Even as flustered as I was, I knew Kaylee was coming and would be here in just a few seconds. Spying the orange juice in the open refrigerator, I grabbed it up. Mr. Taylor had rushed over to the coffee maker sitting on the counter in the corner and began pouring himself a fresh cup. Truly, just in the nick of time, I put the orange juice down on the table and moved so that I would be away from the window and its stream of light. Just a heartbeat later, Kaylee came into the kitchen and sleepily bid us both an innocent, \"Good morning.\"\n\nAs her dad turned around with his cup of coffee, Kaylee glanced down at her dad's shorts and said, \"Oh, daddy, I think you've spilled something on your tennis shorts.\"\n\nI looked over to where Kaylee's eyes were and saw that there was indeed a large wet spot soaked into the white fabric at the point where the head of his formerly erect penis had been pressing into me but a very short time ago. I could tell Mr. Taylor still had somewhat of an erection, but perhaps because of his panic it was rapidly subsiding, and luckily, Kaylee didn't seem to have noticed.\n\nSeeming surprised, he looked down and said, \"Oh, you're right. How clumsy of me. I'd better go change. Thanks so much for pointing it out, Kaylee. I really wouldn't want to be late.\"\n\nSomehow, luckily, Kaylee hadn't noticed my own flush, probably attributing my color and rosy glow to the warm morning sunlight. Just like a couple of regular girls without any cares in the world, Kaylee and I had orange juice, cereal and tea and then went back to her bedroom to change for the day. All the while, if she had noticed the aroma of my arousal she didn't mention it. I have to admit I was surprised, as to me I was still absolutely smoldering within. Throughout the rest of our day, my thoughts kept fleeing back to those incredibly exciting moments and wishing, wishing for another occasion, which would allow me to come back for a visit with Kaylee as soon as possible."
    ],
    "authorname": "M. Millswan",
    "tags": [
        "exhibitionism",
        "voyeur",
        "first time",
        "flasher",
        "confession"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/confessions-of-a-fledgling-flasher"
}