{
    "title": "I'm Dreaming of a Hot Christmas",
    "pages": [
        "This one is for the  and as always, your votes and comments are much appreciated.\n\nEveryone in this story is over the age of eighteen and more than happy with everything that's going on.\n\nPEYTON\n\nBest New Year's party ever!\n\nThe girls and I were having a blast. Singing at the top of our lungs, mostly off-key, dancing on my mother's antique table in the middle of the dining room, and shaking the hell out of our booties.\n\nAll of us laughed our asses off as we watched Keisha trying to get her drink to her mouth. Obviously not having much success. We all giggled, watching it dribble down over her chin and soak through her red silk slip dress, plastering it to her body like a second skin.\n\nOkay, so it looks like we might have had a few too many. But tonight, was a night to celebrate. As well as a night to try and forget. Keisha and I were both flying solo since we'd broken up with our boyfriends. So, who could blame us for partying like it was 1999.\n\nEven the guys were singing along and rockin' to Gloria Gaynor's anthem, I Will Survive. Until I gasped and I let out a squeal, as it suddenly occurred to me that I should have ditched my six-inch heels before I got up on the table, when I twisted my ankle and felt myself falling.\n\nThankfully someone caught me, when I landed hard in the arms of something as big and solid as a tree trunk. Wrapping my arms tight around his neck, I looked into his deep brown eyes, and could tell he wasn't the least bit amused, and actually looked a little annoyed.\n\nHe might be big and brawny and sort of handsome if you were into cavemen, but Dash was such a kill joy. If he wasn't my brother's best friend, I don't know if I'd have anything to do with him.\n\n\"I think you've had enough,\" he said in a deep rumble as he turned on his heel and started carrying me down the hallway and up the stairs towards my bedroom.\n\n\"Says who?\" I tried to wiggle free, but he hung on tight. No freaking way was I leaving my own party, just because this big brute decided to ruin everything, show up and tell me it was time for bed.\n\n\"Says, me. I think you've had enough fun for one night.\" He cocked an eyebrow glaring me down, daring me to disagree. \"Your brother asked me to drop in and see how things were going. And you're just lucky I walked in when I did, or you might have broken your pretty little neck falling off that table. How much have you had to drink tonight, Peyton?\"\n\nI wrinkled my nose wondering what business it was of his as I shrugged and told him, \"I had a few shots.\"\n\nHe chuckled, though he didn't seem to think it was funny, that I'd had a little too much to drink. \"I'd say you've had a helluva lot more than a few. So, I think it's time you called it a night, Princess.\"\n\nI was so shocked, my mouth fell open. The nerve of the guy, trying to tell me what to do in my own house. \"You can't tell me what to do,\" I blurted, not really caring what he thought.\n\nHis grin was positively feral as he lowered his voice, leaned in and whispered against my lips, \"You ever been spanked?\"\n\nStaring into the heat in his eyes, I swallowed hard and shook my head, knowing he'd be the type to do it, too.\n\nOne thing about Dash, he always followed through when he said he was going to do something. Which normally was a good thing, like the times he'd been kind enough to offer to pick me up from school when it was snowing. But not so much now when he was threatening to tan my ass.\n\nCrazy thing was, I realized I was equally annoyed at the idea of him thinking he could man handle me, as I was turned on. Already imaging him sitting on the edge of my bed with me bent over his thickly muscled thighs, sliding my dress up over my back, and tugging my panties down, till he was smiling down at my bare ass ready to swat it.\n\nI could actually feel my chest heaving as my sex nearly flooded, thinking how hot it would be to have him sliding his big, strong hand over my bare backside, giving me a little message before he lifted his hand and gave me a smack. And if I was lucky, he'd slip a finger into me while he was at it.\n\nThough I knew I shouldn't be getting excited, considering I didn't even like him, he was so bossy. And yet, maybe because he was such a control freak, I had a pretty strong feeling he'd be dynamite in bed.\n\nOne thing I knew for sure, he was well hung. I'd seen him in a bathing suit, and I remembered my eyes almost bugging out of my head, when I realized he was big all over. Really big, from what I could tell from the huge bulge he was rocking in his board shorts.\n\nForcing aside the kinky thoughts filling my head, I wasn't above begging, if it meant I got to stay at my party. I looked into his eyes, pleadingly. \"Dash, I promise I won't have any more to drink, okay? And no more dancing on the furniture.\"\n\n\"Yeah, I can just imagine how pissed your mother would be if she caught you messing up her precious Duncan Phyfe dining table.\"\n\nI gave him an eyeroll, because we both knew my mother didn't give a shit what I did, as long as I stayed in school and out of her hair.\n\nAnd I told him so, too. \"If she ever gets back from Europe, probably just for a touch up with her plastic surgeon, I doubt she'll give a damn what's happened around the house while she's been gone, because she's never cared before.\"\n\nDash stopped in the doorway of my room, and I instantly averted my gaze, hating the pity I could see in his eyes.\n\nEveryone knew I was a mistake, and my parents only had me to try and save their marriage. Though they were basically done with each other before I came along. And when they accepted defeat and went their separate ways, neither of them was all that interested in getting overly involved with the kid they'd left behind.\n\nThough there was never any love, but always plenty of money, with both of them coming from uber wealthy backgrounds, I was sent to loads of fancy boarding schools almost from the time I could walk.\n\nNow I was going to an Ivy League college, so I could graduate and go off and lead a life of my own. Undoubtedly, so they could wash their hands of me for good, feeling like they'd done their duty.\n\nHating to see me abandoned, my older brother and sister stepped up and tried their best to take a hand in raising me.\n\nThough I'd never really had much to do with my parents, I don't think I turned out too badly. I've never tried drugs, or ever been in trouble with the law. And I got excellent grades, usually top of my class. Although, I think I tried a little harder just to prove I could do it without the help of the people who were supposed to have been taking an interest in me, but never did.\n\nDash rested his forehead against mine, and with me still cradled in his arms, chest to chest, it did feel pretty intimate, though I knew he was just thinking. Probably wondering if he could actually trust me to behave.\n\n\"Okay,\" I told him, \"I know things got a little crazy tonight. But I'm not a baby anymore, that needs minding. I'm twenty-one now. And I'm a full-grown woman with a mind of my own. You might not believe it, but I'm not the party girl everyone thinks I am. I've got plans. I've got a seed of an idea that could help a lot of people.\"\n\nHe shrugged. \"Then why don't you stop acting silly and prove it.\"\n\nI thrust out my chin and looked him right in the eye. \"I will, just as soon as I've graduated. It's just that all of us have been studying really hard. And this is New Year's Eve. So, what better time to kick back and have a little fun, if not tonight?\"\n\nWhen he didn't say anything, I decided a little teasing wouldn't hurt as I pleaded my case. Stroking my hand along his strong, bristled jaw, playfully rubbing my nose against his I whispered, close to his lips, \"I'll tell everyone to tone it down, okay? No more dancing on anything but the floor. If you think it's too loud, I'll even turn the music down. And I'll take their keys and call everyone an Uber when it's time to go home. I won't let anyone drive home drunk, I promise.\"\n\nHolding my gaze, he gave me a little squeeze as he let out a breath. \"Peyton, I just don't want anything to happen to you on my watch. With your brother off in Asia and your sister home with her new baby, they're counting on me to look out for you. So, you'd better behave yourself. I was young once. And I know you're just having fun. But don't do anything crazy you might regret, okay?\"\n\nI knew he was the same age as my brother, who'd just turned thirty-seven. So, Dash was hardly what I'd call ancient. Ignoring the bit about him being young once, I nodded. \"Okay, I promise.\"\n\nSince he still had me in his arms, unable to resist, I cupped the back of his head and brushed a quick kiss across his beautifully shaped mouth, just to see what it would feel like. Ooh, and it really did feel nice, even to just barely feel his soft, warm lips against mine.\n\nDash was so shocked he almost dropped me.\n\n\"You shouldn't be kissing me,\" he muttered, sounding gruff again, as he cleared his throat and set me back down on my feet.\n\nI just smirked, finding it kind of funny. \"Relax Dash, that was just a little thank you peck, for accepting the fact I'm an adult now, all grown up. No big deal.\"\n\nHis gaze slid over me and he slowly began to nod. \"Yeah. I can tell you're not a kid anymore, especially when you're dressed like that.\"\n\nI looked down at myself in my short, black body-hugging sheath dress. The way it showed off my girls with a nice display cleavage, with my back bare, I guess it was little on the sexy side. Especially with my long blonde hair up in a pretty updo for a change, along with my come fuck me heels making my legs look like they went on for miles.\n\nNow that that was cleared up, I took his big paw of a hand in mine and led him back downstairs to the party, and suggested, \"Why don't you stay for a drink, Dash?\"\n\nHe shrugged. \"Yeah, I might.\"\n\nDASH\n\nAs I sat down with a beer and started talking with a couple of guys who were watching the countdown celebration at Times Square on TV, my gaze kept drifting over to Peyton, laughing and dancing with her friends.\n\nIt was well over a year since I'd seen her, and I don't remember her ever looking this sexy.\n\nAll I knew was, considering that she was my best friend's kid sister, I had no business getting aroused when I had her in my arms. Even now, I could feel my cock twitching, as I imagined what it would feel like to peel her out that little black dress so I could explore every inch of her smokin' little body.\n\nThough in a dress like that, I didn't have to imagine much. Her tits looked amazing, high and perky, a perfect handful. Perfect, nice round booty, and long lean legs, I could almost feel wrapped around my waist as I sank into her nice and deep.\n\nI was so lost in my thoughts, I actually jumped, feeling guilty, when the guy next to me called out to the room, \"Hey, they're starting the countdown! Quick, everyone grab a drink to toast the New Year.\"\n\nI got up and poured a glass of champagne for Peyton and one for myself and passed the bottle along. We smiled into each other's eyes as we counted down, \"...5, 4, 3, 2, 1!\" Everyone yelling Happy New Year! as we clinked glasses. Then she shocked the hell out of me when she wrapped her arm around my neck, tugged my head down and really laid one on me.\n\nI know I should have pulled away, but I just couldn't hold back. Though it started off slow, the longer we kissed the heat kept building. Till I had my hand on her ass, and my cock pulsing like a bitch as she wrapped her arms tight around my neck, pulling me as close as she could, her leg sliding up my thigh, with her taut little nipples grazing my chest. Our tongues tangling, both of us moaning, we kissed for what felt like hours, though it was probably only a few minutes of pure heaven.\n\nCupping her face in my hands, I studied her eyes when I pulled back, wondering what she was thinking.\n\nHer big blue eyes dark with arousal, she gave me a sultry smile. \"I've always wondered what it would feel like to really kiss you,\" she whispered, turning her head and pressing a kiss into my palm.\n\n\"We shouldn't be doing this,\" I said, dropping my hands as I stared mesmerized into her eyes. Even as my body begged me to pick her up and carry her back to her bedroom so we could finish what we started.\n\nShe nodded and looked a little disappointed as she agreed, \"I know.\"\n\n****\n\nThat was the last time I saw her, till I heard through her brother that she'd graduated from college top of her class and started a business working with women trying to get back in the work force.\n\nFinding myself with a little time on my hands, driving by her brother's building, I stopped and went up to see him. I'd just walked into his office, and he laughed when he saw me and got up and shook my hand. \"Hey, good to see again, stranger.\" Then he noticed my smile, and remarked, \"You look happy.\"\n\nI gave him a shrug as I took the seat across from him at his desk. \"I just sold that house I'd been working on for the last four months, well above asking.\"\n\n\"Good for you, glad to hear it. I don't think I'd have it in me to work that hard to get those places ship shape, and then just list them and sell them off and go onto the next one.\"\n\n\"I like house flipping. It's a fun way to make a living. I'm my own boss, set my own hours. It's never easy, but it pays off in the end. Like I told you, it runs in the family. My dad used to do it with my uncle. And growing up working with them every summer, I got the bug.\" I reached for the bottle of water he handed me, nodded thanks, and took a gulp. Wiping a hand across my mouth, I shrugged. \"It is hard work. But it's rewarding to transform these places into homes for families that I know are going to enjoy living in them.\"\n\n\"I'm sure they will. Because I know you don't cut corners.\"\n\n\"No. Never.\"\n\n\"Hey, now that you're between projects, since I've got a few meetings overseas, I wondered if you'd mind looking over my sister Peyton's new place to see what you think.\" He explained her plan to help give women that needed a leg up, a chance to get back in the work force.\n\n\"She's got good people assembled to help her, working with resumes and job searches, even make- overs and new clothes. Basically, providing everything they need to give them the confidence to land a job.\"\n\nI smiled, pleased to hear that she'd followed through and done what she'd said she was going to do. Knowing after she'd finished college, she'd want to do something worthwhile with her life, I was more than willing to help her any way I could.\n\nI often worked with her brother Josh, and whenever he mentioned his sister Peyton, I stopped whatever I was doing, curious to know how she was making out.\n\nProud that she'd turned her focus to something worthwhile where she knew she could help women at a crossroads in their life, Josh was eager to do whatever he could to help her succeed. And feeling the same way, I was more than willing to do whatever she needed of me, even if it meant working to get her office up and running.\n\n***\n\nWhen I pulled up in my old beater of a truck, Peyton was standing outside looking over the building, talking to one of the workmen.\n\nI laughed at the way her face lit up when she saw me. And I gotta say I felt a little glow inside, the moment I saw her again, too. Pretty as ever, pale blonde hair back in a ponytail, dressed in skin tight jeans and white tank top covered in a dark blue plaid shirt, she had tied around her waist. Because it was a hot one today, especially for early September. Even dressed down, she still looked pretty enticing.\n\nAs exuberant as ever, she ran up to me laughing and threw her arms around my neck and pressed a big noisy, smacking kiss to my cheek, as I lifted her off her feet and hugged her back.\n\n\"It's so good to see you again, Dash.\"\n\nSomehow, she seemed more mature, probably because she'd finished with school, and had taken on a job that meant something to her.\n\n\"Just came by to see if I could help.\"\n\nAs we both looked over the old abandoned supermarket, she let out a sigh. It wasn't exactly pretty, and looked even sadder with some of the neon lettering gone, so it read, \"ood art,\" instead of what I assumed was Food Mart, when it was up and running.\n\nEyeing the sign that needed to come down, she muttered more or less to her herself, \"There's just so much to do, I don't know where to start.\"\n\n\"Mind if ask? Did you buy this place, or are you renting?\"\n\n\"Oh, I'm just renting for now. I think it's big enough for what I need, and right on the bus line, which is what I wanted. But until I know if it's going to work in this location, I thought I'd better just pay month to month for now.\"\n\nI nodded, taking a longer look at it, thinking at least it looked pretty solid. \"Good idea. Well, I guess I'd better get up and have a look at the roof.\"\n\nShe touched my arm. \"Dash, only way I'll let you help, is if I get a bill for every minute you spend here, okay?\"\n\nI just smiled and said, \"Sure.\"\n\nNot that I looked it, because I'd never been one to be flashy, but I had plenty of money socked away. On my own, I didn't need much to get by. Nearly every cent I made I invested, so I was doing way more than okay. And I sure as hell didn't need anything from her.\n\nI was helping her as a friend, and not looking for a pay check.\n\nI was on the roof, pleased to see it looked okay, and the vents looked to be in pretty good shape, too. At least she wouldn't have to do anything up top.\n\nA young guy followed me up, and asked, \"What do you think of the roof?\"\n\nI explained that it would still be a few years till she'd have to worry about replacing it. Then looking over the side, I noticed a couple of workmen down below on the street elbowing each other and smiling their asses off as they watched Peyton bending over in her car to get something.\n\nThe young guy beside me was grinning, too. He shrugged as he eyed her cute little ass. \"One of the perks of this job has got to be working for a woman as good looking as Peyton.\"\n\nObviously, he didn't know that she and I were friends. I didn't say anything. But he might have figured out from the narrow-eyed look I gave him that I didn't like the idea that it seemed like her whole crew was just itching to get at her. Especially since she was paying them to work, and not to stare at her ass.\n\nWhen I got back down, Peyton showed me around inside and I took a long look at the floors, checking for cracks and chips and obvious signs of wear.\n\nShe looked a little anxious as she cast her gaze around the big, cavernous space. \"So, what do you think, Dash? Will I have to replace the floors?\"\n\n\"Actually, this old terrazzo flooring is in pretty good shape, considering the age of the building. Once I give it a good cleaning, sand it down, and give it a polish, I think you'll be surprised at how good it'll look.\"\n\nShe let out the breath she'd been holding and managed a smile. \"Well, that's good news. To know that the roof's good and so are the floors. Now, let's go look in the back.\"\n\nShe walked me through a set of double doors, to what I imagined was the stock room when it was a grocery store.\n\nStopping and looking around, Peyton said, \"I think this would be a perfect place to hang the clothes.\" She pointed at the wall by the door. \"I imagine I could get at least four fitting rooms against that wall, and it wouldn't be too cramped.\"\n\nI nodded as I looked around. \"I think it'll look pretty good when it's all cleaned up and painted.\"\n\nShe wiggled her eyebrows. \"I think it'll look great.\"\n\nShe pointed back at the big room we'd just walked through. \"I'll have desks set up in there for the staff to work on our client's resumes, to help match them up with jobs. And in here, they can get some new clothes and even have their hair styled and get some tips on makeup, to get themselves work ready. Thankfully, there's already plumbing back here, so I think it'll work, without having to dig up the floors.\"",
        "I nodded, impressed that she'd thought it through.\n\n\"Oh! I almost forgot.\" She grinned, looking excited. \"We've got a fund-raising dinner this Saturday, and I hope you can come. It should be a fun night. I can't believe how many people wanted to help out once they heard what I was doing.\"\n\n\"Is it formal?\" I asked, almost hating to hear her answer.\n\nShe nodded as she looked me over in my jeans, denim shirt and scuffed, steel toed work boots. \"It is. But I think there's a rental place up the street. So, I should be able to find you a nice-looking tux in there.\"\n\n\"No worries. I'll take care of it.\"\n\nAs we walked back outside, she asked, \"So, where are you staying, Dash?\"\n\nI moved around a lot, and sometimes just took a room in a motel so I'd be nearby whatever house I was working on. Right now, I hadn't figured out where I was going to stay, if I was going to be working on fixing this place up.\n\n\"Not sure, yet. Maybe I'll get a room somewhere.\"\n\n\"Or, you could stay with me. There's plenty of room in the house. You could basically have your own wing.\"\n\nI was already shaking my head, about to tell it was never going to happen, when she got a call and got into a conversation about the menu for the dinner.\n\nCovering her phone with her thumb, she dug into her purse, and quietly whispered, \"Here, Dash. Let me give you a key, so you can get settled in.\"\n\nAfter she'd handed me the key, when she turned her head and I heard her say, \"Well I've got at least a half dozen vegans and four vegetarians, and I'd love it if you think of something creative. I know no one likes to see other people enjoying a gourmet meal, when they get served a plate of rice and beans.\"\n\nI looked at the key in my hand, and wondered if I should hand it back. Seeing Peyton already walking back through the building, deep in conversation with the hotel, I decided maybe I'd stay for a night or two, and look for a decent motel around here in the meantime.\n\nWhen I started up my truck, I noticed Peyton smiling and waving goodbye from the window and I waved back, wondering if I was crazy.\n\nI had no business staying under the same roof with her. And knew her brother wouldn't exactly be thrilled to find out I was shacking-up with his kid sister, when he'd only asked me to give her a hand with the building.\n\nStopped at a red light, I noticed a formal rental shop just up ahead, and thought I might as well go in and look for a tux. Probably the only time I'd ever wear one, considering that Peyton was the only person I knew who could ever talk me into dressing up like a penguin.\n\nWhen I walked through the doors, the salesman took one look at me, smiled and pointed to the big and tall section at the back of the store. Being six foot six, and wall to wall muscle, made it hard to find things that fit. Looking over what they had, I was glad they had some decent looking suits that looked like they were custom-made to fit a guy my size.\n\nAfter I tried on a black Armani and stepped out of the fitting room to see how it fit, the man looked me over and nodded. \"I think that's a good fit and a nice look on you, sir. Classic black never goes out of style.\"\n\n\"Okay, I'll take it.\" I hesitated as I looked at myself in the mirror. \"Actually, on second thought, I'll buy it. Save me having to bring it back.\"\n\nOnce he'd fixed me up with dress shoes, a shirt and bow tie, as I walked the garment bag out to my old truck I shook my head, and muttered, \"Only for you, Peyton, and nobody else.\"\n\nIf I was staying overnight, I thought I'd better pick something up for dinner and maybe breakfast, if we going to be eating together.\n\nI grabbed a cart outside a little market near her house, and headed for the steaks at the back of the store. Still finding it hard to believe I was doing this, staying alone with Peyton, which I already knew could be a recipe for disaster.\n\nLooking over the steaks, not sure what I should get, I muttered to myself, \"Shit, I don't even know if she likes steak. Maybe I should get some salmon.\"\n\nThe lady next to me lifted an eyebrow and carefully took a few steps back, probably wondering if there was something wrong with me. Couldn't blame her, since I was wondering the same thing myself. And I actually considered phoning Peyton and telling her I'd found somewhere else to stay. But hating the idea of lying to her, I grabbed two sirloins and went to find some salmon.\n\nDriving along her beautiful, tree-lined street as I turned right at her house, I noticed Peyton's little black beemer already parked in the circular driveway. Noticing the other luxury cars parked outside her neighbor's homes, had me wondering if I should park my old beater where no one would be able to see it. I didn't want anyone talking about her. And I sure as hell didn't want her to be embarrassed about the old rust bucket I drove.\n\nI noticed the side drive, that probably wound behind the pool house, put my truck back into gear and headed back there.\n\nPeyton smiled when she saw me at the kitchen door and pushed across the sliding glass doors and helped me carry the groceries inside.\n\n\"What the heck did you buy, Dash?\" she asked as we carted everything over to the center island.\n\n\"Just some food. Thought I'd make us some steaks or maybe salmon, for dinner, with baked potato and salad, if that's okay.\"\n\nSmiling, she shook her head at me. \"I don't know why you bought so much. I do keep some food in the fridge, you know.\"\n\nAbout to tell her it was just a little something for dinner, when I finally looked at her in her little cut off shorts and halter top, obviously braless, I kind of forgot what I was going to say.\n\nNow, if I was smart, I'd turn around and go back outside, back my truck the hell up and leave. But no one ever said I was smart, considering that I earned my living working with my hands, and I never went to college.\n\nShe noticed the black bag draped over my arm, and grinned. \"Did you already pick up the tux?\"\n\n\"Yeah, I got it on the way here.\"\n\nSmirking, she gave me a little wiggle of her eyebrows as she looked me over from head to toe. \"Now I can hardly wait for you to try it on for me.\"\n\nPeyton was always a little flirty, and I knew she didn't mean anything by it, it was just who she was.\n\nBut considering how hot she looked in her bare feet, with her butt cheeks showing at the bottom of her shorts when she bent over to get us a couple of drinks from the fridge, her kind of teasing was the last thing I needed.\n\nI remember that hot kiss we shared on New Year's, like it was yesterday. It played in my head a lot, and kind of haunted me. And seeing her half-dressed was having the same effect on me now, as it did that night. I could feel things staring to stir, and knew I'd better get outside and start heating up the barbecue before things started to heat up between us.\n\nLike they say, if you can't stand the heat, get the hell out of the kitchen.\n\nAfter she tossed the salad and I'd cooked us the steaks and a couple of baked potatoes, we ate dinner on the patio by the pool.\n\nLooking out across their yard, I realized it was a good thing they had such a beautiful tranquil garden, filled with artfully arranged groupings of flowers and well-tended trees. Mostly, because it gave me something to look at other than Peyton, who was looking a little too tempting to resist.\n\n\"So... what did you think of the building, Dash?\"\n\nI finally turned and looked at her and told her the truth. \"For what you have in mind, I think it'll work.\"\n\nShe flashed me a pretty smile. \"I'm glad you dropped by to take a look around. You know a lot more about looking for problems with a building than I do. And I trust your opinion.\"\n\nI just shrugged and said, \"Glad to help.\"\n\nWhen we'd finished dinner, Peyton got up to clear away the dishes. But before she did, she wrapped her arms around me from behind, pressed her warm, soft breasts against my neck and dropped a kiss on the top of my head. \"Thanks for dinner, Dash. And for coming today to check the place over.\" She dropped one more kiss on my head, hugged me a little tighter, dropped her voice and whispered, \"And thanks for agreeing to stay. It's really nice having someone else here, instead of being on my own. Sometimes it gets a little lonely.\"\n\nWhen she let go and picked up the plates, feeling a little overwhelmed, I cleared my throat. \"Yeah, I know what it's like, being on my own most of the time.\" I smiled at her and agreed, \"It is nice to have some company.\"\n\nShe had a big beautiful house, but it felt so empty without any family. After she told me how much it meant to her, I decided I'd stay until we got her office up and running. Providing of course we could manage to keep our hands to ourselves.\n\nI got on my jogging shorts and went for a run after dinner. I liked to get out and get moving. Even if I'd worked hard all day, running gave me a rush I didn't get from anything else.\n\nWell, maybe except for sex. That felt better than anything.\n\nOf course, then my mind went straight to Peyton. Imagining what she'd look like naked on her back, smiling up at me with those big blue eyes dark with arousal, just waiting for me to sink into her nice and deep.\n\nPicking up my pace I ran even harder, to try and get her out of my head. If we were going to do this, I knew I had to stop thinking of her like someone I could be with, or it was never going to work.\n\nWhen I got back to the house and walked past the family room, Peyton was on the couch, painting her toe nails, in just a baggy T-shirt and panties. Holy fuck. Just what I needed, now that I'd managed to clear my head.\n\nHer legs were bare. And there was just so much of them to see in those tiny little pink panties, I had to keep my focus on her face, so my mind wouldn't wander. She noticed me standing there and she looked up and smiled. \"How was your run?\"\n\nWiping the sweat off my forehead I told her, \"It's nice running around here. I did a few circuits around the pond and met a big, red dog that was pretty friendly.\"\n\n\"I should join you next time, that sounds like way more fun than my treadmill.\"\n\nI'd kicked off my running shoes at the door, and looking down at my bare feet, she tipped her head and asked, \"You ever had a pedicure, Dash?\"\n\n\"Pedicure?\" I took a look down at my giant size fourteens and laughed. \"I don't think anyone would want to go near them, seeing as they're not exactly pretty.\"\n\nGrinning, she patted the couch. \"Come on, let me show you what it feels like. And you'll like it, I promise.\"\n\nI knew I'd enjoy having her hands on me. But whether it was a good idea or not, was another question.\n\nI noticed the tub of warm water she had on the floor. And my feet just barely fit inside, when she slipped her hands around my ankles and lowered them into the water.\n\n\"Feel nice?\" she asked, looking up into my eyes to gauge my reaction as she gently stroked her hands over my feet in the water, that seemed to be mixed with some kind of scented oil.\n\n\"Yeah, feels good.\"\n\nThen she picked up one of my hands, and carefully inspected it. \"I think I should do your nails too, while your feet are soaking.\"\n\nI started to feel like one of her girlfriends, as she bent her head over my hand and went to work on tidying up my nails. I didn't mind her holding my hand, as she clipped and filed them, but if she suggested curling my hair, that would be hard no. Bad enough I had my feet soaking it sweetly scented water while was she was busy shaping and buffing my nails.\n\nWhen she started smoothing lotion over my hands, gently massaging it between my fingers, I could feel myself twitching in my boxers as she smiled into my eyes and asked, \"How does that feel?\"\n\n\"Really good.\" Fucking fantastic, if she really wanted to know.\n\nShe smirked. \"Told you you'd like it.\"\n\nWhat I liked was the feel of her soft, warm hands running over me, as she massaged the lotion into my palms and up over my wrists. Of course, with a teasing little smile in her eyes.\n\nThough I knew what would feel even better, was if she had her soft little hand wrapped nice and tight around what was pulsing in my boxers.\n\nThe way she was handling me, was starting to get me hard, and I knew she'd have to notice if I stood up. So, I was really relieved when she said, \"How about a movie?\" and reached for the remote.\n\nI thought that would give me some time for things to settle down. Then she took one of my feet out of the water, put a towel on her lap and started to dry it off.\n\nProbably the most sensual thing I'd ever felt was Peyton, rubbing my foot in her lap, with the fluffy white towel, even running it up to knees, just barely brushing my thighs. She really had my cock lurching now. And I have a feeling she knew it, too.\n\nIt would be so easy to slide her onto her back, tug down her little panties, push up her T-shirt, and...\n\n\"You want some clear nail polish on your nails?\"\n\n\"Oh fuck, no!\" This had gone far enough, when she wanted to start putting nail polish on me. I stood up and shook the water off my other foot and told her, \"Thanks. But I think I'd better get to bed, if I'm going to get an early start tomorrow.\"\n\nUpstairs, I tugged off my clothes and got in the shower. And with one hand on the wall and the other wrapped around my dick, I finished what she started. Wondering, as I felt the explosive rush shooting up my spine as I came, what the fuck I was thinking agreeing to stay with her.\n\nPEYTON\n\nI laughed as I watched Dash charging up the stairs two at a time, like his ass was on fire, guessing he wasn't exactly thrilled about having his nails done. Especially when I offered to paint them. But it was fun while it lasted.\n\nEven if he was a little skittish, it was still nice having him around; someone to share a meal with and to talk to, and even just hang out.\n\nBut I knew I'd have to watch my step, or he might get spooked and leave. I guess afraid in case we wound up in bed together. Though, I already knew I'd love to find out what he'd be like once I got him naked.\n\nHeaving a sigh, I reached for the pale pink polish, and started to paint my fingernails, knowing it was never going to happen.\n\nWhen I came down to the kitchen in the morning, I noticed the coffee was made, but Dash was gone. Taking a look outside, I noticed his truck was gone too, and just hoped he'd gone to the site, and hadn't decided to leave.\n\nWhen I got downtown, and walked inside, I was relieved when I saw him taking apart the old doors that led into the big back area of the building.\n\nHe stood up, smiled and said, \"Hey,\" when he saw me. \"Thought I'd get rid of these doors, so I could get started on the floors.\"\n\nI handed him another coffee and a breakfast sandwich I'd picked up for him. He'd left so early, I didn't think he'd had time to eat.\n\nHe smiled and said, \"Thanks,\" opened it up and dug in and started eating.\n\nI smirked as I watched him, and remarked, \"Your nails look nice.\"\n\nHe looked at them and chuckled. \"Yeah, and you should feel my feet, soft as a baby's butt.\"\n\nWe both laughed. And I was glad we were good, and he wasn't upset with me.\n\nWhen I turned around, I noticed a nicely dressed man in a light gray suit and pink shirt with a clipboard, looking around, taking notes. And I assumed he was the interior designer I'd phoned to come and take a look.\n\nI walked up to him and held out my hand. \"Hi. You must be Holden. I'm Peyton Calder, \"and this...\" I pulled a face as I waved my hand around, \"... is what I'm hoping you can transform into something beautiful.\"\n\nHe looked around then too, and I could see he was trying not to laugh, the place just looked so sad. Scuffed up, tired looking gray walls, grungy floors, ancient fluorescent lighting with only a few that still cast a little light, giving the room a really creepy glow.\n\n\"I've got a few ideas, that I think you'll like,\" he said, turning his attention back to me. Raising his eyebrows, I had to fight not to shiver as he slowly let his gaze slide over me.\n\nThe way he was looking at me, I felt so exposed, like he could see right through my clothes. And though he wasn't bad looking; tall, thin and kind of artsy with perfectly styled short blonde hair, and a little goatee. He just didn't do it for me.\n\nOut of the corner of my eye I noticed Dash passing by on his way out the door, and called out, \"Dash, come and meet Holden, the interior designer. And Holden, this is my good friend Dash.\"\n\nWandering over, Dash looked at me and smiled hearing me calling him that. He reached out, wrapped his hand around Holden's and gave it a firm shake. \"Good to meet you, Holden.\"\n\nI noticed when Dash let go of Holden that he looked a little pained as he shook out his hand. Which had me wondering just how hard Dash had gripped him.\n\nHolden gave Dash an odd look as he gingerly took his phone out of his pocket to get some pictures. As he wandered off into the back room, curious at the tension going on between them, I asked Dash, \"Have you two met before?\"\n\n\"Nope,\" he said. \"Never seen him before.\" As he walked outside, I thought I heard him mutter, \"But I sure as hell didn't like the way he was looking at you.\"\n\nLater in the afternoon, when I was on my hands and knees taking some measurement to try and see where to place the partitions, I noticed I had an audience. I could actually feel three sets of eyes burning into my backside, when I turned and saw three of the crew standing and watching me, slyly grinning.\n\nBefore I could say anything, Dash walked out of the backroom and saw them watching me. Striding over, he pointed a finger at them. \"You guys got nothing to do? I'll give you something to do.\" He nodded his head at the doors to the loading dock. \"Follow me, guys. There's shit loads of stuff that needs to go in the dumpster, so grab some shovels and get to it.\"\n\nI actually laughed a little as they followed behind him, without uttering a word. Though I hated to admit it, I liked that the crew didn't argue when they were dealing with Dash. Probably thinking I was soft, sometimes I think they took advantage of me. So, I guess I was lucky that Dash had come to help me when he did.\n\nJust before it was time to call it a night, I was outside walking to my car to charge my phone, when I overheard a couple of the younger guys, breaking down boxes, mumbling something about Dash. Of course, my ears perked up. Curious, I left my car door open so I could hear them.\n\nIt was a struggle not to laugh when I overheard the taller one saying, \"He's practically pissing circles around her to mark his territory. Obviously, he's got something going on with the boss lady. So, I don't know about you, but I'm going to back the fuck up and leave him to it. I'm not getting in shit for checking out his woman.\"\n\nThe shorter one nodded. \"Yeah, I hear ya. This gig's at least a few months' work. And I can use the money. So, I'm just going to keep my head down and do my freakin' job.\"\n\n\"Yeah, no way I'm tangling with that asshole.\"\n\nBack at home that night, Dash and I were having burgers and salad on the patio. As he was pouring me a glass of wine I smirked and told him, \"You know the crew's a little afraid you.\"\n\nHe just shrugged and said, \"Good. As long as they keep working. You hired them to do a job Peyton, not to sit around staring at your ass.\"\n\nI just shook my head at him as I remembered what they said about him marking his territory, wondering if there was anything to it.\n\nThe next day, I noticed a change. Everyone seemed to be busier, and no one was hanging around talking or standing around outside having a smoke, like they usually did.\n\nCould be Dash was right, and they were finally realizing they were supposed to be here to work.\n\n***\n\nSaturday, the day of the banquet, I was a bundle of nerves. I was having my hair done, and still had to pick up my shoes, and check in with the hotel, and at least a dozen other things. As my hair stylist, Andre, kept droning on about his mother, and the fight they had over his dog chewing up her favorite pair of shoes, which was only making me crazier.",
        "Since I told Dash where I was going, he said he'd go and get his hair cut, too. Though I loved his hair, even if it was a little wild. I'd seen lots of guys with hair that brushed their collars, suited up for a night out. But I guess he'd decided to go all out for the event, knowing it was for a good cause.\n\nStill, I was curious to see what he'd look like, cleaned-up and polished for a change.\n\nBack at home, once I'd slipped into my dress, I was putting on my earrings, while trying to slide my feet into my shimmery pink shoes, when I heard a knock on my bedroom door. I called out, \"Come in,\" just as I got my earrings in and my shoes on.\n\nWhen Dash walked in, I could feel my mouth fall open. Holy shit, he looked hot. Really freaking hot.\n\n\"Do I look okay?\" he asked, looking down at himself. And I thought it was adorable that he sounded a little uncertain, obviously hoping I'd say he looked good.\n\n\"Dash, you look amazing. I mean you always look good. But wow, cleaned up, I'd say you're a ten.\"\n\nI'd never seen him blush, and thought it was the cutest thing ever to see him a little vulnerable, when he was usually so in control.\n\nThen he took a longer look at me. And the slow hungry look he gave me was nearly enough to set my panties ablaze as his eyes slid over every inch of me in my clingy, silver opalescent dress with the daring thigh-high slit. It was like New Year's Eve all over again. His eyes were so dark and stormy, and he had me so aroused, I could actually feel the heat pooling between my legs.\n\nUnable to resist, I walked over to him and whispered close to his lips, \"You've got something on your lip.\"\n\nHe brushed a hand over his mouth and said, \"What is it?\"\n\nI pushed up on my toes and pressed a kiss to the corner of his mouth and said, \"Just my lips,\" and gave him a wink. \"You look so good, I just had to kiss you.\"\n\nSmirking at the shocked look on his face, I thought I might as well mark my territory, too.\n\nIn case we had a few drinks, I called and got us a ride so neither of us had to drive. Dash slipped my matching silver shawl over my shoulders as we locked up the house and stepped outside.\n\nThen with his hand on the small of my back, he helped me into the limo.\n\nSitting in the back with him felt so intimate, like we were an actual couple, when sadly, I knew that we were just friends. Probably stuck forever in the friend zone.\n\nDash kept fiddling with his bow tie, so I batted his hands away and said, \"Here, let me do that,\" and straightened it for him.\n\nI could feel his eyes on mine as I adjusted his collar. When I looked up into his eyes, the way he softly whispered, \"You look so beautiful tonight,\" I'm sure I felt my heart melting.\n\nHovering close to his lips, I was so tempted to wrap my arms around him and kiss him. But I decided to wait and see how the night played out. Could be, we were both just a little nervous about the dinner. Though there was no denying the air between us was literally crackling with sexual tension, and I realized we were both having a hard time controlling our breathing.\n\nAs we headed east toward the hotel along the lakeshore, Dash slid his hand over mine and gave it a little squeeze. I looked up at him and smiled, just happy to be holding hands.\n\nAt the hotel, I had my arm through his as we stepped into the ballroom, that looked more beautiful than I even imagined. Utterly blown away, looking around, I whispered, \"Can you believe this?\"\n\nAll done in shades of blue and white with up-lighting shining over the deep blue silk covered walls all the way up to the ceiling, I'd never seen anything like it. Every table covered in glitter, with little candles circling the enormous white floral arrangements sitting in the center, it was like a winter wonderland. I was so delighted with how the room turned out, I felt giddy as I laughed and squeezed Dash's arm.\n\nNodding his head, looking impressed as he took it all in, he said, \"They really did an amazing job.\"\n\nI smiled, heaving an elated breath. \"I think the decorators really outdid themselves.\"\n\nI leaned into Dash, with his arm around my waist and whispered, \"Now I just hoped the food will be good. And everyone will have a good time, and be willing to pull out their check books to help the center get up and running.\"\n\nHe gave me a little squeeze. \"It's going to be a good night. I can feel it. And I'm really proud of you. You did such a great job putting this together.\"\n\nI hugged him back, so glad for his support.\n\nI began to feel a little anxious, wondering what they'd think as the room filled up, and people began milling around laughing and talking. I was relieved that so many people came up to me to say hello and tell me what a great idea they thought the center was, knowing how many women and families it would help.\n\nWhen I took a moment to look at the items listed for the silent auction, I got a little emotional realizing just how generous everyone had been. Dash was beside me, looking too. As he scanned the list, he said, \"Wow. I think I'm going to have to bid on a few things.\"\n\nThere were expensive His and Her watches, a diamond brooch, sportsy things like horse-back riding and ski lessons and even a Mediterranean cruise and a week in a five-star Mexican resort. And the list went on and on.\n\nI'd already phone and thanked everyone who'd been generous enough to donate. But once the auction was over, I planned to phone to tell them all how grateful I was, again.\n\nThe band struck up and Dash smiled as he nodded at the dance floor and sounded so proper as he asked, \"May I have this dance?\"\n\nI laughed, batted my eyelashes at him and said, \"Yes, you may.\"\n\nIt felt nice to be wrapped in his arms as we dance to a jazzy rendition of, The Way You Look Tonight. The way Dash was smiling into my eyes had me feeling all tingly when he surprised me and dropped a kiss on my forehead. As the singer crooned, 'I will feel a glow just thinking of you, And the way you look tonight. You're lovely, with your smile so warm, And your cheeks so soft, There is nothing for me but to love you, And the way you look tonight.'\n\nHis voice sounding a little ragged, Dash whispered against my ear, \"This was my mother's favorite song. She just loved Frank Sinatra.\"\n\nI remembered hearing that his mother died of cancer when he was still in high school, so I knew the song was bringing back memories for him.\n\nI hugged him a little tighter as we swayed to the music.\n\nWhen the song ended, he nodded at the bar. \"How about a drink?\"\n\n\"Sure. Some white wine would be nice.\"\n\nI'd barely stepped away from the dance floor and was walking over to our table, and my girlfriend Keisha looking all excited, rushed up, threw her arms around me and pulled me into a hug. She looked so happy for me, she was gushing, \"Peyton, I can't believe you put this together. I'm so glad you're doing what you always dreamed of, and this is all coming together for you.\"\n\nI nodded, looking around. \"I know. I can hardly believe it myself.\"\n\nWearing a little smirk, she wiggled her eyebrows. \"So, you and Dash, huh?\"\n\n\"No.\" I didn't want everyone gossiping about us, knowing Dash would hate it. \"There's nothing going on. We're just friends.\" Which wasn't exactly a lie, we were just friends, since we'd only ever shared one kiss.\n\n\"I couldn't believe it was him. He looks so hot tonight I barely recognized him. And if he was looking at me, the way he's looking at you, I'd be dragging him off somewhere to jump his bones.\"\n\nI laughed. \"Nice talk for a kindergarten teacher. But there's nothing going on. Dash is almost forty, and is nearly twice my age, So, I can't imagine him as anything but a friend.\"\n\nJust then, too late, I noticed Dash was standing right behind Keisha with our drinks beside our table. And I could see he looked stricken. I knew he must have heard what I said, when he put the drinks down, turned and walked away.\n\nOh god, what did I do?\n\nI went after him, reached for his hand and he turned and looked at me. I felt awful as I looked into his eyes, he just looked so hurt. \"I'm sorry, Dash. You know I didn't mean what I said. Keisha was poking around asking questions. And I just didn't want her spreading gossip about us.\"\n\n\"Well, I am going to be forty soon, so, you're right. And we should keep things the way they are, and just be happy to be friends.\"\n\nThat wasn't exactly what I was hoping to hear.\n\nWhen a bell softly sounded to let us know that dinner was being served, Dash took my hand and led me to our table.\n\nGradually the tension between us seemed to ease. And I noticed everyone seemed pretty happy with their dinner. Even the lady beside me was telling everyone the hotel must have vegans in the kitchen, because her meal was so good.\n\nBefore dessert was served, I leaned in and said to Dash, \"Now I have to get up and thank everyone. And I just hope I can get the words out.\" I got my speech out of my purse and took a deep breath, hoping my legs wouldn't give out on me before I even got to the podium, never mind finished my speech.\n\nSeeing how anxious I looked, Dash brushed his lip to my ear and said, \"Just pretend you're talking to me, and I'm the only one here, and you'll do fine.\"\n\nI nodded, gave him a smile, pushed my chair back and headed to the podium.\n\nOnce I had my speech in front of me, I looked out and gave everyone in the room the biggest smile I could muster as I said, \"I want to thank all of you for coming tonight.\"\n\nI could feel my palms starting to sweat and I swallowed hard, as I thought of all the families the money would be helping and knew I couldn't blow this.\n\nThen I turned my focus to Dash, gave him a smile and said, \"Every single dollar we're raising tonight is going towards helping women who need a hand getting back into the workforce. And helping these mothers to earn a decent living, will also help their families to have a better life. Thanks to your generosity, hopefully by Christmas, The Network will be up and running, and we'll have everything in place to give these women what they need to get back out into the workforce.\"\n\nWhen the applause died down, I looked over at the two tables of smiling faces of the people who would be working with me. I smiled back and said, \"And let's give a hand to the talented, dedicated people who will be working at giving everyone the help they need.\"\n\nAs everyone cheered, I said, \"Thank you again for all your help.\"\n\nWhen I sat back down at our table, Dash leaned in kissed my cheek and said, \"You did good.\" And I smiled, so glad to have him by my side.\n\nIt was a very quiet drive home. A little too quiet for my liking. Finally, I broke the silence and said, \"I think it went pretty well.\"\n\nDash just nodded and said, \"It did.\"\n\nI reached for his hand and gave it a squeeze. When he looked across the car at me, I said, \"Thanks for being there for me tonight, Dash.\"\n\nHe looked me in the eyes, stroked his thumb across my hand and whispered, \"I'll always be here for you, Peyton.\"\n\nI kept his hand in mine on the ride home, neither of us saying a word.\n\nWhen we got back to the house, we made our way upstairs, and when Dash just said, \"Goodnight,\" and went into his room, I could feel my shoulders slump as I went into mine.\n\nFeeling a little unsettled, deciding I'd sleep better if I had a shower, I slipped out of my clothes, kicked off my shoes, went and took off my makeup and brushed my teeth.\n\nSoaping myself up in the shower, I thought the night had been going great. And lately we'd been growing so close, until I went and opened my big mouth and ruined everything by saying that he was too old for me, and we could only ever be friends.\n\nI honestly never thought about the difference in our age. And I liked to think that we were way more than friends.\n\nStill re-hashing what happened as I stepped out of the shower, I reached for a towel and began to dry myself off. As I ran the towel between my legs, I shivered from the arousing little tingle that raced up my spine. Then heaving I sigh, as I hung up the towel, I just wished there was something I could do to show him how I felt.\n\nThen I heard the shower down the hallway, and I could picture him in there naked. Running his hands over that amazing body, all slicked up and soapy. Heat was pooling between my thighs, as I imagined how incredible it would feel to be in there with him, sliding my hands over all those muscles and of course down between his legs.\n\nThen I smiled to myself, knowing exactly what to do.\n\nI slipped on my little white silk robe, half wondering if I was crazy as I clutched a little something in my hand that hopefully I'd need.\n\nAnxiously biting into my lip, I tiptoed down the hallway, opened the door to his room, dropped my robe, closed the door behind me, rushed over and hopped in his bed.\n\nSitting up against the headboard, with the sheet pulled up just enough to cover the twins, the room was pitch dark, with just a sliver of light coming from under the bathroom door. Already aching with arousal, my nipples felt hard enough to cut glass, as little shivers of anticipation raced through me as I waited for him to come out.\n\nI could feel my heart pounding, when I heard the water shut off. The sound of him brushing his teeth, told me he was almost done. And I knew he was only seconds away from walking out and finding me in his bed.\n\nAll I could do was stare when I heard his hand on the doorknob as it turned. Every inch of me trembling, as the door began to open, with the bathroom light still on. I looked at him standing naked in the doorway, and I literally forgot how to breathe.\n\nOh my god, what a body. Nothing but solid muscle. He looked like a Greek god, sun bronzed and toned and deliciously ripped. My fingers were twitching, I wanted to touch him so badly.\n\nNarrowing his eyes, trying to see across the room, he squinted at the bed, and said, \"Peyton?\"\n\n\"I should hope so.\"\n\nHe chuckled, and said, \"What are you doing in here?\"\n\nTrying to keep a straight face, I pushed my hand down on the mattress and said, \"I just wondered if your bed was softer or firmer than mine. Because... I do like it firm.\"\n\nMy eyes drifted down over his big broad chest, and followed the dusting of dark hair that trailed all the way down over his six pack, to his... Holy crow! Was he ever big. And already rock hard.\n\n\"Peyton, I don't think we should be doing this,\" he said, as he approached the bed.\n\nMy eyes locked on his package, looking even bigger and harder the closer he got, I said, \"Well, looks like part of you disagrees.\"\n\nChuckling, he looked down at himself. \"Yeah, it's pretty much on stand-by whenever you're around. And knowing you're in there naked, it's not going to go down any time soon.\"\n\nI wiggled my eyebrows, pleased to hear that, and he laughed.\n\n\"Peyton, if this is about what you said tonight, you don't have to prove anything, I'm good with just being friends,\"\n\nI cut him off. \"Dash--\"\n\nHe looked at me and waited, and his eyes grew wide as I lifted the sheet, and said, \"Just get in here and shut up and kiss me.\"\n\nHe didn't put a up a fight. He just crawled in, wrapped me in his arms, and nearly kissed my face off. I don't know how long we kissed, because it seemed like we could have kissed forever.\n\nWhen we finally came up for air, both of us were breathing pretty hard. Running his hands down over my back, smoothing them over my backside, and giving me a little squeeze, he said, \"You're just so soft, you feel like silk.\"\n\nI actually liked that his hands were a little rough and calloused. It felt good to feel a bit of friction as he ran his big, strong hands all over my body. He felt like a real man should feel, and smelled like one, too. Musky with a hint of spice, I just loved his masculine scent.\n\nHis eyes on mine, he cupped one of my breasts in his hand and said, \"Just like I thought, a perfect handful.\"\n\nSmirking, I slid my hand down between us, and wrapped my hand around him, chuckling at the way he groaned as I said, \"Turns out I was right too, and you're way more than a handful.\"\n\n\"You don't know how many times I've dreamed of being with you like this,\" he said as I traced my fingernails up down and along his shaft, teasing and testing to see what he liked.\n\n\"That makes two of us,\" I said as I slid my leg over his hips and blanketed him with my body, loving the feel of wrapping myself around him, as he wrapped me in his arms. He just felt so solid and so big and hard and warm. He was the like the perfect teddy bear, at least, if teddy bears were hung the way that he was.\n\n\"Oh, fuck that feels good,\" he said, as I slid my whole body up and down along his erection, even cupping him between my breasts. The more I teased him, the stickier he was getting me, so I knew he was getting close.\n\nHis breathing choppy, he clutched my ass tight in his hands, groaning as he slid my pussy up and down along his cock. Then he stopped and muttered, \"Damn it, I don't have a condom.\"\n\nI held my hand in front of his eyes and showed him the little red wrapper between my fingers, that I'd got from my bedside table. He laughed and said, \"Glad one of us is prepared.\"\n\n\"But not yet. First, I want to have a taste of you,\" I said, grinning, as I wiggled down between his legs took hold of him and slowly dragged my tongue along the length of him. I closed my eyes, savoring the feeling of every vein and every throbbing pulse, as I slowly slid my tongue over every inch of him from balls to tip. Dash groaned so deep, I could feel the vibration going through his body as I took my time, licking circles all around his swollen tip. Then shocked him when I suddenly plunged him into my mouth and began to suck.\n\nHis hips shot up and his fingers dug into my hair, as he muttered, \"Oh, man, Peyton, you're killing me.\"\n\nSmiling at his reaction, I let go of him with a 'pop' and went back to licking, him up and down and all around, till he said breathlessly, \"Give me the condom.\"\n\nRipping it open with my teeth, I winked and said, \"I got this.\"\n\nWatching his face, his eyes were steady on mine as I slowly rolled it down. Smoothing it with a few strokes, just to be sure it was in place, as Dash rolled his eyes, muttering, \"You trying to torture me?\"\n\n\"No. Why would I want to do that?\" Grinning up at him, I slid up over his body and licked around both his nipples. Giving them each a little suck and teasing nip of my teeth, till I had them fully erect, as his chest really began to heave.\n\n\"Well, it sure feels like it.\"\n\nWhen I straddled his hips, his voice was deep and gravelly as he said, \"I need to taste those lips again.\" As he tugged down my head and claimed my lips in a smoking hot kiss, I took him in my hand and we moaned into the kiss as I eased him carefully inside me. Ooh, he was a big one.\n\nSliding my tongue between his lips, as our tongues tangled and he thrust his hips up as I thrust down, I couldn't believe how good it felt to finally be making love with the man I realized I was crazy about.\n\nI could feel him beginning to tremble, as he got close, clutching my hips in a death grip. \"Oh fuck, I'm coming so damn hard,\" he murmured, as he threw back his head and let go. I could feel him pulsing inside me as I cupped his face in my hands and kissed him.\n\nHe blinked a few times, as he looked at me. Then he looked almost puzzled as he said, \"But, I don't think you came, did you?\"\n\nIt felt a little awkward, but I told him the truth. \"Actually, I've never climaxed.\"\n\nHis brow shot up. \"Never?\"\n\nEmbarrassed, I could feel a flush warming my skin all the way to my breasts, and wished I hadn't said anything. \"No.\"\n\n\"Well, we can't have that.\"\n\nThen he flipped me onto my back, and I assumed he'd dive between my legs and keep licking me till I burned. But he surprised me, when he started to softly kiss my feet, brushing his lips across the top of my foot and licking all around my toes. I could feel the pulse thrumming between my legs as he patiently made his way up to my ankles and teasingly licked and kissed into the hollows, till he had me shivering. Smiling up at me the whole time.",
        "\"Ooh, you're good at this,\" I told him, because he really was. I'd never known anyone to be so patient and tender. Especially since he'd already come pretty hard. He could have just given me a hug, rolled over and gone to sleep. But not Dash. Obviously, he wanted me to experience at least the same level of pleasure as what I'd given him.\n\n\"Every inch of you is like velvet,\" he whispered as he slid his tongue into the back of my knees, sending goosebumps racing over my skin, and making my nipples ache. Reaching up, he squeezed my quivering backside and let his fingers just barely tease my sex. He was edging me closer and closer, and yet he hadn't even put his mouth on me.\n\nAs he dropped little kisses up along my upper leg, and then teased me, when he just barely touched his tongue into the crease between my sex and thigh, before he started the slow journey down along my other thigh. I reached out and twisted my hands in his hair, my back arching off the bed as my pussy began to pulse like a second heartbeat.\n\n\"Dash, please,\" I begged him.\n\nI could feel him smiling against my skin, as he reversed course and began to lick his way up to where I desperately needed to feel his mouth. \"Here?\" he asked, as he dusted kisses across my mound, chuckling at the little tuft of blonde curls that probably tickled his nose.\n\n\"Lower,\" I said, pushing his head down, and spreading my legs open wide, hoping he'd take the hint.\n\nHe pressed a hot open-mouth kiss to the very top of my slit, then blew a warm breath across my sex. And when he just barely touched his tongue onto my quivering clit, I nearly bounced right off the bed.\n\n\"Oh, yes!\" I cried out, when he finally slid his tongue into me and slowly dragged it through my folds, till I was nearly ripping out his hair.\n\nI shivered as he eased a finger inside me as he teased my clit with fleeting little flicks of his tongue. And when he added a second finger and found my g-spot and latched onto my clit and started to suck, I literally saw stars. And I cried out, \"Oh, Dash, yes, yes, yes! Right there! Please don't stop. I had no idea it could feel this good.\"\n\nSlowly, as I began to come back down to earth, with his eyes on my face, he eased off and pressed a final kiss to my quivering sex.\n\nI thought he'd look smug having given me my first real live orgasm. But he surprised me when he looked into my eyes and whispered, \"You look so beautiful when you come, I want to see that every time we make love.\"\n\nHe held me for the longest time, stroking his hand over my back, and I felt so elated, I was almost afraid I'd to break into tears. I realized this was what it felt like to be with a man you really cared for.\n\nI ran a hand down over his body, and noticed he was hard again, and gave him a little smirk. \"Feels like I wasn't the only one who enjoyed that.\"\n\n\"Are you kidding. I almost got off just from watching you come.\"\n\nI grinned as I ran a finger around his beautifully shaped lips and said, \"You know, I do have more condoms.\"\n\nHe pulled me up and kissed my nipple, and drew it between his lips, teasing me with little flicks of his tongue. Smiling into my eyes, as he pulled back, and began messaging my other breast, he had me shivering and feeling a little breathless when he said, \"Then I think you'd better go and get them, because there so many things I'd love to do with you.\"\n\nI nodded, and managed to get to my feet. When I came back with the box of condoms and saw Dash naked on the bed, with his hands behind his head, and his big beautiful cock standing straight up in the air, I knew I'd never seen anything sexier. Especially considering I'd seen the Chippendale's in Vegas.\n\nHe took the box from me, and said, \"Get down on all fours.\"\n\nI'd never really had a lot of experience with sex, so doing it facing away from him felt pretty kinky. And as I felt him come up behind me, grasp my hip and slowly start to ease his way inside me, I could actually feel my eyes rolling to the back of head. Sure, that I'd never felt anything so tight, when he said, \"Damn, you feel good,\" I just nodded, too overwhelmed to speak.\n\nThis time he had me right on the edge almost from the start when he reached around and massaged my clit as he tugged at my nipple as he picked up his speed and really began to thrust. As he clutched my hips and took me a little harder with each stroke, I began to shiver, convinced I'd never felt anything as good.\n\nWe both cried out at the same time, as Dash threw back his head and growled, \"Oh, fuck, yeah,\" when he came hard enough that I could feel his release even through the condom. I was right there with him, squealing like a maniac and making noises I'd never even heard coming out of me before as I began to crest on a wave of sheer bliss.\n\nFeeling him pulsing inside me as he came, I tightened my inner muscles, and clenched around him. Going into a full-body shudder, my sex kept contracting as I climaxed, till Dash dropped onto my back, both of us panting. Dusting kisses up to my neck, he whispered, \"I think I'm going to have a really hard time leaving you, Peyton.\"\n\nThat had me smiling as he pulled out. But I felt even closer to him after he'd disposed of the condom, crawled back onto the bed, pulled me into his arms and just looked into my eyes. I was hoping he could see how much I loved him, so he'd realize this was something we should take some time to explore.\n\nWe were like honeymooners for the next few weeks. We'd come home, have dinner, his eyes would grow dark, and we'd find ourselves either naked in the family room, or up in his bed. We'd make love till we wore each out and fell asleep, usually wrapped in each other arms.\n\nOne night, as I watched him sleep. I thought he just he looked so vulnerable with his eyes closed, his dark hair a little tussled, and his chest softly rising and falling, that I was a little afraid to kiss him, in case I woke him up.\n\nPart of me was dying to tell him how I felt. But knowing he had to move on, because he wasn't the type to stay in one place for too long. As hard as it was to make love with him night after night and never say I word, I knew I had to keep my feelings to myself.\n\n***\n\nA few weeks later, with the walls all patched up and primed, I was looking through paint chips trying to decide what color would look best. With no guidance from an interior designer, since Dash had scared the last guy off, I was making all the decisions on the finishing touches.\n\nI wanted it to be something I could live with for a while, so I was agonizing over what color would work.\n\nI looked outside, and saw Dash helping two men unload some pretty heavy looking equipment from a truck.\n\nOnce they got it inside, Dash nodded at the two machines. \"Once we get these walls painted, I got everything I need to re-finish the floors. But I'll need at least a day to do it with no one here. I've got a sanding machine that uses water, so there shouldn't be any dust. Then I've got to put the finish on, so no one can walk around till it's dried.\"\n\nI wrinkled my nose as I looked over the grungy dark gray floors, hoping he could at least make them look a little better than they did.\n\nDash must have read my mind. Brushing his lips to my ear he whispered, \"Trust me, okay? The floors will look brand new by the time I'm done, I promise.\"\n\n\"I just don't want you to spending days trying to clean it up, if it would be easier just to put down something new.\"\n\n\"I've worked with floors like this before. I know how to clean them up. And if you're not happy once I'm done... I'll... I'll let you paint my toenails.\"\n\nI threw back my head and laughed, as I pictured Dash with bright pink polish on all his toes.\n\n\"I trust you,\" I said, as I stroked a finger across his cheek. And I hoped he knew I wasn't just talking about the floors.\n\n\"So, have you decided on the color for the walls, yet?\" he said, looking around at the stark white walls.\n\n\"Not quite. I've narrowed it down to these three, but I just can't decide.\"\n\nI showed him the paint chips, and he took them from me, looked at them for a minute and said, \"Be right back.\"\n\nHalf an hour later, I saw him walking back in with a bag from the paint store. I chuckled as I watched him do three stripes of paint on the wall a few feet apart.\n\nHe explained as he closed up the paint cans. \"Thought it might be easier to choose if you could see the colors on the wall, instead of on those tiny little chips. And don't forget the floor will be a lighter gray with tiny specks of orange, red, black and white, once it's cleaned.\"\n\nI studied the floor more closely, noticing the colors he mentioned for the first time. Then I looked up at the three stripes of paint, and pointed at the one in the middle. \"I'm thinking this one. It's sort of a neutral blue-gray that should work pretty well with the floor once it's refinished.\"\n\nHe smiled, looking relieved that I'd finally decided. \"That's the one I would have picked, too.\"\n\nSmirking at him, I had a feeling no matter which color I chose he would have said that was the one he liked, just so we could get on with it. But I just nodded and said, \"Now I guess we'll have to decide how much paint we'll need and get these walls painted.\"\n\n***\n\nFinally, when everything was done, the place looked amazing. And Dash was right, the floors looked brand new and so shiny, I couldn't believe they were the same old floors.\n\nIt was a week before Christmas and we were just waiting for our phones to be installed. Our big \"The Network,\" sign still had to be installed. And we were still waiting for the window coverings to be delivered that I'd found that let light in, but wouldn't let anyone see inside.\n\nDash stood looking at the bare windows. I guess eager to get everything done, he said, \"You know, I could get some blinds, and we could put them up today. Then you could open and close them if you wanted, to get some light in.\"\n\n\"The reason I need the type of blinds I ordered, is that some of our clients are getting out of bad relationships. And they don't want anyone to know where they are. Since we're on a busy street, I want to be able to look out, without anyone being able to look in and see who's inside, looking for a job.\"\n\nHe nodded as he looked at the wall of windows. \"Yeah. That makes sense. Guess it's the same reason you've chosen a name that's kind of ambiguous, so no one will know the type of client you're working with.\"\n\n\"Exactly.\"\n\nDash nodded as he looked over the office and seemed pleased as he gave me a smile. \"You know, this place looks really good now.\"\n\nStill wondering about the basic black desks and chairs, I'd chosen, I looked around, too. \"You really think so?\"\n\nNormally we avoided PDA, especially here, where the staff were always speculating about the two of us. Still, Dash reached for my hand and gave it a little squeeze. \"You know I'd never lie to you. You did a really good job in here, Peyton.\"\n\n\"Well, you did most of the work.\"\n\nEver modest, he just shrugged and fluffed it off. Then my heart sank when he said, \"Well, now that this is finished, guess it's time I moved on to my next project.\"\n\nBefore I could think of what to say, I noticed a woman outside with a little boy, and the way she was trying to get a peek inside, I thought I'd better go out and talk to her.\n\n\"Is this the place where you help people find jobs?\" she asked, the moment I stepped outside.\n\nI noticed she clutching a manila envelope, probably with her resume. \"Yes. This is The Network. We're not quite open yet, but hopefully we'll be up and running by next week.\"\n\nShe looked crestfallen as she glanced at her son and said, \"Well... I guess I can try and come back.\"\n\nWhen she turned to leave, I said, \"Wait. Is that your resume in the envelope?\"\n\nShe nodded, looking hopeful. \"Yes. I had my sister print it out for me.\"\n\n\"Well, I can take it. And I'll see if we've got anything that might suit you.\"\n\nShe looked so relieved as she handed it to me. Grasping my hand tightly, she said, \"Thank you so much. I've been out of work for over six months and I've tried everywhere, but no one's hiring.\"\n\n\"Is your contact information inside?\" When she nodded, I said, \"Then we should be in touch with you soon.\"\n\nShe picked up her boy, settled him on her hip and said, \"Bless you.\"\n\nWhen I went back inside, Dash had been watching and said, \"Looks like you got your first client.\"\n\nI nodded as I watched her walk to the corner to cross at the light. \"Yeah. And she sounded pretty desperate.\"\n\n\"Do you think you might have something for her?\"\n\n\"I sure hope so. I've been doing a lot of networking and I've already got quite a few jobs lined up, so hopefully there'll be something for her.\"\n\n\"This is a really good thing you're doing, Peyton. Having a place like this, and experienced people to work with them to help them find something, will change a lot of these women's lives.\"\n\n\"I'm hoping it will.\" I watched the little boy looking back and I waved, not even sure if he could see me as I hoped they'd having something to eat tonight.\n\n\"I'm going to put up some more shelves, so you'll have a place to store all those shoes you just had donated,\" Dash said, bringing me back to where we were. He crooked his finger at Lonnie, who was carrying some empty boxes outside. \"Lonnie, when you're done with that, grab your tool belt. We got some shelves to put up.\"\n\nI smiled when he said, \"Sure, Dash. I'll be right with you.\" Lonnie seemed to like working with Dash now, I guess appreciating how much he was learning, getting a chance to work alongside him. Especially since he was one of the ones who'd been muttering about him outside, saying he planned to stay out of his way.\n\nWhile Dash was waiting, I said, \"Since we'll be ready to open around Christmas, I was thinking we should have a party. Provide a hot dinner, and gifts, make everyone feel a little more festive. Especially being out of work at this time of year, it might help lift their spirits.\"\n\nWhen Dash just nodded and didn't say anything, I said, \"But I guess you'll be gone by then.\"\n\n\"Yeah.\" He nodded. \"I probably will. I've been looking at a few houses. And the one I'm probably going to put an offer on is about five hours away.\"\n\nI swallowed past the lump in my throat, realizing how much I was going to miss him, and I put a smile on face and told him, \"Well, I hope it works out for you.\"\n\nAs I watched him walk into the back room, I remembered that I had a bone to pick with him. And while we were having dinner, I planned to bring it up.\n\nI was about to head out and grab some lunch when I almost bumped into a man coming through the doorway with his head tipped back looking up, I guess looking to see if he was in the right place, since there was no sign.\n\nWhen he lowered his gaze and looked at me, I gasped. \"Oh my god, Dad. What are you doing here?\"\n\nAfter he kissed me on both cheeks, he gave me an awkward smile. \"Well, I was talking to your brother Josh. When I asked about you, and he told me what you were up to. And I just wanted to tell you how proud I am of you, and see if there was any way I could help.\"\n\nIt had been nearly a year since I'd seen my father. He hadn't changed much, same deep tan, from all the hours he spent in the sun. Maybe a little more gray in his hair. But otherwise, he looked as fit and healthy as the last time I'd seen him at my niece's baptism.\n\n\"Well, come on in, and I'll show you around.\"\n\n\"This is our waiting area,\" I said pointing at the couches, with the basket of toys on the floor and bookshelf loaded with books and magazines that people could take if they wanted, or just read while they waited.\n\nHe nodded thoughtfully as I gestured at the individually partitioned desks where some clients were talking with our staff about updating their resumes to help them find the perfect job. Careful not to disturb them, I kept my voice down as I told him, \"This is where we meet the clients to help them with their job search.\"\n\nI opened the door in the back and looked around to make sure no one was walking around half-dressed, before I waved him in. \"And this big room, is our change area, and salon. The ladies can help themselves to some new clothes, have their hair styled, even get some make-up tips from our talented beautician.\"\n\nAngela, our hair-stylist face broke into a smile when she saw I was showing someone around. \"Isn't it amazing what she's done?\" she said to my dad.\n\n\"It certainly is,\" Dad replied, looking wide-eyed as he took it all in. Then he looked at me and said, \"But how are managing to pay for all this?\"\n\nI took him back to the outer office, so we could talk in private while I explained where the money was coming from. \"Well, we had a charity dinner and silent auction a few months back. And a lot of people have been very generous.\" I winced as I admitted, \"And I've been using some of the money in my trust fund, to get the place up and running. But now it's just the bills and salaries for the employees and of course the rent I have to worry about every month.\" I pointed back at the room with the clothes. \"Thankfully, that's all been donated, and we're getting new things in every day. And we're planning another fund raiser in the New Year, so that should help.\"\n\n\"Well, I hope this will helps, too.\" My dad handed me an envelope and said, \"That's the deed for this place. You own it now, so you won't have to pay rent anymore.\"\n\nI blinked as I turned the envelope in my hand. \"Dad, you didn't have to do this.\"\n\n\"This is such a worthwhile project. I'm just happy to help any way I can.\" He stroked my arm as he said, \"I know I haven't been the greatest dad. It was such an acrimonious break up when your mother and I divorced. Things had gotten so nasty, I just wanted to get as far away from her as I could. And I think she felt the same way about me. But we're starting to talk again, and we both feel like we should have done more for you growing up. I know it's a little late, but I want to be here for you now.\"\n\nI felt stunned, not even sure what to say. I loved my parents, though we'd never been all that close. But the last thing I ever expected was for them to want back in my life.\n\nI held up the envelope. \"Well, then thank you for this, Dad. It'll really help with my budget, not having to worry about paying the rent every month.\"\n\n\"Oh, and there's one other thing. Your mother and I want you to have the house. We gave your sister money for a house when she got married. And we transferred the same amount into your brother's bank account. So, we want you to have your own home, too.\"\n\nHoly crap. I didn't know what to say. It was almost Christmas, and it looked like Santa had come early for me.\n\nHe held up his hand, I guess sensing I was going to object and said, \"We've already changed the name on the deed, so the house is yours. This way, you'll know you've always got a home, even if something happens to us.\"\n\n\"I don't know what to say, Dad. I've managed on my own for so long, this is kind of hard to wrap my head around.\"\n\n\"Well, you shouldn't have had to manage on your own. But I want to be part of your life now, if you'll let me.\"\n\nI reached out and gave him a hug, surprised by how hard he hugged me back. Both of us were laughing and a little teary eyed when we pulled apart.\n\nAs I walked him to the door, he said, \"I'd like to have dinner with you one night, so we can catch up. And I want you call me when you've organized the next fund raiser. I've got lots of friends with deep pockets who'd be happy to help with a project as worthy as this.\"\n\n\"Sure. I'd love to have dinner, Dad. And...\" I shrugged. \"Thanks for everything.\"\n\nHe smiled as he walked away, and kept turning back and waving till finally he disappeared around the corner.\n\nI'd been on my own for so long, it felt kind of odd to have my father back in my life. But it still felt good.",
        "I decided not to say anything to anyone, not even Dash. It still felt strange that my father had suddenly grown a conscience, and wanted to make sure I was okay.\n\nOn the way home, I picked up a Greek salad and a hot cooked chicken for dinner, and as I was tossing the salad, Dash walked in. The moment he saw me, he smiled, slipped his arm around me and pressed a kiss to my cheek. I smiled, loving how affectionate he was, always kissing and touching me, and of course copping feels of my backside.\n\nAs I looked around the kitchen, it felt strange to know that it was mine now. Though I knew it would feel kind of empty as soon Dash moved on.\n\nSince the weather turned and it was getting colder and feeling like more winter, though we loved to eat outside, we'd started eating in the kitchen. But I decided it might be fun for a change to eat in the dining room, maybe for the first and last time, considering he'd be gone soon.\n\nWe carried the food in together and put it down on the table, set with white china plates and crystal goblets. Since we never used the room, and normally had the doors closed, Dash looked around and noticed it had been redecorated. The dark walls and antiques were gone and everything was white with a few pale pink and mint green accents.\n\n\"What happened in here?\" he asked as he took in all the new furniture and tropical themed art work. \"Did your mother have to get a new dining set 'cause you and your friends messed up the finish on her old table?\"\n\nChuckling as I served us up some salad, I shook my head. \"No. She didn't even notice. She stopped in for a few weeks last year on her way to St. Barts, and decided on a whim she was tired of the antiques and wanted the room to look more tropical. She called her interior designer and told him she wanted to see it transformed before she left. When I heard her telling him that she planned to throw all the old stuff out, I got someone to pick it up and donated it to Habitat for Humanity. So at least someone's enjoying it.\"\n\n\"So, she never even noticed the table?\"\n\n\"Nope. I knew she wouldn't. When she comes, she doesn't normally stay here. Usually, she's out with her friends. And they go off on little trips, for some girl time.\" I was tempted to mention my dad's visit. But if Dash asked why he came, I didn't want to lie. So, I just said, \"Probably for the best. We get to see each other, but not long enough to get on each other's nerves.\"\n\nDash just nodded, though he looked a little confused. I guess because he got along so well with his dad. I'd heard them talking on the phone, and they sounded like best friends the way they laughed and teased each other.\n\nThen as I remembered what I had to tell him, I looked at him and said, \"You know what I noticed today?\"\n\n\"No idea.\"\n\n\"I noticed you've been working hard and helping me get the office ready for months, and I haven't seen a single invoice.\"\n\nHe shrugged. \"That's odd. Could be something wrong with my email.\" Obviously trying to keep a straight face, I noticed he quickly changed the subject. \"But it looks like everything will be done in the next few days, in time for your grand opening.\"\n\n\"I'll be so glad when we can finally open our doors and start getting to work.\" Kind of dreading what he was going to say, I asked, \"Will you be here for the opening?\"\n\n\"Not sure. I've got to go take a look at that house I mentioned, before someone snaps it up. And if it looks like a good investment, I'll have to look for somewhere to live in the area, while I work on it.\"\n\n\"Well, if you could be there for the opening, it would nice. Especially since you put so much work into it.\"\n\nHe reached over, squeezed my hand and said, \"We'll see.\"\n\nWe were in bed that night, and as Dash traced a finger along my cheek, he said, \"You know, one thing I wondered, was what made you decide to start something to help all these women. I thought you'd be going into banking like your dad, socking away money left and right.\"\n\nIt took me a moment to answer, especially after the visit I had with my father, that I hadn't mentioned yet.\n\nFinally, I heaved a breath and said, \"I know I grew up wanting for nothing, at least nothing material. But I realized pretty young, that money really can't buy happiness. And there were times in my life when I wished there was someone there for me.\" He reached for my hand and held it as I said, \"It was lonely growing up in boarding schools, especially since all the other kids went home for the holidays, but I never did. So, I know what it's like to feel helpless and alone with nowhere to turn. I decided if I could help even a few other women to never feel the way I did, it would be worth it.\"\n\nHe was quiet for the longest time, till finally he tipped up my chin and kissed me. Then he looked into my eyes and said, \"You know when I go, I'm going to be taking a big piece of you with me.\"\n\nI could feel my bottom lip starting to tremble and I really didn't want to cry, so I made a joke of it. \"Well, just as long as it comes off my ass, I won't mind.\"\n\nDash chuckled as he tucked a few strands of hair behind my ear. \"You know what I mean. I've really enjoyed this time with you, Peyton. And I'm going to miss you.\"\n\nI just buried my face in his neck and wrapped myself around him, because I couldn't get the words out. I was so in love with him. And now I was going to lose him.\n\nThe next day, everyone stood up and cheered when Lonnie and Dash came in carrying a big Christmas tree, to finally make the place look festive. With the weight of it on their shoulders, Dash looked at me and said, \"Where do you want it?\"\n\nI didn't know he was buying a tree, so I had to think of the best place to put it. \"Umm...\" I tapped a finger on my chin and looked around thinking of the kids, and not wanting them to play with the lights or get hurt if any of the decorations broke. And I didn't want it too close to the door, in case it got knocked over.\n\n\"Hello. This thing's not exactly, light. And poor Lonnie looks ready to drop.\"\n\nI looked at them and pulled a face, as I realized they were still holding it. \"Okay, sorry, guys. Then, I guess just put it near the reception desk, away from the waiting area and the kids' toys.\"\n\nThey leaned it up against the wall. And Dash went out and got a tree stand from his truck, along with bags of decorations. It didn't take long to set up. He cut the wrapping off and the tree opened up, looking absolutely beautiful.\n\nHe gestured at the room. \"Come on, everybody let's get this thing decorated.\"\n\nLonnie put on some Christmas music, and everyone got into decorating the tree while we listened to Rudolph, the Red-Nosed Reindeer.\n\n\"Thank you, guys. It really is a gorgeous tree,\" I said as I looked it over\n\n\"I hoped you'd like it,\" Dash said, smiling as he stood back and admired it, so tall and majestic and all aglow with its twinkling lights, already filling with the room with a nice pine scent, with a gold star shimmering on top.\n\nChristmas Eve, the night of our Christmas party as well as our grand opening, the snow was lightly falling outside. But all of us were warm inside, with the room looking so festive, with the tree lit up and red and white decorations scattered around the room. And little snowflakes some of the kids had done, strung across the front desk.\n\nI sighed as I looked at all the happy faces, and knew the only thing missing was Dash. He'd texted me and said the house he was thinking of buying looked good, and he was going to call a housing inspector before he put in an offer.\n\nAlthough I was happy that he was back doing what he loved, I missed him so much it hurt.\n\nEveryone turned and looked, the kids all wide-eyed as Santa came in, calling out, \"Ho, Ho, Ho,\" with a big bag of toys slung over his back, and two helpers with even more bags full of gifts.\n\nI felt a tear running down my cheek, when I looked at the face behind the big white beard and realized it was Dash.\n\nOne by one the kids all had turns telling him what they were hoping Santa would bring them, as they were each handed a present to unwrap.\n\nWith the kids all happy and playing with their new toys, Dash looked over at me and patted his knee. And he made whole room laugh when he said, \"Why don't you come sit on my knee and tell Santa what you'd like for Christmas, little girl?\" I could feel my cheeks burning as everyone waited to see what I'd do.\n\nSmirking, I played along and got on his lap, slipped my arm around his neck, and whispered in his ear, \"I think you know what I want. But we'll have to get you out of this red velvet suit to make it happen.\"\n\nDash's eyebrows shot up and he said, \"Oh, I thought I saw your name on the naughty list.\" I guess assuming I'd suggested something sexy, everyone laughed even harder.\n\nSmiling, he gave me a little squeeze and said, \"Well, Santa's only got one wish.\" He reached in his pocket and pulled out a blue velvet ring box. I could hardly believe it was happening, when he looked into my eyes and said, \"I love you, Peyton. And would love to spend the rest of my life with you. Will you marry me?\"\n\nThe whole room broke into cheers when I nodded my head, and said, \"Yes. I would love to marry you, Dash.\"\n\nA little boy's mouth fell open when heard our exchange. His eyes as big as saucers, he looked up at his mother and said, \"But isn't Santa already married to Mrs. Claus?\" Crossing his little arms over his chest, he shook his head, looking at the two of us. \"I don't think she's going to be too happy when she hears about him messin' around like this.\"\n\nHis mother picked him up, pressed a kiss to his cheek and laughed with the whole room, as the little guy looked around at all of us, probably wondering what was so funny.\n\nI whispered to Dash, \"Poor mom's going to have a lot of explaining to do when she gets him home.\"\n\nDash grinned. \"And I'm going to have the best night ever, when I get you home. Because there's only one more thing on my Christmas wish list that I can hardly wait to unwrap.\"\n\n\"What's that?\"\n\nHe tugged my head down, kissed me and whispered, \"You.\"\n\n***\n\nWhen we got home, Dash was so eager to get me naked, we never made it upstairs. But it felt really romantic making love by the light of the fire in front of the fireplace, with the Christmas tree twinkling in the family room and Bing Crosby's 'I'm Dreaming of a White Christmas,' playing on his phone.\n\nSmirking at the heated look in Dash's eyes, I was looking forward to a hot Christmas now that I had my man.\n\nTracing a finger around his lips, I asked, \"So, are you still looking at that property to renovate?\"\n\n\"No.\" He shook his head, and gave me a little squeeze. \"My heart wasn't in it. I found out a young couple were hoping to buy it and fix it up and start a family. So, I told the agent it wasn't what I was looking for.\" He pressed a kiss to my forehead. \"And as soon as I got there and looked at that house, all I could think of was you. And I knew I didn't want to be away from you anymore.\n\n\"I really enjoyed fixing up that old supermarket, and making it into an office. And I was thinking if Lonnie was looking for a job, we could look for places like that around here. It's kind of a fun challenge, and I think I'd like the change.\"\n\n\"I think Lonnie would love to learn everything he can from you. He's really grown up a lot since you got him to focus on doing a good job,\" I said.\n\n\"The other thing is, I've got some money socked away. So, I was thinking, we could look for a house of our own with a nice big yard. And maybe after we're married, we could think about starting a family.\"\n\n\"What do you think of this neighborhood?\"\n\nHe nodded. \"I like it around here. And if you want, we could check the listings.\"\n\n\"Or, we could stay right here.\" I told him about my dad coming to see me, and telling me that the house was mine now, and so was the office.\n\nLooking surprised, Dash pulled back and said, \"What made him decide to do that?\"\n\n\"I don't know. Apparently, my mother was fine with it, too. And they've done it for all three of us, to be sure we all had a place to call home.\"\n\nDash looked around and said, \"It is a nice house.\"\n\nI nodded as I crawled on top of him and agreed. \"It is. But I don't care where we live as long as we're together.\"\n\n\"You got that right.\"\n\nThen he picked me and made me squeal when he carried me upstairs, telling me, \"Well, seeing as tomorrow's Christmas, we'd better get to bed. Or Santa will pass right by, and not leave any presents, if he sees we're still up.\"\n\nI looked down at him and smirked when I saw how hard he was. \"Well, it that's true, then I guess Santa's going to be flying right over this house probably for the rest of our lives, knowing you.\"\n\nDash threw back his head and laughed as he carried me into the bedroom, and dropped onto his back on the bed. \"You see, this is why I love you,\" he said, as pulled me on top of him and looked into my eyes. \"You can get me so hot and make me laugh so hard, all in the same breath.\"\n\n\"Speaking of which...\" I wrapped my hand around him and got him groaning as I started to stroke him up and down.\n\nThen he looked at me, with my eyebrow cocked and waiting, and he chuckled and said, \"I know, just shut up and kiss you.\"\n\n\"You got that right.\"\n\nAnd as I sank myself down, and kissed my new fianc\u00e9 right back, I whispered against his lips, \"But only because I love the way you kiss."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "kissing",
        "sex",
        "breast play",
        "oral"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/im-dreaming-of-a-hot-christmas"
}